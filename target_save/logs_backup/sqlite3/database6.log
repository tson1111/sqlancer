--java.lang.AssertionError: the size of the result sets mismatch (0 and 1)!
---- SELECT * FROM t0 WHERE ((((t0.c3)IS NOT(t0.c3)) IN ((((t0.c2))<=((t0.c2)))))) ORDER BY '2030363727'  NULLS FIRST, ((((t0.c3)AND(t0.c3)))AND(t0.c3)) COLLATE RTRIM  NULLS LAST, (((((t0.c0))>((t0.c2))))+(((t0.c3) NOT NULL))) ASC  NULLS LAST;
---- cardinality: 0
---- SELECT DISTINCT * FROM t0 WHERE ((((t0.c3)IS NOT(t0.c3)) IN ((((t0.c2))<((t0.c2)))))) ORDER BY '2030363727'  NULLS FIRST, ((((t0.c3)AND(t0.c3)))AND(t0.c3)) COLLATE RTRIM  NULLS LAST, (((((t0.c0))>((t0.c2))))+(((t0.c3) NOT NULL))) ASC  NULLS LAST;
---- cardinality: 1
--	at sqlancer.ComparatorHelper.assumeResultSetsAreSubset(ComparatorHelper.java:126)
--	at sqlancer.sqlite3.oracle.SQLite3SubsetOracle.checkSubsetQuery(SQLite3SubsetOracle.java:244)
--	at sqlancer.sqlite3.oracle.SQLite3SubsetOracle.check(SQLite3SubsetOracle.java:111)
--	at sqlancer.ProviderAdapter.generateAndTestDatabase(ProviderAdapter.java:49)
--	at sqlancer.Main$DBMSExecutor.run(Main.java:323)
--	at sqlancer.Main$2.run(Main.java:507)
--	at sqlancer.Main$2.runThread(Main.java:485)
--	at sqlancer.Main$2.run(Main.java:475)
--	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
--	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
--	at java.base/java.lang.Thread.run(Thread.java:831)
---- Time: 2021/05/21 16:03:47
-- Database: database6
-- Database version: 3.34.0
-- seed value: 1621584209264
PRAGMA cache_size = 50000;
PRAGMA temp_store=MEMORY;
PRAGMA synchronous=off;
PRAGMA encoding = 'UTF-8';
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INTEGER , c1 REAL , c2 BLOB , c3 BLOB );
UPDATE OR IGNORE t0 SET c0 = NULL, c3 = 0.14241058119951855, c3 = '0.14241058119951855' WHERE ((((t0.c2)>(t0.c3)))OR((((t0.c0)) BETWEEN ((t0.c3)) AND ((t0.c1)))));
UPDATE t0 SET (c2)=('0.14241058119951855') WHERE CASE WHEN ((t0.c3)GLOB(t0.c3)) THEN HEX(0.1563493347093463) END;
INSERT OR IGNORE INTO t0(c2, c0) VALUES ('84439591', 8.4439591E7);
INSERT OR ROLLBACK INTO t0(c2) VALUES (0.14241058119951855), (0.3142087394322326), (0.3142087394322326), (9223372036854775807);
ROLLBACK TRANSACTION;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), ('91692399');
UPDATE OR IGNORE t0 SET (c0, c3)=('瞡0zQx{Z⃶', '') WHERE ((((t0.c1)GLOB(t0.c3))) IS FALSE);
ANALYZE sqlite_master;
UPDATE OR IGNORE t0 SET c3 = 0.9998901375030275;
ANALYZE sqlite_master;
END TRANSACTION;
UPDATE OR IGNORE t0 SET c3 = x'', c1 = '-1093765215';
INSERT OR FAIL INTO t0(c1, c2) VALUES (1588864928, 0.6244539059642);
INSERT OR FAIL INTO t0(c1, c2) VALUES (NULL, x'');
UPDATE OR FAIL t0 SET c0 = '408006391', c2 = 793379257;
PRAGMA temp.secure_delete = false;
UPDATE OR FAIL t0 SET (c0, c2)=(NULL, 0.7827934520916954);
INSERT OR IGNORE INTO t0 VALUES (0.29247812433876574, NULL, 0.14241058119951855, 22274403), (x'18', '793379257', -1093765215, x'1ac57f');
CREATE UNIQUE INDEX IF NOT EXISTS i24 ON t0(CAST(((((((((NULL)OR(c2)))AND(c3)))OR(c1)))AND(c0)) AS BLOB) COLLATE NOCASE DESC,((((c2) NOT BETWEEN (x'1f') AND (c3)))*(c2)) COLLATE RTRIM ASC,2145102433 COLLATE NOCASE,(((c1)) NOT BETWEEN ((((c0) IS TRUE))) AND ((((c2) NOT BETWEEN (c0) AND (c2))))) COLLATE RTRIM DESC) WHERE (+ ((c0 IN (c0, 'L'))));
UPDATE OR IGNORE t0 SET c1 = '1665093305', c2 = 0x7e66424f;
INSERT OR ROLLBACK INTO t0(c1, c0, c3, c2) VALUES (91692399, x'', 0.5601192288530372, 2.2274403E7), (x'eca2b9', x'', '91692399', 2145102433);
ROLLBACK TRANSACTION;
INSERT OR IGNORE INTO t0 VALUES (x'', x'5258', '0.6244539059642', '0.5601192288530372');
BEGIN  TRANSACTION;
CREATE UNIQUE INDEX i71 ON t0(((((c2) IS FALSE)) NOT BETWEEN (((c3) BETWEEN (c0) AND (x'1fb5'))) AND (0X7e26ad1)) COLLATE RTRIM,((((c1)=(c3)))GLOB(c3 COLLATE BINARY)),((JULIANDAY(c0, c0, c0)) IS FALSE) COLLATE NOCASE DESC,c3 COLLATE NOCASE ASC) WHERE (NOT (load_extension(c3)));
CREATE UNIQUE INDEX i21 ON t0(((((((((((CAST(c2 AS BLOB))OR(CASE NULL  WHEN c0 THEN c3 WHEN c0 THEN c2 WHEN c0 THEN c3 END)))OR((((c1, c1))<((c2, c1))))))AND(((0x5716371)LIKE('463100845')))))OR((c3 IN (c2, c0)))))OR(((((c1)OR(c3)))AND(c2)))) COLLATE BINARY,CASE WHEN ((c3) IS FALSE) THEN ((NULL)GLOB(c2)) WHEN '-2070519921' THEN NULLIF(DISTINCT c0, c1) WHEN ((c1) IS TRUE) THEN LTRIM(c1, c3) ELSE (c1 IN (c2, c1, c1)) END COLLATE BINARY ASC,CAST((((c2, c3, c2, c1))>((c0, c3, c0, c1))) AS REAL) COLLATE BINARY ASC,JULIANDAY(((c1) IS FALSE), c3, c3 COLLATE RTRIM, ((c1)%(c3)), 1361730461 COLLATE RTRIM, ((c1)%(c0))) COLLATE NOCASE);
UPDATE OR IGNORE t0 SET (c0)=('-2070519921') WHERE (+ (t0.c2)) COLLATE RTRIM;
UPDATE OR IGNORE t0 SET c3 = '328240051', c2 = 'Ye>(rs', c1 = NULL, c0 = 'A';
ROLLBACK TRANSACTION;
CREATE UNIQUE INDEX i53 ON t0((((- (c1))) ISNULL),((((-2070519921)+(c1)))GLOB(LIKELIHOOD(DISTINCT c2, c0))) COLLATE NOCASE,(+ ((('') NOT BETWEEN (c2) AND (c2)))) COLLATE NOCASE,(((c1 COLLATE RTRIM, 0.8387542373737547, ((c3)*(c3))))<=((ABS(c3), ((c2)OR(c2)), 0.7728996542575353))));
CREATE UNIQUE INDEX IF NOT EXISTS i83 ON t0((((((((((c2, c1, c2))>=((c0, c2, c0))))OR((+ (c0)))))AND((c3 IN (c2, c2)))))OR(((c3)%(c1)))) COLLATE BINARY,((((c3)>(NULL)))%(((0.8546487469298777) BETWEEN (c1) AND (c1)))) DESC,((((c2)>=(c0)))&(((c0) ISNULL))),((RTRIM(c2)) BETWEEN ((c0 IN (c1))) AND ((c3 IN (c0, c2)))) COLLATE BINARY) WHERE CAST(0.4233179517376514 AS REAL);
COMMIT TRANSACTION;
UPDATE t0 SET (c0, c3)=(0.07108400879915133, '') WHERE (NOT ((t0.c0 IN ())));
UPDATE t0 SET c0 = 0.8387542373737547, c2 = 'r_uZt', c1 = NULL;
INSERT OR ABORT INTO t0(c3, c1, c2) VALUES (1.361730461E9, 'Ey<}QP', 0.29247812433876574);
UPDATE OR IGNORE t0 SET c1 = x'', c0 = x'', c1 = NULL;
INSERT OR IGNORE INTO t0(c1, c3) VALUES (x'', 0.09698193165437818);
ROLLBACK TRANSACTION;
UPDATE t0 SET (c2, c2)=(x'8686', 'Ye>(rs') WHERE CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN -2002036605 END COLLATE NOCASE;
UPDATE OR IGNORE t0 SET (c0, c0)=(0.09552963727931996, NULL);
REINDEX i24;
REINDEX;
INSERT OR IGNORE INTO t0(c0) VALUES (0.04270165029568196), (NULL), (NULL);
CREATE INDEX IF NOT EXISTS i62 ON t0((((c2, CASE c0  WHEN c0 THEN c2 WHEN '0.6244539059642' THEN c2 WHEN c2 THEN c0 WHEN c2 THEN '-24661732' END, ((c3)<<(c2))))>(((~ (c0)), ((c2)>=(c0)), ((c0) NOTNULL)))),((CASE WHEN c3 THEN c2 ELSE c2 END) BETWEEN (CAST(c3 AS REAL)) AND (0.7993203655842348)) COLLATE RTRIM,(((c1))>((c1))) COLLATE NOCASE ASC,'-887867236' COLLATE NOCASE) WHERE (((+ (c3))) BETWEEN (c2) AND (c3 COLLATE RTRIM));
CREATE INDEX i0 ON t0((((c3) NOT NULL) IN ()) COLLATE NOCASE DESC,0.3556816311744587 ASC,(NOT ((((((((('2120630863')AND(0.5258680427036373)))OR(c1)))OR(c2)))AND(c0)))) COLLATE RTRIM,CASE WHEN CAST(c2 AS NUMERIC) THEN c0 WHEN ((c1) NOT BETWEEN (c1) AND (c3)) THEN (+ (c0)) END COLLATE NOCASE) WHERE (((c2 IN (c2))) IS TRUE);
UPDATE t0 SET c1 = 0.1391465523136899, c0 = NULL, c3 = NULL;
UPDATE OR IGNORE t0 SET (c1)=(x'');
INSERT OR REPLACE INTO t0(c3, c2) VALUES (x'', 0Xffffffffdae98966), (0.8387542373737547, '䳶');
ROLLBACK TRANSACTION;
INSERT OR IGNORE INTO t0 VALUES ('IPp', -8.87867236E8, NULL, '?p''?n껷Ib'), (0.636106253447259, '-1429795020', '', 0X7e66424f);
UPDATE OR IGNORE t0 SET c2 = x'97', c1 = NULL;
UPDATE OR IGNORE t0 SET c2 = 1150649735, c3 = NULL WHERE load_extension(((t0.c3)*(t0.c0)));
UPDATE OR IGNORE t0 SET c1 = '-1254948714', c2 = 0.4606491472642875 WHERE NULL COLLATE NOCASE;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE INSTR(((t0.c0)||(t0.c3)), (- (t0.c0)));
INSERT OR IGNORE INTO t0(c1, c0) VALUES (0.8652301587247413, '22274403');
INSERT OR ROLLBACK INTO t0(c2) VALUES (x'40');
INSERT OR IGNORE INTO t0 VALUES (1150649735, NULL, 0.16261060245925785, 0xffffffffe9697d3d), (-2015125830, '-468446098', NULL, '931865725');
INSERT OR REPLACE INTO t0(c0) VALUES (0.06330767055065856);
UPDATE t0 SET (c0, c1, c0)=('b', '1361730461', NULL);
UPDATE t0 SET (c2, c1, c3, c3)=(x'565e', x'1a77', NULL, '-1330103509');
END;
ROLLBACK TRANSACTION;
-- SELECT * FROM t0 WHERE ((((t0.c3)IS NOT(t0.c3)) IN ((((t0.c2))<=((t0.c2)))))) ORDER BY '2030363727'  NULLS FIRST, ((((t0.c3)AND(t0.c3)))AND(t0.c3)) COLLATE RTRIM  NULLS LAST, (((((t0.c0))>((t0.c2))))+(((t0.c3) NOT NULL))) ASC  NULLS LAST;
-- cardinality: 0
-- SELECT DISTINCT * FROM t0 WHERE ((((t0.c3)IS NOT(t0.c3)) IN ((((t0.c2))<((t0.c2)))))) ORDER BY '2030363727'  NULLS FIRST, ((((t0.c3)AND(t0.c3)))AND(t0.c3)) COLLATE RTRIM  NULLS LAST, (((((t0.c0))>((t0.c2))))+(((t0.c3) NOT NULL))) ASC  NULLS LAST;
-- cardinality: 1
