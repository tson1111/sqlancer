--java.lang.AssertionError: the content of the result sets mismatch!
---- SELECT * FROM rt0 WHERE ((((rt0.c0)<<(rt0.c3)) IN ((((rt0.c2))<=(('b6u'))))));
---- misses: [1]
---- SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)<<(rt0.c3)) IN ((((rt0.c2))==(('b6u'))))));
---- misses: 1
--	at sqlancer.ComparatorHelper.assumeResultSetsAreSubset(ComparatorHelper.java:144)
--	at sqlancer.sqlite3.oracle.SQLite3SubsetOracle.checkSubsetQuery(SQLite3SubsetOracle.java:244)
--	at sqlancer.sqlite3.oracle.SQLite3SubsetOracle.check(SQLite3SubsetOracle.java:111)
--	at sqlancer.ProviderAdapter.generateAndTestDatabase(ProviderAdapter.java:49)
--	at sqlancer.Main$DBMSExecutor.run(Main.java:323)
--	at sqlancer.Main$2.run(Main.java:507)
--	at sqlancer.Main$2.runThread(Main.java:485)
--	at sqlancer.Main$2.run(Main.java:475)
--	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
--	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
--	at java.base/java.lang.Thread.run(Thread.java:831)
---- Time: 2021/05/21 16:03:55
-- Database: database8
-- Database version: 3.34.0
-- seed value: 1621584209266
PRAGMA cache_size = 50000;
PRAGMA temp_store=MEMORY;
PRAGMA synchronous=off;
PRAGMA case_sensitive_like=ON;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB );
CREATE TABLE IF NOT EXISTS t1 (c0 INTEGER NOT NULL ON CONFLICT FAIL , c1 TEXT , c2 REAL );
REINDEX;
ANALYZE;
ANALYZE;
VACUUM main;
END TRANSACTION;
COMMIT;
BEGIN  TRANSACTION;
DELETE FROM sqlite_stat1;
ROLLBACK TRANSACTION;
DELETE FROM sqlite_stat1;
BEGIN  TRANSACTION;
UPDATE OR REPLACE rt0 SET (c3)=(0.49871491179438554) WHERE ((((rt0.c2) NOT BETWEEN (-1821080067) AND (rt0.c0)))*((x'9b94' IN (rt0.c2))));
INSERT OR ABORT INTO rt0(c3) VALUES (0.3177366318083079);
ROLLBACK TRANSACTION;
ROLLBACK TRANSACTION;
ROLLBACK TRANSACTION;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL (((NULL, ((((((((((((x'')OR(t1.c0)))OR(rt0.c1)))OR(t1.c0)))OR(t1.c2)))OR(t1.c1)))AND(rt0.c1)), rt0.c0 COLLATE RTRIM))<((rt0.c3, (+ (t1.c1)), (((t1.c0, '1622520412', rt0.c0))>((rt0.c3, '-762890807', t1.c2)))))) FROM rt0, t1;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL), (x'');
PRAGMA main.automatic_index;
ANALYZE;
REINDEX  rt0;
BEGIN  TRANSACTION;
REINDEX;
INSERT OR IGNORE INTO t1 VALUES (0.8070445601083014, x'c1', '23e5)'), ('0.49871491179438554', x'', '0.8070445601083014'), ('Au', NULL, '-762890807'), ('-1821080067', x'700e', NULL), ('23e5)', '^', x''), (x'aa', x'54', x'');
UPDATE OR IGNORE t1 SET c0 = 0.8081757625357411, c0 = '1622520412' WHERE (t1.c0 IN (CAST(t1.c0 AS BLOB), ((t1.c2) BETWEEN (t1.c1) AND (1402282057))));
END TRANSACTION;
CREATE UNIQUE INDEX IF NOT EXISTS i74 ON t1((((((((((((c2 IN ()))AND((~ (c1)))))AND(((c2) BETWEEN (c1) AND (c2)))))AND(0.805849178230481)))AND((NOT (c2)))))OR(CASE c2  WHEN c2 THEN c1 WHEN c2 THEN c2 END)),CASE WHEN ((c1)|(c2)) THEN x'51' WHEN ABS(c0) THEN ((c0) NOTNULL) ELSE ((0xffffffffd28735c9)OR(0x15c0d448)) END DESC,((((((((c1)AND(NULL)))AND(((c0)IS NOT(c0)))))AND(json_extract(c0, c1, c0))))OR(CASE c1  WHEN x'' THEN c1 ELSE c2 END)) COLLATE RTRIM ASC);
CREATE UNIQUE INDEX IF NOT EXISTS i62 ON t1(((c0 COLLATE BINARY) ISNULL) COLLATE RTRIM,((CASE WHEN c0 THEN NULL END)IS NOT((NOT (c2)))) DESC,(((c0, c1, c1)) BETWEEN ((((c0)<<(c2)), highlight(c2, x'', c0, c1), x'')) AND ((c2, ((((((c2)OR(c1)))AND(c0)))OR(c2)), TRIM(c1, c1)))));
CREATE UNIQUE INDEX IF NOT EXISTS i41 ON t1(json(load_extension(c1)),CAST(CAST(0xffffffff9a2657a5 AS NUMERIC) AS NUMERIC) COLLATE RTRIM,((c1 IN (c0)) IN (c1 COLLATE BINARY)) COLLATE NOCASE ASC);
CREATE UNIQUE INDEX IF NOT EXISTS i85 ON t1((((- (c1)))*(c0)) DESC,((CASE WHEN c1 THEN c2 WHEN c2 THEN NULL WHEN c0 THEN c0 WHEN c1 THEN c2 END) NOT BETWEEN (((c0)&(c1))) AND (((c2) BETWEEN (c2) AND (c2)))) COLLATE RTRIM DESC,(((((((((('Fa&ajy1')AND(c0)))OR(c0)))AND(746244174)))AND(c2))) IS FALSE) DESC) WHERE (+ (UPPER(c0)));
CREATE INDEX IF NOT EXISTS i58 ON t1((((c0 IN ())) BETWEEN (((c0)<(0.38130372545468494))) AND ((c2 IN (c2)))) ASC,(((((c0, c2, c2, c0, c0, c2)) NOT BETWEEN ((c2, c1, c0, c2, c2, c2)) AND ((c1, c1, c1, c0, NULL, c1)))) BETWEEN (json_type(c0)) AND ((((c2, 'oK^oR*-', c2, c2)) BETWEEN ((x'', c2, c2, c2)) AND (('fa&ajy1', c2, c1, c0))))) COLLATE BINARY,c2 DESC);
CREATE INDEX i90 ON t1(((((((((c2)OR(c2)))OR(c2)))OR(c2)))-(((c1) IS TRUE))) COLLATE NOCASE,c0 COLLATE NOCASE COLLATE BINARY,((IFNULL(DISTINCT c2, c2))>>(((c1)%(c2)))) COLLATE RTRIM) WHERE ((c2 COLLATE NOCASE)|((~ (c1))));
ANALYZE v0;
ANALYZE;
REINDEX i90;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (0.942442032524689);
ROLLBACK TRANSACTION;
REINDEX;
INSERT OR IGNORE INTO t1(c1) VALUES (NULL), (-1708763227);
ANALYZE;
BEGIN  TRANSACTION;
BEGIN  TRANSACTION;
ROLLBACK TRANSACTION;
UPDATE OR IGNORE t1 SET (c0, c2, c0)=('1Gȱ?fﴅȱ1V', -1.821080067E9, NULL) WHERE ((((0.4758042496138767) NOT BETWEEN (t1.c0) AND (t1.c1)))|(json_insert(t1.c0, '-826428152', t1.c1)));
UPDATE OR FAIL rt0 SET c2 = '364958792', c3 = 0.38130372545468494;
INSERT OR FAIL INTO rt0(c2, c1, c3) VALUES ('-398082074', 0x15c0d448, '켚*#W');
INSERT OR IGNORE INTO t1(c0) VALUES (-6.64600015E8), (NULL);
INSERT OR IGNORE INTO rt0(c2, c3, c0) VALUES (NULL, NULL, '782240014');
INSERT OR IGNORE INTO t1(c1) VALUES (NULL);
ANALYZE rt0;
UPDATE OR ABORT t1 SET (c0, c1)=('-1808649238', '-1315329157') WHERE (((t1.c1 IN ()))>>('<4졎&da^'));
END TRANSACTION;
ROLLBACK TRANSACTION;
-- SELECT * FROM rt0 WHERE ((((rt0.c0)<<(rt0.c3)) IN ((((rt0.c2))<=(('b6u'))))));
-- misses: [1]
-- SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)<<(rt0.c3)) IN ((((rt0.c2))==(('b6u'))))));
-- misses: 1
