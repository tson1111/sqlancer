--java.lang.AssertionError: the size of the result sets mismatch (0 and 1)!
---- SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0))))<>((((vt0.c0))<=((vt0.c0))))));
---- cardinality: 0
---- SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0))))!=((((vt0.c0))<((vt0.c0)))))) LIMIT 0x1;
---- cardinality: 1
--	at sqlancer.ComparatorHelper.assumeResultSetsAreSubset(ComparatorHelper.java:126)
--	at sqlancer.sqlite3.oracle.SQLite3SubsetOracle.checkSubsetQuery(SQLite3SubsetOracle.java:244)
--	at sqlancer.sqlite3.oracle.SQLite3SubsetOracle.check(SQLite3SubsetOracle.java:111)
--	at sqlancer.ProviderAdapter.generateAndTestDatabase(ProviderAdapter.java:49)
--	at sqlancer.Main$DBMSExecutor.run(Main.java:323)
--	at sqlancer.Main$2.run(Main.java:507)
--	at sqlancer.Main$2.runThread(Main.java:485)
--	at sqlancer.Main$2.run(Main.java:475)
--	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
--	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
--	at java.base/java.lang.Thread.run(Thread.java:831)
---- Time: 2021/05/21 16:03:34
-- Database: database0
-- Database version: 3.34.0
-- seed value: 1621584209258
PRAGMA cache_size = 50000;
PRAGMA temp_store=MEMORY;
PRAGMA synchronous=off;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, tokenize = "ascii");
UPDATE OR REPLACE vt0 SET (c0, c0)=('
6', '') WHERE ((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)&(''))));
INSERT OR REPLACE INTO vt0 VALUES (NULL), (0.6580569056051223);
ANALYZE main;
UPDATE OR IGNORE vt0 SET (c0, c0)=('
6', 'y') WHERE vt0.c0;
INSERT OR REPLACE INTO vt0 VALUES (''), (0.6580569056051223), ('1735672062'), (NULL), (0.527918714605552);
REINDEX;
END;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE (CAST(((('-1239507216', 'd', x'', '366510042'))>=((NULL, x'08', 0.5036192337597961, '('))) AS TEXT));
UPDATE vt0 SET (c0, c0)=('-1553652848', '(');
UPDATE OR IGNORE vt0 SET c0 = x'' WHERE ((vt0.c0) NOTNULL);
BEGIN DEFERRED TRANSACTION;
BEGIN EXCLUSIVE TRANSACTION;
END;
ROLLBACK TRANSACTION;
UPDATE vt0 SET c0 = x'', c0 = '409119031' WHERE NULL;
VACUUM;
UPDATE OR ROLLBACK vt0 SET c0 = NULL;
UPDATE OR IGNORE vt0 SET c0 = x'ce', c0 = 0.9141137681770857 WHERE vt0.c0;
COMMIT;
BEGIN DEFERRED TRANSACTION;
BEGIN  TRANSACTION;
UPDATE OR IGNORE vt0 SET c0 = NULL;
UPDATE OR IGNORE vt0 SET (c0, c0)=(NULL, 0.21189570601001262) WHERE vt0.c0;
BEGIN IMMEDIATE TRANSACTION;
DELETE FROM sqlite_stat1 WHERE CAST(x'f8' AS REAL) COLLATE BINARY;
INSERT OR ABORT INTO vt0 VALUES ('Cr\'), ('OB45');
UPDATE OR IGNORE vt0 SET (c0)=(0xffffffffafc34953) WHERE vt0.c0;
UPDATE OR REPLACE vt0 SET (c0, c0, c0)=(NULL, '1735672062', '409119031') WHERE ((((vt0.c0)AND(vt0.c0)))!=(((vt0.c0) ISNULL)));
UPDATE vt0 SET (c0, c0)=(1735672062, '') WHERE CASE (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))  WHEN (((x'', vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) THEN ((((((((((((vt0.c0)AND(vt0.c0)))AND(0.5487901942862028)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c0 AS INTEGER) ELSE (vt0.c0 IN (x'b7')) END;
UPDATE OR ROLLBACK vt0 SET c0 = 0.527918714605552, c0 = 's?H]+' WHERE ((((((((((vt0.c0)||(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND((vt0.c0 IN ()))))AND('')))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
COMMIT TRANSACTION;
UPDATE vt0 SET c0 = x'';
REINDEX RTRIM;
UPDATE OR IGNORE vt0 SET c0 = 0.26131720621906296, c0 = NULL, c0 = x'36cf';
VACUUM temp;
BEGIN EXCLUSIVE TRANSACTION;
UPDATE OR IGNORE vt0 SET c0 = x'85d2', c0 = NULL, c0 = NULL WHERE (((vt0.c0 IN (vt0.c0)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
BEGIN DEFERRED TRANSACTION;
UPDATE OR IGNORE vt0 SET (c0, c0)=('', NULL);
BEGIN EXCLUSIVE TRANSACTION;
END;
END TRANSACTION;
UPDATE OR IGNORE vt0 SET c0 = 4.09119031E8, c0 = NULL WHERE (((+ (vt0.c0)))>=(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
INSERT OR FAIL INTO vt0 VALUES (-1.553652848E9);
UPDATE OR ROLLBACK vt0 SET c0 = '';
INSERT OR IGNORE INTO vt0 VALUES ('㻔{썹<-'), ('-1346156205'), (NULL), ('-2091565356');
UPDATE OR IGNORE vt0 SET (c0)=(0xffffffffa3609cd2) WHERE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.03294084863285629 END COLLATE NOCASE;
ANALYZE;
ANALYZE v0;
BEGIN IMMEDIATE TRANSACTION;
INSERT OR FAIL INTO vt0(c0) VALUES ('1868479670');
PRAGMA wal_autocheckpoint = -7397567727995983492;
ANALYZE main;
PRAGMA journal_size_limit = 0;
DELETE FROM sqlite_stat1;
UPDATE vt0 SET c0 = '1769926011' WHERE ((((((vt0.c0)OR('373371712')))OR(vt0.c0))) IS TRUE);
UPDATE vt0 SET c0 = '-93063327';
UPDATE vt0 SET (c0, c0, c0)=(NULL, x'3568', NULL) WHERE (- (((vt0.c0)>=(vt0.c0))));
PRAGMA short_column_names;
REINDEX  vt0;
INSERT INTO vt0(vt0) VALUES('rebuild');
UPDATE vt0 SET (c0, c0)=('A!\3H', '-1346156205') WHERE (((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((vt0.c0)GLOB(vt0.c0)))));
REINDEX  vt0;
INSERT OR ABORT INTO vt0 VALUES (0X48559d92), (0.4296832937956445), (NULL);
UPDATE OR IGNORE vt0 SET c0 = '', c0 = '';
PRAGMA temp.soft_heap_limit;
END TRANSACTION;
ROLLBACK TRANSACTION;
-- SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0))))<>((((vt0.c0))<=((vt0.c0))))));
-- cardinality: 0
-- SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0))))!=((((vt0.c0))<((vt0.c0)))))) LIMIT 0x1;
-- cardinality: 1
