--java.lang.AssertionError: 124 0
--	at sqlancer.sqlite3.oracle.SQLite3SubsetOracle.checkSubsetQuery(SQLite3SubsetOracle.java:236)
--	at sqlancer.sqlite3.oracle.SQLite3SubsetOracle.check(SQLite3SubsetOracle.java:111)
--	at sqlancer.ProviderAdapter.generateAndTestDatabase(ProviderAdapter.java:49)
--	at sqlancer.Main$DBMSExecutor.run(Main.java:323)
--	at sqlancer.Main$2.run(Main.java:507)
--	at sqlancer.Main$2.runThread(Main.java:485)
--	at sqlancer.Main$2.run(Main.java:475)
--	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
--	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
--	at java.base/java.lang.Thread.run(Thread.java:831)
---- Time: 2021/05/21 16:40:18
-- Database: database1
-- Database version: 3.34.0
-- seed value: 1621586090155
PRAGMA cache_size = 50000;
PRAGMA temp_store=MEMORY;
PRAGMA synchronous=off;
PRAGMA case_sensitive_like=ON;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, order=DESC);
UPDATE OR FAIL vt0 SET c1 = NULL WHERE ((vt0.c0) NOTNULL);
PRAGMA temp.auto_vacuum = FULL;
ROLLBACK TRANSACTION;
ROLLBACK TRANSACTION;
INSERT OR IGNORE INTO vt0(c0) VALUES ('Gpu'), (x'');
INSERT INTO vt0(vt0) VALUES('optimize');
INSERT INTO vt0(vt0) VALUES('rebuild');
UPDATE OR IGNORE vt0 SET (c1)=('Gpu') WHERE 0x3d48aa4d;
UPDATE OR IGNORE vt0 SET c1 = 0.5205503843618434, c0 = '';
COMMIT;
INSERT INTO vt0(vt0) VALUES('optimize');
INSERT OR ROLLBACK INTO vt0 VALUES (NULL, NULL);
ROLLBACK TRANSACTION;
REINDEX  vt0;
PRAGMA cache_spill;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.9161021572892567), (NULL);
INSERT OR FAIL INTO vt0(c0) VALUES (x'c4'), ('1028172365'), ('ꩍAjb᧨ 衲ꩍs');
PRAGMA main.short_column_names;
PRAGMA stats;
INSERT OR ABORT INTO vt0(c1) VALUES (0.18153057922336913);
INSERT OR IGNORE INTO vt0 VALUES (NULL, '-878671758');
UPDATE OR IGNORE vt0 SET (c1, c1, c1, c0)=('\fE
22{ꩍs', x'397a2c', x'', -1.202775576E9);
ROLLBACK TRANSACTION;
INSERT INTO vt0(vt0) VALUES('optimize');
UPDATE vt0 SET (c1)=(0xffffffffdb9324dd);
UPDATE OR IGNORE vt0 SET (c1)=(x'9dda');
PRAGMA cache_size = -1695403135985574656;
INSERT OR ROLLBACK INTO vt0(c0, c1) VALUES ('걇᧨', 0.2079496339487984);
VACUUM main;
VACUUM temp;
PRAGMA locking_mode;
INSERT OR IGNORE INTO vt0 VALUES (NULL, 0.5151852227711906), (x'bbdf32', 0.2079496339487984);
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (NULL, '-106830275'), (NULL, NULL), ('-582342221', x'f24b1b'), (NULL, 0.5272201569824475);
UPDATE vt0 SET (c0)=(0Xfffffffff9a1e63d);
UPDATE OR IGNORE vt0 SET c0 = 'Ahg^œ*퐛1m';
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL);
BEGIN DEFERRED TRANSACTION;
INSERT INTO vt0(vt0) VALUES('rebuild');
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)');
INSERT INTO vt0(vt0) VALUES('automerge=7');
INSERT OR IGNORE INTO vt0 VALUES (NULL, '-2104360899'), ('1715038096', x'94a2');
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT ALL CASE ((vt0.c1)>(NULL))  WHEN (('') BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c1 END, (vt0.c0 IN ()) COLLATE RTRIM, CAST((('-611113763') NOTNULL) AS BLOB) FROM vt0;
COMMIT TRANSACTION;
UPDATE OR IGNORE vt0 SET c1 = 0xffffffff9a124bb4, c0 = '' WHERE (0X53f511a5 IN (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END));
BEGIN IMMEDIATE TRANSACTION;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41686');
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 426468507);
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '6926');
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '4277');
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3);
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 706581033);
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7);
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)');
INSERT INTO vt0(vt0) VALUES('optimize');
UPDATE OR FAIL vt0 SET c1 = x'', c1 = -5.82342221E8, c0 = -1.710077004E9 WHERE -769447372;
UPDATE OR FAIL vt0 SET (c0, c0)=(0X53f511a5, NULL) WHERE ((NULL) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND (x''));
UPDATE OR ROLLBACK vt0 SET (c0, c0)=(0.7955939501949911, 0Xffffffffdaa167c1) WHERE (SQLITE_COMPILEOPTION_GET(vt0.c1) IN ());
BEGIN  TRANSACTION;
UPDATE OR IGNORE vt0 SET (c1)=('KeO') WHERE (((vt0.c1))<=((vt0.c1))) COLLATE NOCASE;
END TRANSACTION;
UPDATE vt0 SET (c1, c0)=(x'ccda', NULL);
UPDATE OR IGNORE vt0 SET c1 = 0.01230433869864933, c1 = NULL WHERE (((vt0.c0)) NOT BETWEEN (((~ (vt0.c1)))) AND ((json_type(vt0.c0))));
BEGIN  TRANSACTION;
INSERT OR FAIL INTO vt0 VALUES (1.585294407E9, NULL), (NULL, x'');
INSERT OR IGNORE INTO vt0(c0) VALUES (0.46825268964887445);
UPDATE OR IGNORE vt0 SET (c0, c0)=('䮴', 0Xffffffffb8f52129);
INSERT INTO vt0(vt0) VALUES('merge=-560611654,12');
;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 448781880);
INSERT INTO vt0(vt0) VALUES('rebuild');
UPDATE OR REPLACE vt0 SET (c1)=('-878671758');
REINDEX  vt0;
VACUUM;
VACUUM;
VACUUM temp;
INSERT OR REPLACE INTO vt0(c1) VALUES (0.46825268964887445), (NULL);
REINDEX  vt0;
INSERT INTO vt0(vt0) VALUES('automerge=8');
REINDEX BINARY;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.9585992051691112), (0.24422876612534616);
UPDATE OR FAIL vt0 SET c1 = x'b136' WHERE vt0.c0;
UPDATE OR IGNORE vt0 SET c1 = 'S', c1 = x'', c0 = '-971862817' WHERE CASE WHEN vt0.c1 THEN vt0.c1 COLLATE NOCASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) THEN (vt0.c0 IN (vt0.c0)) END;
PRAGMA short_column_names = true;
REINDEX NOCASE;
INSERT OR ABORT INTO vt0 VALUES ('', x'');
INSERT OR REPLACE INTO vt0(c1) VALUES ('-106830275');
INSERT OR ABORT INTO vt0(c0, c1) VALUES ('802279577', NULL), (NULL, -9.71862817E8);
ROLLBACK TRANSACTION;
UPDATE OR IGNORE vt0 SET c1 = x'', c0 = NULL WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))>((CAST(vt0.c1 AS TEXT), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)));
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19870');
INSERT INTO vt0(vt0, rank) VALUES('merge', 1408569765);
;
INSERT INTO vt0(vt0, rank) VALUES('merge', -2104360899);
;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58141');
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10);
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64518');
INSERT INTO vt0(vt0) VALUES('optimize');
INSERT INTO vt0(vt0) VALUES('rebuild');
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL), (x'e7bc');
ROLLBACK TRANSACTION;
INSERT OR IGNORE INTO vt0 VALUES (NULL, '907950903');
UPDATE OR FAIL vt0 SET c1 = NULL;
INSERT OR FAIL INTO vt0 VALUES ('1202782547', NULL), (0Xffffffffcba08872, NULL);
INSERT OR ROLLBACK INTO vt0(c1) VALUES ('l+쁺i'), (0.02484693843504926);
ROLLBACK TRANSACTION;
UPDATE OR IGNORE vt0 SET (c1, c1)=('1 %', 0.9876523697790303);
PRAGMA main.default_cache_size = -2104360899;
ANALYZE main;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (NULL, 0.5205503843618434), (0.7955939501949911, ''), (x'', x'dc'), (NULL, '');
UPDATE vt0 SET (c0, c1, c0)=('-560611654', '-582342221', '') WHERE CAST((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0))) AS BLOB);
END;
ROLLBACK TRANSACTION;
--SUBSET BUG!
SELECT DISTINCT COUNT(*) FROM v0, vt0 WHERE ((((~ ((((v0.c0, v0.c1, v0.c1))<>((v0.c2, vt0.c0, vt0.c0))))))AND(IFNULL(DISTINCT ((x'3f') NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) ORDER BY CASE ((v0.c0)OR(v0.c0))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')) THEN CASE v0.c1  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c2 THEN v0.c2 ELSE -800046488 END WHEN vt0.c0 THEN ((vt0.c0)>>(vt0.c1)) WHEN ((v0.c0) IS FALSE) THEN v0.c1 COLLATE RTRIM ELSE ((x'') NOT BETWEEN (v0.c0) AND (vt0.c0)) END, CAST(0.8594664381318193 AS BLOB) ASC LIMIT 1;
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ ((((v0.c0, v0.c1, v0.c1))<((v0.c2, vt0.c0, vt0.c0))))));
