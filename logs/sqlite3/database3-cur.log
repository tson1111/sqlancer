-- Time: 2021/05/19 01:09:31
-- Database: database3
-- Database version: 3.34.0
-- seed value: 1621357771647
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, +c4 BLOB , +c5 TEXT ); -- 2ms;
CREATE TEMPORARY TABLE t1 (c0 INTEGER , c1 REAL ); -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES (x'5bdf45'); -- 1ms;
UPDATE t1 SET c1 = NULL; -- 0ms;
UPDATE OR REPLACE t1 SET c1 = 0Xffffffff8ab68553, c0 = -1624170603 WHERE ((CAST(t1.c0 AS BLOB)) NOTNULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c0 = -1415981947, c0 = 0x6a043ce3; -- 0ms;
UPDATE t1 SET (c0, c0, c1)=(0xffffffffab99d485, NULL, 0.1378758374089295) WHERE ((NOT (t1.c0)) IN ()); -- 0ms;
UPDATE OR FAIL t1 SET (c1, c1)=('-1415981947', x'1e') WHERE NULL; -- 0ms;
PRAGMA temp.journal_mode = TRUNCATE; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t1(c1) VALUES (213504008), ('-1967749805'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
UPDATE OR ROLLBACK t1 SET c0 = x''; -- 0ms;
INSERT OR IGNORE INTO t1(c1) VALUES ('-1624170603'); -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES ('r', ''''), ('0.1378758374089295', '539426997'), ('', x'ea'), ('r', NULL), (NULL, 0.5568399481732258); -- 0ms;
INSERT OR IGNORE INTO t1(c1, c0) VALUES ('539426997', '440482288'), (x'7c', 0.43560401409653293); -- 1ms;
INSERT OR IGNORE INTO t1(c1, c0) VALUES ('2054253131', '*'), (NULL, '-1028690489'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA application_id = 1315069072439424791; -- 1ms;
CREATE INDEX IF NOT EXISTS i91 ON t1(CASE WHEN ((c1) NOT NULL) THEN c1 ELSE c0 COLLATE BINARY END COLLATE NOCASE ASC,CASE WHEN ((NULL) NOT NULL) THEN CASE c0  WHEN c1 THEN c0 END ELSE UPPER(c0) END COLLATE RTRIM ASC); -- 0ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES ('-1028690489'); -- 0ms;
UPDATE t1 SET c0 = 0.43560401409653293, c0 = 'mDg\+jrQ' WHERE ((NULL) BETWEEN (((t1.c0)||(t1.c0))) AND ((- (t1.c0)))); -- 0ms;
UPDATE t1 SET c1 = '淇V', c1 = 0.5568399481732258; -- 0ms;
UPDATE OR IGNORE t1 SET (c0, c1, c1)=(x'f1', NULL, 0.43560401409653293); -- 1ms;
INSERT OR ABORT INTO t1(c1, c0) VALUES (x'', x'9a'), ('830816951', (((((('-1028690489') NOT BETWEEN (1.778662627E9) AND (NULL)))OR((+ (NULL)))))OR(NULL))); -- 0ms;
CREATE INDEX IF NOT EXISTS i18 ON t1((((((+ (c0)))AND(c0)))AND((((c1))<=((c0))))),(((c1 IN (x'')))<=(CAST(c0 AS INTEGER)))) WHERE ((((c0, c1, c1, c1)) NOT BETWEEN ((c1, NULL, c0, c1)) AND ((c1, c1, c1, c0))) IN ()); -- 0ms;
PRAGMA main.cache_spill; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.stats; -- 0ms;
REINDEX; -- 0ms;
ANALYZE i91; -- 0ms;
INSERT OR ABORT INTO t1(c0) VALUES (0.9520305877013687) ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR FAIL INTO t1(c1) VALUES (x'7eee'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0.7466536057175113); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('') WHERE CAST((NOT (t1.c1)) AS INTEGER); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
COMMIT; -- 0ms;
UPDATE t1 SET (c1)=(x'0d') WHERE ((t1.c1 COLLATE RTRIM)AND(((t1.c0)*(t1.c0)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('[78''Xu>xJ') WHERE ((((~ ('')), x'd6'))<=((CHANGES(), t1.c1))); -- 0ms;
INSERT OR ABORT INTO t1(c1) VALUES ('G%Hs!eb璖R'), (NULL); -- 0ms;
PRAGMA locking_mode; -- 0ms;
INSERT OR REPLACE INTO t1(c1) VALUES ('_K' COLLATE NOCASE), (1.612608662E9); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR ABORT INTO t1 VALUES (0.16259935654182844, 0.33403498781495977), (NULL, CASE x'7686f1d9'  WHEN HEX(NULL) THEN ((100929609)OR('zgftH')) WHEN ((x'ca')<>(-1.624170603E9)) THEN (('_qH*')&(x'')) END); -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
UPDATE OR IGNORE t1 SET c0 = x'0b', c0 = x'14cd' WHERE t1.c1; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('1383623473'), (x''); -- 0ms;
UPDATE t1 SET (c0)=(x'cebd') WHERE CAST(((((t1.c1)AND(x'')))AND(t1.c0)) AS INTEGER); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR ROLLBACK INTO t1(c1, c0) VALUES (440482288, 0xd604867), ('-1408692428', x'ad7fbfdd'), ('-278721965', 0.4760103419149396); -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES (0.9520305877013687), (0.25329335675993025); -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
END; -- 0ms;
UPDATE t1 SET (c1)=(NULL) WHERE rtreenode((NOT (t1.c1)), (~ (t1.c0))); -- 0ms;
UPDATE OR FAIL t1 SET (c1)=(NULL) WHERE (((x'') NOT BETWEEN (t1.c1) AND (t1.c1)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c1 = 0Xffffffff83037a86; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=('9S*I5') WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) IN (TRIM(t1.c0, t1.c0), t1.c1 COLLATE RTRIM)); -- 1ms;
UPDATE OR REPLACE t1 SET c0 = '-716591780', c0 = x''; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c1 = x'40ac', c0 = NULL, c0 = NULL WHERE SQLITE_VERSION(); -- 0ms;
INSERT OR ROLLBACK INTO t1(c0, c1) VALUES (NULL, x'7b'); -- 0ms;
INSERT OR IGNORE INTO t1(c1) VALUES (0.20017413120736938); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA main.shrink_memory; -- 0ms;
UPDATE OR IGNORE t1 SET c1 = 0Xf8e765f, c1 = 0.7960258449854591, c0 = '䡧{' WHERE ((((((((t1.c0) ISNULL))AND(t1.c0 COLLATE RTRIM)))OR((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, t1.c1))))))AND(((((t1.c1)AND(t1.c1)))AND(t1.c0)))); -- 0ms;
INSERT OR FAIL INTO t1 VALUES (NULL, 1956082742), ('-1997783105', NULL), ((((CASE x'37'  WHEN '0.7466536057175113' THEN 0Xffffffffdb2b0a3b WHEN -1408692428 THEN 'S~]h-PMl%' WHEN 0.6602283942757515 THEN NULL WHEN x'cf' THEN 'N)+흃窆(' ELSE 0X52786b31 END))>((CASE WHEN 0.31304786534508133 THEN x'd2' WHEN 2.24413799E8 THEN -832560007 WHEN NULL THEN NULL END))), NULL), (NULL, NULL), ('Xs&GD7|1', '-2096924026'); -- 0ms;
REINDEX BINARY; -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL, 0.3069049362694324); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL, -1997783105); -- 0ms;
UPDATE t1 SET c1 = 704982203, c1 = '1408534150', c1 = 2.13504008E8, c1 = -2.096924026E9 WHERE (CASE WHEN t1.c1 THEN t1.c0 END IN (0.3069049362694324)); -- 1ms;
INSERT OR REPLACE INTO t1(c1, c0) VALUES (NULL, '-1176461747'); -- 0ms;
UPDATE OR IGNORE t1 SET c0 = 0.8878775773572767, c0 = x'1a74', c0 = NULL; -- 0ms;
INSERT OR FAIL INTO t1(c1) VALUES (NULL), ('D㽸k(ZOM麟H'); -- 0ms;
UPDATE t1 SET (c0)=(0.10859642137339032); -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
UPDATE t1 SET c1 = 0Xffffffffb3bff328, c0 = -1452555701; -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
INSERT OR IGNORE INTO t1(c1, c0) VALUES (x'', '-832560007'), ('w}*', 'v'); -- 0ms;
INSERT OR ABORT INTO t1(c0, c1) VALUES (0.058689931961938946, '224413799'); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR IGNORE t1 SET c0 = x'ea', c0 = '1232394875' WHERE (~ (CAST(t1.c0 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO t1(c0, c1) VALUES ('-747868847', x'e2b736'); -- 0ms;
UPDATE t1 SET c0 = x'', c0 = 0x6a043ce3, c1 = '-278721965' WHERE TYPEOF(DISTINCT (t1.c1 IN ())); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
ANALYZE main; -- 0ms;
UPDATE OR IGNORE t1 SET c0 = 853913989, c0 = 1.00929609E8 WHERE CAST((- (t1.c1)) AS TEXT); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t1 WHERE ((((NULL, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0)-(t1.c0)), CAST(t1.c1 AS REAL), (((t1.c1))>((0.31304786534508133))))) AND ((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)), CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c0 END, ((t1.c0) IS TRUE)))));
SELECT DISTINCT * FROM t1 WHERE ((((NULL, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0)-(t1.c0)), CAST(t1.c1 AS REAL), (((t1.c1))>((0.31304786534508133))))) AND ((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)), CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c0 END, ((t1.c0) IS TRUE))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (TRIM(DISTINCT ((t1.c1) ISNULL))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((((NULL, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0)-(t1.c0)), CAST(t1.c1 AS REAL), (((t1.c1))>((0.31304786534508133))))) AND ((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)), CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c0 END, ((t1.c0) IS TRUE)))));
SELECT DISTINCT * FROM t1 WHERE ((((NULL, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0)-(t1.c0)), CAST(t1.c1 AS REAL), (((t1.c1))>((0.31304786534508133))))) AND ((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)), CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c0 END, ((t1.c0) IS TRUE))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (TRIM(DISTINCT ((t1.c1) ISNULL))) LIMIT 0X0;
SELECT * FROM t1 WHERE (((((QUOTE(t1.c1))OR(TRIM(t1.c1, t1.c1))))OR(((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1))))) ORDER BY TYPEOF(DISTINCT DATE(t1.c0, '', t1.c1, t1.c1)) ASC  NULLS FIRST, (((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) IN (x'')) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((QUOTE(t1.c1))OR(TRIM(t1.c1, t1.c1))))OR(((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))))AND(((t1.c0) BETWEEN (json_array_length(t1.c1)) AND ((- (t1.c0))))))) ORDER BY ((((((((((((((((CASE t1.c0  WHEN x'0b55a6' THEN t1.c0 END)AND(t1.c1 COLLATE BINARY)))AND(((t1.c1)||(t1.c0)))))AND(((t1.c0) ISNULL))))OR((- (t1.c1)))))OR(x'5f')))AND(((t1.c1)-(t1.c1)))))OR((t1.c1 IN ()))))OR('-1415981947'))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (CASE WHEN ((('(''8', t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c0, '-1279266008', t1.c0))) THEN x'28' WHEN ((((t1.c1)AND(t1.c1)))OR(t1.c1)) THEN ((t1.c1)OR(t1.c1)) WHEN LTRIM(t1.c1) THEN ((t1.c0) ISNULL) ELSE (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) END) ORDER BY ((((((((((((((((CASE t1.c0  WHEN x'0b55a6' THEN t1.c0 END)AND(t1.c1 COLLATE BINARY)))AND(((t1.c1)||(t1.c0)))))AND(((t1.c0) ISNULL))))OR((- (t1.c1)))))OR(x'5f')))AND(((t1.c1)-(t1.c1)))))OR((t1.c1 IN ()))))OR('-1415981947'))  NULLS FIRST;
SELECT * FROM t1 WHERE (((((QUOTE(t1.c1))OR(TRIM(t1.c1, t1.c1))))OR(((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1))))) ORDER BY TYPEOF(DISTINCT DATE(t1.c0, '', t1.c1, t1.c1)) ASC  NULLS FIRST, (((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) IN (x'')) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((QUOTE(t1.c1))OR(TRIM(t1.c1, t1.c1))))OR(((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))))AND(((t1.c0) BETWEEN (json_array_length(t1.c1)) AND ((- (t1.c0))))))) ORDER BY ((((((((((((((((CASE t1.c0  WHEN x'0b55a6' THEN t1.c0 END)AND(t1.c1 COLLATE BINARY)))AND(((t1.c1)||(t1.c0)))))AND(((t1.c0) ISNULL))))OR((- (t1.c1)))))OR(x'5f')))AND(((t1.c1)-(t1.c1)))))OR((t1.c1 IN ()))))OR('-1415981947'))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (CASE WHEN ((('(''8', t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c0, '-1279266008', t1.c0))) THEN x'28' WHEN ((((t1.c1)AND(t1.c1)))OR(t1.c1)) THEN ((t1.c1)OR(t1.c1)) WHEN LTRIM(t1.c1) THEN ((t1.c0) ISNULL) ELSE (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) END) ORDER BY ((((((((((((((((CASE t1.c0  WHEN x'0b55a6' THEN t1.c0 END)AND(t1.c1 COLLATE BINARY)))AND(((t1.c1)||(t1.c0)))))AND(((t1.c0) ISNULL))))OR((- (t1.c1)))))OR(x'5f')))AND(((t1.c1)-(t1.c1)))))OR((t1.c1 IN ()))))OR('-1415981947'))  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CASE WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0)<(t1.c1)) WHEN ((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)) THEN t1.c0 END);
SELECT MIN(t1.c1) FROM t1 WHERE (CASE WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0)<(t1.c1)) WHEN ((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)) THEN t1.c0 END) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (x'6d23'))) ORDER BY ((CAST(t1.c0 AS INTEGER))-(((((t1.c0)OR(x'3b3be1ad')))AND(t1.c0)))) DESC  NULLS FIRST, (t1.c0 IN ()) COLLATE RTRIM ASC, ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c1)) COLLATE BINARY COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((NOT (x'6d23'))) ORDER BY ((CAST(t1.c0 AS INTEGER))-(((((t1.c0)OR(x'3b3be1ad')))AND(t1.c0)))) DESC  NULLS FIRST, (t1.c0 IN ()) COLLATE RTRIM ASC, ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c1)) COLLATE BINARY COLLATE NOCASE  NULLS LAST LIMIT 0X3 INTERSECT SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0)<>(t1.c0)), CHANGES()))>=((t1.c1, (~ (t1.c1)))))) ORDER BY ((CAST(t1.c0 AS INTEGER))-(((((t1.c0)OR(x'3b3be1ad')))AND(t1.c0)))) DESC  NULLS FIRST, (t1.c0 IN ()) COLLATE RTRIM ASC, ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c1)) COLLATE BINARY COLLATE NOCASE  NULLS LAST LIMIT 3;
SELECT * FROM t1 WHERE (((((((LIKELY(t1.c1))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c0 END)))AND(((t1.c1) NOT BETWEEN (-1.967749805E9) AND (t1.c0)))))OR(((t1.c0)||(-1.408692428E9)))));
SELECT ALL * FROM t1 WHERE (((((((LIKELY(t1.c1))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c0 END)))AND(((t1.c1) NOT BETWEEN (-1.967749805E9) AND (t1.c0)))))OR(((t1.c0)||(-1.408692428E9))))) ORDER BY ((((((t1.c0)OR(t1.c0)))AND(t1.c1))) NOT BETWEEN (((t1.c0)>=(t1.c0))) AND (((t1.c0) NOTNULL))) DESC, ((((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))OR(TRIM(DISTINCT 0xffffffffcddf38e2, '-1997783105'))))OR(((t1.c1)<=(t1.c0)))) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 WHERE (((((((LIKELY(t1.c1))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c0 END)))AND(((t1.c1) NOT BETWEEN (-1.967749805E9) AND (t1.c0)))))OR(((t1.c0)||(-1.408692428E9)))));
SELECT ALL * FROM t1 WHERE (((((((LIKELY(t1.c1))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c0 END)))AND(((t1.c1) NOT BETWEEN (-1.967749805E9) AND (t1.c0)))))OR(((t1.c0)||(-1.408692428E9))))) ORDER BY ((((((t1.c0)OR(t1.c0)))AND(t1.c1))) NOT BETWEEN (((t1.c0)>=(t1.c0))) AND (((t1.c0) NOTNULL))) DESC, ((((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))OR(TRIM(DISTINCT 0xffffffffcddf38e2, '-1997783105'))))OR(((t1.c1)<=(t1.c0)))) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 WHERE ('');
SELECT * FROM t1 NOT INDEXED WHERE ((('')AND(((((t1.c1) NOTNULL))|(((t1.c1)/(t1.c0))))))) INTERSECT SELECT * FROM t1 WHERE (load_extension(x'0a89'));
SELECT * FROM t1 WHERE ('');
SELECT * FROM t1 NOT INDEXED WHERE ((('')AND(((((t1.c1) NOTNULL))|(((t1.c1)/(t1.c0))))))) INTERSECT SELECT * FROM t1 WHERE (load_extension(x'0a89'));
SELECT * FROM t1 WHERE ((NOT (CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'4d58e2' WHEN -1863901556 THEN t1.c1 WHEN '' THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)));
SELECT DISTINCT * FROM t1 WHERE ((((NOT (CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'4d58e2' WHEN 0xffffffff90e71e8c THEN t1.c1 WHEN '' THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)))AND((((t1.c0 IN (t1.c1))) BETWEEN ((- (t1.c0))) AND (CASE WHEN t1.c1 THEN '-83606605' WHEN 0.7863232214018753 THEN t1.c1 WHEN t1.c0 THEN -407840957 ELSE t1.c0 END))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((SQLITE_COMPILEOPTION_USED(t1.c0))IS NOT(0.41014510452953945))) LIMIT 0;
SELECT * FROM t1 WHERE ((NOT (CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'4d58e2' WHEN -1863901556 THEN t1.c1 WHEN '' THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)));
SELECT DISTINCT * FROM t1 WHERE ((((NOT (CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'4d58e2' WHEN 0xffffffff90e71e8c THEN t1.c1 WHEN '' THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)))AND((((t1.c0 IN (t1.c1))) BETWEEN ((- (t1.c0))) AND (CASE WHEN t1.c1 THEN '-83606605' WHEN 0.7863232214018753 THEN t1.c1 WHEN t1.c0 THEN -407840957 ELSE t1.c0 END))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((SQLITE_COMPILEOPTION_USED(t1.c0))IS NOT(0.41014510452953945))) LIMIT 0;
SELECT * FROM t1 WHERE (((t1.c0)/(((t1.c1)>=(t1.c0)))));
SELECT ALL * FROM t1 WHERE (((t1.c0)/(((t1.c1)>=(t1.c0))))) LIMIT 0;
SELECT * FROM t1 WHERE (((t1.c0)/(((t1.c1)>=(t1.c0)))));
SELECT ALL * FROM t1 WHERE (((t1.c0)/(((t1.c1)>=(t1.c0))))) LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((CAST(t1.c1 AS BLOB) IN ((t1.c1 IN (t1.c1, t1.c1)))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((CAST(t1.c1 AS BLOB) IN ((t1.c1 IN (t1.c1))))) ORDER BY (((((((((t1.c0, t1.c1))<=((t1.c0, t1.c1))))AND(t1.c1 COLLATE NOCASE)))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND(CASE t1.c0  WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 END)) DESC  NULLS LAST, (((t1.c1)LIKE(t1.c1)) IN (CAST(t1.c0 AS BLOB))) DESC  NULLS LAST LIMIT 1;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (NOT (((t1.c0)%(t1.c1)))), CASE WHEN (+ (t1.c1)) THEN ((t1.c0) ISNULL) WHEN CASE WHEN NULL THEN t1.c1 ELSE '2032568631' END THEN 0Xffffffff8ab68553 END, t1.c0 ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)AND(((((t1.c0)IS NOT(t1.c1)))/(((t1.c0) IS TRUE)))))) ORDER BY ((((((t1.c0)OR(t1.c0)))OR(t1.c0))) BETWEEN ((t1.c0 IN (t1.c1))) AND (((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))) ASC  NULLS LAST, (((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), 0.35425045777259156, (t1.c0 IN (t1.c1, t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)) AND ((t1.c1, ((t1.c1) IS FALSE), ((t1.c1)&(t1.c0)), 'TK琶)wj+}F', CAST(t1.c0 AS INTEGER))))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE NULL  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (0.31304786534508133)) THEN t1.c1 COLLATE BINARY WHEN ((t1.c0)&(t1.c1)) THEN (((t1.c0, t1.c1, t1.c1, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)) AND ((NULL, t1.c0, t1.c1, t1.c1, t1.c0))) ELSE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY ((((((t1.c0)OR(t1.c0)))OR(t1.c0))) BETWEEN ((t1.c0 IN (t1.c1))) AND (((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))) ASC  NULLS LAST, (((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), 0.35425045777259156, (t1.c0 IN (t1.c1, t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)) AND ((t1.c1, ((t1.c1) IS FALSE), ((t1.c1)&(t1.c0)), 'TK琶)wj+}F', CAST(t1.c0 AS INTEGER))))  NULLS FIRST LIMIT 0x1;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (NOT (((t1.c0)%(t1.c1)))), CASE WHEN (+ (t1.c1)) THEN ((t1.c0) ISNULL) WHEN CASE WHEN NULL THEN t1.c1 ELSE '2032568631' END THEN 0Xffffffff8ab68553 END, t1.c0 ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)AND(((((t1.c0)IS NOT(t1.c1)))/(((t1.c0) IS TRUE)))))) ORDER BY ((((((t1.c0)OR(t1.c0)))OR(t1.c0))) BETWEEN ((t1.c0 IN (t1.c1))) AND (((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))) ASC  NULLS LAST, (((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), 0.35425045777259156, (t1.c0 IN (t1.c1, t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)) AND ((t1.c1, ((t1.c1) IS FALSE), ((t1.c1)&(t1.c0)), 'TK琶)wj+}F', CAST(t1.c0 AS INTEGER))))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE NULL  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (0.31304786534508133)) THEN t1.c1 COLLATE BINARY WHEN ((t1.c0)&(t1.c1)) THEN (((t1.c0, t1.c1, t1.c1, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)) AND ((NULL, t1.c0, t1.c1, t1.c1, t1.c0))) ELSE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY ((((((t1.c0)OR(t1.c0)))OR(t1.c0))) BETWEEN ((t1.c0 IN (t1.c1))) AND (((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))) ASC  NULLS LAST, (((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), 0.35425045777259156, (t1.c0 IN (t1.c1, t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)) AND ((t1.c1, ((t1.c1) IS FALSE), ((t1.c1)&(t1.c0)), 'TK琶)wj+}F', CAST(t1.c0 AS INTEGER))))  NULLS FIRST LIMIT 0x1;
SELECT ALL COUNT(*) FROM t1 WHERE (json(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY x'd2' ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (json(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY '*},F' ASC, t1.c1;
SELECT MAX(t1.c0) FROM t1 WHERE (((t1.c1)>=(CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((t1.c1)>(CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END))) ORDER BY -1.997783105E9 DESC, CASE ((t1.c1)>=(t1.c1))  WHEN ((t1.c0)IS(t1.c0)) THEN (((('-1185874476')AND(t1.c0)))AND('-617936325')) END  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (t1.c0) ORDER BY -1.997783105E9 DESC, CASE ((t1.c1)>=(t1.c1))  WHEN ((t1.c0)IS(t1.c0)) THEN (((('-1185874476')AND(t1.c0)))AND('-617936325')) END  NULLS FIRST LIMIT 0x1;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))!=(STRFTIME(t1.c1, t1.c0, t1.c0, t1.c1)))) ORDER BY json_extract((~ (t1.c1)), t1.c1, x'ff', COALESCE(t1.c0, t1.c0, t1.c0))  NULLS LAST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))>(STRFTIME(t1.c1, t1.c0, t1.c0, t1.c1))))AND(((((((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(0.25329335675993025)))OR(t1.c0)))OR(((t1.c1) BETWEEN (0xffffffff968d6300) AND (t1.c1)))))OR((((t1.c0))!=((x'f20693'))))))AND(UNLIKELY(DISTINCT t1.c0))))AND(((((t1.c1)AND(t1.c0)))OR(t1.c1)))))OR(CASE WHEN t1.c0 THEN t1.c1 END))))) ORDER BY (((((((t1.c1 IN ()))OR(((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))))OR(NULL COLLATE RTRIM)))AND(CAST(t1.c0 AS INTEGER))) DESC, (((t1.c1) IS TRUE) IN (t1.c1 COLLATE RTRIM)) LIMIT 0x2 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((((t1.c1)OR(t1.c0)))OR(t1.c0)))) AND ((((0Xffffffffcfbc412b) IS TRUE))))) ORDER BY (((((((t1.c1 IN ()))OR(((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))))OR(NULL COLLATE RTRIM)))AND(CAST(t1.c0 AS INTEGER))) DESC, (((t1.c1) IS TRUE) IN (t1.c1 COLLATE RTRIM)) LIMIT 2;
SELECT ALL COUNT(*) FROM t1 WHERE (COALESCE(((t1.c0) IS FALSE), CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END, ((t1.c1) IS TRUE), ((t1.c0)|(t1.c1)), ((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)), ((t1.c0)IS(t1.c0)))) ORDER BY (((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))==((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) ASC, (t1.c1 COLLATE RTRIM IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((COALESCE(((t1.c0) IS FALSE), CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END, ((t1.c1) IS TRUE), ((t1.c0)|(t1.c1)), ((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)), ((t1.c0)IS(t1.c0))))AND(t1.c1))) ORDER BY ((((t1.c1)<<(t1.c1)))<>(CAST(t1.c1 AS NUMERIC)))  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE (((((t1.c0)IS(t1.c1))) NOTNULL)) ORDER BY (NOT ((- (t1.c1))))  NULLS LAST, ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END) IS FALSE) ASC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((((t1.c0)IS(t1.c1))) NOTNULL))AND((+ ((t1.c1 IN ())))))) ORDER BY (NOT ((- (t1.c1))))  NULLS LAST, ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END) IS FALSE) ASC;
SELECT MAX(t1.c0) FROM t1 WHERE (((ROUND(t1.c0, t1.c0)) NOT BETWEEN ((+ (t1.c1))) AND (((t1.c0) NOTNULL))));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((ROUND(t1.c0, t1.c0)) NOT BETWEEN ((+ (t1.c1))) AND (((t1.c0) NOTNULL))))AND(((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) NOT BETWEEN (((((t1.c1)OR(t1.c1)))AND(t1.c1))) AND (t1.c1))))) LIMIT 0x2 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (t1.c0) LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))OR(((t1.c0)<(t1.c1)))))OR(((0Xffffffffbb88b2f8) NOTNULL))))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(IFNULL(NULL, t1.c0)))) ORDER BY ((x'5cac')<>(t1.c1)) COLLATE BINARY COLLATE NOCASE  NULLS LAST, json_extract(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)), ((t1.c1) IS FALSE)) DESC;
SELECT DISTINCT * FROM t1 WHERE (((((((((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))OR(((t1.c0)<(t1.c1)))))OR(((-1148669192) NOTNULL))))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(IFNULL(NULL, t1.c0))))AND(((((((((t1.c1)|(t1.c0)))AND((- (t1.c0)))))OR(((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))))AND(CAST(t1.c0 AS BLOB)))))) ORDER BY ((((((((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)OR((t1.c1 IN (t1.c0)))))AND(((t1.c1) ISNULL))))AND(0xffffffffaf122cf8)))AND('-1176461747')) DESC, t1.c1 DESC, ((t1.c1) IS TRUE) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))OR(((t1.c0)<(t1.c1)))))OR(((0Xffffffffbb88b2f8) NOTNULL))))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(IFNULL(NULL, t1.c0)))) ORDER BY ((x'5cac')<>(t1.c1)) COLLATE BINARY COLLATE NOCASE  NULLS LAST, json_extract(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)), ((t1.c1) IS FALSE)) DESC;
SELECT * FROM t1 WHERE (LIKELIHOOD(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)), (+ (t1.c0)))) ORDER BY CAST((t1.c0 IN (t1.c1)) AS BLOB) DESC;
SELECT DISTINCT * FROM t1 WHERE (((LIKELIHOOD(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)), (+ (t1.c0))))AND(t1.c0))) ORDER BY CAST((t1.c0 IN (t1.c0, NULL)) AS INTEGER), ((NULL)<<(((t1.c0)<(t1.c1)))) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)AND((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))))AND(((t1.c0)>(t1.c1)))))OR((~ (x''))))) ORDER BY CAST((t1.c0 IN (t1.c0, NULL)) AS INTEGER), ((NULL)<<(((t1.c0)<(t1.c1)))) ASC;
SELECT * FROM t1 WHERE (LIKELIHOOD(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)), (+ (t1.c0)))) ORDER BY CAST((t1.c0 IN (t1.c1)) AS BLOB) DESC;
SELECT * FROM t1 WHERE (((((t1.c0)<(t1.c0)))<(((t1.c1) NOTNULL))));
SELECT * FROM t1 WHERE (((((t1.c0)<(t1.c0)))<(((t1.c1) NOTNULL)))) INTERSECT SELECT * FROM t1 WHERE (((((((t1.c1)OR((((t1.c0, t1.c0, t1.c0, t1.c1))>=((t1.c1, t1.c0, t1.c1, t1.c0))))))AND((((t1.c0, t1.c0))<=((t1.c1, t1.c1))))))OR('-742346749')));
SELECT * FROM t1 WHERE (((((t1.c0)<(t1.c0)))<(((t1.c1) NOTNULL))));
SELECT * FROM t1 WHERE (((((t1.c0)<(t1.c0)))<(((t1.c1) NOTNULL)))) INTERSECT SELECT * FROM t1 WHERE (((((((t1.c1)OR((((t1.c0, t1.c0, t1.c0, t1.c1))>=((t1.c1, t1.c0, t1.c1, t1.c0))))))AND((((t1.c0, t1.c0))<=((t1.c1, t1.c1))))))OR('-742346749')));
SELECT * FROM t1 WHERE (((((t1.c1) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1) IS TRUE)) ISNULL))AND((((((t1.c0, -8.41008926E8)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0))))%(CAST(t1.c1 AS BLOB))))));
SELECT * FROM t1 WHERE (((((t1.c1) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1) IS TRUE)) ISNULL))AND((((((t1.c0, -8.41008926E8)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0))))%(CAST(t1.c1 AS BLOB))))));
SELECT * FROM t1 WHERE ((((- (t1.c0))) NOT NULL)) ORDER BY ((CAST(t1.c1 AS TEXT))OR(((t1.c1) NOT NULL))) DESC  NULLS LAST, CAST(CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END AS INTEGER) ASC  NULLS LAST;
SELECT * FROM t1 WHERE ((((((- (t1.c0))) NOT NULL))AND(t1.c1))) ORDER BY INSTR(t1.c0, x'') COLLATE BINARY  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 WHERE ((((- (t1.c0))) NOT NULL)) ORDER BY ((CAST(t1.c1 AS TEXT))OR(((t1.c1) NOT NULL))) DESC  NULLS LAST, CAST(CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END AS INTEGER) ASC  NULLS LAST;
SELECT * FROM t1 WHERE ((((((- (t1.c0))) NOT NULL))AND(t1.c1))) ORDER BY INSTR(t1.c0, x'') COLLATE BINARY  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), CASE WHEN t1.c1 THEN t1.c0 END)) AND ((t1.c0, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, t1.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), CASE WHEN t1.c1 THEN t1.c0 END)) AND ((t1.c0, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))))AND(CAST(t1.c1 AS TEXT))))AND(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '^u\xFO(' ELSE t1.c0 END)))OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN x'02b6e3' THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)));
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), CASE WHEN t1.c1 THEN t1.c0 END)) AND ((t1.c0, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, t1.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), CASE WHEN t1.c1 THEN t1.c0 END)) AND ((t1.c0, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))))AND(CAST(t1.c1 AS TEXT))))AND(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '^u\xFO(' ELSE t1.c0 END)))OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN x'02b6e3' THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)));
SELECT * FROM t1 WHERE (NULL) ORDER BY (((((((t1.c1, t1.c1, t1.c0, t1.c1, t1.c1, t1.c1))>=((t1.c0, t1.c1, t1.c0, '-1148669192', t1.c1, t1.c0))))AND(ABS(t1.c1))))AND(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (NULL) ORDER BY CAST(((t1.c1) NOTNULL) AS REAL) INTERSECT SELECT ALL * FROM t1 WHERE (COALESCE(DISTINCT NULL, t1.c0, CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)) ORDER BY CAST(((t1.c1) NOTNULL) AS REAL);
SELECT * FROM t1 WHERE (NULL) ORDER BY (((((((t1.c1, t1.c1, t1.c0, t1.c1, t1.c1, t1.c1))>=((t1.c0, t1.c1, t1.c0, '-1148669192', t1.c1, t1.c0))))AND(ABS(t1.c1))))AND(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (NULL) ORDER BY CAST(((t1.c1) NOTNULL) AS REAL) INTERSECT SELECT ALL * FROM t1 WHERE (COALESCE(DISTINCT NULL, t1.c0, CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)) ORDER BY CAST(((t1.c1) NOTNULL) AS REAL);
SELECT MIN(t1.c1) FROM t1 WHERE ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) IN (((((t1.c1)OR(t1.c1)))AND(t1.c1))))) ORDER BY (((t1.c0, 'G#')) NOT BETWEEN ((CASE t1.c1  WHEN t1.c0 THEN NULL END, (~ (t1.c1)))) AND ((CAST(t1.c0 AS NUMERIC), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))  NULLS LAST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) IN (((((t1.c1)OR(t1.c1)))AND(t1.c1)))))AND(CASE (((t1.c0, t1.c0))<=((t1.c0, t1.c0)))  WHEN 0.35425045777259156 THEN ((x'')<(t1.c0)) WHEN LIKELIHOOD(DISTINCT t1.c0, NULL) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END))) ORDER BY CAST(t1.c0 COLLATE RTRIM AS TEXT) LIMIT 0X0;
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (~ (t1.c0 COLLATE RTRIM)), '^3';
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY t1.c1  NULLS LAST, ((CAST(t1.c0 AS INTEGER)) NOT BETWEEN (((((((x'81')AND(t1.c0)))OR(t1.c0)))AND(t1.c0))) AND (t1.c1 COLLATE NOCASE)) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c1, t1.c1)) BETWEEN ((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)), ((t1.c0)>=(0.7019593739999025)), CAST(t1.c0 AS TEXT))) AND ((((t1.c0) IS FALSE), ((t1.c0)=(t1.c1)), (+ (-278721965)))))) ORDER BY t1.c1  NULLS LAST, ((CAST(t1.c0 AS INTEGER)) NOT BETWEEN (((((((x'81')AND(t1.c0)))OR(t1.c0)))AND(t1.c0))) AND (t1.c1 COLLATE NOCASE));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((((((t1.c0 COLLATE NOCASE)AND(t1.c0)))OR((~ (t1.c0)))))AND(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN x'8c' END)))OR((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, NULL)) AND ((t1.c1, t1.c1))))))AND(((t1.c0) NOT NULL))));
SELECT MIN(t1.c1) FROM t1 WHERE (((((((((((t1.c0 COLLATE NOCASE)AND(t1.c0)))OR((~ (t1.c0)))))AND(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN x'8c' END)))OR((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, NULL)) AND ((t1.c1, t1.c1))))))AND(((t1.c0) NOT NULL)))) ORDER BY ((t1.c1 IN ()) IN (((((t1.c1)AND(t1.c0)))AND(t1.c0))))  NULLS FIRST, (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), (NOT ('536044823')), CAST(t1.c1 AS REAL)))<((((x'11') ISNULL), ((t1.c0) NOTNULL), '751721270'))), ((CAST(t1.c1 AS NUMERIC))>(x'')) DESC  NULLS FIRST LIMIT 0X1;
SELECT COUNT(*) FROM t1 WHERE ('-1769118976');
SELECT COUNT(*) FROM t1 WHERE ((('-1769118976')AND(CAST(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '704982203' WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END AS TEXT)))) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((((((((t1.c1)%(t1.c1)))OR((- (t1.c0)))))AND(json_extract(t1.c0, t1.c0, t1.c1, t1.c0, t1.c1))))AND(NULLIF(t1.c0, NULL))));
SELECT * FROM t1 WHERE (NULL) ORDER BY (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))&(((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))) ASC, ((((t1.c0)OR(t1.c0)))IS NOT(CAST(t1.c1 AS BLOB)))  NULLS FIRST, (((t1.c0, t1.c0, t1.c1))=((t1.c0, t1.c1, 0.8675189074939252))) COLLATE BINARY ASC;
SELECT * FROM t1 WHERE (((NULL)AND('1612608662' COLLATE NOCASE))) ORDER BY (((((((((t1.c1, t1.c0))!=((t1.c0, t1.c1))))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))AND(LOWER(t1.c1))))OR(DATE(t1.c0, t1.c0, t1.c1, t1.c1, t1.c0))), x'' ASC;
SELECT * FROM t1 WHERE (NULL) ORDER BY (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))&(((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))) ASC, ((((t1.c0)OR(t1.c0)))IS NOT(CAST(t1.c1 AS BLOB)))  NULLS FIRST, (((t1.c0, t1.c0, t1.c1))=((t1.c0, t1.c1, 0.8675189074939252))) COLLATE BINARY ASC;
SELECT * FROM t1 WHERE (((NULL)AND('1612608662' COLLATE NOCASE))) ORDER BY (((((((((t1.c1, t1.c0))!=((t1.c0, t1.c1))))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))AND(LOWER(t1.c1))))OR(DATE(t1.c0, t1.c0, t1.c1, t1.c1, t1.c0))), x'' ASC;
SELECT MIN(t1.c0) FROM t1 WHERE (((((t1.c0)-(t1.c0)))OR(TOTAL_CHANGES())));
SELECT MIN(t1.c0) FROM t1 WHERE (((((t1.c0)-(t1.c0)))OR(TOTAL_CHANGES()))) INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE (t1.c0);
SELECT MIN(t1.c0) FROM t1 WHERE (CASE WHEN ((t1.c1) NOT BETWEEN (NULL) AND (t1.c1)) THEN ((0.9835977633916464) ISNULL) ELSE t1.c1 COLLATE BINARY END) ORDER BY ((((CAST(t1.c1 AS BLOB))OR(((t1.c1) NOT BETWEEN (NULL) AND (t1.c1)))))OR(((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c0))))  NULLS FIRST, (((((((((((((((NOT (t1.c0)))AND(t1.c1 COLLATE BINARY)))OR(((t1.c0)IS(t1.c1)))))OR(0.18199322550502584)))AND((NULL IN (t1.c1)))))OR((NOT (t1.c0)))))AND(CAST(t1.c0 AS BLOB))))OR(ABS(DISTINCT t1.c0)));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((CASE WHEN ((t1.c1) NOT BETWEEN (NULL) AND (t1.c1)) THEN ((0.9835977633916464) ISNULL) ELSE t1.c1 COLLATE BINARY END)AND(NULL))) ORDER BY ((((CAST(t1.c1 AS BLOB))OR(((t1.c1) NOT BETWEEN (NULL) AND (t1.c1)))))OR(((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c0))))  NULLS FIRST, (((((((((((((((NOT (t1.c0)))AND(t1.c1 COLLATE BINARY)))OR(((t1.c0)IS(t1.c1)))))OR(0.18199322550502584)))AND((NULL IN (t1.c1)))))OR((NOT (t1.c0)))))AND(CAST(t1.c0 AS BLOB))))OR(ABS(DISTINCT t1.c0)));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)) BETWEEN (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))) AND ((((t1.c1)IS NOT(t1.c1)))))) ORDER BY 0.9532317774099616, '', ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 END)+(x'' COLLATE NOCASE)) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((t1.c0)) BETWEEN (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))) AND ((((t1.c1)IS NOT(t1.c1)))))) ORDER BY 0.9532317774099616, '', ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 END)+(x'' COLLATE NOCASE)) DESC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((ABS(t1.c1)) NOT BETWEEN (x'd1') AND (t1.c1))) ORDER BY 0.9532317774099616, '', ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 END)+(x'' COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST((('O')%(t1.c0)) AS NUMERIC));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((CAST((('O')%(t1.c0)) AS NUMERIC))AND(((CAST(t1.c0 AS NUMERIC)) NOT NULL)))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (-1.863901556E9) ORDER BY ((LIKELIHOOD(DISTINCT t1.c1, t1.c1)) NOT BETWEEN (((((t1.c1)AND(t1.c0)))OR(t1.c1))) AND (((t1.c0)+(t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((-1.863901556E9)AND((('-2130733186')/(0.5516352339091076))))) ORDER BY ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) NOT NULL) DESC, ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)OR('0.8878775773572767'))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (-1.863901556E9) ORDER BY ((LIKELIHOOD(DISTINCT t1.c1, t1.c1)) NOT BETWEEN (((((t1.c1)AND(t1.c0)))OR(t1.c1))) AND (((t1.c0)+(t1.c1))));
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) AS REAL));
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) AS REAL)) LIMIT 0X3;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) AS REAL));
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) AS REAL)) LIMIT 0X3;
SELECT ALL COUNT(*) FROM t1 WHERE (((x'cd') BETWEEN (t1.c0) AND (t1.c1)) COLLATE NOCASE) ORDER BY ((((((((((((((((t1.c0)AND(t1.c0)))OR(x'')))OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(x'')))AND(x'1364')))OR(((t1.c0) IS TRUE))) ASC, t1.c1 ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (((x'cd') BETWEEN (t1.c0) AND (t1.c1)) COLLATE NOCASE) ORDER BY (((((t1.c0, t1.c1, x'', t1.c1))>=((t1.c1, t1.c1, NULL, t1.c0))))OR(NULL)) DESC INTERSECT SELECT COUNT(*) FROM t1 WHERE (((((((t1.c0)OR(t1.c0)))OR(t1.c0))) BETWEEN (CAST(t1.c1 AS INTEGER)) AND (((t1.c1)&(NULL))))) ORDER BY (((((t1.c0, t1.c1, x'', t1.c1))>=((t1.c1, t1.c1, NULL, t1.c0))))OR(NULL)) DESC;
SELECT * FROM t1 WHERE (((((t1.c0)+(t1.c0)))>>(x'eb2f'))) ORDER BY ((((t1.c0) IS FALSE))GLOB(t1.c1 COLLATE RTRIM)) ASC, (((t1.c0)>(x'')) IN (TOTAL_CHANGES(), CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '1989149162' ELSE t1.c1 END, CASE '440482288'  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)+(t1.c0)))>>(x'eb2f'))) ORDER BY CAST((((t1.c0))>=((t1.c0))) AS INTEGER)  NULLS FIRST, ((CAST(t1.c0 AS BLOB)) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 ELSE NULL END) AND (t1.c1 COLLATE BINARY)) DESC  NULLS LAST, (((t1.c0)) BETWEEN (((((t1.c0, t1.c0, NULL, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1)) AND (('jAQE?(  ', NULL, t1.c1, 1051196884, '1989149162'))))) AND (((- (t1.c0))))) ASC;
SELECT * FROM t1 WHERE (((((t1.c0)+(t1.c0)))>>(x'eb2f'))) ORDER BY ((((t1.c0) IS FALSE))GLOB(t1.c1 COLLATE RTRIM)) ASC, (((t1.c0)>(x'')) IN (TOTAL_CHANGES(), CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '1989149162' ELSE t1.c1 END, CASE '440482288'  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)+(t1.c0)))>>(x'eb2f'))) ORDER BY CAST((((t1.c0))>=((t1.c0))) AS INTEGER)  NULLS FIRST, ((CAST(t1.c0 AS BLOB)) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 ELSE NULL END) AND (t1.c1 COLLATE BINARY)) DESC  NULLS LAST, (((t1.c0)) BETWEEN (((((t1.c0, t1.c0, NULL, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1)) AND (('jAQE?(  ', NULL, t1.c1, 1051196884, '1989149162'))))) AND (((- (t1.c0))))) ASC;
SELECT * FROM t1 WHERE ((CAST(t1.c0 AS REAL) IN (((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))));
SELECT * FROM t1 WHERE ((((CAST(t1.c0 AS REAL) IN (((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))))AND(((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))<=((~ (t1.c1))))))) ORDER BY ((json_patch(t1.c0, t1.c1)) NOT BETWEEN (TYPEOF(DISTINCT '	h/
	|')) AND (((t1.c0)LIKE(t1.c0))))  NULLS FIRST LIMIT 0X2 INTERSECT SELECT * FROM t1 WHERE (t1.c1) ORDER BY ((json_patch(t1.c0, t1.c1)) NOT BETWEEN (TYPEOF(DISTINCT '	h/
	|')) AND (((t1.c0)LIKE(t1.c0))))  NULLS FIRST LIMIT 0x2;
SELECT * FROM t1 WHERE ((CAST(t1.c0 AS REAL) IN (((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))));
SELECT * FROM t1 WHERE ((((CAST(t1.c0 AS REAL) IN (((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))))AND(((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))<=((~ (t1.c1))))))) ORDER BY ((json_patch(t1.c0, t1.c1)) NOT BETWEEN (TYPEOF(DISTINCT '	h/
	|')) AND (((t1.c0)LIKE(t1.c0))))  NULLS FIRST LIMIT 0X2 INTERSECT SELECT * FROM t1 WHERE (t1.c1) ORDER BY ((json_patch(t1.c0, t1.c1)) NOT BETWEEN (TYPEOF(DISTINCT '	h/
	|')) AND (((t1.c0)LIKE(t1.c0))))  NULLS FIRST LIMIT 0x2;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) IS FALSE)) BETWEEN (LTRIM(t1.c0, x'5a')) AND (CAST(t1.c1 AS REAL)))) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN NULL WHEN t1.c0 THEN x'58' ELSE t1.c0 END THEN (- (t1.c1)) WHEN ((t1.c1)>(t1.c0)) THEN CAST(t1.c0 AS REAL) WHEN ((0.29255305623888683) NOTNULL) THEN (((t1.c0))>=((t1.c0))) END DESC;
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c0) IS FALSE)) BETWEEN (LTRIM(t1.c0, x'5a')) AND (CAST(t1.c1 AS REAL))))AND((((t1.c0) IS TRUE) IN ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))))) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN NULL WHEN t1.c0 THEN x'58' ELSE t1.c0 END THEN (- (t1.c1)) WHEN ((t1.c1)>(t1.c0)) THEN CAST(t1.c0 AS REAL) WHEN ((0.29255305623888683) NOTNULL) THEN (((t1.c0))>=((t1.c0))) END DESC;
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS TEXT)) BETWEEN (CAST(t1.c0 AS TEXT)) AND (((t1.c0)LIKE(t1.c0))))) ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (0.09618319594565305))) AND (((t1.c0)<>(t1.c0))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS TEXT)) BETWEEN (CAST(t1.c0 AS TEXT)) AND (((t1.c0)LIKE(t1.c0))))) ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (0.09618319594565305))) AND (((t1.c0)<>(t1.c0)))) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c1)/(t1.c1)) COLLATE NOCASE) ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (0.09618319594565305))) AND (((t1.c0)!=(t1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS INTEGER)) NOT BETWEEN (((t1.c0) ISNULL)) AND (t1.c0 COLLATE RTRIM)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS INTEGER)) NOT BETWEEN (((t1.c0) ISNULL)) AND (t1.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((t1.c1)<<(t1.c0)) THEN (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1))) END  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ('-832560007') ORDER BY CASE WHEN ((t1.c1)<<(t1.c0)) THEN (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1))) END  NULLS FIRST LIMIT 1;
SELECT MAX(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY ((((t1.c1) NOT NULL))<<(CASE t1.c1  WHEN t1.c1 THEN t1.c0 END)), (((t1.c0) IS TRUE) IN ()), 0.6922439158060547  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY (t1.c1 COLLATE RTRIM IN ()) DESC LIMIT 0 INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE ((~ (0.3060280448537728))) ORDER BY (t1.c1 COLLATE RTRIM IN ()) DESC LIMIT 0x0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))/(t1.c0))) ORDER BY (((((((t1.c0)AND(t1.c0)))AND(t1.c0)), CAST(t1.c0 AS TEXT)))<=((x'184e7c9a', (t1.c0 IN (t1.c0, 0.43560401409653293))))) DESC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))/(t1.c0))) ORDER BY ((((t1.c0)<=(t1.c0)))IS(CAST(t1.c1 AS NUMERIC))) ASC, '1173737933' ASC  NULLS FIRST, (MIN(t1.c1, t1.c0, t1.c1, t1.c0, t1.c1, t1.c1) IN ()) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN -208856384 THEN 'Ct3&.W' END) BETWEEN ((t1.c0 IN (t1.c1, t1.c0))) AND ((((t1.c1, '/e', t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c1))))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN -208856384 THEN 'Ct3&.W' END) BETWEEN ((t1.c0 IN (t1.c1, t1.c0))) AND ((((t1.c1, '/e', t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c1)))))) ORDER BY ((((t1.c1)LIKE(t1.c0)))==(t1.c1 COLLATE BINARY)) DESC  NULLS FIRST, json_array_length(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), (t1.c1 IN ())) ASC, ((((CAST(t1.c1 AS TEXT))AND(CAST(t1.c1 AS TEXT))))OR((((0.4377401951939409)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE ((NOT (((t1.c1) IS TRUE)))) ORDER BY 0X4974da7b, x'a3' ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((NOT (((t1.c1) IS TRUE)))) ORDER BY 1232394875, x'a3' ASC  NULLS LAST LIMIT 0x1;
SELECT * FROM t1 WHERE ((NOT (((t1.c1) IS TRUE)))) ORDER BY 0X4974da7b, x'a3' ASC  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE ((t1.c0) ISNULL)  WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN x'b0c51b' THEN t1.c1 END THEN (t1.c0 IN ()) WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) THEN t1.c1 WHEN ((((t1.c0)AND(t1.c1)))OR(t1.c1)) THEN (((t1.c0))>=((t1.c0))) WHEN ((((t1.c0)AND('0.10859642137339032')))AND(t1.c1)) THEN ((0.8479075056942333) IS FALSE) WHEN ((t1.c0) NOT NULL) THEN ((t1.c1)>(t1.c0)) END);
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((CASE ((t1.c0) ISNULL)  WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN x'b0c51b' THEN t1.c1 END THEN (t1.c0 IN ()) WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) THEN t1.c1 WHEN ((((t1.c0)AND(t1.c1)))OR(t1.c1)) THEN (((t1.c0))==((t1.c0))) WHEN ((((t1.c0)AND('0.10859642137339032')))AND(t1.c1)) THEN ((0.8479075056942333) IS FALSE) WHEN ((t1.c0) NOT NULL) THEN ((t1.c1)>(t1.c0)) END)AND(353841469))) ORDER BY COALESCE(t1.c0 COLLATE RTRIM, ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))) DESC;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN x'57a4' THEN t1.c1 END) NOT NULL)) ORDER BY ((x'a4')<<((t1.c0 IN ()))) ASC  NULLS LAST, CAST((((((('-1408692428')OR(t1.c0)))OR(t1.c1)))OR(t1.c1)) AS NUMERIC)  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN x'57a4' THEN t1.c1 END) NOT NULL)) ORDER BY CASE WHEN ((t1.c0)<(t1.c0)) THEN (+ (t1.c1)) ELSE (+ (t1.c0)) END ASC;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN x'57a4' THEN t1.c1 END) NOT NULL)) ORDER BY ((x'a4')<<((t1.c0 IN ()))) ASC  NULLS LAST, CAST((((((('-1408692428')OR(t1.c0)))OR(t1.c1)))OR(t1.c1)) AS NUMERIC)  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN x'57a4' THEN t1.c1 END) NOT NULL)) ORDER BY CASE WHEN ((t1.c0)<(t1.c0)) THEN (+ (t1.c1)) ELSE (+ (t1.c0)) END ASC;
SELECT * FROM t1 WHERE ((((NULL, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, ((t1.c0)%(t1.c1)), ((t1.c1)LIKE(t1.c1)))) AND ((CASE WHEN t1.c0 THEN x'' END, ((t1.c0) NOTNULL), t1.c0))));
SELECT * FROM t1 WHERE ((((((NULL, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, ((t1.c0)%(t1.c1)), ((t1.c1)LIKE(t1.c1)))) AND ((CASE WHEN t1.c0 THEN x'' END, ((t1.c0) NOTNULL), t1.c0))))AND(t1.c1))) ORDER BY (+ (((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))) DESC  NULLS LAST LIMIT 4;
SELECT * FROM t1 WHERE ((((NULL, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, ((t1.c0)%(t1.c1)), ((t1.c1)LIKE(t1.c1)))) AND ((CASE WHEN t1.c0 THEN x'' END, ((t1.c0) NOTNULL), t1.c0))));
SELECT * FROM t1 WHERE ((((((NULL, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, ((t1.c0)%(t1.c1)), ((t1.c1)LIKE(t1.c1)))) AND ((CASE WHEN t1.c0 THEN x'' END, ((t1.c0) NOTNULL), t1.c0))))AND(t1.c1))) ORDER BY (+ (((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))) DESC  NULLS LAST LIMIT 4;
SELECT COUNT(*) FROM t1 WHERE (TRIM((t1.c1 IN (t1.c0, t1.c1)), CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE 0x2a052cbb END));
SELECT ALL COUNT(*) FROM t1 WHERE (TRIM((t1.c1 IN (t1.c0)), CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE 0x2a052cbb END)) ORDER BY (((t1.c0)IS(t1.c0)) IN ()), (((NOT (t1.c0))) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CAST(((0.1761644149343069)>>(t1.c0)) AS INTEGER));
SELECT DISTINCT * FROM t1 WHERE (CAST(((0.1761644149343069)>>(t1.c0)) AS INTEGER)) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c1 END)>=('-617936325'))) LIMIT 2;
SELECT ALL * FROM t1 WHERE (CAST(((0.1761644149343069)>>(t1.c0)) AS INTEGER));
SELECT DISTINCT * FROM t1 WHERE (CAST(((0.1761644149343069)>>(t1.c0)) AS INTEGER)) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c1 END)>=('-617936325'))) LIMIT 2;
SELECT * FROM t1 WHERE ((((t1.c1)) BETWEEN ((UPPER(DISTINCT t1.c1))) AND ((((t1.c1)>(t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)) BETWEEN ((UPPER(DISTINCT t1.c1))) AND ((((t1.c1)>(t1.c1))))))AND((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) IN ())))) ORDER BY CASE WHEN ((((t1.c1)AND(0.7960258449854591)))OR(t1.c1)) THEN NULLIF(t1.c0, t1.c1) WHEN (((('0.8675189074939252')OR(t1.c1)))OR(t1.c1)) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) END DESC  NULLS LAST LIMIT 0x1;
SELECT * FROM t1 WHERE ((((t1.c1)) BETWEEN ((UPPER(DISTINCT t1.c1))) AND ((((t1.c1)>(t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)) BETWEEN ((UPPER(DISTINCT t1.c1))) AND ((((t1.c1)>(t1.c1))))))AND((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) IN ())))) ORDER BY CASE WHEN ((((t1.c1)AND(0.7960258449854591)))OR(t1.c1)) THEN NULLIF(t1.c0, t1.c1) WHEN (((('0.8675189074939252')OR(t1.c1)))OR(t1.c1)) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) END DESC  NULLS LAST LIMIT 0x1;
SELECT * FROM t1 WHERE ((((((t1.c1)GLOB(t1.c0)), '1232394875'))<((((t1.c1) NOTNULL), CASE WHEN t1.c1 THEN 'e' WHEN '830816951' THEN NULL ELSE t1.c1 END)))) ORDER BY TYPEOF(DISTINCT t1.c1 COLLATE BINARY), CASE -1962816202  WHEN ((t1.c0)+(t1.c0)) THEN CAST(t1.c1 AS TEXT) WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END THEN (NOT (t1.c1)) WHEN LOWER(DISTINCT t1.c1) THEN ((t1.c1) NOTNULL) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1)GLOB(t1.c0)), '1232394875'))<((((t1.c1) NOTNULL), CASE WHEN t1.c1 THEN 'e' WHEN '830816951' THEN NULL ELSE t1.c1 END))))AND(((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) IS FALSE)))) ORDER BY TYPEOF(DISTINCT t1.c1 COLLATE BINARY), CASE -1962816202  WHEN ((t1.c0)+(t1.c0)) THEN CAST(t1.c1 AS TEXT) WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END THEN (NOT (t1.c1)) WHEN LOWER(DISTINCT t1.c1) THEN ((t1.c1) NOTNULL) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END END  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE ((((((t1.c1)GLOB(t1.c0)), '1232394875'))<((((t1.c1) NOTNULL), CASE WHEN t1.c1 THEN 'e' WHEN '830816951' THEN NULL ELSE t1.c1 END)))) ORDER BY TYPEOF(DISTINCT t1.c1 COLLATE BINARY), CASE -1962816202  WHEN ((t1.c0)+(t1.c0)) THEN CAST(t1.c1 AS TEXT) WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END THEN (NOT (t1.c1)) WHEN LOWER(DISTINCT t1.c1) THEN ((t1.c1) NOTNULL) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1)GLOB(t1.c0)), '1232394875'))<((((t1.c1) NOTNULL), CASE WHEN t1.c1 THEN 'e' WHEN '830816951' THEN NULL ELSE t1.c1 END))))AND(((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) IS FALSE)))) ORDER BY TYPEOF(DISTINCT t1.c1 COLLATE BINARY), CASE -1962816202  WHEN ((t1.c0)+(t1.c0)) THEN CAST(t1.c1 AS TEXT) WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END THEN (NOT (t1.c1)) WHEN LOWER(DISTINCT t1.c1) THEN ((t1.c1) NOTNULL) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END END  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN ((((t1.c0, t1.c0, t1.c1))>=((t1.c1, t1.c1, x'0a')))) AND ((((t1.c0, t1.c1, t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0, t1.c0, t1.c0, t1.c0)) AND ((NULL, 'd', t1.c0, t1.c0, t1.c1))))) ASC  NULLS FIRST, ((((t1.c0)OR(t1.c1)))OR(t1.c1)) COLLATE BINARY DESC  NULLS FIRST, (((((5.36044823E8, t1.c1, t1.c1))>((t1.c0, t1.c1, t1.c0)))) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 END) AND (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY COLLATE NOCASE) ORDER BY (((t1.c0, t1.c1)) BETWEEN ((((t1.c0)||(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c1) AND (NULL)))) AND ((((t1.c0) NOT NULL), (((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c1, t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, 0.20025627345273822, t1.c0, t1.c0, t1.c0)))))), ((((((((((t1.c1)IS NOT(t1.c1)))AND(t1.c0 COLLATE BINARY)))OR(CASE t1.c1  WHEN '' THEN t1.c1 WHEN t1.c1 THEN x'' WHEN t1.c0 THEN t1.c0 END)))OR(((t1.c1) IS TRUE))))AND((- (t1.c0)))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN ((((t1.c0, t1.c0, t1.c1))>=((t1.c1, t1.c1, x'0a')))) AND ((((t1.c0, t1.c1, t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0, t1.c0, t1.c0, t1.c0)) AND ((NULL, 'd', t1.c0, t1.c0, t1.c1))))) ASC  NULLS FIRST, ((((t1.c0)OR(t1.c1)))OR(t1.c1)) COLLATE BINARY DESC  NULLS FIRST, (((((5.36044823E8, t1.c1, t1.c1))>((t1.c0, t1.c1, t1.c0)))) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 END) AND (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY COLLATE NOCASE) ORDER BY (((t1.c0, t1.c1)) BETWEEN ((((t1.c0)||(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c1) AND (NULL)))) AND ((((t1.c0) NOT NULL), (((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c1, t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, 0.20025627345273822, t1.c0, t1.c0, t1.c0)))))), ((((((((((t1.c1)IS NOT(t1.c1)))AND(t1.c0 COLLATE BINARY)))OR(CASE t1.c1  WHEN '' THEN t1.c1 WHEN t1.c1 THEN x'' WHEN t1.c0 THEN t1.c0 END)))OR(((t1.c1) IS TRUE))))AND((- (t1.c0)))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS REAL)) BETWEEN ((+ (t1.c0))) AND (NULL)));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c1 AS REAL)) BETWEEN ((+ (t1.c0))) AND (NULL)))AND(CAST((~ (t1.c1)) AS REAL)))) LIMIT 1;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS REAL)) BETWEEN ((+ (t1.c0))) AND (NULL)));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c1 AS REAL)) BETWEEN ((+ (t1.c0))) AND (NULL)))AND(CAST((~ (t1.c1)) AS REAL)))) LIMIT 1;
SELECT * FROM t1 WHERE (2109462779);
SELECT DISTINCT * FROM t1 WHERE (0X7dbbd8fb) LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0) IS FALSE))AND(json_array(t1.c0, t1.c1, x'18', t1.c1))))OR(((t1.c0)IS(t1.c1)))))OR(((((((t1.c0)AND(t1.c0)))OR(0.34628006387324206)))AND(t1.c0)))))AND('tw'))) LIMIT 0X3;
SELECT * FROM t1 WHERE (2109462779);
SELECT DISTINCT * FROM t1 WHERE (0X7dbbd8fb) LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0) IS FALSE))AND(json_array(t1.c0, t1.c1, x'18', t1.c1))))OR(((t1.c0)IS(t1.c1)))))OR(((((((t1.c0)AND(t1.c0)))OR(0.34628006387324206)))AND(t1.c0)))))AND('tw'))) LIMIT 0X3;
SELECT * FROM t1 WHERE ((~ (t1.c0)) COLLATE RTRIM);
SELECT * FROM t1 WHERE ((~ (t1.c0)) COLLATE RTRIM);
SELECT * FROM t1 WHERE ((~ (t1.c0)) COLLATE RTRIM);
SELECT * FROM t1 WHERE ((~ (t1.c0)) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE (((((t1.c1)LIKE(t1.c0)))OR(t1.c1 COLLATE NOCASE))) ORDER BY (t1.c1 IN ());
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)LIKE(t1.c0)))OR(t1.c1 COLLATE NOCASE))) ORDER BY (t1.c1 IN ()) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0) ISNULL)) ORDER BY (t1.c1 IN ());
SELECT ALL * FROM t1 WHERE (((((t1.c1)LIKE(t1.c0)))OR(t1.c1 COLLATE NOCASE))) ORDER BY (t1.c1 IN ());
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)IS(t1.c1))) NOT BETWEEN (((((t1.c0)OR(t1.c1)))OR(t1.c0))) AND ((NOT (t1.c0))))) ORDER BY ((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(x'61735697')))>=(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))  NULLS FIRST, (((json_remove(t1.c0, t1.c1, t1.c0, t1.c1), (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))))<=(((t1.c1 IN (t1.c0, t1.c0)), ((t1.c1)LIKE(t1.c0))))) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c1)IS(t1.c1))) NOT BETWEEN (((((t1.c0)OR(t1.c1)))OR(t1.c0))) AND ((NOT (t1.c0))))) ORDER BY ((((((t1.c1) ISNULL))AND(((t1.c1) NOTNULL))))OR(((t1.c0) IS FALSE)))  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND((- (t1.c1))))) ORDER BY ((((((t1.c1) ISNULL))AND(((t1.c1) NOTNULL))))OR(((t1.c0) IS FALSE)))  NULLS LAST LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0)AND(t1.c0)), t1.c1 COLLATE RTRIM))>=((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, ((((t1.c1)AND(t1.c0)))OR(t1.c1)))))) ORDER BY (((((t1.c1) IS FALSE), (t1.c0 IN (t1.c0)), (((t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))))>((((((((NULL)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)), LAST_INSERT_ROWID(), (((t1.c1, x'03'))>=((t1.c1, t1.c0))))))  NULLS FIRST, (((t1.c0) NOT NULL) IN ())  NULLS LAST, (+ (CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c0)AND(t1.c0)), t1.c1 COLLATE RTRIM))=((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, ((((t1.c1)AND(t1.c0)))OR(t1.c1)))))) ORDER BY (+ (NULL)) ASC  NULLS LAST, (+ (CAST(t1.c1 AS REAL))) DESC  NULLS FIRST, ((t1.c1 COLLATE RTRIM)<(((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))) LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CASE ((t1.c1) ISNULL)  WHEN (((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) THEN CASE t1.c1  WHEN t1.c1 THEN NULL WHEN t1.c0 THEN 'UnaLJS' WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END WHEN CAST(t1.c1 AS NUMERIC) THEN (t1.c1 IN ()) WHEN ((t1.c1)&(t1.c1)) THEN ((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)) END) ORDER BY (+ (NULL)) ASC  NULLS LAST, (+ (CAST(t1.c1 AS REAL))) DESC  NULLS FIRST, ((t1.c1 COLLATE RTRIM)<(((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))) LIMIT 0X1;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) ISNULL));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) ISNULL))AND(((((t1.c0, t1.c1))==((t1.c1, t1.c1))) IN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)), t1.c1))))) LIMIT 0 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((NULL) BETWEEN (t1.c0) AND (NULL)) IN ())) LIMIT 0X0;
SELECT * FROM t1 WHERE (((((t1.c0)>(t1.c1)))|(((t1.c1)>(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)>(t1.c1)))|(((t1.c1)>(t1.c1)))))AND(CASE WHEN 5.36044823E8 THEN ((t1.c1)/(t1.c1)) END))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((NULL)) NOT BETWEEN (((t1.c0 IN (t1.c0)))) AND ((t1.c1 COLLATE RTRIM))));
SELECT * FROM t1 WHERE (((((t1.c0)>(t1.c1)))|(((t1.c1)>(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)>(t1.c1)))|(((t1.c1)>(t1.c1)))))AND(CASE WHEN 5.36044823E8 THEN ((t1.c1)/(t1.c1)) END))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((NULL)) NOT BETWEEN (((t1.c0 IN (t1.c0)))) AND ((t1.c1 COLLATE RTRIM))));
SELECT * FROM t1 WHERE (((((t1.c1)GLOB(t1.c0))) ISNULL)) ORDER BY json_object('1612608662', CAST(t1.c1 AS INTEGER)) ASC;
SELECT ALL * FROM t1 WHERE (((((((t1.c1)GLOB(t1.c0))) ISNULL))AND(((CASE WHEN NULL THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) NOT BETWEEN (((t1.c0)>(t1.c1))) AND (((t1.c0) NOT NULL)))))) ORDER BY ((NULL)||(t1.c0 COLLATE BINARY))  NULLS FIRST, ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (t1.c1) AND ((t1.c0 IN (t1.c1)))) DESC INTERSECT SELECT * FROM t1 WHERE (((x'' COLLATE BINARY)&((t1.c1 IN (t1.c1))))) ORDER BY ((NULL)||(t1.c0 COLLATE BINARY))  NULLS FIRST, ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (t1.c1) AND ((t1.c0 IN (t1.c1)))) DESC;
SELECT * FROM t1 WHERE (((((t1.c1)GLOB(t1.c0))) ISNULL)) ORDER BY json_object('1612608662', CAST(t1.c1 AS INTEGER)) ASC;
SELECT ALL * FROM t1 WHERE (((((((t1.c1)GLOB(t1.c0))) ISNULL))AND(((CASE WHEN NULL THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) NOT BETWEEN (((t1.c0)>(t1.c1))) AND (((t1.c0) NOT NULL)))))) ORDER BY ((NULL)||(t1.c0 COLLATE BINARY))  NULLS FIRST, ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (t1.c1) AND ((t1.c0 IN (t1.c1)))) DESC INTERSECT SELECT * FROM t1 WHERE (((x'' COLLATE BINARY)&((t1.c1 IN (t1.c1))))) ORDER BY ((NULL)||(t1.c0 COLLATE BINARY))  NULLS FIRST, ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (t1.c1) AND ((t1.c0 IN (t1.c1)))) DESC;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c0))) NOT BETWEEN (NULL) AND ((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c0, 0.5568399481732258)) AND ((t1.c1, t1.c1, t1.c1)))))) ORDER BY (((t1.c0)%(t1.c1)) IN (((t1.c1) NOTNULL), TRIM(DISTINCT t1.c1))) ASC, ((((((((CASE WHEN NULL THEN t1.c0 END)OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))))OR(((t1.c1)<>(t1.c1)))))OR(((t1.c0) IS FALSE))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))), CAST(((t1.c0)<=(t1.c1)) AS BLOB) DESC;
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c0))) NOT BETWEEN (NULL) AND ((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c0, 0.5568399481732258)) AND ((t1.c1, t1.c1, t1.c1)))))) ORDER BY (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c0))) NOT BETWEEN (NULL) AND ((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c0, 0.5568399481732258)) AND ((t1.c1, t1.c1, t1.c1)))))) ORDER BY (((t1.c0)%(t1.c1)) IN (((t1.c1) NOTNULL), TRIM(DISTINCT t1.c1))) ASC, ((((((((CASE WHEN NULL THEN t1.c0 END)OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))))OR(((t1.c1)<>(t1.c1)))))OR(((t1.c0) IS FALSE))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))), CAST(((t1.c0)<=(t1.c1)) AS BLOB) DESC;
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c0))) NOT BETWEEN (NULL) AND ((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c0, 0.5568399481732258)) AND ((t1.c1, t1.c1, t1.c1)))))) ORDER BY (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c1))=((t1.c1))) IN ((~ (t1.c1)))));
SELECT ALL * FROM t1 WHERE (((((t1.c1))==((t1.c1))) IN ((~ (t1.c1))))) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((((t1.c1))=((t1.c1))) IN ((~ (t1.c1)))));
SELECT ALL * FROM t1 WHERE (((((t1.c1))==((t1.c1))) IN ((~ (t1.c1))))) LIMIT 0x0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((t1.c0)+(t1.c0)))OR(t1.c0 COLLATE RTRIM)))OR(((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((t1.c0)+(t1.c0)))OR(t1.c0 COLLATE RTRIM)))OR(((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1))))) LIMIT 0X2 INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (CASE WHEN -104042863 THEN (((-299455398, t1.c1, t1.c1, x'1c')) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c0, t1.c0))) WHEN ((((t1.c1)OR(t1.c1)))AND(t1.c1)) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) END) LIMIT 2;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE NOCASE ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((NULL)%(t1.c0)) IN ())) ORDER BY ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE NOCASE ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((NULL)%(t1.c0)) IN ())) ORDER BY ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (UPPER(CAST(t1.c0 AS INTEGER))) ORDER BY ((t1.c0 COLLATE NOCASE) NOT NULL) DESC  NULLS LAST, ((((t1.c1) IS FALSE))/(t1.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (UPPER(CAST(t1.c0 AS INTEGER))) ORDER BY ((x'14') NOT BETWEEN (x'') AND (t1.c0 COLLATE RTRIM)) DESC, (NOT (ABS(t1.c0)));
SELECT * FROM t1 WHERE ((t1.c1 IN (t1.c0)) COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE ((t1.c1 IN (t1.c0)) COLLATE BINARY) LIMIT 0x1;
SELECT * FROM t1 WHERE ((t1.c1 IN (t1.c0)) COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE ((t1.c1 IN (t1.c0)) COLLATE BINARY) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (TRIM(((t1.c0)AND(t1.c0))));
SELECT ALL * FROM t1 WHERE (((TRIM(((t1.c0)AND(t1.c0))))AND((- ((+ (t1.c0))))))) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN '' THEN t1.c1 END AS NUMERIC), t1.c0 DESC LIMIT 0;
SELECT ALL * FROM t1 WHERE (TRIM(((t1.c0)AND(t1.c0))));
SELECT ALL * FROM t1 WHERE (((TRIM(((t1.c0)AND(t1.c0))))AND((- ((+ (t1.c0))))))) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN '' THEN t1.c1 END AS NUMERIC), t1.c0 DESC LIMIT 0;
SELECT MIN(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE NOCASE)-(((t1.c1) IS FALSE))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE NOCASE)-(((t1.c1) IS FALSE)))) ORDER BY (- (((((t1.c1)AND(t1.c1)))AND(t1.c0))))  NULLS FIRST, ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 END) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) AND (DATETIME(t1.c0, t1.c0, t1.c1, t1.c1))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT * FROM t1 WHERE (t1.c1) INTERSECT SELECT * FROM t1 WHERE (x'37');
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT * FROM t1 WHERE (t1.c1) INTERSECT SELECT * FROM t1 WHERE (x'37');
SELECT ALL * FROM t1 WHERE ((((CAST(0.02541726709560943 AS BLOB)))>((t1.c1)))) ORDER BY (((LIKELY(t1.c0), 1552213072 COLLATE BINARY))<>(((t1.c1 IN ()), ((t1.c0) NOT NULL))))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((CAST(0.02541726709560943 AS BLOB)))>((t1.c1)))) ORDER BY ((CAST(t1.c0 AS TEXT))IS(TRIM(t1.c0, x'74'))) DESC;
SELECT ALL * FROM t1 WHERE ((((CAST(0.02541726709560943 AS BLOB)))>((t1.c1)))) ORDER BY (((LIKELY(t1.c0), 1552213072 COLLATE BINARY))<>(((t1.c1 IN ()), ((t1.c0) NOT NULL))))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((CAST(0.02541726709560943 AS BLOB)))>((t1.c1)))) ORDER BY ((CAST(t1.c0 AS TEXT))IS(TRIM(t1.c0, x'74'))) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c1 COLLATE RTRIM) NOT BETWEEN (CAST(t1.c1 AS INTEGER)) AND (t1.c1))) ORDER BY CAST(((((t1.c1)AND(t1.c0)))OR(t1.c0)) AS NUMERIC) DESC  NULLS LAST, ((CAST(t1.c0 AS REAL)) NOT BETWEEN (json_valid(NULL)) AND (LIKELY(DISTINCT t1.c0))) DESC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c1 COLLATE RTRIM) NOT BETWEEN (CAST(t1.c1 AS INTEGER)) AND (t1.c1))) ORDER BY highlight(PRINTF(t1.c1, t1.c1), CASE WHEN 'g7' THEN t1.c0 ELSE t1.c0 END, ((((t1.c0)OR(t1.c1)))AND(t1.c0)), CAST(t1.c1 AS TEXT)) DESC LIMIT 0X3 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c0)<(t1.c0)) COLLATE RTRIM) ORDER BY highlight(PRINTF(t1.c1, t1.c1), CASE WHEN 'g7' THEN t1.c0 ELSE t1.c0 END, ((((t1.c0)OR(t1.c1)))AND(t1.c0)), CAST(t1.c1 AS TEXT)) DESC LIMIT 0X3;
SELECT * FROM t1 WHERE (((~ (t1.c0)) IN (x'501c15' COLLATE NOCASE))) ORDER BY TOTAL_CHANGES() COLLATE NOCASE ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((~ (t1.c0)) IN (x'501c15' COLLATE NOCASE))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE RTRIM)<=(((((((((((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c1))))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((~ (t1.c0)) IN (x'501c15' COLLATE NOCASE))) ORDER BY TOTAL_CHANGES() COLLATE NOCASE ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((~ (t1.c0)) IN (x'501c15' COLLATE NOCASE))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE RTRIM)<=(((((((((((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c1))))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE UPPER(t1.c1)  WHEN x'd1' THEN (t1.c0 IN ()) WHEN (~ (t1.c1)) THEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN 0.3069049362694324 THEN t1.c1 END WHEN '' COLLATE BINARY THEN (('CgP
t4') BETWEEN (0X7d5fa2e3) AND (t1.c0)) END);
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE UPPER(t1.c1)  WHEN x'd1' THEN (t1.c0 IN ()) WHEN (~ (t1.c1)) THEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN 0.3069049362694324 THEN t1.c1 END WHEN '' COLLATE BINARY THEN (('CgP
t4') BETWEEN (2103419619) AND (t1.c0)) END) ORDER BY (- (t1.c1))  NULLS LAST, t1.c1  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0)&(t1.c0)) IN ((t1.c0 IN ())))) ORDER BY ((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))OR(t1.c1))) BETWEEN (CAST(t1.c1 AS TEXT)) AND ((((t1.c0))<=((t1.c0))))), ((t1.c0 IN (t1.c1)) IN (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0)&(t1.c0)) IN ((t1.c0 IN ())))) ORDER BY ((((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(CAST(t1.c1 AS TEXT))))AND(t1.c0 COLLATE BINARY)))AND(MIN(t1.c1, t1.c1, t1.c0))) ASC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((((t1.c0)&(t1.c0)) IN ((t1.c0 IN ())))) ORDER BY ((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))OR(t1.c1))) BETWEEN (CAST(t1.c1 AS TEXT)) AND ((((t1.c0))<=((t1.c0))))), ((t1.c0 IN (t1.c1)) IN (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0)&(t1.c0)) IN ((t1.c0 IN ())))) ORDER BY ((((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(CAST(t1.c1 AS TEXT))))AND(t1.c0 COLLATE BINARY)))AND(MIN(t1.c1, t1.c1, t1.c0))) ASC  NULLS LAST LIMIT 0X0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CAST(((t1.c0)-(260994655)) AS BLOB));
SELECT MAX(t1.c1) FROM t1 WHERE (((CAST(((t1.c0)-(260994655)) AS BLOB))AND(CAST(t1.c0 COLLATE RTRIM AS TEXT)))) LIMIT 2 INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (CASE t1.c1 COLLATE NOCASE  WHEN (((t1.c1, t1.c1, -1.967749805E9))<((t1.c1, t1.c0, t1.c0))) THEN t1.c0 COLLATE BINARY WHEN (t1.c0 IN (0.04493669771343678)) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) WHEN SQLITE_SOURCE_ID() THEN t1.c0 WHEN ((t1.c0)OR(t1.c1)) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN x'52' THEN t1.c1 ELSE t1.c0 END WHEN t1.c0 THEN ((t1.c0)AND(t1.c1)) ELSE CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END END) LIMIT 0X2;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (UNLIKELY(t1.c0)) ORDER BY (((~ (t1.c1))) NOTNULL) DESC, (((NOT (t1.c1)))+(((t1.c1)-(t1.c0)))), (- (((t1.c1)<>(t1.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (UNLIKELY(t1.c0)) ORDER BY (((~ (t1.c1))) NOTNULL) DESC, (((NOT (t1.c1)))+(((t1.c1)-(t1.c0)))), (- (((t1.c1)!=(t1.c0)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((t1.c0)!=(t1.c0)) IN (((x'') ISNULL)))) ORDER BY (((~ (t1.c1))) NOTNULL) DESC, (((NOT (t1.c1)))+(((t1.c1)-(t1.c0)))), (- (((t1.c1)!=(t1.c0)))) DESC  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY JULIANDAY((- (t1.c0)), 0.09618319594565305, -1415981947)  NULLS FIRST, (NOT (((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))), (((x'', CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END))<((t1.c0 COLLATE BINARY, ((t1.c0) NOT BETWEEN (t1.c1) AND (x'ab3f'))))) ASC;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((t1.c1)AND((((- (x'')))>(((t1.c0)GLOB(t1.c0))))))) ORDER BY (((t1.c0 IN (t1.c1)))>>(((t1.c1)+(t1.c0)))) DESC, t1.c0 ASC, ((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))LIKE(CAST(t1.c0 AS NUMERIC))) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE x'' END) BETWEEN ((t1.c0 IN (t1.c0))) AND (((t1.c0)IS NOT(t1.c1))))) ORDER BY (((t1.c0 IN (t1.c1)))>>(((t1.c1)+(t1.c0)))) DESC, t1.c0 ASC, ((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))LIKE(CAST(t1.c0 AS NUMERIC)));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (UNLIKELY(DISTINCT (t1.c1 IN (t1.c0, t1.c1))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((UNLIKELY(DISTINCT (t1.c1 IN (t1.c0, t1.c1))))AND((+ (((((-1.997783105E9)AND(t1.c0)))OR(t1.c0))))))) ORDER BY ((t1.c0 COLLATE RTRIM)OR((NOT (t1.c1)))), t1.c0  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE ((~ (((t1.c1)>=(t1.c0))))) ORDER BY ((((((t1.c0) IS TRUE))OR(((t1.c0) NOT NULL))))OR(((t1.c1) ISNULL)))  NULLS LAST, x'f282'  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((~ (((t1.c1)=(t1.c0))))) ORDER BY -4.07840957E8  NULLS FIRST, CASE WHEN x'c5' THEN (+ (t1.c0)) ELSE (~ (t1.c1)) END  NULLS LAST, t1.c1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (LIKELIHOOD(DISTINCT CASE WHEN 0.058689931961938946 THEN t1.c1 WHEN 't' THEN t1.c0 ELSE t1.c0 END, ((t1.c0)GLOB(t1.c0)))) ORDER BY -4.07840957E8  NULLS FIRST, CASE WHEN x'c5' THEN (+ (t1.c0)) ELSE (~ (t1.c1)) END  NULLS LAST, t1.c1;
SELECT * FROM t1 WHERE ((~ (((t1.c1)>=(t1.c0))))) ORDER BY ((((((t1.c0) IS TRUE))OR(((t1.c0) NOT NULL))))OR(((t1.c1) ISNULL)))  NULLS LAST, x'f282'  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((~ (((t1.c1)=(t1.c0))))) ORDER BY -4.07840957E8  NULLS FIRST, CASE WHEN x'c5' THEN (+ (t1.c0)) ELSE (~ (t1.c1)) END  NULLS LAST, t1.c1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (LIKELIHOOD(DISTINCT CASE WHEN 0.058689931961938946 THEN t1.c1 WHEN 't' THEN t1.c0 ELSE t1.c0 END, ((t1.c0)GLOB(t1.c0)))) ORDER BY -4.07840957E8  NULLS FIRST, CASE WHEN x'c5' THEN (+ (t1.c0)) ELSE (~ (t1.c1)) END  NULLS LAST, t1.c1;
SELECT * FROM t1 WHERE (CASE WHEN ((t1.c1)%(t1.c1)) THEN ((t1.c1)GLOB(t1.c1)) ELSE ((NULL) IS TRUE) END) ORDER BY CASE t1.c1  WHEN UNLIKELY(t1.c1) THEN CAST(x'' AS INTEGER) WHEN (((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c1, t1.c0, t1.c1))) THEN (NOT (t1.c0)) WHEN CAST(t1.c1 AS BLOB) THEN (('1383623473')*(t1.c1)) END DESC, ((CAST(t1.c1 AS TEXT))&(CASE WHEN t1.c1 THEN 0.06824179925536078 WHEN t1.c1 THEN t1.c0 END)) ASC  NULLS FIRST, ((t1.c1 COLLATE BINARY) BETWEEN ((t1.c1 IN (t1.c1, t1.c1))) AND (CAST(t1.c1 AS NUMERIC))) ASC;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN ((t1.c1)%(t1.c1)) THEN ((t1.c1)GLOB(t1.c1)) ELSE ((NULL) IS TRUE) END)AND('&Sn'))) ORDER BY CASE t1.c1  WHEN UNLIKELY(t1.c1) THEN CAST(x'' AS INTEGER) WHEN (((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c1, t1.c0, t1.c1))) THEN (NOT (t1.c0)) WHEN CAST(t1.c1 AS BLOB) THEN (('1383623473')*(t1.c1)) END DESC, ((CAST(t1.c1 AS TEXT))&(CASE WHEN t1.c1 THEN 0.06824179925536078 WHEN t1.c1 THEN t1.c0 END)) ASC  NULLS FIRST, ((t1.c1 COLLATE BINARY) BETWEEN ((t1.c1 IN (t1.c1, t1.c1))) AND (CAST(t1.c1 AS NUMERIC))) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)*(t1.c0)))>>(t1.c1 COLLATE BINARY))) ORDER BY CASE t1.c1  WHEN UNLIKELY(t1.c1) THEN CAST(x'' AS INTEGER) WHEN (((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c1, t1.c0, t1.c1))) THEN (NOT (t1.c0)) WHEN CAST(t1.c1 AS BLOB) THEN (('1383623473')*(t1.c1)) END DESC, ((CAST(t1.c1 AS TEXT))&(CASE WHEN t1.c1 THEN 0.06824179925536078 WHEN t1.c1 THEN t1.c0 END)) ASC  NULLS FIRST, ((t1.c1 COLLATE BINARY) BETWEEN ((t1.c1 IN (t1.c1, t1.c1))) AND (CAST(t1.c1 AS NUMERIC))) ASC;
SELECT * FROM t1 WHERE (CASE WHEN ((t1.c1)%(t1.c1)) THEN ((t1.c1)GLOB(t1.c1)) ELSE ((NULL) IS TRUE) END) ORDER BY CASE t1.c1  WHEN UNLIKELY(t1.c1) THEN CAST(x'' AS INTEGER) WHEN (((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c1, t1.c0, t1.c1))) THEN (NOT (t1.c0)) WHEN CAST(t1.c1 AS BLOB) THEN (('1383623473')*(t1.c1)) END DESC, ((CAST(t1.c1 AS TEXT))&(CASE WHEN t1.c1 THEN 0.06824179925536078 WHEN t1.c1 THEN t1.c0 END)) ASC  NULLS FIRST, ((t1.c1 COLLATE BINARY) BETWEEN ((t1.c1 IN (t1.c1, t1.c1))) AND (CAST(t1.c1 AS NUMERIC))) ASC;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN ((t1.c1)%(t1.c1)) THEN ((t1.c1)GLOB(t1.c1)) ELSE ((NULL) IS TRUE) END)AND('&Sn'))) ORDER BY CASE t1.c1  WHEN UNLIKELY(t1.c1) THEN CAST(x'' AS INTEGER) WHEN (((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c1, t1.c0, t1.c1))) THEN (NOT (t1.c0)) WHEN CAST(t1.c1 AS BLOB) THEN (('1383623473')*(t1.c1)) END DESC, ((CAST(t1.c1 AS TEXT))&(CASE WHEN t1.c1 THEN 0.06824179925536078 WHEN t1.c1 THEN t1.c0 END)) ASC  NULLS FIRST, ((t1.c1 COLLATE BINARY) BETWEEN ((t1.c1 IN (t1.c1, t1.c1))) AND (CAST(t1.c1 AS NUMERIC))) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)*(t1.c0)))>>(t1.c1 COLLATE BINARY))) ORDER BY CASE t1.c1  WHEN UNLIKELY(t1.c1) THEN CAST(x'' AS INTEGER) WHEN (((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c1, t1.c0, t1.c1))) THEN (NOT (t1.c0)) WHEN CAST(t1.c1 AS BLOB) THEN (('1383623473')*(t1.c1)) END DESC, ((CAST(t1.c1 AS TEXT))&(CASE WHEN t1.c1 THEN 0.06824179925536078 WHEN t1.c1 THEN t1.c0 END)) ASC  NULLS FIRST, ((t1.c1 COLLATE BINARY) BETWEEN ((t1.c1 IN (t1.c1, t1.c1))) AND (CAST(t1.c1 AS NUMERIC))) ASC;
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c0))) IS FALSE)) ORDER BY ((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))!=(TYPEOF(t1.c1)));
SELECT * FROM t1 WHERE ((((NOT (t1.c0))) IS FALSE)) ORDER BY ((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))<>(TYPEOF(t1.c1))) LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE (((((0.09666087167780257)OR((t1.c0 IN (t1.c0)))))OR(((((t1.c1)AND(t1.c1)))OR(t1.c1))))) ORDER BY ((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))<>(TYPEOF(t1.c1))) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c0))) IS FALSE)) ORDER BY ((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))!=(TYPEOF(t1.c1)));
SELECT * FROM t1 WHERE ((((NOT (t1.c0))) IS FALSE)) ORDER BY ((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))<>(TYPEOF(t1.c1))) LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE (((((0.09666087167780257)OR((t1.c0 IN (t1.c0)))))OR(((((t1.c1)AND(t1.c1)))OR(t1.c1))))) ORDER BY ((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))<>(TYPEOF(t1.c1))) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (IFNULL(NULL, t1.c0) COLLATE BINARY) ORDER BY (+ (((t1.c0)-(t1.c1)))) ASC;
SELECT DISTINCT * FROM t1 WHERE (((IFNULL(NULL, t1.c0) COLLATE BINARY)AND(CAST(CAST(t1.c1 AS TEXT) AS TEXT)))) ORDER BY (((t1.c1))!=((CAST(t1.c1 AS TEXT)))) LIMIT 3;
SELECT ALL * FROM t1 WHERE (IFNULL(NULL, t1.c0) COLLATE BINARY) ORDER BY (+ (((t1.c0)-(t1.c1)))) ASC;
SELECT DISTINCT * FROM t1 WHERE (((IFNULL(NULL, t1.c0) COLLATE BINARY)AND(CAST(CAST(t1.c1 AS TEXT) AS TEXT)))) ORDER BY (((t1.c1))!=((CAST(t1.c1 AS TEXT)))) LIMIT 3;
SELECT ALL * FROM t1 WHERE (((+ (t1.c0)) IN ()));
SELECT DISTINCT * FROM t1 WHERE (((+ (t1.c0)) IN ())) ORDER BY ((((NOT (t1.c1))))>((t1.c0 COLLATE BINARY))) DESC;
SELECT ALL * FROM t1 WHERE (((+ (t1.c0)) IN ()));
SELECT DISTINCT * FROM t1 WHERE (((+ (t1.c0)) IN ())) ORDER BY ((((NOT (t1.c1))))>((t1.c0 COLLATE BINARY))) DESC;
SELECT MIN(t1.c0) FROM t1 WHERE (SQLITE_SOURCE_ID()) ORDER BY (CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END IN (((t1.c0) NOTNULL))) ASC, ROUND((t1.c1 IN ()), ((t1.c0) NOT BETWEEN (t1.c1) AND ('-104042863')));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((SQLITE_SOURCE_ID())AND(((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) IS TRUE)))) ORDER BY (CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END IN (((t1.c0) NOTNULL))) ASC, ROUND((t1.c1 IN ()), ((t1.c0) NOT BETWEEN (t1.c1) AND ('-104042863'))) INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (((SQLITE_SOURCE_ID())||('씯+-G&{0k'))) ORDER BY (CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END IN (((t1.c0) NOTNULL))) ASC, ROUND((t1.c1 IN ()), ((t1.c0) NOT BETWEEN (t1.c1) AND ('-104042863')));
SELECT ALL * FROM t1 WHERE ((((+ (t1.c1)))GLOB((((x'd3b8'))!=((t1.c1)))))) ORDER BY CASE WHEN ((((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR('-1e500')))AND(t1.c0)))OR(t1.c1)) THEN (((t1.c0, t1.c0))<((t1.c1, NULL))) END, CAST(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((+ (t1.c1)))GLOB((((x'd3b8'))<((t1.c1)))))) ORDER BY CASE WHEN ((((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR('-1e500')))AND(t1.c0)))OR(t1.c1)) THEN (((t1.c0, t1.c0))<((t1.c1, NULL))) END, CAST(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END AS BLOB) DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t1 WHERE ((((+ (t1.c1)))GLOB((((x'd3b8'))!=((t1.c1)))))) ORDER BY CASE WHEN ((((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR('-1e500')))AND(t1.c0)))OR(t1.c1)) THEN (((t1.c0, t1.c0))<((t1.c1, NULL))) END, CAST(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((+ (t1.c1)))GLOB((((x'd3b8'))<((t1.c1)))))) ORDER BY CASE WHEN ((((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR('-1e500')))AND(t1.c0)))OR(t1.c1)) THEN (((t1.c0, t1.c0))<((t1.c1, NULL))) END, CAST(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END AS BLOB) DESC  NULLS FIRST LIMIT 2;
SELECT MIN(t1.c1) FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC)) BETWEEN (CAST(t1.c1 AS TEXT)) AND (t1.c0))) ORDER BY ((ROUND(t1.c0, t1.c1)) IS FALSE) DESC  NULLS FIRST, ((((t1.c1)+(NULL)))+(t1.c0))  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC)) BETWEEN (CAST(t1.c1 AS TEXT)) AND (t1.c0))) ORDER BY (t1.c0 COLLATE NOCASE IN (t1.c1))  NULLS FIRST, CAST(((((t1.c1)AND(t1.c1)))OR(t1.c0)) AS INTEGER) ASC LIMIT 3 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CAST(((t1.c0)*(t1.c0)) AS NUMERIC)) ORDER BY (t1.c0 COLLATE NOCASE IN (t1.c1))  NULLS FIRST, CAST(((((t1.c1)AND(t1.c1)))OR(t1.c0)) AS INTEGER) ASC LIMIT 3;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c1)<(t1.c1)) COLLATE RTRIM) ORDER BY 'jQ' DESC  NULLS FIRST, ((CASE WHEN t1.c0 THEN NULL WHEN '' THEN t1.c0 ELSE t1.c0 END) NOT NULL)  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1)<(t1.c1)) COLLATE RTRIM)AND((((((- (t1.c1)))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))))AND((((t1.c1))!=((t1.c1)))))))) ORDER BY 'jQ' DESC  NULLS FIRST, ((CASE WHEN t1.c0 THEN NULL WHEN '' THEN t1.c0 ELSE t1.c0 END) NOT NULL)  NULLS LAST INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE ((t1.c0 COLLATE RTRIM IN (((((t1.c1)AND(t1.c1)))AND(t1.c0))))) ORDER BY 'jQ' DESC  NULLS FIRST, ((CASE WHEN t1.c0 THEN NULL WHEN '' THEN t1.c0 ELSE t1.c0 END) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((0Xffffffffa96bc24b) BETWEEN (t1.c0) AND (t1.c1)) COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((0Xffffffffa96bc24b) BETWEEN (t1.c0) AND (t1.c1)) COLLATE RTRIM)AND(t1.c0))) LIMIT 0X3 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c1) LIMIT 0x3;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c1)>>(t1.c1))) NOT BETWEEN (CASE WHEN t1.c1 THEN t1.c0 END) AND (((t1.c0) ISNULL)))) ORDER BY (NOT (-1.028690489E9)) ASC  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c1)>>(t1.c1))) NOT BETWEEN (CASE WHEN t1.c1 THEN t1.c0 END) AND (((t1.c0) ISNULL)))) ORDER BY (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) IN ()) DESC, ((t1.c1 IN (t1.c0, t1.c1, t1.c1)) IN (CASE WHEN t1.c1 THEN t1.c1 END, ((t1.c1)LIKE(t1.c0)))) ASC, ((((((((((NULL)OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((CASE '-208856384'  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN '' ELSE t1.c1 END) BETWEEN (((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0))) AND (TRIM(DISTINCT t1.c0, t1.c0)))) ORDER BY CAST(x'7f49' AS TEXT) ASC;
SELECT DISTINCT * FROM t1 WHERE (((CASE '-208856384'  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN '' ELSE t1.c1 END) BETWEEN (((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0))) AND (TRIM(DISTINCT t1.c0, t1.c0)))) ORDER BY CAST(x'7f49' AS TEXT) ASC LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (json_quote(CASE t1.c1  WHEN x'' THEN t1.c1 END)) ORDER BY CAST(x'7f49' AS TEXT) ASC LIMIT 0X3;
SELECT ALL * FROM t1 WHERE (((CASE '-208856384'  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN '' ELSE t1.c1 END) BETWEEN (((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0))) AND (TRIM(DISTINCT t1.c0, t1.c0)))) ORDER BY CAST(x'7f49' AS TEXT) ASC;
SELECT DISTINCT * FROM t1 WHERE (((CASE '-208856384'  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN '' ELSE t1.c1 END) BETWEEN (((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0))) AND (TRIM(DISTINCT t1.c0, t1.c0)))) ORDER BY CAST(x'7f49' AS TEXT) ASC LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (json_quote(CASE t1.c1  WHEN x'' THEN t1.c1 END)) ORDER BY CAST(x'7f49' AS TEXT) ASC LIMIT 0X3;
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))>=(t1.c0 COLLATE NOCASE)));
SELECT * FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))>=(t1.c0 COLLATE NOCASE)))AND(CAST(((t1.c0)<(t1.c1)) AS REAL)))) LIMIT 1;
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))>=(t1.c0 COLLATE NOCASE)));
SELECT * FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))>=(t1.c0 COLLATE NOCASE)))AND(CAST(((t1.c0)<(t1.c1)) AS REAL)))) LIMIT 1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (x'');
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((x'')AND(NULL))) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CAST(CAST(t1.c0 AS TEXT) AS TEXT));
SELECT COUNT(*) FROM t1 WHERE (((TYPEOF(t1.c0))IS NOT(((t1.c0) NOTNULL)))) ORDER BY CAST((- (t1.c1)) AS NUMERIC) DESC, ((t1.c1 COLLATE BINARY) ISNULL) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((TYPEOF(t1.c0))IS NOT(((t1.c0) NOTNULL)))) ORDER BY ((((x'e2')+(t1.c1))) NOT BETWEEN ((NOT (t1.c0))) AND (((t1.c1) NOTNULL))), CASE WHEN t1.c1 COLLATE BINARY THEN ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c0)>=(t1.c1)) WHEN (t1.c0 IN (t1.c0)) THEN '2032568631' WHEN ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND('-1415981947')) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c0 WHEN t1.c1 THEN t1.c1 END END  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c1)OR('1477179842')))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY ((((x'e2')+(t1.c1))) NOT BETWEEN ((NOT (t1.c0))) AND (((t1.c1) NOTNULL))), CASE WHEN t1.c1 COLLATE BINARY THEN ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c0)>=(t1.c1)) WHEN (t1.c0 IN (t1.c0)) THEN '2032568631' WHEN ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND('-1415981947')) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c0 WHEN t1.c1 THEN t1.c1 END END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((((t1.c0, x'', t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, NULL, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c0, t1.c0)))))) ORDER BY ((((((CASE WHEN t1.c0 THEN 0.36122777574985754 WHEN NULL THEN t1.c0 WHEN 1771950567 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)AND(t1.c1)))AND((t1.c1 IN ()))))OR(t1.c1)), (+ (t1.c0 COLLATE RTRIM))  NULLS LAST, (((t1.c1) BETWEEN (t1.c0) AND (0x2aa0c52f)) IN ((((t1.c1, NULL, t1.c0))!=((t1.c0, t1.c1, t1.c0)))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((+ ((((t1.c0, x'', t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, NULL, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c0, t1.c0))))))AND((- (t1.c0))))) ORDER BY ((((((CASE WHEN t1.c0 THEN 0.36122777574985754 WHEN NULL THEN t1.c0 WHEN 0X699dd1e7 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)AND(t1.c1)))AND((t1.c1 IN ()))))OR(t1.c1)), (+ (t1.c0 COLLATE RTRIM))  NULLS LAST, (((t1.c1) BETWEEN (t1.c0) AND (715179311)) IN ((((t1.c1, NULL, t1.c0))<>((t1.c0, t1.c1, t1.c0)))))  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (0.6997054009571428) ORDER BY ((((((CASE WHEN t1.c0 THEN 0.36122777574985754 WHEN NULL THEN t1.c0 WHEN 1771950567 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)AND(t1.c1)))AND((t1.c1 IN ()))))OR(t1.c1)), (+ (t1.c0 COLLATE RTRIM))  NULLS LAST, (((t1.c1) BETWEEN (t1.c0) AND (0X2aa0c52f)) IN ((((t1.c1, NULL, t1.c0))!=((t1.c0, t1.c1, t1.c0)))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((HEX(DISTINCT t1.c0)) NOT NULL)) ORDER BY -747868847 ASC  NULLS FIRST, t1.c0 ASC  NULLS FIRST, LIKELY(t1.c1 COLLATE NOCASE)  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((HEX(DISTINCT t1.c0)) NOT NULL)) ORDER BY 0xffffffffd36c6d51 ASC  NULLS FIRST, t1.c0 ASC  NULLS FIRST, LIKELY(t1.c1 COLLATE NOCASE)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((HEX(DISTINCT t1.c0)) NOT NULL)) ORDER BY -747868847 ASC  NULLS FIRST, t1.c0 ASC  NULLS FIRST, LIKELY(t1.c1 COLLATE NOCASE)  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c0)AND(t1.c0)))OR(t1.c0)))>=((((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0)))))) ORDER BY ((((((((0.7326516555029623)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))<=(LIKELY(t1.c1))) ASC  NULLS FIRST, ((t1.c1)<=(t1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))>=((((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0))))))AND(CAST(1e500 AS TEXT)))) ORDER BY ((((((((0.7326516555029623)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))<=(LIKELY(t1.c1))) ASC  NULLS FIRST, ((t1.c1)<=(t1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE ((((t1.c1)!=(t1.c0)) IN ())) ORDER BY (t1.c1 COLLATE RTRIM IN (TRIM(DISTINCT t1.c1))) ASC  NULLS LAST, (((t1.c1) IS FALSE) IN (((t1.c1)LIKE(t1.c1)))) ASC  NULLS LAST, SQLITE_COMPILEOPTION_GET(t1.c0 COLLATE BINARY) ASC;
SELECT MIN(t1.c1) FROM t1 WHERE ((((t1.c1)<(t1.c0)) IN ())) ORDER BY (t1.c1 COLLATE RTRIM IN (TRIM(DISTINCT t1.c1))) ASC  NULLS LAST, (((t1.c1) IS FALSE) IN (((t1.c1)LIKE(t1.c1)))) ASC  NULLS LAST, SQLITE_COMPILEOPTION_GET(t1.c0 COLLATE BINARY) ASC LIMIT 0X1;
SELECT MIN(t1.c1) FROM t1 WHERE ((((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)) IN ())) ORDER BY TYPEOF(((NULL) IS TRUE)), (t1.c1 IN ()), (0.13626072104191445 IN (NULL)) DESC  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1 WHERE ((((((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)) IN ()))AND(json_quote(((t1.c1) NOTNULL))))) ORDER BY (NOT ((((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, 77817654))))), ((((t1.c1) NOT NULL))-(((t1.c1)%(t1.c0))))  NULLS FIRST, HEX(t1.c0) COLLATE NOCASE ASC LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c1)) BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((t1.c0)))) ORDER BY CAST(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE '' END AS INTEGER) ASC, ((t1.c0 COLLATE BINARY) NOT BETWEEN (((0.6931687844432638) ISNULL)) AND (((t1.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1)) BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((t1.c0)))) ORDER BY CAST(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE '' END AS INTEGER) ASC, ((t1.c0 COLLATE BINARY) NOT BETWEEN (((0.6931687844432638) ISNULL)) AND (((t1.c1) IS TRUE))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c1)) BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((t1.c0)))) ORDER BY CAST(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE '' END AS INTEGER) ASC, ((t1.c0 COLLATE BINARY) NOT BETWEEN (((0.6931687844432638) ISNULL)) AND (((t1.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1)) BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((t1.c0)))) ORDER BY CAST(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE '' END AS INTEGER) ASC, ((t1.c0 COLLATE BINARY) NOT BETWEEN (((0.6931687844432638) ISNULL)) AND (((t1.c1) IS TRUE))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) NOT NULL));
SELECT DISTINCT * FROM t1 WHERE (((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) NOT NULL))AND(((0.37736632700229034) ISNULL)))) ORDER BY 'ꆈN' ASC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) NOT NULL));
SELECT DISTINCT * FROM t1 WHERE (((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) NOT NULL))AND(((0.37736632700229034) ISNULL)))) ORDER BY 'ꆈN' ASC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (CASE WHEN CAST(t1.c0 AS NUMERIC) THEN HEX(NULL) WHEN (- (t1.c1)) THEN ((t1.c0) NOT NULL) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN CAST(t1.c0 AS NUMERIC) THEN HEX(NULL) WHEN (- (t1.c1)) THEN ((t1.c0) NOT NULL) END)AND((((+ (t1.c0)))OR(t1.c1))))) ORDER BY (((t1.c0, t1.c1)) NOT BETWEEN ((((t1.c1)||(t1.c1)), (t1.c1 IN ()))) AND ((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR('#')), CAST(t1.c0 AS INTEGER)))) ASC LIMIT 1;
SELECT ALL * FROM t1 WHERE (CASE WHEN CAST(t1.c0 AS NUMERIC) THEN HEX(NULL) WHEN (- (t1.c1)) THEN ((t1.c0) NOT NULL) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN CAST(t1.c0 AS NUMERIC) THEN HEX(NULL) WHEN (- (t1.c1)) THEN ((t1.c0) NOT NULL) END)AND((((+ (t1.c0)))OR(t1.c1))))) ORDER BY (((t1.c0, t1.c1)) NOT BETWEEN ((((t1.c1)||(t1.c1)), (t1.c1 IN ()))) AND ((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR('#')), CAST(t1.c0 AS INTEGER)))) ASC LIMIT 1;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1)&(x''))) NOT NULL)) ORDER BY ((((t1.c0) NOTNULL))<=((('IO') ISNULL))) DESC  NULLS LAST, ((x'')LIKE((- (t1.c1))))  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((t1.c1)&(x''))) NOT NULL)) ORDER BY (~ (NULL)) ASC, CASE ((t1.c0) NOTNULL)  WHEN (t1.c0 IN ()) THEN ((t1.c0) BETWEEN (t1.c1) AND (0x38c74aa4)) ELSE (- (t1.c0)) END  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((- (t1.c1)), (t1.c1 IN ()), ((t1.c1) ISNULL), (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1))), ((t1.c1) NOT NULL)))!=((((t1.c0)IS(t1.c0)), (NOT (t1.c0)), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), (t1.c1 IN (t1.c0, t1.c0)), ((t1.c0) IS FALSE))))) ORDER BY 'pk' ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((- (t1.c1)), (t1.c1 IN ()), ((t1.c1) ISNULL), (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1))), ((t1.c1) NOT NULL)))<((((t1.c0)IS(t1.c0)), (NOT (t1.c0)), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), (t1.c1 IN (t1.c0, t1.c0)), ((t1.c0) IS FALSE))))) ORDER BY NULL DESC, ((NULL) NOT NULL)  NULLS LAST LIMIT 5 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 AS TEXT) COLLATE RTRIM) ORDER BY NULL DESC, ((NULL) NOT NULL)  NULLS LAST LIMIT 0X5;
SELECT ALL * FROM t1 WHERE (((((- (t1.c1)), (t1.c1 IN ()), ((t1.c1) ISNULL), (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1))), ((t1.c1) NOT NULL)))!=((((t1.c0)IS(t1.c0)), (NOT (t1.c0)), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), (t1.c1 IN (t1.c0, t1.c0)), ((t1.c0) IS FALSE))))) ORDER BY 'pk' ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((- (t1.c1)), (t1.c1 IN ()), ((t1.c1) ISNULL), (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1))), ((t1.c1) NOT NULL)))<((((t1.c0)IS(t1.c0)), (NOT (t1.c0)), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), (t1.c1 IN (t1.c0, t1.c0)), ((t1.c0) IS FALSE))))) ORDER BY NULL DESC, ((NULL) NOT NULL)  NULLS LAST LIMIT 5 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 AS TEXT) COLLATE RTRIM) ORDER BY NULL DESC, ((NULL) NOT NULL)  NULLS LAST LIMIT 0X5;
SELECT * FROM t1 WHERE (t1.c1 COLLATE NOCASE) ORDER BY 'U0*9' DESC, t1.c0  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c1 COLLATE NOCASE) ORDER BY 'U0*9' DESC, t1.c0  NULLS FIRST LIMIT 4 INTERSECT SELECT ALL * FROM t1 WHERE (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) COLLATE RTRIM) ORDER BY 'U0*9' DESC, t1.c0  NULLS FIRST LIMIT 0x4;
SELECT * FROM t1 WHERE (t1.c1 COLLATE NOCASE) ORDER BY 'U0*9' DESC, t1.c0  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c1 COLLATE NOCASE) ORDER BY 'U0*9' DESC, t1.c0  NULLS FIRST LIMIT 4 INTERSECT SELECT ALL * FROM t1 WHERE (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) COLLATE RTRIM) ORDER BY 'U0*9' DESC, t1.c0  NULLS FIRST LIMIT 0x4;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY CAST(((x'') NOT NULL) AS INTEGER), ((t1.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)AND(((((t1.c0) NOT NULL)) IS FALSE)))) ORDER BY MIN((~ (t1.c1)), CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, ((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1))) ASC  NULLS FIRST, ((t1.c1 COLLATE NOCASE) BETWEEN (CAST(t1.c1 AS INTEGER)) AND (((t1.c0)&(t1.c0)))) ASC  NULLS LAST, 0.4662004213261387 DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY CAST(((x'') NOT NULL) AS INTEGER), ((t1.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)AND(((((t1.c0) NOT NULL)) IS FALSE)))) ORDER BY MIN((~ (t1.c1)), CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, ((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1))) ASC  NULLS FIRST, ((t1.c1 COLLATE NOCASE) BETWEEN (CAST(t1.c1 AS INTEGER)) AND (((t1.c0)&(t1.c0)))) ASC  NULLS LAST, 0.4662004213261387 DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) AS NUMERIC)) ORDER BY (t1.c1 IN ());
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) AS NUMERIC)) ORDER BY (t1.c1 IN ()) LIMIT 1;
SELECT * FROM t1 WHERE (CAST(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) AS NUMERIC)) ORDER BY (t1.c1 IN ());
SELECT * FROM t1 WHERE (204650698);
SELECT DISTINCT * FROM t1 WHERE (((0Xc32b8ca)AND((((t1.c1)>>(t1.c0)) IN (((t1.c1)*(t1.c1))))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(x'' AS NUMERIC));
SELECT * FROM t1 WHERE (204650698);
SELECT DISTINCT * FROM t1 WHERE (((0Xc32b8ca)AND((((t1.c1)>>(t1.c0)) IN (((t1.c1)*(t1.c1))))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(x'' AS NUMERIC));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CAST(t1.c1 COLLATE RTRIM AS BLOB));
SELECT MIN(t1.c0) FROM t1 WHERE (CAST(t1.c1 COLLATE RTRIM AS BLOB)) LIMIT 2;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c0) IS FALSE)) NOTNULL));
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c0) IS FALSE)) NOTNULL)) LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE (((+ (t1.c1)) IN ()));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((+ (t1.c1)) IN ()))AND((((t1.c1)+(t1.c0)) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))))) LIMIT 0X2 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ('') LIMIT 0x2;
SELECT ALL * FROM t1 WHERE ((t1.c0 IN ()));
SELECT DISTINCT * FROM t1 WHERE ((t1.c0 IN ())) ORDER BY SQLITE_VERSION(), CASE WHEN ((t1.c0)&(t1.c1)) THEN ((t1.c0)>=(t1.c1)) END, -751069479  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE ((t1.c0 IN ()));
SELECT DISTINCT * FROM t1 WHERE ((t1.c0 IN ())) ORDER BY SQLITE_VERSION(), CASE WHEN ((t1.c0)&(t1.c1)) THEN ((t1.c0)>=(t1.c1)) END, -751069479  NULLS LAST LIMIT 1;
SELECT MAX(t1.c1) FROM t1 WHERE (t1.c1);
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c1)AND(((t1.c1)LIKE(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))))) ORDER BY (((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c1))))%((+ (NULL))))  NULLS LAST LIMIT 0X0;
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))*(x''))) ORDER BY (((- (t1.c0)))&(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)) ASC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))*(x''))) ORDER BY t1.c1  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((+ (t1.c1))) BETWEEN ((t1.c1 IN (x'', t1.c1))) AND (((t1.c1)GLOB(t1.c0))))) ORDER BY t1.c1  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))*(x''))) ORDER BY (((- (t1.c0)))&(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)) ASC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))*(x''))) ORDER BY t1.c1  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((+ (t1.c1))) BETWEEN ((t1.c1 IN (x'', t1.c1))) AND (((t1.c1)GLOB(t1.c0))))) ORDER BY t1.c1  NULLS FIRST LIMIT 0X0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CASE t1.c1  WHEN 'z' COLLATE NOCASE THEN ((((t1.c0)OR(x'96')))AND(t1.c0)) WHEN t1.c0 THEN COALESCE(t1.c0, t1.c0, t1.c0) WHEN 0.09618319594565305 COLLATE NOCASE THEN t1.c0 COLLATE BINARY WHEN t1.c1 THEN ((t1.c1)|(t1.c1)) END) ORDER BY CAST((('4e0')IS(t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE (CASE t1.c1  WHEN 'z' COLLATE NOCASE THEN ((((t1.c0)OR(x'96')))AND(t1.c0)) WHEN t1.c0 THEN COALESCE(t1.c0, t1.c0, t1.c0) WHEN 0.09618319594565305 COLLATE NOCASE THEN t1.c0 COLLATE BINARY WHEN t1.c1 THEN ((t1.c1)|(t1.c1)) END) ORDER BY (((- (t1.c1)))*(0.6602283942757515)) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((('-1628956291')OR((- (t1.c1)))))AND(UNLIKELY(t1.c0))))OR(((((t1.c1)AND(t1.c1)))OR(t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((((((('-1628956291')OR((- (t1.c1)))))AND(UNLIKELY(t1.c0))))OR(((((t1.c1)AND(t1.c1)))OR(t1.c0)))))AND(t1.c1 COLLATE RTRIM)));
SELECT ALL * FROM t1 WHERE ((((((('-1628956291')OR((- (t1.c1)))))AND(UNLIKELY(t1.c0))))OR(((((t1.c1)AND(t1.c1)))OR(t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((((((('-1628956291')OR((- (t1.c1)))))AND(UNLIKELY(t1.c0))))OR(((((t1.c1)AND(t1.c1)))OR(t1.c0)))))AND(t1.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM t1 WHERE ((((NOT (t1.c0))) ISNULL));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((NOT (t1.c0))) ISNULL))AND(CASE WHEN IFNULL(t1.c0, t1.c0) THEN t1.c0 COLLATE BINARY END))) LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (TYPEOF((~ (t1.c1)))) LIMIT 1;
SELECT MIN(t1.c1) FROM t1 WHERE (CAST(((t1.c1)+(x'6c')) AS BLOB)) ORDER BY (((COALESCE(t1.c1, 0.5186165793744397, t1.c0, t1.c1), (((t1.c0))<((t1.c1))), (- ('kAV&r2!')), t1.c1, ((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))>=((((NULL) NOT BETWEEN (t1.c0) AND (t1.c0)), NULL, CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, 'l5\F ' COLLATE BINARY, x'f1')))  NULLS LAST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((CAST(((t1.c1)+(x'6c')) AS BLOB))AND((((t1.c1)!=(t1.c0)) IN ())))) ORDER BY (((COALESCE(t1.c1, 0.5186165793744397, t1.c0, t1.c1), (((t1.c0))<((t1.c1))), (- ('kAV&r2!')), t1.c1, ((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))>=((((NULL) NOT BETWEEN (t1.c0) AND (t1.c0)), NULL, CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, 'l5\F ' COLLATE BINARY, x'f1')))  NULLS LAST LIMIT 0x4;
SELECT * FROM t1 WHERE (UPPER((('0.06824179925536078') BETWEEN (x'a19a') AND (t1.c1))));
SELECT * FROM t1 WHERE (((UPPER((('0.06824179925536078') BETWEEN (x'a19a') AND (t1.c1))))AND((0Xffffffffee0da927 IN ()))));
SELECT * FROM t1 WHERE (UPPER((('0.06824179925536078') BETWEEN (x'a19a') AND (t1.c1))));
SELECT * FROM t1 WHERE (((UPPER((('0.06824179925536078') BETWEEN (x'a19a') AND (t1.c1))))AND((0Xffffffffee0da927 IN ()))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((NOT (t1.c1)))IS NOT(t1.c1 COLLATE RTRIM)));
SELECT MIN(t1.c0) FROM t1 WHERE ((((NOT (t1.c1)))IS NOT(t1.c1 COLLATE RTRIM))) INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE (NULL);
SELECT * FROM t1 WHERE (((((-6.17936325E8)<>(t1.c0)))<(((t1.c0)||(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((-6.17936325E8)>(t1.c0)))<(((t1.c0)||(t1.c0))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) LIMIT 1;
SELECT * FROM t1 WHERE (((((-6.17936325E8)<>(t1.c0)))<(((t1.c0)||(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((-6.17936325E8)>(t1.c0)))<(((t1.c0)||(t1.c0))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) LIMIT 1;
SELECT MIN(t1.c0) FROM t1 WHERE (x'b54c') ORDER BY t1.c1 COLLATE BINARY;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((x'b54c')AND(IFNULL(DISTINCT t1.c1, x'0a')))) ORDER BY CASE WHEN (t1.c0 IN (t1.c1, t1.c1)) THEN (((('1486003871')OR(t1.c1)))AND(t1.c0)) WHEN (~ (t1.c1)) THEN ((t1.c1) NOTNULL) END LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (COALESCE((t1.c1 IN (t1.c1, t1.c1)), (t1.c1 IN (t1.c0, t1.c1, t1.c0)), CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)) ORDER BY (+ ((t1.c1 IN ())))  NULLS FIRST, ((t1.c0) IS TRUE) ASC  NULLS FIRST, (- (((t1.c0)<>(t1.c1)))), ((((((((((t1.c0)AND(t1.c0)))OR('0.13626072104191445')))AND(NULL)))OR(t1.c0))) NOT NULL) ASC, (~ (t1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (COALESCE((t1.c1 IN (t1.c1)), (t1.c1 IN (t1.c0, t1.c1, t1.c0)), CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)) ORDER BY ((((((NULL)OR(t1.c0)))AND(t1.c1)))OR(t1.c0)) COLLATE NOCASE  NULLS FIRST, ABS(t1.c1 COLLATE BINARY) DESC, SUBSTR((((t1.c1, t1.c1)) NOT BETWEEN ((NULL, t1.c1)) AND ((t1.c1, t1.c0))), ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(')')));
SELECT * FROM t1 WHERE (t1.c1) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY CASE WHEN ((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))AND(t1.c1)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 END WHEN (((t1.c1, '1486003871', t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c0, t1.c0))) THEN ((t1.c1)>=(t1.c0)) END ASC;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY CASE WHEN ((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))AND(t1.c1)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 END WHEN (((t1.c1, '1486003871', t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c0, t1.c0))) THEN ((t1.c1)>=(t1.c0)) END ASC;
SELECT MAX(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY (NOT (((t1.c1)>>(t1.c0))))  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY (NOT (((t1.c1)>>(t1.c0))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((- (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)));
SELECT * FROM t1 WHERE ((- (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END))) LIMIT 1;
SELECT ALL * FROM t1 WHERE ((- (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)));
SELECT * FROM t1 WHERE ((- (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END))) LIMIT 1;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CASE WHEN ((NULL)+(t1.c0)) THEN t1.c0 WHEN LOWER(t1.c1) THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) WHEN ((((t1.c0)OR(t1.c0)))AND(t1.c1)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) WHEN TYPEOF(t1.c0) THEN (t1.c1 IN (t1.c1)) ELSE 'n[X' COLLATE NOCASE END);
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (CASE WHEN ((NULL)+(t1.c0)) THEN t1.c0 WHEN LOWER(t1.c1) THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) WHEN ((((t1.c0)OR(t1.c0)))AND(t1.c1)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) WHEN TYPEOF(t1.c0) THEN (t1.c1 IN (t1.c1)) ELSE 'n[X' COLLATE NOCASE END) INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 NOT INDEXED WHERE (((((t1.c0)LIKE(t1.c1))) BETWEEN (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN '0.5568399481732258' END) AND (CAST(t1.c1 AS NUMERIC))));
SELECT * FROM t1 WHERE (UPPER(t1.c0) COLLATE NOCASE);
SELECT * FROM t1 WHERE (((UPPER(t1.c0) COLLATE NOCASE)AND(((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END) NOT BETWEEN ((t1.c0 IN ())) AND ((- (t1.c1))))))) ORDER BY (((t1.c0, t1.c0)) BETWEEN ((t1.c1 COLLATE BINARY, t1.c1 COLLATE BINARY)) AND ((((t1.c1)=(t1.c1)), (((t1.c1, t1.c0))<((t1.c0, x'9b')))))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (UPPER(t1.c0) COLLATE NOCASE);
SELECT * FROM t1 WHERE (((UPPER(t1.c0) COLLATE NOCASE)AND(((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END) NOT BETWEEN ((t1.c0 IN ())) AND ((- (t1.c1))))))) ORDER BY (((t1.c0, t1.c0)) BETWEEN ((t1.c1 COLLATE BINARY, t1.c1 COLLATE BINARY)) AND ((((t1.c1)=(t1.c1)), (((t1.c1, t1.c0))<((t1.c0, x'9b')))))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c1)GLOB(t1.c1 COLLATE BINARY)));
SELECT * FROM t1 WHERE (((t1.c1)GLOB(t1.c1 COLLATE BINARY))) INTERSECT SELECT * FROM t1 WHERE (x'');
SELECT * FROM t1 WHERE (((t1.c1)GLOB(t1.c1 COLLATE BINARY)));
SELECT * FROM t1 WHERE (((t1.c1)GLOB(t1.c1 COLLATE BINARY))) INTERSECT SELECT * FROM t1 WHERE (x'');
SELECT ALL * FROM t1 WHERE (INSTR((NOT (t1.c0)), t1.c0));
SELECT * FROM t1 WHERE (((INSTR((NOT (t1.c0)), t1.c0))AND(t1.c1 COLLATE BINARY))) ORDER BY ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND((NOT (t1.c1)))))AND(((0.6084796362252336)>(t1.c0)))))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))) ASC LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (((t1.c0) NOT BETWEEN ('1552213072') AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND((NOT (t1.c1)))))AND(((0.6084796362252336)>(t1.c0)))))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))) ASC LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (INSTR((NOT (t1.c0)), t1.c0));
SELECT * FROM t1 WHERE (((INSTR((NOT (t1.c0)), t1.c0))AND(t1.c1 COLLATE BINARY))) ORDER BY ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND((NOT (t1.c1)))))AND(((0.6084796362252336)>(t1.c0)))))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))) ASC LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (((t1.c0) NOT BETWEEN ('1552213072') AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND((NOT (t1.c1)))))AND(((0.6084796362252336)>(t1.c0)))))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))) ASC LIMIT 0x0;
SELECT COUNT(*) FROM t1 WHERE ((~ ((- (t1.c1)))));
SELECT COUNT(*) FROM t1 WHERE ((((~ ((- (t1.c1)))))AND(((((t1.c1))>=((t1.c1))) IN ((t1.c1 IN ())))))) ORDER BY ((((t1.c0 COLLATE NOCASE)AND(CASE WHEN t1.c1 THEN t1.c1 END)))OR((NOT (t1.c1)))), ((((((0x1dfe457e)AND((((t1.c0))>((t1.c0))))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND((- (t1.c1))))  NULLS LAST LIMIT 1 INTERSECT SELECT COUNT(*) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 END) AND (CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END))) ORDER BY ((((t1.c0 COLLATE NOCASE)AND(CASE WHEN t1.c1 THEN t1.c1 END)))OR((NOT (t1.c1)))), ((((((0X1dfe457e)AND((((t1.c0))>((t1.c0))))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND((- (t1.c1))))  NULLS LAST LIMIT 0x1;
SELECT * FROM t1 WHERE (CAST(t1.c1 COLLATE RTRIM AS TEXT));
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 COLLATE RTRIM AS TEXT))AND(x''))) INTERSECT SELECT * FROM t1 WHERE (IFNULL((+ (t1.c1)), (('''BOCs') NOT BETWEEN (t1.c0) AND (t1.c1))));
SELECT * FROM t1 WHERE (CAST(t1.c1 COLLATE RTRIM AS TEXT));
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 COLLATE RTRIM AS TEXT))AND(x''))) INTERSECT SELECT * FROM t1 WHERE (IFNULL((+ (t1.c1)), (('''BOCs') NOT BETWEEN (t1.c0) AND (t1.c1))));
SELECT ALL * FROM t1 WHERE (((t1.c0)IS NOT(((t1.c1)/(t1.c1))))) ORDER BY ((t1.c0) BETWEEN (CAST(t1.c1 AS BLOB)) AND (ABS(DISTINCT t1.c1)))  NULLS LAST, CAST(t1.c0 AS REAL) COLLATE RTRIM DESC;
SELECT ALL * FROM t1 WHERE (((t1.c0)IS NOT(((t1.c1)/(t1.c1))))) ORDER BY ((t1.c0) BETWEEN (CAST(t1.c1 AS BLOB)) AND (ABS(DISTINCT t1.c1)))  NULLS LAST, CAST(t1.c0 AS REAL) COLLATE RTRIM DESC;
SELECT ALL * FROM t1 WHERE (((t1.c0)IS NOT(((t1.c1)/(t1.c1))))) ORDER BY ((t1.c0) BETWEEN (CAST(t1.c1 AS BLOB)) AND (ABS(DISTINCT t1.c1)))  NULLS LAST, CAST(t1.c0 AS REAL) COLLATE RTRIM DESC;
SELECT ALL * FROM t1 WHERE (((t1.c0)IS NOT(((t1.c1)/(t1.c1))))) ORDER BY ((t1.c0) BETWEEN (CAST(t1.c1 AS BLOB)) AND (ABS(DISTINCT t1.c1)))  NULLS LAST, CAST(t1.c0 AS REAL) COLLATE RTRIM DESC;
SELECT ALL * FROM t1 WHERE (CAST(t1.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY ABS(DISTINCT UNLIKELY(t1.c0))  NULLS LAST, (((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)) IN (((((NULL)OR(t1.c1)))OR(t1.c1))));
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC) COLLATE NOCASE)AND(((t1.c0 COLLATE NOCASE) BETWEEN (TYPEOF(DISTINCT t1.c0)) AND (((t1.c0)%(t1.c0))))))) ORDER BY ABS(DISTINCT UNLIKELY(t1.c0))  NULLS LAST, (((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)) IN (((((NULL)OR(t1.c1)))OR(t1.c1)))) LIMIT 0x3;
SELECT ALL * FROM t1 WHERE (CAST(t1.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY ABS(DISTINCT UNLIKELY(t1.c0))  NULLS LAST, (((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)) IN (((((NULL)OR(t1.c1)))OR(t1.c1))));
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC) COLLATE NOCASE)AND(((t1.c0 COLLATE NOCASE) BETWEEN (TYPEOF(DISTINCT t1.c0)) AND (((t1.c0)%(t1.c0))))))) ORDER BY ABS(DISTINCT UNLIKELY(t1.c0))  NULLS LAST, (((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)) IN (((((NULL)OR(t1.c1)))OR(t1.c1)))) LIMIT 0x3;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN t1.c1 THEN (t1.c1 IN ()) WHEN ((t1.c1)%(t1.c0)) THEN (((t1.c1))>((t1.c0))) ELSE ((t1.c0) IS TRUE) END);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c1 THEN (t1.c1 IN ()) WHEN ((t1.c1)%(t1.c0)) THEN (((t1.c1))>((t1.c0))) ELSE ((t1.c0) IS TRUE) END)AND(((0Xffffffffab99d485) BETWEEN ((((0.18668602299009074)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) AND (TRIM(t1.c1, t1.c0)))))) ORDER BY ((((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(t1.c0))) NOTNULL) ASC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((t1.c1)%(t1.c1))) BETWEEN (t1.c0) AND ((((t1.c1))<>((t1.c1)))))) ORDER BY (((((t1.c0) IS TRUE), ((((((t1.c0)AND(t1.c1)))OR(x'3c')))AND(t1.c0))))<=((PRINTF(t1.c1, '飿{FI4'), ((t1.c0)>>(t1.c0)))))  NULLS FIRST, ((((0.6011081490645616)GLOB(t1.c1))) NOT NULL)  NULLS LAST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((t1.c1)%(t1.c1))) BETWEEN (t1.c0) AND ((((t1.c1))!=((t1.c1))))))AND(UNLIKELY(DISTINCT t1.c0 COLLATE BINARY)))) ORDER BY (((((t1.c0) IS TRUE), ((((((t1.c0)AND(t1.c1)))OR(x'3c')))AND(t1.c0))))<=((PRINTF(t1.c1, '飿{FI4'), ((t1.c0)>>(t1.c0)))))  NULLS FIRST, ((((0.6011081490645616)GLOB(t1.c1))) NOT NULL)  NULLS LAST INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (t1.c0) ORDER BY (((((t1.c0) IS TRUE), ((((((t1.c0)AND(t1.c1)))OR(x'3c')))AND(t1.c0))))<=((PRINTF(t1.c1, '飿{FI4'), ((t1.c0)>>(t1.c0)))))  NULLS FIRST, ((((0.6011081490645616)GLOB(t1.c1))) NOT NULL)  NULLS LAST;
SELECT * FROM t1 WHERE (CAST(((0.36851995269394877) BETWEEN (t1.c0) AND (t1.c0)) AS TEXT)) ORDER BY 'r炀!' DESC  NULLS LAST;
SELECT * FROM t1 WHERE (CAST(((0.36851995269394877) BETWEEN (t1.c0) AND (t1.c0)) AS TEXT)) ORDER BY 'r炀!' DESC  NULLS LAST LIMIT 2;
SELECT * FROM t1 WHERE (CAST(((0.36851995269394877) BETWEEN (t1.c0) AND (t1.c0)) AS TEXT)) ORDER BY 'r炀!' DESC  NULLS LAST;
SELECT * FROM t1 WHERE (CAST(((0.36851995269394877) BETWEEN (t1.c0) AND (t1.c0)) AS TEXT)) ORDER BY 'r炀!' DESC  NULLS LAST LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT DISTINCT COUNT(*) FROM t1 NOT INDEXED WHERE (((t1.c0)AND((((t1.c0 IN ()))LIKE(((t1.c1)&(t1.c0)))))));
SELECT ALL * FROM t1 WHERE (x'05');
SELECT DISTINCT * FROM t1 WHERE (x'05') LIMIT 2;
SELECT ALL * FROM t1 WHERE (x'05');
SELECT DISTINCT * FROM t1 WHERE (x'05') LIMIT 2;
SELECT * FROM t1 WHERE (LTRIM(t1.c1, t1.c1 COLLATE BINARY)) ORDER BY ((t1.c1) NOTNULL) COLLATE NOCASE  NULLS LAST, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (LTRIM(t1.c1, t1.c1 COLLATE BINARY)) ORDER BY CASE ((t1.c1) NOTNULL)  WHEN (~ (t1.c0)) THEN ((0.2904414702277408) IS FALSE) ELSE t1.c0 COLLATE NOCASE END  NULLS FIRST, (((((((t1.c1, t1.c0))==((t1.c0, t1.c1))))OR((NOT (t1.c1)))))OR(((t1.c0) NOTNULL))), CASE WHEN ((t1.c1)<<(t1.c1)) THEN '917254186' WHEN CAST(t1.c0 AS TEXT) THEN 'Y춃6G+{}' END DESC  NULLS FIRST, '#'  NULLS LAST;
SELECT * FROM t1 WHERE (LTRIM(t1.c1, t1.c1 COLLATE BINARY)) ORDER BY ((t1.c1) NOTNULL) COLLATE NOCASE  NULLS LAST, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (LTRIM(t1.c1, t1.c1 COLLATE BINARY)) ORDER BY CASE ((t1.c1) NOTNULL)  WHEN (~ (t1.c0)) THEN ((0.2904414702277408) IS FALSE) ELSE t1.c0 COLLATE NOCASE END  NULLS FIRST, (((((((t1.c1, t1.c0))==((t1.c0, t1.c1))))OR((NOT (t1.c1)))))OR(((t1.c0) NOTNULL))), CASE WHEN ((t1.c1)<<(t1.c1)) THEN '917254186' WHEN CAST(t1.c0 AS TEXT) THEN 'Y춃6G+{}' END DESC  NULLS FIRST, '#'  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN ()))AND(((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((0.2599864153481758, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c0))) IN ((((t1.c1, t1.c1, '1083185990')) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, t1.c0))), ((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))))));
SELECT MAX(t1.c0) FROM t1 WHERE (SUBSTR(((t1.c1)=(t1.c0)), ((t1.c0) NOTNULL)));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((SUBSTR(((t1.c1)==(t1.c0)), ((t1.c0) NOTNULL)))AND(t1.c0))) ORDER BY CAST(CASE '-1787681106'  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END AS NUMERIC)  NULLS FIRST, IFNULL((((t1.c1))>((t1.c1))), ((t1.c0) IS TRUE))  NULLS LAST, ((~ (0.9587347711385222)) IN ()) INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (LIKELIHOOD(DISTINCT (~ (t1.c1)), (t1.c1 IN (x'7151b6')))) ORDER BY CAST(CASE '-1787681106'  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END AS NUMERIC)  NULLS FIRST, IFNULL((((t1.c1))>((t1.c1))), ((t1.c0) IS TRUE))  NULLS LAST, ((~ (0.9587347711385222)) IN ());
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST((((t1.c1, t1.c0))=((0.28840059555161757, t1.c0))) AS BLOB)) ORDER BY CAST(((t1.c0) NOTNULL) AS TEXT) ASC;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((CAST((((t1.c1, t1.c0))==((0.28840059555161757, t1.c0))) AS BLOB))AND(CASE WHEN (NOT (t1.c0)) THEN x'd7' ELSE CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END END))) ORDER BY ((((t1.c1)-(t1.c1)))>>(x''))  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (TYPEOF(0.07751689649021953) COLLATE NOCASE);
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (TYPEOF(0.07751689649021953) COLLATE NOCASE) LIMIT 0 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CAST(x'fd3a2a9b' AS NUMERIC)) LIMIT 0;
SELECT MAX(t1.c0) FROM t1 WHERE ((+ (CASE WHEN -1028690489 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END))) ORDER BY t1.c1  NULLS FIRST;
SELECT MAX(t1.c0) FROM t1 WHERE ((((+ (CASE WHEN -1028690489 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))AND(((((- (t1.c0)), LIKELIHOOD(0.28305881043194536, t1.c0)))==((CAST(t1.c1 AS TEXT), t1.c0 COLLATE BINARY)))))) ORDER BY t1.c1  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1 WHERE ((((~ (t1.c0))) NOT BETWEEN (((t1.c0)>>(x'5e'))) AND (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((((~ (t1.c0))) NOT BETWEEN (((t1.c0)>>(x'5e'))) AND (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((((t1.c0 IN (t1.c0)))>=(((t1.c0) IS FALSE)))))) ORDER BY CAST(((t1.c0)=(t1.c0)) AS BLOB), t1.c0  NULLS FIRST, x'' DESC  NULLS LAST INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((NOT (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN NULL ELSE t1.c1 END))) ORDER BY CAST(((t1.c0)==(t1.c0)) AS BLOB), t1.c0  NULLS FIRST, x'' DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0)=(t1.c0)), t1.c0)) AND ((CASE NULL  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN x'6b30' END, ((t1.c0)<<(t1.c0)))))) ORDER BY (((t1.c0 IN (t1.c1))) BETWEEN ((t1.c1 IN (t1.c0))) AND (-1671112748 COLLATE NOCASE));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0)<=(t1.c0)), t1.c0)) AND ((CASE NULL  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN x'6b30' END, ((t1.c0)<<(t1.c0)))))) ORDER BY (((t1.c0 IN (t1.c1))) BETWEEN ((t1.c1 IN (t1.c0))) AND (-1671112748 COLLATE NOCASE));
SELECT * FROM t1 WHERE (CASE WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-10710109' WHEN t1.c1 THEN t1.c1 END COLLATE NOCASE);
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-10710109' WHEN t1.c1 THEN t1.c1 END COLLATE NOCASE) LIMIT 2;
SELECT * FROM t1 WHERE (CASE WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-10710109' WHEN t1.c1 THEN t1.c1 END COLLATE NOCASE);
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-10710109' WHEN t1.c1 THEN t1.c1 END COLLATE NOCASE) LIMIT 2;
SELECT * FROM t1 WHERE (CAST((~ (t1.c0)) AS BLOB)) ORDER BY t1.c1, ((((((((((t1.c1)!=(t1.c1)))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN '-16410412' THEN t1.c0 ELSE t1.c1 END)))OR(CAST(t1.c0 AS REAL))))OR(((t1.c0)/('')))))OR(((t1.c1)==(t1.c1))));
SELECT ALL * FROM t1 WHERE (((CAST((~ (t1.c0)) AS BLOB))AND((((t1.c1, t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((x'015d7645', ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), 1703411045)) AND (((- (t1.c1)), x'38', t1.c1 COLLATE RTRIM, ((t1.c0) IS TRUE))))))) ORDER BY t1.c1, ((((((((((t1.c1)<>(t1.c1)))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN '-16410412' THEN t1.c0 ELSE t1.c1 END)))OR(CAST(t1.c0 AS REAL))))OR(((t1.c0)/('')))))OR(((t1.c1)==(t1.c1))));
SELECT * FROM t1 WHERE (CAST((~ (t1.c0)) AS BLOB)) ORDER BY t1.c1, ((((((((((t1.c1)!=(t1.c1)))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN '-16410412' THEN t1.c0 ELSE t1.c1 END)))OR(CAST(t1.c0 AS REAL))))OR(((t1.c0)/('')))))OR(((t1.c1)==(t1.c1))));
SELECT ALL * FROM t1 WHERE (((CAST((~ (t1.c0)) AS BLOB))AND((((t1.c1, t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((x'015d7645', ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), 1703411045)) AND (((- (t1.c1)), x'38', t1.c1 COLLATE RTRIM, ((t1.c0) IS TRUE))))))) ORDER BY t1.c1, ((((((((((t1.c1)<>(t1.c1)))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN '-16410412' THEN t1.c0 ELSE t1.c1 END)))OR(CAST(t1.c0 AS REAL))))OR(((t1.c0)/('')))))OR(((t1.c1)==(t1.c1))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((UPPER(t1.c0)) IS TRUE)) ORDER BY (((- (t1.c0))) ISNULL)  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((UPPER(t1.c0)) IS TRUE)) ORDER BY (((- (t1.c0))) ISNULL)  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CAST(CAST(t1.c1 AS REAL) AS REAL)) ORDER BY (((- (t1.c0))) ISNULL)  NULLS FIRST LIMIT 2;
SELECT MAX(t1.c1) FROM t1 WHERE (UNLIKELY(DISTINCT ((t1.c1)>(t1.c1))));
SELECT MAX(t1.c1) FROM t1 WHERE (UNLIKELY(DISTINCT ((t1.c1)>(t1.c1)))) LIMIT 0X0 INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN '' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END)==(t1.c1))) LIMIT 0x0;
SELECT * FROM t1 WHERE ((NOT (IFNULL(DISTINCT t1.c0, t1.c0)))) ORDER BY (~ (t1.c0)) DESC;
SELECT DISTINCT * FROM t1 NOT INDEXED WHERE ((NOT (IFNULL(DISTINCT t1.c0, t1.c0)))) ORDER BY CAST((((0.06389991955429708, t1.c1, t1.c0))==(('-104042863', t1.c0, t1.c1))) AS REAL) ASC, (((t1.c1, t1.c1)) BETWEEN ((CAST(t1.c0 AS TEXT), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)) AND ((((t1.c1)OR(t1.c0)), COALESCE(t1.c0, t1.c1, t1.c1))))  NULLS LAST, 0X7dbbd8fb  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c0))) ORDER BY CAST((((0.06389991955429708, t1.c1, t1.c0))=(('-104042863', t1.c0, t1.c1))) AS REAL) ASC, (((t1.c1, t1.c1)) BETWEEN ((CAST(t1.c0 AS TEXT), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)) AND ((((t1.c1)OR(t1.c0)), COALESCE(t1.c0, t1.c1, t1.c1))))  NULLS LAST, 2109462779  NULLS LAST;
SELECT * FROM t1 WHERE ((NOT (IFNULL(DISTINCT t1.c0, t1.c0)))) ORDER BY (~ (t1.c0)) DESC;
SELECT DISTINCT * FROM t1 NOT INDEXED WHERE ((NOT (IFNULL(DISTINCT t1.c0, t1.c0)))) ORDER BY CAST((((0.06389991955429708, t1.c1, t1.c0))==(('-104042863', t1.c0, t1.c1))) AS REAL) ASC, (((t1.c1, t1.c1)) BETWEEN ((CAST(t1.c0 AS TEXT), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)) AND ((((t1.c1)OR(t1.c0)), COALESCE(t1.c0, t1.c1, t1.c1))))  NULLS LAST, 0X7dbbd8fb  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c0))) ORDER BY CAST((((0.06389991955429708, t1.c1, t1.c0))=(('-104042863', t1.c0, t1.c1))) AS REAL) ASC, (((t1.c1, t1.c1)) BETWEEN ((CAST(t1.c0 AS TEXT), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)) AND ((((t1.c1)OR(t1.c0)), COALESCE(t1.c0, t1.c1, t1.c1))))  NULLS LAST, 2109462779  NULLS LAST;
SELECT ALL * FROM t1 WHERE (DATETIME(((t1.c1)==(t1.c1)), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), -1627977926, (t1.c1 IN (t1.c1)), ((t1.c0) ISNULL)));
SELECT DISTINCT * FROM t1 WHERE (DATETIME(((t1.c1)=(t1.c1)), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), 0Xffffffff9ef7073a, (t1.c1 IN (t1.c1)), ((t1.c0) ISNULL))) ORDER BY ((- (t1.c1)) IN ())  NULLS FIRST, (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) IN (((((t1.c0)OR(t1.c0)))AND(t1.c0)))) ASC  NULLS LAST, (((t1.c1, t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((('2032568631' IN ()), t1.c1, CAST('-301094617' AS BLOB), (t1.c1 IN (NULL, t1.c0)))) AND (((- (x'9db6')), ((((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0)), (~ (t1.c0)), ((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(0.13695069591214615))))) ASC LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (DATETIME(((t1.c1)==(t1.c1)), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), -1627977926, (t1.c1 IN (t1.c1)), ((t1.c0) ISNULL)));
SELECT DISTINCT * FROM t1 WHERE (DATETIME(((t1.c1)=(t1.c1)), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), 0Xffffffff9ef7073a, (t1.c1 IN (t1.c1)), ((t1.c0) ISNULL))) ORDER BY ((- (t1.c1)) IN ())  NULLS FIRST, (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) IN (((((t1.c0)OR(t1.c0)))AND(t1.c0)))) ASC  NULLS LAST, (((t1.c1, t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((('2032568631' IN ()), t1.c1, CAST('-301094617' AS BLOB), (t1.c1 IN (NULL, t1.c0)))) AND (((- (x'9db6')), ((((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0)), (~ (t1.c0)), ((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(0.13695069591214615))))) ASC LIMIT 0x0;
SELECT ALL COUNT(*) FROM t1 WHERE ((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, ((t1.c1) IS FALSE), (+ (t1.c0)), NULL))<=(((((t1.c1, t1.c0))>=(('L', t1.c1))), (t1.c0 IN (t1.c0, t1.c0)), UPPER(t1.c1), t1.c0 COLLATE BINARY)))) ORDER BY ((((((((CAST(t1.c1 AS NUMERIC))OR(CAST(t1.c1 AS INTEGER))))OR(NULL COLLATE RTRIM)))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))OR((t1.c1 IN (t1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, ((t1.c1) IS FALSE), (+ (t1.c0)), NULL))<=(((((t1.c1, t1.c0))==(('L', t1.c1))), (t1.c0 IN (t1.c0, t1.c0)), UPPER(t1.c1), t1.c0 COLLATE BINARY))))AND(CASE WHEN -1751615192 THEN ((((t1.c1)OR(t1.c1)))OR(t1.c0)) WHEN ((t1.c0)IS(t1.c1)) THEN ((t1.c0) IS TRUE) ELSE t1.c0 END))) ORDER BY ((((t1.c0)>>(t1.c1))) NOT BETWEEN (((t1.c1) NOT NULL)) AND ('1383623473')) DESC  NULLS FIRST, ((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))OR(t1.c1))) ISNULL);
SELECT ALL MAX(t1.c1) FROM t1 WHERE (json_patch(t1.c0, 'ꋣ') COLLATE RTRIM) ORDER BY (((t1.c1, t1.c0)) BETWEEN ((NULL, (- (t1.c1)))) AND ((((t1.c1) IS TRUE), CASE WHEN 0.9973479714017593 THEN NULL WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)))  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE (((json_patch(t1.c0, 'ꋣ') COLLATE RTRIM)AND(NULL))) ORDER BY CAST(((t1.c0)IS NOT(t1.c1)) AS TEXT);
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((t1.c1) ISNULL))AND(CAST(t1.c1 AS BLOB))))AND((~ (t1.c0))))) ORDER BY ((((TYPEOF(DISTINCT t1.c0))OR(((t1.c0)>>(t1.c0)))))AND(((x'')%(t1.c1)))) DESC  NULLS FIRST, ((t1.c1 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE (((((((t1.c1) ISNULL))AND(CAST(t1.c1 AS BLOB))))AND((~ (t1.c0))))) ORDER BY ((((TYPEOF(DISTINCT t1.c0))OR(((t1.c0)>>(t1.c0)))))AND(((x'')%(t1.c1)))) DESC  NULLS FIRST, ((t1.c1 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((LIKELIHOOD(DISTINCT t1.c1, t1.c0))%(((t1.c0)<(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((LIKELIHOOD(DISTINCT t1.c1, t1.c0))%(((t1.c0)<(t1.c0))))) LIMIT 0;
SELECT * FROM t1 WHERE (((LIKELIHOOD(DISTINCT t1.c1, t1.c0))%(((t1.c0)<(t1.c0)))));
SELECT ALL * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)>=(CAST(t1.c0 AS BLOB))));
SELECT ALL * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)>=(CAST(t1.c0 AS BLOB))))AND((((- ('q+}'))) BETWEEN (CAST(t1.c0 AS TEXT)) AND (((t1.c0)<>(t1.c1))))))) ORDER BY 't', (((t1.c0, t1.c0)) BETWEEN ((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, 0xffffffffedc2f8ba)) AND ((((t1.c1) IS TRUE), ((t1.c0) IS TRUE)))), ((((((TRIM(t1.c0))OR(t1.c1)))AND(((t1.c1)-(t1.c0)))))OR(((t1.c0) BETWEEN (t1.c0) AND (NULL)))) ASC  NULLS FIRST, (t1.c0 IN ()) ASC LIMIT 3 INTERSECT SELECT * FROM t1 WHERE (CASE WHEN LIKELIHOOD('1173737933', t1.c0) THEN UNLIKELY(DISTINCT t1.c0) WHEN (~ (t1.c1)) THEN ((t1.c1)-(NULL)) WHEN ((NULL) NOTNULL) THEN ((t1.c0)=(t1.c0)) WHEN (- (t1.c0)) THEN t1.c0 END) ORDER BY 't', (((t1.c0, t1.c0)) BETWEEN ((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, 0Xffffffffedc2f8ba)) AND ((((t1.c1) IS TRUE), ((t1.c0) IS TRUE)))), ((((((TRIM(t1.c0))OR(t1.c1)))AND(((t1.c1)-(t1.c0)))))OR(((t1.c0) BETWEEN (t1.c0) AND (NULL)))) ASC  NULLS FIRST, (t1.c0 IN ()) ASC LIMIT 0X3;
SELECT ALL * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)>=(CAST(t1.c0 AS BLOB))));
SELECT ALL * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)>=(CAST(t1.c0 AS BLOB))))AND((((- ('q+}'))) BETWEEN (CAST(t1.c0 AS TEXT)) AND (((t1.c0)<>(t1.c1))))))) ORDER BY 't', (((t1.c0, t1.c0)) BETWEEN ((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, 0xffffffffedc2f8ba)) AND ((((t1.c1) IS TRUE), ((t1.c0) IS TRUE)))), ((((((TRIM(t1.c0))OR(t1.c1)))AND(((t1.c1)-(t1.c0)))))OR(((t1.c0) BETWEEN (t1.c0) AND (NULL)))) ASC  NULLS FIRST, (t1.c0 IN ()) ASC LIMIT 3 INTERSECT SELECT * FROM t1 WHERE (CASE WHEN LIKELIHOOD('1173737933', t1.c0) THEN UNLIKELY(DISTINCT t1.c0) WHEN (~ (t1.c1)) THEN ((t1.c1)-(NULL)) WHEN ((NULL) NOTNULL) THEN ((t1.c0)=(t1.c0)) WHEN (- (t1.c0)) THEN t1.c0 END) ORDER BY 't', (((t1.c0, t1.c0)) BETWEEN ((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, 0Xffffffffedc2f8ba)) AND ((((t1.c1) IS TRUE), ((t1.c0) IS TRUE)))), ((((((TRIM(t1.c0))OR(t1.c1)))AND(((t1.c1)-(t1.c0)))))OR(((t1.c0) BETWEEN (t1.c0) AND (NULL)))) ASC  NULLS FIRST, (t1.c0 IN ()) ASC LIMIT 0X3;
SELECT COUNT(*) FROM t1 WHERE ((((TYPEOF(t1.c1), ((t1.c1)==(t1.c0))))>=(((~ (t1.c1)), ((t1.c1)<(t1.c0)))))) ORDER BY CAST(t1.c0 COLLATE NOCASE AS NUMERIC) DESC  NULLS LAST, ((((t1.c1) IS TRUE)) ISNULL) DESC, (x'fb' IN ());
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((TYPEOF(t1.c1), ((t1.c1)==(t1.c0))))>=(((~ (t1.c1)), ((t1.c1)<(t1.c0)))))) ORDER BY CAST(t1.c0 COLLATE NOCASE AS NUMERIC) DESC  NULLS LAST, ((((t1.c1) IS TRUE)) ISNULL) DESC, (x'fb' IN ()) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY CAST(t1.c0 COLLATE NOCASE AS NUMERIC) DESC  NULLS LAST, ((((t1.c1) IS TRUE)) ISNULL) DESC, (x'fb' IN ()) LIMIT 0X0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(0.12479568049852963)))OR(t1.c1)))AND(t1.c0)))/(((t1.c0)-(t1.c1)))));
SELECT MAX(t1.c1) FROM t1 WHERE (((((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(0.12479568049852963)))OR(t1.c1)))AND(t1.c0)))/(((t1.c0)-(t1.c1)))))AND(((((t1.c0)%(t1.c1))) NOT BETWEEN (((t1.c0)+(t1.c1))) AND (((t1.c0)|(t1.c1))))))) ORDER BY json_remove(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), (+ (t1.c0)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) ASC  NULLS FIRST, (((t1.c1 IN ()))||((- (t1.c0)))) DESC  NULLS FIRST INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((t1.c1 IN ())) NOT BETWEEN (((t1.c1) BETWEEN ('-742346749') AND (t1.c0))) AND (t1.c1))) ORDER BY json_remove(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), (+ (t1.c0)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) ASC  NULLS FIRST, (((t1.c1 IN ()))||((- (t1.c0)))) DESC  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT NULL), CAST(t1.c1 AS NUMERIC))) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)), ((t1.c0)AND(t1.c1)))))) ORDER BY ((((t1.c0)-(t1.c1))) IS FALSE) DESC  NULLS LAST, (NOT (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT NULL), CAST(t1.c1 AS NUMERIC))) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)), ((t1.c0)AND(t1.c1)))))) ORDER BY ((CAST(t1.c0 AS TEXT)) NOTNULL) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CASE WHEN ((t1.c1) IS TRUE) THEN (t1.c0 IN (t1.c1)) ELSE CASE x'8f'  WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END END) ORDER BY ((CAST(t1.c0 AS TEXT)) NOTNULL) ASC  NULLS FIRST LIMIT 1;
SELECT MIN(t1.c1) FROM t1 WHERE (x'8e163e') ORDER BY ((CAST(t1.c0 AS INTEGER))=(CAST(t1.c1 AS TEXT))) ASC  NULLS LAST, (((NOT (t1.c0)))IS((t1.c0 IN ())))  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((x'8e163e')AND(((t1.c0) BETWEEN (0x68f6f62d) AND (t1.c0)) COLLATE NOCASE))) ORDER BY ((CAST(t1.c0 AS INTEGER))=(CAST(t1.c1 AS TEXT))) ASC  NULLS LAST, (((NOT (t1.c0)))IS((t1.c0 IN ())))  NULLS FIRST LIMIT 0x2;
SELECT * FROM t1 WHERE (((t1.c0) BETWEEN (((t1.c0)>(t1.c0))) AND (t1.c0 COLLATE BINARY)));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (((t1.c0)>(t1.c0))) AND (t1.c0 COLLATE BINARY)))AND((((((t1.c1, t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, '446513759', t1.c1)))) NOT BETWEEN ('539426997') AND (0.4626250932470428 COLLATE RTRIM))))) ORDER BY ((((((((((CASE WHEN t1.c0 THEN t1.c1 END)AND(76688209)))OR(t1.c1 COLLATE BINARY)))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND((((t1.c1, t1.c0, t1.c0))<((t1.c1, t1.c0, t1.c0))))))AND(t1.c0 COLLATE BINARY)) DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((0.6517050205833143) NOT NULL))<>(((t1.c1)<>(t1.c0))))) ORDER BY ((((((((((CASE WHEN t1.c0 THEN t1.c1 END)AND(0x4922b51)))OR(t1.c1 COLLATE BINARY)))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND((((t1.c1, t1.c0, t1.c0))<((t1.c1, t1.c0, t1.c0))))))AND(t1.c0 COLLATE BINARY)) DESC;
SELECT * FROM t1 WHERE (((t1.c0) BETWEEN (((t1.c0)>(t1.c0))) AND (t1.c0 COLLATE BINARY)));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (((t1.c0)>(t1.c0))) AND (t1.c0 COLLATE BINARY)))AND((((((t1.c1, t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, '446513759', t1.c1)))) NOT BETWEEN ('539426997') AND (0.4626250932470428 COLLATE RTRIM))))) ORDER BY ((((((((((CASE WHEN t1.c0 THEN t1.c1 END)AND(76688209)))OR(t1.c1 COLLATE BINARY)))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND((((t1.c1, t1.c0, t1.c0))<((t1.c1, t1.c0, t1.c0))))))AND(t1.c0 COLLATE BINARY)) DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((0.6517050205833143) NOT NULL))<>(((t1.c1)<>(t1.c0))))) ORDER BY ((((((((((CASE WHEN t1.c0 THEN t1.c1 END)AND(0x4922b51)))OR(t1.c1 COLLATE BINARY)))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND((((t1.c1, t1.c0, t1.c0))<((t1.c1, t1.c0, t1.c0))))))AND(t1.c0 COLLATE BINARY)) DESC;
SELECT MIN(t1.c0) FROM t1 WHERE ((((((('[]')AND(load_extension(t1.c1))))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))))OR(((t1.c0)/(t1.c1))))) ORDER BY 0.9532317774099616 DESC  NULLS FIRST, QUOTE(41683678) ASC, (((((t1.c0)IS(t1.c1))))>=((CAST(t1.c1 AS NUMERIC)))) ASC, (- (((t1.c0) ISNULL)))  NULLS FIRST, ((((t1.c0) ISNULL))<>(TRIM(t1.c1, t1.c0))) ASC;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((('[]')AND(load_extension(t1.c1))))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))))OR(((t1.c0)/(t1.c1))))) ORDER BY ((t1.c1 COLLATE BINARY) IS TRUE) DESC, (((0X548dec94, t1.c0, t1.c1, t1.c1)) NOT BETWEEN (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))), HEX(t1.c1), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)), t1.c0 COLLATE BINARY)) AND ((t1.c0, -131715403, (((t1.c1, '1727310088', '-1185874476'))<=((t1.c1, t1.c1, t1.c0))), t1.c0 COLLATE RTRIM)))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((t1.c1) NOT NULL) COLLATE RTRIM) ORDER BY ((t1.c1 COLLATE BINARY) IS TRUE) DESC, (((0X548dec94, t1.c0, t1.c1, t1.c1)) NOT BETWEEN (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))), HEX(t1.c1), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)), t1.c0 COLLATE BINARY)) AND ((t1.c0, -131715403, (((t1.c1, '1727310088', '-1185874476'))<=((t1.c1, t1.c1, t1.c0))), t1.c0 COLLATE RTRIM)))  NULLS FIRST LIMIT 0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((CAST(0Xffffffff9c64d7d4 AS TEXT) IN ())) ORDER BY ((((- (t1.c1)), (((t1.c0))<=((t1.c1))), ((t1.c0) NOT BETWEEN ('') AND (t1.c1))))=((((t1.c0)<=(t1.c1)), RTRIM(t1.c1), ((t1.c1)<=(t1.c1)))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((CAST(-1671112748 AS TEXT) IN ()))AND((((NOT (t1.c1))) NOT BETWEEN (CASE 0.06342201221157595  WHEN NULL THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END) AND (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END))))) ORDER BY ((((- (t1.c1)), (((t1.c0))<=((t1.c1))), ((t1.c0) NOT BETWEEN ('') AND (t1.c1))))==((((t1.c0)<=(t1.c1)), RTRIM(t1.c1), ((t1.c1)<=(t1.c1)))));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((t1.c0) NOTNULL)) ORDER BY (((t1.c0, t1.c1, t1.c1, 0.8762866076622632, '2067293718')) NOT BETWEEN ((((t1.c0)!=(NULL)), t1.c0, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)) AND ((t1.c0, t1.c0, (+ (t1.c0)), CAST(t1.c1 AS REAL), (- (t1.c1))))) ASC;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((t1.c0) NOTNULL)) ORDER BY (((t1.c0, t1.c1, t1.c1, 0.8762866076622632, '2067293718')) NOT BETWEEN ((((t1.c0)<>(NULL)), t1.c0, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)) AND ((t1.c0, t1.c0, (+ (t1.c0)), CAST(t1.c1 AS REAL), (- (t1.c1))))) ASC;
SELECT ALL * FROM t1 WHERE (((t1.c1) IS FALSE)) ORDER BY ((CAST(t1.c0 AS TEXT)) IS TRUE) DESC;
SELECT * FROM t1 WHERE (((t1.c1) IS FALSE)) ORDER BY ((CAST(t1.c0 AS TEXT)) IS TRUE) DESC INTERSECT SELECT * FROM t1 WHERE (CASE WHEN ',' THEN NULL WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) THEN CAST(t1.c1 AS TEXT) WHEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END THEN t1.c0 COLLATE NOCASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN (((t1.c1))<=((t1.c1))) WHEN (t1.c0 IN ()) THEN ((t1.c0)OR(t1.c0)) WHEN ((t1.c1)OR(t1.c0)) THEN ((t1.c1)<(t1.c1)) END) ORDER BY ((CAST(t1.c0 AS TEXT)) IS TRUE) DESC;
SELECT ALL * FROM t1 WHERE (((t1.c1) IS FALSE)) ORDER BY ((CAST(t1.c0 AS TEXT)) IS TRUE) DESC;
SELECT * FROM t1 WHERE (((t1.c1) IS FALSE)) ORDER BY ((CAST(t1.c0 AS TEXT)) IS TRUE) DESC INTERSECT SELECT * FROM t1 WHERE (CASE WHEN ',' THEN NULL WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) THEN CAST(t1.c1 AS TEXT) WHEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END THEN t1.c0 COLLATE NOCASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN (((t1.c1))<=((t1.c1))) WHEN (t1.c0 IN ()) THEN ((t1.c0)OR(t1.c0)) WHEN ((t1.c1)OR(t1.c0)) THEN ((t1.c1)<(t1.c1)) END) ORDER BY ((CAST(t1.c0 AS TEXT)) IS TRUE) DESC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((t1.c1)<<(((t1.c1)>=(t1.c1))))) ORDER BY CAST(t1.c1 AS BLOB) COLLATE BINARY ASC, ((t1.c1)<(json(t1.c0))) ASC  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((t1.c1)<<(((t1.c1)=(t1.c1)))))AND(((t1.c0)AND(t1.c1)) COLLATE RTRIM))) ORDER BY ((t1.c0 COLLATE RTRIM)>(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))) ASC  NULLS LAST, '+rVFE썄c%' ASC  NULLS FIRST, ((((x'') NOTNULL))OR(((t1.c0)>=(t1.c0))))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CAST(t1.c1 AS INTEGER) COLLATE RTRIM) ORDER BY ((t1.c0 COLLATE RTRIM)>(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))) ASC  NULLS LAST, '+rVFE썄c%' ASC  NULLS FIRST, ((((x'') NOTNULL))OR(((t1.c0)>=(t1.c0))))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS INTEGER))<<(((t1.c0)-(t1.c0))))) ORDER BY ((t1.c1)<=(t1.c0)) COLLATE RTRIM DESC;
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER))<<(((t1.c0)-(t1.c0)))))AND(((CAST(t1.c1 AS NUMERIC)) IS TRUE)))) ORDER BY CAST(((t1.c0)>=(t1.c1)) AS INTEGER) DESC  NULLS LAST, (NOT (t1.c0)) COLLATE BINARY ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((NULL) IS FALSE)) ORDER BY CAST(((t1.c0)>=(t1.c1)) AS INTEGER) DESC  NULLS LAST, (NOT (t1.c0)) COLLATE BINARY ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS INTEGER))<<(((t1.c0)-(t1.c0))))) ORDER BY ((t1.c1)<=(t1.c0)) COLLATE RTRIM DESC;
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER))<<(((t1.c0)-(t1.c0)))))AND(((CAST(t1.c1 AS NUMERIC)) IS TRUE)))) ORDER BY CAST(((t1.c0)>=(t1.c1)) AS INTEGER) DESC  NULLS LAST, (NOT (t1.c0)) COLLATE BINARY ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((NULL) IS FALSE)) ORDER BY CAST(((t1.c0)>=(t1.c1)) AS INTEGER) DESC  NULLS LAST, (NOT (t1.c0)) COLLATE BINARY ASC  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE (CASE ((((((((((((t1.c0)AND(0.16930222074271606)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c0))  WHEN ((t1.c0) NOTNULL) THEN t1.c1 COLLATE NOCASE END);
SELECT DISTINCT * FROM t1 WHERE (((CASE ((((((((((((t1.c0)AND(0.16930222074271606)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c0))  WHEN ((t1.c0) NOTNULL) THEN t1.c1 COLLATE NOCASE END)AND(NULL)));
SELECT * FROM t1 WHERE (CASE ((((((((((((t1.c0)AND(0.16930222074271606)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c0))  WHEN ((t1.c0) NOTNULL) THEN t1.c1 COLLATE NOCASE END);
SELECT DISTINCT * FROM t1 WHERE (((CASE ((((((((((((t1.c0)AND(0.16930222074271606)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c0))  WHEN ((t1.c0) NOTNULL) THEN t1.c1 COLLATE NOCASE END)AND(NULL)));
SELECT ALL COUNT(*) FROM t1 WHERE ('~');
SELECT COUNT(*) FROM t1 WHERE ((('~')AND((((((t1.c0)OR(t1.c1)))AND(t1.c1)) IN (((t1.c1)IS NOT(t1.c1))))))) ORDER BY ((CAST(t1.c1 AS REAL))+(t1.c1 COLLATE RTRIM))  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((- ('-1997783105'))) ORDER BY ((CAST(t1.c1 AS REAL))+(t1.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((t1.c0)-(t1.c0)))OR(((x'') NOT BETWEEN (NULL) AND (t1.c0)))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (NOT (t1.c0)) COLLATE RTRIM DESC, ((t1.c1)<>(t1.c1)) COLLATE NOCASE  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)-(t1.c0)))OR(((x'') NOT BETWEEN (NULL) AND (t1.c0)))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(t1.c1))) ORDER BY (NOT (t1.c0)) COLLATE RTRIM DESC, ((t1.c1)<>(t1.c1)) COLLATE NOCASE  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((((((t1.c0)-(t1.c0)))OR(((x'') NOT BETWEEN (NULL) AND (t1.c0)))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (NOT (t1.c0)) COLLATE RTRIM DESC, ((t1.c1)<>(t1.c1)) COLLATE NOCASE  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)-(t1.c0)))OR(((x'') NOT BETWEEN (NULL) AND (t1.c0)))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(t1.c1))) ORDER BY (NOT (t1.c0)) COLLATE RTRIM DESC, ((t1.c1)<>(t1.c1)) COLLATE NOCASE  NULLS LAST LIMIT 0X0;
SELECT COUNT(*) FROM t1 WHERE ((UNICODE(t1.c1) IN (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END, ((t1.c1) NOTNULL)))) ORDER BY (((NULL, (t1.c0 IN (t1.c0))))<=((((NULL)|(t1.c1)), 0.12175375365437646))) DESC, ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (((t1.c0)=(0.7960258449854591))) AND (t1.c1 COLLATE BINARY)) ASC  NULLS LAST, (~ ((('')GLOB(t1.c1))))  NULLS FIRST, (((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) IN (((t1.c1)!=(t1.c0)))) DESC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((UNICODE(t1.c1) IN (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END, ((t1.c1) NOTNULL))))AND(CAST((- (t1.c1)) AS NUMERIC)))) ORDER BY CASE t1.c0  WHEN t1.c0 THEN (((t1.c0, 'v'))!=((t1.c1, t1.c1))) WHEN t1.c0 COLLATE RTRIM THEN ((t1.c0)%(t1.c1)) ELSE ((t1.c0)IS NOT(t1.c1)) END ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((t1.c1)OR(t1.c0)))AND(x'7a')) IN (t1.c0, NULL))) ORDER BY x'd5f2'  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((((t1.c1)OR(t1.c0)))AND(x'7a')) IN (t1.c0, NULL)))AND(((CAST(t1.c1 AS BLOB))IS NOT(((t1.c1) ISNULL)))))) ORDER BY (NOT (x'')) LIMIT 0x0;
SELECT * FROM t1 WHERE ((((((t1.c1)OR(t1.c0)))AND(x'7a')) IN (t1.c0, NULL))) ORDER BY x'd5f2'  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((((t1.c1)OR(t1.c0)))AND(x'7a')) IN (t1.c0, NULL)))AND(((CAST(t1.c1 AS BLOB))IS NOT(((t1.c1) ISNULL)))))) ORDER BY (NOT (x'')) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((((((((t1.c1 IN ()))AND(((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))))OR(((t1.c1)>=(t1.c1)))))AND(((t1.c0) ISNULL))));
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1 IN ()))AND(((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))))OR(((t1.c1)==(t1.c1)))))AND(((t1.c0) ISNULL)))) ORDER BY t1.c0 ASC  NULLS FIRST, (((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))))>>((((t1.c0, t1.c1))<((t1.c1, 0xffffffff9ada675e)))));
SELECT ALL * FROM t1 WHERE ((((((((t1.c1 IN ()))AND(((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))))OR(((t1.c1)>=(t1.c1)))))AND(((t1.c0) ISNULL))));
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1 IN ()))AND(((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))))OR(((t1.c1)==(t1.c1)))))AND(((t1.c0) ISNULL)))) ORDER BY t1.c0 ASC  NULLS FIRST, (((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))))>>((((t1.c0, t1.c1))<((t1.c1, 0xffffffff9ada675e)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c1) NOTNULL)) ORDER BY CASE ((((((t1.c0)OR('9223372036854775807')))AND(t1.c0)))AND(NULL))  WHEN CAST(t1.c1 AS NUMERIC) THEN t1.c1 COLLATE BINARY WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN t1.c1 COLLATE NOCASE WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) THEN ABS(t1.c0) END DESC  NULLS LAST, ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((0.5123924678289825, t1.c0))) IN (CAST(t1.c0 AS NUMERIC))) ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c1) NOTNULL))AND(CASE ((t1.c1)LIKE(t1.c1))  WHEN CASE WHEN t1.c0 THEN '-1185874476' END THEN '224413799' WHEN ((t1.c1)|(t1.c1)) THEN t1.c1 WHEN (((t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c1, 'w'))) THEN t1.c1 COLLATE BINARY WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN '1626513390' THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN SQLITE_COMPILEOPTION_USED(t1.c0) END))) ORDER BY CASE ((((((t1.c0)OR('9223372036854775807')))AND(t1.c0)))AND(NULL))  WHEN CAST(t1.c1 AS NUMERIC) THEN t1.c1 COLLATE BINARY WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN t1.c1 COLLATE NOCASE WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) THEN ABS(t1.c0) END DESC  NULLS LAST, ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((0.5123924678289825, t1.c0))) IN (CAST(t1.c0 AS NUMERIC))) ASC LIMIT 0;
SELECT MIN(t1.c1) FROM t1 WHERE ((((((((((t1.c0, t1.c1, t1.c0))==((t1.c0, t1.c0, t1.c0))))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c0 END)))OR((((t1.c1, t1.c1))>=((t1.c1, t1.c1))))))AND((t1.c1 IN ()))));
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((((((((((t1.c0, t1.c1, t1.c0))==((t1.c0, t1.c0, t1.c0))))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c0 END)))OR((((t1.c1, t1.c1))>=((t1.c1, t1.c1))))))AND((t1.c1 IN ()))))AND(CAST(CAST(t1.c0 AS BLOB) AS TEXT)))) LIMIT 1 INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c0)IS NOT(t1.c1)))>=(((t1.c1)!=(t1.c0))))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((-1.408692428E9) BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0) NOT NULL)))) ORDER BY UPPER(((t1.c0) IS FALSE)) ASC, (((((t1.c1))>=((t1.c1))))IS NOT(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))) ASC, (((t1.c0 IN (t1.c1)))|(ABS(t1.c1))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((-1.408692428E9) BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0) NOT NULL))))AND(((((t1.c0) NOT BETWEEN (NULL) AND (t1.c1)))GLOB(TRIM(t1.c1)))))) ORDER BY ((((t1.c1) IS TRUE)) IS FALSE)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((-1.408692428E9) BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0) NOT NULL)))) ORDER BY UPPER(((t1.c0) IS FALSE)) ASC, (((((t1.c1))>=((t1.c1))))IS NOT(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))) ASC, (((t1.c0 IN (t1.c1)))|(ABS(t1.c1))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((-1.408692428E9) BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0) NOT NULL))))AND(((((t1.c0) NOT BETWEEN (NULL) AND (t1.c1)))GLOB(TRIM(t1.c1)))))) ORDER BY ((((t1.c1) IS TRUE)) IS FALSE)  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ())) ORDER BY CASE UNLIKELY(DISTINCT t1.c0)  WHEN 0.6931687844432638 THEN json_valid(t1.c1) END  NULLS FIRST, ((CASE t1.c1  WHEN 0.7725295961209356 THEN t1.c0 ELSE t1.c1 END)AND((~ (t1.c0)))) DESC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ())) ORDER BY CASE WHEN ((t1.c0)-(t1.c0)) THEN ((t1.c0)!=(t1.c1)) ELSE CAST(x'' AS NUMERIC) END, (((t1.c0) BETWEEN ('') AND (t1.c1)) IN ()) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ('-1863901556') ORDER BY CASE WHEN ((t1.c0)-(t1.c0)) THEN ((t1.c0)!=(t1.c1)) ELSE CAST(x'' AS NUMERIC) END, (((t1.c0) BETWEEN ('') AND (t1.c1)) IN ()) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ())) ORDER BY CASE UNLIKELY(DISTINCT t1.c0)  WHEN 0.6931687844432638 THEN json_valid(t1.c1) END  NULLS FIRST, ((CASE t1.c1  WHEN 0.7725295961209356 THEN t1.c0 ELSE t1.c1 END)AND((~ (t1.c0)))) DESC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ())) ORDER BY CASE WHEN ((t1.c0)-(t1.c0)) THEN ((t1.c0)!=(t1.c1)) ELSE CAST(x'' AS NUMERIC) END, (((t1.c0) BETWEEN ('') AND (t1.c1)) IN ()) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ('-1863901556') ORDER BY CASE WHEN ((t1.c0)-(t1.c0)) THEN ((t1.c0)!=(t1.c1)) ELSE CAST(x'' AS NUMERIC) END, (((t1.c0) BETWEEN ('') AND (t1.c1)) IN ()) ASC  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE ((~ (HEX(t1.c0))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((~ (HEX(t1.c0))))AND(CAST(ROUND(t1.c1, t1.c1) AS REAL)))) ORDER BY ((((t1.c0) IS FALSE))<(t1.c0))  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE t1.c1  WHEN (t1.c0 IN (t1.c0)) THEN ((((t1.c0)OR(t1.c1)))AND(t1.c0)) WHEN JULIANDAY(t1.c0, t1.c1, t1.c1) THEN 0xffffffffb3bff328 END) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))>(t1.c1 COLLATE BINARY)), (((t1.c1))<=((t1.c1))) COLLATE BINARY DESC;
SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c1  WHEN (t1.c0 IN (t1.c0)) THEN ((((t1.c0)OR(t1.c1)))AND(t1.c0)) WHEN JULIANDAY(t1.c0, t1.c1, t1.c1) THEN -1279266008 END)AND(((((((t1.c1)AND(t1.c1)))AND(t1.c0)))&(((t1.c1)>(t1.c1))))))) ORDER BY (((t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(0.08497491582000827)))OR(t1.c0)))AND(t1.c0)))AND(0.9366707959460312)), CASE 0.2738906249293016  WHEN t1.c0 THEN -687481056 WHEN t1.c0 THEN t1.c1 END, CAST(t1.c1 AS INTEGER))) AND (((- (t1.c0)), ((t1.c0)OR(t1.c0)), (+ (t1.c0))))) ASC  NULLS LAST, (((t1.c0 COLLATE NOCASE, ((t1.c1)==(t1.c1)), ((((t1.c0)AND(t1.c0)))AND(t1.c1))))>(((((t1.c0))>=((t1.c0))), ((t1.c1)-(t1.c0)), t1.c0 COLLATE NOCASE))) DESC  NULLS FIRST LIMIT 4 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)OR(t1.c1))) ORDER BY (((t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(0.08497491582000827)))OR(t1.c0)))AND(t1.c0)))AND(0.9366707959460312)), CASE 0.2738906249293016  WHEN t1.c0 THEN 0Xffffffffd705df20 WHEN t1.c0 THEN t1.c1 END, CAST(t1.c1 AS INTEGER))) AND (((- (t1.c0)), ((t1.c0)OR(t1.c0)), (+ (t1.c0))))) ASC  NULLS LAST, (((t1.c0 COLLATE NOCASE, ((t1.c1)=(t1.c1)), ((((t1.c0)AND(t1.c0)))AND(t1.c1))))>(((((t1.c0))>=((t1.c0))), ((t1.c1)-(t1.c0)), t1.c0 COLLATE NOCASE))) DESC  NULLS FIRST LIMIT 0X4;
SELECT * FROM t1 WHERE (CASE t1.c1  WHEN (t1.c0 IN (t1.c0)) THEN ((((t1.c0)OR(t1.c1)))AND(t1.c0)) WHEN JULIANDAY(t1.c0, t1.c1, t1.c1) THEN 0xffffffffb3bff328 END) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))>(t1.c1 COLLATE BINARY)), (((t1.c1))<=((t1.c1))) COLLATE BINARY DESC;
SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c1  WHEN (t1.c0 IN (t1.c0)) THEN ((((t1.c0)OR(t1.c1)))AND(t1.c0)) WHEN JULIANDAY(t1.c0, t1.c1, t1.c1) THEN -1279266008 END)AND(((((((t1.c1)AND(t1.c1)))AND(t1.c0)))&(((t1.c1)>(t1.c1))))))) ORDER BY (((t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(0.08497491582000827)))OR(t1.c0)))AND(t1.c0)))AND(0.9366707959460312)), CASE 0.2738906249293016  WHEN t1.c0 THEN -687481056 WHEN t1.c0 THEN t1.c1 END, CAST(t1.c1 AS INTEGER))) AND (((- (t1.c0)), ((t1.c0)OR(t1.c0)), (+ (t1.c0))))) ASC  NULLS LAST, (((t1.c0 COLLATE NOCASE, ((t1.c1)==(t1.c1)), ((((t1.c0)AND(t1.c0)))AND(t1.c1))))>(((((t1.c0))>=((t1.c0))), ((t1.c1)-(t1.c0)), t1.c0 COLLATE NOCASE))) DESC  NULLS FIRST LIMIT 4 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)OR(t1.c1))) ORDER BY (((t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(0.08497491582000827)))OR(t1.c0)))AND(t1.c0)))AND(0.9366707959460312)), CASE 0.2738906249293016  WHEN t1.c0 THEN 0Xffffffffd705df20 WHEN t1.c0 THEN t1.c1 END, CAST(t1.c1 AS INTEGER))) AND (((- (t1.c0)), ((t1.c0)OR(t1.c0)), (+ (t1.c0))))) ASC  NULLS LAST, (((t1.c0 COLLATE NOCASE, ((t1.c1)=(t1.c1)), ((((t1.c0)AND(t1.c0)))AND(t1.c1))))>(((((t1.c0))>=((t1.c0))), ((t1.c1)-(t1.c0)), t1.c0 COLLATE NOCASE))) DESC  NULLS FIRST LIMIT 0X4;
SELECT ALL COUNT(*) FROM t1 WHERE ((('-104042863')GLOB(t1.c0 COLLATE BINARY))) ORDER BY -832560007  NULLS FIRST, ((((((t1.c0)AND(t1.c1)))OR('?')))|(0.3915821341883483))  NULLS FIRST, t1.c0 ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((('-104042863')GLOB(t1.c0 COLLATE BINARY))) ORDER BY -832560007  NULLS FIRST, ((((((t1.c0)AND(t1.c1)))OR('?')))|(0.3915821341883483))  NULLS FIRST, t1.c0 ASC LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((t1.c1 IN (0.2289213351425552))) BETWEEN (((t1.c1)!=(t1.c1))) AND ((((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((x'6b', t1.c0)))))) ORDER BY 0xffffffffce602479  NULLS FIRST, ((((((t1.c0)AND(t1.c1)))OR('?')))|(0.3915821341883483))  NULLS FIRST, t1.c0 ASC LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0)LIKE(t1.c1)), (((t1.c0, t1.c1))>=((t1.c0, t1.c1)))))<((((t1.c0)%(t1.c1)), (t1.c1 IN (t1.c1, t1.c0))))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((t1.c0)LIKE(t1.c1)), (((t1.c0, t1.c1))>=((t1.c0, t1.c1)))))<((((t1.c0)%(t1.c1)), (t1.c1 IN (t1.c1, t1.c0))))))AND(CAST(((t1.c1)AND(t1.c0)) AS INTEGER)))) LIMIT 0X1 INTERSECT SELECT COUNT(*) FROM t1 WHERE ((~ ('{⚮/'))) LIMIT 1;
SELECT * FROM t1 WHERE ((NOT (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((NOT (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) IN ())))) LIMIT 0x0 INTERSECT SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS TEXT)) NOT BETWEEN (t1.c0) AND (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END))) LIMIT 0x0;
SELECT * FROM t1 WHERE ((NOT (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((NOT (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) IN ())))) LIMIT 0x0 INTERSECT SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS TEXT)) NOT BETWEEN (t1.c0) AND (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END))) LIMIT 0x0;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((x'') IS TRUE))AND((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))))OR((((t1.c0, t1.c0, t1.c0, t1.c1))<((t1.c1, '', t1.c1, t1.c0))))))OR(((t1.c0)%(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (((((((((x'') IS TRUE))AND((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))))OR((((t1.c0, t1.c0, t1.c0, t1.c1))<((t1.c1, '', t1.c1, t1.c0))))))OR(((t1.c0)%(t1.c0))))) ORDER BY ((((t1.c0) IS TRUE)) BETWEEN (((((t1.c0)AND(t1.c1)))AND(t1.c1))) AND ((t1.c1 IN ()))) DESC  NULLS FIRST, (((+ (t1.c1))) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 END) AND (CASE t1.c0  WHEN t1.c0 THEN '270520835' ELSE t1.c1 END)) ASC INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c0))) NOT NULL)) ORDER BY ((((t1.c0) IS TRUE)) BETWEEN (((((t1.c0)AND(t1.c1)))AND(t1.c1))) AND ((t1.c1 IN ()))) DESC  NULLS FIRST, (((+ (t1.c1))) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 END) AND (CASE t1.c0  WHEN t1.c0 THEN '270520835' ELSE t1.c1 END)) ASC;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC)) IS TRUE)) ORDER BY STRFTIME(((0Xffffffffa96bc24b) NOT BETWEEN (t1.c1) AND (t1.c0)), ((t1.c0) IS FALSE), ((t1.c1)/(t1.c0))), (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END, (t1.c0 IN (t1.c0))))<>(((t1.c0 IN (t1.c0)), t1.c1 COLLATE NOCASE)))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC)) IS TRUE))AND((((t1.c0, t1.c0)) NOT BETWEEN ((NULL, LIKELIHOOD(t1.c0, t1.c0))) AND ((((t1.c1)||(t1.c0)), ((t1.c1) NOTNULL))))))) ORDER BY STRFTIME(((0Xffffffffa96bc24b) NOT BETWEEN (t1.c1) AND (t1.c0)), ((t1.c0) IS FALSE), ((t1.c1)/(t1.c0))), (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END, (t1.c0 IN (t1.c0))))!=(((t1.c0 IN (t1.c0)), t1.c1 COLLATE NOCASE)))  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC)) IS TRUE)) ORDER BY STRFTIME(((0Xffffffffa96bc24b) NOT BETWEEN (t1.c1) AND (t1.c0)), ((t1.c0) IS FALSE), ((t1.c1)/(t1.c0))), (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END, (t1.c0 IN (t1.c0))))<>(((t1.c0 IN (t1.c0)), t1.c1 COLLATE NOCASE)))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC)) IS TRUE))AND((((t1.c0, t1.c0)) NOT BETWEEN ((NULL, LIKELIHOOD(t1.c0, t1.c0))) AND ((((t1.c1)||(t1.c0)), ((t1.c1) NOTNULL))))))) ORDER BY STRFTIME(((0Xffffffffa96bc24b) NOT BETWEEN (t1.c1) AND (t1.c0)), ((t1.c0) IS FALSE), ((t1.c1)/(t1.c0))), (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END, (t1.c0 IN (t1.c0))))!=(((t1.c0 IN (t1.c0)), t1.c1 COLLATE NOCASE)))  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 WHERE (json_array_length(((((x'')AND(t1.c0)))OR(t1.c0)), (t1.c0 IN (0Xffffffffb9e09e4d)))) ORDER BY CAST(UPPER(t1.c0) AS NUMERIC)  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((json_array_length(((((x'')AND(t1.c0)))OR(t1.c0)), (t1.c0 IN (0Xffffffffb9e09e4d))))AND(ABS(HEX(DISTINCT t1.c1))))) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN 0.2106208131321995 THEN t1.c0 ELSE t1.c1 END THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) WHEN ((((0.2904414702277408)OR(t1.c1)))AND(t1.c1)) THEN ((((((-521905785)AND(t1.c1)))OR(t1.c0)))AND(100929609)) END, x''  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)||(t1.c1)))OR((t1.c1 IN ())))) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN 0.2106208131321995 THEN t1.c0 ELSE t1.c1 END THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) WHEN ((((0.2904414702277408)OR(t1.c1)))AND(t1.c1)) THEN ((((((-521905785)AND(t1.c1)))OR(t1.c0)))AND(0x6041049)) END, x''  NULLS LAST;
SELECT * FROM t1 WHERE (json_array_length(((((x'')AND(t1.c0)))OR(t1.c0)), (t1.c0 IN (0Xffffffffb9e09e4d)))) ORDER BY CAST(UPPER(t1.c0) AS NUMERIC)  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE (((t1.c1 COLLATE RTRIM) NOT BETWEEN (CAST(t1.c0 AS REAL)) AND ((+ (t1.c1))))) ORDER BY ((((((((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)OR(((((0x6d69ca8)AND('%%ok')))AND(t1.c0)))))AND(t1.c1 COLLATE RTRIM)))OR(((t1.c1)IS NOT(t1.c0)))))AND((0.8319174161007276 IN (t1.c0)))) DESC  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1 COLLATE RTRIM) NOT BETWEEN (CAST(t1.c0 AS REAL)) AND ((+ (t1.c1)))))AND(((((((t1.c0 COLLATE RTRIM)AND((t1.c0 IN (t1.c0)))))AND(CAST(t1.c1 AS REAL))))AND((t1.c0 IN (x''))))))) ORDER BY ((((((((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)OR(((((114728104)AND('%%ok')))AND(t1.c0)))))AND(t1.c1 COLLATE RTRIM)))OR(((t1.c1)IS NOT(t1.c0)))))AND((0.8319174161007276 IN (t1.c0)))) DESC  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))IS(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY CASE CAST(t1.c0 AS REAL)  WHEN ((t1.c0)GLOB(t1.c1)) THEN (t1.c1 IN ()) ELSE t1.c0 COLLATE BINARY END  NULLS LAST, (+ ((t1.c0 IN ()))) DESC  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))IS(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY CASE CAST(t1.c0 AS REAL)  WHEN ((t1.c0)GLOB(t1.c1)) THEN (t1.c1 IN ()) ELSE t1.c0 COLLATE BINARY END  NULLS LAST, (+ ((t1.c0 IN ()))) DESC  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((0.14413539669011022)OR((((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, '-742346749')) AND ((t1.c0, t1.c0))))))OR(t1.c0 COLLATE BINARY))) ORDER BY CASE CAST(t1.c0 AS REAL)  WHEN ((t1.c0)GLOB(t1.c1)) THEN (t1.c1 IN ()) ELSE t1.c0 COLLATE BINARY END  NULLS LAST, (+ ((t1.c0 IN ()))) DESC  NULLS LAST LIMIT 3;
SELECT * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(CAST(t1.c1 AS BLOB))) ORDER BY (((((t1.c1) NOT NULL), ((t1.c1)<(t1.c1))))<((((t1.c1)*(t1.c0)), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN x'58' THEN t1.c1 END))) DESC, ((((((t1.c0))=((t1.c1))), ((t1.c0) NOT NULL)))<=((((t1.c1)<(t1.c0)), t1.c0)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(CAST(t1.c1 AS BLOB))) ORDER BY (((((t1.c1) NOT NULL), ((t1.c1)<(t1.c1))))<((((t1.c1)*(t1.c0)), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN x'58' THEN t1.c1 END))) DESC, ((((((t1.c0))=((t1.c1))), ((t1.c0) NOT NULL)))<=((((t1.c1)<(t1.c0)), t1.c0)))  NULLS FIRST LIMIT 3;
SELECT * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(CAST(t1.c1 AS BLOB))) ORDER BY (((((t1.c1) NOT NULL), ((t1.c1)<(t1.c1))))<((((t1.c1)*(t1.c0)), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN x'58' THEN t1.c1 END))) DESC, ((((((t1.c0))=((t1.c1))), ((t1.c0) NOT NULL)))<=((((t1.c1)<(t1.c0)), t1.c0)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(CAST(t1.c1 AS BLOB))) ORDER BY (((((t1.c1) NOT NULL), ((t1.c1)<(t1.c1))))<((((t1.c1)*(t1.c0)), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN x'58' THEN t1.c1 END))) DESC, ((((((t1.c0))=((t1.c1))), ((t1.c0) NOT NULL)))<=((((t1.c1)<(t1.c0)), t1.c0)))  NULLS FIRST LIMIT 3;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((- (((t1.c0)<=(t1.c1))))) ORDER BY t1.c1, (((((t1.c0 IN ()))AND((+ (t1.c1)))))OR(((t1.c1) NOT NULL))), ((((0.03622465028804023) IS FALSE)) NOT BETWEEN (((t1.c0)>(t1.c1))) AND (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)) ASC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((- (((t1.c0)<=(t1.c1))))) ORDER BY ((t1.c0) IS TRUE) COLLATE RTRIM ASC  NULLS FIRST, CASE 0.1028806227644099  WHEN (t1.c1 IN (t1.c1, t1.c1)) THEN ((t1.c0)<=(x'00')) ELSE (NOT (t1.c0)) END LIMIT 0 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((CAST(t1.c1 AS TEXT)) BETWEEN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (0.2683847428507665))) ORDER BY ((t1.c0) IS TRUE) COLLATE RTRIM ASC  NULLS FIRST, CASE 0.1028806227644099  WHEN (t1.c1 IN (t1.c1, t1.c1)) THEN ((t1.c0)<=(x'00')) ELSE (NOT (t1.c0)) END LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ('Ei놅[''3*j' COLLATE RTRIM) ORDER BY (((((((NOT (t1.c1)))OR('-399064750')))AND((((t1.c1))<>((t1.c1))))))AND(((t1.c0) NOTNULL))) ASC, ((((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0))) IN ())  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ('Ei놅[''3*j' COLLATE RTRIM) ORDER BY (- ((- (t1.c0)))), ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)) COLLATE RTRIM LIMIT 0X4;
SELECT ALL * FROM t1 WHERE ('Ei놅[''3*j' COLLATE RTRIM) ORDER BY (((((((NOT (t1.c1)))OR('-399064750')))AND((((t1.c1))<>((t1.c1))))))AND(((t1.c0) NOTNULL))) ASC, ((((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0))) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (ABS(DISTINCT ((NULL) BETWEEN (t1.c0) AND (t1.c1))));
SELECT ALL COUNT(*) FROM t1 WHERE (((ABS(DISTINCT ((NULL) BETWEEN (t1.c0) AND (t1.c1))))AND((INSTR(t1.c0, t1.c0) IN (((t1.c1) ISNULL))))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1);
SELECT COUNT(*) FROM t1 WHERE (t1.c1) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0))>((t1.c1))))&(((t1.c0) NOT BETWEEN (0.967750802857622) AND (t1.c0)))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((((((((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))AND((+ (NULL)))))OR(LIKELY(t1.c1))))OR(((t1.c0) ISNULL))))AND(((1383623473)|(t1.c1)))))AND(TRIM(t1.c1)))  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (SQLITE_SOURCE_ID()) ORDER BY SQLITE_VERSION(), ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE '?' END) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) AND (((t1.c1)<(t1.c1))));
SELECT ALL * FROM t1 WHERE (CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE (CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END COLLATE RTRIM) ORDER BY ((t1.c1 COLLATE BINARY) IS FALSE) DESC LIMIT 0x3;
SELECT ALL * FROM t1 WHERE (CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE (CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END COLLATE RTRIM) ORDER BY ((t1.c1 COLLATE BINARY) IS FALSE) DESC LIMIT 0x3;
SELECT ALL * FROM t1 WHERE ((('1046715834' COLLATE BINARY)AND(t1.c1 COLLATE NOCASE)));
SELECT DISTINCT * FROM t1 WHERE ((('1046715834' COLLATE BINARY)AND(t1.c1 COLLATE NOCASE))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1)AND(x'655a2d')))AND(0.24664337080653986))) NOT BETWEEN ((((t1.c1, 0.29355933138569734, NULL))==((t1.c1, t1.c0, t1.c1)))) AND ((x'3d' IN (t1.c1))))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((('1046715834' COLLATE BINARY)AND(t1.c1 COLLATE NOCASE)));
SELECT DISTINCT * FROM t1 WHERE ((('1046715834' COLLATE BINARY)AND(t1.c1 COLLATE NOCASE))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1)AND(x'655a2d')))AND(0.24664337080653986))) NOT BETWEEN ((((t1.c1, 0.29355933138569734, NULL))==((t1.c1, t1.c0, t1.c1)))) AND ((x'3d' IN (t1.c1))))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((TRIM(DISTINCT t1.c1, t1.c1))AND(t1.c1 COLLATE RTRIM)));
SELECT * FROM t1 NOT INDEXED WHERE (((TRIM(DISTINCT t1.c1, t1.c1))AND(t1.c1 COLLATE RTRIM))) ORDER BY (LIKELIHOOD(t1.c0, t1.c1) IN (t1.c0, ((t1.c0)<<(t1.c0))))  NULLS LAST LIMIT 4;
SELECT ALL * FROM t1 WHERE (((TRIM(DISTINCT t1.c1, t1.c1))AND(t1.c1 COLLATE RTRIM)));
SELECT * FROM t1 NOT INDEXED WHERE (((TRIM(DISTINCT t1.c1, t1.c1))AND(t1.c1 COLLATE RTRIM))) ORDER BY (LIKELIHOOD(t1.c0, t1.c1) IN (t1.c0, ((t1.c0)<<(t1.c0))))  NULLS LAST LIMIT 4;
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (NULL) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST((~ (t1.c1)) AS NUMERIC));
SELECT ALL * FROM t1 WHERE (((t1.c1 COLLATE RTRIM)GLOB(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1 COLLATE RTRIM)GLOB(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1))  WHEN (NOT (t1.c0)) THEN TRIM(DISTINCT t1.c0, t1.c0) WHEN ('-2130733186' IN (t1.c0)) THEN (t1.c1 IN ()) WHEN (((NULL))>=((t1.c0))) THEN ((t1.c1)>(t1.c0)) WHEN (- (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c1 END END))) ORDER BY ((((NULL)OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))OR(((t1.c1)<(t1.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c1 COLLATE RTRIM)GLOB(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1 COLLATE RTRIM)GLOB(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1))  WHEN (NOT (t1.c0)) THEN TRIM(DISTINCT t1.c0, t1.c0) WHEN ('-2130733186' IN (t1.c0)) THEN (t1.c1 IN ()) WHEN (((NULL))>=((t1.c0))) THEN ((t1.c1)>(t1.c0)) WHEN (- (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c1 END END))) ORDER BY ((((NULL)OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))OR(((t1.c1)<(t1.c1)))) DESC  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (json_valid((NOT (t1.c0)))) ORDER BY ((((t1.c1)>>(t1.c0)))=(((t1.c1)-(t1.c1)))) DESC  NULLS FIRST, ((t1.c0 COLLATE NOCASE) NOT BETWEEN ((t1.c1 IN (t1.c1))) AND (t1.c0 COLLATE NOCASE)) ASC;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (json_valid((NOT (t1.c0)))) ORDER BY ((((t1.c1)>>(t1.c0)))=(((t1.c1)-(t1.c1)))) DESC  NULLS FIRST, ((t1.c0 COLLATE NOCASE) NOT BETWEEN ((t1.c1 IN (t1.c1))) AND (t1.c0 COLLATE NOCASE)) ASC LIMIT 1 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((~ ((((0.04493669771343678, t1.c1))!=((t1.c0, t1.c0)))))) ORDER BY ((((t1.c1)>>(t1.c0)))=(((t1.c1)-(t1.c1)))) DESC  NULLS FIRST, ((t1.c0 COLLATE NOCASE) NOT BETWEEN ((t1.c1 IN (t1.c1))) AND (t1.c0 COLLATE NOCASE)) ASC LIMIT 1;
SELECT MIN(t1.c1) FROM t1 WHERE ((((((((t1.c0)AND(t1.c1)))OR(NULL)), CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, (~ (t1.c1))))<((t1.c1, (((t1.c1)) NOT BETWEEN ((NULL)) AND ((t1.c1))), (~ (0.8243825469778684))))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((((((t1.c0)AND(t1.c1)))OR(NULL)), CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, (~ (t1.c1))))<((t1.c1, (((t1.c1)) NOT BETWEEN ((NULL)) AND ((t1.c1))), (~ (0.8243825469778684)))))) ORDER BY ((t1.c1)>>(CAST(x'51220d' AS NUMERIC))) DESC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CAST(((t1.c0)==(t1.c0)) AS REAL));
SELECT MIN(t1.c0) FROM t1 WHERE (((CAST(((t1.c0)==(t1.c0)) AS REAL))AND(0.2904414702277408))) ORDER BY CAST(0.27768325470943567 AS TEXT) ASC  NULLS FIRST INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))IS NOT(t1.c0))) ORDER BY CAST(0.27768325470943567 AS TEXT) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (NULL) ORDER BY (((t1.c1 IN (t1.c1, t1.c0)))+(t1.c1 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL)AND(('}y[눜x!' COLLATE RTRIM IN ())))) ORDER BY (((t1.c1 IN (t1.c1, t1.c0)))+(t1.c1 COLLATE NOCASE)) ASC INTERSECT SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)<>(t1.c1))) NOT BETWEEN (((t1.c0) BETWEEN (NULL) AND (t1.c0))) AND (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))) ORDER BY (((t1.c1 IN (t1.c1, t1.c0)))+(t1.c1 COLLATE NOCASE)) ASC;
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)OR(((t1.c0)|(NULL)))))OR(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)));
SELECT ALL * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)OR(((t1.c0)|(NULL)))))OR(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)));
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)OR(((t1.c0)|(NULL)))))OR(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)));
SELECT ALL * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)OR(((t1.c0)|(NULL)))))OR(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)));
SELECT MAX(t1.c1) FROM t1 WHERE (NULL) ORDER BY t1.c0 ASC, (('1655807016') BETWEEN (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(NULL))) AND (CAST(t1.c0 AS REAL)))  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (NULL) ORDER BY t1.c0 ASC, (('1655807016') BETWEEN (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(NULL))) AND (CAST(t1.c0 AS REAL)))  NULLS FIRST INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE ((+ (HEX(t1.c1)))) ORDER BY t1.c0 ASC, (('1655807016') BETWEEN (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(NULL))) AND (CAST(t1.c0 AS REAL)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (0xffffffffb1eb9bdb);
SELECT DISTINCT * FROM t1 WHERE (((-1309959205)AND(load_extension(NULL, (((t1.c1))<=((t1.c1))))))) LIMIT 0x4;
SELECT ALL * FROM t1 WHERE (0xffffffffb1eb9bdb);
SELECT DISTINCT * FROM t1 WHERE (((-1309959205)AND(load_extension(NULL, (((t1.c1))<=((t1.c1))))))) LIMIT 0x4;
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE BINARY)*((+ (t1.c0))))) ORDER BY CASE WHEN ((x'01') BETWEEN (t1.c0) AND (t1.c0)) THEN CAST(t1.c1 AS REAL) WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN t1.c0 COLLATE NOCASE END  NULLS FIRST, ((CAST(t1.c0 AS INTEGER))<=(x'3812')) DESC, (((- (t1.c0)))&(t1.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0 COLLATE BINARY)*((+ (t1.c0)))))AND((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), ((x'a12262') BETWEEN (t1.c1) AND (t1.c0))))>((t1.c0 COLLATE BINARY, CAST(t1.c1 AS REAL))))))) ORDER BY CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS TEXT) DESC, CASE CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END  WHEN (+ (t1.c0)) THEN ((t1.c1) ISNULL) WHEN x'' THEN LTRIM(t1.c1) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (NULL)) THEN t1.c0 END  NULLS LAST, CAST(t1.c1 COLLATE RTRIM AS BLOB) INTERSECT SELECT COUNT(*) FROM t1 WHERE ((((NOT (t1.c0)))GLOB((((t1.c0, t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c0, t1.c0)))))) ORDER BY CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS TEXT) DESC, CASE CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END  WHEN (+ (t1.c0)) THEN ((t1.c1) ISNULL) WHEN x'' THEN LTRIM(t1.c1) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (NULL)) THEN t1.c0 END  NULLS LAST, CAST(t1.c1 COLLATE RTRIM AS BLOB);
SELECT MAX(t1.c1) FROM t1 WHERE (((HEX(t1.c1))|(((t1.c1)AND(t1.c0)))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((HEX(t1.c1))|(((t1.c1)AND(t1.c0)))))AND(NULLIF(DISTINCT t1.c0, t1.c0) COLLATE NOCASE)));
SELECT ALL * FROM t1 WHERE ((((t1.c0, 0.4745365058172778, t1.c1, t1.c0, t1.c0)) BETWEEN ((((t1.c1) NOTNULL), ((t1.c1)>>(t1.c0)), t1.c0, 7.04982203E8, (NOT (t1.c1)))) AND ((t1.c0 COLLATE NOCASE, t1.c1, ((t1.c1)>>(t1.c1)), ((t1.c0) NOT NULL), (((t1.c1, t1.c1, t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c1)) AND ((t1.c0, 0.9112159985327424, t1.c1, t1.c1, t1.c1))))))) ORDER BY t1.c0;
SELECT ALL * FROM t1 WHERE ((((t1.c0, 0.4745365058172778, t1.c1, t1.c0, t1.c0)) BETWEEN ((((t1.c1) NOTNULL), ((t1.c1)>>(t1.c0)), t1.c0, 7.04982203E8, (NOT (t1.c1)))) AND ((t1.c0 COLLATE NOCASE, t1.c1, ((t1.c1)>>(t1.c1)), ((t1.c0) NOT NULL), (((t1.c1, t1.c1, t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c1)) AND ((t1.c0, 0.9112159985327424, t1.c1, t1.c1, t1.c1))))))) ORDER BY t1.c0;
SELECT ALL * FROM t1 WHERE ((((t1.c0, 0.4745365058172778, t1.c1, t1.c0, t1.c0)) BETWEEN ((((t1.c1) NOTNULL), ((t1.c1)>>(t1.c0)), t1.c0, 7.04982203E8, (NOT (t1.c1)))) AND ((t1.c0 COLLATE NOCASE, t1.c1, ((t1.c1)>>(t1.c1)), ((t1.c0) NOT NULL), (((t1.c1, t1.c1, t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c1)) AND ((t1.c0, 0.9112159985327424, t1.c1, t1.c1, t1.c1))))))) ORDER BY t1.c0;
SELECT ALL * FROM t1 WHERE ((((t1.c0, 0.4745365058172778, t1.c1, t1.c0, t1.c0)) BETWEEN ((((t1.c1) NOTNULL), ((t1.c1)>>(t1.c0)), t1.c0, 7.04982203E8, (NOT (t1.c1)))) AND ((t1.c0 COLLATE NOCASE, t1.c1, ((t1.c1)>>(t1.c1)), ((t1.c0) NOT NULL), (((t1.c1, t1.c1, t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c1)) AND ((t1.c0, 0.9112159985327424, t1.c1, t1.c1, t1.c1))))))) ORDER BY t1.c0;
SELECT * FROM t1 WHERE ((- (t1.c1 COLLATE BINARY)));
SELECT DISTINCT * FROM t1 WHERE ((- (t1.c1 COLLATE BINARY))) ORDER BY ((t1.c0)OR(t1.c1)) COLLATE RTRIM, (NOT (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))) ASC  NULLS LAST, NULLIF(DISTINCT t1.c0 COLLATE BINARY, IFNULL(DISTINCT t1.c1, t1.c1)) ASC;
SELECT * FROM t1 WHERE ((- (t1.c1 COLLATE BINARY)));
SELECT DISTINCT * FROM t1 WHERE ((- (t1.c1 COLLATE BINARY))) ORDER BY ((t1.c0)OR(t1.c1)) COLLATE RTRIM, (NOT (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))) ASC  NULLS LAST, NULLIF(DISTINCT t1.c0 COLLATE BINARY, IFNULL(DISTINCT t1.c1, t1.c1)) ASC;
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))GLOB(t1.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))GLOB(t1.c1 COLLATE RTRIM)))AND(LIKELIHOOD(DISTINCT NULL, t1.c0 COLLATE RTRIM)))) ORDER BY ((((t1.c0 COLLATE NOCASE)OR((+ (t1.c1)))))OR(((t1.c1)<=(t1.c0)))), 0.041374768243308435  NULLS LAST LIMIT 0x1;
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))GLOB(t1.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))GLOB(t1.c1 COLLATE RTRIM)))AND(LIKELIHOOD(DISTINCT NULL, t1.c0 COLLATE RTRIM)))) ORDER BY ((((t1.c0 COLLATE NOCASE)OR((+ (t1.c1)))))OR(((t1.c1)<=(t1.c0)))), 0.041374768243308435  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((HEX(t1.c0), CAST(t1.c0 AS NUMERIC))) AND (((((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c0, x'', t1.c1)) AND ((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1))), NULL)))) ORDER BY ((CAST(t1.c0 AS INTEGER))AND(((t1.c0) NOTNULL)));
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((HEX(t1.c0), CAST(t1.c0 AS NUMERIC))) AND (((((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c0, x'', t1.c1)) AND ((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1))), NULL)))) ORDER BY ((CAST(t1.c0 AS INTEGER))AND(((t1.c0) NOTNULL))) LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((HEX(t1.c0), CAST(t1.c0 AS NUMERIC))) AND (((((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c0, x'', t1.c1)) AND ((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1))), NULL)))) ORDER BY ((CAST(t1.c0 AS INTEGER))AND(((t1.c0) NOTNULL)));
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((HEX(t1.c0), CAST(t1.c0 AS NUMERIC))) AND (((((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c0, x'', t1.c1)) AND ((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1))), NULL)))) ORDER BY ((CAST(t1.c0 AS INTEGER))AND(((t1.c0) NOTNULL))) LIMIT 0;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) IS TRUE)) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c1 AS BLOB)) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND ((t1.c1 IN (x'49', t1.c1))))) LIMIT 0X0;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) IS TRUE)) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c1 AS BLOB)) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND ((t1.c1 IN (x'49', t1.c1))))) LIMIT 0X0;
SELECT COUNT(*) FROM t1 WHERE (IFNULL(DISTINCT ((t1.c0)=(t1.c0)), t1.c1 COLLATE RTRIM));
SELECT COUNT(*) FROM t1 WHERE (((IFNULL(DISTINCT ((t1.c0)=(t1.c0)), t1.c1 COLLATE RTRIM))AND(UNICODE(NULLIF(t1.c0, t1.c0))))) ORDER BY (- (COALESCE(t1.c0, t1.c1, t1.c0))) ASC  NULLS LAST, ((~ (t1.c1)) IN (CASE t1.c1  WHEN t1.c0 THEN x'9f60' END, (t1.c1 IN ('407606434')))) DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT COUNT(*) FROM t1 WHERE (STRFTIME(JULIANDAY(t1.c0, NULL, t1.c1), ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, t1.c0 COLLATE RTRIM)) ORDER BY (- (COALESCE(t1.c0, t1.c1, t1.c0))) ASC  NULLS LAST, ((~ (t1.c1)) IN (CASE t1.c1  WHEN t1.c0 THEN x'9f60' END, (t1.c1 IN ('407606434')))) DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(1315662835)))AND(((t1.c0)&(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(0x4e6b6bf3)))AND(((t1.c0)&(t1.c1)))))AND((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)) IN ())))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE t1.c0  WHEN UPPER(t1.c1) THEN ((t1.c1)/(t1.c0)) WHEN CASE '204650698'  WHEN t1.c0 THEN t1.c1 END THEN t1.c1 COLLATE BINARY END);
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(1315662835)))AND(((t1.c0)&(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(0x4e6b6bf3)))AND(((t1.c0)&(t1.c1)))))AND((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)) IN ())))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE t1.c0  WHEN UPPER(t1.c1) THEN ((t1.c1)/(t1.c0)) WHEN CASE '204650698'  WHEN t1.c0 THEN t1.c1 END THEN t1.c1 COLLATE BINARY END);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)>(t1.c0)) IN (((t1.c1) IS FALSE), t1.c1, t1.c0)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c1)>(t1.c0)) IN (((t1.c1) IS FALSE))))AND(t1.c0)));
SELECT MAX(t1.c1) FROM t1 WHERE (CASE ((t1.c0)AND(t1.c0))  WHEN ((t1.c0)LIKE(t1.c1)) THEN CASE WHEN t1.c1 THEN t1.c0 END ELSE NULL END);
SELECT MAX(t1.c1) FROM t1 WHERE (CASE ((t1.c0)AND(t1.c0))  WHEN ((t1.c0)LIKE(t1.c1)) THEN CASE WHEN t1.c1 THEN t1.c0 END ELSE NULL END) INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE ((+ (((t1.c1)<(t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c0)|(t1.c1)))OR(0xffffffff902bcf6d)))AND((- (t1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((t1.c0)|(t1.c1)))OR(0Xffffffff902bcf6d)))AND((- (t1.c1)))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE))) LIMIT 4 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0) NOT BETWEEN (0.21076611667534506) AND (t1.c0)) IN (((NULL) BETWEEN (t1.c1) AND (t1.c0)), CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN x'' END))) LIMIT 0X4;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((('1930941406' COLLATE RTRIM) BETWEEN (ABS(t1.c0)) AND ((t1.c0 IN (t1.c0)))));
SELECT DISTINCT MAX(t1.c0) FROM t1 NOT INDEXED WHERE ((('1930941406' COLLATE RTRIM) BETWEEN (ABS(t1.c0)) AND ((t1.c0 IN (t1.c0)))));
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (t1.c0) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (t1.c0) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0)))) IS TRUE));
SELECT * FROM t1 WHERE ((((((((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0)))) IS TRUE))AND((NOT (DATETIME(t1.c0, t1.c1, t1.c0)))))) ORDER BY CASE WHEN (t1.c0 IN (t1.c1, t1.c0)) THEN ((t1.c1)IS(t1.c1)) WHEN (t1.c1 IN ()) THEN t1.c0 COLLATE NOCASE WHEN NULL THEN (+ ('-1843441863')) ELSE CAST(t1.c1 AS BLOB) END  NULLS LAST LIMIT 0X3 INTERSECT SELECT ALL * FROM t1 WHERE (((((((((((((-1.185874476E9)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))LIKE(t1.c0))) ORDER BY CASE WHEN (t1.c0 IN (t1.c1, t1.c0)) THEN ((t1.c1)IS(t1.c1)) WHEN (t1.c1 IN ()) THEN t1.c0 COLLATE NOCASE WHEN NULL THEN (+ ('-1843441863')) ELSE CAST(t1.c1 AS BLOB) END  NULLS LAST LIMIT 3;
SELECT ALL * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0)))) IS TRUE));
SELECT * FROM t1 WHERE ((((((((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0)))) IS TRUE))AND((NOT (DATETIME(t1.c0, t1.c1, t1.c0)))))) ORDER BY CASE WHEN (t1.c0 IN (t1.c1, t1.c0)) THEN ((t1.c1)IS(t1.c1)) WHEN (t1.c1 IN ()) THEN t1.c0 COLLATE NOCASE WHEN NULL THEN (+ ('-1843441863')) ELSE CAST(t1.c1 AS BLOB) END  NULLS LAST LIMIT 0X3 INTERSECT SELECT ALL * FROM t1 WHERE (((((((((((((-1.185874476E9)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))LIKE(t1.c0))) ORDER BY CASE WHEN (t1.c0 IN (t1.c1, t1.c0)) THEN ((t1.c1)IS(t1.c1)) WHEN (t1.c1 IN ()) THEN t1.c0 COLLATE NOCASE WHEN NULL THEN (+ ('-1843441863')) ELSE CAST(t1.c1 AS BLOB) END  NULLS LAST LIMIT 3;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ('<&y') ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))%(((t1.c0)<<(t1.c0)))) DESC  NULLS LAST, (((t1.c0, t1.c0)) BETWEEN ((t1.c1 COLLATE RTRIM, (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) AND ((CAST(t1.c1 AS TEXT), (+ (t1.c0)))));
SELECT MAX(t1.c0) FROM t1 WHERE ('<&y') ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN 'E' WHEN t1.c0 THEN t1.c0 END) NOT BETWEEN ((t1.c0 IN ())) AND (CAST(0.7960258449854591 AS REAL))) ASC LIMIT 0X4 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (CHAR(t1.c1)) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN 'E' WHEN t1.c0 THEN t1.c0 END) NOT BETWEEN ((t1.c0 IN ())) AND (CAST(0.7960258449854591 AS REAL))) ASC LIMIT 4;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c0)|('!/SNH[ഖVP')) AS NUMERIC));
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(((t1.c0)|('!/SNH[ഖVP')) AS NUMERIC))AND((((((t1.c1))>=((t1.c0)))) NOT NULL)))) ORDER BY TYPEOF(DISTINCT ((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0))) DESC, (t1.c1 IN ()) COLLATE NOCASE DESC  NULLS LAST, json_valid(t1.c1)  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((MIN(t1.c1, t1.c0, t1.c1, t1.c0)) NOTNULL)) ORDER BY TYPEOF(DISTINCT ((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0))) DESC, (t1.c1 IN ()) COLLATE NOCASE DESC  NULLS LAST, json_valid(t1.c1)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND (0.24043267391032486))) ORDER BY ((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)) COLLATE RTRIM ASC  NULLS LAST, (((t1.c0)) NOT BETWEEN ((CAST(t1.c1 AS INTEGER))) AND ((CASE WHEN t1.c0 THEN t1.c1 END))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND (0.24043267391032486)))AND((((- (t1.c0))) ISNULL)))) ORDER BY ((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)) COLLATE RTRIM ASC  NULLS LAST, (((t1.c0)) NOT BETWEEN ((CAST(t1.c1 AS INTEGER))) AND ((CASE WHEN t1.c0 THEN t1.c1 END))) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT COUNT(*) FROM t1 WHERE ((NOT (x'da'))) ORDER BY ((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)) COLLATE RTRIM ASC  NULLS LAST, (((t1.c0)) NOT BETWEEN ((CAST(t1.c1 AS INTEGER))) AND ((CASE WHEN t1.c0 THEN t1.c1 END))) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE ((+ ((~ (t1.c0))))) ORDER BY (CAST(t1.c0 AS TEXT) IN (((t1.c1) IS TRUE))) ASC  NULLS LAST, (((t1.c1) IS TRUE) IN ())  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((+ ((~ (t1.c0))))) ORDER BY ((((CAST(t1.c1 AS REAL))AND((t1.c1 IN ()))))AND(((t1.c0)>>(t1.c0))))  NULLS LAST, DATE(CAST(t1.c0 AS BLOB), (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))), 0.19149385225249038, ((t1.c0)<<(t1.c1)), TYPEOF(t1.c0))  NULLS FIRST LIMIT 0x2;
SELECT * FROM t1 WHERE ((+ ((~ (t1.c0))))) ORDER BY (CAST(t1.c0 AS TEXT) IN (((t1.c1) IS TRUE))) ASC  NULLS LAST, (((t1.c1) IS TRUE) IN ())  NULLS LAST;
SELECT ALL * FROM t1 WHERE (ABS(CAST(t1.c1 AS BLOB))) ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN ((~ (t1.c0))) AND (((t1.c0) IS FALSE))) ASC;
SELECT DISTINCT * FROM t1 WHERE (ABS(CAST(t1.c1 AS BLOB))) ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN ((~ (t1.c0))) AND (((t1.c0) IS FALSE))) ASC LIMIT 2;
SELECT ALL * FROM t1 WHERE (ABS(CAST(t1.c1 AS BLOB))) ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN ((~ (t1.c0))) AND (((t1.c0) IS FALSE))) ASC;
SELECT DISTINCT * FROM t1 WHERE (ABS(CAST(t1.c1 AS BLOB))) ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN ((~ (t1.c0))) AND (((t1.c0) IS FALSE))) ASC LIMIT 2;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CASE WHEN t1.c0 COLLATE RTRIM THEN CASE WHEN '썄YjB*\4' THEN t1.c1 END WHEN (+ (t1.c0)) THEN ((t1.c1)<=(t1.c1)) ELSE (t1.c1 IN (0xb8e194e, t1.c0)) END);
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CASE WHEN t1.c0 COLLATE RTRIM THEN CASE WHEN '썄YjB*\4' THEN t1.c1 END WHEN (+ (t1.c0)) THEN ((t1.c1)<=(t1.c1)) ELSE (t1.c1 IN (0xb8e194e, t1.c0)) END) ORDER BY (((NULL)|(t1.c0)) IN ()), (~ ((+ (t1.c1)))) DESC, COALESCE(DISTINCT CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN NULL ELSE t1.c1 END, t1.c1 COLLATE NOCASE) ASC LIMIT 1;
SELECT ALL * FROM t1 WHERE (UNLIKELY(0.6115580582077196)) ORDER BY COALESCE(CAST('T' AS BLOB), ((t1.c1) IS TRUE), ((t1.c0)&(t1.c1)), (((t1.c0, t1.c0))<>((t1.c1, t1.c1)))) DESC, CASE CASE WHEN t1.c1 THEN t1.c0 END  WHEN t1.c0 THEN LTRIM(t1.c0, t1.c1) WHEN ((t1.c0)<=(t1.c1)) THEN ((x'') NOT NULL) WHEN ((t1.c0)>=(t1.c1)) THEN ((t1.c1)+(t1.c1)) ELSE (t1.c1 IN (t1.c0)) END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (UNLIKELY(0.6115580582077196)) ORDER BY COALESCE(CAST('T' AS BLOB), ((t1.c1) IS TRUE), ((t1.c0)&(t1.c1)), (((t1.c0, t1.c0))<>((t1.c1, t1.c1)))) DESC, CASE CASE WHEN t1.c1 THEN t1.c0 END  WHEN t1.c0 THEN LTRIM(t1.c0, t1.c1) WHEN ((t1.c0)<=(t1.c1)) THEN ((x'') NOT NULL) WHEN ((t1.c0)>=(t1.c1)) THEN ((t1.c1)+(t1.c1)) ELSE (t1.c1 IN (t1.c0)) END  NULLS FIRST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ('Ut') ORDER BY COALESCE(CAST('T' AS BLOB), ((t1.c1) IS TRUE), ((t1.c0)&(t1.c1)), (((t1.c0, t1.c0))!=((t1.c1, t1.c1)))) DESC, CASE CASE WHEN t1.c1 THEN t1.c0 END  WHEN t1.c0 THEN LTRIM(t1.c0, t1.c1) WHEN ((t1.c0)<=(t1.c1)) THEN ((x'') NOT NULL) WHEN ((t1.c0)>=(t1.c1)) THEN ((t1.c1)+(t1.c1)) ELSE (t1.c1 IN (t1.c0)) END  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (UNLIKELY(0.6115580582077196)) ORDER BY COALESCE(CAST('T' AS BLOB), ((t1.c1) IS TRUE), ((t1.c0)&(t1.c1)), (((t1.c0, t1.c0))<>((t1.c1, t1.c1)))) DESC, CASE CASE WHEN t1.c1 THEN t1.c0 END  WHEN t1.c0 THEN LTRIM(t1.c0, t1.c1) WHEN ((t1.c0)<=(t1.c1)) THEN ((x'') NOT NULL) WHEN ((t1.c0)>=(t1.c1)) THEN ((t1.c1)+(t1.c1)) ELSE (t1.c1 IN (t1.c0)) END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (UNLIKELY(0.6115580582077196)) ORDER BY COALESCE(CAST('T' AS BLOB), ((t1.c1) IS TRUE), ((t1.c0)&(t1.c1)), (((t1.c0, t1.c0))<>((t1.c1, t1.c1)))) DESC, CASE CASE WHEN t1.c1 THEN t1.c0 END  WHEN t1.c0 THEN LTRIM(t1.c0, t1.c1) WHEN ((t1.c0)<=(t1.c1)) THEN ((x'') NOT NULL) WHEN ((t1.c0)>=(t1.c1)) THEN ((t1.c1)+(t1.c1)) ELSE (t1.c1 IN (t1.c0)) END  NULLS FIRST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ('Ut') ORDER BY COALESCE(CAST('T' AS BLOB), ((t1.c1) IS TRUE), ((t1.c0)&(t1.c1)), (((t1.c0, t1.c0))!=((t1.c1, t1.c1)))) DESC, CASE CASE WHEN t1.c1 THEN t1.c0 END  WHEN t1.c0 THEN LTRIM(t1.c0, t1.c1) WHEN ((t1.c0)<=(t1.c1)) THEN ((x'') NOT NULL) WHEN ((t1.c0)>=(t1.c1)) THEN ((t1.c1)+(t1.c1)) ELSE (t1.c1 IN (t1.c0)) END  NULLS FIRST LIMIT 0X2;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) IN (t1.c0 COLLATE NOCASE)));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) IN (t1.c0 COLLATE NOCASE)))AND(HEX(DISTINCT CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))) ORDER BY t1.c1 LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (TRIM(((t1.c0)+(t1.c0)))) ORDER BY t1.c1 LIMIT 1;
SELECT * FROM t1 WHERE (CASE WHEN (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c0, t1.c0, t1.c0))) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c1 END ELSE (t1.c1 IN ()) END) ORDER BY 0.7019593739999025 COLLATE BINARY;
SELECT ALL * FROM t1 WHERE (((CASE WHEN (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c0, t1.c0, t1.c0))) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c1 END ELSE (t1.c1 IN ()) END)AND(((CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) NOT BETWEEN (json_patch(t1.c0, t1.c1)) AND ((('1761015341')*(t1.c1))))))) ORDER BY 0.7019593739999025 COLLATE BINARY LIMIT 1;
SELECT * FROM t1 WHERE (CASE WHEN (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c0, t1.c0, t1.c0))) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c1 END ELSE (t1.c1 IN ()) END) ORDER BY 0.7019593739999025 COLLATE BINARY;
SELECT ALL * FROM t1 WHERE (((CASE WHEN (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c0, t1.c0, t1.c0))) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c1 END ELSE (t1.c1 IN ()) END)AND(((CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) NOT BETWEEN (json_patch(t1.c0, t1.c1)) AND ((('1761015341')*(t1.c1))))))) ORDER BY 0.7019593739999025 COLLATE BINARY LIMIT 1;
SELECT ALL * FROM t1 WHERE (1065302793) ORDER BY (((t1.c0, t1.c1)) BETWEEN ((NULL, ((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, t1.c1 COLLATE NOCASE)))  NULLS LAST, '-1028690489';
SELECT DISTINCT * FROM t1 WHERE (((0X3f7f3b09)AND((CAST(t1.c1 AS INTEGER) IN (t1.c1 COLLATE BINARY))))) ORDER BY (((t1.c0, t1.c1)) BETWEEN ((NULL, ((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, t1.c1 COLLATE NOCASE)))  NULLS LAST, '-1028690489' INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(UPPER(DISTINCT t1.c1) AS TEXT)) ORDER BY (((t1.c0, t1.c1)) BETWEEN ((NULL, ((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, t1.c1 COLLATE NOCASE)))  NULLS LAST, '-1028690489';
SELECT ALL * FROM t1 WHERE (1065302793) ORDER BY (((t1.c0, t1.c1)) BETWEEN ((NULL, ((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, t1.c1 COLLATE NOCASE)))  NULLS LAST, '-1028690489';
SELECT DISTINCT * FROM t1 WHERE (((0X3f7f3b09)AND((CAST(t1.c1 AS INTEGER) IN (t1.c1 COLLATE BINARY))))) ORDER BY (((t1.c0, t1.c1)) BETWEEN ((NULL, ((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, t1.c1 COLLATE NOCASE)))  NULLS LAST, '-1028690489' INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(UPPER(DISTINCT t1.c1) AS TEXT)) ORDER BY (((t1.c0, t1.c1)) BETWEEN ((NULL, ((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, t1.c1 COLLATE NOCASE)))  NULLS LAST, '-1028690489';
SELECT * FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE (((t1.c1)AND((((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), ((t1.c1)OR(t1.c1))))==((x'', t1.c0)))))) LIMIT 0X1;
SELECT * FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE (((t1.c1)AND((((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), ((t1.c1)OR(t1.c1))))==((x'', t1.c0)))))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))  WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 END THEN ((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)) END) ORDER BY t1.c0 DESC;
SELECT DISTINCT * FROM t1 WHERE (CASE ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))  WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 END THEN ((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)) END) ORDER BY t1.c0 DESC;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))  WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 END THEN ((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)) END) ORDER BY t1.c0 DESC;
SELECT DISTINCT * FROM t1 WHERE (CASE ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))  WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 END THEN ((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)) END) ORDER BY t1.c0 DESC;
SELECT MAX(t1.c1) FROM t1 WHERE (((CASE WHEN t1.c1 THEN 0.1930175036968944 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)*(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY LAST_INSERT_ROWID()  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CASE WHEN t1.c1 THEN 0.1930175036968944 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)*(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY LAST_INSERT_ROWID()  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((t1.c1, t1.c0, t1.c0, t1.c1, t1.c1, t1.c1, x'', t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1, t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c1, t1.c1, t1.c1, 'qU<', t1.c0, t1.c1))), ((t1.c0) NOTNULL), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))==(((~ (t1.c0)), t1.c1, CASE WHEN t1.c0 THEN t1.c1 END)))) ORDER BY LAST_INSERT_ROWID()  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM t1 WHERE (TYPEOF(DISTINCT CAST(NULL AS TEXT)));
SELECT ALL COUNT(*) FROM t1 WHERE (TYPEOF(DISTINCT CAST(NULL AS TEXT))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))||(t1.c0)) DESC, ((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR((- (t1.c0)))))AND(((t1.c1) IS FALSE))))AND(0.25704327255450043)) ASC  NULLS FIRST, UPPER(CAST(t1.c1 AS REAL))  NULLS FIRST, CAST((NOT (t1.c0)) AS NUMERIC);
SELECT MAX(t1.c1) FROM t1 WHERE (CAST(t1.c1 AS BLOB) COLLATE BINARY) ORDER BY ((t1.c1) BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) AND (NULL));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CAST(t1.c1 AS BLOB) COLLATE BINARY)AND(TRIM(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))) ORDER BY ((t1.c1) BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) AND (NULL)) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((- (((t1.c1)/(t1.c0))))) ORDER BY ((t1.c1) BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) AND (NULL));
SELECT ALL COUNT(*) FROM t1 WHERE ('-1452555701');
SELECT DISTINCT COUNT(*) FROM t1 WHERE ('-1452555701') ORDER BY ((((((t1.c0)OR(t1.c0)))OR(t1.c0))) IS FALSE)  NULLS FIRST, ((0.684920537938966) ISNULL) ASC INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((LTRIM(t1.c1, t1.c1) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY ((((((t1.c0)OR(t1.c0)))OR(t1.c0))) IS FALSE)  NULLS FIRST, ((0.684920537938966) ISNULL) ASC;
SELECT * FROM t1 WHERE (json_valid((- ('952584868'))));
SELECT DISTINCT * FROM t1 WHERE (((json_valid((- ('952584868'))))AND((((+ (t1.c1)))>>((t1.c0 IN ())))))) ORDER BY CASE WHEN t1.c0 COLLATE NOCASE THEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((0xffffffffabec46af))) ELSE (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c0, 'Q', t1.c0))) END LIMIT 2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((LOWER(t1.c0)) NOTNULL)) ORDER BY CASE WHEN t1.c0 COLLATE NOCASE THEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((0Xffffffffabec46af))) ELSE (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c0, 'Q', t1.c0))) END LIMIT 0X2;
SELECT * FROM t1 WHERE (json_valid((- ('952584868'))));
SELECT DISTINCT * FROM t1 WHERE (((json_valid((- ('952584868'))))AND((((+ (t1.c1)))>>((t1.c0 IN ())))))) ORDER BY CASE WHEN t1.c0 COLLATE NOCASE THEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((0xffffffffabec46af))) ELSE (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c0, 'Q', t1.c0))) END LIMIT 2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((LOWER(t1.c0)) NOTNULL)) ORDER BY CASE WHEN t1.c0 COLLATE NOCASE THEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((0Xffffffffabec46af))) ELSE (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c0, 'Q', t1.c0))) END LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (CAST(0.4846706440493266 AS INTEGER)) ORDER BY ((t1.c1 COLLATE NOCASE)>=(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ASC, ((((((t1.c1)>=(t1.c0)))OR((- (t1.c1)))))AND((((t1.c1, 'D	(wH62g+', NULL))<=((t1.c1, '', t1.c0)))))  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(0.4846706440493266 AS INTEGER)) ORDER BY ((t1.c1 COLLATE NOCASE)>=(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ASC, ((((((t1.c1)>=(t1.c0)))OR((- (t1.c1)))))AND((((t1.c1, 'D	(wH62g+', NULL))<=((t1.c1, '', t1.c0)))))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL * FROM t1 WHERE (LIKELY(t1.c1) COLLATE RTRIM) ORDER BY ((t1.c1 COLLATE NOCASE)>=(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ASC, ((((((t1.c1)>=(t1.c0)))OR((- (t1.c1)))))AND((((t1.c1, 'D	(wH62g+', NULL))<=((t1.c1, '', t1.c0)))))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (CAST(0.4846706440493266 AS INTEGER)) ORDER BY ((t1.c1 COLLATE NOCASE)>=(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ASC, ((((((t1.c1)>=(t1.c0)))OR((- (t1.c1)))))AND((((t1.c1, 'D	(wH62g+', NULL))<=((t1.c1, '', t1.c0)))))  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(0.4846706440493266 AS INTEGER)) ORDER BY ((t1.c1 COLLATE NOCASE)>=(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ASC, ((((((t1.c1)>=(t1.c0)))OR((- (t1.c1)))))AND((((t1.c1, 'D	(wH62g+', NULL))<=((t1.c1, '', t1.c0)))))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL * FROM t1 WHERE (LIKELY(t1.c1) COLLATE RTRIM) ORDER BY ((t1.c1 COLLATE NOCASE)>=(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ASC, ((((((t1.c1)>=(t1.c0)))OR((- (t1.c1)))))AND((((t1.c1, 'D	(wH62g+', NULL))<=((t1.c1, '', t1.c0)))))  NULLS FIRST LIMIT 0x1;
SELECT MIN(t1.c1) FROM t1 WHERE (json_type(((((t1.c1)AND(t1.c1)))OR(t1.c1))));
SELECT MIN(t1.c1) FROM t1 WHERE (json_type(((((t1.c1)AND(t1.c1)))OR(t1.c1)))) ORDER BY 0.4263169187658743  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((CASE t1.c1  WHEN 503203198 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) NOT BETWEEN (((t1.c0)-(NULL))) AND (CAST(t1.c1 AS BLOB))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((CASE t1.c1  WHEN 0X1dfe457e THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) NOT BETWEEN (((t1.c0)-(NULL))) AND (CAST(t1.c1 AS BLOB))))AND(((CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOT BETWEEN (NULL COLLATE BINARY) AND (((t1.c0)=(t1.c0))))))) LIMIT 2 INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (t1.c0) LIMIT 2;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((t1.c1)*(t1.c0)))IS(((((t1.c0)AND(t1.c0)))OR(t1.c1)))));
SELECT MAX(t1.c0) FROM t1 WHERE (((((((t1.c1)*(t1.c0)))IS(((((t1.c0)AND(t1.c0)))OR(t1.c1)))))AND(t1.c1)));
SELECT ALL * FROM t1 WHERE (HEX(t1.c1) COLLATE NOCASE);
SELECT DISTINCT * FROM t1 WHERE (((HEX(t1.c1) COLLATE NOCASE)AND(((UNLIKELY(t1.c0)) ISNULL)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((0.7834972156615262)==(t1.c0)))OR(t1.c1)))OR((((t1.c0))<=((t1.c1))))))OR(json_remove(t1.c0, t1.c1, t1.c1, 0.8185662987496911))));
SELECT ALL * FROM t1 WHERE (HEX(t1.c1) COLLATE NOCASE);
SELECT DISTINCT * FROM t1 WHERE (((HEX(t1.c1) COLLATE NOCASE)AND(((UNLIKELY(t1.c0)) ISNULL)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((0.7834972156615262)==(t1.c0)))OR(t1.c1)))OR((((t1.c0))<=((t1.c1))))))OR(json_remove(t1.c0, t1.c1, t1.c1, 0.8185662987496911))));
SELECT ALL * FROM t1 WHERE (((t1.c1) NOT NULL) COLLATE NOCASE) ORDER BY ((((t1.c1)IS(t1.c0))) NOT BETWEEN ((+ (NULL))) AND (((t1.c1)<>(t1.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOT NULL) COLLATE NOCASE)AND(((CAST(t1.c0 AS TEXT)) NOT BETWEEN (((((x'')AND(t1.c1)))OR(t1.c1))) AND (CAST(t1.c1 AS NUMERIC)))))) ORDER BY (((CAST(t1.c0 AS NUMERIC)))<=((((t1.c0)OR(t1.c1)))))  NULLS FIRST, (((t1.c1, t1.c0, t1.c1)) BETWEEN ((((((t1.c0)OR(0x228431a4)))OR(t1.c1)), t1.c1 COLLATE NOCASE, ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))) AND (((('K') BETWEEN (t1.c0) AND (t1.c1)), t1.c0 COLLATE RTRIM, (- (t1.c0))))) DESC LIMIT 4 INTERSECT SELECT DISTINCT * FROM t1 WHERE ('480947503') ORDER BY (((CAST(t1.c0 AS NUMERIC)))<=((((t1.c0)OR(t1.c1)))))  NULLS FIRST, (((t1.c1, t1.c0, t1.c1)) BETWEEN ((((((t1.c0)OR(579088804)))OR(t1.c1)), t1.c1 COLLATE NOCASE, ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))) AND (((('K') BETWEEN (t1.c0) AND (t1.c1)), t1.c0 COLLATE RTRIM, (- (t1.c0))))) DESC LIMIT 4;
SELECT ALL * FROM t1 WHERE (((t1.c1) NOT NULL) COLLATE NOCASE) ORDER BY ((((t1.c1)IS(t1.c0))) NOT BETWEEN ((+ (NULL))) AND (((t1.c1)<>(t1.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOT NULL) COLLATE NOCASE)AND(((CAST(t1.c0 AS TEXT)) NOT BETWEEN (((((x'')AND(t1.c1)))OR(t1.c1))) AND (CAST(t1.c1 AS NUMERIC)))))) ORDER BY (((CAST(t1.c0 AS NUMERIC)))<=((((t1.c0)OR(t1.c1)))))  NULLS FIRST, (((t1.c1, t1.c0, t1.c1)) BETWEEN ((((((t1.c0)OR(0x228431a4)))OR(t1.c1)), t1.c1 COLLATE NOCASE, ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))) AND (((('K') BETWEEN (t1.c0) AND (t1.c1)), t1.c0 COLLATE RTRIM, (- (t1.c0))))) DESC LIMIT 4 INTERSECT SELECT DISTINCT * FROM t1 WHERE ('480947503') ORDER BY (((CAST(t1.c0 AS NUMERIC)))<=((((t1.c0)OR(t1.c1)))))  NULLS FIRST, (((t1.c1, t1.c0, t1.c1)) BETWEEN ((((((t1.c0)OR(579088804)))OR(t1.c1)), t1.c1 COLLATE NOCASE, ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))) AND (((('K') BETWEEN (t1.c0) AND (t1.c1)), t1.c0 COLLATE RTRIM, (- (t1.c0))))) DESC LIMIT 4;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1 IN (t1.c1, t1.c0))) BETWEEN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))) AND (((t1.c0) NOT NULL)))) ORDER BY (CAST(t1.c0 AS TEXT) IN ()) DESC, CASE ((t1.c1) NOTNULL)  WHEN ((t1.c1)>(t1.c0)) THEN (- (x'')) WHEN (- (t1.c0)) THEN CAST(t1.c0 AS INTEGER) ELSE ((t1.c0) ISNULL) END  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c1 IN (t1.c1, t1.c0))) BETWEEN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))) AND (((t1.c0) NOT NULL))))AND(t1.c0))) ORDER BY ((((t1.c1)+('-706434458')))||((t1.c1 IN ()))) ASC, (- (((t1.c1) BETWEEN (t1.c1) AND (0.8494058362926951))))  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE (((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))||(t1.c1)));
SELECT MIN(t1.c1) FROM t1 WHERE (((((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))||(t1.c1)))AND(((CAST(t1.c0 AS NUMERIC))<=(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))))) ORDER BY ((NULL COLLATE RTRIM) BETWEEN ((~ (t1.c0))) AND ('')) LIMIT 2;
SELECT MIN(t1.c1) FROM t1 WHERE (CAST(t1.c1 AS INTEGER) COLLATE BINARY);
SELECT MIN(t1.c1) FROM t1 WHERE (((CAST(t1.c1 AS INTEGER) COLLATE BINARY)AND((((t1.c1 IN (t1.c0)))AND(((((t1.c0)OR(t1.c0)))OR(t1.c1))))))) ORDER BY ((((((DATE(t1.c1, t1.c1, t1.c0, t1.c0, t1.c0))AND(x'95c6')))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))AND(LOWER(DISTINCT t1.c0))) ASC  NULLS FIRST, x''  NULLS LAST, ((((((t1.c0)OR(t1.c1)))OR(t1.c0))) BETWEEN (t1.c0 COLLATE RTRIM) AND (((t1.c1) IS FALSE)))  NULLS LAST LIMIT 0X3 INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c0)-(t1.c0))) BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) AND (t1.c1 COLLATE RTRIM))) ORDER BY ((((((DATE(t1.c1, t1.c1, t1.c0, t1.c0, t1.c0))AND(x'95c6')))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))AND(LOWER(DISTINCT t1.c0))) ASC  NULLS FIRST, x''  NULLS LAST, ((((((t1.c0)OR(t1.c1)))OR(t1.c0))) BETWEEN (t1.c0 COLLATE RTRIM) AND (((t1.c1) IS FALSE)))  NULLS LAST LIMIT 0x3;
SELECT ALL * FROM t1 WHERE (((((((t1.c1)OR((((t1.c1, t1.c1, t1.c0, 0.44669237321795163))!=((t1.c1, t1.c1, t1.c1, 'm'))))))OR(STRFTIME(t1.c0, t1.c1, t1.c0, t1.c1))))AND(json_patch(t1.c1, t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1)OR((((t1.c1, t1.c1, t1.c0, 0.44669237321795163))<((t1.c1, t1.c1, t1.c1, 'm'))))))OR(STRFTIME(t1.c0, t1.c1, t1.c0, t1.c1))))AND(json_patch(t1.c1, t1.c1))))AND((((- (t1.c0))) BETWEEN ((((t1.c0, t1.c0))<=((t1.c1, t1.c0)))) AND ((NOT (1.552213072E9))))))) ORDER BY (NOT ('1106615337')), t1.c0, (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) IN ()) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))>(t1.c0 COLLATE BINARY))) ORDER BY (NOT ('1106615337')), t1.c0, (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) IN ()) ASC;
SELECT ALL * FROM t1 WHERE (((((((t1.c1)OR((((t1.c1, t1.c1, t1.c0, 0.44669237321795163))!=((t1.c1, t1.c1, t1.c1, 'm'))))))OR(STRFTIME(t1.c0, t1.c1, t1.c0, t1.c1))))AND(json_patch(t1.c1, t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1)OR((((t1.c1, t1.c1, t1.c0, 0.44669237321795163))<((t1.c1, t1.c1, t1.c1, 'm'))))))OR(STRFTIME(t1.c0, t1.c1, t1.c0, t1.c1))))AND(json_patch(t1.c1, t1.c1))))AND((((- (t1.c0))) BETWEEN ((((t1.c0, t1.c0))<=((t1.c1, t1.c0)))) AND ((NOT (1.552213072E9))))))) ORDER BY (NOT ('1106615337')), t1.c0, (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) IN ()) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))>(t1.c0 COLLATE BINARY))) ORDER BY (NOT ('1106615337')), t1.c0, (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) IN ()) ASC;
SELECT MIN(t1.c1) FROM t1 WHERE (((((((((((((((t1.c0 COLLATE RTRIM)AND(CASE WHEN t1.c0 THEN t1.c0 END)))AND(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))AND(((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))))AND(CAST(t1.c0 AS BLOB))))OR('1418587284')))AND(CAST(t1.c1 AS REAL))))OR(((t1.c0)!=(t1.c0)))));
SELECT MIN(t1.c1) FROM t1 WHERE (((((((((((((((t1.c0 COLLATE RTRIM)AND(CASE WHEN t1.c0 THEN t1.c0 END)))AND(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))AND(((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))))AND(CAST(t1.c0 AS BLOB))))OR('1418587284')))AND(CAST(t1.c1 AS REAL))))OR(((t1.c0)<>(t1.c0))))) ORDER BY ((t1.c1) BETWEEN (x'2a9a6474') AND (t1.c0)) COLLATE BINARY DESC  NULLS LAST LIMIT 0 INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c0) NOT NULL)) NOTNULL)) ORDER BY ((t1.c1) BETWEEN (x'2a9a6474') AND (t1.c0)) COLLATE BINARY DESC  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (NULL) ORDER BY (((t1.c0 IN (t1.c1, t1.c1, t1.c1))) NOT BETWEEN ('-861903565') AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (NULL) ORDER BY (((t1.c0 IN (t1.c1, t1.c1, t1.c1))) NOT BETWEEN ('-861903565') AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c0 COLLATE BINARY AS TEXT));
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 COLLATE BINARY AS TEXT))AND(((LIKELIHOOD(t1.c0, t1.c0)) NOTNULL))));
SELECT * FROM t1 WHERE (LIKE(t1.c0, ((t1.c1) BETWEEN (0.8117061499173314) AND (t1.c0)), '*'));
SELECT DISTINCT * FROM t1 WHERE (((LIKE(t1.c0, ((t1.c1) BETWEEN (0.8117061499173314) AND (t1.c0)), '*'))AND(0.1761644149343069 COLLATE RTRIM))) ORDER BY ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c0) NOT BETWEEN (x'') AND (t1.c0)))))OR(((1e500)<>(t1.c1))))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 NOT INDEXED WHERE (CAST(0.3060280448537728 AS TEXT)) ORDER BY ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c0) NOT BETWEEN (x'') AND (t1.c0)))))OR(((1e500)<>(t1.c1))))  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (LIKE(t1.c0, ((t1.c1) BETWEEN (0.8117061499173314) AND (t1.c0)), '*'));
SELECT DISTINCT * FROM t1 WHERE (((LIKE(t1.c0, ((t1.c1) BETWEEN (0.8117061499173314) AND (t1.c0)), '*'))AND(0.1761644149343069 COLLATE RTRIM))) ORDER BY ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c0) NOT BETWEEN (x'') AND (t1.c0)))))OR(((1e500)<>(t1.c1))))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 NOT INDEXED WHERE (CAST(0.3060280448537728 AS TEXT)) ORDER BY ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c0) NOT BETWEEN (x'') AND (t1.c0)))))OR(((1e500)<>(t1.c1))))  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (((((t1.c0) IS FALSE))-(((t1.c1)>>(t1.c1))))) ORDER BY (((('-1408692428') ISNULL)) NOT NULL), CASE json_extract(t1.c1, 0.3127747622570092, t1.c0, t1.c1)  WHEN (~ (t1.c0)) THEN t1.c1 COLLATE RTRIM WHEN ((t1.c0)IS NOT(t1.c1)) THEN (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))) WHEN ((t1.c1) IS TRUE) THEN ((t1.c0)OR(x'8ef4')) END DESC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) IS FALSE))-(((t1.c1)>>(t1.c1))))) ORDER BY ((((t1.c0, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c1, t1.c1))) IN (((t1.c0)*(t1.c0))))  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, '⟕ +WE]')) NOT BETWEEN ((t1.c0 COLLATE BINARY, t1.c0)) AND (((+ (0.9214556637123585)), (t1.c1 IN (t1.c0)))))) ORDER BY ((((t1.c0, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c1, t1.c1))) IN (((t1.c0)*(t1.c0))))  NULLS FIRST LIMIT 0X2;
SELECT * FROM t1 WHERE (((((t1.c0) IS FALSE))-(((t1.c1)>>(t1.c1))))) ORDER BY (((('-1408692428') ISNULL)) NOT NULL), CASE json_extract(t1.c1, 0.3127747622570092, t1.c0, t1.c1)  WHEN (~ (t1.c0)) THEN t1.c1 COLLATE RTRIM WHEN ((t1.c0)IS NOT(t1.c1)) THEN (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))) WHEN ((t1.c1) IS TRUE) THEN ((t1.c0)OR(x'8ef4')) END DESC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) IS FALSE))-(((t1.c1)>>(t1.c1))))) ORDER BY ((((t1.c0, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c1, t1.c1))) IN (((t1.c0)*(t1.c0))))  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, '⟕ +WE]')) NOT BETWEEN ((t1.c0 COLLATE BINARY, t1.c0)) AND (((+ (0.9214556637123585)), (t1.c1 IN (t1.c0)))))) ORDER BY ((((t1.c0, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c1, t1.c1))) IN (((t1.c0)*(t1.c0))))  NULLS FIRST LIMIT 0X2;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c1)IS(t1.c0))  WHEN ((t1.c0) NOTNULL) THEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) WHEN '1826722666' THEN (t1.c1 IN (t1.c1)) WHEN CAST(t1.c1 AS REAL) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) WHEN ((t1.c0) ISNULL) THEN t1.c1 END);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c1)IS(t1.c0))  WHEN ((t1.c0) NOTNULL) THEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) WHEN '1826722666' THEN (t1.c1 IN (t1.c1)) WHEN CAST(t1.c1 AS REAL) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) WHEN ((t1.c0) ISNULL) THEN t1.c1 END) ORDER BY ''  NULLS LAST, CASE CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END  WHEN ((t1.c0) IS TRUE) THEN t1.c1 WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN ((t1.c1)IS NOT(t1.c0)) END DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY CAST('J' AS NUMERIC)  NULLS LAST, ((((t1.c0) ISNULL))GLOB(t1.c0))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY ((t1.c1)IS(0.9102036296462094)) COLLATE RTRIM COLLATE RTRIM  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c0)>>(t1.c1))) IS FALSE)) ORDER BY ((t1.c1)IS(0.9102036296462094)) COLLATE RTRIM COLLATE RTRIM  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY CAST('J' AS NUMERIC)  NULLS LAST, ((((t1.c0) ISNULL))GLOB(t1.c0))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY ((t1.c1)IS(0.9102036296462094)) COLLATE RTRIM COLLATE RTRIM  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c0)>>(t1.c1))) IS FALSE)) ORDER BY ((t1.c1)IS(0.9102036296462094)) COLLATE RTRIM COLLATE RTRIM  NULLS LAST LIMIT 0x0;
SELECT COUNT(*) FROM t1 WHERE ((((NOT (t1.c0))) NOT NULL)) ORDER BY json_array_length((~ (NULL)), CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END)  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((((NOT (t1.c0))) NOT NULL))AND((~ (t1.c1)) COLLATE RTRIM))) ORDER BY CASE WHEN (- (t1.c0)) THEN ((t1.c1)/(t1.c0)) WHEN ((t1.c0)<(NULL)) THEN CAST(t1.c1 AS REAL) WHEN (('NZ') NOT NULL) THEN (((t1.c1, t1.c1, t1.c1))<((t1.c0, '751721270', t1.c0))) WHEN t1.c0 THEN ((t1.c0)<(t1.c1)) END  NULLS LAST LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)>(t1.c1))) IS TRUE)) ORDER BY CASE WHEN (- (t1.c0)) THEN ((t1.c1)/(t1.c0)) WHEN ((t1.c0)<(NULL)) THEN CAST(t1.c1 AS REAL) WHEN (('NZ') NOT NULL) THEN (((t1.c1, t1.c1, t1.c1))<((t1.c0, '751721270', t1.c0))) WHEN t1.c0 THEN ((t1.c0)<(t1.c1)) END  NULLS LAST LIMIT 0X0;
SELECT * FROM t1 WHERE ((x'ee9feac1' IN (t1.c0))) ORDER BY ((COALESCE(t1.c0, t1.c1, t1.c1)) NOTNULL), LAST_INSERT_ROWID() DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((x'ee9feac1' IN (t1.c0)))AND((((NULL IN (0.5440195566646847))) ISNULL)))) ORDER BY 'D' DESC, (+ (x'39c8')) DESC LIMIT 1;
SELECT * FROM t1 WHERE ((x'ee9feac1' IN (t1.c0))) ORDER BY ((COALESCE(t1.c0, t1.c1, t1.c1)) NOTNULL), LAST_INSERT_ROWID() DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((x'ee9feac1' IN (t1.c0)))AND((((NULL IN (0.5440195566646847))) ISNULL)))) ORDER BY 'D' DESC, (+ (x'39c8')) DESC LIMIT 1;
SELECT ALL * FROM t1 WHERE (((t1.c1)*(t1.c0)) COLLATE RTRIM);
SELECT * FROM t1 WHERE (((t1.c1)*(t1.c0)) COLLATE RTRIM) LIMIT 0x3;
SELECT ALL * FROM t1 WHERE (((t1.c1)*(t1.c0)) COLLATE RTRIM);
SELECT * FROM t1 WHERE (((t1.c1)*(t1.c0)) COLLATE RTRIM) LIMIT 0x3;
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c1)<>(t1.c0)))OR((((((('jmdkpX	')AND(t1.c0)))AND(t1.c1)))AND(t1.c0)))))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))OR('-2110322794')))OR((((t1.c1))<>((t1.c1))))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((((t1.c1)<(t1.c0)))OR((((((('jmdkpX	')AND(t1.c0)))AND(t1.c1)))AND(t1.c0)))))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))OR('-2110322794')))OR((((t1.c1))>((t1.c1))))))AND(t1.c0))) ORDER BY t1.c0, ((((t1.c0) NOT NULL)) ISNULL);
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((t1.c0 IN (t1.c0))) ISNULL));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((t1.c0 IN (t1.c0))) ISNULL)) ORDER BY ((((t1.c0)!=(x'')))==(((t1.c1)+(t1.c0)))) DESC, CASE WHEN CASE x'df0e'  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c0) ISNULL) WHEN ((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)) THEN (((t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1))) ELSE CAST(x'a2fe' AS NUMERIC) END ASC, '႕X[y!' LIMIT 0x1;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((t1.c1, t1.c1)) BETWEEN ((((t1.c0)IS(t1.c1)), ((((t1.c0)AND(t1.c1)))OR(t1.c0)))) AND ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), ((((t1.c1)AND(t1.c1)))OR(t1.c0)))))) ORDER BY (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), (t1.c0 IN ())))>=((CAST(t1.c0 AS TEXT), ((((t1.c0)OR(t1.c0)))OR(t1.c0)))))  NULLS FIRST, (((((((t1.c0)OR(t1.c0)))OR(t1.c1))))=((((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1))))) ASC  NULLS FIRST, ((CASE WHEN t1.c0 THEN 0.6844645371491327 END) BETWEEN ((((t1.c0, t1.c1, t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c0, t1.c1, 0.3786070152012021)) AND ((t1.c0, t1.c1, t1.c1, x'e388', t1.c1)))) AND (SUBSTR('*v?', 0.5186165793744397)));
SELECT MAX(t1.c0) FROM t1 WHERE ((((t1.c1, t1.c1)) BETWEEN ((((t1.c0)IS(t1.c1)), ((((t1.c0)AND(t1.c1)))OR(t1.c0)))) AND ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), ((((t1.c1)AND(t1.c1)))OR(t1.c0)))))) ORDER BY (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), (t1.c0 IN ())))>=((CAST(t1.c0 AS TEXT), ((((t1.c0)OR(t1.c0)))OR(t1.c0)))))  NULLS FIRST, (((((((t1.c0)OR(t1.c0)))OR(t1.c1))))=((((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1))))) ASC  NULLS FIRST, ((CASE WHEN t1.c0 THEN 0.6844645371491327 END) BETWEEN ((((t1.c0, t1.c1, t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c0, t1.c1, 0.3786070152012021)) AND ((t1.c0, t1.c1, t1.c1, x'e388', t1.c1)))) AND (SUBSTR('*v?', 0.5186165793744397))) LIMIT 0x4;
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (+ (CAST(t1.c1 AS TEXT))) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)OR(((t1.c0)IS NOT(t1.c1)))))AND(SQLITE_COMPILEOPTION_GET(t1.c1)))) ORDER BY (+ (CAST(t1.c1 AS TEXT)));
SELECT * FROM t1 WHERE (((((t1.c1))<=((t1.c0))) IN (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN '-0.0' WHEN t1.c0 THEN t1.c0 END)));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1))<((t1.c0))) IN (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN '-0.0' WHEN t1.c0 THEN t1.c0 END))) ORDER BY ((((((((t1.c1)AND(((t1.c1)|(t1.c0)))))OR((~ (t1.c1)))))AND('ꆈN')))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS LAST, '-415052413'  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE (((((t1.c1))<=((t1.c0))) IN (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN '-0.0' WHEN t1.c0 THEN t1.c0 END)));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1))<((t1.c0))) IN (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN '-0.0' WHEN t1.c0 THEN t1.c0 END))) ORDER BY ((((((((t1.c1)AND(((t1.c1)|(t1.c0)))))OR((~ (t1.c1)))))AND('ꆈN')))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS LAST, '-415052413'  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) IN ())) ORDER BY ((x'24' IN ()) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)) DESC  NULLS FIRST, ((t1.c1 COLLATE BINARY)LIKE(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))  NULLS FIRST, t1.c0  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) IN ())) ORDER BY ((x'24' IN ()) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)) DESC  NULLS FIRST, ((t1.c1 COLLATE BINARY)LIKE(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))  NULLS FIRST, t1.c0  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE ((+ (t1.c0))) ORDER BY ((x'24' IN ()) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)) DESC  NULLS FIRST, ((t1.c1 COLLATE BINARY)LIKE(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))  NULLS FIRST, t1.c0  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) IN ())) ORDER BY ((x'24' IN ()) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)) DESC  NULLS FIRST, ((t1.c1 COLLATE BINARY)LIKE(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))  NULLS FIRST, t1.c0  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) IN ())) ORDER BY ((x'24' IN ()) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)) DESC  NULLS FIRST, ((t1.c1 COLLATE BINARY)LIKE(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))  NULLS FIRST, t1.c0  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE ((+ (t1.c0))) ORDER BY ((x'24' IN ()) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)) DESC  NULLS FIRST, ((t1.c1 COLLATE BINARY)LIKE(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))  NULLS FIRST, t1.c0  NULLS FIRST;
SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c1)%(t1.c1)))<>(((t1.c0)%(0x668da2e5))))) ORDER BY ((((t1.c0) ISNULL))>>(((t1.c0) NOT NULL))) DESC;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((t1.c1)%(t1.c1)))<(((t1.c0)%(0x668da2e5)))))AND((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))>(((t1.c0)>(t1.c1))))))) ORDER BY ((((t1.c0) ISNULL))>>(((t1.c0) NOT NULL))) DESC INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (LIKE((- (t1.c1)), t1.c1 COLLATE BINARY, '-')) ORDER BY ((((t1.c0) ISNULL))>>(((t1.c0) NOT NULL))) DESC;
SELECT ALL * FROM t1 WHERE (((t1.c1 COLLATE BINARY) BETWEEN (LIKELIHOOD(x'45', t1.c0)) AND (CAST(t1.c0 AS NUMERIC)))) ORDER BY json_object(t1.c0, 'l4M', LIKE(t1.c0, t1.c1, '1'), ((t1.c0) IS FALSE), ((t1.c1)<<('')))  NULLS FIRST, ((((CAST(t1.c1 AS BLOB))AND(CAST(t1.c1 AS TEXT))))AND(((t1.c1) NOTNULL)))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c1 COLLATE BINARY) BETWEEN (LIKELIHOOD(x'45', t1.c0)) AND (CAST(t1.c0 AS NUMERIC)))) ORDER BY json_object(t1.c0, 'l4M', LIKE(t1.c0, t1.c1, '1'), ((t1.c0) IS FALSE), ((t1.c1)<<('')))  NULLS FIRST, ((((CAST(t1.c1 AS BLOB))AND(CAST(t1.c1 AS TEXT))))AND(((t1.c1) NOTNULL)))  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (((t1.c1 COLLATE BINARY) BETWEEN (LIKELIHOOD(x'45', t1.c0)) AND (CAST(t1.c0 AS NUMERIC)))) ORDER BY json_object(t1.c0, 'l4M', LIKE(t1.c0, t1.c1, '1'), ((t1.c0) IS FALSE), ((t1.c1)<<('')))  NULLS FIRST, ((((CAST(t1.c1 AS BLOB))AND(CAST(t1.c1 AS TEXT))))AND(((t1.c1) NOTNULL)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (NULLIF(((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c0)), t1.c0)) ORDER BY CAST(CAST(t1.c1 AS TEXT) AS INTEGER);
SELECT * FROM t1 WHERE (NULLIF(((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c0)), t1.c0)) ORDER BY CAST(CAST(t1.c1 AS TEXT) AS INTEGER);
SELECT ALL * FROM t1 WHERE (NULLIF(((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c0)), t1.c0)) ORDER BY CAST(CAST(t1.c1 AS TEXT) AS INTEGER);
SELECT * FROM t1 WHERE (NULLIF(((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c0)), t1.c0)) ORDER BY CAST(CAST(t1.c1 AS TEXT) AS INTEGER);
SELECT MIN(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY (~ (t1.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY (~ (t1.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((0.07043965996551493) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((0.07043965996551493) ISNULL)) ORDER BY (- ((NOT (x''))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (HEX(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) ORDER BY (- ((NOT (x''))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((0.07043965996551493) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((0.07043965996551493) ISNULL)) ORDER BY (- ((NOT (x''))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (HEX(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) ORDER BY (- ((NOT (x''))))  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CAST((t1.c0 IN (t1.c0)) AS TEXT));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CAST((t1.c0 IN (t1.c0)) AS TEXT)) ORDER BY CAST(CASE WHEN t1.c0 THEN 't' WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END AS TEXT), ((((((load_extension(t1.c1))AND(t1.c1)))OR(((t1.c0)IS(t1.c0)))))AND(8.30816951E8)) DESC LIMIT 3 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC))+(((t1.c0)GLOB(t1.c1))))) ORDER BY CAST(CASE WHEN t1.c0 THEN 't' WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END AS TEXT), ((((((load_extension(t1.c1))AND(t1.c1)))OR(((t1.c0)IS(t1.c0)))))AND(8.30816951E8)) DESC LIMIT 0X3;
SELECT * FROM t1 WHERE (CAST(t1.c1 COLLATE RTRIM AS REAL)) ORDER BY t1.c1, ((((t1.c0) IS FALSE)) IS FALSE) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 COLLATE RTRIM AS REAL)) ORDER BY t1.c1, ((((t1.c0) IS FALSE)) IS FALSE) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) IS FALSE)) ORDER BY t1.c1, ((((t1.c0) IS FALSE)) IS FALSE) DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM t1 WHERE (CAST(t1.c1 COLLATE RTRIM AS REAL)) ORDER BY t1.c1, ((((t1.c0) IS FALSE)) IS FALSE) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 COLLATE RTRIM AS REAL)) ORDER BY t1.c1, ((((t1.c0) IS FALSE)) IS FALSE) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) IS FALSE)) ORDER BY t1.c1, ((((t1.c0) IS FALSE)) IS FALSE) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (t1.c1);
SELECT MIN(t1.c1) FROM t1 WHERE (((t1.c1)AND(-1185874476))) ORDER BY ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (CAST(t1.c1 AS INTEGER)) AND ((+ (t1.c0)))) DESC  NULLS LAST INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE ((((((t1.c0)/(t1.c0))))>=(((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))))))) ORDER BY ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (CAST(t1.c1 AS INTEGER)) AND ((+ (t1.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((((((('_LH33W^w&')OR(t1.c1)))OR(t1.c1)))OR(t1.c0))) IS TRUE)) ORDER BY ((((t1.c0)%(t1.c1)))<<(NULL));
SELECT COUNT(*) FROM t1 WHERE ((((((((((('_LH33W^w&')OR(t1.c1)))OR(t1.c1)))OR(t1.c0))) IS TRUE))AND(((((t1.c0)!=(t1.c0))) NOTNULL)))) ORDER BY ((((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(NULL)))OR(t1.c1)))OR(t1.c1))) IS TRUE) DESC  NULLS FIRST, (~ ((+ (t1.c0))))  NULLS FIRST INTERSECT SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY ((((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(NULL)))OR(t1.c1)))OR(t1.c1))) IS TRUE) DESC  NULLS FIRST, (~ ((+ (t1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE (~ (t1.c0))  WHEN MIN(t1.c1, NULL, t1.c1) THEN ((t1.c0) ISNULL) WHEN CAST(t1.c1 AS INTEGER) THEN (~ (t1.c1)) WHEN CAST(t1.c1 AS INTEGER) THEN CAST(t1.c1 AS INTEGER) ELSE ((NULL)>(t1.c1)) END) ORDER BY (('') BETWEEN (TIME(t1.c1, t1.c1, t1.c1, t1.c1)) AND (((NULL)&(t1.c0)))) DESC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (CASE (~ (t1.c0))  WHEN MIN(t1.c1, NULL, t1.c1) THEN ((t1.c0) ISNULL) WHEN CAST(t1.c1 AS INTEGER) THEN (~ (t1.c1)) WHEN CAST(t1.c1 AS INTEGER) THEN CAST(t1.c1 AS INTEGER) ELSE ((NULL)>(t1.c1)) END) ORDER BY (('') BETWEEN (TIME(t1.c1, t1.c1, t1.c1, t1.c1)) AND (((NULL)&(t1.c0)))) DESC INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) IN (((t1.c0) NOTNULL)))) ORDER BY (('') BETWEEN (TIME(t1.c1, t1.c1, t1.c1, t1.c1)) AND (((NULL)&(t1.c0)))) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((((t1.c1)OR(t1.c0)))OR(t1.c0)) THEN x'5e' END);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((((t1.c1)OR(t1.c0)))OR(t1.c0)) THEN x'5e' END) ORDER BY ((rtreenode(t1.c1, t1.c1))>((((((((('-747868847')OR(t1.c0)))OR(t1.c1)))OR('-1418971393')))AND(t1.c1)))), (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END IN ()) DESC;
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))IS NOT(LIKELY(t1.c1)))) ORDER BY ((CAST('''Vz--Id툃' AS BLOB)) BETWEEN (t1.c0) AND (((t1.c0)|(t1.c0)))), CAST(t1.c0 AS NUMERIC) COLLATE RTRIM DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1 IN ()))IS NOT(LIKELY(t1.c1))))AND(CASE WHEN ((t1.c0) IS TRUE) THEN 0.2696970267141078 ELSE ((((t1.c1)OR(t1.c0)))OR(t1.c1)) END))) ORDER BY ((CAST('''Vz--Id툃' AS BLOB)) BETWEEN (t1.c0) AND (((t1.c0)|(t1.c0)))), CAST(t1.c0 AS NUMERIC) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0X3;
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))IS NOT(LIKELY(t1.c1)))) ORDER BY ((CAST('''Vz--Id툃' AS BLOB)) BETWEEN (t1.c0) AND (((t1.c0)|(t1.c0)))), CAST(t1.c0 AS NUMERIC) COLLATE RTRIM DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1 IN ()))IS NOT(LIKELY(t1.c1))))AND(CASE WHEN ((t1.c0) IS TRUE) THEN 0.2696970267141078 ELSE ((((t1.c1)OR(t1.c0)))OR(t1.c1)) END))) ORDER BY ((CAST('''Vz--Id툃' AS BLOB)) BETWEEN (t1.c0) AND (((t1.c0)|(t1.c0)))), CAST(t1.c0 AS NUMERIC) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0X3;
SELECT * FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE (t1.c1) LIMIT 0X3 INTERSECT SELECT * FROM t1 WHERE (CAST(((t1.c1)GLOB(t1.c1)) AS REAL)) LIMIT 3;
SELECT * FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE (t1.c1) LIMIT 0X3 INTERSECT SELECT * FROM t1 WHERE (CAST(((t1.c1)GLOB(t1.c1)) AS REAL)) LIMIT 3;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(0.7002571769526864)))AND(t1.c1)))<=(CAST(t1.c1 AS BLOB)))) ORDER BY (((t1.c0)-(t1.c1)) IN ()) ASC  NULLS FIRST, ((((t1.c0) ISNULL)) IS TRUE) DESC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(0.7002571769526864)))AND(t1.c1)))<=(CAST(t1.c1 AS BLOB))))AND(((((t1.c1)|(NULL))) IS FALSE)))) ORDER BY (((t1.c0)-(t1.c1)) IN ()) ASC  NULLS FIRST, ((((t1.c0) ISNULL)) IS TRUE) DESC;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((t1.c1) NOTNULL)  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)AND(json_array_length(t1.c1, ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))))) ORDER BY (((((t1.c1)AND(x'')))AND(t1.c0)) IN ()) DESC  NULLS FIRST, CAST(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) AS TEXT)  NULLS FIRST, CASE t1.c1  WHEN (NULL IN ()) THEN t1.c0 WHEN t1.c0 COLLATE NOCASE THEN ((x'ea2c46') NOT NULL) END ASC, ((((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN x'' THEN NULL WHEN t1.c0 THEN t1.c1 END)AND(ABS(t1.c1))))AND((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))))OR(((t1.c1) NOT NULL)))  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((t1.c1) NOTNULL)  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)AND(json_array_length(t1.c1, ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))))) ORDER BY (((((t1.c1)AND(x'')))AND(t1.c0)) IN ()) DESC  NULLS FIRST, CAST(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) AS TEXT)  NULLS FIRST, CASE t1.c1  WHEN (NULL IN ()) THEN t1.c0 WHEN t1.c0 COLLATE NOCASE THEN ((x'ea2c46') NOT NULL) END ASC, ((((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN x'' THEN NULL WHEN t1.c0 THEN t1.c1 END)AND(ABS(t1.c1))))AND((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))))OR(((t1.c1) NOT NULL)))  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (((t1.c0) BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) AND (t1.c0 COLLATE NOCASE)));
SELECT DISTINCT * FROM t1 WHERE (((t1.c0) BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) AND (t1.c0 COLLATE NOCASE))) ORDER BY (((t1.c0, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c1) NOTNULL), CAST(t1.c1 AS REAL), (((t1.c0))=((t1.c0))), CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)) AND ((rtreenode(t1.c1, t1.c0), ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), json(t1.c0), t1.c1)));
SELECT * FROM t1 WHERE (((t1.c0) BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) AND (t1.c0 COLLATE NOCASE)));
SELECT DISTINCT * FROM t1 WHERE (((t1.c0) BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) AND (t1.c0 COLLATE NOCASE))) ORDER BY (((t1.c0, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c1) NOTNULL), CAST(t1.c1 AS REAL), (((t1.c0))=((t1.c0))), CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)) AND ((rtreenode(t1.c1, t1.c0), ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), json(t1.c0), t1.c1)));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (x'') ORDER BY (((((t1.c0, t1.c1, x'')) NOT BETWEEN (('ꋣ', t1.c1, t1.c1)) AND ((x'', t1.c1, t1.c1)))) BETWEEN (((t1.c1)>>(t1.c0))) AND ((- (t1.c0)))), HEX(t1.c0 COLLATE BINARY);
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((x'')AND(CAST(((t1.c0)>>(0.38878069941990456)) AS TEXT)))) ORDER BY CAST(CAST(t1.c1 AS REAL) AS TEXT) DESC, (- (t1.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (CASE ((t1.c0) ISNULL)  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN (((t1.c1, t1.c1, t1.c0, t1.c1))<((t1.c1, t1.c1, t1.c0, t1.c1))) END) ORDER BY json_remove(t1.c0, (- (t1.c1)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))  NULLS FIRST, NULL  NULLS FIRST, ((((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, 0.8351307430731707)))))>=(('')));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c0) ISNULL)  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN (((t1.c1, t1.c1, t1.c0, t1.c1))<((t1.c1, t1.c1, t1.c0, t1.c1))) END) ORDER BY '1761015341' LIMIT 0X0 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0 IN ()))-(t1.c0))) ORDER BY '1761015341' LIMIT 0x0;
SELECT MAX(t1.c0) FROM t1 WHERE (CASE ((((((((((t1.c0)AND(t1.c1)))OR('-301094617')))OR(t1.c0)))AND(t1.c0)))OR(t1.c1))  WHEN CASE t1.c1  WHEN '_K' THEN t1.c0 WHEN t1.c1 THEN t1.c0 END THEN LIKELIHOOD(DISTINCT 0.841065221760739, t1.c1) END);
SELECT MAX(t1.c0) FROM t1 WHERE (((CASE ((((((((((t1.c0)AND(t1.c1)))OR('-301094617')))OR(t1.c0)))AND(t1.c0)))OR(t1.c1))  WHEN CASE t1.c1  WHEN '_K' THEN t1.c0 WHEN t1.c1 THEN t1.c0 END THEN LIKELIHOOD(DISTINCT 0.841065221760739, t1.c1) END)AND((((((t1.c0) ISNULL), ((t1.c0)IS(t1.c0))))=(((((t1.c0, t1.c1))<=((t1.c1, t1.c1))), t1.c0 COLLATE NOCASE))))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((t1.c1, t1.c1)) BETWEEN ((t1.c0, (+ (t1.c1)))) AND ((LIKELY(DISTINCT t1.c0), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((((t1.c1, t1.c1)) BETWEEN ((t1.c0, (+ (t1.c1)))) AND ((LIKELY(DISTINCT t1.c0), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))))AND(((t1.c0) IS TRUE)))) INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (CASE ((((((t1.c0)OR(t1.c0)))AND(0Xfffffffff1225b39)))OR(t1.c0))  WHEN ((((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))AND(t1.c1)) THEN CAST(t1.c0 AS REAL) WHEN t1.c0 COLLATE BINARY THEN ((t1.c1)%(t1.c0)) WHEN t1.c0 COLLATE BINARY THEN TRIM(t1.c1, t1.c0) ELSE CAST(t1.c1 AS TEXT) END);
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CAST(t1.c0 AS REAL));
SELECT MAX(t1.c1) FROM t1 WHERE (((CAST(t1.c0 AS REAL))AND(((((t1.c0) IS TRUE))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))))) ORDER BY ((((((t1.c0)AND(t1.c1)))AND(((x'')&(t1.c0)))))OR(((t1.c1)==(t1.c0))))  NULLS FIRST LIMIT 0;
SELECT ALL COUNT(*) FROM t1 WHERE ('1098631512');
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((('1098631512')AND((((t1.c1 IN ()))GLOB(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))))) LIMIT 0x1;
SELECT * FROM t1 NOT INDEXED WHERE (((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))|(x'db33')));
SELECT ALL * FROM t1 WHERE (((((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))|(x'db33')))AND(((CAST(t1.c1 AS BLOB))&(((t1.c1)LIKE(t1.c1))))))) ORDER BY INSTR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c0 END, ((t1.c1)GLOB(t1.c1))) ASC  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 NOT INDEXED WHERE (((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))|(x'db33')));
SELECT ALL * FROM t1 WHERE (((((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))|(x'db33')))AND(((CAST(t1.c1 AS BLOB))&(((t1.c1)LIKE(t1.c1))))))) ORDER BY INSTR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c0 END, ((t1.c1)GLOB(t1.c1))) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM t1 WHERE (0.2933275624342395);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (0.2933275624342395) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST(((t1.c1)GLOB(t1.c0)) AS NUMERIC));
SELECT * FROM t1 WHERE ('-1135891348') ORDER BY ((LIKELIHOOD(t1.c0, t1.c1))IS NOT((~ ('1028309368')))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE ('-1135891348') ORDER BY ((t1.c1)<=(((t1.c1)IS(t1.c0)))) DESC, ((((t1.c0) NOTNULL)) NOT NULL) DESC  NULLS LAST;
SELECT * FROM t1 WHERE ('-1135891348') ORDER BY ((LIKELIHOOD(t1.c0, t1.c1))IS NOT((~ ('1028309368')))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(((((t1.c0)AND(t1.c1)))OR(t1.c0)) AS NUMERIC)) ORDER BY ((CAST(t1.c1 AS REAL))+((~ (t1.c0)))) DESC, (((-884667967, ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))!=((CAST(t1.c1 AS NUMERIC), (NOT (t1.c1))))) ASC, (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) IN (t1.c1)) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (CAST(((((t1.c0)AND(t1.c1)))OR(t1.c0)) AS NUMERIC)) ORDER BY (((t1.c1 IN ()))+((((t1.c1))>((t1.c0))))) DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(((t1.c1)>>(t1.c0))))) ORDER BY (((t1.c1 IN ()))+((((t1.c1))>((t1.c0))))) DESC;
SELECT * FROM t1 WHERE (CAST(((((t1.c0)AND(t1.c1)))OR(t1.c0)) AS NUMERIC)) ORDER BY ((CAST(t1.c1 AS REAL))+((~ (t1.c0)))) DESC, (((-884667967, ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))!=((CAST(t1.c1 AS NUMERIC), (NOT (t1.c1))))) ASC, (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) IN (t1.c1)) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (CAST(((((t1.c0)AND(t1.c1)))OR(t1.c0)) AS NUMERIC)) ORDER BY (((t1.c1 IN ()))+((((t1.c1))>((t1.c0))))) DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(((t1.c1)>>(t1.c0))))) ORDER BY (((t1.c1 IN ()))+((((t1.c1))>((t1.c0))))) DESC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c1) NOT NULL) IN ())) ORDER BY (((t1.c1, t1.c1)) BETWEEN ((((t1.c1) IS TRUE), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)) AND (((- (t1.c0)), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))), (+ (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))) ASC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((((t1.c1) NOT NULL) IN ()))AND(((t1.c0) ISNULL)))) ORDER BY (((t1.c1, t1.c1)) BETWEEN ((((t1.c1) IS TRUE), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)) AND (((- (t1.c0)), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))), (+ (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))) ASC INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))+(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY (((t1.c1, t1.c1)) BETWEEN ((((t1.c1) IS TRUE), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)) AND (((- (t1.c0)), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))), (+ (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))) ASC;
SELECT ALL * FROM t1 WHERE ((((('-1049226258')OR(t1.c0))) IS FALSE));
SELECT DISTINCT * FROM t1 WHERE ((((('-1049226258')OR(t1.c0))) IS FALSE)) ORDER BY CAST((((((('-1787681106')AND('')))AND(t1.c0)))OR(t1.c0)) AS NUMERIC) DESC  NULLS LAST, GLOB(((t1.c1) ISNULL), t1.c1 COLLATE BINARY) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS NUMERIC)) ORDER BY CAST((((((('-1787681106')AND('')))AND(t1.c0)))OR(t1.c0)) AS NUMERIC) DESC  NULLS LAST, GLOB(((t1.c1) ISNULL), t1.c1 COLLATE BINARY) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((('-1049226258')OR(t1.c0))) IS FALSE));
SELECT DISTINCT * FROM t1 WHERE ((((('-1049226258')OR(t1.c0))) IS FALSE)) ORDER BY CAST((((((('-1787681106')AND('')))AND(t1.c0)))OR(t1.c0)) AS NUMERIC) DESC  NULLS LAST, GLOB(((t1.c1) ISNULL), t1.c1 COLLATE BINARY) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS NUMERIC)) ORDER BY CAST((((((('-1787681106')AND('')))AND(t1.c0)))OR(t1.c0)) AS NUMERIC) DESC  NULLS LAST, GLOB(((t1.c1) ISNULL), t1.c1 COLLATE BINARY) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)>(t1.c0)))OR(((t1.c1) NOT NULL))))AND(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((t1.c1)IS NOT(t1.c0)))))OR((t1.c1 IN (t1.c0, t1.c0, t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)>(t1.c0)))OR(((t1.c1) NOT NULL))))AND(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((t1.c1)IS NOT(t1.c0)))))OR((t1.c1 IN (t1.c0)))));
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)>(t1.c0)))OR(((t1.c1) NOT NULL))))AND(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((t1.c1)IS NOT(t1.c0)))))OR((t1.c1 IN (t1.c0, t1.c0, t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)>(t1.c0)))OR(((t1.c1) NOT NULL))))AND(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((t1.c1)IS NOT(t1.c0)))))OR((t1.c1 IN (t1.c0)))));
SELECT MAX(t1.c0) FROM t1 WHERE (CAST(t1.c1 AS TEXT) COLLATE NOCASE) ORDER BY ((((((t1.c1)&(t1.c0)))OR(0.9952723310190097 COLLATE RTRIM)))AND(((t1.c0) NOT NULL))), ((((t1.c1)*(t1.c0))) BETWEEN (UPPER(t1.c0)) AND (t1.c1 COLLATE BINARY))  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (CAST(t1.c1 AS TEXT) COLLATE NOCASE) ORDER BY ((((((t1.c1)&(t1.c0)))OR(0.9952723310190097 COLLATE RTRIM)))AND(((t1.c0) NOT NULL))), ((((t1.c1)*(t1.c0))) BETWEEN (UPPER(t1.c0)) AND (t1.c1 COLLATE BINARY))  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((NOT (''))) ORDER BY ((((((t1.c1)&(t1.c0)))OR(0.9952723310190097 COLLATE RTRIM)))AND(((t1.c0) NOT NULL))), ((((t1.c1)*(t1.c0))) BETWEEN (UPPER(t1.c0)) AND (t1.c1 COLLATE BINARY))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (x'28a5') ORDER BY CAST(TRIM(t1.c1) AS NUMERIC) DESC, ((((t1.c1 COLLATE BINARY)AND(TRIM(t1.c1))))AND('Xs&GD7|1'))  NULLS FIRST, CAST(x'' AS NUMERIC) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((x'28a5')AND(((CASE t1.c0  WHEN t1.c0 THEN x'' WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END) NOT NULL)))) ORDER BY t1.c0 ASC LIMIT 0;
SELECT ALL * FROM t1 WHERE (x'28a5') ORDER BY CAST(TRIM(t1.c1) AS NUMERIC) DESC, ((((t1.c1 COLLATE BINARY)AND(TRIM(t1.c1))))AND('Xs&GD7|1'))  NULLS FIRST, CAST(x'' AS NUMERIC) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((x'28a5')AND(((CASE t1.c0  WHEN t1.c0 THEN x'' WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END) NOT NULL)))) ORDER BY t1.c0 ASC LIMIT 0;
SELECT ALL * FROM t1 WHERE (LIKELY(DISTINCT '0.4760103419149396'));
SELECT ALL * FROM t1 WHERE (LIKELY(DISTINCT '0.4760103419149396')) ORDER BY CAST((- ('')) AS NUMERIC) ASC LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ('}') ORDER BY CAST((- ('')) AS NUMERIC) ASC LIMIT 0;
SELECT ALL * FROM t1 WHERE (LIKELY(DISTINCT '0.4760103419149396'));
SELECT ALL * FROM t1 WHERE (LIKELY(DISTINCT '0.4760103419149396')) ORDER BY CAST((- ('')) AS NUMERIC) ASC LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ('}') ORDER BY CAST((- ('')) AS NUMERIC) ASC LIMIT 0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c0)=(t1.c1)))GLOB(t1.c1 COLLATE NOCASE))) ORDER BY HEX(((t1.c1)<>(t1.c1))), t1.c0 ASC  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((t1.c0)==(t1.c1)))GLOB(t1.c1 COLLATE NOCASE)))AND(((((t1.c1) IS FALSE)) NOT BETWEEN (((t1.c0) IS TRUE)) AND (CAST('2054253131' AS REAL)))))) ORDER BY (((((t1.c1) NOTNULL)))<((((t1.c1) ISNULL))))  NULLS FIRST, ((((t1.c1)GLOB(t1.c1))) NOT BETWEEN (((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0))) AND (''))  NULLS LAST INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((t1.c1)OR(t1.c1)))=(((NULL)LIKE(x''))))) ORDER BY (((((t1.c1) NOTNULL)))<((((t1.c1) ISNULL))))  NULLS FIRST, ((((t1.c1)GLOB(t1.c1))) NOT BETWEEN (((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0))) AND (''))  NULLS LAST;
SELECT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (x'c219') AND (t1.c0)) AS BLOB));
SELECT ALL * FROM t1 WHERE (((CAST(((t1.c1) NOT BETWEEN (x'c219') AND (t1.c0)) AS BLOB))AND(CAST((((NULL)) BETWEEN ((t1.c1)) AND ((t1.c0))) AS INTEGER)))) ORDER BY t1.c1  NULLS FIRST, ((((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)AND((t1.c1 IN (t1.c0)))))OR(CAST(t1.c1 AS BLOB)))  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE ((NOT (t1.c1)) COLLATE NOCASE) ORDER BY t1.c1  NULLS FIRST, ((((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)AND((t1.c1 IN (t1.c0)))))OR(CAST(t1.c1 AS BLOB)))  NULLS LAST;
SELECT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (x'c219') AND (t1.c0)) AS BLOB));
SELECT ALL * FROM t1 WHERE (((CAST(((t1.c1) NOT BETWEEN (x'c219') AND (t1.c0)) AS BLOB))AND(CAST((((NULL)) BETWEEN ((t1.c1)) AND ((t1.c0))) AS INTEGER)))) ORDER BY t1.c1  NULLS FIRST, ((((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)AND((t1.c1 IN (t1.c0)))))OR(CAST(t1.c1 AS BLOB)))  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE ((NOT (t1.c1)) COLLATE NOCASE) ORDER BY t1.c1  NULLS FIRST, ((((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)AND((t1.c1 IN (t1.c0)))))OR(CAST(t1.c1 AS BLOB)))  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((HEX(DISTINCT t1.c1))IS NOT(CASE t1.c1  WHEN t1.c1 THEN 0.5573979965086823 ELSE t1.c1 END)), ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN x'44' WHEN t1.c1 THEN t1.c0 ELSE NULL END) IS TRUE) DESC;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY ((HEX(DISTINCT t1.c1))IS NOT(CASE t1.c1  WHEN t1.c1 THEN 0.5573979965086823 ELSE t1.c1 END)), ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN x'44' WHEN t1.c1 THEN t1.c0 ELSE NULL END) IS TRUE) DESC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ ((((t1.c1))>((t1.c0)))))) ORDER BY ((HEX(DISTINCT t1.c1))IS NOT(CASE t1.c1  WHEN t1.c1 THEN 0.5573979965086823 ELSE t1.c1 END)), ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN x'44' WHEN t1.c1 THEN t1.c0 ELSE NULL END) IS TRUE) DESC LIMIT 0x1;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((HEX(DISTINCT t1.c1))IS NOT(CASE t1.c1  WHEN t1.c1 THEN 0.5573979965086823 ELSE t1.c1 END)), ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN x'44' WHEN t1.c1 THEN t1.c0 ELSE NULL END) IS TRUE) DESC;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY ((HEX(DISTINCT t1.c1))IS NOT(CASE t1.c1  WHEN t1.c1 THEN 0.5573979965086823 ELSE t1.c1 END)), ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN x'44' WHEN t1.c1 THEN t1.c0 ELSE NULL END) IS TRUE) DESC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ ((((t1.c1))>((t1.c0)))))) ORDER BY ((HEX(DISTINCT t1.c1))IS NOT(CASE t1.c1  WHEN t1.c1 THEN 0.5573979965086823 ELSE t1.c1 END)), ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN x'44' WHEN t1.c1 THEN t1.c0 ELSE NULL END) IS TRUE) DESC LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (x'');
SELECT ALL * FROM t1 WHERE (x'') LIMIT 4;
SELECT ALL * FROM t1 WHERE (x'');
SELECT ALL * FROM t1 WHERE (x'') LIMIT 4;
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c1 AS TEXT))+(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((CAST(t1.c1 AS TEXT))+(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))) NOT NULL)))) ORDER BY t1.c1  NULLS FIRST, (((((t1.c1, t1.c0, '')) NOT BETWEEN ((t1.c0, NULL, t1.c0)) AND ((t1.c0, t1.c0, x''))))&((t1.c0 IN ())))  NULLS FIRST INTERSECT SELECT COUNT(*) FROM t1 WHERE (((x'90') BETWEEN ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1)))) AND (t1.c1))) ORDER BY t1.c1  NULLS FIRST, (((((t1.c1, t1.c0, '')) NOT BETWEEN ((t1.c0, NULL, t1.c0)) AND ((t1.c0, t1.c0, x''))))&((t1.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((NULL) BETWEEN (t1.c1) AND (0.9726980514044133))) ORDER BY load_extension((((('|')OR(t1.c0)))AND(t1.c0))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((NULL) BETWEEN (t1.c1) AND (0.9726980514044133)))AND((- (CASE t1.c0  WHEN t1.c0 THEN 0X4a36736 END))))) ORDER BY (+ (CAST(t1.c0 AS TEXT))) DESC  NULLS FIRST, t1.c1 ASC LIMIT 0x1 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c0) IS FALSE))AND(t1.c1))) ORDER BY (+ (CAST(t1.c0 AS TEXT))) DESC  NULLS FIRST, t1.c1 ASC LIMIT 1;
SELECT ALL * FROM t1 WHERE (((NULL) BETWEEN (t1.c1) AND (0.9726980514044133))) ORDER BY load_extension((((('|')OR(t1.c0)))AND(t1.c0))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((NULL) BETWEEN (t1.c1) AND (0.9726980514044133)))AND((- (CASE t1.c0  WHEN t1.c0 THEN 0X4a36736 END))))) ORDER BY (+ (CAST(t1.c0 AS TEXT))) DESC  NULLS FIRST, t1.c1 ASC LIMIT 0x1 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c0) IS FALSE))AND(t1.c1))) ORDER BY (+ (CAST(t1.c0 AS TEXT))) DESC  NULLS FIRST, t1.c1 ASC LIMIT 1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)AND(((((((((0.2960668347963483)AND(t1.c0)))OR(0Xffffffffa96bc24b)))AND(t1.c0)))AND(t1.c0)))))AND(0X699dd1e7)))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY (- (t1.c1)) COLLATE BINARY  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)AND(((((((((0.2960668347963483)AND(t1.c0)))OR(0Xffffffffa96bc24b)))AND(t1.c0)))AND(t1.c0)))))AND(1771950567)))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))))AND(CAST(((t1.c1)OR(t1.c1)) AS TEXT)))) ORDER BY (- (t1.c1)) COLLATE BINARY  NULLS FIRST LIMIT 0X5 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY (- (t1.c1)) COLLATE BINARY  NULLS FIRST LIMIT 5;
SELECT * FROM t1 WHERE (((t1.c1)/(t1.c1)) COLLATE NOCASE) ORDER BY COALESCE(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), CASE WHEN t1.c0 THEN 0.6517050205833143 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN 1980002771 THEN NULL END, ((0Xffffffffaf0a6fc4)/(t1.c0))) ASC  NULLS FIRST, (t1.c1 IN (t1.c1)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)/(t1.c1)) COLLATE NOCASE) ORDER BY COALESCE(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), CASE WHEN t1.c0 THEN 0.6517050205833143 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN 0x760471d3 THEN NULL END, ((-1358270524)/(t1.c0))) ASC  NULLS FIRST, (t1.c1 IN (t1.c1)) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (((t1.c1)/(t1.c1)) COLLATE NOCASE) ORDER BY COALESCE(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), CASE WHEN t1.c0 THEN 0.6517050205833143 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN 1980002771 THEN NULL END, ((0Xffffffffaf0a6fc4)/(t1.c0))) ASC  NULLS FIRST, (t1.c1 IN (t1.c1)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)/(t1.c1)) COLLATE NOCASE) ORDER BY COALESCE(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), CASE WHEN t1.c0 THEN 0.6517050205833143 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN 0x760471d3 THEN NULL END, ((-1358270524)/(t1.c0))) ASC  NULLS FIRST, (t1.c1 IN (t1.c1)) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (t1.c0);
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (t1.c0) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CASE WHEN rtreenode(t1.c0, t1.c0) THEN CHAR(t1.c1) WHEN t1.c0 COLLATE NOCASE THEN CAST(t1.c1 AS INTEGER) ELSE ((((t1.c0)OR(t1.c1)))AND(t1.c1)) END);
SELECT MAX(t1.c0) FROM t1 WHERE (NULLIF(t1.c0, ((t1.c1) IS TRUE)));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((NULLIF(t1.c0, ((t1.c1) IS TRUE)))AND((((NOT (t1.c1))) BETWEEN ((x'566e50' IN ())) AND (((t1.c1)<=(t1.c0))))))) INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (t1.c1);
SELECT * FROM t1 WHERE (((((((t1.c0) NOT NULL))OR((t1.c0 IN (t1.c0)))))AND(UPPER(DISTINCT t1.c1)))) ORDER BY ((CAST(t1.c1 AS TEXT))>(((t1.c0)<(t1.c0)))), (NOT (t1.c1 COLLATE RTRIM)) ASC, ((((((((t1.c0)AND(t1.c1)))AND(0.949778294772781)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((((t1.c0)OR(t1.c0)))OR(t1.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) NOT NULL))OR((t1.c0 IN (t1.c0)))))AND(UPPER(DISTINCT t1.c1)))) ORDER BY ((CAST(t1.c1 AS TEXT))>(((t1.c0)<(t1.c0)))), (NOT (t1.c1 COLLATE RTRIM)) ASC, ((((((((t1.c0)AND(t1.c1)))AND(0.949778294772781)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((((t1.c0)OR(t1.c0)))OR(t1.c1)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((t1.c0) NOT NULL))OR((t1.c0 IN (t1.c0)))))AND(UPPER(DISTINCT t1.c1)))) ORDER BY ((CAST(t1.c1 AS TEXT))>(((t1.c0)<(t1.c0)))), (NOT (t1.c1 COLLATE RTRIM)) ASC, ((((((((t1.c0)AND(t1.c1)))AND(0.949778294772781)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((((t1.c0)OR(t1.c0)))OR(t1.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) NOT NULL))OR((t1.c0 IN (t1.c0)))))AND(UPPER(DISTINCT t1.c1)))) ORDER BY ((CAST(t1.c1 AS TEXT))>(((t1.c0)<(t1.c0)))), (NOT (t1.c1 COLLATE RTRIM)) ASC, ((((((((t1.c0)AND(t1.c1)))AND(0.949778294772781)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((((t1.c0)OR(t1.c0)))OR(t1.c1)))) ASC  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1 COLLATE NOCASE, ((0.05376272882483246)||(t1.c1)))) AND ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), t1.c1))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1 COLLATE NOCASE, ((0.05376272882483246)||(t1.c1)))) AND ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), t1.c1))))AND(t1.c1))) INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE (CAST(((((t1.c0)OR(t1.c0)))OR(t1.c1)) AS TEXT)) ORDER BY ((t1.c1 COLLATE BINARY)IS NOT((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((0.8294529633292582))))) ASC, (((((t1.c0, t1.c0))<=((t1.c0, t1.c0)))) BETWEEN (t1.c0 COLLATE BINARY) AND ((t1.c0 IN (t1.c0, t1.c1, t1.c0, t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((CAST(((((t1.c0)OR(t1.c0)))OR(t1.c1)) AS TEXT))AND(((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(x'8fbf0573')))OR(t1.c0))) NOT BETWEEN (CAST(t1.c1 AS TEXT)) AND ((NOT (t1.c0))))))) ORDER BY ((t1.c1 COLLATE BINARY)IS NOT((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((0.8294529633292582))))) ASC, (((((t1.c0, t1.c0))<=((t1.c0, t1.c0)))) BETWEEN (t1.c0 COLLATE BINARY) AND ((t1.c0 IN (t1.c0, t1.c1, t1.c0, t1.c1))));
SELECT ALL * FROM t1 WHERE (CAST(((((t1.c0)OR(t1.c0)))OR(t1.c1)) AS TEXT)) ORDER BY ((t1.c1 COLLATE BINARY)IS NOT((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((0.8294529633292582))))) ASC, (((((t1.c0, t1.c0))<=((t1.c0, t1.c0)))) BETWEEN (t1.c0 COLLATE BINARY) AND ((t1.c0 IN (t1.c0, t1.c1, t1.c0, t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((CAST(((((t1.c0)OR(t1.c0)))OR(t1.c1)) AS TEXT))AND(((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(x'8fbf0573')))OR(t1.c0))) NOT BETWEEN (CAST(t1.c1 AS TEXT)) AND ((NOT (t1.c0))))))) ORDER BY ((t1.c1 COLLATE BINARY)IS NOT((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((0.8294529633292582))))) ASC, (((((t1.c0, t1.c0))<=((t1.c0, t1.c0)))) BETWEEN (t1.c0 COLLATE BINARY) AND ((t1.c0 IN (t1.c0, t1.c1, t1.c0, t1.c1))));
SELECT ALL * FROM t1 WHERE ((((((((((((((NOT (t1.c1)))AND(CAST(t1.c1 AS BLOB))))OR((- (t1.c0)))))OR(((t1.c1)==(x'')))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))OR('536044823')))AND(((t1.c0) BETWEEN (t1.c1) AND (x'')))));
SELECT DISTINCT * FROM t1 WHERE ((((((((((((((((NOT (t1.c1)))AND(CAST(t1.c1 AS BLOB))))OR((- (t1.c0)))))OR(((t1.c1)=(x'')))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))OR('536044823')))AND(((t1.c0) BETWEEN (t1.c1) AND (x'')))))AND(COALESCE(((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)), (((t1.c1)) BETWEEN (('s쉋')) AND ((t1.c1))))))) ORDER BY CASE WHEN (t1.c0 IN (t1.c0)) THEN CASE t1.c0  WHEN x'60' THEN t1.c0 END ELSE LIKELY(t1.c1) END;
SELECT ALL * FROM t1 WHERE ((((((((((((((NOT (t1.c1)))AND(CAST(t1.c1 AS BLOB))))OR((- (t1.c0)))))OR(((t1.c1)==(x'')))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))OR('536044823')))AND(((t1.c0) BETWEEN (t1.c1) AND (x'')))));
SELECT DISTINCT * FROM t1 WHERE ((((((((((((((((NOT (t1.c1)))AND(CAST(t1.c1 AS BLOB))))OR((- (t1.c0)))))OR(((t1.c1)=(x'')))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))OR('536044823')))AND(((t1.c0) BETWEEN (t1.c1) AND (x'')))))AND(COALESCE(((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)), (((t1.c1)) BETWEEN (('s쉋')) AND ((t1.c1))))))) ORDER BY CASE WHEN (t1.c0 IN (t1.c0)) THEN CASE t1.c0  WHEN x'60' THEN t1.c0 END ELSE LIKELY(t1.c1) END;
SELECT ALL * FROM t1 WHERE (7.5172127E8) ORDER BY (((NOT (t1.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (7.5172127E8) ORDER BY (((NOT (t1.c0))) IS FALSE) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c1, t1.c1))==((t1.c0, t1.c0)))))) ORDER BY (((NOT (t1.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (7.5172127E8) ORDER BY (((NOT (t1.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (7.5172127E8) ORDER BY (((NOT (t1.c0))) IS FALSE) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c1, t1.c1))==((t1.c0, t1.c0)))))) ORDER BY (((NOT (t1.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c0)) BETWEEN ((((t1.c0)==(t1.c1)), ((t1.c1)+(t1.c0)))) AND ((x'f9', t1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c0)) BETWEEN ((((t1.c0)==(t1.c1)), ((t1.c1)+(t1.c0)))) AND ((x'f9', t1.c0)))) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c1) IS TRUE)))<(((~ (t1.c1))))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (t1.c1) ORDER BY (((t1.c0 IN ())) NOT BETWEEN (t1.c0) AND (LIKELIHOOD('2032568631', t1.c1))) DESC;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (t1.c1) ORDER BY (((t1.c0 IN ())) NOT BETWEEN (t1.c0) AND (LIKELIHOOD('2032568631', t1.c1))) DESC;
SELECT ALL * FROM t1 WHERE ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 END IN ()));
SELECT * FROM t1 WHERE ((((CASE t1.c0  WHEN t1.c0 THEN t1.c1 END IN ()))AND(LIKELY(t1.c1 COLLATE BINARY))));
SELECT ALL * FROM t1 WHERE ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 END IN ()));
SELECT * FROM t1 WHERE ((((CASE t1.c0  WHEN t1.c0 THEN t1.c1 END IN ()))AND(LIKELY(t1.c1 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM t1 WHERE (SQLITE_COMPILEOPTION_USED((t1.c0 IN ())));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (SQLITE_COMPILEOPTION_USED((t1.c0 IN ()))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c1))))>(CASE WHEN t1.c1 THEN '' ELSE t1.c1 END))) ORDER BY SUBSTR(CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, TRIM(t1.c0, t1.c0)) ASC  NULLS LAST, ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))AND(t1.c0 COLLATE NOCASE)))OR(t1.c1));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c1))))>(CASE WHEN t1.c1 THEN '' ELSE t1.c1 END))) ORDER BY CAST((t1.c0 IN (t1.c0)) AS REAL) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c1))))>(CASE WHEN t1.c1 THEN '' ELSE t1.c1 END))) ORDER BY SUBSTR(CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, TRIM(t1.c0, t1.c0)) ASC  NULLS LAST, ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))AND(t1.c0 COLLATE NOCASE)))OR(t1.c1));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c1))))>(CASE WHEN t1.c1 THEN '' ELSE t1.c1 END))) ORDER BY CAST((t1.c0 IN (t1.c0)) AS REAL) LIMIT 0X1;
SELECT MIN(t1.c0) FROM t1 WHERE (CASE WHEN ((t1.c0) NOT NULL) THEN CASE WHEN t1.c1 THEN t1.c0 END WHEN (~ (t1.c0)) THEN CAST(t1.c0 AS NUMERIC) ELSE ((t1.c0) IS TRUE) END) ORDER BY (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN '8춃' WHEN t1.c1 THEN t1.c0 ELSE NULL END IN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS FIRST, (NOT ((t1.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN CAST(t1.c1 AS BLOB) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END ELSE t1.c0 COLLATE RTRIM END DESC;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CASE WHEN ((t1.c0) NOT NULL) THEN CASE WHEN t1.c1 THEN t1.c0 END WHEN (~ (t1.c0)) THEN CAST(t1.c0 AS NUMERIC) ELSE ((t1.c0) IS TRUE) END) ORDER BY (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN '8춃' WHEN t1.c1 THEN t1.c0 ELSE NULL END IN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS FIRST, (NOT ((t1.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN CAST(t1.c1 AS BLOB) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END ELSE t1.c0 COLLATE RTRIM END DESC LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((NOT (CASE WHEN '1598164099' THEN t1.c0 END))) ORDER BY (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN '8춃' WHEN t1.c1 THEN t1.c0 ELSE NULL END IN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS FIRST, (NOT ((t1.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN CAST(t1.c1 AS BLOB) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END ELSE t1.c0 COLLATE RTRIM END DESC LIMIT 1;
SELECT * FROM t1 WHERE ('-1304340266') ORDER BY LIKELIHOOD(NULL COLLATE NOCASE, (~ (t1.c0)));
SELECT * FROM t1 WHERE ('-1304340266') ORDER BY LIKELIHOOD(NULL COLLATE NOCASE, (~ (t1.c0))) INTERSECT SELECT ALL * FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN 0.45631409186943517 WHEN t1.c1 THEN 0.04304179934609398 WHEN t1.c1 THEN t1.c1 END AS NUMERIC)) ORDER BY LIKELIHOOD(NULL COLLATE NOCASE, (~ (t1.c0)));
SELECT * FROM t1 WHERE ('-1304340266') ORDER BY LIKELIHOOD(NULL COLLATE NOCASE, (~ (t1.c0)));
SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) ISNULL));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) ISNULL))AND((((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND (('818088735', t1.c0)))) ISNULL)))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (NULLIF(DISTINCT ((t1.c0)IS NOT(-278721965)), NULL)) LIMIT 0X0;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY t1.c0  NULLS LAST;
SELECT * FROM t1 WHERE (((t1.c1)AND(t1.c1))) ORDER BY (~ (x'14')) ASC, NULL  NULLS LAST LIMIT 0x1;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY t1.c0  NULLS LAST;
SELECT * FROM t1 WHERE (((t1.c1)AND(t1.c1))) ORDER BY (~ (x'14')) ASC, NULL  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (((('263461917')<(t1.c1)) IN ()));
SELECT DISTINCT * FROM t1 WHERE (((((('263461917')<(t1.c1)) IN ()))AND(((((t1.c1) ISNULL)) ISNULL))));
SELECT ALL * FROM t1 WHERE (((('263461917')<(t1.c1)) IN ()));
SELECT DISTINCT * FROM t1 WHERE (((((('263461917')<(t1.c1)) IN ()))AND(((((t1.c1) ISNULL)) ISNULL))));
SELECT MAX(t1.c0) FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END AS INTEGER));
SELECT DISTINCT MAX(t1.c0) FROM t1 NOT INDEXED WHERE (((CAST(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END AS INTEGER))AND(((((t1.c0)&(t1.c0))) NOT NULL))));
SELECT * FROM t1 WHERE (((t1.c1)+(t1.c0)) COLLATE NOCASE) ORDER BY (((~ (t1.c1)))||((((t1.c0))<((t1.c0)))))  NULLS FIRST, ((CASE WHEN x'' THEN t1.c0 WHEN t1.c0 THEN 0.31470952345368075 WHEN t1.c1 THEN NULL WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)OR((+ (t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)+(t1.c0)) COLLATE NOCASE)AND(((CAST(t1.c1 AS INTEGER)) ISNULL)))) ORDER BY ((t1.c0) BETWEEN (-1558938589) AND (t1.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((CAST(t1.c1 AS NUMERIC)) BETWEEN (((0X5e609487)||(t1.c0))) AND (((t1.c1)>>(t1.c0)))) DESC, ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) IS TRUE) DESC  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (((t1.c1)+(t1.c0)) COLLATE NOCASE) ORDER BY (((~ (t1.c1)))||((((t1.c0))<((t1.c0)))))  NULLS FIRST, ((CASE WHEN x'' THEN t1.c0 WHEN t1.c0 THEN 0.31470952345368075 WHEN t1.c1 THEN NULL WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)OR((+ (t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)+(t1.c0)) COLLATE NOCASE)AND(((CAST(t1.c1 AS INTEGER)) ISNULL)))) ORDER BY ((t1.c0) BETWEEN (-1558938589) AND (t1.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((CAST(t1.c1 AS NUMERIC)) BETWEEN (((0X5e609487)||(t1.c0))) AND (((t1.c1)>>(t1.c0)))) DESC, ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) IS TRUE) DESC  NULLS LAST LIMIT 0;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c1)AND(LIKELIHOOD(DISTINCT (+ (t1.c0)), ((t1.c1)-(t1.c1)))))) ORDER BY (t1.c1 COLLATE BINARY IN ())  NULLS LAST LIMIT 0X2 INTERSECT SELECT COUNT(*) FROM t1 WHERE (((((('-1656542989') ISNULL)))>=((2032568631)))) ORDER BY (t1.c1 COLLATE BINARY IN ())  NULLS LAST LIMIT 0X2;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))/(SQLITE_SOURCE_ID()))) ORDER BY t1.c0 DESC  NULLS LAST, TRIM(DISTINCT (((t1.c1))<((t1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))/(SQLITE_SOURCE_ID()))) ORDER BY IFNULL(DISTINCT NULL, ((t1.c0) NOT NULL)) DESC, ((((t1.c0))>((x'adbd'))) IN ())  NULLS LAST INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((NOT ((t1.c1 IN (t1.c0))))) ORDER BY IFNULL(DISTINCT NULL, ((t1.c0) NOT NULL)) DESC, ((((t1.c0))>((x'adbd'))) IN ())  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c0)>>(t1.c1))) IS FALSE)) ORDER BY (~ (t1.c0));
SELECT * FROM t1 WHERE (((((t1.c0)>>(t1.c1))) IS FALSE)) ORDER BY (~ (t1.c0)) INTERSECT SELECT * FROM t1 WHERE (((((t1.c1)|(-1.967749805E9))) NOT BETWEEN (TRIM(t1.c1, t1.c1)) AND (((t1.c0)+(t1.c1))))) ORDER BY (~ (t1.c0));
SELECT ALL * FROM t1 WHERE (((((t1.c0)>>(t1.c1))) IS FALSE)) ORDER BY (~ (t1.c0));
SELECT * FROM t1 WHERE (((((t1.c0)>>(t1.c1))) IS FALSE)) ORDER BY (~ (t1.c0)) INTERSECT SELECT * FROM t1 WHERE (((((t1.c1)|(-1.967749805E9))) NOT BETWEEN (TRIM(t1.c1, t1.c1)) AND (((t1.c0)+(t1.c1))))) ORDER BY (~ (t1.c0));
SELECT ALL * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c1)>>(t1.c0)))) AND ((((t1.c1) ISNULL))))) ORDER BY ((((((t1.c1)OR(t1.c1)))OR(t1.c0))) NOTNULL)  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)) NOT BETWEEN ((((t1.c1)>>(t1.c0)))) AND ((((t1.c1) ISNULL)))))AND((((+ (NULL))) IS FALSE)))) ORDER BY t1.c0 ASC;
SELECT ALL * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c1)>>(t1.c0)))) AND ((((t1.c1) ISNULL))))) ORDER BY ((((((t1.c1)OR(t1.c1)))OR(t1.c0))) NOTNULL)  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)) NOT BETWEEN ((((t1.c1)>>(t1.c0)))) AND ((((t1.c1) ISNULL)))))AND((((+ (NULL))) IS FALSE)))) ORDER BY t1.c0 ASC;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT * FROM t1 WHERE (t1.c1) LIMIT 0x2 INTERSECT SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS REAL)) LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT * FROM t1 WHERE (t1.c1) LIMIT 0x2 INTERSECT SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS REAL)) LIMIT 0X2;
SELECT MIN(t1.c0) FROM t1 WHERE (((CAST(0.4956776486759088 AS INTEGER))%(LIKELY(DISTINCT t1.c0)))) ORDER BY CASE 1273030945  WHEN ((t1.c1) NOTNULL) THEN (t1.c0 IN ()) ELSE ((t1.c1) IS FALSE) END DESC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((CAST(0.4956776486759088 AS INTEGER))%(LIKELY(DISTINCT t1.c0)))) ORDER BY CASE 0x4be0e921  WHEN ((t1.c1) NOTNULL) THEN (t1.c0 IN ()) ELSE ((t1.c1) IS FALSE) END DESC;
SELECT MIN(t1.c0) FROM t1 WHERE (CAST(t1.c1 AS REAL)) ORDER BY (((t1.c0, t1.c0))>((t1.c0, '-746550426'))) COLLATE NOCASE DESC, t1.c1 ASC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CAST(t1.c1 AS REAL)) ORDER BY '41683678'  NULLS FIRST, ((HEX(x'')) NOT NULL) DESC LIMIT 1;
SELECT ALL * FROM t1 WHERE (ABS(DISTINCT CAST(x'65' AS BLOB))) ORDER BY (- (((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))OR(t1.c1))))  NULLS FIRST, ((CASE WHEN t1.c1 THEN t1.c1 END) NOTNULL) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (ABS(DISTINCT CAST(x'65' AS BLOB))) ORDER BY (((t1.c0)) BETWEEN ((x'')) AND (((((t1.c0))<>((t1.c1)))))) ASC  NULLS FIRST, (('417439509')>=(TRIM(DISTINCT t1.c1, t1.c0))) DESC, ((NULLIF(DISTINCT NULL, t1.c1))%(NULL COLLATE RTRIM)) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (ABS(DISTINCT CAST(x'65' AS BLOB))) ORDER BY (- (((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))OR(t1.c1))))  NULLS FIRST, ((CASE WHEN t1.c1 THEN t1.c1 END) NOTNULL) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (ABS(DISTINCT CAST(x'65' AS BLOB))) ORDER BY (((t1.c0)) BETWEEN ((x'')) AND (((((t1.c0))<>((t1.c1)))))) ASC  NULLS FIRST, (('417439509')>=(TRIM(DISTINCT t1.c1, t1.c0))) DESC, ((NULLIF(DISTINCT NULL, t1.c1))%(NULL COLLATE RTRIM)) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (UPPER(CAST(t1.c0 AS BLOB))) ORDER BY (((t1.c1)) BETWEEN ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)) AND ((t1.c1)))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((UPPER(CAST(t1.c0 AS BLOB)))AND(((((NULL) IS TRUE)) BETWEEN ((t1.c0 IN (t1.c0))) AND (CASE WHEN t1.c1 THEN t1.c1 WHEN '-1624170603' THEN 0Xffffffffd781bdcf ELSE t1.c0 END))))) ORDER BY t1.c1, ((NULL) NOT NULL)  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (('1956082742' IN (NULL))) ORDER BY t1.c1, ((NULL) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (UPPER(CAST(t1.c0 AS BLOB))) ORDER BY (((t1.c1)) BETWEEN ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)) AND ((t1.c1)))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((UPPER(CAST(t1.c0 AS BLOB)))AND(((((NULL) IS TRUE)) BETWEEN ((t1.c0 IN (t1.c0))) AND (CASE WHEN t1.c1 THEN t1.c1 WHEN '-1624170603' THEN 0Xffffffffd781bdcf ELSE t1.c0 END))))) ORDER BY t1.c1, ((NULL) NOT NULL)  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (('1956082742' IN (NULL))) ORDER BY t1.c1, ((NULL) NOT NULL)  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c1)>=(t1.c0)) IN (t1.c0)));
SELECT * FROM t1 WHERE ((((t1.c1)>=(t1.c0)) IN (t1.c0))) ORDER BY (((x'77', t1.c1))!=((t1.c0, t1.c1))) COLLATE BINARY, NULL  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c1)>=(t1.c0)) IN (t1.c0)));
SELECT * FROM t1 WHERE ((((t1.c1)>=(t1.c0)) IN (t1.c0))) ORDER BY (((x'77', t1.c1))!=((t1.c0, t1.c1))) COLLATE BINARY, NULL  NULLS FIRST;
SELECT * FROM t1 WHERE (NULL) ORDER BY (+ (t1.c1)) COLLATE BINARY ASC;
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND((((((t1.c0)AND(t1.c1)))AND(t1.c1)) IN ((((t1.c0, t1.c0))=((t1.c0, t1.c0)))))))) ORDER BY (+ (t1.c1)) COLLATE BINARY ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)<=(t1.c0)))OR(TYPEOF(DISTINCT t1.c0))))OR(x'2228')))AND(t1.c0 COLLATE BINARY))) ORDER BY (+ (t1.c1)) COLLATE BINARY ASC;
SELECT * FROM t1 WHERE (NULL) ORDER BY (+ (t1.c1)) COLLATE BINARY ASC;
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND((((((t1.c0)AND(t1.c1)))AND(t1.c1)) IN ((((t1.c0, t1.c0))=((t1.c0, t1.c0)))))))) ORDER BY (+ (t1.c1)) COLLATE BINARY ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)<=(t1.c0)))OR(TYPEOF(DISTINCT t1.c0))))OR(x'2228')))AND(t1.c0 COLLATE BINARY))) ORDER BY (+ (t1.c1)) COLLATE BINARY ASC;
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (t1.c0) ORDER BY ((t1.c1) ISNULL) COLLATE NOCASE, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) NOTNULL) DESC, ((((((((((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR((~ (t1.c1)))))AND(((t1.c1)%(t1.c1)))))AND(CAST(t1.c0 AS INTEGER))))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)) ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((t1.c1) ISNULL) COLLATE NOCASE, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) NOTNULL) DESC, ((((((((((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR((~ (t1.c1)))))AND(((t1.c1)%(t1.c1)))))AND(CAST(t1.c0 AS INTEGER))))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)) ASC;
SELECT MIN(t1.c1) FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN x'' THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END) NOT NULL));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN x'' THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END) NOT NULL)) LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((('VSk', t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c0, t1.c1)))) NOT BETWEEN ('440482288') AND ((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c1)))))) LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c0))) ISNULL)) ORDER BY t1.c1;
SELECT * FROM t1 WHERE ((((((NOT (t1.c0))) ISNULL))AND((~ (t1.c0 COLLATE RTRIM))))) ORDER BY (((((t1.c0) IS FALSE), t1.c1, t1.c0))>((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(958296383)))AND(0.3226860520982595)), (NOT (t1.c1)), ((t1.c1) ISNULL)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c0))) ISNULL)) ORDER BY t1.c1;
SELECT * FROM t1 WHERE ((((((NOT (t1.c0))) ISNULL))AND((~ (t1.c0 COLLATE RTRIM))))) ORDER BY (((((t1.c0) IS FALSE), t1.c1, t1.c0))>((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(958296383)))AND(0.3226860520982595)), (NOT (t1.c1)), ((t1.c1) ISNULL)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((~ (t1.c0)))GLOB(((t1.c0)*(t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((~ (t1.c0)))GLOB(((t1.c0)*(t1.c0)))))AND(((((((t1.c0)OR('0.04493669771343678')))AND(t1.c1))) IS TRUE)))) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE ((((t1.c1, x'' COLLATE NOCASE, CAST(t1.c0 AS BLOB), 0Xffffffffa8975829))=(((NOT (t1.c0)), CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))) ORDER BY LIKE(t1.c1, CAST(x'0858' AS NUMERIC)) ASC;
SELECT * FROM t1 WHERE ((((((t1.c1, x'' COLLATE NOCASE, CAST(t1.c0 AS BLOB), -1466476503))==(((NOT (t1.c0)), CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0))))))AND(CASE WHEN ((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR('릡/bY%﷔')) THEN ((t1.c0) NOTNULL) WHEN (((t1.c1))<((t1.c1))) THEN NULL END))) ORDER BY LIKE(t1.c1, CAST(x'0858' AS NUMERIC)) ASC INTERSECT SELECT ALL * FROM t1 WHERE (((((((((((x'627974')AND(t1.c0)))AND(1624911110)))AND(t1.c1)))AND(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(((t1.c1)!=(t1.c0))))) ORDER BY LIKE(t1.c1, CAST(x'0858' AS NUMERIC)) ASC;
SELECT ALL * FROM t1 WHERE ((((t1.c1, x'' COLLATE NOCASE, CAST(t1.c0 AS BLOB), 0Xffffffffa8975829))=(((NOT (t1.c0)), CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))) ORDER BY LIKE(t1.c1, CAST(x'0858' AS NUMERIC)) ASC;
SELECT * FROM t1 WHERE ((((((t1.c1, x'' COLLATE NOCASE, CAST(t1.c0 AS BLOB), -1466476503))==(((NOT (t1.c0)), CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0))))))AND(CASE WHEN ((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR('릡/bY%﷔')) THEN ((t1.c0) NOTNULL) WHEN (((t1.c1))<((t1.c1))) THEN NULL END))) ORDER BY LIKE(t1.c1, CAST(x'0858' AS NUMERIC)) ASC INTERSECT SELECT ALL * FROM t1 WHERE (((((((((((x'627974')AND(t1.c0)))AND(1624911110)))AND(t1.c1)))AND(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(((t1.c1)!=(t1.c0))))) ORDER BY LIKE(t1.c1, CAST(x'0858' AS NUMERIC)) ASC;
SELECT * FROM t1 WHERE ((((t1.c1 IN (t1.c1))) NOT BETWEEN (SQLITE_VERSION()) AND (((((t1.c0)OR(t1.c0)))AND(t1.c1))))) ORDER BY ((((LIKE(t1.c1, t1.c0))AND(CASE WHEN t1.c0 THEN t1.c0 END)))OR((((t1.c0, t1.c0, t1.c1))<((t1.c0, t1.c0, t1.c1))))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((t1.c1 IN (t1.c1))) NOT BETWEEN (SQLITE_VERSION()) AND (((((t1.c0)OR(t1.c0)))AND(t1.c1)))))AND(((((t1.c0)OR(t1.c1)))AND(t1.c0)) COLLATE RTRIM))) ORDER BY ((((LIKE(t1.c1, t1.c0))AND(CASE WHEN t1.c0 THEN t1.c0 END)))OR((((t1.c0, t1.c0, t1.c1))<((t1.c0, t1.c0, t1.c1))))) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE ((((t1.c1 IN (t1.c1))) NOT BETWEEN (SQLITE_VERSION()) AND (((((t1.c0)OR(t1.c0)))AND(t1.c1))))) ORDER BY ((((LIKE(t1.c1, t1.c0))AND(CASE WHEN t1.c0 THEN t1.c0 END)))OR((((t1.c0, t1.c0, t1.c1))<((t1.c0, t1.c0, t1.c1))))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((t1.c1 IN (t1.c1))) NOT BETWEEN (SQLITE_VERSION()) AND (((((t1.c0)OR(t1.c0)))AND(t1.c1)))))AND(((((t1.c0)OR(t1.c1)))AND(t1.c0)) COLLATE RTRIM))) ORDER BY ((((LIKE(t1.c1, t1.c0))AND(CASE WHEN t1.c0 THEN t1.c0 END)))OR((((t1.c0, t1.c0, t1.c1))<((t1.c0, t1.c0, t1.c1))))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((((t1.c1)>(t1.c0)))>=(((t1.c1)=(t1.c1))))) ORDER BY (((((((('198704948')AND(((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))))AND(x'')))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))OR(((t1.c1)&(t1.c0)))) ASC, LIKELIHOOD(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), t1.c0 COLLATE NOCASE);
SELECT ALL * FROM t1 WHERE (((((t1.c1)>(t1.c0)))>=(((t1.c1)=(t1.c1))))) ORDER BY (((t1.c0 IN (t1.c1, t1.c1))) NOT BETWEEN ((((' ~', t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, '_N')) AND ((t1.c0, t1.c0, t1.c0)))) AND (((((((t1.c0)AND('nz')))OR(t1.c1)))AND(0xfffffffffd6db0fd)))), CAST(CAST(t1.c0 AS BLOB) AS INTEGER) DESC  NULLS LAST, (((t1.c0 IN (t1.c0)))<>(((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(NULL)))OR(t1.c1))))  NULLS LAST LIMIT 0X2 INTERSECT SELECT ALL * FROM t1 WHERE ((('H')=(0.6696763930650709))) ORDER BY (((t1.c0 IN (t1.c1, t1.c1))) NOT BETWEEN ((((' ~', t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, '_N')) AND ((t1.c0, t1.c0, t1.c0)))) AND (((((((t1.c0)AND('nz')))OR(t1.c1)))AND(-43142915)))), CAST(CAST(t1.c0 AS BLOB) AS INTEGER) DESC  NULLS LAST, (((t1.c0 IN (t1.c0)))<>(((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(NULL)))OR(t1.c1))))  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (((((t1.c1)>(t1.c0)))>=(((t1.c1)=(t1.c1))))) ORDER BY (((((((('198704948')AND(((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))))AND(x'')))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))OR(((t1.c1)&(t1.c0)))) ASC, LIKELIHOOD(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), t1.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM t1 WHERE (((CASE WHEN 0.09666087167780257 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END) NOT BETWEEN (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END))) ORDER BY (t1.c1 IN ()) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN 0.09666087167780257 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END) NOT BETWEEN (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END))) ORDER BY (t1.c1 IN ()) DESC LIMIT 1;
SELECT ALL * FROM t1 WHERE (('递L' IN (x'df28')));
SELECT * FROM t1 WHERE (((('递L' IN (x'df28')))AND(CAST((t1.c1 IN ()) AS BLOB)))) ORDER BY (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END IN (((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)), LIKELIHOOD(t1.c0, NULL))) DESC  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) IS FALSE)) ORDER BY (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END IN (((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)), LIKELIHOOD(t1.c0, NULL))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (('递L' IN (x'df28')));
SELECT * FROM t1 WHERE (((('递L' IN (x'df28')))AND(CAST((t1.c1 IN ()) AS BLOB)))) ORDER BY (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END IN (((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)), LIKELIHOOD(t1.c0, NULL))) DESC  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) IS FALSE)) ORDER BY (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END IN (((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)), LIKELIHOOD(t1.c0, NULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((('')-(t1.c0))) IS FALSE)) ORDER BY (((t1.c1 IN (t1.c1))) NOT BETWEEN (((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0))) AND (((((((((t1.c0)OR(t1.c0)))OR('0.06389991955429708')))OR(t1.c0)))AND(t1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((('')-(t1.c0))) IS FALSE)) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))==(CAST(t1.c1 AS TEXT))) DESC  NULLS LAST, t1.c0 DESC  NULLS FIRST, CAST(((t1.c0)GLOB(t1.c0)) AS TEXT) DESC  NULLS LAST LIMIT 0;
SELECT MIN(t1.c1) FROM t1 WHERE ((((((t1.c1)-(t1.c1))))<=((((t1.c1) ISNULL))))) ORDER BY ((CAST(t1.c1 AS TEXT))IS NOT(((((t1.c0)AND(t1.c0)))AND(t1.c0)))) ASC  NULLS LAST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((((((t1.c1)-(t1.c1))))<((((t1.c1) ISNULL)))))AND(LIKE(x'd4', t1.c0, '-') COLLATE RTRIM))) ORDER BY CAST(CAST(t1.c0 AS REAL) AS NUMERIC)  NULLS FIRST, json_remove(((t1.c1)<=(t1.c1)), (t1.c1 IN ()), (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((x'fd430c')))), (+ (SQLITE_VERSION())), CASE WHEN ((t1.c1)<=(t1.c0)) THEN (NOT ('-83606605')) ELSE CAST(t1.c1 AS BLOB) END ASC INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CASE CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END  WHEN CAST(t1.c0 AS TEXT) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE (0X16214f6c IN ()) END) ORDER BY CAST(CAST(t1.c0 AS REAL) AS NUMERIC)  NULLS FIRST, json_remove(((t1.c1)<=(t1.c1)), (t1.c1 IN ()), (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((x'fd430c')))), (+ (SQLITE_VERSION())), CASE WHEN ((t1.c1)<=(t1.c0)) THEN (NOT ('-83606605')) ELSE CAST(t1.c1 AS BLOB) END ASC;
SELECT * FROM t1 WHERE (((CAST('0.20017413120736938' AS REAL))OR(CASE t1.c0  WHEN t1.c1 THEN '-841008926' WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 END))) ORDER BY ((t1.c0 COLLATE RTRIM)%(t1.c1));
SELECT * FROM t1 WHERE (((CAST('0.20017413120736938' AS REAL))OR(CASE t1.c0  WHEN t1.c1 THEN '-841008926' WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 END))) ORDER BY ((t1.c0 COLLATE RTRIM)%(t1.c1)) LIMIT 4;
SELECT * FROM t1 WHERE (((CAST('0.20017413120736938' AS REAL))OR(CASE t1.c0  WHEN t1.c1 THEN '-841008926' WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 END))) ORDER BY ((t1.c0 COLLATE RTRIM)%(t1.c1));
SELECT * FROM t1 WHERE (((CAST('0.20017413120736938' AS REAL))OR(CASE t1.c0  WHEN t1.c1 THEN '-841008926' WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 END))) ORDER BY ((t1.c0 COLLATE RTRIM)%(t1.c1)) LIMIT 4;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c1)))=((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1)))))) ORDER BY (t1.c1 IN (CAST(t1.c0 AS INTEGER))) ASC  NULLS FIRST, ((CAST(t1.c1 AS TEXT)) IS TRUE);
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 IN (t1.c1)))=((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))))))AND(t1.c0))) ORDER BY t1.c1 ASC, ((CAST(t1.c1 AS NUMERIC))OR(TYPEOF(t1.c0))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOT NULL)) NOT BETWEEN (((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND('2053738256'))) AND (CASE t1.c1  WHEN t1.c1 THEN x'46' WHEN t1.c1 THEN t1.c0 END))) ORDER BY t1.c1 ASC, ((CAST(t1.c1 AS NUMERIC))OR(TYPEOF(t1.c0))) LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c1)))=((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1)))))) ORDER BY (t1.c1 IN (CAST(t1.c0 AS INTEGER))) ASC  NULLS FIRST, ((CAST(t1.c1 AS TEXT)) IS TRUE);
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 IN (t1.c1)))=((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))))))AND(t1.c0))) ORDER BY t1.c1 ASC, ((CAST(t1.c1 AS NUMERIC))OR(TYPEOF(t1.c0))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOT NULL)) NOT BETWEEN (((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND('2053738256'))) AND (CASE t1.c1  WHEN t1.c1 THEN x'46' WHEN t1.c1 THEN t1.c0 END))) ORDER BY t1.c1 ASC, ((CAST(t1.c1 AS NUMERIC))OR(TYPEOF(t1.c0))) LIMIT 0;
SELECT * FROM t1 WHERE ((+ ((NOT (t1.c1))))) ORDER BY (((NOT (t1.c0)))-(t1.c1)) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((+ ((NOT (t1.c1)))))AND(CAST((((t1.c0))<=((t1.c1))) AS INTEGER)))) ORDER BY LOWER(UNLIKELY(t1.c0))  NULLS FIRST LIMIT 0X2;
SELECT * FROM t1 WHERE ((+ ((NOT (t1.c1))))) ORDER BY (((NOT (t1.c0)))-(t1.c1)) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((+ ((NOT (t1.c1)))))AND(CAST((((t1.c0))<=((t1.c1))) AS INTEGER)))) ORDER BY LOWER(UNLIKELY(t1.c0))  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (TYPEOF(DISTINCT (((t1.c0, t1.c1)) BETWEEN ((t1.c0, '[')) AND ((NULL, t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((TYPEOF(DISTINCT (((t1.c0, t1.c1)) BETWEEN ((t1.c0, '[')) AND ((NULL, t1.c1)))))AND((((t1.c1)) BETWEEN ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))) AND ((t1.c1)))))) ORDER BY ((t1.c1 COLLATE NOCASE) BETWEEN (((t1.c0)<(t1.c0))) AND (((t1.c0) NOT NULL))) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN ((((((t1.c1)AND(t1.c0)))OR(NULL)))AND(t1.c1)) THEN '-407840957' ELSE CASE WHEN t1.c1 THEN t1.c0 WHEN NULL THEN t1.c0 WHEN NULL THEN t1.c0 ELSE x'cb' END END) ORDER BY ((t1.c1 COLLATE NOCASE) BETWEEN (((t1.c0)<(t1.c0))) AND (((t1.c0) NOT NULL))) ASC;
SELECT ALL * FROM t1 WHERE (TYPEOF(DISTINCT (((t1.c0, t1.c1)) BETWEEN ((t1.c0, '[')) AND ((NULL, t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((TYPEOF(DISTINCT (((t1.c0, t1.c1)) BETWEEN ((t1.c0, '[')) AND ((NULL, t1.c1)))))AND((((t1.c1)) BETWEEN ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))) AND ((t1.c1)))))) ORDER BY ((t1.c1 COLLATE NOCASE) BETWEEN (((t1.c0)<(t1.c0))) AND (((t1.c0) NOT NULL))) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN ((((((t1.c1)AND(t1.c0)))OR(NULL)))AND(t1.c1)) THEN '-407840957' ELSE CASE WHEN t1.c1 THEN t1.c0 WHEN NULL THEN t1.c0 WHEN NULL THEN t1.c0 ELSE x'cb' END END) ORDER BY ((t1.c1 COLLATE NOCASE) BETWEEN (((t1.c0)<(t1.c0))) AND (((t1.c0) NOT NULL))) ASC;
SELECT MAX(t1.c1) FROM t1 WHERE (CASE WHEN (t1.c1 IN ()) THEN CAST(t1.c0 AS REAL) WHEN (~ (t1.c0)) THEN (((('''')AND(1.041810244E9)))OR(t1.c0)) END);
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CASE WHEN (t1.c1 IN ()) THEN CAST(t1.c0 AS REAL) WHEN (~ (t1.c0)) THEN (((('''')AND(1.041810244E9)))OR(t1.c0)) END) ORDER BY CAST((- (t1.c0)) AS BLOB) DESC  NULLS FIRST, (- (((t1.c0)>=(t1.c0)))), t1.c1 ASC INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((0x14870c1f))==((t1.c1))) COLLATE NOCASE) ORDER BY CAST((- (t1.c0)) AS BLOB) DESC  NULLS FIRST, (- (((t1.c0)>=(t1.c0)))), t1.c1 ASC;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC)) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC)) IS TRUE)) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC)) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC)) IS TRUE)) LIMIT 0X0;
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c0))<>((t1.c0)))))<>((t1.c0 COLLATE RTRIM))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((t1.c0))!=((t1.c0)))))<>((t1.c0 COLLATE RTRIM)))) LIMIT 0X0;
SELECT MAX(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY (((-1650732309, ((t1.c0) BETWEEN (x'39') AND (t1.c0))))=((((((t1.c0)OR(t1.c1)))OR(t1.c0)), '')))  NULLS LAST, ((((((CASE ')*'  WHEN -786790317 THEN t1.c0 WHEN 0.9088998803897876 THEN t1.c1 END)OR((+ (t1.c1)))))AND(COALESCE(x'c6', ' ', t1.c1, t1.c1))))OR(((NULL) ISNULL))) ASC  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY ((x'')IS((+ (t1.c0)))), ((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)) COLLATE NOCASE  NULLS FIRST, (((t1.c1)|(t1.c0)) IN ((((t1.c0, t1.c1))=((t1.c0, NULL)))))  NULLS LAST LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE ((((+ (t1.c1))) BETWEEN (t1.c1 COLLATE BINARY) AND ((((t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c1)) AND ((x'e29d', t1.c0)))))) ORDER BY t1.c0;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((+ (t1.c1))) BETWEEN (t1.c1 COLLATE BINARY) AND ((((t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c1)) AND ((x'e29d', t1.c0))))))AND((((+ (t1.c1)))LIKE(((((((((0.7816542364012466)AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))AND(t1.c0))))))) ORDER BY t1.c0 LIMIT 0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY (((t1.c0, t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((((x'f9') NOT NULL), ((t1.c1) IS FALSE), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)) AND ((1.051196884E9, (- (t1.c0)), ((t1.c1) BETWEEN (NULL) AND (t1.c1)), t1.c1 COLLATE BINARY))) ASC  NULLS LAST, CASE ((t1.c1)IS NOT(t1.c1))  WHEN ((t1.c0) NOT NULL) THEN t1.c1 END DESC  NULLS LAST, ((((0.30029337075633533)<=(t1.c1)))>>(CAST(t1.c0 AS INTEGER))) ASC;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c0 COLLATE RTRIM)) AND ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 END))) DESC, ((((((((load_extension(t1.c0))OR(t1.c1 COLLATE NOCASE)))AND(((t1.c0)%(t1.c1)))))AND((~ (t1.c1)))))AND((('') BETWEEN (t1.c1) AND (t1.c0)))) DESC  NULLS FIRST, CASE WHEN ((t1.c1)<=(t1.c0)) THEN t1.c0 COLLATE BINARY END  NULLS LAST, ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)>=(NULL)) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE ((0.9759600846143214 IN (((((t1.c1)OR(t1.c1)))AND(t1.c0)), ((((((((t1.c0)AND(t1.c0)))AND(0Xffffffffc7b698ff)))OR('-1624170603')))OR(0.8495775032712797))))) ORDER BY (CAST(t1.c1 AS NUMERIC) IN ()) ASC  NULLS FIRST, ((((('5')OR(t1.c1)))OR(t1.c0)) IN ());
SELECT * FROM t1 WHERE ((0.9759600846143214 IN (((((t1.c1)OR(t1.c1)))AND(t1.c0)), ((((((((t1.c0)AND(t1.c0)))AND(0xffffffffc7b698ff)))OR('-1624170603')))OR(0.8495775032712797))))) ORDER BY (CAST(t1.c1 AS NUMERIC) IN ()) ASC  NULLS FIRST, ((((('5')OR(t1.c1)))OR(t1.c0)) IN ()) LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (((535758303)AND(((t1.c1) IS FALSE)))) ORDER BY (CAST(t1.c1 AS NUMERIC) IN ()) ASC  NULLS FIRST, ((((('5')OR(t1.c1)))OR(t1.c0)) IN ()) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((0.9759600846143214 IN (((((t1.c1)OR(t1.c1)))AND(t1.c0)), ((((((((t1.c0)AND(t1.c0)))AND(0Xffffffffc7b698ff)))OR('-1624170603')))OR(0.8495775032712797))))) ORDER BY (CAST(t1.c1 AS NUMERIC) IN ()) ASC  NULLS FIRST, ((((('5')OR(t1.c1)))OR(t1.c0)) IN ());
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1))) BETWEEN (CAST(t1.c1 AS TEXT)) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1))) BETWEEN (CAST(t1.c1 AS TEXT)) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END))) ORDER BY (- (((t1.c0)+(t1.c1)))) ASC  NULLS FIRST, (~ ((t1.c0 IN (t1.c0, t1.c1))))  NULLS LAST LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)AND(t1.c1))) NOT BETWEEN ((((t1.c0, t1.c0))<((t1.c1, t1.c0)))) AND (CAST(t1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)AND(t1.c1))) NOT BETWEEN ((((t1.c0, t1.c0))<=((t1.c1, t1.c0)))) AND (CAST(t1.c0 AS NUMERIC)))) ORDER BY CAST((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) AS TEXT) ASC, (- (t1.c1 COLLATE NOCASE)), CAST(t1.c0 AS BLOB) COLLATE BINARY DESC LIMIT 0X0 INTERSECT SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)==(t1.c0)))IS(t1.c0))) ORDER BY CAST((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) AS TEXT) ASC, (- (t1.c1 COLLATE NOCASE)), CAST(t1.c0 AS BLOB) COLLATE BINARY DESC LIMIT 0x0;
SELECT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END) BETWEEN (CASE t1.c0  WHEN x'07' THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND ((- (t1.c1))))) ORDER BY (((t1.c1)IS(t1.c1)) IN ()) ASC  NULLS LAST, (~ ((((0Xfffffffffb563c33))==(('''~n4'))))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END) BETWEEN (CASE t1.c0  WHEN x'07' THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND ((- (t1.c1))))) ORDER BY ((((t1.c1) IS TRUE)) BETWEEN ((NOT (t1.c1))) AND (((t1.c1)/(t1.c1)))) ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0) NOT BETWEEN (x'') AND (t1.c0)) COLLATE RTRIM) ORDER BY ((((t1.c1) IS TRUE)) BETWEEN ((NOT (t1.c1))) AND (((t1.c1)/(t1.c1)))) ASC  NULLS LAST LIMIT 0x2;
SELECT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END) BETWEEN (CASE t1.c0  WHEN x'07' THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND ((- (t1.c1))))) ORDER BY (((t1.c1)IS(t1.c1)) IN ()) ASC  NULLS LAST, (~ ((((0Xfffffffffb563c33))==(('''~n4'))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((~ (t1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST((~ (t1.c0)) AS REAL))AND(CASE WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN '䄫' THEN '' ELSE t1.c0 END THEN ((t1.c0) ISNULL) WHEN t1.c0 THEN ((t1.c1) IS FALSE) WHEN ((t1.c0) NOT NULL) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN 0.06389991955429708 THEN t1.c1 END WHEN (((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c0))) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c0)>=(t1.c1)) THEN ((t1.c1)-(0.6683211503281844)) WHEN CAST(t1.c1 AS NUMERIC) THEN (t1.c1 IN ()) END))) ORDER BY (((t1.c1)) NOT BETWEEN (('2109462779')) AND ((t1.c0))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ('');
SELECT * FROM t1 WHERE ((('')AND(CAST(t1.c0 AS NUMERIC)))) ORDER BY CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE BINARY ASC  NULLS LAST, ((t1.c0) IS TRUE) COLLATE NOCASE  NULLS LAST, ((TRIM(t1.c0))+(t1.c0)) ASC;
SELECT ALL * FROM t1 WHERE ('');
SELECT * FROM t1 WHERE ((('')AND(CAST(t1.c0 AS NUMERIC)))) ORDER BY CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE BINARY ASC  NULLS LAST, ((t1.c0) IS TRUE) COLLATE NOCASE  NULLS LAST, ((TRIM(t1.c0))+(t1.c0)) ASC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CAST(CASE WHEN '-1647737361' THEN t1.c1 ELSE t1.c1 END AS NUMERIC)) ORDER BY (NOT (((0.5764694199107491)IS(t1.c0)))) ASC  NULLS LAST, (CAST(t1.c0 AS BLOB) IN ()), ((x'0688') NOT BETWEEN (((t1.c0) IS FALSE)) AND (((t1.c1)|(t1.c1))))  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CAST(CASE WHEN '-1647737361' THEN t1.c1 ELSE t1.c1 END AS NUMERIC)) ORDER BY LIKELIHOOD(DISTINCT highlight(t1.c1, t1.c0, t1.c0, t1.c0), ((t1.c0)+(t1.c1))) DESC  NULLS LAST, CASE WHEN (~ (t1.c1)) THEN (t1.c0 IN (t1.c0, t1.c1, t1.c1)) WHEN t1.c1 THEN ((t1.c1) NOT BETWEEN (x'aa') AND (t1.c1)) WHEN t1.c0 COLLATE NOCASE THEN 'Xv' WHEN t1.c0 THEN (((t1.c0, t1.c1))>=((t1.c1, t1.c1))) ELSE (+ (t1.c1)) END  NULLS LAST INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((t1.c1 IN (t1.c0)))>(CAST(t1.c1 AS BLOB)))) ORDER BY LIKELIHOOD(DISTINCT highlight(t1.c1, t1.c0, t1.c0, t1.c0), ((t1.c0)+(t1.c1))) DESC  NULLS LAST, CASE WHEN (~ (t1.c1)) THEN (t1.c0 IN (t1.c0, t1.c1, t1.c1)) WHEN t1.c1 THEN ((t1.c1) NOT BETWEEN (x'aa') AND (t1.c1)) WHEN t1.c0 COLLATE NOCASE THEN 'Xv' WHEN t1.c0 THEN (((t1.c0, t1.c1))>=((t1.c1, t1.c1))) ELSE (+ (t1.c1)) END  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE (((t1.c0 COLLATE NOCASE) IS TRUE)) ORDER BY (((((t1.c0))>=((t1.c1)))) NOT NULL) DESC;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((t1.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (ABS(DISTINCT t1.c1))) DESC, (~ ((('536044823') ISNULL))) LIMIT 0x0;
SELECT MIN(t1.c0) FROM t1 WHERE ((0.4927952428600675 IN ()));
SELECT MIN(t1.c0) FROM t1 WHERE ((((0.4927952428600675 IN ()))AND(((((((((((((x'')OR(NULL)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))>=(((t1.c0)<>(t1.c1))))))) LIMIT 0x0 INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (t1.c0) LIMIT 0;
SELECT ALL * FROM t1 WHERE (CASE LIKELY(t1.c0)  WHEN (t1.c1 IN ()) THEN INSTR(t1.c1, t1.c0) WHEN ((t1.c0)|(t1.c0)) THEN t1.c1 ELSE ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE LIKELY(t1.c0)  WHEN (t1.c1 IN ()) THEN INSTR(t1.c1, t1.c0) WHEN ((t1.c0)|(t1.c0)) THEN t1.c1 ELSE ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) END)AND(((((((((t1.c1 COLLATE RTRIM)AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))OR(CASE t1.c0  WHEN t1.c0 THEN '-407840957' ELSE t1.c1 END)))AND(t1.c1 COLLATE BINARY)))OR((+ (t1.c0))))))) ORDER BY ((((t1.c1) BETWEEN (x'') AND (t1.c1)))/(((t1.c1)<(t1.c1)))) ASC  NULLS FIRST, CASE ((t1.c0)-(t1.c0))  WHEN t1.c1 THEN ((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(t1.c0)) WHEN t1.c1 THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END ASC  NULLS FIRST, UNLIKELY(((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(0.8084697034064755)))AND(t1.c0)))AND(t1.c0))), ((CAST(NULL AS REAL))IS((((t1.c1, t1.c1, t1.c1, t1.c1))>((t1.c1, t1.c0, t1.c1, t1.c0)))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE LIKELY(t1.c0)  WHEN (t1.c1 IN ()) THEN INSTR(t1.c1, t1.c0) WHEN ((t1.c0)|(t1.c0)) THEN t1.c1 ELSE ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE LIKELY(t1.c0)  WHEN (t1.c1 IN ()) THEN INSTR(t1.c1, t1.c0) WHEN ((t1.c0)|(t1.c0)) THEN t1.c1 ELSE ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) END)AND(((((((((t1.c1 COLLATE RTRIM)AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))OR(CASE t1.c0  WHEN t1.c0 THEN '-407840957' ELSE t1.c1 END)))AND(t1.c1 COLLATE BINARY)))OR((+ (t1.c0))))))) ORDER BY ((((t1.c1) BETWEEN (x'') AND (t1.c1)))/(((t1.c1)<(t1.c1)))) ASC  NULLS FIRST, CASE ((t1.c0)-(t1.c0))  WHEN t1.c1 THEN ((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(t1.c0)) WHEN t1.c1 THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END ASC  NULLS FIRST, UNLIKELY(((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(0.8084697034064755)))AND(t1.c0)))AND(t1.c0))), ((CAST(NULL AS REAL))IS((((t1.c1, t1.c1, t1.c1, t1.c1))>((t1.c1, t1.c0, t1.c1, t1.c0)))))  NULLS LAST;
SELECT * FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c1)>=(t1.c1)))))AND(t1.c1))) ORDER BY CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c0))  WHEN (~ (t1.c0)) THEN ((t1.c1)+(t1.c1)) WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN CASE t1.c1  WHEN t1.c1 THEN 0.4846706440493266 WHEN t1.c0 THEN -1628956291 ELSE 'x%' END WHEN (('fe뛸띵qu')GLOB(t1.c0)) THEN PRINTF(t1.c1, '-693502763') ELSE (t1.c0 IN (t1.c1)) END ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c1)>=(t1.c1)))))AND(t1.c1)))AND((('W\opE#NA') BETWEEN (((((t1.c0)OR(t1.c0)))OR(t1.c0))) AND (NULL))))) ORDER BY CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c0))  WHEN (~ (t1.c0)) THEN ((t1.c1)+(t1.c1)) WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN CASE t1.c1  WHEN t1.c1 THEN 0.4846706440493266 WHEN t1.c0 THEN 0xffffffff9ee8197d ELSE 'x%' END WHEN (('fe뛸띵qu')GLOB(t1.c0)) THEN PRINTF(t1.c1, '-693502763') ELSE (t1.c0 IN (t1.c1)) END ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c1)>=(t1.c1)))))AND(t1.c1))) ORDER BY CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c0))  WHEN (~ (t1.c0)) THEN ((t1.c1)+(t1.c1)) WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN CASE t1.c1  WHEN t1.c1 THEN 0.4846706440493266 WHEN t1.c0 THEN -1628956291 ELSE 'x%' END WHEN (('fe뛸띵qu')GLOB(t1.c0)) THEN PRINTF(t1.c1, '-693502763') ELSE (t1.c0 IN (t1.c1)) END ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c1)>=(t1.c1)))))AND(t1.c1)))AND((('W\opE#NA') BETWEEN (((((t1.c0)OR(t1.c0)))OR(t1.c0))) AND (NULL))))) ORDER BY CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c0))  WHEN (~ (t1.c0)) THEN ((t1.c1)+(t1.c1)) WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN CASE t1.c1  WHEN t1.c1 THEN 0.4846706440493266 WHEN t1.c0 THEN 0xffffffff9ee8197d ELSE 'x%' END WHEN (('fe뛸띵qu')GLOB(t1.c0)) THEN PRINTF(t1.c1, '-693502763') ELSE (t1.c0 IN (t1.c1)) END ASC  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE ((+ (((t1.c1)%(t1.c1))))) ORDER BY ((t1.c0 IN (0.4900034076953764)) IN (((((t1.c0)OR(t1.c1)))OR(NULL)))) ASC;
SELECT COUNT(*) FROM t1 WHERE ((+ (((t1.c1)%(t1.c1))))) ORDER BY (+ (((((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)||(t1.c0))) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) AND ((~ (x'ad093f')))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c1)||(t1.c0))) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) AND ((~ (x'ad093f'))))) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((~ (NULL)));
SELECT MIN(t1.c1) FROM t1 WHERE (TRIM(DISTINCT CASE WHEN t1.c0 THEN t1.c1 END, CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (TRIM(DISTINCT CASE WHEN t1.c0 THEN t1.c1 END, CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)) INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((t1.c0, t1.c0)) NOT BETWEEN (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), x'' COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) IS TRUE)) ORDER BY ((((((((((t1.c1 COLLATE RTRIM)OR(CAST('1041810244' AS TEXT))))OR(t1.c0)))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN '' THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN '' THEN t1.c1 END)))AND(((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))))OR(t1.c0 COLLATE NOCASE)) DESC  NULLS FIRST, ((((+ (t1.c1)), ((t1.c1) IS TRUE), CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN 0.7960258449854591 THEN t1.c0 ELSE t1.c0 END))==((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), ((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)), CAST(t1.c1 AS INTEGER))))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c0) IS TRUE))AND((- ((~ (t1.c1))))))) ORDER BY ((((((((((t1.c1 COLLATE RTRIM)OR(CAST('1041810244' AS TEXT))))OR(t1.c0)))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN '' THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN '' THEN t1.c1 END)))AND(((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))))OR(t1.c0 COLLATE NOCASE)) DESC  NULLS FIRST, ((((+ (t1.c1)), ((t1.c1) IS TRUE), CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN 0.7960258449854591 THEN t1.c0 ELSE t1.c0 END))==((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), ((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)), CAST(t1.c1 AS INTEGER))))  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CASE (t1.c1 IN (t1.c0, t1.c0))  WHEN ((t1.c0) IS FALSE) THEN (t1.c1 IN ()) WHEN (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) THEN CAST(t1.c1 AS BLOB) END) ORDER BY ((((((((((t1.c1 COLLATE RTRIM)OR(CAST('1041810244' AS TEXT))))OR(t1.c0)))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN '' THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN '' THEN t1.c1 END)))AND(((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))))OR(t1.c0 COLLATE NOCASE)) DESC  NULLS FIRST, ((((+ (t1.c1)), ((t1.c1) IS TRUE), CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN 0.7960258449854591 THEN t1.c0 ELSE t1.c0 END))=((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), ((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)), CAST(t1.c1 AS INTEGER))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS NUMERIC)) ORDER BY (CAST(t1.c0 AS BLOB) IN ()) ASC  NULLS LAST, '-1482418848' ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))AND(((CAST(x'0f4eaa' AS BLOB))=(CAST(t1.c1 AS BLOB)))))) ORDER BY CAST(((t1.c1)/(0.13695069591214615)) AS TEXT) INTERSECT SELECT ALL * FROM t1 WHERE ((t1.c1 IN (t1.c0)) COLLATE RTRIM) ORDER BY CAST(((t1.c1)/(0.13695069591214615)) AS TEXT);
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS NUMERIC)) ORDER BY (CAST(t1.c0 AS BLOB) IN ()) ASC  NULLS LAST, '-1482418848' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((~ (t1.c0))) ISNULL));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((~ (t1.c0))) ISNULL)) ORDER BY ((t1.c0 COLLATE RTRIM)<=(t1.c0))  NULLS FIRST, t1.c0 DESC LIMIT 0x3 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 COLLATE NOCASE THEN ((t1.c0)=(t1.c0)) WHEN (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) THEN t1.c0 COLLATE RTRIM ELSE ((t1.c0) IS TRUE) END) ORDER BY ((t1.c0 COLLATE RTRIM)<=(t1.c0))  NULLS FIRST, t1.c0 DESC LIMIT 3;
SELECT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))>=(((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))>=(((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0))))) LIMIT 0X0;
SELECT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))>=(((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))>=(((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0))))) LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1 WHERE (x'28364d85');
SELECT COUNT(*) FROM t1 WHERE (x'28364d85') ORDER BY ('-1671112748' COLLATE BINARY IN (UPPER(DISTINCT t1.c0))) ASC  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c1 AS REAL) AS INTEGER)) ORDER BY ('-1671112748' COLLATE BINARY IN (UPPER(DISTINCT t1.c0))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (-1.863901556E9) ORDER BY CASE WHEN t1.c0 THEN ((x'97') BETWEEN (t1.c0) AND (t1.c1)) WHEN ((((((((t1.c1)OR(NULL)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)) THEN (t1.c0 IN ()) ELSE (t1.c1 IN (t1.c1)) END, ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0 COLLATE BINARY)) DESC, CASE ((t1.c1)GLOB(t1.c0))  WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN '2067293718' END WHEN 0xffffffffc88026d2 THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE '1148542017' END WHEN ((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(x'10')))AND(NULL)) THEN ((t1.c1)|(t1.c1)) END  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (-1.863901556E9) ORDER BY t1.c1 COLLATE NOCASE;
SELECT * FROM t1 WHERE (-1.863901556E9) ORDER BY CASE WHEN t1.c0 THEN ((x'97') BETWEEN (t1.c0) AND (t1.c1)) WHEN ((((((((t1.c1)OR(NULL)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)) THEN (t1.c0 IN ()) ELSE (t1.c1 IN (t1.c1)) END, ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0 COLLATE BINARY)) DESC, CASE ((t1.c1)GLOB(t1.c0))  WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN '2067293718' END WHEN 0xffffffffc88026d2 THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE '1148542017' END WHEN ((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(x'10')))AND(NULL)) THEN ((t1.c1)|(t1.c1)) END  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (-1.863901556E9) ORDER BY t1.c1 COLLATE NOCASE;
SELECT MAX(t1.c0) FROM t1 WHERE (COALESCE(t1.c0 COLLATE BINARY, ((t1.c1)OR(t1.c1)), CAST(t1.c0 AS BLOB), UPPER(t1.c1), ((t1.c0)>(x'b1fa')), load_extension(t1.c0, t1.c0))) ORDER BY CAST(((((((((NULL)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c0)) AS INTEGER)  NULLS FIRST, ((((((t1.c0) NOTNULL))AND(((t1.c0) NOT NULL))))AND(((t1.c0)*(t1.c1))))  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (COALESCE(t1.c0 COLLATE BINARY, ((t1.c1)OR(t1.c1)), CAST(t1.c0 AS BLOB), UPPER(t1.c1), ((t1.c0)>(x'b1fa')), load_extension(t1.c0, t1.c0))) ORDER BY CAST(((((((((NULL)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c0)) AS INTEGER)  NULLS FIRST, ((((((t1.c0) NOTNULL))AND(((t1.c0) NOT NULL))))AND(((t1.c0)*(t1.c1))))  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((NOT (t1.c1)) COLLATE NOCASE) ORDER BY CAST(((((((((NULL)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c0)) AS INTEGER)  NULLS FIRST, ((((((t1.c0) NOTNULL))AND(((t1.c0) NOT NULL))))AND(((t1.c0)*(t1.c1))))  NULLS FIRST LIMIT 2;
SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c0))!=((t1.c1))) IN (((t1.c0)!=(t1.c1)), ((t1.c0)!=(t1.c0))))) ORDER BY ((CAST(1989149162 AS INTEGER))<<(CAST(t1.c1 AS BLOB))) ASC, ((CASE WHEN t1.c1 THEN t1.c0 END)%(TRIM(DISTINCT t1.c0, t1.c0))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((t1.c0))>((t1.c1))) IN (((t1.c0)<(t1.c1)))))AND(((((t1.c1)IS NOT(t1.c1))) BETWEEN (t1.c1 COLLATE NOCASE) AND (((((t1.c0)OR(t1.c0)))AND(t1.c0))))))) ORDER BY ((CAST(0x769001ea AS INTEGER))<<(CAST(t1.c1 AS BLOB))) ASC, ((CASE WHEN t1.c1 THEN t1.c0 END)%(TRIM(DISTINCT t1.c0, t1.c0))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))>(((t1.c1)&(t1.c0))))) ORDER BY ((CAST(0X769001ea AS INTEGER))<<(CAST(t1.c1 AS BLOB))) ASC, ((CASE WHEN t1.c1 THEN t1.c0 END)%(TRIM(DISTINCT t1.c0, t1.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0 COLLATE BINARY, (((t1.c0, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, t1.c1, t1.c0))))) AND ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))))) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c1)&('ퟔ')) END DESC  NULLS FIRST, (((t1.c1)) BETWEEN ((t1.c1)) AND (((((t1.c0, t1.c0, t1.c1, t1.c0))<((t1.c1, t1.c0, t1.c1, t1.c1))))));
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0 COLLATE BINARY, (((t1.c0, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, t1.c1, t1.c0))))) AND ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))))) ORDER BY ((((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))OR(CAST(t1.c0 AS INTEGER))))AND(((t1.c0)IS(t1.c1)))) DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0 COLLATE BINARY, (((t1.c0, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, t1.c1, t1.c0))))) AND ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))))) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c1)&('ퟔ')) END DESC  NULLS FIRST, (((t1.c1)) BETWEEN ((t1.c1)) AND (((((t1.c0, t1.c0, t1.c1, t1.c0))<((t1.c1, t1.c0, t1.c1, t1.c1))))));
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0 COLLATE BINARY, (((t1.c0, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, t1.c1, t1.c0))))) AND ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))))) ORDER BY ((((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))OR(CAST(t1.c0 AS INTEGER))))AND(((t1.c0)IS(t1.c1)))) DESC  NULLS LAST LIMIT 2;
SELECT MIN(t1.c0) FROM t1 WHERE (HEX((((t1.c1, '┷')) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1)))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((HEX((((t1.c1, '┷')) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1)))))AND((((((((((((((t1.c1, t1.c0))<((t1.c1, t1.c0))))AND(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((t1.c0) NOTNULL))))OR((t1.c0 IN ()))))AND((t1.c0 IN (t1.c0, NULL)))))AND(LIKELIHOOD(t1.c0, t1.c0)))))) ORDER BY (+ ((- (t1.c1)))) ASC  NULLS FIRST, ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 END) ISNULL) ASC  NULLS LAST LIMIT 0X0;
SELECT * FROM t1 WHERE (((((x'0c7dcc')<(t1.c1))) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) AND (t1.c0 COLLATE NOCASE)));
SELECT ALL * FROM t1 WHERE (((((((x'0c7dcc')<=(t1.c1))) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) AND (t1.c0 COLLATE NOCASE)))AND(DATETIME(((t1.c1) NOTNULL), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)), (((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1))))))) ORDER BY t1.c1, (((~ ('')))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1))))  NULLS LAST, (((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c1)))) IS FALSE) LIMIT 0x1 INTERSECT SELECT ALL * FROM t1 WHERE ((((((~ (t1.c0)))OR((t1.c1 IN (t1.c1)))))AND(t1.c1))) ORDER BY t1.c1, (((~ ('')))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1))))  NULLS LAST, (((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c1)))) IS FALSE) LIMIT 1;
SELECT * FROM t1 WHERE (((((x'0c7dcc')<(t1.c1))) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) AND (t1.c0 COLLATE NOCASE)));
SELECT ALL * FROM t1 WHERE (((((((x'0c7dcc')<=(t1.c1))) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) AND (t1.c0 COLLATE NOCASE)))AND(DATETIME(((t1.c1) NOTNULL), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)), (((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1))))))) ORDER BY t1.c1, (((~ ('')))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1))))  NULLS LAST, (((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c1)))) IS FALSE) LIMIT 0x1 INTERSECT SELECT ALL * FROM t1 WHERE ((((((~ (t1.c0)))OR((t1.c1 IN (t1.c1)))))AND(t1.c1))) ORDER BY t1.c1, (((~ ('')))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1))))  NULLS LAST, (((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c1)))) IS FALSE) LIMIT 1;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (((t1.c0))<((t1.c0))) THEN (+ (t1.c0)) WHEN TRIM(t1.c0, t1.c0) THEN '' ELSE ((t1.c0) NOT NULL) END) ORDER BY CAST(((((t1.c0)OR(t1.c0)))OR(t1.c0)) AS BLOB) ASC;
SELECT * FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (((t1.c0))<((t1.c0))) THEN (+ (t1.c0)) WHEN TRIM(t1.c0, t1.c0) THEN '' ELSE ((t1.c0) NOT NULL) END) ORDER BY CAST(((((t1.c0)OR(t1.c0)))OR(t1.c0)) AS BLOB) ASC INTERSECT SELECT * FROM t1 WHERE ((~ (t1.c1)) COLLATE NOCASE) ORDER BY CAST(((((t1.c0)OR(t1.c0)))OR(t1.c0)) AS BLOB) ASC;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (((t1.c0))<((t1.c0))) THEN (+ (t1.c0)) WHEN TRIM(t1.c0, t1.c0) THEN '' ELSE ((t1.c0) NOT NULL) END) ORDER BY CAST(((((t1.c0)OR(t1.c0)))OR(t1.c0)) AS BLOB) ASC;
SELECT * FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (((t1.c0))<((t1.c0))) THEN (+ (t1.c0)) WHEN TRIM(t1.c0, t1.c0) THEN '' ELSE ((t1.c0) NOT NULL) END) ORDER BY CAST(((((t1.c0)OR(t1.c0)))OR(t1.c0)) AS BLOB) ASC INTERSECT SELECT * FROM t1 WHERE ((~ (t1.c1)) COLLATE NOCASE) ORDER BY CAST(((((t1.c0)OR(t1.c0)))OR(t1.c0)) AS BLOB) ASC;
SELECT ALL * FROM t1 WHERE ((((((((((((('952584868') IS TRUE))AND((t1.c0 IN (t1.c1)))))AND((t1.c0 IN ()))))OR((~ (t1.c1)))))AND(((t1.c1) IS FALSE))))OR(0.39151391762371))) ORDER BY ((CASE WHEN t1.c0 THEN t1.c1 WHEN '1418587284' THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN 0.015500745779032266 ELSE t1.c0 END)!=(t1.c0)), t1.c0;
SELECT ALL * FROM t1 WHERE ((((((((((((('952584868') IS TRUE))AND((t1.c0 IN (t1.c1)))))AND((t1.c0 IN ()))))OR((~ (t1.c1)))))AND(((t1.c1) IS FALSE))))OR(0.39151391762371))) ORDER BY ((((((t1.c1)OR(t1.c0)))AND(t1.c1))) IS TRUE) LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE ((- ((((t1.c0))<=((t1.c1)))))) ORDER BY ((((((t1.c1)OR(t1.c0)))AND(t1.c1))) IS TRUE) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((((((((((((('952584868') IS TRUE))AND((t1.c0 IN (t1.c1)))))AND((t1.c0 IN ()))))OR((~ (t1.c1)))))AND(((t1.c1) IS FALSE))))OR(0.39151391762371))) ORDER BY ((CASE WHEN t1.c0 THEN t1.c1 WHEN '1418587284' THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN 0.015500745779032266 ELSE t1.c0 END)!=(t1.c0)), t1.c0;
SELECT ALL * FROM t1 WHERE ((((((((((((('952584868') IS TRUE))AND((t1.c0 IN (t1.c1)))))AND((t1.c0 IN ()))))OR((~ (t1.c1)))))AND(((t1.c1) IS FALSE))))OR(0.39151391762371))) ORDER BY ((((((t1.c1)OR(t1.c0)))AND(t1.c1))) IS TRUE) LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE ((- ((((t1.c0))<=((t1.c1)))))) ORDER BY ((((((t1.c1)OR(t1.c0)))AND(t1.c1))) IS TRUE) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE BINARY)AND(x'')));
SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE BINARY)AND(x''))) ORDER BY (((((((((t1.c1, t1.c1)) NOT BETWEEN ((NULL, t1.c0)) AND ((t1.c0, t1.c0))))AND(((t1.c0)GLOB(t1.c0)))))AND(CAST(t1.c1 AS NUMERIC))))AND(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END)) ASC;
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE BINARY)AND(x'')));
SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE BINARY)AND(x''))) ORDER BY (((((((((t1.c1, t1.c1)) NOT BETWEEN ((NULL, t1.c0)) AND ((t1.c0, t1.c0))))AND(((t1.c0)GLOB(t1.c0)))))AND(CAST(t1.c1 AS NUMERIC))))AND(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END)) ASC;
SELECT * FROM t1 WHERE (CASE (((t1.c0))<((t1.c0)))  WHEN (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))) THEN CASE WHEN t1.c1 THEN t1.c0 END END) ORDER BY ((((t1.c0)>=(t1.c1)))!=(CAST(t1.c0 AS INTEGER)))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (CASE (((t1.c0))<((t1.c0)))  WHEN (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))) THEN CASE WHEN t1.c1 THEN t1.c0 END END) ORDER BY (- ((t1.c0 IN ()))) DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY (- ((t1.c0 IN ()))) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 WHERE (CASE (((t1.c0))<((t1.c0)))  WHEN (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))) THEN CASE WHEN t1.c1 THEN t1.c0 END END) ORDER BY ((((t1.c0)>=(t1.c1)))!=(CAST(t1.c0 AS INTEGER)))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (CASE (((t1.c0))<((t1.c0)))  WHEN (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))) THEN CASE WHEN t1.c1 THEN t1.c0 END END) ORDER BY (- ((t1.c0 IN ()))) DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY (- ((t1.c0 IN ()))) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((x'')==(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END))) ORDER BY ((((t1.c0)OR(t1.c0)))IS(((t1.c0)||(0.09184903392093091)))) ASC  NULLS LAST, (((((t1.c1, t1.c0, '1083185990'))<((t1.c1, 'b', t1.c0))))IS NOT(((t1.c1)+(t1.c0)))), (((t1.c1 IN (t1.c0)))-((('|၉9+D⺫B')-(t1.c1))));
SELECT MAX(t1.c0) FROM t1 WHERE (((((x'')==(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))AND((- (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '2109462779' WHEN -1827888760 THEN t1.c0 ELSE t1.c1 END))))) ORDER BY ((IFNULL(DISTINCT t1.c1, t1.c0))|(CAST(t1.c1 AS BLOB))) ASC  NULLS LAST, (((NOT (t1.c1)))&((t1.c0 IN ()))) ASC;
SELECT ALL * FROM t1 WHERE ((0.03079578817217099 IN (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)), '礨|'))) ORDER BY ((((((((((((t1.c1)&(t1.c1)))OR(((t1.c1)<=(t1.c1)))))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))))OR(t1.c1 COLLATE NOCASE)))OR(CASE t1.c1  WHEN x'' THEN t1.c1 ELSE t1.c0 END)))OR(CAST(t1.c1 AS TEXT))) DESC, (((((((((((t1.c1, t1.c0))==((t1.c1, t1.c0))))AND(TRIM(DISTINCT t1.c0))))OR(((((t1.c0)AND(t1.c1)))AND(t1.c1)))))AND((+ (t1.c1)))))AND(((t1.c1)IS NOT(t1.c0)))), t1.c0 ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((0.03079578817217099 IN (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)), '礨|'))) ORDER BY ((((t1.c0, t1.c0, 0.6373978997509772)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, NULL))) IN (((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))) DESC  NULLS FIRST, (((t1.c0, (((t1.c1, t1.c1)) NOT BETWEEN ((0.7703597425385795, t1.c0)) AND ((t1.c0, t1.c0))), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))>=((CAST(t1.c0 AS INTEGER), (((t1.c0, t1.c0))<>((t1.c0, t1.c0))), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))) ASC, CASE 0.34628006387324206  WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) THEN (~ (t1.c0)) WHEN ((t1.c1)==(t1.c0)) THEN (NOT (t1.c0)) WHEN t1.c1 COLLATE RTRIM THEN CAST(t1.c0 AS REAL) END LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (json_array_length(((1848016290) BETWEEN (t1.c0) AND (t1.c0)), (t1.c1 IN (t1.c0)))) ORDER BY ((((t1.c0, t1.c0, 0.6373978997509772)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, NULL))) IN (((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))) DESC  NULLS FIRST, (((t1.c0, (((t1.c1, t1.c1)) NOT BETWEEN ((0.7703597425385795, t1.c0)) AND ((t1.c0, t1.c0))), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))>=((CAST(t1.c0 AS INTEGER), (((t1.c0, t1.c0))!=((t1.c0, t1.c0))), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))) ASC, CASE 0.34628006387324206  WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) THEN (~ (t1.c0)) WHEN ((t1.c1)=(t1.c0)) THEN (NOT (t1.c0)) WHEN t1.c1 COLLATE RTRIM THEN CAST(t1.c0 AS REAL) END LIMIT 0;
SELECT ALL * FROM t1 WHERE ((0.03079578817217099 IN (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)), '礨|'))) ORDER BY ((((((((((((t1.c1)&(t1.c1)))OR(((t1.c1)<=(t1.c1)))))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))))OR(t1.c1 COLLATE NOCASE)))OR(CASE t1.c1  WHEN x'' THEN t1.c1 ELSE t1.c0 END)))OR(CAST(t1.c1 AS TEXT))) DESC, (((((((((((t1.c1, t1.c0))==((t1.c1, t1.c0))))AND(TRIM(DISTINCT t1.c0))))OR(((((t1.c0)AND(t1.c1)))AND(t1.c1)))))AND((+ (t1.c1)))))AND(((t1.c1)IS NOT(t1.c0)))), t1.c0 ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((0.03079578817217099 IN (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)), '礨|'))) ORDER BY ((((t1.c0, t1.c0, 0.6373978997509772)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, NULL))) IN (((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))) DESC  NULLS FIRST, (((t1.c0, (((t1.c1, t1.c1)) NOT BETWEEN ((0.7703597425385795, t1.c0)) AND ((t1.c0, t1.c0))), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))>=((CAST(t1.c0 AS INTEGER), (((t1.c0, t1.c0))<>((t1.c0, t1.c0))), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))) ASC, CASE 0.34628006387324206  WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) THEN (~ (t1.c0)) WHEN ((t1.c1)==(t1.c0)) THEN (NOT (t1.c0)) WHEN t1.c1 COLLATE RTRIM THEN CAST(t1.c0 AS REAL) END LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (json_array_length(((1848016290) BETWEEN (t1.c0) AND (t1.c0)), (t1.c1 IN (t1.c0)))) ORDER BY ((((t1.c0, t1.c0, 0.6373978997509772)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, NULL))) IN (((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))) DESC  NULLS FIRST, (((t1.c0, (((t1.c1, t1.c1)) NOT BETWEEN ((0.7703597425385795, t1.c0)) AND ((t1.c0, t1.c0))), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))>=((CAST(t1.c0 AS INTEGER), (((t1.c0, t1.c0))!=((t1.c0, t1.c0))), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))) ASC, CASE 0.34628006387324206  WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) THEN (~ (t1.c0)) WHEN ((t1.c1)=(t1.c0)) THEN (NOT (t1.c0)) WHEN t1.c1 COLLATE RTRIM THEN CAST(t1.c0 AS REAL) END LIMIT 0;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1)<(t1.c1)))<(t1.c0 COLLATE RTRIM)));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((t1.c1)<(t1.c1)))<(t1.c0 COLLATE RTRIM)))AND(t1.c0))) LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))) NOTNULL)) LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((((t1.c0)AND(t1.c1)))OR(t1.c0)) IN (CAST(t1.c1 AS TEXT)))) ORDER BY (((CAST(t1.c0 AS INTEGER), ((((t1.c1)AND(t1.c0)))OR(t1.c0))))==((CAST(x'bb' AS REAL), (((t1.c0, t1.c0))>=((t1.c1, t1.c1)))))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((t1.c0)AND(t1.c1)))OR(t1.c0)) IN (CAST(t1.c1 AS TEXT)))) ORDER BY (((CAST(t1.c0 AS INTEGER), ((((t1.c1)AND(t1.c0)))OR(t1.c0))))=((CAST(x'bb' AS REAL), (((t1.c0, t1.c0))>=((t1.c1, t1.c1)))))) ASC  NULLS FIRST LIMIT 0X3;
SELECT ALL * FROM t1 WHERE ((((((t1.c0)AND(t1.c1)))OR(t1.c0)) IN (CAST(t1.c1 AS TEXT)))) ORDER BY (((CAST(t1.c0 AS INTEGER), ((((t1.c1)AND(t1.c0)))OR(t1.c0))))==((CAST(x'bb' AS REAL), (((t1.c0, t1.c0))>=((t1.c1, t1.c1)))))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((t1.c0)AND(t1.c1)))OR(t1.c0)) IN (CAST(t1.c1 AS TEXT)))) ORDER BY (((CAST(t1.c0 AS INTEGER), ((((t1.c1)AND(t1.c0)))OR(t1.c0))))=((CAST(x'bb' AS REAL), (((t1.c0, t1.c0))>=((t1.c1, t1.c1)))))) ASC  NULLS FIRST LIMIT 0X3;
SELECT * FROM t1 WHERE (((COALESCE(t1.c1, 0.8319174161007276))>=((~ (x'def0')))));
SELECT DISTINCT * FROM t1 WHERE (((COALESCE(t1.c1, 0.8319174161007276))>((~ (x'def0'))))) ORDER BY ((((t1.c1)|(t1.c1)))||(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST;
SELECT * FROM t1 WHERE (((COALESCE(t1.c1, 0.8319174161007276))>=((~ (x'def0')))));
SELECT DISTINCT * FROM t1 WHERE (((COALESCE(t1.c1, 0.8319174161007276))>((~ (x'def0'))))) ORDER BY ((((t1.c1)|(t1.c1)))||(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST;
SELECT * FROM t1 WHERE (CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS TEXT)) ORDER BY (COALESCE(t1.c0, t1.c1, t1.c0, t1.c1, t1.c1) IN ()) DESC  NULLS FIRST, CAST((t1.c1 IN (t1.c1)) AS TEXT) DESC;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS TEXT)) ORDER BY CASE ((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0))  WHEN (((t1.c0, t1.c0)) BETWEEN (('1173737933', t1.c0)) AND ((t1.c1, t1.c1))) THEN t1.c1 WHEN ((t1.c0)<<(t1.c1)) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END ELSE ((t1.c0)=(t1.c0)) END  NULLS LAST, t1.c0 INTERSECT SELECT * FROM t1 WHERE (((((((((((((t1.c0)GLOB(t1.c1)))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))OR(-252751127)))AND(t1.c1 COLLATE BINARY)))AND((((t1.c1))<((t1.c0))))))OR(t1.c0))) ORDER BY CASE ((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0))  WHEN (((t1.c0, t1.c0)) BETWEEN (('1173737933', t1.c0)) AND ((t1.c1, t1.c1))) THEN t1.c1 WHEN ((t1.c0)<<(t1.c1)) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END ELSE ((t1.c0)=(t1.c0)) END  NULLS LAST, t1.c0;
SELECT * FROM t1 WHERE (CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS TEXT)) ORDER BY (COALESCE(t1.c0, t1.c1, t1.c0, t1.c1, t1.c1) IN ()) DESC  NULLS FIRST, CAST((t1.c1 IN (t1.c1)) AS TEXT) DESC;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (CASE t1.c0  WHEN t1.c1 THEN t1.c0 END IN ());
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (CASE t1.c0  WHEN t1.c1 THEN t1.c0 END IN ()) INTERSECT SELECT * FROM t1 WHERE ((+ (CAST(t1.c1 AS REAL)))) ORDER BY (CASE t1.c0  WHEN t1.c1 THEN t1.c0 END IN ());
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (CASE t1.c0  WHEN t1.c1 THEN t1.c0 END IN ());
SELECT ALL * FROM t1 WHERE ((t1.c1 IN (((t1.c1)*(t1.c1)), NULL, ABS(DISTINCT t1.c1)))) ORDER BY ((((t1.c1)OR('0.28840059555161757')))AND(((t1.c0) ISNULL))) DESC, (((('446513759')+(t1.c0))) IS TRUE), ((LIKELIHOOD(t1.c1, t1.c1)) IS TRUE) ASC;
SELECT DISTINCT * FROM t1 WHERE ((t1.c1 IN (((t1.c1)*(t1.c1)), NULL, ABS(DISTINCT t1.c1)))) ORDER BY ((((t1.c1)OR('0.28840059555161757')))AND(((t1.c0) ISNULL))) DESC, (((('446513759')+(t1.c0))) IS TRUE), ((LIKELIHOOD(t1.c1, t1.c1)) IS TRUE) ASC LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0 IN (t1.c1, 0.8755279326915546)))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(((t1.c1) ISNULL))))AND(((((t1.c1)OR(t1.c1)))OR(t1.c1))))) ORDER BY ((((t1.c1)OR('0.28840059555161757')))AND(((t1.c0) ISNULL))) DESC, (((('446513759')+(t1.c0))) IS TRUE), ((LIKELIHOOD(t1.c1, t1.c1)) IS TRUE) ASC LIMIT 0x3;
SELECT ALL * FROM t1 WHERE ((t1.c1 IN (((t1.c1)*(t1.c1)), NULL, ABS(DISTINCT t1.c1)))) ORDER BY ((((t1.c1)OR('0.28840059555161757')))AND(((t1.c0) ISNULL))) DESC, (((('446513759')+(t1.c0))) IS TRUE), ((LIKELIHOOD(t1.c1, t1.c1)) IS TRUE) ASC;
SELECT * FROM t1 WHERE (json_array_length(((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))) ORDER BY (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1 COLLATE RTRIM))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((json_array_length(((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c1))))AND((NOT (((t1.c1)IS NOT(t1.c0))))))) ORDER BY (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1 COLLATE RTRIM))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((0.7960258449854591)*(t1.c0 COLLATE NOCASE))) ORDER BY (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1 COLLATE RTRIM))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (json_array_length(((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))) ORDER BY (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1 COLLATE RTRIM))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((json_array_length(((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c1))))AND((NOT (((t1.c1)IS NOT(t1.c0))))))) ORDER BY (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1 COLLATE RTRIM))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((0.7960258449854591)*(t1.c0 COLLATE NOCASE))) ORDER BY (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1 COLLATE RTRIM))) ASC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((t1.c1)IS(t1.c1)));
SELECT MIN(t1.c0) FROM t1 WHERE (((((t1.c1)IS(t1.c1)))AND(t1.c0))) LIMIT 0x2;
SELECT COUNT(*) FROM t1 WHERE ((t1.c1 COLLATE NOCASE IN ())) ORDER BY ((TRIM(t1.c0, t1.c1))AND((((t1.c1, t1.c1))==((t1.c0, t1.c0)))))  NULLS FIRST, ((CAST(t1.c1 AS BLOB)) BETWEEN ('O!Bw] ') AND (((t1.c0)>>(t1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c1 COLLATE NOCASE IN ())) ORDER BY ((TRIM(t1.c0, t1.c1))AND((((t1.c1, t1.c1))==((t1.c0, t1.c0)))))  NULLS FIRST, ((CAST(t1.c1 AS BLOB)) BETWEEN ('O!Bw] ') AND (((t1.c0)>>(t1.c0)))) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((((x'' IN ())) NOT BETWEEN (json_array_length(t1.c0)) AND ((((t1.c1))>((t1.c1)))))) ORDER BY ((TRIM(t1.c0, t1.c1))AND((((t1.c1, t1.c1))==((t1.c0, t1.c0)))))  NULLS FIRST, ((CAST(t1.c1 AS BLOB)) BETWEEN ('O!Bw] ') AND (((t1.c0)>>(t1.c0))));
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1, t1.c1, t1.c1, t1.c0)) BETWEEN ((NULLIF(DISTINCT t1.c1, t1.c1), ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)), CAST(t1.c1 AS TEXT), SQLITE_COMPILEOPTION_USED(t1.c0), (t1.c1 IN (t1.c1, t1.c0)), ((t1.c0)LIKE(t1.c1)), (NOT (t1.c1)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))) AND ((t1.c0, (t1.c1 IN (t1.c0)), CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END, CASE t1.c0  WHEN t1.c0 THEN 0.31780084510296447 WHEN t1.c1 THEN t1.c0 END, (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), t1.c1 COLLATE BINARY, CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))) ORDER BY CAST(((NULL)LIKE(t1.c1)) AS TEXT) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1, t1.c1, t1.c1, t1.c0)) BETWEEN ((NULLIF(DISTINCT t1.c1, t1.c1), ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)), CAST(t1.c1 AS TEXT), SQLITE_COMPILEOPTION_USED(t1.c0), (t1.c1 IN (t1.c1, t1.c0)), ((t1.c0)LIKE(t1.c1)), (NOT (t1.c1)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))) AND ((t1.c0, (t1.c1 IN (t1.c0)), CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END, CASE t1.c0  WHEN t1.c0 THEN 0.31780084510296447 WHEN t1.c1 THEN t1.c0 END, (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), t1.c1 COLLATE BINARY, CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))) ORDER BY CAST(((NULL)LIKE(t1.c1)) AS TEXT) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(NULL AS INTEGER)) ORDER BY CAST(((NULL)LIKE(t1.c1)) AS TEXT) ASC;
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1, t1.c1, t1.c1, t1.c0)) BETWEEN ((NULLIF(DISTINCT t1.c1, t1.c1), ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)), CAST(t1.c1 AS TEXT), SQLITE_COMPILEOPTION_USED(t1.c0), (t1.c1 IN (t1.c1, t1.c0)), ((t1.c0)LIKE(t1.c1)), (NOT (t1.c1)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))) AND ((t1.c0, (t1.c1 IN (t1.c0)), CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END, CASE t1.c0  WHEN t1.c0 THEN 0.31780084510296447 WHEN t1.c1 THEN t1.c0 END, (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), t1.c1 COLLATE BINARY, CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))) ORDER BY CAST(((NULL)LIKE(t1.c1)) AS TEXT) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1, t1.c1, t1.c1, t1.c0)) BETWEEN ((NULLIF(DISTINCT t1.c1, t1.c1), ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)), CAST(t1.c1 AS TEXT), SQLITE_COMPILEOPTION_USED(t1.c0), (t1.c1 IN (t1.c1, t1.c0)), ((t1.c0)LIKE(t1.c1)), (NOT (t1.c1)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))) AND ((t1.c0, (t1.c1 IN (t1.c0)), CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END, CASE t1.c0  WHEN t1.c0 THEN 0.31780084510296447 WHEN t1.c1 THEN t1.c0 END, (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), t1.c1 COLLATE BINARY, CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))) ORDER BY CAST(((NULL)LIKE(t1.c1)) AS TEXT) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(NULL AS INTEGER)) ORDER BY CAST(((NULL)LIKE(t1.c1)) AS TEXT) ASC;
SELECT ALL MAX(t1.c0) FROM t1 NOT INDEXED WHERE (((((t1.c1) NOT NULL)) NOT BETWEEN ((- (t1.c0))) AND (((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1))))) ORDER BY ((((t1.c1) IS TRUE)) BETWEEN (((t1.c0)||(t1.c1))) AND (((t1.c0)<=(t1.c1))))  NULLS LAST, ((t1.c0) IS FALSE) COLLATE NOCASE  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((t1.c1) NOT NULL)) NOT BETWEEN ((- (t1.c0))) AND (((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1))))) ORDER BY ((((t1.c1) IS TRUE)) BETWEEN (((t1.c0)||(t1.c1))) AND (((t1.c0)<=(t1.c1))))  NULLS LAST, ((t1.c0) IS FALSE) COLLATE NOCASE  NULLS FIRST LIMIT 0x2;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1, t1.c0)) NOT BETWEEN (((((t1.c0, t1.c1))>((t1.c1, t1.c0))), ((t1.c1)OR(t1.c1)), ((t1.c1)%(t1.c1)))) AND ((((t1.c1) IS TRUE), ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)), t1.c1))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c1, t1.c0)) NOT BETWEEN (((((t1.c0, t1.c1))<>((t1.c1, t1.c0))), ((t1.c1)OR(t1.c1)), ((t1.c1)%(t1.c1)))) AND ((((t1.c1) IS TRUE), ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)), t1.c1))))AND(CAST((x'3b' IN ()) AS NUMERIC)))) ORDER BY ((CAST(t1.c0 AS INTEGER)) NOT BETWEEN ((+ (t1.c1))) AND (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((TRIM(DISTINCT t1.c0, '-652375557'))|(((((t1.c1)OR(t1.c0)))AND(t1.c0))))) ORDER BY ((CAST(t1.c0 AS INTEGER)) NOT BETWEEN ((+ (t1.c1))) AND (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) DESC LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1, t1.c0)) NOT BETWEEN (((((t1.c0, t1.c1))>((t1.c1, t1.c0))), ((t1.c1)OR(t1.c1)), ((t1.c1)%(t1.c1)))) AND ((((t1.c1) IS TRUE), ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)), t1.c1))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c1, t1.c0)) NOT BETWEEN (((((t1.c0, t1.c1))<>((t1.c1, t1.c0))), ((t1.c1)OR(t1.c1)), ((t1.c1)%(t1.c1)))) AND ((((t1.c1) IS TRUE), ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)), t1.c1))))AND(CAST((x'3b' IN ()) AS NUMERIC)))) ORDER BY ((CAST(t1.c0 AS INTEGER)) NOT BETWEEN ((+ (t1.c1))) AND (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((TRIM(DISTINCT t1.c0, '-652375557'))|(((((t1.c1)OR(t1.c0)))AND(t1.c0))))) ORDER BY ((CAST(t1.c0 AS INTEGER)) NOT BETWEEN ((+ (t1.c1))) AND (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) DESC LIMIT 0;
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE ((((((t1.c1 IN (t1.c1)))AND(x'b4')))AND(t1.c0))) ORDER BY (((t1.c0) ISNULL) IN (INSTR(t1.c0, t1.c0))), IFNULL(DISTINCT CAST(t1.c1 AS NUMERIC), CAST(t1.c0 AS BLOB))  NULLS LAST, CASE WHEN (t1.c0 IN (t1.c0)) THEN (+ (t1.c0)) END, CAST(((t1.c1) ISNULL) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((((((t1.c1 IN (t1.c1)))AND(x'b4')))AND(t1.c0)))AND(((((t1.c0) NOTNULL))>((t1.c0 IN ())))))) ORDER BY (((t1.c0) ISNULL) IN (INSTR(t1.c0, t1.c0))), IFNULL(DISTINCT CAST(t1.c1 AS NUMERIC), CAST(t1.c0 AS BLOB))  NULLS LAST, CASE WHEN (t1.c0 IN (t1.c0)) THEN (+ (t1.c0)) END, CAST(((t1.c1) ISNULL) AS NUMERIC)  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS INTEGER)) BETWEEN (t1.c0 COLLATE NOCASE) AND (NULL))) ORDER BY 0xffffffffded74b97  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER)) BETWEEN (t1.c0 COLLATE NOCASE) AND (NULL)))AND((((t1.c1 IN (t1.c1, t1.c1))) NOT BETWEEN (((t1.c1)<=(t1.c1))) AND (CAST(t1.c0 AS TEXT)))))) ORDER BY 0xffffffffded74b97  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS INTEGER)) BETWEEN (t1.c0 COLLATE NOCASE) AND (NULL))) ORDER BY 0xffffffffded74b97  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER)) BETWEEN (t1.c0 COLLATE NOCASE) AND (NULL)))AND((((t1.c1 IN (t1.c1, t1.c1))) NOT BETWEEN (((t1.c1)<=(t1.c1))) AND (CAST(t1.c0 AS TEXT)))))) ORDER BY 0xffffffffded74b97  NULLS LAST LIMIT 0;
SELECT MAX(t1.c0) FROM t1 WHERE (CAST((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))) AS INTEGER)) ORDER BY (((((t1.c1, t1.c1, 0.07240005525033433, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c0, t1.c1, 0.9556045049605237))))GLOB(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))  NULLS FIRST, ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))) AS INTEGER)) ORDER BY (((((t1.c1, t1.c1, 0.07240005525033433, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c0, t1.c1, 0.9556045049605237))))GLOB(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))  NULLS FIRST, ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) COLLATE NOCASE ASC  NULLS LAST INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (CAST(CAST(t1.c1 AS REAL) AS NUMERIC)) ORDER BY (((((t1.c1, t1.c1, 0.07240005525033433, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c0, t1.c1, 0.9556045049605237))))GLOB(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))  NULLS FIRST, ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)AND(((0.29355933138569734) BETWEEN (t1.c0) AND (t1.c1)))))OR(CASE t1.c0  WHEN t1.c1 THEN t1.c1 END)))AND(((t1.c1)==(t1.c0)))));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)AND(((0.29355933138569734) BETWEEN (t1.c0) AND (t1.c1)))))OR(CASE t1.c0  WHEN t1.c1 THEN t1.c1 END)))AND(((t1.c1)=(t1.c0)))))AND(((t1.c0 COLLATE BINARY)<=(((t1.c1)<(t1.c0))))))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c1 WHEN '' THEN t1.c1 END) BETWEEN ((t1.c0 IN (t1.c0))) AND (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN 0.29517768885018447 WHEN t1.c0 THEN t1.c1 END)) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((((t1.c0)/(t1.c1)) IN ())) ORDER BY DATE(CAST(t1.c0 AS NUMERIC), t1.c1, ((t1.c0) NOT NULL)) DESC, ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))%(((t1.c1)<>(t1.c1)))) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)/(t1.c1)) IN ()))AND(CAST((((t1.c0, t1.c0, t1.c1))=(('-1628827064', t1.c0, t1.c0))) AS BLOB)))) ORDER BY t1.c0  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((t1.c0)/(t1.c1)) IN ())) ORDER BY DATE(CAST(t1.c0 AS NUMERIC), t1.c1, ((t1.c0) NOT NULL)) DESC, ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))%(((t1.c1)<>(t1.c1)))) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)/(t1.c1)) IN ()))AND(CAST((((t1.c0, t1.c0, t1.c1))=(('-1628827064', t1.c0, t1.c0))) AS BLOB)))) ORDER BY t1.c0  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((+ (((t1.c0)==(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((+ (((t1.c0)==(t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1 IN ()))AND((- (t1.c1))))) ORDER BY 0.684920537938966  NULLS LAST, ((~ (t1.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c1 IN ()))AND((- (t1.c1)))))AND((((t1.c1, t1.c0)) BETWEEN (((t1.c1 IN ()), ((t1.c0)-(t1.c0)))) AND ((((t1.c1) NOT BETWEEN (t1.c1) AND (NULL)), ((t1.c1) NOT NULL))))))) ORDER BY 0.684920537938966  NULLS LAST, ((~ (t1.c0)) IN ()) ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c1 AS BLOB) COLLATE RTRIM) ORDER BY 0.684920537938966  NULLS LAST, ((~ (t1.c0)) IN ()) ASC  NULLS LAST LIMIT 2;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS BLOB))&(t1.c0 COLLATE NOCASE)));
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c0 AS BLOB))&(t1.c0 COLLATE NOCASE)))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) COLLATE RTRIM)));
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS BLOB))&(t1.c0 COLLATE NOCASE)));
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c0 AS BLOB))&(t1.c0 COLLATE NOCASE)))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) COLLATE RTRIM)));
SELECT COUNT(*) FROM t1 WHERE (CAST(LIKELIHOOD(t1.c0, t1.c1) AS NUMERIC)) ORDER BY (+ ((NOT (t1.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (CAST(LIKELIHOOD(t1.c0, t1.c1) AS NUMERIC)) ORDER BY (((t1.c1)) NOT BETWEEN ((CASE WHEN '-759653569' THEN t1.c0 END)) AND (((- (t1.c0))))) DESC  NULLS FIRST, ((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(((t1.c1)<(t1.c1)))) DESC  NULLS FIRST, t1.c0 LIMIT 3;
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c1, t1.c0))<=((1486003871, t1.c0))) IN ('830816951', '-932626568')) ASC, TRIM(DISTINCT '(e', t1.c1) COLLATE RTRIM DESC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c1, t1.c0))<=((0x58929e9f, t1.c0))) IN ('830816951', '-932626568')) ASC, TRIM(DISTINCT '(e', t1.c1) COLLATE RTRIM DESC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST(((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) AS REAL)) ORDER BY CAST(((t1.c0) BETWEEN (t1.c1) AND (x'07')) AS NUMERIC)  NULLS LAST, CASE (- (t1.c0))  WHEN ((t1.c1)&(t1.c0)) THEN t1.c1 WHEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN CASE t1.c0  WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END WHEN (NOT (t1.c1)) THEN ((t1.c1)!=(t1.c0)) END;
SELECT MAX(t1.c0) FROM t1 WHERE (CAST(((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) AS REAL)) ORDER BY (((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, t1.c0, ((t1.c1) IS FALSE)))>((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, CAST(t1.c0 AS TEXT), CAST(t1.c0 AS BLOB)))) ASC LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((t1.c1 COLLATE RTRIM) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1 COLLATE RTRIM) IS TRUE))AND((NOT (CASE WHEN t1.c1 THEN t1.c1 END))))) ORDER BY rtreenode(((((((t1.c1)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), 0.716934435199078), '.1>g䑠' COLLATE RTRIM ASC  NULLS LAST, 0.3358485133436817 LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (LAST_INSERT_ROWID()) ORDER BY rtreenode(((((((t1.c1)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), 0.716934435199078), '.1>g䑠' COLLATE RTRIM ASC  NULLS LAST, 0.3358485133436817 LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((t1.c1 COLLATE RTRIM) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1 COLLATE RTRIM) IS TRUE))AND((NOT (CASE WHEN t1.c1 THEN t1.c1 END))))) ORDER BY rtreenode(((((((t1.c1)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), 0.716934435199078), '.1>g䑠' COLLATE RTRIM ASC  NULLS LAST, 0.3358485133436817 LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (LAST_INSERT_ROWID()) ORDER BY rtreenode(((((((t1.c1)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), 0.716934435199078), '.1>g䑠' COLLATE RTRIM ASC  NULLS LAST, 0.3358485133436817 LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (x'a2');
SELECT DISTINCT * FROM t1 WHERE (((x'a2')AND(CASE ((t1.c1)||(t1.c0))  WHEN 0xffffffff968d6300 THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) WHEN ((t1.c1)>(t1.c1)) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c1) NOT NULL) ELSE (NOT (t1.c1)) END))) ORDER BY '-20870001' INTERSECT SELECT DISTINCT * FROM t1 WHERE (HEX(DISTINCT ((t1.c1)IS(t1.c0)))) ORDER BY '-20870001';
SELECT ALL * FROM t1 WHERE (x'a2');
SELECT DISTINCT * FROM t1 WHERE (((x'a2')AND(CASE ((t1.c1)||(t1.c0))  WHEN 0xffffffff968d6300 THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) WHEN ((t1.c1)>(t1.c1)) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c1) NOT NULL) ELSE (NOT (t1.c1)) END))) ORDER BY '-20870001' INTERSECT SELECT DISTINCT * FROM t1 WHERE (HEX(DISTINCT ((t1.c1)IS(t1.c0)))) ORDER BY '-20870001';
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END COLLATE RTRIM);
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END COLLATE RTRIM);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE RTRIM) IS TRUE));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c0 COLLATE RTRIM) IS TRUE))AND(((((((((((t1.c0)<(t1.c1)))OR(((t1.c0)||(t1.c0)))))OR(((t1.c1)+(t1.c0)))))AND((((t1.c0))>=((t1.c0))))))OR((t1.c0 IN (t1.c0))))))) ORDER BY (- ((~ (t1.c1)))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE NOCASE)>(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN '41683678' THEN t1.c0 END))) ORDER BY (- ((~ (t1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((NULL IN ())) ORDER BY ((((t1.c1)IS NOT(0.26592488416810456)))<=((t1.c1 IN (t1.c0)))) ASC;
SELECT DISTINCT * FROM t1 WHERE ((NULL IN ())) ORDER BY ((((t1.c1)IS NOT(0.26592488416810456)))<=((t1.c1 IN (t1.c0)))) ASC LIMIT 0;
SELECT ALL * FROM t1 WHERE ((NULL IN ())) ORDER BY ((((t1.c1)IS NOT(0.26592488416810456)))<=((t1.c1 IN (t1.c0)))) ASC;
SELECT DISTINCT * FROM t1 WHERE ((NULL IN ())) ORDER BY ((((t1.c1)IS NOT(0.26592488416810456)))<=((t1.c1 IN (t1.c0)))) ASC LIMIT 0;
SELECT * FROM t1 WHERE ((+ ((((t1.c1, x'', t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0)) AND ((x'', t1.c0, t1.c0, t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((+ ((((t1.c1, x'', t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0)) AND ((x'', t1.c0, t1.c0, t1.c1)))))) ORDER BY CASE CASE t1.c0  WHEN t1.c0 THEN t1.c0 END  WHEN HEX(t1.c0) THEN CAST(t1.c0 AS INTEGER) WHEN (((t1.c0))<>((t1.c1))) THEN ((((t1.c1)AND(t1.c0)))OR(t1.c1)) WHEN (((t1.c0, t1.c1))>=((t1.c0, t1.c1))) THEN ((t1.c0)OR(t1.c0)) WHEN ((t1.c1) IS FALSE) THEN ('-305989446' IN (t1.c0)) WHEN ((((((((t1.c0)AND(t1.c0)))OR(NULL)))OR(t1.c1)))AND('o^gHs')) THEN ((((t1.c0)OR(t1.c1)))OR(t1.c1)) END  NULLS FIRST;
SELECT * FROM t1 WHERE ((+ ((((t1.c1, x'', t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0)) AND ((x'', t1.c0, t1.c0, t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((+ ((((t1.c1, x'', t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0)) AND ((x'', t1.c0, t1.c0, t1.c1)))))) ORDER BY CASE CASE t1.c0  WHEN t1.c0 THEN t1.c0 END  WHEN HEX(t1.c0) THEN CAST(t1.c0 AS INTEGER) WHEN (((t1.c0))<>((t1.c1))) THEN ((((t1.c1)AND(t1.c0)))OR(t1.c1)) WHEN (((t1.c0, t1.c1))>=((t1.c0, t1.c1))) THEN ((t1.c0)OR(t1.c0)) WHEN ((t1.c1) IS FALSE) THEN ('-305989446' IN (t1.c0)) WHEN ((((((((t1.c0)AND(t1.c0)))OR(NULL)))OR(t1.c1)))AND('o^gHs')) THEN ((((t1.c0)OR(t1.c1)))OR(t1.c1)) END  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))<=((((t1.c0)<>(t1.c0))))));
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))==((((t1.c0)<>(t1.c0))))))AND((IFNULL(563154392, t1.c0) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), (t1.c0 IN (t1.c1))))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)) BETWEEN ((t1.c1)) AND ((0.5677599101515679))) IN ()));
SELECT * FROM t1 WHERE ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))<=((((t1.c0)<>(t1.c0))))));
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))==((((t1.c0)<>(t1.c0))))))AND((IFNULL(563154392, t1.c0) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), (t1.c0 IN (t1.c1))))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)) BETWEEN ((t1.c1)) AND ((0.5677599101515679))) IN ()));
SELECT MIN(t1.c0) FROM t1 WHERE (x'');
SELECT MIN(t1.c0) FROM t1 WHERE (x'') INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN ((((t1.c0, x'', t1.c0, 0.3520861548498885, t1.c0))<=((t1.c1, t1.c1, t1.c1, t1.c1, t1.c1)))) AND (t1.c0)));
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))AND((~ (t1.c0)))))OR(x'12a9' COLLATE RTRIM)))AND(t1.c1 COLLATE RTRIM))) ORDER BY CASE WHEN MAX(t1.c1, t1.c1, t1.c1, t1.c0, t1.c0, t1.c1) THEN ((t1.c0) IS TRUE) WHEN t1.c0 COLLATE NOCASE THEN ((t1.c1) ISNULL) WHEN t1.c0 THEN ((t1.c0)-(0.4563280993751865)) END;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))AND((~ (t1.c0)))))OR(x'12a9' COLLATE RTRIM)))AND(t1.c1 COLLATE RTRIM)))AND(((((t1.c1) IS FALSE)) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 END) AND (((t1.c0)%('-1751615192'))))))) ORDER BY CASE WHEN MAX(t1.c1, t1.c1, t1.c1, t1.c0, t1.c0, t1.c1) THEN ((t1.c0) IS TRUE) WHEN t1.c0 COLLATE NOCASE THEN ((t1.c1) ISNULL) WHEN t1.c0 THEN ((t1.c0)-(0.4563280993751865)) END;
SELECT MAX(t1.c0) FROM t1 WHERE ((((t1.c1 IN (t1.c0, t1.c0))) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) AND (((t1.c1) NOT NULL))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((t1.c1 IN (t1.c0, t1.c0))) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) AND (((t1.c1) NOT NULL)))) ORDER BY ((LIKELIHOOD(DISTINCT t1.c1, t1.c1)) IS TRUE), ((x'12eb') NOT BETWEEN (json_quote(t1.c1)) AND ((((t1.c1, NULL))>((484152878, t1.c1))))) DESC INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((load_extension(t1.c0, t1.c1)) BETWEEN (((t1.c1)|(0.774960199848702))) AND (((t1.c0) IS FALSE)))) ORDER BY ((LIKELIHOOD(DISTINCT t1.c1, t1.c1)) IS TRUE), ((x'12eb') NOT BETWEEN (json_quote(t1.c1)) AND ((((t1.c1, NULL))>((484152878, t1.c1))))) DESC;
SELECT MIN(t1.c0) FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOT BETWEEN ((NOT (t1.c0))) AND ((t1.c1 IN (t1.c1))))) ORDER BY CAST(t1.c1 AS TEXT) DESC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((CAST(t1.c0 AS BLOB)) NOT BETWEEN ((NOT (t1.c0))) AND ((t1.c1 IN (t1.c1)))))AND(((((t1.c0) NOT NULL))>(t1.c1))))) ORDER BY (((t1.c1)>>(t1.c0)) IN (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END, CAST(t1.c1 AS NUMERIC))) LIMIT 0 INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE (t1.c0) ORDER BY (((t1.c1)>>(t1.c0)) IN (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END, CAST(t1.c1 AS NUMERIC))) LIMIT 0;
SELECT MIN(t1.c1) FROM t1 WHERE (CASE WHEN ((((0.25818595045288395)OR(t1.c0)))OR(t1.c0)) THEN ((t1.c1) NOT NULL) WHEN (t1.c1 IN (t1.c1)) THEN ((t1.c0)>=(t1.c1)) END) ORDER BY (((t1.c0)>(t1.c1)) IN ((((t1.c1))==((t1.c1))), ((-1.04042863E8) ISNULL))) ASC;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((CASE WHEN ((((0.25818595045288395)OR(t1.c0)))OR(t1.c0)) THEN ((t1.c1) NOT NULL) WHEN (t1.c1 IN (t1.c1)) THEN ((t1.c0)>=(t1.c1)) END)AND(((((((t1.c1)AND(t1.c1)))OR(t1.c1))) NOT BETWEEN (t1.c0) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))))) ORDER BY (((t1.c0)>(t1.c1)) IN ((((t1.c1))==((t1.c1))), ((-1.04042863E8) ISNULL))) ASC LIMIT 0x1 INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE BINARY) IS FALSE)) ORDER BY (((t1.c0)>(t1.c1)) IN ((((t1.c1))==((t1.c1))), ((-1.04042863E8) ISNULL))) ASC LIMIT 1;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((t1.c1 COLLATE NOCASE)<=(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((t1.c1 COLLATE NOCASE)<=(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))AND(((t1.c1)<(t1.c0)) COLLATE RTRIM))) ORDER BY (((((((+ (t1.c0)))OR(((t1.c0)IS(t1.c0)))))OR(CAST(t1.c0 AS INTEGER))))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END));
SELECT ALL * FROM t1 WHERE (CAST((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) AS BLOB));
SELECT ALL * FROM t1 WHERE (((CAST((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) AS BLOB))AND(CASE WHEN t1.c1 THEN '-305989446' WHEN '2054253131' THEN 0.7414020023394724 ELSE t1.c1 END COLLATE BINARY))) ORDER BY (((t1.c1) NOT BETWEEN (875432282) AND (t1.c0)) IN ()), UPPER(DISTINCT CAST(t1.c0 AS TEXT)) LIMIT 0X3 INTERSECT SELECT * FROM t1 WHERE ((((('715179311')!=(t1.c0)))|(((NULL) NOT BETWEEN ('-118585461') AND (t1.c0))))) ORDER BY (((t1.c1) NOT BETWEEN (0x342e095a) AND (t1.c0)) IN ()), UPPER(DISTINCT CAST(t1.c0 AS TEXT)) LIMIT 0x3;
SELECT ALL * FROM t1 WHERE (CAST((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) AS BLOB));
SELECT ALL * FROM t1 WHERE (((CAST((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) AS BLOB))AND(CASE WHEN t1.c1 THEN '-305989446' WHEN '2054253131' THEN 0.7414020023394724 ELSE t1.c1 END COLLATE BINARY))) ORDER BY (((t1.c1) NOT BETWEEN (875432282) AND (t1.c0)) IN ()), UPPER(DISTINCT CAST(t1.c0 AS TEXT)) LIMIT 0X3 INTERSECT SELECT * FROM t1 WHERE ((((('715179311')!=(t1.c0)))|(((NULL) NOT BETWEEN ('-118585461') AND (t1.c0))))) ORDER BY (((t1.c1) NOT BETWEEN (0x342e095a) AND (t1.c0)) IN ()), UPPER(DISTINCT CAST(t1.c0 AS TEXT)) LIMIT 0x3;
SELECT ALL * FROM t1 WHERE ((NOT ((NOT (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((NOT ((NOT (t1.c1)))))AND(((((t1.c0)GLOB(t1.c0)))OR(((t1.c0) IS FALSE)))))) ORDER BY CAST(0x32e5b185 AS BLOB), ((CAST(t1.c0 AS TEXT)) BETWEEN (CASE WHEN 0.9776004503069138 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END) AND (((t1.c1) NOT NULL))), t1.c0 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY CAST(853913989 AS BLOB), ((CAST(t1.c0 AS TEXT)) BETWEEN (CASE WHEN 0.9776004503069138 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END) AND (((t1.c1) NOT NULL))), t1.c0 ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((NOT ((NOT (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((NOT ((NOT (t1.c1)))))AND(((((t1.c0)GLOB(t1.c0)))OR(((t1.c0) IS FALSE)))))) ORDER BY CAST(0x32e5b185 AS BLOB), ((CAST(t1.c0 AS TEXT)) BETWEEN (CASE WHEN 0.9776004503069138 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END) AND (((t1.c1) NOT NULL))), t1.c0 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY CAST(853913989 AS BLOB), ((CAST(t1.c0 AS TEXT)) BETWEEN (CASE WHEN 0.9776004503069138 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END) AND (((t1.c1) NOT NULL))), t1.c0 ASC  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE (t1.c1) ORDER BY x'4c' ASC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (t1.c1) ORDER BY (((t1.c0) ISNULL) IN ()) DESC  NULLS FIRST, ((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(((t1.c1) IS TRUE))))OR(CAST(t1.c1 AS TEXT)))  NULLS LAST, CAST(((t1.c1) IS FALSE) AS INTEGER);
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY (((((((0.29355933138569734)OR(t1.c0)))AND(t1.c0)), (~ (374672990)), t1.c0 COLLATE NOCASE))!=((((t1.c0)GLOB(t1.c0)), ((((t1.c0)AND(t1.c0)))OR(t1.c1)), CASE WHEN 0.26173224605901857 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)));
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)AND(((0.3443929231456865)/((t1.c1 IN (t1.c0, t1.c1))))))) ORDER BY ((t1.c1)LIKE(((t1.c1)>>(t1.c1))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY (((((((0.29355933138569734)OR(t1.c0)))AND(t1.c0)), (~ (374672990)), t1.c0 COLLATE NOCASE))!=((((t1.c0)GLOB(t1.c0)), ((((t1.c0)AND(t1.c0)))OR(t1.c1)), CASE WHEN 0.26173224605901857 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)));
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)AND(((0.3443929231456865)/((t1.c1 IN (t1.c0, t1.c1))))))) ORDER BY ((t1.c1)LIKE(((t1.c1)>>(t1.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE (t1.c1 IN (t1.c1))  WHEN CAST(t1.c0 AS REAL) THEN NULL END) ORDER BY CAST(t1.c1 AS REAL) ASC  NULLS LAST, (NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))), CASE WHEN t1.c0 THEN NULLIF(t1.c1, t1.c0) ELSE (('!') NOTNULL) END  NULLS FIRST, ((LIKELY(DISTINCT t1.c1))<<((t1.c1 IN (t1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE (t1.c1 IN (t1.c1))  WHEN CAST(t1.c0 AS REAL) THEN NULL END) ORDER BY CAST(t1.c1 AS REAL) ASC  NULLS LAST, (NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))), CASE WHEN t1.c0 THEN NULLIF(t1.c1, t1.c0) ELSE (('!') NOTNULL) END  NULLS FIRST, ((LIKELY(DISTINCT t1.c1))<<((t1.c1 IN (t1.c0)))) LIMIT 0;
SELECT MAX(t1.c0) FROM t1 WHERE ((- (json_patch(t1.c1, t1.c0))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((- (json_patch(t1.c1, t1.c0)))) ORDER BY CASE ((t1.c1)<(t1.c0))  WHEN CAST(t1.c0 AS BLOB) THEN LIKELIHOOD(t1.c0, t1.c0) END DESC LIMIT 0X0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((+ (t1.c0))) NOT BETWEEN ((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1)))) AND ((((t1.c1))!=((x''))))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((+ (t1.c0))) NOT BETWEEN ((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1)))) AND ((((t1.c1))!=((x''))))))AND(CASE WHEN CAST(t1.c0 AS BLOB) THEN t1.c1 WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN (((x'73'))<=((t1.c0))) ELSE UNLIKELY(t1.c1) END)));
SELECT ALL * FROM t1 WHERE (LIKELY(HEX(t1.c1)));
SELECT DISTINCT * FROM t1 WHERE (LIKELY(HEX(t1.c1))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (HEX(((((t1.c1)AND(t1.c1)))OR(t1.c0)))) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (LIKELY(HEX(t1.c1)));
SELECT DISTINCT * FROM t1 WHERE (LIKELY(HEX(t1.c1))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (HEX(((((t1.c1)AND(t1.c1)))OR(t1.c0)))) LIMIT 0x0;
SELECT * FROM t1 WHERE (((CAST(0.36726302223480745 AS NUMERIC))%(((t1.c0)*(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(0.36726302223480745 AS NUMERIC))%(((t1.c0)*(t1.c1)))))AND((NOT (CAST(t1.c1 AS TEXT)))))) ORDER BY t1.c1 ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY t1.c1 ASC;
SELECT * FROM t1 WHERE (((CAST(0.36726302223480745 AS NUMERIC))%(((t1.c0)*(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(0.36726302223480745 AS NUMERIC))%(((t1.c0)*(t1.c1)))))AND((NOT (CAST(t1.c1 AS TEXT)))))) ORDER BY t1.c1 ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY t1.c1 ASC;
SELECT ALL * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '270520835' WHEN 0.39094220778957445 THEN 0.2738906249293016 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)AND((NOT (NULL)))))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY CAST(t1.c1 AS TEXT) COLLATE NOCASE COLLATE NOCASE, (((('tLdCw') IS FALSE)) ISNULL)  NULLS LAST;
SELECT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '270520835' WHEN 0.39094220778957445 THEN 0.2738906249293016 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)AND((NOT (NULL)))))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY ((LIKELIHOOD(x'41', t1.c1)) BETWEEN (0Xffffffffae5e9861) AND (t1.c0)) ASC  NULLS FIRST, HEX(((t1.c1)IS(t1.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '270520835' WHEN 0.39094220778957445 THEN 0.2738906249293016 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)AND((NOT (NULL)))))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY CAST(t1.c1 AS TEXT) COLLATE NOCASE COLLATE NOCASE, (((('tLdCw') IS FALSE)) ISNULL)  NULLS LAST;
SELECT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '270520835' WHEN 0.39094220778957445 THEN 0.2738906249293016 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)AND((NOT (NULL)))))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY ((LIKELIHOOD(x'41', t1.c1)) BETWEEN (0Xffffffffae5e9861) AND (t1.c0)) ASC  NULLS FIRST, HEX(((t1.c1)IS(t1.c1))) DESC  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1 WHERE (CASE t1.c1  WHEN x'' THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END COLLATE BINARY);
SELECT MIN(t1.c1) FROM t1 WHERE (CASE t1.c1  WHEN x'' THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END COLLATE BINARY) ORDER BY ((((t1.c1) NOTNULL))||((~ (t1.c1))))  NULLS LAST, ((((((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND((NOT (t1.c1)))))OR(CAST(t1.c1 AS TEXT))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((((t1.c0, t1.c0, t1.c1))>=(('-1148669192', 0.7721279231278595, t1.c0))))) DESC LIMIT 2 INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (CASE WHEN (((t1.c1))<=((t1.c0))) THEN ((t1.c0) NOT NULL) END) ORDER BY ((((t1.c1) NOTNULL))||((~ (t1.c1))))  NULLS LAST, ((((((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND((NOT (t1.c1)))))OR(CAST(t1.c1 AS TEXT))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((((t1.c0, t1.c0, t1.c1))>=(('-1148669192', 0.7721279231278595, t1.c0))))) DESC LIMIT 2;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CAST(t1.c1 AS INTEGER)) ORDER BY (((~ (t1.c1))) NOT NULL), ((2109462779)LIKE(t1.c1 COLLATE BINARY));
SELECT MIN(t1.c0) FROM t1 WHERE (((CAST(t1.c1 AS INTEGER))AND(x''))) ORDER BY (((~ (t1.c1))) NOT NULL), ((0x7dbbd8fb)LIKE(t1.c1 COLLATE BINARY)) LIMIT 0X1;
SELECT * FROM t1 WHERE (CAST((('-374628716')<=(t1.c1)) AS REAL));
SELECT DISTINCT * FROM t1 WHERE (CAST((('-374628716')<=(t1.c1)) AS REAL)) ORDER BY ((((((((t1.c0 COLLATE NOCASE)OR((t1.c1 IN ()))))OR((((t1.c0))<((t1.c0))))))AND(((t1.c0)<<(t1.c1)))))AND(((t1.c1) IS FALSE))) ASC LIMIT 0x1;
SELECT * FROM t1 WHERE (CAST((('-374628716')<=(t1.c1)) AS REAL));
SELECT DISTINCT * FROM t1 WHERE (CAST((('-374628716')<=(t1.c1)) AS REAL)) ORDER BY ((((((((t1.c0 COLLATE NOCASE)OR((t1.c1 IN ()))))OR((((t1.c0))<((t1.c0))))))AND(((t1.c0)<<(t1.c1)))))AND(((t1.c1) IS FALSE))) ASC LIMIT 0x1;
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c1 COLLATE NOCASE IN (CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN 'L驉bo' END)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((t1.c1 COLLATE NOCASE IN (CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN 'L驉bo' END))) ORDER BY (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) IN (CASE t1.c1  WHEN t1.c1 THEN 0.5152346188479202 ELSE t1.c0 END))  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((((((((((((((t1.c0)AND(-3.9906475E8)))OR(t1.c1)))AND(x'0f')))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(1.08318599E9))) ORDER BY (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) IN (CASE t1.c1  WHEN t1.c1 THEN 0.5152346188479202 ELSE t1.c0 END))  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (CAST((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))) AS TEXT));
SELECT * FROM t1 WHERE (CAST((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))) AS TEXT)) ORDER BY ((((0.8726851657812799 IN (t1.c1)), ((t1.c0) ISNULL)))<=((t1.c0, t1.c0)))  NULLS FIRST, CAST(t1.c0 AS TEXT)  NULLS LAST, CAST(((((t1.c1)AND(t1.c0)))OR(t1.c1)) AS INTEGER) DESC LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (CAST((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))) AS TEXT));
SELECT * FROM t1 WHERE (CAST((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))) AS TEXT)) ORDER BY ((((0.8726851657812799 IN (t1.c1)), ((t1.c0) ISNULL)))<=((t1.c0, t1.c0)))  NULLS FIRST, CAST(t1.c0 AS TEXT)  NULLS LAST, CAST(((((t1.c1)AND(t1.c0)))OR(t1.c1)) AS INTEGER) DESC LIMIT 0X2;
SELECT * FROM t1 WHERE (((((t1.c0) ISNULL))<(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) ISNULL))<(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND(CASE WHEN ((((((t1.c0)AND(x'2f')))OR(t1.c1)))AND(t1.c0)) THEN CAST(t1.c0 AS NUMERIC) END)));
SELECT * FROM t1 WHERE (((((t1.c0) ISNULL))<(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) ISNULL))<(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND(CASE WHEN ((((((t1.c0)AND(x'2f')))OR(t1.c1)))AND(t1.c0)) THEN CAST(t1.c0 AS NUMERIC) END)));
SELECT * FROM t1 WHERE (((((CASE WHEN t1.c0 THEN '-832560007' ELSE 0.8878775773572767 END)OR(((t1.c1)<<(t1.c0)))))AND(json_patch(t1.c0, t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (((((CASE WHEN t1.c0 THEN '-832560007' ELSE 0.8878775773572767 END)OR(((t1.c1)<<(t1.c0)))))AND(json_patch(t1.c0, t1.c0)))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))IS((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))))) LIMIT 2;
SELECT * FROM t1 WHERE (((((CASE WHEN t1.c0 THEN '-832560007' ELSE 0.8878775773572767 END)OR(((t1.c1)<<(t1.c0)))))AND(json_patch(t1.c0, t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (((((CASE WHEN t1.c0 THEN '-832560007' ELSE 0.8878775773572767 END)OR(((t1.c1)<<(t1.c0)))))AND(json_patch(t1.c0, t1.c0)))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))IS((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))))) LIMIT 2;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1, 0.3072857428216784)) NOT BETWEEN ((CAST(t1.c1 AS NUMERIC), ((((((t1.c0)AND(x'')))AND(0.1984565397845247)))AND(t1.c1)), (t1.c1 IN (t1.c0)))) AND (((NOT (t1.c1)), ((((t1.c0)AND(t1.c1)))AND(t1.c0)), t1.c1 COLLATE NOCASE)))) ORDER BY t1.c1 DESC;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, t1.c1, 0.3072857428216784)) NOT BETWEEN ((CAST(t1.c1 AS NUMERIC), ((((((t1.c0)AND(x'')))AND(0.1984565397845247)))AND(t1.c1)), (t1.c1 IN (t1.c0)))) AND (((NOT (t1.c1)), ((((t1.c0)AND(t1.c1)))AND(t1.c0)), t1.c1 COLLATE NOCASE)))) ORDER BY t1.c1 DESC LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)>>(t1.c1)))-(CAST(t1.c1 AS TEXT)))) ORDER BY t1.c1 DESC LIMIT 0X3;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1, 0.3072857428216784)) NOT BETWEEN ((CAST(t1.c1 AS NUMERIC), ((((((t1.c0)AND(x'')))AND(0.1984565397845247)))AND(t1.c1)), (t1.c1 IN (t1.c0)))) AND (((NOT (t1.c1)), ((((t1.c0)AND(t1.c1)))AND(t1.c0)), t1.c1 COLLATE NOCASE)))) ORDER BY t1.c1 DESC;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, t1.c1, 0.3072857428216784)) NOT BETWEEN ((CAST(t1.c1 AS NUMERIC), ((((((t1.c0)AND(x'')))AND(0.1984565397845247)))AND(t1.c1)), (t1.c1 IN (t1.c0)))) AND (((NOT (t1.c1)), ((((t1.c0)AND(t1.c1)))AND(t1.c0)), t1.c1 COLLATE NOCASE)))) ORDER BY t1.c1 DESC LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)>>(t1.c1)))-(CAST(t1.c1 AS TEXT)))) ORDER BY t1.c1 DESC LIMIT 0X3;
SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ((+ (t1.c1))) AND ('-415052413')));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ((+ (t1.c1))) AND ('-415052413'))) ORDER BY (t1.c1 COLLATE BINARY IN ()) ASC  NULLS FIRST, (t1.c1 COLLATE NOCASE IN ())  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((CAST(t1.c0 AS REAL))AND(((t1.c0)<=(t1.c1)))))AND(((t1.c1)<<(t1.c0))))) ORDER BY (t1.c1 COLLATE BINARY IN ()) ASC  NULLS FIRST, (t1.c1 COLLATE NOCASE IN ())  NULLS LAST LIMIT 0x2;
SELECT COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c1 AS TEXT) AS INTEGER)) ORDER BY (((t1.c0, t1.c0)) BETWEEN ((LIKELY(t1.c1), 0.01809439878986785)) AND ((t1.c1 COLLATE RTRIM, ((t1.c0) IS FALSE)))) DESC  NULLS LAST, 1956082742 COLLATE RTRIM  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CAST(CAST(t1.c1 AS TEXT) AS INTEGER))AND((- (((t1.c1)IS(t1.c1))))))) ORDER BY (((t1.c0, t1.c0)) BETWEEN ((LIKELY(t1.c1), 0.01809439878986785)) AND ((t1.c1 COLLATE RTRIM, ((t1.c0) IS FALSE)))) DESC  NULLS LAST, 0X74977436 COLLATE RTRIM  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((t1.c0)AND(t1.c0))) IS TRUE));
SELECT ALL * FROM t1 WHERE (((((t1.c0)AND(t1.c0))) IS TRUE)) ORDER BY (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, ((NULL) NOT NULL), '')) AND ((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)), (((t1.c0, t1.c1))!=((NULL, t1.c0))), CAST(t1.c1 AS BLOB))))  NULLS LAST, (('224413799') BETWEEN ((((x'd6'))>((t1.c0)))) AND ((t1.c0 IN (t1.c1)))) ASC  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t1 WHERE (((((t1.c0)AND(t1.c0))) IS TRUE));
SELECT ALL * FROM t1 WHERE (((((t1.c0)AND(t1.c0))) IS TRUE)) ORDER BY (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, ((NULL) NOT NULL), '')) AND ((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)), (((t1.c0, t1.c1))!=((NULL, t1.c0))), CAST(t1.c1 AS BLOB))))  NULLS LAST, (('224413799') BETWEEN ((((x'd6'))>((t1.c0)))) AND ((t1.c0 IN (t1.c1)))) ASC  NULLS FIRST LIMIT 3;
SELECT * FROM t1 WHERE (UPPER(CASE t1.c0  WHEN t1.c1 THEN '-1133842734' ELSE t1.c1 END));
SELECT ALL * FROM t1 WHERE (((UPPER(CASE t1.c0  WHEN t1.c1 THEN '-1133842734' ELSE t1.c1 END))AND(t1.c1 COLLATE NOCASE))) INTERSECT SELECT ALL * FROM t1 WHERE (((CAST(0.9473615383779248 AS TEXT))<=(((t1.c1) NOTNULL))));
SELECT * FROM t1 WHERE (UPPER(CASE t1.c0  WHEN t1.c1 THEN '-1133842734' ELSE t1.c1 END));
SELECT ALL * FROM t1 WHERE (((UPPER(CASE t1.c0  WHEN t1.c1 THEN '-1133842734' ELSE t1.c1 END))AND(t1.c1 COLLATE NOCASE))) INTERSECT SELECT ALL * FROM t1 WHERE (((CAST(0.9473615383779248 AS TEXT))<=(((t1.c1) NOTNULL))));
SELECT ALL * FROM t1 WHERE ((~ (t1.c1)) COLLATE RTRIM COLLATE NOCASE);
SELECT DISTINCT * FROM t1 WHERE ((((~ (t1.c1)) COLLATE RTRIM COLLATE NOCASE)AND(((CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END) NOTNULL)))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c1 COLLATE BINARY) BETWEEN (((t1.c0) ISNULL)) AND (CAST(t1.c1 AS REAL)))) LIMIT 3;
SELECT ALL * FROM t1 WHERE ((~ (t1.c1)) COLLATE RTRIM COLLATE NOCASE);
SELECT DISTINCT * FROM t1 WHERE ((((~ (t1.c1)) COLLATE RTRIM COLLATE NOCASE)AND(((CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END) NOTNULL)))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c1 COLLATE BINARY) BETWEEN (((t1.c0) ISNULL)) AND (CAST(t1.c1 AS REAL)))) LIMIT 3;
SELECT ALL COUNT(*) FROM t1 WHERE ((((~ (t1.c1)))<((~ (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((((~ (t1.c1)))<((~ (t1.c0))))) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))IS(t1.c1)));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1 IN (t1.c1, t1.c0))) IS TRUE)) ORDER BY (((t1.c1)/(t1.c1)) IN ()) DESC, ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(x'dd'));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1 IN (t1.c1, t1.c0))) IS TRUE)) ORDER BY (((t1.c1)/(t1.c1)) IN ()) DESC, ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(x'dd')) LIMIT 0X2 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c1)-(t1.c1))  WHEN ((t1.c1)LIKE(t1.c1)) THEN ((t1.c1)>>(t1.c1)) WHEN t1.c0 COLLATE BINARY THEN (~ (t1.c0)) ELSE (t1.c1 IN (t1.c1, t1.c0)) END) ORDER BY (((t1.c1)/(t1.c1)) IN ()) DESC, ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(x'dd')) LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE (COALESCE(DISTINCT (((t1.c0, x''))=((t1.c1, t1.c1))), CASE t1.c1  WHEN 0.6602283942757515 THEN t1.c0 ELSE t1.c1 END));
SELECT COUNT(*) FROM t1 WHERE (COALESCE(DISTINCT (((t1.c0, x''))==((t1.c1, t1.c1))), CASE t1.c1  WHEN 0.6602283942757515 THEN t1.c0 ELSE t1.c1 END)) ORDER BY CASE CAST(t1.c1 AS BLOB)  WHEN t1.c1 COLLATE BINARY THEN 'x埇qaᤆh' WHEN 7.7817654E7 THEN ((t1.c1) ISNULL) ELSE ((t1.c1)||(0.43560401409653293)) END, UNICODE(((t1.c1)=(t1.c0))) ASC  NULLS FIRST, (((t1.c0, '1595343387', t1.c1, t1.c1)) NOT BETWEEN ((((t1.c1)&(t1.c1)), (((t1.c0))==((t1.c1))), t1.c0, ((((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR('1652157745')))AND(t1.c1)))) AND ((t1.c1 COLLATE RTRIM, NULLIF(t1.c0, t1.c1), ((t1.c1)<(t1.c1)), x'b1f54d'))) LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (x'5b') AND (t1.c1)))<<(((t1.c1)<<(t1.c1))))) ORDER BY CASE CAST(t1.c1 AS BLOB)  WHEN t1.c1 COLLATE BINARY THEN 'x埇qaᤆh' WHEN 7.7817654E7 THEN ((t1.c1) ISNULL) ELSE ((t1.c1)||(0.43560401409653293)) END, UNICODE(((t1.c1)==(t1.c0))) ASC  NULLS FIRST, (((t1.c0, '1595343387', t1.c1, t1.c1)) NOT BETWEEN ((((t1.c1)&(t1.c1)), (((t1.c0))=((t1.c1))), t1.c0, ((((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR('1652157745')))AND(t1.c1)))) AND ((t1.c1 COLLATE RTRIM, NULLIF(t1.c0, t1.c1), ((t1.c1)<(t1.c1)), x'b1f54d'))) LIMIT 0x0;
SELECT MAX(t1.c0) FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c1))=((t1.c1, t1.c1, x'7a')))) BETWEEN (((t1.c1)>=(t1.c0))) AND (((((t1.c1)OR(t1.c0)))OR(t1.c0))))) ORDER BY (t1.c0 IN (NULLIF(t1.c1, t1.c0))) DESC  NULLS FIRST, ((x'ccd9') IS TRUE) DESC  NULLS LAST, ((NULLIF(t1.c1, t1.c0)) NOT BETWEEN (((t1.c1) IS FALSE)) AND (t1.c1));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c1))=((t1.c1, t1.c1, x'7a')))) BETWEEN (((t1.c1)==(t1.c0))) AND (((((t1.c1)OR(t1.c0)))OR(t1.c0))))) ORDER BY (t1.c0 IN (NULLIF(t1.c1, t1.c0))) DESC  NULLS FIRST, ((x'ccd9') IS TRUE) DESC  NULLS LAST, ((NULLIF(t1.c1, t1.c0)) NOT BETWEEN (((t1.c1) IS FALSE)) AND (t1.c1)) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (CHANGES() COLLATE BINARY);
SELECT ALL * FROM t1 WHERE (((CHANGES() COLLATE BINARY)AND(((NULL) NOTNULL))));
SELECT ALL * FROM t1 WHERE (CHANGES() COLLATE BINARY);
SELECT ALL * FROM t1 WHERE (((CHANGES() COLLATE BINARY)AND(((NULL) NOTNULL))));
SELECT ALL * FROM t1 WHERE ((((- (t1.c0)))+(((t1.c1)LIKE(t1.c1))))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END AS TEXT) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((- (t1.c0)))+(((t1.c1)LIKE(t1.c1))))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END AS TEXT) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END AS TEXT) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((- (t1.c0)))+(((t1.c1)LIKE(t1.c1))))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END AS TEXT) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((- (t1.c0)))+(((t1.c1)LIKE(t1.c1))))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END AS TEXT) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END AS TEXT) ASC  NULLS LAST LIMIT 0;
SELECT MIN(t1.c0) FROM t1 WHERE (t1.c0) ORDER BY ((t1.c0)||(CAST(t1.c1 AS INTEGER))) ASC  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE (((t1.c0)AND(((TOTAL_CHANGES()) NOT BETWEEN (HEX(DISTINCT t1.c0)) AND ((~ (t1.c0))))))) ORDER BY (((((x'')) BETWEEN ((t1.c0)) AND ((t1.c1))))|(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, CASE WHEN ((t1.c0) IS TRUE) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c1) BETWEEN (t1.c0) AND ('kav&r2!')) THEN (NULL IN (t1.c0)) END DESC, ((((t1.c0 COLLATE BINARY)AND(t1.c0)))OR(((t1.c1)||(0.8295021100942533)))) LIMIT 0 INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE (CAST(t1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY (((((x'')) BETWEEN ((t1.c0)) AND ((t1.c1))))|(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, CASE WHEN ((t1.c0) IS TRUE) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c1) BETWEEN (t1.c0) AND ('kav&r2!')) THEN (NULL IN (t1.c0)) END DESC, ((((t1.c0 COLLATE BINARY)AND(t1.c0)))OR(((t1.c1)||(0.8295021100942533)))) LIMIT 0x0;
SELECT MIN(t1.c1) FROM t1 WHERE (CASE t1.c0  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN CAST(t1.c1 AS INTEGER) WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c1)<=(t1.c0)) WHEN CAST(t1.c0 AS BLOB) THEN (- (t1.c0)) WHEN ((t1.c1)==(t1.c1)) THEN (((t1.c0, t1.c1))<((t1.c0, t1.c0))) WHEN (~ (t1.c1)) THEN ((((t1.c1)AND(t1.c0)))AND(t1.c1)) ELSE CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END END);
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CASE t1.c0  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN CAST(t1.c1 AS INTEGER) WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c1)<(t1.c0)) WHEN CAST(t1.c0 AS BLOB) THEN (- (t1.c0)) WHEN ((t1.c1)==(t1.c1)) THEN (((t1.c0, t1.c1))<((t1.c0, t1.c0))) WHEN (~ (t1.c1)) THEN ((((t1.c1)AND(t1.c0)))AND(t1.c1)) ELSE CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END END) ORDER BY (CAST('-1179982413' AS NUMERIC) IN (((t1.c0)GLOB(t1.c0)), ((t1.c0)IS NOT(t1.c1)))) DESC INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((t1.c1))=((t1.c1))) IN (t1.c1, ((t1.c0) NOT NULL), (- (t1.c0))))) ORDER BY (CAST('-1179982413' AS NUMERIC) IN (((t1.c0)GLOB(t1.c0)), ((t1.c0)IS NOT(t1.c1)))) DESC;
SELECT ALL * FROM t1 WHERE (UPPER((NOT (t1.c0)))) ORDER BY (t1.c0 IN ('-hIIc,')) COLLATE NOCASE;
SELECT ALL * FROM t1 WHERE (UPPER((NOT (t1.c0)))) ORDER BY (t1.c0 IN ('-hIIc,')) COLLATE NOCASE;
SELECT ALL * FROM t1 WHERE (UPPER((NOT (t1.c0)))) ORDER BY (t1.c0 IN ('-hIIc,')) COLLATE NOCASE;
SELECT ALL * FROM t1 WHERE (UPPER((NOT (t1.c0)))) ORDER BY (t1.c0 IN ('-hIIc,')) COLLATE NOCASE;
SELECT COUNT(*) FROM t1 WHERE (CASE (NOT (t1.c1))  WHEN (+ (t1.c0)) THEN (t1.c1 IN (t1.c0)) WHEN ((t1.c1)>>(t1.c0)) THEN ((t1.c0) ISNULL) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c0) NOTNULL) END);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (CASE (NOT (t1.c1))  WHEN (+ (t1.c0)) THEN (t1.c1 IN (t1.c0)) WHEN ((t1.c1)>>(t1.c0)) THEN ((t1.c0) ISNULL) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c0) NOTNULL) END);
SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c0)&(t1.c0)))!=(t1.c0))) ORDER BY '-282242087', (~ (t1.c0));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((t1.c0)&(t1.c0)))<(t1.c0)))AND((((t1.c0, '1083185990', t1.c1)) BETWEEN ((((0.28816234112574257) IS FALSE), STRFTIME(t1.c0, t1.c1, t1.c0, t1.c1), t1.c0 COLLATE NOCASE)) AND ((NULL, ((x'') NOT NULL), CAST(t1.c1 AS BLOB))))))) ORDER BY NULL INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c0 END)||(((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0))))) ORDER BY NULL;
SELECT ALL * FROM t1 WHERE (((((x'') BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ('1794109562') AND (t1.c1)));
SELECT DISTINCT * FROM t1 WHERE (((((x'') BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ('1794109562') AND (t1.c1)));
SELECT ALL * FROM t1 WHERE (((((x'') BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ('1794109562') AND (t1.c1)));
SELECT DISTINCT * FROM t1 WHERE (((((x'') BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ('1794109562') AND (t1.c1)));
SELECT * FROM t1 WHERE (((((t1.c0)&(t1.c0)))&(((t1.c0)<(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)&(t1.c0)))&(((t1.c0)<(t1.c1)))))AND((NOT (t1.c0))))) ORDER BY (+ (((t1.c1)<>(t1.c0)))) ASC, ((((((((((((t1.c1)-(t1.c1)))AND(((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))))AND((- (t1.c1)))))OR(((-1.863901556E9)*(NULL)))))AND(((t1.c1)%(t1.c1)))))AND((t1.c1 IN (t1.c1)))) DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE (((((t1.c0)&(t1.c0)))&(((t1.c0)<(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)&(t1.c0)))&(((t1.c0)<(t1.c1)))))AND((NOT (t1.c0))))) ORDER BY (+ (((t1.c1)<>(t1.c0)))) ASC, ((((((((((((t1.c1)-(t1.c1)))AND(((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))))AND((- (t1.c1)))))OR(((-1.863901556E9)*(NULL)))))AND(((t1.c1)%(t1.c1)))))AND((t1.c1 IN (t1.c1)))) DESC  NULLS FIRST LIMIT 0X0;
SELECT MAX(t1.c0) FROM t1 WHERE ((+ (((t1.c0) IS TRUE)))) ORDER BY 0.30775789438806755 ASC, t1.c1 DESC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((+ (((t1.c0) IS TRUE)))) ORDER BY 0.30775789438806755 ASC, t1.c1 DESC;
SELECT ALL * FROM t1 WHERE (((LTRIM(t1.c0, t1.c1))*(json(t1.c0)))) ORDER BY 0.6807527406236397 DESC;
SELECT DISTINCT * FROM t1 WHERE (((((LTRIM(t1.c0, t1.c1))*(json(t1.c0))))AND((((t1.c1)) BETWEEN ((CAST(t1.c1 AS NUMERIC))) AND (((((t1.c1, t1.c0))!=((t1.c1, ''))))))))) ORDER BY 1224102332 ASC  NULLS FIRST, ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN '0.8762866076622632' THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END) NOT BETWEEN ((((x'36', t1.c1))>=((t1.c0, t1.c1)))) AND (((('g', t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c1)))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((LTRIM(t1.c0, t1.c1))*(json(t1.c0)))) ORDER BY 0.6807527406236397 DESC;
SELECT DISTINCT * FROM t1 WHERE (((((LTRIM(t1.c0, t1.c1))*(json(t1.c0))))AND((((t1.c1)) BETWEEN ((CAST(t1.c1 AS NUMERIC))) AND (((((t1.c1, t1.c0))!=((t1.c1, ''))))))))) ORDER BY 1224102332 ASC  NULLS FIRST, ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN '0.8762866076622632' THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END) NOT BETWEEN ((((x'36', t1.c1))>=((t1.c0, t1.c1)))) AND (((('g', t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c1)))))  NULLS FIRST;
SELECT * FROM t1 WHERE ((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END IN (CASE WHEN t1.c0 THEN 'Se' WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)));
SELECT ALL * FROM t1 WHERE ((((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END IN (CASE WHEN t1.c0 THEN 'Se' WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)))AND((((((t1.c1))!=((t1.c1)))) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN NULL END) AND (((t1.c1) IS TRUE)))))) INTERSECT SELECT * FROM t1 WHERE (UPPER(DISTINCT (t1.c0 IN (t1.c0))));
SELECT * FROM t1 WHERE ((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END IN (CASE WHEN t1.c0 THEN 'Se' WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)));
SELECT ALL * FROM t1 WHERE ((((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END IN (CASE WHEN t1.c0 THEN 'Se' WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)))AND((((((t1.c1))!=((t1.c1)))) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN NULL END) AND (((t1.c1) IS TRUE)))))) INTERSECT SELECT * FROM t1 WHERE (UPPER(DISTINCT (t1.c0 IN (t1.c0))));
SELECT * FROM t1 WHERE (json_patch((+ (t1.c0)), t1.c0 COLLATE BINARY));
SELECT ALL * FROM t1 WHERE (((json_patch((+ (t1.c0)), t1.c0 COLLATE BINARY))AND(((t1.c1)<<(t1.c0)) COLLATE BINARY))) ORDER BY ((TRIM(t1.c0, t1.c0))&(t1.c1 COLLATE NOCASE))  NULLS LAST, t1.c1 DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN 160932924 THEN t1.c1 ELSE t1.c1 END)!=(((((t1.c1)AND(NULL)))AND(x'97b07381'))))) ORDER BY ((TRIM(t1.c0, t1.c0))&(t1.c1 COLLATE NOCASE))  NULLS LAST, t1.c1 DESC  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (json_patch((+ (t1.c0)), t1.c0 COLLATE BINARY));
SELECT ALL * FROM t1 WHERE (((json_patch((+ (t1.c0)), t1.c0 COLLATE BINARY))AND(((t1.c1)<<(t1.c0)) COLLATE BINARY))) ORDER BY ((TRIM(t1.c0, t1.c0))&(t1.c1 COLLATE NOCASE))  NULLS LAST, t1.c1 DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN 160932924 THEN t1.c1 ELSE t1.c1 END)!=(((((t1.c1)AND(NULL)))AND(x'97b07381'))))) ORDER BY ((TRIM(t1.c0, t1.c0))&(t1.c1 COLLATE NOCASE))  NULLS LAST, t1.c1 DESC  NULLS LAST LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))AND(((t1.c0) IS FALSE))))OR(((t1.c1)*(t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND(SUBSTR(t1.c0, NULL)))) ORDER BY (((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c1, t1.c0)))) BETWEEN (t1.c1) AND (((t1.c1) BETWEEN ('-742346749') AND ('-1148669192'))))  NULLS LAST, 0X3e639dba COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((((((((t1.c0)OR(t1.c1)))AND(((t1.c0) IS FALSE))))OR(((t1.c1)*(t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND(SUBSTR(t1.c0, NULL))))AND((((t1.c0 IN ()))=(CAST(t1.c0 AS NUMERIC)))))) ORDER BY CASE ((t1.c1) NOT BETWEEN (0.9155178745197688) AND (t1.c0))  WHEN ((t1.c0)IS(t1.c1)) THEN (t1.c0 IN (t1.c1, t1.c0)) WHEN ((t1.c0) BETWEEN (x'') AND (0Xffffffffbb5b22cb)) THEN ((t1.c0)GLOB(t1.c0)) WHEN t1.c1 COLLATE RTRIM THEN (t1.c0 IN (t1.c1)) END, (((CAST(t1.c0 AS NUMERIC), t1.c1 COLLATE BINARY, DATETIME(t1.c1, t1.c0, 0.4171586981545131, t1.c0, t1.c1), ((((t1.c1)AND(t1.c1)))OR(t1.c1))))>=((((((t1.c0)OR(0xffffffff8b01cd36)))OR(2.24413799E8)), load_extension(t1.c0), t1.c1 COLLATE BINARY, ((t1.c0)AND(t1.c0))))) DESC  NULLS FIRST, (((0.9105105895228633 COLLATE RTRIM))>=((((t1.c1)%(t1.c1))))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c1) BETWEEN ('-1997783105') AND (t1.c0))) NOT BETWEEN (CAST(t1.c1 AS REAL)) AND ('('))) ORDER BY CASE ((t1.c1) NOT BETWEEN (0.9155178745197688) AND (t1.c0))  WHEN ((t1.c0)IS(t1.c1)) THEN (t1.c0 IN (t1.c1, t1.c0)) WHEN ((t1.c0) BETWEEN (x'') AND (-1151655221)) THEN ((t1.c0)GLOB(t1.c0)) WHEN t1.c1 COLLATE RTRIM THEN (t1.c0 IN (t1.c1)) END, (((CAST(t1.c0 AS NUMERIC), t1.c1 COLLATE BINARY, DATETIME(t1.c1, t1.c0, 0.4171586981545131, t1.c0, t1.c1), ((((t1.c1)AND(t1.c1)))OR(t1.c1))))>=((((((t1.c0)OR(-1962816202)))OR(2.24413799E8)), load_extension(t1.c0), t1.c1 COLLATE BINARY, ((t1.c0)AND(t1.c0))))) DESC  NULLS FIRST, (((0.9105105895228633 COLLATE RTRIM))>=((((t1.c1)%(t1.c1))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((((((((t1.c1)&(NULL)))OR(((0.22416284742875225) NOTNULL))))AND(NULL)))AND((~ (t1.c0))))) ORDER BY ((t1.c0 IN ()) IN (((t1.c1)IS NOT(t1.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c1)&(NULL)))OR(((0.22416284742875225) NOTNULL))))AND(NULL)))AND((~ (t1.c0)))))AND(((NULL COLLATE NOCASE)%(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))))) ORDER BY CAST(((0.01568135237468682) IS FALSE) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1 IN (t1.c1))) ISNULL)) ORDER BY (((+ (t1.c1)))==(((t1.c1)<<(t1.c1))))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c1 IN (t1.c1))) ISNULL))AND(((t1.c0) BETWEEN (((t1.c0)OR(t1.c0))) AND (((((((t1.c0)OR(t1.c0)))OR(x'ac')))AND(t1.c0))))))) ORDER BY ((((t1.c1) NOT NULL))<>(((t1.c1) ISNULL))) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((0.9828850924653668) NOTNULL)) ORDER BY ((((t1.c1) NOT NULL))!=(((t1.c1) ISNULL))) ASC  NULLS FIRST LIMIT 0x1;
SELECT * FROM t1 WHERE ((((((((('-131715403')IS(t1.c0)))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))OR((((('+')OR(t1.c0)))AND(NULL)))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY x'026cc1', ABS(x'4a53') DESC  NULLS LAST, ((((t1.c0) BETWEEN ('270520835') AND (t1.c0))) NOT BETWEEN ((('77817654') BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0)LIKE(t1.c1)))) DESC;
SELECT ALL * FROM t1 WHERE ((((((((('-131715403')IS(t1.c0)))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))OR((((('+')OR(t1.c0)))AND(NULL)))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY x'026cc1', ABS(x'4a53') DESC  NULLS LAST, ((((t1.c0) BETWEEN ('270520835') AND (t1.c0))) NOT BETWEEN ((('77817654') BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0)LIKE(t1.c1)))) DESC INTERSECT SELECT * FROM t1 WHERE ((~ (CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))) ORDER BY x'026cc1', ABS(x'4a53') DESC  NULLS LAST, ((((t1.c0) BETWEEN ('270520835') AND (t1.c0))) NOT BETWEEN ((('77817654') BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0)LIKE(t1.c1)))) DESC;
SELECT * FROM t1 WHERE ((((((((('-131715403')IS(t1.c0)))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))OR((((('+')OR(t1.c0)))AND(NULL)))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY x'026cc1', ABS(x'4a53') DESC  NULLS LAST, ((((t1.c0) BETWEEN ('270520835') AND (t1.c0))) NOT BETWEEN ((('77817654') BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0)LIKE(t1.c1)))) DESC;
SELECT ALL * FROM t1 WHERE ((((((((('-131715403')IS(t1.c0)))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))OR((((('+')OR(t1.c0)))AND(NULL)))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY x'026cc1', ABS(x'4a53') DESC  NULLS LAST, ((((t1.c0) BETWEEN ('270520835') AND (t1.c0))) NOT BETWEEN ((('77817654') BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0)LIKE(t1.c1)))) DESC INTERSECT SELECT * FROM t1 WHERE ((~ (CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))) ORDER BY x'026cc1', ABS(x'4a53') DESC  NULLS LAST, ((((t1.c0) BETWEEN ('270520835') AND (t1.c0))) NOT BETWEEN ((('77817654') BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0)LIKE(t1.c1)))) DESC;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS TEXT)) BETWEEN ((NOT (t1.c0))) AND (CAST(t1.c1 AS NUMERIC))));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c1 AS TEXT)) BETWEEN ((NOT (t1.c0))) AND (CAST(t1.c1 AS NUMERIC))))AND(t1.c1))) ORDER BY t1.c0, CAST((NOT (t1.c1)) AS BLOB) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0 IN (t1.c0)), UPPER(t1.c0), CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))<=((((t1.c1)AND(t1.c0)), ((t1.c1)!=(t1.c1)), t1.c1 COLLATE BINARY)))) ORDER BY t1.c0, CAST((NOT (t1.c1)) AS BLOB);
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS TEXT)) BETWEEN ((NOT (t1.c0))) AND (CAST(t1.c1 AS NUMERIC))));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c1 AS TEXT)) BETWEEN ((NOT (t1.c0))) AND (CAST(t1.c1 AS NUMERIC))))AND(t1.c1))) ORDER BY t1.c0, CAST((NOT (t1.c1)) AS BLOB) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0 IN (t1.c0)), UPPER(t1.c0), CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))<=((((t1.c1)AND(t1.c0)), ((t1.c1)!=(t1.c1)), t1.c1 COLLATE BINARY)))) ORDER BY t1.c0, CAST((NOT (t1.c1)) AS BLOB);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (TYPEOF(DISTINCT t1.c1))));
SELECT COUNT(*) FROM t1 WHERE ((((~ (TYPEOF(DISTINCT t1.c1))))AND(((t1.c0) NOT NULL)))) ORDER BY (+ (((t1.c1) NOT NULL)))  NULLS LAST, 0X49ada87e  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c1)IS(t1.c0)))) AND (((t1.c0 IN ('7(7')))))) ORDER BY ((((t1.c1)AND(((t1.c1)LIKE(x'1d56ab00')))))AND(CAST(t1.c0 AS BLOB))) DESC  NULLS FIRST, json_array_length(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN -441495633 THEN t1.c1 END);
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c1)IS(t1.c0)))) AND (((t1.c0 IN ('7(7')))))) ORDER BY t1.c1 ASC  NULLS LAST, ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))/(((t1.c1)|('1979405605'))))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((- (t1.c1))) IS TRUE)) ORDER BY t1.c1 ASC  NULLS LAST, ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))/(((t1.c1)|('1979405605'))))  NULLS FIRST LIMIT 0;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1 IN ())) NOT NULL)) ORDER BY ((t1.c0) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c1 IN ())) NOT NULL))AND(t1.c1))) ORDER BY ((t1.c0) IS TRUE) DESC;
SELECT ALL * FROM t1 WHERE ((~ (((-2130733186) BETWEEN (t1.c1) AND (t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((~ (((0Xffffffff80ff977e) BETWEEN (t1.c1) AND (t1.c0)))))AND((+ ((x'8ba0' IN (t1.c0)))))));
SELECT ALL * FROM t1 WHERE ((~ (((-2130733186) BETWEEN (t1.c1) AND (t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((~ (((0Xffffffff80ff977e) BETWEEN (t1.c1) AND (t1.c0)))))AND((+ ((x'8ba0' IN (t1.c0)))))));
SELECT MAX(t1.c0) FROM t1 WHERE (((((0.5857950609351565 COLLATE RTRIM)AND(t1.c0)))AND(NULL)));
SELECT MAX(t1.c0) FROM t1 WHERE (((((((0.5857950609351565 COLLATE RTRIM)AND(t1.c0)))AND(NULL)))AND(((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)IS NOT((+ (t1.c1))))))) ORDER BY ((t1.c0) ISNULL) COLLATE RTRIM INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (0.3382219027097265) ORDER BY ((t1.c0) ISNULL) COLLATE RTRIM;
SELECT COUNT(*) FROM t1 WHERE ((NOT (t1.c0 COLLATE NOCASE))) ORDER BY NULLIF(t1.c0 COLLATE RTRIM, (t1.c1 IN ()))  NULLS LAST, (((((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c0, t1.c1, t1.c0)))) ISNULL)  NULLS FIRST, '-521905785' ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((NOT (t1.c0 COLLATE NOCASE)))AND(((NULLIF(t1.c1, t1.c1))<>((((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c1)))))))) ORDER BY ((CAST(t1.c1 AS NUMERIC)) BETWEEN (((t1.c1) IS FALSE)) AND (((((t1.c1)OR(t1.c0)))OR(t1.c0)))), (((((((((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c1, t1.c0))))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))OR(((t1.c0) NOT NULL))))OR(((t1.c1)|(t1.c0)))))AND(CAST(0.841316293310343 AS TEXT))) ASC  NULLS FIRST LIMIT 2;
SELECT ALL COUNT(*) FROM t1 NOT INDEXED WHERE (NULL) ORDER BY ((((t1.c0) NOTNULL))=(((t1.c0)>=(t1.c0)))) ASC  NULLS FIRST, LIKELIHOOD(t1.c0, t1.c0) COLLATE BINARY  NULLS LAST, CAST((t1.c0 IN ()) AS NUMERIC);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL) ORDER BY ((((((((((t1.c0)IS(t1.c0)))OR(x'')))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(CAST(t1.c0 AS REAL))))OR((t1.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c0)>=(t1.c0)))*(((t1.c0)>=(t1.c0))))) ORDER BY NULL DESC, ((('EGI_OHpQ'))>=(((((('~')OR(t1.c1)))AND(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)>=(t1.c0)))*(((t1.c0)>=(t1.c0))))) ORDER BY SQLITE_VERSION() INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) COLLATE RTRIM) ORDER BY SQLITE_VERSION();
SELECT ALL * FROM t1 WHERE (((((t1.c0)>=(t1.c0)))*(((t1.c0)>=(t1.c0))))) ORDER BY NULL DESC, ((('EGI_OHpQ'))>=(((((('~')OR(t1.c1)))AND(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)>=(t1.c0)))*(((t1.c0)>=(t1.c0))))) ORDER BY SQLITE_VERSION() INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) COLLATE RTRIM) ORDER BY SQLITE_VERSION();
SELECT ALL COUNT(*) FROM t1 WHERE (SUBSTR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, CAST('-1751615192' AS NUMERIC)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((SUBSTR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, CAST('-1751615192' AS NUMERIC)))AND(((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)) COLLATE RTRIM))) ORDER BY CAST(t1.c0 COLLATE RTRIM AS BLOB) DESC  NULLS FIRST, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) IS TRUE) LIMIT 0;
SELECT MAX(t1.c0) FROM t1 WHERE ((((((t1.c1))<((1353946707))))GLOB(t1.c0)));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((((t1.c1))<((0x50b39653))))GLOB(t1.c0)))AND(CASE t1.c0 COLLATE NOCASE  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c1)OR(t1.c0)) WHEN (t1.c1 IN ()) THEN (NOT (t1.c0)) ELSE CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END))) LIMIT 5;
SELECT COUNT(*) FROM t1 WHERE ((((((((t1.c1, t1.c1))>=((t1.c1, t1.c1))))AND((t1.c0 IN ()))))AND((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c1, t1.c1))>((t1.c1, t1.c1))))AND((t1.c0 IN ()))))AND((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))))))AND(((((t1.c0)|(t1.c1))) NOTNULL)))) ORDER BY CASE LIKELIHOOD(t1.c1, t1.c1)  WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN t1.c1 WHEN x'd8' THEN CAST(t1.c0 AS NUMERIC) ELSE ((t1.c1)GLOB(t1.c0)) END DESC LIMIT 0x0 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY CASE LIKELIHOOD(t1.c1, t1.c1)  WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN t1.c1 WHEN x'd8' THEN CAST(t1.c0 AS NUMERIC) ELSE ((t1.c1)GLOB(t1.c0)) END DESC LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c0)) NOT BETWEEN ((((t1.c1)LIKE(t1.c0)), ((t1.c1) ISNULL))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, CAST(t1.c0 AS NUMERIC))))) ORDER BY CASE WHEN ((t1.c1)||(t1.c0)) THEN t1.c0 COLLATE RTRIM END;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, t1.c0)) NOT BETWEEN ((((t1.c1)LIKE(t1.c0)), ((t1.c1) ISNULL))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, CAST(t1.c0 AS NUMERIC))))) ORDER BY CASE WHEN ((t1.c1)||(t1.c0)) THEN t1.c0 COLLATE RTRIM END LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (t1.c1) AND (CAST(0xffffffffc2efc723 AS INTEGER)))) ORDER BY CASE WHEN ((t1.c1)||(t1.c0)) THEN t1.c0 COLLATE RTRIM END LIMIT 3;
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c0)) NOT BETWEEN ((((t1.c1)LIKE(t1.c0)), ((t1.c1) ISNULL))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, CAST(t1.c0 AS NUMERIC))))) ORDER BY CASE WHEN ((t1.c1)||(t1.c0)) THEN t1.c0 COLLATE RTRIM END;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, t1.c0)) NOT BETWEEN ((((t1.c1)LIKE(t1.c0)), ((t1.c1) ISNULL))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, CAST(t1.c0 AS NUMERIC))))) ORDER BY CASE WHEN ((t1.c1)||(t1.c0)) THEN t1.c0 COLLATE RTRIM END LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (t1.c1) AND (CAST(0xffffffffc2efc723 AS INTEGER)))) ORDER BY CASE WHEN ((t1.c1)||(t1.c0)) THEN t1.c0 COLLATE RTRIM END LIMIT 3;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE RTRIM)IS NOT((- (t1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE RTRIM)IS NOT((- (t1.c1))))) LIMIT 0x1;
SELECT * FROM t1 WHERE (((((t1.c0) IS TRUE)) NOTNULL)) ORDER BY ((x'') NOT NULL) DESC, NULL DESC  NULLS FIRST, ((((t1.c1 COLLATE BINARY)OR(CASE t1.c0  WHEN '-1075099479' THEN t1.c0 ELSE 0.9532317774099616 END)))OR(DATE(t1.c1, t1.c0, t1.c0, t1.c0))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) IS TRUE)) NOTNULL))AND(((((CASE 0X17a32882  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)AND(NULL)))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN NULL THEN t1.c0 END))))) ORDER BY ((x'') NOT NULL) DESC, NULL DESC  NULLS FIRST, ((((t1.c1 COLLATE BINARY)OR(CASE t1.c0  WHEN '-1075099479' THEN t1.c0 ELSE 0.9532317774099616 END)))OR(DATE(t1.c1, t1.c0, t1.c0, t1.c0))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c0) IS TRUE)) NOTNULL)) ORDER BY ((x'') NOT NULL) DESC, NULL DESC  NULLS FIRST, ((((t1.c1 COLLATE BINARY)OR(CASE t1.c0  WHEN '-1075099479' THEN t1.c0 ELSE 0.9532317774099616 END)))OR(DATE(t1.c1, t1.c0, t1.c0, t1.c0))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) IS TRUE)) NOTNULL))AND(((((CASE 0X17a32882  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)AND(NULL)))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN NULL THEN t1.c0 END))))) ORDER BY ((x'') NOT NULL) DESC, NULL DESC  NULLS FIRST, ((((t1.c1 COLLATE BINARY)OR(CASE t1.c0  WHEN '-1075099479' THEN t1.c0 ELSE 0.9532317774099616 END)))OR(DATE(t1.c1, t1.c0, t1.c0, t1.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1 IN (t1.c1))) NOT BETWEEN (((t1.c1)<(t1.c1))) AND (((t1.c1) NOT BETWEEN (t1.c0) AND (0.25329335675993025)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c1 IN (t1.c1))) NOT BETWEEN (((t1.c1)!=(t1.c1))) AND (((t1.c1) NOT BETWEEN (t1.c0) AND (0.25329335675993025)))))AND((t1.c1 IN (UNLIKELY(t1.c1)))))) ORDER BY LIKELY((NOT (t1.c1))) ASC, ((((t1.c0)/(t1.c0)))==(0.6041808967285835)) DESC LIMIT 1;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE BINARY)!=(IFNULL(t1.c1, t1.c1))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE BINARY)!=(IFNULL(t1.c1, t1.c1)))) LIMIT 2;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (UNLIKELY(DISTINCT (~ (t1.c0)))) ORDER BY CAST(t1.c1 AS REAL);
SELECT ALL MAX(t1.c0) FROM t1 WHERE (UNLIKELY(DISTINCT (~ (t1.c0)))) ORDER BY 0x7fd86c69  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ('h');
SELECT DISTINCT * FROM t1 WHERE ((('h')AND((((NULL IN (t1.c1)))IS NOT(t1.c1)))));
SELECT ALL * FROM t1 WHERE ('h');
SELECT DISTINCT * FROM t1 WHERE ((('h')AND((((NULL IN (t1.c1)))IS NOT(t1.c1)))));
SELECT * FROM t1 WHERE (LIKELIHOOD((+ (t1.c1)), ((t1.c1)>(t1.c1)))) ORDER BY CAST(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END AS NUMERIC);
SELECT ALL * FROM t1 WHERE (((LIKELIHOOD((+ (t1.c1)), ((t1.c1)>(t1.c1))))AND(t1.c1))) ORDER BY ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)!=((t1.c0 IN (t1.c0))))  NULLS FIRST, ((((((t1.c1, t1.c0, t1.c1, t1.c0, x'')) BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c1, '')) AND (('', x'a7', t1.c1, t1.c1, NULL))), ((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))<((t1.c0, (t1.c1 IN ())))) DESC  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (t1.c0 COLLATE RTRIM) ORDER BY ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)<>((t1.c0 IN (t1.c0))))  NULLS FIRST, ((((((t1.c1, t1.c0, t1.c1, t1.c0, x'')) BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c1, '')) AND (('', x'a7', t1.c1, t1.c1, NULL))), ((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))<((t1.c0, (t1.c1 IN ())))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (LIKELIHOOD((+ (t1.c1)), ((t1.c1)>(t1.c1)))) ORDER BY CAST(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END AS NUMERIC);
SELECT * FROM t1 WHERE (LIKELY((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((LIKELY((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0)))))AND(((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)>((((t1.c0))>=((t1.c1)))))))) ORDER BY t1.c1 COLLATE RTRIM  NULLS FIRST;
SELECT * FROM t1 WHERE (LIKELY((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((LIKELY((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0)))))AND(((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)>((((t1.c0))>=((t1.c1)))))))) ORDER BY t1.c1 COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) AS REAL)) ORDER BY t1.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY ASC, CASE '-16410412' COLLATE RTRIM  WHEN ((t1.c0)>(t1.c0)) THEN ((((t1.c0)OR(t1.c1)))OR(t1.c0)) ELSE ((t1.c1)GLOB(t1.c1)) END  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) AS REAL)) ORDER BY t1.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY ASC, CASE '-16410412' COLLATE RTRIM  WHEN ((t1.c0)>(t1.c0)) THEN ((((t1.c0)OR(t1.c1)))OR(t1.c0)) ELSE ((t1.c1)GLOB(t1.c1)) END  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c1 IN ())) BETWEEN (((t1.c1)&(t1.c0))) AND (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))) ORDER BY t1.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY ASC, CASE '-16410412' COLLATE RTRIM  WHEN ((t1.c0)>(t1.c0)) THEN ((((t1.c0)OR(t1.c1)))OR(t1.c0)) ELSE ((t1.c1)GLOB(t1.c1)) END  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) AS REAL)) ORDER BY t1.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY ASC, CASE '-16410412' COLLATE RTRIM  WHEN ((t1.c0)>(t1.c0)) THEN ((((t1.c0)OR(t1.c1)))OR(t1.c0)) ELSE ((t1.c1)GLOB(t1.c1)) END  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) AS REAL)) ORDER BY t1.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY ASC, CASE '-16410412' COLLATE RTRIM  WHEN ((t1.c0)>(t1.c0)) THEN ((((t1.c0)OR(t1.c1)))OR(t1.c0)) ELSE ((t1.c1)GLOB(t1.c1)) END  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c1 IN ())) BETWEEN (((t1.c1)&(t1.c0))) AND (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))) ORDER BY t1.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY ASC, CASE '-16410412' COLLATE RTRIM  WHEN ((t1.c0)>(t1.c0)) THEN ((((t1.c0)OR(t1.c1)))OR(t1.c0)) ELSE ((t1.c1)GLOB(t1.c1)) END  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((- ('1552213072' COLLATE NOCASE))) ORDER BY (((t1.c1 IN ()))>(t1.c1)), ((MIN(t1.c1, t1.c1)) NOT BETWEEN (CAST(t1.c1 AS BLOB)) AND (CASE WHEN x'c0' THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)) DESC  NULLS LAST, NULL, (((ABS(DISTINCT t1.c1), CAST(t1.c1 AS NUMERIC), (((t1.c1)) BETWEEN (('蘃0''oD56N')) AND ((t1.c0)))))<((CASE WHEN t1.c0 THEN t1.c0 END, t1.c0, t1.c1)))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((- ('1552213072' COLLATE NOCASE)))AND((((+ (NULL))) BETWEEN (((t1.c0) IS TRUE)) AND (2.13504008E8))))) ORDER BY (('') NOT BETWEEN (t1.c1) AND (((t1.c1)IS NOT(t1.c0)))), ((LIKELY(DISTINCT t1.c0)) NOTNULL) ASC;
SELECT ALL * FROM t1 WHERE ((- ('1552213072' COLLATE NOCASE))) ORDER BY (((t1.c1 IN ()))>(t1.c1)), ((MIN(t1.c1, t1.c1)) NOT BETWEEN (CAST(t1.c1 AS BLOB)) AND (CASE WHEN x'c0' THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)) DESC  NULLS LAST, NULL, (((ABS(DISTINCT t1.c1), CAST(t1.c1 AS NUMERIC), (((t1.c1)) BETWEEN (('蘃0''oD56N')) AND ((t1.c0)))))<((CASE WHEN t1.c0 THEN t1.c0 END, t1.c0, t1.c1)))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((- ('1552213072' COLLATE NOCASE)))AND((((+ (NULL))) BETWEEN (((t1.c0) IS TRUE)) AND (2.13504008E8))))) ORDER BY (('') NOT BETWEEN (t1.c1) AND (((t1.c1)IS NOT(t1.c0)))), ((LIKELY(DISTINCT t1.c0)) NOTNULL) ASC;
SELECT * FROM t1 WHERE (((((((t1.c0 COLLATE NOCASE)AND(CAST(t1.c0 AS BLOB))))AND(((t1.c1)+(t1.c0)))))AND(ABS(DISTINCT t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0 COLLATE NOCASE)AND(CAST(t1.c0 AS BLOB))))AND(((t1.c1)+(t1.c0)))))AND(ABS(DISTINCT t1.c1)))) ORDER BY '76688209' DESC, ((((t1.c1) IS TRUE))||(t1.c0 COLLATE NOCASE)) INTERSECT SELECT DISTINCT * FROM t1 WHERE (HEX(DISTINCT (~ (t1.c0)))) ORDER BY '76688209' DESC, ((((t1.c1) IS TRUE))||(t1.c0 COLLATE NOCASE));
SELECT * FROM t1 WHERE (((((((t1.c0 COLLATE NOCASE)AND(CAST(t1.c0 AS BLOB))))AND(((t1.c1)+(t1.c0)))))AND(ABS(DISTINCT t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0 COLLATE NOCASE)AND(CAST(t1.c0 AS BLOB))))AND(((t1.c1)+(t1.c0)))))AND(ABS(DISTINCT t1.c1)))) ORDER BY '76688209' DESC, ((((t1.c1) IS TRUE))||(t1.c0 COLLATE NOCASE)) INTERSECT SELECT DISTINCT * FROM t1 WHERE (HEX(DISTINCT (~ (t1.c0)))) ORDER BY '76688209' DESC, ((((t1.c1) IS TRUE))||(t1.c0 COLLATE NOCASE));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR((- (t1.c0)))))AND(t1.c1)));
SELECT MAX(t1.c1) FROM t1 WHERE (((((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR((- (t1.c0)))))AND(t1.c1)))AND(CASE t1.c1  WHEN (t1.c0 IN (t1.c1)) THEN ((t1.c0)>(t1.c0)) WHEN ((t1.c1)<=(t1.c1)) THEN t1.c0 COLLATE NOCASE END))) ORDER BY t1.c1, NULL  NULLS LAST LIMIT 0x1 INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c0)+(t1.c1)))/(t1.c1))) ORDER BY t1.c1, NULL  NULLS LAST LIMIT 0X1;
SELECT * FROM t1 WHERE (CASE WHEN t1.c1 THEN NULL ELSE (t1.c0 IN (t1.c1)) END) ORDER BY ('' IN (((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(x'ae')))AND(t1.c0)))AND(t1.c0)))) ASC, '-294435301', t1.c1 DESC, ((((((((((t1.c1)AND(t1.c0)))OR(NULL)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN NULL ELSE (t1.c0 IN (t1.c1)) END) ORDER BY CAST((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) AS BLOB) ASC, (((t1.c0, t1.c0, t1.c0, t1.c1)) BETWEEN ((LIKELIHOOD(DISTINCT t1.c1, t1.c0), ((NULL) NOT BETWEEN (t1.c1) AND (t1.c1)), NULL, (NOT (t1.c1)))) AND (('2067293718', (((t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))), load_extension(t1.c1), CASE WHEN t1.c1 THEN 0.862614313423128 ELSE t1.c0 END))) DESC  NULLS LAST LIMIT 0X1;
SELECT * FROM t1 WHERE (CASE WHEN t1.c1 THEN NULL ELSE (t1.c0 IN (t1.c1)) END) ORDER BY ('' IN (((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(x'ae')))AND(t1.c0)))AND(t1.c0)))) ASC, '-294435301', t1.c1 DESC, ((((((((((t1.c1)AND(t1.c0)))OR(NULL)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN NULL ELSE (t1.c0 IN (t1.c1)) END) ORDER BY CAST((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) AS BLOB) ASC, (((t1.c0, t1.c0, t1.c0, t1.c1)) BETWEEN ((LIKELIHOOD(DISTINCT t1.c1, t1.c0), ((NULL) NOT BETWEEN (t1.c1) AND (t1.c1)), NULL, (NOT (t1.c1)))) AND (('2067293718', (((t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))), load_extension(t1.c1), CASE WHEN t1.c1 THEN 0.862614313423128 ELSE t1.c0 END))) DESC  NULLS LAST LIMIT 0X1;
SELECT * FROM t1 WHERE (CAST(((t1.c0)GLOB(t1.c1)) AS BLOB));
SELECT * FROM t1 WHERE (((CAST(((t1.c0)GLOB(t1.c1)) AS BLOB))AND(CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN ((t1.c1)IS(t1.c0)) THEN (~ (t1.c0)) END))) LIMIT 0x1;
SELECT * FROM t1 WHERE (CAST(((t1.c0)GLOB(t1.c1)) AS BLOB));
SELECT * FROM t1 WHERE (((CAST(((t1.c0)GLOB(t1.c1)) AS BLOB))AND(CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN ((t1.c1)IS(t1.c0)) THEN (~ (t1.c0)) END))) LIMIT 0x1;
SELECT * FROM t1 WHERE (NULL) ORDER BY t1.c0 ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND((((- (t1.c0))) ISNULL)))) ORDER BY ((((t1.c1) NOT NULL)) NOT NULL) ASC, (((+ (t1.c0))) NOTNULL)  NULLS LAST, CAST((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) AS TEXT) DESC;
SELECT * FROM t1 WHERE (NULL) ORDER BY t1.c0 ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND((((- (t1.c0))) ISNULL)))) ORDER BY ((((t1.c1) NOT NULL)) NOT NULL) ASC, (((+ (t1.c0))) NOTNULL)  NULLS LAST, CAST((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) AS TEXT) DESC;
SELECT MAX(t1.c0) FROM t1 NOT INDEXED WHERE (((((t1.c0)<=(t1.c0))) NOT NULL));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((t1.c0)==(t1.c0))) NOT NULL)) LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (NULLIF(DISTINCT CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END, (t1.c0 IN ()))) LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((x'438e')) AND ((((0.8015150365228702)<<(t1.c1)))))) ORDER BY t1.c0 ASC;
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((x'438e')) AND ((((0.8015150365228702)<<(t1.c1)))))) ORDER BY (LOWER(DISTINCT t1.c0) IN (t1.c0 COLLATE RTRIM))  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c1 END COLLATE BINARY) ORDER BY (LOWER(DISTINCT t1.c0) IN (t1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((x'438e')) AND ((((0.8015150365228702)<<(t1.c1)))))) ORDER BY t1.c0 ASC;
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((x'438e')) AND ((((0.8015150365228702)<<(t1.c1)))))) ORDER BY (LOWER(DISTINCT t1.c0) IN (t1.c0 COLLATE RTRIM))  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c1 END COLLATE BINARY) ORDER BY (LOWER(DISTINCT t1.c0) IN (t1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((0.13741613358650961) NOT BETWEEN ((((t1.c0, t1.c1))>=((t1.c0, t1.c1)))) AND (((t1.c0)OR(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (((0.13741613358650961) NOT BETWEEN ((((t1.c0, t1.c1))>=((t1.c0, t1.c1)))) AND (((t1.c0)OR(t1.c0))))) ORDER BY (((t1.c0)||(t1.c1)) IN ()) ASC, (t1.c1 IN ()) COLLATE BINARY DESC, '1748880430' DESC LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((((((((t1.c1, t1.c0, t1.c0))<>((t1.c0, t1.c0, t1.c0))))OR(((t1.c0)/(t1.c1)))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))AND((NOT (t1.c0))))) ORDER BY RTRIM(((t1.c1)|(x'')))  NULLS FIRST, x'a3' COLLATE BINARY;
SELECT DISTINCT * FROM t1 WHERE ((((((((((((t1.c1, t1.c0, t1.c0))<>((t1.c0, t1.c0, t1.c0))))OR(((t1.c0)/(t1.c1)))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))AND((NOT (t1.c0)))))AND(((t1.c1)||(t1.c1)) COLLATE BINARY))) ORDER BY RTRIM(((t1.c1)|(x'')))  NULLS FIRST, x'a3' COLLATE BINARY;
SELECT ALL * FROM t1 WHERE ((((((((((t1.c1, t1.c0, t1.c0))<>((t1.c0, t1.c0, t1.c0))))OR(((t1.c0)/(t1.c1)))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))AND((NOT (t1.c0))))) ORDER BY RTRIM(((t1.c1)|(x'')))  NULLS FIRST, x'a3' COLLATE BINARY;
SELECT DISTINCT * FROM t1 WHERE ((((((((((((t1.c1, t1.c0, t1.c0))<>((t1.c0, t1.c0, t1.c0))))OR(((t1.c0)/(t1.c1)))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))AND((NOT (t1.c0)))))AND(((t1.c1)||(t1.c1)) COLLATE BINARY))) ORDER BY RTRIM(((t1.c1)|(x'')))  NULLS FIRST, x'a3' COLLATE BINARY;
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY (((((t1.c1)*(t1.c0)), ((t1.c1) NOT NULL)))=((t1.c1 COLLATE BINARY, IFNULL(DISTINCT t1.c0, t1.c0)))) ASC, ((UPPER(t1.c0))=(x'')), CASE WHEN ((t1.c0)IS NOT(t1.c1)) THEN LOWER(t1.c1) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN CAST(t1.c0 AS NUMERIC) WHEN load_extension(t1.c0, t1.c0) THEN CHAR(t1.c1, t1.c0) WHEN LOWER(DISTINCT t1.c1) THEN HEX(DISTINCT t1.c1) END DESC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (NULL) ORDER BY (((t1.c0, LAST_INSERT_ROWID(), CAST(t1.c0 AS BLOB)))>((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)), (t1.c0 IN (t1.c1)), t1.c0 COLLATE NOCASE))) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c0)+(t1.c0)) THEN ((t1.c0) NOTNULL) END) ORDER BY (((t1.c0, LAST_INSERT_ROWID(), CAST(t1.c0 AS BLOB)))>((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)), (t1.c0 IN (t1.c1)), t1.c0 COLLATE NOCASE)));
SELECT ALL * FROM t1 NOT INDEXED WHERE ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 END))<(((((t1.c0))>=((t1.c0))), (((t1.c0))<((t1.c1)))))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 END))<(((((t1.c0))>=((t1.c0))), (((t1.c0))<((t1.c1))))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((-3.05989446E8)<=(((t1.c1) IS FALSE)))) LIMIT 0x0;
SELECT ALL * FROM t1 NOT INDEXED WHERE ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 END))<(((((t1.c0))>=((t1.c0))), (((t1.c0))<((t1.c1)))))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 END))<(((((t1.c0))>=((t1.c0))), (((t1.c0))<((t1.c1))))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((-3.05989446E8)<=(((t1.c1) IS FALSE)))) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOT NULL)) IS TRUE)) ORDER BY CAST(((t1.c1) IS FALSE) AS BLOB) DESC  NULLS FIRST, ((CAST(t1.c1 AS BLOB))>=((t1.c0 IN (t1.c1)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) NOT NULL)) IS TRUE))AND(TRIM(((t1.c1) NOTNULL))))) ORDER BY ((t1.c1 COLLATE RTRIM)/(t1.c1 COLLATE RTRIM))  NULLS FIRST, CAST(((('-227161207', t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))) AS INTEGER)  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOTNULL)) IS TRUE)) ORDER BY ((t1.c1 COLLATE RTRIM)/(t1.c1 COLLATE RTRIM))  NULLS FIRST, CAST(((('-227161207', t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOT NULL)) IS TRUE)) ORDER BY CAST(((t1.c1) IS FALSE) AS BLOB) DESC  NULLS FIRST, ((CAST(t1.c1 AS BLOB))>=((t1.c0 IN (t1.c1)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) NOT NULL)) IS TRUE))AND(TRIM(((t1.c1) NOTNULL))))) ORDER BY ((t1.c1 COLLATE RTRIM)/(t1.c1 COLLATE RTRIM))  NULLS FIRST, CAST(((('-227161207', t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))) AS INTEGER)  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOTNULL)) IS TRUE)) ORDER BY ((t1.c1 COLLATE RTRIM)/(t1.c1 COLLATE RTRIM))  NULLS FIRST, CAST(((('-227161207', t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))) AS INTEGER)  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((LIKE(t1.c1, t1.c0, 'g')) IS TRUE) DESC;
SELECT * FROM t1 WHERE (((t1.c0)AND((((((t1.c0)||(NULL)), LIKELIHOOD(t1.c0, t1.c0), t1.c1 COLLATE RTRIM, CAST(t1.c0 AS REAL)))<>((t1.c0 COLLATE NOCASE, t1.c0 COLLATE RTRIM, (~ (t1.c1)), CAST(t1.c0 AS REAL))))))) ORDER BY CAST(((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)) AS TEXT) DESC  NULLS LAST, x''  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((LIKE(t1.c1, t1.c0, 'g')) IS TRUE) DESC;
SELECT * FROM t1 WHERE (((t1.c0)AND((((((t1.c0)||(NULL)), LIKELIHOOD(t1.c0, t1.c0), t1.c1 COLLATE RTRIM, CAST(t1.c0 AS REAL)))<>((t1.c0 COLLATE NOCASE, t1.c0 COLLATE RTRIM, (~ (t1.c1)), CAST(t1.c0 AS REAL))))))) ORDER BY CAST(((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)) AS TEXT) DESC  NULLS LAST, x''  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE ((t1.c0 IN ()) COLLATE RTRIM);
SELECT * FROM t1 WHERE ((t1.c0 IN ()) COLLATE RTRIM) ORDER BY ((((0.16120286300686215)<<(t1.c0))) IS FALSE)  NULLS LAST, CAST('9S*I5' AS TEXT), ((NULL)!=((NOT (t1.c0))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((t1.c0 IN ()) COLLATE RTRIM);
SELECT * FROM t1 WHERE ((t1.c0 IN ()) COLLATE RTRIM) ORDER BY ((((0.16120286300686215)<<(t1.c0))) IS FALSE)  NULLS LAST, CAST('9S*I5' AS TEXT), ((NULL)!=((NOT (t1.c0))))  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE (t1.c0);
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (t1.c0) INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CAST((((t1.c1))<=((NULL))) AS INTEGER));
SELECT * FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE (t1.c1) LIMIT 0;
SELECT * FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE (t1.c1) LIMIT 0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((t1.c1 COLLATE RTRIM) ISNULL)) ORDER BY ((LIKELIHOOD(NULL, t1.c1)) IS TRUE), (((COALESCE(t1.c0, t1.c1, t1.c0), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))<(((NOT (t1.c0)), HEX(DISTINCT t1.c0)))) ASC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((t1.c1 COLLATE RTRIM) ISNULL))AND(((t1.c0)>=(0.3422519530909792))))) ORDER BY ((LIKELIHOOD(NULL, t1.c1)) IS TRUE), (((COALESCE(t1.c0, t1.c1, t1.c0), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))<(((NOT (t1.c0)), HEX(DISTINCT t1.c0)))) ASC LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) THEN (((t1.c0))=((t1.c0))) WHEN ((t1.c1)IS(t1.c0)) THEN ((t1.c1)<>(t1.c1)) WHEN ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)) THEN ((t1.c1)>=(t1.c1)) END) ORDER BY CAST((((t1.c1)) NOT BETWEEN ((t1.c1)) AND (('c'))) AS BLOB)  NULLS FIRST, load_extension(HEX(t1.c0), ((t1.c0)/(t1.c1))), t1.c1;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) THEN (((t1.c0))==((t1.c0))) WHEN ((t1.c1)IS(t1.c0)) THEN ((t1.c1)>(t1.c1)) WHEN ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)) THEN ((t1.c1)>=(t1.c1)) END) ORDER BY CAST((((t1.c1)) NOT BETWEEN ((t1.c1)) AND (('c'))) AS BLOB)  NULLS FIRST, load_extension(HEX(t1.c0), ((t1.c0)/(t1.c1))), t1.c1 LIMIT 0 INTERSECT SELECT COUNT(*) FROM t1 WHERE (TRIM(DISTINCT ((t1.c1)OR(t1.c1)), (((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))))) ORDER BY CAST((((t1.c1)) NOT BETWEEN ((t1.c1)) AND (('c'))) AS BLOB)  NULLS FIRST, load_extension(HEX(t1.c0), ((t1.c0)/(t1.c1))), t1.c1 LIMIT 0x0;
SELECT * FROM t1 WHERE (((t1.c1) IS FALSE) COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) IS FALSE) COLLATE RTRIM)AND(((t1.c0)>>(t1.c0)) COLLATE RTRIM))) ORDER BY (t1.c1 IN (t1.c1, t1.c1)) COLLATE RTRIM INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY (t1.c1 IN (t1.c1, t1.c1)) COLLATE RTRIM;
SELECT * FROM t1 WHERE (((t1.c1) IS FALSE) COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) IS FALSE) COLLATE RTRIM)AND(((t1.c0)>>(t1.c0)) COLLATE RTRIM))) ORDER BY (t1.c1 IN (t1.c1, t1.c1)) COLLATE RTRIM INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY (t1.c1 IN (t1.c1, t1.c1)) COLLATE RTRIM;
SELECT ALL * FROM t1 WHERE (CASE (NOT (t1.c0))  WHEN ((t1.c0)>>(t1.c1)) THEN ((t1.c1) BETWEEN (t1.c1) AND (0.7123476222152834)) WHEN (NOT (t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t1.c1) IS TRUE) THEN (NOT (t1.c1)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) THEN (NOT (t1.c0)) ELSE NULL END) ORDER BY (t1.c0 IN (((t1.c1) IS TRUE), ((NULL) ISNULL), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (CASE (NOT (t1.c0))  WHEN ((t1.c0)>>(t1.c1)) THEN ((t1.c1) BETWEEN (t1.c1) AND (0.7123476222152834)) WHEN (NOT (t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t1.c1) IS TRUE) THEN (NOT (t1.c1)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) THEN (NOT (t1.c0)) ELSE NULL END) ORDER BY (t1.c0 IN (((t1.c1) IS TRUE), ((NULL) ISNULL), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((- (t1.c0)) IN ('-1192555489', x'818c'))) ORDER BY (t1.c0 IN (((t1.c1) IS TRUE), ((NULL) ISNULL), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE (NOT (t1.c0))  WHEN ((t1.c0)>>(t1.c1)) THEN ((t1.c1) BETWEEN (t1.c1) AND (0.7123476222152834)) WHEN (NOT (t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t1.c1) IS TRUE) THEN (NOT (t1.c1)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) THEN (NOT (t1.c0)) ELSE NULL END) ORDER BY (t1.c0 IN (((t1.c1) IS TRUE), ((NULL) ISNULL), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (CASE (NOT (t1.c0))  WHEN ((t1.c0)>>(t1.c1)) THEN ((t1.c1) BETWEEN (t1.c1) AND (0.7123476222152834)) WHEN (NOT (t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t1.c1) IS TRUE) THEN (NOT (t1.c1)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) THEN (NOT (t1.c0)) ELSE NULL END) ORDER BY (t1.c0 IN (((t1.c1) IS TRUE), ((NULL) ISNULL), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((- (t1.c0)) IN ('-1192555489', x'818c'))) ORDER BY (t1.c0 IN (((t1.c1) IS TRUE), ((NULL) ISNULL), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c1) NOTNULL))GLOB(CAST(t1.c1 AS REAL))));
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOTNULL))GLOB(CAST(t1.c1 AS REAL)))) ORDER BY (((~ (t1.c0)))OR(t1.c0)), (((NULL)) BETWEEN ((((t1.c1) ISNULL))) AND ((PRINTF(t1.c1, t1.c0, x'')))) DESC INTERSECT SELECT * FROM t1 WHERE ((- ((NOT (t1.c0))))) ORDER BY (((~ (t1.c0)))OR(t1.c0)), (((NULL)) BETWEEN ((((t1.c1) ISNULL))) AND ((PRINTF(t1.c1, t1.c0, x'')))) DESC;
SELECT * FROM t1 WHERE (((((t1.c1) NOTNULL))GLOB(CAST(t1.c1 AS REAL))));
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOTNULL))GLOB(CAST(t1.c1 AS REAL)))) ORDER BY (((~ (t1.c0)))OR(t1.c0)), (((NULL)) BETWEEN ((((t1.c1) ISNULL))) AND ((PRINTF(t1.c1, t1.c0, x'')))) DESC INTERSECT SELECT * FROM t1 WHERE ((- ((NOT (t1.c0))))) ORDER BY (((~ (t1.c0)))OR(t1.c0)), (((NULL)) BETWEEN ((((t1.c1) ISNULL))) AND ((PRINTF(t1.c1, t1.c0, x'')))) DESC;
SELECT MIN(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) ISNULL) ASC  NULLS LAST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((t1.c0)AND('L'))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) ISNULL) ASC  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE (TYPEOF(DISTINCT t1.c1)) ORDER BY ((((((x'df5567')OR(t1.c0)))AND(t1.c0)))OR(t1.c0)) COLLATE NOCASE  NULLS LAST, (CAST(t1.c0 AS TEXT) IN ((((x'', t1.c0))<=((t1.c1, t1.c1))), ((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))), ((((t1.c0))>=((t1.c0))) IN ())  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((TYPEOF(DISTINCT t1.c1))AND(((((((((t1.c1)AND(t1.c1 COLLATE RTRIM)))OR(IFNULL(t1.c1, t1.c1))))OR(t1.c1 COLLATE RTRIM)))OR(((((t1.c1)AND('aPw*_J')))AND(t1.c0))))))) ORDER BY ((t1.c0 COLLATE BINARY) NOT BETWEEN (((t1.c1)LIKE(t1.c1))) AND (CAST(NULL AS BLOB))) ASC;
SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c0, t1.c1, t1.c1, t1.c0, t1.c0))>((t1.c1, t1.c1, t1.c0, t1.c0, t1.c0))) IN ())) ORDER BY ((0.44890727814302966) IS TRUE) DESC  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE (((((((t1.c0, t1.c1, t1.c1, t1.c0, t1.c0))>((t1.c1, t1.c1, t1.c0, t1.c0, t1.c0))) IN ()))AND((((((t1.c0, x'56', t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, -1415981947, t1.c1)))) IS TRUE)))) ORDER BY (((0.7314475072472375 IN ()))<=(((t1.c1)>=(t1.c0))))  NULLS LAST, (~ (((t1.c0)|(t1.c0)))) DESC INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (CAST(CAST(t1.c0 AS INTEGER) AS BLOB)) ORDER BY (((0.7314475072472375 IN ()))<=(((t1.c1)>=(t1.c0))))  NULLS LAST, (~ (((t1.c0)|(t1.c0)))) DESC;
SELECT * FROM t1 WHERE (((((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(0.05532506488759226)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1)) COLLATE NOCASE) ORDER BY t1.c1, ((((((((x'')AND(TYPEOF(DISTINCT t1.c1))))AND(((((((t1.c0)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))))OR(t1.c0 COLLATE NOCASE)))AND(t1.c0)), 0.29355933138569734  NULLS FIRST, (NOT (t1.c0))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(0.05532506488759226)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1)) COLLATE NOCASE)AND(SQLITE_COMPILEOPTION_USED(CAST(t1.c1 AS TEXT))))) ORDER BY t1.c1, ((((((((x'')AND(TYPEOF(DISTINCT t1.c1))))AND(((((((t1.c0)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))))OR(t1.c0 COLLATE NOCASE)))AND(t1.c0)), 0.29355933138569734  NULLS FIRST, (NOT (t1.c0))  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (((((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(0.05532506488759226)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1)) COLLATE NOCASE) ORDER BY t1.c1, ((((((((x'')AND(TYPEOF(DISTINCT t1.c1))))AND(((((((t1.c0)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))))OR(t1.c0 COLLATE NOCASE)))AND(t1.c0)), 0.29355933138569734  NULLS FIRST, (NOT (t1.c0))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(0.05532506488759226)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1)) COLLATE NOCASE)AND(SQLITE_COMPILEOPTION_USED(CAST(t1.c1 AS TEXT))))) ORDER BY t1.c1, ((((((((x'')AND(TYPEOF(DISTINCT t1.c1))))AND(((((((t1.c0)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))))OR(t1.c0 COLLATE NOCASE)))AND(t1.c0)), 0.29355933138569734  NULLS FIRST, (NOT (t1.c0))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (GLOB(((t1.c1)AND(t1.c0)), ((t1.c1)!=(t1.c0)))) ORDER BY ((CAST(t1.c1 AS INTEGER))IS(CASE WHEN '-1372276312' THEN t1.c1 END))  NULLS FIRST, (((((x'10', t1.c1, t1.c1))>((t1.c0, t1.c1, t1.c1)))) NOT BETWEEN (((t1.c0)||(t1.c0))) AND (CAST(t1.c1 AS INTEGER)));
SELECT DISTINCT * FROM t1 WHERE (GLOB(((t1.c1)AND(t1.c0)), ((t1.c1)<>(t1.c0)))) ORDER BY (((+ (t1.c0))) BETWEEN (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END) AND (((t1.c1)%(t1.c1)))) DESC;
SELECT ALL * FROM t1 WHERE (GLOB(((t1.c1)AND(t1.c0)), ((t1.c1)!=(t1.c0)))) ORDER BY ((CAST(t1.c1 AS INTEGER))IS(CASE WHEN '-1372276312' THEN t1.c1 END))  NULLS FIRST, (((((x'10', t1.c1, t1.c1))>((t1.c0, t1.c1, t1.c1)))) NOT BETWEEN (((t1.c0)||(t1.c0))) AND (CAST(t1.c1 AS INTEGER)));
SELECT DISTINCT * FROM t1 WHERE (GLOB(((t1.c1)AND(t1.c0)), ((t1.c1)<>(t1.c0)))) ORDER BY (((+ (t1.c0))) BETWEEN (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END) AND (((t1.c1)%(t1.c1)))) DESC;
SELECT MAX(t1.c1) FROM t1 WHERE ((~ (CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((~ (CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END))) ORDER BY (('bcS')<((((t1.c1, t1.c1, '1041810244')) BETWEEN ((t1.c0, 0xffffffffee5bbb80, t1.c1)) AND ((t1.c0, t1.c0, t1.c1))))), CAST((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, '204650698'))) AS INTEGER), ((CASE t1.c1  WHEN t1.c1 THEN NULL ELSE t1.c0 END) NOTNULL)  NULLS FIRST LIMIT 0x2;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, ((t1.c1)*(t1.c1)))) AND ((t1.c1 COLLATE RTRIM, '605019181'))));
SELECT * FROM t1 WHERE ((((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, ((t1.c1)*(t1.c1)))) AND ((t1.c1 COLLATE RTRIM, '605019181'))))AND(CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END AS BLOB)))) LIMIT 0X3 INTERSECT SELECT ALL * FROM t1 WHERE ((NOT ((t1.c0 IN (t1.c0))))) LIMIT 3;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, ((t1.c1)*(t1.c1)))) AND ((t1.c1 COLLATE RTRIM, '605019181'))));
SELECT * FROM t1 WHERE ((((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, ((t1.c1)*(t1.c1)))) AND ((t1.c1 COLLATE RTRIM, '605019181'))))AND(CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END AS BLOB)))) LIMIT 0X3 INTERSECT SELECT ALL * FROM t1 WHERE ((NOT ((t1.c0 IN (t1.c0))))) LIMIT 3;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (LIKELIHOOD(json_valid(t1.c0), (((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))))) ORDER BY ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 END)+((t1.c1 IN (t1.c1)))) DESC, (((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)) IN ())  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1 WHERE (LIKELIHOOD(json_valid(t1.c0), (((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))))) ORDER BY ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 END)+((t1.c1 IN (t1.c1)))) DESC, (((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)) IN ())  NULLS FIRST LIMIT 0X0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (x'7ac19c905e'))  WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 END THEN (NOT (t1.c1)) END) ORDER BY ((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c1)<>('666811196')))))AND((t1.c1 IN (t1.c0)))))OR((- (t1.c0)))) DESC  NULLS LAST, (((t1.c1 IN (t1.c0))) BETWEEN ('503203198') AND (IFNULL(t1.c1, t1.c1)))  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (x'7ac19c905e'))  WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 END THEN (NOT (t1.c1)) END)AND(CASE WHEN ((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)) THEN (- (t1.c0)) END))) ORDER BY ((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c1)<>('666811196')))))AND((t1.c1 IN (t1.c0)))))OR((- (t1.c0)))) DESC  NULLS LAST, (((t1.c1 IN (t1.c0))) BETWEEN ('503203198') AND (IFNULL(t1.c1, t1.c1)))  NULLS FIRST;
SELECT * FROM t1 WHERE ((((- (t1.c0)))>>(((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1))))) ORDER BY CASE WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END THEN x'3f' END DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((- (t1.c0)))>>(((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1))))) ORDER BY ((((t1.c0)LIKE('2035534607')))+(CAST(t1.c0 AS NUMERIC))) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT * FROM t1 WHERE (((((t1.c1)GLOB(t1.c0))) NOTNULL)) ORDER BY ((((t1.c0)LIKE('2035534607')))+(CAST(t1.c0 AS NUMERIC))) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE ((((- (t1.c0)))>>(((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1))))) ORDER BY CASE WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END THEN x'3f' END DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((- (t1.c0)))>>(((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1))))) ORDER BY ((((t1.c0)LIKE('2035534607')))+(CAST(t1.c0 AS NUMERIC))) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT * FROM t1 WHERE (((((t1.c1)GLOB(t1.c0))) NOTNULL)) ORDER BY ((((t1.c0)LIKE('2035534607')))+(CAST(t1.c0 AS NUMERIC))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((((((+ (t1.c0)))AND(((t1.c1)-(t1.c1)))))AND(x'd1366d')))AND(CAST(t1.c0 AS INTEGER)))) ORDER BY (+ (t1.c0)) COLLATE NOCASE, ((((t1.c1, t1.c0, t1.c1, t1.c0))<((t1.c1, t1.c0, t1.c0, 0.21306623192624052))) IN ((t1.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((((+ (t1.c0)))AND(((t1.c1)-(t1.c1)))))AND(x'd1366d')))AND(CAST(t1.c0 AS INTEGER)))) ORDER BY (+ (t1.c0)) COLLATE NOCASE, ((((t1.c1, t1.c0, t1.c1, t1.c0))<((t1.c1, t1.c0, t1.c0, 0.21306623192624052))) IN ((t1.c0 IN ())))  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (CASE t1.c0 COLLATE NOCASE  WHEN (NOT (t1.c0)) THEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) ELSE t1.c1 COLLATE RTRIM END) ORDER BY (+ (t1.c0)) COLLATE NOCASE, ((((t1.c1, t1.c0, t1.c1, t1.c0))<((t1.c1, t1.c0, t1.c0, 0.21306623192624052))) IN ((t1.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((((+ (t1.c0)))AND(((t1.c1)-(t1.c1)))))AND(x'd1366d')))AND(CAST(t1.c0 AS INTEGER)))) ORDER BY (+ (t1.c0)) COLLATE NOCASE, ((((t1.c1, t1.c0, t1.c1, t1.c0))<((t1.c1, t1.c0, t1.c0, 0.21306623192624052))) IN ((t1.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((((+ (t1.c0)))AND(((t1.c1)-(t1.c1)))))AND(x'd1366d')))AND(CAST(t1.c0 AS INTEGER)))) ORDER BY (+ (t1.c0)) COLLATE NOCASE, ((((t1.c1, t1.c0, t1.c1, t1.c0))<((t1.c1, t1.c0, t1.c0, 0.21306623192624052))) IN ((t1.c0 IN ())))  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (CASE t1.c0 COLLATE NOCASE  WHEN (NOT (t1.c0)) THEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) ELSE t1.c1 COLLATE RTRIM END) ORDER BY (+ (t1.c0)) COLLATE NOCASE, ((((t1.c1, t1.c0, t1.c1, t1.c0))<((t1.c1, t1.c0, t1.c0, 0.21306623192624052))) IN ((t1.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (COALESCE(t1.c0 COLLATE BINARY, CAST(t1.c1 AS NUMERIC), t1.c0)) ORDER BY ((t1.c1)||(t1.c1)) COLLATE RTRIM  NULLS FIRST, NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((COALESCE(t1.c0 COLLATE BINARY, CAST(t1.c1 AS NUMERIC), t1.c0))AND((+ (CASE WHEN t1.c0 THEN t1.c0 END))))) ORDER BY ((t1.c1)||(t1.c1)) COLLATE RTRIM  NULLS FIRST, NULL  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE NOCASE)/((t1.c1 IN (t1.c1))))) ORDER BY ((t1.c1)||(t1.c1)) COLLATE RTRIM  NULLS FIRST, NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (((t1.c0)AND(t1.c0))))) ORDER BY CAST(CAST(t1.c0 AS REAL) AS NUMERIC) DESC, CASE ((t1.c0)GLOB(t1.c0))  WHEN CAST(t1.c0 AS INTEGER) THEN CAST(t1.c0 AS BLOB) WHEN (+ (t1.c0)) THEN x'' WHEN ((t1.c0)&(t1.c1)) THEN (t1.c1 IN (t1.c1)) ELSE ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) END DESC, UNLIKELY(t1.c1) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((+ (((t1.c0)AND(t1.c0))))) ORDER BY CAST(CAST(t1.c0 AS REAL) AS NUMERIC) DESC, CASE ((t1.c0)GLOB(t1.c0))  WHEN CAST(t1.c0 AS INTEGER) THEN CAST(t1.c0 AS BLOB) WHEN (+ (t1.c0)) THEN x'' WHEN ((t1.c0)&(t1.c1)) THEN (t1.c1 IN (t1.c1)) ELSE ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) END DESC, UNLIKELY(t1.c1) COLLATE NOCASE  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c1 AS REAL)) NOT BETWEEN (((t1.c1)>=(t1.c0))) AND (t1.c0 COLLATE BINARY))) ORDER BY CAST(CAST(t1.c0 AS REAL) AS NUMERIC) DESC, CASE ((t1.c0)GLOB(t1.c0))  WHEN CAST(t1.c0 AS INTEGER) THEN CAST(t1.c0 AS BLOB) WHEN (+ (t1.c0)) THEN x'' WHEN ((t1.c0)&(t1.c1)) THEN (t1.c1 IN (t1.c1)) ELSE ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) END DESC, UNLIKELY(t1.c1) COLLATE NOCASE  NULLS LAST;
SELECT * FROM t1 WHERE ('-415052413') ORDER BY ((t1.c0 IN ()) IN ((- (t1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ('-415052413') ORDER BY ((t1.c0 IN ()) IN ((- (t1.c0)))) ASC  NULLS FIRST LIMIT 2;
SELECT * FROM t1 WHERE ('-415052413') ORDER BY ((t1.c0 IN ()) IN ((- (t1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ('-415052413') ORDER BY ((t1.c0 IN ()) IN ((- (t1.c0)))) ASC  NULLS FIRST LIMIT 2;
SELECT MAX(t1.c0) FROM t1 WHERE ((-837093372 IN ()));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((0xffffffffce1af804 IN ()))AND(((t1.c0 COLLATE RTRIM)-((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))))))) ORDER BY UNLIKELY(x'5c') ASC  NULLS LAST, load_extension(t1.c1) COLLATE RTRIM;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS REAL))<((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1)))))) ORDER BY (((t1.c0 IN (t1.c0))) NOTNULL) DESC  NULLS LAST, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))IS(CASE t1.c1  WHEN 0xffffffffdd058875 THEN t1.c0 ELSE t1.c1 END))  NULLS FIRST;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS REAL))<((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1)))))) ORDER BY (((t1.c0 IN (t1.c0))) NOTNULL) DESC  NULLS LAST, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))IS(CASE t1.c1  WHEN -586839947 THEN t1.c0 ELSE t1.c1 END))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS REAL))<((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1)))))) ORDER BY (((t1.c0 IN (t1.c0))) NOTNULL) DESC  NULLS LAST, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))IS(CASE t1.c1  WHEN 0xffffffffdd058875 THEN t1.c0 ELSE t1.c1 END))  NULLS FIRST;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS REAL))<((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1)))))) ORDER BY (((t1.c0 IN (t1.c0))) NOTNULL) DESC  NULLS LAST, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))IS(CASE t1.c1  WHEN -586839947 THEN t1.c0 ELSE t1.c1 END))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE RTRIM) BETWEEN (((t1.c1)AND(t1.c0))) AND (0X272c2443)));
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE RTRIM) BETWEEN (((t1.c1)AND(t1.c0))) AND (0X272c2443))) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE RTRIM) BETWEEN (((t1.c1)AND(t1.c0))) AND (0X272c2443)));
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE RTRIM) BETWEEN (((t1.c1)AND(t1.c0))) AND (0X272c2443))) LIMIT 0x1;
SELECT COUNT(*) FROM t1 WHERE ((~ ((((t1.c1, t1.c0))<>((t1.c0, t1.c1)))))) ORDER BY ((((((t1.c1)AND(t1.c0)))AND(t1.c0)))<(t1.c0 COLLATE RTRIM)), ((CAST(t1.c0 AS INTEGER)) NOT BETWEEN (t1.c1 COLLATE NOCASE) AND ((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, 0Xffffffffffeee95a)) AND ((t1.c1, t1.c1)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((~ ((((t1.c1, t1.c0))<>((t1.c0, t1.c1)))))) ORDER BY ((((((t1.c1)AND(t1.c0)))AND(t1.c0)))<(t1.c0 COLLATE RTRIM)), ((CAST(t1.c0 AS INTEGER)) NOT BETWEEN (t1.c1 COLLATE NOCASE) AND ((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, 0Xffffffffffeee95a)) AND ((t1.c1, t1.c1))))) LIMIT 2;
SELECT * FROM t1 WHERE (((((((CAST(t1.c1 AS NUMERIC))OR(((t1.c1) IS TRUE))))AND(json_insert(t1.c0, t1.c0, t1.c0, t1.c0))))AND((- (t1.c0))))) ORDER BY CHAR(t1.c0, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))  NULLS FIRST, ((((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)AND((t1.c0 IN (t1.c0)))))AND(((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))))AND(((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((((CAST(t1.c1 AS NUMERIC))OR(((t1.c1) IS TRUE))))AND(json_insert(t1.c0, t1.c0, t1.c0, t1.c0))))AND((- (t1.c0))))) ORDER BY CHAR(t1.c0, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))  NULLS FIRST, ((((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)AND((t1.c0 IN (t1.c0)))))AND(((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))))AND(((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((CAST(t1.c1 AS NUMERIC))OR(((t1.c1) IS TRUE))))AND(json_insert(t1.c0, t1.c0, t1.c0, t1.c0))))AND((- (t1.c0))))) ORDER BY CHAR(t1.c0, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))  NULLS FIRST, ((((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)AND((t1.c0 IN (t1.c0)))))AND(((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))))AND(((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))) ASC  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE ((NOT (((t1.c1) NOTNULL))));
SELECT MIN(t1.c0) FROM t1 WHERE ((((NOT (((t1.c1) NOTNULL))))AND((~ (CAST(t1.c1 AS BLOB))))));
SELECT * FROM t1 WHERE (((((NOT (t1.c0))))>=((((t1.c1)<(t1.c1))))));
SELECT ALL * FROM t1 WHERE (((((((NOT (t1.c0))))=((((t1.c1)<(t1.c1))))))AND(CASE WHEN (t1.c1 IN (t1.c0, t1.c1)) THEN ((t1.c1)==(t1.c0)) ELSE (((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, NULL))) END))) LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS BLOB))>=(((t1.c1) BETWEEN (t1.c0) AND (t1.c1))))) LIMIT 0x0;
SELECT * FROM t1 WHERE (((((NOT (t1.c0))))>=((((t1.c1)<(t1.c1))))));
SELECT ALL * FROM t1 WHERE (((((((NOT (t1.c0))))=((((t1.c1)<(t1.c1))))))AND(CASE WHEN (t1.c1 IN (t1.c0, t1.c1)) THEN ((t1.c1)==(t1.c0)) ELSE (((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, NULL))) END))) LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS BLOB))>=(((t1.c1) BETWEEN (t1.c0) AND (t1.c1))))) LIMIT 0x0;
SELECT * FROM t1 WHERE ((((NULL, 0.02541726709560943))<=((((t1.c0)|(t1.c1)), ((t1.c0)LIKE(t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((((NULL, 0.02541726709560943))<((((t1.c0)|(t1.c1)), ((t1.c0)LIKE(t1.c1))))))AND(TRIM((t1.c1 IN ()), (((t1.c1))!=((t1.c1))))))) ORDER BY (((((NOT (t1.c1)))AND(((t1.c1) IS FALSE))))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) DESC, t1.c1, (NULL COLLATE NOCASE IN (t1.c1))  NULLS LAST, ((t1.c0 COLLATE RTRIM) BETWEEN (t1.c1 COLLATE BINARY) AND (NULL))  NULLS FIRST;
SELECT * FROM t1 WHERE ((((NULL, 0.02541726709560943))<=((((t1.c0)|(t1.c1)), ((t1.c0)LIKE(t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((((NULL, 0.02541726709560943))<((((t1.c0)|(t1.c1)), ((t1.c0)LIKE(t1.c1))))))AND(TRIM((t1.c1 IN ()), (((t1.c1))!=((t1.c1))))))) ORDER BY (((((NOT (t1.c1)))AND(((t1.c1) IS FALSE))))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) DESC, t1.c1, (NULL COLLATE NOCASE IN (t1.c1))  NULLS LAST, ((t1.c0 COLLATE RTRIM) BETWEEN (t1.c1 COLLATE BINARY) AND (NULL))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY CASE WHEN ((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)) THEN ((t1.c1)OR(t1.c1)) WHEN ROUND(t1.c1, t1.c1) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END END DESC;
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND((((- (t1.c0)))>>(CAST(t1.c1 AS BLOB)))))) ORDER BY ((((- ('8i')), (t1.c0 IN ()), (NOT (t1.c0)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))<=((CAST(x'' AS TEXT), (((t1.c0, t1.c1, t1.c1))>=((t1.c1, t1.c1, t1.c1))), CAST(t1.c0 AS BLOB), CAST(t1.c1 AS INTEGER)))), t1.c0  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN 0.36144237627945386 THEN t1.c1 ELSE t1.c1 END) IS TRUE)) ORDER BY ((((- ('8i')), (t1.c0 IN ()), (NOT (t1.c0)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))<=((CAST(x'' AS TEXT), (((t1.c0, t1.c1, t1.c1))>=((t1.c1, t1.c1, t1.c1))), CAST(t1.c0 AS BLOB), CAST(t1.c1 AS INTEGER)))), t1.c0  NULLS LAST LIMIT 0X3;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY CASE WHEN ((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)) THEN ((t1.c1)OR(t1.c1)) WHEN ROUND(t1.c1, t1.c1) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END END DESC;
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND((((- (t1.c0)))>>(CAST(t1.c1 AS BLOB)))))) ORDER BY ((((- ('8i')), (t1.c0 IN ()), (NOT (t1.c0)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))<=((CAST(x'' AS TEXT), (((t1.c0, t1.c1, t1.c1))>=((t1.c1, t1.c1, t1.c1))), CAST(t1.c0 AS BLOB), CAST(t1.c1 AS INTEGER)))), t1.c0  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN 0.36144237627945386 THEN t1.c1 ELSE t1.c1 END) IS TRUE)) ORDER BY ((((- ('8i')), (t1.c0 IN ()), (NOT (t1.c0)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))<=((CAST(x'' AS TEXT), (((t1.c0, t1.c1, t1.c1))>=((t1.c1, t1.c1, t1.c1))), CAST(t1.c0 AS BLOB), CAST(t1.c1 AS INTEGER)))), t1.c0  NULLS LAST LIMIT 0X3;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1)) BETWEEN (('715179311', t1.c1 COLLATE NOCASE)) AND ((CASE t1.c0  WHEN x'705d0d' THEN t1.c0 ELSE x'b3' END, ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(x'da')))OR(0.28305881043194536)))))) ORDER BY t1.c0 DESC, t1.c1;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1)) BETWEEN (('715179311', t1.c1 COLLATE NOCASE)) AND ((CASE t1.c0  WHEN x'705d0d' THEN t1.c0 ELSE x'b3' END, ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(x'da')))OR(0.28305881043194536)))))) ORDER BY t1.c0 DESC, t1.c1 LIMIT 0x3;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1)) BETWEEN (('715179311', t1.c1 COLLATE NOCASE)) AND ((CASE t1.c0  WHEN x'705d0d' THEN t1.c0 ELSE x'b3' END, ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(x'da')))OR(0.28305881043194536)))))) ORDER BY t1.c0 DESC, t1.c1;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1)) BETWEEN (('715179311', t1.c1 COLLATE NOCASE)) AND ((CASE t1.c0  WHEN x'705d0d' THEN t1.c0 ELSE x'b3' END, ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(x'da')))OR(0.28305881043194536)))))) ORDER BY t1.c0 DESC, t1.c1 LIMIT 0x3;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))<(((t1.c0) NOTNULL)))) ORDER BY '8';
SELECT MAX(t1.c0) FROM t1 WHERE (((((CAST(t1.c0 AS INTEGER))<(((t1.c0) NOTNULL))))AND(((((t1.c0) IS FALSE))-(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c0 END))))) ORDER BY '8' LIMIT 0x1;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))*(((((1315709673)OR(t1.c1)))AND(t1.c0))))) ORDER BY CAST(CAST(t1.c0 AS BLOB) AS NUMERIC)  NULLS LAST, (((((t1.c1)/(t1.c0)), json_array_length(x'6b60', t1.c0), '0.4263169187658743'))>((((t1.c1)>('-747868847')), CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, CAST(t1.c0 AS NUMERIC))));
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))*(((((0x4e6c22e9)OR(t1.c1)))AND(t1.c0))))) ORDER BY ((t1.c1)<=(t1.c1)) COLLATE RTRIM ASC;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))*(((((1315709673)OR(t1.c1)))AND(t1.c0))))) ORDER BY CAST(CAST(t1.c0 AS BLOB) AS NUMERIC)  NULLS LAST, (((((t1.c1)/(t1.c0)), json_array_length(x'6b60', t1.c0), '0.4263169187658743'))>((((t1.c1)>('-747868847')), CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, CAST(t1.c0 AS NUMERIC))));
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))*(((((0x4e6c22e9)OR(t1.c1)))AND(t1.c0))))) ORDER BY ((t1.c1)<=(t1.c1)) COLLATE RTRIM ASC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))IS(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))IS(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((t1.c0) IS TRUE) IN ((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT * FROM t1 WHERE ((t1.c1 IN ()) COLLATE BINARY) ORDER BY (((t1.c0) IS TRUE) IN ()) DESC;
SELECT ALL * FROM t1 WHERE ((t1.c1 IN ()) COLLATE BINARY) ORDER BY ((t1.c0) BETWEEN (CASE t1.c1  WHEN 'ꋣ' THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) AND (((t1.c1)OR(t1.c0)))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((t1.c1 IN ()) COLLATE BINARY) ORDER BY (((t1.c0) IS TRUE) IN ()) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)IS NOT(((((NULL)AND(t1.c1)))OR(t1.c0))))) ORDER BY t1.c1 ASC  NULLS FIRST, (TRIM(t1.c1) IN (NULL)) ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)IS NOT(((((NULL)AND(t1.c1)))OR(t1.c0)))))AND(((((((((((((CAST(t1.c0 AS TEXT))AND(x'3cc1')))OR(1.041810244E9 COLLATE BINARY)))OR(((t1.c1) IS TRUE))))OR(((t1.c0)IS NOT(t1.c1)))))OR(CAST(t1.c1 AS REAL))))AND(t1.c0 COLLATE BINARY))))) ORDER BY t1.c1 ASC  NULLS FIRST, (TRIM(t1.c1) IN (NULL)) ASC;
SELECT * FROM t1 NOT INDEXED WHERE ((~ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE ((~ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT * FROM t1 NOT INDEXED WHERE ((~ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE ((~ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((t1.c1) IS FALSE)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END) IS FALSE) ASC, (~ (((t1.c1)<=(t1.c1)))) ASC  NULLS FIRST, t1.c0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((t1.c1) IS FALSE)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END) IS FALSE) ASC, (~ (((t1.c1)<=(t1.c1)))) ASC  NULLS FIRST, t1.c0 LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))IS NOT(CAST(t1.c0 AS BLOB))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))IS NOT(CAST(t1.c0 AS BLOB)))) ORDER BY (NOT (t1.c0)) DESC, (((t1.c1)/(t1.c0)) IN ()) DESC  NULLS FIRST, ((((+ (t1.c1)), ((((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0)), ((t1.c0)<<(t1.c1)), UNLIKELY(DISTINCT -1.0710109E7), t1.c1 COLLATE NOCASE))>(('tXm⺵', ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), (- (x'')), t1.c1 COLLATE RTRIM, NULL))) ASC;
SELECT ALL * FROM t1 WHERE ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))IS NOT(CAST(t1.c0 AS BLOB))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))IS NOT(CAST(t1.c0 AS BLOB)))) ORDER BY (NOT (t1.c0)) DESC, (((t1.c1)/(t1.c0)) IN ()) DESC  NULLS FIRST, ((((+ (t1.c1)), ((((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0)), ((t1.c0)<<(t1.c1)), UNLIKELY(DISTINCT -1.0710109E7), t1.c1 COLLATE NOCASE))>(('tXm⺵', ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), (- (x'')), t1.c1 COLLATE RTRIM, NULL))) ASC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((NULL)AND(t1.c0)) IN ((((t1.c0))=((t1.c1))))));
SELECT MAX(t1.c1) FROM t1 WHERE ((((((NULL)AND(t1.c0)) IN ((((t1.c0))=((t1.c1))))))AND(((((t1.c0) BETWEEN (t1.c1) AND (NULL)))!=(t1.c0 COLLATE BINARY))))) ORDER BY ((NULL)-(((t1.c0) NOT NULL)))  NULLS LAST, CAST(((t1.c0)GLOB(t1.c1)) AS BLOB) ASC LIMIT 0X2;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE ((t1.c1) IS FALSE)  WHEN ((t1.c0)>=(t1.c1)) THEN ((t1.c0)<(t1.c0)) END);
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE ((t1.c1) IS FALSE)  WHEN ((t1.c0)>=(t1.c1)) THEN ((t1.c0)<(t1.c0)) END) ORDER BY t1.c0  NULLS LAST, ((((t1.c0)>(t1.c0))) NOT NULL) ASC LIMIT 0x0;
SELECT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c0)IS NOT(t1.c1))))) ORDER BY CASE t1.c1  WHEN t1.c1 THEN t1.c1 END COLLATE BINARY;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c0)IS NOT(t1.c1))))) ORDER BY CASE t1.c1  WHEN t1.c1 THEN t1.c1 END COLLATE BINARY;
SELECT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c0)IS NOT(t1.c1))))) ORDER BY CASE t1.c1  WHEN t1.c1 THEN t1.c1 END COLLATE BINARY;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c0)IS NOT(t1.c1))))) ORDER BY CASE t1.c1  WHEN t1.c1 THEN t1.c1 END COLLATE BINARY;
SELECT * FROM t1 WHERE ((((t1.c1 IN (t1.c1, t1.c1))) NOT BETWEEN (x'ec') AND ((+ (t1.c1)))));
SELECT ALL * FROM t1 WHERE ((((((t1.c1 IN (t1.c1, t1.c1))) NOT BETWEEN (x'ec') AND ((+ (t1.c1)))))AND((((t1.c1 COLLATE NOCASE, ((((((((t1.c0)OR('305833039')))AND(t1.c1)))OR(t1.c1)))OR(t1.c1))))=((IFNULL(DISTINCT t1.c1, t1.c1), ((t1.c1) NOTNULL))))))) ORDER BY ((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR('-1696962722'))) NOT NULL) ASC  NULLS FIRST, ((((((t1.c1)IS NOT(t1.c1)))AND((- (t1.c0)))))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))) DESC;
SELECT * FROM t1 WHERE ((((t1.c1 IN (t1.c1, t1.c1))) NOT BETWEEN (x'ec') AND ((+ (t1.c1)))));
SELECT ALL * FROM t1 WHERE ((((((t1.c1 IN (t1.c1, t1.c1))) NOT BETWEEN (x'ec') AND ((+ (t1.c1)))))AND((((t1.c1 COLLATE NOCASE, ((((((((t1.c0)OR('305833039')))AND(t1.c1)))OR(t1.c1)))OR(t1.c1))))=((IFNULL(DISTINCT t1.c1, t1.c1), ((t1.c1) NOTNULL))))))) ORDER BY ((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR('-1696962722'))) NOT NULL) ASC  NULLS FIRST, ((((((t1.c1)IS NOT(t1.c1)))AND((- (t1.c0)))))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))) DESC;
SELECT ALL * FROM t1 WHERE (((t1.c0)+(((t1.c0)=(t1.c0))))) ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))-(x'')) ASC  NULLS LAST, CAST((0.24537744896896008 IN (t1.c1, t1.c1)) AS REAL)  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c0)+(((t1.c0)=(t1.c0)))))AND(t1.c1))) ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))-(x'')) ASC  NULLS LAST, CAST((0.24537744896896008 IN (t1.c1, t1.c1)) AS REAL)  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE ('') ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))-(x'')) ASC  NULLS LAST, CAST((0.24537744896896008 IN (t1.c1, t1.c1)) AS REAL)  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((t1.c0)+(((t1.c0)=(t1.c0))))) ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))-(x'')) ASC  NULLS LAST, CAST((0.24537744896896008 IN (t1.c1, t1.c1)) AS REAL)  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c0)+(((t1.c0)=(t1.c0)))))AND(t1.c1))) ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))-(x'')) ASC  NULLS LAST, CAST((0.24537744896896008 IN (t1.c1, t1.c1)) AS REAL)  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE ('') ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))-(x'')) ASC  NULLS LAST, CAST((0.24537744896896008 IN (t1.c1, t1.c1)) AS REAL)  NULLS FIRST LIMIT 1;
SELECT COUNT(*) FROM t1 WHERE ((+ (((t1.c1)IS NOT(x'3b')))));
SELECT COUNT(*) FROM t1 WHERE ((+ (((t1.c1)IS NOT(x'3b'))))) ORDER BY ((((((t1.c1)OR(t1.c1)))AND(t1.c0))) IS FALSE) DESC INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1))))) ORDER BY ((((((t1.c1)OR(t1.c1)))AND(t1.c0))) IS FALSE) DESC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (t1.c0);
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((t1.c0)AND(((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) NOTNULL)))) LIMIT 0X0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (t1.c0) ORDER BY t1.c0 ASC  NULLS LAST, t1.c1 ASC  NULLS LAST, CAST(CAST(t1.c1 AS TEXT) AS INTEGER) ASC  NULLS LAST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((t1.c0)AND((+ (CASE t1.c1  WHEN t1.c1 THEN t1.c1 END))))) ORDER BY (LTRIM(t1.c1) IN ()), CASE CASE WHEN x'ec4005' THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END  WHEN t1.c0 THEN t1.c1 WHEN CHAR(t1.c0, t1.c0, t1.c1) THEN CAST(t1.c0 AS NUMERIC) WHEN (t1.c1 IN (t1.c0, t1.c0)) THEN '' END ASC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (0.28994764862054145) ORDER BY (LTRIM(t1.c1) IN ()), CASE CASE WHEN x'ec4005' THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END  WHEN t1.c0 THEN t1.c1 WHEN CHAR(t1.c0, t1.c0, t1.c1) THEN CAST(t1.c0 AS NUMERIC) WHEN (t1.c1 IN (t1.c0, t1.c0)) THEN '' END ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CASE 0Xffffffffd20e8f81  WHEN ((((((((t1.c0)AND(0.42064951115834404)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) THEN json_insert(0.5273901463608457, t1.c1, t1.c0) WHEN CAST(t1.c1 AS TEXT) THEN CAST(t1.c0 AS INTEGER) ELSE ((x'1ef8') BETWEEN (NULL) AND (t1.c0)) END) ORDER BY ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))IS NOT((t1.c1 IN (t1.c1)))) DESC, ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 END) NOTNULL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE -770797695  WHEN ((((((((t1.c0)AND(0.42064951115834404)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) THEN json_insert(0.5273901463608457, t1.c1, t1.c0) WHEN CAST(t1.c1 AS TEXT) THEN CAST(t1.c0 AS INTEGER) ELSE ((x'1ef8') BETWEEN (NULL) AND (t1.c0)) END)AND((((t1.c0)) NOT BETWEEN (((t1.c0 IN (t1.c1)))) AND ((((t1.c0) NOTNULL))))))) ORDER BY ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))IS NOT((t1.c1 IN (t1.c1)))) DESC, ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 END) NOTNULL) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (COALESCE(((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))) ORDER BY ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))IS NOT((t1.c1 IN (t1.c1)))) DESC, ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 END) NOTNULL) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (CASE 0Xffffffffd20e8f81  WHEN ((((((((t1.c0)AND(0.42064951115834404)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) THEN json_insert(0.5273901463608457, t1.c1, t1.c0) WHEN CAST(t1.c1 AS TEXT) THEN CAST(t1.c0 AS INTEGER) ELSE ((x'1ef8') BETWEEN (NULL) AND (t1.c0)) END) ORDER BY ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))IS NOT((t1.c1 IN (t1.c1)))) DESC, ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 END) NOTNULL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE -770797695  WHEN ((((((((t1.c0)AND(0.42064951115834404)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) THEN json_insert(0.5273901463608457, t1.c1, t1.c0) WHEN CAST(t1.c1 AS TEXT) THEN CAST(t1.c0 AS INTEGER) ELSE ((x'1ef8') BETWEEN (NULL) AND (t1.c0)) END)AND((((t1.c0)) NOT BETWEEN (((t1.c0 IN (t1.c1)))) AND ((((t1.c0) NOTNULL))))))) ORDER BY ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))IS NOT((t1.c1 IN (t1.c1)))) DESC, ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 END) NOTNULL) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (COALESCE(((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))) ORDER BY ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))IS NOT((t1.c1 IN (t1.c1)))) DESC, ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 END) NOTNULL) DESC  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE (NULL);
SELECT COUNT(*) FROM t1 WHERE (NULL) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((x'13bc' COLLATE BINARY)|((t1.c0 IN (t1.c1)))));
SELECT MIN(t1.c1) FROM t1 WHERE (LTRIM((t1.c0 IN ())));
SELECT MIN(t1.c1) FROM t1 WHERE (((LTRIM((t1.c0 IN ())))AND(((((510461407)AND(((((t1.c0)AND(t1.c1)))OR('蜨Eb')))))OR((((t1.c0, t1.c0))!=((t1.c0, t1.c1)))))))) ORDER BY (+ (((t1.c0)GLOB(t1.c1)))), ((1.08318599E9 COLLATE RTRIM) NOT BETWEEN (LIKELIHOOD('1703411045', t1.c0)) AND (CAST(t1.c0 AS NUMERIC))) ASC  NULLS FIRST, ((t1.c0)<<(t1.c1)) COLLATE NOCASE DESC  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t1 WHERE (SQLITE_SOURCE_ID());
SELECT * FROM t1 WHERE (((SQLITE_SOURCE_ID())AND(((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND('1783416679')))&(NULL))))) LIMIT 0x2 INTERSECT SELECT * FROM t1 WHERE ((((((t1.c0)>=(t1.c0))))=((((((t1.c0)OR(0.7962996310482602)))OR(t1.c0)))))) LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (SQLITE_SOURCE_ID());
SELECT * FROM t1 WHERE (((SQLITE_SOURCE_ID())AND(((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND('1783416679')))&(NULL))))) LIMIT 0x2 INTERSECT SELECT * FROM t1 WHERE ((((((t1.c0)>=(t1.c0))))=((((((t1.c0)OR(0.7962996310482602)))OR(t1.c0)))))) LIMIT 0x2;
SELECT * FROM t1 WHERE ((((((((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((NULL, t1.c1, t1.c0))))OR(CHAR(t1.c1))))OR((((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c0))))))OR((t1.c1 IN ())))) ORDER BY ((((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))IS(t1.c0)) DESC;
SELECT ALL * FROM t1 WHERE ((((((((((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((NULL, t1.c1, t1.c0))))OR(CHAR(t1.c1))))OR((((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c0))))))OR((t1.c1 IN ()))))AND((((t1.c1 IN (t1.c0))) NOTNULL)))) ORDER BY (((t1.c0)==(t1.c1)) IN (((t1.c0)%(t1.c0)))) LIMIT 0X4;
SELECT * FROM t1 WHERE ((((((((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((NULL, t1.c1, t1.c0))))OR(CHAR(t1.c1))))OR((((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c0))))))OR((t1.c1 IN ())))) ORDER BY ((((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))IS(t1.c0)) DESC;
SELECT ALL * FROM t1 WHERE ((((((((((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((NULL, t1.c1, t1.c0))))OR(CHAR(t1.c1))))OR((((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c0))))))OR((t1.c1 IN ()))))AND((((t1.c1 IN (t1.c0))) NOTNULL)))) ORDER BY (((t1.c0)==(t1.c1)) IN (((t1.c0)%(t1.c0)))) LIMIT 0X4;
SELECT MIN(t1.c1) FROM t1 WHERE (((((((((((t1.c1 COLLATE BINARY)OR(((NULL)*(t1.c1)))))OR(CAST(t1.c1 AS REAL))))AND(CAST(t1.c0 AS NUMERIC))))OR(t1.c0)))OR(((x'06') NOT NULL))));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((((((((t1.c1 COLLATE BINARY)OR(((NULL)*(t1.c1)))))OR(CAST(t1.c1 AS REAL))))AND(CAST(t1.c0 AS NUMERIC))))OR(t1.c0)))OR(((x'06') NOT NULL))))AND(HEX('' COLLATE RTRIM)))) ORDER BY CASE WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN ((((((((((762872928)AND(t1.c0)))OR('q')))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)) WHEN TIME(t1.c0, t1.c1, t1.c0, t1.c1, t1.c1) THEN ((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)) ELSE (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))) END LIMIT 0x0 INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (((((((((t1.c1)OR(t1.c1)))OR((t1.c0 IN ()))))OR(((t1.c0)|(t1.c1)))))AND(((t1.c0)=(t1.c0))))) ORDER BY CASE WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN ((((((((((762872928)AND(t1.c0)))OR('q')))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)) WHEN TIME(t1.c0, t1.c1, t1.c0, t1.c1, t1.c1) THEN ((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)) ELSE (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))) END LIMIT 0;
SELECT * FROM t1 WHERE (((((t1.c0)|(t1.c0))) NOT BETWEEN (((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1))) AND (((0X32089365) BETWEEN (t1.c0) AND (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)|(t1.c0))) NOT BETWEEN (((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1))) AND (((0X32089365) BETWEEN (t1.c0) AND (t1.c1)))))AND(CASE WHEN (~ (t1.c0)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) WHEN (t1.c0 IN (t1.c1, t1.c0)) THEN COALESCE(t1.c0, t1.c1, t1.c0, t1.c1, t1.c0) WHEN ((t1.c0) IS FALSE) THEN CAST(t1.c0 AS INTEGER) END))) ORDER BY (((t1.c0 IN (t1.c0, t1.c0)))>=(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)) ASC, (0.8494058362926951 IN (t1.c1, t1.c0)) COLLATE BINARY DESC LIMIT 0X0;
SELECT * FROM t1 WHERE (((((t1.c0)|(t1.c0))) NOT BETWEEN (((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1))) AND (((0X32089365) BETWEEN (t1.c0) AND (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)|(t1.c0))) NOT BETWEEN (((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1))) AND (((0X32089365) BETWEEN (t1.c0) AND (t1.c1)))))AND(CASE WHEN (~ (t1.c0)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) WHEN (t1.c0 IN (t1.c1, t1.c0)) THEN COALESCE(t1.c0, t1.c1, t1.c0, t1.c1, t1.c0) WHEN ((t1.c0) IS FALSE) THEN CAST(t1.c0 AS INTEGER) END))) ORDER BY (((t1.c0 IN (t1.c0, t1.c0)))>=(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)) ASC, (0.8494058362926951 IN (t1.c1, t1.c0)) COLLATE BINARY DESC LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1 WHERE (LOWER(DISTINCT t1.c0));
SELECT ALL COUNT(*) FROM t1 WHERE (LOWER(DISTINCT t1.c0)) ORDER BY x'd4a67e'  NULLS FIRST, CAST((((t1.c0, t1.c0, x''))<((x'dc', t1.c1, t1.c0))) AS NUMERIC) DESC  NULLS FIRST INTERSECT SELECT COUNT(*) FROM t1 WHERE (((((t1.c1) BETWEEN (x'e8') AND (t1.c1)))-(x'66'))) ORDER BY x'd4a67e'  NULLS FIRST, CAST((((t1.c0, t1.c0, x''))<((x'dc', t1.c1, t1.c0))) AS NUMERIC) DESC  NULLS FIRST;
SELECT MAX(t1.c0) FROM t1 WHERE ((((t1.c0))>((t1.c1))) COLLATE NOCASE);
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((((t1.c0))>((t1.c1))) COLLATE NOCASE)AND(CASE WHEN '' THEN ((((t1.c1)AND(-1369473273)))AND(t1.c1)) ELSE CASE WHEN t1.c0 THEN '5' WHEN t1.c1 THEN t1.c1 END END))) LIMIT 1 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (((UPPER(DISTINCT t1.c0)) NOT BETWEEN (t1.c1) AND ('-674846107'))) LIMIT 1;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY CASE t1.c0 COLLATE BINARY  WHEN TRIM(t1.c0) THEN t1.c1 COLLATE NOCASE WHEN '213504008' THEN (t1.c1 IN (t1.c0)) WHEN '-1924535266' THEN ((t1.c1)<=(t1.c0)) END  NULLS LAST;
SELECT * FROM t1 WHERE (((t1.c1)AND(x'1b9ef86f'))) ORDER BY CASE t1.c0 COLLATE BINARY  WHEN TRIM(t1.c0) THEN t1.c1 COLLATE NOCASE WHEN '213504008' THEN (t1.c1 IN (t1.c0)) WHEN '-1924535266' THEN ((t1.c1)<=(t1.c0)) END  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN ABS(t1.c1) WHEN t1.c0 THEN ((((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)) ELSE ((x'')<=(t1.c0)) END) ORDER BY CASE t1.c0 COLLATE BINARY  WHEN TRIM(t1.c0) THEN t1.c1 COLLATE NOCASE WHEN '213504008' THEN (t1.c1 IN (t1.c0)) WHEN '-1924535266' THEN ((t1.c1)<=(t1.c0)) END  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY CASE t1.c0 COLLATE BINARY  WHEN TRIM(t1.c0) THEN t1.c1 COLLATE NOCASE WHEN '213504008' THEN (t1.c1 IN (t1.c0)) WHEN '-1924535266' THEN ((t1.c1)<=(t1.c0)) END  NULLS LAST;
SELECT * FROM t1 WHERE (((t1.c1)AND(x'1b9ef86f'))) ORDER BY CASE t1.c0 COLLATE BINARY  WHEN TRIM(t1.c0) THEN t1.c1 COLLATE NOCASE WHEN '213504008' THEN (t1.c1 IN (t1.c0)) WHEN '-1924535266' THEN ((t1.c1)<=(t1.c0)) END  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN ABS(t1.c1) WHEN t1.c0 THEN ((((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)) ELSE ((x'')<=(t1.c0)) END) ORDER BY CASE t1.c0 COLLATE BINARY  WHEN TRIM(t1.c0) THEN t1.c1 COLLATE NOCASE WHEN '213504008' THEN (t1.c1 IN (t1.c0)) WHEN '-1924535266' THEN ((t1.c1)<=(t1.c0)) END  NULLS LAST LIMIT 0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((+ (((t1.c1)&(x'7e'))))) ORDER BY (((('VZKg L')>(-1358194096))) NOT BETWEEN ((t1.c0 IN ())) AND ((t1.c0 IN (t1.c0)))) DESC  NULLS FIRST, UNLIKELY(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) ASC, ((CAST(t1.c1 AS TEXT))<(t1.c0))  NULLS FIRST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((+ (((t1.c1)&(x'7e')))))AND(((t1.c1) IS FALSE)))) ORDER BY (((('VZKg L')>(-1358194096))) NOT BETWEEN ((t1.c0 IN ())) AND ((t1.c0 IN (t1.c0)))) DESC  NULLS FIRST, UNLIKELY(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) ASC, ((CAST(t1.c1 AS TEXT))<(t1.c0))  NULLS FIRST INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE ((((t1.c1, t1.c0)) BETWEEN ((((((t1.c0)OR(t1.c1)))AND(1589139834)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)) AND ((((t1.c0)<=(t1.c1)), NULL COLLATE NOCASE)))) ORDER BY (((('VZKg L')>(0Xffffffffaf0b9a50))) NOT BETWEEN ((t1.c0 IN ())) AND ((t1.c0 IN (t1.c0)))) DESC  NULLS FIRST, UNLIKELY(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) ASC, ((CAST(t1.c1 AS TEXT))<(t1.c0))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOTNULL)) NOT BETWEEN (x'') AND (CAST(t1.c0 AS BLOB))));
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOTNULL)) NOT BETWEEN (x'') AND (CAST(t1.c0 AS BLOB)))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOTNULL)) NOT BETWEEN (x'') AND (CAST(t1.c0 AS BLOB))));
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOTNULL)) NOT BETWEEN (x'') AND (CAST(t1.c0 AS BLOB)))) LIMIT 0X1;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN '?{' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-2001971069' END THEN (t1.c0 IN ()) ELSE ((((t1.c0)AND(t1.c1)))OR(t1.c0)) END) ORDER BY (+ (t1.c0)) COLLATE BINARY;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN '?{' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-2001971069' END THEN (t1.c0 IN ()) ELSE ((((t1.c0)AND(t1.c1)))OR(t1.c0)) END)AND((NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))))) ORDER BY (+ (t1.c0)) COLLATE RTRIM LIMIT 0x0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((((t1.c0) IS TRUE), '7cB'))>=((x'c2' COLLATE BINARY, ((((0.811235115678011)OR(t1.c0)))OR(t1.c1))))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((((t1.c0) IS TRUE), '7cB'))=((x'c2' COLLATE BINARY, ((((0.811235115678011)OR(t1.c0)))OR(t1.c1))))))AND(CAST(t1.c0 COLLATE RTRIM AS BLOB)))) INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((CAST(t1.c1 AS REAL))OR(CAST(t1.c0 AS BLOB))))OR(COALESCE(DISTINCT t1.c1, t1.c1))));
SELECT ALL * FROM t1 WHERE (QUOTE(t1.c0 COLLATE RTRIM)) ORDER BY (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((QUOTE(t1.c0 COLLATE RTRIM))AND((LIKELIHOOD(t1.c0, t1.c1) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 END))))) ORDER BY ((t1.c0 COLLATE BINARY)IS(t1.c1 COLLATE RTRIM)) DESC, t1.c1 ASC, ((ABS(DISTINCT t1.c0))IS(CAST(t1.c0 AS INTEGER))) ASC  NULLS LAST, HEX(DISTINCT TRIM(DISTINCT t1.c0)) DESC  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (0.8878775773572767 COLLATE BINARY) ORDER BY ((t1.c0 COLLATE BINARY)IS(t1.c1 COLLATE RTRIM)) DESC, t1.c1 ASC, ((ABS(DISTINCT t1.c0))IS(CAST(t1.c0 AS INTEGER))) ASC  NULLS LAST, HEX(DISTINCT TRIM(DISTINCT t1.c0)) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (QUOTE(t1.c0 COLLATE RTRIM)) ORDER BY (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((QUOTE(t1.c0 COLLATE RTRIM))AND((LIKELIHOOD(t1.c0, t1.c1) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 END))))) ORDER BY ((t1.c0 COLLATE BINARY)IS(t1.c1 COLLATE RTRIM)) DESC, t1.c1 ASC, ((ABS(DISTINCT t1.c0))IS(CAST(t1.c0 AS INTEGER))) ASC  NULLS LAST, HEX(DISTINCT TRIM(DISTINCT t1.c0)) DESC  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (0.8878775773572767 COLLATE BINARY) ORDER BY ((t1.c0 COLLATE BINARY)IS(t1.c1 COLLATE RTRIM)) DESC, t1.c1 ASC, ((ABS(DISTINCT t1.c0))IS(CAST(t1.c0 AS INTEGER))) ASC  NULLS LAST, HEX(DISTINCT TRIM(DISTINCT t1.c0)) DESC  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE ((((t1.c1)GLOB(t1.c0)) IN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (((t1.c1)<(t1.c1)) IN (NULL, (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c1, t1.c0))))), 0.6756141983576985  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((t1.c1)GLOB(t1.c0)) IN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(UPPER(DISTINCT LAST_INSERT_ROWID())))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))GLOB(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN 4.40482288E8 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)), CASE WHEN t1.c0 THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE ((t1.c1)LIKE(0.32294283612624175)) END  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (LIKELIHOOD(DISTINCT '', CASE t1.c1  WHEN t1.c0 THEN '' WHEN t1.c1 THEN x'' WHEN t1.c1 THEN t1.c0 END)) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))GLOB(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN 4.40482288E8 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)), CASE WHEN t1.c0 THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE ((t1.c1)LIKE(0.32294283612624175)) END  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY (~ (((t1.c0) NOT NULL))) DESC;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY (~ (((t1.c0) NOT NULL))) DESC INTERSECT SELECT * FROM t1 WHERE (CASE ((t1.c0)&(t1.c0))  WHEN ((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c1 END WHEN ABS(t1.c1) THEN ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) WHEN ((t1.c1)==(t1.c1)) THEN CASE x''  WHEN ',M(^*3qQi' THEN t1.c1 ELSE t1.c0 END WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN 'j풅' THEN '\' WHEN t1.c1 THEN t1.c0 END THEN t1.c0 END) ORDER BY (~ (((t1.c0) NOT NULL))) DESC;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY (~ (((t1.c0) NOT NULL))) DESC;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY (~ (((t1.c0) NOT NULL))) DESC INTERSECT SELECT * FROM t1 WHERE (CASE ((t1.c0)&(t1.c0))  WHEN ((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c1 END WHEN ABS(t1.c1) THEN ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) WHEN ((t1.c1)==(t1.c1)) THEN CASE x''  WHEN ',M(^*3qQi' THEN t1.c1 ELSE t1.c0 END WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN 'j풅' THEN '\' WHEN t1.c1 THEN t1.c0 END THEN t1.c0 END) ORDER BY (~ (((t1.c0) NOT NULL))) DESC;
SELECT MIN(t1.c0) FROM t1 WHERE (CAST(CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END AS REAL));
SELECT MIN(t1.c0) FROM t1 WHERE (((CAST(CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END AS REAL))AND(((((((((t1.c1)IS NOT(t1.c1)))OR(213504008)))AND(((t1.c1) IS FALSE))))OR(json_array_length(t1.c1, t1.c1)))))) ORDER BY (t1.c0 IN (((((((t1.c1)OR(x'1b')))OR(t1.c1)))AND(t1.c1)))) LIMIT 0X0;
SELECT * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(rtreenode(t1.c1, t1.c0)));
SELECT * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(rtreenode(t1.c1, t1.c0))) ORDER BY t1.c0 ASC  NULLS FIRST, CASE (((t1.c0, t1.c0, t1.c1, t1.c0))==((t1.c0, 'v', t1.c1, t1.c0)))  WHEN x'27' THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) ELSE ((t1.c0) BETWEEN (t1.c1) AND (NULL)) END  NULLS LAST LIMIT 3;
SELECT * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(rtreenode(t1.c1, t1.c0)));
SELECT * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(rtreenode(t1.c1, t1.c0))) ORDER BY t1.c0 ASC  NULLS FIRST, CASE (((t1.c0, t1.c0, t1.c1, t1.c0))==((t1.c0, 'v', t1.c1, t1.c0)))  WHEN x'27' THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) ELSE ((t1.c0) BETWEEN (t1.c1) AND (NULL)) END  NULLS LAST LIMIT 3;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((t1.c0 COLLATE BINARY)IS(((t1.c0)GLOB(NULL)))) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((t1.c0 COLLATE BINARY)IS(((t1.c0)GLOB(NULL)))) ASC INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c0 AS REAL) AS TEXT)) ORDER BY ((t1.c0 COLLATE BINARY)IS(((t1.c0)GLOB(NULL)))) ASC;
SELECT * FROM t1 WHERE (((((((((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(NULL)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(x'41')))AND(((0.41014510452953945) NOT BETWEEN (x'98ec6f') AND (t1.c0)))))AND(load_extension(t1.c0, t1.c1))));
SELECT * FROM t1 WHERE (((((((((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(NULL)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(x'41')))AND(((0.41014510452953945) NOT BETWEEN (x'98ec6f') AND (t1.c0)))))AND(load_extension(t1.c0, t1.c1)))) ORDER BY TYPEOF(DISTINCT t1.c1) ASC  NULLS LAST, DATETIME((~ (t1.c0)), t1.c1, t1.c1) DESC  NULLS LAST, x'' ASC  NULLS LAST LIMIT 2;
SELECT * FROM t1 WHERE (((((((((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(NULL)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(x'41')))AND(((0.41014510452953945) NOT BETWEEN (x'98ec6f') AND (t1.c0)))))AND(load_extension(t1.c0, t1.c1))));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1, t1.c1)) BETWEEN ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)), (x'4200' IN (t1.c1, t1.c1)))) AND (((t1.c0 IN ()), (- (t1.c0))))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c1, t1.c1)) BETWEEN ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)), (x'4200' IN (t1.c1, t1.c1)))) AND (((t1.c0 IN ()), (- (t1.c0))))))AND((((((t1.c1)) BETWEEN ((t1.c1)) AND ((NULL)))) NOT BETWEEN (((t1.c1)LIKE(0.8882959895025615))) AND (((t1.c0)/(t1.c0))))))) ORDER BY (((('c') BETWEEN (t1.c0) AND (t1.c1)))/((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE (CASE WHEN ((((((NULL)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)) THEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(0.2633402483418402)) WHEN CAST(t1.c1 AS REAL) THEN ((((t1.c0)OR('(~')))OR(t1.c0)) WHEN ((t1.c1) IS TRUE) THEN ((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))AND(t1.c0)) WHEN UPPER(DISTINCT t1.c1) THEN 1651861420 WHEN (- (t1.c0)) THEN t1.c0 END);
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN ((((((NULL)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)) THEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(0.2633402483418402)) WHEN CAST(t1.c1 AS REAL) THEN ((((t1.c0)OR('(~')))OR(t1.c0)) WHEN ((t1.c1) IS TRUE) THEN ((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))AND(t1.c0)) WHEN UPPER(DISTINCT t1.c1) THEN 0x627567ac WHEN (- (t1.c0)) THEN t1.c0 END)AND((((t1.c0)|(t1.c1)) IN (t1.c1 COLLATE RTRIM, (~ (t1.c0)))))));
SELECT ALL * FROM t1 WHERE (CASE WHEN ((((((NULL)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)) THEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(0.2633402483418402)) WHEN CAST(t1.c1 AS REAL) THEN ((((t1.c0)OR('(~')))OR(t1.c0)) WHEN ((t1.c1) IS TRUE) THEN ((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))AND(t1.c0)) WHEN UPPER(DISTINCT t1.c1) THEN 1651861420 WHEN (- (t1.c0)) THEN t1.c0 END);
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN ((((((NULL)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)) THEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(0.2633402483418402)) WHEN CAST(t1.c1 AS REAL) THEN ((((t1.c0)OR('(~')))OR(t1.c0)) WHEN ((t1.c1) IS TRUE) THEN ((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))AND(t1.c0)) WHEN UPPER(DISTINCT t1.c1) THEN 0x627567ac WHEN (- (t1.c0)) THEN t1.c0 END)AND((((t1.c0)|(t1.c1)) IN (t1.c1 COLLATE RTRIM, (~ (t1.c0)))))));
SELECT MAX(t1.c0) FROM t1 WHERE ((((((t1.c1)-(t1.c0))))<>((((t1.c1) IS FALSE))))) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))LIKE(((((t1.c1)AND(t1.c0)))OR(t1.c1))))  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((((t1.c1)-(t1.c0))))>((((t1.c1) IS FALSE)))))AND(CAST(LOWER(DISTINCT t1.c0) AS NUMERIC)))) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))LIKE(((((t1.c1)AND(t1.c0)))OR(t1.c1))))  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((LIKELIHOOD(DISTINCT t1.c0, t1.c0))*((t1.c0 IN (t1.c0))))) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))LIKE(((((t1.c1)AND(t1.c0)))OR(t1.c1))))  NULLS FIRST;
SELECT * FROM t1 WHERE ((t1.c1 IN ()));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1 IN ()))AND((SQLITE_COMPILEOPTION_USED(t1.c1) IN (-1163782732))))) ORDER BY ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0))) IS FALSE) DESC  NULLS FIRST, (t1.c1 COLLATE RTRIM IN (((t1.c0) IS FALSE), ((t1.c0)AND(t1.c1)), (~ (NULL)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((t1.c1 IN ()));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1 IN ()))AND((SQLITE_COMPILEOPTION_USED(t1.c1) IN (-1163782732))))) ORDER BY ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0))) IS FALSE) DESC  NULLS FIRST, (t1.c1 COLLATE RTRIM IN (((t1.c0) IS FALSE), ((t1.c0)AND(t1.c1)), (~ (NULL)))) ASC  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (LIKELY(t1.c1 COLLATE RTRIM));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (LIKELY(t1.c1 COLLATE RTRIM)) LIMIT 0X1 INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (((747240906)>(0X3ea7fdd4 COLLATE RTRIM))) LIMIT 0X1;
SELECT * FROM t1 WHERE ((((NOT (t1.c0))) NOT BETWEEN (CHAR(t1.c1)) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)));
SELECT * FROM t1 WHERE ((((NOT (t1.c0))) NOT BETWEEN (CHAR(t1.c1)) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))) ORDER BY (((((((((((- (t1.c1)))OR(CASE 0.934233682055924  WHEN t1.c0 THEN '700118163' WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE 0.3103313367173527 END)))AND(JULIANDAY(1622708503, t1.c1, t1.c1))))OR(CAST(t1.c1 AS TEXT))))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(t1.c0 COLLATE RTRIM))  NULLS FIRST, (((t1.c1)) NOT BETWEEN ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c1 ELSE t1.c0 END)) AND ((DATETIME(t1.c1, 'h
', 'mz1'))))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL * FROM t1 WHERE (CAST(CAST(t1.c1 AS REAL) AS INTEGER)) ORDER BY (((((((((((- (t1.c1)))OR(CASE 0.934233682055924  WHEN t1.c0 THEN '700118163' WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE 0.3103313367173527 END)))AND(JULIANDAY(1622708503, t1.c1, t1.c1))))OR(CAST(t1.c1 AS TEXT))))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(t1.c0 COLLATE RTRIM))  NULLS FIRST, (((t1.c1)) NOT BETWEEN ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c1 ELSE t1.c0 END)) AND ((DATETIME(t1.c1, 'h
', 'mz1'))))  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE ((((NOT (t1.c0))) NOT BETWEEN (CHAR(t1.c1)) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)));
SELECT * FROM t1 WHERE ((((NOT (t1.c0))) NOT BETWEEN (CHAR(t1.c1)) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))) ORDER BY (((((((((((- (t1.c1)))OR(CASE 0.934233682055924  WHEN t1.c0 THEN '700118163' WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE 0.3103313367173527 END)))AND(JULIANDAY(1622708503, t1.c1, t1.c1))))OR(CAST(t1.c1 AS TEXT))))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(t1.c0 COLLATE RTRIM))  NULLS FIRST, (((t1.c1)) NOT BETWEEN ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c1 ELSE t1.c0 END)) AND ((DATETIME(t1.c1, 'h
', 'mz1'))))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL * FROM t1 WHERE (CAST(CAST(t1.c1 AS REAL) AS INTEGER)) ORDER BY (((((((((((- (t1.c1)))OR(CASE 0.934233682055924  WHEN t1.c0 THEN '700118163' WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE 0.3103313367173527 END)))AND(JULIANDAY(1622708503, t1.c1, t1.c1))))OR(CAST(t1.c1 AS TEXT))))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(t1.c0 COLLATE RTRIM))  NULLS FIRST, (((t1.c1)) NOT BETWEEN ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c1 ELSE t1.c0 END)) AND ((DATETIME(t1.c1, 'h
', 'mz1'))))  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)) IN (((t1.c1) NOT NULL))));
SELECT * FROM t1 WHERE ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)) IN (((t1.c1) NOT NULL)))) ORDER BY (((t1.c1, t1.c0, t1.c0, t1.c1)) BETWEEN (((((t1.c1, t1.c0, t1.c0, x'b67230'))<((t1.c0, t1.c1, t1.c1, t1.c1))), (t1.c1 IN (t1.c0)), UPPER(DISTINCT t1.c0), ((t1.c1)IS(t1.c1)))) AND ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), TRIM(t1.c0), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))  NULLS FIRST, (((- (t1.c0)))|(CASE WHEN t1.c1 THEN t1.c0 END)) DESC LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE ((NOT ((t1.c1 IN (t1.c0))))) ORDER BY (((t1.c1, t1.c0, t1.c0, t1.c1)) BETWEEN (((((t1.c1, t1.c0, t1.c0, x'b67230'))<((t1.c0, t1.c1, t1.c1, t1.c1))), (t1.c1 IN (t1.c0)), UPPER(DISTINCT t1.c0), ((t1.c1)IS(t1.c1)))) AND ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), TRIM(t1.c0), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))  NULLS FIRST, (((- (t1.c0)))|(CASE WHEN t1.c1 THEN t1.c0 END)) DESC LIMIT 0;
SELECT * FROM t1 WHERE ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)) IN (((t1.c1) NOT NULL))));
SELECT * FROM t1 WHERE ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)) IN (((t1.c1) NOT NULL)))) ORDER BY (((t1.c1, t1.c0, t1.c0, t1.c1)) BETWEEN (((((t1.c1, t1.c0, t1.c0, x'b67230'))<((t1.c0, t1.c1, t1.c1, t1.c1))), (t1.c1 IN (t1.c0)), UPPER(DISTINCT t1.c0), ((t1.c1)IS(t1.c1)))) AND ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), TRIM(t1.c0), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))  NULLS FIRST, (((- (t1.c0)))|(CASE WHEN t1.c1 THEN t1.c0 END)) DESC LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE ((NOT ((t1.c1 IN (t1.c0))))) ORDER BY (((t1.c1, t1.c0, t1.c0, t1.c1)) BETWEEN (((((t1.c1, t1.c0, t1.c0, x'b67230'))<((t1.c0, t1.c1, t1.c1, t1.c1))), (t1.c1 IN (t1.c0)), UPPER(DISTINCT t1.c0), ((t1.c1)IS(t1.c1)))) AND ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), TRIM(t1.c0), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))  NULLS FIRST, (((- (t1.c0)))|(CASE WHEN t1.c1 THEN t1.c0 END)) DESC LIMIT 0;
SELECT ALL COUNT(*) FROM t1 WHERE (LIKELIHOOD(t1.c0, t1.c0) COLLATE NOCASE);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (LIKELIHOOD(t1.c0, t1.c0) COLLATE NOCASE) ORDER BY CAST(((t1.c0)&(t1.c1)) AS REAL) ASC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((t1.c0 COLLATE RTRIM, ((t1.c1)LIKE(t1.c0))))>((('' IN ()), CAST('-1211476319' AS TEXT)))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((((t1.c0 COLLATE RTRIM, ((t1.c1)LIKE(t1.c0))))>((('' IN ()), CAST('-1211476319' AS TEXT)))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) COLLATE RTRIM))) ORDER BY CASE WHEN (+ (t1.c0)) THEN (~ (t1.c0)) END DESC INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN (+ (t1.c0)) THEN (~ (t1.c0)) END DESC;
SELECT * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) AND ((~ (t1.c1))))) ORDER BY (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((-549846627)))) BETWEEN ((+ (x''))) AND ((((t1.c0, 0.26122153919158486)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0)))));
SELECT ALL * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) AND ((~ (t1.c1))))) ORDER BY (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((-549846627)))) BETWEEN ((+ (x''))) AND ((((t1.c0, 0.26122153919158486)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))))) LIMIT 0X1;
SELECT * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) AND ((~ (t1.c1))))) ORDER BY (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((-549846627)))) BETWEEN ((+ (x''))) AND ((((t1.c0, 0.26122153919158486)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0)))));
SELECT ALL * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) AND ((~ (t1.c1))))) ORDER BY (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((-549846627)))) BETWEEN ((+ (x''))) AND ((((t1.c0, 0.26122153919158486)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))))) LIMIT 0X1;
SELECT * FROM t1 WHERE ((((t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))) AND (((((t1.c0, t1.c1)) BETWEEN ((x'', t1.c0)) AND ((t1.c0, t1.c1))), ((t1.c0)>(t1.c1)), LTRIM(t1.c0))))) ORDER BY (((t1.c1, t1.c1)) NOT BETWEEN ((0.9571521819400094, (+ (t1.c0)))) AND ((((((t1.c1)AND('nr!,')))OR(t1.c0)), CAST(t1.c0 AS TEXT))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))) AND (((((t1.c0, t1.c1)) BETWEEN ((x'', t1.c0)) AND ((t1.c0, t1.c1))), ((t1.c0)>(t1.c1)), LTRIM(t1.c0)))))AND((((t1.c1)==(t1.c1)) IN ())))) ORDER BY 0.6217964597635699  NULLS LAST, (((t1.c1)) BETWEEN ((-3.05989446E8)) AND (('|h'))) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (NULLIF(DISTINCT (NOT (t1.c0)), (~ (t1.c1)))) ORDER BY 0.6217964597635699  NULLS LAST, (((t1.c1)) BETWEEN ((-3.05989446E8)) AND (('|h'))) DESC LIMIT 2;
SELECT * FROM t1 WHERE ((((t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))) AND (((((t1.c0, t1.c1)) BETWEEN ((x'', t1.c0)) AND ((t1.c0, t1.c1))), ((t1.c0)>(t1.c1)), LTRIM(t1.c0))))) ORDER BY (((t1.c1, t1.c1)) NOT BETWEEN ((0.9571521819400094, (+ (t1.c0)))) AND ((((((t1.c1)AND('nr!,')))OR(t1.c0)), CAST(t1.c0 AS TEXT))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))) AND (((((t1.c0, t1.c1)) BETWEEN ((x'', t1.c0)) AND ((t1.c0, t1.c1))), ((t1.c0)>(t1.c1)), LTRIM(t1.c0)))))AND((((t1.c1)==(t1.c1)) IN ())))) ORDER BY 0.6217964597635699  NULLS LAST, (((t1.c1)) BETWEEN ((-3.05989446E8)) AND (('|h'))) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (NULLIF(DISTINCT (NOT (t1.c0)), (~ (t1.c1)))) ORDER BY 0.6217964597635699  NULLS LAST, (((t1.c1)) BETWEEN ((-3.05989446E8)) AND (('|h'))) DESC LIMIT 2;
SELECT ALL * FROM t1 WHERE (highlight(((t1.c0)AND(t1.c0)), x'ff', ((((t1.c0)OR(t1.c0)))AND(t1.c0)), ((t1.c0) NOTNULL)));
SELECT DISTINCT * FROM t1 WHERE (((highlight(((t1.c0)AND(t1.c0)), x'ff', ((((t1.c0)OR(t1.c0)))AND(t1.c0)), ((t1.c0) NOTNULL)))AND(x''))) ORDER BY t1.c0  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE (highlight(((t1.c0)AND(t1.c0)), x'ff', ((((t1.c0)OR(t1.c0)))AND(t1.c0)), ((t1.c0) NOTNULL)));
SELECT MAX(t1.c0) FROM t1 WHERE ((((0.09618319594565305, t1.c0)) BETWEEN (((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))), CASE t1.c1  WHEN t1.c0 THEN t1.c1 END)) AND ((((t1.c1)>>(t1.c1)), CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN -10710109 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)))) ORDER BY '' ASC  NULLS FIRST, TYPEOF(DISTINCT CAST(t1.c1 AS REAL)) ASC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((0.09618319594565305, t1.c0)) BETWEEN (((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))), CASE t1.c1  WHEN t1.c0 THEN t1.c1 END)) AND ((((t1.c1)>>(t1.c1)), CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN -10710109 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)))) ORDER BY ((CASE t1.c0  WHEN t1.c1 THEN 0.947240545520983 WHEN t1.c1 THEN NULL WHEN t1.c1 THEN NULL WHEN t1.c0 THEN '0.0' ELSE t1.c1 END)-(CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN 0.5758897038073051 WHEN t1.c0 THEN t1.c1 ELSE '1528635972' END))  NULLS LAST, CASE WHEN t1.c1 THEN -1148669192 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE BINARY  NULLS LAST, ((t1.c1 COLLATE NOCASE)*(t1.c1))  NULLS LAST INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (IFNULL(((t1.c1)|(t1.c1)), (t1.c1 IN (t1.c1, t1.c0)))) ORDER BY ((CASE t1.c0  WHEN t1.c1 THEN 0.947240545520983 WHEN t1.c1 THEN NULL WHEN t1.c1 THEN NULL WHEN t1.c0 THEN '0.0' ELSE t1.c1 END)-(CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN 0.5758897038073051 WHEN t1.c0 THEN t1.c1 ELSE '1528635972' END))  NULLS LAST, CASE WHEN t1.c1 THEN 0xffffffffbb88b2f8 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE BINARY  NULLS LAST, ((t1.c1 COLLATE NOCASE)*(t1.c1))  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c0) IS TRUE))*(t1.c1 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((t1.c0)AND((((((((t1.c1 IN ()))OR(CAST(t1.c1 AS TEXT))))OR(CAST('2075984790' AS NUMERIC))))OR(t1.c1 COLLATE RTRIM))))) ORDER BY ((((((t1.c0)>>(t1.c0)))AND(CAST(t1.c0 AS REAL))))AND(((t1.c0)<>(t1.c0))))  NULLS LAST INTERSECT SELECT * FROM t1 WHERE ('BYoE') ORDER BY ((((((t1.c0)>>(t1.c0)))AND(CAST(t1.c0 AS REAL))))AND(((t1.c0)<>(t1.c0))))  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c0) IS TRUE))*(t1.c1 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((t1.c0)AND((((((((t1.c1 IN ()))OR(CAST(t1.c1 AS TEXT))))OR(CAST('2075984790' AS NUMERIC))))OR(t1.c1 COLLATE RTRIM))))) ORDER BY ((((((t1.c0)>>(t1.c0)))AND(CAST(t1.c0 AS REAL))))AND(((t1.c0)<>(t1.c0))))  NULLS LAST INTERSECT SELECT * FROM t1 WHERE ('BYoE') ORDER BY ((((((t1.c0)>>(t1.c0)))AND(CAST(t1.c0 AS REAL))))AND(((t1.c0)<>(t1.c0))))  NULLS LAST;
SELECT * FROM t1 WHERE (((((((t1.c1) NOTNULL))AND(CAST(t1.c1 AS REAL))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY ((((t1.c0) NOTNULL)) IS FALSE) ASC  NULLS FIRST, (((t1.c1)) BETWEEN (((t1.c1 IN (t1.c0)))) AND ((((t1.c0)|(t1.c0))))), json_valid(((((((t1.c1)AND(t1.c0)))OR('21116294')))AND(t1.c1))) DESC;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1) NOTNULL))AND(CAST(t1.c1 AS REAL))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))))AND((t1.c1 COLLATE NOCASE IN ((((0Xffffffffa1f76dc3, '-903223298')) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1)))))))) ORDER BY (((((t1.c1))=((t1.c1))))==(((t1.c1)%(t1.c0)))) LIMIT 0;
SELECT * FROM t1 WHERE (((((((t1.c1) NOTNULL))AND(CAST(t1.c1 AS REAL))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY ((((t1.c0) NOTNULL)) IS FALSE) ASC  NULLS FIRST, (((t1.c1)) BETWEEN (((t1.c1 IN (t1.c0)))) AND ((((t1.c0)|(t1.c0))))), json_valid(((((((t1.c1)AND(t1.c0)))OR('21116294')))AND(t1.c1))) DESC;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1) NOTNULL))AND(CAST(t1.c1 AS REAL))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))))AND((t1.c1 COLLATE NOCASE IN ((((0Xffffffffa1f76dc3, '-903223298')) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1)))))))) ORDER BY (((((t1.c1))=((t1.c1))))==(((t1.c1)%(t1.c0)))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((QUOTE(t1.c1))GLOB(HEX(DISTINCT t1.c1)))) ORDER BY ((((-1.357763336E9) ISNULL)) ISNULL), ((((((CAST(t1.c1 AS NUMERIC))OR(load_extension(NULL, t1.c0))))OR(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)) DESC  NULLS LAST, t1.c0 COLLATE BINARY ASC;
SELECT ALL * FROM t1 WHERE (((QUOTE(t1.c1))GLOB(HEX(DISTINCT t1.c1)))) ORDER BY CAST(IFNULL(t1.c1, t1.c1) AS REAL) INTERSECT SELECT ALL * FROM t1 WHERE ((('}7P') NOT NULL)) ORDER BY CAST(IFNULL(t1.c1, t1.c1) AS REAL);
SELECT ALL * FROM t1 WHERE (((QUOTE(t1.c1))GLOB(HEX(DISTINCT t1.c1)))) ORDER BY ((((-1.357763336E9) ISNULL)) ISNULL), ((((((CAST(t1.c1 AS NUMERIC))OR(load_extension(NULL, t1.c0))))OR(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)) DESC  NULLS LAST, t1.c0 COLLATE BINARY ASC;
SELECT ALL * FROM t1 WHERE (((QUOTE(t1.c1))GLOB(HEX(DISTINCT t1.c1)))) ORDER BY CAST(IFNULL(t1.c1, t1.c1) AS REAL) INTERSECT SELECT ALL * FROM t1 WHERE ((('}7P') NOT NULL)) ORDER BY CAST(IFNULL(t1.c1, t1.c1) AS REAL);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c0, t1.c1))<=((t1.c0, t1.c0, t1.c0))) COLLATE RTRIM) ORDER BY ((((((x'bf') NOT BETWEEN (t1.c0) AND (t1.c0)))OR(t1.c1 COLLATE BINARY)))AND((NOT (t1.c1)))), t1.c0 DESC, (((((t1.c0, t1.c1, t1.c1))!=((t1.c0, t1.c0, t1.c0))))+(((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c1))<=((t1.c0, t1.c0, t1.c0))) COLLATE RTRIM)AND((x'' IN ())))) ORDER BY ((((((x'bf') NOT BETWEEN (t1.c0) AND (t1.c0)))OR(t1.c1 COLLATE BINARY)))AND((NOT (t1.c1)))), t1.c0 DESC, (((((t1.c0, t1.c1, t1.c1))<>((t1.c0, t1.c0, t1.c0))))+(((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (CASE WHEN t1.c1 THEN t1.c0 END COLLATE BINARY) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) IS TRUE)  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN t1.c0 END COLLATE BINARY) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) IS TRUE)  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN ((((t1.c1)OR(t1.c1)))OR(t1.c0)) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) THEN ((t1.c1)IS NOT(t1.c1)) WHEN ((t1.c1) NOTNULL) THEN t1.c0 COLLATE NOCASE WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN CAST(t1.c0 AS BLOB) ELSE CAST(t1.c1 AS BLOB) END) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) IS TRUE)  NULLS FIRST LIMIT 2;
SELECT * FROM t1 WHERE (CASE WHEN t1.c1 THEN t1.c0 END COLLATE BINARY) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) IS TRUE)  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN t1.c0 END COLLATE BINARY) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) IS TRUE)  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN ((((t1.c1)OR(t1.c1)))OR(t1.c0)) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) THEN ((t1.c1)IS NOT(t1.c1)) WHEN ((t1.c1) NOTNULL) THEN t1.c0 COLLATE NOCASE WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN CAST(t1.c0 AS BLOB) ELSE CAST(t1.c1 AS BLOB) END) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) IS TRUE)  NULLS FIRST LIMIT 2;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC)) ISNULL)) ORDER BY 0x40cdc998 ASC  NULLS LAST, 0.39306147148550885 DESC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC)) ISNULL))AND(((-1945753958)+(t1.c0 COLLATE NOCASE))))) ORDER BY 1087228312 ASC  NULLS LAST, 0.39306147148550885 DESC LIMIT 0x0 INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (CASE NULL  WHEN CASE WHEN t1.c1 THEN '齊Xo' END THEN t1.c1 COLLATE RTRIM WHEN (t1.c1 IN (t1.c1)) THEN NULL END) ORDER BY 0X40cdc998 ASC  NULLS LAST, 0.39306147148550885 DESC LIMIT 0;
SELECT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS BLOB)) ORDER BY LIKELIHOOD(DISTINCT 'B/y', ((((t1.c1)AND(t1.c0)))AND(t1.c0))), ((t1.c0 IN (t1.c1)) IN (t1.c1))  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS BLOB)) ORDER BY LIKELIHOOD(DISTINCT 'B/y', ((((t1.c1)AND(t1.c0)))AND(t1.c0))), ((t1.c0 IN (t1.c1)) IN (t1.c1))  NULLS FIRST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ('0.9587347711385222');
SELECT MAX(t1.c0) FROM t1 WHERE ((('0.9587347711385222')AND((NOT ((((t1.c1, t1.c1))!=((t1.c0, t1.c1)))))))) ORDER BY t1.c1  NULLS LAST, t1.c0 DESC, ((((t1.c0)|(t1.c1)))||('0.28305881043194536'))  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 END)OR(NULL COLLATE BINARY)))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END)));
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 END)OR(NULL COLLATE BINARY)))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END))) ORDER BY (((t1.c0, t1.c0)) NOT BETWEEN ((TYPEOF(DISTINCT t1.c1), (+ (t1.c1)))) AND (('+', (((t1.c1, t1.c1)) BETWEEN (('2032568631', t1.c1)) AND ((t1.c0, t1.c1)))))) DESC  NULLS LAST, (((((x'0d', t1.c0, 'GW㾿')) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, t1.c1)))) IS TRUE) ASC  NULLS FIRST, CAST(CAST(t1.c1 AS NUMERIC) AS BLOB) ASC  NULLS FIRST, t1.c1  NULLS LAST LIMIT 0x1 INTERSECT SELECT * FROM t1 WHERE ((~ (t1.c1))) ORDER BY (((t1.c0, t1.c0)) NOT BETWEEN ((TYPEOF(DISTINCT t1.c1), (+ (t1.c1)))) AND (('+', (((t1.c1, t1.c1)) BETWEEN (('2032568631', t1.c1)) AND ((t1.c0, t1.c1)))))) DESC  NULLS LAST, (((((x'0d', t1.c0, 'GW㾿')) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, t1.c1)))) IS TRUE) ASC  NULLS FIRST, CAST(CAST(t1.c1 AS NUMERIC) AS BLOB) ASC  NULLS FIRST, t1.c1  NULLS LAST LIMIT 1;
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 END)OR(NULL COLLATE BINARY)))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END)));
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 END)OR(NULL COLLATE BINARY)))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END))) ORDER BY (((t1.c0, t1.c0)) NOT BETWEEN ((TYPEOF(DISTINCT t1.c1), (+ (t1.c1)))) AND (('+', (((t1.c1, t1.c1)) BETWEEN (('2032568631', t1.c1)) AND ((t1.c0, t1.c1)))))) DESC  NULLS LAST, (((((x'0d', t1.c0, 'GW㾿')) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, t1.c1)))) IS TRUE) ASC  NULLS FIRST, CAST(CAST(t1.c1 AS NUMERIC) AS BLOB) ASC  NULLS FIRST, t1.c1  NULLS LAST LIMIT 0x1 INTERSECT SELECT * FROM t1 WHERE ((~ (t1.c1))) ORDER BY (((t1.c0, t1.c0)) NOT BETWEEN ((TYPEOF(DISTINCT t1.c1), (+ (t1.c1)))) AND (('+', (((t1.c1, t1.c1)) BETWEEN (('2032568631', t1.c1)) AND ((t1.c0, t1.c1)))))) DESC  NULLS LAST, (((((x'0d', t1.c0, 'GW㾿')) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, t1.c1)))) IS TRUE) ASC  NULLS FIRST, CAST(CAST(t1.c1 AS NUMERIC) AS BLOB) ASC  NULLS FIRST, t1.c1  NULLS LAST LIMIT 1;
SELECT * FROM t1 WHERE (t1.c0);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (~ (SQLITE_SOURCE_ID())) LIMIT 1;
SELECT * FROM t1 WHERE (t1.c0);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (~ (SQLITE_SOURCE_ID())) LIMIT 1;
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c1) NOT NULL)) NOT NULL));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((((t1.c1) NOT NULL)) NOT NULL))AND('0.29355933138569734')));
SELECT ALL * FROM t1 WHERE ((('jmdkpX	') NOT BETWEEN (((t1.c0)/(t1.c1))) AND (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE ((((('jmdkpX	') NOT BETWEEN (((t1.c0)/(t1.c1))) AND (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND((((t1.c0, t1.c1)) NOT BETWEEN ((((((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)), t1.c1)) AND ((((t1.c0)>(t1.c0)), ((((t1.c0)AND(t1.c1)))AND(t1.c1)))))))) ORDER BY (~ (t1.c0)) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)<>(t1.c0)), ((0.03410228261712622)IS(t1.c1)), t1.c1, ((t1.c1)*(t1.c1))))<=(('4JF', ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), ((((t1.c1)AND(t1.c1)))OR(t1.c1)), QUOTE(t1.c1))))) ORDER BY (~ (t1.c0)) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((('jmdkpX	') NOT BETWEEN (((t1.c0)/(t1.c1))) AND (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE ((((('jmdkpX	') NOT BETWEEN (((t1.c0)/(t1.c1))) AND (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND((((t1.c0, t1.c1)) NOT BETWEEN ((((((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)), t1.c1)) AND ((((t1.c0)>(t1.c0)), ((((t1.c0)AND(t1.c1)))AND(t1.c1)))))))) ORDER BY (~ (t1.c0)) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)<>(t1.c0)), ((0.03410228261712622)IS(t1.c1)), t1.c1, ((t1.c1)*(t1.c1))))<=(('4JF', ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), ((((t1.c1)AND(t1.c1)))OR(t1.c1)), QUOTE(t1.c1))))) ORDER BY (~ (t1.c0)) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((- (UPPER(t1.c1))));
SELECT DISTINCT * FROM t1 WHERE ((- (UPPER(t1.c1)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (NULL);
SELECT ALL * FROM t1 WHERE ((- (UPPER(t1.c1))));
SELECT DISTINCT * FROM t1 WHERE ((- (UPPER(t1.c1)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (NULL);
SELECT COUNT(*) FROM t1 WHERE (UNLIKELY(DISTINCT ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))));
SELECT COUNT(*) FROM t1 WHERE (((UNLIKELY(DISTINCT ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))AND(t1.c1))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS NUMERIC))OR(((t1.c1) ISNULL))))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN x'9d66' THEN '*B' END))) ORDER BY ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))>=(((t1.c1)||(t1.c1)))) DESC, ((((- (t1.c1)), (t1.c0 IN ()), (- (t1.c1))))>=((CASE WHEN t1.c0 THEN t1.c0 WHEN x'1c' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((t1.c1)+(t1.c0)), ((t1.c1) ISNULL))))  NULLS LAST, (+ (1.041810244E9)) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((CAST(t1.c1 AS NUMERIC))OR(((t1.c1) ISNULL))))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN x'9d66' THEN '*B' END)))AND(NULLIF(t1.c0 COLLATE BINARY, t1.c1 COLLATE RTRIM)))) ORDER BY ((((t1.c1) NOT NULL))<=(((t1.c1) NOT NULL))) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS NUMERIC))OR(((t1.c1) ISNULL))))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN x'9d66' THEN '*B' END))) ORDER BY ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))>=(((t1.c1)||(t1.c1)))) DESC, ((((- (t1.c1)), (t1.c0 IN ()), (- (t1.c1))))>=((CASE WHEN t1.c0 THEN t1.c0 WHEN x'1c' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((t1.c1)+(t1.c0)), ((t1.c1) ISNULL))))  NULLS LAST, (+ (1.041810244E9)) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((CAST(t1.c1 AS NUMERIC))OR(((t1.c1) ISNULL))))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN x'9d66' THEN '*B' END)))AND(NULLIF(t1.c0 COLLATE BINARY, t1.c1 COLLATE RTRIM)))) ORDER BY ((((t1.c1) NOT NULL))<=(((t1.c1) NOT NULL))) ASC  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS INTEGER))/(x'88')));
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER))/(x'88')))AND(t1.c0 COLLATE BINARY))) LIMIT 1;
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS INTEGER))/(x'88')));
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER))/(x'88')))AND(t1.c0 COLLATE BINARY))) LIMIT 1;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((('d*')>(t1.c1))) IS FALSE)) ORDER BY CAST(json_array(t1.c1, t1.c1) AS INTEGER)  NULLS LAST, t1.c1 DESC;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((('d*')>(t1.c1))) IS FALSE))AND(NULLIF(DISTINCT CAST(t1.c1 AS NUMERIC), ((t1.c1)!=(t1.c1)))))) ORDER BY CAST(json_array(t1.c1, t1.c1) AS INTEGER)  NULLS LAST, t1.c1 DESC LIMIT 0 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CAST(json_remove(t1.c1, t1.c1, t1.c0, t1.c1) AS REAL)) ORDER BY CAST(json_array(t1.c1, t1.c1) AS INTEGER)  NULLS LAST, t1.c1 DESC LIMIT 0;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) AS INTEGER));
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) AS INTEGER)) INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((((t1.c1) BETWEEN (0x687c8449) AND (t1.c1))))));
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) AS INTEGER));
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) AS INTEGER)) INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((((t1.c1) BETWEEN (0x687c8449) AND (t1.c1))))));
SELECT * FROM t1 WHERE (UPPER((((t1.c0, t1.c1))=((t1.c0, t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((UPPER((((t1.c0, t1.c1))==((t1.c0, t1.c0)))))AND(CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END AS REAL)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- ((((t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0)) AND (('릡/BY%﷔', t1.c0, t1.c1)))))) LIMIT 0X1;
SELECT * FROM t1 WHERE (UPPER((((t1.c0, t1.c1))=((t1.c0, t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((UPPER((((t1.c0, t1.c1))==((t1.c0, t1.c0)))))AND(CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END AS REAL)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- ((((t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0)) AND (('릡/BY%﷔', t1.c0, t1.c1)))))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1) ISNULL) AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c1) ISNULL) AS BLOB))AND(LTRIM(t1.c0, t1.c1)))) ORDER BY ((((((t1.c1)%(t1.c0)))AND(t1.c0)))AND(((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))), ((t1.c0 COLLATE NOCASE)%(t1.c1)) DESC  NULLS LAST, (t1.c1 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1) ISNULL) AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c1) ISNULL) AS BLOB))AND(LTRIM(t1.c0, t1.c1)))) ORDER BY ((((((t1.c1)%(t1.c0)))AND(t1.c0)))AND(((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))), ((t1.c0 COLLATE NOCASE)%(t1.c1)) DESC  NULLS LAST, (t1.c1 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (CAST((t1.c1 IN (t1.c1, t1.c0, t1.c1, t1.c0)) AS BLOB));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST((t1.c1 IN (t1.c1)) AS BLOB)) ORDER BY (((((t1.c0, t1.c1))=((t1.c0, t1.c0))))IS NOT((- (t1.c1)))) LIMIT 2;
SELECT MIN(t1.c1) FROM t1 WHERE (CAST(((((t1.c0)AND(t1.c0)))AND(t1.c0)) AS REAL)) ORDER BY (((t1.c1) IS TRUE) IN (CASE WHEN 0X7a17ee1e THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN NULL THEN t1.c0 WHEN x'' THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END, ((((t1.c1)AND(t1.c1)))OR(t1.c1)))), (((NOT (t1.c0))) NOT NULL)  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((CAST(((((t1.c0)AND(t1.c0)))AND(t1.c0)) AS REAL))AND(((((~ (t1.c0)), (+ (t1.c1)), ((t1.c0)*(0xfffffffff530430c))))>=(((t1.c0 IN ()), (t1.c1 IN ()), CAST(t1.c1 AS BLOB))))))) ORDER BY t1.c1 DESC  NULLS FIRST, CAST(json_array_length(t1.c1, t1.c0) AS NUMERIC)  NULLS FIRST, ((CAST(t1.c1 AS BLOB))+(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS REAL)) IS FALSE));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c0 AS REAL)) IS FALSE))AND(CASE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))  WHEN ((t1.c1)<>(NULL)) THEN ((t1.c1)<(t1.c1)) WHEN (((t1.c0))==((t1.c0))) THEN ((((t1.c1)OR(t1.c0)))AND(t1.c1)) ELSE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) END))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c1 THEN x'6b' END AS TEXT)) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS REAL)) IS FALSE));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c0 AS REAL)) IS FALSE))AND(CASE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))  WHEN ((t1.c1)<>(NULL)) THEN ((t1.c1)<(t1.c1)) WHEN (((t1.c0))==((t1.c0))) THEN ((((t1.c1)OR(t1.c0)))AND(t1.c1)) ELSE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) END))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c1 THEN x'6b' END AS TEXT)) LIMIT 0X0;
SELECT MIN(t1.c0) FROM t1 WHERE ((CAST(t1.c1 AS NUMERIC) IN (((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1))))) ORDER BY HEX(t1.c0) COLLATE NOCASE  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE ((CAST(t1.c1 AS NUMERIC) IN (((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1))))) ORDER BY (((((((+ (t1.c0)))OR(t1.c1 COLLATE NOCASE)))AND((+ (t1.c1)))))AND(0.1378758374089295))  NULLS FIRST, (((- (t1.c0))) NOTNULL)  NULLS FIRST, t1.c0 COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c1)<(t1.c1))) BETWEEN (((((t1.c1)OR(t1.c0)))AND(t1.c1))) AND (((t1.c0) IS TRUE)))) ORDER BY ((((((((t1.c1)>>(t1.c0)))AND(CAST(t1.c0 AS REAL))))AND(((0.9659481414462555) BETWEEN (t1.c1) AND (0.08154467519634423)))))AND((((t1.c1, t1.c0, t1.c1, t1.c1))>=((t1.c1, t1.c0, t1.c1, t1.c0))))), ((CAST(t1.c0 AS BLOB)) NOT BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN x'50' END) AND ((((t1.c0))<=((t1.c0))))) ASC;
SELECT ALL * FROM t1 WHERE (((((t1.c1)<(t1.c1))) BETWEEN (((((t1.c1)OR(t1.c0)))AND(t1.c1))) AND (((t1.c0) IS TRUE)))) ORDER BY ((((((t1.c1 COLLATE RTRIM)AND(((t1.c1)<(t1.c0)))))OR(json_type(t1.c1))))OR(((2.109462779E9) NOT NULL))) LIMIT 1;
SELECT ALL * FROM t1 WHERE (((((t1.c1)<(t1.c1))) BETWEEN (((((t1.c1)OR(t1.c0)))AND(t1.c1))) AND (((t1.c0) IS TRUE)))) ORDER BY ((((((((t1.c1)>>(t1.c0)))AND(CAST(t1.c0 AS REAL))))AND(((0.9659481414462555) BETWEEN (t1.c1) AND (0.08154467519634423)))))AND((((t1.c1, t1.c0, t1.c1, t1.c1))>=((t1.c1, t1.c0, t1.c1, t1.c0))))), ((CAST(t1.c0 AS BLOB)) NOT BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN x'50' END) AND ((((t1.c0))<=((t1.c0))))) ASC;
SELECT ALL * FROM t1 WHERE (((((t1.c1)<(t1.c1))) BETWEEN (((((t1.c1)OR(t1.c0)))AND(t1.c1))) AND (((t1.c0) IS TRUE)))) ORDER BY ((((((t1.c1 COLLATE RTRIM)AND(((t1.c1)<(t1.c0)))))OR(json_type(t1.c1))))OR(((2.109462779E9) NOT NULL))) LIMIT 1;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((- (((t1.c0) ISNULL)))) ORDER BY (((('m')&(t1.c0)))OR(t1.c0 COLLATE BINARY)) ASC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((- (((t1.c0) ISNULL))))AND(CASE CAST(t1.c0 AS NUMERIC)  WHEN ((t1.c1) ISNULL) THEN ((t1.c1)|(t1.c1)) ELSE CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END END))) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END) IS FALSE), ((t1.c0)!=('l4m')) COLLATE BINARY DESC INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (CAST(t1.c0 COLLATE RTRIM AS TEXT)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END) IS FALSE), ((t1.c0)!=('l4m')) COLLATE BINARY DESC;
SELECT MIN(t1.c0) FROM t1 WHERE (CAST((+ (t1.c0)) AS TEXT));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((CAST((+ (t1.c0)) AS TEXT))AND(((((((CAST(t1.c1 AS INTEGER))OR(((t1.c0)OR(t1.c0)))))OR(((t1.c1)IS NOT(t1.c0)))))OR(((t1.c1)IS(t1.c1)))))));
SELECT * FROM t1 WHERE (UNLIKELY(DISTINCT CASE NULL  WHEN t1.c0 THEN t1.c1 END));
SELECT DISTINCT * FROM t1 WHERE (((UNLIKELY(DISTINCT CASE NULL  WHEN t1.c0 THEN t1.c1 END))AND(((0.29355933138569734 COLLATE NOCASE) NOT BETWEEN (t1.c1) AND (((((t1.c1)OR(t1.c1)))AND(t1.c0))))))) ORDER BY TYPEOF(CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END);
SELECT * FROM t1 WHERE (UNLIKELY(DISTINCT CASE NULL  WHEN t1.c0 THEN t1.c1 END));
SELECT DISTINCT * FROM t1 WHERE (((UNLIKELY(DISTINCT CASE NULL  WHEN t1.c0 THEN t1.c1 END))AND(((0.29355933138569734 COLLATE NOCASE) NOT BETWEEN (t1.c1) AND (((((t1.c1)OR(t1.c1)))AND(t1.c0))))))) ORDER BY TYPEOF(CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END);
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((((((((((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((NULL, t1.c1))))AND((((t1.c0)) BETWEEN ((x'8e234c')) AND ((t1.c1))))))OR(((t1.c0)*(t1.c1)))))AND(CASE WHEN t1.c1 THEN t1.c0 END)))AND(((t1.c0) NOTNULL))))OR(((t1.c0)/(t1.c1))))) ORDER BY CAST(((t1.c0)LIKE(t1.c1)) AS TEXT) ASC  NULLS FIRST, (((t1.c0)) BETWEEN ((t1.c0 COLLATE NOCASE)) AND ((1.761015341E9)))  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((((((((((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((NULL, t1.c1))))AND((((t1.c0)) BETWEEN ((x'8e234c')) AND ((t1.c1))))))OR(((t1.c0)*(t1.c1)))))AND(CASE WHEN t1.c1 THEN t1.c0 END)))AND(((t1.c0) NOTNULL))))OR(((t1.c0)/(t1.c1)))))AND((((t1.c0 IN (t1.c0)))>>(CASE x'c12b'  WHEN NULL THEN t1.c1 ELSE NULL END))))) ORDER BY (((((((((t1.c1, t1.c1, t1.c0, t1.c1))!=((t1.c0, x'', t1.c0, t1.c1))))AND(json_insert(t1.c1, t1.c0, t1.c1, t1.c1))))OR((t1.c0 IN (t1.c0)))))AND(t1.c0)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((((NULL IN (t1.c1)))OR(((t1.c0)GLOB(t1.c1)))))AND(0.5212557509992581)))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))) ORDER BY (((((((((t1.c1, t1.c1, t1.c0, t1.c1))!=((t1.c0, x'', t1.c0, t1.c1))))AND(json_insert(t1.c1, t1.c0, t1.c1, t1.c1))))OR((t1.c0 IN (t1.c0)))))AND(t1.c0)) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((t1.c0) IS TRUE), ((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1)), ((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))AND(t1.c1))))=((((t1.c0)AND(t1.c1)), ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), ((((t1.c0)OR(t1.c1)))OR(t1.c0))))));
SELECT * FROM t1 WHERE ((((((t1.c0) IS TRUE), ((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1)), ((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))AND(t1.c1))))==((((t1.c0)AND(t1.c1)), ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), ((((t1.c0)OR(t1.c1)))OR(t1.c0)))))) LIMIT 0;
SELECT * FROM t1 WHERE ((((((t1.c0) IS TRUE), ((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1)), ((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))AND(t1.c1))))=((((t1.c0)AND(t1.c1)), ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), ((((t1.c0)OR(t1.c1)))OR(t1.c0))))));
SELECT * FROM t1 WHERE ((((((t1.c0) IS TRUE), ((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1)), ((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))AND(t1.c1))))==((((t1.c0)AND(t1.c1)), ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), ((((t1.c0)OR(t1.c1)))OR(t1.c0)))))) LIMIT 0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((t1.c1)LIKE(t1.c0)) COLLATE NOCASE) ORDER BY CAST(CASE WHEN t1.c0 THEN 0.97545264616398 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END AS INTEGER), (LOWER(DISTINCT t1.c1) IN ()) ASC;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((t1.c1)LIKE(t1.c0)) COLLATE NOCASE)AND(CASE WHEN ((t1.c0) NOT BETWEEN ('0.03622465028804023') AND (t1.c0)) THEN CAST(NULL AS BLOB) END))) ORDER BY CAST(CASE WHEN t1.c0 THEN 0.97545264616398 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END AS INTEGER), (LOWER(DISTINCT t1.c1) IN ()) ASC LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))))>(t1.c1 COLLATE RTRIM))) ORDER BY CAST(CASE WHEN t1.c0 THEN 0.97545264616398 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END AS INTEGER), (LOWER(DISTINCT t1.c1) IN ()) ASC LIMIT 0x0;
SELECT * FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))AND(t1.c1 COLLATE BINARY)))AND(((1704671446)||(t1.c0))))) ORDER BY ((((((((x'7a19')AND(t1.c0)))AND(NULL)))AND(t1.c0))) BETWEEN (t1.c0) AND (((t1.c1) NOT NULL)));
SELECT ALL * FROM t1 WHERE (((((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))AND(t1.c1 COLLATE BINARY)))AND(((1704671446)||(t1.c0)))))AND((((((((+ (t1.c1)))AND((+ (x'')))))AND(TYPEOF(t1.c1))))OR((('Ư4') NOTNULL)))))) ORDER BY CAST((NOT (t1.c0)) AS REAL)  NULLS LAST, ((t1.c1) BETWEEN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(NULL)))) INTERSECT SELECT ALL * FROM t1 WHERE ((((NOT (t1.c0)))&((t1.c0 IN ())))) ORDER BY CAST((NOT (t1.c0)) AS REAL)  NULLS LAST, ((t1.c1) BETWEEN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(NULL))));
SELECT * FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))AND(t1.c1 COLLATE BINARY)))AND(((1704671446)||(t1.c0))))) ORDER BY ((((((((x'7a19')AND(t1.c0)))AND(NULL)))AND(t1.c0))) BETWEEN (t1.c0) AND (((t1.c1) NOT NULL)));
SELECT ALL * FROM t1 WHERE (((((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))AND(t1.c1 COLLATE BINARY)))AND(((1704671446)||(t1.c0)))))AND((((((((+ (t1.c1)))AND((+ (x'')))))AND(TYPEOF(t1.c1))))OR((('Ư4') NOTNULL)))))) ORDER BY CAST((NOT (t1.c0)) AS REAL)  NULLS LAST, ((t1.c1) BETWEEN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(NULL)))) INTERSECT SELECT ALL * FROM t1 WHERE ((((NOT (t1.c0)))&((t1.c0 IN ())))) ORDER BY CAST((NOT (t1.c0)) AS REAL)  NULLS LAST, ((t1.c1) BETWEEN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(NULL))));
SELECT MIN(t1.c0) FROM t1 WHERE ((CAST(t1.c0 AS INTEGER) IN ())) ORDER BY (((IFNULL(DISTINCT t1.c0, t1.c1)))<=((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c0))))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((CAST(t1.c0 AS INTEGER) IN ())) ORDER BY (((IFNULL(DISTINCT t1.c0, t1.c1)))<=((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c0))))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CAST(((t1.c0) ISNULL) AS BLOB)) ORDER BY (((IFNULL(DISTINCT t1.c0, t1.c1)))<=((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c0))))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE ((((~ (x'a31d')))IS((- (x'86'))))) ORDER BY '2001188870' DESC;
SELECT * FROM t1 WHERE ((((~ (x'a31d')))IS((- (x'86'))))) ORDER BY (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END, (((t1.c1, t1.c1, x''))>((t1.c0, t1.c1, t1.c0)))))<(((((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0))), ((t1.c0)<<(t1.c1))))) LIMIT 0X3;
SELECT * FROM t1 WHERE ((((~ (x'a31d')))IS((- (x'86'))))) ORDER BY '2001188870' DESC;
SELECT * FROM t1 WHERE ((((~ (x'a31d')))IS((- (x'86'))))) ORDER BY (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END, (((t1.c1, t1.c1, x''))>((t1.c0, t1.c1, t1.c0)))))<(((((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0))), ((t1.c0)<<(t1.c1))))) LIMIT 0X3;
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN ((+ (t1.c0))) AND (HEX(DISTINCT t1.c0)))) ORDER BY (((t1.c1, t1.c1, t1.c0)) BETWEEN ((((((((t1.c1)AND(x'')))AND(t1.c1)))AND(t1.c1)), ((-1.769118976E9)>>(t1.c1)), ((t1.c0)<(t1.c1)))) AND ((CASE t1.c1  WHEN NULL THEN t1.c0 END, t1.c0 COLLATE RTRIM, NULL)))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 IN ())) BETWEEN ((+ (t1.c0))) AND (HEX(DISTINCT t1.c0))))AND(((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END) BETWEEN (((t1.c0)|(t1.c0))) AND ((t1.c0 IN ())))))) ORDER BY t1.c0, ((t1.c0 IN ()) IN (NULL)) DESC LIMIT 0x0;
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN ((+ (t1.c0))) AND (HEX(DISTINCT t1.c0)))) ORDER BY (((t1.c1, t1.c1, t1.c0)) BETWEEN ((((((((t1.c1)AND(x'')))AND(t1.c1)))AND(t1.c1)), ((-1.769118976E9)>>(t1.c1)), ((t1.c0)<(t1.c1)))) AND ((CASE t1.c1  WHEN NULL THEN t1.c0 END, t1.c0 COLLATE RTRIM, NULL)))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 IN ())) BETWEEN ((+ (t1.c0))) AND (HEX(DISTINCT t1.c0))))AND(((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END) BETWEEN (((t1.c0)|(t1.c0))) AND ((t1.c0 IN ())))))) ORDER BY t1.c0, ((t1.c0 IN ()) IN (NULL)) DESC LIMIT 0x0;
SELECT * FROM t1 WHERE (LIKELIHOOD(((((t1.c0)AND(t1.c0)))AND(t1.c1)), t1.c1 COLLATE BINARY));
SELECT DISTINCT * FROM t1 WHERE (((LIKELIHOOD(((((t1.c0)AND(t1.c0)))AND(t1.c1)), t1.c1 COLLATE BINARY))AND(''))) ORDER BY ((t1.c1 COLLATE RTRIM)>>('o[' COLLATE BINARY))  NULLS FIRST, t1.c0 ASC LIMIT 0X0;
SELECT * FROM t1 WHERE (LIKELIHOOD(((((t1.c0)AND(t1.c0)))AND(t1.c1)), t1.c1 COLLATE BINARY));
SELECT COUNT(*) FROM t1 WHERE (((t1.c1 IN (t1.c0)) IN ()));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1 IN (t1.c0)) IN ()))AND(t1.c1))) ORDER BY (((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END, ((t1.c1) IS FALSE)))<=((t1.c1 COLLATE RTRIM, t1.c0 COLLATE NOCASE))) DESC, ((t1.c1 COLLATE NOCASE) BETWEEN (TOTAL_CHANGES()) AND (((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(x'83')))) ASC  NULLS LAST, x'6e' DESC  NULLS FIRST INTERSECT SELECT COUNT(*) FROM t1 WHERE (TRIM(x'025b')) ORDER BY (((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END, ((t1.c1) IS FALSE)))<=((t1.c1 COLLATE RTRIM, t1.c0 COLLATE NOCASE))) DESC, ((t1.c1 COLLATE NOCASE) BETWEEN (TOTAL_CHANGES()) AND (((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(x'83')))) ASC  NULLS LAST, x'6e' DESC  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1 WHERE ((CASE NULL  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN x'2623d59318' THEN t1.c0 WHEN t1.c1 THEN t1.c1 END IN (CAST(t1.c0 AS TEXT)))) ORDER BY x'5eb657' ASC  NULLS LAST, t1.c1 ASC;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((CASE NULL  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN x'2623d59318' THEN t1.c0 WHEN t1.c1 THEN t1.c1 END IN (CAST(t1.c0 AS TEXT)))) ORDER BY (((t1.c1)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))) AND (((- (t1.c1))))), CASE t1.c0  WHEN ((t1.c0)|(t1.c1)) THEN t1.c0 WHEN ((t1.c0)=(t1.c1)) THEN MIN(t1.c0, t1.c0) WHEN (((t1.c1)) NOT BETWEEN ((t1.c0)) AND (('853913989'))) THEN ((t1.c1)>>(t1.c0)) WHEN x'' THEN (((t1.c1, t1.c1)) BETWEEN ((x'c5', t1.c0)) AND ((t1.c0, x'0300'))) WHEN ((t1.c0)>(t1.c1)) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END END;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CAST(((((((((t1.c1)OR('''T﷥mjP%')))AND(t1.c1)))OR(t1.c0)))OR(t1.c1)) AS NUMERIC)) ORDER BY ((CAST(t1.c1 AS BLOB))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)), ((t1.c1 COLLATE NOCASE) NOT BETWEEN (SQLITE_SOURCE_ID()) AND ('\ﵥ|\M'))  NULLS LAST, IFNULL(((((t1.c1)OR(t1.c0)))AND(t1.c0)), ((t1.c0)!=(t1.c1)));
SELECT MIN(t1.c0) FROM t1 WHERE (CAST(((((((((t1.c1)OR('''T﷥mjP%')))AND(t1.c1)))OR(t1.c0)))OR(t1.c1)) AS NUMERIC)) ORDER BY ((CAST(t1.c1 AS BLOB))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)), ((t1.c1 COLLATE NOCASE) NOT BETWEEN (SQLITE_SOURCE_ID()) AND ('\ﵥ|\M'))  NULLS LAST, IFNULL(((((t1.c1)OR(t1.c0)))AND(t1.c0)), ((t1.c0)!=(t1.c1))) LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END COLLATE RTRIM)AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR('A')))LIKE(((t1.c0)*(t1.c0))))))) ORDER BY ABS(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN '244281655' WHEN t1.c0 THEN NULL END) ASC, MAX((+ (t1.c0)), CAST(t1.c1 AS NUMERIC), ((t1.c1) IS FALSE), CAST(t1.c1 AS NUMERIC), ((t1.c0) ISNULL), DATETIME(t1.c0, t1.c0, t1.c0)) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c1 COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1 COLLATE BINARY)AND(((((((t1.c0)OR(t1.c0)))AND(t1.c1))) NOT BETWEEN (((t1.c0)/(t1.c0))) AND (1845003627))))) LIMIT 0;
SELECT * FROM t1 WHERE (t1.c1 COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1 COLLATE BINARY)AND(((((((t1.c0)OR(t1.c0)))AND(t1.c1))) NOT BETWEEN (((t1.c0)/(t1.c0))) AND (1845003627))))) LIMIT 0;
SELECT * FROM t1 WHERE (CASE WHEN LIKELIHOOD(x'', t1.c0) THEN ((((((((x'9371b4')AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)) WHEN (+ ('L8f')) THEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) WHEN ((t1.c0) ISNULL) THEN 'jv' WHEN ((((NULL)OR(t1.c1)))OR('2083274013')) THEN t1.c1 ELSE (NOT (t1.c1)) END) ORDER BY ((((((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)OR(t1.c1 COLLATE RTRIM)))OR(HEX(DISTINCT t1.c0))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN LIKELIHOOD(x'', t1.c0) THEN ((((((((x'9371b4')AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)) WHEN (+ ('L8f')) THEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) WHEN ((t1.c0) ISNULL) THEN 'jv' WHEN ((((NULL)OR(t1.c1)))OR('2083274013')) THEN t1.c1 ELSE (NOT (t1.c1)) END)AND((((t1.c0)) NOT BETWEEN ((TRIM(DISTINCT 'Pu{~V ?'))) AND (((+ (-131715403)))))))) ORDER BY CAST((((t1.c0, t1.c1, t1.c1))<((t1.c0, t1.c1, t1.c1))) AS TEXT)  NULLS FIRST, ROUND((~ (t1.c1)), t1.c1)  NULLS LAST;
SELECT * FROM t1 WHERE (CASE WHEN LIKELIHOOD(x'', t1.c0) THEN ((((((((x'9371b4')AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)) WHEN (+ ('L8f')) THEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) WHEN ((t1.c0) ISNULL) THEN 'jv' WHEN ((((NULL)OR(t1.c1)))OR('2083274013')) THEN t1.c1 ELSE (NOT (t1.c1)) END) ORDER BY ((((((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)OR(t1.c1 COLLATE RTRIM)))OR(HEX(DISTINCT t1.c0))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((x'eb95')>(t1.c0 COLLATE NOCASE))) ORDER BY TRIM(DISTINCT ((t1.c1)=(t1.c0))) ASC;
SELECT DISTINCT COUNT(*) FROM t1 NOT INDEXED WHERE (((((x'eb95')>(t1.c0 COLLATE NOCASE)))AND(t1.c0))) ORDER BY TRIM(DISTINCT ((t1.c1)=(t1.c0))) ASC LIMIT 0x5 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ('') ORDER BY TRIM(DISTINCT ((t1.c1)=(t1.c0))) ASC LIMIT 5;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (t1.c1);
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (t1.c1) INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 COLLATE BINARY WHEN ((t1.c1)LIKE(t1.c0)) THEN CASE WHEN t1.c0 THEN '' END WHEN '704982203' THEN (t1.c0 IN (t1.c1)) WHEN ((t1.c0)*(t1.c1)) THEN ((t1.c1)!=(t1.c1)) ELSE ((x'') ISNULL) END);
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))>((t1.c0 IN (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))>((t1.c0 IN (t1.c1)))))AND(0xffffffffcddf38e2))) ORDER BY (((t1.c0)) BETWEEN ((((t1.c0)!=(t1.c1)))) AND ((x''))), ((((((((((((((((0xffffffffda56420e)OR(t1.c1)))AND(t1.c1)))AND(-569268069)))AND(t1.c1)))OR((('1956082742') IS TRUE))))OR(CASE WHEN t1.c1 THEN t1.c1 END)))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (NULL)))))AND(((0.9130685978500873)||(NULL))))  NULLS FIRST, ((((((((t1.c1)>(0.36851995269394877)))OR(((t1.c0)<(t1.c0)))))AND(((t1.c0)<=(t1.c1)))))OR(((t1.c1)/(t1.c0))))  NULLS FIRST, CASE ((t1.c1)OR(t1.c0))  WHEN ((t1.c0) IS FALSE) THEN NULL WHEN ((t1.c1) NOTNULL) THEN t1.c1 COLLATE RTRIM WHEN '488961468' THEN t1.c1 COLLATE BINARY ELSE ((t1.c1) NOT BETWEEN (NULL) AND (t1.c1)) END  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))>((t1.c0 IN (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))>((t1.c0 IN (t1.c1)))))AND(0xffffffffcddf38e2))) ORDER BY (((t1.c0)) BETWEEN ((((t1.c0)!=(t1.c1)))) AND ((x''))), ((((((((((((((((0xffffffffda56420e)OR(t1.c1)))AND(t1.c1)))AND(-569268069)))AND(t1.c1)))OR((('1956082742') IS TRUE))))OR(CASE WHEN t1.c1 THEN t1.c1 END)))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (NULL)))))AND(((0.9130685978500873)||(NULL))))  NULLS FIRST, ((((((((t1.c1)>(0.36851995269394877)))OR(((t1.c0)<(t1.c0)))))AND(((t1.c0)<=(t1.c1)))))OR(((t1.c1)/(t1.c0))))  NULLS FIRST, CASE ((t1.c1)OR(t1.c0))  WHEN ((t1.c0) IS FALSE) THEN NULL WHEN ((t1.c1) NOTNULL) THEN t1.c1 COLLATE RTRIM WHEN '488961468' THEN t1.c1 COLLATE BINARY ELSE ((t1.c1) NOT BETWEEN (NULL) AND (t1.c1)) END  NULLS LAST LIMIT 0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ('zGc+o<w');
SELECT MIN(t1.c1) FROM t1 WHERE ('zGc+o<w') ORDER BY ((CAST(t1.c0 AS TEXT)) ISNULL) DESC  NULLS LAST, ((((t1.c0) IS FALSE))<=((((t1.c1, t1.c1, t1.c1, t1.c1))=((t1.c0, t1.c0, t1.c0, t1.c0))))) DESC, (((t1.c1, t1.c1)) BETWEEN ((x'', CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)) AND (((((t1.c1, t1.c1, t1.c0))!=((t1.c0, t1.c1, ''))), HEX(0.09652578250657351)))) DESC LIMIT 1 INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (CASE WHEN ((x'b6')*(t1.c0)) THEN ((t1.c0) NOT BETWEEN (x'bd9a') AND (t1.c0)) END) ORDER BY ((CAST(t1.c0 AS TEXT)) ISNULL) DESC  NULLS LAST, ((((t1.c0) IS FALSE))<=((((t1.c1, t1.c1, t1.c1, t1.c1))==((t1.c0, t1.c0, t1.c0, t1.c0))))) DESC, (((t1.c1, t1.c1)) BETWEEN ((x'', CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)) AND (((((t1.c1, t1.c1, t1.c0))<>((t1.c0, t1.c1, ''))), HEX(0.09652578250657351)))) DESC LIMIT 1;
SELECT * FROM t1 WHERE (((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0))) NOT BETWEEN ((t1.c0 IN (t1.c1, t1.c0, t1.c1))) AND (((t1.c0)+(t1.c0))))) ORDER BY UPPER(DISTINCT ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0))) NOT BETWEEN ((t1.c0 IN (t1.c1, t1.c0, t1.c1))) AND (((t1.c0)+(t1.c0))))) ORDER BY UPPER(DISTINCT ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (CAST((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))) AS NUMERIC)) ORDER BY UPPER(DISTINCT ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0))) NOT BETWEEN ((t1.c0 IN (t1.c1, t1.c0, t1.c1))) AND (((t1.c0)+(t1.c0))))) ORDER BY UPPER(DISTINCT ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0))) NOT BETWEEN ((t1.c0 IN (t1.c1, t1.c0, t1.c1))) AND (((t1.c0)+(t1.c0))))) ORDER BY UPPER(DISTINCT ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (CAST((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))) AS NUMERIC)) ORDER BY UPPER(DISTINCT ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))  NULLS FIRST;
SELECT MAX(t1.c0) FROM t1 WHERE (CASE WHEN ((t1.c0)|(t1.c1)) THEN ((((t1.c1)OR(t1.c1)))OR(t1.c1)) WHEN t1.c0 COLLATE BINARY THEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE NULL END WHEN TYPEOF(DISTINCT t1.c1) THEN (+ (t1.c1)) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) END) ORDER BY (((NOT (t1.c1)))==(CAST(t1.c1 AS TEXT))), CASE WHEN (((t1.c0, NULL))<=((NULL, 1.00929609E8))) THEN ((t1.c0)AND(t1.c1)) WHEN COALESCE(DISTINCT t1.c0, t1.c1, t1.c0, t1.c1, t1.c0, t1.c0) THEN t1.c1 COLLATE BINARY END ASC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((CASE WHEN ((t1.c0)|(t1.c1)) THEN ((((t1.c1)OR(t1.c1)))OR(t1.c1)) WHEN t1.c0 COLLATE BINARY THEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE NULL END WHEN TYPEOF(DISTINCT t1.c1) THEN (+ (t1.c1)) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) END)AND(json_patch(((((((t1.c1)OR(t1.c0)))AND(NULL)))OR(t1.c1)), ((t1.c0)>=(t1.c0)))))) ORDER BY x'99' DESC  NULLS LAST, ((((CAST(t1.c0 AS NUMERIC))OR(CASE WHEN t1.c1 THEN 1.612608662E9 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))AND(CAST(t1.c1 AS NUMERIC))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (((CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END AS BLOB))AND(CASE (t1.c0 IN ())  WHEN t1.c0 COLLATE RTRIM THEN CAST(t1.c1 AS TEXT) WHEN ((t1.c1)OR(t1.c0)) THEN (((t1.c1, t1.c1))>=((t1.c0, t1.c0))) WHEN '1989149162' THEN (~ (t1.c1)) ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END))) LIMIT 1;
SELECT * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (((CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END AS BLOB))AND(CASE (t1.c0 IN ())  WHEN t1.c0 COLLATE RTRIM THEN CAST(t1.c1 AS TEXT) WHEN ((t1.c1)OR(t1.c0)) THEN (((t1.c1, t1.c1))>=((t1.c0, t1.c0))) WHEN '1989149162' THEN (~ (t1.c1)) ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END))) LIMIT 1;
SELECT COUNT(*) FROM t1 WHERE (COALESCE((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((t1.c1)OR(t1.c1)), CAST(t1.c0 AS TEXT))) ORDER BY ((t1.c1) IS FALSE) ASC, ((((0.4972460844462082)|(t1.c1))) BETWEEN ('1046715834') AND (((t1.c1)&(t1.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (COALESCE((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((t1.c1)OR(t1.c1)), CAST(t1.c0 AS TEXT))) ORDER BY ((t1.c1) IS FALSE) ASC, ((((0.4972460844462082)|(t1.c1))) BETWEEN ('1046715834') AND (((t1.c1)&(t1.c1)))) DESC  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN -1.46409418E9 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END) BETWEEN (CAST(t1.c0 AS BLOB)) AND (rtreenode(t1.c0, t1.c1)))) ORDER BY ((x'b4') NOT BETWEEN (((t1.c0)*(x'c5fb34'))) AND (((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))) ASC, ((((CAST(t1.c1 AS REAL))AND((((t1.c1))<>((t1.c1))))))OR(((((t1.c0)AND(t1.c0)))OR(t1.c1)))), ((((t1.c1)>>('/')))LIKE(((((t1.c1)AND(t1.c1)))AND(t1.c1)))) ASC, UPPER(DISTINCT (t1.c0 IN (t1.c1))) ASC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c1 THEN -1.46409418E9 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END) BETWEEN (CAST(t1.c0 AS BLOB)) AND (rtreenode(t1.c0, t1.c1))))AND((((((- (t1.c1)))OR((((t1.c1, 0.05070471509913588, t1.c0, t1.c1, t1.c1, t1.c0))<>((t1.c1, t1.c0, t1.c1, t1.c1, t1.c1, t1.c0))))))AND(UPPER(t1.c1)))))) ORDER BY ((t1.c0) ISNULL) COLLATE RTRIM ASC  NULLS LAST, ((0.2367519961320771)|('-301094617' COLLATE RTRIM))  NULLS FIRST, ABS(DISTINCT ((((t1.c0)AND(t1.c0)))AND(t1.c0)))  NULLS FIRST INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE ((((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c1)))) BETWEEN ((((t1.c1))<>((t1.c0)))) AND (t1.c1 COLLATE RTRIM))) ORDER BY ((t1.c0) ISNULL) COLLATE RTRIM ASC  NULLS LAST, ((0.2367519961320771)|('-301094617' COLLATE RTRIM))  NULLS FIRST, ABS(DISTINCT ((((t1.c0)AND(t1.c0)))AND(t1.c0)))  NULLS FIRST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST(x'' AS NUMERIC)) ORDER BY ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((CAST(x'' AS NUMERIC))AND(CASE WHEN ((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)) THEN ((t1.c1)LIKE(t1.c1)) WHEN ABS(DISTINCT t1.c0) THEN ((t1.c0) NOT NULL) ELSE ((t1.c0)<=(t1.c0)) END))) ORDER BY ((((t1.c0) IS TRUE)) BETWEEN ((+ (t1.c0))) AND (ABS(t1.c0))), ((((((t1.c0)AND(t1.c0)))OR(t1.c0))) NOTNULL)  NULLS FIRST, ((t1.c0 COLLATE RTRIM) IS FALSE) DESC  NULLS LAST INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, -1535261558)) AND ((t1.c0, 0.02541726709560943, t1.c0))))|(((t1.c0) IS TRUE)))) ORDER BY ((((t1.c0) IS TRUE)) BETWEEN ((+ (t1.c0))) AND (ABS(t1.c0))), ((((((t1.c0)AND(t1.c0)))OR(t1.c0))) NOTNULL)  NULLS FIRST, ((t1.c0 COLLATE RTRIM) IS FALSE) DESC  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END AS BLOB)) ORDER BY ((((((((('8z')OR(t1.c0)))AND('429870988')))OR(t1.c0)))OR(t1.c1)) IN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST, (~ ((((t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((-208856384, t1.c1, t1.c0)))))  NULLS FIRST, CASE WHEN (((t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c1))) THEN CAST(t1.c0 AS NUMERIC) WHEN CAST(t1.c0 AS REAL) THEN ((t1.c1) NOT BETWEEN ('~') AND (t1.c0)) WHEN ((t1.c1)/(t1.c0)) THEN t1.c0 END;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((CAST(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END AS BLOB))AND(TRIM(((t1.c1) ISNULL))))) ORDER BY ((((((((('8z')OR(t1.c0)))AND('429870988')))OR(t1.c0)))OR(t1.c1)) IN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST, (~ ((((t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((0xfffffffff38d1ac0, t1.c1, t1.c0)))))  NULLS FIRST, CASE WHEN (((t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c1))) THEN CAST(t1.c0 AS NUMERIC) WHEN CAST(t1.c0 AS REAL) THEN ((t1.c1) NOT BETWEEN ('~') AND (t1.c0)) WHEN ((t1.c1)/(t1.c0)) THEN t1.c0 END INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CAST((t1.c0 IN (t1.c1, t1.c1)) AS REAL)) ORDER BY ((((((((('8z')OR(t1.c0)))AND('429870988')))OR(t1.c0)))OR(t1.c1)) IN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST, (~ ((((t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((0Xfffffffff38d1ac0, t1.c1, t1.c0)))))  NULLS FIRST, CASE WHEN (((t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c1))) THEN CAST(t1.c0 AS NUMERIC) WHEN CAST(t1.c0 AS REAL) THEN ((t1.c1) NOT BETWEEN ('~') AND (t1.c0)) WHEN ((t1.c1)/(t1.c0)) THEN t1.c0 END;
SELECT ALL * FROM t1 WHERE (((x'e09a') NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND (((-1263982971) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((x'e09a') NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND (((-1263982971) NOT BETWEEN (t1.c0) AND (t1.c0))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (STRFTIME(((t1.c0)||(t1.c1)), ((t1.c1)GLOB(t1.c1)), CASE t1.c1  WHEN t1.c0 THEN t1.c0 END, t1.c0)) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((x'e09a') NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND (((-1263982971) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((x'e09a') NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND (((-1263982971) NOT BETWEEN (t1.c0) AND (t1.c0))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (STRFTIME(((t1.c0)||(t1.c1)), ((t1.c1)GLOB(t1.c1)), CASE t1.c1  WHEN t1.c0 THEN t1.c0 END, t1.c0)) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (x'aa');
SELECT DISTINCT * FROM t1 WHERE (((x'aa')AND((~ ((- (t1.c1))))))) LIMIT 2;
SELECT ALL * FROM t1 WHERE (x'aa');
SELECT DISTINCT * FROM t1 WHERE (((x'aa')AND((~ ((- (t1.c1))))))) LIMIT 2;
SELECT MAX(t1.c1) FROM t1 WHERE (CAST((t1.c1 IN ()) AS BLOB)) ORDER BY ((((t1.c0))<((t1.c1))) IN ());
SELECT MAX(t1.c1) FROM t1 WHERE (CAST((t1.c1 IN ()) AS BLOB)) ORDER BY ((((t1.c0))<((t1.c1))) IN ()) LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(x'69')))AND(t1.c1)))AND(t1.c0)))OR(((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(x'69')))AND(t1.c1)))AND(t1.c0)))OR(((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0))))) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((('|雾o' IN (t1.c1)), (t1.c0 IN ())))>((((t1.c1)+(t1.c1)), ((t1.c0)>(t1.c0))))));
SELECT * FROM t1 WHERE (NULL) ORDER BY x'2c44';
SELECT DISTINCT * FROM t1 WHERE (NULL) ORDER BY ((0.33389777393169595) ISNULL) DESC  NULLS LAST, ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN 0Xffffffffa4d7ed33 THEN t1.c1 ELSE t1.c0 END) ISNULL) DESC, (((t1.c1 IN (t1.c0)))-((~ (t1.c1)))) DESC  NULLS FIRST LIMIT 0X1;
SELECT * FROM t1 WHERE (NULL) ORDER BY x'2c44';
SELECT DISTINCT * FROM t1 WHERE (NULL) ORDER BY ((0.33389777393169595) ISNULL) DESC  NULLS LAST, ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN 0Xffffffffa4d7ed33 THEN t1.c1 ELSE t1.c0 END) ISNULL) DESC, (((t1.c1 IN (t1.c0)))-((~ (t1.c1)))) DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((t1.c1 COLLATE BINARY) BETWEEN (NULLIF(t1.c0, x'caa2')) AND ((((t1.c0, t1.c1))>=((NULL, '0.041374768243308435')))))) ORDER BY t1.c0  NULLS FIRST, (((CAST(t1.c1 AS NUMERIC), JULIANDAY(t1.c1, t1.c0, t1.c0, t1.c1, t1.c1), ((t1.c0) NOT NULL)))>=(((NOT (t1.c0)), t1.c0 COLLATE RTRIM, NULL)))  NULLS FIRST, CASE WHEN (~ (t1.c0)) THEN (- (t1.c0)) WHEN CAST(t1.c1 AS REAL) THEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END WHEN t1.c1 COLLATE NOCASE THEN t1.c1 COLLATE BINARY WHEN (t1.c0 IN ()) THEN 0xfffffffffc757418 WHEN ((((((((((((0.9694144067266579)OR(t1.c0)))OR(t1.c0)))OR(0.14676152285618405)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1)) THEN ('s쉋' IN ()) END  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c1 COLLATE BINARY) BETWEEN (NULLIF(t1.c0, x'caa2')) AND ((((t1.c0, t1.c1))>=((NULL, '0.041374768243308435'))))))AND(t1.c0))) ORDER BY t1.c0  NULLS FIRST, (((CAST(t1.c1 AS NUMERIC), JULIANDAY(t1.c1, t1.c0, t1.c0, t1.c1, t1.c1), ((t1.c0) NOT NULL)))>=(((NOT (t1.c0)), t1.c0 COLLATE RTRIM, NULL)))  NULLS FIRST, CASE WHEN (~ (t1.c0)) THEN (- (t1.c0)) WHEN CAST(t1.c1 AS REAL) THEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END WHEN t1.c1 COLLATE NOCASE THEN t1.c1 COLLATE BINARY WHEN (t1.c0 IN ()) THEN -59411432 WHEN ((((((((((((0.9694144067266579)OR(t1.c0)))OR(t1.c0)))OR(0.14676152285618405)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1)) THEN ('s쉋' IN ()) END  NULLS FIRST INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (CASE WHEN ('-1408692428' IN ()) THEN 0.09666087167780257 WHEN t1.c1 COLLATE NOCASE THEN '-857382567' WHEN ((((t1.c1)OR(t1.c0)))AND(t1.c0)) THEN ((t1.c0)IS NOT(t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN (((t1.c1)) BETWEEN ((t1.c1)) AND ((728331195))) WHEN ((t1.c1) NOTNULL) THEN ((((((t1.c1)AND(0.5590021881945676)))OR(t1.c0)))AND(t1.c1)) END) ORDER BY t1.c0  NULLS FIRST, (((CAST(t1.c1 AS NUMERIC), JULIANDAY(t1.c1, t1.c0, t1.c0, t1.c1, t1.c1), ((t1.c0) NOT NULL)))>=(((NOT (t1.c0)), t1.c0 COLLATE RTRIM, NULL)))  NULLS FIRST, CASE WHEN (~ (t1.c0)) THEN (- (t1.c0)) WHEN CAST(t1.c1 AS REAL) THEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END WHEN t1.c1 COLLATE NOCASE THEN t1.c1 COLLATE BINARY WHEN (t1.c0 IN ()) THEN -59411432 WHEN ((((((((((((0.9694144067266579)OR(t1.c0)))OR(t1.c0)))OR(0.14676152285618405)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1)) THEN ('s쉋' IN ()) END  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (t1.c1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c1)AND(t1.c1))) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c1, t1.c1)) BETWEEN ((CAST(t1.c0 AS NUMERIC), (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0))), NULL)) AND ((((0.2463913667419878) NOT NULL), ((t1.c0)AND(t1.c1)), ((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(NULL))))));
SELECT MIN(t1.c0) FROM t1 WHERE (t1.c1 COLLATE BINARY) ORDER BY CASE (((t1.c1)) NOT BETWEEN ((-1e500)) AND ((t1.c1)))  WHEN t1.c1 THEN ((NULL)<(x'da0e')) ELSE ((((((x'')OR(t1.c1)))OR(t1.c0)))AND(')ᅑ%6flP')) END  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (t1.c1 COLLATE BINARY) ORDER BY ((t1.c1 IN ()) IN (((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))), t1.c1, (- (CAST(t1.c0 AS REAL))) ASC INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((t1.c1)AND(0xffffffffd705df20))) ORDER BY ((t1.c1 IN ()) IN (((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))), t1.c1, (- (CAST(t1.c0 AS REAL))) ASC;
SELECT ALL * FROM t1 WHERE ((- (NULL)));
SELECT DISTINCT * FROM t1 WHERE ((- (NULL))) ORDER BY ((((0Xffffffff9ada675e)<('s쉋'))) IS FALSE) ASC LIMIT 1;
SELECT ALL * FROM t1 WHERE ((- (NULL)));
SELECT DISTINCT * FROM t1 WHERE ((- (NULL))) ORDER BY ((((0Xffffffff9ada675e)<('s쉋'))) IS FALSE) ASC LIMIT 1;
SELECT MIN(t1.c0) FROM t1 WHERE ((((((t1.c0, t1.c0))<=((t1.c1, t1.c1))))IS(t1.c0 COLLATE BINARY)));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((((t1.c0, t1.c0))<((t1.c1, t1.c1))))IS(t1.c0 COLLATE BINARY)))AND(((((t1.c0) BETWEEN (t1.c1) AND ('-1749589711'))) NOTNULL)))) LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END AS TEXT)) LIMIT 0X1;
SELECT * FROM t1 WHERE (CAST((t1.c1 IN ()) AS NUMERIC));
SELECT DISTINCT * FROM t1 WHERE (CAST((t1.c1 IN ()) AS NUMERIC)) ORDER BY t1.c0, CASE WHEN CAST(t1.c1 AS REAL) THEN ((x'9e') NOTNULL) WHEN (((t1.c1, t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1, '[')) AND ((t1.c0, t1.c1, t1.c1, t1.c0))) THEN x'90' END  NULLS LAST, (NOT (t1.c0)) ASC  NULLS LAST, ((NULLIF(DISTINCT t1.c1, t1.c1)) BETWEEN ((- (t1.c0))) AND ((t1.c0 IN ()))) DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN t1.c1 END COLLATE NOCASE) ORDER BY t1.c0, CASE WHEN CAST(t1.c1 AS REAL) THEN ((x'9e') NOTNULL) WHEN (((t1.c1, t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1, '[')) AND ((t1.c0, t1.c1, t1.c1, t1.c0))) THEN x'90' END  NULLS LAST, (NOT (t1.c0)) ASC  NULLS LAST, ((NULLIF(DISTINCT t1.c1, t1.c1)) BETWEEN ((- (t1.c0))) AND ((t1.c0 IN ()))) DESC;
SELECT * FROM t1 WHERE (CAST((t1.c1 IN ()) AS NUMERIC));
SELECT DISTINCT * FROM t1 WHERE (CAST((t1.c1 IN ()) AS NUMERIC)) ORDER BY t1.c0, CASE WHEN CAST(t1.c1 AS REAL) THEN ((x'9e') NOTNULL) WHEN (((t1.c1, t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1, '[')) AND ((t1.c0, t1.c1, t1.c1, t1.c0))) THEN x'90' END  NULLS LAST, (NOT (t1.c0)) ASC  NULLS LAST, ((NULLIF(DISTINCT t1.c1, t1.c1)) BETWEEN ((- (t1.c0))) AND ((t1.c0 IN ()))) DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN t1.c1 END COLLATE NOCASE) ORDER BY t1.c0, CASE WHEN CAST(t1.c1 AS REAL) THEN ((x'9e') NOTNULL) WHEN (((t1.c1, t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1, '[')) AND ((t1.c0, t1.c1, t1.c1, t1.c0))) THEN x'90' END  NULLS LAST, (NOT (t1.c0)) ASC  NULLS LAST, ((NULLIF(DISTINCT t1.c1, t1.c1)) BETWEEN ((- (t1.c0))) AND ((t1.c0 IN ()))) DESC;
SELECT MAX(t1.c1) FROM t1 WHERE (((t1.c1)%(((0.8483563687381465) NOT NULL)))) ORDER BY (((t1.c0) BETWEEN (t1.c1) AND (0.7638790509999451)) IN (t1.c0 COLLATE BINARY, CAST(t1.c1 AS REAL)))  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c1)%(((0.8483563687381465) NOT NULL)))) ORDER BY (((t1.c0) BETWEEN (t1.c1) AND (0.7638790509999451)) IN (t1.c0 COLLATE BINARY, CAST(t1.c1 AS REAL)))  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE BINARY)LIKE(((t1.c0)LIKE(t1.c0))))) ORDER BY ((((t1.c1) NOTNULL)) BETWEEN (((t1.c0)==(1761015341))) AND (((t1.c0) IS FALSE))) ASC  NULLS FIRST, COALESCE((+ (t1.c1)), t1.c0 COLLATE RTRIM, IFNULL(DISTINCT t1.c0, t1.c1), ((NULL) NOT BETWEEN (t1.c0) AND (t1.c1)), TYPEOF(DISTINCT t1.c0))  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE BINARY)LIKE(((t1.c0)LIKE(t1.c0))))) ORDER BY ((((t1.c1) NOTNULL)) BETWEEN (((t1.c0)==(0X68f6f62d))) AND (((t1.c0) IS FALSE))) ASC  NULLS FIRST, COALESCE((+ (t1.c1)), t1.c0 COLLATE RTRIM, IFNULL(DISTINCT t1.c0, t1.c1), ((NULL) NOT BETWEEN (t1.c0) AND (t1.c1)), TYPEOF(DISTINCT t1.c0))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CAST(((((t1.c1)AND(t1.c0)))AND(t1.c0)) AS INTEGER)) ORDER BY ((((t1.c1) NOTNULL)) BETWEEN (((t1.c0)=(1761015341))) AND (((t1.c0) IS FALSE))) ASC  NULLS FIRST, COALESCE((+ (t1.c1)), t1.c0 COLLATE RTRIM, IFNULL(DISTINCT t1.c0, t1.c1), ((NULL) NOT BETWEEN (t1.c0) AND (t1.c1)), TYPEOF(DISTINCT t1.c0))  NULLS FIRST LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((((CASE NULL  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))AND(t1.c0)))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))OR(t1.c1))) ORDER BY CAST((~ (t1.c1)) AS REAL) DESC  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((((CASE NULL  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))AND(t1.c0)))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))OR(t1.c1))) ORDER BY t1.c0 DESC LIMIT 0X2;
SELECT MAX(t1.c0) FROM t1 WHERE ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END IN ((NOT (t1.c1)))));
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END IN ((NOT (t1.c1)))))AND(t1.c1))) ORDER BY ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END) ISNULL) DESC  NULLS FIRST INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (CASE WHEN (~ (t1.c0)) THEN '曀h83' WHEN t1.c1 THEN CAST(t1.c0 AS INTEGER) END) ORDER BY ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END) ISNULL) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((CAST(t1.c0 AS NUMERIC))OR(t1.c1)))AND(t1.c0 COLLATE RTRIM)))OR(IFNULL(t1.c0, t1.c1))));
SELECT ALL * FROM t1 WHERE (((((((((CAST(t1.c0 AS NUMERIC))OR(t1.c1)))AND(t1.c0 COLLATE RTRIM)))OR(IFNULL(t1.c0, t1.c1))))AND(CAST(x'4c' AS INTEGER)))) ORDER BY CASE ((t1.c0) NOTNULL)  WHEN t1.c1 COLLATE NOCASE THEN CASE t1.c1  WHEN x'70' THEN t1.c0 ELSE t1.c1 END END  NULLS FIRST, t1.c1 DESC;
SELECT ALL * FROM t1 WHERE (((((((CAST(t1.c0 AS NUMERIC))OR(t1.c1)))AND(t1.c0 COLLATE RTRIM)))OR(IFNULL(t1.c0, t1.c1))));
SELECT ALL * FROM t1 WHERE (((((((((CAST(t1.c0 AS NUMERIC))OR(t1.c1)))AND(t1.c0 COLLATE RTRIM)))OR(IFNULL(t1.c0, t1.c1))))AND(CAST(x'4c' AS INTEGER)))) ORDER BY CASE ((t1.c0) NOTNULL)  WHEN t1.c1 COLLATE NOCASE THEN CASE t1.c1  WHEN x'70' THEN t1.c0 ELSE t1.c1 END END  NULLS FIRST, t1.c1 DESC;
SELECT ALL * FROM t1 WHERE ((~ (((t1.c1) IS FALSE)))) ORDER BY ((((((t1.c1) ISNULL))AND(CAST(t1.c1 AS REAL))))AND((~ (NULL)))), t1.c1 DESC, json_insert(((t1.c1)>>(t1.c0)), x'', ((t1.c0)GLOB(t1.c0)), ((t1.c0)LIKE(t1.c1)), '-1827888760' COLLATE BINARY)  NULLS LAST, ((t1.c1)/(t1.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((((~ (((t1.c1) IS FALSE))))AND((+ ((t1.c1 IN ())))))) ORDER BY ((((((t1.c1) ISNULL))AND(CAST(t1.c1 AS REAL))))AND((~ (NULL)))), t1.c1 DESC, json_insert(((t1.c1)>>(t1.c0)), x'', ((t1.c0)GLOB(t1.c0)), ((t1.c0)LIKE(t1.c1)), '-1827888760' COLLATE BINARY)  NULLS LAST, ((t1.c1)/(t1.c0)) COLLATE BINARY DESC  NULLS LAST INTERSECT SELECT ALL * FROM t1 NOT INDEXED WHERE (((t1.c0 COLLATE BINARY) NOT NULL)) ORDER BY ((((((t1.c1) ISNULL))AND(CAST(t1.c1 AS REAL))))AND((~ (NULL)))), t1.c1 DESC, json_insert(((t1.c1)>>(t1.c0)), x'', ((t1.c0)GLOB(t1.c0)), ((t1.c0)LIKE(t1.c1)), '-1827888760' COLLATE BINARY)  NULLS LAST, ((t1.c1)/(t1.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((~ (((t1.c1) IS FALSE)))) ORDER BY ((((((t1.c1) ISNULL))AND(CAST(t1.c1 AS REAL))))AND((~ (NULL)))), t1.c1 DESC, json_insert(((t1.c1)>>(t1.c0)), x'', ((t1.c0)GLOB(t1.c0)), ((t1.c0)LIKE(t1.c1)), '-1827888760' COLLATE BINARY)  NULLS LAST, ((t1.c1)/(t1.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (TIME(((((((t1.c0)AND(t1.c1)))OR(x'5c')))AND(t1.c1)), ((((t1.c1)AND(t1.c1)))OR(t1.c1)), CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END, (0.6520768458702844 IN ()), (t1.c1 IN ()))) ORDER BY -2070989208;
SELECT ALL COUNT(*) FROM t1 WHERE (((TIME(((((((t1.c0)AND(t1.c1)))OR(x'5c')))AND(t1.c1)), ((((t1.c1)AND(t1.c1)))OR(t1.c1)), CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END, (0.6520768458702844 IN ()), (t1.c1 IN ())))AND(x'faf53f38c1'))) ORDER BY (+ (t1.c0 COLLATE RTRIM)) DESC  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) IS TRUE))<(COALESCE(t1.c0, '2067293718', NULL, t1.c0)))) ORDER BY (+ (t1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c1))))OR(x'2346')))AND(((t1.c0)>(t1.c0)))))AND((((x'', t1.c1, t1.c1))>((t1.c0, 1173587158, t1.c0))))));
SELECT DISTINCT * FROM t1 WHERE ((((((((((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c1))))OR(x'2346')))AND(((t1.c0)>(t1.c0)))))AND((((x'', t1.c1, t1.c1))>((t1.c0, 1173587158, t1.c0))))))AND(((((((((((((TRIM(DISTINCT t1.c0, t1.c1))OR((- (t1.c1)))))AND(x'86')))AND(CAST(t1.c0 AS INTEGER))))AND(NULL)))OR(((t1.c1)*(t1.c0)))))AND(0)))));
SELECT ALL * FROM t1 WHERE ((((((((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c1))))OR(x'2346')))AND(((t1.c0)>(t1.c0)))))AND((((x'', t1.c1, t1.c1))>((t1.c0, 1173587158, t1.c0))))));
SELECT DISTINCT * FROM t1 WHERE ((((((((((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c1))))OR(x'2346')))AND(((t1.c0)>(t1.c0)))))AND((((x'', t1.c1, t1.c1))>((t1.c0, 1173587158, t1.c0))))))AND(((((((((((((TRIM(DISTINCT t1.c0, t1.c1))OR((- (t1.c1)))))AND(x'86')))AND(CAST(t1.c0 AS INTEGER))))AND(NULL)))OR(((t1.c1)*(t1.c0)))))AND(0)))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (LOWER(DISTINCT CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (LOWER(DISTINCT CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)) INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((t1.c1 IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c0)))IS((((t1.c0, t1.c0, t1.c1, t1.c0, 0.3309903545409516))<=((t1.c1, t1.c0, t1.c1, t1.c0, t1.c0)))))) ORDER BY t1.c1 DESC  NULLS FIRST, CASE WHEN LOWER(DISTINCT t1.c0) THEN (((t1.c1, t1.c1))==((NULL, t1.c0))) END DESC  NULLS FIRST, CASE ((((t1.c0)OR(t1.c0)))OR(t1.c0))  WHEN IFNULL(t1.c1, t1.c1) THEN (- (t1.c0)) ELSE (((t1.c1, t1.c1, t1.c0, t1.c1))>((t1.c0, t1.c1, t1.c1, t1.c0))) END DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((- (t1.c0)))IS((((t1.c0, t1.c0, t1.c1, t1.c0, 0.3309903545409516))<=((t1.c1, t1.c0, t1.c1, t1.c0, t1.c0)))))) ORDER BY t1.c1 DESC  NULLS FIRST, CASE WHEN LOWER(DISTINCT t1.c0) THEN (((t1.c1, t1.c1))==((NULL, t1.c0))) END DESC  NULLS FIRST, CASE ((((t1.c0)OR(t1.c0)))OR(t1.c0))  WHEN IFNULL(t1.c1, t1.c1) THEN (- (t1.c0)) ELSE (((t1.c1, t1.c1, t1.c0, t1.c1))>((t1.c0, t1.c1, t1.c1, t1.c0))) END DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM t1 WHERE ((((t1.c1 IN (t1.c0)))==(((t1.c0)<=(t1.c1))))) ORDER BY t1.c1  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((t1.c1 IN (t1.c0)))=(((t1.c0)=(t1.c1)))))AND(0.9874845622730379))) ORDER BY t1.c1  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ((((((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))OR((0.09618319594565305 IN ()))))AND(CAST(t1.c1 AS BLOB)))) ORDER BY t1.c1  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c1 IN (t1.c0)))==(((t1.c0)<=(t1.c1))))) ORDER BY t1.c1  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((t1.c1 IN (t1.c0)))=(((t1.c0)=(t1.c1)))))AND(0.9874845622730379))) ORDER BY t1.c1  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ((((((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))OR((0.09618319594565305 IN ()))))AND(CAST(t1.c1 AS BLOB)))) ORDER BY t1.c1  NULLS FIRST LIMIT 0;
SELECT MIN(t1.c0) FROM t1 WHERE (ABS(DISTINCT (((t1.c1))!=((t1.c0)))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((ABS(DISTINCT (((t1.c1))<((t1.c0)))))AND(CAST((((t1.c0, t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, x'14', t1.c1))) AS INTEGER)))) ORDER BY ((((CAST(t1.c0 AS NUMERIC))AND(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR((((t1.c0, t1.c0, 0.15040534707392106)) NOT BETWEEN ((t1.c0, t1.c0, 'Jﮞc8ષ')) AND ((t1.c0, t1.c0, t1.c1))))) DESC  NULLS LAST, (((((((t1.c0, t1.c1, t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c0, x'08', t1.c0, t1.c0, t1.c1)) AND ((t1.c1, 0.9886405154550119, t1.c0, t1.c0, t1.c0))))OR((((NULL, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1))))))AND((t1.c0 IN (t1.c0)))) ASC  NULLS LAST, ((SQLITE_COMPILEOPTION_GET(t1.c0))LIKE(t1.c1 COLLATE RTRIM)) ASC  NULLS LAST LIMIT 0x4 INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c0)%(t1.c1)))) AND ((((t1.c0) BETWEEN ('1477179842') AND (t1.c1)))))) ORDER BY ((((CAST(t1.c0 AS NUMERIC))AND(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR((((t1.c0, t1.c0, 0.15040534707392106)) NOT BETWEEN ((t1.c0, t1.c0, 'Jﮞc8ષ')) AND ((t1.c0, t1.c0, t1.c1))))) DESC  NULLS LAST, (((((((t1.c0, t1.c1, t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c0, x'08', t1.c0, t1.c0, t1.c1)) AND ((t1.c1, 0.9886405154550119, t1.c0, t1.c0, t1.c0))))OR((((NULL, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1))))))AND((t1.c0 IN (t1.c0)))) ASC  NULLS LAST, ((SQLITE_COMPILEOPTION_GET(t1.c0))LIKE(t1.c1 COLLATE RTRIM)) ASC  NULLS LAST LIMIT 4;
SELECT * FROM t1 WHERE (((((((((((t1.c1) IS FALSE))AND(t1.c1 COLLATE RTRIM)))OR((((t1.c1, t1.c0, t1.c1, t1.c1))>((t1.c1, t1.c1, '
', t1.c0))))))OR((~ (t1.c1)))))OR(0.008666302743387755))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))/((((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))), ((t1.c0)||(t1.c0)) COLLATE NOCASE, json_patch(x'f6', ((t1.c1) NOT BETWEEN (t1.c1) AND (0.813171353942017)));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c1) IS FALSE))AND(t1.c1 COLLATE RTRIM)))OR((((t1.c1, t1.c0, t1.c1, t1.c1))>((t1.c1, t1.c1, '
', t1.c0))))))OR((~ (t1.c1)))))OR(0.008666302743387755))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))/((((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))), ((t1.c0)||(t1.c0)) COLLATE NOCASE, json_patch(x'f6', ((t1.c1) NOT BETWEEN (t1.c1) AND (0.813171353942017))) LIMIT 4;
SELECT * FROM t1 WHERE (((((((((((t1.c1) IS FALSE))AND(t1.c1 COLLATE RTRIM)))OR((((t1.c1, t1.c0, t1.c1, t1.c1))>((t1.c1, t1.c1, '
', t1.c0))))))OR((~ (t1.c1)))))OR(0.008666302743387755))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))/((((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))), ((t1.c0)||(t1.c0)) COLLATE NOCASE, json_patch(x'f6', ((t1.c1) NOT BETWEEN (t1.c1) AND (0.813171353942017)));
SELECT ALL * FROM t1 WHERE (((json_object(t1.c1, t1.c0, t1.c1)) ISNULL)) ORDER BY LOWER(t1.c0) COLLATE NOCASE ASC  NULLS FIRST, ((t1.c1) NOT BETWEEN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE NULL END) AND (((t1.c0)IS NOT(t1.c0)))), (~ ((t1.c0 IN (t1.c1)))) DESC;
SELECT DISTINCT * FROM t1 WHERE (((((json_object(t1.c1, t1.c0, t1.c1)) ISNULL))AND((~ (t1.c0))))) ORDER BY t1.c1 DESC LIMIT 0;
SELECT ALL * FROM t1 WHERE (((json_object(t1.c1, t1.c0, t1.c1)) ISNULL)) ORDER BY LOWER(t1.c0) COLLATE NOCASE ASC  NULLS FIRST, ((t1.c1) NOT BETWEEN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE NULL END) AND (((t1.c0)IS NOT(t1.c0)))), (~ ((t1.c0 IN (t1.c1)))) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((-1.696962722E9)<(t1.c0)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((NOT (((-1.696962722E9)<=(t1.c0)))))AND(t1.c1))) ORDER BY CASE WHEN ((t1.c0)IS(t1.c0)) THEN ((NULL) IS TRUE) ELSE t1.c0 COLLATE BINARY END LIMIT 1;
SELECT MAX(t1.c0) FROM t1 WHERE (NULL);
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((NULL)AND('-1193630816'))) ORDER BY (CAST(t1.c1 AS TEXT) IN (((t1.c1)GLOB(t1.c0)), ((t1.c0) IS FALSE))) ASC  NULLS FIRST, load_extension('-556476109', CASE 0Xffffffff968d6300  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE '328528232' END) DESC  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((SQLITE_VERSION() IN (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY t1.c0  NULLS FIRST, (((((t1.c0)) NOT BETWEEN ((x'39')) AND ((t1.c0)))) IS FALSE)  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((SQLITE_VERSION() IN (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY t1.c0  NULLS FIRST, (((((t1.c0)) NOT BETWEEN ((x'39')) AND ((t1.c0)))) IS FALSE)  NULLS LAST;
SELECT * FROM t1 WHERE (((x'ec')%(((0.6387364688490569)|(t1.c1)))));
SELECT * FROM t1 WHERE (((x'ec')%(((0.6387364688490569)|(t1.c1))))) INTERSECT SELECT ALL * FROM t1 WHERE ((- (0.047485998958155085)));
SELECT * FROM t1 WHERE (((x'ec')%(((0.6387364688490569)|(t1.c1)))));
SELECT * FROM t1 WHERE (((x'ec')%(((0.6387364688490569)|(t1.c1))))) INTERSECT SELECT ALL * FROM t1 WHERE ((- (0.047485998958155085)));
SELECT MAX(t1.c0) FROM t1 WHERE ((+ ((t1.c1 IN (t1.c0)))));
SELECT MAX(t1.c0) FROM t1 WHERE ((((+ ((t1.c1 IN (t1.c0)))))AND(LAST_INSERT_ROWID())));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (HEX((('') NOTNULL)));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (HEX((('') NOTNULL))) LIMIT 1 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST(((t1.c1)&(t1.c0)) AS TEXT)) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((((x'fa', t1.c1)) BETWEEN ((((((t1.c0)OR(t1.c0)))AND(t1.c0)), ((t1.c0)OR(t1.c0)))) AND (('xD[.\oE}l', ((t1.c0) IS FALSE)))));
SELECT * FROM t1 WHERE ((((x'fa', t1.c1)) BETWEEN ((((((t1.c0)OR(t1.c0)))AND(t1.c0)), ((t1.c0)OR(t1.c0)))) AND (('xD[.\oE}l', ((t1.c0) IS FALSE))))) ORDER BY (~ ((((t1.c1, 0.29255305623888683, t1.c1, t1.c0, t1.c1))>=((t1.c1, NULL, t1.c0, t1.c0, t1.c0))))), TRIM(((t1.c1)LIKE(t1.c0))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((x'fa', t1.c1)) BETWEEN ((((((t1.c0)OR(t1.c0)))AND(t1.c0)), ((t1.c0)OR(t1.c0)))) AND (('xD[.\oE}l', ((t1.c0) IS FALSE)))));
SELECT * FROM t1 WHERE ((((x'fa', t1.c1)) BETWEEN ((((((t1.c0)OR(t1.c0)))AND(t1.c0)), ((t1.c0)OR(t1.c0)))) AND (('xD[.\oE}l', ((t1.c0) IS FALSE))))) ORDER BY (~ ((((t1.c1, 0.29255305623888683, t1.c1, t1.c0, t1.c1))>=((t1.c1, NULL, t1.c0, t1.c0, t1.c0))))), TRIM(((t1.c1)LIKE(t1.c0))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((x'e6')>(t1.c1)))AND(NULL)))OR(((t1.c0)<<(t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((x'e6')>(t1.c1)))AND(NULL)))OR(((t1.c0)<<(t1.c0)))))AND((((t1.c0, t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0 COLLATE NOCASE, (NOT (t1.c0)), ((t1.c1) NOT NULL), ((t1.c1)==(t1.c1)))) AND (((('41683678')<(t1.c1)), ((t1.c0)IS(t1.c1)), ((((t1.c1)AND(t1.c1)))OR(t1.c1)), ((((t1.c0)AND(t1.c0)))OR(0.09234103295602414)))))))) ORDER BY (((t1.c1 IN ()))<<(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST, (+ ((- (t1.c0))))  NULLS FIRST LIMIT 0 INTERSECT SELECT COUNT(*) FROM t1 WHERE (CAST(((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)) AS REAL)) ORDER BY (((t1.c1 IN ()))<<(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST, (+ ((- (t1.c0))))  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY t1.c1, CASE ABS(DISTINCT t1.c1)  WHEN t1.c0 THEN '珓bWE[ !' END ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY t1.c1, CASE ABS(DISTINCT t1.c1)  WHEN t1.c0 THEN '珓bWE[ !' END ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE ((((((t1.c1)<(t1.c0)), ((t1.c0) NOTNULL)))>=((CAST(t1.c1 AS NUMERIC), CAST(t1.c0 AS BLOB))))) ORDER BY t1.c1, CASE ABS(DISTINCT t1.c1)  WHEN t1.c0 THEN '珓bWE[ !' END ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY t1.c1, CASE ABS(DISTINCT t1.c1)  WHEN t1.c0 THEN '珓bWE[ !' END ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY t1.c1, CASE ABS(DISTINCT t1.c1)  WHEN t1.c0 THEN '珓bWE[ !' END ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE ((((((t1.c1)<(t1.c0)), ((t1.c0) NOTNULL)))>=((CAST(t1.c1 AS NUMERIC), CAST(t1.c0 AS BLOB))))) ORDER BY t1.c1, CASE ABS(DISTINCT t1.c1)  WHEN t1.c0 THEN '珓bWE[ !' END ASC  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CASE t1.c0 COLLATE BINARY  WHEN (((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c0, t1.c0, t1.c1))) THEN ((((t1.c0)OR(t1.c1)))OR('T瓓~')) END) ORDER BY (((NOT (t1.c0))) ISNULL);
SELECT MIN(t1.c1) FROM t1 WHERE (((CASE t1.c0 COLLATE BINARY  WHEN (((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c0, t1.c0, t1.c1))) THEN ((((t1.c0)OR(t1.c1)))OR('T瓓~')) END)AND(((((((((((t1.c0)OR(x'9357fc')))OR(t1.c1)))OR(t1.c0)))AND(t1.c1))) BETWEEN ((((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, 0.4585385293633615)))) AND (json_array(t1.c1, t1.c0)))))) ORDER BY (((NOT (t1.c0))) ISNULL) INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (((((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))))<=((CHAR(t1.c1, t1.c0))))) ORDER BY (((NOT (t1.c0))) ISNULL);
SELECT ALL * FROM t1 WHERE (json(t1.c0 COLLATE BINARY));
SELECT DISTINCT * FROM t1 WHERE (((json(t1.c0 COLLATE BINARY))AND(((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND('-716591780'))))) ORDER BY CAST(CAST(t1.c0 AS BLOB) AS REAL) DESC  NULLS LAST, (('J%0' COLLATE BINARY) NOTNULL)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (json(t1.c0 COLLATE BINARY));
SELECT DISTINCT * FROM t1 WHERE (((json(t1.c0 COLLATE BINARY))AND(((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND('-716591780'))))) ORDER BY CAST(CAST(t1.c0 AS BLOB) AS REAL) DESC  NULLS LAST, (('J%0' COLLATE BINARY) NOTNULL)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY (((t1.c1 COLLATE RTRIM, (t1.c0 IN (0.4959904119436853))))==(((('') IS TRUE), (t1.c0 IN (t1.c1))))) DESC;
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(NULLIF(t1.c1 COLLATE NOCASE, t1.c0)))) ORDER BY ((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)) COLLATE BINARY  NULLS FIRST, 0Xffffffff8b01cd36 DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE CAST(t1.c1 AS TEXT)  WHEN ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)) THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) WHEN t1.c0 COLLATE BINARY THEN ((((t1.c1)AND(t1.c0)))AND(t1.c0)) WHEN (((t1.c1, t1.c0))<((t1.c1, t1.c1))) THEN ((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(t1.c0)) END) ORDER BY ((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)) COLLATE BINARY  NULLS FIRST, -1962816202 DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY (((t1.c1 COLLATE RTRIM, (t1.c0 IN (0.4959904119436853))))==(((('') IS TRUE), (t1.c0 IN (t1.c1))))) DESC;
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(NULLIF(t1.c1 COLLATE NOCASE, t1.c0)))) ORDER BY ((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)) COLLATE BINARY  NULLS FIRST, 0Xffffffff8b01cd36 DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE CAST(t1.c1 AS TEXT)  WHEN ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)) THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) WHEN t1.c0 COLLATE BINARY THEN ((((t1.c1)AND(t1.c0)))AND(t1.c0)) WHEN (((t1.c1, t1.c0))<((t1.c1, t1.c1))) THEN ((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(t1.c0)) END) ORDER BY ((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)) COLLATE BINARY  NULLS FIRST, -1962816202 DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(((((t1.c1)+(t1.c1)))IS NOT(CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))))) ORDER BY CAST(t1.c1 AS TEXT)  NULLS FIRST, CASE WHEN ((t1.c1) ISNULL) THEN ((t1.c0)||(t1.c0)) WHEN ((t1.c0) BETWEEN (x'67db') AND (t1.c1)) THEN ((t1.c1) NOT NULL) WHEN (((t1.c0, t1.c1))<((t1.c1, t1.c0))) THEN NULL COLLATE NOCASE WHEN x'be61' COLLATE NOCASE THEN t1.c0 END  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(((((t1.c1)+(t1.c1)))IS NOT(CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))))) ORDER BY CAST(t1.c1 AS TEXT)  NULLS FIRST, CASE WHEN ((t1.c1) ISNULL) THEN ((t1.c0)||(t1.c0)) WHEN ((t1.c0) BETWEEN (x'67db') AND (t1.c1)) THEN ((t1.c1) NOT NULL) WHEN (((t1.c0, t1.c1))<((t1.c1, t1.c0))) THEN NULL COLLATE NOCASE WHEN x'be61' COLLATE NOCASE THEN t1.c0 END  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY (((((x'40')) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) NOT NULL), CAST(LTRIM(t1.c0) AS INTEGER) ASC, CASE WHEN ((-1415981947)<<(t1.c1)) THEN ((t1.c0)||(NULL)) WHEN ((t1.c0) ISNULL) THEN t1.c1 ELSE x'e9' END LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY (((((x'40')) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) NOT NULL), CAST(LTRIM(t1.c0) AS INTEGER) ASC, CASE WHEN ((-1415981947)<<(t1.c1)) THEN ((t1.c0)||(NULL)) WHEN ((t1.c0) ISNULL) THEN t1.c1 ELSE x'e9' END LIMIT 0X0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CASE HEX(DISTINCT t1.c1)  WHEN ((NULL)%(t1.c1)) THEN TRIM(DISTINCT t1.c1, t1.c0) WHEN ((0.21714560063919042) NOTNULL) THEN CASE WHEN t1.c1 THEN NULL WHEN t1.c0 THEN x'' WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END ELSE t1.c0 END);
SELECT MAX(t1.c0) FROM t1 WHERE (CASE HEX(DISTINCT t1.c1)  WHEN ((NULL)%(t1.c1)) THEN TRIM(DISTINCT t1.c1, t1.c0) WHEN ((0.21714560063919042) NOTNULL) THEN CASE WHEN t1.c1 THEN NULL WHEN t1.c0 THEN x'' WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END ELSE t1.c0 END) LIMIT 0X0 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (((t1.c0)IS NOT(((t1.c0)OR(t1.c0))))) LIMIT 0;
SELECT * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) NOTNULL));
SELECT * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) NOTNULL)) ORDER BY (((t1.c0)) NOT BETWEEN (((t1.c0 IN (x'')))) AND ((t1.c0))) ASC  NULLS FIRST LIMIT 0x2 INTERSECT SELECT ALL * FROM t1 WHERE (CASE (((t1.c0, t1.c0, t1.c1))==((t1.c0, t1.c0, t1.c1)))  WHEN ((t1.c1) IS FALSE) THEN (((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c0))) WHEN ((t1.c0)AND(t1.c1)) THEN t1.c1 WHEN ((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)) THEN (t1.c0 IN ()) WHEN t1.c0 THEN t1.c1 COLLATE BINARY WHEN ABS(DISTINCT t1.c1) THEN ((t1.c1)<(t1.c1)) WHEN 'V' THEN ((t1.c0)OR(t1.c1)) WHEN t1.c0 COLLATE NOCASE THEN ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)) ELSE CAST(t1.c1 AS BLOB) END) ORDER BY (((t1.c0)) NOT BETWEEN (((t1.c0 IN (x'')))) AND ((t1.c0))) ASC  NULLS FIRST LIMIT 0x2;
SELECT * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) NOTNULL));
SELECT * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) NOTNULL)) ORDER BY (((t1.c0)) NOT BETWEEN (((t1.c0 IN (x'')))) AND ((t1.c0))) ASC  NULLS FIRST LIMIT 0x2 INTERSECT SELECT ALL * FROM t1 WHERE (CASE (((t1.c0, t1.c0, t1.c1))==((t1.c0, t1.c0, t1.c1)))  WHEN ((t1.c1) IS FALSE) THEN (((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c0))) WHEN ((t1.c0)AND(t1.c1)) THEN t1.c1 WHEN ((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)) THEN (t1.c0 IN ()) WHEN t1.c0 THEN t1.c1 COLLATE BINARY WHEN ABS(DISTINCT t1.c1) THEN ((t1.c1)<(t1.c1)) WHEN 'V' THEN ((t1.c0)OR(t1.c1)) WHEN t1.c0 COLLATE NOCASE THEN ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)) ELSE CAST(t1.c1 AS BLOB) END) ORDER BY (((t1.c0)) NOT BETWEEN (((t1.c0 IN (x'')))) AND ((t1.c0))) ASC  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t1 WHERE ('-742346749');
SELECT ALL * FROM t1 WHERE ('-742346749') ORDER BY CAST(CASE WHEN t1.c0 THEN 431259621 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END AS NUMERIC) DESC, t1.c0 DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE ('-742346749');
SELECT ALL * FROM t1 WHERE ('-742346749') ORDER BY CAST(CASE WHEN t1.c0 THEN 431259621 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END AS NUMERIC) DESC, t1.c0 DESC  NULLS FIRST LIMIT 1;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)!=(t1.c0))) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c0) ISNULL))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c0)!=(t1.c0))) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c0) ISNULL)))) ORDER BY COALESCE(DISTINCT CASE t1.c1  WHEN 0.3915821341883483 THEN t1.c1 END, t1.c0), (((((t1.c0)==(t1.c1))))==((CAST(t1.c0 AS INTEGER)))) ASC LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE (LOWER(t1.c0));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (LOWER(t1.c0)) ORDER BY LOWER(DISTINCT t1.c1 COLLATE RTRIM), t1.c0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((+ (t1.c0))) ORDER BY LOWER(DISTINCT t1.c1 COLLATE RTRIM), t1.c0;
SELECT * FROM t1 WHERE ((+ ((((((('Kt')OR(t1.c1)))OR(t1.c1)))AND(t1.c0))))) ORDER BY CASE WHEN t1.c0 THEN ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM t1 NOT INDEXED WHERE ((((+ ((((((('Kt')OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))))AND(CAST(t1.c1 AS TEXT)))) ORDER BY CASE WHEN t1.c0 THEN ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) END ASC  NULLS LAST LIMIT 4 INTERSECT SELECT * FROM t1 WHERE ((((-687481056)) NOT BETWEEN ((NULL)) AND ((((t1.c0)IS(t1.c1)))))) ORDER BY CASE WHEN t1.c0 THEN ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) END ASC  NULLS LAST LIMIT 0X4;
SELECT * FROM t1 WHERE ((+ ((((((('Kt')OR(t1.c1)))OR(t1.c1)))AND(t1.c0))))) ORDER BY CASE WHEN t1.c0 THEN ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM t1 NOT INDEXED WHERE ((((+ ((((((('Kt')OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))))AND(CAST(t1.c1 AS TEXT)))) ORDER BY CASE WHEN t1.c0 THEN ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) END ASC  NULLS LAST LIMIT 4 INTERSECT SELECT * FROM t1 WHERE ((((-687481056)) NOT BETWEEN ((NULL)) AND ((((t1.c0)IS(t1.c1)))))) ORDER BY CASE WHEN t1.c0 THEN ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) END ASC  NULLS LAST LIMIT 0X4;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((t1.c0, '853913989')) BETWEEN ((t1.c1, CAST(t1.c1 AS NUMERIC))) AND ((((((t1.c1)AND(t1.c0)))AND(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))));
SELECT MIN(t1.c1) FROM t1 WHERE ((((t1.c0, '853913989')) BETWEEN ((t1.c1, CAST(t1.c1 AS NUMERIC))) AND ((((((t1.c1)AND(t1.c0)))AND(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))) LIMIT 1 INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c1, -1.185874476E9))<((t1.c1, t1.c0))) IN ())) LIMIT 1;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((t1.c1 IN (0.16930222074271606)) COLLATE NOCASE);
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((t1.c1 IN (0.16930222074271606)) COLLATE NOCASE) INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((+ (NULL)));
SELECT * FROM t1 WHERE (CAST(((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1)) AS NUMERIC));
SELECT * FROM t1 WHERE (CAST(((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1)) AS NUMERIC)) ORDER BY ((((NOT (t1.c1)), t1.c0, ((t1.c0)*(t1.c0)), TRIM(DISTINCT t1.c0, t1.c0)))<((CASE WHEN t1.c0 THEN t1.c1 END, (+ (t1.c1)), 0.6922439158060547, t1.c0 COLLATE BINARY))) ASC  NULLS LAST, CHAR(((t1.c1) IS FALSE), (+ (t1.c0))) INTERSECT SELECT ALL * FROM t1 WHERE (x'') ORDER BY ((((NOT (t1.c1)), t1.c0, ((t1.c0)*(t1.c0)), TRIM(DISTINCT t1.c0, t1.c0)))<((CASE WHEN t1.c0 THEN t1.c1 END, (+ (t1.c1)), 0.6922439158060547, t1.c0 COLLATE BINARY))) ASC  NULLS LAST, CHAR(((t1.c1) IS FALSE), (+ (t1.c0)));
SELECT * FROM t1 WHERE (CAST(((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1)) AS NUMERIC));
SELECT * FROM t1 WHERE (CAST(((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1)) AS NUMERIC)) ORDER BY ((((NOT (t1.c1)), t1.c0, ((t1.c0)*(t1.c0)), TRIM(DISTINCT t1.c0, t1.c0)))<((CASE WHEN t1.c0 THEN t1.c1 END, (+ (t1.c1)), 0.6922439158060547, t1.c0 COLLATE BINARY))) ASC  NULLS LAST, CHAR(((t1.c1) IS FALSE), (+ (t1.c0))) INTERSECT SELECT ALL * FROM t1 WHERE (x'') ORDER BY ((((NOT (t1.c1)), t1.c0, ((t1.c0)*(t1.c0)), TRIM(DISTINCT t1.c0, t1.c0)))<((CASE WHEN t1.c0 THEN t1.c1 END, (+ (t1.c1)), 0.6922439158060547, t1.c0 COLLATE BINARY))) ASC  NULLS LAST, CHAR(((t1.c1) IS FALSE), (+ (t1.c0)));
SELECT ALL * FROM t1 WHERE (((((((t1.c1)OR(t1.c1)))OR(t1.c1))) BETWEEN (408851858) AND (LIKE(t1.c0, 0.33809697273420614, '-'))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1)OR(t1.c1)))OR(t1.c1))) BETWEEN (0x185e9592) AND (LIKE(t1.c0, 0.33809697273420614, '-'))));
SELECT ALL * FROM t1 WHERE (((((((t1.c1)OR(t1.c1)))OR(t1.c1))) BETWEEN (408851858) AND (LIKE(t1.c0, 0.33809697273420614, '-'))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1)OR(t1.c1)))OR(t1.c1))) BETWEEN (0x185e9592) AND (LIKE(t1.c0, 0.33809697273420614, '-'))));
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1) IS FALSE) AS BLOB)) ORDER BY ((((((((t1.c1)OR(x'31')))AND(t1.c1)))OR(t1.c0)))OR(t1.c0)) COLLATE NOCASE DESC  NULLS LAST, load_extension(t1.c1) COLLATE NOCASE ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c1) IS FALSE) AS BLOB))AND((IFNULL(t1.c0, t1.c0) IN ())))) ORDER BY (NOT (t1.c1 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1) IS FALSE) AS BLOB)) ORDER BY ((((((((t1.c1)OR(x'31')))AND(t1.c1)))OR(t1.c0)))OR(t1.c0)) COLLATE NOCASE DESC  NULLS LAST, load_extension(t1.c1) COLLATE NOCASE ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c1) IS FALSE) AS BLOB))AND((IFNULL(t1.c0, t1.c0) IN ())))) ORDER BY (NOT (t1.c1 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ('') ORDER BY (IFNULL(DISTINCT t1.c0, t1.c1) IN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN -1.7976931348623157E308 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN '746764591' THEN t1.c1 END))  NULLS LAST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ('') ORDER BY (IFNULL(DISTINCT t1.c0, t1.c1) IN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN -1.7976931348623157E308 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN '746764591' THEN t1.c1 END))  NULLS LAST LIMIT 1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c1 COLLATE BINARY) IS FALSE)) ORDER BY (((NULL, (~ (t1.c1))))<=(((((('3d7/5uw)')AND(t1.c1)))AND(t1.c1)), CAST(t1.c1 AS INTEGER)))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c1 COLLATE BINARY) IS FALSE))AND(((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))>=(t1.c1))))) ORDER BY (((t1.c1 IN ())) NOTNULL) ASC, ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN x'a5' THEN t1.c0 END)*(((((x'44')OR(t1.c0)))AND(t1.c1)))) ASC  NULLS LAST INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) AS BLOB)) ORDER BY (((t1.c1 IN ())) NOTNULL) ASC, ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN x'a5' THEN t1.c0 END)*(((((x'44')OR(t1.c0)))AND(t1.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) IS FALSE));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1 COLLATE NOCASE) IS FALSE))AND(NULL)));
SELECT ALL * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) IS FALSE));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1 COLLATE NOCASE) IS FALSE))AND(NULL)));
SELECT MAX(t1.c1) FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)||(t1.c0 COLLATE BINARY))) ORDER BY (('260994655' COLLATE RTRIM)>(((t1.c1)/(t1.c0))))  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)||(t1.c0 COLLATE BINARY)))AND(CAST(t1.c0 COLLATE RTRIM AS TEXT)))) ORDER BY (('260994655' COLLATE RTRIM)>(((t1.c1)/(t1.c0))))  NULLS LAST INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((((t1.c1)>>(t1.c1)))OR(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(x'')))))OR((NOT (t1.c0)))))OR((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0)))))) ORDER BY (('260994655' COLLATE RTRIM)>(((t1.c1)/(t1.c0))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c0)OR(((((t1.c0)OR(t1.c1)))AND(t1.c1)))))OR(((t1.c1) IS FALSE)))) ORDER BY UPPER(DISTINCT t1.c1), ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (LIKE(t1.c1, t1.c0)) AND ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((t1.c0)OR(((((t1.c0)OR(t1.c1)))AND(t1.c1)))))OR(((t1.c1) IS FALSE))))AND(CAST(TRIM(DISTINCT t1.c1, t1.c1) AS NUMERIC)))) ORDER BY x'e011ed'  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((((t1.c1)%(t1.c0)))AND((-944595804 IN (0.7244463187111663))))) ORDER BY x'e011ed'  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c0)OR(((((t1.c0)OR(t1.c1)))AND(t1.c1)))))OR(((t1.c1) IS FALSE)))) ORDER BY UPPER(DISTINCT t1.c1), ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (LIKE(t1.c1, t1.c0)) AND ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((t1.c0)OR(((((t1.c0)OR(t1.c1)))AND(t1.c1)))))OR(((t1.c1) IS FALSE))))AND(CAST(TRIM(DISTINCT t1.c1, t1.c1) AS NUMERIC)))) ORDER BY x'e011ed'  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((((t1.c1)%(t1.c0)))AND((-944595804 IN (0.7244463187111663))))) ORDER BY x'e011ed'  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE ((((t1.c1, t1.c1)) NOT BETWEEN ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, (+ (t1.c0)))) AND (((~ (t1.c0)), ((((((((x'75')AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))))) ORDER BY (0.7960258449854591 IN (((((((((t1.c1)AND(t1.c0)))AND(1225159206)))OR(t1.c1)))OR(t1.c1))))  NULLS LAST, ((((((-1357763336, t1.c1))<>((t1.c0, x'')))))=(((- (t1.c0)))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((t1.c1, t1.c1)) NOT BETWEEN ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, (+ (t1.c0)))) AND (((~ (t1.c0)), ((((((((x'75')AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR(t1.c1))))))AND(((((((((t1.c0)AND('[78''Xu>xJ')))OR(((t1.c0)<<(t1.c1)))))OR((- (t1.c0)))))AND(CAST(t1.c0 AS TEXT)))))) ORDER BY t1.c0 ASC  NULLS LAST INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (x'b14e72') ORDER BY t1.c0 ASC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (NULL);
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((NULL)AND(CASE CASE 'yUVAc?'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END  WHEN ((0.7685134178320165) IS TRUE) THEN (- (t1.c0)) WHEN CAST(t1.c0 AS TEXT) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN load_extension(t1.c0) WHEN t1.c1 COLLATE BINARY THEN t1.c0 END)));
SELECT ALL * FROM t1 WHERE (((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1))) NOT BETWEEN ((t1.c0 IN (t1.c1))) AND (t1.c0 COLLATE RTRIM)));
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1))) NOT BETWEEN ((t1.c0 IN (t1.c1))) AND (t1.c0 COLLATE RTRIM)))AND((((((t1.c1)IS NOT(t1.c1)), (t1.c0 IN (t1.c1))))<=((CASE WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c0 WHEN t1.c1 THEN t1.c1 END, (- (t1.c0)))))))) ORDER BY CASE NULL  WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END THEN ((t1.c1) IS FALSE) END DESC LIMIT 0X3 INTERSECT SELECT * FROM t1 WHERE ((((CAST(t1.c0 AS TEXT), CAST('/#' AS BLOB)))!=((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, ((((t1.c0)AND(t1.c0)))AND(t1.c1)))))) ORDER BY CASE NULL  WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END THEN ((t1.c1) IS FALSE) END DESC LIMIT 0X3;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1))) NOT BETWEEN ((t1.c0 IN (t1.c1))) AND (t1.c0 COLLATE RTRIM)));
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1))) NOT BETWEEN ((t1.c0 IN (t1.c1))) AND (t1.c0 COLLATE RTRIM)))AND((((((t1.c1)IS NOT(t1.c1)), (t1.c0 IN (t1.c1))))<=((CASE WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c0 WHEN t1.c1 THEN t1.c1 END, (- (t1.c0)))))))) ORDER BY CASE NULL  WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END THEN ((t1.c1) IS FALSE) END DESC LIMIT 0X3 INTERSECT SELECT * FROM t1 WHERE ((((CAST(t1.c0 AS TEXT), CAST('/#' AS BLOB)))!=((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, ((((t1.c0)AND(t1.c0)))AND(t1.c1)))))) ORDER BY CASE NULL  WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END THEN ((t1.c1) IS FALSE) END DESC LIMIT 0X3;
SELECT ALL * FROM t1 WHERE (CAST(x'469a6e' AS TEXT));
SELECT * FROM t1 WHERE (((CAST(x'469a6e' AS TEXT))AND((IFNULL(t1.c0, t1.c0) IN ())))) ORDER BY (((t1.c1, t1.c0)) NOT BETWEEN ((((t1.c1) NOT BETWEEN (NULL) AND ('1425439286')), t1.c0 COLLATE BINARY)) AND ((CAST(t1.c0 AS BLOB), STRFTIME(t1.c1, t1.c0, t1.c0, t1.c0)))) DESC  NULLS FIRST, ((((((((t1.c0 COLLATE BINARY)AND((t1.c1 IN ()))))OR(CAST(t1.c0 AS REAL))))AND(t1.c1 COLLATE RTRIM)))AND(LIKELY(DISTINCT t1.c0))) DESC, ((((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))OR(((0.09678045091811915) IS TRUE))))AND(((t1.c0)/(t1.c0)))), (NOT (((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (CAST(x'469a6e' AS TEXT));
SELECT * FROM t1 WHERE (((CAST(x'469a6e' AS TEXT))AND((IFNULL(t1.c0, t1.c0) IN ())))) ORDER BY (((t1.c1, t1.c0)) NOT BETWEEN ((((t1.c1) NOT BETWEEN (NULL) AND ('1425439286')), t1.c0 COLLATE BINARY)) AND ((CAST(t1.c0 AS BLOB), STRFTIME(t1.c1, t1.c0, t1.c0, t1.c0)))) DESC  NULLS FIRST, ((((((((t1.c0 COLLATE BINARY)AND((t1.c1 IN ()))))OR(CAST(t1.c0 AS REAL))))AND(t1.c1 COLLATE RTRIM)))AND(LIKELY(DISTINCT t1.c0))) DESC, ((((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))OR(((0.09678045091811915) IS TRUE))))AND(((t1.c0)/(t1.c0)))), (NOT (((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))) LIMIT 0X0;
SELECT MIN(t1.c1) FROM t1 WHERE (CASE WHEN t1.c1 THEN 0.25168017527308173 WHEN NULL THEN t1.c0 END COLLATE BINARY) ORDER BY ((CAST(t1.c0 AS INTEGER))%(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS LAST, ((-1671112748) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN ' |~Xq' THEN t1.c1 ELSE t1.c0 END) AND ((((t1.c1, t1.c0))>((t1.c1, t1.c1)))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CASE WHEN t1.c1 THEN 0.25168017527308173 WHEN NULL THEN t1.c0 END COLLATE BINARY) ORDER BY ((CAST(t1.c0 AS INTEGER))%(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS LAST, ((0xffffffff9c64d7d4) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN ' |~Xq' THEN t1.c1 ELSE t1.c0 END) AND ((((t1.c1, t1.c0))>((t1.c1, t1.c1)))));
SELECT * FROM t1 WHERE (1921494191) ORDER BY ((t1.c0 COLLATE BINARY)GLOB(((t1.c1) IS FALSE))), '-202756269'  NULLS LAST, (((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((((((0xffffffffe7b0d743)AND(0.2019128857057767)))AND(t1.c0)))OR(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, CAST(t1.c0 AS TEXT))) AND ((((t1.c1) NOT NULL), ((((t1.c1)OR(t1.c1)))AND(t1.c0)), 0.4915699893131751, NULLIF(DISTINCT 0.49006341507571305, t1.c1), ((t1.c0) ISNULL)))) DESC;
SELECT DISTINCT * FROM t1 WHERE (1921494191) ORDER BY ((t1.c0 COLLATE BINARY)GLOB(((t1.c1) IS FALSE))), '-202756269'  NULLS LAST, (((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((((((0xffffffffe7b0d743)AND(0.2019128857057767)))AND(t1.c0)))OR(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, CAST(t1.c0 AS TEXT))) AND ((((t1.c1) NOT NULL), ((((t1.c1)OR(t1.c1)))AND(t1.c0)), 0.4915699893131751, NULLIF(DISTINCT 0.49006341507571305, t1.c1), ((t1.c0) ISNULL)))) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CHANGES()) ORDER BY ((t1.c0 COLLATE BINARY)GLOB(((t1.c1) IS FALSE))), '-202756269'  NULLS LAST, (((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((((((0Xffffffffe7b0d743)AND(0.2019128857057767)))AND(t1.c0)))OR(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, CAST(t1.c0 AS TEXT))) AND ((((t1.c1) NOT NULL), ((((t1.c1)OR(t1.c1)))AND(t1.c0)), 0.4915699893131751, NULLIF(DISTINCT 0.49006341507571305, t1.c1), ((t1.c0) ISNULL)))) DESC LIMIT 0x0;
SELECT * FROM t1 WHERE (1921494191) ORDER BY ((t1.c0 COLLATE BINARY)GLOB(((t1.c1) IS FALSE))), '-202756269'  NULLS LAST, (((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((((((0xffffffffe7b0d743)AND(0.2019128857057767)))AND(t1.c0)))OR(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, CAST(t1.c0 AS TEXT))) AND ((((t1.c1) NOT NULL), ((((t1.c1)OR(t1.c1)))AND(t1.c0)), 0.4915699893131751, NULLIF(DISTINCT 0.49006341507571305, t1.c1), ((t1.c0) ISNULL)))) DESC;
SELECT DISTINCT * FROM t1 WHERE (1921494191) ORDER BY ((t1.c0 COLLATE BINARY)GLOB(((t1.c1) IS FALSE))), '-202756269'  NULLS LAST, (((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((((((0xffffffffe7b0d743)AND(0.2019128857057767)))AND(t1.c0)))OR(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, CAST(t1.c0 AS TEXT))) AND ((((t1.c1) NOT NULL), ((((t1.c1)OR(t1.c1)))AND(t1.c0)), 0.4915699893131751, NULLIF(DISTINCT 0.49006341507571305, t1.c1), ((t1.c0) ISNULL)))) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CHANGES()) ORDER BY ((t1.c0 COLLATE BINARY)GLOB(((t1.c1) IS FALSE))), '-202756269'  NULLS LAST, (((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((((((0Xffffffffe7b0d743)AND(0.2019128857057767)))AND(t1.c0)))OR(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, CAST(t1.c0 AS TEXT))) AND ((((t1.c1) NOT NULL), ((((t1.c1)OR(t1.c1)))AND(t1.c0)), 0.4915699893131751, NULLIF(DISTINCT 0.49006341507571305, t1.c1), ((t1.c0) ISNULL)))) DESC LIMIT 0x0;
SELECT * FROM t1 WHERE (NULL);
SELECT * FROM t1 WHERE (NULL) LIMIT 1;
SELECT * FROM t1 WHERE (NULL);
SELECT * FROM t1 WHERE (NULL) LIMIT 1;
SELECT MIN(t1.c0) FROM t1 WHERE (t1.c0) ORDER BY (t1.c1 IN ()) DESC  NULLS FIRST, ((NULLIF(DISTINCT '6,', t1.c0))/(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((t1.c0)AND((((ROUND(t1.c0, t1.c1), CAST(t1.c1 AS NUMERIC), t1.c1 COLLATE BINARY))>((CAST(t1.c0 AS TEXT), t1.c0 COLLATE BINARY, ((t1.c1)+(t1.c0)))))))) ORDER BY (t1.c1 IN ()) DESC  NULLS FIRST, ((NULLIF(DISTINCT '6,', t1.c0))/(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST((NOT (t1.c1)) AS NUMERIC)) ORDER BY (((((((((NOT (x'91f6')))OR(ABS(t1.c0))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(x''))  NULLS FIRST, 468431451 ASC;
SELECT DISTINCT * FROM t1 WHERE (((CAST((NOT (t1.c1)) AS NUMERIC))AND(CASE ((t1.c1) IS TRUE)  WHEN CHANGES() THEN CAST(t1.c1 AS NUMERIC) WHEN (- (x'4a1dfd')) THEN ABS(DISTINCT t1.c0) WHEN ((t1.c0) ISNULL) THEN t1.c1 COLLATE NOCASE END))) ORDER BY (((t1.c1 IN (t1.c0)))<(((t1.c1) IS FALSE))) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (CAST((NOT (t1.c1)) AS NUMERIC)) ORDER BY (((((((((NOT (x'91f6')))OR(ABS(t1.c0))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(x''))  NULLS FIRST, 468431451 ASC;
SELECT MIN(t1.c1) FROM t1 WHERE (((t1.c0) BETWEEN (((t1.c1)<>('6C{d'))) AND (SQLITE_COMPILEOPTION_GET(t1.c1)))) ORDER BY CAST(((x'')IS NOT('b雙')) AS NUMERIC) DESC, (((((((t1.c0))<>((t1.c0))))AND(((((t1.c0)OR(t1.c0)))AND(t1.c1)))))OR(x'')) ASC  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c0) BETWEEN (((t1.c1)!=('6C{d'))) AND (SQLITE_COMPILEOPTION_GET(t1.c1))))AND(CASE WHEN ((t1.c0)>=(t1.c1)) THEN ((t1.c1) IS FALSE) WHEN ((t1.c1) NOTNULL) THEN ((t1.c0)!=('224413799')) WHEN IFNULL(t1.c0, t1.c0) THEN (t1.c1 IN ()) WHEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN ((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)) ELSE (((t1.c0, t1.c0, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, x'd2', t1.c0, NULL, t1.c1)) AND ((t1.c1, t1.c0, t1.c0, x'4d', t1.c1))) END))) ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN (('3,q&g0')||(t1.c0)) WHEN (NOT (t1.c1)) THEN '-164216375' END ASC INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (NULLIF(DISTINCT (t1.c1 IN ()), ((t1.c1)>(t1.c0)))) ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN (('3,q&g0')||(t1.c0)) WHEN (NOT (t1.c1)) THEN '-164216375' END ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (((COALESCE(t1.c1, NULL, t1.c1, t1.c0, t1.c0, t1.c1, t1.c0, t1.c1)) IS FALSE));
SELECT COUNT(*) FROM t1 WHERE (((((COALESCE(t1.c1, NULL, t1.c1, t1.c0, t1.c0, t1.c1, t1.c0, t1.c1)) IS FALSE))AND((((t1.c1)) NOT BETWEEN (((((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))))) AND (((t1.c1 IN ()))))))) ORDER BY ((((((((t1.c1)>=(t1.c0)))AND(t1.c1)))OR((t1.c1 IN ()))))OR(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))  NULLS LAST LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c0 IN ())) ORDER BY ((((((((t1.c1)>=(t1.c0)))AND(t1.c1)))OR((t1.c1 IN ()))))OR(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ()))>=((((t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c1))))));
SELECT ALL * FROM t1 WHERE ((((((t1.c0 IN ()))>=((((t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c1))))))AND((((t1.c1 COLLATE NOCASE, ((t1.c1) NOTNULL), ((0.471819136737345)==(t1.c0)), ((t1.c0)GLOB(t1.c0)), (- (t1.c0)), t1.c0 COLLATE NOCASE))<=(((- (t1.c0)), ((NULL) NOTNULL), NULL COLLATE NOCASE, (('5䡋૞ICxH?+')>(t1.c1)), 'EO	ᘛ', ((t1.c1)IS NOT(t1.c1)))))))) ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))) BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) AND (t1.c1)), ((t1.c1) BETWEEN ('') AND (((t1.c1) BETWEEN (t1.c0) AND (x'20')))) LIMIT 0x1 INTERSECT SELECT ALL * FROM t1 WHERE (((((((t1.c1) NOTNULL))OR(CASE WHEN t1.c0 THEN t1.c1 END)))AND(((((t1.c0)OR(t1.c0)))AND(t1.c1))))) ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))) BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) AND (t1.c1)), ((t1.c1) BETWEEN ('') AND (((t1.c1) BETWEEN (t1.c0) AND (x'20')))) LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ()))>=((((t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c1))))));
SELECT ALL * FROM t1 WHERE ((((((t1.c0 IN ()))>=((((t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c1))))))AND((((t1.c1 COLLATE NOCASE, ((t1.c1) NOTNULL), ((0.471819136737345)==(t1.c0)), ((t1.c0)GLOB(t1.c0)), (- (t1.c0)), t1.c0 COLLATE NOCASE))<=(((- (t1.c0)), ((NULL) NOTNULL), NULL COLLATE NOCASE, (('5䡋૞ICxH?+')>(t1.c1)), 'EO	ᘛ', ((t1.c1)IS NOT(t1.c1)))))))) ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))) BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) AND (t1.c1)), ((t1.c1) BETWEEN ('') AND (((t1.c1) BETWEEN (t1.c0) AND (x'20')))) LIMIT 0x1 INTERSECT SELECT ALL * FROM t1 WHERE (((((((t1.c1) NOTNULL))OR(CASE WHEN t1.c0 THEN t1.c1 END)))AND(((((t1.c0)OR(t1.c0)))AND(t1.c1))))) ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))) BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) AND (t1.c1)), ((t1.c1) BETWEEN ('') AND (((t1.c1) BETWEEN (t1.c0) AND (x'20')))) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN TRIM(t1.c0) THEN (t1.c1 IN ()) WHEN ((t1.c0)>=(t1.c1)) THEN ((t1.c1) IS FALSE) END) ORDER BY ((UPPER(t1.c1))!=(CAST(t1.c1 AS REAL))) ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (CASE WHEN TRIM(t1.c0) THEN (t1.c1 IN ()) WHEN ((t1.c0)=(t1.c1)) THEN ((t1.c1) IS FALSE) END) ORDER BY ((UPPER(t1.c1))!=(CAST(t1.c1 AS REAL))) ASC LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((((t1.c1)&(t1.c0)) IN ((t1.c0 IN ())))) ORDER BY t1.c0;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1)&(t1.c0)) IN ((t1.c0 IN ())))) ORDER BY (NOT (CASE t1.c0  WHEN t1.c1 THEN NULL END)), HEX(DISTINCT (~ (t1.c1)))  NULLS FIRST, JULIANDAY((((t1.c1, t1.c0, t1.c1, t1.c1))<>((t1.c1, t1.c1, t1.c0, t1.c1))), t1.c1 COLLATE NOCASE, CAST(t1.c1 AS INTEGER), ((NULL) BETWEEN (t1.c1) AND (t1.c0)), t1.c0, (t1.c1 IN (t1.c1)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN x'56c5a800fca8f1' WHEN t1.c1 THEN 'L3' END) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)AND(t1.c0)))AND(t1.c0)) COLLATE BINARY) ORDER BY (NOT (CASE t1.c0  WHEN t1.c1 THEN NULL END)), HEX(DISTINCT (~ (t1.c1)))  NULLS FIRST, JULIANDAY((((t1.c1, t1.c0, t1.c1, t1.c1))<>((t1.c1, t1.c1, t1.c0, t1.c1))), t1.c1 COLLATE NOCASE, CAST(t1.c1 AS INTEGER), ((NULL) BETWEEN (t1.c1) AND (t1.c0)), t1.c0, (t1.c1 IN (t1.c1)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN x'56c5a800fca8f1' WHEN t1.c1 THEN 'L3' END) LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((t1.c1)&(t1.c0)) IN ((t1.c0 IN ())))) ORDER BY t1.c0;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1)&(t1.c0)) IN ((t1.c0 IN ())))) ORDER BY (NOT (CASE t1.c0  WHEN t1.c1 THEN NULL END)), HEX(DISTINCT (~ (t1.c1)))  NULLS FIRST, JULIANDAY((((t1.c1, t1.c0, t1.c1, t1.c1))<>((t1.c1, t1.c1, t1.c0, t1.c1))), t1.c1 COLLATE NOCASE, CAST(t1.c1 AS INTEGER), ((NULL) BETWEEN (t1.c1) AND (t1.c0)), t1.c0, (t1.c1 IN (t1.c1)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN x'56c5a800fca8f1' WHEN t1.c1 THEN 'L3' END) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)AND(t1.c0)))AND(t1.c0)) COLLATE BINARY) ORDER BY (NOT (CASE t1.c0  WHEN t1.c1 THEN NULL END)), HEX(DISTINCT (~ (t1.c1)))  NULLS FIRST, JULIANDAY((((t1.c1, t1.c0, t1.c1, t1.c1))<>((t1.c1, t1.c1, t1.c0, t1.c1))), t1.c1 COLLATE NOCASE, CAST(t1.c1 AS INTEGER), ((NULL) BETWEEN (t1.c1) AND (t1.c0)), t1.c0, (t1.c1 IN (t1.c1)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN x'56c5a800fca8f1' WHEN t1.c1 THEN 'L3' END) LIMIT 1;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((NOT (((t1.c0) ISNULL)))) ORDER BY CAST(((t1.c0)GLOB(t1.c0)) AS NUMERIC) DESC  NULLS LAST, (t1.c1 IN (((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(t1.c1))))  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((NOT (((t1.c0) ISNULL))))AND(CAST(((((((t1.c1)AND(t1.c1)))AND(0.01328935622594718)))OR(t1.c1)) AS BLOB)))) ORDER BY (((NOT (t1.c0)))*(CAST(t1.c0 AS INTEGER)))  NULLS FIRST, CAST(t1.c1 AS REAL) COLLATE BINARY ASC INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))|(((t1.c1) NOT NULL)))) ORDER BY (((NOT (t1.c0)))*(CAST(t1.c0 AS INTEGER)))  NULLS FIRST, CAST(t1.c1 AS REAL) COLLATE BINARY ASC;
SELECT * FROM t1 WHERE ((((~ (t1.c0)))IS NOT(LIKELY(DISTINCT t1.c1))));
SELECT DISTINCT * FROM t1 WHERE ((((~ (t1.c0)))IS NOT(LIKELY(DISTINCT t1.c1))));
SELECT * FROM t1 WHERE ((((~ (t1.c0)))IS NOT(LIKELY(DISTINCT t1.c1))));
SELECT DISTINCT * FROM t1 WHERE ((((~ (t1.c0)))IS NOT(LIKELY(DISTINCT t1.c1))));
SELECT ALL * FROM t1 WHERE (TRIM((t1.c1 IN (t1.c0)), t1.c1 COLLATE BINARY)) ORDER BY ((NULLIF(DISTINCT t1.c0, t1.c0))>=(((t1.c1)IS NOT(t1.c1))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((TRIM((t1.c1 IN (t1.c0)), t1.c1 COLLATE BINARY))AND((((TYPEOF(x'1601')))>((((t1.c0) NOT NULL))))))) ORDER BY (+ ((t1.c1 IN ()))), t1.c0 DESC  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (((json_extract(t1.c1, t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((x'', t1.c0)))) AND ((((t1.c1, t1.c0))!=((t1.c0, '-841008926')))))) ORDER BY (+ ((t1.c1 IN ()))), t1.c0 DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (TRIM((t1.c1 IN (t1.c0)), t1.c1 COLLATE BINARY)) ORDER BY ((NULLIF(DISTINCT t1.c0, t1.c0))>=(((t1.c1)IS NOT(t1.c1))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((TRIM((t1.c1 IN (t1.c0)), t1.c1 COLLATE BINARY))AND((((TYPEOF(x'1601')))>((((t1.c0) NOT NULL))))))) ORDER BY (+ ((t1.c1 IN ()))), t1.c0 DESC  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (((json_extract(t1.c1, t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((x'', t1.c0)))) AND ((((t1.c1, t1.c0))!=((t1.c0, '-841008926')))))) ORDER BY (+ ((t1.c1 IN ()))), t1.c0 DESC  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE (((CAST('0.09666087167780257' AS INTEGER))-(CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN '' ELSE t1.c0 END)));
SELECT MIN(t1.c0) FROM t1 WHERE (((((CAST('0.09666087167780257' AS INTEGER))-(CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN '' ELSE t1.c0 END)))AND(((CAST(t1.c0 AS REAL)) NOT BETWEEN ((~ (t1.c0))) AND (((t1.c0)LIKE('0.07751689649021953')))))));
SELECT * FROM t1 WHERE (((- (t1.c0)) IN ((((t1.c1, t1.c0, t1.c1))==((t1.c1, t1.c1, t1.c1))))));
SELECT * FROM t1 WHERE (((- (t1.c0)) IN ((((t1.c1, t1.c0, t1.c1))==((t1.c1, t1.c1, t1.c1)))))) LIMIT 2;
SELECT * FROM t1 WHERE (((- (t1.c0)) IN ((((t1.c1, t1.c0, t1.c1))==((t1.c1, t1.c1, t1.c1))))));
SELECT * FROM t1 WHERE (((- (t1.c0)) IN ((((t1.c1, t1.c0, t1.c1))==((t1.c1, t1.c1, t1.c1)))))) LIMIT 2;
SELECT ALL COUNT(*) FROM t1 WHERE ((((+ (t1.c0)))IS(((t1.c1) IS FALSE)))) ORDER BY ((((((((((t1.c1)/(t1.c0)))AND(((t1.c1) NOT BETWEEN (t1.c1) AND (1445050126)))))AND(TRIM(DISTINCT t1.c1, t1.c1))))AND((~ (t1.c1)))))OR(CAST(t1.c0 AS BLOB)))  NULLS LAST, (((+ (t1.c1))) BETWEEN (t1.c0) AND (TYPEOF(DISTINCT t1.c1)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((+ (t1.c0)))IS(((t1.c1) IS FALSE))))AND((((((x'd978')) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))%(((t1.c1) BETWEEN (t1.c1) AND ('*R'))))))) ORDER BY ((((((((((t1.c1)/(t1.c0)))AND(((t1.c1) NOT BETWEEN (t1.c1) AND (1445050126)))))AND(TRIM(DISTINCT t1.c1, t1.c1))))AND((~ (t1.c1)))))OR(CAST(t1.c0 AS BLOB)))  NULLS LAST, (((+ (t1.c1))) BETWEEN (t1.c0) AND (TYPEOF(DISTINCT t1.c1))) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE (x'e23a') ORDER BY (((((+ (t1.c1)))OR((+ (t1.c1)))))OR((t1.c0 IN (t1.c0))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (x'e23a') ORDER BY (((((+ (t1.c1)))OR((+ (t1.c1)))))OR((t1.c0 IN (t1.c0))))  NULLS FIRST;
SELECT * FROM t1 WHERE (NULL);
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND(LTRIM((NOT (t1.c1))))));
SELECT * FROM t1 WHERE (NULL);
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND(LTRIM((NOT (t1.c1))))));
SELECT * FROM t1 WHERE ((((((t1.c1, t1.c0)) NOT BETWEEN (('-757210356', t1.c0)) AND ((t1.c1, t1.c1))))<<(((t1.c0)==(t1.c1))))) ORDER BY CAST(HEX(t1.c0) AS INTEGER), ((((t1.c0 IN (t1.c1))))==((ABS(DISTINCT t1.c1)))) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1, t1.c0)) NOT BETWEEN (('-757210356', t1.c0)) AND ((t1.c1, t1.c1))))<<(((t1.c0)=(t1.c1)))))AND((((t1.c1, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (x'77cf')), t1.c1, t1.c1, DATETIME(t1.c1, t1.c1, t1.c0, t1.c0, t1.c1, t1.c1, t1.c0, t1.c1))) AND ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END, ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), t1.c1 COLLATE BINARY, CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN 0.6983331272197816 ELSE 'U' END)))))) ORDER BY CAST(HEX(t1.c0) AS INTEGER), ((((t1.c0 IN (t1.c1))))=((ABS(DISTINCT t1.c1)))) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((LIKELY(DISTINCT t1.c1)) ISNULL)) ORDER BY CAST(HEX(t1.c0) AS INTEGER), ((((t1.c0 IN (t1.c1))))==((ABS(DISTINCT t1.c1)))) ASC;
SELECT * FROM t1 WHERE ((((((t1.c1, t1.c0)) NOT BETWEEN (('-757210356', t1.c0)) AND ((t1.c1, t1.c1))))<<(((t1.c0)==(t1.c1))))) ORDER BY CAST(HEX(t1.c0) AS INTEGER), ((((t1.c0 IN (t1.c1))))==((ABS(DISTINCT t1.c1)))) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1, t1.c0)) NOT BETWEEN (('-757210356', t1.c0)) AND ((t1.c1, t1.c1))))<<(((t1.c0)=(t1.c1)))))AND((((t1.c1, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (x'77cf')), t1.c1, t1.c1, DATETIME(t1.c1, t1.c1, t1.c0, t1.c0, t1.c1, t1.c1, t1.c0, t1.c1))) AND ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END, ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), t1.c1 COLLATE BINARY, CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN 0.6983331272197816 ELSE 'U' END)))))) ORDER BY CAST(HEX(t1.c0) AS INTEGER), ((((t1.c0 IN (t1.c1))))=((ABS(DISTINCT t1.c1)))) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((LIKELY(DISTINCT t1.c1)) ISNULL)) ORDER BY CAST(HEX(t1.c0) AS INTEGER), ((((t1.c0 IN (t1.c1))))==((ABS(DISTINCT t1.c1)))) ASC;
SELECT ALL * FROM t1 WHERE (CAST(t1.c1 COLLATE NOCASE AS REAL));
SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 COLLATE NOCASE AS REAL)) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (CAST(t1.c1 COLLATE NOCASE AS REAL));
SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 COLLATE NOCASE AS REAL)) LIMIT 0X0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((((t1.c0))>((t1.c0))))LIKE(CAST(t1.c0 AS INTEGER))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((((t1.c0))>((t1.c0))))LIKE(CAST(t1.c0 AS INTEGER))))AND((((t1.c1, t1.c1)) BETWEEN ((((((t1.c0)OR(t1.c0)))AND(t1.c1)), t1.c0 COLLATE NOCASE)) AND ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, ((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))))))) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0))) NOTNULL)) ORDER BY CASE (~ (t1.c0))  WHEN t1.c1 COLLATE RTRIM THEN (((t1.c1, x'f0', t1.c1)) NOT BETWEEN ((t1.c1, 'wF{?~Kd', t1.c1)) AND ((t1.c0, t1.c1, t1.c0))) ELSE CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END END ASC, LIKELY(x'') ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0))) NOTNULL)) ORDER BY UPPER(TRIM(DISTINCT t1.c0, t1.c1)) ASC LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0))) NOTNULL)) ORDER BY CASE (~ (t1.c0))  WHEN t1.c1 COLLATE RTRIM THEN (((t1.c1, x'f0', t1.c1)) NOT BETWEEN ((t1.c1, 'wF{?~Kd', t1.c1)) AND ((t1.c0, t1.c1, t1.c0))) ELSE CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END END ASC, LIKELY(x'') ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0))) NOTNULL)) ORDER BY UPPER(TRIM(DISTINCT t1.c0, t1.c1)) ASC LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE 0.26760194223656675  WHEN '' THEN (((t1.c1, '1H', t1.c1))<=((t1.c0, t1.c1, t1.c1))) END);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE 0.26760194223656675  WHEN '' THEN (((t1.c1, '1H', t1.c1))<=((t1.c0, t1.c1, t1.c1))) END) ORDER BY ((((((((((CAST(t1.c0 AS REAL))OR(t1.c1 COLLATE RTRIM)))OR(t1.c0)))OR(((t1.c0)<=(t1.c0)))))AND(((t1.c1)<=(t1.c0)))))OR(((t1.c1) ISNULL))) DESC, (- (t1.c1)) COLLATE BINARY INTERSECT SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY ((((((((((CAST(t1.c0 AS REAL))OR(t1.c1 COLLATE RTRIM)))OR(t1.c0)))OR(((t1.c0)<=(t1.c0)))))AND(((t1.c1)<=(t1.c0)))))OR(((t1.c1) ISNULL))) DESC, (- (t1.c1)) COLLATE BINARY;
SELECT MIN(t1.c0) FROM t1 WHERE ((t1.c0 COLLATE NOCASE IN (((t1.c1)GLOB(t1.c1)), ((t1.c1) IS TRUE)))) ORDER BY (((((t1.c0, t1.c0, '䭹'))<=((t1.c1, t1.c1, t1.c1))))LIKE(CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END))  NULLS FIRST, (t1.c1 COLLATE RTRIM IN (((t1.c1)+(t1.c0)))) ASC  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c0 COLLATE NOCASE IN (((t1.c1)GLOB(t1.c1)))))AND(CASE WHEN TOTAL_CHANGES() THEN ((t1.c0) NOTNULL) WHEN ((t1.c1)+(t1.c0)) THEN NULL END))) ORDER BY (((((t1.c0, t1.c0, '䭹'))<=((t1.c1, t1.c1, t1.c1))))LIKE(CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END))  NULLS FIRST, (t1.c1 COLLATE RTRIM IN (((t1.c1)+(t1.c0)))) ASC  NULLS FIRST INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE ('1046715834') ORDER BY (((((t1.c0, t1.c0, '䭹'))<=((t1.c1, t1.c1, t1.c1))))LIKE(CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END))  NULLS FIRST, (t1.c1 COLLATE RTRIM IN (((t1.c1)+(t1.c0)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (NULL);
SELECT * FROM t1 WHERE (NULL) ORDER BY LIKELIHOOD((((t1.c0)) NOT BETWEEN (('-618098757')) AND ((t1.c0))), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) DESC  NULLS FIRST, CAST(((t1.c1) ISNULL) AS NUMERIC) DESC;
SELECT * FROM t1 WHERE (NULL);
SELECT * FROM t1 WHERE (NULL) ORDER BY LIKELIHOOD((((t1.c0)) NOT BETWEEN (('-618098757')) AND ((t1.c0))), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) DESC  NULLS FIRST, CAST(((t1.c1) ISNULL) AS NUMERIC) DESC;
SELECT * FROM t1 WHERE ((((~ (t1.c1))) NOT NULL));
SELECT * FROM t1 WHERE ((((((~ (t1.c1))) NOT NULL))AND((- ((NOT (t1.c0))))))) ORDER BY ((t1.c1 COLLATE NOCASE) BETWEEN (t1.c1 COLLATE NOCASE) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, CAST(((((((((t1.c1)AND(0.5516352339091076)))OR(x'1ed7')))AND(t1.c1)))OR(t1.c1)) AS BLOB) LIMIT 0x1 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1)&(t1.c1))) BETWEEN (LOWER(t1.c1)) AND (t1.c0))) ORDER BY ((t1.c1 COLLATE NOCASE) BETWEEN (t1.c1 COLLATE NOCASE) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, CAST(((((((((t1.c1)AND(0.5516352339091076)))OR(x'1ed7')))AND(t1.c1)))OR(t1.c1)) AS BLOB) LIMIT 1;
SELECT * FROM t1 WHERE ((((~ (t1.c1))) NOT NULL));
SELECT * FROM t1 WHERE ((((((~ (t1.c1))) NOT NULL))AND((- ((NOT (t1.c0))))))) ORDER BY ((t1.c1 COLLATE NOCASE) BETWEEN (t1.c1 COLLATE NOCASE) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, CAST(((((((((t1.c1)AND(0.5516352339091076)))OR(x'1ed7')))AND(t1.c1)))OR(t1.c1)) AS BLOB) LIMIT 0x1 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1)&(t1.c1))) BETWEEN (LOWER(t1.c1)) AND (t1.c0))) ORDER BY ((t1.c1 COLLATE NOCASE) BETWEEN (t1.c1 COLLATE NOCASE) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, CAST(((((((((t1.c1)AND(0.5516352339091076)))OR(x'1ed7')))AND(t1.c1)))OR(t1.c1)) AS BLOB) LIMIT 1;
SELECT MAX(t1.c1) FROM t1 WHERE (((('g', t1.c1)) BETWEEN ((t1.c1 COLLATE BINARY, json_valid(t1.c1))) AND ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, CAST(t1.c1 AS BLOB)))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((('g', t1.c1)) BETWEEN ((t1.c1 COLLATE BINARY, json_valid(t1.c1))) AND ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, CAST(t1.c1 AS BLOB))))) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CAST(((NULL) BETWEEN (t1.c0) AND (t1.c0)) AS TEXT));
SELECT ALL * FROM t1 WHERE (x'') ORDER BY CASE WHEN t1.c0 THEN ((t1.c1)>>(t1.c0)) WHEN ((t1.c0) BETWEEN (t1.c0) AND (0.38891533359365926)) THEN ((t1.c0) IS FALSE) WHEN TYPEOF(DISTINCT t1.c1) THEN 0.1898756073629001 COLLATE RTRIM WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE 0.7225794074621998 END THEN t1.c1 WHEN (((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))) THEN ((t1.c1)*(t1.c1)) END ASC  NULLS LAST, CASE WHEN 0xffffffff91162258 THEN LIKE(t1.c1, t1.c1, '+') ELSE CASE WHEN t1.c1 THEN t1.c0 END END DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((x'')AND((t1.c0 IN (t1.c1)) COLLATE NOCASE))) ORDER BY CASE WHEN t1.c0 THEN ((t1.c1)>>(t1.c0)) WHEN ((t1.c0) BETWEEN (t1.c0) AND (0.38891533359365926)) THEN ((t1.c0) IS FALSE) WHEN TYPEOF(DISTINCT t1.c1) THEN 0.1898756073629001 COLLATE RTRIM WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE 0.7225794074621998 END THEN t1.c1 WHEN (((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))) THEN ((t1.c1)*(t1.c1)) END ASC  NULLS LAST, CASE WHEN -1860820392 THEN LIKE(t1.c1, t1.c1, '+') ELSE CASE WHEN t1.c1 THEN t1.c0 END END DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (x'') ORDER BY CASE WHEN t1.c0 THEN ((t1.c1)>>(t1.c0)) WHEN ((t1.c0) BETWEEN (t1.c0) AND (0.38891533359365926)) THEN ((t1.c0) IS FALSE) WHEN TYPEOF(DISTINCT t1.c1) THEN 0.1898756073629001 COLLATE RTRIM WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE 0.7225794074621998 END THEN t1.c1 WHEN (((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))) THEN ((t1.c1)*(t1.c1)) END ASC  NULLS LAST, CASE WHEN 0xffffffff91162258 THEN LIKE(t1.c1, t1.c1, '+') ELSE CASE WHEN t1.c1 THEN t1.c0 END END DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((x'')AND((t1.c0 IN (t1.c1)) COLLATE NOCASE))) ORDER BY CASE WHEN t1.c0 THEN ((t1.c1)>>(t1.c0)) WHEN ((t1.c0) BETWEEN (t1.c0) AND (0.38891533359365926)) THEN ((t1.c0) IS FALSE) WHEN TYPEOF(DISTINCT t1.c1) THEN 0.1898756073629001 COLLATE RTRIM WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE 0.7225794074621998 END THEN t1.c1 WHEN (((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))) THEN ((t1.c1)*(t1.c1)) END ASC  NULLS LAST, CASE WHEN -1860820392 THEN LIKE(t1.c1, t1.c1, '+') ELSE CASE WHEN t1.c1 THEN t1.c0 END END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c1)AND(CASE WHEN '-1374173357' THEN ((t1.c0)GLOB(x'3a')) WHEN ((((t1.c1)OR(NULL)))AND(t1.c0)) THEN t1.c1 END))) ORDER BY (('548173623') NOT NULL) DESC, t1.c1  NULLS LAST, ((((t1.c0)AND(t1.c0))) BETWEEN (CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END) AND (t1.c1 COLLATE RTRIM))  NULLS LAST LIMIT 0x2 INTERSECT SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))>=(((((t1.c1)AND(t1.c0)))OR(t1.c0))))) ORDER BY (('548173623') NOT NULL) DESC, t1.c1  NULLS LAST, ((((t1.c0)AND(t1.c0))) BETWEEN (CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END) AND (t1.c1 COLLATE RTRIM))  NULLS LAST LIMIT 0X2;
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))>=(((((t1.c0)AND(t1.c1)))OR(t1.c0)))));
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))>(((((t1.c0)AND(t1.c1)))OR(t1.c0))))) ORDER BY ((t1.c1) BETWEEN (t1.c1 COLLATE BINARY) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))) DESC, ((((t1.c1)AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND(CASE t1.c0  WHEN t1.c0 THEN x'df' WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))  NULLS LAST;
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))>=(((((t1.c0)AND(t1.c1)))OR(t1.c0)))));
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))>(((((t1.c0)AND(t1.c1)))OR(t1.c0))))) ORDER BY ((t1.c1) BETWEEN (t1.c1 COLLATE BINARY) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))) DESC, ((((t1.c1)AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND(CASE t1.c0  WHEN t1.c0 THEN x'df' WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY TYPEOF(DISTINCT ((t1.c1) IS TRUE)) DESC  NULLS LAST, ((CAST(t1.c0 AS TEXT)) BETWEEN (t1.c1) AND (t1.c0)) ASC, (- (CAST(NULL AS INTEGER)))  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY t1.c0  NULLS FIRST, t1.c0  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c1)) BETWEEN ((CASE 'Q'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)) AND ((((t1.c0)>=(t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)) BETWEEN ((CASE 'Q'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)) AND ((((t1.c0)>(t1.c1))))))AND(((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)IS NOT(CAST(t1.c1 AS TEXT)))))) LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c1)) BETWEEN ((CASE 'Q'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)) AND ((((t1.c0)>=(t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)) BETWEEN ((CASE 'Q'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)) AND ((((t1.c0)>(t1.c1))))))AND(((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)IS NOT(CAST(t1.c1 AS TEXT)))))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((t1.c0 IN (t1.c0)) IN (CASE t1.c0  WHEN x'01' THEN t1.c1 ELSE t1.c0 END)));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0 IN (t1.c0)) IN (CASE t1.c0  WHEN x'01' THEN t1.c1 ELSE t1.c0 END)))AND((t1.c1 IN (t1.c1, t1.c1)) COLLATE BINARY))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)|(t1.c0)))>=(t1.c0))) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (((t1.c0 IN (t1.c0)) IN (CASE t1.c0  WHEN x'01' THEN t1.c1 ELSE t1.c0 END)));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0 IN (t1.c0)) IN (CASE t1.c0  WHEN x'01' THEN t1.c1 ELSE t1.c0 END)))AND((t1.c1 IN (t1.c1, t1.c1)) COLLATE BINARY))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)|(t1.c0)))>=(t1.c0))) LIMIT 0x1;
SELECT COUNT(*) FROM t1 WHERE ('kl8lq');
SELECT COUNT(*) FROM t1 WHERE ((('kl8lq')AND(((t1.c0 COLLATE RTRIM) IS TRUE)))) ORDER BY CAST(DATETIME(t1.c1, t1.c1, t1.c0) AS BLOB) LIMIT 0x1;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c0)IS(NULL)))OR((t1.c0 IN (t1.c1)))))OR(((t1.c1) ISNULL))))OR(t1.c0)))OR((((t1.c0, t1.c0, t1.c1))>=((t1.c0, t1.c1, t1.c0)))))) ORDER BY '%Q|[]X' DESC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((((((((t1.c0)IS(NULL)))OR((t1.c0 IN (t1.c1)))))OR(((t1.c1) ISNULL))))OR(t1.c0)))OR((((t1.c0, t1.c0, t1.c1))>((t1.c0, t1.c1, t1.c0))))))AND(((CAST(t1.c1 AS INTEGER)) BETWEEN (((t1.c1)>(t1.c0))) AND ((t1.c0 IN (t1.c0))))))) ORDER BY (- (((t1.c1) NOTNULL)))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((0.26182734455476864)) BETWEEN ((((t1.c1)OR(t1.c1)))) AND ((((((t1.c0)AND(t1.c0)))AND(t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((0.26182734455476864)) BETWEEN ((((t1.c1)OR(t1.c1)))) AND ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOT NULL)) BETWEEN ((((((('446513759')OR(t1.c0)))OR(t1.c1)))OR(t1.c1))) AND (t1.c0 COLLATE NOCASE))) LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((0.26182734455476864)) BETWEEN ((((t1.c1)OR(t1.c1)))) AND ((((((t1.c0)AND(t1.c0)))AND(t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((0.26182734455476864)) BETWEEN ((((t1.c1)OR(t1.c1)))) AND ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOT NULL)) BETWEEN ((((((('446513759')OR(t1.c0)))OR(t1.c1)))OR(t1.c1))) AND (t1.c0 COLLATE NOCASE))) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((CAST(t1.c0 AS INTEGER))AND(CASE t1.c0  WHEN t1.c0 THEN NULL ELSE t1.c1 END)))OR(t1.c0 COLLATE BINARY)))OR(((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (((((((CAST(t1.c0 AS INTEGER))AND(CASE t1.c0  WHEN t1.c0 THEN NULL ELSE t1.c1 END)))OR(t1.c0 COLLATE BINARY)))OR(((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c0))))) ORDER BY CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY ASC, CASE (((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c0)))  WHEN t1.c0 THEN '1852987097' WHEN ((t1.c1)LIKE(t1.c1)) THEN '>' END ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((~ (((t1.c1) NOTNULL))));
SELECT DISTINCT * FROM t1 WHERE ((((~ (((t1.c1) NOTNULL))))AND(MIN(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), STRFTIME(t1.c0, t1.c0, t1.c1, NULL), (t1.c0 IN (t1.c0)), CAST(t1.c1 AS NUMERIC))))) ORDER BY CASE WHEN ((t1.c1) IS TRUE) THEN ((t1.c1)%(t1.c0)) END ASC  NULLS FIRST, rtreenode((('o')>(t1.c0)), CASE NULL  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE BINARY)<<(t1.c1 COLLATE NOCASE))) ORDER BY CASE WHEN ((t1.c1) IS TRUE) THEN ((t1.c1)%(t1.c0)) END ASC  NULLS FIRST, rtreenode((('o')>(t1.c0)), CASE NULL  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END) ASC  NULLS LAST;
SELECT * FROM t1 WHERE ((~ (((t1.c1) NOTNULL))));
SELECT DISTINCT * FROM t1 WHERE ((((~ (((t1.c1) NOTNULL))))AND(MIN(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), STRFTIME(t1.c0, t1.c0, t1.c1, NULL), (t1.c0 IN (t1.c0)), CAST(t1.c1 AS NUMERIC))))) ORDER BY CASE WHEN ((t1.c1) IS TRUE) THEN ((t1.c1)%(t1.c0)) END ASC  NULLS FIRST, rtreenode((('o')>(t1.c0)), CASE NULL  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE BINARY)<<(t1.c1 COLLATE NOCASE))) ORDER BY CASE WHEN ((t1.c1) IS TRUE) THEN ((t1.c1)%(t1.c0)) END ASC  NULLS FIRST, rtreenode((('o')>(t1.c0)), CASE NULL  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY 0.6011081490645616, (((t1.c0, t1.c1)) NOT BETWEEN ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND('-16410412')), ((t1.c1) IS FALSE))) AND ((ABS(DISTINCT t1.c1), t1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t1 WHERE (((NULL)AND((NOT (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END))))) ORDER BY CASE IFNULL(t1.c1, t1.c1)  WHEN (((t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))) THEN ((t1.c0)<(t1.c1)) WHEN CAST(t1.c1 AS BLOB) THEN ((((t1.c1)AND(t1.c1)))OR(t1.c1)) WHEN (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))) THEN ((t1.c0) NOTNULL) ELSE CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END END, ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 END)>(CAST(t1.c0 AS INTEGER)))  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE ((((0.9878925554621928) NOT BETWEEN (t1.c1) AND (t1.c0)) IN (t1.c1, ((((t1.c0)AND(t1.c0)))AND(t1.c0)), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))))) ORDER BY CASE CAST(t1.c1 AS NUMERIC)  WHEN ((t1.c1) IS FALSE) THEN ((t1.c0)*(t1.c0)) WHEN t1.c0 THEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END WHEN t1.c0 THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) END DESC, (((0.512499855658516, t1.c0, t1.c1, t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), (- (t1.c0)), t1.c0 COLLATE NOCASE, t1.c1)) AND ((((((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND('699199935')))AND(t1.c1)))AND(t1.c0)), ((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)), ((((t1.c1)OR(t1.c0)))AND(t1.c1)), t1.c0 COLLATE NOCASE)))  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((0.9878925554621928) NOT BETWEEN (t1.c1) AND (t1.c0)) IN (t1.c1)))AND(((((NULL)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ())))) ORDER BY CASE CAST(t1.c1 AS NUMERIC)  WHEN ((t1.c1) IS FALSE) THEN ((t1.c0)*(t1.c0)) WHEN t1.c0 THEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END WHEN t1.c0 THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) END DESC, (((0.512499855658516, t1.c0, t1.c1, t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), (- (t1.c0)), t1.c0 COLLATE NOCASE, t1.c1)) AND ((((((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND('699199935')))AND(t1.c1)))AND(t1.c0)), ((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)), ((((t1.c1)OR(t1.c0)))AND(t1.c1)), t1.c0 COLLATE NOCASE)))  NULLS FIRST;
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (((t1.c0)<(highlight(t1.c0, t1.c1, t1.c1, t1.c1)))) ORDER BY ((COALESCE(t1.c0, t1.c0, t1.c1, x'3db388f3'))||(((t1.c0)>=(t1.c0))))  NULLS LAST, t1.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)<(highlight(t1.c0, t1.c1, t1.c1, t1.c1))))AND(((t1.c0) BETWEEN ('5\Y{/') AND (t1.c0)) COLLATE NOCASE))) ORDER BY ((COALESCE(t1.c0, t1.c0, t1.c1, x'3db388f3'))||(((t1.c0)>=(t1.c0))))  NULLS LAST, t1.c1 ASC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t1 WHERE ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) IN ())) ORDER BY CAST(((t1.c0) ISNULL) AS BLOB)  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) IN ())) ORDER BY CAST(((t1.c0) ISNULL) AS BLOB)  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM t1 WHERE (CAST(((t1.c1) NOT NULL) AS TEXT)) ORDER BY CAST(((t1.c0) ISNULL) AS BLOB)  NULLS LAST LIMIT 2;
SELECT ALL * FROM t1 WHERE ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) IN ())) ORDER BY CAST(((t1.c0) ISNULL) AS BLOB)  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) IN ())) ORDER BY CAST(((t1.c0) ISNULL) AS BLOB)  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM t1 WHERE (CAST(((t1.c1) NOT NULL) AS TEXT)) ORDER BY CAST(((t1.c0) ISNULL) AS BLOB)  NULLS LAST LIMIT 2;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)>=(((((t1.c0)OR(t1.c0)))OR(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)>(((((t1.c0)OR(t1.c0)))OR(t1.c0)))))AND(t1.c1))) ORDER BY json_remove(CAST(t1.c1 AS INTEGER), CAST(t1.c1 AS TEXT)) DESC, (((t1.c1, t1.c0)) BETWEEN ((CAST(t1.c1 AS INTEGER), ((t1.c0) IS FALSE))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, CAST(t1.c0 AS REAL)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)>=(((((t1.c0)OR(t1.c0)))OR(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)>(((((t1.c0)OR(t1.c0)))OR(t1.c0)))))AND(t1.c1))) ORDER BY json_remove(CAST(t1.c1 AS INTEGER), CAST(t1.c1 AS TEXT)) DESC, (((t1.c1, t1.c0)) BETWEEN ((CAST(t1.c1 AS INTEGER), ((t1.c0) IS FALSE))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, CAST(t1.c0 AS REAL)))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c0, ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(0.9846031356455126)), (t1.c0 IN ())))<((((t1.c1)GLOB(t1.c0)), ((t1.c1)AND(t1.c0)), (- (t1.c1)))))) ORDER BY (((((t1.c0, -1793827460))!=((0.6115580582077196, t1.c1))))IS NOT(t1.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(0.9846031356455126)), (t1.c0 IN ())))<((((t1.c1)GLOB(t1.c0)), ((t1.c1)AND(t1.c0)), (- (t1.c1)))))) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS NUMERIC) DESC, NULL ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0) IS FALSE)) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS NUMERIC) DESC, NULL ASC  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE ((((t1.c0, ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(0.9846031356455126)), (t1.c0 IN ())))<((((t1.c1)GLOB(t1.c0)), ((t1.c1)AND(t1.c0)), (- (t1.c1)))))) ORDER BY (((((t1.c0, -1793827460))!=((0.6115580582077196, t1.c1))))IS NOT(t1.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(0.9846031356455126)), (t1.c0 IN ())))<((((t1.c1)GLOB(t1.c0)), ((t1.c1)AND(t1.c0)), (- (t1.c1)))))) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS NUMERIC) DESC, NULL ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0) IS FALSE)) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS NUMERIC) DESC, NULL ASC  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) NOT NULL));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) NOT NULL))AND(((((((((-8.3606605E7)AND(((('0.8243825469778684'))>((t1.c1))))))OR(0.4937854000092191)))OR(((((((t1.c0)OR(t1.c1)))OR(x'e1')))OR(t1.c0)))))AND((('*h~酗(<7a')LIKE(t1.c0))))))) ORDER BY (((t1.c0 IN (t1.c0))) BETWEEN ('1408534150') AND (t1.c1 COLLATE NOCASE)), CASE WHEN ((t1.c1)&(t1.c1)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN t1.c0 WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN UPPER(t1.c0) WHEN CASE 'AWWc'  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END THEN (t1.c0 IN ()) END ASC, t1.c0 ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) NOT NULL));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) NOT NULL))AND(((((((((-8.3606605E7)AND(((('0.8243825469778684'))>((t1.c1))))))OR(0.4937854000092191)))OR(((((((t1.c0)OR(t1.c1)))OR(x'e1')))OR(t1.c0)))))AND((('*h~酗(<7a')LIKE(t1.c0))))))) ORDER BY (((t1.c0 IN (t1.c0))) BETWEEN ('1408534150') AND (t1.c1 COLLATE NOCASE)), CASE WHEN ((t1.c1)&(t1.c1)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN t1.c0 WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN UPPER(t1.c0) WHEN CASE 'AWWc'  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END THEN (t1.c0 IN ()) END ASC, t1.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c0))) BETWEEN (COALESCE(DISTINCT t1.c0, t1.c0, t1.c1, t1.c0)) AND (t1.c0))) ORDER BY (t1.c1 IN ());
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c0))) BETWEEN (COALESCE(DISTINCT t1.c0, t1.c0, t1.c1, t1.c0)) AND (t1.c0))) ORDER BY t1.c1 DESC, CASE WHEN '-1940033031' THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN NULL ELSE t1.c0 END COLLATE BINARY LIMIT 0X0 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c1)LIKE(t1.c0)) COLLATE BINARY) ORDER BY t1.c1 DESC, CASE WHEN '-1940033031' THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN NULL ELSE t1.c0 END COLLATE BINARY LIMIT 0X0;
SELECT MAX(t1.c0) FROM t1 WHERE (CASE x'' COLLATE RTRIM  WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN CAST(t1.c1 AS NUMERIC) WHEN CASE t1.c1  WHEN t1.c0 THEN x'79' WHEN x'e045b6' THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN ((((t1.c0)AND(t1.c1)))OR(t1.c0)) WHEN (+ (t1.c0)) THEN (((t1.c1, t1.c1))<=((NULL, t1.c1))) END) ORDER BY (- (((t1.c1)GLOB(t1.c0)))), CAST(((t1.c1) NOT NULL) AS REAL)  NULLS LAST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (CASE x'' COLLATE RTRIM  WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN CAST(t1.c1 AS NUMERIC) WHEN CASE t1.c1  WHEN t1.c0 THEN x'79' WHEN x'e045b6' THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN ((((t1.c0)AND(t1.c1)))OR(t1.c0)) WHEN (+ (t1.c0)) THEN (((t1.c1, t1.c1))<=((NULL, t1.c1))) END) ORDER BY CASE WHEN t1.c1 THEN ((t1.c0)AND(t1.c1)) WHEN (~ (t1.c0)) THEN (('+')<=(t1.c0)) WHEN '1626513390' THEN 0.12175375365437646 ELSE ((t1.c0)LIKE(t1.c1)) END ASC  NULLS LAST, ((((t1.c0)!=(t1.c1))) NOT BETWEEN ((((t1.c0, t1.c0, t1.c1))>((t1.c1, t1.c0, 0.8025154845386343)))) AND ((+ (t1.c0)))) ASC, ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END) IS FALSE) DESC LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 NOT INDEXED WHERE ((((x'35c9')) BETWEEN ((-1.452555701E9)) AND ((CAST(t1.c0 AS REAL))))) ORDER BY CASE WHEN t1.c1 THEN ((t1.c0)AND(t1.c1)) WHEN (~ (t1.c0)) THEN (('+')<=(t1.c0)) WHEN '1626513390' THEN 0.12175375365437646 ELSE ((t1.c0)LIKE(t1.c1)) END ASC  NULLS LAST, ((((t1.c0)!=(t1.c1))) NOT BETWEEN ((((t1.c0, t1.c0, t1.c1))>((t1.c1, t1.c0, 0.8025154845386343)))) AND ((+ (t1.c0)))) ASC, ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END) IS FALSE) DESC LIMIT 0X1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((t1.c0 IN (t1.c0)), NULLIF(DISTINCT t1.c0, t1.c1), t1.c0 COLLATE RTRIM, x'31ef'))>(('100929609', t1.c0, t1.c1 COLLATE NOCASE, (t1.c1 IN ())))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((t1.c0 IN (t1.c0)), NULLIF(DISTINCT t1.c0, t1.c1), t1.c0 COLLATE RTRIM, x'31ef'))>(('100929609', t1.c0, t1.c1 COLLATE NOCASE, (t1.c1 IN ())))))AND(t1.c1))) LIMIT 0X3;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((NULL) ISNULL)) ORDER BY COALESCE(DISTINCT 0.7040030642047502 COLLATE NOCASE, 0.9883707887072516) DESC, (((t1.c0)) NOT BETWEEN ((((t1.c1)==(t1.c1)))) AND ((t1.c1 COLLATE NOCASE))) ASC;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((NULL) ISNULL))AND(CAST(HEX(t1.c0) AS NUMERIC)))) ORDER BY LIKELIHOOD((((t1.c0))<>((t1.c0))), (- (0.29255305623888683)));
SELECT ALL * FROM t1 WHERE ((- (t1.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM t1 WHERE ((- (t1.c1 COLLATE RTRIM))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN t1.c1 WHEN ((t1.c1)IS(t1.c0)) THEN ('-160209910' IN ('\', t1.c1, t1.c1)) WHEN ((t1.c0)AND(t1.c1)) THEN ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)) ELSE CAST(t1.c1 AS NUMERIC) END) LIMIT 1;
SELECT ALL * FROM t1 WHERE ((- (t1.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM t1 WHERE ((- (t1.c1 COLLATE RTRIM))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN t1.c1 WHEN ((t1.c1)IS(t1.c0)) THEN ('-160209910' IN ('\', t1.c1, t1.c1)) WHEN ((t1.c0)AND(t1.c1)) THEN ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)) ELSE CAST(t1.c1 AS NUMERIC) END) LIMIT 1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE (t1.c1 IN ())  WHEN (t1.c0 IN (t1.c1, t1.c0)) THEN SQLITE_VERSION() ELSE NULL COLLATE RTRIM END);
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((CASE (t1.c1 IN ())  WHEN (t1.c0 IN (t1.c1, t1.c0)) THEN SQLITE_VERSION() ELSE NULL COLLATE RTRIM END)AND(((t1.c0) BETWEEN ((~ (t1.c0))) AND (t1.c0))))) LIMIT 1;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))<<((t1.c1 IN ()))))));
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))<<((t1.c1 IN ()))))));
SELECT ALL * FROM t1 WHERE (((CHANGES()) ISNULL)) ORDER BY (((((t1.c1, t1.c1, t1.c1, t1.c0, t1.c0))>((t1.c1, t1.c0, t1.c1, t1.c0, t1.c0)))) NOTNULL);
SELECT * FROM t1 WHERE (((CHANGES()) ISNULL)) ORDER BY ((t1.c1)+(((((t1.c0)AND(NULL)))AND(t1.c1))))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((CHANGES()) ISNULL)) ORDER BY (((((t1.c1, t1.c1, t1.c1, t1.c0, t1.c0))>((t1.c1, t1.c0, t1.c1, t1.c0, t1.c0)))) NOTNULL);
SELECT * FROM t1 WHERE (((CHANGES()) ISNULL)) ORDER BY ((t1.c1)+(((((t1.c0)AND(NULL)))AND(t1.c1))))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((((t1.c0)OR(t1.c0)))OR(NULL)) IN (((t1.c0)&(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0)OR(t1.c0)))OR(NULL)) IN (((t1.c0)&(t1.c1)))))AND(CAST(((t1.c0)%(t1.c0)) AS TEXT)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1, 0.06857902727015786, t1.c0, t1.c1))>=((t1.c1, t1.c0, t1.c0, t1.c0))) IN ()));
SELECT ALL * FROM t1 WHERE ((((((t1.c0)OR(t1.c0)))OR(NULL)) IN (((t1.c0)&(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0)OR(t1.c0)))OR(NULL)) IN (((t1.c0)&(t1.c1)))))AND(CAST(((t1.c0)%(t1.c0)) AS TEXT)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1, 0.06857902727015786, t1.c0, t1.c1))>=((t1.c1, t1.c0, t1.c0, t1.c0))) IN ()));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((+ ('s쉋')) COLLATE BINARY);
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((+ ('s쉋')) COLLATE BINARY) ORDER BY (((0.3273941347601541 IN (t1.c1, t1.c0)))OR(CASE WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST, UPPER(((t1.c1)>>(t1.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1) ISNULL))-(((x'20fa')LIKE(t1.c1)))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1) ISNULL))-(((x'20fa')LIKE(t1.c1))))) LIMIT 0X0 INTERSECT SELECT COUNT(*) FROM t1 WHERE ((((t1.c1 IN (t1.c0))) BETWEEN (((t1.c0) IS FALSE)) AND (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (NULL);
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND(((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))>>((t1.c1 IN ())))))) ORDER BY ((((t1.c1)OR(t1.c0))) IS FALSE) ASC  NULLS LAST, (+ (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))), CASE WHEN (((t1.c0)) BETWEEN ((NULL)) AND ((t1.c0))) THEN (t1.c0 IN (t1.c0, t1.c0)) WHEN CAST(t1.c1 AS REAL) THEN ((t1.c1)IS NOT(t1.c0)) WHEN ((t1.c0)>=(t1.c1)) THEN (~ (t1.c1)) WHEN CAST(0.09595171197639529 AS REAL) THEN CAST('-139691758' AS NUMERIC) END DESC;
SELECT ALL * FROM t1 WHERE (NULL);
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND(((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))>>((t1.c1 IN ())))))) ORDER BY ((((t1.c1)OR(t1.c0))) IS FALSE) ASC  NULLS LAST, (+ (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))), CASE WHEN (((t1.c0)) BETWEEN ((NULL)) AND ((t1.c0))) THEN (t1.c0 IN (t1.c0, t1.c0)) WHEN CAST(t1.c1 AS REAL) THEN ((t1.c1)IS NOT(t1.c0)) WHEN ((t1.c0)>=(t1.c1)) THEN (~ (t1.c1)) WHEN CAST(0.09595171197639529 AS REAL) THEN CAST('-139691758' AS NUMERIC) END DESC;
SELECT COUNT(*) FROM t1 WHERE (((NULL) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (((t1.c0) ISNULL)))) ORDER BY 'XJ/w' DESC, (((t1.c1)) NOT BETWEEN (((t1.c1 IN (t1.c0)))) AND ((((t1.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (((t1.c0) ISNULL)))) ORDER BY t1.c0 DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)>(((t1.c1) IS FALSE)))) ORDER BY ((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0) IS FALSE)))  NULLS LAST, (((t1.c0, t1.c0, t1.c0, t1.c1, t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (0.7053088143607875)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, (- (t1.c0)), t1.c1, '1852463682', IFNULL(DISTINCT t1.c1, '536044823'), t1.c0)) AND (((t1.c0 IN ()), (((t1.c0))!=((t1.c1))), CAST(t1.c0 AS TEXT), CAST(t1.c0 AS BLOB), ((t1.c1)||(t1.c1)), UNLIKELY(t1.c0), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN 0x3f3470f5 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN x'c63ae0' THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))), ((((CAST('6-R' AS BLOB))AND(SUBSTR(t1.c0, 446513759))))AND((t1.c1 IN (t1.c0, t1.c1))));
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)>(((t1.c1) IS FALSE)))) ORDER BY ((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0) IS FALSE)))  NULLS LAST, (((t1.c0, t1.c0, t1.c0, t1.c1, t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (0.7053088143607875)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, (- (t1.c0)), t1.c1, '1852463682', IFNULL(DISTINCT t1.c1, '536044823'), t1.c0)) AND (((t1.c0 IN ()), (((t1.c0))<>((t1.c1))), CAST(t1.c0 AS TEXT), CAST(t1.c0 AS BLOB), ((t1.c1)||(t1.c1)), UNLIKELY(t1.c0), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN 0X3f3470f5 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN x'c63ae0' THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))), ((((CAST('6-R' AS BLOB))AND(SUBSTR(t1.c0, 446513759))))AND((t1.c1 IN (t1.c0, t1.c1)))) LIMIT 0x2;
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)>(((t1.c1) IS FALSE)))) ORDER BY ((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0) IS FALSE)))  NULLS LAST, (((t1.c0, t1.c0, t1.c0, t1.c1, t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (0.7053088143607875)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, (- (t1.c0)), t1.c1, '1852463682', IFNULL(DISTINCT t1.c1, '536044823'), t1.c0)) AND (((t1.c0 IN ()), (((t1.c0))!=((t1.c1))), CAST(t1.c0 AS TEXT), CAST(t1.c0 AS BLOB), ((t1.c1)||(t1.c1)), UNLIKELY(t1.c0), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN 0x3f3470f5 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN x'c63ae0' THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))), ((((CAST('6-R' AS BLOB))AND(SUBSTR(t1.c0, 446513759))))AND((t1.c1 IN (t1.c0, t1.c1))));
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)>(((t1.c1) IS FALSE)))) ORDER BY ((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0) IS FALSE)))  NULLS LAST, (((t1.c0, t1.c0, t1.c0, t1.c1, t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (0.7053088143607875)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, (- (t1.c0)), t1.c1, '1852463682', IFNULL(DISTINCT t1.c1, '536044823'), t1.c0)) AND (((t1.c0 IN ()), (((t1.c0))<>((t1.c1))), CAST(t1.c0 AS TEXT), CAST(t1.c0 AS BLOB), ((t1.c1)||(t1.c1)), UNLIKELY(t1.c0), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN 0X3f3470f5 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN x'c63ae0' THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))), ((((CAST('6-R' AS BLOB))AND(SUBSTR(t1.c0, 446513759))))AND((t1.c1 IN (t1.c0, t1.c1)))) LIMIT 0x2;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CASE t1.c0  WHEN ((t1.c1)>=(t1.c0)) THEN ((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)) WHEN (((t1.c1)) NOT BETWEEN ((654438549)) AND (('-617936325'))) THEN ((((((t1.c0)OR(t1.c0)))OR('6(
%o劮')))AND(0.1761644149343069)) WHEN ((t1.c1) IS FALSE) THEN NULL ELSE (~ (t1.c0)) END) ORDER BY ((((t1.c1)<<(t1.c0)))LIKE(((t1.c1) NOTNULL))) DESC  NULLS LAST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((CASE t1.c0  WHEN ((t1.c1)>=(t1.c0)) THEN ((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)) WHEN (((t1.c1)) NOT BETWEEN ((654438549)) AND (('-617936325'))) THEN ((((((t1.c0)OR(t1.c0)))OR('6(
%o劮')))AND(0.1761644149343069)) WHEN ((t1.c1) IS FALSE) THEN NULL ELSE (~ (t1.c0)) END)AND('ꏃT'))) ORDER BY ((((t1.c1)<<(t1.c0)))LIKE(((t1.c1) NOTNULL))) DESC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ('9_u?5o,?') ORDER BY ((((t1.c1)<<(t1.c0)))LIKE(((t1.c1) NOTNULL))) DESC  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM t1 WHERE (load_extension((t1.c0 IN ()), ((t1.c0)&(t1.c1))));
SELECT ALL COUNT(*) FROM t1 WHERE (((load_extension((t1.c0 IN ()), ((t1.c0)&(t1.c1))))AND(HEX(DISTINCT ((1173737933) NOT BETWEEN (t1.c1) AND (t1.c0)))))) ORDER BY (NOT (NULL)) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (0Xffffffffe73308d7) ORDER BY (NOT (NULL));
SELECT * FROM t1 WHERE (((t1.c1 IN (t1.c1)) IN ())) ORDER BY NULL;
SELECT ALL * FROM t1 WHERE (((t1.c1 IN (t1.c1)) IN ())) ORDER BY (CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END IN ((~ (t1.c0)))) DESC  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE (((t1.c1 IN (t1.c1)) IN ())) ORDER BY NULL;
SELECT ALL * FROM t1 WHERE (((t1.c1 IN (t1.c1)) IN ())) ORDER BY (CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END IN ((~ (t1.c0)))) DESC  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE (((((((t1.c1)OR(t1.c0)))AND(t1.c1)))||(CASE t1.c1  WHEN x'' THEN t1.c0 WHEN t1.c0 THEN t1.c1 END))) ORDER BY (((t1.c1) ISNULL) IN ('952584868', ((t1.c1) NOT NULL))) ASC, (~ (((0.7551304494446347) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))||(CASE t1.c1  WHEN x'' THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))AND((((('1e500') NOT BETWEEN (t1.c1) AND (t1.c0)))>=(((t1.c0) IS FALSE)))))) ORDER BY (+ (x'7e')) COLLATE BINARY ASC, CASE WHEN (- (t1.c1)) THEN ((t1.c0) NOT BETWEEN (0.8275727545204498) AND (t1.c1)) WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN '-1871717699' WHEN CASE t1.c1  WHEN 0.09276739029780001 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END THEN CAST(t1.c1 AS BLOB) WHEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) THEN (((t1.c1))<((t1.c0))) WHEN CAST(t1.c0 AS TEXT) THEN ((t1.c0)==(t1.c1)) ELSE t1.c1 COLLATE RTRIM END, (- (((t1.c1) NOT NULL))) DESC LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (0.9187939359103803) ORDER BY (+ (x'7e')) COLLATE BINARY ASC, CASE WHEN (- (t1.c1)) THEN ((t1.c0) NOT BETWEEN (0.8275727545204498) AND (t1.c1)) WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN '-1871717699' WHEN CASE t1.c1  WHEN 0.09276739029780001 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END THEN CAST(t1.c1 AS BLOB) WHEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) THEN (((t1.c1))<((t1.c0))) WHEN CAST(t1.c0 AS TEXT) THEN ((t1.c0)=(t1.c1)) ELSE t1.c1 COLLATE RTRIM END, (- (((t1.c1) NOT NULL))) DESC LIMIT 0X0;
SELECT * FROM t1 WHERE (((((((t1.c1)OR(t1.c0)))AND(t1.c1)))||(CASE t1.c1  WHEN x'' THEN t1.c0 WHEN t1.c0 THEN t1.c1 END))) ORDER BY (((t1.c1) ISNULL) IN ('952584868', ((t1.c1) NOT NULL))) ASC, (~ (((0.7551304494446347) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))||(CASE t1.c1  WHEN x'' THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))AND((((('1e500') NOT BETWEEN (t1.c1) AND (t1.c0)))>=(((t1.c0) IS FALSE)))))) ORDER BY (+ (x'7e')) COLLATE BINARY ASC, CASE WHEN (- (t1.c1)) THEN ((t1.c0) NOT BETWEEN (0.8275727545204498) AND (t1.c1)) WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN '-1871717699' WHEN CASE t1.c1  WHEN 0.09276739029780001 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END THEN CAST(t1.c1 AS BLOB) WHEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) THEN (((t1.c1))<((t1.c0))) WHEN CAST(t1.c0 AS TEXT) THEN ((t1.c0)==(t1.c1)) ELSE t1.c1 COLLATE RTRIM END, (- (((t1.c1) NOT NULL))) DESC LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (0.9187939359103803) ORDER BY (+ (x'7e')) COLLATE BINARY ASC, CASE WHEN (- (t1.c1)) THEN ((t1.c0) NOT BETWEEN (0.8275727545204498) AND (t1.c1)) WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN '-1871717699' WHEN CASE t1.c1  WHEN 0.09276739029780001 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END THEN CAST(t1.c1 AS BLOB) WHEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) THEN (((t1.c1))<((t1.c0))) WHEN CAST(t1.c0 AS TEXT) THEN ((t1.c0)=(t1.c1)) ELSE t1.c1 COLLATE RTRIM END, (- (((t1.c1) NOT NULL))) DESC LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))OR(0.4830598153453616)))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY ((json_array_length(t1.c0)) NOT BETWEEN (((t1.c0)||(t1.c1))) AND (SQLITE_COMPILEOPTION_GET(t1.c1)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))OR(0.4830598153453616)))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND(CASE (t1.c1 IN ())  WHEN ((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)) THEN CASE WHEN '6hn2V]}nH' THEN t1.c0 ELSE t1.c1 END WHEN t1.c0 COLLATE NOCASE THEN t1.c0 WHEN t1.c0 COLLATE BINARY THEN (('R1E~w') ISNULL) ELSE (t1.c0 IN ()) END))) ORDER BY ((json_array_length(t1.c0)) NOT BETWEEN (((t1.c0)||(t1.c1))) AND (SQLITE_COMPILEOPTION_GET(t1.c1)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))OR(0.4830598153453616)))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY ((json_array_length(t1.c0)) NOT BETWEEN (((t1.c0)||(t1.c1))) AND (SQLITE_COMPILEOPTION_GET(t1.c1)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))OR(0.4830598153453616)))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND(CASE (t1.c1 IN ())  WHEN ((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)) THEN CASE WHEN '6hn2V]}nH' THEN t1.c0 ELSE t1.c1 END WHEN t1.c0 COLLATE NOCASE THEN t1.c0 WHEN t1.c0 COLLATE BINARY THEN (('R1E~w') ISNULL) ELSE (t1.c0 IN ()) END))) ORDER BY ((json_array_length(t1.c0)) NOT BETWEEN (((t1.c0)||(t1.c1))) AND (SQLITE_COMPILEOPTION_GET(t1.c1)))  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY CASE ((t1.c1) ISNULL)  WHEN ((('1408071590')) NOT BETWEEN ((t1.c0)) AND ((t1.c1))) THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) WHEN (((t1.c0, t1.c0))<=((t1.c0, t1.c0))) THEN ((((((((0x38c74aa4)OR(NULL)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)) ELSE (t1.c1 IN (t1.c1)) END ASC  NULLS LAST, CASE WHEN ((((((((t1.c1)AND(x'a8')))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)) THEN CAST(t1.c0 AS REAL) WHEN ((t1.c0)&(t1.c0)) THEN (t1.c1 IN ()) ELSE t1.c1 COLLATE RTRIM END  NULLS LAST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY ((t1.c1)AND(t1.c1)) COLLATE RTRIM ASC LIMIT 1 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((((((t1.c0)GLOB(t1.c0)))OR(-440233843)))AND(t1.c1 COLLATE BINARY)))AND((+ (t1.c0))))) ORDER BY ((t1.c1)AND(t1.c1)) COLLATE RTRIM ASC LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (CASE WHEN t1.c0 THEN NULL ELSE t1.c1 END))) ORDER BY LTRIM(((t1.c1)IS(t1.c0)), LOWER(t1.c1)) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (CASE WHEN t1.c0 THEN NULL ELSE t1.c1 END))) ORDER BY ((((((((((CAST(0.984576498753955 AS TEXT))AND(((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR('썄YjB*\4')))))AND(((t1.c1)*(t1.c1)))))OR(t1.c0 COLLATE NOCASE)))AND((NOT (t1.c1)))))AND(UPPER(DISTINCT t1.c0))), (CAST(0.9152161675829756 AS INTEGER) IN ((((0.8811218767063842, -112634247, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, NULL))))) ASC LIMIT 0x1 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (CASE LIKELIHOOD(DISTINCT t1.c0, t1.c1)  WHEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN (~ (t1.c0)) ELSE ((7.7817654E7) IS FALSE) END) ORDER BY ((((((((((CAST(0.984576498753955 AS TEXT))AND(((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR('썄YjB*\4')))))AND(((t1.c1)*(t1.c1)))))OR(t1.c0 COLLATE NOCASE)))AND((NOT (t1.c1)))))AND(UPPER(DISTINCT t1.c0))), (CAST(0.9152161675829756 AS INTEGER) IN ((((0.8811218767063842, 0xfffffffff9495679, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, NULL))))) ASC LIMIT 1;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(json_array_length((('0.9366707959460312')<=(t1.c1)), ((t1.c0)<=(NULL)))))) ORDER BY ((DATE(t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((0.8414537748975378)))) AND (((t1.c1) ISNULL))) LIMIT 1;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(json_array_length((('0.9366707959460312')<=(t1.c1)), ((t1.c0)<=(NULL)))))) ORDER BY ((DATE(t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((0.8414537748975378)))) AND (((t1.c1) ISNULL))) LIMIT 1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE BINARY) NOT BETWEEN (((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0))) AND (((t1.c1)>>(t1.c0)))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c0 COLLATE BINARY) NOT BETWEEN (((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0))) AND (((t1.c1)>>(t1.c0)))))AND(((((('1839988584', t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1)))) NOT BETWEEN (((t1.c1) NOT NULL)) AND (t1.c1))))) LIMIT 1;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS TEXT))<=(((t1.c0)-('-1997783105'))))) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)<=(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)), (('-2104454612') IS TRUE)  NULLS FIRST;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS TEXT))=(((t1.c0)-('-1997783105'))))) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)<=(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)), (('-2104454612') IS TRUE)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS TEXT))<=(((t1.c0)-('-1997783105'))))) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)<=(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)), (('-2104454612') IS TRUE)  NULLS FIRST;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS TEXT))=(((t1.c0)-('-1997783105'))))) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)<=(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)), (('-2104454612') IS TRUE)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (x'd39b') ORDER BY ((t1.c1 COLLATE RTRIM) IS TRUE) DESC  NULLS LAST, CASE WHEN x'f4732dd1fd' THEN t1.c1 WHEN CAST(t1.c1 AS INTEGER) THEN (((t1.c1, t1.c1))<>((t1.c0, t1.c0))) ELSE (~ (t1.c0)) END ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (x'd39b') ORDER BY ((t1.c1 COLLATE RTRIM) IS TRUE) DESC  NULLS LAST, CASE WHEN x'f4732dd1fd' THEN t1.c1 WHEN CAST(t1.c1 AS INTEGER) THEN (((t1.c1, t1.c1))<>((t1.c0, t1.c0))) ELSE (~ (t1.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (x'd39b') ORDER BY ((t1.c1 COLLATE RTRIM) IS TRUE) DESC  NULLS LAST, CASE WHEN x'f4732dd1fd' THEN t1.c1 WHEN CAST(t1.c1 AS INTEGER) THEN (((t1.c1, t1.c1))<>((t1.c0, t1.c0))) ELSE (~ (t1.c0)) END ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (x'd39b') ORDER BY ((t1.c1 COLLATE RTRIM) IS TRUE) DESC  NULLS LAST, CASE WHEN x'f4732dd1fd' THEN t1.c1 WHEN CAST(t1.c1 AS INTEGER) THEN (((t1.c1, t1.c1))<>((t1.c0, t1.c0))) ELSE (~ (t1.c0)) END ASC  NULLS LAST;
SELECT * FROM t1 WHERE ((((((((((t1.c0 IN (t1.c0, t1.c1)))AND(t1.c1)))OR(json_patch(t1.c0, t1.c1))))OR(((t1.c0)|(t1.c0)))))AND((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1)))))) ORDER BY ((CAST(t1.c0 AS NUMERIC))<(((t1.c1)||(t1.c0))));
SELECT * FROM t1 WHERE ((((((((((t1.c0 IN (t1.c0, t1.c1)))AND(t1.c1)))OR(json_patch(t1.c0, t1.c1))))OR(((t1.c0)|(t1.c0)))))AND((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1)))))) ORDER BY ((CAST(t1.c0 AS NUMERIC))<(((t1.c1)||(t1.c0))));
SELECT * FROM t1 WHERE ((((((((((t1.c0 IN (t1.c0, t1.c1)))AND(t1.c1)))OR(json_patch(t1.c0, t1.c1))))OR(((t1.c0)|(t1.c0)))))AND((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1)))))) ORDER BY ((CAST(t1.c0 AS NUMERIC))<(((t1.c1)||(t1.c0))));
SELECT * FROM t1 WHERE ((((((((((t1.c0 IN (t1.c0, t1.c1)))AND(t1.c1)))OR(json_patch(t1.c0, t1.c1))))OR(((t1.c0)|(t1.c0)))))AND((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1)))))) ORDER BY ((CAST(t1.c0 AS NUMERIC))<(((t1.c1)||(t1.c0))));
SELECT ALL * FROM t1 WHERE (((((446513759)AND(t1.c0))) BETWEEN (((((t1.c0)AND(NULL)))AND(t1.c0))) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY (+ (((8.53913989E8) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (((NOT (t1.c0)))=(json(t1.c1))), (~ (0.6175892364073619 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM t1 WHERE (((((((446513759)AND(t1.c0))) BETWEEN (((((t1.c0)AND(NULL)))AND(t1.c0))) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c0, t1.c1, t1.c0))) IN ())))) ORDER BY (+ (((8.53913989E8) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (((NOT (t1.c0)))=(json(t1.c1))), (~ (0.6175892364073619 COLLATE NOCASE))  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE (TRIM(((t1.c0)GLOB(t1.c1)), 7.5172127E8)) ORDER BY (+ (((8.53913989E8) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (((NOT (t1.c0)))=(json(t1.c1))), (~ (0.6175892364073619 COLLATE NOCASE))  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((((446513759)AND(t1.c0))) BETWEEN (((((t1.c0)AND(NULL)))AND(t1.c0))) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY (+ (((8.53913989E8) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (((NOT (t1.c0)))=(json(t1.c1))), (~ (0.6175892364073619 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM t1 WHERE (((((((446513759)AND(t1.c0))) BETWEEN (((((t1.c0)AND(NULL)))AND(t1.c0))) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c0, t1.c1, t1.c0))) IN ())))) ORDER BY (+ (((8.53913989E8) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (((NOT (t1.c0)))=(json(t1.c1))), (~ (0.6175892364073619 COLLATE NOCASE))  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE (TRIM(((t1.c0)GLOB(t1.c1)), 7.5172127E8)) ORDER BY (+ (((8.53913989E8) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (((NOT (t1.c0)))=(json(t1.c1))), (~ (0.6175892364073619 COLLATE NOCASE))  NULLS LAST LIMIT 0X1;
SELECT COUNT(*) FROM t1 WHERE (((((0.7960258449854591, t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c0, t1.c1))) IN (t1.c0, t1.c1))) ORDER BY (CAST(t1.c0 AS REAL) IN (((t1.c0) BETWEEN (t1.c0) AND ('1270701275')))) ASC, (t1.c0 IN (t1.c1, t1.c0)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM t1 WHERE (((((((0.7960258449854591, t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c0, t1.c1))) IN (t1.c0)))AND(TRIM(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))) ORDER BY (CAST(t1.c0 AS REAL) IN (((t1.c0) BETWEEN (t1.c0) AND ('1270701275')))) ASC, (t1.c0 IN (t1.c1, t1.c0)) COLLATE RTRIM DESC LIMIT 0X1 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c1)IS NOT(0.28840059555161757)) AS NUMERIC)) ORDER BY (CAST(t1.c0 AS REAL) IN (((t1.c0) BETWEEN (t1.c0) AND ('1270701275')))) ASC, (t1.c0 IN (t1.c1, t1.c0)) COLLATE RTRIM DESC LIMIT 0x1;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (t1.c1) ORDER BY x'2fbe' ASC, (CASE '0.20025627345273822'  WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c0 END IN (((t1.c0)%(t1.c0))))  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (t1.c1) ORDER BY x'2fbe' ASC, (CASE '0.20025627345273822'  WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c0 END IN (((t1.c0)%(t1.c0))))  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (t1.c0) ORDER BY x'2fbe' ASC, (CASE '0.20025627345273822'  WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c0 END IN (((t1.c0)%(t1.c0))))  NULLS LAST LIMIT 2;
SELECT MAX(t1.c1) FROM t1 WHERE ((((((((((((t1.c1, t1.c1, t1.c0))<=((t1.c0, t1.c0, x'df'))))AND(((t1.c0)IS(t1.c0)))))OR((((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, '', t1.c1)) AND ((t1.c0, t1.c0, t1.c0))))))OR(LIKELY(DISTINCT t1.c0))))AND(t1.c1 COLLATE BINARY)));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((((((((((t1.c1, t1.c1, t1.c0))<=((t1.c0, t1.c0, x'df'))))AND(((t1.c0)IS(t1.c0)))))OR((((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, '', t1.c1)) AND ((t1.c0, t1.c0, t1.c0))))))OR(LIKELY(DISTINCT t1.c0))))AND(t1.c1 COLLATE BINARY))) ORDER BY ((((t1.c0)LIKE(t1.c0))) BETWEEN (t1.c0) AND (CASE WHEN t1.c0 THEN t1.c0 END)) DESC  NULLS FIRST, ((t1.c0)&(t1.c1)) COLLATE NOCASE LIMIT 0x1;
SELECT * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(CAST(((t1.c0) ISNULL) AS NUMERIC)))) LIMIT 2;
SELECT * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(CAST(((t1.c0) ISNULL) AS NUMERIC)))) LIMIT 2;
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c1)>>(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '1161785472' END))) ORDER BY NULL  NULLS LAST, (+ (UNLIKELY(t1.c1))), '208945188';
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)>>(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '1161785472' END)))AND(((((t1.c0)>(t1.c0))) NOT NULL)))) ORDER BY NULL  NULLS LAST, (+ (UNLIKELY(t1.c1))), '208945188' LIMIT 0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((~ (t1.c1)) IN (t1.c1 COLLATE BINARY))) ORDER BY TRIM(-1.628956291E9, t1.c0) COLLATE NOCASE, ((t1.c1 COLLATE RTRIM)!=(CAST(t1.c0 AS TEXT))), (((t1.c0 IN (t1.c1))) NOTNULL);
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((~ (t1.c1)) IN (t1.c1 COLLATE BINARY))) ORDER BY TRIM(-1.628956291E9, t1.c0) COLLATE NOCASE, ((t1.c1 COLLATE RTRIM)<>(CAST(t1.c0 AS TEXT))), (((t1.c0 IN (t1.c1))) NOTNULL);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 THEN 0.9949873266072635 WHEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN (+ (t1.c1)) ELSE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) END);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c0 THEN 0.9949873266072635 WHEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN (+ (t1.c1)) ELSE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) END)AND((~ (x''))))) ORDER BY ((rtreenode(t1.c0, t1.c0))>('879610560' COLLATE RTRIM)) DESC LIMIT 1;
SELECT ALL * FROM t1 WHERE ((+ (x'' COLLATE BINARY)));
SELECT DISTINCT * FROM t1 WHERE ((((+ (x'' COLLATE BINARY)))AND((CASE t1.c0  WHEN t1.c0 THEN '-742346749' ELSE t1.c1 END IN (CAST(t1.c1 AS INTEGER)))))) ORDER BY (((t1.c0) IS FALSE) IN ()) INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY (((t1.c0) IS FALSE) IN ());
SELECT ALL * FROM t1 WHERE ((+ (x'' COLLATE BINARY)));
SELECT DISTINCT * FROM t1 WHERE ((((+ (x'' COLLATE BINARY)))AND((CASE t1.c0  WHEN t1.c0 THEN '-742346749' ELSE t1.c1 END IN (CAST(t1.c1 AS INTEGER)))))) ORDER BY (((t1.c0) IS FALSE) IN ()) INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY (((t1.c0) IS FALSE) IN ());
SELECT ALL * FROM t1 WHERE ((NULL IN ((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))));
SELECT * FROM t1 WHERE ((((NULL IN ((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))))AND(((((((t1.c1)OR(t1.c1)))AND(x'')))OR(t1.c1)) COLLATE BINARY))) LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE (((x'd3d48f')<=(CASE WHEN t1.c0 THEN t1.c1 END))) LIMIT 1;
SELECT ALL * FROM t1 WHERE ((NULL IN ((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))));
SELECT * FROM t1 WHERE ((((NULL IN ((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))))AND(((((((t1.c1)OR(t1.c1)))AND(x'')))OR(t1.c1)) COLLATE BINARY))) LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE (((x'd3d48f')<=(CASE WHEN t1.c0 THEN t1.c1 END))) LIMIT 1;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c1)==(t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, ((((((x'edaa4d43')OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))) AND (((0.6946925157735404 IN (t1.c1)), (t1.c0 IN ()), (((t1.c0, t1.c0, t1.c1))<=((t1.c1, 'J', t1.c1)))))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c1)<=(t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, ((((((x'edaa4d43')OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))) AND (((0.6946925157735404 IN (t1.c1)), (t1.c0 IN ()), (((t1.c0, t1.c0, t1.c1))<=((t1.c1, 'J', t1.c1)))))))AND(((t1.c0 COLLATE BINARY)<=((t1.c1 IN (t1.c0))))))) ORDER BY CAST(x'8f' AS REAL) DESC  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((CAST('87N[q' AS TEXT), ((0x7b386616) IS FALSE), (t1.c1 IN (t1.c1, t1.c1))))<((((t1.c1) ISNULL), 0.017100909215633897, x'')))) ORDER BY CAST(x'8f' AS REAL) DESC  NULLS LAST LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c0 COLLATE NOCASE) ISNULL))AND(((LIKE(t1.c1, t1.c1, 'w'))GLOB((t1.c1 IN ()))))));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c1) NOT NULL))<(0.9528105972176032 COLLATE RTRIM)));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((t1.c1) NOT NULL))<(0.9528105972176032 COLLATE RTRIM)))AND(UPPER(DISTINCT t1.c1)))) ORDER BY (((((t1.c1))!=((t1.c0)))) BETWEEN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) AND ((NOT (x'98c9')))) DESC  NULLS LAST, (((t1.c0 IN (t1.c1)))-(((t1.c0)%(t1.c1)))) DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (((((((x'8b00')OR(((t1.c1)IS(t1.c1)))))AND((t1.c0 IN (t1.c0)))))OR(((t1.c1)OR(t1.c0))))) ORDER BY (((((t1.c1))<>((t1.c0)))) BETWEEN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) AND ((NOT (x'98c9')))) DESC  NULLS LAST, (((t1.c0 IN (t1.c1)))-(((t1.c0)%(t1.c1)))) DESC  NULLS LAST LIMIT 0;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)|(t1.c1)))LIKE(LOWER(0.08695853246620833))));
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (((((((t1.c1)|(t1.c1)))LIKE(LOWER(0.08695853246620833))))AND(json_valid(x'')))) INTERSECT SELECT COUNT(*) FROM t1 WHERE ('-131715403');
SELECT COUNT(*) FROM t1 WHERE ((~ ((t1.c0 IN (t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((~ ((t1.c0 IN (t1.c0))))) ORDER BY ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))=(((t1.c0) ISNULL))) DESC  NULLS LAST LIMIT 2 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((- (((t1.c0)<<(t1.c0))))) ORDER BY ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))==(((t1.c0) ISNULL))) DESC  NULLS LAST LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE (JULIANDAY((((t1.c1))>=((t1.c1))), (t1.c0 IN (0.23558080062292297)), (+ (t1.c1)), ((t1.c1) BETWEEN (0.8675189074939252) AND (t1.c0))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((JULIANDAY((((t1.c1))=((t1.c1))), (t1.c0 IN (0.23558080062292297)), (+ (t1.c1)), ((t1.c1) BETWEEN (0.8675189074939252) AND (t1.c0))))AND(((((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))OR(UNLIKELY(t1.c0))))OR((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))))))AND(((((t1.c0)OR(t1.c1)))AND(t1.c1))))))) ORDER BY '0.02541726709560943' ASC LIMIT 0x0;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (NOT ((((t1.c0, t1.c0)) NOT BETWEEN ((0.7326516555029623, t1.c1)) AND ((t1.c0, t1.c1))))) ASC;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0)AND(((((t1.c0)AND(t1.c1)))AND(x'')) COLLATE BINARY COLLATE NOCASE))) ORDER BY (+ (CASE WHEN t1.c1 THEN NULL WHEN t1.c1 THEN t1.c0 END))  NULLS FIRST, CAST(((t1.c0) IS TRUE) AS INTEGER) ASC  NULLS FIRST, ((((((t1.c0)AND(0.979574147557417)))AND(t1.c0))) ISNULL) DESC  NULLS FIRST, ((((((((((((t1.c0)OR(t1.c1)))OR(0.1456563689502659)))OR(t1.c0)))AND(x'')))AND(t1.c1)))>(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) DESC;
SELECT COUNT(*) FROM t1 WHERE ((((('')OR((((t1.c0, t1.c0, t1.c1, t1.c1, 'gK룊YhI!l')) NOT BETWEEN ((NULL, t1.c1, t1.c1, t1.c0, t1.c0)) AND ((0.9801590407390862, t1.c1, NULL, t1.c1, t1.c0))))))OR(CAST(t1.c0 AS REAL))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((('')OR((((t1.c0, t1.c0, t1.c1, t1.c1, 'gK룊YhI!l')) NOT BETWEEN ((NULL, t1.c1, t1.c1, t1.c0, t1.c0)) AND ((0.9801590407390862, t1.c1, NULL, t1.c1, t1.c0))))))OR(CAST(t1.c0 AS REAL)))) ORDER BY CAST(CASE WHEN x'e3' THEN '2054253131' WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END AS NUMERIC) ASC  NULLS LAST, CASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c0)LIKE(t1.c1)) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) THEN t1.c0 COLLATE NOCASE END DESC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((DATETIME(t1.c1, NULL, t1.c0, t1.c1))+((t1.c0 IN ()))));
SELECT MAX(t1.c0) FROM t1 WHERE (((((DATETIME(t1.c1, NULL, t1.c0, t1.c1))+((t1.c0 IN ()))))AND((NOT (CAST(t1.c1 AS BLOB)))))) ORDER BY (~ ((((t1.c1))==((t1.c0))))), ((((((((json_patch(0.09513516461223104, t1.c0))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))OR(t1.c0))  NULLS LAST, CAST(CAST(t1.c0 AS NUMERIC) AS BLOB) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c0) BETWEEN (x'') AND (t1.c1)))IS NOT(CAST(t1.c1 AS NUMERIC)))) ORDER BY (~ ((((t1.c1))=((t1.c0))))), ((((((((json_patch(0.09513516461223104, t1.c0))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))OR(t1.c0))  NULLS LAST, CAST(CAST(t1.c0 AS NUMERIC) AS BLOB) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (t1.c1);
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY (- ((((t1.c1, t1.c0, t1.c1, t1.c1))>((t1.c0, t1.c0, t1.c1, t1.c0))))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (NULL) ORDER BY (- ((((t1.c1, t1.c0, t1.c1, t1.c1))>((t1.c0, t1.c0, t1.c1, t1.c0))))) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((t1.c1)*(t1.c0)))>=((((t1.c1))!=((t1.c0))))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c1)*(t1.c0)))==((((t1.c1))>((t1.c0))))));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) AS REAL)) ORDER BY (+ (((t1.c0)<<('0.24043267391032486')))) ASC, (((t1.c1)<=(t1.c1)) IN ()) DESC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) AS REAL)) ORDER BY ((t1.c0)<(t1.c0)) COLLATE BINARY LIMIT 0X0 INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN (NOT (t1.c0)) END) ORDER BY ((t1.c0)<(t1.c0)) COLLATE BINARY LIMIT 0X0;
SELECT * FROM t1 WHERE (((NULLIF(t1.c1, t1.c1)) NOT BETWEEN (TIME(t1.c1, t1.c1, t1.c0, t1.c1)) AND (DATE(t1.c1, t1.c0, t1.c0, t1.c1)))) ORDER BY ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)==(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END));
SELECT * FROM t1 WHERE (((NULLIF(t1.c1, t1.c1)) NOT BETWEEN (TIME(t1.c1, t1.c1, t1.c0, t1.c1)) AND (DATE(t1.c1, t1.c0, t1.c0, t1.c1)))) ORDER BY ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)=(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END));
SELECT * FROM t1 WHERE (((NULLIF(t1.c1, t1.c1)) NOT BETWEEN (TIME(t1.c1, t1.c1, t1.c0, t1.c1)) AND (DATE(t1.c1, t1.c0, t1.c0, t1.c1)))) ORDER BY ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)==(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END));
SELECT * FROM t1 WHERE (((NULLIF(t1.c1, t1.c1)) NOT BETWEEN (TIME(t1.c1, t1.c1, t1.c0, t1.c1)) AND (DATE(t1.c1, t1.c0, t1.c0, t1.c1)))) ORDER BY ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)=(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END));
SELECT * FROM t1 WHERE ((((((((((((t1.c1 IN ()))AND((t1.c0 IN (t1.c0)))))OR(NULL)))AND((t1.c0 IN ()))))AND('986045605' COLLATE NOCASE)))OR((+ (t1.c1)))));
SELECT * FROM t1 WHERE ((((((((((((t1.c1 IN ()))AND((t1.c0 IN (t1.c0)))))OR(NULL)))AND((t1.c0 IN ()))))AND('986045605' COLLATE NOCASE)))OR((+ (t1.c1))))) INTERSECT SELECT ALL * FROM t1 WHERE (t1.c0 COLLATE NOCASE);
SELECT * FROM t1 WHERE ((((((((((((t1.c1 IN ()))AND((t1.c0 IN (t1.c0)))))OR(NULL)))AND((t1.c0 IN ()))))AND('986045605' COLLATE NOCASE)))OR((+ (t1.c1)))));
SELECT * FROM t1 WHERE ((((((((((((t1.c1 IN ()))AND((t1.c0 IN (t1.c0)))))OR(NULL)))AND((t1.c0 IN ()))))AND('986045605' COLLATE NOCASE)))OR((+ (t1.c1))))) INTERSECT SELECT ALL * FROM t1 WHERE (t1.c0 COLLATE NOCASE);
SELECT * FROM t1 WHERE (CASE ((((t1.c0)OR(t1.c1)))OR(t1.c0))  WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN ((t1.c0)>=('0.14413539669011022')) WHEN ((t1.c0) IS FALSE) THEN ((t1.c0)|(t1.c1)) WHEN ((t1.c0) NOT NULL) THEN (((t1.c0, t1.c0, t1.c1, t1.c0, t1.c0))>=((t1.c0, '-2096924026', t1.c0, t1.c1, t1.c0))) WHEN CAST(NULL AS NUMERIC) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END WHEN ((t1.c1) ISNULL) THEN json_patch(t1.c0, t1.c1) END) ORDER BY (((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1)) BETWEEN ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), (((('7޺f]mS6V')OR(t1.c0)))AND(NULL)), (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c0))), CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, (t1.c1 IN ()))) AND (('N[', t1.c1 COLLATE RTRIM, (((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))), (~ (t1.c1)), t1.c1 COLLATE NOCASE)))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE ((((t1.c0)OR(t1.c1)))OR(t1.c0))  WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN ((t1.c0)>=('0.14413539669011022')) WHEN ((t1.c0) IS FALSE) THEN ((t1.c0)|(t1.c1)) WHEN ((t1.c0) NOT NULL) THEN (((t1.c0, t1.c0, t1.c1, t1.c0, t1.c0))>=((t1.c0, '-2096924026', t1.c0, t1.c1, t1.c0))) WHEN CAST(NULL AS NUMERIC) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END WHEN ((t1.c1) ISNULL) THEN json_patch(t1.c0, t1.c1) END)AND((TYPEOF(DISTINCT '-656900612') IN (NULL COLLATE RTRIM))))) ORDER BY (((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1)) BETWEEN ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), (((('7޺f]mS6V')OR(t1.c0)))AND(NULL)), (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c0))), CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, (t1.c1 IN ()))) AND (('N[', t1.c1 COLLATE RTRIM, (((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))), (~ (t1.c1)), t1.c1 COLLATE NOCASE)))  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE ((((t1.c0)OR(t1.c1)))OR(t1.c0))  WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN ((t1.c0)>=('0.14413539669011022')) WHEN ((t1.c0) IS FALSE) THEN ((t1.c0)|(t1.c1)) WHEN ((t1.c0) NOT NULL) THEN (((t1.c0, t1.c0, t1.c1, t1.c0, t1.c0))>=((t1.c0, '-2096924026', t1.c0, t1.c1, t1.c0))) WHEN CAST(NULL AS NUMERIC) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END WHEN ((t1.c1) ISNULL) THEN json_patch(t1.c0, t1.c1) END) ORDER BY (((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1)) BETWEEN ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), (((('7޺f]mS6V')OR(t1.c0)))AND(NULL)), (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c0))), CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, (t1.c1 IN ()))) AND (('N[', t1.c1 COLLATE RTRIM, (((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))), (~ (t1.c1)), t1.c1 COLLATE NOCASE)))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE ((((t1.c0)OR(t1.c1)))OR(t1.c0))  WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN ((t1.c0)>=('0.14413539669011022')) WHEN ((t1.c0) IS FALSE) THEN ((t1.c0)|(t1.c1)) WHEN ((t1.c0) NOT NULL) THEN (((t1.c0, t1.c0, t1.c1, t1.c0, t1.c0))>=((t1.c0, '-2096924026', t1.c0, t1.c1, t1.c0))) WHEN CAST(NULL AS NUMERIC) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END WHEN ((t1.c1) ISNULL) THEN json_patch(t1.c0, t1.c1) END)AND((TYPEOF(DISTINCT '-656900612') IN (NULL COLLATE RTRIM))))) ORDER BY (((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1)) BETWEEN ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), (((('7޺f]mS6V')OR(t1.c0)))AND(NULL)), (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c0))), CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, (t1.c1 IN ()))) AND (('N[', t1.c1 COLLATE RTRIM, (((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))), (~ (t1.c1)), t1.c1 COLLATE NOCASE)))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE NOCASE) ORDER BY t1.c1 ASC  NULLS LAST, (((t1.c1, t1.c0, t1.c0)) BETWEEN (('', ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c0 THEN x'' WHEN t1.c0 THEN t1.c1 END)) AND ((t1.c0 COLLATE BINARY, ((t1.c0)=(t1.c0)), ABS(t1.c1))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE NOCASE)AND((~ (CAST(t1.c0 AS REAL)))))) ORDER BY t1.c1 ASC  NULLS LAST, (((t1.c1, t1.c0, t1.c0)) BETWEEN (('', ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c0 THEN x'' WHEN t1.c0 THEN t1.c1 END)) AND ((t1.c0 COLLATE BINARY, ((t1.c0)==(t1.c0)), ABS(t1.c1)))) LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c1) BETWEEN (((t1.c0) NOTNULL)) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))))) ORDER BY t1.c1 ASC  NULLS LAST, (((t1.c1, t1.c0, t1.c0)) BETWEEN (('', ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c0 THEN x'' WHEN t1.c0 THEN t1.c1 END)) AND ((t1.c0 COLLATE BINARY, ((t1.c0)==(t1.c0)), ABS(t1.c1)))) LIMIT 0x2;
SELECT MAX(t1.c1) FROM t1 WHERE (x'147210');
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((x'147210')AND((((((((NOT (t1.c1)))AND(t1.c1 COLLATE RTRIM)))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (NULL)))))AND(((t1.c1)|(t1.c1))))))) ORDER BY ((0x601e7496) NOTNULL) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CASE WHEN CAST(t1.c1 AS REAL) THEN t1.c0 WHEN HEX(DISTINCT t1.c1) THEN ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c0)) END) ORDER BY ((0x601e7496) NOTNULL) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((('1722753480')LIKE(t1.c0)) IN ()));
SELECT DISTINCT * FROM t1 WHERE (((('1722753480')LIKE(t1.c0)) IN ())) ORDER BY (((- (t1.c0)))IS(((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))) DESC, CASE WHEN t1.c0 COLLATE NOCASE THEN (t1.c1 IN (t1.c1, NULL, t1.c1)) ELSE ((t1.c1) BETWEEN (t1.c0) AND (NULL)) END DESC, t1.c0 LIMIT 4;
SELECT ALL * FROM t1 WHERE (((('1722753480')LIKE(t1.c0)) IN ()));
SELECT DISTINCT * FROM t1 WHERE (((('1722753480')LIKE(t1.c0)) IN ())) ORDER BY (((- (t1.c0)))IS(((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))) DESC, CASE WHEN t1.c0 COLLATE NOCASE THEN (t1.c1 IN (t1.c1, NULL, t1.c1)) ELSE ((t1.c1) BETWEEN (t1.c0) AND (NULL)) END DESC, t1.c0 LIMIT 4;
SELECT COUNT(*) FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(((t1.c1)||(t1.c1)))))OR(((t1.c0)OR(0xffffffffed34bb55))))) ORDER BY ((((((((((((t1.c0) BETWEEN (t1.c0) AND ('-*')))AND(UPPER(DISTINCT t1.c1))))AND(((t1.c1) IS FALSE))))AND((- (t1.c0)))))OR(x'c6')))OR(t1.c0));
SELECT COUNT(*) FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(((t1.c1)||(t1.c1)))))OR(((t1.c0)OR(0Xffffffffed34bb55))))) ORDER BY ((((((((((((t1.c0) BETWEEN (t1.c0) AND ('-*')))AND(UPPER(DISTINCT t1.c1))))AND(((t1.c1) IS FALSE))))AND((- (t1.c0)))))OR(x'c6')))OR(t1.c0));
SELECT MAX(t1.c0) FROM t1 WHERE (LIKELY(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL END)) ORDER BY ((t1.c0 COLLATE RTRIM)AND((((t1.c0, t1.c1)) NOT BETWEEN ((x'', t1.c0)) AND ((t1.c0, x'bb'))))) ASC, CASE t1.c1 COLLATE NOCASE  WHEN ((t1.c0)<<(t1.c0)) THEN ((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)) WHEN (NOT (t1.c1)) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END ELSE ((t1.c0) NOT NULL) END DESC;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((LIKELY(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL END))AND(((((t1.c1)||(t1.c1))) BETWEEN (CASE t1.c0  WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END) AND (QUOTE(t1.c0)))))) ORDER BY CASE WHEN (t1.c0 IN ()) THEN CAST(t1.c0 AS BLOB) END LIMIT 0;
SELECT MIN(t1.c0) FROM t1 NOT INDEXED WHERE (((t1.c1) BETWEEN (853913989) AND (t1.c0)) COLLATE BINARY);
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c1) BETWEEN (853913989) AND (t1.c0)) COLLATE BINARY)AND((('')|((((t1.c0))=((t1.c0)))))))) ORDER BY ((CASE x'4f'  WHEN t1.c0 THEN t1.c1 END)OR(t1.c0 COLLATE NOCASE)) LIMIT 0X2 INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE ('-739622258' COLLATE NOCASE) ORDER BY ((CASE x'4f'  WHEN t1.c0 THEN t1.c1 END)OR(t1.c0 COLLATE NOCASE)) LIMIT 0X2;
SELECT * FROM t1 WHERE ((((t1.c1)OR(NULL)) IN ((((t1.c0, t1.c1, 0.15783579207541498)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c0)))))) ORDER BY (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END IN (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))), (NOT (((((t1.c0)OR(t1.c1)))OR(t1.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1)OR(NULL)) IN ((((t1.c0, t1.c1, 0.15783579207541498)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c0)))))) ORDER BY (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END IN (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))), (NOT (((((t1.c0)OR(t1.c1)))OR(t1.c0)))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c1)OR(NULL)) IN ((((t1.c0, t1.c1, 0.15783579207541498)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c0)))))) ORDER BY (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END IN (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))), (NOT (((((t1.c0)OR(t1.c1)))OR(t1.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1)OR(NULL)) IN ((((t1.c0, t1.c1, 0.15783579207541498)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c0)))))) ORDER BY (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END IN (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))), (NOT (((((t1.c0)OR(t1.c1)))OR(t1.c0)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1))) IS TRUE)) ORDER BY ((0.6524468312502093) ISNULL), ABS(((t1.c1)<(t1.c1))) DESC  NULLS FIRST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1))) IS TRUE)) ORDER BY ((0.6524468312502093) ISNULL), ABS(((t1.c1)<(t1.c1))) DESC  NULLS FIRST INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c0)&(t1.c1)))<=((((t1.c0, t1.c0, t1.c1, t1.c0))>((t1.c0, t1.c0, t1.c0, t1.c0)))))) ORDER BY ((0.6524468312502093) ISNULL), ABS(((t1.c1)<(t1.c1))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE WHEN t1.c0 THEN CASE WHEN '' THEN t1.c1 END WHEN (((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1)) AND ((0.28305881043194536, t1.c0))) THEN json_type('-617936325') END) ORDER BY (~ (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN -10710109 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)) DESC  NULLS LAST, ((CAST(t1.c0 AS NUMERIC)) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c0 THEN CASE WHEN '' THEN t1.c1 END WHEN (((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1)) AND ((0.28305881043194536, t1.c0))) THEN json_type('-617936325') END)AND(((CAST(t1.c0 AS BLOB)) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END) AND (((t1.c1)GLOB(t1.c1))))))) ORDER BY (~ (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN -10710109 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)) DESC  NULLS LAST, ((CAST(t1.c0 AS NUMERIC)) NOT NULL)  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE WHEN t1.c0 THEN CASE WHEN '' THEN t1.c1 END WHEN (((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1)) AND ((0.28305881043194536, t1.c0))) THEN json_type('-617936325') END) ORDER BY (~ (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN -10710109 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)) DESC  NULLS LAST, ((CAST(t1.c0 AS NUMERIC)) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c0 THEN CASE WHEN '' THEN t1.c1 END WHEN (((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1)) AND ((0.28305881043194536, t1.c0))) THEN json_type('-617936325') END)AND(((CAST(t1.c0 AS BLOB)) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END) AND (((t1.c1)GLOB(t1.c1))))))) ORDER BY (~ (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN -10710109 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)) DESC  NULLS LAST, ((CAST(t1.c0 AS NUMERIC)) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1 IN (t1.c0, t1.c1)))<((- (t1.c1))))) ORDER BY CASE t1.c1 COLLATE RTRIM  WHEN (t1.c1 IN (x'')) THEN x'e4' WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) THEN x'' END, (NULLIF(t1.c1, t1.c0) IN ((((-2096924026, t1.c1)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1))))), ((((t1.c1) NOTNULL))<(((t1.c0)OR(t1.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c1 IN (t1.c0, t1.c1)))<((- (t1.c1)))))AND(((UPPER(t1.c1))|(t1.c0 COLLATE BINARY))))) ORDER BY CASE t1.c1 COLLATE RTRIM  WHEN (t1.c1 IN (x'')) THEN x'e4' WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) THEN x'' END, (NULLIF(t1.c1, t1.c0) IN ((((0xffffffff83037a86, t1.c1)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1))))), ((((t1.c1) NOTNULL))<(((t1.c0)OR(t1.c0)))) ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))=(((t1.c0)>>(t1.c1))))) ORDER BY 0.7993433906392416 ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))=(((t1.c0)>>(t1.c1))))) ORDER BY 0.7993433906392416 ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, '{')) NOT BETWEEN ((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)), CAST(t1.c0 AS BLOB))) AND ((((t1.c1) IS FALSE), (t1.c0 IN (t1.c0)))))) ORDER BY 0.7993433906392416 ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))=(((t1.c0)>>(t1.c1))))) ORDER BY 0.7993433906392416 ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))=(((t1.c0)>>(t1.c1))))) ORDER BY 0.7993433906392416 ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, '{')) NOT BETWEEN ((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)), CAST(t1.c0 AS BLOB))) AND ((((t1.c1) IS FALSE), (t1.c0 IN (t1.c0)))))) ORDER BY 0.7993433906392416 ASC  NULLS LAST LIMIT 1;
SELECT * FROM t1 WHERE ((CAST(t1.c0 AS TEXT) IN (x'39', (((x'f0', t1.c0, t1.c0))=((t1.c1, t1.c0, t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((CAST(t1.c0 AS TEXT) IN (x'39', (((x'f0', t1.c0, t1.c0))=((t1.c1, t1.c0, t1.c1))))))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0))) NOT BETWEEN (((t1.c1)>>(t1.c0))) AND (NULL))))) ORDER BY LOWER(((t1.c0)LIKE(t1.c0)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY LOWER(((t1.c0)LIKE(t1.c0)))  NULLS LAST;
SELECT * FROM t1 WHERE ((CAST(t1.c0 AS TEXT) IN (x'39', (((x'f0', t1.c0, t1.c0))=((t1.c1, t1.c0, t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((CAST(t1.c0 AS TEXT) IN (x'39', (((x'f0', t1.c0, t1.c0))=((t1.c1, t1.c0, t1.c1))))))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0))) NOT BETWEEN (((t1.c1)>>(t1.c0))) AND (NULL))))) ORDER BY LOWER(((t1.c0)LIKE(t1.c0)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY LOWER(((t1.c0)LIKE(t1.c0)))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY CASE CASE WHEN '1265514506' THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END  WHEN '<' THEN (- (t1.c0)) WHEN CAST(t1.c1 AS BLOB) THEN CAST(NULL AS TEXT) WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 END THEN CAST(t1.c1 AS INTEGER) END  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY CASE CASE WHEN '1265514506' THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END  WHEN '<' THEN (- (t1.c0)) WHEN CAST(t1.c1 AS BLOB) THEN CAST(NULL AS TEXT) WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 END THEN CAST(t1.c1 AS INTEGER) END  NULLS FIRST;
SELECT MAX(t1.c0) FROM t1 WHERE (((t1.c1) NOT NULL) COLLATE BINARY);
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((t1.c1) NOT NULL) COLLATE BINARY)AND(((((((t1.c0 COLLATE NOCASE)OR((+ (t1.c1)))))OR(((t1.c0)OR(t1.c1)))))OR(((t1.c1)+(t1.c1))))))) INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((t1.c1, t1.c0, t1.c1, t1.c0))<=((0.10735724162195293, t1.c0, t1.c1, t1.c0))), ((t1.c1)<(t1.c0)), ((t1.c1)>(t1.c1))))<((((((t1.c0)OR(t1.c1)))OR(t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), (t1.c1 IN (1571916603))))));
SELECT * FROM t1 WHERE (((((((t1.c0) NOT NULL))OR(((t1.c0) IS TRUE))))OR((+ (''))))) ORDER BY '-1', ((~ (t1.c1)) IN (((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), t1.c0 COLLATE BINARY))  NULLS FIRST, CASE WHEN ((x'dd4110')||(t1.c0)) THEN UPPER(t1.c0) WHEN (((0.18696523204262372))>((t1.c1))) THEN t1.c1 WHEN ((t1.c1)IS NOT('}57o5')) THEN ((((t1.c1)OR(t1.c1)))AND(t1.c1)) WHEN CAST(x'67' AS TEXT) THEN CAST(t1.c0 AS BLOB) ELSE ((t1.c1) ISNULL) END ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0) NOT NULL))OR(((t1.c0) IS TRUE))))OR((+ ('')))))AND(GLOB(x'' COLLATE BINARY, load_extension(t1.c1, t1.c1))))) ORDER BY 0.2710979713268209 DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (json_quote(t1.c1 COLLATE RTRIM)) ORDER BY 0.2710979713268209 DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((t1.c0) NOT NULL))OR(((t1.c0) IS TRUE))))OR((+ (''))))) ORDER BY '-1', ((~ (t1.c1)) IN (((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), t1.c0 COLLATE BINARY))  NULLS FIRST, CASE WHEN ((x'dd4110')||(t1.c0)) THEN UPPER(t1.c0) WHEN (((0.18696523204262372))>((t1.c1))) THEN t1.c1 WHEN ((t1.c1)IS NOT('}57o5')) THEN ((((t1.c1)OR(t1.c1)))AND(t1.c1)) WHEN CAST(x'67' AS TEXT) THEN CAST(t1.c0 AS BLOB) ELSE ((t1.c1) ISNULL) END ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0) NOT NULL))OR(((t1.c0) IS TRUE))))OR((+ ('')))))AND(GLOB(x'' COLLATE BINARY, load_extension(t1.c1, t1.c1))))) ORDER BY 0.2710979713268209 DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (json_quote(t1.c1 COLLATE RTRIM)) ORDER BY 0.2710979713268209 DESC  NULLS LAST;
SELECT * FROM t1 NOT INDEXED WHERE ((((0.1028806227644099))<=(('7')))) ORDER BY t1.c1  NULLS LAST, (((('-1787681106') NOT NULL)) ISNULL);
SELECT * FROM t1 WHERE ((((((0.1028806227644099))<(('7'))))AND((((x''))<>(((((t1.c1, t1.c0))>=((t1.c0, t1.c1))))))))) ORDER BY CAST(((t1.c1)<(0.6517050205833143)) AS TEXT)  NULLS LAST, CAST(((t1.c1) NOT NULL) AS REAL)  NULLS LAST;
SELECT * FROM t1 NOT INDEXED WHERE ((((0.1028806227644099))<=(('7')))) ORDER BY t1.c1  NULLS LAST, (((('-1787681106') NOT NULL)) ISNULL);
SELECT * FROM t1 WHERE ((((((0.1028806227644099))<(('7'))))AND((((x''))<>(((((t1.c1, t1.c0))>=((t1.c0, t1.c1))))))))) ORDER BY CAST(((t1.c1)<(0.6517050205833143)) AS TEXT)  NULLS LAST, CAST(((t1.c1) NOT NULL) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 END IN (((t1.c1) ISNULL)))) ORDER BY (NOT ((((t1.c0, x'09ac5695b6', t1.c0))<=((t1.c0, t1.c1, t1.c1))))) ASC  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((t1.c0)) AND (((~ (t1.c0)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 END IN (((t1.c1) ISNULL)))) ORDER BY (NOT ((((t1.c0, x'09ac5695b6', t1.c0))<=((t1.c0, t1.c1, t1.c1))))) ASC  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((t1.c0)) AND (((~ (t1.c0))))) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE RTRIM) NOT BETWEEN (((t1.c1)<(t1.c0))) AND (t1.c0 COLLATE BINARY))) ORDER BY (NOT ((((t1.c0, x'09ac5695b6', t1.c0))<=((t1.c0, t1.c1, t1.c1))))) ASC  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((t1.c0)) AND (((~ (t1.c0)))));
SELECT MAX(t1.c0) FROM t1 WHERE (LIKELY(DISTINCT (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))) ORDER BY ((t1.c1)<=(t1.c0)) COLLATE NOCASE, (((('g(w쎋(') NOT BETWEEN (t1.c1) AND (t1.c1))) NOT NULL) DESC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (LIKELY(DISTINCT (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))) ORDER BY CASE WHEN ((t1.c0)LIKE(t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN (- (t1.c0)) END ASC  NULLS FIRST, t1.c1  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE (((x'f0b4') NOT BETWEEN (NULLIF(t1.c1, t1.c0)) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY ((json_array(t1.c1, t1.c1))<=(CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END));
SELECT MIN(t1.c1) FROM t1 WHERE (((x'f0b4') NOT BETWEEN (NULLIF(t1.c1, t1.c0)) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (NOT (t1.c0)) DESC  NULLS LAST, '36702957' DESC  NULLS FIRST INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c0)>(t1.c1))) NOT BETWEEN ((((t1.c0, t1.c0, 403226663))!=((t1.c1, t1.c1, t1.c1)))) AND (((t1.c0) IS FALSE)))) ORDER BY (NOT (t1.c0)) DESC  NULLS LAST, '36702957' DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST((- (t1.c1)) AS BLOB)) ORDER BY (~ (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))) DESC;
SELECT DISTINCT * FROM t1 NOT INDEXED WHERE (((CAST((- (t1.c1)) AS BLOB))AND(x'' COLLATE BINARY))) ORDER BY (((((t1.c1)) BETWEEN (('z')) AND ((t1.c0))))<(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))  NULLS LAST, ((t1.c0) NOT BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL END) AND ('0.13695069591214615'))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (0.7104407479743865) ORDER BY (((((t1.c1)) BETWEEN (('z')) AND ((t1.c0))))<(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))  NULLS LAST, ((t1.c0) NOT BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL END) AND ('0.13695069591214615'))  NULLS LAST LIMIT 0X0;
SELECT * FROM t1 WHERE (CAST((- (t1.c1)) AS BLOB)) ORDER BY (~ (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))) DESC;
SELECT DISTINCT * FROM t1 NOT INDEXED WHERE (((CAST((- (t1.c1)) AS BLOB))AND(x'' COLLATE BINARY))) ORDER BY (((((t1.c1)) BETWEEN (('z')) AND ((t1.c0))))<(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))  NULLS LAST, ((t1.c0) NOT BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL END) AND ('0.13695069591214615'))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (0.7104407479743865) ORDER BY (((((t1.c1)) BETWEEN (('z')) AND ((t1.c0))))<(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))  NULLS LAST, ((t1.c0) NOT BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL END) AND ('0.13695069591214615'))  NULLS LAST LIMIT 0X0;
SELECT * FROM t1 WHERE ((- (((t1.c0)LIKE(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE ((- (((t1.c0)LIKE(t1.c0)))));
SELECT * FROM t1 WHERE ((- (((t1.c0)LIKE(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE ((- (((t1.c0)LIKE(t1.c0)))));
SELECT MIN(t1.c0) FROM t1 WHERE ((((NOT (t1.c1)))LIKE((((t1.c1, t1.c0, t1.c1))<=((t1.c1, t1.c1, t1.c0)))))) ORDER BY ((((((t1.c0 COLLATE NOCASE)AND((t1.c0 IN ()))))AND(((t1.c1) ISNULL))))AND(x''));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((NOT (t1.c1)))LIKE((((t1.c1, t1.c0, t1.c1))==((t1.c1, t1.c1, t1.c0)))))) ORDER BY ((((((t1.c0 COLLATE NOCASE)AND((t1.c0 IN ()))))AND(((t1.c1) ISNULL))))AND(x''));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (MAX(((t1.c1)<(t1.c0)), ((t1.c1)<<(t1.c1)), CASE '-278721965'  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, t1.c1, CASE WHEN t1.c1 THEN 1726198807 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END, NULLIF(DISTINCT t1.c1, t1.c0)));
SELECT MAX(t1.c0) FROM t1 WHERE (MAX(((t1.c1)<(t1.c0)), ((t1.c1)<<(t1.c1)), CASE '-278721965'  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, t1.c1, CASE WHEN t1.c1 THEN 1726198807 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END, NULLIF(DISTINCT t1.c1, t1.c0))) LIMIT 0X3 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (x'19') LIMIT 0x3;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY (t1.c0 COLLATE NOCASE IN (((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1))))  NULLS LAST, 76688209 DESC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY (t1.c0 COLLATE NOCASE IN (((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1))))  NULLS LAST, 76688209 DESC  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE ((((((((((((t1.c1 IN (t1.c0)))OR(t1.c1 COLLATE BINARY)))AND((t1.c0 IN (t1.c0, t1.c0)))))AND(((t1.c1)LIKE(t1.c0)))))AND(((t1.c1)>(t1.c0)))))AND(((t1.c1) IS FALSE)))) ORDER BY t1.c1  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE ((((((((((((t1.c1 IN (t1.c0)))OR(t1.c1 COLLATE BINARY)))AND((t1.c0 IN (t1.c0, t1.c0)))))AND(((t1.c1)LIKE(t1.c0)))))AND(((t1.c1)>(t1.c0)))))AND(((t1.c1) IS FALSE)))) ORDER BY CASE WHEN 0.6824586658757834 THEN CAST(t1.c1 AS TEXT) ELSE '溑b+\' END DESC  NULLS FIRST, (- (0.4626250932470428)) COLLATE NOCASE DESC  NULLS LAST LIMIT 1;
SELECT * FROM t1 WHERE (CAST(((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)) AS TEXT)) ORDER BY t1.c0 COLLATE NOCASE  NULLS FIRST, CAST(NULL AS BLOB) DESC  NULLS LAST, ((((t1.c0, t1.c1, t1.c0))<=((t1.c1, t1.c1, t1.c1))) IN (((t1.c1) NOT NULL))) DESC;
SELECT * FROM t1 WHERE (((CAST(((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)) AS TEXT))AND(((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))>=(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))))) ORDER BY ((((((UPPER(t1.c1))AND(UPPER(t1.c1))))OR(CAST(t1.c1 AS REAL))))AND(((t1.c0) ISNULL))) DESC  NULLS LAST LIMIT 3;
SELECT * FROM t1 WHERE (CAST(((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)) AS TEXT)) ORDER BY t1.c0 COLLATE NOCASE  NULLS FIRST, CAST(NULL AS BLOB) DESC  NULLS LAST, ((((t1.c0, t1.c1, t1.c0))<=((t1.c1, t1.c1, t1.c1))) IN (((t1.c1) NOT NULL))) DESC;
SELECT * FROM t1 WHERE (((CAST(((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)) AS TEXT))AND(((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))>=(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))))) ORDER BY ((((((UPPER(t1.c1))AND(UPPER(t1.c1))))OR(CAST(t1.c1 AS REAL))))AND(((t1.c0) ISNULL))) DESC  NULLS LAST LIMIT 3;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY CAST((((t1.c0, t1.c1, t1.c0))<((t1.c0, NULL, t1.c1))) AS NUMERIC) DESC  NULLS LAST, CASE t1.c0 COLLATE BINARY  WHEN t1.c0 THEN MIN(t1.c1, t1.c1, t1.c1, t1.c1) END;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY CAST((((t1.c0, t1.c1, t1.c0))<((t1.c0, NULL, t1.c1))) AS NUMERIC) DESC  NULLS LAST, CASE t1.c0 COLLATE BINARY  WHEN t1.c0 THEN MIN(t1.c1, t1.c1, t1.c1, t1.c1) END INTERSECT SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY CAST((((t1.c0, t1.c1, t1.c0))<((t1.c0, NULL, t1.c1))) AS NUMERIC) DESC  NULLS LAST, CASE t1.c0 COLLATE BINARY  WHEN t1.c0 THEN MIN(t1.c1, t1.c1, t1.c1, t1.c1) END;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY CAST((((t1.c0, t1.c1, t1.c0))<((t1.c0, NULL, t1.c1))) AS NUMERIC) DESC  NULLS LAST, CASE t1.c0 COLLATE BINARY  WHEN t1.c0 THEN MIN(t1.c1, t1.c1, t1.c1, t1.c1) END;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY CAST((((t1.c0, t1.c1, t1.c0))<((t1.c0, NULL, t1.c1))) AS NUMERIC) DESC  NULLS LAST, CASE t1.c0 COLLATE BINARY  WHEN t1.c0 THEN MIN(t1.c1, t1.c1, t1.c1, t1.c1) END INTERSECT SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY CAST((((t1.c0, t1.c1, t1.c0))<((t1.c0, NULL, t1.c1))) AS NUMERIC) DESC  NULLS LAST, CASE t1.c0 COLLATE BINARY  WHEN t1.c0 THEN MIN(t1.c1, t1.c1, t1.c1, t1.c1) END;
SELECT ALL * FROM t1 WHERE (((t1.c1) ISNULL) COLLATE NOCASE) ORDER BY (((t1.c0 IN ()))==(((((((((((-521905785)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c1) ISNULL) COLLATE NOCASE)AND((t1.c1 COLLATE RTRIM IN ())))) ORDER BY (((t1.c0 IN ()))==(((((((((((0xffffffffe0e45987)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY (((t1.c0 IN ()))==(((((((((((0Xffffffffe0e45987)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))) ASC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((t1.c1) ISNULL) COLLATE NOCASE) ORDER BY (((t1.c0 IN ()))==(((((((((((-521905785)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c1) ISNULL) COLLATE NOCASE)AND((t1.c1 COLLATE RTRIM IN ())))) ORDER BY (((t1.c0 IN ()))==(((((((((((0xffffffffe0e45987)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY (((t1.c0 IN ()))==(((((((((((0Xffffffffe0e45987)AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))) ASC  NULLS FIRST LIMIT 0x0;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), ((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(0x5d06f61b)), 0.8670393980205976, ((t1.c1) IS TRUE)))>(('-687481056', CASE x'49'  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN 0.45226725972708415 THEN t1.c1 ELSE x'078987' END, CASE t1.c0  WHEN t1.c0 THEN NULL END))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), ((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(0X5d06f61b)), 0.8670393980205976, ((t1.c1) IS TRUE)))>(('-687481056', CASE x'49'  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN 0.45226725972708415 THEN t1.c1 ELSE x'078987' END, CASE t1.c0  WHEN t1.c0 THEN NULL END))))AND((((t1.c1))<((t1.c1))) COLLATE BINARY))) LIMIT 0x4 INTERSECT SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE BINARY) NOTNULL)) LIMIT 0x4;
SELECT MAX(t1.c1) FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)/((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)/((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))))) LIMIT 0 INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE WHEN ((t1.c1)=(t1.c0)) THEN TRIM(t1.c0) ELSE (t1.c0 IN ()) END) LIMIT 0x0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((~ (t1.c0))) NOT BETWEEN (((t1.c1) IS FALSE)) AND ((- (t1.c0)))));
SELECT MIN(t1.c1) FROM t1 WHERE ((((((~ (t1.c0))) NOT BETWEEN (((t1.c1) IS FALSE)) AND ((- (t1.c0)))))AND(''))) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 END) IS TRUE) DESC  NULLS LAST INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (CAST((t1.c1 IN ()) AS INTEGER)) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 END) IS TRUE) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (CAST('' AS REAL) COLLATE BINARY);
SELECT * FROM t1 WHERE (CAST('' AS REAL) COLLATE BINARY) ORDER BY CAST('1778662627' AS REAL), ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) COLLATE RTRIM, (((t1.c0)) NOT BETWEEN ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 END)))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE ('1020345693') ORDER BY CAST('1778662627' AS REAL), ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) COLLATE RTRIM, (((t1.c0)) NOT BETWEEN ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 END)))  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 WHERE (CAST('' AS REAL) COLLATE BINARY);
SELECT * FROM t1 WHERE (CAST('' AS REAL) COLLATE BINARY) ORDER BY CAST('1778662627' AS REAL), ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) COLLATE RTRIM, (((t1.c0)) NOT BETWEEN ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 END)))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE ('1020345693') ORDER BY CAST('1778662627' AS REAL), ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) COLLATE RTRIM, (((t1.c0)) NOT BETWEEN ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 END)))  NULLS FIRST LIMIT 0x0;
SELECT MIN(t1.c0) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (((t1.c0) IS FALSE)) AND (((NULL)-(t1.c0))))) ORDER BY t1.c1 ASC, NULL ASC, (NOT (t1.c1 COLLATE NOCASE)), (((t1.c0))>(((- (t1.c1)))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (((t1.c0) IS FALSE)) AND (((NULL)-(t1.c0)))))AND(CASE WHEN t1.c1 THEN 0.8657251623592518 ELSE t1.c1 END COLLATE NOCASE))) ORDER BY t1.c1 ASC, NULL ASC, (NOT (t1.c1 COLLATE NOCASE)), (((t1.c0))>(((- (t1.c1))))) LIMIT 0X0 INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (((((((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(((((((NULL)AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))))AND(((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))))AND('1956082742'))) ORDER BY t1.c1 ASC, NULL ASC, (NOT (t1.c1 COLLATE NOCASE)), (((t1.c0))>(((- (t1.c1))))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY CASE ((t1.c1)IS NOT(t1.c1))  WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN t1.c1 COLLATE NOCASE WHEN LENGTH(t1.c0) THEN (+ (t1.c0)) ELSE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) END, (((((t1.c0) NOT NULL)))=((CAST(t1.c0 AS REAL)))) DESC  NULLS LAST, CASE WHEN CASE '-1408692428'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'2c' WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN CAST(x'4caf2a2d' AS INTEGER) WHEN (NOT (t1.c0)) THEN t1.c1 ELSE ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) END ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((t1.c1)AND((((((((t1.c0 IN (t1.c1)))OR((~ (t1.c0)))))AND((- (t1.c0)))))AND(((t1.c0)==(t1.c1))))))) ORDER BY CASE ((t1.c1)IS NOT(t1.c1))  WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN t1.c1 COLLATE NOCASE WHEN LENGTH(t1.c0) THEN (+ (t1.c0)) ELSE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) END, (((((t1.c0) NOT NULL)))=((CAST(t1.c0 AS REAL)))) DESC  NULLS LAST, CASE WHEN CASE '-1408692428'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'2c' WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN CAST(x'4caf2a2d' AS INTEGER) WHEN (NOT (t1.c0)) THEN t1.c1 ELSE ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) END ASC  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (((NOT (t1.c1)) IN (CASE t1.c1  WHEN x'0021' THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))) ORDER BY CASE ((t1.c1)IS NOT(t1.c1))  WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN t1.c1 COLLATE NOCASE WHEN LENGTH(t1.c0) THEN (+ (t1.c0)) ELSE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) END, (((((t1.c0) NOT NULL)))==((CAST(t1.c0 AS REAL)))) DESC  NULLS LAST, CASE WHEN CASE '-1408692428'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'2c' WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN CAST(x'4caf2a2d' AS INTEGER) WHEN (NOT (t1.c0)) THEN t1.c1 ELSE ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) END ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY CASE ((t1.c1)IS NOT(t1.c1))  WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN t1.c1 COLLATE NOCASE WHEN LENGTH(t1.c0) THEN (+ (t1.c0)) ELSE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) END, (((((t1.c0) NOT NULL)))=((CAST(t1.c0 AS REAL)))) DESC  NULLS LAST, CASE WHEN CASE '-1408692428'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'2c' WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN CAST(x'4caf2a2d' AS INTEGER) WHEN (NOT (t1.c0)) THEN t1.c1 ELSE ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) END ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((t1.c1)AND((((((((t1.c0 IN (t1.c1)))OR((~ (t1.c0)))))AND((- (t1.c0)))))AND(((t1.c0)==(t1.c1))))))) ORDER BY CASE ((t1.c1)IS NOT(t1.c1))  WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN t1.c1 COLLATE NOCASE WHEN LENGTH(t1.c0) THEN (+ (t1.c0)) ELSE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) END, (((((t1.c0) NOT NULL)))=((CAST(t1.c0 AS REAL)))) DESC  NULLS LAST, CASE WHEN CASE '-1408692428'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'2c' WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN CAST(x'4caf2a2d' AS INTEGER) WHEN (NOT (t1.c0)) THEN t1.c1 ELSE ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) END ASC  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (((NOT (t1.c1)) IN (CASE t1.c1  WHEN x'0021' THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))) ORDER BY CASE ((t1.c1)IS NOT(t1.c1))  WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN t1.c1 COLLATE NOCASE WHEN LENGTH(t1.c0) THEN (+ (t1.c0)) ELSE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) END, (((((t1.c0) NOT NULL)))==((CAST(t1.c0 AS REAL)))) DESC  NULLS LAST, CASE WHEN CASE '-1408692428'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'2c' WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN CAST(x'4caf2a2d' AS INTEGER) WHEN (NOT (t1.c0)) THEN t1.c1 ELSE ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) END ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((IFNULL(t1.c1, 0.07751689649021953)) NOTNULL));
SELECT DISTINCT * FROM t1 WHERE (((((IFNULL(t1.c1, 0.07751689649021953)) NOTNULL))AND(CASE WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END THEN (t1.c1 IN (t1.c1)) WHEN t1.c1 COLLATE RTRIM THEN t1.c1 WHEN (t1.c0 IN ()) THEN ((t1.c0)AND(t1.c0)) END)));
SELECT * FROM t1 WHERE (((IFNULL(t1.c1, 0.07751689649021953)) NOTNULL));
SELECT DISTINCT * FROM t1 WHERE (((((IFNULL(t1.c1, 0.07751689649021953)) NOTNULL))AND(CASE WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END THEN (t1.c1 IN (t1.c1)) WHEN t1.c1 COLLATE RTRIM THEN t1.c1 WHEN (t1.c0 IN ()) THEN ((t1.c0)AND(t1.c0)) END)));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)+(t1.c0))) BETWEEN (t1.c0) AND (NULL)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c0)+(t1.c0))) BETWEEN (t1.c0) AND (NULL))) ORDER BY ''  NULLS LAST, ((((t1.c0)<=(t1.c0))) NOT BETWEEN (CAST(t1.c0 AS INTEGER)) AND ((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, x'')) AND ((t1.c1, t1.c1, t1.c1)))))  NULLS FIRST, NULL, ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN '[' THEN t1.c0 END)LIKE(MAX(t1.c0, t1.c1))) LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ''  NULLS LAST, ((((t1.c0)<=(t1.c0))) NOT BETWEEN (CAST(t1.c0 AS INTEGER)) AND ((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, x'')) AND ((t1.c1, t1.c1, t1.c1)))))  NULLS FIRST, NULL, ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN '[' THEN t1.c0 END)LIKE(MAX(t1.c0, t1.c1))) LIMIT 0;
SELECT ALL COUNT(*) FROM t1 WHERE (TRIM(0.27430078288141846));
SELECT ALL COUNT(*) FROM t1 WHERE (TRIM(0.27430078288141846)) ORDER BY ((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1 COLLATE RTRIM)))AND(((0.42579386675532227)==(t1.c1)))))AND(t1.c0 COLLATE NOCASE)) ASC, ((0.7288860722330672 COLLATE RTRIM)-(((t1.c1)OR(t1.c0)))) ASC  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)-(t1.c0)))%(t1.c0))) ORDER BY ((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1 COLLATE RTRIM)))AND(((0.42579386675532227)=(t1.c1)))))AND(t1.c0 COLLATE NOCASE)) ASC, ((0.7288860722330672 COLLATE RTRIM)-(((t1.c1)OR(t1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))*(CAST(t1.c0 AS REAL))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))*(CAST(t1.c0 AS REAL)))) ORDER BY t1.c1  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((COALESCE(DISTINCT t1.c1, -1576121710)) NOT BETWEEN (t1.c1) AND (((t1.c0)<>(t1.c1))))) ORDER BY CAST(((t1.c1) IS FALSE) AS TEXT) DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (((t1.c0)<(t1.c1))) AND (((t1.c0) NOT BETWEEN ('-83606605') AND (t1.c0)))) DESC  NULLS LAST, t1.c0  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE (((COALESCE(DISTINCT t1.c1, -1576121710)) NOT BETWEEN (t1.c1) AND (((t1.c0)!=(t1.c1))))) ORDER BY t1.c0 ASC  NULLS LAST;
SELECT * FROM t1 WHERE ((+ (((t1.c0) NOT NULL))));
SELECT DISTINCT * FROM t1 WHERE ((((+ (((t1.c0) NOT NULL))))AND((t1.c1 IN (t1.c1)) COLLATE RTRIM))) ORDER BY NULL, (- (t1.c1)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST;
SELECT * FROM t1 WHERE ((+ (((t1.c0) NOT NULL))));
SELECT DISTINCT * FROM t1 WHERE ((((+ (((t1.c0) NOT NULL))))AND((t1.c1 IN (t1.c1)) COLLATE RTRIM))) ORDER BY NULL, (- (t1.c1)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c1)<(t1.c1))) IS TRUE)) ORDER BY (((t1.c0) IS FALSE) IN (0.2008883837822799)), HEX(((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c1))) DESC, (((0.7457769854643254, '-1962816202', t1.c1)) NOT BETWEEN (((NOT (t1.c0)), ((((t1.c0)AND(t1.c1)))AND(t1.c1)), ((t1.c0)-(t1.c1)))) AND ((NULL, ((t1.c1)GLOB(t1.c1)), ((0.09618319594565305) NOTNULL)))) DESC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((((t1.c1)<(t1.c1))) IS TRUE))AND(((((t1.c0 IN ()), CASE WHEN t1.c1 THEN '%XC!쾮-i' WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END, (t1.c1 IN (t1.c0, t1.c0))))==((t1.c1, CAST(t1.c1 AS NUMERIC), t1.c0)))))) ORDER BY NULL, (((~ (t1.c1))) NOT BETWEEN (HEX(t1.c0)) AND (((t1.c1) IS FALSE))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0))) NOTNULL));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0))) NOTNULL))AND((((t1.c0 IN ())) NOT NULL)))) INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((NOT (t1.c1)))OR(t1.c1)))OR(CAST(t1.c1 AS TEXT))));
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 COLLATE RTRIM THEN t1.c0 WHEN (t1.c0 IN (x'01')) THEN ((((t1.c0)OR(t1.c1)))OR(t1.c1)) WHEN (((t1.c1, t1.c0))>=((t1.c0, t1.c1))) THEN ((t1.c0) NOT NULL) WHEN TRIM(DISTINCT t1.c1, t1.c1) THEN (t1.c1 IN (t1.c0, t1.c1)) ELSE NULL COLLATE RTRIM END) ORDER BY (- (0.17620905227760986)) ASC  NULLS LAST, (((t1.c1)==(NULL)) IN ()) DESC;
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 COLLATE RTRIM THEN t1.c0 WHEN (t1.c0 IN (x'01')) THEN ((((t1.c0)OR(t1.c1)))OR(t1.c1)) WHEN (((t1.c1, t1.c0))==((t1.c0, t1.c1))) THEN ((t1.c0) NOT NULL) WHEN TRIM(DISTINCT t1.c1, t1.c1) THEN (t1.c1 IN (t1.c0, t1.c1)) ELSE NULL COLLATE RTRIM END) ORDER BY (- (0.17620905227760986)) ASC  NULLS LAST, (((t1.c1)==(NULL)) IN ()) DESC LIMIT 0X1 INTERSECT SELECT ALL * FROM t1 WHERE ((((+ ('-1126985942'))) BETWEEN (t1.c1) AND ((t1.c0 IN ())))) ORDER BY (- (0.17620905227760986)) ASC  NULLS LAST, (((t1.c1)=(NULL)) IN ()) DESC LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 COLLATE RTRIM THEN t1.c0 WHEN (t1.c0 IN (x'01')) THEN ((((t1.c0)OR(t1.c1)))OR(t1.c1)) WHEN (((t1.c1, t1.c0))>=((t1.c0, t1.c1))) THEN ((t1.c0) NOT NULL) WHEN TRIM(DISTINCT t1.c1, t1.c1) THEN (t1.c1 IN (t1.c0, t1.c1)) ELSE NULL COLLATE RTRIM END) ORDER BY (- (0.17620905227760986)) ASC  NULLS LAST, (((t1.c1)==(NULL)) IN ()) DESC;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))/(((('-223139294', t1.c0))==((t1.c1, t1.c0))))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))/(((('-223139294', t1.c0))==((t1.c1, t1.c0))))))AND(CAST(((((((((((t1.c1)OR(t1.c1)))OR(x'bb85')))AND(t1.c1)))OR(t1.c1)))OR(x'ee')) AS TEXT)))) LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((t1.c1, t1.c1)) NOT BETWEEN ((CAST(t1.c0 AS NUMERIC), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))) AND ((0.4263169187658743, (+ (t1.c0)))))) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((~ (LIKELY(t1.c1))));
SELECT * FROM t1 WHERE ((((~ (LIKELY(t1.c1))))AND(((CASE 0x1eda070b  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN 'H
' END) IS TRUE))));
SELECT ALL * FROM t1 WHERE ((~ (LIKELY(t1.c1))));
SELECT * FROM t1 WHERE ((((~ (LIKELY(t1.c1))))AND(((CASE 0x1eda070b  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN 'H
' END) IS TRUE))));
SELECT MIN(t1.c0) FROM t1 WHERE (((json_remove(t1.c1, t1.c0)) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((t1.c1)IS(t1.c1)))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((json_remove(t1.c1, t1.c0)) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((t1.c1)IS(t1.c1)))))AND((((('#')AND(CAST(t1.c0 AS BLOB))))AND((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1)))))))) LIMIT 0X0;
SELECT * FROM t1 WHERE (CASE WHEN (+ (t1.c1)) THEN SUBSTR(t1.c0, t1.c0) WHEN NULL THEN ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) END) ORDER BY ((CAST(t1.c1 AS REAL)) BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) AND (json_extract(t1.c0, t1.c0)))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE WHEN (+ (t1.c1)) THEN SUBSTR(t1.c0, t1.c0) WHEN NULL THEN ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) END) ORDER BY ((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(INSTR(t1.c0, t1.c0))))OR(((t1.c0)<<(t1.c0)))) ASC  NULLS FIRST, (CAST(t1.c0 AS REAL) IN ()) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (CASE WHEN (+ (t1.c1)) THEN SUBSTR(t1.c0, t1.c0) WHEN NULL THEN ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) END) ORDER BY ((CAST(t1.c1 AS REAL)) BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) AND (json_extract(t1.c0, t1.c0)))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE WHEN (+ (t1.c1)) THEN SUBSTR(t1.c0, t1.c0) WHEN NULL THEN ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) END) ORDER BY ((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(INSTR(t1.c0, t1.c0))))OR(((t1.c0)<<(t1.c0)))) ASC  NULLS FIRST, (CAST(t1.c0 AS REAL) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((((((((NOT (t1.c0)))AND(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '503203198' ELSE t1.c0 END)))OR(load_extension(0xffffffff84c83c00, t1.c0))))AND(TYPEOF(DISTINCT t1.c1))))OR(((t1.c0) NOTNULL))))AND(t1.c1 COLLATE RTRIM)));
SELECT ALL * FROM t1 WHERE ((((((((((((((NOT (t1.c0)))AND(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '503203198' ELSE t1.c0 END)))OR(load_extension(0Xffffffff84c83c00, t1.c0))))AND(TYPEOF(DISTINCT t1.c1))))OR(((t1.c0) NOTNULL))))AND(t1.c1 COLLATE RTRIM)))AND(((((((t1.c1 COLLATE RTRIM)OR((((t1.c1, t1.c0, '-947295838', t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, t1.c1, t1.c1))))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))))) ORDER BY (~ (0.2802984221560054)) ASC, (- (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))), t1.c1 DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((((((((((((NOT (t1.c0)))AND(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '503203198' ELSE t1.c0 END)))OR(load_extension(0xffffffff84c83c00, t1.c0))))AND(TYPEOF(DISTINCT t1.c1))))OR(((t1.c0) NOTNULL))))AND(t1.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM t1 WHERE (CAST(TIME(t1.c1, t1.c0, t1.c0) AS REAL));
SELECT COUNT(*) FROM t1 WHERE (CAST(TIME(t1.c1, t1.c0, t1.c0) AS REAL)) ORDER BY x'6cb1' ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c0 COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE RTRIM)AND(((((((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))OR('z&928N')))OR(t1.c0)))AND((- (t1.c0)))))AND(t1.c1))))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- (UNICODE(t1.c1)))) LIMIT 0X3;
SELECT ALL * FROM t1 WHERE (t1.c0 COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE RTRIM)AND(((((((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))OR('z&928N')))OR(t1.c0)))AND((- (t1.c0)))))AND(t1.c1))))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- (UNICODE(t1.c1)))) LIMIT 0X3;
SELECT COUNT(*) FROM t1 WHERE (TYPEOF(DISTINCT t1.c0) COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((TYPEOF(DISTINCT t1.c0) COLLATE RTRIM)AND(((((((t1.c1)OR(t1.c0)))OR(t1.c1)))-(((t1.c1) IS TRUE)))))) ORDER BY t1.c1 ASC, t1.c1 COLLATE BINARY DESC;
SELECT * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((JULIANDAY(t1.c1, t1.c1, t1.c1))) AND ((((t1.c0)|(t1.c1)))))) ORDER BY (((t1.c1)) NOT BETWEEN ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL END)) AND ((t1.c1 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((JULIANDAY(t1.c1, t1.c1, t1.c1))) AND ((((t1.c0)|(t1.c1))))))AND(((((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))/(CAST(t1.c1 AS INTEGER)))))) ORDER BY (((t1.c1)) NOT BETWEEN ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL END)) AND ((t1.c1 COLLATE NOCASE))) ASC  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((JULIANDAY(t1.c1, t1.c1, t1.c1))) AND ((((t1.c0)|(t1.c1)))))) ORDER BY (((t1.c1)) NOT BETWEEN ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL END)) AND ((t1.c1 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((JULIANDAY(t1.c1, t1.c1, t1.c1))) AND ((((t1.c0)|(t1.c1))))))AND(((((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))/(CAST(t1.c1 AS INTEGER)))))) ORDER BY (((t1.c1)) NOT BETWEEN ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL END)) AND ((t1.c1 COLLATE NOCASE))) ASC  NULLS LAST LIMIT 0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c1)GLOB(NULL)))<<((~ (t1.c1)))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((((t1.c1)GLOB(NULL)))<<((~ (t1.c1)))))AND(t1.c0)));
SELECT ALL * FROM t1 WHERE (((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), (((t1.c1))>((t1.c1)))))!=(((- ('1477179842')), CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN '(u9N&' THEN t1.c1 END))));
SELECT ALL * FROM t1 WHERE (((((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), (((t1.c1))>((t1.c1)))))<>(((- ('1477179842')), CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN '(u9N&' THEN t1.c1 END))))AND(CAST(((t1.c0)==(t1.c0)) AS BLOB)))) ORDER BY (((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(NULL)) IN ((t1.c0 IN (t1.c0)), (('-299455398')+(t1.c1))))  NULLS LAST, (((((t1.c0) NOTNULL), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(NULL)), CAST(t1.c0 AS INTEGER), ((t1.c1) BETWEEN (0.7326516555029623) AND (t1.c0)), (- (t1.c0)), CAST(t1.c1 AS REAL)))<((((x'')IS NOT(t1.c1)), (~ (t1.c0)), t1.c0, CAST(t1.c1 AS TEXT), t1.c0 COLLATE RTRIM, ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) ASC INTERSECT SELECT ALL * FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE BINARY) ORDER BY (((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(NULL)) IN ((t1.c0 IN (t1.c0)), (('-299455398')+(t1.c1))))  NULLS LAST, (((((t1.c0) NOTNULL), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(NULL)), CAST(t1.c0 AS INTEGER), ((t1.c1) BETWEEN (0.7326516555029623) AND (t1.c0)), (- (t1.c0)), CAST(t1.c1 AS REAL)))<((((x'')IS NOT(t1.c1)), (~ (t1.c0)), t1.c0, CAST(t1.c1 AS TEXT), t1.c0 COLLATE RTRIM, ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) ASC;
SELECT ALL * FROM t1 WHERE (((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), (((t1.c1))>((t1.c1)))))!=(((- ('1477179842')), CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN '(u9N&' THEN t1.c1 END))));
SELECT ALL * FROM t1 WHERE (((((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), (((t1.c1))>((t1.c1)))))<>(((- ('1477179842')), CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN '(u9N&' THEN t1.c1 END))))AND(CAST(((t1.c0)==(t1.c0)) AS BLOB)))) ORDER BY (((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(NULL)) IN ((t1.c0 IN (t1.c0)), (('-299455398')+(t1.c1))))  NULLS LAST, (((((t1.c0) NOTNULL), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(NULL)), CAST(t1.c0 AS INTEGER), ((t1.c1) BETWEEN (0.7326516555029623) AND (t1.c0)), (- (t1.c0)), CAST(t1.c1 AS REAL)))<((((x'')IS NOT(t1.c1)), (~ (t1.c0)), t1.c0, CAST(t1.c1 AS TEXT), t1.c0 COLLATE RTRIM, ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) ASC INTERSECT SELECT ALL * FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE BINARY) ORDER BY (((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(NULL)) IN ((t1.c0 IN (t1.c0)), (('-299455398')+(t1.c1))))  NULLS LAST, (((((t1.c0) NOTNULL), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(NULL)), CAST(t1.c0 AS INTEGER), ((t1.c1) BETWEEN (0.7326516555029623) AND (t1.c0)), (- (t1.c0)), CAST(t1.c1 AS REAL)))<((((x'')IS NOT(t1.c1)), (~ (t1.c0)), t1.c0, CAST(t1.c1 AS TEXT), t1.c0 COLLATE RTRIM, ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) ASC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CASE WHEN (t1.c0 IN (t1.c0)) THEN ((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)) WHEN ((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)) THEN t1.c0 COLLATE BINARY WHEN t1.c1 THEN (+ (t1.c1)) END) ORDER BY ((((t1.c1)OR(t1.c1)))AND(t1.c1)) COLLATE BINARY DESC, CASE t1.c0  WHEN (+ ('0.9835977633916464')) THEN ((t1.c1)GLOB(t1.c0)) WHEN (- (t1.c1)) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t1.c0) IS TRUE) THEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) ELSE t1.c1 COLLATE RTRIM END DESC  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CASE WHEN (t1.c0 IN (t1.c0)) THEN ((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)) WHEN ((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)) THEN t1.c0 COLLATE BINARY WHEN t1.c1 THEN (+ (t1.c1)) END) ORDER BY ((((t1.c1)OR(t1.c1)))AND(t1.c1)) COLLATE BINARY DESC, CASE t1.c0  WHEN (+ ('0.9835977633916464')) THEN ((t1.c1)GLOB(t1.c0)) WHEN (- (t1.c1)) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t1.c0) IS TRUE) THEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) ELSE t1.c1 COLLATE RTRIM END DESC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CASE x'5d'  WHEN (t1.c1 IN (t1.c1)) THEN t1.c1 COLLATE BINARY WHEN 0.579380099780309 THEN CAST(t1.c0 AS INTEGER) WHEN NULL THEN ((((((t1.c1)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)) WHEN CAST(x'' AS INTEGER) THEN ((t1.c0) IS TRUE) ELSE (((t1.c0))<>((t1.c1))) END) ORDER BY (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT NULL), ((t1.c0)OR(t1.c0)), ((((t1.c1)OR(t1.c0)))AND(t1.c1)))) AND ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, (((t1.c0))>=((t1.c1))), ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))) DESC  NULLS FIRST, 0.6106020364032353;
SELECT MIN(t1.c0) FROM t1 WHERE (((CASE x'5d'  WHEN (t1.c1 IN (t1.c1)) THEN t1.c1 COLLATE BINARY WHEN 0.579380099780309 THEN CAST(t1.c0 AS INTEGER) WHEN NULL THEN ((((((t1.c1)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)) WHEN CAST(x'' AS INTEGER) THEN ((t1.c0) IS TRUE) ELSE (((t1.c0))<>((t1.c1))) END)AND(((json_object(NULL, t1.c0, t1.c1, t1.c0)) NOTNULL)))) ORDER BY (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0) NOT NULL), ((t1.c0)OR(t1.c0)), ((((t1.c1)OR(t1.c0)))AND(t1.c1)))) AND ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, (((t1.c0))>=((t1.c1))), ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))) DESC  NULLS FIRST, 0.6106020364032353;
SELECT * FROM t1 WHERE (((json_object(t1.c0, t1.c0)) NOT NULL)) ORDER BY CASE WHEN t1.c0 THEN 0.422037598994185 END DESC, x'1c';
SELECT ALL * FROM t1 WHERE (((((json_object(t1.c0, t1.c0)) NOT NULL))AND((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) IN (((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)), ((t1.c1)||(0.14271299001706372))))))) ORDER BY CASE WHEN t1.c0 THEN 0.422037598994185 END DESC, x'1c' LIMIT 0X2 INTERSECT SELECT ALL * FROM t1 WHERE (ABS(DISTINCT (NULL IN (t1.c1)))) ORDER BY CASE WHEN t1.c0 THEN 0.422037598994185 END DESC, x'1c' LIMIT 2;
SELECT * FROM t1 WHERE (((json_object(t1.c0, t1.c0)) NOT NULL)) ORDER BY CASE WHEN t1.c0 THEN 0.422037598994185 END DESC, x'1c';
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((CAST(t1.c0 AS TEXT))IS((((t1.c0, t1.c0))==((t1.c1, t1.c0))))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((CAST(t1.c0 AS TEXT))IS((((t1.c0, t1.c0))==((t1.c1, t1.c0)))))) LIMIT 0X0 INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((((t1.c1) IS FALSE), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), ((((t1.c1)OR(t1.c1)))AND(t1.c0)), ((t1.c0) IS FALSE), (+ (t1.c0))))<>((((((((t1.c0)OR(t1.c1)))AND('0.1930175036968944')))OR(t1.c0)), t1.c0, CAST(t1.c1 AS REAL), DATE(t1.c1, t1.c1, t1.c1, t1.c0, t1.c0), (~ ('uP4<')))))) LIMIT 0X0;
SELECT * FROM t1 WHERE ((((- (t1.c1)))+(((t1.c1)==(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((((- (t1.c1)))+(((t1.c1)==(t1.c1)))))AND(((((CAST(t1.c0 AS TEXT))OR(t1.c0 COLLATE NOCASE)))AND((NOT (t1.c0))))))) ORDER BY t1.c0 DESC  NULLS FIRST, ((+ (t1.c1)) IN (CAST(t1.c0 AS REAL))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE ((((- (t1.c1)))+(((t1.c1)==(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((((- (t1.c1)))+(((t1.c1)==(t1.c1)))))AND(((((CAST(t1.c0 AS TEXT))OR(t1.c0 COLLATE NOCASE)))AND((NOT (t1.c0))))))) ORDER BY t1.c0 DESC  NULLS FIRST, ((+ (t1.c1)) IN (CAST(t1.c0 AS REAL))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (t1.c0) LIMIT 1;
SELECT * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (t1.c0) LIMIT 1;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<=(t1.c0)))<=(((t1.c1) IS FALSE))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((t1.c0)=(t1.c0)))=(((t1.c1) IS FALSE))))AND(((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END) ISNULL)))) ORDER BY (((t1.c1, t1.c1, t1.c0, NULL)) BETWEEN ((t1.c0, 'Meg2&', CAST(t1.c1 AS NUMERIC), x'')) AND ((CASE WHEN '-301094617' THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, x'7c', x'', ((t1.c0) NOT BETWEEN ('') AND (t1.c0))))) ASC LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) IS TRUE)) ORDER BY (((t1.c1, t1.c1, t1.c0, NULL)) BETWEEN ((t1.c0, 'Meg2&', CAST(t1.c1 AS NUMERIC), x'')) AND ((CASE WHEN '-301094617' THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, x'7c', x'', ((t1.c0) NOT BETWEEN ('') AND (t1.c0))))) ASC LIMIT 1;
SELECT ALL * FROM t1 WHERE (json_array_length((((t1.c0, t1.c1)) BETWEEN ((0.5470273744107715, t1.c0)) AND ((t1.c1, x'ee93'))))) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN '%,)S^cc' WHEN ((0.19410205149593085) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN x'739e69' COLLATE NOCASE END ASC  NULLS FIRST, (NOT (NULL)) COLLATE BINARY DESC, CASE WHEN t1.c1 COLLATE RTRIM THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END  NULLS LAST;
SELECT * FROM t1 WHERE (((json_array_length((((t1.c0, t1.c1)) BETWEEN ((0.5470273744107715, t1.c0)) AND ((t1.c1, x'ee93')))))AND(((t1.c1)-(((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c1))))))) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN '%,)S^cc' WHEN ((0.19410205149593085) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN x'739e69' COLLATE NOCASE END ASC  NULLS FIRST, (NOT (NULL)) COLLATE BINARY DESC, CASE WHEN t1.c1 COLLATE RTRIM THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (CASE WHEN CAST(x'43' AS TEXT) THEN (t1.c1 IN ()) WHEN t1.c1 COLLATE BINARY THEN ((0.5496296575557466)|(t1.c0)) END) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN '%,)S^cc' WHEN ((0.19410205149593085) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN x'739e69' COLLATE NOCASE END ASC  NULLS FIRST, (NOT (NULL)) COLLATE BINARY DESC, CASE WHEN t1.c1 COLLATE RTRIM THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END  NULLS LAST;
SELECT ALL * FROM t1 WHERE (json_array_length((((t1.c0, t1.c1)) BETWEEN ((0.5470273744107715, t1.c0)) AND ((t1.c1, x'ee93'))))) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN '%,)S^cc' WHEN ((0.19410205149593085) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN x'739e69' COLLATE NOCASE END ASC  NULLS FIRST, (NOT (NULL)) COLLATE BINARY DESC, CASE WHEN t1.c1 COLLATE RTRIM THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END  NULLS LAST;
SELECT * FROM t1 WHERE (((json_array_length((((t1.c0, t1.c1)) BETWEEN ((0.5470273744107715, t1.c0)) AND ((t1.c1, x'ee93')))))AND(((t1.c1)-(((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c1))))))) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN '%,)S^cc' WHEN ((0.19410205149593085) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN x'739e69' COLLATE NOCASE END ASC  NULLS FIRST, (NOT (NULL)) COLLATE BINARY DESC, CASE WHEN t1.c1 COLLATE RTRIM THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (CASE WHEN CAST(x'43' AS TEXT) THEN (t1.c1 IN ()) WHEN t1.c1 COLLATE BINARY THEN ((0.5496296575557466)|(t1.c0)) END) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN '%,)S^cc' WHEN ((0.19410205149593085) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN x'739e69' COLLATE NOCASE END ASC  NULLS FIRST, (NOT (NULL)) COLLATE BINARY DESC, CASE WHEN t1.c1 COLLATE RTRIM THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END  NULLS LAST;
SELECT * FROM t1 WHERE (rtreenode(NULL, ((t1.c1)>>(t1.c1)))) ORDER BY ((t1.c1) ISNULL) ASC  NULLS LAST, (((((t1.c0)AND(t1.c1)))AND(t1.c0)) IN ()) ASC  NULLS LAST, (((t1.c0, t1.c0)) BETWEEN ((((t1.c1)==(t1.c1)), x'08')) AND ((((t1.c0)|(t1.c0)), (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c1)))))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (rtreenode(NULL, ((t1.c1)>>(t1.c1)))) ORDER BY ((t1.c1) ISNULL) ASC  NULLS LAST, (((((t1.c0)AND(t1.c1)))AND(t1.c0)) IN ()) ASC  NULLS LAST, (((t1.c0, t1.c0)) BETWEEN ((((t1.c1)==(t1.c1)), x'08')) AND ((((t1.c0)|(t1.c0)), (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c1)))))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (rtreenode(NULL, ((t1.c1)>>(t1.c1)))) ORDER BY ((t1.c1) ISNULL) ASC  NULLS LAST, (((((t1.c0)AND(t1.c1)))AND(t1.c0)) IN ()) ASC  NULLS LAST, (((t1.c0, t1.c0)) BETWEEN ((((t1.c1)==(t1.c1)), x'08')) AND ((((t1.c0)|(t1.c0)), (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c1)))))) ASC  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c1)IS('<'))) NOT NULL)) ORDER BY CASE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN CAST('0.4760103419149396' AS NUMERIC) WHEN ((t1.c0)>(',5^誀')) THEN CAST(t1.c1 AS INTEGER) WHEN (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) THEN ((t1.c1)||(t1.c0)) WHEN (('e')AND(t1.c1)) THEN CAST(t1.c1 AS REAL) ELSE t1.c1 END  NULLS LAST, ((((((t1.c1)OR(t1.c0)))AND('')))<(((t1.c0)OR(t1.c1)))) ASC  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((t1.c1)IS('<'))) NOT NULL))AND((((((t1.c1, t1.c1))>=((t1.c0, t1.c0))))&(t1.c1))))) ORDER BY MIN(t1.c0, t1.c0, t1.c1) COLLATE BINARY  NULLS LAST, IFNULL(t1.c0, CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END) INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (CASE WHEN ((t1.c1)OR(t1.c0)) THEN ((t1.c1)+(t1.c1)) WHEN ((t1.c0)/(t1.c0)) THEN ((t1.c1)AND(x'40d0')) ELSE t1.c1 COLLATE BINARY END) ORDER BY MIN(t1.c0, t1.c0, t1.c1) COLLATE BINARY  NULLS LAST, IFNULL(t1.c0, CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END);
SELECT ALL * FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) ISNULL)) ORDER BY (NOT (((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0))));
SELECT ALL * FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) ISNULL)) ORDER BY (NOT (((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) ISNULL)) ORDER BY (NOT (((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0))));
SELECT ALL * FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) ISNULL)) ORDER BY (NOT (((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))) LIMIT 0X1;
SELECT * FROM t1 WHERE (CASE WHEN ((((((((t1.c0)OR(1473812125)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) THEN LENGTH(t1.c0) END) ORDER BY CASE WHEN (((t1.c1)) NOT BETWEEN ((0.17472976750014468)) AND ((t1.c0))) THEN (('-504325257') NOT NULL) WHEN t1.c0 COLLATE BINARY THEN '1626513390' WHEN ((((t1.c0)AND(0Xffffffffb3bff328)))OR(t1.c1)) THEN ((t1.c1)<=(t1.c1)) END DESC;
SELECT ALL * FROM t1 WHERE (((CASE WHEN ((((((((t1.c0)OR(1473812125)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) THEN LENGTH(t1.c0) END)AND(NULL))) ORDER BY ((((- (t1.c1))))=((json_patch(t1.c0, t1.c1))))  NULLS LAST, ((CAST(t1.c0 AS BLOB))<<(t1.c0)) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (CASE WHEN ((((((((t1.c0)OR(1473812125)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) THEN LENGTH(t1.c0) END) ORDER BY CASE WHEN (((t1.c1)) NOT BETWEEN ((0.17472976750014468)) AND ((t1.c0))) THEN (('-504325257') NOT NULL) WHEN t1.c0 COLLATE BINARY THEN '1626513390' WHEN ((((t1.c0)AND(0Xffffffffb3bff328)))OR(t1.c1)) THEN ((t1.c1)<=(t1.c1)) END DESC;
SELECT ALL * FROM t1 WHERE (((CASE WHEN ((((((((t1.c0)OR(1473812125)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) THEN LENGTH(t1.c0) END)AND(NULL))) ORDER BY ((((- (t1.c1))))=((json_patch(t1.c0, t1.c1))))  NULLS LAST, ((CAST(t1.c0 AS BLOB))<<(t1.c0)) ASC  NULLS FIRST LIMIT 0;
SELECT MIN(t1.c1) FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(((t1.c0)<(t1.c0)))) ORDER BY (NOT (((t1.c0) NOT NULL))) ASC  NULLS FIRST, ((t1.c0 COLLATE BINARY)!=(LOWER(DISTINCT t1.c0))) ASC;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((SQLITE_COMPILEOPTION_USED(((t1.c0)<(t1.c0))))AND((- (((t1.c0) IS TRUE)))))) ORDER BY (((NOT (t1.c1)))*((((t1.c1))>((t1.c0))))) ASC  NULLS LAST, (((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1) NOT NULL), ((t1.c1)>>(t1.c1)))) AND (((NOT (t1.c1)), t1.c1, (((t1.c1))<((t1.c0))))))  NULLS LAST, ((((((((GLOB(t1.c0, t1.c0))AND(((((x'3e09')AND(t1.c0)))OR(t1.c0)))))OR(load_extension(t1.c1, t1.c0))))OR((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))))OR((+ (t1.c1))))  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CAST((t1.c0 IN (t1.c1, t1.c1)) AS REAL)) ORDER BY TRIM(((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(-1532130063)))  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CAST((t1.c0 IN (t1.c1)) AS REAL)) ORDER BY TRIM(((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(0xffffffffa4ad8cf1)))  NULLS LAST LIMIT 1;
SELECT * FROM t1 WHERE (CAST(json_array(t1.c0, t1.c0, t1.c1, t1.c1) AS NUMERIC)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)>(((t1.c1) IS TRUE)))  NULLS FIRST, LIKE(((t1.c0)<<('1050756480')), t1.c1);
SELECT DISTINCT * FROM t1 WHERE (CAST(json_array(t1.c0, t1.c0, t1.c1, t1.c1) AS NUMERIC)) ORDER BY ((t1.c0) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE '759420593' END) AND (((t1.c0) IS TRUE))) ASC  NULLS LAST, HEX(DISTINCT t1.c0 COLLATE NOCASE) ASC, ((((((((((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c1) NOT BETWEEN (1799105721) AND (t1.c1)))))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(t1.c0 COLLATE NOCASE)))OR(CAST(t1.c0 AS NUMERIC))))OR(HEX(DISTINCT t1.c1))) ASC;
SELECT * FROM t1 WHERE (CAST(json_array(t1.c0, t1.c0, t1.c1, t1.c1) AS NUMERIC)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)>(((t1.c1) IS TRUE)))  NULLS FIRST, LIKE(((t1.c0)<<('1050756480')), t1.c1);
SELECT DISTINCT * FROM t1 WHERE (CAST(json_array(t1.c0, t1.c0, t1.c1, t1.c1) AS NUMERIC)) ORDER BY ((t1.c0) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE '759420593' END) AND (((t1.c0) IS TRUE))) ASC  NULLS LAST, HEX(DISTINCT t1.c0 COLLATE NOCASE) ASC, ((((((((((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c1) NOT BETWEEN (1799105721) AND (t1.c1)))))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(t1.c0 COLLATE NOCASE)))OR(CAST(t1.c0 AS NUMERIC))))OR(HEX(DISTINCT t1.c1))) ASC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((- (((t1.c1) NOT NULL)))) ORDER BY (CAST(t1.c1 AS TEXT) IN ()), 0.22681967815549764 DESC  NULLS FIRST, NULL DESC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((- (((t1.c1) NOT NULL)))) ORDER BY (CAST(t1.c1 AS TEXT) IN ()), 0.22681967815549764 DESC  NULLS FIRST, NULL DESC  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (json_type((((t1.c0, t1.c1)) BETWEEN ((1.761015341E9, t1.c0)) AND ((t1.c1, t1.c0))))) ORDER BY (NOT (((((t1.c1)OR(t1.c0)))OR(t1.c1)))) DESC  NULLS FIRST, x'e9'  NULLS FIRST, CASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN NULL WHEN (((('-1627977926')AND(t1.c1)))OR(t1.c1)) THEN UNLIKELY(t1.c1) WHEN ((t1.c0)&(t1.c0)) THEN t1.c1 WHEN (~ (t1.c1)) THEN NULL WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN ((t1.c0) IS TRUE) ELSE NULL END  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((json_type((((t1.c0, t1.c1)) BETWEEN ((1.761015341E9, t1.c0)) AND ((t1.c1, t1.c0)))))AND((((t1.c1, t1.c0, t1.c0)) BETWEEN ((((t1.c0) NOTNULL), UPPER(DISTINCT t1.c0), json_array_length(t1.c1))) AND ((CASE WHEN t1.c0 THEN x'33d5' ELSE t1.c0 END, (~ (t1.c0)), ((NULL)||(t1.c0)))))))) ORDER BY (NOT (((((t1.c1)OR(t1.c0)))OR(t1.c1)))) DESC  NULLS FIRST, x'e9'  NULLS FIRST, CASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN NULL WHEN (((('-1627977926')AND(t1.c1)))OR(t1.c1)) THEN UNLIKELY(t1.c1) WHEN ((t1.c0)&(t1.c0)) THEN t1.c1 WHEN (~ (t1.c1)) THEN NULL WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN ((t1.c0) IS TRUE) ELSE NULL END  NULLS FIRST LIMIT 0x2;
SELECT MAX(t1.c0) FROM t1 WHERE (((CAST(t1.c0 AS INTEGER)) IS TRUE));
SELECT MAX(t1.c0) FROM t1 WHERE (((((CAST(t1.c0 AS INTEGER)) IS TRUE))AND(((t1.c1)IS(t1.c1)) COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) NOTNULL)) ORDER BY INSTR((t1.c0 IN (t1.c1)), ((t1.c0) BETWEEN ('1e500') AND ('-1753262620')))  NULLS LAST, ((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN (NULL)) DESC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) NOTNULL)) ORDER BY INSTR((t1.c0 IN (t1.c1)), ((t1.c0) BETWEEN ('1e500') AND ('-1753262620')))  NULLS LAST, ((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN (NULL)) DESC LIMIT 0x2 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((t1.c1)!=(t1.c1)) IN ())) ORDER BY INSTR((t1.c0 IN (t1.c1)), ((t1.c0) BETWEEN ('1e500') AND ('-1753262620')))  NULLS LAST, ((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN (NULL)) DESC LIMIT 0X2;
SELECT MIN(t1.c0) FROM t1 WHERE ((((t1.c1)<(t1.c1)) IN (0.9696004893912822)));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((t1.c1)<(t1.c1)) IN (0.9696004893912822))) ORDER BY t1.c1  NULLS LAST, ((((((((t1.c1)<<(t1.c0)))OR(((t1.c1) IS FALSE))))OR((t1.c1 IN (t1.c0)))))AND(NULL))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE (CAST(UNICODE(t1.c0) AS INTEGER)) ORDER BY CAST((- (t1.c0)) AS NUMERIC) DESC  NULLS LAST, ((((0x4e9a59d9)>(t1.c0))) IS TRUE), (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, ((t1.c0) NOT NULL), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((t1.c0)AND(0xffffffff96c3b2b0)), ((t1.c1)+(t1.c1)), t1.c0 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((CAST(UNICODE(t1.c0) AS INTEGER))AND(('30411453' IN ()) COLLATE BINARY))) ORDER BY CAST((- (t1.c0)) AS NUMERIC) DESC  NULLS LAST, ((((1318738393)>(t1.c0))) IS TRUE), (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, ((t1.c0) NOT NULL), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((t1.c0)AND(-1765559632)), ((t1.c1)+(t1.c1)), t1.c0 COLLATE RTRIM))) DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t1 WHERE (CAST(UNICODE(t1.c0) AS INTEGER)) ORDER BY CAST((- (t1.c0)) AS NUMERIC) DESC  NULLS LAST, ((((0x4e9a59d9)>(t1.c0))) IS TRUE), (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, ((t1.c0) NOT NULL), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((t1.c0)AND(0xffffffff96c3b2b0)), ((t1.c1)+(t1.c1)), t1.c0 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((CAST(UNICODE(t1.c0) AS INTEGER))AND(('30411453' IN ()) COLLATE BINARY))) ORDER BY CAST((- (t1.c0)) AS NUMERIC) DESC  NULLS LAST, ((((1318738393)>(t1.c0))) IS TRUE), (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, ((t1.c0) NOT NULL), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((t1.c0)AND(-1765559632)), ((t1.c1)+(t1.c1)), t1.c0 COLLATE RTRIM))) DESC  NULLS FIRST LIMIT 2;
SELECT * FROM t1 WHERE ((((t1.c1 IN (t1.c0, t1.c1))) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1 IN (t1.c0))) IS TRUE))AND((((CAST(t1.c0 AS TEXT)))>((((t1.c1) ISNULL))))))) LIMIT 1;
SELECT * FROM t1 WHERE ((((t1.c1 IN (t1.c0, t1.c1))) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1 IN (t1.c0))) IS TRUE))AND((((CAST(t1.c0 AS TEXT)))>((((t1.c1) ISNULL))))))) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE (NULL) ORDER BY CAST(((t1.c0) IS FALSE) AS INTEGER) ASC  NULLS FIRST, CASE (((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, '-1415981947', t1.c1)) AND ((t1.c0, t1.c1, t1.c0)))  WHEN (t1.c1 IN (t1.c1)) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) END;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (NULL) ORDER BY CAST(((t1.c0) IS FALSE) AS INTEGER) ASC  NULLS FIRST, CASE (((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, '-1415981947', t1.c1)) AND ((t1.c0, t1.c1, t1.c0)))  WHEN (t1.c1 IN (t1.c1)) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) END INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c0) IS FALSE) COLLATE NOCASE) ORDER BY CAST(((t1.c0) IS FALSE) AS INTEGER) ASC  NULLS FIRST, CASE (((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, '-1415981947', t1.c1)) AND ((t1.c0, t1.c1, t1.c0)))  WHEN (t1.c1 IN (t1.c1)) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) END;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (NULL COLLATE NOCASE) ORDER BY (((((t1.c0, t1.c1, t1.c0))==((t1.c1, t1.c0, t1.c1)))) BETWEEN (x'') AND ((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))))  NULLS FIRST, t1.c0 ASC  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE (NULL COLLATE NOCASE) ORDER BY (((((t1.c0, t1.c1, t1.c0))==((t1.c1, t1.c0, t1.c1)))) BETWEEN (x'') AND ((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))))  NULLS FIRST, t1.c0 ASC  NULLS LAST INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (((CAST(NULL AS INTEGER))<(CASE WHEN 0Xffffffffbb774948 THEN t1.c1 ELSE t1.c0 END))) ORDER BY (((((t1.c0, t1.c1, t1.c0))=((t1.c1, t1.c0, t1.c1)))) BETWEEN (x'') AND ((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))))  NULLS FIRST, t1.c0 ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c1) IS TRUE)) NOT BETWEEN (CASE WHEN t1.c1 THEN -1034817637 END) AND (((t1.c0)OR(t1.c0))))) ORDER BY ((t1.c0)IS NOT(t1.c0)) COLLATE BINARY;
SELECT ALL * FROM t1 WHERE (((((((t1.c1) IS TRUE)) NOT BETWEEN (CASE WHEN t1.c1 THEN -1034817637 END) AND (((t1.c0)OR(t1.c0)))))AND((((((t1.c1))<((t1.c0)))) BETWEEN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (((((t1.c1)AND(t1.c1)))AND(t1.c0))))))) ORDER BY ((t1.c0)IS NOT(t1.c0)) COLLATE BINARY LIMIT 0X0;
SELECT * FROM t1 WHERE (((((t1.c1) IS TRUE)) NOT BETWEEN (CASE WHEN t1.c1 THEN -1034817637 END) AND (((t1.c0)OR(t1.c0))))) ORDER BY ((t1.c0)IS NOT(t1.c0)) COLLATE BINARY;
SELECT ALL * FROM t1 WHERE (((((((t1.c1) IS TRUE)) NOT BETWEEN (CASE WHEN t1.c1 THEN -1034817637 END) AND (((t1.c0)OR(t1.c0)))))AND((((((t1.c1))<((t1.c0)))) BETWEEN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (((((t1.c1)AND(t1.c1)))AND(t1.c0))))))) ORDER BY ((t1.c0)IS NOT(t1.c0)) COLLATE BINARY LIMIT 0X0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (SQLITE_COMPILEOPTION_GET('O7ns')) ORDER BY t1.c0 ASC  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE (SQLITE_COMPILEOPTION_GET('O7ns')) ORDER BY t1.c0 ASC  NULLS LAST INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c0) ISNULL)) ORDER BY t1.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ('-1530440224');
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((('-1530440224')AND(CASE NULL  WHEN (- (t1.c0)) THEN ((t1.c1)AND(t1.c0)) END))) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST(t1.c1 AS INTEGER));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (t1.c1);
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY (((((t1.c0)AND(t1.c0)))OR(t1.c1)) IN (((t1.c1)<>(t1.c0)))) DESC, ((((t1.c1 COLLATE NOCASE)AND(CASE x'b886'  WHEN t1.c1 THEN t1.c0 END)))OR(t1.c1 COLLATE BINARY))  NULLS FIRST, (((t1.c0 IN (t1.c1)))>>(((t1.c1)|(t1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((((((((((LOWER(DISTINCT t1.c0))AND((- (t1.c0)))))AND(((t1.c0)IS NOT('艸Z6[tx[肒')))))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END)))AND(('4' IN ()))))AND(((t1.c0) NOT NULL))) LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c1)>=(NULL)) IN ((+ (t1.c1)), ((((t1.c0)AND(t1.c0)))AND(t1.c0))))) ORDER BY ((((((((((LOWER(DISTINCT t1.c0))AND((- (t1.c0)))))AND(((t1.c0)IS NOT('艸Z6[tx[肒')))))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END)))AND(('4' IN ()))))AND(((t1.c0) NOT NULL))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((((((((((LOWER(DISTINCT t1.c0))AND((- (t1.c0)))))AND(((t1.c0)IS NOT('艸Z6[tx[肒')))))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END)))AND(('4' IN ()))))AND(((t1.c0) NOT NULL))) LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c1)>=(NULL)) IN ((+ (t1.c1)), ((((t1.c0)AND(t1.c0)))AND(t1.c0))))) ORDER BY ((((((((((LOWER(DISTINCT t1.c0))AND((- (t1.c0)))))AND(((t1.c0)IS NOT('艸Z6[tx[肒')))))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END)))AND(('4' IN ()))))AND(((t1.c0) NOT NULL))) LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (0X2adc8d67);
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (0x2adc8d67) ORDER BY t1.c0 DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((t1.c0, t1.c1, t1.c1, t1.c0)) BETWEEN (((t1.c0 IN ()), (~ (t1.c1)), LIKE(t1.c0, t1.c0), CAST(t1.c0 AS BLOB))) AND ((CAST(t1.c1 AS REAL), t1.c0, ((t1.c1)*(t1.c0)), CAST(t1.c0 AS TEXT)))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((((t1.c0, t1.c1, t1.c1, t1.c0)) BETWEEN (((t1.c0 IN ()), (~ (t1.c1)), LIKE(t1.c0, t1.c0), CAST(t1.c0 AS BLOB))) AND ((CAST(t1.c1 AS REAL), t1.c0, ((t1.c1)*(t1.c0)), CAST(t1.c0 AS TEXT)))))AND((((t1.c0))<((((t1.c1) NOT NULL))))))) ORDER BY ((t1.c1) NOT NULL) DESC LIMIT 0x2;
SELECT * FROM t1 WHERE (((((t1.c1) NOTNULL))LIKE(((t1.c1) NOT NULL))));
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOTNULL))LIKE(((t1.c1) NOT NULL)))) ORDER BY (((t1.c0 IN (0.646963260674885))) IS FALSE)  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c1) NOTNULL))LIKE(((t1.c1) NOT NULL))));
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOTNULL))LIKE(((t1.c1) NOT NULL)))) ORDER BY (((t1.c0 IN (0.646963260674885))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c0)%(t1.c0)) COLLATE NOCASE) ORDER BY ((t1.c1) NOT BETWEEN (((t1.c1)>(t1.c0))) AND (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)), ((t1.c0)AND('1626513390')), (((~ (t1.c1))) NOT BETWEEN (((((t1.c1)OR(t1.c0)))AND(t1.c1))) AND ((t1.c0 IN ()))) DESC;
SELECT ALL * FROM t1 WHERE (((((t1.c0)%(t1.c0)) COLLATE NOCASE)AND(CAST(t1.c0 AS BLOB)))) ORDER BY ((t1.c1) NOT BETWEEN (((t1.c1)>(t1.c0))) AND (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)), ((t1.c0)AND('1626513390')), (((~ (t1.c1))) NOT BETWEEN (((((t1.c1)OR(t1.c0)))AND(t1.c1))) AND ((t1.c0 IN ()))) DESC;
SELECT ALL * FROM t1 WHERE (((t1.c0)%(t1.c0)) COLLATE NOCASE) ORDER BY ((t1.c1) NOT BETWEEN (((t1.c1)>(t1.c0))) AND (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)), ((t1.c0)AND('1626513390')), (((~ (t1.c1))) NOT BETWEEN (((((t1.c1)OR(t1.c0)))AND(t1.c1))) AND ((t1.c0 IN ()))) DESC;
SELECT ALL * FROM t1 WHERE (((((t1.c0)%(t1.c0)) COLLATE NOCASE)AND(CAST(t1.c0 AS BLOB)))) ORDER BY ((t1.c1) NOT BETWEEN (((t1.c1)>(t1.c0))) AND (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)), ((t1.c0)AND('1626513390')), (((~ (t1.c1))) NOT BETWEEN (((((t1.c1)OR(t1.c0)))AND(t1.c1))) AND ((t1.c0 IN ()))) DESC;
SELECT * FROM t1 WHERE (((t1.c0 IN (t1.c1)) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))) ORDER BY ((((t1.c0) ISNULL))LIKE(t1.c1)) ASC  NULLS FIRST, TRIM(DISTINCT ((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(x'47')))OR(t1.c1)));
SELECT * FROM t1 WHERE (((t1.c0 IN (t1.c1)) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))) ORDER BY ((((t1.c0) ISNULL))LIKE(t1.c1)) ASC  NULLS FIRST, TRIM(DISTINCT ((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(x'47')))OR(t1.c1))) INTERSECT SELECT * FROM t1 WHERE (((((x'39')GLOB(t1.c0)))<(t1.c0))) ORDER BY ((((t1.c0) ISNULL))LIKE(t1.c1)) ASC  NULLS FIRST, TRIM(DISTINCT ((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(x'47')))OR(t1.c1)));
SELECT * FROM t1 WHERE (((t1.c0 IN (t1.c1)) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))) ORDER BY ((((t1.c0) ISNULL))LIKE(t1.c1)) ASC  NULLS FIRST, TRIM(DISTINCT ((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(x'47')))OR(t1.c1)));
SELECT * FROM t1 WHERE (((t1.c0 IN (t1.c1)) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))) ORDER BY ((((t1.c0) ISNULL))LIKE(t1.c1)) ASC  NULLS FIRST, TRIM(DISTINCT ((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(x'47')))OR(t1.c1))) INTERSECT SELECT * FROM t1 WHERE (((((x'39')GLOB(t1.c0)))<(t1.c0))) ORDER BY ((((t1.c0) ISNULL))LIKE(t1.c1)) ASC  NULLS FIRST, TRIM(DISTINCT ((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(x'47')))OR(t1.c1)));
SELECT MIN(t1.c0) FROM t1 WHERE (((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))&(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY x'' ASC, ((((((((0x52786b31)AND(NULL)))OR((t1.c1 IN ('', t1.c1)))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST, CASE CASE t1.c0  WHEN x'7e' THEN 0.6073537908484175 END  WHEN t1.c0 THEN (- (t1.c0)) END DESC;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))&(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY x'' ASC, ((((((((1383623473)AND(NULL)))OR((t1.c1 IN ('', t1.c1)))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST, CASE CASE t1.c0  WHEN x'7e' THEN 0.6073537908484175 END  WHEN t1.c0 THEN (- (t1.c0)) END DESC LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((- (((t1.c1)IS NOT(t1.c0))))) ORDER BY x'' ASC, ((((((((0X52786b31)AND(NULL)))OR((t1.c1 IN ('', t1.c1)))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST, CASE CASE t1.c0  WHEN x'7e' THEN 0.6073537908484175 END  WHEN t1.c0 THEN (- (t1.c0)) END DESC LIMIT 0x1;
SELECT ALL * FROM t1 WHERE ((((~ (t1.c1)))-(t1.c1)));
SELECT DISTINCT * FROM t1 WHERE ((((~ (t1.c1)))-(t1.c1))) ORDER BY (((- (t1.c0)))IS NOT((((x'', -553452252))<((t1.c1, t1.c1))))) DESC LIMIT 2;
SELECT ALL * FROM t1 WHERE ((((~ (t1.c1)))-(t1.c1)));
SELECT DISTINCT * FROM t1 WHERE ((((~ (t1.c1)))-(t1.c1))) ORDER BY (((- (t1.c0)))IS NOT((((x'', -553452252))<((t1.c1, t1.c1))))) DESC LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) ISNULL) COLLATE RTRIM) ORDER BY CAST('-944334593' AS NUMERIC) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) ISNULL) COLLATE RTRIM)AND(((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT NULL)))) ORDER BY CASE ((NULL)<(t1.c0))  WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN CAST(t1.c1 AS TEXT) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c1)%(t1.c0)) ELSE ((((t1.c0)AND(t1.c0)))OR(t1.c1)) END  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1) ISNULL)) IS TRUE)) ORDER BY CASE ((NULL)<(t1.c0))  WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN CAST(t1.c1 AS TEXT) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c1)%(t1.c0)) ELSE ((((t1.c0)AND(t1.c0)))OR(t1.c1)) END  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE (CAST(t1.c1 AS BLOB)) ORDER BY (((t1.c1, t1.c0)) BETWEEN ((t1.c0, 0.3082451818542644)) AND ((t1.c1, t1.c1))) COLLATE NOCASE, '102909629' ASC;
SELECT * FROM t1 WHERE (CAST(t1.c1 AS BLOB)) ORDER BY (((t1.c1, t1.c0)) BETWEEN ((t1.c0, 0.3082451818542644)) AND ((t1.c1, t1.c1))) COLLATE NOCASE, '102909629' ASC INTERSECT SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY (((t1.c1, t1.c0)) BETWEEN ((t1.c0, 0.3082451818542644)) AND ((t1.c1, t1.c1))) COLLATE NOCASE, '102909629' ASC;
SELECT * FROM t1 WHERE (CAST(t1.c1 AS BLOB)) ORDER BY (((t1.c1, t1.c0)) BETWEEN ((t1.c0, 0.3082451818542644)) AND ((t1.c1, t1.c1))) COLLATE NOCASE, '102909629' ASC;
SELECT * FROM t1 WHERE (CAST(t1.c1 AS BLOB)) ORDER BY (((t1.c1, t1.c0)) BETWEEN ((t1.c0, 0.3082451818542644)) AND ((t1.c1, t1.c1))) COLLATE NOCASE, '102909629' ASC INTERSECT SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY (((t1.c1, t1.c0)) BETWEEN ((t1.c0, 0.3082451818542644)) AND ((t1.c1, t1.c1))) COLLATE NOCASE, '102909629' ASC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((((t1.c0)>=(t1.c1)))OR((NOT ('1966889364')))))AND(x'ec4e22'))) ORDER BY ((t1.c0)LIKE(LENGTH(t1.c1)))  NULLS FIRST, CASE WHEN t1.c0 THEN ((t1.c1)&(t1.c0)) ELSE ((t1.c1) BETWEEN (t1.c0) AND ('821797499')) END DESC, '276027166';
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((t1.c0)==(t1.c1)))OR((NOT ('1966889364')))))AND(x'ec4e22'))) ORDER BY ((((t1.c0) IS TRUE)) NOT BETWEEN (((((((t1.c1)OR(t1.c0)))OR(t1.c1)))OR('0.06824179925536078'))) AND ((((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c0))))), ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)&(TYPEOF(t1.c1)))  NULLS LAST INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((t1.c1)) BETWEEN ((((t1.c0) NOTNULL))) AND ((((t1.c0) IS TRUE))))) ORDER BY ((((t1.c0) IS TRUE)) NOT BETWEEN (((((((t1.c1)OR(t1.c0)))OR(t1.c1)))OR('0.06824179925536078'))) AND ((((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c0))))), ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)&(TYPEOF(t1.c1)))  NULLS LAST;
SELECT * FROM t1 WHERE (((((((((t1.c1 COLLATE BINARY)OR(t1.c1 COLLATE BINARY)))OR(((t1.c1) ISNULL))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)))AND(CAST(t1.c1 AS REAL))));
SELECT * FROM t1 WHERE (((((((((t1.c1 COLLATE BINARY)OR(t1.c1 COLLATE BINARY)))OR(((t1.c1) ISNULL))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)))AND(CAST(t1.c1 AS REAL)))) ORDER BY ((CAST(t1.c0 AS INTEGER)) IS FALSE) LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE (x'd416' COLLATE BINARY) ORDER BY ((CAST(t1.c0 AS INTEGER)) IS FALSE) LIMIT 0X1;
SELECT * FROM t1 WHERE (((((((((t1.c1 COLLATE BINARY)OR(t1.c1 COLLATE BINARY)))OR(((t1.c1) ISNULL))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)))AND(CAST(t1.c1 AS REAL))));
SELECT * FROM t1 WHERE (((((((((t1.c1 COLLATE BINARY)OR(t1.c1 COLLATE BINARY)))OR(((t1.c1) ISNULL))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)))AND(CAST(t1.c1 AS REAL)))) ORDER BY ((CAST(t1.c0 AS INTEGER)) IS FALSE) LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE (x'd416' COLLATE BINARY) ORDER BY ((CAST(t1.c0 AS INTEGER)) IS FALSE) LIMIT 0X1;
SELECT MAX(t1.c1) FROM t1 WHERE (((t1.c1) IS TRUE));
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1) IS TRUE))AND(((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(NULLIF(t1.c0, t1.c0)))))) ORDER BY (TIME(t1.c0, t1.c1, t1.c0, t1.c0) IN (t1.c0 COLLATE NOCASE, (t1.c1 IN (t1.c1)))) ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(x'')))AND(t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (NULL)), COALESCE(0.7613832073994785, t1.c1, t1.c0, t1.c1)))<>((((t1.c1)<(t1.c1)), (0.06342201221157595 IN (t1.c0)), ((t1.c0)IS(t1.c0))))));
SELECT DISTINCT * FROM t1 WHERE ((((((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(x'')))AND(t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (NULL)), COALESCE(0.7613832073994785, t1.c1, t1.c0, t1.c1)))<>((((t1.c1)<(t1.c1)), (0.06342201221157595 IN (t1.c0)), ((t1.c0)IS(t1.c0))))))AND(CASE WHEN MAX(t1.c0, t1.c1, t1.c1, t1.c0, t1.c0) THEN ((t1.c1)<(0.31304786534508133)) WHEN (((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c1, t1.c0))) THEN ((t1.c1)<(t1.c0)) WHEN CAST(0.15581529705921093 AS BLOB) THEN t1.c0 COLLATE BINARY END))) ORDER BY CASE WHEN t1.c1 THEN ((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)) ELSE x'c3' END DESC  NULLS FIRST, (((t1.c1) ISNULL) IN ()) DESC, CASE WHEN (x'47' IN (t1.c1)) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN '}}ewF5O%u' THEN t1.c0 WHEN t1.c1 THEN t1.c0 END END  NULLS LAST, (NOT (((((t1.c1)OR(t1.c0)))OR(t1.c0))))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(x'')))AND(t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (NULL)), COALESCE(0.7613832073994785, t1.c1, t1.c0, t1.c1)))<>((((t1.c1)<(t1.c1)), (0.06342201221157595 IN (t1.c0)), ((t1.c0)IS(t1.c0))))));
SELECT DISTINCT * FROM t1 WHERE ((((((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(x'')))AND(t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (NULL)), COALESCE(0.7613832073994785, t1.c1, t1.c0, t1.c1)))<>((((t1.c1)<(t1.c1)), (0.06342201221157595 IN (t1.c0)), ((t1.c0)IS(t1.c0))))))AND(CASE WHEN MAX(t1.c0, t1.c1, t1.c1, t1.c0, t1.c0) THEN ((t1.c1)<(0.31304786534508133)) WHEN (((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c1, t1.c0))) THEN ((t1.c1)<(t1.c0)) WHEN CAST(0.15581529705921093 AS BLOB) THEN t1.c0 COLLATE BINARY END))) ORDER BY CASE WHEN t1.c1 THEN ((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)) ELSE x'c3' END DESC  NULLS FIRST, (((t1.c1) ISNULL) IN ()) DESC, CASE WHEN (x'47' IN (t1.c1)) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN '}}ewF5O%u' THEN t1.c0 WHEN t1.c1 THEN t1.c0 END END  NULLS LAST, (NOT (((((t1.c1)OR(t1.c0)))OR(t1.c0))))  NULLS LAST LIMIT 0x0;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c0) NOT NULL))==(0.14461958274852538)));
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c0) NOT NULL))==(0.14461958274852538))) LIMIT 0x0;
SELECT MIN(t1.c0) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) ISNULL)) ORDER BY t1.c0;
SELECT MIN(t1.c0) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) ISNULL)) ORDER BY t1.c0 LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((((NULL)|(t1.c0)) IN ())) ORDER BY CASE (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CAST(t1.c1 AS NUMERIC) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN LOWER(DISTINCT t1.c0) ELSE ((t1.c0)|(t1.c0)) END DESC, ((0.8836652555309266) BETWEEN ((- (t1.c0))) AND (x'994d'));
SELECT DISTINCT * FROM t1 WHERE ((((((NULL)|(t1.c0)) IN ()))AND((((((((NOT (t1.c1)))OR(((t1.c0) BETWEEN (t1.c1) AND ('-1452555701')))))OR(((x'c1') IS TRUE))))OR(((t1.c0) IS TRUE)))))) ORDER BY CASE (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CAST(t1.c1 AS NUMERIC) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN LOWER(DISTINCT t1.c0) ELSE ((t1.c0)|(t1.c0)) END DESC, ((0.8836652555309266) BETWEEN ((- (t1.c0))) AND (x'994d')) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c1) IS FALSE))))OR(((((t1.c0)OR(NULL)))OR(t1.c1)))))OR((t1.c1 IN ())))) ORDER BY CASE (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CAST(t1.c1 AS NUMERIC) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN LOWER(DISTINCT t1.c0) ELSE ((t1.c0)|(t1.c0)) END DESC, ((0.8836652555309266) BETWEEN ((- (t1.c0))) AND (x'994d')) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE ((((NULL)|(t1.c0)) IN ())) ORDER BY CASE (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CAST(t1.c1 AS NUMERIC) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN LOWER(DISTINCT t1.c0) ELSE ((t1.c0)|(t1.c0)) END DESC, ((0.8836652555309266) BETWEEN ((- (t1.c0))) AND (x'994d'));
SELECT DISTINCT * FROM t1 WHERE ((((((NULL)|(t1.c0)) IN ()))AND((((((((NOT (t1.c1)))OR(((t1.c0) BETWEEN (t1.c1) AND ('-1452555701')))))OR(((x'c1') IS TRUE))))OR(((t1.c0) IS TRUE)))))) ORDER BY CASE (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CAST(t1.c1 AS NUMERIC) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN LOWER(DISTINCT t1.c0) ELSE ((t1.c0)|(t1.c0)) END DESC, ((0.8836652555309266) BETWEEN ((- (t1.c0))) AND (x'994d')) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c1) IS FALSE))))OR(((((t1.c0)OR(NULL)))OR(t1.c1)))))OR((t1.c1 IN ())))) ORDER BY CASE (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CAST(t1.c1 AS NUMERIC) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN LOWER(DISTINCT t1.c0) ELSE ((t1.c0)|(t1.c0)) END DESC, ((0.8836652555309266) BETWEEN ((- (t1.c0))) AND (x'994d')) LIMIT 0x1;
SELECT * FROM t1 WHERE ((((((((((((~ (t1.c1)))OR(t1.c0 COLLATE BINARY)))AND(ROUND('355517553', t1.c1))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))))OR(((((t1.c1)OR(t1.c0)))OR(t1.c0)))))AND(((t1.c1) IS TRUE)))) ORDER BY ((UPPER(DISTINCT t1.c1)) NOT BETWEEN (CAST(t1.c0 AS REAL)) AND (((0.9533477894762368) BETWEEN (t1.c0) AND (t1.c1))))  NULLS LAST;
SELECT * FROM t1 WHERE ((((((((((((~ (t1.c1)))OR(t1.c0 COLLATE BINARY)))AND(ROUND('355517553', t1.c1))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))))OR(((((t1.c1)OR(t1.c0)))OR(t1.c0)))))AND(((t1.c1) IS TRUE)))) ORDER BY CASE WHEN ((NULL)<>('20503358')) THEN (- (t1.c1)) WHEN t1.c0 THEN (t1.c1 IN (t1.c1)) WHEN (t1.c0 IN (t1.c1)) THEN json_valid(0.30257605186747416) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) THEN CAST(t1.c1 AS REAL) END ASC, json_patch(t1.c0, x'68')  NULLS LAST, (((((t1.c0, t1.c1))>((t1.c1, t1.c1))))IS(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))) INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1)>=(t1.c1)))IS(((t1.c1) NOT NULL)))) ORDER BY CASE WHEN ((NULL)<>('20503358')) THEN (- (t1.c1)) WHEN t1.c0 THEN (t1.c1 IN (t1.c1)) WHEN (t1.c0 IN (t1.c1)) THEN json_valid(0.30257605186747416) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) THEN CAST(t1.c1 AS REAL) END ASC, json_patch(t1.c0, x'68')  NULLS LAST, (((((t1.c0, t1.c1))>((t1.c1, t1.c1))))IS(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))));
SELECT * FROM t1 WHERE ((((((((((((~ (t1.c1)))OR(t1.c0 COLLATE BINARY)))AND(ROUND('355517553', t1.c1))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))))OR(((((t1.c1)OR(t1.c0)))OR(t1.c0)))))AND(((t1.c1) IS TRUE)))) ORDER BY ((UPPER(DISTINCT t1.c1)) NOT BETWEEN (CAST(t1.c0 AS REAL)) AND (((0.9533477894762368) BETWEEN (t1.c0) AND (t1.c1))))  NULLS LAST;
SELECT * FROM t1 WHERE ((((((((((((~ (t1.c1)))OR(t1.c0 COLLATE BINARY)))AND(ROUND('355517553', t1.c1))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))))OR(((((t1.c1)OR(t1.c0)))OR(t1.c0)))))AND(((t1.c1) IS TRUE)))) ORDER BY CASE WHEN ((NULL)<>('20503358')) THEN (- (t1.c1)) WHEN t1.c0 THEN (t1.c1 IN (t1.c1)) WHEN (t1.c0 IN (t1.c1)) THEN json_valid(0.30257605186747416) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) THEN CAST(t1.c1 AS REAL) END ASC, json_patch(t1.c0, x'68')  NULLS LAST, (((((t1.c0, t1.c1))>((t1.c1, t1.c1))))IS(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))) INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1)>=(t1.c1)))IS(((t1.c1) NOT NULL)))) ORDER BY CASE WHEN ((NULL)<>('20503358')) THEN (- (t1.c1)) WHEN t1.c0 THEN (t1.c1 IN (t1.c1)) WHEN (t1.c0 IN (t1.c1)) THEN json_valid(0.30257605186747416) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) THEN CAST(t1.c1 AS REAL) END ASC, json_patch(t1.c0, x'68')  NULLS LAST, (((((t1.c0, t1.c1))>((t1.c1, t1.c1))))IS(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))));
SELECT ALL * FROM t1 WHERE ((CAST(t1.c0 AS REAL) IN (((t1.c0) IS TRUE))));
SELECT DISTINCT * FROM t1 WHERE ((((CAST(t1.c0 AS REAL) IN (((t1.c0) IS TRUE))))AND(json_object(CAST(t1.c1 AS NUMERIC), (('-171175850')>>(t1.c1)))))) LIMIT 0;
SELECT ALL * FROM t1 WHERE ((CAST(t1.c0 AS REAL) IN (((t1.c0) IS TRUE))));
SELECT DISTINCT * FROM t1 WHERE ((((CAST(t1.c0 AS REAL) IN (((t1.c0) IS TRUE))))AND(json_object(CAST(t1.c1 AS NUMERIC), (('-171175850')>>(t1.c1)))))) LIMIT 0;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (0x843b38)))GLOB(((((((t1.c1)AND(t1.c1)))OR(0.9292836240139353)))AND(t1.c0))))) ORDER BY t1.c1  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c0) AND (0x843b38)))GLOB(((((((t1.c1)AND(t1.c1)))OR(0.9292836240139353)))AND(t1.c0)))))AND(((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT NULL)))) ORDER BY t1.c1  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c0)%(NULL))) NOT NULL));
SELECT * FROM t1 WHERE (((((t1.c0)%(NULL))) NOT NULL)) ORDER BY (t1.c1 IN ((~ (t1.c0))))  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c0)%(NULL))) NOT NULL));
SELECT * FROM t1 WHERE (((((t1.c0)%(NULL))) NOT NULL)) ORDER BY (t1.c1 IN ((~ (t1.c0))))  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE (((((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(TIME(t1.c1, t1.c1, t1.c1, NULL))))AND(((((t1.c0)OR(t1.c1)))AND(t1.c0)))))AND(((1.62651339E9)IS NOT(t1.c0))))) ORDER BY ((t1.c0 IN ('1')) IN ()) ASC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(TIME(t1.c1, t1.c1, t1.c1, NULL))))AND(((((t1.c0)OR(t1.c1)))AND(t1.c0)))))AND(((1.62651339E9)IS NOT(t1.c0))))) ORDER BY (((((~ (t1.c0)))OR((+ (t1.c0)))))AND(t1.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(0.9229280107698404)) THEN (('1sH')=(t1.c1)) END) ORDER BY LIKE(((((t1.c0)AND(t1.c0)))OR(t1.c0)), CAST(t1.c1 AS NUMERIC), '|')  NULLS FIRST, ((t1.c0 COLLATE BINARY)>>(CAST(t1.c1 AS INTEGER))), (((t1.c1 IN (t1.c0, '-280476555')))GLOB(CAST('' AS INTEGER))) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE WHEN ((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(0.9229280107698404)) THEN (('1sH')==(t1.c1)) END)AND(LIKELIHOOD((((t1.c0))>((t1.c1))), (('2109462779')<<(t1.c0)))))) ORDER BY LIKE(((((t1.c0)AND(t1.c0)))OR(t1.c0)), CAST(t1.c1 AS NUMERIC), '|')  NULLS FIRST, ((t1.c0 COLLATE BINARY)>>(CAST(t1.c1 AS INTEGER))), (((t1.c1 IN (t1.c0, '-280476555')))GLOB(CAST('' AS INTEGER))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c1)AND(t1.c1)))%((t1.c0 IN ())))) ORDER BY LIKE(((((t1.c0)AND(t1.c0)))OR(t1.c0)), CAST(t1.c1 AS NUMERIC), '|')  NULLS FIRST, ((t1.c0 COLLATE BINARY)>>(CAST(t1.c1 AS INTEGER))), (((t1.c1 IN (t1.c0, '-280476555')))GLOB(CAST('' AS INTEGER))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((~ (CAST(t1.c1 AS TEXT)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c1 END) AND (json_array(t1.c0, t1.c0))) DESC, ((((t1.c1) ISNULL))+((~ (t1.c0))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((~ (CAST(t1.c1 AS TEXT)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c1 END) AND (json_array(t1.c0, t1.c0))) DESC, ((((t1.c1) ISNULL))+((~ (t1.c0))))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE BINARY) BETWEEN (((t1.c1) NOT NULL)) AND (((t1.c0) IS FALSE)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c1 END) AND (json_array(t1.c0, t1.c0))) DESC, ((((t1.c1) ISNULL))+((~ (t1.c0))))  NULLS FIRST LIMIT 0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))-((t1.c1 IN (t1.c1))))) ORDER BY (((t1.c0)) BETWEEN ((((((t1.c1)AND(t1.c0)))OR(t1.c1)))) AND ((((t1.c0)<=(77817654))))), x'b8' DESC, (((t1.c0, '0.24664337080653986', t1.c0)) NOT BETWEEN (((~ (t1.c0)), x'', t1.c0)) AND ((CASE t1.c1  WHEN t1.c1 THEN x'' WHEN t1.c1 THEN t1.c0 END, NULLIF(DISTINCT t1.c0, '-716591780'), CASE t1.c1  WHEN '-1997783105' THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)))  NULLS FIRST, (+ ((+ (t1.c0))))  NULLS LAST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))-((t1.c1 IN (t1.c1))))) ORDER BY (((t1.c0)) BETWEEN ((((((t1.c1)AND(t1.c0)))OR(t1.c1)))) AND ((((t1.c0)<=(0x4a36736))))), x'b8' DESC, (((t1.c0, '0.24664337080653986', t1.c0)) NOT BETWEEN (((~ (t1.c0)), x'', t1.c0)) AND ((CASE t1.c1  WHEN t1.c1 THEN x'' WHEN t1.c1 THEN t1.c0 END, NULLIF(DISTINCT t1.c0, '-716591780'), CASE t1.c1  WHEN '-1997783105' THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)))  NULLS FIRST, (+ ((+ (t1.c0))))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC)) NOTNULL)) ORDER BY (((t1.c0)) BETWEEN ((((((t1.c1)AND(t1.c0)))OR(t1.c1)))) AND ((((t1.c0)<=(77817654))))), x'b8' DESC, (((t1.c0, '0.24664337080653986', t1.c0)) NOT BETWEEN (((~ (t1.c0)), x'', t1.c0)) AND ((CASE t1.c1  WHEN t1.c1 THEN x'' WHEN t1.c1 THEN t1.c0 END, NULLIF(DISTINCT t1.c0, '-716591780'), CASE t1.c1  WHEN '-1997783105' THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)))  NULLS FIRST, (+ ((+ (t1.c0))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1)LIKE(t1.c1)) AS BLOB));
SELECT * FROM t1 WHERE (CAST(((t1.c1)LIKE(t1.c1)) AS BLOB)) ORDER BY ((LIKELY(t1.c1))<<(TOTAL_CHANGES()))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE ('1232394875') ORDER BY ((LIKELY(t1.c1))<<(TOTAL_CHANGES()))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1)LIKE(t1.c1)) AS BLOB));
SELECT * FROM t1 WHERE (CAST(((t1.c1)LIKE(t1.c1)) AS BLOB)) ORDER BY ((LIKELY(t1.c1))<<(TOTAL_CHANGES()))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE ('1232394875') ORDER BY ((LIKELY(t1.c1))<<(TOTAL_CHANGES()))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c1) IS FALSE))/(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY (((((t1.c1)AND(t1.c0)))OR(t1.c1)) IN ()) ASC, ((((NULL)|(t1.c0))) IS FALSE), ((t1.c0) NOT BETWEEN ((((((('')AND(t1.c1)))AND(t1.c0)))OR(t1.c1))) AND (((t1.c0) NOTNULL))) ASC, ((((((t1.c1)AND(t1.c1)))AND(t1.c0)))<(t1.c1));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) IS FALSE))/(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY (((((t1.c1)AND(t1.c0)))OR(t1.c1)) IN ()) ASC, ((((NULL)|(t1.c0))) IS FALSE), ((t1.c0) NOT BETWEEN ((((((('')AND(t1.c1)))AND(t1.c0)))OR(t1.c1))) AND (((t1.c0) NOTNULL))) ASC, ((((((t1.c1)AND(t1.c1)))AND(t1.c0)))<(t1.c1)) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (LOWER(t1.c1) COLLATE NOCASE) ORDER BY (((((t1.c1)AND(t1.c0)))OR(t1.c1)) IN ()) ASC, ((((NULL)|(t1.c0))) IS FALSE), ((t1.c0) NOT BETWEEN ((((((('')AND(t1.c1)))AND(t1.c0)))OR(t1.c1))) AND (((t1.c0) NOTNULL))) ASC, ((((((t1.c1)AND(t1.c1)))AND(t1.c0)))<(t1.c1)) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((((t1.c1) IS FALSE))/(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY (((((t1.c1)AND(t1.c0)))OR(t1.c1)) IN ()) ASC, ((((NULL)|(t1.c0))) IS FALSE), ((t1.c0) NOT BETWEEN ((((((('')AND(t1.c1)))AND(t1.c0)))OR(t1.c1))) AND (((t1.c0) NOTNULL))) ASC, ((((((t1.c1)AND(t1.c1)))AND(t1.c0)))<(t1.c1));
SELECT MAX(t1.c1) FROM t1 WHERE (CASE WHEN t1.c1 THEN ((t1.c0) NOTNULL) WHEN (NOT (t1.c1)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE '1703411045' END END) ORDER BY (((((((((((t1.c1 IN (t1.c0, t1.c0)))OR(((((((((NULL)OR(x'58a7')))OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))))OR(CASE '270655963'  WHEN t1.c1 THEN t1.c1 END)))AND(CASE t1.c1  WHEN '?g!K+buo㾿' THEN t1.c0 ELSE t1.c0 END)))AND(((t1.c1)LIKE(t1.c0)))))OR(-1.04042863E8)) ASC  NULLS LAST, t1.c1 DESC  NULLS FIRST, ((((((((0.043748213718172724)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)) COLLATE BINARY DESC;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CASE WHEN t1.c1 THEN ((t1.c0) NOTNULL) WHEN (NOT (t1.c1)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE '1703411045' END END) ORDER BY (((+ (t1.c1)))<<(CAST(t1.c0 AS NUMERIC))) DESC, x'' DESC, ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))AND(((t1.c0)>>(t1.c0)))))AND(((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(0.5179032271593954))))  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c0)OR(t1.c1)))|(CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))) ORDER BY (((+ (t1.c1)))<<(CAST(t1.c0 AS NUMERIC))) DESC, x'' DESC, ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))AND(((t1.c0)>>(t1.c0)))))AND(((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(0.5179032271593954))))  NULLS LAST LIMIT 3;
SELECT ALL COUNT(*) FROM t1 WHERE (((NOT (t1.c0)) IN ((- (t1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((NOT (t1.c0)) IN ((- (t1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1))))) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((t1.c0 COLLATE RTRIM) IS TRUE)) ORDER BY 0x44a065cc DESC  NULLS FIRST, ((((- (t1.c0)), t1.c0 COLLATE NOCASE, CAST(t1.c0 AS BLOB)))<(((((t1.c1))!=((t1.c0))), (('<V>_Y귋닸6⽑') ISNULL), (((t1.c0, 1898842974, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c1, t1.c0, t1.c0)))))) ASC  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((t1.c0 COLLATE RTRIM) IS TRUE)) ORDER BY 1151362508 DESC  NULLS FIRST, ((((- (t1.c0)), t1.c0 COLLATE NOCASE, CAST(t1.c0 AS BLOB)))<(((((t1.c1))!=((t1.c0))), (('<V>_Y귋닸6⽑') ISNULL), (((t1.c0, 1898842974, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c1, t1.c0, t1.c0)))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1))  WHEN ((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c1)) THEN 0xffffffff968d6300 ELSE (((t1.c0))<=((t1.c0))) END);
SELECT COUNT(*) FROM t1 WHERE (CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1))  WHEN ((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c1)) THEN -1769118976 ELSE (((t1.c0))==((t1.c0))) END) ORDER BY (((((t1.c1, '-0.0')) BETWEEN ((t1.c0, '704157390')) AND ((t1.c1, t1.c0)))) ISNULL)  NULLS LAST, (((NOT (t1.c1)))GLOB((t1.c1 IN (t1.c1)))) DESC  NULLS FIRST, (((CAST(t1.c1 AS BLOB), (((t1.c0, t1.c0, t1.c0, t1.c0))==((t1.c0, t1.c0, t1.c1, t1.c1)))))==((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, ((t1.c0)<=(t1.c0)))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (0.8731126569995736) ORDER BY ((~ (t1.c0)) IN (((t1.c1) ISNULL))) ASC, TYPEOF(DISTINCT (t1.c0 IN ()))  NULLS LAST, CAST(CAST('鲨w' AS BLOB) AS TEXT);
SELECT DISTINCT * FROM t1 WHERE (0.8731126569995736) ORDER BY ((~ (t1.c0)) IN (((t1.c1) ISNULL))) ASC, TYPEOF(DISTINCT (t1.c0 IN ()))  NULLS LAST, CAST(CAST('鲨w' AS BLOB) AS TEXT) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1)AND(CAST(t1.c1 AS REAL))))AND(json_valid(t1.c0))))AND(((t1.c0) BETWEEN (0x2cce5b36) AND (t1.c1))))) ORDER BY ((~ (t1.c0)) IN (((t1.c1) ISNULL))) ASC, TYPEOF(DISTINCT (t1.c0 IN ()))  NULLS LAST, CAST(CAST('鲨w' AS BLOB) AS TEXT);
SELECT ALL * FROM t1 WHERE (0.8731126569995736) ORDER BY ((~ (t1.c0)) IN (((t1.c1) ISNULL))) ASC, TYPEOF(DISTINCT (t1.c0 IN ()))  NULLS LAST, CAST(CAST('鲨w' AS BLOB) AS TEXT);
SELECT DISTINCT * FROM t1 WHERE (0.8731126569995736) ORDER BY ((~ (t1.c0)) IN (((t1.c1) ISNULL))) ASC, TYPEOF(DISTINCT (t1.c0 IN ()))  NULLS LAST, CAST(CAST('鲨w' AS BLOB) AS TEXT) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1)AND(CAST(t1.c1 AS REAL))))AND(json_valid(t1.c0))))AND(((t1.c0) BETWEEN (0x2cce5b36) AND (t1.c1))))) ORDER BY ((~ (t1.c0)) IN (((t1.c1) ISNULL))) ASC, TYPEOF(DISTINCT (t1.c0 IN ()))  NULLS LAST, CAST(CAST('鲨w' AS BLOB) AS TEXT);
SELECT * FROM t1 WHERE (LENGTH((((t1.c0, t1.c1))=((t1.c0, t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (LENGTH((((t1.c0, t1.c1))=((t1.c0, t1.c0)))));
SELECT * FROM t1 WHERE (LENGTH((((t1.c0, t1.c1))=((t1.c0, t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (LENGTH((((t1.c0, t1.c1))=((t1.c0, t1.c0)))));
SELECT * FROM t1 WHERE ((~ (LIKELIHOOD(t1.c1, t1.c1)))) ORDER BY ((0.10682179942133385)OR(CAST(t1.c0 AS REAL)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((~ (LIKELIHOOD(t1.c1, t1.c1))))AND(t1.c0))) ORDER BY ((0.10682179942133385)OR(CAST(t1.c0 AS REAL)))  NULLS FIRST;
SELECT * FROM t1 WHERE ((~ (LIKELIHOOD(t1.c1, t1.c1)))) ORDER BY ((0.10682179942133385)OR(CAST(t1.c0 AS REAL)))  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c0)IS(t1.c1)) COLLATE BINARY COLLATE NOCASE) ORDER BY HEX(DISTINCT (0.02541726709560943 IN ()))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((t1.c0)IS(t1.c1)) COLLATE BINARY COLLATE NOCASE) ORDER BY HEX(DISTINCT (0.02541726709560943 IN ()))  NULLS FIRST INTERSECT SELECT * FROM t1 NOT INDEXED WHERE ((((((t1.c0, t1.c0, x'94'))<=((t1.c1, t1.c1, t1.c0))))GLOB(((t1.c1)/(t1.c1))))) ORDER BY HEX(DISTINCT (0.02541726709560943 IN ()))  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c0)IS(t1.c1)) COLLATE BINARY COLLATE NOCASE) ORDER BY HEX(DISTINCT (0.02541726709560943 IN ()))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((t1.c0)IS(t1.c1)) COLLATE BINARY COLLATE NOCASE) ORDER BY HEX(DISTINCT (0.02541726709560943 IN ()))  NULLS FIRST INTERSECT SELECT * FROM t1 NOT INDEXED WHERE ((((((t1.c0, t1.c0, x'94'))<=((t1.c1, t1.c1, t1.c0))))GLOB(((t1.c1)/(t1.c1))))) ORDER BY HEX(DISTINCT (0.02541726709560943 IN ()))  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (LENGTH((t1.c0 IN (t1.c0)))) ORDER BY ((t1.c0)IS(((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c0))))  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((LENGTH((t1.c0 IN (t1.c0))))AND(CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c1) NOT NULL) THEN -1.6410412E7 WHEN (('1119005892')==(t1.c1)) THEN (((t1.c0, t1.c0, t1.c1, t1.c0))==(('2071209395', t1.c0, '1956082742', t1.c0))) WHEN IFNULL(t1.c1, t1.c1) THEN ((((t1.c0)AND(t1.c1)))OR(t1.c1)) WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN NULL ELSE '-299455398' END))) ORDER BY ((t1.c0)IS(((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c0))))  NULLS LAST INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE ((((t1.c0 IN ())) ISNULL)) ORDER BY ((t1.c0)IS(((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c0))))  NULLS LAST;
SELECT * FROM t1 WHERE ((((t1.c1)+(t1.c1)) IN ()));
SELECT ALL * FROM t1 WHERE ((((((t1.c1)+(t1.c1)) IN ()))AND((- (((278294184) ISNULL)))))) ORDER BY ((((((t1.c1)AND(t1.c1)))OR(x'7709bd'))) IS TRUE) DESC  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c1)+(t1.c1)) IN ()));
SELECT ALL * FROM t1 WHERE ((((((t1.c1)+(t1.c1)) IN ()))AND((- (((278294184) ISNULL)))))) ORDER BY ((((((t1.c1)AND(t1.c1)))OR(x'7709bd'))) IS TRUE) DESC  NULLS LAST LIMIT 0;
SELECT MIN(t1.c0) FROM t1 WHERE ((TRIM(DISTINCT t1.c0) IN ()));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((TRIM(DISTINCT t1.c0) IN ())) ORDER BY (- ((t1.c0 IN (t1.c0)))), t1.c0 DESC  NULLS FIRST LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE BINARY) BETWEEN (((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(t1.c1))) AND (t1.c1 COLLATE NOCASE)));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c0 COLLATE BINARY) BETWEEN (((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(t1.c1))) AND (t1.c1 COLLATE NOCASE)))AND((((t1.c0, NULLIF(t1.c1, '937062906')))<=(((((t1.c1))>((t1.c0))), t1.c1)))))) LIMIT 1 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (t1.c0 COLLATE RTRIM) LIMIT 0X1;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((('a嬶m|')||('2110244949')))*(IFNULL(t1.c1, t1.c0)))) ORDER BY (t1.c0 IN (x'' COLLATE NOCASE)) ASC  NULLS LAST, TRIM(CAST(t1.c0 AS TEXT), ((t1.c1) NOT NULL));
SELECT MIN(t1.c0) FROM t1 WHERE ((((('a嬶m|')||('2110244949')))*(IFNULL(t1.c1, t1.c0)))) ORDER BY (t1.c0 IN (x'' COLLATE NOCASE)) ASC  NULLS LAST, TRIM(CAST(t1.c0 AS TEXT), ((t1.c1) NOT NULL));
SELECT * FROM t1 WHERE (((t1.c0 COLLATE BINARY) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) BETWEEN (((((t1.c1)OR(t1.c0)))OR(t1.c0))) AND (IFNULL(DISTINCT t1.c0, t1.c0))) DESC, (((t1.c0)<(t1.c1)) IN (x'30a3c8', ((t1.c1)IS NOT(t1.c0)))) DESC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN 't' THEN t1.c1 WHEN t1.c1 THEN t1.c1 END) NOT NULL)) ORDER BY ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) BETWEEN (((((t1.c1)OR(t1.c0)))OR(t1.c0))) AND (IFNULL(DISTINCT t1.c0, t1.c0))) DESC, (((t1.c0)<(t1.c1)) IN (x'30a3c8', ((t1.c1)IS NOT(t1.c0)))) DESC LIMIT 1;
SELECT * FROM t1 WHERE (((t1.c0 COLLATE BINARY) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) BETWEEN (((((t1.c1)OR(t1.c0)))OR(t1.c0))) AND (IFNULL(DISTINCT t1.c0, t1.c0))) DESC, (((t1.c0)<(t1.c1)) IN (x'30a3c8', ((t1.c1)IS NOT(t1.c0)))) DESC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN 't' THEN t1.c1 WHEN t1.c1 THEN t1.c1 END) NOT NULL)) ORDER BY ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) BETWEEN (((((t1.c1)OR(t1.c0)))OR(t1.c0))) AND (IFNULL(DISTINCT t1.c0, t1.c0))) DESC, (((t1.c0)<(t1.c1)) IN (x'30a3c8', ((t1.c1)IS NOT(t1.c0)))) DESC LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((((((t1.c1, t1.c0, t1.c0)) BETWEEN ((t1.c1, x'0f19', t1.c1)) AND ((t1.c0, t1.c0, t1.c0))))AND(((t1.c0)IS(t1.c1)))))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY ((UPPER(t1.c1)) ISNULL) DESC  NULLS FIRST, (((+ (t1.c1))) IS TRUE) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1, t1.c0, t1.c0)) BETWEEN ((t1.c1, x'0f19', t1.c1)) AND ((t1.c0, t1.c0, t1.c0))))AND(((t1.c0)IS(t1.c1)))))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY ((UPPER(t1.c1)) ISNULL) DESC  NULLS FIRST, (((+ (t1.c1))) IS TRUE) DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ (((t1.c0) NOT BETWEEN (0x27bcc014) AND (88863025))))) ORDER BY ((UPPER(t1.c1)) ISNULL) DESC  NULLS FIRST, (((+ (t1.c1))) IS TRUE) DESC;
SELECT ALL * FROM t1 WHERE ((((((((t1.c1, t1.c0, t1.c0)) BETWEEN ((t1.c1, x'0f19', t1.c1)) AND ((t1.c0, t1.c0, t1.c0))))AND(((t1.c0)IS(t1.c1)))))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY ((UPPER(t1.c1)) ISNULL) DESC  NULLS FIRST, (((+ (t1.c1))) IS TRUE) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1, t1.c0, t1.c0)) BETWEEN ((t1.c1, x'0f19', t1.c1)) AND ((t1.c0, t1.c0, t1.c0))))AND(((t1.c0)IS(t1.c1)))))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY ((UPPER(t1.c1)) ISNULL) DESC  NULLS FIRST, (((+ (t1.c1))) IS TRUE) DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ (((t1.c0) NOT BETWEEN (0x27bcc014) AND (88863025))))) ORDER BY ((UPPER(t1.c1)) ISNULL) DESC  NULLS FIRST, (((+ (t1.c1))) IS TRUE) DESC;
SELECT * FROM t1 WHERE (t1.c0 COLLATE NOCASE) ORDER BY (((((t1.c1, t1.c0))>=((t1.c1, t1.c1))))LIKE((NOT (t1.c0)))) DESC;
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE NOCASE)AND((t1.c1 IN (t1.c0)) COLLATE BINARY))) ORDER BY (((t1.c0, t1.c0, t1.c1)) BETWEEN ((((((t1.c0)OR(t1.c0)))AND(t1.c1)), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1)/('p')))) AND ((t1.c1 COLLATE RTRIM, CAST(t1.c0 AS INTEGER), (((t1.c0, '952584868')) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1)))))), LIKELY(DISTINCT (((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1)))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c0 COLLATE NOCASE) ORDER BY (((((t1.c1, t1.c0))>=((t1.c1, t1.c1))))LIKE((NOT (t1.c0)))) DESC;
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE NOCASE)AND((t1.c1 IN (t1.c0)) COLLATE BINARY))) ORDER BY (((t1.c0, t1.c0, t1.c1)) BETWEEN ((((((t1.c0)OR(t1.c0)))AND(t1.c1)), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1)/('p')))) AND ((t1.c1 COLLATE RTRIM, CAST(t1.c0 AS INTEGER), (((t1.c0, '952584868')) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1)))))), LIKELY(DISTINCT (((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1)))) DESC  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE (CAST(CAST(t1.c0 AS NUMERIC) AS INTEGER)) ORDER BY ((TIME(t1.c1, t1.c0, x'ff', t1.c1, t1.c1, t1.c1, t1.c1, t1.c1))OR(t1.c1 COLLATE BINARY)), 0.7286422312004773, x'94'  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE (((CAST(CAST(t1.c0 AS NUMERIC) AS INTEGER))AND((NOT (((t1.c1) NOT NULL)))))) ORDER BY (~ (((x'')!=(t1.c1)))) ASC, '204650698';
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT ALL * FROM t1 WHERE (((t1.c0)AND(((TRIM(t1.c1))<(t1.c1))))) ORDER BY (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) IN ((NOT (t1.c0))))  NULLS FIRST LIMIT 0x2 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c0, t1.c0))<((t1.c1, t1.c1))) IN ())) ORDER BY (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) IN ((NOT (t1.c0))))  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT ALL * FROM t1 WHERE (((t1.c0)AND(((TRIM(t1.c1))<(t1.c1))))) ORDER BY (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) IN ((NOT (t1.c0))))  NULLS FIRST LIMIT 0x2 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c0, t1.c0))<((t1.c1, t1.c1))) IN ())) ORDER BY (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) IN ((NOT (t1.c0))))  NULLS FIRST LIMIT 0X2;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((((t1.c1)*(t1.c1)))OR(UNLIKELY(t1.c1))))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END))) ORDER BY (NOT ('퇺V')) COLLATE NOCASE DESC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((((((t1.c1)*(t1.c1)))OR(UNLIKELY(t1.c1))))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))AND(t1.c1))) ORDER BY (NOT ('퇺V')) COLLATE NOCASE DESC LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ('0.35425045777259156') ORDER BY CAST(((t1.c0)!=(t1.c0)) AS INTEGER) DESC  NULLS FIRST, ((((t1.c0) ISNULL))<<(((t1.c0) NOTNULL)));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((('0.35425045777259156')AND(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM))) ORDER BY CAST(((t1.c0)!=(t1.c0)) AS INTEGER) DESC  NULLS FIRST, ((((t1.c0) ISNULL))<<(((t1.c0) NOTNULL)));
SELECT MIN(t1.c1) FROM t1 WHERE ((NOT (t1.c1)) COLLATE BINARY);
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((NOT (t1.c1)) COLLATE BINARY)AND(NULLIF(DISTINCT ((((t1.c0)OR(t1.c0)))OR(t1.c0)), '853913989'))));
SELECT ALL * FROM t1 WHERE (((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1))) IN (t1.c1)));
SELECT * FROM t1 WHERE (((((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1))) IN (t1.c1)))AND(CASE t1.c0 COLLATE RTRIM  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (((NULL)) BETWEEN ((t1.c1)) AND ((t1.c0))) WHEN t1.c0 COLLATE RTRIM THEN t1.c0 WHEN (t1.c0 IN ()) THEN ((t1.c0)<(t1.c1)) END))) ORDER BY ((((t1.c1))>=((t1.c1))) IN (((t1.c0)LIKE('xRFu')))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1))) IN (t1.c1)));
SELECT * FROM t1 WHERE (((((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1))) IN (t1.c1)))AND(CASE t1.c0 COLLATE RTRIM  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (((NULL)) BETWEEN ((t1.c1)) AND ((t1.c0))) WHEN t1.c0 COLLATE RTRIM THEN t1.c0 WHEN (t1.c0 IN ()) THEN ((t1.c0)<(t1.c1)) END))) ORDER BY ((((t1.c1))>=((t1.c1))) IN (((t1.c0)LIKE('xRFu')))) LIMIT 0X0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((t1.c1 IN ((((t1.c1, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0)) AND ((x'', t1.c0, t1.c1, t1.c0)))))) ORDER BY CAST(0.12175375365437646 AS BLOB)  NULLS LAST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((t1.c1 IN ((((t1.c1, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0)) AND ((x'', t1.c0, t1.c1, t1.c0))))))AND(((NULL) NOT BETWEEN (t1.c0) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN 0.483950952278026 ELSE t1.c0 END))))) ORDER BY CAST(0.12175375365437646 AS BLOB)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c0) BETWEEN ((('EC2')>=(t1.c1))) AND (t1.c0)));
SELECT DISTINCT * FROM t1 WHERE (((t1.c0) BETWEEN ((('EC2')>=(t1.c1))) AND (t1.c0))) ORDER BY (((t1.c1)) NOT BETWEEN ((((t1.c1) ISNULL))) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))))  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0) NOT BETWEEN ((~ (t1.c0))) AND ((NOT ('6Y/J-'))))) ORDER BY (((t1.c1)) NOT BETWEEN ((((t1.c1) ISNULL))) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))))  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((t1.c0) BETWEEN ((('EC2')>=(t1.c1))) AND (t1.c0)));
SELECT DISTINCT * FROM t1 WHERE (((t1.c0) BETWEEN ((('EC2')>=(t1.c1))) AND (t1.c0))) ORDER BY (((t1.c1)) NOT BETWEEN ((((t1.c1) ISNULL))) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))))  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0) NOT BETWEEN ((~ (t1.c0))) AND ((NOT ('6Y/J-'))))) ORDER BY (((t1.c1)) NOT BETWEEN ((((t1.c1) ISNULL))) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))))  NULLS LAST LIMIT 1;
SELECT * FROM t1 WHERE (UPPER(DISTINCT '1706770401'));
SELECT DISTINCT * FROM t1 WHERE (UPPER(DISTINCT '1706770401'));
SELECT * FROM t1 WHERE (UPPER(DISTINCT '1706770401'));
SELECT DISTINCT * FROM t1 WHERE (UPPER(DISTINCT '1706770401'));
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((~ (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY t1.c1  NULLS LAST, ((((((t1.c0)OR(t1.c0)))AND(t1.c1)))<<(CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)) DESC;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((~ (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY (HEX(DISTINCT t1.c1) IN ((t1.c0 IN ())))  NULLS FIRST, CAST(((t1.c1)>=(t1.c0)) AS TEXT) LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CAST(((t1.c1)AND(x'834a')) AS TEXT)) ORDER BY (HEX(DISTINCT t1.c1) IN ((t1.c0 IN ())))  NULLS FIRST, CAST(((t1.c1)>=(t1.c0)) AS TEXT) LIMIT 0;
SELECT MIN(t1.c0) FROM t1 WHERE ((((t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0)LIKE(t1.c1)), (((t1.c1, t1.c1))<=((t1.c0, t1.c0))), (+ (t1.c1)))) AND ((CASE WHEN t1.c1 THEN -1627977926 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, ((t1.c1)<(t1.c0)), ((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c0))))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((((t1.c0)LIKE(t1.c1)), (((t1.c1, t1.c1))<=((t1.c0, t1.c0))), (+ (t1.c1)))) AND ((CASE WHEN t1.c1 THEN 0Xffffffff9ef7073a WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, ((t1.c1)<=(t1.c0)), ((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c0))))));
SELECT * FROM t1 WHERE ((~ (CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN 1.486003871E9 THEN NULL WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)));
SELECT DISTINCT * FROM t1 WHERE ((((~ (CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN 1.486003871E9 THEN NULL WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND((~ ((+ (t1.c1))))))) ORDER BY (((load_extension(t1.c0)))<>(((~ (t1.c0)))));
SELECT * FROM t1 WHERE ((~ (CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN 1.486003871E9 THEN NULL WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)));
SELECT DISTINCT * FROM t1 WHERE ((((~ (CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN 1.486003871E9 THEN NULL WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND((~ ((+ (t1.c1))))))) ORDER BY (((load_extension(t1.c0)))<>(((~ (t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE t1.c1 COLLATE RTRIM  WHEN CAST(t1.c1 AS TEXT) THEN (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, NULL)) AND ((t1.c0, t1.c1, t1.c0))) WHEN (t1.c1 IN ()) THEN 'naTK셙>' END);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE t1.c1 COLLATE RTRIM  WHEN CAST(t1.c1 AS TEXT) THEN (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, NULL)) AND ((t1.c0, t1.c1, t1.c0))) WHEN (t1.c1 IN ()) THEN 'naTK셙>' END)AND(((CASE t1.c0  WHEN t1.c0 THEN 0.5852580507635824 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END) ISNULL)))) ORDER BY (((t1.c0, t1.c1, t1.c1, t1.c1)) BETWEEN ((CAST(t1.c0 AS TEXT), ((((((x'')OR(t1.c1)))OR(t1.c0)))OR('0.4377401951939409')), CASE WHEN t1.c1 THEN '''' END, ((t1.c0)GLOB(t1.c1)))) AND (((((t1.c0, t1.c0, NULL)) NOT BETWEEN ((x'17', t1.c1, t1.c0)) AND ((t1.c0, t1.c1, t1.c1))), CAST(t1.c1 AS REAL), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), t1.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CASE WHEN ((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)) THEN CAST(0.33300610216791693 AS INTEGER) WHEN ((t1.c0) ISNULL) THEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN (((t1.c0))>((t1.c1))) WHEN CAST(t1.c1 AS TEXT) THEN ((t1.c1) ISNULL) END) ORDER BY CAST(0.41769046890290185 AS NUMERIC)  NULLS FIRST, ((CAST(0.2541116659219602 AS BLOB)) IS TRUE);
SELECT ALL * FROM t1 WHERE (((CASE WHEN ((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)) THEN CAST(0.33300610216791693 AS INTEGER) WHEN ((t1.c0) ISNULL) THEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN (((t1.c0))>((t1.c1))) WHEN CAST(t1.c1 AS TEXT) THEN ((t1.c1) ISNULL) END)AND(t1.c0))) ORDER BY (((((t1.c0, t1.c0, t1.c0))>((t1.c1, t1.c0, t1.c1))))<<(t1.c1))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) ISNULL)) ORDER BY (((((t1.c0, t1.c0, t1.c0))>((t1.c1, t1.c0, t1.c1))))<<(t1.c1))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (CASE WHEN ((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)) THEN CAST(0.33300610216791693 AS INTEGER) WHEN ((t1.c0) ISNULL) THEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN (((t1.c0))>((t1.c1))) WHEN CAST(t1.c1 AS TEXT) THEN ((t1.c1) ISNULL) END) ORDER BY CAST(0.41769046890290185 AS NUMERIC)  NULLS FIRST, ((CAST(0.2541116659219602 AS BLOB)) IS TRUE);
SELECT ALL * FROM t1 WHERE (((CASE WHEN ((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)) THEN CAST(0.33300610216791693 AS INTEGER) WHEN ((t1.c0) ISNULL) THEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN (((t1.c0))>((t1.c1))) WHEN CAST(t1.c1 AS TEXT) THEN ((t1.c1) ISNULL) END)AND(t1.c0))) ORDER BY (((((t1.c0, t1.c0, t1.c0))>((t1.c1, t1.c0, t1.c1))))<<(t1.c1))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((t1.c1 COLLATE NOCASE) ISNULL)) ORDER BY (((((t1.c0, t1.c0, t1.c0))>((t1.c1, t1.c0, t1.c1))))<<(t1.c1))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((((t1.c1)<>(t1.c1)))!=(((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)<>(t1.c1)))<>(((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ (((t1.c0) NOTNULL))));
SELECT ALL * FROM t1 WHERE (((((t1.c1)<>(t1.c1)))!=(((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)<>(t1.c1)))<>(((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ (((t1.c0) NOTNULL))));
SELECT * FROM t1 WHERE (NULLIF(DISTINCT t1.c1, CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END));
SELECT DISTINCT * FROM t1 WHERE (NULLIF(DISTINCT t1.c1, CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)) ORDER BY CASE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))  WHEN '1479627678' THEN CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END ELSE ((t1.c1)LIKE(t1.c1)) END LIMIT 0X0;
SELECT * FROM t1 WHERE (NULLIF(DISTINCT t1.c1, CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END));
SELECT DISTINCT * FROM t1 WHERE (NULLIF(DISTINCT t1.c1, CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)) ORDER BY CASE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))  WHEN '1479627678' THEN CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END ELSE ((t1.c1)LIKE(t1.c1)) END LIMIT 0X0;
SELECT * FROM t1 WHERE ((NOT ((+ (t1.c1))))) ORDER BY (((((((x'6825')AND(x'c6')))AND(t1.c1)), ((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0))))!=((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1)IS(t1.c0))))), ((t1.c1)AND(t1.c0)) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST, (((t1.c1) BETWEEN (968991643) AND (t1.c1)) IN ((+ (t1.c1)), ((t1.c0)AND(0.20298942034891998))));
SELECT DISTINCT * FROM t1 WHERE ((NOT ((+ (t1.c1))))) ORDER BY (((((((x'6825')AND(x'c6')))AND(t1.c1)), ((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0))))!=((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1)IS(t1.c0))))), ((t1.c1)AND(t1.c0)) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST, (((t1.c1) BETWEEN (0X39c1a39b) AND (t1.c1)) IN ((+ (t1.c1)), ((t1.c0)AND(0.20298942034891998)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))) ORDER BY (((((((x'6825')AND(x'c6')))AND(t1.c1)), ((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0))))<>((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1)IS(t1.c0))))), ((t1.c1)AND(t1.c0)) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST, (((t1.c1) BETWEEN (968991643) AND (t1.c1)) IN ((+ (t1.c1)), ((t1.c0)AND(0.20298942034891998))));
SELECT * FROM t1 WHERE ((NOT ((+ (t1.c1))))) ORDER BY (((((((x'6825')AND(x'c6')))AND(t1.c1)), ((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0))))!=((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1)IS(t1.c0))))), ((t1.c1)AND(t1.c0)) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST, (((t1.c1) BETWEEN (968991643) AND (t1.c1)) IN ((+ (t1.c1)), ((t1.c0)AND(0.20298942034891998))));
SELECT DISTINCT * FROM t1 WHERE ((NOT ((+ (t1.c1))))) ORDER BY (((((((x'6825')AND(x'c6')))AND(t1.c1)), ((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0))))!=((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1)IS(t1.c0))))), ((t1.c1)AND(t1.c0)) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST, (((t1.c1) BETWEEN (0X39c1a39b) AND (t1.c1)) IN ((+ (t1.c1)), ((t1.c0)AND(0.20298942034891998)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))) ORDER BY (((((((x'6825')AND(x'c6')))AND(t1.c1)), ((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0))))<>((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1)IS(t1.c0))))), ((t1.c1)AND(t1.c0)) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST, (((t1.c1) BETWEEN (968991643) AND (t1.c1)) IN ((+ (t1.c1)), ((t1.c0)AND(0.20298942034891998))));
SELECT COUNT(*) FROM t1 WHERE (((((CAST(0.1370059203391064 AS NUMERIC))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(((t1.c1) ISNULL))));
SELECT COUNT(*) FROM t1 WHERE (((((((CAST(0.1370059203391064 AS NUMERIC))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(((t1.c1) ISNULL))))AND((t1.c0 IN ((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c1))), CAST(x'' AS INTEGER)))))) ORDER BY (((((((((- (t1.c1)))AND(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR((t1.c0 IN ()))))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)))AND(SQLITE_COMPILEOPTION_USED(t1.c0))) ASC  NULLS FIRST, ((((t1.c0)LIKE(t1.c1)))|((+ (t1.c1)))) ASC  NULLS FIRST, t1.c0  NULLS FIRST, CAST(((((((((((t1.c0)OR(0.7604612413935811)))OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))AND(t1.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((- (x'2f'))) ORDER BY t1.c0  NULLS FIRST, (~ (((t1.c1) BETWEEN (t1.c1) AND (0.24055368796897236)))) DESC;
SELECT COUNT(*) FROM t1 WHERE ((((- (x'2f')))AND(((t1.c1) IS FALSE) COLLATE NOCASE))) ORDER BY t1.c0  NULLS FIRST, (~ (((t1.c1) BETWEEN (t1.c1) AND (0.24055368796897236)))) DESC;
SELECT * FROM t1 WHERE (NULL);
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND((((t1.c0, t1.c1, t1.c1)) NOT BETWEEN (((+ (t1.c1)), (- (t1.c0)), CAST(t1.c1 AS NUMERIC))) AND ((((t1.c1)-(t1.c0)), ((t1.c1) NOTNULL), ((((t1.c0)OR(t1.c0)))OR(t1.c1)))))))) ORDER BY (+ ((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST((NOT (t1.c0)) AS INTEGER)) ORDER BY (+ ((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))));
SELECT * FROM t1 WHERE (NULL);
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND((((t1.c0, t1.c1, t1.c1)) NOT BETWEEN (((+ (t1.c1)), (- (t1.c0)), CAST(t1.c1 AS NUMERIC))) AND ((((t1.c1)-(t1.c0)), ((t1.c1) NOTNULL), ((((t1.c0)OR(t1.c0)))OR(t1.c1)))))))) ORDER BY (+ ((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST((NOT (t1.c0)) AS INTEGER)) ORDER BY (+ ((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))));
SELECT ALL * FROM t1 WHERE ((~ (t1.c0 COLLATE RTRIM))) ORDER BY DATE(0.9755707428557728 COLLATE RTRIM, ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)), t1.c0, NULL) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((~ (t1.c0 COLLATE RTRIM)))AND(CAST(t1.c0 AS NUMERIC) COLLATE RTRIM))) ORDER BY DATE(0.9755707428557728 COLLATE RTRIM, ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)), t1.c0, NULL) ASC  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (((SUBSTR(t1.c0, t1.c1))%((((t1.c1, t1.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c1, t1.c1)) AND ((t1.c1, -432118411, x'1f89', t1.c1, x'1ea222')))))) ORDER BY DATE(0.9755707428557728 COLLATE RTRIM, ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)), t1.c0, NULL) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((~ (t1.c0 COLLATE RTRIM))) ORDER BY DATE(0.9755707428557728 COLLATE RTRIM, ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)), t1.c0, NULL) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((~ (t1.c0 COLLATE RTRIM)))AND(CAST(t1.c0 AS NUMERIC) COLLATE RTRIM))) ORDER BY DATE(0.9755707428557728 COLLATE RTRIM, ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)), t1.c0, NULL) ASC  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (((SUBSTR(t1.c0, t1.c1))%((((t1.c1, t1.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c1, t1.c1)) AND ((t1.c1, -432118411, x'1f89', t1.c1, x'1ea222')))))) ORDER BY DATE(0.9755707428557728 COLLATE RTRIM, ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)), t1.c0, NULL) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (TYPEOF((t1.c1 IN (t1.c1)))) ORDER BY ((((((((t1.c1)OR('-1357763336' COLLATE BINARY)))AND((((t1.c1, t1.c1))>((t1.c0, t1.c0))))))OR(((t1.c0) IS FALSE))))AND(((t1.c0)/(t1.c0)))) DESC, CASE (~ (t1.c0))  WHEN t1.c0 THEN 'mDg\+j Q' WHEN ((((t1.c1)OR(t1.c1)))AND(t1.c1)) THEN ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (TYPEOF((t1.c1 IN (t1.c1)))) ORDER BY CASE ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0))  WHEN ((t1.c0) IS FALSE) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN -1906764496 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END ELSE ((t1.c1)=(t1.c0)) END LIMIT 0X2;
SELECT * FROM t1 WHERE (TYPEOF((t1.c1 IN (t1.c1)))) ORDER BY ((((((((t1.c1)OR('-1357763336' COLLATE BINARY)))AND((((t1.c1, t1.c1))>((t1.c0, t1.c0))))))OR(((t1.c0) IS FALSE))))AND(((t1.c0)/(t1.c0)))) DESC, CASE (~ (t1.c0))  WHEN t1.c0 THEN 'mDg\+j Q' WHEN ((((t1.c1)OR(t1.c1)))AND(t1.c1)) THEN ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (TYPEOF((t1.c1 IN (t1.c1)))) ORDER BY CASE ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0))  WHEN ((t1.c0) IS FALSE) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN -1906764496 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END ELSE ((t1.c1)=(t1.c0)) END LIMIT 0X2;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c1)AND(t1.c1))) NOT NULL)) ORDER BY CAST(((t1.c1)<<(t1.c1)) AS BLOB) ASC  NULLS LAST, ((((t1.c0, t1.c0))>=((t1.c1, t1.c0))) IN ()) ASC  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c1)AND(t1.c1))) NOT NULL)) ORDER BY CASE WHEN (t1.c0 IN (t1.c0)) THEN x'aed1045c' END  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS REAL));
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS REAL))AND(((((((t1.c1)||(t1.c1)))AND(COALESCE(t1.c1, t1.c0, t1.c0))))AND(((t1.c0)|(t1.c1))))))) ORDER BY CAST((((('蚆뭉')AND(t1.c1)))AND(t1.c1)) AS BLOB), (t1.c0 IN (TRIM(t1.c1, t1.c1)))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 AS REAL));
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS REAL))AND(((((((t1.c1)||(t1.c1)))AND(COALESCE(t1.c1, t1.c0, t1.c0))))AND(((t1.c0)|(t1.c1))))))) ORDER BY CAST((((('蚆뭉')AND(t1.c1)))AND(t1.c1)) AS BLOB), (t1.c0 IN (TRIM(t1.c1, t1.c1)))  NULLS LAST;
SELECT * FROM t1 WHERE ((((- (t1.c0)))IS NOT(((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((((- (t1.c0)))IS NOT(((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))))AND(((0.7155684252874485)&(GLOB(t1.c1, t1.c0)))))) ORDER BY (('-738385790')<<(t1.c1))  NULLS FIRST, ((((((t1.c0)AND(1.051196884E9)))OR(t1.c0))) IS TRUE) DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((('853913989') ISNULL)) ORDER BY (('-738385790')<<(t1.c1))  NULLS FIRST, ((((((t1.c0)AND(1.051196884E9)))OR(t1.c0))) IS TRUE) DESC LIMIT 0;
SELECT * FROM t1 WHERE ((((- (t1.c0)))IS NOT(((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((((- (t1.c0)))IS NOT(((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))))AND(((0.7155684252874485)&(GLOB(t1.c1, t1.c0)))))) ORDER BY (('-738385790')<<(t1.c1))  NULLS FIRST, ((((((t1.c0)AND(1.051196884E9)))OR(t1.c0))) IS TRUE) DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((('853913989') ISNULL)) ORDER BY (('-738385790')<<(t1.c1))  NULLS FIRST, ((((((t1.c0)AND(1.051196884E9)))OR(t1.c0))) IS TRUE) DESC LIMIT 0;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)AND(t1.c1))) ISNULL)) ORDER BY ((((((((t1.c1)AND(t1.c0)))AND(x'')))AND(t1.c1))) IS TRUE) DESC, ((json_type(t1.c1))||(((t1.c0)IS NOT(t1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)AND(t1.c1))) ISNULL)) ORDER BY ((((((((t1.c1)AND(t1.c0)))AND(x'')))AND(t1.c1))) IS TRUE) DESC, ((json_type(t1.c1))||(((t1.c0)IS NOT(t1.c0)))) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN 0x3bb4f040 WHEN t1.c0 THEN t1.c0 END) IS FALSE)) ORDER BY ((((((((t1.c1)AND(t1.c0)))AND(x'')))AND(t1.c1))) IS TRUE) DESC, ((json_type(t1.c1))||(((t1.c0)IS NOT(t1.c0))));
SELECT COUNT(*) FROM t1 WHERE (NULLIF(((((((((t1.c0)OR(0.44477901602705483)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)), json_valid('Lstart of month?')));
SELECT ALL COUNT(*) FROM t1 WHERE (((NULLIF(((((((((t1.c0)OR(0.44477901602705483)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)), json_valid('Lstart of month?')))AND((((NULL) NOT BETWEEN (t1.c1) AND (t1.c1)) IN ())))) LIMIT 2;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))))AND(CASE WHEN NULL THEN t1.c0 ELSE t1.c1 END COLLATE BINARY))) ORDER BY ((((t1.c1)+(t1.c0))) NOT BETWEEN ((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c0, t1.c1, t1.c0)))) AND (LIKELIHOOD(t1.c0, t1.c0))), ((((t1.c0) IS TRUE))>(((t1.c1) NOTNULL))) LIMIT 0x2;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) AND ((NOT (t1.c0)))));
SELECT * FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) AND ((NOT (t1.c0)))))AND((((t1.c0) NOTNULL) IN (t1.c1))))) ORDER BY ((((((t1.c1)AND(t1.c1)))AND(t1.c0)))<=((~ (t1.c1))))  NULLS LAST, ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) NOTNULL) ASC  NULLS FIRST LIMIT 2;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) AND ((NOT (t1.c0)))));
SELECT * FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) AND ((NOT (t1.c0)))))AND((((t1.c0) NOTNULL) IN (t1.c1))))) ORDER BY ((((((t1.c1)AND(t1.c1)))AND(t1.c0)))<=((~ (t1.c1))))  NULLS LAST, ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) NOTNULL) ASC  NULLS FIRST LIMIT 2;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CAST(t1.c0 AS INTEGER) COLLATE BINARY);
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((CAST(t1.c0 AS INTEGER) COLLATE BINARY)AND(((((((t1.c0)GLOB(t1.c1)))AND(t1.c1)))AND(t1.c1))))) LIMIT 0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((t1.c1 IN ()) IN ())) ORDER BY ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY DESC  NULLS FIRST, CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN TRIM(t1.c0) WHEN ((NULL)>>(t1.c0)) THEN ((t1.c0) IS TRUE) END DESC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((t1.c1 IN ()) IN ())) ORDER BY (NOT (((('-1376804546', t1.c1, t1.c1))>=((t1.c1, t1.c1, t1.c1))))), ((((t1.c0, t1.c0, t1.c0))>=((t1.c1, t1.c0, t1.c0))) IN ())  NULLS LAST INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((+ (t1.c1))) ORDER BY (NOT (((('-1376804546', t1.c1, t1.c1))>=((t1.c1, t1.c1, t1.c1))))), ((((t1.c0, t1.c0, t1.c0))>=((t1.c1, t1.c0, t1.c0))) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c1 COLLATE BINARY)<(((-1.028690489E9)<(t1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1 COLLATE BINARY)<(((-1.028690489E9)<(t1.c1)))))AND((((NOT (t1.c0))) NOT NULL)))) ORDER BY '1hkǪ
', x'4c1b' INTERSECT SELECT COUNT(*) FROM t1 WHERE ((((((((- (t1.c1)))OR('715179311')))OR(((((t1.c0)OR(t1.c0)))OR(t1.c0)))))OR('aSfl3'))) ORDER BY '1hkǪ
', x'4c1b';
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c0) IS TRUE))) AND ((((t1.c0) NOT NULL)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c1)) NOT BETWEEN ((((t1.c0) IS TRUE))) AND ((((t1.c0) NOT NULL)))))AND(t1.c0))) LIMIT 0x0;
SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))==(CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))==(CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))) INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((+ (t1.c1 COLLATE NOCASE)));
SELECT MIN(t1.c0) FROM t1 WHERE ((((t1.c0)<>(t1.c1)) IN ()));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((t1.c0)>(t1.c1)) IN ())) ORDER BY ((((t1.c0)>(t1.c0)))OR(((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))) DESC  NULLS FIRST, NULL  NULLS FIRST, CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS INTEGER) ASC;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)>(t1.c1)) AS TEXT));
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c0)>(t1.c1)) AS TEXT))AND(((t1.c0)<<(t1.c1)) COLLATE RTRIM))) ORDER BY '-1989622866'  NULLS LAST, LTRIM(CAST(t1.c1 AS NUMERIC)) DESC;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)>(t1.c1)) AS TEXT));
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c0)>(t1.c1)) AS TEXT))AND(((t1.c0)<<(t1.c1)) COLLATE RTRIM))) ORDER BY '-1989622866'  NULLS LAST, LTRIM(CAST(t1.c1 AS NUMERIC)) DESC;
SELECT MAX(t1.c0) FROM t1 WHERE (((t1.c0) NOTNULL));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((t1.c0) NOTNULL))AND(((((NOT (t1.c1)), t1.c1))<((((t1.c1)&(t1.c1)), (- (t1.c0)))))))) ORDER BY '715179311';
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (((t1.c0)||(t1.c1))) AND ((((t1.c1, t1.c1, t1.c0))>=((t1.c1, t1.c1, t1.c0)))))) ORDER BY (LIKELIHOOD(0.48131277866833966, t1.c1) IN ()) ASC  NULLS LAST, ((((t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c0, 0.25180207768610374, x''))) IN (((((t1.c1)AND(t1.c1)))AND(t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (((t1.c0)||(t1.c1))) AND ((((t1.c1, t1.c1, t1.c0))>=((t1.c1, t1.c1, t1.c0)))))) ORDER BY ((((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND((t1.c1 IN (NULL)))))OR('-1863901556')))OR(CASE t1.c0  WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)) ASC LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1) IS FALSE) AS REAL)) ORDER BY ((((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND((t1.c1 IN (NULL)))))OR('-1863901556')))OR(CASE t1.c0  WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)) ASC LIMIT 0x3;
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (((t1.c0)||(t1.c1))) AND ((((t1.c1, t1.c1, t1.c0))>=((t1.c1, t1.c1, t1.c0)))))) ORDER BY (LIKELIHOOD(0.48131277866833966, t1.c1) IN ()) ASC  NULLS LAST, ((((t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c0, 0.25180207768610374, x''))) IN (((((t1.c1)AND(t1.c1)))AND(t1.c1))));
SELECT ALL * FROM t1 WHERE (CASE CAST(t1.c0 AS INTEGER)  WHEN t1.c0 COLLATE NOCASE THEN (~ (t1.c1)) WHEN 0.5884013519575861 THEN ((t1.c0) BETWEEN (915460459) AND (t1.c1)) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((NULL)>=(1.051196884E9)) END) ORDER BY ((t1.c1)||((t1.c0 IN (t1.c1)))) ASC;
SELECT DISTINCT * FROM t1 WHERE (CASE CAST(t1.c0 AS INTEGER)  WHEN t1.c0 COLLATE NOCASE THEN (~ (t1.c1)) WHEN 0.5884013519575861 THEN ((t1.c0) BETWEEN (915460459) AND (t1.c1)) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((NULL)=(1.051196884E9)) END) ORDER BY (- (((((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0))))  NULLS FIRST, ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)||(t1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE CAST(t1.c0 AS INTEGER)  WHEN t1.c0 COLLATE NOCASE THEN (~ (t1.c1)) WHEN 0.5884013519575861 THEN ((t1.c0) BETWEEN (915460459) AND (t1.c1)) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((NULL)>=(1.051196884E9)) END) ORDER BY ((t1.c1)||((t1.c0 IN (t1.c1)))) ASC;
SELECT DISTINCT * FROM t1 WHERE (CASE CAST(t1.c0 AS INTEGER)  WHEN t1.c0 COLLATE NOCASE THEN (~ (t1.c1)) WHEN 0.5884013519575861 THEN ((t1.c0) BETWEEN (915460459) AND (t1.c1)) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((NULL)=(1.051196884E9)) END) ORDER BY (- (((((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0))))  NULLS FIRST, ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)||(t1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((NULL) ISNULL)) ORDER BY TIME((t1.c1 IN (t1.c1)), (~ (NULL)), t1.c0 COLLATE RTRIM, x'536141330329' COLLATE RTRIM) DESC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((NULL) ISNULL)) ORDER BY (~ (CAST(t1.c0 AS NUMERIC))) ASC  NULLS LAST, ((((t1.c1) IS TRUE)) IS FALSE), CAST((NOT (t1.c1)) AS BLOB) LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(ABS(t1.c1) AS TEXT)) ORDER BY ((t1.c0 IN ()) IN (((t1.c0) ISNULL), (+ (t1.c1)))) DESC  NULLS LAST, (((t1.c0 IN ()))IS NOT(((t1.c0) IS TRUE))) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CAST(ABS(t1.c1) AS TEXT))AND((+ (CASE t1.c1  WHEN t1.c1 THEN t1.c0 END))))) ORDER BY ((t1.c0 IN ()) IN (((t1.c0) ISNULL), (+ (t1.c1)))) DESC  NULLS LAST, (((t1.c0 IN ()))IS NOT(((t1.c0) IS TRUE))) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((t1.c1)AND('*_]/q')))OR(t1.c1))) BETWEEN ((- (t1.c0))) AND (((t1.c0) IS FALSE)))) ORDER BY ((t1.c0 IN ()) IN (((t1.c0) ISNULL), (+ (t1.c1)))) DESC  NULLS LAST, (((t1.c0 IN ()))IS NOT(((t1.c0) IS TRUE))) ASC  NULLS LAST LIMIT 0x0;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)&(t1.c1)) IN ())) ORDER BY CASE WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (t1.c1 IN (t1.c0, t1.c1)) WHEN (- (x'65')) THEN ((0.20025627345273822) NOT NULL) WHEN ((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))OR(0.7175063736419373)) THEN '-924211389' END, LIKE(x'7bfb', CAST(t1.c1 AS NUMERIC), 'o') DESC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((t1.c1)&(t1.c1)) IN ())) ORDER BY CASE WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (t1.c1 IN (t1.c0, t1.c1)) WHEN (- (x'65')) THEN ((0.20025627345273822) NOT NULL) WHEN ((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))OR(0.7175063736419373)) THEN '-924211389' END, LIKE(x'7bfb', CAST(t1.c1 AS NUMERIC), 'o') DESC INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((t1.c1 IN ())) IS FALSE)) ORDER BY CASE WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (t1.c1 IN (t1.c0, t1.c1)) WHEN (- (x'65')) THEN ((0.20025627345273822) NOT NULL) WHEN ((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))OR(0.7175063736419373)) THEN '-924211389' END, LIKE(x'7bfb', CAST(t1.c1 AS NUMERIC), 'o') DESC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((t1.c0) NOT NULL)) NOTNULL)) ORDER BY (((t1.c1, t1.c1)) BETWEEN ((CAST(t1.c0 AS INTEGER), ((t1.c0) NOTNULL))) AND ((t1.c0, x'dc3e'))) DESC  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((t1.c0) NOT NULL)) NOTNULL))AND(UPPER((((t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))))) ORDER BY (((t1.c1, t1.c1)) BETWEEN ((CAST(t1.c0 AS INTEGER), ((t1.c0) NOTNULL))) AND ((t1.c0, x'dc3e'))) DESC  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE (t1.c1);
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (t1.c1) LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (t1.c0 COLLATE NOCASE) AND (CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))) LIMIT 0;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1, t1.c0))>=((t1.c0, t1.c1))) IN (CASE WHEN x'71' THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))) ORDER BY ((((((((((CAST(t1.c0 AS REAL))AND((('1727310088')&(t1.c1)))))AND(ABS(t1.c0))))OR(CASE WHEN t1.c0 THEN x'c5b6' WHEN t1.c1 THEN '݃l' ELSE t1.c1 END)))AND((~ (t1.c0)))))AND(((NULL) IS FALSE))) DESC  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c1, t1.c0))>=((t1.c0, t1.c1))) IN (CASE WHEN x'71' THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))) ORDER BY ((((t1.c0) NOT NULL)) ISNULL)  NULLS FIRST, (+ ((t1.c0 IN (t1.c1, t1.c0)))) ASC  NULLS LAST INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((x'18')%(x'40')) IN (((((((t1.c1)OR(0.7165115937750616)))OR(t1.c0)))AND(t1.c1))))) ORDER BY ((((t1.c0) NOT NULL)) ISNULL)  NULLS FIRST, (+ ((t1.c0 IN (t1.c1, t1.c0)))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c1)<(t1.c1))) NOT BETWEEN ('fnP|+Hpp廎') AND (x'10e1cc'))) ORDER BY (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) IN (((t1.c1) NOTNULL), t1.c1, (x'e2' IN ()))) ASC;
SELECT * FROM t1 WHERE (((((((t1.c1)<(t1.c1))) NOT BETWEEN ('fnP|+Hpp廎') AND (x'10e1cc')))AND(t1.c0))) ORDER BY (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) IN (((t1.c1) NOTNULL), t1.c1, (x'e2' IN ()))) ASC;
SELECT * FROM t1 WHERE (((((t1.c1)<(t1.c1))) NOT BETWEEN ('fnP|+Hpp廎') AND (x'10e1cc'))) ORDER BY (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) IN (((t1.c1) NOTNULL), t1.c1, (x'e2' IN ()))) ASC;
SELECT * FROM t1 WHERE (((((((t1.c1)<(t1.c1))) NOT BETWEEN ('fnP|+Hpp廎') AND (x'10e1cc')))AND(t1.c0))) ORDER BY (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) IN (((t1.c1) NOTNULL), t1.c1, (x'e2' IN ()))) ASC;
SELECT * FROM t1 WHERE (t1.c0);
SELECT * FROM t1 WHERE (((t1.c0)AND(CAST('z1' AS TEXT))));
SELECT * FROM t1 WHERE (t1.c0);
SELECT * FROM t1 WHERE (((t1.c0)AND(CAST('z1' AS TEXT))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CAST(NULL AS INTEGER));
SELECT MAX(t1.c1) FROM t1 WHERE (CAST(NULL AS INTEGER)) LIMIT 2;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1)<=(t1.c1))) IS TRUE)) ORDER BY ((((((t1.c1)OR(((t1.c0)LIKE(t1.c0)))))OR(((t1.c0) NOT NULL))))AND(((t1.c0) ISNULL)))  NULLS FIRST, (t1.c0 COLLATE RTRIM IN ()) ASC;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((t1.c1)<=(t1.c1))) IS TRUE))AND(((t1.c0)&(t1.c1)) COLLATE RTRIM))) ORDER BY ((((((t1.c1)OR(((t1.c0)LIKE(t1.c0)))))OR(((t1.c0) NOT NULL))))AND(((t1.c0) ISNULL)))  NULLS FIRST, (t1.c0 COLLATE RTRIM IN ()) ASC LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))&((t1.c0 IN (t1.c1))))) ORDER BY ((((((t1.c1)OR(((t1.c0)LIKE(t1.c0)))))OR(((t1.c0) NOT NULL))))AND(((t1.c0) ISNULL)))  NULLS FIRST, (t1.c0 COLLATE RTRIM IN ()) ASC LIMIT 1;
SELECT MAX(t1.c1) FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE NOCASE) ORDER BY load_extension(CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1))) ASC, json_quote((((t1.c0, t1.c0))<((t1.c0, t1.c0))))  NULLS LAST, ((t1.c0 IN ()) IN ()) DESC  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE NOCASE) ORDER BY (~ (t1.c1)) ASC LIMIT 2 INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (CAST(CAST(t1.c0 AS NUMERIC) AS BLOB)) ORDER BY (~ (t1.c1)) ASC LIMIT 2;
SELECT ALL * FROM t1 WHERE (CAST(CAST(t1.c0 AS NUMERIC) AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (CAST(CAST(t1.c0 AS NUMERIC) AS BLOB)) ORDER BY ((((t1.c1)&(0.02193102944904879)))>(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)), (+ (((t1.c1) IS FALSE)))  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (CAST(CAST(t1.c0 AS NUMERIC) AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (CAST(CAST(t1.c0 AS NUMERIC) AS BLOB)) ORDER BY ((((t1.c1)&(0.02193102944904879)))>(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)), (+ (((t1.c1) IS FALSE)))  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((((((t1.c1, t1.c0, '-1452555701')) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c1))))>(NULL))) ORDER BY (- (((0X2e096e76)<=(t1.c1)))) ASC  NULLS LAST, ((((t1.c0)<=(t1.c0)))>=(rtreenode(t1.c1, t1.c0))) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1, t1.c0, '-1452555701')) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c1))))>(NULL)))AND(((CASE WHEN '^}d9' THEN t1.c1 WHEN t1.c0 THEN t1.c0 END) NOT BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (((t1.c1)OR(t1.c1))))))) ORDER BY (- (((0X2e096e76)<=(t1.c1)))) ASC  NULLS LAST, ((((t1.c0)<=(t1.c0)))>=(rtreenode(t1.c1, t1.c0))) ASC LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((((((t1.c1, t1.c0, '-1452555701')) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c1))))>(NULL))) ORDER BY (- (((0X2e096e76)<=(t1.c1)))) ASC  NULLS LAST, ((((t1.c0)<=(t1.c0)))>=(rtreenode(t1.c1, t1.c0))) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1, t1.c0, '-1452555701')) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c1))))>(NULL)))AND(((CASE WHEN '^}d9' THEN t1.c1 WHEN t1.c0 THEN t1.c0 END) NOT BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (((t1.c1)OR(t1.c1))))))) ORDER BY (- (((0X2e096e76)<=(t1.c1)))) ASC  NULLS LAST, ((((t1.c0)<=(t1.c0)))>=(rtreenode(t1.c1, t1.c0))) ASC LIMIT 0X0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (-1929752836) ORDER BY CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) AS TEXT)  NULLS LAST, (((t1.c1 IN (0.23859429199892213)))<<(ABS(DISTINCT t1.c1))) ASC  NULLS FIRST, t1.c0 DESC;
SELECT MAX(t1.c1) FROM t1 WHERE (((-1929752836)AND(NULL))) ORDER BY CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) AS TEXT)  NULLS LAST, (((t1.c1 IN (0.23859429199892213)))<<(ABS(DISTINCT t1.c1))) ASC  NULLS FIRST, t1.c0 DESC LIMIT 0;
SELECT ALL * FROM t1 WHERE (NULL);
SELECT * FROM t1 WHERE (NULL) INTERSECT SELECT * FROM t1 WHERE (CASE (t1.c0 IN ())  WHEN ((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)) THEN ((t1.c0)>=(t1.c1)) WHEN CAST(t1.c0 AS TEXT) THEN ((t1.c0)!=(t1.c0)) WHEN CHAR(t1.c0, t1.c0) THEN CAST(t1.c1 AS REAL) ELSE ((t1.c1) NOT NULL) END);
SELECT ALL * FROM t1 WHERE (NULL);
SELECT * FROM t1 WHERE (NULL) INTERSECT SELECT * FROM t1 WHERE (CASE (t1.c0 IN ())  WHEN ((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)) THEN ((t1.c0)>=(t1.c1)) WHEN CAST(t1.c0 AS TEXT) THEN ((t1.c0)!=(t1.c0)) WHEN CHAR(t1.c0, t1.c0) THEN CAST(t1.c1 AS REAL) ELSE ((t1.c1) NOT NULL) END);
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))LIKE(UNLIKELY(t1.c0)))) ORDER BY t1.c1 ASC  NULLS LAST, ((CAST(t1.c1 AS BLOB)) NOT BETWEEN (((t1.c0)>('-1967749805'))) AND (((0.38725217250516186)|(t1.c0)))) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1 IN ()))LIKE(UNLIKELY(t1.c0)))) ORDER BY (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))|(((t1.c0)<>(t1.c0)))) ASC, CAST((((-1751615192, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, '1648825744'))) AS TEXT) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ ((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c0)))))) ORDER BY (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))|(((t1.c0)!=(t1.c0)))) ASC, CAST((((-1751615192, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, '1648825744'))) AS TEXT);
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))LIKE(UNLIKELY(t1.c0)))) ORDER BY t1.c1 ASC  NULLS LAST, ((CAST(t1.c1 AS BLOB)) NOT BETWEEN (((t1.c0)>('-1967749805'))) AND (((0.38725217250516186)|(t1.c0)))) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1 IN ()))LIKE(UNLIKELY(t1.c0)))) ORDER BY (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))|(((t1.c0)<>(t1.c0)))) ASC, CAST((((-1751615192, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, '1648825744'))) AS TEXT) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ ((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c0)))))) ORDER BY (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))|(((t1.c0)!=(t1.c0)))) ASC, CAST((((-1751615192, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, '1648825744'))) AS TEXT);
SELECT * FROM t1 WHERE ('-990637967');
SELECT DISTINCT * FROM t1 WHERE ((('-990637967')AND(((UNLIKELY(t1.c0)) NOT BETWEEN (((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))AND('2054253131')))AND(t1.c0)))OR(t1.c0)))OR(t1.c0))) AND ((NOT (t1.c0))))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (LOWER(DISTINCT (('5QS^ꤧdSbx') IS FALSE)));
SELECT * FROM t1 WHERE ('-990637967');
SELECT DISTINCT * FROM t1 WHERE ((('-990637967')AND(((UNLIKELY(t1.c0)) NOT BETWEEN (((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))AND('2054253131')))AND(t1.c0)))OR(t1.c0)))OR(t1.c0))) AND ((NOT (t1.c0))))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (LOWER(DISTINCT (('5QS^ꤧdSbx') IS FALSE)));
SELECT ALL COUNT(*) FROM t1 WHERE (x'b4');
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((x'b4')AND((((0.8846673329237713 IN (t1.c0)))%((('-1357763336') NOT BETWEEN (t1.c1) AND (t1.c1))))))) ORDER BY CAST((t1.c1 IN ()) AS BLOB)  NULLS FIRST, t1.c0 ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c0)GLOB(t1.c1)) IN ()));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)GLOB(t1.c1)) IN ()))AND((((+ (t1.c1)))<>(CASE t1.c1  WHEN t1.c1 THEN x'10c1a7' WHEN t1.c0 THEN t1.c1 END))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) LIMIT 0X1;
SELECT * FROM t1 WHERE ((((t1.c0)GLOB(t1.c1)) IN ()));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)GLOB(t1.c1)) IN ()))AND((((+ (t1.c1)))<>(CASE t1.c1  WHEN t1.c1 THEN x'10c1a7' WHEN t1.c0 THEN t1.c1 END))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) LIMIT 0X1;
SELECT MIN(t1.c1) FROM t1 WHERE (((LIKELIHOOD(t1.c0, t1.c1)) IS FALSE));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((LIKELIHOOD(t1.c0, t1.c1)) IS FALSE))AND(CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1))  WHEN t1.c0 COLLATE BINARY THEN (t1.c0 IN ()) WHEN 0.09618319594565305 COLLATE RTRIM THEN CASE '1778662627'  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END ELSE ((t1.c1)*(t1.c1)) END))) ORDER BY ((((NULL)OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))))AND(json_type(t1.c0))) DESC  NULLS LAST LIMIT 4 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((x'09e5cb')IS NOT((((t1.c1, t1.c1, 0.44852936441486024))>((t1.c1, t1.c1, t1.c0)))))) ORDER BY ((((NULL)OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))))AND(json_type(t1.c0))) DESC  NULLS LAST LIMIT 0x4;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (QUOTE(t1.c0 COLLATE RTRIM)) ORDER BY (NOT (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c0 ELSE 'n>l⋟靾>M6' END)) DESC, '-856524463' ASC;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (QUOTE(t1.c0 COLLATE RTRIM)) ORDER BY (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, 0.29915256865281004, t1.c1)) AND ((0X221066df, t1.c1, t1.c0))))>>(((((t1.c1)AND(t1.c1)))OR(t1.c0)))) LIMIT 3;
SELECT ALL * FROM t1 WHERE ((((((t1.c1, t1.c1))>((t1.c1, t1.c0))))>=(((t1.c0)<(t1.c1))))) ORDER BY ((((t1.c0)<=(t1.c1))) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((((t1.c1, t1.c1))>((t1.c1, t1.c0))))>(((t1.c0)<(t1.c1)))))AND((- (((t1.c1) IS FALSE)))))) ORDER BY ((((t1.c0)<=(t1.c1))) IS FALSE)  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((((((t1.c1, t1.c1))>((t1.c1, t1.c0))))>=(((t1.c0)<(t1.c1))))) ORDER BY ((((t1.c0)<=(t1.c1))) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((((t1.c1, t1.c1))>((t1.c1, t1.c0))))>(((t1.c0)<(t1.c1)))))AND((- (((t1.c1) IS FALSE)))))) ORDER BY ((((t1.c0)<=(t1.c1))) IS FALSE)  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 WHERE ((((((t1.c1)>>(t1.c0))))<((LOWER(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1)>>(t1.c0))))<((LOWER(t1.c1)))))AND(((CAST(t1.c0 AS BLOB)) BETWEEN (((t1.c1) NOTNULL)) AND (((0.7114091367934577) ISNULL))))));
SELECT * FROM t1 WHERE ((((((t1.c1)>>(t1.c0))))<((LOWER(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1)>>(t1.c0))))<((LOWER(t1.c1)))))AND(((CAST(t1.c0 AS BLOB)) BETWEEN (((t1.c1) NOTNULL)) AND (((0.7114091367934577) ISNULL))))));
SELECT * FROM t1 WHERE (CASE ((t1.c0)|(t1.c0))  WHEN (((t1.c0, t1.c1))!=((t1.c0, 0.4123373477605359))) THEN 0.19283688532435395 COLLATE BINARY WHEN x'' THEN LIKE(t1.c0, t1.c0) WHEN NULL THEN ((t1.c1)GLOB(t1.c0)) WHEN t1.c1 THEN ((t1.c1) NOTNULL) ELSE (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))) END);
SELECT ALL * FROM t1 WHERE (((CASE ((t1.c0)|(t1.c0))  WHEN (((t1.c0, t1.c1))<((t1.c0, 0.4123373477605359))) THEN 0.19283688532435395 COLLATE BINARY WHEN x'' THEN LIKE(t1.c0, t1.c0) WHEN NULL THEN ((t1.c1)GLOB(t1.c0)) WHEN t1.c1 THEN ((t1.c1) NOTNULL) ELSE (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))) END)AND(CASE CAST(t1.c1 AS REAL)  WHEN t1.c0 COLLATE NOCASE THEN (NOT (t1.c1)) WHEN ((t1.c1)*(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN 0.9344575421042677 THEN t1.c1 ELSE t1.c0 END WHEN ((t1.c0)<(t1.c1)) THEN (~ (t1.c1)) WHEN NULL THEN (t1.c1 IN (x'02db', t1.c1)) END))) ORDER BY CAST(((t1.c0) IS TRUE) AS NUMERIC), ((((t1.c1) IS TRUE)) BETWEEN (((t1.c1)=(t1.c0))) AND (t1.c0 COLLATE RTRIM)) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ((((x'c9', t1.c0, t1.c1)) BETWEEN ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN 0.7453588705786611 END, (((t1.c0, t1.c1))>=((t1.c1, t1.c1))), CASE t1.c0  WHEN t1.c0 THEN t1.c1 END)) AND (((t1.c1 IN (t1.c1)), (t1.c0 IN ()), t1.c1 COLLATE BINARY)))) ORDER BY CAST(((t1.c0) IS TRUE) AS NUMERIC), ((((t1.c1) IS TRUE)) BETWEEN (((t1.c1)==(t1.c0))) AND (t1.c0 COLLATE RTRIM)) DESC  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (CASE ((t1.c0)|(t1.c0))  WHEN (((t1.c0, t1.c1))!=((t1.c0, 0.4123373477605359))) THEN 0.19283688532435395 COLLATE BINARY WHEN x'' THEN LIKE(t1.c0, t1.c0) WHEN NULL THEN ((t1.c1)GLOB(t1.c0)) WHEN t1.c1 THEN ((t1.c1) NOTNULL) ELSE (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))) END);
SELECT ALL * FROM t1 WHERE (((CASE ((t1.c0)|(t1.c0))  WHEN (((t1.c0, t1.c1))<((t1.c0, 0.4123373477605359))) THEN 0.19283688532435395 COLLATE BINARY WHEN x'' THEN LIKE(t1.c0, t1.c0) WHEN NULL THEN ((t1.c1)GLOB(t1.c0)) WHEN t1.c1 THEN ((t1.c1) NOTNULL) ELSE (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))) END)AND(CASE CAST(t1.c1 AS REAL)  WHEN t1.c0 COLLATE NOCASE THEN (NOT (t1.c1)) WHEN ((t1.c1)*(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN 0.9344575421042677 THEN t1.c1 ELSE t1.c0 END WHEN ((t1.c0)<(t1.c1)) THEN (~ (t1.c1)) WHEN NULL THEN (t1.c1 IN (x'02db', t1.c1)) END))) ORDER BY CAST(((t1.c0) IS TRUE) AS NUMERIC), ((((t1.c1) IS TRUE)) BETWEEN (((t1.c1)=(t1.c0))) AND (t1.c0 COLLATE RTRIM)) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ((((x'c9', t1.c0, t1.c1)) BETWEEN ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN 0.7453588705786611 END, (((t1.c0, t1.c1))>=((t1.c1, t1.c1))), CASE t1.c0  WHEN t1.c0 THEN t1.c1 END)) AND (((t1.c1 IN (t1.c1)), (t1.c0 IN ()), t1.c1 COLLATE BINARY)))) ORDER BY CAST(((t1.c0) IS TRUE) AS NUMERIC), ((((t1.c1) IS TRUE)) BETWEEN (((t1.c1)==(t1.c0))) AND (t1.c0 COLLATE RTRIM)) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY t1.c0 ASC;
SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY CASE x''  WHEN t1.c1 THEN ((x'9a')<(t1.c1)) WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) THEN t1.c1 COLLATE NOCASE END ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(-1997783105)))AND(t1.c1)))OR(t1.c1))))) ORDER BY CASE x''  WHEN t1.c1 THEN ((x'9a')<(t1.c1)) WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) THEN t1.c1 COLLATE NOCASE END ASC LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY t1.c0 ASC;
SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY CASE x''  WHEN t1.c1 THEN ((x'9a')<(t1.c1)) WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) THEN t1.c1 COLLATE NOCASE END ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(-1997783105)))AND(t1.c1)))OR(t1.c1))))) ORDER BY CASE x''  WHEN t1.c1 THEN ((x'9a')<(t1.c1)) WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) THEN t1.c1 COLLATE NOCASE END ASC LIMIT 0x0;
SELECT MIN(t1.c1) FROM t1 WHERE (TYPEOF(x'32d4')) ORDER BY ((((((NULL)OR(CAST(t1.c0 AS BLOB))))AND((((t1.c0, t1.c1)) BETWEEN ((t1.c1, '1587323594')) AND ((t1.c0, 'i'))))))OR(((t1.c1) IS FALSE))) DESC  NULLS FIRST, (((NOT (x'a3'))) NOTNULL);
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((TYPEOF(x'32d4'))AND(CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) AS TEXT)))) ORDER BY ((((((NULL)OR(CAST(t1.c0 AS BLOB))))AND((((t1.c0, t1.c1)) BETWEEN ((t1.c1, '1587323594')) AND ((t1.c0, 'i'))))))OR(((t1.c1) IS FALSE))) DESC  NULLS FIRST, (((NOT (x'a3'))) NOTNULL);
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))) IS FALSE));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))) IS FALSE))AND((+ (((t1.c1)>=(t1.c0)))))));
SELECT * FROM t1 WHERE ((~ ('-83606605')));
SELECT * FROM t1 WHERE ((~ ('-83606605'))) ORDER BY ((((((0.8388938146580632)AND(t1.c0)))OR(t1.c0))) IS FALSE) ASC  NULLS LAST, (NULL IN (((t1.c1) IS TRUE))) ASC  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (CASE 0.6989027541550266  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN t1.c1 END) ORDER BY ((((((0.8388938146580632)AND(t1.c0)))OR(t1.c0))) IS FALSE) ASC  NULLS LAST, (NULL IN (((t1.c1) IS TRUE))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE ((~ ('-83606605')));
SELECT * FROM t1 WHERE ((~ ('-83606605'))) ORDER BY ((((((0.8388938146580632)AND(t1.c0)))OR(t1.c0))) IS FALSE) ASC  NULLS LAST, (NULL IN (((t1.c1) IS TRUE))) ASC  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (CASE 0.6989027541550266  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN t1.c1 END) ORDER BY ((((((0.8388938146580632)AND(t1.c0)))OR(t1.c0))) IS FALSE) ASC  NULLS LAST, (NULL IN (((t1.c1) IS TRUE))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE ('S');
SELECT * FROM t1 WHERE ((('S')AND(NULL COLLATE RTRIM))) LIMIT 0x1;
SELECT * FROM t1 WHERE ('S');
SELECT * FROM t1 WHERE ((('S')AND(NULL COLLATE RTRIM))) LIMIT 0x1;
SELECT * FROM t1 WHERE (CAST(t1.c1 AS REAL) COLLATE NOCASE) ORDER BY t1.c1 ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS REAL) COLLATE NOCASE)AND(1151656749))) ORDER BY IFNULL(((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c1)), CAST(t1.c1 AS NUMERIC)), ((((t1.c0)&(t1.c1)))IS NOT(CASE t1.c1  WHEN '1' THEN t1.c1 WHEN t1.c1 THEN t1.c0 END))  NULLS LAST, (((t1.c1, t1.c1, t1.c0, t1.c1, t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c1)+(t1.c1)), t1.c0 COLLATE NOCASE, CAST(t1.c0 AS TEXT), ((((t1.c1)OR(t1.c1)))OR(t1.c0)), ((t1.c1)%(t1.c0)), (~ (t1.c0)), CASE WHEN t1.c0 THEN t1.c0 WHEN x'' THEN 0Xffffffff957226ae ELSE t1.c0 END)) AND ((TYPEOF(t1.c0), t1.c0 COLLATE RTRIM, ((t1.c1) ISNULL), ((((t1.c0)AND(t1.c1)))OR('1477179842')), (NOT (t1.c0)), TRIM(DISTINCT t1.c0), ((-431600355) NOTNULL))));
SELECT * FROM t1 WHERE (CAST(t1.c1 AS REAL) COLLATE NOCASE) ORDER BY t1.c1 ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS REAL) COLLATE NOCASE)AND(1151656749))) ORDER BY IFNULL(((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c1)), CAST(t1.c1 AS NUMERIC)), ((((t1.c0)&(t1.c1)))IS NOT(CASE t1.c1  WHEN '1' THEN t1.c1 WHEN t1.c1 THEN t1.c0 END))  NULLS LAST, (((t1.c1, t1.c1, t1.c0, t1.c1, t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c1)+(t1.c1)), t1.c0 COLLATE NOCASE, CAST(t1.c0 AS TEXT), ((((t1.c1)OR(t1.c1)))OR(t1.c0)), ((t1.c1)%(t1.c0)), (~ (t1.c0)), CASE WHEN t1.c0 THEN t1.c0 WHEN x'' THEN 0Xffffffff957226ae ELSE t1.c0 END)) AND ((TYPEOF(t1.c0), t1.c0 COLLATE RTRIM, ((t1.c1) ISNULL), ((((t1.c0)AND(t1.c1)))OR('1477179842')), (NOT (t1.c0)), TRIM(DISTINCT t1.c0), ((-431600355) NOTNULL))));
SELECT MAX(t1.c0) FROM t1 WHERE (((((((HEX(0.9409266927850076))AND(CAST(NULL AS TEXT))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c0)!=(t1.c0)))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((((HEX(0.9409266927850076))AND(CAST(NULL AS TEXT))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c0)!=(t1.c0)))))AND((- (((((t1.c0)AND(t1.c0)))OR(t1.c0))))))) INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))OR(t1.c1)))OR(((t1.c1) NOT NULL))))AND(t1.c0)))OR(t1.c0)))OR(CAST(t1.c1 AS REAL))));
SELECT MIN(t1.c0) FROM t1 WHERE (t1.c1) ORDER BY ((((((t1.c1)LIKE(t1.c0)))AND((((t1.c0, '980928845', t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, t1.c1, t1.c0))))))OR(CASE x'05'  WHEN t1.c1 THEN t1.c0 END)) ASC, CASE CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN x'ab' THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END  WHEN t1.c0 THEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) WHEN t1.c1 COLLATE RTRIM THEN (((t1.c1, t1.c1, t1.c0))!=((t1.c0, 0.7676575544389859, t1.c0))) ELSE CAST(t1.c0 AS BLOB) END, t1.c1 ASC;
SELECT MIN(t1.c0) FROM t1 WHERE (((t1.c1)AND((((((t1.c1, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c0)) AND ((t1.c0, '-1375158357', NULL, t1.c1)))) NOT NULL)))) ORDER BY ((((t1.c1)GLOB(t1.c0))) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) AND (CAST(t1.c0 AS NUMERIC)))  NULLS LAST LIMIT 0X2 INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (((((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))AND((((t1.c1, t1.c1, t1.c1, t1.c0))<((t1.c0, t1.c1, t1.c0, t1.c1))))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR((t1.c1 IN ()))))AND(((((((t1.c0)OR(t1.c1)))AND(t1.c1)))OR(t1.c1))))) ORDER BY ((((t1.c1)GLOB(t1.c0))) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) AND (CAST(t1.c0 AS NUMERIC)))  NULLS LAST LIMIT 0X2;
SELECT MAX(t1.c1) FROM t1 WHERE (CAST(t1.c0 AS NUMERIC) COLLATE BINARY);
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CAST(t1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY ((TRIM(DISTINCT t1.c0))==('.')) ASC  NULLS LAST LIMIT 0X0;
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))=(((t1.c1)-(t1.c0)))));
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))==(((t1.c1)-(t1.c0))))) LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE ((((t1.c0) ISNULL) IN ())) LIMIT 0;
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))=(((t1.c1)-(t1.c0)))));
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))==(((t1.c1)-(t1.c0))))) LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE ((((t1.c0) ISNULL) IN ())) LIMIT 0;
SELECT MAX(t1.c1) FROM t1 NOT INDEXED WHERE (NULL) ORDER BY ((t1.c1) NOTNULL) COLLATE NOCASE, (- (t1.c1)) COLLATE BINARY ASC;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((NULL)AND((((t1.c1, t1.c0, t1.c0, x'a43e')) NOT BETWEEN (('-1863901556', ((t1.c0) ISNULL), ((t1.c1) NOT NULL), t1.c0 COLLATE BINARY)) AND ((CAST(t1.c0 AS BLOB), SUBSTR(t1.c1, t1.c1), (+ (t1.c1)), (((-8.09746133E8, '-944334593', t1.c1, t1.c1, t1.c1, '<lf_(/Ri', t1.c1))>=((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0, t1.c0, t1.c1))))))))) ORDER BY ((t1.c1) NOTNULL) COLLATE NOCASE, (- (t1.c1)) COLLATE BINARY ASC INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((~ (t1.c0)))LIKE((t1.c0 IN (t1.c0, t1.c1))))) ORDER BY ((t1.c1) NOTNULL) COLLATE NOCASE, (- (t1.c1)) COLLATE BINARY ASC;
SELECT * FROM t1 WHERE (((((t1.c0)+(t1.c1))) NOT BETWEEN (TOTAL_CHANGES()) AND ((((t1.c0))!=((t1.c1)))))) ORDER BY NULL;
SELECT * FROM t1 WHERE (((((((t1.c0)+(t1.c1))) NOT BETWEEN (TOTAL_CHANGES()) AND ((((t1.c0))<>((t1.c1))))))AND(t1.c1))) ORDER BY NULL LIMIT 3 INTERSECT SELECT * FROM t1 WHERE (((t1.c0)>>(((t1.c1) ISNULL)))) ORDER BY NULL LIMIT 3;
SELECT * FROM t1 WHERE (((((t1.c0)+(t1.c1))) NOT BETWEEN (TOTAL_CHANGES()) AND ((((t1.c0))!=((t1.c1)))))) ORDER BY NULL;
SELECT * FROM t1 WHERE (((((((t1.c0)+(t1.c1))) NOT BETWEEN (TOTAL_CHANGES()) AND ((((t1.c0))<>((t1.c1))))))AND(t1.c1))) ORDER BY NULL LIMIT 3 INTERSECT SELECT * FROM t1 WHERE (((t1.c0)>>(((t1.c1) ISNULL)))) ORDER BY NULL LIMIT 3;
SELECT MIN(t1.c0) FROM t1 WHERE ((((t1.c1))==(('1486003871'))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((t1.c1))==(('1486003871')))) ORDER BY x'' LIMIT 4 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CASE WHEN 0.9139786975479567 THEN t1.c0 ELSE t1.c1 END COLLATE RTRIM) ORDER BY x'' LIMIT 0X4;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 COLLATE RTRIM THEN ((t1.c1)OR(t1.c0)) WHEN ((t1.c0) NOT NULL) THEN NULL WHEN CAST(t1.c0 AS TEXT) THEN t1.c0 COLLATE BINARY END) ORDER BY ((((t1.c1) ISNULL))||((((t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c1))))) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c0 COLLATE RTRIM THEN ((t1.c1)OR(t1.c0)) WHEN ((t1.c0) NOT NULL) THEN NULL WHEN CAST(t1.c0 AS TEXT) THEN t1.c0 COLLATE BINARY END)AND(((t1.c0)+(NULL)) COLLATE NOCASE))) ORDER BY ((((t1.c1) ISNULL))||((((t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c1))))) ASC;
SELECT ALL * FROM t1 WHERE ((((((((((((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))))AND(t1.c0)))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(1830856915)))OR(CAST(t1.c0 AS INTEGER)))) ORDER BY ((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR('0.08497491582000827')))<(0.5516352339091076)) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((((((((((((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))))AND(t1.c0)))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(0x6d20a8d3)))OR(CAST(t1.c0 AS INTEGER))))AND(CASE WHEN ((t1.c0)IS NOT(t1.c1)) THEN (t1.c0 IN ()) ELSE ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)) END))) ORDER BY ((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR('0.08497491582000827')))<(0.5516352339091076)) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS REAL)) NOT BETWEEN ((((t1.c0, t1.c0, t1.c1, t1.c1, '-1914370918')) BETWEEN ((t1.c1, t1.c0, t1.c0, t1.c1, t1.c1)) AND ((t1.c1, x'78', t1.c1, -1844273416, t1.c0)))) AND (x'cf'))) ORDER BY ((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR('0.08497491582000827')))<(0.5516352339091076)) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((((((((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))))AND(t1.c0)))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(1830856915)))OR(CAST(t1.c0 AS INTEGER)))) ORDER BY ((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR('0.08497491582000827')))<(0.5516352339091076)) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((((((((((((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))))AND(t1.c0)))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(0x6d20a8d3)))OR(CAST(t1.c0 AS INTEGER))))AND(CASE WHEN ((t1.c0)IS NOT(t1.c1)) THEN (t1.c0 IN ()) ELSE ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)) END))) ORDER BY ((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR('0.08497491582000827')))<(0.5516352339091076)) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS REAL)) NOT BETWEEN ((((t1.c0, t1.c0, t1.c1, t1.c1, '-1914370918')) BETWEEN ((t1.c1, t1.c0, t1.c0, t1.c1, t1.c1)) AND ((t1.c1, x'78', t1.c1, -1844273416, t1.c0)))) AND (x'cf'))) ORDER BY ((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR('0.08497491582000827')))<(0.5516352339091076)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)>=(t1.c0))) NOT BETWEEN (UPPER(t1.c0)) AND (t1.c0)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((t1.c0)>=(t1.c0))) NOT BETWEEN (UPPER(t1.c0)) AND (t1.c0)))AND(NULL))) ORDER BY CASE WHEN (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) THEN TRIM(DISTINCT t1.c1) WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND (('1486003871'))) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '584206397' WHEN t1.c1 THEN t1.c0 WHEN '1532065525' THEN x'afe3' WHEN t1.c0 THEN t1.c1 END WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE 'm' END THEN ((t1.c0)+(t1.c1)) WHEN (t1.c0 IN (t1.c0, t1.c1)) THEN UPPER(DISTINCT t1.c1) END, ((t1.c1)&(0.6517050205833143)) COLLATE RTRIM LIMIT 0X2 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((('T-5뜈_c(') BETWEEN (PRINTF(t1.c0)) AND (UPPER(t1.c0)))) ORDER BY CASE WHEN (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) THEN TRIM(DISTINCT t1.c1) WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND (('1486003871'))) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '584206397' WHEN t1.c1 THEN t1.c0 WHEN '1532065525' THEN x'afe3' WHEN t1.c0 THEN t1.c1 END WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE 'm' END THEN ((t1.c0)+(t1.c1)) WHEN (t1.c0 IN (t1.c0, t1.c1)) THEN UPPER(DISTINCT t1.c1) END, ((t1.c1)&(0.6517050205833143)) COLLATE RTRIM LIMIT 2;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((t1.c1 IN (t1.c1)) COLLATE BINARY);
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((t1.c1 IN (t1.c1)) COLLATE BINARY)AND(t1.c1))) ORDER BY (((t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1))) COLLATE RTRIM  NULLS LAST, CASE ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0))  WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c1)) THEN LIKELY(t1.c1) END LIMIT 0x0;
SELECT * FROM t1 WHERE ((- ((((t1.c1))<((t1.c0)))))) ORDER BY ((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0))) IS TRUE) ASC, ((t1.c1 COLLATE BINARY)<<((((t1.c0, t1.c1, t1.c1))<=((t1.c0, t1.c1, -5.21905785E8)))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((- ((((t1.c1))<((t1.c0))))))AND(((t1.c0)&(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN NULL WHEN t1.c0 THEN x'46afd2' WHEN t1.c1 THEN 0.8213135538475477 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))))) ORDER BY (((t1.c1) ISNULL) IN (((t1.c1)<<(t1.c1))))  NULLS FIRST;
SELECT * FROM t1 WHERE ((- ((((t1.c1))<((t1.c0)))))) ORDER BY ((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0))) IS TRUE) ASC, ((t1.c1 COLLATE BINARY)<<((((t1.c0, t1.c1, t1.c1))<=((t1.c0, t1.c1, -5.21905785E8)))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((- ((((t1.c1))<((t1.c0))))))AND(((t1.c0)&(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN NULL WHEN t1.c0 THEN x'46afd2' WHEN t1.c1 THEN 0.8213135538475477 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))))) ORDER BY (((t1.c1) ISNULL) IN (((t1.c1)<<(t1.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)%(t1.c0))) BETWEEN (CAST(t1.c0 AS BLOB)) AND (((t1.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)%(t1.c0))) BETWEEN (CAST(t1.c0 AS BLOB)) AND (((t1.c1) NOT NULL)))) LIMIT 2;
SELECT ALL * FROM t1 WHERE ((((~ (t1.c0))) ISNULL)) ORDER BY ((CAST(t1.c0 AS REAL)) IS TRUE)  NULLS FIRST, (((((x'' IN ()))OR(x'f104')))OR(t1.c0))  NULLS FIRST;
SELECT * FROM t1 WHERE ((((~ (t1.c0))) ISNULL)) ORDER BY ((CAST(t1.c0 AS REAL)) IS TRUE)  NULLS FIRST, (((((x'' IN ()))OR(x'f104')))OR(t1.c0))  NULLS FIRST LIMIT 0x2 INTERSECT SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)!=(t1.c0))) ORDER BY ((CAST(t1.c0 AS REAL)) IS TRUE)  NULLS FIRST, (((((x'' IN ()))OR(x'f104')))OR(t1.c0))  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t1 WHERE ((((~ (t1.c0))) ISNULL)) ORDER BY ((CAST(t1.c0 AS REAL)) IS TRUE)  NULLS FIRST, (((((x'' IN ()))OR(x'f104')))OR(t1.c0))  NULLS FIRST;
SELECT * FROM t1 WHERE ((((~ (t1.c0))) ISNULL)) ORDER BY ((CAST(t1.c0 AS REAL)) IS TRUE)  NULLS FIRST, (((((x'' IN ()))OR(x'f104')))OR(t1.c0))  NULLS FIRST LIMIT 0x2 INTERSECT SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)!=(t1.c0))) ORDER BY ((CAST(t1.c0 AS REAL)) IS TRUE)  NULLS FIRST, (((((x'' IN ()))OR(x'f104')))OR(t1.c0))  NULLS FIRST LIMIT 0X2;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c1 AS BLOB) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c1 AS BLOB) COLLATE BINARY) LIMIT 1;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0)>>(t1.c0)) IN (((t1.c0)>(t1.c0)), ((t1.c1)|(t1.c1)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c0)>>(t1.c0)) IN (((t1.c0)>(t1.c0)), ((t1.c1)|(t1.c1)))))AND(((CAST(t1.c0 AS INTEGER)) IS TRUE)))) ORDER BY ((CASE WHEN t1.c1 THEN '1963269296' WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN '0.4662004213261387' END)AND((NOT (t1.c1)))), (((+ (t1.c0)))/(((x'')-(t1.c1)))), (NOT (((t1.c0) IS FALSE))) DESC LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c1)AND(t1.c0)))OR(NULL)) COLLATE NOCASE) ORDER BY ((CASE WHEN t1.c1 THEN '1963269296' WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN '0.4662004213261387' END)AND((NOT (t1.c1)))), (((+ (t1.c0)))/(((x'')-(t1.c1)))), (NOT (((t1.c0) IS FALSE))) DESC LIMIT 0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (x'');
SELECT MIN(t1.c0) FROM t1 WHERE (x'') ORDER BY ((((t1.c0)IS(t1.c1)))!=(CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))  NULLS LAST, CAST(t1.c0 AS NUMERIC)  NULLS FIRST, CASE WHEN t1.c1 THEN 0.4377401951939409 WHEN t1.c1 THEN t1.c1 WHEN 0.7725295961209356 THEN t1.c0 END COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (NULL COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL COLLATE BINARY) ORDER BY (~ (CAST(t1.c0 AS BLOB)))  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) COLLATE BINARY);
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) COLLATE BINARY) ORDER BY HEX(DISTINCT CAST(t1.c0 AS BLOB))  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY HEX(DISTINCT CAST(t1.c0 AS BLOB))  NULLS FIRST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) COLLATE RTRIM) ORDER BY ((LIKELY(DISTINCT t1.c0))<=(((t1.c0)<(t1.c0)))) DESC  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) COLLATE RTRIM)AND((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) IN ())))) ORDER BY ((LIKELY(DISTINCT t1.c0))<=(((t1.c0)<(t1.c0)))) DESC  NULLS LAST LIMIT 0X0;
SELECT MAX(t1.c0) FROM t1 WHERE ((UNLIKELY(t1.c0) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY CAST(t1.c1 AS BLOB) COLLATE BINARY DESC  NULLS FIRST, ((CASE t1.c1  WHEN t1.c1 THEN x'' END) IS FALSE), ((((0.6499213271826821)IS NOT('-1148669192'))) IS TRUE) ASC  NULLS FIRST, COALESCE(DISTINCT (t1.c1 IN ()), (~ (t1.c0)))  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((UNLIKELY(t1.c0) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY CAST(CASE WHEN t1.c0 THEN 0.06086181834682047 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE '' END AS INTEGER) DESC  NULLS FIRST, '6H?K' DESC  NULLS LAST LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((t1.c1)OR(t1.c0)))OR(t1.c1))) BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) AND (CAST(t1.c1 AS BLOB)))) ORDER BY LTRIM(t1.c1, '&MRHd') COLLATE NOCASE DESC, CASE ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))  WHEN IFNULL(DISTINCT '-687481056', 0.37771677098086576) THEN ((t1.c0) NOTNULL) WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c1)<=(t1.c0)) END DESC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((t1.c1)OR(t1.c0)))OR(t1.c1))) BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) AND (CAST(t1.c1 AS BLOB)))) ORDER BY LTRIM(t1.c1, '&MRHd') COLLATE NOCASE DESC, CASE ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))  WHEN IFNULL(DISTINCT '-687481056', 0.37771677098086576) THEN ((t1.c0) NOTNULL) WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c1)<=(t1.c0)) END DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(((t1.c1)<>(t1.c0)) AS INTEGER));
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1)<>(t1.c0)) AS INTEGER));
SELECT * FROM t1 WHERE (CAST(((t1.c1)<>(t1.c0)) AS INTEGER));
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1)<>(t1.c0)) AS INTEGER));
SELECT ALL * FROM t1 WHERE (((t1.c1)>>(((t1.c0)LIKE(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)>>(((t1.c0)LIKE(t1.c0))))) ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (TRIM(t1.c0, t1.c1)) AND (')>-')) DESC  NULLS FIRST, x'77f8' ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((t1.c1)>>(((t1.c0)LIKE(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)>>(((t1.c0)LIKE(t1.c0))))) ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (TRIM(t1.c0, t1.c1)) AND (')>-')) DESC  NULLS FIRST, x'77f8' ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c1, t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((CAST(t1.c0 AS BLOB), ((((t1.c1)AND(NULL)))AND(t1.c1)), CASE WHEN -1.31715403E8 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND (((t1.c1 IN (x'ca')), (((t1.c0, t1.c1))<((t1.c0, t1.c0))), ((t1.c0)>=(t1.c0)), 'X ↀ4BndP枳'))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((CAST(t1.c0 AS BLOB), ((((t1.c1)AND(NULL)))AND(t1.c1)), CASE WHEN -1.31715403E8 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND (((t1.c1 IN (x'ca')), (((t1.c0, t1.c1))<=((t1.c0, t1.c0))), ((t1.c0)>=(t1.c0)), 'X ↀ4BndP枳'))))AND(LOWER(DISTINCT CAST(t1.c0 AS NUMERIC))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)));
SELECT * FROM t1 WHERE ((((t1.c1, t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((CAST(t1.c0 AS BLOB), ((((t1.c1)AND(NULL)))AND(t1.c1)), CASE WHEN -1.31715403E8 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND (((t1.c1 IN (x'ca')), (((t1.c0, t1.c1))<((t1.c0, t1.c0))), ((t1.c0)>=(t1.c0)), 'X ↀ4BndP枳'))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((CAST(t1.c0 AS BLOB), ((((t1.c1)AND(NULL)))AND(t1.c1)), CASE WHEN -1.31715403E8 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND (((t1.c1 IN (x'ca')), (((t1.c0, t1.c1))<=((t1.c0, t1.c0))), ((t1.c0)>=(t1.c0)), 'X ↀ4BndP枳'))))AND(LOWER(DISTINCT CAST(t1.c0 AS NUMERIC))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)));
SELECT MAX(t1.c1) FROM t1 WHERE (((((822453474))<((t1.c1))) IN ()));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((822453474))<((t1.c1))) IN ()))AND((((((('853913989')||(t1.c1)))AND(((((((213504008)AND(t1.c0)))OR(0.2093549832666588)))AND(t1.c0)))))AND(((((t1.c1)OR(t1.c1)))AND(t1.c1))))))) ORDER BY (- ((t1.c0 IN ())))  NULLS FIRST, t1.c0 DESC  NULLS LAST LIMIT 0x2;
SELECT MIN(t1.c0) FROM t1 WHERE (NULL) ORDER BY (((((t1.c1, NULL)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0)))) NOT BETWEEN (((t1.c1)&(t1.c0))) AND (t1.c1)), ((CASE t1.c1  WHEN t1.c1 THEN x'' WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)<=((t1.c0 IN (t1.c1))));
SELECT MIN(t1.c0) FROM t1 WHERE (NULL) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (x''))) NOTNULL), t1.c1 LIMIT 0x2 INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (x''))) NOTNULL), t1.c1 LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY CAST(CAST(2.60994655E8 AS NUMERIC) AS BLOB) ASC, UNLIKELY((NULL IN (t1.c1)))  NULLS LAST, (((t1.c1, t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c1)IS(t1.c1)), ((t1.c1)OR(t1.c0)), ((t1.c1) NOT BETWEEN ('-1415981947') AND (t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN -2096924026 ELSE t1.c1 END)) AND (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))), CASE NULL  WHEN t1.c1 THEN t1.c0 END, ((t1.c1)*(t1.c0)), (t1.c0 IN ())))) DESC;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY CAST(CAST(2.60994655E8 AS NUMERIC) AS BLOB) ASC, UNLIKELY((NULL IN (t1.c1)))  NULLS LAST, (((t1.c1, t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c1)IS(t1.c1)), ((t1.c1)OR(t1.c0)), ((t1.c1) NOT BETWEEN ('-1415981947') AND (t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN -2096924026 ELSE t1.c1 END)) AND (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))), CASE NULL  WHEN t1.c1 THEN t1.c0 END, ((t1.c1)*(t1.c0)), (t1.c0 IN ())))) DESC LIMIT 1;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY CAST(CAST(2.60994655E8 AS NUMERIC) AS BLOB) ASC, UNLIKELY((NULL IN (t1.c1)))  NULLS LAST, (((t1.c1, t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c1)IS(t1.c1)), ((t1.c1)OR(t1.c0)), ((t1.c1) NOT BETWEEN ('-1415981947') AND (t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN -2096924026 ELSE t1.c1 END)) AND (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))), CASE NULL  WHEN t1.c1 THEN t1.c0 END, ((t1.c1)*(t1.c0)), (t1.c0 IN ())))) DESC;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY CAST(CAST(2.60994655E8 AS NUMERIC) AS BLOB) ASC, UNLIKELY((NULL IN (t1.c1)))  NULLS LAST, (((t1.c1, t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c1)IS(t1.c1)), ((t1.c1)OR(t1.c0)), ((t1.c1) NOT BETWEEN ('-1415981947') AND (t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN -2096924026 ELSE t1.c1 END)) AND (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))), CASE NULL  WHEN t1.c1 THEN t1.c0 END, ((t1.c1)*(t1.c0)), (t1.c0 IN ())))) DESC LIMIT 1;
SELECT MIN(t1.c0) FROM t1 WHERE (RTRIM(((((((((' )XH')OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))OR(NULL))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((RTRIM(((((((((' )XH')OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))OR(NULL))))AND(json_type(t1.c1 COLLATE BINARY)))) ORDER BY (((+ (t1.c0))) IS TRUE)  NULLS FIRST, CAST(((t1.c0)-(t1.c0)) AS BLOB) ASC, ((t1.c1)-(((((t1.c0)AND(NULL)))OR(t1.c1)))) ASC  NULLS FIRST, x'' INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (((t1.c0) IS FALSE)) ORDER BY (((+ (t1.c0))) IS TRUE)  NULLS FIRST, CAST(((t1.c0)-(t1.c0)) AS BLOB) ASC, ((t1.c1)-(((((t1.c0)AND(NULL)))OR(t1.c1)))) ASC  NULLS FIRST, x'';
SELECT MIN(t1.c1) FROM t1 WHERE ((NOT (t1.c0)) COLLATE NOCASE) ORDER BY 0.4548902108773245, 0.6602283942757515;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((NOT (t1.c0)) COLLATE NOCASE)AND(CASE WHEN (NOT (t1.c1)) THEN (((t1.c1, t1.c1))<=((t1.c0, t1.c0))) WHEN (- (t1.c1)) THEN ((((((t1.c0)AND(0.8822258305954496)))AND(t1.c0)))AND(t1.c0)) ELSE ((0.5322947187370317) IS TRUE) END))) ORDER BY 0.4548902108773245, 0.6602283942757515;
SELECT * FROM t1 WHERE ((((((((t1.c1)OR(t1.c1)))AND(t1.c1))))==((CAST(t1.c0 AS REAL))))) ORDER BY CASE json_array_length(t1.c0)  WHEN (NOT (t1.c1)) THEN (t1.c1 IN ()) END ASC, ((((t1.c1)-(t1.c1))) NOT NULL)  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((((((((t1.c1)OR(t1.c1)))AND(t1.c1))))=((CAST(t1.c0 AS REAL)))))AND(CAST(((t1.c0) ISNULL) AS TEXT)))) ORDER BY CASE json_array_length(t1.c0)  WHEN (NOT (t1.c1)) THEN (t1.c1 IN ()) END ASC, ((((t1.c1)-(t1.c1))) NOT NULL)  NULLS LAST LIMIT 0x4 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((IFNULL(t1.c1, t1.c1))OR(((t1.c1)IS(t1.c1))))) ORDER BY CASE json_array_length(t1.c0)  WHEN (NOT (t1.c1)) THEN (t1.c1 IN ()) END ASC, ((((t1.c1)-(t1.c1))) NOT NULL)  NULLS LAST LIMIT 0x4;
SELECT * FROM t1 WHERE ((((((((t1.c1)OR(t1.c1)))AND(t1.c1))))==((CAST(t1.c0 AS REAL))))) ORDER BY CASE json_array_length(t1.c0)  WHEN (NOT (t1.c1)) THEN (t1.c1 IN ()) END ASC, ((((t1.c1)-(t1.c1))) NOT NULL)  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((((((((t1.c1)OR(t1.c1)))AND(t1.c1))))=((CAST(t1.c0 AS REAL)))))AND(CAST(((t1.c0) ISNULL) AS TEXT)))) ORDER BY CASE json_array_length(t1.c0)  WHEN (NOT (t1.c1)) THEN (t1.c1 IN ()) END ASC, ((((t1.c1)-(t1.c1))) NOT NULL)  NULLS LAST LIMIT 0x4 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((IFNULL(t1.c1, t1.c1))OR(((t1.c1)IS(t1.c1))))) ORDER BY CASE json_array_length(t1.c0)  WHEN (NOT (t1.c1)) THEN (t1.c1 IN ()) END ASC, ((((t1.c1)-(t1.c1))) NOT NULL)  NULLS LAST LIMIT 0x4;
SELECT MAX(t1.c0) FROM t1 WHERE (((t1.c0 COLLATE BINARY)-(CASE WHEN t1.c1 THEN 'f' WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)));
SELECT MAX(t1.c0) FROM t1 WHERE (((t1.c0 COLLATE BINARY)-(CASE WHEN t1.c1 THEN 'f' WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))) ORDER BY ((((t1.c1)GLOB(t1.c1)))%(TRIM(DISTINCT t1.c1))) DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 WHERE (LOWER(DISTINCT CASE t1.c0  WHEN t1.c1 THEN '<m7rStjL' END));
SELECT ALL * FROM t1 WHERE (LOWER(DISTINCT CASE t1.c0  WHEN t1.c1 THEN '<m7rStjL' END));
SELECT * FROM t1 WHERE (LOWER(DISTINCT CASE t1.c0  WHEN t1.c1 THEN '<m7rStjL' END));
SELECT ALL * FROM t1 WHERE (LOWER(DISTINCT CASE t1.c0  WHEN t1.c1 THEN '<m7rStjL' END));
SELECT * FROM t1 WHERE ((((((t1.c1)+(NULL))))<=(((t1.c0 IN ())))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)+(NULL))))<=(((t1.c0 IN ()))))) ORDER BY CASE ((t1.c0)*(t1.c0))  WHEN (NOT (t1.c1)) THEN ((t1.c0)IS NOT(t1.c0)) WHEN ((t1.c0) IS FALSE) THEN (((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0))) WHEN (+ (t1.c0)) THEN CAST(t1.c0 AS INTEGER) END DESC  NULLS LAST, ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (((t1.c0) NOT BETWEEN (0.556518735475008) AND (t1.c0))) AND (CASE WHEN t1.c1 THEN t1.c1 ELSE x'' END));
SELECT * FROM t1 WHERE ((((((t1.c1)+(NULL))))<=(((t1.c0 IN ())))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)+(NULL))))<=(((t1.c0 IN ()))))) ORDER BY CASE ((t1.c0)*(t1.c0))  WHEN (NOT (t1.c1)) THEN ((t1.c0)IS NOT(t1.c0)) WHEN ((t1.c0) IS FALSE) THEN (((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0))) WHEN (+ (t1.c0)) THEN CAST(t1.c0 AS INTEGER) END DESC  NULLS LAST, ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (((t1.c0) NOT BETWEEN (0.556518735475008) AND (t1.c0))) AND (CASE WHEN t1.c1 THEN t1.c1 ELSE x'' END));
SELECT ALL * FROM t1 WHERE (CAST(json_object(t1.c1, t1.c0, NULL) AS BLOB)) ORDER BY t1.c1;
SELECT ALL * FROM t1 WHERE (CAST(json_object(t1.c1, t1.c0, NULL) AS BLOB)) ORDER BY LIKELIHOOD((((t1.c0))>((t1.c0))), (~ (t1.c1)))  NULLS LAST, CAST('100929609' AS NUMERIC) COLLATE BINARY ASC, ((CAST(t1.c1 AS INTEGER))IS NOT(CAST(t1.c0 AS TEXT))) INTERSECT SELECT * FROM t1 WHERE (((((t1.c0)%(t1.c0)))IS NOT('9G#6%V~y'))) ORDER BY LIKELIHOOD((((t1.c0))>((t1.c0))), (~ (t1.c1)))  NULLS LAST, CAST('100929609' AS NUMERIC) COLLATE BINARY ASC, ((CAST(t1.c1 AS INTEGER))IS NOT(CAST(t1.c0 AS TEXT)));
SELECT ALL * FROM t1 WHERE (CAST(json_object(t1.c1, t1.c0, NULL) AS BLOB)) ORDER BY t1.c1;
SELECT * FROM t1 WHERE (((NULL) NOT BETWEEN (CAST(t1.c1 AS INTEGER)) AND ('>z' COLLATE BINARY))) ORDER BY CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY ASC, NULL ASC;
SELECT DISTINCT * FROM t1 WHERE (((NULL) NOT BETWEEN (CAST(t1.c1 AS INTEGER)) AND ('>z' COLLATE BINARY))) ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((((((x'37')AND(t1.c1)))AND(t1.c1)))AND(x'27')))), SQLITE_VERSION() ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((((((x'37')AND(t1.c1)))AND(t1.c1)))AND(x'27')))), SQLITE_VERSION() ASC  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE (((NULL) NOT BETWEEN (CAST(t1.c1 AS INTEGER)) AND ('>z' COLLATE BINARY))) ORDER BY CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY ASC, NULL ASC;
SELECT DISTINCT * FROM t1 WHERE (((NULL) NOT BETWEEN (CAST(t1.c1 AS INTEGER)) AND ('>z' COLLATE BINARY))) ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((((((x'37')AND(t1.c1)))AND(t1.c1)))AND(x'27')))), SQLITE_VERSION() ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((((((x'37')AND(t1.c1)))AND(t1.c1)))AND(x'27')))), SQLITE_VERSION() ASC  NULLS FIRST LIMIT 0X0;
SELECT MIN(t1.c1) FROM t1 WHERE (((t1.c1)=(t1.c0)) COLLATE BINARY);
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c1)=(t1.c0)) COLLATE BINARY)AND('B㾿_'))) ORDER BY ((CAST(t1.c1 AS BLOB)) IS FALSE) ASC  NULLS LAST, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE RTRIM ASC  NULLS LAST LIMIT 0x3;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ('a') ORDER BY (((t1.c1) IS TRUE) IN (t1.c1, SQLITE_SOURCE_ID()))  NULLS LAST, (CAST(t1.c1 AS TEXT) IN (LENGTH(t1.c1))) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((('a')AND(x''))) ORDER BY (((t1.c0 IN ())) NOT NULL), CASE ((t1.c1) IS TRUE)  WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN 1.486003871E9 THEN t1.c0 ELSE t1.c1 END THEN t1.c0 COLLATE NOCASE WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END THEN NULL WHEN ((t1.c0)/(t1.c1)) THEN ((((((t1.c1)AND('8')))AND(t1.c0)))AND(t1.c1)) END ASC  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((t1.c0) ISNULL) COLLATE NOCASE) ORDER BY (((t1.c0 IN ())) NOT NULL), CASE ((t1.c1) IS TRUE)  WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN 1.486003871E9 THEN t1.c0 ELSE t1.c1 END THEN t1.c0 COLLATE NOCASE WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END THEN NULL WHEN ((t1.c0)/(t1.c1)) THEN ((((((t1.c1)AND('8')))AND(t1.c0)))AND(t1.c1)) END ASC  NULLS LAST LIMIT 1;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CASE WHEN CASE t1.c0  WHEN x'45' THEN t1.c1 WHEN t1.c1 THEN t1.c0 END THEN t1.c0 COLLATE BINARY ELSE ((t1.c0) NOTNULL) END) ORDER BY TYPEOF(DISTINCT ((t1.c1) NOT NULL)) DESC  NULLS LAST, ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL), (~ ((t1.c1 IN (t1.c1, t1.c0))))  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((CASE WHEN CASE t1.c0  WHEN x'45' THEN t1.c1 WHEN t1.c1 THEN t1.c0 END THEN t1.c0 COLLATE BINARY ELSE ((t1.c0) NOTNULL) END)AND((((((((((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))OR((((t1.c0, t1.c1))<=((x'', t1.c1))))))OR(((t1.c1)<<(t1.c0)))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND((t1.c0 IN (t1.c1, 0Xffffffff9ee8197d))))))) ORDER BY TYPEOF(DISTINCT ((t1.c1) NOT NULL)) DESC  NULLS LAST, ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL), (~ ((t1.c1 IN (t1.c1, t1.c0))))  NULLS FIRST LIMIT 1;
SELECT MAX(t1.c0) FROM t1 WHERE (CASE (((t1.c1, t1.c1, t1.c0))>((t1.c0, t1.c0, '0.24664337080653986')))  WHEN t1.c1 THEN (t1.c0 IN (t1.c0)) WHEN ((t1.c0)+(t1.c0)) THEN '' END) ORDER BY LAST_INSERT_ROWID()  NULLS LAST, 'G%Hs!eb璖R'  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((CASE (((t1.c1, t1.c1, t1.c0))>((t1.c0, t1.c0, '0.24664337080653986')))  WHEN t1.c1 THEN (t1.c0 IN (t1.c0)) WHEN ((t1.c0)+(t1.c0)) THEN '' END)AND(((CAST('0.0' AS NUMERIC)) BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) AND ((t1.c1 IN (t1.c0))))))) ORDER BY LAST_INSERT_ROWID()  NULLS LAST, 'G%Hs!eb璖R'  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE ((~ (t1.c0 COLLATE RTRIM))) ORDER BY ((((((t1.c1)AND(t1.c0)))AND(t1.c0)))>>((t1.c0 IN (t1.c1)))) DESC, (NOT (CAST(t1.c0 AS TEXT)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((~ (t1.c0 COLLATE RTRIM)))AND(CAST(t1.c1 AS INTEGER) COLLATE RTRIM))) ORDER BY (((t1.c1 IN ())) NOT NULL) DESC INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((t1.c1 IN ())) ORDER BY (((t1.c1 IN ())) NOT NULL) DESC;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c0) NOTNULL))GLOB(t1.c0 COLLATE NOCASE))) ORDER BY ((t1.c0 COLLATE RTRIM) IS TRUE) DESC;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((t1.c0) NOTNULL))GLOB(t1.c0 COLLATE NOCASE))) ORDER BY ((t1.c0 COLLATE RTRIM) IS TRUE) DESC LIMIT 1;
SELECT * FROM t1 WHERE (CAST((t1.c0 IN ()) AS BLOB)) ORDER BY (((((t1.c0, t1.c0, t1.c0, t1.c1))>=((t1.c1, t1.c1, t1.c0, t1.c1)))) BETWEEN (t1.c1 COLLATE NOCASE) AND ((((0.1285791700929777, -7.51069479E8))<=((t1.c0, NULL))))) ASC;
SELECT ALL * FROM t1 WHERE (((CAST((t1.c0 IN ()) AS BLOB))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE x'' END COLLATE BINARY COLLATE BINARY))) ORDER BY (((((t1.c0, t1.c0, t1.c0, t1.c1))>=((t1.c1, t1.c1, t1.c0, t1.c1)))) BETWEEN (t1.c1 COLLATE NOCASE) AND ((((0.1285791700929777, -7.51069479E8))<=((t1.c0, NULL))))) ASC INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0)) NOT BETWEEN (((t1.c0 IN ()), t1.c0)) AND ((((t1.c1)||(x'')), CAST(t1.c1 AS INTEGER))))) ORDER BY (((((t1.c0, t1.c0, t1.c0, t1.c1))>=((t1.c1, t1.c1, t1.c0, t1.c1)))) BETWEEN (t1.c1 COLLATE NOCASE) AND ((((0.1285791700929777, -7.51069479E8))<=((t1.c0, NULL))))) ASC;
SELECT * FROM t1 WHERE (CAST((t1.c0 IN ()) AS BLOB)) ORDER BY (((((t1.c0, t1.c0, t1.c0, t1.c1))>=((t1.c1, t1.c1, t1.c0, t1.c1)))) BETWEEN (t1.c1 COLLATE NOCASE) AND ((((0.1285791700929777, -7.51069479E8))<=((t1.c0, NULL))))) ASC;
SELECT ALL * FROM t1 WHERE (((CAST((t1.c0 IN ()) AS BLOB))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE x'' END COLLATE BINARY COLLATE BINARY))) ORDER BY (((((t1.c0, t1.c0, t1.c0, t1.c1))>=((t1.c1, t1.c1, t1.c0, t1.c1)))) BETWEEN (t1.c1 COLLATE NOCASE) AND ((((0.1285791700929777, -7.51069479E8))<=((t1.c0, NULL))))) ASC INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0)) NOT BETWEEN (((t1.c0 IN ()), t1.c0)) AND ((((t1.c1)||(x'')), CAST(t1.c1 AS INTEGER))))) ORDER BY (((((t1.c0, t1.c0, t1.c0, t1.c1))>=((t1.c1, t1.c1, t1.c0, t1.c1)))) BETWEEN (t1.c1 COLLATE NOCASE) AND ((((0.1285791700929777, -7.51069479E8))<=((t1.c0, NULL))))) ASC;
SELECT MIN(t1.c1) FROM t1 WHERE (NULLIF(CASE WHEN 'x腇*yK쮰d' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, NULL));
SELECT MIN(t1.c1) FROM t1 WHERE (NULLIF(CASE WHEN 'x腇*yK쮰d' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, NULL)) ORDER BY ((CAST(t1.c1 AS NUMERIC))+((t1.c1 IN ())))  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t1 WHERE ((((t1.c1))<=((t1.c0))) COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1))<((t1.c0))) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE ((((t1.c1))<=((t1.c0))) COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1))<((t1.c0))) COLLATE RTRIM);
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((~ ((((t1.c1))==((t1.c0))))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((~ ((((t1.c1))=((t1.c0))))))AND(t1.c1))) ORDER BY CASE WHEN CAST(0.6634638832342652 AS INTEGER) THEN ((t1.c1) ISNULL) WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN t1.c0 WHEN COALESCE(DISTINCT t1.c0, t1.c1, t1.c0, t1.c1) THEN STRFTIME(t1.c0, t1.c1, -1634146427, 0Xffffffff80ff977e) WHEN (NOT (t1.c0)) THEN t1.c0 COLLATE BINARY WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c0)<>(t1.c1)) END ASC, x'', COALESCE(DISTINCT ((t1.c1) NOT NULL), (NOT (t1.c0))) DESC;
SELECT ALL * FROM t1 WHERE (((((t1.c1)>>(t1.c0))) BETWEEN (((t1.c0)/(t1.c1))) AND (((t1.c0)>(t1.c0))))) ORDER BY (t1.c0 IN (t1.c1)) COLLATE NOCASE;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)>>(t1.c0))) BETWEEN (((t1.c0)/(t1.c1))) AND (((t1.c0)>(t1.c0))))) ORDER BY (t1.c0 IN (t1.c1)) COLLATE NOCASE LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (((((t1.c1)>>(t1.c0))) BETWEEN (((t1.c0)/(t1.c1))) AND (((t1.c0)>(t1.c0))))) ORDER BY (t1.c0 IN (t1.c1)) COLLATE NOCASE;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)>>(t1.c0))) BETWEEN (((t1.c0)/(t1.c1))) AND (((t1.c0)>(t1.c0))))) ORDER BY (t1.c0 IN (t1.c1)) COLLATE NOCASE LIMIT 0x1;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE json_array(t1.c0, t1.c1)  WHEN ((t1.c1) BETWEEN (-3.9906475E8) AND (t1.c1)) THEN t1.c0 COLLATE NOCASE WHEN t1.c0 THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END) ORDER BY CASE WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN NULL THEN t1.c1 ELSE t1.c0 END THEN ((t1.c0)>=(t1.c0)) ELSE t1.c0 COLLATE NOCASE END DESC, CASE x''  WHEN (+ (t1.c0)) THEN (~ (t1.c0)) WHEN ((t1.c0)<>(t1.c0)) THEN (((t1.c0, t1.c0))>((t1.c1, t1.c0))) WHEN CAST(t1.c0 AS TEXT) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN 0xffffffffbd21cb1f THEN t1.c1 ELSE t1.c1 END END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE json_array(t1.c0, t1.c1)  WHEN ((t1.c1) BETWEEN (-3.9906475E8) AND (t1.c1)) THEN t1.c0 COLLATE NOCASE WHEN t1.c0 THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END) ORDER BY CASE WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN NULL THEN t1.c1 ELSE t1.c0 END THEN ((t1.c0)>=(t1.c0)) ELSE t1.c0 COLLATE NOCASE END DESC, CASE x''  WHEN (+ (t1.c0)) THEN (~ (t1.c0)) WHEN ((t1.c0)<>(t1.c0)) THEN (((t1.c0, t1.c0))>((t1.c1, t1.c0))) WHEN CAST(t1.c0 AS TEXT) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN -1121858785 THEN t1.c1 ELSE t1.c1 END END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (UNLIKELY((('-1470342848')<=(t1.c0))));
SELECT COUNT(*) FROM t1 WHERE (((UNLIKELY((('-1470342848')<=(t1.c0))))AND(CASE (~ (t1.c0))  WHEN ((t1.c1)<=(t1.c0)) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END WHEN x'7b6e32b6' THEN ((t1.c1)<<(t1.c0)) WHEN CAST(t1.c1 AS INTEGER) THEN ((t1.c0)<=(t1.c1)) END))) ORDER BY (((t1.c1, ((t1.c1)%(t1.c0))))<((0.6703215129236735, t1.c0 COLLATE RTRIM)))  NULLS FIRST, (~ (x''));
SELECT ALL * FROM t1 WHERE ('1041810244') ORDER BY LTRIM(t1.c0, t1.c1) DESC, GLOB(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), (t1.c0 IN (t1.c0)));
SELECT ALL * FROM t1 WHERE ((('1041810244')AND(CASE WHEN ((t1.c1)=(0.3082733583422368)) THEN LIKELIHOOD(t1.c0, t1.c1) ELSE (((t1.c1, t1.c0))<((t1.c0, t1.c0))) END))) ORDER BY LTRIM(t1.c0, t1.c1) DESC, GLOB(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), (t1.c0 IN (t1.c0))) LIMIT 1;
SELECT ALL * FROM t1 WHERE ('1041810244') ORDER BY LTRIM(t1.c0, t1.c1) DESC, GLOB(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), (t1.c0 IN (t1.c0)));
SELECT ALL * FROM t1 WHERE ((('1041810244')AND(CASE WHEN ((t1.c1)=(0.3082733583422368)) THEN LIKELIHOOD(t1.c0, t1.c1) ELSE (((t1.c1, t1.c0))<((t1.c0, t1.c0))) END))) ORDER BY LTRIM(t1.c0, t1.c1) DESC, GLOB(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), (t1.c0 IN (t1.c0))) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE (x'' COLLATE NOCASE) ORDER BY t1.c0 DESC, (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) IN ()) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (x'' COLLATE NOCASE) ORDER BY t1.c0 DESC, (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) IN ()) DESC INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((((((((NULL) NOT BETWEEN (t1.c1) AND (t1.c1)))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE NULL END)))AND((~ (t1.c1)))))OR((~ (t1.c1))))) ORDER BY t1.c0 DESC, (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) IN ()) DESC;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))+(((t1.c1) NOTNULL))));
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC))+(((t1.c1) NOTNULL))))AND(CAST(x'' AS BLOB)))) INTERSECT SELECT * FROM t1 WHERE (0xbb78916);
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))+(((t1.c1) NOTNULL))));
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC))+(((t1.c1) NOTNULL))))AND(CAST(x'' AS BLOB)))) INTERSECT SELECT * FROM t1 WHERE (0xbb78916);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)%(t1.c1))) BETWEEN ((- (t1.c1))) AND (((t1.c0)+(t1.c0)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c1)%(t1.c1))) BETWEEN ((- (t1.c1))) AND (((t1.c0)+(t1.c0))))) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((t1.c1))<((t1.c0))), ((t1.c0) IS TRUE), CAST(t1.c0 AS INTEGER), ((t1.c1) NOT NULL), 2.067293718E9))!=((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END, t1.c0, CASE WHEN t1.c0 THEN t1.c0 END, (t1.c0 IN (t1.c0)), ((NULL)*(t1.c1))))));
SELECT * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (t1.c1) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST((((t1.c0))>=((t1.c0))) AS INTEGER)) LIMIT 0x0;
SELECT * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (t1.c1) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST((((t1.c0))>=((t1.c0))) AS INTEGER)) LIMIT 0x0;
SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c0)IS(NULL)))+(((t1.c1)+(t1.c1)))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((t1.c0)IS(NULL)))+(((t1.c1)+(t1.c1)))))AND((('') IS TRUE)))) LIMIT 2 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (CASE WHEN COALESCE(t1.c1, -48454380) THEN CAST(t1.c0 AS BLOB) END) LIMIT 2;
SELECT ALL * FROM t1 WHERE (((t1.c0)IS NOT(t1.c0))) ORDER BY ((((t1.c0)>(t1.c1)))IS NOT(((t1.c1)|(t1.c1)))), (NOT (((t1.c1)<=(t1.c0)))) DESC;
SELECT ALL * FROM t1 WHERE (((((t1.c0)IS NOT(t1.c0)))AND(t1.c1))) ORDER BY ROUND((t1.c1 IN ()), ((((((t1.c1)AND(t1.c1)))AND(NULL)))OR(t1.c0))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((t1.c0)IS NOT(t1.c0))) ORDER BY ((((t1.c0)>(t1.c1)))IS NOT(((t1.c1)|(t1.c1)))), (NOT (((t1.c1)<=(t1.c0)))) DESC;
SELECT ALL * FROM t1 WHERE (((((t1.c0)IS NOT(t1.c0)))AND(t1.c1))) ORDER BY ROUND((t1.c1 IN ()), ((((((t1.c1)AND(t1.c1)))AND(NULL)))OR(t1.c0))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (((IFNULL(t1.c0, t1.c1))||((((t1.c1, t1.c0, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c1))))));
SELECT ALL * FROM t1 WHERE (((((IFNULL(t1.c0, t1.c1))||((((t1.c1, t1.c0, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c1))))))AND('')));
SELECT * FROM t1 WHERE (((IFNULL(t1.c0, t1.c1))||((((t1.c1, t1.c0, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c1))))));
SELECT ALL * FROM t1 WHERE (((((IFNULL(t1.c0, t1.c1))||((((t1.c1, t1.c0, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c1))))))AND('')));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT NULL)) ORDER BY (((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))*(RTRIM(0.4871839894734744)));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT NULL))AND((~ (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))))) ORDER BY (((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))*(RTRIM(0.4871839894734744))) LIMIT 0X0 INTERSECT SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)>>(t1.c0)) IN ())) ORDER BY (((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))*(RTRIM(0.4871839894734744))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((((CAST(t1.c0 AS BLOB))AND(TRIM(t1.c0, t1.c0))))OR((t1.c1 IN (NULL, t1.c0)))))AND(CAST(t1.c0 AS REAL))));
SELECT ALL * FROM t1 WHERE (((((((((CAST(t1.c0 AS BLOB))AND(TRIM(t1.c0, t1.c0))))OR((t1.c1 IN (NULL, t1.c0)))))AND(CAST(t1.c0 AS REAL))))AND(CAST(t1.c0 AS NUMERIC) COLLATE NOCASE))) ORDER BY ((((t1.c0) BETWEEN (x'2f') AND (t1.c1)))==(CAST(t1.c1 AS NUMERIC))) ASC  NULLS FIRST, (((t1.c1) ISNULL) IN (((((t1.c1)OR(t1.c0)))OR(t1.c1)))) INTERSECT SELECT * FROM t1 WHERE (CAST(((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c0)) AS INTEGER)) ORDER BY ((((t1.c0) BETWEEN (x'2f') AND (t1.c1)))=(CAST(t1.c1 AS NUMERIC))) ASC  NULLS FIRST, (((t1.c1) ISNULL) IN (((((t1.c1)OR(t1.c0)))OR(t1.c1))));
SELECT ALL * FROM t1 WHERE (((((((CAST(t1.c0 AS BLOB))AND(TRIM(t1.c0, t1.c0))))OR((t1.c1 IN (NULL, t1.c0)))))AND(CAST(t1.c0 AS REAL))));
SELECT ALL * FROM t1 WHERE (((((((((CAST(t1.c0 AS BLOB))AND(TRIM(t1.c0, t1.c0))))OR((t1.c1 IN (NULL, t1.c0)))))AND(CAST(t1.c0 AS REAL))))AND(CAST(t1.c0 AS NUMERIC) COLLATE NOCASE))) ORDER BY ((((t1.c0) BETWEEN (x'2f') AND (t1.c1)))==(CAST(t1.c1 AS NUMERIC))) ASC  NULLS FIRST, (((t1.c1) ISNULL) IN (((((t1.c1)OR(t1.c0)))OR(t1.c1)))) INTERSECT SELECT * FROM t1 WHERE (CAST(((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c0)) AS INTEGER)) ORDER BY ((((t1.c0) BETWEEN (x'2f') AND (t1.c1)))=(CAST(t1.c1 AS NUMERIC))) ASC  NULLS FIRST, (((t1.c1) ISNULL) IN (((((t1.c1)OR(t1.c0)))OR(t1.c1))));
SELECT ALL * FROM t1 WHERE (NULLIF(t1.c1, t1.c1) COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE (NULLIF(t1.c1, t1.c1) COLLATE BINARY) ORDER BY t1.c1 ASC  NULLS LAST, ((((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))+(t1.c1)) DESC  NULLS FIRST, t1.c0 LIMIT 4;
SELECT ALL * FROM t1 WHERE (NULLIF(t1.c1, t1.c1) COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE (NULLIF(t1.c1, t1.c1) COLLATE BINARY) ORDER BY t1.c1 ASC  NULLS LAST, ((((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))+(t1.c1)) DESC  NULLS FIRST, t1.c0 LIMIT 4;
SELECT * FROM t1 WHERE ((((((t1.c1, t1.c1))>=((t1.c0, '飿{FI4'))))<>(((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((((((t1.c1, t1.c1))>=((t1.c0, '飿{FI4'))))<(((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))))AND((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c1 COLLATE RTRIM, CAST(t1.c1 AS TEXT), (- (t1.c0)))) AND (((t1.c0 IN (t1.c0)), CAST(t1.c1 AS TEXT), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))))));
SELECT * FROM t1 WHERE ((((((t1.c1, t1.c1))>=((t1.c0, '飿{FI4'))))<>(((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((((((t1.c1, t1.c1))>=((t1.c0, '飿{FI4'))))<(((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))))AND((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c1 COLLATE RTRIM, CAST(t1.c1 AS TEXT), (- (t1.c0)))) AND (((t1.c0 IN (t1.c0)), CAST(t1.c1 AS TEXT), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((json_array(NULL, t1.c1, t1.c0, t1.c0, t1.c1, t1.c0))*((t1.c1 IN ())))) ORDER BY ((((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))OR((NOT (t1.c0)))))AND(LAST_INSERT_ROWID())))AND(NULL)) DESC;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((json_array(NULL, t1.c1, t1.c0, t1.c0, t1.c1, t1.c0))*((t1.c1 IN ())))) ORDER BY ((((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))OR((NOT (t1.c0)))))AND(LAST_INSERT_ROWID())))AND(NULL)) DESC LIMIT 1 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((t1.c1) IS TRUE)) NOT BETWEEN (((t1.c1) IS TRUE)) AND (CAST(t1.c1 AS REAL)))) ORDER BY ((((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))OR((NOT (t1.c0)))))AND(LAST_INSERT_ROWID())))AND(NULL)) DESC LIMIT 1;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)<>(x'f5b3c6'))) ORDER BY (((LTRIM(t1.c0)))>((x'ea')))  NULLS FIRST, x'' ASC, CAST(-1129702977 AS REAL)  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)<>(x'f5b3c6')))AND(((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))>((t1.c1 IN (t1.c0))))))) ORDER BY ((t1.c1 COLLATE RTRIM)=(x'')) ASC  NULLS LAST INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE ((- ((~ (t1.c1))))) ORDER BY ((t1.c1 COLLATE RTRIM)=(x'')) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((t1.c0) NOT BETWEEN ('Ln琶') AND (t1.c1)))AND((+ (t1.c0)))))OR(((((t1.c0)OR(t1.c0)))AND(t1.c1)))));
SELECT ALL * FROM t1 WHERE (((((((((t1.c0) NOT BETWEEN ('Ln琶') AND (t1.c1)))AND((+ (t1.c0)))))OR(((((t1.c0)OR(t1.c0)))AND(t1.c1)))))AND(t1.c1))) ORDER BY LIKELY(DISTINCT (((t1.c1, t1.c0, t1.c0))>((t1.c0, NULL, t1.c1)))), ((((((((NULL)AND(t1.c1)))OR((t1.c0 IN (t1.c1, t1.c0)))))AND(TRIM(t1.c0, t1.c1))))AND(t1.c1)) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((t1.c0) NOT BETWEEN ('Ln琶') AND (t1.c1)))AND((+ (t1.c0)))))OR(((((t1.c0)OR(t1.c0)))AND(t1.c1)))));
SELECT ALL * FROM t1 WHERE (((((((((t1.c0) NOT BETWEEN ('Ln琶') AND (t1.c1)))AND((+ (t1.c0)))))OR(((((t1.c0)OR(t1.c0)))AND(t1.c1)))))AND(t1.c1))) ORDER BY LIKELY(DISTINCT (((t1.c1, t1.c0, t1.c0))>((t1.c0, NULL, t1.c1)))), ((((((((NULL)AND(t1.c1)))OR((t1.c0 IN (t1.c1, t1.c0)))))AND(TRIM(t1.c0, t1.c1))))AND(t1.c1)) ASC  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c1 IN (t1.c1, t1.c0)) IN (x'18' COLLATE RTRIM, CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))) ORDER BY CAST(t1.c1 COLLATE NOCASE AS INTEGER), (((+ (t1.c0)))<=(t1.c1)) ASC;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((t1.c1 IN (t1.c1)) IN (x'18' COLLATE RTRIM, CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))) ORDER BY (((t1.c0, t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c0)<(t1.c1)), ((t1.c1) ISNULL), ((t1.c1) BETWEEN (t1.c1) AND (0Xffffffffef630a53)), (+ (t1.c0)))) AND (((t1.c1 IN ()), CAST(t1.c1 AS BLOB), (NOT (t1.c0)), CAST(t1.c0 AS NUMERIC)))) DESC;
SELECT MAX(t1.c1) FROM t1 WHERE (((~ (-804046924)) IN (t1.c1 COLLATE NOCASE))) ORDER BY ((((t1.c1)IS NOT(t1.c1))) NOT NULL) DESC  NULLS FIRST, ((((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)OR(((t1.c1)|(t1.c0)))))OR(0.9538276245271311)) DESC  NULLS FIRST, ((((((((((((((t1.c0)<(t1.c0)))AND((NOT (t1.c1)))))AND(((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))))AND(((t1.c1)||(t1.c0)))))OR((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))))OR(((((((((((t1.c1)AND(t1.c1)))AND('')))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))))OR(((((t1.c0)OR(0x5cc1d3e)))OR(t1.c0)))) ASC;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((~ (-804046924)) IN (t1.c1 COLLATE NOCASE))) ORDER BY CASE (~ (t1.c1))  WHEN (((t1.c1))!=((t1.c0))) THEN t1.c1 COLLATE BINARY WHEN ((t1.c0)/(t1.c0)) THEN (((t1.c0, t1.c0, t1.c0, 0.09666087167780257)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1, t1.c0)) AND ((t1.c0, t1.c1, t1.c0, t1.c0))) WHEN LIKELIHOOD(t1.c0, t1.c1) THEN t1.c0 COLLATE BINARY ELSE (((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c1))) END DESC LIMIT 0x1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((((('-687481056')OR(((t1.c0)||(t1.c1)))))OR(LIKELY(t1.c1))))OR((NOT (t1.c1)))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((((('-687481056')OR(((t1.c0)||(t1.c1)))))OR(LIKELY(t1.c1))))OR((NOT (t1.c1)))))AND('/_HNM' COLLATE NOCASE)));
SELECT MAX(t1.c1) FROM t1 WHERE ((((((((((~ (t1.c1)))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN '1578361081' THEN t1.c1 ELSE x'02' END)))AND(TRIM(t1.c1))))AND(CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)))AND(((t1.c0)=('1549481774')))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((((((~ (t1.c1)))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN '1578361081' THEN t1.c1 ELSE x'02' END)))AND(TRIM(t1.c1))))AND(CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)))AND(((t1.c0)=('1549481774'))))) ORDER BY CAST(t1.c1 COLLATE BINARY AS INTEGER)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))OR(x'0db0d6')))AND((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((0.10627722125524042, x''))))))OR((t1.c1 IN ())))) ORDER BY t1.c1 COLLATE RTRIM  NULLS LAST, LOWER(DISTINCT ((((t1.c1)AND(t1.c1)))OR(t1.c0))) DESC, t1.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))OR(x'0db0d6')))AND((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((0.10627722125524042, x''))))))OR((t1.c1 IN ()))))AND(((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))IS NOT(IFNULL(DISTINCT t1.c1, t1.c1)))))) ORDER BY t1.c1 COLLATE RTRIM  NULLS LAST, LOWER(DISTINCT ((((t1.c1)AND(t1.c1)))OR(t1.c0))) DESC, t1.c0 COLLATE NOCASE DESC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((((~ (t1.c1)))<=((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c0)))))) ORDER BY t1.c1 COLLATE RTRIM  NULLS LAST, LOWER(DISTINCT ((((t1.c1)AND(t1.c1)))OR(t1.c0))) DESC, t1.c0 COLLATE NOCASE DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))OR(x'0db0d6')))AND((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((0.10627722125524042, x''))))))OR((t1.c1 IN ())))) ORDER BY t1.c1 COLLATE RTRIM  NULLS LAST, LOWER(DISTINCT ((((t1.c1)AND(t1.c1)))OR(t1.c0))) DESC, t1.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))OR(x'0db0d6')))AND((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((0.10627722125524042, x''))))))OR((t1.c1 IN ()))))AND(((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))IS NOT(IFNULL(DISTINCT t1.c1, t1.c1)))))) ORDER BY t1.c1 COLLATE RTRIM  NULLS LAST, LOWER(DISTINCT ((((t1.c1)AND(t1.c1)))OR(t1.c0))) DESC, t1.c0 COLLATE NOCASE DESC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((((~ (t1.c1)))<=((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c0)))))) ORDER BY t1.c1 COLLATE RTRIM  NULLS LAST, LOWER(DISTINCT ((((t1.c1)AND(t1.c1)))OR(t1.c0))) DESC, t1.c0 COLLATE NOCASE DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(((t1.c1)GLOB((+ (t1.c0))))))) LIMIT 1;
SELECT * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(((t1.c1)GLOB((+ (t1.c0))))))) LIMIT 1;
SELECT MAX(t1.c0) FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))GLOB(t1.c0))) ORDER BY TOTAL_CHANGES() ASC, ((((t1.c1)||(t1.c1))) NOT BETWEEN ('') AND (((t1.c0)%(t1.c1))))  NULLS LAST, (- ((((t1.c1)) BETWEEN ((t1.c0)) AND ((0x4c4c9c05))))) DESC;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))GLOB(t1.c0))) ORDER BY CAST((t1.c1 IN (t1.c0, t1.c0)) AS INTEGER)  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM t1 WHERE (0.3030275609127584);
SELECT COUNT(*) FROM t1 WHERE (0.3030275609127584) ORDER BY ((((((((CAST(t1.c1 AS REAL))AND(t1.c0)))AND((t1.c0 IN ()))))OR((t1.c0 IN (t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))), CAST((((t1.c0, t1.c1))>=((t1.c0, t1.c1))) AS REAL)  NULLS FIRST, (('1193292035') BETWEEN (ROUND('-1115963803', t1.c0)) AND (NULLIF(t1.c0, t1.c0))) LIMIT 0X0 INTERSECT SELECT COUNT(*) FROM t1 WHERE ((~ ((NOT (t1.c1))))) ORDER BY ((((((((CAST(t1.c1 AS REAL))AND(t1.c0)))AND((t1.c0 IN ()))))OR((t1.c0 IN (t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))), CAST((((t1.c0, t1.c1))>=((t1.c0, t1.c1))) AS REAL)  NULLS FIRST, (('1193292035') BETWEEN (ROUND('-1115963803', t1.c0)) AND (NULLIF(t1.c0, t1.c0))) LIMIT 0;
SELECT ALL COUNT(*) FROM t1 WHERE (0.9526138490286836);
SELECT ALL COUNT(*) FROM t1 WHERE (0.9526138490286836);
SELECT COUNT(*) FROM t1 WHERE ((((NOT (t1.c1)))*((NOT (t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((NOT (t1.c1)))*((NOT (t1.c0)))))AND(t1.c1))) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (('-301094617' COLLATE NOCASE IN (t1.c0 COLLATE NOCASE)));
SELECT * FROM t1 WHERE (CAST(t1.c1 COLLATE BINARY AS REAL));
SELECT * FROM t1 WHERE (CAST(t1.c1 COLLATE BINARY AS REAL)) INTERSECT SELECT * FROM t1 WHERE (((((t1.c0, t1.c0, t1.c1, t1.c0))<((t1.c1, t1.c1, t1.c0, t1.c1))) IN ()));
SELECT * FROM t1 WHERE (CAST(t1.c1 COLLATE BINARY AS REAL));
SELECT * FROM t1 WHERE (CAST(t1.c1 COLLATE BINARY AS REAL)) INTERSECT SELECT * FROM t1 WHERE (((((t1.c0, t1.c0, t1.c1, t1.c0))<((t1.c1, t1.c1, t1.c0, t1.c1))) IN ()));
SELECT * FROM t1 WHERE (((t1.c1 IN ()) IN (CAST(t1.c0 AS TEXT), (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))));
SELECT * FROM t1 WHERE (((((t1.c1 IN ()) IN (CAST(t1.c0 AS TEXT), (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))))AND(((t1.c1)IS NOT(CAST(t1.c1 AS NUMERIC)))))) ORDER BY (+ (NULLIF(DISTINCT t1.c0, t1.c1))) DESC  NULLS FIRST, (((((t1.c0)*(t1.c1))))<((((t1.c1) NOTNULL)))) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((((t1.c0) NOTNULL)) NOT BETWEEN (((t1.c0)+(t1.c1))) AND (((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(-9.44334593E8)))OR(t1.c0))))) ORDER BY (+ (NULLIF(DISTINCT t1.c0, t1.c1))) DESC  NULLS FIRST, (((((t1.c0)*(t1.c1))))<((((t1.c1) NOTNULL)))) LIMIT 0x0;
SELECT * FROM t1 WHERE (((t1.c1 IN ()) IN (CAST(t1.c0 AS TEXT), (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))));
SELECT * FROM t1 WHERE (((((t1.c1 IN ()) IN (CAST(t1.c0 AS TEXT), (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))))AND(((t1.c1)IS NOT(CAST(t1.c1 AS NUMERIC)))))) ORDER BY (+ (NULLIF(DISTINCT t1.c0, t1.c1))) DESC  NULLS FIRST, (((((t1.c0)*(t1.c1))))<((((t1.c1) NOTNULL)))) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((((t1.c0) NOTNULL)) NOT BETWEEN (((t1.c0)+(t1.c1))) AND (((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(-9.44334593E8)))OR(t1.c0))))) ORDER BY (+ (NULLIF(DISTINCT t1.c0, t1.c1))) DESC  NULLS FIRST, (((((t1.c0)*(t1.c1))))<((((t1.c1) NOTNULL)))) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (CAST(t1.c1 COLLATE BINARY AS BLOB)) ORDER BY ((((0.3347454890334003)/(NULL))) IS FALSE)  NULLS FIRST, (('-814732687')>(((0.014045888596191491)|(t1.c1)))) ASC, (((CAST(t1.c1 AS INTEGER)))<>((((t1.c0)>>(t1.c0)))))  NULLS LAST;
SELECT * FROM t1 WHERE (((CAST(t1.c1 COLLATE BINARY AS BLOB))AND((((((((~ (t1.c1)))OR(t1.c0)))AND((NOT (t1.c0)))))OR(((t1.c1) BETWEEN ('-1279266008') AND (t1.c0))))))) ORDER BY ((((0.3347454890334003)/(NULL))) IS FALSE)  NULLS FIRST, (('-814732687')>(((0.014045888596191491)|(t1.c1)))) ASC, (((CAST(t1.c1 AS INTEGER)))!=((((t1.c0)>>(t1.c0)))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(t1.c1 COLLATE BINARY AS BLOB)) ORDER BY ((((0.3347454890334003)/(NULL))) IS FALSE)  NULLS FIRST, (('-814732687')>(((0.014045888596191491)|(t1.c1)))) ASC, (((CAST(t1.c1 AS INTEGER)))<>((((t1.c0)>>(t1.c0)))))  NULLS LAST;
SELECT * FROM t1 WHERE (((CAST(t1.c1 COLLATE BINARY AS BLOB))AND((((((((~ (t1.c1)))OR(t1.c0)))AND((NOT (t1.c0)))))OR(((t1.c1) BETWEEN ('-1279266008') AND (t1.c0))))))) ORDER BY ((((0.3347454890334003)/(NULL))) IS FALSE)  NULLS FIRST, (('-814732687')>(((0.014045888596191491)|(t1.c1)))) ASC, (((CAST(t1.c1 AS INTEGER)))!=((((t1.c0)>>(t1.c0)))))  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE ((((NOT (t1.c0))) BETWEEN ((t1.c0 IN ())) AND (t1.c1))) ORDER BY ((((t1.c0)) BETWEEN ((t1.c1)) AND ((NULL))) IN (t1.c1)) DESC  NULLS LAST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((((NOT (t1.c0))) BETWEEN ((t1.c0 IN ())) AND (t1.c1)))AND(((((x'63c9')GLOB(t1.c0)))&(CAST(t1.c0 AS REAL)))))) ORDER BY CASE (~ (t1.c0))  WHEN (((('FrC')OR(0.1378758374089295)))AND(t1.c0)) THEN '~Zo!Zv_Uh' WHEN t1.c0 COLLATE BINARY THEN t1.c1 COLLATE BINARY ELSE CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END END, (('-208856384' COLLATE NOCASE) IS FALSE) DESC, CASE (t1.c1 IN ())  WHEN (((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0, t1.c1, t1.c0, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c0, t1.c1, t1.c1, t1.c0))) THEN (((t1.c0, t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c0, t1.c1))) WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 END THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE ((t1.c0)|(t1.c0)) END, x'8f' ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) IN ((~ (t1.c1)), ((t1.c0) IS TRUE), ((t1.c1)<=(t1.c1))))) ORDER BY ((CAST(t1.c1 AS TEXT)) NOTNULL), CAST(((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)) AS INTEGER) DESC, ((t1.c1) IS TRUE) COLLATE BINARY ASC;
SELECT * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) IN ((~ (t1.c1)), ((t1.c0) IS TRUE), ((t1.c1)==(t1.c1))))) ORDER BY ((CAST(t1.c1 AS TEXT)) NOTNULL), CAST(((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)) AS INTEGER) DESC, ((t1.c1) IS TRUE) COLLATE BINARY ASC INTERSECT SELECT * FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) IN (((t1.c1)<>(t1.c0))))) ORDER BY ((CAST(t1.c1 AS TEXT)) NOTNULL), CAST(((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)) AS INTEGER) DESC, ((t1.c1) IS TRUE) COLLATE BINARY ASC;
SELECT * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) IN ((~ (t1.c1)), ((t1.c0) IS TRUE), ((t1.c1)<=(t1.c1))))) ORDER BY ((CAST(t1.c1 AS TEXT)) NOTNULL), CAST(((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)) AS INTEGER) DESC, ((t1.c1) IS TRUE) COLLATE BINARY ASC;
SELECT * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) IN ((~ (t1.c1)), ((t1.c0) IS TRUE), ((t1.c1)==(t1.c1))))) ORDER BY ((CAST(t1.c1 AS TEXT)) NOTNULL), CAST(((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)) AS INTEGER) DESC, ((t1.c1) IS TRUE) COLLATE BINARY ASC INTERSECT SELECT * FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) IN (((t1.c1)<>(t1.c0))))) ORDER BY ((CAST(t1.c1 AS TEXT)) NOTNULL), CAST(((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)) AS INTEGER) DESC, ((t1.c1) IS TRUE) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (COALESCE(DISTINCT ((t1.c1)||(t1.c1)), ((t1.c0)>(t1.c0)), CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END, ((t1.c1) NOT NULL), ((t1.c0) BETWEEN (t1.c1) AND (t1.c0))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (COALESCE(DISTINCT ((t1.c1)||(t1.c1)), ((t1.c0)>(t1.c0)), CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END, ((t1.c1) NOT NULL), ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) ORDER BY ((LIKELIHOOD(DISTINCT t1.c1, t1.c1)) BETWEEN ((NOT (t1.c1))) AND (CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST, (((((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c1, t1.c0))))OR(x'')))OR(((NULL) NOT BETWEEN (t1.c1) AND (t1.c1)))), CAST(IFNULL(t1.c1, t1.c1) AS REAL)  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST(t1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY ((LIKELIHOOD(DISTINCT t1.c1, t1.c1)) BETWEEN ((NOT (t1.c1))) AND (CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST, (((((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c1, t1.c0))))OR(x'')))OR(((NULL) NOT BETWEEN (t1.c1) AND (t1.c1)))), CAST(IFNULL(t1.c1, t1.c1) AS REAL)  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t1 WHERE (((((((CAST(t1.c1 AS TEXT))AND(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))OR(((t1.c0)<(t1.c1)))))OR(((t1.c1)<>(t1.c1)))));
SELECT * FROM t1 WHERE (((((((((CAST(t1.c1 AS TEXT))AND(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))OR(((t1.c0)<(t1.c1)))))OR(((t1.c1)<>(t1.c1)))))AND(((((t1.c0 COLLATE NOCASE)AND(((NULL)<<(t1.c0)))))AND((t1.c1 IN (t1.c0))))))) ORDER BY ((t1.c1)<=(-1571886758))  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY ((t1.c1)<=(-1571886758))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((CAST(t1.c1 AS TEXT))AND(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))OR(((t1.c0)<(t1.c1)))))OR(((t1.c1)<>(t1.c1)))));
SELECT * FROM t1 WHERE (((((((((CAST(t1.c1 AS TEXT))AND(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))OR(((t1.c0)<(t1.c1)))))OR(((t1.c1)<>(t1.c1)))))AND(((((t1.c0 COLLATE NOCASE)AND(((NULL)<<(t1.c0)))))AND((t1.c1 IN (t1.c0))))))) ORDER BY ((t1.c1)<=(-1571886758))  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY ((t1.c1)<=(-1571886758))  NULLS LAST;
SELECT * FROM t1 WHERE ((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0))))>=((rtreenode(t1.c1, t1.c0))))) ORDER BY (((t1.c1)) BETWEEN (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((x'a4', t1.c0, t1.c0))))) AND ((((t1.c0) ISNULL))))  NULLS LAST, ((x'') NOT BETWEEN (CASE t1.c0  WHEN t1.c1 THEN 58217339 WHEN t1.c0 THEN t1.c0 END) AND (((((t1.c0)OR(t1.c1)))OR(t1.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0))))>=((rtreenode(t1.c1, t1.c0))))) ORDER BY ((((~ (t1.c1))))<>((NULL))) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((((((((((((((((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(t1.c1 COLLATE BINARY)))OR(((t1.c1)IS NOT(t1.c0)))))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))OR(CAST(t1.c0 AS NUMERIC))))AND((~ (t1.c0)))))OR(''))) ORDER BY ((((~ (t1.c1))))<>((NULL))) LIMIT 0x0;
SELECT * FROM t1 WHERE ((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0))))>=((rtreenode(t1.c1, t1.c0))))) ORDER BY (((t1.c1)) BETWEEN (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((x'a4', t1.c0, t1.c0))))) AND ((((t1.c0) ISNULL))))  NULLS LAST, ((x'') NOT BETWEEN (CASE t1.c0  WHEN t1.c1 THEN 58217339 WHEN t1.c0 THEN t1.c0 END) AND (((((t1.c0)OR(t1.c1)))OR(t1.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0))))>=((rtreenode(t1.c1, t1.c0))))) ORDER BY ((((~ (t1.c1))))<>((NULL))) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((((((((((((((((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(t1.c1 COLLATE BINARY)))OR(((t1.c1)IS NOT(t1.c0)))))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))OR(CAST(t1.c0 AS NUMERIC))))AND((~ (t1.c0)))))OR(''))) ORDER BY ((((~ (t1.c1))))<>((NULL))) LIMIT 0x0;
SELECT * FROM t1 WHERE (-1827888760) ORDER BY ((CAST(t1.c0 AS INTEGER)) BETWEEN ((- (t1.c0))) AND ((-1.624170603E9 IN (t1.c0)))) ASC, CAST(LIKELIHOOD(t1.c0, 0.1028806227644099) AS REAL);
SELECT ALL * FROM t1 WHERE (((0Xffffffff930ca188)AND((((~ ('-233402280'))) ISNULL)))) ORDER BY ((CAST(t1.c0 AS INTEGER)) BETWEEN ((- (t1.c0))) AND ((-1.624170603E9 IN (t1.c0)))) ASC, CAST(LIKELIHOOD(t1.c0, 0.1028806227644099) AS REAL) LIMIT 2 INTERSECT SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOTNULL)) ORDER BY ((CAST(t1.c0 AS INTEGER)) BETWEEN ((- (t1.c0))) AND ((-1.624170603E9 IN (t1.c0)))) ASC, CAST(LIKELIHOOD(t1.c0, 0.1028806227644099) AS REAL) LIMIT 0x2;
SELECT * FROM t1 WHERE (-1827888760) ORDER BY ((CAST(t1.c0 AS INTEGER)) BETWEEN ((- (t1.c0))) AND ((-1.624170603E9 IN (t1.c0)))) ASC, CAST(LIKELIHOOD(t1.c0, 0.1028806227644099) AS REAL);
SELECT ALL * FROM t1 WHERE (((0Xffffffff930ca188)AND((((~ ('-233402280'))) ISNULL)))) ORDER BY ((CAST(t1.c0 AS INTEGER)) BETWEEN ((- (t1.c0))) AND ((-1.624170603E9 IN (t1.c0)))) ASC, CAST(LIKELIHOOD(t1.c0, 0.1028806227644099) AS REAL) LIMIT 2 INTERSECT SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOTNULL)) ORDER BY ((CAST(t1.c0 AS INTEGER)) BETWEEN ((- (t1.c0))) AND ((-1.624170603E9 IN (t1.c0)))) ASC, CAST(LIKELIHOOD(t1.c0, 0.1028806227644099) AS REAL) LIMIT 0x2;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1, t1.c0, t1.c0)) BETWEEN ((t1.c1 COLLATE BINARY, ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c0)GLOB(t1.c0)), (- (t1.c1)))) AND ((CAST('1854252819' AS BLOB), ((t1.c0)-(t1.c1)), ((t1.c0)*(t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))) ORDER BY ((((t1.c0)AND(((t1.c1) IS FALSE))))OR(HEX(t1.c1))), '13784390' DESC, t1.c1 DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c1, t1.c0, t1.c0)) BETWEEN ((t1.c1 COLLATE BINARY, ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c0)GLOB(t1.c0)), (- (t1.c1)))) AND ((CAST('1854252819' AS BLOB), ((t1.c0)-(t1.c1)), ((t1.c0)*(t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1))))))AND((t1.c0 IN ())))) ORDER BY ((((t1.c0)AND(((t1.c1) IS FALSE))))OR(HEX(t1.c1))), '13784390' DESC, t1.c1 DESC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1, t1.c0, t1.c0)) BETWEEN ((t1.c1 COLLATE BINARY, ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c0)GLOB(t1.c0)), (- (t1.c1)))) AND ((CAST('1854252819' AS BLOB), ((t1.c0)-(t1.c1)), ((t1.c0)*(t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))) ORDER BY ((((t1.c0)AND(((t1.c1) IS FALSE))))OR(HEX(t1.c1))), '13784390' DESC, t1.c1 DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c1, t1.c0, t1.c0)) BETWEEN ((t1.c1 COLLATE BINARY, ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c0)GLOB(t1.c0)), (- (t1.c1)))) AND ((CAST('1854252819' AS BLOB), ((t1.c0)-(t1.c1)), ((t1.c0)*(t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1))))))AND((t1.c0 IN ())))) ORDER BY ((((t1.c0)AND(((t1.c1) IS FALSE))))OR(HEX(t1.c1))), '13784390' DESC, t1.c1 DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CAST(CAST(t1.c1 AS BLOB) AS INTEGER));
SELECT * FROM t1 WHERE (CAST(CAST(t1.c1 AS BLOB) AS INTEGER)) ORDER BY ((t1.c1)IS NOT((t1.c0 IN ()))) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (CAST(CAST(t1.c1 AS BLOB) AS INTEGER));
SELECT * FROM t1 WHERE (CAST(CAST(t1.c1 AS BLOB) AS INTEGER)) ORDER BY ((t1.c1)IS NOT((t1.c0 IN ()))) DESC  NULLS LAST LIMIT 0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((((((UPPER(t1.c0))OR(CAST(t1.c0 AS INTEGER))))AND(((('-499050382'))<>((NULL))))))AND('qU<')))AND((t1.c1 IN (t1.c0)))))OR(((t1.c0) IS FALSE))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((((((((((UPPER(t1.c0))OR(CAST(t1.c0 AS INTEGER))))AND(((('-499050382'))<>((NULL))))))AND('qU<')))AND((t1.c1 IN (t1.c0)))))OR(((t1.c0) IS FALSE))))AND(((((t1.c1)IS(t1.c0))) NOT BETWEEN (t1.c1) AND (((t1.c0)&(t1.c0))))))) ORDER BY CASE WHEN TRIM(',])P3') THEN (t1.c0 IN ()) END DESC  NULLS FIRST, t1.c1 ASC, CAST(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) AS REAL)  NULLS FIRST;
SELECT * FROM t1 WHERE (TRIM(('-278721965' IN ())));
SELECT DISTINCT * FROM t1 WHERE (TRIM(('-278721965' IN ()))) LIMIT 0x3;
SELECT * FROM t1 WHERE (TRIM(('-278721965' IN ())));
SELECT DISTINCT * FROM t1 WHERE (TRIM(('-278721965' IN ()))) LIMIT 0x3;
SELECT ALL COUNT(*) FROM t1 WHERE (SQLITE_VERSION()) ORDER BY ((((((((json_array(t1.c1, t1.c1, t1.c1, t1.c1))AND(((t1.c0) NOT NULL))))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))OR((+ (t1.c0)))))OR(((t1.c1)GLOB(t1.c1)))) DESC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((SQLITE_VERSION())AND(t1.c1))) ORDER BY CASE WHEN x'62' THEN ((t1.c1)IS NOT(t1.c0)) WHEN ((t1.c1) IS FALSE) THEN ((t1.c0)<=(t1.c0)) WHEN t1.c0 THEN ((((t1.c0)AND(t1.c0)))OR(NULL)) WHEN json_insert(t1.c0, t1.c1, t1.c1, t1.c1) THEN t1.c0 COLLATE BINARY WHEN ((t1.c1) ISNULL) THEN t1.c0 ELSE t1.c0 COLLATE RTRIM END  NULLS FIRST, (((((t1.c0 IN (t1.c1)))AND((((t1.c0))<>((t1.c1))))))AND((t1.c1 IN ())))  NULLS LAST;
SELECT * FROM t1 WHERE ((~ ((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))))));
SELECT DISTINCT * FROM t1 WHERE ((((~ ((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))))))AND((((t1.c0, t1.c1)) BETWEEN ((((NULL) ISNULL), ((t1.c0)<(t1.c1)))) AND ((CAST(t1.c0 AS REAL), CASE t1.c0  WHEN t1.c0 THEN t1.c1 END)))))) ORDER BY ((t1.c0)>=(UNICODE(t1.c0))) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((t1.c0 IN (t1.c0, t1.c1)) COLLATE RTRIM) ORDER BY ((t1.c0)>=(UNICODE(t1.c0))) DESC LIMIT 2;
SELECT * FROM t1 WHERE ((~ ((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))))));
SELECT DISTINCT * FROM t1 WHERE ((((~ ((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))))))AND((((t1.c0, t1.c1)) BETWEEN ((((NULL) ISNULL), ((t1.c0)<(t1.c1)))) AND ((CAST(t1.c0 AS REAL), CASE t1.c0  WHEN t1.c0 THEN t1.c1 END)))))) ORDER BY ((t1.c0)>=(UNICODE(t1.c0))) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((t1.c0 IN (t1.c0, t1.c1)) COLLATE RTRIM) ORDER BY ((t1.c0)>=(UNICODE(t1.c0))) DESC LIMIT 2;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY (+ (t1.c1 COLLATE NOCASE))  NULLS LAST, (- ((((t1.c0, t1.c1))==((t1.c0, t1.c1)))))  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (+ (t1.c1 COLLATE NOCASE))  NULLS LAST, (- ((((t1.c0, t1.c1))==((t1.c0, t1.c1)))))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))=((t1.c1 IN (t1.c1))))) ORDER BY (+ (t1.c1 COLLATE NOCASE))  NULLS LAST, (- ((((t1.c0, t1.c1))=((t1.c0, t1.c1)))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY (+ (t1.c1 COLLATE NOCASE))  NULLS LAST, (- ((((t1.c0, t1.c1))==((t1.c0, t1.c1)))))  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (+ (t1.c1 COLLATE NOCASE))  NULLS LAST, (- ((((t1.c0, t1.c1))==((t1.c0, t1.c1)))))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))=((t1.c1 IN (t1.c1))))) ORDER BY (+ (t1.c1 COLLATE NOCASE))  NULLS LAST, (- ((((t1.c0, t1.c1))=((t1.c0, t1.c1)))))  NULLS FIRST;
SELECT * FROM t1 WHERE (x'');
SELECT DISTINCT * FROM t1 WHERE (x'') ORDER BY (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE, ((t1.c1)>=(t1.c1)))) AND ((((t1.c1)IS(t1.c0)), (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c0, t1.c0, t1.c1))))))  NULLS FIRST, CAST(((t1.c0)|(t1.c1)) AS TEXT) DESC, (((((t1.c1)AND(t1.c0)))OR(t1.c0)) IN (t1.c0)), CASE WHEN t1.c0 COLLATE NOCASE THEN 1.08318599E9 END DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE, ((t1.c1)>=(t1.c1)))) AND ((((t1.c1)IS(t1.c0)), (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c0, t1.c0, t1.c1))))))  NULLS FIRST, CAST(((t1.c0)|(t1.c1)) AS TEXT) DESC, (((((t1.c1)AND(t1.c0)))OR(t1.c0)) IN (t1.c0)), CASE WHEN t1.c0 COLLATE NOCASE THEN 1.08318599E9 END DESC  NULLS LAST;
SELECT * FROM t1 WHERE (x'');
SELECT DISTINCT * FROM t1 WHERE (x'') ORDER BY (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE, ((t1.c1)>=(t1.c1)))) AND ((((t1.c1)IS(t1.c0)), (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c0, t1.c0, t1.c1))))))  NULLS FIRST, CAST(((t1.c0)|(t1.c1)) AS TEXT) DESC, (((((t1.c1)AND(t1.c0)))OR(t1.c0)) IN (t1.c0)), CASE WHEN t1.c0 COLLATE NOCASE THEN 1.08318599E9 END DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE, ((t1.c1)>=(t1.c1)))) AND ((((t1.c1)IS(t1.c0)), (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c0, t1.c0, t1.c1))))))  NULLS FIRST, CAST(((t1.c0)|(t1.c1)) AS TEXT) DESC, (((((t1.c1)AND(t1.c0)))OR(t1.c0)) IN (t1.c0)), CASE WHEN t1.c0 COLLATE NOCASE THEN 1.08318599E9 END DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(((t1.c1) NOTNULL))))OR((+ (t1.c1))))) ORDER BY (((t1.c0, t1.c1)) NOT BETWEEN ((CASE WHEN t1.c1 THEN t1.c1 END, (((t1.c0, t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, t1.c0, '1369758654'))))) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), ((t1.c1)OR(t1.c1)))));
SELECT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(((t1.c1) NOTNULL))))OR((+ (t1.c1))))) ORDER BY (((t1.c0, t1.c1)) NOT BETWEEN ((CASE WHEN t1.c1 THEN t1.c1 END, (((t1.c0, t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, t1.c0, '1369758654'))))) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), ((t1.c1)OR(t1.c1))))) INTERSECT SELECT ALL * FROM t1 WHERE (TRIM(DISTINCT t1.c1, t1.c0) COLLATE BINARY) ORDER BY (((t1.c0, t1.c1)) NOT BETWEEN ((CASE WHEN t1.c1 THEN t1.c1 END, (((t1.c0, t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, t1.c0, '1369758654'))))) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), ((t1.c1)OR(t1.c1)))));
SELECT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(((t1.c1) NOTNULL))))OR((+ (t1.c1))))) ORDER BY (((t1.c0, t1.c1)) NOT BETWEEN ((CASE WHEN t1.c1 THEN t1.c1 END, (((t1.c0, t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, t1.c0, '1369758654'))))) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), ((t1.c1)OR(t1.c1)))));
SELECT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(((t1.c1) NOTNULL))))OR((+ (t1.c1))))) ORDER BY (((t1.c0, t1.c1)) NOT BETWEEN ((CASE WHEN t1.c1 THEN t1.c1 END, (((t1.c0, t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, t1.c0, '1369758654'))))) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), ((t1.c1)OR(t1.c1))))) INTERSECT SELECT ALL * FROM t1 WHERE (TRIM(DISTINCT t1.c1, t1.c0) COLLATE BINARY) ORDER BY (((t1.c0, t1.c1)) NOT BETWEEN ((CASE WHEN t1.c1 THEN t1.c1 END, (((t1.c0, t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, t1.c0, '1369758654'))))) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), ((t1.c1)OR(t1.c1)))));
SELECT ALL * FROM t1 WHERE (((((t1.c0) IS FALSE))IS NOT((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))))));
SELECT * FROM t1 WHERE (((((t1.c0) IS FALSE))IS NOT((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))))) LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE ((((+ (t1.c0)))-((t1.c0 IN (t1.c0))))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((((t1.c0) IS FALSE))IS NOT((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))))));
SELECT * FROM t1 WHERE (((((t1.c0) IS FALSE))IS NOT((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))))) LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE ((((+ (t1.c0)))-((t1.c0 IN (t1.c0))))) LIMIT 0X1;
SELECT MIN(t1.c0) FROM t1 WHERE ((((t1.c0)||(t1.c0)) IN (((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND('d4')))OR(t1.c1))))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) IS FALSE) ASC;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((t1.c0)||(t1.c0)) IN (((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND('d4')))OR(t1.c1)))))AND(((t1.c0) ISNULL) COLLATE RTRIM))) ORDER BY t1.c1  NULLS FIRST, ((NULLIF(DISTINCT t1.c0, t1.c1)) BETWEEN ((((t1.c0, NULL)) NOT BETWEEN ((t1.c1, ')7')) AND ((x'7753', t1.c1)))) AND (json_object(t1.c0, t1.c1, t1.c1, t1.c1)))  NULLS FIRST, (- ((t1.c1 IN (t1.c1))));
SELECT ALL * FROM t1 WHERE (INSTR(CAST(t1.c0 AS TEXT), -1.0710109E7)) ORDER BY CASE WHEN NULL THEN t1.c0 COLLATE RTRIM END  NULLS LAST;
SELECT * FROM t1 WHERE (((INSTR(CAST(t1.c0 AS TEXT), -1.0710109E7))AND(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END COLLATE NOCASE))) ORDER BY CASE (t1.c0 IN ())  WHEN ((t1.c0) IS FALSE) THEN (t1.c1 IN (t1.c1, t1.c0)) ELSE ((t1.c0) NOT NULL) END  NULLS FIRST, ((t1.c1 COLLATE RTRIM)<=(x'61b4c7'));
SELECT ALL * FROM t1 WHERE (INSTR(CAST(t1.c0 AS TEXT), -1.0710109E7)) ORDER BY CASE WHEN NULL THEN t1.c0 COLLATE RTRIM END  NULLS LAST;
SELECT * FROM t1 WHERE (((INSTR(CAST(t1.c0 AS TEXT), -1.0710109E7))AND(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END COLLATE NOCASE))) ORDER BY CASE (t1.c0 IN ())  WHEN ((t1.c0) IS FALSE) THEN (t1.c1 IN (t1.c1, t1.c0)) ELSE ((t1.c0) NOT NULL) END  NULLS FIRST, ((t1.c1 COLLATE RTRIM)<=(x'61b4c7'));
SELECT MAX(t1.c1) FROM t1 WHERE (CAST(0.11778113551843605 AS NUMERIC) COLLATE NOCASE);
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CAST(0.11778113551843605 AS NUMERIC) COLLATE NOCASE) ORDER BY CASE 0.12202605720203674  WHEN (- (t1.c1)) THEN t1.c1 WHEN ((((((((t1.c0)OR(0X574d53a9)))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)) THEN ((t1.c0) IS TRUE) WHEN ((t1.c0) IS TRUE) THEN t1.c0 ELSE CAST(t1.c0 AS INTEGER) END ASC, (+ (((t1.c0)IS(t1.c0)))), 0.5724532328806513 LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((x'') IS TRUE)) ORDER BY ((((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))))AND((((t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c1, t1.c1, t1.c1))))))OR(TRIM(t1.c0, 0.14816897352279812)))  NULLS LAST, ((((t1.c1)<>(t1.c0))) BETWEEN (((t1.c1)*(t1.c0))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST, ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1))) NOT NULL)  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((x'') IS TRUE))AND(NULL))) ORDER BY (+ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST, (((x'') NOT BETWEEN (t1.c0) AND ('-0.0')) IN (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY (+ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST, (((x'') NOT BETWEEN (t1.c0) AND ('-0.0')) IN (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1))));
SELECT ALL * FROM t1 WHERE (((x'') IS TRUE)) ORDER BY ((((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))))AND((((t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c1, t1.c1, t1.c1))))))OR(TRIM(t1.c0, 0.14816897352279812)))  NULLS LAST, ((((t1.c1)<>(t1.c0))) BETWEEN (((t1.c1)*(t1.c0))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST, ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1))) NOT NULL)  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((x'') IS TRUE))AND(NULL))) ORDER BY (+ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST, (((x'') NOT BETWEEN (t1.c0) AND ('-0.0')) IN (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY (+ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST, (((x'') NOT BETWEEN (t1.c0) AND ('-0.0')) IN (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1))));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((t1.c0 IN ()) AS INTEGER)) ORDER BY (((((0.6341842213989514) NOT BETWEEN (t1.c0) AND (t1.c0))))<=(((t1.c1 IN (t1.c0, t1.c1))))) DESC  NULLS LAST, (((t1.c0 COLLATE NOCASE, ((t1.c1)<=(t1.c1))))>((((t1.c1)>>(t1.c1)), CAST(t1.c0 AS NUMERIC))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST((t1.c0 IN ()) AS INTEGER)) ORDER BY (((((0.6341842213989514) NOT BETWEEN (t1.c0) AND (t1.c0))))<=(((t1.c1 IN (t1.c0, t1.c1))))) DESC  NULLS LAST, (((t1.c0 COLLATE NOCASE, ((t1.c1)<=(t1.c1))))>((((t1.c1)>>(t1.c1)), CAST(t1.c0 AS NUMERIC)))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CASE ((t1.c1)<(t1.c0))  WHEN ((t1.c0)<(t1.c0)) THEN (t1.c0 IN (t1.c1, t1.c0)) END) ORDER BY (((((0.6341842213989514) NOT BETWEEN (t1.c0) AND (t1.c0))))<=(((t1.c1 IN (t1.c0, t1.c1))))) DESC  NULLS LAST, (((t1.c0 COLLATE NOCASE, ((t1.c1)<=(t1.c1))))>((((t1.c1)>>(t1.c1)), CAST(t1.c0 AS NUMERIC)))) LIMIT 0;
SELECT ALL COUNT(*) FROM t1 WHERE ((((+ (t1.c1)))%((((t1.c1, t1.c1, t1.c0, t1.c0))>((t1.c0, t1.c0, t1.c1, NULL))))));
SELECT COUNT(*) FROM t1 WHERE ((((+ (t1.c1)))%((((t1.c1, t1.c1, t1.c0, t1.c0))>((t1.c0, t1.c0, t1.c1, NULL)))))) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))  WHEN (((t1.c1, t1.c0)) BETWEEN ((NULL, t1.c1)) AND ((t1.c0, t1.c1))) THEN CASE WHEN t1.c1 THEN '-1028690489' WHEN t1.c0 THEN t1.c1 WHEN -521905785 THEN t1.c0 END ELSE (((t1.c0, t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0, t1.c0, t1.c1)) AND (('[ ', t1.c1, t1.c0, t1.c1))) END);
SELECT ALL * FROM t1 WHERE (CASE WHEN 0X68f6f62d THEN t1.c1 END COLLATE BINARY COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN 0X68f6f62d THEN t1.c1 END COLLATE BINARY COLLATE BINARY) LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (CASE WHEN 0X68f6f62d THEN t1.c1 END COLLATE BINARY COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN 0X68f6f62d THEN t1.c1 END COLLATE BINARY COLLATE BINARY) LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0)<<(t1.c0))  WHEN ((((t1.c1)OR(t1.c0)))OR(t1.c1)) THEN t1.c1 ELSE CAST(t1.c1 AS REAL) END);
SELECT DISTINCT * FROM t1 WHERE (CASE ((t1.c0)<<(t1.c0))  WHEN ((((t1.c1)OR(t1.c0)))OR(t1.c1)) THEN t1.c1 ELSE CAST(t1.c1 AS REAL) END) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN '1761015341' THEN t1.c1 END END DESC  NULLS LAST, (((+ (t1.c1))) BETWEEN (CAST(t1.c0 AS INTEGER)) AND ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))) ASC  NULLS LAST, (~ (CAST(t1.c1 AS TEXT))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- (t1.c1 COLLATE RTRIM))) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN '1761015341' THEN t1.c1 END END DESC  NULLS LAST, (((+ (t1.c1))) BETWEEN (CAST(t1.c0 AS INTEGER)) AND ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))) ASC  NULLS LAST, (~ (CAST(t1.c1 AS TEXT)));
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0)<<(t1.c0))  WHEN ((((t1.c1)OR(t1.c0)))OR(t1.c1)) THEN t1.c1 ELSE CAST(t1.c1 AS REAL) END);
SELECT DISTINCT * FROM t1 WHERE (CASE ((t1.c0)<<(t1.c0))  WHEN ((((t1.c1)OR(t1.c0)))OR(t1.c1)) THEN t1.c1 ELSE CAST(t1.c1 AS REAL) END) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN '1761015341' THEN t1.c1 END END DESC  NULLS LAST, (((+ (t1.c1))) BETWEEN (CAST(t1.c0 AS INTEGER)) AND ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))) ASC  NULLS LAST, (~ (CAST(t1.c1 AS TEXT))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- (t1.c1 COLLATE RTRIM))) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN '1761015341' THEN t1.c1 END END DESC  NULLS LAST, (((+ (t1.c1))) BETWEEN (CAST(t1.c0 AS INTEGER)) AND ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))) ASC  NULLS LAST, (~ (CAST(t1.c1 AS TEXT)));
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN t1.c1 THEN ((t1.c0)<>(t1.c1)) WHEN ((t1.c0) NOTNULL) THEN json_type(t1.c1) END) ORDER BY t1.c1 DESC;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN t1.c1 THEN ((t1.c0)>(t1.c1)) WHEN ((t1.c0) NOTNULL) THEN json_type(t1.c1) END) ORDER BY t1.c1 DESC INTERSECT SELECT COUNT(*) FROM t1 WHERE ((((- (t1.c1)))+((((t1.c0, x''))<=((t1.c1, t1.c1)))))) ORDER BY t1.c1 DESC;
SELECT * FROM t1 WHERE ('-1028690489') ORDER BY (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)) IN (((((((NULL)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)), CASE WHEN t1.c0 THEN t1.c1 END));
SELECT ALL * FROM t1 WHERE ((('-1028690489')AND(((((((((NULLIF(t1.c1, t1.c1))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN '-932626568' THEN t1.c1 END)))AND(((t1.c1) NOTNULL))))AND(((t1.c0)GLOB(t1.c1)))))AND(((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1))))))) ORDER BY (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)) IN (((((((NULL)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)), CASE WHEN t1.c0 THEN t1.c1 END)) LIMIT 0;
SELECT * FROM t1 WHERE ('-1028690489') ORDER BY (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)) IN (((((((NULL)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)), CASE WHEN t1.c0 THEN t1.c1 END));
SELECT ALL * FROM t1 WHERE ((('-1028690489')AND(((((((((NULLIF(t1.c1, t1.c1))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN '-932626568' THEN t1.c1 END)))AND(((t1.c1) NOTNULL))))AND(((t1.c0)GLOB(t1.c1)))))AND(((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1))))))) ORDER BY (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)) IN (((((((NULL)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)), CASE WHEN t1.c0 THEN t1.c1 END)) LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c1 AS REAL)) NOT NULL)) ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c1)IS(t1.c1)) END ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CAST(t1.c1 AS REAL)) NOT NULL)) ORDER BY ((((t1.c1) ISNULL)) IS FALSE) DESC  NULLS FIRST, x'78' COLLATE BINARY INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c1) ISNULL) COLLATE RTRIM) ORDER BY ((((t1.c1) ISNULL)) IS FALSE) DESC  NULLS FIRST, x'78' COLLATE BINARY;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c0, t1.c1))) NOT BETWEEN (t1.c1) AND ('1681973564'))) ORDER BY load_extension(NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((t1.c0 IN (t1.c0, t1.c1))) NOT BETWEEN (t1.c1) AND ('1681973564')))AND(((t1.c0)>=(t1.c0)) COLLATE RTRIM))) ORDER BY load_extension(NULL) COLLATE NOCASE ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY load_extension(NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c0, t1.c1))) NOT BETWEEN (t1.c1) AND ('1681973564'))) ORDER BY load_extension(NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((t1.c0 IN (t1.c0, t1.c1))) NOT BETWEEN (t1.c1) AND ('1681973564')))AND(((t1.c0)>=(t1.c0)) COLLATE RTRIM))) ORDER BY load_extension(NULL) COLLATE NOCASE ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY load_extension(NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c0)GLOB(t1.c1)) THEN CAST(t1.c0 AS TEXT) WHEN ((t1.c1)IS(0xffffffffee26ac5a)) THEN ((t1.c0)-(t1.c1)) ELSE t1.c1 COLLATE RTRIM END) ORDER BY ((((t1.c1) NOT NULL))%((((t1.c0, t1.c0))==((t1.c1, t1.c1))))) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE WHEN ((t1.c0)GLOB(t1.c1)) THEN CAST(t1.c0 AS TEXT) WHEN ((t1.c1)IS(0xffffffffee26ac5a)) THEN ((t1.c0)-(t1.c1)) ELSE t1.c1 COLLATE RTRIM END)AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) COLLATE BINARY COLLATE NOCASE))) ORDER BY ((((t1.c1) NOT NULL))%((((t1.c0, t1.c0))==((t1.c1, t1.c1))))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (HEX(t1.c1)) ORDER BY ((((t1.c1) NOT NULL))%((((t1.c0, t1.c0))==((t1.c1, t1.c1))))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c1, t1.c0, t1.c1)))%(((t1.c0)>=(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 IN (t1.c1, t1.c0, t1.c1)))%(((t1.c0)>(t1.c1)))))AND(((((t1.c0) IS TRUE))&((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))))))) ORDER BY ('>' IN ()), (((t1.c0, t1.c0)) BETWEEN ((t1.c1 COLLATE RTRIM, -1.0710109E7)) AND ((t1.c0 COLLATE RTRIM, ((t1.c0)==(t1.c0))))) ASC, ((((UNLIKELY(t1.c0))OR(((t1.c0)<(t1.c0)))))OR(CASE '-415052413'  WHEN t1.c0 THEN t1.c1 ELSE x'' END)) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- ((((t1.c1))<=((t1.c1)))))) ORDER BY ('>' IN ()), (((t1.c0, t1.c0)) BETWEEN ((t1.c1 COLLATE RTRIM, -1.0710109E7)) AND ((t1.c0 COLLATE RTRIM, ((t1.c0)==(t1.c0))))) ASC, ((((UNLIKELY(t1.c0))OR(((t1.c0)<(t1.c0)))))OR(CASE '-415052413'  WHEN t1.c0 THEN t1.c1 ELSE x'' END)) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c1, t1.c0, t1.c1)))%(((t1.c0)>=(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 IN (t1.c1, t1.c0, t1.c1)))%(((t1.c0)>(t1.c1)))))AND(((((t1.c0) IS TRUE))&((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))))))) ORDER BY ('>' IN ()), (((t1.c0, t1.c0)) BETWEEN ((t1.c1 COLLATE RTRIM, -1.0710109E7)) AND ((t1.c0 COLLATE RTRIM, ((t1.c0)==(t1.c0))))) ASC, ((((UNLIKELY(t1.c0))OR(((t1.c0)<(t1.c0)))))OR(CASE '-415052413'  WHEN t1.c0 THEN t1.c1 ELSE x'' END)) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- ((((t1.c1))<=((t1.c1)))))) ORDER BY ('>' IN ()), (((t1.c0, t1.c0)) BETWEEN ((t1.c1 COLLATE RTRIM, -1.0710109E7)) AND ((t1.c0 COLLATE RTRIM, ((t1.c0)==(t1.c0))))) ASC, ((((UNLIKELY(t1.c0))OR(((t1.c0)<(t1.c0)))))OR(CASE '-415052413'  WHEN t1.c0 THEN t1.c1 ELSE x'' END)) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS NUMERIC))AND(((t1.c1) NOT NULL))))AND(t1.c1)));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c1 AS NUMERIC))AND(((t1.c1) NOT NULL))))AND(t1.c1))) ORDER BY (((((((t1.c0 IN ()))OR(((t1.c0) NOT NULL))))AND(t1.c0 COLLATE NOCASE)))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c1 END)) ASC  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS NUMERIC))AND(((t1.c1) NOT NULL))))AND(t1.c1)));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c1 AS NUMERIC))AND(((t1.c1) NOT NULL))))AND(t1.c1))) ORDER BY (((((((t1.c0 IN ()))OR(((t1.c0) NOT NULL))))AND(t1.c0 COLLATE NOCASE)))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c1 END)) ASC  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (0xffffffff968d6300);
SELECT ALL COUNT(*) FROM t1 WHERE (((0Xffffffff968d6300)AND(CAST(((t1.c1)GLOB(x'')) AS NUMERIC)))) ORDER BY (+ (((t1.c1) NOTNULL))) ASC, ((0.6496472220243226) IS TRUE) DESC  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN (((t1.c1))<>((t1.c1))) END);
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN (((t1.c1))<((t1.c1))) END) ORDER BY (((((((((('0.7960258449854591')>=(t1.c0)))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))AND(((t1.c0)GLOB(t1.c1)))))AND(CASE t1.c0  WHEN t1.c0 THEN 0.4010224289799854 WHEN t1.c1 THEN '۹k툃I(g9Y7' ELSE t1.c0 END)))OR(t1.c1 COLLATE BINARY)), (((((t1.c0) NOTNULL)))<>((t1.c1 COLLATE BINARY))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(NULL AS NUMERIC)) ISNULL)) ORDER BY (((((((((('0.7960258449854591')>=(t1.c0)))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))AND(((t1.c0)GLOB(t1.c1)))))AND(CASE t1.c0  WHEN t1.c0 THEN 0.4010224289799854 WHEN t1.c1 THEN '۹k툃I(g9Y7' ELSE t1.c0 END)))OR(t1.c1 COLLATE BINARY)), (((((t1.c0) NOTNULL)))<>((t1.c1 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN (((t1.c1))<>((t1.c1))) END);
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN (((t1.c1))<((t1.c1))) END) ORDER BY (((((((((('0.7960258449854591')>=(t1.c0)))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))AND(((t1.c0)GLOB(t1.c1)))))AND(CASE t1.c0  WHEN t1.c0 THEN 0.4010224289799854 WHEN t1.c1 THEN '۹k툃I(g9Y7' ELSE t1.c0 END)))OR(t1.c1 COLLATE BINARY)), (((((t1.c0) NOTNULL)))<>((t1.c1 COLLATE BINARY))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(NULL AS NUMERIC)) ISNULL)) ORDER BY (((((((((('0.7960258449854591')>=(t1.c0)))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))AND(((t1.c0)GLOB(t1.c1)))))AND(CASE t1.c0  WHEN t1.c0 THEN 0.4010224289799854 WHEN t1.c1 THEN '۹k툃I(g9Y7' ELSE t1.c0 END)))OR(t1.c1 COLLATE BINARY)), (((((t1.c0) NOTNULL)))<>((t1.c1 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c1))<>(('0|a1xe0'))) COLLATE NOCASE) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (NULL) AND (CAST(t1.c0 AS REAL))), TRIM(t1.c0, t1.c0)  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c1))>(('0|a1xe0'))) COLLATE NOCASE) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (NULL) AND (CAST(t1.c0 AS REAL))), TRIM(t1.c0, t1.c0)  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) AS INTEGER)) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (NULL) AND (CAST(t1.c0 AS REAL))), TRIM(t1.c0, t1.c0)  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((((t1.c1))<>(('0|a1xe0'))) COLLATE NOCASE) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (NULL) AND (CAST(t1.c0 AS REAL))), TRIM(t1.c0, t1.c0)  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c1))>(('0|a1xe0'))) COLLATE NOCASE) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (NULL) AND (CAST(t1.c0 AS REAL))), TRIM(t1.c0, t1.c0)  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) AS INTEGER)) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (NULL) AND (CAST(t1.c0 AS REAL))), TRIM(t1.c0, t1.c0)  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 WHERE ((NOT (CAST(t1.c1 AS BLOB)))) ORDER BY ((json_patch(t1.c1, t1.c1))>=(LOWER(t1.c1))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((NOT (CAST(t1.c1 AS BLOB)))) ORDER BY ((json_patch(t1.c1, t1.c1))>=(LOWER(t1.c1))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((NOT (CAST(t1.c1 AS BLOB)))) ORDER BY ((json_patch(t1.c1, t1.c1))>=(LOWER(t1.c1))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((NOT (CAST(t1.c1 AS BLOB)))) ORDER BY ((json_patch(t1.c1, t1.c1))>=(LOWER(t1.c1))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((- (x'14d3'))) ORDER BY ((((((((t1.c0) NOTNULL))AND((t1.c1 IN ()))))OR(((t1.c1) NOTNULL))))AND(((((t1.c1)OR(t1.c0)))OR(0.37006254214617174)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((- (x'14d3'))) ORDER BY ((((((((t1.c0) NOTNULL))AND((t1.c1 IN ()))))OR(((t1.c1) NOTNULL))))AND(((((t1.c1)OR(t1.c0)))OR(0.37006254214617174)))) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (0.022715828518713232 COLLATE RTRIM) ORDER BY ((((((((t1.c0) NOTNULL))AND((t1.c1 IN ()))))OR(((t1.c1) NOTNULL))))AND(((((t1.c1)OR(t1.c0)))OR(0.37006254214617174)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((- (x'14d3'))) ORDER BY ((((((((t1.c0) NOTNULL))AND((t1.c1 IN ()))))OR(((t1.c1) NOTNULL))))AND(((((t1.c1)OR(t1.c0)))OR(0.37006254214617174)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((- (x'14d3'))) ORDER BY ((((((((t1.c0) NOTNULL))AND((t1.c1 IN ()))))OR(((t1.c1) NOTNULL))))AND(((((t1.c1)OR(t1.c0)))OR(0.37006254214617174)))) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (0.022715828518713232 COLLATE RTRIM) ORDER BY ((((((((t1.c0) NOTNULL))AND((t1.c1 IN ()))))OR(((t1.c1) NOTNULL))))AND(((((t1.c1)OR(t1.c0)))OR(0.37006254214617174)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))>((((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, '-2130733186'))))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))>((((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, '-2130733186'))))))AND(CAST(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) AS TEXT)))) ORDER BY ((x'60') BETWEEN ('#D 9') AND (CAST(t1.c1 AS NUMERIC))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((0X75eeaba2) IS TRUE)) ORDER BY ((x'60') BETWEEN ('#D 9') AND (CAST(t1.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))>((((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, '-2130733186'))))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))>((((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, '-2130733186'))))))AND(CAST(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) AS TEXT)))) ORDER BY ((x'60') BETWEEN ('#D 9') AND (CAST(t1.c1 AS NUMERIC))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((0X75eeaba2) IS TRUE)) ORDER BY ((x'60') BETWEEN ('#D 9') AND (CAST(t1.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (CASE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c0)>>(t1.c0)) THEN load_extension(t1.c1) WHEN ((t1.c0)GLOB(t1.c0)) THEN t1.c0 WHEN ((t1.c1)<(t1.c1)) THEN CAST(t1.c0 AS INTEGER) ELSE ((t1.c1) IS TRUE) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c0)>>(t1.c0)) THEN load_extension(t1.c1) WHEN ((t1.c0)GLOB(t1.c0)) THEN t1.c0 WHEN ((t1.c1)<(t1.c1)) THEN CAST(t1.c0 AS INTEGER) ELSE ((t1.c1) IS TRUE) END)AND((((((t1.c1)) BETWEEN ((t1.c1)) AND ((x'')))) BETWEEN ((('-31796586')*(t1.c1))) AND ((t1.c1 IN ())))))) ORDER BY -1545068423, ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)/(CAST(t1.c0 AS TEXT)))  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c0)>>(t1.c0)) THEN load_extension(t1.c1) WHEN ((t1.c0)GLOB(t1.c0)) THEN t1.c0 WHEN ((t1.c1)<(t1.c1)) THEN CAST(t1.c0 AS INTEGER) ELSE ((t1.c1) IS TRUE) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c0)>>(t1.c0)) THEN load_extension(t1.c1) WHEN ((t1.c0)GLOB(t1.c0)) THEN t1.c0 WHEN ((t1.c1)<(t1.c1)) THEN CAST(t1.c0 AS INTEGER) ELSE ((t1.c1) IS TRUE) END)AND((((((t1.c1)) BETWEEN ((t1.c1)) AND ((x'')))) BETWEEN ((('-31796586')*(t1.c1))) AND ((t1.c1 IN ())))))) ORDER BY -1545068423, ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)/(CAST(t1.c0 AS TEXT)))  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((((t1.c1)AND(t1.c0)))OR(NULL)))OR((t1.c1 IN (t1.c1, t1.c1)))))AND((t1.c0 IN (t1.c1, t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c1)AND(t1.c0)))OR(NULL)))OR((t1.c1 IN (t1.c1, t1.c1)))))AND((t1.c0 IN (t1.c1, t1.c0)))))AND(((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (t1.c1) AND (LOWER(DISTINCT t1.c0)))))) ORDER BY (((t1.c0)) NOT BETWEEN ((0.03402692388133166)) AND (((t1.c1 IN (t1.c0, x''))))) DESC LIMIT 0x0;
SELECT * FROM t1 WHERE (((((((((t1.c1)AND(t1.c0)))OR(NULL)))OR((t1.c1 IN (t1.c1, t1.c1)))))AND((t1.c0 IN (t1.c1, t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c1)AND(t1.c0)))OR(NULL)))OR((t1.c1 IN (t1.c1, t1.c1)))))AND((t1.c0 IN (t1.c1, t1.c0)))))AND(((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (t1.c1) AND (LOWER(DISTINCT t1.c0)))))) ORDER BY (((t1.c0)) NOT BETWEEN ((0.03402692388133166)) AND (((t1.c1 IN (t1.c0, x''))))) DESC LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)) COLLATE BINARY) ORDER BY COALESCE(SQLITE_VERSION(), (t1.c0 IN ()), ((((((((t1.c1)AND(t1.c0)))AND(x'')))AND(t1.c0)))AND(t1.c1)), t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) ASC, t1.c1 COLLATE BINARY;
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)) COLLATE BINARY) ORDER BY COALESCE(SQLITE_VERSION(), (t1.c0 IN ()), ((((((((t1.c1)AND(t1.c0)))AND(x'')))AND(t1.c0)))AND(t1.c1)), t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) ASC, t1.c1 COLLATE BINARY INTERSECT SELECT DISTINCT * FROM t1 WHERE ((+ ((~ (t1.c0))))) ORDER BY COALESCE(SQLITE_VERSION(), (t1.c0 IN ()), ((((((((t1.c1)AND(t1.c0)))AND(x'')))AND(t1.c0)))AND(t1.c1)), t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) ASC, t1.c1 COLLATE BINARY;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)) COLLATE BINARY) ORDER BY COALESCE(SQLITE_VERSION(), (t1.c0 IN ()), ((((((((t1.c1)AND(t1.c0)))AND(x'')))AND(t1.c0)))AND(t1.c1)), t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) ASC, t1.c1 COLLATE BINARY;
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)) COLLATE BINARY) ORDER BY COALESCE(SQLITE_VERSION(), (t1.c0 IN ()), ((((((((t1.c1)AND(t1.c0)))AND(x'')))AND(t1.c0)))AND(t1.c1)), t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) ASC, t1.c1 COLLATE BINARY INTERSECT SELECT DISTINCT * FROM t1 WHERE ((+ ((~ (t1.c0))))) ORDER BY COALESCE(SQLITE_VERSION(), (t1.c0 IN ()), ((((((((t1.c1)AND(t1.c0)))AND(x'')))AND(t1.c0)))AND(t1.c1)), t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) ASC, t1.c1 COLLATE BINARY;
SELECT MAX(t1.c1) FROM t1 WHERE (CASE (~ (t1.c0))  WHEN t1.c0 COLLATE NOCASE THEN '4' ELSE ((t1.c0)IS(t1.c1)) END);
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE (~ (t1.c0))  WHEN t1.c0 COLLATE NOCASE THEN '4' ELSE ((t1.c0)IS(t1.c1)) END) LIMIT 0x1 INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (t1.c0) LIMIT 0x1;
SELECT * FROM t1 WHERE ((+ (t1.c0))) ORDER BY ((((((0x37cfdaa0)OR(t1.c1)))OR(CAST(t1.c1 AS INTEGER))))OR(((t1.c0)||(t1.c0)))) DESC  NULLS LAST, LIKELY(CAST(t1.c1 AS TEXT));
SELECT * FROM t1 WHERE ((((+ (t1.c0)))AND((((t1.c0))<((t1.c1))) COLLATE BINARY))) ORDER BY ((((((0X37cfdaa0)OR(t1.c1)))OR(CAST(t1.c1 AS INTEGER))))OR(((t1.c0)||(t1.c0)))) DESC  NULLS LAST, LIKELY(CAST(t1.c1 AS TEXT));
SELECT * FROM t1 WHERE ((+ (t1.c0))) ORDER BY ((((((0x37cfdaa0)OR(t1.c1)))OR(CAST(t1.c1 AS INTEGER))))OR(((t1.c0)||(t1.c0)))) DESC  NULLS LAST, LIKELY(CAST(t1.c1 AS TEXT));
SELECT * FROM t1 WHERE ((((+ (t1.c0)))AND((((t1.c0))<((t1.c1))) COLLATE BINARY))) ORDER BY ((((((0X37cfdaa0)OR(t1.c1)))OR(CAST(t1.c1 AS INTEGER))))OR(((t1.c0)||(t1.c0)))) DESC  NULLS LAST, LIKELY(CAST(t1.c1 AS TEXT));
SELECT ALL COUNT(*) FROM t1 WHERE (2.04650698E8);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (2.04650698E8) ORDER BY UNLIKELY(NULL)  NULLS FIRST LIMIT 0x5;
SELECT ALL * FROM t1 WHERE (0.7530001657106744) ORDER BY ((((t1.c1)LIKE(t1.c0)))&(t1.c0))  NULLS LAST;
SELECT * FROM t1 WHERE (0.7530001657106744) ORDER BY ((((t1.c1)LIKE(t1.c0)))&(t1.c0))  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE (((((((((((NULL)AND(t1.c1 COLLATE RTRIM)))AND(t1.c1)))AND((((t1.c1, t1.c0, NULL)) BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c0))))))AND('1')))OR((+ (t1.c1))))) ORDER BY ((((t1.c1)LIKE(t1.c0)))&(t1.c0))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (0.7530001657106744) ORDER BY ((((t1.c1)LIKE(t1.c0)))&(t1.c0))  NULLS LAST;
SELECT * FROM t1 WHERE (0.7530001657106744) ORDER BY ((((t1.c1)LIKE(t1.c0)))&(t1.c0))  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE (((((((((((NULL)AND(t1.c1 COLLATE RTRIM)))AND(t1.c1)))AND((((t1.c1, t1.c0, NULL)) BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c0))))))AND('1')))OR((+ (t1.c1))))) ORDER BY ((((t1.c1)LIKE(t1.c0)))&(t1.c0))  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (TRIM(DISTINCT ((t1.c0)IS NOT(t1.c0)), ((t1.c0) BETWEEN (x'0a22') AND (t1.c1))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((TRIM(DISTINCT ((t1.c0)IS NOT(t1.c0)), ((t1.c0) BETWEEN (x'0a22') AND (t1.c1))))AND(((t1.c1 COLLATE NOCASE)||((+ (0.8778787000153967))))))) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CAST(((((t1.c1)AND(t1.c1)))AND(t1.c0)) AS NUMERIC));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (('_}45jC' IN ()));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((('_}45jC' IN ()))AND(x'e3'))) ORDER BY ((((t1.c0)>>('\'))) NOTNULL) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((t1.c0)OR(t1.c1)))OR(t1.c1)) IN ((t1.c0 IN (t1.c0))))) ORDER BY ((((t1.c0)>>('\'))) NOTNULL);
SELECT ALL * FROM t1 WHERE ((NOT (((t1.c1)>=(t1.c0))))) ORDER BY ((((t1.c1)GLOB(t1.c0))) NOT BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (((((t1.c1)OR(t1.c0)))AND(t1.c1)))), (((CAST(t1.c1 AS REAL)))==(('>eQ&\2yNg')))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((NOT (((t1.c1)>=(t1.c0)))))AND((((t1.c0 IN (t1.c0)))&(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN NULL WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))))) ORDER BY (((COALESCE(t1.c0, t1.c1, t1.c0, t1.c1, t1.c0), x'' COLLATE NOCASE, ((t1.c1)AND('1493608075'))))<=((((((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)), -8.09746133E8, (+ (t1.c1))))), (((((t1.c0, t1.c0))<=((t1.c0, t1.c1))))*(((t1.c0)GLOB(t1.c1)))) INTERSECT SELECT ALL * FROM t1 WHERE ((+ ((NOT (t1.c0))))) ORDER BY (((COALESCE(t1.c0, t1.c1, t1.c0, t1.c1, t1.c0), x'' COLLATE NOCASE, ((t1.c1)AND('1493608075'))))<=((((((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)), -8.09746133E8, (+ (t1.c1))))), (((((t1.c0, t1.c0))<=((t1.c0, t1.c1))))*(((t1.c0)GLOB(t1.c1))));
SELECT ALL * FROM t1 WHERE ((NOT (((t1.c1)>=(t1.c0))))) ORDER BY ((((t1.c1)GLOB(t1.c0))) NOT BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (((((t1.c1)OR(t1.c0)))AND(t1.c1)))), (((CAST(t1.c1 AS REAL)))==(('>eQ&\2yNg')))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((NOT (((t1.c1)>=(t1.c0)))))AND((((t1.c0 IN (t1.c0)))&(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN NULL WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))))) ORDER BY (((COALESCE(t1.c0, t1.c1, t1.c0, t1.c1, t1.c0), x'' COLLATE NOCASE, ((t1.c1)AND('1493608075'))))<=((((((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)), -8.09746133E8, (+ (t1.c1))))), (((((t1.c0, t1.c0))<=((t1.c0, t1.c1))))*(((t1.c0)GLOB(t1.c1)))) INTERSECT SELECT ALL * FROM t1 WHERE ((+ ((NOT (t1.c0))))) ORDER BY (((COALESCE(t1.c0, t1.c1, t1.c0, t1.c1, t1.c0), x'' COLLATE NOCASE, ((t1.c1)AND('1493608075'))))<=((((((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)), -8.09746133E8, (+ (t1.c1))))), (((((t1.c0, t1.c0))<=((t1.c0, t1.c1))))*(((t1.c0)GLOB(t1.c1))));
SELECT ALL * FROM t1 WHERE (((((t1.c1) ISNULL))-(t1.c1 COLLATE NOCASE))) ORDER BY CAST(t1.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST, ((RTRIM(x'')) ISNULL) DESC, (((((t1.c0))>=((t1.c0))))+(UNLIKELY(DISTINCT t1.c0))) DESC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) ISNULL))-(t1.c1 COLLATE NOCASE))) ORDER BY CAST(t1.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST, ((RTRIM(x'')) ISNULL) DESC, (((((t1.c0))>=((t1.c0))))+(UNLIKELY(DISTINCT t1.c0))) DESC LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((((t1.c1) ISNULL))-(t1.c1 COLLATE NOCASE))) ORDER BY CAST(t1.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST, ((RTRIM(x'')) ISNULL) DESC, (((((t1.c0))>=((t1.c0))))+(UNLIKELY(DISTINCT t1.c0))) DESC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) ISNULL))-(t1.c1 COLLATE NOCASE))) ORDER BY CAST(t1.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST, ((RTRIM(x'')) ISNULL) DESC, (((((t1.c0))>=((t1.c0))))+(UNLIKELY(DISTINCT t1.c0))) DESC LIMIT 0x0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ('༒8') ORDER BY ((json_object('-1696962722', t1.c1))||((NOT (NULL)))), ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)IS NOT((NOT (t1.c1)))) ASC  NULLS FIRST, ((t1.c1) NOT NULL) ASC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((('༒8')AND((((((((('-841008926')AND(t1.c1)))OR(t1.c0)))AND(t1.c1))) NOT BETWEEN (UPPER(t1.c0)) AND ((- (t1.c1))))))) ORDER BY ((json_object('-1696962722', t1.c1))||((NOT (NULL)))), ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)IS NOT((NOT (t1.c1)))) ASC  NULLS FIRST, ((t1.c1) NOT NULL) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((((- (t1.c0)))==((((t1.c1, t1.c0, t1.c0))==((x'c3d4', t1.c1, t1.c0)))))) ORDER BY CASE ((((t1.c1)AND(t1.c1)))AND(t1.c1))  WHEN (+ (t1.c1)) THEN ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c0)) WHEN '' THEN ((t1.c1) ISNULL) WHEN CAST(1612608662 AS NUMERIC) THEN (t1.c0 IN (t1.c1, t1.c1, t1.c0)) ELSE ((t1.c1)>=(t1.c0)) END ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((- (t1.c0)))=((((t1.c1, t1.c0, t1.c0))=((x'c3d4', t1.c1, t1.c0))))))AND(((((t1.c1)AND(t1.c1)))OR(t1.c0)) COLLATE BINARY))) ORDER BY ABS(DISTINCT ((t1.c1)IS NOT(t1.c0)))  NULLS LAST, ((TYPEOF(t1.c1))-(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((- (t1.c0)))==((((t1.c1, t1.c0, t1.c0))==((x'c3d4', t1.c1, t1.c0)))))) ORDER BY CASE ((((t1.c1)AND(t1.c1)))AND(t1.c1))  WHEN (+ (t1.c1)) THEN ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c0)) WHEN '' THEN ((t1.c1) ISNULL) WHEN CAST(1612608662 AS NUMERIC) THEN (t1.c0 IN (t1.c1, t1.c1, t1.c0)) ELSE ((t1.c1)>=(t1.c0)) END ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((- (t1.c0)))=((((t1.c1, t1.c0, t1.c0))=((x'c3d4', t1.c1, t1.c0))))))AND(((((t1.c1)AND(t1.c1)))OR(t1.c0)) COLLATE BINARY))) ORDER BY ABS(DISTINCT ((t1.c1)IS NOT(t1.c0)))  NULLS LAST, ((TYPEOF(t1.c1))-(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (CASE UNLIKELY(t1.c0)  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) THEN t1.c0 END);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE UNLIKELY(t1.c0)  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) THEN t1.c0 END)AND((((((t1.c1) IS FALSE), ((t1.c0) IS FALSE)))=((NULL, CASE t1.c1  WHEN t1.c0 THEN 1.173737933E9 WHEN t1.c1 THEN t1.c0 ELSE '-131715403' END)))))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((((CAST(t1.c0 AS NUMERIC))AND(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))OR(((t1.c0)=(t1.c1)))))OR(((t1.c1) ISNULL))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN 0.19623928627552556 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (CAST((((t1.c0, t1.c0)) BETWEEN ((t1.c0, -1786191749)) AND (('(', t1.c1))) AS BLOB));
SELECT ALL * FROM t1 WHERE (((CAST((((t1.c0, t1.c0)) BETWEEN ((t1.c0, 0Xffffffff9588e07b)) AND (('(', t1.c1))) AS BLOB))AND(NULL))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 END) NOT NULL) ASC;
SELECT ALL * FROM t1 WHERE (CAST((((t1.c0, t1.c0)) BETWEEN ((t1.c0, -1786191749)) AND (('(', t1.c1))) AS BLOB));
SELECT ALL * FROM t1 WHERE (((CAST((((t1.c0, t1.c0)) BETWEEN ((t1.c0, 0Xffffffff9588e07b)) AND (('(', t1.c1))) AS BLOB))AND(NULL))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 END) NOT NULL) ASC;
SELECT ALL * FROM t1 WHERE (UNLIKELY(((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))) ORDER BY (CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN x'' THEN t1.c1 WHEN '0.20025627345273822' THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END IN (t1.c0)) DESC  NULLS LAST, ((((((t1.c0 COLLATE NOCASE)OR((((t1.c0, x'65'))>((t1.c0, t1.c1))))))OR(HEX(DISTINCT t1.c1))))AND(t1.c0 COLLATE RTRIM))  NULLS FIRST, (DATETIME(t1.c0, t1.c1, t1.c0, t1.c0, 0.2704473694792685, 'u', t1.c1) IN ('1427253485'));
SELECT ALL * FROM t1 WHERE (((UNLIKELY(((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1))))AND(((CASE WHEN t1.c1 THEN x'3dfa' END) NOT BETWEEN ((NOT (t1.c0))) AND (((((t1.c1)OR(t1.c0)))AND(t1.c1))))))) ORDER BY t1.c1 DESC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1) NOTNULL)) ISNULL)) ORDER BY t1.c1 DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (UNLIKELY(((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))) ORDER BY (CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN x'' THEN t1.c1 WHEN '0.20025627345273822' THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END IN (t1.c0)) DESC  NULLS LAST, ((((((t1.c0 COLLATE NOCASE)OR((((t1.c0, x'65'))>((t1.c0, t1.c1))))))OR(HEX(DISTINCT t1.c1))))AND(t1.c0 COLLATE RTRIM))  NULLS FIRST, (DATETIME(t1.c0, t1.c1, t1.c0, t1.c0, 0.2704473694792685, 'u', t1.c1) IN ('1427253485'));
SELECT ALL * FROM t1 WHERE (((UNLIKELY(((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1))))AND(((CASE WHEN t1.c1 THEN x'3dfa' END) NOT BETWEEN ((NOT (t1.c0))) AND (((((t1.c1)OR(t1.c0)))AND(t1.c1))))))) ORDER BY t1.c1 DESC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1) NOTNULL)) ISNULL)) ORDER BY t1.c1 DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c0)) BETWEEN (((- (t1.c1)), HEX(DISTINCT t1.c0), 'v1O')) AND ((((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(0.7847100157921332)))OR(t1.c1)), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)), ((t1.c0)/(t1.c0)))))) ORDER BY x'', (((1.703411045E9 IN (t1.c1))) IS FALSE);
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c1, t1.c0)) BETWEEN (((- (t1.c1)), HEX(DISTINCT t1.c0), 'v1O')) AND ((((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(0.7847100157921332)))OR(t1.c1)), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)), ((t1.c0)/(t1.c0))))))AND(((((((((((((t1.c0)AND(0.5690288611522092)))OR(x'767340')))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))<>(CAST(t1.c1 AS BLOB)))))) ORDER BY x'', (((1.703411045E9 IN (t1.c1))) IS FALSE) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((NULL) IS TRUE)) ORDER BY x'', (((1.703411045E9 IN (t1.c1))) IS FALSE);
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c0)) BETWEEN (((- (t1.c1)), HEX(DISTINCT t1.c0), 'v1O')) AND ((((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(0.7847100157921332)))OR(t1.c1)), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)), ((t1.c0)/(t1.c0)))))) ORDER BY x'', (((1.703411045E9 IN (t1.c1))) IS FALSE);
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c1, t1.c0)) BETWEEN (((- (t1.c1)), HEX(DISTINCT t1.c0), 'v1O')) AND ((((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(0.7847100157921332)))OR(t1.c1)), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)), ((t1.c0)/(t1.c0))))))AND(((((((((((((t1.c0)AND(0.5690288611522092)))OR(x'767340')))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))<>(CAST(t1.c1 AS BLOB)))))) ORDER BY x'', (((1.703411045E9 IN (t1.c1))) IS FALSE) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((NULL) IS TRUE)) ORDER BY x'', (((1.703411045E9 IN (t1.c1))) IS FALSE);
SELECT ALL MAX(t1.c1) FROM t1 WHERE (TRIM(DISTINCT 'i#y)', t1.c1) COLLATE RTRIM);
SELECT MAX(t1.c1) FROM t1 WHERE (TRIM(DISTINCT 'i#y)', t1.c1) COLLATE RTRIM) ORDER BY ((((TOTAL_CHANGES())OR(0.5195540099862916)))OR(t1.c1 COLLATE NOCASE))  NULLS LAST INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE ((t1.c0 IN ())) ORDER BY ((((TOTAL_CHANGES())OR(0.5195540099862916)))OR(t1.c1 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((t1.c1) IS FALSE) IN (CAST(t1.c1 AS BLOB), ((NULL)-(t1.c1))))) ORDER BY (((('8k|6YWx') IS TRUE)) NOT BETWEEN (MAX(t1.c1, t1.c0, NULL)) AND (x'fb337e85')) DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((((t1.c1) IS FALSE) IN (CAST(t1.c1 AS BLOB), ((NULL)-(t1.c1))))) ORDER BY (NOT (((t1.c0) IS FALSE))) ASC INTERSECT SELECT ALL * FROM t1 WHERE ((('')-(t1.c0)) COLLATE RTRIM) ORDER BY (NOT (((t1.c0) IS FALSE))) ASC;
SELECT ALL * FROM t1 WHERE ((((t1.c1) IS FALSE) IN (CAST(t1.c1 AS BLOB), ((NULL)-(t1.c1))))) ORDER BY (((('8k|6YWx') IS TRUE)) NOT BETWEEN (MAX(t1.c1, t1.c0, NULL)) AND (x'fb337e85')) DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((((t1.c1) IS FALSE) IN (CAST(t1.c1 AS BLOB), ((NULL)-(t1.c1))))) ORDER BY (NOT (((t1.c0) IS FALSE))) ASC INTERSECT SELECT ALL * FROM t1 WHERE ((('')-(t1.c0)) COLLATE RTRIM) ORDER BY (NOT (((t1.c0) IS FALSE))) ASC;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC)) ORDER BY (t1.c1 IN (((NULL)<(t1.c1))))  NULLS FIRST, CASE t1.c1  WHEN t1.c1 THEN x'1f' ELSE t1.c0 END COLLATE NOCASE  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC))AND((((((t1.c1, t1.c0))<=((NULL, '0.8878775773572767')))) NOT BETWEEN (((t1.c0)|(t1.c1))) AND (t1.c1 COLLATE RTRIM))))) ORDER BY LIKE((~ (t1.c0)), t1.c0, 'w') ASC, ((HEX(t1.c1))<<(CASE t1.c1  WHEN t1.c0 THEN t1.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC)) ORDER BY (t1.c1 IN (((NULL)<(t1.c1))))  NULLS FIRST, CASE t1.c1  WHEN t1.c1 THEN x'1f' ELSE t1.c0 END COLLATE NOCASE  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC))AND((((((t1.c1, t1.c0))<=((NULL, '0.8878775773572767')))) NOT BETWEEN (((t1.c0)|(t1.c1))) AND (t1.c1 COLLATE RTRIM))))) ORDER BY LIKE((~ (t1.c0)), t1.c0, 'w') ASC, ((HEX(t1.c1))<<(CASE t1.c1  WHEN t1.c0 THEN t1.c0 END)) ASC  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE (NULL);
SELECT MAX(t1.c0) FROM t1 WHERE (((NULL)AND(((t1.c1)GLOB(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))))))) ORDER BY (0.29102117688181894 IN (t1.c1)) COLLATE RTRIM  NULLS FIRST, (((((0.9131314273202273)AND('vsk')))AND(t1.c0)) IN ())  NULLS LAST LIMIT 1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))IS(t1.c1 COLLATE BINARY)));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))IS(t1.c1 COLLATE BINARY)))AND(t1.c0)));
SELECT ALL * FROM t1 WHERE (((0.5123924678289825)+(TYPEOF(DISTINCT t1.c0)))) ORDER BY (((((((((((((t1.c1, t1.c0))<=((t1.c1, t1.c1))))OR(0.3580363910109682)))AND(((-1.787681106E9) NOTNULL))))AND((t1.c0 IN (t1.c0)))))AND('淇E㩎')))AND((+ ('-1539382074')))) DESC, (~ (UPPER(DISTINCT t1.c1))) DESC;
SELECT DISTINCT * FROM t1 WHERE (((0.5123924678289825)+(TYPEOF(DISTINCT t1.c0)))) ORDER BY json_valid(LIKELY(DISTINCT t1.c0)) ASC LIMIT 2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (1.62651339E9) ORDER BY json_valid(LIKELY(DISTINCT t1.c0)) ASC LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (((0.5123924678289825)+(TYPEOF(DISTINCT t1.c0)))) ORDER BY (((((((((((((t1.c1, t1.c0))<=((t1.c1, t1.c1))))OR(0.3580363910109682)))AND(((-1.787681106E9) NOTNULL))))AND((t1.c0 IN (t1.c0)))))AND('淇E㩎')))AND((+ ('-1539382074')))) DESC, (~ (UPPER(DISTINCT t1.c1))) DESC;
SELECT DISTINCT * FROM t1 WHERE (((0.5123924678289825)+(TYPEOF(DISTINCT t1.c0)))) ORDER BY json_valid(LIKELY(DISTINCT t1.c0)) ASC LIMIT 2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (1.62651339E9) ORDER BY json_valid(LIKELY(DISTINCT t1.c0)) ASC LIMIT 0x2;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC)) NOT BETWEEN ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1)))) AND (CAST(t1.c0 AS NUMERIC))));
SELECT MAX(t1.c1) FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC)) NOT BETWEEN ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1)))) AND (CAST(t1.c0 AS NUMERIC)))) ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c0)LIKE(t1.c0)), t1.c0 COLLATE BINARY, 0.6602283942757515)) AND (((t1.c1 IN ()), (t1.c0 IN ()), ((t1.c0) NOTNULL)))) ASC INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (x'2e') ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c0)LIKE(t1.c0)), t1.c0 COLLATE BINARY, 0.6602283942757515)) AND (((t1.c1 IN ()), (t1.c0 IN ()), ((t1.c0) NOTNULL)))) ASC;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((NULL) ISNULL) COLLATE RTRIM) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS FIRST, NULL DESC, CAST(t1.c1 COLLATE NOCASE AS REAL);
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((NULL) ISNULL) COLLATE RTRIM)AND(CAST('1612608662' AS REAL)))) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS FIRST, NULL DESC, CAST(t1.c1 COLLATE NOCASE AS REAL) LIMIT 1 INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE ((NOT ((((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0)))))) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS FIRST, NULL DESC, CAST(t1.c1 COLLATE NOCASE AS REAL) LIMIT 1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((t1.c1)!=(t1.c0)))<(((t1.c0)+(t1.c1))))) ORDER BY (t1.c0 COLLATE BINARY IN ((((t1.c0))>=((t1.c1))))) DESC  NULLS LAST, ((CAST(t1.c1 AS INTEGER)) ISNULL);
SELECT MAX(t1.c1) FROM t1 WHERE (((((((t1.c1)<(t1.c0)))<(((t1.c0)+(t1.c1)))))AND((((t1.c1 IN (t1.c1))) IS FALSE)))) ORDER BY (t1.c0 COLLATE BINARY IN ((((t1.c0))>=((t1.c1))))) DESC  NULLS LAST, ((CAST(t1.c1 AS INTEGER)) ISNULL) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1) BETWEEN (t1.c1) AND (0X17e841d4)) IN ((~ (NULL)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c1) BETWEEN (t1.c1) AND (401097172)) IN ((~ (NULL)))))AND(((((((t1.c1)AND(t1.c1)))OR(t1.c1)))/(((t1.c1)&(t1.c0))))))) LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c1) LIMIT 2;
SELECT * FROM t1 WHERE (CASE WHEN '0.07751689649021953' THEN LIKELY(DISTINCT t1.c0) ELSE ((((t1.c0)AND(NULL)))OR(t1.c1)) END) ORDER BY (- (x'f100')) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN '0.07751689649021953' THEN LIKELY(DISTINCT t1.c0) ELSE ((((t1.c0)AND(NULL)))OR(t1.c1)) END)AND((+ (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c1 END))))) ORDER BY ((((t1.c1)+(t1.c1)))/(NULL)) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c0 AS TEXT)) ORDER BY ((((t1.c1)+(t1.c1)))/(NULL)) LIMIT 0X1;
SELECT * FROM t1 WHERE (CASE WHEN '0.07751689649021953' THEN LIKELY(DISTINCT t1.c0) ELSE ((((t1.c0)AND(NULL)))OR(t1.c1)) END) ORDER BY (- (x'f100')) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN '0.07751689649021953' THEN LIKELY(DISTINCT t1.c0) ELSE ((((t1.c0)AND(NULL)))OR(t1.c1)) END)AND((+ (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c1 END))))) ORDER BY ((((t1.c1)+(t1.c1)))/(NULL)) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c0 AS TEXT)) ORDER BY ((((t1.c1)+(t1.c1)))/(NULL)) LIMIT 0X1;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((-1787681106 IN (t1.c0, t1.c1)))+(((t1.c0) NOTNULL))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((0xffffffff957226ae IN (t1.c0, t1.c1)))+(((t1.c0) NOTNULL)))) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((('m')) BETWEEN ((LIKELY(t1.c0))) AND ((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c0))))));
SELECT * FROM t1 WHERE (((('m')) BETWEEN ((LIKELY(t1.c0))) AND ((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c0))))));
SELECT ALL * FROM t1 WHERE (((('m')) BETWEEN ((LIKELY(t1.c0))) AND ((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c0))))));
SELECT * FROM t1 WHERE (((('m')) BETWEEN ((LIKELY(t1.c0))) AND ((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c0))))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (NULL) ORDER BY ((((t1.c1)IS NOT('1060422268')))<<(((t1.c0)+('?'))))  NULLS LAST, CASE ((((((t1.c1)OR(t1.c0)))OR(0.8398411602107319)))AND(t1.c0))  WHEN (NOT (NULL)) THEN t1.c1 END ASC  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (NULL) ORDER BY ((((t1.c1)IS NOT('1060422268')))<<(((t1.c0)+('?'))))  NULLS LAST, CASE ((((((t1.c1)OR(t1.c0)))OR(0.8398411602107319)))AND(t1.c0))  WHEN (NOT (NULL)) THEN t1.c1 END ASC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((t1.c1) ISNULL)) ORDER BY ((((t1.c1)IS NOT('1060422268')))<<(((t1.c0)+('?'))))  NULLS LAST, CASE ((((((t1.c1)OR(t1.c0)))OR(0.8398411602107319)))AND(t1.c0))  WHEN (NOT (NULL)) THEN t1.c1 END ASC  NULLS LAST LIMIT 0;
SELECT MAX(t1.c1) FROM t1 WHERE (((t1.c1 COLLATE BINARY)OR(((t1.c1)<<(t1.c0)))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((t1.c1 COLLATE BINARY)OR(((t1.c1)<<(t1.c0)))))AND(((IFNULL(DISTINCT t1.c0, t1.c0))LIKE(CAST(t1.c0 AS INTEGER)))))) ORDER BY ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)AND((((t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c0, 0.4626250932470428, t1.c0)) AND ((2035048739, t1.c1, t1.c0)))))  NULLS FIRST, CAST(((t1.c0)/(t1.c0)) AS TEXT) ASC LIMIT 1;
SELECT * FROM t1 WHERE (((((t1.c0)<<(t1.c1))) BETWEEN (((t1.c0) IS FALSE)) AND (((t1.c0)*(t1.c0))))) ORDER BY CASE (- (NULL))  WHEN ((t1.c1)OR(t1.c0)) THEN (NOT (t1.c1)) ELSE json_quote(t1.c0) END DESC, ((((t1.c0) IS FALSE))<=(((t1.c1)<<(t1.c1))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)<<(t1.c1))) BETWEEN (((t1.c0) IS FALSE)) AND (((t1.c0)*(t1.c0)))))AND(((((-1.176461747E9)|(t1.c0)))|(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))))) ORDER BY ((((t1.c1) IS TRUE))*(((t1.c1) IS TRUE)));
SELECT * FROM t1 WHERE (((((t1.c0)<<(t1.c1))) BETWEEN (((t1.c0) IS FALSE)) AND (((t1.c0)*(t1.c0))))) ORDER BY CASE (- (NULL))  WHEN ((t1.c1)OR(t1.c0)) THEN (NOT (t1.c1)) ELSE json_quote(t1.c0) END DESC, ((((t1.c0) IS FALSE))<=(((t1.c1)<<(t1.c1))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)<<(t1.c1))) BETWEEN (((t1.c0) IS FALSE)) AND (((t1.c0)*(t1.c0)))))AND(((((-1.176461747E9)|(t1.c0)))|(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))))) ORDER BY ((((t1.c1) IS TRUE))*(((t1.c1) IS TRUE)));
SELECT MIN(t1.c0) FROM t1 WHERE ((+ ((((t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c1, t1.c0, t1.c0))))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((+ ((((t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c1, t1.c0, t1.c0))))))AND(((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END) BETWEEN ((((t1.c1))<((t1.c0)))) AND (TYPEOF(t1.c1)))))) ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) AS REAL) DESC, ABS(((t1.c1)<<(t1.c0))), ((t1.c1)LIKE(t1.c1)) COLLATE NOCASE DESC, ((-832560007) BETWEEN ((t1.c1 IN (t1.c0))) AND (((((t1.c0)AND(t1.c0)))OR(t1.c0)))) ASC INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND (('H''+n')))) IS FALSE)) ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) AS REAL) DESC, ABS(((t1.c1)<<(t1.c0))), ((t1.c1)LIKE(t1.c1)) COLLATE NOCASE DESC, ((0xffffffffce602479) BETWEEN ((t1.c1 IN (t1.c0))) AND (((((t1.c0)AND(t1.c0)))OR(t1.c0)))) ASC;
SELECT MAX(t1.c0) FROM t1 WHERE ((+ (t1.c1)) COLLATE NOCASE) ORDER BY CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END COLLATE BINARY DESC, (((- (t1.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((+ (t1.c1)) COLLATE NOCASE)AND(((((t1.c0)>(t1.c0))) BETWEEN (((t1.c1)<>(0xffffffffead87fd9))) AND (((t1.c1)LIKE(t1.c0))))))) ORDER BY CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END COLLATE BINARY DESC, (((- (t1.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((TRIM(t1.c0, NULL))<(0.9532317774099616))) ORDER BY t1.c0, x'049f' ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((TRIM(t1.c0, NULL))<(0.9532317774099616)))AND((- (((t1.c1)*(t1.c0))))))) ORDER BY t1.c0, x'049f' ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((+ (t1.c1))) ISNULL)) ORDER BY t1.c0, x'049f' ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((TRIM(t1.c0, NULL))<(0.9532317774099616))) ORDER BY t1.c0, x'049f' ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((TRIM(t1.c0, NULL))<(0.9532317774099616)))AND((- (((t1.c1)*(t1.c0))))))) ORDER BY t1.c0, x'049f' ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((+ (t1.c1))) ISNULL)) ORDER BY t1.c0, x'049f' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((t1.c1)AND(t1.c0)))OR(x'')))OR(t1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c1)AND(t1.c0)))OR(x'')))OR(t1.c0))) NOT NULL))AND((CAST(t1.c1 AS NUMERIC) IN ((((x'', t1.c0, t1.c1))>=((t1.c0, t1.c0, t1.c1)))))))) ORDER BY ((((t1.c1)>=(t1.c1)))||('*ꓙtZ8')) DESC, (((('z') NOTNULL)) IS FALSE) DESC  NULLS FIRST INTERSECT SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c1)>=(t1.c1)))||('*ꓙtZ8')) DESC, (((('z') NOTNULL)) IS FALSE) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (0xffffffff91d19cf9) ORDER BY (t1.c1 COLLATE RTRIM IN (CASE WHEN t1.c1 THEN x'' WHEN t1.c0 THEN t1.c1 END)) ASC  NULLS LAST, ((((((t1.c0 COLLATE NOCASE)AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(UPPER(t1.c0))))AND(0Xffffffffedc2f8ba))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (-1848533767) ORDER BY (t1.c1 COLLATE RTRIM IN (CASE WHEN t1.c1 THEN x'' WHEN t1.c0 THEN t1.c1 END)) ASC  NULLS LAST, ((((((t1.c0 COLLATE NOCASE)AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(UPPER(t1.c0))))AND(0Xffffffffedc2f8ba))  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (0xffffffff91d19cf9) ORDER BY (t1.c1 COLLATE RTRIM IN (CASE WHEN t1.c1 THEN x'' WHEN t1.c0 THEN t1.c1 END)) ASC  NULLS LAST, ((((((t1.c0 COLLATE NOCASE)AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(UPPER(t1.c0))))AND(0Xffffffffedc2f8ba))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (-1848533767) ORDER BY (t1.c1 COLLATE RTRIM IN (CASE WHEN t1.c1 THEN x'' WHEN t1.c0 THEN t1.c1 END)) ASC  NULLS LAST, ((((((t1.c0 COLLATE NOCASE)AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(UPPER(t1.c0))))AND(0Xffffffffedc2f8ba))  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))<((((((((((((((((NULL)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND('i')))OR(t1.c0)))))) ORDER BY CASE WHEN UNLIKELY(t1.c0) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) WHEN CASE WHEN t1.c1 THEN t1.c0 END THEN t1.c1 WHEN (t1.c0 IN ()) THEN t1.c0 WHEN CASE WHEN t1.c0 THEN t1.c0 END THEN (('-153287099') BETWEEN (t1.c1) AND (t1.c0)) END  NULLS LAST, (t1.c1 COLLATE RTRIM IN (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)), CASE WHEN CAST(NULL AS TEXT) THEN COALESCE(t1.c1, t1.c0, NULL, t1.c0) ELSE (t1.c1 IN (t1.c1, t1.c0, t1.c1)) END DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))<((((((((((((((((NULL)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND('i')))OR(t1.c0)))))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (t1.c1 COLLATE BINARY) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))), ((((((t1.c0)&(t1.c1)))AND((('+1')LIKE(t1.c0)))))OR(((t1.c1) BETWEEN (t1.c1) AND ('n')))) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (t1.c1 COLLATE BINARY) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))), ((((((t1.c0)&(t1.c1)))AND((('+1')LIKE(t1.c0)))))OR(((t1.c1) BETWEEN (t1.c1) AND ('n')))) DESC LIMIT 2;
SELECT * FROM t1 WHERE ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))<((((((((((((((((NULL)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND('i')))OR(t1.c0)))))) ORDER BY CASE WHEN UNLIKELY(t1.c0) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) WHEN CASE WHEN t1.c1 THEN t1.c0 END THEN t1.c1 WHEN (t1.c0 IN ()) THEN t1.c0 WHEN CASE WHEN t1.c0 THEN t1.c0 END THEN (('-153287099') BETWEEN (t1.c1) AND (t1.c0)) END  NULLS LAST, (t1.c1 COLLATE RTRIM IN (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)), CASE WHEN CAST(NULL AS TEXT) THEN COALESCE(t1.c1, t1.c0, NULL, t1.c0) ELSE (t1.c1 IN (t1.c1, t1.c0, t1.c1)) END DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))<((((((((((((((((NULL)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND('i')))OR(t1.c0)))))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (t1.c1 COLLATE BINARY) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))), ((((((t1.c0)&(t1.c1)))AND((('+1')LIKE(t1.c0)))))OR(((t1.c1) BETWEEN (t1.c1) AND ('n')))) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (t1.c1 COLLATE BINARY) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))), ((((((t1.c0)&(t1.c1)))AND((('+1')LIKE(t1.c0)))))OR(((t1.c1) BETWEEN (t1.c1) AND ('n')))) DESC LIMIT 2;
SELECT ALL * FROM t1 WHERE ((- (CAST(t1.c1 AS REAL)))) ORDER BY -2073663881  NULLS LAST, (((t1.c0 IN (t1.c0)))<(t1.c1 COLLATE RTRIM))  NULLS LAST, ((t1.c0 IN (t1.c1)) IN (((t1.c0)<(t1.c1))))  NULLS LAST;
SELECT * FROM t1 WHERE ((- (CAST(t1.c1 AS REAL)))) ORDER BY ((((((((t1.c0) NOT BETWEEN (0.9570582021955938) AND (t1.c1)))AND(CASE WHEN t1.c1 THEN t1.c1 END)))AND(((t1.c0)<>(t1.c0)))))OR(((('1041810244')) BETWEEN ((t1.c1)) AND ((t1.c0))))) DESC;
SELECT ALL * FROM t1 WHERE ((- (CAST(t1.c1 AS REAL)))) ORDER BY -2073663881  NULLS LAST, (((t1.c0 IN (t1.c0)))<(t1.c1 COLLATE RTRIM))  NULLS LAST, ((t1.c0 IN (t1.c1)) IN (((t1.c0)<(t1.c1))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))))&((((NULL))!=((t1.c0)))))) ORDER BY t1.c1 ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))))&((((NULL))<>((t1.c0)))))) ORDER BY t1.c1 ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (NULLIF(DISTINCT ((t1.c0)<=(0.4458173110278808)), x'')) ORDER BY t1.c1 ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))))&((((NULL))!=((t1.c0)))))) ORDER BY t1.c1 ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))))&((((NULL))<>((t1.c0)))))) ORDER BY t1.c1 ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (NULLIF(DISTINCT ((t1.c0)<=(0.4458173110278808)), x'')) ORDER BY t1.c1 ASC  NULLS FIRST LIMIT 0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (UPPER(t1.c1) COLLATE RTRIM);
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((UPPER(t1.c1) COLLATE RTRIM)AND(t1.c0))) LIMIT 0;
SELECT ALL * FROM t1 WHERE ((t1.c1 IN ())) ORDER BY LIKELIHOOD(DISTINCT HEX(DISTINCT t1.c1), TYPEOF(t1.c0)), ((t1.c0 COLLATE NOCASE) IS TRUE) ASC  NULLS LAST;
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))AND(t1.c0))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (NULL) AND ((- (t1.c0)))), UNLIKELY(DISTINCT (+ (t1.c0))) ASC LIMIT 0x4;
SELECT ALL * FROM t1 WHERE ((t1.c1 IN ())) ORDER BY LIKELIHOOD(DISTINCT HEX(DISTINCT t1.c1), TYPEOF(t1.c0)), ((t1.c0 COLLATE NOCASE) IS TRUE) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END AS TEXT));
SELECT DISTINCT * FROM t1 WHERE (((CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END AS TEXT))AND(((t1.c0)IS NOT(t1.c1 COLLATE RTRIM))))) ORDER BY ((((t1.c0) IS TRUE))IS NOT(json_insert(t1.c1, t1.c0, t1.c1, t1.c1, t1.c0, t1.c1))) ASC  NULLS LAST, (((t1.c1 IN (t1.c1)))*(HEX(t1.c0))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)IS NOT(t1.c1))) IS FALSE)) ORDER BY ((((t1.c0) IS TRUE))IS NOT(json_insert(t1.c1, t1.c0, t1.c1, t1.c1, t1.c0, t1.c1))) ASC  NULLS LAST, (((t1.c1 IN (t1.c1)))*(HEX(t1.c0)));
SELECT ALL * FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END AS TEXT));
SELECT DISTINCT * FROM t1 WHERE (((CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END AS TEXT))AND(((t1.c0)IS NOT(t1.c1 COLLATE RTRIM))))) ORDER BY ((((t1.c0) IS TRUE))IS NOT(json_insert(t1.c1, t1.c0, t1.c1, t1.c1, t1.c0, t1.c1))) ASC  NULLS LAST, (((t1.c1 IN (t1.c1)))*(HEX(t1.c0))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)IS NOT(t1.c1))) IS FALSE)) ORDER BY ((((t1.c0) IS TRUE))IS NOT(json_insert(t1.c1, t1.c0, t1.c1, t1.c1, t1.c0, t1.c1))) ASC  NULLS LAST, (((t1.c1 IN (t1.c1)))*(HEX(t1.c0)));
SELECT MIN(t1.c1) FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) BETWEEN ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 END, (t1.c1 IN (t1.c1)), '')) AND ((((((((((t1.c0)AND(t1.c1)))AND(-148607251)))AND(t1.c0)))AND(t1.c1)), t1.c0 COLLATE NOCASE, ((t1.c0) ISNULL)))));
SELECT MIN(t1.c1) FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 END, (t1.c1 IN (t1.c1)), '')) AND ((((((((((t1.c0)AND(t1.c1)))AND(0Xfffffffff7246eed)))AND(t1.c0)))AND(t1.c1)), t1.c0 COLLATE NOCASE, ((t1.c0) ISNULL)))))AND((CAST(t1.c0 AS BLOB) IN (CASE t1.c1  WHEN t1.c0 THEN t1.c1 END)))));
SELECT ALL * FROM t1 WHERE ((CAST(t1.c1 AS TEXT) IN ())) ORDER BY (((((((((t1.c0 IN ()))OR(CAST(t1.c1 AS BLOB))))OR(((t1.c1)%(t1.c1)))))AND((((t1.c1, t1.c1, '', t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, 0.47305034130832246, 0.4487922274535294, t1.c1)) AND ((t1.c1, '1383411326', t1.c1, t1.c1, t1.c0))))))AND(((t1.c1) IS TRUE))) DESC  NULLS LAST, (((t1.c0 IN (t1.c1, t1.c0))) NOT BETWEEN (((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c0))) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))), (((t1.c0)) BETWEEN ((CAST(t1.c0 AS TEXT))) AND ((t1.c0 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((CAST(t1.c1 AS TEXT) IN ())) ORDER BY (((t1.c1)<=(t1.c0)) IN ()) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((('wVH&0%&dA', t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, t1.c0)))) BETWEEN (((t1.c1)&(t1.c0))) AND (((((((((((((((t1.c0)OR(t1.c1)))AND(0.7667493403468062)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1))))) ORDER BY (((t1.c1)<=(t1.c0)) IN ()) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((CAST(t1.c1 AS TEXT) IN ())) ORDER BY (((((((((t1.c0 IN ()))OR(CAST(t1.c1 AS BLOB))))OR(((t1.c1)%(t1.c1)))))AND((((t1.c1, t1.c1, '', t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, 0.47305034130832246, 0.4487922274535294, t1.c1)) AND ((t1.c1, '1383411326', t1.c1, t1.c1, t1.c0))))))AND(((t1.c1) IS TRUE))) DESC  NULLS LAST, (((t1.c0 IN (t1.c1, t1.c0))) NOT BETWEEN (((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c0))) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))), (((t1.c0)) BETWEEN ((CAST(t1.c0 AS TEXT))) AND ((t1.c0 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((CAST(t1.c1 AS TEXT) IN ())) ORDER BY (((t1.c1)<=(t1.c0)) IN ()) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((('wVH&0%&dA', t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, t1.c0)))) BETWEEN (((t1.c1)&(t1.c0))) AND (((((((((((((((t1.c0)OR(t1.c1)))AND(0.7667493403468062)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1))))) ORDER BY (((t1.c1)<=(t1.c0)) IN ()) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 WHERE (NULL) ORDER BY CAST(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC), (t1.c1 IN (t1.c0)) COLLATE RTRIM ASC, (((((x'7a0b', t1.c1, t1.c1)) BETWEEN ((x'ba', t1.c0, '1161785472')) AND ((t1.c0, t1.c0, t1.c1)))) BETWEEN ((t1.c0 IN (t1.c1, t1.c0))) AND ((- (t1.c1)))) DESC  NULLS FIRST, (((((t1.c1, t1.c1))<((t1.c0, t1.c0)))) BETWEEN ((NOT (t1.c1))) AND (((t1.c1) IS FALSE)));
SELECT DISTINCT * FROM t1 WHERE (NULL) ORDER BY CAST(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC), (t1.c1 IN (t1.c0)) COLLATE RTRIM ASC, (((((x'7a0b', t1.c1, t1.c1)) BETWEEN ((x'ba', t1.c0, '1161785472')) AND ((t1.c0, t1.c0, t1.c1)))) BETWEEN ((t1.c0 IN (t1.c1, t1.c0))) AND ((- (t1.c1)))) DESC  NULLS FIRST, (((((t1.c1, t1.c1))<((t1.c0, t1.c0)))) BETWEEN ((NOT (t1.c1))) AND (((t1.c1) IS FALSE)));
SELECT * FROM t1 WHERE (NULL) ORDER BY CAST(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC), (t1.c1 IN (t1.c0)) COLLATE RTRIM ASC, (((((x'7a0b', t1.c1, t1.c1)) BETWEEN ((x'ba', t1.c0, '1161785472')) AND ((t1.c0, t1.c0, t1.c1)))) BETWEEN ((t1.c0 IN (t1.c1, t1.c0))) AND ((- (t1.c1)))) DESC  NULLS FIRST, (((((t1.c1, t1.c1))<((t1.c0, t1.c0)))) BETWEEN ((NOT (t1.c1))) AND (((t1.c1) IS FALSE)));
SELECT DISTINCT * FROM t1 WHERE (NULL) ORDER BY CAST(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC), (t1.c1 IN (t1.c0)) COLLATE RTRIM ASC, (((((x'7a0b', t1.c1, t1.c1)) BETWEEN ((x'ba', t1.c0, '1161785472')) AND ((t1.c0, t1.c0, t1.c1)))) BETWEEN ((t1.c0 IN (t1.c1, t1.c0))) AND ((- (t1.c1)))) DESC  NULLS FIRST, (((((t1.c1, t1.c1))<((t1.c0, t1.c0)))) BETWEEN ((NOT (t1.c1))) AND (((t1.c1) IS FALSE)));
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))>=(((t1.c1) ISNULL)))) ORDER BY CASE WHEN t1.c0 THEN (((t1.c0, t1.c1))==((t1.c1, t1.c1))) WHEN t1.c1 COLLATE BINARY THEN (~ (t1.c0)) ELSE ((t1.c0) IS FALSE) END, (((((((t1.c0 IN (t1.c0)))AND(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND(t1.c1 COLLATE RTRIM)))AND(x'98bb'));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))>=(((t1.c1) ISNULL)))) ORDER BY TRIM(0.5596333118851585), (NOT ((~ (t1.c1)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) IN (((t1.c1) IS TRUE)))) ORDER BY TRIM(0.5596333118851585), (NOT ((~ (t1.c1)))) LIMIT 1;
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))>=(((t1.c1) ISNULL)))) ORDER BY CASE WHEN t1.c0 THEN (((t1.c0, t1.c1))==((t1.c1, t1.c1))) WHEN t1.c1 COLLATE BINARY THEN (~ (t1.c0)) ELSE ((t1.c0) IS FALSE) END, (((((((t1.c0 IN (t1.c0)))AND(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND(t1.c1 COLLATE RTRIM)))AND(x'98bb'));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))>=(((t1.c1) ISNULL)))) ORDER BY TRIM(0.5596333118851585), (NOT ((~ (t1.c1)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) IN (((t1.c1) IS TRUE)))) ORDER BY TRIM(0.5596333118851585), (NOT ((~ (t1.c1)))) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE ((((x'', t1.c1)) BETWEEN ((t1.c1 COLLATE BINARY, (NOT (x'5b')))) AND ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, CAST(t1.c0 AS BLOB)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((x'', t1.c1)) BETWEEN ((t1.c1 COLLATE BINARY, (NOT (x'5b')))) AND ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, CAST(t1.c0 AS BLOB))))) ORDER BY ((((((t1.c1)AND((((t1.c0, t1.c1))<((t1.c1, t1.c1))))))OR(NULL)))OR((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))))), ((((((((((((t1.c1) NOT NULL))OR(ABS(DISTINCT t1.c1))))AND(((t1.c1)/(t1.c0)))))AND(TIME(t1.c1, t1.c1, t1.c0, '1083185990', t1.c1, x''))))AND((- (t1.c0)))))OR((('	{Qq_') BETWEEN (t1.c1) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CAST((t1.c0 IN ()) AS REAL)) ORDER BY ((((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND('s#<')))OR(t1.c0))) BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c1) IS TRUE))), ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))<>('-1675557526')) DESC  NULLS LAST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((CAST((t1.c0 IN ()) AS REAL))AND((((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0))))*((x'59' IN (t1.c1))))))) ORDER BY ((((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND('s#<')))OR(t1.c0))) BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c1) IS TRUE))), ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))<>('-1675557526')) DESC  NULLS LAST INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN x'e25b' WHEN t1.c0 THEN t1.c1 ELSE x'' END IN (((t1.c0)>=(t1.c0)), (+ (t1.c1))))) ORDER BY ((((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND('s#<')))OR(t1.c0))) BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c1) IS TRUE))), ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))!=('-1675557526')) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(ABS(t1.c0))))OR(((0.8320739905566044) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND(((t1.c1)<=(t1.c1)))));
SELECT * FROM t1 WHERE (((((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(ABS(t1.c0))))OR(((0.8320739905566044) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND(((t1.c1)=(t1.c1)))))AND(((((t1.c1)<=(t1.c0)))||(((t1.c0)<=(t1.c1))))))) ORDER BY t1.c1 ASC, ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) COLLATE NOCASE LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(ABS(t1.c0))))OR(((0.8320739905566044) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND(((t1.c1)<=(t1.c1)))));
SELECT * FROM t1 WHERE (((((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(ABS(t1.c0))))OR(((0.8320739905566044) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND(((t1.c1)=(t1.c1)))))AND(((((t1.c1)<=(t1.c0)))||(((t1.c0)<=(t1.c1))))))) ORDER BY t1.c1 ASC, ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) COLLATE NOCASE LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (('_y*' COLLATE BINARY IN (((t1.c0)=(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((('_y*' COLLATE BINARY IN (((t1.c0)=(t1.c0)))))AND(CAST(((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)) AS INTEGER)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (t1.c1) AND (UPPER(DISTINCT t1.c1))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (('_y*' COLLATE BINARY IN (((t1.c0)=(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((('_y*' COLLATE BINARY IN (((t1.c0)=(t1.c0)))))AND(CAST(((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)) AS INTEGER)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (t1.c1) AND (UPPER(DISTINCT t1.c1))) ASC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(CAST(t1.c1 AS INTEGER))))AND(t1.c0 COLLATE BINARY)));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(CAST(t1.c1 AS INTEGER))))AND(t1.c0 COLLATE BINARY)))AND(json_array_length((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))) LIMIT 0X1;
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS BLOB)) NOT NULL)) ORDER BY t1.c1 DESC, CAST(t1.c1 AS BLOB)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS BLOB)) NOT NULL))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) COLLATE BINARY))) ORDER BY t1.c1 DESC, CAST(t1.c1 AS BLOB)  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS BLOB)) NOT NULL)) ORDER BY t1.c1 DESC, CAST(t1.c1 AS BLOB)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS BLOB)) NOT NULL))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) COLLATE BINARY))) ORDER BY t1.c1 DESC, CAST(t1.c1 AS BLOB)  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN (CASE WHEN t1.c1 THEN t1.c0 END) AND (CASE WHEN t1.c1 THEN '' WHEN t1.c1 THEN 'w~a(i*>Z)' ELSE t1.c1 END)));
SELECT * FROM t1 WHERE ((((((t1.c0 IN ())) BETWEEN (CASE WHEN t1.c1 THEN t1.c0 END) AND (CASE WHEN t1.c1 THEN '' WHEN t1.c1 THEN 'w~a(i*>Z)' ELSE t1.c1 END)))AND(((t1.c0)>(t1.c0)) COLLATE BINARY COLLATE NOCASE))) LIMIT 2;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN (CASE WHEN t1.c1 THEN t1.c0 END) AND (CASE WHEN t1.c1 THEN '' WHEN t1.c1 THEN 'w~a(i*>Z)' ELSE t1.c1 END)));
SELECT * FROM t1 WHERE ((((((t1.c0 IN ())) BETWEEN (CASE WHEN t1.c1 THEN t1.c0 END) AND (CASE WHEN t1.c1 THEN '' WHEN t1.c1 THEN 'w~a(i*>Z)' ELSE t1.c1 END)))AND(((t1.c0)>(t1.c0)) COLLATE BINARY COLLATE NOCASE))) LIMIT 2;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((t1.c1)) BETWEEN ((t1.c0)) AND ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)))) ORDER BY ((((NOT (t1.c0)), x'', CAST(t1.c0 AS NUMERIC), x'dcd1' COLLATE RTRIM))<=((((t1.c1) NOTNULL), ((t1.c1)<(t1.c1)), TRIM(DISTINCT t1.c0), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))  NULLS FIRST, (NOT ((t1.c0 IN (t1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((t1.c1)) BETWEEN ((t1.c0)) AND ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END))))AND(HEX(((t1.c0) ISNULL))))) ORDER BY GLOB((((t1.c0))>=((t1.c0))), (- (t1.c0)))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.43202950952835295 WHEN 0X2f27661 THEN t1.c0 ELSE t1.c0 END), (((t1.c0 IN (t1.c0, t1.c1, t1.c1))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND ((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))) ASC LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (t1.c1) ORDER BY GLOB((((t1.c0))>=((t1.c0))), (- (t1.c0)))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.43202950952835295 WHEN 49444449 THEN t1.c0 ELSE t1.c0 END), (((t1.c0 IN (t1.c0, t1.c1, t1.c1))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND ((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))))) ASC LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (x'') ORDER BY CASE WHEN (~ (t1.c1)) THEN (((t1.c1))<((t1.c1))) WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN t1.c0 WHEN (t1.c0 IN (t1.c0)) THEN (t1.c1 IN ()) WHEN 'iL' THEN (((NULL, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))) END DESC  NULLS LAST, (((t1.c0) ISNULL) IN (1778662627)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((x'')AND((((((t1.c0, t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0, t1.c0)) AND ((t1.c1, t1.c1, t1.c0, t1.c1))))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))))) ORDER BY (CAST(t1.c1 AS TEXT) IN ((NOT (t1.c0)))) DESC  NULLS FIRST, ((t1.c1)IS(t1.c0 COLLATE BINARY)), t1.c1 COLLATE BINARY ASC LIMIT 1;
SELECT ALL * FROM t1 WHERE (x'') ORDER BY CASE WHEN (~ (t1.c1)) THEN (((t1.c1))<((t1.c1))) WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN t1.c0 WHEN (t1.c0 IN (t1.c0)) THEN (t1.c1 IN ()) WHEN 'iL' THEN (((NULL, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))) END DESC  NULLS LAST, (((t1.c0) ISNULL) IN (1778662627)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((x'')AND((((((t1.c0, t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0, t1.c0)) AND ((t1.c1, t1.c1, t1.c0, t1.c1))))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))))) ORDER BY (CAST(t1.c1 AS TEXT) IN ((NOT (t1.c0)))) DESC  NULLS FIRST, ((t1.c1)IS(t1.c0 COLLATE BINARY)), t1.c1 COLLATE BINARY ASC LIMIT 1;
SELECT * FROM t1 WHERE (CASE WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 END THEN t1.c1 ELSE t1.c0 COLLATE NOCASE END) ORDER BY CAST(((((t1.c1)OR(t1.c1)))OR(t1.c0)) AS INTEGER) ASC, CAST(CAST(t1.c1 AS TEXT) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CASE WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 END THEN t1.c1 ELSE t1.c0 COLLATE NOCASE END) ORDER BY t1.c0 COLLATE RTRIM ASC, t1.c1  NULLS LAST, ((((((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1)) AND ((x'94', t1.c1))), (t1.c1 IN ()), CAST(t1.c0 AS BLOB)))==(((t1.c1 IN (t1.c0)), ((t1.c0)*(t1.c0)), CAST(t1.c1 AS TEXT)))) ASC LIMIT 0X3;
SELECT * FROM t1 WHERE (CASE WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 END THEN t1.c1 ELSE t1.c0 COLLATE NOCASE END) ORDER BY CAST(((((t1.c1)OR(t1.c1)))OR(t1.c0)) AS INTEGER) ASC, CAST(CAST(t1.c1 AS TEXT) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CASE WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 END THEN t1.c1 ELSE t1.c0 COLLATE NOCASE END) ORDER BY t1.c0 COLLATE RTRIM ASC, t1.c1  NULLS LAST, ((((((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1)) AND ((x'94', t1.c1))), (t1.c1 IN ()), CAST(t1.c0 AS BLOB)))==(((t1.c1 IN (t1.c0)), ((t1.c0)*(t1.c0)), CAST(t1.c1 AS TEXT)))) ASC LIMIT 0X3;
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c1 COLLATE BINARY IN (x'ed', '-747868847')));
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c1 COLLATE BINARY IN (x'ed', '-747868847'))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY (NOT (((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))), LIKE((('-521905785') NOT BETWEEN (t1.c0) AND (t1.c1)), ((t1.c0)+(t1.c0))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY (NOT (((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))), LIKE((('-521905785') NOT BETWEEN (t1.c0) AND (t1.c1)), ((t1.c0)+(t1.c0))) ASC  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CASE NULL  WHEN (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c0))) THEN (t1.c0 IN ()) WHEN ((t1.c0)/(t1.c0)) THEN t1.c1 COLLATE RTRIM WHEN (((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1))) THEN (((t1.c1, t1.c1, '-1695022972'))>((t1.c1, t1.c1, t1.c1))) END) ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) AS INTEGER), ((((t1.c1) NOTNULL))-(NULL)) DESC  NULLS FIRST;
SELECT MAX(t1.c0) FROM t1 WHERE (CASE NULL  WHEN (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c0))) THEN (t1.c0 IN ()) WHEN ((t1.c0)/(t1.c0)) THEN t1.c1 COLLATE RTRIM WHEN (((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1))) THEN (((t1.c1, t1.c1, '-1695022972'))>((t1.c1, t1.c1, t1.c1))) END) ORDER BY ((((t1.c0) NOT NULL))>(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) DESC, ((t1.c1) NOT BETWEEN (((t1.c0)*(t1.c1))) AND (t1.c0)) DESC LIMIT 0X2 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (((0x56f7c4e2) NOT BETWEEN (t1.c1 COLLATE NOCASE) AND (((t1.c0)LIKE(t1.c1))))) ORDER BY ((((t1.c0) NOT NULL))>(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) DESC, ((t1.c1) NOT BETWEEN (((t1.c0)*(t1.c1))) AND (t1.c0)) DESC LIMIT 0x2;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (TRIM(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), ((t1.c1) ISNULL)));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (TRIM(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), ((t1.c1) ISNULL)));
SELECT * FROM t1 WHERE (CASE WHEN (~ (t1.c0)) THEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END END) ORDER BY CAST(x'f7' AS REAL);
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN (~ (t1.c0)) THEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END END)AND(((((t1.c1)<=(t1.c0))) IS FALSE)))) ORDER BY highlight(((t1.c1) BETWEEN (0.4448199500061435) AND (t1.c0)), (((t1.c0, t1.c1, t1.c1, t1.c0))>=((t1.c0, t1.c1, t1.c0, t1.c1))), CAST(t1.c0 AS NUMERIC), UPPER(DISTINCT t1.c1)), (((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) IN ())  NULLS LAST, ((t1.c1 COLLATE BINARY) NOT BETWEEN ((t1.c0 IN (t1.c0))) AND (MAX(t1.c0, t1.c0, t1.c0, t1.c1))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY highlight(((t1.c1) BETWEEN (0.4448199500061435) AND (t1.c0)), (((t1.c0, t1.c1, t1.c1, t1.c0))>=((t1.c0, t1.c1, t1.c0, t1.c1))), CAST(t1.c0 AS NUMERIC), UPPER(DISTINCT t1.c1)), (((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) IN ())  NULLS LAST, ((t1.c1 COLLATE BINARY) NOT BETWEEN ((t1.c0 IN (t1.c0))) AND (MAX(t1.c0, t1.c0, t1.c0, t1.c1)));
SELECT * FROM t1 WHERE (CASE WHEN (~ (t1.c0)) THEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END END) ORDER BY CAST(x'f7' AS REAL);
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN (~ (t1.c0)) THEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END END)AND(((((t1.c1)<=(t1.c0))) IS FALSE)))) ORDER BY highlight(((t1.c1) BETWEEN (0.4448199500061435) AND (t1.c0)), (((t1.c0, t1.c1, t1.c1, t1.c0))>=((t1.c0, t1.c1, t1.c0, t1.c1))), CAST(t1.c0 AS NUMERIC), UPPER(DISTINCT t1.c1)), (((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) IN ())  NULLS LAST, ((t1.c1 COLLATE BINARY) NOT BETWEEN ((t1.c0 IN (t1.c0))) AND (MAX(t1.c0, t1.c0, t1.c0, t1.c1))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY highlight(((t1.c1) BETWEEN (0.4448199500061435) AND (t1.c0)), (((t1.c0, t1.c1, t1.c1, t1.c0))>=((t1.c0, t1.c1, t1.c0, t1.c1))), CAST(t1.c0 AS NUMERIC), UPPER(DISTINCT t1.c1)), (((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) IN ())  NULLS LAST, ((t1.c1 COLLATE BINARY) NOT BETWEEN ((t1.c0 IN (t1.c0))) AND (MAX(t1.c0, t1.c0, t1.c0, t1.c1)));
SELECT ALL * FROM t1 WHERE (CASE WHEN (((t1.c1))>=((NULL))) THEN (t1.c1 IN (t1.c1)) WHEN ((t1.c1) NOT NULL) THEN ((((((NULL)AND(0.6301659967476904)))OR(t1.c1)))OR(t1.c0)) WHEN (NULL IN (t1.c0, t1.c0)) THEN CAST(t1.c1 AS REAL) ELSE (((t1.c1, t1.c1))=((t1.c1, t1.c1))) END);
SELECT ALL * FROM t1 WHERE (CASE WHEN (((t1.c1))>=((NULL))) THEN (t1.c1 IN (t1.c1)) WHEN ((t1.c1) NOT NULL) THEN ((((((NULL)AND(0.6301659967476904)))OR(t1.c1)))OR(t1.c0)) WHEN (NULL IN (t1.c0, t1.c0)) THEN CAST(t1.c1 AS REAL) ELSE (((t1.c1, t1.c1))=((t1.c1, t1.c1))) END) ORDER BY CASE WHEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c1) NOT NULL) WHEN t1.c1 THEN ((t1.c0) NOTNULL) WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END THEN ((((t1.c1)OR(t1.c1)))AND(t1.c1)) ELSE CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '枾' ELSE t1.c0 END END ASC  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE ((NOT (CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END))) ORDER BY CASE WHEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c1) NOT NULL) WHEN t1.c1 THEN ((t1.c0) NOTNULL) WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END THEN ((((t1.c1)OR(t1.c1)))AND(t1.c1)) ELSE CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '枾' ELSE t1.c0 END END ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE WHEN (((t1.c1))>=((NULL))) THEN (t1.c1 IN (t1.c1)) WHEN ((t1.c1) NOT NULL) THEN ((((((NULL)AND(0.6301659967476904)))OR(t1.c1)))OR(t1.c0)) WHEN (NULL IN (t1.c0, t1.c0)) THEN CAST(t1.c1 AS REAL) ELSE (((t1.c1, t1.c1))=((t1.c1, t1.c1))) END);
SELECT ALL * FROM t1 WHERE (CASE WHEN (((t1.c1))>=((NULL))) THEN (t1.c1 IN (t1.c1)) WHEN ((t1.c1) NOT NULL) THEN ((((((NULL)AND(0.6301659967476904)))OR(t1.c1)))OR(t1.c0)) WHEN (NULL IN (t1.c0, t1.c0)) THEN CAST(t1.c1 AS REAL) ELSE (((t1.c1, t1.c1))=((t1.c1, t1.c1))) END) ORDER BY CASE WHEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c1) NOT NULL) WHEN t1.c1 THEN ((t1.c0) NOTNULL) WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END THEN ((((t1.c1)OR(t1.c1)))AND(t1.c1)) ELSE CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '枾' ELSE t1.c0 END END ASC  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE ((NOT (CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END))) ORDER BY CASE WHEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c1) NOT NULL) WHEN t1.c1 THEN ((t1.c0) NOTNULL) WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END THEN ((((t1.c1)OR(t1.c1)))AND(t1.c1)) ELSE CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '枾' ELSE t1.c0 END END ASC  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE (((((t1.c1)IS(t1.c1))) BETWEEN (JULIANDAY(t1.c0, t1.c0, t1.c1)) AND ((t1.c0 IN (t1.c0))))) ORDER BY ((((+ (t1.c1)), ((t1.c1) IS FALSE)))>=(('qx' COLLATE NOCASE, 0.8268028881874668))) DESC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((((t1.c1)IS(t1.c1))) BETWEEN (JULIANDAY(t1.c0, t1.c0, t1.c1)) AND ((t1.c0 IN (t1.c0)))))AND('-197006033'))) ORDER BY ((((+ (t1.c1)), ((t1.c1) IS FALSE)))>=(('qx' COLLATE NOCASE, 0.8268028881874668))) DESC;
SELECT * FROM t1 WHERE (((t1.c1)GLOB(x'')) COLLATE NOCASE);
SELECT * FROM t1 WHERE (((t1.c1)GLOB(x'')) COLLATE NOCASE) LIMIT 2;
SELECT * FROM t1 WHERE (((t1.c1)GLOB(x'')) COLLATE NOCASE);
SELECT * FROM t1 WHERE (((t1.c1)GLOB(x'')) COLLATE NOCASE) LIMIT 2;
SELECT * FROM t1 WHERE ((((((((t1.c1)AND(x'49')))AND(t1.c1)), NULL, CAST(t1.c1 AS REAL), (((t1.c0))>=((t1.c0)))))<=((t1.c1 COLLATE NOCASE, ((t1.c0) IS FALSE), ((0.06879918697058651)||(NULL)), (t1.c0 IN ()))))) ORDER BY (+ ((- (t1.c1)))), (((t1.c0 IN ()))>(CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((((((((t1.c1)AND(x'49')))AND(t1.c1)), NULL, CAST(t1.c1 AS REAL), (((t1.c0))>((t1.c0)))))<((t1.c1 COLLATE NOCASE, ((t1.c0) IS FALSE), ((0.06879918697058651)||(NULL)), (t1.c0 IN ())))))AND((((('0.6602283942757515' COLLATE NOCASE)AND(((t1.c0)LIKE(x'0d')))))OR(LOWER(t1.c1)))))) ORDER BY (+ ((- (t1.c1)))), (((t1.c0 IN ()))>(CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END))  NULLS LAST;
SELECT * FROM t1 WHERE ((((((((t1.c1)AND(x'49')))AND(t1.c1)), NULL, CAST(t1.c1 AS REAL), (((t1.c0))>=((t1.c0)))))<=((t1.c1 COLLATE NOCASE, ((t1.c0) IS FALSE), ((0.06879918697058651)||(NULL)), (t1.c0 IN ()))))) ORDER BY (+ ((- (t1.c1)))), (((t1.c0 IN ()))>(CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((((((((t1.c1)AND(x'49')))AND(t1.c1)), NULL, CAST(t1.c1 AS REAL), (((t1.c0))>((t1.c0)))))<((t1.c1 COLLATE NOCASE, ((t1.c0) IS FALSE), ((0.06879918697058651)||(NULL)), (t1.c0 IN ())))))AND((((('0.6602283942757515' COLLATE NOCASE)AND(((t1.c0)LIKE(x'0d')))))OR(LOWER(t1.c1)))))) ORDER BY (+ ((- (t1.c1)))), (((t1.c0 IN ()))>(CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END))  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE WHEN (NOT (t1.c0)) THEN (t1.c0 IN (t1.c0)) END) ORDER BY (((NOT (t1.c0))) NOT BETWEEN (CAST(0.24700308675744176 AS INTEGER)) AND (((((t1.c0)AND(t1.c0)))OR(t1.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CASE WHEN (NOT (t1.c0)) THEN (t1.c0 IN (t1.c0)) END)AND(CASE WHEN ((t1.c1)IS(t1.c0)) THEN (((t1.c0, t1.c1))<>((t1.c1, t1.c1))) WHEN t1.c0 COLLATE BINARY THEN t1.c0 COLLATE RTRIM ELSE ((t1.c0)AND(t1.c0)) END))) ORDER BY t1.c1  NULLS FIRST, CAST(((t1.c0)>=(t1.c1)) AS NUMERIC) DESC  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((NOT (0.7930854740476548))) ORDER BY t1.c1  NULLS FIRST, CAST(((t1.c0)>=(t1.c1)) AS NUMERIC) DESC  NULLS LAST LIMIT 2;
SELECT MIN(t1.c1) FROM t1 WHERE (CASE WHEN LIKELIHOOD(t1.c1, t1.c1) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END END);
SELECT MIN(t1.c1) FROM t1 WHERE (((CASE WHEN LIKELIHOOD(t1.c1, t1.c1) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END END)AND(((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) COLLATE NOCASE))) INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (x'');
SELECT ALL * FROM t1 WHERE (((((t1.c0)+(t1.c1))) NOT BETWEEN (((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1))) AND (UPPER(t1.c1)))) ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) IN ()) ASC  NULLS LAST, (((- (t1.c0)))<=((t1.c0 IN (t1.c0))))  NULLS LAST, t1.c0 DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)+(t1.c1))) NOT BETWEEN (((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1))) AND (UPPER(t1.c1)))) ORDER BY ((CAST(t1.c0 AS TEXT)) ISNULL) DESC  NULLS LAST, (((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) IN (t1.c1 COLLATE NOCASE, ((1.771950567E9)>>(t1.c1)))) DESC;
SELECT ALL * FROM t1 WHERE (((((t1.c0)+(t1.c1))) NOT BETWEEN (((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1))) AND (UPPER(t1.c1)))) ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) IN ()) ASC  NULLS LAST, (((- (t1.c0)))<=((t1.c0 IN (t1.c0))))  NULLS LAST, t1.c0 DESC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((~ ((t1.c0 IN ()))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((~ ((t1.c0 IN ()))))AND(t1.c1))) ORDER BY CAST(t1.c0 COLLATE RTRIM AS REAL) ASC  NULLS LAST, ((t1.c1 IN (t1.c1)) IN ((t1.c1 IN (0.5937763465398371, t1.c1))))  NULLS FIRST;
SELECT * FROM t1 WHERE (LIKELY(DISTINCT ((t1.c1)>(t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (LIKELY(DISTINCT ((t1.c1)>(t1.c1)))) ORDER BY ((((((t1.c1)AND(t1.c1)))AND(NULL)))IS NOT((('a蓼3zr') BETWEEN (t1.c1) AND (t1.c1)))), ((((0.8103619810412441)&(t1.c0))) NOTNULL)  NULLS FIRST;
SELECT * FROM t1 WHERE (LIKELY(DISTINCT ((t1.c1)>(t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (LIKELY(DISTINCT ((t1.c1)>(t1.c1)))) ORDER BY ((((((t1.c1)AND(t1.c1)))AND(NULL)))IS NOT((('a蓼3zr') BETWEEN (t1.c1) AND (t1.c1)))), ((((0.8103619810412441)&(t1.c0))) NOTNULL)  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE (CAST(CAST(t1.c0 AS REAL) AS TEXT));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CAST(CAST(t1.c0 AS REAL) AS TEXT))AND(((((0.3700230492342973)-(t1.c0))) NOT BETWEEN (((t1.c1) IS FALSE)) AND ((t1.c0 IN (t1.c0, t1.c1))))))) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CASE WHEN ('r' IN (t1.c0, t1.c0)) THEN ((t1.c1)LIKE(t1.c1)) WHEN '%j⺵%Vz' THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) END);
SELECT * FROM t1 WHERE (((((((((((x'ac')AND(((t1.c1) NOT NULL))))AND((((t1.c1))<((t1.c1))))))AND(NULL)))AND(((((((((((t1.c0)AND(x'73')))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(t1.c1)))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY (((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, x'19', t1.c0 COLLATE BINARY))<(((((t1.c0, t1.c1, 0.6602283942757515, t1.c0))!=(('0.7326516555029623', t1.c0, t1.c1, t1.c0))), 0.7813300972572707, '3k_m,'))) ASC  NULLS FIRST, ((t1.c0)>=(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END));
SELECT DISTINCT * FROM t1 WHERE (((((((((((x'ac')AND(((t1.c1) NOT NULL))))AND((((t1.c1))<((t1.c1))))))AND(NULL)))AND(((((((((((t1.c0)AND(x'73')))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(t1.c1)))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY (((t1.c1)+(t1.c0)) IN ('~GI')), ((((t1.c1)GLOB(t1.c1))) ISNULL) LIMIT 0X2;
SELECT * FROM t1 WHERE (((((((((((x'ac')AND(((t1.c1) NOT NULL))))AND((((t1.c1))<((t1.c1))))))AND(NULL)))AND(((((((((((t1.c0)AND(x'73')))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(t1.c1)))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY (((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, x'19', t1.c0 COLLATE BINARY))<(((((t1.c0, t1.c1, 0.6602283942757515, t1.c0))!=(('0.7326516555029623', t1.c0, t1.c1, t1.c0))), 0.7813300972572707, '3k_m,'))) ASC  NULLS FIRST, ((t1.c0)>=(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END));
SELECT DISTINCT * FROM t1 WHERE (((((((((((x'ac')AND(((t1.c1) NOT NULL))))AND((((t1.c1))<((t1.c1))))))AND(NULL)))AND(((((((((((t1.c0)AND(x'73')))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(t1.c1)))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY (((t1.c1)+(t1.c0)) IN ('~GI')), ((((t1.c1)GLOB(t1.c1))) ISNULL) LIMIT 0X2;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ('-944334593') ORDER BY (x'40' IN ()) COLLATE BINARY COLLATE BINARY  NULLS LAST, ((((t1.c1) NOTNULL))<<(t1.c0 COLLATE NOCASE));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ('-944334593') ORDER BY (x'40' IN ()) COLLATE BINARY COLLATE BINARY  NULLS LAST, ((((t1.c1) NOTNULL))<<(t1.c0 COLLATE NOCASE)) LIMIT 0 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (CAST(CAST(t1.c1 AS REAL) AS INTEGER)) ORDER BY (x'40' IN ()) COLLATE BINARY COLLATE BINARY  NULLS LAST, ((((t1.c1) NOTNULL))<<(t1.c0 COLLATE NOCASE)) LIMIT 0;
SELECT * FROM t1 WHERE (((((((((CAST(t1.c0 AS INTEGER))AND(((t1.c1)&(t1.c1)))))OR(t1.c0)))OR((t1.c1 IN (t1.c1)))))AND(t1.c1)));
SELECT * FROM t1 WHERE (((((((((CAST(t1.c0 AS INTEGER))AND(((t1.c1)&(t1.c1)))))OR(t1.c0)))OR((t1.c1 IN (t1.c1)))))AND(t1.c1))) ORDER BY CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1))  WHEN t1.c0 THEN (t1.c1 IN (t1.c0, t1.c1, t1.c1)) WHEN t1.c1 COLLATE RTRIM THEN ((t1.c1)<(t1.c0)) ELSE ((NULL)+(NULL)) END;
SELECT * FROM t1 WHERE (((((((((CAST(t1.c0 AS INTEGER))AND(((t1.c1)&(t1.c1)))))OR(t1.c0)))OR((t1.c1 IN (t1.c1)))))AND(t1.c1)));
SELECT * FROM t1 WHERE (((((((((CAST(t1.c0 AS INTEGER))AND(((t1.c1)&(t1.c1)))))OR(t1.c0)))OR((t1.c1 IN (t1.c1)))))AND(t1.c1))) ORDER BY CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1))  WHEN t1.c0 THEN (t1.c1 IN (t1.c0, t1.c1, t1.c1)) WHEN t1.c1 COLLATE RTRIM THEN ((t1.c1)<(t1.c0)) ELSE ((NULL)+(NULL)) END;
SELECT * FROM t1 WHERE ((((((t1.c1)OR(t1.c1)))AND(t1.c0)) IN ((t1.c0 IN (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)OR(t1.c1)))AND(t1.c0)) IN ((t1.c0 IN (t1.c1))))) LIMIT 1;
SELECT * FROM t1 WHERE ((((((t1.c1)OR(t1.c1)))AND(t1.c0)) IN ((t1.c0 IN (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)OR(t1.c1)))AND(t1.c0)) IN ((t1.c0 IN (t1.c1))))) LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((t1.c1) NOTNULL) IN ())) ORDER BY (((((t1.c1, t1.c0))<=((t1.c0, t1.c0)))) BETWEEN (((t1.c1)GLOB('^'))) AND (((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))) ASC;
SELECT * FROM t1 WHERE ((((t1.c1) NOTNULL) IN ())) ORDER BY (((t1.c0 IN (3.53841469E8))) NOT BETWEEN ((((((((('j투S_y<￿Im')OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(x''))) AND (((((t1.c0)AND(t1.c1)))OR(t1.c1)))) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE '73796322' END IN (((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY (((t1.c0 IN (3.53841469E8))) NOT BETWEEN ((((((((('j투S_y<￿Im')OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(x''))) AND (((((t1.c0)AND(t1.c1)))OR(t1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c1) NOTNULL) IN ())) ORDER BY (((((t1.c1, t1.c0))<=((t1.c0, t1.c0)))) BETWEEN (((t1.c1)GLOB('^'))) AND (((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))) ASC;
SELECT * FROM t1 WHERE ((((t1.c1) NOTNULL) IN ())) ORDER BY (((t1.c0 IN (3.53841469E8))) NOT BETWEEN ((((((((('j투S_y<￿Im')OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(x''))) AND (((((t1.c0)AND(t1.c1)))OR(t1.c1)))) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE '73796322' END IN (((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY (((t1.c0 IN (3.53841469E8))) NOT BETWEEN ((((((((('j투S_y<￿Im')OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(x''))) AND (((((t1.c0)AND(t1.c1)))OR(t1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN '-809746133' WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '9' END)%(t1.c1 COLLATE NOCASE))) ORDER BY CAST((t1.c1 IN ()) AS INTEGER) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN '-809746133' WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '9' END)%(t1.c1 COLLATE NOCASE)))AND(((t1.c0)<=(t1.c0)) COLLATE NOCASE))) ORDER BY CAST((t1.c1 IN ()) AS INTEGER) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0) NOT NULL)))<((((t1.c1) NOTNULL))))) ORDER BY CAST((t1.c1 IN ()) AS INTEGER) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN '-809746133' WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '9' END)%(t1.c1 COLLATE NOCASE))) ORDER BY CAST((t1.c1 IN ()) AS INTEGER) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN '-809746133' WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '9' END)%(t1.c1 COLLATE NOCASE)))AND(((t1.c0)<=(t1.c0)) COLLATE NOCASE))) ORDER BY CAST((t1.c1 IN ()) AS INTEGER) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0) NOT NULL)))<((((t1.c1) NOTNULL))))) ORDER BY CAST((t1.c1 IN ()) AS INTEGER) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0))  WHEN (NOT (t1.c1)) THEN 0x32e5b185 WHEN CAST(t1.c1 AS BLOB) THEN CASE WHEN '雙' THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL ELSE 0.41110500135003936 END END);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE ((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0))  WHEN (NOT (t1.c1)) THEN 0x32e5b185 WHEN CAST(t1.c1 AS BLOB) THEN CASE WHEN '雙' THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL ELSE 0.41110500135003936 END END)AND(0.5038384146329737)));
SELECT * FROM t1 WHERE ((((((t1.c0))<((t1.c1))))<>(t1.c1)));
SELECT ALL * FROM t1 WHERE ((((((t1.c0))<((t1.c1))))!=(t1.c1))) LIMIT 0X3;
SELECT * FROM t1 WHERE ((((((t1.c0))<((t1.c1))))<>(t1.c1)));
SELECT ALL * FROM t1 WHERE ((((((t1.c0))<((t1.c1))))!=(t1.c1))) LIMIT 0X3;
SELECT * FROM t1 WHERE ((NOT (((t1.c1)AND(t1.c0))))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (-427094277)))IS((t1.c1 IN (t1.c0))))  NULLS FIRST;
SELECT * FROM t1 WHERE ((NOT (((t1.c1)AND(t1.c0))))) ORDER BY ((((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR('3㣢s')))OR(t1.c0)) COLLATE RTRIM, ((t1.c1)<(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) DESC;
SELECT * FROM t1 WHERE ((NOT (((t1.c1)AND(t1.c0))))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (-427094277)))IS((t1.c1 IN (t1.c0))))  NULLS FIRST;
SELECT * FROM t1 WHERE ((NOT (((t1.c1)AND(t1.c0))))) ORDER BY ((((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR('3㣢s')))OR(t1.c0)) COLLATE RTRIM, ((t1.c1)<(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) DESC;
SELECT ALL * FROM t1 WHERE (x'01b89f') ORDER BY 0.6037681107236285 DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (x'01b89f') ORDER BY (((t1.c1 IN (t1.c0)))IS(t1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (x'01b89f') ORDER BY 0.6037681107236285 DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (x'01b89f') ORDER BY (((t1.c1 IN (t1.c0)))IS(t1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT ALL * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) IN ()));
SELECT * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) IN ())) LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (json_valid((t1.c0 IN ()))) LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) IN ()));
SELECT * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) IN ())) LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (json_valid((t1.c0 IN ()))) LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))))AND(TRIM(NULL, ((t1.c0)>(t1.c0)))))) LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (x'') LIMIT 1;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((614619552)>=(t1.c0)) COLLATE BINARY) ORDER BY (((t1.c0, t1.c1, t1.c0, t1.c1)) BETWEEN (((t1.c1 IN (t1.c0)), (t1.c1 IN (t1.c1)), ((t1.c0)AND(0.9520305877013687)), (t1.c0 IN ()))) AND ((((((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)), ((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)), (t1.c0 IN ()), (t1.c1 IN (t1.c1, t1.c1))))) ASC, CAST(((t1.c1) NOTNULL) AS INTEGER);
SELECT MIN(t1.c1) FROM t1 WHERE (((((0x24a259a0)>(t1.c0)) COLLATE BINARY)AND(((NULL) ISNULL)))) ORDER BY (((t1.c0, t1.c1, t1.c0, t1.c1)) BETWEEN (((t1.c1 IN (t1.c0)), (t1.c1 IN (t1.c1)), ((t1.c0)AND(0.9520305877013687)), (t1.c0 IN ()))) AND ((((((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)), ((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)), (t1.c0 IN ()), (t1.c1 IN (t1.c1, t1.c1))))) ASC, CAST(((t1.c1) NOTNULL) AS INTEGER) LIMIT 0X0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((((((~ (t1.c1)))AND(((t1.c0)<>(t1.c1)))))OR((((-843171496, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c0, NULL, t1.c0))))))AND((- (t1.c0)))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((((~ (t1.c1)))AND(((t1.c0)<(t1.c1)))))OR((((0Xffffffffcdbe3958, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c0, NULL, t1.c0))))))AND((- (t1.c0))))) LIMIT 0;
SELECT MIN(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY UPPER(DISTINCT LTRIM(NULL, t1.c0)) ASC  NULLS FIRST, ((((((((' [dVPf9奅c')OR(x'')))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c1) NOT BETWEEN (0.057340326971566546) AND (t1.c0)))))AND(t1.c1 COLLATE BINARY)), t1.c1, ((((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))OR('-1966918912')))IS NOT(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END));
SELECT MIN(t1.c1) FROM t1 WHERE (((t1.c1)AND(t1.c0))) ORDER BY UPPER(DISTINCT LTRIM(NULL, t1.c0)) ASC  NULLS FIRST, ((((((((' [dVPf9奅c')OR(x'')))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c1) NOT BETWEEN (0.057340326971566546) AND (t1.c0)))))AND(t1.c1 COLLATE BINARY)), t1.c1, ((((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))OR('-1966918912')))IS NOT(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)) INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (0.313953974958725) ORDER BY UPPER(DISTINCT LTRIM(NULL, t1.c0)) ASC  NULLS FIRST, ((((((((' [dVPf9奅c')OR(x'')))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c1) NOT BETWEEN (0.057340326971566546) AND (t1.c0)))))AND(t1.c1 COLLATE BINARY)), t1.c1, ((((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))OR('-1966918912')))IS NOT(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END));
SELECT ALL * FROM t1 WHERE ((((((t1.c0))=((t1.c1)))) NOT BETWEEN ((+ (t1.c1))) AND (CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))) ORDER BY (((((((t1.c0)AND(t1.c1)))AND(t1.c0)), t1.c1 COLLATE NOCASE))<>(((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))), ((t1.c1) IS TRUE)))) DESC;
SELECT ALL * FROM t1 WHERE ((((((((t1.c0))<=((t1.c1)))) NOT BETWEEN ((+ (t1.c1))) AND (CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)))AND(t1.c1))) ORDER BY ((((JULIANDAY(t1.c0, t1.c0, t1.c1))OR(((x'aa')||(t1.c0)))))OR(t1.c0)) DESC  NULLS LAST, t1.c0 COLLATE RTRIM ASC  NULLS FIRST, ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)<=((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))))) DESC  NULLS LAST LIMIT 0X1 INTERSECT SELECT * FROM t1 WHERE (x'') ORDER BY ((((JULIANDAY(t1.c0, t1.c0, t1.c1))OR(((x'aa')||(t1.c0)))))OR(t1.c0)) DESC  NULLS LAST, t1.c0 COLLATE RTRIM ASC  NULLS FIRST, ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)<=((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))))) DESC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((((((t1.c0))=((t1.c1)))) NOT BETWEEN ((+ (t1.c1))) AND (CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))) ORDER BY (((((((t1.c0)AND(t1.c1)))AND(t1.c0)), t1.c1 COLLATE NOCASE))<>(((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))), ((t1.c1) IS TRUE)))) DESC;
SELECT ALL * FROM t1 WHERE ((((((((t1.c0))<=((t1.c1)))) NOT BETWEEN ((+ (t1.c1))) AND (CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)))AND(t1.c1))) ORDER BY ((((JULIANDAY(t1.c0, t1.c0, t1.c1))OR(((x'aa')||(t1.c0)))))OR(t1.c0)) DESC  NULLS LAST, t1.c0 COLLATE RTRIM ASC  NULLS FIRST, ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)<=((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))))) DESC  NULLS LAST LIMIT 0X1 INTERSECT SELECT * FROM t1 WHERE (x'') ORDER BY ((((JULIANDAY(t1.c0, t1.c0, t1.c1))OR(((x'aa')||(t1.c0)))))OR(t1.c0)) DESC  NULLS LAST, t1.c0 COLLATE RTRIM ASC  NULLS FIRST, ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)<=((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))))) DESC  NULLS LAST LIMIT 0X1;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ()));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ())) INTERSECT SELECT COUNT(*) FROM t1 WHERE (((((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))OR(SQLITE_COMPILEOPTION_USED(t1.c1))))OR(((t1.c0)<(t1.c0)))))OR((NULL IN (t1.c1, t1.c1)))));
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0)IS(x'd1e7'))  WHEN ((t1.c1) BETWEEN (t1.c1) AND (x'69')) THEN NULL WHEN (NOT (t1.c1)) THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN (t1.c0 IN (NULL)) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.041374768243308435 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((t1.c0)>(t1.c0)) THEN NULL END);
SELECT ALL * FROM t1 WHERE (((CASE ((t1.c0)IS(x'd1e7'))  WHEN ((t1.c1) BETWEEN (t1.c1) AND (x'69')) THEN NULL WHEN (NOT (t1.c1)) THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN (t1.c0 IN (NULL)) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.041374768243308435 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((t1.c0)>(t1.c0)) THEN NULL END)AND(''))) LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE ((~ (((t1.c0) ISNULL)))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0)IS(x'd1e7'))  WHEN ((t1.c1) BETWEEN (t1.c1) AND (x'69')) THEN NULL WHEN (NOT (t1.c1)) THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN (t1.c0 IN (NULL)) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.041374768243308435 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((t1.c0)>(t1.c0)) THEN NULL END);
SELECT ALL * FROM t1 WHERE (((CASE ((t1.c0)IS(x'd1e7'))  WHEN ((t1.c1) BETWEEN (t1.c1) AND (x'69')) THEN NULL WHEN (NOT (t1.c1)) THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN (t1.c0 IN (NULL)) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.041374768243308435 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((t1.c0)>(t1.c0)) THEN NULL END)AND(''))) LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE ((~ (((t1.c0) ISNULL)))) LIMIT 0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))AND(t1.c1)));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))AND(t1.c1))) ORDER BY (('FO9蓼j' IN (t1.c0)) IN ((t1.c0 IN ()), CASE t1.c1  WHEN t1.c1 THEN t1.c0 END))  NULLS FIRST, t1.c0 ASC, ((((((t1.c1)OR(t1.c1)))OR(t1.c1))) BETWEEN (t1.c0 COLLATE BINARY) AND ((+ (t1.c0))));
SELECT MAX(t1.c1) FROM t1 WHERE ((((t1.c1 IN (t1.c1)))<<(CAST('582871466' AS INTEGER)))) ORDER BY ((((((TRIM(DISTINCT t1.c0))OR((((t1.c1, NULL, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((x'8f67', t1.c1, t1.c1))))))OR(HEX(t1.c0))))AND(t1.c0)) DESC  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((t1.c1 IN (t1.c1)))<<(CAST('582871466' AS INTEGER)))) ORDER BY ((((((TRIM(DISTINCT t1.c0))OR((((t1.c1, NULL, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((x'8f67', t1.c1, t1.c1))))))OR(HEX(t1.c0))))AND(t1.c0)) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE t1.c1  WHEN SUBSTR(t1.c1, t1.c0) THEN CAST(t1.c1 AS INTEGER) ELSE CASE t1.c0  WHEN t1.c1 THEN t1.c1 END END) ORDER BY (+ (t1.c0)) COLLATE NOCASE DESC;
SELECT * FROM t1 WHERE (((CASE t1.c1  WHEN SUBSTR(t1.c1, t1.c0) THEN CAST(t1.c1 AS INTEGER) ELSE CASE t1.c0  WHEN t1.c1 THEN t1.c1 END END)AND(((((((-1628956291)AND('&sn')))AND(((((t1.c1)OR(t1.c0)))AND(t1.c0)))))AND((('') BETWEEN (t1.c0) AND (t1.c1))))))) ORDER BY (+ (t1.c0)) COLLATE NOCASE DESC LIMIT 0;
SELECT ALL * FROM t1 WHERE (CASE t1.c1  WHEN SUBSTR(t1.c1, t1.c0) THEN CAST(t1.c1 AS INTEGER) ELSE CASE t1.c0  WHEN t1.c1 THEN t1.c1 END END) ORDER BY (+ (t1.c0)) COLLATE NOCASE DESC;
SELECT * FROM t1 WHERE (((CASE t1.c1  WHEN SUBSTR(t1.c1, t1.c0) THEN CAST(t1.c1 AS INTEGER) ELSE CASE t1.c0  WHEN t1.c1 THEN t1.c1 END END)AND(((((((-1628956291)AND('&sn')))AND(((((t1.c1)OR(t1.c0)))AND(t1.c0)))))AND((('') BETWEEN (t1.c0) AND (t1.c1))))))) ORDER BY (+ (t1.c0)) COLLATE NOCASE DESC LIMIT 0;
SELECT * FROM t1 WHERE (((NULLIF(NULL, t1.c1))IS NOT(t1.c0 COLLATE NOCASE)));
SELECT * FROM t1 WHERE (((NULLIF(NULL, t1.c1))IS NOT(t1.c0 COLLATE NOCASE))) ORDER BY ABS(DISTINCT (~ (t1.c1))) ASC, NULLIF(DISTINCT t1.c1, t1.c1 COLLATE BINARY) ASC  NULLS LAST, t1.c0 DESC, ((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))OR('-687481056'))) ISNULL), LIKELIHOOD(t1.c1 COLLATE RTRIM, t1.c0 COLLATE RTRIM) DESC INTERSECT SELECT ALL * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)GLOB(CASE WHEN t1.c1 THEN t1.c1 END))) ORDER BY ABS(DISTINCT (~ (t1.c1))) ASC, NULLIF(DISTINCT t1.c1, t1.c1 COLLATE BINARY) ASC  NULLS LAST, t1.c0 DESC, ((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))OR('-687481056'))) ISNULL), LIKELIHOOD(t1.c1 COLLATE RTRIM, t1.c0 COLLATE RTRIM) DESC;
SELECT * FROM t1 WHERE (((NULLIF(NULL, t1.c1))IS NOT(t1.c0 COLLATE NOCASE)));
SELECT * FROM t1 WHERE (((NULLIF(NULL, t1.c1))IS NOT(t1.c0 COLLATE NOCASE))) ORDER BY ABS(DISTINCT (~ (t1.c1))) ASC, NULLIF(DISTINCT t1.c1, t1.c1 COLLATE BINARY) ASC  NULLS LAST, t1.c0 DESC, ((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))OR('-687481056'))) ISNULL), LIKELIHOOD(t1.c1 COLLATE RTRIM, t1.c0 COLLATE RTRIM) DESC INTERSECT SELECT ALL * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)GLOB(CASE WHEN t1.c1 THEN t1.c1 END))) ORDER BY ABS(DISTINCT (~ (t1.c1))) ASC, NULLIF(DISTINCT t1.c1, t1.c1 COLLATE BINARY) ASC  NULLS LAST, t1.c0 DESC, ((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))OR('-687481056'))) ISNULL), LIKELIHOOD(t1.c1 COLLATE RTRIM, t1.c0 COLLATE RTRIM) DESC;
SELECT * FROM t1 WHERE (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END COLLATE BINARY) ORDER BY ((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))+((- (t1.c0)))) DESC;
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END COLLATE BINARY)AND((((t1.c0)IS(t1.c1)) IN (((t1.c0) ISNULL)))))) ORDER BY NULL DESC, (- (((t1.c1) NOTNULL))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END COLLATE BINARY) ORDER BY ((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))+((- (t1.c0)))) DESC;
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END COLLATE BINARY)AND((((t1.c0)IS(t1.c1)) IN (((t1.c0) ISNULL)))))) ORDER BY NULL DESC, (- (((t1.c1) NOTNULL))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))==((((t1.c0)) NOT BETWEEN ((0.15946198673271883)) AND ((t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))=((((t1.c0)) NOT BETWEEN ((0.15946198673271883)) AND ((t1.c1)))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0 IN (t1.c0))) BETWEEN (UNICODE(x'')) AND ((t1.c1 IN ()))));
SELECT * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))==((((t1.c0)) NOT BETWEEN ((0.15946198673271883)) AND ((t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))=((((t1.c0)) NOT BETWEEN ((0.15946198673271883)) AND ((t1.c1)))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0 IN (t1.c0))) BETWEEN (UNICODE(x'')) AND ((t1.c1 IN ()))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (+ (NULLIF(DISTINCT t1.c0, t1.c1))) DESC  NULLS LAST, t1.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (+ (NULLIF(DISTINCT t1.c0, t1.c1))) DESC  NULLS LAST, t1.c0 DESC  NULLS FIRST LIMIT 0;
SELECT MIN(t1.c1) FROM t1 WHERE (((TRIM(t1.c0)) NOT BETWEEN ((((t1.c1))>((t1.c1)))) AND (t1.c0 COLLATE NOCASE))) ORDER BY (((((t1.c1, t1.c0))<(('o', t1.c1)))) ISNULL);
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((TRIM(t1.c0)) NOT BETWEEN ((((t1.c1))>((t1.c1)))) AND (t1.c0 COLLATE NOCASE)))AND(CAST(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END AS REAL)))) ORDER BY (((((t1.c1, t1.c0))<(('o', t1.c1)))) ISNULL) LIMIT 0 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (t1.c1 COLLATE BINARY) ORDER BY (((((t1.c1, t1.c0))<(('o', t1.c1)))) ISNULL) LIMIT 0x0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, x'd0fc')))) IS TRUE)) ORDER BY ((((((t1.c0)AND(t1.c1)))OR(0.7956023557146349)))-(((t1.c1) BETWEEN (NULL) AND (t1.c1))))  NULLS FIRST, ((NOT (t1.c1)) IN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))) DESC;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, x'd0fc')))) IS TRUE)) ORDER BY ((CAST(t1.c1 AS INTEGER)) BETWEEN ((((t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c1)))) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))), CAST((~ (t1.c1)) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c1 AS BLOB));
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c1 AS BLOB))AND(t1.c0))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (TRIM(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), NULL)) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((TRIM(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), NULL))AND(((TRIM(t1.c0))<>(((t1.c0) NOT BETWEEN (NULL) AND (t1.c0))))))) ORDER BY t1.c0 ASC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t1 WHERE (TRIM(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), NULL)) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((TRIM(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), NULL))AND(((TRIM(t1.c0))<>(((t1.c0) NOT BETWEEN (NULL) AND (t1.c0))))))) ORDER BY t1.c0 ASC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c1)GLOB(t1.c0)) THEN ((t1.c1) ISNULL) WHEN ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)) THEN t1.c1 WHEN ((t1.c0)-(t1.c0)) THEN ((t1.c0)>(t1.c0)) END);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c1)GLOB(t1.c0)) THEN ((t1.c1) ISNULL) WHEN ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)) THEN t1.c1 WHEN ((t1.c0)-(t1.c0)) THEN ((t1.c0)>(t1.c0)) END) INTERSECT SELECT * FROM t1 WHERE ((+ (t1.c0)) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c1)GLOB(t1.c0)) THEN ((t1.c1) ISNULL) WHEN ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)) THEN t1.c1 WHEN ((t1.c0)-(t1.c0)) THEN ((t1.c0)>(t1.c0)) END);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c1)GLOB(t1.c0)) THEN ((t1.c1) ISNULL) WHEN ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)) THEN t1.c1 WHEN ((t1.c0)-(t1.c0)) THEN ((t1.c0)>(t1.c0)) END) INTERSECT SELECT * FROM t1 WHERE ((+ (t1.c0)) COLLATE RTRIM);
SELECT * FROM t1 WHERE (CASE WHEN LIKELIHOOD(t1.c1, t1.c1) THEN ((((t1.c1)OR(t1.c0)))OR(t1.c1)) END);
SELECT * FROM t1 WHERE (((CASE WHEN LIKELIHOOD(t1.c1, t1.c1) THEN ((((t1.c1)OR(t1.c0)))OR(t1.c1)) END)AND(((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))>(((t1.c1)AND(t1.c1))))))) ORDER BY ((NULL) IS TRUE), ((((t1.c0)%('T_')))||(((t1.c0) ISNULL))) ASC, t1.c0 DESC LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ((((('')&(t1.c0)))||(CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))) ORDER BY ((NULL) IS TRUE), ((((t1.c0)%('T_')))||(((t1.c0) ISNULL))) ASC, t1.c0 DESC LIMIT 0x0;
SELECT * FROM t1 WHERE (CASE WHEN LIKELIHOOD(t1.c1, t1.c1) THEN ((((t1.c1)OR(t1.c0)))OR(t1.c1)) END);
SELECT COUNT(*) FROM t1 WHERE (((CAST(NULL AS NUMERIC))OR((+ (t1.c0)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CAST(NULL AS NUMERIC))OR((+ (t1.c0))))) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((TRIM(t1.c0))>>(((((t1.c0)AND(t1.c0)))AND(t1.c0)))));
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c1)LIKE(t1.c1)))>>(t1.c0 COLLATE BINARY)) DESC, ((t1.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c0)%(t1.c0))) AND (QUOTE(t1.c0)));
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c1)LIKE(t1.c1)))>>(t1.c0 COLLATE BINARY)) DESC, ((t1.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c0)%(t1.c0))) AND (QUOTE(t1.c0))) INTERSECT SELECT ALL * FROM t1 WHERE (CASE CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END  WHEN ((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(162583320)) THEN CASE WHEN NULL THEN t1.c1 END END) ORDER BY ((((t1.c1)LIKE(t1.c1)))>>(t1.c0 COLLATE BINARY)) DESC, ((t1.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c0)%(t1.c0))) AND (QUOTE(t1.c0)));
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c1)LIKE(t1.c1)))>>(t1.c0 COLLATE BINARY)) DESC, ((t1.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c0)%(t1.c0))) AND (QUOTE(t1.c0)));
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c1)LIKE(t1.c1)))>>(t1.c0 COLLATE BINARY)) DESC, ((t1.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c0)%(t1.c0))) AND (QUOTE(t1.c0))) INTERSECT SELECT ALL * FROM t1 WHERE (CASE CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END  WHEN ((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(162583320)) THEN CASE WHEN NULL THEN t1.c1 END END) ORDER BY ((((t1.c1)LIKE(t1.c1)))>>(t1.c0 COLLATE BINARY)) DESC, ((t1.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c0)%(t1.c0))) AND (QUOTE(t1.c0)));
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1)IS(t1.c0)) AS INTEGER));
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c1)IS(t1.c0)) AS INTEGER))AND(CASE WHEN (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c0))) THEN ((t1.c0)>(t1.c0)) WHEN 0x63a254cd THEN t1.c1 COLLATE NOCASE END))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1)))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((t1.c0)+(x'9c09df')))));
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1)IS(t1.c0)) AS INTEGER));
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c1)IS(t1.c0)) AS INTEGER))AND(CASE WHEN (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c0))) THEN ((t1.c0)>(t1.c0)) WHEN 0x63a254cd THEN t1.c1 COLLATE NOCASE END))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1)))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((t1.c0)+(x'9c09df')))));
SELECT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS TEXT)) ORDER BY CASE WHEN GLOB(t1.c1, t1.c1) THEN ((t1.c0) NOTNULL) ELSE t1.c0 END, t1.c0  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS TEXT))AND((t1.c1 COLLATE RTRIM IN (((t1.c1) ISNULL)))))) ORDER BY CASE WHEN GLOB(t1.c1, t1.c1) THEN ((t1.c0) NOTNULL) ELSE t1.c0 END, t1.c0  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, x'')))) NOT NULL)) ORDER BY CASE WHEN GLOB(t1.c1, t1.c1) THEN ((t1.c0) NOTNULL) ELSE t1.c0 END, t1.c0  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS TEXT)) ORDER BY CASE WHEN GLOB(t1.c1, t1.c1) THEN ((t1.c0) NOTNULL) ELSE t1.c0 END, t1.c0  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS TEXT))AND((t1.c1 COLLATE RTRIM IN (((t1.c1) ISNULL)))))) ORDER BY CASE WHEN GLOB(t1.c1, t1.c1) THEN ((t1.c0) NOTNULL) ELSE t1.c0 END, t1.c0  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, x'')))) NOT NULL)) ORDER BY CASE WHEN GLOB(t1.c1, t1.c1) THEN ((t1.c0) NOTNULL) ELSE t1.c0 END, t1.c0  NULLS FIRST;
SELECT * FROM t1 WHERE (COALESCE((t1.c1 IN (t1.c1)), ((t1.c1) NOT BETWEEN (0.4810290213297823) AND (t1.c1))));
SELECT * FROM t1 WHERE (((COALESCE((t1.c1 IN (t1.c1)), ((t1.c1) NOT BETWEEN (0.4810290213297823) AND (t1.c1))))AND(((((((((((t1.c1)==(t1.c1)))OR(t1.c1)))AND(CAST(t1.c1 AS INTEGER))))OR((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND (('1168857977', t1.c1))))))OR(NULL))))) ORDER BY ((t1.c1) BETWEEN (((t1.c1)<>(t1.c0))) AND (json_array_length(t1.c0)))  NULLS FIRST, (((t1.c1, t1.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c1) AND (218549825)), t1.c0 COLLATE BINARY)) AND ((CAST(t1.c0 AS NUMERIC), (((t1.c0))<>((NULL)))))) DESC LIMIT 0X1 INTERSECT SELECT ALL * FROM t1 WHERE ((~ ('(ܺ)䪤|EGp'))) ORDER BY ((t1.c1) BETWEEN (((t1.c1)<>(t1.c0))) AND (json_array_length(t1.c0)))  NULLS FIRST, (((t1.c1, t1.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c1) AND (218549825)), t1.c0 COLLATE BINARY)) AND ((CAST(t1.c0 AS NUMERIC), (((t1.c0))!=((NULL)))))) DESC LIMIT 0X1;
SELECT * FROM t1 WHERE (COALESCE((t1.c1 IN (t1.c1)), ((t1.c1) NOT BETWEEN (0.4810290213297823) AND (t1.c1))));
SELECT * FROM t1 WHERE (((COALESCE((t1.c1 IN (t1.c1)), ((t1.c1) NOT BETWEEN (0.4810290213297823) AND (t1.c1))))AND(((((((((((t1.c1)==(t1.c1)))OR(t1.c1)))AND(CAST(t1.c1 AS INTEGER))))OR((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND (('1168857977', t1.c1))))))OR(NULL))))) ORDER BY ((t1.c1) BETWEEN (((t1.c1)<>(t1.c0))) AND (json_array_length(t1.c0)))  NULLS FIRST, (((t1.c1, t1.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c1) AND (218549825)), t1.c0 COLLATE BINARY)) AND ((CAST(t1.c0 AS NUMERIC), (((t1.c0))<>((NULL)))))) DESC LIMIT 0X1 INTERSECT SELECT ALL * FROM t1 WHERE ((~ ('(ܺ)䪤|EGp'))) ORDER BY ((t1.c1) BETWEEN (((t1.c1)<>(t1.c0))) AND (json_array_length(t1.c0)))  NULLS FIRST, (((t1.c1, t1.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c1) AND (218549825)), t1.c0 COLLATE BINARY)) AND ((CAST(t1.c0 AS NUMERIC), (((t1.c0))!=((NULL)))))) DESC LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY UNLIKELY(((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0))) DESC, CASE ((t1.c0)+(t1.c1))  WHEN (~ (t1.c0)) THEN t1.c1 COLLATE RTRIM ELSE ((((((((t1.c0)AND(t1.c1)))OR(x'7e')))AND(t1.c1)))AND(t1.c0)) END DESC;
SELECT * FROM t1 WHERE (((t1.c0)AND((+ ((t1.c1 IN (t1.c1))))))) ORDER BY t1.c0 ASC, ((t1.c1 COLLATE NOCASE) NOT NULL) LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE (HEX(DISTINCT ((t1.c0)>(t1.c0)))) ORDER BY t1.c0 ASC, ((t1.c1 COLLATE NOCASE) NOT NULL) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY UNLIKELY(((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0))) DESC, CASE ((t1.c0)+(t1.c1))  WHEN (~ (t1.c0)) THEN t1.c1 COLLATE RTRIM ELSE ((((((((t1.c0)AND(t1.c1)))OR(x'7e')))AND(t1.c1)))AND(t1.c0)) END DESC;
SELECT * FROM t1 WHERE (((t1.c0)AND((+ ((t1.c1 IN (t1.c1))))))) ORDER BY t1.c0 ASC, ((t1.c1 COLLATE NOCASE) NOT NULL) LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE (HEX(DISTINCT ((t1.c0)>(t1.c0)))) ORDER BY t1.c0 ASC, ((t1.c1 COLLATE NOCASE) NOT NULL) LIMIT 0x1;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (x''))) ISNULL)) ORDER BY (NOT (((t1.c1)AND(t1.c1)))) DESC, ((((((t1.c0)=(t1.c1)))AND(0.41812149981643165)))OR(TYPEOF(t1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c0) AND (x''))) ISNULL))AND((NOT (((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))OR(t1.c1))))))) ORDER BY ((((((t1.c0)OR((+ (t1.c0)))))OR(((0X67dae5e9)=(NULL)))))OR(SQLITE_COMPILEOPTION_USED(t1.c0))) ASC, ((((- (NULL)), RTRIM(t1.c1), t1.c1, (((t1.c1, t1.c1))>((t1.c0, t1.c0))), (~ (t1.c0)), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))!=((t1.c1, (t1.c1 IN ()), t1.c0 COLLATE RTRIM, (~ ('715179311')), t1.c0 COLLATE NOCASE, ((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))))  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c1))) BETWEEN ((- (t1.c1))) AND (NULL)));
SELECT ALL * FROM t1 WHERE (((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c1))) BETWEEN ((- (t1.c1))) AND (NULL)))AND((((NULL, ((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c0))))!=((NULLIF(DISTINCT t1.c0, t1.c0), t1.c1 COLLATE BINARY)))))) ORDER BY (NULL IN (1411027894)) LIMIT 1;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c1))) BETWEEN ((- (t1.c1))) AND (NULL)));
SELECT ALL * FROM t1 WHERE (((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c1))) BETWEEN ((- (t1.c1))) AND (NULL)))AND((((NULL, ((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c0))))!=((NULLIF(DISTINCT t1.c0, t1.c0), t1.c1 COLLATE BINARY)))))) ORDER BY (NULL IN (1411027894)) LIMIT 1;
SELECT ALL * FROM t1 WHERE (TRIM(DISTINCT ((x'')>=(t1.c0)), t1.c0));
SELECT ALL * FROM t1 WHERE (((TRIM(DISTINCT ((x'')>(t1.c0)), t1.c0))AND(CAST(CAST(t1.c1 AS INTEGER) AS REAL))));
SELECT ALL * FROM t1 WHERE (TRIM(DISTINCT ((x'')>=(t1.c0)), t1.c0));
SELECT ALL * FROM t1 WHERE (((TRIM(DISTINCT ((x'')>(t1.c0)), t1.c0))AND(CAST(CAST(t1.c1 AS INTEGER) AS REAL))));
SELECT * FROM t1 WHERE (load_extension(((t1.c0)=(t1.c1)))) ORDER BY NULL;
SELECT ALL * FROM t1 WHERE (load_extension(((t1.c0)==(t1.c1)))) ORDER BY NULL INTERSECT SELECT * FROM t1 WHERE (UPPER(((t1.c1)==(t1.c1)))) ORDER BY NULL;
SELECT * FROM t1 WHERE (load_extension(((t1.c0)=(t1.c1)))) ORDER BY NULL;
SELECT MIN(t1.c1) FROM t1 WHERE ((('-1452555701')OR((+ (t1.c0)))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((('-1452555701')OR((+ (t1.c0))))) INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((t1.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE);
SELECT * FROM t1 WHERE ((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1 COLLATE BINARY)) AND ((((((t1.c0)AND(t1.c0)))AND(0xfffffffff890f924)), t1.c0 COLLATE RTRIM))));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1 COLLATE BINARY)) AND ((((((t1.c0)AND(t1.c0)))AND(-124716764)), t1.c0 COLLATE RTRIM)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE x'' END)GLOB((t1.c0 IN ())))) LIMIT 0x0;
SELECT * FROM t1 WHERE ((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1 COLLATE BINARY)) AND ((((((t1.c0)AND(t1.c0)))AND(0xfffffffff890f924)), t1.c0 COLLATE RTRIM))));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1 COLLATE BINARY)) AND ((((((t1.c0)AND(t1.c0)))AND(-124716764)), t1.c0 COLLATE RTRIM)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE x'' END)GLOB((t1.c0 IN ())))) LIMIT 0x0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c1)>(t1.c1)))>((((t1.c1))>=((t1.c0)))))) ORDER BY CAST(((t1.c0) IS FALSE) AS TEXT);
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((t1.c1)>(t1.c1)))>((((t1.c1))>=((t1.c0))))))AND(t1.c1))) ORDER BY CASE t1.c1 COLLATE BINARY  WHEN x'' THEN (~ (t1.c0)) WHEN ((t1.c0)>=(t1.c0)) THEN CAST(t1.c1 AS INTEGER) END DESC  NULLS FIRST, ((((((((-1.967749805E9)AND(((t1.c0) IS TRUE))))OR(CASE t1.c0  WHEN NULL THEN 0.4005930782969469 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))AND((- (x'')))))AND(((t1.c1)<(t1.c0))))  NULLS LAST, CAST((((t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c1, t1.c0, t1.c1))) AS TEXT), (CAST(t1.c1 AS BLOB) IN (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE ((((x'c221c0', t1.c0, ((t1.c1)>=(t1.c1))))==((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END, (t1.c1 IN ()), (((t1.c1))<((t1.c1))))))) ORDER BY CASE t1.c1 COLLATE BINARY  WHEN x'' THEN (~ (t1.c0)) WHEN ((t1.c0)>=(t1.c0)) THEN CAST(t1.c1 AS INTEGER) END DESC  NULLS FIRST, ((((((((-1.967749805E9)AND(((t1.c0) IS TRUE))))OR(CASE t1.c0  WHEN NULL THEN 0.4005930782969469 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))AND((- (x'')))))AND(((t1.c1)<(t1.c0))))  NULLS LAST, CAST((((t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c1, t1.c0, t1.c1))) AS TEXT), (CAST(t1.c1 AS BLOB) IN (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))))  NULLS FIRST LIMIT 0x1;
SELECT MIN(t1.c0) FROM t1 WHERE (((((((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))OR(((')%') ISNULL))))AND((+ (-278721965)))))OR(((t1.c1) ISNULL)))) ORDER BY CAST(HEX(t1.c1) AS TEXT) DESC, t1.c0 DESC;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))OR(((')%') ISNULL))))AND((+ (-278721965)))))OR(((t1.c1) ISNULL))))AND('' COLLATE RTRIM))) ORDER BY '-1054911470'  NULLS LAST, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (x'053bdb') AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))) ASC LIMIT 2;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1)|(t1.c0)))!=(((t1.c1)==(t1.c0))))) ORDER BY t1.c0;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((t1.c1)|(t1.c0)))<(((t1.c1)==(t1.c0)))))AND(HEX((((t1.c0, t1.c0, t1.c0))<((446513759, t1.c0, t1.c1))))))) ORDER BY ((COALESCE(DISTINCT t1.c0, t1.c0, t1.c1, t1.c1, t1.c1)) BETWEEN (((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c0)GLOB(t1.c0)))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))));
SELECT * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c0)GLOB(t1.c0)))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))) ORDER BY ((((((t1.c0)OR(t1.c1)))AND(t1.c0))) NOT BETWEEN (0.15774999891933839 COLLATE BINARY) AND (((t1.c1)>>(t1.c0))))  NULLS FIRST, (((((((((t1.c1)AND(x'0307')))AND('')))OR(t1.c0)), ((0.03156310442110999)>=(t1.c1)), CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, (((t1.c1, '204650698'))>=((t1.c1, t1.c0))), t1.c1))=(((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))), ((t1.c1) IS FALSE), t1.c1, t1.c0 COLLATE NOCASE, t1.c1 COLLATE BINARY)))  NULLS LAST INTERSECT SELECT * FROM t1 WHERE ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), CASE t1.c0  WHEN t1.c1 THEN 0.6069003047610122 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END))<>((CASE WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, (((t1.c1, t1.c0, '1667465704'))>((t1.c0, t1.c0, t1.c1))))))) ORDER BY ((((((t1.c0)OR(t1.c1)))AND(t1.c0))) NOT BETWEEN (0.15774999891933839 COLLATE BINARY) AND (((t1.c1)>>(t1.c0))))  NULLS FIRST, (((((((((t1.c1)AND(x'0307')))AND('')))OR(t1.c0)), ((0.03156310442110999)>=(t1.c1)), CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, (((t1.c1, '204650698'))>=((t1.c1, t1.c0))), t1.c1))==(((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))), ((t1.c1) IS FALSE), t1.c1, t1.c0 COLLATE NOCASE, t1.c1 COLLATE BINARY)))  NULLS LAST;
SELECT * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c0)GLOB(t1.c0)))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))));
SELECT * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c0)GLOB(t1.c0)))) AND ((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))) ORDER BY ((((((t1.c0)OR(t1.c1)))AND(t1.c0))) NOT BETWEEN (0.15774999891933839 COLLATE BINARY) AND (((t1.c1)>>(t1.c0))))  NULLS FIRST, (((((((((t1.c1)AND(x'0307')))AND('')))OR(t1.c0)), ((0.03156310442110999)>=(t1.c1)), CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, (((t1.c1, '204650698'))>=((t1.c1, t1.c0))), t1.c1))=(((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))), ((t1.c1) IS FALSE), t1.c1, t1.c0 COLLATE NOCASE, t1.c1 COLLATE BINARY)))  NULLS LAST INTERSECT SELECT * FROM t1 WHERE ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), CASE t1.c0  WHEN t1.c1 THEN 0.6069003047610122 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END))<>((CASE WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, (((t1.c1, t1.c0, '1667465704'))>((t1.c0, t1.c0, t1.c1))))))) ORDER BY ((((((t1.c0)OR(t1.c1)))AND(t1.c0))) NOT BETWEEN (0.15774999891933839 COLLATE BINARY) AND (((t1.c1)>>(t1.c0))))  NULLS FIRST, (((((((((t1.c1)AND(x'0307')))AND('')))OR(t1.c0)), ((0.03156310442110999)>=(t1.c1)), CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, (((t1.c1, '204650698'))>=((t1.c1, t1.c0))), t1.c1))==(((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))), ((t1.c1) IS FALSE), t1.c1, t1.c0 COLLATE NOCASE, t1.c1 COLLATE BINARY)))  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE (CAST(0.28057827491003684 AS INTEGER));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CAST(0.28057827491003684 AS INTEGER)) LIMIT 1 INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOT BETWEEN (NULL COLLATE BINARY) AND (((t1.c0)/(t1.c1))))) LIMIT 1;
SELECT MAX(t1.c0) FROM t1 WHERE (t1.c1) ORDER BY ((IFNULL(t1.c0, t1.c0)) ISNULL) ASC  NULLS FIRST, CASE WHEN 0.2410143970616856 THEN SQLITE_COMPILEOPTION_USED(t1.c1) WHEN (t1.c0 IN (t1.c0, t1.c1, t1.c1)) THEN ((t1.c1)||(t1.c0)) ELSE t1.c0 END ASC, HEX(DISTINCT x'3456') ASC  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE (((t1.c1)AND((((((t1.c1)AND(t1.c0)))AND(t1.c1)) IN (t1.c1, ((t1.c0) NOT BETWEEN (t1.c1) AND (-1.671112748E9))))))) ORDER BY ((IFNULL(t1.c0, t1.c0)) ISNULL) ASC  NULLS FIRST, CASE WHEN 0.2410143970616856 THEN SQLITE_COMPILEOPTION_USED(t1.c1) WHEN (t1.c0 IN (t1.c0, t1.c1, t1.c1)) THEN ((t1.c1)||(t1.c0)) ELSE t1.c0 END ASC, HEX(DISTINCT x'3456') ASC  NULLS LAST LIMIT 0X3;
SELECT MAX(t1.c0) FROM t1 WHERE (TRIM(((((0.7960258449854591)OR(t1.c1)))OR(t1.c0)), t1.c0 COLLATE BINARY));
SELECT MAX(t1.c0) FROM t1 WHERE (((TRIM(((((0.7960258449854591)OR(t1.c1)))OR(t1.c0)), t1.c0 COLLATE BINARY))AND((~ ((((t1.c0, t1.c1))<>((t1.c1, t1.c0))))))));
SELECT ALL * FROM t1 WHERE ((((((((t1.c0, t1.c1, t1.c0))<=((t1.c1, 0.9816224341995669, t1.c0))))AND((+ (t1.c1)))))AND(((t1.c0) NOTNULL)))) ORDER BY ((((t1.c0) IS FALSE))IS NOT(((t1.c0)IS NOT(t1.c1)))), 0Xffffffff8f129011 ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0, t1.c1, t1.c0))<=((t1.c1, 0.9816224341995669, t1.c0))))AND((+ (t1.c1)))))AND(((t1.c0) NOTNULL)))) ORDER BY ((((t1.c0) IS FALSE))IS NOT(((t1.c0)IS NOT(t1.c1)))), 0xffffffff8f129011 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0 IN (t1.c1)) IN ())) ORDER BY ((((t1.c0) IS FALSE))IS NOT(((t1.c0)IS NOT(t1.c1)))), 0Xffffffff8f129011 ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((((t1.c0, t1.c1, t1.c0))<=((t1.c1, 0.9816224341995669, t1.c0))))AND((+ (t1.c1)))))AND(((t1.c0) NOTNULL)))) ORDER BY ((((t1.c0) IS FALSE))IS NOT(((t1.c0)IS NOT(t1.c1)))), 0Xffffffff8f129011 ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0, t1.c1, t1.c0))<=((t1.c1, 0.9816224341995669, t1.c0))))AND((+ (t1.c1)))))AND(((t1.c0) NOTNULL)))) ORDER BY ((((t1.c0) IS FALSE))IS NOT(((t1.c0)IS NOT(t1.c1)))), 0xffffffff8f129011 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0 IN (t1.c1)) IN ())) ORDER BY ((((t1.c0) IS FALSE))IS NOT(((t1.c0)IS NOT(t1.c1)))), 0Xffffffff8f129011 ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((x'')|(CAST(t1.c1 AS INTEGER)))) ORDER BY ((t1.c1)&((t1.c1 IN ())))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((x'')|(CAST(t1.c1 AS INTEGER)))) ORDER BY ((t1.c1)&((t1.c1 IN ())))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((x'')|(CAST(t1.c1 AS INTEGER)))) ORDER BY ((t1.c1)&((t1.c1 IN ())))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((x'')|(CAST(t1.c1 AS INTEGER)))) ORDER BY ((t1.c1)&((t1.c1 IN ())))  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((((((t1.c0 IN (t1.c1, t1.c1)))AND(t1.c1)))OR(0.3352279878568478)))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c0 END))) ORDER BY NULL;
SELECT MAX(t1.c1) FROM t1 WHERE ((((((((t1.c0 IN (t1.c1)))AND(t1.c1)))OR(0.3352279878568478)))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c0 END))) ORDER BY NULL INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY NULL;
SELECT * FROM t1 WHERE (((((0.1120052832895746)<(t1.c1))) ISNULL)) ORDER BY ((((t1.c0) IS FALSE))&(CAST(t1.c1 AS REAL))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((0.1120052832895746)<(t1.c1))) ISNULL))AND(CASE WHEN (((t1.c0, t1.c0, t1.c1, t1.c0))=((t1.c0, t1.c0, t1.c1, t1.c0))) THEN (t1.c0 IN (t1.c0, -760296689)) END))) ORDER BY ((((t1.c0) IS FALSE))&(CAST(t1.c1 AS REAL))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((0.1120052832895746)<(t1.c1))) ISNULL)) ORDER BY ((((t1.c0) IS FALSE))&(CAST(t1.c1 AS REAL))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((0.1120052832895746)<(t1.c1))) ISNULL))AND(CASE WHEN (((t1.c0, t1.c0, t1.c1, t1.c0))=((t1.c0, t1.c0, t1.c1, t1.c0))) THEN (t1.c0 IN (t1.c0, -760296689)) END))) ORDER BY ((((t1.c0) IS FALSE))&(CAST(t1.c1 AS REAL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST(NULL AS INTEGER) AS NUMERIC)) ORDER BY COALESCE(((t1.c1)&(t1.c1)), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST(NULL AS INTEGER) AS NUMERIC)) ORDER BY COALESCE(((t1.c1)&(t1.c1)), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)));
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, 0xffffffffc8de093a))) IN ())) ORDER BY TOTAL_CHANGES() DESC;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, -924972742))) IN ())) ORDER BY ((((t1.c0)GLOB(t1.c1))) NOT BETWEEN (((((t1.c1)AND(t1.c0)))OR(NULL))) AND ((+ (t1.c0)))) ASC LIMIT 1 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((((t1.c0)GLOB(t1.c1))) NOT BETWEEN (((((t1.c1)AND(t1.c0)))OR(NULL))) AND ((+ (t1.c0)))) ASC LIMIT 0x1;
SELECT * FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN 'E' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END AS TEXT));
SELECT DISTINCT * FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN 'E' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END AS TEXT)) INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS BLOB));
SELECT * FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN 'E' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END AS TEXT));
SELECT DISTINCT * FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN 'E' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END AS TEXT)) INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS BLOB));
SELECT MIN(t1.c0) FROM t1 WHERE ((((NOT (t1.c1)))IS NOT(((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c1))))) ORDER BY (((t1.c0 IN ()))>=(CAST(t1.c1 AS INTEGER))) ASC;
SELECT MIN(t1.c0) FROM t1 WHERE ((((((NOT (t1.c1)))IS NOT(((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))))AND((json_quote(t1.c1) IN (((t1.c0)<(t1.c0))))))) ORDER BY (((t1.c0 IN ()))>=(CAST(t1.c1 AS INTEGER))) ASC LIMIT 4;
SELECT COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c1 AS NUMERIC) AS INTEGER)) ORDER BY ((((0xffffffff9ada675e) NOT NULL)) BETWEEN (((t1.c1)/(t1.c0))) AND (((0xffffffffb8cdd945)=(t1.c1)))) ASC  NULLS FIRST, CAST(((t1.c1)GLOB(t1.c1)) AS NUMERIC) ASC, (((((t1.c1, NULL))==((t1.c1, t1.c1)))) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c1 AS NUMERIC) AS INTEGER)) ORDER BY ((((0xffffffff9ada675e) NOT NULL)) BETWEEN (((t1.c1)/(t1.c0))) AND (((0xffffffffb8cdd945)=(t1.c1)))) ASC  NULLS FIRST, CAST(((t1.c1)GLOB(t1.c1)) AS NUMERIC) ASC, (((((t1.c1, NULL))==((t1.c1, t1.c1)))) IS TRUE) DESC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c1)>=(t1.c1))) BETWEEN (HEX(DISTINCT 0x2c5fa887)) AND (CASE t1.c0  WHEN -2.130733186E9 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((t1.c1)>=(t1.c1))) BETWEEN (HEX(DISTINCT 744466567)) AND (CASE t1.c0  WHEN -2.130733186E9 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))) ORDER BY (0.06389991955429708 IN ((- (t1.c0)), (((t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c1))))) DESC  NULLS LAST, (CAST(t1.c0 AS INTEGER) IN ((NOT (t1.c1)), (+ (t1.c1)))) ASC  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE (((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0))) NOT BETWEEN (((((t1.c0)AND(t1.c1)))OR(t1.c0))) AND (CAST(t1.c0 AS TEXT))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0))) NOT BETWEEN (((((t1.c0)AND(t1.c1)))OR(t1.c0))) AND (CAST(t1.c0 AS TEXT))))AND(((t1.c1) IS TRUE) COLLATE BINARY COLLATE BINARY))) ORDER BY x'c7b1' ASC, (((t1.c0)) BETWEEN (((((t1.c1)) BETWEEN ((t1.c1)) AND ((NULL))))) AND ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))))  NULLS LAST, CASE WHEN t1.c0 THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((x'55')>(t1.c1)) THEN ((((t1.c1)OR(t1.c0)))AND(0.6550474526685208)) ELSE (((((('j')OR(t1.c1)))AND(0.21864285087742974)))AND(t1.c1)) END  NULLS FIRST LIMIT 0x2;
SELECT * FROM t1 WHERE (((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0))) NOT BETWEEN (((((t1.c0)AND(t1.c1)))OR(t1.c0))) AND (CAST(t1.c0 AS TEXT))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0))) NOT BETWEEN (((((t1.c0)AND(t1.c1)))OR(t1.c0))) AND (CAST(t1.c0 AS TEXT))))AND(((t1.c1) IS TRUE) COLLATE BINARY COLLATE BINARY))) ORDER BY x'c7b1' ASC, (((t1.c0)) BETWEEN (((((t1.c1)) BETWEEN ((t1.c1)) AND ((NULL))))) AND ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))))  NULLS LAST, CASE WHEN t1.c0 THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((x'55')>(t1.c1)) THEN ((((t1.c1)OR(t1.c0)))AND(0.6550474526685208)) ELSE (((((('j')OR(t1.c1)))AND(0.21864285087742974)))AND(t1.c1)) END  NULLS FIRST LIMIT 0x2;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) ISNULL))LIKE(CAST(t1.c0 AS INTEGER))));
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c0) ISNULL))LIKE(CAST(t1.c0 AS INTEGER))))AND((((t1.c0)) NOT BETWEEN ((0.33403498781495977)) AND ((json(t1.c0))))))) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((((((t1.c1)OR(x'0a')))OR(t1.c1)))AND(t1.c1)) AS INTEGER));
SELECT * FROM t1 WHERE ((~ ((~ (t1.c1))))) ORDER BY ((CAST(t1.c1 AS REAL)) IS TRUE) DESC  NULLS FIRST, CAST('' AS INTEGER), CASE t1.c1 COLLATE NOCASE  WHEN '-407840957' THEN CAST(t1.c1 AS REAL) WHEN t1.c1 COLLATE BINARY THEN -4.07840957E8 WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN t1.c0 COLLATE BINARY WHEN ((t1.c1) IS FALSE) THEN (t1.c1 IN (t1.c1)) WHEN t1.c0 THEN (t1.c1 IN (t1.c0, t1.c0, t1.c1)) WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END THEN ((t1.c0)LIKE(t1.c1)) ELSE (((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))) END DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((~ ((~ (t1.c1)))))AND(((((((t1.c1)AND(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))AND(LIKELIHOOD(DISTINCT t1.c0, t1.c0))))AND(IFNULL(t1.c1, t1.c1)))))) ORDER BY (((NOT (t1.c1))) ISNULL), ((((t1.c0)>>(t1.c1))) NOT BETWEEN (CAST(NULL AS REAL)) AND (t1.c0)), ((CAST(t1.c0 AS INTEGER))||((t1.c0 IN ()))) DESC  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY (((NOT (t1.c1))) ISNULL), ((((t1.c0)>>(t1.c1))) NOT BETWEEN (CAST(NULL AS REAL)) AND (t1.c0)), ((CAST(t1.c0 AS INTEGER))||((t1.c0 IN ()))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((~ ((~ (t1.c1))))) ORDER BY ((CAST(t1.c1 AS REAL)) IS TRUE) DESC  NULLS FIRST, CAST('' AS INTEGER), CASE t1.c1 COLLATE NOCASE  WHEN '-407840957' THEN CAST(t1.c1 AS REAL) WHEN t1.c1 COLLATE BINARY THEN -4.07840957E8 WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN t1.c0 COLLATE BINARY WHEN ((t1.c1) IS FALSE) THEN (t1.c1 IN (t1.c1)) WHEN t1.c0 THEN (t1.c1 IN (t1.c0, t1.c0, t1.c1)) WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END THEN ((t1.c0)LIKE(t1.c1)) ELSE (((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))) END DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((~ ((~ (t1.c1)))))AND(((((((t1.c1)AND(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))AND(LIKELIHOOD(DISTINCT t1.c0, t1.c0))))AND(IFNULL(t1.c1, t1.c1)))))) ORDER BY (((NOT (t1.c1))) ISNULL), ((((t1.c0)>>(t1.c1))) NOT BETWEEN (CAST(NULL AS REAL)) AND (t1.c0)), ((CAST(t1.c0 AS INTEGER))||((t1.c0 IN ()))) DESC  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY (((NOT (t1.c1))) ISNULL), ((((t1.c0)>>(t1.c1))) NOT BETWEEN (CAST(NULL AS REAL)) AND (t1.c0)), ((CAST(t1.c0 AS INTEGER))||((t1.c0 IN ()))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (x'' COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE (((x'' COLLATE RTRIM)AND(((((((NULL)AND(json_remove(t1.c1, t1.c0))))OR((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))))OR(NULLIF(t1.c0, t1.c1)))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((224413799)>(0.13128458756183936))) LIMIT 0;
SELECT * FROM t1 WHERE (x'' COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE (((x'' COLLATE RTRIM)AND(((((((NULL)AND(json_remove(t1.c1, t1.c0))))OR((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))))OR(NULLIF(t1.c0, t1.c1)))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((224413799)>(0.13128458756183936))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) IS TRUE))AND(((t1.c1)>(t1.c1)) COLLATE RTRIM))) ORDER BY (NOT (((t1.c1)>(t1.c1)))) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0) NOTNULL))AND((('')IS NOT('1923236321')))))AND(0xffffffff87b31a9a)))AND(CAST(t1.c0 AS INTEGER)))) ORDER BY (NOT (((t1.c1)>(t1.c1)))) ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) IS TRUE))AND(((t1.c1)>(t1.c1)) COLLATE RTRIM))) ORDER BY (NOT (((t1.c1)>(t1.c1)))) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0) NOTNULL))AND((('')IS NOT('1923236321')))))AND(0xffffffff87b31a9a)))AND(CAST(t1.c0 AS INTEGER)))) ORDER BY (NOT (((t1.c1)>(t1.c1)))) ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE ((~ (((t1.c0)|(t1.c0))))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) IS TRUE), (((t1.c1 IN (t1.c1))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((~ (((t1.c0)|(t1.c0))))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) IS TRUE), (((t1.c1 IN (t1.c1))) ISNULL)  NULLS FIRST LIMIT 3 INTERSECT SELECT * FROM t1 WHERE (((COALESCE(t1.c0, t1.c1)) ISNULL)) ORDER BY ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) IS TRUE), (((t1.c1 IN (t1.c1))) ISNULL)  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t1 WHERE ((~ (((t1.c0)|(t1.c0))))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) IS TRUE), (((t1.c1 IN (t1.c1))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((~ (((t1.c0)|(t1.c0))))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) IS TRUE), (((t1.c1 IN (t1.c1))) ISNULL)  NULLS FIRST LIMIT 3 INTERSECT SELECT * FROM t1 WHERE (((COALESCE(t1.c0, t1.c1)) ISNULL)) ORDER BY ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) IS TRUE), (((t1.c1 IN (t1.c1))) ISNULL)  NULLS FIRST LIMIT 3;
SELECT MAX(t1.c0) FROM t1 WHERE (((((NULL)>(t1.c1))) NOT BETWEEN ((t1.c0 IN ())) AND (x'3a0035'))) ORDER BY t1.c1 ASC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((NULL)>(t1.c1))) NOT BETWEEN ((t1.c0 IN ())) AND (x'3a0035'))) ORDER BY ((((((((t1.c0 COLLATE RTRIM)AND(((t1.c0)*(t1.c1)))))OR(((t1.c0)*(t1.c0)))))AND(((t1.c1)*('-127709730')))))OR(CASE WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c1 END))  NULLS LAST, 0.09667374926575667 DESC  NULLS FIRST;
SELECT MAX(t1.c0) FROM t1 WHERE ((((((t1.c0) BETWEEN (t1.c1) AND (x'')), ((t1.c0)-(t1.c0))))>=((IFNULL(-5.21905785E8, x'39'), (~ (t1.c0))))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((((t1.c0) BETWEEN (t1.c1) AND (x'')), ((t1.c0)-(t1.c0))))>=((IFNULL(-5.21905785E8, x'39'), (~ (t1.c0))))))AND(t1.c1 COLLATE BINARY)));
SELECT ALL * FROM t1 WHERE (((x'28516c')IS NOT((+ (t1.c1)))));
SELECT ALL * FROM t1 WHERE (((((x'28516c')IS NOT((+ (t1.c1)))))AND(UNLIKELY(((t1.c0) ISNULL))))) ORDER BY (((t1.c1 IN (t1.c0, t1.c0, t1.c1))) IS TRUE) LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE (CASE (t1.c0 IN ())  WHEN ((t1.c1)+(t1.c0)) THEN t1.c1 END) ORDER BY (((t1.c1 IN (t1.c0, t1.c0, t1.c1))) IS TRUE) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((x'28516c')IS NOT((+ (t1.c1)))));
SELECT ALL * FROM t1 WHERE (((((x'28516c')IS NOT((+ (t1.c1)))))AND(UNLIKELY(((t1.c0) ISNULL))))) ORDER BY (((t1.c1 IN (t1.c0, t1.c0, t1.c1))) IS TRUE) LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE (CASE (t1.c0 IN ())  WHEN ((t1.c1)+(t1.c0)) THEN t1.c1 END) ORDER BY (((t1.c1 IN (t1.c0, t1.c0, t1.c1))) IS TRUE) LIMIT 0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (t1.c1) ORDER BY ((((t1.c0)<<(t1.c0)))=((((t1.c0, t1.c0, t1.c0))==((t1.c0, t1.c0, t1.c1))))) ASC  NULLS FIRST, x'ac';
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((t1.c1)AND(CASE LIKELIHOOD(DISTINCT t1.c0, t1.c1)  WHEN (~ (t1.c1)) THEN ((((0.24184146894928837)AND('-1279266008')))AND(t1.c1)) WHEN (((t1.c0, t1.c1))=((t1.c1, t1.c0))) THEN (- (t1.c1)) WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN (t1.c1 IN (t1.c1)) WHEN ((t1.c0)*(t1.c1)) THEN NULL WHEN json_array_length(t1.c0, t1.c0) THEN ((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(0.9532317774099616)))OR(t1.c1)) ELSE 'f7' END))) ORDER BY ((((t1.c0)<<(t1.c0)))=((((t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, t1.c1))))) ASC  NULLS FIRST, x'ac';
SELECT ALL * FROM t1 WHERE (TYPEOF(DISTINCT ((t1.c0)|(t1.c1)))) ORDER BY ((((t1.c1 COLLATE BINARY)OR(t1.c0)))OR(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) ASC, (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) NOT NULL);
SELECT DISTINCT * FROM t1 WHERE (TYPEOF(DISTINCT ((t1.c0)|(t1.c1)))) ORDER BY CASE WHEN (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))) THEN (t1.c1 IN ()) WHEN CAST(t1.c1 AS INTEGER) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END WHEN t1.c1 THEN TYPEOF(DISTINCT t1.c0) END DESC  NULLS FIRST, ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) BETWEEN (t1.c0) AND ((t1.c0 IN (t1.c0))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (TYPEOF(DISTINCT ((t1.c0)|(t1.c1)))) ORDER BY ((((t1.c1 COLLATE BINARY)OR(t1.c0)))OR(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) ASC, (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) NOT NULL);
SELECT DISTINCT * FROM t1 WHERE (TYPEOF(DISTINCT ((t1.c0)|(t1.c1)))) ORDER BY CASE WHEN (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))) THEN (t1.c1 IN ()) WHEN CAST(t1.c1 AS INTEGER) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END WHEN t1.c1 THEN TYPEOF(DISTINCT t1.c0) END DESC  NULLS FIRST, ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) BETWEEN (t1.c0) AND ((t1.c0 IN (t1.c0))))  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((t1.c1 IN ()))%(GLOB('4', t1.c0)))) ORDER BY (~ (((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(8.53913989E8)))AND(t1.c1)))) DESC;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((t1.c1 IN ()))%(GLOB('4', t1.c0))))AND(16517916))) ORDER BY (((t1.c1, t1.c0, t1.c1, '', t1.c1)) BETWEEN (((t1.c0 IN (t1.c0)), ((t1.c0)>=(t1.c0)), t1.c0, CASE NULL  WHEN t1.c1 THEN -1.028690489E9 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, (t1.c0 IN (t1.c0)))) AND ((((t1.c1)!=(t1.c0)), COALESCE(t1.c1, t1.c0), ((t1.c0)%(t1.c0)), t1.c0, ((t1.c1)AND(t1.c1))))) ASC, ',jUx	''[', (((t1.c1))>((t1.c1))) ASC  NULLS FIRST LIMIT 2;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) ISNULL));
SELECT MAX(t1.c1) FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) ISNULL))AND(CAST((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND (('-16410412', t1.c0))) AS REAL))));
SELECT MIN(t1.c0) FROM t1 WHERE (LIKELIHOOD((+ (t1.c0)), ('76688209' IN (t1.c0))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((LIKELIHOOD((+ (t1.c0)), ('76688209' IN (t1.c0))))AND(CAST((t1.c1 IN (t1.c1)) AS TEXT)))) LIMIT 1;
SELECT * FROM t1 WHERE (((((t1.c1)|(t1.c0)))IS((t1.c0 IN (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1)|(t1.c0)))IS((t1.c0 IN (t1.c1)))))AND(CASE ((t1.c1) ISNULL)  WHEN CAST(t1.c1 AS NUMERIC) THEN ((((t1.c0)OR(t1.c1)))OR(t1.c0)) WHEN (t1.c0 IN (t1.c1)) THEN IFNULL(t1.c1, t1.c0) ELSE t1.c0 END))) ORDER BY CAST(((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)) AS REAL)  NULLS FIRST, (((((t1.c0, t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c1, NULL)))) BETWEEN (t1.c0) AND ((- (t1.c0)))) DESC, IFNULL((- (t1.c0)), CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)  NULLS FIRST, (t1.c0 IN (((t1.c0)<>(t1.c1))));
SELECT * FROM t1 WHERE (((((t1.c1)|(t1.c0)))IS((t1.c0 IN (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1)|(t1.c0)))IS((t1.c0 IN (t1.c1)))))AND(CASE ((t1.c1) ISNULL)  WHEN CAST(t1.c1 AS NUMERIC) THEN ((((t1.c0)OR(t1.c1)))OR(t1.c0)) WHEN (t1.c0 IN (t1.c1)) THEN IFNULL(t1.c1, t1.c0) ELSE t1.c0 END))) ORDER BY CAST(((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)) AS REAL)  NULLS FIRST, (((((t1.c0, t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c1, NULL)))) BETWEEN (t1.c0) AND ((- (t1.c0)))) DESC, IFNULL((- (t1.c0)), CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)  NULLS FIRST, (t1.c0 IN (((t1.c0)<>(t1.c1))));
SELECT MAX(t1.c1) FROM t1 WHERE (CAST(CAST(t1.c0 AS BLOB) AS TEXT));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CAST(CAST(t1.c0 AS BLOB) AS TEXT)) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c0)OR(t1.c1)))OR(t1.c0)) COLLATE NOCASE);
SELECT * FROM t1 WHERE ((((t1.c1, t1.c0)) NOT BETWEEN ((((((t1.c1)OR(t1.c0)))AND(t1.c0)), ((((t1.c1)OR(t1.c0)))AND(x'')))) AND ((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR('4d>')), ((t1.c0)&(t1.c0)))))) ORDER BY ((((((((t1.c1) BETWEEN (t1.c1) AND (x'f9afeb')))OR(CHANGES())))OR(t1.c1 COLLATE BINARY)))OR(LOWER(DISTINCT 0.1373918215727541))), ((x'84')LIKE(((((t1.c1)OR(t1.c1)))OR(t1.c1)))) DESC, ((((t1.c0)|(t1.c1))) BETWEEN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END) AND ((((t1.c0)) NOT BETWEEN (('520533593')) AND ((t1.c0))))) ASC;
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c0)) NOT BETWEEN ((((((t1.c1)OR(t1.c0)))AND(t1.c0)), ((((t1.c1)OR(t1.c0)))AND(x'')))) AND ((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR('4d>')), ((t1.c0)&(t1.c0)))))) ORDER BY (+ (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL END))  NULLS FIRST, (((t1.c1, x'a362', t1.c1)) BETWEEN (((t1.c1 IN ()), t1.c0, ((t1.c1)<(t1.c0)))) AND ((((t1.c1)-(t1.c1)), ((('')) NOT BETWEEN ((t1.c1)) AND ((t1.c0))), (NOT (t1.c1))))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c1, t1.c0)) NOT BETWEEN ((((((t1.c1)OR(t1.c0)))AND(t1.c0)), ((((t1.c1)OR(t1.c0)))AND(x'')))) AND ((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR('4d>')), ((t1.c0)&(t1.c0)))))) ORDER BY ((((((((t1.c1) BETWEEN (t1.c1) AND (x'f9afeb')))OR(CHANGES())))OR(t1.c1 COLLATE BINARY)))OR(LOWER(DISTINCT 0.1373918215727541))), ((x'84')LIKE(((((t1.c1)OR(t1.c1)))OR(t1.c1)))) DESC, ((((t1.c0)|(t1.c1))) BETWEEN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END) AND ((((t1.c0)) NOT BETWEEN (('520533593')) AND ((t1.c0))))) ASC;
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c0)) NOT BETWEEN ((((((t1.c1)OR(t1.c0)))AND(t1.c0)), ((((t1.c1)OR(t1.c0)))AND(x'')))) AND ((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR('4d>')), ((t1.c0)&(t1.c0)))))) ORDER BY (+ (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL END))  NULLS FIRST, (((t1.c1, x'a362', t1.c1)) BETWEEN (((t1.c1 IN ()), t1.c0, ((t1.c1)<(t1.c0)))) AND ((((t1.c1)-(t1.c1)), ((('')) NOT BETWEEN ((t1.c1)) AND ((t1.c0))), (NOT (t1.c1))))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE (((('-474622101')AND(t1.c0)))OR(t1.c0))  WHEN ((t1.c0)IS(t1.c1)) THEN t1.c1 COLLATE RTRIM END) ORDER BY (t1.c1 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE (((('-474622101')AND(t1.c0)))OR(t1.c0))  WHEN ((t1.c0)IS(t1.c1)) THEN t1.c1 COLLATE RTRIM END)AND(((t1.c1 COLLATE BINARY) IS FALSE)))) ORDER BY (t1.c1 COLLATE RTRIM IN ())  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS TEXT)) ORDER BY (t1.c1 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE (((('-474622101')AND(t1.c0)))OR(t1.c0))  WHEN ((t1.c0)IS(t1.c1)) THEN t1.c1 COLLATE RTRIM END) ORDER BY (t1.c1 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE ((((t1.c1)||(t1.c1)) IN (((t1.c1)OR(t1.c1)))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((((t1.c1)||(t1.c1)) IN (((t1.c1)OR(t1.c1)))))AND((((((t1.c1)OR(t1.c1)))OR(t1.c0)) IN (((((t1.c0)OR(t1.c1)))OR(t1.c1))))))) LIMIT 0x2 INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(((((NULL)OR(t1.c0)))AND(t1.c0)))))AND(NULL)))OR(((t1.c0)==(t1.c1))))) LIMIT 0X2;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST(((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)) AS BLOB)) ORDER BY (+ ((t1.c1 IN (t1.c0))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (CAST(((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)) AS BLOB)) ORDER BY (+ ((t1.c1 IN (t1.c0)))) LIMIT 2;
SELECT * FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)) COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)) COLLATE BINARY)AND((- ((((t1.c0, t1.c1))<>((t1.c1, t1.c0)))))))) ORDER BY ((t1.c1 COLLATE NOCASE)OR('-1287418750'))  NULLS FIRST, CAST(t1.c1 COLLATE RTRIM AS NUMERIC) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0)) BETWEEN (('T')) AND ((t1.c0))))OR(((((t1.c0)OR(t1.c1)))OR(t1.c1)))))OR((t1.c1 IN (t1.c1))))) ORDER BY ((t1.c1 COLLATE NOCASE)OR('-1287418750'))  NULLS FIRST, CAST(t1.c1 COLLATE RTRIM AS NUMERIC) LIMIT 1;
SELECT * FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)) COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)) COLLATE BINARY)AND((- ((((t1.c0, t1.c1))<>((t1.c1, t1.c0)))))))) ORDER BY ((t1.c1 COLLATE NOCASE)OR('-1287418750'))  NULLS FIRST, CAST(t1.c1 COLLATE RTRIM AS NUMERIC) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0)) BETWEEN (('T')) AND ((t1.c0))))OR(((((t1.c0)OR(t1.c1)))OR(t1.c1)))))OR((t1.c1 IN (t1.c1))))) ORDER BY ((t1.c1 COLLATE NOCASE)OR('-1287418750'))  NULLS FIRST, CAST(t1.c1 COLLATE RTRIM AS NUMERIC) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE ((CAST(t1.c1 AS NUMERIC) IN ())) ORDER BY ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) COLLATE BINARY  NULLS LAST, ((((((((CAST(t1.c0 AS BLOB))AND((((t1.c1))=((t1.c0))))))OR((((t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, x'17b6')) AND ((t1.c0, t1.c0, t1.c1))))))OR(t1.c0 COLLATE BINARY)))AND(((t1.c0)IS NOT(NULL)))) ASC  NULLS LAST, t1.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((CAST(t1.c1 AS NUMERIC) IN ()))AND((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) IN ((((t1.c0, t1.c0, t1.c0, t1.c0))>((t1.c0, t1.c1, t1.c1, t1.c1))), ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))))) ORDER BY ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) COLLATE BINARY  NULLS LAST, ((((((((CAST(t1.c0 AS BLOB))AND((((t1.c1))==((t1.c0))))))OR((((t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, x'17b6')) AND ((t1.c0, t1.c0, t1.c1))))))OR(t1.c0 COLLATE BINARY)))AND(((t1.c0)IS NOT(NULL)))) ASC  NULLS LAST, t1.c0 ASC  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ('-399064750') ORDER BY ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) COLLATE BINARY  NULLS LAST, ((((((((CAST(t1.c0 AS BLOB))AND((((t1.c1))=((t1.c0))))))OR((((t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1, x'17b6')) AND ((t1.c0, t1.c0, t1.c1))))))OR(t1.c0 COLLATE BINARY)))AND(((t1.c0)IS NOT(NULL)))) ASC  NULLS LAST, t1.c0 ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(t1.c0 AS INTEGER)) ORDER BY CAST(x'dcc4' AS REAL) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(t1.c0 AS INTEGER)) ORDER BY CAST(x'dcc4' AS REAL) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT * FROM t1 WHERE (((((((((((t1.c1)IS NOT(t1.c0)))OR(CASE t1.c0  WHEN t1.c1 THEN t1.c1 END)))OR(((t1.c0) IS TRUE))))OR((t1.c0 IN ()))))OR(t1.c0 COLLATE NOCASE))) ORDER BY CAST(x'dcc4' AS REAL) ASC  NULLS FIRST LIMIT 0x1;
SELECT * FROM t1 WHERE (CAST(t1.c0 AS INTEGER)) ORDER BY CAST(x'dcc4' AS REAL) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(t1.c0 AS INTEGER)) ORDER BY CAST(x'dcc4' AS REAL) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT * FROM t1 WHERE (((((((((((t1.c1)IS NOT(t1.c0)))OR(CASE t1.c0  WHEN t1.c1 THEN t1.c1 END)))OR(((t1.c0) IS TRUE))))OR((t1.c0 IN ()))))OR(t1.c0 COLLATE NOCASE))) ORDER BY CAST(x'dcc4' AS REAL) ASC  NULLS FIRST LIMIT 0x1;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((('', t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c1)))) IS FALSE)) ORDER BY (NOT (DATE(t1.c0, t1.c0, t1.c0))), (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)), t1.c1, ((t1.c0) IS FALSE))) AND ((0.33390458134725287, CASE x''  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, t1.c0))) DESC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((('', t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c1)))) IS FALSE)) ORDER BY (NOT (DATE(t1.c0, t1.c0, t1.c0))), (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)), t1.c1, ((t1.c0) IS FALSE))) AND ((0.33390458134725287, CASE x''  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, t1.c0))) DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t1 WHERE (IFNULL(CAST(t1.c1 AS BLOB), ((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))) ORDER BY CASE WHEN (- (t1.c1)) THEN CAST(0.40598192569704006 AS INTEGER) WHEN ((t1.c0)<<(1612608662)) THEN t1.c1 COLLATE RTRIM END ASC, ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) ISNULL)  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (IFNULL(CAST(t1.c1 AS BLOB), ((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))) ORDER BY (((~ (0.37736632700229034)))|(((((t1.c1)AND(t1.c1)))AND(t1.c1)))) DESC  NULLS LAST, (((CAST(t1.c1 AS INTEGER)))>=(('-809746133')));
SELECT ALL * FROM t1 WHERE (IFNULL(CAST(t1.c1 AS BLOB), ((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))) ORDER BY CASE WHEN (- (t1.c1)) THEN CAST(0.40598192569704006 AS INTEGER) WHEN ((t1.c0)<<(1612608662)) THEN t1.c1 COLLATE RTRIM END ASC, ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) ISNULL)  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (IFNULL(CAST(t1.c1 AS BLOB), ((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))) ORDER BY (((~ (0.37736632700229034)))|(((((t1.c1)AND(t1.c1)))AND(t1.c1)))) DESC  NULLS LAST, (((CAST(t1.c1 AS INTEGER)))>=(('-809746133')));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)LIKE(t1.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)LIKE(t1.c1)) COLLATE NOCASE) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)-((((('''X')OR(t1.c1)))AND(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)-((((('''X')OR(t1.c1)))AND(t1.c0))))) ORDER BY (((t1.c1 COLLATE RTRIM, t1.c0 COLLATE NOCASE))<>((ABS(DISTINCT t1.c0), (('2103895956') NOT NULL)))), ((((t1.c0)<<(t1.c0)))<<(CAST(t1.c0 AS BLOB))) DESC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)>(t1.c0)))%(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))) ORDER BY (((t1.c1 COLLATE RTRIM, t1.c0 COLLATE NOCASE))!=((ABS(DISTINCT t1.c0), (('2103895956') NOT NULL)))), ((((t1.c0)<<(t1.c0)))<<(CAST(t1.c0 AS BLOB))) DESC LIMIT 1;
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)-((((('''X')OR(t1.c1)))AND(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)-((((('''X')OR(t1.c1)))AND(t1.c0))))) ORDER BY (((t1.c1 COLLATE RTRIM, t1.c0 COLLATE NOCASE))<>((ABS(DISTINCT t1.c0), (('2103895956') NOT NULL)))), ((((t1.c0)<<(t1.c0)))<<(CAST(t1.c0 AS BLOB))) DESC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)>(t1.c0)))%(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))) ORDER BY (((t1.c1 COLLATE RTRIM, t1.c0 COLLATE NOCASE))!=((ABS(DISTINCT t1.c0), (('2103895956') NOT NULL)))), ((((t1.c0)<<(t1.c0)))<<(CAST(t1.c0 AS BLOB))) DESC LIMIT 1;
SELECT MIN(t1.c0) FROM t1 WHERE (((((((CASE t1.c1  WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)OR(((((((t1.c0)OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))))OR(-108180621 COLLATE NOCASE)))OR((+ (t1.c0)))));
SELECT MIN(t1.c0) FROM t1 WHERE (((((((((CASE t1.c1  WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)OR(((((((t1.c0)OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))))OR(-108180621 COLLATE NOCASE)))OR((+ (t1.c0)))))AND(CASE ((t1.c1)OR(t1.c1))  WHEN x'' THEN ((t1.c0)<(t1.c0)) ELSE CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END END))) ORDER BY (((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(t1.c0)) IN (t1.c1 COLLATE BINARY));
SELECT * FROM t1 WHERE (((((((((((((((t1.c1)LIKE(t1.c0)))AND(t1.c0)))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (NULL)))))AND(CASE t1.c1  WHEN 0X15da941e THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND(((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))))AND((- (t1.c1)))))AND(HEX(x''))));
SELECT ALL * FROM t1 WHERE (((((((((((((((t1.c1)LIKE(t1.c0)))AND(t1.c0)))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (NULL)))))AND(CASE t1.c1  WHEN 0x15da941e THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND(((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))))AND((- (t1.c1)))))AND(HEX(x'')))) ORDER BY (((((t1.c1)AND(t1.c1)))AND(t1.c1)) IN ((t1.c1 IN (t1.c0)), t1.c1 COLLATE NOCASE))  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (((((((((((((((t1.c1)LIKE(t1.c0)))AND(t1.c0)))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (NULL)))))AND(CASE t1.c1  WHEN 0X15da941e THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND(((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))))AND((- (t1.c1)))))AND(HEX(x''))));
SELECT ALL * FROM t1 WHERE (((((((((((((((t1.c1)LIKE(t1.c0)))AND(t1.c0)))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (NULL)))))AND(CASE t1.c1  WHEN 0x15da941e THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND(((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))))AND((- (t1.c1)))))AND(HEX(x'')))) ORDER BY (((((t1.c1)AND(t1.c1)))AND(t1.c1)) IN ((t1.c1 IN (t1.c0)), t1.c1 COLLATE NOCASE))  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))OR(CAST(t1.c0 AS BLOB))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))OR(CAST(t1.c0 AS BLOB))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))AND((((t1.c1)<=(x'')) IN (((t1.c1)IS NOT(t1.c0))))))) ORDER BY t1.c0, (+ (t1.c1))  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((((((LOWER(DISTINCT t1.c0))AND((t1.c0 IN ('-1985293329')))))OR((NOT (x'd682')))))OR(t1.c1))) ORDER BY t1.c0, (+ (t1.c1))  NULLS FIRST;
SELECT * FROM t1 WHERE ('S隀iS');
SELECT DISTINCT * FROM t1 WHERE ((('S隀iS')AND(((t1.c0)-(t1.c0)) COLLATE NOCASE))) ORDER BY QUOTE('/') ASC, '-1765478612'  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (IFNULL(t1.c1, t1.c0) COLLATE NOCASE) ORDER BY QUOTE('/') ASC, '-1765478612'  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE ('S隀iS');
SELECT DISTINCT * FROM t1 WHERE ((('S隀iS')AND(((t1.c0)-(t1.c0)) COLLATE NOCASE))) ORDER BY QUOTE('/') ASC, '-1765478612'  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (IFNULL(t1.c1, t1.c0) COLLATE NOCASE) ORDER BY QUOTE('/') ASC, '-1765478612'  NULLS LAST LIMIT 0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((t1.c1)) BETWEEN ((CASE WHEN t1.c1 THEN '0.9366707959460312' END)) AND ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))));
SELECT MIN(t1.c1) FROM t1 WHERE ((((t1.c1)) BETWEEN ((CASE WHEN t1.c1 THEN '0.9366707959460312' END)) AND ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)))) ORDER BY 0.4846706440493266  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((- (CAST(t1.c0 AS REAL)))) ORDER BY CASE WHEN CHAR(t1.c0) THEN (t1.c1 IN (t1.c1)) END ASC, (((0.5756319081758388)<=(t1.c1)) IN (t1.c0)) DESC  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((- (CAST(t1.c0 AS REAL)))) ORDER BY CASE WHEN CHAR(t1.c0) THEN (t1.c1 IN (t1.c1)) END ASC, (((0.5756319081758388)<=(t1.c1)) IN (t1.c0)) DESC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((t1.c0)OR((t1.c0 IN ()))))AND((+ (t1.c1)))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY CASE WHEN CHAR(t1.c0) THEN (t1.c1 IN (t1.c1)) END ASC, (((0.5756319081758388)<=(t1.c1)) IN (t1.c0)) DESC  NULLS FIRST LIMIT 1;
SELECT MAX(t1.c0) FROM t1 WHERE (((TRIM(t1.c0, t1.c1))>>(((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c0))))) ORDER BY t1.c0  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((TRIM(t1.c0, t1.c1))>>(((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))))AND(json_patch(((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(t1.c1)), ((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))))) ORDER BY t1.c1 ASC, CAST(CAST(t1.c1 AS INTEGER) AS INTEGER) INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (t1.c0) ORDER BY t1.c1 ASC, CAST(CAST(t1.c1 AS INTEGER) AS INTEGER);
SELECT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))>=(((t1.c0)*(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))>=(((t1.c0)*(t1.c0))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0)<=(t1.c0)) IN ()));
SELECT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))>=(((t1.c0)*(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))>=(((t1.c0)*(t1.c0))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0)<=(t1.c0)) IN ()));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c1) ISNULL))IS NOT(t1.c0 COLLATE BINARY))) ORDER BY CAST(((t1.c0)<(t1.c0)) AS REAL), CASE WHEN (NULL IN (t1.c1)) THEN LIKE(t1.c0, t1.c1) ELSE CASE WHEN t1.c1 THEN t1.c1 END END;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((t1.c1) ISNULL))IS NOT(t1.c0 COLLATE BINARY))) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)>(ROUND(t1.c0, '127362856')));
SELECT ALL * FROM t1 WHERE ((((0Xffffffffefb6b86b, (~ (t1.c1)), CAST(t1.c0 AS BLOB)))>=((ABS(DISTINCT t1.c0), (t1.c1 IN (t1.c1)), CAST(t1.c1 AS BLOB)))));
SELECT * FROM t1 WHERE ((((-273237909, (~ (t1.c1)), CAST(t1.c0 AS BLOB)))>((ABS(DISTINCT t1.c0), (t1.c1 IN (t1.c1)), CAST(t1.c1 AS BLOB))))) ORDER BY CASE CASE t1.c0  WHEN NULL THEN t1.c0 END  WHEN '1418587284' THEN ((t1.c1) NOTNULL) WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) THEN t1.c0 COLLATE RTRIM END ASC, CAST(((t1.c0)<=(t1.c1)) AS BLOB)  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (CAST((((t1.c1))<>((t1.c1))) AS BLOB)) ORDER BY CASE CASE t1.c0  WHEN NULL THEN t1.c0 END  WHEN '1418587284' THEN ((t1.c1) NOTNULL) WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) THEN t1.c0 COLLATE RTRIM END ASC, CAST(((t1.c0)<=(t1.c1)) AS BLOB)  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((0Xffffffffefb6b86b, (~ (t1.c1)), CAST(t1.c0 AS BLOB)))>=((ABS(DISTINCT t1.c0), (t1.c1 IN (t1.c1)), CAST(t1.c1 AS BLOB)))));
SELECT * FROM t1 WHERE ((((-273237909, (~ (t1.c1)), CAST(t1.c0 AS BLOB)))>((ABS(DISTINCT t1.c0), (t1.c1 IN (t1.c1)), CAST(t1.c1 AS BLOB))))) ORDER BY CASE CASE t1.c0  WHEN NULL THEN t1.c0 END  WHEN '1418587284' THEN ((t1.c1) NOTNULL) WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) THEN t1.c0 COLLATE RTRIM END ASC, CAST(((t1.c0)<=(t1.c1)) AS BLOB)  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (CAST((((t1.c1))<>((t1.c1))) AS BLOB)) ORDER BY CASE CASE t1.c0  WHEN NULL THEN t1.c0 END  WHEN '1418587284' THEN ((t1.c1) NOTNULL) WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) THEN t1.c0 COLLATE RTRIM END ASC, CAST(((t1.c0)<=(t1.c1)) AS BLOB)  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE ((LOWER(DISTINCT t1.c1) IN (((t1.c1) NOTNULL))));
SELECT MIN(t1.c1) FROM t1 WHERE ((LOWER(DISTINCT t1.c1) IN (((t1.c1) NOTNULL)))) INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c1) NOT NULL)) ISNULL));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (TRIM(DISTINCT (t1.c0 IN (t1.c1)), t1.c0 COLLATE NOCASE));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((TRIM(DISTINCT (t1.c0 IN (t1.c1)), t1.c0 COLLATE NOCASE))AND(json_valid((~ (t1.c1)))))) INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE ((('')|(t1.c0)));
SELECT DISTINCT * FROM t1 WHERE ((('')|(t1.c0))) ORDER BY (~ ((t1.c0 IN ()))), (NOT (PRINTF(t1.c0, t1.c0, x'58b023', t1.c1)))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY (~ ((t1.c0 IN ()))), (NOT (PRINTF(t1.c0, t1.c0, x'58b023', t1.c1)))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((('')|(t1.c0)));
SELECT DISTINCT * FROM t1 WHERE ((('')|(t1.c0))) ORDER BY (~ ((t1.c0 IN ()))), (NOT (PRINTF(t1.c0, t1.c0, x'58b023', t1.c1)))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY (~ ((t1.c0 IN ()))), (NOT (PRINTF(t1.c0, t1.c0, x'58b023', t1.c1)))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)<>(t1.c0)) AS NUMERIC)) ORDER BY (CAST(t1.c1 AS BLOB) IN ());
SELECT * FROM t1 WHERE (((CAST(((t1.c0)>(t1.c0)) AS NUMERIC))AND((+ (1.08318599E9))))) ORDER BY QUOTE(json_remove(t1.c1, t1.c0, t1.c0, t1.c0)), ABS(t1.c1 COLLATE NOCASE)  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ('1161785472') ORDER BY QUOTE(json_remove(t1.c1, t1.c0, t1.c0, t1.c0)), ABS(t1.c1 COLLATE NOCASE)  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)<>(t1.c0)) AS NUMERIC)) ORDER BY (CAST(t1.c1 AS BLOB) IN ());
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0 COLLATE BINARY, (t1.c1 IN ()))) AND ((TRIM(DISTINCT t1.c1, t1.c1), CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN '-1357763336' WHEN 'b' THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))));
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0 COLLATE BINARY, (t1.c1 IN ()))) AND ((TRIM(DISTINCT t1.c1, t1.c1), CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN '-1357763336' WHEN 'b' THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))))AND(((t1.c1)GLOB((t1.c0 IN (t1.c0, t1.c0))))))) ORDER BY ((((t1.c0))<>((t1.c1))) IN ()) ASC  NULLS LAST, (((((('9223372036854775807')AND((t1.c0 IN (t1.c1)))))AND(((((t1.c1)AND(x'e8e9')))OR('1877231690')))))OR(('M' IN (t1.c1, t1.c1)))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1) NOT NULL))|((((t1.c1, t1.c0, t1.c1, t1.c1))<=((t1.c1, t1.c0, t1.c0, t1.c1)))))) ORDER BY ((((t1.c0))!=((t1.c1))) IN ()) ASC  NULLS LAST, (((((('9223372036854775807')AND((t1.c0 IN (t1.c1)))))AND(((((t1.c1)AND(x'e8e9')))OR('1877231690')))))OR(('M' IN (t1.c1, t1.c1)))) DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0 COLLATE BINARY, (t1.c1 IN ()))) AND ((TRIM(DISTINCT t1.c1, t1.c1), CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN '-1357763336' WHEN 'b' THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))));
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0 COLLATE BINARY, (t1.c1 IN ()))) AND ((TRIM(DISTINCT t1.c1, t1.c1), CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN '-1357763336' WHEN 'b' THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))))AND(((t1.c1)GLOB((t1.c0 IN (t1.c0, t1.c0))))))) ORDER BY ((((t1.c0))<>((t1.c1))) IN ()) ASC  NULLS LAST, (((((('9223372036854775807')AND((t1.c0 IN (t1.c1)))))AND(((((t1.c1)AND(x'e8e9')))OR('1877231690')))))OR(('M' IN (t1.c1, t1.c1)))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1) NOT NULL))|((((t1.c1, t1.c0, t1.c1, t1.c1))<=((t1.c1, t1.c0, t1.c0, t1.c1)))))) ORDER BY ((((t1.c0))!=((t1.c1))) IN ()) ASC  NULLS LAST, (((((('9223372036854775807')AND((t1.c0 IN (t1.c1)))))AND(((((t1.c1)AND(x'e8e9')))OR('1877231690')))))OR(('M' IN (t1.c1, t1.c1)))) DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((+ (((t1.c1)>(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((+ (((t1.c1)>(t1.c1))))) ORDER BY ((t1.c0)|(t1.c0)) COLLATE RTRIM INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) IS TRUE)) IS FALSE)) ORDER BY ((t1.c0)|(t1.c0)) COLLATE RTRIM;
SELECT ALL * FROM t1 WHERE ((+ (((t1.c1)>(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((+ (((t1.c1)>(t1.c1))))) ORDER BY ((t1.c0)|(t1.c0)) COLLATE RTRIM INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) IS TRUE)) IS FALSE)) ORDER BY ((t1.c0)|(t1.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM t1 WHERE (-1624170603);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (0xffffffff9f311f95) ORDER BY t1.c1 ASC, CAST((- (t1.c1)) AS BLOB) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY t1.c1 ASC, CAST((- (t1.c1)) AS BLOB) DESC LIMIT 1;
SELECT COUNT(*) FROM t1 WHERE (TRIM(DISTINCT ((t1.c0)<<(t1.c1))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (TRIM(DISTINCT ((t1.c0)<<(t1.c1)))) ORDER BY (((t1.c1)) BETWEEN ((((t1.c0)AND(t1.c1)))) AND ((((t1.c0) IS FALSE)))) ASC  NULLS LAST, COALESCE(CAST(t1.c1 AS TEXT), ((t1.c1)>=(t1.c1)), (t1.c0 IN (x'882a')), t1.c1)  NULLS LAST LIMIT 0X6 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c1)) BETWEEN ((t1.c1, NULLIF(t1.c0, t1.c1))) AND (((t1.c0 IN (t1.c0, t1.c1)), CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)))) ORDER BY (((t1.c1)) BETWEEN ((((t1.c0)AND(t1.c1)))) AND ((((t1.c0) IS FALSE)))) ASC  NULLS LAST, COALESCE(CAST(t1.c1 AS TEXT), ((t1.c1)>=(t1.c1)), (t1.c0 IN (x'882a')), t1.c1)  NULLS LAST LIMIT 6;
SELECT MIN(t1.c1) FROM t1 WHERE (((t1.c0)>>(TYPEOF(t1.c1))));
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c0)>>(TYPEOF(t1.c1))))AND(NULLIF((((((((('-387506040')OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))AND(t1.c1)), NULLIF(t1.c1, 0.5594925581138818))))) ORDER BY ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END) IS TRUE) ASC  NULLS LAST, (((t1.c0) IS TRUE) IN (((('', t1.c0, x'')) BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c1))), TRIM(DISTINCT t1.c1)))  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE (((t1.c0) NOT NULL) COLLATE NOCASE) ORDER BY (((t1.c1, NULL)) BETWEEN ((NULL, (+ (t1.c0)))) AND (((~ (t1.c1)), CAST(t1.c0 AS NUMERIC)))) ASC, CASE WHEN ((t1.c1)>=(t1.c0)) THEN t1.c1 WHEN CAST(t1.c1 AS TEXT) THEN (t1.c0 IN ()) ELSE ((t1.c0)IS(t1.c0)) END DESC  NULLS LAST, COALESCE(DISTINCT (((t1.c0))<=((t1.c0))), (~ (0.5347548003129851)), ((t1.c0) NOTNULL), CASE WHEN t1.c0 THEN NULL WHEN t1.c1 THEN t1.c1 END, ((t1.c0)IS NOT(t1.c0))) DESC;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((t1.c0) NOT NULL) COLLATE NOCASE)AND((((t1.c1)) BETWEEN ((((t1.c1)>>(t1.c1)))) AND ((((t1.c1)>=(t1.c0)))))))) ORDER BY ((t1.c1 COLLATE RTRIM)>(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((t1.c1) IS FALSE))<<(t1.c0))) ORDER BY ((t1.c1 COLLATE RTRIM)>(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))) ASC  NULLS LAST LIMIT 0x1;
SELECT MAX(t1.c1) FROM t1 WHERE ((((NOT (t1.c0))) ISNULL)) ORDER BY t1.c1 ASC  NULLS LAST, ((TRIM(t1.c0, t1.c1)) IS TRUE) ASC  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((NOT (t1.c0))) ISNULL)) ORDER BY t1.c1 ASC  NULLS LAST, ((TRIM(t1.c0, t1.c1)) IS TRUE) ASC  NULLS LAST LIMIT 0X4;
SELECT ALL * FROM t1 WHERE (CAST(TRIM(t1.c0, t1.c0) AS INTEGER));
SELECT DISTINCT * FROM t1 WHERE (((CAST(TRIM(t1.c0, t1.c0) AS INTEGER))AND(CASE WHEN ((NULL) IS TRUE) THEN (NOT (t1.c0)) ELSE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) END)));
SELECT ALL * FROM t1 WHERE (CAST(TRIM(t1.c0, t1.c0) AS INTEGER));
SELECT DISTINCT * FROM t1 WHERE (((CAST(TRIM(t1.c0, t1.c0) AS INTEGER))AND(CASE WHEN ((NULL) IS TRUE) THEN (NOT (t1.c0)) ELSE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) END)));
SELECT * FROM t1 WHERE (((((t1.c0)<(x'957f34'))) BETWEEN (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c0))) AND (((((t1.c1)OR(t1.c0)))AND(t1.c0)))));
SELECT * FROM t1 WHERE (((((t1.c0)<(x'957f34'))) BETWEEN (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c0))) AND (((((t1.c1)OR(t1.c0)))AND(t1.c0))))) ORDER BY t1.c1, (- (((t1.c0) BETWEEN (0.3234351937353952) AND (t1.c0))))  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 WHERE (((((t1.c0)<(x'957f34'))) BETWEEN (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c0))) AND (((((t1.c1)OR(t1.c0)))AND(t1.c0)))));
SELECT * FROM t1 WHERE (((((t1.c0)<(x'957f34'))) BETWEEN (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c0))) AND (((((t1.c1)OR(t1.c0)))AND(t1.c0))))) ORDER BY t1.c1, (- (((t1.c0) BETWEEN (0.3234351937353952) AND (t1.c0))))  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC) ASC;
SELECT * FROM t1 WHERE (NULL) ORDER BY (((t1.c1)) NOT BETWEEN (((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND (('1232394875', t1.c1))))) AND ((t1.c0 COLLATE RTRIM)))  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC) ASC;
SELECT * FROM t1 WHERE (NULL) ORDER BY (((t1.c1)) NOT BETWEEN (((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND (('1232394875', t1.c1))))) AND ((t1.c0 COLLATE RTRIM)))  NULLS LAST LIMIT 0x2;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((NOT ((t1.c0 IN (-1.028690489E9))))) ORDER BY CAST(t1.c0 AS BLOB) COLLATE BINARY ASC  NULLS LAST, ((x'') ISNULL)  NULLS FIRST;
SELECT MAX(t1.c0) FROM t1 WHERE ((NOT ((t1.c0 IN (-1.028690489E9))))) ORDER BY CAST(t1.c0 AS BLOB) COLLATE BINARY ASC  NULLS LAST, ((x'') ISNULL)  NULLS FIRST INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (t1.c0) ORDER BY CAST(t1.c0 AS BLOB) COLLATE BINARY ASC  NULLS LAST, ((x'') ISNULL)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c0)))==(NULL))) ORDER BY CAST(((((((t1.c0)OR(t1.c0)))AND(NULL)))OR(t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c0 IN (t1.c0)))==(NULL))) ORDER BY CAST(((((((t1.c0)OR(t1.c0)))AND(NULL)))OR(t1.c0)) AS NUMERIC)  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c0)))==(NULL))) ORDER BY CAST(((((((t1.c0)OR(t1.c0)))AND(NULL)))OR(t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c0 IN (t1.c0)))==(NULL))) ORDER BY CAST(((((((t1.c0)OR(t1.c0)))AND(NULL)))OR(t1.c0)) AS NUMERIC)  NULLS FIRST LIMIT 1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((t1.c0, t1.c1)) BETWEEN ((CAST(t1.c1 AS INTEGER), CASE t1.c0  WHEN 0xffffffffc7b698ff THEN t1.c0 ELSE 0.24705977801116574 END)) AND (((((t1.c0, t1.c1))=((t1.c0, t1.c1))), ((t1.c0) NOT NULL))))) ORDER BY CASE WHEN NULLIF(DISTINCT t1.c0, t1.c0) THEN ((((t1.c1)AND(t1.c1)))OR(t1.c1)) WHEN (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) THEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))) ELSE ((t1.c1)>=(t1.c1)) END DESC, NULL, CASE UPPER(t1.c0)  WHEN t1.c1 COLLATE NOCASE THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) ELSE ((((((t1.c1)OR(0.8344482362493202)))OR(0X2c4a8106)))OR(t1.c1)) END ASC  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((((t1.c0, t1.c1)) BETWEEN ((CAST(t1.c1 AS INTEGER), CASE t1.c0  WHEN -944334593 THEN t1.c0 ELSE 0.24705977801116574 END)) AND (((((t1.c0, t1.c1))=((t1.c0, t1.c1))), ((t1.c0) NOT NULL)))))AND(t1.c1))) ORDER BY ((((((((t1.c1) IS FALSE))AND(ABS(t1.c0))))AND(((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))))OR(t1.c1)), CASE t1.c0 COLLATE NOCASE  WHEN t1.c0 THEN ((x'') BETWEEN (t1.c1) AND (t1.c1)) WHEN (~ (t1.c0)) THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) WHEN (- ('77817654')) THEN ((t1.c1)GLOB(t1.c0)) WHEN NULL THEN (((t1.c0))>=((t1.c0))) WHEN ((((((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)) THEN NULL WHEN CAST(t1.c1 AS INTEGER) THEN ((((t1.c0)AND(t1.c1)))OR(t1.c0)) ELSE ((t1.c1)IS(t1.c1)) END  NULLS LAST, (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))!=(((NOT (t1.c1)))))  NULLS FIRST INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) AND ((((t1.c0, t1.c0))<>((t1.c1, t1.c1)))))) ORDER BY ((((((((t1.c1) IS FALSE))AND(ABS(t1.c0))))AND(((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))))OR(t1.c1)), CASE t1.c0 COLLATE NOCASE  WHEN t1.c0 THEN ((x'') BETWEEN (t1.c1) AND (t1.c1)) WHEN (~ (t1.c0)) THEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) WHEN (- ('77817654')) THEN ((t1.c1)GLOB(t1.c0)) WHEN NULL THEN (((t1.c0))>=((t1.c0))) WHEN ((((((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)) THEN NULL WHEN CAST(t1.c1 AS INTEGER) THEN ((((t1.c0)AND(t1.c1)))OR(t1.c0)) ELSE ((t1.c1)IS(t1.c1)) END  NULLS LAST, (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))!=(((NOT (t1.c1)))))  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (x'7c') ORDER BY (~ (json_object(t1.c0, t1.c1, 0.2543391228953542)))  NULLS FIRST, (~ (((x'4454')IS NOT(t1.c1)))) DESC  NULLS LAST, (~ (((t1.c1) ISNULL))) ASC  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE (x'7c') ORDER BY (LIKELY(DISTINCT t1.c0) IN (t1.c1)), ((t1.c1)GLOB(((t1.c1)<=(t1.c1)))) INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE (((CASE WHEN t1.c1 THEN '⤆8P' WHEN t1.c0 THEN t1.c1 END) NOT BETWEEN (t1.c1) AND ((t1.c1 IN ())))) ORDER BY (LIKELY(DISTINCT t1.c0) IN (t1.c1)), ((t1.c1)GLOB(((t1.c1)<=(t1.c1))));
SELECT * FROM t1 WHERE (CAST(0.7000723084556179 AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (((CAST(0.7000723084556179 AS BLOB))AND((- ('853913989'))))) ORDER BY ((0.8338612263756008)>(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))), (((((0.28305881043194536)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))/(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)), (('-910958179')&((((t1.c1))<((t1.c0))))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((0.12846473095325717)-(CAST(t1.c0 AS TEXT)))) ORDER BY ((0.8338612263756008)>(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))), (((((0.28305881043194536)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))/(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)), (('-910958179')&((((t1.c1))<((t1.c0))))) ASC  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 WHERE (CAST(0.7000723084556179 AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (((CAST(0.7000723084556179 AS BLOB))AND((- ('853913989'))))) ORDER BY ((0.8338612263756008)>(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))), (((((0.28305881043194536)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))/(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)), (('-910958179')&((((t1.c1))<((t1.c0))))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((0.12846473095325717)-(CAST(t1.c0 AS TEXT)))) ORDER BY ((0.8338612263756008)>(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))), (((((0.28305881043194536)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))/(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)), (('-910958179')&((((t1.c1))<((t1.c0))))) ASC  NULLS FIRST LIMIT 0x0;
SELECT MIN(t1.c0) FROM t1 WHERE ((+ (((t1.c1) NOT BETWEEN (t1.c1) AND (0.9643035514012848)))));
SELECT MIN(t1.c0) FROM t1 WHERE ((+ (((t1.c1) NOT BETWEEN (t1.c1) AND (0.9643035514012848)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c1) IS TRUE) COLLATE RTRIM) ORDER BY ((((((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))>((- (t1.c1)))) ASC, '	|r,䇛1&' ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1) IS TRUE) COLLATE RTRIM)AND(((CAST(t1.c1 AS TEXT))>=(((t1.c1)OR(t1.c1))))))) ORDER BY ((((((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))>((- (t1.c1)))) ASC, '	|r,䇛1&' ASC;
SELECT * FROM t1 WHERE (CASE NULLIF(t1.c0, t1.c0)  WHEN ((t1.c0) NOT NULL) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE NULL END WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c1 END THEN ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) END);
SELECT ALL * FROM t1 WHERE (CASE NULLIF(t1.c0, t1.c0)  WHEN ((t1.c0) NOT NULL) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE NULL END WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c1 END THEN ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) END) INTERSECT SELECT ALL * FROM t1 WHERE ('-1436649708');
SELECT * FROM t1 WHERE (CASE NULLIF(t1.c0, t1.c0)  WHEN ((t1.c0) NOT NULL) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE NULL END WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c1 END THEN ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) END);
SELECT ALL * FROM t1 WHERE (CASE NULLIF(t1.c0, t1.c0)  WHEN ((t1.c0) NOT NULL) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE NULL END WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN t1.c1 END THEN ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) END) INTERSECT SELECT ALL * FROM t1 WHERE ('-1436649708');
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c0)/(t1.c0))) IS FALSE)) ORDER BY (((((((t1.c1)OR(t1.c1)))AND(-1415981947))))=((t1.c0 COLLATE RTRIM))) ASC, (((t1.c1 IN (t1.c1))) ISNULL), ((((t1.c1) IS FALSE))&(((t1.c1)AND(t1.c0))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((t1.c0)/(t1.c0))) IS FALSE)) ORDER BY (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) IN (UNLIKELY(t1.c0))) INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((NOT (((((((((t1.c0)AND(NULL)))AND(x'44fb6e')))AND(t1.c1)))OR(t1.c1))))) ORDER BY (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) IN (UNLIKELY(t1.c0)));
SELECT MAX(t1.c1) FROM t1 WHERE ((((t1.c1 IN (t1.c0, t1.c1)))%(((t1.c1) NOTNULL))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((t1.c1 IN (t1.c0, t1.c1)))%(((t1.c1) NOTNULL)))) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CAST(((((t1.c0)OR(t1.c0)))OR(t1.c0)) AS REAL));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (LTRIM(LIKELY(DISTINCT t1.c1), ((t1.c1)IS(t1.c1)))) ORDER BY CASE (- (t1.c0))  WHEN ((((((0.3860706027386165)AND(t1.c1)))OR(t1.c1)))AND(0.4805924645969427)) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN CAST(t1.c0 AS REAL) THEN (+ (t1.c0)) WHEN 'P&GDD' THEN PRINTF(t1.c1, t1.c0) END DESC  NULLS LAST, ((TRIM(0.18187459489100466))*(t1.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (LTRIM(LIKELY(DISTINCT t1.c1), ((t1.c1)IS(t1.c1)))) ORDER BY CASE (- (t1.c0))  WHEN ((((((0.3860706027386165)AND(t1.c1)))OR(t1.c1)))AND(0.4805924645969427)) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN CAST(t1.c0 AS REAL) THEN (+ (t1.c0)) WHEN 'P&GDD' THEN PRINTF(t1.c1, t1.c0) END DESC  NULLS LAST, ((TRIM(0.18187459489100466))*(t1.c1 COLLATE RTRIM)) DESC  NULLS LAST LIMIT 0X1 INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (((((((((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)AND(CAST(t1.c1 AS REAL))))AND(t1.c1 COLLATE BINARY)))AND((((t1.c1, t1.c0, t1.c1, 0.2289213351425552))>((t1.c0, t1.c0, t1.c1, x'82e0'))))))OR(((t1.c0)<=(t1.c0))))) ORDER BY CASE (- (t1.c0))  WHEN ((((((0.3860706027386165)AND(t1.c1)))OR(t1.c1)))AND(0.4805924645969427)) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN CAST(t1.c0 AS REAL) THEN (+ (t1.c0)) WHEN 'P&GDD' THEN PRINTF(t1.c1, t1.c0) END DESC  NULLS LAST, ((TRIM(0.18187459489100466))*(t1.c1 COLLATE RTRIM)) DESC  NULLS LAST LIMIT 0x1;
SELECT * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)AND(t1.c0))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (UPPER(t1.c1) COLLATE BINARY) LIMIT 0X1;
SELECT * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)AND(t1.c0))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (UPPER(t1.c1) COLLATE BINARY) LIMIT 0X1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c0)>(MIN(t1.c1, t1.c1))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c0)>(MIN(t1.c1, t1.c1)))) LIMIT 2 INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((t1.c0, t1.c0, 0.5077804362111781, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c1, t1.c0, t1.c0))) COLLATE NOCASE) LIMIT 0x2;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1 COLLATE RTRIM) ORDER BY UPPER(((t1.c1) NOT NULL)) ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c1 COLLATE RTRIM) ORDER BY t1.c0, (((t1.c1, t1.c0, t1.c1)) BETWEEN ((((t1.c0)>>(t1.c1)), CAST(t1.c1 AS BLOB), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)) AND ((((t1.c0)=(t1.c1)), (+ (NULL)), t1.c1 COLLATE NOCASE))) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CAST(t1.c1 AS TEXT)) NOT NULL)) ORDER BY t1.c0, (((t1.c1, t1.c0, t1.c1)) BETWEEN ((((t1.c0)>>(t1.c1)), CAST(t1.c1 AS BLOB), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)) AND ((((t1.c0)=(t1.c1)), (+ (NULL)), t1.c1 COLLATE NOCASE)));
SELECT ALL * FROM t1 WHERE (CASE WHEN (+ (t1.c0)) THEN CAST(t1.c1 AS INTEGER) WHEN '440482288' THEN ((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN NULL WHEN ((t1.c1)<=(t1.c1)) THEN (NULL IN (t1.c0)) WHEN (t1.c0 IN (t1.c0)) THEN ((('-273667050', t1.c1, t1.c0)) BETWEEN (('1083185990', t1.c1, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))) END) ORDER BY NULL DESC, CAST(t1.c0 AS NUMERIC) ASC, (((t1.c1 IN (t1.c0))) BETWEEN ('1N''ou8*z' COLLATE BINARY) AND (((t1.c1)AND(t1.c1))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN (+ (t1.c0)) THEN CAST(t1.c1 AS INTEGER) WHEN '440482288' THEN ((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN NULL WHEN ((t1.c1)=(t1.c1)) THEN (NULL IN (t1.c0)) WHEN (t1.c0 IN (t1.c0)) THEN ((('-273667050', t1.c1, t1.c0)) BETWEEN (('1083185990', t1.c1, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))) END)AND(LIKELY(DISTINCT t1.c0 COLLATE NOCASE)))) ORDER BY NULL DESC, CAST(t1.c0 AS NUMERIC) ASC, (((t1.c1 IN (t1.c0))) BETWEEN ('1N''ou8*z' COLLATE BINARY) AND (((t1.c1)AND(t1.c1))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CASE WHEN (+ (t1.c0)) THEN CAST(t1.c1 AS INTEGER) WHEN '440482288' THEN ((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN NULL WHEN ((t1.c1)<=(t1.c1)) THEN (NULL IN (t1.c0)) WHEN (t1.c0 IN (t1.c0)) THEN ((('-273667050', t1.c1, t1.c0)) BETWEEN (('1083185990', t1.c1, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))) END) ORDER BY NULL DESC, CAST(t1.c0 AS NUMERIC) ASC, (((t1.c1 IN (t1.c0))) BETWEEN ('1N''ou8*z' COLLATE BINARY) AND (((t1.c1)AND(t1.c1))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN (+ (t1.c0)) THEN CAST(t1.c1 AS INTEGER) WHEN '440482288' THEN ((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN NULL WHEN ((t1.c1)=(t1.c1)) THEN (NULL IN (t1.c0)) WHEN (t1.c0 IN (t1.c0)) THEN ((('-273667050', t1.c1, t1.c0)) BETWEEN (('1083185990', t1.c1, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))) END)AND(LIKELY(DISTINCT t1.c0 COLLATE NOCASE)))) ORDER BY NULL DESC, CAST(t1.c0 AS NUMERIC) ASC, (((t1.c1 IN (t1.c0))) BETWEEN ('1N''ou8*z' COLLATE BINARY) AND (((t1.c1)AND(t1.c1))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0 COLLATE BINARY, (t1.c0 IN (t1.c0)), 0.5294625062874918))>((CASE t1.c0  WHEN t1.c1 THEN t1.c0 END, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), HEX(DISTINCT t1.c1))))) ORDER BY x'58', ((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))AND(CASE 0.6606943303240345  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))OR(((t1.c0)IS(t1.c0)))) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 COLLATE BINARY, (t1.c0 IN (t1.c0)), 0.5294625062874918))>((CASE t1.c0  WHEN t1.c1 THEN t1.c0 END, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), HEX(DISTINCT t1.c1)))))AND(CASE WHEN t1.c0 THEN t1.c1 COLLATE NOCASE WHEN CAST(t1.c0 AS BLOB) THEN CAST(t1.c1 AS TEXT) END))) ORDER BY x'58', ((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))AND(CASE 0.6606943303240345  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))OR(((t1.c0)IS(t1.c0)))) ASC LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((t1.c0 COLLATE BINARY, (t1.c0 IN (t1.c0)), 0.5294625062874918))>((CASE t1.c0  WHEN t1.c1 THEN t1.c0 END, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), HEX(DISTINCT t1.c1))))) ORDER BY x'58', ((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))AND(CASE 0.6606943303240345  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))OR(((t1.c0)IS(t1.c0)))) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 COLLATE BINARY, (t1.c0 IN (t1.c0)), 0.5294625062874918))>((CASE t1.c0  WHEN t1.c1 THEN t1.c0 END, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), HEX(DISTINCT t1.c1)))))AND(CASE WHEN t1.c0 THEN t1.c1 COLLATE NOCASE WHEN CAST(t1.c0 AS BLOB) THEN CAST(t1.c1 AS TEXT) END))) ORDER BY x'58', ((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))AND(CASE 0.6606943303240345  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))OR(((t1.c0)IS(t1.c0)))) ASC LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0, t1.c0))==((t1.c0, t1.c1, t1.c1, t1.c1))))-(t1.c0 COLLATE BINARY)));
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0, t1.c0))==((t1.c0, t1.c1, t1.c1, t1.c1))))-(t1.c0 COLLATE BINARY))) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN NULL ELSE t1.c1 END) NOT BETWEEN (t1.c1) AND (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))) DESC, CASE WHEN CAST(t1.c1 AS BLOB) THEN ((t1.c1)OR(0x6172a81)) ELSE ((((t1.c1)OR(t1.c0)))OR(t1.c1)) END LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0, t1.c0))==((t1.c0, t1.c1, t1.c1, t1.c1))))-(t1.c0 COLLATE BINARY)));
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0, t1.c0))==((t1.c0, t1.c1, t1.c1, t1.c1))))-(t1.c0 COLLATE BINARY))) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN NULL ELSE t1.c1 END) NOT BETWEEN (t1.c1) AND (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))) DESC, CASE WHEN CAST(t1.c1 AS BLOB) THEN ((t1.c1)OR(0x6172a81)) ELSE ((((t1.c1)OR(t1.c0)))OR(t1.c1)) END LIMIT 1;
SELECT MAX(t1.c1) FROM t1 WHERE (((((((t1.c0)>>(t1.c0)))OR(x'')))AND(t1.c0 COLLATE RTRIM))) ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c0)=(t1.c1)))) AND ((((t1.c0) NOT NULL))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((((t1.c0)>>(t1.c0)))OR(x'')))AND(t1.c0 COLLATE RTRIM)))AND(NULL))) ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c0)==(t1.c1)))) AND ((((t1.c0) NOT NULL))));
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 COLLATE BINARY THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((t1.c1)>>(t1.c0)) THEN (~ (t1.c0)) ELSE ROUND(t1.c0, t1.c0) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c0 COLLATE BINARY THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((t1.c1)>>(t1.c0)) THEN (~ (t1.c0)) ELSE ROUND(t1.c0, t1.c0) END)AND(CASE WHEN ('p퀈Y)' IN (t1.c0)) THEN (t1.c0 IN (t1.c1)) END))) ORDER BY IFNULL(0x548dec94, ((t1.c1) IS TRUE)) ASC  NULLS FIRST, (((t1.c1)) BETWEEN (((t1.c1 IN (t1.c1, t1.c0)))) AND (((((t1.c1))>=((t1.c0)))))) LIMIT 2;
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 COLLATE BINARY THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((t1.c1)>>(t1.c0)) THEN (~ (t1.c0)) ELSE ROUND(t1.c0, t1.c0) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c0 COLLATE BINARY THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((t1.c1)>>(t1.c0)) THEN (~ (t1.c0)) ELSE ROUND(t1.c0, t1.c0) END)AND(CASE WHEN ('p퀈Y)' IN (t1.c0)) THEN (t1.c0 IN (t1.c1)) END))) ORDER BY IFNULL(0x548dec94, ((t1.c1) IS TRUE)) ASC  NULLS FIRST, (((t1.c1)) BETWEEN (((t1.c1 IN (t1.c1, t1.c0)))) AND (((((t1.c1))>=((t1.c0)))))) LIMIT 2;
SELECT MAX(t1.c0) FROM t1 WHERE (((HEX(DISTINCT t1.c0)) IS FALSE));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((HEX(DISTINCT t1.c0)) IS FALSE)) ORDER BY ABS(((t1.c1) NOTNULL)) LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1 COLLATE BINARY, CAST(t1.c0 AS TEXT), (+ (t1.c1)))) AND ((((0.362700162950536)AND(t1.c0)), CAST(t1.c0 AS NUMERIC), t1.c0 COLLATE NOCASE)))) ORDER BY ABS(((t1.c1) NOTNULL)) LIMIT 0;
SELECT * FROM t1 WHERE (CASE CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END  WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN (t1.c0 IN (t1.c0)) ELSE (t1.c0 IN (t1.c0)) END) ORDER BY t1.c0 ASC, ((((t1.c1)OR(t1.c1)))OR(t1.c1)) COLLATE BINARY DESC  NULLS LAST, ((((t1.c0)LIKE(x''))) NOT BETWEEN (((t1.c0)>>(t1.c0))) AND (((((t1.c0)AND(t1.c0)))OR(t1.c0))))  NULLS LAST;
SELECT * FROM t1 WHERE (CASE CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END  WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN (t1.c0 IN (t1.c0)) ELSE (t1.c0 IN (t1.c0)) END) ORDER BY t1.c0 ASC, ((((t1.c1)OR(t1.c1)))OR(t1.c1)) COLLATE BINARY DESC  NULLS LAST, ((((t1.c0)LIKE(x''))) NOT BETWEEN (((t1.c0)>>(t1.c0))) AND (((((t1.c0)AND(t1.c0)))OR(t1.c0))))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1))  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((536044823, t1.c0))) ELSE COALESCE(DISTINCT t1.c0, NULL, t1.c0) END) ORDER BY t1.c0 ASC, ((((t1.c1)OR(t1.c1)))OR(t1.c1)) COLLATE BINARY DESC  NULLS LAST, ((((t1.c0)LIKE(x''))) NOT BETWEEN (((t1.c0)>>(t1.c0))) AND (((((t1.c0)AND(t1.c0)))OR(t1.c0))))  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 WHERE (CASE CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END  WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN (t1.c0 IN (t1.c0)) ELSE (t1.c0 IN (t1.c0)) END) ORDER BY t1.c0 ASC, ((((t1.c1)OR(t1.c1)))OR(t1.c1)) COLLATE BINARY DESC  NULLS LAST, ((((t1.c0)LIKE(x''))) NOT BETWEEN (((t1.c0)>>(t1.c0))) AND (((((t1.c0)AND(t1.c0)))OR(t1.c0))))  NULLS LAST;
SELECT * FROM t1 WHERE (CASE CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END  WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN (t1.c0 IN (t1.c0)) ELSE (t1.c0 IN (t1.c0)) END) ORDER BY t1.c0 ASC, ((((t1.c1)OR(t1.c1)))OR(t1.c1)) COLLATE BINARY DESC  NULLS LAST, ((((t1.c0)LIKE(x''))) NOT BETWEEN (((t1.c0)>>(t1.c0))) AND (((((t1.c0)AND(t1.c0)))OR(t1.c0))))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1))  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((536044823, t1.c0))) ELSE COALESCE(DISTINCT t1.c0, NULL, t1.c0) END) ORDER BY t1.c0 ASC, ((((t1.c1)OR(t1.c1)))OR(t1.c1)) COLLATE BINARY DESC  NULLS LAST, ((((t1.c0)LIKE(x''))) NOT BETWEEN (((t1.c0)>>(t1.c0))) AND (((((t1.c0)AND(t1.c0)))OR(t1.c0))))  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 WHERE ((('41683678') IS FALSE) COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE ((((('41683678') IS FALSE) COLLATE BINARY)AND(((CAST(t1.c1 AS BLOB)) IS TRUE)))) ORDER BY (((t1.c0, t1.c0)) BETWEEN (((((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, x'71587b95'))), ((t1.c0) NOT BETWEEN ('') AND (t1.c1)))) AND ((t1.c0 COLLATE RTRIM, ((t1.c0) NOTNULL)))) ASC  NULLS LAST, LIKELY(DISTINCT ((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((-1751615192) ISNULL)) ORDER BY (((t1.c0, t1.c0)) BETWEEN (((((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, x'71587b95'))), ((t1.c0) NOT BETWEEN ('') AND (t1.c1)))) AND ((t1.c0 COLLATE RTRIM, ((t1.c0) NOTNULL)))) ASC  NULLS LAST, LIKELY(DISTINCT ((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1))) LIMIT 0x1;
SELECT * FROM t1 WHERE ((('41683678') IS FALSE) COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE ((((('41683678') IS FALSE) COLLATE BINARY)AND(((CAST(t1.c1 AS BLOB)) IS TRUE)))) ORDER BY (((t1.c0, t1.c0)) BETWEEN (((((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, x'71587b95'))), ((t1.c0) NOT BETWEEN ('') AND (t1.c1)))) AND ((t1.c0 COLLATE RTRIM, ((t1.c0) NOTNULL)))) ASC  NULLS LAST, LIKELY(DISTINCT ((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((-1751615192) ISNULL)) ORDER BY (((t1.c0, t1.c0)) BETWEEN (((((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, x'71587b95'))), ((t1.c0) NOT BETWEEN ('') AND (t1.c1)))) AND ((t1.c0 COLLATE RTRIM, ((t1.c0) NOTNULL)))) ASC  NULLS LAST, LIKELY(DISTINCT ((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1))) LIMIT 0x1;
SELECT MIN(t1.c0) FROM t1 WHERE (CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN x'40' ELSE t1.c0 END COLLATE NOCASE);
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN x'40' ELSE t1.c0 END COLLATE NOCASE) ORDER BY ((t1.c0)+(t1.c1)) COLLATE BINARY DESC  NULLS FIRST, CAST(CASE t1.c1  WHEN t1.c1 THEN t1.c0 END AS INTEGER) ASC LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (CAST((t1.c1 IN (t1.c0)) AS BLOB)) ORDER BY (((t1.c0, (~ (t1.c0))))>=(((- (t1.c1)), CAST(t1.c0 AS TEXT)))), ((t1.c0 COLLATE BINARY) NOTNULL)  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CAST((t1.c1 IN (t1.c0)) AS BLOB))AND((((((t1.c1)*(t1.c0)), ((t1.c1)%(t1.c1)), ((t1.c0) IS TRUE)))<((ABS(DISTINCT t1.c0), t1.c1, t1.c0)))))) ORDER BY CAST((t1.c1 IN (t1.c1, t1.c1)) AS INTEGER) ASC, (((- (t1.c0)))<<((- (t1.c1))));
SELECT ALL * FROM t1 WHERE (CAST((t1.c1 IN (t1.c0)) AS BLOB)) ORDER BY (((t1.c0, (~ (t1.c0))))>=(((- (t1.c1)), CAST(t1.c0 AS TEXT)))), ((t1.c0 COLLATE BINARY) NOTNULL)  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CAST((t1.c1 IN (t1.c0)) AS BLOB))AND((((((t1.c1)*(t1.c0)), ((t1.c1)%(t1.c1)), ((t1.c0) IS TRUE)))<((ABS(DISTINCT t1.c0), t1.c1, t1.c0)))))) ORDER BY CAST((t1.c1 IN (t1.c1, t1.c1)) AS INTEGER) ASC, (((- (t1.c0)))<<((- (t1.c1))));
SELECT ALL * FROM t1 WHERE (TRIM(((t1.c0)+('936347039')), (t1.c1 IN (t1.c1)))) ORDER BY ((t1.c0) IS FALSE) ASC  NULLS FIRST, (((t1.c1)) BETWEEN ((((t1.c1)*(t1.c1)))) AND ((NULL))) DESC;
SELECT * FROM t1 WHERE (((TRIM(((t1.c0)+('936347039')), (t1.c1 IN (t1.c1))))AND((((((((((((((((((('Fi~{#~')OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(((t1.c0)&(t1.c0)))))AND(t1.c1)))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END))))) ORDER BY ((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c1)+(t1.c0))) AND ('%x')) ASC  NULLS LAST, SQLITE_COMPILEOPTION_GET(-2096924026) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((((((((((t1.c1)*(t1.c0)))OR(t1.c0 COLLATE RTRIM)))AND((- (t1.c0)))))AND((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY ((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c1)+(t1.c0))) AND ('%x')) ASC  NULLS LAST, SQLITE_COMPILEOPTION_GET(-2096924026) LIMIT 0;
SELECT ALL * FROM t1 WHERE (TRIM(((t1.c0)+('936347039')), (t1.c1 IN (t1.c1)))) ORDER BY ((t1.c0) IS FALSE) ASC  NULLS FIRST, (((t1.c1)) BETWEEN ((((t1.c1)*(t1.c1)))) AND ((NULL))) DESC;
SELECT * FROM t1 WHERE (((TRIM(((t1.c0)+('936347039')), (t1.c1 IN (t1.c1))))AND((((((((((((((((((('Fi~{#~')OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(((t1.c0)&(t1.c0)))))AND(t1.c1)))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END))))) ORDER BY ((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c1)+(t1.c0))) AND ('%x')) ASC  NULLS LAST, SQLITE_COMPILEOPTION_GET(-2096924026) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((((((((((t1.c1)*(t1.c0)))OR(t1.c0 COLLATE RTRIM)))AND((- (t1.c0)))))AND((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY ((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c1)+(t1.c0))) AND ('%x')) ASC  NULLS LAST, SQLITE_COMPILEOPTION_GET(-2096924026) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((NULL)OR(t1.c0)))AND(t1.c1)) COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE (((((NULL)OR(t1.c0)))AND(t1.c1)) COLLATE BINARY) ORDER BY highlight(t1.c1, CAST(x'e5c5' AS NUMERIC), x'', (x'6aa6' IN (t1.c1))) ASC, UPPER(((t1.c1)>>(t1.c1))) ASC, TRIM(DISTINCT ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (NULL) ORDER BY highlight(t1.c1, CAST(x'e5c5' AS NUMERIC), x'', (x'6aa6' IN (t1.c1))) ASC, UPPER(((t1.c1)>>(t1.c1))) ASC, TRIM(DISTINCT ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) DESC LIMIT 2;
SELECT ALL * FROM t1 WHERE (((((NULL)OR(t1.c0)))AND(t1.c1)) COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE (((((NULL)OR(t1.c0)))AND(t1.c1)) COLLATE BINARY) ORDER BY highlight(t1.c1, CAST(x'e5c5' AS NUMERIC), x'', (x'6aa6' IN (t1.c1))) ASC, UPPER(((t1.c1)>>(t1.c1))) ASC, TRIM(DISTINCT ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (NULL) ORDER BY highlight(t1.c1, CAST(x'e5c5' AS NUMERIC), x'', (x'6aa6' IN (t1.c1))) ASC, UPPER(((t1.c1)>>(t1.c1))) ASC, TRIM(DISTINCT ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) DESC LIMIT 2;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) BETWEEN ((- (NULL))) AND (((t1.c0)&(t1.c0))))) ORDER BY (((ABS(t1.c0)))!=(((('-1521711037')AND(t1.c0))))) DESC  NULLS LAST, ((((((t1.c1)!=(t1.c1)))AND(2.109462779E9)))OR(t1.c0))  NULLS FIRST, ((((((((((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))AND(t1.c0)))OR(((t1.c0)<(t1.c1)))))OR((- (t1.c1)))))AND(t1.c0 COLLATE RTRIM)))AND(t1.c0 COLLATE BINARY)))AND((((((((('U쎧
X')AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(x'')))) ASC, t1.c0;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) BETWEEN ((- (NULL))) AND (((t1.c0)&(t1.c0))))) ORDER BY (+ (ABS(DISTINCT t1.c0)))  NULLS FIRST LIMIT 2;
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT ('-1149923470'))) ORDER BY json_remove(CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE NULL END, t1.c0) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT ('-1149923470'))) ORDER BY json_remove(CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE NULL END, t1.c0) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)||(((t1.c1) IS FALSE))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)||(((t1.c1) IS FALSE))))AND((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)) IN (((((t1.c1)AND(t1.c0)))OR(t1.c1))))))) LIMIT 0x0;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))&(((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(-1997783105))))) ORDER BY ((((((((((((t1.c0)&(t1.c0)))OR(CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)))AND(CASE WHEN t1.c0 THEN t1.c0 END)))OR(t1.c1)))AND(((t1.c1)<=(t1.c0)))))AND((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))))) ASC  NULLS FIRST, (CAST(t1.c0 AS INTEGER) IN (((((t1.c0)OR(t1.c1)))AND(t1.c1)))) ASC  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))&(((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(-1997783105))))) ORDER BY ((((((((((((t1.c0)&(t1.c0)))OR(CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)))AND(CASE WHEN t1.c0 THEN t1.c0 END)))OR(t1.c1)))AND(((t1.c1)<=(t1.c0)))))AND((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))))) ASC  NULLS FIRST, (CAST(t1.c0 AS INTEGER) IN (((((t1.c0)OR(t1.c1)))AND(t1.c1)))) ASC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0)<=(t1.c1))  WHEN TYPEOF(t1.c0) THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END END) ORDER BY (0xffffffff95958bb6 IN (NULL)) ASC  NULLS FIRST, ((COALESCE(t1.c1, t1.c0, t1.c1))==(t1.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE ((t1.c0)<=(t1.c1))  WHEN TYPEOF(t1.c0) THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END END) ORDER BY (-1785361482 IN (NULL)) ASC  NULLS FIRST, ((COALESCE(t1.c1, t1.c0, t1.c1))=(t1.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0)<=(t1.c1))  WHEN TYPEOF(t1.c0) THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END END) ORDER BY (0xffffffff95958bb6 IN (NULL)) ASC  NULLS FIRST, ((COALESCE(t1.c1, t1.c0, t1.c1))==(t1.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE ((t1.c0)<=(t1.c1))  WHEN TYPEOF(t1.c0) THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END END) ORDER BY (-1785361482 IN (NULL)) ASC  NULLS FIRST, ((COALESCE(t1.c1, t1.c0, t1.c1))=(t1.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE ((NOT (t1.c1)) COLLATE RTRIM);
SELECT DISTINCT * FROM t1 NOT INDEXED WHERE ((((NOT (t1.c1)) COLLATE RTRIM)AND(((((((CAST(t1.c0 AS NUMERIC))OR((t1.c1 IN (t1.c1)))))AND(((t1.c0)-(t1.c1)))))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))))) LIMIT 0x0;
SELECT * FROM t1 WHERE ((NOT (t1.c1)) COLLATE RTRIM);
SELECT DISTINCT * FROM t1 NOT INDEXED WHERE ((((NOT (t1.c1)) COLLATE RTRIM)AND(((((((CAST(t1.c0 AS NUMERIC))OR((t1.c1 IN (t1.c1)))))AND(((t1.c0)-(t1.c1)))))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))))) LIMIT 0x0;
SELECT * FROM t1 WHERE (0Xffffffffc1db92fb);
SELECT ALL * FROM t1 WHERE (((-1042574597)AND(((((t1.c1 COLLATE RTRIM)AND(CAST(t1.c0 AS REAL))))AND((NOT (NULL))))))) ORDER BY ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(0xfffffffffe9bfa3a)))OR(x'')))>(((t1.c0) IS TRUE))) ASC, (((t1.c0)) NOT BETWEEN ((CAST(t1.c1 AS TEXT))) AND ((((0.06389991955429708)!=(t1.c0))))) ASC  NULLS LAST, t1.c1 ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t1 NOT INDEXED WHERE ((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))))LIKE(((t1.c0) NOTNULL)))) ORDER BY ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(-23332294)))OR(x'')))>(((t1.c0) IS TRUE))) ASC, (((t1.c0)) NOT BETWEEN ((CAST(t1.c1 AS TEXT))) AND ((((0.06389991955429708)!=(t1.c0))))) ASC  NULLS LAST, t1.c1 ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (0Xffffffffc1db92fb);
SELECT ALL * FROM t1 WHERE (((-1042574597)AND(((((t1.c1 COLLATE RTRIM)AND(CAST(t1.c0 AS REAL))))AND((NOT (NULL))))))) ORDER BY ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(0xfffffffffe9bfa3a)))OR(x'')))>(((t1.c0) IS TRUE))) ASC, (((t1.c0)) NOT BETWEEN ((CAST(t1.c1 AS TEXT))) AND ((((0.06389991955429708)!=(t1.c0))))) ASC  NULLS LAST, t1.c1 ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t1 NOT INDEXED WHERE ((((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))))LIKE(((t1.c0) NOTNULL)))) ORDER BY ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(-23332294)))OR(x'')))>(((t1.c0) IS TRUE))) ASC, (((t1.c0)) NOT BETWEEN ((CAST(t1.c1 AS TEXT))) AND ((((0.06389991955429708)!=(t1.c0))))) ASC  NULLS LAST, t1.c1 ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((~ (((t1.c1)<>(t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (((t1.c1)>(t1.c0))))) ORDER BY (+ (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END)) DESC INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((')')>>(t1.c0)) COLLATE RTRIM) ORDER BY (+ (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END)) DESC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))AND(t1.c0 COLLATE BINARY)))AND(CAST(t1.c1 AS NUMERIC))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))AND(t1.c0 COLLATE BINARY)))AND(CAST(t1.c1 AS NUMERIC)))) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((t1.c1 COLLATE NOCASE) IS FALSE));
SELECT ALL * FROM t1 WHERE ((((((0X4c331b8c))<((t1.c0)))) IS TRUE)) ORDER BY (((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0)))) ISNULL), (((('0.2106208131321995')AND(CASE WHEN t1.c1 THEN t1.c1 END)))AND(CAST(t1.c0 AS REAL))) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((((1278417804))<((t1.c0)))) IS TRUE)) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 END)IS NOT(CAST(t1.c0 AS REAL)))  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t1 WHERE ((((((0X4c331b8c))<((t1.c0)))) IS TRUE)) ORDER BY (((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0)))) ISNULL), (((('0.2106208131321995')AND(CASE WHEN t1.c1 THEN t1.c1 END)))AND(CAST(t1.c0 AS REAL))) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((((1278417804))<((t1.c0)))) IS TRUE)) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 END)IS NOT(CAST(t1.c0 AS REAL)))  NULLS FIRST LIMIT 3;
SELECT * FROM t1 WHERE (CASE WHEN 0.6705267183894998 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) ORDER BY (NOT (t1.c0))  NULLS LAST, UPPER(ABS(DISTINCT t1.c1));
SELECT * FROM t1 WHERE (((CASE WHEN 0.6705267183894998 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM)AND(CASE WHEN CAST(t1.c0 AS TEXT) THEN ((((t1.c1)OR(0.7313896425850271)))AND(t1.c1)) WHEN 2.04650698E8 THEN ((t1.c1)-(t1.c1)) WHEN (((t1.c0, t1.c1))==((t1.c1, t1.c0))) THEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) END))) ORDER BY (NOT (t1.c0))  NULLS LAST, UPPER(ABS(DISTINCT t1.c1)) INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1)!=(t1.c0))) NOT BETWEEN ((t1.c0 IN ())) AND (CASE WHEN 'ZGFTH' THEN t1.c0 END))) ORDER BY (NOT (t1.c0))  NULLS LAST, UPPER(ABS(DISTINCT t1.c1));
SELECT * FROM t1 WHERE (CASE WHEN 0.6705267183894998 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) ORDER BY (NOT (t1.c0))  NULLS LAST, UPPER(ABS(DISTINCT t1.c1));
SELECT * FROM t1 WHERE (((CASE WHEN 0.6705267183894998 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM)AND(CASE WHEN CAST(t1.c0 AS TEXT) THEN ((((t1.c1)OR(0.7313896425850271)))AND(t1.c1)) WHEN 2.04650698E8 THEN ((t1.c1)-(t1.c1)) WHEN (((t1.c0, t1.c1))==((t1.c1, t1.c0))) THEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) END))) ORDER BY (NOT (t1.c0))  NULLS LAST, UPPER(ABS(DISTINCT t1.c1)) INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1)!=(t1.c0))) NOT BETWEEN ((t1.c0 IN ())) AND (CASE WHEN 'ZGFTH' THEN t1.c0 END))) ORDER BY (NOT (t1.c0))  NULLS LAST, UPPER(ABS(DISTINCT t1.c1));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (0.4751243952055725) ORDER BY ((((((((CAST(t1.c0 AS BLOB))AND(HEX(t1.c1))))AND(load_extension(t1.c1))))OR(((t1.c0) NOTNULL))))AND((~ (t1.c1)))) DESC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (0.4751243952055725) ORDER BY ((((((((CAST(t1.c0 AS BLOB))AND(HEX(t1.c1))))AND(load_extension(t1.c1))))OR(((t1.c0) NOTNULL))))AND((~ (t1.c1)))) DESC LIMIT 3;
SELECT ALL * FROM t1 WHERE (CAST(t1.c1 AS BLOB)) ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (t1.c0) AND (((t1.c0) NOT NULL))) DESC;
SELECT * FROM t1 WHERE (CAST(t1.c1 AS BLOB)) ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (t1.c0) AND (((t1.c0) NOT NULL))) DESC INTERSECT SELECT * FROM t1 WHERE (((((t1.c0)OR(t1.c0)))AND(t1.c1)) COLLATE RTRIM) ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (t1.c0) AND (((t1.c0) NOT NULL))) DESC;
SELECT ALL * FROM t1 WHERE (CAST(t1.c1 AS BLOB)) ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (t1.c0) AND (((t1.c0) NOT NULL))) DESC;
SELECT * FROM t1 WHERE (CAST(t1.c1 AS BLOB)) ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (t1.c0) AND (((t1.c0) NOT NULL))) DESC INTERSECT SELECT * FROM t1 WHERE (((((t1.c0)OR(t1.c0)))AND(t1.c1)) COLLATE RTRIM) ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (t1.c0) AND (((t1.c0) NOT NULL))) DESC;
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c0))) IS TRUE)) ORDER BY ((CAST(t1.c1 AS REAL))%((((t1.c0))!=((t1.c1)))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((NOT (t1.c0))) IS TRUE))AND(((t1.c1) NOT BETWEEN ((((t1.c1))>=((t1.c1)))) AND (CASE t1.c1  WHEN 0.8767455283283131 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END))))) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS TEXT) ASC, ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)-(((t1.c0)<=(t1.c1)))) ASC, (((- (t1.c1))) ISNULL)  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c0))) IS TRUE)) ORDER BY ((CAST(t1.c1 AS REAL))%((((t1.c0))!=((t1.c1)))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((NOT (t1.c0))) IS TRUE))AND(((t1.c1) NOT BETWEEN ((((t1.c1))>=((t1.c1)))) AND (CASE t1.c1  WHEN 0.8767455283283131 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END))))) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS TEXT) ASC, ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)-(((t1.c0)<=(t1.c1)))) ASC, (((- (t1.c1))) ISNULL)  NULLS LAST;
SELECT * FROM t1 NOT INDEXED WHERE ((((t1.c0)) NOT BETWEEN (((NOT (t1.c1)))) AND ((((t1.c1) NOT NULL)))));
SELECT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN (((NOT (t1.c1)))) AND ((((t1.c1) NOT NULL)))))AND(x''))) INTERSECT SELECT * FROM t1 WHERE ('-986361551');
SELECT * FROM t1 NOT INDEXED WHERE ((((t1.c0)) NOT BETWEEN (((NOT (t1.c1)))) AND ((((t1.c1) NOT NULL)))));
SELECT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN (((NOT (t1.c1)))) AND ((((t1.c1) NOT NULL)))))AND(x''))) INTERSECT SELECT * FROM t1 WHERE ('-986361551');
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CAST(((((((t1.c1)AND(0.46561166957009803)))AND(t1.c1)))AND(-1.82788876E9)) AS REAL)) ORDER BY ((((((((((t1.c0)OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))AND(CAST(t1.c0 AS BLOB))))AND('BQf')))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))) DESC  NULLS LAST, (+ ((+ (t1.c0))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CAST(((((((t1.c1)AND(0.46561166957009803)))AND(t1.c1)))AND(-1.82788876E9)) AS REAL)) ORDER BY CASE ((t1.c1)AND(t1.c0))  WHEN CAST(t1.c1 AS INTEGER) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END END LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (CASE WHEN (t1.c1 IN (t1.c1)) THEN ((t1.c1)+(t1.c0)) WHEN (t1.c1 IN (t1.c0)) THEN x'' COLLATE RTRIM WHEN CASE WHEN '' THEN t1.c0 END THEN 0.31545842951719905 WHEN t1.c1 THEN ((t1.c1)+(t1.c0)) ELSE CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END END) ORDER BY ((t1.c1 COLLATE NOCASE)&(CAST(t1.c1 AS NUMERIC))) DESC;
SELECT * FROM t1 WHERE (((CASE WHEN (t1.c1 IN (t1.c1)) THEN ((t1.c1)+(t1.c0)) WHEN (t1.c1 IN (t1.c0)) THEN x'' COLLATE RTRIM WHEN CASE WHEN '' THEN t1.c0 END THEN 0.31545842951719905 WHEN t1.c1 THEN ((t1.c1)+(t1.c0)) ELSE CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END END)AND((((+ (t1.c0)))>=(CAST(t1.c1 AS NUMERIC)))))) ORDER BY ((t1.c1 COLLATE NOCASE)&(CAST(t1.c1 AS NUMERIC))) DESC LIMIT 0;
SELECT ALL * FROM t1 WHERE (CASE WHEN (t1.c1 IN (t1.c1)) THEN ((t1.c1)+(t1.c0)) WHEN (t1.c1 IN (t1.c0)) THEN x'' COLLATE RTRIM WHEN CASE WHEN '' THEN t1.c0 END THEN 0.31545842951719905 WHEN t1.c1 THEN ((t1.c1)+(t1.c0)) ELSE CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END END) ORDER BY ((t1.c1 COLLATE NOCASE)&(CAST(t1.c1 AS NUMERIC))) DESC;
SELECT * FROM t1 WHERE (((CASE WHEN (t1.c1 IN (t1.c1)) THEN ((t1.c1)+(t1.c0)) WHEN (t1.c1 IN (t1.c0)) THEN x'' COLLATE RTRIM WHEN CASE WHEN '' THEN t1.c0 END THEN 0.31545842951719905 WHEN t1.c1 THEN ((t1.c1)+(t1.c0)) ELSE CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END END)AND((((+ (t1.c0)))>=(CAST(t1.c1 AS NUMERIC)))))) ORDER BY ((t1.c1 COLLATE NOCASE)&(CAST(t1.c1 AS NUMERIC))) DESC LIMIT 0;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN x'' COLLATE RTRIM THEN ((((t1.c1)AND(t1.c0)))OR(t1.c0)) END) ORDER BY (NOT ('76688209')) COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN x'' COLLATE RTRIM THEN ((((t1.c1)AND(t1.c0)))OR(t1.c0)) END)AND(((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)GLOB((((1e500)) BETWEEN ((t1.c1)) AND ((x'67c2f1')))))))) ORDER BY (NOT ('76688209')) COLLATE NOCASE DESC  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE ((((((((+ (t1.c0)))AND(IFNULL(t1.c1, t1.c1))))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(((t1.c0)|(t1.c0))))) ORDER BY (NOT ('76688209')) COLLATE NOCASE DESC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN x'' COLLATE RTRIM THEN ((((t1.c1)AND(t1.c0)))OR(t1.c0)) END) ORDER BY (NOT ('76688209')) COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN x'' COLLATE RTRIM THEN ((((t1.c1)AND(t1.c0)))OR(t1.c0)) END)AND(((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)GLOB((((1e500)) BETWEEN ((t1.c1)) AND ((x'67c2f1')))))))) ORDER BY (NOT ('76688209')) COLLATE NOCASE DESC  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE ((((((((+ (t1.c0)))AND(IFNULL(t1.c1, t1.c1))))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(((t1.c0)|(t1.c0))))) ORDER BY (NOT ('76688209')) COLLATE NOCASE DESC  NULLS LAST LIMIT 0X1;
SELECT MAX(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY ((CAST(t1.c0 AS NUMERIC))<=((t1.c1 IN (t1.c0)))) ASC  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY ((CAST(t1.c0 AS NUMERIC))<=((t1.c1 IN (t1.c0)))) ASC  NULLS LAST INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (((((((HEX(DISTINCT NULL))AND(((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))))OR((((t1.c0))!=((t1.c0))))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND ('-1545352385'))))) ORDER BY ((CAST(t1.c0 AS NUMERIC))<=((t1.c1 IN (t1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (json_quote((t1.c0 IN ())));
SELECT DISTINCT * FROM t1 WHERE (json_quote((t1.c0 IN ()))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((NULL)%((((t1.c0, t1.c1, t1.c0))==((t1.c1, t1.c0, t1.c0))))));
SELECT ALL * FROM t1 WHERE (json_quote((t1.c0 IN ())));
SELECT DISTINCT * FROM t1 WHERE (json_quote((t1.c0 IN ()))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((NULL)%((((t1.c0, t1.c1, t1.c0))==((t1.c1, t1.c0, t1.c0))))));
SELECT MAX(t1.c1) FROM t1 WHERE ((((~ (t1.c1))) ISNULL));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((((~ (t1.c1))) ISNULL))AND(((((t1.c0) NOT NULL))&(LTRIM(t1.c1)))))) LIMIT 3;
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY t1.c0 ASC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (0.43831213992522255) AND (t1.c0)))*(CASE WHEN t1.c1 THEN t1.c0 END)), ((((t1.c0) IS FALSE)) NOT NULL) DESC LIMIT 2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY t1.c0 ASC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (0.43831213992522255) AND (t1.c0)))*(CASE WHEN t1.c1 THEN t1.c0 END)), ((((t1.c0) IS FALSE)) NOT NULL) DESC LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY t1.c0 ASC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (0.43831213992522255) AND (t1.c0)))*(CASE WHEN t1.c1 THEN t1.c0 END)), ((((t1.c0) IS FALSE)) NOT NULL) DESC LIMIT 2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY t1.c0 ASC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (0.43831213992522255) AND (t1.c0)))*(CASE WHEN t1.c1 THEN t1.c0 END)), ((((t1.c0) IS FALSE)) NOT NULL) DESC LIMIT 0X2;
SELECT COUNT(*) FROM t1 WHERE ((- (t1.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM t1 WHERE ((- (t1.c1 COLLATE RTRIM))) ORDER BY ((IFNULL(DISTINCT NULL, t1.c1)) IS FALSE) DESC  NULLS FIRST, CAST(t1.c0 AS TEXT) ASC  NULLS FIRST, CAST(((((((((0.9249965330193078)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)) AS REAL) ASC  NULLS FIRST LIMIT 0x1;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1, t1.c1)) BETWEEN ((CASE t1.c1  WHEN -1519166136 THEN '-1185874476' WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, ((t1.c0) NOTNULL), ((t1.c0) ISNULL))) AND ((t1.c0, ((((t1.c0)AND(t1.c1)))AND(t1.c1)), t1.c0 COLLATE BINARY)))) ORDER BY '0.2904414702277408', (((t1.c1)) NOT BETWEEN (((((t1.c0))<=((NULL))))) AND (((- (NULL))))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c1, t1.c1)) BETWEEN ((CASE t1.c1  WHEN -1519166136 THEN '-1185874476' WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, ((t1.c0) NOTNULL), ((t1.c0) ISNULL))) AND ((t1.c0, ((((t1.c0)AND(t1.c1)))AND(t1.c1)), t1.c0 COLLATE BINARY))))AND(((((- (t1.c1)), CASE WHEN t1.c0 THEN NULL END))<=((t1.c0 COLLATE NOCASE, CAST(t1.c0 AS NUMERIC))))))) ORDER BY '0.2904414702277408', (((t1.c1)) NOT BETWEEN (((((t1.c0))<=((NULL))))) AND (((- (NULL))))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0) IS TRUE)) ORDER BY '0.2904414702277408', (((t1.c1)) NOT BETWEEN (((((t1.c0))<=((NULL))))) AND (((- (NULL))))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1, t1.c1)) BETWEEN ((CASE t1.c1  WHEN -1519166136 THEN '-1185874476' WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, ((t1.c0) NOTNULL), ((t1.c0) ISNULL))) AND ((t1.c0, ((((t1.c0)AND(t1.c1)))AND(t1.c1)), t1.c0 COLLATE BINARY)))) ORDER BY '0.2904414702277408', (((t1.c1)) NOT BETWEEN (((((t1.c0))<=((NULL))))) AND (((- (NULL))))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c1, t1.c1)) BETWEEN ((CASE t1.c1  WHEN -1519166136 THEN '-1185874476' WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, ((t1.c0) NOTNULL), ((t1.c0) ISNULL))) AND ((t1.c0, ((((t1.c0)AND(t1.c1)))AND(t1.c1)), t1.c0 COLLATE BINARY))))AND(((((- (t1.c1)), CASE WHEN t1.c0 THEN NULL END))<=((t1.c0 COLLATE NOCASE, CAST(t1.c0 AS NUMERIC))))))) ORDER BY '0.2904414702277408', (((t1.c1)) NOT BETWEEN (((((t1.c0))<=((NULL))))) AND (((- (NULL))))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0) IS TRUE)) ORDER BY '0.2904414702277408', (((t1.c1)) NOT BETWEEN (((((t1.c0))<=((NULL))))) AND (((- (NULL))))) ASC  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE (CASE ((NULL)AND(t1.c0))  WHEN HEX(t1.c1) THEN '0.0' ELSE ((t1.c1) IS FALSE) END) ORDER BY ((TRIM(DISTINCT t1.c1, t1.c0)) BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (t1.c0))) AND (((t1.c0)/(t1.c0)))), (NOT (((t1.c0)>(t1.c1)))) ASC  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE (((CASE ((NULL)AND(t1.c0))  WHEN HEX(t1.c1) THEN '0.0' ELSE ((t1.c1) IS FALSE) END)AND((((((t1.c1 IN (t1.c1, t1.c0)))OR(t1.c0)))OR(CASE WHEN x'fb' THEN t1.c1 ELSE t1.c1 END))))) ORDER BY json_insert(x'3ca3b9', ((t1.c1) ISNULL), CAST(t1.c0 AS TEXT), (NOT (t1.c0)), (t1.c1 IN (t1.c1))) ASC  NULLS FIRST, (((t1.c0, x'', t1.c0)) BETWEEN ((((t1.c0)LIKE(t1.c1)), CASE WHEN t1.c0 THEN 0.892993439679516 ELSE t1.c1 END, CAST(t1.c0 AS REAL))) AND ((LIKELIHOOD(DISTINCT t1.c0, t1.c1), CAST(t1.c0 AS REAL), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))))) ASC;
SELECT * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR('')))AND(t1.c1)))GLOB(CASE t1.c0  WHEN 0.07582826738248782 THEN x'' END))) ORDER BY CASE ((t1.c1) IS TRUE)  WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN (NOT (t1.c1)) WHEN ((((((((NULL)AND(t1.c0)))OR(t1.c0)))OR('-742346749')))AND(t1.c0)) THEN (((t1.c0))>=((t1.c1))) WHEN ((t1.c0) NOTNULL) THEN CASE NULL  WHEN t1.c0 THEN x'e6' END WHEN ((t1.c1)GLOB(t1.c0)) THEN '-1282317070' WHEN (4.1683678E7 IN (t1.c0)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) ELSE CAST('-832560007' AS NUMERIC) END DESC, (((t1.c0 IN (t1.c0, t1.c0))) BETWEEN ((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) AND (DATETIME(t1.c0, t1.c1, t1.c0)))  NULLS LAST, ((((t1.c1) NOT NULL))<((((t1.c1, t1.c1))=((t1.c0, t1.c0)))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR('')))AND(t1.c1)))GLOB(CASE t1.c0  WHEN 0.07582826738248782 THEN x'' END))) ORDER BY CASE ((t1.c1) IS TRUE)  WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN (NOT (t1.c1)) WHEN ((((((((NULL)AND(t1.c0)))OR(t1.c0)))OR('-742346749')))AND(t1.c0)) THEN (((t1.c0))>=((t1.c1))) WHEN ((t1.c0) NOTNULL) THEN CASE NULL  WHEN t1.c0 THEN x'e6' END WHEN ((t1.c1)GLOB(t1.c0)) THEN '-1282317070' WHEN (4.1683678E7 IN (t1.c0)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) ELSE CAST('-832560007' AS NUMERIC) END DESC, (((t1.c0 IN (t1.c0, t1.c0))) BETWEEN ((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) AND (DATETIME(t1.c0, t1.c1, t1.c0)))  NULLS LAST, ((((t1.c1) NOT NULL))<((((t1.c1, t1.c1))==((t1.c0, t1.c0)))))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((('TW') IS FALSE) IN (t1.c1 COLLATE RTRIM))) ORDER BY CASE ((t1.c1) IS TRUE)  WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN (NOT (t1.c1)) WHEN ((((((((NULL)AND(t1.c0)))OR(t1.c0)))OR('-742346749')))AND(t1.c0)) THEN (((t1.c0))>=((t1.c1))) WHEN ((t1.c0) NOTNULL) THEN CASE NULL  WHEN t1.c0 THEN x'e6' END WHEN ((t1.c1)GLOB(t1.c0)) THEN '-1282317070' WHEN (4.1683678E7 IN (t1.c0)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) ELSE CAST('-832560007' AS NUMERIC) END DESC, (((t1.c0 IN (t1.c0, t1.c0))) BETWEEN ((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) AND (DATETIME(t1.c0, t1.c1, t1.c0)))  NULLS LAST, ((((t1.c1) NOT NULL))<((((t1.c1, t1.c1))==((t1.c0, t1.c0)))))  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR('')))AND(t1.c1)))GLOB(CASE t1.c0  WHEN 0.07582826738248782 THEN x'' END))) ORDER BY CASE ((t1.c1) IS TRUE)  WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN (NOT (t1.c1)) WHEN ((((((((NULL)AND(t1.c0)))OR(t1.c0)))OR('-742346749')))AND(t1.c0)) THEN (((t1.c0))>=((t1.c1))) WHEN ((t1.c0) NOTNULL) THEN CASE NULL  WHEN t1.c0 THEN x'e6' END WHEN ((t1.c1)GLOB(t1.c0)) THEN '-1282317070' WHEN (4.1683678E7 IN (t1.c0)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) ELSE CAST('-832560007' AS NUMERIC) END DESC, (((t1.c0 IN (t1.c0, t1.c0))) BETWEEN ((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) AND (DATETIME(t1.c0, t1.c1, t1.c0)))  NULLS LAST, ((((t1.c1) NOT NULL))<((((t1.c1, t1.c1))=((t1.c0, t1.c0)))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR('')))AND(t1.c1)))GLOB(CASE t1.c0  WHEN 0.07582826738248782 THEN x'' END))) ORDER BY CASE ((t1.c1) IS TRUE)  WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN (NOT (t1.c1)) WHEN ((((((((NULL)AND(t1.c0)))OR(t1.c0)))OR('-742346749')))AND(t1.c0)) THEN (((t1.c0))>=((t1.c1))) WHEN ((t1.c0) NOTNULL) THEN CASE NULL  WHEN t1.c0 THEN x'e6' END WHEN ((t1.c1)GLOB(t1.c0)) THEN '-1282317070' WHEN (4.1683678E7 IN (t1.c0)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) ELSE CAST('-832560007' AS NUMERIC) END DESC, (((t1.c0 IN (t1.c0, t1.c0))) BETWEEN ((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) AND (DATETIME(t1.c0, t1.c1, t1.c0)))  NULLS LAST, ((((t1.c1) NOT NULL))<((((t1.c1, t1.c1))==((t1.c0, t1.c0)))))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((('TW') IS FALSE) IN (t1.c1 COLLATE RTRIM))) ORDER BY CASE ((t1.c1) IS TRUE)  WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN (NOT (t1.c1)) WHEN ((((((((NULL)AND(t1.c0)))OR(t1.c0)))OR('-742346749')))AND(t1.c0)) THEN (((t1.c0))>=((t1.c1))) WHEN ((t1.c0) NOTNULL) THEN CASE NULL  WHEN t1.c0 THEN x'e6' END WHEN ((t1.c1)GLOB(t1.c0)) THEN '-1282317070' WHEN (4.1683678E7 IN (t1.c0)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) ELSE CAST('-832560007' AS NUMERIC) END DESC, (((t1.c0 IN (t1.c0, t1.c0))) BETWEEN ((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) AND (DATETIME(t1.c0, t1.c1, t1.c0)))  NULLS LAST, ((((t1.c1) NOT NULL))<((((t1.c1, t1.c1))==((t1.c0, t1.c0)))))  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (((TYPEOF(DISTINCT x'')) NOT BETWEEN (0.8360311138747883) AND (x'1b9f91')));
SELECT DISTINCT * FROM t1 WHERE (((((TYPEOF(DISTINCT x'')) NOT BETWEEN (0.8360311138747883) AND (x'1b9f91')))AND(((t1.c1) BETWEEN (x'15') AND (t1.c1)) COLLATE RTRIM))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN 0.8641106668266486 ELSE t1.c1 END AS TEXT) DESC  NULLS LAST, ((t1.c0)IS NOT(t1.c0)) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0x1;
SELECT * FROM t1 WHERE (((TYPEOF(DISTINCT x'')) NOT BETWEEN (0.8360311138747883) AND (x'1b9f91')));
SELECT DISTINCT * FROM t1 WHERE (((((TYPEOF(DISTINCT x'')) NOT BETWEEN (0.8360311138747883) AND (x'1b9f91')))AND(((t1.c1) BETWEEN (x'15') AND (t1.c1)) COLLATE RTRIM))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN 0.8641106668266486 ELSE t1.c1 END AS TEXT) DESC  NULLS LAST, ((t1.c0)IS NOT(t1.c0)) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0x1;
SELECT * FROM t1 WHERE (CAST(IFNULL(t1.c1, t1.c0) AS TEXT));
SELECT DISTINCT * FROM t1 WHERE (((CAST(IFNULL(t1.c1, t1.c0) AS TEXT))AND(((t1.c1) NOT BETWEEN (((t1.c1)IS NOT(t1.c0))) AND (t1.c1 COLLATE RTRIM)))));
SELECT * FROM t1 WHERE (CAST(IFNULL(t1.c1, t1.c0) AS TEXT));
SELECT DISTINCT * FROM t1 WHERE (((CAST(IFNULL(t1.c1, t1.c0) AS TEXT))AND(((t1.c1) NOT BETWEEN (((t1.c1)IS NOT(t1.c0))) AND (t1.c1 COLLATE RTRIM)))));
SELECT ALL * FROM t1 WHERE (json(((t1.c1)||(t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (json(((t1.c1)||(t1.c0))));
SELECT ALL * FROM t1 WHERE (json(((t1.c1)||(t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (json(((t1.c1)||(t1.c0))));
SELECT * FROM t1 WHERE (CASE rtreenode(t1.c1, t1.c0)  WHEN t1.c0 THEN ((t1.c1)IS NOT(t1.c1)) WHEN t1.c0 COLLATE NOCASE THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END THEN (((t1.c1, 0.9274819682877037, t1.c1, t1.c1))<=((t1.c0, t1.c0, t1.c1, t1.c0))) WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c1 END THEN ((x'')%(t1.c1)) ELSE ((t1.c1) IS TRUE) END) ORDER BY (~ (((t1.c0) BETWEEN (t1.c0) AND (x'a3'))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE rtreenode(t1.c1, t1.c0)  WHEN t1.c0 THEN ((t1.c1)IS NOT(t1.c1)) WHEN t1.c0 COLLATE NOCASE THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END THEN (((t1.c1, 0.9274819682877037, t1.c1, t1.c1))<=((t1.c0, t1.c0, t1.c1, t1.c0))) WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c1 END THEN ((x'')%(t1.c1)) ELSE ((t1.c1) IS TRUE) END) ORDER BY (~ (((t1.c0) BETWEEN (t1.c0) AND (x'a3'))))  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE rtreenode(t1.c1, t1.c0)  WHEN t1.c0 THEN ((t1.c1)IS NOT(t1.c1)) WHEN t1.c0 COLLATE NOCASE THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END THEN (((t1.c1, 0.9274819682877037, t1.c1, t1.c1))<=((t1.c0, t1.c0, t1.c1, t1.c0))) WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c1 END THEN ((x'')%(t1.c1)) ELSE ((t1.c1) IS TRUE) END) ORDER BY (~ (((t1.c0) BETWEEN (t1.c0) AND (x'a3'))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE rtreenode(t1.c1, t1.c0)  WHEN t1.c0 THEN ((t1.c1)IS NOT(t1.c1)) WHEN t1.c0 COLLATE NOCASE THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END THEN (((t1.c1, 0.9274819682877037, t1.c1, t1.c1))<=((t1.c0, t1.c0, t1.c1, t1.c0))) WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c1 END THEN ((x'')%(t1.c1)) ELSE ((t1.c1) IS TRUE) END) ORDER BY (~ (((t1.c0) BETWEEN (t1.c0) AND (x'a3'))))  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE ((((t1.c1)IS NOT(t1.c0)) IN ())) ORDER BY ((0.08994949867131874) BETWEEN (((t1.c1) IS TRUE)) AND (t1.c0 COLLATE NOCASE)), (((t1.c0)) NOT BETWEEN ((CAST(x'' AS INTEGER))) AND (((((t1.c0, t1.c0, t1.c0))<=((t1.c0, t1.c0, NULL)))))), (t1.c1 COLLATE RTRIM IN ('1075567186'))  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE ((((((t1.c1)IS NOT(t1.c0)) IN ()))AND((((x'be')) BETWEEN ((CASE WHEN x'' THEN t1.c1 END)) AND (((t1.c1 IN (t1.c1)))))))) ORDER BY ((0.08994949867131874) BETWEEN (((t1.c1) IS TRUE)) AND (t1.c0 COLLATE NOCASE)), (((t1.c0)) NOT BETWEEN ((CAST(x'' AS INTEGER))) AND (((((t1.c0, t1.c0, t1.c0))<=((t1.c0, t1.c0, NULL)))))), (t1.c1 COLLATE RTRIM IN ('1075567186'))  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE (((('-96549673' IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM t1 WHERE (((((('-96549673' IN ())) NOT NULL))AND(CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) AS INTEGER)))) LIMIT 0;
SELECT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)==(TIME(t1.c0, t1.c0, t1.c1)))) ORDER BY ((t1.c0) NOT BETWEEN (CAST(t1.c1 AS REAL)) AND (0.4149509614527346))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)=(TIME(t1.c0, t1.c0, t1.c1)))) ORDER BY ((CAST(t1.c0 AS TEXT))>>(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY) ORDER BY ((CAST(t1.c0 AS TEXT))>>(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))) LIMIT 0x0;
SELECT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)==(TIME(t1.c0, t1.c0, t1.c1)))) ORDER BY ((t1.c0) NOT BETWEEN (CAST(t1.c1 AS REAL)) AND (0.4149509614527346))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)=(TIME(t1.c0, t1.c0, t1.c1)))) ORDER BY ((CAST(t1.c0 AS TEXT))>>(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY) ORDER BY ((CAST(t1.c0 AS TEXT))>>(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))) LIMIT 0x0;
SELECT * FROM t1 WHERE ((((NULLIF(DISTINCT x'', t1.c0), CASE WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END, ((t1.c0)%(t1.c1))))<>(('-1751615192', (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))), (t1.c0 IN (t1.c1)))))) ORDER BY (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) IN ()) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((((NULLIF(DISTINCT x'', t1.c0), CASE WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END, ((t1.c0)%(t1.c1))))>(('-1751615192', (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))), (t1.c0 IN (t1.c1))))))AND(((((t1.c0)>>(t1.c0)))-(((t1.c1)/(t1.c0))))))) ORDER BY (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) IN ()) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)LIKE(((t1.c0)+(t1.c1))))) ORDER BY (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) IN ()) ASC;
SELECT * FROM t1 WHERE ((((NULLIF(DISTINCT x'', t1.c0), CASE WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END, ((t1.c0)%(t1.c1))))<>(('-1751615192', (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))), (t1.c0 IN (t1.c1)))))) ORDER BY (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) IN ()) ASC;
SELECT MAX(t1.c0) FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))AND(NULL)))OR(t1.c0 COLLATE NOCASE))) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (LIKELY(t1.c1))) ASC  NULLS FIRST, '.Pw>5?C. '  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))AND(NULL)))OR(t1.c0 COLLATE NOCASE))) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (LIKELY(t1.c1))) ASC  NULLS FIRST, '.Pw>5?C. '  NULLS LAST INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (((t1.c1)||(t1.c0)) COLLATE NOCASE) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (LIKELY(t1.c1))) ASC  NULLS FIRST, '.Pw>5?C. '  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ('脐%N');
SELECT ALL MAX(t1.c0) FROM t1 WHERE ('脐%N') INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c1)>=(t1.c1))) BETWEEN (t1.c1) AND (CAST(t1.c0 AS TEXT))));
SELECT MAX(t1.c0) FROM t1 WHERE (x'a73d') ORDER BY t1.c1  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (x'a73d') ORDER BY t1.c1  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((~ (''))) IS FALSE)) ORDER BY (((+ (t1.c0))) NOT BETWEEN (t1.c1 COLLATE NOCASE) AND (CAST(t1.c0 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((~ (''))) IS FALSE))AND(UPPER(((t1.c0)>=(t1.c1)))))) ORDER BY (((+ (t1.c0))) NOT BETWEEN (t1.c1 COLLATE NOCASE) AND (CAST(t1.c0 AS BLOB)))  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((((~ (''))) IS FALSE)) ORDER BY (((+ (t1.c0))) NOT BETWEEN (t1.c1 COLLATE NOCASE) AND (CAST(t1.c0 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((~ (''))) IS FALSE))AND(UPPER(((t1.c0)>=(t1.c1)))))) ORDER BY (((+ (t1.c0))) NOT BETWEEN (t1.c1 COLLATE NOCASE) AND (CAST(t1.c0 AS BLOB)))  NULLS LAST LIMIT 0X0;
SELECT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)&(((t1.c1)||(t1.c1))))) ORDER BY (((((t1.c1, t1.c1))!=((t1.c0, t1.c1)))) ISNULL), (x'' IN (((t1.c0)+(t1.c1)), 0.967750802857622)), ((((t1.c0) NOTNULL))|(((t1.c0) NOT NULL)))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)&(((t1.c1)||(t1.c1)))))AND((TRIM(DISTINCT t1.c1, t1.c0) IN (t1.c0 COLLATE RTRIM, (((t1.c1, 0.9366707959460312, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c1)))))))) ORDER BY (t1.c0 IN (t1.c1)) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c1 IN (t1.c1)))*(((((t1.c0)OR(t1.c1)))OR(t1.c1))))) ORDER BY (t1.c0 IN (t1.c1));
SELECT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)&(((t1.c1)||(t1.c1))))) ORDER BY (((((t1.c1, t1.c1))!=((t1.c0, t1.c1)))) ISNULL), (x'' IN (((t1.c0)+(t1.c1)), 0.967750802857622)), ((((t1.c0) NOTNULL))|(((t1.c0) NOT NULL)))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)&(((t1.c1)||(t1.c1)))))AND((TRIM(DISTINCT t1.c1, t1.c0) IN (t1.c0 COLLATE RTRIM, (((t1.c1, 0.9366707959460312, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c1)))))))) ORDER BY (t1.c0 IN (t1.c1)) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c1 IN (t1.c1)))*(((((t1.c0)OR(t1.c1)))OR(t1.c1))))) ORDER BY (t1.c0 IN (t1.c1));
SELECT MAX(t1.c1) FROM t1 WHERE (json_quote(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (json_quote(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((t1.c1) ISNULL));
SELECT * FROM t1 WHERE (((((t1.c0)>(t1.c0))) BETWEEN (((t1.c1)<<(t1.c1))) AND (t1.c1 COLLATE BINARY))) ORDER BY ((t1.c1 COLLATE NOCASE) NOT BETWEEN ((+ (t1.c0))) AND ('-1110653246'))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)>(t1.c0))) BETWEEN (((t1.c1)<<(t1.c1))) AND (t1.c1 COLLATE BINARY))) ORDER BY (('p') BETWEEN (UNLIKELY(t1.c1)) AND (((((t1.c0)AND(t1.c1)))AND('2063747160')))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0 COLLATE BINARY)AND(CAST(t1.c0 AS REAL))))OR(((0.11449044542540932)OR(t1.c1))))) ORDER BY (('p') BETWEEN (UNLIKELY(t1.c1)) AND (((((t1.c0)AND(t1.c1)))AND('2063747160'))));
SELECT * FROM t1 WHERE (((((t1.c0)>(t1.c0))) BETWEEN (((t1.c1)<<(t1.c1))) AND (t1.c1 COLLATE BINARY))) ORDER BY ((t1.c1 COLLATE NOCASE) NOT BETWEEN ((+ (t1.c0))) AND ('-1110653246'))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)>(t1.c0))) BETWEEN (((t1.c1)<<(t1.c1))) AND (t1.c1 COLLATE BINARY))) ORDER BY (('p') BETWEEN (UNLIKELY(t1.c1)) AND (((((t1.c0)AND(t1.c1)))AND('2063747160')))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0 COLLATE BINARY)AND(CAST(t1.c0 AS REAL))))OR(((0.11449044542540932)OR(t1.c1))))) ORDER BY (('p') BETWEEN (UNLIKELY(t1.c1)) AND (((((t1.c0)AND(t1.c1)))AND('2063747160'))));
SELECT * FROM t1 WHERE (((NULL)>=((('1543284644')GLOB(t1.c0)))));
SELECT * FROM t1 WHERE (((((NULL)>=((('1543284644')GLOB(t1.c0)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) COLLATE NOCASE))) ORDER BY t1.c1 ASC LIMIT 0X1;
SELECT * FROM t1 WHERE (((NULL)>=((('1543284644')GLOB(t1.c0)))));
SELECT * FROM t1 WHERE (((((NULL)>=((('1543284644')GLOB(t1.c0)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) COLLATE NOCASE))) ORDER BY t1.c1 ASC LIMIT 0X1;
SELECT * FROM t1 WHERE (((((((((((((((((((((t1.c0) IS TRUE))OR(IFNULL(t1.c0, t1.c0))))AND((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c0))))))AND(((t1.c0)AND(t1.c0)))))AND(((((NULL)AND(t1.c1)))OR(0.11846214679492406)))))OR((t1.c0 IN (t1.c0)))))AND(t1.c0)))OR(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR(((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))))AND(COALESCE(DISTINCT t1.c1, t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((((((((((((t1.c0) IS TRUE))OR(IFNULL(t1.c0, t1.c0))))AND((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c0))))))AND(((t1.c0)AND(t1.c0)))))AND(((((NULL)AND(t1.c1)))OR(0.11846214679492406)))))OR((t1.c0 IN (t1.c0)))))AND(t1.c0)))OR(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR(((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))))AND(COALESCE(DISTINCT t1.c1, t1.c0)))) ORDER BY ((((NOT (t1.c1)), CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END, '''vz--id툃'))<=((t1.c0, CAST(t1.c0 AS TEXT), (((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1)))))) ASC, ((t1.c0)&(((t1.c1) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST, CASE CASE -1671112748  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE 0.9366707959460312 END  WHEN TYPEOF(t1.c1) THEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((0.2516697977127178) NOTNULL) THEN (((t1.c0))>=((t1.c0))) WHEN CAST(t1.c0 AS BLOB) THEN UPPER(DISTINCT 0.6657123874131602) ELSE t1.c1 END INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- (0.9497453676564597))) ORDER BY ((((NOT (t1.c1)), CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END, '''vz--id툃'))<=((t1.c0, CAST(t1.c0 AS TEXT), (((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1)))))) ASC, ((t1.c0)&(((t1.c1) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST, CASE CASE -1671112748  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE 0.9366707959460312 END  WHEN TYPEOF(t1.c1) THEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((0.2516697977127178) NOTNULL) THEN (((t1.c0))>=((t1.c0))) WHEN CAST(t1.c0 AS BLOB) THEN UPPER(DISTINCT 0.6657123874131602) ELSE t1.c1 END;
SELECT * FROM t1 WHERE (((((((((((((((((((((t1.c0) IS TRUE))OR(IFNULL(t1.c0, t1.c0))))AND((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c0))))))AND(((t1.c0)AND(t1.c0)))))AND(((((NULL)AND(t1.c1)))OR(0.11846214679492406)))))OR((t1.c0 IN (t1.c0)))))AND(t1.c0)))OR(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR(((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))))AND(COALESCE(DISTINCT t1.c1, t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (((((((((((((((((((((t1.c0) IS TRUE))OR(IFNULL(t1.c0, t1.c0))))AND((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c0))))))AND(((t1.c0)AND(t1.c0)))))AND(((((NULL)AND(t1.c1)))OR(0.11846214679492406)))))OR((t1.c0 IN (t1.c0)))))AND(t1.c0)))OR(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR(((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))))AND(COALESCE(DISTINCT t1.c1, t1.c0)))) ORDER BY ((((NOT (t1.c1)), CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END, '''vz--id툃'))<=((t1.c0, CAST(t1.c0 AS TEXT), (((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1)))))) ASC, ((t1.c0)&(((t1.c1) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST, CASE CASE -1671112748  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE 0.9366707959460312 END  WHEN TYPEOF(t1.c1) THEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((0.2516697977127178) NOTNULL) THEN (((t1.c0))>=((t1.c0))) WHEN CAST(t1.c0 AS BLOB) THEN UPPER(DISTINCT 0.6657123874131602) ELSE t1.c1 END INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- (0.9497453676564597))) ORDER BY ((((NOT (t1.c1)), CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END, '''vz--id툃'))<=((t1.c0, CAST(t1.c0 AS TEXT), (((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1)))))) ASC, ((t1.c0)&(((t1.c1) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST, CASE CASE -1671112748  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE 0.9366707959460312 END  WHEN TYPEOF(t1.c1) THEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((0.2516697977127178) NOTNULL) THEN (((t1.c0))>=((t1.c0))) WHEN CAST(t1.c0 AS BLOB) THEN UPPER(DISTINCT 0.6657123874131602) ELSE t1.c1 END;
SELECT MIN(t1.c0) FROM t1 WHERE (((t1.c1 COLLATE RTRIM)OR((((x'', NULL))==((t1.c1, t1.c1))))));
SELECT MIN(t1.c0) FROM t1 WHERE (((((t1.c1 COLLATE RTRIM)OR((((x'', NULL))=((t1.c1, t1.c1))))))AND(((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0))) BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (((t1.c1)>(NULL))))))) ORDER BY 0x4f97be7e DESC  NULLS FIRST, CAST(((t1.c0) BETWEEN (t1.c0) AND (0Xab91575)) AS REAL) DESC INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER))OR(CASE -1.967749805E9  WHEN t1.c0 THEN t1.c1 END)))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END))) ORDER BY 0X4f97be7e DESC  NULLS FIRST, CAST(((t1.c0) BETWEEN (t1.c0) AND (0xab91575)) AS REAL) DESC;
SELECT ALL * FROM t1 WHERE (((UPPER(DISTINCT t1.c0))<<(((t1.c0) IS FALSE)))) ORDER BY ((t1.c0)LIKE(t1.c0)) COLLATE NOCASE, CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT * FROM t1 WHERE (((((UPPER(DISTINCT t1.c0))<<(((t1.c0) IS FALSE))))AND(((t1.c0)|(t1.c1))))) ORDER BY ((t1.c0)LIKE(t1.c0)) COLLATE NOCASE, CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY COLLATE RTRIM  NULLS LAST INTERSECT SELECT * FROM t1 WHERE ('-1028690489') ORDER BY ((t1.c0)LIKE(t1.c0)) COLLATE NOCASE, CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((UPPER(DISTINCT t1.c0))<<(((t1.c0) IS FALSE)))) ORDER BY ((t1.c0)LIKE(t1.c0)) COLLATE NOCASE, CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT * FROM t1 WHERE (((((UPPER(DISTINCT t1.c0))<<(((t1.c0) IS FALSE))))AND(((t1.c0)|(t1.c1))))) ORDER BY ((t1.c0)LIKE(t1.c0)) COLLATE NOCASE, CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY COLLATE RTRIM  NULLS LAST INTERSECT SELECT * FROM t1 WHERE ('-1028690489') ORDER BY ((t1.c0)LIKE(t1.c0)) COLLATE NOCASE, CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (t1.c0)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((NOT (t1.c0)))AND(((t1.c1 COLLATE BINARY) ISNULL))));
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(LIKELY(DISTINCT t1.c1))))OR((((t1.c1))>=((t1.c0))))));
SELECT * FROM t1 WHERE (((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(LIKELY(DISTINCT t1.c1))))OR((((t1.c1))>=((t1.c0)))))) ORDER BY CAST(CAST(t1.c1 AS NUMERIC) AS BLOB) DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(LIKELY(DISTINCT t1.c1))))OR((((t1.c1))>=((t1.c0))))));
SELECT * FROM t1 WHERE (((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(LIKELY(DISTINCT t1.c1))))OR((((t1.c1))>=((t1.c0)))))) ORDER BY CAST(CAST(t1.c1 AS NUMERIC) AS BLOB) DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (CASE t1.c1  WHEN UPPER(t1.c0) THEN 0.3406957133885802 ELSE ((t1.c0)>>(t1.c1)) END) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN 'K' THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE '顂M' END AS BLOB)  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE t1.c1  WHEN UPPER(t1.c0) THEN 0.3406957133885802 ELSE ((t1.c0)>>(t1.c1)) END) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN 'K' THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE '顂M' END AS BLOB)  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (CASE t1.c1  WHEN UPPER(t1.c0) THEN 0.3406957133885802 ELSE ((t1.c0)>>(t1.c1)) END) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN 'K' THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE '顂M' END AS BLOB)  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE t1.c1  WHEN UPPER(t1.c0) THEN 0.3406957133885802 ELSE ((t1.c0)>>(t1.c1)) END) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN 'K' THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE '顂M' END AS BLOB)  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC)) ORDER BY CASE NULLIF(t1.c0, '1083185990')  WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE 'cᮾh' END THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END WHEN (((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c0))) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END END, NULL  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC)) ORDER BY CASE NULLIF(t1.c0, '1083185990')  WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE 'cᮾh' END THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END WHEN (((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c0))) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END END, NULL  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC)) ORDER BY CASE NULLIF(t1.c0, '1083185990')  WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE 'cᮾh' END THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END WHEN (((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c0))) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END END, NULL  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC)) ORDER BY CASE NULLIF(t1.c0, '1083185990')  WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE 'cᮾh' END THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END WHEN (((t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c0))) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END END, NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 NOT INDEXED WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((CASE WHEN t1.c0 THEN '**SF?8.' WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END, t1.c0)) AND ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)), ((t1.c0)==(t1.c0))))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c0, t1.c1)) NOT BETWEEN ((CASE WHEN t1.c0 THEN '**SF?8.' WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END, t1.c0)) AND ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)), ((t1.c0)==(t1.c0))))))AND((~ (CAST(t1.c0 AS INTEGER))))));
SELECT * FROM t1 WHERE (((json_array_length(t1.c0, t1.c1)) BETWEEN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((json_array_length(t1.c0, t1.c1)) BETWEEN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((NULL)GLOB(t1.c0))))) LIMIT 0X0;
SELECT * FROM t1 WHERE (((json_array_length(t1.c0, t1.c1)) BETWEEN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((x'60fbf5', t1.c0, t1.c0)) BETWEEN ((((t1.c1) NOT NULL), (~ (t1.c0)), LIKELIHOOD(t1.c0, t1.c0))) AND (((t1.c0 IN (t1.c1, t1.c1)), (((t1.c1, t1.c0))<=((t1.c0, t1.c0))), t1.c0 COLLATE NOCASE)))) ORDER BY LTRIM(CASE WHEN t1.c0 THEN x'fca15852' END, t1.c0);
SELECT DISTINCT * FROM t1 WHERE ((((((x'60fbf5', t1.c0, t1.c0)) BETWEEN ((((t1.c1) NOT NULL), (~ (t1.c0)), LIKELIHOOD(t1.c0, t1.c0))) AND (((t1.c0 IN (t1.c1, t1.c1)), (((t1.c1, t1.c0))<((t1.c0, t1.c0))), t1.c0 COLLATE NOCASE))))AND(((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))>>(t1.c0 COLLATE NOCASE))))) ORDER BY (~ (TYPEOF(t1.c0))) DESC  NULLS FIRST, (t1.c0 IN ())  NULLS LAST, CAST(t1.c0 AS REAL) COLLATE RTRIM;
SELECT ALL * FROM t1 WHERE ((((x'60fbf5', t1.c0, t1.c0)) BETWEEN ((((t1.c1) NOT NULL), (~ (t1.c0)), LIKELIHOOD(t1.c0, t1.c0))) AND (((t1.c0 IN (t1.c1, t1.c1)), (((t1.c1, t1.c0))<=((t1.c0, t1.c0))), t1.c0 COLLATE NOCASE)))) ORDER BY LTRIM(CASE WHEN t1.c0 THEN x'fca15852' END, t1.c0);
SELECT * FROM t1 WHERE ('');
SELECT DISTINCT * FROM t1 WHERE ((('')AND(((((t1.c0)%(t1.c1))) NOT BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0)IS(t1.c0))))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (x'79880a48') LIMIT 0x1;
SELECT * FROM t1 WHERE ('');
SELECT DISTINCT * FROM t1 WHERE ((('')AND(((((t1.c0)%(t1.c1))) NOT BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0)IS(t1.c0))))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (x'79880a48') LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (((((t1.c0 IN ()), t1.c1 COLLATE RTRIM))=((CAST(t1.c1 AS TEXT), ((t1.c0)AND(t1.c0)))))) ORDER BY t1.c0 DESC, ((((t1.c1) IS TRUE))/(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0 IN ()), t1.c1 COLLATE RTRIM))=((CAST(t1.c1 AS TEXT), ((t1.c0)AND(t1.c0)))))) ORDER BY t1.c0 DESC, ((((t1.c1) IS TRUE))/(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (LOWER(DISTINCT UPPER(t1.c0))) ORDER BY t1.c0 DESC, ((((t1.c1) IS TRUE))/(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST LIMIT 0x3;
SELECT ALL * FROM t1 WHERE (((((t1.c0 IN ()), t1.c1 COLLATE RTRIM))=((CAST(t1.c1 AS TEXT), ((t1.c0)AND(t1.c0)))))) ORDER BY t1.c0 DESC, ((((t1.c1) IS TRUE))/(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0 IN ()), t1.c1 COLLATE RTRIM))=((CAST(t1.c1 AS TEXT), ((t1.c0)AND(t1.c0)))))) ORDER BY t1.c0 DESC, ((((t1.c1) IS TRUE))/(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (LOWER(DISTINCT UPPER(t1.c0))) ORDER BY t1.c0 DESC, ((((t1.c1) IS TRUE))/(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST LIMIT 0x3;
SELECT COUNT(*) FROM t1 WHERE (CAST(UPPER(DISTINCT t1.c0) AS BLOB));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST(UPPER(DISTINCT t1.c0) AS BLOB)) ORDER BY CASE CASE t1.c0  WHEN t1.c1 THEN NULL ELSE t1.c1 END  WHEN (t1.c0 IN ()) THEN ((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c0)) END DESC  NULLS FIRST, ((((+ (t1.c0)), (t1.c0 IN ('rw&r', t1.c0, t1.c0)), CAST(t1.c0 AS TEXT), (t1.c0 IN (t1.c0, t1.c1))))!=((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), ((t1.c1) IS FALSE), ((t1.c1)-(NULL)), CASE t1.c0  WHEN t1.c1 THEN t1.c1 END))) ASC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t1 WHERE (((CASE t1.c0  WHEN 0.48070576113962216 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOT NULL)) ORDER BY (((t1.c0 IN ('1173737933', t1.c1))) BETWEEN (t1.c1 COLLATE RTRIM) AND (CAST(t1.c0 AS NUMERIC)))  NULLS FIRST, CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY DESC;
SELECT DISTINCT * FROM t1 WHERE (((((CASE t1.c0  WHEN 0.48070576113962216 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOT NULL))AND(CASE CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END  WHEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND('-1357763336')) THEN (~ (t1.c1)) WHEN ((t1.c0)AND(t1.c0)) THEN CAST(t1.c1 AS TEXT) WHEN NULL COLLATE NOCASE THEN (t1.c0 IN (t1.c1)) WHEN t1.c1 THEN DATETIME(t1.c0, t1.c1, t1.c0) WHEN (~ (t1.c0)) THEN CASE 'Pr5셒At䡧R'  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END ELSE CAST(t1.c0 AS REAL) END))) ORDER BY ((t1.c1 COLLATE RTRIM)&(((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))) ASC, ((((t1.c0)<=(t1.c0))) NOT BETWEEN ((t1.c1 IN (0.31460126490460083, t1.c1))) AND ((t1.c1 IN ()))) ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((+ (json_array_length('-1962816202', t1.c0)))) ORDER BY ((t1.c1 COLLATE RTRIM)&(((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))) ASC, ((((t1.c0)<=(t1.c0))) NOT BETWEEN ((t1.c1 IN (0.31460126490460083, t1.c1))) AND ((t1.c1 IN ()))) ASC  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (((CASE t1.c0  WHEN 0.48070576113962216 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOT NULL)) ORDER BY (((t1.c0 IN ('1173737933', t1.c1))) BETWEEN (t1.c1 COLLATE RTRIM) AND (CAST(t1.c0 AS NUMERIC)))  NULLS FIRST, CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END COLLATE BINARY DESC;
SELECT DISTINCT * FROM t1 WHERE (((((CASE t1.c0  WHEN 0.48070576113962216 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOT NULL))AND(CASE CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END  WHEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND('-1357763336')) THEN (~ (t1.c1)) WHEN ((t1.c0)AND(t1.c0)) THEN CAST(t1.c1 AS TEXT) WHEN NULL COLLATE NOCASE THEN (t1.c0 IN (t1.c1)) WHEN t1.c1 THEN DATETIME(t1.c0, t1.c1, t1.c0) WHEN (~ (t1.c0)) THEN CASE 'Pr5셒At䡧R'  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END ELSE CAST(t1.c0 AS REAL) END))) ORDER BY ((t1.c1 COLLATE RTRIM)&(((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))) ASC, ((((t1.c0)<=(t1.c0))) NOT BETWEEN ((t1.c1 IN (0.31460126490460083, t1.c1))) AND ((t1.c1 IN ()))) ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((+ (json_array_length('-1962816202', t1.c0)))) ORDER BY ((t1.c1 COLLATE RTRIM)&(((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))) ASC, ((((t1.c0)<=(t1.c0))) NOT BETWEEN ((t1.c1 IN (0.31460126490460083, t1.c1))) AND ((t1.c1 IN ()))) ASC  NULLS LAST LIMIT 0x2;
SELECT * FROM t1 WHERE (NULLIF(DISTINCT ((t1.c1) NOTNULL), json_quote(t1.c0))) ORDER BY ((((((t1.c0)GLOB(t1.c0)))OR(CAST(t1.c1 AS TEXT))))AND(DATE(t1.c0, x'27', t1.c1, t1.c0))) DESC  NULLS FIRST, (((t1.c1)) BETWEEN (((NOT ('~')))) AND ((((((t1.c1)OR(t1.c1)))OR(t1.c1))))) DESC;
SELECT DISTINCT * FROM t1 WHERE (NULLIF(DISTINCT ((t1.c1) NOTNULL), json_quote(t1.c0))) ORDER BY ((((((t1.c0)GLOB(t1.c0)))OR(CAST(t1.c1 AS TEXT))))AND(DATE(t1.c0, x'27', t1.c1, t1.c0))) DESC  NULLS FIRST, (((t1.c1)) BETWEEN (((NOT ('~')))) AND ((((((t1.c1)OR(t1.c1)))OR(t1.c1))))) DESC LIMIT 1;
SELECT * FROM t1 WHERE (NULLIF(DISTINCT ((t1.c1) NOTNULL), json_quote(t1.c0))) ORDER BY ((((((t1.c0)GLOB(t1.c0)))OR(CAST(t1.c1 AS TEXT))))AND(DATE(t1.c0, x'27', t1.c1, t1.c0))) DESC  NULLS FIRST, (((t1.c1)) BETWEEN (((NOT ('~')))) AND ((((((t1.c1)OR(t1.c1)))OR(t1.c1))))) DESC;
SELECT DISTINCT * FROM t1 WHERE (NULLIF(DISTINCT ((t1.c1) NOTNULL), json_quote(t1.c0))) ORDER BY ((((((t1.c0)GLOB(t1.c0)))OR(CAST(t1.c1 AS TEXT))))AND(DATE(t1.c0, x'27', t1.c1, t1.c0))) DESC  NULLS FIRST, (((t1.c1)) BETWEEN (((NOT ('~')))) AND ((((((t1.c1)OR(t1.c1)))OR(t1.c1))))) DESC LIMIT 1;
SELECT MAX(t1.c0) FROM t1 WHERE (((t1.c1) IS FALSE)) ORDER BY (~ (CAST(t1.c0 AS BLOB))), (t1.c1 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((t1.c1) IS FALSE)) ORDER BY ((NULL) BETWEEN (t1.c1) AND (UPPER(t1.c0)))  NULLS FIRST INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (((t1.c0 COLLATE NOCASE) BETWEEN (((t1.c0)|(t1.c0))) AND (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) ORDER BY ((NULL) BETWEEN (t1.c1) AND (UPPER(t1.c0)))  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE (((-2093703590)>>((t1.c1 IN (t1.c0, t1.c0)))));
SELECT MIN(t1.c0) FROM t1 WHERE (((-2093703590)>>((t1.c1 IN (t1.c0))))) INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c1)<<(1.778662627E9)) IN (CAST(t1.c1 AS INTEGER))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CASE WHEN t1.c1 COLLATE BINARY THEN t1.c0 ELSE (- (t1.c0)) END);
SELECT MIN(t1.c0) FROM t1 WHERE (((CASE WHEN t1.c1 COLLATE BINARY THEN t1.c0 ELSE (- (t1.c0)) END)AND((((t1.c1)>=(t1.c1)) IN ((((('Ii')OR(t1.c0)))AND(t1.c0))))))) ORDER BY ((((CASE WHEN t1.c1 THEN '1921856193' END)AND(((t1.c1)|(t1.c1)))))AND(((t1.c0) NOT NULL))), ((((204650698)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ()) ASC LIMIT 0x1 INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c0))<=((t1.c1 COLLATE BINARY)))) ORDER BY ((((CASE WHEN t1.c1 THEN '1921856193' END)AND(((t1.c1)|(t1.c1)))))AND(((t1.c0) NOT NULL))), ((((0xc32b8ca)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ()) ASC LIMIT 1;
SELECT * FROM t1 WHERE (((t1.c1) NOT BETWEEN (HEX(DISTINCT t1.c1)) AND ((((t1.c0, t1.c1))>((t1.c1, t1.c1)))))) ORDER BY (((t1.c0, t1.c1, x'')) NOT BETWEEN ((LIKELY(DISTINCT t1.c0), CAST(t1.c0 AS NUMERIC), CASE t1.c1  WHEN t1.c1 THEN t1.c0 END)) AND ((((t1.c1)>=(t1.c1)), UNLIKELY(t1.c1), 0.23253131378747594))) DESC  NULLS LAST, (+ (((t1.c0)|(x'22'))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (HEX(DISTINCT t1.c1)) AND ((((t1.c0, t1.c1))>=((t1.c1, t1.c1))))))AND((((t1.c1)) NOT BETWEEN (((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, '{|s}x')) AND ((t1.c0, t1.c1, t1.c0))))) AND (((+ (t1.c1)))))))) ORDER BY (((t1.c1)LIKE(t1.c0)) IN ())  NULLS LAST, t1.c0  NULLS LAST, ((t1.c0) IS FALSE) DESC LIMIT 1 INTERSECT SELECT * FROM t1 WHERE ((~ (((t1.c0) NOT BETWEEN (t1.c1) AND (NULL))))) ORDER BY (((t1.c1)LIKE(t1.c0)) IN ())  NULLS LAST, t1.c0  NULLS LAST, ((t1.c0) IS FALSE) DESC LIMIT 0X1;
SELECT * FROM t1 WHERE (((t1.c1) NOT BETWEEN (HEX(DISTINCT t1.c1)) AND ((((t1.c0, t1.c1))>((t1.c1, t1.c1)))))) ORDER BY (((t1.c0, t1.c1, x'')) NOT BETWEEN ((LIKELY(DISTINCT t1.c0), CAST(t1.c0 AS NUMERIC), CASE t1.c1  WHEN t1.c1 THEN t1.c0 END)) AND ((((t1.c1)>=(t1.c1)), UNLIKELY(t1.c1), 0.23253131378747594))) DESC  NULLS LAST, (+ (((t1.c0)|(x'22'))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (HEX(DISTINCT t1.c1)) AND ((((t1.c0, t1.c1))>=((t1.c1, t1.c1))))))AND((((t1.c1)) NOT BETWEEN (((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, '{|s}x')) AND ((t1.c0, t1.c1, t1.c0))))) AND (((+ (t1.c1)))))))) ORDER BY (((t1.c1)LIKE(t1.c0)) IN ())  NULLS LAST, t1.c0  NULLS LAST, ((t1.c0) IS FALSE) DESC LIMIT 1 INTERSECT SELECT * FROM t1 WHERE ((~ (((t1.c0) NOT BETWEEN (t1.c1) AND (NULL))))) ORDER BY (((t1.c1)LIKE(t1.c0)) IN ())  NULLS LAST, t1.c0  NULLS LAST, ((t1.c0) IS FALSE) DESC LIMIT 0X1;
SELECT MAX(t1.c0) FROM t1 WHERE ((NULL COLLATE RTRIM IN (load_extension(t1.c0, t1.c0), CAST(t1.c1 AS REAL), ((t1.c0)IS(t1.c1))))) ORDER BY ((((t1.c0)<<(t1.c1))) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c1 END) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN '114728104' THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE x'cf' END)) DESC, ((t1.c1)OR(t1.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((x'')LIKE(t1.c1 COLLATE BINARY));
SELECT MAX(t1.c0) FROM t1 WHERE ((NULL COLLATE RTRIM IN (load_extension(t1.c0, t1.c0), CAST(t1.c1 AS REAL), ((t1.c0)IS(t1.c1))))) ORDER BY ((((t1.c0)<<(t1.c1))) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c1 END) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN '114728104' THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE x'cf' END)) DESC, ((t1.c1)OR(t1.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((x'')LIKE(t1.c1 COLLATE BINARY)) INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (CAST(((t1.c0)*(t1.c1)) AS NUMERIC)) ORDER BY ((((t1.c0)<<(t1.c1))) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c1 END) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN '114728104' THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE x'cf' END)) DESC, ((t1.c1)OR(t1.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((x'')LIKE(t1.c1 COLLATE BINARY));
SELECT ALL * FROM t1 WHERE ((((((t1.c1 IN ()))OR(t1.c1 COLLATE NOCASE)))OR(t1.c0 COLLATE NOCASE))) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS BLOB)  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((t1.c1 IN ()))OR(t1.c1 COLLATE NOCASE)))OR(t1.c0 COLLATE NOCASE))) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS BLOB)  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (((t1.c1)>>(t1.c1)) COLLATE NOCASE) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS BLOB)  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((t1.c1 IN ()))OR(t1.c1 COLLATE NOCASE)))OR(t1.c0 COLLATE NOCASE))) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS BLOB)  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((t1.c1 IN ()))OR(t1.c1 COLLATE NOCASE)))OR(t1.c0 COLLATE NOCASE))) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS BLOB)  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (((t1.c1)>>(t1.c1)) COLLATE NOCASE) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS BLOB)  NULLS LAST;
SELECT * FROM t1 WHERE (CAST(CASE ''  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END AS INTEGER));
SELECT DISTINCT * FROM t1 WHERE (CAST(CASE ''  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END AS INTEGER)) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, t1.c1)) BETWEEN ((CAST(t1.c1 AS TEXT), ((((t1.c0)OR(0.17403890637626795)))AND(t1.c0)))) AND ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, ((t1.c1)GLOB(t1.c0))))));
SELECT * FROM t1 WHERE (CAST(CASE ''  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END AS INTEGER));
SELECT DISTINCT * FROM t1 WHERE (CAST(CASE ''  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END AS INTEGER)) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, t1.c1)) BETWEEN ((CAST(t1.c1 AS TEXT), ((((t1.c0)OR(0.17403890637626795)))AND(t1.c0)))) AND ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, ((t1.c1)GLOB(t1.c0))))));
SELECT MAX(t1.c0) FROM t1 WHERE (t1.c1);
SELECT ALL MAX(t1.c0) FROM t1 WHERE (t1.c1) ORDER BY t1.c1 LIMIT 0x2 INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (t1.c1) ORDER BY t1.c1 LIMIT 2;
SELECT * FROM t1 WHERE ((+ (load_extension(t1.c0, t1.c0))));
SELECT DISTINCT * FROM t1 WHERE ((((+ (load_extension(t1.c0, t1.c0))))AND(((t1.c1)/(t1.c0)) COLLATE BINARY))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)<=(CAST(t1.c0 AS BLOB))));
SELECT * FROM t1 WHERE ((+ (load_extension(t1.c0, t1.c0))));
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((NOT (t1.c0)))OR(ABS(t1.c0))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((NOT (t1.c0)))OR(ABS(t1.c0))))AND(((t1.c1 IN ()) IN (NULL))))) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE ((- (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END))) ORDER BY (NOT (TYPEOF(DISTINCT t1.c1)))  NULLS LAST, CASE WHEN ((t1.c1)==(t1.c1)) THEN (t1.c1 IN (t1.c0, t1.c0)) WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) THEN COALESCE(t1.c0, t1.c0, t1.c0) WHEN ((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR('-2084660598')))OR(1748428655)))AND(t1.c1)) THEN HEX(DISTINCT t1.c0) WHEN ((t1.c0)GLOB(t1.c1)) THEN t1.c1 COLLATE RTRIM ELSE (t1.c1 IN ()) END DESC  NULLS LAST, NULL ASC;
SELECT COUNT(*) FROM t1 WHERE ((((- (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))AND((((t1.c0))<=(((NOT (t1.c1)))))))) ORDER BY ((((t1.c1 IN (t1.c1))))!=(((~ (t1.c0)))))  NULLS LAST, ((((((((t1.c1)+(t1.c1)))AND(((((((t1.c1)OR(t1.c0)))AND(t1.c0)))AND(0.03622465028804023)))))AND(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)))OR(NULL)) DESC LIMIT 5;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((t1.c0)!=(t1.c0)))>=(CAST(t1.c1 AS TEXT)))) ORDER BY CASE (~ (t1.c1))  WHEN ((0X601e7496)&(t1.c0)) THEN ((t1.c0) NOTNULL) END  NULLS LAST, CAST((((t1.c0))<((t1.c0))) AS INTEGER)  NULLS LAST, (- (t1.c0)) COLLATE BINARY;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c0)!=(t1.c0)))>=(CAST(t1.c1 AS TEXT)))) ORDER BY CASE (~ (t1.c1))  WHEN ((0x601e7496)&(t1.c0)) THEN ((t1.c0) NOTNULL) END  NULLS LAST, CAST((((t1.c0))<((t1.c0))) AS INTEGER)  NULLS LAST, (- (t1.c0)) COLLATE BINARY INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY CASE (~ (t1.c1))  WHEN ((0X601e7496)&(t1.c0)) THEN ((t1.c0) NOTNULL) END  NULLS LAST, CAST((((t1.c0))<((t1.c0))) AS INTEGER)  NULLS LAST, (- (t1.c0)) COLLATE BINARY;
SELECT * FROM t1 WHERE ((('204650698')+(CAST(t1.c0 AS INTEGER)))) ORDER BY ((('MDu', CASE t1.c1  WHEN t1.c0 THEN t1.c1 END, ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c1))))<>((t1.c0 COLLATE RTRIM, ((((((((((t1.c1)AND(NULL)))AND(x'')))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((('204650698')+(CAST(t1.c0 AS INTEGER))))AND(((t1.c0)%(t1.c1)) COLLATE NOCASE))) ORDER BY ((('MDu', CASE t1.c1  WHEN t1.c0 THEN t1.c1 END, ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c1))))!=((t1.c0 COLLATE RTRIM, ((((((((((t1.c1)AND(NULL)))AND(x'')))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((('MDu', CASE t1.c1  WHEN t1.c0 THEN t1.c1 END, ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c1))))<>((t1.c0 COLLATE RTRIM, ((((((((((t1.c1)AND(NULL)))AND(x'')))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE ((('204650698')+(CAST(t1.c0 AS INTEGER)))) ORDER BY ((('MDu', CASE t1.c1  WHEN t1.c0 THEN t1.c1 END, ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c1))))<>((t1.c0 COLLATE RTRIM, ((((((((((t1.c1)AND(NULL)))AND(x'')))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((('204650698')+(CAST(t1.c0 AS INTEGER))))AND(((t1.c0)%(t1.c1)) COLLATE NOCASE))) ORDER BY ((('MDu', CASE t1.c1  WHEN t1.c0 THEN t1.c1 END, ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c1))))!=((t1.c0 COLLATE RTRIM, ((((((((((t1.c1)AND(NULL)))AND(x'')))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((('MDu', CASE t1.c1  WHEN t1.c0 THEN t1.c1 END, ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c1))))<>((t1.c0 COLLATE RTRIM, ((((((((((t1.c1)AND(NULL)))AND(x'')))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))  NULLS FIRST LIMIT 0X0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c1))<>((t1.c0))) IN ()));
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c1))<((t1.c0))) IN ())) ORDER BY CASE WHEN ((x'') IS TRUE) THEN (t1.c0 IN (t1.c0, 'k')) WHEN CAST(t1.c1 AS BLOB) THEN t1.c0 COLLATE BINARY WHEN t1.c1 THEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-1279266008' WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE '-742346749' END WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END  NULLS FIRST LIMIT 0X0;
SELECT ALL MIN(t1.c1) FROM t1 NOT INDEXED WHERE ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) IN ()));
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) IN ()))AND((((t1.c1) NOT BETWEEN (t1.c0) AND (0.4032169320349047)) IN (CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))))) ORDER BY ((((((((t1.c0) IS FALSE))AND(t1.c0)))AND(((t1.c1)*(t1.c1)))))AND(t1.c1))  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 WHERE (GLOB(t1.c0, CAST(t1.c1 AS TEXT))) ORDER BY t1.c0  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (GLOB(t1.c0, CAST(t1.c1 AS TEXT))) ORDER BY IFNULL(DISTINCT (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))), ((t1.c0) BETWEEN (t1.c1) AND (t1.c0))) DESC  NULLS LAST, ((CAST(t1.c1 AS TEXT))&(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST, ((t1.c1) IS TRUE) DESC  NULLS FIRST, LIKELY(DISTINCT t1.c0 COLLATE BINARY)  NULLS FIRST;
SELECT * FROM t1 WHERE (GLOB(t1.c0, CAST(t1.c1 AS TEXT))) ORDER BY t1.c0  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (GLOB(t1.c0, CAST(t1.c1 AS TEXT))) ORDER BY IFNULL(DISTINCT (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))), ((t1.c0) BETWEEN (t1.c1) AND (t1.c0))) DESC  NULLS LAST, ((CAST(t1.c1 AS TEXT))&(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST, ((t1.c1) IS TRUE) DESC  NULLS FIRST, LIKELY(DISTINCT t1.c0 COLLATE BINARY)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (0xffffffffd705df20) ORDER BY ((((((((t1.c0) ISNULL))OR((((t1.c1, t1.c0)) BETWEEN ((t1.c0, x'50')) AND ((t1.c0, t1.c0))))))AND((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1))))))OR(((t1.c1)<(t1.c0))))  NULLS LAST, (~ (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))), ((t1.c1)AND(t1.c0)) COLLATE RTRIM DESC;
SELECT ALL * FROM t1 WHERE (0xffffffffd705df20) ORDER BY CASE WHEN t1.c1 COLLATE RTRIM THEN (((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, '%q+zjy&h'))) ELSE ((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)) END, (~ ((t1.c1 IN ()))) ASC, t1.c1 ASC  NULLS LAST, STRFTIME(((0Xffffffff8e6487ef)>>(t1.c0)), ((t1.c0)>(t1.c0)), TRIM(DISTINCT t1.c1, t1.c0), t1.c1) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (0xffffffffd705df20) ORDER BY ((((((((t1.c0) ISNULL))OR((((t1.c1, t1.c0)) BETWEEN ((t1.c0, x'50')) AND ((t1.c0, t1.c0))))))AND((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1))))))OR(((t1.c1)<(t1.c0))))  NULLS LAST, (~ (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))), ((t1.c1)AND(t1.c0)) COLLATE RTRIM DESC;
SELECT ALL * FROM t1 WHERE (0xffffffffd705df20) ORDER BY CASE WHEN t1.c1 COLLATE RTRIM THEN (((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, '%q+zjy&h'))) ELSE ((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)) END, (~ ((t1.c1 IN ()))) ASC, t1.c1 ASC  NULLS LAST, STRFTIME(((0Xffffffff8e6487ef)>>(t1.c0)), ((t1.c0)>(t1.c0)), TRIM(DISTINCT t1.c1, t1.c0), t1.c1) DESC  NULLS FIRST LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((t1.c1, t1.c1))>((t1.c0, t1.c0))) COLLATE RTRIM);
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((t1.c1, t1.c1))>((t1.c0, t1.c0))) COLLATE RTRIM)AND((((t1.c0 IN (0.9965575888892609, t1.c1))) NOT BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) AND (t1.c1))))) ORDER BY (((((t1.c0 IN ()))AND((t1.c1 IN ()))))AND(((t1.c0) IS FALSE))) DESC, LIKELY(((t1.c1) NOT NULL))  NULLS FIRST, ((((0.38247033680633513, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, NULL))) IN ()), ((NULL) ISNULL)  NULLS LAST INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((+ (CAST(t1.c1 AS BLOB)))) ORDER BY (((((t1.c0 IN ()))AND((t1.c1 IN ()))))AND(((t1.c0) IS FALSE))) DESC, LIKELY(((t1.c1) NOT NULL))  NULLS FIRST, ((((0.38247033680633513, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, NULL))) IN ()), ((NULL) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c0)=(t1.c1)) AS BLOB));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CAST(((t1.c0)=(t1.c1)) AS BLOB))AND(((((~ (t1.c1)), CAST(t1.c0 AS TEXT), ((t1.c1) NOT NULL), NULL, (NOT (t1.c0))))<>(((t1.c1 IN (t1.c0, t1.c0)), (t1.c1 IN (t1.c1)), ((t1.c1)GLOB(t1.c0)), (('-1261314625') ISNULL), (t1.c1 IN (t1.c0))))))));
SELECT * FROM t1 WHERE (CAST(ABS('0.4662004213261387') AS REAL));
SELECT * FROM t1 WHERE (CAST(ABS('0.4662004213261387') AS REAL));
SELECT * FROM t1 WHERE (CAST(ABS('0.4662004213261387') AS REAL));
SELECT * FROM t1 WHERE (CAST(ABS('0.4662004213261387') AS REAL));
SELECT * FROM t1 WHERE (x'') ORDER BY CAST(((t1.c1) ISNULL) AS INTEGER) ASC, CASE (t1.c1 IN ())  WHEN 0.11886329428435505 THEN (((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))) END  NULLS LAST;
SELECT * FROM t1 WHERE (((x'')AND(((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END) AND (''))))) ORDER BY CAST(((t1.c1) ISNULL) AS INTEGER) ASC, CASE (t1.c1 IN ())  WHEN 0.11886329428435505 THEN (((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))) END  NULLS LAST LIMIT 0x1 INTERSECT SELECT * FROM t1 WHERE (((((((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(UPPER(DISTINCT t1.c0))))AND(TYPEOF(DISTINCT t1.c0))))OR(((t1.c1) BETWEEN (t1.c0) AND ('-399064750')))))AND(((t1.c0)<<(t1.c0))))) ORDER BY CAST(((t1.c1) ISNULL) AS INTEGER) ASC, CASE (t1.c1 IN ())  WHEN 0.11886329428435505 THEN (((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))) END  NULLS LAST LIMIT 0X1;
SELECT * FROM t1 WHERE (x'') ORDER BY CAST(((t1.c1) ISNULL) AS INTEGER) ASC, CASE (t1.c1 IN ())  WHEN 0.11886329428435505 THEN (((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))) END  NULLS LAST;
SELECT * FROM t1 WHERE (((x'')AND(((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END) AND (''))))) ORDER BY CAST(((t1.c1) ISNULL) AS INTEGER) ASC, CASE (t1.c1 IN ())  WHEN 0.11886329428435505 THEN (((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))) END  NULLS LAST LIMIT 0x1 INTERSECT SELECT * FROM t1 WHERE (((((((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(UPPER(DISTINCT t1.c0))))AND(TYPEOF(DISTINCT t1.c0))))OR(((t1.c1) BETWEEN (t1.c0) AND ('-399064750')))))AND(((t1.c0)<<(t1.c0))))) ORDER BY CAST(((t1.c1) ISNULL) AS INTEGER) ASC, CASE (t1.c1 IN ())  WHEN 0.11886329428435505 THEN (((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))) END  NULLS LAST LIMIT 0X1;
SELECT MAX(t1.c0) FROM t1 WHERE (DATETIME(0.7559114709300819, t1.c0, t1.c0, t1.c1) COLLATE BINARY) ORDER BY 0.27495153547641316 ASC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (DATETIME(0.7559114709300819, t1.c0, t1.c0, t1.c1) COLLATE BINARY) ORDER BY (((t1.c1 IN (t1.c0)))*(CAST(t1.c0 AS INTEGER))), (+ (x''))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1) NOT NULL) AS NUMERIC)) ORDER BY t1.c1  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c1) NOT NULL) AS NUMERIC))AND(((+ (t1.c0)) IN ())))) ORDER BY t1.c1  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 COLLATE BINARY AS NUMERIC)) ORDER BY t1.c1  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1) NOT NULL) AS NUMERIC)) ORDER BY t1.c1  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c1) NOT NULL) AS NUMERIC))AND(((+ (t1.c0)) IN ())))) ORDER BY t1.c1  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 COLLATE BINARY AS NUMERIC)) ORDER BY t1.c1  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (((t1.c0)LIKE(t1.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY json_remove(t1.c1, t1.c0 COLLATE NOCASE) ASC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)LIKE(t1.c1)) COLLATE BINARY COLLATE BINARY)AND((CAST(t1.c0 AS BLOB) IN ())))) ORDER BY json_remove(t1.c1, t1.c0 COLLATE NOCASE) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((SQLITE_COMPILEOPTION_USED(t1.c0))AND(0X1e7f89d8)))AND(x'')))AND(((t1.c0)IS(t1.c1))))) ORDER BY json_remove(t1.c1, t1.c0 COLLATE NOCASE) ASC;
SELECT * FROM t1 WHERE (((t1.c0)LIKE(t1.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY json_remove(t1.c1, t1.c0 COLLATE NOCASE) ASC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)LIKE(t1.c1)) COLLATE BINARY COLLATE BINARY)AND((CAST(t1.c0 AS BLOB) IN ())))) ORDER BY json_remove(t1.c1, t1.c0 COLLATE NOCASE) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((SQLITE_COMPILEOPTION_USED(t1.c0))AND(0X1e7f89d8)))AND(x'')))AND(((t1.c0)IS(t1.c1))))) ORDER BY json_remove(t1.c1, t1.c0 COLLATE NOCASE) ASC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (LIKELY(((t1.c0)=(t1.c1))));
SELECT MAX(t1.c0) FROM t1 WHERE (LIKELY(((t1.c0)==(t1.c1)))) INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((- (t1.c0)))>>(((((0.4047805653759595)AND(t1.c1)))AND(t1.c1)))));
SELECT * FROM t1 WHERE (CASE WHEN ((t1.c1) IS TRUE) THEN CAST(t1.c1 AS INTEGER) ELSE t1.c1 END) ORDER BY CAST((t1.c1 IN (t1.c0, t1.c0)) AS BLOB) DESC, CAST(((t1.c0) IS TRUE) AS REAL) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((CASE WHEN ((t1.c1) IS TRUE) THEN CAST(t1.c1 AS INTEGER) ELSE t1.c1 END)AND(((LIKELY(DISTINCT t1.c0))OR(((t1.c1)OR(t1.c0))))))) ORDER BY CAST((t1.c1 IN (t1.c0, t1.c0)) AS BLOB) DESC, CAST(((t1.c0) IS TRUE) AS REAL) DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM t1 WHERE (CASE WHEN ((t1.c1) IS TRUE) THEN CAST(t1.c1 AS INTEGER) ELSE t1.c1 END) ORDER BY CAST((t1.c1 IN (t1.c0, t1.c0)) AS BLOB) DESC, CAST(((t1.c0) IS TRUE) AS REAL) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((CASE WHEN ((t1.c1) IS TRUE) THEN CAST(t1.c1 AS INTEGER) ELSE t1.c1 END)AND(((LIKELY(DISTINCT t1.c0))OR(((t1.c1)OR(t1.c0))))))) ORDER BY CAST((t1.c1 IN (t1.c0, t1.c0)) AS BLOB) DESC, CAST(((t1.c0) IS TRUE) AS REAL) DESC  NULLS LAST LIMIT 0X0;
SELECT MIN(t1.c1) FROM t1 WHERE ((('-1967749805')OR((t1.c1 IN (t1.c1, t1.c0, 0.16259935654182844)))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((('-1967749805')OR((t1.c1 IN (t1.c1, t1.c0)))));
SELECT * FROM t1 WHERE ((- (t1.c0)) COLLATE RTRIM);
SELECT * FROM t1 WHERE ((((- (t1.c0)) COLLATE RTRIM)AND('Qa'))) ORDER BY ((((t1.c0) IS FALSE)) BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))) AND ((NOT (t1.c0)))) ASC  NULLS FIRST, (((t1.c1) NOT BETWEEN ('1408534150') AND (t1.c1)) IN ()) ASC LIMIT 0X0;
SELECT * FROM t1 WHERE ((- (t1.c0)) COLLATE RTRIM);
SELECT * FROM t1 WHERE ((((- (t1.c0)) COLLATE RTRIM)AND('Qa'))) ORDER BY ((((t1.c0) IS FALSE)) BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))) AND ((NOT (t1.c0)))) ASC  NULLS FIRST, (((t1.c1) NOT BETWEEN ('1408534150') AND (t1.c1)) IN ()) ASC LIMIT 0X0;
SELECT * FROM t1 WHERE (0.2488687008784667);
SELECT ALL * FROM t1 WHERE (0.2488687008784667) LIMIT 0X1;
SELECT * FROM t1 WHERE (0.2488687008784667);
SELECT ALL * FROM t1 WHERE (0.2488687008784667) LIMIT 0X1;
SELECT MIN(t1.c1) FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN (((((t1.c0, t1.c1))<=((t1.c0, t1.c1))), ((t1.c0) NOTNULL))) AND ((((t1.c0)|(t1.c0)), t1.c0)))) ORDER BY CAST(CAST(t1.c0 AS TEXT) AS INTEGER), (((t1.c0, t1.c0)) BETWEEN ((((t1.c1)<<(t1.c1)), ((t1.c1)GLOB(t1.c0)))) AND ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN -1861239384 END, t1.c0))), NULL DESC  NULLS LAST, (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))>=(((x'')!=(t1.c0))))  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((((t1.c0, t1.c1)) NOT BETWEEN (((((t1.c0, t1.c1))<=((t1.c0, t1.c1))), ((t1.c0) NOTNULL))) AND ((((t1.c0)|(t1.c0)), t1.c0))))AND((((t1.c0) BETWEEN ('1860107873') AND (t1.c0)) IN (t1.c1 COLLATE NOCASE))))) ORDER BY CAST(CAST(t1.c0 AS TEXT) AS INTEGER), (((t1.c0, t1.c0)) BETWEEN ((((t1.c1)<<(t1.c1)), ((t1.c1)GLOB(t1.c0)))) AND ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN 0xffffffff910fbda8 END, t1.c0))), NULL DESC  NULLS LAST, (((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))>=(((x'')!=(t1.c0))))  NULLS LAST LIMIT 3;
SELECT MAX(t1.c1) FROM t1 WHERE ((((t1.c0, t1.c0, t1.c1)) BETWEEN ((CAST(t1.c0 AS BLOB), t1.c1 COLLATE BINARY, (t1.c0 IN (t1.c1, t1.c0)))) AND ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 END, '0.684920537938966', (((t1.c1, t1.c0)) BETWEEN ((0.45048801113379644, t1.c0)) AND ((t1.c1, t1.c0)))))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c1)) BETWEEN ((CAST(t1.c0 AS BLOB), t1.c1 COLLATE BINARY, (t1.c0 IN (t1.c1, t1.c0)))) AND ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 END, '0.684920537938966', (((t1.c1, t1.c0)) BETWEEN ((0.45048801113379644, t1.c0)) AND ((t1.c1, t1.c0)))))))AND((NOT (t1.c0))))) ORDER BY t1.c1 DESC LIMIT 1 INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c1)OR(t1.c0)) COLLATE NOCASE) ORDER BY t1.c1 DESC LIMIT 0X1;
SELECT * FROM t1 WHERE (CASE (NOT (t1.c1))  WHEN CAST(t1.c0 AS NUMERIC) THEN t1.c0 END) ORDER BY t1.c0  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE (NOT (t1.c1))  WHEN CAST(t1.c0 AS NUMERIC) THEN t1.c0 END) ORDER BY t1.c0  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE (NOT (t1.c1))  WHEN CAST(t1.c0 AS NUMERIC) THEN t1.c0 END) ORDER BY t1.c0  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE (NOT (t1.c1))  WHEN CAST(t1.c0 AS NUMERIC) THEN t1.c0 END) ORDER BY t1.c0  NULLS FIRST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((~ (t1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((t1.c0)*(t1.c0)) COLLATE BINARY;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((~ (t1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((((- (t1.c0)))AND((((t1.c1))<>((t1.c0))))))AND(((((((((t1.c0)OR(x'')))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))) ASC  NULLS FIRST, ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END) NOT NULL) INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (x'') ORDER BY (((((- (t1.c0)))AND((((t1.c1))<>((t1.c0))))))AND(((((((((t1.c0)OR(x'')))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))) ASC  NULLS FIRST, ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END) NOT NULL);
SELECT ALL * FROM t1 WHERE (((t1.c0)/(t1.c0)) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE (((((t1.c0)/(t1.c0)) COLLATE RTRIM)AND(COALESCE(((t1.c1) IS TRUE), CAST(t1.c1 AS BLOB))))) ORDER BY (~ ((('BQkmS#}')<(t1.c0)))) DESC, ((t1.c1)%(t1.c1)) COLLATE BINARY ASC  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (((((((((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR((t1.c0 IN ('{)Y7k')))))AND(((t1.c0) NOT BETWEEN ('1626513390') AND (t1.c0)))))AND(RTRIM(t1.c0))))OR(((t1.c0)==(t1.c0))))) ORDER BY (~ ((('BQkmS#}')<(t1.c0)))) DESC, ((t1.c1)%(t1.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c0)/(t1.c0)) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE (((((t1.c0)/(t1.c0)) COLLATE RTRIM)AND(COALESCE(((t1.c1) IS TRUE), CAST(t1.c1 AS BLOB))))) ORDER BY (~ ((('BQkmS#}')<(t1.c0)))) DESC, ((t1.c1)%(t1.c1)) COLLATE BINARY ASC  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (((((((((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR((t1.c0 IN ('{)Y7k')))))AND(((t1.c0) NOT BETWEEN ('1626513390') AND (t1.c0)))))AND(RTRIM(t1.c0))))OR(((t1.c0)==(t1.c0))))) ORDER BY (~ ((('BQkmS#}')<(t1.c0)))) DESC, ((t1.c1)%(t1.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c1) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (CAST(t1.c1 AS REAL)))) ORDER BY t1.c1 DESC  NULLS LAST, ((CAST(t1.c1 AS REAL))LIKE((- (t1.c1)))) DESC;
SELECT ALL * FROM t1 WHERE (((t1.c1) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (CAST(t1.c1 AS REAL)))) ORDER BY ABS(t1.c0) COLLATE BINARY COLLATE NOCASE, (((((((((('9')<<(t1.c0)))AND(((t1.c1)>=(t1.c1)))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((((t1.c0))<((t1.c1))))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) ASC  NULLS LAST LIMIT 0x3 INTERSECT SELECT ALL * FROM t1 WHERE (json_remove(x'', CAST(t1.c1 AS REAL))) ORDER BY ABS(t1.c0) COLLATE BINARY COLLATE NOCASE, (((((((((('9')<<(t1.c0)))AND(((t1.c1)>=(t1.c1)))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((((t1.c0))<((t1.c1))))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) ASC  NULLS LAST LIMIT 3;
SELECT ALL * FROM t1 WHERE (((t1.c1) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (CAST(t1.c1 AS REAL)))) ORDER BY t1.c1 DESC  NULLS LAST, ((CAST(t1.c1 AS REAL))LIKE((- (t1.c1)))) DESC;
SELECT ALL * FROM t1 WHERE (((t1.c1) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (CAST(t1.c1 AS REAL)))) ORDER BY ABS(t1.c0) COLLATE BINARY COLLATE NOCASE, (((((((((('9')<<(t1.c0)))AND(((t1.c1)>=(t1.c1)))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((((t1.c0))<((t1.c1))))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) ASC  NULLS LAST LIMIT 0x3 INTERSECT SELECT ALL * FROM t1 WHERE (json_remove(x'', CAST(t1.c1 AS REAL))) ORDER BY ABS(t1.c0) COLLATE BINARY COLLATE NOCASE, (((((((((('9')<<(t1.c0)))AND(((t1.c1)>=(t1.c1)))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((((t1.c0))<((t1.c1))))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) ASC  NULLS LAST LIMIT 3;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC)) ORDER BY (((NOT (t1.c0))) ISNULL) DESC, ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END) ISNULL)  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC))AND(UPPER(DISTINCT ((((t1.c0)AND(t1.c0)))OR(0.13185662510594154)))))) ORDER BY (((NOT (t1.c0))) ISNULL) DESC, ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END) ISNULL)  NULLS LAST;
SELECT * FROM t1 WHERE ((((((t1.c1) IS TRUE)))<>((((t1.c1)<=(t1.c0))))));
SELECT ALL * FROM t1 WHERE ((((((t1.c1) IS TRUE)))<((((t1.c1)<(t1.c0)))))) LIMIT 2 INTERSECT SELECT ALL * FROM t1 WHERE (t1.c1) LIMIT 2;
SELECT * FROM t1 WHERE ((((((t1.c1) IS TRUE)))<>((((t1.c1)<=(t1.c0))))));
SELECT ALL * FROM t1 WHERE ((((((t1.c1) IS TRUE)))<((((t1.c1)<(t1.c0)))))) LIMIT 2 INTERSECT SELECT ALL * FROM t1 WHERE (t1.c1) LIMIT 2;
SELECT * FROM t1 WHERE (CASE WHEN LIKELIHOOD(t1.c0, t1.c0) THEN ((t1.c1) IS FALSE) WHEN t1.c1 THEN t1.c1 ELSE (t1.c1 IN (t1.c1)) END);
SELECT * FROM t1 WHERE (CASE WHEN LIKELIHOOD(t1.c0, t1.c0) THEN ((t1.c1) IS FALSE) WHEN t1.c1 THEN t1.c1 ELSE (t1.c1 IN (t1.c1)) END) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN -6.87481056E8 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) BETWEEN (t1.c1 COLLATE RTRIM) AND ((NOT (t1.c1))))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((t1.c0) IS FALSE) COLLATE NOCASE) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN -6.87481056E8 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) BETWEEN (t1.c1 COLLATE RTRIM) AND ((NOT (t1.c1))))  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE WHEN LIKELIHOOD(t1.c0, t1.c0) THEN ((t1.c1) IS FALSE) WHEN t1.c1 THEN t1.c1 ELSE (t1.c1 IN (t1.c1)) END);
SELECT * FROM t1 WHERE (x'') ORDER BY ((((t1.c0)IS(t1.c0)))/(CAST(t1.c1 AS NUMERIC)))  NULLS LAST, t1.c0  NULLS LAST;
SELECT * FROM t1 WHERE (((x'')AND(TRIM(CAST(t1.c1 AS INTEGER))))) ORDER BY 'r炀!'  NULLS LAST, (((t1.c0)-(t1.c0)) IN ()) ASC INTERSECT SELECT ALL * FROM t1 WHERE (CAST((('41683678')<=(t1.c0)) AS BLOB)) ORDER BY 'r炀!'  NULLS LAST, (((t1.c0)-(t1.c0)) IN ()) ASC;
SELECT * FROM t1 WHERE (x'') ORDER BY ((((t1.c0)IS(t1.c0)))/(CAST(t1.c1 AS NUMERIC)))  NULLS LAST, t1.c0  NULLS LAST;
SELECT * FROM t1 WHERE (((x'')AND(TRIM(CAST(t1.c1 AS INTEGER))))) ORDER BY 'r炀!'  NULLS LAST, (((t1.c0)-(t1.c0)) IN ()) ASC INTERSECT SELECT ALL * FROM t1 WHERE (CAST((('41683678')<=(t1.c0)) AS BLOB)) ORDER BY 'r炀!'  NULLS LAST, (((t1.c0)-(t1.c0)) IN ()) ASC;
SELECT MAX(t1.c1) FROM t1 WHERE (NULL) ORDER BY (((((t1.c0)OR(t1.c1)))OR(t1.c0)) IN (((t1.c1) IS FALSE))) ASC, ((((t1.c0 IN ()), (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), (((t1.c0, t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((x'5f37b4', t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c0, t1.c0)))))>=(((((t1.c1, NULL, t1.c0)) BETWEEN ((t1.c1, NULL, t1.c1)) AND ((t1.c0, t1.c0, t1.c0))), ((t1.c1) NOT NULL), ((t1.c1) NOT BETWEEN ('d') AND (t1.c1)))))  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (NULL) ORDER BY (((((t1.c0)OR(t1.c1)))OR(t1.c0)) IN (((t1.c1) IS FALSE))) ASC, ((((t1.c0 IN ()), (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), (((t1.c0, t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((x'5f37b4', t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c1, t1.c0, t1.c0)))))>=(((((t1.c1, NULL, t1.c0)) BETWEEN ((t1.c1, NULL, t1.c1)) AND ((t1.c0, t1.c0, t1.c0))), ((t1.c1) NOT NULL), ((t1.c1) NOT BETWEEN ('d') AND (t1.c1)))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((((((((t1.c1 IN (t1.c1, t1.c1)))AND(CAST(t1.c1 AS TEXT))))OR(((t1.c0)IS NOT(t1.c1)))))AND(t1.c0)))AND(((t1.c0)IS NOT(t1.c0)))))OR(-813446050)));
SELECT ALL * FROM t1 WHERE ((((((((((((((t1.c1 IN (t1.c1, t1.c1)))AND(CAST(t1.c1 AS TEXT))))OR(((t1.c0)IS NOT(t1.c1)))))AND(t1.c0)))AND(((t1.c0)IS NOT(t1.c0)))))OR(-813446050)))AND(CAST(0.2556572402558974 AS NUMERIC)))) ORDER BY 0.4982729227264253, CASE ((((t1.c0)OR(t1.c1)))AND(t1.c0))  WHEN (+ (t1.c0)) THEN t1.c1 COLLATE NOCASE WHEN (t1.c0 IN ()) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 END THEN (((t1.c0))!=((t1.c0))) END DESC  NULLS LAST LIMIT 0X4;
SELECT ALL * FROM t1 WHERE ((((((((((((t1.c1 IN (t1.c1, t1.c1)))AND(CAST(t1.c1 AS TEXT))))OR(((t1.c0)IS NOT(t1.c1)))))AND(t1.c0)))AND(((t1.c0)IS NOT(t1.c0)))))OR(-813446050)));
SELECT ALL * FROM t1 WHERE ((((((((((((((t1.c1 IN (t1.c1, t1.c1)))AND(CAST(t1.c1 AS TEXT))))OR(((t1.c0)IS NOT(t1.c1)))))AND(t1.c0)))AND(((t1.c0)IS NOT(t1.c0)))))OR(-813446050)))AND(CAST(0.2556572402558974 AS NUMERIC)))) ORDER BY 0.4982729227264253, CASE ((((t1.c0)OR(t1.c1)))AND(t1.c0))  WHEN (+ (t1.c0)) THEN t1.c1 COLLATE NOCASE WHEN (t1.c0 IN ()) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 END THEN (((t1.c0))!=((t1.c0))) END DESC  NULLS LAST LIMIT 0X4;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0, 0.4745365058172778, t1.c0)) NOT BETWEEN ((x'05', (((0.13626072104191445, t1.c0, t1.c0))<((x'4380', t1.c0, t1.c1))), ((((t1.c1)OR(t1.c1)))OR(t1.c0)))) AND ((t1.c1 COLLATE BINARY, t1.c1, ((t1.c0) BETWEEN (t1.c0) AND (0.5166854246876248)))))) ORDER BY (- (((t1.c1) IS TRUE)))  NULLS FIRST, RTRIM(((t1.c1)<(t1.c0))) ASC  NULLS FIRST, t1.c1;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c0, 0.4745365058172778, t1.c0)) NOT BETWEEN ((x'05', (((0.13626072104191445, t1.c0, t1.c0))<((x'4380', t1.c0, t1.c1))), ((((t1.c1)OR(t1.c1)))OR(t1.c0)))) AND ((t1.c1 COLLATE BINARY, t1.c1, ((t1.c0) BETWEEN (t1.c0) AND (0.5166854246876248))))))AND(((t1.c1) IS FALSE) COLLATE NOCASE))) ORDER BY (- (((t1.c1) IS TRUE)))  NULLS FIRST, RTRIM(((t1.c1)<(t1.c0))) ASC  NULLS FIRST, t1.c1;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CASE CAST(t1.c0 AS NUMERIC)  WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END THEN TRIM(DISTINCT t1.c1, t1.c1) END);
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((CASE CAST(t1.c0 AS NUMERIC)  WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END THEN TRIM(DISTINCT t1.c1, t1.c1) END)AND(((((t1.c0)+(t1.c0)))*(t1.c1))))) LIMIT 2 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CAST(LIKELY(DISTINCT t1.c0) AS NUMERIC)) LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (+ (t1.c0)) THEN ((t1.c1) ISNULL) WHEN ((t1.c0)&(t1.c1)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) WHEN CAST(t1.c1 AS BLOB) THEN ((((t1.c1)AND(t1.c0)))AND(t1.c1)) ELSE ((t1.c0)|(t1.c1)) END) ORDER BY (t1.c0 IN (((NULL) BETWEEN ('z') AND (t1.c1)))) ASC, (t1.c0 IN (t1.c0, t1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (+ (t1.c0)) THEN ((t1.c1) ISNULL) WHEN ((t1.c0)&(t1.c1)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) WHEN CAST(t1.c1 AS BLOB) THEN ((((t1.c1)AND(t1.c0)))AND(t1.c1)) ELSE ((t1.c0)|(t1.c1)) END) ORDER BY (t1.c0 IN (((NULL) BETWEEN ('z') AND (t1.c1)))) ASC, (t1.c0 IN (t1.c0, t1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1 WHERE (CAST((- (t1.c0)) AS INTEGER)) ORDER BY (((t1.c0)) BETWEEN ((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))) AND ((((((t1.c1)OR(t1.c0)))AND(t1.c0)))))  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CAST((- (t1.c0)) AS INTEGER)) ORDER BY (((t1.c0)) BETWEEN ((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))) AND ((((((t1.c1)OR(t1.c0)))AND(t1.c0)))))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((CASE WHEN t1.c0 THEN '-742346749' ELSE t1.c1 END) BETWEEN (((t1.c1) IS TRUE)) AND (((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1))))) ORDER BY (((t1.c0)) BETWEEN ((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))AND(t1.c1)))) AND ((((((t1.c1)OR(t1.c0)))AND(t1.c0)))))  NULLS FIRST LIMIT 0X0;
SELECT MIN(t1.c1) FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((CAST('353841469' AS NUMERIC), CAST(t1.c0 AS TEXT), (- (t1.c1)), CAST(t1.c0 AS NUMERIC))) AND ((((t1.c0) ISNULL), ((((t1.c1)AND(t1.c1)))OR(t1.c0)), NULL, CAST(0.6740948682883035 AS BLOB)))));
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((CAST('353841469' AS NUMERIC), CAST(t1.c0 AS TEXT), (- (t1.c1)), CAST(t1.c0 AS NUMERIC))) AND ((((t1.c0) ISNULL), ((((t1.c1)AND(t1.c1)))OR(t1.c0)), NULL, CAST(0.6740948682883035 AS BLOB))))) ORDER BY (NOT (((t1.c0)LIKE(t1.c0))))  NULLS LAST, CASE WHEN (((t1.c1, t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c0))) THEN UNLIKELY(t1.c0) WHEN ((t1.c1) NOTNULL) THEN 0.6646169454734159 WHEN HEX(t1.c1) THEN ((t1.c1) ISNULL) END, CASE t1.c1  WHEN t1.c1 THEN 0.9059493620412911 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END COLLATE NOCASE  NULLS LAST, (((((((((t1.c0 IN ()))AND(((0.03622465028804023) IS TRUE))))OR(ABS(t1.c1))))AND((~ (t1.c0)))))OR(CASE WHEN t1.c1 THEN x'bb' WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN '둁69' END)) ASC LIMIT 1 INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (((LIKELIHOOD(DISTINCT t1.c0, t1.c1))<<(CAST(t1.c1 AS INTEGER)))) ORDER BY (NOT (((t1.c0)LIKE(t1.c0))))  NULLS LAST, CASE WHEN (((t1.c1, t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c0))) THEN UNLIKELY(t1.c0) WHEN ((t1.c1) NOTNULL) THEN 0.6646169454734159 WHEN HEX(t1.c1) THEN ((t1.c1) ISNULL) END, CASE t1.c1  WHEN t1.c1 THEN 0.9059493620412911 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END COLLATE NOCASE  NULLS LAST, (((((((((t1.c0 IN ()))AND(((0.03622465028804023) IS TRUE))))OR(ABS(t1.c1))))AND((~ (t1.c0)))))OR(CASE WHEN t1.c1 THEN x'bb' WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN '둁69' END)) ASC LIMIT 1;
SELECT MIN(t1.c0) FROM t1 WHERE ('-299455398') ORDER BY t1.c0, (((((t1.c0)OR(t1.c0)))OR(t1.c1)) IN (((x'')<=(t1.c1))))  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((('-299455398')AND(((((((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c1)))<<(((t1.c0)LIKE(t1.c1))))))) ORDER BY t1.c0, (((((t1.c0)OR(t1.c0)))OR(t1.c1)) IN (((x'')<=(t1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) IS FALSE) COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c0) IS FALSE) COLLATE RTRIM)AND(CASE WHEN ((t1.c1) NOT NULL) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END WHEN (t1.c0 IN (t1.c0)) THEN (((t1.c1, t1.c0)) BETWEEN (('-305989446', t1.c0)) AND ((t1.c1, x''))) ELSE -1.148669192E9 END))) ORDER BY ((t1.c0)IS('-243304232')) DESC  NULLS LAST, CASE WHEN t1.c0 COLLATE RTRIM THEN ((t1.c1) BETWEEN (t1.c0) AND (111187103)) END ASC  NULLS LAST LIMIT 0X3 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END AS REAL)) ORDER BY ((t1.c0)IS('-243304232')) DESC  NULLS LAST, CASE WHEN t1.c0 COLLATE RTRIM THEN ((t1.c1) BETWEEN (t1.c0) AND (0x6a0949f)) END ASC  NULLS LAST LIMIT 0x3;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)OR(t1.c1 COLLATE RTRIM)))AND(t1.c0 COLLATE NOCASE)) ASC  NULLS FIRST, (((t1.c1 IN (t1.c1, t1.c1)))+(((t1.c1) IS TRUE))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY (- (0.8109357010492598))  NULLS FIRST, CAST(CAST(t1.c1 AS TEXT) AS TEXT)  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)OR(t1.c1 COLLATE RTRIM)))AND(t1.c0 COLLATE NOCASE)) ASC  NULLS FIRST, (((t1.c1 IN (t1.c1, t1.c1)))+(((t1.c1) IS TRUE))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY (- (0.8109357010492598))  NULLS FIRST, CAST(CAST(t1.c1 AS TEXT) AS TEXT)  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c1)<(t1.c0))) NOT NULL));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((t1.c1)<(t1.c0))) NOT NULL))AND(((((((((((t1.c1)OR(x'f714')))OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))<=(CAST(t1.c1 AS NUMERIC)))))) INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((UNLIKELY(t1.c1))<<(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT * FROM t1 WHERE ((((((t1.c1)>>(t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), (((((((('986869844')OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1))))<>((t1.c1, HEX(t1.c0), (- (0.5248248059361333))))));
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1)>>(t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), (((((((('986869844')OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1))))<((t1.c1, HEX(t1.c0), (- (0.5248248059361333))))))AND(CASE ((t1.c1)IS(t1.c1))  WHEN ((t1.c1)GLOB(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN 0.37736632700229034 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END WHEN t1.c1 COLLATE NOCASE THEN CAST(t1.c1 AS INTEGER) WHEN t1.c0 COLLATE NOCASE THEN CAST(t1.c1 AS INTEGER) WHEN HEX(t1.c0) THEN t1.c1 COLLATE BINARY ELSE SQLITE_VERSION() END))) ORDER BY (NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (NULL))))  NULLS FIRST, CAST(CAST(t1.c1 AS NUMERIC) AS TEXT) LIMIT 1;
SELECT * FROM t1 WHERE ((((((t1.c1)>>(t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), (((((((('986869844')OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1))))<>((t1.c1, HEX(t1.c0), (- (0.5248248059361333))))));
SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1)>>(t1.c0)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), (((((((('986869844')OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1))))<((t1.c1, HEX(t1.c0), (- (0.5248248059361333))))))AND(CASE ((t1.c1)IS(t1.c1))  WHEN ((t1.c1)GLOB(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN 0.37736632700229034 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END WHEN t1.c1 COLLATE NOCASE THEN CAST(t1.c1 AS INTEGER) WHEN t1.c0 COLLATE NOCASE THEN CAST(t1.c1 AS INTEGER) WHEN HEX(t1.c0) THEN t1.c1 COLLATE BINARY ELSE SQLITE_VERSION() END))) ORDER BY (NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (NULL))))  NULLS FIRST, CAST(CAST(t1.c1 AS NUMERIC) AS TEXT) LIMIT 1;
SELECT * FROM t1 WHERE (CAST('橻' AS TEXT));
SELECT DISTINCT * FROM t1 WHERE (CAST('橻' AS TEXT)) ORDER BY ((((t1.c1) NOTNULL))&(((t1.c0) ISNULL))), ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))+(t1.c1)) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (NULL) ORDER BY ((((t1.c1) NOTNULL))&(((t1.c0) ISNULL))), ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))+(t1.c1)) ASC;
SELECT * FROM t1 WHERE (CAST('橻' AS TEXT));
SELECT DISTINCT * FROM t1 WHERE (CAST('橻' AS TEXT)) ORDER BY ((((t1.c1) NOTNULL))&(((t1.c0) ISNULL))), ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))+(t1.c1)) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (NULL) ORDER BY ((((t1.c1) NOTNULL))&(((t1.c0) ISNULL))), ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))+(t1.c1)) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (CAST(t1.c1 AS INTEGER))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((+ (CAST(t1.c1 AS INTEGER))))AND(0.04229561420066441))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))<<(((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND('-832560007')))AND(t1.c1)))) DESC, CASE CAST(t1.c1 AS REAL)  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))) THEN CASE t1.c1  WHEN t1.c1 THEN -1.357763336E9 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END ELSE (((t1.c1))>(('渡
kV_Hi,'))) END LIMIT 0x3 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((((((t1.c1)IS NOT(t1.c0)))AND(((t1.c0)-(t1.c0)))))OR(NULLIF('', t1.c0))))AND((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))))))AND(t1.c0))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))<<(((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND('-832560007')))AND(t1.c1)))) DESC, CASE CAST(t1.c1 AS REAL)  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))) THEN CASE t1.c1  WHEN t1.c1 THEN -1.357763336E9 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END ELSE (((t1.c1))>(('渡
kV_Hi,'))) END LIMIT 0X3;
SELECT * FROM t1 WHERE (CASE WHEN (((t1.c1, t1.c1, t1.c0))<>((t1.c1, t1.c1, t1.c1))) THEN ((t1.c0) IS TRUE) WHEN LIKELY(NULL) THEN ((((t1.c1)OR(t1.c0)))AND(t1.c1)) WHEN (- (t1.c0)) THEN t1.c0 END) ORDER BY LIKELY(CAST(t1.c0 AS REAL)) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((CASE WHEN (((t1.c1, t1.c1, t1.c0))>((t1.c1, t1.c1, t1.c1))) THEN ((t1.c0) IS TRUE) WHEN LIKELY(NULL) THEN ((((t1.c1)OR(t1.c0)))AND(t1.c1)) WHEN (- (t1.c0)) THEN t1.c0 END)AND(((JULIANDAY(t1.c1, t1.c0, t1.c1, t1.c0))GLOB('-220530461' COLLATE BINARY))))) ORDER BY ((t1.c1)||(t1.c1)) COLLATE NOCASE, LOWER(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) ASC, (((t1.c1) ISNULL) IN ()) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (CASE WHEN (((t1.c1, t1.c1, t1.c0))<>((t1.c1, t1.c1, t1.c1))) THEN ((t1.c0) IS TRUE) WHEN LIKELY(NULL) THEN ((((t1.c1)OR(t1.c0)))AND(t1.c1)) WHEN (- (t1.c0)) THEN t1.c0 END) ORDER BY LIKELY(CAST(t1.c0 AS REAL)) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((CASE WHEN (((t1.c1, t1.c1, t1.c0))>((t1.c1, t1.c1, t1.c1))) THEN ((t1.c0) IS TRUE) WHEN LIKELY(NULL) THEN ((((t1.c1)OR(t1.c0)))AND(t1.c1)) WHEN (- (t1.c0)) THEN t1.c0 END)AND(((JULIANDAY(t1.c1, t1.c0, t1.c1, t1.c0))GLOB('-220530461' COLLATE BINARY))))) ORDER BY ((t1.c1)||(t1.c1)) COLLATE NOCASE, LOWER(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) ASC, (((t1.c1) ISNULL) IN ()) DESC  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE ((((NULL, t1.c0)) BETWEEN ((0x6657820d, ((((t1.c0)OR(0x53f48686)))AND(t1.c1)))) AND ((((t1.c0)<>(NULL)), 0.24043267391032486))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((NULL, t1.c0)) BETWEEN ((0X6657820d, ((((t1.c0)OR(1408534150)))AND(t1.c1)))) AND ((((t1.c0)>(NULL)), 0.24043267391032486)))) ORDER BY (((t1.c1 COLLATE BINARY, t1.c0))<((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, SQLITE_SOURCE_ID())))  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE ((((t1.c1, t1.c0)) NOT BETWEEN ((ABS(t1.c1), 0.886053793015198)) AND ((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)), (t1.c1 IN (t1.c1))))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((t1.c1, t1.c0)) NOT BETWEEN ((ABS(t1.c1), 0.886053793015198)) AND ((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)), (t1.c1 IN (t1.c1)))))) LIMIT 0 INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE ((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0 COLLATE RTRIM, x'05', CASE WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)) AND ((((t1.c0)IS NOT(t1.c0)), CAST(t1.c0 AS NUMERIC), ((t1.c0)!=(t1.c1)))))) LIMIT 0X0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ('B');
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ('B') INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((('-131715403')!=(t1.c1))) NOT NULL));
SELECT MAX(t1.c1) FROM t1 WHERE ((((t1.c1, t1.c0, t1.c0, '', t1.c1)) NOT BETWEEN ((CAST(t1.c1 AS BLOB), CAST(t1.c0 AS INTEGER), t1.c0 COLLATE RTRIM, t1.c0 COLLATE NOCASE, ((t1.c1) NOT NULL))) AND ((t1.c0, ABS(DISTINCT t1.c0), ((((((t1.c0)OR(t1.c0)))OR(t1.c1)))AND(t1.c1)), CAST(t1.c0 AS BLOB), (- (t1.c0)))))) ORDER BY 0.777248317728022  NULLS LAST, CASE WHEN DATETIME('%(	[}aLa', t1.c1, t1.c1, '-391749996') THEN ((t1.c0) NOTNULL) WHEN t1.c0 COLLATE BINARY THEN CAST(t1.c1 AS TEXT) WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))) THEN SUBSTR(t1.c0, t1.c1) END  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c0, '', t1.c1)) NOT BETWEEN ((CAST(t1.c1 AS BLOB), CAST(t1.c0 AS INTEGER), t1.c0 COLLATE RTRIM, t1.c0 COLLATE NOCASE, ((t1.c1) NOT NULL))) AND ((t1.c0, ABS(DISTINCT t1.c0), ((((((t1.c0)OR(t1.c0)))OR(t1.c1)))AND(t1.c1)), CAST(t1.c0 AS BLOB), (- (t1.c0))))))AND(CAST((~ (t1.c1)) AS BLOB)))) ORDER BY (((t1.c0, t1.c1)) BETWEEN ((IFNULL(0.44073541779844627, t1.c1), ((t1.c1)+(t1.c0)))) AND ((((t1.c0)>=(t1.c1)), ((t1.c1)<(t1.c0))))) ASC, CAST(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END AS REAL)  NULLS FIRST, ((load_extension(t1.c0, t1.c0)) NOT BETWEEN (t1.c1) AND (0.9532317774099616 COLLATE BINARY));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (SQLITE_SOURCE_ID());
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (SQLITE_SOURCE_ID()) LIMIT 1 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) AS NUMERIC)) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE SUBSTR(t1.c1, t1.c0)  WHEN ((t1.c1) ISNULL) THEN ((t1.c0)&(t1.c0)) WHEN t1.c0 THEN ((x'')<=(t1.c1)) ELSE CAST(t1.c0 AS BLOB) END);
SELECT COUNT(*) FROM t1 WHERE (CASE SUBSTR(t1.c1, t1.c0)  WHEN ((t1.c1) ISNULL) THEN ((t1.c0)&(t1.c0)) WHEN t1.c0 THEN ((x'')<=(t1.c1)) ELSE CAST(t1.c0 AS BLOB) END) ORDER BY x'b3d3' LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (PRINTF((+ (t1.c0)))) ORDER BY x'b3d3' LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)-(t1.c0)) AS INTEGER)) ORDER BY ((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(x'03'))) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS REAL))) DESC  NULLS LAST, t1.c0, ((((t1.c0)<(t1.c0)))OR(((t1.c0)IS(t1.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c0)-(t1.c0)) AS INTEGER)) ORDER BY ((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(x'03'))) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS REAL))) DESC  NULLS LAST, t1.c0, ((((t1.c0)<(t1.c0)))OR(((t1.c0)IS(t1.c0))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)-(t1.c0)) AS INTEGER)) ORDER BY ((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(x'03'))) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS REAL))) DESC  NULLS LAST, t1.c0, ((((t1.c0)<(t1.c0)))OR(((t1.c0)IS(t1.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c0)-(t1.c0)) AS INTEGER)) ORDER BY ((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(x'03'))) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS REAL))) DESC  NULLS LAST, t1.c0, ((((t1.c0)<(t1.c0)))OR(((t1.c0)IS(t1.c0))))  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY t1.c0 COLLATE BINARY DESC, t1.c0 COLLATE RTRIM COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY (((t1.c0, t1.c1, t1.c1)) NOT BETWEEN (((x'3a17' IN ()), (t1.c1 IN (t1.c1, t1.c1)), (t1.c0 IN ()))) AND ((((t1.c0)<(t1.c0)), ((t1.c0) NOTNULL), NULLIF('652481642', t1.c0))));
SELECT * FROM t1 WHERE (t1.c0) ORDER BY t1.c0 COLLATE BINARY DESC, t1.c0 COLLATE RTRIM COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY (((t1.c0, t1.c1, t1.c1)) NOT BETWEEN (((x'3a17' IN ()), (t1.c1 IN (t1.c1, t1.c1)), (t1.c0 IN ()))) AND ((((t1.c0)<(t1.c0)), ((t1.c0) NOTNULL), NULLIF('652481642', t1.c0))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CAST(((((t1.c1)AND(t1.c0)))AND(t1.c1)) AS REAL)) ORDER BY ((((t1.c0)OR(t1.c1)))AND(t1.c1)) COLLATE RTRIM DESC  NULLS FIRST, (+ (((('', t1.c0))!=((t1.c0, '씯')))))  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE (((CAST(((((t1.c1)AND(t1.c0)))AND(t1.c1)) AS REAL))AND((((t1.c0, t1.c0)) BETWEEN (((t1.c1 IN (t1.c1)), ((t1.c0) NOTNULL))) AND (((NOT (t1.c0)), CAST(t1.c1 AS REAL))))))) ORDER BY ((((t1.c0)OR(t1.c1)))AND(t1.c1)) COLLATE RTRIM DESC  NULLS FIRST, (+ (((('', t1.c0))!=((t1.c0, '씯')))))  NULLS LAST LIMIT 0x3 INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE 0x3481c3cf  WHEN LIKELY(DISTINCT t1.c0) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) WHEN t1.c1 COLLATE RTRIM THEN CASE t1.c0  WHEN t1.c1 THEN 0.8185662987496911 ELSE t1.c1 END ELSE ((t1.c1)&(t1.c0)) END) ORDER BY ((((t1.c0)OR(t1.c1)))AND(t1.c1)) COLLATE RTRIM DESC  NULLS FIRST, (+ (((('', t1.c0))<>((t1.c0, '씯')))))  NULLS LAST LIMIT 0X3;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)+(t1.c0)))OR((t1.c1 IN (t1.c0)))))OR(((t1.c1) NOT NULL))))AND((+ (t1.c1)))))OR(-1.185874476E9))) ORDER BY TRIM(DISTINCT (((x''))!=((t1.c0)))) DESC, (((t1.c0, t1.c1, t1.c1)) BETWEEN (((t1.c0 IN ()), CAST(t1.c0 AS BLOB), LIKE(t1.c1, t1.c0))) AND (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c0, x'', t1.c1))), LOWER(DISTINCT t1.c1)))), CAST(CAST(t1.c1 AS REAL) AS REAL) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)+(t1.c0)))OR((t1.c1 IN (t1.c0)))))OR(((t1.c1) NOT NULL))))AND((+ (t1.c1)))))OR(-1.185874476E9))) ORDER BY 7.5172127E8  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)+(t1.c0)))OR((t1.c1 IN (t1.c0)))))OR(((t1.c1) NOT NULL))))AND((+ (t1.c1)))))OR(-1.185874476E9))) ORDER BY TRIM(DISTINCT (((x''))!=((t1.c0)))) DESC, (((t1.c0, t1.c1, t1.c1)) BETWEEN (((t1.c0 IN ()), CAST(t1.c0 AS BLOB), LIKE(t1.c1, t1.c0))) AND (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c0, x'', t1.c1))), LOWER(DISTINCT t1.c1)))), CAST(CAST(t1.c1 AS REAL) AS REAL) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)+(t1.c0)))OR((t1.c1 IN (t1.c0)))))OR(((t1.c1) NOT NULL))))AND((+ (t1.c1)))))OR(-1.185874476E9))) ORDER BY 7.5172127E8  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((0X38c74aa4) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((((((((t1.c1)OR('-617936325')))AND(t1.c0)))AND(t1.c0)))OR(t1.c1))))) ORDER BY '0.6997054009571428'  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE (((((952584868) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((((((((t1.c1)OR('-617936325')))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))))AND(((((t1.c1)OR(t1.c1)))AND(t1.c0)) COLLATE NOCASE))) ORDER BY '0.6997054009571428'  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((NOT (t1.c0))) NOT BETWEEN (CAST(t1.c0 AS REAL)) AND (((t1.c0) NOT BETWEEN ('1903682361') AND (t1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((NOT (t1.c0))) NOT BETWEEN (CAST(t1.c0 AS REAL)) AND (((t1.c0) NOT BETWEEN ('1903682361') AND (t1.c1)))))AND(((t1.c0) IS FALSE)))) ORDER BY CAST(x'' AS NUMERIC) COLLATE RTRIM ASC, (((((~ (t1.c1)))OR(((((((t1.c1)AND(t1.c1)))AND(t1.c1)))AND(t1.c1)))))OR((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1)))))  NULLS LAST, t1.c1, CAST(CAST(t1.c0 AS INTEGER) AS TEXT)  NULLS FIRST LIMIT 2;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((- ((+ (t1.c0)))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((- ((+ (t1.c0))))) ORDER BY CASE WHEN ((((t1.c1)AND(x'')))OR(t1.c0)) THEN ((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)) END DESC, (t1.c0 IN ()) LIMIT 0x0 INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((t1.c0, t1.c1))>((t1.c1, x''))), ((t1.c0)AND(t1.c0)), t1.c1, (((t1.c0, t1.c1, t1.c0))<((t1.c0, t1.c1, t1.c0)))))<=(((NOT (x'')), (('-0.0') BETWEEN (t1.c0) AND (t1.c0)), ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)), t1.c1)))) ORDER BY CASE WHEN ((((t1.c1)AND(x'')))OR(t1.c0)) THEN ((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)) END DESC, (t1.c0 IN ()) LIMIT 0x0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (UNLIKELY(CAST(t1.c1 AS INTEGER))) ORDER BY (- ((~ (t1.c0)))), NULL  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (UNLIKELY(CAST(t1.c1 AS INTEGER))) ORDER BY (NOT (0.08606185302536806)) ASC LIMIT 0x0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((('zOY䚗i/QA') IS TRUE)) ISNULL)) ORDER BY (((((((- (t1.c0)))OR(SQLITE_VERSION())))OR((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))))OR(LIKELIHOOD(t1.c1, t1.c1))) ASC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((((('zOY䚗i/QA') IS TRUE)) ISNULL))AND(HEX(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)))) ORDER BY t1.c0 ASC LIMIT 2 INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1) NOT NULL))>((((x'da')) BETWEEN ((t1.c0)) AND ((t1.c0)))))) ORDER BY t1.c0 ASC LIMIT 2;
SELECT * FROM t1 WHERE (UNICODE(t1.c0 COLLATE RTRIM)) ORDER BY (+ ((t1.c1 IN ()))), x''  NULLS FIRST, (((t1.c0 IN ()))<<(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))));
SELECT * FROM t1 WHERE (UNICODE(t1.c0 COLLATE RTRIM)) ORDER BY (+ ((t1.c1 IN ()))), x''  NULLS FIRST, (((t1.c0 IN ()))<<(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))));
SELECT * FROM t1 WHERE (UNICODE(t1.c0 COLLATE RTRIM)) ORDER BY (+ ((t1.c1 IN ()))), x''  NULLS FIRST, (((t1.c0 IN ()))<<(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))));
SELECT * FROM t1 WHERE ((((- (t1.c0)))>>(((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c1))))) ORDER BY CASE t1.c1  WHEN t1.c1 THEN t1.c0 END COLLATE BINARY ASC, (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((- (t1.c0)))>>(((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c1))))) ORDER BY CASE t1.c1  WHEN t1.c1 THEN t1.c0 END COLLATE BINARY ASC, (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) IN ())  NULLS FIRST LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE ((((((((((((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))))OR(t1.c1 COLLATE RTRIM)))AND(HEX(t1.c1))))AND(json_remove(t1.c0, t1.c0, t1.c1, '65963928'))))OR(t1.c1 COLLATE RTRIM)))AND(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))) ORDER BY CASE t1.c1  WHEN t1.c1 THEN t1.c0 END COLLATE BINARY ASC, (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) IN ())  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE ((((- (t1.c0)))>>(((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c1))))) ORDER BY CASE t1.c1  WHEN t1.c1 THEN t1.c0 END COLLATE BINARY ASC, (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) IN ())  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE ((((t1.c1) ISNULL) IN (((t1.c0) ISNULL))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((t1.c1) ISNULL) IN (((t1.c0) ISNULL)))) ORDER BY x'df' DESC LIMIT 0 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((- ((NOT ('Ou~^_DNS\'))))) ORDER BY x'df' DESC LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ('Zz') ORDER BY 'start of month+N', json_type((t1.c0 IN ())) DESC, '2136365138';
SELECT DISTINCT * FROM t1 WHERE ('Zz') ORDER BY CAST((NOT (t1.c0)) AS NUMERIC)  NULLS LAST, ((((t1.c1)=(t1.c1)))LIKE((~ (t1.c0)))) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ('Zz') ORDER BY 'start of month+N', json_type((t1.c0 IN ())) DESC, '2136365138';
SELECT DISTINCT * FROM t1 WHERE ('Zz') ORDER BY CAST((NOT (t1.c0)) AS NUMERIC)  NULLS LAST, ((((t1.c1)=(t1.c1)))LIKE((~ (t1.c0)))) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) AS NUMERIC));
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) AS NUMERIC)) LIMIT 0;
SELECT * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) AS NUMERIC));
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) AS NUMERIC)) LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((CASE t1.c1  WHEN t1.c0 THEN '-1148669192' WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))>((t1.c0)))) ORDER BY (t1.c0 IN ()) DESC;
SELECT * FROM t1 WHERE ((((((CASE t1.c1  WHEN t1.c0 THEN '-1148669192' WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))>((t1.c0))))AND((~ (t1.c1))))) ORDER BY ((t1.c1) NOT NULL) DESC;
SELECT ALL * FROM t1 WHERE ((((CASE t1.c1  WHEN t1.c0 THEN '-1148669192' WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))>((t1.c0)))) ORDER BY (t1.c0 IN ()) DESC;
SELECT * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY LIKELIHOOD(((t1.c1) NOTNULL), ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY LIKELIHOOD(((t1.c1) NOTNULL), ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CASE WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c0)) THEN t1.c1 WHEN t1.c0 COLLATE NOCASE THEN t1.c1 WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 'ꨓ.剝' ELSE NULL END THEN 0.5096990508467034 WHEN ((t1.c0)>>(t1.c0)) THEN ((t1.c0) NOT BETWEEN (0.9471678773783613) AND (x'')) WHEN -5.21905785E8 THEN (t1.c0 IN (t1.c1)) WHEN '-36498096' THEN t1.c0 COLLATE RTRIM END) ORDER BY (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1 COLLATE RTRIM, ((((t1.c0)AND(t1.c1)))AND(t1.c1)))) AND (((t1.c0 IN ()), ((t1.c0) NOTNULL)))) DESC, ((CASE WHEN t1.c0 THEN t1.c1 END) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND ((+ (t1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((CASE WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c0)) THEN t1.c1 WHEN t1.c0 COLLATE NOCASE THEN t1.c1 WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 'ꨓ.剝' ELSE NULL END THEN 0.5096990508467034 WHEN ((t1.c0)>>(t1.c0)) THEN ((t1.c0) NOT BETWEEN (0.9471678773783613) AND (x'')) WHEN -5.21905785E8 THEN (t1.c0 IN (t1.c1)) WHEN '-36498096' THEN t1.c0 COLLATE RTRIM END)AND(((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))AND((((t1.c1, t1.c0, t1.c1))<>((t1.c1, t1.c0, t1.c0))))))OR(CAST(t1.c0 AS NUMERIC)))))) ORDER BY x'2fa7'  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (x'') ORDER BY x'2fa7'  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c0)) THEN t1.c1 WHEN t1.c0 COLLATE NOCASE THEN t1.c1 WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 'ꨓ.剝' ELSE NULL END THEN 0.5096990508467034 WHEN ((t1.c0)>>(t1.c0)) THEN ((t1.c0) NOT BETWEEN (0.9471678773783613) AND (x'')) WHEN -5.21905785E8 THEN (t1.c0 IN (t1.c1)) WHEN '-36498096' THEN t1.c0 COLLATE RTRIM END) ORDER BY (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1 COLLATE RTRIM, ((((t1.c0)AND(t1.c1)))AND(t1.c1)))) AND (((t1.c0 IN ()), ((t1.c0) NOTNULL)))) DESC, ((CASE WHEN t1.c0 THEN t1.c1 END) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND ((+ (t1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((CASE WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c0)) THEN t1.c1 WHEN t1.c0 COLLATE NOCASE THEN t1.c1 WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 'ꨓ.剝' ELSE NULL END THEN 0.5096990508467034 WHEN ((t1.c0)>>(t1.c0)) THEN ((t1.c0) NOT BETWEEN (0.9471678773783613) AND (x'')) WHEN -5.21905785E8 THEN (t1.c0 IN (t1.c1)) WHEN '-36498096' THEN t1.c0 COLLATE RTRIM END)AND(((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))AND((((t1.c1, t1.c0, t1.c1))<>((t1.c1, t1.c0, t1.c0))))))OR(CAST(t1.c0 AS NUMERIC)))))) ORDER BY x'2fa7'  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (x'') ORDER BY x'2fa7'  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0) IS FALSE) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0) IS FALSE) IN ())) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END) ISNULL);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c0) LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))|((t1.c0 IN (t1.c1))))) LIMIT 0;
SELECT ALL COUNT(*) FROM t1 WHERE (LTRIM(((NULL)>(0.16733104053794012))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((LTRIM(((NULL)>(1.16733104053794))))AND(CAST((((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c1))) AS NUMERIC)))) ORDER BY CAST(json_array(t1.c1, t1.c0, t1.c0, t1.c0, t1.c1, t1.c0) AS BLOB), ((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c1))) NOTNULL) DESC, PRINTF(((x'') BETWEEN (t1.c1) AND (t1.c0)), UNLIKELY(t1.c0), CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN '-1776437409' THEN t1.c0 END, (t1.c1 IN (t1.c1)), ((t1.c1) NOTNULL)) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c1)|('-774852651'))) NOTNULL)) ORDER BY ((0xffffffffb0be974a) IS TRUE) ASC, json_valid(((t1.c1) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)|('-774852651'))) NOTNULL)) ORDER BY ((0Xffffffffb0be974a) IS TRUE) ASC, json_valid(((t1.c1) ISNULL));
SELECT * FROM t1 WHERE (((((t1.c1)|('-774852651'))) NOTNULL)) ORDER BY ((0xffffffffb0be974a) IS TRUE) ASC, json_valid(((t1.c1) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)|('-774852651'))) NOTNULL)) ORDER BY ((0Xffffffffb0be974a) IS TRUE) ASC, json_valid(((t1.c1) ISNULL));
SELECT ALL * FROM t1 WHERE (((((((0.015808998134910435)OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))OR(((t1.c1)OR(t1.c0)))))OR((((t1.c0, t1.c1, NULL, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, x'ef0322', t1.c0)) AND ((t1.c0, t1.c1, t1.c0, t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE (((((((0.015808998134910435)OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))OR(((t1.c1)OR(t1.c0)))))OR((((t1.c0, t1.c1, NULL, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, x'ef0322', t1.c0)) AND ((t1.c0, t1.c1, t1.c0, t1.c1)))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN (- (t1.c1)) END) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (((((((0.015808998134910435)OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))OR(((t1.c1)OR(t1.c0)))))OR((((t1.c0, t1.c1, NULL, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, x'ef0322', t1.c0)) AND ((t1.c0, t1.c1, t1.c0, t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE (((((((0.015808998134910435)OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))OR(((t1.c1)OR(t1.c0)))))OR((((t1.c0, t1.c1, NULL, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, x'ef0322', t1.c0)) AND ((t1.c0, t1.c1, t1.c0, t1.c1)))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN (- (t1.c1)) END) LIMIT 0x1;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c1)OR(t1.c1)))>=(x'1d8827'));
SELECT * FROM t1 WHERE (((t1.c0)AND(((t1.c0 COLLATE BINARY) NOT BETWEEN ((t1.c0 IN ())) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))))) ORDER BY ((((t1.c1)OR(t1.c1)))>=(x'1d8827')) LIMIT 0X0;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c1)OR(t1.c1)))>=(x'1d8827'));
SELECT * FROM t1 WHERE (((t1.c0)AND(((t1.c0 COLLATE BINARY) NOT BETWEEN ((t1.c0 IN ())) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))))) ORDER BY ((((t1.c1)OR(t1.c1)))>=(x'1d8827')) LIMIT 0X0;
SELECT * FROM t1 WHERE (((((((((((NULL)>(t1.c1)))AND(((t1.c1) IS TRUE))))AND((((t1.c0, t1.c1, t1.c0))<=((t1.c0, t1.c1, '1956082742'))))))OR((NOT (t1.c1)))))AND(CAST(t1.c0 AS REAL))));
SELECT * FROM t1 WHERE (((((((((((((NULL)>(t1.c1)))AND(((t1.c1) IS TRUE))))AND((((t1.c0, t1.c1, t1.c0))<=((t1.c0, t1.c1, '1956082742'))))))OR((NOT (t1.c1)))))AND(CAST(t1.c0 AS REAL))))AND(CASE ((t1.c0)IS NOT(t1.c1))  WHEN ((t1.c0)!=(t1.c1)) THEN ((t1.c0) IS FALSE) WHEN (t1.c1 IN (t1.c1)) THEN ((t1.c1) ISNULL) ELSE ((t1.c0)<(0.7211922888749139)) END))) INTERSECT SELECT ALL * FROM t1 WHERE (((((((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN 0.989867014494948 WHEN x'bbe68a67d7' THEN t1.c1 END)AND(((t1.c0)OR(0.39761202422746933)))))AND(((t1.c1) IS FALSE))))AND(((t1.c0) ISNULL))))OR((~ (t1.c0)))));
SELECT * FROM t1 WHERE (((((((((((NULL)>(t1.c1)))AND(((t1.c1) IS TRUE))))AND((((t1.c0, t1.c1, t1.c0))<=((t1.c0, t1.c1, '1956082742'))))))OR((NOT (t1.c1)))))AND(CAST(t1.c0 AS REAL))));
SELECT * FROM t1 WHERE (((((((((((((NULL)>(t1.c1)))AND(((t1.c1) IS TRUE))))AND((((t1.c0, t1.c1, t1.c0))<=((t1.c0, t1.c1, '1956082742'))))))OR((NOT (t1.c1)))))AND(CAST(t1.c0 AS REAL))))AND(CASE ((t1.c0)IS NOT(t1.c1))  WHEN ((t1.c0)!=(t1.c1)) THEN ((t1.c0) IS FALSE) WHEN (t1.c1 IN (t1.c1)) THEN ((t1.c1) ISNULL) ELSE ((t1.c0)<(0.7211922888749139)) END))) INTERSECT SELECT ALL * FROM t1 WHERE (((((((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN 0.989867014494948 WHEN x'bbe68a67d7' THEN t1.c1 END)AND(((t1.c0)OR(0.39761202422746933)))))AND(((t1.c1) IS FALSE))))AND(((t1.c0) ISNULL))))OR((~ (t1.c0)))));
SELECT ALL * FROM t1 WHERE (((((t1.c0)<(t1.c1))) NOT BETWEEN (CAST(t1.c1 AS BLOB)) AND (TRIM(t1.c1, t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)<(t1.c1))) NOT BETWEEN (CAST(t1.c1 AS BLOB)) AND (TRIM(t1.c1, t1.c0))))AND((((t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND ((TRIM(DISTINCT t1.c0, t1.c0))))))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((t1.c0)<(t1.c1))) NOT BETWEEN (CAST(t1.c1 AS BLOB)) AND (TRIM(t1.c1, t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)<(t1.c1))) NOT BETWEEN (CAST(t1.c1 AS BLOB)) AND (TRIM(t1.c1, t1.c0))))AND((((t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND ((TRIM(DISTINCT t1.c0, t1.c0))))))) LIMIT 0;
SELECT * FROM t1 WHERE (((((((((((t1.c1)AND(t1.c1)))AND(0xfffffffff86b157a)))OR(t1.c0)))AND(((t1.c1)<=(0xffffffffcb284ace)))))AND(t1.c1 COLLATE BINARY)));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c1)AND(t1.c1)))AND(0Xfffffffff86b157a)))OR(t1.c0)))AND(((t1.c1)<=(-886551860)))))AND(t1.c1 COLLATE BINARY))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL), (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END IN (((t1.c1)<(x'')))), TYPEOF(CAST(t1.c0 AS BLOB)) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (0xc7ab71f) AND (t1.c1))) NOT BETWEEN (t1.c0 COLLATE BINARY) AND ((NOT (t1.c1))))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL), (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END IN (((t1.c1)<(x'')))), TYPEOF(CAST(t1.c0 AS BLOB)) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((((((t1.c1)AND(t1.c1)))AND(0xfffffffff86b157a)))OR(t1.c0)))AND(((t1.c1)<=(0xffffffffcb284ace)))))AND(t1.c1 COLLATE BINARY)));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c1)AND(t1.c1)))AND(0Xfffffffff86b157a)))OR(t1.c0)))AND(((t1.c1)<=(-886551860)))))AND(t1.c1 COLLATE BINARY))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL), (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END IN (((t1.c1)<(x'')))), TYPEOF(CAST(t1.c0 AS BLOB)) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (0xc7ab71f) AND (t1.c1))) NOT BETWEEN (t1.c0 COLLATE BINARY) AND ((NOT (t1.c1))))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL), (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END IN (((t1.c1)<(x'')))), TYPEOF(CAST(t1.c0 AS BLOB)) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c1, t1.c0)) BETWEEN (((NOT (t1.c1)), (t1.c0 IN (t1.c1)), CAST(t1.c1 AS REAL), CAST(t1.c0 AS NUMERIC))) AND ((CASE WHEN 0.45147307103489165 THEN t1.c1 ELSE t1.c0 END, t1.c1 COLLATE RTRIM, CAST(t1.c1 AS REAL), t1.c1 COLLATE RTRIM))));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c1, t1.c0)) BETWEEN (((NOT (t1.c1)), (t1.c0 IN (t1.c1)), CAST(t1.c1 AS REAL), CAST(t1.c0 AS NUMERIC))) AND ((CASE WHEN 0.45147307103489165 THEN t1.c1 ELSE t1.c0 END, t1.c1 COLLATE RTRIM, CAST(t1.c1 AS REAL), t1.c1 COLLATE RTRIM)))) ORDER BY CASE t1.c1  WHEN NULL THEN COALESCE(DISTINCT t1.c0, t1.c1, t1.c1) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) WHEN t1.c0 COLLATE NOCASE THEN NULL ELSE ((t1.c1) ISNULL) END, (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))!=((x'75'))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c1, t1.c0)) BETWEEN (((NOT (t1.c1)), (t1.c0 IN (t1.c1)), CAST(t1.c1 AS REAL), CAST(t1.c0 AS NUMERIC))) AND ((CASE WHEN 0.45147307103489165 THEN t1.c1 ELSE t1.c0 END, t1.c1 COLLATE RTRIM, CAST(t1.c1 AS REAL), t1.c1 COLLATE RTRIM))));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c1, t1.c0)) BETWEEN (((NOT (t1.c1)), (t1.c0 IN (t1.c1)), CAST(t1.c1 AS REAL), CAST(t1.c0 AS NUMERIC))) AND ((CASE WHEN 0.45147307103489165 THEN t1.c1 ELSE t1.c0 END, t1.c1 COLLATE RTRIM, CAST(t1.c1 AS REAL), t1.c1 COLLATE RTRIM)))) ORDER BY CASE t1.c1  WHEN NULL THEN COALESCE(DISTINCT t1.c0, t1.c1, t1.c1) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) WHEN t1.c0 COLLATE NOCASE THEN NULL ELSE ((t1.c1) ISNULL) END, (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))!=((x'75'))) ASC  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((t1.c1 IN (t1.c1)))IS(((t1.c0) NOTNULL))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((t1.c1 IN (t1.c1)))IS(((t1.c0) NOTNULL))))AND(((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))+((((t1.c0))==((t1.c1))))))));
SELECT ALL * FROM t1 WHERE ('[H|%M#W#9');
SELECT ALL * FROM t1 WHERE ((('[H|%M#W#9')AND(CASE WHEN t1.c1 THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN t1.c0 THEN (~ (t1.c1)) WHEN ((t1.c1)||(t1.c1)) THEN json_remove(t1.c0, t1.c1) WHEN t1.c1 COLLATE BINARY THEN '셒' ELSE t1.c0 END))) ORDER BY CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 END THEN '2129022491' END ASC  NULLS FIRST, ((-521905785)&(0.9898173112933272)) COLLATE RTRIM DESC LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)) COLLATE NOCASE) ORDER BY CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 END THEN '2129022491' END ASC  NULLS FIRST, ((-521905785)&(0.9898173112933272)) COLLATE RTRIM DESC LIMIT 0;
SELECT ALL * FROM t1 WHERE ('[H|%M#W#9');
SELECT ALL * FROM t1 WHERE ((('[H|%M#W#9')AND(CASE WHEN t1.c1 THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN t1.c0 THEN (~ (t1.c1)) WHEN ((t1.c1)||(t1.c1)) THEN json_remove(t1.c0, t1.c1) WHEN t1.c1 COLLATE BINARY THEN '셒' ELSE t1.c0 END))) ORDER BY CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 END THEN '2129022491' END ASC  NULLS FIRST, ((-521905785)&(0.9898173112933272)) COLLATE RTRIM DESC LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)) COLLATE NOCASE) ORDER BY CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 END THEN '2129022491' END ASC  NULLS FIRST, ((-521905785)&(0.9898173112933272)) COLLATE RTRIM DESC LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE ((((NOT (t1.c1))) IS FALSE));
SELECT COUNT(*) FROM t1 WHERE ((((NOT (t1.c1))) IS FALSE)) ORDER BY ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))!=((((t1.c1, t1.c1))<>((t1.c1, t1.c0))))) DESC INTERSECT SELECT COUNT(*) FROM t1 WHERE (TYPEOF(DISTINCT rtreenode(t1.c0, t1.c0))) ORDER BY ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))<>((((t1.c1, t1.c1))!=((t1.c1, t1.c0))))) DESC;
SELECT MIN(t1.c1) FROM t1 WHERE (CAST(COALESCE(t1.c0, t1.c1, t1.c0, '-16410412') AS REAL)) ORDER BY NULL  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CAST(COALESCE(t1.c0, t1.c1, t1.c0, '-16410412') AS REAL)) ORDER BY NULL  NULLS LAST LIMIT 0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (t1.c0);
SELECT MAX(t1.c0) FROM t1 WHERE (((t1.c0)AND((((NULL, t1.c1, t1.c0)) NOT BETWEEN ((((t1.c1)<>(NULL)), '-?쌻', (t1.c1 IN ('1728185035')))) AND ((((t1.c1) NOTNULL), CAST(t1.c1 AS REAL), ((t1.c1)>>(t1.c0)))))))) ORDER BY t1.c0 DESC, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM DESC  NULLS LAST, ((CAST(t1.c0 AS REAL))IS(((t1.c0) NOT BETWEEN (0x2d2e7b7) AND (t1.c0)))) DESC LIMIT 1;
SELECT ALL * FROM t1 WHERE (NULL);
SELECT * FROM t1 WHERE (NULL);
SELECT ALL * FROM t1 WHERE (NULL);
SELECT * FROM t1 WHERE (NULL);
SELECT * FROM t1 WHERE (CAST(((t1.c0)IS NOT(t1.c1)) AS NUMERIC)) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c1 END AS INTEGER)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((CAST(((t1.c0)IS NOT(t1.c1)) AS NUMERIC))AND((- (x'9f')) COLLATE NOCASE))) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c1 END AS INTEGER)  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((NOT (TIME(t1.c0, t1.c1, t1.c0)))) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c1 END AS INTEGER)  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 WHERE (CAST(((t1.c0)IS NOT(t1.c1)) AS NUMERIC)) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c1 END AS INTEGER)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((CAST(((t1.c0)IS NOT(t1.c1)) AS NUMERIC))AND((- (x'9f')) COLLATE NOCASE))) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c1 END AS INTEGER)  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((NOT (TIME(t1.c0, t1.c1, t1.c0)))) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c1 END AS INTEGER)  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((0.2106208131321995 IN ((NULL IN (t1.c0, t1.c1, '0.967750802857622'))))) ORDER BY LIKELY(((t1.c1)IS NOT(t1.c1))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((0.2106208131321995 IN ((NULL IN (t1.c0, t1.c1, '0.967750802857622')))))AND(((((x'')IS(t1.c1)))&(((((t1.c1)OR(t1.c0)))AND(t1.c1))))))) ORDER BY LIKELY(((t1.c1)IS NOT(t1.c1))) DESC  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t1 WHERE ((0.2106208131321995 IN ((NULL IN (t1.c0, t1.c1, '0.967750802857622'))))) ORDER BY LIKELY(((t1.c1)IS NOT(t1.c1))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((0.2106208131321995 IN ((NULL IN (t1.c0, t1.c1, '0.967750802857622')))))AND(((((x'')IS(t1.c1)))&(((((t1.c1)OR(t1.c0)))AND(t1.c1))))))) ORDER BY LIKELY(((t1.c1)IS NOT(t1.c1))) DESC  NULLS LAST LIMIT 0x1;
SELECT MAX(t1.c0) FROM t1 WHERE (CAST((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))) AS BLOB)) ORDER BY ((IFNULL(DISTINCT t1.c1, t1.c0)) NOT NULL)  NULLS LAST, (((t1.c1 COLLATE NOCASE, ((t1.c1)OR(t1.c1)), ((t1.c1)>>(t1.c0))))<((((t1.c1)>(t1.c1)), ((t1.c0) ISNULL), ((t1.c0)>(t1.c1))))) ASC, (((t1.c1)OR(t1.c1)) IN (t1.c0));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (CAST((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))) AS BLOB)) ORDER BY ((IFNULL(DISTINCT t1.c1, t1.c0)) NOT NULL)  NULLS LAST, (((t1.c1 COLLATE NOCASE, ((t1.c1)OR(t1.c1)), ((t1.c1)>>(t1.c0))))<((((t1.c1)>(t1.c1)), ((t1.c0) ISNULL), ((t1.c0)>(t1.c1))))) ASC, (((t1.c1)OR(t1.c1)) IN (t1.c0)) INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((t1.c1))=((t1.c1)))) BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (NULL))) AND (t1.c1))) ORDER BY ((IFNULL(DISTINCT t1.c1, t1.c0)) NOT NULL)  NULLS LAST, (((t1.c1 COLLATE NOCASE, ((t1.c1)OR(t1.c1)), ((t1.c1)>>(t1.c0))))<((((t1.c1)>(t1.c1)), ((t1.c0) ISNULL), ((t1.c0)>(t1.c1))))) ASC, (((t1.c1)OR(t1.c1)) IN (t1.c0));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c0)) NOT BETWEEN ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1)*(t1.c1)))) AND (('0.9366707959460312' COLLATE BINARY, t1.c1 COLLATE BINARY)))) ORDER BY ROUND(t1.c1 COLLATE BINARY, LIKELIHOOD(t1.c0, t1.c0)) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c0, t1.c0)) NOT BETWEEN ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1)*(t1.c1)))) AND (('0.9366707959460312' COLLATE BINARY, t1.c1 COLLATE BINARY))))AND((((t1.c1)+(0.9977788546479541)) IN ())))) ORDER BY ROUND(t1.c1 COLLATE BINARY, LIKELIHOOD(t1.c0, t1.c0)) DESC  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST(((t1.c1)=(t1.c0)) AS INTEGER)) ORDER BY ROUND(t1.c1 COLLATE BINARY, LIKELIHOOD(t1.c0, t1.c0)) DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t1 WHERE ((CASE WHEN ']O' THEN '' END IN (((t1.c0)<<(t1.c0)))));
SELECT * FROM t1 WHERE ((CASE WHEN ']O' THEN '' END IN (((t1.c0)<<(t1.c0)))));
SELECT ALL * FROM t1 WHERE ((CASE WHEN ']O' THEN '' END IN (((t1.c0)<<(t1.c0)))));
SELECT * FROM t1 WHERE ((CASE WHEN ']O' THEN '' END IN (((t1.c0)<<(t1.c0)))));
SELECT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))<<((+ (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))<<((+ (t1.c0))))) ORDER BY CAST((((t1.c0, t1.c1))=((0.9687446220918964, t1.c1))) AS TEXT) ASC  NULLS LAST, (((t1.c0) BETWEEN (t1.c0) AND (0.41014510452953945)) IN (x'63dff462', ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c1))));
SELECT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))<<((+ (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))<<((+ (t1.c0))))) ORDER BY CAST((((t1.c0, t1.c1))=((0.9687446220918964, t1.c1))) AS TEXT) ASC  NULLS LAST, (((t1.c0) BETWEEN (t1.c0) AND (0.41014510452953945)) IN (x'63dff462', ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c1))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c1)) NOT BETWEEN ((-1700888900)) AND ((t1.c0))) IN (highlight(t1.c0, t1.c1, t1.c0, t1.c0)))) ORDER BY CAST(((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))AND(x'2e')))OR(t1.c0)) AS TEXT) ASC, (((((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))OR(((0.6369300366431937) NOTNULL))))OR(((t1.c1) IS TRUE))))OR(1104976611))  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((t1.c1)) NOT BETWEEN ((-1700888900)) AND ((t1.c0))) IN (highlight(t1.c0, t1.c1, t1.c0, t1.c0))))AND((NOT ((((t1.c0, '1727310088', t1.c0)) BETWEEN ((t1.c0, t1.c0, '-1693817898')) AND ((t1.c0, t1.c1, t1.c1)))))))) ORDER BY CAST(((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))AND(x'2e')))OR(t1.c0)) AS TEXT) ASC, (((((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))OR(((0.6369300366431937) NOTNULL))))OR(((t1.c1) IS TRUE))))OR(0x41dc9ae3))  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE (CASE ((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c0))  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (x'8e')) THEN (~ (t1.c0)) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) THEN DATE(t1.c1, t1.c0, t1.c1, t1.c1, t1.c0, t1.c1) ELSE (t1.c0 IN (t1.c0)) END);
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((CASE ((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c0))  WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (x'8e')) THEN (~ (t1.c0)) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) THEN DATE(t1.c1, t1.c0, t1.c1, t1.c1, t1.c0, t1.c1) ELSE (t1.c0 IN (t1.c0)) END)AND(((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))&(((t1.c0) NOTNULL)))))) LIMIT 2 INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (0xffffffff9169bd4c)))|(((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR('')))AND(t1.c0))))) LIMIT 0X2;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE RTRIM) IS FALSE));
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c0 COLLATE RTRIM) IS FALSE))AND((((t1.c1 IN (t1.c0)))/((- (t1.c1))))))) LIMIT 0 INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (((x'')>=(((t1.c0)&(t1.c0))))) LIMIT 0x0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ('2051483873') ORDER BY (((t1.c0, t1.c0)) NOT BETWEEN ((((t1.c0) IS TRUE), (t1.c0 IN ()))) AND ((t1.c0, ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))) ASC  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ('2051483873') ORDER BY CAST((t1.c1 IN (t1.c0, t1.c1, t1.c0)) AS INTEGER) INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY CAST((t1.c1 IN (t1.c0, t1.c1, t1.c0)) AS INTEGER);
SELECT MAX(t1.c0) FROM t1 WHERE (((NOT (t1.c0)) IN (t1.c0))) ORDER BY ((t1.c1)>>(((t1.c0) ISNULL))) ASC, (NOT (t1.c0)) COLLATE NOCASE  NULLS FIRST, (NOT (t1.c0 COLLATE RTRIM)) DESC;
SELECT MAX(t1.c0) FROM t1 WHERE (((NOT (t1.c0)) IN (t1.c0))) ORDER BY 0.7326516555029623, CAST(t1.c1 AS TEXT);
SELECT ALL * FROM t1 WHERE (INSTR(t1.c1, x'1b715243') COLLATE BINARY) ORDER BY (- ((~ (t1.c1)))) ASC;
SELECT ALL * FROM t1 WHERE (INSTR(t1.c1, x'1b715243') COLLATE BINARY) ORDER BY (- ((~ (t1.c1)))) ASC;
SELECT ALL * FROM t1 WHERE (INSTR(t1.c1, x'1b715243') COLLATE BINARY) ORDER BY (- ((~ (t1.c1)))) ASC;
SELECT ALL * FROM t1 WHERE (INSTR(t1.c1, x'1b715243') COLLATE BINARY) ORDER BY (- ((~ (t1.c1)))) ASC;
SELECT ALL * FROM t1 WHERE ((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c1)) IN ()));
SELECT ALL * FROM t1 WHERE ((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c1)) IN ())) ORDER BY CASE t1.c0  WHEN ((((353841469)OR(t1.c1)))OR(t1.c1)) THEN t1.c0 COLLATE NOCASE WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN t1.c1 COLLATE BINARY WHEN CAST(t1.c1 AS INTEGER) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) ELSE CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END END  NULLS FIRST LIMIT 0X3 INTERSECT SELECT ALL * FROM t1 WHERE (CAST(((t1.c1)>=(t1.c1)) AS NUMERIC)) ORDER BY CASE t1.c0  WHEN ((((353841469)OR(t1.c1)))OR(t1.c1)) THEN t1.c0 COLLATE NOCASE WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN t1.c1 COLLATE BINARY WHEN CAST(t1.c1 AS INTEGER) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) ELSE CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END END  NULLS FIRST LIMIT 0X3;
SELECT ALL * FROM t1 WHERE ((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c1)) IN ()));
SELECT ALL * FROM t1 WHERE ((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c1)) IN ())) ORDER BY CASE t1.c0  WHEN ((((353841469)OR(t1.c1)))OR(t1.c1)) THEN t1.c0 COLLATE NOCASE WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN t1.c1 COLLATE BINARY WHEN CAST(t1.c1 AS INTEGER) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) ELSE CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END END  NULLS FIRST LIMIT 0X3 INTERSECT SELECT ALL * FROM t1 WHERE (CAST(((t1.c1)>=(t1.c1)) AS NUMERIC)) ORDER BY CASE t1.c0  WHEN ((((353841469)OR(t1.c1)))OR(t1.c1)) THEN t1.c0 COLLATE NOCASE WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN t1.c1 COLLATE BINARY WHEN CAST(t1.c1 AS INTEGER) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) ELSE CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END END  NULLS FIRST LIMIT 0X3;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST(0.25329335675993025 COLLATE BINARY AS INTEGER)) ORDER BY ((((t1.c0)+(t1.c1)))|((t1.c0 IN ()))) ASC  NULLS LAST, ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)<(t1.c1 COLLATE BINARY))  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((CAST(0.25329335675993025 COLLATE BINARY AS INTEGER))AND(t1.c0))) ORDER BY ((((t1.c0)+(t1.c1)))|((t1.c0 IN ()))) ASC  NULLS LAST, ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)<(t1.c1 COLLATE BINARY))  NULLS LAST LIMIT 0x2 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c0)+(t1.c1)))|((t1.c0 IN ()))) ASC  NULLS LAST, ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)<(t1.c1 COLLATE BINARY))  NULLS LAST LIMIT 0x2;
SELECT * FROM t1 WHERE (((t1.c0)>(t1.c0)) COLLATE BINARY) ORDER BY CASE TYPEOF(DISTINCT t1.c1)  WHEN (+ (t1.c0)) THEN ((((((t1.c0)OR(t1.c0)))OR(NULL)))AND(t1.c1)) ELSE COALESCE(t1.c0, t1.c1, t1.c1, t1.c1, t1.c1) END DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)>(t1.c0)) COLLATE BINARY) ORDER BY (((((((((((~ (t1.c0)))AND(((t1.c1) NOT NULL))))OR(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))OR(t1.c0)))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) ASC, (('-625367033') IS FALSE)  NULLS FIRST, (((t1.c1)) BETWEEN ((x'f93089')) AND ((t1.c0))) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)OR(NULL)))OR(t1.c1)))AND((t1.c1 IN (t1.c0)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY (((((((((((~ (t1.c0)))AND(((t1.c1) NOT NULL))))OR(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))OR(t1.c0)))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) ASC, (('-625367033') IS FALSE)  NULLS FIRST, (((t1.c1)) BETWEEN ((x'f93089')) AND ((t1.c0))) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (((t1.c0)>(t1.c0)) COLLATE BINARY) ORDER BY CASE TYPEOF(DISTINCT t1.c1)  WHEN (+ (t1.c0)) THEN ((((((t1.c0)OR(t1.c0)))OR(NULL)))AND(t1.c1)) ELSE COALESCE(t1.c0, t1.c1, t1.c1, t1.c1, t1.c1) END DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)>(t1.c0)) COLLATE BINARY) ORDER BY (((((((((((~ (t1.c0)))AND(((t1.c1) NOT NULL))))OR(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))OR(t1.c0)))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) ASC, (('-625367033') IS FALSE)  NULLS FIRST, (((t1.c1)) BETWEEN ((x'f93089')) AND ((t1.c0))) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)OR(NULL)))OR(t1.c1)))AND((t1.c1 IN (t1.c0)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY (((((((((((~ (t1.c0)))AND(((t1.c1) NOT NULL))))OR(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))OR(t1.c0)))OR(((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) ASC, (('-625367033') IS FALSE)  NULLS FIRST, (((t1.c1)) BETWEEN ((x'f93089')) AND ((t1.c0))) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST LIMIT 0;
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c1 COLLATE BINARY IN ())) ORDER BY t1.c1 ASC;
SELECT COUNT(*) FROM t1 WHERE ((t1.c1 COLLATE BINARY IN ())) ORDER BY t1.c1 ASC;
SELECT ALL * FROM t1 WHERE ('&B0!Qk+r') ORDER BY (+ (((t1.c0)|(t1.c1))))  NULLS FIRST, CAST(((t1.c0)|(t1.c1)) AS REAL);
SELECT DISTINCT * FROM t1 WHERE ((('&B0!Qk+r')AND(((TRIM(t1.c0, t1.c0))+((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0)))))))) ORDER BY ((((t1.c0)<(t1.c0)))IS((+ (t1.c1)))) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN CAST(t1.c0 AS BLOB) THEN ((((t1.c1)AND(t1.c1)))AND(t1.c1)) ELSE ((t1.c1) ISNULL) END) ORDER BY ((((t1.c0)<(t1.c0)))IS((+ (t1.c1)))) DESC LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ('&B0!Qk+r') ORDER BY (+ (((t1.c0)|(t1.c1))))  NULLS FIRST, CAST(((t1.c0)|(t1.c1)) AS REAL);
SELECT DISTINCT * FROM t1 WHERE ((('&B0!Qk+r')AND(((TRIM(t1.c0, t1.c0))+((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0)))))))) ORDER BY ((((t1.c0)<(t1.c0)))IS((+ (t1.c1)))) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN CAST(t1.c0 AS BLOB) THEN ((((t1.c1)AND(t1.c1)))AND(t1.c1)) ELSE ((t1.c1) ISNULL) END) ORDER BY ((((t1.c0)<(t1.c0)))IS((+ (t1.c1)))) DESC LIMIT 0X0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((t1.c0)<(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((t1.c0)<(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY (((~ (t1.c0))) NOT NULL) ASC  NULLS LAST, (((((((t1.c1 IN (t1.c1)))OR(0.6916845113880912)))OR((t1.c1 IN (t1.c1, t1.c0)))))OR(((t1.c1)GLOB(t1.c1)))) INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((t1.c0 IN (t1.c0)) IN ())) ORDER BY (((~ (t1.c0))) NOT NULL) ASC  NULLS LAST, (((((((t1.c1 IN (t1.c1)))OR(0.6916845113880912)))OR((t1.c1 IN (t1.c1, t1.c0)))))OR(((t1.c1)GLOB(t1.c1))));
SELECT ALL * FROM t1 WHERE (CASE (((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1)))  WHEN x'' THEN (t1.c1 IN (t1.c1)) WHEN ((((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) THEN NULLIF(t1.c0, t1.c0) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN NULL END) ORDER BY CASE WHEN '-1918656529' THEN (t1.c1 IN (t1.c1)) WHEN t1.c0 THEN NULLIF(DISTINCT t1.c1, t1.c0) ELSE ('' IN ()) END ASC, CASE t1.c0  WHEN t1.c0 THEN ((t1.c1)<>(t1.c1)) ELSE (((t1.c1))<((t1.c0))) END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE (((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1)))  WHEN x'' THEN (t1.c1 IN (t1.c1)) WHEN ((((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) THEN NULLIF(t1.c0, t1.c0) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN NULL END) ORDER BY CASE WHEN '-1918656529' THEN (t1.c1 IN (t1.c1)) WHEN t1.c0 THEN NULLIF(DISTINCT t1.c1, t1.c0) ELSE ('' IN ()) END ASC, CASE t1.c0  WHEN t1.c0 THEN ((t1.c1)!=(t1.c1)) ELSE (((t1.c1))<((t1.c0))) END  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c1, t1.c1))<=((t1.c1, t1.c0, t1.c1)))) NOT BETWEEN (((t1.c0)>(t1.c0))) AND (NULL COLLATE NOCASE))) ORDER BY CASE WHEN '-1918656529' THEN (t1.c1 IN (t1.c1)) WHEN t1.c0 THEN NULLIF(DISTINCT t1.c1, t1.c0) ELSE ('' IN ()) END ASC, CASE t1.c0  WHEN t1.c0 THEN ((t1.c1)!=(t1.c1)) ELSE (((t1.c1))<((t1.c0))) END  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (CASE (((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1)))  WHEN x'' THEN (t1.c1 IN (t1.c1)) WHEN ((((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) THEN NULLIF(t1.c0, t1.c0) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN NULL END) ORDER BY CASE WHEN '-1918656529' THEN (t1.c1 IN (t1.c1)) WHEN t1.c0 THEN NULLIF(DISTINCT t1.c1, t1.c0) ELSE ('' IN ()) END ASC, CASE t1.c0  WHEN t1.c0 THEN ((t1.c1)<>(t1.c1)) ELSE (((t1.c1))<((t1.c0))) END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE (((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1)))  WHEN x'' THEN (t1.c1 IN (t1.c1)) WHEN ((((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) THEN NULLIF(t1.c0, t1.c0) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN NULL END) ORDER BY CASE WHEN '-1918656529' THEN (t1.c1 IN (t1.c1)) WHEN t1.c0 THEN NULLIF(DISTINCT t1.c1, t1.c0) ELSE ('' IN ()) END ASC, CASE t1.c0  WHEN t1.c0 THEN ((t1.c1)!=(t1.c1)) ELSE (((t1.c1))<((t1.c0))) END  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c1, t1.c1))<=((t1.c1, t1.c0, t1.c1)))) NOT BETWEEN (((t1.c0)>(t1.c0))) AND (NULL COLLATE NOCASE))) ORDER BY CASE WHEN '-1918656529' THEN (t1.c1 IN (t1.c1)) WHEN t1.c0 THEN NULLIF(DISTINCT t1.c1, t1.c0) ELSE ('' IN ()) END ASC, CASE t1.c0  WHEN t1.c0 THEN ((t1.c1)!=(t1.c1)) ELSE (((t1.c1))<((t1.c0))) END  NULLS FIRST LIMIT 0x1;
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)>(((t1.c1)||(t1.c1))))) ORDER BY (((t1.c1)) NOT BETWEEN ((LTRIM(t1.c1))) AND ((UNLIKELY(t1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)>(((t1.c1)||(t1.c1)))))AND(((((((((((((CAST(t1.c1 AS REAL))AND(t1.c1 COLLATE NOCASE)))OR((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))))AND(0xffffffffbbaf7029)))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN 0.3516447751592945 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)))OR(((t1.c0)>=(t1.c0))))))) ORDER BY (((t1.c1)) NOT BETWEEN ((LTRIM(t1.c1))) AND ((UNLIKELY(t1.c0)))) LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((((((+ (t1.c1)))OR((('Iy]') NOT NULL))))OR(NULL COLLATE NOCASE))) ORDER BY (((t1.c1)) NOT BETWEEN ((LTRIM(t1.c1))) AND ((UNLIKELY(t1.c0)))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)AND((~ (t1.c0)))))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))AND(((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(x'22b3')))));
SELECT * FROM t1 WHERE (((((((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)AND((~ (t1.c0)))))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))AND(((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(x'22b3')))))AND((((t1.c0) IS FALSE) IN ())))) LIMIT 1;
SELECT ALL * FROM t1 WHERE (((((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)AND((~ (t1.c0)))))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))AND(((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(x'22b3')))));
SELECT * FROM t1 WHERE (((((((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)AND((~ (t1.c0)))))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))AND(((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(x'22b3')))))AND((((t1.c0) IS FALSE) IN ())))) LIMIT 1;
SELECT MAX(t1.c1) FROM t1 WHERE ((NOT ((((t1.c0))>((t1.c0)))))) ORDER BY ((t1.c0) IS FALSE) ASC, (('' COLLATE BINARY)-(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((NOT ((((t1.c0))>((t1.c0)))))) ORDER BY ((((t1.c0)GLOB(t1.c1)))/(((((t1.c1)OR(t1.c1)))AND(t1.c0)))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (LTRIM(DATETIME('2dXڸ3wRI!', t1.c0, x'', t1.c1, 'J', NULL), CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)) ORDER BY ((((t1.c0)GLOB(t1.c1)))/(((((t1.c1)OR(t1.c1)))AND(t1.c0)))) ASC LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((t1.c1)%(t1.c0)))GLOB(t1.c0 COLLATE NOCASE))) ORDER BY ((((((((t1.c1)|(t1.c0)))AND((+ (t1.c0)))))AND(t1.c1)))AND((((t1.c0))==((t1.c0)))))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)%(t1.c0)))GLOB(t1.c0 COLLATE NOCASE))) ORDER BY ((((((((t1.c1)|(t1.c0)))AND((+ (t1.c0)))))AND(t1.c1)))AND((((t1.c0))=((t1.c0)))))  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((((t1.c1)%(t1.c0)))GLOB(t1.c0 COLLATE NOCASE))) ORDER BY ((((((((t1.c1)|(t1.c0)))AND((+ (t1.c0)))))AND(t1.c1)))AND((((t1.c0))==((t1.c0)))))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)%(t1.c0)))GLOB(t1.c0 COLLATE NOCASE))) ORDER BY ((((((((t1.c1)|(t1.c0)))AND((+ (t1.c0)))))AND(t1.c1)))AND((((t1.c0))=((t1.c0)))))  NULLS LAST LIMIT 0X1;
SELECT COUNT(*) FROM t1 WHERE (((t1.c1 COLLATE RTRIM)||(((t1.c1)<<('1')))));
SELECT COUNT(*) FROM t1 WHERE (((t1.c1 COLLATE RTRIM)||(((t1.c1)<<('1'))))) ORDER BY (((t1.c0, CAST(t1.c1 AS BLOB), 'Q'))<=((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END, CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN 0.37194054164255064 END))) ASC, ((((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c0))) NOT BETWEEN (((t1.c1) IS TRUE)) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS LAST, t1.c1  NULLS FIRST LIMIT 2;
SELECT * FROM t1 WHERE (x'' COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST(((t1.c1)>=(t1.c0)) AS TEXT);
SELECT * FROM t1 WHERE (x'' COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST(((t1.c1)>=(t1.c0)) AS TEXT) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (ABS(CAST(t1.c0 AS INTEGER))) ORDER BY CAST(((t1.c1)>=(t1.c0)) AS TEXT) LIMIT 0X0;
SELECT * FROM t1 WHERE (x'' COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST(((t1.c1)>=(t1.c0)) AS TEXT);
SELECT * FROM t1 WHERE (x'' COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST(((t1.c1)>=(t1.c0)) AS TEXT) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (ABS(CAST(t1.c0 AS INTEGER))) ORDER BY CAST(((t1.c1)>=(t1.c0)) AS TEXT) LIMIT 0X0;
SELECT MIN(t1.c0) FROM t1 WHERE ((+ (((t1.c1) NOT NULL)))) ORDER BY t1.c1, ((((t1.c0)>=(t1.c1))) NOT BETWEEN (((((((t1.c0)OR(t1.c1)))OR(t1.c0)))OR(t1.c0))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))) ASC;
SELECT MIN(t1.c0) FROM t1 WHERE ((((+ (((t1.c1) NOT NULL))))AND(((((((t1.c0))>=((t1.c1)))))>=(((- (t1.c0)))))))) ORDER BY t1.c1, ((((t1.c0)>=(t1.c1))) NOT BETWEEN (((((((t1.c0)OR(t1.c1)))OR(t1.c0)))OR(t1.c0))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))) ASC;
SELECT COUNT(*) FROM t1 WHERE (((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND('765958415')) COLLATE BINARY) ORDER BY t1.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND('765958415')) COLLATE BINARY) ORDER BY t1.c1 DESC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c1)|(t1.c1)) AS BLOB)) ORDER BY t1.c1 DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (x'65');
SELECT DISTINCT * FROM t1 WHERE (((x'65')AND(((((((((((CASE t1.c0  WHEN t1.c1 THEN t1.c1 END)OR('-1751615192')))OR(((t1.c1) BETWEEN (x'668c') AND (t1.c1)))))AND(((t1.c1)<=('497593387')))))OR(TRIM(t1.c0, t1.c0))))OR(t1.c1 COLLATE BINARY))))) ORDER BY 0.39835367451998127 LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (x'65');
SELECT DISTINCT * FROM t1 WHERE (((x'65')AND(((((((((((CASE t1.c0  WHEN t1.c1 THEN t1.c1 END)OR('-1751615192')))OR(((t1.c1) BETWEEN (x'668c') AND (t1.c1)))))AND(((t1.c1)<=('497593387')))))OR(TRIM(t1.c0, t1.c0))))OR(t1.c1 COLLATE BINARY))))) ORDER BY 0.39835367451998127 LIMIT 0X2;
SELECT * FROM t1 WHERE (-312249120) ORDER BY ((((((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)AND((((t1.c1, t1.c0, t1.c0, t1.c1))<((t1.c0, t1.c0, t1.c0, t1.c0))))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))AND(t1.c0))  NULLS LAST, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))<=((t1.c1 IN (t1.c1)))), ((((t1.c0)IS(t1.c1))) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND (CAST(t1.c0 AS TEXT)));
SELECT DISTINCT * FROM t1 WHERE (((-312249120)AND((((((t1.c0)>(t1.c1))))>((t1.c0 COLLATE NOCASE)))))) ORDER BY ((((((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)AND((((t1.c1, t1.c0, t1.c0, t1.c1))<((t1.c0, t1.c0, t1.c0, t1.c0))))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))AND(t1.c0))  NULLS LAST, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))<=((t1.c1 IN (t1.c1)))), ((((t1.c0)IS(t1.c1))) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND (CAST(t1.c0 AS TEXT)));
SELECT * FROM t1 WHERE (-312249120) ORDER BY ((((((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)AND((((t1.c1, t1.c0, t1.c0, t1.c1))<((t1.c0, t1.c0, t1.c0, t1.c0))))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))AND(t1.c0))  NULLS LAST, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))<=((t1.c1 IN (t1.c1)))), ((((t1.c0)IS(t1.c1))) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND (CAST(t1.c0 AS TEXT)));
SELECT DISTINCT * FROM t1 WHERE (((-312249120)AND((((((t1.c0)>(t1.c1))))>((t1.c0 COLLATE NOCASE)))))) ORDER BY ((((((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)AND((((t1.c1, t1.c0, t1.c0, t1.c1))<((t1.c0, t1.c0, t1.c0, t1.c0))))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))AND(t1.c0))  NULLS LAST, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))<=((t1.c1 IN (t1.c1)))), ((((t1.c0)IS(t1.c1))) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND (CAST(t1.c0 AS TEXT)));
SELECT COUNT(*) FROM t1 WHERE ((- (t1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE ((((- (t1.c0)) COLLATE BINARY)AND(QUOTE((+ (t1.c0)))))) ORDER BY ((t1.c1) IS FALSE)  NULLS FIRST, ((((t1.c1) IS TRUE)) NOT NULL) ASC  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN x'' WHEN t1.c1 THEN NULL ELSE t1.c0 END) ISNULL)) ORDER BY ((((((((((t1.c0)|(t1.c1)))OR((+ (t1.c0)))))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND((((t1.c0, 0.27573987421022994, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c0)))))  NULLS FIRST, ((((t1.c0)>>(t1.c1)))>(((((t1.c1)AND(t1.c0)))OR(t1.c1)))) DESC;
SELECT * FROM t1 NOT INDEXED WHERE (((((CASE t1.c1  WHEN t1.c1 THEN x'' WHEN t1.c1 THEN NULL ELSE t1.c0 END) ISNULL))AND((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) IN ())))) ORDER BY HEX(((t1.c0)IS(t1.c0))) ASC, (((t1.c0)%(t1.c0)) IN ((NOT (t1.c1)))) ASC  NULLS FIRST, t1.c0 LIMIT 0x3 INTERSECT SELECT ALL * FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))||(CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))) ORDER BY HEX(((t1.c0)IS(t1.c0))) ASC, (((t1.c0)%(t1.c0)) IN ((NOT (t1.c1)))) ASC  NULLS FIRST, t1.c0 LIMIT 0x3;
SELECT * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN x'' WHEN t1.c1 THEN NULL ELSE t1.c0 END) ISNULL)) ORDER BY ((((((((((t1.c0)|(t1.c1)))OR((+ (t1.c0)))))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND((((t1.c0, 0.27573987421022994, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c0)))))  NULLS FIRST, ((((t1.c0)>>(t1.c1)))>(((((t1.c1)AND(t1.c0)))OR(t1.c1)))) DESC;
SELECT * FROM t1 NOT INDEXED WHERE (((((CASE t1.c1  WHEN t1.c1 THEN x'' WHEN t1.c1 THEN NULL ELSE t1.c0 END) ISNULL))AND((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) IN ())))) ORDER BY HEX(((t1.c0)IS(t1.c0))) ASC, (((t1.c0)%(t1.c0)) IN ((NOT (t1.c1)))) ASC  NULLS FIRST, t1.c0 LIMIT 0x3 INTERSECT SELECT ALL * FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))||(CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))) ORDER BY HEX(((t1.c0)IS(t1.c0))) ASC, (((t1.c0)%(t1.c0)) IN ((NOT (t1.c1)))) ASC  NULLS FIRST, t1.c0 LIMIT 0x3;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (x'dcc3'))) NOT NULL));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 IN (x'dcc3'))) NOT NULL))AND((((((t1.c1)*(t1.c1)), ((t1.c0)|(t1.c1)), ((t1.c0)>(t1.c1))))<((t1.c1 COLLATE RTRIM, (- (t1.c0)), (t1.c1 IN ()))))))) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS TEXT)  NULLS LAST, t1.c1 LIMIT 3;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (x'dcc3'))) NOT NULL));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 IN (x'dcc3'))) NOT NULL))AND((((((t1.c1)*(t1.c1)), ((t1.c0)|(t1.c1)), ((t1.c0)>(t1.c1))))<((t1.c1 COLLATE RTRIM, (- (t1.c0)), (t1.c1 IN ()))))))) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS TEXT)  NULLS LAST, t1.c1 LIMIT 3;
SELECT MIN(t1.c1) FROM t1 WHERE (((t1.c1) ISNULL) COLLATE RTRIM);
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((t1.c1) ISNULL) COLLATE RTRIM)AND((+ (0Xffffffffd638da50))))) LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((((t1.c1)OR(t1.c0)))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)))OR(x'52f6'))) LIMIT 1;
SELECT * FROM t1 WHERE ((~ (t1.c1)) COLLATE RTRIM) ORDER BY x'5375ad'  NULLS FIRST, '-1574030857' ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((~ (t1.c1)) COLLATE RTRIM)AND(((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0))) NOTNULL)))) ORDER BY (((0.38438579075104307, LIKELY(DISTINCT t1.c0), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))>=((((t1.c0)<<(t1.c0)), ((t1.c0)/(t1.c1)), NULLIF(t1.c0, t1.c1)))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ (((t1.c1)LIKE(t1.c0))))) ORDER BY (((0.38438579075104307, LIKELY(DISTINCT t1.c0), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))>=((((t1.c0)<<(t1.c0)), ((t1.c0)/(t1.c1)), NULLIF(t1.c0, t1.c1)))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE ((~ (t1.c1)) COLLATE RTRIM) ORDER BY x'5375ad'  NULLS FIRST, '-1574030857' ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE ((((~ (t1.c1)) COLLATE RTRIM)AND(((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0))) NOTNULL)))) ORDER BY (((0.38438579075104307, LIKELY(DISTINCT t1.c0), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))>=((((t1.c0)<<(t1.c0)), ((t1.c0)/(t1.c1)), NULLIF(t1.c0, t1.c1)))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ (((t1.c1)LIKE(t1.c0))))) ORDER BY (((0.38438579075104307, LIKELY(DISTINCT t1.c0), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))>=((((t1.c0)<<(t1.c0)), ((t1.c0)/(t1.c1)), NULLIF(t1.c0, t1.c1)))) ASC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (load_extension(t1.c1, ((t1.c0)AND(t1.c0)))) ORDER BY '-852112328'  NULLS FIRST, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))%((+ (t1.c1)))) DESC  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((load_extension(t1.c1, ((t1.c0)AND(t1.c0))))AND(t1.c0))) ORDER BY ((((CAST(t1.c1 AS INTEGER))OR(((t1.c1)IS(t1.c0)))))AND(((0.57601851755874)IS(t1.c0)))), ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)*(LENGTH(t1.c1))), ((((((t1.c0 COLLATE NOCASE)OR(((t1.c1) ISNULL))))OR(((((((t1.c1)AND(NULL)))AND(t1.c1)))AND(NULL)))))AND(LIKELIHOOD(DISTINCT t1.c0, t1.c1))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ('386595408') ORDER BY ((((CAST(t1.c1 AS INTEGER))OR(((t1.c1)IS(t1.c0)))))AND(((0.57601851755874)IS(t1.c0)))), ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)*(LENGTH(t1.c1))), ((((((t1.c0 COLLATE NOCASE)OR(((t1.c1) ISNULL))))OR(((((((t1.c1)AND(NULL)))AND(t1.c1)))AND(NULL)))))AND(LIKELIHOOD(DISTINCT t1.c0, t1.c1))) DESC  NULLS FIRST;
SELECT MAX(t1.c0) FROM t1 WHERE ((((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) ISNULL));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) ISNULL))AND((~ (((t1.c0) IS FALSE)))))) INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((x'2ce1c6c1b6')<<(t1.c1))) NOT NULL));
SELECT ALL * FROM t1 WHERE ((((t1.c0)) BETWEEN (('-383326179' COLLATE BINARY)) AND (('Q'))));
SELECT ALL * FROM t1 WHERE ((((t1.c0)) BETWEEN (('-383326179' COLLATE BINARY)) AND (('Q')))) ORDER BY (((((t1.c1, t1.c1, t1.c0))<((t1.c1, t1.c0, t1.c0))))%((t1.c1 IN (t1.c1, 0.2052490758483957)))) DESC  NULLS FIRST, CAST(((t1.c1)IS NOT(t1.c0)) AS BLOB)  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((t1.c1, t1.c1, t1.c0))<((t1.c1, t1.c0, t1.c0))))%((t1.c1 IN (t1.c1, 0.2052490758483957)))) DESC  NULLS FIRST, CAST(((t1.c1)IS NOT(t1.c0)) AS BLOB)  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((t1.c0)) BETWEEN (('-383326179' COLLATE BINARY)) AND (('Q'))));
SELECT ALL * FROM t1 WHERE ((((t1.c0)) BETWEEN (('-383326179' COLLATE BINARY)) AND (('Q')))) ORDER BY (((((t1.c1, t1.c1, t1.c0))<((t1.c1, t1.c0, t1.c0))))%((t1.c1 IN (t1.c1, 0.2052490758483957)))) DESC  NULLS FIRST, CAST(((t1.c1)IS NOT(t1.c0)) AS BLOB)  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((t1.c1, t1.c1, t1.c0))<((t1.c1, t1.c0, t1.c0))))%((t1.c1 IN (t1.c1, 0.2052490758483957)))) DESC  NULLS FIRST, CAST(((t1.c1)IS NOT(t1.c0)) AS BLOB)  NULLS LAST;
SELECT * FROM t1 WHERE (0X27a07e6f) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c1 END AS BLOB) ASC;
SELECT * FROM t1 WHERE (0x27a07e6f) ORDER BY CASE WHEN (~ (t1.c0)) THEN (((0.8764032744050994, t1.c0))<=((t1.c1, t1.c0))) END  NULLS LAST, CAST((t1.c1 IN (t1.c1)) AS INTEGER)  NULLS LAST LIMIT 1;
SELECT * FROM t1 WHERE (0X27a07e6f) ORDER BY CAST(CASE WHEN t1.c1 THEN t1.c1 END AS BLOB) ASC;
SELECT * FROM t1 WHERE (0x27a07e6f) ORDER BY CASE WHEN (~ (t1.c0)) THEN (((0.8764032744050994, t1.c0))<=((t1.c1, t1.c0))) END  NULLS LAST, CAST((t1.c1 IN (t1.c1)) AS INTEGER)  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE ((t1.c1 IN (t1.c1)) COLLATE NOCASE) ORDER BY (t1.c1 COLLATE BINARY IN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))), ((CAST(t1.c1 AS NUMERIC))+(json_array('503203198', t1.c0, t1.c0))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c1 IN (t1.c1)) COLLATE NOCASE)AND('-2067305828'))) ORDER BY 'X', (((t1.c0, (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))))>=((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), '-1628956291')))  NULLS LAST, x'' INTERSECT SELECT * FROM t1 WHERE (((((((t1.c0)OR(t1.c0)))AND(t1.c1))) BETWEEN (json_array_length(t1.c0)) AND ((+ (x''))))) ORDER BY 'X', (((t1.c0, (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))))>=((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), '-1628956291')))  NULLS LAST, x'';
SELECT ALL * FROM t1 WHERE ((t1.c1 IN (t1.c1)) COLLATE NOCASE) ORDER BY (t1.c1 COLLATE BINARY IN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))), ((CAST(t1.c1 AS NUMERIC))+(json_array('503203198', t1.c0, t1.c0))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c1 IN (t1.c1)) COLLATE NOCASE)AND('-2067305828'))) ORDER BY 'X', (((t1.c0, (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))))>=((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), '-1628956291')))  NULLS LAST, x'' INTERSECT SELECT * FROM t1 WHERE (((((((t1.c0)OR(t1.c0)))AND(t1.c1))) BETWEEN (json_array_length(t1.c0)) AND ((+ (x''))))) ORDER BY 'X', (((t1.c0, (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))))>=((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), '-1628956291')))  NULLS LAST, x'';
SELECT MIN(t1.c0) FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN 'k.w' THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN x'61a1' THEN t1.c0 ELSE t1.c1 END) BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c0 END) AND ((NOT (t1.c0)))));
SELECT MIN(t1.c0) FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN 'k.w' THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN x'61a1' THEN t1.c0 ELSE t1.c1 END) BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c0 END) AND ((NOT (t1.c0)))))AND((((((t1.c0)OR(t1.c1)))AND(t1.c1)) IN (((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c1))))))) ORDER BY (t1.c1 IN (CASE t1.c1  WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c1 ELSE t1.c0 END)), HEX('sw!') LIMIT 0X2 INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c0) ISNULL)) IS TRUE)) ORDER BY (t1.c1 IN (CASE t1.c1  WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c1 ELSE t1.c0 END)), HEX('sw!') LIMIT 0X2;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE NOCASE) ORDER BY TRIM(DISTINCT ((t1.c1)||(t1.c0)))  NULLS LAST, ('704982203' COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE NOCASE) ORDER BY (((((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0)))) IS TRUE) DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 WHERE (CAST(((t1.c0) NOT NULL) AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c0) NOT NULL) AS BLOB))AND(((((((((((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND((+ (t1.c0)))))AND((- ('''0a直D F')))))AND(CASE t1.c0  WHEN 0.12928066007509686 THEN t1.c1 END)))AND((t1.c1 IN ()))))AND(((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(0.6763201026930906)))))OR(((((t1.c1)OR(t1.c1)))OR(t1.c1))))))) ORDER BY ((((t1.c1) IS FALSE)) ISNULL), (~ ((+ (t1.c1)))) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)<(t1.c0)))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c1)))))) ORDER BY ((((t1.c1) IS FALSE)) ISNULL), (~ ((+ (t1.c1)))) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE (CAST(((t1.c0) NOT NULL) AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c0) NOT NULL) AS BLOB))AND(((((((((((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND((+ (t1.c0)))))AND((- ('''0a直D F')))))AND(CASE t1.c0  WHEN 0.12928066007509686 THEN t1.c1 END)))AND((t1.c1 IN ()))))AND(((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(0.6763201026930906)))))OR(((((t1.c1)OR(t1.c1)))OR(t1.c1))))))) ORDER BY ((((t1.c1) IS FALSE)) ISNULL), (~ ((+ (t1.c1)))) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)<(t1.c0)))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c1)))))) ORDER BY ((((t1.c1) IS FALSE)) ISNULL), (~ ((+ (t1.c1)))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ()))OR('&y5' COLLATE RTRIM)));
SELECT DISTINCT * FROM t1 NOT INDEXED WHERE ((((((t1.c0 IN ()))OR('&y5' COLLATE RTRIM)))AND(((((x'')OR(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END)))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))))));
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ()))OR('&y5' COLLATE RTRIM)));
SELECT DISTINCT * FROM t1 NOT INDEXED WHERE ((((((t1.c0 IN ()))OR('&y5' COLLATE RTRIM)))AND(((((x'')OR(CASE t1.c1  WHEN t1.c0 THEN t1.c1 END)))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))))));
SELECT COUNT(*) FROM t1 WHERE ((((+ (t1.c1)))-((- (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((((((+ (t1.c1)))-((- (t1.c0)))))AND(((t1.c0 COLLATE BINARY) IS TRUE)))) LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (TRIM(DISTINCT (t1.c1 IN (NULL)), TYPEOF(DISTINCT t1.c1))) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1)-('667541829')) AS REAL)) ORDER BY ((LIKELIHOOD(t1.c0, t1.c0)) NOT BETWEEN ('-1787681106') AND (0.1296751884399594))  NULLS FIRST;
SELECT * FROM t1 WHERE (((CAST(((t1.c1)-('667541829')) AS REAL))AND(((t1.c1 IN ()) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))))) ORDER BY ((((0.5211415563772577)>=(t1.c0))) BETWEEN (((t1.c0)&(t1.c0))) AND (0.052677873057155766)) DESC, t1.c1, t1.c0 DESC LIMIT 2 INTERSECT SELECT * FROM t1 WHERE (t1.c1) ORDER BY ((((0.5211415563772577)>=(t1.c0))) BETWEEN (((t1.c0)&(t1.c0))) AND (0.052677873057155766)) DESC, t1.c1, t1.c0 DESC LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1)-('667541829')) AS REAL)) ORDER BY ((LIKELIHOOD(t1.c0, t1.c0)) NOT BETWEEN ('-1787681106') AND (0.1296751884399594))  NULLS FIRST;
SELECT MAX(t1.c0) FROM t1 WHERE (x'36') ORDER BY ((((NULL)OR(((t1.c1)=(t1.c0)))))OR(t1.c1))  NULLS FIRST, CASE WHEN CAST(t1.c0 AS REAL) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN (t1.c0 IN ()) WHEN t1.c0 THEN 0xffffffffa90013df COLLATE BINARY END  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((x'36')AND((- (0x29905ebb))))) ORDER BY ((((NULL)OR(((t1.c1)=(t1.c0)))))OR(t1.c1))  NULLS FIRST, CASE WHEN CAST(t1.c0 AS REAL) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN (t1.c0 IN ()) WHEN t1.c0 THEN -1459612705 COLLATE BINARY END  NULLS FIRST LIMIT 0X2;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((- (t1.c1)), ((x'')<(t1.c0))))!=((((x'e9b8d4')OR(t1.c1)), ((t1.c1) NOTNULL)))));
SELECT MIN(t1.c0) FROM t1 WHERE (((((((- (t1.c1)), ((x'')<(t1.c0))))!=((((x'e9b8d4')OR(t1.c1)), ((t1.c1) NOTNULL)))))AND(('440482288' IN (CASE WHEN '1075546525' THEN t1.c1 END))))) ORDER BY (- (CAST(t1.c0 AS BLOB))) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE ((- (CAST(0.5817959984925231 AS NUMERIC)))) ORDER BY (- (CAST(t1.c0 AS BLOB))) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0)) BETWEEN ((t1.c1, UNLIKELY(t1.c1))) AND ((((((t1.c0)OR(t1.c1)))AND(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))));
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c0)) BETWEEN ((t1.c1, UNLIKELY(t1.c1))) AND ((((((t1.c0)OR(t1.c1)))AND(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))))AND(LTRIM(t1.c1, t1.c1)))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0)) BETWEEN ((t1.c1, UNLIKELY(t1.c1))) AND ((((((t1.c0)OR(t1.c1)))AND(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))));
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c0)) BETWEEN ((t1.c1, UNLIKELY(t1.c1))) AND ((((((t1.c0)OR(t1.c1)))AND(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))))AND(LTRIM(t1.c1, t1.c1)))) LIMIT 0X1;
SELECT MAX(t1.c0) FROM t1 WHERE (((CAST(t1.c1 AS TEXT))&((t1.c1 IN (t1.c1))))) ORDER BY (((((t1.c1))=((t1.c0))))==(CAST(t1.c0 AS BLOB)))  NULLS FIRST, LOWER(HEX(DISTINCT t1.c0))  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((CAST(t1.c1 AS TEXT))&((t1.c1 IN (t1.c1))))) ORDER BY (((((t1.c1))=((t1.c0))))=(CAST(t1.c0 AS BLOB)))  NULLS FIRST, LOWER(HEX(DISTINCT t1.c0))  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c0 IN ()), (+ (t1.c0))))>((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)), t1.c0 COLLATE NOCASE))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((t1.c0 IN ()), (+ (t1.c0))))>((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)), t1.c0 COLLATE NOCASE))))AND(((- (t1.c1)) IN (CAST(t1.c0 AS INTEGER)))))) LIMIT 0;
SELECT * FROM t1 WHERE (((((t1.c1)=(t1.c1)))LIKE(CAST(NULL AS BLOB)))) ORDER BY ((NULL) BETWEEN ((+ (t1.c0))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) DESC  NULLS LAST, t1.c1 ASC  NULLS FIRST, (x'c0' IN ((t1.c1 IN (t1.c1)))) DESC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)=(t1.c1)))LIKE(CAST(NULL AS BLOB)))) ORDER BY ((NULL) BETWEEN ((+ (t1.c0))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) DESC  NULLS LAST, t1.c1 ASC  NULLS FIRST, (x'c0' IN ((t1.c1 IN (t1.c1)))) DESC;
SELECT * FROM t1 WHERE (((((t1.c1)=(t1.c1)))LIKE(CAST(NULL AS BLOB)))) ORDER BY ((NULL) BETWEEN ((+ (t1.c0))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) DESC  NULLS LAST, t1.c1 ASC  NULLS FIRST, (x'c0' IN ((t1.c1 IN (t1.c1)))) DESC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)=(t1.c1)))LIKE(CAST(NULL AS BLOB)))) ORDER BY ((NULL) BETWEEN ((+ (t1.c0))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))) DESC  NULLS LAST, t1.c1 ASC  NULLS FIRST, (x'c0' IN ((t1.c1 IN (t1.c1)))) DESC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((+ (((t1.c0)OR(t1.c1)))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((+ (((t1.c0)OR(t1.c1))))) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (t1.c1);
SELECT MAX(t1.c0) FROM t1 WHERE (((((((((CAST(t1.c0 AS REAL))AND((t1.c1 IN ()))))OR((((t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, x'987391', t1.c1)) AND ((t1.c0, t1.c1, t1.c1))))))OR(('' IN (0.19396698642446197)))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY (NOT (DATE(t1.c1, t1.c0, t1.c1, t1.c0)))  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((((((CAST(t1.c0 AS REAL))AND((t1.c1 IN ()))))OR((((t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, x'987391', t1.c1)) AND ((t1.c0, t1.c1, t1.c1))))))OR(('' IN (0.19396698642446197)))))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY ((((((((((((t1.c1)OR(t1.c1)))OR(853913989)))AND('1421531614')))AND(t1.c0)))AND((t1.c0 IN ()))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))) ASC  NULLS FIRST, t1.c1  NULLS FIRST INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (CASE 0.2599864153481758  WHEN RTRIM(t1.c1) THEN t1.c1 COLLATE NOCASE WHEN ((t1.c1) NOT NULL) THEN LIKE(593556332, t1.c1) WHEN (((t1.c0, t1.c1))<((t1.c0, t1.c0))) THEN CAST(t1.c1 AS INTEGER) ELSE t1.c0 END) ORDER BY ((((((((((((t1.c1)OR(t1.c1)))OR(853913989)))AND('1421531614')))AND(t1.c0)))AND((t1.c0 IN ()))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))) ASC  NULLS FIRST, t1.c1  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)>=(t1.c0)))!=(UPPER(DISTINCT t1.c1))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((t1.c1)==(t1.c0)))<(UPPER(DISTINCT t1.c1))))AND(t1.c1))) LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE ((- (t1.c0 COLLATE RTRIM)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((- (t1.c0 COLLATE RTRIM)))AND((+ (0.8093401870849766)))));
SELECT * FROM t1 WHERE (t1.c1 COLLATE NOCASE);
SELECT ALL * FROM t1 WHERE (t1.c1 COLLATE NOCASE) ORDER BY (((json(t1.c0)))>=((((t1.c1) ISNULL))))  NULLS FIRST, ((((((t1.c0 COLLATE RTRIM)OR(((t1.c1) NOT NULL))))AND(((t1.c0)AND(t1.c0)))))OR(((t1.c1)|(t1.c0)))) LIMIT 0;
SELECT * FROM t1 WHERE (t1.c1 COLLATE NOCASE);
SELECT ALL * FROM t1 WHERE (t1.c1 COLLATE NOCASE) ORDER BY (((json(t1.c0)))>=((((t1.c1) ISNULL))))  NULLS FIRST, ((((((t1.c0 COLLATE RTRIM)OR(((t1.c1) NOT NULL))))AND(((t1.c0)AND(t1.c0)))))OR(((t1.c1)|(t1.c0)))) LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((t1.c0)*(t1.c0)) IN (((t1.c1) NOT BETWEEN (t1.c0) AND ('P')), (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))), HEX(DISTINCT t1.c0), ((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((t1.c0)*(t1.c0)) IN (((t1.c1) NOT BETWEEN (t1.c0) AND ('P')), (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))), HEX(DISTINCT t1.c0), ((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0))))) INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE ((~ ((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c1, '754622792', '136362197')) AND ((t1.c1, t1.c0, t1.c0))))));
SELECT MAX(t1.c1) FROM t1 WHERE (CAST(t1.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY (((t1.c0, t1.c0)) NOT BETWEEN ((IFNULL(t1.c0, t1.c0), ((((((((((t1.c1)OR(t1.c1)))AND(0x446fc6ff)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))) AND ((((t1.c1)<<(t1.c1)), ((t1.c1)==(NULL)))))  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC) COLLATE NOCASE)AND(IFNULL(DISTINCT t1.c1, '-1671112748')))) ORDER BY (((+ (NULL))) IS FALSE) LIMIT 2 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((((((((((t1.c0)AND(t1.c0)))OR(0xffffffffef630a53)))AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1 COLLATE NOCASE)))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (((+ (NULL))) IS FALSE) LIMIT 2;
SELECT ALL * FROM t1 WHERE (((((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))AND(((((t1.c0)OR(t1.c0)))OR(t1.c1)))))AND(NULL)));
SELECT * FROM t1 WHERE (((((((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))AND(((((t1.c0)OR(t1.c0)))OR(t1.c1)))))AND(NULL)))AND(((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) IS TRUE)))) ORDER BY ((CAST(t1.c1 AS REAL))|(LIKELIHOOD(t1.c1, t1.c0))), ((t1.c1)+(((t1.c1) NOT NULL)))  NULLS FIRST, ((((((((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND('0&SJfs')))AND(x'')))OR(t1.c0)))OR('-187967774'))) NOT BETWEEN (813118317) AND (t1.c0)) DESC  NULLS FIRST, ((t1.c1 COLLATE RTRIM) NOT BETWEEN (UPPER(DISTINCT t1.c1)) AND (CAST(t1.c1 AS REAL))) DESC;
SELECT ALL * FROM t1 WHERE (((((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))AND(((((t1.c0)OR(t1.c0)))OR(t1.c1)))))AND(NULL)));
SELECT * FROM t1 WHERE (((((((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))AND(((((t1.c0)OR(t1.c0)))OR(t1.c1)))))AND(NULL)))AND(((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))) IS TRUE)))) ORDER BY ((CAST(t1.c1 AS REAL))|(LIKELIHOOD(t1.c1, t1.c0))), ((t1.c1)+(((t1.c1) NOT NULL)))  NULLS FIRST, ((((((((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND('0&SJfs')))AND(x'')))OR(t1.c0)))OR('-187967774'))) NOT BETWEEN (813118317) AND (t1.c0)) DESC  NULLS FIRST, ((t1.c1 COLLATE RTRIM) NOT BETWEEN (UPPER(DISTINCT t1.c1)) AND (CAST(t1.c1 AS REAL))) DESC;
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)>((t1.c1 IN (t1.c1)))));
SELECT ALL * FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)>((t1.c1 IN (t1.c1)))))AND(((((t1.c0) BETWEEN (t1.c1) AND ('s'))) BETWEEN (((((t1.c0)AND(t1.c0)))OR(t1.c1))) AND (NULL))))) LIMIT 0x0;
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)>((t1.c1 IN (t1.c1)))));
SELECT ALL * FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)>((t1.c1 IN (t1.c1)))))AND(((((t1.c0) BETWEEN (t1.c1) AND ('s'))) BETWEEN (((((t1.c0)AND(t1.c0)))OR(t1.c1))) AND (NULL))))) LIMIT 0x0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((CASE WHEN t1.c0 THEN x'73' END)LIKE(CASE WHEN t1.c1 THEN NULL WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN 0Xffffffff8731ea80 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((CASE WHEN t1.c0 THEN x'73' END)LIKE(CASE WHEN t1.c1 THEN NULL WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN 0Xffffffff8731ea80 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END))) LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), (NOT (t1.c1)))) AND (((((t1.c1, t1.c1))<=((t1.c1, t1.c1))), DATETIME(t1.c0, t1.c1, t1.c0))))) ORDER BY (((((('715179311' COLLATE NOCASE)OR(((t1.c0) IS FALSE))))AND(t1.c0 COLLATE BINARY)))OR(CASE WHEN t1.c0 THEN t1.c0 END)) ASC, ((((t1.c1)/(t1.c1)))>=((- (t1.c0)))), CASE WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN NULL THEN 270520835 WHEN t1.c0 THEN 0X1b72a43f ELSE t1.c0 END THEN (~ (t1.c0)) WHEN (((t1.c0))!=((t1.c0))) THEN CAST(t1.c0 AS NUMERIC) WHEN CHANGES() THEN NULLIF(t1.c0, t1.c1) WHEN ((t1.c1)GLOB(t1.c0)) THEN '-1148669192' ELSE CAST(t1.c0 AS TEXT) END DESC;
SELECT * FROM t1 WHERE ((((((t1.c0, t1.c1)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), (NOT (t1.c1)))) AND (((((t1.c1, t1.c1))<=((t1.c1, t1.c1))), DATETIME(t1.c0, t1.c1, t1.c0)))))AND(t1.c0 COLLATE NOCASE))) ORDER BY (((((('715179311' COLLATE NOCASE)OR(((t1.c0) IS FALSE))))AND(t1.c0 COLLATE BINARY)))OR(CASE WHEN t1.c0 THEN t1.c0 END)) ASC, ((((t1.c1)/(t1.c1)))>=((- (t1.c0)))), CASE WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN NULL THEN 0X101fd203 WHEN t1.c0 THEN 0X1b72a43f ELSE t1.c0 END THEN (~ (t1.c0)) WHEN (((t1.c0))<>((t1.c0))) THEN CAST(t1.c0 AS NUMERIC) WHEN CHANGES() THEN NULLIF(t1.c0, t1.c1) WHEN ((t1.c1)GLOB(t1.c0)) THEN '-1148669192' ELSE CAST(t1.c0 AS TEXT) END DESC LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), (NOT (t1.c1)))) AND (((((t1.c1, t1.c1))<=((t1.c1, t1.c1))), DATETIME(t1.c0, t1.c1, t1.c0))))) ORDER BY (((((('715179311' COLLATE NOCASE)OR(((t1.c0) IS FALSE))))AND(t1.c0 COLLATE BINARY)))OR(CASE WHEN t1.c0 THEN t1.c0 END)) ASC, ((((t1.c1)/(t1.c1)))>=((- (t1.c0)))), CASE WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN NULL THEN 270520835 WHEN t1.c0 THEN 0X1b72a43f ELSE t1.c0 END THEN (~ (t1.c0)) WHEN (((t1.c0))!=((t1.c0))) THEN CAST(t1.c0 AS NUMERIC) WHEN CHANGES() THEN NULLIF(t1.c0, t1.c1) WHEN ((t1.c1)GLOB(t1.c0)) THEN '-1148669192' ELSE CAST(t1.c0 AS TEXT) END DESC;
SELECT * FROM t1 WHERE ((((((t1.c0, t1.c1)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), (NOT (t1.c1)))) AND (((((t1.c1, t1.c1))<=((t1.c1, t1.c1))), DATETIME(t1.c0, t1.c1, t1.c0)))))AND(t1.c0 COLLATE NOCASE))) ORDER BY (((((('715179311' COLLATE NOCASE)OR(((t1.c0) IS FALSE))))AND(t1.c0 COLLATE BINARY)))OR(CASE WHEN t1.c0 THEN t1.c0 END)) ASC, ((((t1.c1)/(t1.c1)))>=((- (t1.c0)))), CASE WHEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN NULL THEN 0X101fd203 WHEN t1.c0 THEN 0X1b72a43f ELSE t1.c0 END THEN (~ (t1.c0)) WHEN (((t1.c0))<>((t1.c0))) THEN CAST(t1.c0 AS NUMERIC) WHEN CHANGES() THEN NULLIF(t1.c0, t1.c1) WHEN ((t1.c1)GLOB(t1.c0)) THEN '-1148669192' ELSE CAST(t1.c0 AS TEXT) END DESC LIMIT 0;
SELECT MAX(t1.c1) FROM t1 WHERE ((NOT ((- (t1.c0)))));
SELECT MAX(t1.c1) FROM t1 WHERE ((NOT ((- (t1.c0))))) LIMIT 0x0;
SELECT MAX(t1.c0) FROM t1 WHERE ((t1.c0 COLLATE RTRIM IN (t1.c1)));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((t1.c0 COLLATE RTRIM IN (t1.c1))) LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END COLLATE BINARY) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (((((t1.c1)AND(0Xffffffffa8bbb21c)))OR(t1.c1)) COLLATE NOCASE) ORDER BY json_type(((((x'6af8')AND(t1.c0)))AND('2109462779')))  NULLS LAST, ((CASE WHEN t1.c1 THEN t1.c1 ELSE x'7d' END)||((t1.c1 IN ())))  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c1)AND(-1464094180)))OR(t1.c1)) COLLATE NOCASE) ORDER BY (NOT (((0.8675189074939252)AND(t1.c1)))), ((((NULL) NOT NULL))IS NOT(CAST(t1.c1 AS REAL))) ASC  NULLS LAST, (((((t1.c0)IS(t1.c1)), ((t1.c1)<(t1.c1)), ((t1.c1)>=(t1.c0)), CAST(t1.c0 AS NUMERIC)))>=((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN NULL ELSE t1.c1 END, ((t1.c1) BETWEEN (t1.c1) AND (0.9264321937020613)), (t1.c1 IN ()), t1.c0))), ((CAST('-399064750' AS TEXT))IS NOT(NULL))  NULLS FIRST LIMIT 2 INTERSECT SELECT * FROM t1 WHERE ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) IN (TRIM(DISTINCT t1.c0, t1.c0)))) ORDER BY (NOT (((0.8675189074939252)AND(t1.c1)))), ((((NULL) NOT NULL))IS NOT(CAST(t1.c1 AS REAL))) ASC  NULLS LAST, (((((t1.c0)IS(t1.c1)), ((t1.c1)<(t1.c1)), ((t1.c1)>=(t1.c0)), CAST(t1.c0 AS NUMERIC)))>=((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN NULL ELSE t1.c1 END, ((t1.c1) BETWEEN (t1.c1) AND (0.9264321937020613)), (t1.c1 IN ()), t1.c0))), ((CAST('-399064750' AS TEXT))IS NOT(NULL))  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t1 WHERE (((((t1.c1)AND(0Xffffffffa8bbb21c)))OR(t1.c1)) COLLATE NOCASE) ORDER BY json_type(((((x'6af8')AND(t1.c0)))AND('2109462779')))  NULLS LAST, ((CASE WHEN t1.c1 THEN t1.c1 ELSE x'7d' END)||((t1.c1 IN ())))  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c1)AND(-1464094180)))OR(t1.c1)) COLLATE NOCASE) ORDER BY (NOT (((0.8675189074939252)AND(t1.c1)))), ((((NULL) NOT NULL))IS NOT(CAST(t1.c1 AS REAL))) ASC  NULLS LAST, (((((t1.c0)IS(t1.c1)), ((t1.c1)<(t1.c1)), ((t1.c1)>=(t1.c0)), CAST(t1.c0 AS NUMERIC)))>=((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN NULL ELSE t1.c1 END, ((t1.c1) BETWEEN (t1.c1) AND (0.9264321937020613)), (t1.c1 IN ()), t1.c0))), ((CAST('-399064750' AS TEXT))IS NOT(NULL))  NULLS FIRST LIMIT 2 INTERSECT SELECT * FROM t1 WHERE ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) IN (TRIM(DISTINCT t1.c0, t1.c0)))) ORDER BY (NOT (((0.8675189074939252)AND(t1.c1)))), ((((NULL) NOT NULL))IS NOT(CAST(t1.c1 AS REAL))) ASC  NULLS LAST, (((((t1.c0)IS(t1.c1)), ((t1.c1)<(t1.c1)), ((t1.c1)>=(t1.c0)), CAST(t1.c0 AS NUMERIC)))>=((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN NULL ELSE t1.c1 END, ((t1.c1) BETWEEN (t1.c1) AND (0.9264321937020613)), (t1.c1 IN ()), t1.c0))), ((CAST('-399064750' AS TEXT))IS NOT(NULL))  NULLS FIRST LIMIT 2;
SELECT MIN(t1.c0) FROM t1 WHERE (CAST(LIKE(t1.c1, t1.c1) AS REAL));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CAST(LIKE(t1.c1, t1.c1) AS REAL)) ORDER BY ((((t1.c1) IS TRUE)) NOT NULL) ASC  NULLS FIRST, ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN '' THEN t1.c1 WHEN t1.c1 THEN NULL END) NOT BETWEEN ((t1.c1 IN (t1.c1))) AND ((~ (t1.c1))))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((x'') IS TRUE)) ORDER BY ((t1.c1)AND(t1.c1))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((x'') IS TRUE)) ORDER BY (((+ (t1.c0)))LIKE(CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))) AND ((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))))) ORDER BY (((+ (t1.c0)))LIKE(CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (((x'') IS TRUE)) ORDER BY ((t1.c1)AND(t1.c1))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((x'') IS TRUE)) ORDER BY (((+ (t1.c0)))LIKE(CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))) AND ((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))))) ORDER BY (((+ (t1.c0)))LIKE(CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (CHAR((t1.c1 IN (t1.c0, t1.c0)), ((t1.c1)GLOB(t1.c0)))) ORDER BY ((((t1.c1)>(t1.c0))) ISNULL), (((((t1.c0, t1.c0, t1.c1))>=((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN (((t1.c0)==(t1.c1))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CHAR((t1.c1 IN (t1.c0)), ((t1.c1)GLOB(t1.c0)))) ORDER BY ((((t1.c1)>(t1.c0))) ISNULL), (((((t1.c0, t1.c0, t1.c1))>=((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN (((t1.c0)==(t1.c1))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c0)) BETWEEN (((t1.c0 IN ()), x'44')) AND ((LIKELIHOOD(DISTINCT t1.c0, t1.c1), ((t1.c1)IS NOT(t1.c1)))))) ORDER BY ((((t1.c1)>(t1.c0))) ISNULL), (((((t1.c0, t1.c0, t1.c1))>=((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN (((t1.c0)==(t1.c1))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (CHAR((t1.c1 IN (t1.c0, t1.c0)), ((t1.c1)GLOB(t1.c0)))) ORDER BY ((((t1.c1)>(t1.c0))) ISNULL), (((((t1.c0, t1.c0, t1.c1))>=((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN (((t1.c0)==(t1.c1))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CHAR((t1.c1 IN (t1.c0)), ((t1.c1)GLOB(t1.c0)))) ORDER BY ((((t1.c1)>(t1.c0))) ISNULL), (((((t1.c0, t1.c0, t1.c1))>=((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN (((t1.c0)==(t1.c1))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c0)) BETWEEN (((t1.c0 IN ()), x'44')) AND ((LIKELIHOOD(DISTINCT t1.c0, t1.c1), ((t1.c1)IS NOT(t1.c1)))))) ORDER BY ((((t1.c1)>(t1.c0))) ISNULL), (((((t1.c0, t1.c0, t1.c1))>=((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN (((t1.c0)==(t1.c1))) AND (((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))  NULLS LAST LIMIT 0;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((~ ((t1.c0 IN (t1.c0, t1.c1))))) ORDER BY 0.7669379565435547 DESC  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1 WHERE ((~ ((t1.c0 IN (t1.c0))))) ORDER BY (((+ (t1.c1))) BETWEEN (t1.c0 COLLATE NOCASE) AND (((t1.c1) IS FALSE))) ASC  NULLS LAST LIMIT 0;
SELECT MAX(t1.c0) FROM t1 WHERE (CAST('섵[/m~-鶺
<' AS REAL)) ORDER BY (((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) IN (t1.c1 COLLATE NOCASE)) ASC  NULLS FIRST, CASE CAST(t1.c1 AS NUMERIC)  WHEN ((t1.c0)-(t1.c0)) THEN ((NULL) IS FALSE) END;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (CAST('섵[/m~-鶺
<' AS REAL)) ORDER BY (((t1.c0, t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(x'b90a')), t1.c0, ((t1.c0) NOT NULL), ((((t1.c0)AND(t1.c0)))AND(t1.c0)))) AND ((((t1.c0)LIKE(t1.c1)), (NOT (t1.c1)), 'S}z.a+', (((('y')AND(t1.c1)))AND(t1.c1))))), ')<nS^ᖶz]' DESC INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((t1.c1) BETWEEN (t1.c0) AND ('tcF61M{\')) COLLATE RTRIM) ORDER BY (((t1.c0, t1.c0, t1.c1, t1.c0)) NOT BETWEEN ((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(x'b90a')), t1.c0, ((t1.c0) NOT NULL), ((((t1.c0)AND(t1.c0)))AND(t1.c0)))) AND ((((t1.c0)LIKE(t1.c1)), (NOT (t1.c1)), 'S}z.a+', (((('y')AND(t1.c1)))AND(t1.c1))))), ')<nS^ᖶz]' DESC;
SELECT COUNT(*) FROM t1 WHERE ((+ (LOWER(DISTINCT t1.c1)))) ORDER BY ((((x'5b') ISNULL))<<(((t1.c1)%(t1.c1))))  NULLS LAST, CASE ((t1.c0)%(t1.c1))  WHEN t1.c1 COLLATE NOCASE THEN CASE x''  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END ELSE ((t1.c0)>=(t1.c1)) END DESC;
SELECT COUNT(*) FROM t1 WHERE ((+ (LOWER(DISTINCT t1.c1)))) ORDER BY ((((x'5b') ISNULL))<<(((t1.c1)%(t1.c1))))  NULLS LAST, CASE ((t1.c0)%(t1.c1))  WHEN t1.c1 COLLATE NOCASE THEN CASE x''  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END ELSE ((t1.c0)>=(t1.c1)) END DESC INTERSECT SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))&(((t1.c0)>>(t1.c1))))) ORDER BY ((((x'5b') ISNULL))<<(((t1.c1)%(t1.c1))))  NULLS LAST, CASE ((t1.c0)%(t1.c1))  WHEN t1.c1 COLLATE NOCASE THEN CASE x''  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END ELSE ((t1.c0)>=(t1.c1)) END DESC;
SELECT * FROM t1 WHERE ((((((t1.c0)GLOB(NULL)), ((t1.c1) NOTNULL), CASE t1.c1  WHEN t1.c1 THEN 0.6710618495187964 END))<=((((t1.c1)IS NOT(t1.c0)), CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))))))) ORDER BY (('꿲')AND(t1.c1 COLLATE NOCASE)) DESC;
SELECT ALL * FROM t1 WHERE ((((((((t1.c0)GLOB(NULL)), ((t1.c1) NOTNULL), CASE t1.c1  WHEN t1.c1 THEN 0.6710618495187964 END))<((((t1.c1)IS NOT(t1.c0)), CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0)))))))AND((t1.c1 COLLATE BINARY IN (((t1.c0) IS TRUE)))))) ORDER BY ((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c1)<=(t1.c1)))))OR(7.5172127E8)) ASC;
SELECT * FROM t1 WHERE ((((((t1.c0)GLOB(NULL)), ((t1.c1) NOTNULL), CASE t1.c1  WHEN t1.c1 THEN 0.6710618495187964 END))<=((((t1.c1)IS NOT(t1.c0)), CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0))))))) ORDER BY (('꿲')AND(t1.c1 COLLATE NOCASE)) DESC;
SELECT ALL * FROM t1 WHERE ((((((((t1.c0)GLOB(NULL)), ((t1.c1) NOTNULL), CASE t1.c1  WHEN t1.c1 THEN 0.6710618495187964 END))<((((t1.c1)IS NOT(t1.c0)), CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, (((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c0)))))))AND((t1.c1 COLLATE BINARY IN (((t1.c0) IS TRUE)))))) ORDER BY ((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c1)<=(t1.c1)))))OR(7.5172127E8)) ASC;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS TEXT))=(NULL))) ORDER BY ((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1))) NOT BETWEEN ((- (t1.c0))) AND (t1.c0 COLLATE BINARY)), 0.7758026764197812 DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((CAST(t1.c0 AS TEXT))==(NULL)))AND(((((t1.c1, t1.c1, t1.c0, t1.c0, '1173737933'))>=((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1))) IN (CAST(t1.c0 AS BLOB)))))) ORDER BY ((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1))) NOT BETWEEN ((- (t1.c0))) AND (t1.c0 COLLATE BINARY)), 0.7758026764197812 DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS TEXT))=(NULL))) ORDER BY ((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1))) NOT BETWEEN ((- (t1.c0))) AND (t1.c0 COLLATE BINARY)), 0.7758026764197812 DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((CAST(t1.c0 AS TEXT))==(NULL)))AND(((((t1.c1, t1.c1, t1.c0, t1.c0, '1173737933'))>=((t1.c1, t1.c1, t1.c1, t1.c0, t1.c1))) IN (CAST(t1.c0 AS BLOB)))))) ORDER BY ((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))AND(t1.c1))) NOT BETWEEN ((- (t1.c0))) AND (t1.c0 COLLATE BINARY)), 0.7758026764197812 DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (NULLIF(DISTINCT ((t1.c0)*(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) ORDER BY ((1959582173) NOT NULL)  NULLS FIRST, ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))&(((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))) ASC;
SELECT * FROM t1 WHERE (NULLIF(DISTINCT ((t1.c0)*(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) ORDER BY ((0X74ccd9dd) NOT NULL)  NULLS FIRST, ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))&(((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))) ASC;
SELECT ALL * FROM t1 WHERE (NULLIF(DISTINCT ((t1.c0)*(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) ORDER BY ((1959582173) NOT NULL)  NULLS FIRST, ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))&(((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))) ASC;
SELECT * FROM t1 WHERE (NULLIF(DISTINCT ((t1.c0)*(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) ORDER BY ((0X74ccd9dd) NOT NULL)  NULLS FIRST, ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))&(((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))) ASC;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1 IN (t1.c0))) NOT NULL));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c1 IN (t1.c0))) NOT NULL))AND((- (t1.c1))))) ORDER BY t1.c1 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE BINARY) ORDER BY (((t1.c0)GLOB(t1.c0)) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), 0.1930175036968944 COLLATE BINARY)) DESC  NULLS FIRST, (((~ (t1.c1)))||(CAST(t1.c0 AS NUMERIC))), t1.c0 DESC  NULLS FIRST, (((t1.c0 IN (t1.c1))) NOT NULL)  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE BINARY)AND(CAST(t1.c0 AS NUMERIC)))) ORDER BY (((t1.c0)GLOB(t1.c0)) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), 0.1930175036968944 COLLATE BINARY)) DESC  NULLS FIRST, (((~ (t1.c1)))||(CAST(t1.c0 AS NUMERIC))), t1.c0 DESC  NULLS FIRST, (((t1.c0 IN (t1.c1))) NOT NULL)  NULLS FIRST LIMIT 3;
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c0)%(t1.c1))) BETWEEN (((t1.c0)<=(t1.c1))) AND (t1.c0))) ORDER BY (((t1.c0)AND(t1.c1)) IN ())  NULLS FIRST, ((((t1.c0)AND(t1.c1)))AND(t1.c0)) COLLATE RTRIM;
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c0)%(t1.c1))) BETWEEN (((t1.c0)=(t1.c1))) AND (t1.c0))) ORDER BY (((t1.c0)AND(t1.c1)) IN ())  NULLS FIRST, ((((t1.c0)AND(t1.c1)))AND(t1.c0)) COLLATE RTRIM LIMIT 0;
SELECT MAX(t1.c0) FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)%(((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)%(((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))))AND(CASE WHEN ((t1.c1)<=(t1.c0)) THEN t1.c0 COLLATE NOCASE END))) LIMIT 1 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))))AND(((t1.c0)AND(t1.c0)))))AND(CAST(t1.c0 AS INTEGER)))) LIMIT 0X1;
SELECT * FROM t1 WHERE (((((t1.c0) IS FALSE))OR(CAST(t1.c0 AS INTEGER)))) ORDER BY CASE t1.c0  WHEN t1.c1 THEN x'' COLLATE NOCASE END DESC  NULLS FIRST, (+ ((((0Xffffffffdcc78f39))=((NULL))))) DESC;
SELECT ALL * FROM t1 WHERE (((((t1.c0) IS FALSE))OR(CAST(t1.c0 AS INTEGER)))) ORDER BY CASE t1.c0  WHEN t1.c1 THEN x'' COLLATE NOCASE END DESC  NULLS FIRST, (+ ((((0xffffffffdcc78f39))==((NULL))))) DESC LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((((0.3801670973366774)AND(((t1.c0) BETWEEN (t1.c1) AND (0Xffffffffeca2c2bf)))))OR((t1.c1 IN (t1.c1, t1.c0))))) ORDER BY CASE t1.c0  WHEN t1.c1 THEN x'' COLLATE NOCASE END DESC  NULLS FIRST, (+ ((((-590901447))==((NULL))))) DESC LIMIT 0;
SELECT * FROM t1 WHERE (((((t1.c0) IS FALSE))OR(CAST(t1.c0 AS INTEGER)))) ORDER BY CASE t1.c0  WHEN t1.c1 THEN x'' COLLATE NOCASE END DESC  NULLS FIRST, (+ ((((0Xffffffffdcc78f39))=((NULL))))) DESC;
SELECT ALL * FROM t1 WHERE (((((t1.c0) IS FALSE))OR(CAST(t1.c0 AS INTEGER)))) ORDER BY CASE t1.c0  WHEN t1.c1 THEN x'' COLLATE NOCASE END DESC  NULLS FIRST, (+ ((((0xffffffffdcc78f39))==((NULL))))) DESC LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((((0.3801670973366774)AND(((t1.c0) BETWEEN (t1.c1) AND (0Xffffffffeca2c2bf)))))OR((t1.c1 IN (t1.c1, t1.c0))))) ORDER BY CASE t1.c0  WHEN t1.c1 THEN x'' COLLATE NOCASE END DESC  NULLS FIRST, (+ ((((-590901447))==((NULL))))) DESC LIMIT 0;
SELECT * FROM t1 WHERE (((((((((((((t1.c0)IS(t1.c0)))OR(((t1.c1) ISNULL))))AND((t1.c1 IN (t1.c1)))))AND((NOT (t1.c1)))))OR(((t1.c0)+(t1.c1)))))OR((t1.c1 IN (t1.c0, t1.c1)))));
SELECT * FROM t1 WHERE (((((((((((((((t1.c0)IS(t1.c0)))OR(((t1.c1) ISNULL))))AND((t1.c1 IN (t1.c1)))))AND((NOT (t1.c1)))))OR(((t1.c0)+(t1.c1)))))OR((t1.c1 IN (t1.c0, t1.c1)))))AND(CASE ((x'')<(t1.c1))  WHEN CASE t1.c0  WHEN t1.c0 THEN '-1964763177' ELSE '76688209' END THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) ELSE LENGTH(t1.c0) END))) ORDER BY (('') NOT BETWEEN (((t1.c0) IS TRUE)) AND (((t1.c1)-(t1.c1)))) ASC, ((((t1.c0)*(t1.c0)))/(((t1.c0) NOT NULL))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((((((((t1.c0)IS(t1.c0)))OR(((t1.c1) ISNULL))))AND((t1.c1 IN (t1.c1)))))AND((NOT (t1.c1)))))OR(((t1.c0)+(t1.c1)))))OR((t1.c1 IN (t1.c0, t1.c1)))));
SELECT * FROM t1 WHERE (((((((((((((((t1.c0)IS(t1.c0)))OR(((t1.c1) ISNULL))))AND((t1.c1 IN (t1.c1)))))AND((NOT (t1.c1)))))OR(((t1.c0)+(t1.c1)))))OR((t1.c1 IN (t1.c0, t1.c1)))))AND(CASE ((x'')<(t1.c1))  WHEN CASE t1.c0  WHEN t1.c0 THEN '-1964763177' ELSE '76688209' END THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) ELSE LENGTH(t1.c0) END))) ORDER BY (('') NOT BETWEEN (((t1.c0) IS TRUE)) AND (((t1.c1)-(t1.c1)))) ASC, ((((t1.c0)*(t1.c0)))/(((t1.c0) NOT NULL))) ASC  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE (((t1.c0) NOT BETWEEN (CASE x'22ea'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END) AND (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END))) ORDER BY (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((TRIM(t1.c0), t1.c1 COLLATE BINARY, LOWER(DISTINCT t1.c1))) AND ((t1.c0 COLLATE RTRIM, DATE(t1.c0, t1.c1, t1.c0, t1.c0, t1.c0, t1.c1), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))  NULLS LAST, (t1.c0 COLLATE BINARY IN (((t1.c0) IS TRUE)));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (CASE x'22ea'  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END) AND (CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))AND((('-208856384') NOT BETWEEN (CAST(t1.c0 AS REAL)) AND (CAST(t1.c1 AS REAL)))))) ORDER BY (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((TRIM(t1.c0), t1.c1 COLLATE BINARY, LOWER(DISTINCT t1.c1))) AND ((t1.c0 COLLATE RTRIM, DATE(t1.c0, t1.c1, t1.c0, t1.c0, t1.c0, t1.c1), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))  NULLS LAST, (t1.c0 COLLATE BINARY IN (((t1.c0) IS TRUE))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (CASE WHEN (NOT (t1.c1)) THEN ((t1.c1)<=(t1.c0)) END) ORDER BY ((t1.c0) NOT NULL)  NULLS LAST, ((t1.c1 COLLATE NOCASE)LIKE((((t1.c1, t1.c1))!=((t1.c1, t1.c1)))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN (NOT (t1.c1)) THEN ((t1.c1)<=(t1.c0)) END)AND(CAST(x'd1' AS NUMERIC)))) ORDER BY ((CAST('1874530868' AS TEXT))/(x'9fff5586')) LIMIT 0;
SELECT ALL * FROM t1 WHERE (CASE WHEN (NOT (t1.c1)) THEN ((t1.c1)<=(t1.c0)) END) ORDER BY ((t1.c0) NOT NULL)  NULLS LAST, ((t1.c1 COLLATE NOCASE)LIKE((((t1.c1, t1.c1))!=((t1.c1, t1.c1)))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN (NOT (t1.c1)) THEN ((t1.c1)<=(t1.c0)) END)AND(CAST(x'd1' AS NUMERIC)))) ORDER BY ((CAST('1874530868' AS TEXT))/(x'9fff5586')) LIMIT 0;
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))|((('0.1930175036968944') ISNULL))));
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))|((('0.1930175036968944') ISNULL)))) ORDER BY ((((t1.c0) NOTNULL))/(((t1.c1)GLOB(t1.c0)))), ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) NOT NULL)  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1))) BETWEEN (t1.c1) AND (((t1.c1)%(t1.c0))))) ORDER BY ((((t1.c0) NOTNULL))/(((t1.c1)GLOB(t1.c0)))), ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) NOT NULL)  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))|((('0.1930175036968944') ISNULL))));
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))|((('0.1930175036968944') ISNULL)))) ORDER BY ((((t1.c0) NOTNULL))/(((t1.c1)GLOB(t1.c0)))), ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) NOT NULL)  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c1))) BETWEEN (t1.c1) AND (((t1.c1)%(t1.c0))))) ORDER BY ((((t1.c0) NOTNULL))/(((t1.c1)GLOB(t1.c0)))), ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) NOT NULL)  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((t1.c1 IN ()));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((t1.c1 IN ()))AND(((((t1.c0)|(t1.c0)))IS((t1.c1 IN ())))))) ORDER BY ((LIKELY(DISTINCT t1.c1))<(((t1.c0)=(t1.c1)))) DESC  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c1))) COLLATE NOCASE DESC  NULLS LAST, (((t1.c1))>=((t1.c1 COLLATE RTRIM))) DESC;
SELECT ALL * FROM t1 WHERE (((NOT (t1.c1)) IN (t1.c1 COLLATE RTRIM)));
SELECT * FROM t1 WHERE (((((NOT (t1.c1)) IN (t1.c1 COLLATE RTRIM)))AND(CASE '2109462779'  WHEN ((t1.c0) IS FALSE) THEN (t1.c0 IN (t1.c1)) WHEN HEX(DISTINCT t1.c0) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END END))) LIMIT 1 INTERSECT SELECT * FROM t1 WHERE ((((((t1.c1, t1.c1, t1.c0, t1.c0))=((t1.c1, t1.c1, t1.c1, t1.c1))))==((t1.c0 IN ())))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((NOT (t1.c1)) IN (t1.c1 COLLATE RTRIM)));
SELECT * FROM t1 WHERE (((((NOT (t1.c1)) IN (t1.c1 COLLATE RTRIM)))AND(CASE '2109462779'  WHEN ((t1.c0) IS FALSE) THEN (t1.c0 IN (t1.c1)) WHEN HEX(DISTINCT t1.c0) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END END))) LIMIT 1 INTERSECT SELECT * FROM t1 WHERE ((((((t1.c1, t1.c1, t1.c0, t1.c0))=((t1.c1, t1.c1, t1.c1, t1.c1))))==((t1.c0 IN ())))) LIMIT 0X1;
SELECT MAX(t1.c1) FROM t1 WHERE (CAST(COALESCE(t1.c0, t1.c1, t1.c0, t1.c0) AS INTEGER)) ORDER BY (CASE 0.6931687844432638  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END IN ((t1.c0 IN ()))) DESC  NULLS FIRST, ((t1.c1) IS TRUE) COLLATE RTRIM ASC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CAST(COALESCE(t1.c0, t1.c1, t1.c0, t1.c0) AS INTEGER))AND(CASE CASE t1.c1  WHEN t1.c0 THEN t1.c1 END  WHEN ((t1.c1) IS TRUE) THEN ((t1.c1) IS FALSE) WHEN LIKE(t1.c1, t1.c1) THEN ((1.173737933E9)<>(t1.c1)) ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))AND(((t1.c1)=(t1.c1)))) ASC  NULLS LAST, ((((t1.c1)GLOB(t1.c1)))>=((t1.c1 IN ()))) ASC;
SELECT COUNT(*) FROM t1 WHERE ((((- (t1.c1)))<(((t1.c0)IS(t1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c1)))<(((t1.c0)IS(t1.c1))))) ORDER BY ((((t1.c0)OR(t1.c1)))OR(t1.c0)) COLLATE NOCASE ASC  NULLS FIRST, (((t1.c0) IS TRUE) IN (t1.c0, ((t1.c0) NOTNULL))) ASC LIMIT 2 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS TEXT)) NOT BETWEEN ((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) AND (CAST(t1.c1 AS BLOB)))) ORDER BY ((((t1.c0)OR(t1.c1)))OR(t1.c0)) COLLATE NOCASE ASC  NULLS FIRST, (((t1.c0) IS TRUE) IN (t1.c0, ((t1.c0) NOTNULL))) ASC LIMIT 0X2;
SELECT * FROM t1 WHERE ((((t1.c1)AND(t1.c1)) IN (((t1.c0)*(t1.c0)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) ORDER BY ((((((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))%(CAST(t1.c1 AS TEXT)));
SELECT ALL * FROM t1 WHERE ((((t1.c1)AND(t1.c1)) IN (((t1.c0)*(t1.c0)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) ORDER BY ((((((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))%(CAST(t1.c1 AS TEXT))) INTERSECT SELECT * FROM t1 WHERE (CASE WHEN ((t1.c1)/(t1.c1)) THEN UNLIKELY(DISTINCT t1.c0) WHEN ((t1.c1)GLOB(0.5100009919321724)) THEN t1.c0 COLLATE RTRIM ELSE (t1.c0 IN (t1.c1)) END) ORDER BY ((((((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))%(CAST(t1.c1 AS TEXT)));
SELECT * FROM t1 WHERE ((((t1.c1)AND(t1.c1)) IN (((t1.c0)*(t1.c0)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) ORDER BY ((((((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))%(CAST(t1.c1 AS TEXT)));
SELECT ALL * FROM t1 WHERE ((((t1.c1)AND(t1.c1)) IN (((t1.c0)*(t1.c0)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) ORDER BY ((((((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))%(CAST(t1.c1 AS TEXT))) INTERSECT SELECT * FROM t1 WHERE (CASE WHEN ((t1.c1)/(t1.c1)) THEN UNLIKELY(DISTINCT t1.c0) WHEN ((t1.c1)GLOB(0.5100009919321724)) THEN t1.c0 COLLATE RTRIM ELSE (t1.c0 IN (t1.c1)) END) ORDER BY ((((((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))%(CAST(t1.c1 AS TEXT)));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((- (t1.c0)))OR((t1.c0 IN ()))))AND(((((NULL)AND(0.7466536057175113)))AND(t1.c1)))))AND(((t1.c0)>=(t1.c1)))))OR(((t1.c1) ISNULL)))) ORDER BY UPPER(((t1.c0)*(t1.c1)))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((((((((- (t1.c0)))OR((t1.c0 IN ()))))AND(((((NULL)AND(0.7466536057175113)))AND(t1.c1)))))AND(((t1.c0)=(t1.c1)))))OR(((t1.c1) ISNULL)))) ORDER BY (((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))<((t1.c0))) DESC, ((CHAR(t1.c0, '', '1408534150', 0.9532317774099616)) BETWEEN (((t1.c0) NOT NULL)) AND (t1.c1 COLLATE BINARY)) DESC;
SELECT * FROM t1 WHERE (CAST(((t1.c1)/(t1.c0)) AS INTEGER)) ORDER BY (t1.c0 COLLATE RTRIM IN ((t1.c1 IN (t1.c0)), (~ (t1.c1))))  NULLS FIRST, (- (ABS(t1.c0)));
SELECT ALL * FROM t1 WHERE (((CAST(((t1.c1)/(t1.c0)) AS INTEGER))AND(x'9911'))) ORDER BY (t1.c0 COLLATE RTRIM IN ((t1.c1 IN (t1.c0)), (~ (t1.c1))))  NULLS FIRST, (- (ABS(t1.c0)));
SELECT * FROM t1 WHERE (CAST(((t1.c1)/(t1.c0)) AS INTEGER)) ORDER BY (t1.c0 COLLATE RTRIM IN ((t1.c1 IN (t1.c0)), (~ (t1.c1))))  NULLS FIRST, (- (ABS(t1.c0)));
SELECT ALL * FROM t1 WHERE (((CAST(((t1.c1)/(t1.c0)) AS INTEGER))AND(x'9911'))) ORDER BY (t1.c0 COLLATE RTRIM IN ((t1.c1 IN (t1.c0)), (~ (t1.c1))))  NULLS FIRST, (- (ABS(t1.c0)));
SELECT * FROM t1 WHERE ((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END IN (((t1.c0) ISNULL), ((t1.c1) NOT NULL)))) ORDER BY 0.033125771602288134, CASE STRFTIME(t1.c1, t1.c1, t1.c0, t1.c1, t1.c0)  WHEN (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, NULL)) AND ((t1.c0, 1.486003871E9, t1.c0))) THEN ((t1.c1) IS TRUE) ELSE t1.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END IN (((t1.c0) ISNULL), ((t1.c1) NOT NULL)))) ORDER BY 0.033125771602288134, CASE STRFTIME(t1.c1, t1.c1, t1.c0, t1.c1, t1.c0)  WHEN (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, NULL)) AND ((t1.c0, 1.486003871E9, t1.c0))) THEN ((t1.c1) IS TRUE) ELSE t1.c0 COLLATE NOCASE END  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND(x'')))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(TYPEOF(DISTINCT t1.c1))))OR(CHANGES()))) ORDER BY 0.033125771602288134, CASE STRFTIME(t1.c1, t1.c1, t1.c0, t1.c1, t1.c0)  WHEN (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, NULL)) AND ((t1.c0, 1.486003871E9, t1.c0))) THEN ((t1.c1) IS TRUE) ELSE t1.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT * FROM t1 WHERE ((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END IN (((t1.c0) ISNULL), ((t1.c1) NOT NULL)))) ORDER BY 0.033125771602288134, CASE STRFTIME(t1.c1, t1.c1, t1.c0, t1.c1, t1.c0)  WHEN (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, NULL)) AND ((t1.c0, 1.486003871E9, t1.c0))) THEN ((t1.c1) IS TRUE) ELSE t1.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END IN (((t1.c0) ISNULL), ((t1.c1) NOT NULL)))) ORDER BY 0.033125771602288134, CASE STRFTIME(t1.c1, t1.c1, t1.c0, t1.c1, t1.c0)  WHEN (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, NULL)) AND ((t1.c0, 1.486003871E9, t1.c0))) THEN ((t1.c1) IS TRUE) ELSE t1.c0 COLLATE NOCASE END  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND(x'')))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(TYPEOF(DISTINCT t1.c1))))OR(CHANGES()))) ORDER BY 0.033125771602288134, CASE STRFTIME(t1.c1, t1.c1, t1.c0, t1.c1, t1.c0)  WHEN (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, NULL)) AND ((t1.c0, 1.486003871E9, t1.c0))) THEN ((t1.c1) IS TRUE) ELSE t1.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c1, t1.c0, t1.c0, t1.c1, t1.c0))>=((t1.c0, t1.c0, x'08', t1.c0, t1.c0))) IN ()));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1, t1.c0, t1.c0, t1.c1, t1.c0))>=((t1.c0, t1.c0, x'08', t1.c0, t1.c0))) IN ())) LIMIT 2;
SELECT * FROM t1 WHERE (((((t1.c1, t1.c0, t1.c0, t1.c1, t1.c0))>=((t1.c0, t1.c0, x'08', t1.c0, t1.c0))) IN ()));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1, t1.c0, t1.c0, t1.c1, t1.c0))>=((t1.c0, t1.c0, x'08', t1.c0, t1.c0))) IN ())) LIMIT 2;
SELECT * FROM t1 WHERE (((((t1.c0)|(t1.c0)))+(json_array(t1.c0, t1.c1))));
SELECT ALL * FROM t1 WHERE (((((t1.c0)|(t1.c0)))+(json_array(t1.c0, t1.c1)))) LIMIT 1 INTERSECT SELECT * FROM t1 WHERE (t1.c1) LIMIT 1;
SELECT * FROM t1 WHERE (((((t1.c0)|(t1.c0)))+(json_array(t1.c0, t1.c1))));
SELECT ALL * FROM t1 WHERE (((((t1.c0)|(t1.c0)))+(json_array(t1.c0, t1.c1)))) LIMIT 1 INTERSECT SELECT * FROM t1 WHERE (t1.c1) LIMIT 1;
SELECT COUNT(*) FROM t1 WHERE (CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN (+ (NULL)) THEN ((t1.c0)|(t1.c0)) WHEN ((x'') BETWEEN (t1.c0) AND (t1.c0)) THEN x'' WHEN (((t1.c1))=((t1.c1))) THEN ((((t1.c0)AND(t1.c0)))AND(t1.c1)) WHEN 's4' THEN '-2130733186' ELSE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) END);
SELECT COUNT(*) FROM t1 WHERE (((CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN (+ (NULL)) THEN ((t1.c0)|(t1.c0)) WHEN ((x'') BETWEEN (t1.c0) AND (t1.c0)) THEN x'' WHEN (((t1.c1))=((t1.c1))) THEN ((((t1.c0)AND(t1.c0)))AND(t1.c1)) WHEN 's4' THEN '-2130733186' ELSE ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) END)AND(((t1.c0)&((t1.c0 IN (t1.c1))))))) ORDER BY (NOT ((t1.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((((NULL) ISNULL))!=((+ (t1.c0))))) ORDER BY ((t1.c0)<=(0X3fb228c1)) COLLATE NOCASE;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((NULL) ISNULL))<((+ (t1.c0))))) ORDER BY (((((- (t1.c0)))AND(((t1.c0)>=(t1.c0)))))OR(((0.04266600867500836)<<(t1.c0)))) DESC, CASE WHEN CAST(t1.c1 AS NUMERIC) THEN (~ (t1.c1)) WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN (t1.c1 IN ()) WHEN ((((((((NULL)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) THEN ((t1.c1)<(t1.c1)) ELSE t1.c0 COLLATE NOCASE END  NULLS FIRST LIMIT 5 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 NOT INDEXED WHERE (((((t1.c0)IS NOT(t1.c1))) NOT NULL)) ORDER BY (((((- (t1.c0)))AND(((t1.c0)>=(t1.c0)))))OR(((0.04266600867500836)<<(t1.c0)))) DESC, CASE WHEN CAST(t1.c1 AS NUMERIC) THEN (~ (t1.c1)) WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN (t1.c1 IN ()) WHEN ((((((((NULL)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) THEN ((t1.c1)<(t1.c1)) ELSE t1.c0 COLLATE NOCASE END  NULLS FIRST LIMIT 5;
SELECT * FROM t1 WHERE (((((t1.c0)GLOB(t1.c0))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (HEX(t1.c0)))) ORDER BY ((((t1.c0 IN ())))>=((t1.c0)))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)GLOB(t1.c0))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (HEX(t1.c0)))) ORDER BY ((((t1.c0 IN ())))>=((t1.c0)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((('')OR(((t1.c0)&(t1.c1)))))OR(CAST(']B4佈8昖DR' AS TEXT))))AND(((t1.c0) NOT NULL)))) ORDER BY ((((t1.c0 IN ())))>=((t1.c0)))  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c0)GLOB(t1.c0))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (HEX(t1.c0)))) ORDER BY ((((t1.c0 IN ())))>=((t1.c0)))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)GLOB(t1.c0))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (HEX(t1.c0)))) ORDER BY ((((t1.c0 IN ())))>=((t1.c0)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((('')OR(((t1.c0)&(t1.c1)))))OR(CAST(']B4佈8昖DR' AS TEXT))))AND(((t1.c0) NOT NULL)))) ORDER BY ((((t1.c0 IN ())))>=((t1.c0)))  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (LIKELY((t1.c0 IN ())));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((LIKELY((t1.c0 IN ())))AND(LIKELIHOOD(DISTINCT ((t1.c1)>('㧰]룊(RJPi')), ((((t1.c0)AND(t1.c0)))AND(t1.c0)))))) INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (('|[' IN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE RTRIM)<(((((t1.c0)AND(t1.c0)))AND(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE RTRIM)<(((((t1.c0)AND(t1.c0)))AND(t1.c1))))) ORDER BY ((((((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(((t1.c1)GLOB(t1.c0)))))OR(((t1.c1)IS NOT(t1.c0)))))OR('1083185990' COLLATE RTRIM)))AND(((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0))<=((t1.c0)))) NOT BETWEEN (((t1.c0)-(t1.c0))) AND (((t1.c1) IS FALSE)))) ORDER BY ((((((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(((t1.c1)GLOB(t1.c0)))))OR(((t1.c1)IS NOT(t1.c0)))))OR('1083185990' COLLATE RTRIM)))AND(((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1))));
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE RTRIM)<(((((t1.c0)AND(t1.c0)))AND(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE RTRIM)<(((((t1.c0)AND(t1.c0)))AND(t1.c1))))) ORDER BY ((((((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(((t1.c1)GLOB(t1.c0)))))OR(((t1.c1)IS NOT(t1.c0)))))OR('1083185990' COLLATE RTRIM)))AND(((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0))<=((t1.c0)))) NOT BETWEEN (((t1.c0)-(t1.c0))) AND (((t1.c1) IS FALSE)))) ORDER BY ((((((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(((t1.c1)GLOB(t1.c0)))))OR(((t1.c1)IS NOT(t1.c0)))))OR('1083185990' COLLATE RTRIM)))AND(((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1))));
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((+ (((t1.c1) NOT BETWEEN (x'') AND (t1.c1))))) ORDER BY x'', SQLITE_COMPILEOPTION_GET(((t1.c1)>=(t1.c1))) DESC  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE ((+ (((t1.c1) NOT BETWEEN (x'') AND (t1.c1))))) ORDER BY x'', SQLITE_COMPILEOPTION_GET(((t1.c1)>=(t1.c1))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c0)))<=((NOT (t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c0)))<((NOT (t1.c0))))) ORDER BY t1.c0 COLLATE RTRIM, UPPER(((t1.c0) NOT BETWEEN (x'6f27') AND (t1.c0))) LIMIT 0x3 INTERSECT SELECT ALL * FROM t1 WHERE (((t1.c1) NOT BETWEEN (LOWER(DISTINCT t1.c1)) AND (CASE t1.c1  WHEN t1.c0 THEN t1.c0 END))) ORDER BY t1.c0 COLLATE RTRIM, UPPER(((t1.c0) NOT BETWEEN (x'6f27') AND (t1.c0))) LIMIT 0x3;
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c0)))<=((NOT (t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c0)))<((NOT (t1.c0))))) ORDER BY t1.c0 COLLATE RTRIM, UPPER(((t1.c0) NOT BETWEEN (x'6f27') AND (t1.c0))) LIMIT 0x3 INTERSECT SELECT ALL * FROM t1 WHERE (((t1.c1) NOT BETWEEN (LOWER(DISTINCT t1.c1)) AND (CASE t1.c1  WHEN t1.c0 THEN t1.c0 END))) ORDER BY t1.c0 COLLATE RTRIM, UPPER(((t1.c0) NOT BETWEEN (x'6f27') AND (t1.c0))) LIMIT 0x3;
SELECT MIN(t1.c0) FROM t1 WHERE (0X708b9064);
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (1888194660) ORDER BY (NOT (((t1.c1)IS NOT(t1.c0)))) ASC  NULLS LAST, (NOT (((x'6b')==(t1.c1))));
SELECT * FROM t1 WHERE ((((1734104191 IN ()))IS(((t1.c0) ISNULL))));
SELECT DISTINCT * FROM t1 WHERE ((((((0X675c547f IN ()))IS(((t1.c0) ISNULL))))AND(CAST('T~' AS REAL)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c0 AS REAL))AND(LIKELIHOOD(t1.c1, t1.c1))))OR(((t1.c0) NOT NULL))));
SELECT * FROM t1 WHERE ((((1734104191 IN ()))IS(((t1.c0) ISNULL))));
SELECT DISTINCT * FROM t1 WHERE ((((((0X675c547f IN ()))IS(((t1.c0) ISNULL))))AND(CAST('T~' AS REAL)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c0 AS REAL))AND(LIKELIHOOD(t1.c1, t1.c1))))OR(((t1.c0) NOT NULL))));
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY json_array(((t1.c0) BETWEEN (t1.c1) AND (x'70410d')), ((t1.c0)%(t1.c1))) DESC;
SELECT ALL * FROM t1 WHERE (((t1.c0 IN ()) IN ()));
SELECT * FROM t1 WHERE (((((t1.c0 IN ()) IN ()))AND(((CAST(t1.c1 AS INTEGER))>=(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))))))) INTERSECT SELECT * FROM t1 WHERE (((SQLITE_COMPILEOPTION_GET(t1.c0)) ISNULL));
SELECT ALL * FROM t1 WHERE (((t1.c0 IN ()) IN ()));
SELECT * FROM t1 WHERE (((((t1.c0 IN ()) IN ()))AND(((CAST(t1.c1 AS INTEGER))>=(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))))))) INTERSECT SELECT * FROM t1 WHERE (((SQLITE_COMPILEOPTION_GET(t1.c0)) ISNULL));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE NOCASE)||(((NULL)>(t1.c0)))));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE NOCASE)||(((NULL)>(t1.c0))))) ORDER BY (((((t1.c0 IN (t1.c1)))OR(((t1.c1)IS(t1.c1)))))OR('/')) INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY (((((t1.c0 IN (t1.c1)))OR(((t1.c1)IS(t1.c1)))))OR('/'));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0)) BETWEEN ((((t1.c1) NOT NULL))) AND ((NULL))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c0)) BETWEEN ((((t1.c1) NOT NULL))) AND ((NULL))))AND((((t1.c0, t1.c1)) NOT BETWEEN (((- (t1.c1)), LIKELY(t1.c1))) AND ((t1.c1, 601807651)))))) LIMIT 0x3 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((((((t1.c1)>>(t1.c0)))OR(CAST(t1.c0 AS REAL))))AND((t1.c0 IN (t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1))))) LIMIT 0x3;
SELECT * FROM t1 WHERE (((((CASE '0.25704327255450043'  WHEN '709529472' THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN 0.5052898022644137 ELSE t1.c1 END)OR(((t1.c1)<(t1.c1)))))AND(t1.c0 COLLATE BINARY))) ORDER BY ((((((0x43c7806d)AND((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1))))))OR(t1.c0)))OR((t1.c0 IN (t1.c0)))), '' ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((CASE '0.25704327255450043'  WHEN '709529472' THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN 0.5052898022644137 ELSE t1.c1 END)OR(((t1.c1)<(t1.c1)))))AND(t1.c0 COLLATE BINARY))) ORDER BY (~ (t1.c1 COLLATE RTRIM)) ASC  NULLS LAST, CASE ((t1.c1) NOT NULL)  WHEN ((t1.c0)>>(t1.c1)) THEN (((t1.c0, -3.05989446E8))=((t1.c1, t1.c0))) END DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- (t1.c1))) ORDER BY (~ (t1.c1 COLLATE RTRIM)) ASC  NULLS LAST, CASE ((t1.c1) NOT NULL)  WHEN ((t1.c0)>>(t1.c1)) THEN (((t1.c0, -3.05989446E8))=((t1.c1, t1.c0))) END DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((CASE '0.25704327255450043'  WHEN '709529472' THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN 0.5052898022644137 ELSE t1.c1 END)OR(((t1.c1)<(t1.c1)))))AND(t1.c0 COLLATE BINARY))) ORDER BY ((((((0x43c7806d)AND((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1))))))OR(t1.c0)))OR((t1.c0 IN (t1.c0)))), '' ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((CASE '0.25704327255450043'  WHEN '709529472' THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN 0.5052898022644137 ELSE t1.c1 END)OR(((t1.c1)<(t1.c1)))))AND(t1.c0 COLLATE BINARY))) ORDER BY (~ (t1.c1 COLLATE RTRIM)) ASC  NULLS LAST, CASE ((t1.c1) NOT NULL)  WHEN ((t1.c0)>>(t1.c1)) THEN (((t1.c0, -3.05989446E8))=((t1.c1, t1.c0))) END DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- (t1.c1))) ORDER BY (~ (t1.c1 COLLATE RTRIM)) ASC  NULLS LAST, CASE ((t1.c1) NOT NULL)  WHEN ((t1.c0)>>(t1.c1)) THEN (((t1.c0, -3.05989446E8))=((t1.c1, t1.c0))) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((('7') NOTNULL)) ORDER BY (((t1.c0 IN (t1.c0, t1.c0)))||(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN 0.9203592602134792 ELSE x'452a' END)) DESC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((('7') NOTNULL)) ORDER BY ((('1741959603', CASE WHEN '	' THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))!=((t1.c0, ((t1.c0)OR(t1.c1)))));
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((+ (LOWER(DISTINCT t1.c1))));
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((+ (LOWER(DISTINCT t1.c1)))) ORDER BY (((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c1)))) ISNULL), ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) NOT BETWEEN (((t1.c0)GLOB(t1.c1))) AND (CAST(t1.c0 AS TEXT)))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((LOWER(DISTINCT t1.c0), ((t1.c0)-(t1.c0))))>((((t1.c0)IS(t1.c0)), ((t1.c1) NOTNULL))))) ORDER BY (((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c1)))) ISNULL), ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) NOT BETWEEN (((t1.c0)GLOB(t1.c1))) AND (CAST(t1.c0 AS TEXT)))  NULLS FIRST LIMIT 0X0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((- ((+ (t1.c1)))));
SELECT MAX(t1.c1) FROM t1 WHERE ((- ((+ (t1.c1))))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((((t1.c1)-(t1.c1))) NOT BETWEEN ((t1.c1 IN (t1.c1))) AND (t1.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1)-(t1.c1))) NOT BETWEEN ((t1.c1 IN (t1.c1))) AND (t1.c1 COLLATE RTRIM)))AND(t1.c1))) ORDER BY ((((((NULL) IS FALSE))AND(CAST(t1.c0 AS TEXT))))AND(CASE t1.c0  WHEN t1.c1 THEN 0.9587347711385222 END)), t1.c0 ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c1)-(t1.c1))) NOT BETWEEN ((t1.c1 IN (t1.c1))) AND (t1.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1)-(t1.c1))) NOT BETWEEN ((t1.c1 IN (t1.c1))) AND (t1.c1 COLLATE RTRIM)))AND(t1.c1))) ORDER BY ((((((NULL) IS FALSE))AND(CAST(t1.c0 AS TEXT))))AND(CASE t1.c0  WHEN t1.c1 THEN 0.9587347711385222 END)), t1.c0 ASC  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY UNICODE(((t1.c1)=(t1.c1))) DESC, (((t1.c1 IN ())) IS TRUE)  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY UNICODE(((t1.c1)==(t1.c1))) DESC, (((t1.c1 IN ())) IS TRUE)  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY UNICODE(((t1.c1)=(t1.c1))) DESC, (((t1.c1 IN ())) IS TRUE)  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY UNICODE(((t1.c1)==(t1.c1))) DESC, (((t1.c1 IN ())) IS TRUE)  NULLS LAST;
SELECT * FROM t1 WHERE (0.2683847428507665 COLLATE NOCASE);
SELECT * FROM t1 WHERE (((0.2683847428507665 COLLATE NOCASE)AND((0.8194913083691164 IN (CASE WHEN '406543433' THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))))) ORDER BY ((((((((((((NULL)GLOB(t1.c1)))OR(((t1.c0)GLOB(t1.c1)))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((t1.c1 IN (t1.c1, t1.c1)))))AND(CAST(t1.c1 AS INTEGER))))AND(NULLIF(DISTINCT -365822975, t1.c0))), (CASE WHEN t1.c0 THEN t1.c1 END IN (((t1.c1)>(t1.c1)), '2103419619'));
SELECT * FROM t1 WHERE (0.2683847428507665 COLLATE NOCASE);
SELECT * FROM t1 WHERE (((0.2683847428507665 COLLATE NOCASE)AND((0.8194913083691164 IN (CASE WHEN '406543433' THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))))) ORDER BY ((((((((((((NULL)GLOB(t1.c1)))OR(((t1.c0)GLOB(t1.c1)))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((t1.c1 IN (t1.c1, t1.c1)))))AND(CAST(t1.c1 AS INTEGER))))AND(NULLIF(DISTINCT -365822975, t1.c0))), (CASE WHEN t1.c0 THEN t1.c1 END IN (((t1.c1)>(t1.c1)), '2103419619'));
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1)IS NOT(t1.c1)) AS REAL));
SELECT * FROM t1 WHERE (CAST(((t1.c1)IS NOT(t1.c1)) AS REAL)) ORDER BY SQLITE_COMPILEOPTION_GET(-1.6410412E7)  NULLS LAST LIMIT 0x2 INTERSECT SELECT * FROM t1 WHERE ((((t1.c0)) BETWEEN ((t1.c0)) AND (((~ (t1.c0)))))) ORDER BY SQLITE_COMPILEOPTION_GET(-1.6410412E7)  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c1)IS NOT(t1.c1)) AS REAL));
SELECT * FROM t1 WHERE (CAST(((t1.c1)IS NOT(t1.c1)) AS REAL)) ORDER BY SQLITE_COMPILEOPTION_GET(-1.6410412E7)  NULLS LAST LIMIT 0x2 INTERSECT SELECT * FROM t1 WHERE ((((t1.c0)) BETWEEN ((t1.c0)) AND (((~ (t1.c0)))))) ORDER BY SQLITE_COMPILEOPTION_GET(-1.6410412E7)  NULLS LAST LIMIT 0x2;
SELECT * FROM t1 WHERE ((((~ (t1.c1))) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE ((((~ (t1.c1))) IS TRUE)) ORDER BY CAST(t1.c1 AS INTEGER)  NULLS FIRST LIMIT 2;
SELECT * FROM t1 WHERE ((((~ (t1.c1))) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE ((((~ (t1.c1))) IS TRUE)) ORDER BY CAST(t1.c1 AS INTEGER)  NULLS FIRST LIMIT 2;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c0)IS(t1.c0)))||('v-%} ' COLLATE RTRIM))) ORDER BY (((t1.c1))<>(('an0'))) COLLATE BINARY, (t1.c1 IN ()) ASC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((((t1.c0)IS(t1.c0)))||('v-%} ' COLLATE RTRIM)))AND((t1.c0 IN ()) COLLATE NOCASE))) ORDER BY ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST, (~ (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))) ASC, CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END COLLATE RTRIM DESC  NULLS FIRST, ((((t1.c0)/(t1.c0))) IS TRUE) DESC  NULLS LAST INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (((((((t1.c0)OR(NULL)))AND(t1.c1)))<>(t1.c1 COLLATE BINARY))) ORDER BY ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST, (~ (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))) ASC, CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END COLLATE RTRIM DESC  NULLS FIRST, ((((t1.c0)/(t1.c0))) IS TRUE) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) AS TEXT)) ORDER BY CAST(((((t1.c0)OR(t1.c0)))AND(t1.c0)) AS REAL)  NULLS LAST, (((MIN('1703411045', t1.c0), CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))<=((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)), json_extract(t1.c1, t1.c0))))  NULLS LAST, ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))OR((NULL IN ('q')))) DESC, ((((t1.c0)<<(t1.c1)))-((t1.c0 IN ()))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) AS TEXT))AND((((t1.c0) IS TRUE) IN (((t1.c0) IS FALSE)))))) ORDER BY (NOT (0.6517050205833143)) DESC, (((NOT (t1.c0)))LIKE(((0.7060616909708795)LIKE(t1.c1)))) ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (x'322962') ORDER BY (NOT (0.6517050205833143)) DESC, (((NOT (t1.c0)))LIKE(((0.7060616909708795)LIKE(t1.c1)))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) AS TEXT)) ORDER BY CAST(((((t1.c0)OR(t1.c0)))AND(t1.c0)) AS REAL)  NULLS LAST, (((MIN('1703411045', t1.c0), CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))<=((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)), json_extract(t1.c1, t1.c0))))  NULLS LAST, ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))OR((NULL IN ('q')))) DESC, ((((t1.c0)<<(t1.c1)))-((t1.c0 IN ()))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) AS TEXT))AND((((t1.c0) IS TRUE) IN (((t1.c0) IS FALSE)))))) ORDER BY (NOT (0.6517050205833143)) DESC, (((NOT (t1.c0)))LIKE(((0.7060616909708795)LIKE(t1.c1)))) ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (x'322962') ORDER BY (NOT (0.6517050205833143)) DESC, (((NOT (t1.c0)))LIKE(((0.7060616909708795)LIKE(t1.c1)))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (CASE WHEN CAST(t1.c0 AS INTEGER) THEN t1.c0 WHEN ((x'f1') BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((0.35425045777259156) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c1)GLOB(t1.c1)) ELSE ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN CAST(t1.c0 AS INTEGER) THEN t1.c0 WHEN ((x'f1') BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((0.35425045777259156) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c1)GLOB(t1.c1)) ELSE ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END)AND(t1.c0))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) LIMIT 0x2;
SELECT * FROM t1 WHERE (CASE WHEN CAST(t1.c0 AS INTEGER) THEN t1.c0 WHEN ((x'f1') BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((0.35425045777259156) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c1)GLOB(t1.c1)) ELSE ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN CAST(t1.c0 AS INTEGER) THEN t1.c0 WHEN ((x'f1') BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) WHEN ((0.35425045777259156) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c1)GLOB(t1.c1)) ELSE ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END)AND(t1.c0))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) LIMIT 0x2;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY LIKELIHOOD((t1.c0 IN (t1.c1)), x'') ASC  NULLS LAST, (- ((NOT (t1.c0)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY LIKELIHOOD((t1.c0 IN (t1.c1)), x'') ASC  NULLS LAST, (- ((NOT (t1.c0)))) ASC  NULLS FIRST LIMIT 0x2;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY LIKELIHOOD((t1.c0 IN (t1.c1)), x'') ASC  NULLS LAST, (- ((NOT (t1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((- ((NOT (-1.628956291E9)))));
SELECT ALL * FROM t1 WHERE ((((- ((NOT (-1.628956291E9)))))AND(t1.c0))) LIMIT 0;
SELECT ALL * FROM t1 WHERE ((- ((NOT (-1.628956291E9)))));
SELECT ALL * FROM t1 WHERE ((((- ((NOT (-1.628956291E9)))))AND(t1.c0))) LIMIT 0;
SELECT ALL * FROM t1 WHERE ((- (((t1.c1)OR(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((- (((t1.c1)OR(t1.c1))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((~ (t1.c0))) NOT BETWEEN (((t1.c1) ISNULL)) AND (((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0))))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((- (((t1.c1)OR(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((- (((t1.c1)OR(t1.c1))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((~ (t1.c0))) NOT BETWEEN (((t1.c1) ISNULL)) AND (((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0))))) LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c1)AND(((((((((t1.c1) BETWEEN (NULL) AND (t1.c1)))AND(((((((((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))))) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (t1.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE (((t1.c0) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'c2' WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) AND (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))) ORDER BY ((((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)OR(((((((t1.c0)OR(t1.c0)))OR(-753276047)))AND(t1.c0)))))OR(((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(-7.47868847E8)))OR(t1.c1)))) ASC  NULLS LAST, ((((((t1.c1)AND(t1.c0)))OR(((((((((t1.c1)OR('8W9')))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'c2' WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) AND (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)))AND(CASE WHEN (NULL IN ()) THEN ((((((((t1.c0)AND(t1.c0)))AND('0.4745365058172778')))AND(t1.c1)))OR(t1.c1)) WHEN (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))) THEN CAST(t1.c0 AS NUMERIC) WHEN (((t1.c0, t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c1, NULL, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, t1.c1, t1.c1))) THEN ((t1.c1) ISNULL) END))) ORDER BY CASE ((t1.c0) NOTNULL)  WHEN ((t1.c1) NOT NULL) THEN (((t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c1))) END ASC LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE (t1.c1) ORDER BY CASE ((t1.c0) NOTNULL)  WHEN ((t1.c1) NOT NULL) THEN (((t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c1))) END ASC LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((t1.c0) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'c2' WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) AND (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))) ORDER BY ((((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)OR(((((((t1.c0)OR(t1.c0)))OR(-753276047)))AND(t1.c0)))))OR(((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(-7.47868847E8)))OR(t1.c1)))) ASC  NULLS LAST, ((((((t1.c1)AND(t1.c0)))OR(((((((((t1.c1)OR('8W9')))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'c2' WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) AND (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)))AND(CASE WHEN (NULL IN ()) THEN ((((((((t1.c0)AND(t1.c0)))AND('0.4745365058172778')))AND(t1.c1)))OR(t1.c1)) WHEN (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))) THEN CAST(t1.c0 AS NUMERIC) WHEN (((t1.c0, t1.c0, t1.c1, t1.c1)) BETWEEN ((t1.c1, NULL, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, t1.c1, t1.c1))) THEN ((t1.c1) ISNULL) END))) ORDER BY CASE ((t1.c0) NOTNULL)  WHEN ((t1.c1) NOT NULL) THEN (((t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c1))) END ASC LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE (t1.c1) ORDER BY CASE ((t1.c0) NOTNULL)  WHEN ((t1.c1) NOT NULL) THEN (((t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c1))) END ASC LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((((((t1.c0)AND(t1.c1)))OR(t1.c0)), CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END, (t1.c0 IN ()))) AND ((((t1.c1)||(t1.c1)), x'75c44fd4', ((((t1.c0)OR(t1.c0)))OR(t1.c1))))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND((((t1.c1)<=(t1.c1)) IN ((t1.c1 IN ())))))) ORDER BY (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((((((t1.c0)AND(t1.c1)))OR(t1.c0)), CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END, (t1.c0 IN ()))) AND ((((t1.c1)||(t1.c1)), x'75c44fd4', ((((t1.c0)OR(t1.c0)))OR(t1.c1))))) ASC  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (t1.c1) ORDER BY (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((((((t1.c0)AND(t1.c1)))OR(t1.c0)), CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END, (t1.c0 IN ()))) AND ((((t1.c1)||(t1.c1)), x'75c44fd4', ((((t1.c0)OR(t1.c0)))OR(t1.c1))))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND((((t1.c1)<=(t1.c1)) IN ((t1.c1 IN ())))))) ORDER BY (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((((((t1.c0)AND(t1.c1)))OR(t1.c0)), CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END, (t1.c0 IN ()))) AND ((((t1.c1)||(t1.c1)), x'75c44fd4', ((((t1.c0)OR(t1.c0)))OR(t1.c1))))) ASC  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM t1 WHERE ((LOWER(t1.c1) IN (((x'')>=(x'36')), (t1.c0 IN (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE ((LOWER(t1.c1) IN (((x'')=(x'36')), (t1.c0 IN (t1.c0))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS REAL))>>(ABS(t1.c0)))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((LOWER(t1.c1) IN (((x'')>=(x'36')), (t1.c0 IN (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE ((LOWER(t1.c1) IN (((x'')=(x'36')), (t1.c0 IN (t1.c0))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS REAL))>>(ABS(t1.c0)))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)%(t1.c0)) AS INTEGER));
SELECT * FROM t1 WHERE (((CAST(((t1.c0)%(t1.c0)) AS INTEGER))AND((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END IN ())))) LIMIT 0X2 INTERSECT SELECT * FROM t1 WHERE ((+ ('HTF'))) LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)%(t1.c0)) AS INTEGER));
SELECT * FROM t1 WHERE (((CAST(((t1.c0)%(t1.c0)) AS INTEGER))AND((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END IN ())))) LIMIT 0X2 INTERSECT SELECT * FROM t1 WHERE ((+ ('HTF'))) LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (((TYPEOF(t1.c1))<=(t1.c0))) ORDER BY t1.c1 DESC  NULLS LAST, ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))IS(0.9973479714017593)) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((TYPEOF(t1.c1))=(t1.c0))) ORDER BY ((t1.c1 IN (t1.c0, t1.c1)) IN (CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END))  NULLS FIRST, ((((((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(x'92')))AND(t1.c0)))AND(CAST(t1.c1 AS REAL))))OR(CAST(t1.c0 AS NUMERIC))))OR(((t1.c0) NOTNULL))) DESC LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (((TYPEOF(t1.c1))<=(t1.c0))) ORDER BY t1.c1 DESC  NULLS LAST, ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))IS(0.9973479714017593)) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((TYPEOF(t1.c1))=(t1.c0))) ORDER BY ((t1.c1 IN (t1.c0, t1.c1)) IN (CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END))  NULLS FIRST, ((((((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(x'92')))AND(t1.c0)))AND(CAST(t1.c1 AS REAL))))OR(CAST(t1.c0 AS NUMERIC))))OR(((t1.c0) NOTNULL))) DESC LIMIT 0x1;
SELECT ALL * FROM t1 WHERE ((((t1.c0)|(t1.c0)) IN (rtreenode(t1.c0, t1.c0), t1.c1 COLLATE RTRIM)));
SELECT * FROM t1 WHERE ((((((t1.c0)|(t1.c0)) IN (rtreenode(t1.c0, t1.c0))))AND(UNLIKELY(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))) ORDER BY CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS NUMERIC) LIMIT 0X3 INTERSECT SELECT ALL * FROM t1 WHERE ((t1.c1 IN ())) ORDER BY CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS NUMERIC) LIMIT 0x3;
SELECT ALL * FROM t1 WHERE ((((t1.c0)|(t1.c0)) IN (rtreenode(t1.c0, t1.c0), t1.c1 COLLATE RTRIM)));
SELECT * FROM t1 WHERE ((((((t1.c0)|(t1.c0)) IN (rtreenode(t1.c0, t1.c0))))AND(UNLIKELY(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))) ORDER BY CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS NUMERIC) LIMIT 0X3 INTERSECT SELECT ALL * FROM t1 WHERE ((t1.c1 IN ())) ORDER BY CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS NUMERIC) LIMIT 0x3;
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (((t1.c1 COLLATE NOCASE)<<(((t1.c0)>=(0.3129153619112568)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c1 COLLATE NOCASE)<<(((t1.c0)>=(0.3129153619112568))))) LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((((((t1.c0)OR(t1.c0)))AND(t1.c1))))>((CAST(t1.c1 AS REAL)))));
SELECT ALL * FROM t1 WHERE ((((((((t1.c0)OR(t1.c0)))AND(t1.c1))))>((CAST(t1.c1 AS REAL)))));
SELECT ALL * FROM t1 WHERE ((((((((t1.c0)OR(t1.c0)))AND(t1.c1))))>((CAST(t1.c1 AS REAL)))));
SELECT ALL * FROM t1 WHERE ((((((((t1.c0)OR(t1.c0)))AND(t1.c1))))>((CAST(t1.c1 AS REAL)))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((- (NULL))) ORDER BY CAST(((t1.c1)/(t1.c0)) AS NUMERIC)  NULLS LAST, (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) ASC, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) NOT NULL)  NULLS LAST, 0.6115580582077196 DESC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((- (NULL)))AND(0.8185662987496911))) ORDER BY CAST(((t1.c1)/(t1.c0)) AS NUMERIC)  NULLS LAST, (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) ASC, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) NOT NULL)  NULLS LAST, 0.6115580582077196 DESC  NULLS LAST INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((((((((((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))OR(json_insert(t1.c0, t1.c0, t1.c0, t1.c1))))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))AND(IFNULL(t1.c0, t1.c0))))OR(CASE 0.06859351328781016  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c1)*(t1.c1)))))AND(((t1.c0)/(t1.c1))))) ORDER BY CAST(((t1.c1)/(t1.c0)) AS NUMERIC)  NULLS LAST, (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) ASC, ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) NOT NULL)  NULLS LAST, 0.6115580582077196 DESC  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE (json_object(((NULL)=(t1.c0)), (~ (t1.c0)), ((t1.c0) ISNULL)));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((json_object(((NULL)==(t1.c0)), (~ (t1.c0)), ((t1.c0) ISNULL)))AND(((0.1160518550709495) NOTNULL)))) INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((t1.c1)IS(t1.c1)))*(0.25319149893040427)));
SELECT MIN(t1.c1) FROM t1 NOT INDEXED WHERE (TRIM((+ (t1.c1)))) ORDER BY ((((x'')AND(((t1.c1)+(NULL)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))), (((((t1.c0)<=(t1.c1)), t1.c0 COLLATE RTRIM, (t1.c1 IN (t1.c0)), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), t1.c0))<((CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, IFNULL(t1.c1, t1.c0), t1.c0, (t1.c1 IN ()), t1.c0))), LIKELIHOOD(DISTINCT x'75a8', ((t1.c1)<<(t1.c0)))  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (TRIM((+ (t1.c1)))) ORDER BY ((CAST(t1.c0 AS TEXT))==(ABS(DISTINCT t1.c1)));
SELECT ALL COUNT(*) FROM t1 NOT INDEXED WHERE (CAST(CAST(t1.c0 AS REAL) AS NUMERIC));
SELECT COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c0 AS REAL) AS NUMERIC)) LIMIT 3 INTERSECT SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE BINARY) NOT BETWEEN (CAST(0.2597569328978506 AS INTEGER)) AND (((t1.c1) NOT BETWEEN (t1.c0) AND (x''))))) LIMIT 0X3;
SELECT * FROM t1 WHERE (CASE WHEN (t1.c0 IN ()) THEN LOWER('f ') WHEN (t1.c0 IN (t1.c0)) THEN (((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c1))) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN (t1.c0 IN ()) THEN LOWER('f ') WHEN (t1.c0 IN (t1.c0)) THEN (((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c1))) END)AND(CASE CAST(t1.c0 AS REAL)  WHEN t1.c1 COLLATE RTRIM THEN 'n' ELSE ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR('L]1朶-')) END))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)>>(t1.c1))))==((((t1.c0)<<(t1.c1))))));
SELECT * FROM t1 WHERE (CASE WHEN (t1.c0 IN ()) THEN LOWER('f ') WHEN (t1.c0 IN (t1.c0)) THEN (((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c1))) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN (t1.c0 IN ()) THEN LOWER('f ') WHEN (t1.c0 IN (t1.c0)) THEN (((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c1))) END)AND(CASE CAST(t1.c0 AS REAL)  WHEN t1.c1 COLLATE RTRIM THEN 'n' ELSE ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR('L]1朶-')) END))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)>>(t1.c1))))==((((t1.c0)<<(t1.c1))))));
SELECT COUNT(*) FROM t1 WHERE ((~ (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY TYPEOF(DISTINCT (~ (t1.c1)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((~ (((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))AND(CAST(t1.c1 AS TEXT)))) ORDER BY TYPEOF(DISTINCT (~ (t1.c1))) LIMIT 0;
SELECT MIN(t1.c0) FROM t1 WHERE ((CAST(t1.c0 AS INTEGER) IN ())) ORDER BY (((LTRIM(t1.c1)))!=((t1.c0 COLLATE RTRIM))), ((+ (t1.c0)) IN (((((((((t1.c0)AND(t1.c0)))OR(0.2904414702277408)))AND(t1.c1)))AND(t1.c0)))), CAST(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) AS TEXT) ASC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((CAST(t1.c0 AS INTEGER) IN ())) ORDER BY (((LTRIM(t1.c1)))!=((t1.c0 COLLATE RTRIM))), ((+ (t1.c0)) IN (((((((((t1.c0)AND(t1.c0)))OR(0.2904414702277408)))AND(t1.c1)))AND(t1.c0)))), CAST(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) AS TEXT) ASC LIMIT 0 INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE ((((t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((('1232178829' IN (t1.c1)), (~ (t1.c0)), ((t1.c1)/(t1.c1)))) AND ((CASE x''  WHEN t1.c0 THEN t1.c0 END, TRIM(DISTINCT t1.c1), ((t1.c1)LIKE(t1.c1)))))) ORDER BY (((LTRIM(t1.c1)))!=((t1.c0 COLLATE RTRIM))), ((+ (t1.c0)) IN (((((((((t1.c0)AND(t1.c0)))OR(0.2904414702277408)))AND(t1.c1)))AND(t1.c0)))), CAST(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) AS TEXT) ASC LIMIT 0x0;
SELECT MAX(t1.c0) FROM t1 WHERE (TRIM(t1.c0) COLLATE RTRIM);
SELECT MAX(t1.c0) FROM t1 WHERE (TRIM(t1.c0) COLLATE RTRIM) LIMIT 0X1 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((CAST(t1.c0 AS INTEGER)))<=((TRIM(t1.c0))))) LIMIT 0X1;
SELECT MIN(t1.c0) FROM t1 WHERE (LOWER(DISTINCT t1.c1)) ORDER BY t1.c0 DESC  NULLS LAST, (((MAX(t1.c0, NULL), CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END, (t1.c0 IN (t1.c0)), (((t1.c0, t1.c0, t1.c1, 1954088565, t1.c0))=((t1.c1, t1.c1, 0x69de5266, t1.c0, '-83606605'))), (~ (t1.c1)), t1.c0 COLLATE RTRIM, (- (t1.c1))))<=((((((t1.c1)AND(t1.c0)))AND(t1.c1)), (~ (t1.c0)), ((t1.c0)GLOB(NULL)), ((t1.c0)>=(t1.c1)), t1.c0, ((t1.c1) ISNULL), ((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (LOWER(DISTINCT t1.c1)) ORDER BY 'W<Q昖_DI>x', (((x'')) BETWEEN ((((t1.c0)LIKE(t1.c1)))) AND (((((t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c0)))))), ((t1.c1)LIKE(t1.c1)) COLLATE BINARY LIMIT 0x2 INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (((t1.c0 IN (t1.c1, t1.c0)) IN ())) ORDER BY 'W<Q昖_DI>x', (((x'')) BETWEEN ((((t1.c0)LIKE(t1.c1)))) AND (((((t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c0)))))), ((t1.c1)LIKE(t1.c1)) COLLATE BINARY LIMIT 0X2;
SELECT COUNT(*) FROM t1 WHERE (CAST(0Xffffffffe4e426d0 AS REAL)) ORDER BY CASE WHEN ((((t1.c1)AND(t1.c1)))OR(t1.c1)) THEN ((t1.c1)GLOB(t1.c0)) WHEN ((t1.c1)>=(t1.c0)) THEN t1.c0 WHEN IFNULL(t1.c1, t1.c0) THEN (('SDHu>Ẍ')%(t1.c0)) END DESC  NULLS FIRST, ((CAST(t1.c1 AS REAL))IS(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST(0xffffffffe4e426d0 AS REAL)) ORDER BY CASE WHEN ((((t1.c1)AND(t1.c1)))OR(t1.c1)) THEN ((t1.c1)GLOB(t1.c0)) WHEN ((t1.c1)>=(t1.c0)) THEN t1.c0 WHEN IFNULL(t1.c1, t1.c0) THEN (('SDHu>Ẍ')%(t1.c0)) END DESC  NULLS FIRST, ((CAST(t1.c1 AS REAL))IS(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY CASE WHEN ((((t1.c1)AND(t1.c1)))OR(t1.c1)) THEN ((t1.c1)GLOB(t1.c0)) WHEN ((t1.c1)>=(t1.c0)) THEN t1.c0 WHEN IFNULL(t1.c1, t1.c0) THEN (('SDHu>Ẍ')%(t1.c0)) END DESC  NULLS FIRST, ((CAST(t1.c1 AS REAL))IS(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END));
SELECT * FROM t1 WHERE ((((('QRgNI\|0]')AND(NULL)))OR((t1.c0 IN (t1.c1))))) ORDER BY (NOT (((t1.c1)IS NOT(x'43')))) DESC, CASE ((t1.c1)+(t1.c0))  WHEN TIME(t1.c0, x'8990', t1.c0) THEN (NOT (t1.c0)) ELSE ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END DESC;
SELECT DISTINCT * FROM t1 WHERE ((((('QRgNI\|0]')AND(NULL)))OR((t1.c0 IN (t1.c1))))) ORDER BY (NOT (((t1.c1)IS NOT(x'43')))) DESC, CASE ((t1.c1)+(t1.c0))  WHEN TIME(t1.c0, x'8990', t1.c0) THEN (NOT (t1.c0)) ELSE ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (IFNULL(LAST_INSERT_ROWID(), ((t1.c0) NOTNULL))) ORDER BY (NOT (((t1.c1)IS NOT(x'43')))) DESC, CASE ((t1.c1)+(t1.c0))  WHEN TIME(t1.c0, x'8990', t1.c0) THEN (NOT (t1.c0)) ELSE ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END DESC;
SELECT * FROM t1 WHERE ((((('QRgNI\|0]')AND(NULL)))OR((t1.c0 IN (t1.c1))))) ORDER BY (NOT (((t1.c1)IS NOT(x'43')))) DESC, CASE ((t1.c1)+(t1.c0))  WHEN TIME(t1.c0, x'8990', t1.c0) THEN (NOT (t1.c0)) ELSE ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END DESC;
SELECT DISTINCT * FROM t1 WHERE ((((('QRgNI\|0]')AND(NULL)))OR((t1.c0 IN (t1.c1))))) ORDER BY (NOT (((t1.c1)IS NOT(x'43')))) DESC, CASE ((t1.c1)+(t1.c0))  WHEN TIME(t1.c0, x'8990', t1.c0) THEN (NOT (t1.c0)) ELSE ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (IFNULL(LAST_INSERT_ROWID(), ((t1.c0) NOTNULL))) ORDER BY (NOT (((t1.c1)IS NOT(x'43')))) DESC, CASE ((t1.c1)+(t1.c0))  WHEN TIME(t1.c0, x'8990', t1.c0) THEN (NOT (t1.c0)) ELSE ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END DESC;
SELECT MIN(t1.c0) FROM t1 WHERE (((((((((((('0.2289213351425552')OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)) IN ())) ORDER BY ((t1.c1 COLLATE NOCASE)/(t1.c0 COLLATE BINARY)), ((((t1.c1)OR(t1.c0)))AND(t1.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((((((((('0.2289213351425552')OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)) IN ()))AND(t1.c1))) ORDER BY ((t1.c1 COLLATE NOCASE)/(t1.c0 COLLATE BINARY)), ((((t1.c1)OR(t1.c0)))AND(t1.c1)) COLLATE NOCASE DESC  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c1))) BETWEEN (((t1.c0) NOT NULL)) AND (NULL)));
SELECT * FROM t1 WHERE ((((t1.c0 IN (t1.c1))) BETWEEN (((t1.c0) NOT NULL)) AND (NULL))) ORDER BY ((CAST(t1.c0 AS INTEGER))GLOB(t1.c0 COLLATE NOCASE)) DESC, 'ov2)n' ASC, ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL)  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((CAST(t1.c0 AS REAL)) IS TRUE)) ORDER BY ((CAST(t1.c0 AS INTEGER))GLOB(t1.c0 COLLATE NOCASE)) DESC, 'ov2)n' ASC, ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c1))) BETWEEN (((t1.c0) NOT NULL)) AND (NULL)));
SELECT * FROM t1 WHERE ((((t1.c0 IN (t1.c1))) BETWEEN (((t1.c0) NOT NULL)) AND (NULL))) ORDER BY ((CAST(t1.c0 AS INTEGER))GLOB(t1.c0 COLLATE NOCASE)) DESC, 'ov2)n' ASC, ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL)  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((CAST(t1.c0 AS REAL)) IS TRUE)) ORDER BY ((CAST(t1.c0 AS INTEGER))GLOB(t1.c0 COLLATE NOCASE)) DESC, 'ov2)n' ASC, ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((NOT (t1.c0))) NOT BETWEEN (TRIM(DISTINCT 0x42158793)) AND (t1.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t1 WHERE ((((NOT (t1.c0))) NOT BETWEEN (TRIM(DISTINCT 0x42158793)) AND (t1.c1 COLLATE NOCASE))) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((0x72cd03a3) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE (((((0X72cd03a3) IS TRUE))AND(((((((((((((t1.c1 COLLATE RTRIM)AND(CAST(t1.c1 AS NUMERIC))))AND(((((t1.c1)OR(t1.c1)))OR(t1.c0)))))AND(0.3371137120831045)))OR((t1.c0 IN (t1.c1)))))AND((((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c1))))))AND(('AﵥV' IN (t1.c1))))))) ORDER BY (((t1.c0) IS FALSE) IN ()) LIMIT 2;
SELECT ALL * FROM t1 WHERE (((0x72cd03a3) IS TRUE));
SELECT DISTINCT * FROM t1 WHERE (((((0X72cd03a3) IS TRUE))AND(((((((((((((t1.c1 COLLATE RTRIM)AND(CAST(t1.c1 AS NUMERIC))))AND(((((t1.c1)OR(t1.c1)))OR(t1.c0)))))AND(0.3371137120831045)))OR((t1.c0 IN (t1.c1)))))AND((((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c1))))))AND(('AﵥV' IN (t1.c1))))))) ORDER BY (((t1.c0) IS FALSE) IN ()) LIMIT 2;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c1))) COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c1))) COLLATE RTRIM) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c1) IS FALSE) COLLATE NOCASE) LIMIT 0x1;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c1))) COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c1))) COLLATE RTRIM) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c1) IS FALSE) COLLATE NOCASE) LIMIT 0x1;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((((((((((t1.c1)AND('-131715403')))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)) IN (((t1.c1)<(t1.c1)))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((((((((t1.c1)AND('-131715403')))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)) IN (((t1.c1)<(t1.c1))))) LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (((((((('478745816' IN (0Xffffffffa5dcf8ce)))OR(((t1.c0) IS TRUE))))OR((+ (0.958498626811597)))))AND(((t1.c0) NOT NULL)))) ORDER BY RTRIM(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) ASC  NULLS FIRST, 0.16240674726894133 DESC  NULLS LAST, t1.c1 ASC;
SELECT ALL * FROM t1 WHERE (((((((((('478745816' IN (0Xffffffffa5dcf8ce)))OR(((t1.c0) IS TRUE))))OR((+ (0.958498626811597)))))AND(((t1.c0) NOT NULL))))AND(((('', t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((HEX(DISTINCT t1.c0), (~ (t1.c0)), CASE t1.c1  WHEN t1.c0 THEN 0x3adc1e77 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, t1.c0)) AND ((ROUND(t1.c1, 'E'), CAST('' AS BLOB), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)), ((t1.c0)|(t1.c1)))))))) ORDER BY RTRIM(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) ASC  NULLS FIRST, 0.16240674726894133 DESC  NULLS LAST, t1.c1 ASC INTERSECT SELECT ALL * FROM t1 WHERE (t1.c0 COLLATE BINARY) ORDER BY RTRIM(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) ASC  NULLS FIRST, 0.16240674726894133 DESC  NULLS LAST, t1.c1 ASC;
SELECT ALL * FROM t1 WHERE (((((((('478745816' IN (0Xffffffffa5dcf8ce)))OR(((t1.c0) IS TRUE))))OR((+ (0.958498626811597)))))AND(((t1.c0) NOT NULL)))) ORDER BY RTRIM(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) ASC  NULLS FIRST, 0.16240674726894133 DESC  NULLS LAST, t1.c1 ASC;
SELECT ALL * FROM t1 WHERE (((((((((('478745816' IN (0Xffffffffa5dcf8ce)))OR(((t1.c0) IS TRUE))))OR((+ (0.958498626811597)))))AND(((t1.c0) NOT NULL))))AND(((('', t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((HEX(DISTINCT t1.c0), (~ (t1.c0)), CASE t1.c1  WHEN t1.c0 THEN 0x3adc1e77 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, t1.c0)) AND ((ROUND(t1.c1, 'E'), CAST('' AS BLOB), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)), ((t1.c0)|(t1.c1)))))))) ORDER BY RTRIM(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) ASC  NULLS FIRST, 0.16240674726894133 DESC  NULLS LAST, t1.c1 ASC INTERSECT SELECT ALL * FROM t1 WHERE (t1.c0 COLLATE BINARY) ORDER BY RTRIM(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) ASC  NULLS FIRST, 0.16240674726894133 DESC  NULLS LAST, t1.c1 ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c0 COLLATE RTRIM)OR(t1.c1)))OR(t1.c0 COLLATE RTRIM)))AND((t1.c1 IN ()))))OR(t1.c0)))AND((((t1.c0))<((0.16450383563309667)))))) ORDER BY (('815743683')%(t1.c1)) COLLATE RTRIM COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((((t1.c0 COLLATE RTRIM)OR(t1.c1)))OR(t1.c0 COLLATE RTRIM)))AND((t1.c1 IN ()))))OR(t1.c0)))AND((((t1.c0))<((0.16450383563309667))))))AND(CASE (t1.c1 IN (t1.c0, t1.c0))  WHEN (t1.c0 IN (t1.c1)) THEN ((t1.c0)AND(0.2844622274888148)) WHEN CASE t1.c0  WHEN t1.c1 THEN ']}o' ELSE t1.c0 END THEN t1.c0 COLLATE RTRIM WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END THEN ((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(0.18668602299009074)) WHEN t1.c1 COLLATE BINARY THEN (x'20b8' IN (t1.c0)) ELSE x'22' END))) ORDER BY (((t1.c0)<(t1.c1)) IN (((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ASC  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (((t1.c0)<(t1.c1)) IN (((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ASC  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (t1.c0);
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (t1.c0) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL END) ISNULL)  NULLS LAST, ((((((((((((1.7976931348623157E308)AND(t1.c1)))AND(t1.c0)))AND('1537255980')))OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (x'a7' COLLATE NOCASE) AND ((t1.c1 IN ()))) ASC, (((((((((((t1.c1, t1.c0, 'Im^*_k7춃', t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, -297665499, t1.c1, t1.c1))))OR(((((t1.c1)OR(t1.c0)))AND(t1.c0)))))AND(((t1.c1)*(t1.c1)))))AND(t1.c1)))AND(t1.c0 COLLATE RTRIM)) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (COALESCE(DISTINCT t1.c0 COLLATE BINARY, STRFTIME(0Xffffffffa7d7244e, t1.c0, t1.c1), t1.c0 COLLATE RTRIM)) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL END) ISNULL)  NULLS LAST, ((((((((((((1.7976931348623157E308)AND(t1.c1)))AND(t1.c0)))AND('1537255980')))OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (x'a7' COLLATE NOCASE) AND ((t1.c1 IN ()))) ASC, (((((((((((t1.c1, t1.c0, 'Im^*_k7춃', t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1, t1.c0, t1.c1)) AND ((t1.c1, t1.c1, -297665499, t1.c1, t1.c1))))OR(((((t1.c1)OR(t1.c0)))AND(t1.c0)))))AND(((t1.c1)*(t1.c1)))))AND(t1.c1)))AND(t1.c0 COLLATE RTRIM));
SELECT ALL * FROM t1 WHERE ((((t1.c1 IN (t1.c0, t1.c0))) BETWEEN ('-104608350') AND (((t1.c1)>>(x'92')))));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1 IN (t1.c0))) BETWEEN ('-104608350') AND (((t1.c1)>>(x'92'))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ (((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))));
SELECT ALL * FROM t1 WHERE ((((t1.c1 IN (t1.c0, t1.c0))) BETWEEN ('-104608350') AND (((t1.c1)>>(x'92')))));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1 IN (t1.c0))) BETWEEN ('-104608350') AND (((t1.c1)>>(x'92'))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ (((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))));
SELECT MIN(t1.c1) FROM t1 WHERE ((((((t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1)))) NOT BETWEEN (((t1.c0)<=(t1.c0))) AND (CAST(t1.c1 AS BLOB))));
SELECT MIN(t1.c1) FROM t1 WHERE ((((((((t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1)))) NOT BETWEEN (((t1.c0)<=(t1.c0))) AND (CAST(t1.c1 AS BLOB))))AND((t1.c1 IN (t1.c0)) COLLATE NOCASE COLLATE RTRIM)));
SELECT MAX(t1.c0) FROM t1 WHERE ((~ (t1.c0))) ORDER BY json_remove(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, (t1.c0 IN (t1.c1)), TYPEOF(t1.c0), (t1.c0 IN ()))  NULLS LAST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((~ (t1.c0)))AND(LIKELY(((t1.c1)OR(t1.c0)))))) ORDER BY json_remove(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, (t1.c0 IN (t1.c1)), TYPEOF(t1.c0), (t1.c0 IN ()))  NULLS LAST INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((t1.c1) NOT NULL) IN (((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)), CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))) ORDER BY json_remove(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, (t1.c0 IN (t1.c1)), TYPEOF(t1.c0), (t1.c0 IN ()))  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((((((TRIM(t1.c1))OR(COALESCE(t1.c0, t1.c1, t1.c0))))OR((t1.c0 IN (t1.c1)))))OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL ELSE t1.c1 END)))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c1 END))) ORDER BY (((NOT (t1.c1)))&(t1.c0))  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((((((((TRIM(t1.c1))OR(COALESCE(t1.c0, t1.c1, t1.c0))))OR((t1.c0 IN (t1.c1)))))OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN NULL ELSE t1.c1 END)))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c1 END)))AND(t1.c0))) ORDER BY (((NOT (t1.c1)))&(t1.c0))  NULLS LAST;
SELECT * FROM t1 WHERE (CAST(((t1.c0)-(t1.c0)) AS INTEGER)) ORDER BY (('')GLOB(((t1.c1)==(t1.c0)))) ASC;
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c0)-(t1.c0)) AS INTEGER)) ORDER BY CAST((- (t1.c0)) AS TEXT) DESC  NULLS LAST, (((((t1.c0))<((t1.c1)))) NOT BETWEEN ((t1.c1 IN ())) AND (((NULL)>>(t1.c1)))) DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((+ (t1.c0)))>=(CAST(t1.c0 AS TEXT)))) ORDER BY CAST((- (t1.c0)) AS TEXT) DESC  NULLS LAST, (((((t1.c0))<((t1.c1)))) NOT BETWEEN ((t1.c1 IN ())) AND (((NULL)>>(t1.c1)))) DESC  NULLS FIRST LIMIT 0x1;
SELECT * FROM t1 WHERE (CAST(((t1.c0)-(t1.c0)) AS INTEGER)) ORDER BY (('')GLOB(((t1.c1)==(t1.c0)))) ASC;
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c0)-(t1.c0)) AS INTEGER)) ORDER BY CAST((- (t1.c0)) AS TEXT) DESC  NULLS LAST, (((((t1.c0))<((t1.c1)))) NOT BETWEEN ((t1.c1 IN ())) AND (((NULL)>>(t1.c1)))) DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((+ (t1.c0)))>=(CAST(t1.c0 AS TEXT)))) ORDER BY CAST((- (t1.c0)) AS TEXT) DESC  NULLS LAST, (((((t1.c0))<((t1.c1)))) NOT BETWEEN ((t1.c1 IN ())) AND (((NULL)>>(t1.c1)))) DESC  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (((t1.c1) IS TRUE)) ORDER BY CASE WHEN (((t1.c0, t1.c0, t1.c0))==((t1.c0, t1.c1, t1.c1))) THEN (NOT (t1.c0)) WHEN (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))) THEN 0.7326516555029623 COLLATE NOCASE WHEN CAST(t1.c0 AS BLOB) THEN 0Xffffffffa1e513da ELSE (((t1.c0, t1.c0, t1.c1))=((t1.c0, t1.c0, NULL))) END ASC;
SELECT * FROM t1 WHERE (((t1.c1) IS TRUE)) ORDER BY CASE WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c0) NOT NULL) END LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (((t1.c1) IS TRUE)) ORDER BY CASE WHEN (((t1.c0, t1.c0, t1.c0))==((t1.c0, t1.c1, t1.c1))) THEN (NOT (t1.c0)) WHEN (((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c0))) THEN 0.7326516555029623 COLLATE NOCASE WHEN CAST(t1.c0 AS BLOB) THEN 0Xffffffffa1e513da ELSE (((t1.c0, t1.c0, t1.c1))=((t1.c0, t1.c0, NULL))) END ASC;
SELECT * FROM t1 WHERE (((t1.c1) IS TRUE)) ORDER BY CASE WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c0) NOT NULL) END LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (((t1.c0)LIKE(0.2904414702277408)) COLLATE NOCASE) ORDER BY (- ((((t1.c1, 'Z', t1.c1))!=((t1.c1, t1.c0, t1.c0)))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)LIKE(0.2904414702277408)) COLLATE NOCASE) ORDER BY CASE WHEN t1.c0 THEN ((t1.c0) IS TRUE) WHEN '842180743' THEN (~ (t1.c0)) ELSE x'f5f43e' END ASC  NULLS FIRST, t1.c0 DESC;
SELECT ALL * FROM t1 WHERE (((t1.c0)LIKE(0.2904414702277408)) COLLATE NOCASE) ORDER BY (- ((((t1.c1, 'Z', t1.c1))!=((t1.c1, t1.c0, t1.c0)))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)LIKE(0.2904414702277408)) COLLATE NOCASE) ORDER BY CASE WHEN t1.c0 THEN ((t1.c0) IS TRUE) WHEN '842180743' THEN (~ (t1.c0)) ELSE x'f5f43e' END ASC  NULLS FIRST, t1.c0 DESC;
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (NOT (t1.c0)) ASC, ((((t1.c1) NOTNULL)) IS FALSE)  NULLS FIRST, ((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))GLOB(t1.c0 COLLATE RTRIM));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c0)AND((+ ((t1.c1 IN ())))))) ORDER BY ((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(0X2aa7f2a6)))LIKE(t1.c1 COLLATE NOCASE)) LIMIT 0X2;
SELECT * FROM t1 WHERE (CAST(CASE WHEN t1.c1 THEN t1.c1 ELSE '1612608662' END AS NUMERIC)) ORDER BY (((t1.c0, t1.c1, NULL, t1.c0)) BETWEEN ((0Xffffffffee194d2f, NULL, t1.c0, (((t1.c1, t1.c1))>=((t1.c1, t1.c1))))) AND (((t1.c1 IN (t1.c0)), t1.c0 COLLATE NOCASE, ((t1.c0)!=(t1.c0)), (t1.c0 IN (t1.c0))))) ASC  NULLS LAST, (+ (x'cae9a7')) DESC  NULLS LAST, ((ABS(DISTINCT t1.c0)) BETWEEN (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))) AND (t1.c1)) ASC;
SELECT DISTINCT * FROM t1 WHERE (CAST(CASE WHEN t1.c1 THEN t1.c1 ELSE '1612608662' END AS NUMERIC)) ORDER BY CAST((((t1.c0))>=((t1.c1))) AS BLOB)  NULLS FIRST, (((('849014021') ISNULL))/(x''))  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE (CAST(CASE WHEN t1.c1 THEN t1.c1 ELSE '1612608662' END AS NUMERIC)) ORDER BY (((t1.c0, t1.c1, NULL, t1.c0)) BETWEEN ((0Xffffffffee194d2f, NULL, t1.c0, (((t1.c1, t1.c1))>=((t1.c1, t1.c1))))) AND (((t1.c1 IN (t1.c0)), t1.c0 COLLATE NOCASE, ((t1.c0)!=(t1.c0)), (t1.c0 IN (t1.c0))))) ASC  NULLS LAST, (+ (x'cae9a7')) DESC  NULLS LAST, ((ABS(DISTINCT t1.c0)) BETWEEN (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))) AND (t1.c1)) ASC;
SELECT DISTINCT * FROM t1 WHERE (CAST(CASE WHEN t1.c1 THEN t1.c1 ELSE '1612608662' END AS NUMERIC)) ORDER BY CAST((((t1.c0))>=((t1.c1))) AS BLOB)  NULLS FIRST, (((('849014021') ISNULL))/(x''))  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE (CAST(t1.c1 AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 AS BLOB)) ORDER BY (((t1.c1)|(t1.c1)) IN ()) DESC, (((x'')) BETWEEN ((((t1.c1)>>(t1.c0)))) AND ((((((((t1.c0)OR(t1.c1)))AND('S%fW')))OR(t1.c0))))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c1 COLLATE BINARY)IS NOT(((t1.c0)-(t1.c0))))) ORDER BY (((t1.c1)|(t1.c1)) IN ()) DESC, (((x'')) BETWEEN ((((t1.c1)>>(t1.c0)))) AND ((((((((t1.c0)OR(t1.c1)))AND('S%fW')))OR(t1.c0))))) ASC LIMIT 0;
SELECT * FROM t1 WHERE (CAST(t1.c1 AS BLOB));
SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 AS BLOB)) ORDER BY (((t1.c1)|(t1.c1)) IN ()) DESC, (((x'')) BETWEEN ((((t1.c1)>>(t1.c0)))) AND ((((((((t1.c0)OR(t1.c1)))AND('S%fW')))OR(t1.c0))))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c1 COLLATE BINARY)IS NOT(((t1.c0)-(t1.c0))))) ORDER BY (((t1.c1)|(t1.c1)) IN ()) DESC, (((x'')) BETWEEN ((((t1.c1)>>(t1.c0)))) AND ((((((((t1.c0)OR(t1.c1)))AND('S%fW')))OR(t1.c0))))) ASC LIMIT 0;
SELECT * FROM t1 WHERE (x'');
SELECT DISTINCT * FROM t1 WHERE (x'') ORDER BY (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) IN (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))))  NULLS LAST, ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))<=('224413799')) ASC  NULLS FIRST, '|RzQ'  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (SQLITE_COMPILEOPTION_GET(((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))) ORDER BY (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) IN (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))))  NULLS LAST, ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))<=('224413799')) ASC  NULLS FIRST, '|RzQ'  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE (x'');
SELECT DISTINCT * FROM t1 WHERE (x'') ORDER BY (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) IN (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))))  NULLS LAST, ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))<=('224413799')) ASC  NULLS FIRST, '|RzQ'  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (SQLITE_COMPILEOPTION_GET(((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))) ORDER BY (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) IN (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))))  NULLS LAST, ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))<=('224413799')) ASC  NULLS FIRST, '|RzQ'  NULLS FIRST LIMIT 1;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c0 COLLATE NOCASE))<=((CASE WHEN t1.c0 THEN '41683678' WHEN x'c3d7' THEN t1.c1 END))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((t1.c0 COLLATE NOCASE))<=((CASE WHEN t1.c0 THEN '41683678' WHEN x'c3d7' THEN t1.c1 END)))) INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ('쁭z');
SELECT * FROM t1 WHERE (CASE WHEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((((t1.c1)AND(t1.c1)))AND(t1.c1)) THEN CAST(t1.c1 AS BLOB) WHEN (t1.c0 IN (t1.c1)) THEN t1.c1 WHEN x'' THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END) ORDER BY ((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(t1.c1))) NOTNULL)  NULLS FIRST, (NOT ((((('-299455398')AND(t1.c1)))OR(t1.c1))));
SELECT * FROM t1 WHERE (((CASE WHEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((((t1.c1)AND(t1.c1)))AND(t1.c1)) THEN CAST(t1.c1 AS BLOB) WHEN (t1.c0 IN (t1.c1)) THEN t1.c1 WHEN x'' THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END)AND(json_insert(t1.c0 COLLATE BINARY, CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, (((t1.c1)) BETWEEN ((0.002164287794058084)) AND (('u0*9'))), 'nj', CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END, ((t1.c1)<(t1.c0)))))) ORDER BY (NOT ('_lh33w^w&')) ASC, load_extension(((t1.c1) BETWEEN (-1632421674) AND (t1.c1)), ((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))  NULLS LAST INTERSECT SELECT * FROM t1 WHERE ('0.20025627345273822') ORDER BY (NOT ('_lh33w^w&')) ASC, load_extension(((t1.c1) BETWEEN (-1632421674) AND (t1.c1)), ((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))  NULLS LAST;
SELECT * FROM t1 WHERE (CASE WHEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((((t1.c1)AND(t1.c1)))AND(t1.c1)) THEN CAST(t1.c1 AS BLOB) WHEN (t1.c0 IN (t1.c1)) THEN t1.c1 WHEN x'' THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END) ORDER BY ((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(t1.c1))) NOTNULL)  NULLS FIRST, (NOT ((((('-299455398')AND(t1.c1)))OR(t1.c1))));
SELECT * FROM t1 WHERE (((CASE WHEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((((t1.c1)AND(t1.c1)))AND(t1.c1)) THEN CAST(t1.c1 AS BLOB) WHEN (t1.c0 IN (t1.c1)) THEN t1.c1 WHEN x'' THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END END)AND(json_insert(t1.c0 COLLATE BINARY, CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, (((t1.c1)) BETWEEN ((0.002164287794058084)) AND (('u0*9'))), 'nj', CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END, ((t1.c1)<(t1.c0)))))) ORDER BY (NOT ('_lh33w^w&')) ASC, load_extension(((t1.c1) BETWEEN (-1632421674) AND (t1.c1)), ((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))  NULLS LAST INTERSECT SELECT * FROM t1 WHERE ('0.20025627345273822') ORDER BY (NOT ('_lh33w^w&')) ASC, load_extension(((t1.c1) BETWEEN (-1632421674) AND (t1.c1)), ((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))|((t1.c0 IN (t1.c1)))));
SELECT * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))|((t1.c0 IN (t1.c1)))))AND((((t1.c1, x'9e')) BETWEEN (((((NULL))>=((t1.c1))), t1.c1)) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END, (NOT (t1.c1)))))))) LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC)) IS TRUE)) LIMIT 0;
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))|((t1.c0 IN (t1.c1)))));
SELECT * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))|((t1.c0 IN (t1.c1)))))AND((((t1.c1, x'9e')) BETWEEN (((((NULL))>=((t1.c1))), t1.c1)) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END, (NOT (t1.c1)))))))) LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC)) IS TRUE)) LIMIT 0;
SELECT * FROM t1 WHERE ((((((t1.c1)OR(t1.c0)), (t1.c1 IN (t1.c0, t1.c0))))==((((t1.c0) NOT NULL), CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))));
SELECT * FROM t1 WHERE ((((((t1.c1)OR(t1.c0)), (t1.c1 IN (t1.c0))))==((((t1.c0) NOT NULL), CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))));
SELECT * FROM t1 WHERE ((((((t1.c1)OR(t1.c0)), (t1.c1 IN (t1.c0, t1.c0))))==((((t1.c0) NOT NULL), CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))));
SELECT * FROM t1 WHERE ((((((t1.c1)OR(t1.c0)), (t1.c1 IN (t1.c0))))==((((t1.c0) NOT NULL), CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))));
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((+ (t1.c0))))<((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1))))), ((NULL)>=(t1.c1)) COLLATE BINARY  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((+ (t1.c0))))<((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1))))), ((NULL)>=(t1.c1)) COLLATE BINARY  NULLS FIRST LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE ((t1.c0 IN ()) COLLATE RTRIM) ORDER BY ((((+ (t1.c0))))<((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1))))), ((NULL)>=(t1.c1)) COLLATE BINARY  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((+ (t1.c0))))<((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1))))), ((NULL)>=(t1.c1)) COLLATE BINARY  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((((+ (t1.c0))))<((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1))))), ((NULL)>=(t1.c1)) COLLATE BINARY  NULLS FIRST LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE ((t1.c0 IN ()) COLLATE RTRIM) ORDER BY ((((+ (t1.c0))))<((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1))))), ((NULL)>=(t1.c1)) COLLATE BINARY  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE (((((((((t1.c1)OR(t1.c0)))AND(json_quote(t1.c0))))AND(t1.c0)))AND(((NULL)/(t1.c0)))));
SELECT ALL * FROM t1 WHERE (((((((((((t1.c1)OR(t1.c0)))AND(json_quote(t1.c0))))AND(t1.c0)))AND(((NULL)/(t1.c0)))))AND((((0.28838371326331136))<=((t1.c1))) COLLATE BINARY))) INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1)GLOB('j')))||(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)));
SELECT * FROM t1 WHERE (((((((((t1.c1)OR(t1.c0)))AND(json_quote(t1.c0))))AND(t1.c0)))AND(((NULL)/(t1.c0)))));
SELECT ALL * FROM t1 WHERE (((((((((((t1.c1)OR(t1.c0)))AND(json_quote(t1.c0))))AND(t1.c0)))AND(((NULL)/(t1.c0)))))AND((((0.28838371326331136))<=((t1.c1))) COLLATE BINARY))) INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1)GLOB('j')))||(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((NOT ((t1.c0 IN (t1.c1, t1.c0))))) ORDER BY CASE WHEN t1.c1 THEN t1.c1 END COLLATE RTRIM DESC, ((CASE WHEN NULL THEN t1.c0 ELSE 0.16259935654182844 END) NOT BETWEEN ((- (t1.c1))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))) DESC  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((NOT ((t1.c0 IN (t1.c1, t1.c0)))))AND(((CAST(t1.c0 AS BLOB))LIKE(NULL))))) ORDER BY ((((+ (t1.c0)), ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)), (~ (t1.c0))))<=((((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0)), NULL, ((t1.c0)GLOB(t1.c1)))))  NULLS FIRST, (+ (((((t1.c0)OR(t1.c1)))AND('1383623473')))) DESC LIMIT 0x3 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((NOT (LIKE(t1.c0, t1.c1)))) ORDER BY ((((+ (t1.c0)), ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)), (~ (t1.c0))))<=((((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0)), NULL, ((t1.c0)GLOB(t1.c1)))))  NULLS FIRST, (+ (((((t1.c0)OR(t1.c1)))AND('1383623473')))) DESC LIMIT 0x3;
SELECT MIN(t1.c1) FROM t1 WHERE ((((t1.c1, t1.c0, t1.c1)) BETWEEN (((t1.c1 IN ()), t1.c1, 0x7bea7dcf)) AND ((((((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c0)), (((t1.c1, t1.c0))<>((t1.c0, t1.c1))), ((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))))) ORDER BY (((t1.c1, t1.c0, NULL)) BETWEEN ((((((t1.c0)OR(-9.44334593E8)))OR(t1.c1)), ((t1.c0) ISNULL), ((t1.c0)==(t1.c1)))) AND (((((t1.c1))>=((t1.c1))), t1.c1 COLLATE RTRIM, ((t1.c1) IS FALSE)))), ((NULLIF(NULL, t1.c1)) ISNULL);
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c1)) BETWEEN (((t1.c1 IN ()), t1.c1, 2078965199)) AND ((((((((((((t1.c1)OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c0)), (((t1.c1, t1.c0))>((t1.c0, t1.c1))), ((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0))))))AND(((((t1.c0) ISNULL)) BETWEEN (CAST(t1.c0 AS BLOB)) AND (((t1.c0)>=(t1.c1))))))) ORDER BY (((t1.c0 IN (t1.c1)))-((t1.c0 IN (t1.c1, t1.c1)))), (PRINTF(t1.c1) IN ())  NULLS FIRST, t1.c1  NULLS FIRST LIMIT 0x3 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CASE ((t1.c0) ISNULL)  WHEN t1.c0 THEN ((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (x'8289')) THEN t1.c1 WHEN (t1.c1 IN (t1.c0, t1.c0)) THEN ((t1.c0) ISNULL) ELSE t1.c0 END) ORDER BY (((t1.c0 IN (t1.c1)))-((t1.c0 IN (t1.c1, t1.c1)))), (PRINTF(t1.c1) IN ())  NULLS FIRST, t1.c1  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)>=(((t1.c0) IS FALSE))));
SELECT DISTINCT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)>=(((t1.c0) IS FALSE))))AND(((x'8b7a') NOT BETWEEN ('U') AND (t1.c1)) COLLATE BINARY))) ORDER BY ((x'4f')==(0xffffffffda7a6eb0)) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((NOT (''''))) ORDER BY ((x'4f')==(-629510480)) LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)>=(((t1.c0) IS FALSE))));
SELECT DISTINCT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)>=(((t1.c0) IS FALSE))))AND(((x'8b7a') NOT BETWEEN ('U') AND (t1.c1)) COLLATE BINARY))) ORDER BY ((x'4f')==(0xffffffffda7a6eb0)) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((NOT (''''))) ORDER BY ((x'4f')==(-629510480)) LIMIT 0X2;
SELECT * FROM t1 WHERE (TRIM(DISTINCT ((((((((((t1.c1)AND(t1.c0)))AND(353841469)))AND(0.07751689649021953)))OR(t1.c1)))AND(t1.c0)), (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (TRIM(DISTINCT ((((((((((t1.c1)AND(t1.c0)))AND(353841469)))AND(0.07751689649021953)))OR(t1.c1)))AND(t1.c0)), (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))))) LIMIT 2;
SELECT * FROM t1 WHERE (TRIM(DISTINCT ((((((((((t1.c1)AND(t1.c0)))AND(353841469)))AND(0.07751689649021953)))OR(t1.c1)))AND(t1.c0)), (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (TRIM(DISTINCT ((((((((((t1.c1)AND(t1.c0)))AND(353841469)))AND(0.07751689649021953)))OR(t1.c1)))AND(t1.c0)), (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))))) LIMIT 2;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS TEXT))<=((((t1.c0, t1.c1))<=(('0.9532317774099616', t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS TEXT))<=((((t1.c0, t1.c1))<=(('0.9532317774099616', t1.c1)))))) ORDER BY (((((t1.c1))<((t1.c1))))<<((t1.c0 IN ())))  NULLS LAST, (((((t1.c1, t1.c0))<=((t1.c0, t1.c0))))<>((((t1.c0))>((t1.c0))))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (LIKELIHOOD(t1.c1, ((((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))) ORDER BY (((((t1.c1))<((t1.c1))))<<((t1.c0 IN ())))  NULLS LAST, (((((t1.c1, t1.c0))<=((t1.c0, t1.c0))))<>((((t1.c0))>((t1.c0))))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS TEXT))<=((((t1.c0, t1.c1))<=(('0.9532317774099616', t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS TEXT))<=((((t1.c0, t1.c1))<=(('0.9532317774099616', t1.c1)))))) ORDER BY (((((t1.c1))<((t1.c1))))<<((t1.c0 IN ())))  NULLS LAST, (((((t1.c1, t1.c0))<=((t1.c0, t1.c0))))<>((((t1.c0))>((t1.c0))))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (LIKELIHOOD(t1.c1, ((((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))) ORDER BY (((((t1.c1))<((t1.c1))))<<((t1.c0 IN ())))  NULLS LAST, (((((t1.c1, t1.c0))<=((t1.c0, t1.c0))))<>((((t1.c0))>((t1.c0))))) DESC  NULLS FIRST LIMIT 0;
SELECT MIN(t1.c0) FROM t1 WHERE ((((UPPER(DISTINCT t1.c1), (((t1.c0))>=((t1.c0))), ((x'7fb5') NOT BETWEEN (t1.c0) AND (t1.c1))))>=((UPPER(t1.c0), ((t1.c0) NOT BETWEEN (-1628956291) AND (t1.c1)), (NOT (t1.c1)))))) ORDER BY ((((((((((t1.c1)*(t1.c0)))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))AND(CAST(t1.c1 AS TEXT))))OR(CAST(t1.c0 AS TEXT))))OR(t1.c0))  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE ((((((UPPER(DISTINCT t1.c1), (((t1.c0))==((t1.c0))), ((x'7fb5') NOT BETWEEN (t1.c0) AND (t1.c1))))>((UPPER(t1.c0), ((t1.c0) NOT BETWEEN (-1628956291) AND (t1.c1)), (NOT (t1.c1))))))AND(((((((t1.c1)OR(t1.c0)))OR(t1.c0))) NOT BETWEEN ((t1.c1 IN (t1.c0))) AND (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))))))) ORDER BY ((((((((((t1.c1)*(t1.c0)))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))AND(CAST(t1.c1 AS TEXT))))OR(CAST(t1.c0 AS TEXT))))OR(t1.c0))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c1)*(t1.c0)))*(-1662463842)));
SELECT ALL * FROM t1 WHERE (((((t1.c1)*(t1.c0)))*(-1662463842))) LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (CAST(t1.c1 AS REAL) COLLATE BINARY) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((((t1.c1)*(t1.c0)))*(-1662463842)));
SELECT ALL * FROM t1 WHERE (((((t1.c1)*(t1.c0)))*(-1662463842))) LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (CAST(t1.c1 AS REAL) COLLATE BINARY) LIMIT 0X0;
SELECT * FROM t1 WHERE (((('-1973345866')) BETWEEN ((((t1.c0)IS NOT(t1.c1)))) AND ((CASE WHEN ']' THEN t1.c0 END))));
SELECT DISTINCT * FROM t1 WHERE (((('-1973345866')) BETWEEN ((((t1.c0)IS NOT(t1.c1)))) AND ((CASE WHEN ']' THEN t1.c0 END)))) ORDER BY ((((((((((((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)OR(t1.c0 COLLATE NOCASE)))AND(0.3084929190281863)))AND(t1.c0)))OR(((t1.c0) ISNULL))))OR(((t1.c0)AND(t1.c1)))))AND((((t1.c0))<>((t1.c0)))))  NULLS FIRST, CAST(((t1.c1)GLOB(t1.c0)) AS TEXT) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0))<((t1.c1))))LIKE(COALESCE(t1.c0, t1.c1)))) ORDER BY ((((((((((((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)OR(t1.c0 COLLATE NOCASE)))AND(0.3084929190281863)))AND(t1.c0)))OR(((t1.c0) ISNULL))))OR(((t1.c0)AND(t1.c1)))))AND((((t1.c0))!=((t1.c0)))))  NULLS FIRST, CAST(((t1.c1)GLOB(t1.c0)) AS TEXT);
SELECT * FROM t1 WHERE (((('-1973345866')) BETWEEN ((((t1.c0)IS NOT(t1.c1)))) AND ((CASE WHEN ']' THEN t1.c0 END))));
SELECT DISTINCT * FROM t1 WHERE (((('-1973345866')) BETWEEN ((((t1.c0)IS NOT(t1.c1)))) AND ((CASE WHEN ']' THEN t1.c0 END)))) ORDER BY ((((((((((((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)OR(t1.c0 COLLATE NOCASE)))AND(0.3084929190281863)))AND(t1.c0)))OR(((t1.c0) ISNULL))))OR(((t1.c0)AND(t1.c1)))))AND((((t1.c0))<>((t1.c0)))))  NULLS FIRST, CAST(((t1.c1)GLOB(t1.c0)) AS TEXT) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0))<((t1.c1))))LIKE(COALESCE(t1.c0, t1.c1)))) ORDER BY ((((((((((((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)OR(t1.c0 COLLATE NOCASE)))AND(0.3084929190281863)))AND(t1.c0)))OR(((t1.c0) ISNULL))))OR(((t1.c0)AND(t1.c1)))))AND((((t1.c0))!=((t1.c0)))))  NULLS FIRST, CAST(((t1.c1)GLOB(t1.c0)) AS TEXT);
SELECT * FROM t1 WHERE (((TRIM(t1.c1, t1.c0)) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((TRIM(t1.c1, t1.c0)) ISNULL)) ORDER BY ((((t1.c1 IN ())))<=((((t1.c1)=(t1.c0))))) DESC  NULLS LAST, (~ (CAST(t1.c0 AS INTEGER))) LIMIT 0x1;
SELECT * FROM t1 WHERE (((TRIM(t1.c1, t1.c0)) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((TRIM(t1.c1, t1.c0)) ISNULL)) ORDER BY ((((t1.c1 IN ())))<=((((t1.c1)=(t1.c0))))) DESC  NULLS LAST, (~ (CAST(t1.c0 AS INTEGER))) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (((((((t1.c0 COLLATE NOCASE)AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))OR(0.646588101784108)))OR(((t1.c1) ISNULL)))) ORDER BY t1.c0 DESC;
SELECT * FROM t1 WHERE (((((((t1.c0 COLLATE NOCASE)AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))OR(0.646588101784108)))OR(((t1.c1) ISNULL)))) ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (((t1.c0)AND(t1.c0))) AND (NULL COLLATE RTRIM)) INTERSECT SELECT * FROM t1 WHERE (TYPEOF(DISTINCT (t1.c1 IN ()))) ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (((t1.c0)AND(t1.c0))) AND (NULL COLLATE RTRIM));
SELECT ALL * FROM t1 WHERE (((((((t1.c0 COLLATE NOCASE)AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))OR(0.646588101784108)))OR(((t1.c1) ISNULL)))) ORDER BY t1.c0 DESC;
SELECT * FROM t1 WHERE (((((((t1.c0 COLLATE NOCASE)AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))OR(0.646588101784108)))OR(((t1.c1) ISNULL)))) ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (((t1.c0)AND(t1.c0))) AND (NULL COLLATE RTRIM)) INTERSECT SELECT * FROM t1 WHERE (TYPEOF(DISTINCT (t1.c1 IN ()))) ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (((t1.c0)AND(t1.c0))) AND (NULL COLLATE RTRIM));
SELECT MAX(t1.c1) FROM t1 WHERE (((CAST(t1.c0 AS TEXT))%(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY CAST(((t1.c0) ISNULL) AS TEXT)  NULLS LAST, CAST(t1.c1 AS TEXT) COLLATE NOCASE  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((CAST(t1.c0 AS TEXT))%(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY CAST(((t1.c0) ISNULL) AS TEXT)  NULLS LAST, CAST(t1.c1 AS TEXT) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ('E婇');
SELECT ALL COUNT(*) FROM t1 WHERE ('E婇') INTERSECT SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c0)) THEN (t1.c1 IN (t1.c1)) ELSE SQLITE_COMPILEOPTION_USED(t1.c1) END);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0))  WHEN ((5.03203198E8)=('d㽸k(zom麟h')) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((t1.c0) NOT NULL) THEN t1.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0))  WHEN ((5.03203198E8)=('d㽸k(zom麟h')) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((t1.c0) NOT NULL) THEN t1.c0 COLLATE RTRIM END) LIMIT 0 INTERSECT SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<('!Wg')))%(TRIM(t1.c0)))) LIMIT 0x0;
SELECT * FROM t1 WHERE (CAST((t1.c0 IN ()) AS REAL));
SELECT DISTINCT * FROM t1 WHERE (CAST((t1.c0 IN ()) AS REAL)) LIMIT 1;
SELECT * FROM t1 WHERE (CAST((t1.c0 IN ()) AS REAL));
SELECT DISTINCT * FROM t1 WHERE (CAST((t1.c0 IN ()) AS REAL)) LIMIT 1;
SELECT COUNT(*) FROM t1 WHERE (((((((((((((((((t1.c0)OR(t1.c1)))AND(0.41014510452953945)))OR(t1.c0)))OR(t1.c0)))OR(((((((((((0.9965088051809956)OR(x'0d2f42')))OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))))AND(NULL)))AND(((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END))) ORDER BY ((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1)) COLLATE NOCASE DESC  NULLS LAST, CAST(((((t1.c0)AND('1571604436')))OR(t1.c0)) AS INTEGER);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((((((((((((((t1.c0)OR(t1.c1)))AND(0.41014510452953945)))OR(t1.c0)))OR(t1.c0)))OR(((((((((((0.9965088051809956)OR(x'0d2f42')))OR(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))))AND(NULL)))AND(((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND((t1.c1 IN (((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))))))) ORDER BY CASE WHEN CAST('EOU>Q' AS REAL) THEN -7.47868847E8 WHEN ((t1.c0)AND(t1.c0)) THEN ((t1.c1)IS NOT(x'')) END ASC  NULLS LAST, ((CAST(0x78671ba9 AS REAL))<=(NULL)) DESC, CASE ((t1.c0)||(t1.c1))  WHEN (1956082742 IN (t1.c0)) THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) WHEN CASE WHEN NULL THEN t1.c1 END THEN UNLIKELY(t1.c1) END DESC  NULLS LAST LIMIT 3;
SELECT * FROM t1 WHERE (NULL) ORDER BY (+ (((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND(t1.c1))))  NULLS LAST, (((NOT (t1.c1))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((((t1.c1)AND(t1.c1)))AND(t1.c0))));
SELECT * FROM t1 WHERE (NULL) ORDER BY (+ (((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND(t1.c1))))  NULLS LAST, (((NOT (t1.c1))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((((t1.c1)AND(t1.c1)))AND(t1.c0))));
SELECT * FROM t1 WHERE (NULL) ORDER BY (+ (((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND(t1.c1))))  NULLS LAST, (((NOT (t1.c1))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((((t1.c1)AND(t1.c1)))AND(t1.c0))));
SELECT * FROM t1 WHERE (NULL) ORDER BY (+ (((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND(t1.c1))))  NULLS LAST, (((NOT (t1.c1))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((((t1.c1)AND(t1.c1)))AND(t1.c0))));
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))LIKE(LIKE(t1.c1, t1.c0, 'a'))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))LIKE(LIKE(t1.c1, t1.c0, 'a'))))AND(x''))) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS BLOB))<(-1.769118976E9))) ORDER BY (((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1)))) IS FALSE) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c1 AS BLOB))<(-1.769118978E9)))AND((((((t1.c0, t1.c1, t1.c1, t1.c1))<((t1.c0, t1.c1, t1.c1, t1.c0)))) NOT BETWEEN (CAST(t1.c0 AS REAL)) AND (t1.c1))))) ORDER BY CASE WHEN (((t1.c0)) BETWEEN ((x'')) AND ((t1.c0))) THEN NULL WHEN ((t1.c1) IS FALSE) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((x'09')<<(t1.c0)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN (((t1.c0, 0.20025627345273822))<((t1.c0, 1.552213072E9))) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c1) NOTNULL) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END WHEN CAST(t1.c1 AS BLOB) THEN t1.c1 WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c0)/(t1.c1)) ELSE t1.c1 END  NULLS LAST, CASE ((t1.c1)LIKE(t1.c1))  WHEN (t1.c1 IN (t1.c1, x'')) THEN ((t1.c0) ISNULL) WHEN (- (t1.c0)) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END WHEN CAST(t1.c1 AS TEXT) THEN (((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0))) WHEN ((t1.c1) ISNULL) THEN ((t1.c0)<<(t1.c0)) ELSE t1.c1 END DESC  NULLS LAST, SQLITE_COMPILEOPTION_GET(NULL)  NULLS FIRST LIMIT 0x3;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS BLOB))<(-1.769118976E9))) ORDER BY (((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1)))) IS FALSE) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c1 AS BLOB))<(-1.769118978E9)))AND((((((t1.c0, t1.c1, t1.c1, t1.c1))<((t1.c0, t1.c1, t1.c1, t1.c0)))) NOT BETWEEN (CAST(t1.c0 AS REAL)) AND (t1.c1))))) ORDER BY CASE WHEN (((t1.c0)) BETWEEN ((x'')) AND ((t1.c0))) THEN NULL WHEN ((t1.c1) IS FALSE) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((x'09')<<(t1.c0)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN (((t1.c0, 0.20025627345273822))<((t1.c0, 1.552213072E9))) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c1) NOTNULL) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END WHEN CAST(t1.c1 AS BLOB) THEN t1.c1 WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c0)/(t1.c1)) ELSE t1.c1 END  NULLS LAST, CASE ((t1.c1)LIKE(t1.c1))  WHEN (t1.c1 IN (t1.c1, x'')) THEN ((t1.c0) ISNULL) WHEN (- (t1.c0)) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END WHEN CAST(t1.c1 AS TEXT) THEN (((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0))) WHEN ((t1.c1) ISNULL) THEN ((t1.c0)<<(t1.c0)) ELSE t1.c1 END DESC  NULLS LAST, SQLITE_COMPILEOPTION_GET(NULL)  NULLS FIRST LIMIT 0x3;
SELECT COUNT(*) FROM t1 WHERE (json_object(CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, CASE '&'  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, ((t1.c0) IS FALSE), (~ (t1.c0))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (json_object(CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, CASE '&'  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END, ((t1.c0) IS FALSE), (~ (t1.c0)))) ORDER BY (((t1.c0, t1.c1, -1.357763336E9)) BETWEEN ((((t1.c1)+('-2096823167')), IFNULL(DISTINCT t1.c0, t1.c0), ((t1.c0)OR('-456925973')))) AND ((LIKELY(t1.c1), CASE t1.c1  WHEN t1.c1 THEN x'28' WHEN t1.c1 THEN t1.c1 ELSE '>K' END, LOWER(t1.c1)))), QUOTE(((t1.c0)AND(t1.c0)))  NULLS FIRST, ((((t1.c0)OR(t1.c1)))AND(t1.c1)) COLLATE RTRIM  NULLS LAST, ((t1.c0)==(((t1.c0)GLOB(t1.c1)))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((+ (((t1.c1) NOT NULL)))) ORDER BY ((CAST(t1.c0 AS REAL)) BETWEEN (((t1.c1)<=(t1.c0))) AND (((t1.c0) ISNULL)))  NULLS FIRST, (((873922327 IN (t1.c0)))%(((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1))));
SELECT * FROM t1 WHERE ((+ (((t1.c1) NOT NULL)))) ORDER BY CAST(((((((t1.c0)OR(t1.c0)))AND(NULL)))AND(t1.c0)) AS BLOB)  NULLS LAST, ((('嬶N', t1.c0))<=((t1.c1, t1.c1))) COLLATE NOCASE INTERSECT SELECT * FROM t1 WHERE ((NOT (((NULL)>>(t1.c0))))) ORDER BY CAST(((((((t1.c0)OR(t1.c0)))AND(NULL)))AND(t1.c0)) AS BLOB)  NULLS LAST, ((('嬶N', t1.c0))<=((t1.c1, t1.c1))) COLLATE NOCASE;
SELECT ALL * FROM t1 WHERE ((+ (((t1.c1) NOT NULL)))) ORDER BY ((CAST(t1.c0 AS REAL)) BETWEEN (((t1.c1)<=(t1.c0))) AND (((t1.c0) ISNULL)))  NULLS FIRST, (((873922327 IN (t1.c0)))%(((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c1))));
SELECT * FROM t1 WHERE ((+ (((t1.c1) NOT NULL)))) ORDER BY CAST(((((((t1.c0)OR(t1.c0)))AND(NULL)))AND(t1.c0)) AS BLOB)  NULLS LAST, ((('嬶N', t1.c0))<=((t1.c1, t1.c1))) COLLATE NOCASE INTERSECT SELECT * FROM t1 WHERE ((NOT (((NULL)>>(t1.c0))))) ORDER BY CAST(((((((t1.c0)OR(t1.c0)))AND(NULL)))AND(t1.c0)) AS BLOB)  NULLS LAST, ((('嬶N', t1.c0))<=((t1.c1, t1.c1))) COLLATE NOCASE;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CAST(((t1.c1)&(t1.c1)) AS BLOB)) ORDER BY (- (t1.c1 COLLATE BINARY)) DESC;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((CAST(((t1.c1)&(t1.c1)) AS BLOB))AND(t1.c0))) ORDER BY ((((t1.c1) ISNULL))>(((t1.c0) IS TRUE))) ASC, (((((((NOT (t1.c0)))OR(((t1.c0) IS FALSE))))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))OR(((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))) ASC, (t1.c0 IN ()) DESC;
SELECT MIN(t1.c1) FROM t1 WHERE (((((((((((((x'')AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(x'8674')))AND(t1.c0))) ISNULL));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((((((((((x'')AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))AND(x'8674')))AND(t1.c0))) ISNULL))AND((((t1.c1)>>(t1.c1)) IN ())))) LIMIT 0 INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (t1.c0) LIMIT 0X0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (UPPER(DISTINCT (((t1.c0, t1.c1, t1.c0, t1.c0))<((t1.c1, NULL, t1.c0, t1.c1)))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((UPPER(DISTINCT (((t1.c0, t1.c1, t1.c0, t1.c0))<((t1.c1, NULL, t1.c0, t1.c1)))))AND(''))) ORDER BY (((t1.c0)) BETWEEN ((NULL)) AND ((LOWER(t1.c1))))  NULLS LAST, ((t1.c1) BETWEEN (t1.c1) AND (CAST(t1.c0 AS INTEGER))) DESC  NULLS FIRST LIMIT 0;
SELECT MAX(t1.c0) FROM t1 WHERE ((NOT (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((NOT (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))))AND(t1.c0))) ORDER BY CAST(((t1.c0)<>(t1.c0)) AS NUMERIC) ASC  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1, t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)), ((t1.c1)==(t1.c0)), (~ (t1.c0)), CASE WHEN t1.c1 THEN 0.554641134694526 ELSE t1.c0 END, CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN 0.13488530366236762 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE NULL END)) AND ((t1.c0, (+ (t1.c0)), CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((((t1.c1)OR(t1.c1)))OR(t1.c0)), (t1.c0 IN ())))));
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1, t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)), ((t1.c1)==(t1.c0)), (~ (t1.c0)), CASE WHEN t1.c1 THEN 0.554641134694526 ELSE t1.c0 END, CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN 0.13488530366236762 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE NULL END)) AND ((t1.c0, (+ (t1.c0)), CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((((t1.c1)OR(t1.c1)))OR(t1.c0)), (t1.c0 IN ()))))) ORDER BY (t1.c0 IN ((~ (t1.c1))))  NULLS LAST, (((((t1.c1 IN (t1.c0)))OR('0.2599864153481758')))AND(((t1.c0)IS(t1.c1)))) INTERSECT SELECT * FROM t1 WHERE ((NOT ((- (t1.c0))))) ORDER BY (t1.c0 IN ((~ (t1.c1))))  NULLS LAST, (((((t1.c1 IN (t1.c0)))OR('0.2599864153481758')))AND(((t1.c0)IS(t1.c1))));
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c1, t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)), ((t1.c1)==(t1.c0)), (~ (t1.c0)), CASE WHEN t1.c1 THEN 0.554641134694526 ELSE t1.c0 END, CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN 0.13488530366236762 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE NULL END)) AND ((t1.c0, (+ (t1.c0)), CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((((t1.c1)OR(t1.c1)))OR(t1.c0)), (t1.c0 IN ())))));
SELECT * FROM t1 WHERE ((((t1.c0, t1.c1, t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)), ((t1.c1)==(t1.c0)), (~ (t1.c0)), CASE WHEN t1.c1 THEN 0.554641134694526 ELSE t1.c0 END, CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN 0.13488530366236762 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE NULL END)) AND ((t1.c0, (+ (t1.c0)), CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((((t1.c1)OR(t1.c1)))OR(t1.c0)), (t1.c0 IN ()))))) ORDER BY (t1.c0 IN ((~ (t1.c1))))  NULLS LAST, (((((t1.c1 IN (t1.c0)))OR('0.2599864153481758')))AND(((t1.c0)IS(t1.c1)))) INTERSECT SELECT * FROM t1 WHERE ((NOT ((- (t1.c0))))) ORDER BY (t1.c0 IN ((~ (t1.c1))))  NULLS LAST, (((((t1.c1 IN (t1.c0)))OR('0.2599864153481758')))AND(((t1.c0)IS(t1.c1))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))AND(((t1.c1)*(t1.c1)))))OR(((t1.c0) NOTNULL)))) ORDER BY ((t1.c1) BETWEEN (t1.c1 COLLATE BINARY) AND ((t1.c0 IN (t1.c1, t1.c1))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))AND(((t1.c1)*(t1.c1)))))OR(((t1.c0) NOTNULL)))) ORDER BY (((t1.c1)) BETWEEN (((- (t1.c0)))) AND ((t1.c0))) DESC, ((t1.c1)<<((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) ASC LIMIT 3 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (((t1.c1)) BETWEEN (((- (t1.c0)))) AND ((t1.c0))) DESC, ((t1.c1)<<((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) ASC LIMIT 3;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((- (((((t1.c0)AND(t1.c0)))AND(t1.c1))))) ORDER BY (((((t1.c1, t1.c1, 0Xffffffffd3c0b003)) BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c0, t1.c0, t1.c0)))) BETWEEN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (t1.c0))  NULLS LAST, ((353841469) BETWEEN ('73') AND ((+ (t1.c0)))) DESC, (((t1.c0) NOTNULL) IN ());
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((- (((((t1.c0)AND(t1.c0)))AND(t1.c1))))) ORDER BY (((((x'3ddb')/(t1.c1))))=((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((t1.c1 COLLATE RTRIM) NOT BETWEEN ((+ (t1.c1))) AND (((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(x'8b84')))OR(t1.c1))))) ORDER BY (((((x'3ddb')/(t1.c1))))=((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END))) DESC  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CAST(((((t1.c0)OR(t1.c0)))AND(t1.c1)) AS REAL)) ORDER BY CAST(t1.c1 AS TEXT) COLLATE NOCASE ASC, CAST(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END AS NUMERIC) DESC, ((((t1.c0)<>(t1.c1))) ISNULL);
SELECT MAX(t1.c1) FROM t1 WHERE (CAST(((((t1.c0)OR(t1.c0)))AND(t1.c1)) AS REAL)) ORDER BY CAST(t1.c1 AS TEXT) COLLATE NOCASE ASC, CAST(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END AS NUMERIC) DESC, ((((t1.c0)!=(t1.c1))) ISNULL);
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c1)>>(t1.c0))) NOT BETWEEN (CASE WHEN t1.c1 THEN 0.9635923601984913 END) AND (((t1.c1)==(t1.c1)))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((((t1.c1)>>(t1.c0))) NOT BETWEEN (CASE WHEN t1.c1 THEN 0.9635923601984913 END) AND (((t1.c1)<=(t1.c1)))))AND((((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) IN ((t1.c0 IN ()))))));
SELECT ALL * FROM t1 WHERE ((((((t1.c0) IS FALSE)))==((((1.418587284E9)OR(t1.c0)))))) ORDER BY ((((((((((t1.c1) NOT NULL))AND(0.38490902937899174)))OR(CAST(t1.c1 AS NUMERIC))))OR(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))OR((t1.c0 IN (t1.c0)))) ASC, t1.c1 COLLATE NOCASE, CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS REAL), (+ (((x'7a60') NOT BETWEEN (t1.c0) AND (t1.c1))));
SELECT * FROM t1 WHERE ((((((((t1.c0) IS FALSE)))==((((1.418587284E9)OR(t1.c0))))))AND((~ (t1.c0 COLLATE BINARY))))) ORDER BY ((((((((((t1.c1) NOT NULL))AND(0.38490902937899174)))OR(CAST(t1.c1 AS NUMERIC))))OR(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))OR((t1.c0 IN (t1.c0)))) ASC, t1.c1 COLLATE NOCASE, CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS REAL), (+ (((x'7a60') NOT BETWEEN (t1.c0) AND (t1.c1)))) LIMIT 2 INTERSECT SELECT ALL * FROM t1 NOT INDEXED WHERE ((((~ (t1.c1))) BETWEEN (t1.c1) AND (((t1.c1)>(t1.c0))))) ORDER BY ((((((((((t1.c1) NOT NULL))AND(0.38490902937899174)))OR(CAST(t1.c1 AS NUMERIC))))OR(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))OR((t1.c0 IN (t1.c0)))) ASC, t1.c1 COLLATE NOCASE, CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS REAL), (+ (((x'7a60') NOT BETWEEN (t1.c0) AND (t1.c1)))) LIMIT 2;
SELECT ALL * FROM t1 WHERE ((((((t1.c0) IS FALSE)))==((((1.418587284E9)OR(t1.c0)))))) ORDER BY ((((((((((t1.c1) NOT NULL))AND(0.38490902937899174)))OR(CAST(t1.c1 AS NUMERIC))))OR(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))OR((t1.c0 IN (t1.c0)))) ASC, t1.c1 COLLATE NOCASE, CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS REAL), (+ (((x'7a60') NOT BETWEEN (t1.c0) AND (t1.c1))));
SELECT * FROM t1 WHERE ((((((((t1.c0) IS FALSE)))==((((1.418587284E9)OR(t1.c0))))))AND((~ (t1.c0 COLLATE BINARY))))) ORDER BY ((((((((((t1.c1) NOT NULL))AND(0.38490902937899174)))OR(CAST(t1.c1 AS NUMERIC))))OR(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))OR((t1.c0 IN (t1.c0)))) ASC, t1.c1 COLLATE NOCASE, CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS REAL), (+ (((x'7a60') NOT BETWEEN (t1.c0) AND (t1.c1)))) LIMIT 2 INTERSECT SELECT ALL * FROM t1 NOT INDEXED WHERE ((((~ (t1.c1))) BETWEEN (t1.c1) AND (((t1.c1)>(t1.c0))))) ORDER BY ((((((((((t1.c1) NOT NULL))AND(0.38490902937899174)))OR(CAST(t1.c1 AS NUMERIC))))OR(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))OR((t1.c0 IN (t1.c0)))) ASC, t1.c1 COLLATE NOCASE, CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) AS REAL), (+ (((x'7a60') NOT BETWEEN (t1.c0) AND (t1.c1)))) LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE ((((+ (t1.c1)))GLOB(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (((t1.c0 COLLATE BINARY))<=(((t1.c1 IN (t1.c1))))) DESC, CAST(t1.c0 AS REAL) ASC;
SELECT COUNT(*) FROM t1 WHERE ((((+ (t1.c1)))GLOB(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY LTRIM((+ (t1.c1))) DESC INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((NULL IN ())) ORDER BY LTRIM((+ (t1.c1))) DESC;
SELECT MAX(t1.c0) FROM t1 WHERE ((((t1.c0))<((t1.c0))) COLLATE RTRIM);
SELECT MAX(t1.c0) FROM t1 WHERE ((((((t1.c0))<((t1.c0))) COLLATE RTRIM)AND(((t1.c0) IS TRUE) COLLATE NOCASE))) ORDER BY ((t1.c0)-(t1.c0)) COLLATE RTRIM LIMIT 0;
SELECT ALL * FROM t1 WHERE (((CASE 0.2547165742522194  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)==(t1.c0)));
SELECT * FROM t1 WHERE (((CASE 0.2547165742522194  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)=(t1.c0))) ORDER BY 2.067293718E9  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((CASE 0.2547165742522194  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)==(t1.c0)));
SELECT * FROM t1 WHERE (((CASE 0.2547165742522194  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)=(t1.c0))) ORDER BY 2.067293718E9  NULLS FIRST LIMIT 0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((~ (json_type(t1.c0))));
SELECT MIN(t1.c0) FROM t1 WHERE ((((~ (json_type(t1.c0))))AND((((((t1.c0)OR(t1.c0)))OR(t1.c0)) IN (highlight(t1.c0, '-617936325', t1.c0, t1.c1))))));
SELECT * FROM t1 WHERE (CASE WHEN ((NULL)GLOB(t1.c1)) THEN t1.c0 WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) THEN ((x'307806') NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN ((t1.c1) NOTNULL) THEN (+ (t1.c0)) WHEN ((t1.c1)GLOB(t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) ELSE ((t1.c0) IS FALSE) END) ORDER BY CASE (~ (t1.c1))  WHEN ((0.09457879045659401) BETWEEN (t1.c1) AND (t1.c0)) THEN CAST(t1.c1 AS INTEGER) ELSE CAST(t1.c1 AS INTEGER) END  NULLS LAST, ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (LIKELY(t1.c1)) AND (((t1.c1)||(t1.c0)))) ASC  NULLS FIRST, ((((((t1.c1)OR(CASE t1.c0  WHEN t1.c1 THEN t1.c0 END)))OR(t1.c0)))OR(((((((((((t1.c1)AND(t1.c1)))AND(x'')))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))) DESC;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN ((NULL)GLOB(t1.c1)) THEN t1.c0 WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) THEN ((x'307806') NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN ((t1.c1) NOTNULL) THEN (+ (t1.c0)) WHEN ((t1.c1)GLOB(t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) ELSE ((t1.c0) IS FALSE) END) ORDER BY ((((t1.c0)-(t1.c1))) IS TRUE) ASC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (x'') ORDER BY ((((t1.c0)-(t1.c1))) IS TRUE) ASC  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (CASE WHEN ((NULL)GLOB(t1.c1)) THEN t1.c0 WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) THEN ((x'307806') NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN ((t1.c1) NOTNULL) THEN (+ (t1.c0)) WHEN ((t1.c1)GLOB(t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) ELSE ((t1.c0) IS FALSE) END) ORDER BY CASE (~ (t1.c1))  WHEN ((0.09457879045659401) BETWEEN (t1.c1) AND (t1.c0)) THEN CAST(t1.c1 AS INTEGER) ELSE CAST(t1.c1 AS INTEGER) END  NULLS LAST, ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (LIKELY(t1.c1)) AND (((t1.c1)||(t1.c0)))) ASC  NULLS FIRST, ((((((t1.c1)OR(CASE t1.c0  WHEN t1.c1 THEN t1.c0 END)))OR(t1.c0)))OR(((((((((((t1.c1)AND(t1.c1)))AND(x'')))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))) DESC;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN ((NULL)GLOB(t1.c1)) THEN t1.c0 WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) THEN ((x'307806') NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN ((t1.c1) NOTNULL) THEN (+ (t1.c0)) WHEN ((t1.c1)GLOB(t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) ELSE ((t1.c0) IS FALSE) END) ORDER BY ((((t1.c0)-(t1.c1))) IS TRUE) ASC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (x'') ORDER BY ((((t1.c0)-(t1.c1))) IS TRUE) ASC  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY LTRIM(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, ((t1.c1)-(t1.c1))) ASC, CAST((+ (t1.c1)) AS REAL) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) IN (((t1.c1)+(t1.c0)))) LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c0, 0.8319174161007276)) AND ((t1.c1, t1.c1, t1.c1, '1286283798'))))<(CAST(t1.c0 AS INTEGER)))) ORDER BY (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) IN (((t1.c1)+(t1.c0)))) LIMIT 0X3;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY LTRIM(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, ((t1.c1)-(t1.c1))) ASC, CAST((+ (t1.c1)) AS REAL) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) IN (((t1.c1)+(t1.c0)))) LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c0, 0.8319174161007276)) AND ((t1.c1, t1.c1, t1.c1, '1286283798'))))<(CAST(t1.c0 AS INTEGER)))) ORDER BY (((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) IN (((t1.c1)+(t1.c0)))) LIMIT 0X3;
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (1051196884) AND (t1.c0))) NOT NULL)) ORDER BY (t1.c0 IN ())  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (0X3ea7fdd4) AND (t1.c0))) NOT NULL))AND(((t1.c1 COLLATE BINARY)IS(((t1.c1)LIKE(t1.c1))))))) ORDER BY (t1.c0 IN ())  NULLS FIRST LIMIT 0x1 INTERSECT SELECT * FROM t1 WHERE (ABS(((t1.c0)>(t1.c1)))) ORDER BY (t1.c0 IN ())  NULLS FIRST LIMIT 0X1;
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (1051196884) AND (t1.c0))) NOT NULL)) ORDER BY (t1.c0 IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE CASE WHEN t1.c1 THEN t1.c1 END  WHEN (((t1.c1, t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c0))) THEN ((0Xfbff908) NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN ((t1.c0)IS(t1.c0)) THEN 0.015607259565628473 ELSE t1.c1 END);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE CASE WHEN t1.c1 THEN t1.c1 END  WHEN (((t1.c1, t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c0))) THEN ((0Xfbff908) NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN ((t1.c0)IS(t1.c0)) THEN 0.015607259565628473 ELSE t1.c1 END)AND((((t1.c1))>((t1.c1))) COLLATE NOCASE))) ORDER BY 0.5263670753166596 DESC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CASE (- (t1.c1))  WHEN ((t1.c0)<=(t1.c0)) THEN t1.c0 COLLATE BINARY ELSE ((t1.c0) BETWEEN (t1.c0) AND (1562056813)) END) ORDER BY 0.5263670753166596 DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 COLLATE NOCASE THEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END END);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 COLLATE NOCASE THEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END END) ORDER BY ((t1.c0) IS TRUE) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (IFNULL(t1.c0, t1.c0 COLLATE BINARY));
SELECT * FROM t1 WHERE (((IFNULL(t1.c0, t1.c0 COLLATE BINARY))AND(CAST(t1.c1 AS REAL)))) LIMIT 0X2;
SELECT * FROM t1 WHERE (IFNULL(t1.c0, t1.c0 COLLATE BINARY));
SELECT * FROM t1 WHERE (((IFNULL(t1.c0, t1.c0 COLLATE BINARY))AND(CAST(t1.c1 AS REAL)))) LIMIT 0X2;
SELECT ALL MAX(t1.c1) FROM t1 NOT INDEXED WHERE ((((((+ (NULL)))AND((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((5.39426997E8))))))AND(((t1.c0)LIKE(t1.c1)))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((((+ (NULL)))AND((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((5.39426997E8))))))AND(((t1.c0)LIKE(t1.c1)))))AND(0x6dd3e141))) ORDER BY NULL ASC  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE (TIME(((t1.c0)>=(t1.c0)), ((t1.c1) NOT NULL), ((t1.c1) NOT BETWEEN (t1.c1) AND ('0.20025627345273822'))));
SELECT COUNT(*) FROM t1 WHERE (((TIME(((t1.c0)>=(t1.c0)), ((t1.c1) NOT NULL), ((t1.c1) NOT BETWEEN (t1.c1) AND ('0.20025627345273822'))))AND(((- (t1.c0)) IN ())))) ORDER BY ((((t1.c1 IN ()), '477273897', json_array_length(t1.c0), UPPER('(6爳m~N}_')))!=(((t1.c0 IN ()), ((t1.c1)OR(t1.c1)), ((t1.c1) IS TRUE), ((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0))))) DESC INTERSECT SELECT COUNT(*) FROM t1 WHERE (((0.2918491409733558)LIKE(STRFTIME(t1.c0, t1.c0, 0.06389991955429708, t1.c1)))) ORDER BY ((((t1.c1 IN ()), '477273897', json_array_length(t1.c0), UPPER('(6爳m~N}_')))!=(((t1.c0 IN ()), ((t1.c1)OR(t1.c1)), ((t1.c1) IS TRUE), ((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0))))) DESC;
SELECT MIN(t1.c0) FROM t1 WHERE (((+ (t1.c1)) IN (NULL))) ORDER BY CAST(x'09' AS BLOB), (+ (t1.c1)) ASC  NULLS LAST, t1.c0 DESC  NULLS LAST, (((((t1.c1, t1.c1))<((t1.c1, t1.c0))))||(x'3fd5'))  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((+ (t1.c1)) IN (NULL))) ORDER BY CAST(x'09' AS BLOB), (+ (t1.c1)) ASC  NULLS LAST, t1.c0 DESC  NULLS LAST, (((((t1.c1, t1.c1))<((t1.c1, t1.c0))))||(x'3fd5'))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((('')) BETWEEN ((t1.c0)) AND ((t1.c0))))OR((t1.c1 IN ()))))AND((((t1.c0, t1.c1, t1.c1))==((t1.c0, t1.c0, t1.c1))))))OR(((t1.c0) NOTNULL))));
SELECT * FROM t1 WHERE (((((((((('')) BETWEEN ((t1.c0)) AND ((t1.c0))))OR((t1.c1 IN ()))))AND((((t1.c0, t1.c1, t1.c1))=((t1.c0, t1.c0, t1.c1))))))OR(((t1.c0) NOTNULL)))) ORDER BY (NOT (((t1.c0) IS FALSE))), x'b519'  NULLS LAST, ((t1.c0)<(t1.c0)) COLLATE BINARY ASC  NULLS FIRST, t1.c0;
SELECT ALL * FROM t1 WHERE (((((((((('')) BETWEEN ((t1.c0)) AND ((t1.c0))))OR((t1.c1 IN ()))))AND((((t1.c0, t1.c1, t1.c1))==((t1.c0, t1.c0, t1.c1))))))OR(((t1.c0) NOTNULL))));
SELECT * FROM t1 WHERE (((((((((('')) BETWEEN ((t1.c0)) AND ((t1.c0))))OR((t1.c1 IN ()))))AND((((t1.c0, t1.c1, t1.c1))=((t1.c0, t1.c0, t1.c1))))))OR(((t1.c0) NOTNULL)))) ORDER BY (NOT (((t1.c0) IS FALSE))), x'b519'  NULLS LAST, ((t1.c0)<(t1.c0)) COLLATE BINARY ASC  NULLS FIRST, t1.c0;
SELECT ALL * FROM t1 WHERE (((((((t1.c0))>((t1.c1))), '
g)'))<=((((1486003871) BETWEEN (t1.c1) AND (t1.c1)), ((t1.c0)&(t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0))>((t1.c1))), '
g)'))=((((0X58929e9f) BETWEEN (t1.c1) AND (t1.c1)), ((t1.c0)&(t1.c1)))))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC))>(((t1.c1)IS NOT(t1.c1))))) LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (((((((t1.c0))>((t1.c1))), '
g)'))<=((((1486003871) BETWEEN (t1.c1) AND (t1.c1)), ((t1.c0)&(t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0))>((t1.c1))), '
g)'))=((((0X58929e9f) BETWEEN (t1.c1) AND (t1.c1)), ((t1.c0)&(t1.c1)))))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC))>(((t1.c1)IS NOT(t1.c1))))) LIMIT 0X2;
SELECT COUNT(*) FROM t1 WHERE (0Xffffffffee26ac5a) ORDER BY NULL ASC, (((t1.c0, t1.c0)) NOT BETWEEN ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END, x'714a')) AND ((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)), (- (t1.c0))))) ASC, UNLIKELY(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) DESC;
SELECT COUNT(*) FROM t1 WHERE (((-299455398)AND((((+ (t1.c1)))==(-961531004 COLLATE BINARY))))) ORDER BY (+ (t1.c1))  NULLS LAST LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))  WHEN 0.056936107960318894 THEN t1.c0 WHEN LOWER(t1.c0) THEN t1.c1 WHEN ((t1.c1)<<(t1.c0)) THEN (t1.c0 IN (t1.c0)) WHEN t1.c1 THEN ((NULL)LIKE(t1.c0)) WHEN (('Odu') NOT BETWEEN (t1.c0) AND (t1.c1)) THEN (t1.c1 IN (t1.c1)) ELSE (t1.c0 IN ()) END) ORDER BY (((t1.c0 COLLATE RTRIM, TOTAL_CHANGES()))>=((CAST(x'4d1a864a' AS REAL), ((((((t1.c1)OR(0x2b84c831)))AND(t1.c1)))OR(t1.c0))))), t1.c0 ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))  WHEN 0.056936107960318894 THEN t1.c0 WHEN LOWER(t1.c0) THEN t1.c1 WHEN ((t1.c1)<<(t1.c0)) THEN (t1.c0 IN (t1.c0)) WHEN t1.c1 THEN ((NULL)LIKE(t1.c0)) WHEN (('Odu') NOT BETWEEN (t1.c0) AND (t1.c1)) THEN (t1.c1 IN (t1.c1)) ELSE (t1.c0 IN ()) END) ORDER BY t1.c1 ASC  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((t1.c0)!=(t1.c1)) IN (ABS(t1.c0)))) ORDER BY t1.c1 ASC  NULLS FIRST LIMIT 0x2;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)+(t1.c0)))LIKE(CAST(t1.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)+(t1.c0)))LIKE(CAST(t1.c1 AS NUMERIC)))) INTERSECT SELECT COUNT(*) FROM t1 WHERE (ABS((~ (t1.c1))));
SELECT ALL * FROM t1 WHERE ((((t1.c1) IS FALSE) IN (CAST(t1.c1 AS NUMERIC)))) ORDER BY CAST(x'' AS REAL) DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((((((t1.c1) IS FALSE) IN (CAST(t1.c1 AS NUMERIC))))AND(QUOTE(t1.c0 COLLATE NOCASE)))) ORDER BY CAST(x'' AS REAL) DESC  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0))<=((-124949447, t1.c1, t1.c1))) COLLATE NOCASE) ORDER BY CAST(x'' AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((t1.c1) IS FALSE) IN (CAST(t1.c1 AS NUMERIC)))) ORDER BY CAST(x'' AS REAL) DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((((((t1.c1) IS FALSE) IN (CAST(t1.c1 AS NUMERIC))))AND(QUOTE(t1.c0 COLLATE NOCASE)))) ORDER BY CAST(x'' AS REAL) DESC  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0))<=((-124949447, t1.c1, t1.c1))) COLLATE NOCASE) ORDER BY CAST(x'' AS REAL) DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))<<(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))));
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))<<(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))));
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))<<(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))));
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))<<(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))));
SELECT ALL * FROM t1 WHERE (((((('e(#'))==((t1.c0)))) NOTNULL)) ORDER BY ((t1.c1) ISNULL), CAST('7' AS NUMERIC)  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((('e(#'))=((t1.c0)))) NOTNULL)) ORDER BY ((t1.c1) ISNULL), CAST('7' AS NUMERIC)  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1)GLOB(t1.c1)))OR(t1.c0 COLLATE RTRIM)))OR(x'')))OR(CAST(t1.c0 AS TEXT)))) ORDER BY ((t1.c1) ISNULL), CAST('7' AS NUMERIC)  NULLS FIRST LIMIT 0x3;
SELECT ALL * FROM t1 WHERE (((((('e(#'))==((t1.c0)))) NOTNULL)) ORDER BY ((t1.c1) ISNULL), CAST('7' AS NUMERIC)  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((('e(#'))=((t1.c0)))) NOTNULL)) ORDER BY ((t1.c1) ISNULL), CAST('7' AS NUMERIC)  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1)GLOB(t1.c1)))OR(t1.c0 COLLATE RTRIM)))OR(x'')))OR(CAST(t1.c0 AS TEXT)))) ORDER BY ((t1.c1) ISNULL), CAST('7' AS NUMERIC)  NULLS FIRST LIMIT 0x3;
SELECT ALL * FROM t1 WHERE (TRIM(json_patch(t1.c1, t1.c1))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 END AS INTEGER)  NULLS LAST, TRIM(DISTINCT ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))  NULLS LAST, (((~ ('砌')))%(0.7326516555029623)) ASC  NULLS FIRST;
SELECT * FROM t1 NOT INDEXED WHERE (TRIM(json_patch(t1.c1, t1.c1))) ORDER BY ((((t1.c1)OR(t1.c1)))==(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)) DESC LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (TRIM(json_patch(t1.c1, t1.c1))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 END AS INTEGER)  NULLS LAST, TRIM(DISTINCT ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))  NULLS LAST, (((~ ('砌')))%(0.7326516555029623)) ASC  NULLS FIRST;
SELECT * FROM t1 NOT INDEXED WHERE (TRIM(json_patch(t1.c1, t1.c1))) ORDER BY ((((t1.c1)OR(t1.c1)))==(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)) DESC LIMIT 0X1;
SELECT * FROM t1 WHERE ((t1.c1 IN ((((t1.c0))<=((t1.c0))), 0X45f5d1cd)));
SELECT DISTINCT * FROM t1 WHERE ((t1.c1 IN ((((t1.c0))<=((t1.c0))), 0x45f5d1cd))) LIMIT 2;
SELECT * FROM t1 WHERE ((t1.c1 IN ((((t1.c0))<=((t1.c0))), 0X45f5d1cd)));
SELECT DISTINCT * FROM t1 WHERE ((t1.c1 IN ((((t1.c0))<=((t1.c0))), 0x45f5d1cd))) LIMIT 2;
SELECT MAX(t1.c1) FROM t1 WHERE (CAST((NOT (t1.c0)) AS NUMERIC)) ORDER BY (NOT (-3.01094617E8))  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CAST((NOT (t1.c0)) AS NUMERIC))AND(((((t1.c1) ISNULL))*(((t1.c1) BETWEEN (t1.c0) AND (t1.c1))))))) ORDER BY (NOT (-3.01094617E8))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((CAST(t1.c0 AS NUMERIC), ((t1.c0)<>(t1.c1)), t1.c0 COLLATE BINARY, t1.c1 COLLATE RTRIM))<((t1.c0 COLLATE RTRIM, (t1.c1 IN ()), ((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c0)), (t1.c1 IN ()))))) ORDER BY t1.c0, CAST((NOT (t1.c1)) AS REAL)  NULLS FIRST, CASE WHEN NULL THEN x'e8917a' WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) THEN (+ (NULL)) WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) WHEN (NOT (t1.c1)) THEN 0.3138637266262574 COLLATE NOCASE WHEN ((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) THEN ((t1.c0) IS FALSE) WHEN t1.c0 THEN (((t1.c1, t1.c1, t1.c1))<>((t1.c1, t1.c0, t1.c1))) ELSE ((t1.c0) NOT BETWEEN ('-747868847') AND (t1.c0)) END;
SELECT ALL * FROM t1 WHERE ((((((CAST(t1.c0 AS NUMERIC), ((t1.c0)<>(t1.c1)), t1.c0 COLLATE BINARY, t1.c1 COLLATE RTRIM))<((t1.c0 COLLATE RTRIM, (t1.c1 IN ()), ((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c0)), (t1.c1 IN ())))))AND(((CASE WHEN t1.c1 THEN t1.c1 END) IS FALSE)))) ORDER BY '-1148669192' DESC, ((((json_patch(t1.c1, t1.c1))AND((t1.c0 IN ('-716591780')))))OR('嚨vPK9')) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((CAST(t1.c0 AS NUMERIC), ((t1.c0)<>(t1.c1)), t1.c0 COLLATE BINARY, t1.c1 COLLATE RTRIM))<((t1.c0 COLLATE RTRIM, (t1.c1 IN ()), ((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c0)), (t1.c1 IN ()))))) ORDER BY t1.c0, CAST((NOT (t1.c1)) AS REAL)  NULLS FIRST, CASE WHEN NULL THEN x'e8917a' WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) THEN (+ (NULL)) WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) WHEN (NOT (t1.c1)) THEN 0.3138637266262574 COLLATE NOCASE WHEN ((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) THEN ((t1.c0) IS FALSE) WHEN t1.c0 THEN (((t1.c1, t1.c1, t1.c1))<>((t1.c1, t1.c0, t1.c1))) ELSE ((t1.c0) NOT BETWEEN ('-747868847') AND (t1.c0)) END;
SELECT ALL * FROM t1 WHERE ((((((CAST(t1.c0 AS NUMERIC), ((t1.c0)<>(t1.c1)), t1.c0 COLLATE BINARY, t1.c1 COLLATE RTRIM))<((t1.c0 COLLATE RTRIM, (t1.c1 IN ()), ((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c0)), (t1.c1 IN ())))))AND(((CASE WHEN t1.c1 THEN t1.c1 END) IS FALSE)))) ORDER BY '-1148669192' DESC, ((((json_patch(t1.c1, t1.c1))AND((t1.c0 IN ('-716591780')))))OR('嚨vPK9')) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE (((t1.c1)AND(CAST(json_insert(t1.c1, t1.c0, t1.c0) AS INTEGER)))) ORDER BY json_valid(((t1.c0)/(t1.c1)))  NULLS LAST, ((((NULL) NOT BETWEEN (t1.c0) AND (t1.c1))) NOT NULL), CAST(t1.c1 AS BLOB)  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE ((- (t1.c1))) ORDER BY json_valid(((t1.c0)/(t1.c1)))  NULLS LAST, ((((NULL) NOT BETWEEN (t1.c0) AND (t1.c1))) NOT NULL), CAST(t1.c1 AS BLOB)  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE (((t1.c1)AND(CAST(json_insert(t1.c1, t1.c0, t1.c0) AS INTEGER)))) ORDER BY json_valid(((t1.c0)/(t1.c1)))  NULLS LAST, ((((NULL) NOT BETWEEN (t1.c0) AND (t1.c1))) NOT NULL), CAST(t1.c1 AS BLOB)  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE ((- (t1.c1))) ORDER BY json_valid(((t1.c0)/(t1.c1)))  NULLS LAST, ((((NULL) NOT BETWEEN (t1.c0) AND (t1.c1))) NOT NULL), CAST(t1.c1 AS BLOB)  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (CASE '0.24664337080653986'  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.5237037163342405 END COLLATE RTRIM);
SELECT * FROM t1 WHERE (((CASE '0.24664337080653986'  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.5237037163342405 END COLLATE RTRIM)AND(((NULL)<(NULL)) COLLATE BINARY))) ORDER BY x'' ASC, (((CAST(t1.c1 AS INTEGER), (- (t1.c0))))=((UNICODE(t1.c1), t1.c0 COLLATE BINARY)))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE '0.24664337080653986'  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.5237037163342405 END COLLATE RTRIM);
SELECT * FROM t1 WHERE (((CASE '0.24664337080653986'  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.5237037163342405 END COLLATE RTRIM)AND(((NULL)<(NULL)) COLLATE BINARY))) ORDER BY x'' ASC, (((CAST(t1.c1 AS INTEGER), (- (t1.c0))))=((UNICODE(t1.c1), t1.c0 COLLATE BINARY)))  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE ((((((((NOT (t1.c0)))OR((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c1, t1.c1, t1.c1))))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((((t1.c1)OR(t1.c0)))OR(t1.c0))))) ORDER BY ((((t1.c1) IS FALSE)) ISNULL) ASC  NULLS FIRST, ((t1.c0)>(t1.c1)) COLLATE RTRIM COLLATE NOCASE, (((t1.c0 IN (t1.c0)))/(NULLIF(t1.c0, t1.c0)))  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1 WHERE ((((((((((NOT (t1.c0)))OR((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c1, t1.c1, t1.c1))))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((((t1.c1)OR(t1.c0)))OR(t1.c0)))))AND('-1849218821'))) ORDER BY ((((t1.c1) IS FALSE)) ISNULL) ASC  NULLS FIRST, ((t1.c0)>(t1.c1)) COLLATE RTRIM COLLATE NOCASE, (((t1.c0 IN (t1.c0)))/(NULLIF(t1.c0, t1.c0)))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE ((LIKELY(DISTINCT t1.c1) IN ())) ORDER BY ((((t1.c1) IS FALSE)) ISNULL) ASC  NULLS FIRST, ((t1.c0)>(t1.c1)) COLLATE RTRIM COLLATE NOCASE, (((t1.c0 IN (t1.c0)))/(NULLIF(t1.c0, t1.c0)))  NULLS FIRST LIMIT 0X1;
SELECT * FROM t1 WHERE (((('鎣')IS(t1.c0)) IN ()));
SELECT DISTINCT * FROM t1 WHERE (((('鎣')IS(t1.c0)) IN ())) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (UPPER(DISTINCT CAST(t1.c0 AS INTEGER))) LIMIT 1;
SELECT * FROM t1 WHERE (((('鎣')IS(t1.c0)) IN ()));
SELECT DISTINCT * FROM t1 WHERE (((('鎣')IS(t1.c0)) IN ())) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (UPPER(DISTINCT CAST(t1.c0 AS INTEGER))) LIMIT 1;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST(((t1.c0)&(t1.c0)) AS REAL));
SELECT MAX(t1.c0) FROM t1 WHERE (CAST(((t1.c0)&(t1.c0)) AS REAL));
SELECT MIN(t1.c1) FROM t1 WHERE (('' IN (t1.c1 COLLATE NOCASE)));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (('' IN (t1.c1 COLLATE NOCASE))) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE NULL END THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) END LIMIT 1 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((SQLITE_COMPILEOPTION_GET(t1.c0))+((('514053957') NOT BETWEEN (t1.c1) AND (t1.c1))))) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE NULL END THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) END LIMIT 0X1;
SELECT * FROM t1 WHERE (NULL);
SELECT * FROM t1 WHERE (((NULL)AND(((((t1.c1)|(t1.c1)))>((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))))))) ORDER BY CAST(0xffffffffedc2f8ba AS BLOB)  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END AS NUMERIC)) ORDER BY CAST(-305989446 AS BLOB)  NULLS FIRST;
SELECT * FROM t1 WHERE (NULL);
SELECT * FROM t1 WHERE (((NULL)AND(((((t1.c1)|(t1.c1)))>((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))))))) ORDER BY CAST(0xffffffffedc2f8ba AS BLOB)  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END AS NUMERIC)) ORDER BY CAST(-305989446 AS BLOB)  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((~ (0.7478876443227236))) NOT BETWEEN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) AND (((t1.c0) IS TRUE)))) ORDER BY (((t1.c1 IN ())) IS TRUE)  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((((~ (0.7478876443227236))) NOT BETWEEN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) AND (((t1.c0) IS TRUE))))AND(CASE NULL  WHEN ((t1.c0) IS TRUE) THEN (- (t1.c1)) WHEN ((t1.c1)=(t1.c0)) THEN (~ (t1.c1)) WHEN ((t1.c1)>=(t1.c0)) THEN ((t1.c1)GLOB(t1.c1)) ELSE CAST(t1.c0 AS REAL) END))) ORDER BY (((t1.c1 IN ())) IS TRUE)  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE ((((+ (t1.c1)))=(LIKELY(DISTINCT t1.c0))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((((+ (t1.c1)))==(LIKELY(DISTINCT t1.c0))))AND(CAST(((t1.c0)LIKE(t1.c0)) AS TEXT)))) INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (CASE (t1.c0 IN ())  WHEN CAST(t1.c1 AS NUMERIC) THEN LIKELY(DISTINCT t1.c1) WHEN ((t1.c1)||(t1.c1)) THEN ((t1.c1)==(t1.c1)) WHEN ((t1.c0)>>(t1.c0)) THEN (t1.c1 IN (x'7c')) WHEN CAST(t1.c0 AS INTEGER) THEN CAST(t1.c1 AS NUMERIC) ELSE ((((((t1.c0)OR(t1.c0)))AND(NULL)))AND(t1.c1)) END);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((('Nb')OR(t1.c1 COLLATE RTRIM)))AND(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND((~ (t1.c0)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((('Nb')OR(t1.c1 COLLATE RTRIM)))AND(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND((~ (t1.c0))))) LIMIT 4;
SELECT * FROM t1 WHERE ((((((t1.c1))<>((t1.c1))))/(QUOTE(t1.c0)))) ORDER BY ((x'e1be')-(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((((t1.c1))<>((t1.c1))))/(QUOTE(t1.c0))))AND(((-1776873467)!=(((('1446145274', NULL, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c1)))))))) ORDER BY ((x'e1be')-(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((x'e1be')-(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((t1.c1))<>((t1.c1))))/(QUOTE(t1.c0)))) ORDER BY ((x'e1be')-(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((((t1.c1))<>((t1.c1))))/(QUOTE(t1.c0))))AND(((-1776873467)!=(((('1446145274', NULL, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c1)))))))) ORDER BY ((x'e1be')-(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((x'e1be')-(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1 WHERE (TRIM(DISTINCT (NOT (t1.c1)), CAST(t1.c0 AS NUMERIC))) ORDER BY CAST(((t1.c1)<<(t1.c0)) AS TEXT) ASC;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((TRIM(DISTINCT (NOT (t1.c1)), CAST(t1.c0 AS NUMERIC)))AND((((((t1.c0 IN (t1.c0)))AND(((t1.c1) IS FALSE))))AND(((((((t1.c0)OR('-1200430623')))OR(t1.c0)))AND(t1.c0))))))) ORDER BY CAST(((t1.c1)<<(t1.c0)) AS TEXT) ASC LIMIT 1;
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN ((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(0xffffffff8b39e16a)))AND(t1.c0)) WHEN ((((t1.c0)OR(t1.c0)))AND(t1.c1)) THEN ((t1.c0)AND(t1.c1)) WHEN (- (t1.c1)) THEN LAST_INSERT_ROWID() ELSE (('Ot?')GLOB(t1.c1)) END);
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN ((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(0xffffffff8b39e16a)))AND(t1.c0)) WHEN ((((t1.c0)OR(t1.c0)))AND(t1.c1)) THEN ((t1.c0)AND(t1.c1)) WHEN (- (t1.c1)) THEN LAST_INSERT_ROWID() ELSE (('Ot?')GLOB(t1.c1)) END)AND((((x'c097', ((t1.c0) IS FALSE), CAST(x'86de' AS REAL)))<((((t1.c1)/(t1.c0)), CASE t1.c1  WHEN t1.c1 THEN t1.c0 END, (t1.c1 IN (t1.c1, t1.c0)))))))) ORDER BY (+ (t1.c1 COLLATE RTRIM)) ASC LIMIT 3;
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN ((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(0xffffffff8b39e16a)))AND(t1.c0)) WHEN ((((t1.c0)OR(t1.c0)))AND(t1.c1)) THEN ((t1.c0)AND(t1.c1)) WHEN (- (t1.c1)) THEN LAST_INSERT_ROWID() ELSE (('Ot?')GLOB(t1.c1)) END);
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN ((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(0xffffffff8b39e16a)))AND(t1.c0)) WHEN ((((t1.c0)OR(t1.c0)))AND(t1.c1)) THEN ((t1.c0)AND(t1.c1)) WHEN (- (t1.c1)) THEN LAST_INSERT_ROWID() ELSE (('Ot?')GLOB(t1.c1)) END)AND((((x'c097', ((t1.c0) IS FALSE), CAST(x'86de' AS REAL)))<((((t1.c1)/(t1.c0)), CASE t1.c1  WHEN t1.c1 THEN t1.c0 END, (t1.c1 IN (t1.c1, t1.c0)))))))) ORDER BY (+ (t1.c1 COLLATE RTRIM)) ASC LIMIT 3;
SELECT MIN(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE RTRIM) NOTNULL));
SELECT MIN(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE RTRIM) NOTNULL)) ORDER BY (((t1.c1 IN ())) BETWEEN (t1.c1) AND (UPPER(t1.c0)))  NULLS FIRST, ((((t1.c1) ISNULL))<=((- (t1.c1)))) ASC LIMIT 0X2;
SELECT ALL * FROM t1 WHERE ((- ((NOT (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((- ((NOT (t1.c1)))))AND(((((((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(1.771950567E9)))AND(t1.c1))) IS FALSE)))) LIMIT 0x2;
SELECT ALL * FROM t1 WHERE ((- ((NOT (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((- ((NOT (t1.c1)))))AND(((((((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(1.771950567E9)))AND(t1.c1))) IS FALSE)))) LIMIT 0x2;
SELECT ALL COUNT(*) FROM t1 WHERE ((((CASE t1.c0  WHEN '_K' THEN t1.c0 END))=(((t1.c0 IN (t1.c0))))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((CASE t1.c0  WHEN '_K' THEN t1.c0 END))==(((t1.c0 IN (t1.c0))))))AND(((((((t1.c1)OR(t1.c1)))OR(t1.c1)))/(HEX(DISTINCT t1.c1)))))) ORDER BY ((((t1.c0)|(t1.c0))) NOT BETWEEN (((((t1.c0)AND(x'')))OR(t1.c1))) AND (((0.11020017399768112)*(t1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)) COLLATE NOCASE, t1.c0 DESC  NULLS LAST, ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))) IN ())  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c0)AND((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((PRINTF(t1.c0, t1.c0), LOWER(t1.c1), CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)) AND ((((t1.c1) IS FALSE), (((t1.c1, t1.c0))>((t1.c1, t1.c1))), ROUND(t1.c0, t1.c1))))))) ORDER BY ((((CAST(t1.c1 AS INTEGER))AND(((((t1.c0)AND(t1.c1)))AND(t1.c1)))))AND(((t1.c0)<<(t1.c0))))  NULLS LAST, CAST(((t1.c1) IS TRUE) AS TEXT)  NULLS FIRST, ((+ (t1.c1)) IN ((((t1.c1))>((t1.c0))), ((0.5516352339091076) ISNULL)))  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t1 WHERE (((t1.c0) IS TRUE)) ORDER BY ABS((t1.c1 IN (t1.c1))) ASC, ((t1.c0)GLOB(CAST(t1.c1 AS NUMERIC)))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) IS TRUE))AND(RTRIM(t1.c0) COLLATE NOCASE))) ORDER BY t1.c0 COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, CAST(t1.c0 COLLATE BINARY AS INTEGER) ASC LIMIT 1;
SELECT ALL * FROM t1 WHERE (((t1.c0) IS TRUE)) ORDER BY ABS((t1.c1 IN (t1.c1))) ASC, ((t1.c0)GLOB(CAST(t1.c1 AS NUMERIC)))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) IS TRUE))AND(RTRIM(t1.c0) COLLATE NOCASE))) ORDER BY t1.c0 COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, CAST(t1.c0 COLLATE BINARY AS INTEGER) ASC LIMIT 1;
SELECT * FROM t1 WHERE ((- ((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))))));
SELECT ALL * FROM t1 WHERE ((- ((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))))) ORDER BY (~ (((t1.c0)+(t1.c1))))  NULLS LAST, (((CAST(t1.c1 AS BLOB)))>((((t1.c0) NOTNULL)))) DESC;
SELECT * FROM t1 WHERE ((- ((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))))));
SELECT ALL * FROM t1 WHERE ((- ((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))))) ORDER BY (~ (((t1.c0)+(t1.c1))))  NULLS LAST, (((CAST(t1.c1 AS BLOB)))>((((t1.c0) NOTNULL)))) DESC;
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c0)*(t1.c1)) AS BLOB));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CAST(((t1.c0)*(t1.c1)) AS BLOB))AND((((((t1.c1)OR(t1.c1)))OR(t1.c1)) IN ())))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((+ (t1.c1)) COLLATE NOCASE) LIMIT 0;
SELECT * FROM t1 WHERE (((((x'')|(t1.c1))) NOTNULL));
SELECT * FROM t1 NOT INDEXED WHERE (((((((x'')|(t1.c1))) NOTNULL))AND((((((t1.c0))==((t1.c1)))) NOT BETWEEN ((t1.c1 IN ())) AND ((t1.c1 IN (t1.c1))))))) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((UPPER(t1.c1) IN (((t1.c1)/(t1.c1)), CAST(t1.c0 AS REAL)))) LIMIT 0X0;
SELECT * FROM t1 WHERE (((((x'')|(t1.c1))) NOTNULL));
SELECT * FROM t1 NOT INDEXED WHERE (((((((x'')|(t1.c1))) NOTNULL))AND((((((t1.c0))==((t1.c1)))) NOT BETWEEN ((t1.c1 IN ())) AND ((t1.c1 IN (t1.c1))))))) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((UPPER(t1.c1) IN (((t1.c1)/(t1.c1)), CAST(t1.c0 AS REAL)))) LIMIT 0X0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((t1.c1) IS FALSE))AND(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)))OR(t1.c0))) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (x'ce4e30')) THEN UPPER(t1.c1) ELSE ((NULL)GLOB(t1.c1)) END ASC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((t1.c1) IS FALSE))AND(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)))OR(t1.c0))) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (x'ce4e30')) THEN UPPER(t1.c1) ELSE ((NULL)GLOB(t1.c1)) END ASC INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (x'ce4e30')) THEN UPPER(t1.c1) ELSE ((NULL)GLOB(t1.c1)) END ASC;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((x'2f') BETWEEN (t1.c0) AND (t1.c1)) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN LIKELIHOOD(t1.c1, 0x1ef4792b) THEN t1.c1 WHEN ((t1.c0)>=(t1.c1)) THEN t1.c0 COLLATE RTRIM ELSE (t1.c1 IN ()) END) ORDER BY ROUND(CAST(NULL AS NUMERIC), NULL);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE WHEN ((x'2f') BETWEEN (t1.c0) AND (t1.c1)) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN LIKELIHOOD(t1.c1, 519338283) THEN t1.c1 WHEN ((t1.c0)>=(t1.c1)) THEN t1.c0 COLLATE RTRIM ELSE (t1.c1 IN ()) END)AND(((((t1.c1)<<(t1.c1)))<<(((t1.c1)AND(t1.c1))))))) ORDER BY CASE WHEN CAST(t1.c1 AS TEXT) THEN t1.c1 WHEN ((((t1.c0)OR(0.5568399481732258)))AND(t1.c0)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) WHEN CASE t1.c0  WHEN x'e5' THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN (~ (t1.c1)) END DESC, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ISNULL)  NULLS FIRST, t1.c1 COLLATE BINARY DESC, (((t1.c0 IN ())) NOTNULL) ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((((('1792298850')OR(t1.c0)))OR(t1.c1)))OR(t1.c1))) BETWEEN ((((t1.c0))>=((t1.c0)))) AND (((t1.c1) ISNULL)))) ORDER BY CASE WHEN CAST(t1.c1 AS TEXT) THEN t1.c1 WHEN ((((t1.c0)OR(0.5568399481732258)))AND(t1.c0)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) WHEN CASE t1.c0  WHEN x'e5' THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN (~ (t1.c1)) END DESC, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ISNULL)  NULLS FIRST, t1.c1 COLLATE BINARY DESC, (((t1.c0 IN ())) NOTNULL) ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)/(t1.c1)) AS REAL));
SELECT * FROM t1 WHERE (CAST(((t1.c0)/(t1.c1)) AS REAL)) ORDER BY CASE t1.c0 COLLATE BINARY  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN CAST('497578050' AS BLOB) WHEN (((t1.c1, x'34aa'))<((t1.c0, t1.c1))) THEN TRIM(t1.c1) WHEN ((t1.c1) IS TRUE) THEN x'9b90' WHEN t1.c1 THEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((654739563))) END  NULLS LAST, (- (UNLIKELY(t1.c1))) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY CASE t1.c0 COLLATE BINARY  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN CAST('497578050' AS BLOB) WHEN (((t1.c1, x'34aa'))<((t1.c0, t1.c1))) THEN TRIM(t1.c1) WHEN ((t1.c1) IS TRUE) THEN x'9b90' WHEN t1.c1 THEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((0X2706886b))) END  NULLS LAST, (- (UNLIKELY(t1.c1))) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)/(t1.c1)) AS REAL));
SELECT * FROM t1 WHERE (CAST(((t1.c0)/(t1.c1)) AS REAL)) ORDER BY CASE t1.c0 COLLATE BINARY  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN CAST('497578050' AS BLOB) WHEN (((t1.c1, x'34aa'))<((t1.c0, t1.c1))) THEN TRIM(t1.c1) WHEN ((t1.c1) IS TRUE) THEN x'9b90' WHEN t1.c1 THEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((654739563))) END  NULLS LAST, (- (UNLIKELY(t1.c1))) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY CASE t1.c0 COLLATE BINARY  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN CAST('497578050' AS BLOB) WHEN (((t1.c1, x'34aa'))<((t1.c0, t1.c1))) THEN TRIM(t1.c1) WHEN ((t1.c1) IS TRUE) THEN x'9b90' WHEN t1.c1 THEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((0X2706886b))) END  NULLS LAST, (- (UNLIKELY(t1.c1))) ASC  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE ((((((t1.c0) IS FALSE), ((t1.c0)>(t1.c0)), t1.c0))>((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, ((t1.c0)>>(t1.c0)), ((t1.c1) ISNULL))))) ORDER BY (((~ (t1.c1)))/((t1.c0 IN (t1.c0)))), LOWER(CASE WHEN t1.c1 THEN t1.c1 END) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((((t1.c0) IS FALSE), ((t1.c0)>(t1.c0)), t1.c0))>((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, ((t1.c0)>>(t1.c0)), ((t1.c1) ISNULL)))))AND(json_patch(t1.c0 COLLATE BINARY, (~ (0.43519809784448005)))))) ORDER BY ((((((((t1.c1)LIKE(t1.c1)))OR(t1.c1 COLLATE NOCASE)))OR((~ (t1.c0)))))AND(t1.c0)), ((((((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c0))), ((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c0))))==((CAST(t1.c0 AS BLOB), (+ (t1.c1))))) ASC LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (x'21e5') ORDER BY ((((((((t1.c1)LIKE(t1.c1)))OR(t1.c1 COLLATE NOCASE)))OR((~ (t1.c0)))))AND(t1.c0)), ((((((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c0))), ((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c0))))=((CAST(t1.c0 AS BLOB), (+ (t1.c1))))) ASC LIMIT 0x0;
SELECT * FROM t1 WHERE ((((((t1.c0) IS FALSE), ((t1.c0)>(t1.c0)), t1.c0))>((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, ((t1.c0)>>(t1.c0)), ((t1.c1) ISNULL))))) ORDER BY (((~ (t1.c1)))/((t1.c0 IN (t1.c0)))), LOWER(CASE WHEN t1.c1 THEN t1.c1 END) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((((t1.c0) IS FALSE), ((t1.c0)>(t1.c0)), t1.c0))>((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, ((t1.c0)>>(t1.c0)), ((t1.c1) ISNULL)))))AND(json_patch(t1.c0 COLLATE BINARY, (~ (0.43519809784448005)))))) ORDER BY ((((((((t1.c1)LIKE(t1.c1)))OR(t1.c1 COLLATE NOCASE)))OR((~ (t1.c0)))))AND(t1.c0)), ((((((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c0))), ((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c0))))==((CAST(t1.c0 AS BLOB), (+ (t1.c1))))) ASC LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE (x'21e5') ORDER BY ((((((((t1.c1)LIKE(t1.c1)))OR(t1.c1 COLLATE NOCASE)))OR((~ (t1.c0)))))AND(t1.c0)), ((((((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c0))), ((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c0))))=((CAST(t1.c0 AS BLOB), (+ (t1.c1))))) ASC LIMIT 0x0;
SELECT MIN(t1.c1) FROM t1 WHERE (HEX(((((t1.c0)OR(t1.c1)))AND(t1.c1))));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (HEX(((((t1.c0)OR(t1.c1)))AND(t1.c1))));
SELECT ALL * FROM t1 WHERE ((+ (t1.c1 COLLATE RTRIM))) ORDER BY ((TOTAL_CHANGES())<=(((NULL) NOT BETWEEN (t1.c1) AND (t1.c1)))) DESC, ((t1.c0) NOT NULL) COLLATE NOCASE, CAST(LOWER(NULL) AS TEXT) ASC;
SELECT DISTINCT * FROM t1 WHERE ((+ (t1.c1 COLLATE RTRIM))) ORDER BY ((t1.c1) BETWEEN ('\Az') AND (t1.c0)) COLLATE NOCASE DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((HEX(DISTINCT t1.c1))OR((('Ԝnu^QK') NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c1) IS FALSE)))) ORDER BY ((t1.c1) BETWEEN ('\Az') AND (t1.c0)) COLLATE NOCASE DESC;
SELECT ALL * FROM t1 WHERE ((+ (t1.c1 COLLATE RTRIM))) ORDER BY ((TOTAL_CHANGES())<=(((NULL) NOT BETWEEN (t1.c1) AND (t1.c1)))) DESC, ((t1.c0) NOT NULL) COLLATE NOCASE, CAST(LOWER(NULL) AS TEXT) ASC;
SELECT DISTINCT * FROM t1 WHERE ((+ (t1.c1 COLLATE RTRIM))) ORDER BY ((t1.c1) BETWEEN ('\Az') AND (t1.c0)) COLLATE NOCASE DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((HEX(DISTINCT t1.c1))OR((('Ԝnu^QK') NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c1) IS FALSE)))) ORDER BY ((t1.c1) BETWEEN ('\Az') AND (t1.c0)) COLLATE NOCASE DESC;
SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c1) IS FALSE))GLOB((((t1.c1, t1.c0))==((t1.c0, t1.c0))))));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((t1.c1) IS FALSE))GLOB((((t1.c1, t1.c0))=((t1.c0, t1.c0)))))) LIMIT 2 INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE ((+ (((t1.c0)>=(t1.c0))))) LIMIT 0X2;
SELECT ALL * FROM t1 WHERE (ABS(UPPER(t1.c0))) ORDER BY ((CAST(t1.c1 AS BLOB))&(((((((((t1.c0)OR(t1.c1)))AND(0.7224434521112482)))AND(x'd9')))OR(t1.c1)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (ABS(UPPER(t1.c0))) ORDER BY (('-16410412')<=((t1.c1 IN (t1.c0)))) ASC  NULLS LAST, (+ ((t1.c0 IN (0.3416717493302742))))  NULLS LAST, IFNULL(t1.c1, t1.c0) DESC INTERSECT SELECT * FROM t1 WHERE (0x1a9d425f) ORDER BY (('-16410412')<=((t1.c1 IN (t1.c0)))) ASC  NULLS LAST, (+ ((t1.c0 IN (0.3416717493302742))))  NULLS LAST, IFNULL(t1.c1, t1.c0) DESC;
SELECT ALL * FROM t1 WHERE (ABS(UPPER(t1.c0))) ORDER BY ((CAST(t1.c1 AS BLOB))&(((((((((t1.c0)OR(t1.c1)))AND(0.7224434521112482)))AND(x'd9')))OR(t1.c1)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (ABS(UPPER(t1.c0))) ORDER BY (('-16410412')<=((t1.c1 IN (t1.c0)))) ASC  NULLS LAST, (+ ((t1.c0 IN (0.3416717493302742))))  NULLS LAST, IFNULL(t1.c1, t1.c0) DESC INTERSECT SELECT * FROM t1 WHERE (0x1a9d425f) ORDER BY (('-16410412')<=((t1.c1 IN (t1.c0)))) ASC  NULLS LAST, (+ ((t1.c0 IN (0.3416717493302742))))  NULLS LAST, IFNULL(t1.c1, t1.c0) DESC;
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_GET((t1.c1 IN (t1.c0)))) ORDER BY ((- (t1.c0)) IN ()), ((((t1.c0)<=(t1.c1)))/(((t1.c1) NOTNULL))) DESC;
SELECT DISTINCT * FROM t1 WHERE (SQLITE_COMPILEOPTION_GET((t1.c1 IN (t1.c0)))) ORDER BY ((- (t1.c0)) IN ()), ((((t1.c0)<=(t1.c1)))/(((t1.c1) NOTNULL))) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY ((- (t1.c0)) IN ()), ((((t1.c0)<=(t1.c1)))/(((t1.c1) NOTNULL))) DESC LIMIT 0;
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_GET((t1.c1 IN (t1.c0)))) ORDER BY ((- (t1.c0)) IN ()), ((((t1.c0)<=(t1.c1)))/(((t1.c1) NOTNULL))) DESC;
SELECT * FROM t1 WHERE (json_type((t1.c0 IN (t1.c0))));
SELECT * FROM t1 WHERE (json_type((t1.c0 IN (t1.c0)))) LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE ((((((((((t1.c0, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, x'70', t1.c1))))OR((~ (t1.c1)))))OR(((t1.c0) IS TRUE))))AND(((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(x'db'))))) LIMIT 0x0;
SELECT * FROM t1 WHERE (json_type((t1.c0 IN (t1.c0))));
SELECT * FROM t1 WHERE (json_type((t1.c0 IN (t1.c0)))) LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE ((((((((((t1.c0, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, x'70', t1.c1))))OR((~ (t1.c1)))))OR(((t1.c0) IS TRUE))))AND(((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(x'db'))))) LIMIT 0x0;
SELECT * FROM t1 WHERE ((((0.8645137046515164)>=(t1.c1)) IN ()));
SELECT * FROM t1 WHERE ((((0.8645137046515164)>=(t1.c1)) IN ())) ORDER BY ((((0.2289213351425552)OR(CAST(t1.c1 AS INTEGER))))AND((+ (t1.c1)))), 0.5228903167054014  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (MAX(t1.c0, t1.c1)) AND (CAST(t1.c0 AS REAL)))) ORDER BY ((((0.2289213351425552)OR(CAST(t1.c1 AS INTEGER))))AND((+ (t1.c1)))), 0.5228903167054014  NULLS FIRST;
SELECT * FROM t1 WHERE ((((0.8645137046515164)>=(t1.c1)) IN ()));
SELECT * FROM t1 WHERE ((((0.8645137046515164)>=(t1.c1)) IN ())) ORDER BY ((((0.2289213351425552)OR(CAST(t1.c1 AS INTEGER))))AND((+ (t1.c1)))), 0.5228903167054014  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) BETWEEN (MAX(t1.c0, t1.c1)) AND (CAST(t1.c0 AS REAL)))) ORDER BY ((((0.2289213351425552)OR(CAST(t1.c1 AS INTEGER))))AND((+ (t1.c1)))), 0.5228903167054014  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CASE WHEN CAST(t1.c1 AS INTEGER) THEN (((t1.c0, t1.c1, t1.c0, t1.c1))<=((x'b49a', t1.c1, t1.c0, t1.c1))) WHEN (t1.c0 IN (t1.c1)) THEN t1.c0 END) ORDER BY 'OK' ASC, (NOT (t1.c0)) COLLATE NOCASE DESC  NULLS FIRST, (((((t1.c1))>((t1.c0))))LIKE((~ (0.298409232828589))));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CASE WHEN CAST(t1.c1 AS INTEGER) THEN (((t1.c0, t1.c1, t1.c0, t1.c1))==((x'b49a', t1.c1, t1.c0, t1.c1))) WHEN (t1.c0 IN (t1.c1)) THEN t1.c0 END) ORDER BY ((t1.c1 COLLATE NOCASE) IS FALSE) ASC LIMIT 0X1;
SELECT ALL * FROM t1 NOT INDEXED WHERE (((t1.c1) NOT NULL) COLLATE NOCASE);
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOT NULL) COLLATE NOCASE)AND(((t1.c1) IS TRUE) COLLATE RTRIM))) ORDER BY ((t1.c0 COLLATE BINARY) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM t1 NOT INDEXED WHERE (((t1.c1) NOT NULL) COLLATE NOCASE);
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOT NULL) COLLATE NOCASE)AND(((t1.c1) IS TRUE) COLLATE RTRIM))) ORDER BY ((t1.c0 COLLATE BINARY) IS TRUE) ASC  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE (CASE ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1))  WHEN CASE WHEN x'72c3' THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN 0.004076445816685648 THEN t1.c0 END THEN ((t1.c1)>>(t1.c1)) WHEN t1.c1 THEN t1.c0 END) ORDER BY (((((((((t1.c1)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)), (((t1.c1))>=((t1.c0))), ((((t1.c0)AND(t1.c1)))OR(-1827888760)), ((0Xffffffffc75677ce) BETWEEN (t1.c0) AND (t1.c0)), LIKELY(DISTINCT t1.c1)))<=((t1.c1, 0Xffffffff82bc3c7f, x'', (t1.c1 IN (t1.c0)), t1.c1))) ASC, CASE CAST(t1.c1 AS REAL)  WHEN (- (t1.c1)) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c0 END ELSE t1.c0 END ASC;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((CASE ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1))  WHEN CASE WHEN x'72c3' THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN 0.004076445816685648 THEN t1.c0 END THEN ((t1.c1)>>(t1.c1)) WHEN t1.c1 THEN t1.c0 END)AND(((CAST(t1.c0 AS NUMERIC))>=(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))))))) ORDER BY t1.c0 ASC, t1.c0 LIMIT 2;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS TEXT)) NOT NULL));
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS TEXT)) NOT NULL)) INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c1 IN ()))||(((t1.c0)OR(t1.c0)))));
SELECT ALL * FROM t1 WHERE (((CAST(t1.c1 AS TEXT)) NOT NULL));
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS TEXT)) NOT NULL)) INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c1 IN ()))||(((t1.c0)OR(t1.c0)))));
SELECT ALL * FROM t1 WHERE (((((t1.c1) BETWEEN ('U%*M') AND (t1.c1))) NOTNULL)) ORDER BY NULLIF(NULL, t1.c1) COLLATE NOCASE, '', (((t1.c0 IN (t1.c1))) BETWEEN (((NULL)+(t1.c1))) AND (((t1.c1)+(t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) BETWEEN ('U%*M') AND (t1.c1))) NOTNULL)) ORDER BY NULLIF(NULL, t1.c1) COLLATE NOCASE, '', (((t1.c0 IN (t1.c1))) BETWEEN (((NULL)+(t1.c1))) AND (((t1.c1)+(t1.c0)))) LIMIT 2;
SELECT ALL * FROM t1 WHERE (((((t1.c1) BETWEEN ('U%*M') AND (t1.c1))) NOTNULL)) ORDER BY NULLIF(NULL, t1.c1) COLLATE NOCASE, '', (((t1.c0 IN (t1.c1))) BETWEEN (((NULL)+(t1.c1))) AND (((t1.c1)+(t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) BETWEEN ('U%*M') AND (t1.c1))) NOTNULL)) ORDER BY NULLIF(NULL, t1.c1) COLLATE NOCASE, '', (((t1.c0 IN (t1.c1))) BETWEEN (((NULL)+(t1.c1))) AND (((t1.c1)+(t1.c0)))) LIMIT 2;
SELECT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)&('-1594343976'))) ORDER BY (+ (LOWER(t1.c1))), CASE WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END THEN x'ce' ELSE ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) END;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)&('-1594343976'))) ORDER BY LIKELY(DISTINCT ((t1.c0) IS FALSE))  NULLS LAST, (x'07ce757edf' IN (SUBSTR(t1.c1, t1.c0))) INTERSECT SELECT * FROM t1 WHERE (LENGTH(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY LIKELY(DISTINCT ((t1.c0) IS FALSE))  NULLS LAST, (x'07ce757edf' IN (SUBSTR(t1.c1, t1.c0)));
SELECT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)&('-1594343976'))) ORDER BY (+ (LOWER(t1.c1))), CASE WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END THEN x'ce' ELSE ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) END;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)&('-1594343976'))) ORDER BY LIKELY(DISTINCT ((t1.c0) IS FALSE))  NULLS LAST, (x'07ce757edf' IN (SUBSTR(t1.c1, t1.c0))) INTERSECT SELECT * FROM t1 WHERE (LENGTH(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY LIKELY(DISTINCT ((t1.c0) IS FALSE))  NULLS LAST, (x'07ce757edf' IN (SUBSTR(t1.c1, t1.c0)));
SELECT * FROM t1 WHERE (0.04429520632341355) ORDER BY ((((((((((NULL)OR((((t1.c0))>((t1.c1))))))OR(((((t1.c0)AND(t1.c1)))OR(t1.c0)))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(CASE x''  WHEN t1.c0 THEN t1.c0 END)))AND((t1.c1 IN ())))  NULLS LAST, NULL  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((0.04429520632341355)AND((((+ (t1.c1))) BETWEEN (((((((0xffffffffc016d64c)AND('+,v,7Jx/>')))AND(t1.c1)))OR(t1.c0))) AND (((t1.c1) NOT NULL)))))) ORDER BY ((((((((((NULL)OR((((t1.c0))>((t1.c1))))))OR(((((t1.c0)AND(t1.c1)))OR(t1.c0)))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(CASE x''  WHEN t1.c0 THEN t1.c0 END)))AND((t1.c1 IN ())))  NULLS LAST, NULL  NULLS LAST;
SELECT * FROM t1 WHERE (0.04429520632341355) ORDER BY ((((((((((NULL)OR((((t1.c0))>((t1.c1))))))OR(((((t1.c0)AND(t1.c1)))OR(t1.c0)))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(CASE x''  WHEN t1.c0 THEN t1.c0 END)))AND((t1.c1 IN ())))  NULLS LAST, NULL  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((- (t1.c1 COLLATE BINARY))) ORDER BY ((((CAST(t1.c1 AS BLOB))AND(TOTAL_CHANGES())))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((- (t1.c1 COLLATE BINARY)))AND(CAST((((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1))) AS NUMERIC)))) ORDER BY 110304261 COLLATE NOCASE COLLATE NOCASE DESC, (((((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)) IN (t1.c0))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) ISNULL)  WHEN (((t1.c0, t1.c0, t1.c0, t1.c1, t1.c1, t1.c1))==((t1.c0, t1.c1, t1.c1, t1.c0, t1.c0, t1.c0))) THEN ((t1.c0)>(t1.c1)) WHEN ((t1.c1)>(t1.c1)) THEN UNICODE(t1.c0) WHEN ((t1.c0) ISNULL) THEN ((t1.c1)=(t1.c1)) ELSE CAST(0.49789735760353704 AS BLOB) END);
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) ISNULL)  WHEN (((t1.c0, t1.c0, t1.c0, t1.c1, t1.c1, t1.c1))=((t1.c0, t1.c1, t1.c1, t1.c0, t1.c0, t1.c0))) THEN ((t1.c0)>(t1.c1)) WHEN ((t1.c1)>(t1.c1)) THEN UNICODE(t1.c0) WHEN ((t1.c0) ISNULL) THEN ((t1.c1)==(t1.c1)) ELSE CAST(0.49789735760353704 AS BLOB) END) LIMIT 0X1 INTERSECT SELECT * FROM t1 WHERE ((((~ (t1.c1))) IS TRUE)) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) ISNULL)  WHEN (((t1.c0, t1.c0, t1.c0, t1.c1, t1.c1, t1.c1))==((t1.c0, t1.c1, t1.c1, t1.c0, t1.c0, t1.c0))) THEN ((t1.c0)>(t1.c1)) WHEN ((t1.c1)>(t1.c1)) THEN UNICODE(t1.c0) WHEN ((t1.c0) ISNULL) THEN ((t1.c1)=(t1.c1)) ELSE CAST(0.49789735760353704 AS BLOB) END);
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) ISNULL)  WHEN (((t1.c0, t1.c0, t1.c0, t1.c1, t1.c1, t1.c1))=((t1.c0, t1.c1, t1.c1, t1.c0, t1.c0, t1.c0))) THEN ((t1.c0)>(t1.c1)) WHEN ((t1.c1)>(t1.c1)) THEN UNICODE(t1.c0) WHEN ((t1.c0) ISNULL) THEN ((t1.c1)==(t1.c1)) ELSE CAST(0.49789735760353704 AS BLOB) END) LIMIT 0X1 INTERSECT SELECT * FROM t1 WHERE ((((~ (t1.c1))) IS TRUE)) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((UPPER(t1.c1))OR(((t1.c1)<>(NULL)))));
SELECT ALL * FROM t1 WHERE (((UPPER(t1.c1))OR(((t1.c1)!=(NULL))))) ORDER BY ((CAST(t1.c1 AS TEXT))<<(((t1.c0)||('s&
')))) DESC INTERSECT SELECT ALL * FROM t1 WHERE (0.21341957936274758) ORDER BY ((CAST(t1.c1 AS TEXT))<<(((t1.c0)||('s&
')))) DESC;
SELECT ALL * FROM t1 WHERE (((UPPER(t1.c1))OR(((t1.c1)<>(NULL)))));
SELECT ALL * FROM t1 WHERE (((UPPER(t1.c1))OR(((t1.c1)!=(NULL))))) ORDER BY ((CAST(t1.c1 AS TEXT))<<(((t1.c0)||('s&
')))) DESC INTERSECT SELECT ALL * FROM t1 WHERE (0.21341957936274758) ORDER BY ((CAST(t1.c1 AS TEXT))<<(((t1.c0)||('s&
')))) DESC;
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c1 THEN ((t1.c0)*(t1.c0)) ELSE ((t1.c0) ISNULL) END) ORDER BY ((((((((t1.c0) IS TRUE))OR(('213504008' IN ()))))AND(((t1.c1)||(t1.c0)))))AND('-1417986346' COLLATE NOCASE)) ASC, CAST(t1.c1 AS BLOB) DESC, ((CAST(t1.c1 AS INTEGER))*(((t1.c0)*(t1.c1)))) DESC;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN ((t1.c0)*(t1.c0)) ELSE ((t1.c0) ISNULL) END) ORDER BY ((((t1.c1) ISNULL))>=(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS FIRST, CAST((+ (t1.c1)) AS TEXT) DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c0 AS INTEGER)) ORDER BY ((((t1.c1) ISNULL))>=(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS FIRST, CAST((+ (t1.c1)) AS TEXT) DESC;
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c1 THEN ((t1.c0)*(t1.c0)) ELSE ((t1.c0) ISNULL) END) ORDER BY ((((((((t1.c0) IS TRUE))OR(('213504008' IN ()))))AND(((t1.c1)||(t1.c0)))))AND('-1417986346' COLLATE NOCASE)) ASC, CAST(t1.c1 AS BLOB) DESC, ((CAST(t1.c1 AS INTEGER))*(((t1.c0)*(t1.c1)))) DESC;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c1 THEN ((t1.c0)*(t1.c0)) ELSE ((t1.c0) ISNULL) END) ORDER BY ((((t1.c1) ISNULL))>=(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS FIRST, CAST((+ (t1.c1)) AS TEXT) DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c0 AS INTEGER)) ORDER BY ((((t1.c1) ISNULL))>=(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS FIRST, CAST((+ (t1.c1)) AS TEXT) DESC;
SELECT MAX(t1.c0) FROM t1 WHERE ((((NOT (t1.c0)))*(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN x'c06a' END)));
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((NOT (t1.c0)))*(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN x'c06a' END))) LIMIT 0 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST(NULL AS NUMERIC) COLLATE BINARY) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0)*(t1.c1)))AND(((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))))AND(CASE t1.c0  WHEN t1.c1 THEN 0.37736632700229034 END)))OR(t1.c1))) ORDER BY x'7f', ((((t1.c1)<>(t1.c1))) IS TRUE);
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)*(t1.c1)))AND(((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))))AND(CASE t1.c0  WHEN t1.c1 THEN 0.37736632700229034 END)))OR(t1.c1)))AND(COALESCE(DISTINCT (t1.c0 IN (t1.c0, t1.c1)), t1.c0 COLLATE RTRIM, (t1.c1 IN (0.7611561750434179)))))) ORDER BY (UPPER(t1.c1) IN (t1.c1, ((x'4a2d20')==(t1.c1)), ((((t1.c1)AND(t1.c1)))AND(t1.c1)))), t1.c0 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (COALESCE(DISTINCT t1.c0 COLLATE RTRIM, (~ (-1464094180)))) ORDER BY (UPPER(t1.c1) IN (t1.c1, ((x'4a2d20')==(t1.c1)), ((((t1.c1)AND(t1.c1)))AND(t1.c1)))), t1.c0 ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0)*(t1.c1)))AND(((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))))AND(CASE t1.c0  WHEN t1.c1 THEN 0.37736632700229034 END)))OR(t1.c1))) ORDER BY x'7f', ((((t1.c1)<>(t1.c1))) IS TRUE);
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)*(t1.c1)))AND(((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))))AND(CASE t1.c0  WHEN t1.c1 THEN 0.37736632700229034 END)))OR(t1.c1)))AND(COALESCE(DISTINCT (t1.c0 IN (t1.c0, t1.c1)), t1.c0 COLLATE RTRIM, (t1.c1 IN (0.7611561750434179)))))) ORDER BY (UPPER(t1.c1) IN (t1.c1, ((x'4a2d20')==(t1.c1)), ((((t1.c1)AND(t1.c1)))AND(t1.c1)))), t1.c0 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (COALESCE(DISTINCT t1.c0 COLLATE RTRIM, (~ (-1464094180)))) ORDER BY (UPPER(t1.c1) IN (t1.c1, ((x'4a2d20')==(t1.c1)), ((((t1.c1)AND(t1.c1)))AND(t1.c1)))), t1.c0 ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c1)*(t1.c0))) BETWEEN (t1.c0) AND (DATE(t1.c0, t1.c1, t1.c0)))) ORDER BY CAST(((t1.c0)/(t1.c0)) AS BLOB), ((TRIM(t1.c1, t1.c1))/(((t1.c0)IS NOT('-2130733186'))))  NULLS LAST, (((((((NOT (t1.c0)))OR(t1.c0 COLLATE BINARY)))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))AND(CAST(t1.c0 AS REAL)))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c1)*(t1.c0))) BETWEEN (t1.c0) AND (DATE(t1.c0, t1.c1, t1.c0)))) ORDER BY CAST(((t1.c0)/(t1.c0)) AS BLOB), ((TRIM(t1.c1, t1.c1))/(((t1.c0)IS NOT('-2130733186'))))  NULLS LAST, (((((((NOT (t1.c0)))OR(t1.c0 COLLATE BINARY)))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))AND(CAST(t1.c0 AS REAL)))  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c1)*(t1.c0))) BETWEEN (t1.c0) AND (DATE(t1.c0, t1.c1, t1.c0)))) ORDER BY CAST(((t1.c0)/(t1.c0)) AS BLOB), ((TRIM(t1.c1, t1.c1))/(((t1.c0)IS NOT('-2130733186'))))  NULLS LAST, (((((((NOT (t1.c0)))OR(t1.c0 COLLATE BINARY)))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))AND(CAST(t1.c0 AS REAL)))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c1)*(t1.c0))) BETWEEN (t1.c0) AND (DATE(t1.c0, t1.c1, t1.c0)))) ORDER BY CAST(((t1.c0)/(t1.c0)) AS BLOB), ((TRIM(t1.c1, t1.c1))/(((t1.c0)IS NOT('-2130733186'))))  NULLS LAST, (((((((NOT (t1.c0)))OR(t1.c0 COLLATE BINARY)))OR(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))AND(CAST(t1.c0 AS REAL)))  NULLS LAST;
SELECT * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c1)+(t1.c1)))) AND (((NOT (t1.c0))))));
SELECT ALL * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c1)+(t1.c1)))) AND (((NOT (t1.c0)))))) INTERSECT SELECT ALL * FROM t1 WHERE (CAST((((t1.c1))==((t1.c1))) AS INTEGER));
SELECT * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c1)+(t1.c1)))) AND (((NOT (t1.c0))))));
SELECT ALL * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c1)+(t1.c1)))) AND (((NOT (t1.c0)))))) INTERSECT SELECT ALL * FROM t1 WHERE (CAST((((t1.c1))==((t1.c1))) AS INTEGER));
SELECT MIN(t1.c0) FROM t1 WHERE (0Xffffffffbdde04b7) ORDER BY ((((t1.c1) IS TRUE))<(((((-387158324)OR(t1.c0)))OR(t1.c0))))  NULLS FIRST, CASE json_array(t1.c1, t1.c0)  WHEN t1.c1 THEN ((t1.c0) ISNULL) WHEN ((t1.c1) IS FALSE) THEN ((t1.c1)IS(t1.c1)) ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE (0xffffffffbdde04b7) ORDER BY ((((((((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))AND(t1.c0)))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))OR(CAST(t1.c1 AS REAL))) LIMIT 0x0 INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((+ (t1.c0)))||(LIKELY(t1.c1)))) ORDER BY ((((((((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))AND(t1.c0)))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))OR(CAST(t1.c1 AS REAL))) LIMIT 0x0;
SELECT MAX(t1.c1) FROM t1 WHERE (((LIKELY(DISTINCT t1.c0))AND(CAST(0xe08416b AS INTEGER))));
SELECT MAX(t1.c1) FROM t1 WHERE (((LIKELY(DISTINCT t1.c0))AND(CAST(0xe08416b AS INTEGER)))) LIMIT 0 INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE ((~ ((t1.c0 IN (NULL, 1.173737933E9))))) LIMIT 0;
SELECT * FROM t1 WHERE (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM t1 WHERE (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END COLLATE BINARY COLLATE BINARY) LIMIT 0;
SELECT * FROM t1 WHERE (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM t1 WHERE (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END COLLATE BINARY COLLATE BINARY) LIMIT 0;
SELECT * FROM t1 NOT INDEXED WHERE ((~ ((0X633ea747 IN (t1.c0))))) ORDER BY (((t1.c0)) BETWEEN ((-9.32626568E8)) AND (((NOT (NULL)))))  NULLS FIRST, ((((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c0) NOT NULL))))AND(load_extension(t1.c1, t1.c0))))OR(((t1.c1)/(t1.c1)))) ASC, CAST((((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c0))) AS REAL) ASC;
SELECT DISTINCT * FROM t1 WHERE ((~ ((1665050439 IN (t1.c0))))) ORDER BY (((t1.c0)) BETWEEN ((-9.32626568E8)) AND (((NOT (NULL)))))  NULLS FIRST, ((((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c0) NOT NULL))))AND(load_extension(t1.c1, t1.c0))))OR(((t1.c1)/(t1.c1)))) ASC, CAST((((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c0))) AS REAL) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1))  WHEN CASE WHEN t1.c0 THEN '2CwjH' ELSE t1.c0 END THEN t1.c1 COLLATE BINARY WHEN ABS(DISTINCT t1.c0) THEN t1.c0 COLLATE NOCASE END) ORDER BY (((t1.c0)) BETWEEN ((-9.32626568E8)) AND (((NOT (NULL)))))  NULLS FIRST, ((((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c0) NOT NULL))))AND(load_extension(t1.c1, t1.c0))))OR(((t1.c1)/(t1.c1)))) ASC, CAST((((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c0))) AS REAL) ASC;
SELECT * FROM t1 NOT INDEXED WHERE ((~ ((0X633ea747 IN (t1.c0))))) ORDER BY (((t1.c0)) BETWEEN ((-9.32626568E8)) AND (((NOT (NULL)))))  NULLS FIRST, ((((((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c0) NOT NULL))))AND(load_extension(t1.c1, t1.c0))))OR(((t1.c1)/(t1.c1)))) ASC, CAST((((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c0))) AS REAL) ASC;
SELECT ALL * FROM t1 WHERE (((((NULL)GLOB(t1.c1))) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((((NULL)GLOB(t1.c1))) ISNULL)) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (((((NULL)GLOB(t1.c1))) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((((NULL)GLOB(t1.c1))) ISNULL)) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (LIKELY(DISTINCT ((t1.c0)&(t1.c1)))) ORDER BY (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), t1.c1))!=((((t1.c0)OR(t1.c0)), (~ (t1.c1)))))  NULLS LAST, (((~ (t1.c0)))GLOB(((t1.c0)LIKE(t1.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (LIKELY(DISTINCT ((t1.c0)&(t1.c1)))) ORDER BY (((t1.c1 IN ()))-(((((t1.c0)AND(t1.c1)))AND(t1.c0)))) ASC  NULLS FIRST, (+ ((NOT (t1.c1)))) DESC  NULLS FIRST, ((((((((t1.c1)AND(t1.c1)))OR(1041810244)))OR(t1.c0)))=((~ ('0.5123924678289825')))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (LIKELY(DISTINCT ((t1.c0)&(t1.c1)))) ORDER BY (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), t1.c1))!=((((t1.c0)OR(t1.c0)), (~ (t1.c1)))))  NULLS LAST, (((~ (t1.c0)))GLOB(((t1.c0)LIKE(t1.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (LIKELY(DISTINCT ((t1.c0)&(t1.c1)))) ORDER BY (((t1.c1 IN ()))-(((((t1.c0)AND(t1.c1)))AND(t1.c0)))) ASC  NULLS FIRST, (+ ((NOT (t1.c1)))) DESC  NULLS FIRST, ((((((((t1.c1)AND(t1.c1)))OR(1041810244)))OR(t1.c0)))=((~ ('0.5123924678289825')))) LIMIT 0X1;
SELECT MAX(t1.c1) FROM t1 WHERE (((((((((((x'11a9')OR((~ (t1.c1)))))AND((((t1.c0, -146024752, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c1))))))AND(CHAR(t1.c0, t1.c1, t1.c0))))OR(2.032568631E9)))AND(((0.17609236827790442)|(t1.c0)))));
SELECT MAX(t1.c1) FROM t1 WHERE (((((((((((((x'11a9')OR((~ (t1.c1)))))AND((((t1.c0, -146024752, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c1))))))AND(CHAR(t1.c0, t1.c1, t1.c0))))OR(2.032568631E9)))AND(((0.17609236827790442)|(t1.c0)))))AND(((t1.c1)GLOB(t1.c1)) COLLATE NOCASE))) ORDER BY CASE WHEN ((t1.c0)<<(t1.c1)) THEN ((((t1.c1)AND(t1.c0)))OR(t1.c1)) ELSE t1.c0 COLLATE RTRIM END ASC, ((CASE WHEN t1.c0 THEN t1.c0 WHEN x'65' THEN 0.8319174161007276 ELSE t1.c1 END) IS TRUE) ASC, CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) AS INTEGER) INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((t1.c0, t1.c1, t1.c1, t1.c0)) BETWEEN ((((t1.c0)IS(t1.c1)), ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)), (+ (t1.c1)), ((t1.c1)LIKE(t1.c1)))) AND ((((t1.c0)>>(NULL)), (((NULL, t1.c1))==((t1.c1, t1.c0))), CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, (~ (t1.c1)))))) ORDER BY CASE WHEN ((t1.c0)<<(t1.c1)) THEN ((((t1.c1)AND(t1.c0)))OR(t1.c1)) ELSE t1.c0 COLLATE RTRIM END ASC, ((CASE WHEN t1.c0 THEN t1.c0 WHEN x'65' THEN 0.8319174161007276 ELSE t1.c1 END) IS TRUE) ASC, CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) AS INTEGER);
SELECT * FROM t1 WHERE (0.44622209389428935) ORDER BY CAST(t1.c0 AS BLOB) COLLATE BINARY ASC, TYPEOF((((t1.c1, t1.c0, t1.c1, t1.c0))>=((t1.c1, t1.c1, t1.c1, t1.c0)))) ASC, CAST(((t1.c1) IS TRUE) AS BLOB);
SELECT * FROM t1 WHERE (0.44622209389428935) ORDER BY CASE WHEN CASE NULL  WHEN t1.c1 THEN t1.c1 END THEN ((t1.c0) NOTNULL) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) THEN ((((t1.c1)OR(NULL)))OR(t1.c0)) ELSE '-1920491042' END DESC INTERSECT SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) BETWEEN (((t1.c1)<(t1.c1))) AND (((((((t1.c0)AND(t1.c0)))OR('1486003871')))AND(t1.c0))))) ORDER BY CASE WHEN CASE NULL  WHEN t1.c1 THEN t1.c1 END THEN ((t1.c0) NOTNULL) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) THEN ((((t1.c1)OR(NULL)))OR(t1.c0)) ELSE '-1920491042' END DESC;
SELECT * FROM t1 WHERE (0.44622209389428935) ORDER BY CAST(t1.c0 AS BLOB) COLLATE BINARY ASC, TYPEOF((((t1.c1, t1.c0, t1.c1, t1.c0))>=((t1.c1, t1.c1, t1.c1, t1.c0)))) ASC, CAST(((t1.c1) IS TRUE) AS BLOB);
SELECT * FROM t1 WHERE (0.44622209389428935) ORDER BY CASE WHEN CASE NULL  WHEN t1.c1 THEN t1.c1 END THEN ((t1.c0) NOTNULL) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) THEN ((((t1.c1)OR(NULL)))OR(t1.c0)) ELSE '-1920491042' END DESC INTERSECT SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) BETWEEN (((t1.c1)<(t1.c1))) AND (((((((t1.c0)AND(t1.c0)))OR('1486003871')))AND(t1.c0))))) ORDER BY CASE WHEN CASE NULL  WHEN t1.c1 THEN t1.c1 END THEN ((t1.c0) NOTNULL) WHEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c0)) THEN ((((t1.c1)OR(NULL)))OR(t1.c0)) ELSE '-1920491042' END DESC;
SELECT * FROM t1 WHERE ((((t1.c1)) BETWEEN (((+ (t1.c1)))) AND ((((t1.c1) IS TRUE))))) ORDER BY ((t1.c0)|((t1.c1 IN (t1.c1, t1.c1)))) ASC  NULLS LAST, ((((t1.c0))==((t1.c0))) IN (((((t1.c0)OR(t1.c0)))OR(t1.c1)))) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1)) BETWEEN (((+ (t1.c1)))) AND ((((t1.c1) IS TRUE))))) ORDER BY ((x'5f3648')*(((x'54ba')IS(t1.c0))))  NULLS LAST, (t1.c1 IN (t1.c0)) COLLATE BINARY  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))>=((t1.c0 IN (t1.c1))))) ORDER BY ((x'5f3648')*(((x'54ba')IS(t1.c0))))  NULLS LAST, (t1.c1 IN (t1.c0)) COLLATE BINARY  NULLS LAST;
SELECT * FROM t1 WHERE ((((t1.c1)) BETWEEN (((+ (t1.c1)))) AND ((((t1.c1) IS TRUE))))) ORDER BY ((t1.c0)|((t1.c1 IN (t1.c1, t1.c1)))) ASC  NULLS LAST, ((((t1.c0))==((t1.c0))) IN (((((t1.c0)OR(t1.c0)))OR(t1.c1)))) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1)) BETWEEN (((+ (t1.c1)))) AND ((((t1.c1) IS TRUE))))) ORDER BY ((x'5f3648')*(((x'54ba')IS(t1.c0))))  NULLS LAST, (t1.c1 IN (t1.c0)) COLLATE BINARY  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))>=((t1.c0 IN (t1.c1))))) ORDER BY ((x'5f3648')*(((x'54ba')IS(t1.c0))))  NULLS LAST, (t1.c1 IN (t1.c0)) COLLATE BINARY  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE (CAST((~ (t1.c1)) AS INTEGER)) ORDER BY CAST((((t1.c1, t1.c0, t1.c0))=((NULL, t1.c0, t1.c1))) AS BLOB)  NULLS LAST, t1.c0, t1.c1  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (CAST((~ (t1.c1)) AS INTEGER)) ORDER BY ((CAST(t1.c1 AS TEXT))-(json_patch(t1.c1, x''))) ASC, (+ (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))))  NULLS LAST LIMIT 3;
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (CASE t1.c0  WHEN t1.c0 THEN t1.c1 END))) ORDER BY CAST(t1.c0 COLLATE BINARY AS BLOB)  NULLS LAST, (NOT (((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (CASE t1.c0  WHEN t1.c0 THEN t1.c1 END))) ORDER BY ((((t1.c1)<>(t1.c0))) NOT BETWEEN (CAST(x'bbe3' AS NUMERIC)) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))), ((((x'')OR(((t1.c0)>>(t1.c1)))))OR((NOT (t1.c1)))) ASC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((t1.c0 COLLATE BINARY) IS TRUE)) ORDER BY (((t1.c1, t1.c0, t1.c0, t1.c0)) BETWEEN ((LIKELIHOOD(t1.c1, t1.c0), ((((t1.c1)OR(t1.c1)))AND(t1.c1)), ((((t1.c1)OR(t1.c0)))AND(t1.c0)), ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))) AND (((((t1.c0, t1.c0))<((t1.c1, t1.c0))), ((0X284422a1)>=(t1.c1)), (~ (t1.c1)), ((t1.c1)AND(t1.c1))))) DESC, (+ (CASE WHEN 'J굜XByh	c' THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE (((t1.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((((t1.c0)LIKE(-1.028690489E9)))+((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))))  NULLS LAST LIMIT 3 INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c0)IS(t1.c1))) BETWEEN (DATETIME(t1.c1, t1.c0, '-1671880510')) AND (x'd3caf0'))) ORDER BY ((((t1.c0)LIKE(-1.028690489E9)))+((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))))  NULLS LAST LIMIT 0X3;
SELECT MAX(t1.c0) FROM t1 WHERE (t1.c1);
SELECT ALL MAX(t1.c0) FROM t1 WHERE (t1.c1) LIMIT 0X1 INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (((t1.c1)<<(JULIANDAY(t1.c1, t1.c1, t1.c1, t1.c0, t1.c0, t1.c1, t1.c1)))) LIMIT 1;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c1 IN ())) NOT BETWEEN (((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0))) AND (((t1.c0) IS FALSE)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (((t1.c1)+(t1.c0))) AND (((t1.c0)IS(t1.c0)))) ASC, ((((t1.c1) NOTNULL))<(0.6781619664036879));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((t1.c1 IN ())) NOT BETWEEN (((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0))) AND (((t1.c0) IS FALSE))))AND(t1.c1))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (((t1.c1)+(t1.c0))) AND (((t1.c0)IS(t1.c0)))) ASC, ((((t1.c1) NOTNULL))<(0.6781619664036879)) LIMIT 2;
SELECT ALL * FROM t1 WHERE (CAST((~ (t1.c1)) AS BLOB)) ORDER BY ((UPPER(t1.c0)) NOT NULL) ASC, (((t1.c0)) BETWEEN ((t1.c0)) AND (('飿{FI4'))) DESC  NULLS FIRST, (((NOT (t1.c1)))<>(TRIM(t1.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((CAST((~ (t1.c1)) AS BLOB))AND(((((((((((((t1.c1)OR(t1.c1)))OR(NULL)))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))))OR(((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(t1.c1))))))) ORDER BY (((t1.c1 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND ((t1.c1 IN ()))) DESC  NULLS LAST, CAST(((t1.c0)*(t1.c0)) AS BLOB)  NULLS LAST LIMIT 0X4 INTERSECT SELECT ALL * FROM t1 WHERE (MIN(0x6587fd65, ((((((t1.c0)OR(t1.c0)))OR(0.5302174537734449)))OR('')), ((t1.c0) NOTNULL))) ORDER BY (((t1.c1 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND ((t1.c1 IN ()))) DESC  NULLS LAST, CAST(((t1.c0)*(t1.c0)) AS BLOB)  NULLS LAST LIMIT 4;
SELECT ALL * FROM t1 WHERE (CAST((~ (t1.c1)) AS BLOB)) ORDER BY ((UPPER(t1.c0)) NOT NULL) ASC, (((t1.c0)) BETWEEN ((t1.c0)) AND (('飿{FI4'))) DESC  NULLS FIRST, (((NOT (t1.c1)))<>(TRIM(t1.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((CAST((~ (t1.c1)) AS BLOB))AND(((((((((((((t1.c1)OR(t1.c1)))OR(NULL)))AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))))OR(((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(t1.c1))))))) ORDER BY (((t1.c1 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND ((t1.c1 IN ()))) DESC  NULLS LAST, CAST(((t1.c0)*(t1.c0)) AS BLOB)  NULLS LAST LIMIT 0X4 INTERSECT SELECT ALL * FROM t1 WHERE (MIN(0x6587fd65, ((((((t1.c0)OR(t1.c0)))OR(0.5302174537734449)))OR('')), ((t1.c0) NOTNULL))) ORDER BY (((t1.c1 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))) AND ((t1.c1 IN ()))) DESC  NULLS LAST, CAST(((t1.c0)*(t1.c0)) AS BLOB)  NULLS LAST LIMIT 4;
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)-(t1.c1)) COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c0)-(t1.c1)) COLLATE RTRIM)AND(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) COLLATE NOCASE))) ORDER BY ((((((t1.c1 COLLATE RTRIM)AND(t1.c0 COLLATE RTRIM)))OR(t1.c0)))AND(t1.c1 COLLATE RTRIM)), ((((((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)) COLLATE RTRIM  NULLS FIRST LIMIT 6 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((+ (((t1.c1) BETWEEN ('-809746133') AND (t1.c1))))) ORDER BY ((((((t1.c1 COLLATE RTRIM)AND(t1.c0 COLLATE RTRIM)))OR(t1.c0)))AND(t1.c1 COLLATE RTRIM)), ((((((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)) COLLATE RTRIM  NULLS FIRST LIMIT 6;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((((((TRIM(t1.c0))AND((('-1772651234') NOT BETWEEN (t1.c0) AND (t1.c1)))))AND((- (t1.c0)))))OR(((t1.c0) IS FALSE))))AND(t1.c0)))AND(((t1.c1)+(t1.c1)))))AND((- (t1.c0)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((((((((((((TRIM(t1.c0))AND((('-1772651234') NOT BETWEEN (t1.c0) AND (t1.c1)))))AND((- (t1.c0)))))OR(((t1.c0) IS FALSE))))AND(t1.c0)))AND(((t1.c1)+(t1.c1)))))AND((- (t1.c0)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))))AND(CASE (NOT (t1.c0))  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c0 END WHEN ((t1.c1) NOTNULL) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) WHEN CASE WHEN NULL THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0X2a5b890f WHEN t1.c0 THEN t1.c1 WHEN '1703411045' THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END THEN (+ (t1.c1)) ELSE (+ (t1.c0)) END))) ORDER BY ABS(CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN '<' THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)  NULLS LAST, SQLITE_SOURCE_ID()  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((t1.c0)) BETWEEN (('8%(i9|')) AND ((((t1.c1)==(t1.c1)))))) ORDER BY ABS(CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN '<' THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)  NULLS LAST, SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (x'c9d90a') ORDER BY CASE WHEN CAST(t1.c0 AS BLOB) THEN t1.c0 COLLATE RTRIM WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN -1384197145 WHEN ((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)) THEN ((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR('e')))OR(x'')) ELSE ((t1.c1)+(NULL)) END  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (x'c9d90a') ORDER BY CASE WHEN CAST(t1.c0 AS BLOB) THEN t1.c0 COLLATE RTRIM WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN 0Xffffffffad7ed3e7 WHEN ((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)) THEN ((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR('e')))OR(x'')) ELSE ((t1.c1)+(NULL)) END  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE NOCASE)+(((t1.c1)AND(t1.c0))))) ORDER BY CASE WHEN CAST(t1.c0 AS BLOB) THEN t1.c0 COLLATE RTRIM WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN 0xffffffffad7ed3e7 WHEN ((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)) THEN ((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c0)))OR('e')))OR(x'')) ELSE ((t1.c1)+(NULL)) END  NULLS LAST LIMIT 1;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY ((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND('J')))<(((0.9247712992932364)!=(t1.c0)))) DESC  NULLS LAST, ((((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR((t1.c1 IN (t1.c1)))))OR((t1.c1 IN ()))))AND(NULL));
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(CAST(((t1.c0)|(x'ab')) AS NUMERIC)))) ORDER BY CASE WHEN NULL THEN IFNULL('-1187289012', t1.c1) END, (COALESCE(DISTINCT t1.c0, t1.c1, t1.c1, t1.c1, t1.c1) IN (((t1.c0)&(t1.c0)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((+ (((t1.c1) NOT NULL)))) ORDER BY CASE WHEN NULL THEN IFNULL('-1187289012', t1.c1) END, (COALESCE(DISTINCT t1.c0, t1.c1, t1.c1, t1.c1, t1.c1) IN (((t1.c0)&(t1.c0)))) LIMIT 0;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY ((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND('J')))<(((0.9247712992932364)!=(t1.c0)))) DESC  NULLS LAST, ((((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR((t1.c1 IN (t1.c1)))))OR((t1.c1 IN ()))))AND(NULL));
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(CAST(((t1.c0)|(x'ab')) AS NUMERIC)))) ORDER BY CASE WHEN NULL THEN IFNULL('-1187289012', t1.c1) END, (COALESCE(DISTINCT t1.c0, t1.c1, t1.c1, t1.c1, t1.c1) IN (((t1.c0)&(t1.c0)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((+ (((t1.c1) NOT NULL)))) ORDER BY CASE WHEN NULL THEN IFNULL('-1187289012', t1.c1) END, (COALESCE(DISTINCT t1.c0, t1.c1, t1.c1, t1.c1, t1.c1) IN (((t1.c0)&(t1.c0)))) LIMIT 0;
SELECT * FROM t1 WHERE (CASE WHEN (('830816951') ISNULL) THEN t1.c1 WHEN t1.c0 THEN CAST(t1.c0 AS NUMERIC) WHEN (((t1.c1))>=((t1.c0))) THEN (('2067648694')GLOB(t1.c1)) END) ORDER BY ((t1.c1 IN (t1.c1)) IN (((((t1.c0)OR(t1.c0)))AND(t1.c0)))) ASC  NULLS LAST, x'd05f' ASC  NULLS LAST, ((~ (t1.c1)) IN (t1.c1)) ASC;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN (('830816951') ISNULL) THEN t1.c1 WHEN t1.c0 THEN CAST(t1.c0 AS NUMERIC) WHEN (((t1.c1))>((t1.c0))) THEN (('2067648694')GLOB(t1.c1)) END) ORDER BY ((t1.c0)IS(t1.c1)) COLLATE NOCASE ASC, ((((TRIM(t1.c0, t1.c1))OR((NOT (t1.c1)))))OR(((t1.c0) ISNULL)));
SELECT * FROM t1 WHERE (CASE WHEN (('830816951') ISNULL) THEN t1.c1 WHEN t1.c0 THEN CAST(t1.c0 AS NUMERIC) WHEN (((t1.c1))>=((t1.c0))) THEN (('2067648694')GLOB(t1.c1)) END) ORDER BY ((t1.c1 IN (t1.c1)) IN (((((t1.c0)OR(t1.c0)))AND(t1.c0)))) ASC  NULLS LAST, x'd05f' ASC  NULLS LAST, ((~ (t1.c1)) IN (t1.c1)) ASC;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN (('830816951') ISNULL) THEN t1.c1 WHEN t1.c0 THEN CAST(t1.c0 AS NUMERIC) WHEN (((t1.c1))>((t1.c0))) THEN (('2067648694')GLOB(t1.c1)) END) ORDER BY ((t1.c0)IS(t1.c1)) COLLATE NOCASE ASC, ((((TRIM(t1.c0, t1.c1))OR((NOT (t1.c1)))))OR(((t1.c0) ISNULL)));
SELECT MAX(t1.c1) FROM t1 WHERE (((t1.c1)IS NOT(t1.c1)) COLLATE BINARY) ORDER BY LIKELIHOOD(CAST(t1.c1 AS NUMERIC), (((t1.c0))>((t1.c0))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((t1.c1)IS NOT(t1.c1)) COLLATE BINARY) ORDER BY ((((((((t1.c1)OR(((t1.c0) IS TRUE))))OR(t1.c0)))AND(((((t1.c1)AND(t1.c1)))AND(NULL)))))AND(((t1.c1) NOT NULL))) DESC, CASE WHEN ((t1.c0) IS FALSE) THEN t1.c1 WHEN ((t1.c1)>=(x'48')) THEN t1.c1 COLLATE NOCASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c0) NOTNULL) ELSE ((x'')>>(t1.c1)) END INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND(((((t1.c0)OR(t1.c0)))AND(t1.c1)))))AND(((t1.c0)IS NOT(0x769001ea)))))OR(((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR('JdS_^Q臋')))OR(t1.c0))))) ORDER BY ((((((((t1.c1)OR(((t1.c0) IS TRUE))))OR(t1.c0)))AND(((((t1.c1)AND(t1.c1)))AND(NULL)))))AND(((t1.c1) NOT NULL))) DESC, CASE WHEN ((t1.c0) IS FALSE) THEN t1.c1 WHEN ((t1.c1)>=(x'48')) THEN t1.c1 COLLATE NOCASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) THEN ((t1.c0) NOTNULL) ELSE ((x'')>>(t1.c1)) END;
SELECT ALL * FROM t1 WHERE (CASE (t1.c0 IN ())  WHEN ((t1.c0)<>(t1.c1)) THEN (t1.c1 IN (t1.c1)) WHEN (- (t1.c1)) THEN t1.c0 COLLATE NOCASE WHEN ((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)) THEN (t1.c0 IN (t1.c0)) END) ORDER BY ((t1.c0)*((((t1.c1))>=((t1.c1))))) ASC  NULLS FIRST, ((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR((t1.c0 IN ()))))OR(t1.c0)))OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'' END)))AND(((t1.c0)>(t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (CASE (t1.c0 IN ())  WHEN ((t1.c0)!=(t1.c1)) THEN (t1.c1 IN (t1.c1)) WHEN (- (t1.c1)) THEN t1.c0 COLLATE NOCASE WHEN ((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)) THEN (t1.c0 IN (t1.c0)) END) ORDER BY ((t1.c0)*((((t1.c1))>=((t1.c1))))) ASC  NULLS FIRST, ((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR((t1.c0 IN ()))))OR(t1.c0)))OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'' END)))AND(((t1.c0)>(t1.c0)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)AND(t1.c0)))OR(t1.c1)))<<(t1.c1 COLLATE RTRIM))) ORDER BY ((t1.c0)*((((t1.c1))>=((t1.c1))))) ASC  NULLS FIRST, ((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR((t1.c0 IN ()))))OR(t1.c0)))OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'' END)))AND(((t1.c0)>(t1.c0))));
SELECT ALL * FROM t1 WHERE (CASE (t1.c0 IN ())  WHEN ((t1.c0)<>(t1.c1)) THEN (t1.c1 IN (t1.c1)) WHEN (- (t1.c1)) THEN t1.c0 COLLATE NOCASE WHEN ((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)) THEN (t1.c0 IN (t1.c0)) END) ORDER BY ((t1.c0)*((((t1.c1))>=((t1.c1))))) ASC  NULLS FIRST, ((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR((t1.c0 IN ()))))OR(t1.c0)))OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'' END)))AND(((t1.c0)>(t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (CASE (t1.c0 IN ())  WHEN ((t1.c0)!=(t1.c1)) THEN (t1.c1 IN (t1.c1)) WHEN (- (t1.c1)) THEN t1.c0 COLLATE NOCASE WHEN ((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)) THEN (t1.c0 IN (t1.c0)) END) ORDER BY ((t1.c0)*((((t1.c1))>=((t1.c1))))) ASC  NULLS FIRST, ((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR((t1.c0 IN ()))))OR(t1.c0)))OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'' END)))AND(((t1.c0)>(t1.c0)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)AND(t1.c0)))OR(t1.c1)))<<(t1.c1 COLLATE RTRIM))) ORDER BY ((t1.c0)*((((t1.c1))>=((t1.c1))))) ASC  NULLS FIRST, ((((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR((t1.c0 IN ()))))OR(t1.c0)))OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'' END)))AND(((t1.c0)>(t1.c0))));
SELECT ALL * FROM t1 WHERE ((((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))))>((t1.c1 IN (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))))>((t1.c1 IN (t1.c0))))) ORDER BY ((t1.c1)>=(t1.c0)) COLLATE NOCASE ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ (((((t1.c0)OR(t1.c1)))OR(t1.c0))))) ORDER BY ((t1.c1)>=(t1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))))>((t1.c1 IN (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))))>((t1.c1 IN (t1.c0))))) ORDER BY ((t1.c1)>=(t1.c0)) COLLATE NOCASE ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ (((((t1.c0)OR(t1.c1)))OR(t1.c0))))) ORDER BY ((t1.c1)>=(t1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c0 END) NOT NULL));
SELECT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c0 END) NOT NULL))AND(t1.c0 COLLATE RTRIM))) ORDER BY ((x'22')*(TRIM(DISTINCT t1.c0)))  NULLS LAST, TOTAL_CHANGES() ASC LIMIT 0;
SELECT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c0 END) NOT NULL));
SELECT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN NULL ELSE t1.c0 END) NOT NULL))AND(t1.c0 COLLATE RTRIM))) ORDER BY ((x'22')*(TRIM(DISTINCT t1.c0)))  NULLS LAST, TOTAL_CHANGES() ASC LIMIT 0;
SELECT * FROM t1 WHERE ('nowrJL');
SELECT ALL * FROM t1 WHERE ('nowrJL') ORDER BY ((t1.c1)<<(t1.c1)) COLLATE NOCASE;
SELECT * FROM t1 WHERE ('nowrJL');
SELECT ALL * FROM t1 WHERE ('nowrJL') ORDER BY ((t1.c1)<<(t1.c1)) COLLATE NOCASE;
SELECT MAX(t1.c1) FROM t1 WHERE (((LIKELY(t1.c1))<=((('')|(t1.c1))))) ORDER BY ((TRIM(t1.c0)) NOT NULL)  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE (((LIKELY(t1.c1))<((('')|(t1.c1))))) ORDER BY (((((((t1.c0)AND(t1.c1)))OR(t1.c1)), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)), (NOT (t1.c1))))>((NULL, (t1.c1 IN (t1.c0, t1.c0)), ''))), (t1.c0 COLLATE NOCASE IN ('', CAST(t1.c0 AS NUMERIC))) ASC, ((t1.c1)>=(0.017202734001970588)) DESC INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (CAST(((t1.c1) NOTNULL) AS REAL)) ORDER BY (((((((t1.c0)AND(t1.c1)))OR(t1.c1)), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)), (NOT (t1.c1))))>((NULL, (t1.c1 IN (t1.c0, t1.c0)), ''))), (t1.c0 COLLATE NOCASE IN ('', CAST(t1.c0 AS NUMERIC))) ASC, ((t1.c1)>=(0.017202734001970588)) DESC;
SELECT * FROM t1 WHERE (IFNULL(DISTINCT (+ (t1.c0)), ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((IFNULL(DISTINCT (+ (t1.c0)), ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1))))AND(('679215949' IN (((t1.c0)LIKE(t1.c0))))))) ORDER BY CAST((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) AS BLOB) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1)AND(0.0893189680244203)) AS NUMERIC)) ORDER BY CAST((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) AS BLOB) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (IFNULL(DISTINCT (+ (t1.c0)), ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((IFNULL(DISTINCT (+ (t1.c0)), ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1))))AND(('679215949' IN (((t1.c0)LIKE(t1.c0))))))) ORDER BY CAST((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) AS BLOB) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1)AND(0.0893189680244203)) AS NUMERIC)) ORDER BY CAST((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) AS BLOB) ASC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c0))  WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0)>=(t1.c1)) ELSE t1.c0 COLLATE NOCASE END) ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN (('1622442474')AND(t1.c1)) END;
SELECT MIN(t1.c0) FROM t1 WHERE (((CASE ((t1.c1) BETWEEN (t1.c0) AND (t1.c0))  WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0)>=(t1.c1)) ELSE t1.c0 COLLATE NOCASE END)AND((t1.c1 IN ())))) ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN (('1622442474')AND(t1.c1)) END;
SELECT * FROM t1 WHERE ((((((((('-o闶A?>⹌')AND(((NULL)>=(t1.c1)))))AND(JULIANDAY(t1.c0, x'', t1.c1))))AND(((t1.c1) NOT BETWEEN (x'5265') AND (t1.c1)))))AND(((t1.c1) IS TRUE)))) ORDER BY ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))>=((t1.c1 IN (t1.c0)))) DESC, CAST(CAST(x'a0ba4e' AS REAL) AS NUMERIC) DESC  NULLS LAST, CASE WHEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) THEN t1.c1 WHEN (+ (t1.c0)) THEN ((((t1.c1)OR(t1.c0)))AND(t1.c1)) WHEN (~ (t1.c0)) THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((NULL))) END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((((((('-o闶A?>⹌')AND(((NULL)>=(t1.c1)))))AND(JULIANDAY(t1.c0, x'', t1.c1))))AND(((t1.c1) NOT BETWEEN (x'5265') AND (t1.c1)))))AND(((t1.c1) IS TRUE))))AND(json_array_length((t1.c0 IN (t1.c1)), CAST(t1.c0 AS REAL))))) ORDER BY CASE t1.c1  WHEN (((t1.c1, t1.c0, t1.c0))<=((t1.c1, t1.c0, '-305989446'))) THEN (t1.c0 IN (t1.c0)) WHEN ((t1.c0)IS(t1.c0)) THEN ((t1.c0)<(t1.c1)) END  NULLS LAST;
SELECT * FROM t1 WHERE ((((((((('-o闶A?>⹌')AND(((NULL)>=(t1.c1)))))AND(JULIANDAY(t1.c0, x'', t1.c1))))AND(((t1.c1) NOT BETWEEN (x'5265') AND (t1.c1)))))AND(((t1.c1) IS TRUE)))) ORDER BY ((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))>=((t1.c1 IN (t1.c0)))) DESC, CAST(CAST(x'a0ba4e' AS REAL) AS NUMERIC) DESC  NULLS LAST, CASE WHEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) THEN t1.c1 WHEN (+ (t1.c0)) THEN ((((t1.c1)OR(t1.c0)))AND(t1.c1)) WHEN (~ (t1.c0)) THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((NULL))) END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((((((('-o闶A?>⹌')AND(((NULL)>=(t1.c1)))))AND(JULIANDAY(t1.c0, x'', t1.c1))))AND(((t1.c1) NOT BETWEEN (x'5265') AND (t1.c1)))))AND(((t1.c1) IS TRUE))))AND(json_array_length((t1.c0 IN (t1.c1)), CAST(t1.c0 AS REAL))))) ORDER BY CASE t1.c1  WHEN (((t1.c1, t1.c0, t1.c0))<=((t1.c1, t1.c0, '-305989446'))) THEN (t1.c0 IN (t1.c0)) WHEN ((t1.c0)IS(t1.c0)) THEN ((t1.c0)<(t1.c1)) END  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((t1.c1)AND((t1.c0 IN (t1.c1)))))OR(CAST(t1.c0 AS INTEGER)))) ORDER BY CAST((+ (t1.c0)) AS TEXT) ASC;
SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c1)AND((t1.c0 IN (t1.c1)))))OR(CAST(t1.c0 AS INTEGER)))) ORDER BY (((t1.c0) IS TRUE) IN ()), ((((((((t1.c0)>>('')))OR(t1.c1 COLLATE NOCASE)))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c1))))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE (x'9034a2') ORDER BY (((t1.c0) IS TRUE) IN ()), ((((((((t1.c0)>>('')))OR(t1.c1 COLLATE NOCASE)))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c1))))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY RTRIM(t1.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)AND((+ (((((t1.c1)AND(t1.c1)))OR(t1.c1))))))) ORDER BY RTRIM(t1.c0 COLLATE RTRIM)  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ ((((t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c0)) AND ((x'f8', t1.c0)))))) ORDER BY RTRIM(t1.c0 COLLATE RTRIM)  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY RTRIM(t1.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)AND((+ (((((t1.c1)AND(t1.c1)))OR(t1.c1))))))) ORDER BY RTRIM(t1.c0 COLLATE RTRIM)  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ ((((t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c0)) AND ((x'f8', t1.c0)))))) ORDER BY RTRIM(t1.c0 COLLATE RTRIM)  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE ((((((t1.c0, t1.c0))=((t1.c0, NULL)))) NOT BETWEEN (((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c1))) AND (((((t1.c1)AND(NULL)))AND(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c0))=((t1.c0, NULL)))) NOT BETWEEN (((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c1))) AND (((((t1.c1)AND(NULL)))AND(t1.c0))))) ORDER BY CASE WHEN ((t1.c1)>=(t1.c0)) THEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) WHEN '-677875085' THEN ((t1.c1)-(t1.c1)) ELSE (NOT (t1.c1)) END ASC  NULLS LAST, (((((((- (t1.c0)))AND(x'a3')))AND(t1.c1 COLLATE BINARY)))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)) ASC  NULLS LAST;
SELECT * FROM t1 WHERE ((((((t1.c0, t1.c0))=((t1.c0, NULL)))) NOT BETWEEN (((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c1))) AND (((((t1.c1)AND(NULL)))AND(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c0))=((t1.c0, NULL)))) NOT BETWEEN (((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c1))) AND (((((t1.c1)AND(NULL)))AND(t1.c0))))) ORDER BY CASE WHEN ((t1.c1)>=(t1.c0)) THEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) WHEN '-677875085' THEN ((t1.c1)-(t1.c1)) ELSE (NOT (t1.c1)) END ASC  NULLS LAST, (((((((- (t1.c0)))AND(x'a3')))AND(t1.c1 COLLATE BINARY)))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c0) NOT NULL))AND((~ (t1.c0)))));
SELECT * FROM t1 WHERE (((((((t1.c0) NOT NULL))AND((~ (t1.c0)))))AND(((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1))) IS TRUE))));
SELECT * FROM t1 WHERE (((((t1.c0) NOT NULL))AND((~ (t1.c0)))));
SELECT * FROM t1 WHERE (((((((t1.c0) NOT NULL))AND((~ (t1.c0)))))AND(((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1))) IS TRUE))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY (((((((~ (t1.c0)))AND(((t1.c1)IS NOT(t1.c1)))))AND('-1408692428')))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)), (- ((t1.c0 IN ())))  NULLS FIRST, TYPEOF(((t1.c1) ISNULL)) ASC;
SELECT COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY (((((((~ (t1.c0)))AND(((t1.c1)IS NOT(t1.c1)))))AND('-1408692428')))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)), (- ((t1.c0 IN ())))  NULLS FIRST, TYPEOF(((t1.c1) ISNULL)) ASC LIMIT 0;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS INTEGER)) NOTNULL)) ORDER BY CASE ((t1.c0)>(t1.c1))  WHEN ((t1.c0) IS TRUE) THEN (+ (t1.c1)) END DESC, (+ (CAST(x'46eb74' AS NUMERIC))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS INTEGER)) NOTNULL)) ORDER BY ((+ (t1.c1)) IN ()) ASC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY ((+ (t1.c1)) IN ()) ASC LIMIT 1;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS INTEGER)) NOTNULL)) ORDER BY CASE ((t1.c0)>(t1.c1))  WHEN ((t1.c0) IS TRUE) THEN (+ (t1.c1)) END DESC, (+ (CAST(x'46eb74' AS NUMERIC))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS INTEGER)) NOTNULL)) ORDER BY ((+ (t1.c1)) IN ()) ASC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c0) ORDER BY ((+ (t1.c1)) IN ()) ASC LIMIT 1;
SELECT ALL * FROM t1 WHERE ((CAST(t1.c1 AS NUMERIC) IN ((t1.c1 IN (t1.c1, t1.c1)), (+ (t1.c1)), ((t1.c0)AND(t1.c0)))));
SELECT * FROM t1 WHERE ((((CAST(t1.c1 AS NUMERIC) IN ((t1.c1 IN (t1.c1, t1.c1)), (+ (t1.c1)), ((t1.c0)AND(t1.c0)))))AND(-1.863901556E9))) LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE (CASE WHEN json_type(t1.c0) THEN CAST(t1.c0 AS BLOB) END) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((CAST(t1.c1 AS NUMERIC) IN ((t1.c1 IN (t1.c1, t1.c1)), (+ (t1.c1)), ((t1.c0)AND(t1.c0)))));
SELECT * FROM t1 WHERE ((((CAST(t1.c1 AS NUMERIC) IN ((t1.c1 IN (t1.c1, t1.c1)), (+ (t1.c1)), ((t1.c0)AND(t1.c0)))))AND(-1.863901556E9))) LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE (CASE WHEN json_type(t1.c0) THEN CAST(t1.c0 AS BLOB) END) LIMIT 0X1;
SELECT COUNT(*) FROM t1 WHERE (STRFTIME(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)), CAST(t1.c1 AS INTEGER), (((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, 0.6849923726597329))))) ORDER BY ((((t1.c1) ISNULL))>(((t1.c0) ISNULL))) ASC, t1.c0;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((STRFTIME(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)), CAST(t1.c1 AS INTEGER), (((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, 0.6849923726597329)))))AND(((((t1.c1)<>(0.2286105524887978))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND ((((1408534150))<((t1.c0)))))))) ORDER BY ((((t1.c1) ISNULL))>(((t1.c0) ISNULL))) ASC, t1.c0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((+ (t1.c0)))=(((t1.c0)LIKE(t1.c0)))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((((+ (t1.c0)))==(((t1.c0)LIKE(t1.c0)))))AND((((((t1.c0)|(t1.c1)), ((t1.c0) NOTNULL)))<=(((NOT (t1.c0)), ((t1.c1)*(t1.c0)))))))) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY 0.46410025643848873 ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c0)AND(CAST((NOT (t1.c1)) AS NUMERIC)))) ORDER BY ((t1.c0)<(t1.c0)) COLLATE BINARY COLLATE RTRIM  NULLS LAST, ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE RTRIM COLLATE RTRIM DESC, ((((NULL)<(t1.c1)))|(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))) ASC INTERSECT SELECT ALL * FROM t1 WHERE (CAST(x'c6c1f648' AS BLOB)) ORDER BY ((t1.c0)<(t1.c0)) COLLATE BINARY COLLATE RTRIM  NULLS LAST, ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE RTRIM COLLATE RTRIM DESC, ((((NULL)<(t1.c1)))|(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))) ASC;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY 0.46410025643848873 ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c0)AND(CAST((NOT (t1.c1)) AS NUMERIC)))) ORDER BY ((t1.c0)<(t1.c0)) COLLATE BINARY COLLATE RTRIM  NULLS LAST, ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE RTRIM COLLATE RTRIM DESC, ((((NULL)<(t1.c1)))|(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))) ASC INTERSECT SELECT ALL * FROM t1 WHERE (CAST(x'c6c1f648' AS BLOB)) ORDER BY ((t1.c0)<(t1.c0)) COLLATE BINARY COLLATE RTRIM  NULLS LAST, ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE RTRIM COLLATE RTRIM DESC, ((((NULL)<(t1.c1)))|(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))) ASC;
SELECT * FROM t1 WHERE (NULLIF(((t1.c1)-(t1.c0)), t1.c1 COLLATE BINARY));
SELECT DISTINCT * FROM t1 WHERE (NULLIF(((t1.c1)-(t1.c0)), t1.c1 COLLATE BINARY));
SELECT * FROM t1 WHERE (NULLIF(((t1.c1)-(t1.c0)), t1.c1 COLLATE BINARY));
SELECT DISTINCT * FROM t1 WHERE (NULLIF(((t1.c1)-(t1.c0)), t1.c1 COLLATE BINARY));
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((((t1.c0 IN (t1.c0)))AND(HEX(t1.c0))))AND((t1.c1 IN (t1.c0)))));
SELECT MAX(t1.c1) FROM t1 WHERE ((((((t1.c0 IN (t1.c0)))AND(HEX(t1.c0))))AND((t1.c1 IN (t1.c0))))) ORDER BY ((t1.c1 COLLATE BINARY) NOTNULL), (((t1.c0 IN (t1.c0))) NOTNULL) LIMIT 0x0 INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 END) NOTNULL)) ORDER BY ((t1.c1 COLLATE BINARY) NOTNULL), (((t1.c0 IN (t1.c0))) NOTNULL) LIMIT 0x0;
SELECT MIN(t1.c0) FROM t1 WHERE (UPPER(DISTINCT (NOT (t1.c1)))) ORDER BY ABS(DISTINCT CASE t1.c0  WHEN t1.c1 THEN t1.c1 END);
SELECT ALL MIN(t1.c0) FROM t1 WHERE (UPPER(DISTINCT (NOT (t1.c1)))) ORDER BY (NOT (((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))) ASC  NULLS LAST, ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)))+(((t1.c0) ISNULL))) ASC LIMIT 0X0;
SELECT * FROM t1 WHERE (((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1))) NOT NULL));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1))) NOT NULL))AND((((t1.c1 IN (t1.c1)))LIKE(t1.c1))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0)!=(t1.c0)) COLLATE BINARY);
SELECT * FROM t1 WHERE (((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1))) NOT NULL));
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1))) NOT NULL))AND((((t1.c1 IN (t1.c1)))LIKE(t1.c1))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c0)!=(t1.c0)) COLLATE BINARY);
SELECT MIN(t1.c0) FROM t1 WHERE (UNLIKELY(LOWER(t1.c1)));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((UNLIKELY(LOWER(t1.c1)))AND(CASE t1.c0  WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN 0.2185287495386108 THEN t1.c0 ELSE t1.c1 END THEN ((((t1.c1)OR(t1.c0)))AND(t1.c0)) ELSE ((t1.c1)|(t1.c0)) END))) ORDER BY ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))*(t1.c0)) DESC LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE (t1.c1);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c1)AND((((t1.c1, x'', t1.c1)) NOT BETWEEN ((CAST(t1.c0 AS INTEGER), ((t1.c1)-(t1.c0)), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)) AND ((t1.c0 COLLATE RTRIM, '41683678' COLLATE NOCASE, (t1.c1 IN ()))))))) LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CASE WHEN (- (t1.c0)) THEN t1.c1 ELSE (('764148155') BETWEEN (t1.c0) AND (t1.c1)) END) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 END)%(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END))) ORDER BY (((NOT (NULL)))IS(CAST(t1.c1 AS TEXT))) DESC  NULLS FIRST, CASE t1.c1 COLLATE NOCASE  WHEN t1.c1 THEN ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)) WHEN ((t1.c0) NOT BETWEEN (0xffffffffe7c3c47e) AND (0.35425045777259156)) THEN ((((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)) WHEN 0.8330458470515898 THEN (((t1.c0)) BETWEEN ((0x580bf9c2)) AND ((t1.c1))) WHEN (~ (t1.c0)) THEN ABS(t1.c0) WHEN rtreenode(t1.c0, '0.25704327255450043') THEN CAST(t1.c0 AS INTEGER) ELSE ((t1.c1)<<(t1.c0)) END ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c1 END)%(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))AND((t1.c1 IN ((((x'18', t1.c1))<=((t1.c1, '204650698')))))))) ORDER BY ((((t1.c0) IS TRUE))<(((t1.c0) NOT BETWEEN (NULL) AND (t1.c1))))  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (t1.c1);
SELECT MIN(t1.c0) FROM t1 WHERE (((t1.c1)AND(((((((((t1.c1)<=(t1.c1)))OR((((t1.c1, t1.c0))!=((t1.c1, t1.c0))))))AND(((t1.c1) IS FALSE))))OR(CAST(t1.c1 AS REAL))))));
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE (((t1.c1)AND(t1.c0))) ORDER BY ((((((t1.c0)OR(t1.c1)))OR(t1.c0))) NOTNULL), (((((t1.c0, '-1222569772')) NOT BETWEEN (('UnaLJS', t1.c1)) AND ((t1.c0, t1.c1)))) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 END) AND (t1.c0)) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE (((t1.c1)AND(t1.c0))) ORDER BY ((((((t1.c0)OR(t1.c1)))OR(t1.c0))) NOTNULL), (((((t1.c0, '-1222569772')) NOT BETWEEN (('UnaLJS', t1.c1)) AND ((t1.c0, t1.c1)))) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 END) AND (t1.c0)) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c0)*(t1.c1))) ISNULL)) ORDER BY (((t1.c1)) BETWEEN ((((((t1.c1)OR(t1.c0)))AND(t1.c1)))) AND (((NOT (t1.c1))))), CASE t1.c0 COLLATE BINARY  WHEN (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))) THEN (NOT (t1.c0)) WHEN SQLITE_COMPILEOPTION_GET(t1.c1) THEN ((t1.c1)||(t1.c1)) ELSE ((((t1.c0)OR(x'6e33')))OR(t1.c1)) END, (~ (TRIM(DISTINCT t1.c0, t1.c1))) ASC;
SELECT ALL * FROM t1 WHERE (((((((t1.c0)*(t1.c1))) ISNULL))AND(((((((((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(t1.c1 COLLATE NOCASE)))AND((((t1.c0, t1.c1)) BETWEEN (('704982203', t1.c1)) AND ((t1.c1, t1.c1))))))AND(((t1.c1) ISNULL))))AND(((t1.c1) ISNULL))))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END))))) ORDER BY (((t1.c1)) BETWEEN ((((((t1.c1)OR(t1.c0)))AND(t1.c1)))) AND (((NOT (t1.c1))))), CASE t1.c0 COLLATE BINARY  WHEN (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))) THEN (NOT (t1.c0)) WHEN SQLITE_COMPILEOPTION_GET(t1.c1) THEN ((t1.c1)||(t1.c1)) ELSE ((((t1.c0)OR(x'6e33')))OR(t1.c1)) END, (~ (TRIM(DISTINCT t1.c0, t1.c1))) ASC;
SELECT ALL * FROM t1 WHERE (((((t1.c0)*(t1.c1))) ISNULL)) ORDER BY (((t1.c1)) BETWEEN ((((((t1.c1)OR(t1.c0)))AND(t1.c1)))) AND (((NOT (t1.c1))))), CASE t1.c0 COLLATE BINARY  WHEN (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))) THEN (NOT (t1.c0)) WHEN SQLITE_COMPILEOPTION_GET(t1.c1) THEN ((t1.c1)||(t1.c1)) ELSE ((((t1.c0)OR(x'6e33')))OR(t1.c1)) END, (~ (TRIM(DISTINCT t1.c0, t1.c1))) ASC;
SELECT ALL * FROM t1 WHERE (((((((t1.c0)*(t1.c1))) ISNULL))AND(((((((((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(t1.c1 COLLATE NOCASE)))AND((((t1.c0, t1.c1)) BETWEEN (('704982203', t1.c1)) AND ((t1.c1, t1.c1))))))AND(((t1.c1) ISNULL))))AND(((t1.c1) ISNULL))))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END))))) ORDER BY (((t1.c1)) BETWEEN ((((((t1.c1)OR(t1.c0)))AND(t1.c1)))) AND (((NOT (t1.c1))))), CASE t1.c0 COLLATE BINARY  WHEN (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c0, t1.c1))) THEN (NOT (t1.c0)) WHEN SQLITE_COMPILEOPTION_GET(t1.c1) THEN ((t1.c1)||(t1.c1)) ELSE ((((t1.c0)OR(x'6e33')))OR(t1.c1)) END, (~ (TRIM(DISTINCT t1.c0, t1.c1))) ASC;
SELECT ALL * FROM t1 WHERE (((((t1.c1)OR(((((t1.c1)OR(t1.c1)))OR(t1.c1)))))OR(((t1.c1)GLOB(t1.c1))))) ORDER BY LIKELIHOOD(DISTINCT ((t1.c0) IS FALSE), ((0.8157254234574315) NOT BETWEEN (t1.c0) AND (t1.c1))) DESC;
SELECT * FROM t1 WHERE (((((((t1.c1)OR(((((t1.c1)OR(t1.c1)))OR(t1.c1)))))OR(((t1.c1)GLOB(t1.c1)))))AND(CAST((~ (t1.c1)) AS BLOB)))) ORDER BY t1.c0 COLLATE RTRIM DESC  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE ((UPPER(t1.c0) IN ())) ORDER BY t1.c0 COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c1)OR(((((t1.c1)OR(t1.c1)))OR(t1.c1)))))OR(((t1.c1)GLOB(t1.c1))))) ORDER BY LIKELIHOOD(DISTINCT ((t1.c0) IS FALSE), ((0.8157254234574315) NOT BETWEEN (t1.c0) AND (t1.c1))) DESC;
SELECT ALL COUNT(*) FROM t1 NOT INDEXED WHERE (TRIM(DISTINCT t1.c0 COLLATE NOCASE)) ORDER BY CAST(NULL AS INTEGER) DESC  NULLS LAST, (((t1.c1)<(t1.c0)) IN ('-1186337342' COLLATE RTRIM, (t1.c1 IN (t1.c1)))) ASC, (NOT ((((t1.c0, t1.c1, t1.c1, 0.15478424955649261))<((NULL, NULL, t1.c0, t1.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((TRIM(DISTINCT t1.c0 COLLATE NOCASE))AND(t1.c0))) ORDER BY CAST(0.4211954133335213 AS TEXT)  NULLS FIRST, (- (ABS(t1.c0)));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CASE WHEN x'eac312' THEN ((t1.c0) IS FALSE) WHEN ((t1.c0)IS NOT(t1.c0)) THEN t1.c1 COLLATE RTRIM ELSE '' END) ORDER BY 0.07032823781092734 ASC  NULLS LAST, ((t1.c1 IN (t1.c0)) IN (t1.c1)) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((CASE WHEN x'eac312' THEN ((t1.c0) IS FALSE) WHEN ((t1.c0)IS NOT(t1.c0)) THEN t1.c1 COLLATE RTRIM ELSE '' END)AND(((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END) NOT BETWEEN (NULLIF(t1.c0, t1.c1)) AND ((NOT (t1.c0))))))) ORDER BY CASE WHEN ((t1.c1)%(t1.c1)) THEN (t1.c0 IN (t1.c1, t1.c0, t1.c1)) END, CASE WHEN QUOTE(t1.c0) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE (t1.c0 IN (t1.c0)) END LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((+ ('/'))) ORDER BY CASE WHEN ((t1.c1)%(t1.c1)) THEN (t1.c0 IN (t1.c1, t1.c0, t1.c1)) END, CASE WHEN QUOTE(t1.c0) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE (t1.c0 IN (t1.c0)) END LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) IN ()));
SELECT ALL * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) IN ())) ORDER BY NULL ASC, ((t1.c1 COLLATE RTRIM)|(NULL COLLATE BINARY)) LIMIT 0X1 INTERSECT SELECT ALL * FROM t1 WHERE ((+ ((+ (t1.c1))))) ORDER BY NULL ASC, ((t1.c1 COLLATE RTRIM)|(NULL COLLATE BINARY)) LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) IN ()));
SELECT ALL * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) IN ())) ORDER BY NULL ASC, ((t1.c1 COLLATE RTRIM)|(NULL COLLATE BINARY)) LIMIT 0X1 INTERSECT SELECT ALL * FROM t1 WHERE ((+ ((+ (t1.c1))))) ORDER BY NULL ASC, ((t1.c1 COLLATE RTRIM)|(NULL COLLATE BINARY)) LIMIT 1;
SELECT MIN(t1.c1) FROM t1 WHERE ((+ ((((NULL, t1.c1, t1.c0, t1.c0))!=((t1.c0, t1.c0, t1.c0, t1.c1))))));
SELECT MIN(t1.c1) FROM t1 WHERE ((((+ ((((NULL, t1.c1, t1.c0, t1.c0))>((t1.c0, t1.c0, t1.c0, t1.c1))))))AND(((((((t1.c1)AND(t1.c1)))AND(t1.c1)))>=((t1.c0 IN ())))))) INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (CAST(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) AS BLOB));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (json(t1.c1));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (json(t1.c1)) LIMIT 1 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((CAST(t1.c0 AS TEXT)) BETWEEN (((t1.c1)&(t1.c0))) AND (CAST(614579747 AS NUMERIC)))) LIMIT 0x1;
SELECT * FROM t1 WHERE (((((t1.c1)+(t1.c1))) NOT NULL));
SELECT ALL * FROM t1 WHERE (((((((t1.c1)+(t1.c1))) NOT NULL))AND(((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (((t1.c0)>>(t1.c0))) AND (0.5139681680460146))))) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((((((t1.c1)>(t1.c1)), ((t1.c0)AND(t1.c0))))<=((CAST(t1.c0 AS TEXT), (NOT (t1.c0)))))) LIMIT 0;
SELECT * FROM t1 WHERE (((((t1.c1)+(t1.c1))) NOT NULL));
SELECT ALL * FROM t1 WHERE (((((((t1.c1)+(t1.c1))) NOT NULL))AND(((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (((t1.c0)>>(t1.c0))) AND (0.5139681680460146))))) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((((((t1.c1)>(t1.c1)), ((t1.c0)AND(t1.c0))))<=((CAST(t1.c0 AS TEXT), (NOT (t1.c0)))))) LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c1, t1.c1, '0.3060280448537728')) NOT BETWEEN ((((t1.c0)OR(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c1) AND (0.027567541121574224)), ((t1.c0)<<(t1.c0)))) AND (((t1.c0 IN ()), ((t1.c1) NOT NULL), x'08'))));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, t1.c1, '0.3060280448537728')) NOT BETWEEN ((((t1.c0)OR(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c1) AND (0.027567541121574224)), ((t1.c0)<<(t1.c0)))) AND (((t1.c0 IN ()), ((t1.c1) NOT NULL), x'08'))));
SELECT * FROM t1 WHERE ((((t1.c1, t1.c1, '0.3060280448537728')) NOT BETWEEN ((((t1.c0)OR(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c1) AND (0.027567541121574224)), ((t1.c0)<<(t1.c0)))) AND (((t1.c0 IN ()), ((t1.c1) NOT NULL), x'08'))));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, t1.c1, '0.3060280448537728')) NOT BETWEEN ((((t1.c0)OR(t1.c1)), ((t1.c0) NOT BETWEEN (t1.c1) AND (0.027567541121574224)), ((t1.c0)<<(t1.c0)))) AND (((t1.c0 IN ()), ((t1.c1) NOT NULL), x'08'))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (TRIM(t1.c0) COLLATE BINARY) ORDER BY CASE WHEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN (t1.c0 IN (t1.c1)) WHEN CAST(t1.c0 AS INTEGER) THEN ((((t1.c1)AND(t1.c1)))AND(t1.c1)) WHEN t1.c1 THEN (((t1.c1))<=((t1.c0))) WHEN CAST(t1.c1 AS INTEGER) THEN ((t1.c1)>>(t1.c0)) ELSE ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) END ASC;
SELECT MIN(t1.c0) FROM t1 WHERE (TRIM(t1.c0) COLLATE BINARY) ORDER BY 0.05718515696655413 DESC  NULLS LAST, ((((0.737474347798076)>=(t1.c0))) NOT BETWEEN (((t1.c0)-(t1.c1))) AND ((((0.8565749475396017)) BETWEEN ((t1.c1)) AND ((t1.c1)))))  NULLS LAST, COALESCE(SQLITE_COMPILEOPTION_USED(t1.c0), ((x'') BETWEEN (t1.c0) AND (t1.c0)), (((t1.c1, t1.c1, t1.c0))==((t1.c0, t1.c1, t1.c1))), ((t1.c0)<=('-1306408442')))  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c1)OR(((t1.c0) NOT NULL))))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c1 END)));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((t1.c1)OR(((t1.c0) NOT NULL))))OR(CASE t1.c1  WHEN t1.c1 THEN t1.c1 END)))AND(CASE t1.c1 COLLATE NOCASE  WHEN CASE WHEN t1.c1 THEN t1.c1 END THEN CASE t1.c1  WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE x'2f' END WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 END THEN LIKELIHOOD(t1.c1, t1.c0) END))) INTERSECT SELECT MIN(t1.c1) FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))|(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)));
SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c1) NOTNULL)) ISNULL)) ORDER BY (((t1.c1, (t1.c0 IN (t1.c0, t1.c1)), t1.c1))<(((NOT (t1.c0)), ((t1.c0) ISNULL), t1.c0 COLLATE BINARY)));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((t1.c1) NOTNULL)) ISNULL))AND(CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c1 END AS INTEGER)))) ORDER BY (((t1.c1, (t1.c0 IN (t1.c0, t1.c1)), t1.c1))<(((NOT (t1.c0)), ((t1.c0) ISNULL), t1.c0 COLLATE BINARY))) LIMIT 0x3 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (CAST((~ (t1.c0)) AS INTEGER)) ORDER BY (((t1.c1, (t1.c0 IN (t1.c0, t1.c1)), t1.c1))<(((NOT (t1.c0)), ((t1.c0) ISNULL), t1.c0 COLLATE BINARY))) LIMIT 0X3;
SELECT * FROM t1 WHERE (CASE t1.c1  WHEN t1.c1 THEN TRIM(t1.c0, t1.c1) WHEN t1.c1 THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) THEN ((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) ELSE ((t1.c1)<(t1.c1)) END) ORDER BY ((NULL) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c1 END) AND (((t1.c0)LIKE(t1.c0)))), -6.17936325E8  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE t1.c1  WHEN t1.c1 THEN TRIM(t1.c0, t1.c1) WHEN t1.c1 THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) THEN ((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) ELSE ((t1.c1)<(t1.c1)) END) ORDER BY ((NULL) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c1 END) AND (((t1.c0)LIKE(t1.c0)))), -6.17936325E8  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE ((((- (t1.c0))) IS FALSE)) ORDER BY ((NULL) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c1 END) AND (((t1.c0)LIKE(t1.c0)))), -6.17936325E8  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE t1.c1  WHEN t1.c1 THEN TRIM(t1.c0, t1.c1) WHEN t1.c1 THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) THEN ((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) ELSE ((t1.c1)<(t1.c1)) END) ORDER BY ((NULL) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c1 END) AND (((t1.c0)LIKE(t1.c0)))), -6.17936325E8  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE t1.c1  WHEN t1.c1 THEN TRIM(t1.c0, t1.c1) WHEN t1.c1 THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) THEN ((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) ELSE ((t1.c1)<(t1.c1)) END) ORDER BY ((NULL) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c1 END) AND (((t1.c0)LIKE(t1.c0)))), -6.17936325E8  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE ((((- (t1.c0))) IS FALSE)) ORDER BY ((NULL) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c1 END) AND (((t1.c0)LIKE(t1.c0)))), -6.17936325E8  NULLS FIRST;
SELECT * FROM t1 WHERE (2.067293718E9) ORDER BY (((+ (t1.c1))) NOT BETWEEN (t1.c0) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, CHANGES() DESC;
SELECT DISTINCT * FROM t1 WHERE (((2.067293718E9)AND(((((((t1.c0)AND('
^eR^,M3')))AND(''))) NOT NULL)))) ORDER BY (((+ (t1.c1))) NOT BETWEEN (t1.c0) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, CHANGES() DESC LIMIT 0X3;
SELECT * FROM t1 WHERE (2.067293718E9) ORDER BY (((+ (t1.c1))) NOT BETWEEN (t1.c0) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, CHANGES() DESC;
SELECT DISTINCT * FROM t1 WHERE (((2.067293718E9)AND(((((((t1.c0)AND('
^eR^,M3')))AND(''))) NOT NULL)))) ORDER BY (((+ (t1.c1))) NOT BETWEEN (t1.c0) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, CHANGES() DESC LIMIT 0X3;
SELECT COUNT(*) FROM t1 WHERE (LIKELY(((t1.c1)-(t1.c1)))) ORDER BY (- (((t1.c1)AND(t1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((LIKELY(((t1.c1)-(t1.c1))))AND((((x'c0')IS NOT(t1.c1)) IN ())))) ORDER BY (- (((t1.c1)AND(t1.c0))))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT COUNT(*) FROM t1 WHERE (load_extension(((t1.c0)<(0.9366707959460312)), ((t1.c0)>=(t1.c1)))) ORDER BY (- (((t1.c1)AND(t1.c0))))  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c1)||(t1.c1)) THEN CASE WHEN t1.c1 THEN 0.7343902284018096 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END WHEN (t1.c0 IN (t1.c0)) THEN t1.c1 COLLATE RTRIM WHEN (NULL IN (t1.c0)) THEN ((t1.c0) ISNULL) WHEN IFNULL(t1.c0, t1.c0) THEN '-1696962722' WHEN IFNULL(t1.c0, t1.c1) THEN ((t1.c0) NOT NULL) WHEN UNLIKELY(DISTINCT t1.c1) THEN CAST(0x79268937 AS REAL) END);
SELECT * FROM t1 WHERE (CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c1)||(t1.c1)) THEN CASE WHEN t1.c1 THEN 0.7343902284018096 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END WHEN (t1.c0 IN (t1.c0)) THEN t1.c1 COLLATE RTRIM WHEN (NULL IN (t1.c0)) THEN ((t1.c0) ISNULL) WHEN IFNULL(t1.c0, t1.c0) THEN '-1696962722' WHEN IFNULL(t1.c0, t1.c1) THEN ((t1.c0) NOT NULL) WHEN UNLIKELY(DISTINCT t1.c1) THEN CAST(2032568631 AS REAL) END);
SELECT * FROM t1 WHERE (CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c1)||(t1.c1)) THEN CASE WHEN t1.c1 THEN 0.7343902284018096 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END WHEN (t1.c0 IN (t1.c0)) THEN t1.c1 COLLATE RTRIM WHEN (NULL IN (t1.c0)) THEN ((t1.c0) ISNULL) WHEN IFNULL(t1.c0, t1.c0) THEN '-1696962722' WHEN IFNULL(t1.c0, t1.c1) THEN ((t1.c0) NOT NULL) WHEN UNLIKELY(DISTINCT t1.c1) THEN CAST(0x79268937 AS REAL) END);
SELECT * FROM t1 WHERE (CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c1)||(t1.c1)) THEN CASE WHEN t1.c1 THEN 0.7343902284018096 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END WHEN (t1.c0 IN (t1.c0)) THEN t1.c1 COLLATE RTRIM WHEN (NULL IN (t1.c0)) THEN ((t1.c0) ISNULL) WHEN IFNULL(t1.c0, t1.c0) THEN '-1696962722' WHEN IFNULL(t1.c0, t1.c1) THEN ((t1.c0) NOT NULL) WHEN UNLIKELY(DISTINCT t1.c1) THEN CAST(2032568631 AS REAL) END);
SELECT COUNT(*) FROM t1 WHERE (((+ (t1.c0)) IN (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END, ((t1.c1) NOTNULL)))) ORDER BY CAST((('r&ꤍYtH')>>(t1.c0)) AS NUMERIC);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((+ (t1.c0)) IN (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)))AND(((((((((CASE t1.c1  WHEN t1.c1 THEN x'b6' WHEN t1.c0 THEN t1.c1 END)OR((((t1.c1))<>((t1.c0))))))OR(((t1.c1)||(t1.c0)))))OR(0.30354625495983567)))OR((NOT (t1.c0))))))) ORDER BY CAST((('r&ꤍYtH')>>(t1.c0)) AS NUMERIC) LIMIT 1;
SELECT * FROM t1 WHERE (LIKELY(DISTINCT ((((((((t1.c0)OR('?]ToﾰgRX')))OR(t1.c0)))OR(t1.c1)))OR(t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (LIKELY(DISTINCT ((((((((t1.c0)OR('?]ToﾰgRX')))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))) ORDER BY x'67ad', ((((('1497940591')>(t1.c1)), ((t1.c1)LIKE(t1.c0)), ((t1.c0)%(t1.c1))))==((LIKELY(0.2582657614070164), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))) ASC;
SELECT * FROM t1 WHERE (LIKELY(DISTINCT ((((((((t1.c0)OR('?]ToﾰgRX')))OR(t1.c0)))OR(t1.c1)))OR(t1.c0))));
SELECT DISTINCT * FROM t1 WHERE (LIKELY(DISTINCT ((((((((t1.c0)OR('?]ToﾰgRX')))OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))) ORDER BY x'67ad', ((((('1497940591')>(t1.c1)), ((t1.c1)LIKE(t1.c0)), ((t1.c0)%(t1.c1))))==((LIKELY(0.2582657614070164), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))) ASC;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (COALESCE(DISTINCT t1.c1 COLLATE NOCASE, t1.c1 COLLATE NOCASE, ((t1.c0) IS TRUE), ((((t1.c1)AND(t1.c1)))OR(t1.c1)))) ORDER BY CASE WHEN t1.c1 THEN CAST(t1.c1 AS REAL) ELSE 'm
' END  NULLS LAST, CAST(CAST(t1.c1 AS BLOB) AS INTEGER)  NULLS FIRST, CASE ((t1.c1) NOTNULL)  WHEN t1.c0 COLLATE NOCASE THEN ((t1.c0)&(t1.c0)) WHEN LOWER(DISTINCT t1.c1) THEN CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END END DESC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((COALESCE(DISTINCT t1.c1 COLLATE NOCASE, t1.c1 COLLATE NOCASE, ((t1.c0) IS TRUE), ((((t1.c1)AND(t1.c1)))OR(t1.c1))))AND((('V1㣢n9Uu')-(((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))))) ORDER BY CASE WHEN t1.c1 THEN CAST(t1.c1 AS REAL) ELSE 'm
' END  NULLS LAST, CAST(CAST(t1.c1 AS BLOB) AS INTEGER)  NULLS FIRST, CASE ((t1.c1) NOTNULL)  WHEN t1.c0 COLLATE NOCASE THEN ((t1.c0)&(t1.c0)) WHEN LOWER(DISTINCT t1.c1) THEN CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END END DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (COALESCE(DISTINCT ((((t1.c0)OR(t1.c1)))AND(t1.c0)), t1.c1 COLLATE NOCASE)) ORDER BY TYPEOF(x'8f'), CAST(t1.c1 AS TEXT) COLLATE NOCASE ASC, (+ ((t1.c1 IN (t1.c1))));
SELECT * FROM t1 WHERE (COALESCE(DISTINCT ((((t1.c0)OR(t1.c1)))AND(t1.c0)), t1.c1 COLLATE NOCASE)) ORDER BY TYPEOF(x'8f'), CAST(t1.c1 AS TEXT) COLLATE NOCASE ASC, (+ ((t1.c1 IN (t1.c1)))) LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE (CAST(GLOB(t1.c0, t1.c1) AS REAL)) ORDER BY TYPEOF(x'8f'), CAST(t1.c1 AS TEXT) COLLATE NOCASE ASC, (+ ((t1.c1 IN (t1.c1)))) LIMIT 0;
SELECT * FROM t1 WHERE (COALESCE(DISTINCT ((((t1.c0)OR(t1.c1)))AND(t1.c0)), t1.c1 COLLATE NOCASE)) ORDER BY TYPEOF(x'8f'), CAST(t1.c1 AS TEXT) COLLATE NOCASE ASC, (+ ((t1.c1 IN (t1.c1))));
SELECT * FROM t1 WHERE (COALESCE(DISTINCT ((((t1.c0)OR(t1.c1)))AND(t1.c0)), t1.c1 COLLATE NOCASE)) ORDER BY TYPEOF(x'8f'), CAST(t1.c1 AS TEXT) COLLATE NOCASE ASC, (+ ((t1.c1 IN (t1.c1)))) LIMIT 0X0 INTERSECT SELECT * FROM t1 WHERE (CAST(GLOB(t1.c0, t1.c1) AS REAL)) ORDER BY TYPEOF(x'8f'), CAST(t1.c1 AS TEXT) COLLATE NOCASE ASC, (+ ((t1.c1 IN (t1.c1)))) LIMIT 0;
SELECT MIN(t1.c1) FROM t1 WHERE ((- (((t1.c1)GLOB(t1.c0)))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((- (((t1.c1)GLOB(t1.c0)))))AND((((+ (t1.c1)))>(json_insert(t1.c0, t1.c1, '	XyM5', t1.c0, t1.c0)))))) ORDER BY (((((((t1.c1)AND(t1.c0)))AND(t1.c1)), NULLIF(t1.c1, t1.c0)))>((((((t1.c0)AND(t1.c1)))AND(t1.c0)), ('{5i}*G?' IN (t1.c0, t1.c1))))) DESC, ((((t1.c0) IS TRUE))>=(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST, (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1 COLLATE BINARY, ((t1.c0)%(t1.c1)))) AND ((t1.c1 COLLATE RTRIM, CAST(t1.c0 AS TEXT))));
SELECT * FROM t1 WHERE (((((((t1.c0)OR(t1.c1)))AND(t1.c1)))IS NOT(((('503203198'))<=(('0.6517050205833143'))))));
SELECT * FROM t1 WHERE (((((((t1.c0)OR(t1.c1)))AND(t1.c1)))IS NOT(((('503203198'))<=(('0.6517050205833143')))))) LIMIT 0x0 INTERSECT SELECT ALL * FROM t1 WHERE ((+ (((t1.c0)||(t1.c0))))) LIMIT 0X0;
SELECT * FROM t1 WHERE (((((((t1.c0)OR(t1.c1)))AND(t1.c1)))IS NOT(((('503203198'))<=(('0.6517050205833143'))))));
SELECT * FROM t1 WHERE (((((((t1.c0)OR(t1.c1)))AND(t1.c1)))IS NOT(((('503203198'))<=(('0.6517050205833143')))))) LIMIT 0x0 INTERSECT SELECT ALL * FROM t1 WHERE ((+ (((t1.c0)||(t1.c0))))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ()))>(t1.c1 COLLATE BINARY))) ORDER BY CASE WHEN ((((((((t1.c1)AND('1418587284')))OR(x'8a')))OR(t1.c0)))OR('2067293718')) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) END, (NOT ((+ (t1.c0)))), ((((ABS(t1.c1))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(CAST(t1.c1 AS NUMERIC)));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 IN ()))>(t1.c1 COLLATE BINARY)))AND(((((t1.c1) BETWEEN (t1.c0) AND ('0.06389991955429708'))) NOTNULL)))) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)<<(CAST(t1.c1 AS NUMERIC)))  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ()))>(t1.c1 COLLATE BINARY))) ORDER BY CASE WHEN ((((((((t1.c1)AND('1418587284')))OR(x'8a')))OR(t1.c0)))OR('2067293718')) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) END, (NOT ((+ (t1.c0)))), ((((ABS(t1.c1))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(CAST(t1.c1 AS NUMERIC)));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 IN ()))>(t1.c1 COLLATE BINARY)))AND(((((t1.c1) BETWEEN (t1.c0) AND ('0.06389991955429708'))) NOTNULL)))) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)<<(CAST(t1.c1 AS NUMERIC)))  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE ((((t1.c0)OR('-415052413')) IN (t1.c0))) ORDER BY CAST(((t1.c0)%(t1.c0)) AS INTEGER) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)OR('-415052413')) IN (t1.c0)))AND((((((t1.c0))!=((t1.c0)))) NOT BETWEEN (((t1.c1) IS TRUE)) AND (CAST(t1.c0 AS TEXT)))))) ORDER BY UPPER(DISTINCT CAST(t1.c1 AS REAL)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END) BETWEEN (COALESCE(t1.c0, t1.c0)) AND (((t1.c1) NOT NULL)))) ORDER BY UPPER(DISTINCT CAST(t1.c1 AS REAL)) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c0)OR('-415052413')) IN (t1.c0))) ORDER BY CAST(((t1.c0)%(t1.c0)) AS INTEGER) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)OR('-415052413')) IN (t1.c0)))AND((((((t1.c0))!=((t1.c0)))) NOT BETWEEN (((t1.c1) IS TRUE)) AND (CAST(t1.c0 AS TEXT)))))) ORDER BY UPPER(DISTINCT CAST(t1.c1 AS REAL)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END) BETWEEN (COALESCE(t1.c0, t1.c0)) AND (((t1.c1) NOT NULL)))) ORDER BY UPPER(DISTINCT CAST(t1.c1 AS REAL)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE x''  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)<(NULLIF(t1.c1, t1.c1))));
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE x''  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)<(NULLIF(t1.c1, t1.c1)))) LIMIT 0x3 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((((+ (t1.c0)))-(((t1.c0)LIKE('gg84䟏
'))))) LIMIT 3;
SELECT MAX(t1.c0) FROM t1 WHERE (((NULL) NOT BETWEEN (LIKELIHOOD(DISTINCT t1.c1, t1.c0)) AND (DATETIME(-2130733186, t1.c0, t1.c0, t1.c1, t1.c1, t1.c0)))) ORDER BY (NOT (t1.c1)) COLLATE NOCASE ASC  NULLS FIRST, ((0x24b6e334) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))) IS TRUE) DESC  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE (((NULL) NOT BETWEEN (LIKELIHOOD(DISTINCT t1.c1, t1.c0)) AND (DATETIME(0xffffffff80ff977e, t1.c0, t1.c0, t1.c1, t1.c1, t1.c0)))) ORDER BY (NOT (t1.c1)) COLLATE NOCASE ASC  NULLS FIRST, ((0X24b6e334) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0))) IS TRUE) DESC  NULLS LAST LIMIT 0X0;
SELECT MIN(t1.c1) FROM t1 WHERE ((((('6	抨vI')OR((((t1.c0, '+gz''p', '1480138079')) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c1))))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY 0X751b7112 DESC  NULLS LAST, ABS(DISTINCT t1.c1) ASC  NULLS LAST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((('6	抨vI')OR((((t1.c0, '+gz''p', '1480138079')) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c1))))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (CAST(x'16' AS INTEGER)) AND (CAST(t1.c1 AS NUMERIC))), ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)IS NOT((+ (t1.c1)))) INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (LTRIM(TRIM(DISTINCT t1.c0), (NOT (t1.c0)))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (CAST(x'16' AS INTEGER)) AND (CAST(t1.c1 AS NUMERIC))), ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)IS NOT((+ (t1.c1))));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((LIKELIHOOD(t1.c0, t1.c1))OR(((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1))))) ORDER BY t1.c0, CASE ((((t1.c1)OR(t1.c0)))AND(x'5d'))  WHEN ((t1.c1)>>('1041810244')) THEN ((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c1)) WHEN ((t1.c1)LIKE(t1.c0)) THEN (((t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, t1.c1))) ELSE 'c淧' END, (((((t1.c1))>((t1.c0))))=(((t1.c0) NOTNULL))) ASC;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((LIKELIHOOD(t1.c0, t1.c1))OR(((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1))))) ORDER BY (((325164616, CAST(t1.c0 AS BLOB), CAST(t1.c0 AS INTEGER)))>((CASE t1.c1  WHEN t1.c1 THEN 0xfffffffff0f37508 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, t1.c1, ((((((t1.c0)OR(t1.c1)))OR(NULL)))AND(t1.c0))))) LIMIT 0;
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c0)<<(t1.c0))) NOT NULL));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((t1.c0)<<(t1.c0))) NOT NULL));
SELECT ALL * FROM t1 WHERE (((t1.c0)==(t1.c0)) COLLATE BINARY) ORDER BY (((((0.3210780500031887))==((t1.c0))))AND(CASE WHEN t1.c0 THEN t1.c0 END))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)==(t1.c0)) COLLATE BINARY) ORDER BY (((((0.3210780500031887))==((t1.c0))))AND(CASE WHEN t1.c0 THEN t1.c0 END))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((t1.c0)==(t1.c0)) COLLATE BINARY) ORDER BY (((((0.3210780500031887))==((t1.c0))))AND(CASE WHEN t1.c0 THEN t1.c0 END))  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0)==(t1.c0)) COLLATE BINARY) ORDER BY (((((0.3210780500031887))==((t1.c0))))AND(CASE WHEN t1.c0 THEN t1.c0 END))  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CHANGES() COLLATE NOCASE);
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CHANGES() COLLATE NOCASE) ORDER BY (+ (TYPEOF(DISTINCT t1.c1)))  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((0.6170019750024001)/(t1.c0 COLLATE NOCASE))) ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE RTRIM DESC, ((t1.c0 IN (t1.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((0.6170019750024001)/(t1.c0 COLLATE NOCASE)))AND(((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) BETWEEN ((~ (t1.c0))) AND ((~ (t1.c0))))))) ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE RTRIM DESC, ((t1.c0 IN (t1.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((0.6170019750024001)/(t1.c0 COLLATE NOCASE))) ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE RTRIM DESC, ((t1.c0 IN (t1.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (CAST(t1.c1 AS INTEGER)) AND (((t1.c1) IS TRUE)))) ORDER BY t1.c1  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (CAST(t1.c1 AS INTEGER)) AND (((t1.c1) IS TRUE)))) ORDER BY ((UPPER(t1.c1))GLOB(t1.c0)) ASC INTERSECT SELECT ALL * FROM t1 WHERE (DATE(((t1.c0) NOT NULL), ((t1.c1)>=(t1.c0)), ((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))) ORDER BY ((UPPER(t1.c1))GLOB(t1.c0)) ASC;
SELECT ALL * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (CAST(t1.c1 AS INTEGER)) AND (((t1.c1) IS TRUE)))) ORDER BY t1.c1  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c1) AND (t1.c0))) BETWEEN (CAST(t1.c1 AS INTEGER)) AND (((t1.c1) IS TRUE)))) ORDER BY ((UPPER(t1.c1))GLOB(t1.c0)) ASC INTERSECT SELECT ALL * FROM t1 WHERE (DATE(((t1.c0) NOT NULL), ((t1.c1)>=(t1.c0)), ((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))) ORDER BY ((UPPER(t1.c1))GLOB(t1.c0)) ASC;
SELECT MAX(t1.c1) FROM t1 WHERE ((~ (((t1.c1)GLOB(t1.c0))))) ORDER BY (((t1.c1) NOTNULL) IN (UNLIKELY(t1.c1), (((NULL, t1.c1, '1408534150', t1.c1))==((t1.c1, t1.c1, t1.c1, t1.c0)))))  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((~ (((t1.c1)GLOB(t1.c0)))))AND((- (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))))) ORDER BY ((((((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))) IS FALSE), CASE WHEN (((t1.c0, -7.42346749E8, t1.c1))<((t1.c0, t1.c0, x''))) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (0.9295779052065367)) THEN 0.7220228195055235 END  NULLS FIRST, ((CAST(t1.c0 AS INTEGER)) NOT BETWEEN (((NULL) ISNULL)) AND ((t1.c1 IN (t1.c1)))) ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((- (t1.c1))) ORDER BY ((((((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))) IS FALSE), CASE WHEN (((t1.c0, -7.42346749E8, t1.c1))<((t1.c0, t1.c0, x''))) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (0.9295779052065367)) THEN 0.7220228195055235 END  NULLS FIRST, ((CAST(t1.c0 AS INTEGER)) NOT BETWEEN (((NULL) ISNULL)) AND ((t1.c1 IN (t1.c1)))) ASC  NULLS LAST LIMIT 2;
SELECT * FROM t1 WHERE (((((((t1.c1)OR((- (t1.c0)))))OR(((x'')%(t1.c1)))))OR(((t1.c1)==(NULL))))) ORDER BY GLOB((t1.c1 IN (t1.c0)), (t1.c0 IN (t1.c0, t1.c1, t1.c0)))  NULLS FIRST, (((t1.c0))>((t1.c0))) COLLATE NOCASE DESC, ((t1.c1)IS(t1.c1)) COLLATE RTRIM  NULLS FIRST, ((t1.c1)%(t1.c1 COLLATE BINARY));
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1)OR((- (t1.c0)))))OR(((x'')%(t1.c1)))))OR(((t1.c1)=(NULL)))))AND((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND('[l%ka<AeI')))AND(t1.c1)) IN (((t1.c1)*(t1.c0))))))) ORDER BY GLOB((t1.c1 IN (t1.c0)), (t1.c0 IN (t1.c0, t1.c1, t1.c0)))  NULLS FIRST, (((t1.c0))>((t1.c0))) COLLATE NOCASE DESC, ((t1.c1)IS(t1.c1)) COLLATE RTRIM  NULLS FIRST, ((t1.c1)%(t1.c1 COLLATE BINARY)) LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) IS FALSE))>(((t1.c0)!=(t1.c1))))) ORDER BY GLOB((t1.c1 IN (t1.c0)), (t1.c0 IN (t1.c0, t1.c1, t1.c0)))  NULLS FIRST, (((t1.c0))>((t1.c0))) COLLATE NOCASE DESC, ((t1.c1)IS(t1.c1)) COLLATE RTRIM  NULLS FIRST, ((t1.c1)%(t1.c1 COLLATE BINARY)) LIMIT 3;
SELECT * FROM t1 WHERE (((((((t1.c1)OR((- (t1.c0)))))OR(((x'')%(t1.c1)))))OR(((t1.c1)==(NULL))))) ORDER BY GLOB((t1.c1 IN (t1.c0)), (t1.c0 IN (t1.c0, t1.c1, t1.c0)))  NULLS FIRST, (((t1.c0))>((t1.c0))) COLLATE NOCASE DESC, ((t1.c1)IS(t1.c1)) COLLATE RTRIM  NULLS FIRST, ((t1.c1)%(t1.c1 COLLATE BINARY));
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1)OR((- (t1.c0)))))OR(((x'')%(t1.c1)))))OR(((t1.c1)=(NULL)))))AND((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND('[l%ka<AeI')))AND(t1.c1)) IN (((t1.c1)*(t1.c0))))))) ORDER BY GLOB((t1.c1 IN (t1.c0)), (t1.c0 IN (t1.c0, t1.c1, t1.c0)))  NULLS FIRST, (((t1.c0))>((t1.c0))) COLLATE NOCASE DESC, ((t1.c1)IS(t1.c1)) COLLATE RTRIM  NULLS FIRST, ((t1.c1)%(t1.c1 COLLATE BINARY)) LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) IS FALSE))>(((t1.c0)!=(t1.c1))))) ORDER BY GLOB((t1.c1 IN (t1.c0)), (t1.c0 IN (t1.c0, t1.c1, t1.c0)))  NULLS FIRST, (((t1.c0))>((t1.c0))) COLLATE NOCASE DESC, ((t1.c1)IS(t1.c1)) COLLATE RTRIM  NULLS FIRST, ((t1.c1)%(t1.c1 COLLATE BINARY)) LIMIT 3;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((NULL)|((t1.c0 IN ()))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((NULL)|((t1.c0 IN ()))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c0 END COLLATE RTRIM))) INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((t1.c0)OR(t1.c1)))AND((t1.c0 IN (t1.c1)))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT MAX(t1.c1) FROM t1 WHERE ((~ (((t1.c0) IS FALSE)))) ORDER BY json_type((NOT (t1.c1)))  NULLS LAST, x''  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((~ (((t1.c0) IS FALSE))))AND(((-2100187223)==(((t1.c0)==(x'21'))))))) ORDER BY json_type((NOT (t1.c1)))  NULLS LAST, x''  NULLS LAST INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ('-1671112748') ORDER BY json_type((NOT (t1.c1)))  NULLS LAST, x''  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (LIKELIHOOD(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), t1.c1));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (LIKELIHOOD(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), t1.c1));
SELECT MIN(t1.c0) FROM t1 WHERE (0.13221803126461995);
SELECT MIN(t1.c0) FROM t1 WHERE (((0.13221803126461995)AND(CAST(CAST(t1.c0 AS REAL) AS INTEGER)))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY ((UPPER(t1.c0)) ISNULL), NULL ASC;
SELECT * FROM t1 WHERE (((t1.c0)AND((((((t1.c0, t1.c0, '', NULL, t1.c0)) NOT BETWEEN ((t1.c0, x'', t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c0, t1.c0, t1.c0)))) NOT BETWEEN ('' COLLATE NOCASE) AND ((t1.c1 IN (t1.c1))))))) ORDER BY ((UPPER(t1.c0)) ISNULL), NULL ASC LIMIT 3;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY ((UPPER(t1.c0)) ISNULL), NULL ASC;
SELECT * FROM t1 WHERE (((t1.c0)AND((((((t1.c0, t1.c0, '', NULL, t1.c0)) NOT BETWEEN ((t1.c0, x'', t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, t1.c0, t1.c0, t1.c0)))) NOT BETWEEN ('' COLLATE NOCASE) AND ((t1.c1 IN (t1.c1))))))) ORDER BY ((UPPER(t1.c0)) ISNULL), NULL ASC LIMIT 3;
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((~ (t1.c1)))));
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE ((+ ((~ (t1.c1))))) ORDER BY ((PRINTF(t1.c0, 0.6011081490645616))<=((t1.c0 IN (t1.c0, t1.c0)))) DESC, (((t1.c0 IN ()))%(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)) ASC  NULLS LAST, IFNULL(DISTINCT ((t1.c1)==(t1.c0)), (t1.c0 IN ())) DESC LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((((t1.c1, ((t1.c1)||(t1.c1)), ((t1.c0)<(t1.c0))))<((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1)), '184791928', ((((((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0))))));
SELECT ALL * FROM t1 WHERE ((((t1.c1, ((t1.c1)||(t1.c1)), ((t1.c0)<(t1.c0))))<((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1)), '184791928', ((((((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE ((((t1.c1, ((t1.c1)||(t1.c1)), ((t1.c0)<(t1.c0))))<((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1)), '184791928', ((((((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0))))));
SELECT ALL * FROM t1 WHERE ((((t1.c1, ((t1.c1)||(t1.c1)), ((t1.c0)<(t1.c0))))<((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1)), '184791928', ((((((((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))))) LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1 IN ()))>((~ (t1.c0))))) ORDER BY ((((t1.c1) NOT NULL)) ISNULL) DESC  NULLS LAST, t1.c0 ASC  NULLS LAST, ((((t1.c1, t1.c0, '1727310088', x'33'))<>((t1.c1, t1.c1, t1.c1, t1.c0))) IN (((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c1 IN ()))>((~ (t1.c0)))))AND(((((t1.c0)-(t1.c1)))&((('0.19149385225249038')LIKE(t1.c1))))))) ORDER BY ((((t1.c1) NOT NULL)) ISNULL) DESC  NULLS LAST, t1.c0 ASC  NULLS LAST, ((((t1.c1, t1.c0, '1727310088', x'33'))<>((t1.c1, t1.c1, t1.c1, t1.c0))) IN (((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (0.1845194361977014) ORDER BY ((((t1.c1) NOT NULL)) ISNULL) DESC  NULLS LAST, t1.c0 ASC  NULLS LAST, ((((t1.c1, t1.c0, '1727310088', x'33'))<>((t1.c1, t1.c1, t1.c1, t1.c0))) IN (((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c0, '', t1.c1))))<<(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)));
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c0, '', t1.c1))))<<(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))) ORDER BY ((NULL) NOT BETWEEN (x'd10e55') AND (x'9d65')) ASC INTERSECT SELECT * FROM t1 WHERE ((((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))>=((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-1769118976' WHEN t1.c0 THEN 0.10042773442701436 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))) ORDER BY ((NULL) NOT BETWEEN (x'd10e55') AND (x'9d65')) ASC;
SELECT * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c0, '', t1.c1))))<<(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)));
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c0, '', t1.c1))))<<(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))) ORDER BY ((NULL) NOT BETWEEN (x'd10e55') AND (x'9d65')) ASC INTERSECT SELECT * FROM t1 WHERE ((((((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))>=((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-1769118976' WHEN t1.c0 THEN 0.10042773442701436 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)))) ORDER BY ((NULL) NOT BETWEEN (x'd10e55') AND (x'9d65')) ASC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (x'5b') ORDER BY CAST('202366642' AS BLOB) DESC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (x'5b') ORDER BY CAST(CASE NULL  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END AS INTEGER)  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1 WHERE (((0.019648008619244983)||(CAST(t1.c0 AS NUMERIC)))) ORDER BY CASE WHEN (~ (NULL)) THEN NULL WHEN t1.c1 COLLATE RTRIM THEN '1708562132' ELSE ((0.6232839210632849) NOT NULL) END DESC, json_insert(NULL, '270520835', ((((NULL)OR(0.4743531492030493)))AND(t1.c1)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) DESC;
SELECT MIN(t1.c1) FROM t1 WHERE (((0.019648008619244983)||(CAST(t1.c0 AS NUMERIC)))) ORDER BY CASE WHEN (~ (NULL)) THEN NULL WHEN t1.c1 COLLATE RTRIM THEN '1708562132' ELSE ((0.6232839210632849) NOT NULL) END DESC, json_insert(NULL, '270520835', ((((NULL)OR(0.4743531492030493)))AND(t1.c1)), ((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) DESC LIMIT 3;
SELECT ALL COUNT(*) FROM t1 WHERE (LIKELIHOOD(DISTINCT t1.c0, t1.c0) COLLATE RTRIM) ORDER BY ((((t1.c1)==(t1.c1)))+('2075748087')) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (LIKELIHOOD(DISTINCT t1.c0, t1.c0) COLLATE RTRIM) ORDER BY ((((t1.c1)=(t1.c1)))+('2075748087')) ASC  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((((((((- (t1.c0)))OR(((t1.c0)+(t1.c0)))))OR((t1.c0 IN (t1.c1, x'96')))))OR(t1.c0 COLLATE RTRIM))) ORDER BY json_insert(((t1.c0) IS FALSE), ((NULL)-(t1.c1)), ((((((NULL)AND(t1.c1)))OR(t1.c0)))OR(t1.c0)), TRIM(t1.c0), ((t1.c0) NOTNULL), (NOT (t1.c1)), CAST(NULL AS BLOB)) ASC;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((((- (t1.c0)))OR(((t1.c0)+(t1.c0)))))OR((t1.c0 IN (t1.c1)))))OR(t1.c0 COLLATE RTRIM))) ORDER BY json_insert(((t1.c0) IS FALSE), ((NULL)-(t1.c1)), ((((((NULL)AND(t1.c1)))OR(t1.c0)))OR(t1.c0)), TRIM(t1.c0), ((t1.c0) NOTNULL), (NOT (t1.c1)), CAST(NULL AS BLOB)) ASC;
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)>>(x'12'))) ORDER BY (((t1.c0)) NOT BETWEEN ((CASE WHEN t1.c1 THEN '1989149162' WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((((t1.c0)&(t1.c0)))))  NULLS FIRST, (((t1.c1, t1.c1)) BETWEEN ((NULLIF(t1.c1, t1.c0), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))) AND ((((t1.c0)>=(t1.c1)), COALESCE(t1.c1, t1.c1, t1.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)>>(x'12')))AND(((CAST('1083185990' AS BLOB))||((((x'df'))>((t1.c0)))))))) ORDER BY NULL DESC, CASE WHEN (+ (t1.c1)) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE 0.9966921437401391 END WHEN '999932559' THEN t1.c0 COLLATE BINARY WHEN ((t1.c1) NOT NULL) THEN t1.c1 COLLATE BINARY WHEN ((((0X17044abc)OR(t1.c0)))OR(t1.c1)) THEN CAST(t1.c0 AS INTEGER) ELSE (- (t1.c1)) END  NULLS LAST, CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END COLLATE BINARY ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)>>(x'12'))) ORDER BY (((t1.c0)) NOT BETWEEN ((CASE WHEN t1.c1 THEN '1989149162' WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((((t1.c0)&(t1.c0)))))  NULLS FIRST, (((t1.c1, t1.c1)) BETWEEN ((NULLIF(t1.c1, t1.c0), ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))) AND ((((t1.c0)>=(t1.c1)), COALESCE(t1.c1, t1.c1, t1.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)>>(x'12')))AND(((CAST('1083185990' AS BLOB))||((((x'df'))>((t1.c0)))))))) ORDER BY NULL DESC, CASE WHEN (+ (t1.c1)) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE 0.9966921437401391 END WHEN '999932559' THEN t1.c0 COLLATE BINARY WHEN ((t1.c1) NOT NULL) THEN t1.c1 COLLATE BINARY WHEN ((((0X17044abc)OR(t1.c0)))OR(t1.c1)) THEN CAST(t1.c0 AS INTEGER) ELSE (- (t1.c1)) END  NULLS LAST, CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END COLLATE BINARY ASC  NULLS LAST LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END COLLATE BINARY) LIMIT 0x1;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c0)<<(t1.c1)) THEN ((t1.c0)LIKE(t1.c0)) WHEN (((t1.c0))<>((0.7863956397375501))) THEN CAST(t1.c1 AS TEXT) END) ORDER BY CASE WHEN ((((t1.c0)OR(x'43')))OR(t1.c1)) THEN json_patch(t1.c0, t1.c1) WHEN (((t1.c0))<>((t1.c0))) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) WHEN ((t1.c0) IS TRUE) THEN t1.c1 COLLATE NOCASE END  NULLS FIRST, ((CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)>(((t1.c0)IS NOT(x'5c')))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((CASE WHEN ((t1.c0)<<(t1.c1)) THEN ((t1.c0)LIKE(t1.c0)) WHEN (((t1.c0))<>((0.7863956397375501))) THEN CAST(t1.c1 AS TEXT) END)AND(TYPEOF(DISTINCT 0.5260001406736047)))) ORDER BY ((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(NULL))) IS FALSE) ASC INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((~ ((((t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0)))))) ORDER BY ((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))AND(NULL))) IS FALSE) ASC;
SELECT MAX(t1.c1) FROM t1 WHERE (((((((((LIKELY(t1.c1))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))AND(((t1.c0)||(t1.c1)))))OR(((t1.c1) NOTNULL))))AND(((t1.c0)&(0.31577350969461737)))));
SELECT MAX(t1.c1) FROM t1 WHERE (((((((((((LIKELY(t1.c1))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))AND(((t1.c0)||(t1.c1)))))OR(((t1.c1) NOTNULL))))AND(((t1.c0)&(0.31577350969461737)))))AND(((((t1.c1)LIKE(t1.c1)))>=(((t1.c1) IS FALSE))))));
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS BLOB)) NOT NULL));
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c1 AS BLOB)) NOT NULL)) ORDER BY CASE x'e6f6'  WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN CAST(t1.c1 AS BLOB) WHEN t1.c1 COLLATE NOCASE THEN ((t1.c1)LIKE(t1.c1)) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN 'ttml' THEN t1.c1 ELSE t1.c0 END THEN -1325429286 ELSE ((t1.c1)>>(t1.c1)) END ASC;
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS BLOB)) NOT NULL));
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c1 AS BLOB)) NOT NULL)) ORDER BY CASE x'e6f6'  WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN CAST(t1.c1 AS BLOB) WHEN t1.c1 COLLATE NOCASE THEN ((t1.c1)LIKE(t1.c1)) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN 'ttml' THEN t1.c1 ELSE t1.c0 END THEN -1325429286 ELSE ((t1.c1)>>(t1.c1)) END ASC;
SELECT * FROM t1 WHERE (((((NULL)-(t1.c0)))>(((0.2469645466007473)GLOB(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((NULL)-(t1.c0)))>(((0.2469645466007473)GLOB(t1.c1)))))AND(CASE DATETIME(t1.c1, t1.c0, t1.c0, t1.c0)  WHEN NULL THEN ((t1.c0)OR(NULL)) WHEN CAST(t1.c1 AS BLOB) THEN t1.c1 COLLATE RTRIM WHEN ((t1.c1) IS TRUE) THEN ((t1.c1) NOT BETWEEN (536044823) AND (NULL)) END))) ORDER BY (- (((t1.c0)>=(t1.c0))))  NULLS FIRST;
SELECT * FROM t1 WHERE (((((NULL)-(t1.c0)))>(((0.2469645466007473)GLOB(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((((NULL)-(t1.c0)))>(((0.2469645466007473)GLOB(t1.c1)))))AND(CASE DATETIME(t1.c1, t1.c0, t1.c0, t1.c0)  WHEN NULL THEN ((t1.c0)OR(NULL)) WHEN CAST(t1.c1 AS BLOB) THEN t1.c1 COLLATE RTRIM WHEN ((t1.c1) IS TRUE) THEN ((t1.c1) NOT BETWEEN (536044823) AND (NULL)) END))) ORDER BY (- (((t1.c0)>=(t1.c0))))  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) IN ()));
SELECT * FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) IN ())) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1))))<(UPPER(DISTINCT x'')))) LIMIT 0x0;
SELECT * FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) IN ()));
SELECT * FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) IN ())) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1))))<(UPPER(DISTINCT x'')))) LIMIT 0x0;
SELECT MIN(t1.c0) FROM t1 WHERE ((((((t1.c0)OR(t1.c1)))OR(t1.c1)) IN (x'a4')));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((((t1.c0)OR(t1.c1)))OR(t1.c1)) IN (x'a4')))AND((NOT ((~ (t1.c1))))))) ORDER BY ((t1.c0 COLLATE BINARY)&(((((t1.c1)AND(t1.c1)))AND(t1.c1)))) DESC, NULL DESC;
SELECT MIN(t1.c1) FROM t1 WHERE (((IFNULL(DISTINCT t1.c1, t1.c1)) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))) ORDER BY t1.c0, (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) IN (t1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1 WHERE (((IFNULL(DISTINCT t1.c1, t1.c1)) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (CASE t1.c0  WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))) ORDER BY ')' ASC  NULLS LAST INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((((((t1.c0)>=(t1.c1)))OR(((((((((((t1.c0)AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(0.9315948971410385)))AND(t1.c0)))))AND((t1.c1 IN (0.19485832994356478)))))OR(((((((t1.c1)AND(t1.c0)))OR(0Xffffffffbab67b86)))OR(t1.c0))))) ORDER BY ')' ASC  NULLS LAST;
SELECT * FROM t1 WHERE ((- (CAST(t1.c1 AS NUMERIC))));
SELECT DISTINCT * FROM t1 WHERE ((((- (CAST(t1.c1 AS NUMERIC))))AND(((((t1.c0)<<(t1.c1))) NOT BETWEEN (((t1.c1)<=(t1.c0))) AND ((NOT ('715179311')))))));
SELECT * FROM t1 WHERE ((- (CAST(t1.c1 AS NUMERIC))));
SELECT DISTINCT * FROM t1 WHERE ((((- (CAST(t1.c1 AS NUMERIC))))AND(((((t1.c0)<<(t1.c1))) NOT BETWEEN (((t1.c1)<=(t1.c0))) AND ((NOT ('715179311')))))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((NOT (t1.c1))) IS TRUE));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((NOT (t1.c1))) IS TRUE)) ORDER BY CAST(t1.c0 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST, LOWER(((t1.c1)||(t1.c0))), CASE WHEN ((t1.c0) NOT NULL) THEN (('') IS TRUE) END ASC  NULLS FIRST LIMIT 0x2 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (0X3aaf0a2) ORDER BY CAST(t1.c0 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST, LOWER(((t1.c1)||(t1.c0))), CASE WHEN ((t1.c0) NOT NULL) THEN (('') IS TRUE) END ASC  NULLS FIRST LIMIT 0x2;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))) AS INTEGER)) ORDER BY t1.c1  NULLS LAST, ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))) AS INTEGER)) ORDER BY t1.c1  NULLS LAST, ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) NOTNULL)  NULLS LAST INTERSECT SELECT COUNT(*) FROM t1 WHERE (((((t1.c1) ISNULL)) IS FALSE)) ORDER BY t1.c1  NULLS LAST, ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN NULL WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END) NOTNULL)  NULLS LAST;
SELECT * FROM t1 WHERE (NULL) ORDER BY ((x'') BETWEEN (((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(x'c31f4a'))) AND (((t1.c1)%(x'')))) DESC, ((((x'')IS(t1.c1))) NOT NULL) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND(CASE ((t1.c0) IS TRUE)  WHEN ((t1.c0) IS FALSE) THEN ((t1.c1)*(t1.c0)) WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN (~ (t1.c1)) ELSE (t1.c1 IN ()) END))) ORDER BY ((x'') BETWEEN (((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(x'c31f4a'))) AND (((t1.c1)%(x'')))) DESC, ((((x'')IS(t1.c1))) NOT NULL) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, t1.c1)) BETWEEN (((t1.c1 IN ()), (NOT (t1.c1)))) AND ((x'', IFNULL(DISTINCT t1.c1, t1.c1))))) ORDER BY ((x'') BETWEEN (((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(x'c31f4a'))) AND (((t1.c1)%(x'')))) DESC, ((((x'')IS(t1.c1))) NOT NULL) ASC  NULLS LAST LIMIT 0X1;
SELECT * FROM t1 WHERE (NULL) ORDER BY ((x'') BETWEEN (((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(x'c31f4a'))) AND (((t1.c1)%(x'')))) DESC, ((((x'')IS(t1.c1))) NOT NULL) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((NULL)AND(CASE ((t1.c0) IS TRUE)  WHEN ((t1.c0) IS FALSE) THEN ((t1.c1)*(t1.c0)) WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN (~ (t1.c1)) ELSE (t1.c1 IN ()) END))) ORDER BY ((x'') BETWEEN (((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(x'c31f4a'))) AND (((t1.c1)%(x'')))) DESC, ((((x'')IS(t1.c1))) NOT NULL) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, t1.c1)) BETWEEN (((t1.c1 IN ()), (NOT (t1.c1)))) AND ((x'', IFNULL(DISTINCT t1.c1, t1.c1))))) ORDER BY ((x'') BETWEEN (((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)))AND(x'c31f4a'))) AND (((t1.c1)%(x'')))) DESC, ((((x'')IS(t1.c1))) NOT NULL) ASC  NULLS LAST LIMIT 0X1;
SELECT COUNT(*) FROM t1 WHERE (t1.c1);
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (((t1.c1)AND(((t1.c0)-(((t1.c0)LIKE(t1.c0))))))) ORDER BY NULL  NULLS FIRST, ((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0))) NOT NULL), ((t1.c0)<>(t1.c0)) COLLATE NOCASE ASC INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c0)|(t1.c1)))) AND ((((t1.c0)/(t1.c0)))))) ORDER BY NULL  NULLS FIRST, ((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0))) NOT NULL), ((t1.c0)!=(t1.c0)) COLLATE NOCASE ASC;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CASE ((((t1.c0)AND(t1.c0)))AND('1680893587'))  WHEN ((t1.c1) NOT NULL) THEN ABS(DISTINCT t1.c0) WHEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END THEN ((NULL)*(t1.c1)) WHEN (NOT (t1.c0)) THEN ABS(DISTINCT t1.c0) WHEN ((NULL)IS NOT(t1.c1)) THEN CAST(t1.c1 AS TEXT) WHEN t1.c0 THEN (- (t1.c1)) END);
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CASE ((((t1.c0)AND(t1.c0)))AND('1680893587'))  WHEN ((t1.c1) NOT NULL) THEN ABS(DISTINCT t1.c0) WHEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END THEN ((NULL)*(t1.c1)) WHEN (NOT (t1.c0)) THEN ABS(DISTINCT t1.c0) WHEN ((NULL)IS NOT(t1.c1)) THEN CAST(t1.c1 AS TEXT) WHEN t1.c0 THEN (- (t1.c1)) END) ORDER BY ((((x'')LIKE(t1.c0))) NOT BETWEEN (UNLIKELY(DISTINCT t1.c0)) AND ((NOT (t1.c0))))  NULLS FIRST, LIKELIHOOD((t1.c0 IN ()), CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN 0.8637682025390089 THEN t1.c1 ELSE t1.c0 END)  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((((t1.c1)AND((((t1.c0, t1.c0, t1.c1, t1.c0, t1.c1, t1.c0))!=((t1.c0, t1.c0, t1.c1, t1.c1, t1.c0, t1.c1))))))OR(json_array_length(t1.c1))))OR(t1.c0 COLLATE NOCASE)));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((((t1.c1)AND((((t1.c0, t1.c0, t1.c1, t1.c0, t1.c1, t1.c0))<((t1.c0, t1.c0, t1.c1, t1.c1, t1.c0, t1.c1))))))OR(json_array_length(t1.c1))))OR(t1.c0 COLLATE NOCASE))) LIMIT 0 INTERSECT SELECT MAX(t1.c0) FROM t1 WHERE ('-83606605') LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((NULL) IS TRUE)) NOTNULL)) ORDER BY rtreenode(CAST(t1.c0 AS TEXT), CAST(t1.c1 AS REAL)), ((0.9305600471532635)IS(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS FIRST, ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE x'fd43' END) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '-478111748' WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS FIRST, (((t1.c0)) BETWEEN ((json_type(t1.c1))) AND ((((t1.c1)-(t1.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((NULL) IS TRUE)) NOTNULL)) ORDER BY rtreenode(CAST(t1.c0 AS TEXT), CAST(t1.c1 AS REAL)), ((0.9305600471532635)IS(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS FIRST, ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE x'fd43' END) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '-478111748' WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS FIRST, (((t1.c0)) BETWEEN ((json_type(t1.c1))) AND ((((t1.c1)-(t1.c0))))) DESC  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN 0.32720985650680445 THEN t1.c0 END)LIKE((((t1.c0, t1.c1))<((t1.c1, x'')))))) ORDER BY rtreenode(CAST(t1.c0 AS TEXT), CAST(t1.c1 AS REAL)), ((0.9305600471532635)IS(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS FIRST, ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE x'fd43' END) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '-478111748' WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS FIRST, (((t1.c0)) BETWEEN ((json_type(t1.c1))) AND ((((t1.c1)-(t1.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((NULL) IS TRUE)) NOTNULL)) ORDER BY rtreenode(CAST(t1.c0 AS TEXT), CAST(t1.c1 AS REAL)), ((0.9305600471532635)IS(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS FIRST, ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE x'fd43' END) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '-478111748' WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS FIRST, (((t1.c0)) BETWEEN ((json_type(t1.c1))) AND ((((t1.c1)-(t1.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((NULL) IS TRUE)) NOTNULL)) ORDER BY rtreenode(CAST(t1.c0 AS TEXT), CAST(t1.c1 AS REAL)), ((0.9305600471532635)IS(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS FIRST, ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE x'fd43' END) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '-478111748' WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS FIRST, (((t1.c0)) BETWEEN ((json_type(t1.c1))) AND ((((t1.c1)-(t1.c0))))) DESC  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN 0.32720985650680445 THEN t1.c0 END)LIKE((((t1.c0, t1.c1))<((t1.c1, x'')))))) ORDER BY rtreenode(CAST(t1.c0 AS TEXT), CAST(t1.c1 AS REAL)), ((0.9305600471532635)IS(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS FIRST, ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE x'fd43' END) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '-478111748' WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS FIRST, (((t1.c0)) BETWEEN ((json_type(t1.c1))) AND ((((t1.c1)-(t1.c0))))) DESC  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE (UPPER(((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))) ORDER BY 'Q9Y輛';
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((UPPER(((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c0))))AND((TYPEOF(t1.c0) IN (((t1.c0) NOT BETWEEN ('') AND (t1.c0))))))) ORDER BY (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN (((+ (t1.c1)), (- (t1.c0)), ((((t1.c0)OR(-2115898558)))AND(t1.c0)))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c0)+(0.4624947559556666)), ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))))) ASC, ((~ (t1.c1)) IN ((((t1.c1))>((t1.c1)))))  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((json(t1.c0)) ISNULL)) ORDER BY CAST(MIN(t1.c0, t1.c1) AS TEXT) DESC, (+ (t1.c0)) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((json(t1.c0)) ISNULL))AND(((t1.c1) ISNULL) COLLATE NOCASE))) ORDER BY CAST(MIN(t1.c0, t1.c1) AS TEXT) DESC, (+ (t1.c0)) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((json(t1.c0)) ISNULL)) ORDER BY CAST(MIN(t1.c0, t1.c1) AS TEXT) DESC, (+ (t1.c0)) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((json(t1.c0)) ISNULL))AND(((t1.c1) ISNULL) COLLATE NOCASE))) ORDER BY CAST(MIN(t1.c0, t1.c1) AS TEXT) DESC, (+ (t1.c0)) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(t1.c0) FROM t1 NOT INDEXED WHERE (CAST(((t1.c1) NOTNULL) AS NUMERIC)) ORDER BY (((((t1.c1, t1.c0)) NOT BETWEEN (('-523229393', t1.c1)) AND ((x'45', t1.c1))))OR(1.161785472E9)) DESC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (CAST(((t1.c1) NOTNULL) AS NUMERIC)) ORDER BY (((((t1.c1, t1.c0)) NOT BETWEEN (('-523229393', t1.c1)) AND ((x'45', t1.c1))))OR(1.161785472E9)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((NOT (((t1.c1)&(t1.c1))))) ORDER BY (((((t1.c1, t1.c0)) NOT BETWEEN (('-523229393', t1.c1)) AND ((x'45', t1.c1))))OR(1.161785472E9)) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((('[Yfcv^', t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))AND('-944334593')))AND(CAST(t1.c1 AS REAL)))) ORDER BY ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'' ELSE t1.c0 END) NOT BETWEEN ((((t1.c0))>=((t1.c1)))) AND (t1.c0));
SELECT DISTINCT * FROM t1 WHERE (((((((((('[Yfcv^', t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))AND('-944334593')))AND(CAST(t1.c1 AS REAL))))AND(((CASE t1.c1  WHEN 1493585483 THEN t1.c0 ELSE t1.c0 END) BETWEEN (((t1.c1)+(t1.c0))) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c0 END))))) ORDER BY ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'' ELSE t1.c0 END) NOT BETWEEN ((((t1.c0))>=((t1.c1)))) AND (t1.c0)) LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (((((((('[Yfcv^', t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))AND('-944334593')))AND(CAST(t1.c1 AS REAL)))) ORDER BY ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'' ELSE t1.c0 END) NOT BETWEEN ((((t1.c0))>=((t1.c1)))) AND (t1.c0));
SELECT DISTINCT * FROM t1 WHERE (((((((((('[Yfcv^', t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))AND('-944334593')))AND(CAST(t1.c1 AS REAL))))AND(((CASE t1.c1  WHEN 1493585483 THEN t1.c0 ELSE t1.c0 END) BETWEEN (((t1.c1)+(t1.c0))) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c0 END))))) ORDER BY ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'' ELSE t1.c0 END) NOT BETWEEN ((((t1.c0))>=((t1.c1)))) AND (t1.c0)) LIMIT 0x1;
SELECT MIN(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY CASE WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN t1.c1 COLLATE NOCASE WHEN (NOT ('G%HS!EB璖R')) THEN TYPEOF('-1997783105') END ASC  NULLS FIRST, CASE CAST(t1.c1 AS NUMERIC)  WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END THEN ((x'')-(t1.c1)) END  NULLS LAST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY x'', (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN '[5G' THEN 0.8599083378132939 END IN ()) DESC INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)) COLLATE NOCASE) ORDER BY x'', (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN '[5G' THEN 0.8599083378132939 END IN ()) DESC;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CASE t1.c1  WHEN ((t1.c1)/(t1.c1)) THEN CAST(t1.c0 AS INTEGER) WHEN (~ (t1.c0)) THEN CAST(t1.c0 AS INTEGER) END) ORDER BY ((((t1.c0) NOT NULL))AND(((t1.c1)AND(t1.c1))))  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CASE t1.c1  WHEN ((t1.c1)/(t1.c1)) THEN CAST(t1.c0 AS INTEGER) WHEN (~ (t1.c0)) THEN CAST(t1.c0 AS INTEGER) END) ORDER BY ((((t1.c0) NOT NULL))AND(((t1.c1)AND(t1.c1))))  NULLS FIRST INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (TRIM(DISTINCT json_extract(t1.c0, t1.c0, t1.c1, NULL))) ORDER BY ((((t1.c0) NOT NULL))AND(((t1.c1)AND(t1.c1))))  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(((((((((((t1.c0)OR(CAST(t1.c0 AS TEXT))))OR((((t1.c0))>=((t1.c1))))))OR(TRIM(DISTINCT t1.c0))))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))OR((t1.c1 IN (t1.c1))))))) ORDER BY CAST(CAST(t1.c0 AS NUMERIC) AS REAL)  NULLS FIRST, CASE t1.c0  WHEN t1.c0 THEN t1.c0 END COLLATE RTRIM DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((NOT (t1.c0)) IN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY CAST(CAST(t1.c0 AS NUMERIC) AS REAL)  NULLS FIRST, CASE t1.c0  WHEN t1.c0 THEN t1.c0 END COLLATE RTRIM DESC;
SELECT * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(((((((((((t1.c0)OR(CAST(t1.c0 AS TEXT))))OR((((t1.c0))>=((t1.c1))))))OR(TRIM(DISTINCT t1.c0))))OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))OR((t1.c1 IN (t1.c1))))))) ORDER BY CAST(CAST(t1.c0 AS NUMERIC) AS REAL)  NULLS FIRST, CASE t1.c0  WHEN t1.c0 THEN t1.c0 END COLLATE RTRIM DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((NOT (t1.c0)) IN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY CAST(CAST(t1.c0 AS NUMERIC) AS REAL)  NULLS FIRST, CASE t1.c0  WHEN t1.c0 THEN t1.c0 END COLLATE RTRIM DESC;
SELECT ALL * FROM t1 WHERE ((NOT (((((t1.c1)OR(NULL)))OR(t1.c0))))) ORDER BY CASE (x'7c' IN ())  WHEN (((t1.c1))<>((t1.c0))) THEN t1.c0 COLLATE NOCASE ELSE t1.c0 END, ((((+ (t1.c1)), ((t1.c1)&(t1.c1)), ((t1.c0)<<(t1.c1))))<(((NOT (t1.c1)), NULL, t1.c0 COLLATE BINARY))), (((((t1.c0))<=((t1.c0))))-(TRIM(t1.c1, t1.c0)))  NULLS LAST, ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))LIKE(((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(t1.c1))));
SELECT DISTINCT * FROM t1 WHERE ((((NOT (((((t1.c1)OR(NULL)))OR(t1.c0)))))AND((NOT (((t1.c0) NOTNULL)))))) ORDER BY (CAST(t1.c1 AS NUMERIC) IN ()) DESC  NULLS FIRST, ((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))>>(t1.c1 COLLATE BINARY)), (NULL IN ((t1.c0 IN (t1.c0, t1.c1)))), (((t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0)) AND ((NULL, t1.c1))) COLLATE NOCASE LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c0, t1.c1))))=(t1.c0 COLLATE BINARY))) ORDER BY (CAST(t1.c1 AS NUMERIC) IN ()) DESC  NULLS FIRST, ((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))>>(t1.c1 COLLATE BINARY)), (NULL IN ((t1.c0 IN (t1.c0, t1.c1)))), (((t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0)) AND ((NULL, t1.c1))) COLLATE NOCASE LIMIT 1;
SELECT ALL * FROM t1 WHERE ((NOT (((((t1.c1)OR(NULL)))OR(t1.c0))))) ORDER BY CASE (x'7c' IN ())  WHEN (((t1.c1))<>((t1.c0))) THEN t1.c0 COLLATE NOCASE ELSE t1.c0 END, ((((+ (t1.c1)), ((t1.c1)&(t1.c1)), ((t1.c0)<<(t1.c1))))<(((NOT (t1.c1)), NULL, t1.c0 COLLATE BINARY))), (((((t1.c0))<=((t1.c0))))-(TRIM(t1.c1, t1.c0)))  NULLS LAST, ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))LIKE(((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND(t1.c1))));
SELECT DISTINCT * FROM t1 WHERE ((((NOT (((((t1.c1)OR(NULL)))OR(t1.c0)))))AND((NOT (((t1.c0) NOTNULL)))))) ORDER BY (CAST(t1.c1 AS NUMERIC) IN ()) DESC  NULLS FIRST, ((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))>>(t1.c1 COLLATE BINARY)), (NULL IN ((t1.c0 IN (t1.c0, t1.c1)))), (((t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0)) AND ((NULL, t1.c1))) COLLATE NOCASE LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c0, t1.c1))))=(t1.c0 COLLATE BINARY))) ORDER BY (CAST(t1.c1 AS NUMERIC) IN ()) DESC  NULLS FIRST, ((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))>>(t1.c1 COLLATE BINARY)), (NULL IN ((t1.c0 IN (t1.c0, t1.c1)))), (((t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0)) AND ((NULL, t1.c1))) COLLATE NOCASE LIMIT 1;
SELECT ALL * FROM t1 WHERE (CASE (((t1.c1, t1.c0, t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c1, 0.6137474060829725, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c1, t1.c0)))  WHEN CAST(t1.c1 AS REAL) THEN (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0))) WHEN ((t1.c0)<=(t1.c0)) THEN ((t1.c0)-(t1.c1)) WHEN ((t1.c0)>=(t1.c0)) THEN (NULL IN ()) ELSE (NOT (t1.c1)) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE (((t1.c1, t1.c0, t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c1, 0.6137474060829725, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c1, t1.c0)))  WHEN CAST(t1.c1 AS REAL) THEN (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0))) WHEN ((t1.c0)<(t1.c0)) THEN ((t1.c0)-(t1.c1)) WHEN ((t1.c0)>(t1.c0)) THEN (NULL IN ()) ELSE (NOT (t1.c1)) END)AND(IFNULL((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))), CAST(t1.c0 AS REAL))))) LIMIT 1;
SELECT ALL * FROM t1 WHERE (CASE (((t1.c1, t1.c0, t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c1, 0.6137474060829725, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c1, t1.c0)))  WHEN CAST(t1.c1 AS REAL) THEN (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0))) WHEN ((t1.c0)<=(t1.c0)) THEN ((t1.c0)-(t1.c1)) WHEN ((t1.c0)>=(t1.c0)) THEN (NULL IN ()) ELSE (NOT (t1.c1)) END);
SELECT DISTINCT * FROM t1 WHERE (((CASE (((t1.c1, t1.c0, t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c1, 0.6137474060829725, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c1, t1.c0)))  WHEN CAST(t1.c1 AS REAL) THEN (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0))) WHEN ((t1.c0)<(t1.c0)) THEN ((t1.c0)-(t1.c1)) WHEN ((t1.c0)>(t1.c0)) THEN (NULL IN ()) ELSE (NOT (t1.c1)) END)AND(IFNULL((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))), CAST(t1.c0 AS REAL))))) LIMIT 1;
