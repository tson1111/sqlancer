-- Time: 2021/05/19 01:09:31
-- Database: database1
-- Database version: 3.34.0
-- seed value: 1621357771645
PRAGMA case_sensitive_like=ON; -- 1ms;
CREATE TABLE t0 (c0 INT , c1 INTEGER , c2 TEXT , c3 INT , c4 BLOB ); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4, +c5 TEXT , +c6 BLOB ); -- 1ms;
INSERT OR IGNORE INTO rt1(c6, c2, c3, c0, c1, c4) VALUES (x'', '-889508270', 'O_', 0Xffffffffcafb2e52, x'0f', -8.8950827E8); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE -8.8950827E8  WHEN NULL THEN 0.45090362117297056 WHEN '-889508270' THEN x'' END COLLATE NOCASE; -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c2, c5) VALUES (x'32', '-889508270', 0.4292284324645219); -- 1ms;
INSERT OR IGNORE INTO t0(c4, c3, c1, c2, c0) VALUES (x'', 0xffffffffcafb2e52, 0.0032158905941063187, '1333222245', NULL); -- 1ms;
UPDATE OR ROLLBACK t0 SET c2 = 'o_', c4 = 0X59be5920; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c6, c1, c4, c3, c0, c5) VALUES (0x34d01d99, x'41', '-1279305933', '2010461842', 0xffffffffcafb2e52, NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c5, c3) VALUES (x'', '88411032', 0.005853506947394171); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET (c4)=(0.6766698228567961) WHERE SQLITE_COMPILEOPTION_GET((t0.c4 IN ())); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c3, c4, c0, c6, c5) VALUES (x'1c', '603733417', 'G~孥￿L^', 886054297, x''), ('2010798651', 0.9472333479326595, 'u', NULL, '-1665136082'), (x'', x'1c', 0.38307667754291375, 0.4292284324645219, 0X77d53692), ('2025863801', NULL, '㶩ᶙ붣', NULL, x'fa94'); -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c2, c4, c6, c3, c0) VALUES (0.7020918382079648, '', NULL, 'y', NULL, x''); -- 1ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET c3 = '㶩ᶙ붣', c4 = NULL, c3 = 2010461842; -- 1ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES (NULL, '-1560087994'); -- 1ms;
INSERT OR REPLACE INTO t0(c1, c0, c2, c3) VALUES (-1463084059, '6', '', x'8fbb'), (0.30502087275362855, 0x78f7fa93, NULL, ''), ('', x'0f30', x'27d4', x'c6'); -- 1ms;
ANALYZE; -- 1ms;
INSERT OR FAIL INTO t0 VALUES ('1505646880', 18393758, '-523250614', x'', x'54ca36'), ('-1279305933', x'81', x'22', 0.045390897871673164, x'1b'), (0.9247696419230018, NULL, -1927307188, NULL, NULL), ('1333222245', x'9d', '-1246367183', (((- (0.5021690346612778)))-(x'')), 1091145401); -- 1ms;
INSERT OR IGNORE INTO rt1(c2, c5, c0, c4, c6, c1) VALUES (-1.463084059E9, 0.774535527597818, -1927307188, 8.8411032E7, '2029517459', '-523250614'); -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c5, c4, c1, c0, c3) VALUES ('㶩ᶙ붣', NULL, x'', x'', '-1666556278', 0.9684774486826819); -- 1ms;
UPDATE OR REPLACE rt1 SET c4 = 0.45735093364541624; -- 0ms;
UPDATE OR IGNORE rt1 SET c6 = '-1980698300', c6 = x'db' WHERE rt1.c2; -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (NULL), (-1191521787); -- 0ms;
UPDATE OR IGNORE rt1 SET c3 = NULL WHERE LTRIM(TOTAL_CHANGES()); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c5) VALUES (0.6257287008089214, '{}'), ('X', NULL), (x'27a7', 0.46539763801619694), (0x78f7fa93, NULL), (NULL, 0.6177400951061373); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE rt1 SET c3 = '1163750199', c3 = '3qG'; -- 1ms;
UPDATE t0 SET c2 = 0.13587103737969575, c3 = x'5bbf' WHERE (((-1191521787, t0.c1)) NOT BETWEEN ((t0.c4, ((t0.c1) NOTNULL))) AND ((((t0.c2)%(t0.c0)), (~ (t0.c0))))); -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
UPDATE OR IGNORE rt1 SET c2 = -1980698300, c1 = x'b38d' WHERE CASE CAST(rt1.c1 AS TEXT)  WHEN '953423655' THEN ((rt1.c2)=(rt1.c2)) ELSE ((rt1.c2)<(x'1c7d')) END; -- 0ms;
END TRANSACTION; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c3, c2, c4) VALUES (x'7b', NULL, '1333222245', 0.5748054955648207), ('''', '-1980698300', 0.6811501361922409, '-1665136082'), (0.07549142447844681, '-1e500', x'1025', x'771a43'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ANALYZE main; -- 0ms;
ANALYZE main; -- 0ms;
UPDATE OR IGNORE t0 SET c1 = 0xffffffffccf7299b WHERE ((LIKELIHOOD('1664405135', t0.c1))==((t0.c1 IN (t0.c1)))); -- 1ms;
UPDATE OR IGNORE t0 SET c3 = '88411032'; -- 0ms;
UPDATE OR FAIL rt1 SET (c6, c6, c1, c3)=(NULL, x'', NULL, '-1927307188'); -- 0ms;
REINDEX  rt1; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR REPLACE rt1 SET (c6, c1)=('6', 0.1952059545223649) WHERE rt1.c3; -- 0ms;
INSERT OR IGNORE INTO t0(c3, c0, c2, c4, c1) VALUES ('fK夠aH', NULL, 0.9047286469910235, 0Xfffffffff2836004, NULL), (-1.279305933E9, 'X', x'06', NULL, NULL); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
ANALYZE t0; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c1 = NULL, c5 = '-2065710970' WHERE CASE WHEN (((rt1.c6)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c5))) THEN CASE rt1.c4  WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c0 END WHEN (((rt1.c3, rt1.c3, rt1.c5)) BETWEEN ((rt1.c4, rt1.c3, rt1.c4)) AND ((rt1.c6, rt1.c0, rt1.c2))) THEN ((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c4)) WHEN ((rt1.c6)IS NOT(rt1.c5)) THEN ((rt1.c1)>>(rt1.c2)) WHEN (rt1.c2 IN ()) THEN (NOT (rt1.c2)) WHEN (((rt1.c3, rt1.c2))<=((rt1.c2, rt1.c5))) THEN '603733417' ELSE (- (rt1.c6)) END; -- 1ms;
INSERT OR IGNORE INTO rt1(c4) VALUES (''), ('''dAR'); -- 1ms;
COMMIT; -- 1ms;
REINDEX; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR ROLLBACK INTO t0(c3, c0, c1) VALUES ('35009463', x'18', 0.7280443742260774); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c0)-(rt1.c1))) NOT BETWEEN (CASE rt1.c4  WHEN t0.c3 THEN rt1.c4 WHEN '-368242246' THEN rt1.c6 ELSE rt1.c6 END) AND (((rt1.c4)%(rt1.c0))))) ORDER BY '303395121' ASC  NULLS FIRST;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((((((rt1.c0)-(rt1.c1))) NOT BETWEEN (CASE rt1.c4  WHEN t0.c3 THEN rt1.c4 WHEN '-368242246' THEN rt1.c6 ELSE rt1.c6 END) AND (((rt1.c4)%(rt1.c0)))))AND(((((((((NULL)AND((NOT ('996534958')))))AND(((rt1.c0)IS NOT(rt1.c5)))))OR(((rt1.c4)/(t0.c1)))))AND(0.3070050356607299 COLLATE BINARY))))) ORDER BY '303395121' ASC  NULLS FIRST INTERSECT SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((((((((((((rt1.c4)AND(rt1.c5)))AND(rt1.c0)))OR(rt1.c6)))OR(t0.c3)))AND(t0.c0))) BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (((rt1.c4) NOT BETWEEN (t0.c0) AND (rt1.c1))))) ORDER BY '303395121' ASC  NULLS FIRST;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c0)-(rt1.c1))) NOT BETWEEN (CASE rt1.c4  WHEN t0.c3 THEN rt1.c4 WHEN '-368242246' THEN rt1.c6 ELSE rt1.c6 END) AND (((rt1.c4)%(rt1.c0))))) ORDER BY '303395121' ASC  NULLS FIRST;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((((((rt1.c0)-(rt1.c1))) NOT BETWEEN (CASE rt1.c4  WHEN t0.c3 THEN rt1.c4 WHEN '-368242246' THEN rt1.c6 ELSE rt1.c6 END) AND (((rt1.c4)%(rt1.c0)))))AND(((((((((NULL)AND((NOT ('996534958')))))AND(((rt1.c0)IS NOT(rt1.c5)))))OR(((rt1.c4)/(t0.c1)))))AND(0.3070050356607299 COLLATE BINARY))))) ORDER BY '303395121' ASC  NULLS FIRST INTERSECT SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((((((((((((rt1.c4)AND(rt1.c5)))AND(rt1.c0)))OR(rt1.c6)))OR(t0.c3)))AND(t0.c0))) BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (((rt1.c4) NOT BETWEEN (t0.c0) AND (rt1.c1))))) ORDER BY '303395121' ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (-193617492) ORDER BY (((NOT (rt1.c2)))<>(((((((((((((rt1.c1)AND(rt1.c0)))AND(t0.c4)))OR(rt1.c1)))OR(rt1.c5)))OR(t0.c1)))OR(rt1.c4)))) ASC  NULLS FIRST, (- (((t0.c3)%(t0.c2))));
SELECT ALL * FROM t0, rt1 WHERE (0xfffffffff475a1ac) ORDER BY (((NOT (rt1.c2)))!=(((((((((((((rt1.c1)AND(rt1.c0)))AND(t0.c4)))OR(rt1.c1)))OR(rt1.c5)))OR(t0.c1)))OR(rt1.c4)))) ASC  NULLS FIRST, (- (((t0.c3)%(t0.c2)))) LIMIT 0x3;
SELECT ALL * FROM t0, rt1 WHERE (-193617492) ORDER BY (((NOT (rt1.c2)))<>(((((((((((((rt1.c1)AND(rt1.c0)))AND(t0.c4)))OR(rt1.c1)))OR(rt1.c5)))OR(t0.c1)))OR(rt1.c4)))) ASC  NULLS FIRST, (- (((t0.c3)%(t0.c2))));
SELECT ALL * FROM t0, rt1 WHERE (0xfffffffff475a1ac) ORDER BY (((NOT (rt1.c2)))!=(((((((((((((rt1.c1)AND(rt1.c0)))AND(t0.c4)))OR(rt1.c1)))OR(rt1.c5)))OR(t0.c1)))OR(rt1.c4)))) ASC  NULLS FIRST, (- (((t0.c3)%(t0.c2)))) LIMIT 0x3;
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c4 AS INTEGER))<<(json_quote(rt1.c4)))) ORDER BY rt1.c1 ASC, '0.1952059545223649' ASC  NULLS LAST, (((rt1.c6)) NOT BETWEEN (((~ (rt1.c2)))) AND ((((rt1.c4) IS FALSE)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((((CAST(rt1.c4 AS INTEGER))<<(json_quote(rt1.c4))))AND(((CASE rt1.c6  WHEN rt1.c4 THEN NULL WHEN rt1.c6 THEN rt1.c2 END)*(((((((((rt1.c2)AND(rt1.c4)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c1))))))) ORDER BY ((rt1.c0) NOT BETWEEN (((((rt1.c0)OR(rt1.c0)))AND(rt1.c3))) AND (((((rt1.c1)AND(rt1.c4)))OR(rt1.c5))))  NULLS LAST, LIKELY((rt1.c2 IN (rt1.c6, rt1.c0))) LIMIT 0X3 INTERSECT SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY ((rt1.c0) NOT BETWEEN (((((rt1.c0)OR(rt1.c0)))AND(rt1.c3))) AND (((((rt1.c1)AND(rt1.c4)))OR(rt1.c5))))  NULLS LAST, LIKELY((rt1.c2 IN (rt1.c6, rt1.c0))) LIMIT 3;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((- (rt1.c4)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((- (rt1.c4)) COLLATE NOCASE) ORDER BY (((((t0.c0, t0.c3)) BETWEEN ((t0.c4, t0.c2)) AND ((x'08', rt1.c1))))=(((rt1.c6)<=(t0.c2)))), CASE WHEN rt1.c3 THEN ((t0.c0) NOT BETWEEN (rt1.c4) AND (-1908681393)) WHEN (~ (rt1.c1)) THEN 0X23fc3da9 WHEN ((t0.c1)IS NOT(rt1.c2)) THEN x'' WHEN 9.96534958E8 THEN (('736960138')LIKE(t0.c2)) ELSE ((t0.c0) IS FALSE) END LIMIT 2;
SELECT * FROM t0 WHERE (t0.c3);
SELECT DISTINCT * FROM t0 WHERE (((t0.c3)AND(CAST((((t0.c1, t0.c1, t0.c4))=((t0.c2, t0.c2, t0.c0))) AS TEXT)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c3 COLLATE BINARY) BETWEEN (((t0.c2)<<(t0.c4))) AND (CAST(t0.c4 AS REAL))));
SELECT * FROM t0 WHERE (t0.c3);
SELECT DISTINCT * FROM t0 WHERE (((t0.c3)AND(CAST((((t0.c1, t0.c1, t0.c4))=((t0.c2, t0.c2, t0.c0))) AS TEXT)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c3 COLLATE BINARY) BETWEEN (((t0.c2)<<(t0.c4))) AND (CAST(t0.c4 AS REAL))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((+ (((t0.c2) BETWEEN (rt1.c5) AND (rt1.c6)))));
SELECT COUNT(*) FROM rt1, t0 WHERE ((((+ (((t0.c2) BETWEEN (rt1.c5) AND (rt1.c6)))))AND(CAST(rt1.c2 AS NUMERIC)))) ORDER BY (~ ((NOT (rt1.c5)))), CAST((rt1.c5 IN ()) AS TEXT), (((rt1.c5 IN (t0.c0, rt1.c2))) IS FALSE) DESC  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((t0.c2, t0.c4)) NOT BETWEEN ((0.9587399466525067, x'266248' COLLATE RTRIM)) AND ((((((((rt1.c2)OR(t0.c1)))OR(rt1.c3)))OR(rt1.c2)), (((rt1.c4, x'c9')) NOT BETWEEN ((rt1.c6, t0.c2)) AND ((rt1.c5, t0.c1))))))) ORDER BY (~ ((NOT (rt1.c5)))), CAST((rt1.c5 IN ()) AS TEXT), (((rt1.c5 IN (t0.c0, rt1.c2))) IS FALSE) DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((((((t0.c3))>((t0.c3)))) NOT BETWEEN (t0.c3) AND (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c3)))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c3))>((t0.c3)))) NOT BETWEEN (t0.c3) AND (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c3)))));
SELECT * FROM t0 WHERE ((((((t0.c3))>((t0.c3)))) NOT BETWEEN (t0.c3) AND (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c3)))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c3))>((t0.c3)))) NOT BETWEEN (t0.c3) AND (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c3)))));
SELECT MIN(rt1.c6) FROM t0 INNER JOIN rt1 ON rt1.c1 COLLATE RTRIM WHERE (((((((((((rt1.c6)AND(rt1.c3)))AND(t0.c1)))AND(rt1.c1)))OR(rt1.c1))) ISNULL)) ORDER BY (((t0.c4 IN (rt1.c6)))/(((rt1.c2) NOT NULL))) DESC;
SELECT MIN(rt1.c6) FROM t0 INNER JOIN rt1 ON rt1.c1 COLLATE RTRIM WHERE (((((((((((((rt1.c6)AND(rt1.c3)))AND(t0.c1)))AND(rt1.c1)))OR(rt1.c1))) ISNULL))AND((((((t0.c3)+(t0.c1)), ((((rt1.c4)AND(x'')))AND(rt1.c4))))>((t0.c3, ((((x'72e8')OR(rt1.c5)))OR(rt1.c1)))))))) ORDER BY (((t0.c1, rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE RTRIM, ((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c3)))) AND ((rt1.c3, (NOT ('h'))))) DESC  NULLS LAST INTERSECT SELECT ALL MIN(rt1.c6) FROM t0 INNER JOIN rt1 ON rt1.c1 COLLATE RTRIM WHERE ((NOT (CASE rt1.c0  WHEN t0.c3 THEN t0.c1 END))) ORDER BY (((t0.c1, rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE RTRIM, ((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c3)))) AND ((rt1.c3, (NOT ('h'))))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (GLOB(INSTR(t0.c2, t0.c1), ((t0.c3) IS FALSE))) ORDER BY CASE WHEN ((t0.c1)%(t0.c1)) THEN 44439548 COLLATE BINARY END ASC  NULLS FIRST, (((CASE t0.c1  WHEN 'A|,' THEN t0.c0 WHEN 0.011712557661421763 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END))>(((((('W')OR(t0.c1)))OR(t0.c2))))) DESC  NULLS FIRST, ((((t0.c4))<=((t0.c1))) IN (((t0.c0) BETWEEN (t0.c4) AND (t0.c4)))) ASC, (t0.c4 IN ()) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((GLOB(INSTR(t0.c2, t0.c1), ((t0.c3) IS FALSE)))AND(SQLITE_SOURCE_ID()))) ORDER BY CASE WHEN ((t0.c1)%(t0.c1)) THEN 0x2a617fc COLLATE BINARY END ASC  NULLS FIRST, (((CASE t0.c1  WHEN 'A|,' THEN t0.c0 WHEN 0.011712557661421763 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END))>(((((('W')OR(t0.c1)))OR(t0.c2))))) DESC  NULLS FIRST, ((((t0.c4))<=((t0.c1))) IN (((t0.c0) BETWEEN (t0.c4) AND (t0.c4)))) ASC, (t0.c4 IN ()) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE (t0.c1) ORDER BY CASE WHEN ((t0.c1)%(t0.c1)) THEN 44439548 COLLATE BINARY END ASC  NULLS FIRST, (((CASE t0.c1  WHEN 'A|,' THEN t0.c0 WHEN 0.011712557661421763 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END))>(((((('W')OR(t0.c1)))OR(t0.c2))))) DESC  NULLS FIRST, ((((t0.c4))<=((t0.c1))) IN (((t0.c0) BETWEEN (t0.c4) AND (t0.c4)))) ASC, (t0.c4 IN ()) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (GLOB(INSTR(t0.c2, t0.c1), ((t0.c3) IS FALSE))) ORDER BY CASE WHEN ((t0.c1)%(t0.c1)) THEN 44439548 COLLATE BINARY END ASC  NULLS FIRST, (((CASE t0.c1  WHEN 'A|,' THEN t0.c0 WHEN 0.011712557661421763 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END))>(((((('W')OR(t0.c1)))OR(t0.c2))))) DESC  NULLS FIRST, ((((t0.c4))<=((t0.c1))) IN (((t0.c0) BETWEEN (t0.c4) AND (t0.c4)))) ASC, (t0.c4 IN ()) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c4)))/((t0.c2 IN ()))));
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c4)))/((t0.c2 IN ())))) LIMIT 2;
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c4)))/((t0.c2 IN ()))));
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c4)))/((t0.c2 IN ())))) LIMIT 2;
SELECT ALL MIN(rt1.c1) FROM rt1 WHERE (CAST(LTRIM(rt1.c1) AS NUMERIC));
SELECT MIN(rt1.c1) FROM rt1 WHERE (((CAST(LTRIM(rt1.c1) AS NUMERIC))AND((((rt1.c5)) NOT BETWEEN ((rt1.c5)) AND (('-1184841295'))) COLLATE RTRIM))) ORDER BY ((((rt1.c0)IS(rt1.c5)))<=(0.7100941812594009))  NULLS FIRST, (+ (rt1.c3)), (((((((((((rt1.c1))!=((rt1.c2))))OR((NOT (rt1.c1)))))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3)))))AND((rt1.c5 IN (rt1.c3)))))AND((((rt1.c1, rt1.c6))>((rt1.c2, rt1.c4))))) LIMIT 0x2 INTERSECT SELECT ALL MIN(rt1.c1) FROM rt1 WHERE ((((CASE WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c0 THEN 0.38307667754291375 END, TYPEOF(x'c123'), ((((((rt1.c1)OR(NULL)))AND(NULL)))AND(rt1.c6))))!=((rt1.c6 COLLATE RTRIM, ((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c6)), (rt1.c1 IN ('')))))) ORDER BY ((((rt1.c0)IS(rt1.c5)))<=(0.7100941812594009))  NULLS FIRST, (+ (rt1.c3)), (((((((((((rt1.c1))<>((rt1.c2))))OR((NOT (rt1.c1)))))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3)))))AND((rt1.c5 IN (rt1.c3)))))AND((((rt1.c1, rt1.c6))>((rt1.c2, rt1.c4))))) LIMIT 0x2;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (NULL) ORDER BY ((CASE WHEN NULL THEN t0.c4 WHEN t0.c0 THEN t0.c4 END) NOTNULL) DESC  NULLS LAST;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (NULL) ORDER BY ((CASE WHEN NULL THEN t0.c4 WHEN t0.c0 THEN t0.c4 END) NOTNULL) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT MAX(t0.c3) FROM t0 WHERE (CASE (+ (t0.c0))  WHEN ((t0.c4) IS FALSE) THEN ((0.7124830930282101)==(t0.c4)) ELSE t0.c0 COLLATE RTRIM END) ORDER BY ((CASE WHEN NULL THEN t0.c4 WHEN t0.c0 THEN t0.c4 END) NOTNULL) DESC  NULLS LAST LIMIT 0;
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((ROUND(rt1.c0, rt1.c3)) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c5 END) AND (rt1.c1)) DESC  NULLS LAST, CASE rt1.c1 COLLATE BINARY  WHEN ((rt1.c2)*(rt1.c0)) THEN (((rt1.c2, rt1.c0, rt1.c5))<((0.24002120252617443, x'', rt1.c1))) WHEN rt1.c6 THEN CAST(rt1.c5 AS NUMERIC) END ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1)AND((- (CAST(rt1.c1 AS REAL)))))) ORDER BY ((ROUND(rt1.c0, rt1.c3)) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c5 END) AND (rt1.c1)) DESC  NULLS LAST, CASE rt1.c1 COLLATE BINARY  WHEN ((rt1.c2)*(rt1.c0)) THEN (((rt1.c2, rt1.c0, rt1.c5))<((0.24002120252617443, x'', rt1.c1))) WHEN rt1.c6 THEN CAST(rt1.c5 AS NUMERIC) END ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((rt1.c1 IN ()) COLLATE BINARY) ORDER BY ((ROUND(rt1.c0, rt1.c3)) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c5 END) AND (rt1.c1)) DESC  NULLS LAST, CASE rt1.c1 COLLATE BINARY  WHEN ((rt1.c2)*(rt1.c0)) THEN (((rt1.c2, rt1.c0, rt1.c5))<((0.24002120252617443, x'', rt1.c1))) WHEN rt1.c6 THEN CAST(rt1.c5 AS NUMERIC) END ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((ROUND(rt1.c0, rt1.c3)) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c5 END) AND (rt1.c1)) DESC  NULLS LAST, CASE rt1.c1 COLLATE BINARY  WHEN ((rt1.c2)*(rt1.c0)) THEN (((rt1.c2, rt1.c0, rt1.c5))<((0.24002120252617443, x'', rt1.c1))) WHEN rt1.c6 THEN CAST(rt1.c5 AS NUMERIC) END ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1)AND((- (CAST(rt1.c1 AS REAL)))))) ORDER BY ((ROUND(rt1.c0, rt1.c3)) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c5 END) AND (rt1.c1)) DESC  NULLS LAST, CASE rt1.c1 COLLATE BINARY  WHEN ((rt1.c2)*(rt1.c0)) THEN (((rt1.c2, rt1.c0, rt1.c5))<((0.24002120252617443, x'', rt1.c1))) WHEN rt1.c6 THEN CAST(rt1.c5 AS NUMERIC) END ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((rt1.c1 IN ()) COLLATE BINARY) ORDER BY ((ROUND(rt1.c0, rt1.c3)) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c5 END) AND (rt1.c1)) DESC  NULLS LAST, CASE rt1.c1 COLLATE BINARY  WHEN ((rt1.c2)*(rt1.c0)) THEN (((rt1.c2, rt1.c0, rt1.c5))<((0.24002120252617443, x'', rt1.c1))) WHEN rt1.c6 THEN CAST(rt1.c5 AS NUMERIC) END ASC  NULLS LAST;
SELECT * FROM t0, rt1 WHERE ((((((rt1.c3 IN (rt1.c2)))OR(((rt1.c0) IS TRUE))))OR(((('')) NOT BETWEEN ((t0.c1)) AND ((rt1.c1))))));
SELECT * FROM t0, rt1 WHERE ((((((rt1.c3 IN (rt1.c2)))OR(((rt1.c0) IS TRUE))))OR(((('')) NOT BETWEEN ((t0.c1)) AND ((rt1.c1))))));
SELECT * FROM t0, rt1 WHERE ((((((rt1.c3 IN (rt1.c2)))OR(((rt1.c0) IS TRUE))))OR(((('')) NOT BETWEEN ((t0.c1)) AND ((rt1.c1))))));
SELECT * FROM t0, rt1 WHERE ((((((rt1.c3 IN (rt1.c2)))OR(((rt1.c0) IS TRUE))))OR(((('')) NOT BETWEEN ((t0.c1)) AND ((rt1.c1))))));
SELECT * FROM t0 WHERE (LIKELY(((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c4)))) ORDER BY t0.c2 ASC;
SELECT * FROM t0 WHERE (LIKELY(((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c4)))) ORDER BY t0.c2 ASC LIMIT 1;
SELECT * FROM t0 WHERE (LIKELY(((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c4)))) ORDER BY t0.c2 ASC;
SELECT * FROM t0 WHERE (LIKELY(((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c4)))) ORDER BY t0.c2 ASC LIMIT 1;
SELECT * FROM t0 WHERE (((((NOT (t0.c0))))>=(((t0.c4 IN (t0.c4))))));
SELECT * FROM t0 WHERE (((((NOT (t0.c0))))>=(((t0.c4 IN (t0.c4)))))) ORDER BY ((ABS(DISTINCT t0.c1))AND((((t0.c2, t0.c3))!=((t0.c4, t0.c3))))) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT ALL * FROM t0 WHERE (CASE '-523250614'  WHEN CAST(t0.c1 AS NUMERIC) THEN CASE t0.c2  WHEN t0.c4 THEN t0.c1 ELSE t0.c4 END WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c4)) THEN '''dAR' WHEN ((t0.c2)*(t0.c4)) THEN t0.c1 COLLATE BINARY ELSE ((t0.c0) NOTNULL) END) ORDER BY ((ABS(DISTINCT t0.c1))AND((((t0.c2, t0.c3))<>((t0.c4, t0.c3))))) ASC  NULLS FIRST LIMIT 0X1;
SELECT * FROM t0 WHERE (((((NOT (t0.c0))))>=(((t0.c4 IN (t0.c4))))));
SELECT * FROM t0 WHERE (((((NOT (t0.c0))))>=(((t0.c4 IN (t0.c4)))))) ORDER BY ((ABS(DISTINCT t0.c1))AND((((t0.c2, t0.c3))!=((t0.c4, t0.c3))))) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT ALL * FROM t0 WHERE (CASE '-523250614'  WHEN CAST(t0.c1 AS NUMERIC) THEN CASE t0.c2  WHEN t0.c4 THEN t0.c1 ELSE t0.c4 END WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c4)) THEN '''dAR' WHEN ((t0.c2)*(t0.c4)) THEN t0.c1 COLLATE BINARY ELSE ((t0.c0) NOTNULL) END) ORDER BY ((ABS(DISTINCT t0.c1))AND((((t0.c2, t0.c3))<>((t0.c4, t0.c3))))) ASC  NULLS FIRST LIMIT 0X1;
SELECT ALL COUNT(*) FROM rt1 WHERE ('-1314074616');
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((('-1314074616')AND(CASE rt1.c0  WHEN ((0.5282283957617471) IS TRUE) THEN ((rt1.c2) BETWEEN ('A6nfe	ၼ') AND (rt1.c6)) END))) LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c3 THEN rt1.c4 WHEN '489068276' THEN rt1.c6 WHEN rt1.c3 THEN 0.8664384533844339 WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c2 THEN '201579330' ELSE rt1.c3 END COLLATE NOCASE) LIMIT 1;
SELECT ALL MAX(rt1.c2) FROM rt1 WHERE ((((rt1.c6 IN (rt1.c6)))GLOB(CAST(rt1.c5 AS TEXT))));
SELECT DISTINCT MAX(rt1.c2) FROM rt1 WHERE ((((((rt1.c6 IN (rt1.c6)))GLOB(CAST(rt1.c5 AS TEXT))))AND(rt1.c3))) ORDER BY CAST(((((((((((rt1.c6)AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c4)))OR(0.45735093364541624)) AS NUMERIC) ASC, (('2]<')+(CASE WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END))  NULLS FIRST LIMIT 0;
SELECT MAX(rt1.c6) FROM rt1, t0 WHERE ((((((t0.c2, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1)) AND ((0.10795068278856201, t0.c0)))) NOT NULL));
SELECT ALL MAX(rt1.c6) FROM rt1, t0 WHERE ((((((((t0.c2, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1)) AND ((0.10795068278856201, t0.c0)))) NOT NULL))AND(NULL))) LIMIT 2;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((CAST(rt1.c3 AS INTEGER) IN ())) ORDER BY ((t0.c2)&(t0.c0)) COLLATE BINARY  NULLS FIRST, ((((((((((((t0.c4)OR(((rt1.c3)==(t0.c3)))))AND(((t0.c3)>(rt1.c5)))))OR((rt1.c4 IN (t0.c1, t0.c4, NULL)))))OR(((((NULL)OR(rt1.c3)))OR(rt1.c5)))))OR(((rt1.c6) BETWEEN (t0.c0) AND (t0.c0)))))AND(NULL));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((CAST(rt1.c3 AS INTEGER) IN ()))AND(((('1967614267')) NOT BETWEEN ((((((t0.c3)OR(rt1.c5)))AND(rt1.c5)))) AND ((CASE rt1.c3  WHEN t0.c0 THEN t0.c1 WHEN rt1.c6 THEN t0.c4 WHEN t0.c2 THEN t0.c4 ELSE t0.c4 END)))))) ORDER BY ((t0.c2)&(t0.c0)) COLLATE BINARY  NULLS FIRST, ((((((((((((t0.c4)OR(((rt1.c3)=(t0.c3)))))AND(((t0.c3)>(rt1.c5)))))OR((rt1.c4 IN (t0.c1, t0.c4, NULL)))))OR(((((NULL)OR(rt1.c3)))OR(rt1.c5)))))OR(((rt1.c6) BETWEEN (t0.c0) AND (t0.c0)))))AND(NULL));
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON (((((((rt1.c3)AND(rt1.c3)))AND(rt1.c1)), (t0.c2 IN ()), ((t0.c4) NOT BETWEEN (t0.c3) AND (rt1.c3))))<>((((rt1.c3)<(rt1.c6)), CASE WHEN t0.c1 THEN rt1.c0 END, ((rt1.c0)<>(rt1.c4))))) WHERE ((((((t0.c2, rt1.c4)) BETWEEN ((t0.c2, t0.c0)) AND ((t0.c4, t0.c2)))) BETWEEN ((((x'7afc4382')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5)))) AND ((t0.c0 IN ()))));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (((((((rt1.c3)AND(rt1.c3)))AND(rt1.c1)), (t0.c2 IN ()), ((t0.c4) NOT BETWEEN (t0.c3) AND (rt1.c3))))<>((((rt1.c3)<(rt1.c6)), CASE WHEN t0.c1 THEN rt1.c0 END, ((rt1.c0)!=(rt1.c4))))) WHERE ((((((((t0.c2, rt1.c4)) BETWEEN ((t0.c2, t0.c0)) AND ((t0.c4, t0.c2)))) BETWEEN ((((x'7afc4382')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5)))) AND ((t0.c0 IN ()))))AND(((rt1.c0) NOTNULL)))) LIMIT 1;
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON (((((((rt1.c3)AND(rt1.c3)))AND(rt1.c1)), (t0.c2 IN ()), ((t0.c4) NOT BETWEEN (t0.c3) AND (rt1.c3))))<>((((rt1.c3)<(rt1.c6)), CASE WHEN t0.c1 THEN rt1.c0 END, ((rt1.c0)<>(rt1.c4))))) WHERE ((((((t0.c2, rt1.c4)) BETWEEN ((t0.c2, t0.c0)) AND ((t0.c4, t0.c2)))) BETWEEN ((((x'7afc4382')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5)))) AND ((t0.c0 IN ()))));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (((((((rt1.c3)AND(rt1.c3)))AND(rt1.c1)), (t0.c2 IN ()), ((t0.c4) NOT BETWEEN (t0.c3) AND (rt1.c3))))<>((((rt1.c3)<(rt1.c6)), CASE WHEN t0.c1 THEN rt1.c0 END, ((rt1.c0)!=(rt1.c4))))) WHERE ((((((((t0.c2, rt1.c4)) BETWEEN ((t0.c2, t0.c0)) AND ((t0.c4, t0.c2)))) BETWEEN ((((x'7afc4382')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5)))) AND ((t0.c0 IN ()))))AND(((rt1.c0) NOTNULL)))) LIMIT 1;
SELECT * FROM t0 WHERE ((+ ((t0.c4 IN (0.24002120252617443))))) ORDER BY CAST(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c3 END AS TEXT) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((+ ((t0.c4 IN (0.24002120252617443))))) ORDER BY ((((t0.c4) BETWEEN (t0.c0) AND (t0.c2)))OR(0X47091570)) DESC  NULLS FIRST, (((((t0.c2, t0.c3))<=((t0.c2, 'o'))))<(((t0.c2)GLOB(t0.c4)))) LIMIT 0;
SELECT * FROM t0 WHERE ((+ ((t0.c4 IN (0.24002120252617443))))) ORDER BY CAST(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c3 END AS TEXT) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((+ ((t0.c4 IN (0.24002120252617443))))) ORDER BY ((((t0.c4) BETWEEN (t0.c0) AND (t0.c2)))OR(0X47091570)) DESC  NULLS FIRST, (((((t0.c2, t0.c3))<=((t0.c2, 'o'))))<(((t0.c2)GLOB(t0.c4)))) LIMIT 0;
SELECT MAX(rt1.c2) FROM rt1, t0 WHERE (CAST(CAST(t0.c2 AS TEXT) AS TEXT));
SELECT DISTINCT MAX(rt1.c2) FROM rt1, t0 WHERE (((CAST(CAST(t0.c2 AS TEXT) AS TEXT))AND(((((((((((((((rt1.c0) BETWEEN (t0.c3) AND (t0.c3)))AND(UPPER(-1491715523))))OR(rt1.c5)))AND(CAST(rt1.c4 AS NUMERIC))))AND(LOWER(rt1.c5))))OR(((t0.c3) ISNULL))))OR(((rt1.c2)<=(rt1.c2))))))) ORDER BY (((rt1.c6)) BETWEEN ((rt1.c1 COLLATE BINARY)) AND ((t0.c0 COLLATE BINARY)))  NULLS FIRST, (rt1.c1 IN ()) COLLATE BINARY LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(rt1.c2) FROM rt1, t0 WHERE (((+ (t0.c2)) IN ((((rt1.c1, rt1.c3))>=((rt1.c2, rt1.c3)))))) ORDER BY (((rt1.c6)) BETWEEN ((rt1.c1 COLLATE BINARY)) AND ((t0.c0 COLLATE BINARY)))  NULLS FIRST, (rt1.c1 IN ()) COLLATE BINARY LIMIT 0X1;
SELECT * FROM rt1 WHERE (((((((rt1.c5))==((rt1.c5)))))<((((rt1.c4)<=(rt1.c2))))));
SELECT DISTINCT * FROM rt1 WHERE (((((((((rt1.c5))=((rt1.c5)))))<((((rt1.c4)<(rt1.c2))))))AND(((((rt1.c0)<(rt1.c4)))+((((rt1.c5, rt1.c4, rt1.c3)) BETWEEN ((rt1.c3, 0.0032158905941063187, rt1.c3)) AND ((rt1.c4, rt1.c3, rt1.c4)))))))) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((rt1.c5)-(rt1.c4)) COLLATE NOCASE);
SELECT * FROM rt1 WHERE (((((((rt1.c5))==((rt1.c5)))))<((((rt1.c4)<=(rt1.c2))))));
SELECT DISTINCT * FROM rt1 WHERE (((((((((rt1.c5))=((rt1.c5)))))<((((rt1.c4)<(rt1.c2))))))AND(((((rt1.c0)<(rt1.c4)))+((((rt1.c5, rt1.c4, rt1.c3)) BETWEEN ((rt1.c3, 0.0032158905941063187, rt1.c3)) AND ((rt1.c4, rt1.c3, rt1.c4)))))))) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((rt1.c5)-(rt1.c4)) COLLATE NOCASE);
SELECT * FROM t0 WHERE (CASE ((t0.c0)IS(t0.c3))  WHEN ((t0.c2)>>(t0.c3)) THEN t0.c2 WHEN CAST(t0.c2 AS REAL) THEN t0.c4 ELSE CAST(t0.c1 AS NUMERIC) END);
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0)IS(t0.c3))  WHEN ((t0.c2)>>(t0.c3)) THEN t0.c2 WHEN CAST(t0.c2 AS REAL) THEN t0.c4 ELSE CAST(t0.c1 AS NUMERIC) END) ORDER BY (((t0.c1 IN (t0.c2, t0.c1, t0.c3)))+((((t0.c1))>=((t0.c4))))), (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN t0.c0 END)) AND (((t0.c4 IN (t0.c2, t0.c0)))))) ORDER BY (((t0.c1 IN (t0.c2, t0.c1, t0.c3)))+((((t0.c1))>=((t0.c4))))), (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CASE ((t0.c0)IS(t0.c3))  WHEN ((t0.c2)>>(t0.c3)) THEN t0.c2 WHEN CAST(t0.c2 AS REAL) THEN t0.c4 ELSE CAST(t0.c1 AS NUMERIC) END);
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0)IS(t0.c3))  WHEN ((t0.c2)>>(t0.c3)) THEN t0.c2 WHEN CAST(t0.c2 AS REAL) THEN t0.c4 ELSE CAST(t0.c1 AS NUMERIC) END) ORDER BY (((t0.c1 IN (t0.c2, t0.c1, t0.c3)))+((((t0.c1))>=((t0.c4))))), (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c3 THEN t0.c0 END)) AND (((t0.c4 IN (t0.c2, t0.c0)))))) ORDER BY (((t0.c1 IN (t0.c2, t0.c1, t0.c3)))+((((t0.c1))>=((t0.c4))))), (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c1, rt1.c6, x'')) NOT BETWEEN (((NOT (rt1.c5)), ((rt1.c2)|(rt1.c1)), (rt1.c6 IN ()))) AND (((rt1.c5 IN ()), (rt1.c3 IN (rt1.c0)), ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c6))))));
SELECT * FROM rt1 WHERE ((((rt1.c1, rt1.c6, x'')) NOT BETWEEN (((NOT (rt1.c5)), ((rt1.c2)|(rt1.c1)), (rt1.c6 IN ()))) AND (((rt1.c5 IN ()), (rt1.c3 IN (rt1.c0)), ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c6)))))) LIMIT 1;
SELECT ALL * FROM rt1 WHERE ((((rt1.c1, rt1.c6, x'')) NOT BETWEEN (((NOT (rt1.c5)), ((rt1.c2)|(rt1.c1)), (rt1.c6 IN ()))) AND (((rt1.c5 IN ()), (rt1.c3 IN (rt1.c0)), ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c6))))));
SELECT * FROM rt1 WHERE ((((rt1.c1, rt1.c6, x'')) NOT BETWEEN (((NOT (rt1.c5)), ((rt1.c2)|(rt1.c1)), (rt1.c6 IN ()))) AND (((rt1.c5 IN ()), (rt1.c3 IN (rt1.c0)), ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c6)))))) LIMIT 1;
SELECT * FROM t0 CROSS JOIN rt1 ON CAST(t0.c4 AS TEXT) COLLATE NOCASE WHERE ((((t0.c1) ISNULL) IN ((+ (rt1.c5))))) ORDER BY (('0.46539763801619694') NOT BETWEEN (rt1.c1) AND (x'')), COALESCE(DISTINCT ((t0.c4)>(rt1.c0)), CASE WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c5 THEN t0.c4 WHEN t0.c0 THEN t0.c0 END)  NULLS LAST;
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON CAST(t0.c4 AS TEXT) COLLATE NOCASE WHERE ((((((t0.c1) ISNULL) IN ((+ (rt1.c5)))))AND(CASE CAST(t0.c1 AS TEXT)  WHEN (('kz
r3J>s') IS FALSE) THEN ((0x49da5b3f) BETWEEN (t0.c2) AND (t0.c0)) WHEN rt1.c5 COLLATE RTRIM THEN CASE WHEN rt1.c3 THEN rt1.c4 END WHEN NULL THEN '1664405135' WHEN (rt1.c2 IN (t0.c2)) THEN ((t0.c0) ISNULL) END))) ORDER BY (('0.46539763801619694') NOT BETWEEN (rt1.c1) AND (x'')), COALESCE(DISTINCT ((t0.c4)>(rt1.c0)), CASE WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c5 THEN t0.c4 WHEN t0.c0 THEN t0.c0 END)  NULLS LAST;
SELECT * FROM t0 CROSS JOIN rt1 ON CAST(t0.c4 AS TEXT) COLLATE NOCASE WHERE ((((t0.c1) ISNULL) IN ((+ (rt1.c5))))) ORDER BY (('0.46539763801619694') NOT BETWEEN (rt1.c1) AND (x'')), COALESCE(DISTINCT ((t0.c4)>(rt1.c0)), CASE WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c5 THEN t0.c4 WHEN t0.c0 THEN t0.c0 END)  NULLS LAST;
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON CAST(t0.c4 AS TEXT) COLLATE NOCASE WHERE ((((((t0.c1) ISNULL) IN ((+ (rt1.c5)))))AND(CASE CAST(t0.c1 AS TEXT)  WHEN (('kz
r3J>s') IS FALSE) THEN ((0x49da5b3f) BETWEEN (t0.c2) AND (t0.c0)) WHEN rt1.c5 COLLATE RTRIM THEN CASE WHEN rt1.c3 THEN rt1.c4 END WHEN NULL THEN '1664405135' WHEN (rt1.c2 IN (t0.c2)) THEN ((t0.c0) ISNULL) END))) ORDER BY (('0.46539763801619694') NOT BETWEEN (rt1.c1) AND (x'')), COALESCE(DISTINCT ((t0.c4)>(rt1.c0)), CASE WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c5 THEN t0.c4 WHEN t0.c0 THEN t0.c0 END)  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1 WHERE ((~ (0.3220304217770008)));
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((~ (0.3220304217770008))) ORDER BY ((((CAST(x'830d' AS BLOB))AND(CAST(t0.c3 AS REAL))))AND(((((((t0.c2)OR(rt1.c3)))OR(rt1.c5)))AND(t0.c0)))) DESC  NULLS FIRST, rt1.c6 DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c2 THEN '' ELSE t0.c1 END)GLOB(t0.c1 COLLATE NOCASE)));
SELECT * FROM t0 WHERE (((((CASE WHEN t0.c2 THEN '' ELSE t0.c1 END)GLOB(t0.c1 COLLATE NOCASE)))AND(((t0.c2 IN ()) IN (CAST(t0.c2 AS NUMERIC), (((t0.c2, '1765084207', t0.c2, t0.c1))>=(('1601051117', t0.c1, t0.c3, t0.c0)))))))) ORDER BY (((t0.c1 IN (t0.c3))) BETWEEN (((t0.c2) BETWEEN (t0.c4) AND (t0.c4))) AND (((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c4))))  NULLS LAST, ((json_remove(t0.c3, t0.c1, x'6d'))GLOB(((((((((((t0.c3)OR(x'9edf')))OR(t0.c1)))AND(t0.c2)))OR(t0.c4)))AND(t0.c3)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c2 THEN '' ELSE t0.c1 END)GLOB(t0.c1 COLLATE NOCASE)));
SELECT * FROM t0 WHERE (((((CASE WHEN t0.c2 THEN '' ELSE t0.c1 END)GLOB(t0.c1 COLLATE NOCASE)))AND(((t0.c2 IN ()) IN (CAST(t0.c2 AS NUMERIC), (((t0.c2, '1765084207', t0.c2, t0.c1))>=(('1601051117', t0.c1, t0.c3, t0.c0)))))))) ORDER BY (((t0.c1 IN (t0.c3))) BETWEEN (((t0.c2) BETWEEN (t0.c4) AND (t0.c4))) AND (((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c4))))  NULLS LAST, ((json_remove(t0.c3, t0.c1, x'6d'))GLOB(((((((((((t0.c3)OR(x'9edf')))OR(t0.c1)))AND(t0.c2)))OR(t0.c4)))AND(t0.c3)))) DESC  NULLS LAST;
SELECT MAX(t0.c3) FROM t0, rt1 WHERE (((((((CASE t0.c4  WHEN rt1.c5 THEN t0.c1 WHEN rt1.c6 THEN rt1.c2 WHEN t0.c0 THEN t0.c2 WHEN rt1.c4 THEN t0.c2 END)OR(((rt1.c1) IS FALSE))))OR(CAST(rt1.c2 AS TEXT))))OR(t0.c2))) ORDER BY (~ (((((((0x6dec99a0)OR(rt1.c5)))OR('-614220311')))OR(rt1.c6))))  NULLS LAST, CASE 0x5621c5c  WHEN ((0.9982487031170127)-(rt1.c6)) THEN CASE rt1.c1  WHEN t0.c2 THEN rt1.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN rt1.c2 END END  NULLS LAST;
SELECT ALL MAX(t0.c3) FROM t0, rt1 WHERE (((((((CASE t0.c4  WHEN rt1.c5 THEN t0.c1 WHEN rt1.c6 THEN rt1.c2 WHEN t0.c0 THEN t0.c2 WHEN rt1.c4 THEN t0.c2 END)OR(((rt1.c1) IS FALSE))))OR(CAST(rt1.c2 AS TEXT))))OR(t0.c2))) ORDER BY (~ (((((((1844222368)OR(rt1.c5)))OR('-614220311')))OR(rt1.c6))))  NULLS LAST, CASE 0X5621c5c  WHEN ((0.9982487031170127)-(rt1.c6)) THEN CASE rt1.c1  WHEN t0.c2 THEN rt1.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN rt1.c2 END END  NULLS LAST LIMIT 1 INTERSECT SELECT MAX(t0.c3) FROM t0, rt1 WHERE (CASE ((rt1.c1)&(rt1.c6))  WHEN ((rt1.c3) IS TRUE) THEN HEX(rt1.c4) ELSE (rt1.c3 IN (rt1.c5)) END) ORDER BY (~ (((((((1844222368)OR(rt1.c5)))OR('-614220311')))OR(rt1.c6))))  NULLS LAST, CASE 90315868  WHEN ((0.9982487031170127)-(rt1.c6)) THEN CASE rt1.c1  WHEN t0.c2 THEN rt1.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN rt1.c2 END END  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c6 IN (rt1.c4, rt1.c4))  WHEN (((rt1.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c5))) THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)) ELSE (((NULL)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c2))) END) ORDER BY CASE WHEN rt1.c6 THEN NULL WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c1 END COLLATE BINARY COLLATE BINARY DESC, ((CASE -1.93617492E8  WHEN rt1.c5 THEN rt1.c4 ELSE x'' END) NOT NULL) ASC, ((((((((rt1.c0)AND(rt1.c0)))OR(1101841451)))AND(rt1.c3))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c5))) AND (rt1.c4)) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE (rt1.c6 IN (rt1.c4))  WHEN (((rt1.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c5))) THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)) ELSE (((NULL)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c2))) END)AND(UPPER(DISTINCT ((rt1.c0)<=(rt1.c3)))))) ORDER BY CASE WHEN rt1.c6 THEN NULL WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c1 END COLLATE BINARY COLLATE BINARY DESC, ((CASE -1.93617492E8  WHEN rt1.c5 THEN rt1.c4 ELSE x'' END) NOT NULL) ASC, ((((((((rt1.c0)AND(rt1.c0)))OR(1101841451)))AND(rt1.c3))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c5))) AND (rt1.c4)) ASC;
SELECT MAX(t0.c0) FROM t0 WHERE ((((t0.c4)) BETWEEN ((((t0.c2)IS NOT(t0.c1)))) AND ((((t0.c4) NOT BETWEEN (x'') AND (t0.c4)))))) ORDER BY ((CAST(t0.c3 AS REAL))AND(((((t0.c3)AND(t0.c0)))OR(t0.c4)))) DESC, ((((((json_object(t0.c4, t0.c1))OR(((t0.c2) IS FALSE))))AND(CASE WHEN t0.c2 THEN t0.c3 WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN 0.7124830930282101 ELSE t0.c3 END)))OR((t0.c4 IN (t0.c0)))) ASC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c4)) BETWEEN ((((t0.c2)IS NOT(t0.c1)))) AND ((((t0.c4) NOT BETWEEN (x'') AND (t0.c4)))))) ORDER BY ((CAST(t0.c3 AS REAL))AND(((((t0.c3)AND(t0.c0)))OR(t0.c4)))) DESC, ((((((json_object(t0.c4, t0.c1))OR(((t0.c2) IS FALSE))))AND(CASE WHEN t0.c2 THEN t0.c3 WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN 0.7124830930282101 ELSE t0.c3 END)))OR((t0.c4 IN (t0.c0)))) ASC LIMIT 0X0 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((NULL)) NOT BETWEEN ((((t0.c3) BETWEEN (t0.c2) AND (t0.c4)))) AND ((((t0.c0)GLOB(t0.c2)))))) ORDER BY ((CAST(t0.c3 AS REAL))AND(((((t0.c3)AND(t0.c0)))OR(t0.c4)))) DESC, ((((((json_object(t0.c4, t0.c1))OR(((t0.c2) IS FALSE))))AND(CASE WHEN t0.c2 THEN t0.c3 WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN 0.7124830930282101 ELSE t0.c3 END)))OR((t0.c4 IN (t0.c0)))) ASC LIMIT 0x0;
SELECT MAX(rt1.c1) FROM rt1 WHERE (CASE CASE rt1.c6  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c4 ELSE rt1.c3 END  WHEN ((rt1.c5)>(rt1.c0)) THEN ((rt1.c0)OR('-368242246')) WHEN NULL THEN CAST(NULL AS NUMERIC) ELSE ((((((((rt1.c3)AND(rt1.c4)))OR(rt1.c1)))AND(rt1.c5)))OR(rt1.c5)) END);
SELECT ALL MAX(rt1.c1) FROM rt1 WHERE (CASE CASE rt1.c6  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c4 ELSE rt1.c3 END  WHEN ((rt1.c5)>(rt1.c0)) THEN ((rt1.c0)OR('-368242246')) WHEN NULL THEN CAST(NULL AS NUMERIC) ELSE ((((((((rt1.c3)AND(rt1.c4)))OR(rt1.c1)))AND(rt1.c5)))OR(rt1.c5)) END) LIMIT 1;
SELECT * FROM t0 WHERE (t0.c3);
SELECT DISTINCT * FROM t0 WHERE (t0.c3) ORDER BY (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c4))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c1) ORDER BY (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c4))))  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c3);
SELECT DISTINCT * FROM t0 WHERE (t0.c3) ORDER BY (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c4))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c1) ORDER BY (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c4))))  NULLS FIRST;
SELECT * FROM rt1 WHERE (rt1.c2) ORDER BY rt1.c0 ASC, 'L(S1'  NULLS LAST, (((rt1.c5 IN (rt1.c3, rt1.c4)))!=(((rt1.c1)-(rt1.c4)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY rt1.c0 ASC, 'L(S1'  NULLS LAST, (((rt1.c5 IN (rt1.c3, rt1.c4)))<>(((rt1.c1)-(rt1.c4)))) DESC  NULLS FIRST INTERSECT SELECT ALL * FROM rt1 WHERE ((((((rt1.c4, rt1.c6))>=((rt1.c5, rt1.c1)))) IS TRUE)) ORDER BY rt1.c0 ASC, 'L(S1'  NULLS LAST, (((rt1.c5 IN (rt1.c3, rt1.c4)))!=(((rt1.c1)-(rt1.c4)))) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (rt1.c2) ORDER BY rt1.c0 ASC, 'L(S1'  NULLS LAST, (((rt1.c5 IN (rt1.c3, rt1.c4)))!=(((rt1.c1)-(rt1.c4)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY rt1.c0 ASC, 'L(S1'  NULLS LAST, (((rt1.c5 IN (rt1.c3, rt1.c4)))<>(((rt1.c1)-(rt1.c4)))) DESC  NULLS FIRST INTERSECT SELECT ALL * FROM rt1 WHERE ((((((rt1.c4, rt1.c6))>=((rt1.c5, rt1.c1)))) IS TRUE)) ORDER BY rt1.c0 ASC, 'L(S1'  NULLS LAST, (((rt1.c5 IN (rt1.c3, rt1.c4)))!=(((rt1.c1)-(rt1.c4)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN '1967614267' WHEN ((t0.c0) BETWEEN (rt1.c6) AND (rt1.c2)) THEN ((t0.c3)&(rt1.c6)) WHEN (+ (x'')) THEN ((((((((t0.c4)AND(t0.c3)))AND(rt1.c6)))OR(rt1.c2)))AND(rt1.c1)) END WHERE (COALESCE(CASE rt1.c0  WHEN rt1.c6 THEN rt1.c3 WHEN t0.c2 THEN t0.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c4 END, (NOT (rt1.c3)), ((t0.c3) BETWEEN (t0.c4) AND (rt1.c4)), ((t0.c2)%(rt1.c4)))) ORDER BY CAST((+ (t0.c0)) AS REAL) ASC  NULLS LAST, ((((((((rt1.c1)OR(t0.c3)))AND(x'd8')))AND(rt1.c3)))+(CAST(rt1.c2 AS BLOB))) ASC, ((((((((((t0.c2)AND(rt1.c0)))OR(t0.c4)))AND(rt1.c5)))OR(rt1.c3)))+(CAST('GScቭ|' AS BLOB)))  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN '1967614267' WHEN ((t0.c0) BETWEEN (rt1.c6) AND (rt1.c2)) THEN ((t0.c3)&(rt1.c6)) WHEN (+ (x'')) THEN ((((((((t0.c4)AND(t0.c3)))AND(rt1.c6)))OR(rt1.c2)))AND(rt1.c1)) END WHERE (COALESCE(CASE rt1.c0  WHEN rt1.c6 THEN rt1.c3 WHEN t0.c2 THEN t0.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c4 END, (NOT (rt1.c3)), ((t0.c3) BETWEEN (t0.c4) AND (rt1.c4)), ((t0.c2)%(rt1.c4)))) ORDER BY CAST((+ (t0.c0)) AS REAL) ASC  NULLS LAST, ((((((((rt1.c1)OR(t0.c3)))AND(x'd8')))AND(rt1.c3)))+(CAST(rt1.c2 AS BLOB))) ASC, ((((((((((t0.c2)AND(rt1.c0)))OR(t0.c4)))AND(rt1.c5)))OR(rt1.c3)))+(CAST('GScቭ|' AS BLOB)))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t0 INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN '1967614267' WHEN ((t0.c0) BETWEEN (rt1.c6) AND (rt1.c2)) THEN ((t0.c3)&(rt1.c6)) WHEN (+ (x'')) THEN ((((((((t0.c4)AND(t0.c3)))AND(rt1.c6)))OR(rt1.c2)))AND(rt1.c1)) END WHERE (((t0.c3) BETWEEN (CASE rt1.c2  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c4 END) AND ((~ (t0.c3))))) ORDER BY CAST((+ (t0.c0)) AS REAL) ASC  NULLS LAST, ((((((((rt1.c1)OR(t0.c3)))AND(x'd8')))AND(rt1.c3)))+(CAST(rt1.c2 AS BLOB))) ASC, ((((((((((t0.c2)AND(rt1.c0)))OR(t0.c4)))AND(rt1.c5)))OR(rt1.c3)))+(CAST('GScቭ|' AS BLOB)))  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN '1967614267' WHEN ((t0.c0) BETWEEN (rt1.c6) AND (rt1.c2)) THEN ((t0.c3)&(rt1.c6)) WHEN (+ (x'')) THEN ((((((((t0.c4)AND(t0.c3)))AND(rt1.c6)))OR(rt1.c2)))AND(rt1.c1)) END WHERE (COALESCE(CASE rt1.c0  WHEN rt1.c6 THEN rt1.c3 WHEN t0.c2 THEN t0.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c4 END, (NOT (rt1.c3)), ((t0.c3) BETWEEN (t0.c4) AND (rt1.c4)), ((t0.c2)%(rt1.c4)))) ORDER BY CAST((+ (t0.c0)) AS REAL) ASC  NULLS LAST, ((((((((rt1.c1)OR(t0.c3)))AND(x'd8')))AND(rt1.c3)))+(CAST(rt1.c2 AS BLOB))) ASC, ((((((((((t0.c2)AND(rt1.c0)))OR(t0.c4)))AND(rt1.c5)))OR(rt1.c3)))+(CAST('GScቭ|' AS BLOB)))  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN '1967614267' WHEN ((t0.c0) BETWEEN (rt1.c6) AND (rt1.c2)) THEN ((t0.c3)&(rt1.c6)) WHEN (+ (x'')) THEN ((((((((t0.c4)AND(t0.c3)))AND(rt1.c6)))OR(rt1.c2)))AND(rt1.c1)) END WHERE (COALESCE(CASE rt1.c0  WHEN rt1.c6 THEN rt1.c3 WHEN t0.c2 THEN t0.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c4 END, (NOT (rt1.c3)), ((t0.c3) BETWEEN (t0.c4) AND (rt1.c4)), ((t0.c2)%(rt1.c4)))) ORDER BY CAST((+ (t0.c0)) AS REAL) ASC  NULLS LAST, ((((((((rt1.c1)OR(t0.c3)))AND(x'd8')))AND(rt1.c3)))+(CAST(rt1.c2 AS BLOB))) ASC, ((((((((((t0.c2)AND(rt1.c0)))OR(t0.c4)))AND(rt1.c5)))OR(rt1.c3)))+(CAST('GScቭ|' AS BLOB)))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t0 INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN '1967614267' WHEN ((t0.c0) BETWEEN (rt1.c6) AND (rt1.c2)) THEN ((t0.c3)&(rt1.c6)) WHEN (+ (x'')) THEN ((((((((t0.c4)AND(t0.c3)))AND(rt1.c6)))OR(rt1.c2)))AND(rt1.c1)) END WHERE (((t0.c3) BETWEEN (CASE rt1.c2  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c4 END) AND ((~ (t0.c3))))) ORDER BY CAST((+ (t0.c0)) AS REAL) ASC  NULLS LAST, ((((((((rt1.c1)OR(t0.c3)))AND(x'd8')))AND(rt1.c3)))+(CAST(rt1.c2 AS BLOB))) ASC, ((((((((((t0.c2)AND(rt1.c0)))OR(t0.c4)))AND(rt1.c5)))OR(rt1.c3)))+(CAST('GScቭ|' AS BLOB)))  NULLS LAST LIMIT 0;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((rt1.c2) NOT BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (((rt1.c3)AND(t0.c2)))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((rt1.c2) NOT BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (((rt1.c3)AND(t0.c2)))))AND((((+ (t0.c0))) NOT BETWEEN (((rt1.c5)==(rt1.c1))) AND (((rt1.c5) BETWEEN (rt1.c5) AND (t0.c2))))))) ORDER BY CASE WHEN ((((rt1.c3)OR(t0.c1)))AND(t0.c3)) THEN ((((t0.c4)AND(t0.c3)))AND(rt1.c4)) WHEN ((((((rt1.c4)OR(t0.c4)))AND(t0.c0)))AND(t0.c3)) THEN rt1.c4 COLLATE RTRIM WHEN (((t0.c0, t0.c1))<=((t0.c0, t0.c0))) THEN UPPER(DISTINCT t0.c2) WHEN ((((((t0.c2)OR(rt1.c0)))AND(rt1.c1)))OR(t0.c3)) THEN (rt1.c1 IN (rt1.c3)) END, CAST((~ ('?Df-0')) AS REAL) INTERSECT SELECT COUNT(*) FROM rt1, t0 WHERE (CASE ((rt1.c3) BETWEEN (rt1.c0) AND (t0.c3))  WHEN NULL THEN ((t0.c3) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((((rt1.c5)AND(rt1.c0)))OR(rt1.c6)) THEN ((((((((((rt1.c3)AND(t0.c0)))OR(0x78235e3f)))AND(x'')))AND(rt1.c1)))OR(rt1.c2)) END) ORDER BY CASE WHEN ((((rt1.c3)OR(t0.c1)))AND(t0.c3)) THEN ((((t0.c4)AND(t0.c3)))AND(rt1.c4)) WHEN ((((((rt1.c4)OR(t0.c4)))AND(t0.c0)))AND(t0.c3)) THEN rt1.c4 COLLATE RTRIM WHEN (((t0.c0, t0.c1))<=((t0.c0, t0.c0))) THEN UPPER(DISTINCT t0.c2) WHEN ((((((t0.c2)OR(rt1.c0)))AND(rt1.c1)))OR(t0.c3)) THEN (rt1.c1 IN (rt1.c3)) END, CAST((~ ('?Df-0')) AS REAL);
SELECT MAX(rt1.c4) FROM rt1 WHERE (CASE WHEN rt1.c2 COLLATE NOCASE THEN CAST(rt1.c2 AS REAL) WHEN ((rt1.c3)IS(rt1.c4)) THEN (- (rt1.c6)) ELSE ((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c3)) END);
SELECT DISTINCT MAX(rt1.c4) FROM rt1 WHERE (((CASE WHEN rt1.c2 COLLATE NOCASE THEN CAST(rt1.c2 AS REAL) WHEN ((rt1.c3)IS(rt1.c4)) THEN (- (rt1.c6)) ELSE ((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c3)) END)AND((((((((- (rt1.c0)))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))))OR(((((((((rt1.c3)AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c4)))))OR(rt1.c4)))));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((((NULLIF(t0.c3, t0.c1))OR(((t0.c1) BETWEEN (t0.c4) AND (t0.c0)))))OR((('-1246367183') BETWEEN (t0.c3) AND (t0.c3)))))AND(t0.c1 COLLATE NOCASE)))OR(x'5e84d10dda')));
SELECT MIN(t0.c0) FROM t0 WHERE (((((((((NULLIF(t0.c3, t0.c1))OR(((t0.c1) BETWEEN (t0.c4) AND (t0.c0)))))OR((('-1246367183') BETWEEN (t0.c3) AND (t0.c3)))))AND(t0.c1 COLLATE NOCASE)))OR(x'5e84d10dda'))) LIMIT 0;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)<(CAST(t0.c3 AS REAL))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0)<(CAST(t0.c3 AS REAL))))AND(TYPEOF(CASE WHEN t0.c0 THEN t0.c3 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c4 ELSE x'9f48' END)))) ORDER BY (+ (t0.c3 COLLATE RTRIM))  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c3) ISNULL)) NOT NULL)) ORDER BY (+ (t0.c3 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c1)GLOB(rt1.c4)) IN (NULLIF(rt1.c1, rt1.c5))));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1)GLOB(rt1.c4)) IN (NULLIF(rt1.c1, rt1.c5))))AND((((((rt1.c6, rt1.c3)) NOT BETWEEN ((rt1.c3, rt1.c5)) AND ((x'05f3', rt1.c1)))) BETWEEN (CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c5 END) AND ((((rt1.c0, rt1.c0)) BETWEEN ((rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c2)))))))) ORDER BY ((((((((((((((((rt1.c6) BETWEEN (rt1.c3) AND (rt1.c3)))AND(((((((((((rt1.c5)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c6)))))OR(((((((rt1.c6)OR(rt1.c1)))OR(rt1.c4)))OR(rt1.c3)))))AND(CASE WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c3 WHEN '' THEN rt1.c3 END)))OR(CAST(rt1.c6 AS NUMERIC))))AND(((rt1.c6) ISNULL))))OR(((((((((((((rt1.c3)OR('2342307')))AND(NULL)))AND(rt1.c6)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c2)))))AND(((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)))) DESC, ((((rt1.c4) BETWEEN (-229228074) AND (x'')))<((((rt1.c6, rt1.c0)) BETWEEN ((rt1.c6, rt1.c5)) AND ((x'cc', rt1.c6))))) ASC;
SELECT ALL * FROM rt1 WHERE ((((rt1.c1)GLOB(rt1.c4)) IN (NULLIF(rt1.c1, rt1.c5))));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1)GLOB(rt1.c4)) IN (NULLIF(rt1.c1, rt1.c5))))AND((((((rt1.c6, rt1.c3)) NOT BETWEEN ((rt1.c3, rt1.c5)) AND ((x'05f3', rt1.c1)))) BETWEEN (CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c5 END) AND ((((rt1.c0, rt1.c0)) BETWEEN ((rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c2)))))))) ORDER BY ((((((((((((((((rt1.c6) BETWEEN (rt1.c3) AND (rt1.c3)))AND(((((((((((rt1.c5)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c6)))))OR(((((((rt1.c6)OR(rt1.c1)))OR(rt1.c4)))OR(rt1.c3)))))AND(CASE WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c3 WHEN '' THEN rt1.c3 END)))OR(CAST(rt1.c6 AS NUMERIC))))AND(((rt1.c6) ISNULL))))OR(((((((((((((rt1.c3)OR('2342307')))AND(NULL)))AND(rt1.c6)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c2)))))AND(((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)))) DESC, ((((rt1.c4) BETWEEN (-229228074) AND (x'')))<((((rt1.c6, rt1.c0)) BETWEEN ((rt1.c6, rt1.c5)) AND ((x'cc', rt1.c6))))) ASC;
SELECT * FROM rt1, t0 WHERE (((((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c6)))-(x''))) ORDER BY ((rt1.c3 COLLATE NOCASE) BETWEEN (t0.c0) AND (((rt1.c0)%(rt1.c3))))  NULLS FIRST, ((LIKELIHOOD(DISTINCT t0.c1, t0.c0))/(((rt1.c0)!=(rt1.c3)))) ASC;
SELECT * FROM rt1, t0 WHERE (((((((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c6)))-(x'')))AND((CASE WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c4 END IN (((((((((((t0.c3)OR(rt1.c2)))AND(NULL)))AND(rt1.c5)))AND(rt1.c5)))AND(t0.c1)), ((t0.c0) ISNULL)))))) ORDER BY ((NULL)OR(((((((((t0.c2)OR(t0.c0)))AND(rt1.c6)))OR(rt1.c0)))AND(rt1.c4)))) DESC, t0.c1 LIMIT 0x0;
SELECT * FROM rt1, t0 WHERE (((((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c6)))-(x''))) ORDER BY ((rt1.c3 COLLATE NOCASE) BETWEEN (t0.c0) AND (((rt1.c0)%(rt1.c3))))  NULLS FIRST, ((LIKELIHOOD(DISTINCT t0.c1, t0.c0))/(((rt1.c0)!=(rt1.c3)))) ASC;
SELECT COUNT(*) FROM rt1, t0 WHERE ((((rt1.c2 IN (rt1.c5))) NOT NULL));
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((rt1.c2 IN (rt1.c5))) NOT NULL))AND(((ABS(t0.c1)) NOT NULL)))) ORDER BY (((((rt1.c0, rt1.c2, t0.c1, t0.c2)) BETWEEN ((t0.c1, rt1.c0, rt1.c0, rt1.c6)) AND ((t0.c1, t0.c3, t0.c4, rt1.c4))))&(x'21'))  NULLS LAST, ((t0.c3)GLOB((((rt1.c3)) NOT BETWEEN ((t0.c4)) AND ((0.03447590830269931))))) ASC  NULLS LAST;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)>(t0.c0))) BETWEEN (((rt1.c6)LIKE(t0.c1))) AND (((rt1.c5)!=(rt1.c1)))) WHERE (((rt1.c6 COLLATE BINARY)>>((((t0.c1))<=((rt1.c2)))))) ORDER BY ((DATE(x'', t0.c3, t0.c0, rt1.c5))IS(((rt1.c1)GLOB(t0.c1)))) ASC;
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)>(t0.c0))) BETWEEN (((rt1.c6)LIKE(t0.c1))) AND (((rt1.c5)<>(rt1.c1)))) WHERE (((((rt1.c6 COLLATE BINARY)>>((((t0.c1))<=((rt1.c2))))))AND((((t0.c4 IN ())) NOTNULL)))) ORDER BY ((((rt1.c2)OR(UNLIKELY(DISTINCT t0.c4))))AND((rt1.c2 IN ()))) DESC  NULLS FIRST, NULL ASC  NULLS LAST LIMIT 0X3 INTERSECT SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)>(t0.c0))) BETWEEN (((rt1.c6)LIKE(t0.c1))) AND (((rt1.c5)!=(rt1.c1)))) WHERE (((0.7390647611456276) NOT NULL)) ORDER BY ((((rt1.c2)OR(UNLIKELY(DISTINCT t0.c4))))AND((rt1.c2 IN ()))) DESC  NULLS FIRST, NULL ASC  NULLS LAST LIMIT 3;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)>(t0.c0))) BETWEEN (((rt1.c6)LIKE(t0.c1))) AND (((rt1.c5)!=(rt1.c1)))) WHERE (((rt1.c6 COLLATE BINARY)>>((((t0.c1))<=((rt1.c2)))))) ORDER BY ((DATE(x'', t0.c3, t0.c0, rt1.c5))IS(((rt1.c1)GLOB(t0.c1)))) ASC;
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)>(t0.c0))) BETWEEN (((rt1.c6)LIKE(t0.c1))) AND (((rt1.c5)<>(rt1.c1)))) WHERE (((((rt1.c6 COLLATE BINARY)>>((((t0.c1))<=((rt1.c2))))))AND((((t0.c4 IN ())) NOTNULL)))) ORDER BY ((((rt1.c2)OR(UNLIKELY(DISTINCT t0.c4))))AND((rt1.c2 IN ()))) DESC  NULLS FIRST, NULL ASC  NULLS LAST LIMIT 0X3 INTERSECT SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)>(t0.c0))) BETWEEN (((rt1.c6)LIKE(t0.c1))) AND (((rt1.c5)!=(rt1.c1)))) WHERE (((0.7390647611456276) NOT NULL)) ORDER BY ((((rt1.c2)OR(UNLIKELY(DISTINCT t0.c4))))AND((rt1.c2 IN ()))) DESC  NULLS FIRST, NULL ASC  NULLS LAST LIMIT 3;
SELECT ALL COUNT(*) FROM rt1 WHERE (UNLIKELY(NULL) COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (UNLIKELY(NULL) COLLATE RTRIM) INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((rt1.c3)AND(rt1.c0)))AND(((rt1.c6) BETWEEN (rt1.c4) AND (rt1.c1)))));
SELECT MIN(t0.c0) FROM t0 WHERE (((((((((((t0.c4)OR(t0.c3)))AND(((0.9631170960725886) BETWEEN ('>Ti45') AND (t0.c0)))))OR(t0.c3 COLLATE BINARY)))OR(CAST(t0.c1 AS REAL))))OR(t0.c1 COLLATE RTRIM))) ORDER BY ((((t0.c2)GLOB(0.7070895195639688))) IS FALSE)  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((((((t0.c4)OR(t0.c3)))AND(((0.9631170960725886) BETWEEN ('>Ti45') AND (t0.c0)))))OR(t0.c3 COLLATE BINARY)))OR(CAST(t0.c1 AS REAL))))OR(t0.c1 COLLATE RTRIM))) ORDER BY t0.c1 COLLATE RTRIM  NULLS LAST, ((t0.c1) BETWEEN (t0.c4) AND (t0.c0)) COLLATE RTRIM, 1239046975 ASC INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE ((((t0.c1, t0.c4, t0.c2)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c3 WHEN t0.c1 THEN t0.c1 END, t0.c3, (t0.c4 IN (t0.c0)))) AND (((t0.c1 IN (t0.c3)), CAST(t0.c3 AS REAL), t0.c0)))) ORDER BY t0.c1 COLLATE RTRIM  NULLS LAST, ((t0.c1) BETWEEN (t0.c4) AND (t0.c0)) COLLATE RTRIM, 1239046975 ASC;
SELECT ALL * FROM rt1 WHERE (((rt1.c6 COLLATE RTRIM) BETWEEN (((((rt1.c4)OR(rt1.c3)))AND(rt1.c1))) AND ((NOT (rt1.c5))))) ORDER BY rt1.c4, CAST((- (rt1.c5)) AS TEXT) ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (((((rt1.c6 COLLATE RTRIM) BETWEEN (((((rt1.c4)OR(rt1.c3)))AND(rt1.c1))) AND ((NOT (rt1.c5)))))AND(((((rt1.c3)-(rt1.c2)))==(LOWER(DISTINCT rt1.c1)))))) ORDER BY rt1.c4, CAST((- (rt1.c5)) AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((rt1.c6 COLLATE RTRIM) BETWEEN (((((rt1.c4)OR(rt1.c3)))AND(rt1.c1))) AND ((NOT (rt1.c5))))) ORDER BY rt1.c4, CAST((- (rt1.c5)) AS TEXT) ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (((((rt1.c6 COLLATE RTRIM) BETWEEN (((((rt1.c4)OR(rt1.c3)))AND(rt1.c1))) AND ((NOT (rt1.c5)))))AND(((((rt1.c3)-(rt1.c2)))==(LOWER(DISTINCT rt1.c1)))))) ORDER BY rt1.c4, CAST((- (rt1.c5)) AS TEXT) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c5) NOT BETWEEN (rt1.c4) AND (rt1.c1)) IN (rt1.c2 COLLATE BINARY))) ORDER BY ((((rt1.c6)OR(((rt1.c3)LIKE(rt1.c4)))))AND((rt1.c4 IN ()))) DESC  NULLS FIRST, load_extension((('	') NOT BETWEEN (rt1.c4) AND (rt1.c0)), ((rt1.c5)|(rt1.c4)));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((((rt1.c5) NOT BETWEEN (rt1.c4) AND (rt1.c1)) IN (rt1.c2 COLLATE BINARY)))AND(TYPEOF(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)))))) ORDER BY NULL ASC  NULLS LAST, rt1.c3 ASC LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((NULL)) NOT BETWEEN ((CAST(rt1.c6 AS TEXT))) AND (((rt1.c0 IN ()))))) ORDER BY NULL ASC  NULLS LAST, rt1.c3 ASC LIMIT 0x2;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (rt1.c4 COLLATE RTRIM) ORDER BY ((((t0.c2)+(rt1.c1))) NOT BETWEEN (((0x8a63fe1)GLOB(t0.c2))) AND (((rt1.c2)>(t0.c4))));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((rt1.c4 COLLATE RTRIM)AND(CAST(t0.c3 AS BLOB)))) ORDER BY CAST(((rt1.c0)IS(t0.c3)) AS REAL), (((0.6457468699996568) BETWEEN (rt1.c0) AND (t0.c3)) IN (((t0.c3) NOT BETWEEN (rt1.c6) AND (NULL)))) DESC  NULLS FIRST INTERSECT SELECT * FROM rt1 NATURAL JOIN t0 WHERE ((((+ (t0.c1))) NOT BETWEEN (t0.c4 COLLATE BINARY) AND (GLOB(rt1.c3, rt1.c0)))) ORDER BY CAST(((rt1.c0)IS(t0.c3)) AS REAL), (((0.6457468699996568) BETWEEN (rt1.c0) AND (t0.c3)) IN (((t0.c3) NOT BETWEEN (rt1.c6) AND (NULL)))) DESC  NULLS FIRST;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (rt1.c4 COLLATE RTRIM) ORDER BY ((((t0.c2)+(rt1.c1))) NOT BETWEEN (((0x8a63fe1)GLOB(t0.c2))) AND (((rt1.c2)>(t0.c4))));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((rt1.c4 COLLATE RTRIM)AND(CAST(t0.c3 AS BLOB)))) ORDER BY CAST(((rt1.c0)IS(t0.c3)) AS REAL), (((0.6457468699996568) BETWEEN (rt1.c0) AND (t0.c3)) IN (((t0.c3) NOT BETWEEN (rt1.c6) AND (NULL)))) DESC  NULLS FIRST INTERSECT SELECT * FROM rt1 NATURAL JOIN t0 WHERE ((((+ (t0.c1))) NOT BETWEEN (t0.c4 COLLATE BINARY) AND (GLOB(rt1.c3, rt1.c0)))) ORDER BY CAST(((rt1.c0)IS(t0.c3)) AS REAL), (((0.6457468699996568) BETWEEN (rt1.c0) AND (t0.c3)) IN (((t0.c3) NOT BETWEEN (rt1.c6) AND (NULL)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (CAST((((t0.c3)) NOT BETWEEN ((rt1.c4)) AND ((t0.c0))) AS BLOB));
SELECT * FROM t0, rt1 WHERE (CAST((((t0.c3)) NOT BETWEEN ((rt1.c4)) AND ((t0.c0))) AS BLOB)) ORDER BY 0.4815213229636066 DESC  NULLS LAST, HEX(DISTINCT ((rt1.c0)+(t0.c2))) DESC  NULLS LAST, ((((((((PRINTF(rt1.c0, rt1.c1, rt1.c1))OR(((rt1.c3) NOT BETWEEN (rt1.c6) AND (rt1.c2)))))OR(((t0.c3)GLOB(t0.c2)))))OR('2010461842')))OR(CASE rt1.c0  WHEN rt1.c5 THEN 0.6257287008089214 ELSE t0.c1 END)) LIMIT 1 INTERSECT SELECT * FROM t0, rt1 WHERE ((NOT (((t0.c1)||('-248273772'))))) ORDER BY 0.4815213229636066 DESC  NULLS LAST, HEX(DISTINCT ((rt1.c0)+(t0.c2))) DESC  NULLS LAST, ((((((((PRINTF(rt1.c0, rt1.c1, rt1.c1))OR(((rt1.c3) NOT BETWEEN (rt1.c6) AND (rt1.c2)))))OR(((t0.c3)GLOB(t0.c2)))))OR('2010461842')))OR(CASE rt1.c0  WHEN rt1.c5 THEN 0.6257287008089214 ELSE t0.c1 END)) LIMIT 0x1;
SELECT ALL * FROM t0, rt1 WHERE (CAST((((t0.c3)) NOT BETWEEN ((rt1.c4)) AND ((t0.c0))) AS BLOB));
SELECT * FROM t0, rt1 WHERE (CAST((((t0.c3)) NOT BETWEEN ((rt1.c4)) AND ((t0.c0))) AS BLOB)) ORDER BY 0.4815213229636066 DESC  NULLS LAST, HEX(DISTINCT ((rt1.c0)+(t0.c2))) DESC  NULLS LAST, ((((((((PRINTF(rt1.c0, rt1.c1, rt1.c1))OR(((rt1.c3) NOT BETWEEN (rt1.c6) AND (rt1.c2)))))OR(((t0.c3)GLOB(t0.c2)))))OR('2010461842')))OR(CASE rt1.c0  WHEN rt1.c5 THEN 0.6257287008089214 ELSE t0.c1 END)) LIMIT 1 INTERSECT SELECT * FROM t0, rt1 WHERE ((NOT (((t0.c1)||('-248273772'))))) ORDER BY 0.4815213229636066 DESC  NULLS LAST, HEX(DISTINCT ((rt1.c0)+(t0.c2))) DESC  NULLS LAST, ((((((((PRINTF(rt1.c0, rt1.c1, rt1.c1))OR(((rt1.c3) NOT BETWEEN (rt1.c6) AND (rt1.c2)))))OR(((t0.c3)GLOB(t0.c2)))))OR('2010461842')))OR(CASE rt1.c0  WHEN rt1.c5 THEN 0.6257287008089214 ELSE t0.c1 END)) LIMIT 0x1;
SELECT * FROM rt1 WHERE (((((rt1.c6) NOT NULL))+(CAST(rt1.c2 AS INTEGER))));
SELECT * FROM rt1 WHERE (((((rt1.c6) NOT NULL))+(CAST(rt1.c2 AS INTEGER)))) LIMIT 0X2;
SELECT * FROM rt1 WHERE (((((rt1.c6) NOT NULL))+(CAST(rt1.c2 AS INTEGER))));
SELECT * FROM rt1 WHERE (((((rt1.c6) NOT NULL))+(CAST(rt1.c2 AS INTEGER)))) LIMIT 0X2;
SELECT MIN(t0.c1) FROM t0 WHERE (LIKELIHOOD(((t0.c3) BETWEEN (t0.c2) AND (t0.c3)), t0.c0 COLLATE NOCASE));
SELECT DISTINCT MIN(t0.c1) FROM t0 WHERE (LIKELIHOOD(((t0.c3) BETWEEN (t0.c2) AND (t0.c3)), t0.c0 COLLATE NOCASE)) ORDER BY CAST(((t0.c3)>(t0.c0)) AS REAL) DESC LIMIT 0 INTERSECT SELECT DISTINCT MIN(t0.c1) FROM t0 WHERE (CAST(((t0.c4)<=(t0.c3)) AS TEXT)) ORDER BY CAST(((t0.c3)>(t0.c0)) AS REAL) DESC LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (t0.c3) ORDER BY rt1.c5 DESC  NULLS FIRST, (~ (((t0.c1) NOT BETWEEN (rt1.c2) AND (t0.c4))))  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c3)AND((((((((((rt1.c2)AND(rt1.c0)))AND(t0.c0)))OR(t0.c3)))AND(rt1.c6)) IN (((t0.c2)==(t0.c1)), ((0X1bd92bb2) NOT BETWEEN (rt1.c2) AND (rt1.c3))))))) ORDER BY ABS(rt1.c3) DESC, CAST((((rt1.c0))==((rt1.c1))) AS INTEGER) ASC LIMIT 0x4 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (rt1.c2) ORDER BY ABS(rt1.c3) DESC, CAST((((rt1.c0))==((rt1.c1))) AS INTEGER) ASC LIMIT 0X4;
SELECT ALL * FROM rt1, t0 WHERE (t0.c3) ORDER BY rt1.c5 DESC  NULLS FIRST, (~ (((t0.c1) NOT BETWEEN (rt1.c2) AND (t0.c4))))  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c3)AND((((((((((rt1.c2)AND(rt1.c0)))AND(t0.c0)))OR(t0.c3)))AND(rt1.c6)) IN (((t0.c2)==(t0.c1)), ((0X1bd92bb2) NOT BETWEEN (rt1.c2) AND (rt1.c3))))))) ORDER BY ABS(rt1.c3) DESC, CAST((((rt1.c0))==((rt1.c1))) AS INTEGER) ASC LIMIT 0x4 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (rt1.c2) ORDER BY ABS(rt1.c3) DESC, CAST((((rt1.c0))==((rt1.c1))) AS INTEGER) ASC LIMIT 0X4;
SELECT ALL * FROM t0 WHERE (((((t0.c1)-(t0.c2))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0))) AND (((((t0.c0)AND(t0.c0)))AND(x'')))));
SELECT * FROM t0 WHERE (((((t0.c1)-(t0.c2))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0))) AND (((((t0.c0)AND(t0.c0)))AND(x''))))) ORDER BY t0.c0 LIMIT 0x2 INTERSECT SELECT ALL * FROM t0 WHERE (0.5733275113138827) ORDER BY t0.c0 LIMIT 2;
SELECT ALL * FROM t0 WHERE (((((t0.c1)-(t0.c2))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0))) AND (((((t0.c0)AND(t0.c0)))AND(x'')))));
SELECT * FROM t0 WHERE (((((t0.c1)-(t0.c2))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c0))) AND (((((t0.c0)AND(t0.c0)))AND(x''))))) ORDER BY t0.c0 LIMIT 0x2 INTERSECT SELECT ALL * FROM t0 WHERE (0.5733275113138827) ORDER BY t0.c0 LIMIT 2;
SELECT ALL MIN(t0.c3) FROM t0 WHERE ((((- (t0.c2)))OR(((t0.c2)<<(t0.c2)))));
SELECT ALL MIN(t0.c3) FROM t0 WHERE ((((- (t0.c2)))OR(((t0.c2)<<(t0.c2)))));
SELECT * FROM rt1 WHERE ((((rt1.c1) IS FALSE) IN ((rt1.c5 IN (rt1.c5))))) ORDER BY (((rt1.c4 IN (rt1.c3, '-134458342', rt1.c5)))>(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)))) DESC, CASE WHEN ((rt1.c1)GLOB(rt1.c0)) THEN x'd1' WHEN ((NULL) NOT BETWEEN (rt1.c6) AND (rt1.c4)) THEN ((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c1)) ELSE 0.9047286469910235 END  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c1) IS FALSE) IN ((rt1.c5 IN (rt1.c5)))))AND(CASE LIKELY(DISTINCT rt1.c1)  WHEN (((rt1.c5, rt1.c0, rt1.c6, rt1.c6, rt1.c3))<=((rt1.c3, rt1.c2, rt1.c3, rt1.c5, rt1.c5))) THEN CASE WHEN 0.3832386726858822 THEN 0.24002120252617443 END WHEN UNLIKELY(rt1.c4) THEN ((rt1.c2) IS FALSE) WHEN ((rt1.c4)!=(rt1.c1)) THEN NULL END))) ORDER BY (((rt1.c4 IN (rt1.c3, '-134458342', rt1.c5)))>(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)))) DESC, CASE WHEN ((rt1.c1)GLOB(rt1.c0)) THEN x'd1' WHEN ((NULL) NOT BETWEEN (rt1.c6) AND (rt1.c4)) THEN ((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c1)) ELSE 0.9047286469910235 END  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c6)OR(json_type(rt1.c5))))OR((NOT (rt1.c0)))))AND('886054297'))) ORDER BY (((rt1.c4 IN (rt1.c3, '-134458342', rt1.c5)))>(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)))) DESC, CASE WHEN ((rt1.c1)GLOB(rt1.c0)) THEN x'd1' WHEN ((NULL) NOT BETWEEN (rt1.c6) AND (rt1.c4)) THEN ((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c1)) ELSE 0.9047286469910235 END  NULLS LAST LIMIT 0x0;
SELECT * FROM rt1 WHERE ((((rt1.c1) IS FALSE) IN ((rt1.c5 IN (rt1.c5))))) ORDER BY (((rt1.c4 IN (rt1.c3, '-134458342', rt1.c5)))>(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)))) DESC, CASE WHEN ((rt1.c1)GLOB(rt1.c0)) THEN x'd1' WHEN ((NULL) NOT BETWEEN (rt1.c6) AND (rt1.c4)) THEN ((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c1)) ELSE 0.9047286469910235 END  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c1) IS FALSE) IN ((rt1.c5 IN (rt1.c5)))))AND(CASE LIKELY(DISTINCT rt1.c1)  WHEN (((rt1.c5, rt1.c0, rt1.c6, rt1.c6, rt1.c3))<=((rt1.c3, rt1.c2, rt1.c3, rt1.c5, rt1.c5))) THEN CASE WHEN 0.3832386726858822 THEN 0.24002120252617443 END WHEN UNLIKELY(rt1.c4) THEN ((rt1.c2) IS FALSE) WHEN ((rt1.c4)!=(rt1.c1)) THEN NULL END))) ORDER BY (((rt1.c4 IN (rt1.c3, '-134458342', rt1.c5)))>(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)))) DESC, CASE WHEN ((rt1.c1)GLOB(rt1.c0)) THEN x'd1' WHEN ((NULL) NOT BETWEEN (rt1.c6) AND (rt1.c4)) THEN ((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c1)) ELSE 0.9047286469910235 END  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c6)OR(json_type(rt1.c5))))OR((NOT (rt1.c0)))))AND('886054297'))) ORDER BY (((rt1.c4 IN (rt1.c3, '-134458342', rt1.c5)))>(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)))) DESC, CASE WHEN ((rt1.c1)GLOB(rt1.c0)) THEN x'd1' WHEN ((NULL) NOT BETWEEN (rt1.c6) AND (rt1.c4)) THEN ((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c1)) ELSE 0.9047286469910235 END  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE (load_extension(((((((((((rt1.c2)OR(rt1.c5)))AND(rt1.c6)))OR(t0.c4)))AND(rt1.c2)))AND('882744025'))));
SELECT ALL * FROM t0, rt1 WHERE (((load_extension(((((((((((rt1.c2)OR(rt1.c5)))AND(rt1.c6)))OR(t0.c4)))AND(rt1.c2)))AND('882744025'))))AND(CASE WHEN (((t0.c3))==((rt1.c4))) THEN CAST(x'' AS REAL) WHEN rt1.c5 COLLATE RTRIM THEN CAST(rt1.c4 AS NUMERIC) END))) ORDER BY ((-8.8950827E8)GLOB(((rt1.c2)>=(rt1.c5)))) DESC, (rt1.c3 IN ()) COLLATE BINARY DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT * FROM t0, rt1 WHERE ((((rt1.c5, rt1.c5, rt1.c1, t0.c3, t0.c4)) NOT BETWEEN ((t0.c2, rt1.c5, t0.c3, t0.c2, rt1.c6)) AND ((t0.c3, rt1.c2, t0.c0, rt1.c3, t0.c3))) COLLATE BINARY COLLATE BINARY) ORDER BY ((-8.8950827E8)GLOB(((rt1.c2)>=(rt1.c5)))) DESC, (rt1.c3 IN ()) COLLATE BINARY DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE (load_extension(((((((((((rt1.c2)OR(rt1.c5)))AND(rt1.c6)))OR(t0.c4)))AND(rt1.c2)))AND('882744025'))));
SELECT * FROM rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY (~ (((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c1)))) ASC, CASE WHEN ((rt1.c5)>=(rt1.c0)) THEN ((rt1.c5)*(rt1.c1)) WHEN TRIM(DISTINCT rt1.c0, rt1.c1) THEN (((rt1.c3, NULL, NULL))<=((NULL, rt1.c0, x'07a781'))) END ASC;
SELECT * FROM rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY (~ (((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c1)))) ASC, CASE WHEN ((rt1.c5)>=(rt1.c0)) THEN ((rt1.c5)*(rt1.c1)) WHEN TRIM(DISTINCT rt1.c0, rt1.c1) THEN (((rt1.c3, NULL, NULL))<=((NULL, rt1.c0, x'07a781'))) END ASC LIMIT 0x0 INTERSECT SELECT * FROM rt1 WHERE ((NOT (((rt1.c2) NOTNULL)))) ORDER BY (~ (((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c1)))) ASC, CASE WHEN ((rt1.c5)>=(rt1.c0)) THEN ((rt1.c5)*(rt1.c1)) WHEN TRIM(DISTINCT rt1.c0, rt1.c1) THEN (((rt1.c3, NULL, NULL))<=((NULL, rt1.c0, x'07a781'))) END ASC LIMIT 0x0;
SELECT * FROM rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY (~ (((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c1)))) ASC, CASE WHEN ((rt1.c5)>=(rt1.c0)) THEN ((rt1.c5)*(rt1.c1)) WHEN TRIM(DISTINCT rt1.c0, rt1.c1) THEN (((rt1.c3, NULL, NULL))<=((NULL, rt1.c0, x'07a781'))) END ASC;
SELECT * FROM rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY (~ (((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c1)))) ASC, CASE WHEN ((rt1.c5)>=(rt1.c0)) THEN ((rt1.c5)*(rt1.c1)) WHEN TRIM(DISTINCT rt1.c0, rt1.c1) THEN (((rt1.c3, NULL, NULL))<=((NULL, rt1.c0, x'07a781'))) END ASC LIMIT 0x0 INTERSECT SELECT * FROM rt1 WHERE ((NOT (((rt1.c2) NOTNULL)))) ORDER BY (~ (((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c1)))) ASC, CASE WHEN ((rt1.c5)>=(rt1.c0)) THEN ((rt1.c5)*(rt1.c1)) WHEN TRIM(DISTINCT rt1.c0, rt1.c1) THEN (((rt1.c3, NULL, NULL))<=((NULL, rt1.c0, x'07a781'))) END ASC LIMIT 0x0;
SELECT * FROM t0 WHERE (((((t0.c4) NOT NULL))%(((t0.c0)LIKE(t0.c0))))) ORDER BY ((((-983457725) NOT NULL)) BETWEEN ((+ ('-528801166'))) AND (LOWER(t0.c3))) ASC  NULLS LAST, (- ((t0.c2 IN (t0.c3))));
SELECT ALL * FROM t0 WHERE (((((t0.c4) NOT NULL))%(((t0.c0)LIKE(t0.c0))))) ORDER BY ((((0xffffffffc561a043) NOT NULL)) BETWEEN ((+ ('-528801166'))) AND (LOWER(t0.c3))) ASC  NULLS LAST, (- ((t0.c2 IN (t0.c3)))) INTERSECT SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN t0.c0 THEN t0.c2 END COLLATE BINARY) ORDER BY ((((-983457725) NOT NULL)) BETWEEN ((+ ('-528801166'))) AND (LOWER(t0.c3))) ASC  NULLS LAST, (- ((t0.c2 IN (t0.c3))));
SELECT * FROM t0 WHERE (((((t0.c4) NOT NULL))%(((t0.c0)LIKE(t0.c0))))) ORDER BY ((((-983457725) NOT NULL)) BETWEEN ((+ ('-528801166'))) AND (LOWER(t0.c3))) ASC  NULLS LAST, (- ((t0.c2 IN (t0.c3))));
SELECT ALL * FROM t0 WHERE (((((t0.c4) NOT NULL))%(((t0.c0)LIKE(t0.c0))))) ORDER BY ((((0xffffffffc561a043) NOT NULL)) BETWEEN ((+ ('-528801166'))) AND (LOWER(t0.c3))) ASC  NULLS LAST, (- ((t0.c2 IN (t0.c3)))) INTERSECT SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN t0.c0 THEN t0.c2 END COLLATE BINARY) ORDER BY ((((-983457725) NOT NULL)) BETWEEN ((+ ('-528801166'))) AND (LOWER(t0.c3))) ASC  NULLS LAST, (- ((t0.c2 IN (t0.c3))));
SELECT * FROM t0, rt1 WHERE (rt1.c3);
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c3)AND(CAST(CHAR(rt1.c3, rt1.c3, rt1.c0) AS REAL))));
SELECT * FROM t0, rt1 WHERE (rt1.c3);
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c3)AND(CAST(CHAR(rt1.c3, rt1.c3, rt1.c0) AS REAL))));
SELECT ALL MIN(rt1.c3) FROM rt1, t0 WHERE ((((((rt1.c4, t0.c4, rt1.c3, rt1.c1))=((t0.c4, t0.c2, 4.6721733E8, -226271228))))IS(((rt1.c2)-(rt1.c3))))) ORDER BY (((rt1.c1, t0.c0)) BETWEEN ((t0.c2, CAST(rt1.c1 AS INTEGER))) AND ((((((((((((rt1.c3)OR(t0.c1)))OR(rt1.c1)))OR(t0.c2)))OR(rt1.c1)))AND(rt1.c3)), ((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c2))))) ASC  NULLS LAST;
SELECT DISTINCT MIN(rt1.c3) FROM rt1, t0 WHERE ((((((rt1.c4, t0.c4, rt1.c3, rt1.c1))=((t0.c4, t0.c2, 4.6721733E8, -226271228))))IS(((rt1.c2)-(rt1.c3))))) ORDER BY (((rt1.c1, t0.c0)) BETWEEN ((t0.c2, CAST(rt1.c1 AS INTEGER))) AND ((((((((((((rt1.c3)OR(t0.c1)))OR(rt1.c1)))OR(t0.c2)))OR(rt1.c1)))AND(rt1.c3)), ((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c2))))) ASC  NULLS LAST INTERSECT SELECT DISTINCT MIN(rt1.c3) FROM rt1, t0 WHERE ((((((((t0.c1, t0.c1, t0.c1)) BETWEEN ((rt1.c1, rt1.c5, rt1.c3)) AND ((t0.c1, t0.c4, rt1.c4))))AND(((rt1.c5)>>(t0.c2)))))OR(rtreenode(t0.c0, rt1.c3)))) ORDER BY (((rt1.c1, t0.c0)) BETWEEN ((t0.c2, CAST(rt1.c1 AS INTEGER))) AND ((((((((((((rt1.c3)OR(t0.c1)))OR(rt1.c1)))OR(t0.c2)))OR(rt1.c1)))AND(rt1.c3)), ((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c2))))) ASC  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN rt1 ON rt1.c2 WHERE (0.7233222966887922);
SELECT * FROM t0 INNER JOIN rt1 ON rt1.c2 WHERE (0.7233222966887922);
SELECT ALL * FROM t0 INNER JOIN rt1 ON rt1.c2 WHERE (0.7233222966887922);
SELECT * FROM t0 INNER JOIN rt1 ON rt1.c2 WHERE (0.7233222966887922);
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c2)<(t0.c1)))LIKE((0.29446697668233723 IN (0x45f73bb4)))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c2)<(t0.c1)))LIKE((0.29446697668233723 IN (0x45f73bb4))))) LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c2)<(t0.c1)))LIKE((0.29446697668233723 IN (0x45f73bb4)))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c2)<(t0.c1)))LIKE((0.29446697668233723 IN (0x45f73bb4))))) LIMIT 1;
SELECT * FROM t0 WHERE ((+ ((NOT (t0.c2)))));
SELECT DISTINCT * FROM t0 WHERE ((+ ((NOT (t0.c2))))) ORDER BY (((((t0.c3, 0.153993710766271)) NOT BETWEEN ((t0.c0, t0.c3)) AND ((t0.c3, x'')))) ISNULL) LIMIT 3;
SELECT * FROM t0 WHERE ((+ ((NOT (t0.c2)))));
SELECT DISTINCT * FROM t0 WHERE ((+ ((NOT (t0.c2))))) ORDER BY (((((t0.c3, 0.153993710766271)) NOT BETWEEN ((t0.c0, t0.c3)) AND ((t0.c3, x'')))) ISNULL) LIMIT 3;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c5);
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((rt1.c5)AND((((rt1.c2 IN ())) BETWEEN (((((((((rt1.c4)AND(rt1.c2)))OR(rt1.c5)))OR(rt1.c6)))AND(rt1.c1))) AND ((NOT (rt1.c2))))))) ORDER BY ((((((((CASE rt1.c4  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c6 ELSE rt1.c4 END)AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))OR((- (rt1.c1)))))OR(((rt1.c6) IS TRUE))))AND(LIKELIHOOD(rt1.c6, rt1.c3))) DESC LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c4 END)AND((t0.c4 IN ()))));
SELECT * FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c4 END)AND((t0.c4 IN ()))));
SELECT ALL * FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c4 END)AND((t0.c4 IN ()))));
SELECT * FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c4 END)AND((t0.c4 IN ()))));
SELECT * FROM t0 WHERE (((t0.c1)||(t0.c0)) COLLATE RTRIM) ORDER BY '' DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c1)||(t0.c0)) COLLATE RTRIM) ORDER BY '' DESC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (0.660229331008775) ORDER BY '' DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((t0.c1)||(t0.c0)) COLLATE RTRIM) ORDER BY '' DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c1)||(t0.c0)) COLLATE RTRIM) ORDER BY '' DESC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (0.660229331008775) ORDER BY '' DESC  NULLS LAST;
SELECT * FROM rt1 WHERE ((~ (rt1.c3)) COLLATE RTRIM);
SELECT * FROM rt1 WHERE ((((~ (rt1.c3)) COLLATE RTRIM)AND((('-1446379791') NOTNULL)))) LIMIT 0 INTERSECT SELECT * FROM rt1 WHERE ((CASE WHEN rt1.c3 THEN '1967614267' WHEN rt1.c1 THEN '' WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c1 END IN ())) LIMIT 0;
SELECT * FROM rt1 WHERE ((~ (rt1.c3)) COLLATE RTRIM);
SELECT * FROM rt1 WHERE ((((~ (rt1.c3)) COLLATE RTRIM)AND((('-1446379791') NOTNULL)))) LIMIT 0 INTERSECT SELECT * FROM rt1 WHERE ((CASE WHEN rt1.c3 THEN '1967614267' WHEN rt1.c1 THEN '' WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c1 END IN ())) LIMIT 0;
SELECT * FROM t0, rt1 WHERE ((((t0.c3 IN ())) BETWEEN (t0.c4 COLLATE BINARY) AND (t0.c2 COLLATE RTRIM)));
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c3 IN ())) BETWEEN (t0.c4 COLLATE BINARY) AND (t0.c2 COLLATE RTRIM))) LIMIT 1 INTERSECT SELECT * FROM t0, rt1 WHERE (rt1.c2) LIMIT 0X1;
SELECT * FROM t0, rt1 WHERE ((((t0.c3 IN ())) BETWEEN (t0.c4 COLLATE BINARY) AND (t0.c2 COLLATE RTRIM)));
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c3 IN ())) BETWEEN (t0.c4 COLLATE BINARY) AND (t0.c2 COLLATE RTRIM))) LIMIT 1 INTERSECT SELECT * FROM t0, rt1 WHERE (rt1.c2) LIMIT 0X1;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((- (rt1.c1)) IN (NULL))) ORDER BY (t0.c0 IN (x'd9'));
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((- (rt1.c1)) IN (NULL))) ORDER BY json_array_length(((rt1.c6) NOT NULL), ((t0.c2) ISNULL)), (rt1.c4 COLLATE RTRIM IN (((rt1.c4) NOT NULL)))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((~ (((NULL) BETWEEN (1.823274675E9) AND (t0.c3))))) ORDER BY json_array_length(((rt1.c6) NOT NULL), ((t0.c2) ISNULL)), (rt1.c4 COLLATE RTRIM IN (((rt1.c4) NOT NULL)))  NULLS FIRST LIMIT 0x1;
SELECT * FROM t0, rt1 WHERE (((CAST(t0.c2 AS BLOB))=(TRIM(rt1.c4, rt1.c4))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(t0.c2 AS BLOB))=(TRIM(rt1.c4, rt1.c4)))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((~ (rt1.c4)))%(((t0.c4) IS TRUE))));
SELECT * FROM t0, rt1 WHERE (((CAST(t0.c2 AS BLOB))=(TRIM(rt1.c4, rt1.c4))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(t0.c2 AS BLOB))=(TRIM(rt1.c4, rt1.c4)))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((~ (rt1.c4)))%(((t0.c4) IS TRUE))));
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c5 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c5 AS TEXT) COLLATE NOCASE) INTERSECT SELECT * FROM rt1 WHERE (((UNLIKELY(DISTINCT rt1.c1))/((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))))));
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c5 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c5 AS TEXT) COLLATE NOCASE) INTERSECT SELECT * FROM rt1 WHERE (((UNLIKELY(DISTINCT rt1.c1))/((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))))));
SELECT * FROM rt1, t0 WHERE (((NULL)>>(((rt1.c1)||(t0.c0)))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((NULL)>>(((rt1.c1)||(t0.c0)))));
SELECT * FROM rt1, t0 WHERE (((NULL)>>(((rt1.c1)||(t0.c0)))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((NULL)>>(((rt1.c1)||(t0.c0)))));
SELECT * FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c1 END)AND(NULL)))AND(UNLIKELY(DISTINCT rt1.c5)))) ORDER BY (- (((((rt1.c1)OR(0.9138718745657523)))OR(rt1.c4)))) ASC, CASE ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c4))  WHEN 0X116b3e3a THEN ((rt1.c0) NOTNULL) ELSE (((rt1.c4, rt1.c5)) NOT BETWEEN ((rt1.c1, rt1.c3)) AND ((rt1.c1, rt1.c0))) END  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c1 END)AND(NULL)))AND(UNLIKELY(DISTINCT rt1.c5)))) ORDER BY (- (((((rt1.c1)OR(0.9138718745657523)))OR(rt1.c4)))) ASC, CASE ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c4))  WHEN 292240954 THEN ((rt1.c0) NOTNULL) ELSE (((rt1.c4, rt1.c5)) NOT BETWEEN ((rt1.c1, rt1.c3)) AND ((rt1.c1, rt1.c0))) END  NULLS LAST;
SELECT * FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c1 END)AND(NULL)))AND(UNLIKELY(DISTINCT rt1.c5)))) ORDER BY (- (((((rt1.c1)OR(0.9138718745657523)))OR(rt1.c4)))) ASC, CASE ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c4))  WHEN 0X116b3e3a THEN ((rt1.c0) NOTNULL) ELSE (((rt1.c4, rt1.c5)) NOT BETWEEN ((rt1.c1, rt1.c3)) AND ((rt1.c1, rt1.c0))) END  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c1 END)AND(NULL)))AND(UNLIKELY(DISTINCT rt1.c5)))) ORDER BY (- (((((rt1.c1)OR(0.9138718745657523)))OR(rt1.c4)))) ASC, CASE ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c4))  WHEN 292240954 THEN ((rt1.c0) NOTNULL) ELSE (((rt1.c4, rt1.c5)) NOT BETWEEN ((rt1.c1, rt1.c3)) AND ((rt1.c1, rt1.c0))) END  NULLS LAST;
SELECT * FROM rt1, t0 WHERE ((NOT (((0.8143859891652997) NOT NULL)))) ORDER BY ((((t0.c0) BETWEEN (rt1.c1) AND (t0.c1)))*(t0.c0 COLLATE RTRIM)), t0.c4 ASC  NULLS FIRST, (+ (CAST(t0.c4 AS REAL)))  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((NOT (((0.8143859891652997) NOT NULL))))AND(json_quote(rt1.c1) COLLATE NOCASE))) ORDER BY rt1.c5 ASC, t0.c1  NULLS LAST, ((CASE WHEN rt1.c1 THEN rt1.c3 ELSE t0.c1 END)<<(CASE 'S'  WHEN t0.c0 THEN rt1.c6 WHEN rt1.c3 THEN x'58' WHEN t0.c1 THEN t0.c0 END)) ASC LIMIT 0X2;
SELECT * FROM rt1, t0 WHERE ((NOT (((0.8143859891652997) NOT NULL)))) ORDER BY ((((t0.c0) BETWEEN (rt1.c1) AND (t0.c1)))*(t0.c0 COLLATE RTRIM)), t0.c4 ASC  NULLS FIRST, (+ (CAST(t0.c4 AS REAL)))  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((NOT (((0.8143859891652997) NOT NULL))))AND(json_quote(rt1.c1) COLLATE NOCASE))) ORDER BY rt1.c5 ASC, t0.c1  NULLS LAST, ((CASE WHEN rt1.c1 THEN rt1.c3 ELSE t0.c1 END)<<(CASE 'S'  WHEN t0.c0 THEN rt1.c6 WHEN rt1.c3 THEN x'58' WHEN t0.c1 THEN t0.c0 END)) ASC LIMIT 0X2;
SELECT * FROM t0 WHERE (((((((((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c2)))AND(x'')))AND(CAST(t0.c1 AS REAL))))AND(886054297))) ORDER BY t0.c4 DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c2)))AND(x'')))AND(CAST(t0.c1 AS REAL))))AND(886054297)))AND(CAST(DATETIME(t0.c4, t0.c2, t0.c3, t0.c2, t0.c2) AS INTEGER)))) ORDER BY x'e3' COLLATE RTRIM DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (IFNULL(DISTINCT '', 'y')) ORDER BY x'e3' COLLATE RTRIM DESC;
SELECT * FROM t0 WHERE (((((((((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c2)))AND(x'')))AND(CAST(t0.c1 AS REAL))))AND(886054297))) ORDER BY t0.c4 DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c2)))AND(x'')))AND(CAST(t0.c1 AS REAL))))AND(886054297)))AND(CAST(DATETIME(t0.c4, t0.c2, t0.c3, t0.c2, t0.c2) AS INTEGER)))) ORDER BY x'e3' COLLATE RTRIM DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (IFNULL(DISTINCT '', 'y')) ORDER BY x'e3' COLLATE RTRIM DESC;
SELECT * FROM rt1 WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c6)) COLLATE RTRIM);
SELECT * FROM rt1 WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c6)) COLLATE RTRIM) INTERSECT SELECT * FROM rt1 WHERE ((rt1.c4 COLLATE NOCASE IN ((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))))));
SELECT * FROM rt1 WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c6)) COLLATE RTRIM);
SELECT * FROM rt1 WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c6)) COLLATE RTRIM) INTERSECT SELECT * FROM rt1 WHERE ((rt1.c4 COLLATE NOCASE IN ((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))))));
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (json_array(((x'8e45') NOT BETWEEN (rt1.c0) AND (rt1.c4)), (((t0.c3)) BETWEEN ((-983457725)) AND ((rt1.c6)))));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((json_array(((x'8e45') NOT BETWEEN (rt1.c0) AND (rt1.c4)), (((t0.c3)) BETWEEN ((0xffffffffc561a043)) AND ((rt1.c6)))))AND(((+ (t0.c1)) IN (((t0.c1) IS FALSE), ((rt1.c4)<>(rt1.c6)))))));
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (json_array(((x'8e45') NOT BETWEEN (rt1.c0) AND (rt1.c4)), (((t0.c3)) BETWEEN ((-983457725)) AND ((rt1.c6)))));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((json_array(((x'8e45') NOT BETWEEN (rt1.c0) AND (rt1.c4)), (((t0.c3)) BETWEEN ((0xffffffffc561a043)) AND ((rt1.c6)))))AND(((+ (t0.c1)) IN (((t0.c1) IS FALSE), ((rt1.c4)<>(rt1.c6)))))));
SELECT ALL * FROM t0, rt1 WHERE (x'8bb288b8a49e') ORDER BY ((TRIM(t0.c4)) BETWEEN ((NOT (rt1.c6))) AND ((((t0.c2, t0.c2))==((rt1.c2, ''))))) ASC, ((((rt1.c3) BETWEEN (rt1.c0) AND (x''))) NOT BETWEEN ((rt1.c1 IN ())) AND ((rt1.c5 IN ()))) ASC, ((((rt1.c1)!=(rt1.c1))) BETWEEN (CASE WHEN t0.c1 THEN rt1.c6 ELSE rt1.c3 END) AND ((NOT (t0.c2)))) ASC;
SELECT DISTINCT * FROM t0, rt1 WHERE (x'8bb288b8a49e') ORDER BY ((TRIM(t0.c4)) BETWEEN ((NOT (rt1.c6))) AND ((((t0.c2, t0.c2))=((rt1.c2, ''))))) ASC, ((((rt1.c3) BETWEEN (rt1.c0) AND (x''))) NOT BETWEEN ((rt1.c1 IN ())) AND ((rt1.c5 IN ()))) ASC, ((((rt1.c1)!=(rt1.c1))) BETWEEN (CASE WHEN t0.c1 THEN rt1.c6 ELSE rt1.c3 END) AND ((NOT (t0.c2)))) ASC;
SELECT ALL * FROM t0, rt1 WHERE (x'8bb288b8a49e') ORDER BY ((TRIM(t0.c4)) BETWEEN ((NOT (rt1.c6))) AND ((((t0.c2, t0.c2))==((rt1.c2, ''))))) ASC, ((((rt1.c3) BETWEEN (rt1.c0) AND (x''))) NOT BETWEEN ((rt1.c1 IN ())) AND ((rt1.c5 IN ()))) ASC, ((((rt1.c1)!=(rt1.c1))) BETWEEN (CASE WHEN t0.c1 THEN rt1.c6 ELSE rt1.c3 END) AND ((NOT (t0.c2)))) ASC;
SELECT DISTINCT * FROM t0, rt1 WHERE (x'8bb288b8a49e') ORDER BY ((TRIM(t0.c4)) BETWEEN ((NOT (rt1.c6))) AND ((((t0.c2, t0.c2))=((rt1.c2, ''))))) ASC, ((((rt1.c3) BETWEEN (rt1.c0) AND (x''))) NOT BETWEEN ((rt1.c1 IN ())) AND ((rt1.c5 IN ()))) ASC, ((((rt1.c1)!=(rt1.c1))) BETWEEN (CASE WHEN t0.c1 THEN rt1.c6 ELSE rt1.c3 END) AND ((NOT (t0.c2)))) ASC;
SELECT * FROM rt1 WHERE (((((((((((((0.8783277297730147)AND(rt1.c4)))OR(rt1.c5)))OR(rt1.c4)))AND(rt1.c6)))OR(rt1.c5))) IS TRUE)) ORDER BY ((((rt1.c2)>(rt1.c3))) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((((((((((((0.8783277297730147)AND(rt1.c4)))OR(rt1.c5)))OR(rt1.c4)))AND(rt1.c6)))OR(rt1.c5))) IS TRUE))AND(CASE WHEN rt1.c6 COLLATE RTRIM THEN ((rt1.c1)<('n位}CAUt64')) WHEN (+ (x'b8df')) THEN ((rt1.c3)-(rt1.c0)) WHEN CASE rt1.c3  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c6 END THEN CAST(rt1.c0 AS REAL) WHEN ((((rt1.c1)OR(rt1.c0)))AND(rt1.c5)) THEN rt1.c0 COLLATE RTRIM WHEN CASE rt1.c6  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 END THEN (rt1.c6 IN (2.029517459E9)) ELSE ((((((rt1.c5)AND(rt1.c5)))AND(rt1.c5)))AND(rt1.c4)) END))) ORDER BY ((((((((((((rt1.c3)AND(rt1.c5)))AND(rt1.c5)))OR(rt1.c3)))AND(rt1.c0)))OR(rt1.c5))) NOT BETWEEN (((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c1))) AND (0.5711929418547179)), ((((rt1.c3)=(rt1.c5))) NOT BETWEEN ((- (rt1.c0))) AND (((((rt1.c2)AND(rt1.c4)))OR(rt1.c0)))) DESC  NULLS FIRST, (- (((rt1.c5)<>(rt1.c0))));
SELECT * FROM rt1 WHERE (((((((((((((0.8783277297730147)AND(rt1.c4)))OR(rt1.c5)))OR(rt1.c4)))AND(rt1.c6)))OR(rt1.c5))) IS TRUE)) ORDER BY ((((rt1.c2)>(rt1.c3))) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((((((((((((0.8783277297730147)AND(rt1.c4)))OR(rt1.c5)))OR(rt1.c4)))AND(rt1.c6)))OR(rt1.c5))) IS TRUE))AND(CASE WHEN rt1.c6 COLLATE RTRIM THEN ((rt1.c1)<('n位}CAUt64')) WHEN (+ (x'b8df')) THEN ((rt1.c3)-(rt1.c0)) WHEN CASE rt1.c3  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c6 END THEN CAST(rt1.c0 AS REAL) WHEN ((((rt1.c1)OR(rt1.c0)))AND(rt1.c5)) THEN rt1.c0 COLLATE RTRIM WHEN CASE rt1.c6  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 END THEN (rt1.c6 IN (2.029517459E9)) ELSE ((((((rt1.c5)AND(rt1.c5)))AND(rt1.c5)))AND(rt1.c4)) END))) ORDER BY ((((((((((((rt1.c3)AND(rt1.c5)))AND(rt1.c5)))OR(rt1.c3)))AND(rt1.c0)))OR(rt1.c5))) NOT BETWEEN (((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c1))) AND (0.5711929418547179)), ((((rt1.c3)=(rt1.c5))) NOT BETWEEN ((- (rt1.c0))) AND (((((rt1.c2)AND(rt1.c4)))OR(rt1.c0)))) DESC  NULLS FIRST, (- (((rt1.c5)<>(rt1.c0))));
SELECT ALL * FROM rt1, t0 WHERE (rt1.c4 COLLATE NOCASE) ORDER BY CASE WHEN (rt1.c2 IN (rt1.c6, rt1.c1)) THEN (rt1.c0 IN ()) END DESC, ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)))OR((~ ('h&')))))AND(rt1.c3 COLLATE RTRIM));
SELECT * FROM rt1, t0 WHERE (rt1.c4 COLLATE NOCASE) ORDER BY CASE WHEN (rt1.c2 IN (rt1.c6, rt1.c1)) THEN (rt1.c0 IN ()) END DESC, ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)))OR((~ ('h&')))))AND(rt1.c3 COLLATE RTRIM)) LIMIT 0x0 INTERSECT SELECT * FROM rt1, t0 WHERE (CAST(rt1.c1 COLLATE NOCASE AS NUMERIC)) ORDER BY CASE WHEN (rt1.c2 IN (rt1.c6, rt1.c1)) THEN (rt1.c0 IN ()) END DESC, ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)))OR((~ ('h&')))))AND(rt1.c3 COLLATE RTRIM)) LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE (rt1.c4 COLLATE NOCASE) ORDER BY CASE WHEN (rt1.c2 IN (rt1.c6, rt1.c1)) THEN (rt1.c0 IN ()) END DESC, ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)))OR((~ ('h&')))))AND(rt1.c3 COLLATE RTRIM));
SELECT * FROM rt1, t0 WHERE (rt1.c4 COLLATE NOCASE) ORDER BY CASE WHEN (rt1.c2 IN (rt1.c6, rt1.c1)) THEN (rt1.c0 IN ()) END DESC, ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)))OR((~ ('h&')))))AND(rt1.c3 COLLATE RTRIM)) LIMIT 0x0 INTERSECT SELECT * FROM rt1, t0 WHERE (CAST(rt1.c1 COLLATE NOCASE AS NUMERIC)) ORDER BY CASE WHEN (rt1.c2 IN (rt1.c6, rt1.c1)) THEN (rt1.c0 IN ()) END DESC, ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)))OR((~ ('h&')))))AND(rt1.c3 COLLATE RTRIM)) LIMIT 0x0;
SELECT ALL * FROM rt1 WHERE ((((rt1.c2, -1908681393)) BETWEEN ((ABS(rt1.c3), (('BO
_<mn''m') IS FALSE))) AND (((rt1.c6 IN ('#B')), CAST(rt1.c2 AS REAL)))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c2, -1908681393)) BETWEEN ((ABS(rt1.c3), (('BO
_<mn''m') IS FALSE))) AND (((rt1.c6 IN ('#B')), CAST(rt1.c2 AS REAL)))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c2, -1908681393)) BETWEEN ((ABS(rt1.c3), (('BO
_<mn''m') IS FALSE))) AND (((rt1.c6 IN ('#B')), CAST(rt1.c2 AS REAL)))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c2, -1908681393)) BETWEEN ((ABS(rt1.c3), (('BO
_<mn''m') IS FALSE))) AND (((rt1.c6 IN ('#B')), CAST(rt1.c2 AS REAL)))));
SELECT * FROM rt1, t0 WHERE (((CASE rt1.c1  WHEN t0.c0 THEN rt1.c5 END)=(CASE t0.c2  WHEN x'bb' THEN rt1.c0 END)));
SELECT DISTINCT * FROM rt1, t0 WHERE (((CASE rt1.c1  WHEN t0.c0 THEN rt1.c5 END)==(CASE t0.c2  WHEN x'bb' THEN rt1.c0 END))) ORDER BY (- ((- (rt1.c1)))) ASC  NULLS LAST LIMIT 1;
SELECT * FROM rt1, t0 WHERE (((CASE rt1.c1  WHEN t0.c0 THEN rt1.c5 END)=(CASE t0.c2  WHEN x'bb' THEN rt1.c0 END)));
SELECT DISTINCT * FROM rt1, t0 WHERE (((CASE rt1.c1  WHEN t0.c0 THEN rt1.c5 END)==(CASE t0.c2  WHEN x'bb' THEN rt1.c0 END))) ORDER BY (- ((- (rt1.c1)))) ASC  NULLS LAST LIMIT 1;
SELECT ALL MAX(rt1.c6) FROM rt1 WHERE ((((((((((((rt1.c2)OR(rt1.c5)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c5)), ((rt1.c6)IS(rt1.c4))))>=((((rt1.c3) IS TRUE), CAST(rt1.c6 AS INTEGER)))));
SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE ((((((((((((rt1.c2)OR(rt1.c5)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c5)), ((rt1.c6)IS(rt1.c4))))>((((rt1.c3) IS TRUE), CAST(rt1.c6 AS INTEGER))))) INTERSECT SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE (((CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c5 END) IS FALSE));
SELECT MIN(rt1.c2) FROM t0 LEFT OUTER JOIN rt1 ON ((((rt1.c6) BETWEEN (t0.c0) AND (t0.c1))) NOT NULL) WHERE (((+ (rt1.c4)) IN (((t0.c1)/(rt1.c0)), (((rt1.c4, t0.c0)) NOT BETWEEN ((t0.c2, rt1.c3)) AND ((rt1.c2, t0.c1))), ((t0.c2)>=(t0.c2))))) ORDER BY (((rt1.c6 IN (0.385102292975251)))||(rt1.c1)), ((((rt1.c1)=('(9w')))%(((t0.c0)<(rt1.c6))))  NULLS FIRST, (((rt1.c1, t0.c1, rt1.c6)) NOT BETWEEN ((((((rt1.c4)AND(rt1.c4)))OR(rt1.c3)), ((t0.c2)%(rt1.c1)), t0.c4 COLLATE BINARY)) AND ((rt1.c4, CAST(NULL AS NUMERIC), ((((((rt1.c0)AND(rt1.c1)))OR(t0.c0)))OR(rt1.c5)))))  NULLS FIRST;
SELECT DISTINCT MIN(rt1.c2) FROM t0 LEFT OUTER JOIN rt1 ON ((((rt1.c6) BETWEEN (t0.c0) AND (t0.c1))) NOT NULL) WHERE (((((+ (rt1.c4)) IN (((t0.c1)/(rt1.c0)), (((rt1.c4, t0.c0)) NOT BETWEEN ((t0.c2, rt1.c3)) AND ((rt1.c2, t0.c1))), ((t0.c2)==(t0.c2)))))AND(((((CAST(rt1.c4 AS REAL))AND(CASE WHEN rt1.c2 THEN rt1.c5 END)))OR((NOT (t0.c0))))))) ORDER BY json_remove((((9.96534958E8, rt1.c1))<((rt1.c6, t0.c1))), RTRIM(rt1.c0)) LIMIT 0X2 INTERSECT SELECT DISTINCT MIN(rt1.c2) FROM t0 LEFT OUTER JOIN rt1 ON ((((rt1.c6) BETWEEN (t0.c0) AND (t0.c1))) NOT NULL) WHERE ((- ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((NULL)))))) ORDER BY json_remove((((9.96534958E8, rt1.c1))<((rt1.c6, t0.c1))), RTRIM(rt1.c0)) LIMIT 2;
SELECT * FROM rt1, t0 WHERE (((((((((((rt1.c4) BETWEEN (t0.c0) AND (rt1.c4)))AND(((t0.c3)OR(rt1.c2)))))OR(rt1.c1)))OR(rt1.c6 COLLATE RTRIM)))AND(CASE t0.c2  WHEN t0.c0 THEN rt1.c4 WHEN t0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c3 END)));
SELECT * FROM rt1, t0 WHERE (((((((((((((rt1.c4) BETWEEN (t0.c0) AND (rt1.c4)))AND(((t0.c3)OR(rt1.c2)))))OR(rt1.c1)))OR(rt1.c6 COLLATE RTRIM)))AND(CASE t0.c2  WHEN t0.c0 THEN rt1.c4 WHEN t0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c3 END)))AND((- (((t0.c2)LIKE(rt1.c5))))))) LIMIT 0 INTERSECT SELECT ALL * FROM rt1, t0 WHERE ((NOT (TYPEOF(DISTINCT t0.c3)))) LIMIT 0;
SELECT * FROM rt1, t0 WHERE (((((((((((rt1.c4) BETWEEN (t0.c0) AND (rt1.c4)))AND(((t0.c3)OR(rt1.c2)))))OR(rt1.c1)))OR(rt1.c6 COLLATE RTRIM)))AND(CASE t0.c2  WHEN t0.c0 THEN rt1.c4 WHEN t0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c3 END)));
SELECT * FROM rt1, t0 WHERE (((((((((((((rt1.c4) BETWEEN (t0.c0) AND (rt1.c4)))AND(((t0.c3)OR(rt1.c2)))))OR(rt1.c1)))OR(rt1.c6 COLLATE RTRIM)))AND(CASE t0.c2  WHEN t0.c0 THEN rt1.c4 WHEN t0.c2 THEN t0.c0 WHEN rt1.c2 THEN t0.c3 END)))AND((- (((t0.c2)LIKE(rt1.c5))))))) LIMIT 0 INTERSECT SELECT ALL * FROM rt1, t0 WHERE ((NOT (TYPEOF(DISTINCT t0.c3)))) LIMIT 0;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c3) IS TRUE) AS INTEGER));
SELECT * FROM t0 WHERE (CAST(((t0.c3) IS TRUE) AS INTEGER)) ORDER BY (((((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c4))))<=(((- (t0.c2))))) LIMIT 0X1 INTERSECT SELECT ALL * FROM t0 WHERE ((((TRIM(t0.c0), t0.c2, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c4 COLLATE NOCASE, ROUND(t0.c4, t0.c4), ((t0.c4) BETWEEN (t0.c3) AND (t0.c0))))<>((CAST(t0.c3 AS TEXT), CASE WHEN t0.c0 THEN t0.c1 END, CAST(t0.c3 AS BLOB), ((t0.c2)LIKE(t0.c4)), t0.c4, CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN 0.18911477859848336 END)))) ORDER BY (((((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c4))))<=(((- (t0.c2))))) LIMIT 1;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c3) IS TRUE) AS INTEGER));
SELECT * FROM t0 WHERE (CAST(((t0.c3) IS TRUE) AS INTEGER)) ORDER BY (((((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c4))))<=(((- (t0.c2))))) LIMIT 0X1 INTERSECT SELECT ALL * FROM t0 WHERE ((((TRIM(t0.c0), t0.c2, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c4 COLLATE NOCASE, ROUND(t0.c4, t0.c4), ((t0.c4) BETWEEN (t0.c3) AND (t0.c0))))<>((CAST(t0.c3 AS TEXT), CASE WHEN t0.c0 THEN t0.c1 END, CAST(t0.c3 AS BLOB), ((t0.c2)LIKE(t0.c4)), t0.c4, CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN 0.18911477859848336 END)))) ORDER BY (((((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c4))))<=(((- (t0.c2))))) LIMIT 1;
SELECT * FROM t0 CROSS JOIN rt1 ON ((((CASE rt1.c6  WHEN t0.c2 THEN t0.c4 WHEN rt1.c1 THEN t0.c2 WHEN rt1.c1 THEN rt1.c0 ELSE t0.c2 END)AND((x'89425a81' IN (rt1.c4)))))OR(((((t0.c1)OR(rt1.c4)))AND(t0.c0)))) WHERE (((rt1.c3) ISNULL));
SELECT * FROM t0 CROSS JOIN rt1 ON ((((CASE rt1.c6  WHEN t0.c2 THEN t0.c4 WHEN rt1.c1 THEN t0.c2 WHEN rt1.c1 THEN rt1.c0 ELSE t0.c2 END)AND((x'89425a81' IN (rt1.c4)))))OR(((((t0.c1)OR(rt1.c4)))AND(t0.c0)))) WHERE (((rt1.c3) ISNULL)) ORDER BY ((CASE WHEN rt1.c5 THEN t0.c1 WHEN t0.c2 THEN 0.2974500299651832 ELSE t0.c4 END) ISNULL) DESC, CASE WHEN ((rt1.c5) ISNULL) THEN rt1.c6 END DESC  NULLS LAST, CAST(((t0.c1) IS FALSE) AS TEXT)  NULLS LAST;
SELECT * FROM t0 CROSS JOIN rt1 ON ((((CASE rt1.c6  WHEN t0.c2 THEN t0.c4 WHEN rt1.c1 THEN t0.c2 WHEN rt1.c1 THEN rt1.c0 ELSE t0.c2 END)AND((x'89425a81' IN (rt1.c4)))))OR(((((t0.c1)OR(rt1.c4)))AND(t0.c0)))) WHERE (((rt1.c3) ISNULL));
SELECT * FROM t0 CROSS JOIN rt1 ON ((((CASE rt1.c6  WHEN t0.c2 THEN t0.c4 WHEN rt1.c1 THEN t0.c2 WHEN rt1.c1 THEN rt1.c0 ELSE t0.c2 END)AND((x'89425a81' IN (rt1.c4)))))OR(((((t0.c1)OR(rt1.c4)))AND(t0.c0)))) WHERE (((rt1.c3) ISNULL)) ORDER BY ((CASE WHEN rt1.c5 THEN t0.c1 WHEN t0.c2 THEN 0.2974500299651832 ELSE t0.c4 END) ISNULL) DESC, CASE WHEN ((rt1.c5) ISNULL) THEN rt1.c6 END DESC  NULLS LAST, CAST(((t0.c1) IS FALSE) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c4 THEN t0.c1 WHEN t0.c1 THEN t0.c4 ELSE t0.c4 END, CASE x''  WHEN t0.c4 THEN t0.c4 WHEN t0.c4 THEN t0.c1 ELSE t0.c2 END));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c4 THEN t0.c1 WHEN t0.c1 THEN t0.c4 ELSE t0.c4 END, CASE x''  WHEN t0.c4 THEN t0.c4 WHEN t0.c4 THEN t0.c1 ELSE t0.c2 END)) ORDER BY t0.c3  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((+ (((t0.c4)*(t0.c3))))) ORDER BY t0.c3  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT t0.c0));
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (TRIM(DISTINCT t0.c0)) ORDER BY ((((t0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c0 IN (t0.c0)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER))AND((- (t0.c2)))))OR(((((((t0.c0)AND(t0.c4)))AND(t0.c1)))OR(t0.c4))))) ORDER BY ((((t0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c0 IN (t0.c0))));
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT t0.c0));
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (TRIM(DISTINCT t0.c0)) ORDER BY ((((t0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c0 IN (t0.c0)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER))AND((- (t0.c2)))))OR(((((((t0.c0)AND(t0.c4)))AND(t0.c1)))OR(t0.c4))))) ORDER BY ((((t0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c0 IN (t0.c0))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON rt1.c6 WHERE (IFNULL(DISTINCT UNICODE(t0.c3), (((rt1.c3, t0.c0, t0.c1)) NOT BETWEEN ((rt1.c0, t0.c0, rt1.c4)) AND ((NULL, rt1.c1, t0.c3))))) ORDER BY LIKELIHOOD(DISTINCT ((t0.c1) BETWEEN (t0.c3) AND (-659412900)), ((((rt1.c4)OR(rt1.c6)))AND(t0.c1))) ASC  NULLS LAST, x'' DESC, TRIM(DISTINCT ((rt1.c4) BETWEEN (t0.c0) AND (rt1.c1)));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t0 ON rt1.c6 WHERE (IFNULL(DISTINCT UNICODE(t0.c3), (((rt1.c3, t0.c0, t0.c1)) NOT BETWEEN ((rt1.c0, t0.c0, rt1.c4)) AND ((NULL, rt1.c1, t0.c3))))) ORDER BY LIKELIHOOD(DISTINCT ((t0.c1) BETWEEN (t0.c3) AND (-659412900)), ((((rt1.c4)OR(rt1.c6)))AND(t0.c1))) ASC  NULLS LAST, x'' DESC, TRIM(DISTINCT ((rt1.c4) BETWEEN (t0.c0) AND (rt1.c1))) INTERSECT SELECT ALL COUNT(*) FROM rt1 INNER JOIN t0 ON rt1.c6 WHERE ((+ (rt1.c3 COLLATE RTRIM))) ORDER BY LIKELIHOOD(DISTINCT ((t0.c1) BETWEEN (t0.c3) AND (-659412900)), ((((rt1.c4)OR(rt1.c6)))AND(t0.c1))) ASC  NULLS LAST, x'' DESC, TRIM(DISTINCT ((rt1.c4) BETWEEN (t0.c0) AND (rt1.c1)));
SELECT ALL * FROM t0 WHERE ((((((((NOT (t0.c1)))AND(CASE WHEN t0.c3 THEN t0.c4 END)))AND((((t0.c3, t0.c0)) NOT BETWEEN ((t0.c4, t0.c0)) AND (('&D)', t0.c3))))))AND(((t0.c2)>>(t0.c3)))));
SELECT ALL * FROM t0 WHERE ((((((((NOT (t0.c1)))AND(CASE WHEN t0.c3 THEN t0.c4 END)))AND((((t0.c3, t0.c0)) NOT BETWEEN ((t0.c4, t0.c0)) AND (('&D)', t0.c3))))))AND(((t0.c2)>>(t0.c3))))) ORDER BY (CAST(t0.c2 AS BLOB) IN (t0.c0)), t0.c2 ASC INTERSECT SELECT * FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) IN (t0.c2 COLLATE RTRIM, ((t0.c0) NOTNULL)))) ORDER BY (CAST(t0.c2 AS BLOB) IN (t0.c0)), t0.c2 ASC;
SELECT ALL * FROM t0 WHERE ((((((((NOT (t0.c1)))AND(CASE WHEN t0.c3 THEN t0.c4 END)))AND((((t0.c3, t0.c0)) NOT BETWEEN ((t0.c4, t0.c0)) AND (('&D)', t0.c3))))))AND(((t0.c2)>>(t0.c3)))));
SELECT ALL * FROM t0 WHERE ((((((((NOT (t0.c1)))AND(CASE WHEN t0.c3 THEN t0.c4 END)))AND((((t0.c3, t0.c0)) NOT BETWEEN ((t0.c4, t0.c0)) AND (('&D)', t0.c3))))))AND(((t0.c2)>>(t0.c3))))) ORDER BY (CAST(t0.c2 AS BLOB) IN (t0.c0)), t0.c2 ASC INTERSECT SELECT * FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) IN (t0.c2 COLLATE RTRIM, ((t0.c0) NOTNULL)))) ORDER BY (CAST(t0.c2 AS BLOB) IN (t0.c0)), t0.c2 ASC;
SELECT MIN(rt1.c5) FROM rt1 WHERE ((((((rt1.c4, rt1.c3))!=((rt1.c6, rt1.c5))))>>(((rt1.c3)-('')))));
SELECT DISTINCT MIN(rt1.c5) FROM rt1 WHERE ((((((((rt1.c4, rt1.c3))<>((rt1.c6, rt1.c5))))>>(((rt1.c3)-('')))))AND(((((0.5445833580772851)+(rt1.c1))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (rt1.c0 COLLATE RTRIM))))) ORDER BY (((rt1.c3) NOT NULL) IN ())  NULLS LAST, json(((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c5)))AND(rt1.c3)))AND(rt1.c4)))AND(''))) LIMIT 1 INTERSECT SELECT DISTINCT MIN(rt1.c5) FROM rt1 WHERE (rt1.c5) ORDER BY (((rt1.c3) NOT NULL) IN ())  NULLS LAST, json(((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c5)))AND(rt1.c3)))AND(rt1.c4)))AND(''))) LIMIT 1;
SELECT ALL MAX(rt1.c0) FROM rt1 WHERE ((- ((rt1.c2 IN (rt1.c6)))));
SELECT DISTINCT MAX(rt1.c0) FROM rt1 WHERE ((- ((rt1.c2 IN (rt1.c6))))) INTERSECT SELECT DISTINCT MAX(rt1.c0) FROM rt1 WHERE ((((((((+ (rt1.c6)))AND(((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(((rt1.c1)>>(rt1.c4)))))AND(((((((rt1.c5)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c6)))));
SELECT ALL MAX(t0.c1) FROM rt1, t0 WHERE ((((((rt1.c2, t0.c4, rt1.c3))<((rt1.c1, rt1.c5, t0.c3))))||(rt1.c0)));
SELECT MAX(t0.c1) FROM rt1, t0 WHERE ((((((((rt1.c2, t0.c4, rt1.c3))<((rt1.c1, rt1.c5, t0.c3))))||(rt1.c0)))AND(((rt1.c2 COLLATE NOCASE)AND(LIKELIHOOD(rt1.c1, t0.c4)))))) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN rt1.c6 THEN '' WHEN CASE WHEN rt1.c0 THEN t0.c3 WHEN t0.c2 THEN rt1.c5 WHEN t0.c2 THEN t0.c3 ELSE x'af5b' END THEN ((rt1.c2) IS FALSE) END ASC, x''  NULLS LAST, CAST(((t0.c0)GLOB(t0.c1)) AS INTEGER)  NULLS LAST INTERSECT SELECT ALL MAX(t0.c1) FROM rt1, t0 WHERE (STRFTIME(rt1.c5, t0.c3, t0.c2, rt1.c5, t0.c1) COLLATE BINARY) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN rt1.c6 THEN '' WHEN CASE WHEN rt1.c0 THEN t0.c3 WHEN t0.c2 THEN rt1.c5 WHEN t0.c2 THEN t0.c3 ELSE x'af5b' END THEN ((rt1.c2) IS FALSE) END ASC, x''  NULLS LAST, CAST(((t0.c0)GLOB(t0.c1)) AS INTEGER)  NULLS LAST;
SELECT * FROM rt1 WHERE ('') ORDER BY CAST((((rt1.c0, rt1.c3, rt1.c1)) BETWEEN ((rt1.c1, 0.8095110720425828, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c4))) AS BLOB)  NULLS LAST, CAST(((rt1.c2) IS FALSE) AS TEXT), CAST((((rt1.c5, rt1.c2, rt1.c4))<((rt1.c4, rt1.c2, rt1.c0))) AS TEXT);
SELECT * FROM rt1 WHERE ('') ORDER BY ((rt1.c4) IS FALSE) COLLATE BINARY  NULLS LAST, (CASE rt1.c0  WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c5 END IN (((rt1.c1) IS FALSE)))  NULLS FIRST LIMIT 2 INTERSECT SELECT * FROM rt1 WHERE (rt1.c4) ORDER BY ((rt1.c4) IS FALSE) COLLATE BINARY  NULLS LAST, (CASE rt1.c0  WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c5 END IN (((rt1.c1) IS FALSE)))  NULLS FIRST LIMIT 2;
SELECT * FROM rt1 WHERE ('') ORDER BY CAST((((rt1.c0, rt1.c3, rt1.c1)) BETWEEN ((rt1.c1, 0.8095110720425828, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c4))) AS BLOB)  NULLS LAST, CAST(((rt1.c2) IS FALSE) AS TEXT), CAST((((rt1.c5, rt1.c2, rt1.c4))<((rt1.c4, rt1.c2, rt1.c0))) AS TEXT);
SELECT * FROM rt1 WHERE ('') ORDER BY ((rt1.c4) IS FALSE) COLLATE BINARY  NULLS LAST, (CASE rt1.c0  WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c5 END IN (((rt1.c1) IS FALSE)))  NULLS FIRST LIMIT 2 INTERSECT SELECT * FROM rt1 WHERE (rt1.c4) ORDER BY ((rt1.c4) IS FALSE) COLLATE BINARY  NULLS LAST, (CASE rt1.c0  WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c5 END IN (((rt1.c1) IS FALSE)))  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t0, rt1 WHERE (((((t0.c4)IS NOT(rt1.c1)))<=(rt1.c0 COLLATE BINARY)));
SELECT * FROM t0, rt1 WHERE (((((((t0.c4)IS NOT(rt1.c1)))<(rt1.c0 COLLATE BINARY)))AND(SUBSTR(((rt1.c6) ISNULL), ((t0.c3)GLOB(t0.c1)))))) LIMIT 0X0;
SELECT ALL * FROM t0, rt1 WHERE (((((t0.c4)IS NOT(rt1.c1)))<=(rt1.c0 COLLATE BINARY)));
SELECT * FROM t0, rt1 WHERE (((((((t0.c4)IS NOT(rt1.c1)))<(rt1.c0 COLLATE BINARY)))AND(SUBSTR(((rt1.c6) ISNULL), ((t0.c3)GLOB(t0.c1)))))) LIMIT 0X0;
SELECT ALL MAX(rt1.c1) FROM rt1 WHERE (((rt1.c3)>>(rt1.c6)) COLLATE NOCASE COLLATE BINARY);
SELECT DISTINCT MAX(rt1.c1) FROM rt1 WHERE (((((rt1.c3)>>(rt1.c6)) COLLATE NOCASE COLLATE BINARY)AND((~ (((rt1.c0)<<(rt1.c0))))))) ORDER BY (((rt1.c5)) NOT BETWEEN ((rt1.c4 COLLATE NOCASE)) AND (((- (''))))) ASC  NULLS FIRST, 'Hhّ' ASC  NULLS FIRST LIMIT 1;
SELECT * FROM rt1, t0 WHERE (LIKE((rt1.c1 IN (rt1.c2)), LIKELY(DISTINCT rt1.c6))) ORDER BY 'V ' DESC;
SELECT DISTINCT * FROM rt1, t0 WHERE (((LIKE((rt1.c1 IN (rt1.c2)), LIKELY(DISTINCT rt1.c6)))AND((((rt1.c0) BETWEEN (rt1.c3) AND (t0.c3)) IN (CASE WHEN x'' THEN t0.c3 WHEN rt1.c1 THEN rt1.c1 WHEN t0.c1 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c6 END))))) ORDER BY CAST(rt1.c4 COLLATE NOCASE AS NUMERIC) DESC;
SELECT * FROM rt1, t0 WHERE (LIKE((rt1.c1 IN (rt1.c2)), LIKELY(DISTINCT rt1.c6))) ORDER BY 'V ' DESC;
SELECT DISTINCT * FROM rt1, t0 WHERE (((LIKE((rt1.c1 IN (rt1.c2)), LIKELY(DISTINCT rt1.c6)))AND((((rt1.c0) BETWEEN (rt1.c3) AND (t0.c3)) IN (CASE WHEN x'' THEN t0.c3 WHEN rt1.c1 THEN rt1.c1 WHEN t0.c1 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c6 END))))) ORDER BY CAST(rt1.c4 COLLATE NOCASE AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (0.08322419056732966) ORDER BY rtreenode((NOT (t0.c2)), ((((rt1.c2)OR(t0.c1)))OR(rt1.c4)))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0 WHERE (0.08322419056732966) ORDER BY ((((((((((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c6)))OR('90315868')))OR((((t0.c2, t0.c3, t0.c1)) BETWEEN ((rt1.c3, t0.c3, rt1.c4)) AND ((rt1.c3, t0.c0, rt1.c3))))))AND((+ (t0.c3)))))AND((NOT (t0.c2))))  NULLS LAST, CAST(CAST(t0.c1 AS REAL) AS NUMERIC) DESC, ((((((((((((((((((((((t0.c1)AND(t0.c3)))OR(t0.c1)))OR(rt1.c1)))AND(rt1.c5)))AND(t0.c3)))AND(t0.c1)))OR(t0.c1)))AND(((rt1.c0)-(rt1.c0)))))AND((NOT (0.7438450956466177)))))OR((rt1.c4 IN (rt1.c4, t0.c4)))))AND(((rt1.c2) NOT BETWEEN (t0.c4) AND (rt1.c3)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((((((x'd7') NOT BETWEEN (t0.c3) AND (x'19')))AND('-1270526967')))AND(NULL)))AND('-1906410965')));
SELECT ALL * FROM t0 WHERE (((((((((x'd7') NOT BETWEEN (t0.c3) AND (x'19')))AND('-1270526967')))AND(NULL)))AND('-1906410965'))) LIMIT 0;
SELECT * FROM t0 WHERE (((((((((x'd7') NOT BETWEEN (t0.c3) AND (x'19')))AND('-1270526967')))AND(NULL)))AND('-1906410965')));
SELECT ALL * FROM t0 WHERE (((((((((x'd7') NOT BETWEEN (t0.c3) AND (x'19')))AND('-1270526967')))AND(NULL)))AND('-1906410965'))) LIMIT 0;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((((t0.c4) NOT BETWEEN (rt1.c0) AND (t0.c3))) IS TRUE) WHERE (((CAST(rt1.c0 AS INTEGER)) IS TRUE));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((((t0.c4) NOT BETWEEN (rt1.c0) AND (t0.c3))) IS TRUE) WHERE (((((CAST(rt1.c0 AS INTEGER)) IS TRUE))AND((((((NULL)AND(t0.c2)), ((rt1.c3)||(rt1.c1)), ((rt1.c6) IS TRUE)))>=((CASE WHEN rt1.c2 THEN t0.c0 END, (rt1.c2 IN ()), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))))) ORDER BY 0.005056586487964698  NULLS FIRST, ((((t0.c2) NOTNULL)) IS TRUE)  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((((t0.c4) NOT BETWEEN (rt1.c0) AND (t0.c3))) IS TRUE) WHERE (((CAST(rt1.c0 AS INTEGER)) IS TRUE));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((((t0.c4) NOT BETWEEN (rt1.c0) AND (t0.c3))) IS TRUE) WHERE (((((CAST(rt1.c0 AS INTEGER)) IS TRUE))AND((((((NULL)AND(t0.c2)), ((rt1.c3)||(rt1.c1)), ((rt1.c6) IS TRUE)))>=((CASE WHEN rt1.c2 THEN t0.c0 END, (rt1.c2 IN ()), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))))) ORDER BY 0.005056586487964698  NULLS FIRST, ((((t0.c2) NOTNULL)) IS TRUE)  NULLS FIRST LIMIT 0X2;
SELECT MIN(rt1.c4) FROM rt1 WHERE ((((((((rt1.c4, rt1.c3))>=((rt1.c6, rt1.c4))))OR(COALESCE(rt1.c5, rt1.c6))))AND(rt1.c2)));
SELECT ALL MIN(rt1.c4) FROM rt1 WHERE ((((((((rt1.c4, rt1.c3))>=((rt1.c6, rt1.c4))))OR(COALESCE(rt1.c5, rt1.c6))))AND(rt1.c2))) ORDER BY (((rt1.c5, rt1.c5, rt1.c3, rt1.c1)) NOT BETWEEN ((((rt1.c3)||(rt1.c3)), CASE WHEN rt1.c2 THEN rt1.c5 END, ((-1851974070) BETWEEN (rt1.c3) AND (rt1.c0)), CAST(rt1.c1 AS INTEGER))) AND ((((rt1.c5)/(rt1.c4)), TYPEOF(rt1.c3), COALESCE(rt1.c2, rt1.c1), rt1.c3 COLLATE RTRIM))) INTERSECT SELECT ALL MIN(rt1.c4) FROM rt1 WHERE ((((((0.9858524034978542, rt1.c6))==((rt1.c4, rt1.c2))))>(((rt1.c0) BETWEEN (rt1.c6) AND (rt1.c1))))) ORDER BY (((rt1.c5, rt1.c5, rt1.c3, rt1.c1)) NOT BETWEEN ((((rt1.c3)||(rt1.c3)), CASE WHEN rt1.c2 THEN rt1.c5 END, ((-1851974070) BETWEEN (rt1.c3) AND (rt1.c0)), CAST(rt1.c1 AS INTEGER))) AND ((((rt1.c5)/(rt1.c4)), TYPEOF(rt1.c3), COALESCE(rt1.c2, rt1.c1), rt1.c3 COLLATE RTRIM)));
SELECT ALL * FROM rt1, t0 WHERE ('0)
NiZ5O}');
SELECT ALL * FROM rt1, t0 WHERE ((('0)
NiZ5O}')AND((NOT ((((rt1.c6, rt1.c1)) NOT BETWEEN ((t0.c4, t0.c2)) AND ((t0.c3, rt1.c1)))))))) ORDER BY ((rt1.c0)||(rt1.c3)) COLLATE BINARY DESC  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM rt1, t0 WHERE ('0)
NiZ5O}');
SELECT ALL * FROM rt1, t0 WHERE ((('0)
NiZ5O}')AND((NOT ((((rt1.c6, rt1.c1)) NOT BETWEEN ((t0.c4, t0.c2)) AND ((t0.c3, rt1.c1)))))))) ORDER BY ((rt1.c0)||(rt1.c3)) COLLATE BINARY DESC  NULLS FIRST LIMIT 0X2;
SELECT COUNT(*) FROM t0, rt1 WHERE ((((('0.13587103737969575')IS(rt1.c4)))OR(((((((((((rt1.c2)AND(rt1.c3)))AND(NULL)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c4)))));
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((((('0.13587103737969575')IS(rt1.c4)))OR(((((((((((rt1.c2)AND(rt1.c3)))AND(NULL)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c4)))));
SELECT * FROM t0, rt1 WHERE ((- ((~ (rt1.c4)))));
SELECT * FROM t0, rt1 WHERE ((- ((~ (rt1.c4))))) ORDER BY ABS(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c5 WHEN x'' THEN rt1.c3 WHEN t0.c3 THEN t0.c3 ELSE 0.43138262167666375 END) DESC INTERSECT SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN HEX(DISTINCT t0.c0) THEN ((t0.c1) ISNULL) WHEN '953423655' COLLATE RTRIM THEN (NOT (NULL)) WHEN (- (t0.c3)) THEN ((('1173830580', t0.c1, t0.c3, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c2, t0.c4, rt1.c4)) AND ((rt1.c5, rt1.c0, rt1.c2, t0.c3))) END) ORDER BY ABS(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c5 WHEN x'' THEN rt1.c3 WHEN t0.c3 THEN t0.c3 ELSE 0.43138262167666375 END) DESC;
SELECT * FROM t0, rt1 WHERE ((- ((~ (rt1.c4)))));
SELECT * FROM t0, rt1 WHERE ((- ((~ (rt1.c4))))) ORDER BY ABS(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c5 WHEN x'' THEN rt1.c3 WHEN t0.c3 THEN t0.c3 ELSE 0.43138262167666375 END) DESC INTERSECT SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN HEX(DISTINCT t0.c0) THEN ((t0.c1) ISNULL) WHEN '953423655' COLLATE RTRIM THEN (NOT (NULL)) WHEN (- (t0.c3)) THEN ((('1173830580', t0.c1, t0.c3, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c2, t0.c4, rt1.c4)) AND ((rt1.c5, rt1.c0, rt1.c2, t0.c3))) END) ORDER BY ABS(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c5 WHEN x'' THEN rt1.c3 WHEN t0.c3 THEN t0.c3 ELSE 0.43138262167666375 END) DESC;
SELECT ALL * FROM t0 WHERE (t0.c1);
SELECT DISTINCT * FROM t0 WHERE (((t0.c1)AND(ABS((((t0.c4, t0.c1)) BETWEEN ((t0.c1, t0.c2)) AND ((t0.c4, t0.c0))))))) ORDER BY x'cc4990', ((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))OR(t0.c3))) NOT BETWEEN (((t0.c0)>>('953423655'))) AND (((t0.c0) IS FALSE))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c3) ORDER BY x'cc4990', ((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))OR(t0.c3))) NOT BETWEEN (((t0.c0)>>('953423655'))) AND (((t0.c0) IS FALSE)));
SELECT ALL * FROM t0 WHERE (t0.c1);
SELECT DISTINCT * FROM t0 WHERE (((t0.c1)AND(ABS((((t0.c4, t0.c1)) BETWEEN ((t0.c1, t0.c2)) AND ((t0.c4, t0.c0))))))) ORDER BY x'cc4990', ((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))OR(t0.c3))) NOT BETWEEN (((t0.c0)>>('953423655'))) AND (((t0.c0) IS FALSE))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c3) ORDER BY x'cc4990', ((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))OR(t0.c3))) NOT BETWEEN (((t0.c0)>>('953423655'))) AND (((t0.c0) IS FALSE)));
SELECT MIN(t0.c0) FROM rt1, t0 WHERE ((((((((rt1.c4))==((rt1.c3))))OR(((rt1.c3)OR(rt1.c1)))))OR((~ (t0.c4)))));
SELECT ALL MIN(t0.c0) FROM rt1, t0 WHERE ((((((((rt1.c4))==((rt1.c3))))OR(((rt1.c3)OR(rt1.c1)))))OR((~ (t0.c4))))) LIMIT 5 INTERSECT SELECT ALL MIN(t0.c0) FROM rt1, t0 WHERE ((CASE t0.c1  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c6 THEN t0.c4 ELSE t0.c1 END IN (CASE rt1.c2  WHEN rt1.c6 THEN rt1.c2 WHEN NULL THEN rt1.c2 WHEN t0.c3 THEN t0.c3 ELSE t0.c4 END))) LIMIT 0X5;
SELECT ALL MIN(rt1.c2) FROM rt1 WHERE (CASE WHEN 0xffffffff9c2170e1 THEN ((rt1.c0)||(rt1.c6)) ELSE ((rt1.c6)&(rt1.c2)) END) ORDER BY (((((((rt1.c5)AND(rt1.c4)))AND(rt1.c5)), (NOT (rt1.c1))))>(((~ (rt1.c0)), LIKELIHOOD(rt1.c0, rt1.c4)))) ASC  NULLS LAST, (((rt1.c3)|(rt1.c6)) IN (rt1.c3, ((((rt1.c5)OR(rt1.c2)))OR(rt1.c3)))) DESC  NULLS FIRST, CASE CAST(rt1.c1 AS NUMERIC)  WHEN ((rt1.c5)>=(rt1.c5)) THEN (((rt1.c4, rt1.c3)) BETWEEN ((rt1.c2, rt1.c4)) AND ((rt1.c2, rt1.c4))) END ASC  NULLS LAST;
SELECT ALL MIN(rt1.c2) FROM rt1 WHERE (((CASE WHEN 0Xffffffff9c2170e1 THEN ((rt1.c0)||(rt1.c6)) ELSE ((rt1.c6)&(rt1.c2)) END)AND(CAST(rt1.c0 AS NUMERIC)))) ORDER BY (((((((((((rt1.c6)) NOT BETWEEN ((rt1.c6)) AND ((x''))))AND(((0.5286396087382006) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(CASE WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END)))AND((((rt1.c4, rt1.c2)) NOT BETWEEN ((rt1.c4, rt1.c2)) AND ((rt1.c2, rt1.c6))))))AND(IFNULL(rt1.c0, rt1.c6))), (((+ (rt1.c0))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND ((((rt1.c1, 0X7d4b4bd6)) NOT BETWEEN ((rt1.c4, rt1.c5)) AND ((rt1.c3, rt1.c2)))))  NULLS LAST INTERSECT SELECT ALL MIN(rt1.c2) FROM rt1 WHERE (((((rt1.c0) NOTNULL))+(((rt1.c6) NOT BETWEEN (rt1.c5) AND (rt1.c6))))) ORDER BY (((((((((((rt1.c6)) NOT BETWEEN ((rt1.c6)) AND ((x''))))AND(((0.5286396087382006) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(CASE WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END)))AND((((rt1.c4, rt1.c2)) NOT BETWEEN ((rt1.c4, rt1.c2)) AND ((rt1.c2, rt1.c6))))))AND(IFNULL(rt1.c0, rt1.c6))), (((+ (rt1.c0))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND ((((rt1.c1, 0x7d4b4bd6)) NOT BETWEEN ((rt1.c4, rt1.c5)) AND ((rt1.c3, rt1.c2)))))  NULLS LAST;
SELECT * FROM t0 WHERE (0Xffffffffd6562a49) ORDER BY (((t0.c0, t0.c3, t0.c0)) BETWEEN ((0.7179479712691657, ((t0.c4)/(t0.c3)), ((t0.c4)|(t0.c2)))) AND ((t0.c3, 0.4791826538667312, ((((((((t0.c0)OR(t0.c1)))OR(t0.c2)))AND(t0.c4)))AND(t0.c0))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (-698996151) ORDER BY (((t0.c0, t0.c0)) BETWEEN ((t0.c4, t0.c2)) AND ((t0.c1, -180735253))) COLLATE BINARY  NULLS LAST;
SELECT * FROM t0 WHERE (0Xffffffffd6562a49) ORDER BY (((t0.c0, t0.c3, t0.c0)) BETWEEN ((0.7179479712691657, ((t0.c4)/(t0.c3)), ((t0.c4)|(t0.c2)))) AND ((t0.c3, 0.4791826538667312, ((((((((t0.c0)OR(t0.c1)))OR(t0.c2)))AND(t0.c4)))AND(t0.c0))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (-698996151) ORDER BY (((t0.c0, t0.c0)) BETWEEN ((t0.c4, t0.c2)) AND ((t0.c1, -180735253))) COLLATE BINARY  NULLS LAST;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (INSTR(t0.c3 COLLATE RTRIM, ((rt1.c3)OR(rt1.c2)))) ORDER BY CASE WHEN ((t0.c0)<(t0.c4)) THEN TRIM(DISTINCT t0.c2, t0.c2) WHEN x'' THEN (((0.3514617717824823, rt1.c3, rt1.c2))<=((0.31096820012017057, rt1.c2, rt1.c1))) END  NULLS LAST, (((t0.c0, t0.c2)) NOT BETWEEN ((((((((t0.c3)OR(rt1.c3)))AND(0.8237587880307347)))AND(rt1.c4)), CAST(rt1.c2 AS TEXT))) AND ((((rt1.c2)-(rt1.c4)), TRIM(DISTINCT rt1.c0, rt1.c0))));
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (INSTR(t0.c3 COLLATE RTRIM, ((rt1.c3)OR(rt1.c2)))) ORDER BY CASE WHEN ((t0.c0)<(t0.c4)) THEN TRIM(DISTINCT t0.c2, t0.c2) WHEN x'' THEN (((0.3514617717824823, rt1.c3, rt1.c2))<=((0.31096820012017057, rt1.c2, rt1.c1))) END  NULLS LAST, (((t0.c0, t0.c2)) NOT BETWEEN ((((((((t0.c3)OR(rt1.c3)))AND(0.8237587880307347)))AND(rt1.c4)), CAST(rt1.c2 AS TEXT))) AND ((((rt1.c2)-(rt1.c4)), TRIM(DISTINCT rt1.c0, rt1.c0)))) LIMIT 0X2 INTERSECT SELECT * FROM t0 NATURAL JOIN rt1 WHERE (t0.c2) ORDER BY CASE WHEN ((t0.c0)<(t0.c4)) THEN TRIM(DISTINCT t0.c2, t0.c2) WHEN x'' THEN (((0.3514617717824823, rt1.c3, rt1.c2))<=((0.31096820012017057, rt1.c2, rt1.c1))) END  NULLS LAST, (((t0.c0, t0.c2)) NOT BETWEEN ((((((((t0.c3)OR(rt1.c3)))AND(0.8237587880307347)))AND(rt1.c4)), CAST(rt1.c2 AS TEXT))) AND ((((rt1.c2)-(rt1.c4)), TRIM(DISTINCT rt1.c0, rt1.c0)))) LIMIT 2;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (INSTR(t0.c3 COLLATE RTRIM, ((rt1.c3)OR(rt1.c2)))) ORDER BY CASE WHEN ((t0.c0)<(t0.c4)) THEN TRIM(DISTINCT t0.c2, t0.c2) WHEN x'' THEN (((0.3514617717824823, rt1.c3, rt1.c2))<=((0.31096820012017057, rt1.c2, rt1.c1))) END  NULLS LAST, (((t0.c0, t0.c2)) NOT BETWEEN ((((((((t0.c3)OR(rt1.c3)))AND(0.8237587880307347)))AND(rt1.c4)), CAST(rt1.c2 AS TEXT))) AND ((((rt1.c2)-(rt1.c4)), TRIM(DISTINCT rt1.c0, rt1.c0))));
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (INSTR(t0.c3 COLLATE RTRIM, ((rt1.c3)OR(rt1.c2)))) ORDER BY CASE WHEN ((t0.c0)<(t0.c4)) THEN TRIM(DISTINCT t0.c2, t0.c2) WHEN x'' THEN (((0.3514617717824823, rt1.c3, rt1.c2))<=((0.31096820012017057, rt1.c2, rt1.c1))) END  NULLS LAST, (((t0.c0, t0.c2)) NOT BETWEEN ((((((((t0.c3)OR(rt1.c3)))AND(0.8237587880307347)))AND(rt1.c4)), CAST(rt1.c2 AS TEXT))) AND ((((rt1.c2)-(rt1.c4)), TRIM(DISTINCT rt1.c0, rt1.c0)))) LIMIT 0X2 INTERSECT SELECT * FROM t0 NATURAL JOIN rt1 WHERE (t0.c2) ORDER BY CASE WHEN ((t0.c0)<(t0.c4)) THEN TRIM(DISTINCT t0.c2, t0.c2) WHEN x'' THEN (((0.3514617717824823, rt1.c3, rt1.c2))<=((0.31096820012017057, rt1.c2, rt1.c1))) END  NULLS LAST, (((t0.c0, t0.c2)) NOT BETWEEN ((((((((t0.c3)OR(rt1.c3)))AND(0.8237587880307347)))AND(rt1.c4)), CAST(rt1.c2 AS TEXT))) AND ((((rt1.c2)-(rt1.c4)), TRIM(DISTINCT rt1.c0, rt1.c0)))) LIMIT 2;
SELECT ALL MAX(rt1.c6) FROM t0, rt1 WHERE (((CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN rt1.c2 END) NOTNULL));
SELECT MAX(rt1.c6) FROM t0, rt1 WHERE (((((CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN rt1.c2 END) NOTNULL))AND((((((t0.c3, t0.c1, t0.c3)) NOT BETWEEN ((rt1.c4, rt1.c6, rt1.c4)) AND (('-1e500', rt1.c2, t0.c3))))<=(CAST(rt1.c4 AS TEXT)))))) ORDER BY (((rt1.c4 IN (rt1.c2))) BETWEEN (CASE rt1.c6  WHEN t0.c0 THEN t0.c0 END) AND ((t0.c2 IN (rt1.c3)))) DESC, (((((+ (rt1.c2)))OR(NULL)))AND(((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))))  NULLS LAST, ((((((rt1.c5) NOT BETWEEN (t0.c2) AND (rt1.c1)))OR(NULL)))AND(((rt1.c0)||(rt1.c3)))) ASC;
SELECT MAX(t0.c2) FROM t0 WHERE ('');
SELECT ALL MAX(t0.c2) FROM t0 WHERE ('') INTERSECT SELECT ALL MAX(t0.c2) FROM t0 WHERE (((-1.9806983E9 COLLATE NOCASE)IS((('390600562')-(NULL)))));
SELECT MAX(t0.c2) FROM t0, rt1 WHERE (((((rt1.c0) IS TRUE)) ISNULL));
SELECT DISTINCT MAX(t0.c2) FROM t0, rt1 WHERE (((((rt1.c0) IS TRUE)) ISNULL));
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c3))) NOTNULL)) ORDER BY ((t0.c3) NOT NULL) COLLATE BINARY DESC;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((NOT (t0.c3))) NOTNULL)) ORDER BY ((t0.c3) NOT NULL) COLLATE BINARY DESC INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((~ (CAST(t0.c3 AS INTEGER)))) ORDER BY ((t0.c3) NOT NULL) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (DATE((((t0.c0, t0.c2, t0.c0))==((0.8111976106812855, t0.c3, t0.c3))), (t0.c0 IN (t0.c3)), ((t0.c3)GLOB(t0.c0))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((DATE((((t0.c0, t0.c2, t0.c0))==((0.8111976106812855, t0.c3, t0.c3))), (t0.c0 IN (t0.c3)), ((t0.c3)GLOB(t0.c0))))AND(IFNULL(DISTINCT ((t0.c4) NOTNULL), ((t0.c2) NOT NULL))))) ORDER BY (- (ABS(DISTINCT t0.c2))) INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((0.5789117370558894)AND(t0.c1)))=(t0.c4))) ORDER BY (- (ABS(DISTINCT t0.c2)));
SELECT * FROM t0 WHERE ((((+ (t0.c1))) NOTNULL));
SELECT * FROM t0 WHERE ((((((+ (t0.c1))) NOTNULL))AND(CASE CASE WHEN t0.c3 THEN t0.c3 WHEN t0.c2 THEN t0.c3 END  WHEN (t0.c4 IN (t0.c0)) THEN ((t0.c2)=(t0.c3)) WHEN (((t0.c2, t0.c4, t0.c3))>=((t0.c3, t0.c3, t0.c4))) THEN (((t0.c4)) BETWEEN ((t0.c2)) AND ((t0.c0))) ELSE CASE t0.c1  WHEN t0.c0 THEN t0.c4 WHEN t0.c2 THEN t0.c4 END END))) ORDER BY TOTAL_CHANGES() DESC LIMIT 0x1;
SELECT * FROM t0 WHERE ((((+ (t0.c1))) NOTNULL));
SELECT * FROM t0 WHERE ((((((+ (t0.c1))) NOTNULL))AND(CASE CASE WHEN t0.c3 THEN t0.c3 WHEN t0.c2 THEN t0.c3 END  WHEN (t0.c4 IN (t0.c0)) THEN ((t0.c2)=(t0.c3)) WHEN (((t0.c2, t0.c4, t0.c3))>=((t0.c3, t0.c3, t0.c4))) THEN (((t0.c4)) BETWEEN ((t0.c2)) AND ((t0.c0))) ELSE CASE t0.c1  WHEN t0.c0 THEN t0.c4 WHEN t0.c2 THEN t0.c4 END END))) ORDER BY TOTAL_CHANGES() DESC LIMIT 0x1;
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c5 AS INTEGER) COLLATE RTRIM) ORDER BY (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 END IN ()), ((0.9359667882357533) BETWEEN (((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c5)))OR('CZ')))AND(rt1.c2))) AND (((rt1.c4)IS NOT(rt1.c5))));
SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c5 AS INTEGER) COLLATE RTRIM)AND(CAST((((rt1.c2, rt1.c6)) NOT BETWEEN ((rt1.c1, rt1.c6)) AND ((rt1.c1, rt1.c2))) AS NUMERIC)))) ORDER BY CASE 0.2718168072226145  WHEN ((rt1.c2)+(rt1.c3)) THEN HEX(rt1.c5) ELSE CAST(rt1.c5 AS INTEGER) END ASC LIMIT 0X1;
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c5 AS INTEGER) COLLATE RTRIM) ORDER BY (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 END IN ()), ((0.9359667882357533) BETWEEN (((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c5)))OR('CZ')))AND(rt1.c2))) AND (((rt1.c4)IS NOT(rt1.c5))));
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c0)LIKE(rt1.c0))) IS TRUE));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c0)LIKE(rt1.c0))) IS TRUE)) ORDER BY CAST((rt1.c0 IN ()) AS BLOB) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((rt1.c6 IN (t0.c2, rt1.c5)) COLLATE NOCASE) ORDER BY CAST((rt1.c0 IN ()) AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c0)LIKE(rt1.c0))) IS TRUE));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c0)LIKE(rt1.c0))) IS TRUE)) ORDER BY CAST((rt1.c0 IN ()) AS BLOB) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((rt1.c6 IN (t0.c2, rt1.c5)) COLLATE NOCASE) ORDER BY CAST((rt1.c0 IN ()) AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CAST(NULL AS BLOB) WHERE (rt1.c5) ORDER BY (((rt1.c4, t0.c2)) BETWEEN ((((t0.c2)>=(t0.c1)), t0.c3 COLLATE NOCASE)) AND ((UNLIKELY(DISTINCT rt1.c5), LOWER(DISTINCT t0.c4)))) DESC;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON CAST(NULL AS BLOB) WHERE (((rt1.c5)AND(((CASE WHEN t0.c0 THEN t0.c1 WHEN 'R|~(eoG0E' THEN rt1.c2 WHEN rt1.c6 THEN t0.c3 WHEN rt1.c5 THEN rt1.c6 END)GLOB((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c4)))))))) ORDER BY (((((t0.c2) BETWEEN (rt1.c5) AND (x'0e39')), CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN x'' WHEN rt1.c5 THEN NULL WHEN t0.c3 THEN rt1.c4 END, (((rt1.c6))<((t0.c4)))))>((((((rt1.c6)OR(t0.c2)))AND('-614220311')), rt1.c4 COLLATE BINARY, CAST(rt1.c6 AS INTEGER)))) INTERSECT SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON CAST(NULL AS BLOB) WHERE (((CAST(rt1.c6 AS NUMERIC)) NOT BETWEEN (CASE WHEN '0.5711929418547179' THEN t0.c4 WHEN t0.c1 THEN t0.c1 WHEN x'' THEN 0.8801691197835113 ELSE rt1.c3 END) AND (CASE WHEN t0.c2 THEN rt1.c0 WHEN t0.c1 THEN t0.c0 ELSE NULL END))) ORDER BY (((((t0.c2) BETWEEN (rt1.c5) AND (x'0e39')), CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN x'' WHEN rt1.c5 THEN NULL WHEN t0.c3 THEN rt1.c4 END, (((rt1.c6))<((t0.c4)))))>((((((rt1.c6)OR(t0.c2)))AND('-614220311')), rt1.c4 COLLATE BINARY, CAST(rt1.c6 AS INTEGER))));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CAST(NULL AS BLOB) WHERE (rt1.c5) ORDER BY (((rt1.c4, t0.c2)) BETWEEN ((((t0.c2)>=(t0.c1)), t0.c3 COLLATE NOCASE)) AND ((UNLIKELY(DISTINCT rt1.c5), LOWER(DISTINCT t0.c4)))) DESC;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON CAST(NULL AS BLOB) WHERE (((rt1.c5)AND(((CASE WHEN t0.c0 THEN t0.c1 WHEN 'R|~(eoG0E' THEN rt1.c2 WHEN rt1.c6 THEN t0.c3 WHEN rt1.c5 THEN rt1.c6 END)GLOB((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c4)))))))) ORDER BY (((((t0.c2) BETWEEN (rt1.c5) AND (x'0e39')), CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN x'' WHEN rt1.c5 THEN NULL WHEN t0.c3 THEN rt1.c4 END, (((rt1.c6))<((t0.c4)))))>((((((rt1.c6)OR(t0.c2)))AND('-614220311')), rt1.c4 COLLATE BINARY, CAST(rt1.c6 AS INTEGER)))) INTERSECT SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON CAST(NULL AS BLOB) WHERE (((CAST(rt1.c6 AS NUMERIC)) NOT BETWEEN (CASE WHEN '0.5711929418547179' THEN t0.c4 WHEN t0.c1 THEN t0.c1 WHEN x'' THEN 0.8801691197835113 ELSE rt1.c3 END) AND (CASE WHEN t0.c2 THEN rt1.c0 WHEN t0.c1 THEN t0.c0 ELSE NULL END))) ORDER BY (((((t0.c2) BETWEEN (rt1.c5) AND (x'0e39')), CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN x'' WHEN rt1.c5 THEN NULL WHEN t0.c3 THEN rt1.c4 END, (((rt1.c6))<((t0.c4)))))>((((((rt1.c6)OR(t0.c2)))AND('-614220311')), rt1.c4 COLLATE BINARY, CAST(rt1.c6 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((rt1.c4) IS FALSE))*(((0.5711929418547179) ISNULL)))) ORDER BY CASE ((t0.c1)!=(rt1.c0))  WHEN rt1.c0 THEN rt1.c4 WHEN (+ (t0.c0)) THEN ((t0.c0)==(t0.c0)) ELSE 0.30867880976023765 END DESC  NULLS LAST, CASE ((rt1.c4)!=(rt1.c5))  WHEN ((rt1.c1)GLOB(t0.c0)) THEN x'ca04b5' WHEN rt1.c2 THEN (rt1.c5 IN (rt1.c6, t0.c3)) ELSE (~ (rt1.c1)) END;
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c4) IS FALSE))*(((0.5711929418547179) ISNULL))))AND(NULL))) ORDER BY (~ (LIKELIHOOD(rt1.c2, t0.c3)))  NULLS FIRST, LOWER((('1941799750')<<(t0.c3))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE ((((t0.c3, rt1.c5, t0.c3, rt1.c2)) BETWEEN ((CASE t0.c0  WHEN rt1.c6 THEN rt1.c5 ELSE NULL END, ((rt1.c0) IS TRUE), t0.c3 COLLATE BINARY, ((rt1.c5) NOT NULL))) AND ((((rt1.c6)>=(rt1.c0)), (t0.c4 IN ()), ((((((((((((x'')AND(rt1.c2)))AND(t0.c4)))OR(t0.c0)))OR(rt1.c3)))OR(rt1.c4)))AND(t0.c4)), '1378707348')))) ORDER BY (~ (LIKELIHOOD(rt1.c2, t0.c3)))  NULLS FIRST, LOWER((('1941799750')<<(t0.c3))) DESC  NULLS FIRST;
SELECT MAX(t0.c1) FROM t0 WHERE ((((t0.c1)) BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((((((((t0.c4)OR(t0.c2)))AND(t0.c2)))OR(t0.c4))))));
SELECT ALL MAX(t0.c1) FROM t0 WHERE ((((t0.c1)) BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((((((((t0.c4)OR(t0.c2)))AND(t0.c2)))OR(t0.c4)))))) ORDER BY (((+ (t0.c4)))<=(((t0.c0) IS TRUE)))  NULLS LAST LIMIT 0 INTERSECT SELECT MAX(t0.c1) FROM t0 WHERE (2342307.0) ORDER BY (((+ (t0.c4)))<=(((t0.c0) IS TRUE)))  NULLS LAST LIMIT 0x0;
SELECT ALL MIN(rt1.c3) FROM t0 INNER JOIN rt1 ON ((((rt1.c1)|(rt1.c5)))GLOB(((rt1.c1) IS TRUE))) WHERE (((((rt1.c4)IS NOT(t0.c3))) ISNULL)) ORDER BY (- (CASE WHEN rt1.c3 THEN rt1.c6 WHEN t0.c0 THEN rt1.c6 WHEN -904110918 THEN t0.c4 WHEN t0.c3 THEN t0.c1 END)), (((((rt1.c3) NOT NULL), t0.c0, (('-883143184')-(rt1.c3)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c4 THEN t0.c0 END, x'ea3dda'))>((rt1.c5 COLLATE NOCASE, ((t0.c2)%(rt1.c4)), CAST(rt1.c5 AS TEXT), CAST(rt1.c4 AS BLOB), (x'' IN ()))))  NULLS FIRST;
SELECT DISTINCT MIN(rt1.c3) FROM t0 INNER JOIN rt1 ON ((((rt1.c1)|(rt1.c5)))GLOB(((rt1.c1) IS TRUE))) WHERE (((((((rt1.c4)IS NOT(t0.c3))) ISNULL))AND(x'a3f2'))) ORDER BY (- (CASE WHEN rt1.c3 THEN rt1.c6 WHEN t0.c0 THEN rt1.c6 WHEN -904110918 THEN t0.c4 WHEN t0.c3 THEN t0.c1 END)), (((((rt1.c3) NOT NULL), t0.c0, (('-883143184')-(rt1.c3)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c4 THEN t0.c0 END, x'ea3dda'))>((rt1.c5 COLLATE NOCASE, ((t0.c2)%(rt1.c4)), CAST(rt1.c5 AS TEXT), CAST(rt1.c4 AS BLOB), (x'' IN ()))))  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT MIN(rt1.c3) FROM t0 INNER JOIN rt1 ON ((((rt1.c1)|(rt1.c5)))GLOB(((rt1.c1) IS TRUE))) WHERE (NULLIF(DISTINCT 'p3f*' COLLATE BINARY, (((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c3, t0.c3)) AND ((t0.c2, t0.c1, t0.c3))))) ORDER BY (- (CASE WHEN rt1.c3 THEN rt1.c6 WHEN t0.c0 THEN rt1.c6 WHEN 0xffffffffca1c5cba THEN t0.c4 WHEN t0.c3 THEN t0.c1 END)), (((((rt1.c3) NOT NULL), t0.c0, (('-883143184')-(rt1.c3)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c4 THEN t0.c0 END, x'ea3dda'))>((rt1.c5 COLLATE NOCASE, ((t0.c2)%(rt1.c4)), CAST(rt1.c5 AS TEXT), CAST(rt1.c4 AS BLOB), (x'' IN ()))))  NULLS FIRST LIMIT 0X3;
SELECT * FROM t0 WHERE (ABS(DISTINCT (t0.c2 IN (t0.c1)))) ORDER BY ((((NULL)OR(t0.c3)))AND(t0.c3)) DESC, ((((t0.c2)>>(t0.c0)))-((+ (t0.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (ABS(DISTINCT (t0.c2 IN (t0.c1)))) ORDER BY ((('WZ3o,', t0.c0, t0.c3)) BETWEEN ((0.5349723149481403, t0.c2, ((t0.c3) NOT BETWEEN ('2102086614') AND (t0.c0)))) AND ((json_insert(t0.c2, t0.c2, t0.c3, t0.c1, t0.c3, t0.c4), ((t0.c2) IS TRUE), ((t0.c0)<=(t0.c3)))))  NULLS LAST, t0.c1  NULLS LAST LIMIT 2;
SELECT * FROM t0 WHERE (ABS(DISTINCT (t0.c2 IN (t0.c1)))) ORDER BY ((((NULL)OR(t0.c3)))AND(t0.c3)) DESC, ((((t0.c2)>>(t0.c0)))-((+ (t0.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (ABS(DISTINCT (t0.c2 IN (t0.c1)))) ORDER BY ((('WZ3o,', t0.c0, t0.c3)) BETWEEN ((0.5349723149481403, t0.c2, ((t0.c3) NOT BETWEEN ('2102086614') AND (t0.c0)))) AND ((json_insert(t0.c2, t0.c2, t0.c3, t0.c1, t0.c3, t0.c4), ((t0.c2) IS TRUE), ((t0.c0)<=(t0.c3)))))  NULLS LAST, t0.c1  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c5)AND(rt1.c2)) AS INTEGER));
SELECT * FROM rt1 WHERE (CAST(((rt1.c5)AND(rt1.c2)) AS INTEGER));
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c5)AND(rt1.c2)) AS INTEGER));
SELECT * FROM rt1 WHERE (CAST(((rt1.c5)AND(rt1.c2)) AS INTEGER));
SELECT * FROM rt1 WHERE (((((rt1.c5)&(rt1.c4)))IS((((rt1.c5, rt1.c3))>((rt1.c3, rt1.c1))))));
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c5)&(rt1.c4)))IS((((rt1.c5, rt1.c3))>((rt1.c3, rt1.c1))))))AND((- (LOWER(rt1.c6)))))) ORDER BY CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE;
SELECT * FROM rt1 WHERE (((((rt1.c5)&(rt1.c4)))IS((((rt1.c5, rt1.c3))>((rt1.c3, rt1.c1))))));
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c5)&(rt1.c4)))IS((((rt1.c5, rt1.c3))>((rt1.c3, rt1.c1))))))AND((- (LOWER(rt1.c6)))))) ORDER BY CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE;
SELECT * FROM rt1 INNER JOIN t0 ON t0.c4 WHERE ((json_remove(rt1.c3, x'', rt1.c3) IN (rt1.c6 COLLATE BINARY))) ORDER BY (((rt1.c0 IN (t0.c1))) IS FALSE) ASC;
SELECT ALL * FROM rt1 INNER JOIN t0 ON t0.c4 WHERE ((((json_remove(rt1.c3, x'', rt1.c3) IN (rt1.c6 COLLATE BINARY)))AND(((rt1.c3) NOT NULL)))) ORDER BY (((rt1.c0 IN (t0.c1))) IS FALSE) ASC LIMIT 0X0;
SELECT * FROM rt1 INNER JOIN t0 ON t0.c4 WHERE ((json_remove(rt1.c3, x'', rt1.c3) IN (rt1.c6 COLLATE BINARY))) ORDER BY (((rt1.c0 IN (t0.c1))) IS FALSE) ASC;
SELECT * FROM rt1 WHERE (((((rt1.c2) NOTNULL))|((((rt1.c4, rt1.c5, rt1.c6)) BETWEEN ((rt1.c4, rt1.c4, rt1.c6)) AND ((rt1.c1, rt1.c2, rt1.c3))))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOTNULL))|((((rt1.c4, rt1.c5, rt1.c6)) BETWEEN ((rt1.c4, rt1.c4, rt1.c6)) AND ((rt1.c1, rt1.c2, rt1.c3))))));
SELECT * FROM rt1 WHERE (((((rt1.c2) NOTNULL))|((((rt1.c4, rt1.c5, rt1.c6)) BETWEEN ((rt1.c4, rt1.c4, rt1.c6)) AND ((rt1.c1, rt1.c2, rt1.c3))))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOTNULL))|((((rt1.c4, rt1.c5, rt1.c6)) BETWEEN ((rt1.c4, rt1.c4, rt1.c6)) AND ((rt1.c1, rt1.c2, rt1.c3))))));
SELECT MIN(t0.c1) FROM t0 WHERE (((0.9789190505701061 COLLATE BINARY) NOT BETWEEN ((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c3)))) AND (CAST(t0.c4 AS NUMERIC))));
SELECT DISTINCT MIN(t0.c1) FROM t0 WHERE (((0.9789190505701061 COLLATE BINARY) NOT BETWEEN ((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c3)))) AND (CAST(t0.c4 AS NUMERIC)))) ORDER BY ((t0.c4 COLLATE NOCASE)||(t0.c4 COLLATE BINARY)) ASC;
SELECT MAX(t0.c2) FROM t0 WHERE (CASE NULL  WHEN ((t0.c4)-(t0.c4)) THEN ((t0.c0)||(t0.c1)) WHEN CASE t0.c3  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c4 ELSE t0.c4 END THEN (t0.c0 IN (t0.c3)) ELSE ((((t0.c4)AND(t0.c1)))OR(t0.c3)) END);
SELECT ALL MAX(t0.c2) FROM t0 WHERE (CASE NULL  WHEN ((t0.c4)-(t0.c4)) THEN ((t0.c0)||(t0.c1)) WHEN CASE t0.c3  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c4 ELSE t0.c4 END THEN (t0.c0 IN (t0.c3)) ELSE ((((t0.c4)AND(t0.c1)))OR(t0.c3)) END) INTERSECT SELECT MAX(t0.c2) FROM t0 WHERE (((((t0.c4) BETWEEN (t0.c3) AND (t0.c2))) NOT BETWEEN (t0.c3 COLLATE NOCASE) AND (((((((t0.c0)OR(t0.c4)))AND(0.4875802708536756)))OR(t0.c4)))));
SELECT ALL * FROM t0, rt1 WHERE ((~ ('o')));
SELECT * FROM t0, rt1 WHERE ((~ ('o'))) INTERSECT SELECT ALL * FROM t0, rt1 WHERE ('');
SELECT ALL * FROM t0, rt1 WHERE ((~ ('o')));
SELECT * FROM t0, rt1 WHERE ((~ ('o'))) INTERSECT SELECT ALL * FROM t0, rt1 WHERE ('');
SELECT ALL * FROM t0 WHERE ((+ ((~ (t0.c3))))) ORDER BY (((t0.c4 IN ())) NOT BETWEEN (CAST(t0.c3 AS INTEGER)) AND ((NOT (t0.c3)))) DESC;
SELECT * FROM t0 WHERE ((+ ((~ (t0.c3))))) ORDER BY (((t0.c4 IN ())) NOT BETWEEN (CAST(t0.c3 AS INTEGER)) AND ((NOT (t0.c3)))) DESC LIMIT 0X1;
SELECT ALL * FROM t0 WHERE ((+ ((~ (t0.c3))))) ORDER BY (((t0.c4 IN ())) NOT BETWEEN (CAST(t0.c3 AS INTEGER)) AND ((NOT (t0.c3)))) DESC;
SELECT * FROM t0 WHERE ((+ ((~ (t0.c3))))) ORDER BY (((t0.c4 IN ())) NOT BETWEEN (CAST(t0.c3 AS INTEGER)) AND ((NOT (t0.c3)))) DESC LIMIT 0X1;
SELECT ALL MIN(t0.c3) FROM rt1, t0 WHERE (CAST(rt1.c1 COLLATE RTRIM AS NUMERIC));
SELECT DISTINCT MIN(t0.c3) FROM rt1, t0 WHERE (((CAST(rt1.c1 COLLATE RTRIM AS NUMERIC))AND((((t0.c2 COLLATE BINARY, ((rt1.c5)>(rt1.c2))))==((UPPER(DISTINCT rt1.c2), t0.c2 COLLATE RTRIM)))))) ORDER BY ((((t0.c2 COLLATE BINARY)OR((((t0.c0, rt1.c4, x'e4')) NOT BETWEEN ((rt1.c1, t0.c1, rt1.c2)) AND ((rt1.c3, t0.c3, rt1.c2))))))AND((+ (t0.c3)))) ASC, CAST(rt1.c4 AS NUMERIC) COLLATE NOCASE;
SELECT * FROM t0, rt1 WHERE (CAST('-0.0' AS BLOB) COLLATE NOCASE) ORDER BY NULLIF(((t0.c4)AND(t0.c2)), CASE WHEN t0.c3 THEN rt1.c2 WHEN t0.c4 THEN t0.c0 END) DESC, (((((t0.c3, t0.c1, t0.c0, rt1.c5, rt1.c1)) BETWEEN ((0.7592528378227351, rt1.c2, rt1.c5, rt1.c4, rt1.c3)) AND ((rt1.c4, rt1.c0, rt1.c3, rt1.c3, t0.c1))))<<(((x'5ba8') NOT BETWEEN (rt1.c3) AND (t0.c0)))), ((((rt1.c1, rt1.c0, rt1.c0, t0.c4, t0.c1))=((t0.c2, rt1.c2, t0.c4, rt1.c2, rt1.c5))) IN (((rt1.c0) ISNULL), (((t0.c4))==((rt1.c3))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE (CAST('-0.0' AS BLOB) COLLATE NOCASE) ORDER BY NULLIF(((t0.c4)AND(t0.c2)), CASE WHEN t0.c3 THEN rt1.c2 WHEN t0.c4 THEN t0.c0 END) DESC, (((((t0.c3, t0.c1, t0.c0, rt1.c5, rt1.c1)) BETWEEN ((0.7592528378227351, rt1.c2, rt1.c5, rt1.c4, rt1.c3)) AND ((rt1.c4, rt1.c0, rt1.c3, rt1.c3, t0.c1))))<<(((x'5ba8') NOT BETWEEN (rt1.c3) AND (t0.c0)))), ((((rt1.c1, rt1.c0, rt1.c0, t0.c4, t0.c1))=((t0.c2, rt1.c2, t0.c4, rt1.c2, rt1.c5))) IN (((rt1.c0) ISNULL), (((t0.c4))=((rt1.c3))))) DESC  NULLS FIRST LIMIT 0x2;
SELECT * FROM t0, rt1 WHERE (CAST('-0.0' AS BLOB) COLLATE NOCASE) ORDER BY NULLIF(((t0.c4)AND(t0.c2)), CASE WHEN t0.c3 THEN rt1.c2 WHEN t0.c4 THEN t0.c0 END) DESC, (((((t0.c3, t0.c1, t0.c0, rt1.c5, rt1.c1)) BETWEEN ((0.7592528378227351, rt1.c2, rt1.c5, rt1.c4, rt1.c3)) AND ((rt1.c4, rt1.c0, rt1.c3, rt1.c3, t0.c1))))<<(((x'5ba8') NOT BETWEEN (rt1.c3) AND (t0.c0)))), ((((rt1.c1, rt1.c0, rt1.c0, t0.c4, t0.c1))=((t0.c2, rt1.c2, t0.c4, rt1.c2, rt1.c5))) IN (((rt1.c0) ISNULL), (((t0.c4))==((rt1.c3))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE (CAST('-0.0' AS BLOB) COLLATE NOCASE) ORDER BY NULLIF(((t0.c4)AND(t0.c2)), CASE WHEN t0.c3 THEN rt1.c2 WHEN t0.c4 THEN t0.c0 END) DESC, (((((t0.c3, t0.c1, t0.c0, rt1.c5, rt1.c1)) BETWEEN ((0.7592528378227351, rt1.c2, rt1.c5, rt1.c4, rt1.c3)) AND ((rt1.c4, rt1.c0, rt1.c3, rt1.c3, t0.c1))))<<(((x'5ba8') NOT BETWEEN (rt1.c3) AND (t0.c0)))), ((((rt1.c1, rt1.c0, rt1.c0, t0.c4, t0.c1))=((t0.c2, rt1.c2, t0.c4, rt1.c2, rt1.c5))) IN (((rt1.c0) ISNULL), (((t0.c4))=((rt1.c3))))) DESC  NULLS FIRST LIMIT 0x2;
SELECT * FROM rt1, t0 WHERE (t0.c0) ORDER BY ((t0.c3) BETWEEN (t0.c0 COLLATE NOCASE) AND (t0.c3 COLLATE RTRIM)) ASC  NULLS LAST, (((((- (rt1.c2)))AND((((rt1.c1, t0.c4, rt1.c3))==((rt1.c5, rt1.c1, rt1.c5))))))OR((rt1.c2 IN (rt1.c2))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c0)AND((('') BETWEEN (CAST(rt1.c6 AS REAL)) AND (rt1.c1))))) ORDER BY ((t0.c3) BETWEEN (t0.c0 COLLATE NOCASE) AND (t0.c3 COLLATE RTRIM)) ASC  NULLS LAST, (((((- (rt1.c2)))AND((((rt1.c1, t0.c4, rt1.c3))=((rt1.c5, rt1.c1, rt1.c5))))))OR((rt1.c2 IN (rt1.c2)))) LIMIT 0X0;
SELECT * FROM rt1, t0 WHERE (t0.c0) ORDER BY ((t0.c3) BETWEEN (t0.c0 COLLATE NOCASE) AND (t0.c3 COLLATE RTRIM)) ASC  NULLS LAST, (((((- (rt1.c2)))AND((((rt1.c1, t0.c4, rt1.c3))==((rt1.c5, rt1.c1, rt1.c5))))))OR((rt1.c2 IN (rt1.c2))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c0)AND((('') BETWEEN (CAST(rt1.c6 AS REAL)) AND (rt1.c1))))) ORDER BY ((t0.c3) BETWEEN (t0.c0 COLLATE NOCASE) AND (t0.c3 COLLATE RTRIM)) ASC  NULLS LAST, (((((- (rt1.c2)))AND((((rt1.c1, t0.c4, rt1.c3))=((rt1.c5, rt1.c1, rt1.c5))))))OR((rt1.c2 IN (rt1.c2)))) LIMIT 0X0;
SELECT ALL * FROM rt1, t0 WHERE ((~ (((((rt1.c6)AND(rt1.c1)))AND(t0.c0)))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((~ (((((rt1.c6)AND(rt1.c1)))AND(t0.c0))))) ORDER BY ((((4.75221837E8) NOT NULL))>(CASE WHEN rt1.c6 THEN t0.c4 WHEN t0.c0 THEN rt1.c5 WHEN t0.c3 THEN rt1.c0 WHEN 4.6721733E8 THEN t0.c0 ELSE t0.c4 END)) ASC, CASE WHEN t0.c3 THEN NULL WHEN t0.c0 THEN t0.c2 ELSE rt1.c6 END COLLATE RTRIM DESC LIMIT 0X1;
SELECT ALL * FROM rt1, t0 WHERE ((~ (((((rt1.c6)AND(rt1.c1)))AND(t0.c0)))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((~ (((((rt1.c6)AND(rt1.c1)))AND(t0.c0))))) ORDER BY ((((4.75221837E8) NOT NULL))>(CASE WHEN rt1.c6 THEN t0.c4 WHEN t0.c0 THEN rt1.c5 WHEN t0.c3 THEN rt1.c0 WHEN 4.6721733E8 THEN t0.c0 ELSE t0.c4 END)) ASC, CASE WHEN t0.c3 THEN NULL WHEN t0.c0 THEN t0.c2 ELSE rt1.c6 END COLLATE RTRIM DESC LIMIT 0X1;
SELECT MAX(t0.c4) FROM t0 WHERE ((((((t0.c2, t0.c0, t0.c2))<=((t0.c4, t0.c2, t0.c1)))) IS FALSE));
SELECT ALL MAX(t0.c4) FROM t0 NOT INDEXED WHERE ((((((((t0.c2, t0.c0, t0.c2))=((t0.c4, t0.c2, t0.c1)))) IS FALSE))AND(0.18598264017641553))) LIMIT 0x2 INTERSECT SELECT MAX(t0.c4) FROM t0 WHERE (x'ad') LIMIT 2;
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((((t0.c0) NOT NULL))))) ORDER BY (- (CASE WHEN rt1.c2 THEN t0.c3 WHEN NULL THEN t0.c2 WHEN x'f549' THEN t0.c1 ELSE t0.c3 END));
SELECT * FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((((t0.c0) NOT NULL))))) ORDER BY (- (CASE WHEN rt1.c2 THEN t0.c3 WHEN NULL THEN t0.c2 WHEN x'f549' THEN t0.c1 ELSE t0.c3 END));
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((((t0.c0) NOT NULL))))) ORDER BY (- (CASE WHEN rt1.c2 THEN t0.c3 WHEN NULL THEN t0.c2 WHEN x'f549' THEN t0.c1 ELSE t0.c3 END));
SELECT * FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((((t0.c0) NOT NULL))))) ORDER BY (- (CASE WHEN rt1.c2 THEN t0.c3 WHEN NULL THEN t0.c2 WHEN x'f549' THEN t0.c1 ELSE t0.c3 END));
SELECT ALL * FROM t0 WHERE (((((t0.c4)LIKE(t0.c2)))/('1787676078'))) ORDER BY t0.c2 ASC, t0.c2  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((t0.c4)LIKE(t0.c2)))/('1787676078')))AND(((((((((((((CASE WHEN t0.c4 THEN t0.c2 WHEN t0.c4 THEN x'66' END)AND((- (t0.c2)))))AND((((t0.c4, t0.c0, t0.c3, t0.c1))>((t0.c1, t0.c2, t0.c3, t0.c4))))))AND(t0.c1)))AND(CAST(t0.c4 AS TEXT))))OR(((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))))AND(x''))))) ORDER BY t0.c2 ASC, t0.c2  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (((((t0.c4)LIKE(t0.c2)))/('1787676078'))) ORDER BY t0.c2 ASC, t0.c2  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((t0.c4)LIKE(t0.c2)))/('1787676078')))AND(((((((((((((CASE WHEN t0.c4 THEN t0.c2 WHEN t0.c4 THEN x'66' END)AND((- (t0.c2)))))AND((((t0.c4, t0.c0, t0.c3, t0.c1))>((t0.c1, t0.c2, t0.c3, t0.c4))))))AND(t0.c1)))AND(CAST(t0.c4 AS TEXT))))OR(((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))))AND(x''))))) ORDER BY t0.c2 ASC, t0.c2  NULLS FIRST LIMIT 0X1;
SELECT MAX(rt1.c2) FROM rt1 WHERE ('U' COLLATE BINARY);
SELECT DISTINCT MAX(rt1.c2) FROM rt1 WHERE ('U' COLLATE BINARY) ORDER BY 591531326 DESC LIMIT 0;
SELECT * FROM t0 WHERE (((((((t0.c1)AND(t0.c2)))AND(t0.c1))) IS FALSE));
SELECT * FROM t0 WHERE (((((((((t0.c1)AND(t0.c2)))AND(t0.c1))) IS FALSE))AND(((((NULL)&(t0.c2)))>(((t0.c3)>=(t0.c1))))))) ORDER BY ((((t0.c1)OR(t0.c0)))OR((+ (t0.c2)))) DESC INTERSECT SELECT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c2)))OR(CAST(t0.c0 AS INTEGER))))OR(0.49669789436247513))) ORDER BY ((((t0.c1)OR(t0.c0)))OR((+ (t0.c2)))) DESC;
SELECT * FROM t0 WHERE (((((((t0.c1)AND(t0.c2)))AND(t0.c1))) IS FALSE));
SELECT * FROM t0 WHERE (((((((((t0.c1)AND(t0.c2)))AND(t0.c1))) IS FALSE))AND(((((NULL)&(t0.c2)))>(((t0.c3)>=(t0.c1))))))) ORDER BY ((((t0.c1)OR(t0.c0)))OR((+ (t0.c2)))) DESC INTERSECT SELECT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c2)))OR(CAST(t0.c0 AS INTEGER))))OR(0.49669789436247513))) ORDER BY ((((t0.c1)OR(t0.c0)))OR((+ (t0.c2)))) DESC;
SELECT ALL MAX(t0.c2) FROM t0, rt1 WHERE (CASE WHEN CAST(rt1.c6 AS INTEGER) THEN CAST(rt1.c6 AS REAL) END);
SELECT MAX(t0.c2) FROM t0, rt1 WHERE (((CASE WHEN CAST(rt1.c6 AS INTEGER) THEN CAST(rt1.c6 AS REAL) END)AND(((((((CASE rt1.c4  WHEN rt1.c4 THEN 0.6942555208694464 WHEN t0.c0 THEN t0.c3 ELSE rt1.c2 END)AND(rt1.c3)))OR(TRIM(0.8085265641710278, t0.c1))))AND(((rt1.c4)>(rt1.c2))))))) ORDER BY CAST(x'b3723c00' AS BLOB) DESC  NULLS LAST, ((CAST(rt1.c4 AS NUMERIC)) BETWEEN (LTRIM(t0.c0, rt1.c5)) AND ((rt1.c2 IN (t0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((CAST(t0.c2 AS BLOB))OR(((t0.c1) IS TRUE))))AND(t0.c3))) ORDER BY ((((t0.c2) BETWEEN (t0.c3) AND (t0.c2))) NOT BETWEEN (467217330) AND ((+ ('0.13587103737969575'))))  NULLS LAST, CAST(((t0.c1)AND(t0.c1)) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c2 AS BLOB))OR(((t0.c1) IS TRUE))))AND(t0.c3))) ORDER BY ((((t0.c2) BETWEEN (t0.c3) AND (t0.c2))) NOT BETWEEN (0X1bd92bb2) AND ((+ ('0.13587103737969575'))))  NULLS LAST, CAST(((t0.c1)AND(t0.c1)) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ('Bkw' IN ())  WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN CAST(rt1.c5 AS REAL) WHEN rt1.c1 THEN CAST(NULL AS BLOB) WHEN (- (rt1.c6)) THEN ('-528801166' IN (rt1.c1)) ELSE ((((((rt1.c1)OR(rt1.c2)))OR(rt1.c3)))AND(NULL)) END) ORDER BY (((rt1.c3, rt1.c2)) NOT BETWEEN (((+ (NULL)), ((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c1)))) AND ((((rt1.c3)<<(rt1.c0)), ((rt1.c3)||(rt1.c3)))));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CASE ('Bkw' IN ())  WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN CAST(rt1.c5 AS REAL) WHEN rt1.c1 THEN CAST(NULL AS BLOB) WHEN (- (rt1.c6)) THEN ('-528801166' IN (rt1.c1)) ELSE ((((((rt1.c1)OR(rt1.c2)))OR(rt1.c3)))AND(NULL)) END) ORDER BY LIKE(x'53e0', ((0.4746247758212162)<=(rt1.c4)), '_') ASC, ((((((rt1.c0))>((rt1.c6))), CASE WHEN x'' THEN rt1.c3 WHEN rt1.c2 THEN x'e1be0bb4' WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c0 END))<=(((((rt1.c3, 0.6582575926668529, rt1.c1))<=((rt1.c6, rt1.c2, rt1.c1))), rt1.c5 COLLATE BINARY)))  NULLS FIRST, (rt1.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((0.1354880167600533)IS NOT((rt1.c2 IN ())))) ORDER BY LIKE(x'53e0', ((0.4746247758212162)<=(rt1.c4)), '_') ASC, ((((((rt1.c0))>((rt1.c6))), CASE WHEN x'' THEN rt1.c3 WHEN rt1.c2 THEN x'e1be0bb4' WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c0 END))<=(((((rt1.c3, 0.6582575926668529, rt1.c1))<=((rt1.c6, rt1.c2, rt1.c1))), rt1.c5 COLLATE BINARY)))  NULLS FIRST, (rt1.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c4)) NOT BETWEEN (((+ (x'6a5e9d')))) AND ((NULL COLLATE BINARY))));
SELECT ALL * FROM t0 WHERE ((((((t0.c4)) NOT BETWEEN (((+ (x'6a5e9d')))) AND ((NULL COLLATE BINARY))))AND(t0.c2))) ORDER BY (~ (('g~孥￿l^' IN ())))  NULLS LAST LIMIT 0X3 INTERSECT SELECT ALL * FROM t0 WHERE (((t0.c3)*(((((((t0.c2)AND(x'9e7b')))OR(t0.c0)))OR(NULL))))) ORDER BY (~ (('g~孥￿l^' IN ())))  NULLS LAST LIMIT 0X3;
SELECT * FROM t0 WHERE ((((t0.c4)) NOT BETWEEN (((+ (x'6a5e9d')))) AND ((NULL COLLATE BINARY))));
SELECT ALL * FROM t0 WHERE ((((((t0.c4)) NOT BETWEEN (((+ (x'6a5e9d')))) AND ((NULL COLLATE BINARY))))AND(t0.c2))) ORDER BY (~ (('g~孥￿l^' IN ())))  NULLS LAST LIMIT 0X3 INTERSECT SELECT ALL * FROM t0 WHERE (((t0.c3)*(((((((t0.c2)AND(x'9e7b')))OR(t0.c0)))OR(NULL))))) ORDER BY (~ (('g~孥￿l^' IN ())))  NULLS LAST LIMIT 0X3;
SELECT ALL MAX(rt1.c2) FROM rt1 WHERE ((((rt1.c6))>((rt1.c3))) COLLATE NOCASE) ORDER BY ((((0.8783035131824222)AND(TRIM(DISTINCT rt1.c6))))OR((((rt1.c6, rt1.c3, NULL, '-547373890'))>((x'', rt1.c1, rt1.c2, rt1.c5)))));
SELECT MAX(rt1.c2) FROM rt1 WHERE ((((((rt1.c6))>((rt1.c3))) COLLATE NOCASE)AND((((rt1.c0, rt1.c0, rt1.c0)) BETWEEN (((((rt1.c3, rt1.c3))<((rt1.c6, x''))), ((((((((((rt1.c0)OR(rt1.c6)))AND(NULL)))AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c3)), x'4f45c9')) AND ((CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 END, ((rt1.c6) NOT BETWEEN (0.7208732025697976) AND (x'')), ((rt1.c1) IS TRUE))))))) ORDER BY ((CAST(rt1.c2 AS REAL))AND((rt1.c0 IN (rt1.c5)))), CASE WHEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c5 END THEN ((((((((((rt1.c4)AND(0.7811797929712536)))OR(rt1.c5)))AND(rt1.c6)))AND(rt1.c0)))AND(rt1.c4)) END  NULLS LAST LIMIT 0x0;
SELECT * FROM rt1 CROSS JOIN t0 ON CASE CASE rt1.c4  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c6 WHEN t0.c2 THEN rt1.c5 END  WHEN CASE WHEN t0.c3 THEN rt1.c3 ELSE rt1.c6 END THEN t0.c3 ELSE CAST(t0.c2 AS NUMERIC) END WHERE (rt1.c6);
SELECT * FROM rt1 CROSS JOIN t0 ON CASE CASE rt1.c4  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c6 WHEN t0.c2 THEN rt1.c5 END  WHEN CASE WHEN t0.c3 THEN rt1.c3 ELSE rt1.c6 END THEN t0.c3 ELSE CAST(t0.c2 AS NUMERIC) END WHERE (rt1.c6) INTERSECT SELECT ALL * FROM rt1 CROSS JOIN t0 ON CASE CASE rt1.c4  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c6 WHEN t0.c2 THEN rt1.c5 END  WHEN CASE WHEN t0.c3 THEN rt1.c3 ELSE rt1.c6 END THEN t0.c3 ELSE CAST(t0.c2 AS NUMERIC) END WHERE (t0.c3);
SELECT * FROM rt1 CROSS JOIN t0 ON CASE CASE rt1.c4  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c6 WHEN t0.c2 THEN rt1.c5 END  WHEN CASE WHEN t0.c3 THEN rt1.c3 ELSE rt1.c6 END THEN t0.c3 ELSE CAST(t0.c2 AS NUMERIC) END WHERE (rt1.c6);
SELECT * FROM rt1 CROSS JOIN t0 ON CASE CASE rt1.c4  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c6 WHEN t0.c2 THEN rt1.c5 END  WHEN CASE WHEN t0.c3 THEN rt1.c3 ELSE rt1.c6 END THEN t0.c3 ELSE CAST(t0.c2 AS NUMERIC) END WHERE (rt1.c6) INTERSECT SELECT ALL * FROM rt1 CROSS JOIN t0 ON CASE CASE rt1.c4  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c6 WHEN t0.c2 THEN rt1.c5 END  WHEN CASE WHEN t0.c3 THEN rt1.c3 ELSE rt1.c6 END THEN t0.c3 ELSE CAST(t0.c2 AS NUMERIC) END WHERE (t0.c3);
SELECT ALL * FROM t0 WHERE (((t0.c4) NOT BETWEEN ('-1230812522') AND (t0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((t0.c4) NOT BETWEEN ('-1230812522') AND (t0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY 'T'  NULLS LAST, (((t0.c2 IN (t0.c3, t0.c2, t0.c2)))|((((t0.c0, t0.c0, x'9b')) BETWEEN ((NULL, t0.c4, t0.c3)) AND ((t0.c3, t0.c2, t0.c4))))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c4) NOT BETWEEN ('-1230812522') AND (t0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((t0.c4) NOT BETWEEN ('-1230812522') AND (t0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY 'T'  NULLS LAST, (((t0.c2 IN (t0.c3, t0.c2, t0.c2)))|((((t0.c0, t0.c0, x'9b')) BETWEEN ((NULL, t0.c4, t0.c3)) AND ((t0.c3, t0.c2, t0.c4))))) DESC  NULLS LAST;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (UNLIKELY(0.9187571754710213)) ORDER BY (('-1071383120')>=(((t0.c0) IS FALSE))), (((x''))<(((t0.c4 IN (t0.c3)))));
SELECT MAX(t0.c3) FROM t0 WHERE (UNLIKELY(0.9187571754710213)) ORDER BY (('-1071383120')>=(((t0.c0) IS FALSE))), (((x''))<(((t0.c4 IN (t0.c3)))));
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c0) BETWEEN (rt1.c2) AND (t0.c4)) IN ()));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c0) BETWEEN (rt1.c2) AND (t0.c4)) IN ()))AND(json_insert(((((((((t0.c1)AND(t0.c1)))OR(t0.c0)))AND(t0.c4)))OR(t0.c2)), ((t0.c3)==(rt1.c1)), (NOT (rt1.c2)))))) ORDER BY t0.c3, (+ ((+ (rt1.c3)))) ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c1) IS FALSE))AND(((t0.c3) NOT NULL)))) ORDER BY t0.c3, (+ ((+ (rt1.c3)))) ASC LIMIT 0X0;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c0) BETWEEN (rt1.c2) AND (t0.c4)) IN ()));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c0) BETWEEN (rt1.c2) AND (t0.c4)) IN ()))AND(json_insert(((((((((t0.c1)AND(t0.c1)))OR(t0.c0)))AND(t0.c4)))OR(t0.c2)), ((t0.c3)==(rt1.c1)), (NOT (rt1.c2)))))) ORDER BY t0.c3, (+ ((+ (rt1.c3)))) ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c1) IS FALSE))AND(((t0.c3) NOT NULL)))) ORDER BY t0.c3, (+ ((+ (rt1.c3)))) ASC LIMIT 0X0;
SELECT ALL MIN(t0.c3) FROM t0 WHERE (t0.c2) ORDER BY (((((x'fa')||(t0.c4))))=((((t0.c1) ISNULL))))  NULLS FIRST, ((((((t0.c2)OR(t0.c3)))AND(t0.c3))) BETWEEN ((((t0.c1))<>((t0.c2)))) AND (x'799f' COLLATE NOCASE)) DESC;
SELECT MIN(t0.c3) FROM t0 WHERE (t0.c2) ORDER BY (((((x'fa')||(t0.c4))))=((((t0.c1) ISNULL))))  NULLS FIRST, ((((((t0.c2)OR(t0.c3)))AND(t0.c3))) BETWEEN ((((t0.c1))<>((t0.c2)))) AND (x'799f' COLLATE NOCASE)) DESC;
SELECT ALL * FROM rt1, t0 WHERE (((CAST(rt1.c2 AS BLOB))IS(((rt1.c4)>=(rt1.c3))))) ORDER BY ((CASE rt1.c4  WHEN rt1.c3 THEN t0.c0 WHEN t0.c4 THEN rt1.c6 WHEN t0.c0 THEN t0.c3 ELSE rt1.c4 END)>((((rt1.c5, rt1.c0, rt1.c6)) BETWEEN ((rt1.c5, rt1.c4, rt1.c3)) AND ((rt1.c0, rt1.c5, t0.c3)))))  NULLS FIRST, ((CASE ''  WHEN t0.c3 THEN t0.c2 WHEN rt1.c5 THEN t0.c3 ELSE rt1.c3 END)>>(NULLIF(rt1.c3, rt1.c0)))  NULLS LAST, NULL;
SELECT * FROM rt1, t0 WHERE (((CAST(rt1.c2 AS BLOB))IS(((rt1.c4)>(rt1.c3))))) ORDER BY TOTAL_CHANGES() COLLATE NOCASE  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (((((((t0.c0)AND(t0.c3)))AND(rt1.c3)))AND(rt1.c3)) COLLATE NOCASE) ORDER BY TOTAL_CHANGES() COLLATE NOCASE  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (((CAST(rt1.c2 AS BLOB))IS(((rt1.c4)>=(rt1.c3))))) ORDER BY ((CASE rt1.c4  WHEN rt1.c3 THEN t0.c0 WHEN t0.c4 THEN rt1.c6 WHEN t0.c0 THEN t0.c3 ELSE rt1.c4 END)>((((rt1.c5, rt1.c0, rt1.c6)) BETWEEN ((rt1.c5, rt1.c4, rt1.c3)) AND ((rt1.c0, rt1.c5, t0.c3)))))  NULLS FIRST, ((CASE ''  WHEN t0.c3 THEN t0.c2 WHEN rt1.c5 THEN t0.c3 ELSE rt1.c3 END)>>(NULLIF(rt1.c3, rt1.c0)))  NULLS LAST, NULL;
SELECT * FROM rt1, t0 WHERE (((CAST(rt1.c2 AS BLOB))IS(((rt1.c4)>(rt1.c3))))) ORDER BY TOTAL_CHANGES() COLLATE NOCASE  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (((((((t0.c0)AND(t0.c3)))AND(rt1.c3)))AND(rt1.c3)) COLLATE NOCASE) ORDER BY TOTAL_CHANGES() COLLATE NOCASE  NULLS FIRST LIMIT 0;
SELECT ALL MAX(rt1.c6) FROM rt1 WHERE ((- (((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c6)))AND(rt1.c5)))));
SELECT MAX(rt1.c6) FROM rt1 WHERE ((- (((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c6)))AND(rt1.c5))))) LIMIT 1 INTERSECT SELECT ALL MAX(rt1.c6) FROM rt1 WHERE (((((((((rt1.c2) ISNULL))AND((rt1.c2 IN (rt1.c6, rt1.c6)))))OR('-1230812522')))AND(rt1.c6 COLLATE BINARY))) LIMIT 1;
SELECT * FROM t0, rt1 WHERE ((((t0.c2)) NOT BETWEEN ((CAST(rt1.c4 AS NUMERIC))) AND ((rt1.c3)))) ORDER BY ((((1923174721)GLOB(x'22fc')))>((rt1.c6 IN (t0.c1))))  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c2)) NOT BETWEEN ((CAST(rt1.c4 AS NUMERIC))) AND ((rt1.c3))))AND(CAST(JULIANDAY(rt1.c1, rt1.c6, rt1.c1) AS REAL)))) ORDER BY ((((0X72a15141)GLOB(x'22fc')))>((rt1.c6 IN (t0.c1))))  NULLS LAST LIMIT 0x0;
SELECT * FROM t0, rt1 WHERE ((((t0.c2)) NOT BETWEEN ((CAST(rt1.c4 AS NUMERIC))) AND ((rt1.c3)))) ORDER BY ((((1923174721)GLOB(x'22fc')))>((rt1.c6 IN (t0.c1))))  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c2)) NOT BETWEEN ((CAST(rt1.c4 AS NUMERIC))) AND ((rt1.c3))))AND(CAST(JULIANDAY(rt1.c1, rt1.c6, rt1.c1) AS REAL)))) ORDER BY ((((0X72a15141)GLOB(x'22fc')))>((rt1.c6 IN (t0.c1))))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t0 WHERE ((t0.c3 IN (((((t0.c3)AND(t0.c0)))OR('')))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c3 IN (((((t0.c3)AND(t0.c0)))OR('')))))AND(((((t0.c1)OR(t0.c4)))OR(t0.c3)) COLLATE BINARY COLLATE RTRIM))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c1 COLLATE BINARY) NOT NULL)) LIMIT 1;
SELECT ALL * FROM t0 WHERE ((t0.c3 IN (((((t0.c3)AND(t0.c0)))OR('')))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c3 IN (((((t0.c3)AND(t0.c0)))OR('')))))AND(((((t0.c1)OR(t0.c4)))OR(t0.c3)) COLLATE BINARY COLLATE RTRIM))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c1 COLLATE BINARY) NOT NULL)) LIMIT 1;
SELECT MIN(rt1.c0) FROM rt1, t0 WHERE ((((NOT (t0.c0)))*(((((((((rt1.c4)AND(t0.c4)))AND(t0.c1)))OR(x'aa')))OR(t0.c4))))) ORDER BY ((CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c4 END) NOT NULL), LOWER(rt1.c1), (rt1.c4 COLLATE BINARY IN ())  NULLS FIRST;
SELECT DISTINCT MIN(rt1.c0) FROM rt1, t0 WHERE ((((NOT (t0.c0)))*(((((((((rt1.c4)AND(t0.c4)))AND(t0.c1)))OR(x'aa')))OR(t0.c4))))) ORDER BY ((CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c4 END) NOT NULL), LOWER(rt1.c1), (rt1.c4 COLLATE BINARY IN ())  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MIN(rt1.c0) FROM rt1, t0 WHERE (CAST(CAST(rt1.c0 AS REAL) AS BLOB)) ORDER BY ((CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c4 END) NOT NULL), LOWER(rt1.c1), (rt1.c4 COLLATE BINARY IN ())  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON rt1.c4 WHERE (((CAST(rt1.c6 AS NUMERIC)) IS TRUE)) ORDER BY (((((((('0.1354880167600533')OR(t0.c1 COLLATE BINARY)))AND(((rt1.c5)<<(rt1.c6)))))AND(((rt1.c2)IS(rt1.c3)))))AND((~ (rt1.c0)))) ASC, ((((0.08715382449460207)>>(t0.c0))) IS TRUE)  NULLS LAST;
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON rt1.c4 WHERE (((((CAST(rt1.c6 AS NUMERIC)) IS TRUE))AND((- (((t0.c4) BETWEEN (rt1.c5) AND (rt1.c0))))))) ORDER BY CAST(((t0.c3)<(t0.c2)) AS REAL) DESC INTERSECT SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON rt1.c4 WHERE ((((t0.c1) ISNULL) IN ())) ORDER BY CAST(((t0.c3)<(t0.c2)) AS REAL) DESC;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON rt1.c4 WHERE (((CAST(rt1.c6 AS NUMERIC)) IS TRUE)) ORDER BY (((((((('0.1354880167600533')OR(t0.c1 COLLATE BINARY)))AND(((rt1.c5)<<(rt1.c6)))))AND(((rt1.c2)IS(rt1.c3)))))AND((~ (rt1.c0)))) ASC, ((((0.08715382449460207)>>(t0.c0))) IS TRUE)  NULLS LAST;
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON rt1.c4 WHERE (((((CAST(rt1.c6 AS NUMERIC)) IS TRUE))AND((- (((t0.c4) BETWEEN (rt1.c5) AND (rt1.c0))))))) ORDER BY CAST(((t0.c3)<(t0.c2)) AS REAL) DESC INTERSECT SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON rt1.c4 WHERE ((((t0.c1) ISNULL) IN ())) ORDER BY CAST(((t0.c3)<(t0.c2)) AS REAL) DESC;
SELECT ALL MAX(rt1.c0) FROM rt1 WHERE (((((('Rn', rt1.c1, 0.41611625266826924)) BETWEEN ((rt1.c2, rt1.c3, rt1.c4)) AND ((rt1.c0, rt1.c5, rt1.c3)))) BETWEEN ((((rt1.c5, '~~6熯-okz_'))==((rt1.c6, rt1.c1)))) AND ((~ (rt1.c5)))));
SELECT DISTINCT MAX(rt1.c0) FROM rt1 WHERE (((((((('Rn', rt1.c1, 0.41611625266826924)) BETWEEN ((rt1.c2, rt1.c3, rt1.c4)) AND ((rt1.c0, rt1.c5, rt1.c3)))) BETWEEN ((((rt1.c5, '~~6熯-okz_'))==((rt1.c6, rt1.c1)))) AND ((~ (rt1.c5)))))AND(((((((((((rt1.c5)%(rt1.c1)))OR(rt1.c3)))AND(CAST(rt1.c1 AS TEXT))))AND(NULLIF(rt1.c3, rt1.c6))))AND((+ (rt1.c4))))))) ORDER BY LIKELY(DISTINCT rt1.c4), (((rt1.c4 COLLATE RTRIM))<=(((~ (rt1.c4))))) DESC  NULLS FIRST LIMIT 2;
SELECT ALL MAX(t0.c2) FROM t0 NOT INDEXED WHERE (((((((CAST(t0.c4 AS TEXT))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR((~ (t0.c3)))))OR((((t0.c4, t0.c1)) NOT BETWEEN (('-1125839889', t0.c2)) AND ((t0.c3, t0.c0)))))) ORDER BY t0.c3 DESC  NULLS FIRST;
SELECT ALL MAX(t0.c2) FROM t0 WHERE (((((((CAST(t0.c4 AS TEXT))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR((~ (t0.c3)))))OR((((t0.c4, t0.c1)) NOT BETWEEN (('-1125839889', t0.c2)) AND ((t0.c3, t0.c0)))))) ORDER BY (t0.c2 IN ()) ASC  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((((t0.c1)/(t0.c2)))) AND ((t0.c2 COLLATE BINARY))) ASC LIMIT 0;
SELECT * FROM t0 CROSS JOIN rt1 ON ((rt1.c1 COLLATE BINARY) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ('Qi')) WHERE ((CAST(rt1.c3 AS REAL) IN (LIKELIHOOD(DISTINCT rt1.c0, rt1.c3))));
SELECT * FROM t0 CROSS JOIN rt1 ON ((rt1.c1 COLLATE BINARY) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ('Qi')) WHERE ((CAST(rt1.c3 AS REAL) IN (LIKELIHOOD(DISTINCT rt1.c0, rt1.c3)))) LIMIT 0;
SELECT * FROM t0 CROSS JOIN rt1 ON ((rt1.c1 COLLATE BINARY) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND ('Qi')) WHERE ((CAST(rt1.c3 AS REAL) IN (LIKELIHOOD(DISTINCT rt1.c0, rt1.c3))));
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)))OR('-1701853655')))AND(LIKELIHOOD(DISTINCT rt1.c0, 0.5282283957617471)))) ORDER BY x'906a'  NULLS LAST, 'rwpx搜GS5' DESC, LIKELY(rt1.c4 COLLATE RTRIM)  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)))OR('-1701853655')))AND(LIKELIHOOD(DISTINCT rt1.c0, 0.5282283957617471)))) ORDER BY SQLITE_VERSION()  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)))OR('-1701853655')))AND(LIKELIHOOD(DISTINCT rt1.c0, 0.5282283957617471)))) ORDER BY x'906a'  NULLS LAST, 'rwpx搜GS5' DESC, LIKELY(rt1.c4 COLLATE RTRIM)  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)))OR('-1701853655')))AND(LIKELIHOOD(DISTINCT rt1.c0, 0.5282283957617471)))) ORDER BY SQLITE_VERSION()  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0 WHERE ('1799702489');
SELECT COUNT(*) FROM rt1, t0 WHERE ((('1799702489')AND(((((((((((((rt1.c5) IS TRUE))OR(json_valid(t0.c1))))OR(LIKELIHOOD(rt1.c1, rt1.c5))))OR(((((((((((t0.c0)OR(rt1.c5)))AND(rt1.c2)))AND(rt1.c6)))AND(rt1.c4)))AND(rt1.c2)))))AND((- (t0.c4)))))OR(CASE WHEN t0.c4 THEN t0.c1 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c4 END))))) LIMIT 0X0;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (CAST(((t0.c3) BETWEEN (rt1.c1) AND (rt1.c6)) AS TEXT)) ORDER BY (((rt1.c6) NOT NULL) IN ())  NULLS LAST, CASE WHEN ((rt1.c3) IS TRUE) THEN rt1.c6 COLLATE NOCASE WHEN ((t0.c4) NOTNULL) THEN ((rt1.c4) NOT NULL) WHEN ((t0.c2)||(rt1.c5)) THEN rt1.c4 ELSE CAST('6/#S!wR' AS REAL) END DESC  NULLS LAST, CASE WHEN ((rt1.c3)IS(t0.c4)) THEN ((rt1.c5) NOT NULL) END  NULLS LAST;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((CAST(((t0.c3) BETWEEN (rt1.c1) AND (rt1.c6)) AS TEXT))AND(((((((rt1.c0) ISNULL))AND(0x1bd92bb2)))AND(((((t0.c2)AND(t0.c4)))OR(rt1.c0))))))) ORDER BY ((LIKELY(DISTINCT '1639601663')) NOTNULL), rt1.c4 ASC LIMIT 0x0;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (CAST(((t0.c3) BETWEEN (rt1.c1) AND (rt1.c6)) AS TEXT)) ORDER BY (((rt1.c6) NOT NULL) IN ())  NULLS LAST, CASE WHEN ((rt1.c3) IS TRUE) THEN rt1.c6 COLLATE NOCASE WHEN ((t0.c4) NOTNULL) THEN ((rt1.c4) NOT NULL) WHEN ((t0.c2)||(rt1.c5)) THEN rt1.c4 ELSE CAST('6/#S!wR' AS REAL) END DESC  NULLS LAST, CASE WHEN ((rt1.c3)IS(t0.c4)) THEN ((rt1.c5) NOT NULL) END  NULLS LAST;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE ((((rt1.c1, rt1.c4)) BETWEEN ((((rt1.c0) NOT NULL), ((0X30fdb141)%(rt1.c4)))) AND ((CAST('-1184841295' AS NUMERIC), (- (t0.c2)))))) ORDER BY 0.40429579336376364 ASC, (((((((t0.c4)AND(rt1.c0)))OR(rt1.c5))))<((NULL))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE ((((rt1.c1, rt1.c4)) BETWEEN ((((rt1.c0) NOT NULL), ((821932353)%(rt1.c4)))) AND ((CAST('-1184841295' AS NUMERIC), (- (t0.c2)))))) ORDER BY 0.40429579336376364 ASC, (((((((t0.c4)AND(rt1.c0)))OR(rt1.c5))))<((NULL))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE (((((rt1.c4) NOT NULL)) NOTNULL)) ORDER BY 0.40429579336376364 ASC, (((((((t0.c4)AND(rt1.c0)))OR(rt1.c5))))<((NULL))) DESC  NULLS FIRST;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE ((((rt1.c1, rt1.c4)) BETWEEN ((((rt1.c0) NOT NULL), ((0X30fdb141)%(rt1.c4)))) AND ((CAST('-1184841295' AS NUMERIC), (- (t0.c2)))))) ORDER BY 0.40429579336376364 ASC, (((((((t0.c4)AND(rt1.c0)))OR(rt1.c5))))<((NULL))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE ((((rt1.c1, rt1.c4)) BETWEEN ((((rt1.c0) NOT NULL), ((821932353)%(rt1.c4)))) AND ((CAST('-1184841295' AS NUMERIC), (- (t0.c2)))))) ORDER BY 0.40429579336376364 ASC, (((((((t0.c4)AND(rt1.c0)))OR(rt1.c5))))<((NULL))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE (((((rt1.c4) NOT NULL)) NOTNULL)) ORDER BY 0.40429579336376364 ASC, (((((((t0.c4)AND(rt1.c0)))OR(rt1.c5))))<((NULL))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c3)*(NULL)) IN (((t0.c1) NOTNULL), ((t0.c1)<<(t0.c4))))) ORDER BY ((((((((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c3 END)AND(json_object(t0.c3, t0.c0, t0.c2, '', t0.c3))))OR(t0.c0)))AND(((((((((t0.c2)OR(x'14')))OR(t0.c3)))AND(t0.c4)))AND(t0.c0)))))OR(((t0.c0) NOT BETWEEN (x'c771ac5c') AND (t0.c4)))) ASC, ((CAST(t0.c2 AS NUMERIC)) IS FALSE), ((((t0.c1) NOT BETWEEN (t0.c0) AND (0.6088508550939677))) IS TRUE), ((((((((t0.c0)OR(t0.c3)))AND(t0.c0)))OR(t0.c2))) NOT BETWEEN (UPPER(DISTINCT t0.c2)) AND ((((t0.c3, t0.c3)) NOT BETWEEN ((x'2e91', t0.c0)) AND ((t0.c4, t0.c4)))));
SELECT * FROM t0 WHERE ((((((t0.c3)*(NULL)) IN (((t0.c1) NOTNULL), ((t0.c1)<<(t0.c4)))))AND(t0.c3))) ORDER BY (((((t0.c4))<((t0.c3))))IS NOT((((t0.c3, t0.c4, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c4)) AND ((t0.c2, t0.c4, t0.c1))))), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c3))) COLLATE BINARY  NULLS LAST, (((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))))<=(((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c1)))) DESC LIMIT 2;
SELECT ALL * FROM t0 WHERE ((((t0.c3)*(NULL)) IN (((t0.c1) NOTNULL), ((t0.c1)<<(t0.c4))))) ORDER BY ((((((((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c3 END)AND(json_object(t0.c3, t0.c0, t0.c2, '', t0.c3))))OR(t0.c0)))AND(((((((((t0.c2)OR(x'14')))OR(t0.c3)))AND(t0.c4)))AND(t0.c0)))))OR(((t0.c0) NOT BETWEEN (x'c771ac5c') AND (t0.c4)))) ASC, ((CAST(t0.c2 AS NUMERIC)) IS FALSE), ((((t0.c1) NOT BETWEEN (t0.c0) AND (0.6088508550939677))) IS TRUE), ((((((((t0.c0)OR(t0.c3)))AND(t0.c0)))OR(t0.c2))) NOT BETWEEN (UPPER(DISTINCT t0.c2)) AND ((((t0.c3, t0.c3)) NOT BETWEEN ((x'2e91', t0.c0)) AND ((t0.c4, t0.c4)))));
SELECT * FROM t0 WHERE ((((((t0.c3)*(NULL)) IN (((t0.c1) NOTNULL), ((t0.c1)<<(t0.c4)))))AND(t0.c3))) ORDER BY (((((t0.c4))<((t0.c3))))IS NOT((((t0.c3, t0.c4, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c4)) AND ((t0.c2, t0.c4, t0.c1))))), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c3))) COLLATE BINARY  NULLS LAST, (((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))))<=(((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c1)))) DESC LIMIT 2;
SELECT MIN(t0.c2) FROM t0, rt1 WHERE ((t0.c0 IN ()));
SELECT MIN(t0.c2) FROM t0, rt1 WHERE ((((t0.c0 IN ()))AND((((((rt1.c2)<(rt1.c1)), ((t0.c0)||(rt1.c4)), CASE rt1.c4  WHEN rt1.c2 THEN t0.c4 WHEN 'Hhّ' THEN rt1.c3 ELSE t0.c0 END))>=((t0.c3, ((((((((((rt1.c3)OR(t0.c2)))AND(t0.c0)))OR(rt1.c1)))OR(rt1.c5)))AND(t0.c2)), ((rt1.c6)%(-1.230812522E9)))))))) LIMIT 0X1 INTERSECT SELECT MIN(t0.c2) FROM t0, rt1 WHERE ((((rt1.c2, rt1.c4, t0.c4, rt1.c3)) NOT BETWEEN ((TYPEOF('0.4875802708536756'), rt1.c5, ((((((((t0.c4)AND(rt1.c3)))OR(t0.c1)))AND(x'6251')))AND(rt1.c6)), '-956693349')) AND ((RTRIM(t0.c1), ((t0.c4)IS NOT(t0.c2)), (rt1.c4 IN ()), (((t0.c2))<=((rt1.c2))))))) LIMIT 1;
SELECT * FROM t0, rt1 WHERE (((((+ (t0.c4))))<((((t0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))))) ORDER BY 0X2b956f27;
SELECT * FROM t0, rt1 WHERE (((((((+ (t0.c4))))<((((t0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1))))))AND(((rt1.c3 COLLATE BINARY)-((NOT (rt1.c1))))))) ORDER BY CASE WHEN t0.c2 COLLATE NOCASE THEN (rt1.c0 IN ()) WHEN (((t0.c3)) NOT BETWEEN ((rt1.c1)) AND ((t0.c3))) THEN ((t0.c0)+(t0.c2)) ELSE t0.c0 COLLATE NOCASE END  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM t0, rt1 WHERE (((((rt1.c4)<<(rt1.c5)))<=(rt1.c6))) ORDER BY CASE WHEN t0.c2 COLLATE NOCASE THEN (rt1.c0 IN ()) WHEN (((t0.c3)) NOT BETWEEN ((rt1.c1)) AND ((t0.c3))) THEN ((t0.c0)+(t0.c2)) ELSE t0.c0 COLLATE NOCASE END  NULLS LAST LIMIT 0X0;
SELECT * FROM t0, rt1 WHERE (((((+ (t0.c4))))<((((t0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))))) ORDER BY 0X2b956f27;
SELECT ALL MAX(t0.c2) FROM t0 WHERE ('ziEķ<');
SELECT ALL MAX(t0.c2) FROM t0 WHERE ('ziEķ<') ORDER BY '1633093055' COLLATE BINARY INTERSECT SELECT MAX(t0.c2) FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) BETWEEN (t0.c1) AND (x''))) ORDER BY '1633093055' COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t0 ON (+ (t0.c4 COLLATE BINARY)) WHERE ((((rt1.c4, rt1.c2, UPPER(DISTINCT t0.c4)))<>((x'', '|bq3v', ((t0.c1)IS NOT(t0.c0)))))) ORDER BY UPPER(DISTINCT (rt1.c4 IN ())) ASC  NULLS LAST, t0.c3 ASC;
SELECT DISTINCT COUNT(*) FROM rt1 INNER JOIN t0 ON (+ (t0.c4 COLLATE BINARY)) WHERE ((((((rt1.c4, rt1.c2, UPPER(DISTINCT t0.c4)))<((x'', '|bq3v', ((t0.c1)IS NOT(t0.c0))))))AND((((((((((('{QkG}')OR(rt1.c6)))OR(t0.c3)))OR(t0.c3)))AND(((t0.c1) NOT NULL))))OR(CASE rt1.c3  WHEN rt1.c6 THEN 0.14790898626958582 WHEN t0.c2 THEN t0.c4 END))))) ORDER BY UPPER(DISTINCT (rt1.c4 IN ())) ASC  NULLS LAST, t0.c3 ASC;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))) NOT BETWEEN (CAST(rt1.c6 AS INTEGER)) AND ((rt1.c1 IN ()))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))) NOT BETWEEN (CAST(rt1.c6 AS INTEGER)) AND ((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt1 WHERE (x'5af983');
SELECT COUNT(*) FROM rt1 WHERE (((x'5af983')AND((- (((((((rt1.c2)OR(rt1.c4)))OR(rt1.c3)))OR(rt1.c1))))))) ORDER BY CASE '-523250614'  WHEN ((rt1.c3) IS FALSE) THEN rt1.c6 COLLATE NOCASE WHEN (~ (rt1.c5)) THEN (rt1.c4 IN (rt1.c1, rt1.c6)) ELSE CASE rt1.c6  WHEN rt1.c2 THEN rt1.c5 ELSE 0.5806564964651925 END END LIMIT 3 INTERSECT SELECT COUNT(*) FROM rt1 WHERE ((- (((rt1.c0)*(rt1.c2))))) ORDER BY CASE '-523250614'  WHEN ((rt1.c3) IS FALSE) THEN rt1.c6 COLLATE NOCASE WHEN (~ (rt1.c5)) THEN (rt1.c4 IN (rt1.c1, rt1.c6)) ELSE CASE rt1.c6  WHEN rt1.c2 THEN rt1.c5 ELSE 0.5806564964651925 END END LIMIT 0x3;
SELECT * FROM rt1 WHERE (CAST(CASE NULL  WHEN rt1.c2 THEN rt1.c2 END AS TEXT)) ORDER BY (NOT (0.2672957122232348)) DESC  NULLS LAST, (((rt1.c1)) BETWEEN ((((rt1.c1)IS(rt1.c0)))) AND ((((rt1.c6)+(rt1.c2)))));
SELECT DISTINCT * FROM rt1 WHERE (((CAST(CASE NULL  WHEN rt1.c2 THEN rt1.c2 END AS TEXT))AND(rt1.c3 COLLATE NOCASE))) ORDER BY (NOT (0.2672957122232348)) DESC  NULLS LAST, (((rt1.c1)) BETWEEN ((((rt1.c1)IS(rt1.c0)))) AND ((((rt1.c6)+(rt1.c2))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY (NOT (0.2672957122232348)) DESC  NULLS LAST, (((rt1.c1)) BETWEEN ((((rt1.c1)IS(rt1.c0)))) AND ((((rt1.c6)+(rt1.c2))))) LIMIT 0X0;
SELECT * FROM rt1 WHERE (CAST(CASE NULL  WHEN rt1.c2 THEN rt1.c2 END AS TEXT)) ORDER BY (NOT (0.2672957122232348)) DESC  NULLS LAST, (((rt1.c1)) BETWEEN ((((rt1.c1)IS(rt1.c0)))) AND ((((rt1.c6)+(rt1.c2)))));
SELECT DISTINCT * FROM rt1 WHERE (((CAST(CASE NULL  WHEN rt1.c2 THEN rt1.c2 END AS TEXT))AND(rt1.c3 COLLATE NOCASE))) ORDER BY (NOT (0.2672957122232348)) DESC  NULLS LAST, (((rt1.c1)) BETWEEN ((((rt1.c1)IS(rt1.c0)))) AND ((((rt1.c6)+(rt1.c2))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY (NOT (0.2672957122232348)) DESC  NULLS LAST, (((rt1.c1)) BETWEEN ((((rt1.c1)IS(rt1.c0)))) AND ((((rt1.c6)+(rt1.c2))))) LIMIT 0X0;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c4) IS FALSE)  WHEN CASE WHEN t0.c4 THEN t0.c3 WHEN '1239046975' THEN t0.c2 WHEN x'7ddfa611' THEN t0.c1 WHEN '#' THEN t0.c2 ELSE t0.c1 END THEN t0.c4 COLLATE BINARY WHEN ((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c4)) THEN t0.c2 WHEN 0.11972721212965909 COLLATE NOCASE THEN (t0.c3 IN (t0.c2)) END) ORDER BY ((t0.c2)GLOB(0.3382252848956877)) COLLATE BINARY DESC;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CASE ((t0.c4) IS FALSE)  WHEN CASE WHEN t0.c4 THEN t0.c3 WHEN '1239046975' THEN t0.c2 WHEN x'7ddfa611' THEN t0.c1 WHEN '#' THEN t0.c2 ELSE t0.c1 END THEN t0.c4 COLLATE BINARY WHEN ((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c4)) THEN t0.c2 WHEN 0.11972721212965909 COLLATE NOCASE THEN (t0.c3 IN (t0.c2)) END) ORDER BY t0.c4  NULLS FIRST, ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c0)) COLLATE RTRIM COLLATE BINARY DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c1) AND (t0.c1)))<(CASE t0.c2  WHEN t0.c3 THEN t0.c4 WHEN t0.c1 THEN t0.c4 ELSE t0.c4 END))) ORDER BY t0.c4  NULLS FIRST, ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c0)) COLLATE RTRIM COLLATE BINARY DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t0, rt1 WHERE (((((((((x'')AND(rt1.c3)))OR(0x72a15141)))OR(rt1.c6))) NOT BETWEEN (((t0.c2) NOT BETWEEN (rt1.c5) AND (0.009731400528998901))) AND (((((t0.c0)OR(rt1.c6)))OR(rt1.c1)))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((((((x'')AND(rt1.c3)))OR(0X72a15141)))OR(rt1.c6))) NOT BETWEEN (((t0.c2) NOT BETWEEN (rt1.c5) AND (0.009731400528998901))) AND (((((t0.c0)OR(rt1.c6)))OR(rt1.c1)))))AND(((((rt1.c1, t0.c2, rt1.c6)) NOT BETWEEN ((x'ec4a', t0.c4, NULL)) AND ((rt1.c1, rt1.c4, rt1.c3))) IN (t0.c3 COLLATE BINARY, ((rt1.c3) NOTNULL)))))) ORDER BY ((((rt1.c5)IS(rt1.c0))) BETWEEN (((t0.c1) BETWEEN (t0.c0) AND (rt1.c6))) AND (((rt1.c4) NOTNULL))) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((IFNULL(t0.c0, t0.c3)) NOTNULL)) ORDER BY ((((rt1.c5)IS(rt1.c0))) BETWEEN (((t0.c1) BETWEEN (t0.c0) AND (rt1.c6))) AND (((rt1.c4) NOTNULL))) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE (((((((((x'')AND(rt1.c3)))OR(0x72a15141)))OR(rt1.c6))) NOT BETWEEN (((t0.c2) NOT BETWEEN (rt1.c5) AND (0.009731400528998901))) AND (((((t0.c0)OR(rt1.c6)))OR(rt1.c1)))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((((((x'')AND(rt1.c3)))OR(0X72a15141)))OR(rt1.c6))) NOT BETWEEN (((t0.c2) NOT BETWEEN (rt1.c5) AND (0.009731400528998901))) AND (((((t0.c0)OR(rt1.c6)))OR(rt1.c1)))))AND(((((rt1.c1, t0.c2, rt1.c6)) NOT BETWEEN ((x'ec4a', t0.c4, NULL)) AND ((rt1.c1, rt1.c4, rt1.c3))) IN (t0.c3 COLLATE BINARY, ((rt1.c3) NOTNULL)))))) ORDER BY ((((rt1.c5)IS(rt1.c0))) BETWEEN (((t0.c1) BETWEEN (t0.c0) AND (rt1.c6))) AND (((rt1.c4) NOTNULL))) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((IFNULL(t0.c0, t0.c3)) NOTNULL)) ORDER BY ((((rt1.c5)IS(rt1.c0))) BETWEEN (((t0.c1) BETWEEN (t0.c0) AND (rt1.c6))) AND (((rt1.c4) NOTNULL))) DESC  NULLS LAST LIMIT 0;
SELECT ALL MIN(rt1.c3) FROM rt1, t0 WHERE (CASE (NOT (t0.c2))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c4) AND ('-695794534')) THEN json_array(t0.c1, t0.c0) WHEN ((rt1.c2) ISNULL) THEN (~ (rt1.c2)) END);
SELECT ALL MIN(rt1.c3) FROM rt1, t0 WHERE (((CASE (NOT (t0.c2))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c4) AND ('-695794534')) THEN json_array(t0.c1, t0.c0) WHEN ((rt1.c2) ISNULL) THEN (~ (rt1.c2)) END)AND(0.7280443742260774))) ORDER BY ((CAST(t0.c0 AS BLOB))<(((t0.c1)IS('')))), (((t0.c3)) BETWEEN ((((rt1.c4) ISNULL))) AND ((CAST(t0.c0 AS TEXT)))) ASC, ((((((((((((0.08182845140269956)OR(t0.c4)))AND(t0.c1)))AND(t0.c4)))OR((((t0.c2))!=((rt1.c1))))))AND(t0.c2 COLLATE BINARY)))OR(((rt1.c0)||(t0.c2)))) ASC  NULLS FIRST INTERSECT SELECT MIN(rt1.c3) FROM rt1, t0 WHERE ((((((((((t0.c0)OR(rt1.c5)))OR(rt1.c4)))OR(t0.c3))))!=((((rt1.c2)<=(rt1.c3)))))) ORDER BY ((CAST(t0.c0 AS BLOB))<(((t0.c1)IS('')))), (((t0.c3)) BETWEEN ((((rt1.c4) ISNULL))) AND ((CAST(t0.c0 AS TEXT)))) ASC, ((((((((((((0.08182845140269956)OR(t0.c4)))AND(t0.c1)))AND(t0.c4)))OR((((t0.c2))!=((rt1.c1))))))AND(t0.c2 COLLATE BINARY)))OR(((rt1.c0)||(t0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (LENGTH(((rt1.c0)<<(rt1.c2))));
SELECT ALL * FROM t0, rt1 WHERE (LENGTH(((rt1.c0)<<(rt1.c2)))) ORDER BY ((((rt1.c5)<=(rt1.c1)))OR(CASE t0.c4  WHEN rt1.c0 THEN rt1.c5 WHEN t0.c2 THEN x'79' WHEN rt1.c3 THEN rt1.c5 END)), CAST(((((rt1.c6)AND(rt1.c5)))AND(rt1.c2)) AS NUMERIC) ASC LIMIT 0X0 INTERSECT SELECT * FROM t0, rt1 WHERE (SQLITE_COMPILEOPTION_GET((((rt1.c1, rt1.c2))<=((rt1.c0, 'byD'))))) ORDER BY ((((rt1.c5)<=(rt1.c1)))OR(CASE t0.c4  WHEN rt1.c0 THEN rt1.c5 WHEN t0.c2 THEN x'79' WHEN rt1.c3 THEN rt1.c5 END)), CAST(((((rt1.c6)AND(rt1.c5)))AND(rt1.c2)) AS NUMERIC) ASC LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE (LENGTH(((rt1.c0)<<(rt1.c2))));
SELECT ALL * FROM t0, rt1 WHERE (LENGTH(((rt1.c0)<<(rt1.c2)))) ORDER BY ((((rt1.c5)<=(rt1.c1)))OR(CASE t0.c4  WHEN rt1.c0 THEN rt1.c5 WHEN t0.c2 THEN x'79' WHEN rt1.c3 THEN rt1.c5 END)), CAST(((((rt1.c6)AND(rt1.c5)))AND(rt1.c2)) AS NUMERIC) ASC LIMIT 0X0 INTERSECT SELECT * FROM t0, rt1 WHERE (SQLITE_COMPILEOPTION_GET((((rt1.c1, rt1.c2))<=((rt1.c0, 'byD'))))) ORDER BY ((((rt1.c5)<=(rt1.c1)))OR(CASE t0.c4  WHEN rt1.c0 THEN rt1.c5 WHEN t0.c2 THEN x'79' WHEN rt1.c3 THEN rt1.c5 END)), CAST(((((rt1.c6)AND(rt1.c5)))AND(rt1.c2)) AS NUMERIC) ASC LIMIT 0x0;
SELECT MAX(rt1.c1) FROM rt1 WHERE (CAST(rt1.c0 AS REAL) COLLATE RTRIM) ORDER BY (((((rt1.c2, 0.940115219749628))>((rt1.c4, rt1.c5)))) ISNULL) DESC;
SELECT DISTINCT MAX(rt1.c1) FROM rt1 WHERE (((CAST(rt1.c0 AS REAL) COLLATE RTRIM)AND(((((((((rt1.c3)AND(rt1.c4)))OR(rt1.c3)))AND(rt1.c3))) NOT BETWEEN ((((rt1.c0, rt1.c2, rt1.c6))==((rt1.c2, rt1.c3, rt1.c5)))) AND (CAST(rt1.c0 AS TEXT)))))) ORDER BY json_valid((rt1.c3 IN (rt1.c1)))  NULLS LAST, ((((rt1.c2)<=(rt1.c6)))OR(CAST(rt1.c0 AS NUMERIC)))  NULLS FIRST INTERSECT SELECT DISTINCT MAX(rt1.c1) FROM rt1 WHERE (CAST(rt1.c0 AS NUMERIC)) ORDER BY json_valid((rt1.c3 IN (rt1.c1)))  NULLS LAST, ((((rt1.c2)<=(rt1.c6)))OR(CAST(rt1.c0 AS NUMERIC)))  NULLS FIRST;
SELECT MIN(rt1.c1) FROM t0, rt1 WHERE (CAST(t0.c0 COLLATE NOCASE AS TEXT));
SELECT DISTINCT MIN(rt1.c1) FROM t0, rt1 WHERE (((CAST(t0.c0 COLLATE NOCASE AS TEXT))AND(((((t0.c0)OR(t0.c1)))AND(rt1.c2)) COLLATE NOCASE COLLATE RTRIM))) LIMIT 0 INTERSECT SELECT DISTINCT MIN(rt1.c1) FROM t0, rt1 WHERE (((CAST(rt1.c3 AS TEXT))>((rt1.c6 IN ())))) LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((((((((t0.c4 IN ()))AND(((((((((t0.c3)OR(t0.c3)))AND(t0.c3)))OR(t0.c0)))AND(t0.c4)))))AND(t0.c1 COLLATE BINARY)))OR(JULIANDAY(t0.c3, t0.c0, t0.c1))))AND(((t0.c4)-(t0.c0))))) ORDER BY (((((t0.c0, t0.c1))!=((t0.c2, t0.c0)))) ISNULL), (((LOWER(t0.c0), CAST('-180735253' AS TEXT)))<>(((t0.c0 IN (t0.c2)), CASE t0.c1  WHEN x'' THEN t0.c4 WHEN t0.c3 THEN t0.c1 WHEN t0.c4 THEN t0.c4 WHEN t0.c3 THEN t0.c0 END))) ASC;
SELECT * FROM t0 WHERE ((((((((((((t0.c4 IN ()))AND(((((((((t0.c3)OR(t0.c3)))AND(t0.c3)))OR(t0.c0)))AND(t0.c4)))))AND(t0.c1 COLLATE BINARY)))OR(JULIANDAY(t0.c3, t0.c0, t0.c1))))AND(((t0.c4)-(t0.c0)))))AND(CASE (((t0.c3, t0.c4)) BETWEEN ((t0.c3, t0.c2)) AND ((t0.c1, t0.c0)))  WHEN t0.c1 COLLATE RTRIM THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) ELSE (~ (t0.c4)) END))) ORDER BY (+ (t0.c1 COLLATE BINARY))  NULLS FIRST, (NOT (((t0.c1)<(t0.c4))));
SELECT ALL * FROM t0 WHERE ((((((((((t0.c4 IN ()))AND(((((((((t0.c3)OR(t0.c3)))AND(t0.c3)))OR(t0.c0)))AND(t0.c4)))))AND(t0.c1 COLLATE BINARY)))OR(JULIANDAY(t0.c3, t0.c0, t0.c1))))AND(((t0.c4)-(t0.c0))))) ORDER BY (((((t0.c0, t0.c1))!=((t0.c2, t0.c0)))) ISNULL), (((LOWER(t0.c0), CAST('-180735253' AS TEXT)))<>(((t0.c0 IN (t0.c2)), CASE t0.c1  WHEN x'' THEN t0.c4 WHEN t0.c3 THEN t0.c1 WHEN t0.c4 THEN t0.c4 WHEN t0.c3 THEN t0.c0 END))) ASC;
SELECT * FROM t0 WHERE ((((((((((((t0.c4 IN ()))AND(((((((((t0.c3)OR(t0.c3)))AND(t0.c3)))OR(t0.c0)))AND(t0.c4)))))AND(t0.c1 COLLATE BINARY)))OR(JULIANDAY(t0.c3, t0.c0, t0.c1))))AND(((t0.c4)-(t0.c0)))))AND(CASE (((t0.c3, t0.c4)) BETWEEN ((t0.c3, t0.c2)) AND ((t0.c1, t0.c0)))  WHEN t0.c1 COLLATE RTRIM THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) ELSE (~ (t0.c4)) END))) ORDER BY (+ (t0.c1 COLLATE BINARY))  NULLS FIRST, (NOT (((t0.c1)<(t0.c4))));
SELECT ALL * FROM t0 WHERE (json_object(((((((0.986870729120711)OR('')))AND(t0.c4)))OR(t0.c2)), t0.c1, CAST(t0.c0 AS INTEGER), (((t0.c4))<((t0.c1)))));
SELECT DISTINCT * FROM t0 WHERE (json_object(((((((0.986870729120711)OR('')))AND(t0.c4)))OR(t0.c2)), t0.c1, CAST(t0.c0 AS INTEGER), (((t0.c4))<((t0.c1)))));
SELECT ALL * FROM t0 WHERE (json_object(((((((0.986870729120711)OR('')))AND(t0.c4)))OR(t0.c2)), t0.c1, CAST(t0.c0 AS INTEGER), (((t0.c4))<((t0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((t0.c1) IS TRUE)) ISNULL)) ORDER BY (+ (t0.c2)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((((t0.c1) IS TRUE)) ISNULL))AND(((t0.c2)AND(((((rt1.c0)AND(rt1.c6)))AND(rt1.c5))))))) ORDER BY (+ (t0.c2)) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((((t0.c2)AND(t0.c0)))OR(t0.c4)))AND(t0.c4)) COLLATE RTRIM) ORDER BY ((((('-101386068'))<=((t0.c3)))) NOT BETWEEN (t0.c3) AND (t0.c1)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c2)AND(t0.c0)))OR(t0.c4)))AND(t0.c4)) COLLATE RTRIM)AND((((t0.c0 IN ('1639601663', t0.c2))) IS FALSE)))) ORDER BY ((((('-101386068'))<=((t0.c3)))) NOT BETWEEN (t0.c3) AND (t0.c1)) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (HEX(DISTINCT t0.c1)) ORDER BY ((((('-101386068'))<=((t0.c3)))) NOT BETWEEN (t0.c3) AND (t0.c1)) DESC  NULLS FIRST LIMIT 1;
SELECT * FROM t0 WHERE (((((((t0.c2)AND(t0.c0)))OR(t0.c4)))AND(t0.c4)) COLLATE RTRIM) ORDER BY ((((('-101386068'))<=((t0.c3)))) NOT BETWEEN (t0.c3) AND (t0.c1)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c2)AND(t0.c0)))OR(t0.c4)))AND(t0.c4)) COLLATE RTRIM)AND((((t0.c0 IN ('1639601663', t0.c2))) IS FALSE)))) ORDER BY ((((('-101386068'))<=((t0.c3)))) NOT BETWEEN (t0.c3) AND (t0.c1)) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (HEX(DISTINCT t0.c1)) ORDER BY ((((('-101386068'))<=((t0.c3)))) NOT BETWEEN (t0.c3) AND (t0.c1)) DESC  NULLS FIRST LIMIT 1;
SELECT ALL MIN(rt1.c5) FROM rt1 NATURAL JOIN t0 WHERE (((9.53423655E8) NOT NULL));
SELECT MIN(rt1.c5) FROM rt1 NATURAL JOIN t0 WHERE (((9.53423655E8) NOT NULL)) INTERSECT SELECT MIN(rt1.c5) FROM rt1 NATURAL JOIN t0 WHERE (((CASE rt1.c6  WHEN rt1.c4 THEN rt1.c0 END) NOT NULL));
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) IS FALSE)))) ORDER BY ((t0.c0) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((0Xffffffffccf7299b))))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((~ (((t0.c0) IS FALSE))))AND((- (t0.c0))))) ORDER BY t0.c1  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) IS FALSE)))) ORDER BY ((t0.c0) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((0Xffffffffccf7299b))))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((~ (((t0.c0) IS FALSE))))AND((- (t0.c0))))) ORDER BY t0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE NULL  WHEN 0.09355042531048896 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c2 END) NOT NULL)) ORDER BY ((((rt1.c6) ISNULL)) BETWEEN (((((x'')AND(rt1.c1)))AND('-1446379791'))) AND (((((((((rt1.c4)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c6)))OR(rt1.c4)))) DESC  NULLS LAST, rt1.c3 ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE NULL  WHEN 0.09355042531048896 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c2 END) NOT NULL)) ORDER BY ')mf얮E' INTERSECT SELECT COUNT(*) FROM rt1 WHERE (x'0b') ORDER BY ')mf얮E';
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c4)*(t0.c1)) IN (((t0.c2)>>(rt1.c1)), CAST(t0.c0 AS REAL))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((t0.c4)*(t0.c1)) IN (((t0.c2)>>(rt1.c1)))))AND(TYPEOF(((((((rt1.c2)OR(rt1.c1)))OR('-1166115530')))AND(NULL))))));
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c4)*(t0.c1)) IN (((t0.c2)>>(rt1.c1)), CAST(t0.c0 AS REAL))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((t0.c4)*(t0.c1)) IN (((t0.c2)>>(rt1.c1)))))AND(TYPEOF(((((((rt1.c2)OR(rt1.c1)))OR('-1166115530')))AND(NULL))))));
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((((((- (rt1.c6)))OR(((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)))))OR((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt1.c3))))))AND(((t0.c4)||(rt1.c0)))))AND(((t0.c4) BETWEEN (rt1.c5) AND (rt1.c6))))) ORDER BY ((((rt1.c2) NOT NULL)) NOT BETWEEN ((t0.c1 IN (NULL, t0.c3, rt1.c6))) AND (((((rt1.c2)OR(t0.c2)))OR(t0.c3)))) DESC, (~ (rt1.c3)) COLLATE RTRIM  NULLS FIRST, (((rt1.c4, t0.c2, rt1.c4)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (rt1.c5) AND (rt1.c0)), (((t0.c2, t0.c3, rt1.c6)) BETWEEN ((t0.c4, t0.c0, rt1.c1)) AND ((t0.c0, rt1.c2, t0.c0))), CAST(rt1.c4 AS REAL))) AND (((+ (rt1.c5)), ((((rt1.c4)OR(t0.c2)))AND(rt1.c3)), (((((('CneXg?&{6')OR(rt1.c5)))OR(t0.c4)))OR(rt1.c3))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((((((((- (rt1.c6)))OR(((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)))))OR((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt1.c3))))))AND(((t0.c4)||(rt1.c0)))))AND(((t0.c4) BETWEEN (rt1.c5) AND (rt1.c6)))))AND(''))) ORDER BY LIKELY(rt1.c4) COLLATE RTRIM ASC, (x'15' COLLATE RTRIM IN (((rt1.c1)==('.')), rt1.c6 COLLATE NOCASE))  NULLS LAST, ((((t0.c3)%(t0.c0))) BETWEEN (CASE t0.c0  WHEN rt1.c2 THEN t0.c3 WHEN rt1.c2 THEN t0.c3 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c4 END) AND ((((t0.c2, x'', rt1.c4))<((rt1.c3, rt1.c5, rt1.c4))))) ASC INTERSECT SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((CAST(rt1.c0 AS INTEGER))LIKE(rt1.c4))) ORDER BY LIKELY(rt1.c4) COLLATE RTRIM ASC, (x'15' COLLATE RTRIM IN (((rt1.c1)==('.')), rt1.c6 COLLATE NOCASE))  NULLS LAST, ((((t0.c3)%(t0.c0))) BETWEEN (CASE t0.c0  WHEN rt1.c2 THEN t0.c3 WHEN rt1.c2 THEN t0.c3 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c4 END) AND ((((t0.c2, x'', rt1.c4))<((rt1.c3, rt1.c5, rt1.c4))))) ASC;
SELECT * FROM rt1, t0 WHERE ((((rt1.c1, t0.c3)) NOT BETWEEN ((((rt1.c5) NOT BETWEEN ('1601051117') AND (NULL)), rt1.c5 COLLATE RTRIM)) AND (('0.1354880167600533', (t0.c0 IN (NULL)))))) ORDER BY ((((rt1.c2)&(t0.c4)))IS(((rt1.c4) IS FALSE))) DESC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c1, t0.c3)) NOT BETWEEN ((((rt1.c5) NOT BETWEEN ('1601051117') AND (NULL)), rt1.c5 COLLATE RTRIM)) AND (('0.1354880167600533', (t0.c0 IN (NULL)))))) ORDER BY ((((rt1.c2)&(t0.c4)))IS(((rt1.c4) IS FALSE))) DESC  NULLS LAST INTERSECT SELECT ALL * FROM rt1, t0 NOT INDEXED WHERE ((((rt1.c3))>=((rt1.c2))) COLLATE RTRIM) ORDER BY ((((rt1.c2)&(t0.c4)))IS(((rt1.c4) IS FALSE))) DESC  NULLS LAST;
SELECT * FROM rt1, t0 WHERE ((((rt1.c1, t0.c3)) NOT BETWEEN ((((rt1.c5) NOT BETWEEN ('1601051117') AND (NULL)), rt1.c5 COLLATE RTRIM)) AND (('0.1354880167600533', (t0.c0 IN (NULL)))))) ORDER BY ((((rt1.c2)&(t0.c4)))IS(((rt1.c4) IS FALSE))) DESC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c1, t0.c3)) NOT BETWEEN ((((rt1.c5) NOT BETWEEN ('1601051117') AND (NULL)), rt1.c5 COLLATE RTRIM)) AND (('0.1354880167600533', (t0.c0 IN (NULL)))))) ORDER BY ((((rt1.c2)&(t0.c4)))IS(((rt1.c4) IS FALSE))) DESC  NULLS LAST INTERSECT SELECT ALL * FROM rt1, t0 NOT INDEXED WHERE ((((rt1.c3))>=((rt1.c2))) COLLATE RTRIM) ORDER BY ((((rt1.c2)&(t0.c4)))IS(((rt1.c4) IS FALSE))) DESC  NULLS LAST;
SELECT MAX(rt1.c4) FROM t0, rt1 WHERE (rt1.c4) ORDER BY ((((rt1.c3)OR(((t0.c4)||(t0.c3)))))AND(CAST(rt1.c4 AS TEXT)));
SELECT DISTINCT MAX(rt1.c4) FROM t0, rt1 WHERE (((rt1.c4)AND(((CASE rt1.c6  WHEN rt1.c3 THEN t0.c1 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END)||(CASE WHEN t0.c0 THEN rt1.c1 WHEN t0.c1 THEN rt1.c1 WHEN t0.c4 THEN rt1.c5 ELSE t0.c1 END))))) ORDER BY ((((rt1.c3)OR(((t0.c4)||(t0.c3)))))AND(CAST(rt1.c4 AS TEXT))) LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c4, t0.c1)) NOT BETWEEN (((~ (t0.c1)), (((t0.c4, t0.c1)) BETWEEN ((t0.c0, t0.c1)) AND ((t0.c1, t0.c2))), ((((t0.c1)AND(t0.c1)))AND(t0.c0)))) AND ((CAST(t0.c0 AS NUMERIC), t0.c4 COLLATE BINARY, CAST(t0.c0 AS INTEGER)))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((t0.c1, t0.c4, t0.c1)) NOT BETWEEN (((~ (t0.c1)), (((t0.c4, t0.c1)) BETWEEN ((t0.c0, t0.c1)) AND ((t0.c1, t0.c2))), ((((t0.c1)AND(t0.c1)))AND(t0.c0)))) AND ((CAST(t0.c0 AS NUMERIC), t0.c4 COLLATE BINARY, CAST(t0.c0 AS INTEGER)))))AND(((CASE t0.c0  WHEN t0.c4 THEN t0.c2 WHEN t0.c4 THEN '90315868' WHEN t0.c4 THEN t0.c1 WHEN t0.c1 THEN t0.c4 WHEN t0.c3 THEN t0.c1 ELSE t0.c3 END) ISNULL)))) ORDER BY ((t0.c2)<<(((((((NULL)OR(t0.c3)))OR(t0.c4)))OR(0.8645386845734587))))  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ('1692797382') ORDER BY ((t0.c2)<<(((((((NULL)OR(t0.c3)))OR(t0.c4)))OR(0.8645386845734587))))  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((CASE t0.c3  WHEN t0.c0 THEN t0.c4 WHEN t0.c4 THEN t0.c1 END)) AND ((((rt1.c3) NOTNULL))))) ORDER BY ((NULLIF(rt1.c6, rt1.c6))<=(((rt1.c0) BETWEEN (t0.c4) AND (t0.c0)))) DESC, (CASE WHEN 0.48078241683262823 THEN t0.c3 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c1 END IN (((rt1.c3) NOT BETWEEN (rt1.c6) AND (t0.c4)))) ASC, CAST((t0.c4 IN (rt1.c6, rt1.c0)) AS NUMERIC) ASC;
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((CASE t0.c3  WHEN t0.c0 THEN t0.c4 WHEN t0.c4 THEN t0.c1 END)) AND ((((rt1.c3) NOTNULL))))) ORDER BY ((SQLITE_VERSION()) NOT NULL) ASC, ((((rt1.c6) BETWEEN (t0.c1) AND (rt1.c2))) BETWEEN (0X12ad4ba8) AND (x'')) INTERSECT SELECT * FROM t0, rt1 WHERE (json_remove(((rt1.c0) IS FALSE), ((rt1.c0)||(rt1.c6)), ABS(DISTINCT rt1.c4))) ORDER BY ((SQLITE_VERSION()) NOT NULL) ASC, ((((rt1.c6) BETWEEN (t0.c1) AND (rt1.c2))) BETWEEN (313346984) AND (x''));
SELECT * FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((CASE t0.c3  WHEN t0.c0 THEN t0.c4 WHEN t0.c4 THEN t0.c1 END)) AND ((((rt1.c3) NOTNULL))))) ORDER BY ((NULLIF(rt1.c6, rt1.c6))<=(((rt1.c0) BETWEEN (t0.c4) AND (t0.c0)))) DESC, (CASE WHEN 0.48078241683262823 THEN t0.c3 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c1 END IN (((rt1.c3) NOT BETWEEN (rt1.c6) AND (t0.c4)))) ASC, CAST((t0.c4 IN (rt1.c6, rt1.c0)) AS NUMERIC) ASC;
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((CASE t0.c3  WHEN t0.c0 THEN t0.c4 WHEN t0.c4 THEN t0.c1 END)) AND ((((rt1.c3) NOTNULL))))) ORDER BY ((SQLITE_VERSION()) NOT NULL) ASC, ((((rt1.c6) BETWEEN (t0.c1) AND (rt1.c2))) BETWEEN (0X12ad4ba8) AND (x'')) INTERSECT SELECT * FROM t0, rt1 WHERE (json_remove(((rt1.c0) IS FALSE), ((rt1.c0)||(rt1.c6)), ABS(DISTINCT rt1.c4))) ORDER BY ((SQLITE_VERSION()) NOT NULL) ASC, ((((rt1.c6) BETWEEN (t0.c1) AND (rt1.c2))) BETWEEN (313346984) AND (x''));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c5) ORDER BY TRIM((- (rt1.c0)), (rt1.c2 IN (rt1.c2))), ((NOT (rt1.c6)) IN ()), rt1.c6 DESC  NULLS FIRST, ((SUBSTR(rt1.c3, rt1.c1))IS NOT(((rt1.c6) BETWEEN (rt1.c3) AND (rt1.c5))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (rt1.c5) ORDER BY CAST((rt1.c2 IN ()) AS TEXT) ASC, (- (CAST(rt1.c2 AS INTEGER))) DESC  NULLS LAST, ((((((TYPEOF(0.6570560832105976))AND('0.9247696419230018')))OR((~ (rt1.c0)))))AND(118603810)) DESC INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((rt1.c5 IN (rt1.c4)))OR(((rt1.c2) NOTNULL)))) ORDER BY CAST((rt1.c2 IN ()) AS TEXT) ASC, (- (CAST(rt1.c2 AS INTEGER))) DESC  NULLS LAST, ((((((TYPEOF(0.6570560832105976))AND('0.9247696419230018')))OR((~ (rt1.c0)))))AND(118603810)) DESC;
SELECT * FROM rt1, t0 WHERE ((((rt1.c3 IN ()))||((rt1.c5 IN (t0.c1))))) ORDER BY ((LTRIM(t0.c2, '-1018962430'))>>(TYPEOF(rt1.c0))) ASC  NULLS LAST, ((CASE rt1.c0  WHEN rt1.c0 THEN 'Rn' WHEN rt1.c1 THEN rt1.c4 END) ISNULL)  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((rt1.c3 IN ()))||((rt1.c5 IN (t0.c1)))))AND((((('|')&(t0.c1))) BETWEEN (((rt1.c0) ISNULL)) AND (LIKELY(DISTINCT rt1.c1)))))) ORDER BY ((LTRIM(t0.c2, '-1018962430'))>>(TYPEOF(rt1.c0))) ASC  NULLS LAST, ((CASE rt1.c0  WHEN rt1.c0 THEN 'Rn' WHEN rt1.c1 THEN rt1.c4 END) ISNULL)  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ((((rt1.c3 IN ()))||((rt1.c5 IN (t0.c1))))) ORDER BY ((LTRIM(t0.c2, '-1018962430'))>>(TYPEOF(rt1.c0))) ASC  NULLS LAST, ((CASE rt1.c0  WHEN rt1.c0 THEN 'Rn' WHEN rt1.c1 THEN rt1.c4 END) ISNULL)  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((rt1.c3 IN ()))||((rt1.c5 IN (t0.c1)))))AND((((('|')&(t0.c1))) BETWEEN (((rt1.c0) ISNULL)) AND (LIKELY(DISTINCT rt1.c1)))))) ORDER BY ((LTRIM(t0.c2, '-1018962430'))>>(TYPEOF(rt1.c0))) ASC  NULLS LAST, ((CASE rt1.c0  WHEN rt1.c0 THEN 'Rn' WHEN rt1.c1 THEN rt1.c4 END) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1 WHERE ((LIKELIHOOD(rt1.c0, rt1.c2) IN ((~ (rt1.c6))))) ORDER BY ((t0.c1 COLLATE RTRIM) NOT BETWEEN (NULL) AND (CASE WHEN rt1.c5 THEN rt1.c4 END))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1 NOT INDEXED WHERE ((((LIKELIHOOD(rt1.c0, rt1.c2) IN ((~ (rt1.c6)))))AND(CASE (~ (0.009136351887244043))  WHEN ((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c5)) THEN ((1.967614267E9)-(rt1.c3)) ELSE (((rt1.c0)) BETWEEN ((t0.c3)) AND ((rt1.c2))) END))) ORDER BY (((((t0.c4)) BETWEEN (('J')) AND ((t0.c4)))) BETWEEN (t0.c3) AND (CASE t0.c2  WHEN rt1.c5 THEN t0.c1 ELSE t0.c2 END)), ((((rt1.c2)GLOB(rt1.c0)))>=(((((((((t0.c4)OR(rt1.c1)))OR(x'a5c0')))OR(rt1.c2)))AND(t0.c1)))) ASC  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (((rt1.c0)%(((t0.c1)<>(rt1.c1))))) ORDER BY (~ (t0.c2))  NULLS FIRST, rt1.c5 ASC;
SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c0)%(((t0.c1)!=(rt1.c1))))) ORDER BY (~ (t0.c2))  NULLS FIRST, rt1.c5 ASC INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (UPPER('J382 972-474T/!')) ORDER BY (~ (t0.c2))  NULLS FIRST, rt1.c5 ASC;
SELECT * FROM t0, rt1 WHERE (((rt1.c0)%(((t0.c1)<>(rt1.c1))))) ORDER BY (~ (t0.c2))  NULLS FIRST, rt1.c5 ASC;
SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c0)%(((t0.c1)!=(rt1.c1))))) ORDER BY (~ (t0.c2))  NULLS FIRST, rt1.c5 ASC INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (UPPER('J382 972-474T/!')) ORDER BY (~ (t0.c2))  NULLS FIRST, rt1.c5 ASC;
SELECT ALL MIN(rt1.c2) FROM t0, rt1 WHERE (NULL);
SELECT ALL MIN(rt1.c2) FROM t0, rt1 WHERE (((NULL)AND(((((x'74')||('')))=(((t0.c0) BETWEEN (t0.c3) AND (t0.c1))))))) INTERSECT SELECT ALL MIN(rt1.c2) FROM t0, rt1 WHERE ((((rt1.c6, 0.5625088097415996, rt1.c4, rt1.c3)) BETWEEN ((((t0.c1)||(t0.c2)), CASE rt1.c5  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c6 THEN t0.c4 WHEN t0.c4 THEN t0.c0 WHEN '|' THEN rt1.c5 ELSE t0.c3 END, (t0.c2 IN (t0.c1)), ((0.8233085289958587)-(rt1.c2)))) AND ((CASE rt1.c6  WHEN t0.c0 THEN rt1.c5 WHEN t0.c3 THEN rt1.c1 END, STRFTIME(t0.c3, rt1.c2, 2029517459), ((rt1.c5) NOT BETWEEN (rt1.c4) AND (rt1.c1)), json_quote(rt1.c2)))));
SELECT MIN(rt1.c6) FROM rt1 WHERE (LOWER(CASE rt1.c3  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c3 END));
SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE (((LOWER(CASE rt1.c3  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c3 END))AND(((((rt1.c1)>=(rt1.c5)))=(((rt1.c4)-(rt1.c2)))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (t0.c0) AND (t0.c4)))+(((t0.c4)<(rt1.c2)))) WHERE (UPPER(DISTINCT ((t0.c2)<(rt1.c3))));
SELECT DISTINCT COUNT(*) FROM t0 INNER JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (t0.c0) AND (t0.c4)))+(((t0.c4)<(rt1.c2)))) WHERE (UPPER(DISTINCT ((t0.c2)<(rt1.c3)))) ORDER BY t0.c1 ASC  NULLS FIRST LIMIT 0x0;
SELECT MIN(rt1.c0) FROM rt1 WHERE (x'') ORDER BY LIKELIHOOD(((rt1.c2) ISNULL), CASE rt1.c4  WHEN x'' THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c5 THEN rt1.c1 END);
SELECT ALL MIN(rt1.c0) FROM rt1 WHERE (((x'')AND((((((((((((('-984882522')AND(rt1.c6)))OR(8.8411032E7)))OR((+ (rt1.c1)))))AND((rt1.c6 IN ()))))OR((((rt1.c3, rt1.c1, rt1.c5))<((rt1.c5, rt1.c2, rt1.c5))))))OR(((((rt1.c4)OR(rt1.c3)))AND(rt1.c4))))))) ORDER BY LIKELIHOOD(((rt1.c2) ISNULL), CASE rt1.c4  WHEN x'' THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c5 THEN rt1.c1 END) INTERSECT SELECT ALL MIN(rt1.c0) FROM rt1 WHERE (((TRIM(rt1.c1, rt1.c3)) ISNULL)) ORDER BY LIKELIHOOD(((rt1.c2) ISNULL), CASE rt1.c4  WHEN x'' THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c5 THEN rt1.c1 END);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((rt1.c2) NOTNULL)) BETWEEN (rt1.c3 COLLATE NOCASE) AND (LOWER(t0.c0))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c2) NOTNULL)) BETWEEN (rt1.c3 COLLATE NOCASE) AND (LOWER(t0.c0))))AND(rt1.c0))) ORDER BY (((rt1.c6 IN (t0.c2)))IS NOT(CASE WHEN t0.c2 THEN t0.c0 ELSE rt1.c4 END))  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM rt1, t0 WHERE ((('NZ')/(-1.665136082E9)));
SELECT * FROM rt1, t0 WHERE ((('NZ')/(-1.665136082E9))) ORDER BY '2102086614'  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM rt1, t0 WHERE ((('NZ')/(-1.665136082E9)));
SELECT * FROM rt1, t0 WHERE ((('NZ')/(-1.665136082E9))) ORDER BY '2102086614'  NULLS LAST LIMIT 0X1;
SELECT MAX(t0.c2) FROM t0, rt1 WHERE (json_array_length(LIKELIHOOD(DISTINCT rt1.c4, t0.c4)));
SELECT ALL MAX(t0.c2) FROM t0, rt1 WHERE (json_array_length(LIKELIHOOD(DISTINCT rt1.c4, t0.c4))) ORDER BY (((t0.c2) BETWEEN (t0.c4) AND ('\')) IN ()) ASC  NULLS FIRST, (~ (CASE rt1.c6  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c5 WHEN t0.c4 THEN t0.c2 END)) ASC, ((x'')IS('NaNU')) DESC LIMIT 0x1 INTERSECT SELECT MAX(t0.c2) FROM t0, rt1 WHERE ((((((rt1.c4) ISNULL), (t0.c4 IN (t0.c2))))>((UNICODE(t0.c4), (+ (rt1.c3)))))) ORDER BY (((t0.c2) BETWEEN (t0.c4) AND ('\')) IN ()) ASC  NULLS FIRST, (~ (CASE rt1.c6  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c5 WHEN t0.c4 THEN t0.c2 END)) ASC, ((x'')IS('NaNU')) DESC LIMIT 0X1;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c4)>>(t0.c0)) AS TEXT));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST(((t0.c4)>>(t0.c0)) AS TEXT)) INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((t0.c4 IN (t0.c2, t0.c3, t0.c0))) NOT BETWEEN (ROUND(t0.c4, t0.c2)) AND (((t0.c1)/(t0.c3)))));
SELECT * FROM rt1 WHERE (((rt1.c3)||(rt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE (((rt1.c3)||(rt1.c0)) COLLATE RTRIM) ORDER BY (~ ((((rt1.c0, x'fd87')) NOT BETWEEN ((rt1.c5, rt1.c4)) AND ((rt1.c1, rt1.c6))))) ASC, (+ (((rt1.c3) NOTNULL))) DESC  NULLS FIRST, ((rt1.c5)IS(((rt1.c2) ISNULL))) ASC LIMIT 1;
SELECT * FROM rt1 WHERE (((rt1.c3)||(rt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE (((rt1.c3)||(rt1.c0)) COLLATE RTRIM) ORDER BY (~ ((((rt1.c0, x'fd87')) NOT BETWEEN ((rt1.c5, rt1.c4)) AND ((rt1.c1, rt1.c6))))) ASC, (+ (((rt1.c3) NOTNULL))) DESC  NULLS FIRST, ((rt1.c5)IS(((rt1.c2) ISNULL))) ASC LIMIT 1;
SELECT MIN(t0.c0) FROM rt1, t0 WHERE ((ABS(rt1.c5) IN ()));
SELECT MIN(t0.c0) FROM rt1, t0 WHERE ((((ABS(rt1.c5) IN ()))AND(((rt1.c6)*(((0.957839361539804) ISNULL)))))) ORDER BY t0.c3 ASC  NULLS LAST, CASE ((t0.c3)<=(rt1.c3))  WHEN (rt1.c3 IN ()) THEN CAST(rt1.c2 AS TEXT) WHEN rt1.c1 THEN t0.c2 COLLATE BINARY END ASC LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((CASE WHEN t0.c1 THEN 0.623368302702558 WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c2 WHEN t0.c3 THEN t0.c4 WHEN t0.c3 THEN t0.c0 ELSE t0.c0 END, CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN t0.c0 ELSE t0.c0 END, CAST(t0.c3 AS TEXT)))<((CAST(t0.c3 AS INTEGER), NULL, ABS(t0.c0)))));
SELECT ALL * FROM t0 WHERE ((((((CASE WHEN t0.c1 THEN 0.623368302702558 WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c2 WHEN t0.c3 THEN t0.c4 WHEN t0.c3 THEN t0.c0 ELSE t0.c0 END, CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN t0.c0 ELSE t0.c0 END, CAST(t0.c3 AS TEXT)))<((CAST(t0.c3 AS INTEGER), NULL, ABS(t0.c0)))))AND(x'62'))) INTERSECT SELECT ALL * FROM t0 WHERE (CASE WHEN NULL THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE ((((CASE WHEN t0.c1 THEN 0.623368302702558 WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c2 WHEN t0.c3 THEN t0.c4 WHEN t0.c3 THEN t0.c0 ELSE t0.c0 END, CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN t0.c0 ELSE t0.c0 END, CAST(t0.c3 AS TEXT)))<((CAST(t0.c3 AS INTEGER), NULL, ABS(t0.c0)))));
SELECT ALL * FROM t0 WHERE ((((((CASE WHEN t0.c1 THEN 0.623368302702558 WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c2 WHEN t0.c3 THEN t0.c4 WHEN t0.c3 THEN t0.c0 ELSE t0.c0 END, CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN t0.c0 ELSE t0.c0 END, CAST(t0.c3 AS TEXT)))<((CAST(t0.c3 AS INTEGER), NULL, ABS(t0.c0)))))AND(x'62'))) INTERSECT SELECT ALL * FROM t0 WHERE (CASE WHEN NULL THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END COLLATE NOCASE);
SELECT MIN(rt1.c0) FROM rt1 WHERE ((CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c0 THEN x'' ELSE rt1.c6 END IN ()));
SELECT ALL MIN(rt1.c0) FROM rt1 WHERE ((CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c0 THEN x'' ELSE rt1.c6 END IN ())) ORDER BY CASE WHEN ((rt1.c1) BETWEEN ('1333222245') AND (rt1.c4)) THEN x'' END  NULLS LAST, ((((rt1.c5) NOTNULL)) BETWEEN (rt1.c4 COLLATE NOCASE) AND (ABS(rt1.c4))) ASC, ((((rt1.c5)*(rt1.c5)))&((rt1.c4 IN (rt1.c6))))  NULLS FIRST INTERSECT SELECT ALL MIN(rt1.c0) FROM rt1 WHERE (((((((0.5376293736581861)OR(CAST(rt1.c3 AS REAL))))OR(((rt1.c5)%(rt1.c6)))))AND((((rt1.c1, rt1.c0, rt1.c1, rt1.c2)) NOT BETWEEN ((NULL, rt1.c4, rt1.c5, rt1.c6)) AND ((rt1.c2, rt1.c5, rt1.c4, rt1.c2)))))) ORDER BY CASE WHEN ((rt1.c1) BETWEEN ('1333222245') AND (rt1.c4)) THEN x'' END  NULLS LAST, ((((rt1.c5) NOTNULL)) BETWEEN (rt1.c4 COLLATE NOCASE) AND (ABS(rt1.c4))) ASC, ((((rt1.c5)*(rt1.c5)))&((rt1.c4 IN (rt1.c6))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c6) ORDER BY CAST((x'32' IN ()) AS REAL) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((rt1.c6)AND(CASE rt1.c0 COLLATE NOCASE  WHEN ((rt1.c4) ISNULL) THEN ((rt1.c6) BETWEEN (0.13585580131727693) AND (rt1.c2)) WHEN CAST(rt1.c1 AS INTEGER) THEN ((rt1.c6) ISNULL) WHEN ((((((((rt1.c0)AND(rt1.c4)))AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c6)) THEN ((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c6)) ELSE (rt1.c4 IN ()) END))) ORDER BY CAST(rt1.c5 AS NUMERIC), rt1.c4 COLLATE NOCASE ASC LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c6))  WHEN json_patch(rt1.c0, 0.5138603102654458) THEN rt1.c3 END) ORDER BY CAST(rt1.c5 AS NUMERIC), rt1.c4 COLLATE NOCASE ASC LIMIT 0x2;
SELECT * FROM t0 WHERE (t0.c3) ORDER BY ((t0.c3 COLLATE RTRIM)*(((t0.c1)>(t0.c0))))  NULLS FIRST, (+ (((t0.c1)&(t0.c1)))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c3)AND(0.9826469461322946))) ORDER BY ((t0.c3 COLLATE RTRIM)*(((t0.c1)>(t0.c0))))  NULLS FIRST, (+ (((t0.c1)&(t0.c1)))) DESC  NULLS FIRST LIMIT 3;
SELECT * FROM t0 WHERE (t0.c3) ORDER BY ((t0.c3 COLLATE RTRIM)*(((t0.c1)>(t0.c0))))  NULLS FIRST, (+ (((t0.c1)&(t0.c1)))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c3)AND(0.9826469461322946))) ORDER BY ((t0.c3 COLLATE RTRIM)*(((t0.c1)>(t0.c0))))  NULLS FIRST, (+ (((t0.c1)&(t0.c1)))) DESC  NULLS FIRST LIMIT 3;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c3 END)) AND ((CAST(rt1.c1 AS REAL)))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c3 END)) AND ((CAST(rt1.c1 AS REAL))))) ORDER BY CASE WHEN '}' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END COLLATE RTRIM DESC  NULLS LAST, (rt1.c1 COLLATE BINARY IN ((~ (rt1.c1))))  NULLS LAST INTERSECT SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE ((rt1.c1 IN ((rt1.c2 IN (rt1.c0, rt1.c5)), (((rt1.c5, rt1.c2)) BETWEEN ((rt1.c5, NULL)) AND ((rt1.c5, '-248273772')))))) ORDER BY CASE WHEN '}' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END COLLATE RTRIM DESC  NULLS LAST, (rt1.c1 COLLATE BINARY IN ((~ (rt1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c3, t0.c1)) BETWEEN ((((t0.c4)/(t0.c3)), NULL)) AND (((t0.c2 IN (t0.c0, t0.c1)), (((t0.c4)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c3, t0.c1)) BETWEEN ((((t0.c4)/(t0.c3)), NULL)) AND (((t0.c2 IN (t0.c0, t0.c1)), (((t0.c4)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))))AND((((t0.c2, 'U', 'qfቭ<', t0.c4)) NOT BETWEEN ((t0.c0 COLLATE NOCASE, ((t0.c3)IS NOT(-2.29228074E8)), ((t0.c4)-(t0.c4)), TRIM(DISTINCT t0.c1))) AND (((((t0.c1)) NOT BETWEEN ((t0.c3)) AND ((t0.c0))), ((t0.c2)<>(t0.c4)), ((t0.c2)IS(t0.c2)), (t0.c2 IN (t0.c1, 'h^N')))))))) LIMIT 0x1;
SELECT ALL MIN(t0.c1) FROM t0 WHERE ((t0.c4 COLLATE BINARY IN (t0.c1, CAST(t0.c1 AS REAL), ((t0.c0) ISNULL))));
SELECT ALL MIN(t0.c1) FROM t0 WHERE ((((t0.c4 COLLATE BINARY IN (t0.c1)))AND(((+ (t0.c1)) IN ((t0.c2 IN (t0.c0)), ((t0.c0) ISNULL)))))) ORDER BY (((t0.c2 IN ())) NOT BETWEEN ((((t0.c4, t0.c1)) BETWEEN ((t0.c3, t0.c0)) AND ((t0.c0, t0.c1)))) AND (t0.c0))  NULLS LAST, (t0.c3 IN (t0.c4)) COLLATE NOCASE ASC  NULLS LAST LIMIT 0;
SELECT * FROM rt1, t0 WHERE (t0.c3);
SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c3)AND((((((t0.c2, rt1.c2)) BETWEEN ((rt1.c3, rt1.c1)) AND ((rt1.c2, rt1.c3)))) NOT BETWEEN ((rt1.c5 IN ())) AND (((rt1.c0) IS FALSE)))))) ORDER BY CAST(CASE t0.c2  WHEN NULL THEN t0.c4 WHEN t0.c4 THEN rt1.c3 ELSE rt1.c4 END AS INTEGER), CAST((rt1.c0 IN (t0.c4)) AS TEXT) ASC, CASE WHEN ((t0.c0) ISNULL) THEN ((((((t0.c1)AND(x'38')))OR(rt1.c1)))OR(t0.c4)) END  NULLS LAST LIMIT 0x3;
SELECT * FROM rt1, t0 WHERE (t0.c3);
SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c3)AND((((((t0.c2, rt1.c2)) BETWEEN ((rt1.c3, rt1.c1)) AND ((rt1.c2, rt1.c3)))) NOT BETWEEN ((rt1.c5 IN ())) AND (((rt1.c0) IS FALSE)))))) ORDER BY CAST(CASE t0.c2  WHEN NULL THEN t0.c4 WHEN t0.c4 THEN rt1.c3 ELSE rt1.c4 END AS INTEGER), CAST((rt1.c0 IN (t0.c4)) AS TEXT) ASC, CASE WHEN ((t0.c0) ISNULL) THEN ((((((t0.c1)AND(x'38')))OR(rt1.c1)))OR(t0.c4)) END  NULLS LAST LIMIT 0x3;
SELECT ALL MIN(rt1.c5) FROM rt1, t0 WHERE (0.6026046824744443);
SELECT DISTINCT MIN(rt1.c5) FROM rt1, t0 WHERE (((0.6026046824744443)AND(((CASE rt1.c2  WHEN rt1.c2 THEN t0.c4 ELSE rt1.c5 END) IS FALSE)))) LIMIT 1 INTERSECT SELECT DISTINCT MIN(rt1.c5) FROM rt1, t0 WHERE (x'2b') LIMIT 1;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((rt1.c2) NOTNULL)) NOT BETWEEN (((('BZl'))<>((rt1.c6)))) AND (CAST(rt1.c3 AS REAL))));
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c2) NOTNULL)) NOT BETWEEN (((('BZl'))<>((rt1.c6)))) AND (CAST(rt1.c3 AS REAL))))AND(DATETIME((('R*')/(t0.c2)), ((rt1.c0) BETWEEN (t0.c3) AND (t0.c0)), (+ (rt1.c0)), (('R')>(rt1.c1)))))) LIMIT 1;
SELECT * FROM rt1 WHERE (CAST(x'e5ee' AS TEXT)) ORDER BY MAX((rt1.c3 IN ()), CAST(rt1.c1 AS REAL), ((rt1.c5)==(rt1.c2)), (((rt1.c1))=((rt1.c3))))  NULLS FIRST, CAST(NULL AS TEXT) DESC  NULLS FIRST, (NOT (CAST(rt1.c5 AS NUMERIC))) ASC;
SELECT DISTINCT * FROM rt1 WHERE (((CAST(x'e5ee' AS TEXT))AND(((((rt1.c5)>(NULL)))|(((rt1.c1)|(rt1.c1))))))) ORDER BY MAX((rt1.c3 IN ()), CAST(rt1.c1 AS REAL), ((rt1.c5)==(rt1.c2)), (((rt1.c1))==((rt1.c3))))  NULLS FIRST, CAST(NULL AS TEXT) DESC  NULLS FIRST, (NOT (CAST(rt1.c5 AS NUMERIC))) ASC LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c0)AND((((rt1.c4))<>((rt1.c5))))))OR((((rt1.c5))>((rt1.c3)))))) ORDER BY MAX((rt1.c3 IN ()), CAST(rt1.c1 AS REAL), ((rt1.c5)==(rt1.c2)), (((rt1.c1))=((rt1.c3))))  NULLS FIRST, CAST(NULL AS TEXT) DESC  NULLS FIRST, (NOT (CAST(rt1.c5 AS NUMERIC))) ASC LIMIT 2;
SELECT * FROM rt1 WHERE (CAST(x'e5ee' AS TEXT)) ORDER BY MAX((rt1.c3 IN ()), CAST(rt1.c1 AS REAL), ((rt1.c5)==(rt1.c2)), (((rt1.c1))=((rt1.c3))))  NULLS FIRST, CAST(NULL AS TEXT) DESC  NULLS FIRST, (NOT (CAST(rt1.c5 AS NUMERIC))) ASC;
SELECT DISTINCT * FROM rt1 WHERE (((CAST(x'e5ee' AS TEXT))AND(((((rt1.c5)>(NULL)))|(((rt1.c1)|(rt1.c1))))))) ORDER BY MAX((rt1.c3 IN ()), CAST(rt1.c1 AS REAL), ((rt1.c5)==(rt1.c2)), (((rt1.c1))==((rt1.c3))))  NULLS FIRST, CAST(NULL AS TEXT) DESC  NULLS FIRST, (NOT (CAST(rt1.c5 AS NUMERIC))) ASC LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c0)AND((((rt1.c4))<>((rt1.c5))))))OR((((rt1.c5))>((rt1.c3)))))) ORDER BY MAX((rt1.c3 IN ()), CAST(rt1.c1 AS REAL), ((rt1.c5)==(rt1.c2)), (((rt1.c1))=((rt1.c3))))  NULLS FIRST, CAST(NULL AS TEXT) DESC  NULLS FIRST, (NOT (CAST(rt1.c5 AS NUMERIC))) ASC LIMIT 2;
SELECT * FROM rt1 CROSS JOIN t0 ON rt1.c3 WHERE (CASE ((((((rt1.c4)OR(rt1.c0)))OR(rt1.c5)))AND(t0.c1))  WHEN rt1.c5 THEN (((t0.c1)) NOT BETWEEN ((rt1.c3)) AND ((x'b9'))) WHEN ((t0.c0) NOTNULL) THEN rt1.c5 COLLATE BINARY ELSE CAST(t0.c1 AS REAL) END);
SELECT * FROM rt1 CROSS JOIN t0 ON rt1.c3 WHERE (((CASE ((((((rt1.c4)OR(rt1.c0)))OR(rt1.c5)))AND(t0.c1))  WHEN rt1.c5 THEN (((t0.c1)) NOT BETWEEN ((rt1.c3)) AND ((x'b9'))) WHEN ((t0.c0) NOTNULL) THEN rt1.c5 COLLATE BINARY ELSE CAST(t0.c1 AS REAL) END)AND(x''))) ORDER BY ((((x'')OR(((rt1.c6) IS FALSE))))AND(((((t0.c2)AND(t0.c0)))AND(rt1.c5)))) DESC  NULLS LAST, ((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c2 COLLATE RTRIM)))AND(CASE WHEN t0.c2 THEN rt1.c0 WHEN rt1.c4 THEN t0.c4 WHEN t0.c1 THEN t0.c4 END)))OR((rt1.c4 IN ())))  NULLS LAST LIMIT 0x1;
SELECT * FROM rt1 CROSS JOIN t0 ON rt1.c3 WHERE (CASE ((((((rt1.c4)OR(rt1.c0)))OR(rt1.c5)))AND(t0.c1))  WHEN rt1.c5 THEN (((t0.c1)) NOT BETWEEN ((rt1.c3)) AND ((x'b9'))) WHEN ((t0.c0) NOTNULL) THEN rt1.c5 COLLATE BINARY ELSE CAST(t0.c1 AS REAL) END);
SELECT * FROM rt1 CROSS JOIN t0 ON rt1.c3 WHERE (((CASE ((((((rt1.c4)OR(rt1.c0)))OR(rt1.c5)))AND(t0.c1))  WHEN rt1.c5 THEN (((t0.c1)) NOT BETWEEN ((rt1.c3)) AND ((x'b9'))) WHEN ((t0.c0) NOTNULL) THEN rt1.c5 COLLATE BINARY ELSE CAST(t0.c1 AS REAL) END)AND(x''))) ORDER BY ((((x'')OR(((rt1.c6) IS FALSE))))AND(((((t0.c2)AND(t0.c0)))AND(rt1.c5)))) DESC  NULLS LAST, ((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c2 COLLATE RTRIM)))AND(CASE WHEN t0.c2 THEN rt1.c0 WHEN rt1.c4 THEN t0.c4 WHEN t0.c1 THEN t0.c4 END)))OR((rt1.c4 IN ())))  NULLS LAST LIMIT 0x1;
SELECT MIN(t0.c4) FROM t0 WHERE (((((((CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c4 THEN t0.c0 ELSE t0.c1 END)OR(((x'3f7b3e') IS TRUE))))AND((+ (t0.c4)))))OR(t0.c3 COLLATE NOCASE))) ORDER BY -913409671  NULLS FIRST;
SELECT MIN(t0.c4) FROM t0 WHERE (((((((CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c4 THEN t0.c0 ELSE t0.c1 END)OR(((x'3f7b3e') IS TRUE))))AND((+ (t0.c4)))))OR(t0.c3 COLLATE NOCASE))) ORDER BY x'ea', '狒m|*4OH' ASC INTERSECT SELECT ALL MIN(t0.c4) FROM t0 WHERE (TYPEOF(((t0.c3) BETWEEN (t0.c4) AND (t0.c1)))) ORDER BY x'ea', '狒m|*4OH' ASC;
SELECT COUNT(*) FROM rt1, t0 WHERE (((LIKELY(rt1.c6)) NOT BETWEEN (CASE x'44'  WHEN t0.c2 THEN rt1.c6 WHEN '-1741848590' THEN t0.c2 WHEN t0.c3 THEN rt1.c3 END) AND (LENGTH(t0.c3))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((LIKELY(rt1.c6)) NOT BETWEEN (CASE x'44'  WHEN t0.c2 THEN rt1.c6 WHEN '-1741848590' THEN t0.c2 WHEN t0.c3 THEN rt1.c3 END) AND (LENGTH(t0.c3))))AND(CAST(((rt1.c2) ISNULL) AS NUMERIC)))) LIMIT 0X3 INTERSECT SELECT COUNT(*) FROM rt1, t0 WHERE (((CASE WHEN t0.c2 THEN rt1.c1 WHEN t0.c4 THEN rt1.c0 WHEN t0.c3 THEN t0.c0 ELSE rt1.c0 END)<<(CAST(rt1.c1 AS NUMERIC)))) LIMIT 0X3;
SELECT ALL * FROM rt1, t0 WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY t0.c3 ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((rt1.c0 IN ()) COLLATE NOCASE)AND(((((rt1.c0) NOT BETWEEN (t0.c4) AND (t0.c3)))+(CAST(rt1.c0 AS INTEGER)))))) ORDER BY ((((rt1.c3) BETWEEN (rt1.c1) AND (t0.c2))) BETWEEN (((((((rt1.c4)OR(t0.c1)))OR(rt1.c6)))AND(rt1.c0))) AND ((((rt1.c6, rt1.c5, rt1.c4)) NOT BETWEEN ((rt1.c0, 0Xffffffff8f4c9232, rt1.c0)) AND ((0.538242946032677, t0.c2, rt1.c6)))))  NULLS FIRST, ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c5))) NOT BETWEEN (((t0.c4) NOT BETWEEN (t0.c3) AND (rt1.c1))) AND (CASE WHEN rt1.c5 THEN rt1.c2 END))  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(rt1.c6 COLLATE NOCASE AS BLOB)) ORDER BY ((((rt1.c3) BETWEEN (rt1.c1) AND (t0.c2))) BETWEEN (((((((rt1.c4)OR(t0.c1)))OR(rt1.c6)))AND(rt1.c0))) AND ((((rt1.c6, rt1.c5, rt1.c4)) NOT BETWEEN ((rt1.c0, 0Xffffffff8f4c9232, rt1.c0)) AND ((0.538242946032677, t0.c2, rt1.c6)))))  NULLS FIRST, ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c5))) NOT BETWEEN (((t0.c4) NOT BETWEEN (t0.c3) AND (rt1.c1))) AND (CASE WHEN rt1.c5 THEN rt1.c2 END))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY t0.c3 ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((rt1.c0 IN ()) COLLATE NOCASE)AND(((((rt1.c0) NOT BETWEEN (t0.c4) AND (t0.c3)))+(CAST(rt1.c0 AS INTEGER)))))) ORDER BY ((((rt1.c3) BETWEEN (rt1.c1) AND (t0.c2))) BETWEEN (((((((rt1.c4)OR(t0.c1)))OR(rt1.c6)))AND(rt1.c0))) AND ((((rt1.c6, rt1.c5, rt1.c4)) NOT BETWEEN ((rt1.c0, 0Xffffffff8f4c9232, rt1.c0)) AND ((0.538242946032677, t0.c2, rt1.c6)))))  NULLS FIRST, ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c5))) NOT BETWEEN (((t0.c4) NOT BETWEEN (t0.c3) AND (rt1.c1))) AND (CASE WHEN rt1.c5 THEN rt1.c2 END))  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(rt1.c6 COLLATE NOCASE AS BLOB)) ORDER BY ((((rt1.c3) BETWEEN (rt1.c1) AND (t0.c2))) BETWEEN (((((((rt1.c4)OR(t0.c1)))OR(rt1.c6)))AND(rt1.c0))) AND ((((rt1.c6, rt1.c5, rt1.c4)) NOT BETWEEN ((rt1.c0, 0Xffffffff8f4c9232, rt1.c0)) AND ((0.538242946032677, t0.c2, rt1.c6)))))  NULLS FIRST, ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c5))) NOT BETWEEN (((t0.c4) NOT BETWEEN (t0.c3) AND (rt1.c1))) AND (CASE WHEN rt1.c5 THEN rt1.c2 END))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c1)AND(t0.c0)))+(((rt1.c0) NOTNULL))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((rt1.c1)AND(t0.c0)))+(((rt1.c0) NOTNULL))))AND(CASE CASE WHEN rt1.c1 THEN rt1.c2 END  WHEN (((rt1.c5, '-614220311')) BETWEEN ((0Xffffffffaa2e9536, 0.5820077313644368)) AND ((-3.68242246E8, rt1.c4))) THEN CAST(rt1.c1 AS TEXT) ELSE (rt1.c5 IN ()) END))) ORDER BY (((rt1.c1, rt1.c2)) NOT BETWEEN (('⋎f
h
', CHAR(0.9994678959998206))) AND (((rt1.c5 IN (t0.c0)), (NOT (t0.c0)))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((((rt1.c3)>=(t0.c3))))<(((~ (rt1.c4)))))) ORDER BY (((rt1.c1, rt1.c2)) NOT BETWEEN (('⋎f
h
', CHAR(0.9994678959998206))) AND (((rt1.c5 IN (t0.c0)), (NOT (t0.c0)))))  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c1)AND(t0.c0)))+(((rt1.c0) NOTNULL))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((rt1.c1)AND(t0.c0)))+(((rt1.c0) NOTNULL))))AND(CASE CASE WHEN rt1.c1 THEN rt1.c2 END  WHEN (((rt1.c5, '-614220311')) BETWEEN ((0Xffffffffaa2e9536, 0.5820077313644368)) AND ((-3.68242246E8, rt1.c4))) THEN CAST(rt1.c1 AS TEXT) ELSE (rt1.c5 IN ()) END))) ORDER BY (((rt1.c1, rt1.c2)) NOT BETWEEN (('⋎f
h
', CHAR(0.9994678959998206))) AND (((rt1.c5 IN (t0.c0)), (NOT (t0.c0)))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((((rt1.c3)>=(t0.c3))))<(((~ (rt1.c4)))))) ORDER BY (((rt1.c1, rt1.c2)) NOT BETWEEN (('⋎f
h
', CHAR(0.9994678959998206))) AND (((rt1.c5 IN (t0.c0)), (NOT (t0.c0)))))  NULLS LAST;
SELECT * FROM rt1 WHERE ((~ ((+ (rt1.c4)))));
SELECT ALL * FROM rt1 WHERE ((((~ ((+ (rt1.c4)))))AND(rt1.c3))) ORDER BY ((((((((CAST(rt1.c6 AS TEXT))AND(((NULL) BETWEEN (rt1.c5) AND (rt1.c2)))))AND(((rt1.c4) NOT NULL))))OR(json_extract(rt1.c6, rt1.c4, rt1.c3, rt1.c4))))OR(((((((((rt1.c4)OR(rt1.c2)))AND(0.29701169912716585)))AND(rt1.c0)))AND(rt1.c4))))  NULLS FIRST INTERSECT SELECT * FROM rt1 WHERE (((rt1.c3 COLLATE RTRIM)<<(x''))) ORDER BY ((((((((CAST(rt1.c6 AS TEXT))AND(((NULL) BETWEEN (rt1.c5) AND (rt1.c2)))))AND(((rt1.c4) NOT NULL))))OR(json_extract(rt1.c6, rt1.c4, rt1.c3, rt1.c4))))OR(((((((((rt1.c4)OR(rt1.c2)))AND(0.29701169912716585)))AND(rt1.c0)))AND(rt1.c4))))  NULLS FIRST;
SELECT * FROM rt1 WHERE ((~ ((+ (rt1.c4)))));
SELECT ALL * FROM rt1 WHERE ((((~ ((+ (rt1.c4)))))AND(rt1.c3))) ORDER BY ((((((((CAST(rt1.c6 AS TEXT))AND(((NULL) BETWEEN (rt1.c5) AND (rt1.c2)))))AND(((rt1.c4) NOT NULL))))OR(json_extract(rt1.c6, rt1.c4, rt1.c3, rt1.c4))))OR(((((((((rt1.c4)OR(rt1.c2)))AND(0.29701169912716585)))AND(rt1.c0)))AND(rt1.c4))))  NULLS FIRST INTERSECT SELECT * FROM rt1 WHERE (((rt1.c3 COLLATE RTRIM)<<(x''))) ORDER BY ((((((((CAST(rt1.c6 AS TEXT))AND(((NULL) BETWEEN (rt1.c5) AND (rt1.c2)))))AND(((rt1.c4) NOT NULL))))OR(json_extract(rt1.c6, rt1.c4, rt1.c3, rt1.c4))))OR(((((((((rt1.c4)OR(rt1.c2)))AND(0.29701169912716585)))AND(rt1.c0)))AND(rt1.c4))))  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CASE ((rt1.c4)&(rt1.c6))  WHEN CAST(t0.c0 AS REAL) THEN ((((((((t0.c1)OR(t0.c0)))AND(rt1.c1)))AND(rt1.c5)))AND(t0.c4)) WHEN ((((((((t0.c4)AND(rt1.c6)))OR(rt1.c3)))AND(rt1.c5)))AND(rt1.c0)) THEN '-1851974070' ELSE LIKELY(DISTINCT rt1.c1) END WHERE (0xffffffffb8fad205);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CASE ((rt1.c4)&(rt1.c6))  WHEN CAST(t0.c0 AS REAL) THEN ((((((((t0.c1)OR(t0.c0)))AND(rt1.c1)))AND(rt1.c5)))AND(t0.c4)) WHEN ((((((((t0.c4)AND(rt1.c6)))OR(rt1.c3)))AND(rt1.c5)))AND(rt1.c0)) THEN '-1851974070' ELSE LIKELY(DISTINCT rt1.c1) END WHERE (0xffffffffb8fad205) INTERSECT SELECT * FROM t0 LEFT OUTER JOIN rt1 ON CASE ((rt1.c4)&(rt1.c6))  WHEN CAST(t0.c0 AS REAL) THEN ((((((((t0.c1)OR(t0.c0)))AND(rt1.c1)))AND(rt1.c5)))AND(t0.c4)) WHEN ((((((((t0.c4)AND(rt1.c6)))OR(rt1.c3)))AND(rt1.c5)))AND(rt1.c0)) THEN '-1851974070' ELSE LIKELY(DISTINCT rt1.c1) END WHERE (rt1.c6);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CASE ((rt1.c4)&(rt1.c6))  WHEN CAST(t0.c0 AS REAL) THEN ((((((((t0.c1)OR(t0.c0)))AND(rt1.c1)))AND(rt1.c5)))AND(t0.c4)) WHEN ((((((((t0.c4)AND(rt1.c6)))OR(rt1.c3)))AND(rt1.c5)))AND(rt1.c0)) THEN '-1851974070' ELSE LIKELY(DISTINCT rt1.c1) END WHERE (0xffffffffb8fad205);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CASE ((rt1.c4)&(rt1.c6))  WHEN CAST(t0.c0 AS REAL) THEN ((((((((t0.c1)OR(t0.c0)))AND(rt1.c1)))AND(rt1.c5)))AND(t0.c4)) WHEN ((((((((t0.c4)AND(rt1.c6)))OR(rt1.c3)))AND(rt1.c5)))AND(rt1.c0)) THEN '-1851974070' ELSE LIKELY(DISTINCT rt1.c1) END WHERE (0xffffffffb8fad205) INTERSECT SELECT * FROM t0 LEFT OUTER JOIN rt1 ON CASE ((rt1.c4)&(rt1.c6))  WHEN CAST(t0.c0 AS REAL) THEN ((((((((t0.c1)OR(t0.c0)))AND(rt1.c1)))AND(rt1.c5)))AND(t0.c4)) WHEN ((((((((t0.c4)AND(rt1.c6)))OR(rt1.c3)))AND(rt1.c5)))AND(rt1.c0)) THEN '-1851974070' ELSE LIKELY(DISTINCT rt1.c1) END WHERE (rt1.c6);
SELECT ALL * FROM rt1 WHERE (((LOWER(DISTINCT NULL))IS((NULL IN (rt1.c5)))));
SELECT DISTINCT * FROM rt1 WHERE (((LOWER(DISTINCT NULL))IS((NULL IN (rt1.c5))))) ORDER BY ((rt1.c1)OR((- (0.261464185684237)))) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM rt1 WHERE (((LOWER(DISTINCT NULL))IS((NULL IN (rt1.c5)))));
SELECT DISTINCT * FROM rt1 WHERE (((LOWER(DISTINCT NULL))IS((NULL IN (rt1.c5))))) ORDER BY ((rt1.c1)OR((- (0.261464185684237)))) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((CAST(t0.c1 AS TEXT))AND(CAST(t0.c2 AS REAL))))OR(CAST(t0.c2 AS TEXT))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((((CAST(t0.c1 AS TEXT))AND(CAST(t0.c2 AS REAL))))OR(CAST(t0.c2 AS TEXT))))AND(((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))) BETWEEN (((t0.c3) ISNULL)) AND ((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c2)))))))) LIMIT 2 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)IS NOT(t0.c4))) NOT BETWEEN (json_remove(t0.c1, '-1815063881', 0X481542de, t0.c0)) AND ((t0.c4 IN ())))) LIMIT 2;
SELECT ALL MIN(rt1.c0) FROM rt1 WHERE (((((rt1.c5)GLOB(NULL)))>(rt1.c1))) ORDER BY ((((rt1.c3)AND(((rt1.c2)&(rt1.c0)))))OR((NOT (rt1.c3)))), ((((rt1.c6)&(rt1.c3))) NOTNULL) ASC;
SELECT MIN(rt1.c0) FROM rt1 WHERE (((((rt1.c5)GLOB(NULL)))>(rt1.c1))) ORDER BY ((((rt1.c3)AND(((rt1.c2)&(rt1.c0)))))OR((NOT (rt1.c3)))), ((((rt1.c6)&(rt1.c3))) NOTNULL) ASC;
SELECT ALL * FROM rt1, t0 WHERE (((t0.c2)LIKE(t0.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c2)LIKE(t0.c1)) COLLATE RTRIM)AND(((rt1.c0)-(CASE WHEN t0.c2 THEN rt1.c3 WHEN rt1.c5 THEN t0.c0 ELSE t0.c3 END))))) ORDER BY ((rt1.c1 IN ()) IN (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN rt1.c6 THEN rt1.c0 END))  NULLS FIRST, ((t0.c4) IS FALSE) ASC LIMIT 1 INTERSECT SELECT * FROM rt1, t0 WHERE (((((((t0.c3)OR(t0.c4)))AND((((NULL, t0.c2, rt1.c6))<=((t0.c2, '[]', t0.c2))))))OR(((rt1.c2) IS FALSE)))) ORDER BY ((rt1.c1 IN ()) IN (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN rt1.c6 THEN rt1.c0 END))  NULLS FIRST, ((t0.c4) IS FALSE) ASC LIMIT 0X1;
SELECT ALL * FROM rt1, t0 WHERE (((t0.c2)LIKE(t0.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c2)LIKE(t0.c1)) COLLATE RTRIM)AND(((rt1.c0)-(CASE WHEN t0.c2 THEN rt1.c3 WHEN rt1.c5 THEN t0.c0 ELSE t0.c3 END))))) ORDER BY ((rt1.c1 IN ()) IN (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN rt1.c6 THEN rt1.c0 END))  NULLS FIRST, ((t0.c4) IS FALSE) ASC LIMIT 1 INTERSECT SELECT * FROM rt1, t0 WHERE (((((((t0.c3)OR(t0.c4)))AND((((NULL, t0.c2, rt1.c6))<=((t0.c2, '[]', t0.c2))))))OR(((rt1.c2) IS FALSE)))) ORDER BY ((rt1.c1 IN ()) IN (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN rt1.c6 THEN rt1.c0 END))  NULLS FIRST, ((t0.c4) IS FALSE) ASC LIMIT 0X1;
SELECT COUNT(*) FROM rt1, t0 WHERE (rt1.c6);
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((rt1.c6)AND(((((rt1.c3) NOT BETWEEN (t0.c2) AND (rt1.c2)))<>((((t0.c4, t0.c1))>((NULL, t0.c0)))))))) ORDER BY (((NOT (t0.c3)))+(CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN t0.c1 ELSE t0.c4 END))  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0, rt1 WHERE (((((((((CASE WHEN rt1.c0 THEN t0.c1 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c2 END)AND(CASE WHEN t0.c1 THEN rt1.c6 WHEN rt1.c3 THEN '1333222245' END)))AND(((rt1.c4) ISNULL))))OR(t0.c3)))OR((+ (t0.c2)))));
SELECT ALL * FROM t0, rt1 WHERE (((((((((CASE WHEN rt1.c0 THEN t0.c1 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c2 END)AND(CASE WHEN t0.c1 THEN rt1.c6 WHEN rt1.c3 THEN '1333222245' END)))AND(((rt1.c4) ISNULL))))OR(t0.c3)))OR((+ (t0.c2))))) ORDER BY UNLIKELY(DISTINCT ((t0.c2)<<(rt1.c0))), (LIKELIHOOD(rt1.c4, t0.c3) IN ((rt1.c2 IN (t0.c4))))  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM t0, rt1 WHERE (HEX(DISTINCT ((t0.c3) BETWEEN (rt1.c1) AND (rt1.c5)))) ORDER BY UNLIKELY(DISTINCT ((t0.c2)<<(rt1.c0))), (LIKELIHOOD(rt1.c4, t0.c3) IN ((rt1.c2 IN (t0.c4))))  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM t0, rt1 WHERE (((((((((CASE WHEN rt1.c0 THEN t0.c1 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c2 END)AND(CASE WHEN t0.c1 THEN rt1.c6 WHEN rt1.c3 THEN '1333222245' END)))AND(((rt1.c4) ISNULL))))OR(t0.c3)))OR((+ (t0.c2)))));
SELECT ALL * FROM t0, rt1 WHERE (((((((((CASE WHEN rt1.c0 THEN t0.c1 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c2 END)AND(CASE WHEN t0.c1 THEN rt1.c6 WHEN rt1.c3 THEN '1333222245' END)))AND(((rt1.c4) ISNULL))))OR(t0.c3)))OR((+ (t0.c2))))) ORDER BY UNLIKELY(DISTINCT ((t0.c2)<<(rt1.c0))), (LIKELIHOOD(rt1.c4, t0.c3) IN ((rt1.c2 IN (t0.c4))))  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM t0, rt1 WHERE (HEX(DISTINCT ((t0.c3) BETWEEN (rt1.c1) AND (rt1.c5)))) ORDER BY UNLIKELY(DISTINCT ((t0.c2)<<(rt1.c0))), (LIKELIHOOD(rt1.c4, t0.c3) IN ((rt1.c2 IN (t0.c4))))  NULLS LAST LIMIT 0X2;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c6)IS(((rt1.c1)<<(rt1.c0))))) ORDER BY (+ ((((rt1.c4, rt1.c5))<=((rt1.c3, rt1.c4)))));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c6)IS(((rt1.c1)<<(rt1.c0))))) ORDER BY rt1.c5 INTERSECT SELECT COUNT(*) FROM rt1 WHERE ((rt1.c1 IN ()) COLLATE RTRIM) ORDER BY rt1.c5;
SELECT * FROM t0 WHERE (CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END COLLATE BINARY) ORDER BY CASE WHEN ((t0.c1)IS NOT(t0.c1)) THEN NULL END DESC  NULLS FIRST, CASE WHEN ((((((t0.c2)AND(t0.c0)))AND(t0.c3)))OR(t0.c4)) THEN ((t0.c0)==(t0.c2)) WHEN CASE WHEN t0.c4 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END THEN LOWER(t0.c3) END DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END COLLATE BINARY) ORDER BY (((((('591531326'))>=((t0.c2))), ((((((((t0.c2)OR(NULL)))AND(0X5f6e19ed)))OR(t0.c0)))AND(t0.c2))))<>(((~ (t0.c0)), ((t0.c3) IS TRUE)))) DESC  NULLS FIRST, (((t0.c4, t0.c4, t0.c2, t0.c1)) BETWEEN ((t0.c4, ((((((t0.c0)OR(t0.c2)))OR(t0.c4)))OR(t0.c0)), ((((((t0.c3)AND(t0.c3)))AND(t0.c0)))OR(t0.c1)), t0.c0)) AND ((((t0.c0)+(t0.c0)), CASE WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c2 WHEN NULL THEN t0.c4 END, CAST('0.9789190505701061' AS NUMERIC), ((t0.c3) NOT NULL)))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END COLLATE BINARY) ORDER BY CASE WHEN ((t0.c1)IS NOT(t0.c1)) THEN NULL END DESC  NULLS FIRST, CASE WHEN ((((((t0.c2)AND(t0.c0)))AND(t0.c3)))OR(t0.c4)) THEN ((t0.c0)==(t0.c2)) WHEN CASE WHEN t0.c4 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END THEN LOWER(t0.c3) END DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END COLLATE BINARY) ORDER BY (((((('591531326'))>=((t0.c2))), ((((((((t0.c2)OR(NULL)))AND(0X5f6e19ed)))OR(t0.c0)))AND(t0.c2))))<>(((~ (t0.c0)), ((t0.c3) IS TRUE)))) DESC  NULLS FIRST, (((t0.c4, t0.c4, t0.c2, t0.c1)) BETWEEN ((t0.c4, ((((((t0.c0)OR(t0.c2)))OR(t0.c4)))OR(t0.c0)), ((((((t0.c3)AND(t0.c3)))AND(t0.c0)))OR(t0.c1)), t0.c0)) AND ((((t0.c0)+(t0.c0)), CASE WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c2 WHEN NULL THEN t0.c4 END, CAST('0.9789190505701061' AS NUMERIC), ((t0.c3) NOT NULL)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c0 IN ()) IN ()));
SELECT DISTINCT * FROM t0 WHERE (((t0.c0 IN ()) IN ()));
SELECT ALL * FROM t0 WHERE (((t0.c0 IN ()) IN ()));
SELECT DISTINCT * FROM t0 WHERE (((t0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM t0, rt1 WHERE (t0.c0);
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((t0.c0)AND(CASE WHEN (((rt1.c2, t0.c0))>=((rt1.c2, t0.c1))) THEN CASE t0.c0  WHEN rt1.c2 THEN t0.c1 WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c3 END WHEN json_quote(rt1.c5) THEN (((rt1.c1, rt1.c2))>=((rt1.c0, rt1.c3))) WHEN 0.6519900720997954 THEN 0Xffffffffc629f440 WHEN rt1.c3 THEN ((t0.c4)*(t0.c2)) WHEN -929764602 THEN ((rt1.c5) NOTNULL) WHEN (+ (t0.c3)) THEN ((t0.c4) NOT BETWEEN (rt1.c1) AND (rt1.c3)) ELSE ((((((rt1.c2)AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c4)) END))) LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((((rt1.c0)AND((((rt1.c4))>=((rt1.c1))))))OR(t0.c0))) LIMIT 1;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((((((((rt1.c6, rt1.c6))=((rt1.c3, rt1.c4))))AND(LTRIM(rt1.c3, x'46'))))OR((((rt1.c3, rt1.c1))>((rt1.c0, rt1.c6))))))AND(((rt1.c6) BETWEEN (rt1.c0) AND (rt1.c4)))))OR((rt1.c0 IN ()))))OR((+ (NULL)))));
SELECT COUNT(*) FROM rt1 WHERE ((((((((((((((rt1.c6, rt1.c6))==((rt1.c3, rt1.c4))))AND(LTRIM(rt1.c3, x'46'))))OR((((rt1.c3, rt1.c1))>((rt1.c0, rt1.c6))))))AND(((rt1.c6) BETWEEN (rt1.c0) AND (rt1.c4)))))OR((rt1.c0 IN ()))))OR((+ (NULL))))) ORDER BY ((((rt1.c5)OR(((((rt1.c2)AND(rt1.c1)))OR(rt1.c6)))))AND(CASE rt1.c6  WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c2 END)) ASC, CASE (+ (rt1.c4))  WHEN ((rt1.c5)OR(rt1.c3)) THEN (- (rt1.c2)) WHEN (rt1.c1 IN ('-1560087994', rt1.c0)) THEN ((rt1.c5)<=(rt1.c1)) WHEN rt1.c1 THEN (NOT (rt1.c2)) WHEN rt1.c0 THEN CASE WHEN rt1.c1 THEN 'J^' WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c2 END ELSE ((((((((((((0.7997553501399401)OR(rt1.c1)))OR(rt1.c6)))AND(rt1.c6)))AND(rt1.c4)))AND('-1666556278')))AND(0.18275689942079776)) END ASC  NULLS LAST;
SELECT MAX(rt1.c5) FROM t0, rt1 WHERE (((((t0.c4, rt1.c3)) BETWEEN ((t0.c3, t0.c1)) AND ((rt1.c2, t0.c0))) IN ()));
SELECT MAX(rt1.c5) FROM t0, rt1 WHERE (((((t0.c4, rt1.c3)) BETWEEN ((t0.c3, t0.c1)) AND ((rt1.c2, t0.c0))) IN ())) LIMIT 0X1 INTERSECT SELECT MAX(rt1.c5) FROM t0, rt1 WHERE ((t0.c3 COLLATE NOCASE IN ())) LIMIT 1;
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c2 IN ()) COLLATE RTRIM) ORDER BY (((rt1.c2 IN ())) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 END) AND (x'45d5e5')) ASC  NULLS FIRST, ((((0x1c534f4d) NOT BETWEEN (rt1.c6) AND (rt1.c2)))OR((rt1.c5 IN (rt1.c1)))) ASC;
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c2 IN ()) COLLATE RTRIM) ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)) AS NUMERIC) ASC, (((rt1.c6 IN ())) BETWEEN (SQLITE_VERSION()) AND (((rt1.c4) IS TRUE)));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (((((rt1.c2) NOT BETWEEN (rt1.c5) AND (t0.c2))))>((rt1.c0 COLLATE RTRIM))) WHERE (rt1.c3);
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON (((((rt1.c2) NOT BETWEEN (rt1.c5) AND (t0.c2))))>((rt1.c0 COLLATE RTRIM))) WHERE (((rt1.c3)AND(json_patch(t0.c0, ((((((t0.c2)OR(t0.c1)))OR(t0.c1)))AND(x''))))));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (((((rt1.c2) NOT BETWEEN (rt1.c5) AND (t0.c2))))>((rt1.c0 COLLATE RTRIM))) WHERE (rt1.c3);
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON (((((rt1.c2) NOT BETWEEN (rt1.c5) AND (t0.c2))))>((rt1.c0 COLLATE RTRIM))) WHERE (((rt1.c3)AND(json_patch(t0.c0, ((((((t0.c2)OR(t0.c1)))OR(t0.c1)))AND(x''))))));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((rt1.c1 COLLATE BINARY)>((rt1.c2 IN ()))) WHERE (((- (rt1.c5)) IN (rt1.c2))) ORDER BY (NOT (CASE '507650935'  WHEN '2010798651' THEN rt1.c6 ELSE t0.c2 END)) ASC  NULLS LAST, ((((((((rt1.c4)OR('-1371897114')))OR(rt1.c3)))AND(rt1.c4))) NOT BETWEEN (((rt1.c5)<(rt1.c1))) AND ((((rt1.c3, rt1.c2, rt1.c1))>((rt1.c1, rt1.c0, rt1.c4)))))  NULLS LAST;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON ((rt1.c1 COLLATE BINARY)>((rt1.c2 IN ()))) WHERE (((- (rt1.c5)) IN (rt1.c2))) ORDER BY LIKELY(DISTINCT NULLIF(rt1.c0, t0.c4))  NULLS LAST, ((((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))), (~ (rt1.c0)), (+ (rt1.c5))))>((json_array_length('su!Z|*Ṋl*', rt1.c6), ((rt1.c0)GLOB(rt1.c0)), CASE WHEN rt1.c2 THEN t0.c2 WHEN t0.c0 THEN rt1.c5 ELSE t0.c4 END))) DESC LIMIT 0X2;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((rt1.c1 COLLATE BINARY)>((rt1.c2 IN ()))) WHERE (((- (rt1.c5)) IN (rt1.c2))) ORDER BY (NOT (CASE '507650935'  WHEN '2010798651' THEN rt1.c6 ELSE t0.c2 END)) ASC  NULLS LAST, ((((((((rt1.c4)OR('-1371897114')))OR(rt1.c3)))AND(rt1.c4))) NOT BETWEEN (((rt1.c5)<(rt1.c1))) AND ((((rt1.c3, rt1.c2, rt1.c1))>((rt1.c1, rt1.c0, rt1.c4)))))  NULLS LAST;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON ((rt1.c1 COLLATE BINARY)>((rt1.c2 IN ()))) WHERE (((- (rt1.c5)) IN (rt1.c2))) ORDER BY LIKELY(DISTINCT NULLIF(rt1.c0, t0.c4))  NULLS LAST, ((((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))), (~ (rt1.c0)), (+ (rt1.c5))))>((json_array_length('su!Z|*Ṋl*', rt1.c6), ((rt1.c0)GLOB(rt1.c0)), CASE WHEN rt1.c2 THEN t0.c2 WHEN t0.c0 THEN rt1.c5 ELSE t0.c4 END))) DESC LIMIT 0X2;
SELECT ALL * FROM t0 WHERE ((+ (TYPEOF(t0.c4))));
SELECT ALL * FROM t0 WHERE ((((+ (TYPEOF(t0.c4))))AND(t0.c3))) LIMIT 1 INTERSECT SELECT ALL * FROM t0 WHERE ((NOT (t0.c4)) COLLATE NOCASE) LIMIT 0X1;
SELECT ALL * FROM t0 WHERE ((+ (TYPEOF(t0.c4))));
SELECT ALL * FROM t0 WHERE ((((+ (TYPEOF(t0.c4))))AND(t0.c3))) LIMIT 1 INTERSECT SELECT ALL * FROM t0 WHERE ((NOT (t0.c4)) COLLATE NOCASE) LIMIT 0X1;
SELECT ALL MIN(t0.c1) FROM rt1, t0 WHERE (((rt1.c6)IS NOT(0.8149465832571002)) COLLATE NOCASE);
SELECT DISTINCT MIN(t0.c1) FROM rt1, t0 WHERE (((rt1.c6)IS NOT(0.8149465832571002)) COLLATE NOCASE) ORDER BY ((((((((t0.c0)AND(t0.c3)))AND(t0.c0)))OR(((rt1.c2)-(rt1.c1)))))AND(((rt1.c3)GLOB(t0.c4)))) DESC  NULLS LAST, ((((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c0)))+(CASE WHEN t0.c1 THEN '-1997341154' END));
SELECT * FROM rt1 WHERE (CASE COALESCE(rt1.c2, rt1.c6, rt1.c1, rt1.c1, rt1.c5)  WHEN CAST(NULL AS TEXT) THEN highlight(rt1.c1, rt1.c5, rt1.c6, rt1.c3) ELSE (((x'd8f65f', rt1.c6, rt1.c5, rt1.c6))>((rt1.c5, rt1.c0, rt1.c0, rt1.c3))) END) ORDER BY (~ (((((((((((((rt1.c5)AND(rt1.c6)))OR(rt1.c5)))AND(rt1.c1)))OR(rt1.c3)))AND(rt1.c6)))AND(rt1.c2))));
SELECT DISTINCT * FROM rt1 WHERE (((CASE COALESCE(rt1.c2, rt1.c6, rt1.c1, rt1.c1, rt1.c5)  WHEN CAST(NULL AS TEXT) THEN highlight(rt1.c1, rt1.c5, rt1.c6, rt1.c3) ELSE (((x'd8f65f', rt1.c6, rt1.c5, rt1.c6))>((rt1.c5, rt1.c0, rt1.c0, rt1.c3))) END)AND((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4)) IN (TRIM(rt1.c0, rt1.c5)))))) ORDER BY '6' DESC  NULLS LAST, 0.253633377797968 COLLATE NOCASE ASC, CASE WHEN ((rt1.c0)GLOB(rt1.c3)) THEN (((rt1.c4, rt1.c5)) BETWEEN ((rt1.c6, rt1.c0)) AND ((rt1.c0, rt1.c2))) WHEN CASE WHEN rt1.c1 THEN rt1.c3 END THEN ((rt1.c6) IS TRUE) WHEN (((rt1.c3))==((rt1.c3))) THEN (2.010461842E9 IN (rt1.c2, rt1.c6)) ELSE (((0x3b65eaae))<((rt1.c6))) END DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (CASE COALESCE(rt1.c2, rt1.c6, rt1.c1, rt1.c1, rt1.c5)  WHEN CAST(NULL AS TEXT) THEN highlight(rt1.c1, rt1.c5, rt1.c6, rt1.c3) ELSE (((x'd8f65f', rt1.c6, rt1.c5, rt1.c6))>((rt1.c5, rt1.c0, rt1.c0, rt1.c3))) END) ORDER BY (~ (((((((((((((rt1.c5)AND(rt1.c6)))OR(rt1.c5)))AND(rt1.c1)))OR(rt1.c3)))AND(rt1.c6)))AND(rt1.c2))));
SELECT DISTINCT * FROM rt1 WHERE (((CASE COALESCE(rt1.c2, rt1.c6, rt1.c1, rt1.c1, rt1.c5)  WHEN CAST(NULL AS TEXT) THEN highlight(rt1.c1, rt1.c5, rt1.c6, rt1.c3) ELSE (((x'd8f65f', rt1.c6, rt1.c5, rt1.c6))>((rt1.c5, rt1.c0, rt1.c0, rt1.c3))) END)AND((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4)) IN (TRIM(rt1.c0, rt1.c5)))))) ORDER BY '6' DESC  NULLS LAST, 0.253633377797968 COLLATE NOCASE ASC, CASE WHEN ((rt1.c0)GLOB(rt1.c3)) THEN (((rt1.c4, rt1.c5)) BETWEEN ((rt1.c6, rt1.c0)) AND ((rt1.c0, rt1.c2))) WHEN CASE WHEN rt1.c1 THEN rt1.c3 END THEN ((rt1.c6) IS TRUE) WHEN (((rt1.c3))==((rt1.c3))) THEN (2.010461842E9 IN (rt1.c2, rt1.c6)) ELSE (((0x3b65eaae))<((rt1.c6))) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT)) NOTNULL)) ORDER BY ((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c5)))/(CASE WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT)) NOTNULL)) ORDER BY ((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c5)))/(CASE WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END)) LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (rt1.c6) ORDER BY ((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c5)))/(CASE WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END)) LIMIT 0;
SELECT ALL MIN(t0.c4) FROM t0 NOT INDEXED, rt1 WHERE (((((t0.c0 COLLATE RTRIM)OR(((rt1.c5) NOT BETWEEN (-889508270) AND (0.9684774486826819)))))OR((~ (t0.c0)))));
SELECT MIN(t0.c4) FROM t0, rt1 WHERE (((((((t0.c0 COLLATE RTRIM)OR(((rt1.c5) NOT BETWEEN (0xffffffffcafb2e52) AND (0.9684774486826819)))))OR((~ (t0.c0)))))AND(0.38118086475005564))) INTERSECT SELECT MIN(t0.c4) FROM t0, rt1 WHERE ((+ ((((rt1.c0, rt1.c2)) BETWEEN ((t0.c2, t0.c2)) AND ((t0.c2, t0.c2))))));
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (t0.c4);
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (((t0.c4)AND(-8.56217189E8))) LIMIT 0X0 INTERSECT SELECT * FROM t0 NATURAL JOIN rt1 WHERE (((TOTAL_CHANGES())LIKE(t0.c1))) LIMIT 0X0;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (t0.c4);
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (((t0.c4)AND(-8.56217189E8))) LIMIT 0X0 INTERSECT SELECT * FROM t0 NATURAL JOIN rt1 WHERE (((TOTAL_CHANGES())LIKE(t0.c1))) LIMIT 0X0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c4, t0.c3, t0.c2)) BETWEEN ((t0.c4, t0.c1, t0.c4)) AND ((t0.c4, t0.c3, t0.c3))) COLLATE BINARY) ORDER BY (((t0.c1, NULL, t0.c1)) NOT BETWEEN ((TRIM(t0.c4, t0.c0), t0.c3, ((t0.c3) BETWEEN (t0.c2) AND (t0.c3)))) AND (('-561016402', ((t0.c2) BETWEEN (t0.c4) AND (t0.c0)), ((((((((NULL)OR(t0.c3)))OR(t0.c1)))AND(t0.c3)))AND(t0.c2))))) DESC  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE ((((t0.c4, t0.c3, t0.c2)) BETWEEN ((t0.c4, t0.c1, t0.c4)) AND ((t0.c4, t0.c3, t0.c3))) COLLATE BINARY) ORDER BY 0.6593017839613461 ASC  NULLS FIRST, ((((t0.c4) IS FALSE))*((((t0.c1))<=((t0.c4))))) INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (((~ (t0.c4)) IN ())) ORDER BY 0.6593017839613461 ASC  NULLS FIRST, ((((t0.c4) IS FALSE))*((((t0.c1))<=((t0.c4)))));
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c4))) ORDER BY NULL DESC;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((+ (t0.c4))) ORDER BY NULL DESC INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CAST('[h' AS TEXT))OR(CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c3 WHEN t0.c2 THEN t0.c4 WHEN t0.c2 THEN t0.c4 WHEN t0.c0 THEN t0.c1 END))) ORDER BY NULL DESC;
SELECT * FROM rt1 CROSS JOIN t0 ON UNLIKELY(NULL COLLATE BINARY) WHERE (((LIKELIHOOD(DISTINCT t0.c2, t0.c1)) NOT BETWEEN ((((rt1.c1, rt1.c3, rt1.c5))!=((NULL, rt1.c2, rt1.c1)))) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c5 END))) ORDER BY UPPER(DISTINCT ((rt1.c0) IS TRUE))  NULLS FIRST, rt1.c5, CASE WHEN ((rt1.c3) BETWEEN (t0.c0) AND (t0.c2)) THEN ((rt1.c5)AND(1940325271)) WHEN CAST(t0.c2 AS NUMERIC) THEN (t0.c0 IN (t0.c4)) WHEN (t0.c1 IN ()) THEN ((rt1.c0)==(t0.c1)) WHEN ((rt1.c6)>(t0.c1)) THEN (- (rt1.c1)) WHEN x'82be' THEN (+ (rt1.c6)) WHEN CASE WHEN rt1.c4 THEN t0.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c5 THEN t0.c2 ELSE t0.c4 END THEN ((t0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)) ELSE ((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c3)) END DESC;
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON UNLIKELY(NULL COLLATE BINARY) WHERE (((((LIKELIHOOD(DISTINCT t0.c2, t0.c1)) NOT BETWEEN ((((rt1.c1, rt1.c3, rt1.c5))<>((NULL, rt1.c2, rt1.c1)))) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c5 END)))AND('0.4875802708536756'))) ORDER BY UPPER(DISTINCT ((rt1.c0) IS TRUE))  NULLS FIRST, rt1.c5, CASE WHEN ((rt1.c3) BETWEEN (t0.c0) AND (t0.c2)) THEN ((rt1.c5)AND(0x73a70397)) WHEN CAST(t0.c2 AS NUMERIC) THEN (t0.c0 IN (t0.c4)) WHEN (t0.c1 IN ()) THEN ((rt1.c0)=(t0.c1)) WHEN ((rt1.c6)>(t0.c1)) THEN (- (rt1.c1)) WHEN x'82be' THEN (+ (rt1.c6)) WHEN CASE WHEN rt1.c4 THEN t0.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c5 THEN t0.c2 ELSE t0.c4 END THEN ((t0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)) ELSE ((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c3)) END DESC LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON UNLIKELY(NULL COLLATE BINARY) WHERE (rt1.c4) ORDER BY UPPER(DISTINCT ((rt1.c0) IS TRUE))  NULLS FIRST, rt1.c5, CASE WHEN ((rt1.c3) BETWEEN (t0.c0) AND (t0.c2)) THEN ((rt1.c5)AND(1940325271)) WHEN CAST(t0.c2 AS NUMERIC) THEN (t0.c0 IN (t0.c4)) WHEN (t0.c1 IN ()) THEN ((rt1.c0)==(t0.c1)) WHEN ((rt1.c6)>(t0.c1)) THEN (- (rt1.c1)) WHEN x'82be' THEN (+ (rt1.c6)) WHEN CASE WHEN rt1.c4 THEN t0.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c5 THEN t0.c2 ELSE t0.c4 END THEN ((t0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)) ELSE ((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c3)) END DESC LIMIT 2;
SELECT * FROM rt1 CROSS JOIN t0 ON UNLIKELY(NULL COLLATE BINARY) WHERE (((LIKELIHOOD(DISTINCT t0.c2, t0.c1)) NOT BETWEEN ((((rt1.c1, rt1.c3, rt1.c5))!=((NULL, rt1.c2, rt1.c1)))) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c5 END))) ORDER BY UPPER(DISTINCT ((rt1.c0) IS TRUE))  NULLS FIRST, rt1.c5, CASE WHEN ((rt1.c3) BETWEEN (t0.c0) AND (t0.c2)) THEN ((rt1.c5)AND(1940325271)) WHEN CAST(t0.c2 AS NUMERIC) THEN (t0.c0 IN (t0.c4)) WHEN (t0.c1 IN ()) THEN ((rt1.c0)==(t0.c1)) WHEN ((rt1.c6)>(t0.c1)) THEN (- (rt1.c1)) WHEN x'82be' THEN (+ (rt1.c6)) WHEN CASE WHEN rt1.c4 THEN t0.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c5 THEN t0.c2 ELSE t0.c4 END THEN ((t0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)) ELSE ((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c3)) END DESC;
SELECT * FROM rt1, t0 WHERE ((((t0.c4)+(rt1.c4)) IN (((((t0.c2)AND('6')))AND(rt1.c2))))) ORDER BY TRIM(rt1.c4) COLLATE BINARY DESC  NULLS LAST, rt1.c6 ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c4)+(rt1.c4)) IN (((((t0.c2)AND('6')))AND(rt1.c2)))))AND(t0.c2))) ORDER BY TRIM(rt1.c4) COLLATE BINARY DESC  NULLS LAST, rt1.c6 ASC INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((((((((((- (t0.c1)))OR(rt1.c5)))AND(CASE rt1.c6  WHEN t0.c1 THEN rt1.c3 ELSE NULL END)))AND((((t0.c0))>=((rt1.c6))))))AND(CAST(t0.c1 AS TEXT))))AND(rt1.c6))) ORDER BY TRIM(rt1.c4) COLLATE BINARY DESC  NULLS LAST, rt1.c6 ASC;
SELECT * FROM rt1, t0 WHERE ((((t0.c4)+(rt1.c4)) IN (((((t0.c2)AND('6')))AND(rt1.c2))))) ORDER BY TRIM(rt1.c4) COLLATE BINARY DESC  NULLS LAST, rt1.c6 ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c4)+(rt1.c4)) IN (((((t0.c2)AND('6')))AND(rt1.c2)))))AND(t0.c2))) ORDER BY TRIM(rt1.c4) COLLATE BINARY DESC  NULLS LAST, rt1.c6 ASC INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((((((((((- (t0.c1)))OR(rt1.c5)))AND(CASE rt1.c6  WHEN t0.c1 THEN rt1.c3 ELSE NULL END)))AND((((t0.c0))>=((rt1.c6))))))AND(CAST(t0.c1 AS TEXT))))AND(rt1.c6))) ORDER BY TRIM(rt1.c4) COLLATE BINARY DESC  NULLS LAST, rt1.c6 ASC;
SELECT MIN(t0.c3) FROM rt1, t0 WHERE ((CAST(rt1.c0 AS NUMERIC) IN ())) ORDER BY rt1.c3, ((0.10402993548042172)!=((NOT (rt1.c2)))) DESC, (((((((t0.c3, t0.c1)) BETWEEN ((rt1.c2, t0.c1)) AND ((rt1.c6, rt1.c6))))OR(((((((((rt1.c1)OR(t0.c1)))AND(rt1.c4)))OR('106856396')))OR(t0.c4)))))OR(t0.c2 COLLATE NOCASE)), CASE 'FALSE'  WHEN (- (0.31017851505166605)) THEN CAST(t0.c3 AS BLOB) WHEN (+ (rt1.c4)) THEN (NOT (rt1.c3)) ELSE ((t0.c4) NOT NULL) END DESC  NULLS LAST;
SELECT MIN(t0.c3) FROM rt1, t0 WHERE ((((CAST(rt1.c0 AS NUMERIC) IN ()))AND(NULL COLLATE NOCASE))) ORDER BY (((rt1.c6) NOTNULL) IN ()) ASC, t0.c1  NULLS LAST, x'' DESC  NULLS FIRST INTERSECT SELECT MIN(t0.c3) FROM rt1, t0 WHERE (((((t0.c4)<(rt1.c0))) ISNULL)) ORDER BY (((rt1.c6) NOTNULL) IN ()) ASC, t0.c1  NULLS LAST, x'' DESC  NULLS FIRST;
SELECT MAX(rt1.c6) FROM rt1, t0 WHERE (((0.36727044155502064)>=(((rt1.c4)IS NOT(t0.c3))))) ORDER BY 0.8801691197835113, ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c0))) IS FALSE) ASC  NULLS LAST, rt1.c3;
SELECT ALL MAX(rt1.c6) FROM rt1, t0 WHERE (((0.36727044155502064)>(((rt1.c4)IS NOT(t0.c3))))) ORDER BY 0.8801691197835113, ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c0))) IS FALSE) ASC  NULLS LAST, rt1.c3 INTERSECT SELECT ALL MAX(rt1.c6) FROM rt1, t0 WHERE ((+ (CASE WHEN rt1.c5 THEN t0.c0 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c3 END))) ORDER BY 0.8801691197835113, ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c0))) IS FALSE) ASC  NULLS LAST, rt1.c3;
SELECT MAX(t0.c2) FROM t0 WHERE ((t0.c3 IN ()));
SELECT DISTINCT MAX(t0.c2) FROM t0 WHERE ((((t0.c3 IN ()))AND(((((((t0.c0) BETWEEN (t0.c4) AND (t0.c0)))OR((NOT (t0.c3)))))AND(CAST(t0.c1 AS INTEGER)))))) ORDER BY (((((((((((NULL, t0.c0, t0.c1, t0.c3)) NOT BETWEEN ((t0.c3, t0.c4, t0.c3, t0.c1)) AND ((t0.c1, t0.c3, t0.c0, t0.c2))))OR(((((t0.c0)AND(t0.c0)))AND(t0.c4)))))AND(0.5789117370558894)))OR((t0.c4 IN ()))))AND(('h' IN ()))) ASC, ((((t0.c1)-(t0.c1))) NOT BETWEEN (((t0.c2) NOT NULL)) AND (((((((t0.c1)OR(t0.c3)))OR(t0.c1)))AND(t0.c2)))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(t0.c2) FROM t0 WHERE (UPPER(((t0.c3) NOT BETWEEN (t0.c1) AND (t0.c4)))) ORDER BY (((((((((((NULL, t0.c0, t0.c1, t0.c3)) NOT BETWEEN ((t0.c3, t0.c4, t0.c3, t0.c1)) AND ((t0.c1, t0.c3, t0.c0, t0.c2))))OR(((((t0.c0)AND(t0.c0)))AND(t0.c4)))))AND(0.5789117370558894)))OR((t0.c4 IN ()))))AND(('h' IN ()))) ASC, ((((t0.c1)-(t0.c1))) NOT BETWEEN (((t0.c2) NOT NULL)) AND (((((((t0.c1)OR(t0.c3)))OR(t0.c1)))AND(t0.c2)))) LIMIT 0;
SELECT ALL * FROM rt1 WHERE (((((rt1.c5) NOT NULL)) BETWEEN (((rt1.c4)OR(-2.26271228E8))) AND (LOWER(DISTINCT rt1.c2)))) ORDER BY (((((rt1.c0 IN (rt1.c4, rt1.c6)))AND((NOT (rt1.c5)))))AND((rt1.c0 IN (NULL, rt1.c1)))) ASC  NULLS FIRST, CASE WHEN ((rt1.c5)>=(rt1.c3)) THEN (rt1.c3 IN (1750593118, rt1.c0)) END, x'f0' ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((rt1.c5) NOT NULL)) BETWEEN (((rt1.c4)OR(-2.26271228E8))) AND (LOWER(DISTINCT rt1.c2)))) ORDER BY (((((rt1.c0 IN (rt1.c4, rt1.c6)))AND((NOT (rt1.c5)))))AND((rt1.c0 IN (NULL, rt1.c1)))) ASC  NULLS FIRST, CASE WHEN ((rt1.c5)>=(rt1.c3)) THEN (rt1.c3 IN (0X6857ee5e, rt1.c0)) END, x'f0' ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c5) NOT NULL)) BETWEEN (((rt1.c4)OR(-2.26271228E8))) AND (LOWER(DISTINCT rt1.c2)))) ORDER BY (((((rt1.c0 IN (rt1.c4, rt1.c6)))AND((NOT (rt1.c5)))))AND((rt1.c0 IN (NULL, rt1.c1)))) ASC  NULLS FIRST, CASE WHEN ((rt1.c5)>=(rt1.c3)) THEN (rt1.c3 IN (1750593118, rt1.c0)) END, x'f0' ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((rt1.c5) NOT NULL)) BETWEEN (((rt1.c4)OR(-2.26271228E8))) AND (LOWER(DISTINCT rt1.c2)))) ORDER BY (((((rt1.c0 IN (rt1.c4, rt1.c6)))AND((NOT (rt1.c5)))))AND((rt1.c0 IN (NULL, rt1.c1)))) ASC  NULLS FIRST, CASE WHEN ((rt1.c5)>=(rt1.c3)) THEN (rt1.c3 IN (0X6857ee5e, rt1.c0)) END, x'f0' ASC  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE ((t0.c0 IN ()));
SELECT DISTINCT * FROM t0, rt1 WHERE ((t0.c0 IN ())) LIMIT 1;
SELECT * FROM t0, rt1 WHERE ((t0.c0 IN ()));
SELECT DISTINCT * FROM t0, rt1 WHERE ((t0.c0 IN ())) LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE (((((((((((((t0.c0)IS NOT(rt1.c0)))OR((t0.c2 IN (x'')))))AND(rt1.c3)))AND(rt1.c6 COLLATE NOCASE)))OR(t0.c1)))AND((0.5224541559166049 IN ())))) ORDER BY (((t0.c4 IN (rt1.c2)))==(CAST(t0.c0 AS NUMERIC))), (~ ((('1631227169') BETWEEN (t0.c2) AND (rt1.c5))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((((((((t0.c0)IS NOT(rt1.c0)))OR((t0.c2 IN (x'')))))AND(rt1.c3)))AND(rt1.c6 COLLATE NOCASE)))OR(t0.c1)))AND((0.5224541559166049 IN ())))) ORDER BY CAST(((rt1.c6) NOTNULL) AS REAL) ASC INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CASE t0.c2  WHEN t0.c0 THEN rt1.c2 END COLLATE NOCASE) ORDER BY CAST(((rt1.c6) NOTNULL) AS REAL) ASC;
SELECT ALL * FROM t0, rt1 WHERE (((((((((((((t0.c0)IS NOT(rt1.c0)))OR((t0.c2 IN (x'')))))AND(rt1.c3)))AND(rt1.c6 COLLATE NOCASE)))OR(t0.c1)))AND((0.5224541559166049 IN ())))) ORDER BY (((t0.c4 IN (rt1.c2)))==(CAST(t0.c0 AS NUMERIC))), (~ ((('1631227169') BETWEEN (t0.c2) AND (rt1.c5))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((((((((t0.c0)IS NOT(rt1.c0)))OR((t0.c2 IN (x'')))))AND(rt1.c3)))AND(rt1.c6 COLLATE NOCASE)))OR(t0.c1)))AND((0.5224541559166049 IN ())))) ORDER BY CAST(((rt1.c6) NOTNULL) AS REAL) ASC INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CASE t0.c2  WHEN t0.c0 THEN rt1.c2 END COLLATE NOCASE) ORDER BY CAST(((rt1.c6) NOTNULL) AS REAL) ASC;
SELECT COUNT(*) FROM t0, rt1 WHERE (CASE WHEN ((rt1.c4)>=(rt1.c3)) THEN ((((((((((((rt1.c1)OR(rt1.c5)))OR(t0.c4)))OR(t0.c1)))OR(rt1.c4)))AND(rt1.c0)))AND(rt1.c4)) WHEN NULL THEN (~ (rt1.c4)) ELSE ((rt1.c3)<<(rt1.c3)) END);
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((CASE WHEN ((rt1.c4)>(rt1.c3)) THEN ((((((((((((rt1.c1)OR(rt1.c5)))OR(t0.c4)))OR(t0.c1)))OR(rt1.c4)))AND(rt1.c0)))AND(rt1.c4)) WHEN NULL THEN (~ (rt1.c4)) ELSE ((rt1.c3)<<(rt1.c3)) END)AND(CASE WHEN ((rt1.c6) ISNULL) THEN ((rt1.c3)&(rt1.c4)) WHEN CASE WHEN t0.c4 THEN t0.c4 WHEN rt1.c2 THEN t0.c2 WHEN t0.c3 THEN rt1.c6 END THEN (((rt1.c5))<=((rt1.c2))) END)));
SELECT * FROM t0 WHERE (t0.c4) ORDER BY ((((t0.c1)/(t0.c1)))%(CASE WHEN '1158340236' THEN t0.c4 ELSE t0.c3 END)) ASC  NULLS FIRST, ((((t0.c4)AND((('-2085887775') BETWEEN (t0.c1) AND (t0.c3)))))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))) DESC  NULLS FIRST, (((t0.c3)||(t0.c4)) IN ());
SELECT DISTINCT * FROM t0 WHERE (((t0.c4)AND(((((((((t0.c4)OR(t0.c3)))AND(t0.c4)))OR(t0.c4))) BETWEEN (((t0.c4) BETWEEN (t0.c4) AND (t0.c0))) AND (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))))))) ORDER BY ((((t0.c1)/(t0.c1)))%(CASE WHEN '1158340236' THEN t0.c4 ELSE t0.c3 END)) ASC  NULLS FIRST, ((((t0.c4)AND((('-2085887775') BETWEEN (t0.c1) AND (t0.c3)))))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))) DESC  NULLS FIRST, (((t0.c3)||(t0.c4)) IN ()) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c4 AS INTEGER))OR(((((t0.c2)OR(NULL)))OR(t0.c3)))))OR(((t0.c4)IS(t0.c4))))) ORDER BY ((((t0.c1)/(t0.c1)))%(CASE WHEN '1158340236' THEN t0.c4 ELSE t0.c3 END)) ASC  NULLS FIRST, ((((t0.c4)AND((('-2085887775') BETWEEN (t0.c1) AND (t0.c3)))))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))) DESC  NULLS FIRST, (((t0.c3)||(t0.c4)) IN ()) LIMIT 2;
SELECT * FROM t0 WHERE (t0.c4) ORDER BY ((((t0.c1)/(t0.c1)))%(CASE WHEN '1158340236' THEN t0.c4 ELSE t0.c3 END)) ASC  NULLS FIRST, ((((t0.c4)AND((('-2085887775') BETWEEN (t0.c1) AND (t0.c3)))))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))) DESC  NULLS FIRST, (((t0.c3)||(t0.c4)) IN ());
SELECT ALL COUNT(*) FROM rt1 WHERE (((HEX(rt1.c1))>>((((rt1.c5)) BETWEEN ((rt1.c4)) AND ((rt1.c3))))));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((HEX(rt1.c1))>>((((rt1.c5)) BETWEEN ((rt1.c4)) AND ((rt1.c3)))))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((rt1.c5)+('318473450'))) BETWEEN (CASE WHEN rt1.c4 THEN rt1.c4 WHEN NULL THEN '1779645305' END) AND (((rt1.c5)*(rt1.c0))))) LIMIT 0X0;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON (~ (load_extension(rt1.c6))) WHERE (((((rt1.c3)>>(t0.c2)))==(TRIM(t0.c4))));
SELECT DISTINCT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON (~ (load_extension(rt1.c6))) WHERE (((((rt1.c3)>>(t0.c2)))=(TRIM(t0.c4)))) LIMIT 0x1;
SELECT ALL MAX(t0.c2) FROM t0, rt1 WHERE (((((((rt1.c0)AND(t0.c0)))OR(t0.c2))) NOT BETWEEN (t0.c0) AND (CAST(rt1.c4 AS NUMERIC))));
SELECT MAX(t0.c2) FROM t0, rt1 WHERE (((((((((rt1.c0)AND(t0.c0)))OR(t0.c2))) NOT BETWEEN (t0.c0) AND (CAST(rt1.c4 AS NUMERIC))))AND(CASE WHEN x'a74f' THEN (((rt1.c0, t0.c4, rt1.c2))==((rt1.c6, rt1.c5, rt1.c0))) WHEN ((t0.c1) IS TRUE) THEN t0.c3 COLLATE NOCASE END))) ORDER BY t0.c0, ((((rt1.c5) ISNULL))||(((rt1.c4) NOTNULL)))  NULLS LAST LIMIT 1;
SELECT ALL MAX(rt1.c1) FROM rt1 WHERE (CASE ((rt1.c3) NOTNULL)  WHEN ((rt1.c0) ISNULL) THEN ((rt1.c4)<>('821932353')) WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)) WHEN ((rt1.c3) IS FALSE) THEN (((rt1.c3, 1995155914, rt1.c4))>((rt1.c6, rt1.c3, rt1.c4))) END);
SELECT DISTINCT MAX(rt1.c1) FROM rt1 WHERE (CASE ((rt1.c3) NOTNULL)  WHEN ((rt1.c0) ISNULL) THEN ((rt1.c4)>('821932353')) WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)) WHEN ((rt1.c3) IS FALSE) THEN (((rt1.c3, 1995155914, rt1.c4))>((rt1.c6, rt1.c3, rt1.c4))) END) LIMIT 0x0;
SELECT * FROM rt1 WHERE (CAST((((rt1.c1))==((rt1.c1))) AS BLOB)) ORDER BY CASE CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c6 END  WHEN NULL THEN rt1.c2 COLLATE BINARY WHEN (NOT (rt1.c5)) THEN (NOT (rt1.c6)) WHEN (+ (rt1.c0)) THEN CASE WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END ELSE rt1.c3 COLLATE NOCASE END DESC, -2101996474 DESC;
SELECT DISTINCT * FROM rt1 WHERE (CAST((((rt1.c1))==((rt1.c1))) AS BLOB)) ORDER BY (((CASE WHEN rt1.c5 THEN rt1.c5 ELSE -659412900 END, CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c1 END, ((rt1.c0) IS FALSE), ((((rt1.c5)AND(rt1.c4)))AND(rt1.c4)), NULLIF(rt1.c3, NULL)))=((CAST(rt1.c2 AS REAL), ((rt1.c4)<=(rt1.c2)), (NOT (rt1.c0)), (- ('e+')), json(rt1.c2)))), (((rt1.c2)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM)) AND ((((rt1.c2)LIKE(rt1.c4)))))  NULLS FIRST LIMIT 4 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c1)LIKE(rt1.c2)) IN (rt1.c5))) ORDER BY (((CASE WHEN rt1.c5 THEN rt1.c5 ELSE -659412900 END, CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c1 END, ((rt1.c0) IS FALSE), ((((rt1.c5)AND(rt1.c4)))AND(rt1.c4)), NULLIF(rt1.c3, NULL)))==((CAST(rt1.c2 AS REAL), ((rt1.c4)<=(rt1.c2)), (NOT (rt1.c0)), (- ('e+')), json(rt1.c2)))), (((rt1.c2)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM)) AND ((((rt1.c2)LIKE(rt1.c4)))))  NULLS FIRST LIMIT 0X4;
SELECT * FROM rt1 WHERE (CAST((((rt1.c1))==((rt1.c1))) AS BLOB)) ORDER BY CASE CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c6 END  WHEN NULL THEN rt1.c2 COLLATE BINARY WHEN (NOT (rt1.c5)) THEN (NOT (rt1.c6)) WHEN (+ (rt1.c0)) THEN CASE WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END ELSE rt1.c3 COLLATE NOCASE END DESC, -2101996474 DESC;
SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c3) NOTNULL)))) ORDER BY ((((((CAST('1633093055' AS INTEGER))AND(((rt1.c0)LIKE(rt1.c4)))))OR(((rt1.c5) ISNULL))))OR(((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c3))))  NULLS LAST, (+ ((rt1.c3 IN (rt1.c0))))  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE ((NOT (((rt1.c3) NOTNULL)))) ORDER BY 0.8283257803477149 LIMIT 0;
SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c3) NOTNULL)))) ORDER BY ((((((CAST('1633093055' AS INTEGER))AND(((rt1.c0)LIKE(rt1.c4)))))OR(((rt1.c5) ISNULL))))OR(((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c3))))  NULLS LAST, (+ ((rt1.c3 IN (rt1.c0))))  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE ((NOT (((rt1.c3) NOTNULL)))) ORDER BY 0.8283257803477149 LIMIT 0;
SELECT ALL MAX(rt1.c2) FROM t0, rt1 WHERE ('1046838590') ORDER BY '䤞U' DESC, (LIKELY(t0.c0) IN ()) DESC;
SELECT ALL MAX(rt1.c2) FROM t0, rt1 WHERE ((('1046838590')AND(CAST(rt1.c4 AS REAL) COLLATE NOCASE))) ORDER BY COALESCE(rt1.c4, rt1.c6, t0.c2, rt1.c1) COLLATE BINARY COLLATE NOCASE DESC  NULLS LAST, (((rt1.c3) IS TRUE) IN ((((t0.c3))<((rt1.c6))))), CAST(CASE rt1.c0  WHEN t0.c1 THEN rt1.c4 END AS REAL)  NULLS FIRST;
SELECT MIN(rt1.c0) FROM rt1 WHERE (NULLIF(((rt1.c2) BETWEEN (rt1.c3) AND ('i3Ej')), ((rt1.c5)=(rt1.c5))));
SELECT ALL MIN(rt1.c0) FROM rt1 WHERE (((NULLIF(((rt1.c2) BETWEEN (rt1.c3) AND ('i3Ej')), ((rt1.c5)==(rt1.c5))))AND(((((LOWER(rt1.c1))OR(((('-695794534', rt1.c5)) NOT BETWEEN ((rt1.c2, rt1.c3)) AND ((rt1.c1, rt1.c1))))))AND((+ (rt1.c1))))))) ORDER BY rt1.c2 COLLATE NOCASE DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT ALL MIN(rt1.c0) FROM rt1 WHERE (rt1.c2) ORDER BY rt1.c2 COLLATE NOCASE DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c1)<<(0.04798042217706289))  WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 ELSE -1446379791 END THEN t0.c2 ELSE CAST(t0.c4 AS TEXT) END) ORDER BY ((((t0.c3) NOT NULL))%(((t0.c2)>=(t0.c4)))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((CASE ((t0.c1)<<(0.04798042217706289))  WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 ELSE -1446379791 END THEN t0.c2 ELSE CAST(t0.c4 AS TEXT) END)AND(((LIKELIHOOD(t0.c4, t0.c4))>(((0.6566745000384002) ISNULL)))))) ORDER BY TYPEOF(CAST(t0.c2 AS BLOB)), t0.c0;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c1)<<(0.04798042217706289))  WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 ELSE -1446379791 END THEN t0.c2 ELSE CAST(t0.c4 AS TEXT) END) ORDER BY ((((t0.c3) NOT NULL))%(((t0.c2)>=(t0.c4)))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((CASE ((t0.c1)<<(0.04798042217706289))  WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 ELSE -1446379791 END THEN t0.c2 ELSE CAST(t0.c4 AS TEXT) END)AND(((LIKELIHOOD(t0.c4, t0.c4))>(((0.6566745000384002) ISNULL)))))) ORDER BY TYPEOF(CAST(t0.c2 AS BLOB)), t0.c0;
SELECT * FROM rt1 WHERE (((CASE rt1.c5  WHEN rt1.c4 THEN NULL WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END)IS NOT(ABS(rt1.c0)))) ORDER BY CASE rt1.c4  WHEN ((rt1.c5)<<(rt1.c3)) THEN ((rt1.c4)>=(rt1.c2)) WHEN ((NULL)=(rt1.c6)) THEN ((((rt1.c0)OR(rt1.c5)))AND(rt1.c3)) WHEN ((rt1.c4) ISNULL) THEN (('-813288164')*(rt1.c0)) END DESC, (((0.08345281454361964, (~ (rt1.c2))))<((((rt1.c1)>(rt1.c2)), LIKE(rt1.c6, rt1.c2)))) ASC, (((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN (CAST(rt1.c5 AS REAL)))  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((CASE rt1.c5  WHEN rt1.c4 THEN NULL WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END)IS NOT(ABS(rt1.c0)))) ORDER BY CASE rt1.c4  WHEN ((rt1.c5)<<(rt1.c3)) THEN ((rt1.c4)>=(rt1.c2)) WHEN ((NULL)=(rt1.c6)) THEN ((((rt1.c0)OR(rt1.c5)))AND(rt1.c3)) WHEN ((rt1.c4) ISNULL) THEN (('-813288164')*(rt1.c0)) END DESC, (((0.08345281454361964, (~ (rt1.c2))))<((((rt1.c1)>(rt1.c2)), LIKE(rt1.c6, rt1.c2)))) ASC, (((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN (CAST(rt1.c5 AS REAL)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (rt1.c6) ORDER BY CASE rt1.c4  WHEN ((rt1.c5)<<(rt1.c3)) THEN ((rt1.c4)>=(rt1.c2)) WHEN ((NULL)==(rt1.c6)) THEN ((((rt1.c0)OR(rt1.c5)))AND(rt1.c3)) WHEN ((rt1.c4) ISNULL) THEN (('-813288164')*(rt1.c0)) END DESC, (((0.08345281454361964, (~ (rt1.c2))))<((((rt1.c1)>(rt1.c2)), LIKE(rt1.c6, rt1.c2)))) ASC, (((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN (CAST(rt1.c5 AS REAL)))  NULLS LAST;
SELECT * FROM rt1 WHERE (((CASE rt1.c5  WHEN rt1.c4 THEN NULL WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END)IS NOT(ABS(rt1.c0)))) ORDER BY CASE rt1.c4  WHEN ((rt1.c5)<<(rt1.c3)) THEN ((rt1.c4)>=(rt1.c2)) WHEN ((NULL)=(rt1.c6)) THEN ((((rt1.c0)OR(rt1.c5)))AND(rt1.c3)) WHEN ((rt1.c4) ISNULL) THEN (('-813288164')*(rt1.c0)) END DESC, (((0.08345281454361964, (~ (rt1.c2))))<((((rt1.c1)>(rt1.c2)), LIKE(rt1.c6, rt1.c2)))) ASC, (((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN (CAST(rt1.c5 AS REAL)))  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((CASE rt1.c5  WHEN rt1.c4 THEN NULL WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END)IS NOT(ABS(rt1.c0)))) ORDER BY CASE rt1.c4  WHEN ((rt1.c5)<<(rt1.c3)) THEN ((rt1.c4)>=(rt1.c2)) WHEN ((NULL)=(rt1.c6)) THEN ((((rt1.c0)OR(rt1.c5)))AND(rt1.c3)) WHEN ((rt1.c4) ISNULL) THEN (('-813288164')*(rt1.c0)) END DESC, (((0.08345281454361964, (~ (rt1.c2))))<((((rt1.c1)>(rt1.c2)), LIKE(rt1.c6, rt1.c2)))) ASC, (((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN (CAST(rt1.c5 AS REAL)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (rt1.c6) ORDER BY CASE rt1.c4  WHEN ((rt1.c5)<<(rt1.c3)) THEN ((rt1.c4)>=(rt1.c2)) WHEN ((NULL)==(rt1.c6)) THEN ((((rt1.c0)OR(rt1.c5)))AND(rt1.c3)) WHEN ((rt1.c4) ISNULL) THEN (('-813288164')*(rt1.c0)) END DESC, (((0.08345281454361964, (~ (rt1.c2))))<((((rt1.c1)>(rt1.c2)), LIKE(rt1.c6, rt1.c2)))) ASC, (((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN (CAST(rt1.c5 AS REAL)))  NULLS LAST;
SELECT * FROM t0 WHERE (json_array_length(CASE WHEN t0.c3 THEN t0.c0 ELSE t0.c1 END, t0.c0)) ORDER BY (+ (((t0.c3)-(t0.c1)))) ASC  NULLS LAST, ((t0.c3 COLLATE BINARY) NOT BETWEEN (-683928110) AND (((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))AND(t0.c2)))AND(t0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (json_array_length(CASE WHEN t0.c3 THEN t0.c0 ELSE t0.c1 END, t0.c0)) ORDER BY CASE (((t0.c4)) BETWEEN ((t0.c2)) AND ((t0.c4)))  WHEN HEX(t0.c2) THEN ((t0.c0)|(t0.c0)) WHEN ((t0.c4) IS FALSE) THEN ((t0.c3)IS NOT(t0.c2)) ELSE ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c3)) END  NULLS LAST LIMIT 0x1;
SELECT * FROM t0 WHERE (json_array_length(CASE WHEN t0.c3 THEN t0.c0 ELSE t0.c1 END, t0.c0)) ORDER BY (+ (((t0.c3)-(t0.c1)))) ASC  NULLS LAST, ((t0.c3 COLLATE BINARY) NOT BETWEEN (-683928110) AND (((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))AND(t0.c2)))AND(t0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2)|(t0.c0)) THEN (((t0.c1, t0.c0, t0.c2))==(('0.005853506947394171', t0.c1, t0.c1))) END) ORDER BY (t0.c4 IN (t0.c3, NULL)) COLLATE NOCASE DESC  NULLS FIRST, (~ (t0.c3))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CASE WHEN ((t0.c2)|(t0.c0)) THEN (((t0.c1, t0.c0, t0.c2))==(('0.005853506947394171', t0.c1, t0.c1))) END)AND((((t0.c2 COLLATE RTRIM))>=((((t0.c2)<<(t0.c2)))))))) ORDER BY JULIANDAY(CASE WHEN t0.c0 THEN t0.c3 ELSE t0.c0 END, t0.c3, (((t0.c0)) BETWEEN ((t0.c4)) AND ((t0.c4))), CAST(t0.c1 AS BLOB)) DESC  NULLS FIRST, ((t0.c3 IN (t0.c0)) IN ())  NULLS FIRST, (+ (((((x'e7')AND(t0.c4)))AND(t0.c4)))) ASC  NULLS FIRST, ((((t0.c2) NOTNULL)) BETWEEN (((t0.c1) NOT NULL)) AND ((t0.c2 IN (t0.c4)))) DESC LIMIT 0;
SELECT MIN(rt1.c3) FROM t0, rt1 WHERE (CAST((NOT (rt1.c3)) AS NUMERIC)) ORDER BY ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3)))!=(((rt1.c0) IS FALSE))), CAST((('&ft') NOT BETWEEN (x'8dc7') AND (rt1.c4)) AS REAL), CAST(TRIM(DISTINCT 0X41da8b51) AS BLOB)  NULLS FIRST, (+ (((rt1.c1)IS(rt1.c1)))) ASC  NULLS LAST;
SELECT DISTINCT MIN(rt1.c3) FROM t0, rt1 WHERE (CAST((NOT (rt1.c3)) AS NUMERIC)) ORDER BY CAST(HEX(DISTINCT 'D㩹29IiaP_') AS REAL)  NULLS FIRST, (('')IS((~ (t0.c4)))) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE (((CAST(rt1.c5 AS NUMERIC))LIKE(((rt1.c3) BETWEEN (rt1.c0) AND (t0.c0)))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(rt1.c5 AS NUMERIC))LIKE(((rt1.c3) BETWEEN (rt1.c0) AND (t0.c0))))) ORDER BY (NOT (rt1.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (((CAST(rt1.c5 AS NUMERIC))LIKE(((rt1.c3) BETWEEN (rt1.c0) AND (t0.c0)))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(rt1.c5 AS NUMERIC))LIKE(((rt1.c3) BETWEEN (rt1.c0) AND (t0.c0))))) ORDER BY (NOT (rt1.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((ABS(rt1.c4))GLOB(TRIM(DISTINCT '6U'))));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((ABS(rt1.c4))GLOB(TRIM(DISTINCT '6U'))))AND(((rt1.c1) NOT BETWEEN (CASE rt1.c5  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c4 END) AND ((~ (rt1.c1))))))) ORDER BY json_patch(CASE WHEN rt1.c3 THEN rt1.c2 WHEN NULL THEN rt1.c0 WHEN rt1.c5 THEN rt1.c4 ELSE rt1.c3 END, (((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3)))) DESC;
SELECT MAX(rt1.c1) FROM rt1 WHERE (CASE ((rt1.c0)GLOB(rt1.c3))  WHEN ((rt1.c2)&(rt1.c6)) THEN rt1.c3 WHEN (((rt1.c0, rt1.c4)) NOT BETWEEN ((201579330, rt1.c6)) AND ((rt1.c1, rt1.c6))) THEN ((0.3804011763211913)LIKE(NULL)) WHEN (rt1.c3 IN (rt1.c1, rt1.c4)) THEN (rt1.c3 IN (rt1.c5, rt1.c4)) ELSE ((((rt1.c1)AND(rt1.c5)))OR(rt1.c6)) END);
SELECT MAX(rt1.c1) FROM rt1 WHERE (CASE ((rt1.c0)GLOB(rt1.c3))  WHEN ((rt1.c2)&(rt1.c6)) THEN rt1.c3 WHEN (((rt1.c0, rt1.c4)) NOT BETWEEN ((201579330, rt1.c6)) AND ((rt1.c1, rt1.c6))) THEN ((0.3804011763211913)LIKE(NULL)) WHEN (rt1.c3 IN (rt1.c1, rt1.c4)) THEN (rt1.c3 IN (rt1.c5, rt1.c4)) ELSE ((((rt1.c1)AND(rt1.c5)))OR(rt1.c6)) END) ORDER BY CASE WHEN (((rt1.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c5))) THEN ((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c3)) ELSE NULLIF(rt1.c3, rt1.c4) END, (CAST(rt1.c3 AS INTEGER) IN (((rt1.c2)>(rt1.c4)), ((rt1.c1) NOTNULL))) DESC LIMIT 0x0 INTERSECT SELECT MAX(rt1.c1) FROM rt1 WHERE (((rt1.c4)<>(rt1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN (((rt1.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c5))) THEN ((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c3)) ELSE NULLIF(rt1.c3, rt1.c4) END, (CAST(rt1.c3 AS INTEGER) IN (((rt1.c2)>(rt1.c4)), ((rt1.c1) NOTNULL))) DESC LIMIT 0;
SELECT MIN(t0.c1) FROM rt1 LEFT OUTER JOIN t0 ON CAST((((((((('Dfv7<b')AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c4)))AND(t0.c0)) AS NUMERIC) WHERE (CHANGES());
SELECT MIN(t0.c1) FROM rt1 LEFT OUTER JOIN t0 ON CAST((((((((('Dfv7<b')AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c4)))AND(t0.c0)) AS NUMERIC) WHERE (CHANGES()) INTERSECT SELECT MIN(t0.c1) FROM rt1 LEFT OUTER JOIN t0 ON CAST((((((((('Dfv7<b')AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c4)))AND(t0.c0)) AS NUMERIC) WHERE (rt1.c1);
SELECT * FROM rt1 WHERE (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c5)) COLLATE BINARY) ORDER BY rt1.c5 COLLATE BINARY ASC  NULLS LAST, (((x''))<(((NOT (rt1.c1)))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c5)) COLLATE BINARY) ORDER BY (((((rt1.c5, rt1.c4, rt1.c6))>=((rt1.c3, rt1.c0, rt1.c0)))) NOT BETWEEN ((((rt1.c4, rt1.c0))<=(('EWW⇖', rt1.c1)))) AND (((((rt1.c0)OR(rt1.c5)))OR(NULL)))), ((CAST(rt1.c5 AS TEXT))IS NOT((NOT (rt1.c0))));
SELECT * FROM rt1 WHERE (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c5)) COLLATE BINARY) ORDER BY rt1.c5 COLLATE BINARY ASC  NULLS LAST, (((x''))<(((NOT (rt1.c1)))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c5)) COLLATE BINARY) ORDER BY (((((rt1.c5, rt1.c4, rt1.c6))>=((rt1.c3, rt1.c0, rt1.c0)))) NOT BETWEEN ((((rt1.c4, rt1.c0))<=(('EWW⇖', rt1.c1)))) AND (((((rt1.c0)OR(rt1.c5)))OR(NULL)))), ((CAST(rt1.c5 AS TEXT))IS NOT((NOT (rt1.c0))));
SELECT COUNT(*) FROM rt1 WHERE ((((+ (rt1.c0)))<(CASE WHEN rt1.c5 THEN rt1.c3 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((+ (rt1.c0)))<(CASE WHEN rt1.c5 THEN rt1.c3 END)))AND(((((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c3)))AND('689046050'))) NOT BETWEEN (((((rt1.c5)AND(rt1.c2)))AND(rt1.c6))) AND (((rt1.c3) NOT NULL)))))) ORDER BY (((((((rt1.c4 IN ()))AND('{}')))OR(rt1.c2 COLLATE BINARY)))AND(CAST(rt1.c4 AS INTEGER))), CAST(rt1.c1 AS REAL) COLLATE NOCASE  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (CHAR(0.7020918382079648, (t0.c0 IN (t0.c1, t0.c3)), NULL)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c2 END) NOT BETWEEN (((t0.c2) BETWEEN (t0.c3) AND (t0.c0))) AND (2.025863801E9))  NULLS LAST, '290338281', t0.c4 ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CHAR(0.7020918382079648, (t0.c0 IN (t0.c1, t0.c3)), NULL))AND((((t0.c3)) BETWEEN ((((t0.c2)>=(t0.c1)))) AND ((CAST(t0.c3 AS NUMERIC))))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c2 END) NOT BETWEEN (((t0.c2) BETWEEN (t0.c3) AND (t0.c0))) AND (2.025863801E9))  NULLS LAST, '290338281', t0.c4 ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CHAR(0.7020918382079648, (t0.c0 IN (t0.c1, t0.c3)), NULL)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c2 END) NOT BETWEEN (((t0.c2) BETWEEN (t0.c3) AND (t0.c0))) AND (2.025863801E9))  NULLS LAST, '290338281', t0.c4 ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CHAR(0.7020918382079648, (t0.c0 IN (t0.c1, t0.c3)), NULL))AND((((t0.c3)) BETWEEN ((((t0.c2)>=(t0.c1)))) AND ((CAST(t0.c3 AS NUMERIC))))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c2 END) NOT BETWEEN (((t0.c2) BETWEEN (t0.c3) AND (t0.c0))) AND (2.025863801E9))  NULLS LAST, '290338281', t0.c4 ASC  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c6 IN (rt1.c5))) IS TRUE)) ORDER BY ((((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c4))) IS FALSE) ASC, CASE WHEN rt1.c1 COLLATE NOCASE THEN (((rt1.c2))>=((rt1.c2))) END DESC, CASE WHEN rt1.c1 THEN (((('0.6942555208694464')OR(rt1.c3)))OR(rt1.c6)) WHEN (((rt1.c1, rt1.c4, rt1.c1)) BETWEEN ((rt1.c6, rt1.c0, rt1.c2)) AND ((rt1.c6, rt1.c2, x'00'))) THEN 0.5711929418547179 WHEN CAST(x'31' AS INTEGER) THEN ((rt1.c4)/(rt1.c5)) END  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((((rt1.c6 IN (rt1.c5))) IS TRUE))AND(load_extension(rt1.c2, ((rt1.c1) ISNULL))))) ORDER BY ((((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c4))) IS FALSE) ASC, CASE WHEN rt1.c1 COLLATE NOCASE THEN (((rt1.c2))>=((rt1.c2))) END DESC, CASE WHEN rt1.c1 THEN (((('0.6942555208694464')OR(rt1.c3)))OR(rt1.c6)) WHEN (((rt1.c1, rt1.c4, rt1.c1)) BETWEEN ((rt1.c6, rt1.c0, rt1.c2)) AND ((rt1.c6, rt1.c2, x'00'))) THEN 0.5711929418547179 WHEN CAST(x'31' AS INTEGER) THEN ((rt1.c4)/(rt1.c5)) END  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL * FROM rt1 WHERE (HEX(DISTINCT (((rt1.c5, rt1.c4, rt1.c1))<((rt1.c1, rt1.c3, NULL))))) ORDER BY ((((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c4))) IS FALSE) ASC, CASE WHEN rt1.c1 COLLATE NOCASE THEN (((rt1.c2))>=((rt1.c2))) END DESC, CASE WHEN rt1.c1 THEN (((('0.6942555208694464')OR(rt1.c3)))OR(rt1.c6)) WHEN (((rt1.c1, rt1.c4, rt1.c1)) BETWEEN ((rt1.c6, rt1.c0, rt1.c2)) AND ((rt1.c6, rt1.c2, x'00'))) THEN 0.5711929418547179 WHEN CAST(x'31' AS INTEGER) THEN ((rt1.c4)/(rt1.c5)) END  NULLS FIRST LIMIT 0X1;
SELECT * FROM rt1 WHERE ((((rt1.c6 IN (rt1.c5))) IS TRUE)) ORDER BY ((((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c4))) IS FALSE) ASC, CASE WHEN rt1.c1 COLLATE NOCASE THEN (((rt1.c2))>=((rt1.c2))) END DESC, CASE WHEN rt1.c1 THEN (((('0.6942555208694464')OR(rt1.c3)))OR(rt1.c6)) WHEN (((rt1.c1, rt1.c4, rt1.c1)) BETWEEN ((rt1.c6, rt1.c0, rt1.c2)) AND ((rt1.c6, rt1.c2, x'00'))) THEN 0.5711929418547179 WHEN CAST(x'31' AS INTEGER) THEN ((rt1.c4)/(rt1.c5)) END  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((((rt1.c6 IN (rt1.c5))) IS TRUE))AND(load_extension(rt1.c2, ((rt1.c1) ISNULL))))) ORDER BY ((((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c4))) IS FALSE) ASC, CASE WHEN rt1.c1 COLLATE NOCASE THEN (((rt1.c2))>=((rt1.c2))) END DESC, CASE WHEN rt1.c1 THEN (((('0.6942555208694464')OR(rt1.c3)))OR(rt1.c6)) WHEN (((rt1.c1, rt1.c4, rt1.c1)) BETWEEN ((rt1.c6, rt1.c0, rt1.c2)) AND ((rt1.c6, rt1.c2, x'00'))) THEN 0.5711929418547179 WHEN CAST(x'31' AS INTEGER) THEN ((rt1.c4)/(rt1.c5)) END  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL * FROM rt1 WHERE (HEX(DISTINCT (((rt1.c5, rt1.c4, rt1.c1))<((rt1.c1, rt1.c3, NULL))))) ORDER BY ((((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c4))) IS FALSE) ASC, CASE WHEN rt1.c1 COLLATE NOCASE THEN (((rt1.c2))>=((rt1.c2))) END DESC, CASE WHEN rt1.c1 THEN (((('0.6942555208694464')OR(rt1.c3)))OR(rt1.c6)) WHEN (((rt1.c1, rt1.c4, rt1.c1)) BETWEEN ((rt1.c6, rt1.c0, rt1.c2)) AND ((rt1.c6, rt1.c2, x'00'))) THEN 0.5711929418547179 WHEN CAST(x'31' AS INTEGER) THEN ((rt1.c4)/(rt1.c5)) END  NULLS FIRST LIMIT 0X1;
SELECT ALL MAX(rt1.c6) FROM rt1 WHERE (((rt1.c6 COLLATE RTRIM)<(((rt1.c5)<=(rt1.c1)))));
SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE (((rt1.c6 COLLATE RTRIM)<(((rt1.c5)=(rt1.c1))))) ORDER BY ((((((x'8a')OR('^Al')))AND(((((((rt1.c4)OR(rt1.c4)))AND(rt1.c1)))AND(rt1.c2)))))OR(((rt1.c6) BETWEEN (rt1.c6) AND (rt1.c4)))) DESC, (((NOT (rt1.c2))) NOT NULL) DESC  NULLS FIRST, 0.1970522709562893, CASE rt1.c4  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c5 END COLLATE RTRIM  NULLS LAST, ((((((CAST(rt1.c4 AS TEXT))AND(rt1.c1)))AND(CASE rt1.c6  WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c1 THEN -1835852028 ELSE rt1.c1 END)))AND((~ (rt1.c1)))) ASC LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE (CASE rt1.c3  WHEN (NOT (rt1.c4)) THEN (+ (rt1.c6)) END) ORDER BY ((((((x'8a')OR('^Al')))AND(((((((rt1.c4)OR(rt1.c4)))AND(rt1.c1)))AND(rt1.c2)))))OR(((rt1.c6) BETWEEN (rt1.c6) AND (rt1.c4)))) DESC, (((NOT (rt1.c2))) NOT NULL) DESC  NULLS FIRST, 0.1970522709562893, CASE rt1.c4  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c5 END COLLATE RTRIM  NULLS LAST, ((((((CAST(rt1.c4 AS TEXT))AND(rt1.c1)))AND(CASE rt1.c6  WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c1 THEN 0xffffffff92931f04 ELSE rt1.c1 END)))AND((~ (rt1.c1)))) ASC LIMIT 0X0;
SELECT * FROM rt1 WHERE ((((~ (rt1.c1)))==(CAST(NULL AS REAL)))) ORDER BY ((((rt1.c4) NOT BETWEEN (x'613292') AND (rt1.c0)))LIKE(''))  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE ((((((~ (rt1.c1)))=(CAST(NULL AS REAL))))AND(((~ (rt1.c0)) IN ())))) ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN ((rt1.c5)>(rt1.c6)) WHEN ((((((rt1.c4)AND(rt1.c6)))OR(rt1.c4)))AND(rt1.c6)) THEN ((x'') ISNULL) WHEN ((rt1.c0)IS(rt1.c4)) THEN ('G~孥￿L^' IN (rt1.c0)) END DESC INTERSECT SELECT DISTINCT * FROM rt1 WHERE (rt1.c6) ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN ((rt1.c5)>(rt1.c6)) WHEN ((((((rt1.c4)AND(rt1.c6)))OR(rt1.c4)))AND(rt1.c6)) THEN ((x'') ISNULL) WHEN ((rt1.c0)IS(rt1.c4)) THEN ('G~孥￿L^' IN (rt1.c0)) END DESC;
SELECT * FROM rt1 WHERE ((((~ (rt1.c1)))==(CAST(NULL AS REAL)))) ORDER BY ((((rt1.c4) NOT BETWEEN (x'613292') AND (rt1.c0)))LIKE(''))  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE ((((((~ (rt1.c1)))=(CAST(NULL AS REAL))))AND(((~ (rt1.c0)) IN ())))) ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN ((rt1.c5)>(rt1.c6)) WHEN ((((((rt1.c4)AND(rt1.c6)))OR(rt1.c4)))AND(rt1.c6)) THEN ((x'') ISNULL) WHEN ((rt1.c0)IS(rt1.c4)) THEN ('G~孥￿L^' IN (rt1.c0)) END DESC INTERSECT SELECT DISTINCT * FROM rt1 WHERE (rt1.c6) ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN ((rt1.c5)>(rt1.c6)) WHEN ((((((rt1.c4)AND(rt1.c6)))OR(rt1.c4)))AND(rt1.c6)) THEN ((x'') ISNULL) WHEN ((rt1.c0)IS(rt1.c4)) THEN ('G~孥￿L^' IN (rt1.c0)) END DESC;
SELECT MIN(t0.c3) FROM t0 WHERE (x'749e');
SELECT DISTINCT MIN(t0.c3) FROM t0 WHERE (x'749e') ORDER BY CASE ((t0.c2)-(x''))  WHEN (t0.c3 IN (t0.c4)) THEN CAST(t0.c4 AS REAL) WHEN (((t0.c4, t0.c4))<>((t0.c3, t0.c0))) THEN t0.c4 WHEN ((((((((((t0.c3)OR(t0.c1)))OR(t0.c2)))OR(t0.c3)))AND(t0.c2)))AND(t0.c0)) THEN t0.c1 END  NULLS FIRST, ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN '1067800720' WHEN t0.c3 THEN 0.4875802708536756 ELSE t0.c4 END) NOT BETWEEN (CAST('1534557988' AS BLOB)) AND ('p3f*')) LIMIT 0X1;
SELECT ALL MAX(rt1.c2) FROM rt1 WHERE ((((((rt1.c2, rt1.c5))<((rt1.c4, rt1.c4))))IS(((((((rt1.c1)OR('')))OR(rt1.c5)))AND(rt1.c4)))));
SELECT MAX(rt1.c2) FROM rt1 WHERE ((((((((rt1.c2, rt1.c5))<((rt1.c4, rt1.c4))))IS(((((((rt1.c1)OR('')))OR(rt1.c5)))AND(rt1.c4)))))AND(((x'') BETWEEN ((NOT (rt1.c2))) AND (((rt1.c0) IS TRUE)))))) LIMIT 0X1 INTERSECT SELECT MAX(rt1.c2) FROM rt1 NOT INDEXED WHERE (((((((((((((((rt1.c1)||(rt1.c3)))OR((+ (rt1.c5)))))AND(CAST(rt1.c5 AS REAL))))AND(x'a0')))AND(((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c4)))))OR(CASE rt1.c4  WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c2 END)))OR((+ (rt1.c4))))) LIMIT 0x1;
SELECT ALL * FROM rt1, t0 WHERE ((rt1.c2 IN (CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c5 THEN t0.c0 END)));
SELECT DISTINCT * FROM rt1, t0 WHERE ((rt1.c2 IN (CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c5 THEN t0.c0 END))) ORDER BY ((t0.c3 COLLATE NOCASE) IS TRUE) ASC  NULLS LAST, CASE ((rt1.c4)==(rt1.c6))  WHEN ((rt1.c3) BETWEEN (NULL) AND (rt1.c1)) THEN ((rt1.c0) NOT NULL) END, t0.c2, CAST(CAST(rt1.c4 AS REAL) AS NUMERIC) DESC LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE ((rt1.c2 IN (CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c5 THEN t0.c0 END)));
SELECT DISTINCT * FROM rt1, t0 WHERE ((rt1.c2 IN (CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c5 THEN t0.c0 END))) ORDER BY ((t0.c3 COLLATE NOCASE) IS TRUE) ASC  NULLS LAST, CASE ((rt1.c4)==(rt1.c6))  WHEN ((rt1.c3) BETWEEN (NULL) AND (rt1.c1)) THEN ((rt1.c0) NOT NULL) END, t0.c2, CAST(CAST(rt1.c4 AS REAL) AS NUMERIC) DESC LIMIT 1;
SELECT MAX(rt1.c2) FROM rt1, t0 WHERE (((rt1.c3)LIKE(((((rt1.c5)AND(rt1.c6)))AND(rt1.c0))))) ORDER BY (((((t0.c1)) BETWEEN ((rt1.c1)) AND ((NULL)))) NOT BETWEEN (CAST(rt1.c4 AS REAL)) AND (t0.c4 COLLATE RTRIM));
SELECT ALL MAX(rt1.c2) FROM rt1, t0 WHERE (((((rt1.c3)LIKE(((((rt1.c5)AND(rt1.c6)))AND(rt1.c0)))))AND(((((NULL)AND(((t0.c3) IS FALSE))))AND((((t0.c0, t0.c0))!=((t0.c2, rt1.c2)))))))) ORDER BY (((((t0.c1)) BETWEEN ((rt1.c1)) AND ((NULL)))) NOT BETWEEN (CAST(rt1.c4 AS REAL)) AND (t0.c4 COLLATE RTRIM)) LIMIT 0;
SELECT * FROM t0 WHERE (((CAST(t0.c1 AS REAL)) BETWEEN (json_valid(t0.c1)) AND ((~ (t0.c4)))));
SELECT * FROM t0 WHERE (((CAST(t0.c1 AS REAL)) BETWEEN (json_valid(t0.c1)) AND ((~ (t0.c4)))));
SELECT * FROM t0 WHERE (((CAST(t0.c1 AS REAL)) BETWEEN (json_valid(t0.c1)) AND ((~ (t0.c4)))));
SELECT * FROM t0 WHERE (((CAST(t0.c1 AS REAL)) BETWEEN (json_valid(t0.c1)) AND ((~ (t0.c4)))));
SELECT MIN(rt1.c0) FROM rt1, t0 WHERE (CAST(((('	W_R', rt1.c0)) NOT BETWEEN ((t0.c2, t0.c1)) AND ((rt1.c0, NULL))) AS TEXT)) ORDER BY CAST(0.6472113939678982 AS TEXT);
SELECT MIN(rt1.c0) FROM rt1, t0 WHERE (((CAST(((('	W_R', rt1.c0)) NOT BETWEEN ((t0.c2, t0.c1)) AND ((rt1.c0, NULL))) AS TEXT))AND(rt1.c0))) ORDER BY ((((t0.c0)OR(t0.c4)))>(((rt1.c3)=(rt1.c0)))), ((('752768255', t0.c0))==((t0.c3, rt1.c4))) COLLATE RTRIM ASC  NULLS LAST, (- (LOWER(DISTINCT rt1.c5))) DESC;
SELECT * FROM t0 WHERE ((- (((((((((t0.c0)OR(t0.c3)))OR(t0.c1)))OR(t0.c4)))AND(t0.c2)))));
SELECT DISTINCT * FROM t0 WHERE ((- (((((((((t0.c0)OR(t0.c3)))OR(t0.c1)))OR(t0.c4)))AND(t0.c2)))));
SELECT * FROM t0 WHERE ((- (((((((((t0.c0)OR(t0.c3)))OR(t0.c1)))OR(t0.c4)))AND(t0.c2)))));
SELECT DISTINCT * FROM t0 WHERE ((- (((((((((t0.c0)OR(t0.c3)))OR(t0.c1)))OR(t0.c4)))AND(t0.c2)))));
SELECT ALL * FROM rt1, t0 WHERE (((x'ab85') ISNULL));
SELECT DISTINCT * FROM rt1, t0 WHERE (((x'ab85') ISNULL)) LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (((x'ab85') ISNULL));
SELECT DISTINCT * FROM rt1, t0 WHERE (((x'ab85') ISNULL)) LIMIT 0;
SELECT COUNT(*) FROM t0, rt1 WHERE (((t0.c3 COLLATE NOCASE) ISNULL)) ORDER BY NULL ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((((t0.c3 COLLATE NOCASE) ISNULL))AND((((t0.c2 IN (t0.c4))) ISNULL)))) ORDER BY NULL ASC  NULLS FIRST LIMIT 2;
SELECT ALL MAX(t0.c1) FROM t0 WHERE ((t0.c1 COLLATE BINARY IN ((((t0.c0))=((t0.c3))), CASE t0.c0  WHEN t0.c0 THEN t0.c4 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c4 END)));
SELECT DISTINCT MAX(t0.c1) FROM t0 WHERE ((((t0.c1 COLLATE BINARY IN ((((t0.c0))==((t0.c3))), CASE t0.c0  WHEN t0.c0 THEN t0.c4 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c4 END)))AND((~ (((t0.c4) IS TRUE))))));
SELECT ALL * FROM t0 WHERE (IFNULL(DISTINCT t0.c0, t0.c4) COLLATE RTRIM) ORDER BY '', NULL;
SELECT DISTINCT * FROM t0 WHERE (IFNULL(DISTINCT t0.c0, t0.c4) COLLATE RTRIM) ORDER BY '', NULL LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((+ (t0.c3))) ORDER BY '', NULL LIMIT 0X2;
SELECT ALL * FROM t0 WHERE (IFNULL(DISTINCT t0.c0, t0.c4) COLLATE RTRIM) ORDER BY '', NULL;
SELECT DISTINCT * FROM t0 WHERE (IFNULL(DISTINCT t0.c0, t0.c4) COLLATE RTRIM) ORDER BY '', NULL LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((+ (t0.c3))) ORDER BY '', NULL LIMIT 0X2;
SELECT ALL * FROM t0, rt1 WHERE (TRIM((((t0.c4))<=((rt1.c5)))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((TRIM((((t0.c4))<((rt1.c5)))))AND((((((rt1.c3) BETWEEN (rt1.c6) AND (rt1.c1)), NULL, CASE rt1.c6  WHEN t0.c1 THEN rt1.c0 WHEN NULL THEN t0.c1 WHEN rt1.c5 THEN rt1.c1 WHEN NULL THEN rt1.c3 WHEN rt1.c6 THEN t0.c4 ELSE t0.c3 END, ((rt1.c1)=(rt1.c1))))<>((('1216118225' IN ()), rt1.c5 COLLATE RTRIM, ((t0.c4) NOT BETWEEN (rt1.c3) AND (rt1.c4)), rt1.c3)))))) LIMIT 0x1;
SELECT ALL * FROM t0, rt1 WHERE (TRIM((((t0.c4))<=((rt1.c5)))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((TRIM((((t0.c4))<((rt1.c5)))))AND((((((rt1.c3) BETWEEN (rt1.c6) AND (rt1.c1)), NULL, CASE rt1.c6  WHEN t0.c1 THEN rt1.c0 WHEN NULL THEN t0.c1 WHEN rt1.c5 THEN rt1.c1 WHEN NULL THEN rt1.c3 WHEN rt1.c6 THEN t0.c4 ELSE t0.c3 END, ((rt1.c1)=(rt1.c1))))<>((('1216118225' IN ()), rt1.c5 COLLATE RTRIM, ((t0.c4) NOT BETWEEN (rt1.c3) AND (rt1.c4)), rt1.c3)))))) LIMIT 0x1;
SELECT MAX(rt1.c1) FROM rt1, t0 WHERE ((- ((((t0.c0))>=((rt1.c0))))));
SELECT DISTINCT MAX(rt1.c1) FROM rt1, t0 WHERE ((((- ((((t0.c0))==((rt1.c0))))))AND((((NULL, CAST(NULL AS NUMERIC), ((t0.c1)&(rt1.c0))))<=((((rt1.c3)GLOB(t0.c2)), ((((rt1.c5)AND(rt1.c1)))AND(rt1.c5)), json_quote(t0.c0))))))) INTERSECT SELECT DISTINCT MAX(rt1.c1) FROM rt1, t0 WHERE (CASE WHEN ((t0.c4)*(rt1.c6)) THEN ((t0.c1) NOT NULL) WHEN ((rt1.c1)<>(rt1.c6)) THEN SQLITE_VERSION() WHEN ((rt1.c5) IS TRUE) THEN TYPEOF(NULL) ELSE ((-547373890)IS NOT(t0.c2)) END);
SELECT ALL * FROM rt1 WHERE ((- (rt1.c6)) COLLATE RTRIM) ORDER BY rt1.c0  NULLS FIRST, CAST(rt1.c5 COLLATE NOCASE AS INTEGER);
SELECT * FROM rt1 WHERE ((((- (rt1.c6)) COLLATE RTRIM)AND(x''))) ORDER BY (((rt1.c6 IN ()))>=(rt1.c0 COLLATE NOCASE)) INTERSECT SELECT * FROM rt1 WHERE (CAST(rt1.c5 AS REAL)) ORDER BY (((rt1.c6 IN ()))>=(rt1.c0 COLLATE NOCASE));
SELECT ALL * FROM rt1 WHERE ((- (rt1.c6)) COLLATE RTRIM) ORDER BY rt1.c0  NULLS FIRST, CAST(rt1.c5 COLLATE NOCASE AS INTEGER);
SELECT * FROM rt1 WHERE ((((- (rt1.c6)) COLLATE RTRIM)AND(x''))) ORDER BY (((rt1.c6 IN ()))>=(rt1.c0 COLLATE NOCASE)) INTERSECT SELECT * FROM rt1 WHERE (CAST(rt1.c5 AS REAL)) ORDER BY (((rt1.c6 IN ()))>=(rt1.c0 COLLATE NOCASE));
SELECT * FROM rt1, t0 WHERE ('-1246367183');
SELECT DISTINCT * FROM rt1, t0 WHERE ((('-1246367183')AND((((((rt1.c5)OR(rt1.c0)))OR(rt1.c2)) IN ())))) ORDER BY ((((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c2)))<(((rt1.c6) IS TRUE))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((((((((t0.c2)AND(rt1.c6)))AND(t0.c3)))AND(rt1.c6)))AND(t0.c4)))OR(t0.c3)))OR(((rt1.c0)GLOB(t0.c3)))))OR(((((rt1.c4)OR(0.5278124104482238)))AND(rt1.c3))))) ORDER BY ((((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c2)))<(((rt1.c6) IS TRUE))) ASC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ('-1246367183');
SELECT DISTINCT * FROM rt1, t0 WHERE ((('-1246367183')AND((((((rt1.c5)OR(rt1.c0)))OR(rt1.c2)) IN ())))) ORDER BY ((((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c2)))<(((rt1.c6) IS TRUE))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((((((((t0.c2)AND(rt1.c6)))AND(t0.c3)))AND(rt1.c6)))AND(t0.c4)))OR(t0.c3)))OR(((rt1.c0)GLOB(t0.c3)))))OR(((((rt1.c4)OR(0.5278124104482238)))AND(rt1.c3))))) ORDER BY ((((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c2)))<(((rt1.c6) IS TRUE))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((- (t0.c1))) BETWEEN (((t0.c3)<<(t0.c0))) AND (((t0.c2) BETWEEN (t0.c0) AND (t0.c4)))));
SELECT ALL * FROM t0 WHERE ((((((- (t0.c1))) BETWEEN (((t0.c3)<<(t0.c0))) AND (((t0.c2) BETWEEN (t0.c0) AND (t0.c4)))))AND(((NOT (t0.c2)) IN ())))) LIMIT 0x0;
SELECT * FROM t0 WHERE ((((- (t0.c1))) BETWEEN (((t0.c3)<<(t0.c0))) AND (((t0.c2) BETWEEN (t0.c0) AND (t0.c4)))));
SELECT ALL * FROM t0 WHERE ((((((- (t0.c1))) BETWEEN (((t0.c3)<<(t0.c0))) AND (((t0.c2) BETWEEN (t0.c0) AND (t0.c4)))))AND(((NOT (t0.c2)) IN ())))) LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c0)%(rt1.c1)) IN (rt1.c6 COLLATE BINARY))) ORDER BY LOWER(((t0.c2)=(rt1.c6))) DESC  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE ((((rt1.c0)%(rt1.c1)) IN (rt1.c6 COLLATE BINARY))) ORDER BY CASE LIKELY(rt1.c1)  WHEN CAST(NULL AS INTEGER) THEN CASE t0.c4  WHEN t0.c2 THEN rt1.c4 END WHEN ((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN rt1.c0 COLLATE BINARY WHEN x'a4' COLLATE RTRIM THEN (+ (rt1.c5)) END  NULLS FIRST, CAST(((t0.c3)%(rt1.c4)) AS REAL)  NULLS FIRST, (((((1941799750) IS TRUE), rt1.c2, json_quote(''), x'', ((t0.c4) BETWEEN (t0.c1) AND (rt1.c1))))<((CAST('.?P' AS BLOB), rt1.c2 COLLATE NOCASE, CAST(t0.c2 AS REAL), '', ((rt1.c0)+(t0.c1)))))  NULLS FIRST, ((NULL) NOT BETWEEN (((t0.c0)/(t0.c3))) AND (CASE WHEN rt1.c4 THEN t0.c1 END)) LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c0)%(rt1.c1)) IN (rt1.c6 COLLATE BINARY))) ORDER BY LOWER(((t0.c2)=(rt1.c6))) DESC  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE ((((rt1.c0)%(rt1.c1)) IN (rt1.c6 COLLATE BINARY))) ORDER BY CASE LIKELY(rt1.c1)  WHEN CAST(NULL AS INTEGER) THEN CASE t0.c4  WHEN t0.c2 THEN rt1.c4 END WHEN ((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN rt1.c0 COLLATE BINARY WHEN x'a4' COLLATE RTRIM THEN (+ (rt1.c5)) END  NULLS FIRST, CAST(((t0.c3)%(rt1.c4)) AS REAL)  NULLS FIRST, (((((1941799750) IS TRUE), rt1.c2, json_quote(''), x'', ((t0.c4) BETWEEN (t0.c1) AND (rt1.c1))))<((CAST('.?P' AS BLOB), rt1.c2 COLLATE NOCASE, CAST(t0.c2 AS REAL), '', ((rt1.c0)+(t0.c1)))))  NULLS FIRST, ((NULL) NOT BETWEEN (((t0.c0)/(t0.c3))) AND (CASE WHEN rt1.c4 THEN t0.c1 END)) LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE ((json_valid(rt1.c5) IN ()));
SELECT ALL * FROM rt1, t0 WHERE ((json_valid(rt1.c5) IN ())) ORDER BY t0.c2 ASC  NULLS FIRST, ((rt1.c6) BETWEEN (rt1.c5) AND (t0.c2)) COLLATE BINARY ASC LIMIT 0 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (((CAST(rt1.c5 AS REAL))&(t0.c1))) ORDER BY t0.c2 ASC  NULLS FIRST, ((rt1.c6) BETWEEN (rt1.c5) AND (t0.c2)) COLLATE BINARY ASC LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE ((json_valid(rt1.c5) IN ()));
SELECT ALL * FROM rt1, t0 WHERE ((json_valid(rt1.c5) IN ())) ORDER BY t0.c2 ASC  NULLS FIRST, ((rt1.c6) BETWEEN (rt1.c5) AND (t0.c2)) COLLATE BINARY ASC LIMIT 0 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (((CAST(rt1.c5 AS REAL))&(t0.c1))) ORDER BY t0.c2 ASC  NULLS FIRST, ((rt1.c6) BETWEEN (rt1.c5) AND (t0.c2)) COLLATE BINARY ASC LIMIT 0x0;
SELECT ALL * FROM rt1 WHERE ('1639601663' COLLATE RTRIM COLLATE BINARY);
SELECT DISTINCT * FROM rt1 WHERE ((('1639601663' COLLATE RTRIM COLLATE BINARY)AND(NULL)));
SELECT ALL * FROM rt1 WHERE ('1639601663' COLLATE RTRIM COLLATE BINARY);
SELECT DISTINCT * FROM rt1 WHERE ((('1639601663' COLLATE RTRIM COLLATE BINARY)AND(NULL)));
SELECT MIN(rt1.c2) FROM t0, rt1 WHERE (((CHAR(rt1.c4, t0.c1, rt1.c0, rt1.c5)) NOT NULL));
SELECT DISTINCT MIN(rt1.c2) FROM t0, rt1 WHERE (((CHAR(rt1.c4, t0.c1, rt1.c0, rt1.c5)) NOT NULL));
SELECT * FROM t0, rt1 WHERE (t0.c3) ORDER BY CAST(CAST(t0.c2 AS TEXT) AS BLOB) ASC  NULLS LAST, (((0xffffffffc82f592a)>(t0.c4)) IN ((NOT (rt1.c5)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE (t0.c3) ORDER BY ((((NULL COLLATE RTRIM)OR(CASE WHEN t0.c2 THEN t0.c0 WHEN rt1.c1 THEN t0.c1 ELSE rt1.c0 END)))OR(((('y', rt1.c6)) BETWEEN ((rt1.c0, t0.c3)) AND ((t0.c1, rt1.c4))))) ASC, ((((((((rt1.c6)AND(NULL)))AND(t0.c4)))AND(rt1.c1)))IS NOT(rt1.c2 COLLATE BINARY)) DESC  NULLS FIRST, json_array_length(((t0.c3)<(0X61ba55ff)), ((t0.c4) BETWEEN (t0.c0) AND (NULL)));
SELECT * FROM t0, rt1 WHERE (t0.c3) ORDER BY CAST(CAST(t0.c2 AS TEXT) AS BLOB) ASC  NULLS LAST, (((0xffffffffc82f592a)>(t0.c4)) IN ((NOT (rt1.c5)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE (t0.c3) ORDER BY ((((NULL COLLATE RTRIM)OR(CASE WHEN t0.c2 THEN t0.c0 WHEN rt1.c1 THEN t0.c1 ELSE rt1.c0 END)))OR(((('y', rt1.c6)) BETWEEN ((rt1.c0, t0.c3)) AND ((t0.c1, rt1.c4))))) ASC, ((((((((rt1.c6)AND(NULL)))AND(t0.c4)))AND(rt1.c1)))IS NOT(rt1.c2 COLLATE BINARY)) DESC  NULLS FIRST, json_array_length(((t0.c3)<(0X61ba55ff)), ((t0.c4) BETWEEN (t0.c0) AND (NULL)));
SELECT MIN(rt1.c1) FROM rt1, t0 WHERE (CASE WHEN '' THEN ((rt1.c1) NOT NULL) END) ORDER BY t0.c0 DESC  NULLS LAST, (CAST(rt1.c0 AS TEXT) IN ((NOT (rt1.c1)))), CASE json_quote(rt1.c5)  WHEN ((((((((((((rt1.c6)AND(rt1.c4)))OR(t0.c2)))AND(rt1.c3)))OR(rt1.c6)))AND(x'')))AND(rt1.c5)) THEN rt1.c3 COLLATE BINARY ELSE CASE rt1.c1  WHEN rt1.c5 THEN t0.c2 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c2 END END  NULLS LAST;
SELECT ALL MIN(rt1.c1) FROM rt1, t0 WHERE (CASE WHEN '' THEN ((rt1.c1) NOT NULL) END) ORDER BY (((1505646880))=((t0.c2)))  NULLS FIRST, (((t0.c0)+(rt1.c4)) IN ())  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL MIN(rt1.c1) FROM rt1, t0 WHERE (((CASE WHEN rt1.c1 THEN rt1.c0 WHEN t0.c2 THEN t0.c2 END)AND(0.3750574258868046))) ORDER BY (((1505646880))==((t0.c2)))  NULLS FIRST, (((t0.c0)+(rt1.c4)) IN ())  NULLS FIRST LIMIT 0X0;
SELECT * FROM t0 WHERE (-1491715523);
SELECT * FROM t0 WHERE (0xffffffffa7163a3d) INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)AND(((t0.c4)<(t0.c4)))))AND(t0.c3 COLLATE BINARY)));
SELECT * FROM t0 WHERE (-1491715523);
SELECT * FROM t0 WHERE (0xffffffffa7163a3d) INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)AND(((t0.c4)<(t0.c4)))))AND(t0.c3 COLLATE BINARY)));
SELECT * FROM rt1 WHERE (NULLIF(DISTINCT CAST(rt1.c0 AS TEXT), CASE rt1.c4  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 ELSE x'' END)) ORDER BY CAST(((rt1.c6)==(rt1.c6)) AS NUMERIC) ASC, (+ (((rt1.c4)&(rt1.c3))))  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((NULLIF(DISTINCT CAST(rt1.c0 AS TEXT), CASE rt1.c4  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 ELSE x'' END))AND(((((((((rt1.c1)AND(((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c4)))OR(rt1.c5)))OR(rt1.c1)))))OR(rt1.c3)))OR((((rt1.c4, rt1.c1, 0x286c9795))>((rt1.c2, rt1.c5, NULL))))))AND(rt1.c4))))) ORDER BY CAST(((rt1.c6)=(rt1.c6)) AS NUMERIC) ASC, (+ (((rt1.c4)&(rt1.c3))))  NULLS LAST;
SELECT * FROM rt1 WHERE (NULLIF(DISTINCT CAST(rt1.c0 AS TEXT), CASE rt1.c4  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 ELSE x'' END)) ORDER BY CAST(((rt1.c6)==(rt1.c6)) AS NUMERIC) ASC, (+ (((rt1.c4)&(rt1.c3))))  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((NULLIF(DISTINCT CAST(rt1.c0 AS TEXT), CASE rt1.c4  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 ELSE x'' END))AND(((((((((rt1.c1)AND(((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c4)))OR(rt1.c5)))OR(rt1.c1)))))OR(rt1.c3)))OR((((rt1.c4, rt1.c1, 0x286c9795))>((rt1.c2, rt1.c5, NULL))))))AND(rt1.c4))))) ORDER BY CAST(((rt1.c6)=(rt1.c6)) AS NUMERIC) ASC, (+ (((rt1.c4)&(rt1.c3))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT)) ISNULL));
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT)) ISNULL)) ORDER BY ((CASE WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c3 END)+((- (rt1.c1))))  NULLS LAST, CASE WHEN LTRIM(rt1.c2, rt1.c2) THEN ((rt1.c3) NOTNULL) WHEN 0.09259893312311485 COLLATE BINARY THEN (rt1.c6 IN ()) END, ((CAST(rt1.c0 AS REAL)) IS FALSE)  NULLS FIRST LIMIT 2;
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT)) ISNULL));
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT)) ISNULL)) ORDER BY ((CASE WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c3 END)+((- (rt1.c1))))  NULLS LAST, CASE WHEN LTRIM(rt1.c2, rt1.c2) THEN ((rt1.c3) NOTNULL) WHEN 0.09259893312311485 COLLATE BINARY THEN (rt1.c6 IN ()) END, ((CAST(rt1.c0 AS REAL)) IS FALSE)  NULLS FIRST LIMIT 2;
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) NOT NULL));
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) NOT NULL)) ORDER BY CASE WHEN COALESCE(rt1.c0, rt1.c1, rt1.c5) THEN ((rt1.c1)-(rt1.c0)) ELSE CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c0 WHEN x'9907' THEN rt1.c1 ELSE rt1.c6 END END  NULLS FIRST, (x'' IN ()) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) NOT NULL));
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) NOT NULL)) ORDER BY CASE WHEN COALESCE(rt1.c0, rt1.c1, rt1.c5) THEN ((rt1.c1)-(rt1.c0)) ELSE CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c0 WHEN x'9907' THEN rt1.c1 ELSE rt1.c6 END END  NULLS FIRST, (x'' IN ()) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c3)GLOB(t0.c1)))>(NULL))) ORDER BY (CASE WHEN rt1.c4 THEN rt1.c5 WHEN t0.c2 THEN t0.c4 ELSE rt1.c6 END IN ()), (~ ((((t0.c4))>((rt1.c1)))));
SELECT COUNT(*) FROM t0, rt1 WHERE (((((rt1.c3)GLOB(t0.c1)))>(NULL))) ORDER BY (CASE WHEN rt1.c4 THEN rt1.c5 WHEN t0.c2 THEN t0.c4 ELSE rt1.c6 END IN ()), (~ ((((t0.c4))>((rt1.c1))))) LIMIT 3;
SELECT * FROM rt1, t0 WHERE (t0.c2);
SELECT ALL * FROM rt1, t0 WHERE (t0.c2) ORDER BY '' ASC  NULLS LAST, CASE CASE WHEN t0.c2 THEN rt1.c2 END  WHEN t0.c2 THEN ABS(DISTINCT t0.c1) ELSE CAST(0.8085265641710278 AS INTEGER) END DESC INTERSECT SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c6 COLLATE RTRIM))<=((CASE WHEN rt1.c4 THEN t0.c3 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE x'73c5' END)))) ORDER BY '' ASC  NULLS LAST, CASE CASE WHEN t0.c2 THEN rt1.c2 END  WHEN t0.c2 THEN ABS(DISTINCT t0.c1) ELSE CAST(0.8085265641710278 AS INTEGER) END DESC;
SELECT * FROM rt1, t0 WHERE (t0.c2);
SELECT ALL * FROM rt1, t0 WHERE (t0.c2) ORDER BY '' ASC  NULLS LAST, CASE CASE WHEN t0.c2 THEN rt1.c2 END  WHEN t0.c2 THEN ABS(DISTINCT t0.c1) ELSE CAST(0.8085265641710278 AS INTEGER) END DESC INTERSECT SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c6 COLLATE RTRIM))<=((CASE WHEN rt1.c4 THEN t0.c3 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE x'73c5' END)))) ORDER BY '' ASC  NULLS LAST, CASE CASE WHEN t0.c2 THEN rt1.c2 END  WHEN t0.c2 THEN ABS(DISTINCT t0.c1) ELSE CAST(0.8085265641710278 AS INTEGER) END DESC;
SELECT MIN(t0.c3) FROM rt1 CROSS JOIN t0 ON (((((((rt1.c6)AND(t0.c4)))AND(rt1.c0)), ((rt1.c3)||(t0.c4)), ((((((x'')AND(t0.c0)))OR(t0.c2)))OR(rt1.c1))))=((((((((((((t0.c3)OR(rt1.c2)))AND(rt1.c2)))AND(t0.c1)))OR(0.8154612561833359)))OR(rt1.c6)), -1246367183, 0.44903403294703137))) WHERE (((rt1.c3) IS FALSE));
SELECT DISTINCT MIN(t0.c3) FROM rt1 CROSS JOIN t0 ON (((((((rt1.c6)AND(t0.c4)))AND(rt1.c0)), ((rt1.c3)||(t0.c4)), ((((((x'')AND(t0.c0)))OR(t0.c2)))OR(rt1.c1))))=((((((((((((t0.c3)OR(rt1.c2)))AND(rt1.c2)))AND(t0.c1)))OR(0.8154612561833359)))OR(rt1.c6)), 0xffffffffb5b5f231, 0.44903403294703137))) WHERE (((((rt1.c3) IS FALSE))AND((((((rt1.c6) NOT BETWEEN (t0.c3) AND (t0.c0)), (~ (t0.c2)), ((rt1.c4) NOT NULL), (rt1.c5 IN (rt1.c6))))>((CAST(rt1.c1 AS NUMERIC), ((t0.c2) BETWEEN (0.1413256879271435) AND (t0.c2)), ((t0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4)), TRIM(rt1.c1, rt1.c5))))))) ORDER BY ((NULL) NOT BETWEEN (NULLIF(DISTINCT rt1.c6, t0.c4)) AND ((NOT (t0.c1)))) INTERSECT SELECT DISTINCT MIN(t0.c3) FROM rt1 CROSS JOIN t0 ON (((((((rt1.c6)AND(t0.c4)))AND(rt1.c0)), ((rt1.c3)||(t0.c4)), ((((((x'')AND(t0.c0)))OR(t0.c2)))OR(rt1.c1))))==((((((((((((t0.c3)OR(rt1.c2)))AND(rt1.c2)))AND(t0.c1)))OR(0.8154612561833359)))OR(rt1.c6)), 0xffffffffb5b5f231, 0.44903403294703137))) WHERE (x'') ORDER BY ((NULL) NOT BETWEEN (NULLIF(DISTINCT rt1.c6, t0.c4)) AND ((NOT (t0.c1))));
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c6)-(t0.c1)));
SELECT DISTINCT * FROM rt1, t0 WHERE (((rt1.c6)-(t0.c1))) ORDER BY (((rt1.c5 IN (rt1.c6)))!=((t0.c4 IN (t0.c3, t0.c3)))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(((rt1.c1)AND(rt1.c2)) AS TEXT)) ORDER BY (((rt1.c5 IN (rt1.c6)))!=((t0.c4 IN (t0.c3, t0.c3)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c6)-(t0.c1)));
SELECT DISTINCT * FROM rt1, t0 WHERE (((rt1.c6)-(t0.c1))) ORDER BY (((rt1.c5 IN (rt1.c6)))!=((t0.c4 IN (t0.c3, t0.c3)))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(((rt1.c1)AND(rt1.c2)) AS TEXT)) ORDER BY (((rt1.c5 IN (rt1.c6)))!=((t0.c4 IN (t0.c3, t0.c3)))) DESC  NULLS LAST;
SELECT MAX(rt1.c4) FROM rt1, t0 WHERE (((((rt1.c6)|(t0.c1)))IS NOT(rt1.c6))) ORDER BY 0.8030976866974596  NULLS FIRST, (((((t0.c2) NOTNULL), (((t0.c1, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c0)) AND ((rt1.c2, rt1.c1)))))==((((t0.c4) NOT NULL), ((t0.c0)|(rt1.c0))))), CAST(CAST(x'' AS BLOB) AS REAL);
SELECT DISTINCT MAX(rt1.c4) FROM rt1, t0 WHERE (((((rt1.c6)|(t0.c1)))IS NOT(rt1.c6))) ORDER BY ((rt1.c1) IS TRUE) ASC  NULLS LAST, CAST((rt1.c0 IN ()) AS BLOB);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((- ((((rt1.c6))==((rt1.c5))))));
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((((- ((((rt1.c6))==((rt1.c5))))))AND(CAST((((-1060548345, t0.c2))=((rt1.c1, t0.c1))) AS BLOB)))) INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (rt1.c3);
SELECT ALL MIN(t0.c2) FROM rt1 CROSS JOIN t0 ON ((((rt1.c5)!=(t0.c4)))GLOB((- (rt1.c0)))) WHERE ('z');
SELECT DISTINCT MIN(t0.c2) FROM rt1 CROSS JOIN t0 ON ((((rt1.c5)<>(t0.c4)))GLOB((- (rt1.c0)))) WHERE ((('z')AND(((CASE WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c5 ELSE t0.c2 END)&(((rt1.c4)AND(rt1.c4))))))) LIMIT 0 INTERSECT SELECT DISTINCT MIN(t0.c2) FROM rt1 CROSS JOIN t0 ON ((((rt1.c5)!=(t0.c4)))GLOB((- (rt1.c0)))) WHERE ((NOT ('0.6582575926668529'))) LIMIT 0x0;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN CAST(rt1.c0 AS BLOB) THEN ((rt1.c0)OR(rt1.c2)) WHEN (~ (rt1.c2)) THEN (rt1.c5 IN (rt1.c3, rt1.c5)) ELSE (rt1.c3 IN ()) END);
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CASE WHEN CAST(rt1.c0 AS BLOB) THEN ((rt1.c0)OR(rt1.c2)) WHEN (~ (rt1.c2)) THEN (rt1.c5 IN (rt1.c3, rt1.c5)) ELSE (rt1.c3 IN ()) END) ORDER BY json_valid(rt1.c0), TYPEOF(DISTINCT ((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c6)))AND(rt1.c6)))OR(rt1.c5)))  NULLS LAST, CASE WHEN ((rt1.c5) NOTNULL) THEN CAST(rt1.c6 AS INTEGER) WHEN ((rt1.c6)GLOB(rt1.c4)) THEN (((rt1.c3, rt1.c5, rt1.c1, rt1.c3))!=((rt1.c0, rt1.c6, '', rt1.c2))) WHEN ((rt1.c3) NOTNULL) THEN LTRIM(0.22478009156053091, rt1.c6) WHEN CASE WHEN NULL THEN rt1.c0 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c5 END THEN rt1.c0 WHEN rt1.c6 COLLATE NOCASE THEN 0.7208732025697976 END ASC LIMIT 0X3;
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE ((((rt1.c0, rt1.c4)) NOT BETWEEN ((CAST(rt1.c5 AS NUMERIC), ((rt1.c5)=(rt1.c0)))) AND ((((rt1.c2) IS FALSE), ((((((rt1.c3)OR(rt1.c3)))AND(rt1.c6)))AND(rt1.c3)))))) ORDER BY JULIANDAY('90315868', rt1.c3, rt1.c0, rt1.c3, rt1.c4, rt1.c1) COLLATE RTRIM DESC  NULLS LAST, ((((((((rt1.c0)OR(rt1.c5)))AND(rt1.c6)))AND(rt1.c6)))IS(((rt1.c2)IS NOT(rt1.c0))));
SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE ((((rt1.c0, rt1.c4)) NOT BETWEEN ((CAST(rt1.c5 AS NUMERIC), ((rt1.c5)>=(rt1.c0)))) AND ((((rt1.c2) IS FALSE), ((((((rt1.c3)OR(rt1.c3)))AND(rt1.c6)))AND(rt1.c3)))))) ORDER BY (+ (((rt1.c3) IS TRUE))) DESC  NULLS FIRST, CAST('.' AS BLOB), rt1.c1 DESC LIMIT 2;
SELECT ALL MAX(rt1.c4) FROM rt1 WHERE (((((0.9138718745657523) IS TRUE)) BETWEEN (((rt1.c1)|(NULL))) AND (((rt1.c3)-(rt1.c6))))) ORDER BY (rt1.c3 IN (rt1.c2)) COLLATE NOCASE ASC, ((((rt1.c2)/(rt1.c4)))||('C
6neb-x
' COLLATE RTRIM)) ASC  NULLS LAST, IFNULL(((rt1.c1) NOTNULL), ((((rt1.c1)OR(rt1.c1)))AND(rt1.c4)));
SELECT ALL MAX(rt1.c4) FROM rt1 WHERE (((((0.9138718745657523) IS TRUE)) BETWEEN (((rt1.c1)|(NULL))) AND (((rt1.c3)-(rt1.c6))))) ORDER BY (rt1.c3 IN (rt1.c2)) COLLATE NOCASE ASC, ((((rt1.c2)/(rt1.c4)))||('C
6neb-x
' COLLATE RTRIM)) ASC  NULLS LAST, IFNULL(((rt1.c1) NOTNULL), ((((rt1.c1)OR(rt1.c1)))AND(rt1.c4))) INTERSECT SELECT ALL MAX(rt1.c4) FROM rt1 WHERE (((((rt1.c4) NOT NULL))&(((((((rt1.c5)AND(rt1.c2)))OR(rt1.c4)))OR(rt1.c6))))) ORDER BY (rt1.c3 IN (rt1.c2)) COLLATE NOCASE ASC, ((((rt1.c2)/(rt1.c4)))||('C
6neb-x
' COLLATE RTRIM)) ASC  NULLS LAST, IFNULL(((rt1.c1) NOTNULL), ((((rt1.c1)OR(rt1.c1)))AND(rt1.c4)));
SELECT ALL * FROM rt1 WHERE ((((((((~ (rt1.c3)))OR(((rt1.c4)-(rt1.c0)))))AND(CAST(rt1.c5 AS INTEGER))))AND(((rt1.c2) BETWEEN (rt1.c3) AND ('.')))));
SELECT DISTINCT * FROM rt1 WHERE ((((((((~ (rt1.c3)))OR(((rt1.c4)-(rt1.c0)))))AND(CAST(rt1.c5 AS INTEGER))))AND(((rt1.c2) BETWEEN (rt1.c3) AND ('.'))))) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1) IS FALSE));
SELECT ALL * FROM rt1 WHERE ((((((((~ (rt1.c3)))OR(((rt1.c4)-(rt1.c0)))))AND(CAST(rt1.c5 AS INTEGER))))AND(((rt1.c2) BETWEEN (rt1.c3) AND ('.')))));
SELECT DISTINCT * FROM rt1 WHERE ((((((((~ (rt1.c3)))OR(((rt1.c4)-(rt1.c0)))))AND(CAST(rt1.c5 AS INTEGER))))AND(((rt1.c2) BETWEEN (rt1.c3) AND ('.'))))) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1) IS FALSE));
SELECT * FROM t0 WHERE (' ');
SELECT ALL * FROM t0 WHERE (((' ')AND(((t0.c2)<(t0.c0)) COLLATE RTRIM))) ORDER BY ((1.191777648E9) BETWEEN (t0.c2) AND (t0.c1)) COLLATE NOCASE INTERSECT SELECT * FROM t0 WHERE ((((t0.c3, t0.c2, t0.c0)) NOT BETWEEN (((+ (t0.c4)), (t0.c1 IN (t0.c1)), CAST(t0.c0 AS INTEGER))) AND ((CASE WHEN t0.c2 THEN t0.c3 END, (t0.c4 IN ()), (((t0.c3, t0.c1)) NOT BETWEEN ((t0.c3, t0.c3)) AND ((t0.c4, t0.c3))))))) ORDER BY ((1.191777648E9) BETWEEN (t0.c2) AND (t0.c1)) COLLATE NOCASE;
SELECT * FROM t0 WHERE (' ');
SELECT ALL * FROM t0 WHERE (((' ')AND(((t0.c2)<(t0.c0)) COLLATE RTRIM))) ORDER BY ((1.191777648E9) BETWEEN (t0.c2) AND (t0.c1)) COLLATE NOCASE INTERSECT SELECT * FROM t0 WHERE ((((t0.c3, t0.c2, t0.c0)) NOT BETWEEN (((+ (t0.c4)), (t0.c1 IN (t0.c1)), CAST(t0.c0 AS INTEGER))) AND ((CASE WHEN t0.c2 THEN t0.c3 END, (t0.c4 IN ()), (((t0.c3, t0.c1)) NOT BETWEEN ((t0.c3, t0.c3)) AND ((t0.c4, t0.c3))))))) ORDER BY ((1.191777648E9) BETWEEN (t0.c2) AND (t0.c1)) COLLATE NOCASE;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c0)!=(rt1.c5))) IS TRUE)) ORDER BY ((((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c3))) IS TRUE)  NULLS LAST, CASE rt1.c6  WHEN t0.c3 THEN t0.c4 WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c6 THEN t0.c4 ELSE rt1.c0 END COLLATE NOCASE;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c0)<>(rt1.c5))) IS TRUE))AND((((((rt1.c5 IN (rt1.c1)))OR(((((rt1.c1)OR(t0.c3)))OR('PIbmT')))))AND(x'0b'))))) ORDER BY CAST(((rt1.c1) ISNULL) AS BLOB) DESC, (((((rt1.c2) NOT NULL)))>((((((((rt1.c0)OR(t0.c0)))AND(rt1.c2)))AND(rt1.c6)))))  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((NULL IN (((rt1.c4) BETWEEN (t0.c3) AND (rt1.c5))))) ORDER BY CAST(((rt1.c1) ISNULL) AS BLOB) DESC, (((((rt1.c2) NOT NULL)))>((((((((rt1.c0)OR(t0.c0)))AND(rt1.c2)))AND(rt1.c6)))))  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c0)!=(rt1.c5))) IS TRUE)) ORDER BY ((((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c3))) IS TRUE)  NULLS LAST, CASE rt1.c6  WHEN t0.c3 THEN t0.c4 WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c6 THEN t0.c4 ELSE rt1.c0 END COLLATE NOCASE;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c0)<>(rt1.c5))) IS TRUE))AND((((((rt1.c5 IN (rt1.c1)))OR(((((rt1.c1)OR(t0.c3)))OR('PIbmT')))))AND(x'0b'))))) ORDER BY CAST(((rt1.c1) ISNULL) AS BLOB) DESC, (((((rt1.c2) NOT NULL)))>((((((((rt1.c0)OR(t0.c0)))AND(rt1.c2)))AND(rt1.c6)))))  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((NULL IN (((rt1.c4) BETWEEN (t0.c3) AND (rt1.c5))))) ORDER BY CAST(((rt1.c1) ISNULL) AS BLOB) DESC, (((((rt1.c2) NOT NULL)))>((((((((rt1.c0)OR(t0.c0)))AND(rt1.c2)))AND(rt1.c6)))))  NULLS LAST LIMIT 1;
SELECT MAX(t0.c1) FROM t0 WHERE ((NOT (x'b6')));
SELECT ALL MAX(t0.c1) FROM t0 WHERE ((((NOT (x'b6')))AND((((t0.c1 IN (t0.c2, t0.c0)))+(((t0.c0) BETWEEN (t0.c3) AND (t0.c4))))))) INTERSECT SELECT MAX(t0.c1) FROM t0 WHERE (((t0.c1) NOTNULL));
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON (CASE WHEN rt1.c4 THEN rt1.c3 WHEN NULL THEN rt1.c2 WHEN t0.c0 THEN t0.c4 END IN (((t0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) WHERE (((t0.c2 COLLATE BINARY)|(NULL))) ORDER BY TYPEOF((rt1.c3 IN ())) DESC;
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (CASE WHEN rt1.c4 THEN rt1.c3 WHEN NULL THEN rt1.c2 WHEN t0.c0 THEN t0.c4 END IN (((t0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) WHERE (((((t0.c2 COLLATE BINARY)|(NULL)))AND(x''))) ORDER BY (~ (((rt1.c4) NOTNULL))) ASC, ((('㾅.1')<>(rt1.c3)) IN (((((rt1.c6)AND(t0.c2)))AND(rt1.c0)), ((-904110918) NOTNULL))) DESC LIMIT 0X1;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON (CASE WHEN rt1.c4 THEN rt1.c3 WHEN NULL THEN rt1.c2 WHEN t0.c0 THEN t0.c4 END IN (((t0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) WHERE (((t0.c2 COLLATE BINARY)|(NULL))) ORDER BY TYPEOF((rt1.c3 IN ())) DESC;
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (CASE WHEN rt1.c4 THEN rt1.c3 WHEN NULL THEN rt1.c2 WHEN t0.c0 THEN t0.c4 END IN (((t0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) WHERE (((((t0.c2 COLLATE BINARY)|(NULL)))AND(x''))) ORDER BY (~ (((rt1.c4) NOTNULL))) ASC, ((('㾅.1')<>(rt1.c3)) IN (((((rt1.c6)AND(t0.c2)))AND(rt1.c0)), ((-904110918) NOTNULL))) DESC LIMIT 0X1;
SELECT MIN(t0.c4) FROM t0 WHERE (load_extension(((x'')OR(t0.c4)))) ORDER BY ((CASE t0.c0  WHEN 0.6478744741664654 THEN t0.c3 WHEN t0.c4 THEN t0.c1 WHEN t0.c4 THEN t0.c2 END) BETWEEN (((((((((((x'347e')OR(1610821244)))AND(t0.c3)))OR(t0.c2)))AND(t0.c0)))OR(t0.c4))) AND (t0.c0));
SELECT DISTINCT MIN(t0.c4) FROM t0 WHERE (((load_extension(((x'')OR(t0.c4))))AND(CAST((((t0.c2)) BETWEEN ((t0.c2)) AND ((NULL))) AS INTEGER)))) ORDER BY ((((t0.c1) BETWEEN (0.44028848735384873) AND (t0.c1)))/(CAST(t0.c0 AS BLOB))) ASC, (((((t0.c0))<=((t0.c3)))) BETWEEN (((t0.c3)||(t0.c4))) AND (CASE WHEN t0.c0 THEN t0.c4 WHEN x'61' THEN t0.c3 END)) DESC  NULLS LAST LIMIT 0;
SELECT * FROM rt1 WHERE ((+ (((((((((((rt1.c1)AND(rt1.c6)))AND(rt1.c6)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c3)))));
SELECT ALL * FROM rt1 WHERE ((((+ (((((((((((rt1.c1)AND(rt1.c6)))AND(rt1.c6)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c3)))))AND((CAST(rt1.c3 AS BLOB) IN (((((rt1.c5)OR(rt1.c1)))OR(rt1.c3))))))) INTERSECT SELECT * FROM rt1 WHERE (TRIM(DISTINCT rt1.c6 COLLATE NOCASE));
SELECT * FROM rt1 WHERE ((+ (((((((((((rt1.c1)AND(rt1.c6)))AND(rt1.c6)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c3)))));
SELECT ALL * FROM rt1 WHERE ((((+ (((((((((((rt1.c1)AND(rt1.c6)))AND(rt1.c6)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c3)))))AND((CAST(rt1.c3 AS BLOB) IN (((((rt1.c5)OR(rt1.c1)))OR(rt1.c3))))))) INTERSECT SELECT * FROM rt1 WHERE (TRIM(DISTINCT rt1.c6 COLLATE NOCASE));
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c6 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c6 COLLATE BINARY) ISNULL)) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN CASE rt1.c5  WHEN t0.c3 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c4 WHEN x'c0' THEN t0.c2 END WHEN ((t0.c3)<>(t0.c1)) THEN rt1.c0 COLLATE RTRIM WHEN ((t0.c2) BETWEEN (rt1.c6) AND (rt1.c4)) THEN rt1.c0 COLLATE BINARY ELSE ((rt1.c5)-(rt1.c5)) END);
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c6 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c6 COLLATE BINARY) ISNULL)) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN CASE rt1.c5  WHEN t0.c3 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c4 WHEN x'c0' THEN t0.c2 END WHEN ((t0.c3)<>(t0.c1)) THEN rt1.c0 COLLATE RTRIM WHEN ((t0.c2) BETWEEN (rt1.c6) AND (rt1.c4)) THEN rt1.c0 COLLATE BINARY ELSE ((rt1.c5)-(rt1.c5)) END);
SELECT * FROM rt1 WHERE (((((NOT (rt1.c1)), (('86490263') ISNULL), ((((0X61ba55ff)AND(rt1.c4)))AND(rt1.c3)), ((rt1.c3) NOT BETWEEN (rt1.c6) AND (rt1.c3)), (- (rt1.c4)), ((rt1.c1) BETWEEN (rt1.c1) AND ('-889508270')), ((rt1.c4)<=(rt1.c1))))>((rt1.c0 COLLATE NOCASE, (rt1.c3 IN ()), ((rt1.c5)GLOB(rt1.c6)), ((rt1.c0) IS FALSE), ABS(rt1.c3), (((rt1.c5, rt1.c2, rt1.c3, rt1.c6, rt1.c4)) BETWEEN ((rt1.c6, rt1.c4, rt1.c2, rt1.c5, rt1.c6)) AND ((rt1.c2, rt1.c6, rt1.c0, rt1.c5, rt1.c3))), CAST(rt1.c1 AS INTEGER))))) ORDER BY CAST(rt1.c6 AS NUMERIC) ASC, (((CAST(rt1.c5 AS BLOB)))>=(((((rt1.c2, rt1.c0, rt1.c0, rt1.c0, rt1.c5))>=((rt1.c1, rt1.c4, rt1.c0, rt1.c0, -892599123)))))) DESC, (((rt1.c3 IN ()))>=(CASE WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c3 END)) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((((NOT (rt1.c1)), (('86490263') ISNULL), ((((1639601663)AND(rt1.c4)))AND(rt1.c3)), ((rt1.c3) NOT BETWEEN (rt1.c6) AND (rt1.c3)), (- (rt1.c4)), ((rt1.c1) BETWEEN (rt1.c1) AND ('-889508270')), ((rt1.c4)<=(rt1.c1))))>((rt1.c0 COLLATE NOCASE, (rt1.c3 IN ()), ((rt1.c5)GLOB(rt1.c6)), ((rt1.c0) IS FALSE), ABS(rt1.c3), (((rt1.c5, rt1.c2, rt1.c3, rt1.c6, rt1.c4)) BETWEEN ((rt1.c6, rt1.c4, rt1.c2, rt1.c5, rt1.c6)) AND ((rt1.c2, rt1.c6, rt1.c0, rt1.c5, rt1.c3))), CAST(rt1.c1 AS INTEGER))))) ORDER BY COALESCE(((rt1.c3)LIKE(rt1.c2)), (~ (rt1.c2)), rt1.c1 COLLATE RTRIM, ((0.2459604412542481) NOT BETWEEN (rt1.c0) AND (rt1.c2)))  NULLS FIRST, ((rt1.c2) NOT NULL) COLLATE BINARY;
SELECT * FROM rt1 WHERE (((((NOT (rt1.c1)), (('86490263') ISNULL), ((((0X61ba55ff)AND(rt1.c4)))AND(rt1.c3)), ((rt1.c3) NOT BETWEEN (rt1.c6) AND (rt1.c3)), (- (rt1.c4)), ((rt1.c1) BETWEEN (rt1.c1) AND ('-889508270')), ((rt1.c4)<=(rt1.c1))))>((rt1.c0 COLLATE NOCASE, (rt1.c3 IN ()), ((rt1.c5)GLOB(rt1.c6)), ((rt1.c0) IS FALSE), ABS(rt1.c3), (((rt1.c5, rt1.c2, rt1.c3, rt1.c6, rt1.c4)) BETWEEN ((rt1.c6, rt1.c4, rt1.c2, rt1.c5, rt1.c6)) AND ((rt1.c2, rt1.c6, rt1.c0, rt1.c5, rt1.c3))), CAST(rt1.c1 AS INTEGER))))) ORDER BY CAST(rt1.c6 AS NUMERIC) ASC, (((CAST(rt1.c5 AS BLOB)))>=(((((rt1.c2, rt1.c0, rt1.c0, rt1.c0, rt1.c5))>=((rt1.c1, rt1.c4, rt1.c0, rt1.c0, -892599123)))))) DESC, (((rt1.c3 IN ()))>=(CASE WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c3 END)) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((((NOT (rt1.c1)), (('86490263') ISNULL), ((((1639601663)AND(rt1.c4)))AND(rt1.c3)), ((rt1.c3) NOT BETWEEN (rt1.c6) AND (rt1.c3)), (- (rt1.c4)), ((rt1.c1) BETWEEN (rt1.c1) AND ('-889508270')), ((rt1.c4)<=(rt1.c1))))>((rt1.c0 COLLATE NOCASE, (rt1.c3 IN ()), ((rt1.c5)GLOB(rt1.c6)), ((rt1.c0) IS FALSE), ABS(rt1.c3), (((rt1.c5, rt1.c2, rt1.c3, rt1.c6, rt1.c4)) BETWEEN ((rt1.c6, rt1.c4, rt1.c2, rt1.c5, rt1.c6)) AND ((rt1.c2, rt1.c6, rt1.c0, rt1.c5, rt1.c3))), CAST(rt1.c1 AS INTEGER))))) ORDER BY COALESCE(((rt1.c3)LIKE(rt1.c2)), (~ (rt1.c2)), rt1.c1 COLLATE RTRIM, ((0.2459604412542481) NOT BETWEEN (rt1.c0) AND (rt1.c2)))  NULLS FIRST, ((rt1.c2) NOT NULL) COLLATE BINARY;
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (LOWER(DISTINCT t0.c4))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((NOT (LOWER(DISTINCT t0.c4))))AND((((t0.c4)) BETWEEN (((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c4))))) AND ((json_extract('-1e500', 0.46539763801619694))))))) ORDER BY CAST(CAST(t0.c2 AS REAL) AS TEXT)  NULLS LAST, t0.c4 COLLATE NOCASE  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((+ (t0.c1)) IN (((t0.c2) ISNULL), ((t0.c1)&(t0.c0))))) ORDER BY CAST(CAST(t0.c2 AS REAL) AS TEXT)  NULLS LAST, t0.c4 COLLATE NOCASE  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM rt1 WHERE (((((rt1.c5)%(rt1.c5)))*(((rt1.c2)*(rt1.c0))))) ORDER BY CAST(rt1.c4 COLLATE NOCASE AS TEXT) DESC, CAST(rt1.c1 COLLATE NOCASE AS REAL) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (((((rt1.c5)%(rt1.c5)))*(((rt1.c2)*(rt1.c0))))) ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(rt1.c3 COLLATE BINARY)))OR(((rt1.c0)AND('2025863801'))))  NULLS LAST, ((rt1.c3 COLLATE BINARY)AND(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)))) INTERSECT SELECT ALL * FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c5))) IS TRUE)) ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(rt1.c3 COLLATE BINARY)))OR(((rt1.c0)AND('2025863801'))))  NULLS LAST, ((rt1.c3 COLLATE BINARY)AND(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c5)%(rt1.c5)))*(((rt1.c2)*(rt1.c0))))) ORDER BY CAST(rt1.c4 COLLATE NOCASE AS TEXT) DESC, CAST(rt1.c1 COLLATE NOCASE AS REAL) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (((((rt1.c5)%(rt1.c5)))*(((rt1.c2)*(rt1.c0))))) ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(rt1.c3 COLLATE BINARY)))OR(((rt1.c0)AND('2025863801'))))  NULLS LAST, ((rt1.c3 COLLATE BINARY)AND(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)))) INTERSECT SELECT ALL * FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c5))) IS TRUE)) ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(rt1.c3 COLLATE BINARY)))OR(((rt1.c0)AND('2025863801'))))  NULLS LAST, ((rt1.c3 COLLATE BINARY)AND(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4))));
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c4 COLLATE BINARY THEN ('0' IN (rt1.c2)) WHEN CASE WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c6 END THEN ((rt1.c5)*(rt1.c3)) ELSE CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c6 ELSE rt1.c6 END END) ORDER BY x'2ee123' COLLATE BINARY  NULLS FIRST;
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c4 COLLATE BINARY THEN ('0' IN (rt1.c2)) WHEN CASE WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c6 END THEN ((rt1.c5)*(rt1.c3)) ELSE CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c6 ELSE rt1.c6 END END)AND(((((((((rt1.c4)AND(rt1.c4)))AND(rt1.c5)))OR(rt1.c3)))LIKE(((rt1.c4) NOTNULL)))))) ORDER BY (~ (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END)) LIMIT 0x1 INTERSECT SELECT * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((CASE WHEN rt1.c4 THEN rt1.c2 END)) AND ((CAST(rt1.c6 AS NUMERIC))))) ORDER BY (~ (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END)) LIMIT 0X1;
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c4 COLLATE BINARY THEN ('0' IN (rt1.c2)) WHEN CASE WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c6 END THEN ((rt1.c5)*(rt1.c3)) ELSE CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c6 ELSE rt1.c6 END END) ORDER BY x'2ee123' COLLATE BINARY  NULLS FIRST;
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c4 COLLATE BINARY THEN ('0' IN (rt1.c2)) WHEN CASE WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c6 END THEN ((rt1.c5)*(rt1.c3)) ELSE CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c6 ELSE rt1.c6 END END)AND(((((((((rt1.c4)AND(rt1.c4)))AND(rt1.c5)))OR(rt1.c3)))LIKE(((rt1.c4) NOTNULL)))))) ORDER BY (~ (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END)) LIMIT 0x1 INTERSECT SELECT * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((CASE WHEN rt1.c4 THEN rt1.c2 END)) AND ((CAST(rt1.c6 AS NUMERIC))))) ORDER BY (~ (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END)) LIMIT 0X1;
SELECT ALL MIN(t0.c2) FROM t0 INNER JOIN rt1 ON ((0.8306732313834178) NOTNULL) WHERE (rt1.c3) ORDER BY UPPER(((rt1.c4)LIKE(rt1.c3)))  NULLS FIRST, x'1f2d' ASC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c2) FROM t0 INNER JOIN rt1 ON ((0.8306732313834178) NOTNULL) WHERE (rt1.c3) ORDER BY UPPER(((rt1.c4)LIKE(rt1.c3)))  NULLS FIRST, x'1f2d' ASC  NULLS FIRST;
SELECT MIN(rt1.c1) FROM rt1, t0 WHERE (((((rt1.c1)OR(t0.c0))) BETWEEN (((rt1.c3) IS FALSE)) AND (((((rt1.c6)AND(rt1.c2)))AND(rt1.c1))))) ORDER BY (((((t0.c1, t0.c1, rt1.c3)) BETWEEN ((t0.c2, rt1.c3, rt1.c6)) AND ((rt1.c2, rt1.c2, rt1.c3)))) NOTNULL) ASC  NULLS FIRST;
SELECT DISTINCT MIN(rt1.c1) FROM rt1, t0 WHERE (((((rt1.c1)OR(t0.c0))) BETWEEN (((rt1.c3) IS FALSE)) AND (((((rt1.c6)AND(rt1.c2)))AND(rt1.c1))))) ORDER BY ((((((t0.c1)GLOB(rt1.c0)))AND(json_object(t0.c2, rt1.c2, t0.c2))))OR(((rt1.c0) IS FALSE))) DESC LIMIT 1 INTERSECT SELECT DISTINCT MIN(rt1.c1) FROM rt1, t0 WHERE (((t0.c4)-(rt1.c5)) COLLATE BINARY) ORDER BY ((((((t0.c1)GLOB(rt1.c0)))AND(json_object(t0.c2, rt1.c2, t0.c2))))OR(((rt1.c0) IS FALSE))) DESC LIMIT 0x1;
SELECT * FROM rt1, t0 WHERE ((NOT (((rt1.c3)<=(NULL))))) ORDER BY CASE ((((t0.c4)AND(rt1.c6)))AND(t0.c2))  WHEN '-1371002898' THEN (NOT (rt1.c0)) ELSE 0.01668261956319894 END ASC, CHANGES() DESC;
SELECT ALL * FROM rt1, t0 WHERE ((((NOT (((rt1.c3)<=(NULL)))))AND(rt1.c5 COLLATE NOCASE))) ORDER BY CASE WHEN (rt1.c5 IN (rt1.c5)) THEN CASE t0.c0  WHEN '-1702435556' THEN t0.c2 ELSE -248273772 END WHEN ((rt1.c4)==(t0.c4)) THEN ((t0.c4)LIKE(rt1.c1)) ELSE (NOT (rt1.c2)) END, ((rt1.c6)GLOB(t0.c3 COLLATE NOCASE)) ASC INTERSECT SELECT * FROM rt1, t0 WHERE ((~ (t0.c4)) COLLATE RTRIM) ORDER BY CASE WHEN (rt1.c5 IN (rt1.c5)) THEN CASE t0.c0  WHEN '-1702435556' THEN t0.c2 ELSE 0Xfffffffff133a494 END WHEN ((rt1.c4)=(t0.c4)) THEN ((t0.c4)LIKE(rt1.c1)) ELSE (NOT (rt1.c2)) END, ((rt1.c6)GLOB(t0.c3 COLLATE NOCASE)) ASC;
SELECT * FROM rt1, t0 WHERE ((NOT (((rt1.c3)<=(NULL))))) ORDER BY CASE ((((t0.c4)AND(rt1.c6)))AND(t0.c2))  WHEN '-1371002898' THEN (NOT (rt1.c0)) ELSE 0.01668261956319894 END ASC, CHANGES() DESC;
SELECT ALL * FROM rt1, t0 WHERE ((((NOT (((rt1.c3)<=(NULL)))))AND(rt1.c5 COLLATE NOCASE))) ORDER BY CASE WHEN (rt1.c5 IN (rt1.c5)) THEN CASE t0.c0  WHEN '-1702435556' THEN t0.c2 ELSE -248273772 END WHEN ((rt1.c4)==(t0.c4)) THEN ((t0.c4)LIKE(rt1.c1)) ELSE (NOT (rt1.c2)) END, ((rt1.c6)GLOB(t0.c3 COLLATE NOCASE)) ASC INTERSECT SELECT * FROM rt1, t0 WHERE ((~ (t0.c4)) COLLATE RTRIM) ORDER BY CASE WHEN (rt1.c5 IN (rt1.c5)) THEN CASE t0.c0  WHEN '-1702435556' THEN t0.c2 ELSE 0Xfffffffff133a494 END WHEN ((rt1.c4)=(t0.c4)) THEN ((t0.c4)LIKE(rt1.c1)) ELSE (NOT (rt1.c2)) END, ((rt1.c6)GLOB(t0.c3 COLLATE NOCASE)) ASC;
SELECT * FROM t0 WHERE ((((CAST(t0.c2 AS BLOB), CASE t0.c0  WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c2 END))>((((t0.c4) ISNULL), ((((((t0.c2)OR(t0.c4)))OR(t0.c4)))OR(t0.c0)))))) ORDER BY ((CAST(t0.c4 AS REAL))*(CASE t0.c1  WHEN 'rTb' THEN t0.c4 END)) ASC, CASE ((x'43') ISNULL)  WHEN t0.c0 THEN LIKELY(DISTINCT t0.c2) WHEN ((t0.c2) IS FALSE) THEN (- (t0.c3)) WHEN ((t0.c3)*(t0.c1)) THEN ((t0.c2)||(t0.c3)) ELSE (((t0.c2))<=((t0.c3))) END;
SELECT ALL * FROM t0 WHERE ((((((CAST(t0.c2 AS BLOB), CASE t0.c0  WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c2 END))>((((t0.c4) ISNULL), ((((((t0.c2)OR(t0.c4)))OR(t0.c4)))OR(t0.c0))))))AND(TRIM(DISTINCT t0.c4 COLLATE RTRIM)))) ORDER BY ((CAST(t0.c4 AS REAL))*(CASE t0.c1  WHEN 'rTb' THEN t0.c4 END)) ASC, CASE ((x'43') ISNULL)  WHEN t0.c0 THEN LIKELY(DISTINCT t0.c2) WHEN ((t0.c2) IS FALSE) THEN (- (t0.c3)) WHEN ((t0.c3)*(t0.c1)) THEN ((t0.c2)||(t0.c3)) ELSE (((t0.c2))<=((t0.c3))) END LIMIT 0X4 INTERSECT SELECT * FROM t0 WHERE (((((json_valid(t0.c1))AND(CASE t0.c1  WHEN t0.c4 THEN t0.c0 WHEN t0.c3 THEN t0.c0 ELSE t0.c3 END)))OR(t0.c1))) ORDER BY ((CAST(t0.c4 AS REAL))*(CASE t0.c1  WHEN 'rTb' THEN t0.c4 END)) ASC, CASE ((x'43') ISNULL)  WHEN t0.c0 THEN LIKELY(DISTINCT t0.c2) WHEN ((t0.c2) IS FALSE) THEN (- (t0.c3)) WHEN ((t0.c3)*(t0.c1)) THEN ((t0.c2)||(t0.c3)) ELSE (((t0.c2))<=((t0.c3))) END LIMIT 0X4;
SELECT * FROM t0 WHERE ((((CAST(t0.c2 AS BLOB), CASE t0.c0  WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c2 END))>((((t0.c4) ISNULL), ((((((t0.c2)OR(t0.c4)))OR(t0.c4)))OR(t0.c0)))))) ORDER BY ((CAST(t0.c4 AS REAL))*(CASE t0.c1  WHEN 'rTb' THEN t0.c4 END)) ASC, CASE ((x'43') ISNULL)  WHEN t0.c0 THEN LIKELY(DISTINCT t0.c2) WHEN ((t0.c2) IS FALSE) THEN (- (t0.c3)) WHEN ((t0.c3)*(t0.c1)) THEN ((t0.c2)||(t0.c3)) ELSE (((t0.c2))<=((t0.c3))) END;
SELECT ALL * FROM t0 WHERE ((((((CAST(t0.c2 AS BLOB), CASE t0.c0  WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c2 END))>((((t0.c4) ISNULL), ((((((t0.c2)OR(t0.c4)))OR(t0.c4)))OR(t0.c0))))))AND(TRIM(DISTINCT t0.c4 COLLATE RTRIM)))) ORDER BY ((CAST(t0.c4 AS REAL))*(CASE t0.c1  WHEN 'rTb' THEN t0.c4 END)) ASC, CASE ((x'43') ISNULL)  WHEN t0.c0 THEN LIKELY(DISTINCT t0.c2) WHEN ((t0.c2) IS FALSE) THEN (- (t0.c3)) WHEN ((t0.c3)*(t0.c1)) THEN ((t0.c2)||(t0.c3)) ELSE (((t0.c2))<=((t0.c3))) END LIMIT 0X4 INTERSECT SELECT * FROM t0 WHERE (((((json_valid(t0.c1))AND(CASE t0.c1  WHEN t0.c4 THEN t0.c0 WHEN t0.c3 THEN t0.c0 ELSE t0.c3 END)))OR(t0.c1))) ORDER BY ((CAST(t0.c4 AS REAL))*(CASE t0.c1  WHEN 'rTb' THEN t0.c4 END)) ASC, CASE ((x'43') ISNULL)  WHEN t0.c0 THEN LIKELY(DISTINCT t0.c2) WHEN ((t0.c2) IS FALSE) THEN (- (t0.c3)) WHEN ((t0.c3)*(t0.c1)) THEN ((t0.c2)||(t0.c3)) ELSE (((t0.c2))<=((t0.c3))) END LIMIT 0X4;
SELECT COUNT(*) FROM t0, rt1 NOT INDEXED WHERE ('.⦚0*');
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((('.⦚0*')AND(((((rt1.c3)|(rt1.c4)))!=((((t0.c2, t0.c2))<>((rt1.c0, rt1.c1)))))))) ORDER BY CASE WHEN SQLITE_VERSION() THEN ((rt1.c6) IS FALSE) WHEN (((rt1.c3)) BETWEEN ((t0.c2)) AND ((t0.c4))) THEN ((rt1.c6) BETWEEN (t0.c3) AND (rt1.c4)) WHEN ((t0.c1)IS(rt1.c1)) THEN (NOT (t0.c0)) ELSE t0.c1 COLLATE NOCASE END  NULLS FIRST, ((((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c2))) NOT NULL) DESC INTERSECT SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CASE (t0.c3 IN ())  WHEN x'cedfd1bd' COLLATE NOCASE THEN ((((((rt1.c1)AND(rt1.c1)))OR(t0.c2)))OR(NULL)) WHEN (((rt1.c4, t0.c1)) BETWEEN ((t0.c1, t0.c2)) AND ((rt1.c3, rt1.c0))) THEN ((t0.c2)IS NOT(rt1.c6)) WHEN ((((((((t0.c0)OR(t0.c4)))OR(rt1.c0)))OR(t0.c1)))OR(t0.c3)) THEN NULL ELSE 3.03395121E8 END) ORDER BY CASE WHEN SQLITE_VERSION() THEN ((rt1.c6) IS FALSE) WHEN (((rt1.c3)) BETWEEN ((t0.c2)) AND ((t0.c4))) THEN ((rt1.c6) BETWEEN (t0.c3) AND (rt1.c4)) WHEN ((t0.c1)IS(rt1.c1)) THEN (NOT (t0.c0)) ELSE t0.c1 COLLATE NOCASE END  NULLS FIRST, ((((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c2))) NOT NULL) DESC;
SELECT ALL * FROM t0 WHERE (x'c3') ORDER BY (((((((t0.c0)AND(t0.c1)))AND(t0.c4)), CAST(t0.c4 AS REAL), UPPER(t0.c4)))==((((t0.c4)OR(t0.c3)), ((((((t0.c3)AND(t0.c4)))OR(t0.c2)))AND(t0.c0)), (t0.c4 IN (t0.c1))))) ASC;
SELECT * FROM t0 WHERE (((x'c3')AND((((((t0.c0) BETWEEN (t0.c0) AND (t0.c4))))>=((((t0.c4) BETWEEN (t0.c1) AND (t0.c3)))))))) ORDER BY (((((((t0.c0)AND(t0.c1)))AND(t0.c4)), CAST(t0.c4 AS REAL), UPPER(t0.c4)))==((((t0.c4)OR(t0.c3)), ((((((t0.c3)AND(t0.c4)))OR(t0.c2)))AND(t0.c0)), (t0.c4 IN (t0.c1))))) ASC;
SELECT ALL * FROM t0 WHERE (x'c3') ORDER BY (((((((t0.c0)AND(t0.c1)))AND(t0.c4)), CAST(t0.c4 AS REAL), UPPER(t0.c4)))==((((t0.c4)OR(t0.c3)), ((((((t0.c3)AND(t0.c4)))OR(t0.c2)))AND(t0.c0)), (t0.c4 IN (t0.c1))))) ASC;
SELECT * FROM t0 WHERE (((x'c3')AND((((((t0.c0) BETWEEN (t0.c0) AND (t0.c4))))>=((((t0.c4) BETWEEN (t0.c1) AND (t0.c3)))))))) ORDER BY (((((((t0.c0)AND(t0.c1)))AND(t0.c4)), CAST(t0.c4 AS REAL), UPPER(t0.c4)))==((((t0.c4)OR(t0.c3)), ((((((t0.c3)AND(t0.c4)))OR(t0.c2)))AND(t0.c0)), (t0.c4 IN (t0.c1))))) ASC;
SELECT ALL MIN(t0.c2) FROM t0 WHERE ((- (t0.c3 COLLATE RTRIM)));
SELECT MIN(t0.c2) FROM t0 WHERE ((- (t0.c3 COLLATE RTRIM))) LIMIT 0x0;
SELECT ALL MIN(t0.c4) FROM t0, rt1 WHERE (((CASE rt1.c1  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END) NOT BETWEEN (((((((((((0.7233222966887922)AND(t0.c4)))OR(t0.c4)))AND(rt1.c6)))OR(t0.c1)))OR(rt1.c2))) AND (t0.c1 COLLATE NOCASE))) ORDER BY (((((((((('-1489572442')AND(t0.c2)))AND((- (t0.c1)))))OR(CAST(rt1.c5 AS REAL))))OR(((t0.c0)>>(rt1.c0)))))OR(((0X60a6b030) NOT NULL))), TRIM(((x'')LIKE(rt1.c6)), CAST(rt1.c2 AS NUMERIC));
SELECT DISTINCT MIN(t0.c4) FROM t0, rt1 WHERE (((((CASE rt1.c1  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END) NOT BETWEEN (((((((((((0.7233222966887922)AND(t0.c4)))OR(t0.c4)))AND(rt1.c6)))OR(t0.c1)))OR(rt1.c2))) AND (t0.c1 COLLATE NOCASE)))AND((~ (t0.c2 COLLATE NOCASE))))) ORDER BY (((((((((('-1489572442')AND(t0.c2)))AND((- (t0.c1)))))OR(CAST(rt1.c5 AS REAL))))OR(((t0.c0)>>(rt1.c0)))))OR(((1621536816) NOT NULL))), TRIM(((x'')LIKE(rt1.c6)), CAST(rt1.c2 AS NUMERIC)) LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(t0.c4) FROM t0, rt1 WHERE ((((rt1.c3 IN (t0.c4, 0.3391191091699759)))OR(((t0.c1) BETWEEN (t0.c4) AND (rt1.c0))))) ORDER BY (((((((((('-1489572442')AND(t0.c2)))AND((- (t0.c1)))))OR(CAST(rt1.c5 AS REAL))))OR(((t0.c0)>>(rt1.c0)))))OR(((1621536816) NOT NULL))), TRIM(((x'')LIKE(rt1.c6)), CAST(rt1.c2 AS NUMERIC)) LIMIT 0;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((CAST(t0.c0 AS REAL)))!=((((rt1.c3) NOT BETWEEN (rt1.c5) AND (t0.c0))))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((CAST(t0.c0 AS REAL)))<>((((rt1.c3) NOT BETWEEN (rt1.c5) AND (t0.c0)))))) ORDER BY HEX(DISTINCT ((t0.c4)<<(t0.c4))) DESC, ((rt1.c0)IS NOT(t0.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)<(t0.c3)))OR(NULL)));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((((t0.c0)<(t0.c3)))OR(NULL)))AND(((CAST(t0.c3 AS TEXT))>(((t0.c4) IS TRUE)))))) INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((t0.c4 IN ())) NOT NULL));
SELECT ALL * FROM t0, rt1 WHERE ((((NOT (t0.c3)))<(((t0.c4)OR(t0.c0)))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((NOT (t0.c3)))<(((t0.c4)OR(t0.c0))))) ORDER BY x'ce'  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c0, (((x'1dda', rt1.c2, rt1.c6, t0.c4, rt1.c4)) BETWEEN ((t0.c0, 0.9757135703793627, rt1.c3, NULL, rt1.c5)) AND ((x'', rt1.c0, rt1.c0, '', rt1.c5)))))==((NULL, CASE rt1.c4  WHEN t0.c4 THEN t0.c3 WHEN rt1.c2 THEN t0.c1 ELSE rt1.c4 END)))) ORDER BY x'ce'  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE ((((NOT (t0.c3)))<(((t0.c4)OR(t0.c0)))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((NOT (t0.c3)))<(((t0.c4)OR(t0.c0))))) ORDER BY x'ce'  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c0, (((x'1dda', rt1.c2, rt1.c6, t0.c4, rt1.c4)) BETWEEN ((t0.c0, 0.9757135703793627, rt1.c3, NULL, rt1.c5)) AND ((x'', rt1.c0, rt1.c0, '', rt1.c5)))))==((NULL, CASE rt1.c4  WHEN t0.c4 THEN t0.c3 WHEN rt1.c2 THEN t0.c1 ELSE rt1.c4 END)))) ORDER BY x'ce'  NULLS FIRST;
SELECT MIN(t0.c1) FROM rt1 NATURAL JOIN t0 WHERE ((((t0.c1, rt1.c0)) NOT BETWEEN (((((t0.c3))==((t0.c0))), ((((((((rt1.c0)AND(rt1.c6)))AND(t0.c2)))AND(t0.c4)))OR(rt1.c5)))) AND (((- (rt1.c2)), (+ (rt1.c4))))));
SELECT ALL MIN(t0.c1) FROM rt1 NATURAL JOIN t0 WHERE ((((t0.c1, rt1.c0)) NOT BETWEEN (((((t0.c3))==((t0.c0))), ((((((((rt1.c0)AND(rt1.c6)))AND(t0.c2)))AND(t0.c4)))OR(rt1.c5)))) AND (((- (rt1.c2)), (+ (rt1.c4)))))) ORDER BY LOWER(((((rt1.c2)AND(rt1.c3)))OR(rt1.c6))) ASC  NULLS FIRST, 3.5009463E7 ASC, (((t0.c0)OR(x'65')) IN ()) INTERSECT SELECT ALL MIN(t0.c1) FROM rt1 NATURAL JOIN t0 WHERE (((0.03447590830269931) NOT NULL)) ORDER BY LOWER(((((rt1.c2)AND(rt1.c3)))OR(rt1.c6))) ASC  NULLS FIRST, 3.5009463E7 ASC, (((t0.c0)OR(x'65')) IN ());
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (((rt1.c4) NOT NULL) COLLATE NOCASE);
SELECT DISTINCT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (((rt1.c4) NOT NULL) COLLATE NOCASE) ORDER BY (~ ((rt1.c3 IN (rt1.c3, rt1.c5)))), (((~ (rt1.c2)))<<(((t0.c4)>=(rt1.c5)))) ASC LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c4)<=(t0.c3))) BETWEEN (0.7953435743797517) AND ((t0.c1 IN (t0.c3, rt1.c1, rt1.c4))))) ORDER BY (~ ((rt1.c3 IN (rt1.c3, rt1.c5)))), (((~ (rt1.c2)))<<(((t0.c4)>=(rt1.c5)))) ASC LIMIT 0x1;
SELECT * FROM t0, rt1 WHERE (CAST((rt1.c4 IN ()) AS BLOB));
SELECT * FROM t0, rt1 WHERE (((CAST((rt1.c4 IN ()) AS BLOB))AND(INSTR(NULL, rt1.c0) COLLATE RTRIM)));
SELECT * FROM t0, rt1 WHERE (CAST((rt1.c4 IN ()) AS BLOB));
SELECT * FROM t0, rt1 WHERE (((CAST((rt1.c4 IN ()) AS BLOB))AND(INSTR(NULL, rt1.c0) COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c5) NOT BETWEEN ('-461205712') AND (rt1.c6))) NOT BETWEEN ((+ (rt1.c3))) AND (((rt1.c6) ISNULL)))) ORDER BY CAST(((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c5)) AS TEXT);
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((((rt1.c5) NOT BETWEEN ('-461205712') AND (rt1.c6))) NOT BETWEEN ((+ (rt1.c3))) AND (((rt1.c6) ISNULL))))AND(((((rt1.c6) BETWEEN (rt1.c6) AND (rt1.c0)))>(rt1.c4))))) ORDER BY ((HEX(x'')) NOT BETWEEN (rt1.c0) AND ((rt1.c1 IN (rt1.c1)))) LIMIT 0x6 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c6 AS NUMERIC)) NOT NULL)) ORDER BY ((HEX(x'')) NOT BETWEEN (rt1.c0) AND ((rt1.c1 IN (rt1.c1)))) LIMIT 6;
SELECT * FROM rt1, t0 WHERE (((rt1.c5 COLLATE NOCASE)<<(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c5)))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((rt1.c5 COLLATE NOCASE)<<(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c5))))) ORDER BY SQLITE_COMPILEOPTION_USED(((rt1.c6) BETWEEN (t0.c2) AND (rt1.c2))) DESC  NULLS FIRST LIMIT 0X4;
SELECT * FROM rt1, t0 WHERE (((rt1.c5 COLLATE NOCASE)<<(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c5)))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((rt1.c5 COLLATE NOCASE)<<(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c5))))) ORDER BY SQLITE_COMPILEOPTION_USED(((rt1.c6) BETWEEN (t0.c2) AND (rt1.c2))) DESC  NULLS FIRST LIMIT 0X4;
SELECT ALL * FROM rt1 WHERE (0x458aecba);
SELECT DISTINCT * FROM rt1 WHERE (0x458aecba) LIMIT 5;
SELECT ALL * FROM rt1 WHERE (0x458aecba);
SELECT DISTINCT * FROM rt1 WHERE (0x458aecba) LIMIT 5;
SELECT MIN(t0.c2) FROM t0, rt1 WHERE (TYPEOF(DISTINCT t0.c2 COLLATE BINARY)) ORDER BY ((((rt1.c2 COLLATE BINARY)OR(((rt1.c1) NOT BETWEEN ('a''᧑%U') AND (rt1.c3)))))OR((+ (t0.c0)))) DESC, ((('D㐎')) NOT BETWEEN ((0.8886314898373117 COLLATE NOCASE)) AND ((rt1.c4 COLLATE BINARY))) ASC, (((((((t0.c3 IN (rt1.c1)))AND(((0.9208292894614649) NOT BETWEEN (t0.c0) AND (t0.c2)))))OR(CASE WHEN t0.c4 THEN rt1.c1 END)))OR((((rt1.c3, t0.c0, rt1.c1))>=((NULL, rt1.c0, rt1.c6))))) ASC;
SELECT DISTINCT MIN(t0.c2) FROM t0, rt1 WHERE (TYPEOF(DISTINCT t0.c2 COLLATE BINARY)) ORDER BY ((((((((x'52a97e')IS(t0.c2)))AND(rt1.c2 COLLATE BINARY)))OR(((rt1.c1) NOTNULL))))AND(TRIM(DISTINCT rt1.c6, t0.c4))) DESC, CASE (NOT (rt1.c1))  WHEN CASE WHEN '1923174721' THEN rt1.c2 ELSE rt1.c4 END THEN ((t0.c2) NOT NULL) WHEN (((t0.c1, rt1.c6, rt1.c0)) BETWEEN ((t0.c0, t0.c1, rt1.c0)) AND ((t0.c4, t0.c1, rt1.c6))) THEN CAST('' AS INTEGER) END DESC, (((((t0.c0)=(t0.c4))))<>((NULL)))  NULLS LAST, ',m'  NULLS FIRST LIMIT 0X0;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON (- (CAST(rt1.c2 AS REAL))) WHERE ((((NOT (rt1.c1))) BETWEEN (((t0.c3)GLOB(t0.c3))) AND (CASE rt1.c2  WHEN t0.c2 THEN x'' WHEN t0.c3 THEN t0.c3 END)));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON (- (CAST(rt1.c2 AS REAL))) WHERE ((((NOT (rt1.c1))) BETWEEN (((t0.c3)GLOB(t0.c3))) AND (CASE rt1.c2  WHEN t0.c2 THEN x'' WHEN t0.c3 THEN t0.c3 END))) LIMIT 0X2 INTERSECT SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON (- (CAST(rt1.c2 AS REAL))) WHERE ((((((((t0.c3)AND(t0.c3)))OR(rt1.c5)))AND(t0.c1)) IN (((rt1.c0) NOTNULL)))) LIMIT 2;
SELECT ALL MAX(rt1.c3) FROM t0 INNER JOIN rt1 ON rt1.c3 WHERE (rt1.c0) ORDER BY ((((((((json_quote(rt1.c3))OR(((t0.c4)&(rt1.c3)))))OR((NOT ('y}f1%xNY')))))OR(LIKELY(DISTINCT 0.9047286469910235))))OR((t0.c2 IN (t0.c3, t0.c2, x'89ee'))));
SELECT ALL MAX(rt1.c3) FROM t0 INNER JOIN rt1 ON rt1.c3 WHERE (((rt1.c0)AND(((((rt1.c2)LIKE(rt1.c0))) NOTNULL)))) ORDER BY (((rt1.c0) BETWEEN (t0.c1) AND (t0.c3)) IN (t0.c4 COLLATE NOCASE)) ASC LIMIT 0X1 INTERSECT SELECT ALL MAX(rt1.c3) FROM t0 INNER JOIN rt1 ON rt1.c3 WHERE ((((0X3716fa8e IN ())) IS TRUE)) ORDER BY (((rt1.c0) BETWEEN (t0.c1) AND (t0.c3)) IN (t0.c4 COLLATE NOCASE)) ASC LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE ((CASE WHEN t0.c0 THEN rt1.c3 END IN ()));
SELECT ALL * FROM t0, rt1 WHERE ((CASE WHEN t0.c0 THEN rt1.c3 END IN ())) LIMIT 0X0 INTERSECT SELECT * FROM t0, rt1 WHERE (x'15ad5d') LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE ((CASE WHEN t0.c0 THEN rt1.c3 END IN ()));
SELECT ALL * FROM t0, rt1 WHERE ((CASE WHEN t0.c0 THEN rt1.c3 END IN ())) LIMIT 0X0 INTERSECT SELECT * FROM t0, rt1 WHERE (x'15ad5d') LIMIT 0;
SELECT * FROM t0 WHERE (((((t0.c2)<<(t0.c4))) BETWEEN (CAST(t0.c3 AS TEXT)) AND (((((t0.c4)OR(t0.c2)))AND(t0.c2))))) ORDER BY CASE ((t0.c2)IS(t0.c2))  WHEN ((t0.c1) ISNULL) THEN (((t0.c4, t0.c3))<((t0.c0, t0.c2))) WHEN ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c1)) THEN (t0.c0 IN (t0.c0)) END, ((((NULL)>>(t0.c1))) NOTNULL) DESC, LIKELIHOOD(NULL, (t0.c4 IN (t0.c1, t0.c2))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((t0.c2)<<(t0.c4))) BETWEEN (CAST(t0.c3 AS TEXT)) AND (((((t0.c4)OR(t0.c2)))AND(t0.c2)))))AND(((((t0.c0) NOTNULL)) NOT BETWEEN (((((((((t0.c1)AND(t0.c4)))AND(t0.c3)))AND(t0.c3)))AND(t0.c4))) AND ((- (t0.c0))))))) ORDER BY (((t0.c2, 0xffffffff88bbf1cb)) NOT BETWEEN (((((t0.c4, t0.c2, t0.c3))<>((t0.c1, t0.c2, t0.c1))), ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c0)))) AND ((CASE t0.c1  WHEN 0.490626909767953 THEN t0.c2 ELSE t0.c3 END, t0.c2))) DESC LIMIT 1;
SELECT * FROM t0 WHERE (((((t0.c2)<<(t0.c4))) BETWEEN (CAST(t0.c3 AS TEXT)) AND (((((t0.c4)OR(t0.c2)))AND(t0.c2))))) ORDER BY CASE ((t0.c2)IS(t0.c2))  WHEN ((t0.c1) ISNULL) THEN (((t0.c4, t0.c3))<((t0.c0, t0.c2))) WHEN ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c1)) THEN (t0.c0 IN (t0.c0)) END, ((((NULL)>>(t0.c1))) NOTNULL) DESC, LIKELIHOOD(NULL, (t0.c4 IN (t0.c1, t0.c2))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (CASE WHEN ((((t0.c2)AND(t0.c1)))OR(t0.c0)) THEN t0.c3 WHEN ((t0.c1)AND(t0.c1)) THEN (((t0.c3))==((t0.c4))) WHEN t0.c3 THEN CASE t0.c3  WHEN t0.c4 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN t0.c4 WHEN t0.c1 THEN x'' END WHEN CASE x'ef'  WHEN t0.c2 THEN t0.c4 WHEN NULL THEN t0.c0 WHEN NULL THEN t0.c4 ELSE t0.c4 END THEN LOWER(DISTINCT t0.c4) ELSE (~ (t0.c3)) END) ORDER BY t0.c4  NULLS FIRST, CAST(t0.c4 AS TEXT), CAST(CAST(t0.c4 AS INTEGER) AS TEXT) DESC, ((((x'')&(t0.c1)))IS(json_array_length(t0.c0)));
SELECT * FROM t0 WHERE (((CASE WHEN ((((t0.c2)AND(t0.c1)))OR(t0.c0)) THEN t0.c3 WHEN ((t0.c1)AND(t0.c1)) THEN (((t0.c3))=((t0.c4))) WHEN t0.c3 THEN CASE t0.c3  WHEN t0.c4 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN t0.c4 WHEN t0.c1 THEN x'' END WHEN CASE x'ef'  WHEN t0.c2 THEN t0.c4 WHEN NULL THEN t0.c0 WHEN NULL THEN t0.c4 ELSE t0.c4 END THEN LOWER(DISTINCT t0.c4) ELSE (~ (t0.c3)) END)AND(CAST((NOT (t0.c1)) AS REAL)))) ORDER BY t0.c4  NULLS FIRST, CAST(t0.c4 AS TEXT), CAST(CAST(t0.c4 AS INTEGER) AS TEXT) DESC, ((((x'')&(t0.c1)))IS(json_array_length(t0.c0)));
SELECT * FROM t0 WHERE (CASE WHEN ((((t0.c2)AND(t0.c1)))OR(t0.c0)) THEN t0.c3 WHEN ((t0.c1)AND(t0.c1)) THEN (((t0.c3))==((t0.c4))) WHEN t0.c3 THEN CASE t0.c3  WHEN t0.c4 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN t0.c4 WHEN t0.c1 THEN x'' END WHEN CASE x'ef'  WHEN t0.c2 THEN t0.c4 WHEN NULL THEN t0.c0 WHEN NULL THEN t0.c4 ELSE t0.c4 END THEN LOWER(DISTINCT t0.c4) ELSE (~ (t0.c3)) END) ORDER BY t0.c4  NULLS FIRST, CAST(t0.c4 AS TEXT), CAST(CAST(t0.c4 AS INTEGER) AS TEXT) DESC, ((((x'')&(t0.c1)))IS(json_array_length(t0.c0)));
SELECT ALL MAX(rt1.c5) FROM t0 LEFT OUTER JOIN rt1 ON (((((((((('0.18911477859848336')AND((- (t0.c1)))))OR(((rt1.c3) IS TRUE))))AND(((x'')>=(rt1.c6)))))OR((NOT (t0.c4)))))OR((NULL IN ()))) WHERE (((((t0.c4)IS NOT(rt1.c2))) NOTNULL));
SELECT MAX(rt1.c5) FROM t0 INNER JOIN rt1 ON (((((((((('0.18911477859848336')AND((- (t0.c1)))))OR(((rt1.c3) IS TRUE))))AND(((x'')>=(rt1.c6)))))OR((NOT (t0.c4)))))OR((NULL IN ()))) WHERE (((((t0.c4)IS NOT(rt1.c2))) NOTNULL)) INTERSECT SELECT MAX(rt1.c5) FROM t0 INNER JOIN rt1 ON (((((((((('0.18911477859848336')AND((- (t0.c1)))))OR(((rt1.c3) IS TRUE))))AND(((x'')>=(rt1.c6)))))OR((NOT (t0.c4)))))OR((NULL IN ()))) WHERE (((t0.c1) NOT BETWEEN ((((x'')) NOT BETWEEN ((rt1.c6)) AND ((rt1.c6)))) AND ((t0.c4 IN ()))));
SELECT ALL * FROM t0 WHERE (CAST((NOT (t0.c4)) AS BLOB)) ORDER BY (((t0.c4, t0.c1, t0.c3, t0.c1, x'b2')) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c4)||(NULL)), t0.c4, ((t0.c0) NOT NULL), (t0.c1 IN (t0.c2)))) AND ((UNLIKELY(DISTINCT t0.c4), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), (+ (t0.c3)), CASE t0.c1  WHEN t0.c3 THEN t0.c1 WHEN t0.c2 THEN t0.c0 ELSE t0.c3 END, (((t0.c3, t0.c4))=((t0.c0, t0.c3)))))) DESC, ((((((((t0.c1)AND(t0.c4)))AND(t0.c3)))AND(t0.c4)))OR(t0.c4)) COLLATE RTRIM DESC;
SELECT ALL * FROM t0 WHERE (CAST((NOT (t0.c4)) AS BLOB)) ORDER BY (((t0.c4, t0.c1, t0.c3, t0.c1, x'b2')) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c4)||(NULL)), t0.c4, ((t0.c0) NOT NULL), (t0.c1 IN (t0.c2)))) AND ((UNLIKELY(DISTINCT t0.c4), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), (+ (t0.c3)), CASE t0.c1  WHEN t0.c3 THEN t0.c1 WHEN t0.c2 THEN t0.c0 ELSE t0.c3 END, (((t0.c3, t0.c4))==((t0.c0, t0.c3)))))) DESC, ((((((((t0.c1)AND(t0.c4)))AND(t0.c3)))AND(t0.c4)))OR(t0.c4)) COLLATE RTRIM DESC INTERSECT SELECT * FROM t0 WHERE (((((((t0.c1 COLLATE BINARY)AND(((t0.c3) ISNULL))))OR(t0.c2 COLLATE RTRIM)))OR(LOWER(t0.c0)))) ORDER BY (((t0.c4, t0.c1, t0.c3, t0.c1, x'b2')) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c4)||(NULL)), t0.c4, ((t0.c0) NOT NULL), (t0.c1 IN (t0.c2)))) AND ((UNLIKELY(DISTINCT t0.c4), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), (+ (t0.c3)), CASE t0.c1  WHEN t0.c3 THEN t0.c1 WHEN t0.c2 THEN t0.c0 ELSE t0.c3 END, (((t0.c3, t0.c4))=((t0.c0, t0.c3)))))) DESC, ((((((((t0.c1)AND(t0.c4)))AND(t0.c3)))AND(t0.c4)))OR(t0.c4)) COLLATE RTRIM DESC;
SELECT ALL * FROM t0 WHERE (CAST((NOT (t0.c4)) AS BLOB)) ORDER BY (((t0.c4, t0.c1, t0.c3, t0.c1, x'b2')) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c4)||(NULL)), t0.c4, ((t0.c0) NOT NULL), (t0.c1 IN (t0.c2)))) AND ((UNLIKELY(DISTINCT t0.c4), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), (+ (t0.c3)), CASE t0.c1  WHEN t0.c3 THEN t0.c1 WHEN t0.c2 THEN t0.c0 ELSE t0.c3 END, (((t0.c3, t0.c4))=((t0.c0, t0.c3)))))) DESC, ((((((((t0.c1)AND(t0.c4)))AND(t0.c3)))AND(t0.c4)))OR(t0.c4)) COLLATE RTRIM DESC;
SELECT ALL * FROM t0 WHERE (CAST((NOT (t0.c4)) AS BLOB)) ORDER BY (((t0.c4, t0.c1, t0.c3, t0.c1, x'b2')) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c4)||(NULL)), t0.c4, ((t0.c0) NOT NULL), (t0.c1 IN (t0.c2)))) AND ((UNLIKELY(DISTINCT t0.c4), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), (+ (t0.c3)), CASE t0.c1  WHEN t0.c3 THEN t0.c1 WHEN t0.c2 THEN t0.c0 ELSE t0.c3 END, (((t0.c3, t0.c4))==((t0.c0, t0.c3)))))) DESC, ((((((((t0.c1)AND(t0.c4)))AND(t0.c3)))AND(t0.c4)))OR(t0.c4)) COLLATE RTRIM DESC INTERSECT SELECT * FROM t0 WHERE (((((((t0.c1 COLLATE BINARY)AND(((t0.c3) ISNULL))))OR(t0.c2 COLLATE RTRIM)))OR(LOWER(t0.c0)))) ORDER BY (((t0.c4, t0.c1, t0.c3, t0.c1, x'b2')) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c4)||(NULL)), t0.c4, ((t0.c0) NOT NULL), (t0.c1 IN (t0.c2)))) AND ((UNLIKELY(DISTINCT t0.c4), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), (+ (t0.c3)), CASE t0.c1  WHEN t0.c3 THEN t0.c1 WHEN t0.c2 THEN t0.c0 ELSE t0.c3 END, (((t0.c3, t0.c4))=((t0.c0, t0.c3)))))) DESC, ((((((((t0.c1)AND(t0.c4)))AND(t0.c3)))AND(t0.c4)))OR(t0.c4)) COLLATE RTRIM DESC;
SELECT MIN(t0.c3) FROM t0, rt1 WHERE ((((t0.c3, 0.37550392806321586, rt1.c4, t0.c2, t0.c4)) NOT BETWEEN ((((((t0.c1)AND(t0.c2)))OR(t0.c4)), ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c4)), CASE WHEN t0.c1 THEN t0.c3 WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c5 END, rt1.c6, t0.c3)) AND ((t0.c3, CASE WHEN 0.7179479712691657 THEN t0.c4 WHEN '>欷e㚒&|dh' THEN rt1.c2 WHEN rt1.c3 THEN t0.c2 WHEN t0.c2 THEN rt1.c3 END, (0.15783341535728057 IN (t0.c0, t0.c4)), rt1.c6, CAST(rt1.c2 AS TEXT))))) ORDER BY (NOT (CAST(rt1.c3 AS REAL))) ASC  NULLS LAST, CAST(((((rt1.c1)AND(rt1.c2)))AND(t0.c3)) AS INTEGER);
SELECT DISTINCT MIN(t0.c3) FROM t0, rt1 WHERE ((((t0.c3, 0.37550392806321586, rt1.c4, t0.c2, t0.c4)) NOT BETWEEN ((((((t0.c1)AND(t0.c2)))OR(t0.c4)), ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c4)), CASE WHEN t0.c1 THEN t0.c3 WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c5 END, rt1.c6, t0.c3)) AND ((t0.c3, CASE WHEN 0.7179479712691657 THEN t0.c4 WHEN '>欷e㚒&|dh' THEN rt1.c2 WHEN rt1.c3 THEN t0.c2 WHEN t0.c2 THEN rt1.c3 END, (0.15783341535728057 IN (t0.c0, t0.c4)), rt1.c6, CAST(rt1.c2 AS TEXT))))) ORDER BY (NOT (CAST(rt1.c3 AS REAL))) ASC  NULLS LAST, CAST(((((rt1.c1)AND(rt1.c2)))AND(t0.c3)) AS INTEGER);
SELECT MIN(t0.c3) FROM t0 WHERE ((((((((((t0.c0)OR(t0.c3)))OR(t0.c1)))AND(t0.c4)))OR(251119158)) IN ())) ORDER BY CAST(0.4698540703644861 AS NUMERIC) DESC;
SELECT ALL MIN(t0.c3) FROM t0 WHERE ((((((((((t0.c0)OR(t0.c3)))OR(t0.c1)))AND(t0.c4)))OR(251119158)) IN ())) ORDER BY CASE t0.c1  WHEN t0.c4 THEN t0.c1 WHEN t0.c1 THEN t0.c4 ELSE NULL END COLLATE RTRIM, (((t0.c4 IN (t0.c4, t0.c4)))==((t0.c1 IN (t0.c0)))) ASC  NULLS FIRST, CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC) ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT ALL MIN(t0.c3) FROM t0 WHERE (t0.c3) ORDER BY CASE t0.c1  WHEN t0.c4 THEN t0.c1 WHEN t0.c1 THEN t0.c4 ELSE NULL END COLLATE RTRIM, (((t0.c4 IN (t0.c4, t0.c4)))=((t0.c1 IN (t0.c0)))) ASC  NULLS FIRST, CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC) ASC  NULLS FIRST LIMIT 0x0;
SELECT ALL MIN(rt1.c5) FROM rt1 WHERE (CAST(rt1.c6 AS TEXT));
SELECT ALL MIN(rt1.c5) FROM rt1 WHERE (CAST(rt1.c6 AS TEXT)) ORDER BY CAST(((rt1.c0) NOTNULL) AS TEXT) DESC  NULLS LAST INTERSECT SELECT ALL MIN(rt1.c5) FROM rt1 WHERE (TYPEOF(DISTINCT (- (rt1.c0)))) ORDER BY CAST(((rt1.c0) NOTNULL) AS TEXT) DESC  NULLS LAST;
SELECT ALL MIN(rt1.c4) FROM rt1, t0 WHERE ((((CASE WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c5 END))<(((rt1.c1 IN (rt1.c0, rt1.c3))))));
SELECT MIN(rt1.c4) FROM rt1, t0 WHERE ((((((CASE WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c5 END))<(((rt1.c1 IN (rt1.c0))))))AND(((t0.c2) IS TRUE)))) ORDER BY (((- (rt1.c4))) NOT NULL) ASC  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL MIN(rt1.c4) FROM rt1, t0 WHERE (LOWER(CAST(rt1.c1 AS TEXT))) ORDER BY (((- (rt1.c4))) NOT NULL) ASC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t0 NOT INDEXED WHERE (HEX(t0.c4 COLLATE RTRIM));
SELECT ALL * FROM t0 WHERE (HEX(t0.c4 COLLATE RTRIM)) ORDER BY ((CASE WHEN t0.c1 THEN t0.c1 END)>=(((t0.c2)!=(t0.c3)))), (((t0.c0 IN ())) IS TRUE) ASC  NULLS FIRST, CASE (NOT (t0.c4))  WHEN COALESCE(DISTINCT t0.c2, x'69', t0.c0, t0.c0, t0.c3) THEN (((t0.c1, t0.c1, t0.c1, x'813af9')) BETWEEN ((t0.c1, t0.c3, t0.c0, t0.c1)) AND ((t0.c0, t0.c3, t0.c0, t0.c2))) END;
SELECT ALL * FROM t0 NOT INDEXED WHERE (HEX(t0.c4 COLLATE RTRIM));
SELECT ALL * FROM t0 WHERE (HEX(t0.c4 COLLATE RTRIM)) ORDER BY ((CASE WHEN t0.c1 THEN t0.c1 END)>=(((t0.c2)!=(t0.c3)))), (((t0.c0 IN ())) IS TRUE) ASC  NULLS FIRST, CASE (NOT (t0.c4))  WHEN COALESCE(DISTINCT t0.c2, x'69', t0.c0, t0.c0, t0.c3) THEN (((t0.c1, t0.c1, t0.c1, x'813af9')) BETWEEN ((t0.c1, t0.c3, t0.c0, t0.c1)) AND ((t0.c0, t0.c3, t0.c0, t0.c2))) END;
SELECT MAX(t0.c2) FROM t0 WHERE ((- ((((t0.c3, t0.c3))<>((t0.c2, t0.c3))))));
SELECT ALL MAX(t0.c2) FROM t0 WHERE ((((- ((((t0.c3, t0.c3))>((t0.c2, t0.c3))))))AND(((((t0.c3) NOT NULL)) ISNULL)))) ORDER BY ((((t0.c3)IS(t0.c2)))>=(((-1.908681393E9) NOT BETWEEN (t0.c0) AND (t0.c2))));
SELECT ALL COUNT(*) FROM t0 WHERE (x'd91a') ORDER BY ((((t0.c3)OR(((((t0.c4)AND(t0.c1)))AND(t0.c0)))))OR((t0.c1 IN ()))) ASC;
SELECT COUNT(*) FROM t0 WHERE (((x'd91a')AND((((+ (t0.c0)))-(CASE WHEN t0.c4 THEN t0.c3 WHEN t0.c1 THEN t0.c3 ELSE t0.c4 END))))) ORDER BY ((((t0.c3)OR(((((t0.c4)AND(t0.c1)))AND(t0.c0)))))OR((t0.c1 IN ()))) ASC INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c3)OR(t0.c0)))OR(1877261258)))OR(t0.c2)))LIKE((NOT (t0.c3))))) ORDER BY ((((t0.c3)OR(((((t0.c4)AND(t0.c1)))AND(t0.c0)))))OR((t0.c1 IN ()))) ASC;
SELECT ALL * FROM rt1 WHERE (CASE ((((((rt1.c0)AND(rt1.c5)))OR(rt1.c6)))OR(rt1.c1))  WHEN rt1.c5 COLLATE RTRIM THEN (rt1.c0 IN ()) WHEN ((rt1.c5)&('-6657986')) THEN 'Df' ELSE ((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) END);
SELECT DISTINCT * FROM rt1 WHERE (CASE ((((((rt1.c0)AND(rt1.c5)))OR(rt1.c6)))OR(rt1.c1))  WHEN rt1.c5 COLLATE RTRIM THEN (rt1.c0 IN ()) WHEN ((rt1.c5)&('-6657986')) THEN 'Df' ELSE ((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) END) ORDER BY QUOTE(((((rt1.c0)AND(rt1.c1)))OR(rt1.c6))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (NULL) ORDER BY QUOTE(((((rt1.c0)AND(rt1.c1)))OR(rt1.c6))) LIMIT 0;
SELECT ALL * FROM rt1 WHERE (CASE ((((((rt1.c0)AND(rt1.c5)))OR(rt1.c6)))OR(rt1.c1))  WHEN rt1.c5 COLLATE RTRIM THEN (rt1.c0 IN ()) WHEN ((rt1.c5)&('-6657986')) THEN 'Df' ELSE ((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) END);
SELECT DISTINCT * FROM rt1 WHERE (CASE ((((((rt1.c0)AND(rt1.c5)))OR(rt1.c6)))OR(rt1.c1))  WHEN rt1.c5 COLLATE RTRIM THEN (rt1.c0 IN ()) WHEN ((rt1.c5)&('-6657986')) THEN 'Df' ELSE ((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) END) ORDER BY QUOTE(((((rt1.c0)AND(rt1.c1)))OR(rt1.c6))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (NULL) ORDER BY QUOTE(((((rt1.c0)AND(rt1.c1)))OR(rt1.c6))) LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c1))) IS TRUE));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c1))) IS TRUE)) ORDER BY ((json_type(t0.c1)) BETWEEN (((t0.c4) IS FALSE)) AND (CAST(1.967614267E9 AS BLOB))) ASC, CAST(NULL AS INTEGER)  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((+ (t0.c2)) AS NUMERIC)) ORDER BY (('' IN (t0.c2)) IN ()), ((((t0.c2)%(t0.c2)))<((t0.c1 IN ()))) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CAST((+ (t0.c2)) AS NUMERIC))AND(json_valid((t0.c1 IN (t0.c2, '_L')))))) ORDER BY (('' IN (t0.c2)) IN ()), ((((t0.c2)%(t0.c2)))<((t0.c1 IN ()))) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((((((x'e7') NOT NULL))OR(((t0.c4)>(t0.c2)))))OR(((((t0.c2)OR(t0.c3)))OR(t0.c3)))))OR(t0.c3 COLLATE NOCASE)))AND(((t0.c4) NOT BETWEEN (0xffffffffef4acc2e) AND (t0.c1)))))AND((- (t0.c4))))) ORDER BY (('' IN (t0.c2)) IN ()), ((((t0.c2)%(t0.c2)))<((t0.c1 IN ()))) DESC  NULLS FIRST LIMIT 0X1;
SELECT * FROM rt1 WHERE (0.9923457052182739) ORDER BY CAST(CASE WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END AS TEXT)  NULLS FIRST, (NOT (NULL)) DESC;
SELECT DISTINCT * FROM rt1 WHERE (0.9923457052182739) ORDER BY CAST(CASE WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END AS TEXT)  NULLS FIRST, (NOT (NULL)) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((CAST(rt1.c3 AS TEXT) IN (((rt1.c6)*(NULL)), rt1.c1 COLLATE RTRIM))) ORDER BY CAST(CASE WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END AS TEXT)  NULLS FIRST, (NOT (NULL)) DESC LIMIT 0;
SELECT * FROM rt1 WHERE (0.9923457052182739) ORDER BY CAST(CASE WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END AS TEXT)  NULLS FIRST, (NOT (NULL)) DESC;
SELECT DISTINCT * FROM rt1 WHERE (0.9923457052182739) ORDER BY CAST(CASE WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END AS TEXT)  NULLS FIRST, (NOT (NULL)) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((CAST(rt1.c3 AS TEXT) IN (((rt1.c6)*(NULL)), rt1.c1 COLLATE RTRIM))) ORDER BY CAST(CASE WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END AS TEXT)  NULLS FIRST, (NOT (NULL)) DESC LIMIT 0;
SELECT ALL MIN(rt1.c1) FROM rt1 WHERE (((CASE WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c6 ELSE rt1.c5 END) BETWEEN (((rt1.c0)%(NULL))) AND ((((rt1.c0, rt1.c5))>=((rt1.c2, rt1.c6))))));
SELECT MIN(rt1.c1) FROM rt1 WHERE (((CASE WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c6 ELSE rt1.c5 END) BETWEEN (((rt1.c0)%(NULL))) AND ((((rt1.c0, rt1.c5))>((rt1.c2, rt1.c6)))))) ORDER BY rt1.c5 COLLATE RTRIM ASC, (((0.7296981902552447, rt1.c0)) BETWEEN (('', ((rt1.c4) NOTNULL))) AND ((((rt1.c2)/(rt1.c2)), ((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c4))))), ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c5)) COLLATE BINARY ASC INTERSECT SELECT MIN(rt1.c1) FROM rt1 WHERE (HEX(rt1.c2 COLLATE BINARY)) ORDER BY rt1.c5 COLLATE RTRIM ASC, (((0.7296981902552447, rt1.c0)) BETWEEN (('', ((rt1.c4) NOTNULL))) AND ((((rt1.c2)/(rt1.c2)), ((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c4))))), ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c5)) COLLATE BINARY ASC;
SELECT ALL MIN(t0.c3) FROM t0, rt1 WHERE ((((t0.c1)>(t0.c1)) IN (((rt1.c2) BETWEEN (rt1.c0) AND (t0.c2))))) ORDER BY ((t0.c0) IS FALSE), ((rt1.c3)OR(rt1.c6)) DESC, '&D)' DESC;
SELECT ALL MIN(t0.c3) FROM t0, rt1 WHERE ((((t0.c1)>(t0.c1)) IN (((rt1.c2) BETWEEN (rt1.c0) AND (t0.c2))))) ORDER BY ((0.07935143481961593) BETWEEN (NULL) AND (rt1.c6)) DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT MIN(t0.c3) FROM t0, rt1 WHERE (((('1799702489', NULL, rt1.c4)) BETWEEN (((((0x7f79209c, '-698996151', rt1.c4)) NOT BETWEEN ((rt1.c4, t0.c1, rt1.c1)) AND ((rt1.c1, t0.c0, t0.c3))), CASE t0.c4  WHEN rt1.c2 THEN rt1.c6 WHEN t0.c0 THEN rt1.c1 END, (t0.c1 IN (t0.c4, t0.c2)))) AND ((NULL, ((((((t0.c2)AND(rt1.c0)))AND(t0.c2)))AND(t0.c0)), CAST(0.3489611357034216 AS REAL))))) ORDER BY ((0.07935143481961593) BETWEEN (NULL) AND (rt1.c6)) DESC  NULLS FIRST LIMIT 2;
SELECT MIN(rt1.c2) FROM t0, rt1 WHERE (((((((t0.c0)OR(rt1.c3)))OR(rt1.c4))) ISNULL));
SELECT DISTINCT MIN(rt1.c2) FROM t0, rt1 WHERE (((((((t0.c0)OR(rt1.c3)))OR(rt1.c4))) ISNULL)) ORDER BY 0x1c534f4d  NULLS FIRST LIMIT 0x0;
SELECT * FROM t0, rt1 WHERE (CAST(((t0.c0) NOT NULL) AS INTEGER));
SELECT DISTINCT * FROM t0, rt1 WHERE (CAST(((t0.c0) NOT NULL) AS INTEGER)) LIMIT 5 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (t0.c1) LIMIT 5;
SELECT * FROM t0, rt1 WHERE (CAST(((t0.c0) NOT NULL) AS INTEGER));
SELECT DISTINCT * FROM t0, rt1 WHERE (CAST(((t0.c0) NOT NULL) AS INTEGER)) LIMIT 5 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (t0.c1) LIMIT 5;
SELECT * FROM t0 WHERE ((((~ (t0.c1)))/(((t0.c0) NOT BETWEEN (-8.56217189E8) AND (t0.c4)))));
SELECT DISTINCT * FROM t0 WHERE ((((((~ (t0.c1)))/(((t0.c0) NOT BETWEEN (-8.56217189E8) AND (t0.c4)))))AND(((CAST(-494457900 AS BLOB)) NOT BETWEEN ((- (t0.c3))) AND (CHANGES()))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((((t0.c4)AND(t0.c3)))OR(t0.c2)) AS BLOB)) LIMIT 0x1;
SELECT * FROM t0 WHERE ((((~ (t0.c1)))/(((t0.c0) NOT BETWEEN (-8.56217189E8) AND (t0.c4)))));
SELECT DISTINCT * FROM t0 WHERE ((((((~ (t0.c1)))/(((t0.c0) NOT BETWEEN (-8.56217189E8) AND (t0.c4)))))AND(((CAST(-494457900 AS BLOB)) NOT BETWEEN ((- (t0.c3))) AND (CHANGES()))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((((t0.c4)AND(t0.c3)))OR(t0.c2)) AS BLOB)) LIMIT 0x1;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (rt1.c0) ORDER BY ((((rt1.c0) BETWEEN (t0.c0) AND (rt1.c2))) NOT BETWEEN (((((t0.c0)OR(t0.c0)))AND(t0.c0))) AND (((rt1.c6)-(t0.c1)))), ((rt1.c2)+(((rt1.c1)>>(t0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1 WHERE (rt1.c0) ORDER BY ((((rt1.c0) BETWEEN (t0.c0) AND (rt1.c2))) NOT BETWEEN (((((t0.c0)OR(t0.c0)))AND(t0.c0))) AND (((rt1.c6)-(t0.c1)))), ((rt1.c2)+(((rt1.c1)>>(t0.c0))))  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((('530625520') NOT NULL)) ORDER BY ((((rt1.c0) BETWEEN (t0.c0) AND (rt1.c2))) NOT BETWEEN (((((t0.c0)OR(t0.c0)))AND(t0.c0))) AND (((rt1.c6)-(t0.c1)))), ((rt1.c2)+(((rt1.c1)>>(t0.c0))))  NULLS LAST;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE ('2102086614');
SELECT * FROM rt1 NATURAL JOIN t0 WHERE ((('2102086614')AND((NOT (rt1.c4 COLLATE NOCASE)))));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE ('2102086614');
SELECT * FROM rt1 NATURAL JOIN t0 WHERE ((('2102086614')AND((NOT (rt1.c4 COLLATE NOCASE)))));
SELECT * FROM rt1 CROSS JOIN t0 ON (('1664405135') BETWEEN (((rt1.c6)+(rt1.c1))) AND ((((t0.c1, rt1.c3, ' ', rt1.c6))>((rt1.c3, rt1.c1, t0.c1, rt1.c5))))) WHERE (((((t0.c2)AND('-901545329')))>=(CAST(rt1.c2 AS REAL))));
SELECT * FROM rt1 CROSS JOIN t0 ON (('1664405135') BETWEEN (((rt1.c6)+(rt1.c1))) AND ((((t0.c1, rt1.c3, ' ', rt1.c6))>((rt1.c3, rt1.c1, t0.c1, rt1.c5))))) WHERE (((((((t0.c2)AND('-901545329')))==(CAST(rt1.c2 AS REAL))))AND('0.5806564964651925'))) LIMIT 0;
SELECT * FROM rt1 CROSS JOIN t0 ON (('1664405135') BETWEEN (((rt1.c6)+(rt1.c1))) AND ((((t0.c1, rt1.c3, ' ', rt1.c6))>((rt1.c3, rt1.c1, t0.c1, rt1.c5))))) WHERE (((((t0.c2)AND('-901545329')))>=(CAST(rt1.c2 AS REAL))));
SELECT * FROM rt1 CROSS JOIN t0 ON (('1664405135') BETWEEN (((rt1.c6)+(rt1.c1))) AND ((((t0.c1, rt1.c3, ' ', rt1.c6))>((rt1.c3, rt1.c1, t0.c1, rt1.c5))))) WHERE (((((((t0.c2)AND('-901545329')))==(CAST(rt1.c2 AS REAL))))AND('0.5806564964651925'))) LIMIT 0;
SELECT ALL * FROM t0 WHERE (((RTRIM(t0.c4)) NOT BETWEEN ((t0.c2 IN (t0.c2, t0.c3))) AND (CASE WHEN t0.c4 THEN t0.c3 ELSE t0.c1 END)));
SELECT DISTINCT * FROM t0 WHERE (((((RTRIM(t0.c4)) NOT BETWEEN ((t0.c2 IN (t0.c2, t0.c3))) AND (CASE WHEN t0.c4 THEN t0.c3 ELSE t0.c1 END)))AND(HEX(t0.c2) COLLATE RTRIM))) ORDER BY t0.c0 LIMIT 0X2;
SELECT ALL * FROM t0 WHERE (((RTRIM(t0.c4)) NOT BETWEEN ((t0.c2 IN (t0.c2, t0.c3))) AND (CASE WHEN t0.c4 THEN t0.c3 ELSE t0.c1 END)));
SELECT DISTINCT * FROM t0 WHERE (((((RTRIM(t0.c4)) NOT BETWEEN ((t0.c2 IN (t0.c2, t0.c3))) AND (CASE WHEN t0.c4 THEN t0.c3 ELSE t0.c1 END)))AND(HEX(t0.c2) COLLATE RTRIM))) ORDER BY t0.c0 LIMIT 0X2;
SELECT MIN(t0.c0) FROM t0 WHERE (t0.c2);
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((t0.c2)AND((((('_reh帿')<(t0.c0))) BETWEEN (((((((t0.c1)AND(t0.c4)))OR(t0.c2)))OR(NULL))) AND (json_array_length(t0.c0, t0.c0)))))) ORDER BY ((t0.c4 COLLATE BINARY) NOT BETWEEN (((t0.c4)LIKE(t0.c4))) AND (-1048804881)) DESC, CASE ((t0.c2)||(t0.c4))  WHEN NULL THEN ((t0.c3) NOT NULL) WHEN CAST(t0.c3 AS NUMERIC) THEN CAST(t0.c1 AS NUMERIC) END ASC  NULLS LAST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (x'36') ORDER BY ((t0.c4 COLLATE BINARY) NOT BETWEEN (((t0.c4)LIKE(t0.c4))) AND (-1048804881)) DESC, CASE ((t0.c2)||(t0.c4))  WHEN NULL THEN ((t0.c3) NOT NULL) WHEN CAST(t0.c3 AS NUMERIC) THEN CAST(t0.c1 AS NUMERIC) END ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c2) NOT NULL) THEN CAST(x'' AS TEXT) WHEN ((x'b80f6085') NOT BETWEEN (t0.c2) AND (t0.c4)) THEN (- (t0.c4)) WHEN (+ (t0.c2)) THEN ((t0.c4)*(t0.c0)) ELSE ((x'')IS NOT(t0.c0)) END);
SELECT * FROM t0 WHERE (((CASE WHEN ((t0.c2) NOT NULL) THEN CAST(x'' AS TEXT) WHEN ((x'b80f6085') NOT BETWEEN (t0.c2) AND (t0.c4)) THEN (- (t0.c4)) WHEN (+ (t0.c2)) THEN ((t0.c4)*(t0.c0)) ELSE ((x'')IS NOT(t0.c0)) END)AND(((0.18591702419232703) NOT BETWEEN ((t0.c2 IN ())) AND (t0.c4 COLLATE NOCASE))))) ORDER BY t0.c3  NULLS FIRST, t0.c2  NULLS FIRST INTERSECT SELECT ALL * FROM t0 WHERE ((~ (t0.c4))) ORDER BY t0.c3  NULLS FIRST, t0.c2  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c2) NOT NULL) THEN CAST(x'' AS TEXT) WHEN ((x'b80f6085') NOT BETWEEN (t0.c2) AND (t0.c4)) THEN (- (t0.c4)) WHEN (+ (t0.c2)) THEN ((t0.c4)*(t0.c0)) ELSE ((x'')IS NOT(t0.c0)) END);
SELECT * FROM t0 WHERE (((CASE WHEN ((t0.c2) NOT NULL) THEN CAST(x'' AS TEXT) WHEN ((x'b80f6085') NOT BETWEEN (t0.c2) AND (t0.c4)) THEN (- (t0.c4)) WHEN (+ (t0.c2)) THEN ((t0.c4)*(t0.c0)) ELSE ((x'')IS NOT(t0.c0)) END)AND(((0.18591702419232703) NOT BETWEEN ((t0.c2 IN ())) AND (t0.c4 COLLATE NOCASE))))) ORDER BY t0.c3  NULLS FIRST, t0.c2  NULLS FIRST INTERSECT SELECT ALL * FROM t0 WHERE ((~ (t0.c4))) ORDER BY t0.c3  NULLS FIRST, t0.c2  NULLS FIRST;
SELECT ALL MIN(rt1.c2) FROM t0 CROSS JOIN rt1 ON (((((((rt1.c0)AND(rt1.c1)))OR(t0.c0)))AND(rt1.c6)) IN (((rt1.c4)!=(rt1.c3)))) WHERE ((((rt1.c0 IN (rt1.c1, rt1.c0))) NOTNULL));
SELECT DISTINCT MIN(rt1.c2) FROM t0 CROSS JOIN rt1 ON (((((((rt1.c0)AND(rt1.c1)))OR(t0.c0)))AND(rt1.c6)) IN (((rt1.c4)!=(rt1.c3)))) WHERE ((((((rt1.c0 IN (rt1.c1, rt1.c0))) NOTNULL))AND(((((t0.c1) BETWEEN (t0.c4) AND (t0.c3))) NOT BETWEEN (((rt1.c3)>>(rt1.c0))) AND (((((((((((2.102086614E9)AND(t0.c4)))OR(rt1.c5)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c6))))))) INTERSECT SELECT DISTINCT MIN(rt1.c2) FROM t0 CROSS JOIN rt1 ON (((((((rt1.c0)AND(rt1.c1)))OR(t0.c0)))AND(rt1.c6)) IN (((rt1.c4)<>(rt1.c3)))) WHERE (CAST(((t0.c4) NOT BETWEEN (rt1.c0) AND (NULL)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (rt1.c0) ORDER BY (((((((((((- (rt1.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND(((((((rt1.c5)AND(rt1.c6)))AND(rt1.c0)))AND(t0.c0)))))AND(rt1.c5 COLLATE NOCASE)))AND(0.09317493260381604)))AND(rt1.c1 COLLATE NOCASE)), (((((((((rt1.c1)AND(t0.c4)))AND(x'f410')))OR(rt1.c4)), DATETIME(t0.c4, t0.c2, t0.c3), (((rt1.c4, t0.c0))>=((rt1.c0, 0.595930683496609)))))<=((((t0.c3) NOT NULL), ((rt1.c3)<>(t0.c3)), rt1.c6 COLLATE BINARY)));
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((rt1.c0)AND(((((0.9243871772888288)OR(((0.36956788192020906)AND(t0.c2)))))OR(CAST(rt1.c1 AS REAL)))))) ORDER BY rt1.c5 COLLATE BINARY ASC  NULLS LAST;
SELECT MIN(t0.c1) FROM t0 WHERE ((~ (0.23691136930112022)));
SELECT MIN(t0.c1) FROM t0 WHERE ((((~ (0.23691136930112022)))AND(CAST(t0.c1 AS TEXT) COLLATE NOCASE))) LIMIT 0;
SELECT MAX(rt1.c0) FROM t0, rt1 WHERE (rt1.c3) ORDER BY ((CASE WHEN NULL THEN rt1.c4 ELSE t0.c4 END) NOTNULL) ASC;
SELECT DISTINCT MAX(rt1.c0) FROM t0, rt1 WHERE (rt1.c3) ORDER BY ((CASE WHEN NULL THEN rt1.c4 ELSE t0.c4 END) NOTNULL) ASC LIMIT 0x1;
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE (CAST(((((((rt1.c6)AND(rt1.c1)))AND(rt1.c5)))OR(0.7247353960127934)) AS INTEGER)) ORDER BY CAST(rt1.c1 AS NUMERIC)  NULLS FIRST, rt1.c6 ASC;
SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE (((CAST(((((((rt1.c6)AND(rt1.c1)))AND(rt1.c5)))OR(0.7247353960127934)) AS INTEGER))AND(rt1.c2))) ORDER BY CAST(rt1.c1 AS NUMERIC)  NULLS FIRST, rt1.c6 ASC LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE (((CAST('%' AS NUMERIC)) BETWEEN (((rt1.c3) ISNULL)) AND ((NOT (rt1.c3))))) ORDER BY CAST(rt1.c1 AS NUMERIC)  NULLS FIRST, rt1.c6 ASC LIMIT 1;
SELECT ALL * FROM t0 WHERE (((((t0.c3)<<('1664405135')))LIKE(CAST(t0.c2 AS INTEGER)))) ORDER BY ((((CASE WHEN t0.c2 THEN t0.c4 WHEN t0.c0 THEN t0.c4 WHEN t0.c3 THEN t0.c4 END)OR(CAST(t0.c0 AS BLOB))))OR(t0.c0 COLLATE RTRIM)) ASC;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c3)<<('1664405135')))LIKE(CAST(t0.c2 AS INTEGER))))AND(CASE json_patch(t0.c0, t0.c2)  WHEN TYPEOF(t0.c1) THEN ((t0.c4) BETWEEN (t0.c1) AND (t0.c3)) END))) ORDER BY ((t0.c2 IN (t0.c4)) IN ())  NULLS LAST, ((UNLIKELY(x'a57308'))|(CAST(t0.c3 AS REAL))) DESC, TRIM(DISTINCT ((t0.c2) BETWEEN ('.o') AND (t0.c2))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c3)==(t0.c3)))!=(((((((t0.c1)OR('-883143184')))OR(t0.c1)))AND(t0.c3))))) ORDER BY ((t0.c2 IN (t0.c4)) IN ())  NULLS LAST, ((UNLIKELY(x'a57308'))|(CAST(t0.c3 AS REAL))) DESC, TRIM(DISTINCT ((t0.c2) BETWEEN ('.o') AND (t0.c2))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c3)<<('1664405135')))LIKE(CAST(t0.c2 AS INTEGER)))) ORDER BY ((((CASE WHEN t0.c2 THEN t0.c4 WHEN t0.c0 THEN t0.c4 WHEN t0.c3 THEN t0.c4 END)OR(CAST(t0.c0 AS BLOB))))OR(t0.c0 COLLATE RTRIM)) ASC;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c3)<<('1664405135')))LIKE(CAST(t0.c2 AS INTEGER))))AND(CASE json_patch(t0.c0, t0.c2)  WHEN TYPEOF(t0.c1) THEN ((t0.c4) BETWEEN (t0.c1) AND (t0.c3)) END))) ORDER BY ((t0.c2 IN (t0.c4)) IN ())  NULLS LAST, ((UNLIKELY(x'a57308'))|(CAST(t0.c3 AS REAL))) DESC, TRIM(DISTINCT ((t0.c2) BETWEEN ('.o') AND (t0.c2))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c3)==(t0.c3)))!=(((((((t0.c1)OR('-883143184')))OR(t0.c1)))AND(t0.c3))))) ORDER BY ((t0.c2 IN (t0.c4)) IN ())  NULLS LAST, ((UNLIKELY(x'a57308'))|(CAST(t0.c3 AS REAL))) DESC, TRIM(DISTINCT ((t0.c2) BETWEEN ('.o') AND (t0.c2))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((~ (CAST(t0.c4 AS INTEGER)))) ORDER BY ((t0.c3 COLLATE NOCASE)-(t0.c1 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((~ (CAST(t0.c4 AS INTEGER)))) ORDER BY (((((t0.c4 IN (x'bfd9')))OR(t0.c3)))AND(x'')), ((t0.c3)||((t0.c2 IN (t0.c0, t0.c2)))) DESC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (CAST((NOT (t0.c3)) AS REAL)) ORDER BY (((((t0.c4 IN (x'bfd9')))OR(t0.c3)))AND(x'')), ((t0.c3)||((t0.c2 IN (t0.c0, t0.c2)))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((~ (CAST(t0.c4 AS INTEGER)))) ORDER BY ((t0.c3 COLLATE NOCASE)-(t0.c1 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((~ (CAST(t0.c4 AS INTEGER)))) ORDER BY (((((t0.c4 IN (x'bfd9')))OR(t0.c3)))AND(x'')), ((t0.c3)||((t0.c2 IN (t0.c0, t0.c2)))) DESC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (CAST((NOT (t0.c3)) AS REAL)) ORDER BY (((((t0.c4 IN (x'bfd9')))OR(t0.c3)))AND(x'')), ((t0.c3)||((t0.c2 IN (t0.c0, t0.c2)))) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c5)) NOT BETWEEN ((CAST(0.7811797929712536 AS NUMERIC))) AND ((CAST(rt1.c3 AS TEXT))))) ORDER BY (((((rt1.c2)AND(rt1.c4)))AND(rt1.c6)) IN ())  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c5)) NOT BETWEEN ((CAST(0.7811797929712536 AS NUMERIC))) AND ((CAST(rt1.c3 AS TEXT))))) ORDER BY 0.4443166364993092 ASC  NULLS LAST, ((rt1.c4 COLLATE RTRIM)GLOB(0.7287235918995618)) DESC  NULLS FIRST LIMIT 2;
SELECT * FROM rt1 WHERE ((((rt1.c5)) NOT BETWEEN ((CAST(0.7811797929712536 AS NUMERIC))) AND ((CAST(rt1.c3 AS TEXT))))) ORDER BY (((((rt1.c2)AND(rt1.c4)))AND(rt1.c6)) IN ())  NULLS FIRST;
SELECT ALL MAX(t0.c1) FROM t0 WHERE (((x'')>(t0.c4)));
SELECT DISTINCT MAX(t0.c1) FROM t0 WHERE (((x'')>(t0.c4))) ORDER BY ((((t0.c1)GLOB(t0.c3))) IS FALSE) DESC, ((t0.c1 COLLATE RTRIM) NOT BETWEEN (t0.c1 COLLATE BINARY) AND (0.7179479712691657)) ASC  NULLS FIRST, ((((t0.c0)<<(t0.c1)))<=(t0.c4));
SELECT ALL * FROM rt1, t0 WHERE (((((((CAST(rt1.c2 AS INTEGER))OR(((rt1.c2)>(rt1.c1)))))OR(((rt1.c0) BETWEEN (rt1.c4) AND (NULL)))))OR(rt1.c1))) ORDER BY ((CAST(t0.c4 AS TEXT))+(((t0.c1) ISNULL))) ASC  NULLS LAST, ((x'ff83')-(((t0.c3) IS FALSE)))  NULLS LAST, ((((t0.c3) IS FALSE)) NOT NULL)  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (((((((((CAST(rt1.c2 AS INTEGER))OR(((rt1.c2)>(rt1.c1)))))OR(((rt1.c0) BETWEEN (rt1.c4) AND (NULL)))))OR(rt1.c1)))AND(TYPEOF(((rt1.c0) IS FALSE))))) ORDER BY ((((((((CASE rt1.c6  WHEN rt1.c6 THEN rt1.c0 WHEN t0.c3 THEN 0.16686556217857063 WHEN rt1.c0 THEN rt1.c5 END)AND(CASE WHEN t0.c4 THEN rt1.c2 ELSE rt1.c0 END)))OR(((((rt1.c3)AND(t0.c3)))OR(rt1.c4)))))OR(((0.9984498440341764)>(rt1.c6)))))OR(((('')) NOT BETWEEN ((t0.c3)) AND ((rt1.c2))))) LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (((((((CAST(rt1.c2 AS INTEGER))OR(((rt1.c2)>(rt1.c1)))))OR(((rt1.c0) BETWEEN (rt1.c4) AND (NULL)))))OR(rt1.c1))) ORDER BY ((CAST(t0.c4 AS TEXT))+(((t0.c1) ISNULL))) ASC  NULLS LAST, ((x'ff83')-(((t0.c3) IS FALSE)))  NULLS LAST, ((((t0.c3) IS FALSE)) NOT NULL)  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (((((((((CAST(rt1.c2 AS INTEGER))OR(((rt1.c2)>(rt1.c1)))))OR(((rt1.c0) BETWEEN (rt1.c4) AND (NULL)))))OR(rt1.c1)))AND(TYPEOF(((rt1.c0) IS FALSE))))) ORDER BY ((((((((CASE rt1.c6  WHEN rt1.c6 THEN rt1.c0 WHEN t0.c3 THEN 0.16686556217857063 WHEN rt1.c0 THEN rt1.c5 END)AND(CASE WHEN t0.c4 THEN rt1.c2 ELSE rt1.c0 END)))OR(((((rt1.c3)AND(t0.c3)))OR(rt1.c4)))))OR(((0.9984498440341764)>(rt1.c6)))))OR(((('')) NOT BETWEEN ((t0.c3)) AND ((rt1.c2))))) LIMIT 0;
SELECT MIN(t0.c4) FROM rt1 INNER JOIN t0 ON t0.c1 WHERE (CAST(((t0.c0) IS TRUE) AS NUMERIC));
SELECT ALL MIN(t0.c4) FROM rt1 INNER JOIN t0 ON t0.c1 WHERE (CAST(((t0.c0) IS TRUE) AS NUMERIC)) LIMIT 2 INTERSECT SELECT MIN(t0.c4) FROM rt1 INNER JOIN t0 ON t0.c1 WHERE (((rt1.c5) NOTNULL) COLLATE RTRIM) LIMIT 2;
SELECT ALL * FROM rt1 WHERE (CASE UNLIKELY(rt1.c5)  WHEN ((((((0.4696060645223512)OR(rt1.c3)))AND(rt1.c5)))OR(rt1.c4)) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c3 ELSE x'' END WHEN CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 END THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c5 THEN NULL WHEN rt1.c1 THEN rt1.c3 END ELSE rt1.c4 COLLATE NOCASE END);
SELECT DISTINCT * FROM rt1 WHERE (CASE UNLIKELY(rt1.c5)  WHEN ((((((0.4696060645223512)OR(rt1.c3)))AND(rt1.c5)))OR(rt1.c4)) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c3 ELSE x'' END WHEN CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 END THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c5 THEN NULL WHEN rt1.c1 THEN rt1.c3 END ELSE rt1.c4 COLLATE NOCASE END) ORDER BY ((rtreenode(rt1.c1, x'')) NOT NULL)  NULLS LAST, ((((rt1.c3)>(rt1.c2))) IS TRUE) DESC, ((rt1.c2)|(((((rt1.c2)AND(rt1.c6)))AND(rt1.c3)))) ASC LIMIT 0X3;
SELECT ALL * FROM rt1 WHERE (CASE UNLIKELY(rt1.c5)  WHEN ((((((0.4696060645223512)OR(rt1.c3)))AND(rt1.c5)))OR(rt1.c4)) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c3 ELSE x'' END WHEN CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 END THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c5 THEN NULL WHEN rt1.c1 THEN rt1.c3 END ELSE rt1.c4 COLLATE NOCASE END);
SELECT DISTINCT * FROM rt1 WHERE (CASE UNLIKELY(rt1.c5)  WHEN ((((((0.4696060645223512)OR(rt1.c3)))AND(rt1.c5)))OR(rt1.c4)) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c3 ELSE x'' END WHEN CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 END THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c5 THEN NULL WHEN rt1.c1 THEN rt1.c3 END ELSE rt1.c4 COLLATE NOCASE END) ORDER BY ((rtreenode(rt1.c1, x'')) NOT NULL)  NULLS LAST, ((((rt1.c3)>(rt1.c2))) IS TRUE) DESC, ((rt1.c2)|(((((rt1.c2)AND(rt1.c6)))AND(rt1.c3)))) ASC LIMIT 0X3;
SELECT * FROM t0 WHERE (((((t0.c0)AND(((t0.c1)>=(t0.c3)))))AND(((t0.c2)==(t0.c1))))) ORDER BY ((t0.c1 COLLATE BINARY) NOT BETWEEN (INSTR(t0.c4, t0.c2)) AND ((((t0.c2, t0.c0, t0.c0, t0.c4, t0.c1))<((t0.c1, '0.5286396087382006', t0.c0, t0.c3, t0.c3))))), ((((((((t0.c1)OR(t0.c2)))AND(t0.c2)))OR(t0.c1)))IS(((t0.c4)<(t0.c2))));
SELECT ALL * FROM t0 WHERE (((((t0.c0)AND(((t0.c1)=(t0.c3)))))AND(((t0.c2)=(t0.c1))))) ORDER BY (+ (t0.c2)) COLLATE RTRIM DESC, CASE (t0.c2 IN (t0.c3, t0.c0, t0.c3))  WHEN t0.c1 COLLATE RTRIM THEN CASE WHEN t0.c4 THEN t0.c3 WHEN t0.c2 THEN t0.c1 ELSE t0.c4 END WHEN ((0.46669724002106605)%(t0.c1)) THEN CAST(t0.c2 AS BLOB) END  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c2)LIKE(t0.c1))) BETWEEN ((t0.c3 IN ())) AND (CAST(t0.c0 AS NUMERIC)))) ORDER BY (+ (t0.c2)) COLLATE RTRIM DESC, CASE (t0.c2 IN (t0.c3, t0.c0, t0.c3))  WHEN t0.c1 COLLATE RTRIM THEN CASE WHEN t0.c4 THEN t0.c3 WHEN t0.c2 THEN t0.c1 ELSE t0.c4 END WHEN ((0.46669724002106605)%(t0.c1)) THEN CAST(t0.c2 AS BLOB) END  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (((((t0.c0)AND(((t0.c1)>=(t0.c3)))))AND(((t0.c2)==(t0.c1))))) ORDER BY ((t0.c1 COLLATE BINARY) NOT BETWEEN (INSTR(t0.c4, t0.c2)) AND ((((t0.c2, t0.c0, t0.c0, t0.c4, t0.c1))<((t0.c1, '0.5286396087382006', t0.c0, t0.c3, t0.c3))))), ((((((((t0.c1)OR(t0.c2)))AND(t0.c2)))OR(t0.c1)))IS(((t0.c4)<(t0.c2))));
SELECT ALL * FROM t0 WHERE (((((t0.c0)AND(((t0.c1)=(t0.c3)))))AND(((t0.c2)=(t0.c1))))) ORDER BY (+ (t0.c2)) COLLATE RTRIM DESC, CASE (t0.c2 IN (t0.c3, t0.c0, t0.c3))  WHEN t0.c1 COLLATE RTRIM THEN CASE WHEN t0.c4 THEN t0.c3 WHEN t0.c2 THEN t0.c1 ELSE t0.c4 END WHEN ((0.46669724002106605)%(t0.c1)) THEN CAST(t0.c2 AS BLOB) END  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c2)LIKE(t0.c1))) BETWEEN ((t0.c3 IN ())) AND (CAST(t0.c0 AS NUMERIC)))) ORDER BY (+ (t0.c2)) COLLATE RTRIM DESC, CASE (t0.c2 IN (t0.c3, t0.c0, t0.c3))  WHEN t0.c1 COLLATE RTRIM THEN CASE WHEN t0.c4 THEN t0.c3 WHEN t0.c2 THEN t0.c1 ELSE t0.c4 END WHEN ((0.46669724002106605)%(t0.c1)) THEN CAST(t0.c2 AS BLOB) END  NULLS FIRST LIMIT 0;
SELECT * FROM rt1, t0 WHERE (CASE (+ (rt1.c0))  WHEN ((t0.c2) NOTNULL) THEN ((rt1.c6)*(rt1.c4)) WHEN NULLIF(DISTINCT x'b811', t0.c1) THEN CAST(t0.c3 AS REAL) WHEN rt1.c0 COLLATE RTRIM THEN CASE rt1.c4  WHEN rt1.c1 THEN t0.c1 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c4 END ELSE t0.c4 END) ORDER BY ((((rt1.c0) IS FALSE)) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (CASE (+ (rt1.c0))  WHEN ((t0.c2) NOTNULL) THEN ((rt1.c6)*(rt1.c4)) WHEN NULLIF(DISTINCT x'b811', t0.c1) THEN CAST(t0.c3 AS REAL) WHEN rt1.c0 COLLATE RTRIM THEN CASE rt1.c4  WHEN rt1.c1 THEN t0.c1 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c4 END ELSE t0.c4 END) ORDER BY ((((rt1.c0) IS FALSE)) IS FALSE)  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM rt1, t0 WHERE (NULL) ORDER BY ((((rt1.c0) IS FALSE)) IS FALSE)  NULLS FIRST LIMIT 0X1;
SELECT * FROM rt1, t0 WHERE (CASE (+ (rt1.c0))  WHEN ((t0.c2) NOTNULL) THEN ((rt1.c6)*(rt1.c4)) WHEN NULLIF(DISTINCT x'b811', t0.c1) THEN CAST(t0.c3 AS REAL) WHEN rt1.c0 COLLATE RTRIM THEN CASE rt1.c4  WHEN rt1.c1 THEN t0.c1 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c4 END ELSE t0.c4 END) ORDER BY ((((rt1.c0) IS FALSE)) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (CASE (+ (rt1.c0))  WHEN ((t0.c2) NOTNULL) THEN ((rt1.c6)*(rt1.c4)) WHEN NULLIF(DISTINCT x'b811', t0.c1) THEN CAST(t0.c3 AS REAL) WHEN rt1.c0 COLLATE RTRIM THEN CASE rt1.c4  WHEN rt1.c1 THEN t0.c1 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c4 END ELSE t0.c4 END) ORDER BY ((((rt1.c0) IS FALSE)) IS FALSE)  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM rt1, t0 WHERE (NULL) ORDER BY ((((rt1.c0) IS FALSE)) IS FALSE)  NULLS FIRST LIMIT 0X1;
SELECT COUNT(*) FROM t0 WHERE ((NOT ((((t0.c0, t0.c3))<=((t0.c3, t0.c1)))))) ORDER BY ((((t0.c3) BETWEEN ('H') AND (t0.c0))) IS TRUE) DESC  NULLS LAST, (((+ (t0.c2)))>=(GLOB(0.9587399466525067, t0.c4)))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((NOT ((((t0.c0, t0.c3))<=((t0.c3, t0.c1))))))AND(((((t0.c4, t0.c4, t0.c3))==((t0.c3, t0.c3, t0.c3))) IN (((t0.c0) IS TRUE)))))) ORDER BY HEX((((t0.c0, t0.c3, 0xffffffffba36d8a8, t0.c3)) NOT BETWEEN ((t0.c0, t0.c3, t0.c4, t0.c0)) AND ((t0.c0, t0.c1, t0.c3, x''))))  NULLS LAST, (NOT ((NOT (t0.c2))))  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (CASE (~ (t0.c3))  WHEN t0.c0 COLLATE BINARY THEN ((t0.c2)/(t0.c2)) ELSE t0.c1 END) ORDER BY HEX((((t0.c0, t0.c3, 0xffffffffba36d8a8, t0.c3)) NOT BETWEEN ((t0.c0, t0.c3, t0.c4, t0.c0)) AND ((t0.c0, t0.c1, t0.c3, x''))))  NULLS LAST, (NOT ((NOT (t0.c2))))  NULLS LAST LIMIT 2;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN (((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN (((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0))))) ORDER BY ((((((t0.c2)AND(t0.c0)))AND(t0.c2))) ISNULL) ASC, ((((((((t0.c4)*(t0.c2)))OR((t0.c0 IN ()))))OR(((((((t0.c4)OR(t0.c3)))AND(t0.c0)))OR(t0.c0)))))AND((t0.c1 IN ()))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN (((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN (((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0))))) ORDER BY ((((((t0.c2)AND(t0.c0)))AND(t0.c2))) ISNULL) ASC, ((((((((t0.c4)*(t0.c2)))OR((t0.c0 IN ()))))OR(((((((t0.c4)OR(t0.c3)))AND(t0.c0)))OR(t0.c0)))))AND((t0.c1 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((((((((CASE rt1.c4  WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 END)OR(((rt1.c3) NOTNULL))))OR((((((((((((('CneXg?&{6')OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c6)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c5)))))OR(CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c6 WHEN NULL THEN rt1.c1 END)))AND(((rt1.c6)*(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((CASE rt1.c4  WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 END)OR(((rt1.c3) NOTNULL))))OR((((((((((((('CneXg?&{6')OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c6)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c5)))))OR(CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c6 WHEN NULL THEN rt1.c1 END)))AND(((rt1.c6)*(rt1.c1))))) ORDER BY -248273772  NULLS LAST, (('-774143344')<=((rt1.c2 IN ()))) ASC;
SELECT ALL * FROM rt1 WHERE (CAST((+ (rt1.c5)) AS BLOB));
SELECT * FROM rt1 WHERE (((CAST((+ (rt1.c5)) AS BLOB))AND(((- ('mRp!cw')) IN ())))) ORDER BY ((json_array_length(rt1.c2, rt1.c2))<=(COALESCE(DISTINCT rt1.c3, rt1.c4, rt1.c3))) DESC, rt1.c5 DESC;
SELECT ALL * FROM rt1 WHERE (CAST((+ (rt1.c5)) AS BLOB));
SELECT * FROM rt1 WHERE (((CAST((+ (rt1.c5)) AS BLOB))AND(((- ('mRp!cw')) IN ())))) ORDER BY ((json_array_length(rt1.c2, rt1.c2))<=(COALESCE(DISTINCT rt1.c3, rt1.c4, rt1.c3))) DESC, rt1.c5 DESC;
SELECT ALL * FROM t0 WHERE (((COALESCE(DISTINCT t0.c2, t0.c2, t0.c2)) NOT NULL));
SELECT ALL * FROM t0 WHERE (((((COALESCE(DISTINCT t0.c2, t0.c2, t0.c2)) NOT NULL))AND((((t0.c1 IN ()))>=((NOT (t0.c4))))))) ORDER BY CAST(t0.c0 AS REAL) ASC, ((t0.c1) BETWEEN ((('-1340954902') NOT NULL)) AND (((t0.c0) BETWEEN (t0.c4) AND (t0.c4)))), (((((t0.c3))>((t0.c3))))<<((0.8581096796318329 IN ()))) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE RTRIM)<(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c4))))) ORDER BY CAST(t0.c0 AS REAL) ASC, ((t0.c1) BETWEEN ((('-1340954902') NOT NULL)) AND (((t0.c0) BETWEEN (t0.c4) AND (t0.c4)))), (((((t0.c3))>((t0.c3))))<<((0.8581096796318329 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((COALESCE(DISTINCT t0.c2, t0.c2, t0.c2)) NOT NULL));
SELECT ALL * FROM t0 WHERE (((((COALESCE(DISTINCT t0.c2, t0.c2, t0.c2)) NOT NULL))AND((((t0.c1 IN ()))>=((NOT (t0.c4))))))) ORDER BY CAST(t0.c0 AS REAL) ASC, ((t0.c1) BETWEEN ((('-1340954902') NOT NULL)) AND (((t0.c0) BETWEEN (t0.c4) AND (t0.c4)))), (((((t0.c3))>((t0.c3))))<<((0.8581096796318329 IN ()))) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE RTRIM)<(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c4))))) ORDER BY CAST(t0.c0 AS REAL) ASC, ((t0.c1) BETWEEN ((('-1340954902') NOT NULL)) AND (((t0.c0) BETWEEN (t0.c4) AND (t0.c4)))), (((((t0.c3))>((t0.c3))))<<((0.8581096796318329 IN ()))) ASC  NULLS FIRST;
SELECT ALL MIN(rt1.c2) FROM rt1 WHERE (rt1.c5) ORDER BY (((- (rt1.c0))) NOTNULL)  NULLS LAST, LOWER(DISTINCT ((rt1.c0) NOT NULL))  NULLS LAST, ((CAST(rt1.c5 AS BLOB)) BETWEEN (rt1.c6 COLLATE RTRIM) AND (rt1.c2 COLLATE BINARY));
SELECT MIN(rt1.c2) FROM rt1 WHERE (rt1.c5) ORDER BY ((CASE rt1.c6  WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c6 END) IS FALSE), CASE CAST(rt1.c2 AS NUMERIC)  WHEN rt1.c2 THEN ((NULL)<(rt1.c0)) WHEN ((((((rt1.c0)OR(rt1.c5)))AND(rt1.c1)))OR(rt1.c5)) THEN (~ (rt1.c6)) END ASC  NULLS FIRST, ((rt1.c3 COLLATE NOCASE) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 WHEN x'74bb' THEN rt1.c1 END) AND ((rt1.c0 IN (rt1.c4, x'9e9c3b', rt1.c0)))) DESC  NULLS FIRST LIMIT 0x3;
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)|(rt1.c5)) AS TEXT));
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)|(rt1.c5)) AS TEXT)) INTERSECT SELECT ALL COUNT(*) FROM rt1 WHERE (TYPEOF(rt1.c2));
SELECT MAX(t0.c0) FROM t0, rt1 WHERE ((x'' IN ()));
SELECT DISTINCT MAX(t0.c0) FROM t0, rt1 WHERE ((((x'' IN ()))AND((+ (COALESCE(DISTINCT rt1.c6, rt1.c0, rt1.c4)))))) LIMIT 1;
SELECT MIN(t0.c3) FROM t0 WHERE (t0.c1);
SELECT DISTINCT MIN(t0.c3) FROM t0 WHERE (((t0.c1)AND(((((((t0.c1)AND(t0.c1)))AND(x'')))AND(t0.c2)) COLLATE BINARY))) INTERSECT SELECT DISTINCT MIN(t0.c3) FROM t0 WHERE (CASE CAST(t0.c3 AS BLOB)  WHEN t0.c4 THEN CAST(t0.c2 AS BLOB) END);
SELECT MIN(rt1.c3) FROM rt1, t0 WHERE (rt1.c0) ORDER BY (('O(') NOT BETWEEN (LOWER(t0.c2)) AND ((+ (rt1.c3)))) ASC, (((t0.c1, t0.c0, t0.c3, t0.c0))=((rt1.c4, rt1.c2, rt1.c2, t0.c0))) COLLATE BINARY ASC;
SELECT ALL MIN(rt1.c3) FROM rt1, t0 WHERE (((rt1.c0)AND(((NULL)|(rt1.c0 COLLATE RTRIM))))) ORDER BY ((((t0.c0)GLOB(rt1.c2))) IS TRUE) INTERSECT SELECT ALL MIN(rt1.c3) FROM rt1 NOT INDEXED, t0 WHERE (((((((CASE WHEN t0.c2 THEN rt1.c3 END)OR(t0.c0)))AND('K,E 붠s')))AND(rt1.c5 COLLATE NOCASE))) ORDER BY ((((t0.c0)GLOB(rt1.c2))) IS TRUE);
SELECT ALL MAX(t0.c1) FROM t0 WHERE (LIKELY(((t0.c4)AND(t0.c4))));
SELECT MAX(t0.c1) FROM t0 WHERE (LIKELY(((t0.c4)AND(t0.c4)))) ORDER BY IFNULL((t0.c2 IN ()), '-1675530015'), (((t0.c4 IN ()))<(((((((((((((t0.c1)AND(1012605807)))AND(t0.c3)))AND(t0.c2)))OR(t0.c2)))OR(t0.c4)))OR(NULL)))) LIMIT 1 INTERSECT SELECT ALL MAX(t0.c1) FROM t0 WHERE (LIKE((~ (t0.c4)), ((t0.c4)>>(t0.c2)), '~')) ORDER BY IFNULL((t0.c2 IN ()), '-1675530015'), (((t0.c4 IN ()))<(((((((((((((t0.c1)AND(1012605807)))AND(t0.c3)))AND(t0.c2)))OR(t0.c2)))OR(t0.c4)))OR(NULL)))) LIMIT 1;
SELECT ALL MAX(rt1.c1) FROM t0 INNER JOIN rt1 ON json(rt1.c0) COLLATE RTRIM WHERE (0X77da5a3b);
SELECT MAX(rt1.c1) FROM t0 INNER JOIN rt1 ON json(rt1.c0) COLLATE RTRIM WHERE (0X77da5a3b) LIMIT 0X0;
SELECT * FROM rt1 WHERE ((((((rt1.c3))<=((0.5789117370558894)))) NOT NULL)) ORDER BY (((((rt1.c1, x'55')) BETWEEN ((rt1.c1, rt1.c2)) AND ((x'08', '*/')))) BETWEEN ((- (rt1.c0))) AND ((rt1.c3 IN (rt1.c5)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c3))=((0.5789117370558894)))) NOT NULL))AND(rt1.c6))) ORDER BY (((((rt1.c1, x'55')) BETWEEN ((rt1.c1, rt1.c2)) AND ((x'08', '*/')))) BETWEEN ((- (rt1.c0))) AND ((rt1.c3 IN (rt1.c5)))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM rt1 WHERE ((~ (rt1.c1))) ORDER BY (((((rt1.c1, x'55')) BETWEEN ((rt1.c1, rt1.c2)) AND ((x'08', '*/')))) BETWEEN ((- (rt1.c0))) AND ((rt1.c3 IN (rt1.c5)))) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM rt1 WHERE ((((((rt1.c3))<=((0.5789117370558894)))) NOT NULL)) ORDER BY (((((rt1.c1, x'55')) BETWEEN ((rt1.c1, rt1.c2)) AND ((x'08', '*/')))) BETWEEN ((- (rt1.c0))) AND ((rt1.c3 IN (rt1.c5)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c3))=((0.5789117370558894)))) NOT NULL))AND(rt1.c6))) ORDER BY (((((rt1.c1, x'55')) BETWEEN ((rt1.c1, rt1.c2)) AND ((x'08', '*/')))) BETWEEN ((- (rt1.c0))) AND ((rt1.c3 IN (rt1.c5)))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM rt1 WHERE ((~ (rt1.c1))) ORDER BY (((((rt1.c1, x'55')) BETWEEN ((rt1.c1, rt1.c2)) AND ((x'08', '*/')))) BETWEEN ((- (rt1.c0))) AND ((rt1.c3 IN (rt1.c5)))) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM rt1, t0 WHERE (((NULL) NOT NULL)) ORDER BY (((('3/R[wqz')/(t0.c4)))<(((rt1.c4) NOT BETWEEN (0x7487a598) AND (t0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((NULL) NOT NULL)) ORDER BY ((rt1.c3)||(LIKELY(x'96cc')))  NULLS FIRST LIMIT 0;
SELECT * FROM rt1, t0 WHERE (((NULL) NOT NULL)) ORDER BY (((('3/R[wqz')/(t0.c4)))<(((rt1.c4) NOT BETWEEN (0x7487a598) AND (t0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((NULL) NOT NULL)) ORDER BY ((rt1.c3)||(LIKELY(x'96cc')))  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (CAST(((((((((t0.c0)OR(0Xffffffff94206220)))AND(t0.c1)))AND(t0.c1)))AND(t0.c0)) AS TEXT)) ORDER BY ((((t0.c4) BETWEEN (t0.c3) AND (t0.c0))) BETWEEN (0X75564a6b COLLATE NOCASE) AND (CASE t0.c1  WHEN t0.c0 THEN t0.c2 END)) ASC  NULLS LAST, t0.c2 DESC;
SELECT ALL * FROM t0 WHERE (CAST(((((((((t0.c0)OR(0Xffffffff94206220)))AND(t0.c1)))AND(t0.c1)))AND(t0.c0)) AS TEXT)) ORDER BY ((((t0.c4) BETWEEN (t0.c3) AND (t0.c0))) BETWEEN (0x75564a6b COLLATE NOCASE) AND (CASE t0.c1  WHEN t0.c0 THEN t0.c2 END)) ASC  NULLS LAST, t0.c2 DESC LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c4)))OR(((t0.c0) BETWEEN (t0.c3) AND (t0.c2))))) ORDER BY ((((t0.c4) BETWEEN (t0.c3) AND (t0.c0))) BETWEEN (0x75564a6b COLLATE NOCASE) AND (CASE t0.c1  WHEN t0.c0 THEN t0.c2 END)) ASC  NULLS LAST, t0.c2 DESC LIMIT 0X0;
SELECT * FROM t0 WHERE (CAST(((((((((t0.c0)OR(0Xffffffff94206220)))AND(t0.c1)))AND(t0.c1)))AND(t0.c0)) AS TEXT)) ORDER BY ((((t0.c4) BETWEEN (t0.c3) AND (t0.c0))) BETWEEN (0X75564a6b COLLATE NOCASE) AND (CASE t0.c1  WHEN t0.c0 THEN t0.c2 END)) ASC  NULLS LAST, t0.c2 DESC;
SELECT ALL * FROM t0 WHERE (CAST(((((((((t0.c0)OR(0Xffffffff94206220)))AND(t0.c1)))AND(t0.c1)))AND(t0.c0)) AS TEXT)) ORDER BY ((((t0.c4) BETWEEN (t0.c3) AND (t0.c0))) BETWEEN (0x75564a6b COLLATE NOCASE) AND (CASE t0.c1  WHEN t0.c0 THEN t0.c2 END)) ASC  NULLS LAST, t0.c2 DESC LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c4)))OR(((t0.c0) BETWEEN (t0.c3) AND (t0.c2))))) ORDER BY ((((t0.c4) BETWEEN (t0.c3) AND (t0.c0))) BETWEEN (0x75564a6b COLLATE NOCASE) AND (CASE t0.c1  WHEN t0.c0 THEN t0.c2 END)) ASC  NULLS LAST, t0.c2 DESC LIMIT 0X0;
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN CASE t0.c4  WHEN t0.c4 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END END);
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN t0.c0 THEN CASE t0.c4  WHEN t0.c4 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END END) LIMIT 0X0;
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN CASE t0.c4  WHEN t0.c4 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END END);
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN t0.c0 THEN CASE t0.c4  WHEN t0.c4 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END END) LIMIT 0X0;
SELECT * FROM t0 WHERE (CASE WHEN t0.c4 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c4 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE)AND(((((LIKELY(t0.c2))AND(x'60')))OR(((((t0.c0)OR(x'a7641c')))OR(t0.c0))))))) LIMIT 0X2;
SELECT * FROM t0 WHERE (CASE WHEN t0.c4 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c4 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE)AND(((((LIKELY(t0.c2))AND(x'60')))OR(((((t0.c0)OR(x'a7641c')))OR(t0.c0))))))) LIMIT 0X2;
SELECT ALL MIN(rt1.c4) FROM rt1 INNER JOIN t0 ON ((((rt1.c2) NOT NULL)) NOT NULL) WHERE (((((((t0.c1)OR(CAST(rt1.c5 AS NUMERIC))))OR((NOT (8.82744025E8)))))OR(rt1.c2)));
SELECT DISTINCT MIN(rt1.c4) FROM rt1 INNER JOIN t0 ON ((((rt1.c2) NOT NULL)) NOT NULL) WHERE (((((((((t0.c1)OR(CAST(rt1.c5 AS NUMERIC))))OR((NOT (8.82744025E8)))))OR(rt1.c2)))AND(rt1.c0))) ORDER BY (((- (t0.c4))) NOT NULL)  NULLS LAST LIMIT 1;
SELECT * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((0x2bf2e3e2) NOT NULL)) LIMIT 0;
SELECT * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((0x2bf2e3e2) NOT NULL)) LIMIT 0;
SELECT MIN(rt1.c1) FROM t0 LEFT OUTER JOIN rt1 ON ((((((rt1.c6)/(rt1.c1)))AND(((t0.c4) NOT BETWEEN (NULL) AND (t0.c1)))))AND(((t0.c0)-(rt1.c1)))) WHERE ((~ ((((rt1.c0, rt1.c5, rt1.c0)) BETWEEN ((x'5f', rt1.c2, t0.c3)) AND ((rt1.c6, 0.11971803047481211, t0.c0)))))) ORDER BY (~ (t0.c0)) DESC;
SELECT MIN(rt1.c1) FROM t0 INNER JOIN rt1 ON ((((((rt1.c6)/(rt1.c1)))AND(((t0.c4) NOT BETWEEN (NULL) AND (t0.c1)))))AND(((t0.c0)-(rt1.c1)))) WHERE ((~ ((((rt1.c0, rt1.c5, rt1.c0)) BETWEEN ((x'5f', rt1.c2, t0.c3)) AND ((rt1.c6, 0.11971803047481211, t0.c0)))))) ORDER BY (~ (t0.c0)) DESC LIMIT 1 INTERSECT SELECT MIN(rt1.c1) FROM t0 NOT INDEXED INNER JOIN rt1 ON ((((((rt1.c6)/(rt1.c1)))AND(((t0.c4) NOT BETWEEN (NULL) AND (t0.c1)))))AND(((t0.c0)-(rt1.c1)))) WHERE ((((rt1.c0, rt1.c0)) NOT BETWEEN ((((t0.c2)LIKE(rt1.c1)), (('992934474')OR(t0.c2)))) AND ((((((((t0.c0)AND(t0.c2)))AND(rt1.c0)))OR(t0.c0)), QUOTE(rt1.c3))))) ORDER BY (~ (t0.c0)) DESC LIMIT 0X1;
SELECT COUNT(*) FROM t0 WHERE (rtreenode(LIKELIHOOD(t0.c2, t0.c4), CASE WHEN t0.c4 THEN t0.c3 END));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((rtreenode(LIKELIHOOD(t0.c2, t0.c4), CASE WHEN t0.c4 THEN t0.c3 END))AND((((t0.c2, (t0.c0 IN (t0.c4, t0.c3)), ((t0.c0) IS FALSE)))<=((CAST(0xffffffffea0d11ba AS BLOB), CAST(t0.c0 AS TEXT), json_remove(t0.c2, t0.c3))))))) LIMIT 0x2 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((CAST(t0.c4 AS BLOB))AND(t0.c0 COLLATE NOCASE)))AND(CAST(t0.c3 AS NUMERIC)))) LIMIT 2;
SELECT * FROM rt1, t0 WHERE (((((rt1.c2) NOTNULL))<<(((t0.c4) BETWEEN (x'') AND (rt1.c3))))) ORDER BY (((rt1.c4)<(rt1.c3)) IN ((('#Y') IS FALSE), ((((t0.c2)AND('320371796')))OR(t0.c0)))), (((((t0.c2) BETWEEN (rt1.c5) AND (rt1.c6))))<((((('-983457725'))>=((rt1.c4)))))) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c2) NOTNULL))<<(((t0.c4) BETWEEN (x'') AND (rt1.c3)))))AND((t0.c1 COLLATE NOCASE IN (LTRIM(t0.c1, t0.c2)))))) ORDER BY (((t0.c1 IN (rt1.c6, rt1.c2, t0.c1))) NOT BETWEEN (rt1.c6) AND ((((rt1.c0, rt1.c3, t0.c4))>=((x'9b06f2', rt1.c3, rt1.c4))))) DESC, (((rt1.c6)<=(rt1.c1)) IN ()) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((rt1.c1)) BETWEEN (((NOT (rt1.c2)))) AND ((t0.c0 COLLATE NOCASE)))) ORDER BY (((t0.c1 IN (rt1.c6, rt1.c2, t0.c1))) NOT BETWEEN (rt1.c6) AND ((((rt1.c0, rt1.c3, t0.c4))>=((x'9b06f2', rt1.c3, rt1.c4))))) DESC, (((rt1.c6)<=(rt1.c1)) IN ()) DESC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (((((rt1.c2) NOTNULL))<<(((t0.c4) BETWEEN (x'') AND (rt1.c3))))) ORDER BY (((rt1.c4)<(rt1.c3)) IN ((('#Y') IS FALSE), ((((t0.c2)AND('320371796')))OR(t0.c0)))), (((((t0.c2) BETWEEN (rt1.c5) AND (rt1.c6))))<((((('-983457725'))>=((rt1.c4)))))) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c2) NOTNULL))<<(((t0.c4) BETWEEN (x'') AND (rt1.c3)))))AND((t0.c1 COLLATE NOCASE IN (LTRIM(t0.c1, t0.c2)))))) ORDER BY (((t0.c1 IN (rt1.c6, rt1.c2, t0.c1))) NOT BETWEEN (rt1.c6) AND ((((rt1.c0, rt1.c3, t0.c4))>=((x'9b06f2', rt1.c3, rt1.c4))))) DESC, (((rt1.c6)<=(rt1.c1)) IN ()) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((rt1.c1)) BETWEEN (((NOT (rt1.c2)))) AND ((t0.c0 COLLATE NOCASE)))) ORDER BY (((t0.c1 IN (rt1.c6, rt1.c2, t0.c1))) NOT BETWEEN (rt1.c6) AND ((((rt1.c0, rt1.c3, t0.c4))>=((x'9b06f2', rt1.c3, rt1.c4))))) DESC, (((rt1.c6)<=(rt1.c1)) IN ()) DESC  NULLS FIRST;
SELECT MIN(t0.c2) FROM rt1, t0 WHERE (0.5396241862772608) ORDER BY (~ (((((((((t0.c4)OR(rt1.c0)))OR(rt1.c6)))OR(rt1.c3)))OR(t0.c3)))) ASC  NULLS FIRST, ((((t0.c3)||(rt1.c4))) ISNULL);
SELECT ALL MIN(t0.c2) FROM rt1, t0 WHERE (((0.5396241862772608)AND(CASE ((rt1.c5) NOT NULL)  WHEN '{￿.*ꀴoķ' THEN ((rt1.c1)-(rt1.c4)) WHEN CASE WHEN t0.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c0 END THEN (('1101841451')!=(t0.c2)) ELSE NULL END))) ORDER BY t0.c3 ASC INTERSECT SELECT ALL MIN(t0.c2) FROM rt1, t0 WHERE (CASE CASE WHEN -1.191521787E9 THEN t0.c2 ELSE rt1.c4 END  WHEN rtreenode(t0.c2, x'ef01') THEN CAST(rt1.c2 AS INTEGER) END) ORDER BY t0.c3 ASC;
SELECT * FROM rt1 WHERE (CAST('%M' AS BLOB));
SELECT DISTINCT * FROM rt1 WHERE (CAST('%M' AS BLOB)) LIMIT 0X4 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CASE ((rt1.c3) NOT BETWEEN (NULL) AND (rt1.c1))  WHEN rt1.c0 COLLATE BINARY THEN rt1.c4 COLLATE BINARY WHEN ((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c3)) THEN TRIM(rt1.c4, rt1.c1) ELSE rt1.c3 COLLATE NOCASE END) LIMIT 4;
SELECT * FROM rt1 WHERE (CAST('%M' AS BLOB));
SELECT DISTINCT * FROM rt1 WHERE (CAST('%M' AS BLOB)) LIMIT 0X4 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CASE ((rt1.c3) NOT BETWEEN (NULL) AND (rt1.c1))  WHEN rt1.c0 COLLATE BINARY THEN rt1.c4 COLLATE BINARY WHEN ((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c3)) THEN TRIM(rt1.c4, rt1.c1) ELSE rt1.c3 COLLATE NOCASE END) LIMIT 4;
SELECT * FROM rt1 WHERE (rt1.c2) ORDER BY ((((rt1.c0) NOTNULL))IS NOT(((rt1.c3)==(rt1.c5)))) DESC, ((NULL) NOT NULL)  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((rt1.c2)AND(((0.6662320098053622)<=(UNLIKELY(rt1.c0)))))) ORDER BY ((((rt1.c4)/(rt1.c6)))&(((rt1.c1)IS(rt1.c5))))  NULLS FIRST, ((((rt1.c3) NOT NULL))|(((0.4746247758212162) IS TRUE))) ASC INTERSECT SELECT ALL * FROM rt1 WHERE (LOWER(((rt1.c3) NOTNULL))) ORDER BY ((((rt1.c4)/(rt1.c6)))&(((rt1.c1)IS(rt1.c5))))  NULLS FIRST, ((((rt1.c3) NOT NULL))|(((0.4746247758212162) IS TRUE))) ASC;
SELECT * FROM rt1 WHERE (rt1.c2) ORDER BY ((((rt1.c0) NOTNULL))IS NOT(((rt1.c3)==(rt1.c5)))) DESC, ((NULL) NOT NULL)  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((rt1.c2)AND(((0.6662320098053622)<=(UNLIKELY(rt1.c0)))))) ORDER BY ((((rt1.c4)/(rt1.c6)))&(((rt1.c1)IS(rt1.c5))))  NULLS FIRST, ((((rt1.c3) NOT NULL))|(((0.4746247758212162) IS TRUE))) ASC INTERSECT SELECT ALL * FROM rt1 WHERE (LOWER(((rt1.c3) NOTNULL))) ORDER BY ((((rt1.c4)/(rt1.c6)))&(((rt1.c1)IS(rt1.c5))))  NULLS FIRST, ((((rt1.c3) NOT NULL))|(((0.4746247758212162) IS TRUE))) ASC;
SELECT MIN(t0.c1) FROM rt1, t0 WHERE (((((rt1.c6)GLOB(rt1.c5)))>=(((rt1.c6)*(rt1.c6))))) ORDER BY CAST(rt1.c5 AS REAL) ASC  NULLS LAST, (- ((- (t0.c0)))) ASC;
SELECT MIN(t0.c1) FROM rt1, t0 WHERE (((((rt1.c6)GLOB(rt1.c5)))==(((rt1.c6)*(rt1.c6))))) ORDER BY CAST(((t0.c4) NOT BETWEEN (t0.c1) AND (rt1.c6)) AS REAL) ASC  NULLS LAST, ((CASE WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c0 THEN t0.c4 WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c6 END)/(((rt1.c1) BETWEEN (rt1.c6) AND (t0.c4))))  NULLS LAST LIMIT 0X3 INTERSECT SELECT ALL MIN(t0.c1) FROM rt1, t0 WHERE (UPPER(DISTINCT (((rt1.c4, t0.c1, t0.c3))<>((t0.c0, rt1.c3, t0.c4))))) ORDER BY CAST(((t0.c4) NOT BETWEEN (t0.c1) AND (rt1.c6)) AS REAL) ASC  NULLS LAST, ((CASE WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c0 THEN t0.c4 WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c6 END)/(((rt1.c1) BETWEEN (rt1.c6) AND (t0.c4))))  NULLS LAST LIMIT 0X3;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1, rt1.c4 COLLATE RTRIM))=((rt1.c6 COLLATE RTRIM, (~ (rt1.c4)))))) ORDER BY (((((((rt1.c3)OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c4)) IN ((('-108686323')OR(rt1.c0))));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((rt1.c1, rt1.c4 COLLATE RTRIM))=((rt1.c6 COLLATE RTRIM, (~ (rt1.c4)))))) ORDER BY ((rt1.c2 COLLATE RTRIM) IS TRUE)  NULLS LAST, CAST(((rt1.c2)<<(rt1.c0)) AS REAL) DESC  NULLS LAST, rt1.c4, ((((rt1.c6)GLOB(rt1.c0))) IS TRUE)  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (TRIM(DISTINCT (rt1.c0 IN ()), ((rt1.c1) IS FALSE))) ORDER BY ((rt1.c2 COLLATE RTRIM) IS TRUE)  NULLS LAST, CAST(((rt1.c2)<<(rt1.c0)) AS REAL) DESC  NULLS LAST, rt1.c4, ((((rt1.c6)GLOB(rt1.c0))) IS TRUE)  NULLS FIRST LIMIT 2;
SELECT * FROM rt1 WHERE (((((((rt1.c1 COLLATE NOCASE)OR(((((((((((rt1.c5)AND(rt1.c5)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c3)))OR(rt1.c0)))))OR(x'')))OR((x'' IN ())))) ORDER BY HEX(((rt1.c6)OR(rt1.c6))), ((((((0.9708679204258303) IS FALSE))OR(CASE rt1.c0  WHEN rt1.c3 THEN '-1675530015' WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c4 END)))AND(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c6)))OR(rt1.c0)))OR('1967614267')))), (((((rt1.c4, rt1.c4))<=((rt1.c5, rt1.c1))))LIKE(LIKELIHOOD(rt1.c6, rt1.c0))) ASC;
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c1 COLLATE NOCASE)OR(((((((((((rt1.c5)AND(rt1.c5)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c3)))OR(rt1.c0)))))OR(x'')))OR((x'' IN ()))))AND('-1665136082'))) ORDER BY HEX(((rt1.c6)OR(rt1.c6))), ((((((0.9708679204258303) IS FALSE))OR(CASE rt1.c0  WHEN rt1.c3 THEN '-1675530015' WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c4 END)))AND(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c6)))OR(rt1.c0)))OR('1967614267')))), (((((rt1.c4, rt1.c4))<=((rt1.c5, rt1.c1))))LIKE(LIKELIHOOD(rt1.c6, rt1.c0))) ASC LIMIT 3 INTERSECT SELECT ALL * FROM rt1 WHERE (((rt1.c4 IN (rt1.c0, rt1.c6)) IN (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 WHEN x'e725' THEN '-1493646128' WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c2 ELSE 0xffffffffbce50bef END, (rt1.c3 IN (rt1.c2))))) ORDER BY HEX(((rt1.c6)OR(rt1.c6))), ((((((0.9708679204258303) IS FALSE))OR(CASE rt1.c0  WHEN rt1.c3 THEN '-1675530015' WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c4 END)))AND(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c6)))OR(rt1.c0)))OR('1967614267')))), (((((rt1.c4, rt1.c4))<=((rt1.c5, rt1.c1))))LIKE(LIKELIHOOD(rt1.c6, rt1.c0))) ASC LIMIT 3;
SELECT * FROM rt1 WHERE (((((((rt1.c1 COLLATE NOCASE)OR(((((((((((rt1.c5)AND(rt1.c5)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c3)))OR(rt1.c0)))))OR(x'')))OR((x'' IN ())))) ORDER BY HEX(((rt1.c6)OR(rt1.c6))), ((((((0.9708679204258303) IS FALSE))OR(CASE rt1.c0  WHEN rt1.c3 THEN '-1675530015' WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c4 END)))AND(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c6)))OR(rt1.c0)))OR('1967614267')))), (((((rt1.c4, rt1.c4))<=((rt1.c5, rt1.c1))))LIKE(LIKELIHOOD(rt1.c6, rt1.c0))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY) BETWEEN ((t0.c0 IN ())) AND (UPPER(DISTINCT t0.c1))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0 COLLATE BINARY) BETWEEN ((t0.c0 IN ())) AND (UPPER(DISTINCT t0.c1))))AND((((t0.c3, t0.c3, t0.c3, t0.c3, t0.c3, t0.c2)) BETWEEN ((((t0.c1)OR(t0.c3)), ((((((t0.c3)OR(t0.c3)))AND(t0.c2)))OR(t0.c2)), LOWER(t0.c0), ((((t0.c4)AND(t0.c2)))OR(t0.c1)), CASE t0.c3  WHEN t0.c1 THEN t0.c3 ELSE t0.c4 END, 0x7d4b4bd6)) AND (((t0.c4 IN (t0.c2)), t0.c3 COLLATE NOCASE, ((t0.c0)IS NOT(t0.c2)), (((0.7771499410786583))<>((t0.c0))), CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c4 THEN t0.c2 WHEN t0.c2 THEN '-645228182' END, ((t0.c1)GLOB(t0.c4))))))));
SELECT MIN(rt1.c2) FROM rt1 WHERE (((rt1.c2)>>(rt1.c5)) COLLATE BINARY) ORDER BY ((((((rt1.c0))>=((rt1.c1))), rt1.c3 COLLATE NOCASE, CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 END))>(((((rt1.c5, rt1.c2, rt1.c6, 'H'))!=((rt1.c0, rt1.c0, rt1.c0, rt1.c4))), ((((((((((((rt1.c2)OR(rt1.c6)))AND(rt1.c4)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)), (~ (rt1.c6))))), ((CASE WHEN rt1.c1 THEN rt1.c5 END)|(((((((rt1.c0)AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c2)))), json_remove(CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c5 THEN x'' WHEN NULL THEN rt1.c4 ELSE rt1.c0 END, CAST(rt1.c6 AS BLOB), ((rt1.c2)IS NOT(rt1.c3)))  NULLS FIRST;
SELECT DISTINCT MIN(rt1.c2) FROM rt1 WHERE (((((rt1.c2)>>(rt1.c5)) COLLATE BINARY)AND(((((CASE rt1.c2  WHEN rt1.c0 THEN NULL WHEN rt1.c6 THEN rt1.c4 WHEN NULL THEN rt1.c3 ELSE rt1.c1 END)OR(x'59295c')))OR(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c3 END))))) ORDER BY CASE WHEN (+ (rt1.c1)) THEN rt1.c1 ELSE ((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c1)) END  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT MIN(rt1.c2) FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)|(rt1.c5 COLLATE RTRIM))) ORDER BY CASE WHEN (+ (rt1.c1)) THEN rt1.c1 ELSE ((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c1)) END  NULLS FIRST LIMIT 1;
SELECT ALL MIN(rt1.c3) FROM t0, rt1 WHERE (((((t0.c3)<>(rt1.c6))) NOT BETWEEN ((+ (t0.c2))) AND (CASE WHEN rt1.c2 THEN t0.c4 WHEN t0.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c5 END))) ORDER BY CASE WHEN IFNULL(rt1.c2, t0.c1) THEN ((((((rt1.c5)OR(t0.c4)))AND(t0.c3)))AND(t0.c1)) WHEN ((rt1.c4) IS TRUE) THEN ((t0.c4)<=(t0.c4)) WHEN (0X540288a5 IN (t0.c3)) THEN t0.c4 ELSE ((rt1.c2) NOT NULL) END DESC, NULL  NULLS LAST;
SELECT MIN(rt1.c3) FROM t0, rt1 WHERE (((((t0.c3)<>(rt1.c6))) NOT BETWEEN ((+ (t0.c2))) AND (CASE WHEN rt1.c2 THEN t0.c4 WHEN t0.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c5 END))) ORDER BY ((((rt1.c4) BETWEEN (rt1.c0) AND (t0.c4)))OR((t0.c3 IN ())))  NULLS LAST;
SELECT ALL MAX(t0.c3) FROM t0, rt1 WHERE (((('.rX	F')) BETWEEN (((t0.c2 IN ()))) AND ((t0.c3))));
SELECT DISTINCT MAX(t0.c3) FROM t0, rt1 WHERE (((((('.rX	F')) BETWEEN (((t0.c2 IN ()))) AND ((t0.c3))))AND(((- ('1934950711')) IN ())))) ORDER BY (((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c5 THEN t0.c0 WHEN t0.c3 THEN rt1.c5 ELSE rt1.c2 END, ((t0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0))))>=(((((rt1.c5, t0.c1)) NOT BETWEEN ((rt1.c3, t0.c1)) AND ((t0.c3, rt1.c0))), (((t0.c3, rt1.c3))>((rt1.c3, rt1.c6)))))) DESC LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(t0.c3) FROM t0, rt1 WHERE (CASE WHEN ((rt1.c1)<(t0.c0)) THEN CASE WHEN t0.c3 THEN rt1.c0 WHEN t0.c3 THEN rt1.c1 END WHEN ((rt1.c1)IS(t0.c0)) THEN SQLITE_SOURCE_ID() WHEN ((t0.c0) NOT NULL) THEN CAST(rt1.c4 AS NUMERIC) END) ORDER BY (((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c5 THEN t0.c0 WHEN t0.c3 THEN rt1.c5 ELSE rt1.c2 END, ((t0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0))))>=(((((rt1.c5, t0.c1)) NOT BETWEEN ((rt1.c3, t0.c1)) AND ((t0.c3, rt1.c0))), (((t0.c3, rt1.c3))>((rt1.c3, rt1.c6)))))) DESC LIMIT 0X1;
SELECT MIN(rt1.c0) FROM rt1, t0 WHERE ((rt1.c2 COLLATE BINARY IN ((((t0.c1)) BETWEEN ((t0.c2)) AND ((rt1.c4))))));
SELECT MIN(rt1.c0) FROM rt1, t0 WHERE ((rt1.c2 COLLATE BINARY IN ((((t0.c1)) BETWEEN ((t0.c2)) AND ((rt1.c4)))))) INTERSECT SELECT ALL MIN(rt1.c0) FROM rt1, t0 NOT INDEXED WHERE ((((((- (t0.c2)))AND(CASE WHEN rt1.c5 THEN rt1.c4 WHEN x'a0' THEN t0.c3 WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c3 END)))AND((('\') NOT BETWEEN (rt1.c1) AND (t0.c2)))));
SELECT ALL * FROM t0, rt1 WHERE ((- ('-547373890')));
SELECT ALL * FROM t0, rt1 WHERE ((- ('-547373890'))) ORDER BY CASE ((t0.c2) NOT BETWEEN (t0.c4) AND (rt1.c4))  WHEN ((((((rt1.c0)OR(rt1.c2)))OR(rt1.c5)))OR(rt1.c1)) THEN (t0.c1 IN (rt1.c2)) ELSE (('')*(t0.c0)) END DESC  NULLS FIRST, LOWER(((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c0)))  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE ((- ('-547373890')));
SELECT ALL * FROM t0, rt1 WHERE ((- ('-547373890'))) ORDER BY CASE ((t0.c2) NOT BETWEEN (t0.c4) AND (rt1.c4))  WHEN ((((((rt1.c0)OR(rt1.c2)))OR(rt1.c5)))OR(rt1.c1)) THEN (t0.c1 IN (rt1.c2)) ELSE (('')*(t0.c0)) END DESC  NULLS FIRST, LOWER(((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c0)))  NULLS LAST LIMIT 1;
SELECT * FROM rt1 WHERE ((~ (CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c5 END)));
SELECT DISTINCT * FROM rt1 WHERE ((~ (CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c5 END))) ORDER BY ((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)))LIKE(((rt1.c0)*(rt1.c1)))) DESC, rt1.c1 ASC, ((((((((((((rt1.c6)AND(rt1.c5)))OR(rt1.c5)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c1))) ISNULL) DESC  NULLS LAST LIMIT 0;
SELECT * FROM rt1 WHERE ((~ (CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c5 END)));
SELECT DISTINCT * FROM rt1 WHERE ((~ (CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c5 END))) ORDER BY ((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)))LIKE(((rt1.c0)*(rt1.c1)))) DESC, rt1.c1 ASC, ((((((((((((rt1.c6)AND(rt1.c5)))OR(rt1.c5)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c1))) ISNULL) DESC  NULLS LAST LIMIT 0;
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((CAST(rt1.c0 AS TEXT)) ISNULL) WHERE ((((rt1.c6)*(t0.c1)) IN ())) ORDER BY t0.c0 COLLATE BINARY, (- (((rt1.c6) NOTNULL)));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON ((CAST(rt1.c0 AS TEXT)) ISNULL) WHERE ((((((rt1.c6)*(t0.c1)) IN ()))AND((((t0.c1) IS TRUE) IN ())))) ORDER BY t0.c0 COLLATE BINARY, (- (((rt1.c6) NOTNULL))) LIMIT 1;
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((CAST(rt1.c0 AS TEXT)) ISNULL) WHERE ((((rt1.c6)*(t0.c1)) IN ())) ORDER BY t0.c0 COLLATE BINARY, (- (((rt1.c6) NOTNULL)));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON ((CAST(rt1.c0 AS TEXT)) ISNULL) WHERE ((((((rt1.c6)*(t0.c1)) IN ()))AND((((t0.c1) IS TRUE) IN ())))) ORDER BY t0.c0 COLLATE BINARY, (- (((rt1.c6) NOTNULL))) LIMIT 1;
SELECT MAX(t0.c3) FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN ((t0.c3 IN (t0.c1, t0.c4))) AND (CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c3 END)));
SELECT ALL MAX(t0.c3) FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN ((t0.c3 IN (t0.c1, t0.c4))) AND (CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c3 END))) ORDER BY ((((((((t0.c2)OR(0.07335369888507559)))AND(x'0d2b')))OR(t0.c4))) NOTNULL) INTERSECT SELECT MAX(t0.c3) FROM t0 WHERE ((t0.c0 IN (TRIM(t0.c1, t0.c3)))) ORDER BY ((((((((t0.c2)OR(0.07335369888507559)))AND(x'0d2b')))OR(t0.c4))) NOTNULL);
SELECT MIN(rt1.c4) FROM rt1 WHERE (((CAST(rt1.c6 AS TEXT))>>(LOWER(rt1.c4)))) ORDER BY CAST(((rt1.c3) NOT BETWEEN (NULL) AND (rt1.c3)) AS BLOB), CASE WHEN ((((((rt1.c2)OR(rt1.c4)))AND(rt1.c6)))OR(rt1.c0)) THEN rt1.c4 COLLATE RTRIM WHEN '1169160498' THEN ((rt1.c0)GLOB(rt1.c5)) END DESC, ((((CAST(rt1.c6 AS BLOB))AND(rt1.c4 COLLATE RTRIM)))OR(rt1.c3)) DESC;
SELECT ALL MIN(rt1.c4) FROM rt1 WHERE (((((CAST(rt1.c6 AS TEXT))>>(LOWER(rt1.c4))))AND((NOT ((rt1.c4 IN ())))))) ORDER BY (((rt1.c4 IN (rt1.c5)))<((((rt1.c2, rt1.c2, rt1.c2)) BETWEEN ((rt1.c2, rt1.c6, rt1.c1)) AND ((rt1.c5, rt1.c3, rt1.c1))))) INTERSECT SELECT MIN(rt1.c4) FROM rt1 WHERE (CAST(rt1.c5 AS INTEGER)) ORDER BY (((rt1.c4 IN (rt1.c5)))<((((rt1.c2, rt1.c2, rt1.c2)) BETWEEN ((rt1.c2, rt1.c6, rt1.c1)) AND ((rt1.c5, rt1.c3, rt1.c1)))));
SELECT * FROM rt1 WHERE ((((((rt1.c2) NOTNULL)))!=((CASE rt1.c2  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c6 END))));
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c2) NOTNULL)))<((CASE rt1.c2  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c6 END))))AND(CAST(rt1.c0 AS BLOB) COLLATE BINARY))) ORDER BY CASE WHEN ((rt1.c0)OR(rt1.c1)) THEN rt1.c6 ELSE ((rt1.c5) ISNULL) END  NULLS FIRST, (((+ (rt1.c6)))=(((rt1.c3) IS TRUE))) ASC  NULLS LAST LIMIT 0x1;
SELECT * FROM rt1 WHERE ((((((rt1.c2) NOTNULL)))!=((CASE rt1.c2  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c6 END))));
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c2) NOTNULL)))<((CASE rt1.c2  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c6 END))))AND(CAST(rt1.c0 AS BLOB) COLLATE BINARY))) ORDER BY CASE WHEN ((rt1.c0)OR(rt1.c1)) THEN rt1.c6 ELSE ((rt1.c5) ISNULL) END  NULLS FIRST, (((+ (rt1.c6)))=(((rt1.c3) IS TRUE))) ASC  NULLS LAST LIMIT 0x1;
SELECT * FROM rt1 WHERE (json_extract(CAST(rt1.c6 AS INTEGER), ((0.9236583996603929) IS TRUE)));
SELECT * FROM rt1 WHERE (json_extract(CAST(rt1.c6 AS INTEGER), ((0.9236583996603929) IS TRUE))) ORDER BY (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)), ((rt1.c6)>(rt1.c6)), ((rt1.c2)LIKE(rt1.c1))))>((rt1.c5, (((rt1.c0, rt1.c5, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c6, rt1.c3)) AND ((rt1.c6, rt1.c0, rt1.c5))), rt1.c6))), CASE (NOT (rt1.c5))  WHEN (rt1.c2 IN (rt1.c6)) THEN ((rt1.c3) IS TRUE) WHEN ((rt1.c5)<(rt1.c6)) THEN ((rt1.c5)-(rt1.c4)) END DESC;
SELECT * FROM rt1 WHERE (json_extract(CAST(rt1.c6 AS INTEGER), ((0.9236583996603929) IS TRUE)));
SELECT ALL * FROM rt1 WHERE (NULL COLLATE NOCASE) ORDER BY CAST(CAST(rt1.c2 AS REAL) AS BLOB), (((((rt1.c3, rt1.c4)) NOT BETWEEN ((rt1.c6, rt1.c0)) AND ((rt1.c6, rt1.c4)))) IS TRUE);
SELECT ALL * FROM rt1 WHERE (NULL COLLATE NOCASE) ORDER BY ((((LOWER(DISTINCT rt1.c3))OR(((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))))OR(((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (NULL COLLATE NOCASE) ORDER BY CAST(CAST(rt1.c2 AS REAL) AS BLOB), (((((rt1.c3, rt1.c4)) NOT BETWEEN ((rt1.c6, rt1.c0)) AND ((rt1.c6, rt1.c4)))) IS TRUE);
SELECT ALL * FROM rt1 WHERE (NULL COLLATE NOCASE) ORDER BY ((((LOWER(DISTINCT rt1.c3))OR(((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))))OR(((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (UPPER(CAST(t0.c3 AS NUMERIC)));
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((UPPER(CAST(t0.c3 AS NUMERIC)))AND(CASE WHEN 0.2240858699491587 THEN (('G+ti7 7') NOT BETWEEN (rt1.c3) AND (rt1.c4)) WHEN (- (t0.c2)) THEN t0.c0 COLLATE RTRIM WHEN t0.c3 THEN t0.c1 ELSE (t0.c1 IN (t0.c4)) END))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (-1997617505);
SELECT ALL * FROM t0, rt1 WHERE ((((('C
6neb-x
') NOT BETWEEN (t0.c4) AND (rt1.c2))) IS TRUE));
SELECT * FROM t0, rt1 WHERE ((((((('C
6neb-x
') NOT BETWEEN (t0.c4) AND (rt1.c2))) IS TRUE))AND(CASE WHEN (- (rt1.c2)) THEN ((((((t0.c4)AND(rt1.c4)))OR(t0.c2)))OR(NULL)) END)));
SELECT ALL * FROM t0, rt1 WHERE ((((('C
6neb-x
') NOT BETWEEN (t0.c4) AND (rt1.c2))) IS TRUE));
SELECT * FROM t0, rt1 WHERE ((((((('C
6neb-x
') NOT BETWEEN (t0.c4) AND (rt1.c2))) IS TRUE))AND(CASE WHEN (- (rt1.c2)) THEN ((((((t0.c4)AND(rt1.c4)))OR(t0.c2)))OR(NULL)) END)));
SELECT ALL * FROM rt1, t0 WHERE (((((((((((((((((((rt1.c3)OR(rt1.c5)))OR(x'')))AND(0.4064925143265571)))OR(rt1.c1)))AND(rt1.c5)))OR(rt1.c4)))OR(x'')))AND(((t0.c2)%('}m怄Fk>	')))))AND(CASE WHEN t0.c0 THEN rt1.c0 ELSE t0.c2 END))) ORDER BY rt1.c6  NULLS FIRST, ((rt1.c3) NOT BETWEEN ((+ (x''))) AND (t0.c1)) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((((((((((((rt1.c3)OR(rt1.c5)))OR(x'')))AND(0.4064925143265571)))OR(rt1.c1)))AND(rt1.c5)))OR(rt1.c4)))OR(x'')))AND(((t0.c2)%('}m怄Fk>	')))))AND(CASE WHEN t0.c0 THEN rt1.c0 ELSE t0.c2 END))) ORDER BY rt1.c6  NULLS FIRST, ((rt1.c3) NOT BETWEEN ((+ (x''))) AND (t0.c1)) ASC LIMIT 0x2;
SELECT ALL * FROM rt1, t0 WHERE (((((((((((((((((((rt1.c3)OR(rt1.c5)))OR(x'')))AND(0.4064925143265571)))OR(rt1.c1)))AND(rt1.c5)))OR(rt1.c4)))OR(x'')))AND(((t0.c2)%('}m怄Fk>	')))))AND(CASE WHEN t0.c0 THEN rt1.c0 ELSE t0.c2 END))) ORDER BY rt1.c6  NULLS FIRST, ((rt1.c3) NOT BETWEEN ((+ (x''))) AND (t0.c1)) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((((((((((((rt1.c3)OR(rt1.c5)))OR(x'')))AND(0.4064925143265571)))OR(rt1.c1)))AND(rt1.c5)))OR(rt1.c4)))OR(x'')))AND(((t0.c2)%('}m怄Fk>	')))))AND(CASE WHEN t0.c0 THEN rt1.c0 ELSE t0.c2 END))) ORDER BY rt1.c6  NULLS FIRST, ((rt1.c3) NOT BETWEEN ((+ (x''))) AND (t0.c1)) ASC LIMIT 0x2;
SELECT ALL * FROM rt1, t0 WHERE ((((~ (rt1.c3)))>=(((rt1.c3)|(rt1.c5)))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((~ (rt1.c3)))>=(((rt1.c3)|(rt1.c5))))) LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE ((((~ (rt1.c3)))>=(((rt1.c3)|(rt1.c5)))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((~ (rt1.c3)))>=(((rt1.c3)|(rt1.c5))))) LIMIT 0;
SELECT * FROM rt1 WHERE (CASE WHEN ((rt1.c4)/(rt1.c6)) THEN (((rt1.c5, rt1.c3, rt1.c4))<((rt1.c3, rt1.c1, rt1.c6))) END) ORDER BY (NOT (CAST(rt1.c4 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((CASE WHEN ((rt1.c4)/(rt1.c6)) THEN (((rt1.c5, rt1.c3, rt1.c4))<((rt1.c3, rt1.c1, rt1.c6))) END)AND(((rt1.c4 IN (rt1.c2, rt1.c4)) IN (0X5356d11a COLLATE BINARY))))) ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c5)))) BETWEEN (((rt1.c5)/(rt1.c5))) AND ((rt1.c1 IN (rt1.c2)))) DESC INTERSECT SELECT * FROM rt1 WHERE ((((rt1.c6, rt1.c2)) BETWEEN ((((rt1.c2)=(rt1.c2)), CASE WHEN '-1560087994' THEN rt1.c0 END)) AND ((CAST(rt1.c0 AS REAL), rt1.c5)))) ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c5)))) BETWEEN (((rt1.c5)/(rt1.c5))) AND ((rt1.c1 IN (rt1.c2)))) DESC;
SELECT * FROM rt1 WHERE (CASE WHEN ((rt1.c4)/(rt1.c6)) THEN (((rt1.c5, rt1.c3, rt1.c4))<((rt1.c3, rt1.c1, rt1.c6))) END) ORDER BY (NOT (CAST(rt1.c4 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((CASE WHEN ((rt1.c4)/(rt1.c6)) THEN (((rt1.c5, rt1.c3, rt1.c4))<((rt1.c3, rt1.c1, rt1.c6))) END)AND(((rt1.c4 IN (rt1.c2, rt1.c4)) IN (0X5356d11a COLLATE BINARY))))) ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c5)))) BETWEEN (((rt1.c5)/(rt1.c5))) AND ((rt1.c1 IN (rt1.c2)))) DESC INTERSECT SELECT * FROM rt1 WHERE ((((rt1.c6, rt1.c2)) BETWEEN ((((rt1.c2)=(rt1.c2)), CASE WHEN '-1560087994' THEN rt1.c0 END)) AND ((CAST(rt1.c0 AS REAL), rt1.c5)))) ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c5)))) BETWEEN (((rt1.c5)/(rt1.c5))) AND ((rt1.c1 IN (rt1.c2)))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (TYPEOF(DISTINCT ((((((rt1.c2)AND(rt1.c2)))AND(rt1.c5)))OR(rt1.c5)))) ORDER BY (((CAST(rt1.c5 AS TEXT)))!=(((+ (rt1.c6))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (TYPEOF(DISTINCT ((((((rt1.c2)AND(rt1.c2)))AND(rt1.c5)))OR(rt1.c5)))) ORDER BY rt1.c6  NULLS LAST;
SELECT MIN(t0.c1) FROM rt1, t0 WHERE ((+ (json_array_length('9Z'))));
SELECT DISTINCT MIN(t0.c1) FROM rt1, t0 WHERE ((+ (json_array_length('9Z')))) ORDER BY json_valid((t0.c3 IN (rt1.c1)));
SELECT MAX(rt1.c6) FROM rt1 LEFT OUTER JOIN t0 ON (((CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c4 THEN 0Xffffffff85e2d3a1 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN t0.c3 WHEN -97064416 THEN rt1.c3 ELSE t0.c4 END, ((((t0.c3)OR(NULL)))OR(t0.c1)), ((((((((t0.c0)AND(x'')))AND(t0.c3)))OR(rt1.c3)))OR(rt1.c5))))<((x'', CASE WHEN rt1.c3 THEN t0.c4 END, ((t0.c2) IS TRUE)))) WHERE (INSTR(CASE t0.c1  WHEN t0.c0 THEN x'aafb' ELSE rt1.c3 END, (((t0.c4))<((rt1.c5)))));
SELECT DISTINCT MAX(rt1.c6) FROM rt1 LEFT OUTER JOIN t0 ON (((CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c4 THEN -2048732255 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN t0.c3 WHEN -97064416 THEN rt1.c3 ELSE t0.c4 END, ((((t0.c3)OR(NULL)))OR(t0.c1)), ((((((((t0.c0)AND(x'')))AND(t0.c3)))OR(rt1.c3)))OR(rt1.c5))))<((x'', CASE WHEN rt1.c3 THEN t0.c4 END, ((t0.c2) IS TRUE)))) WHERE (INSTR(CASE t0.c1  WHEN t0.c0 THEN x'aafb' ELSE rt1.c3 END, (((t0.c4))<((rt1.c5))))) ORDER BY ((x'b5') NOT BETWEEN (1.664405135E9) AND (((rt1.c6) IS TRUE))) ASC  NULLS LAST, ((0x2ddb9b8e) BETWEEN (t0.c4) AND (t0.c0)) COLLATE BINARY DESC LIMIT 0X0;
SELECT ALL MIN(rt1.c4) FROM rt1, t0 WHERE (CAST(rt1.c0 AS INTEGER) COLLATE RTRIM) ORDER BY ((rt1.c2)||(rt1.c2)) COLLATE NOCASE ASC, (((t0.c4)<(t0.c3)) IN (rt1.c1 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT DISTINCT MIN(rt1.c4) FROM rt1, t0 WHERE (CAST(rt1.c0 AS INTEGER) COLLATE RTRIM) ORDER BY ((rtreenode(-458784434, rt1.c4)) NOT NULL), CAST(((t0.c0)-(t0.c4)) AS NUMERIC)  NULLS FIRST, ((PRINTF(rt1.c3, t0.c2, t0.c2)) IS TRUE);
SELECT * FROM t0 INNER JOIN rt1 ON ((rt1.c1 COLLATE BINARY)+(((((((((t0.c1)OR(t0.c1)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c1)))) WHERE (rt1.c4) ORDER BY t0.c4  NULLS LAST, (((((rt1.c6, rt1.c6, rt1.c5, NULL))>((rt1.c0, rt1.c4, NULL, rt1.c4))))&(CAST(rt1.c5 AS NUMERIC))) ASC;
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON ((rt1.c1 COLLATE BINARY)+(((((((((t0.c1)OR(t0.c1)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c1)))) WHERE (rt1.c4) ORDER BY (t0.c2 IN ())  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON ((rt1.c1 COLLATE BINARY)+(((((((((t0.c1)OR(t0.c1)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c1)))) WHERE (CAST(x'a9' AS TEXT)) ORDER BY (t0.c2 IN ())  NULLS FIRST;
SELECT * FROM t0 INNER JOIN rt1 ON ((rt1.c1 COLLATE BINARY)+(((((((((t0.c1)OR(t0.c1)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c1)))) WHERE (rt1.c4) ORDER BY t0.c4  NULLS LAST, (((((rt1.c6, rt1.c6, rt1.c5, NULL))>((rt1.c0, rt1.c4, NULL, rt1.c4))))&(CAST(rt1.c5 AS NUMERIC))) ASC;
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON ((rt1.c1 COLLATE BINARY)+(((((((((t0.c1)OR(t0.c1)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c1)))) WHERE (rt1.c4) ORDER BY (t0.c2 IN ())  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON ((rt1.c1 COLLATE BINARY)+(((((((((t0.c1)OR(t0.c1)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c1)))) WHERE (CAST(x'a9' AS TEXT)) ORDER BY (t0.c2 IN ())  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c3) NOT BETWEEN (t0.c2) AND (rt1.c5)))<(((t0.c1)LIKE(rt1.c4))))) ORDER BY (((rt1.c0, rt1.c4)) NOT BETWEEN ((((((t0.c3)OR(t0.c3)))OR(rt1.c4)), rt1.c6 COLLATE RTRIM)) AND ((rt1.c5, '-180735253'))) DESC;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((t0.c3) NOT BETWEEN (t0.c2) AND (rt1.c5)))<(((t0.c1)LIKE(rt1.c4)))))AND(((IFNULL(t0.c3, x'54')) BETWEEN (((-1.125839889E9) BETWEEN (rt1.c5) AND (rt1.c3))) AND ((((rt1.c1)) NOT BETWEEN ((t0.c4)) AND ((x'')))))))) ORDER BY (((t0.c1, t0.c2, 0.5601606172308418, t0.c4)) NOT BETWEEN ((((t0.c2)IS NOT(x'')), ((t0.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)), rt1.c2, t0.c3)) AND ((((t0.c2) NOT BETWEEN (rt1.c5) AND ('0.8095110720425828')), (((493173702, t0.c2, rt1.c6))!=((t0.c4, rt1.c6, t0.c0))), t0.c3, ((rt1.c5)||(rt1.c2))))) LIMIT 0X4 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c1) NOT BETWEEN (0.9982487031170127) AND (t0.c2)))/(CAST(t0.c4 AS TEXT)))) ORDER BY (((t0.c1, t0.c2, 0.5601606172308418, t0.c4)) NOT BETWEEN ((((t0.c2)IS NOT(x'')), ((t0.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)), rt1.c2, t0.c3)) AND ((((t0.c2) NOT BETWEEN (rt1.c5) AND ('0.8095110720425828')), (((493173702, t0.c2, rt1.c6))<>((t0.c4, rt1.c6, t0.c0))), t0.c3, ((rt1.c5)||(rt1.c2))))) LIMIT 0x4;
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c3) NOT BETWEEN (t0.c2) AND (rt1.c5)))<(((t0.c1)LIKE(rt1.c4))))) ORDER BY (((rt1.c0, rt1.c4)) NOT BETWEEN ((((((t0.c3)OR(t0.c3)))OR(rt1.c4)), rt1.c6 COLLATE RTRIM)) AND ((rt1.c5, '-180735253'))) DESC;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((t0.c3) NOT BETWEEN (t0.c2) AND (rt1.c5)))<(((t0.c1)LIKE(rt1.c4)))))AND(((IFNULL(t0.c3, x'54')) BETWEEN (((-1.125839889E9) BETWEEN (rt1.c5) AND (rt1.c3))) AND ((((rt1.c1)) NOT BETWEEN ((t0.c4)) AND ((x'')))))))) ORDER BY (((t0.c1, t0.c2, 0.5601606172308418, t0.c4)) NOT BETWEEN ((((t0.c2)IS NOT(x'')), ((t0.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)), rt1.c2, t0.c3)) AND ((((t0.c2) NOT BETWEEN (rt1.c5) AND ('0.8095110720425828')), (((493173702, t0.c2, rt1.c6))!=((t0.c4, rt1.c6, t0.c0))), t0.c3, ((rt1.c5)||(rt1.c2))))) LIMIT 0X4 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c1) NOT BETWEEN (0.9982487031170127) AND (t0.c2)))/(CAST(t0.c4 AS TEXT)))) ORDER BY (((t0.c1, t0.c2, 0.5601606172308418, t0.c4)) NOT BETWEEN ((((t0.c2)IS NOT(x'')), ((t0.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)), rt1.c2, t0.c3)) AND ((((t0.c2) NOT BETWEEN (rt1.c5) AND ('0.8095110720425828')), (((493173702, t0.c2, rt1.c6))<>((t0.c4, rt1.c6, t0.c0))), t0.c3, ((rt1.c5)||(rt1.c2))))) LIMIT 0x4;
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((rt1.c4 IN (t0.c1, rt1.c6)))AND(((t0.c1) NOT NULL))))OR(((t0.c0) NOT NULL)))) ORDER BY NULL ASC, ((CAST(t0.c2 AS INTEGER))AND(x'')) ASC, (NOT (CASE WHEN rt1.c0 THEN t0.c2 WHEN '_' THEN NULL END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((((((rt1.c4 IN (t0.c1)))AND(((t0.c1) NOT NULL))))OR(((t0.c0) NOT NULL))))AND(0.7101458892271628))) ORDER BY CAST((- (NULL)) AS NUMERIC)  NULLS LAST, (((t0.c2) BETWEEN (rt1.c5) AND (t0.c3)) IN ()) DESC, rt1.c3 DESC LIMIT 0X1;
SELECT * FROM rt1, t0 WHERE ((CASE rt1.c2  WHEN t0.c3 THEN rt1.c6 ELSE t0.c2 END IN (((((((((((t0.c1)OR(rt1.c5)))AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c3)))AND(t0.c1))))) ORDER BY t0.c3 ASC  NULLS LAST, (((rt1.c0, t0.c3, rt1.c5)) BETWEEN (((((t0.c3)) BETWEEN ((t0.c0)) AND ((rt1.c2))), (((rt1.c4, t0.c4, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c5, rt1.c0)) AND ((rt1.c5, t0.c1, t0.c4))), ((NULL) IS TRUE))) AND ((((((((((rt1.c2)OR(rt1.c6)))OR(t0.c0)))OR(t0.c0)))AND(rt1.c2)), ((t0.c3)+(rt1.c4)), TYPEOF(DISTINCT rt1.c2))));
SELECT * FROM rt1, t0 WHERE ((((CASE rt1.c2  WHEN t0.c3 THEN rt1.c6 ELSE t0.c2 END IN (((((((((((t0.c1)OR(rt1.c5)))AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c3)))AND(t0.c1)))))AND(t0.c1))) ORDER BY t0.c3 ASC  NULLS LAST, (((rt1.c0, t0.c3, rt1.c5)) BETWEEN (((((t0.c3)) BETWEEN ((t0.c0)) AND ((rt1.c2))), (((rt1.c4, t0.c4, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c5, rt1.c0)) AND ((rt1.c5, t0.c1, t0.c4))), ((NULL) IS TRUE))) AND ((((((((((rt1.c2)OR(rt1.c6)))OR(t0.c0)))OR(t0.c0)))AND(rt1.c2)), ((t0.c3)+(rt1.c4)), TYPEOF(DISTINCT rt1.c2)))) LIMIT 0X0 INTERSECT SELECT * FROM rt1, t0 WHERE (((x'c91e') BETWEEN (x'f7') AND (t0.c1)) COLLATE RTRIM) ORDER BY t0.c3 ASC  NULLS LAST, (((rt1.c0, t0.c3, rt1.c5)) BETWEEN (((((t0.c3)) BETWEEN ((t0.c0)) AND ((rt1.c2))), (((rt1.c4, t0.c4, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c5, rt1.c0)) AND ((rt1.c5, t0.c1, t0.c4))), ((NULL) IS TRUE))) AND ((((((((((rt1.c2)OR(rt1.c6)))OR(t0.c0)))OR(t0.c0)))AND(rt1.c2)), ((t0.c3)+(rt1.c4)), TYPEOF(DISTINCT rt1.c2)))) LIMIT 0;
SELECT * FROM rt1, t0 WHERE ((CASE rt1.c2  WHEN t0.c3 THEN rt1.c6 ELSE t0.c2 END IN (((((((((((t0.c1)OR(rt1.c5)))AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c3)))AND(t0.c1))))) ORDER BY t0.c3 ASC  NULLS LAST, (((rt1.c0, t0.c3, rt1.c5)) BETWEEN (((((t0.c3)) BETWEEN ((t0.c0)) AND ((rt1.c2))), (((rt1.c4, t0.c4, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c5, rt1.c0)) AND ((rt1.c5, t0.c1, t0.c4))), ((NULL) IS TRUE))) AND ((((((((((rt1.c2)OR(rt1.c6)))OR(t0.c0)))OR(t0.c0)))AND(rt1.c2)), ((t0.c3)+(rt1.c4)), TYPEOF(DISTINCT rt1.c2))));
SELECT * FROM rt1, t0 WHERE ((((CASE rt1.c2  WHEN t0.c3 THEN rt1.c6 ELSE t0.c2 END IN (((((((((((t0.c1)OR(rt1.c5)))AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c3)))AND(t0.c1)))))AND(t0.c1))) ORDER BY t0.c3 ASC  NULLS LAST, (((rt1.c0, t0.c3, rt1.c5)) BETWEEN (((((t0.c3)) BETWEEN ((t0.c0)) AND ((rt1.c2))), (((rt1.c4, t0.c4, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c5, rt1.c0)) AND ((rt1.c5, t0.c1, t0.c4))), ((NULL) IS TRUE))) AND ((((((((((rt1.c2)OR(rt1.c6)))OR(t0.c0)))OR(t0.c0)))AND(rt1.c2)), ((t0.c3)+(rt1.c4)), TYPEOF(DISTINCT rt1.c2)))) LIMIT 0X0 INTERSECT SELECT * FROM rt1, t0 WHERE (((x'c91e') BETWEEN (x'f7') AND (t0.c1)) COLLATE RTRIM) ORDER BY t0.c3 ASC  NULLS LAST, (((rt1.c0, t0.c3, rt1.c5)) BETWEEN (((((t0.c3)) BETWEEN ((t0.c0)) AND ((rt1.c2))), (((rt1.c4, t0.c4, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c5, rt1.c0)) AND ((rt1.c5, t0.c1, t0.c4))), ((NULL) IS TRUE))) AND ((((((((((rt1.c2)OR(rt1.c6)))OR(t0.c0)))OR(t0.c0)))AND(rt1.c2)), ((t0.c3)+(rt1.c4)), TYPEOF(DISTINCT rt1.c2)))) LIMIT 0;
SELECT * FROM rt1 WHERE (((((rt1.c3)IS NOT(rt1.c1))) NOT BETWEEN ((NOT (rt1.c1))) AND ((rt1.c1 IN (rt1.c1)))));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c3)IS NOT(rt1.c1))) NOT BETWEEN ((NOT (rt1.c1))) AND ((rt1.c1 IN (rt1.c1))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((- (TRIM(DISTINCT rt1.c0)))) LIMIT 0X0;
SELECT * FROM rt1 WHERE (((((rt1.c3)IS NOT(rt1.c1))) NOT BETWEEN ((NOT (rt1.c1))) AND ((rt1.c1 IN (rt1.c1)))));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c3)IS NOT(rt1.c1))) NOT BETWEEN ((NOT (rt1.c1))) AND ((rt1.c1 IN (rt1.c1))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((- (TRIM(DISTINCT rt1.c0)))) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c2, ((((((((t0.c0)OR(t0.c0)))AND(t0.c1)))OR(t0.c4)))AND(t0.c2)))) AND ((((0.2672957122232348)<(t0.c4)), ((t0.c1)<(t0.c1)))))) ORDER BY t0.c1, (((t0.c3) NOT NULL) IN ())  NULLS LAST, COALESCE(((((t0.c3)AND(t0.c1)))AND(t0.c1)), x'22fcea') DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c2, ((((((((t0.c0)OR(t0.c0)))AND(t0.c1)))OR(t0.c4)))AND(t0.c2)))) AND ((((0.2672957122232348)<(t0.c4)), ((t0.c1)<(t0.c1)))))) ORDER BY t0.c1, (((t0.c3) NOT NULL) IN ())  NULLS LAST, COALESCE(((((t0.c3)AND(t0.c1)))AND(t0.c1)), x'22fcea') DESC  NULLS LAST LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT ((~ (t0.c1))))) ORDER BY t0.c1, (((t0.c3) NOT NULL) IN ())  NULLS LAST, COALESCE(((((t0.c3)AND(t0.c1)))AND(t0.c1)), x'22fcea') DESC  NULLS LAST LIMIT 3;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c2, ((((((((t0.c0)OR(t0.c0)))AND(t0.c1)))OR(t0.c4)))AND(t0.c2)))) AND ((((0.2672957122232348)<(t0.c4)), ((t0.c1)<(t0.c1)))))) ORDER BY t0.c1, (((t0.c3) NOT NULL) IN ())  NULLS LAST, COALESCE(((((t0.c3)AND(t0.c1)))AND(t0.c1)), x'22fcea') DESC  NULLS LAST;
SELECT MIN(t0.c3) FROM t0, rt1 WHERE ((+ ((t0.c0 IN (t0.c1)))));
SELECT DISTINCT MIN(t0.c3) FROM t0, rt1 WHERE ((((+ ((t0.c0 IN (t0.c1)))))AND(((((rt1.c4, rt1.c4)) BETWEEN ((rt1.c2, rt1.c3)) AND ((rt1.c3, rt1.c2))) IN ())))) INTERSECT SELECT DISTINCT MIN(t0.c3) FROM t0, rt1 WHERE ((+ (x'05' COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c1 IN (rt1.c1))  WHEN 0Xffffffffb4454c09 THEN ((rt1.c1)>=(rt1.c4)) WHEN ((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c0)) THEN ((rt1.c1) IS FALSE) WHEN CASE rt1.c3  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN NULL THEN x'6f' WHEN rt1.c6 THEN rt1.c1 ELSE rt1.c4 END THEN CHANGES() WHEN ((((((((rt1.c6)AND(rt1.c3)))AND(NULL)))OR(rt1.c4)))AND(NULL)) THEN ((rt1.c0)>>(rt1.c1)) END) ORDER BY (((+ (rt1.c4))) NOTNULL) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((CASE (rt1.c1 IN (rt1.c1))  WHEN -1270526967 THEN ((rt1.c1)==(rt1.c4)) WHEN ((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c0)) THEN ((rt1.c1) IS FALSE) WHEN CASE rt1.c3  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN NULL THEN x'6f' WHEN rt1.c6 THEN rt1.c1 ELSE rt1.c4 END THEN CHANGES() WHEN ((((((((rt1.c6)AND(rt1.c3)))AND(NULL)))OR(rt1.c4)))AND(NULL)) THEN ((rt1.c0)>>(rt1.c1)) END)AND(((((rt1.c3)IS(rt1.c3)))>((((rt1.c5, rt1.c3))<>((rt1.c0, rt1.c0)))))))) ORDER BY (((+ (rt1.c4))) NOTNULL) DESC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c1, t0.c1))>((rt1.c4, rt1.c2))) COLLATE NOCASE COLLATE BINARY) ORDER BY ((((((((t0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c3)))OR((- (t0.c0)))))OR(CAST(0.0577420508410631 AS TEXT))))AND((((t0.c3, rt1.c0)) BETWEEN ((rt1.c5, t0.c3)) AND ((t0.c0, rt1.c3))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((t0.c1, t0.c1))>((rt1.c4, rt1.c2))) COLLATE NOCASE COLLATE BINARY) ORDER BY ((((((((t0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c3)))OR((- (t0.c0)))))OR(CAST(0.0577420508410631 AS TEXT))))AND((((t0.c3, rt1.c0)) BETWEEN ((rt1.c5, t0.c3)) AND ((t0.c0, rt1.c3))))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c1, t0.c1))>((rt1.c4, rt1.c2))) COLLATE NOCASE COLLATE BINARY) ORDER BY ((((((((t0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c3)))OR((- (t0.c0)))))OR(CAST(0.0577420508410631 AS TEXT))))AND((((t0.c3, rt1.c0)) BETWEEN ((rt1.c5, t0.c3)) AND ((t0.c0, rt1.c3))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((t0.c1, t0.c1))>((rt1.c4, rt1.c2))) COLLATE NOCASE COLLATE BINARY) ORDER BY ((((((((t0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c3)))OR((- (t0.c0)))))OR(CAST(0.0577420508410631 AS TEXT))))AND((((t0.c3, rt1.c0)) BETWEEN ((rt1.c5, t0.c3)) AND ((t0.c0, rt1.c3))))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE ((- (((t0.c0) ISNULL)))) ORDER BY CASE (((t0.c1, '', t0.c4, t0.c3))>((t0.c2, t0.c0, t0.c1, t0.c0)))  WHEN (~ (t0.c2)) THEN ((t0.c1)<<(t0.c3)) WHEN (~ (t0.c4)) THEN t0.c2 END DESC, (((t0.c4, t0.c4)) NOT BETWEEN ((t0.c0, t0.c2)) AND ((t0.c2, t0.c2))) COLLATE RTRIM;
SELECT * FROM t0 WHERE ((((- (((t0.c0) ISNULL))))AND(CASE WHEN ((t0.c3)%('')) THEN CASE WHEN t0.c0 THEN t0.c4 WHEN t0.c0 THEN t0.c3 ELSE t0.c0 END WHEN 'C_wt' THEN (t0.c0 IN (t0.c3)) WHEN highlight(t0.c4, '1058179950', t0.c4, t0.c2) THEN (((t0.c3, -2088930208))<((0.42551999385991346, t0.c2))) WHEN CAST(t0.c0 AS REAL) THEN (t0.c4 IN ()) WHEN (t0.c2 IN (t0.c0)) THEN t0.c1 COLLATE NOCASE END))) ORDER BY CASE (((t0.c1, '', t0.c4, t0.c3))>((t0.c2, t0.c0, t0.c1, t0.c0)))  WHEN (~ (t0.c2)) THEN ((t0.c1)<<(t0.c3)) WHEN (~ (t0.c4)) THEN t0.c2 END DESC, (((t0.c4, t0.c4)) NOT BETWEEN ((t0.c0, t0.c2)) AND ((t0.c2, t0.c2))) COLLATE RTRIM LIMIT 0X3;
SELECT * FROM t0 WHERE ((- (((t0.c0) ISNULL)))) ORDER BY CASE (((t0.c1, '', t0.c4, t0.c3))>((t0.c2, t0.c0, t0.c1, t0.c0)))  WHEN (~ (t0.c2)) THEN ((t0.c1)<<(t0.c3)) WHEN (~ (t0.c4)) THEN t0.c2 END DESC, (((t0.c4, t0.c4)) NOT BETWEEN ((t0.c0, t0.c2)) AND ((t0.c2, t0.c2))) COLLATE RTRIM;
SELECT * FROM t0 WHERE ((((- (((t0.c0) ISNULL))))AND(CASE WHEN ((t0.c3)%('')) THEN CASE WHEN t0.c0 THEN t0.c4 WHEN t0.c0 THEN t0.c3 ELSE t0.c0 END WHEN 'C_wt' THEN (t0.c0 IN (t0.c3)) WHEN highlight(t0.c4, '1058179950', t0.c4, t0.c2) THEN (((t0.c3, -2088930208))<((0.42551999385991346, t0.c2))) WHEN CAST(t0.c0 AS REAL) THEN (t0.c4 IN ()) WHEN (t0.c2 IN (t0.c0)) THEN t0.c1 COLLATE NOCASE END))) ORDER BY CASE (((t0.c1, '', t0.c4, t0.c3))>((t0.c2, t0.c0, t0.c1, t0.c0)))  WHEN (~ (t0.c2)) THEN ((t0.c1)<<(t0.c3)) WHEN (~ (t0.c4)) THEN t0.c2 END DESC, (((t0.c4, t0.c4)) NOT BETWEEN ((t0.c0, t0.c2)) AND ((t0.c2, t0.c2))) COLLATE RTRIM LIMIT 0X3;
SELECT COUNT(*) FROM t0, rt1 WHERE (-614220311);
SELECT COUNT(*) FROM t0, rt1 WHERE (0Xffffffffdb63bde9) INTERSECT SELECT ALL COUNT(*) FROM t0, rt1 WHERE (0X77da5a3b);
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c4 AS BLOB) AS NUMERIC)) ORDER BY rt1.c2 DESC  NULLS LAST, rt1.c1  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (CAST(CAST(rt1.c4 AS BLOB) AS NUMERIC)) ORDER BY rt1.c2 DESC  NULLS LAST, rt1.c1  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c6)AND(rt1.c5)))GLOB('o-9' COLLATE BINARY))) ORDER BY rt1.c2 DESC  NULLS LAST, rt1.c1  NULLS FIRST LIMIT 0x3;
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c4 AS BLOB) AS NUMERIC)) ORDER BY rt1.c2 DESC  NULLS LAST, rt1.c1  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (CAST(CAST(rt1.c4 AS BLOB) AS NUMERIC)) ORDER BY rt1.c2 DESC  NULLS LAST, rt1.c1  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c6)AND(rt1.c5)))GLOB('o-9' COLLATE BINARY))) ORDER BY rt1.c2 DESC  NULLS LAST, rt1.c1  NULLS FIRST LIMIT 0x3;
SELECT ALL MAX(t0.c0) FROM t0, rt1 WHERE ((NULL IN (CAST(rt1.c6 AS INTEGER))));
SELECT DISTINCT MAX(t0.c0) FROM t0, rt1 WHERE ((((NULL IN (CAST(rt1.c6 AS INTEGER))))AND((((((rt1.c4)AND(rt1.c3)))AND(rt1.c4)) IN ()))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c3)<(t0.c2)))||(CAST(1272462809 AS REAL))) WHERE ('W');
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((((t0.c3)<(t0.c2)))||(CAST(0X4bd83dd9 AS REAL))) WHERE ('W') ORDER BY (- (((((((((((rt1.c3)OR(rt1.c5)))AND(t0.c2)))AND('-983457725')))OR(x'12')))AND(rt1.c6)))) ASC  NULLS FIRST, CASE CASE WHEN t0.c3 THEN rt1.c2 WHEN t0.c0 THEN rt1.c6 WHEN 0x2a617fc THEN rt1.c3 END  WHEN '0.7592528378227351' THEN ((t0.c4)AND(rt1.c1)) END ASC  NULLS FIRST;
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c3)<(t0.c2)))||(CAST(1272462809 AS REAL))) WHERE ('W');
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((((t0.c3)<(t0.c2)))||(CAST(0X4bd83dd9 AS REAL))) WHERE ('W') ORDER BY (- (((((((((((rt1.c3)OR(rt1.c5)))AND(t0.c2)))AND('-983457725')))OR(x'12')))AND(rt1.c6)))) ASC  NULLS FIRST, CASE CASE WHEN t0.c3 THEN rt1.c2 WHEN t0.c0 THEN rt1.c6 WHEN 0x2a617fc THEN rt1.c3 END  WHEN '0.7592528378227351' THEN ((t0.c4)AND(rt1.c1)) END ASC  NULLS FIRST;
SELECT ALL MAX(t0.c2) FROM t0 WHERE (CAST(CAST(t0.c3 AS NUMERIC) AS NUMERIC));
SELECT DISTINCT MAX(t0.c2) FROM t0 WHERE (((CAST(CAST(t0.c3 AS NUMERIC) AS NUMERIC))AND(t0.c3))) ORDER BY (((((((- (t0.c0)))OR(0.9951378159126758)))OR(((t0.c2)+(t0.c0)))))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))), ((((((((t0.c4)OR(((((t0.c4)OR(t0.c0)))AND(t0.c0)))))OR(CASE WHEN t0.c2 THEN t0.c4 WHEN t0.c3 THEN t0.c4 END)))AND(COALESCE(DISTINCT t0.c0, t0.c0, t0.c3))))OR((((t0.c3)) NOT BETWEEN ((t0.c4)) AND ((t0.c0))))), (((((t0.c3, '2029517459', t0.c2, t0.c1)) NOT BETWEEN ((t0.c0, t0.c2, t0.c1, t0.c2)) AND ((t0.c2, '-483374819', t0.c2, t0.c3))))&(CASE WHEN t0.c4 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t0.c2) FROM t0 WHERE ((((t0.c0, t0.c2, t0.c2, t0.c4)) NOT BETWEEN ((((((t0.c3)AND(t0.c3)))OR(t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c2)), (- (t0.c0)), (((t0.c4)) BETWEEN ((t0.c4)) AND ((t0.c2))))) AND ((((x'cfa147')|(t0.c2)), ((((x'cf')OR(t0.c4)))OR(t0.c4)), (- ('.')), ((t0.c2)|(t0.c4)))))) ORDER BY (((((((- (t0.c0)))OR(0.9951378159126758)))OR(((t0.c2)+(t0.c0)))))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))), ((((((((t0.c4)OR(((((t0.c4)OR(t0.c0)))AND(t0.c0)))))OR(CASE WHEN t0.c2 THEN t0.c4 WHEN t0.c3 THEN t0.c4 END)))AND(COALESCE(DISTINCT t0.c0, t0.c0, t0.c3))))OR((((t0.c3)) NOT BETWEEN ((t0.c4)) AND ((t0.c0))))), (((((t0.c3, '2029517459', t0.c2, t0.c1)) NOT BETWEEN ((t0.c0, t0.c2, t0.c1, t0.c2)) AND ((t0.c2, '-483374819', t0.c2, t0.c3))))&(CASE WHEN t0.c4 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (CAST(NULL AS BLOB)) ORDER BY CAST(rt1.c3 AS INTEGER) COLLATE BINARY DESC;
SELECT DISTINCT * FROM t0, rt1 WHERE (CAST(NULL AS BLOB)) ORDER BY (((((rt1.c2, rt1.c5, t0.c3)) NOT BETWEEN ((t0.c4, -2.06571097E9, rt1.c6)) AND ((rt1.c6, '.OB', t0.c4))))=(((rt1.c5) IS FALSE)))  NULLS FIRST, (((- (rt1.c4))) NOT BETWEEN (((rt1.c0)!=(rt1.c5))) AND ((t0.c3 IN ()))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((rt1.c2 IN (t0.c4, rt1.c2)) COLLATE NOCASE) ORDER BY (((((rt1.c2, rt1.c5, t0.c3)) NOT BETWEEN ((t0.c4, -2.06571097E9, rt1.c6)) AND ((rt1.c6, '.OB', t0.c4))))=(((rt1.c5) IS FALSE)))  NULLS FIRST, (((- (rt1.c4))) NOT BETWEEN (((rt1.c0)<>(rt1.c5))) AND ((t0.c3 IN ())));
SELECT ALL * FROM t0, rt1 WHERE (CAST(NULL AS BLOB)) ORDER BY CAST(rt1.c3 AS INTEGER) COLLATE BINARY DESC;
SELECT DISTINCT * FROM t0, rt1 WHERE (CAST(NULL AS BLOB)) ORDER BY (((((rt1.c2, rt1.c5, t0.c3)) NOT BETWEEN ((t0.c4, -2.06571097E9, rt1.c6)) AND ((rt1.c6, '.OB', t0.c4))))=(((rt1.c5) IS FALSE)))  NULLS FIRST, (((- (rt1.c4))) NOT BETWEEN (((rt1.c0)!=(rt1.c5))) AND ((t0.c3 IN ()))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((rt1.c2 IN (t0.c4, rt1.c2)) COLLATE NOCASE) ORDER BY (((((rt1.c2, rt1.c5, t0.c3)) NOT BETWEEN ((t0.c4, -2.06571097E9, rt1.c6)) AND ((rt1.c6, '.OB', t0.c4))))=(((rt1.c5) IS FALSE)))  NULLS FIRST, (((- (rt1.c4))) NOT BETWEEN (((rt1.c0)<>(rt1.c5))) AND ((t0.c3 IN ())));
SELECT * FROM t0, rt1 WHERE (((CASE '1416437790'  WHEN rt1.c1 THEN t0.c2 WHEN NULL THEN rt1.c6 WHEN rt1.c4 THEN rt1.c3 WHEN t0.c1 THEN t0.c2 ELSE rt1.c1 END)%(((t0.c3) ISNULL))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE '1416437790'  WHEN rt1.c1 THEN t0.c2 WHEN NULL THEN rt1.c6 WHEN rt1.c4 THEN rt1.c3 WHEN t0.c1 THEN t0.c2 ELSE rt1.c1 END)%(((t0.c3) ISNULL)))) ORDER BY CASE WHEN ((rt1.c3)AND(rt1.c2)) THEN t0.c4 COLLATE BINARY END;
SELECT * FROM t0, rt1 WHERE (((CASE '1416437790'  WHEN rt1.c1 THEN t0.c2 WHEN NULL THEN rt1.c6 WHEN rt1.c4 THEN rt1.c3 WHEN t0.c1 THEN t0.c2 ELSE rt1.c1 END)%(((t0.c3) ISNULL))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE '1416437790'  WHEN rt1.c1 THEN t0.c2 WHEN NULL THEN rt1.c6 WHEN rt1.c4 THEN rt1.c3 WHEN t0.c1 THEN t0.c2 ELSE rt1.c1 END)%(((t0.c3) ISNULL)))) ORDER BY CASE WHEN ((rt1.c3)AND(rt1.c2)) THEN t0.c4 COLLATE BINARY END;
SELECT MIN(rt1.c1) FROM t0, rt1 WHERE (-528801166);
SELECT DISTINCT MIN(rt1.c1) FROM t0, rt1 WHERE (((0Xffffffffe07b2272)AND(x''))) ORDER BY QUOTE(((rt1.c6) NOT BETWEEN ('^') AND (t0.c2))) ASC  NULLS LAST, COALESCE(LAST_INSERT_ROWID(), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c4)), (rt1.c4 IN (rt1.c5)), ((t0.c2) NOT BETWEEN (t0.c1) AND (rt1.c6)), ((rt1.c2)*(t0.c2))) DESC  NULLS FIRST, rt1.c2 ASC LIMIT 0;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((+ (rt1.c5)))*(((rt1.c0)IS(rt1.c4)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((+ (rt1.c5)))*(((rt1.c0)IS(rt1.c4)))));
SELECT MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY CASE t0.c1  WHEN t0.c4 THEN t0.c4 WHEN t0.c4 THEN t0.c3 ELSE t0.c3 END COLLATE RTRIM, -8.56217189E8;
SELECT MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY CASE t0.c1  WHEN t0.c4 THEN t0.c4 WHEN t0.c4 THEN t0.c3 ELSE t0.c3 END COLLATE RTRIM, -8.56217189E8 LIMIT 0;
SELECT * FROM rt1, t0 WHERE (t0.c0);
SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c0)AND((('603733417' COLLATE NOCASE) BETWEEN ((((rt1.c4))>((rt1.c5)))) AND (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c2))))))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c1)GLOB(rt1.c6)) COLLATE RTRIM) LIMIT 2;
SELECT * FROM rt1, t0 WHERE (t0.c0);
SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c0)AND((('603733417' COLLATE NOCASE) BETWEEN ((((rt1.c4))>((rt1.c5)))) AND (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c2))))))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c1)GLOB(rt1.c6)) COLLATE RTRIM) LIMIT 2;
SELECT MIN(t0.c0) FROM t0 WHERE (CAST(rtreenode(t0.c1, t0.c4) AS INTEGER));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CAST(rtreenode(t0.c1, t0.c4) AS INTEGER))AND(((((t0.c4) IS TRUE)) NOTNULL)))) LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE (CAST(0.9737420814400334 AS TEXT) COLLATE NOCASE) ORDER BY (((rt1.c1, NULL, t0.c3, rt1.c1, rt1.c6)) NOT BETWEEN ((((((((t0.c2)OR(rt1.c3)))OR(t0.c1)))AND(rt1.c2)), TRIM(t0.c0), ((((((rt1.c3)AND(rt1.c4)))OR(rt1.c4)))OR(t0.c0)), ((t0.c0)+(rt1.c6)), ((rt1.c0) NOTNULL))) AND ((CAST(rt1.c0 AS BLOB), (((t0.c3, x'd2', rt1.c5))<=((t0.c1, t0.c2, '1216057499'))), ((NULL)>>(rt1.c1)), ((0.015709387755305393)||(t0.c3)), CASE t0.c4  WHEN rt1.c4 THEN rt1.c6 ELSE NULL END)));
SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(0.9737420814400334 AS TEXT) COLLATE NOCASE)AND(rt1.c5))) ORDER BY CASE ((t0.c2)>(rt1.c2))  WHEN ((rt1.c4)<<(rt1.c4)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (t0.c3)) WHEN (t0.c4 IN (t0.c4)) THEN ((rt1.c5) NOTNULL) WHEN rt1.c4 COLLATE NOCASE THEN (+ (rt1.c6)) END DESC, CASE (((rt1.c6, rt1.c2, rt1.c1)) BETWEEN ((rt1.c5, t0.c3, rt1.c4)) AND (('', t0.c4, t0.c1)))  WHEN ((rt1.c1)&(t0.c1)) THEN CAST(t0.c1 AS NUMERIC) WHEN 0.5021690346612778 THEN ((rt1.c6)/(rt1.c5)) END ASC INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c4) NOT NULL)) NOT BETWEEN (-744012418) AND (((t0.c4) NOT NULL)))) ORDER BY CASE ((t0.c2)>(rt1.c2))  WHEN ((rt1.c4)<<(rt1.c4)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (t0.c3)) WHEN (t0.c4 IN (t0.c4)) THEN ((rt1.c5) NOTNULL) WHEN rt1.c4 COLLATE NOCASE THEN (+ (rt1.c6)) END DESC, CASE (((rt1.c6, rt1.c2, rt1.c1)) BETWEEN ((rt1.c5, t0.c3, rt1.c4)) AND (('', t0.c4, t0.c1)))  WHEN ((rt1.c1)&(t0.c1)) THEN CAST(t0.c1 AS NUMERIC) WHEN 0.5021690346612778 THEN ((rt1.c6)/(rt1.c5)) END ASC;
SELECT ALL * FROM t0, rt1 WHERE (CAST(0.9737420814400334 AS TEXT) COLLATE NOCASE) ORDER BY (((rt1.c1, NULL, t0.c3, rt1.c1, rt1.c6)) NOT BETWEEN ((((((((t0.c2)OR(rt1.c3)))OR(t0.c1)))AND(rt1.c2)), TRIM(t0.c0), ((((((rt1.c3)AND(rt1.c4)))OR(rt1.c4)))OR(t0.c0)), ((t0.c0)+(rt1.c6)), ((rt1.c0) NOTNULL))) AND ((CAST(rt1.c0 AS BLOB), (((t0.c3, x'd2', rt1.c5))<=((t0.c1, t0.c2, '1216057499'))), ((NULL)>>(rt1.c1)), ((0.015709387755305393)||(t0.c3)), CASE t0.c4  WHEN rt1.c4 THEN rt1.c6 ELSE NULL END)));
SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(0.9737420814400334 AS TEXT) COLLATE NOCASE)AND(rt1.c5))) ORDER BY CASE ((t0.c2)>(rt1.c2))  WHEN ((rt1.c4)<<(rt1.c4)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (t0.c3)) WHEN (t0.c4 IN (t0.c4)) THEN ((rt1.c5) NOTNULL) WHEN rt1.c4 COLLATE NOCASE THEN (+ (rt1.c6)) END DESC, CASE (((rt1.c6, rt1.c2, rt1.c1)) BETWEEN ((rt1.c5, t0.c3, rt1.c4)) AND (('', t0.c4, t0.c1)))  WHEN ((rt1.c1)&(t0.c1)) THEN CAST(t0.c1 AS NUMERIC) WHEN 0.5021690346612778 THEN ((rt1.c6)/(rt1.c5)) END ASC INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c4) NOT NULL)) NOT BETWEEN (-744012418) AND (((t0.c4) NOT NULL)))) ORDER BY CASE ((t0.c2)>(rt1.c2))  WHEN ((rt1.c4)<<(rt1.c4)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (t0.c3)) WHEN (t0.c4 IN (t0.c4)) THEN ((rt1.c5) NOTNULL) WHEN rt1.c4 COLLATE NOCASE THEN (+ (rt1.c6)) END DESC, CASE (((rt1.c6, rt1.c2, rt1.c1)) BETWEEN ((rt1.c5, t0.c3, rt1.c4)) AND (('', t0.c4, t0.c1)))  WHEN ((rt1.c1)&(t0.c1)) THEN CAST(t0.c1 AS NUMERIC) WHEN 0.5021690346612778 THEN ((rt1.c6)/(rt1.c5)) END ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CAST(t0.c4 AS NUMERIC)  WHEN ((('292240954', t0.c2, t0.c2)) BETWEEN ((t0.c1, t0.c4, t0.c1)) AND ((t0.c0, t0.c2, t0.c1))) THEN ((0x73550137) IS TRUE) WHEN (NOT (NULL)) THEN CASE WHEN t0.c0 THEN t0.c4 WHEN x'f7ac' THEN t0.c1 END END);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CASE CAST(t0.c4 AS NUMERIC)  WHEN ((('292240954', t0.c2, t0.c2)) BETWEEN ((t0.c1, t0.c4, t0.c1)) AND ((t0.c0, t0.c2, t0.c1))) THEN ((0x73550137) IS TRUE) WHEN (NOT (NULL)) THEN CASE WHEN t0.c0 THEN t0.c4 WHEN x'f7ac' THEN t0.c1 END END) ORDER BY ((CASE WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c4 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END)IS NOT(CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c3 THEN t0.c4 WHEN t0.c2 THEN x'' END)) ASC, (((t0.c2, t0.c1)) NOT BETWEEN ((CASE t0.c4  WHEN t0.c4 THEN t0.c1 WHEN t0.c1 THEN t0.c4 END, t0.c2 COLLATE NOCASE)) AND ((((t0.c0)<(t0.c3)), ABS(t0.c4)))) DESC LIMIT 0X0;
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c1)<>(rt1.c4))))!=(((((NULL, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c4)) AND ((t0.c0, rt1.c1)))))));
SELECT ALL * FROM t0, rt1 WHERE ((((((((t0.c1)<(rt1.c4))))<(((((NULL, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c4)) AND ((t0.c0, rt1.c1)))))))AND(CAST((((x'1346'))<>((rt1.c2))) AS TEXT)))) ORDER BY ((rt1.c4 COLLATE RTRIM) BETWEEN (t0.c2) AND (x'9b')) DESC LIMIT 0 INTERSECT SELECT * FROM t0, rt1 WHERE (0.5418771814611225) ORDER BY ((rt1.c4 COLLATE RTRIM) BETWEEN (t0.c2) AND (x'9b')) DESC LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c1)<>(rt1.c4))))!=(((((NULL, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c4)) AND ((t0.c0, rt1.c1)))))));
SELECT ALL * FROM t0, rt1 WHERE ((((((((t0.c1)<(rt1.c4))))<(((((NULL, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c4)) AND ((t0.c0, rt1.c1)))))))AND(CAST((((x'1346'))<>((rt1.c2))) AS TEXT)))) ORDER BY ((rt1.c4 COLLATE RTRIM) BETWEEN (t0.c2) AND (x'9b')) DESC LIMIT 0 INTERSECT SELECT * FROM t0, rt1 WHERE (0.5418771814611225) ORDER BY ((rt1.c4 COLLATE RTRIM) BETWEEN (t0.c2) AND (x'9b')) DESC LIMIT 0x0;
SELECT * FROM t0, rt1 WHERE (CASE ((rt1.c4)>=(rt1.c1))  WHEN (('28655928')!=(rt1.c1)) THEN (NOT (rt1.c6)) ELSE rt1.c6 COLLATE NOCASE END) ORDER BY (rt1.c0 IN (COALESCE(DISTINCT rt1.c2, rt1.c0), CAST(t0.c3 AS BLOB))), t0.c0  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE ((rt1.c4)>(rt1.c1))  WHEN (('28655928')!=(rt1.c1)) THEN (NOT (rt1.c6)) ELSE rt1.c6 COLLATE NOCASE END)AND(((((rt1.c4) NOT NULL))*(CASE rt1.c4  WHEN 0.35129987580712185 THEN rt1.c5 WHEN rt1.c4 THEN x'' END))))) ORDER BY (rt1.c0 IN (COALESCE(DISTINCT rt1.c2, rt1.c0), CAST(t0.c3 AS BLOB))), t0.c0  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((865177289)=((((t0.c4, rt1.c3))>=((rt1.c2, t0.c0)))))) ORDER BY (rt1.c0 IN (COALESCE(DISTINCT rt1.c2, rt1.c0), CAST(t0.c3 AS BLOB))), t0.c0  NULLS FIRST LIMIT 0X0;
SELECT * FROM t0, rt1 WHERE (CASE ((rt1.c4)>=(rt1.c1))  WHEN (('28655928')!=(rt1.c1)) THEN (NOT (rt1.c6)) ELSE rt1.c6 COLLATE NOCASE END) ORDER BY (rt1.c0 IN (COALESCE(DISTINCT rt1.c2, rt1.c0), CAST(t0.c3 AS BLOB))), t0.c0  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE ((rt1.c4)>(rt1.c1))  WHEN (('28655928')!=(rt1.c1)) THEN (NOT (rt1.c6)) ELSE rt1.c6 COLLATE NOCASE END)AND(((((rt1.c4) NOT NULL))*(CASE rt1.c4  WHEN 0.35129987580712185 THEN rt1.c5 WHEN rt1.c4 THEN x'' END))))) ORDER BY (rt1.c0 IN (COALESCE(DISTINCT rt1.c2, rt1.c0), CAST(t0.c3 AS BLOB))), t0.c0  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((865177289)=((((t0.c4, rt1.c3))>=((rt1.c2, t0.c0)))))) ORDER BY (rt1.c0 IN (COALESCE(DISTINCT rt1.c2, rt1.c0), CAST(t0.c3 AS BLOB))), t0.c0  NULLS FIRST LIMIT 0X0;
SELECT * FROM t0, rt1 WHERE (t0.c1);
SELECT ALL * FROM t0, rt1 WHERE (((t0.c1)AND(CASE CAST(t0.c4 AS BLOB)  WHEN ((((((((rt1.c6)OR(t0.c2)))AND(rt1.c6)))OR(rt1.c3)))AND(rt1.c2)) THEN (~ (rt1.c6)) WHEN ((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN rt1.c4 COLLATE NOCASE WHEN (+ (rt1.c0)) THEN -2078062428 END))) ORDER BY (NOT (CAST(t0.c1 AS TEXT))) ASC;
SELECT * FROM t0, rt1 WHERE (t0.c1);
SELECT ALL * FROM t0, rt1 WHERE (((t0.c1)AND(CASE CAST(t0.c4 AS BLOB)  WHEN ((((((((rt1.c6)OR(t0.c2)))AND(rt1.c6)))OR(rt1.c3)))AND(rt1.c2)) THEN (~ (rt1.c6)) WHEN ((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN rt1.c4 COLLATE NOCASE WHEN (+ (rt1.c0)) THEN -2078062428 END))) ORDER BY (NOT (CAST(t0.c1 AS TEXT))) ASC;
SELECT MIN(t0.c2) FROM rt1, t0 WHERE (CHANGES()) ORDER BY SQLITE_COMPILEOPTION_GET(x'') ASC  NULLS LAST;
SELECT DISTINCT MIN(t0.c2) FROM rt1, t0 WHERE (((CHANGES())AND(((((rt1.c0) IS TRUE))>>(((rt1.c6)GLOB(rt1.c0))))))) ORDER BY SQLITE_COMPILEOPTION_GET(x'') ASC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(t0.c2) FROM rt1, t0 WHERE ((((t0.c2) IS TRUE) IN (t0.c3 COLLATE NOCASE))) ORDER BY SQLITE_COMPILEOPTION_GET(x'') ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c0)) NOT BETWEEN (('-248273772')) AND (((+ (rt1.c1)))))) ORDER BY CASE WHEN rt1.c6 THEN (rt1.c0 IN (x'dd4e')) WHEN CAST(t0.c3 AS NUMERIC) THEN ((((((((rt1.c4)AND(x'dd0dc643')))OR(1.799702489E9)))AND(NULL)))AND(t0.c0)) ELSE ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c3)) END  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ((((((rt1.c0)) NOT BETWEEN (('-248273772')) AND (((+ (rt1.c1))))))AND((((t0.c0) BETWEEN (rt1.c1) AND (t0.c3)) IN ((((rt1.c4))<=((t0.c0)))))))) ORDER BY CASE WHEN rt1.c6 THEN (rt1.c0 IN (x'dd4e')) WHEN CAST(t0.c3 AS NUMERIC) THEN ((((((((rt1.c4)AND(x'dd0dc643')))OR(1.799702489E9)))AND(NULL)))AND(t0.c0)) ELSE ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c3)) END  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM rt1, t0 WHERE ((0.3459606008296471 IN ())) ORDER BY CASE WHEN rt1.c6 THEN (rt1.c0 IN (x'dd4e')) WHEN CAST(t0.c3 AS NUMERIC) THEN ((((((((rt1.c4)AND(x'dd0dc643')))OR(1.799702489E9)))AND(NULL)))AND(t0.c0)) ELSE ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c3)) END  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c0)) NOT BETWEEN (('-248273772')) AND (((+ (rt1.c1)))))) ORDER BY CASE WHEN rt1.c6 THEN (rt1.c0 IN (x'dd4e')) WHEN CAST(t0.c3 AS NUMERIC) THEN ((((((((rt1.c4)AND(x'dd0dc643')))OR(1.799702489E9)))AND(NULL)))AND(t0.c0)) ELSE ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c3)) END  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ((((((rt1.c0)) NOT BETWEEN (('-248273772')) AND (((+ (rt1.c1))))))AND((((t0.c0) BETWEEN (rt1.c1) AND (t0.c3)) IN ((((rt1.c4))<=((t0.c0)))))))) ORDER BY CASE WHEN rt1.c6 THEN (rt1.c0 IN (x'dd4e')) WHEN CAST(t0.c3 AS NUMERIC) THEN ((((((((rt1.c4)AND(x'dd0dc643')))OR(1.799702489E9)))AND(NULL)))AND(t0.c0)) ELSE ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c3)) END  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM rt1, t0 WHERE ((0.3459606008296471 IN ())) ORDER BY CASE WHEN rt1.c6 THEN (rt1.c0 IN (x'dd4e')) WHEN CAST(t0.c3 AS NUMERIC) THEN ((((((((rt1.c4)AND(x'dd0dc643')))OR(1.799702489E9)))AND(NULL)))AND(t0.c0)) ELSE ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c3)) END  NULLS FIRST LIMIT 0;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (CAST(t0.c1 AS REAL) COLLATE RTRIM);
SELECT DISTINCT MAX(t0.c3) FROM t0 WHERE (((CAST(t0.c1 AS REAL) COLLATE RTRIM)AND(((((t0.c4)&(t0.c0))) BETWEEN (((t0.c0)>>(t0.c1))) AND (t0.c4 COLLATE NOCASE))))) ORDER BY ((((((((((((t0.c4 COLLATE NOCASE)OR(((t0.c2) ISNULL))))OR(t0.c0)))AND((('PRe룷') ISNULL))))AND((t0.c3 IN ()))))AND(((((((t0.c4)AND(t0.c1)))AND('{')))OR(t0.c3)))))AND(CAST(t0.c4 AS BLOB))), (+ (((0.5806564964651925)>=(t0.c1))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((((((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c6)))OR(rt1.c0)))AND(rt1.c2)))OR((rt1.c2 IN (rt1.c4)))))OR(rt1.c4 COLLATE RTRIM)))OR(rt1.c0)));
SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE (((((((((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c6)))OR(rt1.c0)))AND(rt1.c2)))OR((rt1.c2 IN (rt1.c4)))))OR(rt1.c4 COLLATE RTRIM)))OR(rt1.c0))) ORDER BY (((rt1.c5)) BETWEEN ((((((rt1.c1)OR(rt1.c4)))OR(rt1.c3)))) AND ((((rt1.c4) IS FALSE)))) DESC  NULLS LAST, (((((rt1.c2, rt1.c5, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c6, rt1.c5)) AND ((rt1.c1, rt1.c0, rt1.c2, rt1.c3))))AND(rt1.c3 COLLATE BINARY)) ASC  NULLS FIRST, ((((((rt1.c5) NOTNULL))OR('475221837')))OR(((((((((((((0.21951950718863833)OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c4)))OR(rt1.c5)))OR(rt1.c4)))) ASC  NULLS LAST, rt1.c4 ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((((((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c6)))OR(rt1.c0)))AND(rt1.c2)))OR((rt1.c2 IN (rt1.c4)))))OR(rt1.c4 COLLATE RTRIM)))OR(rt1.c0)));
SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE (((((((((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c6)))OR(rt1.c0)))AND(rt1.c2)))OR((rt1.c2 IN (rt1.c4)))))OR(rt1.c4 COLLATE RTRIM)))OR(rt1.c0))) ORDER BY (((rt1.c5)) BETWEEN ((((((rt1.c1)OR(rt1.c4)))OR(rt1.c3)))) AND ((((rt1.c4) IS FALSE)))) DESC  NULLS LAST, (((((rt1.c2, rt1.c5, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c6, rt1.c5)) AND ((rt1.c1, rt1.c0, rt1.c2, rt1.c3))))AND(rt1.c3 COLLATE BINARY)) ASC  NULLS FIRST, ((((((rt1.c5) NOTNULL))OR('475221837')))OR(((((((((((((0.21951950718863833)OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c4)))OR(rt1.c5)))OR(rt1.c4)))) ASC  NULLS LAST, rt1.c4 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((- (rt1.c6))) ORDER BY '-1608817722'  NULLS LAST, (((rt1.c5, rt1.c3)) NOT BETWEEN ((CAST(rt1.c2 AS NUMERIC), rt1.c2 COLLATE BINARY)) AND (((rt1.c1 IN (rt1.c3)), ((rt1.c6) NOT NULL)))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((- (rt1.c6)))AND(ROUND((NOT (rt1.c1)), -1569543461 COLLATE NOCASE)))) ORDER BY '-1608817722'  NULLS LAST, (((rt1.c5, rt1.c3)) NOT BETWEEN ((CAST(rt1.c2 AS NUMERIC), rt1.c2 COLLATE BINARY)) AND (((rt1.c1 IN (rt1.c3)), ((rt1.c6) NOT NULL)))) DESC INTERSECT SELECT ALL COUNT(*) FROM rt1 WHERE (json_quote(((rt1.c1) BETWEEN (rt1.c6) AND (rt1.c2)))) ORDER BY '-1608817722'  NULLS LAST, (((rt1.c5, rt1.c3)) NOT BETWEEN ((CAST(rt1.c2 AS NUMERIC), rt1.c2 COLLATE BINARY)) AND (((rt1.c1 IN (rt1.c3)), ((rt1.c6) NOT NULL)))) DESC;
SELECT * FROM t0, rt1 WHERE ((((t0.c2, t0.c3, rt1.c6)) NOT BETWEEN ((((t0.c1)>>(rt1.c5)), ((t0.c2)*(rt1.c1)), t0.c0)) AND ((CASE WHEN t0.c0 THEN t0.c2 WHEN x'b7df20' THEN '581450124' END, ((t0.c1)+(x'7a')), CASE rt1.c2  WHEN t0.c2 THEN '-1994465445' WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c6 THEN t0.c4 WHEN rt1.c3 THEN rt1.c4 WHEN 0xffffffffb3bf5733 THEN t0.c0 WHEN t0.c4 THEN rt1.c5 WHEN t0.c2 THEN t0.c4 ELSE t0.c3 END))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((t0.c2, t0.c3, rt1.c6)) NOT BETWEEN ((((t0.c1)>>(rt1.c5)), ((t0.c2)*(rt1.c1)), t0.c0)) AND ((CASE WHEN t0.c0 THEN t0.c2 WHEN x'b7df20' THEN '581450124' END, ((t0.c1)+(x'7a')), CASE rt1.c2  WHEN t0.c2 THEN '-1994465445' WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c6 THEN t0.c4 WHEN rt1.c3 THEN rt1.c4 WHEN -1279305933 THEN t0.c0 WHEN t0.c4 THEN rt1.c5 WHEN t0.c2 THEN t0.c4 ELSE t0.c3 END))))AND(CASE WHEN rt1.c0 THEN t0.c3 WHEN t0.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c4 END COLLATE RTRIM))) ORDER BY CASE WHEN CASE WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c4 END THEN rt1.c3 COLLATE BINARY ELSE (((x''))>((rt1.c1))) END  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE ((((t0.c2, t0.c3, rt1.c6)) NOT BETWEEN ((((t0.c1)>>(rt1.c5)), ((t0.c2)*(rt1.c1)), t0.c0)) AND ((CASE WHEN t0.c0 THEN t0.c2 WHEN x'b7df20' THEN '581450124' END, ((t0.c1)+(x'7a')), CASE rt1.c2  WHEN t0.c2 THEN '-1994465445' WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c6 THEN t0.c4 WHEN rt1.c3 THEN rt1.c4 WHEN 0xffffffffb3bf5733 THEN t0.c0 WHEN t0.c4 THEN rt1.c5 WHEN t0.c2 THEN t0.c4 ELSE t0.c3 END))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((t0.c2, t0.c3, rt1.c6)) NOT BETWEEN ((((t0.c1)>>(rt1.c5)), ((t0.c2)*(rt1.c1)), t0.c0)) AND ((CASE WHEN t0.c0 THEN t0.c2 WHEN x'b7df20' THEN '581450124' END, ((t0.c1)+(x'7a')), CASE rt1.c2  WHEN t0.c2 THEN '-1994465445' WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c6 THEN t0.c4 WHEN rt1.c3 THEN rt1.c4 WHEN -1279305933 THEN t0.c0 WHEN t0.c4 THEN rt1.c5 WHEN t0.c2 THEN t0.c4 ELSE t0.c3 END))))AND(CASE WHEN rt1.c0 THEN t0.c3 WHEN t0.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c4 END COLLATE RTRIM))) ORDER BY CASE WHEN CASE WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c4 END THEN rt1.c3 COLLATE BINARY ELSE (((x''))>((rt1.c1))) END  NULLS FIRST;
SELECT MAX(rt1.c5) FROM t0, rt1 WHERE (((((rt1.c4)IS(rt1.c6))) IS FALSE));
SELECT DISTINCT MAX(rt1.c5) FROM t0, rt1 WHERE (((((rt1.c4)IS(rt1.c6))) IS FALSE)) ORDER BY ((((rt1.c1)OR(rt1.c2)))<>(CAST(rt1.c1 AS REAL)));
SELECT ALL MAX(t0.c1) FROM t0 NATURAL JOIN rt1 WHERE (LIKELY(DISTINCT HEX(rt1.c1))) ORDER BY ((rt1.c2) NOTNULL), ((CAST(rt1.c4 AS BLOB))IS NOT((((t0.c4)) BETWEEN ((0xffffffffa79112e8)) AND ((rt1.c5))))) ASC;
SELECT DISTINCT MAX(t0.c1) FROM t0 NATURAL JOIN rt1 WHERE (LIKELY(DISTINCT HEX(rt1.c1))) ORDER BY ((rt1.c2) NOTNULL), ((CAST(rt1.c4 AS BLOB))IS NOT((((t0.c4)) BETWEEN ((0Xffffffffa79112e8)) AND ((rt1.c5))))) ASC INTERSECT SELECT DISTINCT MAX(t0.c1) FROM t0 NATURAL JOIN rt1 WHERE ((((((((((('18393758' COLLATE NOCASE)OR(rt1.c0 COLLATE NOCASE)))AND((((rt1.c3)) NOT BETWEEN (('A6꒔*Jx')) AND ((t0.c4))))))OR((rt1.c6 IN (t0.c1)))))OR(-1.184841295E9)))AND(((rt1.c4) NOT BETWEEN (rt1.c4) AND (9.96534958E8))))) ORDER BY ((rt1.c2) NOTNULL), ((CAST(rt1.c4 AS BLOB))IS NOT((((t0.c4)) BETWEEN ((-1483664664)) AND ((rt1.c5))))) ASC;
SELECT MAX(rt1.c5) FROM rt1 WHERE (((0.31123067525424564) NOT BETWEEN (((rt1.c2) ISNULL)) AND (COALESCE(rt1.c0, rt1.c1, rt1.c1))));
SELECT ALL MAX(rt1.c5) FROM rt1 WHERE (((0.31123067525424564) NOT BETWEEN (((rt1.c2) ISNULL)) AND (COALESCE(rt1.c0, rt1.c1, rt1.c1)))) LIMIT 0x2 INTERSECT SELECT ALL MAX(rt1.c5) FROM rt1 WHERE (IFNULL(((((((((((rt1.c0)OR(0X7c9b674a)))OR(rt1.c2)))OR('1765084207')))OR(rt1.c3)))OR(rt1.c3)), rt1.c2 COLLATE NOCASE)) LIMIT 0X2;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((- (((t0.c3)==('H''!T홏S'))))) ORDER BY (((((t0.c0))<((t0.c3)))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c3 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN 0.17179164704215244 END) AND (CAST(t0.c3 AS BLOB)))  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE ((- (((t0.c3)=('H''!T홏S'))))) ORDER BY ((((((((((t0.c2)OR(t0.c3)))OR(NULL)))OR(t0.c1)))OR(t0.c2))) NOT BETWEEN (-6.14220311E8) AND (((t0.c4)IS NOT(t0.c1))))  NULLS LAST, ((((((t0.c0)OR(t0.c0)))OR(t0.c1)))>=(((t0.c1)|(t0.c3)))) LIMIT 0x0;
SELECT ALL * FROM rt1 WHERE (((CASE WHEN '-1177489075' THEN rt1.c2 WHEN rt1.c1 THEN x'' WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END) NOT NULL)) ORDER BY CAST(CAST(rt1.c6 AS BLOB) AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (((CASE WHEN '-1177489075' THEN rt1.c2 WHEN rt1.c1 THEN x'' WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END) NOT NULL)) ORDER BY CAST(CAST(rt1.c6 AS BLOB) AS NUMERIC) DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt1 WHERE (((CASE WHEN '-1177489075' THEN rt1.c2 WHEN rt1.c1 THEN x'' WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END) NOT NULL)) ORDER BY CAST(CAST(rt1.c6 AS BLOB) AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (((CASE WHEN '-1177489075' THEN rt1.c2 WHEN rt1.c1 THEN x'' WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END) NOT NULL)) ORDER BY CAST(CAST(rt1.c6 AS BLOB) AS NUMERIC) DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt1 WHERE (((+ (x'fbdc')) IN ())) ORDER BY ((rt1.c5 COLLATE RTRIM) BETWEEN (((rt1.c3)GLOB(rt1.c4))) AND (rt1.c3)) DESC  NULLS FIRST, (((rt1.c6)) BETWEEN ((rt1.c0)) AND ((rt1.c4))) COLLATE RTRIM ASC, ((IFNULL(DISTINCT rt1.c5, '0.5286396087382006')) NOT BETWEEN (((rt1.c4) NOT BETWEEN (0x3c9b4a4f) AND (rt1.c0))) AND (rt1.c2 COLLATE BINARY));
SELECT DISTINCT * FROM rt1 WHERE (((((+ (x'fbdc')) IN ()))AND((((rt1.c3)&(rt1.c5)) IN (0.8840257327416107))))) ORDER BY ((0.6373565468661977) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c2 END) AND (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c3)))) DESC, (rt1.c3 COLLATE RTRIM IN (((1957319125) NOTNULL)))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c4 AS TEXT))>>('0.41611625266826924'))) ORDER BY ((0.6373565468661977) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c2 END) AND (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c3)))) DESC, (rt1.c3 COLLATE RTRIM IN (((0x74aa51d5) NOTNULL)))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM rt1 WHERE (((+ (x'fbdc')) IN ())) ORDER BY ((rt1.c5 COLLATE RTRIM) BETWEEN (((rt1.c3)GLOB(rt1.c4))) AND (rt1.c3)) DESC  NULLS FIRST, (((rt1.c6)) BETWEEN ((rt1.c0)) AND ((rt1.c4))) COLLATE RTRIM ASC, ((IFNULL(DISTINCT rt1.c5, '0.5286396087382006')) NOT BETWEEN (((rt1.c4) NOT BETWEEN (0x3c9b4a4f) AND (rt1.c0))) AND (rt1.c2 COLLATE BINARY));
SELECT DISTINCT * FROM rt1 WHERE (((((+ (x'fbdc')) IN ()))AND((((rt1.c3)&(rt1.c5)) IN (0.8840257327416107))))) ORDER BY ((0.6373565468661977) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c2 END) AND (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c3)))) DESC, (rt1.c3 COLLATE RTRIM IN (((1957319125) NOTNULL)))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c4 AS TEXT))>>('0.41611625266826924'))) ORDER BY ((0.6373565468661977) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c2 END) AND (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c3)))) DESC, (rt1.c3 COLLATE RTRIM IN (((0x74aa51d5) NOTNULL)))  NULLS FIRST LIMIT 0X0;
SELECT * FROM t0, rt1 WHERE (CAST(((t0.c2)-(rt1.c3)) AS INTEGER)) ORDER BY (NOT (rt1.c5)) COLLATE BINARY DESC  NULLS LAST, ((rt1.c1) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (((CAST(((t0.c2)-(rt1.c3)) AS INTEGER))AND((- (rt1.c0)) COLLATE NOCASE))) ORDER BY ((((((t0.c1)%(rt1.c5)))OR('')))OR(CASE t0.c3  WHEN rt1.c3 THEN t0.c2 END))  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (CAST(((t0.c2)-(rt1.c3)) AS INTEGER)) ORDER BY (NOT (rt1.c5)) COLLATE BINARY DESC  NULLS LAST, ((rt1.c1) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (((CAST(((t0.c2)-(rt1.c3)) AS INTEGER))AND((- (rt1.c0)) COLLATE NOCASE))) ORDER BY ((((((t0.c1)%(rt1.c5)))OR('')))OR(CASE t0.c3  WHEN rt1.c3 THEN t0.c2 END))  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM rt1, t0 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0)) IN (((t0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c5)), NULL COLLATE RTRIM)));
SELECT DISTINCT MIN(t0.c0) FROM rt1, t0 WHERE ((((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0)) IN (((t0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c5)), NULL COLLATE RTRIM)))AND(((- (rt1.c5)) IN ())))) ORDER BY ((LIKELY(DISTINCT rt1.c3))<=((((NULL, rt1.c4)) BETWEEN ((0.7447632958535192, rt1.c4)) AND ((rt1.c1, t0.c4))))), CASE ((rt1.c2)/(rt1.c6))  WHEN TYPEOF(rt1.c6) THEN CAST(x'' AS NUMERIC) WHEN ((t0.c0) NOT BETWEEN (NULL) AND (rt1.c4)) THEN rt1.c5 END ASC  NULLS LAST LIMIT 0X0;
SELECT ALL MAX(t0.c1) FROM rt1, t0 WHERE (((((NOT (rt1.c1)), ((((((t0.c0)OR(rt1.c2)))OR(rt1.c4)))AND('256503212'))))>=((((t0.c4)IS(rt1.c5)), -268056775 COLLATE NOCASE))));
SELECT ALL MAX(t0.c1) FROM rt1, t0 WHERE (((((NOT (rt1.c1)), ((((((t0.c0)OR(rt1.c2)))OR(rt1.c4)))AND('256503212'))))=((((t0.c4)IS(rt1.c5)), -268056775 COLLATE NOCASE)))) ORDER BY t0.c3 DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE ((CASE t0.c2  WHEN t0.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c6 END IN (CAST(t0.c4 AS INTEGER), ((t0.c4)>(rt1.c0))))) ORDER BY ((0.18598264017641553) NOT BETWEEN ((((rt1.c3, x'f844', rt1.c5)) NOT BETWEEN ((t0.c4, rt1.c0, rt1.c1)) AND ((t0.c0, '489068276', rt1.c4)))) AND (CASE rt1.c6  WHEN rt1.c2 THEN rt1.c5 ELSE t0.c4 END))  NULLS FIRST, CASE load_extension(t0.c2, rt1.c2)  WHEN (rt1.c5 IN (t0.c1)) THEN (t0.c4 IN ()) ELSE ((((rt1.c3)AND(rt1.c5)))OR(rt1.c2)) END DESC, (CASE WHEN t0.c2 THEN x'' END IN ());
SELECT ALL * FROM t0, rt1 WHERE ((((CASE t0.c2  WHEN t0.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c6 END IN (CAST(t0.c4 AS INTEGER), ((t0.c4)>(rt1.c0)))))AND(((((((CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c1 END)AND(((NULL) ISNULL))))AND(((t0.c2) BETWEEN (rt1.c3) AND (rt1.c0)))))OR(rt1.c3 COLLATE BINARY))))) ORDER BY (((rt1.c5) BETWEEN (1.633093055E9) AND (t0.c1)) IN ()) ASC LIMIT 0X2 INTERSECT SELECT * FROM t0, rt1 WHERE (CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c6 THEN t0.c4 WHEN rt1.c6 THEN rt1.c0 WHEN t0.c3 THEN rt1.c0 ELSE rt1.c6 END COLLATE NOCASE) ORDER BY (((rt1.c5) BETWEEN (1.633093055E9) AND (t0.c1)) IN ()) ASC LIMIT 2;
SELECT ALL * FROM t0, rt1 WHERE ((CASE t0.c2  WHEN t0.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c6 END IN (CAST(t0.c4 AS INTEGER), ((t0.c4)>(rt1.c0))))) ORDER BY ((0.18598264017641553) NOT BETWEEN ((((rt1.c3, x'f844', rt1.c5)) NOT BETWEEN ((t0.c4, rt1.c0, rt1.c1)) AND ((t0.c0, '489068276', rt1.c4)))) AND (CASE rt1.c6  WHEN rt1.c2 THEN rt1.c5 ELSE t0.c4 END))  NULLS FIRST, CASE load_extension(t0.c2, rt1.c2)  WHEN (rt1.c5 IN (t0.c1)) THEN (t0.c4 IN ()) ELSE ((((rt1.c3)AND(rt1.c5)))OR(rt1.c2)) END DESC, (CASE WHEN t0.c2 THEN x'' END IN ());
SELECT MAX(t0.c1) FROM t0 WHERE (CAST(((((t0.c4)OR('35009463')))OR(x'7d')) AS TEXT)) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN (('1559739709')) AND ((t0.c3)))) AND (t0.c2 COLLATE BINARY)) ASC  NULLS FIRST, t0.c4  NULLS LAST, (t0.c4 IN (t0.c3, t0.c1)) COLLATE NOCASE, ((t0.c0) NOT BETWEEN (((((((((((t0.c4)OR(t0.c2)))OR(t0.c3)))OR(t0.c1)))OR(t0.c2)))AND(0.9690975511977454))) AND ((((t0.c2, t0.c1)) BETWEEN ((t0.c4, t0.c4)) AND ((t0.c4, t0.c3)))));
SELECT DISTINCT MAX(t0.c1) FROM t0 WHERE (CAST(((((t0.c4)OR('35009463')))OR(x'7d')) AS TEXT)) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN (('1559739709')) AND ((t0.c3)))) AND (t0.c2 COLLATE BINARY)) ASC  NULLS FIRST, t0.c4  NULLS LAST, (t0.c4 IN (t0.c3, t0.c1)) COLLATE NOCASE, ((t0.c0) NOT BETWEEN (((((((((((t0.c4)OR(t0.c2)))OR(t0.c3)))OR(t0.c1)))OR(t0.c2)))AND(0.9690975511977454))) AND ((((t0.c2, t0.c1)) BETWEEN ((t0.c4, t0.c4)) AND ((t0.c4, t0.c3))))) INTERSECT SELECT DISTINCT MAX(t0.c1) FROM t0 WHERE ((((t0.c3 IN ())) NOT BETWEEN (0.49304416369957216) AND (((((t0.c4)OR(t0.c0)))AND('-580345443'))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN (('1559739709')) AND ((t0.c3)))) AND (t0.c2 COLLATE BINARY)) ASC  NULLS FIRST, t0.c4  NULLS LAST, (t0.c4 IN (t0.c3, t0.c1)) COLLATE NOCASE, ((t0.c0) NOT BETWEEN (((((((((((t0.c4)OR(t0.c2)))OR(t0.c3)))OR(t0.c1)))OR(t0.c2)))AND(0.9690975511977454))) AND ((((t0.c2, t0.c1)) BETWEEN ((t0.c4, t0.c4)) AND ((t0.c4, t0.c3)))));
SELECT * FROM t0 WHERE (NULL) ORDER BY NULLIF(DISTINCT JULIANDAY(t0.c4, t0.c3, t0.c1), (NOT (t0.c3))), t0.c4 COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((NULL)AND((((t0.c4, t0.c3, t0.c3)) NOT BETWEEN ((t0.c4 COLLATE BINARY, (t0.c4 IN (t0.c4)), t0.c3 COLLATE RTRIM)) AND ((t0.c0 COLLATE RTRIM, ((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))AND(t0.c4)))OR(t0.c2)), ((t0.c0)|(t0.c0)))))))) ORDER BY ((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0)))GLOB(t0.c1 COLLATE BINARY)) ASC  NULLS LAST, IFNULL(DISTINCT t0.c4 COLLATE RTRIM, ((0.8509877693455483) IS FALSE))  NULLS LAST LIMIT 0;
SELECT * FROM t0 WHERE (NULL) ORDER BY NULLIF(DISTINCT JULIANDAY(t0.c4, t0.c3, t0.c1), (NOT (t0.c3))), t0.c4 COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((NULL)AND((((t0.c4, t0.c3, t0.c3)) NOT BETWEEN ((t0.c4 COLLATE BINARY, (t0.c4 IN (t0.c4)), t0.c3 COLLATE RTRIM)) AND ((t0.c0 COLLATE RTRIM, ((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))AND(t0.c4)))OR(t0.c2)), ((t0.c0)|(t0.c0)))))))) ORDER BY ((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c0)))GLOB(t0.c1 COLLATE BINARY)) ASC  NULLS LAST, IFNULL(DISTINCT t0.c4 COLLATE RTRIM, ((0.8509877693455483) IS FALSE))  NULLS LAST LIMIT 0;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((- (t0.c4)))OR((t0.c0 IN (t0.c2)))))AND(CASE '9*6L'  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END)));
SELECT COUNT(*) FROM t0 WHERE ((((((((- (t0.c4)))OR((t0.c0 IN (t0.c2)))))AND(CASE '9*6L'  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END)))AND((('1147367855') IS FALSE) COLLATE NOCASE))) LIMIT 1 INTERSECT SELECT COUNT(*) FROM t0 WHERE ((('-528801166')<=((- (t0.c4))))) LIMIT 0x1;
SELECT * FROM rt1, t0 WHERE (((-1.230812522E9 COLLATE BINARY)AND(t0.c2)));
SELECT * FROM rt1, t0 WHERE (((((-1.230812522E9 COLLATE BINARY)AND(t0.c2)))AND(((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)))OR(CAST(rt1.c3 AS REAL)))))) ORDER BY (((rt1.c0, rt1.c0)) NOT BETWEEN ((NULL, ((t0.c3) ISNULL))) AND ((((t0.c0) IS TRUE), ((t0.c3)IS(t0.c2))))), t0.c0 ASC  NULLS LAST LIMIT 0x0;
SELECT * FROM rt1, t0 WHERE (((-1.230812522E9 COLLATE BINARY)AND(t0.c2)));
SELECT * FROM rt1, t0 WHERE (((((-1.230812522E9 COLLATE BINARY)AND(t0.c2)))AND(((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)))OR(CAST(rt1.c3 AS REAL)))))) ORDER BY (((rt1.c0, rt1.c0)) NOT BETWEEN ((NULL, ((t0.c3) ISNULL))) AND ((((t0.c0) IS TRUE), ((t0.c3)IS(t0.c2))))), t0.c0 ASC  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(t0.c4) FROM t0 WHERE (CAST(0.2672957122232348 AS INTEGER)) ORDER BY NULL;
SELECT ALL MAX(t0.c4) FROM t0 WHERE (((CAST(0.2672957122232348 AS INTEGER))AND(1.967614267E9))) ORDER BY NULL;
SELECT * FROM rt1, t0 WHERE ((((x'', t0.c1)) BETWEEN ((((rt1.c4) NOT NULL), GLOB(t0.c1, 1e500))) AND ((rt1.c6, ((rt1.c5) BETWEEN (rt1.c2) AND (t0.c1))))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((x'', t0.c1)) BETWEEN ((((rt1.c4) NOT NULL), GLOB(t0.c1, 1e500))) AND ((rt1.c6, ((rt1.c5) BETWEEN (rt1.c2) AND (t0.c1)))))) ORDER BY t0.c4  NULLS FIRST LIMIT 0x1;
SELECT * FROM rt1, t0 WHERE ((((x'', t0.c1)) BETWEEN ((((rt1.c4) NOT NULL), GLOB(t0.c1, 1e500))) AND ((rt1.c6, ((rt1.c5) BETWEEN (rt1.c2) AND (t0.c1))))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((x'', t0.c1)) BETWEEN ((((rt1.c4) NOT NULL), GLOB(t0.c1, 1e500))) AND ((rt1.c6, ((rt1.c5) BETWEEN (rt1.c2) AND (t0.c1)))))) ORDER BY t0.c4  NULLS FIRST LIMIT 0x1;
SELECT MIN(rt1.c2) FROM t0 CROSS JOIN rt1 ON (+ (((t0.c3)>(rt1.c1)))) WHERE (CASE WHEN ((rt1.c5) BETWEEN (rt1.c1) AND (rt1.c1)) THEN t0.c3 WHEN x'' THEN rt1.c2 COLLATE RTRIM WHEN (- (NULL)) THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c1)) END);
SELECT DISTINCT MIN(rt1.c2) FROM t0 CROSS JOIN rt1 ON (+ (((t0.c3)>(rt1.c1)))) WHERE (CASE WHEN ((rt1.c5) BETWEEN (rt1.c1) AND (rt1.c1)) THEN t0.c3 WHEN x'' THEN rt1.c2 COLLATE RTRIM WHEN (- (NULL)) THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c1)) END) ORDER BY ((rt1.c2) BETWEEN (((((((rt1.c4)AND('2C5/(ln')))OR(rt1.c0)))AND(rt1.c6))) AND ((- (rt1.c4))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((~ ((+ (rt1.c0)))));
SELECT ALL * FROM rt1 WHERE ((~ ((+ (rt1.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED((((rt1.c0, rt1.c2))<=((rt1.c4, rt1.c4)))) ASC, ((LOWER(DISTINCT rt1.c5))>=(CAST(rt1.c1 AS NUMERIC)))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((~ ((+ (rt1.c0)))));
SELECT ALL * FROM rt1 WHERE ((~ ((+ (rt1.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED((((rt1.c0, rt1.c2))<=((rt1.c4, rt1.c4)))) ASC, ((LOWER(DISTINCT rt1.c5))>=(CAST(rt1.c1 AS NUMERIC)))  NULLS LAST;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE ((+ (((t0.c1)AND(rt1.c6)))));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE ((((+ (((t0.c1)AND(rt1.c6)))))AND((CAST(rt1.c6 AS INTEGER) IN (((t0.c4) IS FALSE)))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c5)||(rt1.c2))) BETWEEN (((t0.c3) IS TRUE)) AND (''))) LIMIT 1;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE ((+ (((t0.c1)AND(rt1.c6)))));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE ((((+ (((t0.c1)AND(rt1.c6)))))AND((CAST(rt1.c6 AS INTEGER) IN (((t0.c4) IS FALSE)))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c5)||(rt1.c2))) BETWEEN (((t0.c3) IS TRUE)) AND (''))) LIMIT 1;
SELECT * FROM rt1, t0 WHERE ((((rt1.c5)) BETWEEN ((HEX(rt1.c5))) AND ((((((((((((x'')AND(rt1.c1)))OR(t0.c4)))OR(rt1.c4)))OR(rt1.c5)))OR(t0.c3))))));
SELECT * FROM rt1, t0 WHERE ((((((rt1.c5)) BETWEEN ((HEX(rt1.c5))) AND ((((((((((((x'')AND(rt1.c1)))OR(t0.c4)))OR(rt1.c4)))OR(rt1.c5)))OR(t0.c3))))))AND(((((t0.c1) IS FALSE)) IS FALSE)))) LIMIT 2 INTERSECT SELECT * FROM rt1, t0 WHERE (CASE (rt1.c4 IN (t0.c3))  WHEN 'H' THEN ((t0.c3) NOT BETWEEN (t0.c1) AND (t0.c2)) END) LIMIT 2;
SELECT * FROM rt1, t0 WHERE ((((rt1.c5)) BETWEEN ((HEX(rt1.c5))) AND ((((((((((((x'')AND(rt1.c1)))OR(t0.c4)))OR(rt1.c4)))OR(rt1.c5)))OR(t0.c3))))));
SELECT * FROM rt1, t0 WHERE ((((((rt1.c5)) BETWEEN ((HEX(rt1.c5))) AND ((((((((((((x'')AND(rt1.c1)))OR(t0.c4)))OR(rt1.c4)))OR(rt1.c5)))OR(t0.c3))))))AND(((((t0.c1) IS FALSE)) IS FALSE)))) LIMIT 2 INTERSECT SELECT * FROM rt1, t0 WHERE (CASE (rt1.c4 IN (t0.c3))  WHEN 'H' THEN ((t0.c3) NOT BETWEEN (t0.c1) AND (t0.c2)) END) LIMIT 2;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (LTRIM((t0.c2 IN (rt1.c3)))) ORDER BY (((t0.c2, rt1.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((((t0.c2)<>(t0.c4)), (rt1.c4 IN (rt1.c2, x'cc')), ((rt1.c3) ISNULL), LIKELY(rt1.c6))) AND ((0.9027303570748394, ((((rt1.c3)AND(t0.c4)))OR(rt1.c3)), (NOT (rt1.c3)), ((((t0.c3)AND(rt1.c2)))AND(x'61'))))) ASC, TRIM(2020146421, (((rt1.c6)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))))  NULLS FIRST, ((CASE WHEN t0.c1 THEN rt1.c1 WHEN rt1.c1 THEN '\
kྙTE' END) IS TRUE)  NULLS LAST;
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (LTRIM((t0.c2 IN (rt1.c3)))) ORDER BY (((t0.c2, rt1.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((((t0.c2)!=(t0.c4)), (rt1.c4 IN (rt1.c2, x'cc')), ((rt1.c3) ISNULL), LIKELY(rt1.c6))) AND ((0.9027303570748394, ((((rt1.c3)AND(t0.c4)))OR(rt1.c3)), (NOT (rt1.c3)), ((((t0.c3)AND(rt1.c2)))AND(x'61'))))) ASC, TRIM(0x7868fcf5, (((rt1.c6)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))))  NULLS FIRST, ((CASE WHEN t0.c1 THEN rt1.c1 WHEN rt1.c1 THEN '\
kྙTE' END) IS TRUE)  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (LIKE(((t0.c2) BETWEEN (t0.c2) AND (t0.c3)), (- ('1899454361')), 'T')) ORDER BY (((t0.c2, rt1.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((((t0.c2)<>(t0.c4)), (rt1.c4 IN (rt1.c2, x'cc')), ((rt1.c3) ISNULL), LIKELY(rt1.c6))) AND ((0.9027303570748394, ((((rt1.c3)AND(t0.c4)))OR(rt1.c3)), (NOT (rt1.c3)), ((((t0.c3)AND(rt1.c2)))AND(x'61'))))) ASC, TRIM(0x7868fcf5, (((rt1.c6)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))))  NULLS FIRST, ((CASE WHEN t0.c1 THEN rt1.c1 WHEN rt1.c1 THEN '\
kྙTE' END) IS TRUE)  NULLS LAST;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (LTRIM((t0.c2 IN (rt1.c3)))) ORDER BY (((t0.c2, rt1.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((((t0.c2)<>(t0.c4)), (rt1.c4 IN (rt1.c2, x'cc')), ((rt1.c3) ISNULL), LIKELY(rt1.c6))) AND ((0.9027303570748394, ((((rt1.c3)AND(t0.c4)))OR(rt1.c3)), (NOT (rt1.c3)), ((((t0.c3)AND(rt1.c2)))AND(x'61'))))) ASC, TRIM(2020146421, (((rt1.c6)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))))  NULLS FIRST, ((CASE WHEN t0.c1 THEN rt1.c1 WHEN rt1.c1 THEN '\
kྙTE' END) IS TRUE)  NULLS LAST;
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (LTRIM((t0.c2 IN (rt1.c3)))) ORDER BY (((t0.c2, rt1.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((((t0.c2)!=(t0.c4)), (rt1.c4 IN (rt1.c2, x'cc')), ((rt1.c3) ISNULL), LIKELY(rt1.c6))) AND ((0.9027303570748394, ((((rt1.c3)AND(t0.c4)))OR(rt1.c3)), (NOT (rt1.c3)), ((((t0.c3)AND(rt1.c2)))AND(x'61'))))) ASC, TRIM(0x7868fcf5, (((rt1.c6)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))))  NULLS FIRST, ((CASE WHEN t0.c1 THEN rt1.c1 WHEN rt1.c1 THEN '\
kྙTE' END) IS TRUE)  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (LIKE(((t0.c2) BETWEEN (t0.c2) AND (t0.c3)), (- ('1899454361')), 'T')) ORDER BY (((t0.c2, rt1.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((((t0.c2)<>(t0.c4)), (rt1.c4 IN (rt1.c2, x'cc')), ((rt1.c3) ISNULL), LIKELY(rt1.c6))) AND ((0.9027303570748394, ((((rt1.c3)AND(t0.c4)))OR(rt1.c3)), (NOT (rt1.c3)), ((((t0.c3)AND(rt1.c2)))AND(x'61'))))) ASC, TRIM(0x7868fcf5, (((rt1.c6)) NOT BETWEEN ((t0.c2)) AND ((rt1.c1))))  NULLS FIRST, ((CASE WHEN t0.c1 THEN rt1.c1 WHEN rt1.c1 THEN '\
kྙTE' END) IS TRUE)  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((UNLIKELY(rt1.c1))>>(((rt1.c0)+(rt1.c0))))) ORDER BY (+ (((((rt1.c0)OR(rt1.c2)))OR(rt1.c4)))) ASC  NULLS LAST, ((rt1.c6 IN ()) IN ());
SELECT ALL * FROM rt1 WHERE (((UNLIKELY(rt1.c1))>>(((rt1.c0)+(rt1.c0))))) ORDER BY (+ (((((rt1.c0)OR(rt1.c2)))OR(rt1.c4)))) ASC  NULLS LAST, ((rt1.c6 IN ()) IN ()) LIMIT 0;
SELECT ALL * FROM rt1 WHERE (((UNLIKELY(rt1.c1))>>(((rt1.c0)+(rt1.c0))))) ORDER BY (+ (((((rt1.c0)OR(rt1.c2)))OR(rt1.c4)))) ASC  NULLS LAST, ((rt1.c6 IN ()) IN ());
SELECT ALL * FROM t0 WHERE ((- (CASE WHEN t0.c0 THEN '?괻zMJc' WHEN t0.c3 THEN t0.c0 WHEN t0.c2 THEN x'37' END))) ORDER BY (-9.04110918E8 IN ()) DESC  NULLS LAST, CAST(NULL COLLATE NOCASE AS REAL) DESC;
SELECT * FROM t0 WHERE ((((- (CASE WHEN t0.c0 THEN '?괻zMJc' WHEN t0.c3 THEN t0.c0 WHEN t0.c2 THEN x'37' END)))AND(CAST((((t0.c4))=((t0.c0))) AS NUMERIC)))) ORDER BY ((((t0.c3)&(t0.c2)))<>(TRIM(t0.c2))), CASE t0.c0  WHEN t0.c3 THEN t0.c0 END COLLATE NOCASE;
SELECT ALL * FROM t0 WHERE ((- (CASE WHEN t0.c0 THEN '?괻zMJc' WHEN t0.c3 THEN t0.c0 WHEN t0.c2 THEN x'37' END))) ORDER BY (-9.04110918E8 IN ()) DESC  NULLS LAST, CAST(NULL COLLATE NOCASE AS REAL) DESC;
SELECT ALL * FROM rt1, t0 WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c0 ELSE rt1.c0 END)));
SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c0 ELSE rt1.c0 END))) ORDER BY ((((rt1.c1)||(rt1.c4))) BETWEEN ((+ (t0.c2))) AND (CAST(rt1.c5 AS INTEGER))), t0.c1 LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(rt1.c4 AS BLOB)) NOT BETWEEN ((NOT (rt1.c5))) AND (0.7003907206216172))) ORDER BY ((((rt1.c1)||(rt1.c4))) BETWEEN ((+ (t0.c2))) AND (CAST(rt1.c5 AS INTEGER))), t0.c1 LIMIT 0X1;
SELECT ALL * FROM rt1, t0 WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c0 ELSE rt1.c0 END)));
SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c0 ELSE rt1.c0 END))) ORDER BY ((((rt1.c1)||(rt1.c4))) BETWEEN ((+ (t0.c2))) AND (CAST(rt1.c5 AS INTEGER))), t0.c1 LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(rt1.c4 AS BLOB)) NOT BETWEEN ((NOT (rt1.c5))) AND (0.7003907206216172))) ORDER BY ((((rt1.c1)||(rt1.c4))) BETWEEN ((+ (t0.c2))) AND (CAST(rt1.c5 AS INTEGER))), t0.c1 LIMIT 0X1;
SELECT ALL * FROM t0, rt1 WHERE (NULL COLLATE NOCASE) ORDER BY (+ (NULL));
SELECT * FROM t0, rt1 WHERE (NULL COLLATE NOCASE) ORDER BY (+ (NULL)) LIMIT 0x2;
SELECT ALL * FROM t0, rt1 WHERE (NULL COLLATE NOCASE) ORDER BY (+ (NULL));
SELECT * FROM t0, rt1 WHERE (NULL COLLATE NOCASE) ORDER BY (+ (NULL)) LIMIT 0x2;
SELECT MAX(rt1.c4) FROM t0, rt1 WHERE (((((rt1.c0) NOT BETWEEN (t0.c0) AND ('0.3382252848956877'))) NOT BETWEEN (NULL) AND ((NULL IN ())))) ORDER BY CAST((t0.c4 IN (rt1.c6)) AS BLOB) ASC  NULLS LAST, CASE rt1.c3 COLLATE NOCASE  WHEN CAST(t0.c3 AS INTEGER) THEN (~ (t0.c1)) WHEN CASE WHEN rt1.c2 THEN t0.c1 WHEN t0.c2 THEN rt1.c6 END THEN ((rt1.c2) NOT NULL) WHEN ((t0.c0)*(rt1.c2)) THEN rt1.c4 ELSE TRIM(t0.c3, rt1.c0) END ASC  NULLS FIRST;
SELECT DISTINCT MAX(rt1.c4) FROM t0, rt1 WHERE (((((rt1.c0) NOT BETWEEN (t0.c0) AND ('0.3382252848956877'))) NOT BETWEEN (NULL) AND ((NULL IN ())))) ORDER BY (((((+ (t0.c0)))AND(((rt1.c6)<=(t0.c4)))))OR(CASE rt1.c4  WHEN rt1.c4 THEN rt1.c3 WHEN -8.56217189E8 THEN rt1.c6 WHEN t0.c4 THEN 0.9187571754710213 ELSE 'dEF' END))  NULLS FIRST, ((((((((((rt1.c2)IS(t0.c3)))OR(((rt1.c4) ISNULL))))AND(((t0.c3)<<(NULL)))))OR((t0.c4 IN (rt1.c6)))))AND(CAST(t0.c4 AS BLOB)))  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (((((t0.c1)<<(rt1.c6)))<(((t0.c4) NOT BETWEEN (rt1.c4) AND (t0.c0))))) ORDER BY '-1e500' ASC, CAST(CASE WHEN t0.c0 THEN t0.c3 ELSE rt1.c1 END AS BLOB) DESC  NULLS LAST, (CAST(rt1.c3 AS TEXT) IN (((rt1.c3)AND(t0.c2)), ((t0.c1)*(rt1.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c1)<<(rt1.c6)))<(((t0.c4) NOT BETWEEN (rt1.c4) AND (t0.c0))))) ORDER BY '-1e500' ASC, CAST(CASE WHEN t0.c0 THEN t0.c3 ELSE rt1.c1 END AS BLOB) DESC  NULLS LAST, (CAST(rt1.c3 AS TEXT) IN (((rt1.c3)AND(t0.c2)), ((t0.c1)*(rt1.c0))))  NULLS FIRST LIMIT 0X0;
SELECT * FROM rt1, t0 WHERE (((((t0.c1)<<(rt1.c6)))<(((t0.c4) NOT BETWEEN (rt1.c4) AND (t0.c0))))) ORDER BY '-1e500' ASC, CAST(CASE WHEN t0.c0 THEN t0.c3 ELSE rt1.c1 END AS BLOB) DESC  NULLS LAST, (CAST(rt1.c3 AS TEXT) IN (((rt1.c3)AND(t0.c2)), ((t0.c1)*(rt1.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c1)<<(rt1.c6)))<(((t0.c4) NOT BETWEEN (rt1.c4) AND (t0.c0))))) ORDER BY '-1e500' ASC, CAST(CASE WHEN t0.c0 THEN t0.c3 ELSE rt1.c1 END AS BLOB) DESC  NULLS LAST, (CAST(rt1.c3 AS TEXT) IN (((rt1.c3)AND(t0.c2)), ((t0.c1)*(rt1.c0))))  NULLS FIRST LIMIT 0X0;
SELECT ALL MIN(t0.c1) FROM t0 WHERE ((((''))>((((t0.c4)LIKE(t0.c1)))))) ORDER BY (((((t0.c0 IN (t0.c4, t0.c1)))OR(SQLITE_SOURCE_ID())))OR((t0.c1 IN (t0.c1))))  NULLS FIRST;
SELECT MIN(t0.c1) FROM t0 WHERE ((((''))>((((t0.c4)LIKE(t0.c1)))))) ORDER BY (((((t0.c0 IN (t0.c4, t0.c1)))OR(SQLITE_SOURCE_ID())))OR((t0.c1 IN (t0.c1))))  NULLS FIRST LIMIT 0x2;
SELECT COUNT(*) FROM rt1 WHERE ((~ (CAST(rt1.c0 AS REAL)))) ORDER BY ((~ (rt1.c0)) IN ()) ASC;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((~ (CAST(rt1.c0 AS REAL)))) ORDER BY ((~ (rt1.c0)) IN ()) ASC LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((((rt1.c4 COLLATE NOCASE)AND(((((((rt1.c2)AND(rt1.c0)))OR(rt1.c5)))OR(rt1.c4)))))OR(((rt1.c6) NOTNULL))))OR(((rt1.c1)||(rt1.c3))))) ORDER BY ((~ (rt1.c0)) IN ()) ASC LIMIT 0x1;
SELECT * FROM t0, rt1 WHERE (((((((((((((((((rt1.c6)OR(rt1.c5)))AND(t0.c4)))AND(t0.c4)))AND(t0.c1)))OR(((rt1.c6)*(x'')))))OR(((((t0.c3)OR('731213607')))OR(rt1.c2)))))AND(NULL COLLATE NOCASE)))OR((+ ('[g쐫o]O^')))));
SELECT * FROM t0, rt1 WHERE (((((((((((((((((((rt1.c6)OR(rt1.c5)))AND(t0.c4)))AND(t0.c4)))AND(t0.c1)))OR(((rt1.c6)*(x'')))))OR(((((t0.c3)OR('731213607')))OR(rt1.c2)))))AND(NULL COLLATE NOCASE)))OR((+ ('[g쐫o]O^')))))AND(((rt1.c1) BETWEEN (t0.c2) AND (rt1.c1)) COLLATE NOCASE))) ORDER BY CASE WHEN x'3c' COLLATE RTRIM THEN CASE WHEN 0.7413329015015092 THEN rt1.c4 WHEN rt1.c6 THEN NULL WHEN rt1.c6 THEN x'b9' ELSE rt1.c5 END WHEN (((NULL)) BETWEEN ((rt1.c5)) AND ((t0.c0))) THEN '6' WHEN t0.c2 COLLATE RTRIM THEN CAST(NULL AS NUMERIC) WHEN (((t0.c2, t0.c1))>((t0.c3, rt1.c5))) THEN t0.c2 WHEN (t0.c0 IN (rt1.c0)) THEN '6u' COLLATE NOCASE ELSE CAST(t0.c2 AS INTEGER) END  NULLS LAST, ((((CAST(t0.c1 AS INTEGER))AND(((((((t0.c3)AND(t0.c3)))AND(rt1.c4)))OR(t0.c4)))))OR(CASE WHEN '-2001351794' THEN -8.83143184E8 END))  NULLS LAST, CASE (((((((('᤾.Q]௯*H')OR(rt1.c1)))OR(rt1.c4)))OR(t0.c1)))OR(x''))  WHEN ((rt1.c4) NOT BETWEEN (t0.c0) AND (t0.c3)) THEN NULLIF(DISTINCT rt1.c5, rt1.c5) WHEN 'YU' THEN ((t0.c4) NOT BETWEEN (x'') AND (rt1.c3)) WHEN ((((((((((t0.c2)OR(t0.c1)))OR(rt1.c1)))OR(t0.c4)))AND(rt1.c6)))OR(rt1.c4)) THEN ((rt1.c5) BETWEEN (rt1.c6) AND (rt1.c5)) WHEN CAST(rt1.c3 AS TEXT) THEN (~ (t0.c4)) WHEN ((t0.c2) IS TRUE) THEN ((((((((t0.c0)AND(0X6ffafaa2)))AND(1.94179975E9)))OR(rt1.c4)))OR(t0.c2)) WHEN ((((((t0.c0)AND(rt1.c3)))OR(t0.c1)))AND(rt1.c5)) THEN ((((t0.c4)OR(0.271014836734759)))OR(rt1.c1)) ELSE ((t0.c0)=(rt1.c5)) END  NULLS LAST INTERSECT SELECT * FROM t0, rt1 WHERE (('-1625439551' IN ())) ORDER BY CASE WHEN x'3c' COLLATE RTRIM THEN CASE WHEN 0.7413329015015092 THEN rt1.c4 WHEN rt1.c6 THEN NULL WHEN rt1.c6 THEN x'b9' ELSE rt1.c5 END WHEN (((NULL)) BETWEEN ((rt1.c5)) AND ((t0.c0))) THEN '6' WHEN t0.c2 COLLATE RTRIM THEN CAST(NULL AS NUMERIC) WHEN (((t0.c2, t0.c1))>((t0.c3, rt1.c5))) THEN t0.c2 WHEN (t0.c0 IN (rt1.c0)) THEN '6u' COLLATE NOCASE ELSE CAST(t0.c2 AS INTEGER) END  NULLS LAST, ((((CAST(t0.c1 AS INTEGER))AND(((((((t0.c3)AND(t0.c3)))AND(rt1.c4)))OR(t0.c4)))))OR(CASE WHEN '-2001351794' THEN -8.83143184E8 END))  NULLS LAST, CASE (((((((('᤾.Q]௯*H')OR(rt1.c1)))OR(rt1.c4)))OR(t0.c1)))OR(x''))  WHEN ((rt1.c4) NOT BETWEEN (t0.c0) AND (t0.c3)) THEN NULLIF(DISTINCT rt1.c5, rt1.c5) WHEN 'YU' THEN ((t0.c4) NOT BETWEEN (x'') AND (rt1.c3)) WHEN ((((((((((t0.c2)OR(t0.c1)))OR(rt1.c1)))OR(t0.c4)))AND(rt1.c6)))OR(rt1.c4)) THEN ((rt1.c5) BETWEEN (rt1.c6) AND (rt1.c5)) WHEN CAST(rt1.c3 AS TEXT) THEN (~ (t0.c4)) WHEN ((t0.c2) IS TRUE) THEN ((((((((t0.c0)AND(1878719138)))AND(1.94179975E9)))OR(rt1.c4)))OR(t0.c2)) WHEN ((((((t0.c0)AND(rt1.c3)))OR(t0.c1)))AND(rt1.c5)) THEN ((((t0.c4)OR(0.271014836734759)))OR(rt1.c1)) ELSE ((t0.c0)=(rt1.c5)) END  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (((((((((((((((((rt1.c6)OR(rt1.c5)))AND(t0.c4)))AND(t0.c4)))AND(t0.c1)))OR(((rt1.c6)*(x'')))))OR(((((t0.c3)OR('731213607')))OR(rt1.c2)))))AND(NULL COLLATE NOCASE)))OR((+ ('[g쐫o]O^')))));
SELECT * FROM t0, rt1 WHERE (((((((((((((((((((rt1.c6)OR(rt1.c5)))AND(t0.c4)))AND(t0.c4)))AND(t0.c1)))OR(((rt1.c6)*(x'')))))OR(((((t0.c3)OR('731213607')))OR(rt1.c2)))))AND(NULL COLLATE NOCASE)))OR((+ ('[g쐫o]O^')))))AND(((rt1.c1) BETWEEN (t0.c2) AND (rt1.c1)) COLLATE NOCASE))) ORDER BY CASE WHEN x'3c' COLLATE RTRIM THEN CASE WHEN 0.7413329015015092 THEN rt1.c4 WHEN rt1.c6 THEN NULL WHEN rt1.c6 THEN x'b9' ELSE rt1.c5 END WHEN (((NULL)) BETWEEN ((rt1.c5)) AND ((t0.c0))) THEN '6' WHEN t0.c2 COLLATE RTRIM THEN CAST(NULL AS NUMERIC) WHEN (((t0.c2, t0.c1))>((t0.c3, rt1.c5))) THEN t0.c2 WHEN (t0.c0 IN (rt1.c0)) THEN '6u' COLLATE NOCASE ELSE CAST(t0.c2 AS INTEGER) END  NULLS LAST, ((((CAST(t0.c1 AS INTEGER))AND(((((((t0.c3)AND(t0.c3)))AND(rt1.c4)))OR(t0.c4)))))OR(CASE WHEN '-2001351794' THEN -8.83143184E8 END))  NULLS LAST, CASE (((((((('᤾.Q]௯*H')OR(rt1.c1)))OR(rt1.c4)))OR(t0.c1)))OR(x''))  WHEN ((rt1.c4) NOT BETWEEN (t0.c0) AND (t0.c3)) THEN NULLIF(DISTINCT rt1.c5, rt1.c5) WHEN 'YU' THEN ((t0.c4) NOT BETWEEN (x'') AND (rt1.c3)) WHEN ((((((((((t0.c2)OR(t0.c1)))OR(rt1.c1)))OR(t0.c4)))AND(rt1.c6)))OR(rt1.c4)) THEN ((rt1.c5) BETWEEN (rt1.c6) AND (rt1.c5)) WHEN CAST(rt1.c3 AS TEXT) THEN (~ (t0.c4)) WHEN ((t0.c2) IS TRUE) THEN ((((((((t0.c0)AND(0X6ffafaa2)))AND(1.94179975E9)))OR(rt1.c4)))OR(t0.c2)) WHEN ((((((t0.c0)AND(rt1.c3)))OR(t0.c1)))AND(rt1.c5)) THEN ((((t0.c4)OR(0.271014836734759)))OR(rt1.c1)) ELSE ((t0.c0)=(rt1.c5)) END  NULLS LAST INTERSECT SELECT * FROM t0, rt1 WHERE (('-1625439551' IN ())) ORDER BY CASE WHEN x'3c' COLLATE RTRIM THEN CASE WHEN 0.7413329015015092 THEN rt1.c4 WHEN rt1.c6 THEN NULL WHEN rt1.c6 THEN x'b9' ELSE rt1.c5 END WHEN (((NULL)) BETWEEN ((rt1.c5)) AND ((t0.c0))) THEN '6' WHEN t0.c2 COLLATE RTRIM THEN CAST(NULL AS NUMERIC) WHEN (((t0.c2, t0.c1))>((t0.c3, rt1.c5))) THEN t0.c2 WHEN (t0.c0 IN (rt1.c0)) THEN '6u' COLLATE NOCASE ELSE CAST(t0.c2 AS INTEGER) END  NULLS LAST, ((((CAST(t0.c1 AS INTEGER))AND(((((((t0.c3)AND(t0.c3)))AND(rt1.c4)))OR(t0.c4)))))OR(CASE WHEN '-2001351794' THEN -8.83143184E8 END))  NULLS LAST, CASE (((((((('᤾.Q]௯*H')OR(rt1.c1)))OR(rt1.c4)))OR(t0.c1)))OR(x''))  WHEN ((rt1.c4) NOT BETWEEN (t0.c0) AND (t0.c3)) THEN NULLIF(DISTINCT rt1.c5, rt1.c5) WHEN 'YU' THEN ((t0.c4) NOT BETWEEN (x'') AND (rt1.c3)) WHEN ((((((((((t0.c2)OR(t0.c1)))OR(rt1.c1)))OR(t0.c4)))AND(rt1.c6)))OR(rt1.c4)) THEN ((rt1.c5) BETWEEN (rt1.c6) AND (rt1.c5)) WHEN CAST(rt1.c3 AS TEXT) THEN (~ (t0.c4)) WHEN ((t0.c2) IS TRUE) THEN ((((((((t0.c0)AND(1878719138)))AND(1.94179975E9)))OR(rt1.c4)))OR(t0.c2)) WHEN ((((((t0.c0)AND(rt1.c3)))OR(t0.c1)))AND(rt1.c5)) THEN ((((t0.c4)OR(0.271014836734759)))OR(rt1.c1)) ELSE ((t0.c0)=(rt1.c5)) END  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN ((((rt1.c6)OR(rt1.c4)))AND(rt1.c1)) THEN ((rt1.c3) NOTNULL) ELSE (NOT (rt1.c0)) END) ORDER BY (((json_remove(t0.c1, rt1.c2, '821932353', t0.c0, rt1.c3), ((rt1.c1) NOT BETWEEN (t0.c4) AND (rt1.c2))))<((CAST(rt1.c0 AS NUMERIC), ((((rt1.c4)AND(rt1.c0)))AND(rt1.c3))))) ASC  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (((CASE WHEN ((((rt1.c6)OR(rt1.c4)))AND(rt1.c1)) THEN ((rt1.c3) NOTNULL) ELSE (NOT (rt1.c0)) END)AND(CASE WHEN rt1.c1 COLLATE NOCASE THEN ((((rt1.c0)AND(rt1.c6)))AND(rt1.c5)) ELSE LIKELY(DISTINCT t0.c3) END))) ORDER BY ((((((((((t0.c4)OR(rt1.c3)))AND(rt1.c4)))OR(-1279305933)))AND(t0.c2)))AND(NULL)) DESC, 770491814 ASC  NULLS FIRST, (((t0.c1 IN (rt1.c0)))%(t0.c2)) LIMIT 3;
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN ((((rt1.c6)OR(rt1.c4)))AND(rt1.c1)) THEN ((rt1.c3) NOTNULL) ELSE (NOT (rt1.c0)) END) ORDER BY (((json_remove(t0.c1, rt1.c2, '821932353', t0.c0, rt1.c3), ((rt1.c1) NOT BETWEEN (t0.c4) AND (rt1.c2))))<((CAST(rt1.c0 AS NUMERIC), ((((rt1.c4)AND(rt1.c0)))AND(rt1.c3))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1 WHERE (CASE WHEN (~ ('-1927307188')) THEN (('') IS FALSE) ELSE rt1.c6 END);
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (CASE WHEN (~ ('-1927307188')) THEN (('') IS FALSE) ELSE rt1.c6 END) INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((((((((('-1170810712', t0.c3))!=((t0.c1, t0.c1))))AND(((t0.c3)>(rt1.c3)))))OR(IFNULL(rt1.c0, rt1.c0))))AND(CASE t0.c0  WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c6 WHEN t0.c1 THEN t0.c1 WHEN rt1.c4 THEN t0.c2 END)));
SELECT ALL MIN(rt1.c2) FROM t0, rt1 WHERE (TRIM(((NULL)&(t0.c4))));
SELECT DISTINCT MIN(rt1.c2) FROM t0, rt1 WHERE (TRIM(((NULL)&(t0.c4)))) ORDER BY CAST(((t0.c4) NOT BETWEEN (rt1.c1) AND (t0.c0)) AS INTEGER) LIMIT 1 INTERSECT SELECT DISTINCT MIN(rt1.c2) FROM t0, rt1 WHERE (MAX(CAST(0.4875802708536756 AS NUMERIC), ((((((((t0.c2)OR(rt1.c6)))AND(rt1.c2)))AND(t0.c0)))AND(rt1.c1)), ((rt1.c1)+(rt1.c4)), UPPER(DISTINCT rt1.c3))) ORDER BY CAST(((t0.c4) NOT BETWEEN (rt1.c1) AND (t0.c0)) AS INTEGER) LIMIT 1;
SELECT COUNT(*) FROM t0, rt1 WHERE (((((t0.c0) BETWEEN (rt1.c3) AND (rt1.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((t0.c0) BETWEEN (rt1.c3) AND (rt1.c2))) IS FALSE)) LIMIT 1;
SELECT ALL * FROM t0 WHERE (COALESCE(((((((t0.c3)OR(t0.c1)))AND(t0.c3)))OR(t0.c3)), 0.22501864572632901));
SELECT DISTINCT * FROM t0 WHERE (COALESCE(((((((t0.c3)OR(t0.c1)))AND(t0.c3)))OR(t0.c3)), 0.22501864572632901));
SELECT ALL * FROM t0 WHERE (COALESCE(((((((t0.c3)OR(t0.c1)))AND(t0.c3)))OR(t0.c3)), 0.22501864572632901));
SELECT DISTINCT * FROM t0 WHERE (COALESCE(((((((t0.c3)OR(t0.c1)))AND(t0.c3)))OR(t0.c3)), 0.22501864572632901));
SELECT ALL MAX(t0.c1) FROM rt1, t0 WHERE (((((((((((t0.c0)OR('38')))AND(rt1.c3)))OR(((rt1.c0) NOT NULL))))AND(CASE WHEN t0.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 END)))AND(((rt1.c3) IS FALSE)))) ORDER BY CASE WHEN rt1.c6 THEN t0.c1 WHEN t0.c3 THEN t0.c0 ELSE rt1.c1 END COLLATE NOCASE ASC, CAST((~ ('')) AS TEXT), ((0.6737412083452404)=(0.950355672841673));
SELECT DISTINCT MAX(t0.c1) FROM rt1, t0 WHERE (((((((((((t0.c0)OR('38')))AND(rt1.c3)))OR(((rt1.c0) NOT NULL))))AND(CASE WHEN t0.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 END)))AND(((rt1.c3) IS FALSE)))) ORDER BY CASE WHEN rt1.c6 THEN t0.c1 WHEN t0.c3 THEN t0.c0 ELSE rt1.c1 END COLLATE NOCASE ASC, CAST((~ ('')) AS TEXT), ((0.6737412083452404)==(0.950355672841673)) LIMIT 0X4;
SELECT MAX(rt1.c4) FROM t0, rt1 WHERE (((((- (rt1.c6))))<>((rt1.c0 COLLATE RTRIM))));
SELECT MAX(rt1.c4) FROM t0, rt1 WHERE (((((((- (rt1.c6))))>((rt1.c0 COLLATE RTRIM))))AND(CAST(CAST(t0.c4 AS NUMERIC) AS NUMERIC)))) INTERSECT SELECT MAX(rt1.c4) FROM t0, rt1 WHERE ((((((t0.c3, rt1.c2)) NOT BETWEEN ((t0.c4, rt1.c1)) AND ((t0.c2, rt1.c0)))) ISNULL));
SELECT ALL * FROM rt1 WHERE (((((rt1.c4)AND(rt1.c4))) IS FALSE));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c4)AND(rt1.c4))) IS FALSE)) ORDER BY CASE WHEN NULLIF(rt1.c2, rt1.c2) THEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)) WHEN (((rt1.c2, rt1.c6)) NOT BETWEEN ((rt1.c6, rt1.c3)) AND ((0x306cc286, rt1.c6))) THEN ((rt1.c2)&(rt1.c3)) ELSE CAST('' AS REAL) END  NULLS LAST LIMIT 4 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((NOT ((rt1.c1 IN (rt1.c3, rt1.c5))))) ORDER BY CASE WHEN NULLIF(rt1.c2, rt1.c2) THEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)) WHEN (((rt1.c2, rt1.c6)) NOT BETWEEN ((rt1.c6, rt1.c3)) AND ((812434054, rt1.c6))) THEN ((rt1.c2)&(rt1.c3)) ELSE CAST('' AS REAL) END  NULLS LAST LIMIT 0X4;
SELECT ALL * FROM rt1 WHERE (((((rt1.c4)AND(rt1.c4))) IS FALSE));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c4)AND(rt1.c4))) IS FALSE)) ORDER BY CASE WHEN NULLIF(rt1.c2, rt1.c2) THEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)) WHEN (((rt1.c2, rt1.c6)) NOT BETWEEN ((rt1.c6, rt1.c3)) AND ((0x306cc286, rt1.c6))) THEN ((rt1.c2)&(rt1.c3)) ELSE CAST('' AS REAL) END  NULLS LAST LIMIT 4 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((NOT ((rt1.c1 IN (rt1.c3, rt1.c5))))) ORDER BY CASE WHEN NULLIF(rt1.c2, rt1.c2) THEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)) WHEN (((rt1.c2, rt1.c6)) NOT BETWEEN ((rt1.c6, rt1.c3)) AND ((812434054, rt1.c6))) THEN ((rt1.c2)&(rt1.c3)) ELSE CAST('' AS REAL) END  NULLS LAST LIMIT 0X4;
SELECT ALL MAX(t0.c4) FROM rt1, t0 WHERE ((((((rt1.c5 IN ()))OR(t0.c3)))OR(((rt1.c4) ISNULL))));
SELECT MAX(t0.c4) FROM rt1, t0 WHERE ((((((((rt1.c5 IN ()))OR(t0.c3)))OR(((rt1.c4) ISNULL))))AND(((-8.8950827E8 COLLATE BINARY) BETWEEN (((t0.c0)||(x'dc'))) AND (((((((rt1.c3)OR('[l')))OR(rt1.c6)))OR(rt1.c1))))))) INTERSECT SELECT ALL MAX(t0.c4) FROM rt1, t0 WHERE (((((NULL)AND(t0.c1)))AND(rt1.c4)) COLLATE BINARY);
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((((((t0.c4 COLLATE NOCASE)AND(7.36960138E8)))OR(((t0.c3)OR(rt1.c1)))))AND(CASE WHEN 0.3246760166206122 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)) WHERE (((((((json_array(t0.c4, t0.c4, t0.c1, rt1.c2, t0.c4))OR(t0.c1 COLLATE RTRIM)))AND((((rt1.c6, '350227619'))!=((t0.c0, t0.c2))))))OR((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY rt1.c0  NULLS LAST, ((((rt1.c3) NOT NULL)) NOTNULL) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ((((((t0.c4 COLLATE NOCASE)AND(7.36960138E8)))OR(((t0.c3)OR(rt1.c1)))))AND(CASE WHEN 0.3246760166206122 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)) WHERE (((((((((json_array(t0.c4, t0.c4, t0.c1, rt1.c2, t0.c4))OR(t0.c1 COLLATE RTRIM)))AND((((rt1.c6, '350227619'))<((t0.c0, t0.c2))))))OR((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))))AND(TIME(((rt1.c3)&(NULL)), t0.c2 COLLATE RTRIM, ((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c6)))))) ORDER BY rt1.c0  NULLS LAST, ((((rt1.c3) NOT NULL)) NOTNULL) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ((((((t0.c4 COLLATE NOCASE)AND(7.36960138E8)))OR(((t0.c3)OR(rt1.c1)))))AND(CASE WHEN 0.3246760166206122 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)) WHERE ((((t0.c3 IN ('825038514'))) ISNULL)) ORDER BY rt1.c0  NULLS LAST, ((((rt1.c3) NOT NULL)) NOTNULL) DESC  NULLS LAST;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((((((t0.c4 COLLATE NOCASE)AND(7.36960138E8)))OR(((t0.c3)OR(rt1.c1)))))AND(CASE WHEN 0.3246760166206122 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)) WHERE (((((((json_array(t0.c4, t0.c4, t0.c1, rt1.c2, t0.c4))OR(t0.c1 COLLATE RTRIM)))AND((((rt1.c6, '350227619'))!=((t0.c0, t0.c2))))))OR((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY rt1.c0  NULLS LAST, ((((rt1.c3) NOT NULL)) NOTNULL) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) IS FALSE)) ORDER BY CASE WHEN ((((((((((((t0.c2)AND('-1611199284')))AND(t0.c1)))OR(t0.c3)))AND(t0.c1)))AND(t0.c0)))AND(NULL)) THEN ((((((((((t0.c0)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))AND(t0.c0)) ELSE t0.c3 END;
SELECT ALL * FROM t0 WHERE (((((((t0.c0) IS TRUE)) IS FALSE))AND(CASE ((t0.c2) NOTNULL)  WHEN ((((t0.c3)AND(t0.c1)))OR(t0.c4)) THEN ((((t0.c1)OR(t0.c3)))OR(t0.c4)) WHEN ((((t0.c4)OR(t0.c0)))OR(t0.c4)) THEN QUOTE(t0.c2) END))) ORDER BY (NOT (CAST(t0.c2 AS INTEGER))) ASC LIMIT 0x2;
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) IS FALSE)) ORDER BY CASE WHEN ((((((((((((t0.c2)AND('-1611199284')))AND(t0.c1)))OR(t0.c3)))AND(t0.c1)))AND(t0.c0)))AND(NULL)) THEN ((((((((((t0.c0)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))AND(t0.c0)) ELSE t0.c3 END;
SELECT ALL * FROM t0 WHERE (((((((t0.c0) IS TRUE)) IS FALSE))AND(CASE ((t0.c2) NOTNULL)  WHEN ((((t0.c3)AND(t0.c1)))OR(t0.c4)) THEN ((((t0.c1)OR(t0.c3)))OR(t0.c4)) WHEN ((((t0.c4)OR(t0.c0)))OR(t0.c4)) THEN QUOTE(t0.c2) END))) ORDER BY (NOT (CAST(t0.c2 AS INTEGER))) ASC LIMIT 0x2;
SELECT COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID());
SELECT DISTINCT COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID()) INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS REAL));
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c2)AND(((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c0)))GLOB(((rt1.c5) BETWEEN (rt1.c0) AND (rt1.c3))))))) ORDER BY CASE ((rt1.c0)<(rt1.c0))  WHEN rt1.c3 COLLATE BINARY THEN ((((((rt1.c3)AND(rt1.c5)))AND(rt1.c2)))OR(rt1.c6)) ELSE ((rt1.c4)OR(rt1.c5)) END  NULLS FIRST, ((((rt1.c6)IS(0x70f80a1))) NOT BETWEEN (HEX(rt1.c0)) AND (((rt1.c0) IS FALSE)))  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((((((((((x'')AND(0.26659410543112405)))OR(rt1.c3)))AND(rt1.c4)))OR(rt1.c2)))OR(rt1.c6))) BETWEEN (((rt1.c4) BETWEEN (0.38926589390908173) AND (rt1.c1))) AND (rt1.c1))) ORDER BY CASE ((rt1.c0)<(rt1.c0))  WHEN rt1.c3 COLLATE BINARY THEN ((((((rt1.c3)AND(rt1.c5)))AND(rt1.c2)))OR(rt1.c6)) ELSE ((rt1.c4)OR(rt1.c5)) END  NULLS FIRST, ((((rt1.c6)IS(0x70f80a1))) NOT BETWEEN (HEX(rt1.c0)) AND (((rt1.c0) IS FALSE)))  NULLS LAST LIMIT 0X3;
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c2)AND(((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c0)))GLOB(((rt1.c5) BETWEEN (rt1.c0) AND (rt1.c3))))))) ORDER BY CASE ((rt1.c0)<(rt1.c0))  WHEN rt1.c3 COLLATE BINARY THEN ((((((rt1.c3)AND(rt1.c5)))AND(rt1.c2)))OR(rt1.c6)) ELSE ((rt1.c4)OR(rt1.c5)) END  NULLS FIRST, ((((rt1.c6)IS(0x70f80a1))) NOT BETWEEN (HEX(rt1.c0)) AND (((rt1.c0) IS FALSE)))  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((((((((((x'')AND(0.26659410543112405)))OR(rt1.c3)))AND(rt1.c4)))OR(rt1.c2)))OR(rt1.c6))) BETWEEN (((rt1.c4) BETWEEN (0.38926589390908173) AND (rt1.c1))) AND (rt1.c1))) ORDER BY CASE ((rt1.c0)<(rt1.c0))  WHEN rt1.c3 COLLATE BINARY THEN ((((((rt1.c3)AND(rt1.c5)))AND(rt1.c2)))OR(rt1.c6)) ELSE ((rt1.c4)OR(rt1.c5)) END  NULLS FIRST, ((((rt1.c6)IS(0x70f80a1))) NOT BETWEEN (HEX(rt1.c0)) AND (((rt1.c0) IS FALSE)))  NULLS LAST LIMIT 0X3;
SELECT MAX(t0.c2) FROM rt1, t0 WHERE (t0.c1);
SELECT MAX(t0.c2) FROM rt1, t0 WHERE (((t0.c1)AND(CHAR('-58713780')))) INTERSECT SELECT ALL MAX(t0.c2) FROM rt1, t0 WHERE (((((t0.c2) NOT NULL))||(0.4605343835953959)));
SELECT ALL MAX(t0.c0) FROM rt1 NOT INDEXED, t0 WHERE (rt1.c1) ORDER BY (((rt1.c1)) NOT BETWEEN (((~ (t0.c3)))) AND ((((t0.c0)>(rt1.c3)))))  NULLS FIRST, ((((rt1.c5)&(rt1.c5))) NOT BETWEEN (t0.c1) AND (CAST(-3.68242246E8 AS BLOB))) ASC, RTRIM(((rt1.c2)IS(rt1.c4))) DESC  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM rt1, t0 WHERE (rt1.c1) ORDER BY ((((t0.c1)OR((~ ('3nowWJ9Ba')))))OR(323567262))  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL MAX(t0.c0) FROM rt1, t0 WHERE (((((((((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN t0.c1 END)AND(rt1.c2)))OR(CAST(t0.c0 AS INTEGER))))AND(((((rt1.c1)OR(t0.c0)))AND(rt1.c4)))))OR(CASE WHEN '-698996151' THEN t0.c2 WHEN rt1.c2 THEN rt1.c4 ELSE t0.c4 END))) ORDER BY ((((t0.c1)OR((~ ('3nowWJ9Ba')))))OR(323567262))  NULLS FIRST LIMIT 0x2;
SELECT MIN(rt1.c5) FROM rt1 WHERE (((((((((rt1.c6)/(rt1.c1)))AND(((rt1.c6) IS TRUE))))AND('1976048180')))OR(((((((rt1.c6)AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c5)))));
SELECT MIN(rt1.c5) FROM rt1 WHERE (((((((((((rt1.c6)/(rt1.c1)))AND(((rt1.c6) IS TRUE))))AND('1976048180')))OR(((((((rt1.c6)AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c5)))))AND(CASE WHEN 0x13891efd THEN (NOT (rt1.c1)) WHEN (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c5))) THEN ((((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c3)))OR(rt1.c2)))AND(rt1.c5)) END))) INTERSECT SELECT ALL MIN(rt1.c5) FROM rt1 WHERE (json_array(((rt1.c1) NOT NULL), ((rt1.c6) NOTNULL), CAST(rt1.c2 AS BLOB), (((x'', rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c1, rt1.c1)) AND ((rt1.c1, rt1.c2, 1.799702489E9))), ((rt1.c0)*(0X6b4547d9)), ((rt1.c6)>>(rt1.c2))));
SELECT ALL MAX(rt1.c6) FROM t0 LEFT OUTER JOIN rt1 ON ((((((((((rt1.c2) NOTNULL))AND((~ (rt1.c4)))))OR(LIKE(x'afc1', t0.c2))))OR(CAST(rt1.c5 AS BLOB))))AND((- (rt1.c0)))) WHERE ((+ ((0.1364023899412259 IN ()))));
SELECT DISTINCT MAX(rt1.c6) FROM t0 INNER JOIN rt1 ON ((((((((((rt1.c2) NOTNULL))AND((~ (rt1.c4)))))OR(LIKE(x'afc1', t0.c2))))OR(CAST(rt1.c5 AS BLOB))))AND((- (rt1.c0)))) WHERE ((((+ ((0.1364023899412259 IN ()))))AND(TRIM(DISTINCT ((((rt1.c5)AND(t0.c0)))AND(rt1.c3)))))) INTERSECT SELECT DISTINCT MAX(rt1.c6) FROM t0 INNER JOIN rt1 ON ((((((((((rt1.c2) NOTNULL))AND((~ (rt1.c4)))))OR(LIKE(x'afc1', t0.c2))))OR(CAST(rt1.c5 AS BLOB))))AND((- (rt1.c0)))) WHERE (NULL);
SELECT ALL MAX(t0.c1) FROM t0 WHERE (t0.c4);
SELECT ALL MAX(t0.c1) FROM t0 WHERE (((t0.c4)AND((- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))))))) LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c4)>>(t0.c3)))>=(t0.c1))) ORDER BY t0.c1  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c4)>>(t0.c3)))>(t0.c1))) ORDER BY t0.c1  NULLS FIRST LIMIT 1;
SELECT * FROM rt1, t0 WHERE (CAST((rt1.c6 IN (t0.c3)) AS INTEGER)) ORDER BY (CASE t0.c1  WHEN rt1.c1 THEN t0.c1 WHEN x'10e2a3' THEN rt1.c4 ELSE t0.c2 END IN (((rt1.c6)||(t0.c2))));
SELECT ALL * FROM rt1, t0 WHERE (CAST((rt1.c6 IN (t0.c3)) AS INTEGER)) ORDER BY ((LOWER(DISTINCT rt1.c4)) NOTNULL) DESC INTERSECT SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c1) NOTNULL) AS NUMERIC)) ORDER BY ((LOWER(DISTINCT rt1.c4)) NOTNULL) DESC;
SELECT * FROM rt1, t0 WHERE (CAST((rt1.c6 IN (t0.c3)) AS INTEGER)) ORDER BY (CASE t0.c1  WHEN rt1.c1 THEN t0.c1 WHEN x'10e2a3' THEN rt1.c4 ELSE t0.c2 END IN (((rt1.c6)||(t0.c2))));
SELECT ALL * FROM rt1, t0 WHERE (CAST((rt1.c6 IN (t0.c3)) AS INTEGER)) ORDER BY ((LOWER(DISTINCT rt1.c4)) NOTNULL) DESC INTERSECT SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c1) NOTNULL) AS NUMERIC)) ORDER BY ((LOWER(DISTINCT rt1.c4)) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((TRIM(DISTINCT rt1.c0))>(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2))))) ORDER BY CAST((NOT (rt1.c3)) AS BLOB), (((((rt1.c2) NOTNULL)))<=(((rt1.c6 IN (rt1.c6))))) DESC;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((TRIM(DISTINCT rt1.c0))>(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2))))) ORDER BY CAST((NOT (rt1.c3)) AS BLOB), (((((rt1.c2) NOTNULL)))<=(((rt1.c6 IN (rt1.c6))))) DESC LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT NULL)) BETWEEN (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0))) AND (CASE WHEN rt1.c3 THEN rt1.c4 WHEN x'f4' THEN rt1.c0 END))) ORDER BY CAST((NOT (rt1.c3)) AS BLOB), (((((rt1.c2) NOTNULL)))<=(((rt1.c6 IN (rt1.c6))))) DESC LIMIT 0;
SELECT ALL * FROM t0 INNER JOIN rt1 ON ((NULLIF(DISTINCT rt1.c5, t0.c2)) NOT BETWEEN (t0.c2 COLLATE BINARY) AND ((t0.c4 IN ()))) WHERE ((NOT (TYPEOF(DISTINCT rt1.c3))));
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON ((NULLIF(DISTINCT rt1.c5, t0.c2)) NOT BETWEEN (t0.c2 COLLATE BINARY) AND ((t0.c4 IN ()))) WHERE ((NOT (TYPEOF(DISTINCT rt1.c3))));
SELECT ALL * FROM t0 INNER JOIN rt1 ON ((NULLIF(DISTINCT rt1.c5, t0.c2)) NOT BETWEEN (t0.c2 COLLATE BINARY) AND ((t0.c4 IN ()))) WHERE ((NOT (TYPEOF(DISTINCT rt1.c3))));
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON ((NULLIF(DISTINCT rt1.c5, t0.c2)) NOT BETWEEN (t0.c2 COLLATE BINARY) AND ((t0.c4 IN ()))) WHERE ((NOT (TYPEOF(DISTINCT rt1.c3))));
SELECT * FROM rt1 WHERE (COALESCE(((((((((((((((rt1.c3)AND(rt1.c5)))OR(rt1.c5)))AND(rt1.c6)))AND(rt1.c1)))AND(x'38')))AND(rt1.c4)))OR(rt1.c4)), CASE WHEN rt1.c3 THEN rt1.c6 END, ((((((((((rt1.c5)AND(603733417)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c6)))) ORDER BY json_quote(((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c0))) DESC, ((CASE WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 END) NOT BETWEEN ((('-2142927862') NOT NULL)) AND (rt1.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (((COALESCE(((((((((((((((rt1.c3)AND(rt1.c5)))OR(rt1.c5)))AND(rt1.c6)))AND(rt1.c1)))AND(x'38')))AND(rt1.c4)))OR(rt1.c4)), CASE WHEN rt1.c3 THEN rt1.c6 END, ((((((((((rt1.c5)AND(603733417)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c6))))AND(x'94f0' COLLATE RTRIM))) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c5 ELSE 0Xf90d709 END) NOT NULL) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CAST(rt1.c6 COLLATE NOCASE AS BLOB)) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c5 ELSE 0Xf90d709 END) NOT NULL) DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt1 WHERE (COALESCE(((((((((((((((rt1.c3)AND(rt1.c5)))OR(rt1.c5)))AND(rt1.c6)))AND(rt1.c1)))AND(x'38')))AND(rt1.c4)))OR(rt1.c4)), CASE WHEN rt1.c3 THEN rt1.c6 END, ((((((((((rt1.c5)AND(603733417)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c6)))) ORDER BY json_quote(((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c0))) DESC, ((CASE WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 END) NOT BETWEEN ((('-2142927862') NOT NULL)) AND (rt1.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (((COALESCE(((((((((((((((rt1.c3)AND(rt1.c5)))OR(rt1.c5)))AND(rt1.c6)))AND(rt1.c1)))AND(x'38')))AND(rt1.c4)))OR(rt1.c4)), CASE WHEN rt1.c3 THEN rt1.c6 END, ((((((((((rt1.c5)AND(603733417)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c6))))AND(x'94f0' COLLATE RTRIM))) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c5 ELSE 0Xf90d709 END) NOT NULL) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CAST(rt1.c6 COLLATE NOCASE AS BLOB)) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c5 ELSE 0Xf90d709 END) NOT NULL) DESC  NULLS FIRST LIMIT 0x0;
SELECT MIN(rt1.c1) FROM rt1 WHERE (rt1.c3) ORDER BY rt1.c2 ASC  NULLS FIRST, CAST(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)) AS REAL) ASC  NULLS LAST, (((~ (rt1.c3))) NOT NULL)  NULLS LAST;
SELECT DISTINCT MIN(rt1.c1) FROM rt1 WHERE (rt1.c3) ORDER BY rt1.c2 ASC  NULLS FIRST, CAST(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)) AS REAL) ASC  NULLS LAST, (((~ (rt1.c3))) NOT NULL)  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT MIN(rt1.c1) FROM rt1 WHERE (((((rt1.c2)==(rt1.c1)))>((((rt1.c0, rt1.c5))>=((rt1.c0, rt1.c6)))))) ORDER BY rt1.c2 ASC  NULLS FIRST, CAST(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)) AS REAL) ASC  NULLS LAST, (((~ (rt1.c3))) NOT NULL)  NULLS LAST LIMIT 3;
SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((((t0.c0) IS TRUE)) BETWEEN (((rt1.c1) IS FALSE)) AND ((t0.c2 IN (x'11')))) WHERE ((((rt1.c0) BETWEEN (-1701853655) AND (t0.c4)) IN ()));
SELECT * FROM rt1 CROSS JOIN t0 ON ((((t0.c0) IS TRUE)) BETWEEN (((rt1.c1) IS FALSE)) AND ((t0.c2 IN (x'11')))) WHERE ((((rt1.c0) BETWEEN (-1701853655) AND (t0.c4)) IN ()));
SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((((t0.c0) IS TRUE)) BETWEEN (((rt1.c1) IS FALSE)) AND ((t0.c2 IN (x'11')))) WHERE ((((rt1.c0) BETWEEN (-1701853655) AND (t0.c4)) IN ()));
SELECT * FROM rt1 CROSS JOIN t0 ON ((((t0.c0) IS TRUE)) BETWEEN (((rt1.c1) IS FALSE)) AND ((t0.c2 IN (x'11')))) WHERE ((((rt1.c0) BETWEEN (-1701853655) AND (t0.c4)) IN ()));
SELECT ALL * FROM rt1 WHERE (((RTRIM(rt1.c5))*(CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c1 END)));
SELECT DISTINCT * FROM rt1 WHERE (((RTRIM(rt1.c5))*(CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c1 END))) ORDER BY ((((rt1.c3)GLOB(rt1.c3))) BETWEEN (((rt1.c1)%(rt1.c4))) AND (((rt1.c0) NOT NULL))) DESC, (((rt1.c5, rt1.c4)) NOT BETWEEN ((((rt1.c2)GLOB(x'17ac15')), CAST(rt1.c0 AS INTEGER))) AND (((((rt1.c0))>((rt1.c6))), rt1.c6))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((RTRIM(rt1.c5))*(CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c1 END)));
SELECT DISTINCT * FROM rt1 WHERE (((RTRIM(rt1.c5))*(CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c1 END))) ORDER BY ((((rt1.c3)GLOB(rt1.c3))) BETWEEN (((rt1.c1)%(rt1.c4))) AND (((rt1.c0) NOT NULL))) DESC, (((rt1.c5, rt1.c4)) NOT BETWEEN ((((rt1.c2)GLOB(x'17ac15')), CAST(rt1.c0 AS INTEGER))) AND (((((rt1.c0))>((rt1.c6))), rt1.c6))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((~ (((rt1.c3) BETWEEN (rt1.c3) AND (t0.c2))))) ORDER BY ((rt1.c4 COLLATE BINARY)-((rt1.c1 IN (t0.c0, 886054297)))) DESC  NULLS LAST, CASE CASE WHEN rt1.c6 THEN t0.c4 ELSE rt1.c0 END  WHEN ((rt1.c2) BETWEEN (t0.c2) AND (1182917415)) THEN rt1.c1 COLLATE BINARY END;
SELECT COUNT(*) FROM rt1, t0 WHERE ((~ (((rt1.c3) BETWEEN (rt1.c3) AND (t0.c2))))) ORDER BY ((rt1.c4 COLLATE BINARY)-((rt1.c1 IN (t0.c0, 886054297)))) DESC  NULLS LAST, CASE CASE WHEN rt1.c6 THEN t0.c4 ELSE rt1.c0 END  WHEN ((rt1.c2) BETWEEN (t0.c2) AND (1182917415)) THEN rt1.c1 COLLATE BINARY END LIMIT 2;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4) NOTNULL))|(((rt1.c5) BETWEEN (rt1.c1) AND (rt1.c4)))));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((((rt1.c4) NOTNULL))|(((rt1.c5) BETWEEN (rt1.c1) AND (rt1.c4)))))AND((((NOT (rt1.c1))) NOT BETWEEN (CAST(x'15' AS NUMERIC)) AND (CAST(rt1.c6 AS REAL))))));
SELECT COUNT(*) FROM t0 WHERE (((((- (t0.c4))))<=((NULL))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((- (t0.c4))))<((NULL)))) ORDER BY t0.c2;
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE (rt1.c6);
SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE (rt1.c6) ORDER BY (- (((((rt1.c1)AND(rt1.c6)))OR(rt1.c1)))) ASC INTERSECT SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE (CASE 0.9116126212473283  WHEN ((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c5)) THEN (~ (rt1.c5)) END) ORDER BY (- (((((rt1.c1)AND(rt1.c6)))OR(rt1.c1)))) ASC;
SELECT * FROM rt1, t0 WHERE ('ꭖ
m');
SELECT DISTINCT * FROM rt1, t0 WHERE ('ꭖ
m') ORDER BY CASE MAX(rt1.c0, 'H')  WHEN rt1.c3 COLLATE BINARY THEN (((rt1.c2, t0.c4))!=((t0.c4, rt1.c4))) WHEN NULL THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(((t0.c3)<>(rt1.c1)) AS BLOB)) ORDER BY CASE MAX(rt1.c0, 'H')  WHEN rt1.c3 COLLATE BINARY THEN (((rt1.c2, t0.c4))<>((t0.c4, rt1.c4))) WHEN NULL THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END LIMIT 0;
SELECT * FROM rt1, t0 WHERE ('ꭖ
m');
SELECT DISTINCT * FROM rt1, t0 WHERE ('ꭖ
m') ORDER BY CASE MAX(rt1.c0, 'H')  WHEN rt1.c3 COLLATE BINARY THEN (((rt1.c2, t0.c4))!=((t0.c4, rt1.c4))) WHEN NULL THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(((t0.c3)<>(rt1.c1)) AS BLOB)) ORDER BY CASE MAX(rt1.c0, 'H')  WHEN rt1.c3 COLLATE BINARY THEN (((rt1.c2, t0.c4))<>((t0.c4, rt1.c4))) WHEN NULL THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END LIMIT 0;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c5 IN (rt1.c4, -1111875182))) BETWEEN (CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c2 ELSE rt1.c3 END) AND (((rt1.c0)IS NOT(rt1.c5))))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c5 IN (rt1.c4, -1111875182))) BETWEEN (CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c2 ELSE rt1.c3 END) AND (((rt1.c0)IS NOT(rt1.c5))))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((- (t0.c3))) BETWEEN (((t0.c4) NOTNULL)) AND (((((t0.c1)OR(t0.c3)))OR(t0.c0))))) ORDER BY (((NULL))>((CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c0 THEN t0.c4 END)));
SELECT ALL * FROM t0 WHERE ((((- (t0.c3))) BETWEEN (((t0.c4) NOTNULL)) AND (((((t0.c1)OR(t0.c3)))OR(t0.c0))))) ORDER BY (((NULL))>((CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c0 THEN t0.c4 END))) LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((- (t0.c3))) BETWEEN (((t0.c4) NOTNULL)) AND (((((t0.c1)OR(t0.c3)))OR(t0.c0))))) ORDER BY (((NULL))>((CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c0 THEN t0.c4 END)));
SELECT ALL * FROM t0 WHERE ((((- (t0.c3))) BETWEEN (((t0.c4) NOTNULL)) AND (((((t0.c1)OR(t0.c3)))OR(t0.c0))))) ORDER BY (((NULL))>((CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c0 THEN t0.c4 END))) LIMIT 1;
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE ((rt1.c2) NOT BETWEEN (0X6a09345) AND (t0.c3))  WHEN ((((((((((((t0.c3)OR(rt1.c3)))OR(t0.c1)))AND(t0.c2)))OR(t0.c3)))AND(rt1.c2)))OR(t0.c0)) THEN '-2092759471' END);
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE ((rt1.c2) NOT BETWEEN (111186757) AND (t0.c3))  WHEN ((((((((((((t0.c3)OR(rt1.c3)))OR(t0.c1)))AND(t0.c2)))OR(t0.c3)))AND(rt1.c2)))OR(t0.c0)) THEN '-2092759471' END) ORDER BY '108830827', (((t0.c2 IN (t0.c0)))!=((((t0.c0, t0.c3, rt1.c5))=((rt1.c1, t0.c1, t0.c3)))))  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((NOT (rt1.c4)))IS NOT((NOT (t0.c0))))) ORDER BY '108830827', (((t0.c2 IN (t0.c0)))<>((((t0.c0, t0.c3, rt1.c5))==((rt1.c1, t0.c1, t0.c3)))))  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c3))<((rt1.c6))));
SELECT * FROM rt1 WHERE ((((rt1.c3))<((rt1.c6)))) ORDER BY ((((rt1.c3)=(rt1.c6))) NOT BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((+ (rt1.c2))))  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((rt1.c3))<((rt1.c6))));
SELECT * FROM rt1 WHERE ((((rt1.c3))<((rt1.c6)))) ORDER BY ((((rt1.c3)=(rt1.c6))) NOT BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((+ (rt1.c2))))  NULLS FIRST;
SELECT MAX(rt1.c5) FROM t0, rt1 WHERE (NULL);
SELECT ALL MAX(rt1.c5) FROM t0, rt1 WHERE (NULL);
SELECT ALL MIN(rt1.c1) FROM t0, rt1 WHERE (NULL) ORDER BY ((TYPEOF(t0.c3)) IS FALSE) ASC  NULLS LAST;
SELECT MIN(rt1.c1) FROM t0, rt1 WHERE (NULL) ORDER BY ((TYPEOF(t0.c3)) IS FALSE) ASC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c1 IN ())) BETWEEN (((((t0.c4)OR('996534958')))AND(t0.c1))) AND (t0.c3))) ORDER BY ((t0.c0) NOT NULL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((t0.c1 IN ())) BETWEEN (((((t0.c4)OR('996534958')))AND(t0.c1))) AND (t0.c3))) ORDER BY (((t0.c3)) BETWEEN ((((t0.c3) NOTNULL))) AND (((- (t0.c3))))), ((IFNULL(t0.c0, t0.c4)) IS TRUE) ASC INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((t0.c3)) NOT BETWEEN (((t0.c1 IN (t0.c4, t0.c2, t0.c2)))) AND (((t0.c2 IN ()))))) ORDER BY (((t0.c3)) BETWEEN ((((t0.c3) NOTNULL))) AND (((- (t0.c3))))), ((IFNULL(t0.c0, t0.c4)) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((0.3965655201028666)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c4)))*(rt1.c1)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((0.3965655201028666)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c4)))*(rt1.c1))) ORDER BY LIKELIHOOD(((rt1.c5)AND(rt1.c1)), (((rt1.c2, '-1213328134', rt1.c1))>=((rt1.c2, rt1.c5, rt1.c2))))  NULLS LAST, ((((((((((rt1.c5)OR((rt1.c1 IN (rt1.c3)))))OR((~ (rt1.c5)))))AND((((x''))<=((rt1.c3))))))OR(NULL)))OR(CASE rt1.c5  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c5 END)) DESC LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((((+ (t0.c2))) BETWEEN ('u') AND (((t0.c1)>>(t0.c0))))) ORDER BY (((- (t0.c3)))-(((x'ba277f') NOT NULL)));
SELECT * FROM t0 WHERE ((((+ (t0.c2))) BETWEEN ('u') AND (((t0.c1)>>(t0.c0))))) ORDER BY ((NULL)LIKE(t0.c1 COLLATE RTRIM))  NULLS FIRST LIMIT 0x2 INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c4 IN (t0.c0))) IS FALSE)) ORDER BY ((NULL)LIKE(t0.c1 COLLATE RTRIM))  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t0 WHERE ((((+ (t0.c2))) BETWEEN ('u') AND (((t0.c1)>>(t0.c0))))) ORDER BY (((- (t0.c3)))-(((x'ba277f') NOT NULL)));
SELECT * FROM t0 WHERE ((((+ (t0.c2))) BETWEEN ('u') AND (((t0.c1)>>(t0.c0))))) ORDER BY ((NULL)LIKE(t0.c1 COLLATE RTRIM))  NULLS FIRST LIMIT 0x2 INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c4 IN (t0.c0))) IS FALSE)) ORDER BY ((NULL)LIKE(t0.c1 COLLATE RTRIM))  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t0, rt1 WHERE (((CAST(t0.c1 AS BLOB)) ISNULL)) ORDER BY ((((((rt1.c4)OR(rt1.c5)))AND(rt1.c0))) BETWEEN (DATE(t0.c0, rt1.c2, 0.012290722986845082)) AND ((((t0.c1, rt1.c5, t0.c1)) NOT BETWEEN ((rt1.c0, '.
*', t0.c4)) AND ((t0.c1, t0.c4, t0.c3))))) DESC, 2.0157933E8 DESC, (((x'' IN ()))*(CASE t0.c1  WHEN t0.c3 THEN t0.c3 WHEN rt1.c1 THEN 2342307.0 WHEN t0.c0 THEN rt1.c6 WHEN t0.c4 THEN rt1.c5 ELSE t0.c2 END)) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (((CAST(t0.c1 AS BLOB)) ISNULL)) ORDER BY ((((((rt1.c4)OR(rt1.c5)))AND(rt1.c0))) BETWEEN (DATE(t0.c0, rt1.c2, 0.012290722986845082)) AND ((((t0.c1, rt1.c5, t0.c1)) NOT BETWEEN ((rt1.c0, '.
*', t0.c4)) AND ((t0.c1, t0.c4, t0.c3))))) DESC, 2.0157933E8 DESC, (((x'' IN ()))*(CASE t0.c1  WHEN t0.c3 THEN t0.c3 WHEN rt1.c1 THEN 2342307.0 WHEN t0.c0 THEN rt1.c6 WHEN t0.c4 THEN rt1.c5 ELSE t0.c2 END)) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (((CAST(t0.c1 AS BLOB)) ISNULL)) ORDER BY ((((((rt1.c4)OR(rt1.c5)))AND(rt1.c0))) BETWEEN (DATE(t0.c0, rt1.c2, 0.012290722986845082)) AND ((((t0.c1, rt1.c5, t0.c1)) NOT BETWEEN ((rt1.c0, '.
*', t0.c4)) AND ((t0.c1, t0.c4, t0.c3))))) DESC, 2.0157933E8 DESC, (((x'' IN ()))*(CASE t0.c1  WHEN t0.c3 THEN t0.c3 WHEN rt1.c1 THEN 2342307.0 WHEN t0.c0 THEN rt1.c6 WHEN t0.c4 THEN rt1.c5 ELSE t0.c2 END)) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (((CAST(t0.c1 AS BLOB)) ISNULL)) ORDER BY ((((((rt1.c4)OR(rt1.c5)))AND(rt1.c0))) BETWEEN (DATE(t0.c0, rt1.c2, 0.012290722986845082)) AND ((((t0.c1, rt1.c5, t0.c1)) NOT BETWEEN ((rt1.c0, '.
*', t0.c4)) AND ((t0.c1, t0.c4, t0.c3))))) DESC, 2.0157933E8 DESC, (((x'' IN ()))*(CASE t0.c1  WHEN t0.c3 THEN t0.c3 WHEN rt1.c1 THEN 2342307.0 WHEN t0.c0 THEN rt1.c6 WHEN t0.c4 THEN rt1.c5 ELSE t0.c2 END)) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (CASE (rt1.c1 IN (rt1.c0))  WHEN '-1675530015' THEN (NOT (rt1.c5)) END) ORDER BY 0.45090362117297056 DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((CASE (rt1.c1 IN (rt1.c0))  WHEN '-1675530015' THEN (NOT (rt1.c5)) END)AND(((((rt1.c6) IS TRUE)) BETWEEN ((((rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c2))<=((rt1.c2, rt1.c1, rt1.c6, rt1.c0, rt1.c6)))) AND ((rt1.c1 IN ())))))) ORDER BY 0.45090362117297056 DESC  NULLS LAST LIMIT 1;
SELECT * FROM rt1 WHERE (CASE (rt1.c1 IN (rt1.c0))  WHEN '-1675530015' THEN (NOT (rt1.c5)) END) ORDER BY 0.45090362117297056 DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((CASE (rt1.c1 IN (rt1.c0))  WHEN '-1675530015' THEN (NOT (rt1.c5)) END)AND(((((rt1.c6) IS TRUE)) BETWEEN ((((rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c2))<=((rt1.c2, rt1.c1, rt1.c6, rt1.c0, rt1.c6)))) AND ((rt1.c1 IN ())))))) ORDER BY 0.45090362117297056 DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0 WHERE (t0.c4);
SELECT * FROM t0 WHERE (((t0.c4)AND(t0.c4))) LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (((((((((((t0.c3)AND(t0.c1)))OR(t0.c0)))OR(0.010253504101581878)))OR(88411032)))/((t0.c4 IN (t0.c3))))) LIMIT 0;
SELECT ALL * FROM t0 WHERE (t0.c4);
SELECT * FROM t0 WHERE (((t0.c4)AND(t0.c4))) LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (((((((((((t0.c3)AND(t0.c1)))OR(t0.c0)))OR(0.010253504101581878)))OR(88411032)))/((t0.c4 IN (t0.c3))))) LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (NULLIF(((t0.c0)AND(rt1.c1)), CAST(t0.c0 AS TEXT)));
SELECT * FROM rt1, t0 WHERE (((NULLIF(((t0.c0)AND(rt1.c1)), CAST(t0.c0 AS TEXT)))AND((+ (CAST(rt1.c2 AS INTEGER)))))) LIMIT 3;
SELECT ALL * FROM rt1, t0 WHERE (NULLIF(((t0.c0)AND(rt1.c1)), CAST(t0.c0 AS TEXT)));
SELECT * FROM rt1, t0 WHERE (((NULLIF(((t0.c0)AND(rt1.c1)), CAST(t0.c0 AS TEXT)))AND((+ (CAST(rt1.c2 AS INTEGER)))))) LIMIT 3;
SELECT * FROM rt1 WHERE (((rt1.c1) BETWEEN (((rt1.c6)==(rt1.c6))) AND (((((((rt1.c3)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))));
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1) BETWEEN (((rt1.c6)==(rt1.c6))) AND (((((((rt1.c3)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c1))))) ORDER BY ((CASE rt1.c5  WHEN rt1.c5 THEN '0.24002120252617443' WHEN rt1.c3 THEN rt1.c1 END) IS TRUE) DESC LIMIT 0X2;
SELECT * FROM rt1 WHERE (((rt1.c1) BETWEEN (((rt1.c6)==(rt1.c6))) AND (((((((rt1.c3)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))));
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1) BETWEEN (((rt1.c6)==(rt1.c6))) AND (((((((rt1.c3)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c1))))) ORDER BY ((CASE rt1.c5  WHEN rt1.c5 THEN '0.24002120252617443' WHEN rt1.c3 THEN rt1.c1 END) IS TRUE) DESC LIMIT 0X2;
SELECT ALL * FROM t0, rt1 WHERE (((((((((rt1.c1) BETWEEN (t0.c1) AND (t0.c4)))AND(((((t0.c2)AND('Nlqm')))OR(rt1.c5)))))OR(CASE t0.c4  WHEN rt1.c6 THEN '' WHEN rt1.c5 THEN rt1.c6 END)))AND(NULL)));
SELECT ALL * FROM t0, rt1 WHERE (((((((((((rt1.c1) BETWEEN (t0.c1) AND (t0.c4)))AND(((((t0.c2)AND('Nlqm')))OR(rt1.c5)))))OR(CASE t0.c4  WHEN rt1.c6 THEN '' WHEN rt1.c5 THEN rt1.c6 END)))AND(NULL)))AND(CAST(rt1.c2 AS REAL)))) ORDER BY ((rt1.c2)>>(TYPEOF(t0.c2))), LIKELIHOOD(DISTINCT ((((((t0.c0)AND(rt1.c1)))OR(rt1.c4)))AND(t0.c1)), CAST(rt1.c3 AS TEXT)) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t0, rt1 WHERE (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c5))) IN ())) ORDER BY ((rt1.c2)>>(TYPEOF(t0.c2))), LIKELIHOOD(DISTINCT ((((((t0.c0)AND(rt1.c1)))OR(rt1.c4)))AND(t0.c1)), CAST(rt1.c3 AS TEXT)) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE (((((((((rt1.c1) BETWEEN (t0.c1) AND (t0.c4)))AND(((((t0.c2)AND('Nlqm')))OR(rt1.c5)))))OR(CASE t0.c4  WHEN rt1.c6 THEN '' WHEN rt1.c5 THEN rt1.c6 END)))AND(NULL)));
SELECT ALL * FROM t0, rt1 WHERE (((((((((((rt1.c1) BETWEEN (t0.c1) AND (t0.c4)))AND(((((t0.c2)AND('Nlqm')))OR(rt1.c5)))))OR(CASE t0.c4  WHEN rt1.c6 THEN '' WHEN rt1.c5 THEN rt1.c6 END)))AND(NULL)))AND(CAST(rt1.c2 AS REAL)))) ORDER BY ((rt1.c2)>>(TYPEOF(t0.c2))), LIKELIHOOD(DISTINCT ((((((t0.c0)AND(rt1.c1)))OR(rt1.c4)))AND(t0.c1)), CAST(rt1.c3 AS TEXT)) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t0, rt1 WHERE (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c5))) IN ())) ORDER BY ((rt1.c2)>>(TYPEOF(t0.c2))), LIKELIHOOD(DISTINCT ((((((t0.c0)AND(rt1.c1)))OR(rt1.c4)))AND(t0.c1)), CAST(rt1.c3 AS TEXT)) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (DATE(((t0.c3) NOT BETWEEN (t0.c4) AND (t0.c3)), ((((((t0.c3)OR(t0.c3)))OR(t0.c1)))AND(t0.c3)), ((t0.c0) IS FALSE), (('1') NOT BETWEEN (t0.c3) AND (t0.c3)))) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c1 END AS BLOB) DESC;
SELECT DISTINCT * FROM t0 WHERE (((DATE(((t0.c3) NOT BETWEEN (t0.c4) AND (t0.c3)), ((((((t0.c3)OR(t0.c3)))OR(t0.c1)))AND(t0.c3)), ((t0.c0) IS FALSE), (('1') NOT BETWEEN (t0.c3) AND (t0.c3))))AND(((t0.c2 COLLATE NOCASE) NOT BETWEEN (((t0.c3)>=(t0.c0))) AND ((t0.c0 IN ())))))) ORDER BY CAST((t0.c2 IN ()) AS TEXT) ASC, ((((((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c3)))OR(((t0.c4)IS NOT(t0.c4)))))AND(((t0.c2)LIKE(t0.c3)))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c1, '294747175'))<=((((t0.c0) NOT NULL), t0.c3)))) ORDER BY CAST((t0.c2 IN ()) AS TEXT) ASC, ((((((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c3)))OR(((t0.c4)IS NOT(t0.c4)))))AND(((t0.c2)LIKE(t0.c3)))) LIMIT 0;
SELECT ALL * FROM t0 WHERE (DATE(((t0.c3) NOT BETWEEN (t0.c4) AND (t0.c3)), ((((((t0.c3)OR(t0.c3)))OR(t0.c1)))AND(t0.c3)), ((t0.c0) IS FALSE), (('1') NOT BETWEEN (t0.c3) AND (t0.c3)))) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c1 END AS BLOB) DESC;
SELECT DISTINCT * FROM t0 WHERE (((DATE(((t0.c3) NOT BETWEEN (t0.c4) AND (t0.c3)), ((((((t0.c3)OR(t0.c3)))OR(t0.c1)))AND(t0.c3)), ((t0.c0) IS FALSE), (('1') NOT BETWEEN (t0.c3) AND (t0.c3))))AND(((t0.c2 COLLATE NOCASE) NOT BETWEEN (((t0.c3)>=(t0.c0))) AND ((t0.c0 IN ())))))) ORDER BY CAST((t0.c2 IN ()) AS TEXT) ASC, ((((((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c3)))OR(((t0.c4)IS NOT(t0.c4)))))AND(((t0.c2)LIKE(t0.c3)))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c1, '294747175'))<=((((t0.c0) NOT NULL), t0.c3)))) ORDER BY CAST((t0.c2 IN ()) AS TEXT) ASC, ((((((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c3)))OR(((t0.c4)IS NOT(t0.c4)))))AND(((t0.c2)LIKE(t0.c3)))) LIMIT 0;
SELECT ALL * FROM rt1 WHERE (x'47d1c9') ORDER BY (NOT (((rt1.c1) ISNULL))) DESC  NULLS FIRST, CASE WHEN 'cķ0aB' THEN (rt1.c4 IN (rt1.c5)) WHEN CAST(rt1.c3 AS BLOB) THEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c3 END ELSE ((((((rt1.c4)AND('200845892')))AND(rt1.c2)))OR(NULL)) END;
SELECT ALL * FROM rt1 WHERE (x'47d1c9') ORDER BY CAST(CAST(rt1.c2 AS NUMERIC) AS NUMERIC) ASC LIMIT 1 INTERSECT SELECT ALL * FROM rt1 WHERE (CAST((((rt1.c0, rt1.c5, rt1.c0))>((rt1.c4, rt1.c1, rt1.c4))) AS NUMERIC)) ORDER BY CAST(CAST(rt1.c2 AS NUMERIC) AS NUMERIC) ASC LIMIT 0X1;
SELECT ALL * FROM rt1 WHERE (x'47d1c9') ORDER BY (NOT (((rt1.c1) ISNULL))) DESC  NULLS FIRST, CASE WHEN 'cķ0aB' THEN (rt1.c4 IN (rt1.c5)) WHEN CAST(rt1.c3 AS BLOB) THEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c3 END ELSE ((((((rt1.c4)AND('200845892')))AND(rt1.c2)))OR(NULL)) END;
SELECT ALL * FROM rt1 WHERE (x'47d1c9') ORDER BY CAST(CAST(rt1.c2 AS NUMERIC) AS NUMERIC) ASC LIMIT 1 INTERSECT SELECT ALL * FROM rt1 WHERE (CAST((((rt1.c0, rt1.c5, rt1.c0))>((rt1.c4, rt1.c1, rt1.c4))) AS NUMERIC)) ORDER BY CAST(CAST(rt1.c2 AS NUMERIC) AS NUMERIC) ASC LIMIT 0X1;
SELECT ALL * FROM rt1 WHERE ((((((((((rt1.c3 IN (rt1.c1)))AND(((((rt1.c5)AND(rt1.c1)))OR(rt1.c2)))))OR(((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c5)))))OR((((rt1.c3))<((rt1.c5))))))AND((rt1.c4 IN ()))));
SELECT * FROM rt1 WHERE ((((((((((rt1.c3 IN (rt1.c1)))AND(((((rt1.c5)AND(rt1.c1)))OR(rt1.c2)))))OR(((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c5)))))OR((((rt1.c3))<((rt1.c5))))))AND((rt1.c4 IN ())))) ORDER BY (((CAST(rt1.c1 AS TEXT), (((rt1.c5, rt1.c5))>=((rt1.c2, rt1.c5))), ((((((rt1.c6)AND(rt1.c3)))AND('-1050996115')))AND(rt1.c1))))<((((rt1.c5) IS TRUE), (('-1992897124')<<(rt1.c0)), CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c1 END))) ASC  NULLS LAST, ((((rt1.c5)<<(rt1.c1)))*((~ (rt1.c2)))), UNLIKELY(DISTINCT ((rt1.c4)IS NOT(x'b578abd88b58'))) LIMIT 0 INTERSECT SELECT ALL * FROM rt1 WHERE ((('1333222245') NOT BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (NULLIF(DISTINCT rt1.c1, 430197382)))) ORDER BY (((CAST(rt1.c1 AS TEXT), (((rt1.c5, rt1.c5))>=((rt1.c2, rt1.c5))), ((((((rt1.c6)AND(rt1.c3)))AND('-1050996115')))AND(rt1.c1))))<((((rt1.c5) IS TRUE), (('-1992897124')<<(rt1.c0)), CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c1 END))) ASC  NULLS LAST, ((((rt1.c5)<<(rt1.c1)))*((~ (rt1.c2)))), UNLIKELY(DISTINCT ((rt1.c4)IS NOT(x'b578abd88b58'))) LIMIT 0;
SELECT ALL * FROM rt1 WHERE ((((((((((rt1.c3 IN (rt1.c1)))AND(((((rt1.c5)AND(rt1.c1)))OR(rt1.c2)))))OR(((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c5)))))OR((((rt1.c3))<((rt1.c5))))))AND((rt1.c4 IN ()))));
SELECT * FROM rt1 WHERE ((((((((((rt1.c3 IN (rt1.c1)))AND(((((rt1.c5)AND(rt1.c1)))OR(rt1.c2)))))OR(((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c5)))))OR((((rt1.c3))<((rt1.c5))))))AND((rt1.c4 IN ())))) ORDER BY (((CAST(rt1.c1 AS TEXT), (((rt1.c5, rt1.c5))>=((rt1.c2, rt1.c5))), ((((((rt1.c6)AND(rt1.c3)))AND('-1050996115')))AND(rt1.c1))))<((((rt1.c5) IS TRUE), (('-1992897124')<<(rt1.c0)), CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c1 END))) ASC  NULLS LAST, ((((rt1.c5)<<(rt1.c1)))*((~ (rt1.c2)))), UNLIKELY(DISTINCT ((rt1.c4)IS NOT(x'b578abd88b58'))) LIMIT 0 INTERSECT SELECT ALL * FROM rt1 WHERE ((('1333222245') NOT BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (NULLIF(DISTINCT rt1.c1, 430197382)))) ORDER BY (((CAST(rt1.c1 AS TEXT), (((rt1.c5, rt1.c5))>=((rt1.c2, rt1.c5))), ((((((rt1.c6)AND(rt1.c3)))AND('-1050996115')))AND(rt1.c1))))<((((rt1.c5) IS TRUE), (('-1992897124')<<(rt1.c0)), CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c1 END))) ASC  NULLS LAST, ((((rt1.c5)<<(rt1.c1)))*((~ (rt1.c2)))), UNLIKELY(DISTINCT ((rt1.c4)IS NOT(x'b578abd88b58'))) LIMIT 0;
SELECT MIN(rt1.c6) FROM t0, rt1 WHERE (((CASE WHEN '264978147' THEN rt1.c2 WHEN rt1.c5 THEN t0.c2 END)<(((rt1.c4)IS NOT(rt1.c0)))));
SELECT MIN(rt1.c6) FROM t0, rt1 WHERE (((((CASE WHEN '264978147' THEN rt1.c2 WHEN rt1.c5 THEN t0.c2 END)<(((rt1.c4)IS NOT(rt1.c0)))))AND((((((rt1.c6))==((rt1.c6))))IS NOT(((t0.c2)LIKE(rt1.c2))))))) INTERSECT SELECT MIN(rt1.c6) FROM t0, rt1 WHERE (CASE ((rt1.c5) NOT NULL)  WHEN TRIM(DISTINCT rt1.c5, t0.c4) THEN ((((((t0.c0)AND('-659412900')))AND(rt1.c2)))AND(t0.c4)) WHEN 0Xffffffffc023fdb0 THEN ((rt1.c2) NOTNULL) WHEN rt1.c5 THEN ('1664405135' IN (t0.c3)) WHEN (((0.23605953495875442))<=((rt1.c5))) THEN ((0.7862889941187059) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END);
SELECT ALL MAX(t0.c3) FROM rt1, t0 WHERE ((~ ((((t0.c0))=((rt1.c1))))));
SELECT DISTINCT MAX(t0.c3) FROM rt1, t0 WHERE ((((~ ((((t0.c0))=((rt1.c1))))))AND(rt1.c4))) INTERSECT SELECT DISTINCT MAX(t0.c3) FROM rt1, t0 WHERE (x'');
SELECT ALL * FROM t0, rt1 WHERE ((((- ('[o<<')))>=(((rt1.c0) BETWEEN (NULL) AND (t0.c4)))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((- ('[o<<')))>=(((rt1.c0) BETWEEN (NULL) AND (t0.c4))))) ORDER BY CAST((~ (rt1.c4)) AS REAL) DESC  NULLS FIRST, CAST(((t0.c2) IS TRUE) AS BLOB) DESC, ((CAST(rt1.c6 AS INTEGER)) NOT BETWEEN (0x384e7937) AND (((t0.c0)*(rt1.c3))))  NULLS FIRST, ((((((((((((t0.c1)OR(t0.c4)))AND(t0.c1)))OR(rt1.c1)))AND(t0.c1)))OR(rt1.c2)))AND(t0.c3)) COLLATE NOCASE LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CAST(((t0.c4) BETWEEN (rt1.c6) AND (0.703176831035025)) AS TEXT)) ORDER BY CAST((~ (rt1.c4)) AS REAL) DESC  NULLS FIRST, CAST(((t0.c2) IS TRUE) AS BLOB) DESC, ((CAST(rt1.c6 AS INTEGER)) NOT BETWEEN (944666935) AND (((t0.c0)*(rt1.c3))))  NULLS FIRST, ((((((((((((t0.c1)OR(t0.c4)))AND(t0.c1)))OR(rt1.c1)))AND(t0.c1)))OR(rt1.c2)))AND(t0.c3)) COLLATE NOCASE LIMIT 0x1;
SELECT ALL * FROM t0, rt1 WHERE ((((- ('[o<<')))>=(((rt1.c0) BETWEEN (NULL) AND (t0.c4)))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((- ('[o<<')))>=(((rt1.c0) BETWEEN (NULL) AND (t0.c4))))) ORDER BY CAST((~ (rt1.c4)) AS REAL) DESC  NULLS FIRST, CAST(((t0.c2) IS TRUE) AS BLOB) DESC, ((CAST(rt1.c6 AS INTEGER)) NOT BETWEEN (0x384e7937) AND (((t0.c0)*(rt1.c3))))  NULLS FIRST, ((((((((((((t0.c1)OR(t0.c4)))AND(t0.c1)))OR(rt1.c1)))AND(t0.c1)))OR(rt1.c2)))AND(t0.c3)) COLLATE NOCASE LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CAST(((t0.c4) BETWEEN (rt1.c6) AND (0.703176831035025)) AS TEXT)) ORDER BY CAST((~ (rt1.c4)) AS REAL) DESC  NULLS FIRST, CAST(((t0.c2) IS TRUE) AS BLOB) DESC, ((CAST(rt1.c6 AS INTEGER)) NOT BETWEEN (944666935) AND (((t0.c0)*(rt1.c3))))  NULLS FIRST, ((((((((((((t0.c1)OR(t0.c4)))AND(t0.c1)))OR(rt1.c1)))AND(t0.c1)))OR(rt1.c2)))AND(t0.c3)) COLLATE NOCASE LIMIT 0x1;
SELECT ALL MIN(t0.c4) FROM t0 WHERE (((t0.c0)*(t0.c2)) COLLATE RTRIM COLLATE BINARY) ORDER BY CAST((NOT (t0.c4)) AS INTEGER);
SELECT MIN(t0.c4) FROM t0 WHERE (((((t0.c0)*(t0.c2)) COLLATE RTRIM COLLATE BINARY)AND(((- (t0.c0)) IN ())))) ORDER BY CAST((NOT (t0.c4)) AS INTEGER) LIMIT 0x1 INTERSECT SELECT ALL MIN(t0.c4) FROM t0 WHERE ((~ (CASE t0.c1  WHEN t0.c4 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c4 END))) ORDER BY CAST((NOT (t0.c4)) AS INTEGER) LIMIT 0X1;
SELECT ALL MAX(rt1.c3) FROM rt1, t0 WHERE (((NULL) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0)>=(rt1.c2)))));
SELECT DISTINCT MAX(rt1.c3) FROM rt1, t0 WHERE (((((NULL) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0)>=(rt1.c2)))))AND(((((((t0.c1)AND(t0.c0)))OR(t0.c1))) IS FALSE)))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt1.c3) FROM rt1, t0 WHERE (((CAST(rt1.c4 AS REAL))=(((t0.c4)<=(rt1.c1))))) LIMIT 0x0;
SELECT * FROM rt1 CROSS JOIN t0 ON ((rt1.c1 COLLATE RTRIM) NOT BETWEEN (IFNULL(t0.c3, rt1.c1)) AND (((rt1.c2) IS TRUE))) WHERE (CAST(((((NULL)AND(t0.c0)))AND(0.7659258223209783)) AS INTEGER));
SELECT * FROM rt1 CROSS JOIN t0 ON ((rt1.c1 COLLATE RTRIM) NOT BETWEEN (IFNULL(t0.c3, rt1.c1)) AND (((rt1.c2) IS TRUE))) WHERE (CAST(((((NULL)AND(t0.c0)))AND(0.7659258223209783)) AS INTEGER)) ORDER BY ((rt1.c3) IS TRUE), IFNULL(DISTINCT t0.c1, rt1.c4) COLLATE RTRIM INTERSECT SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((rt1.c1 COLLATE RTRIM) NOT BETWEEN (IFNULL(t0.c3, rt1.c1)) AND (((rt1.c2) IS TRUE))) WHERE ((TRIM(t0.c4, rt1.c6) IN (((t0.c0) BETWEEN (0.9191291534213611) AND (rt1.c5))))) ORDER BY ((rt1.c3) IS TRUE), IFNULL(DISTINCT t0.c1, rt1.c4) COLLATE RTRIM;
SELECT * FROM rt1 CROSS JOIN t0 ON ((rt1.c1 COLLATE RTRIM) NOT BETWEEN (IFNULL(t0.c3, rt1.c1)) AND (((rt1.c2) IS TRUE))) WHERE (CAST(((((NULL)AND(t0.c0)))AND(0.7659258223209783)) AS INTEGER));
SELECT * FROM rt1 CROSS JOIN t0 ON ((rt1.c1 COLLATE RTRIM) NOT BETWEEN (IFNULL(t0.c3, rt1.c1)) AND (((rt1.c2) IS TRUE))) WHERE (CAST(((((NULL)AND(t0.c0)))AND(0.7659258223209783)) AS INTEGER)) ORDER BY ((rt1.c3) IS TRUE), IFNULL(DISTINCT t0.c1, rt1.c4) COLLATE RTRIM INTERSECT SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((rt1.c1 COLLATE RTRIM) NOT BETWEEN (IFNULL(t0.c3, rt1.c1)) AND (((rt1.c2) IS TRUE))) WHERE ((TRIM(t0.c4, rt1.c6) IN (((t0.c0) BETWEEN (0.9191291534213611) AND (rt1.c5))))) ORDER BY ((rt1.c3) IS TRUE), IFNULL(DISTINCT t0.c1, rt1.c4) COLLATE RTRIM;
SELECT * FROM t0 NOT INDEXED WHERE (((((t0.c2) NOTNULL))LIKE(CASE WHEN t0.c3 THEN t0.c2 ELSE t0.c2 END))) ORDER BY ((((t0.c4)OR(t0.c4)))-(t0.c1 COLLATE NOCASE)), (t0.c2 IN (t0.c1)) COLLATE RTRIM ASC;
SELECT * FROM t0 WHERE (((((t0.c2) NOTNULL))LIKE(CASE WHEN t0.c3 THEN t0.c2 ELSE t0.c2 END))) ORDER BY ((((t0.c4)OR(t0.c4)))-(t0.c1 COLLATE NOCASE)), (t0.c2 IN (t0.c1)) COLLATE RTRIM ASC LIMIT 3 INTERSECT SELECT * FROM t0 WHERE (t0.c3) ORDER BY ((((t0.c4)OR(t0.c4)))-(t0.c1 COLLATE NOCASE)), (t0.c2 IN (t0.c1)) COLLATE RTRIM ASC LIMIT 0x3;
SELECT * FROM t0 NOT INDEXED WHERE (((((t0.c2) NOTNULL))LIKE(CASE WHEN t0.c3 THEN t0.c2 ELSE t0.c2 END))) ORDER BY ((((t0.c4)OR(t0.c4)))-(t0.c1 COLLATE NOCASE)), (t0.c2 IN (t0.c1)) COLLATE RTRIM ASC;
SELECT * FROM t0 WHERE (((((t0.c2) NOTNULL))LIKE(CASE WHEN t0.c3 THEN t0.c2 ELSE t0.c2 END))) ORDER BY ((((t0.c4)OR(t0.c4)))-(t0.c1 COLLATE NOCASE)), (t0.c2 IN (t0.c1)) COLLATE RTRIM ASC LIMIT 3 INTERSECT SELECT * FROM t0 WHERE (t0.c3) ORDER BY ((((t0.c4)OR(t0.c4)))-(t0.c1 COLLATE NOCASE)), (t0.c2 IN (t0.c1)) COLLATE RTRIM ASC LIMIT 0x3;
SELECT ALL MAX(rt1.c4) FROM rt1 WHERE (rt1.c6);
SELECT MAX(rt1.c4) FROM rt1 WHERE (((rt1.c6)AND(UPPER(((rt1.c5)+(rt1.c3)))))) ORDER BY ((UNLIKELY('-2065710970')) IS FALSE) ASC  NULLS LAST INTERSECT SELECT MAX(rt1.c4) FROM rt1 WHERE (((((rt1.c3)<(rt1.c6))) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c5 END) AND (CAST(rt1.c5 AS REAL)))) ORDER BY ((UNLIKELY('-2065710970')) IS FALSE) ASC  NULLS LAST;
SELECT * FROM rt1, t0 WHERE ((((((((((((((+ (t0.c1)))AND(((rt1.c6)IS NOT(rt1.c2)))))AND(json_array_length(rt1.c3, rt1.c3))))OR(((rt1.c3)||(x'')))))AND(((rt1.c3) NOTNULL))))OR(((((rt1.c0)OR(rt1.c5)))AND(t0.c0)))))AND(((t0.c0)-(rt1.c5))))) ORDER BY CAST(((rt1.c5)>>(rt1.c3)) AS NUMERIC) ASC, rt1.c3  NULLS FIRST, CASE CASE t0.c4  WHEN rt1.c1 THEN rt1.c0 WHEN x'b2a7ed' THEN rt1.c5 WHEN t0.c2 THEN rt1.c6 WHEN t0.c4 THEN t0.c0 ELSE t0.c0 END  WHEN (((0.799085717771531))<=((t0.c1))) THEN rt1.c6 WHEN ((((((((t0.c3)OR(rt1.c2)))OR(rt1.c0)))OR(0.49333363160199084)))OR(t0.c4)) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c5)) WHEN CAST(2131822077 AS REAL) THEN TRIM(DISTINCT rt1.c0, rt1.c6) END  NULLS LAST;
SELECT ALL * FROM rt1 NOT INDEXED, t0 WHERE ((((((((((((((((+ (t0.c1)))AND(((rt1.c6)IS NOT(rt1.c2)))))AND(json_array_length(rt1.c3, rt1.c3))))OR(((rt1.c3)||(x'')))))AND(((rt1.c3) NOTNULL))))OR(((((rt1.c0)OR(rt1.c5)))AND(t0.c0)))))AND(((t0.c0)-(rt1.c5)))))AND(((((rt1.c3)OR(t0.c2))) NOTNULL)))) ORDER BY (RTRIM(0.1952059545223649) IN (NULL)) DESC, IFNULL(rt1.c6 COLLATE BINARY, CASE WHEN t0.c4 THEN rt1.c2 END) DESC, ((((((((((NULL) NOT BETWEEN (rt1.c5) AND (0.2918997012679213)))AND(LOWER(rt1.c1))))AND(CASE WHEN rt1.c3 THEN 'y}f1%xNY' WHEN x'2f' THEN x'0b' WHEN t0.c3 THEN t0.c2 ELSE t0.c1 END)))AND(((rt1.c2)IS NOT(rt1.c0)))))AND(IFNULL(t0.c0, rt1.c1))) DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT * FROM rt1, t0 WHERE (((((rt1.c2) IS FALSE))||(COALESCE(DISTINCT rt1.c2, t0.c0, rt1.c3, t0.c4, rt1.c4)))) ORDER BY (RTRIM(0.1952059545223649) IN (NULL)) DESC, IFNULL(rt1.c6 COLLATE BINARY, CASE WHEN t0.c4 THEN rt1.c2 END) DESC, ((((((((((NULL) NOT BETWEEN (rt1.c5) AND (0.2918997012679213)))AND(LOWER(rt1.c1))))AND(CASE WHEN rt1.c3 THEN 'y}f1%xNY' WHEN x'2f' THEN x'0b' WHEN t0.c3 THEN t0.c2 ELSE t0.c1 END)))AND(((rt1.c2)IS NOT(rt1.c0)))))AND(IFNULL(t0.c0, rt1.c1))) DESC  NULLS LAST LIMIT 0x1;
SELECT * FROM rt1, t0 WHERE ((((((((((((((+ (t0.c1)))AND(((rt1.c6)IS NOT(rt1.c2)))))AND(json_array_length(rt1.c3, rt1.c3))))OR(((rt1.c3)||(x'')))))AND(((rt1.c3) NOTNULL))))OR(((((rt1.c0)OR(rt1.c5)))AND(t0.c0)))))AND(((t0.c0)-(rt1.c5))))) ORDER BY CAST(((rt1.c5)>>(rt1.c3)) AS NUMERIC) ASC, rt1.c3  NULLS FIRST, CASE CASE t0.c4  WHEN rt1.c1 THEN rt1.c0 WHEN x'b2a7ed' THEN rt1.c5 WHEN t0.c2 THEN rt1.c6 WHEN t0.c4 THEN t0.c0 ELSE t0.c0 END  WHEN (((0.799085717771531))<=((t0.c1))) THEN rt1.c6 WHEN ((((((((t0.c3)OR(rt1.c2)))OR(rt1.c0)))OR(0.49333363160199084)))OR(t0.c4)) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c5)) WHEN CAST(2131822077 AS REAL) THEN TRIM(DISTINCT rt1.c0, rt1.c6) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (CAST(x'ca78' AS TEXT))));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((~ (CAST(x'ca78' AS TEXT))))AND(CASE ((rt1.c5)/(rt1.c3))  WHEN rt1.c1 COLLATE NOCASE THEN (~ (rt1.c4)) WHEN ((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c6)) THEN rt1.c0 COLLATE RTRIM END))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((rt1.c3)>=(rt1.c0)))<=(CAST(rt1.c1 AS BLOB)))) LIMIT 0;
SELECT ALL MAX(t0.c3) FROM rt1, t0 WHERE (CASE rt1.c1  WHEN (((t0.c2, rt1.c4, rt1.c4)) BETWEEN ((t0.c0, 0x116b3e3a, rt1.c5)) AND ((t0.c1, rt1.c6, rt1.c6))) THEN ((rt1.c1) BETWEEN (t0.c3) AND (rt1.c5)) WHEN t0.c3 THEN ((((((rt1.c6)AND(NULL)))AND(t0.c0)))OR('V*\')) END) ORDER BY (((((((('201579330')AND(((t0.c4) BETWEEN (rt1.c2) AND (t0.c2)))))AND(HEX(DISTINCT t0.c2))))OR(SQLITE_COMPILEOPTION_GET(rt1.c4))))AND(rt1.c4 COLLATE RTRIM)) ASC;
SELECT DISTINCT MAX(t0.c3) FROM rt1, t0 WHERE (CASE rt1.c1  WHEN (((t0.c2, rt1.c4, rt1.c4)) BETWEEN ((t0.c0, 0X116b3e3a, rt1.c5)) AND ((t0.c1, rt1.c6, rt1.c6))) THEN ((rt1.c1) BETWEEN (t0.c3) AND (rt1.c5)) WHEN t0.c3 THEN ((((((rt1.c6)AND(NULL)))AND(t0.c0)))OR('V*\')) END) ORDER BY ((rt1.c3)>(CASE t0.c4  WHEN rt1.c0 THEN t0.c3 ELSE t0.c2 END))  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE ((((((((rt1.c0))>((NULL))))OR(rt1.c3)))AND(STRFTIME(t0.c1, rt1.c0, rt1.c2, rt1.c3, x'f0')))) ORDER BY NULL  NULLS FIRST, CAST(NULL AS INTEGER)  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ((((((((((rt1.c0))>((NULL))))OR(rt1.c3)))AND(STRFTIME(t0.c1, rt1.c0, rt1.c2, rt1.c3, x'f0'))))AND(((((t0.c2)&(t0.c0))) IS TRUE)))) ORDER BY t0.c2 ASC, (((NULL, rt1.c2)) NOT BETWEEN ((rt1.c2, ((rt1.c0)>=(rt1.c4)))) AND (((- (rt1.c6)), CAST(rt1.c2 AS NUMERIC)))) ASC LIMIT 0X2;
SELECT ALL * FROM rt1, t0 WHERE ((((((((rt1.c0))>((NULL))))OR(rt1.c3)))AND(STRFTIME(t0.c1, rt1.c0, rt1.c2, rt1.c3, x'f0')))) ORDER BY NULL  NULLS FIRST, CAST(NULL AS INTEGER)  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ((((((((((rt1.c0))>((NULL))))OR(rt1.c3)))AND(STRFTIME(t0.c1, rt1.c0, rt1.c2, rt1.c3, x'f0'))))AND(((((t0.c2)&(t0.c0))) IS TRUE)))) ORDER BY t0.c2 ASC, (((NULL, rt1.c2)) NOT BETWEEN ((rt1.c2, ((rt1.c0)>=(rt1.c4)))) AND (((- (rt1.c6)), CAST(rt1.c2 AS NUMERIC)))) ASC LIMIT 0X2;
SELECT MIN(rt1.c4) FROM rt1, t0 WHERE ((NOT ((((t0.c3)) NOT BETWEEN ((rt1.c6)) AND ((t0.c0))))));
SELECT DISTINCT MIN(rt1.c4) FROM rt1, t0 WHERE ((NOT ((((t0.c3)) NOT BETWEEN ((rt1.c6)) AND ((t0.c0)))))) LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(rt1.c4) FROM rt1, t0 WHERE (x'') LIMIT 1;
SELECT ALL MIN(rt1.c0) FROM rt1 WHERE (((((((((((((((rt1.c4)OR(rt1.c2)))OR(rt1.c5)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c6)))AND(rt1.c0))) IS TRUE));
SELECT DISTINCT MIN(rt1.c0) FROM rt1 WHERE (((((((((((((((((rt1.c4)OR(rt1.c2)))OR(rt1.c5)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c6)))AND(rt1.c0))) IS TRUE))AND(((((rt1.c3, rt1.c4)) BETWEEN ((rt1.c2, rt1.c5)) AND ((rt1.c5, rt1.c3))) IN ((rt1.c6 IN ())))))) ORDER BY ((((((rt1.c2)AND(JULIANDAY(NULL, rt1.c3, NULL))))AND(((rt1.c0)>=(rt1.c1)))))AND((((rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, rt1.c2)) AND ((rt1.c0, rt1.c6))))) LIMIT 0x2 INTERSECT SELECT DISTINCT MIN(rt1.c0) FROM rt1 WHERE ((rt1.c1 IN (rt1.c0, rt1.c1)) COLLATE RTRIM) ORDER BY ((((((rt1.c2)AND(JULIANDAY(NULL, rt1.c3, NULL))))AND(((rt1.c0)>=(rt1.c1)))))AND((((rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, rt1.c2)) AND ((rt1.c0, rt1.c6))))) LIMIT 0x2;
SELECT MAX(t0.c2) FROM t0 CROSS JOIN rt1 ON (((t0.c2)) BETWEEN ((((((t0.c2)AND(rt1.c6)))AND(rt1.c1)))) AND (((((t0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c5)))))) WHERE ((+ (((rt1.c3) BETWEEN (rt1.c1) AND (t0.c0)))));
SELECT MAX(t0.c2) FROM t0 CROSS JOIN rt1 ON (((t0.c2)) BETWEEN ((((((t0.c2)AND(rt1.c6)))AND(rt1.c1)))) AND (((((t0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c5)))))) WHERE ((+ (((rt1.c3) BETWEEN (rt1.c1) AND (t0.c0)))));
SELECT ALL * FROM rt1 WHERE ((((CAST(rt1.c0 AS TEXT), (((rt1.c6))!=((rt1.c6))), ((rt1.c1) IS FALSE)))>((rt1.c2 COLLATE NOCASE, CASE rt1.c6  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, rt1.c0))));
SELECT DISTINCT * FROM rt1 WHERE ((((CAST(rt1.c0 AS TEXT), (((rt1.c6))!=((rt1.c6))), ((rt1.c1) IS FALSE)))>((rt1.c2 COLLATE NOCASE, CASE rt1.c6  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, rt1.c0)))) ORDER BY (((rt1.c2)) BETWEEN (((rt1.c3 IN ()))) AND ((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4))))) DESC, rt1.c3 DESC  NULLS FIRST, CASE ((rt1.c0)AND(rt1.c0))  WHEN ((rt1.c6) NOT NULL) THEN ((((((rt1.c4)AND(rt1.c0)))AND(rt1.c1)))OR('YGWFr')) WHEN CAST(rt1.c0 AS TEXT) THEN rt1.c3 END ASC LIMIT 0;
SELECT ALL * FROM rt1 WHERE ((((CAST(rt1.c0 AS TEXT), (((rt1.c6))!=((rt1.c6))), ((rt1.c1) IS FALSE)))>((rt1.c2 COLLATE NOCASE, CASE rt1.c6  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, rt1.c0))));
SELECT DISTINCT * FROM rt1 WHERE ((((CAST(rt1.c0 AS TEXT), (((rt1.c6))!=((rt1.c6))), ((rt1.c1) IS FALSE)))>((rt1.c2 COLLATE NOCASE, CASE rt1.c6  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, rt1.c0)))) ORDER BY (((rt1.c2)) BETWEEN (((rt1.c3 IN ()))) AND ((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4))))) DESC, rt1.c3 DESC  NULLS FIRST, CASE ((rt1.c0)AND(rt1.c0))  WHEN ((rt1.c6) NOT NULL) THEN ((((((rt1.c4)AND(rt1.c0)))AND(rt1.c1)))OR('YGWFr')) WHEN CAST(rt1.c0 AS TEXT) THEN rt1.c3 END ASC LIMIT 0;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((t0.c1 COLLATE NOCASE)<=(rt1.c3 COLLATE BINARY))) ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (CASE t0.c2  WHEN rt1.c6 THEN 'R 5oD' WHEN t0.c2 THEN t0.c3 WHEN x'' THEN t0.c4 END) AND (((t0.c2)-(rt1.c2))));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((t0.c1 COLLATE NOCASE)==(rt1.c3 COLLATE BINARY))) ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (CASE t0.c2  WHEN rt1.c6 THEN 'R 5oD' WHEN t0.c2 THEN t0.c3 WHEN x'' THEN t0.c4 END) AND (((t0.c2)-(rt1.c2)))) LIMIT 1 INTERSECT SELECT * FROM rt1 NATURAL JOIN t0 WHERE ((((rt1.c6)) NOT BETWEEN ((IFNULL(DISTINCT rt1.c6, rt1.c5))) AND ((CASE WHEN t0.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)))) ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (CASE t0.c2  WHEN rt1.c6 THEN 'R 5oD' WHEN t0.c2 THEN t0.c3 WHEN x'' THEN t0.c4 END) AND (((t0.c2)-(rt1.c2)))) LIMIT 0X1;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((t0.c1 COLLATE NOCASE)<=(rt1.c3 COLLATE BINARY))) ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (CASE t0.c2  WHEN rt1.c6 THEN 'R 5oD' WHEN t0.c2 THEN t0.c3 WHEN x'' THEN t0.c4 END) AND (((t0.c2)-(rt1.c2))));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((t0.c1 COLLATE NOCASE)==(rt1.c3 COLLATE BINARY))) ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (CASE t0.c2  WHEN rt1.c6 THEN 'R 5oD' WHEN t0.c2 THEN t0.c3 WHEN x'' THEN t0.c4 END) AND (((t0.c2)-(rt1.c2)))) LIMIT 1 INTERSECT SELECT * FROM rt1 NATURAL JOIN t0 WHERE ((((rt1.c6)) NOT BETWEEN ((IFNULL(DISTINCT rt1.c6, rt1.c5))) AND ((CASE WHEN t0.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)))) ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (CASE t0.c2  WHEN rt1.c6 THEN 'R 5oD' WHEN t0.c2 THEN t0.c3 WHEN x'' THEN t0.c4 END) AND (((t0.c2)-(rt1.c2)))) LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c3 THEN t0.c2 ELSE t0.c2 END AS INTEGER)) ORDER BY (((t0.c0, t0.c3, 0X30fdb141, '1934950711')) NOT BETWEEN ((t0.c4, ((((((NULL)OR(-1982283490)))OR(t0.c2)))OR('^Al')), NULL, t0.c4 COLLATE NOCASE)) AND ((((((((((((t0.c3)OR(t0.c2)))OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(t0.c4)), ((t0.c2)AND(t0.c0)), ((t0.c3) BETWEEN (t0.c1) AND (x'')), CAST(t0.c0 AS TEXT)))) ASC, '-1279305933' COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c3 THEN t0.c2 ELSE t0.c2 END AS INTEGER)) ORDER BY (((t0.c0, t0.c3, 821932353, '1934950711')) NOT BETWEEN ((t0.c4, ((((((NULL)OR(0xffffffff89d8c11e)))OR(t0.c2)))OR('^Al')), NULL, t0.c4 COLLATE NOCASE)) AND ((((((((((((t0.c3)OR(t0.c2)))OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(t0.c4)), ((t0.c2)AND(t0.c0)), ((t0.c3) BETWEEN (t0.c1) AND (x'')), CAST(t0.c0 AS TEXT)))) ASC, '-1279305933' COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c2))) ORDER BY (((t0.c0, t0.c3, 821932353, '1934950711')) NOT BETWEEN ((t0.c4, ((((((NULL)OR(0xffffffff89d8c11e)))OR(t0.c2)))OR('^Al')), NULL, t0.c4 COLLATE NOCASE)) AND ((((((((((((t0.c3)OR(t0.c2)))OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(t0.c4)), ((t0.c2)AND(t0.c0)), ((t0.c3) BETWEEN (t0.c1) AND (x'')), CAST(t0.c0 AS TEXT)))) ASC, '-1279305933' COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c3 THEN t0.c2 ELSE t0.c2 END AS INTEGER)) ORDER BY (((t0.c0, t0.c3, 0X30fdb141, '1934950711')) NOT BETWEEN ((t0.c4, ((((((NULL)OR(-1982283490)))OR(t0.c2)))OR('^Al')), NULL, t0.c4 COLLATE NOCASE)) AND ((((((((((((t0.c3)OR(t0.c2)))OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(t0.c4)), ((t0.c2)AND(t0.c0)), ((t0.c3) BETWEEN (t0.c1) AND (x'')), CAST(t0.c0 AS TEXT)))) ASC, '-1279305933' COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c3 THEN t0.c2 ELSE t0.c2 END AS INTEGER)) ORDER BY (((t0.c0, t0.c3, 821932353, '1934950711')) NOT BETWEEN ((t0.c4, ((((((NULL)OR(0xffffffff89d8c11e)))OR(t0.c2)))OR('^Al')), NULL, t0.c4 COLLATE NOCASE)) AND ((((((((((((t0.c3)OR(t0.c2)))OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(t0.c4)), ((t0.c2)AND(t0.c0)), ((t0.c3) BETWEEN (t0.c1) AND (x'')), CAST(t0.c0 AS TEXT)))) ASC, '-1279305933' COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c2))) ORDER BY (((t0.c0, t0.c3, 821932353, '1934950711')) NOT BETWEEN ((t0.c4, ((((((NULL)OR(0xffffffff89d8c11e)))OR(t0.c2)))OR('^Al')), NULL, t0.c4 COLLATE NOCASE)) AND ((((((((((((t0.c3)OR(t0.c2)))OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(t0.c4)), ((t0.c2)AND(t0.c0)), ((t0.c3) BETWEEN (t0.c1) AND (x'')), CAST(t0.c0 AS TEXT)))) ASC, '-1279305933' COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((CAST(t0.c4 AS BLOB) IN ()));
SELECT DISTINCT * FROM t0 WHERE ((((CAST(t0.c4 AS BLOB) IN ()))AND(t0.c4))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) IS TRUE), ((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))AND(t0.c3)))AND(t0.c2)) COLLATE NOCASE DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((x'239013', t0.c3, t0.c3))<>((t0.c1, t0.c3, t0.c0))) COLLATE NOCASE) ORDER BY ((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) IS TRUE), ((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))AND(t0.c3)))AND(t0.c2)) COLLATE NOCASE DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM t0 WHERE ((CAST(t0.c4 AS BLOB) IN ()));
SELECT DISTINCT * FROM t0 WHERE ((((CAST(t0.c4 AS BLOB) IN ()))AND(t0.c4))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) IS TRUE), ((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))AND(t0.c3)))AND(t0.c2)) COLLATE NOCASE DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((x'239013', t0.c3, t0.c3))<>((t0.c1, t0.c3, t0.c0))) COLLATE NOCASE) ORDER BY ((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) IS TRUE), ((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))AND(t0.c3)))AND(t0.c2)) COLLATE NOCASE DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL MIN(rt1.c4) FROM rt1 WHERE ((((UNLIKELY(rt1.c2), (rt1.c0 IN ())))=((((rt1.c6)%(rt1.c2)), rt1.c6 COLLATE NOCASE))));
SELECT MIN(rt1.c4) FROM rt1 WHERE ((((((UNLIKELY(rt1.c2), (rt1.c0 IN ())))==((((rt1.c6)%(rt1.c2)), rt1.c6 COLLATE NOCASE))))AND(((x'01eec3') IS FALSE) COLLATE BINARY))) ORDER BY UNLIKELY(DISTINCT CAST(rt1.c5 AS TEXT));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4)>(rt1.c6))) BETWEEN (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c1))) AND (CASE WHEN rt1.c4 THEN rt1.c3 END)));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4)>(rt1.c6))) BETWEEN (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c1))) AND (CASE WHEN rt1.c4 THEN rt1.c3 END))) ORDER BY CASE WHEN (((rt1.c1, rt1.c4))<((rt1.c5, rt1.c5))) THEN ((rt1.c6)LIKE(rt1.c5)) ELSE (+ (rt1.c5)) END;
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(CAST(NULL AS BLOB) AS INTEGER));
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(CAST(NULL AS BLOB) AS INTEGER)) LIMIT 0x1 INTERSECT SELECT COUNT(*) FROM rt1, t0 WHERE ((CAST(t0.c3 AS BLOB) IN (LOWER(rt1.c0)))) LIMIT 0x1;
SELECT ALL * FROM t0, rt1 WHERE (((((((t0.c3)AND(t0.c4)))AND(rt1.c2)))&(((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c4))))) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt1.c4)) NOTNULL)  NULLS FIRST, (((((rt1.c3)&(t0.c3))))>=((((t0.c4) ISNULL))))  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (((((((((t0.c3)AND(t0.c4)))AND(rt1.c2)))&(((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c4)))))AND((((((rt1.c1)%(t0.c0))))<((SUBSTR(t0.c1, NULL))))))) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt1.c4)) NOTNULL)  NULLS FIRST, (((((rt1.c3)&(t0.c3))))>=((((t0.c4) ISNULL))))  NULLS FIRST INTERSECT SELECT * FROM t0, rt1 WHERE (rt1.c5) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt1.c4)) NOTNULL)  NULLS FIRST, (((((rt1.c3)&(t0.c3))))>=((((t0.c4) ISNULL))))  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (((((((t0.c3)AND(t0.c4)))AND(rt1.c2)))&(((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c4))))) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt1.c4)) NOTNULL)  NULLS FIRST, (((((rt1.c3)&(t0.c3))))>=((((t0.c4) ISNULL))))  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (((((((((t0.c3)AND(t0.c4)))AND(rt1.c2)))&(((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c4)))))AND((((((rt1.c1)%(t0.c0))))<((SUBSTR(t0.c1, NULL))))))) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt1.c4)) NOTNULL)  NULLS FIRST, (((((rt1.c3)&(t0.c3))))>=((((t0.c4) ISNULL))))  NULLS FIRST INTERSECT SELECT * FROM t0, rt1 WHERE (rt1.c5) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt1.c4)) NOTNULL)  NULLS FIRST, (((((rt1.c3)&(t0.c3))))>=((((t0.c4) ISNULL))))  NULLS FIRST;
SELECT MIN(rt1.c2) FROM t0, rt1 WHERE ((('0.6177400951061373')!=(TYPEOF(t0.c3))));
SELECT ALL MIN(rt1.c2) FROM t0, rt1 WHERE ((((('0.6177400951061373')>(TYPEOF(t0.c3))))AND(rt1.c5))) LIMIT 0;
SELECT * FROM t0, rt1 WHERE (((CASE t0.c3  WHEN rt1.c3 THEN rt1.c1 END) IS TRUE));
SELECT ALL * FROM t0, rt1 WHERE (((CASE t0.c3  WHEN rt1.c3 THEN rt1.c1 END) IS TRUE)) INTERSECT SELECT * FROM t0, rt1 WHERE (CASE CAST('292240954' AS REAL)  WHEN (+ (rt1.c5)) THEN t0.c2 COLLATE RTRIM WHEN (+ (x'3285d18e4b')) THEN ((rt1.c0) IS FALSE) END);
SELECT * FROM t0, rt1 WHERE (((CASE t0.c3  WHEN rt1.c3 THEN rt1.c1 END) IS TRUE));
SELECT ALL * FROM t0, rt1 WHERE (((CASE t0.c3  WHEN rt1.c3 THEN rt1.c1 END) IS TRUE)) INTERSECT SELECT * FROM t0, rt1 WHERE (CASE CAST('292240954' AS REAL)  WHEN (+ (rt1.c5)) THEN t0.c2 COLLATE RTRIM WHEN (+ (x'3285d18e4b')) THEN ((rt1.c0) IS FALSE) END);
SELECT ALL MAX(rt1.c5) FROM rt1, t0 WHERE (CAST(((t0.c1)>=(t0.c4)) AS BLOB));
SELECT MAX(rt1.c5) FROM rt1, t0 WHERE (CAST(((t0.c1)=(t0.c4)) AS BLOB)) ORDER BY CASE WHEN (t0.c3 IN (rt1.c3, rt1.c5)) THEN CAST(x'b7' AS INTEGER) WHEN 2102086614 THEN CAST(rt1.c4 AS TEXT) END, CASE CAST(rt1.c4 AS INTEGER)  WHEN CAST(0x2559a5c2 AS NUMERIC) THEN CAST(rt1.c4 AS NUMERIC) WHEN t0.c2 THEN ((t0.c3)IS NOT(rt1.c5)) WHEN ((((((rt1.c2)AND(t0.c2)))AND(t0.c1)))OR(t0.c1)) THEN ((t0.c4)AND(t0.c3)) WHEN IFNULL(rt1.c1, rt1.c5) THEN HEX(rt1.c2) WHEN x'60ed7b' THEN ((t0.c4) NOT NULL) END, CAST(((t0.c4)LIKE(rt1.c6)) AS BLOB) ASC LIMIT 0;
SELECT * FROM t0 WHERE (((0.7105128666034984)IS NOT(0.019691385719714405)));
SELECT * FROM t0 WHERE (((((0.7105128666034984)IS NOT(0.019691385719714405)))AND(((t0.c0 COLLATE RTRIM)<>(x''))))) ORDER BY ((((0.2036592873176053)OR(json_patch(x'', t0.c4))))AND((((t0.c4))!=((t0.c1))))), ((CASE WHEN t0.c4 THEN t0.c1 WHEN NULL THEN t0.c1 WHEN '-226271228' THEN t0.c2 END)>(((((((((((t0.c0)AND(t0.c2)))AND(t0.c2)))OR(t0.c4)))OR(t0.c3)))AND(t0.c0)))) ASC, ((((t0.c1) BETWEEN (t0.c2) AND (t0.c3))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (t0.c2))  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN (((((t0.c1)OR(t0.c3)))AND(t0.c1))) AND (((((((((((((NULL)OR(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))OR(t0.c0)))OR(t0.c1))))) ORDER BY ((((0.2036592873176053)OR(json_patch(x'', t0.c4))))AND((((t0.c4))<>((t0.c1))))), ((CASE WHEN t0.c4 THEN t0.c1 WHEN NULL THEN t0.c1 WHEN '-226271228' THEN t0.c2 END)>(((((((((((t0.c0)AND(t0.c2)))AND(t0.c2)))OR(t0.c4)))OR(t0.c3)))AND(t0.c0)))) ASC, ((((t0.c1) BETWEEN (t0.c2) AND (t0.c3))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (t0.c2))  NULLS LAST LIMIT 0x1;
SELECT * FROM t0 WHERE (((0.7105128666034984)IS NOT(0.019691385719714405)));
SELECT * FROM t0 WHERE (((((0.7105128666034984)IS NOT(0.019691385719714405)))AND(((t0.c0 COLLATE RTRIM)<>(x''))))) ORDER BY ((((0.2036592873176053)OR(json_patch(x'', t0.c4))))AND((((t0.c4))!=((t0.c1))))), ((CASE WHEN t0.c4 THEN t0.c1 WHEN NULL THEN t0.c1 WHEN '-226271228' THEN t0.c2 END)>(((((((((((t0.c0)AND(t0.c2)))AND(t0.c2)))OR(t0.c4)))OR(t0.c3)))AND(t0.c0)))) ASC, ((((t0.c1) BETWEEN (t0.c2) AND (t0.c3))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (t0.c2))  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN (((((t0.c1)OR(t0.c3)))AND(t0.c1))) AND (((((((((((((NULL)OR(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))OR(t0.c0)))OR(t0.c1))))) ORDER BY ((((0.2036592873176053)OR(json_patch(x'', t0.c4))))AND((((t0.c4))<>((t0.c1))))), ((CASE WHEN t0.c4 THEN t0.c1 WHEN NULL THEN t0.c1 WHEN '-226271228' THEN t0.c2 END)>(((((((((((t0.c0)AND(t0.c2)))AND(t0.c2)))OR(t0.c4)))OR(t0.c3)))AND(t0.c0)))) ASC, ((((t0.c1) BETWEEN (t0.c2) AND (t0.c3))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (t0.c2))  NULLS LAST LIMIT 0x1;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CAST(t0.c3 AS TEXT) COLLATE NOCASE);
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (CAST(t0.c3 AS TEXT) COLLATE NOCASE) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((NOT ((~ (t0.c1))))) LIMIT 0x0;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((rt1.c1)||((((rt1.c1))>=((rt1.c5)))))) ORDER BY rt1.c0 ASC  NULLS FIRST, (CASE rt1.c3  WHEN rt1.c1 THEN x'84' WHEN rt1.c4 THEN rt1.c3 ELSE t0.c3 END IN ((((t0.c1))>((t0.c0))), ((t0.c4)IS NOT(0.6822560094291538))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0 WHERE (((((rt1.c1)||((((rt1.c1))>=((rt1.c5))))))AND(CAST(t0.c1 AS INTEGER) COLLATE BINARY))) ORDER BY rt1.c0 ASC  NULLS FIRST, (CASE rt1.c3  WHEN rt1.c1 THEN x'84' WHEN rt1.c4 THEN rt1.c3 ELSE t0.c3 END IN ((((t0.c1))>((t0.c0))), ((t0.c4)IS NOT(0.6822560094291538))))  NULLS LAST;
SELECT MAX(rt1.c0) FROM rt1 WHERE (rt1.c0);
SELECT DISTINCT MAX(rt1.c0) FROM rt1 WHERE (((rt1.c0)AND((((rt1.c5 IN (rt1.c6)))=(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN 0Xffffffffd687049a THEN rt1.c1 END))))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt1.c0) FROM rt1 WHERE (rt1.c5) LIMIT 0x0;
SELECT ALL MIN(rt1.c0) FROM rt1 WHERE ((+ (CAST(rt1.c3 AS BLOB)))) ORDER BY CAST(NULL COLLATE BINARY AS BLOB);
SELECT ALL MIN(rt1.c0) FROM rt1 WHERE ((+ (CAST(rt1.c3 AS BLOB)))) ORDER BY (((x'92af9c', rt1.c4))<=((rt1.c4, rt1.c1))) COLLATE NOCASE COLLATE RTRIM, (((((rt1.c6)+(rt1.c3))))!=((rt1.c3))) LIMIT 0X0 INTERSECT SELECT ALL MIN(rt1.c0) FROM rt1 NOT INDEXED WHERE (INSTR('9䣒㌍n', ('k.''P镙Uog' IN (rt1.c3)))) ORDER BY (((x'92af9c', rt1.c4))<=((rt1.c4, rt1.c1))) COLLATE NOCASE COLLATE RTRIM, (((((rt1.c6)+(rt1.c3))))<>((rt1.c3))) LIMIT 0;
SELECT ALL * FROM rt1 WHERE (rtreenode(rt1.c0, CAST(rt1.c2 AS NUMERIC)));
SELECT ALL * FROM rt1 WHERE (((rtreenode(rt1.c0, CAST(rt1.c2 AS NUMERIC)))AND(CAST(((rt1.c2)=(rt1.c0)) AS REAL))));
SELECT ALL * FROM rt1 WHERE (rtreenode(rt1.c0, CAST(rt1.c2 AS NUMERIC)));
SELECT ALL * FROM rt1 WHERE (((rtreenode(rt1.c0, CAST(rt1.c2 AS NUMERIC)))AND(CAST(((rt1.c2)=(rt1.c0)) AS REAL))));
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT DISTINCT * FROM rt1 WHERE (rt1.c2) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN 1.787676078E9 COLLATE BINARY THEN ((rt1.c0)>>(2015583807)) WHEN (NULL IN (rt1.c3)) THEN rt1.c4 COLLATE RTRIM END) LIMIT 0;
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT DISTINCT * FROM rt1 WHERE (rt1.c2) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN 1.787676078E9 COLLATE BINARY THEN ((rt1.c0)>>(2015583807)) WHEN (NULL IN (rt1.c3)) THEN rt1.c4 COLLATE RTRIM END) LIMIT 0;
SELECT ALL MAX(rt1.c5) FROM t0, rt1 WHERE (rt1.c1);
SELECT DISTINCT MAX(rt1.c5) FROM t0, rt1 WHERE (rt1.c1) ORDER BY (((((((rt1.c5 IN ()))OR(LENGTH(t0.c2))))OR(((t0.c2)LIKE(rt1.c0)))))OR((~ (rt1.c5)))) LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(rt1.c5) FROM t0, rt1 WHERE ((+ (((t0.c1)||(rt1.c3))))) ORDER BY (((((((rt1.c5 IN ()))OR(LENGTH(t0.c2))))OR(((t0.c2)LIKE(rt1.c0)))))OR((~ (rt1.c5)))) LIMIT 0X1;
SELECT * FROM rt1, t0 WHERE (-1191521787);
SELECT DISTINCT * FROM rt1, t0 WHERE (((0Xffffffffb8fad205)AND(CAST(((t0.c1) IS TRUE) AS NUMERIC)))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(t0.c1 AS BLOB))<(((rt1.c6) NOT NULL)))) LIMIT 0X2;
SELECT * FROM rt1, t0 WHERE (-1191521787);
SELECT DISTINCT * FROM rt1, t0 WHERE (((0Xffffffffb8fad205)AND(CAST(((t0.c1) IS TRUE) AS NUMERIC)))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(t0.c1 AS BLOB))<(((rt1.c6) NOT NULL)))) LIMIT 0X2;
SELECT * FROM t0, rt1 WHERE (t0.c1);
SELECT DISTINCT * FROM t0, rt1 WHERE (((t0.c1)AND((((- (rt1.c3)))==((((0x4e876105))>=((t0.c4)))))))) LIMIT 0x1;
SELECT * FROM t0, rt1 WHERE (t0.c1);
SELECT DISTINCT * FROM t0, rt1 WHERE (((t0.c1)AND((((- (rt1.c3)))==((((0x4e876105))>=((t0.c4)))))))) LIMIT 0x1;
SELECT ALL MIN(rt1.c4) FROM rt1, t0 WHERE (((((t0.c4)LIKE(rt1.c4)))LIKE(((t0.c0)LIKE(rt1.c5))))) ORDER BY (((NOT (t0.c1)))>=(((t0.c0)!=(rt1.c2)))) DESC, ((-626221828)&((- (t0.c0))));
SELECT ALL MIN(rt1.c4) FROM rt1, t0 WHERE (((((((t0.c4)LIKE(rt1.c4)))LIKE(((t0.c0)LIKE(rt1.c5)))))AND((((x'')GLOB(rt1.c1)) IN (((x'') NOT NULL)))))) ORDER BY (((NOT (t0.c1)))>=(((t0.c0)!=(rt1.c2)))) DESC, ((-626221828)&((- (t0.c0)))) LIMIT 1 INTERSECT SELECT ALL MIN(rt1.c4) FROM rt1, t0 WHERE (CAST(CASE WHEN NULL THEN rt1.c6 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN t0.c4 WHEN t0.c3 THEN rt1.c5 END AS TEXT)) ORDER BY (((NOT (t0.c1)))>=(((t0.c0)!=(rt1.c2)))) DESC, ((-626221828)&((- (t0.c0)))) LIMIT 1;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((rt1.c2)IS(NULL))) NOT BETWEEN (((rt1.c3) IS FALSE)) AND (rt1.c2 COLLATE NOCASE))) ORDER BY ((((rt1.c6) NOT BETWEEN (rt1.c4) AND (rt1.c5))) BETWEEN (CASE WHEN t0.c0 THEN rt1.c2 WHEN rt1.c5 THEN t0.c1 END) AND (rt1.c6 COLLATE NOCASE));
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c2)IS(NULL))) NOT BETWEEN (((rt1.c3) IS FALSE)) AND (rt1.c2 COLLATE NOCASE)))AND(((t0.c0)GLOB(t0.c1)) COLLATE NOCASE))) ORDER BY (((((t0.c3) BETWEEN (rt1.c5) AND (rt1.c2))))<((((NULL)IS NOT(t0.c0)))))  NULLS FIRST, ((((rt1.c1)IS NOT(rt1.c0))) ISNULL)  NULLS LAST LIMIT 1;
SELECT ALL MIN(t0.c2) FROM rt1 INNER JOIN t0 ON ((NULL)>>('Th#odtZV')) COLLATE NOCASE WHERE (t0.c1) ORDER BY (+ ((('1239046975')>=(rt1.c5))))  NULLS LAST;
SELECT DISTINCT MIN(t0.c2) FROM rt1 INNER JOIN t0 ON ((NULL)>>('Th#odtZV')) COLLATE NOCASE WHERE (((t0.c1)AND((+ (CASE WHEN 0.025242432998602293 THEN t0.c0 END))))) ORDER BY ((((rt1.c4)LIKE(t0.c1)))*(CAST(rt1.c5 AS BLOB))) DESC INTERSECT SELECT DISTINCT MIN(t0.c2) FROM rt1 INNER JOIN t0 ON ((NULL)>>('Th#odtZV')) COLLATE NOCASE WHERE (CASE WHEN (rt1.c2 IN (rt1.c2, rt1.c5)) THEN ((rt1.c0) NOT BETWEEN (t0.c1) AND (NULL)) END) ORDER BY ((((rt1.c4)LIKE(t0.c1)))*(CAST(rt1.c5 AS BLOB))) DESC;
SELECT MIN(rt1.c6) FROM rt1 WHERE (CASE (((rt1.c4, rt1.c1, rt1.c1, -1819502163, 0.9324586681158179, '1787676078')) NOT BETWEEN ((rt1.c2, NULL, rt1.c2, rt1.c3, rt1.c0, rt1.c6)) AND ((rt1.c0, rt1.c3, rt1.c1, rt1.c3, rt1.c1, rt1.c2)))  WHEN (((0.6683732087050873)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1))) THEN rt1.c4 WHEN rt1.c6 THEN rt1.c3 WHEN (((rt1.c6, rt1.c5, rt1.c6)) BETWEEN ((rt1.c3, rt1.c0, rt1.c6)) AND ((rt1.c4, -1675530015, rt1.c4))) THEN ((rt1.c2) IS FALSE) END);
SELECT MIN(rt1.c6) FROM rt1 WHERE (CASE (((rt1.c4, rt1.c1, rt1.c1, -1819502163, 0.9324586681158179, '1787676078')) NOT BETWEEN ((rt1.c2, NULL, rt1.c2, rt1.c3, rt1.c0, rt1.c6)) AND ((rt1.c0, rt1.c3, rt1.c1, rt1.c3, rt1.c1, rt1.c2)))  WHEN (((0.6683732087050873)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1))) THEN rt1.c4 WHEN rt1.c6 THEN rt1.c3 WHEN (((rt1.c6, rt1.c5, rt1.c6)) BETWEEN ((rt1.c3, rt1.c0, rt1.c6)) AND ((rt1.c4, -1675530015, rt1.c4))) THEN ((rt1.c2) IS FALSE) END) ORDER BY (((((rt1.c2, rt1.c1, rt1.c5)) BETWEEN (('P吸', rt1.c2, rt1.c3)) AND ((rt1.c1, rt1.c3, rt1.c2))))<<(rt1.c5)) ASC;
SELECT MIN(t0.c1) FROM rt1, t0 WHERE (x'');
SELECT MIN(t0.c1) FROM rt1, t0 WHERE (((x'')AND(rt1.c6))) ORDER BY t0.c3 ASC  NULLS LAST, CAST(rt1.c3 COLLATE NOCASE AS TEXT) ASC  NULLS LAST INTERSECT SELECT ALL MIN(t0.c1) FROM rt1, t0 WHERE (((((rt1.c4) IS TRUE))+((((t0.c3))<((t0.c3)))))) ORDER BY t0.c3 ASC  NULLS LAST, CAST(rt1.c3 COLLATE NOCASE AS TEXT) ASC  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (((NULL)&(((t0.c0) BETWEEN (t0.c2) AND (rt1.c1)))));
SELECT ALL * FROM rt1, t0 WHERE (((((NULL)&(((t0.c0) BETWEEN (t0.c2) AND (rt1.c1)))))AND(CASE CAST('i3Ej' AS REAL)  WHEN ((((((((rt1.c1)OR(t0.c4)))AND('1495654109')))OR(t0.c3)))AND(rt1.c3)) THEN x'22dff9' ELSE rt1.c2 END))) LIMIT 0X0;
SELECT * FROM rt1, t0 WHERE (((NULL)&(((t0.c0) BETWEEN (t0.c2) AND (rt1.c1)))));
SELECT ALL * FROM rt1, t0 WHERE (((((NULL)&(((t0.c0) BETWEEN (t0.c2) AND (rt1.c1)))))AND(CASE CAST('i3Ej' AS REAL)  WHEN ((((((((rt1.c1)OR(t0.c4)))AND('1495654109')))OR(t0.c3)))AND(rt1.c3)) THEN x'22dff9' ELSE rt1.c2 END))) LIMIT 0X0;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((('')OR(((t0.c3) NOT NULL))))AND(((t0.c2)|(622808488)))))AND(((t0.c0)%(t0.c2)))))AND(t0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((('')OR(((t0.c3) NOT NULL))))AND(((t0.c2)|(622808488)))))AND(((t0.c0)%(t0.c2)))))AND(t0.c1 COLLATE BINARY)))AND(((((t0.c1)-(t0.c0))) ISNULL))));
SELECT * FROM rt1 WHERE ((((((rt1.c6, rt1.c1)) BETWEEN ((rt1.c2, rt1.c6)) AND ((rt1.c4, rt1.c6)))) NOTNULL));
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c6, rt1.c1)) BETWEEN ((rt1.c2, rt1.c6)) AND ((rt1.c4, rt1.c6)))) NOTNULL)) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((rt1.c0 COLLATE BINARY)IS(CAST(rt1.c0 AS REAL))));
SELECT * FROM rt1 WHERE ((((((rt1.c6, rt1.c1)) BETWEEN ((rt1.c2, rt1.c6)) AND ((rt1.c4, rt1.c6)))) NOTNULL));
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c6, rt1.c1)) BETWEEN ((rt1.c2, rt1.c6)) AND ((rt1.c4, rt1.c6)))) NOTNULL)) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((rt1.c0 COLLATE BINARY)IS(CAST(rt1.c0 AS REAL))));
SELECT ALL MIN(rt1.c0) FROM t0, rt1 WHERE (CAST((t0.c4 IN (t0.c1, t0.c3)) AS NUMERIC));
SELECT ALL MIN(rt1.c0) FROM t0, rt1 WHERE (CAST((t0.c4 IN (t0.c1, t0.c3)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED NATURAL JOIN t0 WHERE ((((t0.c1 COLLATE NOCASE, rt1.c4 COLLATE RTRIM))>((x'', (((rt1.c4, rt1.c3)) NOT BETWEEN ((rt1.c1, rt1.c4)) AND ((rt1.c5, t0.c0)))))));
SELECT DISTINCT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE ((((((t0.c1 COLLATE NOCASE, rt1.c4 COLLATE RTRIM))>((x'', (((rt1.c4, rt1.c3)) NOT BETWEEN ((rt1.c1, rt1.c4)) AND ((rt1.c5, t0.c0)))))))AND(((CASE t0.c4  WHEN rt1.c6 THEN t0.c0 WHEN t0.c4 THEN rt1.c6 ELSE rt1.c1 END) NOT BETWEEN (((t0.c3)&(t0.c3))) AND (((rt1.c0) BETWEEN (t0.c1) AND (rt1.c1))))))) ORDER BY (~ ((NOT (t0.c2))))  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (((((((('-633651308')AND(t0.c1)))OR(rt1.c1))))<>((CAST(t0.c3 AS BLOB))))) ORDER BY (((rt1.c0, rt1.c0)) NOT BETWEEN ((TYPEOF(t0.c2), ((((rt1.c6)AND(rt1.c4)))AND(rt1.c1)))) AND ((((rt1.c3)AND(rt1.c5)), ((t0.c3)%(t0.c3))))) ASC  NULLS LAST, CAST(rt1.c0 AS BLOB) ASC;
SELECT ALL * FROM t0, rt1 WHERE (((((((((('-633651308')AND(t0.c1)))OR(rt1.c1))))>((CAST(t0.c3 AS BLOB)))))AND((- ((~ (rt1.c1))))))) ORDER BY (((rt1.c0, rt1.c0)) NOT BETWEEN ((TYPEOF(t0.c2), ((((rt1.c6)AND(rt1.c4)))AND(rt1.c1)))) AND ((((rt1.c3)AND(rt1.c5)), ((t0.c3)%(t0.c3))))) ASC  NULLS LAST, CAST(rt1.c0 AS BLOB) ASC LIMIT 2;
SELECT * FROM t0, rt1 WHERE (((((((('-633651308')AND(t0.c1)))OR(rt1.c1))))<>((CAST(t0.c3 AS BLOB))))) ORDER BY (((rt1.c0, rt1.c0)) NOT BETWEEN ((TYPEOF(t0.c2), ((((rt1.c6)AND(rt1.c4)))AND(rt1.c1)))) AND ((((rt1.c3)AND(rt1.c5)), ((t0.c3)%(t0.c3))))) ASC  NULLS LAST, CAST(rt1.c0 AS BLOB) ASC;
SELECT ALL * FROM t0, rt1 WHERE (((((((((('-633651308')AND(t0.c1)))OR(rt1.c1))))>((CAST(t0.c3 AS BLOB)))))AND((- ((~ (rt1.c1))))))) ORDER BY (((rt1.c0, rt1.c0)) NOT BETWEEN ((TYPEOF(t0.c2), ((((rt1.c6)AND(rt1.c4)))AND(rt1.c1)))) AND ((((rt1.c3)AND(rt1.c5)), ((t0.c3)%(t0.c3))))) ASC  NULLS LAST, CAST(rt1.c0 AS BLOB) ASC LIMIT 2;
SELECT MIN(t0.c4) FROM rt1, t0 WHERE ((((rt1.c6 IN ())) NOT BETWEEN ((-1.908681393E9 IN (NULL))) AND (CASE WHEN rt1.c5 THEN t0.c0 END))) ORDER BY t0.c2, ((0.6583298261585239) ISNULL) ASC, (((CASE t0.c0  WHEN t0.c4 THEN t0.c2 END))<>((((t0.c3) NOTNULL)))) ASC;
SELECT DISTINCT MIN(t0.c4) FROM rt1, t0 WHERE ((((((rt1.c6 IN ())) NOT BETWEEN ((-1.908681393E9 IN (NULL))) AND (CASE WHEN rt1.c5 THEN t0.c0 END)))AND(rt1.c6))) ORDER BY t0.c2, ((0.6583298261585239) ISNULL) ASC, (((CASE t0.c0  WHEN t0.c4 THEN t0.c2 END))!=((((t0.c3) NOTNULL)))) ASC;
SELECT ALL * FROM t0, rt1 WHERE (CAST((NULL IN (t0.c1)) AS NUMERIC)) ORDER BY ((((' HVꦣi')OR(CAST(rt1.c0 AS TEXT))))OR(rt1.c1 COLLATE NOCASE)) DESC, CASE WHEN ((((((rt1.c0)OR(t0.c3)))OR(rt1.c2)))OR(rt1.c2)) THEN (t0.c4 IN ()) ELSE CASE t0.c4  WHEN rt1.c4 THEN t0.c4 WHEN -180735253 THEN 0.403958595651264 END END  NULLS FIRST, CAST(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) AS REAL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST((NULL IN (t0.c1)) AS NUMERIC))AND(((CASE rt1.c4  WHEN t0.c4 THEN t0.c4 WHEN rt1.c0 THEN t0.c1 END)IS NOT(x'7f'))))) ORDER BY ((((' HVꦣi')OR(CAST(rt1.c0 AS TEXT))))OR(rt1.c1 COLLATE NOCASE)) DESC, CASE WHEN ((((((rt1.c0)OR(t0.c3)))OR(rt1.c2)))OR(rt1.c2)) THEN (t0.c4 IN ()) ELSE CASE t0.c4  WHEN rt1.c4 THEN t0.c4 WHEN -180735253 THEN 0.403958595651264 END END  NULLS FIRST, CAST(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) AS REAL) DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t0, rt1 WHERE (CAST((NULL IN (t0.c1)) AS NUMERIC)) ORDER BY ((((' HVꦣi')OR(CAST(rt1.c0 AS TEXT))))OR(rt1.c1 COLLATE NOCASE)) DESC, CASE WHEN ((((((rt1.c0)OR(t0.c3)))OR(rt1.c2)))OR(rt1.c2)) THEN (t0.c4 IN ()) ELSE CASE t0.c4  WHEN rt1.c4 THEN t0.c4 WHEN -180735253 THEN 0.403958595651264 END END  NULLS FIRST, CAST(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) AS REAL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST((NULL IN (t0.c1)) AS NUMERIC))AND(((CASE rt1.c4  WHEN t0.c4 THEN t0.c4 WHEN rt1.c0 THEN t0.c1 END)IS NOT(x'7f'))))) ORDER BY ((((' HVꦣi')OR(CAST(rt1.c0 AS TEXT))))OR(rt1.c1 COLLATE NOCASE)) DESC, CASE WHEN ((((((rt1.c0)OR(t0.c3)))OR(rt1.c2)))OR(rt1.c2)) THEN (t0.c4 IN ()) ELSE CASE t0.c4  WHEN rt1.c4 THEN t0.c4 WHEN -180735253 THEN 0.403958595651264 END END  NULLS FIRST, CAST(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) AS REAL) DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM rt1 WHERE ('2030092113' COLLATE RTRIM);
SELECT DISTINCT * FROM rt1 WHERE ('2030092113' COLLATE RTRIM) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (rt1.c5);
SELECT ALL * FROM rt1 WHERE ('2030092113' COLLATE RTRIM);
SELECT DISTINCT * FROM rt1 WHERE ('2030092113' COLLATE RTRIM) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (rt1.c5);
SELECT MAX(t0.c4) FROM t0 WHERE (((t0.c4) NOT NULL) COLLATE RTRIM);
SELECT MAX(t0.c4) FROM t0 WHERE (((((t0.c4) NOT NULL) COLLATE RTRIM)AND(((- (t0.c1)) IN ())))) ORDER BY ((((t0.c1) IS FALSE)) BETWEEN (CASE WHEN t0.c1 THEN t0.c3 WHEN t0.c4 THEN t0.c3 ELSE t0.c4 END) AND (((t0.c3) IS FALSE))) ASC  NULLS LAST, ((((((((((((t0.c3)OR(t0.c2)))OR(t0.c2)))OR(t0.c2)))OR(t0.c2)))OR(0.153993710766271)))AND(t0.c3)) COLLATE RTRIM ASC, (((((t0.c1, t0.c3, t0.c1))<((t0.c1, t0.c0, t0.c3)))) NOT BETWEEN ((((t0.c0, ''' |')) BETWEEN ((t0.c0, t0.c2)) AND ((t0.c3, t0.c4)))) AND (((0.385102292975251)-(t0.c0)))) DESC  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0, rt1 WHERE (((rt1.c5) NOTNULL) COLLATE BINARY COLLATE NOCASE) ORDER BY (~ (((t0.c0)IS(t0.c2)))), CASE ((rt1.c3) ISNULL)  WHEN ((((t0.c2)AND(0.4816125648435905)))OR(t0.c2)) THEN rt1.c4 COLLATE NOCASE WHEN ((t0.c0) NOT NULL) THEN ((t0.c4)!=(rt1.c2)) WHEN ((((((rt1.c4)OR(t0.c0)))OR(t0.c2)))AND(t0.c1)) THEN CASE rt1.c2  WHEN t0.c1 THEN x'' WHEN t0.c1 THEN rt1.c5 WHEN t0.c1 THEN rt1.c5 ELSE rt1.c3 END END ASC;
SELECT DISTINCT MIN(t0.c0) FROM t0, rt1 WHERE (((rt1.c5) NOTNULL) COLLATE BINARY COLLATE NOCASE) ORDER BY 'ꪞx&{' DESC  NULLS LAST, ((((((((((((((((rt1.c4)OR(t0.c3)))OR(t0.c0)))AND(rt1.c5)))AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c4)))OR(((rt1.c2)+(t0.c2)))))AND(((rt1.c3) BETWEEN (t0.c3) AND (rt1.c0))))  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM rt1 WHERE ((('-226271228')IS(CASE WHEN rt1.c5 THEN rt1.c4 END))) ORDER BY LTRIM(rt1.c4) ASC, rt1.c4  NULLS LAST;
SELECT * FROM rt1 WHERE ((('-226271228')IS(CASE WHEN rt1.c5 THEN rt1.c4 END))) ORDER BY ((((((((((((IFNULL(x'74', rt1.c5))AND(((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c0)))))AND(((((((rt1.c4)AND(rt1.c6)))OR(rt1.c1)))AND(rt1.c3)))))OR(rt1.c1 COLLATE NOCASE)))AND(((rt1.c5)=(rt1.c4)))))AND(((rt1.c2)/(rt1.c3)))))OR(NULLIF(NULL, rt1.c1))) ASC  NULLS FIRST, ((((rt1.c1)=(rt1.c2))) NOT BETWEEN (rt1.c3) AND (0.6088508550939677))  NULLS FIRST, ((((rt1.c1)==(rt1.c0)))>(-2.26271228E8 COLLATE NOCASE)) ASC INTERSECT SELECT * FROM rt1 WHERE ((((((((rt1.c2)AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c2)) IN (((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c6)), rt1.c2 COLLATE RTRIM))) ORDER BY ((((((((((((IFNULL(x'74', rt1.c5))AND(((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c0)))))AND(((((((rt1.c4)AND(rt1.c6)))OR(rt1.c1)))AND(rt1.c3)))))OR(rt1.c1 COLLATE NOCASE)))AND(((rt1.c5)=(rt1.c4)))))AND(((rt1.c2)/(rt1.c3)))))OR(NULLIF(NULL, rt1.c1))) ASC  NULLS FIRST, ((((rt1.c1)=(rt1.c2))) NOT BETWEEN (rt1.c3) AND (0.6088508550939677))  NULLS FIRST, ((((rt1.c1)==(rt1.c0)))>(-2.26271228E8 COLLATE NOCASE)) ASC;
SELECT ALL * FROM rt1 WHERE ((('-226271228')IS(CASE WHEN rt1.c5 THEN rt1.c4 END))) ORDER BY LTRIM(rt1.c4) ASC, rt1.c4  NULLS LAST;
SELECT * FROM rt1 WHERE ((('-226271228')IS(CASE WHEN rt1.c5 THEN rt1.c4 END))) ORDER BY ((((((((((((IFNULL(x'74', rt1.c5))AND(((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c0)))))AND(((((((rt1.c4)AND(rt1.c6)))OR(rt1.c1)))AND(rt1.c3)))))OR(rt1.c1 COLLATE NOCASE)))AND(((rt1.c5)=(rt1.c4)))))AND(((rt1.c2)/(rt1.c3)))))OR(NULLIF(NULL, rt1.c1))) ASC  NULLS FIRST, ((((rt1.c1)=(rt1.c2))) NOT BETWEEN (rt1.c3) AND (0.6088508550939677))  NULLS FIRST, ((((rt1.c1)==(rt1.c0)))>(-2.26271228E8 COLLATE NOCASE)) ASC INTERSECT SELECT * FROM rt1 WHERE ((((((((rt1.c2)AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c2)) IN (((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c6)), rt1.c2 COLLATE RTRIM))) ORDER BY ((((((((((((IFNULL(x'74', rt1.c5))AND(((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c0)))))AND(((((((rt1.c4)AND(rt1.c6)))OR(rt1.c1)))AND(rt1.c3)))))OR(rt1.c1 COLLATE NOCASE)))AND(((rt1.c5)=(rt1.c4)))))AND(((rt1.c2)/(rt1.c3)))))OR(NULLIF(NULL, rt1.c1))) ASC  NULLS FIRST, ((((rt1.c1)=(rt1.c2))) NOT BETWEEN (rt1.c3) AND (0.6088508550939677))  NULLS FIRST, ((((rt1.c1)==(rt1.c0)))>(-2.26271228E8 COLLATE NOCASE)) ASC;
SELECT ALL * FROM t0 WHERE ((- (t0.c3)) COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE ((((- (t0.c3)) COLLATE NOCASE)AND(((((t0.c1) BETWEEN (t0.c1) AND (t0.c4))) BETWEEN ((((''))>=((t0.c0)))) AND (((t0.c3) BETWEEN (0.9351794011381929) AND (t0.c3))))))) ORDER BY ((-1.125839889E9) BETWEEN (((t0.c0)*(t0.c1))) AND (((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c3)))) ASC;
SELECT ALL * FROM t0 WHERE ((- (t0.c3)) COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE ((((- (t0.c3)) COLLATE NOCASE)AND(((((t0.c1) BETWEEN (t0.c1) AND (t0.c4))) BETWEEN ((((''))>=((t0.c0)))) AND (((t0.c3) BETWEEN (0.9351794011381929) AND (t0.c3))))))) ORDER BY ((-1.125839889E9) BETWEEN (((t0.c0)*(t0.c1))) AND (((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c3)))) ASC;
SELECT COUNT(*) FROM t0, rt1 WHERE (((rt1.c1) IS TRUE)) ORDER BY ((CASE WHEN t0.c1 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c2 END)*(((t0.c2)%(t0.c4)))) DESC, CASE WHEN '*얮(rQpc' THEN ((t0.c4) NOTNULL) WHEN ((rt1.c6) IS FALSE) THEN ((NULL)<(rt1.c3)) WHEN ((((rt1.c1)OR(t0.c2)))AND(t0.c4)) THEN ((0.40637263660628686) NOT NULL) WHEN ((t0.c0)<=(rt1.c6)) THEN ((rt1.c1)GLOB(t0.c1)) WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c6 END THEN CASE t0.c3  WHEN t0.c4 THEN rt1.c3 ELSE rt1.c3 END ELSE (~ (rt1.c6)) END ASC;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c1) IS TRUE))AND(NULL))) ORDER BY ((CASE WHEN t0.c1 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c2 END)*(((t0.c2)%(t0.c4)))) DESC, CASE WHEN '*얮(rQpc' THEN ((t0.c4) NOTNULL) WHEN ((rt1.c6) IS FALSE) THEN ((NULL)<(rt1.c3)) WHEN ((((rt1.c1)OR(t0.c2)))AND(t0.c4)) THEN ((0.40637263660628686) NOT NULL) WHEN ((t0.c0)<=(rt1.c6)) THEN ((rt1.c1)GLOB(t0.c1)) WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c6 END THEN CASE t0.c3  WHEN t0.c4 THEN rt1.c3 ELSE rt1.c3 END ELSE (~ (rt1.c6)) END ASC LIMIT 0x1;
SELECT * FROM rt1, t0 WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN ((NOT (rt1.c4))) AND ((((t0.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c3)))))) ORDER BY CASE (((t0.c2, t0.c2, rt1.c0, NULL))<((rt1.c0, rt1.c2, t0.c1, rt1.c5)))  WHEN CAST(rt1.c0 AS NUMERIC) THEN x'23' COLLATE RTRIM WHEN ((t0.c2)GLOB(rt1.c2)) THEN ((t0.c2) BETWEEN (rt1.c0) AND (t0.c2)) END ASC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c2 COLLATE NOCASE) NOT BETWEEN ((NOT (rt1.c4))) AND ((((t0.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))))AND(((t0.c3) NOT BETWEEN ((((t0.c0, rt1.c0, rt1.c6, NULL, NULL))>=((rt1.c1, t0.c1, rt1.c4, rt1.c3, x'2c')))) AND ((- (0.660229331008775))))))) ORDER BY ((((t0.c4) NOTNULL))=(((t0.c1) ISNULL))) ASC, (((rt1.c3))>=((((rt1.c2)OR(rt1.c5))))) DESC, ((CAST(rt1.c6 AS TEXT)) NOT BETWEEN (((0.4374691492668886) IS FALSE)) AND (((rt1.c3)<=(rt1.c3)))) LIMIT 0X1;
SELECT * FROM rt1, t0 WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN ((NOT (rt1.c4))) AND ((((t0.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c3)))))) ORDER BY CASE (((t0.c2, t0.c2, rt1.c0, NULL))<((rt1.c0, rt1.c2, t0.c1, rt1.c5)))  WHEN CAST(rt1.c0 AS NUMERIC) THEN x'23' COLLATE RTRIM WHEN ((t0.c2)GLOB(rt1.c2)) THEN ((t0.c2) BETWEEN (rt1.c0) AND (t0.c2)) END ASC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c2 COLLATE NOCASE) NOT BETWEEN ((NOT (rt1.c4))) AND ((((t0.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))))AND(((t0.c3) NOT BETWEEN ((((t0.c0, rt1.c0, rt1.c6, NULL, NULL))>=((rt1.c1, t0.c1, rt1.c4, rt1.c3, x'2c')))) AND ((- (0.660229331008775))))))) ORDER BY ((((t0.c4) NOTNULL))=(((t0.c1) ISNULL))) ASC, (((rt1.c3))>=((((rt1.c2)OR(rt1.c5))))) DESC, ((CAST(rt1.c6 AS TEXT)) NOT BETWEEN (((0.4374691492668886) IS FALSE)) AND (((rt1.c3)<=(rt1.c3)))) LIMIT 0X1;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE WHEN ((x'7649')%(rt1.c5)) THEN (t0.c0 IN (rt1.c1)) END);
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((CASE WHEN ((x'7649')%(rt1.c5)) THEN (t0.c0 IN (rt1.c1)) END)AND(rt1.c5))) LIMIT 3;
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c6, rt1.c4, rt1.c1)) NOT BETWEEN ((CAST(rt1.c0 AS BLOB), (~ (t0.c0)), CAST(0.44034823782262433 AS INTEGER))) AND ((((((((t0.c3)OR(rt1.c0)))AND(t0.c4)))OR(0.02630565645593963)), ((rt1.c6) NOT BETWEEN (t0.c0) AND (rt1.c0)), ((rt1.c3)<>(rt1.c3)))))) ORDER BY (((((rt1.c3) IS TRUE)))!=((((rt1.c2)<=(t0.c3))))) ASC, ((rt1.c6)&(CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c4 END)) ASC, (((IFNULL(t0.c3, rt1.c5), ((rt1.c5) BETWEEN (rt1.c3) AND (x'32f7f9')), IFNULL(t0.c3, rt1.c0)))<=((((x'1d') BETWEEN (rt1.c5) AND (0.697018232718183)), rt1.c1 COLLATE NOCASE, (((0.6941679100747076, rt1.c3))>((t0.c4, rt1.c2)))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c6, rt1.c4, rt1.c1)) NOT BETWEEN ((CAST(rt1.c0 AS BLOB), (~ (t0.c0)), CAST(0.44034823782262433 AS INTEGER))) AND ((((((((t0.c3)OR(rt1.c0)))AND(t0.c4)))OR(0.02630565645593963)), ((rt1.c6) NOT BETWEEN (t0.c0) AND (rt1.c0)), ((rt1.c3)<>(rt1.c3)))))) ORDER BY (((((rt1.c3) IS TRUE)))!=((((rt1.c2)<=(t0.c3))))) ASC, ((rt1.c6)&(CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c4 END)) ASC, (((IFNULL(t0.c3, rt1.c5), ((rt1.c5) BETWEEN (rt1.c3) AND (x'32f7f9')), IFNULL(t0.c3, rt1.c0)))<=((((x'1d') BETWEEN (rt1.c5) AND (0.697018232718183)), rt1.c1 COLLATE NOCASE, (((0.6941679100747076, rt1.c3))>((t0.c4, rt1.c2)))))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CAST((((rt1.c5, rt1.c4))<=((rt1.c4, t0.c4))) AS BLOB)) ORDER BY (((((rt1.c3) IS TRUE)))<>((((rt1.c2)<=(t0.c3))))) ASC, ((rt1.c6)&(CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c4 END)) ASC, (((IFNULL(t0.c3, rt1.c5), ((rt1.c5) BETWEEN (rt1.c3) AND (x'32f7f9')), IFNULL(t0.c3, rt1.c0)))<=((((x'1d') BETWEEN (rt1.c5) AND (0.697018232718183)), rt1.c1 COLLATE NOCASE, (((0.6941679100747076, rt1.c3))>((t0.c4, rt1.c2)))))) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c6, rt1.c4, rt1.c1)) NOT BETWEEN ((CAST(rt1.c0 AS BLOB), (~ (t0.c0)), CAST(0.44034823782262433 AS INTEGER))) AND ((((((((t0.c3)OR(rt1.c0)))AND(t0.c4)))OR(0.02630565645593963)), ((rt1.c6) NOT BETWEEN (t0.c0) AND (rt1.c0)), ((rt1.c3)<>(rt1.c3)))))) ORDER BY (((((rt1.c3) IS TRUE)))!=((((rt1.c2)<=(t0.c3))))) ASC, ((rt1.c6)&(CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c4 END)) ASC, (((IFNULL(t0.c3, rt1.c5), ((rt1.c5) BETWEEN (rt1.c3) AND (x'32f7f9')), IFNULL(t0.c3, rt1.c0)))<=((((x'1d') BETWEEN (rt1.c5) AND (0.697018232718183)), rt1.c1 COLLATE NOCASE, (((0.6941679100747076, rt1.c3))>((t0.c4, rt1.c2)))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c6, rt1.c4, rt1.c1)) NOT BETWEEN ((CAST(rt1.c0 AS BLOB), (~ (t0.c0)), CAST(0.44034823782262433 AS INTEGER))) AND ((((((((t0.c3)OR(rt1.c0)))AND(t0.c4)))OR(0.02630565645593963)), ((rt1.c6) NOT BETWEEN (t0.c0) AND (rt1.c0)), ((rt1.c3)<>(rt1.c3)))))) ORDER BY (((((rt1.c3) IS TRUE)))!=((((rt1.c2)<=(t0.c3))))) ASC, ((rt1.c6)&(CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c4 END)) ASC, (((IFNULL(t0.c3, rt1.c5), ((rt1.c5) BETWEEN (rt1.c3) AND (x'32f7f9')), IFNULL(t0.c3, rt1.c0)))<=((((x'1d') BETWEEN (rt1.c5) AND (0.697018232718183)), rt1.c1 COLLATE NOCASE, (((0.6941679100747076, rt1.c3))>((t0.c4, rt1.c2)))))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CAST((((rt1.c5, rt1.c4))<=((rt1.c4, t0.c4))) AS BLOB)) ORDER BY (((((rt1.c3) IS TRUE)))<>((((rt1.c2)<=(t0.c3))))) ASC, ((rt1.c6)&(CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c4 END)) ASC, (((IFNULL(t0.c3, rt1.c5), ((rt1.c5) BETWEEN (rt1.c3) AND (x'32f7f9')), IFNULL(t0.c3, rt1.c0)))<=((((x'1d') BETWEEN (rt1.c5) AND (0.697018232718183)), rt1.c1 COLLATE NOCASE, (((0.6941679100747076, rt1.c3))>((t0.c4, rt1.c2)))))) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (((((t0.c4)/(t0.c3))) NOT BETWEEN (CASE rt1.c5  WHEN 0.6985388481215729 THEN t0.c2 END) AND (((rt1.c6) NOT BETWEEN (t0.c3) AND (t0.c0))))) ORDER BY ((rt1.c0 COLLATE BINARY) BETWEEN (((rt1.c0) NOT BETWEEN ('S9%IB~6v') AND (t0.c4))) AND (rt1.c4));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((t0.c4)/(t0.c3))) NOT BETWEEN (CASE rt1.c5  WHEN 0.6985388481215729 THEN t0.c2 END) AND (((rt1.c6) NOT BETWEEN (t0.c3) AND (t0.c0)))))AND(CASE WHEN ((rt1.c2) BETWEEN (rt1.c3) AND (t0.c4)) THEN ((t0.c4) BETWEEN (t0.c1) AND (rt1.c3)) WHEN (('f\rMhp')<(t0.c1)) THEN (~ (rt1.c3)) END))) ORDER BY ((rt1.c0 COLLATE BINARY) BETWEEN (((rt1.c0) NOT BETWEEN ('S9%IB~6v') AND (t0.c4))) AND (rt1.c4));
SELECT ALL * FROM t0, rt1 WHERE (((((t0.c4)/(t0.c3))) NOT BETWEEN (CASE rt1.c5  WHEN 0.6985388481215729 THEN t0.c2 END) AND (((rt1.c6) NOT BETWEEN (t0.c3) AND (t0.c0))))) ORDER BY ((rt1.c0 COLLATE BINARY) BETWEEN (((rt1.c0) NOT BETWEEN ('S9%IB~6v') AND (t0.c4))) AND (rt1.c4));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((t0.c4)/(t0.c3))) NOT BETWEEN (CASE rt1.c5  WHEN 0.6985388481215729 THEN t0.c2 END) AND (((rt1.c6) NOT BETWEEN (t0.c3) AND (t0.c0)))))AND(CASE WHEN ((rt1.c2) BETWEEN (rt1.c3) AND (t0.c4)) THEN ((t0.c4) BETWEEN (t0.c1) AND (rt1.c3)) WHEN (('f\rMhp')<(t0.c1)) THEN (~ (rt1.c3)) END))) ORDER BY ((rt1.c0 COLLATE BINARY) BETWEEN (((rt1.c0) NOT BETWEEN ('S9%IB~6v') AND (t0.c4))) AND (rt1.c4));
SELECT * FROM t0 WHERE ((((t0.c1) NOTNULL) IN (t0.c4 COLLATE BINARY))) ORDER BY ((t0.c3)+(CAST('' AS INTEGER))) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c1) NOTNULL) IN (t0.c4 COLLATE BINARY))) ORDER BY ((t0.c0)>>(t0.c2)) COLLATE NOCASE ASC  NULLS FIRST, 0Xffffffffe82afd67 COLLATE RTRIM ASC;
SELECT * FROM t0 WHERE ((((t0.c1) NOTNULL) IN (t0.c4 COLLATE BINARY))) ORDER BY ((t0.c3)+(CAST('' AS INTEGER))) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c1) NOTNULL) IN (t0.c4 COLLATE BINARY))) ORDER BY ((t0.c0)>>(t0.c2)) COLLATE NOCASE ASC  NULLS FIRST, 0Xffffffffe82afd67 COLLATE RTRIM ASC;
SELECT * FROM t0 WHERE ((((((((((('*')AND(t0.c3)))AND('-904110918')))OR(t0.c3)))AND(t0.c2)))<<(t0.c1)));
SELECT ALL * FROM t0 WHERE ((((((((((((('*')AND(t0.c3)))AND('-904110918')))OR(t0.c3)))AND(t0.c2)))<<(t0.c1)))AND(('&yP' IN (CAST(t0.c2 AS REAL)))))) LIMIT 3 INTERSECT SELECT * FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))%((t0.c3 IN ())))) LIMIT 3;
SELECT * FROM t0 WHERE ((((((((((('*')AND(t0.c3)))AND('-904110918')))OR(t0.c3)))AND(t0.c2)))<<(t0.c1)));
SELECT ALL * FROM t0 WHERE ((((((((((((('*')AND(t0.c3)))AND('-904110918')))OR(t0.c3)))AND(t0.c2)))<<(t0.c1)))AND(('&yP' IN (CAST(t0.c2 AS REAL)))))) LIMIT 3 INTERSECT SELECT * FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))%((t0.c3 IN ())))) LIMIT 3;
SELECT ALL * FROM rt1, t0 WHERE ((((((t0.c1))>(('nTfL'))))/(x'8e9c2ddfc9')));
SELECT ALL * FROM rt1, t0 WHERE ((((((t0.c1))>(('nTfL'))))/(x'8e9c2ddfc9'))) ORDER BY rt1.c1 DESC, rt1.c3 DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (json_array_length(((rt1.c4) IS FALSE), ((rt1.c0) NOTNULL))) ORDER BY rt1.c1 DESC, rt1.c3 DESC  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM rt1, t0 WHERE ((((((t0.c1))>(('nTfL'))))/(x'8e9c2ddfc9')));
SELECT ALL * FROM rt1, t0 WHERE ((((((t0.c1))>(('nTfL'))))/(x'8e9c2ddfc9'))) ORDER BY rt1.c1 DESC, rt1.c3 DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (json_array_length(((rt1.c4) IS FALSE), ((rt1.c0) NOTNULL))) ORDER BY rt1.c1 DESC, rt1.c3 DESC  NULLS FIRST LIMIT 0X2;
SELECT ALL COUNT(*) FROM t0 WHERE ((((NULL) BETWEEN (t0.c1) AND (t0.c1)) IN ((((t0.c1, t0.c3, t0.c0, t0.c2, t0.c1))<((t0.c2, 1.191777648E9, t0.c1, t0.c3, t0.c4))), NULL))) ORDER BY LTRIM(t0.c3, x'')  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((NULL) BETWEEN (t0.c1) AND (t0.c1)) IN ((((t0.c1, t0.c3, t0.c0, t0.c2, t0.c1))<((t0.c2, 1.191777648E9, t0.c1, t0.c3, t0.c4)))))) ORDER BY (NOT (((t0.c0)IS NOT(t0.c0))))  NULLS LAST;
SELECT MAX(rt1.c0) FROM rt1 WHERE ((((~ (rt1.c6)))<=(x'')));
SELECT DISTINCT MAX(rt1.c0) FROM rt1 WHERE ((((~ (rt1.c6)))<(x'')));
SELECT ALL * FROM rt1, t0 WHERE (((((((((((t0.c3) BETWEEN (t0.c0) AND (rt1.c2)))OR(((rt1.c2)%(rt1.c3)))))OR((+ (rt1.c2)))))AND((~ (rt1.c4)))))AND(rt1.c1)));
SELECT ALL * FROM rt1, t0 WHERE (((((((((((t0.c3) BETWEEN (t0.c0) AND (rt1.c2)))OR(((rt1.c2)%(rt1.c3)))))OR((+ (rt1.c2)))))AND((~ (rt1.c4)))))AND(rt1.c1)));
SELECT ALL * FROM rt1, t0 WHERE (((((((((((t0.c3) BETWEEN (t0.c0) AND (rt1.c2)))OR(((rt1.c2)%(rt1.c3)))))OR((+ (rt1.c2)))))AND((~ (rt1.c4)))))AND(rt1.c1)));
SELECT ALL * FROM rt1, t0 WHERE (((((((((((t0.c3) BETWEEN (t0.c0) AND (rt1.c2)))OR(((rt1.c2)%(rt1.c3)))))OR((+ (rt1.c2)))))AND((~ (rt1.c4)))))AND(rt1.c1)));
SELECT ALL * FROM rt1 WHERE (rt1.c4) ORDER BY (rt1.c4 COLLATE NOCASE IN (((rt1.c3)%(0.08141785920934441)))) DESC  NULLS FIRST, (((rt1.c3) ISNULL) IN (((rt1.c1) IS FALSE), (((rt1.c0, rt1.c6, rt1.c5, rt1.c1, rt1.c4)) BETWEEN ((rt1.c3, rt1.c4, rt1.c4, rt1.c2, rt1.c0)) AND ((0.6552609766115661, rt1.c4, rt1.c5, rt1.c5, rt1.c6))))) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c4)AND((rt1.c2 IN (rt1.c5)) COLLATE RTRIM))) ORDER BY (rt1.c4 COLLATE NOCASE IN (((rt1.c3)%(0.08141785920934441)))) DESC  NULLS FIRST, (((rt1.c3) ISNULL) IN (((rt1.c1) IS FALSE), (((rt1.c0, rt1.c6, rt1.c5, rt1.c1, rt1.c4)) BETWEEN ((rt1.c3, rt1.c4, rt1.c4, rt1.c2, rt1.c0)) AND ((0.6552609766115661, rt1.c4, rt1.c5, rt1.c5, rt1.c6))))) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c2, rt1.c5)) BETWEEN ((((NULL) BETWEEN (rt1.c4) AND (NULL)), ((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c5)))) AND ((((((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c0)))OR('')))AND(rt1.c1)), ((rt1.c6)|(rt1.c5)))))) ORDER BY (rt1.c4 COLLATE NOCASE IN (((rt1.c3)%(0.08141785920934441)))) DESC  NULLS FIRST, (((rt1.c3) ISNULL) IN (((rt1.c1) IS FALSE), (((rt1.c0, rt1.c6, rt1.c5, rt1.c1, rt1.c4)) BETWEEN ((rt1.c3, rt1.c4, rt1.c4, rt1.c2, rt1.c0)) AND ((0.6552609766115661, rt1.c4, rt1.c5, rt1.c5, rt1.c6))))) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt1 WHERE (rt1.c4) ORDER BY (rt1.c4 COLLATE NOCASE IN (((rt1.c3)%(0.08141785920934441)))) DESC  NULLS FIRST, (((rt1.c3) ISNULL) IN (((rt1.c1) IS FALSE), (((rt1.c0, rt1.c6, rt1.c5, rt1.c1, rt1.c4)) BETWEEN ((rt1.c3, rt1.c4, rt1.c4, rt1.c2, rt1.c0)) AND ((0.6552609766115661, rt1.c4, rt1.c5, rt1.c5, rt1.c6))))) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c4)AND((rt1.c2 IN (rt1.c5)) COLLATE RTRIM))) ORDER BY (rt1.c4 COLLATE NOCASE IN (((rt1.c3)%(0.08141785920934441)))) DESC  NULLS FIRST, (((rt1.c3) ISNULL) IN (((rt1.c1) IS FALSE), (((rt1.c0, rt1.c6, rt1.c5, rt1.c1, rt1.c4)) BETWEEN ((rt1.c3, rt1.c4, rt1.c4, rt1.c2, rt1.c0)) AND ((0.6552609766115661, rt1.c4, rt1.c5, rt1.c5, rt1.c6))))) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c2, rt1.c5)) BETWEEN ((((NULL) BETWEEN (rt1.c4) AND (NULL)), ((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c5)))) AND ((((((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c0)))OR('')))AND(rt1.c1)), ((rt1.c6)|(rt1.c5)))))) ORDER BY (rt1.c4 COLLATE NOCASE IN (((rt1.c3)%(0.08141785920934441)))) DESC  NULLS FIRST, (((rt1.c3) ISNULL) IN (((rt1.c1) IS FALSE), (((rt1.c0, rt1.c6, rt1.c5, rt1.c1, rt1.c4)) BETWEEN ((rt1.c3, rt1.c4, rt1.c4, rt1.c2, rt1.c0)) AND ((0.6552609766115661, rt1.c4, rt1.c5, rt1.c5, rt1.c6))))) ASC  NULLS LAST LIMIT 0;
SELECT MIN(t0.c1) FROM t0 NATURAL JOIN rt1 WHERE (CAST((((NULL, rt1.c2))<>((rt1.c3, rt1.c5))) AS NUMERIC));
SELECT DISTINCT MIN(t0.c1) FROM t0 NATURAL JOIN rt1 WHERE (CAST((((NULL, rt1.c2))<((rt1.c3, rt1.c5))) AS NUMERIC)) ORDER BY t0.c1 INTERSECT SELECT DISTINCT MIN(t0.c1) FROM t0 NATURAL JOIN rt1 WHERE (CAST((((rt1.c1, t0.c3, rt1.c4, t0.c0, rt1.c1))>((rt1.c4, t0.c2, rt1.c1, t0.c3, x'a5'))) AS INTEGER)) ORDER BY t0.c1;
SELECT MIN(t0.c3) FROM t0 INNER JOIN rt1 ON ((t0.c0) IS FALSE) COLLATE RTRIM WHERE (((((((((NULL)AND(((rt1.c5)/(rt1.c4)))))AND((((rt1.c0, rt1.c5)) BETWEEN ((rt1.c6, rt1.c4)) AND ((rt1.c6, t0.c4))))))OR(((t0.c3)+(rt1.c3)))))OR(((t0.c2)||(rt1.c6))))) ORDER BY ((((rt1.c3) NOT BETWEEN (t0.c4) AND (rt1.c4)))*(t0.c3 COLLATE RTRIM)) ASC, x'' ASC;
SELECT ALL MIN(t0.c3) FROM t0 INNER JOIN rt1 ON ((t0.c0) IS FALSE) COLLATE RTRIM WHERE (((((((((NULL)AND(((rt1.c5)/(rt1.c4)))))AND((((rt1.c0, rt1.c5)) BETWEEN ((rt1.c6, rt1.c4)) AND ((rt1.c6, t0.c4))))))OR(((t0.c3)+(rt1.c3)))))OR(((t0.c2)||(rt1.c6))))) ORDER BY ((((rt1.c3) NOT BETWEEN (t0.c4) AND (rt1.c4)))*(t0.c3 COLLATE RTRIM)) ASC, x'' ASC LIMIT 0 INTERSECT SELECT ALL MIN(t0.c3) FROM t0 INNER JOIN rt1 ON ((t0.c0) IS FALSE) COLLATE RTRIM WHERE (((((((((((((((rt1.c5)OR(rt1.c5)))AND(rt1.c1)))AND(t0.c4)))AND(rt1.c0)))AND(rt1.c3)))OR(NULLIF(DISTINCT rt1.c2, t0.c1))))AND(((t0.c0) BETWEEN (rt1.c2) AND (rt1.c5))))) ORDER BY ((((rt1.c3) NOT BETWEEN (t0.c4) AND (rt1.c4)))*(t0.c3 COLLATE RTRIM)) ASC, x'' ASC LIMIT 0;
SELECT * FROM rt1 WHERE (NULL);
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY ((rt1.c2)<(((rt1.c4) NOT NULL)))  NULLS FIRST, (((rt1.c0, rt1.c4)) BETWEEN (((rt1.c4 IN (rt1.c1)), rt1.c4)) AND ((((rt1.c5) NOTNULL), rt1.c4))) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM rt1 WHERE (COALESCE(DISTINCT ((rt1.c4)AND(rt1.c4)), (rt1.c3 IN (rt1.c1)), CAST(rt1.c4 AS BLOB))) ORDER BY ((rt1.c2)<(((rt1.c4) NOT NULL)))  NULLS FIRST, (((rt1.c0, rt1.c4)) BETWEEN (((rt1.c4 IN (rt1.c1)), rt1.c4)) AND ((((rt1.c5) NOTNULL), rt1.c4))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (NULL);
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY ((rt1.c2)<(((rt1.c4) NOT NULL)))  NULLS FIRST, (((rt1.c0, rt1.c4)) BETWEEN (((rt1.c4 IN (rt1.c1)), rt1.c4)) AND ((((rt1.c5) NOTNULL), rt1.c4))) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM rt1 WHERE (COALESCE(DISTINCT ((rt1.c4)AND(rt1.c4)), (rt1.c3 IN (rt1.c1)), CAST(rt1.c4 AS BLOB))) ORDER BY ((rt1.c2)<(((rt1.c4) NOT NULL)))  NULLS FIRST, (((rt1.c0, rt1.c4)) BETWEEN (((rt1.c4 IN (rt1.c1)), rt1.c4)) AND ((((rt1.c5) NOTNULL), rt1.c4))) ASC  NULLS FIRST;
SELECT MIN(t0.c3) FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c6) NOT BETWEEN (rt1.c5) AND (rt1.c2))) NOT NULL) WHERE ((((t0.c3, t0.c4))<>((rt1.c5, rt1.c3))) COLLATE RTRIM);
SELECT DISTINCT MIN(t0.c3) FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c6) NOT BETWEEN (rt1.c5) AND (rt1.c2))) NOT NULL) WHERE ((((t0.c3, t0.c4))<>((rt1.c5, rt1.c3))) COLLATE RTRIM) ORDER BY NULL  NULLS LAST, json_insert(t0.c4 COLLATE RTRIM, ((rt1.c2) IS FALSE), (- (rt1.c2)))  NULLS FIRST;
SELECT * FROM t0 WHERE (TIME(CASE WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c3 ELSE NULL END, ((t0.c1) NOT NULL), TYPEOF(t0.c3), CASE WHEN t0.c0 THEN t0.c3 END));
SELECT * FROM t0 WHERE (((TIME(CASE WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c3 ELSE NULL END, ((t0.c1) NOT NULL), TYPEOF(t0.c3), CASE WHEN t0.c0 THEN t0.c3 END))AND(((((((t0.c2 COLLATE NOCASE)OR(LOWER(DISTINCT t0.c2))))AND((t0.c4 IN ()))))OR(CAST(t0.c1 AS NUMERIC)))))) LIMIT 1;
SELECT * FROM t0 WHERE (TIME(CASE WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c3 ELSE NULL END, ((t0.c1) NOT NULL), TYPEOF(t0.c3), CASE WHEN t0.c0 THEN t0.c3 END));
SELECT * FROM t0 WHERE (((TIME(CASE WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c3 ELSE NULL END, ((t0.c1) NOT NULL), TYPEOF(t0.c3), CASE WHEN t0.c0 THEN t0.c3 END))AND(((((((t0.c2 COLLATE NOCASE)OR(LOWER(DISTINCT t0.c2))))AND((t0.c4 IN ()))))OR(CAST(t0.c1 AS NUMERIC)))))) LIMIT 1;
SELECT MAX(t0.c1) FROM t0 WHERE (((((((((((CASE WHEN t0.c2 THEN t0.c2 END)AND(CAST(t0.c1 AS NUMERIC))))AND(CASE WHEN t0.c3 THEN 1.239046975E9 WHEN t0.c4 THEN t0.c3 ELSE t0.c3 END)))AND(((t0.c3)||(t0.c1)))))OR(t0.c4 COLLATE BINARY)))OR((t0.c3 IN ()))));
SELECT DISTINCT MAX(t0.c1) FROM t0 WHERE (((((((((((((CASE WHEN t0.c2 THEN t0.c2 END)AND(CAST(t0.c1 AS NUMERIC))))AND(CASE WHEN t0.c3 THEN 1.239046975E9 WHEN t0.c4 THEN t0.c3 ELSE t0.c3 END)))AND(((t0.c3)||(t0.c1)))))OR(t0.c4 COLLATE BINARY)))OR((t0.c3 IN ()))))AND((CAST(t0.c2 AS REAL) IN ((((t0.c1, t0.c2, t0.c0, t0.c0))>=((t0.c4, t0.c2, t0.c3, '229944889')))))))) ORDER BY STRFTIME(0Xffffffff87e4df34, ((-1791112218)<>(t0.c2)), ((t0.c4) IS FALSE), ((0.27144801256544815)*(t0.c4))) ASC  NULLS LAST, t0.c1;
SELECT MAX(t0.c0) FROM t0 WHERE (((ABS(DISTINCT t0.c3)) NOT BETWEEN (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (UNLIKELY(t0.c3)))) ORDER BY CAST(((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c4)) AS NUMERIC) ASC  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((ABS(DISTINCT t0.c3)) NOT BETWEEN (((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (UNLIKELY(t0.c3))))AND(((ABS(DISTINCT t0.c1)) NOT BETWEEN (((t0.c4) BETWEEN (t0.c3) AND (t0.c2))) AND (((((((((x'bf7c')OR(t0.c2)))OR(t0.c0)))OR(t0.c0)))AND(t0.c2))))))) ORDER BY CAST(((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c4)) AS NUMERIC) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((TRIM(t0.c3) IN ())) ORDER BY CAST(((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c4)) AS NUMERIC) ASC  NULLS FIRST LIMIT 0x1;
SELECT MAX(t0.c1) FROM rt1, t0 WHERE (CASE WHEN (- (t0.c3)) THEN ((rt1.c1) NOT NULL) WHEN ((t0.c2)>>(rt1.c1)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN rt1.c6 THEN 0.41290625338186127 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c4 END END);
SELECT DISTINCT MAX(t0.c1) FROM rt1, t0 WHERE (((CASE WHEN (- (t0.c3)) THEN ((rt1.c1) NOT NULL) WHEN ((t0.c2)>>(rt1.c1)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN rt1.c6 THEN 0.41290625338186127 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c4 END END)AND((((((((((rt1.c0 IN (t0.c4)))OR(rt1.c0 COLLATE NOCASE)))AND((((rt1.c0, '', rt1.c6))>((rt1.c2, rt1.c6, rt1.c5))))))OR('-1560087994')))AND(((rt1.c6)/(rt1.c1))))))) ORDER BY CASE ((rt1.c3) BETWEEN (t0.c4) AND (rt1.c0))  WHEN ((t0.c3)GLOB(rt1.c1)) THEN ((rt1.c3)%(rt1.c4)) ELSE (((t0.c0))>=((t0.c1))) END ASC, ((((((((rt1.c3)AND(NULL)))OR(0.7848769015565596)))AND(t0.c4)))!=((((t0.c2, rt1.c3))==((rt1.c0, 0.6513235734561656))))) DESC  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (((((rt1.c3)IS(x'dcc6')))<=(((((((((rt1.c6)OR(rt1.c2)))AND(rt1.c5)))AND(t0.c0)))OR(rt1.c1))))) ORDER BY rt1.c6 DESC  NULLS LAST, (- (CAST(t0.c1 AS TEXT)));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c3)IS(x'dcc6')))<(((((((((rt1.c6)OR(rt1.c2)))AND(rt1.c5)))AND(t0.c0)))OR(rt1.c1))))) ORDER BY rt1.c6 DESC  NULLS LAST, (- (CAST(t0.c1 AS TEXT))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((1.239046975E9) BETWEEN (rt1.c4) AND (t0.c1)))+(CASE WHEN rt1.c3 THEN rt1.c2 WHEN t0.c3 THEN rt1.c3 WHEN t0.c3 THEN t0.c4 ELSE rt1.c6 END))) ORDER BY rt1.c6 DESC  NULLS LAST, (- (CAST(t0.c1 AS TEXT)));
SELECT * FROM t0, rt1 WHERE (((((rt1.c3)IS(x'dcc6')))<=(((((((((rt1.c6)OR(rt1.c2)))AND(rt1.c5)))AND(t0.c0)))OR(rt1.c1))))) ORDER BY rt1.c6 DESC  NULLS LAST, (- (CAST(t0.c1 AS TEXT)));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c3)IS(x'dcc6')))<(((((((((rt1.c6)OR(rt1.c2)))AND(rt1.c5)))AND(t0.c0)))OR(rt1.c1))))) ORDER BY rt1.c6 DESC  NULLS LAST, (- (CAST(t0.c1 AS TEXT))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((1.239046975E9) BETWEEN (rt1.c4) AND (t0.c1)))+(CASE WHEN rt1.c3 THEN rt1.c2 WHEN t0.c3 THEN rt1.c3 WHEN t0.c3 THEN t0.c4 ELSE rt1.c6 END))) ORDER BY rt1.c6 DESC  NULLS LAST, (- (CAST(t0.c1 AS TEXT)));
SELECT ALL * FROM rt1, t0 WHERE ((((('90315868') NOT BETWEEN (rt1.c1) AND (rt1.c5))) BETWEEN (CAST(0.3008721883191836 AS REAL)) AND (((t0.c2) BETWEEN (t0.c3) AND (rt1.c6)))));
SELECT * FROM rt1, t0 WHERE ((((((('90315868') NOT BETWEEN (rt1.c1) AND (rt1.c5))) BETWEEN (CAST(0.3008721883191836 AS REAL)) AND (((t0.c2) BETWEEN (t0.c3) AND (rt1.c6)))))AND((((((((((((((NOT (t0.c3)))AND(((0.05919486163885579)||(rt1.c6)))))AND(((rt1.c4)&(NULL)))))OR(LIKELY(rt1.c0))))AND((((rt1.c3, x'a5f1d2')) BETWEEN ((rt1.c2, rt1.c0)) AND ((x'', 0.9704584139626998))))))OR((rt1.c4 IN ()))))AND((((rt1.c5, rt1.c3))==((rt1.c5, t0.c4)))))))) ORDER BY ((CASE WHEN 0.9631170960725886 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c4 END)IS(CAST(rt1.c0 AS NUMERIC))) DESC, t0.c4;
SELECT ALL * FROM rt1, t0 WHERE ((((('90315868') NOT BETWEEN (rt1.c1) AND (rt1.c5))) BETWEEN (CAST(0.3008721883191836 AS REAL)) AND (((t0.c2) BETWEEN (t0.c3) AND (rt1.c6)))));
SELECT * FROM rt1, t0 WHERE ((((((('90315868') NOT BETWEEN (rt1.c1) AND (rt1.c5))) BETWEEN (CAST(0.3008721883191836 AS REAL)) AND (((t0.c2) BETWEEN (t0.c3) AND (rt1.c6)))))AND((((((((((((((NOT (t0.c3)))AND(((0.05919486163885579)||(rt1.c6)))))AND(((rt1.c4)&(NULL)))))OR(LIKELY(rt1.c0))))AND((((rt1.c3, x'a5f1d2')) BETWEEN ((rt1.c2, rt1.c0)) AND ((x'', 0.9704584139626998))))))OR((rt1.c4 IN ()))))AND((((rt1.c5, rt1.c3))==((rt1.c5, t0.c4)))))))) ORDER BY ((CASE WHEN 0.9631170960725886 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c4 END)IS(CAST(rt1.c0 AS NUMERIC))) DESC, t0.c4;
SELECT ALL MIN(rt1.c2) FROM rt1 WHERE (((rt1.c0) BETWEEN (((rt1.c5)>(rt1.c3))) AND (x'44'))) ORDER BY (((((rt1.c2, 0.1662600918776923, rt1.c1)) BETWEEN ((rt1.c5, rt1.c5, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c3))))>>((NOT (rt1.c6)))) ASC;
SELECT DISTINCT MIN(rt1.c2) FROM rt1 WHERE (((((rt1.c0) BETWEEN (((rt1.c5)>(rt1.c3))) AND (x'44')))AND(CAST(((rt1.c1)OR(rt1.c0)) AS BLOB)))) ORDER BY rt1.c6  NULLS LAST, ((((rt1.c6) ISNULL)) NOT NULL) ASC  NULLS LAST LIMIT 0x4;
SELECT ALL * FROM rt1, t0 WHERE (((((((t0.c3)%(rt1.c4)))OR(rt1.c5 COLLATE BINARY)))OR(((((t0.c3)OR(t0.c3)))OR(x'960d'))))) ORDER BY CAST((t0.c1 IN (rt1.c5, t0.c0)) AS BLOB), ((t0.c1 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((t0.c3)%(rt1.c4)))OR(rt1.c5 COLLATE BINARY)))OR(((((t0.c3)OR(t0.c3)))OR(x'960d')))))AND((((((rt1.c6, t0.c3, NULL, rt1.c0, rt1.c4, t0.c3))>((x'd0', t0.c2, t0.c3, rt1.c4, rt1.c1, rt1.c1)))) NOT BETWEEN ((((rt1.c3, rt1.c4)) BETWEEN ((rt1.c0, rt1.c1)) AND ((rt1.c2, t0.c2)))) AND (((((((((((((((t0.c3)OR(rt1.c1)))OR(t0.c0)))AND(rt1.c0)))AND(t0.c2)))AND(rt1.c2)))OR(rt1.c3)))OR(rt1.c4))))))) ORDER BY CAST((t0.c1 IN (rt1.c5, t0.c0)) AS BLOB), ((t0.c1 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c4)))GLOB(x'2ae3'))) ORDER BY CAST((t0.c1 IN (rt1.c5, t0.c0)) AS BLOB), ((t0.c1 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (((((((t0.c3)%(rt1.c4)))OR(rt1.c5 COLLATE BINARY)))OR(((((t0.c3)OR(t0.c3)))OR(x'960d'))))) ORDER BY CAST((t0.c1 IN (rt1.c5, t0.c0)) AS BLOB), ((t0.c1 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((t0.c3)%(rt1.c4)))OR(rt1.c5 COLLATE BINARY)))OR(((((t0.c3)OR(t0.c3)))OR(x'960d')))))AND((((((rt1.c6, t0.c3, NULL, rt1.c0, rt1.c4, t0.c3))>((x'd0', t0.c2, t0.c3, rt1.c4, rt1.c1, rt1.c1)))) NOT BETWEEN ((((rt1.c3, rt1.c4)) BETWEEN ((rt1.c0, rt1.c1)) AND ((rt1.c2, t0.c2)))) AND (((((((((((((((t0.c3)OR(rt1.c1)))OR(t0.c0)))AND(rt1.c0)))AND(t0.c2)))AND(rt1.c2)))OR(rt1.c3)))OR(rt1.c4))))))) ORDER BY CAST((t0.c1 IN (rt1.c5, t0.c0)) AS BLOB), ((t0.c1 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c4)))GLOB(x'2ae3'))) ORDER BY CAST((t0.c1 IN (rt1.c5, t0.c0)) AS BLOB), ((t0.c1 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(0.8934372654006157 AS REAL));
SELECT DISTINCT * FROM t0 WHERE (((CAST(0.8934372654006157 AS REAL))AND((((((- (t0.c2)))AND(((t0.c3)/(t0.c3)))))OR(((t0.c1)|(t0.c3)))))));
SELECT * FROM t0 WHERE (CAST(0.8934372654006157 AS REAL));
SELECT DISTINCT * FROM t0 WHERE (((CAST(0.8934372654006157 AS REAL))AND((((((- (t0.c2)))AND(((t0.c3)/(t0.c3)))))OR(((t0.c1)|(t0.c3)))))));
SELECT ALL MIN(t0.c2) FROM t0 WHERE ((((t0.c0, t0.c4))==((t0.c4, t0.c4))) COLLATE NOCASE) ORDER BY (NOT (0.13681618722677746)) ASC, t0.c2  NULLS FIRST, CASE ((((t0.c2)AND(t0.c3)))AND(t0.c3))  WHEN ((((t0.c2)AND(t0.c4)))OR(t0.c3)) THEN ((('-547373890', t0.c1, t0.c2))=((t0.c0, t0.c4, t0.c2))) WHEN CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c3 ELSE t0.c3 END THEN t0.c3 COLLATE BINARY WHEN (- (t0.c4)) THEN ((t0.c4)IS NOT(t0.c4)) WHEN ((((((t0.c0)OR(t0.c2)))AND(t0.c1)))OR(1055268216)) THEN (((t0.c0, t0.c0))<((0.6105519028023481, t0.c3))) ELSE TYPEOF(t0.c4) END DESC;
SELECT DISTINCT MIN(t0.c2) FROM t0 WHERE ((((t0.c0, t0.c4))=((t0.c4, t0.c4))) COLLATE NOCASE) ORDER BY 'E\()' COLLATE BINARY ASC  NULLS LAST;
SELECT ALL MIN(rt1.c1) FROM rt1 WHERE (((((rt1.c3) IS TRUE))==(((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c5))))) ORDER BY ((((((((CAST(rt1.c1 AS NUMERIC))OR(rt1.c4 COLLATE NOCASE)))OR(((rt1.c3) IS TRUE))))OR(((rt1.c2)|(rt1.c4)))))OR(json_extract(rt1.c1, rt1.c3, rt1.c6))) ASC, CASE WHEN CAST(rt1.c6 AS REAL) THEN ((0.8062105689299066)||(rt1.c4)) WHEN (rt1.c1 IN (rt1.c5)) THEN ((rt1.c3)%(rt1.c2)) ELSE rt1.c1 COLLATE RTRIM END ASC, ((((rt1.c1) ISNULL))IS NOT(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c6 END)) ASC, (NOT (CASE WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 END)) DESC;
SELECT MIN(rt1.c1) FROM rt1 WHERE (((((rt1.c3) IS TRUE))=(((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c5))))) ORDER BY ((((((((CAST(rt1.c1 AS NUMERIC))OR(rt1.c4 COLLATE NOCASE)))OR(((rt1.c3) IS TRUE))))OR(((rt1.c2)|(rt1.c4)))))OR(json_extract(rt1.c1, rt1.c3, rt1.c6))) ASC, CASE WHEN CAST(rt1.c6 AS REAL) THEN ((0.8062105689299066)||(rt1.c4)) WHEN (rt1.c1 IN (rt1.c5)) THEN ((rt1.c3)%(rt1.c2)) ELSE rt1.c1 COLLATE RTRIM END ASC, ((((rt1.c1) ISNULL))IS NOT(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c6 END)) ASC, (NOT (CASE WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 END)) DESC INTERSECT SELECT ALL MIN(rt1.c1) FROM rt1 NOT INDEXED WHERE ((('1106409205') ISNULL)) ORDER BY ((((((((CAST(rt1.c1 AS NUMERIC))OR(rt1.c4 COLLATE NOCASE)))OR(((rt1.c3) IS TRUE))))OR(((rt1.c2)|(rt1.c4)))))OR(json_extract(rt1.c1, rt1.c3, rt1.c6))) ASC, CASE WHEN CAST(rt1.c6 AS REAL) THEN ((0.8062105689299066)||(rt1.c4)) WHEN (rt1.c1 IN (rt1.c5)) THEN ((rt1.c3)%(rt1.c2)) ELSE rt1.c1 COLLATE RTRIM END ASC, ((((rt1.c1) ISNULL))IS NOT(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c6 END)) ASC, (NOT (CASE WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 END)) DESC;
SELECT * FROM rt1, t0 WHERE ((- (((t0.c4) NOT NULL))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((- (((t0.c4) NOT NULL)))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((((t0.c1)OR((NOT ('dz')))))OR(rt1.c1 COLLATE RTRIM)))OR(CASE WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c6 THEN t0.c1 WHEN rt1.c1 THEN t0.c4 END))) LIMIT 2;
SELECT * FROM rt1, t0 WHERE ((- (((t0.c4) NOT NULL))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((- (((t0.c4) NOT NULL)))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((((t0.c1)OR((NOT ('dz')))))OR(rt1.c1 COLLATE RTRIM)))OR(CASE WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c6 THEN t0.c1 WHEN rt1.c1 THEN t0.c4 END))) LIMIT 2;
SELECT ALL MAX(t0.c0) FROM t0, rt1 WHERE (json_object(((rt1.c2) NOT BETWEEN (t0.c3) AND (t0.c3)), CASE rt1.c1  WHEN t0.c4 THEN '/A%{l' WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END)) ORDER BY (~ (t0.c2 COLLATE BINARY)) DESC  NULLS LAST, (((rt1.c5, x'12da18', t0.c2)) BETWEEN (((((rt1.c4, rt1.c4, rt1.c2))<>((rt1.c5, rt1.c2, '<qdn8h'))), CAST(t0.c4 AS INTEGER), CAST(rt1.c4 AS TEXT))) AND ((-6.594129E8, x'7d' COLLATE BINARY, ((((rt1.c1)OR(t0.c1)))OR(rt1.c3))))) DESC, ((CASE -1824059337  WHEN 0.820110210223263 THEN rt1.c0 WHEN NULL THEN t0.c3 ELSE '煖㩹Er67' END)GLOB(TRIM(rt1.c4)));
SELECT ALL MAX(t0.c0) FROM t0, rt1 WHERE (json_object(((rt1.c2) NOT BETWEEN (t0.c3) AND (t0.c3)), CASE rt1.c1  WHEN t0.c4 THEN '/A%{l' WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END)) ORDER BY (~ (NULL)) INTERSECT SELECT ALL MAX(t0.c0) FROM t0, rt1 WHERE ((((rt1.c2 IN ())) NOT NULL)) ORDER BY (~ (NULL));
SELECT COUNT(*) FROM t0, rt1 WHERE (((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c1 WHEN rt1.c2 THEN rt1.c4 ELSE t0.c3 END) AND (((t0.c3) NOT BETWEEN (rt1.c5) AND (rt1.c6)))));
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c1 WHEN rt1.c2 THEN rt1.c4 ELSE t0.c3 END) AND (((t0.c3) NOT BETWEEN (rt1.c5) AND (rt1.c6))))) ORDER BY CASE ((((((t0.c3)OR(t0.c3)))OR(t0.c3)))AND(rt1.c4))  WHEN ((((((rt1.c0)OR(rt1.c4)))OR(t0.c0)))OR(rt1.c5)) THEN ((((((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))OR(t0.c0)))AND(t0.c3)))AND(NULL)))AND(t0.c3)) END DESC, ((CAST(t0.c3 AS TEXT)) BETWEEN ((~ (rt1.c5))) AND (((t0.c2)>(t0.c4)))) DESC  NULLS LAST, rt1.c3  NULLS LAST, LENGTH('-193041992')  NULLS FIRST;
SELECT * FROM rt1 CROSS JOIN t0 ON ((((rt1.c2)<>(rt1.c5))) IS FALSE) WHERE (((((rt1.c0, t0.c0))<=((t0.c2, rt1.c6))) IN (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON ((((rt1.c2)<>(rt1.c5))) IS FALSE) WHERE (((((((rt1.c0, t0.c0))<=((t0.c2, rt1.c6))) IN (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)))AND(t0.c2 COLLATE RTRIM))) ORDER BY 0xfffffffffd45ad59 DESC  NULLS LAST, t0.c1  NULLS FIRST, ((((rt1.c4)|('-908782016'))) BETWEEN (((rt1.c0)>=(0.13738399129261158))) AND (0.19423500344227085))  NULLS LAST LIMIT 0x0;
SELECT * FROM rt1 CROSS JOIN t0 ON ((((rt1.c2)<>(rt1.c5))) IS FALSE) WHERE (((((rt1.c0, t0.c0))<=((t0.c2, rt1.c6))) IN (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON ((((rt1.c2)<>(rt1.c5))) IS FALSE) WHERE (((((((rt1.c0, t0.c0))<=((t0.c2, rt1.c6))) IN (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)))AND(t0.c2 COLLATE RTRIM))) ORDER BY 0xfffffffffd45ad59 DESC  NULLS LAST, t0.c1  NULLS FIRST, ((((rt1.c4)|('-908782016'))) BETWEEN (((rt1.c0)>=(0.13738399129261158))) AND (0.19423500344227085))  NULLS LAST LIMIT 0x0;
SELECT MIN(rt1.c5) FROM t0, rt1 WHERE ((~ (t0.c3 COLLATE BINARY))) ORDER BY (((rt1.c5, rt1.c4)) NOT BETWEEN ((((('>TI45'))>((t0.c0))), rt1.c5)) AND ((rt1.c0 COLLATE BINARY, (rt1.c3 IN (t0.c1))))) DESC;
SELECT DISTINCT MIN(rt1.c5) FROM t0, rt1 WHERE ((((~ (t0.c3 COLLATE BINARY)))AND((((rt1.c5 IN (t0.c1, t0.c1)))!=(t0.c0 COLLATE RTRIM))))) ORDER BY CASE WHEN '1633093055' THEN (~ (rt1.c4)) WHEN ((-1941374541)>(rt1.c0)) THEN rt1.c4 COLLATE NOCASE ELSE ((rt1.c3)|(rt1.c6)) END DESC LIMIT 0;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (NULL COLLATE NOCASE COLLATE NOCASE);
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (NULL COLLATE NOCASE COLLATE NOCASE) ORDER BY CASE ((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c6))  WHEN rt1.c3 COLLATE RTRIM THEN rtreenode(rt1.c5, rt1.c2) WHEN (((rt1.c1, rt1.c3))>((0.10293099337332001, '-695794534'))) THEN ((t0.c1) ISNULL) WHEN (NOT (rt1.c2)) THEN ((t0.c1)>>(rt1.c0)) WHEN rt1.c5 THEN LOWER(DISTINCT t0.c0) WHEN (((t0.c1))>=((t0.c0))) THEN (t0.c2 IN ()) END  NULLS LAST, (CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c6 END IN ()) DESC  NULLS LAST, (- (((rt1.c3)<(t0.c2)))) INTERSECT SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (((CASE WHEN rt1.c5 THEN rt1.c0 END) NOT NULL)) ORDER BY CASE ((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c6))  WHEN rt1.c3 COLLATE RTRIM THEN rtreenode(rt1.c5, rt1.c2) WHEN (((rt1.c1, rt1.c3))>((0.10293099337332001, '-695794534'))) THEN ((t0.c1) ISNULL) WHEN (NOT (rt1.c2)) THEN ((t0.c1)>>(rt1.c0)) WHEN rt1.c5 THEN LOWER(DISTINCT t0.c0) WHEN (((t0.c1))>=((t0.c0))) THEN (t0.c2 IN ()) END  NULLS LAST, (CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c6 END IN ()) DESC  NULLS LAST, (- (((rt1.c3)<(t0.c2))));
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (NULL COLLATE NOCASE COLLATE NOCASE);
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (NULL COLLATE NOCASE COLLATE NOCASE) ORDER BY CASE ((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c6))  WHEN rt1.c3 COLLATE RTRIM THEN rtreenode(rt1.c5, rt1.c2) WHEN (((rt1.c1, rt1.c3))>((0.10293099337332001, '-695794534'))) THEN ((t0.c1) ISNULL) WHEN (NOT (rt1.c2)) THEN ((t0.c1)>>(rt1.c0)) WHEN rt1.c5 THEN LOWER(DISTINCT t0.c0) WHEN (((t0.c1))>=((t0.c0))) THEN (t0.c2 IN ()) END  NULLS LAST, (CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c6 END IN ()) DESC  NULLS LAST, (- (((rt1.c3)<(t0.c2)))) INTERSECT SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (((CASE WHEN rt1.c5 THEN rt1.c0 END) NOT NULL)) ORDER BY CASE ((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c6))  WHEN rt1.c3 COLLATE RTRIM THEN rtreenode(rt1.c5, rt1.c2) WHEN (((rt1.c1, rt1.c3))>((0.10293099337332001, '-695794534'))) THEN ((t0.c1) ISNULL) WHEN (NOT (rt1.c2)) THEN ((t0.c1)>>(rt1.c0)) WHEN rt1.c5 THEN LOWER(DISTINCT t0.c0) WHEN (((t0.c1))>=((t0.c0))) THEN (t0.c2 IN ()) END  NULLS LAST, (CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c6 END IN ()) DESC  NULLS LAST, (- (((rt1.c3)<(t0.c2))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CAST(((t0.c2)OR(0.8810303897437924)) AS BLOB)) ORDER BY ((CASE 2.015583807E9  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END)%(((((rt1.c6)OR(t0.c3)))OR(rt1.c6)))) ASC  NULLS LAST, CASE ((t0.c2) NOT NULL)  WHEN ((t0.c1)-('390600562')) THEN t0.c3 WHEN rt1.c6 COLLATE NOCASE THEN (+ (t0.c2)) ELSE (((('uMf|7Uj|')OR(rt1.c2)))AND(NULL)) END ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 NOT INDEXED, rt1 WHERE (CAST(((t0.c2)OR(0.8810303897437924)) AS BLOB)) ORDER BY ((CASE 2.015583807E9  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END)%(((((rt1.c6)OR(t0.c3)))OR(rt1.c6)))) ASC  NULLS LAST, CASE ((t0.c2) NOT NULL)  WHEN ((t0.c1)-('390600562')) THEN t0.c3 WHEN rt1.c6 COLLATE NOCASE THEN (+ (t0.c2)) ELSE (((('uMf|7Uj|')OR(rt1.c2)))AND(NULL)) END ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (ABS(DISTINCT ((t0.c4) NOT NULL))) ORDER BY ((CASE 2.015583807E9  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END)%(((((rt1.c6)OR(t0.c3)))OR(rt1.c6)))) ASC  NULLS LAST, CASE ((t0.c2) NOT NULL)  WHEN ((t0.c1)-('390600562')) THEN t0.c3 WHEN rt1.c6 COLLATE NOCASE THEN (+ (t0.c2)) ELSE (((('uMf|7Uj|')OR(rt1.c2)))AND(NULL)) END ASC  NULLS FIRST LIMIT 0x1;
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON SUBSTR((t0.c2 IN (t0.c1, t0.c3)), rt1.c3) WHERE (ABS(((rt1.c5) NOT NULL))) ORDER BY (NOT (((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c0)))), ((((((x'' COLLATE RTRIM)OR(((t0.c3) BETWEEN (rt1.c2) AND (rt1.c6)))))OR(((t0.c4)>=(t0.c0)))))AND(((rt1.c5) BETWEEN (t0.c0) AND (rt1.c6)))) DESC, rt1.c1, 201579330;
SELECT DISTINCT COUNT(*) FROM rt1 CROSS JOIN t0 ON SUBSTR((t0.c2 IN (t0.c1, t0.c3)), rt1.c3) WHERE (((ABS(((rt1.c5) NOT NULL)))AND(0xffffffffa35bb35c))) ORDER BY (NOT (((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c0)))), ((((((x'' COLLATE RTRIM)OR(((t0.c3) BETWEEN (rt1.c2) AND (rt1.c6)))))OR(((t0.c4)>=(t0.c0)))))AND(((rt1.c5) BETWEEN (t0.c0) AND (rt1.c6)))) DESC, rt1.c1, 0xc03db42 LIMIT 0x2 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 CROSS JOIN t0 ON SUBSTR((t0.c2 IN (t0.c1, t0.c3)), rt1.c3) WHERE (COALESCE((~ (rt1.c1)), ((t0.c4) NOT NULL))) ORDER BY (NOT (((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c0)))), ((((((x'' COLLATE RTRIM)OR(((t0.c3) BETWEEN (rt1.c2) AND (rt1.c6)))))OR(((t0.c4)>=(t0.c0)))))AND(((rt1.c5) BETWEEN (t0.c0) AND (rt1.c6)))) DESC, rt1.c1, 201579330 LIMIT 0x2;
SELECT ALL MIN(rt1.c3) FROM rt1 WHERE (rt1.c3) ORDER BY CAST(rt1.c6 AS REAL) DESC  NULLS LAST, NULL;
SELECT MIN(rt1.c3) FROM rt1 WHERE (rt1.c3) ORDER BY CAST(rt1.c6 AS REAL) DESC  NULLS LAST, NULL LIMIT 0X0 INTERSECT SELECT ALL MIN(rt1.c3) FROM rt1 WHERE ((((- (x'')))/(((rt1.c2)<=(rt1.c0))))) ORDER BY CAST(rt1.c6 AS REAL) DESC  NULLS LAST, NULL LIMIT 0x0;
SELECT MAX(rt1.c0) FROM t0, rt1 WHERE ((- (((rt1.c5) BETWEEN (rt1.c0) AND (t0.c0))))) ORDER BY (t0.c3 IN ())  NULLS FIRST;
SELECT MAX(rt1.c0) FROM t0, rt1 WHERE ((- (((rt1.c5) BETWEEN (rt1.c0) AND (t0.c0))))) ORDER BY (t0.c3 IN ())  NULLS FIRST INTERSECT SELECT ALL MAX(rt1.c0) FROM t0, rt1 WHERE (CAST(((rt1.c3) NOT BETWEEN (t0.c2) AND (rt1.c2)) AS NUMERIC)) ORDER BY (t0.c3 IN ())  NULLS FIRST;
SELECT ALL MIN(t0.c4) FROM t0 WHERE (NULLIF(0.9281210772023121, (+ (t0.c3)))) ORDER BY t0.c3  NULLS FIRST, ((t0.c0) NOTNULL) COLLATE RTRIM COLLATE NOCASE  NULLS FIRST;
SELECT DISTINCT MIN(t0.c4) FROM t0 WHERE (((NULLIF(0.9281210772023121, (+ (t0.c3))))AND(((t0.c0 COLLATE NOCASE)IS(((t0.c3)<=(t0.c4))))))) ORDER BY t0.c3  NULLS FIRST, ((t0.c0) NOTNULL) COLLATE RTRIM COLLATE NOCASE  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT MIN(t0.c4) FROM t0 WHERE (((((CASE WHEN t0.c3 THEN t0.c0 END)OR(((((t0.c4)AND(t0.c2)))AND(t0.c4)))))AND(CAST(t0.c0 AS REAL)))) ORDER BY t0.c3  NULLS FIRST, ((t0.c0) NOTNULL) COLLATE RTRIM COLLATE NOCASE  NULLS FIRST LIMIT 2;
SELECT * FROM t0 NOT INDEXED, rt1 WHERE (rt1.c6 COLLATE RTRIM) ORDER BY (~ (x'5ac9f9'))  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (rt1.c6 COLLATE RTRIM) ORDER BY (~ (x'5ac9f9'))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT ALL * FROM t0, rt1 WHERE (x'3c3c') ORDER BY (~ (x'5ac9f9'))  NULLS FIRST LIMIT 0;
SELECT * FROM t0 NOT INDEXED, rt1 WHERE (rt1.c6 COLLATE RTRIM) ORDER BY (~ (x'5ac9f9'))  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (rt1.c6 COLLATE RTRIM) ORDER BY (~ (x'5ac9f9'))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT ALL * FROM t0, rt1 WHERE (x'3c3c') ORDER BY (~ (x'5ac9f9'))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((t0.c1 IN (t0.c1)))%(((t0.c3) NOTNULL))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c1 IN (t0.c1)))%(((t0.c3) NOTNULL))))AND(TYPEOF(t0.c4)))) ORDER BY (NOT (((t0.c4)GLOB(t0.c0)))) ASC  NULLS LAST, ((((t0.c3)LIKE('4')))|(((t0.c1)<=(t0.c1)))) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t0 WHERE ((((t0.c1 IN (t0.c1)))%(((t0.c3) NOTNULL))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c1 IN (t0.c1)))%(((t0.c3) NOTNULL))))AND(TYPEOF(t0.c4)))) ORDER BY (NOT (((t0.c4)GLOB(t0.c0)))) ASC  NULLS LAST, ((((t0.c3)LIKE('4')))|(((t0.c1)<=(t0.c1)))) DESC  NULLS LAST LIMIT 0x0;
SELECT MIN(rt1.c3) FROM rt1, t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(rt1.c5)))OR(t0.c1))) IS TRUE));
SELECT DISTINCT MIN(rt1.c3) FROM rt1, t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(rt1.c5)))OR(t0.c1))) IS TRUE));
SELECT MAX(rt1.c2) FROM rt1 WHERE (UNLIKELY(DISTINCT rt1.c5) COLLATE BINARY);
SELECT ALL MAX(rt1.c2) FROM rt1 WHERE (UNLIKELY(DISTINCT rt1.c5) COLLATE BINARY) ORDER BY (((x'' IN (rt1.c2, rt1.c1)))+((((rt1.c6))==((rt1.c4))))) ASC, (((((rt1.c5)) BETWEEN ((0.11420577840728086)) AND ((rt1.c6))))IS NOT(((((((rt1.c2)AND(rt1.c3)))AND(rt1.c1)))OR(rt1.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE) ORDER BY rt1.c4, ((((((((rt1.c4)AND(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c5)))))OR((rt1.c6 IN (rt1.c5)))))AND(CASE WHEN rt1.c6 THEN rt1.c5 WHEN x'' THEN '90315868' WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c6 END)))OR(ABS(NULL))) ASC;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE) ORDER BY rt1.c4, ((((((((rt1.c4)AND(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c5)))))OR((rt1.c6 IN (rt1.c5)))))AND(CASE WHEN rt1.c6 THEN rt1.c5 WHEN x'' THEN '90315868' WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c6 END)))OR(ABS(NULL))) ASC;
SELECT ALL * FROM rt1, t0 WHERE ((((~ (t0.c4)))IS((((t0.c1, rt1.c1, NULL))>=((rt1.c4, rt1.c2, rt1.c2)))))) ORDER BY (~ (json(t0.c3))), (((((0x753abd62) NOT BETWEEN (rt1.c4) AND (0xffffffff890b52fd)), ((t0.c2)<<(rt1.c3))))<>((t0.c1 COLLATE NOCASE, (t0.c3 IN (t0.c4)))));
SELECT ALL * FROM rt1, t0 WHERE ((((((~ (t0.c4)))IS((((t0.c1, rt1.c1, NULL))>=((rt1.c4, rt1.c2, rt1.c2))))))AND(CAST(((t0.c2) NOT BETWEEN (rt1.c1) AND (t0.c4)) AS INTEGER)))) ORDER BY (~ (json(t0.c3))), (((((1966783842) NOT BETWEEN (rt1.c4) AND (-1995746563)), ((t0.c2)<<(rt1.c3))))<>((t0.c1 COLLATE NOCASE, (t0.c3 IN (t0.c4))))) LIMIT 0X0 INTERSECT SELECT * FROM rt1, t0 WHERE ('1765084207') ORDER BY (~ (json(t0.c3))), (((((1966783842) NOT BETWEEN (rt1.c4) AND (-1995746563)), ((t0.c2)<<(rt1.c3))))!=((t0.c1 COLLATE NOCASE, (t0.c3 IN (t0.c4))))) LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE ((((~ (t0.c4)))IS((((t0.c1, rt1.c1, NULL))>=((rt1.c4, rt1.c2, rt1.c2)))))) ORDER BY (~ (json(t0.c3))), (((((0x753abd62) NOT BETWEEN (rt1.c4) AND (0xffffffff890b52fd)), ((t0.c2)<<(rt1.c3))))<>((t0.c1 COLLATE NOCASE, (t0.c3 IN (t0.c4)))));
SELECT ALL * FROM rt1, t0 WHERE ((((((~ (t0.c4)))IS((((t0.c1, rt1.c1, NULL))>=((rt1.c4, rt1.c2, rt1.c2))))))AND(CAST(((t0.c2) NOT BETWEEN (rt1.c1) AND (t0.c4)) AS INTEGER)))) ORDER BY (~ (json(t0.c3))), (((((1966783842) NOT BETWEEN (rt1.c4) AND (-1995746563)), ((t0.c2)<<(rt1.c3))))<>((t0.c1 COLLATE NOCASE, (t0.c3 IN (t0.c4))))) LIMIT 0X0 INTERSECT SELECT * FROM rt1, t0 WHERE ('1765084207') ORDER BY (~ (json(t0.c3))), (((((1966783842) NOT BETWEEN (rt1.c4) AND (-1995746563)), ((t0.c2)<<(rt1.c3))))!=((t0.c1 COLLATE NOCASE, (t0.c3 IN (t0.c4))))) LIMIT 0x0;
SELECT ALL MIN(rt1.c3) FROM t0, rt1 WHERE ((((rt1.c0)<>('A')) IN (load_extension(rt1.c0, t0.c1), ((rt1.c3)/(rt1.c6))))) ORDER BY ((((t0.c0)GLOB(t0.c0))) NOT BETWEEN (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c4 END) AND (CASE t0.c0  WHEN t0.c3 THEN rt1.c4 END));
SELECT MIN(rt1.c3) FROM t0, rt1 WHERE ((((rt1.c0)!=('A')) IN (load_extension(rt1.c0, t0.c1), ((rt1.c3)/(rt1.c6))))) ORDER BY (COALESCE(DISTINCT t0.c1, '-307024888') IN ()) DESC, SQLITE_COMPILEOPTION_USED(((rt1.c2) IS TRUE)) ASC LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c4 IN (t0.c4, rt1.c6)) WHEN ((rt1.c5)<(t0.c2)) THEN t0.c4 COLLATE BINARY WHEN CASE t0.c3  WHEN rt1.c2 THEN t0.c4 ELSE rt1.c1 END THEN CAST(rt1.c4 AS NUMERIC) ELSE rt1.c6 END);
SELECT DISTINCT * FROM rt1, t0 WHERE (((CASE WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c4 IN (t0.c4)) WHEN ((rt1.c5)<(t0.c2)) THEN t0.c4 COLLATE BINARY WHEN CASE t0.c3  WHEN rt1.c2 THEN t0.c4 ELSE rt1.c1 END THEN CAST(rt1.c4 AS NUMERIC) ELSE rt1.c6 END)AND((CAST(rt1.c0 AS REAL) IN ())))) ORDER BY ((((((((NULLIF(t0.c0, rt1.c6))AND(((((t0.c1)AND(NULL)))OR(rt1.c6)))))AND(ABS(t0.c3))))AND(UPPER(DISTINCT t0.c1))))OR((((rt1.c1, t0.c0, rt1.c3, rt1.c3)) NOT BETWEEN (('-1980698300', t0.c1, rt1.c6, t0.c1)) AND ((0.8801691197835113, rt1.c5, rt1.c1, rt1.c0))))) DESC  NULLS LAST, (((t0.c4, rt1.c2)) BETWEEN (((((t0.c1, x'fb', rt1.c3))<>((rt1.c6, -1280697404, t0.c4))), t0.c2)) AND ((NULL, CASE t0.c4  WHEN rt1.c5 THEN t0.c4 WHEN 0.30502087275362855 THEN t0.c2 WHEN rt1.c6 THEN x'' END))), (NOT (CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c4 END)) DESC LIMIT 0X0;
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c4 IN (t0.c4, rt1.c6)) WHEN ((rt1.c5)<(t0.c2)) THEN t0.c4 COLLATE BINARY WHEN CASE t0.c3  WHEN rt1.c2 THEN t0.c4 ELSE rt1.c1 END THEN CAST(rt1.c4 AS NUMERIC) ELSE rt1.c6 END);
SELECT DISTINCT * FROM rt1, t0 WHERE (((CASE WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c4 IN (t0.c4)) WHEN ((rt1.c5)<(t0.c2)) THEN t0.c4 COLLATE BINARY WHEN CASE t0.c3  WHEN rt1.c2 THEN t0.c4 ELSE rt1.c1 END THEN CAST(rt1.c4 AS NUMERIC) ELSE rt1.c6 END)AND((CAST(rt1.c0 AS REAL) IN ())))) ORDER BY ((((((((NULLIF(t0.c0, rt1.c6))AND(((((t0.c1)AND(NULL)))OR(rt1.c6)))))AND(ABS(t0.c3))))AND(UPPER(DISTINCT t0.c1))))OR((((rt1.c1, t0.c0, rt1.c3, rt1.c3)) NOT BETWEEN (('-1980698300', t0.c1, rt1.c6, t0.c1)) AND ((0.8801691197835113, rt1.c5, rt1.c1, rt1.c0))))) DESC  NULLS LAST, (((t0.c4, rt1.c2)) BETWEEN (((((t0.c1, x'fb', rt1.c3))<>((rt1.c6, -1280697404, t0.c4))), t0.c2)) AND ((NULL, CASE t0.c4  WHEN rt1.c5 THEN t0.c4 WHEN 0.30502087275362855 THEN t0.c2 WHEN rt1.c6 THEN x'' END))), (NOT (CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c4 END)) DESC LIMIT 0X0;
SELECT MIN(rt1.c6) FROM rt1 WHERE ((((rt1.c5, rt1.c3, rt1.c2)) NOT BETWEEN ((((rt1.c3)==(0Xfffffffff8398223)), ((((((((((-297187273)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c4)), ((rt1.c2)>=(rt1.c5)))) AND ((CAST(rt1.c3 AS REAL), rt1.c6, (rt1.c5 IN (rt1.c6))))));
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE ((((((rt1.c5, rt1.c3, rt1.c2)) NOT BETWEEN ((((rt1.c3)=(0xfffffffff8398223)), ((((((((((0xffffffffee494837)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c4)), ((rt1.c2)>=(rt1.c5)))) AND ((CAST(rt1.c3 AS REAL), rt1.c6, (rt1.c5 IN (rt1.c6))))))AND((((rt1.c2)) NOT BETWEEN ((0.7072822209789584)) AND ((0.8022463544342098))) COLLATE RTRIM))) ORDER BY (rt1.c1 IN (rt1.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((- (t0.c3))) ORDER BY ((1.601051117E9) NOT BETWEEN (((t0.c4)&(t0.c2))) AND (TRIM(DISTINCT t0.c1))), CAST(((((t0.c1)OR(t0.c0)))AND(t0.c3)) AS REAL)  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((- (t0.c3))) ORDER BY ((1.601051117E9) NOT BETWEEN (((t0.c4)&(t0.c2))) AND (TRIM(DISTINCT t0.c1))), CAST(((((t0.c1)OR(t0.c0)))AND(t0.c3)) AS REAL)  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CAST((((t0.c2, t0.c3)) BETWEEN ((t0.c3, t0.c1)) AND (('-248273772', t0.c0))) AS TEXT)) ORDER BY ((1.601051117E9) NOT BETWEEN (((t0.c4)&(t0.c2))) AND (TRIM(DISTINCT t0.c1))), CAST(((((t0.c1)OR(t0.c0)))AND(t0.c3)) AS REAL)  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) IS TRUE))!=(rt1.c4 COLLATE NOCASE))) ORDER BY rt1.c0  NULLS LAST, '-368242246', (((((rt1.c5) ISNULL), (rt1.c1 IN ())))<>(((rt1.c6 IN (rt1.c5, rt1.c4)), rt1.c6)))  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c0) IS TRUE))>(rt1.c4 COLLATE NOCASE)))AND(CASE TYPEOF(DISTINCT rt1.c6)  WHEN ((rt1.c5)<(rt1.c3)) THEN CAST(rt1.c5 AS INTEGER) WHEN ((0.46539763801619694) ISNULL) THEN CAST(rt1.c0 AS BLOB) ELSE json_array(rt1.c1, rt1.c3, x'3d') END))) ORDER BY rt1.c0  NULLS LAST, '-368242246', (((((rt1.c5) ISNULL), (rt1.c1 IN ())))!=(((rt1.c6 IN (rt1.c5, rt1.c4)), rt1.c6)))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) IS TRUE))!=(rt1.c4 COLLATE NOCASE))) ORDER BY rt1.c0  NULLS LAST, '-368242246', (((((rt1.c5) ISNULL), (rt1.c1 IN ())))<>(((rt1.c6 IN (rt1.c5, rt1.c4)), rt1.c6)))  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c0) IS TRUE))>(rt1.c4 COLLATE NOCASE)))AND(CASE TYPEOF(DISTINCT rt1.c6)  WHEN ((rt1.c5)<(rt1.c3)) THEN CAST(rt1.c5 AS INTEGER) WHEN ((0.46539763801619694) ISNULL) THEN CAST(rt1.c0 AS BLOB) ELSE json_array(rt1.c1, rt1.c3, x'3d') END))) ORDER BY rt1.c0  NULLS LAST, '-368242246', (((((rt1.c5) ISNULL), (rt1.c1 IN ())))!=(((rt1.c6 IN (rt1.c5, rt1.c4)), rt1.c6)))  NULLS FIRST LIMIT 0X0;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (json_extract(t0.c0 COLLATE NOCASE, ((t0.c2)!=(t0.c0)), (((t0.c0, t0.c4, t0.c0))=((t0.c3, t0.c1, t0.c0))))) ORDER BY ((t0.c0)GLOB(((t0.c4)IS(x'443140'))));
SELECT DISTINCT MAX(t0.c3) FROM t0 WHERE (json_extract(t0.c0 COLLATE NOCASE, ((t0.c2)<(t0.c0)), (((t0.c0, t0.c4, t0.c0))=((t0.c3, t0.c1, t0.c0))))) ORDER BY ((t0.c0)GLOB(((t0.c4)IS(x'443140'))));
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE ('1923174721');
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE ('1923174721');
SELECT * FROM t0 WHERE (((((t0.c1)OR('-1007303517'))) NOT NULL)) ORDER BY (((+ (t0.c4))) NOT NULL)  NULLS LAST, ((CASE WHEN t0.c3 THEN '' ELSE t0.c1 END)<=((((t0.c1, '(0+[r')) BETWEEN ((t0.c3, t0.c4)) AND ((t0.c3, t0.c2)))));
SELECT * FROM t0 WHERE (((((t0.c1)OR('-1007303517'))) NOT NULL)) ORDER BY (((+ (t0.c4))) NOT NULL)  NULLS LAST, ((CASE WHEN t0.c3 THEN '' ELSE t0.c1 END)<=((((t0.c1, '(0+[r')) BETWEEN ((t0.c3, t0.c4)) AND ((t0.c3, t0.c2))))) LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY (((+ (t0.c4))) NOT NULL)  NULLS LAST, ((CASE WHEN t0.c3 THEN '' ELSE t0.c1 END)<=((((t0.c1, '(0+[r')) BETWEEN ((t0.c3, t0.c4)) AND ((t0.c3, t0.c2))))) LIMIT 0x1;
SELECT * FROM t0 WHERE (((((t0.c1)OR('-1007303517'))) NOT NULL)) ORDER BY (((+ (t0.c4))) NOT NULL)  NULLS LAST, ((CASE WHEN t0.c3 THEN '' ELSE t0.c1 END)<=((((t0.c1, '(0+[r')) BETWEEN ((t0.c3, t0.c4)) AND ((t0.c3, t0.c2)))));
SELECT * FROM t0 WHERE (((((t0.c1)OR('-1007303517'))) NOT NULL)) ORDER BY (((+ (t0.c4))) NOT NULL)  NULLS LAST, ((CASE WHEN t0.c3 THEN '' ELSE t0.c1 END)<=((((t0.c1, '(0+[r')) BETWEEN ((t0.c3, t0.c4)) AND ((t0.c3, t0.c2))))) LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY (((+ (t0.c4))) NOT NULL)  NULLS LAST, ((CASE WHEN t0.c3 THEN '' ELSE t0.c1 END)<=((((t0.c1, '(0+[r')) BETWEEN ((t0.c3, t0.c4)) AND ((t0.c3, t0.c2))))) LIMIT 0x1;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (CASE t0.c2  WHEN ((t0.c3)<=(t0.c0)) THEN '-672978508' WHEN t0.c4 THEN ((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c3)) ELSE ((0.6358693266213444)%(t0.c3)) END);
SELECT ALL MAX(t0.c3) FROM t0 WHERE (CASE t0.c2  WHEN ((t0.c3)<=(t0.c0)) THEN '-672978508' WHEN t0.c4 THEN ((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c3)) ELSE ((0.6358693266213444)%(t0.c3)) END);
SELECT ALL * FROM t0, rt1 WHERE ((rt1.c6 IN (NULL))) ORDER BY json_remove(((rt1.c1)=(-467348146)), ((rt1.c6) NOT NULL))  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c6 IN (NULL)))AND((((((t0.c3 IN (t0.c3)))AND(HEX(rt1.c0))))OR(((((t0.c0)OR(rt1.c1)))AND(t0.c2))))))) ORDER BY json_remove(((rt1.c1)==(-467348146)), ((rt1.c6) NOT NULL))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CAST('1844222368' AS TEXT) COLLATE BINARY) ORDER BY json_remove(((rt1.c1)==(-467348146)), ((rt1.c6) NOT NULL))  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE ((rt1.c6 IN (NULL))) ORDER BY json_remove(((rt1.c1)=(-467348146)), ((rt1.c6) NOT NULL))  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c6 IN (NULL)))AND((((((t0.c3 IN (t0.c3)))AND(HEX(rt1.c0))))OR(((((t0.c0)OR(rt1.c1)))AND(t0.c2))))))) ORDER BY json_remove(((rt1.c1)==(-467348146)), ((rt1.c6) NOT NULL))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CAST('1844222368' AS TEXT) COLLATE BINARY) ORDER BY json_remove(((rt1.c1)==(-467348146)), ((rt1.c6) NOT NULL))  NULLS LAST;
SELECT * FROM rt1 WHERE (((rt1.c4)<=(CAST(rt1.c5 AS INTEGER))));
SELECT * FROM rt1 WHERE (((((rt1.c4)<=(CAST(rt1.c5 AS INTEGER))))AND(STRFTIME((rt1.c1 IN (rt1.c4)), 0X23fc3da9, ((rt1.c3) IS TRUE))))) LIMIT 0;
SELECT * FROM rt1 WHERE (((rt1.c4)<=(CAST(rt1.c5 AS INTEGER))));
SELECT * FROM rt1 WHERE (((((rt1.c4)<=(CAST(rt1.c5 AS INTEGER))))AND(STRFTIME((rt1.c1 IN (rt1.c4)), 0X23fc3da9, ((rt1.c3) IS TRUE))))) LIMIT 0;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c4) AND (t0.c0))) BETWEEN (CASE t0.c1  WHEN t0.c2 THEN 'J382 972-474T/!' WHEN t0.c4 THEN t0.c4 ELSE t0.c3 END) AND ((~ (t0.c4)))));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c2) BETWEEN (t0.c4) AND (t0.c0))) BETWEEN (CASE t0.c1  WHEN t0.c2 THEN 'J382 972-474T/!' WHEN t0.c4 THEN t0.c4 ELSE t0.c3 END) AND ((~ (t0.c4)))))AND(CASE WHEN ((t0.c2) BETWEEN ('RI') AND (t0.c1)) THEN (((t0.c0, t0.c3)) BETWEEN ((0xfffffffff2d8a94b, t0.c4)) AND ((t0.c2, t0.c2))) WHEN ((t0.c1)IS(t0.c2)) THEN CASE t0.c3  WHEN 0.2503464342806394 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END WHEN ((t0.c0) IS FALSE) THEN (+ (t0.c0)) END))) ORDER BY '-928078585' DESC, CASE (x'6e7c21d1' IN (t0.c2, t0.c1, t0.c0))  WHEN CAST('R+{^c]/' AS NUMERIC) THEN ((t0.c0)+(t0.c3)) WHEN ((t0.c4)<<(t0.c2)) THEN ((t0.c1) IS FALSE) WHEN ((((((((((((t0.c2)AND(t0.c2)))OR(t0.c3)))OR(t0.c0)))AND(t0.c3)))OR(x'')))OR(t0.c1)) THEN (~ (t0.c1)) ELSE (t0.c2 IN (t0.c3)) END  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE (137169401) ORDER BY ((((rt1.c0)) BETWEEN ((t0.c1)) AND ((t0.c3))) IN (((((rt1.c2)OR(rt1.c3)))OR(rt1.c6)))) DESC, CASE NULL  WHEN (((rt1.c6, rt1.c3)) NOT BETWEEN ((rt1.c2, t0.c2)) AND ((rt1.c5, rt1.c0))) THEN '-862632216' WHEN rt1.c5 COLLATE NOCASE THEN ((0X6d2ec887) ISNULL) WHEN NULL COLLATE NOCASE THEN CASE t0.c2  WHEN t0.c4 THEN -2065710970 WHEN t0.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c2 END END ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((0x82d09f9)AND(LIKELY(DISTINCT rt1.c3)))) ORDER BY ((((rt1.c0)) BETWEEN ((t0.c1)) AND ((t0.c3))) IN (((((rt1.c2)OR(rt1.c3)))OR(rt1.c6)))) DESC, CASE NULL  WHEN (((rt1.c6, rt1.c3)) NOT BETWEEN ((rt1.c2, t0.c2)) AND ((rt1.c5, rt1.c0))) THEN '-862632216' WHEN rt1.c5 COLLATE NOCASE THEN ((1831782535) ISNULL) WHEN NULL COLLATE NOCASE THEN CASE t0.c2  WHEN t0.c4 THEN -2065710970 WHEN t0.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c2 END END ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (137169401) ORDER BY ((((rt1.c0)) BETWEEN ((t0.c1)) AND ((t0.c3))) IN (((((rt1.c2)OR(rt1.c3)))OR(rt1.c6)))) DESC, CASE NULL  WHEN (((rt1.c6, rt1.c3)) NOT BETWEEN ((rt1.c2, t0.c2)) AND ((rt1.c5, rt1.c0))) THEN '-862632216' WHEN rt1.c5 COLLATE NOCASE THEN ((0X6d2ec887) ISNULL) WHEN NULL COLLATE NOCASE THEN CASE t0.c2  WHEN t0.c4 THEN -2065710970 WHEN t0.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c2 END END ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((0x82d09f9)AND(LIKELY(DISTINCT rt1.c3)))) ORDER BY ((((rt1.c0)) BETWEEN ((t0.c1)) AND ((t0.c3))) IN (((((rt1.c2)OR(rt1.c3)))OR(rt1.c6)))) DESC, CASE NULL  WHEN (((rt1.c6, rt1.c3)) NOT BETWEEN ((rt1.c2, t0.c2)) AND ((rt1.c5, rt1.c0))) THEN '-862632216' WHEN rt1.c5 COLLATE NOCASE THEN ((1831782535) ISNULL) WHEN NULL COLLATE NOCASE THEN CASE t0.c2  WHEN t0.c4 THEN -2065710970 WHEN t0.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c2 END END ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c6)) AS NUMERIC));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c6)) AS NUMERIC)) LIMIT 0X1 INTERSECT SELECT * FROM rt1 NATURAL JOIN t0 WHERE (CAST(((t0.c3)+(t0.c1)) AS NUMERIC)) LIMIT 0x1;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c6)) AS NUMERIC));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c6)) AS NUMERIC)) LIMIT 0X1 INTERSECT SELECT * FROM rt1 NATURAL JOIN t0 WHERE (CAST(((t0.c3)+(t0.c1)) AS NUMERIC)) LIMIT 0x1;
SELECT ALL * FROM rt1 NOT INDEXED, t0 NOT INDEXED WHERE ((+ (CASE rt1.c6  WHEN rt1.c4 THEN rt1.c3 WHEN t0.c3 THEN t0.c4 WHEN rt1.c0 THEN t0.c1 WHEN t0.c1 THEN rt1.c1 WHEN 0.6279340930176716 THEN t0.c3 WHEN rt1.c2 THEN rt1.c3 WHEN t0.c4 THEN t0.c4 END)));
SELECT ALL * FROM rt1, t0 WHERE ((((+ (CASE rt1.c6  WHEN rt1.c4 THEN rt1.c3 WHEN t0.c3 THEN t0.c4 WHEN rt1.c0 THEN t0.c1 WHEN t0.c1 THEN rt1.c1 WHEN 0.6279340930176716 THEN t0.c3 WHEN rt1.c2 THEN rt1.c3 WHEN t0.c4 THEN t0.c4 END)))AND(CASE CAST(rt1.c4 AS NUMERIC)  WHEN t0.c1 COLLATE RTRIM THEN rt1.c1 WHEN TIME(rt1.c4, 0.7505209618389963, rt1.c0, rt1.c1, t0.c0) THEN (- (rt1.c3)) ELSE (NOT ('浊A*')) END))) ORDER BY ((((t0.c0)IS NOT(t0.c4)))<(((NULL) NOTNULL))) DESC  NULLS LAST INTERSECT SELECT * FROM rt1, t0 WHERE (((((((((t0.c4 COLLATE NOCASE)OR(t0.c1 COLLATE BINARY)))OR(((t0.c0) IS TRUE))))OR(((rt1.c4)AND(t0.c2)))))AND(((t0.c1)<=(rt1.c0))))) ORDER BY ((((t0.c0)IS NOT(t0.c4)))<(((NULL) NOTNULL))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 NOT INDEXED, t0 NOT INDEXED WHERE ((+ (CASE rt1.c6  WHEN rt1.c4 THEN rt1.c3 WHEN t0.c3 THEN t0.c4 WHEN rt1.c0 THEN t0.c1 WHEN t0.c1 THEN rt1.c1 WHEN 0.6279340930176716 THEN t0.c3 WHEN rt1.c2 THEN rt1.c3 WHEN t0.c4 THEN t0.c4 END)));
SELECT ALL * FROM rt1, t0 WHERE ((((+ (CASE rt1.c6  WHEN rt1.c4 THEN rt1.c3 WHEN t0.c3 THEN t0.c4 WHEN rt1.c0 THEN t0.c1 WHEN t0.c1 THEN rt1.c1 WHEN 0.6279340930176716 THEN t0.c3 WHEN rt1.c2 THEN rt1.c3 WHEN t0.c4 THEN t0.c4 END)))AND(CASE CAST(rt1.c4 AS NUMERIC)  WHEN t0.c1 COLLATE RTRIM THEN rt1.c1 WHEN TIME(rt1.c4, 0.7505209618389963, rt1.c0, rt1.c1, t0.c0) THEN (- (rt1.c3)) ELSE (NOT ('浊A*')) END))) ORDER BY ((((t0.c0)IS NOT(t0.c4)))<(((NULL) NOTNULL))) DESC  NULLS LAST INTERSECT SELECT * FROM rt1, t0 WHERE (((((((((t0.c4 COLLATE NOCASE)OR(t0.c1 COLLATE BINARY)))OR(((t0.c0) IS TRUE))))OR(((rt1.c4)AND(t0.c2)))))AND(((t0.c1)<=(rt1.c0))))) ORDER BY ((((t0.c0)IS NOT(t0.c4)))<(((NULL) NOTNULL))) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (((((((((((((((((((((((((rt1.c0)OR(rt1.c3)))AND(0.7208732025697976)))OR(rt1.c4)))AND(rt1.c3)))AND(0.5838302190102141)))AND(NULL)))AND((rt1.c1 IN (rt1.c4, '-856217189')))))AND(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 ELSE 0.6560603712305876 END)))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))OR('|I஘%2jt5')))OR(((((rt1.c1)AND(rt1.c4)))AND(rt1.c0)))))OR(((0.2350106034821665)>(rt1.c4)))));
SELECT ALL * FROM rt1 WHERE (((((((((((((((((((((((((rt1.c0)OR(rt1.c3)))AND(0.7208732025697976)))OR(rt1.c4)))AND(rt1.c3)))AND(0.5838302190102141)))AND(NULL)))AND((rt1.c1 IN (rt1.c4, '-856217189')))))AND(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 ELSE 0.6560603712305876 END)))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))OR('|I஘%2jt5')))OR(((((rt1.c1)AND(rt1.c4)))AND(rt1.c0)))))OR(((0.2350106034821665)>(rt1.c4))))) ORDER BY NULL  NULLS LAST, rt1.c6 DESC, CAST(rt1.c4 AS NUMERIC) LIMIT 0;
SELECT * FROM rt1 WHERE (((((((((((((((((((((((((rt1.c0)OR(rt1.c3)))AND(0.7208732025697976)))OR(rt1.c4)))AND(rt1.c3)))AND(0.5838302190102141)))AND(NULL)))AND((rt1.c1 IN (rt1.c4, '-856217189')))))AND(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 ELSE 0.6560603712305876 END)))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))OR('|I஘%2jt5')))OR(((((rt1.c1)AND(rt1.c4)))AND(rt1.c0)))))OR(((0.2350106034821665)>(rt1.c4)))));
SELECT ALL * FROM rt1 WHERE (((((((((((((((((((((((((rt1.c0)OR(rt1.c3)))AND(0.7208732025697976)))OR(rt1.c4)))AND(rt1.c3)))AND(0.5838302190102141)))AND(NULL)))AND((rt1.c1 IN (rt1.c4, '-856217189')))))AND(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 ELSE 0.6560603712305876 END)))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))OR('|I஘%2jt5')))OR(((((rt1.c1)AND(rt1.c4)))AND(rt1.c0)))))OR(((0.2350106034821665)>(rt1.c4))))) ORDER BY NULL  NULLS LAST, rt1.c6 DESC, CAST(rt1.c4 AS NUMERIC) LIMIT 0;
SELECT ALL MAX(rt1.c5) FROM rt1, t0 WHERE (MAX(CAST(rt1.c1 AS INTEGER), ((t0.c2)>=(rt1.c0))));
SELECT DISTINCT MAX(rt1.c5) FROM rt1, t0 WHERE (((MAX(CAST(rt1.c1 AS INTEGER), ((t0.c2)>(rt1.c0))))AND((((((t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, rt1.c5)) AND ((rt1.c2, rt1.c3)))) IS FALSE))));
SELECT ALL MAX(t0.c0) FROM rt1, t0 WHERE (rt1.c0 COLLATE BINARY) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (t0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM rt1, t0 WHERE (((rt1.c0 COLLATE BINARY)AND((((((((rt1.c6)OR(t0.c0)))AND(rt1.c2)))OR(t0.c1)) IN ())))) ORDER BY ((rt1.c3)/(t0.c0)) COLLATE BINARY DESC  NULLS FIRST, CASE (((t0.c1, rt1.c1)) BETWEEN ((rt1.c5, rt1.c1)) AND ((t0.c4, '')))  WHEN ((rt1.c3)>(rt1.c4)) THEN (((rt1.c3))<((t0.c4))) WHEN ((rt1.c3) NOTNULL) THEN NULL END DESC LIMIT 0x3 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM rt1, t0 WHERE (CAST(((((t0.c4)AND(t0.c1)))OR(t0.c3)) AS TEXT)) ORDER BY ((rt1.c3)/(t0.c0)) COLLATE BINARY DESC  NULLS FIRST, CASE (((t0.c1, rt1.c1)) BETWEEN ((rt1.c5, rt1.c1)) AND ((t0.c4, '')))  WHEN ((rt1.c3)>(rt1.c4)) THEN (((rt1.c3))<((t0.c4))) WHEN ((rt1.c3) NOTNULL) THEN NULL END DESC LIMIT 3;
SELECT MAX(rt1.c2) FROM rt1, t0 WHERE (TYPEOF(DISTINCT (((rt1.c3)) BETWEEN ((8.21932353E8)) AND (('P8[')))));
SELECT DISTINCT MAX(rt1.c2) FROM rt1, t0 WHERE (((TYPEOF(DISTINCT (((rt1.c3)) BETWEEN ((8.21932353E8)) AND (('P8[')))))AND((((((rt1.c3))==((rt1.c1))))&(((rt1.c2) ISNULL)))))) ORDER BY 'U' DESC  NULLS LAST INTERSECT SELECT DISTINCT MAX(rt1.c2) FROM rt1, t0 WHERE ((~ ((((rt1.c5, rt1.c5)) NOT BETWEEN ((t0.c4, 'Ane(,')) AND ((t0.c0, t0.c3)))))) ORDER BY 'U' DESC  NULLS LAST;
SELECT ALL MIN(rt1.c3) FROM rt1 LEFT OUTER JOIN t0 ON ((json_extract('-813934020', rt1.c6, t0.c0)) IS TRUE) WHERE (((((((((((t0.c4)AND(rt1.c6)))AND(t0.c0)))OR(CAST(t0.c4 AS NUMERIC))))OR(CASE WHEN rt1.c0 THEN t0.c0 WHEN t0.c3 THEN rt1.c6 END)))AND(json_array_length(t0.c0)))) ORDER BY (- (CAST(rt1.c1 AS BLOB))) DESC  NULLS FIRST, 1631567833, TYPEOF(MIN('fK夠aH', rt1.c0));
SELECT MIN(rt1.c3) FROM rt1 INNER JOIN t0 ON ((json_extract('-813934020', rt1.c6, t0.c0)) IS TRUE) WHERE (((((((((((((t0.c4)AND(rt1.c6)))AND(t0.c0)))OR(CAST(t0.c4 AS NUMERIC))))OR(CASE WHEN rt1.c0 THEN t0.c0 WHEN t0.c3 THEN rt1.c6 END)))AND(json_array_length(t0.c0))))AND(LOWER(CASE t0.c3  WHEN rt1.c3 THEN rt1.c2 WHEN t0.c0 THEN t0.c0 ELSE rt1.c2 END)))) ORDER BY ((((((((x'294b4d6f')IS NOT(t0.c4)))OR((rt1.c2 IN (rt1.c5)))))AND(CASE rt1.c1  WHEN NULL THEN t0.c0 END)))OR(((t0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST LIMIT 0 INTERSECT SELECT MIN(rt1.c3) FROM rt1 INNER JOIN t0 ON ((json_extract('-813934020', rt1.c6, t0.c0)) IS TRUE) WHERE (rt1.c3 COLLATE NOCASE) ORDER BY ((((((((x'294b4d6f')IS NOT(t0.c4)))OR((rt1.c2 IN (rt1.c5)))))AND(CASE rt1.c1  WHEN NULL THEN t0.c0 END)))OR(((t0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST LIMIT 0;
SELECT ALL MAX(t0.c2) FROM t0 WHERE ((((x'f0a9' IN (t0.c2)))IS NOT(((t0.c2)AND(t0.c0))))) ORDER BY (t0.c4 IN ()) COLLATE RTRIM ASC, ((('*', ((t0.c3) NOT BETWEEN (t0.c4) AND (t0.c3)), (((t0.c4))=((t0.c2)))))<=((CASE x''  WHEN t0.c4 THEN t0.c3 WHEN '-895379847' THEN t0.c2 WHEN t0.c4 THEN t0.c2 WHEN t0.c4 THEN t0.c4 WHEN 0.6765441728113787 THEN t0.c3 ELSE -1508338485 END, ((t0.c2)/(t0.c0)), ((t0.c4)/(t0.c2))))) ASC  NULLS FIRST, ((CASE t0.c4  WHEN t0.c4 THEN t0.c3 WHEN t0.c2 THEN t0.c3 WHEN t0.c1 THEN t0.c3 WHEN x'b3' THEN t0.c2 ELSE t0.c1 END)<(t0.c3));
SELECT DISTINCT MAX(t0.c2) FROM t0 WHERE ((((((x'f0a9' IN (t0.c2)))IS NOT(((t0.c2)AND(t0.c0)))))AND(MAX((x'ba' IN (t0.c2)), ((('1539838781')) NOT BETWEEN ((t0.c3)) AND ((t0.c2))), (t0.c3 IN ()))))) ORDER BY (t0.c4 IN ()) COLLATE RTRIM ASC, ((('*', ((t0.c3) NOT BETWEEN (t0.c4) AND (t0.c3)), (((t0.c4))=((t0.c2)))))<=((CASE x''  WHEN t0.c4 THEN t0.c3 WHEN '-895379847' THEN t0.c2 WHEN t0.c4 THEN t0.c2 WHEN t0.c4 THEN t0.c4 WHEN 0.6765441728113787 THEN t0.c3 ELSE 0Xffffffffa61894cb END, ((t0.c2)/(t0.c0)), ((t0.c4)/(t0.c2))))) ASC  NULLS FIRST, ((CASE t0.c4  WHEN t0.c4 THEN t0.c3 WHEN t0.c2 THEN t0.c3 WHEN t0.c1 THEN t0.c3 WHEN x'b3' THEN t0.c2 ELSE t0.c1 END)<(t0.c3)) INTERSECT SELECT DISTINCT MAX(t0.c2) FROM t0 WHERE ((+ ((t0.c2 IN (t0.c2))))) ORDER BY (t0.c4 IN ()) COLLATE RTRIM ASC, ((('*', ((t0.c3) NOT BETWEEN (t0.c4) AND (t0.c3)), (((t0.c4))=((t0.c2)))))<=((CASE x''  WHEN t0.c4 THEN t0.c3 WHEN '-895379847' THEN t0.c2 WHEN t0.c4 THEN t0.c2 WHEN t0.c4 THEN t0.c4 WHEN 0.6765441728113787 THEN t0.c3 ELSE 0Xffffffffa61894cb END, ((t0.c2)/(t0.c0)), ((t0.c4)/(t0.c2))))) ASC  NULLS FIRST, ((CASE t0.c4  WHEN t0.c4 THEN t0.c3 WHEN t0.c2 THEN t0.c3 WHEN t0.c1 THEN t0.c3 WHEN x'b3' THEN t0.c2 ELSE t0.c1 END)<(t0.c3));
SELECT ALL * FROM t0 WHERE (UPPER(CASE t0.c1  WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c1 END)) ORDER BY (((((t0.c4)*(t0.c1)), CAST(t0.c1 AS INTEGER)))==(((((t0.c0))=((t0.c0))), ((t0.c1)=(t0.c0))))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((UPPER(CASE t0.c1  WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c1 END))AND('-609987342'))) ORDER BY (((((t0.c4)*(t0.c1)), CAST(t0.c1 AS INTEGER)))==(((((t0.c0))=((t0.c0))), ((t0.c1)==(t0.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (UPPER(CASE t0.c1  WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c1 END)) ORDER BY (((((t0.c4)*(t0.c1)), CAST(t0.c1 AS INTEGER)))==(((((t0.c0))=((t0.c0))), ((t0.c1)=(t0.c0))))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((UPPER(CASE t0.c1  WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c1 END))AND('-609987342'))) ORDER BY (((((t0.c4)*(t0.c1)), CAST(t0.c1 AS INTEGER)))==(((((t0.c0))=((t0.c0))), ((t0.c1)==(t0.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON CASE ((rt1.c4) IS TRUE)  WHEN ((rt1.c6) NOT BETWEEN (rt1.c4) AND (t0.c1)) THEN (~ (x'92')) WHEN ((t0.c4)&('')) THEN ((rt1.c0) NOT BETWEEN (rt1.c6) AND (t0.c1)) ELSE rt1.c4 END WHERE (((((rt1.c2 COLLATE RTRIM)OR((((rt1.c4, rt1.c1, rt1.c2))>((t0.c3, rt1.c2, t0.c1))))))AND((rt1.c1 IN (rt1.c1)))));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON CASE ((rt1.c4) IS TRUE)  WHEN ((rt1.c6) NOT BETWEEN (rt1.c4) AND (t0.c1)) THEN (~ (x'92')) WHEN ((t0.c4)&('')) THEN ((rt1.c0) NOT BETWEEN (rt1.c6) AND (t0.c1)) ELSE rt1.c4 END WHERE (((((((rt1.c2 COLLATE RTRIM)OR((((rt1.c4, rt1.c1, rt1.c2))>((t0.c3, rt1.c2, t0.c1))))))AND((rt1.c1 IN (rt1.c1)))))AND(LIKELY((t0.c2 IN ()))))) LIMIT 1;
SELECT COUNT(*) FROM rt1 WHERE ((((1.923174721E9, rt1.c5, rt1.c0)) NOT BETWEEN ((DATETIME(rt1.c2, rt1.c1, rt1.c4, rt1.c6, rt1.c1, 0.17683141249632017), (rt1.c3 IN ()), rt1.c1)) AND ((((((((rt1.c4)OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c5)), ((rt1.c4)||(rt1.c3)), 2342307)))) ORDER BY SQLITE_VERSION()  NULLS FIRST, 'KK4/8\', CAST(rt1.c6 AS REAL)  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((1.923174721E9, rt1.c5, rt1.c0)) NOT BETWEEN ((DATETIME(rt1.c2, rt1.c1, rt1.c4, rt1.c6, rt1.c1, 0.17683141249632017), (rt1.c3 IN ()), rt1.c1)) AND ((((((((rt1.c4)OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c5)), ((rt1.c4)||(rt1.c3)), 2342307)))) ORDER BY ((((rt1.c5))<=(('-5219722'))) IN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c3))))  NULLS FIRST, ((((rt1.c5) IS TRUE))-(rt1.c4)) ASC, (((~ (rt1.c2)))GLOB(((rt1.c6) IS TRUE))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE ((((NOT (x'2120')))+(((t0.c0)+(rt1.c5)))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((NOT (x'2120')))+(((t0.c0)+(rt1.c5)))))AND(TRIM(DISTINCT (((rt1.c0, rt1.c6)) NOT BETWEEN ((rt1.c2, t0.c0)) AND ((rt1.c5, t0.c0)))))));
SELECT ALL * FROM t0, rt1 WHERE ((((NOT (x'2120')))+(((t0.c0)+(rt1.c5)))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((NOT (x'2120')))+(((t0.c0)+(rt1.c5)))))AND(TRIM(DISTINCT (((rt1.c0, rt1.c6)) NOT BETWEEN ((rt1.c2, t0.c0)) AND ((rt1.c5, t0.c0)))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) IS FALSE))AND(((((((t0.c3)AND(t0.c3)))AND(NULL)))OR(t0.c2)))))AND((t0.c1 IN ()))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((t0.c0) IS FALSE))AND(((((((t0.c3)AND(t0.c3)))AND(NULL)))OR(t0.c2)))))AND((t0.c1 IN ()))))AND(((t0.c1) NOT BETWEEN ((((t0.c3, '嚲Qg', t0.c4))>((t0.c4, t0.c1, '44439548')))) AND (((((((((t0.c2)AND(t0.c0)))AND(t0.c3)))AND(t0.c3)))OR(t0.c0))))))) ORDER BY CASE ((t0.c3)LIKE(t0.c1))  WHEN ((t0.c3)<(t0.c1)) THEN CAST(t0.c1 AS BLOB) ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c4)) END  NULLS FIRST, CAST(t0.c3 AS INTEGER) COLLATE BINARY ASC INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (json_array_length(((t0.c3) NOT NULL))) ORDER BY CASE ((t0.c3)LIKE(t0.c1))  WHEN ((t0.c3)<(t0.c1)) THEN CAST(t0.c1 AS BLOB) ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c4)) END  NULLS FIRST, CAST(t0.c3 AS INTEGER) COLLATE BINARY ASC;
SELECT ALL MAX(t0.c4) FROM t0 WHERE ((((t0.c4)+(t0.c0)) IN (((('1239046975', t0.c2)) NOT BETWEEN ((t0.c4, t0.c1)) AND ((t0.c2, t0.c0))), CASE t0.c0  WHEN t0.c3 THEN t0.c0 ELSE t0.c1 END)));
SELECT MAX(t0.c4) FROM t0 WHERE ((((((t0.c4)+(t0.c0)) IN (((('1239046975', t0.c2)) NOT BETWEEN ((t0.c4, t0.c1)) AND ((t0.c2, t0.c0))), CASE t0.c0  WHEN t0.c3 THEN t0.c0 ELSE t0.c1 END)))AND(CASE t0.c0  WHEN (((t0.c2))<(('1239046975'))) THEN (((((('')AND(t0.c3)))AND(t0.c1)))AND(t0.c0)) END))) ORDER BY CASE (0.24461616445562462 IN (t0.c2, t0.c4))  WHEN ((t0.c1)*(t0.c4)) THEN ((t0.c1)IS(t0.c3)) WHEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) THEN t0.c1 COLLATE RTRIM WHEN x'a79931' THEN t0.c1 ELSE ((t0.c4) BETWEEN (t0.c3) AND (t0.c0)) END ASC, (((t0.c4, t0.c3, t0.c2)) BETWEEN ((CASE WHEN t0.c1 THEN NULL WHEN t0.c1 THEN t0.c4 ELSE t0.c1 END, (t0.c4 IN (t0.c2, t0.c3)), (t0.c0 IN (t0.c0)))) AND ((t0.c3, ((((t0.c4)OR(t0.c2)))AND(t0.c1)), NULL))) DESC INTERSECT SELECT MAX(t0.c4) FROM t0 WHERE (t0.c1) ORDER BY CASE (0.24461616445562462 IN (t0.c2, t0.c4))  WHEN ((t0.c1)*(t0.c4)) THEN ((t0.c1)IS(t0.c3)) WHEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) THEN t0.c1 COLLATE RTRIM WHEN x'a79931' THEN t0.c1 ELSE ((t0.c4) BETWEEN (t0.c3) AND (t0.c0)) END ASC, (((t0.c4, t0.c3, t0.c2)) BETWEEN ((CASE WHEN t0.c1 THEN NULL WHEN t0.c1 THEN t0.c4 ELSE t0.c1 END, (t0.c4 IN (t0.c2, t0.c3)), (t0.c0 IN (t0.c0)))) AND ((t0.c3, ((((t0.c4)OR(t0.c2)))AND(t0.c1)), NULL))) DESC;
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE (((((((((((((rt1.c6)AND(rt1.c5)))AND(rt1.c3)))OR(rt1.c6 COLLATE NOCASE)))AND((rt1.c0 IN ()))))OR(rt1.c6 COLLATE RTRIM)))AND(NULLIF(x'', rt1.c2)))) ORDER BY ((CAST(rt1.c4 AS TEXT))<<(((0.58797241570325) NOTNULL))) ASC;
SELECT MIN(rt1.c6) FROM rt1 WHERE (((((((((((((rt1.c6)AND(rt1.c5)))AND(rt1.c3)))OR(rt1.c6 COLLATE NOCASE)))AND((rt1.c0 IN ()))))OR(rt1.c6 COLLATE RTRIM)))AND(NULLIF(x'', rt1.c2)))) ORDER BY ((CAST(rt1.c4 AS TEXT))<<(((0.58797241570325) NOTNULL))) ASC;
SELECT * FROM t0, rt1 WHERE (ABS(DISTINCT (NOT (rt1.c0))));
SELECT * FROM t0, rt1 WHERE (ABS(DISTINCT (NOT (rt1.c0)))) ORDER BY (((CASE rt1.c4  WHEN rt1.c6 THEN '-1314074616' WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN '' ELSE rt1.c6 END, (- (rt1.c5)), ((t0.c3) BETWEEN (rt1.c3) AND (t0.c1)), (((rt1.c0))<((rt1.c6)))))<((0.19230996734007133 COLLATE BINARY, PRINTF(t0.c1, rt1.c2), ((rt1.c3)-(rt1.c6)), t0.c4 COLLATE RTRIM))) DESC, ((x'be')&(((t0.c0)||(rt1.c2)))) DESC LIMIT 4;
SELECT * FROM t0, rt1 WHERE (ABS(DISTINCT (NOT (rt1.c0))));
SELECT * FROM t0, rt1 WHERE (ABS(DISTINCT (NOT (rt1.c0)))) ORDER BY (((CASE rt1.c4  WHEN rt1.c6 THEN '-1314074616' WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN '' ELSE rt1.c6 END, (- (rt1.c5)), ((t0.c3) BETWEEN (rt1.c3) AND (t0.c1)), (((rt1.c0))<((rt1.c6)))))<((0.19230996734007133 COLLATE BINARY, PRINTF(t0.c1, rt1.c2), ((rt1.c3)-(rt1.c6)), t0.c4 COLLATE RTRIM))) DESC, ((x'be')&(((t0.c0)||(rt1.c2)))) DESC LIMIT 4;
SELECT * FROM rt1 WHERE (CAST((+ (rt1.c6)) AS NUMERIC)) ORDER BY (((0.9649523516241096, (((rt1.c4))==((rt1.c2)))))>=((((((rt1.c3)AND(rt1.c5)))AND(rt1.c2)), (+ (rt1.c2))))), ((((((rt1.c0)AND(NULL)))OR(rt1.c0)))OR(rt1.c1)) COLLATE BINARY COLLATE NOCASE ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (CAST((+ (rt1.c6)) AS NUMERIC)) ORDER BY rt1.c1 COLLATE NOCASE, ((((((rt1.c6)AND(rt1.c2)))AND(rt1.c6)))OR(rt1.c6)) COLLATE NOCASE ASC LIMIT 0x1;
SELECT * FROM rt1 WHERE (CAST((+ (rt1.c6)) AS NUMERIC)) ORDER BY (((0.9649523516241096, (((rt1.c4))==((rt1.c2)))))>=((((((rt1.c3)AND(rt1.c5)))AND(rt1.c2)), (+ (rt1.c2))))), ((((((rt1.c0)AND(NULL)))OR(rt1.c0)))OR(rt1.c1)) COLLATE BINARY COLLATE NOCASE ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (CAST((+ (rt1.c6)) AS NUMERIC)) ORDER BY rt1.c1 COLLATE NOCASE, ((((((rt1.c6)AND(rt1.c2)))AND(rt1.c6)))OR(rt1.c6)) COLLATE NOCASE ASC LIMIT 0x1;
SELECT * FROM rt1 WHERE ((((((rt1.c2))<((rt1.c6)))) ISNULL)) ORDER BY STRFTIME(CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c2 END, -6.98996151E8, (rt1.c4 IN (rt1.c3)), ((rt1.c3) IS TRUE), ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c5)), CAST(rt1.c3 AS TEXT))  NULLS FIRST, (((rt1.c0, rt1.c4)) BETWEEN ((((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c5)), (NOT (rt1.c5)))) AND ((((0Xffffffffe89ee0ff) NOT BETWEEN (rt1.c2) AND (rt1.c0)), rt1.c0 COLLATE NOCASE)))  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c2))<((rt1.c6)))) ISNULL))AND((((((((rt1.c4)OR(rt1.c5)))OR(rt1.c4)))AND(rt1.c1)) IN (((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c3))))))) ORDER BY STRFTIME(CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c2 END, -6.98996151E8, (rt1.c4 IN (rt1.c3)), ((rt1.c3) IS TRUE), ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c5)), CAST(rt1.c3 AS TEXT))  NULLS FIRST, (((rt1.c0, rt1.c4)) BETWEEN ((((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c5)), (NOT (rt1.c5)))) AND ((((-392240897) NOT BETWEEN (rt1.c2) AND (rt1.c0)), rt1.c0 COLLATE NOCASE)))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((((((((((((CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END)AND(((rt1.c2)IS NOT(rt1.c3)))))OR((((rt1.c2))<((rt1.c6))))))OR(rt1.c4 COLLATE NOCASE)))AND(CAST(x'07ed' AS BLOB))))OR(CASE rt1.c6  WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c4 END)))AND(((rt1.c0) ISNULL))))AND(((rt1.c1) IS TRUE)))) ORDER BY STRFTIME(CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c2 END, -6.98996151E8, (rt1.c4 IN (rt1.c3)), ((rt1.c3) IS TRUE), ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c5)), CAST(rt1.c3 AS TEXT))  NULLS FIRST, (((rt1.c0, rt1.c4)) BETWEEN ((((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c5)), (NOT (rt1.c5)))) AND ((((0Xffffffffe89ee0ff) NOT BETWEEN (rt1.c2) AND (rt1.c0)), rt1.c0 COLLATE NOCASE)))  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt1 WHERE ((((((rt1.c2))<((rt1.c6)))) ISNULL)) ORDER BY STRFTIME(CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c2 END, -6.98996151E8, (rt1.c4 IN (rt1.c3)), ((rt1.c3) IS TRUE), ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c5)), CAST(rt1.c3 AS TEXT))  NULLS FIRST, (((rt1.c0, rt1.c4)) BETWEEN ((((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c5)), (NOT (rt1.c5)))) AND ((((0Xffffffffe89ee0ff) NOT BETWEEN (rt1.c2) AND (rt1.c0)), rt1.c0 COLLATE NOCASE)))  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c2))<((rt1.c6)))) ISNULL))AND((((((((rt1.c4)OR(rt1.c5)))OR(rt1.c4)))AND(rt1.c1)) IN (((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c3))))))) ORDER BY STRFTIME(CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c2 END, -6.98996151E8, (rt1.c4 IN (rt1.c3)), ((rt1.c3) IS TRUE), ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c5)), CAST(rt1.c3 AS TEXT))  NULLS FIRST, (((rt1.c0, rt1.c4)) BETWEEN ((((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c5)), (NOT (rt1.c5)))) AND ((((-392240897) NOT BETWEEN (rt1.c2) AND (rt1.c0)), rt1.c0 COLLATE NOCASE)))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((((((((((((CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END)AND(((rt1.c2)IS NOT(rt1.c3)))))OR((((rt1.c2))<((rt1.c6))))))OR(rt1.c4 COLLATE NOCASE)))AND(CAST(x'07ed' AS BLOB))))OR(CASE rt1.c6  WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c4 END)))AND(((rt1.c0) ISNULL))))AND(((rt1.c1) IS TRUE)))) ORDER BY STRFTIME(CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c2 END, -6.98996151E8, (rt1.c4 IN (rt1.c3)), ((rt1.c3) IS TRUE), ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c5)), CAST(rt1.c3 AS TEXT))  NULLS FIRST, (((rt1.c0, rt1.c4)) BETWEEN ((((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c5)), (NOT (rt1.c5)))) AND ((((0Xffffffffe89ee0ff) NOT BETWEEN (rt1.c2) AND (rt1.c0)), rt1.c0 COLLATE NOCASE)))  NULLS FIRST LIMIT 0x0;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON (((rt1.c4, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c4, t0.c4, t0.c0)) AND ((t0.c2, t0.c2, rt1.c1))) COLLATE NOCASE WHERE (((((((t0.c1)<=(rt1.c3)))OR(CASE WHEN t0.c4 THEN t0.c2 ELSE rt1.c3 END)))AND(((rt1.c1)IS(rt1.c3)))));
SELECT DISTINCT COUNT(*) FROM rt1 CROSS JOIN t0 ON (((rt1.c4, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c4, t0.c4, t0.c0)) AND ((t0.c2, t0.c2, rt1.c1))) COLLATE NOCASE WHERE (((((((t0.c1)<=(rt1.c3)))OR(CASE WHEN t0.c4 THEN t0.c2 ELSE rt1.c3 END)))AND(((rt1.c1)IS(rt1.c3)))));
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c6)OR(((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c4)))))OR(((rt1.c6)OR(rt1.c3)))))OR((((rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c6)) AND ((rt1.c2, rt1.c5))))))AND(CAST(rt1.c2 AS INTEGER))))OR(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN NULL END)));
SELECT COUNT(*) FROM rt1 WHERE (((((((((((((rt1.c6)OR(((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c4)))))OR(((rt1.c6)OR(rt1.c3)))))OR((((rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c6)) AND ((rt1.c2, rt1.c5))))))AND(CAST(rt1.c2 AS INTEGER))))OR(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN NULL END)))AND((CAST(rt1.c4 AS NUMERIC) IN ())))) LIMIT 0 INTERSECT SELECT COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c3)<(NULL))))) LIMIT 0X0;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c3) AND (t0.c1)))||(t0.c3)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c3) AND (t0.c1)))||(t0.c3))) ORDER BY 'Q\' DESC  NULLS LAST, ((((t0.c4)AND('-1191521787')))OR(((t0.c2)/(t0.c0)))) DESC  NULLS LAST;
SELECT * FROM t0 INNER JOIN rt1 ON (((rt1.c3, t0.c1, t0.c4)) BETWEEN ((CASE WHEN t0.c3 THEN rt1.c4 WHEN t0.c1 THEN 'y' WHEN t0.c2 THEN t0.c1 WHEN rt1.c2 THEN rt1.c4 WHEN t0.c2 THEN t0.c2 ELSE rt1.c2 END, t0.c0, (((rt1.c5, t0.c3, rt1.c1))!=((-372459285, t0.c4, rt1.c5))))) AND ((0.5680669159444971, ((t0.c3) IS FALSE), TRIM(DISTINCT t0.c1, t0.c0)))) WHERE (((rt1.c3)*(0Xffffffff8016393a)) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON (((rt1.c3, t0.c1, t0.c4)) BETWEEN ((CASE WHEN t0.c3 THEN rt1.c4 WHEN t0.c1 THEN 'y' WHEN t0.c2 THEN t0.c1 WHEN rt1.c2 THEN rt1.c4 WHEN t0.c2 THEN t0.c2 ELSE rt1.c2 END, t0.c0, (((rt1.c5, t0.c3, rt1.c1))<>((0Xffffffffe9ccb8eb, t0.c4, rt1.c5))))) AND ((0.5680669159444971, ((t0.c3) IS FALSE), TRIM(DISTINCT t0.c1, t0.c0)))) WHERE (((((rt1.c3)*(-2146027206)) COLLATE RTRIM)AND(((((((((t0.c4)<<(rt1.c6)))AND((((t0.c4, rt1.c3))<((rt1.c1, rt1.c0))))))AND(((rt1.c0)%(t0.c4)))))OR(ABS(rt1.c4)))))) ORDER BY CAST(((t0.c4)IS(t0.c0)) AS INTEGER) ASC, (('0.2718168072226145')||(rt1.c6)) COLLATE BINARY, ((((((((t0.c0)OR(rt1.c6)))OR(rt1.c6)))AND(t0.c3)))AND(t0.c1)) COLLATE BINARY  NULLS FIRST LIMIT 2;
SELECT * FROM t0 INNER JOIN rt1 ON (((rt1.c3, t0.c1, t0.c4)) BETWEEN ((CASE WHEN t0.c3 THEN rt1.c4 WHEN t0.c1 THEN 'y' WHEN t0.c2 THEN t0.c1 WHEN rt1.c2 THEN rt1.c4 WHEN t0.c2 THEN t0.c2 ELSE rt1.c2 END, t0.c0, (((rt1.c5, t0.c3, rt1.c1))!=((-372459285, t0.c4, rt1.c5))))) AND ((0.5680669159444971, ((t0.c3) IS FALSE), TRIM(DISTINCT t0.c1, t0.c0)))) WHERE (((rt1.c3)*(0Xffffffff8016393a)) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON (((rt1.c3, t0.c1, t0.c4)) BETWEEN ((CASE WHEN t0.c3 THEN rt1.c4 WHEN t0.c1 THEN 'y' WHEN t0.c2 THEN t0.c1 WHEN rt1.c2 THEN rt1.c4 WHEN t0.c2 THEN t0.c2 ELSE rt1.c2 END, t0.c0, (((rt1.c5, t0.c3, rt1.c1))<>((0Xffffffffe9ccb8eb, t0.c4, rt1.c5))))) AND ((0.5680669159444971, ((t0.c3) IS FALSE), TRIM(DISTINCT t0.c1, t0.c0)))) WHERE (((((rt1.c3)*(-2146027206)) COLLATE RTRIM)AND(((((((((t0.c4)<<(rt1.c6)))AND((((t0.c4, rt1.c3))<((rt1.c1, rt1.c0))))))AND(((rt1.c0)%(t0.c4)))))OR(ABS(rt1.c4)))))) ORDER BY CAST(((t0.c4)IS(t0.c0)) AS INTEGER) ASC, (('0.2718168072226145')||(rt1.c6)) COLLATE BINARY, ((((((((t0.c0)OR(rt1.c6)))OR(rt1.c6)))AND(t0.c3)))AND(t0.c1)) COLLATE BINARY  NULLS FIRST LIMIT 2;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c0)) BETWEEN ((t0.c2, t0.c4)) AND ((t0.c0, t0.c1))))/(t0.c3 COLLATE BINARY)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((((t0.c2, t0.c0)) BETWEEN ((t0.c2, t0.c4)) AND ((t0.c0, t0.c1))))/(t0.c3 COLLATE BINARY)))AND((((t0.c2 IN ())) BETWEEN ((((t0.c1, t0.c3)) BETWEEN ((t0.c4, t0.c4)) AND ((t0.c0, t0.c4)))) AND (((t0.c2)GLOB(t0.c1)))))));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)&(rt1.c6)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)&(rt1.c6)) COLLATE NOCASE) ORDER BY ((HEX(DISTINCT rt1.c1))&(CASE WHEN x'' THEN rt1.c5 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c3 END)), ((CASE WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c4 END) NOT BETWEEN (((rt1.c6) NOT BETWEEN (rt1.c5) AND (rt1.c1))) AND (rt1.c4))  NULLS FIRST LIMIT 0X3 INTERSECT SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3)|(rt1.c2)) IN ())) ORDER BY ((HEX(DISTINCT rt1.c1))&(CASE WHEN x'' THEN rt1.c5 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c3 END)), ((CASE WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c4 END) NOT BETWEEN (((rt1.c6) NOT BETWEEN (rt1.c5) AND (rt1.c1))) AND (rt1.c4))  NULLS FIRST LIMIT 3;
SELECT MIN(rt1.c0) FROM t0, rt1 WHERE ((((t0.c1 IN (t0.c4)))>>(((((t0.c1)AND(rt1.c3)))OR(rt1.c0))))) ORDER BY CASE WHEN ((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c3)) THEN NULL END DESC, ((((rt1.c4)AND(((rt1.c1) NOTNULL))))AND(((t0.c2)&(x'736d07')))), NULLIF(((((((((t0.c2)OR(t0.c4)))OR(rt1.c0)))OR(t0.c1)))OR(rt1.c4)), CASE WHEN t0.c4 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c3 END);
SELECT ALL MIN(rt1.c0) FROM t0, rt1 WHERE ((((t0.c1 IN (t0.c4)))>>(((((t0.c1)AND(rt1.c3)))OR(rt1.c0))))) ORDER BY CASE WHEN ((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c3)) THEN NULL END DESC, ((((rt1.c4)AND(((rt1.c1) NOTNULL))))AND(((t0.c2)&(x'736d07')))), NULLIF(((((((((t0.c2)OR(t0.c4)))OR(rt1.c0)))OR(t0.c1)))OR(rt1.c4)), CASE WHEN t0.c4 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c3 END) LIMIT 2;
SELECT ALL MIN(rt1.c5) FROM rt1, t0 WHERE (rt1.c6) ORDER BY (((((t0.c4) BETWEEN (rt1.c6) AND (t0.c2))))>((CAST(t0.c1 AS REAL))))  NULLS FIRST;
SELECT DISTINCT MIN(rt1.c5) FROM rt1, t0 WHERE (((rt1.c6)AND(t0.c0))) ORDER BY (((((t0.c4) BETWEEN (rt1.c6) AND (t0.c2))))>((CAST(t0.c1 AS REAL))))  NULLS FIRST LIMIT 0;
SELECT * FROM rt1 WHERE (NULLIF((rt1.c2 IN (rt1.c1)), CASE rt1.c0  WHEN rt1.c4 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN NULL THEN rt1.c4 ELSE rt1.c3 END)) ORDER BY (((((0.6692427420884279)) BETWEEN ((rt1.c6)) AND ((rt1.c4)))) NOT BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c6))  NULLS FIRST, (~ (((rt1.c6) IS FALSE)));
SELECT ALL * FROM rt1 WHERE (((NULLIF((rt1.c2 IN (rt1.c1)), CASE rt1.c0  WHEN rt1.c4 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN NULL THEN rt1.c4 ELSE rt1.c3 END))AND(((HEX(rt1.c5))<>(('1160294946' IN ())))))) ORDER BY (((((0.6692427420884279)) BETWEEN ((rt1.c6)) AND ((rt1.c4)))) NOT BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c6))  NULLS FIRST, (~ (((rt1.c6) IS FALSE))) LIMIT 2;
SELECT * FROM rt1 WHERE (NULLIF((rt1.c2 IN (rt1.c1)), CASE rt1.c0  WHEN rt1.c4 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN NULL THEN rt1.c4 ELSE rt1.c3 END)) ORDER BY (((((0.6692427420884279)) BETWEEN ((rt1.c6)) AND ((rt1.c4)))) NOT BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c6))  NULLS FIRST, (~ (((rt1.c6) IS FALSE)));
SELECT ALL * FROM rt1 WHERE (((NULLIF((rt1.c2 IN (rt1.c1)), CASE rt1.c0  WHEN rt1.c4 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN NULL THEN rt1.c4 ELSE rt1.c3 END))AND(((HEX(rt1.c5))<>(('1160294946' IN ())))))) ORDER BY (((((0.6692427420884279)) BETWEEN ((rt1.c6)) AND ((rt1.c4)))) NOT BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c6))  NULLS FIRST, (~ (((rt1.c6) IS FALSE))) LIMIT 2;
SELECT * FROM rt1, t0 WHERE ((((t0.c2) IS TRUE) IN (((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c2))))) ORDER BY NULL  NULLS FIRST, NULL;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c2) IS TRUE) IN (((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c2))))) ORDER BY NULL  NULLS FIRST, NULL;
SELECT * FROM rt1, t0 WHERE ((((t0.c2) IS TRUE) IN (((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c2))))) ORDER BY NULL  NULLS FIRST, NULL;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c2) IS TRUE) IN (((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c2))))) ORDER BY NULL  NULLS FIRST, NULL;
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c5)OR('1664405135')))OR(rt1.c3)))OR(rt1.c0)))AND(rt1.c3)) COLLATE BINARY) ORDER BY ((((((rt1.c4)AND(NULL)))AND(rt1.c3)))GLOB(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2))))  NULLS FIRST, SUBSTR(NULL, CAST(rt1.c1 AS NUMERIC)) DESC;
SELECT * FROM rt1 WHERE (((((((((((rt1.c5)OR('1664405135')))OR(rt1.c3)))OR(rt1.c0)))AND(rt1.c3)) COLLATE BINARY)AND(CAST(rt1.c3 AS NUMERIC)))) ORDER BY ((((((rt1.c4)AND(NULL)))AND(rt1.c3)))GLOB(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2))))  NULLS FIRST, SUBSTR(NULL, CAST(rt1.c1 AS NUMERIC)) DESC;
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c5)OR('1664405135')))OR(rt1.c3)))OR(rt1.c0)))AND(rt1.c3)) COLLATE BINARY) ORDER BY ((((((rt1.c4)AND(NULL)))AND(rt1.c3)))GLOB(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2))))  NULLS FIRST, SUBSTR(NULL, CAST(rt1.c1 AS NUMERIC)) DESC;
SELECT * FROM rt1 WHERE (((((((((((rt1.c5)OR('1664405135')))OR(rt1.c3)))OR(rt1.c0)))AND(rt1.c3)) COLLATE BINARY)AND(CAST(rt1.c3 AS NUMERIC)))) ORDER BY ((((((rt1.c4)AND(NULL)))AND(rt1.c3)))GLOB(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2))))  NULLS FIRST, SUBSTR(NULL, CAST(rt1.c1 AS NUMERIC)) DESC;
SELECT * FROM t0 WHERE ((((((((~ (t0.c1)))AND(t0.c2)))AND(((((((t0.c3)OR(x'1eec')))AND(t0.c1)))AND(t0.c0)))))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))));
SELECT DISTINCT * FROM t0 WHERE ((((((((((~ (t0.c1)))AND(t0.c2)))AND(((((((t0.c3)OR(x'1eec')))AND(t0.c1)))AND(t0.c0)))))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))))AND(CASE ((t0.c2)<>(t0.c0))  WHEN (((t0.c3, t0.c3, t0.c4)) NOT BETWEEN ((t0.c1, t0.c0, 0.6830577882408826)) AND ((t0.c0, t0.c1, t0.c4))) THEN (((0.09498554894208644, t0.c0, t0.c4, t0.c2, t0.c3)) NOT BETWEEN ((t0.c3, t0.c4, t0.c2, t0.c0, -1025320225)) AND ((t0.c4, NULL, t0.c0, 0.20557125921501962, t0.c2))) WHEN '' THEN t0.c2 ELSE ((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c1)) END))) ORDER BY (((((t0.c4) BETWEEN (0.6467202681404844) AND (t0.c0))))!=((CAST(t0.c3 AS TEXT)))) DESC  NULLS LAST, (NOT (CASE WHEN t0.c2 THEN t0.c0 END)) LIMIT 0;
SELECT * FROM t0 WHERE ((((((((~ (t0.c1)))AND(t0.c2)))AND(((((((t0.c3)OR(x'1eec')))AND(t0.c1)))AND(t0.c0)))))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))));
SELECT DISTINCT * FROM t0 WHERE ((((((((((~ (t0.c1)))AND(t0.c2)))AND(((((((t0.c3)OR(x'1eec')))AND(t0.c1)))AND(t0.c0)))))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))))AND(CASE ((t0.c2)<>(t0.c0))  WHEN (((t0.c3, t0.c3, t0.c4)) NOT BETWEEN ((t0.c1, t0.c0, 0.6830577882408826)) AND ((t0.c0, t0.c1, t0.c4))) THEN (((0.09498554894208644, t0.c0, t0.c4, t0.c2, t0.c3)) NOT BETWEEN ((t0.c3, t0.c4, t0.c2, t0.c0, -1025320225)) AND ((t0.c4, NULL, t0.c0, 0.20557125921501962, t0.c2))) WHEN '' THEN t0.c2 ELSE ((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c1)) END))) ORDER BY (((((t0.c4) BETWEEN (0.6467202681404844) AND (t0.c0))))!=((CAST(t0.c3 AS TEXT)))) DESC  NULLS LAST, (NOT (CASE WHEN t0.c2 THEN t0.c0 END)) LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE (CASE t0.c1  WHEN t0.c0 THEN 'l!kbPyCa' ELSE ((t0.c4)OR(0xffffffffe73e5e87)) END) ORDER BY (t0.c1 IN ()) COLLATE NOCASE ASC  NULLS LAST, ((t0.c3)>>(((t0.c4)<>(t0.c4)))) ASC  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CASE t0.c1  WHEN t0.c0 THEN 'l!kbPyCa' ELSE ((t0.c4)OR(0Xffffffffe73e5e87)) END)AND((((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c3))))=(((t0.c3)LIKE(t0.c1))))))) ORDER BY (t0.c1 IN ()) COLLATE NOCASE ASC  NULLS LAST, ((t0.c3)>>(((t0.c4)!=(t0.c4)))) ASC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t0, rt1 WHERE (0.4144451145433736 COLLATE BINARY) ORDER BY ((rt1.c0 COLLATE BINARY)LIKE(((t0.c1)-(rt1.c3)))) ASC  NULLS FIRST, rt1.c1  NULLS FIRST, x'b4', rt1.c2 DESC;
SELECT DISTINCT * FROM t0, rt1 WHERE (((0.4144451145433736 COLLATE BINARY)AND((((- (t0.c3)))+(((rt1.c0)GLOB(rt1.c0))))))) ORDER BY ((rt1.c0 COLLATE BINARY)LIKE(((t0.c1)-(rt1.c3)))) ASC  NULLS FIRST, rt1.c1  NULLS FIRST, x'b4', rt1.c2 DESC LIMIT 0x1;
SELECT ALL * FROM t0, rt1 WHERE (0.4144451145433736 COLLATE BINARY) ORDER BY ((rt1.c0 COLLATE BINARY)LIKE(((t0.c1)-(rt1.c3)))) ASC  NULLS FIRST, rt1.c1  NULLS FIRST, x'b4', rt1.c2 DESC;
SELECT DISTINCT * FROM t0, rt1 WHERE (((0.4144451145433736 COLLATE BINARY)AND((((- (t0.c3)))+(((rt1.c0)GLOB(rt1.c0))))))) ORDER BY ((rt1.c0 COLLATE BINARY)LIKE(((t0.c1)-(rt1.c3)))) ASC  NULLS FIRST, rt1.c1  NULLS FIRST, x'b4', rt1.c2 DESC LIMIT 0x1;
SELECT ALL MIN(rt1.c0) FROM rt1 WHERE (rt1.c6) ORDER BY (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c5)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 END))<((CAST(rt1.c3 AS INTEGER), (((rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c4)) AND ((rt1.c4, rt1.c3))))))  NULLS LAST;
SELECT DISTINCT MIN(rt1.c0) FROM rt1 WHERE (((rt1.c6)AND((((rt1.c1 IN ()))LIKE(((rt1.c4)+(rt1.c0))))))) ORDER BY 0.46539763801619694, CASE WHEN 0.6560483925953743 THEN ((rt1.c6) NOTNULL) WHEN rt1.c5 COLLATE BINARY THEN 'W' COLLATE NOCASE WHEN ((rt1.c6) NOT NULL) THEN CASE rt1.c6  WHEN rt1.c6 THEN 0.6761350043396125 WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c0 END END DESC  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((rt1.c0 COLLATE NOCASE)) AND (('Hhّ' COLLATE NOCASE))) ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(rt1.c0) FROM rt1 WHERE (((((rt1.c5)-(rt1.c1)))>=(((rt1.c0)|(rt1.c6))))) ORDER BY 0.46539763801619694, CASE WHEN 0.6560483925953743 THEN ((rt1.c6) NOTNULL) WHEN rt1.c5 COLLATE BINARY THEN 'W' COLLATE NOCASE WHEN ((rt1.c6) NOT NULL) THEN CASE rt1.c6  WHEN rt1.c6 THEN 0.6761350043396125 WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c0 END END DESC  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((rt1.c0 COLLATE NOCASE)) AND (('Hhّ' COLLATE NOCASE))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM rt1 WHERE (((CAST(rt1.c2 AS REAL)) IS TRUE));
SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c2 AS REAL)) IS TRUE)) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((((-1.246367183E9)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))) NOT BETWEEN (CAST(rt1.c4 AS TEXT)) AND (((((rt1.c2)AND(rt1.c2)))AND(rt1.c1))))) LIMIT 1;
SELECT * FROM rt1 WHERE (((CAST(rt1.c2 AS REAL)) IS TRUE));
SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c2 AS REAL)) IS TRUE)) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((((-1.246367183E9)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))) NOT BETWEEN (CAST(rt1.c4 AS TEXT)) AND (((((rt1.c2)AND(rt1.c2)))AND(rt1.c1))))) LIMIT 1;
SELECT COUNT(*) FROM rt1, t0 WHERE (((((rt1.c5)+('-36881770')))*(rt1.c5)));
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c5)+('-36881770')))*(rt1.c5)))AND(((-1125839889)LIKE(((rt1.c5)&('-祖Ux2'))))))) LIMIT 1;
SELECT * FROM t0 WHERE (((((t0.c1)>(t0.c2))) IS TRUE)) ORDER BY (~ (t0.c4)) ASC, ((((((((t0.c2)LIKE(t0.c2)))OR(((t0.c4)>>(t0.c3)))))AND(((((((((((t0.c0)OR(t0.c3)))OR(t0.c2)))AND(t0.c3)))AND(t0.c4)))OR(t0.c4)))))OR(((t0.c4)<(t0.c1)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c1)>(t0.c2))) IS TRUE)) ORDER BY (~ (t0.c4)) ASC, ((((((((t0.c2)LIKE(t0.c2)))OR(((t0.c4)>>(t0.c3)))))AND(((((((((((t0.c0)OR(t0.c3)))OR(t0.c2)))AND(t0.c3)))AND(t0.c4)))OR(t0.c4)))))OR(((t0.c4)<(t0.c1)))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c1)>(t0.c2))) IS TRUE)) ORDER BY (~ (t0.c4)) ASC, ((((((((t0.c2)LIKE(t0.c2)))OR(((t0.c4)>>(t0.c3)))))AND(((((((((((t0.c0)OR(t0.c3)))OR(t0.c2)))AND(t0.c3)))AND(t0.c4)))OR(t0.c4)))))OR(((t0.c4)<(t0.c1)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c1)>(t0.c2))) IS TRUE)) ORDER BY (~ (t0.c4)) ASC, ((((((((t0.c2)LIKE(t0.c2)))OR(((t0.c4)>>(t0.c3)))))AND(((((((((((t0.c0)OR(t0.c3)))OR(t0.c2)))AND(t0.c3)))AND(t0.c4)))OR(t0.c4)))))OR(((t0.c4)<(t0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)|(rt1.c6 COLLATE RTRIM)));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c2 COLLATE RTRIM)|(rt1.c6 COLLATE RTRIM)))AND(rt1.c4))) ORDER BY ((((rt1.c0)+(rt1.c6))) BETWEEN (rt1.c3 COLLATE NOCASE) AND (rt1.c6 COLLATE RTRIM))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((((((((+ (rt1.c1)))AND(((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))))AND('0.4746247758212162')))OR((NOT (rt1.c5)))))OR(rt1.c4))) ORDER BY ((((rt1.c0)+(rt1.c6))) BETWEEN (rt1.c3 COLLATE NOCASE) AND (rt1.c6 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)|(rt1.c6 COLLATE RTRIM)));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c2 COLLATE RTRIM)|(rt1.c6 COLLATE RTRIM)))AND(rt1.c4))) ORDER BY ((((rt1.c0)+(rt1.c6))) BETWEEN (rt1.c3 COLLATE NOCASE) AND (rt1.c6 COLLATE RTRIM))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((((((((+ (rt1.c1)))AND(((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))))AND('0.4746247758212162')))OR((NOT (rt1.c5)))))OR(rt1.c4))) ORDER BY ((((rt1.c0)+(rt1.c6))) BETWEEN (rt1.c3 COLLATE NOCASE) AND (rt1.c6 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL MIN(rt1.c2) FROM rt1 WHERE (CAST(rt1.c3 AS BLOB) COLLATE NOCASE) ORDER BY ((((NULL) BETWEEN (rt1.c1) AND (-229228074))) NOT BETWEEN (((rt1.c3) NOTNULL)) AND (rt1.c4)) DESC  NULLS FIRST, CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS TEXT);
SELECT DISTINCT MIN(rt1.c2) FROM rt1 WHERE (((CAST(rt1.c3 AS BLOB) COLLATE NOCASE)AND((+ ((- (rt1.c3))))))) ORDER BY ((((NULL) BETWEEN (rt1.c1) AND (0Xfffffffff25641d6))) NOT BETWEEN (((rt1.c3) NOTNULL)) AND (rt1.c4)) DESC  NULLS FIRST, CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS TEXT) LIMIT 0 INTERSECT SELECT DISTINCT MIN(rt1.c2) FROM rt1 WHERE (CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY ((((NULL) BETWEEN (rt1.c1) AND (0Xfffffffff25641d6))) NOT BETWEEN (((rt1.c3) NOTNULL)) AND (rt1.c4)) DESC  NULLS FIRST, CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS TEXT) LIMIT 0x0;
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c6) ISNULL))OR(((rt1.c1)LIKE('*W&lz&m')))))OR((((x'', rt1.c2, rt1.c4, rt1.c0))<>((x'5274', rt1.c6, rt1.c3, rt1.c6))))))AND(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c6))))) ORDER BY (((((rt1.c4))<((rt1.c6)))) IS FALSE)  NULLS FIRST, (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c5))))==((rt1.c0)));
SELECT DISTINCT * FROM rt1 WHERE (((((((((((rt1.c6) ISNULL))OR(((rt1.c1)LIKE('*W&lz&m')))))OR((((x'', rt1.c2, rt1.c4, rt1.c0))<((x'5274', rt1.c6, rt1.c3, rt1.c6))))))AND(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c6)))))AND(rt1.c5))) ORDER BY CASE rt1.c0 COLLATE RTRIM  WHEN NULL COLLATE NOCASE THEN ((rt1.c5) BETWEEN (rt1.c5) AND ('h\en)wy,')) WHEN rt1.c6 THEN CAST(rt1.c3 AS REAL) ELSE ((rt1.c4)GLOB(rt1.c4)) END, rt1.c3  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c2)<=(rt1.c2))) BETWEEN (((rt1.c5) IS TRUE)) AND (((((((rt1.c4)AND(rt1.c4)))AND(rt1.c0)))AND(rt1.c3))))) ORDER BY CASE rt1.c0 COLLATE RTRIM  WHEN NULL COLLATE NOCASE THEN ((rt1.c5) BETWEEN (rt1.c5) AND ('h\en)wy,')) WHEN rt1.c6 THEN CAST(rt1.c3 AS REAL) ELSE ((rt1.c4)GLOB(rt1.c4)) END, rt1.c3  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c6) ISNULL))OR(((rt1.c1)LIKE('*W&lz&m')))))OR((((x'', rt1.c2, rt1.c4, rt1.c0))<>((x'5274', rt1.c6, rt1.c3, rt1.c6))))))AND(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c6))))) ORDER BY (((((rt1.c4))<((rt1.c6)))) IS FALSE)  NULLS FIRST, (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c5))))==((rt1.c0)));
SELECT DISTINCT * FROM rt1 WHERE (((((((((((rt1.c6) ISNULL))OR(((rt1.c1)LIKE('*W&lz&m')))))OR((((x'', rt1.c2, rt1.c4, rt1.c0))<((x'5274', rt1.c6, rt1.c3, rt1.c6))))))AND(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c6)))))AND(rt1.c5))) ORDER BY CASE rt1.c0 COLLATE RTRIM  WHEN NULL COLLATE NOCASE THEN ((rt1.c5) BETWEEN (rt1.c5) AND ('h\en)wy,')) WHEN rt1.c6 THEN CAST(rt1.c3 AS REAL) ELSE ((rt1.c4)GLOB(rt1.c4)) END, rt1.c3  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c2)<=(rt1.c2))) BETWEEN (((rt1.c5) IS TRUE)) AND (((((((rt1.c4)AND(rt1.c4)))AND(rt1.c0)))AND(rt1.c3))))) ORDER BY CASE rt1.c0 COLLATE RTRIM  WHEN NULL COLLATE NOCASE THEN ((rt1.c5) BETWEEN (rt1.c5) AND ('h\en)wy,')) WHEN rt1.c6 THEN CAST(rt1.c3 AS REAL) ELSE ((rt1.c4)GLOB(rt1.c4)) END, rt1.c3  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c6 IN (rt1.c6)))<>(rt1.c3 COLLATE RTRIM))) ORDER BY ((((((((((((((rt1.c4)OR(rt1.c4)))AND(rt1.c6)))AND(rt1.c6)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c3))) IS FALSE) DESC, LIKELIHOOD(rt1.c2, NULL) ASC;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c6 IN (rt1.c6)))>(rt1.c3 COLLATE RTRIM)))AND(rt1.c0))) ORDER BY 0.6942555208694464  NULLS LAST INTERSECT SELECT * FROM rt1 WHERE (((((rt1.c5)==(rt1.c4)))<=(0.8321609369655676))) ORDER BY 0.6942555208694464  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c6 IN (rt1.c6)))<>(rt1.c3 COLLATE RTRIM))) ORDER BY ((((((((((((((rt1.c4)OR(rt1.c4)))AND(rt1.c6)))AND(rt1.c6)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c3))) IS FALSE) DESC, LIKELIHOOD(rt1.c2, NULL) ASC;
SELECT * FROM t0, rt1 WHERE ((- ((NOT (t0.c2))))) ORDER BY (((rt1.c4)<<(rt1.c2)) IN ((NOT (0.14641241276461847))))  NULLS LAST, 'gl' DESC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((- ((NOT (t0.c2)))))AND(((CASE WHEN rt1.c1 THEN t0.c3 ELSE t0.c0 END)AND((t0.c1 IN (rt1.c5))))))) ORDER BY (((rt1.c4)<<(rt1.c2)) IN ((NOT (0.14641241276461847))))  NULLS LAST, 'gl' DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CASE (((t0.c1)) NOT BETWEEN ((rt1.c1)) AND ((t0.c2)))  WHEN NULL THEN t0.c1 WHEN CASE WHEN rt1.c5 THEN rt1.c1 ELSE t0.c0 END THEN CAST(rt1.c4 AS INTEGER) ELSE CASE WHEN rt1.c4 THEN rt1.c1 WHEN t0.c1 THEN rt1.c5 END END) ORDER BY (((rt1.c4)<<(rt1.c2)) IN ((NOT (0.14641241276461847))))  NULLS LAST, 'gl' DESC  NULLS LAST LIMIT 1;
SELECT * FROM t0, rt1 WHERE ((- ((NOT (t0.c2))))) ORDER BY (((rt1.c4)<<(rt1.c2)) IN ((NOT (0.14641241276461847))))  NULLS LAST, 'gl' DESC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((- ((NOT (t0.c2)))))AND(((CASE WHEN rt1.c1 THEN t0.c3 ELSE t0.c0 END)AND((t0.c1 IN (rt1.c5))))))) ORDER BY (((rt1.c4)<<(rt1.c2)) IN ((NOT (0.14641241276461847))))  NULLS LAST, 'gl' DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CASE (((t0.c1)) NOT BETWEEN ((rt1.c1)) AND ((t0.c2)))  WHEN NULL THEN t0.c1 WHEN CASE WHEN rt1.c5 THEN rt1.c1 ELSE t0.c0 END THEN CAST(rt1.c4 AS INTEGER) ELSE CASE WHEN rt1.c4 THEN rt1.c1 WHEN t0.c1 THEN rt1.c5 END END) ORDER BY (((rt1.c4)<<(rt1.c2)) IN ((NOT (0.14641241276461847))))  NULLS LAST, 'gl' DESC  NULLS LAST LIMIT 1;
SELECT ALL MIN(t0.c3) FROM t0 WHERE (((x'91' COLLATE RTRIM) IS TRUE));
SELECT DISTINCT MIN(t0.c3) FROM t0 WHERE (((((x'91' COLLATE RTRIM) IS TRUE))AND(CASE WHEN -961599781 THEN t0.c3 WHEN (('+&MU2
dIi') NOT BETWEEN (t0.c2) AND (t0.c4)) THEN load_extension(t0.c0, t0.c1) WHEN ((t0.c0)|(t0.c3)) THEN (t0.c4 IN (t0.c2)) END))) ORDER BY CAST(t0.c4 AS TEXT);
SELECT ALL MAX(t0.c0) FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c6) BETWEEN (t0.c0) AND (rt1.c3)))OR(((rt1.c3) NOTNULL)))) ORDER BY TYPEOF(DISTINCT ((rt1.c5)-(t0.c0))) DESC;
SELECT DISTINCT MAX(t0.c0) FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c6) BETWEEN (t0.c0) AND (rt1.c3)))OR(((rt1.c3) NOTNULL)))) ORDER BY TYPEOF(DISTINCT ((rt1.c5)-(t0.c0))) DESC;
SELECT ALL MIN(t0.c2) FROM t0, rt1 WHERE ((((rt1.c4) BETWEEN (t0.c3) AND (rt1.c4)) IN (((rt1.c3)!=(rt1.c1))))) ORDER BY CAST(((rt1.c2)IS(t0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT ALL MIN(t0.c2) FROM t0, rt1 WHERE ((((((rt1.c4) BETWEEN (t0.c3) AND (rt1.c4)) IN (((rt1.c3)<>(rt1.c1)))))AND(CAST((+ (rt1.c6)) AS INTEGER)))) ORDER BY CAST(((rt1.c2)IS(t0.c1)) AS NUMERIC)  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL MIN(t0.c2) FROM t0, rt1 WHERE ('-1079505311') ORDER BY CAST(((rt1.c2)IS(t0.c1)) AS NUMERIC)  NULLS FIRST LIMIT 0X1;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2)-((NOT (t0.c1))))) ORDER BY (((((t0.c2, t0.c4)) NOT BETWEEN ((t0.c0, t0.c2)) AND ((t0.c2, '鶕N㿡⹩8a'))))=((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))) DESC, (~ (32453929))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((t0.c2)-((NOT (t0.c1))))) ORDER BY (((((t0.c2, t0.c4)) NOT BETWEEN ((t0.c0, t0.c2)) AND ((t0.c2, '鶕N㿡⹩8a'))))=((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))) DESC, (~ (32453929))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c0, LIKE(7.36960138E8, t0.c4, '0')))>(('821932353', t0.c4))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, LIKE(7.36960138E8, t0.c4, '0')))>(('821932353', t0.c4)))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE ((((((t0.c1)OR(t0.c2)))AND(t0.c2)))AND(',?'))  WHEN ((t0.c0)>=(t0.c1)) THEN ((t0.c4)>=(t0.c4)) WHEN (((t0.c3, t0.c2))>((t0.c4, t0.c3))) THEN CASE WHEN t0.c4 THEN t0.c3 END WHEN ((NULL)<=(t0.c3)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c3)) ELSE t0.c3 END) LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((t0.c0, LIKE(7.36960138E8, t0.c4, '0')))>(('821932353', t0.c4))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, LIKE(7.36960138E8, t0.c4, '0')))>(('821932353', t0.c4)))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE ((((((t0.c1)OR(t0.c2)))AND(t0.c2)))AND(',?'))  WHEN ((t0.c0)>=(t0.c1)) THEN ((t0.c4)>=(t0.c4)) WHEN (((t0.c3, t0.c2))>((t0.c4, t0.c3))) THEN CASE WHEN t0.c4 THEN t0.c3 END WHEN ((NULL)<=(t0.c3)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c3)) ELSE t0.c3 END) LIMIT 1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((t0.c2)AND(t0.c2)))AND(t0.c4)) COLLATE BINARY) ORDER BY (((((t0.c3) NOT BETWEEN (t0.c0) AND (0.24350670049015277)), (((t0.c3)) NOT BETWEEN ((t0.c3)) AND ((t0.c1)))))<>((0.2161161465542969, (((t0.c1, t0.c1)) NOT BETWEEN ((t0.c1, t0.c3)) AND ((t0.c0, t0.c1))))));
SELECT MAX(t0.c0) FROM t0 WHERE (((((((t0.c2)AND(t0.c2)))AND(t0.c4)) COLLATE BINARY)AND(((((((((((((((t0.c1) BETWEEN (t0.c4) AND (t0.c3)))AND(LOWER(t0.c3))))OR(t0.c1)))OR(((t0.c3) IS FALSE))))AND(t0.c3 COLLATE RTRIM)))OR(((t0.c2) NOT BETWEEN (x'18') AND (t0.c3)))))OR(json_type(t0.c2)))))) ORDER BY (((((t0.c3) NOT BETWEEN (t0.c0) AND (0.24350670049015277)), (((t0.c3)) NOT BETWEEN ((t0.c3)) AND ((t0.c1)))))!=((0.2161161465542969, (((t0.c1, t0.c1)) NOT BETWEEN ((t0.c1, t0.c3)) AND ((t0.c0, t0.c1)))))) LIMIT 1;
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c4 END)*(CAST(rt1.c2 AS INTEGER))));
SELECT * FROM rt1 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c4 END)*(CAST(rt1.c2 AS INTEGER))))AND(((((rt1.c2) NOT NULL)) NOT NULL))));
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c4 END)*(CAST(rt1.c2 AS INTEGER))));
SELECT * FROM rt1 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c4 END)*(CAST(rt1.c2 AS INTEGER))))AND(((((rt1.c2) NOT NULL)) NOT NULL))));
SELECT * FROM rt1, t0 WHERE ((NOT (CAST(NULL AS NUMERIC)))) ORDER BY ((((((rt1.c0)OR(t0.c0)))OR(rt1.c1)))>(rt1.c6)) ASC;
SELECT * FROM rt1, t0 WHERE ((NOT (CAST(NULL AS NUMERIC)))) ORDER BY ((((((rt1.c0)OR(t0.c0)))OR(rt1.c1)))>(rt1.c6)) ASC;
SELECT * FROM rt1, t0 WHERE ((NOT (CAST(NULL AS NUMERIC)))) ORDER BY ((((((rt1.c0)OR(t0.c0)))OR(rt1.c1)))>(rt1.c6)) ASC;
SELECT * FROM rt1, t0 WHERE ((NOT (CAST(NULL AS NUMERIC)))) ORDER BY ((((((rt1.c0)OR(t0.c0)))OR(rt1.c1)))>(rt1.c6)) ASC;
SELECT * FROM t0 WHERE (((((((((CASE -1.491715523E9  WHEN t0.c4 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)AND(t0.c3)))AND(SQLITE_COMPILEOPTION_GET(t0.c4))))OR(t0.c1)))OR((~ (t0.c2)))));
SELECT ALL * FROM t0 WHERE (((((((((((CASE -1.491715523E9  WHEN t0.c4 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)AND(t0.c3)))AND(SQLITE_COMPILEOPTION_GET(t0.c4))))OR(t0.c1)))OR((~ (t0.c2)))))AND(((x'5552') BETWEEN ('/qxW/?K') AND (((t0.c1)OR(t0.c4))))))) INTERSECT SELECT * FROM t0 WHERE (((((0.07642163085006703)|(t0.c4))) NOTNULL));
SELECT * FROM t0 WHERE (((((((((CASE -1.491715523E9  WHEN t0.c4 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)AND(t0.c3)))AND(SQLITE_COMPILEOPTION_GET(t0.c4))))OR(t0.c1)))OR((~ (t0.c2)))));
SELECT ALL * FROM t0 WHERE (((((((((((CASE -1.491715523E9  WHEN t0.c4 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)AND(t0.c3)))AND(SQLITE_COMPILEOPTION_GET(t0.c4))))OR(t0.c1)))OR((~ (t0.c2)))))AND(((x'5552') BETWEEN ('/qxW/?K') AND (((t0.c1)OR(t0.c4))))))) INTERSECT SELECT * FROM t0 WHERE (((((0.07642163085006703)|(t0.c4))) NOTNULL));
SELECT ALL MIN(t0.c2) FROM t0 WHERE (load_extension((((t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, t0.c0)) AND ((t0.c3, t0.c3))), TRIM(t0.c2))) ORDER BY ((NULL) ISNULL) ASC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c2) FROM t0 WHERE (load_extension((((t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, t0.c0)) AND ((t0.c3, t0.c3))), TRIM(t0.c2))) ORDER BY ((NULL) ISNULL) ASC  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT MIN(t0.c2) FROM t0 WHERE (((x'')|(CAST(t0.c0 AS TEXT)))) ORDER BY ((NULL) ISNULL) ASC  NULLS FIRST LIMIT 3;
SELECT * FROM rt1 WHERE (CASE rt1.c4  WHEN rt1.c0 THEN rt1.c4 WHEN 0X7d4b4bd6 THEN rt1.c4 ELSE rt1.c0 END COLLATE RTRIM) ORDER BY CAST(((rt1.c6)>>(0.7030373297928397)) AS INTEGER) DESC, x'3c', (CAST(rt1.c0 AS BLOB) IN ()) ASC;
SELECT DISTINCT * FROM rt1 WHERE (((CASE rt1.c4  WHEN rt1.c0 THEN rt1.c4 WHEN 0X7d4b4bd6 THEN rt1.c4 ELSE rt1.c0 END COLLATE RTRIM)AND((((((rt1.c0, ''))>((rt1.c5, rt1.c1))))|(rt1.c6 COLLATE NOCASE))))) ORDER BY CAST(((rt1.c6)>>(0.7030373297928397)) AS INTEGER) DESC, x'3c', (CAST(rt1.c0 AS BLOB) IN ()) ASC;
SELECT * FROM rt1 WHERE (CASE rt1.c4  WHEN rt1.c0 THEN rt1.c4 WHEN 0X7d4b4bd6 THEN rt1.c4 ELSE rt1.c0 END COLLATE RTRIM) ORDER BY CAST(((rt1.c6)>>(0.7030373297928397)) AS INTEGER) DESC, x'3c', (CAST(rt1.c0 AS BLOB) IN ()) ASC;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON CASE ((t0.c1) BETWEEN (0.947499063885252) AND (rt1.c6))  WHEN load_extension(NULL, rt1.c5) THEN -1.170810712E9 WHEN CAST(rt1.c1 AS REAL) THEN CAST(rt1.c1 AS BLOB) WHEN HEX(t0.c2) THEN rt1.c6 COLLATE RTRIM ELSE ((rt1.c1) NOT NULL) END WHERE ('2140026884') ORDER BY (NOT (rt1.c4)) ASC  NULLS LAST, '-1827906825' DESC;
SELECT DISTINCT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON CASE ((t0.c1) BETWEEN (0.947499063885252) AND (rt1.c6))  WHEN load_extension(NULL, rt1.c5) THEN -1.170810712E9 WHEN CAST(rt1.c1 AS REAL) THEN CAST(rt1.c1 AS BLOB) WHEN HEX(t0.c2) THEN rt1.c6 COLLATE RTRIM ELSE ((rt1.c1) NOT NULL) END WHERE ((('2140026884')AND((((((('347473609')AND(((t0.c2)GLOB(rt1.c5)))))AND(((rt1.c4)>>(t0.c0)))))OR(t0.c3))))) ORDER BY SQLITE_SOURCE_ID(), (2000029393 IN ())  NULLS LAST, (((- (rt1.c2)))>=(CASE WHEN x'0f' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END))  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c0) NOT NULL))<<(CASE t0.c3  WHEN t0.c1 THEN t0.c0 ELSE t0.c4 END))) ORDER BY (- (CASE WHEN t0.c4 THEN t0.c3 END)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c0) NOT NULL))<<(CASE t0.c3  WHEN t0.c1 THEN t0.c0 ELSE t0.c4 END)))AND(t0.c3))) ORDER BY UPPER(CASE WHEN rt1.c6 THEN rt1.c6 END) ASC, QUOTE(1.50564688E9)  NULLS FIRST, (((t0.c3 IN (rt1.c1))) IS TRUE)  NULLS LAST LIMIT 3;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c0) NOT NULL))<<(CASE t0.c3  WHEN t0.c1 THEN t0.c0 ELSE t0.c4 END))) ORDER BY (- (CASE WHEN t0.c4 THEN t0.c3 END)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c0) NOT NULL))<<(CASE t0.c3  WHEN t0.c1 THEN t0.c0 ELSE t0.c4 END)))AND(t0.c3))) ORDER BY UPPER(CASE WHEN rt1.c6 THEN rt1.c6 END) ASC, QUOTE(1.50564688E9)  NULLS FIRST, (((t0.c3 IN (rt1.c1))) IS TRUE)  NULLS LAST LIMIT 3;
SELECT * FROM t0 WHERE (((((t0.c0 IN (t0.c3)), ((((((((((t0.c1)OR(t0.c0)))AND(t0.c3)))OR(t0.c1)))AND(t0.c0)))AND(t0.c0))))<=(((t0.c2 IN (t0.c4, t0.c4)), (NOT (0X71a619a7)))))) ORDER BY CAST(t0.c3 AS REAL) COLLATE RTRIM ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0 IN (t0.c3)), ((((((((((t0.c1)OR(t0.c0)))AND(t0.c3)))OR(t0.c1)))AND(t0.c0)))AND(t0.c0))))<(((t0.c2 IN (t0.c4, t0.c4)), (NOT (0X71a619a7))))))AND((~ (t0.c0)) COLLATE BINARY))) ORDER BY t0.c1, (((t0.c3)&(t0.c2)) IN (((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2)))) DESC, (((t0.c2)GLOB(t0.c3)) IN (((t0.c3)IS(t0.c4)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c3) ORDER BY t0.c1, (((t0.c3)&(t0.c2)) IN (((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2)))) DESC, (((t0.c2)GLOB(t0.c3)) IN (((t0.c3)IS(t0.c4)))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c0 IN (t0.c3)), ((((((((((t0.c1)OR(t0.c0)))AND(t0.c3)))OR(t0.c1)))AND(t0.c0)))AND(t0.c0))))<=(((t0.c2 IN (t0.c4, t0.c4)), (NOT (0X71a619a7)))))) ORDER BY CAST(t0.c3 AS REAL) COLLATE RTRIM ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0 IN (t0.c3)), ((((((((((t0.c1)OR(t0.c0)))AND(t0.c3)))OR(t0.c1)))AND(t0.c0)))AND(t0.c0))))<(((t0.c2 IN (t0.c4, t0.c4)), (NOT (0X71a619a7))))))AND((~ (t0.c0)) COLLATE BINARY))) ORDER BY t0.c1, (((t0.c3)&(t0.c2)) IN (((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2)))) DESC, (((t0.c2)GLOB(t0.c3)) IN (((t0.c3)IS(t0.c4)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c3) ORDER BY t0.c1, (((t0.c3)&(t0.c2)) IN (((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2)))) DESC, (((t0.c2)GLOB(t0.c3)) IN (((t0.c3)IS(t0.c4)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE ((((~ (rt1.c0)))IS NOT(TRIM(t0.c4, rt1.c3))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((~ (rt1.c0)))IS NOT(TRIM(t0.c4, rt1.c3)))) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c0) NOT BETWEEN ((((t0.c3, t0.c2, rt1.c2, t0.c2, t0.c1, rt1.c4)) BETWEEN ((t0.c0, rt1.c6, rt1.c5, t0.c0, rt1.c3, 'z?o')) AND ((rt1.c1, rt1.c4, rt1.c5, rt1.c1, rt1.c6, rt1.c5)))) AND ((+ (rt1.c6)))));
SELECT ALL * FROM rt1, t0 WHERE ((((~ (rt1.c0)))IS NOT(TRIM(t0.c4, rt1.c3))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((~ (rt1.c0)))IS NOT(TRIM(t0.c4, rt1.c3)))) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c0) NOT BETWEEN ((((t0.c3, t0.c2, rt1.c2, t0.c2, t0.c1, rt1.c4)) BETWEEN ((t0.c0, rt1.c6, rt1.c5, t0.c0, rt1.c3, 'z?o')) AND ((rt1.c1, rt1.c4, rt1.c5, rt1.c1, rt1.c6, rt1.c5)))) AND ((+ (rt1.c6)))));
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (t0.c2);
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (((t0.c2)AND((~ ((rt1.c2 IN ()))))));
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (t0.c2);
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (((t0.c2)AND((~ ((rt1.c2 IN ()))))));
SELECT ALL MAX(t0.c2) FROM t0, rt1 WHERE ((((((rt1.c1, rt1.c5))<=((t0.c2, rt1.c0)))) NOT BETWEEN (CAST(rt1.c2 AS BLOB)) AND (((rt1.c3) BETWEEN (rt1.c5) AND (t0.c1)))));
SELECT ALL MAX(t0.c2) FROM t0, rt1 WHERE ((((((((rt1.c1, rt1.c5))<=((t0.c2, rt1.c0)))) NOT BETWEEN (CAST(rt1.c2 AS BLOB)) AND (((rt1.c3) BETWEEN (rt1.c5) AND (t0.c1)))))AND(CAST(CAST(rt1.c3 AS BLOB) AS TEXT)))) ORDER BY NULL  NULLS LAST, (((((+ (t0.c2)))AND(rt1.c4 COLLATE NOCASE)))OR(rt1.c4)) DESC;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((t0.c2))==((t0.c2))) IN (CAST(t0.c0 AS TEXT), (NOT (t0.c2)))));
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((((t0.c2))==((t0.c2))) IN (CAST(t0.c0 AS TEXT), (NOT (t0.c2))))) ORDER BY ((((t0.c1) NOT NULL)) IS TRUE) DESC LIMIT 0;
SELECT * FROM rt1, t0 WHERE ((((NOT (rt1.c4))) NOT BETWEEN (((((rt1.c6)AND(t0.c2)))AND(rt1.c2))) AND (CAST(rt1.c2 AS NUMERIC)))) ORDER BY ((((t0.c0 COLLATE NOCASE)AND('')))AND(((((((((rt1.c0)OR(rt1.c5)))AND(t0.c1)))OR(rt1.c2)))OR(t0.c4)))) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((NOT (rt1.c4))) NOT BETWEEN (((((rt1.c6)AND(t0.c2)))AND(rt1.c2))) AND (CAST(rt1.c2 AS NUMERIC))))AND(((((rt1.c1)>=(t0.c1)))<(CASE rt1.c4  WHEN t0.c4 THEN t0.c4 WHEN rt1.c1 THEN NULL WHEN t0.c3 THEN rt1.c3 END))))) ORDER BY (((rt1.c2, rt1.c5)) BETWEEN ((((((((t0.c0)OR(rt1.c6)))OR(rt1.c1)))AND(rt1.c4)), CASE rt1.c6  WHEN rt1.c0 THEN t0.c1 WHEN t0.c4 THEN rt1.c1 END)) AND (((0.8374323197333742 IN (rt1.c3)), ((t0.c4)IS NOT(rt1.c0))))) ASC, ((CAST(x'' AS BLOB))<<(CAST(t0.c1 AS NUMERIC))), ((CASE 'Q'  WHEN rt1.c6 THEN rt1.c0 END)|(((t0.c3)||(t0.c1))))  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (t0.c3) ORDER BY (((rt1.c2, rt1.c5)) BETWEEN ((((((((t0.c0)OR(rt1.c6)))OR(rt1.c1)))AND(rt1.c4)), CASE rt1.c6  WHEN rt1.c0 THEN t0.c1 WHEN t0.c4 THEN rt1.c1 END)) AND (((0.8374323197333742 IN (rt1.c3)), ((t0.c4)IS NOT(rt1.c0))))) ASC, ((CAST(x'' AS BLOB))<<(CAST(t0.c1 AS NUMERIC))), ((CASE 'Q'  WHEN rt1.c6 THEN rt1.c0 END)|(((t0.c3)||(t0.c1))))  NULLS LAST LIMIT 1;
SELECT * FROM rt1, t0 WHERE ((((NOT (rt1.c4))) NOT BETWEEN (((((rt1.c6)AND(t0.c2)))AND(rt1.c2))) AND (CAST(rt1.c2 AS NUMERIC)))) ORDER BY ((((t0.c0 COLLATE NOCASE)AND('')))AND(((((((((rt1.c0)OR(rt1.c5)))AND(t0.c1)))OR(rt1.c2)))OR(t0.c4)))) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((NOT (rt1.c4))) NOT BETWEEN (((((rt1.c6)AND(t0.c2)))AND(rt1.c2))) AND (CAST(rt1.c2 AS NUMERIC))))AND(((((rt1.c1)>=(t0.c1)))<(CASE rt1.c4  WHEN t0.c4 THEN t0.c4 WHEN rt1.c1 THEN NULL WHEN t0.c3 THEN rt1.c3 END))))) ORDER BY (((rt1.c2, rt1.c5)) BETWEEN ((((((((t0.c0)OR(rt1.c6)))OR(rt1.c1)))AND(rt1.c4)), CASE rt1.c6  WHEN rt1.c0 THEN t0.c1 WHEN t0.c4 THEN rt1.c1 END)) AND (((0.8374323197333742 IN (rt1.c3)), ((t0.c4)IS NOT(rt1.c0))))) ASC, ((CAST(x'' AS BLOB))<<(CAST(t0.c1 AS NUMERIC))), ((CASE 'Q'  WHEN rt1.c6 THEN rt1.c0 END)|(((t0.c3)||(t0.c1))))  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (t0.c3) ORDER BY (((rt1.c2, rt1.c5)) BETWEEN ((((((((t0.c0)OR(rt1.c6)))OR(rt1.c1)))AND(rt1.c4)), CASE rt1.c6  WHEN rt1.c0 THEN t0.c1 WHEN t0.c4 THEN rt1.c1 END)) AND (((0.8374323197333742 IN (rt1.c3)), ((t0.c4)IS NOT(rt1.c0))))) ASC, ((CAST(x'' AS BLOB))<<(CAST(t0.c1 AS NUMERIC))), ((CASE 'Q'  WHEN rt1.c6 THEN rt1.c0 END)|(((t0.c3)||(t0.c1))))  NULLS LAST LIMIT 1;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((t0.c4, t0.c1))==((t0.c0, rt1.c4))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((t0.c4, t0.c1))==((t0.c0, rt1.c4))) COLLATE RTRIM);
SELECT MAX(rt1.c6) FROM t0, rt1 WHERE (((HEX(DISTINCT '-1168830097'))GLOB((rt1.c3 IN (t0.c0))))) ORDER BY ((((NULL) IS TRUE))&(((t0.c2)IS(t0.c0))))  NULLS LAST, ((CASE NULL  WHEN rt1.c3 THEN t0.c0 WHEN t0.c0 THEN rt1.c1 ELSE t0.c3 END) IS FALSE) ASC, rt1.c1;
SELECT ALL MAX(rt1.c6) FROM t0, rt1 WHERE (((((HEX(DISTINCT '-1168830097'))GLOB((rt1.c3 IN (t0.c0)))))AND(CAST(rt1.c5 AS BLOB)))) ORDER BY TRIM(DISTINCT ((t0.c2) BETWEEN (rt1.c2) AND (t0.c2)), ((t0.c1) BETWEEN (rt1.c4) AND (rt1.c3))), (((rt1.c5)) BETWEEN ((CAST(x'' AS NUMERIC))) AND (((t0.c0 IN ()))))  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL MAX(rt1.c6) FROM t0, rt1 WHERE (CAST(CASE WHEN t0.c2 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c1 THEN '0.9982487031170127' ELSE rt1.c0 END AS BLOB)) ORDER BY TRIM(DISTINCT ((t0.c2) BETWEEN (rt1.c2) AND (t0.c2)), ((t0.c1) BETWEEN (rt1.c4) AND (rt1.c3))), (((rt1.c5)) BETWEEN ((CAST(x'' AS NUMERIC))) AND (((t0.c0 IN ()))))  NULLS FIRST LIMIT 0X0;
SELECT * FROM rt1 WHERE ((((((((((((rt1.c4)AND(rt1.c5)))OR(rt1.c3)))AND(rt1.c0)))OR(rt1.c6))))==((rt1.c2))));
SELECT ALL * FROM rt1 WHERE ((((((((((((((rt1.c4)AND(rt1.c5)))OR(rt1.c3)))AND(rt1.c0)))OR(rt1.c6))))==((rt1.c2))))AND(((((rt1.c3)AND(rt1.c3))) BETWEEN (0.662753741068984) AND (CAST(rt1.c3 AS BLOB)))))) ORDER BY PRINTF(((((rt1.c4)OR(rt1.c4)))OR(rt1.c2)), CAST(rt1.c3 AS REAL), ((rt1.c4)>(-1972252553)))  NULLS FIRST, COALESCE('2010798651', ((0.009731400528998901)<<(rt1.c4)), (~ (rt1.c0)), (((rt1.c5, rt1.c3, rt1.c2))<((rt1.c4, rt1.c4, rt1.c2))))  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((((((((((rt1.c4)AND(rt1.c5)))OR(rt1.c3)))AND(rt1.c0)))OR(rt1.c6))))==((rt1.c2))));
SELECT ALL * FROM rt1 WHERE ((((((((((((((rt1.c4)AND(rt1.c5)))OR(rt1.c3)))AND(rt1.c0)))OR(rt1.c6))))==((rt1.c2))))AND(((((rt1.c3)AND(rt1.c3))) BETWEEN (0.662753741068984) AND (CAST(rt1.c3 AS BLOB)))))) ORDER BY PRINTF(((((rt1.c4)OR(rt1.c4)))OR(rt1.c2)), CAST(rt1.c3 AS REAL), ((rt1.c4)>(-1972252553)))  NULLS FIRST, COALESCE('2010798651', ((0.009731400528998901)<<(rt1.c4)), (~ (rt1.c0)), (((rt1.c5, rt1.c3, rt1.c2))<((rt1.c4, rt1.c4, rt1.c2))))  NULLS FIRST;
SELECT ALL MIN(t0.c4) FROM t0 LEFT OUTER JOIN rt1 ON ((((t0.c4)!=(t0.c0)))<>(((((rt1.c1)OR(rt1.c4)))AND(t0.c2)))) WHERE (((((rt1.c0, rt1.c4, t0.c2, t0.c3)) BETWEEN ((rt1.c5, t0.c4, 1472906625, rt1.c6)) AND ((rt1.c1, rt1.c6, t0.c4, rt1.c3))) IN ())) ORDER BY (((~ (rt1.c3)))<=(((((rt1.c5)OR(rt1.c4)))OR(rt1.c5)))) ASC, CASE WHEN 0.7179479712691657 THEN (rt1.c1 IN (rt1.c6)) WHEN (0.2512206426596598 IN ()) THEN '''<''
Wlj' END;
SELECT ALL MIN(t0.c4) FROM t0 LEFT OUTER JOIN rt1 ON ((((t0.c4)!=(t0.c0)))<>(((((rt1.c1)OR(rt1.c4)))AND(t0.c2)))) WHERE (((((rt1.c0, rt1.c4, t0.c2, t0.c3)) BETWEEN ((rt1.c5, t0.c4, 1472906625, rt1.c6)) AND ((rt1.c1, rt1.c6, t0.c4, rt1.c3))) IN ())) ORDER BY (((~ (rt1.c3)))<=(((((rt1.c5)OR(rt1.c4)))OR(rt1.c5)))) ASC, CASE WHEN 0.7179479712691657 THEN (rt1.c1 IN (rt1.c6)) WHEN (0.2512206426596598 IN ()) THEN '''<''
Wlj' END INTERSECT SELECT ALL MIN(t0.c4) FROM t0 LEFT OUTER JOIN rt1 ON ((((t0.c4)<>(t0.c0)))<>(((((rt1.c1)OR(rt1.c4)))AND(t0.c2)))) WHERE ((((((rt1.c5 IN (t0.c4)))AND(0.7057209707275998 COLLATE BINARY)))AND(CAST(rt1.c2 AS BLOB)))) ORDER BY (((~ (rt1.c3)))<=(((((rt1.c5)OR(rt1.c4)))OR(rt1.c5)))) ASC, CASE WHEN 0.7179479712691657 THEN (rt1.c1 IN (rt1.c6)) WHEN (0.2512206426596598 IN ()) THEN '''<''
Wlj' END;
SELECT * FROM rt1 WHERE ((((rt1.c5)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c2)))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c4 THEN 2.029517459E9 WHEN rt1.c6 THEN x'4735' WHEN rt1.c3 THEN rt1.c5 END))));
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c5)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c2)))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c4 THEN 2.029517459E9 WHEN rt1.c6 THEN x'4735' WHEN rt1.c3 THEN rt1.c5 END))))AND(rt1.c4))) ORDER BY ((((rt1.c4) NOTNULL)) NOT NULL), 8.86054297E8 ASC;
SELECT * FROM rt1 WHERE ((((rt1.c5)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c2)))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c4 THEN 2.029517459E9 WHEN rt1.c6 THEN x'4735' WHEN rt1.c3 THEN rt1.c5 END))));
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c5)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c2)))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c4 THEN 2.029517459E9 WHEN rt1.c6 THEN x'4735' WHEN rt1.c3 THEN rt1.c5 END))))AND(rt1.c4))) ORDER BY ((((rt1.c4) NOTNULL)) NOT NULL), 8.86054297E8 ASC;
SELECT ALL MAX(rt1.c2) FROM rt1 WHERE ((((((((+ (rt1.c0)))AND(CASE rt1.c2  WHEN rt1.c4 THEN rt1.c0 END)))OR(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c3 END)))OR((((rt1.c4, rt1.c4, rt1.c1)) BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c5, rt1.c5, rt1.c4))))));
SELECT DISTINCT MAX(rt1.c2) FROM rt1 WHERE ((((((((((+ (rt1.c0)))AND(CASE rt1.c2  WHEN rt1.c4 THEN rt1.c0 END)))OR(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c3 END)))OR((((rt1.c4, rt1.c4, rt1.c1)) BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c5, rt1.c5, rt1.c4))))))AND(CAST(((rt1.c3)/(rt1.c4)) AS NUMERIC)))) ORDER BY CAST(((rt1.c1)*(rt1.c0)) AS REAL)  NULLS FIRST, CASE ((rt1.c5)/(rt1.c1))  WHEN ((rt1.c5) NOTNULL) THEN ((rt1.c1)IS NOT(rt1.c6)) ELSE rt1.c5 COLLATE NOCASE END  NULLS LAST LIMIT 1;
SELECT * FROM rt1 WHERE ((+ ((((rt1.c5, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c4, rt1.c3)) AND (('-904110918', rt1.c5, rt1.c2))))));
SELECT ALL * FROM rt1 WHERE ((((+ ((((rt1.c5, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c4, rt1.c3)) AND (('-904110918', rt1.c5, rt1.c2))))))AND(0.8857331047270587))) LIMIT 0X1 INTERSECT SELECT * FROM rt1 WHERE (((((NULL)AND(((rt1.c6)>=(rt1.c1)))))AND(rt1.c1 COLLATE RTRIM))) LIMIT 0X1;
SELECT * FROM rt1 WHERE ((+ ((((rt1.c5, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c4, rt1.c3)) AND (('-904110918', rt1.c5, rt1.c2))))));
SELECT ALL * FROM rt1 WHERE ((((+ ((((rt1.c5, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c4, rt1.c3)) AND (('-904110918', rt1.c5, rt1.c2))))))AND(0.8857331047270587))) LIMIT 0X1 INTERSECT SELECT * FROM rt1 WHERE (((((NULL)AND(((rt1.c6)>=(rt1.c1)))))AND(rt1.c1 COLLATE RTRIM))) LIMIT 0X1;
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1)) IN ((t0.c3 IN ())))) ORDER BY (NOT (((((((((t0.c0)AND(t0.c3)))AND(t0.c2)))AND(t0.c1)))OR(t0.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0) BETWEEN (t0.c1) AND (t0.c1)) IN ((t0.c3 IN ()))))AND(COALESCE(DISTINCT t0.c1 COLLATE BINARY, t0.c2 COLLATE RTRIM)))) ORDER BY (NOT (((((((((t0.c0)AND(t0.c3)))AND(t0.c2)))AND(t0.c1)))OR(t0.c1)))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c4)LIKE(NULL))) NOT NULL)) ORDER BY (NOT (((((((((t0.c0)AND(t0.c3)))AND(t0.c2)))AND(t0.c1)))OR(t0.c1)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1)) IN ((t0.c3 IN ())))) ORDER BY (NOT (((((((((t0.c0)AND(t0.c3)))AND(t0.c2)))AND(t0.c1)))OR(t0.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0) BETWEEN (t0.c1) AND (t0.c1)) IN ((t0.c3 IN ()))))AND(COALESCE(DISTINCT t0.c1 COLLATE BINARY, t0.c2 COLLATE RTRIM)))) ORDER BY (NOT (((((((((t0.c0)AND(t0.c3)))AND(t0.c2)))AND(t0.c1)))OR(t0.c1)))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c4)LIKE(NULL))) NOT NULL)) ORDER BY (NOT (((((((((t0.c0)AND(t0.c3)))AND(t0.c2)))AND(t0.c1)))OR(t0.c1)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL MIN(rt1.c0) FROM t0, rt1 WHERE (CHAR((~ (rt1.c1)), (NULL IN ()))) ORDER BY NULLIF(CAST(t0.c0 AS TEXT), (- (rt1.c3)))  NULLS LAST, CASE WHEN (x'f3' IN (t0.c1, t0.c1, t0.c2)) THEN ((((((t0.c4)OR(t0.c3)))OR(t0.c1)))OR(rt1.c4)) WHEN rt1.c1 COLLATE NOCASE THEN ((t0.c4)/(t0.c2)) WHEN (+ (0.8539247168707563)) THEN rt1.c2 COLLATE BINARY ELSE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2)) END, (((t0.c4)>>(t0.c4)) IN (CAST(t0.c3 AS INTEGER)));
SELECT DISTINCT MIN(rt1.c0) FROM t0, rt1 WHERE (CHAR((~ (rt1.c1)), (NULL IN ()))) ORDER BY NULLIF(CAST(t0.c0 AS TEXT), (- (rt1.c3)))  NULLS LAST, CASE WHEN (x'f3' IN (t0.c1, t0.c1, t0.c2)) THEN ((((((t0.c4)OR(t0.c3)))OR(t0.c1)))OR(rt1.c4)) WHEN rt1.c1 COLLATE NOCASE THEN ((t0.c4)/(t0.c2)) WHEN (+ (0.8539247168707563)) THEN rt1.c2 COLLATE BINARY ELSE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2)) END, (((t0.c4)>>(t0.c4)) IN (CAST(t0.c3 AS INTEGER))) LIMIT 0 INTERSECT SELECT DISTINCT MIN(rt1.c0) FROM t0, rt1 WHERE (CASE WHEN 'R~?
I_#' THEN rt1.c0 ELSE t0.c1 END COLLATE BINARY) ORDER BY NULLIF(CAST(t0.c0 AS TEXT), (- (rt1.c3)))  NULLS LAST, CASE WHEN (x'f3' IN (t0.c1, t0.c1, t0.c2)) THEN ((((((t0.c4)OR(t0.c3)))OR(t0.c1)))OR(rt1.c4)) WHEN rt1.c1 COLLATE NOCASE THEN ((t0.c4)/(t0.c2)) WHEN (+ (0.8539247168707563)) THEN rt1.c2 COLLATE BINARY ELSE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2)) END, (((t0.c4)>>(t0.c4)) IN (CAST(t0.c3 AS INTEGER))) LIMIT 0;
SELECT * FROM t0, rt1 WHERE ((((t0.c0 COLLATE NOCASE, CAST(rt1.c2 AS BLOB), CASE t0.c0  WHEN t0.c2 THEN rt1.c5 END, ((x'')*(rt1.c1))))==((CAST(rt1.c4 AS REAL), -8.83143184E8, (+ (rt1.c4)), ((t0.c3)GLOB('1593127675'))))));
SELECT * FROM t0, rt1 WHERE ((((((t0.c0 COLLATE NOCASE, CAST(rt1.c2 AS BLOB), CASE t0.c0  WHEN t0.c2 THEN rt1.c5 END, ((x'')*(rt1.c1))))==((CAST(rt1.c4 AS REAL), -8.83143184E8, (+ (rt1.c4)), ((t0.c3)GLOB('1593127675'))))))AND(((((rt1.c5) NOT BETWEEN (t0.c0) AND (t0.c2)))GLOB(-724267027))))) ORDER BY (((~ (rt1.c1)))+(CAST(rt1.c0 AS INTEGER))), CAST(((rt1.c6)LIKE(t0.c0)) AS TEXT) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM t0, rt1 WHERE ((((t0.c0 COLLATE NOCASE, CAST(rt1.c2 AS BLOB), CASE t0.c0  WHEN t0.c2 THEN rt1.c5 END, ((x'')*(rt1.c1))))==((CAST(rt1.c4 AS REAL), -8.83143184E8, (+ (rt1.c4)), ((t0.c3)GLOB('1593127675'))))));
SELECT * FROM t0, rt1 WHERE ((((((t0.c0 COLLATE NOCASE, CAST(rt1.c2 AS BLOB), CASE t0.c0  WHEN t0.c2 THEN rt1.c5 END, ((x'')*(rt1.c1))))==((CAST(rt1.c4 AS REAL), -8.83143184E8, (+ (rt1.c4)), ((t0.c3)GLOB('1593127675'))))))AND(((((rt1.c5) NOT BETWEEN (t0.c0) AND (t0.c2)))GLOB(-724267027))))) ORDER BY (((~ (rt1.c1)))+(CAST(rt1.c0 AS INTEGER))), CAST(((rt1.c6)LIKE(t0.c0)) AS TEXT) ASC  NULLS FIRST LIMIT 1;
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON CAST(t0.c0 AS INTEGER) COLLATE BINARY WHERE (highlight(((t0.c0) NOTNULL), COALESCE(t0.c4, rt1.c1, rt1.c6), ((rt1.c5)<(rt1.c0)), ((((rt1.c2)AND(rt1.c6)))OR(t0.c2)))) ORDER BY rt1.c3;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t0 ON CAST(t0.c0 AS INTEGER) COLLATE BINARY WHERE (((highlight(((t0.c0) NOTNULL), COALESCE(t0.c4, rt1.c1, rt1.c6), ((rt1.c5)<(rt1.c0)), ((((rt1.c2)AND(rt1.c6)))OR(t0.c2))))AND(((((((((t0.c3)/(rt1.c6)))OR(((rt1.c5) BETWEEN (t0.c4) AND (t0.c0)))))OR((((rt1.c0))<((rt1.c5))))))OR(x''))))) ORDER BY rt1.c3;
SELECT ALL MAX(rt1.c5) FROM t0, rt1 WHERE (rt1.c4) ORDER BY (((rt1.c2 IN (rt1.c2))) BETWEEN (TRIM(DISTINCT t0.c4)) AND (((rt1.c5) NOTNULL)));
SELECT MAX(rt1.c5) FROM t0, rt1 NOT INDEXED WHERE (((rt1.c4)AND(NULL))) ORDER BY ((t0.c4) ISNULL) COLLATE BINARY  NULLS FIRST, (((((rt1.c4))>((t0.c2))))GLOB(((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c0)))) ASC  NULLS LAST, (((- (t0.c1)))==(CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN t0.c3 WHEN rt1.c5 THEN t0.c1 END))  NULLS LAST, (CAST(t0.c4 AS BLOB) IN (CASE WHEN t0.c4 THEN t0.c3 ELSE rt1.c4 END, ((rt1.c1) NOT NULL)));
SELECT ALL * FROM rt1 WHERE ((~ ('Z}'))) ORDER BY ((rt1.c5 COLLATE NOCASE) IS FALSE) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE ((~ ('Z}'))) ORDER BY CAST(((rt1.c2)>=(rt1.c2)) AS INTEGER) DESC  NULLS LAST, rt1.c2 LIMIT 0X2;
SELECT ALL * FROM rt1 WHERE ((~ ('Z}'))) ORDER BY ((rt1.c5 COLLATE NOCASE) IS FALSE) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE ((~ ('Z}'))) ORDER BY CAST(((rt1.c2)>=(rt1.c2)) AS INTEGER) DESC  NULLS LAST, rt1.c2 LIMIT 0X2;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t0 ON x'00c1' WHERE (((((((((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c6 WHEN '1553026207' THEN rt1.c4 END)OR(((t0.c0)<<(rt1.c0)))))AND(((rt1.c4) IS TRUE))))OR('C0')))OR(((rt1.c5) IS TRUE))));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON x'00c1' WHERE (((((((((((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c6 WHEN '1553026207' THEN rt1.c4 END)OR(((t0.c0)<<(rt1.c0)))))AND(((rt1.c4) IS TRUE))))OR('C0')))OR(((rt1.c5) IS TRUE))))AND(((((rt1.c2) IS TRUE))>=((t0.c0 IN (rt1.c1, t0.c3))))))) ORDER BY ((t0.c4 COLLATE NOCASE) NOT BETWEEN ((((rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c6)) AND ((rt1.c2, rt1.c5)))) AND ((((t0.c1, rt1.c0))>((NULL, t0.c2))))) ASC  NULLS FIRST, (rt1.c6 COLLATE NOCASE IN ()) LIMIT 0x0;
SELECT * FROM t0, rt1 WHERE ('l') ORDER BY ((rt1.c5 COLLATE RTRIM)+(((rt1.c5) IS TRUE))) ASC, CASE ((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2))  WHEN ((t0.c0)<=(rt1.c0)) THEN 1.94179975E9 WHEN ((0.9741473478298093) NOTNULL) THEN rt1.c3 WHEN 0.9570299290211169 THEN CASE WHEN t0.c3 THEN rt1.c4 WHEN rt1.c6 THEN 0.3654070203621329 WHEN rt1.c6 THEN t0.c1 ELSE rt1.c0 END WHEN CAST(rt1.c2 AS NUMERIC) THEN CAST(t0.c1 AS REAL) END ASC, ((((((((((((((((((rt1.c0)OR(t0.c4)))OR(t0.c3)))OR((- (t0.c2)))))OR(((rt1.c0) BETWEEN (t0.c2) AND (rt1.c0)))))AND(((((t0.c0)OR(t0.c1)))AND(t0.c2)))))OR(((((t0.c3)AND(t0.c1)))AND(t0.c4)))))AND(((rt1.c5) NOT NULL))))OR((- (rt1.c6)))))OR(UNLIKELY(rt1.c3))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE ('l') ORDER BY ((rt1.c5 COLLATE RTRIM)+(((rt1.c5) IS TRUE))) ASC, CASE ((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2))  WHEN ((t0.c0)<=(rt1.c0)) THEN 1.94179975E9 WHEN ((0.9741473478298093) NOTNULL) THEN rt1.c3 WHEN 0.9570299290211169 THEN CASE WHEN t0.c3 THEN rt1.c4 WHEN rt1.c6 THEN 0.3654070203621329 WHEN rt1.c6 THEN t0.c1 ELSE rt1.c0 END WHEN CAST(rt1.c2 AS NUMERIC) THEN CAST(t0.c1 AS REAL) END ASC, ((((((((((((((((((rt1.c0)OR(t0.c4)))OR(t0.c3)))OR((- (t0.c2)))))OR(((rt1.c0) BETWEEN (t0.c2) AND (rt1.c0)))))AND(((((t0.c0)OR(t0.c1)))AND(t0.c2)))))OR(((((t0.c3)AND(t0.c1)))AND(t0.c4)))))AND(((rt1.c5) NOT NULL))))OR((- (rt1.c6)))))OR(UNLIKELY(rt1.c3))) DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CASE ((t0.c3) NOT BETWEEN (rt1.c4) AND (t0.c1))  WHEN ((t0.c3) BETWEEN (t0.c1) AND (rt1.c3)) THEN (~ (rt1.c3)) END) ORDER BY ((rt1.c5 COLLATE RTRIM)+(((rt1.c5) IS TRUE))) ASC, CASE ((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2))  WHEN ((t0.c0)<=(rt1.c0)) THEN 1.94179975E9 WHEN ((0.9741473478298093) NOTNULL) THEN rt1.c3 WHEN 0.9570299290211169 THEN CASE WHEN t0.c3 THEN rt1.c4 WHEN rt1.c6 THEN 0.3654070203621329 WHEN rt1.c6 THEN t0.c1 ELSE rt1.c0 END WHEN CAST(rt1.c2 AS NUMERIC) THEN CAST(t0.c1 AS REAL) END ASC, ((((((((((((((((((rt1.c0)OR(t0.c4)))OR(t0.c3)))OR((- (t0.c2)))))OR(((rt1.c0) BETWEEN (t0.c2) AND (rt1.c0)))))AND(((((t0.c0)OR(t0.c1)))AND(t0.c2)))))OR(((((t0.c3)AND(t0.c1)))AND(t0.c4)))))AND(((rt1.c5) NOT NULL))))OR((- (rt1.c6)))))OR(UNLIKELY(rt1.c3))) DESC  NULLS FIRST LIMIT 0X1;
SELECT * FROM t0, rt1 WHERE ('l') ORDER BY ((rt1.c5 COLLATE RTRIM)+(((rt1.c5) IS TRUE))) ASC, CASE ((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2))  WHEN ((t0.c0)<=(rt1.c0)) THEN 1.94179975E9 WHEN ((0.9741473478298093) NOTNULL) THEN rt1.c3 WHEN 0.9570299290211169 THEN CASE WHEN t0.c3 THEN rt1.c4 WHEN rt1.c6 THEN 0.3654070203621329 WHEN rt1.c6 THEN t0.c1 ELSE rt1.c0 END WHEN CAST(rt1.c2 AS NUMERIC) THEN CAST(t0.c1 AS REAL) END ASC, ((((((((((((((((((rt1.c0)OR(t0.c4)))OR(t0.c3)))OR((- (t0.c2)))))OR(((rt1.c0) BETWEEN (t0.c2) AND (rt1.c0)))))AND(((((t0.c0)OR(t0.c1)))AND(t0.c2)))))OR(((((t0.c3)AND(t0.c1)))AND(t0.c4)))))AND(((rt1.c5) NOT NULL))))OR((- (rt1.c6)))))OR(UNLIKELY(rt1.c3))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE ('l') ORDER BY ((rt1.c5 COLLATE RTRIM)+(((rt1.c5) IS TRUE))) ASC, CASE ((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2))  WHEN ((t0.c0)<=(rt1.c0)) THEN 1.94179975E9 WHEN ((0.9741473478298093) NOTNULL) THEN rt1.c3 WHEN 0.9570299290211169 THEN CASE WHEN t0.c3 THEN rt1.c4 WHEN rt1.c6 THEN 0.3654070203621329 WHEN rt1.c6 THEN t0.c1 ELSE rt1.c0 END WHEN CAST(rt1.c2 AS NUMERIC) THEN CAST(t0.c1 AS REAL) END ASC, ((((((((((((((((((rt1.c0)OR(t0.c4)))OR(t0.c3)))OR((- (t0.c2)))))OR(((rt1.c0) BETWEEN (t0.c2) AND (rt1.c0)))))AND(((((t0.c0)OR(t0.c1)))AND(t0.c2)))))OR(((((t0.c3)AND(t0.c1)))AND(t0.c4)))))AND(((rt1.c5) NOT NULL))))OR((- (rt1.c6)))))OR(UNLIKELY(rt1.c3))) DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CASE ((t0.c3) NOT BETWEEN (rt1.c4) AND (t0.c1))  WHEN ((t0.c3) BETWEEN (t0.c1) AND (rt1.c3)) THEN (~ (rt1.c3)) END) ORDER BY ((rt1.c5 COLLATE RTRIM)+(((rt1.c5) IS TRUE))) ASC, CASE ((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2))  WHEN ((t0.c0)<=(rt1.c0)) THEN 1.94179975E9 WHEN ((0.9741473478298093) NOTNULL) THEN rt1.c3 WHEN 0.9570299290211169 THEN CASE WHEN t0.c3 THEN rt1.c4 WHEN rt1.c6 THEN 0.3654070203621329 WHEN rt1.c6 THEN t0.c1 ELSE rt1.c0 END WHEN CAST(rt1.c2 AS NUMERIC) THEN CAST(t0.c1 AS REAL) END ASC, ((((((((((((((((((rt1.c0)OR(t0.c4)))OR(t0.c3)))OR((- (t0.c2)))))OR(((rt1.c0) BETWEEN (t0.c2) AND (rt1.c0)))))AND(((((t0.c0)OR(t0.c1)))AND(t0.c2)))))OR(((((t0.c3)AND(t0.c1)))AND(t0.c4)))))AND(((rt1.c5) NOT NULL))))OR((- (rt1.c6)))))OR(UNLIKELY(rt1.c3))) DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL MIN(rt1.c1) FROM rt1, t0 WHERE ((((rt1.c1))>=((rt1.c3)))) ORDER BY CAST(rt1.c3 COLLATE NOCASE AS NUMERIC)  NULLS FIRST;
SELECT MIN(rt1.c1) FROM rt1, t0 WHERE ((((rt1.c1))>=((rt1.c3)))) ORDER BY CAST(rt1.c3 COLLATE NOCASE AS NUMERIC)  NULLS FIRST LIMIT 0;
SELECT ALL MAX(rt1.c2) FROM rt1 WHERE ((- (rt1.c4 COLLATE RTRIM)));
SELECT DISTINCT MAX(rt1.c2) FROM rt1 WHERE ((((- (rt1.c4 COLLATE RTRIM)))AND(((((((((((((rt1.c3)AND(rt1.c6)))OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c2)))OR(((((rt1.c4)OR(rt1.c0)))OR(rt1.c4)))))AND(0X2932eb2d))))) ORDER BY '363440450', ((rt1.c3 IN ()) IN ()) DESC  NULLS FIRST, rt1.c0 LIMIT 3;
SELECT ALL MIN(t0.c4) FROM t0 WHERE ((((+ (t0.c3)))%(((t0.c0)|(t0.c4))))) ORDER BY (+ (CASE t0.c0  WHEN t0.c0 THEN 0.2229151817596694 WHEN t0.c4 THEN t0.c2 END))  NULLS FIRST;
SELECT ALL MIN(t0.c4) FROM t0 WHERE ((((+ (t0.c3)))%(((t0.c0)|(t0.c4))))) ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN (NOT (t0.c4)) THEN '0.5286396087382006' WHEN t0.c4 COLLATE BINARY THEN ((((((t0.c4)AND(t0.c3)))OR(t0.c4)))OR(t0.c0)) WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE NULL END THEN ((t0.c2)IS NOT(t0.c2)) ELSE (NOT (t0.c1)) END  NULLS LAST, (- (t0.c4 COLLATE NOCASE))  NULLS LAST INTERSECT SELECT ALL MIN(t0.c4) FROM t0 WHERE (x'' COLLATE NOCASE) ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN (NOT (t0.c4)) THEN '0.5286396087382006' WHEN t0.c4 COLLATE BINARY THEN ((((((t0.c4)AND(t0.c3)))OR(t0.c4)))OR(t0.c0)) WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE NULL END THEN ((t0.c2)IS NOT(t0.c2)) ELSE (NOT (t0.c1)) END  NULLS LAST, (- (t0.c4 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (CASE ((rt1.c1)/(rt1.c5))  WHEN ((0.9932081630215979) NOT BETWEEN (rt1.c2) AND (rt1.c6)) THEN ((0.0827290981042963)IS NOT(rt1.c0)) WHEN ((t0.c4) NOT BETWEEN (rt1.c6) AND (rt1.c3)) THEN ((rt1.c0) NOT BETWEEN (1941799750) AND (rt1.c3)) END);
SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE ((rt1.c1)/(rt1.c5))  WHEN ((0.9932081630215979) NOT BETWEEN (rt1.c2) AND (rt1.c6)) THEN ((0.0827290981042963)IS NOT(rt1.c0)) WHEN ((t0.c4) NOT BETWEEN (rt1.c6) AND (rt1.c3)) THEN ((rt1.c0) NOT BETWEEN (1941799750) AND (rt1.c3)) END)AND(((((t0.c1)/(rt1.c4)))IS(rt1.c0))))) ORDER BY ((TRIM(t0.c2, rt1.c3))&(NULL)), CAST(json_patch(rt1.c6, rt1.c4) AS INTEGER) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (CASE ((rt1.c1)/(rt1.c5))  WHEN ((0.9932081630215979) NOT BETWEEN (rt1.c2) AND (rt1.c6)) THEN ((0.0827290981042963)IS NOT(rt1.c0)) WHEN ((t0.c4) NOT BETWEEN (rt1.c6) AND (rt1.c3)) THEN ((rt1.c0) NOT BETWEEN (1941799750) AND (rt1.c3)) END);
SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE ((rt1.c1)/(rt1.c5))  WHEN ((0.9932081630215979) NOT BETWEEN (rt1.c2) AND (rt1.c6)) THEN ((0.0827290981042963)IS NOT(rt1.c0)) WHEN ((t0.c4) NOT BETWEEN (rt1.c6) AND (rt1.c3)) THEN ((rt1.c0) NOT BETWEEN (1941799750) AND (rt1.c3)) END)AND(((((t0.c1)/(rt1.c4)))IS(rt1.c0))))) ORDER BY ((TRIM(t0.c2, rt1.c3))&(NULL)), CAST(json_patch(rt1.c6, rt1.c4) AS INTEGER) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (x'');
SELECT * FROM t0 WHERE (((x'')AND(((((t0.c3)IS NOT(t0.c1)))*(((t0.c4)%(0.31791472241338325))))))) INTERSECT SELECT * FROM t0 WHERE ((+ ((((t0.c3)) BETWEEN ((0x7f1fb72b)) AND ((t0.c1))))));
SELECT * FROM t0 WHERE (x'');
SELECT * FROM t0 WHERE (((x'')AND(((((t0.c3)IS NOT(t0.c1)))*(((t0.c4)%(0.31791472241338325))))))) INTERSECT SELECT * FROM t0 WHERE ((+ ((((t0.c3)) BETWEEN ((0x7f1fb72b)) AND ((t0.c1))))));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (((((((((rt1.c6 IN ()))AND(((NULL) BETWEEN (t0.c0) AND (rt1.c0)))))AND(CASE WHEN rt1.c0 THEN rt1.c4 END)))AND((~ (t0.c3)))))AND(NULL)) WHERE ((((t0.c4, rt1.c2, t0.c2, t0.c1)) BETWEEN (((((t0.c1, rt1.c2, rt1.c3)) BETWEEN ((rt1.c2, x'', rt1.c0)) AND ((rt1.c5, rt1.c0, rt1.c6))), (rt1.c4 IN (t0.c2)), rt1.c0 COLLATE RTRIM, (rt1.c2 IN ()))) AND ((((rt1.c1)<<(t0.c2)), (((rt1.c1)) NOT BETWEEN (('菄')) AND ((rt1.c5))), (NOT ('-659412900')), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4)))))) ORDER BY x'a826' ASC  NULLS FIRST, (((- (rt1.c1)))!=(((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c3)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON (((((((((rt1.c6 IN ()))AND(((NULL) BETWEEN (t0.c0) AND (rt1.c0)))))AND(CASE WHEN rt1.c0 THEN rt1.c4 END)))AND((~ (t0.c3)))))AND(NULL)) WHERE ((((((t0.c4, rt1.c2, t0.c2, t0.c1)) BETWEEN (((((t0.c1, rt1.c2, rt1.c3)) BETWEEN ((rt1.c2, x'', rt1.c0)) AND ((rt1.c5, rt1.c0, rt1.c6))), (rt1.c4 IN (t0.c2)), rt1.c0 COLLATE RTRIM, (rt1.c2 IN ()))) AND ((((rt1.c1)<<(t0.c2)), (((rt1.c1)) NOT BETWEEN (('菄')) AND ((rt1.c5))), (NOT ('-659412900')), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4))))))AND(((((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c5)))AND(((t0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND(((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c1)))))AND(CASE t0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN 2.015583807E9 ELSE t0.c3 END))))) ORDER BY x'a826' ASC  NULLS FIRST, (((- (rt1.c1)))<>(((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c3)))) DESC  NULLS LAST;
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (((((((((rt1.c6 IN ()))AND(((NULL) BETWEEN (t0.c0) AND (rt1.c0)))))AND(CASE WHEN rt1.c0 THEN rt1.c4 END)))AND((~ (t0.c3)))))AND(NULL)) WHERE ((((t0.c4, rt1.c2, t0.c2, t0.c1)) BETWEEN (((((t0.c1, rt1.c2, rt1.c3)) BETWEEN ((rt1.c2, x'', rt1.c0)) AND ((rt1.c5, rt1.c0, rt1.c6))), (rt1.c4 IN (t0.c2)), rt1.c0 COLLATE RTRIM, (rt1.c2 IN ()))) AND ((((rt1.c1)<<(t0.c2)), (((rt1.c1)) NOT BETWEEN (('菄')) AND ((rt1.c5))), (NOT ('-659412900')), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4)))))) ORDER BY x'a826' ASC  NULLS FIRST, (((- (rt1.c1)))!=(((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c3)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON (((((((((rt1.c6 IN ()))AND(((NULL) BETWEEN (t0.c0) AND (rt1.c0)))))AND(CASE WHEN rt1.c0 THEN rt1.c4 END)))AND((~ (t0.c3)))))AND(NULL)) WHERE ((((((t0.c4, rt1.c2, t0.c2, t0.c1)) BETWEEN (((((t0.c1, rt1.c2, rt1.c3)) BETWEEN ((rt1.c2, x'', rt1.c0)) AND ((rt1.c5, rt1.c0, rt1.c6))), (rt1.c4 IN (t0.c2)), rt1.c0 COLLATE RTRIM, (rt1.c2 IN ()))) AND ((((rt1.c1)<<(t0.c2)), (((rt1.c1)) NOT BETWEEN (('菄')) AND ((rt1.c5))), (NOT ('-659412900')), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c4))))))AND(((((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c5)))AND(((t0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND(((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c1)))))AND(CASE t0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN 2.015583807E9 ELSE t0.c3 END))))) ORDER BY x'a826' ASC  NULLS FIRST, (((- (rt1.c1)))<>(((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c3)))) DESC  NULLS LAST;
SELECT MAX(rt1.c2) FROM rt1 WHERE ((((((+ (rt1.c2)))AND(((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c4)))))OR(CAST(rt1.c5 AS REAL)))) ORDER BY LIKELIHOOD(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 WHEN '-547373890' THEN rt1.c1 END, UPPER(DISTINCT rt1.c3)), ((rt1.c0 COLLATE RTRIM)GLOB((((rt1.c4, rt1.c4)) NOT BETWEEN ((rt1.c5, rt1.c6)) AND ((rt1.c4, rt1.c1)))))  NULLS LAST;
SELECT DISTINCT MAX(rt1.c2) FROM rt1 WHERE ((((((((+ (rt1.c2)))AND(((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c4)))))OR(CAST(rt1.c5 AS REAL))))AND(CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt1.c2)IS NOT(rt1.c4)) WHEN ((rt1.c5) BETWEEN (rt1.c0) AND (rt1.c5)) THEN (rt1.c0 IN (rt1.c6, rt1.c2)) WHEN ((x'601c') BETWEEN (rt1.c2) AND ('')) THEN (rt1.c6 IN ()) WHEN '' THEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END))) ORDER BY COALESCE(DISTINCT (rt1.c0 IN (0.5631928680229515)), CHANGES()) DESC  NULLS FIRST, ((((((rt1.c0) NOTNULL))AND(x'')))OR(CAST(rt1.c0 AS BLOB))) DESC LIMIT 0X1;
SELECT MIN(rt1.c5) FROM rt1 WHERE (x'');
SELECT ALL MIN(rt1.c5) FROM rt1 WHERE (x'') INTERSECT SELECT MIN(rt1.c5) FROM rt1 WHERE ((((rt1.c2 IN ()))<=(((rt1.c5)<<('')))));
SELECT MIN(rt1.c4) FROM rt1 WHERE ((NOT (((rt1.c6)IS NOT(rt1.c6)))));
SELECT ALL MIN(rt1.c4) FROM rt1 WHERE ((NOT (((rt1.c6)IS NOT(rt1.c6))))) ORDER BY ((LIKELY(rt1.c0))!=(((rt1.c5) BETWEEN (0.5376854203529395) AND (NULL)))) DESC  NULLS FIRST, ((CAST(rt1.c4 AS REAL))GLOB(NULL)), '\' LIMIT 1;
SELECT * FROM rt1 WHERE (((('591531326', rt1.c2))>=((rt1.c0, rt1.c3))) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((rt1.c4)>(rt1.c5))) ISNULL)  NULLS LAST, ((SQLITE_COMPILEOPTION_GET(rt1.c3)) BETWEEN ((- (rt1.c6))) AND (CASE rt1.c5  WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c5 END)) DESC;
SELECT * FROM rt1 WHERE (((('591531326', rt1.c2))>=((rt1.c0, rt1.c3))) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c0)), (((rt1.c1, rt1.c5, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c2, 'L(S1', rt1.c6)) AND ((rt1.c0, rt1.c0, rt1.c3, rt1.c3)))))>=((rt1.c0 COLLATE RTRIM, (NOT (rt1.c5))))), UNLIKELY((+ (rt1.c3)))  NULLS LAST;
SELECT * FROM rt1 WHERE (((('591531326', rt1.c2))>=((rt1.c0, rt1.c3))) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((rt1.c4)>(rt1.c5))) ISNULL)  NULLS LAST, ((SQLITE_COMPILEOPTION_GET(rt1.c3)) BETWEEN ((- (rt1.c6))) AND (CASE rt1.c5  WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c5 END)) DESC;
SELECT * FROM rt1 WHERE (((('591531326', rt1.c2))>=((rt1.c0, rt1.c3))) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c0)), (((rt1.c1, rt1.c5, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c2, 'L(S1', rt1.c6)) AND ((rt1.c0, rt1.c0, rt1.c3, rt1.c3)))))>=((rt1.c0 COLLATE RTRIM, (NOT (rt1.c5))))), UNLIKELY((+ (rt1.c3)))  NULLS LAST;
SELECT ALL * FROM rt1 INNER JOIN t0 ON CASE WHEN CAST(t0.c2 AS NUMERIC) THEN ((rt1.c0)&(x'83')) WHEN CAST(x'6c8e05' AS TEXT) THEN (~ ('')) ELSE ((rt1.c0) IS FALSE) END WHERE (CAST(COALESCE(DISTINCT t0.c0, rt1.c6, t0.c4) AS TEXT));
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON CASE WHEN CAST(t0.c2 AS NUMERIC) THEN ((rt1.c0)&(x'83')) WHEN CAST(x'6c8e05' AS TEXT) THEN (~ ('')) ELSE ((rt1.c0) IS FALSE) END WHERE (CAST(COALESCE(DISTINCT t0.c0, rt1.c6, t0.c4) AS TEXT)) LIMIT 0x1;
SELECT ALL * FROM rt1 INNER JOIN t0 ON CASE WHEN CAST(t0.c2 AS NUMERIC) THEN ((rt1.c0)&(x'83')) WHEN CAST(x'6c8e05' AS TEXT) THEN (~ ('')) ELSE ((rt1.c0) IS FALSE) END WHERE (CAST(COALESCE(DISTINCT t0.c0, rt1.c6, t0.c4) AS TEXT));
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON CASE WHEN CAST(t0.c2 AS NUMERIC) THEN ((rt1.c0)&(x'83')) WHEN CAST(x'6c8e05' AS TEXT) THEN (~ ('')) ELSE ((rt1.c0) IS FALSE) END WHERE (CAST(COALESCE(DISTINCT t0.c0, rt1.c6, t0.c4) AS TEXT)) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE ((((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c3)) IN ()));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c3)) IN ())) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c4)-(t0.c0))) IS TRUE));
SELECT ALL * FROM t0 WHERE ((((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c3)) IN ()));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c3)) IN ())) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c4)-(t0.c0))) IS TRUE));
SELECT ALL * FROM rt1 WHERE (CAST(0.7403749287141829 AS BLOB));
SELECT DISTINCT * FROM rt1 WHERE (((CAST(0.7403749287141829 AS BLOB))AND((((rt1.c5 IN (rt1.c4)))&(''))))) ORDER BY ((NOT (rt1.c6)) IN ()) DESC, TYPEOF(DISTINCT ((rt1.c5)=(rt1.c4))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt1 WHERE (CAST(0.7403749287141829 AS BLOB));
SELECT DISTINCT * FROM rt1 WHERE (((CAST(0.7403749287141829 AS BLOB))AND((((rt1.c5 IN (rt1.c4)))&(''))))) ORDER BY ((NOT (rt1.c6)) IN ()) DESC, TYPEOF(DISTINCT ((rt1.c5)=(rt1.c4))) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM t0 WHERE ((((t0.c2, t0.c4, t0.c3, t0.c1, t0.c4)) NOT BETWEEN ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c4)), t0.c2 COLLATE BINARY, NULL, LIKELIHOOD(t0.c2, '-180735253'), CASE WHEN t0.c2 THEN NULL END)) AND (((('-1627313008')/(t0.c4)), (- (t0.c4)), json_patch(x'6f', t0.c4), t0.c0 COLLATE RTRIM, CAST(t0.c2 AS REAL))))) ORDER BY CASE (t0.c3 IN (t0.c4))  WHEN ((t0.c0)IS NOT(t0.c3)) THEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) ELSE ((-1.170810712E9) NOT BETWEEN (t0.c3) AND (0.7876641719860041)) END  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c2, t0.c4, t0.c3, t0.c1, t0.c4)) NOT BETWEEN ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c4)), t0.c2 COLLATE BINARY, NULL, LIKELIHOOD(t0.c2, '-180735253'), CASE WHEN t0.c2 THEN NULL END)) AND (((('-1627313008')/(t0.c4)), (- (t0.c4)), json_patch(x'6f', t0.c4), t0.c0 COLLATE RTRIM, CAST(t0.c2 AS REAL))))) ORDER BY CASE (t0.c3 IN (t0.c4))  WHEN ((t0.c0)IS NOT(t0.c3)) THEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) ELSE ((-1.170810712E9) NOT BETWEEN (t0.c3) AND (0.7876641719860041)) END  NULLS FIRST LIMIT 3 INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c3)) BETWEEN (((((t0.c1, t0.c4)) NOT BETWEEN ((t0.c2, t0.c2)) AND ((t0.c1, t0.c4))))) AND ((CAST(t0.c0 AS INTEGER))))) ORDER BY CASE (t0.c3 IN (t0.c4))  WHEN ((t0.c0)IS NOT(t0.c3)) THEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) ELSE ((-1.170810712E9) NOT BETWEEN (t0.c3) AND (0.7876641719860041)) END  NULLS FIRST LIMIT 3;
SELECT * FROM t0 WHERE ((((t0.c2, t0.c4, t0.c3, t0.c1, t0.c4)) NOT BETWEEN ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c4)), t0.c2 COLLATE BINARY, NULL, LIKELIHOOD(t0.c2, '-180735253'), CASE WHEN t0.c2 THEN NULL END)) AND (((('-1627313008')/(t0.c4)), (- (t0.c4)), json_patch(x'6f', t0.c4), t0.c0 COLLATE RTRIM, CAST(t0.c2 AS REAL))))) ORDER BY CASE (t0.c3 IN (t0.c4))  WHEN ((t0.c0)IS NOT(t0.c3)) THEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) ELSE ((-1.170810712E9) NOT BETWEEN (t0.c3) AND (0.7876641719860041)) END  NULLS FIRST;
SELECT ALL * FROM rt1 CROSS JOIN t0 ON CAST(((((((rt1.c6)OR(t0.c2)))OR(rt1.c3)))OR(rt1.c6)) AS BLOB) WHERE (((((t0.c3)IS(rt1.c5))) NOT BETWEEN (t0.c4 COLLATE NOCASE) AND ((t0.c4 IN ())))) ORDER BY UPPER(((t0.c1)<(t0.c3))) DESC, ((t0.c3 COLLATE RTRIM)+((t0.c4 IN ())));
SELECT ALL * FROM rt1 CROSS JOIN t0 ON CAST(((((((rt1.c6)OR(t0.c2)))OR(rt1.c3)))OR(rt1.c6)) AS BLOB) WHERE (((((((t0.c3)IS(rt1.c5))) NOT BETWEEN (t0.c4 COLLATE NOCASE) AND ((t0.c4 IN ()))))AND(t0.c1))) ORDER BY CAST(((rt1.c2) BETWEEN (rt1.c0) AND (t0.c1)) AS REAL), ((((t0.c0)GLOB(t0.c3))) NOT BETWEEN (t0.c4 COLLATE BINARY) AND (((((rt1.c1)OR(t0.c1)))AND(0.07549142447844681))))  NULLS FIRST, (+ (NULLIF(DISTINCT t0.c3, rt1.c4))) ASC LIMIT 0x0;
SELECT ALL * FROM rt1 CROSS JOIN t0 ON CAST(((((((rt1.c6)OR(t0.c2)))OR(rt1.c3)))OR(rt1.c6)) AS BLOB) WHERE (((((t0.c3)IS(rt1.c5))) NOT BETWEEN (t0.c4 COLLATE NOCASE) AND ((t0.c4 IN ())))) ORDER BY UPPER(((t0.c1)<(t0.c3))) DESC, ((t0.c3 COLLATE RTRIM)+((t0.c4 IN ())));
SELECT ALL * FROM rt1 CROSS JOIN t0 ON CAST(((((((rt1.c6)OR(t0.c2)))OR(rt1.c3)))OR(rt1.c6)) AS BLOB) WHERE (((((((t0.c3)IS(rt1.c5))) NOT BETWEEN (t0.c4 COLLATE NOCASE) AND ((t0.c4 IN ()))))AND(t0.c1))) ORDER BY CAST(((rt1.c2) BETWEEN (rt1.c0) AND (t0.c1)) AS REAL), ((((t0.c0)GLOB(t0.c3))) NOT BETWEEN (t0.c4 COLLATE BINARY) AND (((((rt1.c1)OR(t0.c1)))AND(0.07549142447844681))))  NULLS FIRST, (+ (NULLIF(DISTINCT t0.c3, rt1.c4))) ASC LIMIT 0x0;
SELECT ALL * FROM rt1 NOT INDEXED WHERE (CAST(x'67' AS NUMERIC)) ORDER BY CASE 0.95141008104842  WHEN ((rt1.c3)==(rt1.c6)) THEN rt1.c4 COLLATE RTRIM WHEN CASE WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c4 END THEN rt1.c4 COLLATE NOCASE END DESC, (((NOT (rt1.c5)))*(CASE 0xffffffffe0cfd44a  WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c6 THEN rt1.c0 END)) DESC, ((((((((rt1.c3)LIKE(rt1.c3)))OR(((x'c65ecb') NOT BETWEEN (rt1.c1) AND (rt1.c2)))))AND(((rt1.c4)*(rt1.c6)))))OR((~ (rt1.c3)))) DESC;
SELECT DISTINCT * FROM rt1 WHERE (((CAST(x'67' AS NUMERIC))AND(CAST((rt1.c3 IN (rt1.c3)) AS INTEGER)))) ORDER BY ((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c6)))OR(rt1.c0)))AND(rt1.c1)) COLLATE RTRIM LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CAST(rt1.c6 COLLATE BINARY AS NUMERIC)) ORDER BY ((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c6)))OR(rt1.c0)))AND(rt1.c1)) COLLATE RTRIM LIMIT 0;
SELECT ALL * FROM rt1 NOT INDEXED WHERE (CAST(x'67' AS NUMERIC)) ORDER BY CASE 0.95141008104842  WHEN ((rt1.c3)==(rt1.c6)) THEN rt1.c4 COLLATE RTRIM WHEN CASE WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c4 END THEN rt1.c4 COLLATE NOCASE END DESC, (((NOT (rt1.c5)))*(CASE 0xffffffffe0cfd44a  WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c6 THEN rt1.c0 END)) DESC, ((((((((rt1.c3)LIKE(rt1.c3)))OR(((x'c65ecb') NOT BETWEEN (rt1.c1) AND (rt1.c2)))))AND(((rt1.c4)*(rt1.c6)))))OR((~ (rt1.c3)))) DESC;
SELECT DISTINCT * FROM rt1 WHERE (((CAST(x'67' AS NUMERIC))AND(CAST((rt1.c3 IN (rt1.c3)) AS INTEGER)))) ORDER BY ((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c6)))OR(rt1.c0)))AND(rt1.c1)) COLLATE RTRIM LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CAST(rt1.c6 COLLATE BINARY AS NUMERIC)) ORDER BY ((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c6)))OR(rt1.c0)))AND(rt1.c1)) COLLATE RTRIM LIMIT 0;
SELECT COUNT(*) FROM t0, rt1 WHERE ((CAST(rt1.c1 AS INTEGER) IN ((((t0.c2))<>((rt1.c1))))));
SELECT COUNT(*) FROM t0, rt1 WHERE ((((CAST(rt1.c1 AS INTEGER) IN ((((t0.c2))!=((rt1.c1))))))AND(x''))) LIMIT 4 INTERSECT SELECT COUNT(*) FROM t0, rt1 WHERE (((((t0.c1)|('8735304')))|(rt1.c5))) LIMIT 4;
SELECT MAX(rt1.c4) FROM t0, rt1 NOT INDEXED WHERE (CAST(LTRIM('1400648114') AS TEXT)) ORDER BY CAST(((rt1.c3)>=(rt1.c1)) AS TEXT) DESC  NULLS FIRST;
SELECT DISTINCT MAX(rt1.c4) FROM t0, rt1 WHERE (((CAST(LTRIM('1400648114') AS TEXT))AND(UPPER(((rt1.c2)*(t0.c3)))))) ORDER BY ((((CASE WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c6 THEN rt1.c2 END)OR(((rt1.c6)%(rt1.c0)))))AND(((rt1.c0)*(NULL)))) ASC, UPPER(DISTINCT ((((t0.c3)OR(t0.c0)))AND(t0.c0))) LIMIT 0;
SELECT * FROM rt1 INNER JOIN t0 ON ABS(DISTINCT CAST(t0.c0 AS REAL)) WHERE (t0.c4) ORDER BY ((((LIKELIHOOD(DISTINCT t0.c2, t0.c2))AND(t0.c0 COLLATE BINARY)))AND(UNICODE(t0.c0)))  NULLS LAST;
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ABS(DISTINCT CAST(t0.c0 AS REAL)) WHERE (t0.c4) ORDER BY CASE (((rt1.c1))>=((t0.c2)))  WHEN SQLITE_COMPILEOPTION_USED(t0.c4) THEN ((rt1.c5)OR(0.1504953628883191)) WHEN (x'4c63' IN ()) THEN (rt1.c4 IN (rt1.c3)) WHEN ((NULL)LIKE(t0.c4)) THEN ((rt1.c6) BETWEEN (rt1.c0) AND (t0.c0)) ELSE ((t0.c1)<(rt1.c5)) END DESC  NULLS LAST, ((('-1480834621', x'8039')) NOT BETWEEN (((+ (rt1.c6)), (- (x'')))) AND ((((rt1.c6) NOT BETWEEN (rt1.c5) AND (NULL)), ((t0.c2)OR(t0.c2))))) ASC, ((rt1.c0)-(t0.c0)) COLLATE BINARY DESC INTERSECT SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ABS(DISTINCT CAST(t0.c0 AS REAL)) WHERE (((((((rt1.c2, rt1.c6, t0.c0)) BETWEEN ((t0.c0, rt1.c3, rt1.c2)) AND ((rt1.c2, rt1.c4, t0.c0))), ((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c4))))==((NULL, CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN 0.7124830930282101 ELSE t0.c2 END)))) ORDER BY CASE (((rt1.c1))>=((t0.c2)))  WHEN SQLITE_COMPILEOPTION_USED(t0.c4) THEN ((rt1.c5)OR(0.1504953628883191)) WHEN (x'4c63' IN ()) THEN (rt1.c4 IN (rt1.c3)) WHEN ((NULL)LIKE(t0.c4)) THEN ((rt1.c6) BETWEEN (rt1.c0) AND (t0.c0)) ELSE ((t0.c1)<(rt1.c5)) END DESC  NULLS LAST, ((('-1480834621', x'8039')) NOT BETWEEN (((+ (rt1.c6)), (- (x'')))) AND ((((rt1.c6) NOT BETWEEN (rt1.c5) AND (NULL)), ((t0.c2)OR(t0.c2))))) ASC, ((rt1.c0)-(t0.c0)) COLLATE BINARY DESC;
SELECT * FROM rt1 INNER JOIN t0 ON ABS(DISTINCT CAST(t0.c0 AS REAL)) WHERE (t0.c4) ORDER BY ((((LIKELIHOOD(DISTINCT t0.c2, t0.c2))AND(t0.c0 COLLATE BINARY)))AND(UNICODE(t0.c0)))  NULLS LAST;
SELECT * FROM t0 WHERE (CASE ((t0.c0) BETWEEN (NULL) AND (t0.c1))  WHEN t0.c2 THEN CAST(t0.c0 AS INTEGER) WHEN CAST(t0.c1 AS REAL) THEN t0.c0 END) ORDER BY ((CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE t0.c4 END) NOTNULL);
SELECT * FROM t0 WHERE (((CASE ((t0.c0) BETWEEN (NULL) AND (t0.c1))  WHEN t0.c2 THEN CAST(t0.c0 AS INTEGER) WHEN CAST(t0.c1 AS REAL) THEN t0.c0 END)AND(((t0.c0)==(t0.c1)) COLLATE BINARY))) ORDER BY TRIM(CAST(t0.c0 AS BLOB)) ASC LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (t0.c4) ORDER BY TRIM(CAST(t0.c0 AS BLOB)) ASC LIMIT 0;
SELECT * FROM t0 WHERE (CASE ((t0.c0) BETWEEN (NULL) AND (t0.c1))  WHEN t0.c2 THEN CAST(t0.c0 AS INTEGER) WHEN CAST(t0.c1 AS REAL) THEN t0.c0 END) ORDER BY ((CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE t0.c4 END) NOTNULL);
SELECT * FROM t0 WHERE (((CASE ((t0.c0) BETWEEN (NULL) AND (t0.c1))  WHEN t0.c2 THEN CAST(t0.c0 AS INTEGER) WHEN CAST(t0.c1 AS REAL) THEN t0.c0 END)AND(((t0.c0)==(t0.c1)) COLLATE BINARY))) ORDER BY TRIM(CAST(t0.c0 AS BLOB)) ASC LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (t0.c4) ORDER BY TRIM(CAST(t0.c0 AS BLOB)) ASC LIMIT 0;
SELECT * FROM t0 WHERE (((((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c0))) IS TRUE)) ORDER BY (~ ('1505646880' COLLATE NOCASE))  NULLS LAST, ((NULL) NOT BETWEEN ((((t0.c4, 's'))<>((t0.c0, t0.c2)))) AND (((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) DESC;
SELECT ALL * FROM t0 WHERE (((((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c0))) IS TRUE)) ORDER BY (t0.c0 IN ()) DESC  NULLS LAST, (- (((t0.c2)LIKE(t0.c4)))) ASC, ((((((((t0.c3)OR(CASE t0.c4  WHEN t0.c2 THEN t0.c1 END)))AND(((t0.c3)<(t0.c1)))))OR(((t0.c0) NOT BETWEEN (t0.c3) AND (-1246367183)))))AND(json_array_length(t0.c1, t0.c2))) LIMIT 0;
SELECT * FROM t0 WHERE (((((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c0))) IS TRUE)) ORDER BY (~ ('1505646880' COLLATE NOCASE))  NULLS LAST, ((NULL) NOT BETWEEN ((((t0.c4, 's'))<>((t0.c0, t0.c2)))) AND (((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) DESC;
SELECT ALL * FROM t0 WHERE (((((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c0))) IS TRUE)) ORDER BY (t0.c0 IN ()) DESC  NULLS LAST, (- (((t0.c2)LIKE(t0.c4)))) ASC, ((((((((t0.c3)OR(CASE t0.c4  WHEN t0.c2 THEN t0.c1 END)))AND(((t0.c3)<(t0.c1)))))OR(((t0.c0) NOT BETWEEN (t0.c3) AND (-1246367183)))))AND(json_array_length(t0.c1, t0.c2))) LIMIT 0;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE ((t0.c3 COLLATE RTRIM IN ('1844222368')));
SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE ((((t0.c3 COLLATE RTRIM IN ('1844222368')))AND(((((((rt1.c5)OR(t0.c0)))OR(NULL)))>((rt1.c6 IN (rt1.c5, t0.c2)))))));
SELECT * FROM t0 NATURAL JOIN rt1 WHERE ((t0.c3 COLLATE RTRIM IN ('1844222368')));
SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE ((((t0.c3 COLLATE RTRIM IN ('1844222368')))AND(((((((rt1.c5)OR(t0.c0)))OR(NULL)))>((rt1.c6 IN (rt1.c5, t0.c2)))))));
SELECT * FROM rt1, t0 WHERE ('0.5711929418547179') ORDER BY ((((((((((((rt1.c4)AND(rt1.c2)))OR(rt1.c0)))OR(t0.c3)))AND(0.11984010870679229)))OR((t0.c3 IN ()))))AND(COALESCE(DISTINCT 0xffffffff9895f489, t0.c0))), rt1.c2 DESC, rtreenode((NOT ('390600562')), ((((((t0.c3)AND(t0.c3)))OR(rt1.c3)))AND(0.5101683539300734)))  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ('0.5711929418547179') ORDER BY (NOT (CASE WHEN rt1.c2 THEN -1.279305933E9 WHEN t0.c0 THEN rt1.c3 ELSE t0.c2 END))  NULLS FIRST, ((t0.c2)!=((NULL IN ()))) ASC;
SELECT * FROM rt1, t0 WHERE ('0.5711929418547179') ORDER BY ((((((((((((rt1.c4)AND(rt1.c2)))OR(rt1.c0)))OR(t0.c3)))AND(0.11984010870679229)))OR((t0.c3 IN ()))))AND(COALESCE(DISTINCT 0xffffffff9895f489, t0.c0))), rt1.c2 DESC, rtreenode((NOT ('390600562')), ((((((t0.c3)AND(t0.c3)))OR(rt1.c3)))AND(0.5101683539300734)))  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ('0.5711929418547179') ORDER BY (NOT (CASE WHEN rt1.c2 THEN -1.279305933E9 WHEN t0.c0 THEN rt1.c3 ELSE t0.c2 END))  NULLS FIRST, ((t0.c2)!=((NULL IN ()))) ASC;
SELECT * FROM rt1 WHERE ((((((rt1.c6, rt1.c5, rt1.c4))>=((rt1.c6, 0.06615313611114215, rt1.c1))))!=((((rt1.c3, rt1.c1))>((rt1.c5, rt1.c4))))));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c6, rt1.c5, rt1.c4))>=((rt1.c6, 0.06615313611114215, rt1.c1))))<>((((rt1.c3, rt1.c1))>((rt1.c5, rt1.c4))))));
SELECT * FROM rt1 WHERE ((((((rt1.c6, rt1.c5, rt1.c4))>=((rt1.c6, 0.06615313611114215, rt1.c1))))!=((((rt1.c3, rt1.c1))>((rt1.c5, rt1.c4))))));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c6, rt1.c5, rt1.c4))>=((rt1.c6, 0.06615313611114215, rt1.c1))))<>((((rt1.c3, rt1.c1))>((rt1.c5, rt1.c4))))));
SELECT ALL * FROM rt1 WHERE (CAST((NOT (rt1.c0)) AS NUMERIC));
SELECT * FROM rt1 WHERE (((CAST((NOT (rt1.c0)) AS NUMERIC))AND(((rt1.c2) ISNULL) COLLATE BINARY COLLATE NOCASE))) LIMIT 0X0;
SELECT ALL * FROM rt1 WHERE (CAST((NOT (rt1.c0)) AS NUMERIC));
SELECT * FROM rt1 WHERE (((CAST((NOT (rt1.c0)) AS NUMERIC))AND(((rt1.c2) ISNULL) COLLATE BINARY COLLATE NOCASE))) LIMIT 0X0;
SELECT * FROM t0, rt1 WHERE (CASE CHANGES()  WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c6) NOT BETWEEN (rt1.c6) AND (t0.c3)) ELSE ((rt1.c3) NOT BETWEEN (rt1.c0) AND (0X116b3e3a)) END) ORDER BY (rt1.c2 IN (rt1.c0, rt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT * FROM t0, rt1 NOT INDEXED WHERE (CASE CHANGES()  WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c6) NOT BETWEEN (rt1.c6) AND (t0.c3)) ELSE ((rt1.c3) NOT BETWEEN (rt1.c0) AND (292240954)) END) ORDER BY (rt1.c2 IN (rt1.c0, rt1.c0)) COLLATE BINARY  NULLS FIRST LIMIT 0X2 INTERSECT SELECT ALL * FROM t0, rt1 WHERE ((CASE rt1.c2  WHEN t0.c4 THEN t0.c1 WHEN 9.890024236459682E-4 THEN t0.c4 WHEN t0.c2 THEN rt1.c3 WHEN t0.c2 THEN rt1.c1 ELSE rt1.c5 END IN (HEX(rt1.c1)))) ORDER BY (rt1.c2 IN (rt1.c0, rt1.c0)) COLLATE BINARY  NULLS FIRST LIMIT 2;
SELECT * FROM t0, rt1 WHERE (CASE CHANGES()  WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c6) NOT BETWEEN (rt1.c6) AND (t0.c3)) ELSE ((rt1.c3) NOT BETWEEN (rt1.c0) AND (0X116b3e3a)) END) ORDER BY (rt1.c2 IN (rt1.c0, rt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT * FROM t0, rt1 NOT INDEXED WHERE (CASE CHANGES()  WHEN ((rt1.c3) NOTNULL) THEN ((rt1.c6) NOT BETWEEN (rt1.c6) AND (t0.c3)) ELSE ((rt1.c3) NOT BETWEEN (rt1.c0) AND (292240954)) END) ORDER BY (rt1.c2 IN (rt1.c0, rt1.c0)) COLLATE BINARY  NULLS FIRST LIMIT 0X2 INTERSECT SELECT ALL * FROM t0, rt1 WHERE ((CASE rt1.c2  WHEN t0.c4 THEN t0.c1 WHEN 9.890024236459682E-4 THEN t0.c4 WHEN t0.c2 THEN rt1.c3 WHEN t0.c2 THEN rt1.c1 ELSE rt1.c5 END IN (HEX(rt1.c1)))) ORDER BY (rt1.c2 IN (rt1.c0, rt1.c0)) COLLATE BINARY  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t0 WHERE (((((t0.c2)*(t0.c4))) BETWEEN ((((t0.c4))<=((t0.c1)))) AND (t0.c4))) ORDER BY ((t0.c0 COLLATE RTRIM)+(CASE t0.c3  WHEN t0.c4 THEN t0.c3 WHEN t0.c3 THEN t0.c3 ELSE '.' END)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((t0.c2)*(t0.c4))) BETWEEN ((((t0.c4))==((t0.c1)))) AND (t0.c4)))AND((((t0.c0, t0.c0, t0.c0, t0.c3, t0.c1)) BETWEEN (((+ (t0.c4)), (t0.c3 IN (t0.c4)), (((t0.c3, x''))==((t0.c2, t0.c2))), ((t0.c3)>(t0.c3)), CAST(t0.c0 AS BLOB))) AND ((CASE t0.c4  WHEN t0.c1 THEN t0.c4 WHEN t0.c2 THEN t0.c3 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN t0.c4 ELSE t0.c4 END, (t0.c4 IN ()), ((t0.c3)>(t0.c4)), ((t0.c0)*(t0.c4)), (t0.c0 IN ()))))))) ORDER BY ((t0.c0 COLLATE RTRIM)+(CASE t0.c3  WHEN t0.c4 THEN t0.c3 WHEN t0.c3 THEN t0.c3 ELSE '.' END)) ASC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE ((+ (((((t0.c1)AND('')))OR(t0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)+(CASE t0.c3  WHEN t0.c4 THEN t0.c3 WHEN t0.c3 THEN t0.c3 ELSE '.' END)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c2)*(t0.c4))) BETWEEN ((((t0.c4))<=((t0.c1)))) AND (t0.c4))) ORDER BY ((t0.c0 COLLATE RTRIM)+(CASE t0.c3  WHEN t0.c4 THEN t0.c3 WHEN t0.c3 THEN t0.c3 ELSE '.' END)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((t0.c2)*(t0.c4))) BETWEEN ((((t0.c4))==((t0.c1)))) AND (t0.c4)))AND((((t0.c0, t0.c0, t0.c0, t0.c3, t0.c1)) BETWEEN (((+ (t0.c4)), (t0.c3 IN (t0.c4)), (((t0.c3, x''))==((t0.c2, t0.c2))), ((t0.c3)>(t0.c3)), CAST(t0.c0 AS BLOB))) AND ((CASE t0.c4  WHEN t0.c1 THEN t0.c4 WHEN t0.c2 THEN t0.c3 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN t0.c4 ELSE t0.c4 END, (t0.c4 IN ()), ((t0.c3)>(t0.c4)), ((t0.c0)*(t0.c4)), (t0.c0 IN ()))))))) ORDER BY ((t0.c0 COLLATE RTRIM)+(CASE t0.c3  WHEN t0.c4 THEN t0.c3 WHEN t0.c3 THEN t0.c3 ELSE '.' END)) ASC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE ((+ (((((t0.c1)AND('')))OR(t0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)+(CASE t0.c3  WHEN t0.c4 THEN t0.c3 WHEN t0.c3 THEN t0.c3 ELSE '.' END)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c1, t0.c4, t0.c2)) BETWEEN ((((t0.c3)AND(t0.c2)), '2#\\m+\Rr', NULL COLLATE BINARY)) AND ((((t0.c4) ISNULL), x'780c', (((t0.c4, t0.c2, t0.c0))>=((x'', x'90', t0.c1))))))) ORDER BY ((CAST(t0.c1 AS TEXT)) IS FALSE);
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c1, t0.c4, t0.c2)) BETWEEN ((((t0.c3)AND(t0.c2)), '2#\\m+\Rr', NULL COLLATE BINARY)) AND ((((t0.c4) ISNULL), x'780c', (((t0.c4, t0.c2, t0.c0))>=((x'', x'90', t0.c1)))))))AND((((+ (t0.c4)))<(t0.c3))))) ORDER BY (((t0.c4 IN (t0.c0))) NOTNULL) ASC  NULLS LAST, ((+ (t0.c0)) IN (LTRIM(t0.c0))) DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((((((((((t0.c3)OR(528684061)))AND(t0.c4)))OR(t0.c2)))OR(NULL)))AND(t0.c4)) AS BLOB)) ORDER BY (((t0.c4 IN (t0.c0))) NOTNULL) ASC  NULLS LAST, ((+ (t0.c0)) IN (LTRIM(t0.c0))) DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c1, t0.c4, t0.c2)) BETWEEN ((((t0.c3)AND(t0.c2)), '2#\\m+\Rr', NULL COLLATE BINARY)) AND ((((t0.c4) ISNULL), x'780c', (((t0.c4, t0.c2, t0.c0))>=((x'', x'90', t0.c1))))))) ORDER BY ((CAST(t0.c1 AS TEXT)) IS FALSE);
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c1, t0.c4, t0.c2)) BETWEEN ((((t0.c3)AND(t0.c2)), '2#\\m+\Rr', NULL COLLATE BINARY)) AND ((((t0.c4) ISNULL), x'780c', (((t0.c4, t0.c2, t0.c0))>=((x'', x'90', t0.c1)))))))AND((((+ (t0.c4)))<(t0.c3))))) ORDER BY (((t0.c4 IN (t0.c0))) NOTNULL) ASC  NULLS LAST, ((+ (t0.c0)) IN (LTRIM(t0.c0))) DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((((((((((t0.c3)OR(528684061)))AND(t0.c4)))OR(t0.c2)))OR(NULL)))AND(t0.c4)) AS BLOB)) ORDER BY (((t0.c4 IN (t0.c0))) NOTNULL) ASC  NULLS LAST, ((+ (t0.c0)) IN (LTRIM(t0.c0))) DESC;
SELECT ALL * FROM rt1 WHERE (CAST((NOT (NULL)) AS REAL));
SELECT * FROM rt1 WHERE (CAST((NOT (NULL)) AS REAL)) ORDER BY ((rt1.c1) NOT NULL) COLLATE BINARY  NULLS LAST, ((((rt1.c2) IS TRUE))||(CASE WHEN rt1.c2 THEN NULL END)) LIMIT 0x1;
SELECT ALL * FROM rt1 WHERE (CAST((NOT (NULL)) AS REAL));
SELECT * FROM rt1 WHERE (CAST((NOT (NULL)) AS REAL)) ORDER BY ((rt1.c1) NOT NULL) COLLATE BINARY  NULLS LAST, ((((rt1.c2) IS TRUE))||(CASE WHEN rt1.c2 THEN NULL END)) LIMIT 0x1;
SELECT * FROM t0, rt1 WHERE ((((((rt1.c6)) NOT BETWEEN ((rt1.c3)) AND ((t0.c0))))=(((rt1.c2)<<(rt1.c0))))) ORDER BY (((((rt1.c2, t0.c4, rt1.c4, rt1.c3, rt1.c4)) BETWEEN ((rt1.c2, x'38de6a63', rt1.c1, rt1.c2, t0.c3)) AND ((x'd2e3cc', rt1.c0, rt1.c6, rt1.c5, rt1.c4))))GLOB((((rt1.c3, rt1.c5, rt1.c3)) BETWEEN ((rt1.c4, rt1.c4, rt1.c1)) AND ((t0.c0, rt1.c0, t0.c4))))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((rt1.c6)) NOT BETWEEN ((rt1.c3)) AND ((t0.c0))))=(((rt1.c2)<<(rt1.c0))))) ORDER BY (((((rt1.c2, t0.c4, rt1.c4, rt1.c3, rt1.c4)) BETWEEN ((rt1.c2, x'38de6a63', rt1.c1, rt1.c2, t0.c3)) AND ((x'd2e3cc', rt1.c0, rt1.c6, rt1.c5, rt1.c4))))GLOB((((rt1.c3, rt1.c5, rt1.c3)) BETWEEN ((rt1.c4, rt1.c4, rt1.c1)) AND ((t0.c0, rt1.c0, t0.c4))))) ASC  NULLS LAST LIMIT 0X0;
SELECT * FROM t0, rt1 WHERE ((((((rt1.c6)) NOT BETWEEN ((rt1.c3)) AND ((t0.c0))))=(((rt1.c2)<<(rt1.c0))))) ORDER BY (((((rt1.c2, t0.c4, rt1.c4, rt1.c3, rt1.c4)) BETWEEN ((rt1.c2, x'38de6a63', rt1.c1, rt1.c2, t0.c3)) AND ((x'd2e3cc', rt1.c0, rt1.c6, rt1.c5, rt1.c4))))GLOB((((rt1.c3, rt1.c5, rt1.c3)) BETWEEN ((rt1.c4, rt1.c4, rt1.c1)) AND ((t0.c0, rt1.c0, t0.c4))))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((rt1.c6)) NOT BETWEEN ((rt1.c3)) AND ((t0.c0))))=(((rt1.c2)<<(rt1.c0))))) ORDER BY (((((rt1.c2, t0.c4, rt1.c4, rt1.c3, rt1.c4)) BETWEEN ((rt1.c2, x'38de6a63', rt1.c1, rt1.c2, t0.c3)) AND ((x'd2e3cc', rt1.c0, rt1.c6, rt1.c5, rt1.c4))))GLOB((((rt1.c3, rt1.c5, rt1.c3)) BETWEEN ((rt1.c4, rt1.c4, rt1.c1)) AND ((t0.c0, rt1.c0, t0.c4))))) ASC  NULLS LAST LIMIT 0X0;
SELECT ALL MAX(t0.c2) FROM t0 WHERE ((((((t0.c3 IN (t0.c0, t0.c3, t0.c1)))AND(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(t0.c1 COLLATE BINARY)));
SELECT DISTINCT MAX(t0.c2) FROM t0 WHERE ((((((((t0.c3 IN (t0.c0, t0.c3)))AND(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(t0.c1 COLLATE BINARY)))AND(t0.c2))) ORDER BY ((((t0.c1) IS FALSE))>(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)))), (((t0.c1 COLLATE RTRIM, ((t0.c3)IS NOT(t0.c4)), -0.0))=((((t0.c1)AND(NULL)), CAST(t0.c0 AS BLOB), (t0.c3 IN (NULL)))))  NULLS FIRST, CAST(t0.c3 AS REAL) COLLATE NOCASE  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(t0.c2) FROM t0 WHERE ((((((t0.c4) NOT NULL), ((((((t0.c4)OR(t0.c4)))OR(t0.c1)))AND(t0.c1))))!=((t0.c2 COLLATE NOCASE, ((t0.c2)LIKE(t0.c3)))))) ORDER BY ((((t0.c1) IS FALSE))>(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)))), (((t0.c1 COLLATE RTRIM, ((t0.c3)IS NOT(t0.c4)), -0.0))==((((t0.c1)AND(NULL)), CAST(t0.c0 AS BLOB), (t0.c3 IN (NULL)))))  NULLS FIRST, CAST(t0.c3 AS REAL) COLLATE NOCASE  NULLS LAST LIMIT 0x1;
SELECT COUNT(*) FROM rt1 WHERE ((NOT (((x'890528') IS TRUE)))) ORDER BY (NOT (((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c5)))), ((((rt1.c3 IN (rt1.c0))))>=(((rt1.c1 IN (rt1.c3))))) DESC  NULLS FIRST, '㿡' ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((NOT (((x'890528') IS TRUE))))AND(((((CASE rt1.c4  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c5 END)AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c4 END)))OR(CAST(rt1.c1 AS TEXT)))))) ORDER BY (((rt1.c6)) BETWEEN ((((rt1.c4)GLOB(rt1.c5)))) AND (((((rt1.c2))<((rt1.c6)))))) DESC  NULLS LAST LIMIT 0;
SELECT MAX(t0.c3) FROM t0 WHERE ((~ (x'd8')));
SELECT MAX(t0.c3) FROM t0 WHERE ((~ (x'd8'))) ORDER BY CAST(((t0.c3) IS TRUE) AS BLOB);
SELECT MAX(t0.c4) FROM rt1 NATURAL JOIN t0 WHERE (HEX(CASE t0.c2  WHEN rt1.c1 THEN t0.c1 WHEN t0.c3 THEN t0.c3 WHEN NULL THEN rt1.c4 ELSE t0.c1 END));
SELECT DISTINCT MAX(t0.c4) FROM rt1 NATURAL JOIN t0 WHERE (((HEX(CASE t0.c2  WHEN rt1.c1 THEN t0.c1 WHEN t0.c3 THEN t0.c3 WHEN NULL THEN rt1.c4 ELSE t0.c1 END))AND((((((((t0.c1 IN (rt1.c6)))AND((0.021095684890321764 IN (rt1.c5, rt1.c4)))))OR('夠8')))AND(((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c6))))))) ORDER BY 'ﻱw2U'  NULLS FIRST, CASE x'd8'  WHEN ((t0.c1)<(rt1.c4)) THEN (rt1.c3 IN ()) WHEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN t0.c4 THEN rt1.c6 ELSE 0.9047286469910235 END THEN ((((((((rt1.c4)AND(rt1.c2)))AND(t0.c2)))OR(rt1.c3)))OR(t0.c4)) WHEN t0.c2 COLLATE NOCASE THEN CAST(rt1.c2 AS REAL) WHEN CAST(t0.c2 AS NUMERIC) THEN CAST(t0.c1 AS INTEGER) WHEN (rt1.c3 IN ()) THEN ((((((rt1.c0)OR(t0.c0)))OR(rt1.c3)))OR(rt1.c0)) WHEN (((((((((('0.8801691197835113')OR(t0.c4)))AND(rt1.c1)))OR(t0.c2)))OR(x'ec')))AND(t0.c1)) THEN rt1.c1 END DESC;
SELECT * FROM rt1 INNER JOIN t0 ON ((rt1.c3) ISNULL) COLLATE RTRIM WHERE (CASE WHEN ((rt1.c3) BETWEEN ('^Al') AND (t0.c2)) THEN LIKELIHOOD(DISTINCT rt1.c1, rt1.c4) ELSE ((t0.c3)IS(t0.c2)) END);
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ((rt1.c3) ISNULL) COLLATE RTRIM WHERE (CASE WHEN ((rt1.c3) BETWEEN ('^Al') AND (t0.c2)) THEN LIKELIHOOD(DISTINCT rt1.c1, rt1.c4) ELSE ((t0.c3)IS(t0.c2)) END) ORDER BY (((NULL IN (t0.c0, rt1.c1))) ISNULL) DESC  NULLS FIRST, rt1.c4, ((((x'')>=(rt1.c2))) NOT NULL) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ((rt1.c3) ISNULL) COLLATE RTRIM WHERE (((((((((((((x'')OR(LAST_INSERT_ROWID())))OR(t0.c0 COLLATE NOCASE)))OR(((NULL) NOT NULL))))AND(CASE WHEN rt1.c2 THEN '\vXlb!' WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN rt1.c0 THEN rt1.c6 ELSE rt1.c5 END)))OR(rt1.c3)))OR((- (rt1.c6))))) ORDER BY (((NULL IN (t0.c0, rt1.c1))) ISNULL) DESC  NULLS FIRST, rt1.c4, ((((x'')>=(rt1.c2))) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM rt1 INNER JOIN t0 ON ((rt1.c3) ISNULL) COLLATE RTRIM WHERE (CASE WHEN ((rt1.c3) BETWEEN ('^Al') AND (t0.c2)) THEN LIKELIHOOD(DISTINCT rt1.c1, rt1.c4) ELSE ((t0.c3)IS(t0.c2)) END);
SELECT * FROM t0 WHERE (((STRFTIME(t0.c3, t0.c1, t0.c1))AND(CASE t0.c0  WHEN t0.c4 THEN t0.c2 ELSE t0.c4 END)));
SELECT * FROM t0 WHERE (((((STRFTIME(t0.c3, t0.c1, t0.c1))AND(CASE t0.c0  WHEN t0.c4 THEN t0.c2 ELSE t0.c4 END)))AND(CASE WHEN ((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c1)) THEN ((((t0.c3)OR(t0.c2)))AND(0.28439592216700493)) ELSE TRIM(DISTINCT t0.c4, t0.c3) END))) ORDER BY CASE TRIM(t0.c0)  WHEN CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END THEN 0.9958243273281259 END, COALESCE((t0.c0 IN (t0.c4)), t0.c4 COLLATE BINARY), (((t0.c0, t0.c3, t0.c1))!=((t0.c1, t0.c4, t0.c0))) COLLATE BINARY  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE ((~ (NULL)) COLLATE RTRIM) ORDER BY CASE TRIM(t0.c0)  WHEN CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END THEN 0.9958243273281259 END, COALESCE((t0.c0 IN (t0.c4)), t0.c4 COLLATE BINARY), (((t0.c0, t0.c3, t0.c1))<>((t0.c1, t0.c4, t0.c0))) COLLATE BINARY  NULLS LAST LIMIT 0;
SELECT * FROM t0 WHERE (((STRFTIME(t0.c3, t0.c1, t0.c1))AND(CASE t0.c0  WHEN t0.c4 THEN t0.c2 ELSE t0.c4 END)));
SELECT * FROM t0 WHERE (((((STRFTIME(t0.c3, t0.c1, t0.c1))AND(CASE t0.c0  WHEN t0.c4 THEN t0.c2 ELSE t0.c4 END)))AND(CASE WHEN ((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c1)) THEN ((((t0.c3)OR(t0.c2)))AND(0.28439592216700493)) ELSE TRIM(DISTINCT t0.c4, t0.c3) END))) ORDER BY CASE TRIM(t0.c0)  WHEN CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END THEN 0.9958243273281259 END, COALESCE((t0.c0 IN (t0.c4)), t0.c4 COLLATE BINARY), (((t0.c0, t0.c3, t0.c1))!=((t0.c1, t0.c4, t0.c0))) COLLATE BINARY  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE ((~ (NULL)) COLLATE RTRIM) ORDER BY CASE TRIM(t0.c0)  WHEN CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END THEN 0.9958243273281259 END, COALESCE((t0.c0 IN (t0.c4)), t0.c4 COLLATE BINARY), (((t0.c0, t0.c3, t0.c1))<>((t0.c1, t0.c4, t0.c0))) COLLATE BINARY  NULLS LAST LIMIT 0;
SELECT * FROM t0, rt1 WHERE (((((((rt1.c5)*(rt1.c6)))AND(CAST(t0.c0 AS NUMERIC))))OR(((t0.c0) IS FALSE))));
SELECT * FROM t0, rt1 WHERE (((((((((rt1.c5)*(rt1.c6)))AND(CAST(t0.c0 AS NUMERIC))))OR(((t0.c0) IS FALSE))))AND((((((((((((t0.c1 IN (rt1.c5)))AND((((rt1.c3, rt1.c4))<=((t0.c1, 'S'))))))AND(0X741fb9f5)))AND(((rt1.c5) BETWEEN (t0.c2) AND (rt1.c3)))))AND(((rt1.c2)%(t0.c1)))))AND(QUOTE(t0.c0)))))) INTERSECT SELECT * FROM t0, rt1 WHERE (((((((t0.c4)OR(t0.c4)))OR(CASE WHEN t0.c0 THEN t0.c4 ELSE t0.c2 END)))AND(t0.c0)));
SELECT * FROM t0, rt1 WHERE (((((((rt1.c5)*(rt1.c6)))AND(CAST(t0.c0 AS NUMERIC))))OR(((t0.c0) IS FALSE))));
SELECT * FROM t0, rt1 WHERE (((((((((rt1.c5)*(rt1.c6)))AND(CAST(t0.c0 AS NUMERIC))))OR(((t0.c0) IS FALSE))))AND((((((((((((t0.c1 IN (rt1.c5)))AND((((rt1.c3, rt1.c4))<=((t0.c1, 'S'))))))AND(0X741fb9f5)))AND(((rt1.c5) BETWEEN (t0.c2) AND (rt1.c3)))))AND(((rt1.c2)%(t0.c1)))))AND(QUOTE(t0.c0)))))) INTERSECT SELECT * FROM t0, rt1 WHERE (((((((t0.c4)OR(t0.c4)))OR(CASE WHEN t0.c0 THEN t0.c4 ELSE t0.c2 END)))AND(t0.c0)));
SELECT ALL * FROM t0, rt1 WHERE (((((t0.c4)/(rt1.c2))) NOT BETWEEN (2.025863801E9) AND ((((rt1.c2)) NOT BETWEEN ((t0.c3)) AND ((rt1.c1)))))) ORDER BY CASE ((t0.c4)AND(rt1.c1))  WHEN ((rt1.c6) IS FALSE) THEN (((rt1.c4, rt1.c3))<=((rt1.c4, rt1.c5))) WHEN (~ (t0.c4)) THEN (((t0.c0, rt1.c4)) BETWEEN ((t0.c4, rt1.c1)) AND ((t0.c3, rt1.c6))) ELSE (- (t0.c0)) END DESC  NULLS FIRST, CASE ((rt1.c1)+(t0.c3))  WHEN ((((((((t0.c1)AND(rt1.c1)))OR(rt1.c6)))AND(rt1.c1)))OR(t0.c0)) THEN ((rt1.c0) ISNULL) WHEN CASE t0.c3  WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 END THEN CAST(NULL AS REAL) ELSE '-1230812522' END  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((t0.c4)/(rt1.c2))) NOT BETWEEN (2.025863801E9) AND ((((rt1.c2)) NOT BETWEEN ((t0.c3)) AND ((rt1.c1))))))AND((((t0.c4, rt1.c6)) NOT BETWEEN ((t0.c1, ((t0.c0)==(rt1.c5)))) AND ((((rt1.c4)%(t0.c3)), (- (rt1.c0)))))))) ORDER BY (NOT ((((rt1.c1, t0.c0, rt1.c4)) NOT BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c4, rt1.c6, rt1.c2))))) DESC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((~ ((+ (t0.c0))))) ORDER BY (NOT ((((rt1.c1, t0.c0, rt1.c4)) NOT BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c4, rt1.c6, rt1.c2))))) DESC LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE (((((t0.c4)/(rt1.c2))) NOT BETWEEN (2.025863801E9) AND ((((rt1.c2)) NOT BETWEEN ((t0.c3)) AND ((rt1.c1)))))) ORDER BY CASE ((t0.c4)AND(rt1.c1))  WHEN ((rt1.c6) IS FALSE) THEN (((rt1.c4, rt1.c3))<=((rt1.c4, rt1.c5))) WHEN (~ (t0.c4)) THEN (((t0.c0, rt1.c4)) BETWEEN ((t0.c4, rt1.c1)) AND ((t0.c3, rt1.c6))) ELSE (- (t0.c0)) END DESC  NULLS FIRST, CASE ((rt1.c1)+(t0.c3))  WHEN ((((((((t0.c1)AND(rt1.c1)))OR(rt1.c6)))AND(rt1.c1)))OR(t0.c0)) THEN ((rt1.c0) ISNULL) WHEN CASE t0.c3  WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 END THEN CAST(NULL AS REAL) ELSE '-1230812522' END  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((t0.c4)/(rt1.c2))) NOT BETWEEN (2.025863801E9) AND ((((rt1.c2)) NOT BETWEEN ((t0.c3)) AND ((rt1.c1))))))AND((((t0.c4, rt1.c6)) NOT BETWEEN ((t0.c1, ((t0.c0)==(rt1.c5)))) AND ((((rt1.c4)%(t0.c3)), (- (rt1.c0)))))))) ORDER BY (NOT ((((rt1.c1, t0.c0, rt1.c4)) NOT BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c4, rt1.c6, rt1.c2))))) DESC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((~ ((+ (t0.c0))))) ORDER BY (NOT ((((rt1.c1, t0.c0, rt1.c4)) NOT BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c4, rt1.c6, rt1.c2))))) DESC LIMIT 1;
SELECT ALL * FROM t0 WHERE (t0.c4) ORDER BY (((t0.c3, t0.c3)) NOT BETWEEN ((CAST(t0.c2 AS TEXT), rtreenode(t0.c3, t0.c3))) AND ((((((t0.c2)OR(t0.c2)))AND(t0.c1)), ((t0.c1)||(t0.c0))))), ((t0.c0 COLLATE BINARY)%(t0.c4 COLLATE NOCASE)) DESC;
SELECT ALL * FROM t0 WHERE (t0.c4) ORDER BY (((t0.c3, t0.c3)) NOT BETWEEN ((CAST(t0.c2 AS TEXT), rtreenode(t0.c3, t0.c3))) AND ((((((t0.c2)OR(t0.c2)))AND(t0.c1)), ((t0.c1)||(t0.c0))))), ((t0.c0 COLLATE BINARY)%(t0.c4 COLLATE NOCASE)) DESC INTERSECT SELECT ALL * FROM t0 WHERE (CASE WHEN (- (NULL)) THEN ((t0.c0)||(t0.c1)) WHEN (('PD	x3')LIKE(t0.c0)) THEN ((t0.c3) BETWEEN (t0.c1) AND (t0.c1)) WHEN ((0.12684371646090675)=(t0.c2)) THEN UPPER(t0.c4) END) ORDER BY (((t0.c3, t0.c3)) NOT BETWEEN ((CAST(t0.c2 AS TEXT), rtreenode(t0.c3, t0.c3))) AND ((((((t0.c2)OR(t0.c2)))AND(t0.c1)), ((t0.c1)||(t0.c0))))), ((t0.c0 COLLATE BINARY)%(t0.c4 COLLATE NOCASE)) DESC;
SELECT ALL * FROM t0 WHERE (t0.c4) ORDER BY (((t0.c3, t0.c3)) NOT BETWEEN ((CAST(t0.c2 AS TEXT), rtreenode(t0.c3, t0.c3))) AND ((((((t0.c2)OR(t0.c2)))AND(t0.c1)), ((t0.c1)||(t0.c0))))), ((t0.c0 COLLATE BINARY)%(t0.c4 COLLATE NOCASE)) DESC;
SELECT ALL * FROM t0 WHERE (t0.c4) ORDER BY (((t0.c3, t0.c3)) NOT BETWEEN ((CAST(t0.c2 AS TEXT), rtreenode(t0.c3, t0.c3))) AND ((((((t0.c2)OR(t0.c2)))AND(t0.c1)), ((t0.c1)||(t0.c0))))), ((t0.c0 COLLATE BINARY)%(t0.c4 COLLATE NOCASE)) DESC INTERSECT SELECT ALL * FROM t0 WHERE (CASE WHEN (- (NULL)) THEN ((t0.c0)||(t0.c1)) WHEN (('PD	x3')LIKE(t0.c0)) THEN ((t0.c3) BETWEEN (t0.c1) AND (t0.c1)) WHEN ((0.12684371646090675)=(t0.c2)) THEN UPPER(t0.c4) END) ORDER BY (((t0.c3, t0.c3)) NOT BETWEEN ((CAST(t0.c2 AS TEXT), rtreenode(t0.c3, t0.c3))) AND ((((((t0.c2)OR(t0.c2)))AND(t0.c1)), ((t0.c1)||(t0.c0))))), ((t0.c0 COLLATE BINARY)%(t0.c4 COLLATE NOCASE)) DESC;
SELECT ALL * FROM rt1 WHERE (CAST((- (rt1.c0)) AS NUMERIC)) ORDER BY rt1.c0 ASC;
SELECT ALL * FROM rt1 WHERE (CAST((- (rt1.c0)) AS NUMERIC)) ORDER BY (((rt1.c0 IN ()))AND(rt1.c1)) DESC  NULLS LAST, (+ (((rt1.c4)-(rt1.c0))))  NULLS FIRST, 0.18598264017641553 DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (CAST((- (rt1.c0)) AS NUMERIC)) ORDER BY rt1.c0 ASC;
SELECT ALL * FROM rt1 WHERE (CAST((- (rt1.c0)) AS NUMERIC)) ORDER BY (((rt1.c0 IN ()))AND(rt1.c1)) DESC  NULLS LAST, (+ (((rt1.c4)-(rt1.c0))))  NULLS FIRST, 0.18598264017641553 DESC  NULLS LAST;
SELECT ALL MIN(rt1.c3) FROM rt1 WHERE (((((rt1.c0) ISNULL)) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c6))) AND (((rt1.c5)GLOB(rt1.c6)))));
SELECT DISTINCT MIN(rt1.c3) FROM rt1 WHERE (((((rt1.c0) ISNULL)) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c6))) AND (((rt1.c5)GLOB(rt1.c6))))) ORDER BY CASE ((rt1.c1) IS TRUE)  WHEN rt1.c2 COLLATE BINARY THEN ((((rt1.c6)OR(x'cba1')))AND(rt1.c0)) END, (((rt1.c6, x'16e084ae')) NOT BETWEEN ((x'8935', (((rt1.c6)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))))) AND ((NULL, rt1.c4 COLLATE RTRIM))) DESC LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(rt1.c3) FROM rt1 WHERE ((((((((((0.42659409186758235)AND(rt1.c6)))AND(rt1.c4)))AND(rt1.c2))))==((((-2.29228074E8) NOTNULL))))) ORDER BY CASE ((rt1.c1) IS TRUE)  WHEN rt1.c2 COLLATE BINARY THEN ((((rt1.c6)OR(x'cba1')))AND(rt1.c0)) END, (((rt1.c6, x'16e084ae')) NOT BETWEEN ((x'8935', (((rt1.c6)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))))) AND ((NULL, rt1.c4 COLLATE RTRIM))) DESC LIMIT 0x0;
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)LIKE(rt1.c3)))>>(((rt1.c5)<=(rt1.c1)))));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c1)LIKE(rt1.c3)))>>(((rt1.c5)<=(rt1.c1))))) LIMIT 0X0;
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)LIKE(rt1.c3)))>>(((rt1.c5)<=(rt1.c1)))));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c1)LIKE(rt1.c3)))>>(((rt1.c5)<=(rt1.c1))))) LIMIT 0X0;
SELECT * FROM t0 INNER JOIN rt1 ON ((CAST(rt1.c5 AS NUMERIC)) IS TRUE) WHERE (CASE t0.c2  WHEN rt1.c0 THEN rt1.c5 WHEN 'kz
r3J>s' THEN t0.c0 END COLLATE NOCASE);
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON ((CAST(rt1.c5 AS NUMERIC)) IS TRUE) WHERE (((CASE t0.c2  WHEN rt1.c0 THEN rt1.c5 WHEN 'kz
r3J>s' THEN t0.c0 END COLLATE NOCASE)AND(CAST(0xffffffffc561a043 AS REAL)))) ORDER BY (((rt1.c0, t0.c0)) BETWEEN ((TRIM(DISTINCT rt1.c4), ((((((((t0.c3)OR(rt1.c1)))AND(NULL)))OR(t0.c3)))OR(t0.c3)))) AND ((((rt1.c3) NOTNULL), 0.840017328740639))), (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2)) IN (CASE WHEN rt1.c0 THEN rt1.c1 END)), (((t0.c0 IN ()))+(((rt1.c5)>>(rt1.c5))));
SELECT * FROM t0 INNER JOIN rt1 ON ((CAST(rt1.c5 AS NUMERIC)) IS TRUE) WHERE (CASE t0.c2  WHEN rt1.c0 THEN rt1.c5 WHEN 'kz
r3J>s' THEN t0.c0 END COLLATE NOCASE);
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON ((CAST(rt1.c5 AS NUMERIC)) IS TRUE) WHERE (((CASE t0.c2  WHEN rt1.c0 THEN rt1.c5 WHEN 'kz
r3J>s' THEN t0.c0 END COLLATE NOCASE)AND(CAST(0xffffffffc561a043 AS REAL)))) ORDER BY (((rt1.c0, t0.c0)) BETWEEN ((TRIM(DISTINCT rt1.c4), ((((((((t0.c3)OR(rt1.c1)))AND(NULL)))OR(t0.c3)))OR(t0.c3)))) AND ((((rt1.c3) NOTNULL), 0.840017328740639))), (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2)) IN (CASE WHEN rt1.c0 THEN rt1.c1 END)), (((t0.c0 IN ()))+(((rt1.c5)>>(rt1.c5))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c5) IS TRUE)) ISNULL));
SELECT * FROM rt1 WHERE (((((((rt1.c5) IS TRUE)) ISNULL))AND(((((((((((rt1.c2)%(rt1.c0)))AND(((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c6)))))OR(CASE WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c1 THEN rt1.c5 END)))OR((NOT (rt1.c4)))))OR(CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c5 END))))) INTERSECT SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS REAL))IS(rt1.c6)));
SELECT ALL * FROM rt1 WHERE (((((rt1.c5) IS TRUE)) ISNULL));
SELECT * FROM rt1 WHERE (((((((rt1.c5) IS TRUE)) ISNULL))AND(((((((((((rt1.c2)%(rt1.c0)))AND(((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c6)))))OR(CASE WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c1 THEN rt1.c5 END)))OR((NOT (rt1.c4)))))OR(CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c5 END))))) INTERSECT SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS REAL))IS(rt1.c6)));
SELECT MIN(t0.c3) FROM rt1, t0 WHERE ((((rt1.c5 IN (t0.c3)))IS((x'7c' IN ()))));
SELECT DISTINCT MIN(t0.c3) FROM rt1, t0 WHERE ((((((rt1.c5 IN (t0.c3)))IS((x'7c' IN ()))))AND((NOT (((t0.c1) NOT BETWEEN (rt1.c5) AND (t0.c3))))))) ORDER BY CASE (- (rt1.c2))  WHEN x'6d85' THEN ((t0.c3) NOTNULL) ELSE (+ (x'')) END ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE ((((CAST(t0.c3 AS TEXT), CASE 'h'  WHEN rt1.c3 THEN t0.c2 WHEN rt1.c4 THEN rt1.c4 WHEN t0.c3 THEN t0.c4 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 END, (~ (rt1.c5))))=((((((((t0.c4)AND(rt1.c2)))AND('')))AND(rt1.c3)), LOWER(DISTINCT t0.c1), rt1.c4 COLLATE RTRIM)))) ORDER BY CAST(((rt1.c5)&(t0.c1)) AS NUMERIC), (((((((((((((- (t0.c0)))AND(((((((((t0.c0)OR(rt1.c2)))OR(rt1.c0)))AND(t0.c4)))OR(0.2672957122232348)))))AND((rt1.c2 IN (rt1.c5)))))AND((+ (0.9983825738886412)))))AND((('') BETWEEN (rt1.c4) AND (t0.c1)))))AND(((rt1.c6)<=(t0.c1)))))AND((((rt1.c1, rt1.c1)) BETWEEN ((t0.c3, rt1.c4)) AND ((rt1.c3, t0.c4))))) DESC;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((CAST(t0.c3 AS TEXT), CASE 'h'  WHEN rt1.c3 THEN t0.c2 WHEN rt1.c4 THEN rt1.c4 WHEN t0.c3 THEN t0.c4 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 END, (~ (rt1.c5))))=((((((((t0.c4)AND(rt1.c2)))AND('')))AND(rt1.c3)), LOWER(DISTINCT t0.c1), rt1.c4 COLLATE RTRIM))))AND(((t0.c1 IN (rt1.c6, rt1.c2)) IN ())))) ORDER BY CAST(((rt1.c5)&(t0.c1)) AS NUMERIC), (((((((((((((- (t0.c0)))AND(((((((((t0.c0)OR(rt1.c2)))OR(rt1.c0)))AND(t0.c4)))OR(0.2672957122232348)))))AND((rt1.c2 IN (rt1.c5)))))AND((+ (0.9983825738886412)))))AND((('') BETWEEN (rt1.c4) AND (t0.c1)))))AND(((rt1.c6)<=(t0.c1)))))AND((((rt1.c1, rt1.c1)) BETWEEN ((t0.c3, rt1.c4)) AND ((rt1.c3, t0.c4))))) DESC INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (t0.c0) ORDER BY CAST(((rt1.c5)&(t0.c1)) AS NUMERIC), (((((((((((((- (t0.c0)))AND(((((((((t0.c0)OR(rt1.c2)))OR(rt1.c0)))AND(t0.c4)))OR(0.2672957122232348)))))AND((rt1.c2 IN (rt1.c5)))))AND((+ (0.9983825738886412)))))AND((('') BETWEEN (rt1.c4) AND (t0.c1)))))AND(((rt1.c6)<=(t0.c1)))))AND((((rt1.c1, rt1.c1)) BETWEEN ((t0.c3, rt1.c4)) AND ((rt1.c3, t0.c4))))) DESC;
SELECT ALL * FROM t0, rt1 WHERE ((((CAST(t0.c3 AS TEXT), CASE 'h'  WHEN rt1.c3 THEN t0.c2 WHEN rt1.c4 THEN rt1.c4 WHEN t0.c3 THEN t0.c4 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 END, (~ (rt1.c5))))=((((((((t0.c4)AND(rt1.c2)))AND('')))AND(rt1.c3)), LOWER(DISTINCT t0.c1), rt1.c4 COLLATE RTRIM)))) ORDER BY CAST(((rt1.c5)&(t0.c1)) AS NUMERIC), (((((((((((((- (t0.c0)))AND(((((((((t0.c0)OR(rt1.c2)))OR(rt1.c0)))AND(t0.c4)))OR(0.2672957122232348)))))AND((rt1.c2 IN (rt1.c5)))))AND((+ (0.9983825738886412)))))AND((('') BETWEEN (rt1.c4) AND (t0.c1)))))AND(((rt1.c6)<=(t0.c1)))))AND((((rt1.c1, rt1.c1)) BETWEEN ((t0.c3, rt1.c4)) AND ((rt1.c3, t0.c4))))) DESC;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((CAST(t0.c3 AS TEXT), CASE 'h'  WHEN rt1.c3 THEN t0.c2 WHEN rt1.c4 THEN rt1.c4 WHEN t0.c3 THEN t0.c4 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 END, (~ (rt1.c5))))=((((((((t0.c4)AND(rt1.c2)))AND('')))AND(rt1.c3)), LOWER(DISTINCT t0.c1), rt1.c4 COLLATE RTRIM))))AND(((t0.c1 IN (rt1.c6, rt1.c2)) IN ())))) ORDER BY CAST(((rt1.c5)&(t0.c1)) AS NUMERIC), (((((((((((((- (t0.c0)))AND(((((((((t0.c0)OR(rt1.c2)))OR(rt1.c0)))AND(t0.c4)))OR(0.2672957122232348)))))AND((rt1.c2 IN (rt1.c5)))))AND((+ (0.9983825738886412)))))AND((('') BETWEEN (rt1.c4) AND (t0.c1)))))AND(((rt1.c6)<=(t0.c1)))))AND((((rt1.c1, rt1.c1)) BETWEEN ((t0.c3, rt1.c4)) AND ((rt1.c3, t0.c4))))) DESC INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (t0.c0) ORDER BY CAST(((rt1.c5)&(t0.c1)) AS NUMERIC), (((((((((((((- (t0.c0)))AND(((((((((t0.c0)OR(rt1.c2)))OR(rt1.c0)))AND(t0.c4)))OR(0.2672957122232348)))))AND((rt1.c2 IN (rt1.c5)))))AND((+ (0.9983825738886412)))))AND((('') BETWEEN (rt1.c4) AND (t0.c1)))))AND(((rt1.c6)<=(t0.c1)))))AND((((rt1.c1, rt1.c1)) BETWEEN ((t0.c3, rt1.c4)) AND ((rt1.c3, t0.c4))))) DESC;
SELECT MAX(rt1.c0) FROM rt1 WHERE (CASE (((rt1.c1, '-816227223')) NOT BETWEEN ((0.6637395102276136, rt1.c6)) AND ((rt1.c3, rt1.c5)))  WHEN (- (rt1.c2)) THEN CASE WHEN rt1.c4 THEN rt1.c2 ELSE NULL END END) ORDER BY CASE (((rt1.c4, -692019439, rt1.c3))==((rt1.c5, rt1.c5, rt1.c4)))  WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c4)) THEN ((rt1.c6)OR('Gv#')) WHEN (rt1.c3 IN ()) THEN ((((rt1.c6)AND(rt1.c3)))OR(rt1.c4)) ELSE (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) END DESC  NULLS FIRST, (((rt1.c0) NOT NULL) IN ()) ASC  NULLS LAST;
SELECT DISTINCT MAX(rt1.c0) FROM rt1 WHERE (CASE (((rt1.c1, '-816227223')) NOT BETWEEN ((0.6637395102276136, rt1.c6)) AND ((rt1.c3, rt1.c5)))  WHEN (- (rt1.c2)) THEN CASE WHEN rt1.c4 THEN rt1.c2 ELSE NULL END END) ORDER BY CASE (((rt1.c4, 0xffffffffd6c09f11, rt1.c3))==((rt1.c5, rt1.c5, rt1.c4)))  WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c4)) THEN ((rt1.c6)OR('Gv#')) WHEN (rt1.c3 IN ()) THEN ((((rt1.c6)AND(rt1.c3)))OR(rt1.c4)) ELSE (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) END DESC  NULLS FIRST, (((rt1.c0) NOT NULL) IN ()) ASC  NULLS LAST LIMIT 0X2;
SELECT MIN(t0.c4) FROM t0 WHERE ((((- (t0.c1)))!=((t0.c3 IN ('0.13587103737969575'))))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c3)) AS TEXT) DESC  NULLS LAST, (((t0.c0 IN (t0.c3, t0.c2))) IS TRUE)  NULLS LAST;
SELECT DISTINCT MIN(t0.c4) FROM t0 WHERE ((((((- (t0.c1)))!=((t0.c3 IN ('0.13587103737969575')))))AND((((t0.c0 COLLATE BINARY, '2025863801' COLLATE BINARY, ((((((((t0.c2)OR(t0.c1)))AND(0.6025943471789105)))AND(t0.c2)))OR(x'e967ee')), CAST(t0.c3 AS INTEGER)))>=(((-1.665136082E9 IN ()), CAST(t0.c2 AS REAL), ((((((((t0.c0)OR(t0.c1)))OR(t0.c3)))OR(t0.c2)))AND(t0.c0)), ((t0.c1)-(t0.c2)))))))) ORDER BY t0.c1 ASC, (((NOT (t0.c1)))<=(((t0.c2)=(t0.c0)))) ASC INTERSECT SELECT DISTINCT MIN(t0.c4) FROM t0 WHERE ((((t0.c0 IN (t0.c0))) NOT NULL)) ORDER BY t0.c1 ASC, (((NOT (t0.c1)))<=(((t0.c2)==(t0.c0)))) ASC;
SELECT * FROM rt1 WHERE (((~ (rt1.c4)) IN (CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c1 END))) ORDER BY CAST(rt1.c4 COLLATE RTRIM AS BLOB)  NULLS FIRST, ((rt1.c2 IN ()) IN ()) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (((~ (rt1.c4)) IN (CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c1 END))) ORDER BY (CASE rt1.c4  WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c5 END IN (x'', ((rt1.c2) IS FALSE)))  NULLS FIRST, CAST(CAST(NULL AS NUMERIC) AS BLOB) ASC  NULLS LAST LIMIT 4;
SELECT * FROM rt1 WHERE (((~ (rt1.c4)) IN (CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c1 END))) ORDER BY CAST(rt1.c4 COLLATE RTRIM AS BLOB)  NULLS FIRST, ((rt1.c2 IN ()) IN ()) DESC  NULLS FIRST;
SELECT MAX(rt1.c5) FROM rt1 WHERE (CASE WHEN 0.9129628525551932 THEN TYPEOF(rt1.c2) WHEN ((rt1.c1)<=(rt1.c6)) THEN CASE rt1.c5  WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c3 END ELSE ((rt1.c5)>=('}')) END);
SELECT DISTINCT MAX(rt1.c5) FROM rt1 WHERE (((CASE WHEN 0.9129628525551932 THEN TYPEOF(rt1.c2) WHEN ((rt1.c1)<(rt1.c6)) THEN CASE rt1.c5  WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c3 END ELSE ((rt1.c5)=('}')) END)AND((((rt1.c0)) BETWEEN ((CASE WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c6 END)) AND ((((rt1.c3) IS TRUE)))))));
SELECT ALL * FROM rt1 WHERE (((LIKELIHOOD(DISTINCT rt1.c4, rt1.c0)) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (rt1.c5 COLLATE RTRIM)));
SELECT * FROM rt1 WHERE (((((LIKELIHOOD(DISTINCT rt1.c4, rt1.c0)) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (rt1.c5 COLLATE RTRIM)))AND((((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c4)))) BETWEEN (rt1.c3 COLLATE BINARY) AND (rt1.c1))))) ORDER BY ((((rt1.c6) NOT NULL)) NOT BETWEEN (CAST(rt1.c5 AS TEXT)) AND (CAST(rt1.c5 AS NUMERIC))) DESC, CAST(rt1.c2 COLLATE RTRIM AS BLOB) DESC LIMIT 1 INTERSECT SELECT ALL * FROM rt1 WHERE ((+ (rt1.c3))) ORDER BY ((((rt1.c6) NOT NULL)) NOT BETWEEN (CAST(rt1.c5 AS TEXT)) AND (CAST(rt1.c5 AS NUMERIC))) DESC, CAST(rt1.c2 COLLATE RTRIM AS BLOB) DESC LIMIT 0x1;
SELECT ALL * FROM rt1 WHERE (((LIKELIHOOD(DISTINCT rt1.c4, rt1.c0)) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (rt1.c5 COLLATE RTRIM)));
SELECT * FROM t0 WHERE (((t0.c2 COLLATE BINARY) IS TRUE));
SELECT DISTINCT * FROM t0 WHERE (((t0.c2 COLLATE BINARY) IS TRUE)) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE (+ (t0.c2))  WHEN (t0.c4 IN ()) THEN ((t0.c2) IS TRUE) END) LIMIT 0X2;
SELECT * FROM t0 WHERE (((t0.c2 COLLATE BINARY) IS TRUE));
SELECT DISTINCT * FROM t0 WHERE (((t0.c2 COLLATE BINARY) IS TRUE)) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE (+ (t0.c2))  WHEN (t0.c4 IN ()) THEN ((t0.c2) IS TRUE) END) LIMIT 0X2;
SELECT ALL * FROM rt1 WHERE (((((0X2cc91eaf) NOT BETWEEN (rt1.c2) AND (rt1.c2)))%(0.05372846074892601)));
SELECT DISTINCT * FROM rt1 WHERE (((((((0X2cc91eaf) NOT BETWEEN (rt1.c2) AND (rt1.c2)))%(0.05372846074892601)))AND(CASE WHEN rt1.c0 THEN (((NULL, rt1.c1, 0Xffffffffdb63bde9, rt1.c6, rt1.c4))<((rt1.c1, rt1.c3, rt1.c0, rt1.c4, rt1.c2))) END))) LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c3)>(rt1.c1))) BETWEEN ((+ (rt1.c2))) AND (DATETIME(rt1.c4, rt1.c2, rt1.c6)))) LIMIT 0X3;
SELECT ALL * FROM rt1 WHERE (((((0X2cc91eaf) NOT BETWEEN (rt1.c2) AND (rt1.c2)))%(0.05372846074892601)));
SELECT DISTINCT * FROM rt1 WHERE (((((((0X2cc91eaf) NOT BETWEEN (rt1.c2) AND (rt1.c2)))%(0.05372846074892601)))AND(CASE WHEN rt1.c0 THEN (((NULL, rt1.c1, 0Xffffffffdb63bde9, rt1.c6, rt1.c4))<((rt1.c1, rt1.c3, rt1.c0, rt1.c4, rt1.c2))) END))) LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c3)>(rt1.c1))) BETWEEN ((+ (rt1.c2))) AND (DATETIME(rt1.c4, rt1.c2, rt1.c6)))) LIMIT 0X3;
SELECT * FROM t0 WHERE ((NOT ('18393758')));
SELECT ALL * FROM t0 WHERE ((((NOT ('18393758')))AND(((x'c1')-((t0.c3 IN ())))))) ORDER BY t0.c1  NULLS FIRST INTERSECT SELECT ALL * FROM t0 WHERE ((((NULL)>=(t0.c2)) IN (t0.c0, COALESCE(t0.c2, t0.c2, t0.c4)))) ORDER BY t0.c1  NULLS FIRST;
SELECT * FROM t0 WHERE ((NOT ('18393758')));
SELECT ALL * FROM t0 WHERE ((((NOT ('18393758')))AND(((x'c1')-((t0.c3 IN ())))))) ORDER BY t0.c1  NULLS FIRST INTERSECT SELECT ALL * FROM t0 WHERE ((((NULL)>=(t0.c2)) IN (t0.c0, COALESCE(t0.c2, t0.c2, t0.c4)))) ORDER BY t0.c1  NULLS FIRST;
SELECT ALL MAX(t0.c1) FROM t0 WHERE (((t0.c3 IN (0x77d53692)) IN (((t0.c1)<>(t0.c4))))) ORDER BY t0.c3 DESC, (((+ (t0.c1))) ISNULL);
SELECT MAX(t0.c1) FROM t0 WHERE (((((t0.c3 IN (0x77d53692)) IN (((t0.c1)!=(t0.c4)))))AND(CASE ((t0.c1)>>(0.3693202014436897))  WHEN ((t0.c4)=(x'')) THEN (((t0.c0, t0.c0)) NOT BETWEEN ((0X5470447d, t0.c0)) AND ((t0.c2, t0.c1))) WHEN ((t0.c0) IS FALSE) THEN (((t0.c0))<>((NULL))) WHEN json_remove(t0.c3, t0.c3) THEN (+ (t0.c4)) WHEN ((((((((t0.c3)AND(t0.c4)))OR(t0.c2)))OR(t0.c2)))AND(t0.c3)) THEN t0.c4 COLLATE NOCASE WHEN x'f1' THEN (t0.c2 IN (t0.c2, t0.c4)) END))) ORDER BY t0.c3 DESC, (((+ (t0.c1))) ISNULL);
SELECT * FROM rt1 WHERE (NULL);
SELECT DISTINCT * FROM rt1 WHERE (NULL) LIMIT 0X1;
SELECT * FROM rt1 WHERE (NULL);
SELECT DISTINCT * FROM rt1 WHERE (NULL) LIMIT 0X1;
SELECT ALL MAX(t0.c3) FROM t0, rt1 WHERE (((t0.c2) IS FALSE) COLLATE NOCASE) ORDER BY (((rt1.c0) NOTNULL) IN (SQLITE_VERSION()));
SELECT MAX(t0.c3) FROM t0, rt1 WHERE (((((t0.c2) IS FALSE) COLLATE NOCASE)AND(CAST(((rt1.c1)>(rt1.c0)) AS NUMERIC)))) ORDER BY rt1.c5 ASC, 'ᜧ' COLLATE NOCASE LIMIT 2 INTERSECT SELECT ALL MAX(t0.c3) FROM t0, rt1 WHERE (x'6ec133') ORDER BY rt1.c5 ASC, 'ᜧ' COLLATE NOCASE LIMIT 2;
SELECT COUNT(*) FROM rt1 WHERE (1208612623) ORDER BY (((((rt1.c4 IN ()))AND(((rt1.c6)/(rt1.c3)))))OR((((NULL, rt1.c6))==((rt1.c0, rt1.c5)))))  NULLS FIRST, CAST(STRFTIME(rt1.c3, rt1.c6, rt1.c5) AS BLOB)  NULLS LAST, (NOT (((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((0x4809f70f)AND(LIKELY((rt1.c5 IN ()))))) ORDER BY (((- (rt1.c2)))-(HEX(rt1.c4)))  NULLS FIRST LIMIT 0 INTERSECT SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c6, (- (rt1.c4))))=(((rt1.c3 IN (rt1.c1)), ((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c5)))))) ORDER BY (((- (rt1.c2)))-(HEX(rt1.c4)))  NULLS FIRST LIMIT 0;
SELECT * FROM rt1 WHERE (((((rt1.c6) BETWEEN (rt1.c3) AND (rt1.c0)))|(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END)));
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c6) BETWEEN (rt1.c3) AND (rt1.c0)))|(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END)))AND('!'))) ORDER BY ((CASE rt1.c3  WHEN 0.4515909592670857 THEN rt1.c6 ELSE rt1.c6 END)<<(rt1.c0)) ASC  NULLS FIRST, (+ ((x'' IN (rt1.c6)))) ASC;
SELECT * FROM rt1 WHERE (((((rt1.c6) BETWEEN (rt1.c3) AND (rt1.c0)))|(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END)));
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c6) BETWEEN (rt1.c3) AND (rt1.c0)))|(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END)))AND('!'))) ORDER BY ((CASE rt1.c3  WHEN 0.4515909592670857 THEN rt1.c6 ELSE rt1.c6 END)<<(rt1.c0)) ASC  NULLS FIRST, (+ ((x'' IN (rt1.c6)))) ASC;
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE WHEN ((rt1.c2)&(t0.c3)) THEN rt1.c0 WHEN LIKELY(rt1.c2) THEN x'' WHEN MAX(rt1.c4, t0.c4, NULL, rt1.c6) THEN ((t0.c0)*(rt1.c2)) WHEN CASE t0.c3  WHEN t0.c4 THEN rt1.c4 WHEN t0.c2 THEN rt1.c4 END THEN (+ (rt1.c3)) ELSE (NOT (rt1.c4)) END) ORDER BY '532765629' ASC, ((((rt1.c6) IS FALSE)) NOT BETWEEN (((rt1.c3) NOTNULL)) AND (((((rt1.c1)AND(rt1.c0)))OR(0x1c46058e)))) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (CASE WHEN ((rt1.c2)&(t0.c3)) THEN rt1.c0 WHEN LIKELY(rt1.c2) THEN x'' WHEN MAX(rt1.c4, t0.c4, NULL, rt1.c6) THEN ((t0.c0)*(rt1.c2)) WHEN CASE t0.c3  WHEN t0.c4 THEN rt1.c4 WHEN t0.c2 THEN rt1.c4 END THEN (+ (rt1.c3)) ELSE (NOT (rt1.c4)) END) ORDER BY '532765629' ASC, ((((rt1.c6) IS FALSE)) NOT BETWEEN (((rt1.c3) NOTNULL)) AND (((((rt1.c1)AND(rt1.c0)))OR(0x1c46058e)))) ASC  NULLS FIRST;
SELECT MAX(rt1.c5) FROM rt1 WHERE (0.6531081356980739) ORDER BY (((((0.03861297367451655))>=((rt1.c3))))IS(x'571f')) DESC  NULLS LAST, x'3e00'  NULLS LAST, rt1.c2;
SELECT ALL MAX(rt1.c5) FROM rt1 WHERE (((0.6531081356980739)AND(CASE WHEN (((rt1.c0, rt1.c1, rt1.c3))!=((rt1.c0, rt1.c0, rt1.c5))) THEN CAST(rt1.c0 AS TEXT) ELSE CAST('-133418147' AS NUMERIC) END))) ORDER BY (((((0.03861297367451655))>=((rt1.c3))))IS(x'571f')) DESC  NULLS LAST, x'3e00'  NULLS LAST, rt1.c2 LIMIT 0;
SELECT MIN(rt1.c2) FROM t0, rt1 WHERE (((1.191777648E9)<=(((t0.c0)GLOB(x''))))) ORDER BY ((TRIM(rt1.c0, rt1.c2))-(rt1.c4 COLLATE NOCASE))  NULLS LAST, ((((rt1.c1) NOT NULL))AND(0.8766142910530871 COLLATE NOCASE)) DESC;
SELECT ALL MIN(rt1.c2) FROM t0, rt1 WHERE (((1.191777648E9)==(((t0.c0)GLOB(x''))))) ORDER BY (NOT ((((rt1.c4, rt1.c4, t0.c2, rt1.c1, rt1.c5)) NOT BETWEEN ((t0.c4, rt1.c5, rt1.c4, t0.c2, t0.c2)) AND ((t0.c3, rt1.c3, 0.4275912026311004, t0.c2, rt1.c6))))) ASC  NULLS LAST, (- (((rt1.c6)<(rt1.c1))))  NULLS LAST, t0.c2;
SELECT * FROM t0, rt1 WHERE (CAST(((rt1.c4) NOT NULL) AS TEXT));
SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(((rt1.c4) NOT NULL) AS TEXT))AND(17393232))) LIMIT 0x0;
SELECT * FROM t0, rt1 WHERE (CAST(((rt1.c4) NOT NULL) AS TEXT));
SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(((rt1.c4) NOT NULL) AS TEXT))AND(17393232))) LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE (rt1.c6 COLLATE NOCASE);
SELECT * FROM rt1, t0 WHERE (rt1.c6 COLLATE NOCASE) ORDER BY (+ (((0Xc03db42)<<(rt1.c6)))) DESC, ((((rt1.c3)-(t0.c1))) NOT BETWEEN (0.6532223876593913 COLLATE NOCASE) AND ((rt1.c2 IN (t0.c0)))) ASC  NULLS LAST, NULL LIMIT 3 INTERSECT SELECT * FROM rt1, t0 WHERE ((((~ (rt1.c5))) BETWEEN ((t0.c1 IN ())) AND (CASE WHEN t0.c4 THEN rt1.c1 ELSE NULL END))) ORDER BY (+ (((0Xc03db42)<<(rt1.c6)))) DESC, ((((rt1.c3)-(t0.c1))) NOT BETWEEN (0.6532223876593913 COLLATE NOCASE) AND ((rt1.c2 IN (t0.c0)))) ASC  NULLS LAST, NULL LIMIT 0x3;
SELECT ALL * FROM rt1, t0 WHERE (rt1.c6 COLLATE NOCASE);
SELECT * FROM rt1, t0 WHERE (rt1.c6 COLLATE NOCASE) ORDER BY (+ (((0Xc03db42)<<(rt1.c6)))) DESC, ((((rt1.c3)-(t0.c1))) NOT BETWEEN (0.6532223876593913 COLLATE NOCASE) AND ((rt1.c2 IN (t0.c0)))) ASC  NULLS LAST, NULL LIMIT 3 INTERSECT SELECT * FROM rt1, t0 WHERE ((((~ (rt1.c5))) BETWEEN ((t0.c1 IN ())) AND (CASE WHEN t0.c4 THEN rt1.c1 ELSE NULL END))) ORDER BY (+ (((0Xc03db42)<<(rt1.c6)))) DESC, ((((rt1.c3)-(t0.c1))) NOT BETWEEN (0.6532223876593913 COLLATE NOCASE) AND ((rt1.c2 IN (t0.c0)))) ASC  NULLS LAST, NULL LIMIT 0x3;
SELECT ALL MIN(t0.c2) FROM t0 WHERE (CAST(t0.c2 AS INTEGER)) ORDER BY CASE ((t0.c0)IS(t0.c3))  WHEN '1432800691' THEN CASE WHEN t0.c4 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN 'O}' END END  NULLS LAST;
SELECT MIN(t0.c2) FROM t0 WHERE (CAST(t0.c2 AS INTEGER)) ORDER BY CASE ((t0.c0)IS(t0.c3))  WHEN '1432800691' THEN CASE WHEN t0.c4 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN 'O}' END END  NULLS LAST LIMIT 1 INTERSECT SELECT MIN(t0.c2) FROM t0 WHERE (t0.c3) ORDER BY CASE ((t0.c0)IS(t0.c3))  WHEN '1432800691' THEN CASE WHEN t0.c4 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN 'O}' END END  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt1 WHERE (((((((IFNULL(rt1.c5, rt1.c0))OR(CASE WHEN rt1.c6 THEN rt1.c4 END)))AND(rt1.c2 COLLATE RTRIM)))OR(rt1.c6))) ORDER BY (((rt1.c2 IN ()))%(((rt1.c3)GLOB(rt1.c0)))), HEX(DISTINCT (rt1.c3 IN ())) DESC, rt1.c5, CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt1.c6) ISNULL) END ASC;
SELECT DISTINCT * FROM rt1 WHERE (((((((IFNULL(rt1.c5, rt1.c0))OR(CASE WHEN rt1.c6 THEN rt1.c4 END)))AND(rt1.c2 COLLATE RTRIM)))OR(rt1.c6))) ORDER BY (((rt1.c2 IN ()))%(((rt1.c3)GLOB(rt1.c0)))), HEX(DISTINCT (rt1.c3 IN ())) DESC, rt1.c5, CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt1.c6) ISNULL) END ASC LIMIT 0;
SELECT ALL * FROM rt1 WHERE (((((((IFNULL(rt1.c5, rt1.c0))OR(CASE WHEN rt1.c6 THEN rt1.c4 END)))AND(rt1.c2 COLLATE RTRIM)))OR(rt1.c6))) ORDER BY (((rt1.c2 IN ()))%(((rt1.c3)GLOB(rt1.c0)))), HEX(DISTINCT (rt1.c3 IN ())) DESC, rt1.c5, CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt1.c6) ISNULL) END ASC;
SELECT DISTINCT * FROM rt1 WHERE (((((((IFNULL(rt1.c5, rt1.c0))OR(CASE WHEN rt1.c6 THEN rt1.c4 END)))AND(rt1.c2 COLLATE RTRIM)))OR(rt1.c6))) ORDER BY (((rt1.c2 IN ()))%(((rt1.c3)GLOB(rt1.c0)))), HEX(DISTINCT (rt1.c3 IN ())) DESC, rt1.c5, CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt1.c6) ISNULL) END ASC LIMIT 0;
SELECT * FROM rt1 WHERE ((((((rt1.c5 IN (rt1.c1)))AND(LIKELIHOOD(DISTINCT rt1.c5, rt1.c4))))OR(((rt1.c1)!=(rt1.c5)))));
SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c5 IN (rt1.c1)))AND(LIKELIHOOD(DISTINCT rt1.c5, rt1.c4))))OR(((rt1.c1)<>(rt1.c5)))))AND(((CAST(rt1.c5 AS REAL))<<(((rt1.c0)IS(rt1.c6)))))));
SELECT * FROM rt1 WHERE ((((((rt1.c5 IN (rt1.c1)))AND(LIKELIHOOD(DISTINCT rt1.c5, rt1.c4))))OR(((rt1.c1)!=(rt1.c5)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON (((rt1.c5, rt1.c5, 0.9986057932945565)) NOT BETWEEN (((~ (t0.c3)), (((NULL, x'e1'))<((t0.c3, rt1.c5))), TYPEOF(NULL))) AND (((((t0.c4))<((rt1.c6))), ((rt1.c2) NOT NULL), rt1.c4))) WHERE ((((((t0.c4, t0.c0, t0.c3)) NOT BETWEEN ((rt1.c6, t0.c4, t0.c2)) AND ((rt1.c3, rt1.c6, rt1.c2))))<=(TIME(t0.c3, rt1.c4, t0.c1))));
SELECT DISTINCT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON (((rt1.c5, rt1.c5, 0.9986057932945565)) NOT BETWEEN (((~ (t0.c3)), (((NULL, x'e1'))<((t0.c3, rt1.c5))), TYPEOF(NULL))) AND (((((t0.c4))<((rt1.c6))), ((rt1.c2) NOT NULL), rt1.c4))) WHERE ((((((((t0.c4, t0.c0, t0.c3)) NOT BETWEEN ((rt1.c6, t0.c4, t0.c2)) AND ((rt1.c3, rt1.c6, rt1.c2))))<(TIME(t0.c3, rt1.c4, t0.c1))))AND(((((t0.c0) BETWEEN (rt1.c6) AND (rt1.c0)))%(((rt1.c5)==(rt1.c3))))))) INTERSECT SELECT DISTINCT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON (((rt1.c5, rt1.c5, 0.9986057932945565)) NOT BETWEEN (((~ (t0.c3)), (((NULL, x'e1'))<((t0.c3, rt1.c5))), TYPEOF(NULL))) AND (((((t0.c4))<((rt1.c6))), ((rt1.c2) NOT NULL), rt1.c4))) WHERE (((((t0.c1) NOT BETWEEN (rt1.c6) AND (rt1.c6))) NOTNULL));
SELECT * FROM rt1 WHERE ((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c3))) COLLATE NOCASE);
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c3))) COLLATE NOCASE)AND((((rt1.c6)*(rt1.c3)) IN ((rt1.c3 IN (rt1.c3, rt1.c1)), ((rt1.c6)IS NOT(rt1.c5))))))) LIMIT 1;
SELECT * FROM rt1 WHERE ((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c3))) COLLATE NOCASE);
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c3))) COLLATE NOCASE)AND((((rt1.c6)*(rt1.c3)) IN ((rt1.c3 IN (rt1.c3, rt1.c1)), ((rt1.c6)IS NOT(rt1.c5))))))) LIMIT 1;
SELECT ALL MIN(rt1.c0) FROM rt1, t0 WHERE ((((((t0.c1, -1980698300, t0.c1, rt1.c3, t0.c2, rt1.c5)) NOT BETWEEN ((rt1.c4, NULL, t0.c2, rt1.c6, rt1.c4, t0.c1)) AND ((rt1.c6, t0.c1, t0.c2, rt1.c4, t0.c3, t0.c4))))*(((0.3961454708906311) IS TRUE)))) ORDER BY t0.c2 DESC  NULLS FIRST;
SELECT ALL MIN(rt1.c0) FROM rt1, t0 WHERE ((((((t0.c1, 0Xffffffff89f0f144, t0.c1, rt1.c3, t0.c2, rt1.c5)) NOT BETWEEN ((rt1.c4, NULL, t0.c2, rt1.c6, rt1.c4, t0.c1)) AND ((rt1.c6, t0.c1, t0.c2, rt1.c4, t0.c3, t0.c4))))*(((0.3961454708906311) IS TRUE)))) ORDER BY t0.c2 DESC  NULLS FIRST INTERSECT SELECT ALL MIN(rt1.c0) FROM rt1, t0 WHERE (((rt1.c2) NOT BETWEEN ((rt1.c6 IN (t0.c0, t0.c0))) AND (((((((rt1.c4)AND(NULL)))AND(rt1.c1)))AND(t0.c2))))) ORDER BY t0.c2 DESC  NULLS FIRST;
SELECT MAX(rt1.c3) FROM rt1, t0 WHERE ((((((rt1.c6)+(rt1.c4)), ((rt1.c4)IS NOT(rt1.c4)), CAST(t0.c2 AS INTEGER)))<=((CASE WHEN t0.c4 THEN rt1.c3 WHEN t0.c0 THEN rt1.c2 WHEN t0.c0 THEN t0.c2 WHEN rt1.c1 THEN rt1.c5 ELSE t0.c3 END, ((((((rt1.c5)AND(rt1.c1)))OR(rt1.c6)))AND(1.934950711E9)), x''))));
SELECT MAX(rt1.c3) FROM rt1, t0 WHERE ((((((((rt1.c6)+(rt1.c4)), ((rt1.c4)IS NOT(rt1.c4)), CAST(t0.c2 AS INTEGER)))<=((CASE WHEN t0.c4 THEN rt1.c3 WHEN t0.c0 THEN rt1.c2 WHEN t0.c0 THEN t0.c2 WHEN rt1.c1 THEN rt1.c5 ELSE t0.c3 END, ((((((rt1.c5)AND(rt1.c1)))OR(rt1.c6)))AND(1.934950711E9)), x''))))AND((((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 END))<=((((rt1.c2)&(t0.c0)))))))) ORDER BY (((NOT (rt1.c4))) BETWEEN (CASE rt1.c3  WHEN rt1.c4 THEN rt1.c0 WHEN t0.c1 THEN rt1.c4 END) AND (((rt1.c0) BETWEEN (rt1.c0) AND (t0.c0)))) DESC INTERSECT SELECT ALL MAX(rt1.c3) FROM rt1, t0 WHERE (CASE WHEN ((rt1.c3)+(rt1.c0)) THEN ((t0.c3)GLOB(rt1.c3)) WHEN LTRIM(t0.c0) THEN (- (rt1.c3)) END) ORDER BY (((NOT (rt1.c4))) BETWEEN (CASE rt1.c3  WHEN rt1.c4 THEN rt1.c0 WHEN t0.c1 THEN rt1.c4 END) AND (((rt1.c0) BETWEEN (rt1.c0) AND (t0.c0)))) DESC;
SELECT ALL * FROM t0 WHERE (((x'') IS FALSE)) ORDER BY (((('731213607') NOT BETWEEN (t0.c4) AND (t0.c3))) NOT NULL) ASC;
SELECT DISTINCT * FROM t0 WHERE (((((x'') IS FALSE))AND(CHANGES()))) ORDER BY ((CASE WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c0 END)<<(((t0.c1)>(t0.c1))))  NULLS FIRST, CASE ((t0.c3)+(t0.c0))  WHEN (t0.c2 IN (t0.c3, t0.c4)) THEN t0.c2 COLLATE BINARY WHEN ((t0.c3)<('-2065710970')) THEN (t0.c1 IN ()) WHEN ((x'27d980') NOT NULL) THEN (((t0.c3))>=((t0.c4))) END  NULLS LAST, (((t0.c3 IN (t0.c1))) NOT BETWEEN ((NOT (t0.c0))) AND ((t0.c3 IN (t0.c1, t0.c4))));
SELECT ALL * FROM t0 WHERE (((x'') IS FALSE)) ORDER BY (((('731213607') NOT BETWEEN (t0.c4) AND (t0.c3))) NOT NULL) ASC;
SELECT DISTINCT * FROM t0 WHERE (((((x'') IS FALSE))AND(CHANGES()))) ORDER BY ((CASE WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN t0.c0 END)<<(((t0.c1)>(t0.c1))))  NULLS FIRST, CASE ((t0.c3)+(t0.c0))  WHEN (t0.c2 IN (t0.c3, t0.c4)) THEN t0.c2 COLLATE BINARY WHEN ((t0.c3)<('-2065710970')) THEN (t0.c1 IN ()) WHEN ((x'27d980') NOT NULL) THEN (((t0.c3))>=((t0.c4))) END  NULLS LAST, (((t0.c3 IN (t0.c1))) NOT BETWEEN ((NOT (t0.c0))) AND ((t0.c3 IN (t0.c1, t0.c4))));
SELECT * FROM t0 WHERE (((x'')GLOB((t0.c2 IN (t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((x'')GLOB((t0.c2 IN (t0.c0)))))AND(CASE t0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c0 ELSE t0.c2 END COLLATE RTRIM))) ORDER BY (t0.c3 COLLATE RTRIM IN ('L/')), ((NULLIF(DISTINCT t0.c0, t0.c0))>(CAST(t0.c1 AS INTEGER))) ASC LIMIT 0X2;
SELECT * FROM t0 WHERE (((x'')GLOB((t0.c2 IN (t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((x'')GLOB((t0.c2 IN (t0.c0)))))AND(CASE t0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c0 ELSE t0.c2 END COLLATE RTRIM))) ORDER BY (t0.c3 COLLATE RTRIM IN ('L/')), ((NULLIF(DISTINCT t0.c0, t0.c0))>(CAST(t0.c1 AS INTEGER))) ASC LIMIT 0X2;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((((x'') NOT BETWEEN (rt1.c3) AND (t0.c4))) NOT NULL));
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (((((x'') NOT BETWEEN (rt1.c3) AND (t0.c4))) NOT NULL)) ORDER BY t0.c2, ((((t0.c2)>=(rt1.c4))) ISNULL)  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((((x'') NOT BETWEEN (rt1.c3) AND (t0.c4))) NOT NULL));
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (((((x'') NOT BETWEEN (rt1.c3) AND (t0.c4))) NOT NULL)) ORDER BY t0.c2, ((((t0.c2)>=(rt1.c4))) ISNULL)  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt1, t0 WHERE (((IFNULL(rt1.c4, rt1.c3))&((rt1.c6 IN (-1112591815))))) ORDER BY (NULL IN ((((rt1.c4)) BETWEEN ((t0.c3)) AND ((t0.c1))), ((rt1.c4)+(t0.c4))))  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((IFNULL(rt1.c4, rt1.c3))&((rt1.c6 IN (-1112591815))))) ORDER BY (((t0.c2 IN (rt1.c4))) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (((((rt1.c3)OR(rt1.c5)))AND(rt1.c5)))) ASC  NULLS LAST, CASE WHEN (rt1.c5 IN (rt1.c2)) THEN (rt1.c4 IN (t0.c4)) WHEN HEX(rt1.c3) THEN ((NULL)AND(rt1.c5)) ELSE ((((rt1.c5)AND(t0.c4)))OR(rt1.c6)) END INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c4) NOT NULL))/(t0.c0 COLLATE BINARY))) ORDER BY (((t0.c2 IN (rt1.c4))) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (((((rt1.c3)OR(rt1.c5)))AND(rt1.c5)))) ASC  NULLS LAST, CASE WHEN (rt1.c5 IN (rt1.c2)) THEN (rt1.c4 IN (t0.c4)) WHEN HEX(rt1.c3) THEN ((NULL)AND(rt1.c5)) ELSE ((((rt1.c5)AND(t0.c4)))OR(rt1.c6)) END;
SELECT ALL * FROM rt1, t0 WHERE (((IFNULL(rt1.c4, rt1.c3))&((rt1.c6 IN (-1112591815))))) ORDER BY (NULL IN ((((rt1.c4)) BETWEEN ((t0.c3)) AND ((t0.c1))), ((rt1.c4)+(t0.c4))))  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((IFNULL(rt1.c4, rt1.c3))&((rt1.c6 IN (-1112591815))))) ORDER BY (((t0.c2 IN (rt1.c4))) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (((((rt1.c3)OR(rt1.c5)))AND(rt1.c5)))) ASC  NULLS LAST, CASE WHEN (rt1.c5 IN (rt1.c2)) THEN (rt1.c4 IN (t0.c4)) WHEN HEX(rt1.c3) THEN ((NULL)AND(rt1.c5)) ELSE ((((rt1.c5)AND(t0.c4)))OR(rt1.c6)) END INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c4) NOT NULL))/(t0.c0 COLLATE BINARY))) ORDER BY (((t0.c2 IN (rt1.c4))) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (((((rt1.c3)OR(rt1.c5)))AND(rt1.c5)))) ASC  NULLS LAST, CASE WHEN (rt1.c5 IN (rt1.c2)) THEN (rt1.c4 IN (t0.c4)) WHEN HEX(rt1.c3) THEN ((NULL)AND(rt1.c5)) ELSE ((((rt1.c5)AND(t0.c4)))OR(rt1.c6)) END;
SELECT * FROM t0, rt1 WHERE (CASE (rt1.c3 IN ())  WHEN CASE t0.c0  WHEN t0.c3 THEN 0.9861236797018101 WHEN t0.c4 THEN t0.c1 ELSE rt1.c6 END THEN ((((((rt1.c1)AND(rt1.c2)))AND(NULL)))OR(rt1.c4)) END);
SELECT * FROM t0, rt1 WHERE (CASE (rt1.c3 IN ())  WHEN CASE t0.c0  WHEN t0.c3 THEN 0.9861236797018101 WHEN t0.c4 THEN t0.c1 ELSE rt1.c6 END THEN ((((((rt1.c1)AND(rt1.c2)))AND(NULL)))OR(rt1.c4)) END) ORDER BY ((((rt1.c6) BETWEEN (t0.c4) AND (rt1.c1))) NOT BETWEEN (((rt1.c0)GLOB(t0.c1))) AND (0.8307158183365908)), 0.774535527597818  NULLS FIRST INTERSECT SELECT * FROM t0, rt1 WHERE ((((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c0)) IN ((+ (t0.c0)), 0X57d18450))) ORDER BY ((((rt1.c6) BETWEEN (t0.c4) AND (rt1.c1))) NOT BETWEEN (((rt1.c0)GLOB(t0.c1))) AND (0.8307158183365908)), 0.774535527597818  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (CASE (rt1.c3 IN ())  WHEN CASE t0.c0  WHEN t0.c3 THEN 0.9861236797018101 WHEN t0.c4 THEN t0.c1 ELSE rt1.c6 END THEN ((((((rt1.c1)AND(rt1.c2)))AND(NULL)))OR(rt1.c4)) END);
SELECT * FROM t0, rt1 WHERE (CASE (rt1.c3 IN ())  WHEN CASE t0.c0  WHEN t0.c3 THEN 0.9861236797018101 WHEN t0.c4 THEN t0.c1 ELSE rt1.c6 END THEN ((((((rt1.c1)AND(rt1.c2)))AND(NULL)))OR(rt1.c4)) END) ORDER BY ((((rt1.c6) BETWEEN (t0.c4) AND (rt1.c1))) NOT BETWEEN (((rt1.c0)GLOB(t0.c1))) AND (0.8307158183365908)), 0.774535527597818  NULLS FIRST INTERSECT SELECT * FROM t0, rt1 WHERE ((((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c0)) IN ((+ (t0.c0)), 0X57d18450))) ORDER BY ((((rt1.c6) BETWEEN (t0.c4) AND (rt1.c1))) NOT BETWEEN (((rt1.c0)GLOB(t0.c1))) AND (0.8307158183365908)), 0.774535527597818  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)OR(t0.c3)))AND(t0.c0)) COLLATE RTRIM) ORDER BY (((((((((((t0.c2)AND(t0.c1)))AND(t0.c1)))OR(t0.c2)))AND(t0.c0)), t0.c0, t0.c0))>((CAST(t0.c3 AS INTEGER), 0.4585835439814784, '%')));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)OR(t0.c3)))AND(t0.c0)) COLLATE RTRIM) ORDER BY (((((- (t0.c4)))AND(t0.c2 COLLATE RTRIM)))OR(CHANGES()))  NULLS LAST LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE ((((((- (t0.c4)))OR(NULL)))OR(((t0.c4) IS FALSE)))) ORDER BY (((((- (t0.c4)))AND(t0.c2 COLLATE RTRIM)))OR(CHANGES()))  NULLS LAST LIMIT 0;
SELECT ALL MIN(rt1.c2) FROM t0 CROSS JOIN rt1 ON (rt1.c4 COLLATE BINARY IN (rt1.c6, ((t0.c1) NOT BETWEEN (rt1.c0) AND (t0.c1)))) WHERE ((~ (((rt1.c3) ISNULL)))) ORDER BY ((((((rt1.c1)IS NOT(rt1.c1)))OR(CASE t0.c4  WHEN rt1.c3 THEN rt1.c3 WHEN t0.c3 THEN t0.c4 WHEN t0.c0 THEN t0.c3 END)))AND((- (rt1.c3)))) ASC  NULLS LAST, CAST(t0.c1 AS BLOB) ASC;
SELECT ALL MIN(rt1.c2) FROM t0 CROSS JOIN rt1 ON (rt1.c4 COLLATE BINARY IN (rt1.c6, ((t0.c1) NOT BETWEEN (rt1.c0) AND (t0.c1)))) WHERE ((~ (((rt1.c3) ISNULL)))) ORDER BY NULL LIMIT 0 INTERSECT SELECT ALL MIN(rt1.c2) FROM t0 CROSS JOIN rt1 ON (rt1.c4 COLLATE BINARY IN (rt1.c6, ((t0.c1) NOT BETWEEN (rt1.c0) AND (t0.c1)))) WHERE (MAX(CAST(rt1.c1 AS TEXT), (NOT (rt1.c4)))) ORDER BY NULL LIMIT 0x0;
SELECT * FROM rt1 WHERE ('404184339');
SELECT ALL * FROM rt1 WHERE ('404184339') ORDER BY ((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c1)) COLLATE BINARY  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM rt1 WHERE (((rt1.c2) IS TRUE)) ORDER BY ((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c1)) COLLATE BINARY  NULLS LAST LIMIT 0;
SELECT * FROM rt1 WHERE ('404184339');
SELECT ALL * FROM rt1 WHERE ('404184339') ORDER BY ((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c1)) COLLATE BINARY  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM rt1 WHERE (((rt1.c2) IS TRUE)) ORDER BY ((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c1)) COLLATE BINARY  NULLS LAST LIMIT 0;
SELECT * FROM rt1, t0 WHERE ((rt1.c5 IN ())) ORDER BY (((((t0.c2)OR(rt1.c3)))OR(t0.c3)) IN (rt1.c5 COLLATE NOCASE)) DESC;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((rt1.c5 IN ()))AND(rt1.c4 COLLATE RTRIM))) ORDER BY (((((t0.c2)OR(rt1.c3)))OR(t0.c3)) IN (rt1.c5 COLLATE NOCASE)) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CAST((((t0.c0, rt1.c5, rt1.c0))<=((rt1.c1, t0.c2, rt1.c0))) AS NUMERIC)) ORDER BY (((((t0.c2)OR(rt1.c3)))OR(t0.c3)) IN (rt1.c5 COLLATE NOCASE)) DESC LIMIT 0x0;
SELECT * FROM rt1, t0 WHERE ((rt1.c5 IN ())) ORDER BY (((((t0.c2)OR(rt1.c3)))OR(t0.c3)) IN (rt1.c5 COLLATE NOCASE)) DESC;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((rt1.c5 IN ()))AND(rt1.c4 COLLATE RTRIM))) ORDER BY (((((t0.c2)OR(rt1.c3)))OR(t0.c3)) IN (rt1.c5 COLLATE NOCASE)) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CAST((((t0.c0, rt1.c5, rt1.c0))<=((rt1.c1, t0.c2, rt1.c0))) AS NUMERIC)) ORDER BY (((((t0.c2)OR(rt1.c3)))OR(t0.c3)) IN (rt1.c5 COLLATE NOCASE)) DESC LIMIT 0x0;
SELECT ALL MIN(rt1.c3) FROM rt1, t0 WHERE (((NULL)LIKE(CAST(rt1.c0 AS INTEGER))));
SELECT MIN(rt1.c3) FROM rt1, t0 WHERE (((NULL)LIKE(CAST(rt1.c0 AS INTEGER)))) ORDER BY LIKELY(DISTINCT INSTR(rt1.c5, rt1.c4)) ASC, (((((((((rt1.c4)OR(rt1.c5)))AND(t0.c2)))OR(rt1.c6)), ((rt1.c3)&(rt1.c4)), (t0.c1 IN ())))>=((((t0.c3) NOT BETWEEN (t0.c1) AND (rt1.c5)), ((((((rt1.c3)AND(rt1.c5)))AND(t0.c4)))OR(t0.c4)), (((t0.c4, x'd4'))>((t0.c0, rt1.c1))))))  NULLS LAST, ((CASE WHEN rt1.c4 THEN 0Xffffffffc4ff3a99 WHEN 1.923174721E9 THEN t0.c4 WHEN rt1.c5 THEN t0.c2 WHEN rt1.c4 THEN rt1.c4 END) NOT NULL) ASC;
SELECT * FROM rt1 WHERE ((NOT ((((rt1.c5))<=((rt1.c1))))));
SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c5))<=((rt1.c1))))));
SELECT * FROM rt1 WHERE ((NOT ((((rt1.c5))<=((rt1.c1))))));
SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c5))<=((rt1.c1))))));
SELECT ALL * FROM rt1, t0 WHERE (t0.c0) ORDER BY ((TRIM(rt1.c1, rt1.c3))%((NOT (t0.c4)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (((t0.c0)AND(((COALESCE(DISTINCT rt1.c4, rt1.c1, t0.c0, rt1.c3, -1.666556278E9, '')) BETWEEN (CASE x'55'  WHEN rt1.c0 THEN t0.c1 END) AND (((t0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))))))) ORDER BY ((t0.c3)LIKE(t0.c0)) COLLATE BINARY  NULLS FIRST, t0.c1 DESC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM rt1, t0 WHERE (((rt1.c3 COLLATE NOCASE) ISNULL)) ORDER BY ((t0.c3)LIKE(t0.c0)) COLLATE BINARY  NULLS FIRST, t0.c1 DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE (t0.c0) ORDER BY ((TRIM(rt1.c1, rt1.c3))%((NOT (t0.c4)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (((t0.c0)AND(((COALESCE(DISTINCT rt1.c4, rt1.c1, t0.c0, rt1.c3, -1.666556278E9, '')) BETWEEN (CASE x'55'  WHEN rt1.c0 THEN t0.c1 END) AND (((t0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))))))) ORDER BY ((t0.c3)LIKE(t0.c0)) COLLATE BINARY  NULLS FIRST, t0.c1 DESC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM rt1, t0 WHERE (((rt1.c3 COLLATE NOCASE) ISNULL)) ORDER BY ((t0.c3)LIKE(t0.c0)) COLLATE BINARY  NULLS FIRST, t0.c1 DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM rt1 CROSS JOIN t0 ON ((((t0.c1 IN ()), CAST(rt1.c1 AS NUMERIC)))<=((((rt1.c6)-(t0.c1)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) WHERE (((rt1.c4 COLLATE NOCASE)<=(LIKELIHOOD(rt1.c5, rt1.c5))));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON ((((t0.c1 IN ()), CAST(rt1.c1 AS NUMERIC)))<=((((rt1.c6)-(t0.c1)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) WHERE (((rt1.c4 COLLATE NOCASE)<(LIKELIHOOD(rt1.c5, rt1.c5)))) ORDER BY ((((rt1.c4)<<(rt1.c4))) BETWEEN (rt1.c1) AND (((rt1.c6) BETWEEN (rt1.c3) AND (t0.c3)))) ASC, ((((((((t0.c0)AND(t0.c0)))OR(t0.c4)))OR(rt1.c3))) NOT BETWEEN (((((rt1.c4)AND('V ')))OR(-1904000649))) AND (CASE t0.c3  WHEN rt1.c0 THEN rt1.c0 WHEN t0.c0 THEN rt1.c1 ELSE t0.c3 END)) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON ((((t0.c1 IN ()), CAST(rt1.c1 AS NUMERIC)))<=((((rt1.c6)-(t0.c1)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) WHERE (CASE (rt1.c3 IN (rt1.c5, t0.c2))  WHEN (~ (t0.c0)) THEN (((rt1.c3, 0.9845114484474005)) NOT BETWEEN ((rt1.c4, rt1.c4)) AND ((rt1.c5, rt1.c4))) WHEN ((((NULL)OR(rt1.c5)))OR(rt1.c0)) THEN ((rt1.c0)>>(rt1.c0)) ELSE rt1.c1 END) ORDER BY ((((rt1.c4)<<(rt1.c4))) BETWEEN (rt1.c1) AND (((rt1.c6) BETWEEN (rt1.c3) AND (t0.c3)))) ASC, ((((((((t0.c0)AND(t0.c0)))OR(t0.c4)))OR(rt1.c3))) NOT BETWEEN (((((rt1.c4)AND('V ')))OR(0Xffffffff8e834177))) AND (CASE t0.c3  WHEN rt1.c0 THEN rt1.c0 WHEN t0.c0 THEN rt1.c1 ELSE t0.c3 END)) LIMIT 0x0;
SELECT * FROM rt1 CROSS JOIN t0 ON ((((t0.c1 IN ()), CAST(rt1.c1 AS NUMERIC)))<=((((rt1.c6)-(t0.c1)), CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) WHERE (((rt1.c4 COLLATE NOCASE)<=(LIKELIHOOD(rt1.c5, rt1.c5))));
SELECT * FROM rt1 WHERE (((((rt1.c6)<=(rt1.c4))) ISNULL)) ORDER BY ((NULL)/((((rt1.c4)) NOT BETWEEN ((rt1.c6)) AND (('r4i')))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c6)<=(rt1.c4))) ISNULL)) ORDER BY (CASE ''  WHEN rt1.c3 THEN rt1.c1 WHEN 287414072 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c5 THEN 'N
' END IN ((((rt1.c0, -164089391))<=((rt1.c2, rt1.c1))), ((rt1.c5) IS FALSE))), MIN(((((((rt1.c5)OR(rt1.c0)))OR(rt1.c5)))AND(rt1.c0)), (((rt1.c6, rt1.c4, rt1.c6))>=((rt1.c5, rt1.c0, rt1.c0))), ((rt1.c0)*(rt1.c2)), ((x'')-(rt1.c4)), rt1.c0);
SELECT * FROM rt1 WHERE (((((rt1.c6)<=(rt1.c4))) ISNULL)) ORDER BY ((NULL)/((((rt1.c4)) NOT BETWEEN ((rt1.c6)) AND (('r4i')))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c6)<=(rt1.c4))) ISNULL)) ORDER BY (CASE ''  WHEN rt1.c3 THEN rt1.c1 WHEN 287414072 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c5 THEN 'N
' END IN ((((rt1.c0, -164089391))<=((rt1.c2, rt1.c1))), ((rt1.c5) IS FALSE))), MIN(((((((rt1.c5)OR(rt1.c0)))OR(rt1.c5)))AND(rt1.c0)), (((rt1.c6, rt1.c4, rt1.c6))>=((rt1.c5, rt1.c0, rt1.c0))), ((rt1.c0)*(rt1.c2)), ((x'')-(rt1.c4)), rt1.c0);
SELECT ALL * FROM rt1 WHERE (((rt1.c0) NOTNULL) COLLATE BINARY) ORDER BY (- (((0.5806564964651925) BETWEEN (rt1.c3) AND (rt1.c1))));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c0) NOTNULL) COLLATE BINARY)AND(CAST(((rt1.c1)IS(rt1.c2)) AS BLOB)))) ORDER BY (- (((0.5806564964651925) BETWEEN (rt1.c3) AND (rt1.c1)))) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((CASE rt1.c5  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c1 THEN rt1.c3 END)!=(CAST(rt1.c3 AS BLOB)))) ORDER BY (- (((0.5806564964651925) BETWEEN (rt1.c3) AND (rt1.c1))));
SELECT ALL * FROM rt1 WHERE (((rt1.c0) NOTNULL) COLLATE BINARY) ORDER BY (- (((0.5806564964651925) BETWEEN (rt1.c3) AND (rt1.c1))));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c0) NOTNULL) COLLATE BINARY)AND(CAST(((rt1.c1)IS(rt1.c2)) AS BLOB)))) ORDER BY (- (((0.5806564964651925) BETWEEN (rt1.c3) AND (rt1.c1)))) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((CASE rt1.c5  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c1 THEN rt1.c3 END)!=(CAST(rt1.c3 AS BLOB)))) ORDER BY (- (((0.5806564964651925) BETWEEN (rt1.c3) AND (rt1.c1))));
SELECT ALL * FROM rt1, t0 WHERE ((t0.c0 IN (CAST(t0.c4 AS REAL)))) ORDER BY ((NULL) IS TRUE) ASC, ((NOT (rt1.c6)) IN ()) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((t0.c0 IN (CAST(t0.c4 AS REAL))))AND(((((rt1.c0)/(rt1.c0))) BETWEEN ((+ (rt1.c4))) AND (x'20'))))) ORDER BY ((NULL) IS TRUE) ASC, ((NOT (rt1.c6)) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE ((t0.c0 IN (CAST(t0.c4 AS REAL)))) ORDER BY ((NULL) IS TRUE) ASC, ((NOT (rt1.c6)) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST('-1463084059' AS NUMERIC)) ORDER BY ((t0.c2)/(TRIM(t0.c4))), 0.0685275046891205 ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CAST('-1463084059' AS NUMERIC))AND(x'406122'))) ORDER BY ((t0.c2)/(TRIM(t0.c4))), 0.0685275046891205 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((-1421258739, t0.c0, t0.c0))<=((t0.c0, t0.c4, t0.c4))) COLLATE RTRIM) ORDER BY ((t0.c2)/(TRIM(t0.c4))), 0.0685275046891205 ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST('-1463084059' AS NUMERIC)) ORDER BY ((t0.c2)/(TRIM(t0.c4))), 0.0685275046891205 ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CAST('-1463084059' AS NUMERIC))AND(x'406122'))) ORDER BY ((t0.c2)/(TRIM(t0.c4))), 0.0685275046891205 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((-1421258739, t0.c0, t0.c0))<=((t0.c0, t0.c4, t0.c4))) COLLATE RTRIM) ORDER BY ((t0.c2)/(TRIM(t0.c4))), 0.0685275046891205 ASC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (((((rt1.c0)AND(t0.c2))) BETWEEN (0.06632594691667482) AND (((rt1.c0)IS(rt1.c4))))) ORDER BY CAST(((rt1.c2) NOT BETWEEN (0.8844510338962793) AND (t0.c1)) AS INTEGER) ASC  NULLS FIRST, t0.c3;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c0)AND(t0.c2))) BETWEEN (0.06632594691667482) AND (((rt1.c0)IS(rt1.c4)))))AND('-1813097175'))) ORDER BY CAST(((rt1.c2) NOT BETWEEN (0.8844510338962793) AND (t0.c1)) AS INTEGER) ASC  NULLS FIRST, t0.c3 LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((((((rt1.c1)AND(rt1.c5)))AND(rt1.c2))))<=((0.6758675664981377)))) ORDER BY CAST(((rt1.c2) NOT BETWEEN (0.8844510338962793) AND (t0.c1)) AS INTEGER) ASC  NULLS FIRST, t0.c3 LIMIT 0x2;
SELECT * FROM rt1, t0 WHERE (((((rt1.c0)AND(t0.c2))) BETWEEN (0.06632594691667482) AND (((rt1.c0)IS(rt1.c4))))) ORDER BY CAST(((rt1.c2) NOT BETWEEN (0.8844510338962793) AND (t0.c1)) AS INTEGER) ASC  NULLS FIRST, t0.c3;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c0)AND(t0.c2))) BETWEEN (0.06632594691667482) AND (((rt1.c0)IS(rt1.c4)))))AND('-1813097175'))) ORDER BY CAST(((rt1.c2) NOT BETWEEN (0.8844510338962793) AND (t0.c1)) AS INTEGER) ASC  NULLS FIRST, t0.c3 LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((((((rt1.c1)AND(rt1.c5)))AND(rt1.c2))))<=((0.6758675664981377)))) ORDER BY CAST(((rt1.c2) NOT BETWEEN (0.8844510338962793) AND (t0.c1)) AS INTEGER) ASC  NULLS FIRST, t0.c3 LIMIT 0x2;
SELECT * FROM t0 WHERE (t0.c3);
SELECT DISTINCT * FROM t0 WHERE (((t0.c3)AND(t0.c0))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c4 END)+(((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c1)))) DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (ABS(((((((((((((t0.c1)AND(t0.c1)))AND(0.17449251848845893)))OR(t0.c3)))OR(t0.c1)))AND(t0.c4)))AND('1284848673')))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c4 END)+(((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c1)))) DESC LIMIT 0X0;
SELECT * FROM t0 WHERE (t0.c3);
SELECT DISTINCT * FROM t0 WHERE (((t0.c3)AND(t0.c0))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c4 END)+(((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c1)))) DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (ABS(((((((((((((t0.c1)AND(t0.c1)))AND(0.17449251848845893)))OR(t0.c3)))OR(t0.c1)))AND(t0.c4)))AND('1284848673')))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c4 END)+(((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c1)))) DESC LIMIT 0X0;
SELECT ALL * FROM rt1 WHERE (rt1.c3);
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c3)AND(((rt1.c6) NOT NULL) COLLATE RTRIM))) ORDER BY ((((((rt1.c0 COLLATE RTRIM)AND(CASE WHEN rt1.c6 THEN rt1.c1 END)))OR(((rt1.c4)>(rt1.c5)))))AND(x'c8')) DESC, '0.8237587880307347';
SELECT ALL * FROM rt1 WHERE (rt1.c3);
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c3)AND(((rt1.c6) NOT NULL) COLLATE RTRIM))) ORDER BY ((((((rt1.c0 COLLATE RTRIM)AND(CASE WHEN rt1.c6 THEN rt1.c1 END)))OR(((rt1.c4)>(rt1.c5)))))AND(x'c8')) DESC, '0.8237587880307347';
SELECT * FROM rt1 WHERE (((((rt1.c4)>(rt1.c6))) NOT BETWEEN (rt1.c4 COLLATE NOCASE) AND (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 END)));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c4)>=(rt1.c6))) NOT BETWEEN (rt1.c4 COLLATE NOCASE) AND (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 END)))AND(((((CASE WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)AND((rt1.c3 IN ()))))OR((((rt1.c6, rt1.c5, rt1.c6))>((rt1.c0, rt1.c3, rt1.c2))))))));
SELECT * FROM rt1 WHERE (((((rt1.c4)>(rt1.c6))) NOT BETWEEN (rt1.c4 COLLATE NOCASE) AND (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 END)));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c4)>=(rt1.c6))) NOT BETWEEN (rt1.c4 COLLATE NOCASE) AND (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 END)))AND(((((CASE WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)AND((rt1.c3 IN ()))))OR((((rt1.c6, rt1.c5, rt1.c6))>((rt1.c0, rt1.c3, rt1.c2))))))));
SELECT COUNT(*) FROM t0 WHERE (ABS(DISTINCT (- (t0.c4))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (ABS(DISTINCT (- (t0.c4)))) ORDER BY (((+ (t0.c2)))|((((t0.c2, t0.c1))<=((t0.c1, t0.c3))))), CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c1 COLLATE NOCASE THEN (((t0.c3, t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c4, t0.c0, t0.c1, '-1270526967')) AND ((t0.c4, t0.c1, t0.c1, t0.c4))) ELSE (((t0.c0, t0.c1, t0.c3, t0.c3)) BETWEEN ((t0.c1, t0.c2, t0.c2, x'')) AND ((t0.c3, t0.c4, t0.c4, x'db'))) END LIMIT 0X1;
SELECT * FROM rt1 INNER JOIN t0 ON (((rt1.c3)) NOT BETWEEN (((rt1.c2 IN (rt1.c0)))) AND ((t0.c1 COLLATE RTRIM))) WHERE ((rt1.c3 IN ())) ORDER BY CASE WHEN 445416391 THEN (+ (rt1.c4)) WHEN ((t0.c4) BETWEEN (t0.c3) AND (t0.c1)) THEN t0.c4 COLLATE RTRIM WHEN (rt1.c1 IN (rt1.c3)) THEN ((rt1.c2) NOT BETWEEN (t0.c3) AND ('qfቭ<')) WHEN rt1.c4 COLLATE BINARY THEN ((-1789069762)OR(rt1.c6)) END  NULLS FIRST, (+ (((rt1.c1)/(t0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 INNER JOIN t0 ON (((rt1.c3)) NOT BETWEEN (((rt1.c2 IN (rt1.c0)))) AND ((t0.c1 COLLATE RTRIM))) WHERE ((rt1.c3 IN ())) ORDER BY (((+ (rt1.c6))) ISNULL) DESC  NULLS FIRST;
SELECT * FROM rt1 INNER JOIN t0 ON (((rt1.c3)) NOT BETWEEN (((rt1.c2 IN (rt1.c0)))) AND ((t0.c1 COLLATE RTRIM))) WHERE ((rt1.c3 IN ())) ORDER BY CASE WHEN 445416391 THEN (+ (rt1.c4)) WHEN ((t0.c4) BETWEEN (t0.c3) AND (t0.c1)) THEN t0.c4 COLLATE RTRIM WHEN (rt1.c1 IN (rt1.c3)) THEN ((rt1.c2) NOT BETWEEN (t0.c3) AND ('qfቭ<')) WHEN rt1.c4 COLLATE BINARY THEN ((-1789069762)OR(rt1.c6)) END  NULLS FIRST, (+ (((rt1.c1)/(t0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 INNER JOIN t0 ON (((rt1.c3)) NOT BETWEEN (((rt1.c2 IN (rt1.c0)))) AND ((t0.c1 COLLATE RTRIM))) WHERE ((rt1.c3 IN ())) ORDER BY (((+ (rt1.c6))) ISNULL) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE ('0.5445833580772851');
SELECT DISTINCT * FROM rt1, t0 WHERE ('0.5445833580772851') ORDER BY (((((t0.c1)) BETWEEN ((rt1.c2)) AND ((t0.c2)))) BETWEEN (CASE rt1.c3  WHEN rt1.c4 THEN rt1.c2 ELSE 0.45090362117297056 END) AND (t0.c4)) DESC;
SELECT ALL * FROM rt1, t0 WHERE ('0.5445833580772851');
SELECT DISTINCT * FROM rt1, t0 WHERE ('0.5445833580772851') ORDER BY (((((t0.c1)) BETWEEN ((rt1.c2)) AND ((t0.c2)))) BETWEEN (CASE rt1.c3  WHEN rt1.c4 THEN rt1.c2 ELSE 0.45090362117297056 END) AND (t0.c4)) DESC;
SELECT * FROM t0 WHERE ((((((t0.c2) NOTNULL), ((t0.c2)<<(t0.c3)), ((t0.c0)&(t0.c2))))>(('1844222368', ((t0.c0)<=(t0.c3)), ((t0.c2)AND(t0.c0)))))) ORDER BY CAST(((t0.c1)==(t0.c2)) AS INTEGER) ASC  NULLS LAST, ((((((((((CAST(t0.c1 AS NUMERIC))AND(((t0.c4) BETWEEN (t0.c4) AND (t0.c1)))))OR(x'9337')))OR((~ (t0.c3)))))AND(t0.c4)))OR((t0.c0 IN (t0.c0, t0.c0))));
SELECT * FROM t0 WHERE ((((((t0.c2) NOTNULL), ((t0.c2)<<(t0.c3)), ((t0.c0)&(t0.c2))))>(('1844222368', ((t0.c0)<=(t0.c3)), ((t0.c2)AND(t0.c0)))))) ORDER BY t0.c1 DESC, CASE (((t0.c4, NULL, t0.c3))==((t0.c3, t0.c0, t0.c1)))  WHEN ((((((t0.c1)AND(t0.c3)))OR(t0.c1)))AND(t0.c2)) THEN ((((((x'')OR(t0.c2)))AND(t0.c4)))AND(NULL)) END LIMIT 0x2 INTERSECT SELECT * FROM t0 WHERE (((t0.c2)GLOB('649794915')) COLLATE BINARY) ORDER BY t0.c1 DESC, CASE (((t0.c4, NULL, t0.c3))==((t0.c3, t0.c0, t0.c1)))  WHEN ((((((t0.c1)AND(t0.c3)))OR(t0.c1)))AND(t0.c2)) THEN ((((((x'')OR(t0.c2)))AND(t0.c4)))AND(NULL)) END LIMIT 2;
SELECT * FROM t0 WHERE ((((((t0.c2) NOTNULL), ((t0.c2)<<(t0.c3)), ((t0.c0)&(t0.c2))))>(('1844222368', ((t0.c0)<=(t0.c3)), ((t0.c2)AND(t0.c0)))))) ORDER BY CAST(((t0.c1)==(t0.c2)) AS INTEGER) ASC  NULLS LAST, ((((((((((CAST(t0.c1 AS NUMERIC))AND(((t0.c4) BETWEEN (t0.c4) AND (t0.c1)))))OR(x'9337')))OR((~ (t0.c3)))))AND(t0.c4)))OR((t0.c0 IN (t0.c0, t0.c0))));
SELECT * FROM t0 WHERE ((((((t0.c2) NOTNULL), ((t0.c2)<<(t0.c3)), ((t0.c0)&(t0.c2))))>(('1844222368', ((t0.c0)<=(t0.c3)), ((t0.c2)AND(t0.c0)))))) ORDER BY t0.c1 DESC, CASE (((t0.c4, NULL, t0.c3))==((t0.c3, t0.c0, t0.c1)))  WHEN ((((((t0.c1)AND(t0.c3)))OR(t0.c1)))AND(t0.c2)) THEN ((((((x'')OR(t0.c2)))AND(t0.c4)))AND(NULL)) END LIMIT 0x2 INTERSECT SELECT * FROM t0 WHERE (((t0.c2)GLOB('649794915')) COLLATE BINARY) ORDER BY t0.c1 DESC, CASE (((t0.c4, NULL, t0.c3))==((t0.c3, t0.c0, t0.c1)))  WHEN ((((((t0.c1)AND(t0.c3)))OR(t0.c1)))AND(t0.c2)) THEN ((((((x'')OR(t0.c2)))AND(t0.c4)))AND(NULL)) END LIMIT 2;
SELECT * FROM t0 WHERE (((((json_array(t0.c2, t0.c3))AND(t0.c0 COLLATE BINARY)))AND(CASE t0.c2  WHEN t0.c1 THEN t0.c4 WHEN t0.c3 THEN t0.c3 WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END)));
SELECT * FROM t0 WHERE (((((json_array(t0.c2, t0.c3))AND(t0.c0 COLLATE BINARY)))AND(CASE t0.c2  WHEN t0.c1 THEN t0.c4 WHEN t0.c3 THEN t0.c3 WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END))) ORDER BY 0X42609c4 LIMIT 0X1 INTERSECT SELECT * FROM t0 WHERE (((t0.c4) NOT NULL)) ORDER BY 0X42609c4 LIMIT 0X1;
SELECT * FROM t0 WHERE (((((json_array(t0.c2, t0.c3))AND(t0.c0 COLLATE BINARY)))AND(CASE t0.c2  WHEN t0.c1 THEN t0.c4 WHEN t0.c3 THEN t0.c3 WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END)));
SELECT ALL MIN(rt1.c3) FROM rt1 WHERE (CASE ((rt1.c0) NOT BETWEEN (rt1.c6) AND (rt1.c6))  WHEN 'Rf4' THEN 0.6623527863155498 WHEN CASE WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 WHEN '886054297' THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN '-1230812522' THEN rt1.c4 END THEN CAST(rt1.c3 AS BLOB) WHEN ((((((((((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c6)))AND(rt1.c3)))AND(rt1.c4)))AND(rt1.c6)))OR(1134355514)))OR(0.8783035131824222)) THEN (((rt1.c1, rt1.c6, rt1.c3))<((rt1.c1, rt1.c2, '-156922761'))) WHEN 0xffffffffd35e242b THEN x'' WHEN CASE rt1.c5  WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c5 END THEN ((rt1.c2) IS FALSE) END) ORDER BY ((((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c6 WHEN x'b9' THEN rt1.c5 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c5 END)OR((NOT (NULL)))))OR(rt1.c0)), ((((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c0))) NOT BETWEEN (((rt1.c2)*(rt1.c4))) AND (((NULL)OR(rt1.c3))))  NULLS LAST;
SELECT DISTINCT MIN(rt1.c3) FROM rt1 WHERE (((CASE ((rt1.c0) NOT BETWEEN (rt1.c6) AND (rt1.c6))  WHEN 'Rf4' THEN 0.6623527863155498 WHEN CASE WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 WHEN '886054297' THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN '-1230812522' THEN rt1.c4 END THEN CAST(rt1.c3 AS BLOB) WHEN ((((((((((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c6)))AND(rt1.c3)))AND(rt1.c4)))AND(rt1.c6)))OR(0x439ce43a)))OR(0.8783035131824222)) THEN (((rt1.c1, rt1.c6, rt1.c3))<((rt1.c1, rt1.c2, '-156922761'))) WHEN 0Xffffffffd35e242b THEN x'' WHEN CASE rt1.c5  WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c5 END THEN ((rt1.c2) IS FALSE) END)AND((((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c6))) COLLATE RTRIM))) ORDER BY SQLITE_COMPILEOPTION_GET(TYPEOF(rt1.c2)) LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(rt1.c3) FROM rt1 WHERE (UPPER(x'')) ORDER BY SQLITE_COMPILEOPTION_GET(TYPEOF(rt1.c2)) LIMIT 1;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE LIKE(rt1.c5, t0.c3)  WHEN (((rt1.c6, rt1.c6))>((rt1.c3, rt1.c0))) THEN ((((((((rt1.c4)OR(rt1.c6)))OR('475221837')))AND(t0.c0)))OR(t0.c2)) WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c2)) THEN ((-958625137) NOT BETWEEN (t0.c2) AND (t0.c1)) WHEN ((t0.c2) NOTNULL) THEN CASE t0.c3  WHEN rt1.c6 THEN rt1.c2 END ELSE (('') IS TRUE) END) ORDER BY ((rt1.c2 COLLATE BINARY) IS TRUE);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE LIKE(rt1.c5, t0.c3)  WHEN (((rt1.c6, rt1.c6))>((rt1.c3, rt1.c0))) THEN ((((((((rt1.c4)OR(rt1.c6)))OR('475221837')))AND(t0.c0)))OR(t0.c2)) WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c2)) THEN ((-958625137) NOT BETWEEN (t0.c2) AND (t0.c1)) WHEN ((t0.c2) NOTNULL) THEN CASE t0.c3  WHEN rt1.c6 THEN rt1.c2 END ELSE (('') IS TRUE) END) ORDER BY ((CASE WHEN t0.c2 THEN t0.c3 WHEN t0.c2 THEN 0X5a2a3318 WHEN rt1.c0 THEN rt1.c4 WHEN t0.c3 THEN t0.c3 END) NOT BETWEEN (((t0.c0) ISNULL)) AND ((- (rt1.c5))))  NULLS LAST, CASE (rt1.c0 IN (rt1.c1, rt1.c0))  WHEN (((rt1.c2, rt1.c6, rt1.c5, t0.c3, t0.c3))=((t0.c4, rt1.c0, t0.c0, t0.c2, rt1.c4))) THEN (((t0.c0))>=((rt1.c3))) END, CAST(((((((rt1.c2)OR(rt1.c5)))OR(rt1.c1)))AND(rt1.c2)) AS BLOB) ASC  NULLS FIRST INTERSECT SELECT COUNT(*) FROM rt1, t0 WHERE (rt1.c0) ORDER BY ((CASE WHEN t0.c2 THEN t0.c3 WHEN t0.c2 THEN 0X5a2a3318 WHEN rt1.c0 THEN rt1.c4 WHEN t0.c3 THEN t0.c3 END) NOT BETWEEN (((t0.c0) ISNULL)) AND ((- (rt1.c5))))  NULLS LAST, CASE (rt1.c0 IN (rt1.c1, rt1.c0))  WHEN (((rt1.c2, rt1.c6, rt1.c5, t0.c3, t0.c3))=((t0.c4, rt1.c0, t0.c0, t0.c2, rt1.c4))) THEN (((t0.c0))>=((rt1.c3))) END, CAST(((((((rt1.c2)OR(rt1.c5)))OR(rt1.c1)))AND(rt1.c2)) AS BLOB) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (NULLIF(DISTINCT ((t0.c2) IS TRUE), rt1.c2));
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((NULLIF(DISTINCT ((t0.c2) IS TRUE), rt1.c2))AND((+ (0Xffffffff82492907))))) LIMIT 1;
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c3 END)+(('1813342711' IN ())))) ORDER BY ((rt1.c1) BETWEEN (rt1.c4 COLLATE BINARY) AND (CASE WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END)) DESC, ((((((((((((((-1.93617492E8)AND(NULL)))OR(rt1.c2)))AND(rt1.c0)))AND(ABS(DISTINCT x''))))AND((~ (-1246367183)))))OR(CASE WHEN rt1.c3 THEN rt1.c5 END)))AND(rt1.c0 COLLATE BINARY));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c3 END)+(('1813342711' IN ())))) ORDER BY ((rt1.c1) BETWEEN (rt1.c4 COLLATE BINARY) AND (CASE WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END)) DESC, ((((((((((((((-1.93617492E8)AND(NULL)))OR(rt1.c2)))AND(rt1.c0)))AND(ABS(DISTINCT x''))))AND((~ (0xffffffffb5b5f231)))))OR(CASE WHEN rt1.c3 THEN rt1.c5 END)))AND(rt1.c0 COLLATE BINARY)) LIMIT 0x1;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (x'')) IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (x'')) IN ())) LIMIT 5 INTERSECT SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c5 COLLATE NOCASE)OR(rt1.c0 COLLATE RTRIM)))AND(((rt1.c4) NOT NULL))))OR(rt1.c2))) LIMIT 5;
SELECT ALL MAX(rt1.c6) FROM rt1 WHERE (rt1.c5) ORDER BY NULLIF(((rt1.c5) NOTNULL), (((rt1.c3)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c0))))  NULLS LAST;
SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE (rt1.c5) ORDER BY NULLIF(((rt1.c5) NOTNULL), (((rt1.c3)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c0))))  NULLS LAST INTERSECT SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE ((((((rt1.c3, '-248273772', '467217330', rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c5, rt1.c0)) AND ((rt1.c3, rt1.c0, rt1.c3, rt1.c5)))) NOT NULL)) ORDER BY NULLIF(((rt1.c5) NOTNULL), (((rt1.c3)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c0))))  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (((CAST(rt1.c0 AS INTEGER))IS NOT(CASE rt1.c6  WHEN t0.c3 THEN t0.c1 ELSE rt1.c3 END))) ORDER BY (NOT (rt1.c3)) COLLATE NOCASE, json_array(((rt1.c2)/(rt1.c2)), ((((rt1.c4)OR(0.30867880976023765)))OR(rt1.c6)));
SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(rt1.c0 AS INTEGER))IS NOT(CASE rt1.c6  WHEN t0.c3 THEN t0.c1 ELSE rt1.c3 END))) ORDER BY HEX(DISTINCT rt1.c5 COLLATE RTRIM), ((CASE t0.c3  WHEN rt1.c0 THEN t0.c3 WHEN t0.c3 THEN rt1.c6 WHEN rt1.c5 THEN t0.c2 ELSE rt1.c5 END) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (rt1.c4))) AND (json_quote(rt1.c0)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (rt1.c3) ORDER BY HEX(DISTINCT rt1.c5 COLLATE RTRIM), ((CASE t0.c3  WHEN rt1.c0 THEN t0.c3 WHEN t0.c3 THEN rt1.c6 WHEN rt1.c5 THEN t0.c2 ELSE rt1.c5 END) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (rt1.c4))) AND (json_quote(rt1.c0)))  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (((CAST(rt1.c0 AS INTEGER))IS NOT(CASE rt1.c6  WHEN t0.c3 THEN t0.c1 ELSE rt1.c3 END))) ORDER BY (NOT (rt1.c3)) COLLATE NOCASE, json_array(((rt1.c2)/(rt1.c2)), ((((rt1.c4)OR(0.30867880976023765)))OR(rt1.c6)));
SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(rt1.c0 AS INTEGER))IS NOT(CASE rt1.c6  WHEN t0.c3 THEN t0.c1 ELSE rt1.c3 END))) ORDER BY HEX(DISTINCT rt1.c5 COLLATE RTRIM), ((CASE t0.c3  WHEN rt1.c0 THEN t0.c3 WHEN t0.c3 THEN rt1.c6 WHEN rt1.c5 THEN t0.c2 ELSE rt1.c5 END) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (rt1.c4))) AND (json_quote(rt1.c0)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (rt1.c3) ORDER BY HEX(DISTINCT rt1.c5 COLLATE RTRIM), ((CASE t0.c3  WHEN rt1.c0 THEN t0.c3 WHEN t0.c3 THEN rt1.c6 WHEN rt1.c5 THEN t0.c2 ELSE rt1.c5 END) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (rt1.c4))) AND (json_quote(rt1.c0)))  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ((((((~ (t0.c3)))OR((~ ('''''l,_c')))))OR(t0.c0))) ORDER BY '	G	>A'  NULLS LAST, ((CAST(rt1.c4 AS BLOB))!=(t0.c3)) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((((~ (t0.c3)))OR((~ ('''''l,_c')))))OR(t0.c0)))AND(((((rt1.c3)||(rt1.c0))) NOT BETWEEN ((((rt1.c1, t0.c2))=((t0.c3, rt1.c1)))) AND (CAST(rt1.c6 AS REAL)))))) ORDER BY CASE WHEN (~ (rt1.c5)) THEN (NOT (t0.c4)) ELSE ((t0.c4)<=(rt1.c0)) END, (t0.c0 IN ()) COLLATE RTRIM, rt1.c6 ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((rt1.c5)GLOB(rt1.c3)) IN ())) ORDER BY CASE WHEN (~ (rt1.c5)) THEN (NOT (t0.c4)) ELSE ((t0.c4)<=(rt1.c0)) END, (t0.c0 IN ()) COLLATE RTRIM, rt1.c6 ASC  NULLS LAST;
SELECT * FROM rt1, t0 WHERE ((((((~ (t0.c3)))OR((~ ('''''l,_c')))))OR(t0.c0))) ORDER BY '	G	>A'  NULLS LAST, ((CAST(rt1.c4 AS BLOB))!=(t0.c3)) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((((~ (t0.c3)))OR((~ ('''''l,_c')))))OR(t0.c0)))AND(((((rt1.c3)||(rt1.c0))) NOT BETWEEN ((((rt1.c1, t0.c2))=((t0.c3, rt1.c1)))) AND (CAST(rt1.c6 AS REAL)))))) ORDER BY CASE WHEN (~ (rt1.c5)) THEN (NOT (t0.c4)) ELSE ((t0.c4)<=(rt1.c0)) END, (t0.c0 IN ()) COLLATE RTRIM, rt1.c6 ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((rt1.c5)GLOB(rt1.c3)) IN ())) ORDER BY CASE WHEN (~ (rt1.c5)) THEN (NOT (t0.c4)) ELSE ((t0.c4)<=(rt1.c0)) END, (t0.c0 IN ()) COLLATE RTRIM, rt1.c6 ASC  NULLS LAST;
SELECT MIN(rt1.c1) FROM t0, rt1 WHERE ((+ ((- (rt1.c6)))));
SELECT MIN(rt1.c1) FROM t0, rt1 WHERE ((((+ ((- (rt1.c6)))))AND((- ((((rt1.c0, rt1.c2)) NOT BETWEEN ((t0.c4, rt1.c0)) AND ((t0.c4, t0.c4)))))))) ORDER BY (~ ('1639601663')) ASC, ((((((((rt1.c0)OR(t0.c1)))OR(t0.c2)))OR(rt1.c1)))AND(t0.c1)) COLLATE NOCASE  NULLS LAST INTERSECT SELECT MIN(rt1.c1) FROM t0, rt1 WHERE ((((((((rt1.c0)) BETWEEN ((t0.c4)) AND ((rt1.c3))))AND(((rt1.c6)OR(t0.c1)))))OR(((t0.c1) NOT NULL)))) ORDER BY (~ ('1639601663')) ASC, ((((((((rt1.c0)OR(t0.c1)))OR(t0.c2)))OR(rt1.c1)))AND(t0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (CAST(t0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY);
SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(t0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY) LIMIT 0x0;
SELECT * FROM rt1, t0 WHERE (CAST(t0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY);
SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(t0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY) LIMIT 0x0;
SELECT ALL * FROM t0 WHERE ((((NULL, t0.c4, t0.c3)) NOT BETWEEN ((t0.c0, (((t0.c4, t0.c2))<=((t0.c1, t0.c0))), INSTR(t0.c2, t0.c2))) AND ((ABS(t0.c3), ((t0.c0)=(t0.c1)), ((t0.c1)<=(t0.c3))))));
SELECT * FROM t0 WHERE ((((((NULL, t0.c4, t0.c3)) NOT BETWEEN ((t0.c0, (((t0.c4, t0.c2))<=((t0.c1, t0.c0))), INSTR(t0.c2, t0.c2))) AND ((ABS(t0.c3), ((t0.c0)<=(t0.c1)), ((t0.c1)<=(t0.c3))))))AND(COALESCE((+ (t0.c2)), ((NULL) BETWEEN (t0.c1) AND (t0.c1)), x'', NULL, ((NULL) BETWEEN (t0.c0) AND (t0.c2)), ((t0.c1)<>(t0.c4)))))) ORDER BY (((((t0.c4) BETWEEN (t0.c0) AND (t0.c2))))<((UNICODE(t0.c0)))) DESC, t0.c2 ASC;
SELECT ALL * FROM t0 WHERE ((((NULL, t0.c4, t0.c3)) NOT BETWEEN ((t0.c0, (((t0.c4, t0.c2))<=((t0.c1, t0.c0))), INSTR(t0.c2, t0.c2))) AND ((ABS(t0.c3), ((t0.c0)=(t0.c1)), ((t0.c1)<=(t0.c3))))));
SELECT * FROM t0 WHERE ((((((NULL, t0.c4, t0.c3)) NOT BETWEEN ((t0.c0, (((t0.c4, t0.c2))<=((t0.c1, t0.c0))), INSTR(t0.c2, t0.c2))) AND ((ABS(t0.c3), ((t0.c0)<=(t0.c1)), ((t0.c1)<=(t0.c3))))))AND(COALESCE((+ (t0.c2)), ((NULL) BETWEEN (t0.c1) AND (t0.c1)), x'', NULL, ((NULL) BETWEEN (t0.c0) AND (t0.c2)), ((t0.c1)<>(t0.c4)))))) ORDER BY (((((t0.c4) BETWEEN (t0.c0) AND (t0.c2))))<((UNICODE(t0.c0)))) DESC, t0.c2 ASC;
SELECT MAX(rt1.c2) FROM rt1 WHERE ((+ (rt1.c5)) COLLATE RTRIM) ORDER BY ((((((((CASE WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c6 END)OR(((rt1.c1) IS TRUE))))AND(((rt1.c1)IS NOT(rt1.c4)))))OR((~ (rt1.c2)))))AND(CAST(rt1.c0 AS REAL))) DESC  NULLS LAST, rt1.c3  NULLS LAST;
SELECT DISTINCT MAX(rt1.c2) FROM rt1 WHERE ((((+ (rt1.c5)) COLLATE RTRIM)AND(CAST((0Xffffffffc2ee44cf IN ()) AS INTEGER)))) ORDER BY x'92' DESC, CASE WHEN 'B' THEN rt1.c6 END INTERSECT SELECT DISTINCT MAX(rt1.c2) FROM rt1 WHERE (CAST((- (rt1.c0)) AS BLOB)) ORDER BY x'92' DESC, CASE WHEN 'B' THEN rt1.c6 END;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c1) NOTNULL) THEN ((rt1.c1)AND(rt1.c6)) WHEN (3.5009463E7 IN ()) THEN ((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c3)) ELSE rt1.c0 END) ORDER BY ((((((((rt1.c4)LIKE(rt1.c0)))AND(rt1.c3)))OR(DATETIME(rt1.c3, NULL, rt1.c6, x'', rt1.c5, rt1.c4))))AND(NULLIF(rt1.c1, rt1.c6)))  NULLS LAST, ((CAST(rt1.c5 AS BLOB))GLOB(((rt1.c2)%(rt1.c3)))) DESC  NULLS LAST, (((x'', rt1.c2 COLLATE BINARY, (- (NULL))))<((rt1.c3, CASE rt1.c4  WHEN rt1.c4 THEN rt1.c2 WHEN 'BWW⇖' THEN rt1.c5 ELSE rt1.c4 END, ((rt1.c0) NOTNULL)))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN ((rt1.c1) NOTNULL) THEN ((rt1.c1)AND(rt1.c6)) WHEN (3.5009463E7 IN ()) THEN ((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c3)) ELSE rt1.c0 END)AND(JULIANDAY(TYPEOF(DISTINCT rt1.c3), ((rt1.c2)IS(rt1.c3)), ((rt1.c2)GLOB(rt1.c1)), ((((rt1.c1)AND(rt1.c5)))OR(rt1.c3)))))) ORDER BY x'23576b370e', 1.147367855E9  NULLS LAST;
SELECT * FROM rt1 WHERE ((((('c
6neb-x
') NOT NULL)) IS TRUE));
SELECT ALL * FROM rt1 WHERE ((((('c
6neb-x
') NOT NULL)) IS TRUE)) ORDER BY ((((rt1.c2)==(1.934950711E9))) NOTNULL) DESC INTERSECT SELECT * FROM rt1 WHERE (((x'' COLLATE NOCASE)>(((rt1.c6)%(rt1.c2))))) ORDER BY ((((rt1.c2)=(1.934950711E9))) NOTNULL) DESC;
SELECT * FROM rt1 WHERE ((((('c
6neb-x
') NOT NULL)) IS TRUE));
SELECT ALL * FROM rt1 WHERE ((((('c
6neb-x
') NOT NULL)) IS TRUE)) ORDER BY ((((rt1.c2)==(1.934950711E9))) NOTNULL) DESC INTERSECT SELECT * FROM rt1 WHERE (((x'' COLLATE NOCASE)>(((rt1.c6)%(rt1.c2))))) ORDER BY ((((rt1.c2)=(1.934950711E9))) NOTNULL) DESC;
SELECT MIN(rt1.c6) FROM t0, rt1 WHERE (((((((((((rt1.c2)AND(rt1.c1)))OR(x'14')))OR(t0.c2)))AND(rt1.c6))) NOT BETWEEN (0x86783fb) AND ((- (rt1.c6)))));
SELECT ALL MIN(rt1.c6) FROM t0, rt1 WHERE (((((((((((((rt1.c2)AND(rt1.c1)))OR(x'14')))OR(t0.c2)))AND(rt1.c6))) NOT BETWEEN (141001723) AND ((- (rt1.c6)))))AND(CAST(t0.c3 AS BLOB) COLLATE NOCASE))) ORDER BY '-889508270'  NULLS LAST, LIKELIHOOD(DISTINCT NULL, ((rt1.c1)IS(rt1.c3)))  NULLS LAST LIMIT 1 INTERSECT SELECT ALL MIN(rt1.c6) FROM t0, rt1 WHERE (CAST((~ (rt1.c6)) AS INTEGER)) ORDER BY '-889508270'  NULLS LAST, LIKELIHOOD(DISTINCT NULL, ((rt1.c1)IS(rt1.c3)))  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt1 NOT INDEXED WHERE (((rt1.c4)|(((rt1.c3)-(rt1.c0)))));
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c4)|(((rt1.c3)-(rt1.c0))))) ORDER BY ('953423655' IN ())  NULLS LAST, ((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END) NOTNULL) ASC  NULLS FIRST, (('')==(CAST(rt1.c4 AS NUMERIC)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c1 END)%(((rt1.c2) IS FALSE)))) ORDER BY ('953423655' IN ())  NULLS LAST, ((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END) NOTNULL) ASC  NULLS FIRST, (('')==(CAST(rt1.c4 AS NUMERIC)))  NULLS LAST;
SELECT ALL * FROM rt1 NOT INDEXED WHERE (((rt1.c4)|(((rt1.c3)-(rt1.c0)))));
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c4)|(((rt1.c3)-(rt1.c0))))) ORDER BY ('953423655' IN ())  NULLS LAST, ((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END) NOTNULL) ASC  NULLS FIRST, (('')==(CAST(rt1.c4 AS NUMERIC)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c1 END)%(((rt1.c2) IS FALSE)))) ORDER BY ('953423655' IN ())  NULLS LAST, ((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END) NOTNULL) ASC  NULLS FIRST, (('')==(CAST(rt1.c4 AS NUMERIC)))  NULLS LAST;
SELECT MIN(t0.c2) FROM t0 WHERE ((((t0.c2, t0.c4)) NOT BETWEEN ((CASE WHEN t0.c1 THEN x'72b0' WHEN t0.c3 THEN t0.c0 ELSE t0.c1 END, CAST(t0.c4 AS TEXT))) AND ((((x'2d')IS NOT(t0.c4)), -1.93617492E8))));
SELECT MIN(t0.c2) FROM t0 WHERE ((((t0.c2, t0.c4)) NOT BETWEEN ((CASE WHEN t0.c1 THEN x'72b0' WHEN t0.c3 THEN t0.c0 ELSE t0.c1 END, CAST(t0.c4 AS TEXT))) AND ((((x'2d')IS NOT(t0.c4)), -1.93617492E8)))) LIMIT 2;
SELECT ALL * FROM rt1, t0 WHERE (((NULLIF(t0.c2, t0.c1))>('-226271228')));
SELECT ALL * FROM rt1, t0 WHERE (((NULLIF(t0.c2, t0.c1))>('-226271228'))) LIMIT 2 INTERSECT SELECT * FROM rt1, t0 WHERE (((rt1.c0) ISNULL) COLLATE NOCASE) LIMIT 2;
SELECT ALL * FROM rt1, t0 WHERE (((NULLIF(t0.c2, t0.c1))>('-226271228')));
SELECT ALL * FROM rt1, t0 WHERE (((NULLIF(t0.c2, t0.c1))>('-226271228'))) LIMIT 2 INTERSECT SELECT * FROM rt1, t0 WHERE (((rt1.c0) ISNULL) COLLATE NOCASE) LIMIT 2;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((((((((((rt1.c4)IS NOT(rt1.c6)))AND(((x'a0')-(rt1.c0)))))OR(((((((rt1.c0)AND(t0.c2)))AND(rt1.c0)))OR(rt1.c3)))))AND((t0.c3 IN (rt1.c2)))))OR(t0.c3 COLLATE NOCASE)) WHERE ((((((rt1.c3 IN (t0.c1)))AND((rt1.c1 IN (rt1.c5)))))OR(((rt1.c1) IS FALSE)))) ORDER BY ((rt1.c1)*(rt1.c3)) COLLATE NOCASE, (((((t0.c1, t0.c3))<=((t0.c3, 0.5733275113138827))))AND(((t0.c1) BETWEEN (rt1.c1) AND (t0.c1)))) ASC;
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON ((((((((((rt1.c4)IS NOT(rt1.c6)))AND(((x'a0')-(rt1.c0)))))OR(((((((rt1.c0)AND(t0.c2)))AND(rt1.c0)))OR(rt1.c3)))))AND((t0.c3 IN (rt1.c2)))))OR(t0.c3 COLLATE NOCASE)) WHERE ((((((rt1.c3 IN (t0.c1)))AND((rt1.c1 IN (rt1.c5)))))OR(((rt1.c1) IS FALSE)))) ORDER BY 2.025863801E9 DESC, 0.2614407746108983 DESC INTERSECT SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON ((((((((((rt1.c4)IS NOT(rt1.c6)))AND(((x'a0')-(rt1.c0)))))OR(((((((rt1.c0)AND(t0.c2)))AND(rt1.c0)))OR(rt1.c3)))))AND((t0.c3 IN (rt1.c2)))))OR(t0.c3 COLLATE NOCASE)) WHERE (CAST(((t0.c0) BETWEEN (t0.c1) AND (-1.463084059E9)) AS TEXT)) ORDER BY 2.025863801E9 DESC, 0.2614407746108983 DESC;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((((((((((rt1.c4)IS NOT(rt1.c6)))AND(((x'a0')-(rt1.c0)))))OR(((((((rt1.c0)AND(t0.c2)))AND(rt1.c0)))OR(rt1.c3)))))AND((t0.c3 IN (rt1.c2)))))OR(t0.c3 COLLATE NOCASE)) WHERE ((((((rt1.c3 IN (t0.c1)))AND((rt1.c1 IN (rt1.c5)))))OR(((rt1.c1) IS FALSE)))) ORDER BY ((rt1.c1)*(rt1.c3)) COLLATE NOCASE, (((((t0.c1, t0.c3))<=((t0.c3, 0.5733275113138827))))AND(((t0.c1) BETWEEN (rt1.c1) AND (t0.c1)))) ASC;
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON ((((((((((rt1.c4)IS NOT(rt1.c6)))AND(((x'a0')-(rt1.c0)))))OR(((((((rt1.c0)AND(t0.c2)))AND(rt1.c0)))OR(rt1.c3)))))AND((t0.c3 IN (rt1.c2)))))OR(t0.c3 COLLATE NOCASE)) WHERE ((((((rt1.c3 IN (t0.c1)))AND((rt1.c1 IN (rt1.c5)))))OR(((rt1.c1) IS FALSE)))) ORDER BY 2.025863801E9 DESC, 0.2614407746108983 DESC INTERSECT SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON ((((((((((rt1.c4)IS NOT(rt1.c6)))AND(((x'a0')-(rt1.c0)))))OR(((((((rt1.c0)AND(t0.c2)))AND(rt1.c0)))OR(rt1.c3)))))AND((t0.c3 IN (rt1.c2)))))OR(t0.c3 COLLATE NOCASE)) WHERE (CAST(((t0.c0) BETWEEN (t0.c1) AND (-1.463084059E9)) AS TEXT)) ORDER BY 2.025863801E9 DESC, 0.2614407746108983 DESC;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (CASE ((NULL) BETWEEN (t0.c0) AND (rt1.c3))  WHEN (rt1.c4 IN (t0.c4, rt1.c6)) THEN ((t0.c2)GLOB(t0.c1)) WHEN (((rt1.c4, rt1.c5, t0.c1, rt1.c4, rt1.c0)) BETWEEN ((rt1.c1, t0.c0, t0.c3, rt1.c5, rt1.c2)) AND ((t0.c4, '-1420329002', rt1.c5, t0.c3, rt1.c3))) THEN rt1.c4 COLLATE NOCASE WHEN CASE WHEN t0.c4 THEN t0.c2 WHEN rt1.c5 THEN t0.c2 WHEN rt1.c3 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END THEN CASE WHEN rt1.c0 THEN t0.c2 ELSE rt1.c3 END END);
SELECT DISTINCT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (((CASE ((NULL) BETWEEN (t0.c0) AND (rt1.c3))  WHEN (rt1.c4 IN (t0.c4, rt1.c6)) THEN ((t0.c2)GLOB(t0.c1)) WHEN (((rt1.c4, rt1.c5, t0.c1, rt1.c4, rt1.c0)) BETWEEN ((rt1.c1, t0.c0, t0.c3, rt1.c5, rt1.c2)) AND ((t0.c4, '-1420329002', rt1.c5, t0.c3, rt1.c3))) THEN rt1.c4 COLLATE NOCASE WHEN CASE WHEN t0.c4 THEN t0.c2 WHEN rt1.c5 THEN t0.c2 WHEN rt1.c3 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END THEN CASE WHEN rt1.c0 THEN t0.c2 ELSE rt1.c3 END END)AND((HEX('-1184841295') IN ())))) ORDER BY ((((rt1.c0)<>(0x23420d3e))) ISNULL) ASC, ((NOT (rt1.c4)) IN (rt1.c3 COLLATE BINARY, ((t0.c2) IS TRUE))) ASC  NULLS FIRST, rt1.c1 ASC LIMIT 0X1;
SELECT ALL * FROM rt1 WHERE (rt1.c4 COLLATE BINARY);
SELECT * FROM rt1 WHERE (rt1.c4 COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE (rt1.c4 COLLATE BINARY);
SELECT * FROM rt1 WHERE (rt1.c4 COLLATE BINARY);
SELECT ALL * FROM t0 WHERE ((NOT (t0.c2)) COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE ((((NOT (t0.c2)) COLLATE NOCASE)AND(((((((0.46839296319303103)AND(((t0.c2)||(t0.c2)))))OR(NULL)))OR(((t0.c2)=(t0.c0))))))) LIMIT 1;
SELECT ALL * FROM t0 WHERE ((NOT (t0.c2)) COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE ((((NOT (t0.c2)) COLLATE NOCASE)AND(((((((0.46839296319303103)AND(((t0.c2)||(t0.c2)))))OR(NULL)))OR(((t0.c2)=(t0.c0))))))) LIMIT 1;
SELECT MAX(rt1.c2) FROM rt1, t0 WHERE ((- (((((((((rt1.c6)AND(rt1.c2)))AND(rt1.c6)))AND(rt1.c5)))OR(t0.c0)))));
SELECT MAX(rt1.c2) FROM rt1, t0 WHERE ((- (((((((((rt1.c6)AND(rt1.c2)))AND(rt1.c6)))AND(rt1.c5)))OR(t0.c0))))) ORDER BY ((((((((((NULL) IS FALSE))OR(t0.c0 COLLATE NOCASE)))AND(rt1.c1 COLLATE NOCASE)))AND(((rt1.c3) NOTNULL))))OR(t0.c2))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT MAX(rt1.c2) FROM rt1, t0 WHERE (CASE WHEN CASE rt1.c3  WHEN t0.c1 THEN t0.c1 WHEN rt1.c0 THEN rt1.c3 END THEN (((rt1.c6)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) WHEN (NOT (rt1.c6)) THEN rt1.c6 END) ORDER BY ((((((((((NULL) IS FALSE))OR(t0.c0 COLLATE NOCASE)))AND(rt1.c1 COLLATE NOCASE)))AND(((rt1.c3) NOTNULL))))OR(t0.c2))  NULLS FIRST LIMIT 1;
SELECT COUNT(*) FROM rt1 WHERE (CASE NULL  WHEN ((rt1.c0) IS TRUE) THEN ((rt1.c3)IS(x'65f6a3')) END) ORDER BY CASE WHEN 0X46a12a72 THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c6)) THEN ((((rt1.c4)OR(rt1.c3)))AND(rt1.c5)) END ASC  NULLS FIRST, (((rt1.c5 IN (rt1.c6)))%((((rt1.c5))<>((0.20926434572609942))))) DESC  NULLS LAST, 'u_' ASC  NULLS FIRST, (((rt1.c3 IN (rt1.c6))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE NULL  WHEN ((rt1.c0) IS TRUE) THEN ((rt1.c3)IS(x'65f6a3')) END) ORDER BY CASE WHEN 1184967282 THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c6)) THEN ((((rt1.c4)OR(rt1.c3)))AND(rt1.c5)) END ASC  NULLS FIRST, (((rt1.c5 IN (rt1.c6)))%((((rt1.c5))<>((0.20926434572609942))))) DESC  NULLS LAST, 'u_' ASC  NULLS FIRST, (((rt1.c3 IN (rt1.c6))) IS FALSE) ASC INTERSECT SELECT COUNT(*) FROM rt1 WHERE (((((((CAST(rt1.c0 AS REAL))OR((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c5))))))AND((- (rt1.c0)))))AND(((rt1.c1) NOT NULL)))) ORDER BY CASE WHEN 1184967282 THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c6)) THEN ((((rt1.c4)OR(rt1.c3)))AND(rt1.c5)) END ASC  NULLS FIRST, (((rt1.c5 IN (rt1.c6)))%((((rt1.c5))!=((0.20926434572609942))))) DESC  NULLS LAST, 'u_' ASC  NULLS FIRST, (((rt1.c3 IN (rt1.c6))) IS FALSE) ASC;
SELECT MIN(t0.c3) FROM t0 WHERE (CAST(((t0.c4)IS NOT(t0.c0)) AS BLOB));
SELECT DISTINCT MIN(t0.c3) FROM t0 WHERE (CAST(((t0.c4)IS NOT(t0.c0)) AS BLOB)) ORDER BY CASE WHEN t0.c4 COLLATE RTRIM THEN ((t0.c0)|(t0.c3)) WHEN ((t0.c1) BETWEEN (t0.c3) AND (t0.c2)) THEN (t0.c4 IN (t0.c3)) WHEN ((t0.c0) IS TRUE) THEN ((((x'2f')OR(t0.c0)))OR(t0.c1)) WHEN x'11' THEN ((t0.c3)|(t0.c2)) WHEN ((((((((((((t0.c2)AND(t0.c4)))AND(t0.c4)))AND(NULL)))AND(t0.c0)))AND(t0.c3)))OR(t0.c1)) THEN ((((((((((t0.c2)AND(t0.c4)))AND(t0.c1)))AND(t0.c1)))OR(t0.c4)))AND(t0.c2)) ELSE t0.c4 END  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t0.c3) FROM t0 WHERE (((t0.c2)GLOB(ABS('')))) ORDER BY CASE WHEN t0.c4 COLLATE RTRIM THEN ((t0.c0)|(t0.c3)) WHEN ((t0.c1) BETWEEN (t0.c3) AND (t0.c2)) THEN (t0.c4 IN (t0.c3)) WHEN ((t0.c0) IS TRUE) THEN ((((x'2f')OR(t0.c0)))OR(t0.c1)) WHEN x'11' THEN ((t0.c3)|(t0.c2)) WHEN ((((((((((((t0.c2)AND(t0.c4)))AND(t0.c4)))AND(NULL)))AND(t0.c0)))AND(t0.c3)))OR(t0.c1)) THEN ((((((((((t0.c2)AND(t0.c4)))AND(t0.c1)))AND(t0.c1)))OR(t0.c4)))AND(t0.c2)) ELSE t0.c4 END  NULLS FIRST;
SELECT ALL MAX(rt1.c5) FROM rt1 LEFT OUTER JOIN t0 ON CASE WHEN ((rt1.c0)-(rt1.c2)) THEN rt1.c0 COLLATE RTRIM WHEN 0.1874527471641806 THEN CAST(t0.c0 AS NUMERIC) END WHERE (((((((((((rt1.c6)AND((rt1.c1 IN (t0.c1)))))AND(CASE WHEN t0.c2 THEN rt1.c2 WHEN t0.c1 THEN t0.c0 WHEN rt1.c4 THEN x'9f' WHEN t0.c1 THEN rt1.c4 ELSE NULL END)))OR(TRIM(rt1.c6))))AND(((rt1.c2) IS TRUE))))OR(CASE rt1.c1  WHEN t0.c2 THEN NULL WHEN rt1.c2 THEN rt1.c1 WHEN t0.c2 THEN t0.c1 ELSE NULL END))) ORDER BY (NULL IN (CAST(rt1.c1 AS TEXT)));
SELECT ALL MAX(rt1.c5) FROM rt1 INNER JOIN t0 ON CASE WHEN ((rt1.c0)-(rt1.c2)) THEN rt1.c0 COLLATE RTRIM WHEN 0.1874527471641806 THEN CAST(t0.c0 AS NUMERIC) END WHERE (((((((((((((rt1.c6)AND((rt1.c1 IN (t0.c1)))))AND(CASE WHEN t0.c2 THEN rt1.c2 WHEN t0.c1 THEN t0.c0 WHEN rt1.c4 THEN x'9f' WHEN t0.c1 THEN rt1.c4 ELSE NULL END)))OR(TRIM(rt1.c6))))AND(((rt1.c2) IS TRUE))))OR(CASE rt1.c1  WHEN t0.c2 THEN NULL WHEN rt1.c2 THEN rt1.c1 WHEN t0.c2 THEN t0.c1 ELSE NULL END)))AND(TYPEOF(DISTINCT rt1.c2)))) ORDER BY (- (((rt1.c1)IS(rt1.c6)))) DESC, CAST(t0.c3 AS NUMERIC)  NULLS LAST INTERSECT SELECT MAX(rt1.c5) FROM rt1 INNER JOIN t0 ON CASE WHEN ((rt1.c0)-(rt1.c2)) THEN rt1.c0 COLLATE RTRIM WHEN 0.1874527471641806 THEN CAST(t0.c0 AS NUMERIC) END WHERE ((((t0.c4 IN (rt1.c0, t0.c3))) BETWEEN ((+ (t0.c2))) AND (((x'') NOT NULL)))) ORDER BY (- (((rt1.c1)IS(rt1.c6)))) DESC, CAST(t0.c3 AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON (NOT ((((rt1.c5))>((rt1.c6))))) WHERE (rt1.c0);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON (NOT ((((rt1.c5))>((rt1.c6))))) WHERE (rt1.c0) LIMIT 1 INTERSECT SELECT ALL * FROM t0 CROSS JOIN rt1 ON (NOT ((((rt1.c5))>((rt1.c6))))) WHERE ((((((t0.c4)OR(t0.c0)))OR(t0.c1)) IN ((rt1.c6 IN (0.8874109814018716, NULL, rt1.c3)), (- (rt1.c3))))) LIMIT 1;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON (NOT ((((rt1.c5))>((rt1.c6))))) WHERE (rt1.c0);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON (NOT ((((rt1.c5))>((rt1.c6))))) WHERE (rt1.c0) LIMIT 1 INTERSECT SELECT ALL * FROM t0 CROSS JOIN rt1 ON (NOT ((((rt1.c5))>((rt1.c6))))) WHERE ((((((t0.c4)OR(t0.c0)))OR(t0.c1)) IN ((rt1.c6 IN (0.8874109814018716, NULL, rt1.c3)), (- (rt1.c3))))) LIMIT 1;
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE (rt1.c1) ORDER BY LIKELY(((rt1.c2) ISNULL)) DESC;
SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE (((rt1.c1)AND((rt1.c2 IN (rt1.c4))))) ORDER BY LIKELY(((rt1.c2) ISNULL)) DESC LIMIT 1;
SELECT * FROM rt1 WHERE (CASE ((rt1.c6)*(rt1.c4))  WHEN CASE 0X1309c222  WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c0 WHEN 0Xffffffffa8cb1be5 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c2 END THEN ((rt1.c0) NOT BETWEEN (0.6573412995554764) AND (rt1.c6)) END);
SELECT * FROM rt1 WHERE (CASE ((rt1.c6)*(rt1.c4))  WHEN CASE 319406626  WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c0 WHEN -1463084059 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c2 END THEN ((rt1.c0) NOT BETWEEN (0.6573412995554764) AND (rt1.c6)) END) LIMIT 0X0 INTERSECT SELECT ALL * FROM rt1 WHERE (((((((((rt1.c0) NOT NULL))OR(rt1.c5)))OR(CASE WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c0 END)))OR(CAST('M(z' AS BLOB)))) LIMIT 0;
SELECT * FROM rt1 WHERE (CASE ((rt1.c6)*(rt1.c4))  WHEN CASE 0X1309c222  WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c0 WHEN 0Xffffffffa8cb1be5 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c2 END THEN ((rt1.c0) NOT BETWEEN (0.6573412995554764) AND (rt1.c6)) END);
SELECT * FROM rt1 WHERE (CASE ((rt1.c6)*(rt1.c4))  WHEN CASE 319406626  WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c0 WHEN -1463084059 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c2 END THEN ((rt1.c0) NOT BETWEEN (0.6573412995554764) AND (rt1.c6)) END) LIMIT 0X0 INTERSECT SELECT ALL * FROM rt1 WHERE (((((((((rt1.c0) NOT NULL))OR(rt1.c5)))OR(CASE WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c0 END)))OR(CAST('M(z' AS BLOB)))) LIMIT 0;
SELECT MIN(rt1.c3) FROM rt1 WHERE (rt1.c6);
SELECT MIN(rt1.c3) FROM rt1 WHERE (((rt1.c6)AND(CAST(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c5 END AS BLOB)))) ORDER BY (((((rt1.c4)) BETWEEN ((rt1.c5)) AND ((rt1.c1))))>(((rt1.c6) IS FALSE))), CAST(CASE 0.40761184533420913  WHEN rt1.c3 THEN rt1.c6 END AS BLOB) ASC  NULLS LAST, (((((((rt1.c3, rt1.c4))>=((rt1.c4, rt1.c2))))OR((rt1.c5 IN ()))))AND(CASE rt1.c5  WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c3 END)) DESC, CAST(rt1.c6 AS REAL) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM)>((+ (rt1.c6))))) ORDER BY ((((((rt1.c1)AND(rt1.c5)))OR((((rt1.c1, rt1.c5))!=((rt1.c3, rt1.c1))))))AND(((((((((((((((((rt1.c1)OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c6)))OR(rt1.c4)))AND(rt1.c0)))OR(x'e54fbb')))OR(rt1.c3)))OR(rt1.c1)))) ASC, ((((rt1.c0)+(rt1.c1)))<=(SQLITE_SOURCE_ID()));
SELECT * FROM rt1 WHERE (((((rt1.c1 COLLATE RTRIM)>((+ (rt1.c6)))))AND(((((((rt1.c4)OR(rt1.c6)))OR(rt1.c2))) BETWEEN (rt1.c3 COLLATE RTRIM) AND (((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c5))))))) ORDER BY CAST(rt1.c1 AS TEXT) INTERSECT SELECT ALL * FROM rt1 WHERE (x'') ORDER BY CAST(rt1.c1 AS TEXT);
SELECT * FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM)>((+ (rt1.c6))))) ORDER BY ((((((rt1.c1)AND(rt1.c5)))OR((((rt1.c1, rt1.c5))!=((rt1.c3, rt1.c1))))))AND(((((((((((((((((rt1.c1)OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c6)))OR(rt1.c4)))AND(rt1.c0)))OR(x'e54fbb')))OR(rt1.c3)))OR(rt1.c1)))) ASC, ((((rt1.c0)+(rt1.c1)))<=(SQLITE_SOURCE_ID()));
SELECT * FROM rt1 WHERE (((((rt1.c1 COLLATE RTRIM)>((+ (rt1.c6)))))AND(((((((rt1.c4)OR(rt1.c6)))OR(rt1.c2))) BETWEEN (rt1.c3 COLLATE RTRIM) AND (((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c5))))))) ORDER BY CAST(rt1.c1 AS TEXT) INTERSECT SELECT ALL * FROM rt1 WHERE (x'') ORDER BY CAST(rt1.c1 AS TEXT);
SELECT ALL MAX(rt1.c3) FROM t0 CROSS JOIN rt1 ON ((((((((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))AND(t0.c4)))AND(t0.c3)))AND(CASE t0.c3  WHEN t0.c1 THEN t0.c0 ELSE rt1.c6 END)))OR((t0.c4 IN ()))))OR(((t0.c2) ISNULL))) WHERE (((((rt1.c3) IS FALSE))+(')MF얮E'))) ORDER BY ((TRIM(rt1.c2)) NOT NULL), ((((t0.c0) BETWEEN (x'4de6') AND (t0.c0))) NOTNULL) DESC, ((((x'')AND(((t0.c1) NOTNULL))))OR((((t0.c3, t0.c0))!=((rt1.c4, rt1.c1)))));
SELECT ALL MAX(rt1.c3) FROM t0 CROSS JOIN rt1 ON ((((((((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))AND(t0.c4)))AND(t0.c3)))AND(CASE t0.c3  WHEN t0.c1 THEN t0.c0 ELSE rt1.c6 END)))OR((t0.c4 IN ()))))OR(((t0.c2) ISNULL))) WHERE (((((((rt1.c3) IS FALSE))+(')MF얮E')))AND(NULL))) ORDER BY ((TRIM(rt1.c2)) NOT NULL), ((((t0.c0) BETWEEN (x'4de6') AND (t0.c0))) NOTNULL) DESC, ((((x'')AND(((t0.c1) NOTNULL))))OR((((t0.c3, t0.c0))!=((rt1.c4, rt1.c1))))) LIMIT 0x0 INTERSECT SELECT ALL MAX(rt1.c3) FROM t0 CROSS JOIN rt1 ON ((((((((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))AND(t0.c4)))AND(t0.c3)))AND(CASE t0.c3  WHEN t0.c1 THEN t0.c0 ELSE rt1.c6 END)))OR((t0.c4 IN ()))))OR(((t0.c2) ISNULL))) WHERE (0.6710869541456611) ORDER BY ((TRIM(rt1.c2)) NOT NULL), ((((t0.c0) BETWEEN (x'4de6') AND (t0.c0))) NOTNULL) DESC, ((((x'')AND(((t0.c1) NOTNULL))))OR((((t0.c3, t0.c0))!=((rt1.c4, rt1.c1))))) LIMIT 0X0;
SELECT * FROM t0 WHERE (((((((((t0.c3)||(t0.c0)))AND((((((('H2<ਙ_h')OR(t0.c4)))OR(t0.c2)))OR(t0.c1)))))AND(((t0.c3)%(t0.c1)))))AND((t0.c0 IN ('-795343910', t0.c1))))) ORDER BY CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c3)) AS BLOB) ASC  NULLS LAST, (NOT (((t0.c4)OR(t0.c2))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c3)||(t0.c0)))AND((((((('H2<ਙ_h')OR(t0.c4)))OR(t0.c2)))OR(t0.c1)))))AND(((t0.c3)%(t0.c1)))))AND((t0.c0 IN ('-795343910', t0.c1))))) ORDER BY (((- (t0.c1)))AND(x'')) DESC, TOTAL_CHANGES() LIMIT 0x1;
SELECT * FROM t0 WHERE (((((((((t0.c3)||(t0.c0)))AND((((((('H2<ਙ_h')OR(t0.c4)))OR(t0.c2)))OR(t0.c1)))))AND(((t0.c3)%(t0.c1)))))AND((t0.c0 IN ('-795343910', t0.c1))))) ORDER BY CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c3)) AS BLOB) ASC  NULLS LAST, (NOT (((t0.c4)OR(t0.c2))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c3)||(t0.c0)))AND((((((('H2<ਙ_h')OR(t0.c4)))OR(t0.c2)))OR(t0.c1)))))AND(((t0.c3)%(t0.c1)))))AND((t0.c0 IN ('-795343910', t0.c1))))) ORDER BY (((- (t0.c1)))AND(x'')) DESC, TOTAL_CHANGES() LIMIT 0x1;
SELECT MIN(t0.c0) FROM rt1 CROSS JOIN t0 ON (CASE WHEN t0.c1 THEN rt1.c6 ELSE t0.c1 END IN (LIKELIHOOD(t0.c4, rt1.c2))) WHERE (GLOB(((((((((t0.c3)AND(rt1.c1)))OR(t0.c2)))OR(rt1.c3)))OR(rt1.c0)), (((rt1.c4, t0.c4, rt1.c4)) NOT BETWEEN ((t0.c3, rt1.c4, rt1.c2)) AND ((x'c259', t0.c0, x'')))));
SELECT DISTINCT MIN(t0.c0) FROM rt1 CROSS JOIN t0 ON (CASE WHEN t0.c1 THEN rt1.c6 ELSE t0.c1 END IN (LIKELIHOOD(t0.c4, rt1.c2))) WHERE (((GLOB(((((((((t0.c3)AND(rt1.c1)))OR(t0.c2)))OR(rt1.c3)))OR(rt1.c0)), (((rt1.c4, t0.c4, rt1.c4)) NOT BETWEEN ((t0.c3, rt1.c4, rt1.c2)) AND ((x'c259', t0.c0, x'')))))AND(CASE WHEN ((t0.c3) IS TRUE) THEN t0.c4 COLLATE RTRIM END))) ORDER BY ((t0.c3 COLLATE RTRIM) BETWEEN (((rt1.c6) NOT NULL)) AND (((rt1.c3)*(rt1.c4)))) DESC, ((CAST(t0.c4 AS NUMERIC))IS(((8.8411032E7) IS FALSE))), ((CAST(rt1.c1 AS TEXT)) NOT NULL) DESC LIMIT 1;
SELECT ALL MAX(rt1.c2) FROM rt1 WHERE ((((COALESCE(rt1.c1, rt1.c6, rt1.c1, 'ZIEĶ<'), ((rt1.c3) IS TRUE), CASE WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c6 END, ((rt1.c5) BETWEEN ('-1936119708') AND (rt1.c4))))>(((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))), rt1.c3, (((rt1.c6, rt1.c3, rt1.c1))<((rt1.c6, rt1.c0, '몵'))), (((NULL, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c5)) AND ((rt1.c1, rt1.c3))))))) ORDER BY ((HEX(DISTINCT 'B<'))>=((+ (rt1.c1))))  NULLS FIRST, ((((((rt1.c5)OR(rt1.c4 COLLATE BINARY)))AND(((rt1.c6) IS TRUE))))OR(rt1.c6 COLLATE NOCASE)), CAST(LIKELY(rt1.c0) AS REAL) ASC;
SELECT DISTINCT MAX(rt1.c2) FROM rt1 WHERE ((((((COALESCE(rt1.c1, rt1.c6, rt1.c1, 'ZIEĶ<'), ((rt1.c3) IS TRUE), CASE WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c6 END, ((rt1.c5) BETWEEN ('-1936119708') AND (rt1.c4))))>(((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))), rt1.c3, (((rt1.c6, rt1.c3, rt1.c1))<((rt1.c6, rt1.c0, '몵'))), (((NULL, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c5)) AND ((rt1.c1, rt1.c3)))))))AND((((rt1.c5)*(rt1.c6)) IN ())))) ORDER BY rt1.c4 ASC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt1.c2) FROM rt1 WHERE (((CAST(rt1.c1 AS INTEGER)) BETWEEN (CASE rt1.c2  WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c1 END) AND (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 END))) ORDER BY rt1.c4 ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt1 WHERE ((NOT (CAST(rt1.c6 AS NUMERIC)))) ORDER BY (((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)) IN (((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c2)))) ASC, rt1.c1 ASC;
SELECT DISTINCT * FROM rt1 WHERE ((((NOT (CAST(rt1.c6 AS NUMERIC))))AND((((rt1.c2, rt1.c1)) NOT BETWEEN (((((rt1.c4, rt1.c6, rt1.c1, rt1.c5)) NOT BETWEEN (('0.08182845140269956', rt1.c1, rt1.c2, rt1.c4)) AND ((rt1.c2, rt1.c4, rt1.c1, rt1.c0))), ((NULL)<>(rt1.c4)))) AND ((((rt1.c5)<<(rt1.c1)), ((((((((((((((rt1.c3)OR('338236468')))AND(rt1.c1)))OR(rt1.c3)))AND(rt1.c6)))OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c0)))))))) ORDER BY ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c6))) NOT NULL), ((rt1.c1 COLLATE RTRIM)AND((((rt1.c6, rt1.c4))<=((rt1.c2, rt1.c2))))) DESC  NULLS LAST, (- (((rt1.c5) NOT NULL))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (LIKELIHOOD(CAST(rt1.c4 AS BLOB), rt1.c0 COLLATE RTRIM)) ORDER BY ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c6))) NOT NULL), ((rt1.c1 COLLATE RTRIM)AND((((rt1.c6, rt1.c4))<=((rt1.c2, rt1.c2))))) DESC  NULLS LAST, (- (((rt1.c5) NOT NULL))) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((NOT (CAST(rt1.c6 AS NUMERIC)))) ORDER BY (((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)) IN (((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c2)))) ASC, rt1.c1 ASC;
SELECT DISTINCT * FROM rt1 WHERE ((((NOT (CAST(rt1.c6 AS NUMERIC))))AND((((rt1.c2, rt1.c1)) NOT BETWEEN (((((rt1.c4, rt1.c6, rt1.c1, rt1.c5)) NOT BETWEEN (('0.08182845140269956', rt1.c1, rt1.c2, rt1.c4)) AND ((rt1.c2, rt1.c4, rt1.c1, rt1.c0))), ((NULL)<>(rt1.c4)))) AND ((((rt1.c5)<<(rt1.c1)), ((((((((((((((rt1.c3)OR('338236468')))AND(rt1.c1)))OR(rt1.c3)))AND(rt1.c6)))OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c0)))))))) ORDER BY ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c6))) NOT NULL), ((rt1.c1 COLLATE RTRIM)AND((((rt1.c6, rt1.c4))<=((rt1.c2, rt1.c2))))) DESC  NULLS LAST, (- (((rt1.c5) NOT NULL))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (LIKELIHOOD(CAST(rt1.c4 AS BLOB), rt1.c0 COLLATE RTRIM)) ORDER BY ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c6))) NOT NULL), ((rt1.c1 COLLATE RTRIM)AND((((rt1.c6, rt1.c4))<=((rt1.c2, rt1.c2))))) DESC  NULLS LAST, (- (((rt1.c5) NOT NULL))) ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (CAST(((rt1.c5)<=(0.25105212223955553)) AS NUMERIC)) ORDER BY (((rt1.c3)>=(rt1.c1)) IN ((((rt1.c5, rt1.c3, rt1.c6)) NOT BETWEEN ((rt1.c4, rt1.c3, rt1.c5)) AND ((rt1.c5, rt1.c3, rt1.c4))))) ASC  NULLS FIRST, ((((rt1.c3) IS TRUE))IS NOT((((rt1.c2))<=((rt1.c4)))))  NULLS LAST;
SELECT * FROM rt1 WHERE (CAST(((rt1.c5)<=(0.25105212223955553)) AS NUMERIC)) ORDER BY (((((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c6))))AND(((rt1.c0) ISNULL)))  NULLS LAST, UNLIKELY(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c5))) ASC  NULLS LAST INTERSECT SELECT * FROM rt1 WHERE (CASE WHEN -1666556278 COLLATE BINARY THEN ((rt1.c1)>(rt1.c0)) ELSE (NOT (rt1.c3)) END) ORDER BY (((((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c6))))AND(((rt1.c0) ISNULL)))  NULLS LAST, UNLIKELY(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c5))) ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (CAST(((rt1.c5)<=(0.25105212223955553)) AS NUMERIC)) ORDER BY (((rt1.c3)>=(rt1.c1)) IN ((((rt1.c5, rt1.c3, rt1.c6)) NOT BETWEEN ((rt1.c4, rt1.c3, rt1.c5)) AND ((rt1.c5, rt1.c3, rt1.c4))))) ASC  NULLS FIRST, ((((rt1.c3) IS TRUE))IS NOT((((rt1.c2))<=((rt1.c4)))))  NULLS LAST;
SELECT * FROM rt1 WHERE (CAST(((rt1.c5)<=(0.25105212223955553)) AS NUMERIC)) ORDER BY (((((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c6))))AND(((rt1.c0) ISNULL)))  NULLS LAST, UNLIKELY(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c5))) ASC  NULLS LAST INTERSECT SELECT * FROM rt1 WHERE (CASE WHEN -1666556278 COLLATE BINARY THEN ((rt1.c1)>(rt1.c0)) ELSE (NOT (rt1.c3)) END) ORDER BY (((((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c6))))AND(((rt1.c0) ISNULL)))  NULLS LAST, UNLIKELY(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c5))) ASC  NULLS LAST;
SELECT MIN(t0.c3) FROM rt1, t0 WHERE (((LIKELIHOOD(rt1.c4, rt1.c5))=(t0.c3 COLLATE NOCASE)));
SELECT MIN(t0.c3) FROM rt1, t0 WHERE (((LIKELIHOOD(rt1.c4, rt1.c5))=(t0.c3 COLLATE NOCASE))) ORDER BY (- (((NULL) NOT NULL))) ASC  NULLS FIRST, CAST(((rt1.c6)<=(t0.c4)) AS TEXT) LIMIT 0X5;
SELECT ALL MAX(t0.c3) FROM t0, rt1 WHERE (t0.c1 COLLATE RTRIM);
SELECT DISTINCT MAX(t0.c3) FROM t0, rt1 WHERE (((t0.c1 COLLATE RTRIM)AND(((((rt1.c6)AND(rt1.c2))) NOTNULL)))) LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c1, t0.c4)) NOT BETWEEN ((CASE rt1.c1  WHEN rt1.c1 THEN t0.c1 ELSE t0.c0 END, t0.c0 COLLATE RTRIM)) AND ((HEX(t0.c1), ((t0.c1) IS FALSE)))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((t0.c1, t0.c4)) NOT BETWEEN ((CASE rt1.c1  WHEN rt1.c1 THEN t0.c1 ELSE t0.c0 END, t0.c0 COLLATE RTRIM)) AND ((HEX(t0.c1), ((t0.c1) IS FALSE))))) LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c1, t0.c4)) NOT BETWEEN ((CASE rt1.c1  WHEN rt1.c1 THEN t0.c1 ELSE t0.c0 END, t0.c0 COLLATE RTRIM)) AND ((HEX(t0.c1), ((t0.c1) IS FALSE)))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((t0.c1, t0.c4)) NOT BETWEEN ((CASE rt1.c1  WHEN rt1.c1 THEN t0.c1 ELSE t0.c0 END, t0.c0 COLLATE RTRIM)) AND ((HEX(t0.c1), ((t0.c1) IS FALSE))))) LIMIT 1;
SELECT * FROM t0 WHERE (CASE (NOT (t0.c1))  WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c2)AND(t0.c0)) WHEN (((t0.c4, t0.c1, t0.c2))>=((t0.c2, x'8b968e', t0.c1))) THEN ((((((t0.c1)AND(t0.c4)))AND(t0.c0)))OR(t0.c1)) WHEN ((t0.c3)&(t0.c4)) THEN (NOT (t0.c2)) WHEN (- (t0.c4)) THEN QUOTE(t0.c2) ELSE ((t0.c4) IS FALSE) END);
SELECT DISTINCT * FROM t0 WHERE (((CASE (NOT (t0.c1))  WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c2)AND(t0.c0)) WHEN (((t0.c4, t0.c1, t0.c2))>((t0.c2, x'8b968e', t0.c1))) THEN ((((((t0.c1)AND(t0.c4)))AND(t0.c0)))OR(t0.c1)) WHEN ((t0.c3)&(t0.c4)) THEN (NOT (t0.c2)) WHEN (- (t0.c4)) THEN QUOTE(t0.c2) ELSE ((t0.c4) IS FALSE) END)AND(TYPEOF((((t0.c4, t0.c1, t0.c1, t0.c3)) NOT BETWEEN ((t0.c1, NULL, t0.c1, 0.7020918382079648)) AND ((t0.c1, t0.c2, t0.c0, t0.c4)))))));
SELECT * FROM t0 WHERE (CASE (NOT (t0.c1))  WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c2)AND(t0.c0)) WHEN (((t0.c4, t0.c1, t0.c2))>=((t0.c2, x'8b968e', t0.c1))) THEN ((((((t0.c1)AND(t0.c4)))AND(t0.c0)))OR(t0.c1)) WHEN ((t0.c3)&(t0.c4)) THEN (NOT (t0.c2)) WHEN (- (t0.c4)) THEN QUOTE(t0.c2) ELSE ((t0.c4) IS FALSE) END);
SELECT DISTINCT * FROM t0 WHERE (((CASE (NOT (t0.c1))  WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c2)AND(t0.c0)) WHEN (((t0.c4, t0.c1, t0.c2))>((t0.c2, x'8b968e', t0.c1))) THEN ((((((t0.c1)AND(t0.c4)))AND(t0.c0)))OR(t0.c1)) WHEN ((t0.c3)&(t0.c4)) THEN (NOT (t0.c2)) WHEN (- (t0.c4)) THEN QUOTE(t0.c2) ELSE ((t0.c4) IS FALSE) END)AND(TYPEOF((((t0.c4, t0.c1, t0.c1, t0.c3)) NOT BETWEEN ((t0.c1, NULL, t0.c1, 0.7020918382079648)) AND ((t0.c1, t0.c2, t0.c0, t0.c4)))))));
SELECT ALL MIN(rt1.c6) FROM t0, rt1 WHERE (((((+ ('Jnu鴨'))))>((((t0.c1) ISNULL)))));
SELECT DISTINCT MIN(rt1.c6) FROM t0, rt1 WHERE (((((((+ ('Jnu鴨'))))>((((t0.c1) ISNULL)))))AND(((rt1.c6)GLOB(rt1.c6)) COLLATE NOCASE COLLATE RTRIM)));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((x'8f')IS(rt1.c5)));
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (((((x'8f')IS(rt1.c5)))AND(CASE WHEN ((t0.c1) ISNULL) THEN (rt1.c2 IN (rt1.c6)) WHEN NULL THEN IFNULL(rt1.c0, rt1.c3) END))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (((((t0.c0)IS(rt1.c6))) NOT BETWEEN ('-1171044878') AND (CASE rt1.c3  WHEN rt1.c1 THEN '316084405' WHEN x'' THEN rt1.c0 WHEN t0.c3 THEN rt1.c5 END))) LIMIT 0X0;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((x'8f')IS(rt1.c5)));
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (((((x'8f')IS(rt1.c5)))AND(CASE WHEN ((t0.c1) ISNULL) THEN (rt1.c2 IN (rt1.c6)) WHEN NULL THEN IFNULL(rt1.c0, rt1.c3) END))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (((((t0.c0)IS(rt1.c6))) NOT BETWEEN ('-1171044878') AND (CASE rt1.c3  WHEN rt1.c1 THEN '316084405' WHEN x'' THEN rt1.c0 WHEN t0.c3 THEN rt1.c5 END))) LIMIT 0X0;
SELECT MAX(rt1.c1) FROM t0, rt1 WHERE (TOTAL_CHANGES());
SELECT MAX(rt1.c1) FROM t0, rt1 WHERE (TOTAL_CHANGES()) INTERSECT SELECT MAX(rt1.c1) FROM t0, rt1 WHERE ((((rt1.c2, rt1.c3)) NOT BETWEEN (((((rt1.c6, rt1.c1, rt1.c6))==((rt1.c4, t0.c1, t0.c4))), rt1.c4)) AND ((((((((((t0.c0)OR('s''udBnH9䑂')))AND(rt1.c5)))OR(t0.c0)))AND('-904110918')), '591531326'))));
SELECT ALL * FROM t0 WHERE ((+ (t0.c3)) COLLATE BINARY) ORDER BY CASE x'98ba9006'  WHEN (+ (NULL)) THEN (((t0.c4, t0.c0))<>((t0.c1, t0.c2))) WHEN (t0.c3 IN ()) THEN (((t0.c1, t0.c3, t0.c0, t0.c1, t0.c2, t0.c3)) NOT BETWEEN ((NULL, t0.c0, t0.c2, '731213607', t0.c4, t0.c1)) AND ((t0.c1, t0.c0, t0.c4, t0.c0, x'06d5c5f0', t0.c1))) WHEN ((t0.c2)GLOB(t0.c2)) THEN (t0.c2 IN ()) ELSE t0.c4 END, CAST(t0.c3 AS TEXT) COLLATE BINARY DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((+ (t0.c3)) COLLATE BINARY) ORDER BY CASE x'98ba9006'  WHEN (+ (NULL)) THEN (((t0.c4, t0.c0))!=((t0.c1, t0.c2))) WHEN (t0.c3 IN ()) THEN (((t0.c1, t0.c3, t0.c0, t0.c1, t0.c2, t0.c3)) NOT BETWEEN ((NULL, t0.c0, t0.c2, '731213607', t0.c4, t0.c1)) AND ((t0.c1, t0.c0, t0.c4, t0.c0, x'06d5c5f0', t0.c1))) WHEN ((t0.c2)GLOB(t0.c2)) THEN (t0.c2 IN ()) ELSE t0.c4 END, CAST(t0.c3 AS TEXT) COLLATE BINARY DESC  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((~ (((((((t0.c3)AND(t0.c1)))AND(t0.c1)))AND(t0.c2))))) ORDER BY CASE x'98ba9006'  WHEN (+ (NULL)) THEN (((t0.c4, t0.c0))!=((t0.c1, t0.c2))) WHEN (t0.c3 IN ()) THEN (((t0.c1, t0.c3, t0.c0, t0.c1, t0.c2, t0.c3)) NOT BETWEEN ((NULL, t0.c0, t0.c2, '731213607', t0.c4, t0.c1)) AND ((t0.c1, t0.c0, t0.c4, t0.c0, x'06d5c5f0', t0.c1))) WHEN ((t0.c2)GLOB(t0.c2)) THEN (t0.c2 IN ()) ELSE t0.c4 END, CAST(t0.c3 AS TEXT) COLLATE BINARY DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 WHERE ((+ (t0.c3)) COLLATE BINARY) ORDER BY CASE x'98ba9006'  WHEN (+ (NULL)) THEN (((t0.c4, t0.c0))<>((t0.c1, t0.c2))) WHEN (t0.c3 IN ()) THEN (((t0.c1, t0.c3, t0.c0, t0.c1, t0.c2, t0.c3)) NOT BETWEEN ((NULL, t0.c0, t0.c2, '731213607', t0.c4, t0.c1)) AND ((t0.c1, t0.c0, t0.c4, t0.c0, x'06d5c5f0', t0.c1))) WHEN ((t0.c2)GLOB(t0.c2)) THEN (t0.c2 IN ()) ELSE t0.c4 END, CAST(t0.c3 AS TEXT) COLLATE BINARY DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((+ (t0.c3)) COLLATE BINARY) ORDER BY CASE x'98ba9006'  WHEN (+ (NULL)) THEN (((t0.c4, t0.c0))!=((t0.c1, t0.c2))) WHEN (t0.c3 IN ()) THEN (((t0.c1, t0.c3, t0.c0, t0.c1, t0.c2, t0.c3)) NOT BETWEEN ((NULL, t0.c0, t0.c2, '731213607', t0.c4, t0.c1)) AND ((t0.c1, t0.c0, t0.c4, t0.c0, x'06d5c5f0', t0.c1))) WHEN ((t0.c2)GLOB(t0.c2)) THEN (t0.c2 IN ()) ELSE t0.c4 END, CAST(t0.c3 AS TEXT) COLLATE BINARY DESC  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((~ (((((((t0.c3)AND(t0.c1)))AND(t0.c1)))AND(t0.c2))))) ORDER BY CASE x'98ba9006'  WHEN (+ (NULL)) THEN (((t0.c4, t0.c0))!=((t0.c1, t0.c2))) WHEN (t0.c3 IN ()) THEN (((t0.c1, t0.c3, t0.c0, t0.c1, t0.c2, t0.c3)) NOT BETWEEN ((NULL, t0.c0, t0.c2, '731213607', t0.c4, t0.c1)) AND ((t0.c1, t0.c0, t0.c4, t0.c0, x'06d5c5f0', t0.c1))) WHEN ((t0.c2)GLOB(t0.c2)) THEN (t0.c2 IN ()) ELSE t0.c4 END, CAST(t0.c3 AS TEXT) COLLATE BINARY DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c0) ISNULL))=(((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT ALL * FROM rt1, t0 WHERE (((((((t0.c0) ISNULL))=(((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(rt1.c3))) LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c0) ISNULL))=(((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT ALL * FROM rt1, t0 WHERE (((((((t0.c0) ISNULL))=(((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(rt1.c3))) LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c2 COLLATE BINARY) NOT BETWEEN (((((((((rt1.c0)OR(t0.c1)))AND('龂뿉')))AND(0x49da5b3f)))AND(rt1.c4))) AND (CAST(rt1.c5 AS NUMERIC))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c2 COLLATE BINARY) NOT BETWEEN (((((((((rt1.c0)OR(t0.c1)))AND('龂뿉')))AND(0X49da5b3f)))AND(rt1.c4))) AND (CAST(rt1.c5 AS NUMERIC))))AND((NOT (CAST(t0.c4 AS REAL)))))) LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c2 COLLATE BINARY) NOT BETWEEN (((((((((rt1.c0)OR(t0.c1)))AND('龂뿉')))AND(0x49da5b3f)))AND(rt1.c4))) AND (CAST(rt1.c5 AS NUMERIC))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c2 COLLATE BINARY) NOT BETWEEN (((((((((rt1.c0)OR(t0.c1)))AND('龂뿉')))AND(0X49da5b3f)))AND(rt1.c4))) AND (CAST(rt1.c5 AS NUMERIC))))AND((NOT (CAST(t0.c4 AS REAL)))))) LIMIT 1;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE t0.c2 COLLATE BINARY  WHEN ((((((((t0.c3)AND(t0.c1)))AND(t0.c0)))OR(t0.c1)))OR(t0.c0)) THEN (NOT (t0.c3)) WHEN (t0.c3 IN (t0.c4, t0.c3)) THEN CAST(t0.c2 AS INTEGER) ELSE (- (t0.c0)) END) ORDER BY CAST(t0.c4 COLLATE RTRIM AS TEXT), (((t0.c4)) NOT BETWEEN (((t0.c0 IN (t0.c1)))) AND (('p,D	[F-u?')));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CASE t0.c2 COLLATE BINARY  WHEN ((((((((t0.c3)AND(t0.c1)))AND(t0.c0)))OR(t0.c1)))OR(t0.c0)) THEN (NOT (t0.c3)) WHEN (t0.c3 IN (t0.c4, t0.c3)) THEN CAST(t0.c2 AS INTEGER) ELSE (- (t0.c0)) END) ORDER BY CAST(t0.c4 COLLATE RTRIM AS TEXT), (((t0.c4)) NOT BETWEEN (((t0.c0 IN (t0.c1)))) AND (('p,D	[F-u?'))) LIMIT 1;
SELECT * FROM t0 WHERE (CASE WHEN ((0xffffffffeed4ddfc) BETWEEN (t0.c3) AND (t0.c2)) THEN t0.c1 COLLATE BINARY WHEN '⋎F
H
' THEN CAST(t0.c4 AS BLOB) WHEN t0.c1 COLLATE RTRIM THEN ((t0.c3) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c3 COLLATE BINARY THEN ((t0.c4)IS NOT(0.08999248573174479)) ELSE t0.c0 END) ORDER BY CAST((t0.c1 IN (t0.c3)) AS TEXT)  NULLS FIRST, 1360256088;
SELECT * FROM t0 WHERE (CASE WHEN ((-288039428) BETWEEN (t0.c3) AND (t0.c2)) THEN t0.c1 COLLATE BINARY WHEN '⋎F
H
' THEN CAST(t0.c4 AS BLOB) WHEN t0.c1 COLLATE RTRIM THEN ((t0.c3) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c3 COLLATE BINARY THEN ((t0.c4)IS NOT(0.08999248573174479)) ELSE t0.c0 END) ORDER BY t0.c1 DESC, ((((t0.c1)==(t0.c2)))&(((t0.c4) BETWEEN (0.4283526595447874) AND (t0.c4)))) DESC  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM t0 WHERE ((((- (t0.c0))) ISNULL)) ORDER BY t0.c1 DESC, ((((t0.c1)=(t0.c2)))&(((t0.c4) BETWEEN (0.4283526595447874) AND (t0.c4)))) DESC  NULLS LAST LIMIT 2;
SELECT * FROM t0 WHERE (CASE WHEN ((0xffffffffeed4ddfc) BETWEEN (t0.c3) AND (t0.c2)) THEN t0.c1 COLLATE BINARY WHEN '⋎F
H
' THEN CAST(t0.c4 AS BLOB) WHEN t0.c1 COLLATE RTRIM THEN ((t0.c3) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c3 COLLATE BINARY THEN ((t0.c4)IS NOT(0.08999248573174479)) ELSE t0.c0 END) ORDER BY CAST((t0.c1 IN (t0.c3)) AS TEXT)  NULLS FIRST, 1360256088;
SELECT * FROM t0, rt1 WHERE ((((NULL IN (t0.c0))) IS FALSE)) ORDER BY TYPEOF(DISTINCT ((NULL)&(t0.c2))) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE ((((NULL IN (t0.c0))) IS FALSE)) ORDER BY (((t0.c3, rt1.c1, t0.c0, rt1.c6)) BETWEEN ((t0.c3, ((rt1.c4) NOT NULL), 'months', CASE WHEN rt1.c1 THEN t0.c1 WHEN rt1.c6 THEN t0.c3 ELSE rt1.c3 END)) AND ((((('6?E', t0.c2, t0.c4, t0.c3, t0.c3))<((t0.c2, t0.c4, t0.c3, rt1.c3, rt1.c6))), CASE WHEN rt1.c3 THEN t0.c2 WHEN t0.c2 THEN rt1.c3 WHEN 0.5684875930809422 THEN rt1.c0 WHEN t0.c3 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c3 WHEN t0.c1 THEN rt1.c5 END, TRIM(DISTINCT t0.c0, rt1.c6), (t0.c4 IN ())))) LIMIT 0X0;
SELECT * FROM t0, rt1 WHERE ((((NULL IN (t0.c0))) IS FALSE)) ORDER BY TYPEOF(DISTINCT ((NULL)&(t0.c2))) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE ((((NULL IN (t0.c0))) IS FALSE)) ORDER BY (((t0.c3, rt1.c1, t0.c0, rt1.c6)) BETWEEN ((t0.c3, ((rt1.c4) NOT NULL), 'months', CASE WHEN rt1.c1 THEN t0.c1 WHEN rt1.c6 THEN t0.c3 ELSE rt1.c3 END)) AND ((((('6?E', t0.c2, t0.c4, t0.c3, t0.c3))<((t0.c2, t0.c4, t0.c3, rt1.c3, rt1.c6))), CASE WHEN rt1.c3 THEN t0.c2 WHEN t0.c2 THEN rt1.c3 WHEN 0.5684875930809422 THEN rt1.c0 WHEN t0.c3 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c3 WHEN t0.c1 THEN rt1.c5 END, TRIM(DISTINCT t0.c0, rt1.c6), (t0.c4 IN ())))) LIMIT 0X0;
SELECT * FROM t0 NOT INDEXED, rt1 WHERE (CAST(t0.c2 COLLATE RTRIM AS INTEGER));
SELECT * FROM t0, rt1 WHERE (CAST(t0.c2 COLLATE RTRIM AS INTEGER)) ORDER BY (((((((rt1.c4)AND(rt1.c0)))OR(t0.c0)), ((t0.c3) ISNULL)))<=(('254654963', (t0.c2 IN (NULL))))), (((((((t0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))))OR((((t0.c2, rt1.c6)) BETWEEN ((x'93a913', x'')) AND ((t0.c4, t0.c1))))))OR(x''))  NULLS FIRST LIMIT 0x3 INTERSECT SELECT * FROM t0, rt1 WHERE (((t0.c0)||(((rt1.c5) NOT NULL)))) ORDER BY (((((((rt1.c4)AND(rt1.c0)))OR(t0.c0)), ((t0.c3) ISNULL)))<=(('254654963', (t0.c2 IN (NULL))))), (((((((t0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))))OR((((t0.c2, rt1.c6)) BETWEEN ((x'93a913', x'')) AND ((t0.c4, t0.c1))))))OR(x''))  NULLS FIRST LIMIT 3;
SELECT * FROM t0 NOT INDEXED, rt1 WHERE (CAST(t0.c2 COLLATE RTRIM AS INTEGER));
SELECT * FROM t0, rt1 WHERE (CAST(t0.c2 COLLATE RTRIM AS INTEGER)) ORDER BY (((((((rt1.c4)AND(rt1.c0)))OR(t0.c0)), ((t0.c3) ISNULL)))<=(('254654963', (t0.c2 IN (NULL))))), (((((((t0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))))OR((((t0.c2, rt1.c6)) BETWEEN ((x'93a913', x'')) AND ((t0.c4, t0.c1))))))OR(x''))  NULLS FIRST LIMIT 0x3 INTERSECT SELECT * FROM t0, rt1 WHERE (((t0.c0)||(((rt1.c5) NOT NULL)))) ORDER BY (((((((rt1.c4)AND(rt1.c0)))OR(t0.c0)), ((t0.c3) ISNULL)))<=(('254654963', (t0.c2 IN (NULL))))), (((((((t0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))))OR((((t0.c2, rt1.c6)) BETWEEN ((x'93a913', x'')) AND ((t0.c4, t0.c1))))))OR(x''))  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t0 WHERE ((((((((x'' IN ()))AND((t0.c2 IN ()))))OR(((t0.c4) IS FALSE))))AND((t0.c0 IN ()))));
SELECT * FROM t0 WHERE ((((((((x'' IN ()))AND((t0.c2 IN ()))))OR(((t0.c4) IS FALSE))))AND((t0.c0 IN ()))));
SELECT ALL * FROM t0 WHERE ((((((((x'' IN ()))AND((t0.c2 IN ()))))OR(((t0.c4) IS FALSE))))AND((t0.c0 IN ()))));
SELECT * FROM t0 WHERE ((((((((x'' IN ()))AND((t0.c2 IN ()))))OR(((t0.c4) IS FALSE))))AND((t0.c0 IN ()))));
SELECT MIN(rt1.c0) FROM rt1 WHERE ((+ ((((NULL, rt1.c1))==((rt1.c3, rt1.c2))))));
SELECT DISTINCT MIN(rt1.c0) FROM rt1 WHERE ((+ ((((NULL, rt1.c1))=((rt1.c3, rt1.c2)))))) LIMIT 0X1;
SELECT MIN(rt1.c1) FROM t0 NATURAL JOIN rt1 WHERE (((((((t0.c1)OR(rt1.c1)))OR(rt1.c0)))GLOB(((rt1.c0)-(rt1.c5))))) ORDER BY json_array((((rt1.c0, t0.c3))==((rt1.c5, t0.c1))), ((rt1.c3)>=(rt1.c1)))  NULLS FIRST, 0.9119550222314149 ASC, CAST(((t0.c2) NOTNULL) AS BLOB);
SELECT DISTINCT MIN(rt1.c1) FROM t0 NATURAL JOIN rt1 WHERE (((((((t0.c1)OR(rt1.c1)))OR(rt1.c0)))GLOB(((rt1.c0)-(rt1.c5))))) ORDER BY ((((((((((0X5621c5c) IS TRUE))AND((NOT (x'a2')))))OR(LIKELY(DISTINCT t0.c3))))OR(LOWER(t0.c0))))OR(((t0.c1) BETWEEN (t0.c2) AND (rt1.c1)))) ASC  NULLS LAST, (- (((NULL) IS TRUE)));
SELECT ALL * FROM t0, rt1 WHERE ((NOT ((('-335802440') NOTNULL)))) ORDER BY CASE WHEN '554582683' THEN TYPEOF(DISTINCT t0.c3) WHEN (- (t0.c2)) THEN CAST(t0.c1 AS BLOB) ELSE ((t0.c1)-(t0.c2)) END ASC;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((NOT ((('-335802440') NOTNULL))))AND(NULL))) ORDER BY CASE WHEN '554582683' THEN TYPEOF(DISTINCT t0.c3) WHEN (- (t0.c2)) THEN CAST(t0.c1 AS BLOB) ELSE ((t0.c1)-(t0.c2)) END ASC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((((((((t0.c2)OR(rt1.c5)))AND(t0.c3)))AND(rt1.c2)))AND(NULL)) IN (((rt1.c1) ISNULL)))) ORDER BY CASE WHEN '554582683' THEN TYPEOF(DISTINCT t0.c3) WHEN (- (t0.c2)) THEN CAST(t0.c1 AS BLOB) ELSE ((t0.c1)-(t0.c2)) END ASC LIMIT 0X1;
SELECT ALL * FROM t0, rt1 WHERE ((NOT ((('-335802440') NOTNULL)))) ORDER BY CASE WHEN '554582683' THEN TYPEOF(DISTINCT t0.c3) WHEN (- (t0.c2)) THEN CAST(t0.c1 AS BLOB) ELSE ((t0.c1)-(t0.c2)) END ASC;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((NOT ((('-335802440') NOTNULL))))AND(NULL))) ORDER BY CASE WHEN '554582683' THEN TYPEOF(DISTINCT t0.c3) WHEN (- (t0.c2)) THEN CAST(t0.c1 AS BLOB) ELSE ((t0.c1)-(t0.c2)) END ASC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((((((((t0.c2)OR(rt1.c5)))AND(t0.c3)))AND(rt1.c2)))AND(NULL)) IN (((rt1.c1) ISNULL)))) ORDER BY CASE WHEN '554582683' THEN TYPEOF(DISTINCT t0.c3) WHEN (- (t0.c2)) THEN CAST(t0.c1 AS BLOB) ELSE ((t0.c1)-(t0.c2)) END ASC LIMIT 0X1;
SELECT MIN(t0.c4) FROM t0, rt1 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c3)>=(rt1.c5)))) AND ((CAST(rt1.c6 AS INTEGER))))) ORDER BY CASE COALESCE(t0.c0, NULL, rt1.c0, rt1.c1)  WHEN '8g%P' THEN ((rt1.c3) NOT BETWEEN (t0.c1) AND (rt1.c4)) WHEN ((t0.c4)!=('\')) THEN ((((((((rt1.c5)AND(rt1.c1)))OR(t0.c0)))OR(t0.c2)))AND(rt1.c4)) ELSE ((rt1.c5)/(rt1.c6)) END;
SELECT DISTINCT MIN(t0.c4) FROM t0, rt1 WHERE ((((((t0.c0)) NOT BETWEEN ((((t0.c3)>=(rt1.c5)))) AND ((CAST(rt1.c6 AS INTEGER)))))AND(rt1.c1))) ORDER BY ((CASE WHEN t0.c0 THEN rt1.c2 END) BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c2) NOT BETWEEN (rt1.c6) AND (t0.c4)))) ASC  NULLS LAST INTERSECT SELECT DISTINCT MIN(t0.c4) FROM t0, rt1 WHERE (CAST(((rt1.c2)IS NOT(rt1.c2)) AS NUMERIC)) ORDER BY ((CASE WHEN t0.c0 THEN rt1.c2 END) BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c2) NOT BETWEEN (rt1.c6) AND (t0.c4)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (((x'') BETWEEN (rt1.c3) AND (t0.c3)) COLLATE NOCASE);
SELECT DISTINCT * FROM t0, rt1 WHERE (((x'') BETWEEN (rt1.c3) AND (t0.c3)) COLLATE NOCASE) ORDER BY ((((rt1.c3 IN (rt1.c4, t0.c4))))>=((((rt1.c1)>(t0.c4)))))  NULLS LAST LIMIT 0X4 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((NOT (rt1.c6)))<<(((rt1.c3)>(t0.c4))))) ORDER BY ((((rt1.c3 IN (rt1.c4, t0.c4))))>=((((rt1.c1)>(t0.c4)))))  NULLS LAST LIMIT 0x4;
SELECT ALL * FROM t0, rt1 WHERE (((x'') BETWEEN (rt1.c3) AND (t0.c3)) COLLATE NOCASE);
SELECT DISTINCT * FROM t0, rt1 WHERE (((x'') BETWEEN (rt1.c3) AND (t0.c3)) COLLATE NOCASE) ORDER BY ((((rt1.c3 IN (rt1.c4, t0.c4))))>=((((rt1.c1)>(t0.c4)))))  NULLS LAST LIMIT 0X4 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((NOT (rt1.c6)))<<(((rt1.c3)>(t0.c4))))) ORDER BY ((((rt1.c3 IN (rt1.c4, t0.c4))))>=((((rt1.c1)>(t0.c4)))))  NULLS LAST LIMIT 0x4;
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((NULL)) AND (((((t0.c1, t0.c0, t0.c1))==(('', t0.c2, 0.3765688421212895))))))) ORDER BY ((((t0.c0)IS NOT(t0.c1)))<<(((t0.c4) NOT BETWEEN (t0.c2) AND (0.611356224772599)))), (((t0.c4) IS TRUE) IN ()) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c1)) BETWEEN ((NULL)) AND (((((t0.c1, t0.c0, t0.c1))=(('', t0.c2, 0.3765688421212895))))))) ORDER BY ((CAST(t0.c0 AS REAL))<=(t0.c0 COLLATE NOCASE)) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c2, t0.c3)) NOT BETWEEN ((((t0.c4) IS FALSE), (t0.c4 IN (t0.c2)))) AND ((CASE t0.c3  WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c1 ELSE t0.c4 END, CASE WHEN t0.c4 THEN t0.c4 WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c2 END)))) ORDER BY ((CAST(t0.c0 AS REAL))<=(t0.c0 COLLATE NOCASE)) ASC;
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((NULL)) AND (((((t0.c1, t0.c0, t0.c1))==(('', t0.c2, 0.3765688421212895))))))) ORDER BY ((((t0.c0)IS NOT(t0.c1)))<<(((t0.c4) NOT BETWEEN (t0.c2) AND (0.611356224772599)))), (((t0.c4) IS TRUE) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (TOTAL_CHANGES());
SELECT ALL * FROM rt1 WHERE (TOTAL_CHANGES()) ORDER BY (+ (CAST(rt1.c3 AS INTEGER)))  NULLS FIRST, ((ABS(rt1.c3)) BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3))) AND ((~ (rt1.c2)))) DESC, (json_array_length(rt1.c1, rt1.c0) IN ())  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM rt1 WHERE (TOTAL_CHANGES());
SELECT ALL * FROM rt1 WHERE (TOTAL_CHANGES()) ORDER BY (+ (CAST(rt1.c3 AS INTEGER)))  NULLS FIRST, ((ABS(rt1.c3)) BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3))) AND ((~ (rt1.c2)))) DESC, (json_array_length(rt1.c1, rt1.c0) IN ())  NULLS FIRST LIMIT 0X1;
SELECT ALL MAX(rt1.c4) FROM t0, rt1 WHERE ((((((((((+ (rt1.c1)))OR(((rt1.c2) BETWEEN (t0.c4) AND (rt1.c3)))))AND(CASE rt1.c5  WHEN t0.c1 THEN rt1.c4 WHEN NULL THEN rt1.c2 END)))OR(((((t0.c0)OR(t0.c4)))OR(t0.c1)))))AND(CASE rt1.c1  WHEN t0.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c3 WHEN t0.c4 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY CAST(0.653609746491369 AS TEXT), (((- (0.760148486015525)))>(rt1.c4 COLLATE BINARY)) DESC  NULLS LAST, ((rt1.c4 COLLATE NOCASE) NOT BETWEEN ((- (t0.c0))) AND (((rt1.c0) BETWEEN (rt1.c6) AND (rt1.c2)))) ASC  NULLS LAST;
SELECT DISTINCT MAX(rt1.c4) FROM t0, rt1 WHERE ((((((((((((+ (rt1.c1)))OR(((rt1.c2) BETWEEN (t0.c4) AND (rt1.c3)))))AND(CASE rt1.c5  WHEN t0.c1 THEN rt1.c4 WHEN NULL THEN rt1.c2 END)))OR(((((t0.c0)OR(t0.c4)))OR(t0.c1)))))AND(CASE rt1.c1  WHEN t0.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c3 WHEN t0.c4 THEN rt1.c2 ELSE rt1.c2 END)))AND(CASE WHEN rt1.c3 THEN rt1.c2 END COLLATE NOCASE))) ORDER BY ((((t0.c3, rt1.c1, t0.c1))==((rt1.c6, t0.c3, t0.c0))) IN ()) DESC  NULLS LAST, (- (t0.c4)) COLLATE NOCASE ASC;
SELECT ALL * FROM t0, rt1 WHERE ((((((rt1.c5)&(t0.c2)), ((rt1.c2)&(rt1.c4)), ((t0.c1)IS NOT(t0.c4))))<(('d', t0.c1, ((rt1.c4)==(NULL))))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((((rt1.c5)&(t0.c2)), ((rt1.c2)&(rt1.c4)), ((t0.c1)IS NOT(t0.c4))))<(('d', t0.c1, ((rt1.c4)==(NULL))))))AND(((((t0.c4)OR('d')))OR(rt1.c0)) COLLATE RTRIM))) ORDER BY ((rt1.c4 COLLATE BINARY)<<(rt1.c4 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE ((((((rt1.c5)&(t0.c2)), ((rt1.c2)&(rt1.c4)), ((t0.c1)IS NOT(t0.c4))))<(('d', t0.c1, ((rt1.c4)==(NULL))))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((((rt1.c5)&(t0.c2)), ((rt1.c2)&(rt1.c4)), ((t0.c1)IS NOT(t0.c4))))<(('d', t0.c1, ((rt1.c4)==(NULL))))))AND(((((t0.c4)OR('d')))OR(rt1.c0)) COLLATE RTRIM))) ORDER BY ((rt1.c4 COLLATE BINARY)<<(rt1.c4 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL MAX(t0.c2) FROM rt1, t0 WHERE (((t0.c2)*((((t0.c1, t0.c0)) NOT BETWEEN ((rt1.c2, rt1.c4)) AND ((rt1.c6, rt1.c1))))));
SELECT ALL MAX(t0.c2) FROM rt1, t0 WHERE (((t0.c2)*((((t0.c1, t0.c0)) NOT BETWEEN ((rt1.c2, rt1.c4)) AND ((rt1.c6, rt1.c1))))));
SELECT * FROM t0 WHERE (((((t0.c4)IS(t0.c1)))GLOB((t0.c2 IN (t0.c2, t0.c2))))) ORDER BY x'fa', ((((t0.c3)IS(t0.c2))) BETWEEN ((t0.c0 IN ())) AND (CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c3 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c4)IS(t0.c1)))GLOB((t0.c2 IN (t0.c2, t0.c2))))) ORDER BY x'fa', ((((t0.c3)IS(t0.c2))) BETWEEN ((t0.c0 IN ())) AND (CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c3 END)) DESC  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE (((((NULL) BETWEEN (t0.c3) AND (0.21040747364989554))) ISNULL)) ORDER BY x'fa', ((((t0.c3)IS(t0.c2))) BETWEEN ((t0.c0 IN ())) AND (CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c3 END)) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c4)IS(t0.c1)))GLOB((t0.c2 IN (t0.c2, t0.c2))))) ORDER BY x'fa', ((((t0.c3)IS(t0.c2))) BETWEEN ((t0.c0 IN ())) AND (CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c3 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c4)IS(t0.c1)))GLOB((t0.c2 IN (t0.c2, t0.c2))))) ORDER BY x'fa', ((((t0.c3)IS(t0.c2))) BETWEEN ((t0.c0 IN ())) AND (CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c3 END)) DESC  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE (((((NULL) BETWEEN (t0.c3) AND (0.21040747364989554))) ISNULL)) ORDER BY x'fa', ((((t0.c3)IS(t0.c2))) BETWEEN ((t0.c0 IN ())) AND (CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c3 END)) DESC  NULLS FIRST;
SELECT ALL MIN(rt1.c0) FROM rt1 WHERE (IFNULL(DISTINCT LTRIM(rt1.c4, rt1.c2), ((rt1.c5) IS TRUE)));
SELECT DISTINCT MIN(rt1.c0) FROM rt1 WHERE (((IFNULL(DISTINCT LTRIM(rt1.c4, rt1.c2), ((rt1.c5) IS TRUE)))AND(NULL))) ORDER BY rt1.c0 DESC  NULLS LAST, ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN '-695794534' WHEN rt1.c5 THEN rt1.c2 END) NOT BETWEEN (((rt1.c6)|(rt1.c1))) AND (((rt1.c3)%(0.07549142447844681))))  NULLS LAST, (((rt1.c0)) BETWEEN ((rt1.c4 COLLATE BINARY)) AND (((((('?')OR(rt1.c6)))AND(rt1.c5))))) ASC  NULLS LAST INTERSECT SELECT DISTINCT MIN(rt1.c0) FROM rt1 WHERE (CASE WHEN CAST(rt1.c4 AS TEXT) THEN (+ (rt1.c2)) WHEN (((rt1.c6)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)) WHEN ((((((((rt1.c3)AND(rt1.c4)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c0)) THEN ((rt1.c4) NOT NULL) WHEN ((rt1.c3)<<(rt1.c3)) THEN rt1.c6 COLLATE BINARY ELSE json_valid(rt1.c5) END) ORDER BY rt1.c0 DESC  NULLS LAST, ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN '-695794534' WHEN rt1.c5 THEN rt1.c2 END) NOT BETWEEN (((rt1.c6)|(rt1.c1))) AND (((rt1.c3)%(0.07549142447844681))))  NULLS LAST, (((rt1.c0)) BETWEEN ((rt1.c4 COLLATE BINARY)) AND (((((('?')OR(rt1.c6)))AND(rt1.c5))))) ASC  NULLS LAST;
SELECT MIN(t0.c1) FROM rt1, t0 WHERE (CAST(((rt1.c6)LIKE(rt1.c0)) AS NUMERIC));
SELECT ALL MIN(t0.c1) FROM rt1, t0 WHERE (CAST(((rt1.c6)LIKE(rt1.c0)) AS NUMERIC)) INTERSECT SELECT ALL MIN(t0.c1) FROM rt1, t0 WHERE (t0.c4);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((((+ (t0.c1))))=((((t0.c1)<<(t0.c3)))))) ORDER BY IFNULL(SQLITE_COMPILEOPTION_GET(t0.c1), (((t0.c2, t0.c3))<((t0.c2, t0.c4))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((+ (t0.c1))))=((((t0.c1)<<(t0.c3)))))) ORDER BY IFNULL(SQLITE_COMPILEOPTION_GET(t0.c1), (((t0.c2, t0.c3))<((t0.c2, t0.c4))))  NULLS LAST INTERSECT SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c3)|(t0.c0)) AS TEXT)) ORDER BY IFNULL(SQLITE_COMPILEOPTION_GET(t0.c1), (((t0.c2, t0.c3))<((t0.c2, t0.c4))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((((t0.c2) ISNULL))OR(TRIM(t0.c4, t0.c0))))AND(((NULL) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(CAST(1.101841451E9 AS INTEGER))));
SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c2) ISNULL))OR(TRIM(t0.c4, t0.c0))))AND(((NULL) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(CAST(1.101841451E9 AS INTEGER))))AND((t0.c0 IN (CASE t0.c1  WHEN t0.c4 THEN t0.c2 WHEN t0.c0 THEN t0.c4 WHEN t0.c3 THEN t0.c1 END, CASE WHEN t0.c0 THEN t0.c3 ELSE t0.c0 END))))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c3) LIMIT 2;
SELECT ALL * FROM t0 WHERE (((((((((t0.c2) ISNULL))OR(TRIM(t0.c4, t0.c0))))AND(((NULL) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(CAST(1.101841451E9 AS INTEGER))));
SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c2) ISNULL))OR(TRIM(t0.c4, t0.c0))))AND(((NULL) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(CAST(1.101841451E9 AS INTEGER))))AND((t0.c0 IN (CASE t0.c1  WHEN t0.c4 THEN t0.c2 WHEN t0.c0 THEN t0.c4 WHEN t0.c3 THEN t0.c1 END, CASE WHEN t0.c0 THEN t0.c3 ELSE t0.c0 END))))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c3) LIMIT 2;
SELECT ALL * FROM t0 WHERE (NULL);
SELECT * FROM t0 WHERE (((NULL)AND('j潘穨K	'))) LIMIT 2;
SELECT ALL * FROM t0 WHERE (NULL);
SELECT * FROM t0 WHERE (((NULL)AND('j潘穨K	'))) LIMIT 2;
SELECT ALL MIN(t0.c2) FROM rt1, t0 WHERE (CAST(((NULL)>=(rt1.c4)) AS REAL));
SELECT DISTINCT MIN(t0.c2) FROM rt1, t0 WHERE (((CAST(((NULL)>=(rt1.c4)) AS REAL))AND((+ (t0.c4)) COLLATE RTRIM))) INTERSECT SELECT DISTINCT MIN(t0.c2) FROM rt1, t0 WHERE (CAST((t0.c0 IN ()) AS NUMERIC));
SELECT ALL MIN(t0.c3) FROM t0 WHERE (((((t0.c3)!=(t0.c4))) NOT NULL));
SELECT DISTINCT MIN(t0.c3) FROM t0 WHERE (((((((t0.c3)!=(t0.c4))) NOT NULL))AND(MAX(0xffffffff98ad27c9, t0.c4)))) LIMIT 3 INTERSECT SELECT DISTINCT MIN(t0.c3) FROM t0 WHERE (CAST(NULL AS REAL)) LIMIT 3;
SELECT MIN(rt1.c4) FROM rt1, t0 WHERE (CASE t0.c0  WHEN ((t0.c3) IS FALSE) THEN (((rt1.c5)) BETWEEN ((t0.c2)) AND ((rt1.c5))) WHEN (t0.c1 IN (rt1.c0)) THEN ((rt1.c2) NOT NULL) WHEN CASE WHEN t0.c0 THEN t0.c4 WHEN t0.c2 THEN t0.c3 ELSE t0.c0 END THEN (t0.c1 IN (x'40')) WHEN ((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c5)) THEN rt1.c0 ELSE json_extract(t0.c1, 2.102086614E9) END) ORDER BY (((t0.c4, t0.c3, rt1.c4, rt1.c3)) NOT BETWEEN ((CAST(rt1.c1 AS TEXT), ((t0.c1) ISNULL), ((t0.c2)IS NOT(rt1.c1)), t0.c1)) AND (((- (t0.c0)), '2145884001', (+ (rt1.c0)), '234570784'))), ((rt1.c4 COLLATE RTRIM) BETWEEN (x'de') AND (rt1.c5))  NULLS LAST;
SELECT MIN(rt1.c4) FROM rt1, t0 WHERE (((CASE t0.c0  WHEN ((t0.c3) IS FALSE) THEN (((rt1.c5)) BETWEEN ((t0.c2)) AND ((rt1.c5))) WHEN (t0.c1 IN (rt1.c0)) THEN ((rt1.c2) NOT NULL) WHEN CASE WHEN t0.c0 THEN t0.c4 WHEN t0.c2 THEN t0.c3 ELSE t0.c0 END THEN (t0.c1 IN (x'40')) WHEN ((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c5)) THEN rt1.c0 ELSE json_extract(t0.c1, 2.102086614E9) END)AND(NULLIF(((t0.c3) IS TRUE), (+ (rt1.c1)))))) ORDER BY t0.c3 DESC  NULLS FIRST, (((rt1.c4)) NOT BETWEEN ((CASE t0.c3  WHEN rt1.c6 THEN rt1.c0 WHEN t0.c0 THEN 0.6714604983952176 WHEN rt1.c0 THEN rt1.c6 END)) AND ((ABS(DISTINCT t0.c4))))  NULLS LAST LIMIT 0x3 INTERSECT SELECT ALL MIN(rt1.c4) FROM rt1, t0 WHERE (((((x'') NOT BETWEEN (t0.c1) AND (t0.c0))) BETWEEN (json_valid(rt1.c0)) AND (((((((rt1.c1)OR(t0.c0)))AND(t0.c1)))OR(rt1.c5))))) ORDER BY t0.c3 DESC  NULLS FIRST, (((rt1.c4)) NOT BETWEEN ((CASE t0.c3  WHEN rt1.c6 THEN rt1.c0 WHEN t0.c0 THEN 0.6714604983952176 WHEN rt1.c0 THEN rt1.c6 END)) AND ((ABS(DISTINCT t0.c4))))  NULLS LAST LIMIT 0x3;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c2, t0.c0, t0.c4, t0.c4)) BETWEEN ((CASE WHEN t0.c4 THEN '591531326' WHEN t0.c4 THEN t0.c0 WHEN t0.c3 THEN t0.c2 WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c2 END, ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c0)), ((t0.c1) NOT NULL), ((t0.c2) NOT BETWEEN (t0.c4) AND ('1406914612')))) AND ((((t0.c3) NOT BETWEEN (t0.c2) AND (x'')), LOWER(DISTINCT t0.c0), t0.c3, -1.80735253E8))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c2, t0.c0, t0.c4, t0.c4)) BETWEEN ((CASE WHEN t0.c4 THEN '591531326' WHEN t0.c4 THEN t0.c0 WHEN t0.c3 THEN t0.c2 WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c2 END, ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c0)), ((t0.c1) NOT NULL), ((t0.c2) NOT BETWEEN (t0.c4) AND ('1406914612')))) AND ((((t0.c3) NOT BETWEEN (t0.c2) AND (x'')), LOWER(DISTINCT t0.c0), t0.c3, -1.80735253E8)))) ORDER BY t0.c1 DESC, -1.906410965E9  NULLS FIRST;
SELECT ALL MAX(rt1.c6) FROM t0, rt1 WHERE ((((t0.c0, '')) BETWEEN ((((rt1.c2)>=(rt1.c2)), t0.c3)) AND ((((0.08182845140269956)>=(NULL)), json_insert(rt1.c4, rt1.c3, rt1.c4)))));
SELECT ALL MAX(rt1.c6) FROM t0, rt1 WHERE ((((t0.c0, '')) BETWEEN ((((rt1.c2)>=(rt1.c2)), t0.c3)) AND ((((0.08182845140269956)>=(NULL)), json_insert(rt1.c4, rt1.c3, rt1.c4))))) ORDER BY (((t0.c2 IN (rt1.c0)))<<(((rt1.c5)*(rt1.c2))))  NULLS FIRST INTERSECT SELECT ALL MAX(rt1.c6) FROM t0, rt1 WHERE ((((CAST(NULL AS REAL), ((rt1.c5)-(t0.c1)), (((t0.c0, rt1.c3))!=(('0.41611625266826924', t0.c4)))))!=((NULL, ((rt1.c5) NOTNULL), ((x'f0b404ca3b') BETWEEN (rt1.c0) AND (rt1.c6)))))) ORDER BY (((t0.c2 IN (rt1.c0)))<<(((rt1.c5)*(rt1.c2))))  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (CAST(((t0.c4) BETWEEN (NULL) AND (rt1.c5)) AS INTEGER));
SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(((t0.c4) BETWEEN (NULL) AND (rt1.c5)) AS INTEGER)) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((UPPER(0.6580814023919211))LIKE(t0.c4))) LIMIT 2;
SELECT ALL * FROM rt1, t0 WHERE (CAST(((t0.c4) BETWEEN (NULL) AND (rt1.c5)) AS INTEGER));
SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(((t0.c4) BETWEEN (NULL) AND (rt1.c5)) AS INTEGER)) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((UPPER(0.6580814023919211))LIKE(t0.c4))) LIMIT 2;
SELECT ALL * FROM t0, rt1 WHERE ((~ ((- (0x13031409)))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((~ ((- (0X13031409)))))AND((((('vPJ㩹)')IS NOT(rt1.c1)))LIKE(CASE NULL  WHEN t0.c0 THEN rt1.c1 ELSE rt1.c0 END))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c4, t0.c2)) BETWEEN ((CASE '1186558803'  WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c3 END, ((((((((t0.c1)OR(t0.c1)))AND(rt1.c4)))OR(t0.c4)))AND(rt1.c5)))) AND ((((rt1.c0)!=('0.4815213229636066')), ((rt1.c1)IS('198178796')))))) LIMIT 0X0;
SELECT ALL * FROM t0, rt1 WHERE ((~ ((- (0x13031409)))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((~ ((- (0X13031409)))))AND((((('vPJ㩹)')IS NOT(rt1.c1)))LIKE(CASE NULL  WHEN t0.c0 THEN rt1.c1 ELSE rt1.c0 END))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c4, t0.c2)) BETWEEN ((CASE '1186558803'  WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c3 END, ((((((((t0.c1)OR(t0.c1)))AND(rt1.c4)))OR(t0.c4)))AND(rt1.c5)))) AND ((((rt1.c0)!=('0.4815213229636066')), ((rt1.c1)IS('198178796')))))) LIMIT 0X0;
SELECT MAX(rt1.c4) FROM rt1 WHERE (NULL) ORDER BY (((rt1.c5)LIKE('-559771944')) IN ()), rt1.c2 DESC  NULLS FIRST;
SELECT ALL MAX(rt1.c4) FROM rt1 WHERE (NULL) ORDER BY (((rt1.c5)LIKE('-559771944')) IN ()), rt1.c2 DESC  NULLS FIRST INTERSECT SELECT MAX(rt1.c4) FROM rt1 WHERE ((((((rt1.c1)%(rt1.c1))))<=((((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c3)))))) ORDER BY (((rt1.c5)LIKE('-559771944')) IN ()), rt1.c2 DESC  NULLS FIRST;
SELECT MAX(t0.c3) FROM rt1 CROSS JOIN t0 ON NULLIF(((t0.c1) BETWEEN (t0.c3) AND (t0.c4)), ((t0.c3)<>(rt1.c5))) WHERE (((TRIM(DISTINCT t0.c2)) NOT NULL));
SELECT DISTINCT MAX(t0.c3) FROM rt1 CROSS JOIN t0 ON NULLIF(((t0.c1) BETWEEN (t0.c3) AND (t0.c4)), ((t0.c3)!=(rt1.c5))) WHERE (((TRIM(DISTINCT t0.c2)) NOT NULL)) LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(t0.c3) FROM rt1 CROSS JOIN t0 ON NULLIF(((t0.c1) BETWEEN (t0.c3) AND (t0.c4)), ((t0.c3)!=(rt1.c5))) WHERE (((((rt1.c6) BETWEEN (t0.c3) AND (rt1.c2))) NOT BETWEEN ((+ (t0.c2))) AND (rt1.c5))) LIMIT 1;
SELECT MIN(t0.c0) FROM rt1, t0 WHERE ((~ (rt1.c3))) ORDER BY CAST(((rt1.c0) NOT NULL) AS NUMERIC)  NULLS FIRST, NULL DESC;
SELECT DISTINCT MIN(t0.c0) FROM rt1, t0 WHERE ((~ (rt1.c3))) ORDER BY CAST(((rt1.c0) NOT NULL) AS NUMERIC)  NULLS FIRST, NULL DESC;
SELECT MIN(rt1.c4) FROM rt1, t0 WHERE (LIKELY(CAST(rt1.c4 AS TEXT))) ORDER BY ((rt1.c5) ISNULL) COLLATE NOCASE  NULLS LAST, LIKE(CAST(t0.c4 AS REAL), ((rt1.c6) NOT BETWEEN (303395121) AND (rt1.c2))), ((((((((rt1.c2)OR(t0.c4)))OR(t0.c4)))AND(t0.c3)))|(((((((rt1.c0)OR(rt1.c0)))OR(t0.c1)))OR(',')))) ASC;
SELECT DISTINCT MIN(rt1.c4) FROM rt1, t0 WHERE (LIKELY(CAST(rt1.c4 AS TEXT))) ORDER BY (- (NULL))  NULLS FIRST, ((((rt1.c6) IS FALSE))<>(((((((rt1.c1)OR(rt1.c3)))AND(t0.c0)))AND(rt1.c3))))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MIN(rt1.c4) FROM rt1, t0 WHERE ('0.9187571754710213') ORDER BY (- (NULL))  NULLS FIRST, ((((rt1.c6) IS FALSE))!=(((((((rt1.c1)OR(rt1.c3)))AND(t0.c0)))AND(rt1.c3))))  NULLS FIRST LIMIT 0x0;
SELECT * FROM t0 WHERE (((CAST(t0.c4 AS TEXT)) NOT BETWEEN ((((t0.c2, x'eb', t0.c3)) NOT BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((t0.c4, t0.c1, t0.c3)))) AND ((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c4)))))) ORDER BY CASE ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c2))  WHEN (((t0.c4, t0.c3)) BETWEEN ((t0.c3, t0.c3)) AND ((t0.c1, t0.c2))) THEN CASE t0.c2  WHEN t0.c0 THEN t0.c3 END WHEN t0.c0 THEN LIKELY(DISTINCT t0.c4) WHEN CASE WHEN t0.c3 THEN -177655772 WHEN t0.c2 THEN t0.c4 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END THEN (((t0.c4, t0.c0, t0.c2, x''))>((t0.c2, t0.c2, x'0b', t0.c2))) END ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c4 AS TEXT)) NOT BETWEEN ((((t0.c2, x'eb', t0.c3)) NOT BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((t0.c4, t0.c1, t0.c3)))) AND ((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c4))))))AND(CASE WHEN CASE x'58427ea3'  WHEN t0.c0 THEN t0.c4 WHEN t0.c4 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END THEN ((((t0.c4)AND(t0.c2)))OR(t0.c2)) WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c4)) THEN ((t0.c4) IS FALSE) WHEN ((t0.c2)-(t0.c3)) THEN ((t0.c4)*(t0.c2)) END))) ORDER BY CASE ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c2))  WHEN (((t0.c4, t0.c3)) BETWEEN ((t0.c3, t0.c3)) AND ((t0.c1, t0.c2))) THEN CASE t0.c2  WHEN t0.c0 THEN t0.c3 END WHEN t0.c0 THEN LIKELY(DISTINCT t0.c4) WHEN CASE WHEN t0.c3 THEN -177655772 WHEN t0.c2 THEN t0.c4 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END THEN (((t0.c4, t0.c0, t0.c2, x''))>((t0.c2, t0.c2, x'0b', t0.c2))) END ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((CAST(t0.c4 AS TEXT)) NOT BETWEEN ((((t0.c2, x'eb', t0.c3)) NOT BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((t0.c4, t0.c1, t0.c3)))) AND ((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c4)))))) ORDER BY CASE ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c2))  WHEN (((t0.c4, t0.c3)) BETWEEN ((t0.c3, t0.c3)) AND ((t0.c1, t0.c2))) THEN CASE t0.c2  WHEN t0.c0 THEN t0.c3 END WHEN t0.c0 THEN LIKELY(DISTINCT t0.c4) WHEN CASE WHEN t0.c3 THEN -177655772 WHEN t0.c2 THEN t0.c4 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END THEN (((t0.c4, t0.c0, t0.c2, x''))>((t0.c2, t0.c2, x'0b', t0.c2))) END ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c4 AS TEXT)) NOT BETWEEN ((((t0.c2, x'eb', t0.c3)) NOT BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((t0.c4, t0.c1, t0.c3)))) AND ((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c4))))))AND(CASE WHEN CASE x'58427ea3'  WHEN t0.c0 THEN t0.c4 WHEN t0.c4 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END THEN ((((t0.c4)AND(t0.c2)))OR(t0.c2)) WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c4)) THEN ((t0.c4) IS FALSE) WHEN ((t0.c2)-(t0.c3)) THEN ((t0.c4)*(t0.c2)) END))) ORDER BY CASE ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c2))  WHEN (((t0.c4, t0.c3)) BETWEEN ((t0.c3, t0.c3)) AND ((t0.c1, t0.c2))) THEN CASE t0.c2  WHEN t0.c0 THEN t0.c3 END WHEN t0.c0 THEN LIKELY(DISTINCT t0.c4) WHEN CASE WHEN t0.c3 THEN -177655772 WHEN t0.c2 THEN t0.c4 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END THEN (((t0.c4, t0.c0, t0.c2, x''))>((t0.c2, t0.c2, x'0b', t0.c2))) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0 WHERE ((((rt1.c6)&(rt1.c4)) IN (((rt1.c3)||(t0.c4)), CASE 0.8196106157040617  WHEN t0.c2 THEN rt1.c4 WHEN t0.c3 THEN 0.7187429520624881 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((rt1.c6)&(rt1.c4)) IN (((rt1.c3)||(t0.c4)), CASE 0.8196106157040617  WHEN t0.c2 THEN rt1.c4 WHEN t0.c3 THEN 0.7187429520624881 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)))AND(((CAST(rt1.c0 AS NUMERIC))|((((rt1.c5, rt1.c4, rt1.c5))>((rt1.c0, t0.c0, t0.c0)))))))) ORDER BY ((LTRIM(rt1.c6))<<(((rt1.c5) BETWEEN (rt1.c0) AND (rt1.c4)))), (~ (rt1.c6)) INTERSECT SELECT COUNT(*) FROM rt1, t0 WHERE (((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)))AND(t0.c3))) AND (LIKELY(DISTINCT rt1.c0)))) ORDER BY ((LTRIM(rt1.c6))<<(((rt1.c5) BETWEEN (rt1.c0) AND (rt1.c4)))), (~ (rt1.c6));
SELECT ALL * FROM rt1 WHERE (LIKELY(((rt1.c2)>>(rt1.c6))));
SELECT ALL * FROM rt1 WHERE (LIKELY(((rt1.c2)>>(rt1.c6)))) LIMIT 0 INTERSECT SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c4)GLOB(rt1.c0)) THEN (~ (NULL)) WHEN ((rt1.c0)<=(rt1.c3)) THEN (((rt1.c5, rt1.c3)) NOT BETWEEN ((0.9795631219358292, rt1.c1)) AND ((rt1.c6, rt1.c0))) ELSE (rt1.c3 IN ()) END) LIMIT 0;
SELECT ALL * FROM rt1 WHERE (LIKELY(((rt1.c2)>>(rt1.c6))));
SELECT ALL * FROM rt1 WHERE (LIKELY(((rt1.c2)>>(rt1.c6)))) LIMIT 0 INTERSECT SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c4)GLOB(rt1.c0)) THEN (~ (NULL)) WHEN ((rt1.c0)<=(rt1.c3)) THEN (((rt1.c5, rt1.c3)) NOT BETWEEN ((0.9795631219358292, rt1.c1)) AND ((rt1.c6, rt1.c0))) ELSE (rt1.c3 IN ()) END) LIMIT 0;
SELECT MAX(rt1.c5) FROM rt1, t0 WHERE (((CASE rt1.c5  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN t0.c1 THEN rt1.c4 WHEN t0.c3 THEN t0.c0 ELSE rt1.c6 END)<>(((((((rt1.c3)AND(rt1.c3)))OR(t0.c3)))AND(t0.c2))))) ORDER BY (((t0.c1 IN (rt1.c3)))IS NOT(((((((((rt1.c6)OR(rt1.c2)))OR(NULL)))OR(rt1.c2)))OR(t0.c2)))) DESC, (- (((rt1.c0)>>(t0.c4)))) DESC  NULLS FIRST, CASE WHEN x'' THEN t0.c3 COLLATE NOCASE WHEN rt1.c6 COLLATE NOCASE THEN (rt1.c2 IN ()) WHEN ((rt1.c6) NOT BETWEEN (t0.c4) AND ('-1170810712')) THEN (NOT (t0.c0)) ELSE ((((((((rt1.c0)AND(rt1.c4)))AND(rt1.c6)))AND(rt1.c2)))AND(rt1.c4)) END ASC  NULLS LAST, (+ (('0.0032158905941063187' IN ())))  NULLS LAST;
SELECT DISTINCT MAX(rt1.c5) FROM rt1, t0 WHERE (((((CASE rt1.c5  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN t0.c1 THEN rt1.c4 WHEN t0.c3 THEN t0.c0 ELSE rt1.c6 END)>(((((((rt1.c3)AND(rt1.c3)))OR(t0.c3)))AND(t0.c2)))))AND((((((((- (t0.c4)))AND(NULL)))AND(((((((((((t0.c3)AND(t0.c0)))AND(rt1.c0)))OR(rt1.c4)))OR(x'')))OR(rt1.c6)))))AND(((rt1.c5)<=(t0.c2))))))) ORDER BY (((((t0.c4)<<(rt1.c4)), ((rt1.c4)*(t0.c0)), ((((((t0.c3)OR(rt1.c1)))AND(rt1.c1)))AND(t0.c3)), 'now'))>=(((rt1.c0 IN ('1934950711')), (NOT (rt1.c1)), ((((((((rt1.c2)OR(t0.c2)))AND(t0.c3)))AND(rt1.c2)))OR(rt1.c3)), NULL))) DESC, CAST(CAST(rt1.c6 AS NUMERIC) AS BLOB) DESC, NULL;
SELECT COUNT(*) FROM rt1 WHERE (((NOT (rt1.c2)) IN ()));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((NOT (rt1.c2)) IN ()))AND(((((rt1.c6) NOTNULL)) NOT BETWEEN (LOWER('졲')) AND (((0.29710299648638905)|(rt1.c4))))))) ORDER BY CAST(rt1.c5 AS NUMERIC) ASC  NULLS FIRST LIMIT 0x3 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CASE WHEN CASE WHEN NULL THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c1)<(rt1.c6)) WHEN ((rt1.c3) ISNULL) THEN x'6b' WHEN (rt1.c2 IN (rt1.c3)) THEN (NOT ('ck{')) ELSE rt1.c6 END) ORDER BY CAST(rt1.c5 AS NUMERIC) ASC  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON rtreenode((rt1.c6 IN ()), CASE t0.c1  WHEN t0.c2 THEN rt1.c6 WHEN t0.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 END) WHERE ((((rt1.c2 IN ()))*(((t0.c0) NOT BETWEEN ('2N,P') AND (t0.c1)))));
SELECT * FROM t0 INNER JOIN rt1 ON rtreenode((rt1.c6 IN ()), CASE t0.c1  WHEN t0.c2 THEN rt1.c6 WHEN t0.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 END) WHERE ((((rt1.c2 IN ()))*(((t0.c0) NOT BETWEEN ('2N,P') AND (t0.c1))))) ORDER BY t0.c3 COLLATE BINARY, CAST(((t0.c3)GLOB(t0.c4)) AS BLOB) ASC INTERSECT SELECT * FROM t0 INNER JOIN rt1 ON rtreenode((rt1.c6 IN ()), CASE t0.c1  WHEN t0.c2 THEN rt1.c6 WHEN t0.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 END) WHERE ((((((t0.c0)LIKE(t0.c1)), rt1.c5, (t0.c2 IN (rt1.c1))))>=(((rt1.c2 IN ()), t0.c3, NULL COLLATE NOCASE)))) ORDER BY t0.c3 COLLATE BINARY, CAST(((t0.c3)GLOB(t0.c4)) AS BLOB) ASC;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON rtreenode((rt1.c6 IN ()), CASE t0.c1  WHEN t0.c2 THEN rt1.c6 WHEN t0.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 END) WHERE ((((rt1.c2 IN ()))*(((t0.c0) NOT BETWEEN ('2N,P') AND (t0.c1)))));
SELECT * FROM t0 INNER JOIN rt1 ON rtreenode((rt1.c6 IN ()), CASE t0.c1  WHEN t0.c2 THEN rt1.c6 WHEN t0.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 END) WHERE ((((rt1.c2 IN ()))*(((t0.c0) NOT BETWEEN ('2N,P') AND (t0.c1))))) ORDER BY t0.c3 COLLATE BINARY, CAST(((t0.c3)GLOB(t0.c4)) AS BLOB) ASC INTERSECT SELECT * FROM t0 INNER JOIN rt1 ON rtreenode((rt1.c6 IN ()), CASE t0.c1  WHEN t0.c2 THEN rt1.c6 WHEN t0.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 END) WHERE ((((((t0.c0)LIKE(t0.c1)), rt1.c5, (t0.c2 IN (rt1.c1))))>=(((rt1.c2 IN ()), t0.c3, NULL COLLATE NOCASE)))) ORDER BY t0.c3 COLLATE BINARY, CAST(((t0.c3)GLOB(t0.c4)) AS BLOB) ASC;
SELECT MIN(t0.c4) FROM rt1, t0 WHERE ((~ (((t0.c4)IS NOT(rt1.c4)))));
SELECT DISTINCT MIN(t0.c4) FROM rt1, t0 WHERE ((~ (((t0.c4)IS NOT(rt1.c4))))) LIMIT 0 INTERSECT SELECT DISTINCT MIN(t0.c4) FROM rt1, t0 WHERE (rt1.c0) LIMIT 0X0;
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)==(rt1.c1)))<<(((((((((rt1.c6)AND(rt1.c0)))AND(rt1.c2)))AND(0.9047286469910235)))OR(rt1.c3)))));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c1)=(rt1.c1)))<<(((((((((rt1.c6)AND(rt1.c0)))AND(rt1.c2)))AND(0.9047286469910235)))OR(rt1.c3))))) ORDER BY ((((rt1.c4) IS FALSE)) IS FALSE);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)==(rt1.c1)))<<(((((((((rt1.c6)AND(rt1.c0)))AND(rt1.c2)))AND(0.9047286469910235)))OR(rt1.c3)))));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c1)=(rt1.c1)))<<(((((((((rt1.c6)AND(rt1.c0)))AND(rt1.c2)))AND(0.9047286469910235)))OR(rt1.c3))))) ORDER BY ((((rt1.c4) IS FALSE)) IS FALSE);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((0X6a8dc5ae) IS FALSE));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((0x6a8dc5ae) IS FALSE))AND(CASE ((t0.c4)IS(rt1.c0))  WHEN CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c5 THEN t0.c0 WHEN t0.c3 THEN t0.c3 WHEN '1765084207' THEN t0.c4 END THEN (((t0.c2, rt1.c0))<((t0.c2, 's|~d,7r'))) END))) LIMIT 1;
SELECT * FROM rt1 WHERE (((((((((rt1.c6) NOT BETWEEN (rt1.c4) AND (rt1.c6)))AND(CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 WHEN 0.33129114478268784 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END)))AND(((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c3)))))AND(COALESCE(DISTINCT rt1.c1, '', rt1.c0, rt1.c3))));
SELECT * FROM rt1 WHERE (((((((((rt1.c6) NOT BETWEEN (rt1.c4) AND (rt1.c6)))AND(CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 WHEN 0.33129114478268784 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END)))AND(((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c3)))))AND(COALESCE(DISTINCT rt1.c1, '', rt1.c0, rt1.c3)))) ORDER BY ((((((((rt1.c4) NOT BETWEEN ('-1279305933') AND (rt1.c1)))OR(((rt1.c2)<=(rt1.c1)))))OR((((rt1.c6)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c2))))))AND(((rt1.c6) BETWEEN (rt1.c0) AND (rt1.c3)))), CAST((((rt1.c4, rt1.c2))<((rt1.c2, rt1.c1))) AS REAL) DESC LIMIT 2;
SELECT * FROM rt1 WHERE (((((((((rt1.c6) NOT BETWEEN (rt1.c4) AND (rt1.c6)))AND(CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 WHEN 0.33129114478268784 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END)))AND(((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c3)))))AND(COALESCE(DISTINCT rt1.c1, '', rt1.c0, rt1.c3))));
SELECT * FROM rt1 WHERE (((((((((rt1.c6) NOT BETWEEN (rt1.c4) AND (rt1.c6)))AND(CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 WHEN 0.33129114478268784 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END)))AND(((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c3)))))AND(COALESCE(DISTINCT rt1.c1, '', rt1.c0, rt1.c3)))) ORDER BY ((((((((rt1.c4) NOT BETWEEN ('-1279305933') AND (rt1.c1)))OR(((rt1.c2)<=(rt1.c1)))))OR((((rt1.c6)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c2))))))AND(((rt1.c6) BETWEEN (rt1.c0) AND (rt1.c3)))), CAST((((rt1.c4, rt1.c2))<((rt1.c2, rt1.c1))) AS REAL) DESC LIMIT 2;
SELECT MIN(rt1.c5) FROM rt1 WHERE ((((rt1.c6)*(rt1.c2)) IN ((rt1.c4 IN (rt1.c5))))) ORDER BY ((((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c0))) NOTNULL) ASC, CAST(rt1.c5 AS BLOB) COLLATE NOCASE;
SELECT DISTINCT MIN(rt1.c5) FROM rt1 WHERE ((((rt1.c6)*(rt1.c2)) IN ((rt1.c4 IN (rt1.c5))))) ORDER BY ((((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c0))) NOTNULL) ASC, CAST(rt1.c5 AS BLOB) COLLATE NOCASE;
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c0) NOTNULL) THEN CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c0 END WHEN ((rt1.c2)>(rt1.c3)) THEN CAST(rt1.c0 AS REAL) ELSE rt1.c4 COLLATE NOCASE END) ORDER BY rt1.c2;
SELECT DISTINCT * FROM rt1 WHERE (((CASE WHEN ((rt1.c0) NOTNULL) THEN CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c0 END WHEN ((rt1.c2)>(rt1.c3)) THEN CAST(rt1.c0 AS REAL) ELSE rt1.c4 COLLATE NOCASE END)AND(CAST((x'a6' IN (rt1.c3)) AS INTEGER)))) ORDER BY rt1.c2;
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c0) NOTNULL) THEN CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c0 END WHEN ((rt1.c2)>(rt1.c3)) THEN CAST(rt1.c0 AS REAL) ELSE rt1.c4 COLLATE NOCASE END) ORDER BY rt1.c2;
SELECT DISTINCT * FROM rt1 WHERE (((CASE WHEN ((rt1.c0) NOTNULL) THEN CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c0 END WHEN ((rt1.c2)>(rt1.c3)) THEN CAST(rt1.c0 AS REAL) ELSE rt1.c4 COLLATE NOCASE END)AND(CAST((x'a6' IN (rt1.c3)) AS INTEGER)))) ORDER BY rt1.c2;
SELECT ALL MAX(rt1.c3) FROM rt1, t0 WHERE ((((rt1.c4)) BETWEEN ((((rt1.c4)|(rt1.c4)))) AND ((((rt1.c5)&(t0.c3))))));
SELECT DISTINCT MAX(rt1.c3) FROM rt1, t0 WHERE ((((rt1.c4)) BETWEEN ((((rt1.c4)|(rt1.c4)))) AND ((((rt1.c5)&(t0.c3)))))) LIMIT 1 INTERSECT SELECT DISTINCT MAX(rt1.c3) FROM rt1, t0 WHERE (rt1.c3) LIMIT 0X1;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c4) BETWEEN (((t0.c0) NOT NULL)) AND ((((t0.c0, t0.c0, t0.c2)) BETWEEN ((t0.c2, t0.c3, t0.c4)) AND ((t0.c4, t0.c4, t0.c3)))))) ORDER BY CAST(((t0.c2)<(t0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c4) BETWEEN (((t0.c0) NOT NULL)) AND ((((t0.c0, t0.c0, t0.c2)) BETWEEN ((t0.c2, t0.c3, t0.c4)) AND ((t0.c4, t0.c4, t0.c3)))))) ORDER BY 0.2402354130034361  NULLS LAST, ((((((((((CAST(t0.c0 AS REAL))AND('aF~<#i8ᄊF')))OR(((t0.c1)GLOB(t0.c1)))))OR(CAST(t0.c0 AS INTEGER))))AND(UPPER(DISTINCT t0.c0))))OR((NOT (t0.c2)))) ASC, (t0.c1 COLLATE BINARY IN ((+ (t0.c2)))) ASC  NULLS FIRST INTERSECT SELECT COUNT(*) FROM t0 WHERE (IFNULL((t0.c4 IN (t0.c4, t0.c3, t0.c3, t0.c2)), t0.c0 COLLATE NOCASE)) ORDER BY 0.2402354130034361  NULLS LAST, ((((((((((CAST(t0.c0 AS REAL))AND('aF~<#i8ᄊF')))OR(((t0.c1)GLOB(t0.c1)))))OR(CAST(t0.c0 AS INTEGER))))AND(UPPER(DISTINCT t0.c0))))OR((NOT (t0.c2)))) ASC, (t0.c1 COLLATE BINARY IN ((+ (t0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (LIKELY(('1765084207' IN (t0.c3, t0.c4)))) ORDER BY ((((((((((t0.c3)*(t0.c4)))AND(RTRIM(t0.c2))))AND('-1270526967')))OR(0.4086718590657382)))AND(((t0.c4) IS FALSE))) ASC  NULLS LAST, highlight(((((t0.c0)AND(t0.c2)))AND(t0.c0)), ((t0.c3) NOT NULL), ((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c0)), STRFTIME(t0.c4, t0.c3, t0.c0, NULL)), (NOT (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (LIKELY(('1765084207' IN (t0.c3)))) ORDER BY (NOT (((t0.c3) ISNULL)))  NULLS FIRST, (((x'') IS TRUE) IN ());
SELECT ALL * FROM t0 WHERE (LIKELY(('1765084207' IN (t0.c3, t0.c4)))) ORDER BY ((((((((((t0.c3)*(t0.c4)))AND(RTRIM(t0.c2))))AND('-1270526967')))OR(0.4086718590657382)))AND(((t0.c4) IS FALSE))) ASC  NULLS LAST, highlight(((((t0.c0)AND(t0.c2)))AND(t0.c0)), ((t0.c3) NOT NULL), ((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c0)), STRFTIME(t0.c4, t0.c3, t0.c0, NULL)), (NOT (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (LIKELY(('1765084207' IN (t0.c3)))) ORDER BY (NOT (((t0.c3) ISNULL)))  NULLS FIRST, (((x'') IS TRUE) IN ());
SELECT ALL * FROM t0 INNER JOIN rt1 ON (+ (rt1.c6)) WHERE (CAST(CHANGES() AS BLOB)) ORDER BY (((rt1.c1)) NOT BETWEEN ((TIME(t0.c0, rt1.c3, t0.c1))) AND ((0.9996686188652865))) ASC, 0.49272063556823553, rt1.c2 ASC  NULLS FIRST;
SELECT * FROM t0 INNER JOIN rt1 ON (+ (rt1.c6)) WHERE (((CAST(CHANGES() AS BLOB))AND(t0.c4 COLLATE BINARY))) ORDER BY ((rt1.c5)%(t0.c3)) COLLATE NOCASE ASC  NULLS LAST, ((((((((t0.c3)AND(rt1.c3)))OR(rt1.c4)))AND(x''))) BETWEEN (x'87') AND (rt1.c5 COLLATE NOCASE))  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM t0 INNER JOIN rt1 ON (+ (rt1.c6)) WHERE (((((((json_insert(rt1.c2, t0.c0, rt1.c6, rt1.c3))AND(((rt1.c1)IS NOT(rt1.c3)))))AND(((rt1.c2)<<(t0.c4)))))AND(TRIM(DISTINCT t0.c2, NULL)))) ORDER BY ((rt1.c5)%(t0.c3)) COLLATE NOCASE ASC  NULLS LAST, ((((((((t0.c3)AND(rt1.c3)))OR(rt1.c4)))AND(x''))) BETWEEN (x'87') AND (rt1.c5 COLLATE NOCASE))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t0 INNER JOIN rt1 ON (+ (rt1.c6)) WHERE (CAST(CHANGES() AS BLOB)) ORDER BY (((rt1.c1)) NOT BETWEEN ((TIME(t0.c0, rt1.c3, t0.c1))) AND ((0.9996686188652865))) ASC, 0.49272063556823553, rt1.c2 ASC  NULLS FIRST;
SELECT * FROM t0 INNER JOIN rt1 ON (+ (rt1.c6)) WHERE (((CAST(CHANGES() AS BLOB))AND(t0.c4 COLLATE BINARY))) ORDER BY ((rt1.c5)%(t0.c3)) COLLATE NOCASE ASC  NULLS LAST, ((((((((t0.c3)AND(rt1.c3)))OR(rt1.c4)))AND(x''))) BETWEEN (x'87') AND (rt1.c5 COLLATE NOCASE))  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM t0 INNER JOIN rt1 ON (+ (rt1.c6)) WHERE (((((((json_insert(rt1.c2, t0.c0, rt1.c6, rt1.c3))AND(((rt1.c1)IS NOT(rt1.c3)))))AND(((rt1.c2)<<(t0.c4)))))AND(TRIM(DISTINCT t0.c2, NULL)))) ORDER BY ((rt1.c5)%(t0.c3)) COLLATE NOCASE ASC  NULLS LAST, ((((((((t0.c3)AND(rt1.c3)))OR(rt1.c4)))AND(x''))) BETWEEN (x'87') AND (rt1.c5 COLLATE NOCASE))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (CHANGES());
SELECT * FROM t0 WHERE (((CHANGES())AND(((HEX(DISTINCT t0.c4)) NOT BETWEEN (((t0.c2)==(t0.c2))) AND ((((t0.c2, t0.c3)) NOT BETWEEN ((t0.c4, t0.c1)) AND ((t0.c3, t0.c3)))))))) INTERSECT SELECT ALL * FROM t0 WHERE (CAST(((t0.c1) IS TRUE) AS TEXT));
SELECT ALL * FROM t0 WHERE (CHANGES());
SELECT * FROM t0 WHERE (((CHANGES())AND(((HEX(DISTINCT t0.c4)) NOT BETWEEN (((t0.c2)==(t0.c2))) AND ((((t0.c2, t0.c3)) NOT BETWEEN ((t0.c4, t0.c1)) AND ((t0.c3, t0.c3)))))))) INTERSECT SELECT ALL * FROM t0 WHERE (CAST(((t0.c1) IS TRUE) AS TEXT));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((t0.c3 COLLATE BINARY) NOTNULL));
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((t0.c3 COLLATE BINARY) NOTNULL)) ORDER BY CASE rt1.c1 COLLATE RTRIM  WHEN CAST(rt1.c5 AS REAL) THEN (+ (rt1.c6)) END  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((((rt1.c6, t0.c2, rt1.c2, rt1.c4)) BETWEEN ((rt1.c5, 0.2974500299651832, rt1.c4, rt1.c3)) AND ((rt1.c1, rt1.c4, rt1.c6, rt1.c1))) COLLATE BINARY) ORDER BY CASE rt1.c1 COLLATE RTRIM  WHEN CAST(rt1.c5 AS REAL) THEN (+ (rt1.c6)) END  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((rt1.c1)<(rt1.c4))) IS TRUE)) ORDER BY rt1.c6 ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)<(rt1.c4))) IS TRUE)) ORDER BY (((rt1.c2 IN (rt1.c2, rt1.c5))) NOT BETWEEN (((rt1.c3) IS TRUE)) AND ((~ (rt1.c3)))) DESC, (- (x'' COLLATE NOCASE)) INTERSECT SELECT ALL * FROM rt1 WHERE ('610252571') ORDER BY (((rt1.c2 IN (rt1.c2, rt1.c5))) NOT BETWEEN (((rt1.c3) IS TRUE)) AND ((~ (rt1.c3)))) DESC, (- (x'' COLLATE NOCASE));
SELECT * FROM rt1 WHERE (((((rt1.c1)<(rt1.c4))) IS TRUE)) ORDER BY rt1.c6 ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)<(rt1.c4))) IS TRUE)) ORDER BY (((rt1.c2 IN (rt1.c2, rt1.c5))) NOT BETWEEN (((rt1.c3) IS TRUE)) AND ((~ (rt1.c3)))) DESC, (- (x'' COLLATE NOCASE)) INTERSECT SELECT ALL * FROM rt1 WHERE ('610252571') ORDER BY (((rt1.c2 IN (rt1.c2, rt1.c5))) NOT BETWEEN (((rt1.c3) IS TRUE)) AND ((~ (rt1.c3)))) DESC, (- (x'' COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE WHEN '1173830580' THEN ((t0.c2)IS NOT(t0.c4)) ELSE ((rt1.c3)LIKE(rt1.c4)) END) ORDER BY 'z'  NULLS LAST, ((CASE WHEN rt1.c5 THEN t0.c3 WHEN t0.c4 THEN rt1.c5 WHEN t0.c0 THEN rt1.c6 END) NOT BETWEEN (0.5349723149481403) AND (((((((((((rt1.c3)OR(t0.c3)))OR(rt1.c5)))OR(t0.c0)))AND(rt1.c4)))OR(rt1.c3)))), CASE WHEN CASE WHEN NULL THEN t0.c2 END THEN CASE t0.c3  WHEN t0.c3 THEN rt1.c0 END WHEN (rt1.c0 IN (rt1.c4)) THEN (('-1314074616') NOT NULL) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((CASE WHEN '1173830580' THEN ((t0.c2)IS NOT(t0.c4)) ELSE ((rt1.c3)LIKE(rt1.c4)) END)AND(((((rt1.c1) IS FALSE)) BETWEEN (rt1.c2 COLLATE RTRIM) AND (((rt1.c3)IS NOT(t0.c1))))))) ORDER BY 'z'  NULLS LAST, ((CASE WHEN rt1.c5 THEN t0.c3 WHEN t0.c4 THEN rt1.c5 WHEN t0.c0 THEN rt1.c6 END) NOT BETWEEN (0.5349723149481403) AND (((((((((((rt1.c3)OR(t0.c3)))OR(rt1.c5)))OR(t0.c0)))AND(rt1.c4)))OR(rt1.c3)))), CASE WHEN CASE WHEN NULL THEN t0.c2 END THEN CASE t0.c3  WHEN t0.c3 THEN rt1.c0 END WHEN (rt1.c0 IN (rt1.c4)) THEN (('-1314074616') NOT NULL) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3 COLLATE RTRIM) NOT NULL)) ORDER BY INSTR(rt1.c5 COLLATE BINARY, (rt1.c3 IN (rt1.c6))), ((x'95782298ea') NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3 COLLATE RTRIM) NOT NULL)) ORDER BY INSTR(rt1.c5 COLLATE BINARY, (rt1.c3 IN (rt1.c6))), ((x'95782298ea') NOT NULL) DESC  NULLS LAST;
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE (CASE CAST(rt1.c1 AS BLOB)  WHEN (- (rt1.c5)) THEN rt1.c1 COLLATE BINARY WHEN (rt1.c1 IN (rt1.c5)) THEN rt1.c4 ELSE x'ce' END);
SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE (CASE CAST(rt1.c1 AS BLOB)  WHEN (- (rt1.c5)) THEN rt1.c1 COLLATE BINARY WHEN (rt1.c1 IN (rt1.c5)) THEN rt1.c4 ELSE x'ce' END) LIMIT 1 INTERSECT SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE ((((((((('-368242246') BETWEEN (rt1.c3) AND (rt1.c5)))OR(LENGTH(rt1.c4))))OR(UNLIKELY(rt1.c6))))OR(x'dc99'))) LIMIT 0X1;
SELECT ALL MAX(t0.c2) FROM t0 WHERE ((((- (t0.c3)))<<(CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c1 THEN t0.c1 ELSE t0.c4 END))) ORDER BY ((((((((t0.c2) ISNULL))AND(t0.c3)))AND((~ (x'')))))AND((NOT (t0.c4)))) ASC  NULLS FIRST;
SELECT MAX(t0.c2) FROM t0 WHERE ((((- (t0.c3)))<<(CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c1 THEN t0.c1 ELSE t0.c4 END))) ORDER BY ((((((((t0.c2) ISNULL))AND(t0.c3)))AND((~ (x'')))))AND((NOT (t0.c4)))) ASC  NULLS FIRST LIMIT 1;
SELECT MAX(rt1.c1) FROM t0, rt1 WHERE (((t0.c3)==(rt1.c3)) COLLATE NOCASE) ORDER BY ((LOWER(DISTINCT rt1.c0)) ISNULL)  NULLS FIRST, CAST(CASE WHEN t0.c0 THEN rt1.c4 END AS BLOB);
SELECT DISTINCT MAX(rt1.c1) FROM t0, rt1 WHERE (((t0.c3)==(rt1.c3)) COLLATE NOCASE) ORDER BY ((CAST(t0.c0 AS BLOB)) IS FALSE)  NULLS FIRST, ABS(DISTINCT CASE WHEN rt1.c6 THEN rt1.c0 WHEN -6.95794534E8 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE (((x'7c1696')-((((t0.c4))>((rt1.c6)))))) ORDER BY ((((rt1.c0)%(rt1.c4))) NOTNULL), (((((((((((t0.c0)AND(t0.c0)))AND(rt1.c2)))OR(t0.c4)))OR(t0.c2)))OR(rt1.c2)) IN (((t0.c2)GLOB(rt1.c4)))) DESC;
SELECT * FROM rt1, t0 WHERE (((((x'7c1696')-((((t0.c4))>((rt1.c6))))))AND((((t0.c3) NOT NULL) IN ())))) ORDER BY ((((rt1.c0)%(rt1.c4))) NOTNULL), (((((((((((t0.c0)AND(t0.c0)))AND(rt1.c2)))OR(t0.c4)))OR(t0.c2)))OR(rt1.c2)) IN (((t0.c2)GLOB(rt1.c4)))) DESC INTERSECT SELECT * FROM rt1, t0 WHERE (rt1.c6) ORDER BY ((((rt1.c0)%(rt1.c4))) NOTNULL), (((((((((((t0.c0)AND(t0.c0)))AND(rt1.c2)))OR(t0.c4)))OR(t0.c2)))OR(rt1.c2)) IN (((t0.c2)GLOB(rt1.c4)))) DESC;
SELECT ALL * FROM rt1, t0 WHERE (((x'7c1696')-((((t0.c4))>((rt1.c6)))))) ORDER BY ((((rt1.c0)%(rt1.c4))) NOTNULL), (((((((((((t0.c0)AND(t0.c0)))AND(rt1.c2)))OR(t0.c4)))OR(t0.c2)))OR(rt1.c2)) IN (((t0.c2)GLOB(rt1.c4)))) DESC;
SELECT * FROM rt1, t0 WHERE (((((x'7c1696')-((((t0.c4))>((rt1.c6))))))AND((((t0.c3) NOT NULL) IN ())))) ORDER BY ((((rt1.c0)%(rt1.c4))) NOTNULL), (((((((((((t0.c0)AND(t0.c0)))AND(rt1.c2)))OR(t0.c4)))OR(t0.c2)))OR(rt1.c2)) IN (((t0.c2)GLOB(rt1.c4)))) DESC INTERSECT SELECT * FROM rt1, t0 WHERE (rt1.c6) ORDER BY ((((rt1.c0)%(rt1.c4))) NOTNULL), (((((((((((t0.c0)AND(t0.c0)))AND(rt1.c2)))OR(t0.c4)))OR(t0.c2)))OR(rt1.c2)) IN (((t0.c2)GLOB(rt1.c4)))) DESC;
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE (rt1.c0);
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE (rt1.c0) INTERSECT SELECT ALL MIN(rt1.c6) FROM rt1 WHERE ((+ (((rt1.c0) IS TRUE))));
SELECT * FROM t0 WHERE (t0.c1);
SELECT ALL * FROM t0 WHERE (((t0.c1)AND(((((x'') IS TRUE))+((+ (t0.c4))))))) LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c3)|(t0.c1))) ISNULL)) LIMIT 0;
SELECT * FROM t0 WHERE (t0.c1);
SELECT ALL * FROM t0 WHERE (((t0.c1)AND(((((x'') IS TRUE))+((+ (t0.c4))))))) LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c3)|(t0.c1))) ISNULL)) LIMIT 0;
SELECT ALL MIN(t0.c4) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (NULL) AND (t0.c4))) IS TRUE));
SELECT DISTINCT MIN(t0.c4) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (NULL) AND (t0.c4))) IS TRUE));
SELECT * FROM rt1, t0 WHERE (((((rt1.c4 COLLATE BINARY)OR((((rt1.c6, rt1.c6))>((rt1.c2, NULL))))))OR(((t0.c3)-(t0.c0))))) ORDER BY ((((rt1.c1 COLLATE BINARY)OR(CAST(rt1.c6 AS BLOB))))OR(((((((t0.c1)OR(0.9835504808240825)))OR(0Xffffffffc665c169)))OR(t0.c2))))  NULLS FIRST, ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)))AND((~ (rt1.c5)))))AND(((((((t0.c2)OR(rt1.c6)))AND(rt1.c2)))AND(rt1.c1)))) DESC  NULLS FIRST, CAST((rt1.c6 IN ()) AS TEXT)  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (((((rt1.c4 COLLATE BINARY)OR((((rt1.c6, rt1.c6))>((rt1.c2, NULL))))))OR(((t0.c3)-(t0.c0))))) ORDER BY STRFTIME(CAST(0xffffffffe01f5627 AS BLOB), rt1.c4 COLLATE NOCASE, (((NULL))>=((rt1.c3))), CAST(0Xfffffffff92f8487 AS NUMERIC))  NULLS LAST, (((LIKELIHOOD(rt1.c1, '-1270005712'), (((rt1.c3, t0.c1, t0.c4, rt1.c5))<=((rt1.c3, t0.c4, rt1.c5, rt1.c1))), ((((t0.c3)OR(rt1.c2)))AND(t0.c2)), ((t0.c2)-(t0.c0))))<=((rt1.c1 COLLATE NOCASE, (t0.c1 IN ()), CASE rt1.c0  WHEN '*pm*yD3FG' THEN rt1.c1 WHEN rt1.c1 THEN t0.c4 END, ((t0.c4) BETWEEN (rt1.c3) AND (t0.c4))))) INTERSECT SELECT * FROM rt1, t0 WHERE (((t0.c2) BETWEEN (((t0.c2) IS TRUE)) AND (CASE rt1.c3  WHEN t0.c3 THEN x'5c25' WHEN t0.c4 THEN rt1.c0 END))) ORDER BY STRFTIME(CAST(0Xffffffffe01f5627 AS BLOB), rt1.c4 COLLATE NOCASE, (((NULL))>=((rt1.c3))), CAST(0xfffffffff92f8487 AS NUMERIC))  NULLS LAST, (((LIKELIHOOD(rt1.c1, '-1270005712'), (((rt1.c3, t0.c1, t0.c4, rt1.c5))<=((rt1.c3, t0.c4, rt1.c5, rt1.c1))), ((((t0.c3)OR(rt1.c2)))AND(t0.c2)), ((t0.c2)-(t0.c0))))<=((rt1.c1 COLLATE NOCASE, (t0.c1 IN ()), CASE rt1.c0  WHEN '*pm*yD3FG' THEN rt1.c1 WHEN rt1.c1 THEN t0.c4 END, ((t0.c4) BETWEEN (rt1.c3) AND (t0.c4)))));
SELECT * FROM rt1, t0 WHERE (((((rt1.c4 COLLATE BINARY)OR((((rt1.c6, rt1.c6))>((rt1.c2, NULL))))))OR(((t0.c3)-(t0.c0))))) ORDER BY ((((rt1.c1 COLLATE BINARY)OR(CAST(rt1.c6 AS BLOB))))OR(((((((t0.c1)OR(0.9835504808240825)))OR(0Xffffffffc665c169)))OR(t0.c2))))  NULLS FIRST, ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)))AND((~ (rt1.c5)))))AND(((((((t0.c2)OR(rt1.c6)))AND(rt1.c2)))AND(rt1.c1)))) DESC  NULLS FIRST, CAST((rt1.c6 IN ()) AS TEXT)  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (((((rt1.c4 COLLATE BINARY)OR((((rt1.c6, rt1.c6))>((rt1.c2, NULL))))))OR(((t0.c3)-(t0.c0))))) ORDER BY STRFTIME(CAST(0xffffffffe01f5627 AS BLOB), rt1.c4 COLLATE NOCASE, (((NULL))>=((rt1.c3))), CAST(0Xfffffffff92f8487 AS NUMERIC))  NULLS LAST, (((LIKELIHOOD(rt1.c1, '-1270005712'), (((rt1.c3, t0.c1, t0.c4, rt1.c5))<=((rt1.c3, t0.c4, rt1.c5, rt1.c1))), ((((t0.c3)OR(rt1.c2)))AND(t0.c2)), ((t0.c2)-(t0.c0))))<=((rt1.c1 COLLATE NOCASE, (t0.c1 IN ()), CASE rt1.c0  WHEN '*pm*yD3FG' THEN rt1.c1 WHEN rt1.c1 THEN t0.c4 END, ((t0.c4) BETWEEN (rt1.c3) AND (t0.c4))))) INTERSECT SELECT * FROM rt1, t0 WHERE (((t0.c2) BETWEEN (((t0.c2) IS TRUE)) AND (CASE rt1.c3  WHEN t0.c3 THEN x'5c25' WHEN t0.c4 THEN rt1.c0 END))) ORDER BY STRFTIME(CAST(0Xffffffffe01f5627 AS BLOB), rt1.c4 COLLATE NOCASE, (((NULL))>=((rt1.c3))), CAST(0xfffffffff92f8487 AS NUMERIC))  NULLS LAST, (((LIKELIHOOD(rt1.c1, '-1270005712'), (((rt1.c3, t0.c1, t0.c4, rt1.c5))<=((rt1.c3, t0.c4, rt1.c5, rt1.c1))), ((((t0.c3)OR(rt1.c2)))AND(t0.c2)), ((t0.c2)-(t0.c0))))<=((rt1.c1 COLLATE NOCASE, (t0.c1 IN ()), CASE rt1.c0  WHEN '*pm*yD3FG' THEN rt1.c1 WHEN rt1.c1 THEN t0.c4 END, ((t0.c4) BETWEEN (rt1.c3) AND (t0.c4)))));
SELECT ALL MAX(t0.c3) FROM t0 WHERE (((((t0.c0)+(t0.c0)))||(((((t0.c4)OR(t0.c1)))OR(t0.c0)))));
SELECT ALL MAX(t0.c3) FROM t0 WHERE (((((t0.c0)+(t0.c0)))||(((((t0.c4)OR(t0.c1)))OR(t0.c0))))) INTERSECT SELECT MAX(t0.c3) FROM t0 WHERE ((CAST(t0.c3 AS BLOB) IN (((t0.c4)-(t0.c3)), CASE WHEN t0.c4 THEN t0.c1 ELSE t0.c1 END, UPPER(DISTINCT x''))));
SELECT ALL * FROM t0 WHERE (CAST(t0.c2 AS INTEGER));
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c2 AS INTEGER))AND(((t0.c1) NOTNULL)))) LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((TOTAL_CHANGES()) NOT BETWEEN (CAST(t0.c3 AS REAL)) AND (((t0.c0) NOT NULL)))) LIMIT 3;
SELECT ALL * FROM t0 WHERE (CAST(t0.c2 AS INTEGER));
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c2 AS INTEGER))AND(((t0.c1) NOTNULL)))) LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((TOTAL_CHANGES()) NOT BETWEEN (CAST(t0.c3 AS REAL)) AND (((t0.c0) NOT NULL)))) LIMIT 3;
SELECT * FROM t0 INNER JOIN rt1 ON ((rt1.c6 COLLATE RTRIM) IS TRUE) WHERE (UNLIKELY(t0.c3) COLLATE NOCASE);
SELECT * FROM t0 INNER JOIN rt1 ON ((rt1.c6 COLLATE RTRIM) IS TRUE) WHERE (UNLIKELY(t0.c3) COLLATE NOCASE) ORDER BY (((rt1.c5, t0.c1)) NOT BETWEEN ((CAST(t0.c1 AS NUMERIC), ((rt1.c1) BETWEEN (t0.c3) AND (t0.c4)))) AND ((COALESCE(rt1.c4, rt1.c2, t0.c2, t0.c2, rt1.c4), (((t0.c0, t0.c1)) NOT BETWEEN ((rt1.c1, 0.9716844882224583)) AND ((rt1.c4, rt1.c5))))))  NULLS LAST, ABS(DISTINCT rt1.c5 COLLATE RTRIM)  NULLS FIRST, ((NULL)IS(0Xffffffffa9c9fef1)) LIMIT 0;
SELECT * FROM t0 INNER JOIN rt1 ON ((rt1.c6 COLLATE RTRIM) IS TRUE) WHERE (UNLIKELY(t0.c3) COLLATE NOCASE);
SELECT * FROM t0 INNER JOIN rt1 ON ((rt1.c6 COLLATE RTRIM) IS TRUE) WHERE (UNLIKELY(t0.c3) COLLATE NOCASE) ORDER BY (((rt1.c5, t0.c1)) NOT BETWEEN ((CAST(t0.c1 AS NUMERIC), ((rt1.c1) BETWEEN (t0.c3) AND (t0.c4)))) AND ((COALESCE(rt1.c4, rt1.c2, t0.c2, t0.c2, rt1.c4), (((t0.c0, t0.c1)) NOT BETWEEN ((rt1.c1, 0.9716844882224583)) AND ((rt1.c4, rt1.c5))))))  NULLS LAST, ABS(DISTINCT rt1.c5 COLLATE RTRIM)  NULLS FIRST, ((NULL)IS(0Xffffffffa9c9fef1)) LIMIT 0;
SELECT ALL MIN(t0.c4) FROM t0 WHERE (CASE WHEN t0.c3 COLLATE RTRIM THEN UNLIKELY(DISTINCT t0.c0) END) ORDER BY ((((((((((t0.c2) BETWEEN (t0.c2) AND (t0.c4)))AND(((t0.c3)GLOB(t0.c3)))))AND(CASE WHEN t0.c1 THEN t0.c0 END)))OR(t0.c1 COLLATE NOCASE)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c3)))) DESC  NULLS LAST, ((1.633093055E9)%(((((((t0.c0)OR(t0.c1)))OR(t0.c0)))AND('-1303479658'))))  NULLS FIRST;
SELECT DISTINCT MIN(t0.c4) FROM t0 WHERE (((CASE WHEN t0.c3 COLLATE RTRIM THEN UNLIKELY(DISTINCT t0.c0) END)AND(x''))) ORDER BY ((((((((((((((((x'')OR(t0.c0)))OR(t0.c4)))AND(CASE t0.c4  WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c4 THEN t0.c1 ELSE t0.c4 END)))AND(t0.c0)))OR(t0.c1)))AND(((t0.c0) ISNULL))))AND(((0.673012959488207)<=(t0.c4)))))AND((NOT (t0.c4)))) DESC, CAST((+ (t0.c0)) AS INTEGER) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(t0.c4) FROM t0 WHERE (CAST((- (t0.c3)) AS REAL)) ORDER BY ((((((((((((((((x'')OR(t0.c0)))OR(t0.c4)))AND(CASE t0.c4  WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c4 THEN t0.c1 ELSE t0.c4 END)))AND(t0.c0)))OR(t0.c1)))AND(((t0.c0) ISNULL))))AND(((0.673012959488207)<=(t0.c4)))))AND((NOT (t0.c4)))) DESC, CAST((+ (t0.c0)) AS INTEGER) DESC LIMIT 0;
SELECT * FROM t0 WHERE (((((t0.c1) ISNULL))=(CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c4 END))) ORDER BY ((CAST(t0.c4 AS BLOB)) IS TRUE);
SELECT * FROM t0 WHERE (((((t0.c1) ISNULL))==(CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c4 END))) ORDER BY LIKELIHOOD(DISTINCT t0.c1, t0.c4) COLLATE NOCASE COLLATE NOCASE, t0.c4 INTERSECT SELECT ALL * FROM t0 WHERE (-1314074616) ORDER BY LIKELIHOOD(DISTINCT t0.c1, t0.c4) COLLATE NOCASE COLLATE NOCASE, t0.c4;
SELECT * FROM t0 WHERE (((((t0.c1) ISNULL))=(CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c4 END))) ORDER BY ((CAST(t0.c4 AS BLOB)) IS TRUE);
SELECT * FROM t0 WHERE (((((t0.c1) ISNULL))==(CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c4 END))) ORDER BY LIKELIHOOD(DISTINCT t0.c1, t0.c4) COLLATE NOCASE COLLATE NOCASE, t0.c4 INTERSECT SELECT ALL * FROM t0 WHERE (-1314074616) ORDER BY LIKELIHOOD(DISTINCT t0.c1, t0.c4) COLLATE NOCASE COLLATE NOCASE, t0.c4;
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c3)LIKE(t0.c3))) NOT BETWEEN ((~ ('-883143184'))) AND (((t0.c2) IS FALSE)))) ORDER BY ((t0.c2)<<(-1.170810712E9)) DESC  NULLS LAST, CASE WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0) IS FALSE) ELSE TRIM(t0.c4) END, ((((((t0.c3) ISNULL))AND((NOT ('')))))AND(CAST(t0.c1 AS TEXT)));
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c3)LIKE(t0.c3))) NOT BETWEEN ((~ ('-883143184'))) AND (((t0.c2) IS FALSE)))) ORDER BY ((((t0.c1)AND(t0.c3)))<<((+ (t0.c1))))  NULLS FIRST, (('f*')|(((t0.c4) BETWEEN (t0.c0) AND (t0.c1)))) ASC  NULLS LAST;
SELECT ALL MAX(t0.c3) FROM t0 WHERE ('-659412900');
SELECT MAX(t0.c3) FROM t0 WHERE ((('-659412900')AND((((((t0.c2) IS TRUE), ((t0.c0) ISNULL), ((t0.c3)>(t0.c2))))>((((((0.8143859891652997)OR(t0.c2)))OR(t0.c0)), ((t0.c0)OR(t0.c4)), ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))))))) INTERSECT SELECT ALL MAX(t0.c3) FROM t0 WHERE (((t0.c4 COLLATE BINARY)&(((t0.c4) BETWEEN (x'ae8c') AND (t0.c3)))));
SELECT * FROM rt1, t0 WHERE ((((rt1.c0)-(x'')) IN (((((rt1.c3)AND(rt1.c3)))AND(t0.c2)))));
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c0)-(x'')) IN (((((rt1.c3)AND(rt1.c3)))AND(t0.c2))))) ORDER BY (((t0.c4)) BETWEEN ((((t0.c2)<(t0.c3)))) AND ((TRIM(rt1.c5, rt1.c4)))) ASC LIMIT 0x0;
SELECT * FROM rt1, t0 WHERE ((((rt1.c0)-(x'')) IN (((((rt1.c3)AND(rt1.c3)))AND(t0.c2)))));
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c0)-(x'')) IN (((((rt1.c3)AND(rt1.c3)))AND(t0.c2))))) ORDER BY (((t0.c4)) BETWEEN ((((t0.c2)<(t0.c3)))) AND ((TRIM(rt1.c5, rt1.c4)))) ASC LIMIT 0x0;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c4) BETWEEN (t0.c1) AND (t0.c3))) IS FALSE));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((((((rt1.c4) BETWEEN (t0.c1) AND (t0.c3))) IS FALSE))AND(CAST(((((((t0.c0)AND(rt1.c2)))AND(rt1.c5)))OR(t0.c4)) AS NUMERIC)))) ORDER BY (((((rt1.c5 IN (rt1.c1, rt1.c5)))OR((((rt1.c2)) BETWEEN ((t0.c4)) AND ((t0.c0))))))OR(LIKELY(rt1.c5)))  NULLS FIRST;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c4) BETWEEN (t0.c1) AND (t0.c3))) IS FALSE));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((((((rt1.c4) BETWEEN (t0.c1) AND (t0.c3))) IS FALSE))AND(CAST(((((((t0.c0)AND(rt1.c2)))AND(rt1.c5)))OR(t0.c4)) AS NUMERIC)))) ORDER BY (((((rt1.c5 IN (rt1.c1, rt1.c5)))OR((((rt1.c2)) BETWEEN ((t0.c4)) AND ((t0.c0))))))OR(LIKELY(rt1.c5)))  NULLS FIRST;
SELECT ALL MIN(t0.c1) FROM t0, rt1 WHERE ((~ (CAST(rt1.c4 AS REAL)))) ORDER BY 0x57795cc2 ASC  NULLS LAST;
SELECT MIN(t0.c1) FROM t0, rt1 WHERE ((~ (CAST(rt1.c4 AS REAL)))) ORDER BY CAST(((((t0.c0)AND(t0.c3)))OR(t0.c3)) AS NUMERIC)  NULLS FIRST LIMIT 0X2;
SELECT * FROM rt1, t0 WHERE (NULL) ORDER BY (((rt1.c5, t0.c2, rt1.c3)) NOT BETWEEN ((((rt1.c0) NOT NULL), ((t0.c1)<<(rt1.c3)), CAST(t0.c3 AS TEXT))) AND ((((rt1.c1) IS TRUE), ((((((t0.c1)AND(t0.c1)))AND(rt1.c0)))AND(rt1.c6)), LIKELY(rt1.c3)))) DESC  NULLS FIRST, (NOT (((t0.c1) NOTNULL))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((NULL)AND(NULL COLLATE NOCASE))) ORDER BY CASE WHEN CAST(rt1.c6 AS INTEGER) THEN rt1.c3 WHEN ((t0.c0)/(rt1.c2)) THEN ((t0.c1) IS FALSE) ELSE CAST(rt1.c5 AS INTEGER) END ASC, ((((t0.c4 IN ())))<=(('>'))), ((((((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))OR(t0.c3)))AND(t0.c2)))AND(rt1.c4)))>=(CAST(rt1.c5 AS INTEGER))) LIMIT 1;
SELECT * FROM rt1, t0 WHERE (NULL) ORDER BY (((rt1.c5, t0.c2, rt1.c3)) NOT BETWEEN ((((rt1.c0) NOT NULL), ((t0.c1)<<(rt1.c3)), CAST(t0.c3 AS TEXT))) AND ((((rt1.c1) IS TRUE), ((((((t0.c1)AND(t0.c1)))AND(rt1.c0)))AND(rt1.c6)), LIKELY(rt1.c3)))) DESC  NULLS FIRST, (NOT (((t0.c1) NOTNULL))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((NULL)AND(NULL COLLATE NOCASE))) ORDER BY CASE WHEN CAST(rt1.c6 AS INTEGER) THEN rt1.c3 WHEN ((t0.c0)/(rt1.c2)) THEN ((t0.c1) IS FALSE) ELSE CAST(rt1.c5 AS INTEGER) END ASC, ((((t0.c4 IN ())))<=(('>'))), ((((((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))OR(t0.c3)))AND(t0.c2)))AND(rt1.c4)))>=(CAST(rt1.c5 AS INTEGER))) LIMIT 1;
SELECT MAX(t0.c0) FROM rt1, t0 WHERE (json_type(rt1.c3)) ORDER BY CASE WHEN ((rt1.c4)>=(t0.c3)) THEN (- (t0.c3)) END DESC, (NOT (ABS(t0.c4))) DESC;
SELECT MAX(t0.c0) FROM rt1 NOT INDEXED, t0 WHERE (json_type(rt1.c3)) ORDER BY ((((x'')>=(rt1.c4))) ISNULL) ASC  NULLS LAST, ((t0.c0)%(((rt1.c0) BETWEEN (t0.c4) AND (t0.c0)))) DESC  NULLS LAST, ((((rt1.c2) NOT BETWEEN (rt1.c5) AND (t0.c3))) IS TRUE)  NULLS FIRST INTERSECT SELECT MAX(t0.c0) FROM rt1, t0 WHERE (rt1.c6) ORDER BY ((((x'')>=(rt1.c4))) ISNULL) ASC  NULLS LAST, ((t0.c0)%(((rt1.c0) BETWEEN (t0.c4) AND (t0.c0)))) DESC  NULLS LAST, ((((rt1.c2) NOT BETWEEN (rt1.c5) AND (t0.c3))) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (((t0.c4 COLLATE BINARY) NOT BETWEEN (t0.c0) AND ((t0.c0 IN ()))));
SELECT DISTINCT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (((((t0.c4 COLLATE BINARY) NOT BETWEEN (t0.c0) AND ((t0.c0 IN ()))))AND(x''))) ORDER BY t0.c3 ASC;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c0)*(rt1.c4)))>>(LIKELIHOOD(t0.c0, t0.c1))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c0)*(rt1.c4)))>>(LIKELIHOOD(t0.c0, t0.c1))));
SELECT * FROM t0 WHERE (CAST(CAST(t0.c2 AS REAL) AS TEXT)) ORDER BY TYPEOF(DISTINCT CAST(t0.c0 AS BLOB)) ASC;
SELECT * FROM t0 WHERE (CAST(CAST(t0.c2 AS REAL) AS TEXT)) ORDER BY TYPEOF(DISTINCT CAST(t0.c0 AS BLOB)) ASC INTERSECT SELECT ALL * FROM t0 WHERE ((- ((NOT (0.9280613245248974))))) ORDER BY TYPEOF(DISTINCT CAST(t0.c0 AS BLOB)) ASC;
SELECT * FROM t0 WHERE (CAST(CAST(t0.c2 AS REAL) AS TEXT)) ORDER BY TYPEOF(DISTINCT CAST(t0.c0 AS BLOB)) ASC;
SELECT * FROM t0 WHERE (CAST(CAST(t0.c2 AS REAL) AS TEXT)) ORDER BY TYPEOF(DISTINCT CAST(t0.c0 AS BLOB)) ASC INTERSECT SELECT ALL * FROM t0 WHERE ((- ((NOT (0.9280613245248974))))) ORDER BY TYPEOF(DISTINCT CAST(t0.c0 AS BLOB)) ASC;
SELECT * FROM t0, rt1 WHERE (x'799efc') ORDER BY ((HEX(rt1.c5))%(rt1.c2 COLLATE NOCASE)) DESC, ((((((((((t0.c2)AND(rt1.c4)))AND(t0.c2)))OR(rt1.c6)))AND(NULL))) BETWEEN (((t0.c0)||(rt1.c5))) AND ((t0.c3 IN (NULL, rt1.c1)))) ASC;
SELECT DISTINCT * FROM t0, rt1 WHERE (((x'799efc')AND((((t0.c3)) BETWEEN ((((t0.c1)IS NOT('a')))) AND ((t0.c1)))))) ORDER BY (((((t0.c2 IN ()))AND(rt1.c3)))OR((t0.c1 IN ()))) ASC  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (x'799efc') ORDER BY ((HEX(rt1.c5))%(rt1.c2 COLLATE NOCASE)) DESC, ((((((((((t0.c2)AND(rt1.c4)))AND(t0.c2)))OR(rt1.c6)))AND(NULL))) BETWEEN (((t0.c0)||(rt1.c5))) AND ((t0.c3 IN (NULL, rt1.c1)))) ASC;
SELECT DISTINCT * FROM t0, rt1 WHERE (((x'799efc')AND((((t0.c3)) BETWEEN ((((t0.c1)IS NOT('a')))) AND ((t0.c1)))))) ORDER BY (((((t0.c2 IN ()))AND(rt1.c3)))OR((t0.c1 IN ()))) ASC  NULLS LAST;
SELECT ALL MAX(rt1.c6) FROM rt1 WHERE ((('-0.0') NOT NULL)) ORDER BY ((((rt1.c4) IS FALSE))<(CASE rt1.c4  WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c0 END));
SELECT MAX(rt1.c6) FROM rt1 WHERE ((((('-0.0') NOT NULL))AND(((((rt1.c4)OR('/')))AND(((rt1.c6) NOT NULL)))))) ORDER BY ((((rt1.c4) IS FALSE))<(CASE rt1.c4  WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c0 END)) INTERSECT SELECT ALL MAX(rt1.c6) FROM rt1 WHERE (((((((rt1.c6)AND('஘686')))AND(rt1.c6)))OR(rt1.c4)) COLLATE RTRIM) ORDER BY ((((rt1.c4) IS FALSE))<(CASE rt1.c4  WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c0 END));
SELECT COUNT(*) FROM rt1, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c4 WHEN rt1.c4 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 WHEN t0.c1 THEN rt1.c6 ELSE t0.c1 END) NOT BETWEEN (((rt1.c4)>>(rt1.c1))) AND (''))) ORDER BY CASE rt1.c5  WHEN ((((((((t0.c0)OR(rt1.c6)))OR(rt1.c5)))AND(t0.c1)))OR(rt1.c2)) THEN (t0.c0 IN (rt1.c3)) ELSE CAST(rt1.c4 AS INTEGER) END  NULLS FIRST, 1501009154;
SELECT COUNT(*) FROM rt1, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c4 WHEN rt1.c4 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 WHEN t0.c1 THEN rt1.c6 ELSE t0.c1 END) NOT BETWEEN (((rt1.c4)>>(rt1.c1))) AND (''))) ORDER BY CAST(IFNULL(DISTINCT rt1.c6, t0.c1) AS NUMERIC), (((t0.c3)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c4) AND (rt1.c4)))) AND ((t0.c3)))  NULLS FIRST LIMIT 0x1;
SELECT MAX(t0.c4) FROM t0 WHERE (json_array_length(t0.c0, NULL) COLLATE NOCASE);
SELECT DISTINCT MAX(t0.c4) FROM t0 WHERE (((json_array_length(t0.c0, NULL) COLLATE NOCASE)AND(((t0.c3)<(t0.c2)) COLLATE BINARY)));
SELECT ALL * FROM rt1, t0 WHERE (((((((((((((t0.c1)OR(rt1.c4)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c6)))>=(t0.c1 COLLATE NOCASE))) ORDER BY (((((rt1.c0) BETWEEN (rt1.c5) AND ('-764108922')), rt1.c4 COLLATE NOCASE))!=(((((t0.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1))), (('-1667285998') BETWEEN (0.6582575926668529) AND (t0.c1))))), (NOT (rt1.c4)) ASC, NULL;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((((((((t0.c1)OR(rt1.c4)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c6)))>=(t0.c1 COLLATE NOCASE)))AND((~ (t0.c2)) COLLATE BINARY))) ORDER BY (((((rt1.c0) BETWEEN (rt1.c5) AND ('-764108922')), rt1.c4 COLLATE NOCASE))!=(((((t0.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1))), (('-1667285998') BETWEEN (0.6582575926668529) AND (t0.c1))))), (NOT (rt1.c4)) ASC, NULL INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((rt1.c0 COLLATE RTRIM))>((UNLIKELY(0X53952b5b))))) ORDER BY (((((rt1.c0) BETWEEN (rt1.c5) AND ('-764108922')), rt1.c4 COLLATE NOCASE))!=(((((t0.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1))), (('-1667285998') BETWEEN (0.6582575926668529) AND (t0.c1))))), (NOT (rt1.c4)) ASC, NULL;
SELECT ALL * FROM rt1, t0 WHERE (((((((((((((t0.c1)OR(rt1.c4)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c6)))>=(t0.c1 COLLATE NOCASE))) ORDER BY (((((rt1.c0) BETWEEN (rt1.c5) AND ('-764108922')), rt1.c4 COLLATE NOCASE))!=(((((t0.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1))), (('-1667285998') BETWEEN (0.6582575926668529) AND (t0.c1))))), (NOT (rt1.c4)) ASC, NULL;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((((((((t0.c1)OR(rt1.c4)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c6)))>=(t0.c1 COLLATE NOCASE)))AND((~ (t0.c2)) COLLATE BINARY))) ORDER BY (((((rt1.c0) BETWEEN (rt1.c5) AND ('-764108922')), rt1.c4 COLLATE NOCASE))!=(((((t0.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1))), (('-1667285998') BETWEEN (0.6582575926668529) AND (t0.c1))))), (NOT (rt1.c4)) ASC, NULL INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((rt1.c0 COLLATE RTRIM))>((UNLIKELY(0X53952b5b))))) ORDER BY (((((rt1.c0) BETWEEN (rt1.c5) AND ('-764108922')), rt1.c4 COLLATE NOCASE))!=(((((t0.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1))), (('-1667285998') BETWEEN (0.6582575926668529) AND (t0.c1))))), (NOT (rt1.c4)) ASC, NULL;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (NULL);
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((NULL)AND(CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c6 WHEN t0.c4 THEN t0.c1 WHEN t0.c2 THEN rt1.c4 END  WHEN t0.c4 THEN ((rt1.c3)IS(t0.c0)) ELSE ((((t0.c1)OR(rt1.c1)))AND(rt1.c1)) END))) ORDER BY ((((t0.c0) BETWEEN (rt1.c2) AND (t0.c2)))&((rt1.c5 IN ()))) ASC  NULLS FIRST, (((t0.c2)) BETWEEN ((load_extension(t0.c4))) AND ((t0.c2))), NULL COLLATE RTRIM  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((((t0.c1)OR(rt1.c2)))AND(t0.c2)) COLLATE BINARY) ORDER BY ((((t0.c0) BETWEEN (rt1.c2) AND (t0.c2)))&((rt1.c5 IN ()))) ASC  NULLS FIRST, (((t0.c2)) BETWEEN ((load_extension(t0.c4))) AND ((t0.c2))), NULL COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (((((((rt1.c3 COLLATE BINARY)AND((((t0.c2, t0.c4)) NOT BETWEEN (('~D闀iBz&', rt1.c4)) AND ((t0.c4, t0.c4))))))AND(CAST(rt1.c6 AS REAL))))OR(CAST(rt1.c6 AS TEXT)))) ORDER BY (((rt1.c3 IN (t0.c1, t0.c2))) NOT BETWEEN (((rt1.c0)/(t0.c0))) AND (t0.c4 COLLATE NOCASE)) DESC  NULLS LAST, CAST(highlight(t0.c4, rt1.c4, 0.9769913813026969, rt1.c4) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (((((((rt1.c3 COLLATE BINARY)AND((((t0.c2, t0.c4)) NOT BETWEEN (('~D闀iBz&', rt1.c4)) AND ((t0.c4, t0.c4))))))AND(CAST(rt1.c6 AS REAL))))OR(CAST(rt1.c6 AS TEXT)))) ORDER BY (((rt1.c3 IN (t0.c1, t0.c2))) NOT BETWEEN (((rt1.c0)/(t0.c0))) AND (t0.c4 COLLATE NOCASE)) DESC  NULLS LAST, CAST(highlight(t0.c4, rt1.c4, 0.9769913813026969, rt1.c4) AS NUMERIC)  NULLS FIRST LIMIT 0X1 INTERSECT SELECT * FROM t0, rt1 WHERE (((((rt1.c3)>(t0.c4))) BETWEEN (((t0.c2) IS TRUE)) AND ((rt1.c6 IN ())))) ORDER BY (((rt1.c3 IN (t0.c1, t0.c2))) NOT BETWEEN (((rt1.c0)/(t0.c0))) AND (t0.c4 COLLATE NOCASE)) DESC  NULLS LAST, CAST(highlight(t0.c4, rt1.c4, 0.9769913813026969, rt1.c4) AS NUMERIC)  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t0, rt1 WHERE (((((((rt1.c3 COLLATE BINARY)AND((((t0.c2, t0.c4)) NOT BETWEEN (('~D闀iBz&', rt1.c4)) AND ((t0.c4, t0.c4))))))AND(CAST(rt1.c6 AS REAL))))OR(CAST(rt1.c6 AS TEXT)))) ORDER BY (((rt1.c3 IN (t0.c1, t0.c2))) NOT BETWEEN (((rt1.c0)/(t0.c0))) AND (t0.c4 COLLATE NOCASE)) DESC  NULLS LAST, CAST(highlight(t0.c4, rt1.c4, 0.9769913813026969, rt1.c4) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (((((((rt1.c3 COLLATE BINARY)AND((((t0.c2, t0.c4)) NOT BETWEEN (('~D闀iBz&', rt1.c4)) AND ((t0.c4, t0.c4))))))AND(CAST(rt1.c6 AS REAL))))OR(CAST(rt1.c6 AS TEXT)))) ORDER BY (((rt1.c3 IN (t0.c1, t0.c2))) NOT BETWEEN (((rt1.c0)/(t0.c0))) AND (t0.c4 COLLATE NOCASE)) DESC  NULLS LAST, CAST(highlight(t0.c4, rt1.c4, 0.9769913813026969, rt1.c4) AS NUMERIC)  NULLS FIRST LIMIT 0X1 INTERSECT SELECT * FROM t0, rt1 WHERE (((((rt1.c3)>(t0.c4))) BETWEEN (((t0.c2) IS TRUE)) AND ((rt1.c6 IN ())))) ORDER BY (((rt1.c3 IN (t0.c1, t0.c2))) NOT BETWEEN (((rt1.c0)/(t0.c0))) AND (t0.c4 COLLATE NOCASE)) DESC  NULLS LAST, CAST(highlight(t0.c4, rt1.c4, 0.9769913813026969, rt1.c4) AS NUMERIC)  NULLS FIRST LIMIT 0X1;
SELECT MAX(rt1.c1) FROM rt1 WHERE (rt1.c2) ORDER BY ((((rt1.c4)>>(rt1.c0))) NOT NULL)  NULLS LAST, (((rt1.c5)) NOT BETWEEN ((((rt1.c3) BETWEEN (0.10923247719482243) AND (rt1.c2)))) AND ((rt1.c2 COLLATE RTRIM))) ASC  NULLS LAST, (('-1023487409' IN (rt1.c3, rt1.c0)) IN (((((((rt1.c5)AND(rt1.c6)))AND(rt1.c0)))OR(rt1.c4)), (rt1.c1 IN ())));
SELECT DISTINCT MAX(rt1.c1) FROM rt1 WHERE (rt1.c2) ORDER BY ((((rt1.c4)>>(rt1.c0))) NOT NULL)  NULLS LAST, (((rt1.c5)) NOT BETWEEN ((((rt1.c3) BETWEEN (0.10923247719482243) AND (rt1.c2)))) AND ((rt1.c2 COLLATE RTRIM))) ASC  NULLS LAST, (('-1023487409' IN (rt1.c3, rt1.c0)) IN (((((((rt1.c5)AND(rt1.c6)))AND(rt1.c0)))OR(rt1.c4)), (rt1.c1 IN ()))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt1.c1) FROM rt1 WHERE (((((rt1.c4, rt1.c1)) BETWEEN ((rt1.c5, rt1.c2)) AND ((rt1.c3, rt1.c1))) IN (CAST(rt1.c0 AS NUMERIC), ((rt1.c5)&(rt1.c4))))) ORDER BY ((((rt1.c4)>>(rt1.c0))) NOT NULL)  NULLS LAST, (((rt1.c5)) NOT BETWEEN ((((rt1.c3) BETWEEN (0.10923247719482243) AND (rt1.c2)))) AND ((rt1.c2 COLLATE RTRIM))) ASC  NULLS LAST, (('-1023487409' IN (rt1.c3, rt1.c0)) IN (((((((rt1.c5)AND(rt1.c6)))AND(rt1.c0)))OR(rt1.c4)), (rt1.c1 IN ()))) LIMIT 0;
SELECT MIN(t0.c3) FROM rt1 INNER JOIN t0 ON (ROUND(t0.c4, t0.c2) IN (t0.c2 COLLATE NOCASE, ((rt1.c5)<=(t0.c0)))) WHERE ((NOT (TRIM(t0.c2)))) ORDER BY ((1.787676078E9)IS(LOWER(t0.c2))) DESC, '-922802266'  NULLS FIRST, (((rt1.c5, t0.c1, rt1.c5, rt1.c3, rt1.c1, rt1.c3)) BETWEEN ((LIKELIHOOD(rt1.c0, rt1.c2), QUOTE(rt1.c0), ((t0.c0)=(t0.c4)), ((rt1.c3) NOT BETWEEN (rt1.c5) AND (t0.c2)), ((rt1.c5)+(rt1.c5)), (((t0.c4, t0.c4))>((t0.c2, rt1.c5))))) AND ((((rt1.c0)GLOB(x'71a8')), ((((((((t0.c3)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(t0.c4)), ((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c3)), ((t0.c3)-(t0.c2)), (NOT (rt1.c4)), (((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((rt1.c4))))));
SELECT MIN(t0.c3) FROM rt1 INNER JOIN t0 ON (ROUND(t0.c4, t0.c2) IN (t0.c2 COLLATE NOCASE, ((rt1.c5)<=(t0.c0)))) WHERE ((((NOT (TRIM(t0.c2))))AND((((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c2)) IN (((rt1.c2)+(rt1.c2)), ((rt1.c2) IS TRUE)))))) ORDER BY ((1.787676078E9)IS(LOWER(t0.c2))) DESC, '-922802266'  NULLS FIRST, (((rt1.c5, t0.c1, rt1.c5, rt1.c3, rt1.c1, rt1.c3)) BETWEEN ((LIKELIHOOD(rt1.c0, rt1.c2), QUOTE(rt1.c0), ((t0.c0)==(t0.c4)), ((rt1.c3) NOT BETWEEN (rt1.c5) AND (t0.c2)), ((rt1.c5)+(rt1.c5)), (((t0.c4, t0.c4))>((t0.c2, rt1.c5))))) AND ((((rt1.c0)GLOB(x'71a8')), ((((((((t0.c3)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(t0.c4)), ((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c3)), ((t0.c3)-(t0.c2)), (NOT (rt1.c4)), (((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((rt1.c4)))))) LIMIT 0X0;
SELECT MIN(rt1.c0) FROM rt1 WHERE (((((((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c5)))AND(((rt1.c3) BETWEEN (rt1.c6) AND (rt1.c4)))))OR(x'cf')))OR(CAST(rt1.c3 AS REAL))));
SELECT DISTINCT MIN(rt1.c0) FROM rt1 WHERE (((((((((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c5)))AND(((rt1.c3) BETWEEN (rt1.c6) AND (rt1.c4)))))OR(x'cf')))OR(CAST(rt1.c3 AS REAL))))AND(CAST(((rt1.c6)>(rt1.c0)) AS NUMERIC)))) ORDER BY '5AN' DESC, ((((rt1.c1) NOTNULL))AND(((((rt1.c6)OR(NULL)))OR(rt1.c1)))) DESC LIMIT 0 INTERSECT SELECT DISTINCT MIN(rt1.c0) FROM rt1 WHERE ((~ ((rt1.c2 IN (rt1.c2))))) ORDER BY '5AN' DESC, ((((rt1.c1) NOTNULL))AND(((((rt1.c6)OR(NULL)))OR(rt1.c1)))) DESC LIMIT 0X0;
SELECT ALL MAX(rt1.c0) FROM rt1 WHERE (CAST('1147367855' AS TEXT));
SELECT ALL MAX(rt1.c0) FROM rt1 WHERE (((CAST('1147367855' AS TEXT))AND(((((rt1.c6)<(rt1.c5))) NOT BETWEEN (x'457a03') AND ((rt1.c5 IN (rt1.c5, rt1.c1))))))) ORDER BY CASE rt1.c4 COLLATE RTRIM  WHEN ((((((((x'5bb0ce')OR(rt1.c3)))AND(rt1.c0)))OR(rt1.c4)))OR(rt1.c2)) THEN ((rt1.c3)|(rt1.c0)) WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c5 END THEN ((rt1.c5)*(rt1.c3)) WHEN (((x'1917', rt1.c0)) BETWEEN ((rt1.c5, 0.24499995241451877)) AND ((rt1.c2, rt1.c5))) THEN (rt1.c0 IN ()) WHEN CASE rt1.c2  WHEN rt1.c6 THEN rt1.c4 ELSE rt1.c0 END THEN (rt1.c1 IN (rt1.c0, rt1.c3)) WHEN ((rt1.c0) NOT NULL) THEN (rt1.c4 IN ()) WHEN (((rt1.c6, rt1.c4, rt1.c0, rt1.c2)) BETWEEN ((rt1.c6, rt1.c6, x'76', rt1.c4)) AND ((rt1.c5, rt1.c0, NULL, rt1.c6))) THEN (((rt1.c3, rt1.c1, rt1.c1))!=((rt1.c0, rt1.c5, rt1.c5))) END DESC  NULLS FIRST INTERSECT SELECT ALL MAX(rt1.c0) FROM rt1 WHERE (CAST((rt1.c3 IN ()) AS TEXT)) ORDER BY CASE rt1.c4 COLLATE RTRIM  WHEN ((((((((x'5bb0ce')OR(rt1.c3)))AND(rt1.c0)))OR(rt1.c4)))OR(rt1.c2)) THEN ((rt1.c3)|(rt1.c0)) WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c5 END THEN ((rt1.c5)*(rt1.c3)) WHEN (((x'1917', rt1.c0)) BETWEEN ((rt1.c5, 0.24499995241451877)) AND ((rt1.c2, rt1.c5))) THEN (rt1.c0 IN ()) WHEN CASE rt1.c2  WHEN rt1.c6 THEN rt1.c4 ELSE rt1.c0 END THEN (rt1.c1 IN (rt1.c0, rt1.c3)) WHEN ((rt1.c0) NOT NULL) THEN (rt1.c4 IN ()) WHEN (((rt1.c6, rt1.c4, rt1.c0, rt1.c2)) BETWEEN ((rt1.c6, rt1.c6, x'76', rt1.c4)) AND ((rt1.c5, rt1.c0, NULL, rt1.c6))) THEN (((rt1.c3, rt1.c1, rt1.c1))<>((rt1.c0, rt1.c5, rt1.c5))) END DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c4 COLLATE NOCASE) ORDER BY ((t0.c3)!=(t0.c1)) COLLATE BINARY, ((((t0.c4) IS FALSE))<(((t0.c0) NOT BETWEEN (t0.c4) AND (t0.c0))))  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c4 COLLATE NOCASE)AND(CASE WHEN t0.c3 COLLATE RTRIM THEN ((t0.c0) ISNULL) WHEN t0.c2 THEN ((t0.c4) IS FALSE) END))) ORDER BY ((t0.c3)!=(t0.c1)) COLLATE BINARY, ((((t0.c4) IS FALSE))<(((t0.c0) NOT BETWEEN (t0.c4) AND (t0.c0))))  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE (((((t0.c1)IS NOT(t0.c3))) NOT NULL)) ORDER BY ((t0.c3)!=(t0.c1)) COLLATE BINARY, ((((t0.c4) IS FALSE))<(((t0.c0) NOT BETWEEN (t0.c4) AND (t0.c0))))  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c4 COLLATE NOCASE) ORDER BY ((t0.c3)!=(t0.c1)) COLLATE BINARY, ((((t0.c4) IS FALSE))<(((t0.c0) NOT BETWEEN (t0.c4) AND (t0.c0))))  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c4 COLLATE NOCASE)AND(CASE WHEN t0.c3 COLLATE RTRIM THEN ((t0.c0) ISNULL) WHEN t0.c2 THEN ((t0.c4) IS FALSE) END))) ORDER BY ((t0.c3)!=(t0.c1)) COLLATE BINARY, ((((t0.c4) IS FALSE))<(((t0.c0) NOT BETWEEN (t0.c4) AND (t0.c0))))  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE (((((t0.c1)IS NOT(t0.c3))) NOT NULL)) ORDER BY ((t0.c3)!=(t0.c1)) COLLATE BINARY, ((((t0.c4) IS FALSE))<(((t0.c0) NOT BETWEEN (t0.c4) AND (t0.c0))))  NULLS FIRST;
SELECT * FROM rt1 WHERE (CASE WHEN ((rt1.c4) ISNULL) THEN (rt1.c6 IN (rt1.c0)) WHEN rt1.c5 THEN rt1.c2 COLLATE NOCASE WHEN (~ (rt1.c4)) THEN (((((('')AND(rt1.c5)))OR(rt1.c2)))AND(rt1.c6)) ELSE UPPER(rt1.c1) END) ORDER BY ((((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c5))) NOT NULL) ASC, (((x'17')LIKE('-1896338623')) IN ()) DESC  NULLS FIRST, rt1.c3 DESC;
SELECT ALL * FROM rt1 WHERE (((CASE WHEN ((rt1.c4) ISNULL) THEN (rt1.c6 IN (rt1.c0)) WHEN rt1.c5 THEN rt1.c2 COLLATE NOCASE WHEN (~ (rt1.c4)) THEN (((((('')AND(rt1.c5)))OR(rt1.c2)))AND(rt1.c6)) ELSE UPPER(rt1.c1) END)AND(((((((((0.8342854944246666)OR(rt1.c0)))AND((- (rt1.c6)))))OR(CAST(rt1.c0 AS BLOB))))AND(CASE rt1.c4  WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c4 ELSE -1.270526967E9 END))))) ORDER BY ((((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c5))) NOT NULL) ASC, (((x'17')LIKE('-1896338623')) IN ()) DESC  NULLS FIRST, rt1.c3 DESC LIMIT 0;
SELECT * FROM rt1 WHERE (CASE WHEN ((rt1.c4) ISNULL) THEN (rt1.c6 IN (rt1.c0)) WHEN rt1.c5 THEN rt1.c2 COLLATE NOCASE WHEN (~ (rt1.c4)) THEN (((((('')AND(rt1.c5)))OR(rt1.c2)))AND(rt1.c6)) ELSE UPPER(rt1.c1) END) ORDER BY ((((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c5))) NOT NULL) ASC, (((x'17')LIKE('-1896338623')) IN ()) DESC  NULLS FIRST, rt1.c3 DESC;
SELECT MIN(rt1.c4) FROM rt1 INNER JOIN t0 ON CAST((((t0.c3))>=((rt1.c6))) AS REAL) WHERE ((((- (t0.c0)))LIKE(((((((((t0.c3)AND(t0.c4)))OR(rt1.c4)))AND(t0.c2)))AND(t0.c0))))) ORDER BY (~ (HEX(DISTINCT rt1.c5))), t0.c0;
SELECT DISTINCT MIN(rt1.c4) FROM rt1 INNER JOIN t0 ON CAST((((t0.c3))>=((rt1.c6))) AS REAL) WHERE ((((((- (t0.c0)))LIKE(((((((((t0.c3)AND(t0.c4)))OR(rt1.c4)))AND(t0.c2)))AND(t0.c0)))))AND((((((rt1.c3)AND(rt1.c0)))OR(-368242246)) IN ())))) ORDER BY (~ (HEX(DISTINCT rt1.c5))), t0.c0;
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN CASE WHEN t0.c1 THEN rt1.c0 WHEN 'Q9*' THEN t0.c1 WHEN t0.c2 THEN t0.c0 END THEN CASE WHEN t0.c2 THEN t0.c3 WHEN rt1.c1 THEN rt1.c2 ELSE t0.c3 END WHEN ((t0.c3) NOT NULL) THEN (- (t0.c0)) WHEN rt1.c1 THEN ((((t0.c3)AND(rt1.c2)))AND(rt1.c0)) WHEN (((rt1.c2, t0.c3, rt1.c5, rt1.c1, t0.c0))==((rt1.c3, '㋫Ft', rt1.c5, rt1.c3, t0.c1))) THEN ((t0.c0)LIKE(rt1.c4)) END) ORDER BY (((t0.c2 COLLATE BINARY, ((rt1.c2)<(rt1.c2))))==(((~ (t0.c4)), CASE t0.c3  WHEN rt1.c1 THEN t0.c1 END))) ASC, '-1078089322', ((((rt1.c1, t0.c1, t0.c4, '0.385102292975251'))!=((t0.c3, t0.c4, rt1.c6, t0.c1))) IN ()) DESC  NULLS LAST, (+ ((rt1.c1 IN (rt1.c3, t0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 NOT INDEXED WHERE (CASE WHEN CASE WHEN t0.c1 THEN rt1.c0 WHEN 'Q9*' THEN t0.c1 WHEN t0.c2 THEN t0.c0 END THEN CASE WHEN t0.c2 THEN t0.c3 WHEN rt1.c1 THEN rt1.c2 ELSE t0.c3 END WHEN ((t0.c3) NOT NULL) THEN (- (t0.c0)) WHEN rt1.c1 THEN ((((t0.c3)AND(rt1.c2)))AND(rt1.c0)) WHEN (((rt1.c2, t0.c3, rt1.c5, rt1.c1, t0.c0))=((rt1.c3, '㋫Ft', rt1.c5, rt1.c3, t0.c1))) THEN ((t0.c0)LIKE(rt1.c4)) END) ORDER BY ((((t0.c1 IN ()), ((rt1.c5)<=(t0.c1)), ((rt1.c2)<<(x''))))!=((((rt1.c0)|(t0.c2)), (((x'f1')) BETWEEN ((rt1.c3)) AND ((t0.c4))), CAST(rt1.c5 AS BLOB))));
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN CASE WHEN t0.c1 THEN rt1.c0 WHEN 'Q9*' THEN t0.c1 WHEN t0.c2 THEN t0.c0 END THEN CASE WHEN t0.c2 THEN t0.c3 WHEN rt1.c1 THEN rt1.c2 ELSE t0.c3 END WHEN ((t0.c3) NOT NULL) THEN (- (t0.c0)) WHEN rt1.c1 THEN ((((t0.c3)AND(rt1.c2)))AND(rt1.c0)) WHEN (((rt1.c2, t0.c3, rt1.c5, rt1.c1, t0.c0))==((rt1.c3, '㋫Ft', rt1.c5, rt1.c3, t0.c1))) THEN ((t0.c0)LIKE(rt1.c4)) END) ORDER BY (((t0.c2 COLLATE BINARY, ((rt1.c2)<(rt1.c2))))==(((~ (t0.c4)), CASE t0.c3  WHEN rt1.c1 THEN t0.c1 END))) ASC, '-1078089322', ((((rt1.c1, t0.c1, t0.c4, '0.385102292975251'))!=((t0.c3, t0.c4, rt1.c6, t0.c1))) IN ()) DESC  NULLS LAST, (+ ((rt1.c1 IN (rt1.c3, t0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (((rt1.c3) IS TRUE) IN ()) WHERE (((LIKELY(rt1.c0)) BETWEEN ('-1408462137') AND (((t0.c1) ISNULL)))) ORDER BY (+ (CAST(t0.c4 AS BLOB))) DESC, LIKELY(t0.c4 COLLATE RTRIM) DESC;
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (((rt1.c3) IS TRUE) IN ()) WHERE (((((LIKELY(rt1.c0)) BETWEEN ('-1408462137') AND (((t0.c1) ISNULL))))AND(((t0.c3) NOTNULL)))) ORDER BY (+ (CAST(t0.c4 AS BLOB))) DESC, LIKELY(t0.c4 COLLATE RTRIM) DESC;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (((rt1.c3) IS TRUE) IN ()) WHERE (((LIKELY(rt1.c0)) BETWEEN ('-1408462137') AND (((t0.c1) ISNULL)))) ORDER BY (+ (CAST(t0.c4 AS BLOB))) DESC, LIKELY(t0.c4 COLLATE RTRIM) DESC;
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (((rt1.c3) IS TRUE) IN ()) WHERE (((((LIKELY(rt1.c0)) BETWEEN ('-1408462137') AND (((t0.c1) ISNULL))))AND(((t0.c3) NOTNULL)))) ORDER BY (+ (CAST(t0.c4 AS BLOB))) DESC, LIKELY(t0.c4 COLLATE RTRIM) DESC;
SELECT ALL MIN(t0.c2) FROM t0 WHERE (((((t0.c3)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ((((NULL)) BETWEEN ((t0.c2)) AND ((t0.c4))))));
SELECT DISTINCT MIN(t0.c2) FROM t0 WHERE (((((t0.c3)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ((((NULL)) BETWEEN ((t0.c2)) AND ((t0.c4)))))) ORDER BY rtreenode(t0.c0, ((((((t0.c1)OR(t0.c2)))OR(t0.c1)))AND(t0.c4)));
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c5)IS(rt1.c4)) THEN (- (rt1.c1)) ELSE CAST(rt1.c2 AS TEXT) END) ORDER BY highlight(NULL, ((rt1.c0) BETWEEN (rt1.c5) AND (rt1.c0)), SQLITE_VERSION(), ((rt1.c6)<(rt1.c5)))  NULLS FIRST, ((((('7K允', rt1.c4))>=((rt1.c4, rt1.c0))))*(((rt1.c1) ISNULL))) ASC, CAST(CASE WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c1 END AS NUMERIC)  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN ((rt1.c5)IS(rt1.c4)) THEN (- (rt1.c1)) ELSE CAST(rt1.c2 AS TEXT) END) ORDER BY highlight(NULL, ((rt1.c0) BETWEEN (rt1.c5) AND (rt1.c0)), SQLITE_VERSION(), ((rt1.c6)<(rt1.c5)))  NULLS FIRST, ((((('7K允', rt1.c4))>=((rt1.c4, rt1.c0))))*(((rt1.c1) ISNULL))) ASC, CAST(CASE WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c1 END AS NUMERIC)  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c6)||(0.19106802820707514)) IN ())) ORDER BY highlight(NULL, ((rt1.c0) BETWEEN (rt1.c5) AND (rt1.c0)), SQLITE_VERSION(), ((rt1.c6)<(rt1.c5)))  NULLS FIRST, ((((('7K允', rt1.c4))>=((rt1.c4, rt1.c0))))*(((rt1.c1) ISNULL))) ASC, CAST(CASE WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c1 END AS NUMERIC)  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c5)IS(rt1.c4)) THEN (- (rt1.c1)) ELSE CAST(rt1.c2 AS TEXT) END) ORDER BY highlight(NULL, ((rt1.c0) BETWEEN (rt1.c5) AND (rt1.c0)), SQLITE_VERSION(), ((rt1.c6)<(rt1.c5)))  NULLS FIRST, ((((('7K允', rt1.c4))>=((rt1.c4, rt1.c0))))*(((rt1.c1) ISNULL))) ASC, CAST(CASE WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c1 END AS NUMERIC)  NULLS FIRST;
SELECT MAX(t0.c1) FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c2)) BETWEEN (((rt1.c1 IN ()))) AND (((t0.c4 IN (t0.c1))))) WHERE (t0.c3) ORDER BY ((((rt1.c4) BETWEEN (t0.c0) AND (t0.c3))) NOTNULL) ASC, CASE WHEN 0.31096820012017057 THEN CASE rt1.c2  WHEN rt1.c4 THEN rt1.c1 ELSE NULL END ELSE (rt1.c4 IN (t0.c2, t0.c2)) END  NULLS LAST;
SELECT MAX(t0.c1) FROM rt1 INNER JOIN t0 ON (((rt1.c2)) BETWEEN (((rt1.c1 IN ()))) AND (((t0.c4 IN (t0.c1))))) WHERE (((t0.c3)AND(((((rt1.c6, rt1.c4)) BETWEEN ((NULL, x'')) AND ((rt1.c1, t0.c4))) IN (CAST(t0.c2 AS NUMERIC), '-1071383120'))))) ORDER BY (((t0.c4, rt1.c5)) NOT BETWEEN (((((rt1.c3, t0.c4))>=((t0.c0, rt1.c3))), rt1.c2)) AND ((('' IN (t0.c0)), ((t0.c4) BETWEEN (rt1.c2) AND ('1147367855')))))  NULLS LAST, ((((('570882218' IN ()))OR(((t0.c1)OR(rt1.c6)))))AND(x'29')), UPPER(DISTINCT ((t0.c4)+(rt1.c5))) DESC  NULLS FIRST LIMIT 0x2 INTERSECT SELECT ALL MAX(t0.c1) FROM rt1 INNER JOIN t0 ON (((rt1.c2)) BETWEEN (((rt1.c1 IN ()))) AND (((t0.c4 IN (t0.c1))))) WHERE (json_array_length(((((((rt1.c5)AND(rt1.c0)))OR(rt1.c5)))OR(t0.c3)))) ORDER BY (((t0.c4, rt1.c5)) NOT BETWEEN (((((rt1.c3, t0.c4))>=((t0.c0, rt1.c3))), rt1.c2)) AND ((('' IN (t0.c0)), ((t0.c4) BETWEEN (rt1.c2) AND ('1147367855')))))  NULLS LAST, ((((('570882218' IN ()))OR(((t0.c1)OR(rt1.c6)))))AND(x'29')), UPPER(DISTINCT ((t0.c4)+(rt1.c5))) DESC  NULLS FIRST LIMIT 0X2;
SELECT * FROM rt1 WHERE (0.04918149140401595) ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST, (~ (rt1.c3 COLLATE NOCASE));
SELECT * FROM rt1 WHERE (((0.04918149140401595)AND((- ((NOT (rt1.c2))))))) ORDER BY ((rt1.c3)OR(((rt1.c4)/(rt1.c1)))) LIMIT 0x0;
SELECT * FROM rt1 WHERE (0.04918149140401595) ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST, (~ (rt1.c3 COLLATE NOCASE));
SELECT * FROM rt1 WHERE (((0.04918149140401595)AND((- ((NOT (rt1.c2))))))) ORDER BY ((rt1.c3)OR(((rt1.c4)/(rt1.c1)))) LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE (CAST(CASE WHEN rt1.c5 THEN rt1.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c3 THEN t0.c3 WHEN 0.5049448092726981 THEN t0.c2 ELSE t0.c0 END AS TEXT));
SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(CASE WHEN rt1.c5 THEN rt1.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c3 THEN t0.c3 WHEN 0.5049448092726981 THEN t0.c2 ELSE t0.c0 END AS TEXT))AND((((rt1.c5 IN (rt1.c6)))%(((x'5d3b61') IS TRUE)))))) ORDER BY (highlight(rt1.c1, t0.c1, rt1.c5, rt1.c5) IN (((t0.c1)&(rt1.c4)))) DESC  NULLS LAST, (x'bbd1' IN ()), (('') BETWEEN (((t0.c1)=(t0.c3))) AND (CAST(0.790025574569889 AS TEXT))) DESC;
SELECT ALL * FROM rt1, t0 WHERE (CAST(CASE WHEN rt1.c5 THEN rt1.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c3 THEN t0.c3 WHEN 0.5049448092726981 THEN t0.c2 ELSE t0.c0 END AS TEXT));
SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(CASE WHEN rt1.c5 THEN rt1.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c3 THEN t0.c3 WHEN 0.5049448092726981 THEN t0.c2 ELSE t0.c0 END AS TEXT))AND((((rt1.c5 IN (rt1.c6)))%(((x'5d3b61') IS TRUE)))))) ORDER BY (highlight(rt1.c1, t0.c1, rt1.c5, rt1.c5) IN (((t0.c1)&(rt1.c4)))) DESC  NULLS LAST, (x'bbd1' IN ()), (('') BETWEEN (((t0.c1)=(t0.c3))) AND (CAST(0.790025574569889 AS TEXT))) DESC;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((t0.c0) NOTNULL)) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((((t0.c0) NOTNULL)) IS TRUE))AND('9^SADJy'))) ORDER BY load_extension(rt1.c2) ASC;
SELECT ALL MIN(t0.c0) FROM t0, rt1 WHERE (CAST(NULL AS NUMERIC));
SELECT DISTINCT MIN(t0.c0) FROM t0, rt1 WHERE (((CAST(NULL AS NUMERIC))AND(CASE t0.c2  WHEN NULLIF(DISTINCT t0.c4, t0.c2) THEN 'b饬' COLLATE BINARY WHEN -1377896229 THEN LOWER(rt1.c5) END))) ORDER BY ((((t0.c1)LIKE(t0.c3)))>(rt1.c1)) DESC  NULLS LAST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0, rt1 NOT INDEXED WHERE (NULL) ORDER BY ((((t0.c1)LIKE(t0.c3)))>(rt1.c1)) DESC  NULLS LAST;
SELECT ALL MAX(rt1.c1) FROM t0, rt1 WHERE ((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c5)), ((t0.c1) BETWEEN (t0.c4) AND (rt1.c2))))!=(((x'f1e1f1' IN ()), ((((x'')AND(t0.c3)))OR(t0.c4)))))) ORDER BY (+ (((rt1.c5) BETWEEN (x'65') AND (rt1.c2))));
SELECT ALL MAX(rt1.c1) FROM t0, rt1 WHERE ((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c5)), ((t0.c1) BETWEEN (t0.c4) AND (rt1.c2))))!=(((x'f1e1f1' IN ()), ((((x'')AND(t0.c3)))OR(t0.c4)))))) ORDER BY (+ (((rt1.c5) BETWEEN (x'65') AND (rt1.c2)))) LIMIT 1;
SELECT ALL MAX(t0.c4) FROM rt1, t0 WHERE (t0.c2) ORDER BY ((((((((t0.c2)OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c6))) IS TRUE)  NULLS FIRST, ((rt1.c0) ISNULL) COLLATE NOCASE ASC, (((((t0.c2 IN ()))OR(((t0.c2)<<(rt1.c4)))))AND(((((((rt1.c0)OR(t0.c3)))OR(t0.c1)))OR(t0.c0))));
SELECT DISTINCT MAX(t0.c4) FROM rt1, t0 WHERE (((t0.c2)AND((+ (((((((((t0.c3)AND(t0.c1)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0))))))) ORDER BY ((((((((t0.c2)OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c6))) IS TRUE)  NULLS FIRST, ((rt1.c0) ISNULL) COLLATE NOCASE ASC, (((((t0.c2 IN ()))OR(((t0.c2)<<(rt1.c4)))))AND(((((((rt1.c0)OR(t0.c3)))OR(t0.c1)))OR(t0.c0))));
SELECT * FROM t0 WHERE (((NULLIF(t0.c2, t0.c3)) ISNULL)) ORDER BY ((((t0.c1) BETWEEN (t0.c4) AND (t0.c4))) BETWEEN (CASE t0.c1  WHEN t0.c2 THEN x'512b' END) AND ((t0.c1 IN ()))), CASE WHEN NULLIF(DISTINCT t0.c1, t0.c2) THEN COALESCE(t0.c4, NULL, t0.c3) WHEN (t0.c0 IN (x'118a')) THEN t0.c1 WHEN CASE WHEN t0.c2 THEN t0.c3 WHEN t0.c1 THEN t0.c3 WHEN t0.c0 THEN t0.c0 WHEN t0.c4 THEN t0.c2 END THEN CAST(t0.c1 AS REAL) ELSE (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) END  NULLS FIRST, ((CAST(t0.c0 AS TEXT)) BETWEEN (TRIM(t0.c3, t0.c4)) AND (t0.c1)) ASC, ((CASE t0.c4  WHEN t0.c0 THEN t0.c3 WHEN t0.c3 THEN t0.c1 WHEN t0.c2 THEN t0.c4 ELSE t0.c3 END) ISNULL)  NULLS FIRST;
SELECT * FROM t0 WHERE (((NULLIF(t0.c2, t0.c3)) ISNULL)) ORDER BY (t0.c1 COLLATE BINARY IN ((t0.c1 IN ()))) DESC, (((t0.c1 IN (t0.c2, t0.c2)))>(CAST(t0.c4 AS NUMERIC))) INTERSECT SELECT ALL * FROM t0 WHERE (t0.c3) ORDER BY (t0.c1 COLLATE BINARY IN ((t0.c1 IN ()))) DESC, (((t0.c1 IN (t0.c2, t0.c2)))>(CAST(t0.c4 AS NUMERIC)));
SELECT * FROM t0 WHERE (((NULLIF(t0.c2, t0.c3)) ISNULL)) ORDER BY ((((t0.c1) BETWEEN (t0.c4) AND (t0.c4))) BETWEEN (CASE t0.c1  WHEN t0.c2 THEN x'512b' END) AND ((t0.c1 IN ()))), CASE WHEN NULLIF(DISTINCT t0.c1, t0.c2) THEN COALESCE(t0.c4, NULL, t0.c3) WHEN (t0.c0 IN (x'118a')) THEN t0.c1 WHEN CASE WHEN t0.c2 THEN t0.c3 WHEN t0.c1 THEN t0.c3 WHEN t0.c0 THEN t0.c0 WHEN t0.c4 THEN t0.c2 END THEN CAST(t0.c1 AS REAL) ELSE (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) END  NULLS FIRST, ((CAST(t0.c0 AS TEXT)) BETWEEN (TRIM(t0.c3, t0.c4)) AND (t0.c1)) ASC, ((CASE t0.c4  WHEN t0.c0 THEN t0.c3 WHEN t0.c3 THEN t0.c1 WHEN t0.c2 THEN t0.c4 ELSE t0.c3 END) ISNULL)  NULLS FIRST;
SELECT * FROM t0 WHERE (((NULLIF(t0.c2, t0.c3)) ISNULL)) ORDER BY (t0.c1 COLLATE BINARY IN ((t0.c1 IN ()))) DESC, (((t0.c1 IN (t0.c2, t0.c2)))>(CAST(t0.c4 AS NUMERIC))) INTERSECT SELECT ALL * FROM t0 WHERE (t0.c3) ORDER BY (t0.c1 COLLATE BINARY IN ((t0.c1 IN ()))) DESC, (((t0.c1 IN (t0.c2, t0.c2)))>(CAST(t0.c4 AS NUMERIC)));
SELECT ALL * FROM rt1 WHERE ((rt1.c0 IN (rt1.c0)) COLLATE BINARY);
SELECT * FROM rt1 WHERE ((rt1.c0 IN (rt1.c0)) COLLATE BINARY) LIMIT 2;
SELECT ALL * FROM rt1 WHERE ((rt1.c0 IN (rt1.c0)) COLLATE BINARY);
SELECT * FROM rt1 WHERE ((rt1.c0 IN (rt1.c0)) COLLATE BINARY) LIMIT 2;
SELECT * FROM t0 WHERE (CASE (((t0.c2, t0.c3))>((t0.c2, t0.c2)))  WHEN t0.c1 COLLATE BINARY THEN (t0.c4 IN (t0.c1)) WHEN (((t0.c3, t0.c0, t0.c0))==((t0.c2, 0.89857522308311, t0.c2))) THEN (- (t0.c4)) WHEN ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)))OR(t0.c0)) THEN t0.c3 COLLATE BINARY END) ORDER BY (((((-1755045130, t0.c3)) NOT BETWEEN ((t0.c3, t0.c3)) AND ((t0.c0, t0.c2)))) NOTNULL) ASC;
SELECT DISTINCT * FROM t0 WHERE (CASE (((t0.c2, t0.c3))>((t0.c2, t0.c2)))  WHEN t0.c1 COLLATE BINARY THEN (t0.c4 IN (t0.c1)) WHEN (((t0.c3, t0.c0, t0.c0))=((t0.c2, 0.89857522308311, t0.c2))) THEN (- (t0.c4)) WHEN ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)))OR(t0.c0)) THEN t0.c3 COLLATE BINARY END) ORDER BY (((((0Xffffffff976422f6, t0.c3)) NOT BETWEEN ((t0.c3, t0.c3)) AND ((t0.c0, t0.c2)))) NOTNULL) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((+ (t0.c2)))LIKE(t0.c3 COLLATE RTRIM))) ORDER BY (((((-1755045130, t0.c3)) NOT BETWEEN ((t0.c3, t0.c3)) AND ((t0.c0, t0.c2)))) NOTNULL) ASC;
SELECT * FROM t0 WHERE (CASE (((t0.c2, t0.c3))>((t0.c2, t0.c2)))  WHEN t0.c1 COLLATE BINARY THEN (t0.c4 IN (t0.c1)) WHEN (((t0.c3, t0.c0, t0.c0))==((t0.c2, 0.89857522308311, t0.c2))) THEN (- (t0.c4)) WHEN ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)))OR(t0.c0)) THEN t0.c3 COLLATE BINARY END) ORDER BY (((((-1755045130, t0.c3)) NOT BETWEEN ((t0.c3, t0.c3)) AND ((t0.c0, t0.c2)))) NOTNULL) ASC;
SELECT DISTINCT * FROM t0 WHERE (CASE (((t0.c2, t0.c3))>((t0.c2, t0.c2)))  WHEN t0.c1 COLLATE BINARY THEN (t0.c4 IN (t0.c1)) WHEN (((t0.c3, t0.c0, t0.c0))=((t0.c2, 0.89857522308311, t0.c2))) THEN (- (t0.c4)) WHEN ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)))OR(t0.c0)) THEN t0.c3 COLLATE BINARY END) ORDER BY (((((0Xffffffff976422f6, t0.c3)) NOT BETWEEN ((t0.c3, t0.c3)) AND ((t0.c0, t0.c2)))) NOTNULL) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((+ (t0.c2)))LIKE(t0.c3 COLLATE RTRIM))) ORDER BY (((((-1755045130, t0.c3)) NOT BETWEEN ((t0.c3, t0.c3)) AND ((t0.c0, t0.c2)))) NOTNULL) ASC;
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c4)) COLLATE NOCASE) ORDER BY LTRIM(((t0.c1)&(t0.c3)))  NULLS LAST, ((((((COALESCE(t0.c0, t0.c4, t0.c2))OR(t0.c2 COLLATE RTRIM)))AND(((t0.c1)IS NOT(t0.c3)))))AND(((t0.c2) ISNULL))), t0.c0 COLLATE NOCASE;
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c4)) COLLATE NOCASE) ORDER BY (((t0.c0)) BETWEEN ((((((t0.c0)OR(t0.c2)))AND(t0.c3)))) AND ((IFNULL(t0.c4, t0.c4))))  NULLS LAST, CHAR(t0.c4, t0.c4) COLLATE RTRIM ASC LIMIT 0X1;
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c4)) COLLATE NOCASE) ORDER BY LTRIM(((t0.c1)&(t0.c3)))  NULLS LAST, ((((((COALESCE(t0.c0, t0.c4, t0.c2))OR(t0.c2 COLLATE RTRIM)))AND(((t0.c1)IS NOT(t0.c3)))))AND(((t0.c2) ISNULL))), t0.c0 COLLATE NOCASE;
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c4)) COLLATE NOCASE) ORDER BY (((t0.c0)) BETWEEN ((((((t0.c0)OR(t0.c2)))AND(t0.c3)))) AND ((IFNULL(t0.c4, t0.c4))))  NULLS LAST, CHAR(t0.c4, t0.c4) COLLATE RTRIM ASC LIMIT 0X1;
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c4 THEN t0.c3 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c2 WHEN t0.c0 THEN t0.c3 WHEN t0.c4 THEN t0.c2 ELSE t0.c0 END AS BLOB));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CAST(CASE WHEN t0.c4 THEN t0.c3 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c2 WHEN t0.c0 THEN t0.c3 WHEN t0.c4 THEN t0.c2 ELSE t0.c0 END AS BLOB))AND(CASE WHEN LENGTH(t0.c3) THEN ((((t0.c0)OR(t0.c4)))OR(0x3e420eb7)) WHEN ((t0.c1)OR(t0.c2)) THEN CAST(t0.c0 AS TEXT) END))) LIMIT 0X0;
SELECT * FROM rt1 INNER JOIN t0 ON (((((t0.c3, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c6, rt1.c0, t0.c3)) AND ((rt1.c4, rt1.c1, rt1.c2)))) NOT BETWEEN ((- (t0.c3))) AND (CAST(rt1.c1 AS NUMERIC))) WHERE ((((((((- (rt1.c0)))AND((((rt1.c0)) NOT BETWEEN ((t0.c3)) AND ((rt1.c2))))))OR(((rt1.c2) NOTNULL))))OR(((rt1.c5)<=(t0.c2)))));
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((((t0.c3, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c6, rt1.c0, t0.c3)) AND ((rt1.c4, rt1.c1, rt1.c2)))) NOT BETWEEN ((- (t0.c3))) AND (CAST(rt1.c1 AS NUMERIC))) WHERE ((((((((- (rt1.c0)))AND((((rt1.c0)) NOT BETWEEN ((t0.c3)) AND ((rt1.c2))))))OR(((rt1.c2) NOTNULL))))OR(((rt1.c5)<=(t0.c2))))) ORDER BY TYPEOF(DISTINCT CASE WHEN t0.c0 THEN rt1.c2 END) DESC, CAST(CAST(rt1.c6 AS INTEGER) AS REAL) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM rt1 INNER JOIN t0 ON (((((t0.c3, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c6, rt1.c0, t0.c3)) AND ((rt1.c4, rt1.c1, rt1.c2)))) NOT BETWEEN ((- (t0.c3))) AND (CAST(rt1.c1 AS NUMERIC))) WHERE ((((((((- (rt1.c0)))AND((((rt1.c0)) NOT BETWEEN ((t0.c3)) AND ((rt1.c2))))))OR(((rt1.c2) NOTNULL))))OR(((rt1.c5)<=(t0.c2)))));
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((((t0.c3, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c6, rt1.c0, t0.c3)) AND ((rt1.c4, rt1.c1, rt1.c2)))) NOT BETWEEN ((- (t0.c3))) AND (CAST(rt1.c1 AS NUMERIC))) WHERE ((((((((- (rt1.c0)))AND((((rt1.c0)) NOT BETWEEN ((t0.c3)) AND ((rt1.c2))))))OR(((rt1.c2) NOTNULL))))OR(((rt1.c5)<=(t0.c2))))) ORDER BY TYPEOF(DISTINCT CASE WHEN t0.c0 THEN rt1.c2 END) DESC, CAST(CAST(rt1.c6 AS INTEGER) AS REAL) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM rt1 WHERE (0.31096820012017057);
SELECT DISTINCT * FROM rt1 WHERE (0.31096820012017057) ORDER BY (NOT (((((((rt1.c6)AND(rt1.c4)))OR(rt1.c1)))AND(rt1.c2)))), (- (NULL)) ASC  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt1 WHERE (0.31096820012017057);
SELECT DISTINCT * FROM rt1 WHERE (0.31096820012017057) ORDER BY (NOT (((((((rt1.c6)AND(rt1.c4)))OR(rt1.c1)))AND(rt1.c2)))), (- (NULL)) ASC  NULLS FIRST LIMIT 0x0;
SELECT ALL MIN(t0.c3) FROM t0 WHERE ((+ (CASE t0.c1  WHEN t0.c4 THEN t0.c2 WHEN t0.c0 THEN t0.c3 ELSE t0.c2 END)));
SELECT ALL MIN(t0.c3) FROM t0 WHERE ((((+ (CASE t0.c1  WHEN t0.c4 THEN t0.c2 WHEN t0.c0 THEN t0.c3 ELSE t0.c2 END)))AND(t0.c4))) LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE (LIKE('1147367855', NULL COLLATE RTRIM, '('));
SELECT * FROM t0, rt1 WHERE (((LIKE('1147367855', NULL COLLATE RTRIM, '('))AND(0x3a8c1a24))) ORDER BY CASE WHEN (+ (rt1.c3)) THEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN t0.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c6 ELSE t0.c1 END ELSE (((t0.c4))<((rt1.c5))) END DESC  NULLS FIRST, 0Xffffffffb438b92a, ((t0.c2 IN (rt1.c1, rt1.c5)) IN (((rt1.c5)-(t0.c0)))) DESC LIMIT 0X0 INTERSECT SELECT * FROM t0, rt1 WHERE (CASE CASE rt1.c2  WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c3 THEN t0.c0 WHEN t0.c2 THEN rt1.c4 END  WHEN t0.c1 THEN (- (t0.c1)) WHEN ((t0.c4)OR(rt1.c2)) THEN ((t0.c0)||(rt1.c6)) WHEN ((t0.c0) IS TRUE) THEN ((rt1.c3)>(rt1.c2)) ELSE CAST(rt1.c6 AS TEXT) END) ORDER BY CASE WHEN (+ (rt1.c3)) THEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN t0.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c6 ELSE t0.c1 END ELSE (((t0.c4))<((rt1.c5))) END DESC  NULLS FIRST, 0Xffffffffb438b92a, ((t0.c2 IN (rt1.c1, rt1.c5)) IN (((rt1.c5)-(t0.c0)))) DESC LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE (LIKE('1147367855', NULL COLLATE RTRIM, '('));
SELECT * FROM t0, rt1 WHERE (((LIKE('1147367855', NULL COLLATE RTRIM, '('))AND(0x3a8c1a24))) ORDER BY CASE WHEN (+ (rt1.c3)) THEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN t0.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c6 ELSE t0.c1 END ELSE (((t0.c4))<((rt1.c5))) END DESC  NULLS FIRST, 0Xffffffffb438b92a, ((t0.c2 IN (rt1.c1, rt1.c5)) IN (((rt1.c5)-(t0.c0)))) DESC LIMIT 0X0 INTERSECT SELECT * FROM t0, rt1 WHERE (CASE CASE rt1.c2  WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c3 THEN t0.c0 WHEN t0.c2 THEN rt1.c4 END  WHEN t0.c1 THEN (- (t0.c1)) WHEN ((t0.c4)OR(rt1.c2)) THEN ((t0.c0)||(rt1.c6)) WHEN ((t0.c0) IS TRUE) THEN ((rt1.c3)>(rt1.c2)) ELSE CAST(rt1.c6 AS TEXT) END) ORDER BY CASE WHEN (+ (rt1.c3)) THEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN t0.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c6 ELSE t0.c1 END ELSE (((t0.c4))<((rt1.c5))) END DESC  NULLS FIRST, 0Xffffffffb438b92a, ((t0.c2 IN (rt1.c1, rt1.c5)) IN (((rt1.c5)-(t0.c0)))) DESC LIMIT 0x0;
SELECT MAX(rt1.c3) FROM rt1 WHERE (((((((((((rt1.c5)AND(rt1.c4)))OR(x'a5')))OR(-994300875)))OR(rt1.c2))) IS FALSE));
SELECT DISTINCT MAX(rt1.c3) FROM rt1 WHERE (((((((((((((rt1.c5)AND(rt1.c4)))OR(x'a5')))OR(-994300875)))OR(rt1.c2))) IS FALSE))AND(CAST(((rt1.c2) NOT NULL) AS NUMERIC)))) ORDER BY (rt1.c2 IN ()) ASC  NULLS LAST, ((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c6 WHEN NULL THEN rt1.c4 WHEN rt1.c2 THEN rt1.c3 END) NOTNULL)  NULLS FIRST;
SELECT ALL MAX(t0.c1) FROM t0 WHERE (((0.5036801536374371)<=(((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2))))) ORDER BY (- (((((x'a2')OR(t0.c4)))OR(t0.c0)))) DESC, (((((t0.c3, t0.c0)) NOT BETWEEN ((x'', t0.c3)) AND ((t0.c1, t0.c1)))) IS FALSE) DESC  NULLS LAST;
SELECT DISTINCT MAX(t0.c1) FROM t0 WHERE (((((0.5036801536374371)==(((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2)))))AND((((x'97064922')|(t0.c0)) IN (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))))))) ORDER BY CAST(((t0.c1)IS NOT(t0.c1)) AS BLOB) DESC  NULLS LAST LIMIT 0x2;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c4 ELSE t0.c0 END) ISNULL));
SELECT MAX(t0.c3) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c4 ELSE t0.c0 END) ISNULL)) ORDER BY ((((((((((x'')AND(CAST(t0.c4 AS BLOB))))OR(UNLIKELY(DISTINCT t0.c4))))AND((t0.c0 IN ()))))OR(CAST(t0.c1 AS TEXT))))AND(((t0.c0)>(t0.c4)))) DESC, CASE WHEN '' THEN ((((((t0.c2)AND(t0.c4)))OR(t0.c3)))AND(x'c2f914')) WHEN ((t0.c4)IS NOT(NULL)) THEN ((t0.c0)GLOB(t0.c0)) WHEN ((t0.c2) IS TRUE) THEN (((t0.c0, t0.c0, NULL))<=(('1128770643', t0.c4, t0.c1))) WHEN ((t0.c3)||(t0.c1)) THEN CASE '-563958125'  WHEN x'72' THEN t0.c3 END END ASC LIMIT 0x1 INTERSECT SELECT MAX(t0.c3) FROM t0 WHERE (CAST(t0.c4 COLLATE BINARY AS REAL)) ORDER BY ((((((((((x'')AND(CAST(t0.c4 AS BLOB))))OR(UNLIKELY(DISTINCT t0.c4))))AND((t0.c0 IN ()))))OR(CAST(t0.c1 AS TEXT))))AND(((t0.c0)>(t0.c4)))) DESC, CASE WHEN '' THEN ((((((t0.c2)AND(t0.c4)))OR(t0.c3)))AND(x'c2f914')) WHEN ((t0.c4)IS NOT(NULL)) THEN ((t0.c0)GLOB(t0.c0)) WHEN ((t0.c2) IS TRUE) THEN (((t0.c0, t0.c0, NULL))<=(('1128770643', t0.c4, t0.c1))) WHEN ((t0.c3)||(t0.c1)) THEN CASE '-563958125'  WHEN x'72' THEN t0.c3 END END ASC LIMIT 0X1;
SELECT MAX(t0.c2) FROM t0 WHERE (NULL) ORDER BY x'c0' ASC  NULLS FIRST;
SELECT DISTINCT MAX(t0.c2) FROM t0 WHERE (((NULL)AND(t0.c1))) ORDER BY x'c0' ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MAX(t0.c2) FROM t0 WHERE ((((t0.c3 COLLATE BINARY, CAST(t0.c2 AS REAL), t0.c2))<=(((- (t0.c4)), ((((((t0.c1)AND(t0.c4)))AND(t0.c4)))OR(t0.c3)), t0.c1 COLLATE BINARY)))) ORDER BY x'c0' ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE ((('
')>>(t0.c2 COLLATE BINARY)));
SELECT DISTINCT * FROM t0 WHERE ((((('
')>>(t0.c2 COLLATE BINARY)))AND(CASE WHEN t0.c1 THEN ((t0.c0)==(t0.c1)) END)));
SELECT * FROM t0 WHERE ((('
')>>(t0.c2 COLLATE BINARY)));
SELECT DISTINCT * FROM t0 WHERE ((((('
')>>(t0.c2 COLLATE BINARY)))AND(CASE WHEN t0.c1 THEN ((t0.c0)==(t0.c1)) END)));
SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((((((t0.c2)=(t0.c2)))OR(NULL)))OR(((rt1.c1)<<(rt1.c0)))) WHERE (((rt1.c2)<<(rt1.c5)) COLLATE RTRIM);
SELECT * FROM rt1 CROSS JOIN t0 ON ((((((t0.c2)=(t0.c2)))OR(NULL)))OR(((rt1.c1)<<(rt1.c0)))) WHERE (((rt1.c2)<<(rt1.c5)) COLLATE RTRIM) LIMIT 0X1 INTERSECT SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((((((t0.c2)==(t0.c2)))OR(NULL)))OR(((rt1.c1)<<(rt1.c0)))) WHERE (((((((((((((x'd7')>=(rt1.c2)))OR(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c6)))))OR((t0.c0 IN (rt1.c1)))))OR(rt1.c5 COLLATE RTRIM)))OR(json_patch(rt1.c0, NULL))))OR(((t0.c0)<(t0.c4))))) LIMIT 0X1;
SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((((((t0.c2)=(t0.c2)))OR(NULL)))OR(((rt1.c1)<<(rt1.c0)))) WHERE (((rt1.c2)<<(rt1.c5)) COLLATE RTRIM);
SELECT * FROM rt1 CROSS JOIN t0 ON ((((((t0.c2)=(t0.c2)))OR(NULL)))OR(((rt1.c1)<<(rt1.c0)))) WHERE (((rt1.c2)<<(rt1.c5)) COLLATE RTRIM) LIMIT 0X1 INTERSECT SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((((((t0.c2)==(t0.c2)))OR(NULL)))OR(((rt1.c1)<<(rt1.c0)))) WHERE (((((((((((((x'd7')>=(rt1.c2)))OR(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c6)))))OR((t0.c0 IN (rt1.c1)))))OR(rt1.c5 COLLATE RTRIM)))OR(json_patch(rt1.c0, NULL))))OR(((t0.c0)<(t0.c4))))) LIMIT 0X1;
SELECT MAX(rt1.c1) FROM rt1, t0 WHERE (CASE WHEN ((rt1.c4) NOTNULL) THEN x'' WHEN ((((((((0Xffffffffd895f82f)OR(0.2803246601987015)))OR(0xffffffffcb5c4df0)))AND(rt1.c3)))AND(181724671)) THEN ((rt1.c4)AND(t0.c3)) WHEN ((t0.c0) IS TRUE) THEN (+ (t0.c2)) WHEN (((rt1.c5, rt1.c3))>((t0.c1, rt1.c6))) THEN ((((((rt1.c0)OR(t0.c1)))OR(rt1.c4)))OR(rt1.c3)) WHEN ((((t0.c1)OR(rt1.c2)))AND(rt1.c0)) THEN 0X51a97aa5 ELSE (((t0.c2, 483028551))=((rt1.c1, t0.c1))) END);
SELECT ALL MAX(rt1.c1) FROM rt1, t0 WHERE (CASE WHEN ((rt1.c4) NOTNULL) THEN x'' WHEN ((((((((-661260241)OR(0.2803246601987015)))OR(-883143184)))AND(rt1.c3)))AND(181724671)) THEN ((rt1.c4)AND(t0.c3)) WHEN ((t0.c0) IS TRUE) THEN (+ (t0.c2)) WHEN (((rt1.c5, rt1.c3))>((t0.c1, rt1.c6))) THEN ((((((rt1.c0)OR(t0.c1)))OR(rt1.c4)))OR(rt1.c3)) WHEN ((((t0.c1)OR(rt1.c2)))AND(rt1.c0)) THEN 1370061477 ELSE (((t0.c2, 483028551))=((rt1.c1, t0.c1))) END) ORDER BY CAST(-1191521787 AS NUMERIC), (((CAST(rt1.c6 AS REAL), TRIM(rt1.c2, t0.c4), (rt1.c5 IN ('2010461842', rt1.c2)), CASE t0.c3  WHEN rt1.c6 THEN t0.c0 END, (((t0.c1, rt1.c2, 0.6026197490170234))==((t0.c4, rt1.c3, '1101841451'))), ((rt1.c3) IS FALSE)))<=((((rt1.c0)-(rt1.c5)), RTRIM(rt1.c0), 'fK夠aH', rt1.c3, ((t0.c1) NOT BETWEEN (rt1.c0) AND (NULL)), CASE rt1.c5  WHEN t0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN x'633b9934e6' ELSE 0.5868389066900178 END))) DESC  NULLS LAST, (((((rt1.c6, t0.c4)) BETWEEN ((rt1.c5, t0.c4)) AND ((t0.c4, rt1.c6)))) NOT NULL)  NULLS LAST;
SELECT * FROM rt1 WHERE (((((rt1.c4)||(rt1.c4)))GLOB(((((rt1.c5)OR(rt1.c2)))OR(rt1.c4)))));
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c4)||(rt1.c4)))GLOB(((((rt1.c5)OR(rt1.c2)))OR(rt1.c4)))))AND(x'')));
SELECT * FROM rt1 WHERE (((((rt1.c4)||(rt1.c4)))GLOB(((((rt1.c5)OR(rt1.c2)))OR(rt1.c4)))));
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c4)||(rt1.c4)))GLOB(((((rt1.c5)OR(rt1.c2)))OR(rt1.c4)))))AND(x'')));
SELECT ALL MAX(rt1.c2) FROM rt1, t0 WHERE (LOWER(rt1.c3) COLLATE BINARY);
SELECT DISTINCT MAX(rt1.c2) FROM rt1, t0 WHERE (LOWER(rt1.c3) COLLATE BINARY) ORDER BY (((t0.c1 IN ())) IS FALSE) ASC, ((rt1.c3) NOT NULL) COLLATE BINARY, ((((((t0.c2)!=(rt1.c6)))OR(((((((((rt1.c5)OR(rt1.c2)))OR(rt1.c2)))OR(t0.c2)))OR(x'a5')))))AND(rt1.c4 COLLATE RTRIM)) LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(rt1.c2) FROM rt1, t0 WHERE ('467217330') ORDER BY (((t0.c1 IN ())) IS FALSE) ASC, ((rt1.c3) NOT NULL) COLLATE BINARY, ((((((t0.c2)<>(rt1.c6)))OR(((((((((rt1.c5)OR(rt1.c2)))OR(rt1.c2)))OR(t0.c2)))OR(x'a5')))))AND(rt1.c4 COLLATE RTRIM)) LIMIT 1;
SELECT ALL MAX(rt1.c3) FROM rt1 WHERE ((((rt1.c2, rt1.c1, ((rt1.c6)<(rt1.c0))))<>((((((((rt1.c4)OR(rt1.c1)))AND(rt1.c6)))OR(rt1.c3)), ((rt1.c1)=(rt1.c6)), '232918777'))));
SELECT ALL MAX(rt1.c3) FROM rt1 WHERE ((((rt1.c2, rt1.c1, ((rt1.c6)<(rt1.c0))))!=((((((((rt1.c4)OR(rt1.c1)))AND(rt1.c6)))OR(rt1.c3)), ((rt1.c1)=(rt1.c6)), '232918777')))) ORDER BY ((rt1.c1)OR(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c2 END)) INTERSECT SELECT ALL MAX(rt1.c3) FROM rt1 WHERE (((((((rt1.c6)AND(rt1.c6)))OR(rt1.c1)))||(((rt1.c3)LIKE(rt1.c0))))) ORDER BY ((rt1.c1)OR(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c2 END));
SELECT ALL MAX(t0.c3) FROM t0 WHERE (t0.c4) ORDER BY NULL, 0.37963315043177104 DESC, (((t0.c0 IN (t0.c2, t0.c1)))%(CAST(t0.c3 AS BLOB)));
SELECT DISTINCT MAX(t0.c3) FROM t0 WHERE (((t0.c4)AND((NOT ((- (t0.c1))))))) ORDER BY NULL, 0.37963315043177104 DESC, (((t0.c0 IN (t0.c2, t0.c1)))%(CAST(t0.c3 AS BLOB)));
SELECT * FROM rt1 WHERE (CASE ABS(DISTINCT rt1.c4)  WHEN (- (rt1.c3)) THEN rt1.c2 WHEN ((rt1.c6)AND(rt1.c2)) THEN (rt1.c6 IN ()) END);
SELECT * FROM rt1 WHERE (CASE ABS(DISTINCT rt1.c4)  WHEN (- (rt1.c3)) THEN rt1.c2 WHEN ((rt1.c6)AND(rt1.c2)) THEN (rt1.c6 IN ()) END) INTERSECT SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT * FROM rt1 WHERE (CASE ABS(DISTINCT rt1.c4)  WHEN (- (rt1.c3)) THEN rt1.c2 WHEN ((rt1.c6)AND(rt1.c2)) THEN (rt1.c6 IN ()) END);
SELECT * FROM rt1 WHERE (CASE ABS(DISTINCT rt1.c4)  WHEN (- (rt1.c3)) THEN rt1.c2 WHEN ((rt1.c6)AND(rt1.c2)) THEN (rt1.c6 IN ()) END) INTERSECT SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT ALL * FROM rt1, t0 WHERE ((((- (rt1.c3))) NOT BETWEEN (((((((rt1.c3)OR(rt1.c6)))OR(t0.c2)))AND(rt1.c6))) AND (((rt1.c3)/(0.6354822864969385)))));
SELECT * FROM rt1, t0 WHERE ((((((- (rt1.c3))) NOT BETWEEN (((((((rt1.c3)OR(rt1.c6)))OR(t0.c2)))AND(rt1.c6))) AND (((rt1.c3)/(0.6354822864969385)))))AND((+ (CAST('w' AS NUMERIC)))))) ORDER BY t0.c4, x'ab', ((UNLIKELY(0.4138806303066924))<<(((rt1.c3) ISNULL)));
SELECT ALL * FROM rt1, t0 WHERE ((((- (rt1.c3))) NOT BETWEEN (((((((rt1.c3)OR(rt1.c6)))OR(t0.c2)))AND(rt1.c6))) AND (((rt1.c3)/(0.6354822864969385)))));
SELECT * FROM rt1, t0 WHERE ((((((- (rt1.c3))) NOT BETWEEN (((((((rt1.c3)OR(rt1.c6)))OR(t0.c2)))AND(rt1.c6))) AND (((rt1.c3)/(0.6354822864969385)))))AND((+ (CAST('w' AS NUMERIC)))))) ORDER BY t0.c4, x'ab', ((UNLIKELY(0.4138806303066924))<<(((rt1.c3) ISNULL)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (CASE 396261370  WHEN 'V ' THEN rt1.c0 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c3 END))) ORDER BY (json_extract(rt1.c1, rt1.c5, rt1.c1, rt1.c3, rt1.c4) IN (((rt1.c3)-(rt1.c4)))) DESC;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((NOT (CASE 0x179e77fa  WHEN 'V ' THEN rt1.c0 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c3 END)))AND((((((((NOT (rt1.c5)))OR(((rt1.c1)GLOB(rt1.c4)))))OR((+ (rt1.c0)))))AND(((rt1.c3) ISNULL)))))) ORDER BY (json_extract(rt1.c1, rt1.c5, rt1.c1, rt1.c3, rt1.c4) IN (((rt1.c3)-(rt1.c4)))) DESC INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((('1969423408')) NOT BETWEEN ((((((((((((rt1.c3)OR(rt1.c6)))OR(rt1.c6)))OR(rt1.c2)))OR(rt1.c6)))OR(rt1.c2)))) AND ((rt1.c2)))) ORDER BY (json_extract(rt1.c1, rt1.c5, rt1.c1, rt1.c3, rt1.c4) IN (((rt1.c3)-(rt1.c4)))) DESC;
SELECT ALL MIN(t0.c1) FROM t0 WHERE (json((t0.c3 IN (t0.c1, NULL))));
SELECT MIN(t0.c1) FROM t0 WHERE (json((t0.c3 IN (t0.c1, NULL)))) ORDER BY ((CAST(t0.c4 AS INTEGER))&(CASE t0.c3  WHEN t0.c4 THEN t0.c1 ELSE '1025523522' END))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((((((CASE rt1.c3  WHEN 0.9684774486826819 THEN rt1.c2 WHEN rt1.c2 THEN x'63' ELSE rt1.c4 END)OR((rt1.c4 IN (0.2674225217528863)))))AND(((rt1.c2) ISNULL))))AND((((rt1.c0, rt1.c0, rt1.c2, rt1.c0))<=((rt1.c6, rt1.c5, rt1.c2, rt1.c2))))))AND(rt1.c1)));
SELECT DISTINCT * FROM rt1 WHERE (((((((((((CASE rt1.c3  WHEN 0.9684774486826819 THEN rt1.c2 WHEN rt1.c2 THEN x'63' ELSE rt1.c4 END)OR((rt1.c4 IN (0.2674225217528863)))))AND(((rt1.c2) ISNULL))))AND((((rt1.c0, rt1.c0, rt1.c2, rt1.c0))==((rt1.c6, rt1.c5, rt1.c2, rt1.c2))))))AND(rt1.c1)))AND(((((rt1.c5, rt1.c4, rt1.c3))=((rt1.c6, rt1.c1, rt1.c2))) IN (x'2b'))))) LIMIT 0X1;
SELECT * FROM rt1 WHERE (((((((((CASE rt1.c3  WHEN 0.9684774486826819 THEN rt1.c2 WHEN rt1.c2 THEN x'63' ELSE rt1.c4 END)OR((rt1.c4 IN (0.2674225217528863)))))AND(((rt1.c2) ISNULL))))AND((((rt1.c0, rt1.c0, rt1.c2, rt1.c0))<=((rt1.c6, rt1.c5, rt1.c2, rt1.c2))))))AND(rt1.c1)));
SELECT DISTINCT * FROM rt1 WHERE (((((((((((CASE rt1.c3  WHEN 0.9684774486826819 THEN rt1.c2 WHEN rt1.c2 THEN x'63' ELSE rt1.c4 END)OR((rt1.c4 IN (0.2674225217528863)))))AND(((rt1.c2) ISNULL))))AND((((rt1.c0, rt1.c0, rt1.c2, rt1.c0))==((rt1.c6, rt1.c5, rt1.c2, rt1.c2))))))AND(rt1.c1)))AND(((((rt1.c5, rt1.c4, rt1.c3))=((rt1.c6, rt1.c1, rt1.c2))) IN (x'2b'))))) LIMIT 0X1;
SELECT * FROM rt1, t0 WHERE ((0.6633634123495513 IN ((+ ('-903330662')), t0.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((0.6633634123495513 IN ((+ ('-903330662')), t0.c1 COLLATE RTRIM)))AND(((CAST(t0.c1 AS REAL))+(rt1.c2 COLLATE NOCASE)))));
SELECT * FROM rt1, t0 WHERE ((0.6633634123495513 IN ((+ ('-903330662')), t0.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((0.6633634123495513 IN ((+ ('-903330662')), t0.c1 COLLATE RTRIM)))AND(((CAST(t0.c1 AS REAL))+(rt1.c2 COLLATE NOCASE)))));
SELECT MAX(t0.c0) FROM rt1, t0 WHERE ('-1125839889');
SELECT DISTINCT MAX(t0.c0) FROM rt1, t0 WHERE ('-1125839889') LIMIT 0 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM rt1, t0 WHERE (NULLIF(DISTINCT ((t0.c1)%(rt1.c3)), CAST(t0.c2 AS TEXT))) LIMIT 0;
SELECT ALL MAX(rt1.c4) FROM rt1 WHERE ((((~ (rt1.c5))) IS TRUE));
SELECT MAX(rt1.c4) FROM rt1 WHERE ((((~ (rt1.c5))) IS TRUE)) ORDER BY (((((rt1.c3 IN ()))OR((rt1.c4 IN ()))))OR((((rt1.c1, rt1.c4, rt1.c4))<((rt1.c5, rt1.c3, rt1.c0))))) LIMIT 0X0;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c6)<=(rt1.c5)) IN ()));
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((((rt1.c6)<(rt1.c5)) IN ())) ORDER BY ((((((((t0.c0) NOT NULL))OR(((rt1.c4) NOTNULL))))AND(((t0.c4) BETWEEN (x'') AND (t0.c0)))))AND(CAST(0.8378738269369357 AS BLOB))) DESC, CASE ((((((rt1.c4)AND(rt1.c5)))AND(NULL)))OR(t0.c3))  WHEN rt1.c3 COLLATE NOCASE THEN t0.c1 COLLATE RTRIM ELSE ((rt1.c5)>=(t0.c3)) END  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM rt1, t0 WHERE (((t0.c1)>=(t0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt1, t0 WHERE (((t0.c1)>=(t0.c1)) COLLATE NOCASE) LIMIT 0 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (LIKELIHOOD(x'281f40cf', (rt1.c3 IN ()))) LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (((t0.c1)>=(t0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt1, t0 WHERE (((t0.c1)>=(t0.c1)) COLLATE NOCASE) LIMIT 0 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (LIKELIHOOD(x'281f40cf', (rt1.c3 IN ()))) LIMIT 0;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c5)) IN (0.7592528378227351)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c5)) IN (0.7592528378227351)))AND(((((rt1.c5)||(rt1.c5)))||(CAST(rt1.c1 AS INTEGER)))))) ORDER BY ((CASE rt1.c6  WHEN rt1.c0 THEN rt1.c6 WHEN '-759512572' THEN rt1.c0 WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c6 END) NOT BETWEEN (rt1.c5 COLLATE NOCASE) AND (((rt1.c6) NOT BETWEEN (rt1.c4) AND (rt1.c0)))) ASC;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c4 THEN t0.c4 END)<(CAST(t0.c4 AS BLOB)))) ORDER BY ((CAST(t0.c3 AS TEXT)) NOT BETWEEN (((t0.c0)&(t0.c0))) AND (((t0.c3) BETWEEN (t0.c4) AND (t0.c3)))), (((((t0.c1 IN (t0.c1, t0.c4)))OR((- (t0.c4)))))AND(CASE t0.c0  WHEN t0.c3 THEN t0.c1 END)) DESC;
SELECT * FROM t0 WHERE (((((CASE WHEN t0.c4 THEN t0.c4 END)<(CAST(t0.c4 AS BLOB))))AND((((t0.c2 IN ())) IS TRUE)))) ORDER BY ((CAST(t0.c3 AS TEXT)) NOT BETWEEN (((t0.c0)&(t0.c0))) AND (((t0.c3) BETWEEN (t0.c4) AND (t0.c3)))), (((((t0.c1 IN (t0.c1, t0.c4)))OR((- (t0.c4)))))AND(CASE t0.c0  WHEN t0.c3 THEN t0.c1 END)) DESC INTERSECT SELECT ALL * FROM t0 WHERE (((((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c0)))OR(t0.c4)))-((((t0.c1, 0.400123154174566, 0.6046042384422154, 0.08715382449460207))=((t0.c3, t0.c4, 0.9789190505701061, 0.7751636718763827)))))) ORDER BY ((CAST(t0.c3 AS TEXT)) NOT BETWEEN (((t0.c0)&(t0.c0))) AND (((t0.c3) BETWEEN (t0.c4) AND (t0.c3)))), (((((t0.c1 IN (t0.c1, t0.c4)))OR((- (t0.c4)))))AND(CASE t0.c0  WHEN t0.c3 THEN t0.c1 END)) DESC;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c4 THEN t0.c4 END)<(CAST(t0.c4 AS BLOB)))) ORDER BY ((CAST(t0.c3 AS TEXT)) NOT BETWEEN (((t0.c0)&(t0.c0))) AND (((t0.c3) BETWEEN (t0.c4) AND (t0.c3)))), (((((t0.c1 IN (t0.c1, t0.c4)))OR((- (t0.c4)))))AND(CASE t0.c0  WHEN t0.c3 THEN t0.c1 END)) DESC;
SELECT * FROM t0 WHERE (((((CASE WHEN t0.c4 THEN t0.c4 END)<(CAST(t0.c4 AS BLOB))))AND((((t0.c2 IN ())) IS TRUE)))) ORDER BY ((CAST(t0.c3 AS TEXT)) NOT BETWEEN (((t0.c0)&(t0.c0))) AND (((t0.c3) BETWEEN (t0.c4) AND (t0.c3)))), (((((t0.c1 IN (t0.c1, t0.c4)))OR((- (t0.c4)))))AND(CASE t0.c0  WHEN t0.c3 THEN t0.c1 END)) DESC INTERSECT SELECT ALL * FROM t0 WHERE (((((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c0)))OR(t0.c4)))-((((t0.c1, 0.400123154174566, 0.6046042384422154, 0.08715382449460207))=((t0.c3, t0.c4, 0.9789190505701061, 0.7751636718763827)))))) ORDER BY ((CAST(t0.c3 AS TEXT)) NOT BETWEEN (((t0.c0)&(t0.c0))) AND (((t0.c3) BETWEEN (t0.c4) AND (t0.c3)))), (((((t0.c1 IN (t0.c1, t0.c4)))OR((- (t0.c4)))))AND(CASE t0.c0  WHEN t0.c3 THEN t0.c1 END)) DESC;
SELECT ALL * FROM t0 WHERE (((((((t0.c3, t0.c4)) NOT BETWEEN ((t0.c1, t0.c3)) AND ((x'fd', t0.c1))), ((t0.c1)>>(t0.c4))))!=((((t0.c3) IS TRUE), ((t0.c4) NOTNULL)))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c3, t0.c4)) NOT BETWEEN ((t0.c1, t0.c3)) AND ((x'fd', t0.c1))), ((t0.c1)>>(t0.c4))))!=((((t0.c3) IS TRUE), ((t0.c4) NOTNULL)))));
SELECT ALL * FROM t0 WHERE (((((((t0.c3, t0.c4)) NOT BETWEEN ((t0.c1, t0.c3)) AND ((x'fd', t0.c1))), ((t0.c1)>>(t0.c4))))!=((((t0.c3) IS TRUE), ((t0.c4) NOTNULL)))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c3, t0.c4)) NOT BETWEEN ((t0.c1, t0.c3)) AND ((x'fd', t0.c1))), ((t0.c1)>>(t0.c4))))!=((((t0.c3) IS TRUE), ((t0.c4) NOTNULL)))));
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (SQLITE_COMPILEOPTION_GET(((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c5))));
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (SQLITE_COMPILEOPTION_GET(((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c5)))) ORDER BY CAST(((rt1.c1)<>(rt1.c0)) AS NUMERIC) ASC, CASE WHEN CAST(rt1.c2 AS INTEGER) THEN rt1.c1 COLLATE NOCASE WHEN (rt1.c1 IN (t0.c2, rt1.c3)) THEN CAST(t0.c2 AS BLOB) ELSE (~ (rt1.c4)) END  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE ((((((t0.c0, rt1.c5)) BETWEEN ((t0.c4, t0.c1)) AND ((rt1.c1, rt1.c5)))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (t0.c2))) ORDER BY CAST(((rt1.c1)<>(rt1.c0)) AS NUMERIC) ASC, CASE WHEN CAST(rt1.c2 AS INTEGER) THEN rt1.c1 COLLATE NOCASE WHEN (rt1.c1 IN (t0.c2, rt1.c3)) THEN CAST(t0.c2 AS BLOB) ELSE (~ (rt1.c4)) END  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (SQLITE_COMPILEOPTION_GET(((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c5))));
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE (SQLITE_COMPILEOPTION_GET(((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c5)))) ORDER BY CAST(((rt1.c1)<>(rt1.c0)) AS NUMERIC) ASC, CASE WHEN CAST(rt1.c2 AS INTEGER) THEN rt1.c1 COLLATE NOCASE WHEN (rt1.c1 IN (t0.c2, rt1.c3)) THEN CAST(t0.c2 AS BLOB) ELSE (~ (rt1.c4)) END  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE ((((((t0.c0, rt1.c5)) BETWEEN ((t0.c4, t0.c1)) AND ((rt1.c1, rt1.c5)))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (t0.c2))) ORDER BY CAST(((rt1.c1)<>(rt1.c0)) AS NUMERIC) ASC, CASE WHEN CAST(rt1.c2 AS INTEGER) THEN rt1.c1 COLLATE NOCASE WHEN (rt1.c1 IN (t0.c2, rt1.c3)) THEN CAST(t0.c2 AS BLOB) ELSE (~ (rt1.c4)) END  NULLS LAST LIMIT 0;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON 0.9247696419230018 WHERE ('ّE_') ORDER BY ((HEX(rt1.c2)) NOTNULL) DESC  NULLS FIRST, UPPER(DISTINCT DATE(t0.c2, t0.c4, t0.c3)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON 0.9247696419230018 WHERE ((('ّE_')AND((((rt1.c1)<>(rt1.c5)) IN (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c5))))))) ORDER BY ((HEX(rt1.c2)) NOTNULL) DESC  NULLS FIRST, UPPER(DISTINCT DATE(t0.c2, t0.c4, t0.c3)) ASC  NULLS LAST;
SELECT MAX(t0.c0) FROM t0, rt1 WHERE (rt1.c4) ORDER BY CAST(((rt1.c1)OR(rt1.c1)) AS TEXT)  NULLS LAST;
SELECT MAX(t0.c0) FROM t0, rt1 WHERE (((rt1.c4)AND(((x'6498') IS FALSE)))) ORDER BY (t0.c2 IN ()) COLLATE BINARY DESC, (((rt1.c6 IN (rt1.c2, t0.c4))) BETWEEN (rt1.c4 COLLATE RTRIM) AND (CAST(t0.c1 AS REAL)))  NULLS LAST;
SELECT * FROM t0, rt1 WHERE ((((rt1.c3, t0.c4)) BETWEEN (('1485884017', rt1.c5 COLLATE NOCASE)) AND (((((rt1.c0, rt1.c5, t0.c1)) BETWEEN ((t0.c4, rt1.c2, t0.c2)) AND ((rt1.c1, rt1.c3, rt1.c2))), ((rt1.c3)&(rt1.c0))))));
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c3, t0.c4)) BETWEEN (('1485884017', rt1.c5 COLLATE NOCASE)) AND (((((rt1.c0, rt1.c5, t0.c1)) BETWEEN ((t0.c4, rt1.c2, t0.c2)) AND ((rt1.c1, rt1.c3, rt1.c2))), ((rt1.c3)&(rt1.c0)))))) LIMIT 1 INTERSECT SELECT ALL * FROM t0, rt1 WHERE (((((~ (rt1.c6))))<((((t0.c3)>=(rt1.c3)))))) LIMIT 1;
SELECT * FROM t0, rt1 WHERE ((((rt1.c3, t0.c4)) BETWEEN (('1485884017', rt1.c5 COLLATE NOCASE)) AND (((((rt1.c0, rt1.c5, t0.c1)) BETWEEN ((t0.c4, rt1.c2, t0.c2)) AND ((rt1.c1, rt1.c3, rt1.c2))), ((rt1.c3)&(rt1.c0))))));
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c3, t0.c4)) BETWEEN (('1485884017', rt1.c5 COLLATE NOCASE)) AND (((((rt1.c0, rt1.c5, t0.c1)) BETWEEN ((t0.c4, rt1.c2, t0.c2)) AND ((rt1.c1, rt1.c3, rt1.c2))), ((rt1.c3)&(rt1.c0)))))) LIMIT 1 INTERSECT SELECT ALL * FROM t0, rt1 WHERE (((((~ (rt1.c6))))<((((t0.c3)>=(rt1.c3)))))) LIMIT 1;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c6 COLLATE NOCASE) ISNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c6 COLLATE NOCASE) ISNULL))AND((((rt1.c5, rt1.c6)) BETWEEN ((((rt1.c2)<=(rt1.c5)), (NOT (rt1.c6)))) AND ((rt1.c3 COLLATE RTRIM, (rt1.c3 IN (rt1.c3)))))))) LIMIT 0X4;
SELECT * FROM rt1 WHERE (CHAR(CASE rt1.c5  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN x'7e' WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c5 END)) ORDER BY (NULL IN ())  NULLS FIRST, ((((rt1.c1) NOT NULL))GLOB(((rt1.c1)IS(rt1.c1))));
SELECT DISTINCT * FROM rt1 WHERE (CHAR(CASE rt1.c5  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN x'7e' WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c5 END)) ORDER BY (NULL IN ())  NULLS FIRST, ((((rt1.c1) NOT NULL))GLOB(((rt1.c1)IS(rt1.c1))));
SELECT * FROM rt1 WHERE (CHAR(CASE rt1.c5  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN x'7e' WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c5 END)) ORDER BY (NULL IN ())  NULLS FIRST, ((((rt1.c1) NOT NULL))GLOB(((rt1.c1)IS(rt1.c1))));
SELECT * FROM rt1, t0 WHERE (((CASE t0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c3 END)<=((rt1.c2 IN (t0.c0)))));
SELECT ALL * FROM rt1, t0 WHERE (((((CASE t0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c3 END)<=((rt1.c2 IN (t0.c0)))))AND(CAST(((rt1.c4)>(t0.c4)) AS BLOB)))) ORDER BY ((((((t0.c2) IS TRUE))OR(NULL)))AND(COALESCE(t0.c3, rt1.c4, rt1.c5))) INTERSECT SELECT * FROM rt1, t0 WHERE (json_array_length(t0.c1 COLLATE NOCASE)) ORDER BY ((((((t0.c2) IS TRUE))OR(NULL)))AND(COALESCE(t0.c3, rt1.c4, rt1.c5)));
SELECT * FROM rt1, t0 WHERE (((CASE t0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c3 END)<=((rt1.c2 IN (t0.c0)))));
SELECT ALL * FROM rt1, t0 WHERE (((((CASE t0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c3 END)<=((rt1.c2 IN (t0.c0)))))AND(CAST(((rt1.c4)>(t0.c4)) AS BLOB)))) ORDER BY ((((((t0.c2) IS TRUE))OR(NULL)))AND(COALESCE(t0.c3, rt1.c4, rt1.c5))) INTERSECT SELECT * FROM rt1, t0 WHERE (json_array_length(t0.c1 COLLATE NOCASE)) ORDER BY ((((((t0.c2) IS TRUE))OR(NULL)))AND(COALESCE(t0.c3, rt1.c4, rt1.c5)));
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((NULL)>=('90315868')) COLLATE RTRIM WHERE (((((rt1.c0)IS(rt1.c2))) BETWEEN ('02') AND (((rt1.c3)/(rt1.c2))))) ORDER BY CAST('E&wX' AS NUMERIC)  NULLS LAST, (((((t0.c2 IN (t0.c3)))OR(CAST(t0.c3 AS TEXT))))AND(((rt1.c6)<<(rt1.c6)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((NULL)>=('90315868')) COLLATE RTRIM WHERE (((((((rt1.c0)IS(rt1.c2))) BETWEEN ('02') AND (((rt1.c3)/(rt1.c2)))))AND(0.7514731750430615))) ORDER BY ((((t0.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c5))) IN (CAST(t0.c3 AS BLOB))) DESC, t0.c4  NULLS LAST, UPPER(t0.c0) COLLATE NOCASE LIMIT 1;
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((NULL)>=('90315868')) COLLATE RTRIM WHERE (((((rt1.c0)IS(rt1.c2))) BETWEEN ('02') AND (((rt1.c3)/(rt1.c2))))) ORDER BY CAST('E&wX' AS NUMERIC)  NULLS LAST, (((((t0.c2 IN (t0.c3)))OR(CAST(t0.c3 AS TEXT))))AND(((rt1.c6)<<(rt1.c6)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((NULL)>=('90315868')) COLLATE RTRIM WHERE (((((((rt1.c0)IS(rt1.c2))) BETWEEN ('02') AND (((rt1.c3)/(rt1.c2)))))AND(0.7514731750430615))) ORDER BY ((((t0.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c5))) IN (CAST(t0.c3 AS BLOB))) DESC, t0.c4  NULLS LAST, UPPER(t0.c0) COLLATE NOCASE LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c1) IS FALSE) IN ())) ORDER BY ((((rt1.c2)=(NULL))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (t0.c1) AND (t0.c1))) AND (CASE WHEN t0.c3 THEN rt1.c1 WHEN t0.c0 THEN rt1.c4 ELSE rt1.c6 END))  NULLS FIRST, ((NULL) NOT BETWEEN (CAST(t0.c3 AS TEXT)) AND (((rt1.c5)|(rt1.c6)))), ((((((rt1.c6) NOT NULL))AND(CAST(t0.c1 AS INTEGER))))AND(CASE WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c6 THEN t0.c4 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c6 END)) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c1) IS FALSE) IN ()))AND(((t0.c4)=(((rt1.c1)<<(rt1.c2))))))) ORDER BY ((((rt1.c2)=(NULL))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (t0.c1) AND (t0.c1))) AND (CASE WHEN t0.c3 THEN rt1.c1 WHEN t0.c0 THEN rt1.c4 ELSE rt1.c6 END))  NULLS FIRST, ((NULL) NOT BETWEEN (CAST(t0.c3 AS TEXT)) AND (((rt1.c5)|(rt1.c6)))), ((((((rt1.c6) NOT NULL))AND(CAST(t0.c1 AS INTEGER))))AND(CASE WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c6 THEN t0.c4 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c6 END)) ASC INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CASE (((t0.c2, rt1.c1))>((rt1.c3, x'')))  WHEN ((0x40061ec4)<<(rt1.c5)) THEN 0xffffffffdb557717 WHEN (((rt1.c0)) NOT BETWEEN ((t0.c4)) AND ((rt1.c4))) THEN CAST(0.8320725354232795 AS NUMERIC) END) ORDER BY ((((rt1.c2)=(NULL))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (t0.c1) AND (t0.c1))) AND (CASE WHEN t0.c3 THEN rt1.c1 WHEN t0.c0 THEN rt1.c4 ELSE rt1.c6 END))  NULLS FIRST, ((NULL) NOT BETWEEN (CAST(t0.c3 AS TEXT)) AND (((rt1.c5)|(rt1.c6)))), ((((((rt1.c6) NOT NULL))AND(CAST(t0.c1 AS INTEGER))))AND(CASE WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c6 THEN t0.c4 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c6 END)) ASC;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c1) IS FALSE) IN ())) ORDER BY ((((rt1.c2)=(NULL))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (t0.c1) AND (t0.c1))) AND (CASE WHEN t0.c3 THEN rt1.c1 WHEN t0.c0 THEN rt1.c4 ELSE rt1.c6 END))  NULLS FIRST, ((NULL) NOT BETWEEN (CAST(t0.c3 AS TEXT)) AND (((rt1.c5)|(rt1.c6)))), ((((((rt1.c6) NOT NULL))AND(CAST(t0.c1 AS INTEGER))))AND(CASE WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c6 THEN t0.c4 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c6 END)) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c1) IS FALSE) IN ()))AND(((t0.c4)=(((rt1.c1)<<(rt1.c2))))))) ORDER BY ((((rt1.c2)=(NULL))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (t0.c1) AND (t0.c1))) AND (CASE WHEN t0.c3 THEN rt1.c1 WHEN t0.c0 THEN rt1.c4 ELSE rt1.c6 END))  NULLS FIRST, ((NULL) NOT BETWEEN (CAST(t0.c3 AS TEXT)) AND (((rt1.c5)|(rt1.c6)))), ((((((rt1.c6) NOT NULL))AND(CAST(t0.c1 AS INTEGER))))AND(CASE WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c6 THEN t0.c4 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c6 END)) ASC INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CASE (((t0.c2, rt1.c1))>((rt1.c3, x'')))  WHEN ((0x40061ec4)<<(rt1.c5)) THEN 0xffffffffdb557717 WHEN (((rt1.c0)) NOT BETWEEN ((t0.c4)) AND ((rt1.c4))) THEN CAST(0.8320725354232795 AS NUMERIC) END) ORDER BY ((((rt1.c2)=(NULL))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (t0.c1) AND (t0.c1))) AND (CASE WHEN t0.c3 THEN rt1.c1 WHEN t0.c0 THEN rt1.c4 ELSE rt1.c6 END))  NULLS FIRST, ((NULL) NOT BETWEEN (CAST(t0.c3 AS TEXT)) AND (((rt1.c5)|(rt1.c6)))), ((((((rt1.c6) NOT NULL))AND(CAST(t0.c1 AS INTEGER))))AND(CASE WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c6 THEN t0.c4 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c6 END)) ASC;
SELECT ALL MAX(t0.c3) FROM rt1, t0 WHERE ((+ ((t0.c1 IN (rt1.c1))))) ORDER BY ((rt1.c4)>=((~ (rt1.c6)))) DESC  NULLS FIRST, CASE WHEN (('63#<S')|(rt1.c1)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c5)) WHEN '_' THEN ((((((((t0.c2)AND(rt1.c2)))OR(t0.c2)))AND(rt1.c0)))OR(t0.c2)) ELSE COALESCE(DISTINCT rt1.c3, t0.c3, NULL, rt1.c4) END  NULLS LAST;
SELECT MAX(t0.c3) FROM rt1, t0 WHERE ((((+ ((t0.c1 IN (rt1.c1)))))AND(((((rt1.c4)LIKE(rt1.c6))) NOT BETWEEN ((((0.0024863195431846785, t0.c3)) BETWEEN ((rt1.c0, rt1.c5)) AND ((t0.c4, t0.c0)))) AND (((rt1.c6)||(rt1.c6))))))) ORDER BY ((t0.c3 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 WHERE (((-1.7976931348623157E308)&(t0.c3 COLLATE RTRIM)));
SELECT ALL * FROM t0 WHERE (((((-1.7976931348623157E308)&(t0.c3 COLLATE RTRIM)))AND(TOTAL_CHANGES()))) ORDER BY (((t0.c0)) NOT BETWEEN ((NULL)) AND ((json_array_length(t0.c4)))) DESC, (((t0.c2)=(t0.c0)) IN ()), (UPPER(DISTINCT t0.c1) IN (t0.c3, t0.c2)) INTERSECT SELECT * FROM t0 WHERE (CAST(0.6951551934856822 AS TEXT)) ORDER BY (((t0.c0)) NOT BETWEEN ((NULL)) AND ((json_array_length(t0.c4)))) DESC, (((t0.c2)==(t0.c0)) IN ()), (UPPER(DISTINCT t0.c1) IN (t0.c3, t0.c2));
SELECT ALL * FROM t0 WHERE (((-1.7976931348623157E308)&(t0.c3 COLLATE RTRIM)));
SELECT ALL * FROM t0 WHERE (((((-1.7976931348623157E308)&(t0.c3 COLLATE RTRIM)))AND(TOTAL_CHANGES()))) ORDER BY (((t0.c0)) NOT BETWEEN ((NULL)) AND ((json_array_length(t0.c4)))) DESC, (((t0.c2)=(t0.c0)) IN ()), (UPPER(DISTINCT t0.c1) IN (t0.c3, t0.c2)) INTERSECT SELECT * FROM t0 WHERE (CAST(0.6951551934856822 AS TEXT)) ORDER BY (((t0.c0)) NOT BETWEEN ((NULL)) AND ((json_array_length(t0.c4)))) DESC, (((t0.c2)==(t0.c0)) IN ()), (UPPER(DISTINCT t0.c1) IN (t0.c3, t0.c2));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c5 IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c5 IN ())) LIMIT 0;
SELECT MIN(rt1.c4) FROM rt1, t0 WHERE ((((('', rt1.c2, t0.c2, x'')) NOT BETWEEN ((t0.c0, t0.c3, t0.c3, rt1.c6)) AND ((rt1.c4, rt1.c5, rt1.c0, rt1.c5))) IN (rt1.c1 COLLATE RTRIM)));
SELECT DISTINCT MIN(rt1.c4) FROM rt1, t0 WHERE ((((('', rt1.c2, t0.c2, x'')) NOT BETWEEN ((t0.c0, t0.c3, t0.c3, rt1.c6)) AND ((rt1.c4, rt1.c5, rt1.c0, rt1.c5))) IN (rt1.c1 COLLATE RTRIM))) ORDER BY '-1974438998' COLLATE RTRIM ASC LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(rt1.c4) FROM rt1, t0 WHERE (((((rt1.c6) IS FALSE)) ISNULL)) ORDER BY '-1974438998' COLLATE RTRIM ASC LIMIT 0;
SELECT MAX(rt1.c1) FROM rt1 WHERE ((((rt1.c5 IN ()))<=((((rt1.c0, rt1.c4))<=((rt1.c0, rt1.c5))))));
SELECT MAX(rt1.c1) FROM rt1 WHERE ((((((rt1.c5 IN ()))<=((((rt1.c0, rt1.c4))<=((rt1.c0, rt1.c5))))))AND((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c4)) IN (CAST(rt1.c4 AS INTEGER)))))) INTERSECT SELECT MAX(rt1.c1) FROM rt1 WHERE (UPPER(((rt1.c4)>>(rt1.c6))));
SELECT ALL MIN(rt1.c0) FROM rt1 WHERE (((((((((rt1.c3) NOTNULL))OR(rt1.c4)))OR(CAST(rt1.c3 AS REAL))))AND(0x140d43b4)));
SELECT DISTINCT MIN(rt1.c0) FROM rt1 WHERE (((((((((((rt1.c3) NOTNULL))OR(rt1.c4)))OR(CAST(rt1.c3 AS REAL))))AND(336413620)))AND((- (CAST(rt1.c2 AS REAL))))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c6)&(rt1.c4))) NOT NULL));
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c6)&(rt1.c4))) NOT NULL))AND(((((rt1.c4) NOT BETWEEN (0x5b8bbd4d) AND (rt1.c0))) ISNULL)))) LIMIT 0X2;
SELECT ALL * FROM rt1 WHERE (((((rt1.c6)&(rt1.c4))) NOT NULL));
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c6)&(rt1.c4))) NOT NULL))AND(((((rt1.c4) NOT BETWEEN (0x5b8bbd4d) AND (rt1.c0))) ISNULL)))) LIMIT 0X2;
SELECT * FROM t0 WHERE ((NOT (((1585805376) NOT BETWEEN (t0.c0) AND (t0.c1)))));
SELECT ALL * FROM t0 WHERE ((((NOT (((1585805376) NOT BETWEEN (t0.c0) AND (t0.c1)))))AND(CAST(((t0.c4)<=(t0.c2)) AS TEXT)))) LIMIT 2;
SELECT * FROM t0 WHERE ((NOT (((1585805376) NOT BETWEEN (t0.c0) AND (t0.c1)))));
SELECT ALL * FROM t0 WHERE ((((NOT (((1585805376) NOT BETWEEN (t0.c0) AND (t0.c1)))))AND(CAST(((t0.c4)<=(t0.c2)) AS TEXT)))) LIMIT 2;
SELECT * FROM rt1 WHERE (CASE (((rt1.c0, rt1.c0, x'')) BETWEEN ((rt1.c2, rt1.c3, rt1.c0)) AND ((rt1.c4, rt1.c6, rt1.c5)))  WHEN rt1.c6 THEN rt1.c3 COLLATE BINARY WHEN ((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c3)) THEN (((x'be3e')) BETWEEN ((rt1.c5)) AND ((rt1.c6))) WHEN ((((((rt1.c6)AND(rt1.c6)))OR('KbfLG%<k')))OR(rt1.c5)) THEN CAST(rt1.c2 AS REAL) END) ORDER BY (NOT (CAST(rt1.c6 AS NUMERIC)))  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (CASE (((rt1.c0, rt1.c0, x'')) BETWEEN ((rt1.c2, rt1.c3, rt1.c0)) AND ((rt1.c4, rt1.c6, rt1.c5)))  WHEN rt1.c6 THEN rt1.c3 COLLATE BINARY WHEN ((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c3)) THEN (((x'be3e')) BETWEEN ((rt1.c5)) AND ((rt1.c6))) WHEN ((((((rt1.c6)AND(rt1.c6)))OR('KbfLG%<k')))OR(rt1.c5)) THEN CAST(rt1.c2 AS REAL) END) ORDER BY (NOT (CAST(rt1.c6 AS NUMERIC)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN CASE rt1.c3  WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c6 ELSE x'0c' END THEN ((rt1.c1) IS FALSE) WHEN ((((rt1.c6)AND(rt1.c6)))AND(rt1.c0)) THEN (~ (rt1.c2)) END) ORDER BY (NOT (CAST(rt1.c6 AS NUMERIC)))  NULLS FIRST;
SELECT * FROM rt1 WHERE (CASE (((rt1.c0, rt1.c0, x'')) BETWEEN ((rt1.c2, rt1.c3, rt1.c0)) AND ((rt1.c4, rt1.c6, rt1.c5)))  WHEN rt1.c6 THEN rt1.c3 COLLATE BINARY WHEN ((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c3)) THEN (((x'be3e')) BETWEEN ((rt1.c5)) AND ((rt1.c6))) WHEN ((((((rt1.c6)AND(rt1.c6)))OR('KbfLG%<k')))OR(rt1.c5)) THEN CAST(rt1.c2 AS REAL) END) ORDER BY (NOT (CAST(rt1.c6 AS NUMERIC)))  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (CASE (((rt1.c0, rt1.c0, x'')) BETWEEN ((rt1.c2, rt1.c3, rt1.c0)) AND ((rt1.c4, rt1.c6, rt1.c5)))  WHEN rt1.c6 THEN rt1.c3 COLLATE BINARY WHEN ((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c3)) THEN (((x'be3e')) BETWEEN ((rt1.c5)) AND ((rt1.c6))) WHEN ((((((rt1.c6)AND(rt1.c6)))OR('KbfLG%<k')))OR(rt1.c5)) THEN CAST(rt1.c2 AS REAL) END) ORDER BY (NOT (CAST(rt1.c6 AS NUMERIC)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN CASE rt1.c3  WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c6 ELSE x'0c' END THEN ((rt1.c1) IS FALSE) WHEN ((((rt1.c6)AND(rt1.c6)))AND(rt1.c0)) THEN (~ (rt1.c2)) END) ORDER BY (NOT (CAST(rt1.c6 AS NUMERIC)))  NULLS FIRST;
SELECT ALL MIN(rt1.c6) FROM t0, rt1 WHERE ((rt1.c5 COLLATE NOCASE IN ())) ORDER BY ('-1169733075' IN (CAST(0.27613640489990443 AS TEXT), (- (t0.c0)))), ((((((((((rt1.c5)OR(t0.c4)))OR(rt1.c0)))AND(((t0.c4) NOT BETWEEN (t0.c0) AND (rt1.c3)))))AND(((rt1.c1)!=(rt1.c1)))))AND(((t0.c3)>>(t0.c0)))) ASC  NULLS LAST;
SELECT DISTINCT MIN(rt1.c6) FROM t0, rt1 WHERE ((rt1.c5 COLLATE NOCASE IN ())) ORDER BY ('-1169733075' IN (CAST(0.27613640489990443 AS TEXT), (- (t0.c0)))), ((((((((((rt1.c5)OR(t0.c4)))OR(rt1.c0)))AND(((t0.c4) NOT BETWEEN (t0.c0) AND (rt1.c3)))))AND(((rt1.c1)!=(rt1.c1)))))AND(((t0.c3)>>(t0.c0)))) ASC  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT MIN(rt1.c6) FROM t0, rt1 WHERE (((CASE WHEN rt1.c3 THEN '' END) NOTNULL)) ORDER BY ('-1169733075' IN (CAST(0.27613640489990443 AS TEXT), (- (t0.c0)))), ((((((((((rt1.c5)OR(t0.c4)))OR(rt1.c0)))AND(((t0.c4) NOT BETWEEN (t0.c0) AND (rt1.c3)))))AND(((rt1.c1)<>(rt1.c1)))))AND(((t0.c3)>>(t0.c0)))) ASC  NULLS LAST LIMIT 0x3;
SELECT ALL MIN(t0.c4) FROM rt1 INNER JOIN t0 ON (((~ (t0.c4))) BETWEEN (t0.c1) AND (((((t0.c4)AND(t0.c1)))OR(x'39')))) WHERE (((((rt1.c0 IN ())))>=((CASE WHEN t0.c0 THEN rt1.c6 END)))) ORDER BY ((((rt1.c5 COLLATE NOCASE)AND(GLOB(rt1.c4, t0.c4))))OR(CAST(t0.c3 AS INTEGER))) ASC, (((t0.c0)=(rt1.c1)) IN ())  NULLS FIRST;
SELECT ALL MIN(t0.c4) FROM rt1 INNER JOIN t0 ON (((~ (t0.c4))) BETWEEN (t0.c1) AND (((((t0.c4)AND(t0.c1)))OR(x'39')))) WHERE (((((rt1.c0 IN ())))=((CASE WHEN t0.c0 THEN rt1.c6 END)))) ORDER BY ((((rt1.c5 COLLATE NOCASE)AND(GLOB(rt1.c4, t0.c4))))OR(CAST(t0.c3 AS INTEGER))) ASC, (((t0.c0)=(rt1.c1)) IN ())  NULLS FIRST LIMIT 1;
SELECT * FROM rt1, t0 WHERE (json_remove(COALESCE(DISTINCT t0.c1, t0.c4), ((((rt1.c0)OR(rt1.c5)))AND(t0.c1))));
SELECT * FROM rt1, t0 WHERE (json_remove(COALESCE(DISTINCT t0.c1, t0.c4), ((((rt1.c0)OR(rt1.c5)))AND(t0.c1)))) LIMIT 3 INTERSECT SELECT * FROM rt1, t0 WHERE (0.49390986842537943) LIMIT 3;
SELECT * FROM rt1, t0 WHERE (json_remove(COALESCE(DISTINCT t0.c1, t0.c4), ((((rt1.c0)OR(rt1.c5)))AND(t0.c1))));
SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0);
SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0) LIMIT 1 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (CASE t0.c2  WHEN (t0.c4 IN (t0.c3, '-647171589')) THEN t0.c3 END) LIMIT 0X1;
SELECT * FROM t0 WHERE (((((((HEX(DISTINCT t0.c1))OR(((t0.c2) BETWEEN (t0.c2) AND (0x6dec99a0)))))AND(t0.c2)))AND(((t0.c0) BETWEEN (t0.c1) AND (t0.c1))))) ORDER BY (+ (((t0.c3)LIKE(t0.c3))))  NULLS LAST, ((((t0.c3) BETWEEN (t0.c2) AND (t0.c3))) NOT BETWEEN ((t0.c3 IN ())) AND (((t0.c3)==(t0.c4))))  NULLS LAST;
SELECT * FROM t0 WHERE (((((((HEX(DISTINCT t0.c1))OR(((t0.c2) BETWEEN (t0.c2) AND (1844222368)))))AND(t0.c2)))AND(((t0.c0) BETWEEN (t0.c1) AND (t0.c1))))) ORDER BY LIKE(t0.c4, ((t0.c0)|(t0.c2))) ASC INTERSECT SELECT * FROM t0 WHERE ((NOT (t0.c3))) ORDER BY LIKE(t0.c4, ((t0.c0)|(t0.c2))) ASC;
SELECT * FROM t0 WHERE (((((((HEX(DISTINCT t0.c1))OR(((t0.c2) BETWEEN (t0.c2) AND (0x6dec99a0)))))AND(t0.c2)))AND(((t0.c0) BETWEEN (t0.c1) AND (t0.c1))))) ORDER BY (+ (((t0.c3)LIKE(t0.c3))))  NULLS LAST, ((((t0.c3) BETWEEN (t0.c2) AND (t0.c3))) NOT BETWEEN ((t0.c3 IN ())) AND (((t0.c3)==(t0.c4))))  NULLS LAST;
SELECT * FROM t0 WHERE (((((((HEX(DISTINCT t0.c1))OR(((t0.c2) BETWEEN (t0.c2) AND (1844222368)))))AND(t0.c2)))AND(((t0.c0) BETWEEN (t0.c1) AND (t0.c1))))) ORDER BY LIKE(t0.c4, ((t0.c0)|(t0.c2))) ASC INTERSECT SELECT * FROM t0 WHERE ((NOT (t0.c3))) ORDER BY LIKE(t0.c4, ((t0.c0)|(t0.c2))) ASC;
SELECT ALL * FROM t0 WHERE ((((t0.c3, t0.c4)) NOT BETWEEN ((CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c3 WHEN t0.c1 THEN t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c3))))) AND ((CAST(t0.c2 AS TEXT), t0.c4 COLLATE RTRIM))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c3, t0.c4)) NOT BETWEEN ((CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c3 WHEN t0.c1 THEN t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c3))))) AND ((CAST(t0.c2 AS TEXT), t0.c4 COLLATE RTRIM))))AND(json_patch('d^', 3.90600562E8) COLLATE RTRIM))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((t0.c3, t0.c4)) NOT BETWEEN ((CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c3 WHEN t0.c1 THEN t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c3))))) AND ((CAST(t0.c2 AS TEXT), t0.c4 COLLATE RTRIM))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c3, t0.c4)) NOT BETWEEN ((CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c3 WHEN t0.c1 THEN t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c3))))) AND ((CAST(t0.c2 AS TEXT), t0.c4 COLLATE RTRIM))))AND(json_patch('d^', 3.90600562E8) COLLATE RTRIM))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) LIMIT 1;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON CAST(((((((t0.c0)AND(x'61e765')))OR(rt1.c5)))OR(t0.c4)) AS NUMERIC) WHERE (x'');
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON CAST(((((((t0.c0)AND(x'61e765')))OR(rt1.c5)))OR(t0.c4)) AS NUMERIC) WHERE (((x'')AND(rt1.c0))) ORDER BY rt1.c4 LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON CAST(((((((t0.c0)AND(x'61e765')))OR(rt1.c5)))OR(t0.c4)) AS NUMERIC) WHERE (((((x'')%(rt1.c4)))||(((rt1.c6) NOTNULL)))) ORDER BY rt1.c4 LIMIT 0;
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((CAST(rt1.c2 AS REAL))) AND ((CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c6 THEN x'' WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c1 END))));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((CAST(rt1.c2 AS REAL))) AND ((CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c6 THEN x'' WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c1 END))))AND(((CASE rt1.c0  WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN NULL WHEN rt1.c2 THEN rt1.c5 WHEN '1578129006' THEN rt1.c5 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (rt1.c3))))) LIMIT 0x0;
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((CAST(rt1.c2 AS REAL))) AND ((CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c6 THEN x'' WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c1 END))));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((CAST(rt1.c2 AS REAL))) AND ((CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c6 THEN x'' WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c1 END))))AND(((CASE rt1.c0  WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN NULL WHEN rt1.c2 THEN rt1.c5 WHEN '1578129006' THEN rt1.c5 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (rt1.c3))))) LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c2)) BETWEEN ((((rt1.c6) IS FALSE))) AND (((NOT (rt1.c4)))))) ORDER BY (((rt1.c4 IN (rt1.c3, t0.c4)))!=(CAST(rt1.c2 AS REAL)));
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c2)) BETWEEN ((((rt1.c6) IS FALSE))) AND (((NOT (rt1.c4)))))) ORDER BY ((CAST(rt1.c1 AS TEXT)) NOTNULL) DESC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT * FROM t0 NOT INDEXED, rt1 WHERE ((((('821932353')+(rt1.c3))) BETWEEN (rt1.c5) AND (x''))) ORDER BY ((CAST(rt1.c1 AS TEXT)) NOTNULL) DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c2)) BETWEEN ((((rt1.c6) IS FALSE))) AND (((NOT (rt1.c4)))))) ORDER BY (((rt1.c4 IN (rt1.c3, t0.c4)))!=(CAST(rt1.c2 AS REAL)));
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c2)) BETWEEN ((((rt1.c6) IS FALSE))) AND (((NOT (rt1.c4)))))) ORDER BY ((CAST(rt1.c1 AS TEXT)) NOTNULL) DESC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT * FROM t0 NOT INDEXED, rt1 WHERE ((((('821932353')+(rt1.c3))) BETWEEN (rt1.c5) AND (x''))) ORDER BY ((CAST(rt1.c1 AS TEXT)) NOTNULL) DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt1 WHERE (((((x'b4') IS FALSE)) IS TRUE));
SELECT * FROM rt1 WHERE (((((x'b4') IS FALSE)) IS TRUE)) ORDER BY rt1.c0 COLLATE RTRIM DESC, ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (((rt1.c6)<=(rt1.c4))) AND (rt1.c1 COLLATE BINARY)) DESC  NULLS FIRST, rtreenode(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END, ((rt1.c0)<(rt1.c5)));
SELECT ALL * FROM rt1 WHERE (((((x'b4') IS FALSE)) IS TRUE));
SELECT * FROM rt1 WHERE (((((x'b4') IS FALSE)) IS TRUE)) ORDER BY rt1.c0 COLLATE RTRIM DESC, ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (((rt1.c6)<=(rt1.c4))) AND (rt1.c1 COLLATE BINARY)) DESC  NULLS FIRST, rtreenode(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END, ((rt1.c0)<(rt1.c5)));
SELECT * FROM t0 NATURAL JOIN rt1 WHERE ((((((t0.c3))>=((t0.c2))))IS(rt1.c5 COLLATE RTRIM))) ORDER BY (NOT (CASE WHEN t0.c2 THEN rt1.c2 END)) ASC, ((rt1.c4 COLLATE RTRIM) IS FALSE)  NULLS FIRST, ((((rt1.c5)|(t0.c1))) BETWEEN ('O' COLLATE RTRIM) AND (((((((((((t0.c2)AND(t0.c3)))AND(t0.c4)))AND(t0.c3)))OR(rt1.c3)))OR(t0.c2)))) DESC;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE ((((((((t0.c3))==((t0.c2))))IS(rt1.c5 COLLATE RTRIM)))AND((- (((rt1.c1)AND(rt1.c2))))))) ORDER BY ((((2.010798651E9 IN (rt1.c4)), ((((((NULL)OR(rt1.c5)))OR(t0.c0)))OR(t0.c4))))==((rt1.c4, ((t0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c5)))))  NULLS FIRST LIMIT 0;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE ((((((t0.c3))>=((t0.c2))))IS(rt1.c5 COLLATE RTRIM))) ORDER BY (NOT (CASE WHEN t0.c2 THEN rt1.c2 END)) ASC, ((rt1.c4 COLLATE RTRIM) IS FALSE)  NULLS FIRST, ((((rt1.c5)|(t0.c1))) BETWEEN ('O' COLLATE RTRIM) AND (((((((((((t0.c2)AND(t0.c3)))AND(t0.c4)))AND(t0.c3)))OR(rt1.c3)))OR(t0.c2)))) DESC;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE ((((((((t0.c3))==((t0.c2))))IS(rt1.c5 COLLATE RTRIM)))AND((- (((rt1.c1)AND(rt1.c2))))))) ORDER BY ((((2.010798651E9 IN (rt1.c4)), ((((((NULL)OR(rt1.c5)))OR(t0.c0)))OR(t0.c4))))==((rt1.c4, ((t0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c5)))))  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM rt1 WHERE (((TYPEOF(DISTINCT rt1.c6)) NOT BETWEEN (((rt1.c3)*(rt1.c4))) AND (((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c5))))) ORDER BY CASE json_array(rt1.c0, rt1.c4, rt1.c0)  WHEN rt1.c0 COLLATE RTRIM THEN ((((((rt1.c5)OR(rt1.c1)))OR(0.32638090377842877)))OR(rt1.c2)) END  NULLS FIRST, (('y?' COLLATE BINARY)LIKE(((rt1.c3)AND(rt1.c5))))  NULLS FIRST, ((((((((((rt1.c4)AND(rt1.c2)))AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c2))) IS FALSE)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((TYPEOF(DISTINCT rt1.c6)) NOT BETWEEN (((rt1.c3)*(rt1.c4))) AND (((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c5))))) ORDER BY ((x'')&((rt1.c6 IN (rt1.c6))))  NULLS LAST, IFNULL(((rt1.c6)AND(rt1.c2)), CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c4 END) ASC;
SELECT * FROM rt1, t0 WHERE (LIKELY(DISTINCT rt1.c3) COLLATE BINARY) ORDER BY TYPEOF(DISTINCT ((rt1.c5) BETWEEN (rt1.c2) AND (t0.c1))) ASC  NULLS FIRST, LOWER(DISTINCT ((((rt1.c6)OR(rt1.c2)))AND(rt1.c6)))  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (((LIKELY(DISTINCT rt1.c3) COLLATE BINARY)AND((((rt1.c0, rt1.c5, rt1.c4, rt1.c3, t0.c2)) NOT BETWEEN ((((((rt1.c0)AND(rt1.c2)))OR(x'7b')), ((((t0.c1)OR(t0.c4)))OR(t0.c4)), ((rt1.c5)-(rt1.c2)), TRIM(DISTINCT rt1.c3, t0.c1), x'989e')) AND (((+ (rt1.c5)), CAST(rt1.c6 AS TEXT), LENGTH(rt1.c2), CAST(t0.c4 AS INTEGER), 0.4563061935978805)))))) ORDER BY (((rt1.c2) ISNULL) IN (rt1.c0));
SELECT * FROM rt1, t0 WHERE (LIKELY(DISTINCT rt1.c3) COLLATE BINARY) ORDER BY TYPEOF(DISTINCT ((rt1.c5) BETWEEN (rt1.c2) AND (t0.c1))) ASC  NULLS FIRST, LOWER(DISTINCT ((((rt1.c6)OR(rt1.c2)))AND(rt1.c6)))  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (((LIKELY(DISTINCT rt1.c3) COLLATE BINARY)AND((((rt1.c0, rt1.c5, rt1.c4, rt1.c3, t0.c2)) NOT BETWEEN ((((((rt1.c0)AND(rt1.c2)))OR(x'7b')), ((((t0.c1)OR(t0.c4)))OR(t0.c4)), ((rt1.c5)-(rt1.c2)), TRIM(DISTINCT rt1.c3, t0.c1), x'989e')) AND (((+ (rt1.c5)), CAST(rt1.c6 AS TEXT), LENGTH(rt1.c2), CAST(t0.c4 AS INTEGER), 0.4563061935978805)))))) ORDER BY (((rt1.c2) ISNULL) IN (rt1.c0));
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c1 COLLATE BINARY)<((('') NOTNULL))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((rt1.c1 COLLATE BINARY)<((('') NOTNULL)))) ORDER BY ((rt1.c3) NOT NULL) COLLATE RTRIM COLLATE NOCASE ASC;
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c1 COLLATE BINARY)<((('') NOTNULL))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((rt1.c1 COLLATE BINARY)<((('') NOTNULL)))) ORDER BY ((rt1.c3) NOT NULL) COLLATE RTRIM COLLATE NOCASE ASC;
SELECT * FROM t0, rt1 WHERE (CASE ((rt1.c3)>=(rt1.c0))  WHEN t0.c1 COLLATE RTRIM THEN ((t0.c1)<>(t0.c3)) WHEN (t0.c0 IN ()) THEN t0.c3 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN rt1.c4 ELSE (0.2822540716100089 IN ()) END);
SELECT ALL * FROM t0, rt1 WHERE (((CASE ((rt1.c3)=(rt1.c0))  WHEN t0.c1 COLLATE RTRIM THEN ((t0.c1)>(t0.c3)) WHEN (t0.c0 IN ()) THEN t0.c3 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN rt1.c4 ELSE (0.2822540716100089 IN ()) END)AND((((rt1.c1))<((t0.c0))) COLLATE BINARY)));
SELECT * FROM t0, rt1 WHERE (CASE ((rt1.c3)>=(rt1.c0))  WHEN t0.c1 COLLATE RTRIM THEN ((t0.c1)<>(t0.c3)) WHEN (t0.c0 IN ()) THEN t0.c3 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN rt1.c4 ELSE (0.2822540716100089 IN ()) END);
SELECT ALL * FROM t0, rt1 WHERE (((CASE ((rt1.c3)=(rt1.c0))  WHEN t0.c1 COLLATE RTRIM THEN ((t0.c1)>(t0.c3)) WHEN (t0.c0 IN ()) THEN t0.c3 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN rt1.c4 ELSE (0.2822540716100089 IN ()) END)AND((((rt1.c1))<((t0.c0))) COLLATE BINARY)));
SELECT * FROM t0, rt1 WHERE ((rt1.c5 COLLATE BINARY IN (((((((rt1.c4)AND(t0.c4)))AND(t0.c2)))AND(rt1.c6))))) ORDER BY SQLITE_VERSION() DESC, (JULIANDAY(t0.c1, t0.c2, rt1.c0) IN (0.5805791315113594)) ASC;
SELECT ALL * FROM t0, rt1 WHERE ((rt1.c5 COLLATE BINARY IN (((((((rt1.c4)AND(t0.c4)))AND(t0.c2)))AND(rt1.c6))))) ORDER BY ((('YZ', t0.c0, t0.c1, rt1.c5))<((rt1.c3, rt1.c6, t0.c3, rt1.c5))) COLLATE BINARY, ((t0.c0)!=(rt1.c4)) COLLATE RTRIM ASC;
SELECT * FROM t0, rt1 WHERE ((rt1.c5 COLLATE BINARY IN (((((((rt1.c4)AND(t0.c4)))AND(t0.c2)))AND(rt1.c6))))) ORDER BY SQLITE_VERSION() DESC, (JULIANDAY(t0.c1, t0.c2, rt1.c0) IN (0.5805791315113594)) ASC;
SELECT ALL * FROM t0, rt1 WHERE ((rt1.c5 COLLATE BINARY IN (((((((rt1.c4)AND(t0.c4)))AND(t0.c2)))AND(rt1.c6))))) ORDER BY ((('YZ', t0.c0, t0.c1, rt1.c5))<((rt1.c3, rt1.c6, t0.c3, rt1.c5))) COLLATE BINARY, ((t0.c0)!=(rt1.c4)) COLLATE RTRIM ASC;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((CASE t0.c0  WHEN t0.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 END)|(CASE t0.c2  WHEN t0.c4 THEN t0.c1 ELSE t0.c2 END)));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((CASE t0.c0  WHEN t0.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 END)|(CASE t0.c2  WHEN t0.c4 THEN t0.c1 ELSE t0.c2 END))) ORDER BY CAST(((t0.c2)LIKE(t0.c2)) AS INTEGER) ASC  NULLS LAST LIMIT 0X2;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((CASE t0.c0  WHEN t0.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 END)|(CASE t0.c2  WHEN t0.c4 THEN t0.c1 ELSE t0.c2 END)));
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((CASE t0.c0  WHEN t0.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 END)|(CASE t0.c2  WHEN t0.c4 THEN t0.c1 ELSE t0.c2 END))) ORDER BY CAST(((t0.c2)LIKE(t0.c2)) AS INTEGER) ASC  NULLS LAST LIMIT 0X2;
SELECT MAX(t0.c3) FROM t0 WHERE (((t0.c4)LIKE((NOT (t0.c0)))));
SELECT MAX(t0.c3) FROM t0 WHERE (((((t0.c4)LIKE((NOT (t0.c0)))))AND(ABS(DISTINCT (t0.c0 IN (t0.c0, t0.c0)))))) ORDER BY ((HEX(t0.c3))>=(((t0.c3) BETWEEN (t0.c1) AND (t0.c4)))) INTERSECT SELECT ALL MAX(t0.c3) FROM t0 WHERE ((HEX(t0.c1) IN ())) ORDER BY ((HEX(t0.c3))>=(((t0.c3) BETWEEN (t0.c1) AND (t0.c4))));
SELECT ALL MAX(rt1.c6) FROM t0, rt1 WHERE ((((rt1.c1, t0.c2, rt1.c0, 0.7550217978245929, rt1.c2, rt1.c5, t0.c1)) NOT BETWEEN ((CAST(t0.c0 AS REAL), (rt1.c2 IN (rt1.c4)), CAST(rt1.c1 AS BLOB), ((((((rt1.c4)OR(rt1.c0)))OR(t0.c1)))AND(rt1.c2)), ((((((x'')OR(rt1.c0)))OR(rt1.c4)))OR(rt1.c3)), ((t0.c4)LIKE(rt1.c6)), ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))) AND ((CAST(rt1.c5 AS NUMERIC), rt1.c3, (((('44439548')AND(0x522d6794)))AND(rt1.c3)), ((rt1.c3) IS FALSE), NULL, ((t0.c0) NOTNULL), t0.c2))));
SELECT MAX(rt1.c6) FROM t0, rt1 WHERE ((((((rt1.c1, t0.c2, rt1.c0, 0.7550217978245929, rt1.c2, rt1.c5, t0.c1)) NOT BETWEEN ((CAST(t0.c0 AS REAL), (rt1.c2 IN (rt1.c4)), CAST(rt1.c1 AS BLOB), ((((((rt1.c4)OR(rt1.c0)))OR(t0.c1)))AND(rt1.c2)), ((((((x'')OR(rt1.c0)))OR(rt1.c4)))OR(rt1.c3)), ((t0.c4)LIKE(rt1.c6)), ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))) AND ((CAST(rt1.c5 AS NUMERIC), rt1.c3, (((('44439548')AND(0x522d6794)))AND(rt1.c3)), ((rt1.c3) IS FALSE), NULL, ((t0.c0) NOTNULL), t0.c2))))AND(((t0.c2)|(rt1.c5)) COLLATE RTRIM)));
SELECT ALL MAX(t0.c3) FROM t0, rt1 WHERE ((+ (((t0.c0) BETWEEN (rt1.c3) AND (NULL))))) ORDER BY (('-1473457599')<<(((((rt1.c2)AND(t0.c4)))OR(t0.c4))));
SELECT DISTINCT MAX(t0.c3) FROM t0, rt1 WHERE ((((+ (((t0.c0) BETWEEN (rt1.c3) AND (NULL)))))AND(CASE ((t0.c4) BETWEEN (t0.c2) AND (rt1.c6))  WHEN CASE WHEN t0.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c3 END THEN ((t0.c1)*(t0.c1)) WHEN ((t0.c2) BETWEEN (t0.c3) AND (t0.c0)) THEN ((rt1.c4) IS FALSE) WHEN ((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c5)))OR(t0.c2)))AND(rt1.c0)))AND(NULL)) THEN ((((t0.c0)AND(rt1.c1)))AND(rt1.c4)) END))) ORDER BY (('-1473457599')<<(((((rt1.c2)AND(t0.c4)))OR(t0.c4)))) LIMIT 1;
SELECT ALL MIN(t0.c4) FROM t0 WHERE (NULL) ORDER BY (((0.895123510632645))>((t0.c2)))  NULLS LAST;
SELECT DISTINCT MIN(t0.c4) FROM t0 WHERE (((NULL)AND(((((((t0.c2)AND(t0.c1)))AND(t0.c2)))|(((t0.c0)+(t0.c0))))))) ORDER BY ((((((((((((t0.c1)AND(t0.c1)))AND(t0.c3)))OR(t0.c2)))OR(t0.c0)))AND(t0.c2))) NOT BETWEEN (t0.c3) AND ((((t0.c3, t0.c3)) BETWEEN ((t0.c0, t0.c3)) AND ((t0.c1, t0.c2))))) LIMIT 0 INTERSECT SELECT DISTINCT MIN(t0.c4) FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((((((((((t0.c1)AND(t0.c1)))AND(t0.c3)))OR(t0.c2)))OR(t0.c0)))AND(t0.c2))) NOT BETWEEN (t0.c3) AND ((((t0.c3, t0.c3)) BETWEEN ((t0.c0, t0.c3)) AND ((t0.c1, t0.c2))))) LIMIT 0X0;
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN (((t0.c1)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))) WHEN ((t0.c0)&(t0.c0)) THEN t0.c1 WHEN ((t0.c0)<<(t0.c4)) THEN ((t0.c2)<>(t0.c4)) END) ORDER BY t0.c3 ASC  NULLS FIRST, ((((((((((t0.c3)AND(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c0))) IS FALSE) DESC;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN t0.c0 THEN (((t0.c1)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))) WHEN ((t0.c0)&(t0.c0)) THEN t0.c1 WHEN ((t0.c0)<<(t0.c4)) THEN ((t0.c2)<(t0.c4)) END) ORDER BY t0.c3 ASC  NULLS FIRST, ((((((((((t0.c3)AND(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c0))) IS FALSE) DESC LIMIT 0x3;
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN (((t0.c1)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))) WHEN ((t0.c0)&(t0.c0)) THEN t0.c1 WHEN ((t0.c0)<<(t0.c4)) THEN ((t0.c2)<>(t0.c4)) END) ORDER BY t0.c3 ASC  NULLS FIRST, ((((((((((t0.c3)AND(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c0))) IS FALSE) DESC;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN t0.c0 THEN (((t0.c1)) NOT BETWEEN ((t0.c3)) AND ((t0.c1))) WHEN ((t0.c0)&(t0.c0)) THEN t0.c1 WHEN ((t0.c0)<<(t0.c4)) THEN ((t0.c2)<(t0.c4)) END) ORDER BY t0.c3 ASC  NULLS FIRST, ((((((((((t0.c3)AND(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c0))) IS FALSE) DESC LIMIT 0x3;
SELECT MIN(rt1.c1) FROM rt1 WHERE (((0Xffffffffbc0acc5c)>>((((rt1.c5, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c4)) AND ((x'9edb', rt1.c3))))));
SELECT DISTINCT MIN(rt1.c1) FROM rt1 WHERE (((((0xffffffffbc0acc5c)>>((((rt1.c5, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c4)) AND ((x'9edb', rt1.c3))))))AND(rt1.c4)));
SELECT MAX(t0.c1) FROM t0 WHERE (((0.9444880629633382) ISNULL)) ORDER BY ((((((t0.c4) BETWEEN (t0.c3) AND (t0.c1)))OR(CASE WHEN t0.c4 THEN t0.c4 WHEN t0.c0 THEN x'' END)))OR((t0.c2 IN ()))) DESC, CASE CASE WHEN t0.c3 THEN t0.c0 WHEN t0.c2 THEN t0.c3 ELSE t0.c1 END  WHEN (~ (t0.c4)) THEN CASE WHEN t0.c2 THEN t0.c4 WHEN 'b,' THEN t0.c4 END WHEN t0.c1 THEN ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) ELSE ((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c2)) END ASC  NULLS FIRST;
SELECT DISTINCT MAX(t0.c1) FROM t0 WHERE (((0.9444880629633382) ISNULL)) ORDER BY ((((((t0.c4) BETWEEN (t0.c3) AND (t0.c1)))OR(CASE WHEN t0.c4 THEN t0.c4 WHEN t0.c0 THEN x'' END)))OR((t0.c2 IN ()))) DESC, CASE CASE WHEN t0.c3 THEN t0.c0 WHEN t0.c2 THEN t0.c3 ELSE t0.c1 END  WHEN (~ (t0.c4)) THEN CASE WHEN t0.c2 THEN t0.c4 WHEN 'b,' THEN t0.c4 END WHEN t0.c1 THEN ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) ELSE ((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c2)) END ASC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t0.c1) FROM t0 WHERE (((((t0.c1)GLOB(t0.c1)))>>(CAST(t0.c4 AS INTEGER)))) ORDER BY ((((((t0.c4) BETWEEN (t0.c3) AND (t0.c1)))OR(CASE WHEN t0.c4 THEN t0.c4 WHEN t0.c0 THEN x'' END)))OR((t0.c2 IN ()))) DESC, CASE CASE WHEN t0.c3 THEN t0.c0 WHEN t0.c2 THEN t0.c3 ELSE t0.c1 END  WHEN (~ (t0.c4)) THEN CASE WHEN t0.c2 THEN t0.c4 WHEN 'b,' THEN t0.c4 END WHEN t0.c1 THEN ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) ELSE ((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c2)) END ASC  NULLS FIRST;
SELECT MAX(rt1.c5) FROM rt1 WHERE (rt1.c1);
SELECT DISTINCT MAX(rt1.c5) FROM rt1 WHERE (rt1.c1) ORDER BY (((rt1.c6, rt1.c3, rt1.c3, rt1.c1, rt1.c4)) BETWEEN ((rt1.c0, 0X67f11b7, rt1.c1, rt1.c3, 69915681)) AND ((rt1.c1, rt1.c1, rt1.c4, rt1.c5, 0.18911477859848336))) COLLATE BINARY DESC, 737873752 DESC  NULLS FIRST;
SELECT ALL MAX(t0.c3) FROM t0 INNER JOIN rt1 ON (((rt1.c4 IN ()))/((+ (t0.c3)))) WHERE ((((rt1.c5 IN ()))-(json(rt1.c3)))) ORDER BY (t0.c1 IN (t0.c4))  NULLS LAST, ((((t0.c2 IN ()), t0.c3))<((((rt1.c3) NOT BETWEEN ('z3') AND (rt1.c6)), ((rt1.c2) IS FALSE))))  NULLS LAST;
SELECT MAX(t0.c3) FROM t0 INNER JOIN rt1 ON (((rt1.c4 IN ()))/((+ (t0.c3)))) WHERE ((((rt1.c5 IN ()))-(json(rt1.c3)))) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c1 WHEN t0.c3 THEN t0.c4 END)/(((t0.c3)!=(t0.c3))))  NULLS FIRST, ((t0.c4) NOT BETWEEN (((rt1.c4)>=(rt1.c2))) AND ((((rt1.c4, rt1.c3)) BETWEEN ((rt1.c3, t0.c4)) AND ((rt1.c3, rt1.c1))))) INTERSECT SELECT ALL MAX(t0.c3) FROM t0 INNER JOIN rt1 ON (((rt1.c4 IN ()))/((+ (t0.c3)))) WHERE (CASE WHEN (rt1.c5 IN (rt1.c0)) THEN CASE WHEN 0.6407159311986885 THEN rt1.c1 ELSE x'32f185' END END) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c1 WHEN t0.c3 THEN t0.c4 END)/(((t0.c3)<>(t0.c3))))  NULLS FIRST, ((t0.c4) NOT BETWEEN (((rt1.c4)>=(rt1.c2))) AND ((((rt1.c4, rt1.c3)) BETWEEN ((rt1.c3, t0.c4)) AND ((rt1.c3, rt1.c1)))));
SELECT ALL * FROM t0 WHERE ((((t0.c2) IS TRUE) IN ((~ (t0.c1)), t0.c3))) ORDER BY CAST(TYPEOF(DISTINCT t0.c1) AS NUMERIC) ASC, ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c3)))&(CAST(t0.c3 AS BLOB))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c2) IS TRUE) IN ((~ (t0.c1)), t0.c3)))AND(((CASE WHEN t0.c2 THEN t0.c0 END)/(((('', t0.c1, t0.c3)) BETWEEN ((t0.c0, t0.c2, t0.c0)) AND ((t0.c1, t0.c2, t0.c3)))))))) ORDER BY CAST(TYPEOF(DISTINCT t0.c1) AS NUMERIC) ASC, ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c3)))&(CAST(t0.c3 AS BLOB))) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t0 WHERE ((((t0.c2) IS TRUE) IN ((~ (t0.c1)), t0.c3))) ORDER BY CAST(TYPEOF(DISTINCT t0.c1) AS NUMERIC) ASC, ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c3)))&(CAST(t0.c3 AS BLOB))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c2) IS TRUE) IN ((~ (t0.c1)), t0.c3)))AND(((CASE WHEN t0.c2 THEN t0.c0 END)/(((('', t0.c1, t0.c3)) BETWEEN ((t0.c0, t0.c2, t0.c0)) AND ((t0.c1, t0.c2, t0.c3)))))))) ORDER BY CAST(TYPEOF(DISTINCT t0.c1) AS NUMERIC) ASC, ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c3)))&(CAST(t0.c3 AS BLOB))) ASC  NULLS LAST LIMIT 0x0;
SELECT MAX(t0.c2) FROM t0, rt1 WHERE (CASE ((rt1.c0)>>(t0.c0))  WHEN ((rt1.c3) IS TRUE) THEN ((x'') IS TRUE) END);
SELECT ALL MAX(t0.c2) FROM t0, rt1 WHERE (((CASE ((rt1.c0)>>(t0.c0))  WHEN ((rt1.c3) IS TRUE) THEN ((x'') IS TRUE) END)AND((+ (((rt1.c3) NOT BETWEEN (rt1.c5) AND (t0.c4))))))) ORDER BY ((((((((rt1.c6)OR(t0.c3)))OR(rt1.c3)))OR(t0.c1)))IS NOT(rt1.c1)) DESC  NULLS LAST, ((((((((rt1.c6)AND(t0.c1)))OR(rt1.c3)))AND(rt1.c6))) NOTNULL)  NULLS LAST, (((((((((((t0.c4 IN ()))AND(((t0.c0) IS FALSE))))OR((~ (t0.c3)))))OR(((rt1.c3) IS TRUE))))OR(((rt1.c4) BETWEEN (x'') AND (rt1.c4)))))OR(((rt1.c2) NOTNULL))) ASC;
SELECT * FROM rt1, t0 WHERE (((CASE rt1.c0  WHEN t0.c1 THEN rt1.c0 END) NOT BETWEEN (rt1.c2) AND (t0.c0)));
SELECT DISTINCT * FROM rt1 NOT INDEXED, t0 WHERE (((CASE rt1.c0  WHEN t0.c1 THEN rt1.c0 END) NOT BETWEEN (rt1.c2) AND (t0.c0))) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((CASE WHEN t0.c1 THEN rt1.c2 WHEN rt1.c4 THEN '292240954' ELSE t0.c1 END)+((rt1.c3 IN (rt1.c3)))));
SELECT * FROM rt1, t0 WHERE (((CASE rt1.c0  WHEN t0.c1 THEN rt1.c0 END) NOT BETWEEN (rt1.c2) AND (t0.c0)));
SELECT DISTINCT * FROM rt1 NOT INDEXED, t0 WHERE (((CASE rt1.c0  WHEN t0.c1 THEN rt1.c0 END) NOT BETWEEN (rt1.c2) AND (t0.c0))) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((CASE WHEN t0.c1 THEN rt1.c2 WHEN rt1.c4 THEN '292240954' ELSE t0.c1 END)+((rt1.c3 IN (rt1.c3)))));
SELECT * FROM t0, rt1 WHERE (x'b2') ORDER BY ((((rt1.c5) NOT BETWEEN (3.90600562E8) AND (t0.c4)))||(PRINTF(rt1.c4, rt1.c0))) DESC, ((CASE WHEN t0.c0 THEN rt1.c4 ELSE rt1.c1 END) BETWEEN (((t0.c1)==(t0.c4))) AND (t0.c0));
SELECT ALL * FROM t0, rt1 WHERE (((x'b2')AND(-6.95794534E8))) ORDER BY CAST(((t0.c3) IS TRUE) AS REAL) ASC, x'3354cf', ((((rt1.c2) IS FALSE))AND('')) ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL * FROM t0, rt1 WHERE (((((((((rt1.c0) NOTNULL))AND(t0.c2)))OR(TRIM(rt1.c3, t0.c0))))AND(((((((0.36277071755100776)AND(rt1.c0)))OR(rt1.c3)))OR(t0.c4))))) ORDER BY CAST(((t0.c3) IS TRUE) AS REAL) ASC, x'3354cf', ((((rt1.c2) IS FALSE))AND('')) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t0, rt1 WHERE (x'b2') ORDER BY ((((rt1.c5) NOT BETWEEN (3.90600562E8) AND (t0.c4)))||(PRINTF(rt1.c4, rt1.c0))) DESC, ((CASE WHEN t0.c0 THEN rt1.c4 ELSE rt1.c1 END) BETWEEN (((t0.c1)==(t0.c4))) AND (t0.c0));
SELECT ALL * FROM t0, rt1 WHERE (((x'b2')AND(-6.95794534E8))) ORDER BY CAST(((t0.c3) IS TRUE) AS REAL) ASC, x'3354cf', ((((rt1.c2) IS FALSE))AND('')) ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL * FROM t0, rt1 WHERE (((((((((rt1.c0) NOTNULL))AND(t0.c2)))OR(TRIM(rt1.c3, t0.c0))))AND(((((((0.36277071755100776)AND(rt1.c0)))OR(rt1.c3)))OR(t0.c4))))) ORDER BY CAST(((t0.c3) IS TRUE) AS REAL) ASC, x'3354cf', ((((rt1.c2) IS FALSE))AND('')) ASC  NULLS FIRST LIMIT 0;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON CASE CAST(rt1.c6 AS INTEGER)  WHEN ((rt1.c1) IS FALSE) THEN (((rt1.c1))>((NULL))) WHEN ((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c5)) THEN TRIM(t0.c1) END WHERE ((((t0.c4 IN (t0.c0)))GLOB(t0.c3))) ORDER BY CASE WHEN CASE rt1.c0  WHEN t0.c1 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c0 END THEN ((t0.c0)OR(t0.c2)) WHEN 0.3204307490009908 THEN ((((((((rt1.c2)OR(t0.c2)))AND(t0.c1)))AND(rt1.c2)))OR(t0.c4)) WHEN (+ (rt1.c4)) THEN CASE rt1.c5  WHEN rt1.c5 THEN t0.c2 WHEN rt1.c0 THEN t0.c2 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c1 END END;
SELECT DISTINCT COUNT(*) FROM rt1 INNER JOIN t0 ON CASE CAST(rt1.c6 AS INTEGER)  WHEN ((rt1.c1) IS FALSE) THEN (((rt1.c1))>((NULL))) WHEN ((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c5)) THEN TRIM(t0.c1) END WHERE ((((((t0.c4 IN (t0.c0)))GLOB(t0.c3)))AND(CAST('1e500' AS TEXT)))) ORDER BY LTRIM((((NULL, rt1.c1, t0.c1, rt1.c6)) NOT BETWEEN ((rt1.c4, 0xffffffff9c2170e1, rt1.c1, rt1.c2)) AND ((rt1.c0, 'T', rt1.c0, t0.c4))))  NULLS FIRST LIMIT 0;
SELECT MIN(rt1.c5) FROM rt1, t0 WHERE ('1173830580' COLLATE NOCASE);
SELECT MIN(rt1.c5) FROM rt1, t0 WHERE ((('1173830580' COLLATE NOCASE)AND((CASE WHEN t0.c4 THEN t0.c0 WHEN 2102086614 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 ELSE t0.c2 END IN ())))) ORDER BY (((- (rt1.c5))) BETWEEN (t0.c4) AND (((rt1.c3)LIKE(t0.c4))))  NULLS FIRST, (((((0x615705bf, rt1.c3)) BETWEEN ((rt1.c3, rt1.c0)) AND ((rt1.c6, t0.c4))))>(LIKELIHOOD(t0.c2, rt1.c6))) DESC LIMIT 0 INTERSECT SELECT MIN(rt1.c5) FROM rt1, t0 WHERE ((((t0.c1)) NOT BETWEEN ((t0.c3)) AND ((t0.c4 COLLATE NOCASE)))) ORDER BY (((- (rt1.c5))) BETWEEN (t0.c4) AND (((rt1.c3)LIKE(t0.c4))))  NULLS FIRST, (((((1633093055, rt1.c3)) BETWEEN ((rt1.c3, rt1.c0)) AND ((rt1.c6, t0.c4))))>(LIKELIHOOD(t0.c2, rt1.c6))) DESC LIMIT 0X0;
SELECT MIN(t0.c4) FROM t0 NATURAL JOIN rt1 WHERE ((((rt1.c4) NOT NULL) IN ())) ORDER BY (x'' IN ()) COLLATE RTRIM;
SELECT MIN(t0.c4) FROM t0 NATURAL JOIN rt1 WHERE ((((rt1.c4) NOT NULL) IN ())) ORDER BY rt1.c4 DESC  NULLS FIRST INTERSECT SELECT ALL MIN(t0.c4) FROM t0 NATURAL JOIN rt1 WHERE (CASE NULL  WHEN JULIANDAY(rt1.c4, t0.c1, t0.c4) THEN (- (t0.c3)) WHEN ((rt1.c0) IS FALSE) THEN (((t0.c3)) BETWEEN ((rt1.c3)) AND ((t0.c0))) ELSE rt1.c6 END) ORDER BY rt1.c4 DESC  NULLS FIRST;
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE (((CAST(rt1.c2 AS REAL)) IS TRUE)) ORDER BY CAST(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END AS TEXT) DESC  NULLS FIRST;
SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE (((((CAST(rt1.c2 AS REAL)) IS TRUE))AND((- (rt1.c0 COLLATE NOCASE))))) ORDER BY CAST(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END AS TEXT) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE (CASE WHEN ((rt1.c3) IS TRUE) THEN (+ (rt1.c6)) END) ORDER BY CAST(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END AS TEXT) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (QUOTE((t0.c4 IN (t0.c3)))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c4 WHEN t0.c4 THEN t0.c2 ELSE '-1666556278' END)!=('821569049')) DESC, (((CAST(t0.c2 AS BLOB)))<(((((t0.c4)) BETWEEN ((t0.c2)) AND ((t0.c0)))))), (~ (CAST(t0.c4 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (QUOTE((t0.c4 IN (t0.c3)))) ORDER BY (((t0.c4 IN (t0.c1)))<>(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC  NULLS LAST, t0.c4 INTERSECT SELECT ALL * FROM t0 WHERE ((((((((t0.c4 IN (t0.c3)))AND(HEX(t0.c3))))AND((~ (t0.c3)))))OR((((t0.c3))==((t0.c2)))))) ORDER BY (((t0.c4 IN (t0.c1)))!=(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC  NULLS LAST, t0.c4;
SELECT ALL * FROM t0 WHERE (QUOTE((t0.c4 IN (t0.c3)))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c4 WHEN t0.c4 THEN t0.c2 ELSE '-1666556278' END)!=('821569049')) DESC, (((CAST(t0.c2 AS BLOB)))<(((((t0.c4)) BETWEEN ((t0.c2)) AND ((t0.c0)))))), (~ (CAST(t0.c4 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (QUOTE((t0.c4 IN (t0.c3)))) ORDER BY (((t0.c4 IN (t0.c1)))<>(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC  NULLS LAST, t0.c4 INTERSECT SELECT ALL * FROM t0 WHERE ((((((((t0.c4 IN (t0.c3)))AND(HEX(t0.c3))))AND((~ (t0.c3)))))OR((((t0.c3))==((t0.c2)))))) ORDER BY (((t0.c4 IN (t0.c1)))!=(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC  NULLS LAST, t0.c4;
SELECT MAX(t0.c3) FROM t0 WHERE (t0.c2);
SELECT DISTINCT MAX(t0.c3) FROM t0 WHERE (((t0.c2)AND(((((((((((((t0.c4)AND(t0.c0)))AND(t0.c2)))OR('-1908681393')))AND(t0.c0)))OR(t0.c3))) NOTNULL)))) INTERSECT SELECT DISTINCT MAX(t0.c3) FROM t0 WHERE (((((((((highlight(t0.c3, t0.c1, t0.c2, x''))OR(CAST(t0.c4 AS NUMERIC))))AND(((t0.c3) BETWEEN (t0.c3) AND (t0.c4)))))AND(t0.c4)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c1)))));
SELECT MIN(rt1.c2) FROM rt1 WHERE (CAST('1690451469' AS TEXT)) ORDER BY ((((((('9蓏vnW')OR(rt1.c5)))OR(rt1.c3)))AND(rt1.c2)) IN (((rt1.c4) NOTNULL)));
SELECT ALL MIN(rt1.c2) FROM rt1 WHERE (CAST('1690451469' AS TEXT)) ORDER BY ((((rt1.c4)>>(rt1.c4)))&(((rt1.c3) IS FALSE))) ASC  NULLS FIRST, (((rt1.c6, rt1.c6, rt1.c0)) BETWEEN ((((((rt1.c0)OR(rt1.c3)))OR(rt1.c1)), ((rt1.c5) ISNULL), ((rt1.c0)<=(0.2056335687175569)))) AND ((((rt1.c0)+(rt1.c4)), CAST(rt1.c1 AS TEXT), CASE WHEN rt1.c0 THEN rt1.c6 WHEN 0.3699488509561163 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c6 ELSE rt1.c3 END))) DESC LIMIT 1;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)>=(t0.c2)))&(CAST(t0.c1 AS TEXT))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)=(t0.c2)))&(CAST(t0.c1 AS TEXT)))) LIMIT 1;
SELECT MIN(rt1.c0) FROM rt1 WHERE ((NOT (((((((((rt1.c0)AND(rt1.c4)))AND(rt1.c3)))OR(rt1.c2)))AND(rt1.c2))))) ORDER BY TYPEOF(DISTINCT rt1.c1 COLLATE BINARY) ASC  NULLS FIRST;
SELECT DISTINCT MIN(rt1.c0) FROM rt1 WHERE ((((NOT (((((((((rt1.c0)AND(rt1.c4)))AND(rt1.c3)))OR(rt1.c2)))AND(rt1.c2)))))AND(rt1.c1))) ORDER BY TYPEOF(DISTINCT rt1.c1 COLLATE BINARY) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT MIN(rt1.c0) FROM rt1 WHERE ((NOT (CASE rt1.c3  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 END))) ORDER BY TYPEOF(DISTINCT rt1.c1 COLLATE BINARY) ASC  NULLS FIRST LIMIT 1;
SELECT MIN(t0.c3) FROM rt1, t0 WHERE (((((rt1.c6) ISNULL))-(((t0.c4)&(rt1.c1))))) ORDER BY (((CAST(rt1.c3 AS INTEGER)))<((((t0.c3) NOT BETWEEN (t0.c4) AND (rt1.c3))))) DESC  NULLS FIRST, (((0.9319058546050588, t0.c0, rt1.c1)) BETWEEN ((0.29281090360110884 COLLATE BINARY, ((t0.c1)<=(rt1.c4)), ((rt1.c3)||(rt1.c3)))) AND (((rt1.c1 IN (rt1.c6, rt1.c2)), ABS(DISTINCT t0.c0), ((rt1.c6) NOT BETWEEN (rt1.c4) AND (t0.c4)))))  NULLS FIRST;
SELECT MIN(t0.c3) FROM rt1, t0 WHERE (((((((rt1.c6) ISNULL))-(((t0.c4)&(rt1.c1)))))AND(((rt1.c1 COLLATE RTRIM)<(rt1.c3))))) ORDER BY (((CAST(rt1.c3 AS INTEGER)))<((((t0.c3) NOT BETWEEN (t0.c4) AND (rt1.c3))))) DESC  NULLS FIRST, (((0.9319058546050588, t0.c0, rt1.c1)) BETWEEN ((0.29281090360110884 COLLATE BINARY, ((t0.c1)<=(rt1.c4)), ((rt1.c3)||(rt1.c3)))) AND (((rt1.c1 IN (rt1.c6, rt1.c2)), ABS(DISTINCT t0.c0), ((rt1.c6) NOT BETWEEN (rt1.c4) AND (t0.c4)))))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT ALL MIN(t0.c3) FROM rt1, t0 WHERE (((((((rt1.c5)OR(rt1.c0)))OR(rt1.c6)))OR(rt1.c6)) COLLATE RTRIM) ORDER BY (((CAST(rt1.c3 AS INTEGER)))<((((t0.c3) NOT BETWEEN (t0.c4) AND (rt1.c3))))) DESC  NULLS FIRST, (((0.9319058546050588, t0.c0, rt1.c1)) BETWEEN ((0.29281090360110884 COLLATE BINARY, ((t0.c1)<=(rt1.c4)), ((rt1.c3)||(rt1.c3)))) AND (((rt1.c1 IN (rt1.c6, rt1.c2)), ABS(DISTINCT t0.c0), ((rt1.c6) NOT BETWEEN (rt1.c4) AND (t0.c4)))))  NULLS FIRST LIMIT 0X0;
SELECT MIN(rt1.c4) FROM rt1, t0 WHERE ((rt1.c1 IN ()));
SELECT MIN(rt1.c4) FROM rt1, t0 WHERE ((((rt1.c1 IN ()))AND((- (CASE rt1.c1  WHEN rt1.c2 THEN t0.c1 WHEN t0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END))))) ORDER BY ((((((t0.c0)<(t0.c2)))AND((t0.c4 IN ()))))OR(((t0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS LAST, (((((rt1.c1))<=((t0.c4))))AND(rt1.c2)) ASC, UPPER(DISTINCT ((rt1.c3) NOTNULL)) DESC  NULLS FIRST INTERSECT SELECT ALL MIN(rt1.c4) FROM rt1, t0 WHERE (((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)) COLLATE NOCASE) ORDER BY ((((((t0.c0)<(t0.c2)))AND((t0.c4 IN ()))))OR(((t0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS LAST, (((((rt1.c1))<=((t0.c4))))AND(rt1.c2)) ASC, UPPER(DISTINCT ((rt1.c3) NOTNULL)) DESC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (UPPER(CAST(rt1.c3 AS REAL))) ORDER BY ((((((((rt1.c4) NOTNULL))AND((rt1.c2 IN (t0.c1)))))OR(((x'3ab2') BETWEEN (rt1.c0) AND (t0.c1)))))AND((((0.18893613536747877, rt1.c0))<((t0.c1, rt1.c2))))) ASC, ((((rt1.c0 IN (0.8143859891652997, t0.c0)), (~ (rt1.c1)), LIKELY(t0.c4), ((((rt1.c2)OR(rt1.c3)))AND(rt1.c2))))!=(((rt1.c0 IN ()), '180903621', (rt1.c3 IN ()), ((rt1.c3) BETWEEN (t0.c0) AND (rt1.c3)))));
SELECT DISTINCT * FROM rt1 NOT INDEXED, t0 WHERE (UPPER(CAST(rt1.c3 AS REAL))) ORDER BY (((- (t0.c3)))LIKE(((rt1.c6)<=(rt1.c6)))) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c2) ISNULL)) IS FALSE)) ORDER BY (((- (t0.c3)))LIKE(((rt1.c6)<=(rt1.c6))));
SELECT * FROM rt1, t0 WHERE (UPPER(CAST(rt1.c3 AS REAL))) ORDER BY ((((((((rt1.c4) NOTNULL))AND((rt1.c2 IN (t0.c1)))))OR(((x'3ab2') BETWEEN (rt1.c0) AND (t0.c1)))))AND((((0.18893613536747877, rt1.c0))<((t0.c1, rt1.c2))))) ASC, ((((rt1.c0 IN (0.8143859891652997, t0.c0)), (~ (rt1.c1)), LIKELY(t0.c4), ((((rt1.c2)OR(rt1.c3)))AND(rt1.c2))))!=(((rt1.c0 IN ()), '180903621', (rt1.c3 IN ()), ((rt1.c3) BETWEEN (t0.c0) AND (rt1.c3)))));
SELECT DISTINCT * FROM rt1 NOT INDEXED, t0 WHERE (UPPER(CAST(rt1.c3 AS REAL))) ORDER BY (((- (t0.c3)))LIKE(((rt1.c6)<=(rt1.c6)))) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c2) ISNULL)) IS FALSE)) ORDER BY (((- (t0.c3)))LIKE(((rt1.c6)<=(rt1.c6))));
SELECT ALL * FROM rt1 WHERE (((((((('-1491715523' IN (rt1.c1)))OR(((rt1.c5)IS NOT(rt1.c1)))))OR((rt1.c4 IN (rt1.c5, rt1.c5)))))AND(UNICODE(rt1.c0))));
SELECT ALL * FROM rt1 WHERE (((((((((('-1491715523' IN (rt1.c1)))OR(((rt1.c5)IS NOT(rt1.c1)))))OR((rt1.c4 IN (rt1.c5)))))AND(UNICODE(rt1.c0))))AND((NOT (rt1.c4)) COLLATE BINARY))) INTERSECT SELECT ALL * FROM rt1 WHERE (NULL);
SELECT ALL * FROM rt1 WHERE (((((((('-1491715523' IN (rt1.c1)))OR(((rt1.c5)IS NOT(rt1.c1)))))OR((rt1.c4 IN (rt1.c5, rt1.c5)))))AND(UNICODE(rt1.c0))));
SELECT ALL * FROM rt1 WHERE (((((((((('-1491715523' IN (rt1.c1)))OR(((rt1.c5)IS NOT(rt1.c1)))))OR((rt1.c4 IN (rt1.c5)))))AND(UNICODE(rt1.c0))))AND((NOT (rt1.c4)) COLLATE BINARY))) INTERSECT SELECT ALL * FROM rt1 WHERE (NULL);
SELECT * FROM rt1, t0 WHERE ('l!{l)Ma') ORDER BY (((rt1.c1, rt1.c6)) NOT BETWEEN ((rt1.c5, rt1.c4)) AND ((rt1.c5, rt1.c0))) COLLATE BINARY ASC  NULLS FIRST, 'V)n
cT'  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ('l!{l)Ma') ORDER BY CASE WHEN rt1.c4 THEN (((t0.c2, rt1.c3, t0.c4))<=((t0.c1, rt1.c0, t0.c3))) END, UNLIKELY(DISTINCT ((t0.c2) NOT NULL))  NULLS FIRST LIMIT 0x3 INTERSECT SELECT ALL * FROM rt1, t0 WHERE ((NOT ((t0.c4 IN ())))) ORDER BY CASE WHEN rt1.c4 THEN (((t0.c2, rt1.c3, t0.c4))<=((t0.c1, rt1.c0, t0.c3))) END, UNLIKELY(DISTINCT ((t0.c2) NOT NULL))  NULLS FIRST LIMIT 3;
SELECT * FROM rt1, t0 WHERE ('l!{l)Ma') ORDER BY (((rt1.c1, rt1.c6)) NOT BETWEEN ((rt1.c5, rt1.c4)) AND ((rt1.c5, rt1.c0))) COLLATE BINARY ASC  NULLS FIRST, 'V)n
cT'  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ('l!{l)Ma') ORDER BY CASE WHEN rt1.c4 THEN (((t0.c2, rt1.c3, t0.c4))<=((t0.c1, rt1.c0, t0.c3))) END, UNLIKELY(DISTINCT ((t0.c2) NOT NULL))  NULLS FIRST LIMIT 0x3 INTERSECT SELECT ALL * FROM rt1, t0 WHERE ((NOT ((t0.c4 IN ())))) ORDER BY CASE WHEN rt1.c4 THEN (((t0.c2, rt1.c3, t0.c4))<=((t0.c1, rt1.c0, t0.c3))) END, UNLIKELY(DISTINCT ((t0.c2) NOT NULL))  NULLS FIRST LIMIT 3;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON CASE WHEN (~ (rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c6)) WHEN CAST(t0.c2 AS INTEGER) THEN x'7f' WHEN ((rt1.c5)*(t0.c2)) THEN ((rt1.c6)*(t0.c4)) WHEN (t0.c3 IN ()) THEN 0.16947406136606025 COLLATE RTRIM ELSE ((t0.c1)||(t0.c1)) END WHERE (((CAST(rt1.c1 AS TEXT))<=(CAST(rt1.c2 AS NUMERIC)))) ORDER BY NULLIF(((((rt1.c5)OR(rt1.c0)))OR(rt1.c5)), (NOT (rt1.c1))) DESC  NULLS LAST, CAST(t0.c3 AS NUMERIC) ASC;
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON CASE WHEN (~ (rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c6)) WHEN CAST(t0.c2 AS INTEGER) THEN x'7f' WHEN ((rt1.c5)*(t0.c2)) THEN ((rt1.c6)*(t0.c4)) WHEN (t0.c3 IN ()) THEN 0.16947406136606025 COLLATE RTRIM ELSE ((t0.c1)||(t0.c1)) END WHERE (((((CAST(rt1.c1 AS TEXT))==(CAST(rt1.c2 AS NUMERIC))))AND((((t0.c1)||(NULL)) IN (((rt1.c6) ISNULL)))))) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c6 END)<>(NULL)) DESC  NULLS LAST, ((rt1.c4 COLLATE NOCASE)AND(((((rt1.c1)OR(rt1.c4)))OR(NULL)))) DESC  NULLS FIRST, (rt1.c3 IN (((t0.c0) IS TRUE), 0.022293355735812592)) DESC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt1 NOT INDEXED INNER JOIN t0 ON CASE WHEN (~ (rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c6)) WHEN CAST(t0.c2 AS INTEGER) THEN x'7f' WHEN ((rt1.c5)*(t0.c2)) THEN ((rt1.c6)*(t0.c4)) WHEN (t0.c3 IN ()) THEN 0.16947406136606025 COLLATE RTRIM ELSE ((t0.c1)||(t0.c1)) END WHERE ((((+ (rt1.c5))) NOT BETWEEN (((('', t0.c2)) BETWEEN ((rt1.c2, rt1.c5)) AND ((rt1.c3, t0.c0)))) AND ((((0.6165941628680905, t0.c2, rt1.c5))>((t0.c3, rt1.c5, rt1.c3)))))) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c6 END)!=(NULL)) DESC  NULLS LAST, ((rt1.c4 COLLATE NOCASE)AND(((((rt1.c1)OR(rt1.c4)))OR(NULL)))) DESC  NULLS FIRST, (rt1.c3 IN (((t0.c0) IS TRUE), 0.022293355735812592)) DESC LIMIT 0;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON CASE WHEN (~ (rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c6)) WHEN CAST(t0.c2 AS INTEGER) THEN x'7f' WHEN ((rt1.c5)*(t0.c2)) THEN ((rt1.c6)*(t0.c4)) WHEN (t0.c3 IN ()) THEN 0.16947406136606025 COLLATE RTRIM ELSE ((t0.c1)||(t0.c1)) END WHERE (((CAST(rt1.c1 AS TEXT))<=(CAST(rt1.c2 AS NUMERIC)))) ORDER BY NULLIF(((((rt1.c5)OR(rt1.c0)))OR(rt1.c5)), (NOT (rt1.c1))) DESC  NULLS LAST, CAST(t0.c3 AS NUMERIC) ASC;
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON CASE WHEN (~ (rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c6)) WHEN CAST(t0.c2 AS INTEGER) THEN x'7f' WHEN ((rt1.c5)*(t0.c2)) THEN ((rt1.c6)*(t0.c4)) WHEN (t0.c3 IN ()) THEN 0.16947406136606025 COLLATE RTRIM ELSE ((t0.c1)||(t0.c1)) END WHERE (((((CAST(rt1.c1 AS TEXT))==(CAST(rt1.c2 AS NUMERIC))))AND((((t0.c1)||(NULL)) IN (((rt1.c6) ISNULL)))))) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c6 END)<>(NULL)) DESC  NULLS LAST, ((rt1.c4 COLLATE NOCASE)AND(((((rt1.c1)OR(rt1.c4)))OR(NULL)))) DESC  NULLS FIRST, (rt1.c3 IN (((t0.c0) IS TRUE), 0.022293355735812592)) DESC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt1 NOT INDEXED INNER JOIN t0 ON CASE WHEN (~ (rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c6)) WHEN CAST(t0.c2 AS INTEGER) THEN x'7f' WHEN ((rt1.c5)*(t0.c2)) THEN ((rt1.c6)*(t0.c4)) WHEN (t0.c3 IN ()) THEN 0.16947406136606025 COLLATE RTRIM ELSE ((t0.c1)||(t0.c1)) END WHERE ((((+ (rt1.c5))) NOT BETWEEN (((('', t0.c2)) BETWEEN ((rt1.c2, rt1.c5)) AND ((rt1.c3, t0.c0)))) AND ((((0.6165941628680905, t0.c2, rt1.c5))>((t0.c3, rt1.c5, rt1.c3)))))) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c6 END)!=(NULL)) DESC  NULLS LAST, ((rt1.c4 COLLATE NOCASE)AND(((((rt1.c1)OR(rt1.c4)))OR(NULL)))) DESC  NULLS FIRST, (rt1.c3 IN (((t0.c0) IS TRUE), 0.022293355735812592)) DESC LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c6 COLLATE NOCASE)*(((((((t0.c0)AND(t0.c0)))AND(rt1.c2)))AND(t0.c3))))) ORDER BY ((CAST(rt1.c6 AS INTEGER))>((+ (rt1.c5))));
SELECT * FROM rt1, t0 WHERE (((rt1.c6 COLLATE NOCASE)*(((((((t0.c0)AND(t0.c0)))AND(rt1.c2)))AND(t0.c3))))) ORDER BY ((CAST(rt1.c6 AS INTEGER))>((+ (rt1.c5))));
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c6 COLLATE NOCASE)*(((((((t0.c0)AND(t0.c0)))AND(rt1.c2)))AND(t0.c3))))) ORDER BY ((CAST(rt1.c6 AS INTEGER))>((+ (rt1.c5))));
SELECT * FROM rt1, t0 WHERE (((rt1.c6 COLLATE NOCASE)*(((((((t0.c0)AND(t0.c0)))AND(rt1.c2)))AND(t0.c3))))) ORDER BY ((CAST(rt1.c6 AS INTEGER))>((+ (rt1.c5))));
SELECT ALL * FROM t0, rt1 WHERE (NULL);
SELECT DISTINCT * FROM t0, rt1 WHERE (NULL) ORDER BY (((((rt1.c5))<=((t0.c3))))LIKE(((rt1.c3)==(t0.c3))))  NULLS FIRST, UPPER(DISTINCT t0.c3) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((((t0.c3)OR(rt1.c0)))AND(rt1.c0))) ISNULL)) ORDER BY (((((rt1.c5))<=((t0.c3))))LIKE(((rt1.c3)=(t0.c3))))  NULLS FIRST, UPPER(DISTINCT t0.c3) DESC  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t0, rt1 WHERE (NULL);
SELECT DISTINCT * FROM t0, rt1 WHERE (NULL) ORDER BY (((((rt1.c5))<=((t0.c3))))LIKE(((rt1.c3)==(t0.c3))))  NULLS FIRST, UPPER(DISTINCT t0.c3) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((((t0.c3)OR(rt1.c0)))AND(rt1.c0))) ISNULL)) ORDER BY (((((rt1.c5))<=((t0.c3))))LIKE(((rt1.c3)=(t0.c3))))  NULLS FIRST, UPPER(DISTINCT t0.c3) DESC  NULLS FIRST LIMIT 0x1;
SELECT * FROM rt1, t0 WHERE ((('-1270526967')/(rt1.c1))) ORDER BY CAST(((t0.c4)<<(rt1.c0)) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE ((((('-1270526967')/(rt1.c1)))AND(IFNULL(DISTINCT CAST(rt1.c1 AS INTEGER), (('-1296292934')==(rt1.c5)))))) ORDER BY CAST(((t0.c4)<<(rt1.c0)) AS INTEGER)  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (LIKELIHOOD((- (t0.c1)), CASE t0.c1  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c6 ELSE rt1.c4 END)) ORDER BY CAST(((t0.c4)<<(rt1.c0)) AS INTEGER)  NULLS LAST LIMIT 0;
SELECT * FROM rt1, t0 WHERE ((('-1270526967')/(rt1.c1))) ORDER BY CAST(((t0.c4)<<(rt1.c0)) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE ((((('-1270526967')/(rt1.c1)))AND(IFNULL(DISTINCT CAST(rt1.c1 AS INTEGER), (('-1296292934')==(rt1.c5)))))) ORDER BY CAST(((t0.c4)<<(rt1.c0)) AS INTEGER)  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (LIKELIHOOD((- (t0.c1)), CASE t0.c1  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c6 ELSE rt1.c4 END)) ORDER BY CAST(((t0.c4)<<(rt1.c0)) AS INTEGER)  NULLS LAST LIMIT 0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((((((((('o')|(t0.c3)))AND(LIKELY(t0.c3))))OR(((t0.c0) NOT NULL))))OR(((t0.c2) BETWEEN (t0.c3) AND (t0.c2)))))AND(CAST(t0.c1 AS TEXT))))OR(t0.c4 COLLATE BINARY)));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((((((((((('o')|(t0.c3)))AND(LIKELY(t0.c3))))OR(((t0.c0) NOT NULL))))OR(((t0.c2) BETWEEN (t0.c3) AND (t0.c2)))))AND(CAST(t0.c1 AS TEXT))))OR(t0.c4 COLLATE BINARY)))AND(CASE -1584229360  WHEN (+ (t0.c2)) THEN ((t0.c4)<(t0.c2)) END))) ORDER BY ((CAST(t0.c2 AS REAL)) IS TRUE) ASC;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c1) NOT NULL)  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c3)) THEN ((t0.c3) NOT BETWEEN ('911730342') AND (t0.c1)) END) ORDER BY (- ((((t0.c4))<=((t0.c3))))) DESC, (((('-1051568568'))<=((t0.c2))) IN (t0.c2))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c1) NOT NULL)  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c3)) THEN ((t0.c3) NOT BETWEEN ('911730342') AND (t0.c1)) END) ORDER BY (- ((((t0.c4))<=((t0.c3))))) DESC, (((('-1051568568'))<=((t0.c2))) IN (t0.c2))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c2)*(t0.c1)))>(((t0.c3) BETWEEN (t0.c1) AND (t0.c4))))) ORDER BY (- ((((t0.c4))<=((t0.c3))))) DESC, (((('-1051568568'))<=((t0.c2))) IN (t0.c2))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c1) NOT NULL)  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c3)) THEN ((t0.c3) NOT BETWEEN ('911730342') AND (t0.c1)) END) ORDER BY (- ((((t0.c4))<=((t0.c3))))) DESC, (((('-1051568568'))<=((t0.c2))) IN (t0.c2))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c1) NOT NULL)  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c3)) THEN ((t0.c3) NOT BETWEEN ('911730342') AND (t0.c1)) END) ORDER BY (- ((((t0.c4))<=((t0.c3))))) DESC, (((('-1051568568'))<=((t0.c2))) IN (t0.c2))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c2)*(t0.c1)))>(((t0.c3) BETWEEN (t0.c1) AND (t0.c4))))) ORDER BY (- ((((t0.c4))<=((t0.c3))))) DESC, (((('-1051568568'))<=((t0.c2))) IN (t0.c2))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c5) AND (rt1.c0)))LIKE(((((rt1.c4)AND(rt1.c5)))OR(rt1.c5))))) ORDER BY ((((((((((rt1.c4)<(rt1.c0)))AND(((((((rt1.c6)AND(rt1.c3)))OR(rt1.c6)))AND(rt1.c3)))))AND(CAST(rt1.c5 AS INTEGER))))OR(CAST(rt1.c0 AS NUMERIC))))OR(CAST(rt1.c2 AS BLOB))) DESC  NULLS LAST, CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c5) AND (rt1.c0)))LIKE(((((rt1.c4)AND(rt1.c5)))OR(rt1.c5))))) ORDER BY (((rt1.c6 IN (0.3884134635080001)))LIKE(((rt1.c0) IS TRUE))) ASC LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((((rt1.c6))<>((rt1.c6))))OR(((((((((((rt1.c4)OR(rt1.c6)))AND(rt1.c4)))AND(rt1.c3)))AND(0.7867599568303509)))AND(rt1.c1))))) ORDER BY (((rt1.c6 IN (0.3884134635080001)))LIKE(((rt1.c0) IS TRUE))) ASC LIMIT 0;
SELECT ALL MIN(rt1.c2) FROM rt1 WHERE (x'df');
SELECT DISTINCT MIN(rt1.c2) FROM rt1 WHERE (x'df') INTERSECT SELECT DISTINCT MIN(rt1.c2) FROM rt1 WHERE (((((((2.010798651E9)AND(((rt1.c5) NOT NULL))))OR((+ (-6.98996151E8)))))AND(rt1.c0)));
SELECT * FROM rt1, t0 WHERE (((CAST(rt1.c3 AS NUMERIC))/(rt1.c4))) ORDER BY (((rt1.c2)|(rt1.c2)) IN ())  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (((CAST(rt1.c3 AS NUMERIC))/(rt1.c4))) ORDER BY (((rt1.c2)|(rt1.c2)) IN ())  NULLS LAST LIMIT 0X1;
SELECT * FROM rt1, t0 WHERE (((CAST(rt1.c3 AS NUMERIC))/(rt1.c4))) ORDER BY (((rt1.c2)|(rt1.c2)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0 WHERE (((((t0.c3)%(t0.c1)))>(LIKELY(DISTINCT rt1.c1))));
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((((((t0.c3)%(t0.c1)))>(LIKELY(DISTINCT rt1.c1))))AND(CASE WHEN x'dc6986' THEN (rt1.c6 IN (rt1.c6)) END))) LIMIT 0X2;
SELECT * FROM t0 WHERE ((json_extract(t0.c2, t0.c1) IN ())) ORDER BY (((NULL IN (t0.c0, t0.c3))) IS TRUE), ((((t0.c2 IN ())))==(((- (t0.c1))))) DESC;
SELECT * FROM t0 WHERE ((((json_extract(t0.c2, t0.c1) IN ()))AND('zR'))) ORDER BY (((NULL IN (t0.c0, t0.c3))) IS TRUE), ((((t0.c2 IN ())))=(((- (t0.c1))))) DESC;
SELECT * FROM t0 WHERE ((json_extract(t0.c2, t0.c1) IN ())) ORDER BY (((NULL IN (t0.c0, t0.c3))) IS TRUE), ((((t0.c2 IN ())))==(((- (t0.c1))))) DESC;
SELECT * FROM t0 WHERE ((((json_extract(t0.c2, t0.c1) IN ()))AND('zR'))) ORDER BY (((NULL IN (t0.c0, t0.c3))) IS TRUE), ((((t0.c2 IN ())))=(((- (t0.c1))))) DESC;
SELECT * FROM t0 CROSS JOIN rt1 ON CASE CASE t0.c1  WHEN t0.c1 THEN t0.c0 ELSE rt1.c1 END  WHEN (+ (t0.c1)) THEN CASE WHEN t0.c4 THEN t0.c4 WHEN rt1.c0 THEN NULL WHEN t0.c4 THEN t0.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c2 THEN 0.14002121038776882 WHEN rt1.c2 THEN t0.c0 END ELSE ((((((rt1.c5)OR(rt1.c2)))AND(rt1.c0)))OR(t0.c2)) END WHERE ((((t0.c4)>=(rt1.c3)) IN ())) ORDER BY CAST((t0.c3 IN (rt1.c6, rt1.c1)) AS INTEGER);
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON CASE CASE t0.c1  WHEN t0.c1 THEN t0.c0 ELSE rt1.c1 END  WHEN (+ (t0.c1)) THEN CASE WHEN t0.c4 THEN t0.c4 WHEN rt1.c0 THEN NULL WHEN t0.c4 THEN t0.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c2 THEN 0.14002121038776882 WHEN rt1.c2 THEN t0.c0 END ELSE ((((((rt1.c5)OR(rt1.c2)))AND(rt1.c0)))OR(t0.c2)) END WHERE ((((((t0.c4)>=(rt1.c3)) IN ()))AND((((rt1.c1 IN (t0.c1, t0.c0))) ISNULL)))) ORDER BY CAST((t0.c3 IN (rt1.c6, rt1.c1)) AS INTEGER) INTERSECT SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON CASE CASE t0.c1  WHEN t0.c1 THEN t0.c0 ELSE rt1.c1 END  WHEN (+ (t0.c1)) THEN CASE WHEN t0.c4 THEN t0.c4 WHEN rt1.c0 THEN NULL WHEN t0.c4 THEN t0.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c2 THEN 0.14002121038776882 WHEN rt1.c2 THEN t0.c0 END ELSE ((((((rt1.c5)OR(rt1.c2)))AND(rt1.c0)))OR(t0.c2)) END WHERE (((t0.c2)%(LAST_INSERT_ROWID()))) ORDER BY CAST((t0.c3 IN (rt1.c6, rt1.c1)) AS INTEGER);
SELECT * FROM t0 CROSS JOIN rt1 ON CASE CASE t0.c1  WHEN t0.c1 THEN t0.c0 ELSE rt1.c1 END  WHEN (+ (t0.c1)) THEN CASE WHEN t0.c4 THEN t0.c4 WHEN rt1.c0 THEN NULL WHEN t0.c4 THEN t0.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c2 THEN 0.14002121038776882 WHEN rt1.c2 THEN t0.c0 END ELSE ((((((rt1.c5)OR(rt1.c2)))AND(rt1.c0)))OR(t0.c2)) END WHERE ((((t0.c4)>=(rt1.c3)) IN ())) ORDER BY CAST((t0.c3 IN (rt1.c6, rt1.c1)) AS INTEGER);
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON CASE CASE t0.c1  WHEN t0.c1 THEN t0.c0 ELSE rt1.c1 END  WHEN (+ (t0.c1)) THEN CASE WHEN t0.c4 THEN t0.c4 WHEN rt1.c0 THEN NULL WHEN t0.c4 THEN t0.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c2 THEN 0.14002121038776882 WHEN rt1.c2 THEN t0.c0 END ELSE ((((((rt1.c5)OR(rt1.c2)))AND(rt1.c0)))OR(t0.c2)) END WHERE ((((((t0.c4)>=(rt1.c3)) IN ()))AND((((rt1.c1 IN (t0.c1, t0.c0))) ISNULL)))) ORDER BY CAST((t0.c3 IN (rt1.c6, rt1.c1)) AS INTEGER) INTERSECT SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON CASE CASE t0.c1  WHEN t0.c1 THEN t0.c0 ELSE rt1.c1 END  WHEN (+ (t0.c1)) THEN CASE WHEN t0.c4 THEN t0.c4 WHEN rt1.c0 THEN NULL WHEN t0.c4 THEN t0.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c2 THEN 0.14002121038776882 WHEN rt1.c2 THEN t0.c0 END ELSE ((((((rt1.c5)OR(rt1.c2)))AND(rt1.c0)))OR(t0.c2)) END WHERE (((t0.c2)%(LAST_INSERT_ROWID()))) ORDER BY CAST((t0.c3 IN (rt1.c6, rt1.c1)) AS INTEGER);
SELECT ALL MIN(rt1.c4) FROM rt1 WHERE (rt1.c1);
SELECT ALL MIN(rt1.c4) FROM rt1 WHERE (((rt1.c1)AND((- (rt1.c0)) COLLATE NOCASE))) INTERSECT SELECT ALL MIN(rt1.c4) FROM rt1 WHERE ((rt1.c3 IN (rt1.c1)) COLLATE BINARY);
SELECT MAX(rt1.c4) FROM rt1 LEFT OUTER JOIN t0 ON CASE t0.c2  WHEN ((rt1.c1)LIKE(0.8139685697405293)) THEN CAST('0.10795068278856201' AS BLOB) WHEN t0.c0 THEN (+ (rt1.c0)) WHEN ((t0.c0)IS NOT(t0.c2)) THEN (- (t0.c0)) END WHERE (((rt1.c3)>>(t0.c2)) COLLATE BINARY);
SELECT DISTINCT MAX(rt1.c4) FROM rt1 INNER JOIN t0 ON CASE t0.c2  WHEN ((rt1.c1)LIKE(0.8139685697405293)) THEN CAST('0.10795068278856201' AS BLOB) WHEN t0.c0 THEN (+ (rt1.c0)) WHEN ((t0.c0)IS NOT(t0.c2)) THEN (- (t0.c0)) END WHERE (((((rt1.c3)>>(t0.c2)) COLLATE BINARY)AND(CAST(NULL AS TEXT)))) ORDER BY ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3)) COLLATE NOCASE  NULLS LAST, CASE WHEN ((t0.c2)=(rt1.c6)) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c6)) WHEN CAST(t0.c0 AS INTEGER) THEN (~ (rt1.c4)) WHEN CASE WHEN '0.08715382449460207' THEN t0.c4 WHEN t0.c2 THEN t0.c2 END THEN (((rt1.c0, t0.c3)) BETWEEN ((rt1.c4, rt1.c4)) AND ((t0.c1, rt1.c1))) WHEN CAST(rt1.c6 AS NUMERIC) THEN (((rt1.c5, rt1.c6)) NOT BETWEEN ((t0.c0, rt1.c1)) AND ((t0.c1, x'3468'))) END DESC  NULLS LAST;
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (((CAST(t0.c3 AS NUMERIC), ((rt1.c4) NOT BETWEEN (t0.c2) AND (t0.c3)), ((x'e5979b')IS(rt1.c5))))>((((t0.c1)AND(t0.c3)), ((2015583807)LIKE(rt1.c4)), (t0.c0 IN (t0.c1))))) WHERE (((((rt1.c2) NOT BETWEEN (t0.c0) AND (t0.c4))) NOT BETWEEN ((t0.c0 IN ())) AND ((rt1.c1 IN ()))));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (((CAST(t0.c3 AS NUMERIC), ((rt1.c4) NOT BETWEEN (t0.c2) AND (t0.c3)), ((x'e5979b')IS(rt1.c5))))>((((t0.c1)AND(t0.c3)), ((0x78235e3f)LIKE(rt1.c4)), (t0.c0 IN (t0.c1))))) WHERE (((((((rt1.c2) NOT BETWEEN (t0.c0) AND (t0.c4))) NOT BETWEEN ((t0.c0 IN ())) AND ((rt1.c1 IN ()))))AND(((CASE rt1.c2  WHEN x'0b' THEN t0.c2 END) BETWEEN (((rt1.c6)LIKE(rt1.c3))) AND ((((t0.c2, t0.c3)) BETWEEN ((rt1.c0, rt1.c4)) AND ((t0.c2, t0.c4)))))))) ORDER BY x'b0' COLLATE RTRIM  NULLS LAST LIMIT 0X1;
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (((CAST(t0.c3 AS NUMERIC), ((rt1.c4) NOT BETWEEN (t0.c2) AND (t0.c3)), ((x'e5979b')IS(rt1.c5))))>((((t0.c1)AND(t0.c3)), ((2015583807)LIKE(rt1.c4)), (t0.c0 IN (t0.c1))))) WHERE (((((rt1.c2) NOT BETWEEN (t0.c0) AND (t0.c4))) NOT BETWEEN ((t0.c0 IN ())) AND ((rt1.c1 IN ()))));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (((CAST(t0.c3 AS NUMERIC), ((rt1.c4) NOT BETWEEN (t0.c2) AND (t0.c3)), ((x'e5979b')IS(rt1.c5))))>((((t0.c1)AND(t0.c3)), ((0x78235e3f)LIKE(rt1.c4)), (t0.c0 IN (t0.c1))))) WHERE (((((((rt1.c2) NOT BETWEEN (t0.c0) AND (t0.c4))) NOT BETWEEN ((t0.c0 IN ())) AND ((rt1.c1 IN ()))))AND(((CASE rt1.c2  WHEN x'0b' THEN t0.c2 END) BETWEEN (((rt1.c6)LIKE(rt1.c3))) AND ((((t0.c2, t0.c3)) BETWEEN ((rt1.c0, rt1.c4)) AND ((t0.c2, t0.c4)))))))) ORDER BY x'b0' COLLATE RTRIM  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (((((0X455d6b37, t0.c0, t0.c4)) BETWEEN ((t0.c1, '4i/膃/M', t0.c0)) AND ((t0.c2, t0.c2, t0.c3))) IN ()));
SELECT DISTINCT * FROM t0 WHERE (((((1163750199, t0.c0, t0.c4)) BETWEEN ((t0.c1, '4i/膃/M', t0.c0)) AND ((t0.c2, t0.c2, t0.c3))) IN ())) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((NOT (t0.c1)))>=(t0.c2 COLLATE BINARY))) LIMIT 1;
SELECT ALL * FROM t0 WHERE (((((0X455d6b37, t0.c0, t0.c4)) BETWEEN ((t0.c1, '4i/膃/M', t0.c0)) AND ((t0.c2, t0.c2, t0.c3))) IN ()));
SELECT DISTINCT * FROM t0 WHERE (((((1163750199, t0.c0, t0.c4)) BETWEEN ((t0.c1, '4i/膃/M', t0.c0)) AND ((t0.c2, t0.c2, t0.c3))) IN ())) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((NOT (t0.c1)))>=(t0.c2 COLLATE BINARY))) LIMIT 1;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON (NOT (CASE WHEN rt1.c6 THEN t0.c0 WHEN rt1.c3 THEN x'' ELSE rt1.c5 END)) WHERE ((((rt1.c2) IS FALSE) IN (((rt1.c1)<(t0.c4)))));
SELECT DISTINCT COUNT(*) FROM t0 CROSS JOIN rt1 ON (NOT (CASE WHEN rt1.c6 THEN t0.c0 WHEN rt1.c3 THEN x'' ELSE rt1.c5 END)) WHERE ((((rt1.c2) IS FALSE) IN (((rt1.c1)<(t0.c4))))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 CROSS JOIN rt1 ON (NOT (CASE WHEN rt1.c6 THEN t0.c0 WHEN rt1.c3 THEN x'' ELSE rt1.c5 END)) WHERE (CASE WHEN rt1.c5 THEN ((t0.c1)IS(t0.c4)) WHEN ((NULL) ISNULL) THEN ((t0.c1)=(rt1.c4)) END) LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (((x'cbd49c') NOT NULL));
SELECT * FROM rt1, t0 WHERE (((x'cbd49c') NOT NULL)) ORDER BY ((((rt1.c6)AND(t0.c0)))/(CAST(rt1.c0 AS BLOB))) DESC  NULLS LAST LIMIT 0X2 INTERSECT SELECT * FROM rt1, t0 WHERE ((+ (((rt1.c5)||(rt1.c0))))) ORDER BY ((((rt1.c6)AND(t0.c0)))/(CAST(rt1.c0 AS BLOB))) DESC  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM rt1, t0 WHERE (((x'cbd49c') NOT NULL));
SELECT * FROM rt1, t0 WHERE (((x'cbd49c') NOT NULL)) ORDER BY ((((rt1.c6)AND(t0.c0)))/(CAST(rt1.c0 AS BLOB))) DESC  NULLS LAST LIMIT 0X2 INTERSECT SELECT * FROM rt1, t0 WHERE ((+ (((rt1.c5)||(rt1.c0))))) ORDER BY ((((rt1.c6)AND(t0.c0)))/(CAST(rt1.c0 AS BLOB))) DESC  NULLS LAST LIMIT 0x2;
SELECT * FROM t0 WHERE (CASE TYPEOF(t0.c3)  WHEN t0.c4 THEN ((t0.c1)IS(t0.c2)) WHEN ((((t0.c1)OR(t0.c2)))AND(t0.c4)) THEN t0.c0 COLLATE BINARY WHEN '1799702489' THEN (('') NOT BETWEEN (t0.c2) AND (t0.c4)) ELSE t0.c1 COLLATE RTRIM END) ORDER BY ((((t0.c2)AND(t0.c3)))OR(0Xffffffffb5b5f231)) COLLATE NOCASE, (((t0.c0, t0.c2)) NOT BETWEEN ((((t0.c0)+(NULL)), (NOT (t0.c1)))) AND ((((t0.c3)&(t0.c3)), ((1139347580)>=('2015583807'))))) DESC;
SELECT * FROM t0 WHERE (((CASE TYPEOF(t0.c3)  WHEN t0.c4 THEN ((t0.c1)IS(t0.c2)) WHEN ((((t0.c1)OR(t0.c2)))AND(t0.c4)) THEN t0.c0 COLLATE BINARY WHEN '1799702489' THEN (('') NOT BETWEEN (t0.c2) AND (t0.c4)) ELSE t0.c1 COLLATE RTRIM END)AND(CASE WHEN '1844222368' THEN ((t0.c0)<=(t0.c0)) WHEN ((((((((((t0.c2)AND(t0.c2)))AND(t0.c4)))AND(t0.c2)))AND(t0.c2)))AND(t0.c1)) THEN CASE t0.c3  WHEN t0.c4 THEN t0.c0 ELSE t0.c2 END WHEN ((t0.c4) BETWEEN (t0.c3) AND (t0.c2)) THEN (t0.c0 IN ()) ELSE (- (t0.c4)) END))) ORDER BY ((((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c0))) NOT BETWEEN ((('
fq8.') NOT NULL)) AND (((t0.c4) IS TRUE))) DESC, t0.c4 DESC;
SELECT * FROM t0 WHERE (CASE TYPEOF(t0.c3)  WHEN t0.c4 THEN ((t0.c1)IS(t0.c2)) WHEN ((((t0.c1)OR(t0.c2)))AND(t0.c4)) THEN t0.c0 COLLATE BINARY WHEN '1799702489' THEN (('') NOT BETWEEN (t0.c2) AND (t0.c4)) ELSE t0.c1 COLLATE RTRIM END) ORDER BY ((((t0.c2)AND(t0.c3)))OR(0Xffffffffb5b5f231)) COLLATE NOCASE, (((t0.c0, t0.c2)) NOT BETWEEN ((((t0.c0)+(NULL)), (NOT (t0.c1)))) AND ((((t0.c3)&(t0.c3)), ((1139347580)>=('2015583807'))))) DESC;
SELECT * FROM t0 WHERE (((CASE TYPEOF(t0.c3)  WHEN t0.c4 THEN ((t0.c1)IS(t0.c2)) WHEN ((((t0.c1)OR(t0.c2)))AND(t0.c4)) THEN t0.c0 COLLATE BINARY WHEN '1799702489' THEN (('') NOT BETWEEN (t0.c2) AND (t0.c4)) ELSE t0.c1 COLLATE RTRIM END)AND(CASE WHEN '1844222368' THEN ((t0.c0)<=(t0.c0)) WHEN ((((((((((t0.c2)AND(t0.c2)))AND(t0.c4)))AND(t0.c2)))AND(t0.c2)))AND(t0.c1)) THEN CASE t0.c3  WHEN t0.c4 THEN t0.c0 ELSE t0.c2 END WHEN ((t0.c4) BETWEEN (t0.c3) AND (t0.c2)) THEN (t0.c0 IN ()) ELSE (- (t0.c4)) END))) ORDER BY ((((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c0))) NOT BETWEEN ((('
fq8.') NOT NULL)) AND (((t0.c4) IS TRUE))) DESC, t0.c4 DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((~ (t0.c4)) IN (((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((~ (t0.c4)) IN (((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c0)))))AND('툅qJk>~*'))) ORDER BY 'X' LIMIT 0X0 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c3, t0.c3))>=((t0.c1, t0.c1))))||(t0.c2))) ORDER BY 'X' LIMIT 0X0;
SELECT ALL MIN(rt1.c0) FROM rt1 CROSS JOIN t0 ON ((((t0.c4, rt1.c4, t0.c2, rt1.c2)) NOT BETWEEN ((t0.c2, rt1.c5, 0.659179608388384, rt1.c3)) AND ((rt1.c3, NULL, rt1.c3, '-904110918'))) IN (CASE WHEN rt1.c5 THEN rt1.c1 END, 0.36272821311980374)) WHERE (((((((((((t0.c1)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))OR(t0.c0)))>(t0.c4)));
SELECT MIN(rt1.c0) FROM rt1 CROSS JOIN t0 ON ((((t0.c4, rt1.c4, t0.c2, rt1.c2)) NOT BETWEEN ((t0.c2, rt1.c5, 0.659179608388384, rt1.c3)) AND ((rt1.c3, NULL, rt1.c3, '-904110918'))) IN (CASE WHEN rt1.c5 THEN rt1.c1 END, 0.36272821311980374)) WHERE (((((((((((((t0.c1)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))OR(t0.c0)))>(t0.c4)))AND(((t0.c3 COLLATE BINARY) NOT BETWEEN (t0.c1) AND ((rt1.c6 IN ())))))) LIMIT 0 INTERSECT SELECT MIN(rt1.c0) FROM rt1 CROSS JOIN t0 ON ((((t0.c4, rt1.c4, t0.c2, rt1.c2)) NOT BETWEEN ((t0.c2, rt1.c5, 0.659179608388384, rt1.c3)) AND ((rt1.c3, NULL, rt1.c3, '-904110918'))) IN (CASE WHEN rt1.c5 THEN rt1.c1 END, 0.36272821311980374)) WHERE (ROUND((+ (rt1.c6)), CAST('P' AS INTEGER))) LIMIT 0X0;
SELECT ALL * FROM t0, rt1 WHERE ((((((rt1.c3))<((rt1.c0))))*(HEX(DISTINCT rt1.c5)))) ORDER BY (((rt1.c3) IS FALSE) IN ()) ASC  NULLS LAST, ((((t0.c0 IN ()), ((t0.c0) BETWEEN ('-1927307188') AND (t0.c4))))<=((((t0.c4)IS(t0.c2)), ((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) ASC  NULLS LAST;
SELECT * FROM t0, rt1 WHERE ((((((rt1.c3))<((rt1.c0))))*(HEX(DISTINCT rt1.c5)))) ORDER BY (((rt1.c0, rt1.c3, rt1.c2)) NOT BETWEEN ((COALESCE(rt1.c0, rt1.c0), NULL, (+ (rt1.c0)))) AND ((CAST(t0.c4 AS NUMERIC), ((t0.c0)>=(t0.c4)), ((t0.c0)!=(rt1.c0))))) ASC  NULLS LAST, CAST(((((t0.c3)AND(rt1.c4)))OR(rt1.c2)) AS REAL) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT * FROM t0, rt1 WHERE (CASE WHEN (+ (t0.c1)) THEN (~ (rt1.c5)) END) ORDER BY (((rt1.c0, rt1.c3, rt1.c2)) NOT BETWEEN ((COALESCE(rt1.c0, rt1.c0), NULL, (+ (rt1.c0)))) AND ((CAST(t0.c4 AS NUMERIC), ((t0.c0)>=(t0.c4)), ((t0.c0)<>(rt1.c0))))) ASC  NULLS LAST, CAST(((((t0.c3)AND(rt1.c4)))OR(rt1.c2)) AS REAL) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE ((((((rt1.c3))<((rt1.c0))))*(HEX(DISTINCT rt1.c5)))) ORDER BY (((rt1.c3) IS FALSE) IN ()) ASC  NULLS LAST, ((((t0.c0 IN ()), ((t0.c0) BETWEEN ('-1927307188') AND (t0.c4))))<=((((t0.c4)IS(t0.c2)), ((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c4 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE (((t0.c4 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE)AND('603733417' COLLATE RTRIM))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((((t0.c2)AND(t0.c3)))OR(t0.c0)) AS BLOB)) LIMIT 1;
SELECT ALL * FROM t0 WHERE (t0.c4 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE (((t0.c4 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE)AND('603733417' COLLATE RTRIM))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((((t0.c2)AND(t0.c3)))OR(t0.c0)) AS BLOB)) LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c3)) NOT BETWEEN ((t0.c1)) AND ((t0.c4))) THEN ((((t0.c3)OR(t0.c0)))AND(t0.c2)) WHEN ((t0.c3) IS TRUE) THEN ((t0.c1)>=(t0.c2)) WHEN t0.c4 COLLATE BINARY THEN ((t0.c4)>(t0.c2)) WHEN (((t0.c1, t0.c4))<>((t0.c4, t0.c0))) THEN ((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2)) WHEN t0.c1 COLLATE NOCASE THEN SQLITE_SOURCE_ID() WHEN ((((t0.c1)OR(t0.c1)))AND(t0.c4)) THEN -13758163 END);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CASE WHEN (((t0.c3)) NOT BETWEEN ((t0.c1)) AND ((t0.c4))) THEN ((((t0.c3)OR(t0.c0)))AND(t0.c2)) WHEN ((t0.c3) IS TRUE) THEN ((t0.c1)=(t0.c2)) WHEN t0.c4 COLLATE BINARY THEN ((t0.c4)>(t0.c2)) WHEN (((t0.c1, t0.c4))<>((t0.c4, t0.c0))) THEN ((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c2)) WHEN t0.c1 COLLATE NOCASE THEN SQLITE_SOURCE_ID() WHEN ((((t0.c1)OR(t0.c1)))AND(t0.c4)) THEN 0Xffffffffff2e112d END)AND((((t0.c0)) BETWEEN ((CAST(t0.c4 AS BLOB))) AND ((((t0.c0)<=(t0.c3)))))))) ORDER BY ((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c2)))>=(((((((((t0.c3)AND(t0.c1)))AND(t0.c2)))AND(t0.c4)))AND(t0.c3)))), 'a';
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN 1.17383058E9 THEN CASE t0.c4  WHEN t0.c3 THEN '栯HS' WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 ELSE t0.c2 END END);
SELECT * FROM t0, rt1 WHERE (CASE WHEN 1.17383058E9 THEN CASE t0.c4  WHEN t0.c3 THEN '栯HS' WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 ELSE t0.c2 END END);
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN 1.17383058E9 THEN CASE t0.c4  WHEN t0.c3 THEN '栯HS' WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 ELSE t0.c2 END END);
SELECT * FROM t0, rt1 WHERE (CASE WHEN 1.17383058E9 THEN CASE t0.c4  WHEN t0.c3 THEN '栯HS' WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 ELSE t0.c2 END END);
SELECT ALL MAX(t0.c4) FROM t0 WHERE ((('') IS FALSE)) ORDER BY CASE ((t0.c0)<(t0.c1))  WHEN t0.c4 THEN CASE t0.c3  WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c4 WHEN t0.c2 THEN t0.c1 END ELSE (((t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c0)) AND ((t0.c0, t0.c4))) END  NULLS FIRST;
SELECT MAX(t0.c4) FROM t0 NOT INDEXED WHERE ((('') IS FALSE)) ORDER BY ((((t0.c2) ISNULL))>(((((((t0.c1)AND(t0.c3)))OR(t0.c0)))OR(t0.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((x'') BETWEEN (CASE WHEN t0.c2 THEN t0.c3 END) AND (((((((((t0.c2)AND(t0.c4)))OR(t0.c3)))OR(t0.c2)))OR(t0.c2)))));
SELECT COUNT(*) FROM t0 WHERE (((x'') BETWEEN (CASE WHEN t0.c2 THEN t0.c3 END) AND (((((((((t0.c2)AND(t0.c4)))OR(t0.c3)))OR(t0.c2)))OR(t0.c2)))));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((((rt1.c6) BETWEEN (t0.c3) AND (t0.c2))) IS TRUE) WHERE (CASE (rt1.c6 IN ())  WHEN CASE rt1.c4  WHEN t0.c3 THEN rt1.c4 END THEN NULLIF(rt1.c5, t0.c3) END);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((((rt1.c6) BETWEEN (t0.c3) AND (t0.c2))) IS TRUE) WHERE (((CASE (rt1.c6 IN ())  WHEN CASE rt1.c4  WHEN t0.c3 THEN rt1.c4 END THEN NULLIF(rt1.c5, t0.c3) END)AND(MIN(((1943340961)LIKE(rt1.c1)), rt1.c3, UNLIKELY(DISTINCT t0.c2))))) ORDER BY t0.c0  NULLS FIRST, (((t0.c3 IN (t0.c3)))>((((t0.c0, t0.c3, t0.c1))!=((t0.c1, t0.c4, rt1.c5)))));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((((rt1.c6) BETWEEN (t0.c3) AND (t0.c2))) IS TRUE) WHERE (CASE (rt1.c6 IN ())  WHEN CASE rt1.c4  WHEN t0.c3 THEN rt1.c4 END THEN NULLIF(rt1.c5, t0.c3) END);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((((rt1.c6) BETWEEN (t0.c3) AND (t0.c2))) IS TRUE) WHERE (((CASE (rt1.c6 IN ())  WHEN CASE rt1.c4  WHEN t0.c3 THEN rt1.c4 END THEN NULLIF(rt1.c5, t0.c3) END)AND(MIN(((1943340961)LIKE(rt1.c1)), rt1.c3, UNLIKELY(DISTINCT t0.c2))))) ORDER BY t0.c0  NULLS FIRST, (((t0.c3 IN (t0.c3)))>((((t0.c0, t0.c3, t0.c1))!=((t0.c1, t0.c4, rt1.c5)))));
SELECT * FROM t0 WHERE (((NULL COLLATE RTRIM)IS NOT(((((t0.c0)OR(t0.c1)))AND(t0.c1)))));
SELECT * FROM t0 WHERE (((((NULL COLLATE RTRIM)IS NOT(((((t0.c0)OR(t0.c1)))AND(t0.c1)))))AND(CASE ((t0.c0) NOT NULL)  WHEN (NOT (t0.c4)) THEN x'' ELSE t0.c2 END))) LIMIT 4 INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c3)||(1139347580)) IN ())) LIMIT 0X4;
SELECT * FROM t0 WHERE (((NULL COLLATE RTRIM)IS NOT(((((t0.c0)OR(t0.c1)))AND(t0.c1)))));
SELECT * FROM t0 WHERE (((((NULL COLLATE RTRIM)IS NOT(((((t0.c0)OR(t0.c1)))AND(t0.c1)))))AND(CASE ((t0.c0) NOT NULL)  WHEN (NOT (t0.c4)) THEN x'' ELSE t0.c2 END))) LIMIT 4 INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c3)||(1139347580)) IN ())) LIMIT 0X4;
SELECT * FROM t0, rt1 WHERE (((((((t0.c3)OR(rt1.c3)))AND(t0.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND ((((t0.c1, t0.c3)) BETWEEN ((rt1.c6, t0.c4)) AND ((rt1.c4, x'e1c5'))))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((t0.c3)OR(rt1.c3)))AND(t0.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND ((((t0.c1, t0.c3)) BETWEEN ((rt1.c6, t0.c4)) AND ((rt1.c4, x'e1c5'))))));
SELECT * FROM t0, rt1 WHERE (((((((t0.c3)OR(rt1.c3)))AND(t0.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND ((((t0.c1, t0.c3)) BETWEEN ((rt1.c6, t0.c4)) AND ((rt1.c4, x'e1c5'))))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((t0.c3)OR(rt1.c3)))AND(t0.c2))) BETWEEN (rt1.c2 COLLATE BINARY) AND ((((t0.c1, t0.c3)) BETWEEN ((rt1.c6, t0.c4)) AND ((rt1.c4, x'e1c5'))))));
SELECT * FROM t0 WHERE ((((t0.c0, t0.c4, t0.c3)) NOT BETWEEN (((t0.c2 IN (t0.c4)), 0.37892438071811574, -1071383120)) AND ((((t0.c3)*(t0.c2)), CASE t0.c0  WHEN t0.c1 THEN t0.c4 WHEN t0.c4 THEN t0.c1 ELSE t0.c0 END, ((t0.c4) NOT NULL)))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c4, t0.c3)) NOT BETWEEN (((t0.c2 IN (t0.c4)), 0.37892438071811574, 0Xffffffffc023fdb0)) AND ((((t0.c3)*(t0.c2)), CASE t0.c0  WHEN t0.c1 THEN t0.c4 WHEN t0.c4 THEN t0.c1 ELSE t0.c0 END, ((t0.c4) NOT NULL))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c2 THEN t0.c1 END AS TEXT)) LIMIT 0x1;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c4, t0.c3)) NOT BETWEEN (((t0.c2 IN (t0.c4)), 0.37892438071811574, -1071383120)) AND ((((t0.c3)*(t0.c2)), CASE t0.c0  WHEN t0.c1 THEN t0.c4 WHEN t0.c4 THEN t0.c1 ELSE t0.c0 END, ((t0.c4) NOT NULL)))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c4, t0.c3)) NOT BETWEEN (((t0.c2 IN (t0.c4)), 0.37892438071811574, 0Xffffffffc023fdb0)) AND ((((t0.c3)*(t0.c2)), CASE t0.c0  WHEN t0.c1 THEN t0.c4 WHEN t0.c4 THEN t0.c1 ELSE t0.c0 END, ((t0.c4) NOT NULL))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c2 THEN t0.c1 END AS TEXT)) LIMIT 0x1;
SELECT MIN(t0.c4) FROM t0 WHERE (((((t0.c0)LIKE(t0.c4)))>(((((t0.c4)AND(t0.c0)))OR(NULL))))) ORDER BY (('2121002021') NOT BETWEEN ((- (t0.c0))) AND (((((((t0.c0)OR(t0.c3)))OR(t0.c4)))AND(t0.c2)))), t0.c3;
SELECT ALL MIN(t0.c4) FROM t0 WHERE (((((((t0.c0)LIKE(t0.c4)))>(((((t0.c4)AND(t0.c0)))OR(NULL)))))AND(CASE WHEN ((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c2)) WHEN ((x'')IS(t0.c2)) THEN ((t0.c0)+('mf]v')) END))) ORDER BY (((((t0.c0))>=((t0.c3))))<=(CASE '2006487431'  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c1 WHEN t0.c4 THEN t0.c0 ELSE t0.c4 END)), (- (x'12')) DESC LIMIT 1 INTERSECT SELECT ALL MIN(t0.c4) FROM t0 WHERE (((((t0.c2)<(t0.c1))) IS FALSE)) ORDER BY (((((t0.c0))>=((t0.c3))))<=(CASE '2006487431'  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c1 WHEN t0.c4 THEN t0.c0 ELSE t0.c4 END)), (- (x'12')) DESC LIMIT 0x1;
SELECT * FROM rt1 WHERE ('-180735253');
SELECT ALL * FROM rt1 WHERE ((('-180735253')AND((((~ (rt1.c6)))GLOB(x'a3c8'))))) INTERSECT SELECT ALL * FROM rt1 WHERE ((NOT ((rt1.c3 IN (rt1.c4, rt1.c6)))));
SELECT * FROM rt1 WHERE ('-180735253');
SELECT ALL * FROM rt1 WHERE ((('-180735253')AND((((~ (rt1.c6)))GLOB(x'a3c8'))))) INTERSECT SELECT ALL * FROM rt1 WHERE ((NOT ((rt1.c3 IN (rt1.c4, rt1.c6)))));
SELECT ALL * FROM t0 WHERE ((- (t0.c4 COLLATE RTRIM))) ORDER BY (+ (CASE WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c3 ELSE t0.c2 END))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((- (t0.c4 COLLATE RTRIM)))AND(t0.c1))) ORDER BY (+ (CASE WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c3 ELSE t0.c2 END))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c1)-(t0.c2)) IN (CASE WHEN t0.c2 THEN t0.c0 END, CAST(t0.c3 AS INTEGER)))) ORDER BY (+ (CASE WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c3 ELSE t0.c2 END))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((- (t0.c4 COLLATE RTRIM))) ORDER BY (+ (CASE WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c3 ELSE t0.c2 END))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((- (t0.c4 COLLATE RTRIM)))AND(t0.c1))) ORDER BY (+ (CASE WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c3 ELSE t0.c2 END))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c1)-(t0.c2)) IN (CASE WHEN t0.c2 THEN t0.c0 END, CAST(t0.c3 AS INTEGER)))) ORDER BY (+ (CASE WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c3 ELSE t0.c2 END))  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((LIKELIHOOD(rt1.c2, rt1.c0), ''))>=((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 END, x'e5')))) ORDER BY (((((('0.0')OR(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c6)))))AND(((rt1.c1) BETWEEN (rt1.c0) AND (1688282523)))))AND((((rt1.c5))=((rt1.c5)))))  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE ((((((LIKELIHOOD(rt1.c2, rt1.c0), ''))>=((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 END, x'e5'))))AND((((rt1.c2, rt1.c0)) BETWEEN (((~ (rt1.c4)), CAST(0.10948030318603197 AS NUMERIC))) AND ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c6)))AND(rt1.c1)), ((rt1.c5)>=(rt1.c2)))))))) ORDER BY (((((('0.0')OR(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c6)))))AND(((rt1.c1) BETWEEN (rt1.c0) AND (1688282523)))))AND((((rt1.c5))==((rt1.c5)))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((rt1.c5)AND(rt1.c3)) COLLATE NOCASE) ORDER BY (((((('0.0')OR(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c6)))))AND(((rt1.c1) BETWEEN (rt1.c0) AND (0x64a1259b)))))AND((((rt1.c5))==((rt1.c5)))))  NULLS LAST;
SELECT * FROM rt1 WHERE ((((LIKELIHOOD(rt1.c2, rt1.c0), ''))>=((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 END, x'e5')))) ORDER BY (((((('0.0')OR(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c6)))))AND(((rt1.c1) BETWEEN (rt1.c0) AND (1688282523)))))AND((((rt1.c5))=((rt1.c5)))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c4  WHEN t0.c2 THEN t0.c2 END)<(CASE t0.c1  WHEN t0.c4 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END))) ORDER BY ((t0.c4)<=(json_insert(t0.c4, t0.c2, t0.c2, t0.c2))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((CASE t0.c4  WHEN t0.c2 THEN t0.c2 END)<(CASE t0.c1  WHEN t0.c4 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)))AND(CAST((t0.c3 IN ()) AS TEXT)))) ORDER BY ((t0.c4)<=(json_insert(t0.c4, t0.c2, t0.c2, t0.c2))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (((rt1.c2) BETWEEN (t0.c3) AND (rt1.c5)) COLLATE BINARY) ORDER BY (- (CASE WHEN t0.c4 THEN rt1.c3 WHEN '736960138' THEN 0Xffffffffb6a34a96 WHEN rt1.c5 THEN rt1.c2 END));
SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE (((rt1.c2) BETWEEN (t0.c3) AND (rt1.c5)) COLLATE BINARY) ORDER BY (- (CASE WHEN t0.c4 THEN rt1.c3 WHEN '736960138' THEN -1230812522 WHEN rt1.c5 THEN rt1.c2 END));
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (((rt1.c2) BETWEEN (t0.c3) AND (rt1.c5)) COLLATE BINARY) ORDER BY (- (CASE WHEN t0.c4 THEN rt1.c3 WHEN '736960138' THEN 0Xffffffffb6a34a96 WHEN rt1.c5 THEN rt1.c2 END));
SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE (((rt1.c2) BETWEEN (t0.c3) AND (rt1.c5)) COLLATE BINARY) ORDER BY (- (CASE WHEN t0.c4 THEN rt1.c3 WHEN '736960138' THEN -1230812522 WHEN rt1.c5 THEN rt1.c2 END));
SELECT ALL * FROM rt1 WHERE ((+ ((+ (rt1.c5))))) ORDER BY (NOT (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0xffffffffda03add5 ELSE rt1.c5 END));
SELECT DISTINCT * FROM rt1 WHERE ((((+ ((+ (rt1.c5)))))AND(0.7770024266017794))) ORDER BY (NOT (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0Xffffffffda03add5 ELSE rt1.c5 END)) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (rt1.c3) ORDER BY (NOT (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0Xffffffffda03add5 ELSE rt1.c5 END));
SELECT ALL * FROM rt1 WHERE ((+ ((+ (rt1.c5))))) ORDER BY (NOT (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0xffffffffda03add5 ELSE rt1.c5 END));
SELECT DISTINCT * FROM rt1 WHERE ((((+ ((+ (rt1.c5)))))AND(0.7770024266017794))) ORDER BY (NOT (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0Xffffffffda03add5 ELSE rt1.c5 END)) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (rt1.c3) ORDER BY (NOT (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0Xffffffffda03add5 ELSE rt1.c5 END));
SELECT * FROM t0 INNER JOIN rt1 ON (t0.c4 IN (rt1.c6, rt1.c5)) COLLATE NOCASE WHERE ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c5)) IN (rt1.c3, (((rt1.c4))>=((rt1.c0))))));
SELECT * FROM t0 INNER JOIN rt1 ON (t0.c4 IN (rt1.c6, rt1.c5)) COLLATE NOCASE WHERE ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c5)) IN (rt1.c3))) LIMIT 1;
SELECT * FROM t0 INNER JOIN rt1 ON (t0.c4 IN (rt1.c6, rt1.c5)) COLLATE NOCASE WHERE ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c5)) IN (rt1.c3, (((rt1.c4))>=((rt1.c0))))));
SELECT * FROM t0 INNER JOIN rt1 ON (t0.c4 IN (rt1.c6, rt1.c5)) COLLATE NOCASE WHERE ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c5)) IN (rt1.c3))) LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE (CAST(((((rt1.c4)AND(t0.c0)))OR(t0.c2)) AS REAL));
SELECT ALL * FROM t0, rt1 WHERE (CAST(((((rt1.c4)AND(t0.c0)))OR(t0.c2)) AS REAL)) ORDER BY (((rt1.c2)) BETWEEN ((((t0.c4) IS TRUE))) AND ((((((rt1.c1)AND(t0.c3)))AND(x''))))) DESC, (NOT (t0.c3)) LIMIT 0X3 INTERSECT SELECT * FROM t0, rt1 WHERE (NULLIF(DISTINCT ((x'')!=(rt1.c1)), ((t0.c4) NOTNULL))) ORDER BY (((rt1.c2)) BETWEEN ((((t0.c4) IS TRUE))) AND ((((((rt1.c1)AND(t0.c3)))AND(x''))))) DESC, (NOT (t0.c3)) LIMIT 0x3;
SELECT ALL * FROM t0, rt1 WHERE (CAST(((((rt1.c4)AND(t0.c0)))OR(t0.c2)) AS REAL));
SELECT ALL * FROM t0, rt1 WHERE (CAST(((((rt1.c4)AND(t0.c0)))OR(t0.c2)) AS REAL)) ORDER BY (((rt1.c2)) BETWEEN ((((t0.c4) IS TRUE))) AND ((((((rt1.c1)AND(t0.c3)))AND(x''))))) DESC, (NOT (t0.c3)) LIMIT 0X3 INTERSECT SELECT * FROM t0, rt1 WHERE (NULLIF(DISTINCT ((x'')!=(rt1.c1)), ((t0.c4) NOTNULL))) ORDER BY (((rt1.c2)) BETWEEN ((((t0.c4) IS TRUE))) AND ((((((rt1.c1)AND(t0.c3)))AND(x''))))) DESC, (NOT (t0.c3)) LIMIT 0x3;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((((((((((t0.c1)OR(t0.c4)))AND(rt1.c1)))OR(rt1.c6)))OR(rt1.c3))) IS FALSE) WHERE ((((((rt1.c5, '1601051117'))==((rt1.c0, t0.c4))))IS NOT((+ (rt1.c4))))) ORDER BY ((rt1.c3 COLLATE NOCASE) BETWEEN ((NOT (rt1.c4))) AND (((((((rt1.c5)AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON ((((((((((t0.c1)OR(t0.c4)))AND(rt1.c1)))OR(rt1.c6)))OR(rt1.c3))) IS FALSE) WHERE ((((((((rt1.c5, '1601051117'))==((rt1.c0, t0.c4))))IS NOT((+ (rt1.c4)))))AND(((rt1.c5 COLLATE BINARY) NOT BETWEEN (((NULL)*('*C'))) AND ((rt1.c5 IN (rt1.c4))))))) ORDER BY ((rt1.c3 COLLATE NOCASE) BETWEEN ((NOT (rt1.c4))) AND (((((((rt1.c5)AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))) ASC  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((((((((((t0.c1)OR(t0.c4)))AND(rt1.c1)))OR(rt1.c6)))OR(rt1.c3))) IS FALSE) WHERE ((((((rt1.c5, '1601051117'))==((rt1.c0, t0.c4))))IS NOT((+ (rt1.c4))))) ORDER BY ((rt1.c3 COLLATE NOCASE) BETWEEN ((NOT (rt1.c4))) AND (((((((rt1.c5)AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON ((((((((((t0.c1)OR(t0.c4)))AND(rt1.c1)))OR(rt1.c6)))OR(rt1.c3))) IS FALSE) WHERE ((((((((rt1.c5, '1601051117'))==((rt1.c0, t0.c4))))IS NOT((+ (rt1.c4)))))AND(((rt1.c5 COLLATE BINARY) NOT BETWEEN (((NULL)*('*C'))) AND ((rt1.c5 IN (rt1.c4))))))) ORDER BY ((rt1.c3 COLLATE NOCASE) BETWEEN ((NOT (rt1.c4))) AND (((((((rt1.c5)AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))) ASC  NULLS FIRST LIMIT 0x2;
SELECT COUNT(*) FROM t0, rt1 WHERE ((((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c0)) IN ())) ORDER BY ((((~ (t0.c0)), ((t0.c3)-(t0.c3))))<>((((t0.c0)>=(rt1.c0)), t0.c1 COLLATE NOCASE))) ASC LIMIT 3;
SELECT ALL * FROM rt1 INNER JOIN t0 ON (((t0.c2 IN ()))>>(((rt1.c4)||(NULL)))) WHERE (((((((((t0.c4)OR(t0.c0)))AND(0.2320737631896974)))AND(rt1.c0))) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((t0.c2 IN ()))>>(((rt1.c4)||(NULL)))) WHERE (((((((((t0.c4)OR(t0.c0)))AND(0.2320737631896974)))AND(rt1.c0))) ISNULL)) ORDER BY (((((t0.c2) BETWEEN (rt1.c5) AND (rt1.c3)), rt1.c6))<>(((((t0.c4)) BETWEEN ((rt1.c1)) AND ((t0.c1))), (rt1.c6 IN ())))) ASC INTERSECT SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((t0.c2 IN ()))>>(((rt1.c4)||(NULL)))) WHERE ((rt1.c6 IN ()) COLLATE RTRIM) ORDER BY (((((t0.c2) BETWEEN (rt1.c5) AND (rt1.c3)), rt1.c6))!=(((((t0.c4)) BETWEEN ((rt1.c1)) AND ((t0.c1))), (rt1.c6 IN ())))) ASC;
SELECT ALL * FROM rt1 INNER JOIN t0 ON (((t0.c2 IN ()))>>(((rt1.c4)||(NULL)))) WHERE (((((((((t0.c4)OR(t0.c0)))AND(0.2320737631896974)))AND(rt1.c0))) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((t0.c2 IN ()))>>(((rt1.c4)||(NULL)))) WHERE (((((((((t0.c4)OR(t0.c0)))AND(0.2320737631896974)))AND(rt1.c0))) ISNULL)) ORDER BY (((((t0.c2) BETWEEN (rt1.c5) AND (rt1.c3)), rt1.c6))<>(((((t0.c4)) BETWEEN ((rt1.c1)) AND ((t0.c1))), (rt1.c6 IN ())))) ASC INTERSECT SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((t0.c2 IN ()))>>(((rt1.c4)||(NULL)))) WHERE ((rt1.c6 IN ()) COLLATE RTRIM) ORDER BY (((((t0.c2) BETWEEN (rt1.c5) AND (rt1.c3)), rt1.c6))!=(((((t0.c4)) BETWEEN ((rt1.c1)) AND ((t0.c1))), (rt1.c6 IN ())))) ASC;
SELECT ALL * FROM t0, rt1 WHERE (LOWER(DISTINCT ((rt1.c2)OR(rt1.c2)))) ORDER BY ((t0.c4 COLLATE NOCASE)<=(CASE WHEN rt1.c1 THEN rt1.c5 END)) ASC;
SELECT DISTINCT * FROM t0, rt1 WHERE (LOWER(DISTINCT ((rt1.c2)OR(rt1.c2)))) ORDER BY 'qEpfR' ASC, ((x'') ISNULL) COLLATE RTRIM DESC, (((t0.c2 IN (t0.c1, rt1.c4))) NOT NULL) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (rt1.c6) ORDER BY 'qEpfR' ASC, ((x'') ISNULL) COLLATE RTRIM DESC, (((t0.c2 IN (t0.c1, rt1.c4))) NOT NULL) LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE (LOWER(DISTINCT ((rt1.c2)OR(rt1.c2)))) ORDER BY ((t0.c4 COLLATE NOCASE)<=(CASE WHEN rt1.c1 THEN rt1.c5 END)) ASC;
SELECT DISTINCT * FROM t0, rt1 WHERE (LOWER(DISTINCT ((rt1.c2)OR(rt1.c2)))) ORDER BY 'qEpfR' ASC, ((x'') ISNULL) COLLATE RTRIM DESC, (((t0.c2 IN (t0.c1, rt1.c4))) NOT NULL) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (rt1.c6) ORDER BY 'qEpfR' ASC, ((x'') ISNULL) COLLATE RTRIM DESC, (((t0.c2 IN (t0.c1, rt1.c4))) NOT NULL) LIMIT 1;
SELECT ALL MAX(t0.c3) FROM rt1 CROSS JOIN t0 ON t0.c2 WHERE (0.3793622856758685);
SELECT DISTINCT MAX(t0.c3) FROM rt1 CROSS JOIN t0 ON t0.c2 WHERE (0.3793622856758685) ORDER BY ((CASE WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c1 THEN t0.c3 END)IS NOT(t0.c0)) DESC  NULLS FIRST, CASE rt1.c3 COLLATE BINARY  WHEN (NOT (NULL)) THEN x'' WHEN ((((rt1.c6)AND(rt1.c1)))AND(t0.c1)) THEN CASE WHEN rt1.c4 THEN t0.c2 ELSE rt1.c4 END ELSE CASE t0.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c4 END END INTERSECT SELECT DISTINCT MAX(t0.c3) FROM rt1 CROSS JOIN t0 ON t0.c2 WHERE ((((rt1.c5 IN (rt1.c2)))+((rt1.c3 IN ())))) ORDER BY ((CASE WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c1 THEN t0.c3 END)IS NOT(t0.c0)) DESC  NULLS FIRST, CASE rt1.c3 COLLATE BINARY  WHEN (NOT (NULL)) THEN x'' WHEN ((((rt1.c6)AND(rt1.c1)))AND(t0.c1)) THEN CASE WHEN rt1.c4 THEN t0.c2 ELSE rt1.c4 END ELSE CASE t0.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c4 END END;
SELECT * FROM t0, rt1 WHERE ((((((((((t0.c2)OR(rt1.c3)))OR(rt1.c5)))AND(t0.c1)))AND(t0.c4)) IN ()));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((((((((t0.c2)OR(rt1.c3)))OR(rt1.c5)))AND(t0.c1)))AND(t0.c4)) IN ()))AND((((~ (rt1.c2))) BETWEEN (((((((rt1.c6)AND(t0.c1)))AND(rt1.c2)))AND(0.921421867885521))) AND (CASE WHEN t0.c3 THEN rt1.c2 ELSE rt1.c1 END))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((CAST(rt1.c6 AS NUMERIC))OR((NOT (rt1.c2)))))AND(rt1.c2))) LIMIT 0x1;
SELECT * FROM t0, rt1 WHERE ((((((((((t0.c2)OR(rt1.c3)))OR(rt1.c5)))AND(t0.c1)))AND(t0.c4)) IN ()));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((((((((t0.c2)OR(rt1.c3)))OR(rt1.c5)))AND(t0.c1)))AND(t0.c4)) IN ()))AND((((~ (rt1.c2))) BETWEEN (((((((rt1.c6)AND(t0.c1)))AND(rt1.c2)))AND(0.921421867885521))) AND (CASE WHEN t0.c3 THEN rt1.c2 ELSE rt1.c1 END))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((CAST(rt1.c6 AS NUMERIC))OR((NOT (rt1.c2)))))AND(rt1.c2))) LIMIT 0x1;
SELECT ALL MAX(rt1.c0) FROM rt1, t0 WHERE (((((t0.c3) BETWEEN (rt1.c2) AND (NULL))) IS TRUE));
SELECT DISTINCT MAX(rt1.c0) FROM rt1, t0 WHERE (((((t0.c3) BETWEEN (rt1.c2) AND (NULL))) IS TRUE)) ORDER BY '.k*0' COLLATE BINARY, CAST((('n') IS TRUE) AS BLOB)  NULLS LAST INTERSECT SELECT DISTINCT MAX(rt1.c0) FROM rt1, t0 WHERE (((((((((((rt1.c5)AND(rt1.c5)))OR(rt1.c5)))AND(rt1.c1)))OR((- (rt1.c0)))))OR((- (t0.c1))))) ORDER BY '.k*0' COLLATE BINARY, CAST((('n') IS TRUE) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (rt1.c6);
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((rt1.c6)AND(((+ (rt1.c5)) IN (t0.c1))))) ORDER BY ((((rt1.c2) NOTNULL))<=(((rt1.c1)>(t0.c1)))) LIMIT 5 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (NULL) ORDER BY ((((rt1.c2) NOTNULL))<=(((rt1.c1)>(t0.c1)))) LIMIT 5;
SELECT * FROM rt1 INNER JOIN t0 ON ((((((((rt1.c2) IS FALSE))AND(((t0.c1) BETWEEN (rt1.c3) AND (rt1.c3)))))AND((rt1.c5 IN (0.4764239816965732)))))AND(0.43879928417220526)) WHERE ((((rt1.c0 IN ())) NOTNULL));
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((((((((rt1.c2) IS FALSE))AND(((t0.c1) BETWEEN (rt1.c3) AND (rt1.c3)))))AND((rt1.c5 IN (0.4764239816965732)))))AND(0.43879928417220526)) WHERE ((((rt1.c0 IN ())) NOTNULL)) LIMIT 0X1;
SELECT * FROM rt1 INNER JOIN t0 ON ((((((((rt1.c2) IS FALSE))AND(((t0.c1) BETWEEN (rt1.c3) AND (rt1.c3)))))AND((rt1.c5 IN (0.4764239816965732)))))AND(0.43879928417220526)) WHERE ((((rt1.c0 IN ())) NOTNULL));
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((((((((rt1.c2) IS FALSE))AND(((t0.c1) BETWEEN (rt1.c3) AND (rt1.c3)))))AND((rt1.c5 IN (0.4764239816965732)))))AND(0.43879928417220526)) WHERE ((((rt1.c0 IN ())) NOTNULL)) LIMIT 0X1;
SELECT ALL * FROM rt1, t0 WHERE (rt1.c4) ORDER BY (((((((t0.c4)OR(rt1.c6)))AND(rt1.c6)))AND(rt1.c0)) IN (((((rt1.c6)OR(t0.c0)))AND(t0.c4))))  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (rt1.c4) ORDER BY (((((((t0.c4)OR(rt1.c6)))AND(rt1.c6)))AND(rt1.c0)) IN (((((rt1.c6)OR(t0.c0)))AND(t0.c4))))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE (rt1.c4) ORDER BY (((((((t0.c4)OR(rt1.c6)))AND(rt1.c6)))AND(rt1.c0)) IN (((((rt1.c6)OR(t0.c0)))AND(t0.c4))))  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (rt1.c4) ORDER BY (((((((t0.c4)OR(rt1.c6)))AND(rt1.c6)))AND(rt1.c0)) IN (((((rt1.c6)OR(t0.c0)))AND(t0.c4))))  NULLS LAST LIMIT 0x0;
SELECT * FROM t0, rt1 WHERE (CAST(CASE t0.c2  WHEN rt1.c4 THEN rt1.c0 ELSE t0.c0 END AS TEXT)) ORDER BY ((((NOT (rt1.c4))))<=(((NOT (t0.c0))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(CASE t0.c2  WHEN rt1.c4 THEN rt1.c0 ELSE t0.c0 END AS TEXT))AND(((rt1.c2 COLLATE NOCASE)<<(CAST(t0.c1 AS TEXT)))))) ORDER BY ((((t0.c0) NOT NULL))LIKE((((t0.c3, NULL))<((rt1.c6, rt1.c1)))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 NOT INDEXED, rt1 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY ((((t0.c0) NOT NULL))LIKE((((t0.c3, NULL))<((rt1.c6, rt1.c1)))))  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (CAST(CASE t0.c2  WHEN rt1.c4 THEN rt1.c0 ELSE t0.c0 END AS TEXT)) ORDER BY ((((NOT (rt1.c4))))<=(((NOT (t0.c0))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(CASE t0.c2  WHEN rt1.c4 THEN rt1.c0 ELSE t0.c0 END AS TEXT))AND(((rt1.c2 COLLATE NOCASE)<<(CAST(t0.c1 AS TEXT)))))) ORDER BY ((((t0.c0) NOT NULL))LIKE((((t0.c3, NULL))<((rt1.c6, rt1.c1)))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 NOT INDEXED, rt1 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY ((((t0.c0) NOT NULL))LIKE((((t0.c3, NULL))<((rt1.c6, rt1.c1)))))  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (rt1.c5) ORDER BY rt1.c1 ASC  NULLS LAST, (((((((rt1.c6)) BETWEEN ((rt1.c3)) AND ((rt1.c4))))AND(t0.c1 COLLATE BINARY)))OR(((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c1))))  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (rt1.c5) ORDER BY rt1.c1 ASC  NULLS LAST, (((((((rt1.c6)) BETWEEN ((rt1.c3)) AND ((rt1.c4))))AND(t0.c1 COLLATE BINARY)))OR(((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c1))))  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (rt1.c5) ORDER BY rt1.c1 ASC  NULLS LAST, (((((((rt1.c6)) BETWEEN ((rt1.c3)) AND ((rt1.c4))))AND(t0.c1 COLLATE BINARY)))OR(((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c1))))  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (rt1.c5) ORDER BY rt1.c1 ASC  NULLS LAST, (((((((rt1.c6)) BETWEEN ((rt1.c3)) AND ((rt1.c4))))AND(t0.c1 COLLATE BINARY)))OR(((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c1))))  NULLS LAST;
SELECT * FROM rt1 CROSS JOIN t0 ON (NOT (x'8e')) WHERE ((rt1.c2 IN ()));
SELECT ALL * FROM rt1 CROSS JOIN t0 ON (NOT (x'8e')) WHERE ((rt1.c2 IN ())) ORDER BY (((t0.c3) IS TRUE) IN ((+ ('-314277618')), t0.c2 COLLATE NOCASE, 0.9941097820896322)) DESC, rt1.c4 ASC;
SELECT * FROM rt1 CROSS JOIN t0 ON (NOT (x'8e')) WHERE ((rt1.c2 IN ()));
SELECT ALL * FROM rt1 CROSS JOIN t0 ON (NOT (x'8e')) WHERE ((rt1.c2 IN ())) ORDER BY (((t0.c3) IS TRUE) IN ((+ ('-314277618')), t0.c2 COLLATE NOCASE, 0.9941097820896322)) DESC, rt1.c4 ASC;
SELECT ALL MIN(rt1.c6) FROM rt1, t0 WHERE (CAST((NOT (NULL)) AS REAL));
SELECT ALL MIN(rt1.c6) FROM rt1, t0 WHERE (CAST((NOT (NULL)) AS REAL)) ORDER BY CAST(((((t0.c2)AND(rt1.c4)))AND(rt1.c0)) AS REAL) ASC  NULLS LAST, (((((rt1.c5, t0.c4, rt1.c5))<>((x'9db0', rt1.c3, t0.c1))))+(((t0.c0)IS NOT(rt1.c3)))) ASC  NULLS FIRST, (((((((NULL IN (rt1.c5)))OR(((rt1.c0)GLOB(rt1.c2)))))AND((((t0.c3, t0.c2)) BETWEEN ((t0.c0, t0.c2)) AND ((t0.c0, t0.c1))))))OR((NOT (t0.c2)))) ASC  NULLS FIRST LIMIT 5;
SELECT MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY ((NULL) IS TRUE)  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((t0.c0)AND((((((((((- (t0.c0)))AND(t0.c2 COLLATE BINARY)))AND(CASE WHEN t0.c0 THEN t0.c4 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN x'2ced' THEN 0.4468524921610735 ELSE t0.c1 END)))AND((t0.c4 IN (t0.c1)))))OR(t0.c1 COLLATE RTRIM))))) ORDER BY (~ ((~ (t0.c3)))) DESC INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((t0.c0) ISNULL) COLLATE RTRIM) ORDER BY (~ ((~ (t0.c3)))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ('-1992069751') ORDER BY ((CAST(t0.c3 AS INTEGER)) NOT BETWEEN ('886858200') AND (JULIANDAY(t0.c0, t0.c3, t0.c1, t0.c3, '-248273772')))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ('-1992069751') ORDER BY ((t0.c3)IS(t0.c3)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, (((+ (t0.c2)))GLOB(t0.c1)) LIMIT 0X0 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS TEXT) COLLATE RTRIM) ORDER BY ((t0.c3)IS(t0.c3)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, (((+ (t0.c2)))GLOB(t0.c1)) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) BETWEEN (CASE t0.c3  WHEN t0.c1 THEN t0.c3 ELSE t0.c4 END) AND (((('-705745622', t0.c2, x'')) BETWEEN (('J', t0.c3, t0.c1)) AND ((x'74b6', t0.c3, t0.c1))))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) IS TRUE)) BETWEEN (CASE t0.c3  WHEN t0.c1 THEN t0.c3 ELSE t0.c4 END) AND (((('-705745622', t0.c2, x'')) BETWEEN (('J', t0.c3, t0.c1)) AND ((x'74b6', t0.c3, t0.c1))))))AND(((t0.c2 COLLATE BINARY)IS NOT(((t0.c0) NOT NULL)))))) LIMIT 4 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c1)GLOB(t0.c1))) IS FALSE)) LIMIT 4;
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) BETWEEN (CASE t0.c3  WHEN t0.c1 THEN t0.c3 ELSE t0.c4 END) AND (((('-705745622', t0.c2, x'')) BETWEEN (('J', t0.c3, t0.c1)) AND ((x'74b6', t0.c3, t0.c1))))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) IS TRUE)) BETWEEN (CASE t0.c3  WHEN t0.c1 THEN t0.c3 ELSE t0.c4 END) AND (((('-705745622', t0.c2, x'')) BETWEEN (('J', t0.c3, t0.c1)) AND ((x'74b6', t0.c3, t0.c1))))))AND(((t0.c2 COLLATE BINARY)IS NOT(((t0.c0) NOT NULL)))))) LIMIT 4 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c1)GLOB(t0.c1))) IS FALSE)) LIMIT 4;
SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE RTRIM) ISNULL)) ORDER BY CASE (((t0.c2)) NOT BETWEEN ((t0.c3)) AND ((t0.c0)))  WHEN ((t0.c4) NOTNULL) THEN ((t0.c1) NOT NULL) WHEN (t0.c4 IN (t0.c4)) THEN (t0.c2 IN (t0.c2, t0.c3)) WHEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) THEN t0.c3 END  NULLS LAST, ((CASE t0.c4  WHEN t0.c4 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN x'8173' END)|(t0.c2)) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c1 COLLATE RTRIM) ISNULL))AND(t0.c3))) ORDER BY CASE (((t0.c2)) NOT BETWEEN ((t0.c3)) AND ((t0.c0)))  WHEN ((t0.c4) NOTNULL) THEN ((t0.c1) NOT NULL) WHEN (t0.c4 IN (t0.c4)) THEN (t0.c2 IN (t0.c2, t0.c3)) WHEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) THEN t0.c3 END  NULLS LAST, ((CASE t0.c4  WHEN t0.c4 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN x'8173' END)|(t0.c2)) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE RTRIM) ISNULL)) ORDER BY CASE (((t0.c2)) NOT BETWEEN ((t0.c3)) AND ((t0.c0)))  WHEN ((t0.c4) NOTNULL) THEN ((t0.c1) NOT NULL) WHEN (t0.c4 IN (t0.c4)) THEN (t0.c2 IN (t0.c2, t0.c3)) WHEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) THEN t0.c3 END  NULLS LAST, ((CASE t0.c4  WHEN t0.c4 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN x'8173' END)|(t0.c2)) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c1 COLLATE RTRIM) ISNULL))AND(t0.c3))) ORDER BY CASE (((t0.c2)) NOT BETWEEN ((t0.c3)) AND ((t0.c0)))  WHEN ((t0.c4) NOTNULL) THEN ((t0.c1) NOT NULL) WHEN (t0.c4 IN (t0.c4)) THEN (t0.c2 IN (t0.c2, t0.c3)) WHEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) THEN t0.c3 END  NULLS LAST, ((CASE t0.c4  WHEN t0.c4 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c3 THEN t0.c1 WHEN t0.c3 THEN x'8173' END)|(t0.c2)) DESC  NULLS LAST;
SELECT MIN(t0.c1) FROM t0, rt1 WHERE ((((((((((((t0.c0)AND(t0.c2)))AND(t0.c0)))OR('~&䰖p->S')))AND(t0.c0)), ((((((((((((rt1.c3)AND(t0.c3)))AND(rt1.c3)))AND(t0.c1)))OR(rt1.c6)))OR(t0.c4)))OR(rt1.c2)), ((rt1.c4) NOT NULL), (((rt1.c5, t0.c0, t0.c1, t0.c0)) BETWEEN ((rt1.c1, t0.c4, t0.c4, rt1.c5)) AND ((rt1.c6, rt1.c4, rt1.c4, t0.c2))), ((t0.c3) BETWEEN (t0.c3) AND (rt1.c0)), rt1.c5 COLLATE RTRIM))<=((((rt1.c0) IS FALSE), ((rt1.c4) BETWEEN (t0.c1) AND (rt1.c0)), ((((t0.c0)OR(rt1.c6)))AND(rt1.c3)), ((t0.c1)<<(t0.c2)), ((((((((((rt1.c2)AND(t0.c0)))AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))AND('C')), ((rt1.c6)IS NOT(x'')))))) ORDER BY t0.c2  NULLS FIRST;
SELECT ALL MIN(t0.c1) FROM t0, rt1 WHERE ((((((((((((((t0.c0)AND(t0.c2)))AND(t0.c0)))OR('~&䰖p->S')))AND(t0.c0)), ((((((((((((rt1.c3)AND(t0.c3)))AND(rt1.c3)))AND(t0.c1)))OR(rt1.c6)))OR(t0.c4)))OR(rt1.c2)), ((rt1.c4) NOT NULL), (((rt1.c5, t0.c0, t0.c1, t0.c0)) BETWEEN ((rt1.c1, t0.c4, t0.c4, rt1.c5)) AND ((rt1.c6, rt1.c4, rt1.c4, t0.c2))), ((t0.c3) BETWEEN (t0.c3) AND (rt1.c0)), rt1.c5 COLLATE RTRIM))<=((((rt1.c0) IS FALSE), ((rt1.c4) BETWEEN (t0.c1) AND (rt1.c0)), ((((t0.c0)OR(rt1.c6)))AND(rt1.c3)), ((t0.c1)<<(t0.c2)), ((((((((((rt1.c2)AND(t0.c0)))AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))AND('C')), ((rt1.c6)IS NOT(x''))))))AND(NULL))) ORDER BY t0.c2  NULLS FIRST INTERSECT SELECT MIN(t0.c1) FROM t0, rt1 WHERE ('-2046345727') ORDER BY t0.c2  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (NULL);
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CASE (~ (t0.c4))  WHEN (t0.c3 IN ()) THEN 1419810518 ELSE ((t0.c0) BETWEEN (-1832296426) AND (t0.c1)) END  NULLS FIRST, ((0.4514161172983454 COLLATE NOCASE)>=(((0.8143859891652997) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (NULL);
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CASE (~ (t0.c4))  WHEN (t0.c3 IN ()) THEN 1419810518 ELSE ((t0.c0) BETWEEN (-1832296426) AND (t0.c1)) END  NULLS FIRST, ((0.4514161172983454 COLLATE NOCASE)>=(((0.8143859891652997) NOT NULL)))  NULLS LAST;
SELECT MAX(t0.c4) FROM t0 WHERE (t0.c4) ORDER BY (((t0.c3, t0.c0, t0.c4)) NOT BETWEEN ((CAST(t0.c2 AS INTEGER), ((t0.c3) IS FALSE), t0.c2 COLLATE BINARY)) AND ((((t0.c2)>(t0.c0)), ((t0.c2) BETWEEN (t0.c4) AND (t0.c1)), 0.4873475152453519)))  NULLS LAST, t0.c1 DESC  NULLS LAST;
SELECT ALL MAX(t0.c4) FROM t0 WHERE (((t0.c4)AND((- ((~ (x''))))))) ORDER BY (((t0.c3, t0.c0, t0.c4)) NOT BETWEEN ((CAST(t0.c2 AS INTEGER), ((t0.c3) IS FALSE), t0.c2 COLLATE BINARY)) AND ((((t0.c2)>(t0.c0)), ((t0.c2) BETWEEN (t0.c4) AND (t0.c1)), 0.4873475152453519)))  NULLS LAST, t0.c1 DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((NOT (rt1.c3))) BETWEEN (((((rt1.c6)AND(rt1.c3)))AND(rt1.c6))) AND (CAST(rt1.c5 AS REAL))));
SELECT * FROM rt1 WHERE ((((((NOT (rt1.c3))) BETWEEN (((((rt1.c6)AND(rt1.c3)))AND(rt1.c6))) AND (CAST(rt1.c5 AS REAL))))AND((((((rt1.c2))<=((rt1.c2))))OR(CAST(rt1.c2 AS TEXT))))));
SELECT ALL * FROM rt1 WHERE ((((NOT (rt1.c3))) BETWEEN (((((rt1.c6)AND(rt1.c3)))AND(rt1.c6))) AND (CAST(rt1.c5 AS REAL))));
SELECT * FROM rt1 WHERE ((((((NOT (rt1.c3))) BETWEEN (((((rt1.c6)AND(rt1.c3)))AND(rt1.c6))) AND (CAST(rt1.c5 AS REAL))))AND((((((rt1.c2))<=((rt1.c2))))OR(CAST(rt1.c2 AS TEXT))))));
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON NULL WHERE (((t0.c2 IN (t0.c1)) IN (rt1.c4 COLLATE NOCASE))) ORDER BY ((rt1.c4) BETWEEN ((- (t0.c3))) AND (((t0.c0) BETWEEN (t0.c1) AND (rt1.c0)))), ((t0.c3)&(((rt1.c6) IS TRUE)));
SELECT ALL * FROM rt1 INNER JOIN t0 ON NULL WHERE (((t0.c2 IN (t0.c1)) IN (rt1.c4 COLLATE NOCASE))) ORDER BY ((((rt1.c4)+(t0.c2)))AND((rt1.c0 IN (t0.c1))))  NULLS FIRST;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON NULL WHERE (((t0.c2 IN (t0.c1)) IN (rt1.c4 COLLATE NOCASE))) ORDER BY ((rt1.c4) BETWEEN ((- (t0.c3))) AND (((t0.c0) BETWEEN (t0.c1) AND (rt1.c0)))), ((t0.c3)&(((rt1.c6) IS TRUE)));
SELECT ALL * FROM rt1 INNER JOIN t0 ON NULL WHERE (((t0.c2 IN (t0.c1)) IN (rt1.c4 COLLATE NOCASE))) ORDER BY ((((rt1.c4)+(t0.c2)))AND((rt1.c0 IN (t0.c1))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c3 COLLATE RTRIM)));
SELECT * FROM rt1 WHERE ((((+ (rt1.c3 COLLATE RTRIM)))AND('-1560087994'))) LIMIT 1;
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c3 COLLATE RTRIM)));
SELECT * FROM rt1 WHERE ((((+ (rt1.c3 COLLATE RTRIM)))AND('-1560087994'))) LIMIT 1;
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((rt1.c2 COLLATE RTRIM)<<(CASE rt1.c6  WHEN 2010798651 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c1 END)) DESC, CAST((0.8898304190833007 IN ()) AS BLOB) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (((rt1.c1)AND(json_object((+ (rt1.c1)), ((((((((rt1.c2)AND(rt1.c3)))OR('4')))AND(rt1.c5)))AND(rt1.c2)))))) ORDER BY (+ ((rt1.c1 IN (rt1.c6)))) ASC  NULLS LAST, (((rt1.c3, rt1.c2, rt1.c5)) BETWEEN ((rt1.c2 COLLATE BINARY, (NOT (rt1.c5)), ',')) AND ((((rt1.c0)&(rt1.c2)), NULL, ((((((x'')AND(rt1.c6)))AND(rt1.c1)))OR(rt1.c2)))));
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((rt1.c2 COLLATE RTRIM)<<(CASE rt1.c6  WHEN 2010798651 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c1 END)) DESC, CAST((0.8898304190833007 IN ()) AS BLOB) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (((rt1.c1)AND(json_object((+ (rt1.c1)), ((((((((rt1.c2)AND(rt1.c3)))OR('4')))AND(rt1.c5)))AND(rt1.c2)))))) ORDER BY (+ ((rt1.c1 IN (rt1.c6)))) ASC  NULLS LAST, (((rt1.c3, rt1.c2, rt1.c5)) BETWEEN ((rt1.c2 COLLATE BINARY, (NOT (rt1.c5)), ',')) AND ((((rt1.c0)&(rt1.c2)), NULL, ((((((x'')AND(rt1.c6)))AND(rt1.c1)))OR(rt1.c2)))));
SELECT * FROM t0, rt1 WHERE ((((('Q')==(t0.c2))) IS TRUE));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((('Q')==(t0.c2))) IS TRUE)) ORDER BY CASE CAST(rt1.c6 AS BLOB)  WHEN rt1.c0 THEN (((t0.c4, rt1.c1)) BETWEEN (('J', t0.c2)) AND ((rt1.c6, rt1.c3))) WHEN CASE t0.c0  WHEN t0.c1 THEN rt1.c4 WHEN t0.c2 THEN '8?qs?nc[' END THEN ((t0.c2)==(x'6bb2')) WHEN ((t0.c4)OR(rt1.c0)) THEN ((0.9199469677188776) ISNULL) END  NULLS FIRST, (+ (((t0.c0)==(t0.c1)))) DESC LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (QUOTE((t0.c4 IN ()))) ORDER BY CASE CAST(rt1.c6 AS BLOB)  WHEN rt1.c0 THEN (((t0.c4, rt1.c1)) BETWEEN (('J', t0.c2)) AND ((rt1.c6, rt1.c3))) WHEN CASE t0.c0  WHEN t0.c1 THEN rt1.c4 WHEN t0.c2 THEN '8?qs?nc[' END THEN ((t0.c2)==(x'6bb2')) WHEN ((t0.c4)OR(rt1.c0)) THEN ((0.9199469677188776) ISNULL) END  NULLS FIRST, (+ (((t0.c0)==(t0.c1)))) DESC LIMIT 2;
SELECT * FROM t0, rt1 WHERE ((((('Q')==(t0.c2))) IS TRUE));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((('Q')==(t0.c2))) IS TRUE)) ORDER BY CASE CAST(rt1.c6 AS BLOB)  WHEN rt1.c0 THEN (((t0.c4, rt1.c1)) BETWEEN (('J', t0.c2)) AND ((rt1.c6, rt1.c3))) WHEN CASE t0.c0  WHEN t0.c1 THEN rt1.c4 WHEN t0.c2 THEN '8?qs?nc[' END THEN ((t0.c2)==(x'6bb2')) WHEN ((t0.c4)OR(rt1.c0)) THEN ((0.9199469677188776) ISNULL) END  NULLS FIRST, (+ (((t0.c0)==(t0.c1)))) DESC LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (QUOTE((t0.c4 IN ()))) ORDER BY CASE CAST(rt1.c6 AS BLOB)  WHEN rt1.c0 THEN (((t0.c4, rt1.c1)) BETWEEN (('J', t0.c2)) AND ((rt1.c6, rt1.c3))) WHEN CASE t0.c0  WHEN t0.c1 THEN rt1.c4 WHEN t0.c2 THEN '8?qs?nc[' END THEN ((t0.c2)==(x'6bb2')) WHEN ((t0.c4)OR(rt1.c0)) THEN ((0.9199469677188776) ISNULL) END  NULLS FIRST, (+ (((t0.c0)==(t0.c1)))) DESC LIMIT 2;
SELECT ALL * FROM rt1 WHERE ((((rt1.c2, rt1.c6, rt1.c3)) BETWEEN ((x'918ed1', (rt1.c2 IN (NULL)), 'MTS辔Q>')) AND ((rt1.c6 COLLATE BINARY, rt1.c4 COLLATE NOCASE, (((rt1.c6, rt1.c5, rt1.c1)) BETWEEN ((rt1.c4, rt1.c0, rt1.c5)) AND ((rt1.c2, 1.45113057E8, rt1.c2)))))));
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c2, rt1.c6, rt1.c3)) BETWEEN ((x'918ed1', (rt1.c2 IN (NULL)), 'MTS辔Q>')) AND ((rt1.c6 COLLATE BINARY, rt1.c4 COLLATE NOCASE, (((rt1.c6, rt1.c5, rt1.c1)) BETWEEN ((rt1.c4, rt1.c0, rt1.c5)) AND ((rt1.c2, 1.45113057E8, rt1.c2))))))) ORDER BY (((rt1.c3 IN (rt1.c4, rt1.c2)))LIKE(rt1.c3)), ((COALESCE(rt1.c6, rt1.c3, rt1.c6))<(((rt1.c5) IS TRUE))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (NULL) ORDER BY (((rt1.c3 IN (rt1.c4, rt1.c2)))LIKE(rt1.c3)), ((COALESCE(rt1.c6, rt1.c3, rt1.c6))<(((rt1.c5) IS TRUE))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c2, rt1.c6, rt1.c3)) BETWEEN ((x'918ed1', (rt1.c2 IN (NULL)), 'MTS辔Q>')) AND ((rt1.c6 COLLATE BINARY, rt1.c4 COLLATE NOCASE, (((rt1.c6, rt1.c5, rt1.c1)) BETWEEN ((rt1.c4, rt1.c0, rt1.c5)) AND ((rt1.c2, 1.45113057E8, rt1.c2)))))));
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c2, rt1.c6, rt1.c3)) BETWEEN ((x'918ed1', (rt1.c2 IN (NULL)), 'MTS辔Q>')) AND ((rt1.c6 COLLATE BINARY, rt1.c4 COLLATE NOCASE, (((rt1.c6, rt1.c5, rt1.c1)) BETWEEN ((rt1.c4, rt1.c0, rt1.c5)) AND ((rt1.c2, 1.45113057E8, rt1.c2))))))) ORDER BY (((rt1.c3 IN (rt1.c4, rt1.c2)))LIKE(rt1.c3)), ((COALESCE(rt1.c6, rt1.c3, rt1.c6))<(((rt1.c5) IS TRUE))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (NULL) ORDER BY (((rt1.c3 IN (rt1.c4, rt1.c2)))LIKE(rt1.c3)), ((COALESCE(rt1.c6, rt1.c3, rt1.c6))<(((rt1.c5) IS TRUE))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD(DISTINCT rt1.c2 COLLATE RTRIM, CAST(rt1.c3 AS BLOB))) ORDER BY ((((((((((rt1.c5)AND(x'')))AND(rt1.c3)))AND(rt1.c6)))AND(rt1.c3)))AND(rt1.c0)) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (((LIKELIHOOD(DISTINCT rt1.c2 COLLATE RTRIM, CAST(rt1.c3 AS BLOB)))AND(((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)))LIKE((((rt1.c0))<=((rt1.c4)))))))) ORDER BY CASE WHEN (~ (rt1.c5)) THEN CAST(rt1.c5 AS BLOB) WHEN 'LUS' THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c3 END WHEN ((rt1.c3)||(0.013227564531270164)) THEN IFNULL(rt1.c3, rt1.c1) ELSE x'f0' END ASC  NULLS FIRST, ((((((((((((((rt1.c5)OR(rt1.c6)))AND(rt1.c4)))OR(rt1.c1)))AND(rt1.c6)))OR(rt1.c2)))AND(((((((((((rt1.c6)OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c5)))AND(rt1.c3)))AND(rt1.c2)))))AND(rt1.c5 COLLATE NOCASE))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL * FROM rt1 WHERE (DATE(((rt1.c6)>(rt1.c2)), ((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c0)), ((rt1.c2) NOT NULL), ((982699382) ISNULL), ((NULL) NOT NULL), rt1.c6)) ORDER BY CASE WHEN (~ (rt1.c5)) THEN CAST(rt1.c5 AS BLOB) WHEN 'LUS' THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c3 END WHEN ((rt1.c3)||(0.013227564531270164)) THEN IFNULL(rt1.c3, rt1.c1) ELSE x'f0' END ASC  NULLS FIRST, ((((((((((((((rt1.c5)OR(rt1.c6)))AND(rt1.c4)))OR(rt1.c1)))AND(rt1.c6)))OR(rt1.c2)))AND(((((((((((rt1.c6)OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c5)))AND(rt1.c3)))AND(rt1.c2)))))AND(rt1.c5 COLLATE NOCASE))  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD(DISTINCT rt1.c2 COLLATE RTRIM, CAST(rt1.c3 AS BLOB))) ORDER BY ((((((((((rt1.c5)AND(x'')))AND(rt1.c3)))AND(rt1.c6)))AND(rt1.c3)))AND(rt1.c0)) DESC  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE ((((((t0.c2)OR(t0.c0)))AND(t0.c2)) IN (t0.c4 COLLATE RTRIM, (((t0.c1, t0.c3, t0.c0, t0.c1)) NOT BETWEEN ((t0.c3, t0.c1, t0.c0, t0.c2)) AND ((t0.c0, 'q', t0.c3, t0.c4)))))) ORDER BY CASE WHEN ((t0.c3) ISNULL) THEN t0.c0 ELSE ((t0.c2)<(2032118748)) END, (((t0.c4)>=(t0.c0)) IN ()) ASC, CAST(NULLIF(t0.c4, t0.c3) AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((((t0.c2)OR(t0.c0)))AND(t0.c2)) IN (t0.c4 COLLATE RTRIM)))AND(CAST(NULL AS NUMERIC)))) ORDER BY CASE WHEN ((t0.c3) ISNULL) THEN t0.c0 ELSE ((t0.c2)<(2032118748)) END, (((t0.c4)>=(t0.c0)) IN ()) ASC, CAST(NULLIF(t0.c4, t0.c3) AS NUMERIC) ASC  NULLS FIRST INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c1) ORDER BY CASE WHEN ((t0.c3) ISNULL) THEN t0.c0 ELSE ((t0.c2)<(2032118748)) END, (((t0.c4)>=(t0.c0)) IN ()) ASC, CAST(NULLIF(t0.c4, t0.c3) AS NUMERIC) ASC  NULLS FIRST;
SELECT MIN(rt1.c5) FROM rt1 WHERE ((NOT (((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c5)))OR(rt1.c6)))OR(rt1.c4)))OR(rt1.c3)))OR(rt1.c6))))) ORDER BY ((((rt1.c5)GLOB(rt1.c5)))IS(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1)))) DESC  NULLS FIRST, ((rt1.c1 COLLATE NOCASE) NOT NULL)  NULLS LAST;
SELECT MIN(rt1.c5) FROM rt1 WHERE ((NOT (((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c5)))OR(rt1.c6)))OR(rt1.c4)))OR(rt1.c3)))OR(rt1.c6))))) ORDER BY ((((rt1.c5)GLOB(rt1.c5)))IS(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1)))) DESC  NULLS FIRST, ((rt1.c1 COLLATE NOCASE) NOT NULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))AND((t0.c3 IN ()))))AND(((t0.c4)<(t0.c4)))))AND(((t0.c3)>>(t0.c1)))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))AND((t0.c3 IN ()))))AND(((t0.c4)<(t0.c4)))))AND(((t0.c3)>>(t0.c1))))) LIMIT 1 INTERSECT SELECT * FROM t0 WHERE ((((t0.c1 IN ()))|(CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END))) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (((((((((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))AND((t0.c3 IN ()))))AND(((t0.c4)<(t0.c4)))))AND(((t0.c3)>>(t0.c1)))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))AND((t0.c3 IN ()))))AND(((t0.c4)<(t0.c4)))))AND(((t0.c3)>>(t0.c1))))) LIMIT 1 INTERSECT SELECT * FROM t0 WHERE ((((t0.c1 IN ()))|(CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END))) LIMIT 0x1;
SELECT ALL MAX(rt1.c5) FROM t0, rt1 WHERE ((~ (rt1.c5)) COLLATE NOCASE) ORDER BY (((t0.c2)) BETWEEN ((((rt1.c2) IS FALSE))) AND ((((rt1.c6) NOT BETWEEN (t0.c1) AND (rt1.c6))))) DESC  NULLS LAST;
SELECT MAX(rt1.c5) FROM t0, rt1 WHERE ((~ (rt1.c5)) COLLATE NOCASE) ORDER BY CAST((((rt1.c4, rt1.c3)) BETWEEN ((t0.c2, rt1.c3)) AND ((rt1.c3, t0.c0))) AS REAL), rt1.c3;
SELECT ALL * FROM rt1, t0 WHERE (TRIM((((rt1.c6, t0.c0))>=(('T', t0.c4))), t0.c3)) ORDER BY ((rt1.c1)&(t0.c1)) COLLATE NOCASE  NULLS LAST, ((((rt1.c3) NOTNULL)) NOTNULL)  NULLS FIRST, CASE CASE 0.6392266689863408  WHEN rt1.c0 THEN rt1.c4 END  WHEN ((((t0.c1)AND(rt1.c1)))OR(rt1.c2)) THEN CASE WHEN 0.045390897871673164 THEN rt1.c2 ELSE rt1.c3 END WHEN LOWER(DISTINCT t0.c0) THEN t0.c0 COLLATE BINARY ELSE LIKELY(t0.c3) END DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (TRIM((((rt1.c6, t0.c0))>=(('T', t0.c4))), t0.c3)) ORDER BY ((rt1.c1)&(t0.c1)) COLLATE NOCASE  NULLS LAST, ((((rt1.c3) NOTNULL)) NOTNULL)  NULLS FIRST, CASE CASE 0.6392266689863408  WHEN rt1.c0 THEN rt1.c4 END  WHEN ((((t0.c1)AND(rt1.c1)))OR(rt1.c2)) THEN CASE WHEN 0.045390897871673164 THEN rt1.c2 ELSE rt1.c3 END WHEN LOWER(DISTINCT t0.c0) THEN t0.c0 COLLATE BINARY ELSE LIKELY(t0.c3) END DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT * FROM rt1, t0 WHERE ((- (((t0.c2)IS NOT(rt1.c1))))) ORDER BY ((rt1.c1)&(t0.c1)) COLLATE NOCASE  NULLS LAST, ((((rt1.c3) NOTNULL)) NOTNULL)  NULLS FIRST, CASE CASE 0.6392266689863408  WHEN rt1.c0 THEN rt1.c4 END  WHEN ((((t0.c1)AND(rt1.c1)))OR(rt1.c2)) THEN CASE WHEN 0.045390897871673164 THEN rt1.c2 ELSE rt1.c3 END WHEN LOWER(DISTINCT t0.c0) THEN t0.c0 COLLATE BINARY ELSE LIKELY(t0.c3) END DESC  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM rt1, t0 WHERE (TRIM((((rt1.c6, t0.c0))>=(('T', t0.c4))), t0.c3)) ORDER BY ((rt1.c1)&(t0.c1)) COLLATE NOCASE  NULLS LAST, ((((rt1.c3) NOTNULL)) NOTNULL)  NULLS FIRST, CASE CASE 0.6392266689863408  WHEN rt1.c0 THEN rt1.c4 END  WHEN ((((t0.c1)AND(rt1.c1)))OR(rt1.c2)) THEN CASE WHEN 0.045390897871673164 THEN rt1.c2 ELSE rt1.c3 END WHEN LOWER(DISTINCT t0.c0) THEN t0.c0 COLLATE BINARY ELSE LIKELY(t0.c3) END DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (TRIM((((rt1.c6, t0.c0))>=(('T', t0.c4))), t0.c3)) ORDER BY ((rt1.c1)&(t0.c1)) COLLATE NOCASE  NULLS LAST, ((((rt1.c3) NOTNULL)) NOTNULL)  NULLS FIRST, CASE CASE 0.6392266689863408  WHEN rt1.c0 THEN rt1.c4 END  WHEN ((((t0.c1)AND(rt1.c1)))OR(rt1.c2)) THEN CASE WHEN 0.045390897871673164 THEN rt1.c2 ELSE rt1.c3 END WHEN LOWER(DISTINCT t0.c0) THEN t0.c0 COLLATE BINARY ELSE LIKELY(t0.c3) END DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT * FROM rt1, t0 WHERE ((- (((t0.c2)IS NOT(rt1.c1))))) ORDER BY ((rt1.c1)&(t0.c1)) COLLATE NOCASE  NULLS LAST, ((((rt1.c3) NOTNULL)) NOTNULL)  NULLS FIRST, CASE CASE 0.6392266689863408  WHEN rt1.c0 THEN rt1.c4 END  WHEN ((((t0.c1)AND(rt1.c1)))OR(rt1.c2)) THEN CASE WHEN 0.045390897871673164 THEN rt1.c2 ELSE rt1.c3 END WHEN LOWER(DISTINCT t0.c0) THEN t0.c0 COLLATE BINARY ELSE LIKELY(t0.c3) END DESC  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t0 INNER JOIN rt1 ON '-406664688' WHERE (CAST(((rt1.c1) NOT NULL) AS TEXT));
SELECT * FROM t0 INNER JOIN rt1 ON '-406664688' WHERE (((CAST(((rt1.c1) NOT NULL) AS TEXT))AND((((t0.c1 IN ())) NOT NULL)))) LIMIT 0;
SELECT ALL * FROM t0 INNER JOIN rt1 ON '-406664688' WHERE (CAST(((rt1.c1) NOT NULL) AS TEXT));
SELECT * FROM t0 INNER JOIN rt1 ON '-406664688' WHERE (((CAST(((rt1.c1) NOT NULL) AS TEXT))AND((((t0.c1 IN ())) NOT NULL)))) LIMIT 0;
SELECT COUNT(*) FROM t0, rt1 NOT INDEXED WHERE (((LIKELIHOOD(rt1.c5, rt1.c3)) ISNULL)) ORDER BY (((NULL)) NOT BETWEEN (((- (rt1.c4)))) AND ((CAST(rt1.c2 AS REAL))))  NULLS FIRST, ((((((rt1.c0)OR(rt1.c2)))OR(rt1.c6))) BETWEEN (TRIM(rt1.c1)) AND (((t0.c3) NOT BETWEEN (t0.c2) AND (rt1.c5))));
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((LIKELIHOOD(rt1.c5, rt1.c3)) ISNULL)) ORDER BY x'' ASC, rt1.c1 ASC, t0.c0  NULLS LAST;
SELECT * FROM rt1, t0 WHERE ((((rt1.c6, rt1.c3, t0.c4)) BETWEEN ((rt1.c5, rt1.c3, t0.c4)) AND ((rt1.c1, t0.c0, t0.c1))) COLLATE BINARY);
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((rt1.c6, rt1.c3, t0.c4)) BETWEEN ((rt1.c5, rt1.c3, t0.c4)) AND ((rt1.c1, t0.c0, t0.c1))) COLLATE BINARY)AND(((((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c2)))-(((((((t0.c2)OR(t0.c2)))AND(t0.c3)))AND(t0.c4))))))) ORDER BY TRIM(DISTINCT RTRIM(t0.c4)) DESC, CAST(((rt1.c2)*(rt1.c5)) AS TEXT) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c1)GLOB(t0.c0)))IS NOT(((0.4428199326178971) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY TRIM(DISTINCT RTRIM(t0.c4)) DESC, CAST(((rt1.c2)*(rt1.c5)) AS TEXT);
SELECT * FROM rt1, t0 WHERE ((((rt1.c6, rt1.c3, t0.c4)) BETWEEN ((rt1.c5, rt1.c3, t0.c4)) AND ((rt1.c1, t0.c0, t0.c1))) COLLATE BINARY);
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((rt1.c6, rt1.c3, t0.c4)) BETWEEN ((rt1.c5, rt1.c3, t0.c4)) AND ((rt1.c1, t0.c0, t0.c1))) COLLATE BINARY)AND(((((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c2)))-(((((((t0.c2)OR(t0.c2)))AND(t0.c3)))AND(t0.c4))))))) ORDER BY TRIM(DISTINCT RTRIM(t0.c4)) DESC, CAST(((rt1.c2)*(rt1.c5)) AS TEXT) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c1)GLOB(t0.c0)))IS NOT(((0.4428199326178971) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY TRIM(DISTINCT RTRIM(t0.c4)) DESC, CAST(((rt1.c2)*(rt1.c5)) AS TEXT);
SELECT * FROM rt1 WHERE (SQLITE_VERSION()) ORDER BY rt1.c6;
SELECT * FROM rt1 WHERE (((SQLITE_VERSION())AND(((CASE '603733417'  WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c6 ELSE rt1.c6 END) NOT BETWEEN ((NOT (rt1.c3))) AND (NULL))))) ORDER BY rt1.c0  NULLS LAST LIMIT 0X1 INTERSECT SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY rt1.c0  NULLS LAST LIMIT 0X1;
SELECT * FROM rt1 WHERE (SQLITE_VERSION()) ORDER BY rt1.c6;
SELECT * FROM rt1 WHERE (((SQLITE_VERSION())AND(((CASE '603733417'  WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c6 ELSE rt1.c6 END) NOT BETWEEN ((NOT (rt1.c3))) AND (NULL))))) ORDER BY rt1.c0  NULLS LAST LIMIT 0X1 INTERSECT SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY rt1.c0  NULLS LAST LIMIT 0X1;
SELECT COUNT(*) FROM t0 CROSS JOIN rt1 ON CAST(((0.7020918382079648) BETWEEN (rt1.c2) AND (rt1.c0)) AS NUMERIC) WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON CAST(((0.7020918382079648) BETWEEN (rt1.c2) AND (rt1.c0)) AS NUMERIC) WHERE (((rt1.c1)AND((NULL IN ())))) LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON CAST(((0.7020918382079648) BETWEEN (rt1.c2) AND (rt1.c0)) AS NUMERIC) WHERE (json_object((rt1.c1 IN (rt1.c3)), (- (t0.c4)), TRIM(DISTINCT rt1.c1, rt1.c4), (('C')+(rt1.c2)))) LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c1)>(rt1.c2)) IN ())) ORDER BY CASE WHEN rt1.c2 THEN ((((t0.c4)AND(t0.c3)))OR(rt1.c6)) WHEN rt1.c0 COLLATE NOCASE THEN rt1.c5 COLLATE NOCASE WHEN CASE WHEN rt1.c2 THEN t0.c4 WHEN rt1.c6 THEN rt1.c1 ELSE rt1.c1 END THEN ((t0.c0) IS TRUE) END DESC  NULLS FIRST, 0.03885044285126693 ASC;
SELECT * FROM rt1, t0 WHERE ((((t0.c1)>(rt1.c2)) IN ())) ORDER BY CASE WHEN rt1.c2 THEN ((((t0.c4)AND(t0.c3)))OR(rt1.c6)) WHEN rt1.c0 COLLATE NOCASE THEN rt1.c5 COLLATE NOCASE WHEN CASE WHEN rt1.c2 THEN t0.c4 WHEN rt1.c6 THEN rt1.c1 ELSE rt1.c1 END THEN ((t0.c0) IS TRUE) END DESC  NULLS FIRST, 0.03885044285126693 ASC LIMIT 0x0 INTERSECT SELECT * FROM rt1, t0 WHERE (NULL) ORDER BY CASE WHEN rt1.c2 THEN ((((t0.c4)AND(t0.c3)))OR(rt1.c6)) WHEN rt1.c0 COLLATE NOCASE THEN rt1.c5 COLLATE NOCASE WHEN CASE WHEN rt1.c2 THEN t0.c4 WHEN rt1.c6 THEN rt1.c1 ELSE rt1.c1 END THEN ((t0.c0) IS TRUE) END DESC  NULLS FIRST, 0.03885044285126693 ASC LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c1)>(rt1.c2)) IN ())) ORDER BY CASE WHEN rt1.c2 THEN ((((t0.c4)AND(t0.c3)))OR(rt1.c6)) WHEN rt1.c0 COLLATE NOCASE THEN rt1.c5 COLLATE NOCASE WHEN CASE WHEN rt1.c2 THEN t0.c4 WHEN rt1.c6 THEN rt1.c1 ELSE rt1.c1 END THEN ((t0.c0) IS TRUE) END DESC  NULLS FIRST, 0.03885044285126693 ASC;
SELECT * FROM rt1, t0 WHERE ((((t0.c1)>(rt1.c2)) IN ())) ORDER BY CASE WHEN rt1.c2 THEN ((((t0.c4)AND(t0.c3)))OR(rt1.c6)) WHEN rt1.c0 COLLATE NOCASE THEN rt1.c5 COLLATE NOCASE WHEN CASE WHEN rt1.c2 THEN t0.c4 WHEN rt1.c6 THEN rt1.c1 ELSE rt1.c1 END THEN ((t0.c0) IS TRUE) END DESC  NULLS FIRST, 0.03885044285126693 ASC LIMIT 0x0 INTERSECT SELECT * FROM rt1, t0 WHERE (NULL) ORDER BY CASE WHEN rt1.c2 THEN ((((t0.c4)AND(t0.c3)))OR(rt1.c6)) WHEN rt1.c0 COLLATE NOCASE THEN rt1.c5 COLLATE NOCASE WHEN CASE WHEN rt1.c2 THEN t0.c4 WHEN rt1.c6 THEN rt1.c1 ELSE rt1.c1 END THEN ((t0.c0) IS TRUE) END DESC  NULLS FIRST, 0.03885044285126693 ASC LIMIT 0;
SELECT MAX(rt1.c0) FROM rt1 WHERE (NULL) ORDER BY CASE ((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c5))  WHEN (rt1.c3 IN (x'', rt1.c6)) THEN (- (rt1.c3)) WHEN CAST(rt1.c2 AS INTEGER) THEN TYPEOF(rt1.c4) WHEN (~ (rt1.c4)) THEN json_patch(-1050996115, rt1.c4) END;
SELECT MAX(rt1.c0) FROM rt1 WHERE (((NULL)AND((CASE WHEN rt1.c1 THEN rt1.c6 END IN ((rt1.c0 IN (rt1.c4)), ((rt1.c6)|(')6'))))))) ORDER BY CASE ((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c5))  WHEN (rt1.c3 IN (x'', rt1.c6)) THEN (- (rt1.c3)) WHEN CAST(rt1.c2 AS INTEGER) THEN TYPEOF(rt1.c4) WHEN (~ (rt1.c4)) THEN json_patch(-1050996115, rt1.c4) END;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (x'83');
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (x'83') LIMIT 0 INTERSECT SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (((t0.c3)OR(COALESCE(DISTINCT rt1.c2, t0.c1, rt1.c6, rt1.c6)))) LIMIT 0;
SELECT * FROM t0 WHERE ((((((x'b4bb', t0.c1))<((t0.c0, t0.c4))))!=((t0.c1 IN (t0.c3, t0.c1, NULL)))));
SELECT ALL * FROM t0 WHERE ((((((x'b4bb', t0.c1))<((t0.c0, t0.c4))))<>((t0.c1 IN (t0.c3))))) LIMIT 2;
SELECT * FROM t0 WHERE ((((((x'b4bb', t0.c1))<((t0.c0, t0.c4))))!=((t0.c1 IN (t0.c3, t0.c1, NULL)))));
SELECT ALL * FROM t0 WHERE ((((((x'b4bb', t0.c1))<((t0.c0, t0.c4))))<>((t0.c1 IN (t0.c3))))) LIMIT 2;
SELECT ALL MAX(rt1.c0) FROM rt1, t0 WHERE (0x3716fa8e COLLATE RTRIM) ORDER BY ((((((rt1.c3)AND(rt1.c3)))AND(rt1.c1)))%((- (t0.c4))));
SELECT DISTINCT MAX(rt1.c0) FROM rt1, t0 WHERE (((924252814 COLLATE RTRIM)AND((~ (t0.c0 COLLATE RTRIM))))) ORDER BY CASE WHEN (+ (rt1.c5)) THEN t0.c0 WHEN (((rt1.c3, rt1.c3, rt1.c1)) NOT BETWEEN ((t0.c1, rt1.c6, t0.c2)) AND ((t0.c0, t0.c2, t0.c3))) THEN ((t0.c1)<(rt1.c1)) WHEN CAST(rt1.c5 AS BLOB) THEN ((t0.c4) BETWEEN (t0.c0) AND (rt1.c1)) END  NULLS FIRST, '' DESC  NULLS LAST INTERSECT SELECT DISTINCT MAX(rt1.c0) FROM rt1, t0 WHERE (((((rt1.c1)&(rt1.c5)))OR((- (t0.c0))))) ORDER BY CASE WHEN (+ (rt1.c5)) THEN t0.c0 WHEN (((rt1.c3, rt1.c3, rt1.c1)) NOT BETWEEN ((t0.c1, rt1.c6, t0.c2)) AND ((t0.c0, t0.c2, t0.c3))) THEN ((t0.c1)<(rt1.c1)) WHEN CAST(rt1.c5 AS BLOB) THEN ((t0.c4) BETWEEN (t0.c0) AND (rt1.c1)) END  NULLS FIRST, '' DESC  NULLS LAST;
SELECT ALL MAX(t0.c2) FROM rt1 NATURAL JOIN t0 WHERE (((rt1.c6) BETWEEN (CASE rt1.c5  WHEN rt1.c1 THEN t0.c2 ELSE rt1.c1 END) AND (((((((((t0.c1)AND(t0.c1)))AND(rt1.c0)))AND(t0.c0)))OR(rt1.c3))))) ORDER BY x'cf'  NULLS FIRST, CASE WHEN x'ae' THEN ((rt1.c1)||(rt1.c5)) WHEN LIKELY(DISTINCT t0.c1) THEN (((rt1.c2, t0.c4, rt1.c3, rt1.c2)) NOT BETWEEN ((t0.c1, t0.c1, rt1.c3, '1e500')) AND ((rt1.c6, rt1.c5, rt1.c3, rt1.c2))) WHEN rt1.c1 COLLATE NOCASE THEN ((t0.c0) NOTNULL) ELSE PRINTF(rt1.c0, rt1.c0, t0.c1) END DESC, (((t0.c0)) BETWEEN ((((rt1.c2) IS FALSE))) AND ((((t0.c2)GLOB(t0.c0)))))  NULLS LAST;
SELECT MAX(t0.c2) FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c6) BETWEEN (CASE rt1.c5  WHEN rt1.c1 THEN t0.c2 ELSE rt1.c1 END) AND (((((((((t0.c1)AND(t0.c1)))AND(rt1.c0)))AND(t0.c0)))OR(rt1.c3)))))AND(((0Xffffffff9f56b5ae) IS TRUE)))) ORDER BY (((((((t0.c0)OR(rt1.c2)))OR(rt1.c6)))AND(rt1.c6)) IN (((t0.c0) ISNULL))) DESC, (((((rt1.c5 IN (t0.c1, rt1.c5)))AND((t0.c4 IN ()))))AND(((NULL) NOTNULL))), ((PRINTF(t0.c2, t0.c2)) NOT BETWEEN ((((t0.c1, rt1.c1))<=((rt1.c5, 0.46863995116701584)))) AND (((((((((rt1.c2)OR(t0.c2)))AND(rt1.c5)))OR(t0.c2)))OR(t0.c4))));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (UNLIKELY(CAST(t0.c3 AS INTEGER))) ORDER BY (NOT (t0.c0))  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE (UNLIKELY(CAST(t0.c3 AS INTEGER))) ORDER BY (t0.c0 COLLATE NOCASE IN (t0.c0 COLLATE BINARY)) DESC;
SELECT * FROM rt1, t0 WHERE ((((NOT (rt1.c6))) BETWEEN (((t0.c2)OR(rt1.c6))) AND (((rt1.c2) IS TRUE)))) ORDER BY UPPER(rt1.c1 COLLATE RTRIM) DESC  NULLS LAST, ((CASE WHEN '4+Gf*wf쀻' THEN rt1.c2 ELSE t0.c2 END) ISNULL);
SELECT DISTINCT * FROM rt1, t0 WHERE ((((NOT (rt1.c6))) BETWEEN (((t0.c2)OR(rt1.c6))) AND (((rt1.c2) IS TRUE)))) ORDER BY UPPER(rt1.c1 COLLATE RTRIM) DESC  NULLS LAST, ((CASE WHEN '4+Gf*wf쀻' THEN rt1.c2 ELSE t0.c2 END) ISNULL) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (json_quote(((t0.c2) NOT BETWEEN (rt1.c2) AND (t0.c0)))) ORDER BY UPPER(rt1.c1 COLLATE RTRIM) DESC  NULLS LAST, ((CASE WHEN '4+Gf*wf쀻' THEN rt1.c2 ELSE t0.c2 END) ISNULL);
SELECT * FROM rt1, t0 WHERE ((((NOT (rt1.c6))) BETWEEN (((t0.c2)OR(rt1.c6))) AND (((rt1.c2) IS TRUE)))) ORDER BY UPPER(rt1.c1 COLLATE RTRIM) DESC  NULLS LAST, ((CASE WHEN '4+Gf*wf쀻' THEN rt1.c2 ELSE t0.c2 END) ISNULL);
SELECT DISTINCT * FROM rt1, t0 WHERE ((((NOT (rt1.c6))) BETWEEN (((t0.c2)OR(rt1.c6))) AND (((rt1.c2) IS TRUE)))) ORDER BY UPPER(rt1.c1 COLLATE RTRIM) DESC  NULLS LAST, ((CASE WHEN '4+Gf*wf쀻' THEN rt1.c2 ELSE t0.c2 END) ISNULL) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (json_quote(((t0.c2) NOT BETWEEN (rt1.c2) AND (t0.c0)))) ORDER BY UPPER(rt1.c1 COLLATE RTRIM) DESC  NULLS LAST, ((CASE WHEN '4+Gf*wf쀻' THEN rt1.c2 ELSE t0.c2 END) ISNULL);
SELECT ALL MIN(rt1.c3) FROM rt1 WHERE ((NOT (json(rt1.c6))));
SELECT MIN(rt1.c3) FROM rt1 WHERE ((((NOT (json(rt1.c6))))AND(((((rt1.c5) NOT BETWEEN (0.7188659041201336) AND (rt1.c2)))|((rt1.c6 IN (rt1.c4))))))) INTERSECT SELECT MIN(rt1.c3) FROM rt1 WHERE (((((rt1.c6)&(rt1.c2)))OR(((rt1.c6)OR(rt1.c6)))));
SELECT ALL MIN(rt1.c4) FROM t0 NOT INDEXED, rt1 WHERE ((((rt1.c3, t0.c1)) NOT BETWEEN ((((rt1.c0) BETWEEN ('') AND (rt1.c3)), ((t0.c0)>>(rt1.c1)))) AND ((t0.c4 COLLATE NOCASE, rt1.c3 COLLATE BINARY))));
SELECT ALL MIN(rt1.c4) FROM t0, rt1 WHERE ((((((rt1.c3, t0.c1)) NOT BETWEEN ((((rt1.c0) BETWEEN ('') AND (rt1.c3)), ((t0.c0)>>(rt1.c1)))) AND ((t0.c4 COLLATE NOCASE, rt1.c3 COLLATE BINARY))))AND(((((rt1.c5)<<(rt1.c4)))GLOB((rt1.c5 IN (x'be49'))))))) INTERSECT SELECT ALL MIN(rt1.c4) FROM t0, rt1 WHERE (x'98');
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY (rt1.c1 IN ()) COLLATE RTRIM DESC;
SELECT * FROM rt1 WHERE (((rt1.c3)AND(0.7208732025697976))) ORDER BY LOWER(((rt1.c6) BETWEEN (rt1.c0) AND (0.37381890778908233))) ASC INTERSECT SELECT * FROM rt1 WHERE ((rt1.c4 COLLATE BINARY IN (((rt1.c3) IS FALSE)))) ORDER BY LOWER(((rt1.c6) BETWEEN (rt1.c0) AND (0.37381890778908233))) ASC;
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY (rt1.c1 IN ()) COLLATE RTRIM DESC;
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c0)AND(rt1.c2)) IN (CAST(rt1.c0 AS NUMERIC)))) ORDER BY (((((t0.c0)OR(t0.c1)))OR(t0.c1)) IN (t0.c0)) DESC  NULLS LAST, CASE WHEN x'7cb3' THEN ((('0.153993710766271', t0.c0, rt1.c2, t0.c2, rt1.c6, t0.c3))!=((rt1.c0, t0.c1, rt1.c6, rt1.c6, rt1.c2, rt1.c1))) ELSE ((t0.c3)LIKE(rt1.c2)) END  NULLS FIRST, ((CASE rt1.c0  WHEN t0.c4 THEN rt1.c1 ELSE t0.c3 END)==((+ (rt1.c0))));
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c0)AND(rt1.c2)) IN (CAST(rt1.c0 AS NUMERIC)))) ORDER BY (((((t0.c0)OR(t0.c1)))OR(t0.c1)) IN (t0.c0)) DESC  NULLS LAST, CASE WHEN x'7cb3' THEN ((('0.153993710766271', t0.c0, rt1.c2, t0.c2, rt1.c6, t0.c3))!=((rt1.c0, t0.c1, rt1.c6, rt1.c6, rt1.c2, rt1.c1))) ELSE ((t0.c3)LIKE(rt1.c2)) END  NULLS FIRST, ((CASE rt1.c0  WHEN t0.c4 THEN rt1.c1 ELSE t0.c3 END)==((+ (rt1.c0))));
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c0)AND(rt1.c2)) IN (CAST(rt1.c0 AS NUMERIC)))) ORDER BY (((((t0.c0)OR(t0.c1)))OR(t0.c1)) IN (t0.c0)) DESC  NULLS LAST, CASE WHEN x'7cb3' THEN ((('0.153993710766271', t0.c0, rt1.c2, t0.c2, rt1.c6, t0.c3))!=((rt1.c0, t0.c1, rt1.c6, rt1.c6, rt1.c2, rt1.c1))) ELSE ((t0.c3)LIKE(rt1.c2)) END  NULLS FIRST, ((CASE rt1.c0  WHEN t0.c4 THEN rt1.c1 ELSE t0.c3 END)==((+ (rt1.c0))));
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c0)AND(rt1.c2)) IN (CAST(rt1.c0 AS NUMERIC)))) ORDER BY (((((t0.c0)OR(t0.c1)))OR(t0.c1)) IN (t0.c0)) DESC  NULLS LAST, CASE WHEN x'7cb3' THEN ((('0.153993710766271', t0.c0, rt1.c2, t0.c2, rt1.c6, t0.c3))!=((rt1.c0, t0.c1, rt1.c6, rt1.c6, rt1.c2, rt1.c1))) ELSE ((t0.c3)LIKE(rt1.c2)) END  NULLS FIRST, ((CASE rt1.c0  WHEN t0.c4 THEN rt1.c1 ELSE t0.c3 END)==((+ (rt1.c0))));
SELECT MIN(rt1.c1) FROM rt1 WHERE (((((((rt1.c0 COLLATE NOCASE)OR((rt1.c0 IN ()))))AND(CASE WHEN rt1.c1 THEN x'2b' WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c0 END)))AND((NOT (rt1.c6)))));
SELECT ALL MIN(rt1.c1) FROM rt1 WHERE (((((((((rt1.c0 COLLATE NOCASE)OR((rt1.c0 IN ()))))AND(CASE WHEN rt1.c1 THEN x'2b' WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c0 END)))AND((NOT (rt1.c6)))))AND(((((NULL)AND(rt1.c6)))AND(rt1.c4)) COLLATE RTRIM))) ORDER BY (((CAST(rt1.c0 AS NUMERIC)))<=(((((rt1.c5, x'8c15b6', rt1.c5)) BETWEEN ((rt1.c6, rt1.c4, rt1.c4)) AND ((rt1.c3, rt1.c0, rt1.c1)))))) INTERSECT SELECT ALL MIN(rt1.c1) FROM rt1 WHERE (((((rt1.c3, rt1.c2, rt1.c6, rt1.c2))<=((rt1.c6, rt1.c4, '', rt1.c5))) IN (rt1.c3, ((rt1.c0)&(rt1.c6)), '520384924'))) ORDER BY (((CAST(rt1.c0 AS NUMERIC)))<=(((((rt1.c5, x'8c15b6', rt1.c5)) BETWEEN ((rt1.c6, rt1.c4, rt1.c4)) AND ((rt1.c3, rt1.c0, rt1.c1))))));
SELECT * FROM t0 WHERE ((((t0.c0, t0.c2)) BETWEEN ((json_valid(t0.c2), ((((((((((NULL)OR(t0.c0)))OR(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c3)))) AND ((((t0.c2)|(t0.c3)), ((((((((t0.c1)AND(t0.c4)))OR(t0.c2)))AND(t0.c3)))AND('0.08182845140269956'))))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c2)) BETWEEN ((json_valid(t0.c2), ((((((((((NULL)OR(t0.c0)))OR(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c3)))) AND ((((t0.c2)|(t0.c3)), ((((((((t0.c1)AND(t0.c4)))OR(t0.c2)))AND(t0.c3)))AND('0.08182845140269956'))))))AND(x'b68b'))) ORDER BY ((((((((t0.c2)OR(t0.c1)))AND(t0.c4)))AND(t0.c2))) ISNULL), ((((t0.c4) ISNULL)) ISNULL)  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c3)) COLLATE BINARY) ORDER BY ((((((((t0.c2)OR(t0.c1)))AND(t0.c4)))AND(t0.c2))) ISNULL), ((((t0.c4) ISNULL)) ISNULL)  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c2)) BETWEEN ((json_valid(t0.c2), ((((((((((NULL)OR(t0.c0)))OR(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c3)))) AND ((((t0.c2)|(t0.c3)), ((((((((t0.c1)AND(t0.c4)))OR(t0.c2)))AND(t0.c3)))AND('0.08182845140269956'))))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c2)) BETWEEN ((json_valid(t0.c2), ((((((((((NULL)OR(t0.c0)))OR(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c3)))) AND ((((t0.c2)|(t0.c3)), ((((((((t0.c1)AND(t0.c4)))OR(t0.c2)))AND(t0.c3)))AND('0.08182845140269956'))))))AND(x'b68b'))) ORDER BY ((((((((t0.c2)OR(t0.c1)))AND(t0.c4)))AND(t0.c2))) ISNULL), ((((t0.c4) ISNULL)) ISNULL)  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c3)) COLLATE BINARY) ORDER BY ((((((((t0.c2)OR(t0.c1)))AND(t0.c4)))AND(t0.c2))) ISNULL), ((((t0.c4) ISNULL)) ISNULL)  NULLS FIRST;
SELECT MAX(rt1.c3) FROM rt1 WHERE ((((((((((((((rt1.c0))<=((rt1.c4))))OR(CASE WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c6 WHEN '' THEN rt1.c6 ELSE rt1.c3 END)))AND(((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))))AND(0.09105470638250124)))OR(((rt1.c1) IS FALSE))))AND((rt1.c1 IN (rt1.c2))))) ORDER BY (((rt1.c1 IN (rt1.c5)))AND(rt1.c1 COLLATE BINARY)) ASC  NULLS FIRST, rt1.c3 DESC  NULLS LAST, ((((rt1.c0, rt1.c6, rt1.c5))!=((0.5920785569157698, rt1.c6, rt1.c2))) IN (TRIM(rt1.c0)))  NULLS FIRST;
SELECT ALL MAX(rt1.c3) FROM rt1 WHERE ((((((((((((((rt1.c0))<=((rt1.c4))))OR(CASE WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c6 WHEN '' THEN rt1.c6 ELSE rt1.c3 END)))AND(((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))))AND(0.09105470638250124)))OR(((rt1.c1) IS FALSE))))AND((rt1.c1 IN (rt1.c2))))) ORDER BY (((((rt1.c6, rt1.c5))=((rt1.c4, rt1.c3)))) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND (CAST(rt1.c0 AS REAL))) ASC LIMIT 0X2;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ('');
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE ((('')AND(CAST(t0.c3 AS REAL) COLLATE NOCASE))) ORDER BY t0.c2 ASC LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (t0.c0) ORDER BY t0.c2 ASC LIMIT 0X1;
SELECT MAX(t0.c3) FROM t0 WHERE (((((t0.c0)<<(t0.c4))) BETWEEN (x'71') AND ((t0.c3 IN (t0.c4)))));
SELECT DISTINCT MAX(t0.c3) FROM t0 WHERE (((((((t0.c0)<<(t0.c4))) BETWEEN (x'71') AND ((t0.c3 IN (t0.c4)))))AND(CAST('1244734846' AS BLOB)))) ORDER BY CASE WHEN ((t0.c1) NOT BETWEEN (t0.c4) AND (t0.c2)) THEN ((((((((((t0.c2)OR(t0.c1)))AND(t0.c0)))OR(t0.c1)))AND(t0.c4)))AND(t0.c2)) END ASC LIMIT 1;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CASE WHEN (((rt1.c2, t0.c2, rt1.c3)) NOT BETWEEN ((t0.c3, t0.c2, t0.c3)) AND ((rt1.c1, rt1.c4, rt1.c2))) THEN (t0.c4 IN (t0.c3, t0.c2)) WHEN ((t0.c4) BETWEEN (rt1.c5) AND (t0.c2)) THEN (t0.c3 IN (rt1.c5)) ELSE (((t0.c0))>((rt1.c2))) END) ORDER BY (HEX(t0.c0) IN ((NOT (rt1.c4))))  NULLS FIRST, (NOT ((rt1.c4 IN (rt1.c3)))) DESC, GLOB(((rt1.c1)==(rt1.c6)), ((((((((rt1.c2)AND(rt1.c5)))OR(rt1.c0)))OR(rt1.c5)))OR(rt1.c3))) ASC;
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((CASE WHEN (((rt1.c2, t0.c2, rt1.c3)) NOT BETWEEN ((t0.c3, t0.c2, t0.c3)) AND ((rt1.c1, rt1.c4, rt1.c2))) THEN (t0.c4 IN (t0.c3)) WHEN ((t0.c4) BETWEEN (rt1.c5) AND (t0.c2)) THEN (t0.c3 IN (rt1.c5)) ELSE (((t0.c0))>((rt1.c2))) END)AND((CAST(rt1.c4 AS REAL) IN ())))) ORDER BY (HEX(t0.c0) IN ((NOT (rt1.c4))))  NULLS FIRST, (NOT ((rt1.c4 IN (rt1.c3)))) DESC, GLOB(((rt1.c1)==(rt1.c6)), ((((((((rt1.c2)AND(rt1.c5)))OR(rt1.c0)))OR(rt1.c5)))OR(rt1.c3))) ASC INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (x'58') ORDER BY (HEX(t0.c0) IN ((NOT (rt1.c4))))  NULLS FIRST, (NOT ((rt1.c4 IN (rt1.c3)))) DESC, GLOB(((rt1.c1)=(rt1.c6)), ((((((((rt1.c2)AND(rt1.c5)))OR(rt1.c0)))OR(rt1.c5)))OR(rt1.c3))) ASC;
SELECT ALL * FROM t0, rt1 WHERE (CASE ((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c5))  WHEN rt1.c1 COLLATE NOCASE THEN (~ (rt1.c6)) WHEN (('w') NOTNULL) THEN CAST(t0.c3 AS INTEGER) END);
SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE ((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c5))  WHEN rt1.c1 COLLATE NOCASE THEN (~ (rt1.c6)) WHEN (('w') NOTNULL) THEN CAST(t0.c3 AS INTEGER) END)AND(((rt1.c0 IN ()) IN ())))) ORDER BY (((CASE rt1.c0  WHEN t0.c0 THEN x'' ELSE t0.c3 END))=((TRIM(DISTINCT rt1.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (CASE ((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c5))  WHEN rt1.c1 COLLATE NOCASE THEN (~ (rt1.c6)) WHEN (('w') NOTNULL) THEN CAST(t0.c3 AS INTEGER) END);
SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE ((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c5))  WHEN rt1.c1 COLLATE NOCASE THEN (~ (rt1.c6)) WHEN (('w') NOTNULL) THEN CAST(t0.c3 AS INTEGER) END)AND(((rt1.c0 IN ()) IN ())))) ORDER BY (((CASE rt1.c0  WHEN t0.c0 THEN x'' ELSE t0.c3 END))=((TRIM(DISTINCT rt1.c1)))) ASC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((t0.c1 IN ()));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((t0.c1 IN ()))AND(((CAST(t0.c0 AS NUMERIC)) ISNULL))));
SELECT * FROM t0, rt1 WHERE ((NOT (t0.c2 COLLATE BINARY)));
SELECT ALL * FROM t0, rt1 WHERE ((((NOT (t0.c2 COLLATE BINARY)))AND(((t0.c2) IS FALSE)))) LIMIT 0X2;
SELECT * FROM t0, rt1 WHERE ((NOT (t0.c2 COLLATE BINARY)));
SELECT ALL * FROM t0, rt1 WHERE ((((NOT (t0.c2 COLLATE BINARY)))AND(((t0.c2) IS FALSE)))) LIMIT 0X2;
SELECT MAX(rt1.c0) FROM rt1 WHERE ('-983457725' COLLATE BINARY);
SELECT ALL MAX(rt1.c0) FROM rt1 WHERE ('-983457725' COLLATE BINARY);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c2)>(rt1.c5)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c0))) END);
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c2)>(rt1.c5)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c0))) END);
SELECT * FROM t0, rt1 WHERE (((rt1.c5) BETWEEN (t0.c3) AND (t0.c2)) COLLATE BINARY);
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c5) BETWEEN (t0.c3) AND (t0.c2)) COLLATE BINARY)AND(((CAST(t0.c1 AS INTEGER))*(LIKELY(DISTINCT t0.c3)))))) ORDER BY ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))IS NOT((~ (rt1.c1)))), rt1.c4  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (((rt1.c5) BETWEEN (t0.c3) AND (t0.c2)) COLLATE BINARY);
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c5) BETWEEN (t0.c3) AND (t0.c2)) COLLATE BINARY)AND(((CAST(t0.c1 AS INTEGER))*(LIKELY(DISTINCT t0.c3)))))) ORDER BY ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))IS NOT((~ (rt1.c1)))), rt1.c4  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(CAST(t0.c1 AS NUMERIC) AS REAL));
SELECT DISTINCT * FROM t0 WHERE (((CAST(CAST(t0.c1 AS NUMERIC) AS REAL))AND((((NULL) IS FALSE) IN ()))));
SELECT * FROM t0 WHERE (CAST(CAST(t0.c1 AS NUMERIC) AS REAL));
SELECT DISTINCT * FROM t0 WHERE (((CAST(CAST(t0.c1 AS NUMERIC) AS REAL))AND((((NULL) IS FALSE) IN ()))));
SELECT * FROM rt1, t0 WHERE (x'61');
SELECT * FROM rt1, t0 WHERE (x'61') LIMIT 0X0 INTERSECT SELECT * FROM rt1, t0 WHERE (((((- (rt1.c0)), (rt1.c1 IN ()), ((rt1.c5) NOTNULL)))<=((rt1.c2 COLLATE NOCASE, ((t0.c2)IS NOT(rt1.c0)), t0.c4)))) LIMIT 0;
SELECT * FROM rt1, t0 WHERE (x'61');
SELECT * FROM rt1, t0 WHERE (x'61') LIMIT 0X0 INTERSECT SELECT * FROM rt1, t0 WHERE (((((- (rt1.c0)), (rt1.c1 IN ()), ((rt1.c5) NOTNULL)))<=((rt1.c2 COLLATE NOCASE, ((t0.c2)IS NOT(rt1.c0)), t0.c4)))) LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c3) BETWEEN (rt1.c4 COLLATE RTRIM) AND (CAST(t0.c2 AS REAL))));
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c3) BETWEEN (rt1.c4 COLLATE RTRIM) AND (CAST(t0.c2 AS REAL))));
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c3) BETWEEN (rt1.c4 COLLATE RTRIM) AND (CAST(t0.c2 AS REAL))));
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c3) BETWEEN (rt1.c4 COLLATE RTRIM) AND (CAST(t0.c2 AS REAL))));
SELECT * FROM t0, rt1 WHERE ('347892505');
SELECT ALL * FROM t0, rt1 WHERE ('347892505') ORDER BY LIKELY(DISTINCT ((t0.c4) NOT NULL))  NULLS LAST LIMIT 0x0;
SELECT * FROM t0, rt1 WHERE ('347892505');
SELECT ALL * FROM t0, rt1 WHERE ('347892505') ORDER BY LIKELY(DISTINCT ((t0.c4) NOT NULL))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE ((((((((((((rt1.c0))>((t0.c1))))AND(((rt1.c0) IS FALSE))))OR(((rt1.c1)<(t0.c3)))))OR(((((((((((t0.c0)OR(rt1.c1)))AND(rt1.c5)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))))AND(LIKELY(DISTINCT rt1.c5))));
SELECT ALL * FROM t0, rt1 WHERE ((((((((((((((rt1.c0))>((t0.c1))))AND(((rt1.c0) IS FALSE))))OR(((rt1.c1)<(t0.c3)))))OR(((((((((((t0.c0)OR(rt1.c1)))AND(rt1.c5)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))))AND(LIKELY(DISTINCT rt1.c5))))AND(((CAST(rt1.c0 AS INTEGER))IS NOT(t0.c1 COLLATE NOCASE)))));
SELECT ALL * FROM t0, rt1 WHERE ((((((((((((rt1.c0))>((t0.c1))))AND(((rt1.c0) IS FALSE))))OR(((rt1.c1)<(t0.c3)))))OR(((((((((((t0.c0)OR(rt1.c1)))AND(rt1.c5)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))))AND(LIKELY(DISTINCT rt1.c5))));
SELECT ALL * FROM t0, rt1 WHERE ((((((((((((((rt1.c0))>((t0.c1))))AND(((rt1.c0) IS FALSE))))OR(((rt1.c1)<(t0.c3)))))OR(((((((((((t0.c0)OR(rt1.c1)))AND(rt1.c5)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))))AND(LIKELY(DISTINCT rt1.c5))))AND(((CAST(rt1.c0 AS INTEGER))IS NOT(t0.c1 COLLATE NOCASE)))));
SELECT * FROM rt1 WHERE (((((rt1.c0)AND(rt1.c4))) BETWEEN ((NOT (rt1.c0))) AND (rt1.c0)));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)AND(rt1.c4))) BETWEEN ((NOT (rt1.c0))) AND (rt1.c0)));
SELECT * FROM rt1 WHERE (((((rt1.c0)AND(rt1.c4))) BETWEEN ((NOT (rt1.c0))) AND (rt1.c0)));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)AND(rt1.c4))) BETWEEN ((NOT (rt1.c0))) AND (rt1.c0)));
SELECT COUNT(*) FROM rt1, t0 WHERE (((LIKELIHOOD(t0.c1, t0.c1))+(CAST(rt1.c6 AS NUMERIC)))) ORDER BY ((t0.c4)&(t0.c1)) COLLATE BINARY COLLATE NOCASE;
SELECT COUNT(*) FROM rt1, t0 WHERE (((((LIKELIHOOD(t0.c1, t0.c1))+(CAST(rt1.c6 AS NUMERIC))))AND(((((t0.c2)/(rt1.c3))) NOT NULL)))) ORDER BY ((((t0.c0)*(rt1.c4))) BETWEEN ((~ (t0.c0))) AND (rt1.c4)) ASC LIMIT 3;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c3)OR((rt1.c3 IN (rt1.c4, rt1.c4)))))AND((+ (rt1.c3)))))OR(NULL))) ORDER BY CAST(rt1.c5 COLLATE NOCASE AS REAL) DESC;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((((rt1.c3)OR((rt1.c3 IN (rt1.c4, rt1.c4)))))AND((+ (rt1.c3)))))OR(NULL))) ORDER BY CAST(rt1.c5 COLLATE NOCASE AS REAL) DESC LIMIT 0;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c2, t0.c1, t0.c4, t0.c3, t0.c2)) NOT BETWEEN ((t0.c3, t0.c2, t0.c4, x'7060', t0.c3, t0.c1)) AND ((t0.c3, t0.c0, t0.c2, t0.c2, t0.c0, t0.c0))) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c2, t0.c1, t0.c4, t0.c3, t0.c2)) NOT BETWEEN ((t0.c3, t0.c2, t0.c4, x'7060', t0.c3, t0.c1)) AND ((t0.c3, t0.c0, t0.c2, t0.c2, t0.c0, t0.c0))) COLLATE RTRIM COLLATE BINARY)AND(((((((t0.c3)AND(t0.c4)))AND(0.38977499124536863))) NOT NULL)))) ORDER BY CAST((((t0.c4, t0.c2, t0.c2, t0.c4)) NOT BETWEEN ((t0.c2, t0.c2, t0.c4, t0.c2)) AND ((t0.c0, t0.c1, t0.c1, x'29'))) AS INTEGER) LIMIT 4 INTERSECT SELECT * FROM t0 WHERE (0x2da38122) ORDER BY CAST((((t0.c4, t0.c2, t0.c2, t0.c4)) NOT BETWEEN ((t0.c2, t0.c2, t0.c4, t0.c2)) AND ((t0.c0, t0.c1, t0.c1, x'29'))) AS INTEGER) LIMIT 0X4;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c2, t0.c1, t0.c4, t0.c3, t0.c2)) NOT BETWEEN ((t0.c3, t0.c2, t0.c4, x'7060', t0.c3, t0.c1)) AND ((t0.c3, t0.c0, t0.c2, t0.c2, t0.c0, t0.c0))) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c2, t0.c1, t0.c4, t0.c3, t0.c2)) NOT BETWEEN ((t0.c3, t0.c2, t0.c4, x'7060', t0.c3, t0.c1)) AND ((t0.c3, t0.c0, t0.c2, t0.c2, t0.c0, t0.c0))) COLLATE RTRIM COLLATE BINARY)AND(((((((t0.c3)AND(t0.c4)))AND(0.38977499124536863))) NOT NULL)))) ORDER BY CAST((((t0.c4, t0.c2, t0.c2, t0.c4)) NOT BETWEEN ((t0.c2, t0.c2, t0.c4, t0.c2)) AND ((t0.c0, t0.c1, t0.c1, x'29'))) AS INTEGER) LIMIT 4 INTERSECT SELECT * FROM t0 WHERE (0x2da38122) ORDER BY CAST((((t0.c4, t0.c2, t0.c2, t0.c4)) NOT BETWEEN ((t0.c2, t0.c2, t0.c4, t0.c2)) AND ((t0.c0, t0.c1, t0.c1, x'29'))) AS INTEGER) LIMIT 0X4;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(((t0.c1) NOTNULL) AS INTEGER));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(((t0.c1) NOTNULL) AS INTEGER)) ORDER BY ((((t0.c0 IN ()), ((t0.c4)IS NOT(t0.c4)), t0.c4 COLLATE BINARY))<>(((((t0.c3, NULL))<((t0.c0, t0.c0))), SQLITE_COMPILEOPTION_GET(t0.c3), (t0.c2 IN (t0.c0, t0.c3))))) ASC, (NOT (t0.c4)) COLLATE BINARY COLLATE BINARY  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c4)AND(rt1.c2)))OR(rt1.c1)))AND(NULL)) COLLATE BINARY) ORDER BY ((((((((IFNULL(DISTINCT 0.2628153465719568, rt1.c1))AND((NOT (rt1.c1)))))OR(((((((((x'7a')AND(rt1.c5)))AND(rt1.c5)))OR(rt1.c6)))AND(rt1.c4)))))OR(((rt1.c6) NOT BETWEEN (rt1.c1) AND (rt1.c5)))))OR((NOT (rt1.c2))))  NULLS FIRST, ((((((((rt1.c1)/(rt1.c1)))AND(TRIM(DISTINCT rt1.c0))))OR(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c4 END)))OR(((rt1.c2)<=(rt1.c4))))  NULLS LAST, (((CAST(rt1.c4 AS NUMERIC), CAST(rt1.c1 AS BLOB), ((rt1.c1)-(761684162)), (- (rt1.c1)), ((((rt1.c0)OR(rt1.c2)))OR(rt1.c4))))==(('ാ
v', rt1.c6, ((rt1.c3) IS FALSE), json_patch(rt1.c3, rt1.c6), ((rt1.c1) ISNULL)))) ASC;
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c4)AND(rt1.c2)))OR(rt1.c1)))AND(NULL)) COLLATE BINARY)AND((((((rt1.c1, rt1.c4))<((rt1.c2, rt1.c5)))) BETWEEN (rt1.c4 COLLATE RTRIM) AND ((~ (rt1.c6))))))) ORDER BY NULLIF(json_array(rt1.c0, rt1.c3, rt1.c1), (+ (rt1.c6))) DESC  NULLS FIRST, CAST(((rt1.c2) IS FALSE) AS INTEGER) DESC  NULLS LAST INTERSECT SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c5 IN (rt1.c6)), '', rt1.c6 COLLATE BINARY))=((rt1.c4 COLLATE BINARY, 0.797901141191869, (NOT (rt1.c6)))))) ORDER BY NULLIF(json_array(rt1.c0, rt1.c3, rt1.c1), (+ (rt1.c6))) DESC  NULLS FIRST, CAST(((rt1.c2) IS FALSE) AS INTEGER) DESC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE -1.446379791E9  WHEN x'a5' THEN ((t0.c3)=(t0.c2)) WHEN (+ (t0.c3)) THEN ((((((((t0.c1)AND(t0.c0)))OR(t0.c2)))OR(t0.c2)))OR(t0.c3)) WHEN CASE WHEN t0.c2 THEN t0.c3 WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END THEN '-689476328' COLLATE NOCASE WHEN (((t0.c1))<((t0.c1))) THEN CASE WHEN t0.c3 THEN t0.c3 WHEN t0.c4 THEN t0.c2 WHEN t0.c1 THEN '-1693920940' WHEN t0.c2 THEN t0.c4 ELSE t0.c3 END WHEN ((t0.c0)%(t0.c1)) THEN ((NULL)IS NOT(t0.c1)) WHEN CAST(t0.c4 AS NUMERIC) THEN ((((((((t0.c4)OR(t0.c4)))AND(t0.c1)))AND(t0.c0)))OR(t0.c0)) WHEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c4)GLOB(t0.c2)) END) ORDER BY t0.c0 DESC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((CASE -1.446379791E9  WHEN x'a5' THEN ((t0.c3)=(t0.c2)) WHEN (+ (t0.c3)) THEN ((((((((t0.c1)AND(t0.c0)))OR(t0.c2)))OR(t0.c2)))OR(t0.c3)) WHEN CASE WHEN t0.c2 THEN t0.c3 WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END THEN '-689476328' COLLATE NOCASE WHEN (((t0.c1))<((t0.c1))) THEN CASE WHEN t0.c3 THEN t0.c3 WHEN t0.c4 THEN t0.c2 WHEN t0.c1 THEN '-1693920940' WHEN t0.c2 THEN t0.c4 ELSE t0.c3 END WHEN ((t0.c0)%(t0.c1)) THEN ((NULL)IS NOT(t0.c1)) WHEN CAST(t0.c4 AS NUMERIC) THEN ((((((((t0.c4)OR(t0.c4)))AND(t0.c1)))AND(t0.c0)))OR(t0.c0)) WHEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c4)GLOB(t0.c2)) END)AND((((((t0.c1, t0.c3, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c3, t0.c0, t0.c3)) AND ((t0.c3, t0.c1, '', t0.c0)))) NOT BETWEEN (((t0.c0)-(t0.c2))) AND (((((((t0.c1)OR(t0.c4)))OR(t0.c3)))OR(t0.c1))))))) ORDER BY t0.c0 DESC INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (CHAR(0xffffffff8bb45c7a, CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c3 THEN t0.c2 END, CASE t0.c3  WHEN t0.c3 THEN 0.45090362117297056 ELSE t0.c0 END, t0.c4 COLLATE BINARY)) ORDER BY t0.c0 DESC;
SELECT * FROM rt1, t0 WHERE (LENGTH(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN t0.c1 THEN t0.c0 END));
SELECT * FROM rt1, t0 WHERE (((LENGTH(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN t0.c1 THEN t0.c0 END))AND(json_extract(((rt1.c1)&(x'12')), ((rt1.c3)||(rt1.c5)))))) ORDER BY x''  NULLS LAST, (((((('CtL2')OR((~ (rt1.c3)))))OR(((t0.c3) NOT BETWEEN (t0.c3) AND (rt1.c4)))))OR(((rt1.c1)|(rt1.c3))))  NULLS LAST INTERSECT SELECT * FROM rt1, t0 WHERE (((((((((((((((t0.c3)AND(t0.c1)))OR(rt1.c6)))OR(t0.c3)))AND(TRIM(t0.c4))))OR((((t0.c1, t0.c3))<((rt1.c1, t0.c0))))))OR(((rt1.c0)>>(rt1.c5)))))AND(CAST(rt1.c2 AS BLOB)))) ORDER BY x''  NULLS LAST, (((((('CtL2')OR((~ (rt1.c3)))))OR(((t0.c3) NOT BETWEEN (t0.c3) AND (rt1.c4)))))OR(((rt1.c1)|(rt1.c3))))  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (LENGTH(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN t0.c1 THEN t0.c0 END));
SELECT * FROM rt1, t0 WHERE (((LENGTH(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN t0.c1 THEN t0.c0 END))AND(json_extract(((rt1.c1)&(x'12')), ((rt1.c3)||(rt1.c5)))))) ORDER BY x''  NULLS LAST, (((((('CtL2')OR((~ (rt1.c3)))))OR(((t0.c3) NOT BETWEEN (t0.c3) AND (rt1.c4)))))OR(((rt1.c1)|(rt1.c3))))  NULLS LAST INTERSECT SELECT * FROM rt1, t0 WHERE (((((((((((((((t0.c3)AND(t0.c1)))OR(rt1.c6)))OR(t0.c3)))AND(TRIM(t0.c4))))OR((((t0.c1, t0.c3))<((rt1.c1, t0.c0))))))OR(((rt1.c0)>>(rt1.c5)))))AND(CAST(rt1.c2 AS BLOB)))) ORDER BY x''  NULLS LAST, (((((('CtL2')OR((~ (rt1.c3)))))OR(((t0.c3) NOT BETWEEN (t0.c3) AND (rt1.c4)))))OR(((rt1.c1)|(rt1.c3))))  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0)<('1896306991')))LIKE(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY UPPER(DISTINCT CAST(t0.c1 AS INTEGER)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)<('1896306991')))LIKE(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY UPPER(DISTINCT CAST(t0.c1 AS INTEGER)) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)OR(t0.c4))) NOT NULL)) ORDER BY UPPER(DISTINCT CAST(t0.c1 AS INTEGER)) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c0)<('1896306991')))LIKE(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY UPPER(DISTINCT CAST(t0.c1 AS INTEGER)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)<('1896306991')))LIKE(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY UPPER(DISTINCT CAST(t0.c1 AS INTEGER)) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)OR(t0.c4))) NOT NULL)) ORDER BY UPPER(DISTINCT CAST(t0.c1 AS INTEGER)) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((x'', t0.c0))>=((t0.c0, t0.c3))))GLOB(CASE t0.c0  WHEN 1239046975 THEN t0.c4 ELSE t0.c4 END)));
SELECT * FROM t0 WHERE ((((((x'', t0.c0))>((t0.c0, t0.c3))))GLOB(CASE t0.c0  WHEN 0x49da5b3f THEN t0.c4 ELSE t0.c4 END))) INTERSECT SELECT * FROM t0 WHERE (((((t0.c4)/(t0.c2))) BETWEEN (((t0.c2) NOTNULL)) AND (t0.c3 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE ((((((x'', t0.c0))>=((t0.c0, t0.c3))))GLOB(CASE t0.c0  WHEN 1239046975 THEN t0.c4 ELSE t0.c4 END)));
SELECT * FROM t0 WHERE ((((((x'', t0.c0))>((t0.c0, t0.c3))))GLOB(CASE t0.c0  WHEN 0x49da5b3f THEN t0.c4 ELSE t0.c4 END))) INTERSECT SELECT * FROM t0 WHERE (((((t0.c4)/(t0.c2))) BETWEEN (((t0.c2) NOTNULL)) AND (t0.c3 COLLATE BINARY)));
SELECT ALL * FROM rt1 WHERE (CAST(x'93a3' COLLATE BINARY AS NUMERIC));
SELECT * FROM rt1 WHERE (CAST(x'93a3' COLLATE BINARY AS NUMERIC)) ORDER BY ((((rt1.c3)%(rt1.c0))) ISNULL)  NULLS FIRST, rt1.c0 DESC  NULLS LAST INTERSECT SELECT ALL * FROM rt1 WHERE (((((((rt1.c3)AND(rt1.c5)))AND(rt1.c3)))%(((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) ORDER BY ((((rt1.c3)%(rt1.c0))) ISNULL)  NULLS FIRST, rt1.c0 DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (CAST(x'93a3' COLLATE BINARY AS NUMERIC));
SELECT * FROM rt1 WHERE (CAST(x'93a3' COLLATE BINARY AS NUMERIC)) ORDER BY ((((rt1.c3)%(rt1.c0))) ISNULL)  NULLS FIRST, rt1.c0 DESC  NULLS LAST INTERSECT SELECT ALL * FROM rt1 WHERE (((((((rt1.c3)AND(rt1.c5)))AND(rt1.c3)))%(((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) ORDER BY ((((rt1.c3)%(rt1.c0))) ISNULL)  NULLS FIRST, rt1.c0 DESC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c3) NOT BETWEEN (t0.c3) AND (rt1.c5))) NOT BETWEEN ((((t0.c1, rt1.c3, rt1.c5, rt1.c2, rt1.c5)) NOT BETWEEN ((rt1.c6, rt1.c6, rt1.c4, rt1.c6, t0.c0)) AND ((t0.c0, rt1.c2, rt1.c3, rt1.c6, rt1.c2)))) AND ((((t0.c2)) NOT BETWEEN ((t0.c4)) AND ((t0.c0)))))) ORDER BY t0.c4, (+ (0.2453133833133634)) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c3) NOT BETWEEN (t0.c3) AND (rt1.c5))) NOT BETWEEN ((((t0.c1, rt1.c3, rt1.c5, rt1.c2, rt1.c5)) NOT BETWEEN ((rt1.c6, rt1.c6, rt1.c4, rt1.c6, t0.c0)) AND ((t0.c0, rt1.c2, rt1.c3, rt1.c6, rt1.c2)))) AND ((((t0.c2)) NOT BETWEEN ((t0.c4)) AND ((t0.c0))))))AND((((((t0.c4, rt1.c3, rt1.c1)) BETWEEN ((rt1.c3, rt1.c0, NULL)) AND ((rt1.c0, t0.c0, rt1.c6))))%((((t0.c0, t0.c2)) BETWEEN ((rt1.c2, -1538821435)) AND ((rt1.c3, NULL)))))))) ORDER BY HEX(DISTINCT ((t0.c3)>=(rt1.c4))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (t0.c4) ORDER BY HEX(DISTINCT ((t0.c3)>=(rt1.c4))) DESC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c3) NOT BETWEEN (t0.c3) AND (rt1.c5))) NOT BETWEEN ((((t0.c1, rt1.c3, rt1.c5, rt1.c2, rt1.c5)) NOT BETWEEN ((rt1.c6, rt1.c6, rt1.c4, rt1.c6, t0.c0)) AND ((t0.c0, rt1.c2, rt1.c3, rt1.c6, rt1.c2)))) AND ((((t0.c2)) NOT BETWEEN ((t0.c4)) AND ((t0.c0)))))) ORDER BY t0.c4, (+ (0.2453133833133634)) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c3) NOT BETWEEN (t0.c3) AND (rt1.c5))) NOT BETWEEN ((((t0.c1, rt1.c3, rt1.c5, rt1.c2, rt1.c5)) NOT BETWEEN ((rt1.c6, rt1.c6, rt1.c4, rt1.c6, t0.c0)) AND ((t0.c0, rt1.c2, rt1.c3, rt1.c6, rt1.c2)))) AND ((((t0.c2)) NOT BETWEEN ((t0.c4)) AND ((t0.c0))))))AND((((((t0.c4, rt1.c3, rt1.c1)) BETWEEN ((rt1.c3, rt1.c0, NULL)) AND ((rt1.c0, t0.c0, rt1.c6))))%((((t0.c0, t0.c2)) BETWEEN ((rt1.c2, -1538821435)) AND ((rt1.c3, NULL)))))))) ORDER BY HEX(DISTINCT ((t0.c3)>=(rt1.c4))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (t0.c4) ORDER BY HEX(DISTINCT ((t0.c3)>=(rt1.c4))) DESC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (CASE NULL  WHEN (((t0.c4, rt1.c1))<=((rt1.c5, NULL))) THEN rt1.c6 COLLATE RTRIM ELSE NULL END) ORDER BY NULL, x'd9' ASC  NULLS LAST, ((0.4997220608661863 IN ()) IN ()) DESC;
SELECT ALL * FROM rt1, t0 WHERE (((CASE NULL  WHEN (((t0.c4, rt1.c1))<=((rt1.c5, NULL))) THEN rt1.c6 COLLATE RTRIM ELSE NULL END)AND((+ ((NOT (rt1.c2))))))) ORDER BY NULL, x'd9' ASC  NULLS LAST, ((0.4997220608661863 IN ()) IN ()) DESC LIMIT 0X0;
SELECT ALL * FROM rt1, t0 WHERE (CASE NULL  WHEN (((t0.c4, rt1.c1))<=((rt1.c5, NULL))) THEN rt1.c6 COLLATE RTRIM ELSE NULL END) ORDER BY NULL, x'd9' ASC  NULLS LAST, ((0.4997220608661863 IN ()) IN ()) DESC;
SELECT MIN(rt1.c6) FROM rt1, t0 WHERE (CAST(CASE WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c0 THEN t0.c0 END AS TEXT));
SELECT MIN(rt1.c6) FROM rt1, t0 WHERE (CAST(CASE WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c0 THEN t0.c0 END AS TEXT)) ORDER BY CASE 0X6b4547d9  WHEN (~ (rt1.c5)) THEN TYPEOF(DISTINCT t0.c4) END ASC  NULLS LAST, (((((((((rt1.c1))>((t0.c0))))AND(rt1.c2)))OR(((rt1.c5)>>(rt1.c6)))))OR(((rt1.c3) NOT BETWEEN (t0.c3) AND (rt1.c1))));
SELECT * FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c3 THEN t0.c0 WHEN t0.c0 THEN t0.c1 END AS INTEGER)) ORDER BY (x'8594' IN (COALESCE(DISTINCT t0.c3, x'', t0.c3))) DESC;
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c3 THEN t0.c0 WHEN t0.c0 THEN t0.c1 END AS INTEGER)) ORDER BY ((((t0.c4) BETWEEN (NULL) AND (t0.c3))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c4) AND (t0.c4))) AND (((((((t0.c1)AND(t0.c3)))OR(t0.c0)))OR(t0.c0)))), CASE WHEN t0.c3 THEN t0.c3 COLLATE BINARY WHEN ((t0.c3)<(t0.c2)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND ('-544894930')) END ASC  NULLS FIRST LIMIT 4;
SELECT * FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c3 THEN t0.c0 WHEN t0.c0 THEN t0.c1 END AS INTEGER)) ORDER BY (x'8594' IN (COALESCE(DISTINCT t0.c3, x'', t0.c3))) DESC;
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c3 THEN t0.c0 WHEN t0.c0 THEN t0.c1 END AS INTEGER)) ORDER BY ((((t0.c4) BETWEEN (NULL) AND (t0.c3))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c4) AND (t0.c4))) AND (((((((t0.c1)AND(t0.c3)))OR(t0.c0)))OR(t0.c0)))), CASE WHEN t0.c3 THEN t0.c3 COLLATE BINARY WHEN ((t0.c3)<(t0.c2)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND ('-544894930')) END ASC  NULLS FIRST LIMIT 4;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((t0.c0)AND(t0.c3)))AND(t0.c0)))LIKE(CASE WHEN t0.c4 THEN t0.c0 ELSE t0.c3 END))) ORDER BY CASE ((((t0.c2)AND(t0.c2)))OR(t0.c1))  WHEN ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN ((t0.c2)|(t0.c1)) ELSE ((t0.c2) BETWEEN (t0.c4) AND (t0.c1)) END  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (((((((((t0.c0)AND(t0.c3)))AND(t0.c0)))LIKE(CASE WHEN t0.c4 THEN t0.c0 ELSE t0.c3 END)))AND(NULL))) ORDER BY CASE ((((t0.c2)AND(t0.c2)))OR(t0.c1))  WHEN ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN ((t0.c2)|(t0.c1)) ELSE ((t0.c2) BETWEEN (t0.c4) AND (t0.c1)) END  NULLS FIRST LIMIT 3;
SELECT MAX(rt1.c6) FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c4 END) BETWEEN (CAST(rt1.c2 AS REAL)) AND ((rt1.c3 IN (rt1.c6)))));
SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c4 END) BETWEEN (CAST(rt1.c2 AS REAL)) AND ((rt1.c3 IN (rt1.c6)))))AND((((CAST(rt1.c6 AS REAL), CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c1 END))!=(((rt1.c4 IN (rt1.c2, rt1.c1)), (+ (rt1.c4)))))))) INTERSECT SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY);
SELECT * FROM t0 WHERE ((0.045390897871673164 IN (((t0.c2) BETWEEN (t0.c0) AND (t0.c4)), (t0.c1 IN ()), CAST(t0.c2 AS REAL)))) ORDER BY (+ (t0.c1 COLLATE NOCASE)) ASC  NULLS LAST, 0.7444689110911098 DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((0.045390897871673164 IN (((t0.c2) BETWEEN (t0.c0) AND (t0.c4)), (t0.c1 IN ()))))AND(-1666556278))) ORDER BY (+ (t0.c1 COLLATE NOCASE)) ASC  NULLS LAST, 0.7444689110911098 DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (0.8950672830507815) ORDER BY (+ (t0.c1 COLLATE NOCASE)) ASC  NULLS LAST, 0.7444689110911098 DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((0.045390897871673164 IN (((t0.c2) BETWEEN (t0.c0) AND (t0.c4)), (t0.c1 IN ()), CAST(t0.c2 AS REAL)))) ORDER BY (+ (t0.c1 COLLATE NOCASE)) ASC  NULLS LAST, 0.7444689110911098 DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((0.045390897871673164 IN (((t0.c2) BETWEEN (t0.c0) AND (t0.c4)), (t0.c1 IN ()))))AND(-1666556278))) ORDER BY (+ (t0.c1 COLLATE NOCASE)) ASC  NULLS LAST, 0.7444689110911098 DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (0.8950672830507815) ORDER BY (+ (t0.c1 COLLATE NOCASE)) ASC  NULLS LAST, 0.7444689110911098 DESC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE ('kz1S|qzD');
SELECT * FROM t0, rt1 WHERE ('kz1S|qzD');
SELECT ALL * FROM t0, rt1 WHERE ('kz1S|qzD');
SELECT * FROM t0, rt1 WHERE ('kz1S|qzD');
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((+ ((NOT (t0.c2)))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((+ ((NOT (t0.c2))))) INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CASE WHEN ((t0.c2) IS TRUE) THEN ((((t0.c1)AND(t0.c4)))AND('-1191521787')) WHEN LIKELY(DISTINCT x'524f') THEN (((t0.c2, t0.c2, t0.c3, t0.c1))==((t0.c2, t0.c3, t0.c0, t0.c3))) WHEN ((((((t0.c0)AND(t0.c0)))OR(x'84794029')))AND(t0.c2)) THEN t0.c4 END);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c4 AS REAL)) NOT BETWEEN (((((t0.c0)OR(t0.c3)))AND(t0.c2))) AND (((((((t0.c2)OR(t0.c0)))AND(t0.c1)))AND(t0.c4)))));
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c4 AS REAL)) NOT BETWEEN (((((t0.c0)OR(t0.c3)))AND(t0.c2))) AND (((((((t0.c2)OR(t0.c0)))AND(t0.c1)))AND(t0.c4))))) ORDER BY (NOT (((((t0.c1)OR(t0.c3)))AND(t0.c2)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (x'') ORDER BY (NOT (((((t0.c1)OR(t0.c3)))AND(t0.c2))));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c4 AS REAL)) NOT BETWEEN (((((t0.c0)OR(t0.c3)))AND(t0.c2))) AND (((((((t0.c2)OR(t0.c0)))AND(t0.c1)))AND(t0.c4)))));
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c4 AS REAL)) NOT BETWEEN (((((t0.c0)OR(t0.c3)))AND(t0.c2))) AND (((((((t0.c2)OR(t0.c0)))AND(t0.c1)))AND(t0.c4))))) ORDER BY (NOT (((((t0.c1)OR(t0.c3)))AND(t0.c2)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (x'') ORDER BY (NOT (((((t0.c1)OR(t0.c3)))AND(t0.c2))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0, rt1.c2, rt1.c5)) BETWEEN ((rt1.c5, rt1.c2, 0.4005189809058691)) AND ((rt1.c2, rt1.c0, rt1.c1))))<<('1934950711'))) ORDER BY (((rt1.c3)|(rt1.c1)) IN (((rt1.c5) IS FALSE), rt1.c1)) DESC  NULLS LAST, rt1.c2 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c0, rt1.c2, rt1.c5)) BETWEEN ((rt1.c5, rt1.c2, 0.4005189809058691)) AND ((rt1.c2, rt1.c0, rt1.c1))))<<('1934950711')))AND(((CASE WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c1 END)GLOB(((((rt1.c4)AND(rt1.c0)))OR(rt1.c1))))))) ORDER BY ((rt1.c6) ISNULL) COLLATE RTRIM ASC  NULLS FIRST, ((((((rt1.c6) ISNULL))OR((((rt1.c0, rt1.c1, rt1.c0, rt1.c5)) NOT BETWEEN ((rt1.c3, rt1.c2, 0.47814316420808367, rt1.c5)) AND ((rt1.c3, rt1.c2, rt1.c2, rt1.c2))))))AND(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) DESC  NULLS FIRST, CAST(((rt1.c3)|(rt1.c2)) AS TEXT) LIMIT 0x3 INTERSECT SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c6) BETWEEN (rt1.c4) AND (rt1.c4))) NOT NULL)) ORDER BY ((rt1.c6) ISNULL) COLLATE RTRIM ASC  NULLS FIRST, ((((((rt1.c6) ISNULL))OR((((rt1.c0, rt1.c1, rt1.c0, rt1.c5)) NOT BETWEEN ((rt1.c3, rt1.c2, 0.47814316420808367, rt1.c5)) AND ((rt1.c3, rt1.c2, rt1.c2, rt1.c2))))))AND(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) DESC  NULLS FIRST, CAST(((rt1.c3)|(rt1.c2)) AS TEXT) LIMIT 3;
SELECT MAX(rt1.c2) FROM t0 LEFT OUTER JOIN rt1 ON (((((((((((t0.c2)OR(0.7356045755386266)))OR(rt1.c5)))AND(rt1.c1)))AND(t0.c3)), ((rt1.c4) NOT BETWEEN (t0.c4) AND (t0.c0))))<((((((((t0.c1)AND(t0.c1)))OR(rt1.c6)))OR(t0.c4)), CAST(rt1.c6 AS TEXT)))) WHERE (x'0f') ORDER BY ((ABS(rt1.c2))GLOB(((t0.c4) NOTNULL))) DESC, (((x'' COLLATE NOCASE))!=((((rt1.c6)*(rt1.c3))))) DESC  NULLS LAST;
SELECT DISTINCT MAX(rt1.c2) FROM t0 LEFT OUTER JOIN rt1 ON (((((((((((t0.c2)OR(0.7356045755386266)))OR(rt1.c5)))AND(rt1.c1)))AND(t0.c3)), ((rt1.c4) NOT BETWEEN (t0.c4) AND (t0.c0))))<((((((((t0.c1)AND(t0.c1)))OR(rt1.c6)))OR(t0.c4)), CAST(rt1.c6 AS TEXT)))) WHERE (x'0f') ORDER BY (((((rt1.c6))==((t0.c2)))) NOT BETWEEN (CASE t0.c4  WHEN t0.c2 THEN rt1.c4 WHEN rt1.c0 THEN t0.c1 WHEN rt1.c1 THEN t0.c1 ELSE t0.c4 END) AND (CASE WHEN rt1.c3 THEN rt1.c6 END)) ASC LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(rt1.c2) FROM t0 LEFT OUTER JOIN rt1 ON (((((((((((t0.c2)OR(0.7356045755386266)))OR(rt1.c5)))AND(rt1.c1)))AND(t0.c3)), ((rt1.c4) NOT BETWEEN (t0.c4) AND (t0.c0))))<((((((((t0.c1)AND(t0.c1)))OR(rt1.c6)))OR(t0.c4)), CAST(rt1.c6 AS TEXT)))) WHERE ((NOT (MAX(t0.c4, 'b㷀?	W')))) ORDER BY (((((rt1.c6))=((t0.c2)))) NOT BETWEEN (CASE t0.c4  WHEN t0.c2 THEN rt1.c4 WHEN rt1.c0 THEN t0.c1 WHEN rt1.c1 THEN t0.c1 ELSE t0.c4 END) AND (CASE WHEN rt1.c3 THEN rt1.c6 END)) ASC LIMIT 0x1;
SELECT MAX(rt1.c4) FROM rt1 WHERE (x'f8' COLLATE RTRIM) ORDER BY (0.8561807129491712 IN ()), (((((((('-1314074616')OR(x'c0dc')))AND(rt1.c1)))AND(rt1.c5)))>=(rt1.c4));
SELECT MAX(rt1.c4) FROM rt1 WHERE (x'f8' COLLATE RTRIM) ORDER BY (0.8561807129491712 IN ()), (((((((('-1314074616')OR(x'c0dc')))AND(rt1.c1)))AND(rt1.c5)))>=(rt1.c4));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c4))>=((rt1.c1))) AS INTEGER)) ORDER BY (((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c6, ((rt1.c6)IS(rt1.c6)), ('|' IN ()))) AND ((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c1)), ((((((((rt1.c3)OR(0.658580017445775)))AND(rt1.c1)))OR(rt1.c3)))AND(rt1.c6)), LIKE(rt1.c0, rt1.c6)))), ((rt1.c3 COLLATE BINARY) NOTNULL) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CAST((((rt1.c4))>=((rt1.c1))) AS INTEGER)) ORDER BY ((LIKELIHOOD(rt1.c1, 'f4jzBIt'))GLOB((rt1.c2 IN ()))) ASC, (+ (((rt1.c0)>(NULL)))) DESC  NULLS FIRST;
SELECT * FROM t0 INNER JOIN rt1 ON (((((((NOT (t0.c2)))AND(IFNULL(rt1.c2, t0.c4))))OR(rt1.c5)))OR((+ (rt1.c2)))) WHERE (INSTR(rt1.c1 COLLATE BINARY, x''));
SELECT * FROM t0 INNER JOIN rt1 ON (((((((NOT (t0.c2)))AND(IFNULL(rt1.c2, t0.c4))))OR(rt1.c5)))OR((+ (rt1.c2)))) WHERE (((INSTR(rt1.c1 COLLATE BINARY, x''))AND((+ (CAST(rt1.c5 AS REAL)))))) INTERSECT SELECT ALL * FROM t0 INNER JOIN rt1 ON (((((((NOT (t0.c2)))AND(IFNULL(rt1.c2, t0.c4))))OR(rt1.c5)))OR((+ (rt1.c2)))) WHERE (LTRIM(rt1.c0 COLLATE NOCASE));
SELECT * FROM t0 INNER JOIN rt1 ON (((((((NOT (t0.c2)))AND(IFNULL(rt1.c2, t0.c4))))OR(rt1.c5)))OR((+ (rt1.c2)))) WHERE (INSTR(rt1.c1 COLLATE BINARY, x''));
SELECT * FROM t0 INNER JOIN rt1 ON (((((((NOT (t0.c2)))AND(IFNULL(rt1.c2, t0.c4))))OR(rt1.c5)))OR((+ (rt1.c2)))) WHERE (((INSTR(rt1.c1 COLLATE BINARY, x''))AND((+ (CAST(rt1.c5 AS REAL)))))) INTERSECT SELECT ALL * FROM t0 INNER JOIN rt1 ON (((((((NOT (t0.c2)))AND(IFNULL(rt1.c2, t0.c4))))OR(rt1.c5)))OR((+ (rt1.c2)))) WHERE (LTRIM(rt1.c0 COLLATE NOCASE));
SELECT MAX(rt1.c2) FROM rt1 WHERE ((((rt1.c6)) NOT BETWEEN ((rt1.c0)) AND ((((((rt1.c1)AND(rt1.c6)))AND(rt1.c3)))))) ORDER BY ((((((((((((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c5)))OR(CAST(rt1.c6 AS REAL))))OR((rt1.c4 IN (rt1.c4)))))OR(CASE 0.46539763801619694  WHEN rt1.c2 THEN rt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c1 END)))OR(CASE rt1.c6  WHEN x'' THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 END)))AND(TYPEOF(rt1.c3)))  NULLS LAST;
SELECT DISTINCT MAX(rt1.c2) FROM rt1 WHERE ((((((rt1.c6)) NOT BETWEEN ((rt1.c0)) AND ((((((rt1.c1)AND(rt1.c6)))AND(rt1.c3))))))AND((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c4 END IN (((((((((((rt1.c5)AND(-1675530015)))OR(rt1.c3)))OR(rt1.c6)))OR(rt1.c4)))OR(rt1.c4))))))) ORDER BY 'EWW⇖' DESC, (((- (rt1.c0))) ISNULL)  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT MAX(rt1.c2) FROM rt1 WHERE (((((rt1.c0, rt1.c6, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((NULL, rt1.c1, rt1.c0))) IN ())) ORDER BY 'EWW⇖' DESC, (((- (rt1.c0))) ISNULL)  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t0 WHERE (t0.c1);
SELECT DISTINCT * FROM t0 WHERE (t0.c1) ORDER BY x'fa' DESC  NULLS LAST, (((t0.c2) IS FALSE) IN (HEX(NULL))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (t0.c1);
SELECT DISTINCT * FROM t0 WHERE (t0.c1) ORDER BY x'fa' DESC  NULLS LAST, (((t0.c2) IS FALSE) IN (HEX(NULL))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (((((t0.c2)||(t0.c3)))LIKE((t0.c0 IN ())))) ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT NULL)  NULLS LAST, (((((t0.c2)) BETWEEN ((t0.c4)) AND ((t0.c0))))IS(((t0.c4)>>(t0.c3)))) ASC  NULLS LAST, (((t0.c4) BETWEEN (t0.c4) AND (t0.c0)) IN (((((((t0.c4)AND(t0.c1)))AND(0X17e17efd)))OR(t0.c1))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c2)||(t0.c3)))LIKE((t0.c0 IN ())))) ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT NULL)  NULLS LAST, (((((t0.c2)) BETWEEN ((t0.c4)) AND ((t0.c0))))IS(((t0.c4)>>(t0.c3)))) ASC  NULLS LAST, (((t0.c4) BETWEEN (t0.c4) AND (t0.c0)) IN (((((((t0.c4)AND(t0.c1)))AND(0x17e17efd)))OR(t0.c1))))  NULLS FIRST INTERSECT SELECT ALL * FROM t0 WHERE (((ROUND(t0.c3, t0.c2)) ISNULL)) ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT NULL)  NULLS LAST, (((((t0.c2)) BETWEEN ((t0.c4)) AND ((t0.c0))))IS(((t0.c4)>>(t0.c3)))) ASC  NULLS LAST, (((t0.c4) BETWEEN (t0.c4) AND (t0.c0)) IN (((((((t0.c4)AND(t0.c1)))AND(400654077)))OR(t0.c1))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c2)||(t0.c3)))LIKE((t0.c0 IN ())))) ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT NULL)  NULLS LAST, (((((t0.c2)) BETWEEN ((t0.c4)) AND ((t0.c0))))IS(((t0.c4)>>(t0.c3)))) ASC  NULLS LAST, (((t0.c4) BETWEEN (t0.c4) AND (t0.c0)) IN (((((((t0.c4)AND(t0.c1)))AND(0X17e17efd)))OR(t0.c1))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c2)||(t0.c3)))LIKE((t0.c0 IN ())))) ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT NULL)  NULLS LAST, (((((t0.c2)) BETWEEN ((t0.c4)) AND ((t0.c0))))IS(((t0.c4)>>(t0.c3)))) ASC  NULLS LAST, (((t0.c4) BETWEEN (t0.c4) AND (t0.c0)) IN (((((((t0.c4)AND(t0.c1)))AND(0x17e17efd)))OR(t0.c1))))  NULLS FIRST INTERSECT SELECT ALL * FROM t0 WHERE (((ROUND(t0.c3, t0.c2)) ISNULL)) ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT NULL)  NULLS LAST, (((((t0.c2)) BETWEEN ((t0.c4)) AND ((t0.c0))))IS(((t0.c4)>>(t0.c3)))) ASC  NULLS LAST, (((t0.c4) BETWEEN (t0.c4) AND (t0.c0)) IN (((((((t0.c4)AND(t0.c1)))AND(400654077)))OR(t0.c1))))  NULLS FIRST;
SELECT * FROM rt1 WHERE (CASE CAST(rt1.c2 AS TEXT)  WHEN ((((((rt1.c4)AND(rt1.c3)))OR(rt1.c6)))OR(rt1.c1)) THEN ((NULL)GLOB(rt1.c3)) WHEN CASE WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c1 END THEN CASE rt1.c6  WHEN rt1.c1 THEN ' ' WHEN rt1.c5 THEN rt1.c3 WHEN -1463084059 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c5 END ELSE ((rt1.c4)LIKE(rt1.c4)) END);
SELECT * FROM rt1 WHERE (CASE CAST(rt1.c2 AS TEXT)  WHEN ((((((rt1.c4)AND(rt1.c3)))OR(rt1.c6)))OR(rt1.c1)) THEN ((NULL)GLOB(rt1.c3)) WHEN CASE WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c1 END THEN CASE rt1.c6  WHEN rt1.c1 THEN ' ' WHEN rt1.c5 THEN rt1.c3 WHEN -1463084059 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c5 END ELSE ((rt1.c4)LIKE(rt1.c4)) END) INTERSECT SELECT ALL * FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c5) AND (rt1.c5)))IS(0.5255753147724977)));
SELECT * FROM rt1 WHERE (CASE CAST(rt1.c2 AS TEXT)  WHEN ((((((rt1.c4)AND(rt1.c3)))OR(rt1.c6)))OR(rt1.c1)) THEN ((NULL)GLOB(rt1.c3)) WHEN CASE WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c1 END THEN CASE rt1.c6  WHEN rt1.c1 THEN ' ' WHEN rt1.c5 THEN rt1.c3 WHEN -1463084059 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c5 END ELSE ((rt1.c4)LIKE(rt1.c4)) END);
SELECT * FROM rt1 WHERE (CASE CAST(rt1.c2 AS TEXT)  WHEN ((((((rt1.c4)AND(rt1.c3)))OR(rt1.c6)))OR(rt1.c1)) THEN ((NULL)GLOB(rt1.c3)) WHEN CASE WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c1 END THEN CASE rt1.c6  WHEN rt1.c1 THEN ' ' WHEN rt1.c5 THEN rt1.c3 WHEN -1463084059 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c5 END ELSE ((rt1.c4)LIKE(rt1.c4)) END) INTERSECT SELECT ALL * FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c5) AND (rt1.c5)))IS(0.5255753147724977)));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((((t0.c1)) NOT BETWEEN ((0.7688030129304451)) AND ((t0.c2))))IS(CAST('-1927307188' AS NUMERIC))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((t0.c1)) NOT BETWEEN ((0.7688030129304451)) AND ((t0.c2))))IS(CAST('-1927307188' AS NUMERIC)))) LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((NOT ('xq'))) LIMIT 0X0;
SELECT * FROM rt1 WHERE (((rt1.c0 IN (rt1.c6, rt1.c5)) IN ()));
SELECT * FROM rt1 WHERE (((((rt1.c0 IN (rt1.c6, rt1.c5)) IN ()))AND(((SQLITE_COMPILEOPTION_GET(rt1.c3)) BETWEEN (((((NULL)AND(rt1.c0)))AND(rt1.c0))) AND (CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c6 END))))) ORDER BY json_array_length(PRINTF(NULL, rt1.c1, '1967614267'), ((rt1.c1) ISNULL)) DESC, (+ ((((rt1.c6))<((rt1.c2))))) INTERSECT SELECT * FROM rt1 WHERE ((('?' COLLATE BINARY) NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (CAST(rt1.c1 AS INTEGER)))) ORDER BY json_array_length(PRINTF(NULL, rt1.c1, '1967614267'), ((rt1.c1) ISNULL)) DESC, (+ ((((rt1.c6))<((rt1.c2)))));
SELECT * FROM rt1 WHERE (((rt1.c0 IN (rt1.c6, rt1.c5)) IN ()));
SELECT * FROM rt1 WHERE (((((rt1.c0 IN (rt1.c6, rt1.c5)) IN ()))AND(((SQLITE_COMPILEOPTION_GET(rt1.c3)) BETWEEN (((((NULL)AND(rt1.c0)))AND(rt1.c0))) AND (CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c6 END))))) ORDER BY json_array_length(PRINTF(NULL, rt1.c1, '1967614267'), ((rt1.c1) ISNULL)) DESC, (+ ((((rt1.c6))<((rt1.c2))))) INTERSECT SELECT * FROM rt1 WHERE ((('?' COLLATE BINARY) NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (CAST(rt1.c1 AS INTEGER)))) ORDER BY json_array_length(PRINTF(NULL, rt1.c1, '1967614267'), ((rt1.c1) ISNULL)) DESC, (+ ((((rt1.c6))<((rt1.c2)))));
SELECT * FROM rt1 WHERE (' Su') ORDER BY ((((((0.1578836433548264)AND(((((((rt1.c3)AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))))OR((rt1.c4 IN ()))))AND(((rt1.c3) IS TRUE))) DESC, (((((((((((rt1.c0 IN ()))OR(CAST(rt1.c0 AS BLOB))))AND(rt1.c0)))AND(COALESCE(NULL, rt1.c6))))OR(((x'')=(rt1.c6)))))OR((((rt1.c5, rt1.c6))<=((rt1.c6, rt1.c3))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (' Su') ORDER BY (((rt1.c5, rt1.c6, rt1.c3)) BETWEEN ((rt1.c4, rt1.c4, rt1.c3 COLLATE RTRIM)) AND ((((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c0)), rt1.c4 COLLATE RTRIM, ((rt1.c6)IS(rt1.c3)))))  NULLS FIRST;
SELECT * FROM rt1 WHERE (' Su') ORDER BY ((((((0.1578836433548264)AND(((((((rt1.c3)AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))))OR((rt1.c4 IN ()))))AND(((rt1.c3) IS TRUE))) DESC, (((((((((((rt1.c0 IN ()))OR(CAST(rt1.c0 AS BLOB))))AND(rt1.c0)))AND(COALESCE(NULL, rt1.c6))))OR(((x'')=(rt1.c6)))))OR((((rt1.c5, rt1.c6))<=((rt1.c6, rt1.c3))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (' Su') ORDER BY (((rt1.c5, rt1.c6, rt1.c3)) BETWEEN ((rt1.c4, rt1.c4, rt1.c3 COLLATE RTRIM)) AND ((((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c0)), rt1.c4 COLLATE RTRIM, ((rt1.c6)IS(rt1.c3)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((('E	^' IN ())) IS TRUE)) ORDER BY ((((rt1.c1) IS TRUE)) NOT BETWEEN ((rt1.c4 IN (0.6088508550939677))) AND (CASE rt1.c0  WHEN rt1.c5 THEN rt1.c1 WHEN 0.49170061254843767 THEN rt1.c0 ELSE rt1.c3 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((('E	^' IN ())) IS TRUE))AND(((rt1.c6) BETWEEN (NULL) AND (((rt1.c3) NOTNULL)))))) ORDER BY (((rt1.c0, rt1.c6, rt1.c4)) BETWEEN ((((rt1.c4)IS(rt1.c0)), ((rt1.c0)*(rt1.c5)), ((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c6)))OR(rt1.c6)))) AND ((((rt1.c1)&(rt1.c1)), (~ (rt1.c2)), ((x'')&(rt1.c3))))), (~ (CAST(rt1.c6 AS BLOB))) DESC  NULLS LAST LIMIT 0x2;
SELECT MIN(rt1.c4) FROM rt1, t0 WHERE ((+ ((((rt1.c1, t0.c0, rt1.c6))!=((NULL, rt1.c4, rt1.c6)))))) ORDER BY (NOT (((((((((t0.c1)OR(rt1.c6)))AND('xWuT')))AND(t0.c1)))OR(t0.c3)))) ASC  NULLS FIRST, (NOT ('-427067262')) ASC  NULLS FIRST;
SELECT MIN(rt1.c4) FROM rt1, t0 WHERE ((((+ ((((rt1.c1, t0.c0, rt1.c6))!=((NULL, rt1.c4, rt1.c6))))))AND(RTRIM(t0.c1) COLLATE NOCASE))) ORDER BY (NOT (((((((((t0.c1)OR(rt1.c6)))AND('xWuT')))AND(t0.c1)))OR(t0.c3)))) ASC  NULLS FIRST, (NOT ('-427067262')) ASC  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt1, t0 WHERE (((((t0.c3)*(t0.c1)))+(((((rt1.c0)OR(0.6582575926668529)))AND(t0.c0)))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c3)*(t0.c1)))+(((((rt1.c0)OR(0.6582575926668529)))AND(t0.c0))))) ORDER BY CASE NULL  WHEN '-0.0' THEN (+ (rt1.c6)) WHEN CAST(rt1.c3 AS NUMERIC) THEN ((rt1.c4) IS FALSE) END ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c6) BETWEEN (rt1.c6) AND (rt1.c5)))AND(t0.c1)))OR(LIKELIHOOD(DISTINCT t0.c1, rt1.c2)))) ORDER BY CASE NULL  WHEN '-0.0' THEN (+ (rt1.c6)) WHEN CAST(rt1.c3 AS NUMERIC) THEN ((rt1.c4) IS FALSE) END ASC LIMIT 0X0;
SELECT * FROM rt1, t0 WHERE (((((t0.c3)*(t0.c1)))+(((((rt1.c0)OR(0.6582575926668529)))AND(t0.c0)))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c3)*(t0.c1)))+(((((rt1.c0)OR(0.6582575926668529)))AND(t0.c0))))) ORDER BY CASE NULL  WHEN '-0.0' THEN (+ (rt1.c6)) WHEN CAST(rt1.c3 AS NUMERIC) THEN ((rt1.c4) IS FALSE) END ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c6) BETWEEN (rt1.c6) AND (rt1.c5)))AND(t0.c1)))OR(LIKELIHOOD(DISTINCT t0.c1, rt1.c2)))) ORDER BY CASE NULL  WHEN '-0.0' THEN (+ (rt1.c6)) WHEN CAST(rt1.c3 AS NUMERIC) THEN ((rt1.c4) IS FALSE) END ASC LIMIT 0X0;
SELECT ALL * FROM t0, rt1 WHERE ((((((((((('-859714987')AND(t0.c3)))OR('t|%x~y7')))AND(rt1.c2)))OR(rt1.c3))) ISNULL));
SELECT * FROM t0, rt1 WHERE ((((((((((((('-859714987')AND(t0.c3)))OR('t|%x~y7')))AND(rt1.c2)))OR(rt1.c3))) ISNULL))AND(((((t0.c4) NOTNULL))&(((t0.c4)>=(t0.c4))))))) ORDER BY (((rt1.c3 IN ()))<=(UNLIKELY(rt1.c2))) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE ((((((((((('-859714987')AND(t0.c3)))OR('t|%x~y7')))AND(rt1.c2)))OR(rt1.c3))) ISNULL));
SELECT * FROM t0, rt1 WHERE ((((((((((((('-859714987')AND(t0.c3)))OR('t|%x~y7')))AND(rt1.c2)))OR(rt1.c3))) ISNULL))AND(((((t0.c4) NOTNULL))&(((t0.c4)>=(t0.c4))))))) ORDER BY (((rt1.c3 IN ()))<=(UNLIKELY(rt1.c2))) DESC  NULLS LAST LIMIT 1;
SELECT ALL COUNT(*) FROM t0 WHERE ((CAST(t0.c2 AS REAL) IN (((t0.c3)AND(t0.c0))))) ORDER BY 0.8814039064847039 ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((CAST(t0.c2 AS REAL) IN (((t0.c3)AND(t0.c0))))) ORDER BY (NOT (t0.c0)) DESC, ((((((((((t0.c4)AND((NOT (t0.c3)))))AND(((t0.c4)<>(t0.c2)))))OR(CASE t0.c4  WHEN t0.c2 THEN t0.c4 ELSE t0.c2 END)))AND(((t0.c3) NOT NULL))))AND(COALESCE(t0.c1, t0.c4, t0.c1, t0.c4, t0.c3, t0.c1, t0.c1))) DESC LIMIT 0X1;
SELECT ALL MIN(rt1.c6) FROM rt1, t0 WHERE (((((((((((x'')OR(((((rt1.c6)AND(rt1.c6)))OR(rt1.c0)))))OR((- (t0.c2)))))AND(NULL)))OR(rt1.c6)))OR((t0.c4 IN (rt1.c2))))) ORDER BY NULLIF(t0.c0, rt1.c3) COLLATE NOCASE  NULLS LAST;
SELECT DISTINCT MIN(rt1.c6) FROM rt1, t0 WHERE (((((((((((x'')OR(((((rt1.c6)AND(rt1.c6)))OR(rt1.c0)))))OR((- (t0.c2)))))AND(NULL)))OR(rt1.c6)))OR((t0.c4 IN (rt1.c2))))) ORDER BY NULLIF(t0.c0, rt1.c3) COLLATE NOCASE  NULLS LAST INTERSECT SELECT DISTINCT MIN(rt1.c6) FROM rt1, t0 WHERE (((HEX(DISTINCT rt1.c0))/(((((((t0.c1)OR(rt1.c4)))OR(t0.c1)))OR(t0.c1))))) ORDER BY NULLIF(t0.c0, rt1.c3) COLLATE NOCASE  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0) IS FALSE))AND((t0.c2 IN ()))));
SELECT * FROM t0 WHERE (((((t0.c0) IS FALSE))AND((t0.c2 IN ()))));
SELECT * FROM t0 WHERE (((((t0.c0) IS FALSE))AND((t0.c2 IN ()))));
SELECT * FROM t0 WHERE (((((t0.c0) IS FALSE))AND((t0.c2 IN ()))));
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c2 THEN x'18' ELSE rt1.c1 END)AND((- (rt1.c5)))));
SELECT * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c2 THEN x'18' ELSE rt1.c1 END)AND((- (rt1.c5)))));
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c2 THEN x'18' ELSE rt1.c1 END)AND((- (rt1.c5)))));
SELECT * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c2 THEN x'18' ELSE rt1.c1 END)AND((- (rt1.c5)))));
SELECT * FROM rt1 CROSS JOIN t0 ON (((rt1.c3) ISNULL) IN (IFNULL(rt1.c5, rt1.c5), (((480114295))<((NULL))))) WHERE ((- (((((t0.c4)AND(rt1.c6)))AND(rt1.c2))))) ORDER BY LOWER(rt1.c4) ASC, x''  NULLS LAST, (((((((((rt1.c0 IN ('0.6457468699996568', t0.c2)))OR(((rt1.c6)/(t0.c3)))))OR(((rt1.c3) BETWEEN (rt1.c6) AND (rt1.c2)))))OR(((rt1.c5)==(rt1.c0)))))OR(((rt1.c4) NOT BETWEEN (rt1.c0) AND (t0.c2)))) DESC;
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON (((rt1.c3) ISNULL) IN (IFNULL(rt1.c5, rt1.c5), (((480114295))<((NULL))))) WHERE ((- (((((t0.c4)AND(rt1.c6)))AND(rt1.c2))))) ORDER BY ((rt1.c6) ISNULL) DESC  NULLS FIRST, ((TRIM(DISTINCT t0.c4, rt1.c3)) NOT BETWEEN ((((rt1.c3, t0.c3, x'c259', t0.c3, rt1.c6, t0.c1))<=((rt1.c5, rt1.c3, rt1.c2, t0.c4, rt1.c2, t0.c2)))) AND (CASE rt1.c4  WHEN 0.6893956200375861 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c5 THEN '.' ELSE rt1.c0 END)) DESC;
SELECT * FROM rt1 CROSS JOIN t0 ON (((rt1.c3) ISNULL) IN (IFNULL(rt1.c5, rt1.c5), (((480114295))<((NULL))))) WHERE ((- (((((t0.c4)AND(rt1.c6)))AND(rt1.c2))))) ORDER BY LOWER(rt1.c4) ASC, x''  NULLS LAST, (((((((((rt1.c0 IN ('0.6457468699996568', t0.c2)))OR(((rt1.c6)/(t0.c3)))))OR(((rt1.c3) BETWEEN (rt1.c6) AND (rt1.c2)))))OR(((rt1.c5)==(rt1.c0)))))OR(((rt1.c4) NOT BETWEEN (rt1.c0) AND (t0.c2)))) DESC;
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON (((rt1.c3) ISNULL) IN (IFNULL(rt1.c5, rt1.c5), (((480114295))<((NULL))))) WHERE ((- (((((t0.c4)AND(rt1.c6)))AND(rt1.c2))))) ORDER BY ((rt1.c6) ISNULL) DESC  NULLS FIRST, ((TRIM(DISTINCT t0.c4, rt1.c3)) NOT BETWEEN ((((rt1.c3, t0.c3, x'c259', t0.c3, rt1.c6, t0.c1))<=((rt1.c5, rt1.c3, rt1.c2, t0.c4, rt1.c2, t0.c2)))) AND (CASE rt1.c4  WHEN 0.6893956200375861 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c5 THEN '.' ELSE rt1.c0 END)) DESC;
SELECT MAX(rt1.c2) FROM rt1 WHERE (((rt1.c3)&(((rt1.c1)>(rt1.c3)))));
SELECT ALL MAX(rt1.c2) FROM rt1 WHERE (((((rt1.c3)&(((rt1.c1)>(rt1.c3)))))AND(((rt1.c6)OR(rt1.c5)) COLLATE NOCASE))) ORDER BY (((rt1.c2)IS(rt1.c2)) IN (((rt1.c0)|(rt1.c6))))  NULLS FIRST, (- (rt1.c5)) COLLATE BINARY, (~ ((rt1.c3 IN ()))) LIMIT 3;
SELECT * FROM t0, rt1 WHERE (((((t0.c4) IS FALSE)) NOTNULL)) ORDER BY CAST(((rt1.c3)<<(t0.c3)) AS BLOB) DESC, CAST(((((0.49532721200402285)OR(t0.c1)))OR(rt1.c6)) AS NUMERIC) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((t0.c4) IS FALSE)) NOTNULL)) ORDER BY ((((rt1.c6)GLOB(t0.c4))) BETWEEN (((t0.c2)<>(rt1.c4))) AND (((rt1.c4)==(t0.c1)))) ASC  NULLS FIRST, (+ (((((rt1.c4)OR(0.8222500953104399)))AND(t0.c4)))) DESC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c1, rt1.c6, rt1.c1)) NOT BETWEEN ((((t0.c0) NOT NULL), ((rt1.c2) BETWEEN (rt1.c6) AND (rt1.c0)), rt1.c6 COLLATE RTRIM)) AND ((rt1.c1, rt1.c0, ((((((rt1.c4)OR(rt1.c1)))AND(rt1.c0)))AND(t0.c4)))))) ORDER BY ((((rt1.c6)GLOB(t0.c4))) BETWEEN (((t0.c2)!=(rt1.c4))) AND (((rt1.c4)==(t0.c1)))) ASC  NULLS FIRST, (+ (((((rt1.c4)OR(0.8222500953104399)))AND(t0.c4)))) DESC  NULLS FIRST LIMIT 1;
SELECT * FROM t0, rt1 WHERE (((((t0.c4) IS FALSE)) NOTNULL)) ORDER BY CAST(((rt1.c3)<<(t0.c3)) AS BLOB) DESC, CAST(((((0.49532721200402285)OR(t0.c1)))OR(rt1.c6)) AS NUMERIC) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((t0.c4) IS FALSE)) NOTNULL)) ORDER BY ((((rt1.c6)GLOB(t0.c4))) BETWEEN (((t0.c2)<>(rt1.c4))) AND (((rt1.c4)==(t0.c1)))) ASC  NULLS FIRST, (+ (((((rt1.c4)OR(0.8222500953104399)))AND(t0.c4)))) DESC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c1, rt1.c6, rt1.c1)) NOT BETWEEN ((((t0.c0) NOT NULL), ((rt1.c2) BETWEEN (rt1.c6) AND (rt1.c0)), rt1.c6 COLLATE RTRIM)) AND ((rt1.c1, rt1.c0, ((((((rt1.c4)OR(rt1.c1)))AND(rt1.c0)))AND(t0.c4)))))) ORDER BY ((((rt1.c6)GLOB(t0.c4))) BETWEEN (((t0.c2)!=(rt1.c4))) AND (((rt1.c4)==(t0.c1)))) ASC  NULLS FIRST, (+ (((((rt1.c4)OR(0.8222500953104399)))AND(t0.c4)))) DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c1 IN ())) BETWEEN (((rt1.c6)>>(rt1.c4))) AND ((((rt1.c2, x'14'))==((t0.c0, x'edec'))))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((rt1.c1 IN ())) BETWEEN (((rt1.c6)>>(rt1.c4))) AND ((((rt1.c2, x'14'))==((t0.c0, x'edec'))))))AND(((((((CASE t0.c1  WHEN t0.c2 THEN t0.c1 WHEN t0.c4 THEN rt1.c1 ELSE x'' END)OR(CASE WHEN rt1.c5 THEN rt1.c1 ELSE rt1.c2 END)))AND(((t0.c2) IS TRUE))))OR(CASE WHEN rt1.c3 THEN rt1.c6 END))))) ORDER BY ((((((((t0.c3)AND(rt1.c6)))OR(t0.c4)))AND(rt1.c4)))>>(((rt1.c2)AND(t0.c0)))), ((((t0.c3)|(rt1.c6))) BETWEEN (t0.c4) AND (((((((((((t0.c4)OR(t0.c4)))AND(t0.c2)))AND(rt1.c2)))AND(rt1.c3)))OR(t0.c2)))) DESC LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c1 IN ())) BETWEEN (((rt1.c6)>>(rt1.c4))) AND ((((rt1.c2, x'14'))==((t0.c0, x'edec'))))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((rt1.c1 IN ())) BETWEEN (((rt1.c6)>>(rt1.c4))) AND ((((rt1.c2, x'14'))==((t0.c0, x'edec'))))))AND(((((((CASE t0.c1  WHEN t0.c2 THEN t0.c1 WHEN t0.c4 THEN rt1.c1 ELSE x'' END)OR(CASE WHEN rt1.c5 THEN rt1.c1 ELSE rt1.c2 END)))AND(((t0.c2) IS TRUE))))OR(CASE WHEN rt1.c3 THEN rt1.c6 END))))) ORDER BY ((((((((t0.c3)AND(rt1.c6)))OR(t0.c4)))AND(rt1.c4)))>>(((rt1.c2)AND(t0.c0)))), ((((t0.c3)|(rt1.c6))) BETWEEN (t0.c4) AND (((((((((((t0.c4)OR(t0.c4)))AND(t0.c2)))AND(rt1.c2)))AND(rt1.c3)))OR(t0.c2)))) DESC LIMIT 1;
SELECT ALL MAX(rt1.c3) FROM rt1, t0 WHERE (((CASE rt1.c2  WHEN t0.c0 THEN t0.c2 END)>(((((((((x'')OR(t0.c1)))AND(t0.c1)))OR(t0.c3)))AND(rt1.c3))))) ORDER BY (rt1.c3 IN ()) COLLATE BINARY;
SELECT DISTINCT MAX(rt1.c3) FROM rt1, t0 WHERE (((CASE rt1.c2  WHEN t0.c0 THEN t0.c2 END)>(((((((((x'')OR(t0.c1)))AND(t0.c1)))OR(t0.c3)))AND(rt1.c3))))) ORDER BY rt1.c5 ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(rt1.c3) FROM rt1, t0 WHERE (TYPEOF(DISTINCT IFNULL(t0.c4, rt1.c0))) ORDER BY rt1.c5 ASC  NULLS LAST LIMIT 0;
SELECT MAX(t0.c1) FROM t0 WHERE (ABS(DISTINCT t0.c2) COLLATE RTRIM);
SELECT ALL MAX(t0.c1) FROM t0 WHERE (ABS(DISTINCT t0.c2) COLLATE RTRIM) INTERSECT SELECT ALL MAX(t0.c1) FROM t0 WHERE (x'');
SELECT MIN(rt1.c3) FROM rt1 WHERE ('TKzAUW');
SELECT MIN(rt1.c3) FROM rt1 WHERE ('TKzAUW') INTERSECT SELECT MIN(rt1.c3) FROM rt1 WHERE (((((rt1.c5)OR(rt1.c1))) BETWEEN ((((rt1.c3, 0.5840850916538401)) NOT BETWEEN ((rt1.c3, rt1.c1)) AND ((rt1.c1, rt1.c5)))) AND (rt1.c1 COLLATE NOCASE)));
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c2) ISNULL) THEN ((t0.c2)<>(t0.c0)) END) ORDER BY ((((t0.c1)IS(t0.c3))) NOT BETWEEN (LOWER(t0.c2)) AND (((t0.c0) BETWEEN (t0.c4) AND (t0.c2))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN ((t0.c2) ISNULL) THEN ((t0.c2)>(t0.c0)) END) ORDER BY ((((t0.c1)IS(t0.c3))) NOT BETWEEN (LOWER(t0.c2)) AND (((t0.c0) BETWEEN (t0.c4) AND (t0.c2))))  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c2))<((t0.c3))) COLLATE NOCASE) ORDER BY ((((t0.c1)IS(t0.c3))) NOT BETWEEN (LOWER(t0.c2)) AND (((t0.c0) BETWEEN (t0.c4) AND (t0.c2))))  NULLS LAST LIMIT 0x1;
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c2) ISNULL) THEN ((t0.c2)<>(t0.c0)) END) ORDER BY ((((t0.c1)IS(t0.c3))) NOT BETWEEN (LOWER(t0.c2)) AND (((t0.c0) BETWEEN (t0.c4) AND (t0.c2))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN ((t0.c2) ISNULL) THEN ((t0.c2)>(t0.c0)) END) ORDER BY ((((t0.c1)IS(t0.c3))) NOT BETWEEN (LOWER(t0.c2)) AND (((t0.c0) BETWEEN (t0.c4) AND (t0.c2))))  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c2))<((t0.c3))) COLLATE NOCASE) ORDER BY ((((t0.c1)IS(t0.c3))) NOT BETWEEN (LOWER(t0.c2)) AND (((t0.c0) BETWEEN (t0.c4) AND (t0.c2))))  NULLS LAST LIMIT 0x1;
SELECT MIN(rt1.c6) FROM rt1 NATURAL JOIN t0 WHERE (t0.c4);
SELECT MIN(rt1.c6) FROM rt1 NATURAL JOIN t0 WHERE (((t0.c4)AND((((rt1.c3) IS TRUE) IN ((- (rt1.c0))))))) ORDER BY ((((((CASE WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c1 END)AND((((t0.c1, rt1.c4, t0.c2))==((rt1.c1, rt1.c6, rt1.c6))))))AND(json_type(NULL))))OR('-1645165019')) DESC, ((rt1.c0)==(((t0.c3)LIKE(rt1.c6)))) INTERSECT SELECT ALL MIN(rt1.c6) FROM rt1 NATURAL JOIN t0 WHERE (CAST(rt1.c5 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((((CASE WHEN t0.c4 THEN t0.c1 WHEN t0.c3 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c1 END)AND((((t0.c1, rt1.c4, t0.c2))==((rt1.c1, rt1.c6, rt1.c6))))))AND(json_type(NULL))))OR('-1645165019')) DESC, ((rt1.c0)=(((t0.c3)LIKE(rt1.c6))));
SELECT COUNT(*) FROM rt1, t0 WHERE (rt1.c3) ORDER BY CAST(((rt1.c1) ISNULL) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (rt1.c3) ORDER BY (PRINTF(t0.c1) IN (TRIM(t0.c2))), CASE CASE WHEN rt1.c4 THEN rt1.c0 ELSE t0.c1 END  WHEN rt1.c6 THEN (((t0.c4, t0.c2, t0.c3))<((-320385104, rt1.c3, t0.c2))) ELSE CASE rt1.c4  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c4 THEN t0.c2 WHEN '1934950711' THEN rt1.c0 END END DESC, ((((rt1.c3)*(t0.c4)))<(((rt1.c5) ISNULL))) INTERSECT SELECT COUNT(*) FROM rt1, t0 WHERE (((((((((((((rt1.c5)AND(t0.c0)))OR('73熯')))OR(rt1.c2)))AND(t0.c1)))OR(CAST(rt1.c1 AS TEXT))))AND(NULL COLLATE BINARY))) ORDER BY (PRINTF(t0.c1) IN (TRIM(t0.c2))), CASE CASE WHEN rt1.c4 THEN rt1.c0 ELSE t0.c1 END  WHEN rt1.c6 THEN (((t0.c4, t0.c2, t0.c3))<((0xffffffffece74fb0, rt1.c3, t0.c2))) ELSE CASE rt1.c4  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c4 THEN t0.c2 WHEN '1934950711' THEN rt1.c0 END END DESC, ((((rt1.c3)*(t0.c4)))<(((rt1.c5) ISNULL)));
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON rt1.c6 WHERE (((((rt1.c1)OR(rt1.c4)))OR(rt1.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON rt1.c6 WHERE (((((((rt1.c1)OR(rt1.c4)))OR(rt1.c1)) COLLATE NOCASE)AND(t0.c4))) LIMIT 0X0;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON rt1.c6 WHERE (((((rt1.c1)OR(rt1.c4)))OR(rt1.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON rt1.c6 WHERE (((((((rt1.c1)OR(rt1.c4)))OR(rt1.c1)) COLLATE NOCASE)AND(t0.c4))) LIMIT 0X0;
SELECT * FROM rt1, t0 WHERE ((~ (t0.c1)) COLLATE RTRIM) ORDER BY rt1.c6 DESC;
SELECT * FROM rt1, t0 WHERE ((~ (t0.c1)) COLLATE RTRIM) ORDER BY rt1.c6 DESC INTERSECT SELECT * FROM rt1, t0 WHERE (((json_array_length(rt1.c3)) IS FALSE)) ORDER BY rt1.c6 DESC;
SELECT * FROM rt1, t0 WHERE ((~ (t0.c1)) COLLATE RTRIM) ORDER BY rt1.c6 DESC;
SELECT * FROM rt1, t0 WHERE ((~ (t0.c1)) COLLATE RTRIM) ORDER BY rt1.c6 DESC INTERSECT SELECT * FROM rt1, t0 WHERE (((json_array_length(rt1.c3)) IS FALSE)) ORDER BY rt1.c6 DESC;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (((t0.c1, rt1.c3))>((rt1.c5, rt1.c4))) COLLATE BINARY WHERE (json_remove((t0.c2 IN (t0.c4)), t0.c1));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (((t0.c1, rt1.c3))>((rt1.c5, rt1.c4))) COLLATE BINARY WHERE (json_remove((t0.c2 IN (t0.c4)), t0.c1)) LIMIT 0x1;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (((t0.c1, rt1.c3))>((rt1.c5, rt1.c4))) COLLATE BINARY WHERE (json_remove((t0.c2 IN (t0.c4)), t0.c1));
SELECT ALL * FROM t0 WHERE (((t0.c2)<>(t0.c4)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((((t0.c2)<(t0.c4)) COLLATE RTRIM)AND('KU?᣾9'))) INTERSECT SELECT * FROM t0 WHERE (((t0.c2 COLLATE RTRIM) NOTNULL));
SELECT ALL * FROM t0 WHERE (((t0.c2)<>(t0.c4)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((((t0.c2)<(t0.c4)) COLLATE RTRIM)AND('KU?᣾9'))) INTERSECT SELECT * FROM t0 WHERE (((t0.c2 COLLATE RTRIM) NOTNULL));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (x'');
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((x'')AND(rt1.c4))) ORDER BY LIKELIHOOD(DISTINCT rt1.c5, rt1.c5) COLLATE RTRIM  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((CASE WHEN t0.c4 THEN t0.c0 ELSE t0.c4 END) IS FALSE)) ORDER BY LIKELIHOOD(DISTINCT rt1.c5, rt1.c5) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (((UNLIKELY(NULL)) NOT BETWEEN (CASE rt1.c6  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END) AND (CASE rt1.c2  WHEN t0.c0 THEN t0.c0 END))) ORDER BY LENGTH(t0.c3)  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (((((UNLIKELY(NULL)) NOT BETWEEN (CASE rt1.c6  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END) AND (CASE rt1.c2  WHEN t0.c0 THEN t0.c0 END)))AND(CASE (+ ('1173830580'))  WHEN ((t0.c4)IS NOT(rt1.c6)) THEN ((t0.c0)IS(rt1.c3)) WHEN ((t0.c3)<<(rt1.c5)) THEN t0.c0 WHEN (((rt1.c1, rt1.c6, t0.c2, NULL))<(('0.5282283957617471', t0.c3, rt1.c0, rt1.c5))) THEN ((t0.c4)GLOB(t0.c4)) ELSE (t0.c3 IN (rt1.c3, rt1.c4)) END))) ORDER BY LENGTH(t0.c3)  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (((UNLIKELY(NULL)) NOT BETWEEN (CASE rt1.c6  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END) AND (CASE rt1.c2  WHEN t0.c0 THEN t0.c0 END))) ORDER BY LENGTH(t0.c3)  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (((((UNLIKELY(NULL)) NOT BETWEEN (CASE rt1.c6  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END) AND (CASE rt1.c2  WHEN t0.c0 THEN t0.c0 END)))AND(CASE (+ ('1173830580'))  WHEN ((t0.c4)IS NOT(rt1.c6)) THEN ((t0.c0)IS(rt1.c3)) WHEN ((t0.c3)<<(rt1.c5)) THEN t0.c0 WHEN (((rt1.c1, rt1.c6, t0.c2, NULL))<(('0.5282283957617471', t0.c3, rt1.c0, rt1.c5))) THEN ((t0.c4)GLOB(t0.c4)) ELSE (t0.c3 IN (rt1.c3, rt1.c4)) END))) ORDER BY LENGTH(t0.c3)  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON CAST(((t0.c3)LIKE(rt1.c2)) AS TEXT) WHERE (((rt1.c5) BETWEEN (t0.c3) AND (rt1.c1)) COLLATE NOCASE) ORDER BY ((LOWER(DISTINCT 'ym半c<n,e\'))/(CASE WHEN rt1.c5 THEN rt1.c2 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON CAST(((t0.c3)LIKE(rt1.c2)) AS TEXT) WHERE (((rt1.c5) BETWEEN (t0.c3) AND (rt1.c1)) COLLATE NOCASE) ORDER BY ((LOWER(DISTINCT 'ym半c<n,e\'))/(CASE WHEN rt1.c5 THEN rt1.c2 END)) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0 CROSS JOIN rt1 ON CAST(((t0.c3)LIKE(rt1.c2)) AS TEXT) WHERE (((((t0.c3)IS(t0.c3))) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c1)) AND ((rt1.c5)))) AND ((((rt1.c2)) BETWEEN ((t0.c1)) AND ((t0.c2)))))) ORDER BY ((LOWER(DISTINCT 'ym半c<n,e\'))/(CASE WHEN rt1.c5 THEN rt1.c2 END)) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON CAST(((t0.c3)LIKE(rt1.c2)) AS TEXT) WHERE (((rt1.c5) BETWEEN (t0.c3) AND (rt1.c1)) COLLATE NOCASE) ORDER BY ((LOWER(DISTINCT 'ym半c<n,e\'))/(CASE WHEN rt1.c5 THEN rt1.c2 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON CAST(((t0.c3)LIKE(rt1.c2)) AS TEXT) WHERE (((rt1.c5) BETWEEN (t0.c3) AND (rt1.c1)) COLLATE NOCASE) ORDER BY ((LOWER(DISTINCT 'ym半c<n,e\'))/(CASE WHEN rt1.c5 THEN rt1.c2 END)) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0 CROSS JOIN rt1 ON CAST(((t0.c3)LIKE(rt1.c2)) AS TEXT) WHERE (((((t0.c3)IS(t0.c3))) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c1)) AND ((rt1.c5)))) AND ((((rt1.c2)) BETWEEN ((t0.c1)) AND ((t0.c2)))))) ORDER BY ((LOWER(DISTINCT 'ym半c<n,e\'))/(CASE WHEN rt1.c5 THEN rt1.c2 END)) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c1, t0.c3, rt1.c4)) NOT BETWEEN (((NOT (rt1.c1)), (NOT (t0.c3)), CASE WHEN rt1.c6 THEN rt1.c6 WHEN t0.c2 THEN rt1.c2 WHEN x'' THEN t0.c4 ELSE rt1.c6 END)) AND ((((0.4875802708536756)%(rt1.c0)), (t0.c2 IN (rt1.c4)), COALESCE(rt1.c4, t0.c1))))) ORDER BY (((('-1050996115')>>(t0.c4)))%((~ (rt1.c2)))) ASC, LIKELIHOOD(PRINTF(t0.c2), rt1.c6 COLLATE BINARY) ASC  NULLS LAST;
SELECT * FROM t0, rt1 WHERE ((((t0.c1, t0.c3, rt1.c4)) NOT BETWEEN (((NOT (rt1.c1)), (NOT (t0.c3)), CASE WHEN rt1.c6 THEN rt1.c6 WHEN t0.c2 THEN rt1.c2 WHEN x'' THEN t0.c4 ELSE rt1.c6 END)) AND ((((0.4875802708536756)%(rt1.c0)), (t0.c2 IN (rt1.c4)), COALESCE(rt1.c4, t0.c1))))) ORDER BY (((('-1050996115')>>(t0.c4)))%((~ (rt1.c2)))) ASC, LIKELIHOOD(PRINTF(t0.c2), rt1.c6 COLLATE BINARY) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM t0, rt1 WHERE (UPPER(DISTINCT (NULL IN (rt1.c0)))) ORDER BY (((('-1050996115')>>(t0.c4)))%((~ (rt1.c2)))) ASC, LIKELIHOOD(PRINTF(t0.c2), rt1.c6 COLLATE BINARY) ASC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c1, t0.c3, rt1.c4)) NOT BETWEEN (((NOT (rt1.c1)), (NOT (t0.c3)), CASE WHEN rt1.c6 THEN rt1.c6 WHEN t0.c2 THEN rt1.c2 WHEN x'' THEN t0.c4 ELSE rt1.c6 END)) AND ((((0.4875802708536756)%(rt1.c0)), (t0.c2 IN (rt1.c4)), COALESCE(rt1.c4, t0.c1))))) ORDER BY (((('-1050996115')>>(t0.c4)))%((~ (rt1.c2)))) ASC, LIKELIHOOD(PRINTF(t0.c2), rt1.c6 COLLATE BINARY) ASC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (((((((((((((((rt1.c2) IS FALSE))OR(((((((rt1.c2)AND(rt1.c1)))OR(0.3832386726858822)))OR(rt1.c5)))))AND(0X69350c2f)))AND(1.787676078E9)))AND(rt1.c0 COLLATE BINARY)))OR(CASE x''  WHEN t0.c0 THEN rt1.c6 WHEN rt1.c1 THEN t0.c1 WHEN t0.c0 THEN rt1.c0 END)))OR(((((t0.c3)AND(NULL)))OR(t0.c3))))) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (((((((((((((((((rt1.c2) IS FALSE))OR(((((((rt1.c2)AND(rt1.c1)))OR(0.3832386726858822)))OR(rt1.c5)))))AND(1765084207)))AND(1.787676078E9)))AND(rt1.c0 COLLATE BINARY)))OR(CASE x''  WHEN t0.c0 THEN rt1.c6 WHEN rt1.c1 THEN t0.c1 WHEN t0.c0 THEN rt1.c0 END)))OR(((((t0.c3)AND(NULL)))OR(t0.c3)))))AND('292240954'))) ORDER BY (((+ (rt1.c0))) BETWEEN ((t0.c4 IN (NULL))) AND (rt1.c2 COLLATE RTRIM)) DESC, NULL ASC, CASE WHEN rt1.c6 THEN rt1.c6 WHEN t0.c3 THEN t0.c2 END COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (((((((((((((((rt1.c2) IS FALSE))OR(((((((rt1.c2)AND(rt1.c1)))OR(0.3832386726858822)))OR(rt1.c5)))))AND(0X69350c2f)))AND(1.787676078E9)))AND(rt1.c0 COLLATE BINARY)))OR(CASE x''  WHEN t0.c0 THEN rt1.c6 WHEN rt1.c1 THEN t0.c1 WHEN t0.c0 THEN rt1.c0 END)))OR(((((t0.c3)AND(NULL)))OR(t0.c3))))) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (((((((((((((((((rt1.c2) IS FALSE))OR(((((((rt1.c2)AND(rt1.c1)))OR(0.3832386726858822)))OR(rt1.c5)))))AND(1765084207)))AND(1.787676078E9)))AND(rt1.c0 COLLATE BINARY)))OR(CASE x''  WHEN t0.c0 THEN rt1.c6 WHEN rt1.c1 THEN t0.c1 WHEN t0.c0 THEN rt1.c0 END)))OR(((((t0.c3)AND(NULL)))OR(t0.c3)))))AND('292240954'))) ORDER BY (((+ (rt1.c0))) BETWEEN ((t0.c4 IN (NULL))) AND (rt1.c2 COLLATE RTRIM)) DESC, NULL ASC, CASE WHEN rt1.c6 THEN rt1.c6 WHEN t0.c3 THEN t0.c2 END COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (0.07549142447844681) ORDER BY ((((((((((((((((rt1.c6)OR(rt1.c6)))AND(rt1.c6)))AND('-889508270')))AND(t0.c0)))AND(rt1.c4)))OR(LIKELY(NULL))))OR(CAST(t0.c1 AS BLOB))))AND(((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c5)))) DESC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (((0.07549142447844681)AND(((CAST(rt1.c3 AS BLOB)) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (rt1.c6))) AND (((((t0.c2)AND(rt1.c5)))AND(rt1.c6))))))) ORDER BY ((((((((((((((((rt1.c6)OR(rt1.c6)))AND(rt1.c6)))AND('-889508270')))AND(t0.c0)))AND(rt1.c4)))OR(LIKELY(NULL))))OR(CAST(t0.c1 AS BLOB))))AND(((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c5)))) DESC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (0.07549142447844681) ORDER BY ((((((((((((((((rt1.c6)OR(rt1.c6)))AND(rt1.c6)))AND('-889508270')))AND(t0.c0)))AND(rt1.c4)))OR(LIKELY(NULL))))OR(CAST(t0.c1 AS BLOB))))AND(((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c5)))) DESC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (((0.07549142447844681)AND(((CAST(rt1.c3 AS BLOB)) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (rt1.c6))) AND (((((t0.c2)AND(rt1.c5)))AND(rt1.c6))))))) ORDER BY ((((((((((((((((rt1.c6)OR(rt1.c6)))AND(rt1.c6)))AND('-889508270')))AND(t0.c0)))AND(rt1.c4)))OR(LIKELY(NULL))))OR(CAST(t0.c1 AS BLOB))))AND(((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c5)))) DESC  NULLS FIRST;
SELECT MAX(rt1.c3) FROM rt1 WHERE (CAST(TRIM(DISTINCT rt1.c5) AS NUMERIC)) ORDER BY UPPER(DISTINCT (rt1.c1 IN ()));
SELECT MAX(rt1.c3) FROM rt1 WHERE (CAST(TRIM(DISTINCT rt1.c5) AS NUMERIC)) ORDER BY (('')<<(COALESCE(rt1.c5, rt1.c5, rt1.c5, rt1.c0, 2.102086614E9))), CASE WHEN ((rt1.c4)<=(rt1.c5)) THEN ((((((((rt1.c1)AND(rt1.c6)))AND(rt1.c1)))OR(rt1.c1)))AND('DC.b55Gb')) WHEN (((rt1.c3, rt1.c4))<((rt1.c1, rt1.c4))) THEN ((rt1.c1)||(rt1.c2)) ELSE (rt1.c2 IN ()) END DESC INTERSECT SELECT MAX(rt1.c3) FROM rt1 WHERE ('1664405135') ORDER BY (('')<<(COALESCE(rt1.c5, rt1.c5, rt1.c5, rt1.c0, 2.102086614E9))), CASE WHEN ((rt1.c4)<=(rt1.c5)) THEN ((((((((rt1.c1)AND(rt1.c6)))AND(rt1.c1)))OR(rt1.c1)))AND('DC.b55Gb')) WHEN (((rt1.c3, rt1.c4))<((rt1.c1, rt1.c4))) THEN ((rt1.c1)||(rt1.c2)) ELSE (rt1.c2 IN ()) END DESC;
SELECT ALL * FROM rt1, t0 WHERE ((((NOT (rt1.c4))) NOT BETWEEN (((((rt1.c6)AND(rt1.c0)))OR(t0.c4))) AND (NULL)));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((NOT (rt1.c4))) NOT BETWEEN (((((rt1.c6)AND(rt1.c0)))OR(t0.c4))) AND (NULL)));
SELECT ALL * FROM rt1, t0 WHERE ((((NOT (rt1.c4))) NOT BETWEEN (((((rt1.c6)AND(rt1.c0)))OR(t0.c4))) AND (NULL)));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((NOT (rt1.c4))) NOT BETWEEN (((((rt1.c6)AND(rt1.c0)))OR(t0.c4))) AND (NULL)));
SELECT * FROM rt1 WHERE (CASE rt1.c5 COLLATE NOCASE  WHEN ((rt1.c6)||(rt1.c6)) THEN ((rt1.c0) NOT BETWEEN (rt1.c4) AND (NULL)) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (NULL)) WHEN (rt1.c6 IN (rt1.c1)) THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c5 END END);
SELECT * FROM rt1 WHERE (CASE rt1.c5 COLLATE NOCASE  WHEN ((rt1.c6)||(rt1.c6)) THEN ((rt1.c0) NOT BETWEEN (rt1.c4) AND (NULL)) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (NULL)) WHEN (rt1.c6 IN (rt1.c1)) THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c5 END END) ORDER BY CASE ((((3.03395121E8)AND('953423655')))AND(rt1.c1))  WHEN ((rt1.c2)*(rt1.c0)) THEN (rt1.c1 IN (rt1.c3)) WHEN ((rt1.c1) IS FALSE) THEN CAST(rt1.c6 AS TEXT) WHEN LIKELIHOOD(DISTINCT NULL, rt1.c3) THEN CAST(rt1.c2 AS TEXT) ELSE ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) END ASC, (((('2102086614')||(rt1.c3))) BETWEEN (((rt1.c2)=(rt1.c3))) AND (JULIANDAY(rt1.c6, rt1.c0, rt1.c2))) ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT * FROM rt1 WHERE ((NOT (((rt1.c1) IS TRUE)))) ORDER BY CASE ((((3.03395121E8)AND('953423655')))AND(rt1.c1))  WHEN ((rt1.c2)*(rt1.c0)) THEN (rt1.c1 IN (rt1.c3)) WHEN ((rt1.c1) IS FALSE) THEN CAST(rt1.c6 AS TEXT) WHEN LIKELIHOOD(DISTINCT NULL, rt1.c3) THEN CAST(rt1.c2 AS TEXT) ELSE ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) END ASC, (((('2102086614')||(rt1.c3))) BETWEEN (((rt1.c2)=(rt1.c3))) AND (JULIANDAY(rt1.c6, rt1.c0, rt1.c2))) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM rt1 WHERE (CASE rt1.c5 COLLATE NOCASE  WHEN ((rt1.c6)||(rt1.c6)) THEN ((rt1.c0) NOT BETWEEN (rt1.c4) AND (NULL)) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (NULL)) WHEN (rt1.c6 IN (rt1.c1)) THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c5 END END);
SELECT * FROM rt1 WHERE (CASE rt1.c5 COLLATE NOCASE  WHEN ((rt1.c6)||(rt1.c6)) THEN ((rt1.c0) NOT BETWEEN (rt1.c4) AND (NULL)) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (NULL)) WHEN (rt1.c6 IN (rt1.c1)) THEN (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c5 END END) ORDER BY CASE ((((3.03395121E8)AND('953423655')))AND(rt1.c1))  WHEN ((rt1.c2)*(rt1.c0)) THEN (rt1.c1 IN (rt1.c3)) WHEN ((rt1.c1) IS FALSE) THEN CAST(rt1.c6 AS TEXT) WHEN LIKELIHOOD(DISTINCT NULL, rt1.c3) THEN CAST(rt1.c2 AS TEXT) ELSE ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) END ASC, (((('2102086614')||(rt1.c3))) BETWEEN (((rt1.c2)=(rt1.c3))) AND (JULIANDAY(rt1.c6, rt1.c0, rt1.c2))) ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT * FROM rt1 WHERE ((NOT (((rt1.c1) IS TRUE)))) ORDER BY CASE ((((3.03395121E8)AND('953423655')))AND(rt1.c1))  WHEN ((rt1.c2)*(rt1.c0)) THEN (rt1.c1 IN (rt1.c3)) WHEN ((rt1.c1) IS FALSE) THEN CAST(rt1.c6 AS TEXT) WHEN LIKELIHOOD(DISTINCT NULL, rt1.c3) THEN CAST(rt1.c2 AS TEXT) ELSE ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) END ASC, (((('2102086614')||(rt1.c3))) BETWEEN (((rt1.c2)=(rt1.c3))) AND (JULIANDAY(rt1.c6, rt1.c0, rt1.c2))) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM rt1 WHERE (((((((rt1.c3)OR(rt1.c6)))OR(rt1.c4)))AND(rt1.c5)) COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c3)OR(rt1.c6)))OR(rt1.c4)))AND(rt1.c5)) COLLATE RTRIM) ORDER BY (((NULL)) BETWEEN ((((((x'127b9b')OR(rt1.c0)))AND(rt1.c6)))) AND (((((rt1.c6, rt1.c0)) NOT BETWEEN ((rt1.c6, rt1.c4)) AND ((rt1.c4, rt1.c3)))))) ASC  NULLS FIRST, TRIM(DISTINCT NULLIF(rt1.c3, rt1.c1), CASE rt1.c5  WHEN rt1.c1 THEN '-543892107' WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c1 THEN NULL END) DESC, CASE x'7a'  WHEN 0.18991630170637808 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN x'1a74' THEN x'49' WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c5 END COLLATE NOCASE LIMIT 0x0 INTERSECT SELECT ALL * FROM rt1 WHERE (((NULL)==(x''))) ORDER BY (((NULL)) BETWEEN ((((((x'127b9b')OR(rt1.c0)))AND(rt1.c6)))) AND (((((rt1.c6, rt1.c0)) NOT BETWEEN ((rt1.c6, rt1.c4)) AND ((rt1.c4, rt1.c3)))))) ASC  NULLS FIRST, TRIM(DISTINCT NULLIF(rt1.c3, rt1.c1), CASE rt1.c5  WHEN rt1.c1 THEN '-543892107' WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c1 THEN NULL END) DESC, CASE x'7a'  WHEN 0.18991630170637808 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN x'1a74' THEN x'49' WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c5 END COLLATE NOCASE LIMIT 0;
SELECT * FROM rt1 WHERE (((((((rt1.c3)OR(rt1.c6)))OR(rt1.c4)))AND(rt1.c5)) COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c3)OR(rt1.c6)))OR(rt1.c4)))AND(rt1.c5)) COLLATE RTRIM) ORDER BY (((NULL)) BETWEEN ((((((x'127b9b')OR(rt1.c0)))AND(rt1.c6)))) AND (((((rt1.c6, rt1.c0)) NOT BETWEEN ((rt1.c6, rt1.c4)) AND ((rt1.c4, rt1.c3)))))) ASC  NULLS FIRST, TRIM(DISTINCT NULLIF(rt1.c3, rt1.c1), CASE rt1.c5  WHEN rt1.c1 THEN '-543892107' WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c1 THEN NULL END) DESC, CASE x'7a'  WHEN 0.18991630170637808 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN x'1a74' THEN x'49' WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c5 END COLLATE NOCASE LIMIT 0x0 INTERSECT SELECT ALL * FROM rt1 WHERE (((NULL)==(x''))) ORDER BY (((NULL)) BETWEEN ((((((x'127b9b')OR(rt1.c0)))AND(rt1.c6)))) AND (((((rt1.c6, rt1.c0)) NOT BETWEEN ((rt1.c6, rt1.c4)) AND ((rt1.c4, rt1.c3)))))) ASC  NULLS FIRST, TRIM(DISTINCT NULLIF(rt1.c3, rt1.c1), CASE rt1.c5  WHEN rt1.c1 THEN '-543892107' WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c1 THEN NULL END) DESC, CASE x'7a'  WHEN 0.18991630170637808 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN x'1a74' THEN x'49' WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c5 END COLLATE NOCASE LIMIT 0;
SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((NULL)|(t0.c3)) COLLATE NOCASE WHERE (((CASE WHEN rt1.c2 THEN t0.c0 ELSE rt1.c0 END) NOT NULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON ((NULL)|(t0.c3)) COLLATE NOCASE WHERE (((CASE WHEN rt1.c2 THEN t0.c0 ELSE rt1.c0 END) NOT NULL)) ORDER BY CAST((~ (rt1.c4)) AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((NULL)|(t0.c3)) COLLATE NOCASE WHERE (((CASE WHEN rt1.c2 THEN t0.c0 ELSE rt1.c0 END) NOT NULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON ((NULL)|(t0.c3)) COLLATE NOCASE WHERE (((CASE WHEN rt1.c2 THEN t0.c0 ELSE rt1.c0 END) NOT NULL)) ORDER BY CAST((~ (rt1.c4)) AS BLOB) DESC  NULLS FIRST;
SELECT ALL MIN(t0.c1) FROM rt1, t0 WHERE (((CAST(t0.c0 AS TEXT)) NOT BETWEEN (rt1.c6) AND ((rt1.c1 IN (rt1.c0)))));
SELECT DISTINCT MIN(t0.c1) FROM rt1, t0 WHERE (((((CAST(t0.c0 AS TEXT)) NOT BETWEEN (rt1.c6) AND ((rt1.c1 IN (rt1.c0)))))AND(((((rt1.c0) ISNULL))*(CAST(rt1.c2 AS NUMERIC)))))) LIMIT 0;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c1 COLLATE BINARY)AND(x'4e')))AND('410541421')) WHERE ((((CASE rt1.c0  WHEN NULL THEN t0.c1 END))<(((((t0.c2))<((t0.c3))))))) ORDER BY x''  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((NULL)) AND ((json_quote(t0.c4))));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c1 COLLATE BINARY)AND(x'4e')))AND('410541421')) WHERE ((((CASE rt1.c0  WHEN NULL THEN t0.c1 END))<(((((t0.c2))<((t0.c3))))))) ORDER BY (((t0.c2)) BETWEEN ((((t0.c2) NOTNULL))) AND ((((rt1.c2)+(t0.c3))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c1 COLLATE BINARY)AND(x'4e')))AND('410541421')) WHERE (((((((((t0.c0)AND(t0.c2)))OR(rt1.c3)))OR(x'15')))OR(rt1.c1)) COLLATE BINARY) ORDER BY (((t0.c2)) BETWEEN ((((t0.c2) NOTNULL))) AND ((((rt1.c2)+(t0.c3))))) LIMIT 0X1;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c1 COLLATE BINARY)AND(x'4e')))AND('410541421')) WHERE ((((CASE rt1.c0  WHEN NULL THEN t0.c1 END))<(((((t0.c2))<((t0.c3))))))) ORDER BY x''  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((NULL)) AND ((json_quote(t0.c4))));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c1 COLLATE BINARY)AND(x'4e')))AND('410541421')) WHERE ((((CASE rt1.c0  WHEN NULL THEN t0.c1 END))<(((((t0.c2))<((t0.c3))))))) ORDER BY (((t0.c2)) BETWEEN ((((t0.c2) NOTNULL))) AND ((((rt1.c2)+(t0.c3))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c1 COLLATE BINARY)AND(x'4e')))AND('410541421')) WHERE (((((((((t0.c0)AND(t0.c2)))OR(rt1.c3)))OR(x'15')))OR(rt1.c1)) COLLATE BINARY) ORDER BY (((t0.c2)) BETWEEN ((((t0.c2) NOTNULL))) AND ((((rt1.c2)+(t0.c3))))) LIMIT 0X1;
SELECT * FROM rt1 WHERE ((((NULL)LIKE(rt1.c4)) IN ()));
SELECT DISTINCT * FROM rt1 WHERE ((((((NULL)LIKE(rt1.c4)) IN ()))AND(CASE CASE WHEN rt1.c3 THEN x'74' ELSE rt1.c6 END  WHEN ((0xfffffffffdca05a1) NOT BETWEEN (rt1.c2) AND (1706904592)) THEN (((rt1.c0))==((rt1.c5))) WHEN ((rt1.c0)&(rt1.c0)) THEN CAST(rt1.c5 AS BLOB) ELSE rt1.c2 COLLATE BINARY END))) ORDER BY CASE (~ (rt1.c1))  WHEN LIKELIHOOD(DISTINCT rt1.c0, rt1.c3) THEN LIKELIHOOD(DISTINCT rt1.c4, rt1.c2) WHEN (- (rt1.c5)) THEN ((rt1.c6) NOT BETWEEN (rt1.c1) AND (rt1.c3)) WHEN (+ (rt1.c6)) THEN CASE rt1.c6  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END WHEN rt1.c6 COLLATE RTRIM THEN highlight(rt1.c1, rt1.c0, rt1.c0, rt1.c3) END  NULLS FIRST, ((((rt1.c6)<=(rt1.c0))) NOTNULL) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN ((NOT (rt1.c6))) AND (((((rt1.c4)AND(rt1.c2)))OR(rt1.c6))))) ORDER BY CASE (~ (rt1.c1))  WHEN LIKELIHOOD(DISTINCT rt1.c0, rt1.c3) THEN LIKELIHOOD(DISTINCT rt1.c4, rt1.c2) WHEN (- (rt1.c5)) THEN ((rt1.c6) NOT BETWEEN (rt1.c1) AND (rt1.c3)) WHEN (+ (rt1.c6)) THEN CASE rt1.c6  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END WHEN rt1.c6 COLLATE RTRIM THEN highlight(rt1.c1, rt1.c0, rt1.c0, rt1.c3) END  NULLS FIRST, ((((rt1.c6)<=(rt1.c0))) NOTNULL) LIMIT 0;
SELECT * FROM rt1 WHERE ((((NULL)LIKE(rt1.c4)) IN ()));
SELECT DISTINCT * FROM rt1 WHERE ((((((NULL)LIKE(rt1.c4)) IN ()))AND(CASE CASE WHEN rt1.c3 THEN x'74' ELSE rt1.c6 END  WHEN ((0xfffffffffdca05a1) NOT BETWEEN (rt1.c2) AND (1706904592)) THEN (((rt1.c0))==((rt1.c5))) WHEN ((rt1.c0)&(rt1.c0)) THEN CAST(rt1.c5 AS BLOB) ELSE rt1.c2 COLLATE BINARY END))) ORDER BY CASE (~ (rt1.c1))  WHEN LIKELIHOOD(DISTINCT rt1.c0, rt1.c3) THEN LIKELIHOOD(DISTINCT rt1.c4, rt1.c2) WHEN (- (rt1.c5)) THEN ((rt1.c6) NOT BETWEEN (rt1.c1) AND (rt1.c3)) WHEN (+ (rt1.c6)) THEN CASE rt1.c6  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END WHEN rt1.c6 COLLATE RTRIM THEN highlight(rt1.c1, rt1.c0, rt1.c0, rt1.c3) END  NULLS FIRST, ((((rt1.c6)<=(rt1.c0))) NOTNULL) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN ((NOT (rt1.c6))) AND (((((rt1.c4)AND(rt1.c2)))OR(rt1.c6))))) ORDER BY CASE (~ (rt1.c1))  WHEN LIKELIHOOD(DISTINCT rt1.c0, rt1.c3) THEN LIKELIHOOD(DISTINCT rt1.c4, rt1.c2) WHEN (- (rt1.c5)) THEN ((rt1.c6) NOT BETWEEN (rt1.c1) AND (rt1.c3)) WHEN (+ (rt1.c6)) THEN CASE rt1.c6  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END WHEN rt1.c6 COLLATE RTRIM THEN highlight(rt1.c1, rt1.c0, rt1.c0, rt1.c3) END  NULLS FIRST, ((((rt1.c6)<=(rt1.c0))) NOTNULL) LIMIT 0;
SELECT MAX(rt1.c6) FROM rt1 WHERE (((((rt1.c5)IS(rt1.c2))) IS TRUE)) ORDER BY (x'3e' IN ())  NULLS FIRST, ((CAST(rt1.c1 AS TEXT)) BETWEEN (((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c5))) AND (((((((rt1.c6)OR(-1851974070)))OR(rt1.c0)))AND(rt1.c2)))) DESC  NULLS LAST;
SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE (((((((rt1.c5)IS(rt1.c2))) IS TRUE))AND(CASE WHEN rt1.c1 THEN CASE rt1.c5  WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c2 END ELSE CAST(rt1.c0 AS INTEGER) END))) ORDER BY (x'3e' IN ())  NULLS FIRST, ((CAST(rt1.c1 AS TEXT)) BETWEEN (((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c5))) AND (((((((rt1.c6)OR(-1851974070)))OR(rt1.c0)))AND(rt1.c2)))) DESC  NULLS LAST INTERSECT SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE ((rt1.c1 COLLATE RTRIM IN ())) ORDER BY (x'3e' IN ())  NULLS FIRST, ((CAST(rt1.c1 AS TEXT)) BETWEEN (((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c5))) AND (((((((rt1.c6)OR(-1851974070)))OR(rt1.c0)))AND(rt1.c2)))) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (NULLIF(DISTINCT 0.32616695427251474, LIKE(rt1.c5, NULL))) ORDER BY ((((((rt1.c6) NOTNULL))OR(rt1.c0 COLLATE RTRIM)))OR(CAST(rt1.c2 AS INTEGER))) ASC, (~ (rt1.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (((NULLIF(DISTINCT 0.32616695427251474, LIKE(rt1.c5, NULL)))AND((((rt1.c5 IN (rt1.c5, rt1.c2, rt1.c6))) IS FALSE)))) ORDER BY ((((((rt1.c6) NOTNULL))OR(rt1.c0 COLLATE RTRIM)))OR(CAST(rt1.c2 AS INTEGER))) ASC, (~ (rt1.c2)) COLLATE NOCASE  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c2 IN (rt1.c4, rt1.c1)))+(((rt1.c2)>=(rt1.c5))))) ORDER BY ((((((rt1.c6) NOTNULL))OR(rt1.c0 COLLATE RTRIM)))OR(CAST(rt1.c2 AS INTEGER))) ASC, (~ (rt1.c2)) COLLATE NOCASE  NULLS FIRST LIMIT 0X2;
SELECT * FROM rt1 WHERE (NULLIF(DISTINCT 0.32616695427251474, LIKE(rt1.c5, NULL))) ORDER BY ((((((rt1.c6) NOTNULL))OR(rt1.c0 COLLATE RTRIM)))OR(CAST(rt1.c2 AS INTEGER))) ASC, (~ (rt1.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (((NULLIF(DISTINCT 0.32616695427251474, LIKE(rt1.c5, NULL)))AND((((rt1.c5 IN (rt1.c5, rt1.c2, rt1.c6))) IS FALSE)))) ORDER BY ((((((rt1.c6) NOTNULL))OR(rt1.c0 COLLATE RTRIM)))OR(CAST(rt1.c2 AS INTEGER))) ASC, (~ (rt1.c2)) COLLATE NOCASE  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c2 IN (rt1.c4, rt1.c1)))+(((rt1.c2)>=(rt1.c5))))) ORDER BY ((((((rt1.c6) NOTNULL))OR(rt1.c0 COLLATE RTRIM)))OR(CAST(rt1.c2 AS INTEGER))) ASC, (~ (rt1.c2)) COLLATE NOCASE  NULLS FIRST LIMIT 0X2;
SELECT * FROM t0, rt1 WHERE ('0.7390647611456276');
SELECT DISTINCT * FROM t0, rt1 WHERE ((('0.7390647611456276')AND(CAST(CAST(rt1.c5 AS INTEGER) AS NUMERIC)))) ORDER BY CASE WHEN CAST(0.8095110720425828 AS TEXT) THEN ((rt1.c5) NOTNULL) END  NULLS LAST, ((rt1.c1)<(((rt1.c3)IS NOT(t0.c1))))  NULLS LAST LIMIT 4;
SELECT * FROM t0, rt1 WHERE ('0.7390647611456276');
SELECT DISTINCT * FROM t0, rt1 WHERE ((('0.7390647611456276')AND(CAST(CAST(rt1.c5 AS INTEGER) AS NUMERIC)))) ORDER BY CASE WHEN CAST(0.8095110720425828 AS TEXT) THEN ((rt1.c5) NOTNULL) END  NULLS LAST, ((rt1.c1)<(((rt1.c3)IS NOT(t0.c1))))  NULLS LAST LIMIT 4;
SELECT ALL MAX(t0.c3) FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c3)))-(((t0.c1)>(t0.c1))))) ORDER BY (+ ('2120803924')) COLLATE RTRIM  NULLS LAST;
SELECT MAX(t0.c3) FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c3)))-(((t0.c1)>(t0.c1))))) ORDER BY (+ ('2120803924')) COLLATE RTRIM  NULLS LAST INTERSECT SELECT ALL MAX(t0.c3) FROM rt1 NATURAL JOIN t0 WHERE (CAST(((((((((((((((rt1.c1)AND(t0.c0)))AND(t0.c1)))AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c6)))OR(t0.c3)))AND(rt1.c4)) AS INTEGER)) ORDER BY (+ ('2120803924')) COLLATE RTRIM  NULLS LAST;
SELECT MIN(t0.c2) FROM t0, rt1 WHERE (CAST(CAST(t0.c2 AS REAL) AS NUMERIC));
SELECT DISTINCT MIN(t0.c2) FROM t0, rt1 WHERE (CAST(CAST(t0.c2 AS REAL) AS NUMERIC)) INTERSECT SELECT DISTINCT MIN(t0.c2) FROM t0, rt1 WHERE (TYPEOF(DISTINCT (t0.c0 IN (t0.c4))));
SELECT * FROM rt1 WHERE ((((rt1.c5, rt1.c5, rt1.c1, rt1.c2)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt1.c0, rt1.c5), CASE WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c1 THEN 0.9445100040952782 END, (~ (rt1.c2)), (- (rt1.c4)))) AND ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c5 ELSE x'c5f7' END, CASE rt1.c5  WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c1 END, (- (rt1.c1)), ((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c6)))OR(rt1.c2)))OR(rt1.c0))))));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c5, rt1.c5, rt1.c1, rt1.c2)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt1.c0, rt1.c5), CASE WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c1 THEN 0.9445100040952782 END, (~ (rt1.c2)), (- (rt1.c4)))) AND ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c5 ELSE x'c5f7' END, CASE rt1.c5  WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c1 END, (- (rt1.c1)), ((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c6)))OR(rt1.c2)))OR(rt1.c0))))))AND((((rt1.c2) NOTNULL) IN (CASE WHEN rt1.c4 THEN 0.11411142885638115 WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c6 END, (- (rt1.c1))))))) INTERSECT SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c3 AS NUMERIC))+(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c4 END)));
SELECT * FROM rt1 WHERE ((((rt1.c5, rt1.c5, rt1.c1, rt1.c2)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt1.c0, rt1.c5), CASE WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c1 THEN 0.9445100040952782 END, (~ (rt1.c2)), (- (rt1.c4)))) AND ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c5 ELSE x'c5f7' END, CASE rt1.c5  WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c1 END, (- (rt1.c1)), ((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c6)))OR(rt1.c2)))OR(rt1.c0))))));
SELECT * FROM t0 WHERE (CASE ABS(t0.c3)  WHEN '쀭' THEN 'j2' END) ORDER BY t0.c1, CASE CAST(t0.c2 AS NUMERIC)  WHEN (t0.c1 IN ()) THEN t0.c3 ELSE (t0.c3 IN ()) END ASC;
SELECT DISTINCT * FROM t0 WHERE (((CASE ABS(t0.c3)  WHEN '쀭' THEN 'j2' END)AND(NULL))) ORDER BY t0.c1, CASE CAST(t0.c2 AS NUMERIC)  WHEN (t0.c1 IN ()) THEN t0.c3 ELSE (t0.c3 IN ()) END ASC;
SELECT * FROM t0 WHERE (CASE ABS(t0.c3)  WHEN '쀭' THEN 'j2' END) ORDER BY t0.c1, CASE CAST(t0.c2 AS NUMERIC)  WHEN (t0.c1 IN ()) THEN t0.c3 ELSE (t0.c3 IN ()) END ASC;
SELECT DISTINCT * FROM t0 WHERE (((CASE ABS(t0.c3)  WHEN '쀭' THEN 'j2' END)AND(NULL))) ORDER BY t0.c1, CASE CAST(t0.c2 AS NUMERIC)  WHEN (t0.c1 IN ()) THEN t0.c3 ELSE (t0.c3 IN ()) END ASC;
SELECT MIN(rt1.c4) FROM rt1, t0 WHERE (COALESCE('', t0.c4, (~ (t0.c2))));
SELECT DISTINCT MIN(rt1.c4) FROM rt1, t0 WHERE (COALESCE('', t0.c4, (~ (t0.c2)))) ORDER BY rt1.c2 ASC, (((((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((rt1.c4))))!=(((((((t0.c4)AND(t0.c2)))AND(t0.c0)))AND(t0.c4))));
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c6 THEN '0.14790898626958582' WHEN rt1.c3 THEN rt1.c6 ELSE rt1.c4 END)) AND ((rt1.c3)))) ORDER BY ((((CAST(rt1.c2 AS REAL))AND(rt1.c4 COLLATE RTRIM)))AND(CAST(rt1.c4 AS TEXT)))  NULLS LAST, rt1.c4 ASC  NULLS FIRST, rt1.c2 DESC;
SELECT ALL * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c6 THEN '0.14790898626958582' WHEN rt1.c3 THEN rt1.c6 ELSE rt1.c4 END)) AND ((rt1.c3)))) ORDER BY ((((CAST(rt1.c2 AS REAL))AND(rt1.c4 COLLATE RTRIM)))AND(CAST(rt1.c4 AS TEXT)))  NULLS LAST, rt1.c4 ASC  NULLS FIRST, rt1.c2 DESC LIMIT 0x2 INTERSECT SELECT * FROM rt1 WHERE (rt1.c6) ORDER BY ((((CAST(rt1.c2 AS REAL))AND(rt1.c4 COLLATE RTRIM)))AND(CAST(rt1.c4 AS TEXT)))  NULLS LAST, rt1.c4 ASC  NULLS FIRST, rt1.c2 DESC LIMIT 2;
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c6 THEN '0.14790898626958582' WHEN rt1.c3 THEN rt1.c6 ELSE rt1.c4 END)) AND ((rt1.c3)))) ORDER BY ((((CAST(rt1.c2 AS REAL))AND(rt1.c4 COLLATE RTRIM)))AND(CAST(rt1.c4 AS TEXT)))  NULLS LAST, rt1.c4 ASC  NULLS FIRST, rt1.c2 DESC;
SELECT ALL * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c6 THEN '0.14790898626958582' WHEN rt1.c3 THEN rt1.c6 ELSE rt1.c4 END)) AND ((rt1.c3)))) ORDER BY ((((CAST(rt1.c2 AS REAL))AND(rt1.c4 COLLATE RTRIM)))AND(CAST(rt1.c4 AS TEXT)))  NULLS LAST, rt1.c4 ASC  NULLS FIRST, rt1.c2 DESC LIMIT 0x2 INTERSECT SELECT * FROM rt1 WHERE (rt1.c6) ORDER BY ((((CAST(rt1.c2 AS REAL))AND(rt1.c4 COLLATE RTRIM)))AND(CAST(rt1.c4 AS TEXT)))  NULLS LAST, rt1.c4 ASC  NULLS FIRST, rt1.c2 DESC LIMIT 2;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((((((rt1.c1) BETWEEN (NULL) AND (rt1.c2)))AND((((t0.c4, rt1.c4, rt1.c4))>((t0.c0, t0.c4, t0.c1))))))AND(CAST(t0.c4 AS INTEGER))) WHERE (CASE WHEN rt1.c3 COLLATE NOCASE THEN ((t0.c2) NOTNULL) WHEN '-344698765' THEN (NOT (rt1.c5)) WHEN CASE rt1.c3  WHEN '	' THEN rt1.c5 WHEN rt1.c1 THEN t0.c4 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c4 END THEN (((0.8676045562270195)) BETWEEN ((0.015894690740374418)) AND ((rt1.c5))) END) ORDER BY (CAST(t0.c4 AS NUMERIC) IN ()) DESC, (((((((((rt1.c5, rt1.c6, t0.c4)) BETWEEN ((t0.c0, t0.c0, rt1.c6)) AND ((rt1.c4, rt1.c4, NULL))))OR(((rt1.c6)<>(rt1.c1)))))OR(((((((t0.c1)OR(rt1.c1)))OR(t0.c1)))AND(rt1.c3)))))OR(COALESCE(t0.c4, rt1.c1, rt1.c1)));
SELECT * FROM t0 INNER JOIN rt1 ON ((((((rt1.c1) BETWEEN (NULL) AND (rt1.c2)))AND((((t0.c4, rt1.c4, rt1.c4))>((t0.c0, t0.c4, t0.c1))))))AND(CAST(t0.c4 AS INTEGER))) WHERE (((CASE WHEN rt1.c3 COLLATE NOCASE THEN ((t0.c2) NOTNULL) WHEN '-344698765' THEN (NOT (rt1.c5)) WHEN CASE rt1.c3  WHEN '	' THEN rt1.c5 WHEN rt1.c1 THEN t0.c4 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c4 END THEN (((0.8676045562270195)) BETWEEN ((0.015894690740374418)) AND ((rt1.c5))) END)AND(CAST(rt1.c2 AS TEXT) COLLATE BINARY))) ORDER BY (CAST(t0.c4 AS NUMERIC) IN ()) DESC, (((((((((rt1.c5, rt1.c6, t0.c4)) BETWEEN ((t0.c0, t0.c0, rt1.c6)) AND ((rt1.c4, rt1.c4, NULL))))OR(((rt1.c6)<>(rt1.c1)))))OR(((((((t0.c1)OR(rt1.c1)))OR(t0.c1)))AND(rt1.c3)))))OR(COALESCE(t0.c4, rt1.c1, rt1.c1))) LIMIT 1 INTERSECT SELECT ALL * FROM t0 INNER JOIN rt1 ON ((((((rt1.c1) BETWEEN (NULL) AND (rt1.c2)))AND((((t0.c4, rt1.c4, rt1.c4))>((t0.c0, t0.c4, t0.c1))))))AND(CAST(t0.c4 AS INTEGER))) WHERE (CASE (((t0.c1))=((rt1.c3)))  WHEN t0.c3 COLLATE NOCASE THEN ((rt1.c0)<=(t0.c4)) WHEN (('1378707348')||(t0.c0)) THEN (rt1.c5 IN (t0.c4)) WHEN (((rt1.c0))<>((x'97c9'))) THEN t0.c2 WHEN 0.05648256087996584 THEN ((t0.c1) BETWEEN (rt1.c0) AND (t0.c4)) END) ORDER BY (CAST(t0.c4 AS NUMERIC) IN ()) DESC, (((((((((rt1.c5, rt1.c6, t0.c4)) BETWEEN ((t0.c0, t0.c0, rt1.c6)) AND ((rt1.c4, rt1.c4, NULL))))OR(((rt1.c6)!=(rt1.c1)))))OR(((((((t0.c1)OR(rt1.c1)))OR(t0.c1)))AND(rt1.c3)))))OR(COALESCE(t0.c4, rt1.c1, rt1.c1))) LIMIT 0X1;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((((((rt1.c1) BETWEEN (NULL) AND (rt1.c2)))AND((((t0.c4, rt1.c4, rt1.c4))>((t0.c0, t0.c4, t0.c1))))))AND(CAST(t0.c4 AS INTEGER))) WHERE (CASE WHEN rt1.c3 COLLATE NOCASE THEN ((t0.c2) NOTNULL) WHEN '-344698765' THEN (NOT (rt1.c5)) WHEN CASE rt1.c3  WHEN '	' THEN rt1.c5 WHEN rt1.c1 THEN t0.c4 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c4 END THEN (((0.8676045562270195)) BETWEEN ((0.015894690740374418)) AND ((rt1.c5))) END) ORDER BY (CAST(t0.c4 AS NUMERIC) IN ()) DESC, (((((((((rt1.c5, rt1.c6, t0.c4)) BETWEEN ((t0.c0, t0.c0, rt1.c6)) AND ((rt1.c4, rt1.c4, NULL))))OR(((rt1.c6)<>(rt1.c1)))))OR(((((((t0.c1)OR(rt1.c1)))OR(t0.c1)))AND(rt1.c3)))))OR(COALESCE(t0.c4, rt1.c1, rt1.c1)));
SELECT ALL MAX(t0.c4) FROM rt1, t0 WHERE (((CASE rt1.c3  WHEN t0.c4 THEN rt1.c2 END) BETWEEN (rt1.c0 COLLATE RTRIM) AND (CAST('Kb' AS INTEGER))));
SELECT DISTINCT MAX(t0.c4) FROM rt1, t0 WHERE (((((CASE rt1.c3  WHEN t0.c4 THEN rt1.c2 END) BETWEEN (rt1.c0 COLLATE RTRIM) AND (CAST('Kb' AS INTEGER))))AND((((+ (rt1.c6))) NOT BETWEEN (CASE rt1.c3  WHEN t0.c1 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c4 ELSE NULL END) AND ((((x'', rt1.c0))>=((rt1.c5, rt1.c5))))))));
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((rt1.c3)GLOB(t0.c2)) COLLATE BINARY WHERE ((NOT (CAST(rt1.c0 AS TEXT)))) ORDER BY ((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c1)))<(((rt1.c2) NOT BETWEEN (t0.c3) AND (rt1.c0)))), (~ ((((t0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((rt1.c3)GLOB(t0.c2)) COLLATE BINARY WHERE ((NOT (CAST(rt1.c0 AS TEXT)))) ORDER BY ('AK2xq' IN ()) DESC;
SELECT ALL MAX(rt1.c1) FROM t0, rt1 WHERE ((((((((NOT (t0.c2)))AND(UNLIKELY(rt1.c1))))AND((((0.944865794382403)) BETWEEN ((t0.c3)) AND ((rt1.c5))))))AND(((((((((t0.c2)OR(0xffffffffa90d8fe0)))OR(t0.c4)))OR('1844222368')))AND(t0.c1))))) ORDER BY UNLIKELY(NULL)  NULLS LAST, ABS(DISTINCT t0.c4 COLLATE NOCASE), ((NULL) NOT BETWEEN (CASE WHEN t0.c3 THEN rt1.c6 END) AND ((((rt1.c4, rt1.c1))>((t0.c2, t0.c1))))) DESC  NULLS FIRST;
SELECT DISTINCT MAX(rt1.c1) FROM t0, rt1 WHERE ((((((((NOT (t0.c2)))AND(UNLIKELY(rt1.c1))))AND((((0.944865794382403)) BETWEEN ((t0.c3)) AND ((rt1.c5))))))AND(((((((((t0.c2)OR(0Xffffffffa90d8fe0)))OR(t0.c4)))OR('1844222368')))AND(t0.c1))))) ORDER BY t0.c1  NULLS LAST, UNLIKELY(((t0.c4)<=(rt1.c5))) DESC  NULLS FIRST, rt1.c5 ASC;
SELECT COUNT(*) FROM rt1 WHERE ((('rtb') ISNULL));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((('rtb') ISNULL)) ORDER BY rt1.c6, ((((rt1.c3, rt1.c0)) BETWEEN ((rt1.c0, rt1.c3)) AND ((rt1.c4, rt1.c0))) IN (((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c0)), (((rt1.c5, rt1.c3))>=(('735698646', rt1.c3))))) ASC LIMIT 0x0;
SELECT * FROM t0 WHERE (TRIM(DISTINCT t0.c3, CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c3 ELSE t0.c3 END));
SELECT * FROM t0 WHERE (((TRIM(DISTINCT t0.c3, CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c3 ELSE t0.c3 END))AND(((CASE WHEN t0.c1 THEN t0.c4 END) IS TRUE)))) ORDER BY CASE WHEN (t0.c1 IN ()) THEN CAST(t0.c3 AS REAL) WHEN ((-1.560087994E9)OR(t0.c4)) THEN ((x'') ISNULL) END, CASE CAST(NULL AS BLOB)  WHEN (((t0.c3, NULL))>=((t0.c3, t0.c1))) THEN ((t0.c3) ISNULL) WHEN CAST(t0.c4 AS BLOB) THEN t0.c3 COLLATE BINARY END ASC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (((((t0.c0))<>((t0.c4))) IN (CASE t0.c3  WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c2 END))) ORDER BY CASE WHEN (t0.c1 IN ()) THEN CAST(t0.c3 AS REAL) WHEN ((-1.560087994E9)OR(t0.c4)) THEN ((x'') ISNULL) END, CASE CAST(NULL AS BLOB)  WHEN (((t0.c3, NULL))>=((t0.c3, t0.c1))) THEN ((t0.c3) ISNULL) WHEN CAST(t0.c4 AS BLOB) THEN t0.c3 COLLATE BINARY END ASC  NULLS LAST;
SELECT * FROM t0 WHERE (TRIM(DISTINCT t0.c3, CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c3 ELSE t0.c3 END));
SELECT * FROM t0 WHERE (((TRIM(DISTINCT t0.c3, CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c3 ELSE t0.c3 END))AND(((CASE WHEN t0.c1 THEN t0.c4 END) IS TRUE)))) ORDER BY CASE WHEN (t0.c1 IN ()) THEN CAST(t0.c3 AS REAL) WHEN ((-1.560087994E9)OR(t0.c4)) THEN ((x'') ISNULL) END, CASE CAST(NULL AS BLOB)  WHEN (((t0.c3, NULL))>=((t0.c3, t0.c1))) THEN ((t0.c3) ISNULL) WHEN CAST(t0.c4 AS BLOB) THEN t0.c3 COLLATE BINARY END ASC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (((((t0.c0))<>((t0.c4))) IN (CASE t0.c3  WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c2 END))) ORDER BY CASE WHEN (t0.c1 IN ()) THEN CAST(t0.c3 AS REAL) WHEN ((-1.560087994E9)OR(t0.c4)) THEN ((x'') ISNULL) END, CASE CAST(NULL AS BLOB)  WHEN (((t0.c3, NULL))>=((t0.c3, t0.c1))) THEN ((t0.c3) ISNULL) WHEN CAST(t0.c4 AS BLOB) THEN t0.c3 COLLATE BINARY END ASC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (((rtreenode(rt1.c0, rt1.c3))/(TRIM(t0.c4)))) ORDER BY CASE WHEN t0.c2 THEN rt1.c3 WHEN t0.c4 THEN rt1.c6 WHEN t0.c3 THEN rt1.c1 ELSE t0.c2 END COLLATE RTRIM, ((rt1.c6) IS TRUE) COLLATE BINARY DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((rtreenode(rt1.c0, rt1.c3))/(TRIM(t0.c4))))AND(((rt1.c1 COLLATE BINARY)==(rt1.c4 COLLATE BINARY))))) ORDER BY (((NOT (rt1.c6)))||(t0.c3 COLLATE RTRIM)) ASC LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE (((rtreenode(rt1.c0, rt1.c3))/(TRIM(t0.c4)))) ORDER BY CASE WHEN t0.c2 THEN rt1.c3 WHEN t0.c4 THEN rt1.c6 WHEN t0.c3 THEN rt1.c1 ELSE t0.c2 END COLLATE RTRIM, ((rt1.c6) IS TRUE) COLLATE BINARY DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((rtreenode(rt1.c0, rt1.c3))/(TRIM(t0.c4))))AND(((rt1.c1 COLLATE BINARY)==(rt1.c4 COLLATE BINARY))))) ORDER BY (((NOT (rt1.c6)))||(t0.c3 COLLATE RTRIM)) ASC LIMIT 0x0;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((((((((CAST(rt1.c5 AS TEXT))OR(((0.30867880976023765)IS NOT(t0.c2)))))OR(((t0.c4)IS(t0.c2)))))OR(((t0.c2) NOT NULL))))AND((rt1.c4 IN (rt1.c0, t0.c0, t0.c0)))))AND(CASE WHEN t0.c0 THEN rt1.c4 WHEN t0.c4 THEN rt1.c4 ELSE rt1.c5 END)) WHERE ((((rt1.c6 IN ()))IS(((t0.c4) BETWEEN (t0.c3) AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((((((((CAST(rt1.c5 AS TEXT))OR(((0.30867880976023765)IS NOT(t0.c2)))))OR(((t0.c4)IS(t0.c2)))))OR(((t0.c2) NOT NULL))))AND((rt1.c4 IN (rt1.c0, t0.c0, t0.c0)))))AND(CASE WHEN t0.c0 THEN rt1.c4 WHEN t0.c4 THEN rt1.c4 ELSE rt1.c5 END)) WHERE ((((((rt1.c6 IN ()))IS(((t0.c4) BETWEEN (t0.c3) AND (rt1.c2)))))AND((NOT (((t0.c3)>=(t0.c2))))))) ORDER BY CASE ((t0.c4) IS TRUE)  WHEN ((rt1.c6)|(rt1.c5)) THEN x'5f46bf' WHEN ((((rt1.c6)OR(rt1.c0)))AND(rt1.c0)) THEN GLOB(rt1.c3, t0.c3) END ASC  NULLS LAST, rt1.c1 INTERSECT SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((((((((CAST(rt1.c5 AS TEXT))OR(((0.30867880976023765)IS NOT(t0.c2)))))OR(((t0.c4)IS(t0.c2)))))OR(((t0.c2) NOT NULL))))AND((rt1.c4 IN (rt1.c0, t0.c0, t0.c0)))))AND(CASE WHEN t0.c0 THEN rt1.c4 WHEN t0.c4 THEN rt1.c4 ELSE rt1.c5 END)) WHERE (t0.c1 COLLATE BINARY) ORDER BY CASE ((t0.c4) IS TRUE)  WHEN ((rt1.c6)|(rt1.c5)) THEN x'5f46bf' WHEN ((((rt1.c6)OR(rt1.c0)))AND(rt1.c0)) THEN GLOB(rt1.c3, t0.c3) END ASC  NULLS LAST, rt1.c1;
SELECT * FROM rt1 WHERE (CAST(0.9228735773184256 AS TEXT)) ORDER BY (+ (((rt1.c5)GLOB(rt1.c3)))) ASC  NULLS LAST, HEX('V'), (((+ (rt1.c0)))IS NOT(rt1.c2 COLLATE RTRIM));
SELECT DISTINCT * FROM rt1 WHERE (CAST(0.9228735773184256 AS TEXT)) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c5 END)>=(COALESCE(rt1.c5, rt1.c4, rt1.c1, rt1.c2))) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (CAST(0.9228735773184256 AS TEXT)) ORDER BY (+ (((rt1.c5)GLOB(rt1.c3)))) ASC  NULLS LAST, HEX('V'), (((+ (rt1.c0)))IS NOT(rt1.c2 COLLATE RTRIM));
SELECT DISTINCT * FROM rt1 WHERE (CAST(0.9228735773184256 AS TEXT)) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c5 END)>=(COALESCE(rt1.c5, rt1.c4, rt1.c1, rt1.c2))) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c3 IN (t0.c1, t0.c1))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND ((((t0.c2, x'f7', rt1.c2)) NOT BETWEEN ((0xfffffffff05efad5, rt1.c3, rt1.c1)) AND ((rt1.c0, t0.c2, t0.c1))))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c3 IN (t0.c1, t0.c1))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND ((((t0.c2, x'f7', rt1.c2)) NOT BETWEEN ((0Xfffffffff05efad5, rt1.c3, rt1.c1)) AND ((rt1.c0, t0.c2, t0.c1)))))) ORDER BY (- (0.8095110720425828))  NULLS FIRST, rt1.c6  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c4) AND (t0.c2)))>=(CASE rt1.c6  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c2 ELSE rt1.c0 END))) ORDER BY (- (0.8095110720425828))  NULLS FIRST, rt1.c6  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c3 IN (t0.c1, t0.c1))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND ((((t0.c2, x'f7', rt1.c2)) NOT BETWEEN ((0xfffffffff05efad5, rt1.c3, rt1.c1)) AND ((rt1.c0, t0.c2, t0.c1))))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c3 IN (t0.c1, t0.c1))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND ((((t0.c2, x'f7', rt1.c2)) NOT BETWEEN ((0Xfffffffff05efad5, rt1.c3, rt1.c1)) AND ((rt1.c0, t0.c2, t0.c1)))))) ORDER BY (- (0.8095110720425828))  NULLS FIRST, rt1.c6  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c4) AND (t0.c2)))>=(CASE rt1.c6  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c2 ELSE rt1.c0 END))) ORDER BY (- (0.8095110720425828))  NULLS FIRST, rt1.c6  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((((((x'99ae4b' IN ()))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(0.02990247908756971)))AND(t0.c1 COLLATE BINARY))) ORDER BY CASE WHEN NULL THEN CAST(t0.c3 AS REAL) END DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((((((((x'99ae4b' IN ()))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(0.02990247908756971)))AND(t0.c1 COLLATE BINARY)))AND((((t0.c4 IN ()))<(((t0.c1) NOT NULL)))))) ORDER BY ((((t0.c3) NOTNULL))<<(CHAR(t0.c0))) ASC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t0 WHERE ((((((((x'99ae4b' IN ()))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(0.02990247908756971)))AND(t0.c1 COLLATE BINARY))) ORDER BY CASE WHEN NULL THEN CAST(t0.c3 AS REAL) END DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((((((((x'99ae4b' IN ()))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(0.02990247908756971)))AND(t0.c1 COLLATE BINARY)))AND((((t0.c4 IN ()))<(((t0.c1) NOT NULL)))))) ORDER BY ((((t0.c3) NOTNULL))<<(CHAR(t0.c0))) ASC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE ((((((rt1.c2))<=((t0.c0))))LIKE(rt1.c4))) ORDER BY (rt1.c6 IN ((((rt1.c5, rt1.c4, t0.c2)) NOT BETWEEN ((rt1.c3, '-614220311', rt1.c2)) AND ((rt1.c5, t0.c1, rt1.c0)))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((rt1.c2))<=((t0.c0))))LIKE(rt1.c4))) ORDER BY CASE ((rt1.c1)>(t0.c2))  WHEN ((t0.c3) NOTNULL) THEN CAST(rt1.c1 AS INTEGER) WHEN (+ (rt1.c1)) THEN ((rt1.c6) NOTNULL) END ASC INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((((t0.c4)AND(((rt1.c6) BETWEEN (t0.c3) AND (t0.c1)))))OR(((rt1.c5) IS TRUE))))OR((~ (rt1.c2)))))AND((((rt1.c3, rt1.c1))<=((t0.c3, rt1.c3))))))AND(x'11b1'))) ORDER BY CASE ((rt1.c1)>(t0.c2))  WHEN ((t0.c3) NOTNULL) THEN CAST(rt1.c1 AS INTEGER) WHEN (+ (rt1.c1)) THEN ((rt1.c6) NOTNULL) END ASC;
SELECT ALL * FROM rt1, t0 WHERE ((((((rt1.c2))<=((t0.c0))))LIKE(rt1.c4))) ORDER BY (rt1.c6 IN ((((rt1.c5, rt1.c4, t0.c2)) NOT BETWEEN ((rt1.c3, '-614220311', rt1.c2)) AND ((rt1.c5, t0.c1, rt1.c0)))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((rt1.c2))<=((t0.c0))))LIKE(rt1.c4))) ORDER BY CASE ((rt1.c1)>(t0.c2))  WHEN ((t0.c3) NOTNULL) THEN CAST(rt1.c1 AS INTEGER) WHEN (+ (rt1.c1)) THEN ((rt1.c6) NOTNULL) END ASC INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((((t0.c4)AND(((rt1.c6) BETWEEN (t0.c3) AND (t0.c1)))))OR(((rt1.c5) IS TRUE))))OR((~ (rt1.c2)))))AND((((rt1.c3, rt1.c1))<=((t0.c3, rt1.c3))))))AND(x'11b1'))) ORDER BY CASE ((rt1.c1)>(t0.c2))  WHEN ((t0.c3) NOTNULL) THEN CAST(rt1.c1 AS INTEGER) WHEN (+ (rt1.c1)) THEN ((rt1.c6) NOTNULL) END ASC;
SELECT ALL MAX(rt1.c0) FROM rt1, t0 WHERE ((((rt1.c5)) BETWEEN ((rt1.c1)) AND ((t0.c3))) COLLATE RTRIM);
SELECT ALL MAX(rt1.c0) FROM rt1, t0 WHERE ((((rt1.c5)) BETWEEN ((rt1.c1)) AND ((t0.c3))) COLLATE RTRIM) LIMIT 0 INTERSECT SELECT MAX(rt1.c0) FROM rt1, t0 WHERE ((((t0.c0)==(t0.c0)) IN (((rt1.c6)IS(t0.c4))))) LIMIT 0x0;
SELECT * FROM t0 WHERE (((((((((((t0.c4) ISNULL))OR(-8.83143184E8)))AND(((t0.c3)==(t0.c4)))))AND(((t0.c4) NOT BETWEEN (t0.c0) AND (t0.c3)))))AND(((t0.c0) NOTNULL)))) ORDER BY (((t0.c2) BETWEEN (t0.c1) AND (t0.c3)) IN ())  NULLS LAST, ((x'' IN (t0.c1)) IN (t0.c4 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c4) ISNULL))OR(-8.83143184E8)))AND(((t0.c3)==(t0.c4)))))AND(((t0.c4) NOT BETWEEN (t0.c0) AND (t0.c3)))))AND(((t0.c0) NOTNULL))))AND((((~ (t0.c2)))LIKE(((t0.c3) NOT NULL)))))) ORDER BY CASE (t0.c1 IN ())  WHEN ((t0.c4)IS NOT(t0.c1)) THEN t0.c4 COLLATE BINARY END  NULLS LAST, CAST(t0.c3 COLLATE BINARY AS TEXT) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((((((((((t0.c4) ISNULL))OR(-8.83143184E8)))AND(((t0.c3)==(t0.c4)))))AND(((t0.c4) NOT BETWEEN (t0.c0) AND (t0.c3)))))AND(((t0.c0) NOTNULL)))) ORDER BY (((t0.c2) BETWEEN (t0.c1) AND (t0.c3)) IN ())  NULLS LAST, ((x'' IN (t0.c1)) IN (t0.c4 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (((((t0.c3) BETWEEN (rt1.c2) AND (rt1.c6)))>>((rt1.c3 IN ()))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((t0.c3) BETWEEN (rt1.c2) AND (rt1.c6)))>>((rt1.c3 IN ()))))AND(((((rt1.c2) IS TRUE))GLOB((((rt1.c5, rt1.c1, rt1.c0))>=((rt1.c2, rt1.c3, x'db')))))))) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CASE '-1191521787' COLLATE RTRIM  WHEN (NOT (t0.c1)) THEN t0.c4 WHEN CASE ''  WHEN rt1.c5 THEN t0.c1 END THEN ((t0.c4) NOT NULL) WHEN TYPEOF(DISTINCT rt1.c2) THEN CASE WHEN rt1.c5 THEN t0.c0 END WHEN ((rt1.c5)+(rt1.c2)) THEN CAST(rt1.c5 AS NUMERIC) END);
SELECT * FROM rt1, t0 WHERE (((((t0.c3) BETWEEN (rt1.c2) AND (rt1.c6)))>>((rt1.c3 IN ()))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((t0.c3) BETWEEN (rt1.c2) AND (rt1.c6)))>>((rt1.c3 IN ()))))AND(((((rt1.c2) IS TRUE))GLOB((((rt1.c5, rt1.c1, rt1.c0))>=((rt1.c2, rt1.c3, x'db')))))))) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CASE '-1191521787' COLLATE RTRIM  WHEN (NOT (t0.c1)) THEN t0.c4 WHEN CASE ''  WHEN rt1.c5 THEN t0.c1 END THEN ((t0.c4) NOT NULL) WHEN TYPEOF(DISTINCT rt1.c2) THEN CASE WHEN rt1.c5 THEN t0.c0 END WHEN ((rt1.c5)+(rt1.c2)) THEN CAST(rt1.c5 AS NUMERIC) END);
SELECT MIN(t0.c2) FROM rt1, t0 WHERE (NULLIF(DISTINCT (+ (rt1.c5)), (((t0.c2, rt1.c2))=((rt1.c2, rt1.c1))))) ORDER BY ((rt1.c2)<=(t0.c0)) COLLATE NOCASE  NULLS LAST, (json_object(rt1.c2, rt1.c1, t0.c3, 0.9442100810509183, rt1.c0) IN (((rt1.c4)<>(t0.c4)))) ASC  NULLS LAST, (~ (((rt1.c3)-(rt1.c3)))) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c2) FROM rt1, t0 WHERE (((NULLIF(DISTINCT (+ (rt1.c5)), (((t0.c2, rt1.c2))=((rt1.c2, rt1.c1)))))AND(((CASE t0.c2  WHEN rt1.c4 THEN t0.c1 END) NOTNULL)))) ORDER BY (((NOT (rt1.c2)))/(((((t0.c3)AND(t0.c1)))OR(t0.c1))))  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(t0.c2) FROM rt1, t0 WHERE (JULIANDAY('|', ((((((((((((t0.c3)OR(rt1.c5)))AND(rt1.c1)))AND(rt1.c3)))AND(rt1.c1)))OR(108184762)))AND('')), SQLITE_COMPILEOPTION_GET(t0.c2), (((rt1.c4, rt1.c5)) BETWEEN ((t0.c0, rt1.c5)) AND ((t0.c3, rt1.c1))), ((rt1.c0) NOTNULL), ('-1597443579' IN ()))) ORDER BY (((NOT (rt1.c2)))/(((((t0.c3)AND(t0.c1)))OR(t0.c1))))  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM rt1 WHERE ((- (LTRIM(0.24002120252617443, rt1.c3)))) ORDER BY ((CASE x''  WHEN '-1125839889' THEN rt1.c5 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c6 END) BETWEEN (rt1.c5 COLLATE NOCASE) AND ((+ (rt1.c1)))) ASC  NULLS LAST, (((rt1.c1, rt1.c4, rt1.c3, rt1.c3)) NOT BETWEEN ((rt1.c2 COLLATE BINARY, ((rt1.c4)-(rt1.c0)), MIN(rt1.c5, rt1.c1, rt1.c5, rt1.c5, rt1.c1), rt1.c2)) AND ((UPPER(rt1.c0), (((rt1.c2, rt1.c4, rt1.c3, rt1.c1, 0.722260635124317)) BETWEEN ((x'20', rt1.c3, rt1.c1, rt1.c4, rt1.c1)) AND ((rt1.c6, rt1.c5, rt1.c1, rt1.c3, rt1.c3))), x'', (rt1.c5 IN ())))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (LTRIM(0.24002120252617443, rt1.c3)))) ORDER BY ((CASE x''  WHEN '-1125839889' THEN rt1.c5 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c6 END) BETWEEN (rt1.c5 COLLATE NOCASE) AND ((+ (rt1.c1)))) ASC  NULLS LAST, (((rt1.c1, rt1.c4, rt1.c3, rt1.c3)) NOT BETWEEN ((rt1.c2 COLLATE BINARY, ((rt1.c4)-(rt1.c0)), MIN(rt1.c5, rt1.c1, rt1.c5, rt1.c5, rt1.c1), rt1.c2)) AND ((UPPER(rt1.c0), (((rt1.c2, rt1.c4, rt1.c3, rt1.c1, 0.722260635124317)) BETWEEN ((x'20', rt1.c3, rt1.c1, rt1.c4, rt1.c1)) AND ((rt1.c6, rt1.c5, rt1.c1, rt1.c3, rt1.c3))), x'', (rt1.c5 IN ())))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY ((CASE x''  WHEN '-1125839889' THEN rt1.c5 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c6 END) BETWEEN (rt1.c5 COLLATE NOCASE) AND ((+ (rt1.c1)))) ASC  NULLS LAST, (((rt1.c1, rt1.c4, rt1.c3, rt1.c3)) NOT BETWEEN ((rt1.c2 COLLATE BINARY, ((rt1.c4)-(rt1.c0)), MIN(rt1.c5, rt1.c1, rt1.c5, rt1.c5, rt1.c1), rt1.c2)) AND ((UPPER(rt1.c0), (((rt1.c2, rt1.c4, rt1.c3, rt1.c1, 0.722260635124317)) BETWEEN ((x'20', rt1.c3, rt1.c1, rt1.c4, rt1.c1)) AND ((rt1.c6, rt1.c5, rt1.c1, rt1.c3, rt1.c3))), x'', (rt1.c5 IN ())))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c3 END)==(t0.c4)));
SELECT * FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c3 END)=(t0.c4))) INTERSECT SELECT ALL * FROM t0 WHERE (CAST(CAST(t0.c3 AS INTEGER) AS REAL));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c3 END)==(t0.c4)));
SELECT * FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c3 END)=(t0.c4))) INTERSECT SELECT ALL * FROM t0 WHERE (CAST(CAST(t0.c3 AS INTEGER) AS REAL));
SELECT ALL MIN(t0.c3) FROM t0 WHERE (((((t0.c1)OR(t0.c1)))IS NOT(t0.c4 COLLATE RTRIM))) ORDER BY (- (t0.c4)) COLLATE NOCASE ASC, CAST(CASE WHEN t0.c0 THEN t0.c1 ELSE NULL END AS INTEGER), t0.c1 DESC  NULLS FIRST, ((((t0.c4)LIKE(t0.c4)))=(x'dc')) DESC  NULLS FIRST;
SELECT MIN(t0.c3) FROM t0 WHERE (((((((t0.c1)OR(t0.c1)))IS NOT(t0.c4 COLLATE RTRIM)))AND(((ABS(x'70'))GLOB(ROUND(t0.c4, t0.c4)))))) ORDER BY (- (t0.c4)) COLLATE NOCASE ASC, CAST(CASE WHEN t0.c0 THEN t0.c1 ELSE NULL END AS INTEGER), t0.c1 DESC  NULLS FIRST, ((((t0.c4)LIKE(t0.c4)))==(x'dc')) DESC  NULLS FIRST LIMIT 0X0;
SELECT MAX(rt1.c4) FROM t0, rt1 WHERE (CASE SUBSTR(t0.c0, rt1.c1)  WHEN t0.c4 COLLATE RTRIM THEN CAST(t0.c1 AS INTEGER) WHEN (NOT (rt1.c4)) THEN ((rt1.c6)>(rt1.c1)) WHEN t0.c3 COLLATE BINARY THEN CASE WHEN t0.c1 THEN rt1.c4 ELSE rt1.c1 END ELSE rt1.c2 COLLATE NOCASE END);
SELECT MAX(rt1.c4) FROM t0, rt1 WHERE (((CASE SUBSTR(t0.c0, rt1.c1)  WHEN t0.c4 COLLATE RTRIM THEN CAST(t0.c1 AS INTEGER) WHEN (NOT (rt1.c4)) THEN ((rt1.c6)>(rt1.c1)) WHEN t0.c3 COLLATE BINARY THEN CASE WHEN t0.c1 THEN rt1.c4 ELSE rt1.c1 END ELSE rt1.c2 COLLATE NOCASE END)AND((+ (CASE t0.c2  WHEN t0.c4 THEN rt1.c2 WHEN t0.c0 THEN t0.c4 WHEN rt1.c1 THEN rt1.c2 ELSE t0.c0 END))))) ORDER BY (((t0.c3 IN (t0.c2)))<>((((rt1.c6))>=((t0.c1))))), LIKELY(DISTINCT ((t0.c1)/(rt1.c5))), (CAST(rt1.c5 AS REAL) IN (rt1.c4))  NULLS LAST LIMIT 0x4;
SELECT * FROM t0, rt1 WHERE (((CAST(rt1.c0 AS REAL))>>((((rt1.c2, t0.c4)) NOT BETWEEN ((rt1.c4, rt1.c5)) AND ((t0.c3, t0.c0)))))) ORDER BY (((((((((t0.c4))<((t0.c3))))AND(rt1.c1)))AND(((t0.c2)%(rt1.c5)))))AND(((t0.c0)<=('')))) DESC  NULLS LAST, ((((CASE WHEN rt1.c4 THEN t0.c4 WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c2 THEN t0.c0 END)AND((((rt1.c1))==((rt1.c2))))))AND(CASE t0.c2  WHEN rt1.c3 THEN rt1.c4 WHEN t0.c3 THEN rt1.c0 END)), t0.c4 DESC;
SELECT ALL * FROM t0, rt1 WHERE (((((CAST(rt1.c0 AS REAL))>>((((rt1.c2, t0.c4)) NOT BETWEEN ((rt1.c4, rt1.c5)) AND ((t0.c3, t0.c0))))))AND((((rt1.c4 IN ()))=(((((((((((rt1.c3)AND(rt1.c2)))AND(x'e8')))AND(t0.c3)))OR(-1968307317)))AND(rt1.c5))))))) ORDER BY (((((((('-856217189')AND(t0.c3)))AND(rt1.c3)))AND(rt1.c5))) BETWEEN (((t0.c3) BETWEEN (rt1.c1) AND (rt1.c2))) AND (rtreenode(t0.c4, rt1.c2))) DESC LIMIT 0x1;
SELECT * FROM t0, rt1 WHERE (((CAST(rt1.c0 AS REAL))>>((((rt1.c2, t0.c4)) NOT BETWEEN ((rt1.c4, rt1.c5)) AND ((t0.c3, t0.c0)))))) ORDER BY (((((((((t0.c4))<((t0.c3))))AND(rt1.c1)))AND(((t0.c2)%(rt1.c5)))))AND(((t0.c0)<=('')))) DESC  NULLS LAST, ((((CASE WHEN rt1.c4 THEN t0.c4 WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c2 THEN t0.c0 END)AND((((rt1.c1))==((rt1.c2))))))AND(CASE t0.c2  WHEN rt1.c3 THEN rt1.c4 WHEN t0.c3 THEN rt1.c0 END)), t0.c4 DESC;
SELECT ALL * FROM t0, rt1 WHERE (((((CAST(rt1.c0 AS REAL))>>((((rt1.c2, t0.c4)) NOT BETWEEN ((rt1.c4, rt1.c5)) AND ((t0.c3, t0.c0))))))AND((((rt1.c4 IN ()))=(((((((((((rt1.c3)AND(rt1.c2)))AND(x'e8')))AND(t0.c3)))OR(-1968307317)))AND(rt1.c5))))))) ORDER BY (((((((('-856217189')AND(t0.c3)))AND(rt1.c3)))AND(rt1.c5))) BETWEEN (((t0.c3) BETWEEN (rt1.c1) AND (rt1.c2))) AND (rtreenode(t0.c4, rt1.c2))) DESC LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (((t0.c3 IN ()) IN ((('鈽KN⚼R{')=(t0.c2))))) ORDER BY ((((((t0.c0)AND(t0.c3)))OR(t0.c4)))<<(((t0.c3)IS(t0.c0)))) DESC  NULLS LAST, DATE(CASE WHEN t0.c3 THEN t0.c3 END, CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c3 THEN t0.c4 ELSE t0.c3 END, ((NULL) IS TRUE), ((t0.c2) NOTNULL))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((t0.c3 IN ()) IN ((('鈽KN⚼R{')=(t0.c2))))) ORDER BY ((((((NULL)AND('0.0032158905941063187')))OR(t0.c0))) BETWEEN (t0.c4) AND (((t0.c0) NOTNULL))) ASC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((((((((((((0.9250667286219213)OR(t0.c3)))OR(t0.c4)))OR(t0.c1)))AND(t0.c1)))OR(0.6088508550939677)))OR(t0.c2)) AS INTEGER)) ORDER BY ((((((NULL)AND('0.0032158905941063187')))OR(t0.c0))) BETWEEN (t0.c4) AND (((t0.c0) NOTNULL))) ASC LIMIT 1;
SELECT ALL * FROM t0 WHERE (((t0.c3 IN ()) IN ((('鈽KN⚼R{')=(t0.c2))))) ORDER BY ((((((t0.c0)AND(t0.c3)))OR(t0.c4)))<<(((t0.c3)IS(t0.c0)))) DESC  NULLS LAST, DATE(CASE WHEN t0.c3 THEN t0.c3 END, CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c3 THEN t0.c4 ELSE t0.c3 END, ((NULL) IS TRUE), ((t0.c2) NOTNULL))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((t0.c3 IN ()) IN ((('鈽KN⚼R{')=(t0.c2))))) ORDER BY ((((((NULL)AND('0.0032158905941063187')))OR(t0.c0))) BETWEEN (t0.c4) AND (((t0.c0) NOTNULL))) ASC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((((((((((((0.9250667286219213)OR(t0.c3)))OR(t0.c4)))OR(t0.c1)))AND(t0.c1)))OR(0.6088508550939677)))OR(t0.c2)) AS INTEGER)) ORDER BY ((((((NULL)AND('0.0032158905941063187')))OR(t0.c0))) BETWEEN (t0.c4) AND (((t0.c0) NOTNULL))) ASC LIMIT 1;
SELECT MAX(t0.c0) FROM rt1, t0 WHERE (((((t0.c4) BETWEEN (rt1.c3) AND (t0.c2))) BETWEEN (t0.c0 COLLATE NOCASE) AND (IFNULL(rt1.c2, t0.c2)))) ORDER BY LIKE(rt1.c0, rt1.c4, 'k') COLLATE BINARY  NULLS FIRST, TYPEOF(((rt1.c2)<=(rt1.c0))) DESC, ((rt1.c5)IS(CASE rt1.c0  WHEN t0.c4 THEN t0.c3 END)) ASC;
SELECT ALL MAX(t0.c0) FROM rt1, t0 WHERE (((((((t0.c4) BETWEEN (rt1.c3) AND (t0.c2))) BETWEEN (t0.c0 COLLATE NOCASE) AND (IFNULL(rt1.c2, t0.c2))))AND(((((rt1.c0)-(rt1.c2))) NOT BETWEEN (((rt1.c5)<(t0.c2))) AND (((0.1666067129358192) NOT BETWEEN (rt1.c1) AND (rt1.c3))))))) ORDER BY '-781212724' LIMIT 0X0;
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN (t0.c1 IN ()) THEN CASE t0.c1  WHEN t0.c1 THEN t0.c3 END WHEN ((t0.c0)AND(t0.c1)) THEN (((rt1.c4, rt1.c4, t0.c1)) NOT BETWEEN ((t0.c1, rt1.c6, t0.c4)) AND ((rt1.c2, t0.c2, t0.c3))) WHEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE '1830834307' END THEN ((0.2858007570548481)-(t0.c0)) ELSE CAST(rt1.c0 AS INTEGER) END) ORDER BY CASE ((((rt1.c1)OR('GSCቭ|')))AND(0xffffffffbbf5788a))  WHEN ('-492446272' IN (rt1.c0)) THEN '-1491715523' ELSE ((rt1.c3)/(t0.c3)) END DESC;
SELECT * FROM rt1, t0 WHERE (((CASE WHEN (t0.c1 IN ()) THEN CASE t0.c1  WHEN t0.c1 THEN t0.c3 END WHEN ((t0.c0)AND(t0.c1)) THEN (((rt1.c4, rt1.c4, t0.c1)) NOT BETWEEN ((t0.c1, rt1.c6, t0.c4)) AND ((rt1.c2, t0.c2, t0.c3))) WHEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE '1830834307' END THEN ((0.2858007570548481)-(t0.c0)) ELSE CAST(rt1.c0 AS INTEGER) END)AND(t0.c1))) ORDER BY (((rt1.c2, rt1.c3)) NOT BETWEEN ((((NULL)OR(NULL)), (~ (rt1.c6)))) AND ((CAST(rt1.c6 AS INTEGER), ((((((((rt1.c1)AND(x'99476b61')))OR(rt1.c3)))OR(rt1.c6)))AND(rt1.c1))))) ASC  NULLS FIRST, (((TRIM(x'99')))=((t0.c3)))  NULLS FIRST LIMIT 2;
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN (t0.c1 IN ()) THEN CASE t0.c1  WHEN t0.c1 THEN t0.c3 END WHEN ((t0.c0)AND(t0.c1)) THEN (((rt1.c4, rt1.c4, t0.c1)) NOT BETWEEN ((t0.c1, rt1.c6, t0.c4)) AND ((rt1.c2, t0.c2, t0.c3))) WHEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE '1830834307' END THEN ((0.2858007570548481)-(t0.c0)) ELSE CAST(rt1.c0 AS INTEGER) END) ORDER BY CASE ((((rt1.c1)OR('GSCቭ|')))AND(0xffffffffbbf5788a))  WHEN ('-492446272' IN (rt1.c0)) THEN '-1491715523' ELSE ((rt1.c3)/(t0.c3)) END DESC;
SELECT * FROM rt1, t0 WHERE (((CASE WHEN (t0.c1 IN ()) THEN CASE t0.c1  WHEN t0.c1 THEN t0.c3 END WHEN ((t0.c0)AND(t0.c1)) THEN (((rt1.c4, rt1.c4, t0.c1)) NOT BETWEEN ((t0.c1, rt1.c6, t0.c4)) AND ((rt1.c2, t0.c2, t0.c3))) WHEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE '1830834307' END THEN ((0.2858007570548481)-(t0.c0)) ELSE CAST(rt1.c0 AS INTEGER) END)AND(t0.c1))) ORDER BY (((rt1.c2, rt1.c3)) NOT BETWEEN ((((NULL)OR(NULL)), (~ (rt1.c6)))) AND ((CAST(rt1.c6 AS INTEGER), ((((((((rt1.c1)AND(x'99476b61')))OR(rt1.c3)))OR(rt1.c6)))AND(rt1.c1))))) ASC  NULLS FIRST, (((TRIM(x'99')))=((t0.c3)))  NULLS FIRST LIMIT 2;
SELECT MAX(rt1.c6) FROM rt1 WHERE (rt1.c1);
SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE (rt1.c1) LIMIT 0X0;
SELECT ALL COUNT(*) FROM t0 WHERE (SUBSTR(((t0.c3)<<(t0.c2)), ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c0))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (SUBSTR(((t0.c3)<<(t0.c2)), ((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c0)))) INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (SQLITE_VERSION());
SELECT ALL MAX(t0.c3) FROM t0 WHERE (CAST(((x'c604') IS FALSE) AS REAL));
SELECT DISTINCT MAX(t0.c3) FROM t0 WHERE (((CAST(((x'c604') IS FALSE) AS REAL))AND(t0.c0))) ORDER BY IFNULL((t0.c0 IN (t0.c4, t0.c1)), ((((((((((t0.c2)AND(t0.c2)))OR(0.610246270480531)))AND(t0.c3)))OR(t0.c3)))AND(t0.c1))) LIMIT 2;
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c5)%(rt1.c4)) COLLATE RTRIM);
SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c5)%(rt1.c4)) COLLATE RTRIM);
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c5)%(rt1.c4)) COLLATE RTRIM);
SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c5)%(rt1.c4)) COLLATE RTRIM);
SELECT ALL * FROM rt1, t0 WHERE (((CAST(t0.c3 AS TEXT))IS NOT(((t0.c0)/(0.5711929418547179)))));
SELECT * FROM rt1, t0 WHERE (((CAST(t0.c3 AS TEXT))IS NOT(((t0.c0)/(0.5711929418547179))))) ORDER BY (((NOT (rt1.c1)))&((((t0.c4, rt1.c5))>((t0.c0, t0.c3))))) ASC  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM rt1, t0 WHERE (((CAST(t0.c3 AS TEXT))IS NOT(((t0.c0)/(0.5711929418547179)))));
SELECT * FROM rt1, t0 WHERE (((CAST(t0.c3 AS TEXT))IS NOT(((t0.c0)/(0.5711929418547179))))) ORDER BY (((NOT (rt1.c1)))&((((t0.c4, rt1.c5))>((t0.c0, t0.c3))))) ASC  NULLS LAST LIMIT 0x1;
SELECT ALL MIN(rt1.c4) FROM rt1 WHERE ((+ (((rt1.c0) IS TRUE))));
SELECT DISTINCT MIN(rt1.c4) FROM rt1 WHERE ((((+ (((rt1.c0) IS TRUE))))AND(((((rt1.c6) NOTNULL))GLOB(0.9247696419230018))))) INTERSECT SELECT DISTINCT MIN(rt1.c4) FROM rt1 WHERE (CASE ((((((((rt1.c6)OR(rt1.c5)))OR(rt1.c5)))OR(rt1.c3)))AND(rt1.c3))  WHEN ((rt1.c1)IS(rt1.c2)) THEN CASE rt1.c1  WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c6 END ELSE (((rt1.c2))==((rt1.c3))) END);
SELECT ALL MIN(rt1.c0) FROM t0 INNER JOIN rt1 ON CAST((~ (rt1.c2)) AS INTEGER) WHERE (((x'') NOT NULL)) ORDER BY ((((t0.c1) BETWEEN ('-229228074') AND (rt1.c5))) NOTNULL)  NULLS FIRST, TRIM(CAST(rt1.c5 AS NUMERIC), ((((((x'b47b')AND(t0.c4)))AND(rt1.c1)))OR(t0.c2))) ASC  NULLS FIRST;
SELECT ALL MIN(rt1.c0) FROM t0 INNER JOIN rt1 ON CAST((~ (rt1.c2)) AS INTEGER) WHERE (((x'') NOT NULL)) ORDER BY ((((rt1.c6)<<(t0.c4))) NOTNULL) DESC  NULLS FIRST LIMIT 3 INTERSECT SELECT MIN(rt1.c0) FROM t0 INNER JOIN rt1 ON CAST((~ (rt1.c2)) AS INTEGER) WHERE (0.46539763801619694 COLLATE BINARY) ORDER BY ((((rt1.c6)<<(t0.c4))) NOTNULL) DESC  NULLS FIRST LIMIT 0x3;
SELECT ALL MIN(t0.c0) FROM rt1, t0 WHERE (((((rt1.c6) BETWEEN (t0.c3) AND (t0.c0))) NOT BETWEEN (0.7382751221530428) AND (rt1.c4 COLLATE NOCASE))) ORDER BY (- (x'9efb')) COLLATE BINARY DESC  NULLS FIRST, ((((NOT (rt1.c1)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)), ((((rt1.c3)OR(t0.c1)))AND(rt1.c1)), ((t0.c0)||(t0.c1))))=(((- (t0.c3)), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c2)) AND ((t0.c0, rt1.c6))), 'TTn.', 0.3603811586010237 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM rt1, t0 WHERE (((((rt1.c6) BETWEEN (t0.c3) AND (t0.c0))) NOT BETWEEN (0.7382751221530428) AND (rt1.c4 COLLATE NOCASE))) ORDER BY t0.c4 ASC, '1191777648' DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM rt1, t0 WHERE (((((t0.c4) IS FALSE)) NOT BETWEEN ((rt1.c0 IN (rt1.c3))) AND (((rt1.c5)/(t0.c0))))) ORDER BY t0.c4 ASC, '1191777648' DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((((((x'')OR(0.06783051754226566)))AND(rt1.c5)))*(((rt1.c1) NOT NULL)))) ORDER BY (((CASE t0.c1  WHEN t0.c0 THEN 9.96534958E8 WHEN t0.c3 THEN t0.c4 WHEN rt1.c4 THEN t0.c1 END))<>(((((rt1.c1, t0.c3, t0.c3))>=((t0.c2, rt1.c6, t0.c1)))))) DESC  NULLS FIRST;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((((((x'')OR(0.06783051754226566)))AND(rt1.c5)))*(((rt1.c1) NOT NULL)))) ORDER BY (((CASE t0.c1  WHEN t0.c0 THEN 9.96534958E8 WHEN t0.c3 THEN t0.c4 WHEN rt1.c4 THEN t0.c1 END))!=(((((rt1.c1, t0.c3, t0.c3))>=((t0.c2, rt1.c6, t0.c1)))))) DESC  NULLS FIRST LIMIT 0X3;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((((((x'')OR(0.06783051754226566)))AND(rt1.c5)))*(((rt1.c1) NOT NULL)))) ORDER BY (((CASE t0.c1  WHEN t0.c0 THEN 9.96534958E8 WHEN t0.c3 THEN t0.c4 WHEN rt1.c4 THEN t0.c1 END))<>(((((rt1.c1, t0.c3, t0.c3))>=((t0.c2, rt1.c6, t0.c1)))))) DESC  NULLS FIRST;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((((((x'')OR(0.06783051754226566)))AND(rt1.c5)))*(((rt1.c1) NOT NULL)))) ORDER BY (((CASE t0.c1  WHEN t0.c0 THEN 9.96534958E8 WHEN t0.c3 THEN t0.c4 WHEN rt1.c4 THEN t0.c1 END))!=(((((rt1.c1, t0.c3, t0.c3))>=((t0.c2, rt1.c6, t0.c1)))))) DESC  NULLS FIRST LIMIT 0X3;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CASE ((((((((rt1.c0)OR(t0.c2)))OR(t0.c4)))AND(rt1.c4)))OR(t0.c2))  WHEN ((rt1.c5)IS(t0.c2)) THEN (((x''))<=((t0.c1))) WHEN LIKELY(rt1.c5) THEN ((t0.c1)<(rt1.c2)) WHEN HEX(rt1.c5) THEN ((t0.c2)&(t0.c4)) ELSE ((((((((((rt1.c3)OR(t0.c1)))AND(x'')))OR(t0.c4)))OR(rt1.c6)))OR(t0.c2)) END WHERE ((((rt1.c2 IN (rt1.c6)))LIKE(rt1.c0 COLLATE BINARY))) ORDER BY (- ((((rt1.c5, rt1.c5, rt1.c0))>((rt1.c3, rt1.c3, 0.544820027100907))))) ASC  NULLS LAST, CASE WHEN ((rt1.c0)>=(t0.c3)) THEN UNLIKELY(rt1.c1) WHEN CAST(rt1.c3 AS BLOB) THEN t0.c3 COLLATE NOCASE END;
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON CASE ((((((((rt1.c0)OR(t0.c2)))OR(t0.c4)))AND(rt1.c4)))OR(t0.c2))  WHEN ((rt1.c5)IS(t0.c2)) THEN (((x''))<=((t0.c1))) WHEN LIKELY(rt1.c5) THEN ((t0.c1)<(rt1.c2)) WHEN HEX(rt1.c5) THEN ((t0.c2)&(t0.c4)) ELSE ((((((((((rt1.c3)OR(t0.c1)))AND(x'')))OR(t0.c4)))OR(rt1.c6)))OR(t0.c2)) END WHERE ((((rt1.c2 IN (rt1.c6)))LIKE(rt1.c0 COLLATE BINARY))) ORDER BY (- ((((rt1.c5, rt1.c5, rt1.c0))>((rt1.c3, rt1.c3, 0.544820027100907))))) ASC  NULLS LAST, CASE WHEN ((rt1.c0)>=(t0.c3)) THEN UNLIKELY(rt1.c1) WHEN CAST(rt1.c3 AS BLOB) THEN t0.c3 COLLATE NOCASE END INTERSECT SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON CASE ((((((((rt1.c0)OR(t0.c2)))OR(t0.c4)))AND(rt1.c4)))OR(t0.c2))  WHEN ((rt1.c5)IS(t0.c2)) THEN (((x''))<=((t0.c1))) WHEN LIKELY(rt1.c5) THEN ((t0.c1)<(rt1.c2)) WHEN HEX(rt1.c5) THEN ((t0.c2)&(t0.c4)) ELSE ((((((((((rt1.c3)OR(t0.c1)))AND(x'')))OR(t0.c4)))OR(rt1.c6)))OR(t0.c2)) END WHERE ((~ ((- (t0.c3))))) ORDER BY (- ((((rt1.c5, rt1.c5, rt1.c0))>((rt1.c3, rt1.c3, 0.544820027100907))))) ASC  NULLS LAST, CASE WHEN ((rt1.c0)>=(t0.c3)) THEN UNLIKELY(rt1.c1) WHEN CAST(rt1.c3 AS BLOB) THEN t0.c3 COLLATE NOCASE END;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CASE ((((((((rt1.c0)OR(t0.c2)))OR(t0.c4)))AND(rt1.c4)))OR(t0.c2))  WHEN ((rt1.c5)IS(t0.c2)) THEN (((x''))<=((t0.c1))) WHEN LIKELY(rt1.c5) THEN ((t0.c1)<(rt1.c2)) WHEN HEX(rt1.c5) THEN ((t0.c2)&(t0.c4)) ELSE ((((((((((rt1.c3)OR(t0.c1)))AND(x'')))OR(t0.c4)))OR(rt1.c6)))OR(t0.c2)) END WHERE ((((rt1.c2 IN (rt1.c6)))LIKE(rt1.c0 COLLATE BINARY))) ORDER BY (- ((((rt1.c5, rt1.c5, rt1.c0))>((rt1.c3, rt1.c3, 0.544820027100907))))) ASC  NULLS LAST, CASE WHEN ((rt1.c0)>=(t0.c3)) THEN UNLIKELY(rt1.c1) WHEN CAST(rt1.c3 AS BLOB) THEN t0.c3 COLLATE NOCASE END;
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON CASE ((((((((rt1.c0)OR(t0.c2)))OR(t0.c4)))AND(rt1.c4)))OR(t0.c2))  WHEN ((rt1.c5)IS(t0.c2)) THEN (((x''))<=((t0.c1))) WHEN LIKELY(rt1.c5) THEN ((t0.c1)<(rt1.c2)) WHEN HEX(rt1.c5) THEN ((t0.c2)&(t0.c4)) ELSE ((((((((((rt1.c3)OR(t0.c1)))AND(x'')))OR(t0.c4)))OR(rt1.c6)))OR(t0.c2)) END WHERE ((((rt1.c2 IN (rt1.c6)))LIKE(rt1.c0 COLLATE BINARY))) ORDER BY (- ((((rt1.c5, rt1.c5, rt1.c0))>((rt1.c3, rt1.c3, 0.544820027100907))))) ASC  NULLS LAST, CASE WHEN ((rt1.c0)>=(t0.c3)) THEN UNLIKELY(rt1.c1) WHEN CAST(rt1.c3 AS BLOB) THEN t0.c3 COLLATE NOCASE END INTERSECT SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON CASE ((((((((rt1.c0)OR(t0.c2)))OR(t0.c4)))AND(rt1.c4)))OR(t0.c2))  WHEN ((rt1.c5)IS(t0.c2)) THEN (((x''))<=((t0.c1))) WHEN LIKELY(rt1.c5) THEN ((t0.c1)<(rt1.c2)) WHEN HEX(rt1.c5) THEN ((t0.c2)&(t0.c4)) ELSE ((((((((((rt1.c3)OR(t0.c1)))AND(x'')))OR(t0.c4)))OR(rt1.c6)))OR(t0.c2)) END WHERE ((~ ((- (t0.c3))))) ORDER BY (- ((((rt1.c5, rt1.c5, rt1.c0))>((rt1.c3, rt1.c3, 0.544820027100907))))) ASC  NULLS LAST, CASE WHEN ((rt1.c0)>=(t0.c3)) THEN UNLIKELY(rt1.c1) WHEN CAST(rt1.c3 AS BLOB) THEN t0.c3 COLLATE NOCASE END;
SELECT * FROM t0, rt1 WHERE ((((((((((+ (rt1.c4)))AND(('
' IN (rt1.c0)))))AND(json_extract(t0.c4, t0.c3))))OR((- (t0.c3)))))OR(rt1.c6)));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((((((((+ (rt1.c4)))AND(('
' IN (rt1.c0)))))AND(json_extract(t0.c4, t0.c3))))OR((- (t0.c3)))))OR(rt1.c6)))AND(rt1.c3))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((NOT (t0.c0)))>=(((rt1.c6)/(rt1.c3)))));
SELECT * FROM t0, rt1 WHERE ((((((((((+ (rt1.c4)))AND(('
' IN (rt1.c0)))))AND(json_extract(t0.c4, t0.c3))))OR((- (t0.c3)))))OR(rt1.c6)));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((((((((+ (rt1.c4)))AND(('
' IN (rt1.c0)))))AND(json_extract(t0.c4, t0.c3))))OR((- (t0.c3)))))OR(rt1.c6)))AND(rt1.c3))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((NOT (t0.c0)))>=(((rt1.c6)/(rt1.c3)))));
SELECT ALL * FROM t0 WHERE (((((t0.c4)<(t0.c0)))==((((NULL)) BETWEEN ((t0.c4)) AND ((t0.c3))))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c4)<(t0.c0)))==((((NULL)) BETWEEN ((t0.c4)) AND ((t0.c3)))))) LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (((((t0.c4)<(t0.c0)))==((((NULL)) BETWEEN ((t0.c4)) AND ((t0.c3))))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c4)<(t0.c0)))==((((NULL)) BETWEEN ((t0.c4)) AND ((t0.c3)))))) LIMIT 0x0;
SELECT ALL * FROM t0 WHERE ((((t0.c1 IN (-1.050996115E9, t0.c2, t0.c4))) BETWEEN ((t0.c3 IN (t0.c3, t0.c4))) AND ('0.3220304217770008')));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c1 IN (-1.050996115E9, t0.c2, t0.c4))) BETWEEN ((t0.c3 IN (t0.c3, t0.c4))) AND ('0.3220304217770008')))AND((((t0.c1)+(t0.c2)) IN ((t0.c3 IN ()), (((('A')AND(t0.c3)))OR(t0.c3))))))) ORDER BY (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) IN (((t0.c2)>(t0.c0)))), LENGTH(t0.c1) COLLATE NOCASE DESC, (- (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END));
SELECT ALL * FROM t0 WHERE ((((t0.c1 IN (-1.050996115E9, t0.c2, t0.c4))) BETWEEN ((t0.c3 IN (t0.c3, t0.c4))) AND ('0.3220304217770008')));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c1 IN (-1.050996115E9, t0.c2, t0.c4))) BETWEEN ((t0.c3 IN (t0.c3, t0.c4))) AND ('0.3220304217770008')))AND((((t0.c1)+(t0.c2)) IN ((t0.c3 IN ()), (((('A')AND(t0.c3)))OR(t0.c3))))))) ORDER BY (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) IN (((t0.c2)>(t0.c0)))), LENGTH(t0.c1) COLLATE NOCASE DESC, (- (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END));
SELECT ALL * FROM rt1 WHERE (HEX(DISTINCT rt1.c0) COLLATE RTRIM);
SELECT * FROM rt1 WHERE (HEX(DISTINCT rt1.c0) COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE (HEX(DISTINCT rt1.c0) COLLATE RTRIM);
SELECT * FROM rt1 WHERE (HEX(DISTINCT rt1.c0) COLLATE RTRIM);
SELECT MAX(t0.c3) FROM t0 WHERE (((((((((((t0.c4)=('wzA')))AND(CASE t0.c3  WHEN t0.c2 THEN t0.c1 ELSE '-883143184' END)))OR(CASE t0.c1  WHEN t0.c0 THEN t0.c1 END)))AND(((t0.c4)<=(t0.c2)))))OR(CAST(t0.c4 AS INTEGER)))) ORDER BY IFNULL(DISTINCT t0.c3 COLLATE NOCASE, ((t0.c1)|(t0.c3))) DESC, CASE ((((t0.c1)AND(t0.c2)))OR(t0.c3))  WHEN x'' THEN ((t0.c2)GLOB(t0.c0)) WHEN ((-889508270) NOT BETWEEN (0.8264351272504601) AND (t0.c2)) THEN ((((((((t0.c3)OR(t0.c4)))OR('')))OR(t0.c3)))AND(t0.c0)) WHEN t0.c0 COLLATE BINARY THEN MAX(t0.c1, t0.c4, t0.c4) WHEN ((t0.c3)>>(t0.c3)) THEN TOTAL_CHANGES() WHEN ((t0.c4)*(t0.c2)) THEN (+ (t0.c1)) END  NULLS LAST, NULL;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (((((((((((((t0.c4)=('wzA')))AND(CASE t0.c3  WHEN t0.c2 THEN t0.c1 ELSE '-883143184' END)))OR(CASE t0.c1  WHEN t0.c0 THEN t0.c1 END)))AND(((t0.c4)<=(t0.c2)))))OR(CAST(t0.c4 AS INTEGER))))AND(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END COLLATE NOCASE))) ORDER BY IFNULL(DISTINCT t0.c3 COLLATE NOCASE, ((t0.c1)|(t0.c3))) DESC, CASE ((((t0.c1)AND(t0.c2)))OR(t0.c3))  WHEN x'' THEN ((t0.c2)GLOB(t0.c0)) WHEN ((0Xffffffffcafb2e52) NOT BETWEEN (0.8264351272504601) AND (t0.c2)) THEN ((((((((t0.c3)OR(t0.c4)))OR('')))OR(t0.c3)))AND(t0.c0)) WHEN t0.c0 COLLATE BINARY THEN MAX(t0.c1, t0.c4, t0.c4) WHEN ((t0.c3)>>(t0.c3)) THEN TOTAL_CHANGES() WHEN ((t0.c4)*(t0.c2)) THEN (+ (t0.c1)) END  NULLS LAST, NULL INTERSECT SELECT MAX(t0.c3) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY IFNULL(DISTINCT t0.c3 COLLATE NOCASE, ((t0.c1)|(t0.c3))) DESC, CASE ((((t0.c1)AND(t0.c2)))OR(t0.c3))  WHEN x'' THEN ((t0.c2)GLOB(t0.c0)) WHEN ((-889508270) NOT BETWEEN (0.8264351272504601) AND (t0.c2)) THEN ((((((((t0.c3)OR(t0.c4)))OR('')))OR(t0.c3)))AND(t0.c0)) WHEN t0.c0 COLLATE BINARY THEN MAX(t0.c1, t0.c4, t0.c4) WHEN ((t0.c3)>>(t0.c3)) THEN TOTAL_CHANGES() WHEN ((t0.c4)*(t0.c2)) THEN (+ (t0.c1)) END  NULLS LAST, NULL;
SELECT ALL MAX(rt1.c3) FROM t0 INNER JOIN rt1 ON ((CAST(t0.c0 AS INTEGER))|(x'f81939b9')) WHERE (((CAST(rt1.c3 AS INTEGER)) ISNULL));
SELECT MAX(rt1.c3) FROM t0 INNER JOIN rt1 ON ((CAST(t0.c0 AS INTEGER))|(x'f81939b9')) WHERE (((CAST(rt1.c3 AS INTEGER)) ISNULL)) ORDER BY (((rt1.c5)) BETWEEN ((x'')) AND ((highlight(rt1.c4, NULL, rt1.c3, t0.c3)))) ASC  NULLS LAST, ((t0.c2 IN ()) IN (RTRIM(rt1.c6))) ASC  NULLS LAST INTERSECT SELECT MAX(rt1.c3) FROM t0 INNER JOIN rt1 ON ((CAST(t0.c0 AS INTEGER))|(x'f81939b9')) WHERE (CAST(((rt1.c5)|(t0.c2)) AS INTEGER)) ORDER BY (((rt1.c5)) BETWEEN ((x'')) AND ((highlight(rt1.c4, NULL, rt1.c3, t0.c3)))) ASC  NULLS LAST, ((t0.c2 IN ()) IN (RTRIM(rt1.c6))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (((t0.c3 COLLATE RTRIM) NOT NULL));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c3 COLLATE RTRIM) NOT NULL))AND(rt1.c5)));
SELECT ALL * FROM rt1, t0 WHERE (((t0.c3 COLLATE RTRIM) NOT NULL));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c3 COLLATE RTRIM) NOT NULL))AND(rt1.c5)));
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c2) NOT BETWEEN (rt1.c2) AND (t0.c4)))&(t0.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c2) NOT BETWEEN (rt1.c2) AND (t0.c4)))&(t0.c1 COLLATE RTRIM))) LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c2) NOT BETWEEN (rt1.c2) AND (t0.c4)))&(t0.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c2) NOT BETWEEN (rt1.c2) AND (t0.c4)))&(t0.c1 COLLATE RTRIM))) LIMIT 0;
SELECT MAX(t0.c1) FROM t0 WHERE ((NOT (CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c2 THEN t0.c4 WHEN t0.c3 THEN t0.c2 WHEN t0.c3 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c3 END))) ORDER BY CAST((NOT (t0.c1)) AS REAL), (NOT (((t0.c4)+(t0.c0))));
SELECT ALL MAX(t0.c1) FROM t0 WHERE ((((NOT (CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c2 THEN t0.c4 WHEN t0.c3 THEN t0.c2 WHEN t0.c3 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c3 END)))AND((((t0.c3)&(t0.c3)) IN (((t0.c2)-(t0.c2))))))) ORDER BY CAST((NOT (t0.c1)) AS REAL), (NOT (((t0.c4)+(t0.c0)))) LIMIT 3 INTERSECT SELECT ALL MAX(t0.c1) FROM t0 WHERE ((((t0.c3 COLLATE NOCASE))<=((((t0.c4)GLOB(NULL)))))) ORDER BY CAST((NOT (t0.c1)) AS REAL), (NOT (((t0.c4)+(t0.c0)))) LIMIT 3;
SELECT ALL MAX(rt1.c1) FROM t0, rt1 WHERE ((((NULL)+(rt1.c1)) IN (((rt1.c6)IS(rt1.c4))))) ORDER BY (- ((- (rt1.c5)))) DESC;
SELECT ALL MAX(rt1.c1) FROM t0, rt1 WHERE ((((NULL)+(rt1.c1)) IN (((rt1.c6)IS(rt1.c4))))) ORDER BY (- ((- (rt1.c5)))) DESC INTERSECT SELECT MAX(rt1.c1) FROM t0, rt1 WHERE ((((rt1.c2 IN ()))IS NOT((rt1.c6 IN ())))) ORDER BY (- ((- (rt1.c5)))) DESC;
SELECT ALL MIN(rt1.c5) FROM rt1 WHERE ((('') IS FALSE)) ORDER BY ((CAST(rt1.c6 AS REAL)) NOT NULL) ASC  NULLS FIRST;
SELECT MIN(rt1.c5) FROM rt1 WHERE ((((('') IS FALSE))AND(((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE)))) ORDER BY ((CAST(rt1.c6 AS REAL)) NOT NULL) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT MIN(rt1.c5) FROM rt1 WHERE (0.29377263047554913) ORDER BY ((CAST(rt1.c6 AS REAL)) NOT NULL) ASC  NULLS FIRST LIMIT 1;
SELECT MIN(rt1.c5) FROM rt1 WHERE ((((((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c2)), CASE rt1.c1  WHEN rt1.c1 THEN NULL WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END))>((((((((rt1.c4)AND(rt1.c4)))OR(rt1.c6)))OR(rt1.c0)), ((rt1.c6) BETWEEN (rt1.c3) AND (rt1.c5)))))) ORDER BY ((((rt1.c4) NOTNULL)) IS TRUE)  NULLS LAST, ((((CASE WHEN rt1.c5 THEN rt1.c5 END)OR(rt1.c5 COLLATE BINARY)))OR((rt1.c3 IN ())))  NULLS LAST;
SELECT DISTINCT MIN(rt1.c5) FROM rt1 WHERE ((((((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c2)), CASE rt1.c1  WHEN rt1.c1 THEN NULL WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END))>((((((((rt1.c4)AND(rt1.c4)))OR(rt1.c6)))OR(rt1.c0)), ((rt1.c6) BETWEEN (rt1.c3) AND (rt1.c5)))))) ORDER BY ((((rt1.c4) NOTNULL)) IS TRUE)  NULLS LAST, ((((CASE WHEN rt1.c5 THEN rt1.c5 END)OR(rt1.c5 COLLATE BINARY)))OR((rt1.c3 IN ())))  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT MIN(rt1.c5) FROM rt1 WHERE ((NOT (((rt1.c2)AND(rt1.c6))))) ORDER BY ((((rt1.c4) NOTNULL)) IS TRUE)  NULLS LAST, ((((CASE WHEN rt1.c5 THEN rt1.c5 END)OR(rt1.c5 COLLATE BINARY)))OR((rt1.c3 IN ())))  NULLS LAST LIMIT 0x2;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((((CAST(rt1.c6 AS INTEGER))AND((((rt1.c1))<((rt1.c6))))))OR((((rt1.c0, rt1.c0, rt1.c1))>=((rt1.c1, t0.c1, t0.c3))))))OR(((((8.21932353E8)AND(rt1.c2)))AND(rt1.c5)))));
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((((((((CAST(rt1.c6 AS INTEGER))AND((((rt1.c1))<((rt1.c6))))))OR((((rt1.c0, rt1.c0, rt1.c1))>=((rt1.c1, t0.c1, t0.c3))))))OR(((((8.21932353E8)AND(rt1.c2)))AND(rt1.c5)))))AND(CAST(UPPER(DISTINCT t0.c3) AS NUMERIC))));
SELECT MAX(rt1.c5) FROM rt1, t0 WHERE (t0.c2);
SELECT MAX(rt1.c5) FROM rt1, t0 WHERE (t0.c2);
SELECT ALL * FROM rt1 WHERE (TRIM(rt1.c2, rt1.c3) COLLATE NOCASE) ORDER BY (NOT ((rt1.c6 IN (rt1.c5))))  NULLS LAST;
SELECT * FROM rt1 WHERE (TRIM(rt1.c2, rt1.c3) COLLATE NOCASE) ORDER BY (NOT ((rt1.c6 IN (rt1.c5))))  NULLS LAST INTERSECT SELECT * FROM rt1 WHERE (CASE WHEN rt1.c6 COLLATE NOCASE THEN (~ (rt1.c6)) ELSE CAST(rt1.c1 AS NUMERIC) END) ORDER BY (NOT ((rt1.c6 IN (rt1.c5))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (TRIM(rt1.c2, rt1.c3) COLLATE NOCASE) ORDER BY (NOT ((rt1.c6 IN (rt1.c5))))  NULLS LAST;
SELECT * FROM rt1 WHERE (TRIM(rt1.c2, rt1.c3) COLLATE NOCASE) ORDER BY (NOT ((rt1.c6 IN (rt1.c5))))  NULLS LAST INTERSECT SELECT * FROM rt1 WHERE (CASE WHEN rt1.c6 COLLATE NOCASE THEN (~ (rt1.c6)) ELSE CAST(rt1.c1 AS NUMERIC) END) ORDER BY (NOT ((rt1.c6 IN (rt1.c5))))  NULLS LAST;
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY (((rt1.c6)) NOT BETWEEN ((TRIM(DISTINCT rt1.c6, rt1.c5))) AND ((((rt1.c2)<=(rt1.c4))))), ((((((rt1.c0 COLLATE BINARY)AND(rt1.c4)))OR(CHANGES())))OR('-528801166')) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY (((rt1.c6)) NOT BETWEEN ((TRIM(DISTINCT rt1.c6, rt1.c5))) AND ((((rt1.c2)<=(rt1.c4))))), ((((((rt1.c0 COLLATE BINARY)AND(rt1.c4)))OR(CHANGES())))OR('-528801166')) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((((rt1.c1)-(t0.c1)))OR((((t0.c4))<((rt1.c5))))))OR(((rt1.c1)%(t0.c1))))) ORDER BY ((rt1.c0) IS FALSE)  NULLS LAST, ((CAST(rt1.c1 AS NUMERIC))<<(((rt1.c5)>>('1967614267')))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((((rt1.c1)-(t0.c1)))OR((((t0.c4))<((rt1.c5))))))OR(((rt1.c1)%(t0.c1))))) ORDER BY ((rt1.c0) IS FALSE)  NULLS LAST, ((CAST(rt1.c1 AS NUMERIC))<<(((rt1.c5)>>('1967614267')))) DESC  NULLS FIRST LIMIT 3 INTERSECT SELECT COUNT(*) FROM t0, rt1 WHERE ((((((t0.c2))<((rt1.c5)))) NOTNULL)) ORDER BY ((rt1.c0) IS FALSE)  NULLS LAST, ((CAST(rt1.c1 AS NUMERIC))<<(((rt1.c5)>>('1967614267')))) DESC  NULLS FIRST LIMIT 0x3;
SELECT * FROM t0 WHERE (CASE WHEN t0.c4 THEN t0.c0 WHEN t0.c0 THEN x'021f' WHEN t0.c3 THEN t0.c2 ELSE t0.c0 END COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c4 THEN t0.c0 WHEN t0.c0 THEN x'021f' WHEN t0.c3 THEN t0.c2 ELSE t0.c0 END COLLATE RTRIM)AND(LOWER(DISTINCT ((t0.c3)-(t0.c3)))))) ORDER BY (((((((((((t0.c3)AND(t0.c1)))AND(x'1cbc4a8c')))OR(t0.c0)))AND(t0.c4)))AND(t0.c3)) IN (CAST(t0.c3 AS NUMERIC)))  NULLS LAST, CASE LIKE(572995303, t0.c4)  WHEN ((t0.c1) BETWEEN (t0.c3) AND (NULL)) THEN ((((((t0.c1)OR(t0.c4)))AND(t0.c2)))OR(-248273772)) WHEN CAST(t0.c3 AS INTEGER) THEN x'' WHEN (((t0.c0, t0.c0))>=((t0.c2, t0.c3))) THEN (((('-1049711287')OR(t0.c4)))AND(t0.c2)) END DESC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((NULL)) BETWEEN ((((((((((t0.c1)AND(t0.c1)))OR(t0.c4)))OR(t0.c2)))AND(t0.c1)))) AND ((t0.c0 COLLATE BINARY)))) ORDER BY (((((((((((t0.c3)AND(t0.c1)))AND(x'1cbc4a8c')))OR(t0.c0)))AND(t0.c4)))AND(t0.c3)) IN (CAST(t0.c3 AS NUMERIC)))  NULLS LAST, CASE LIKE(572995303, t0.c4)  WHEN ((t0.c1) BETWEEN (t0.c3) AND (NULL)) THEN ((((((t0.c1)OR(t0.c4)))AND(t0.c2)))OR(-248273772)) WHEN CAST(t0.c3 AS INTEGER) THEN x'' WHEN (((t0.c0, t0.c0))>=((t0.c2, t0.c3))) THEN (((('-1049711287')OR(t0.c4)))AND(t0.c2)) END DESC LIMIT 0;
SELECT * FROM t0 WHERE (CASE WHEN t0.c4 THEN t0.c0 WHEN t0.c0 THEN x'021f' WHEN t0.c3 THEN t0.c2 ELSE t0.c0 END COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c4 THEN t0.c0 WHEN t0.c0 THEN x'021f' WHEN t0.c3 THEN t0.c2 ELSE t0.c0 END COLLATE RTRIM)AND(LOWER(DISTINCT ((t0.c3)-(t0.c3)))))) ORDER BY (((((((((((t0.c3)AND(t0.c1)))AND(x'1cbc4a8c')))OR(t0.c0)))AND(t0.c4)))AND(t0.c3)) IN (CAST(t0.c3 AS NUMERIC)))  NULLS LAST, CASE LIKE(572995303, t0.c4)  WHEN ((t0.c1) BETWEEN (t0.c3) AND (NULL)) THEN ((((((t0.c1)OR(t0.c4)))AND(t0.c2)))OR(-248273772)) WHEN CAST(t0.c3 AS INTEGER) THEN x'' WHEN (((t0.c0, t0.c0))>=((t0.c2, t0.c3))) THEN (((('-1049711287')OR(t0.c4)))AND(t0.c2)) END DESC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((NULL)) BETWEEN ((((((((((t0.c1)AND(t0.c1)))OR(t0.c4)))OR(t0.c2)))AND(t0.c1)))) AND ((t0.c0 COLLATE BINARY)))) ORDER BY (((((((((((t0.c3)AND(t0.c1)))AND(x'1cbc4a8c')))OR(t0.c0)))AND(t0.c4)))AND(t0.c3)) IN (CAST(t0.c3 AS NUMERIC)))  NULLS LAST, CASE LIKE(572995303, t0.c4)  WHEN ((t0.c1) BETWEEN (t0.c3) AND (NULL)) THEN ((((((t0.c1)OR(t0.c4)))AND(t0.c2)))OR(-248273772)) WHEN CAST(t0.c3 AS INTEGER) THEN x'' WHEN (((t0.c0, t0.c0))>=((t0.c2, t0.c3))) THEN (((('-1049711287')OR(t0.c4)))AND(t0.c2)) END DESC LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE ((((ABS(rt1.c0), ((t0.c1)>=(t0.c2))))!=((((rt1.c2) NOT NULL), ((rt1.c3) BETWEEN (rt1.c6) AND (NULL)))))) ORDER BY CAST(TRIM(rt1.c5) AS REAL);
SELECT ALL * FROM t0, rt1 WHERE ((((ABS(rt1.c0), ((t0.c1)>=(t0.c2))))<((((rt1.c2) NOT NULL), ((rt1.c3) BETWEEN (rt1.c6) AND (NULL)))))) ORDER BY CASE WHEN ((rt1.c5) NOT BETWEEN (rt1.c5) AND (t0.c2)) THEN ((rt1.c2) NOT NULL) END  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE ((((ABS(rt1.c0), ((t0.c1)>=(t0.c2))))!=((((rt1.c2) NOT NULL), ((rt1.c3) BETWEEN (rt1.c6) AND (NULL)))))) ORDER BY CAST(TRIM(rt1.c5) AS REAL);
SELECT ALL * FROM t0, rt1 WHERE ((((ABS(rt1.c0), ((t0.c1)>=(t0.c2))))<((((rt1.c2) NOT NULL), ((rt1.c3) BETWEEN (rt1.c6) AND (NULL)))))) ORDER BY CASE WHEN ((rt1.c5) NOT BETWEEN (rt1.c5) AND (t0.c2)) THEN ((rt1.c2) NOT NULL) END  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt1 WHERE (UNICODE((rt1.c2 IN ()))) ORDER BY rt1.c6 DESC  NULLS LAST, (((((+ (rt1.c4)))AND((rt1.c3 IN ()))))AND(rt1.c4 COLLATE NOCASE));
SELECT DISTINCT * FROM rt1 WHERE (UNICODE((rt1.c2 IN ()))) ORDER BY CAST((('-1560087994')/(rt1.c2)) AS NUMERIC), ((rt1.c6 COLLATE NOCASE) NOT NULL) DESC INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((((((((((((('1664405135')/(rt1.c2)))AND(CASE rt1.c2  WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c5 END)))AND(NULL)))AND(rt1.c1)))AND(0x116b3e3a)))AND(((((rt1.c1)OR(0.03414870513883583)))OR(rt1.c6)))))OR(((rt1.c0) ISNULL)))) ORDER BY CAST((('-1560087994')/(rt1.c2)) AS NUMERIC), ((rt1.c6 COLLATE NOCASE) NOT NULL) DESC;
SELECT ALL * FROM rt1 WHERE (UNICODE((rt1.c2 IN ()))) ORDER BY rt1.c6 DESC  NULLS LAST, (((((+ (rt1.c4)))AND((rt1.c3 IN ()))))AND(rt1.c4 COLLATE NOCASE));
SELECT ALL MIN(rt1.c2) FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c4 END)*(((((((rt1.c4)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c0)))));
SELECT DISTINCT MIN(rt1.c2) FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c4 END)*(((((((rt1.c4)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c0))))) ORDER BY (((0.6088508550939677)) BETWEEN ((NULL)) AND ((rt1.c5 COLLATE NOCASE))) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT MIN(rt1.c2) FROM rt1 WHERE (CAST(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c4 END AS NUMERIC)) ORDER BY (((0.6088508550939677)) BETWEEN ((NULL)) AND ((rt1.c5 COLLATE NOCASE))) ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE ((((LOWER(rt1.c0), ((rt1.c2)%(rt1.c5)), (((t0.c2, rt1.c0, t0.c0))==((t0.c1, rt1.c1, t0.c1))), CAST(rt1.c0 AS TEXT)))<>((((t0.c3)GLOB(t0.c3)), '3', (t0.c0 IN (t0.c4, rt1.c1)), rt1.c1 COLLATE BINARY))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((LOWER(rt1.c0), ((rt1.c2)%(rt1.c5)), (((t0.c2, rt1.c0, t0.c0))=((t0.c1, rt1.c1, t0.c1))), CAST(rt1.c0 AS TEXT)))<>((((t0.c3)GLOB(t0.c3)), '3', (t0.c0 IN (t0.c4)), rt1.c1 COLLATE BINARY)))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((t0.c0)|(t0.c4)))>>((NOT (rt1.c6)))));
SELECT ALL * FROM t0, rt1 WHERE ((((LOWER(rt1.c0), ((rt1.c2)%(rt1.c5)), (((t0.c2, rt1.c0, t0.c0))==((t0.c1, rt1.c1, t0.c1))), CAST(rt1.c0 AS TEXT)))<>((((t0.c3)GLOB(t0.c3)), '3', (t0.c0 IN (t0.c4, rt1.c1)), rt1.c1 COLLATE BINARY))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((LOWER(rt1.c0), ((rt1.c2)%(rt1.c5)), (((t0.c2, rt1.c0, t0.c0))=((t0.c1, rt1.c1, t0.c1))), CAST(rt1.c0 AS TEXT)))<>((((t0.c3)GLOB(t0.c3)), '3', (t0.c0 IN (t0.c4)), rt1.c1 COLLATE BINARY)))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((t0.c0)|(t0.c4)))>>((NOT (rt1.c6)))));
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c1) NOT NULL)  WHEN rt1.c4 COLLATE NOCASE THEN (((rt1.c3, rt1.c5)) NOT BETWEEN ((rt1.c3, rt1.c2)) AND ((rt1.c5, rt1.c2))) WHEN ((((rt1.c5)OR(rt1.c6)))AND(rt1.c5)) THEN ((0.3215794369248006)|(rt1.c2)) END);
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) NOT NULL)  WHEN rt1.c4 COLLATE NOCASE THEN (((rt1.c3, rt1.c5)) NOT BETWEEN ((rt1.c3, rt1.c2)) AND ((rt1.c5, rt1.c2))) WHEN ((((rt1.c5)OR(rt1.c6)))AND(rt1.c5)) THEN ((0.3215794369248006)|(rt1.c2)) END) LIMIT 3;
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c1) NOT NULL)  WHEN rt1.c4 COLLATE NOCASE THEN (((rt1.c3, rt1.c5)) NOT BETWEEN ((rt1.c3, rt1.c2)) AND ((rt1.c5, rt1.c2))) WHEN ((((rt1.c5)OR(rt1.c6)))AND(rt1.c5)) THEN ((0.3215794369248006)|(rt1.c2)) END);
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) NOT NULL)  WHEN rt1.c4 COLLATE NOCASE THEN (((rt1.c3, rt1.c5)) NOT BETWEEN ((rt1.c3, rt1.c2)) AND ((rt1.c5, rt1.c2))) WHEN ((((rt1.c5)OR(rt1.c6)))AND(rt1.c5)) THEN ((0.3215794369248006)|(rt1.c2)) END) LIMIT 3;
SELECT ALL * FROM rt1 WHERE (((((((((((((x'')AND(((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c1)))))OR(rt1.c1 COLLATE NOCASE)))AND(((rt1.c5)IS NOT(rt1.c6)))))AND(((rt1.c1)|(rt1.c4)))))AND(((rt1.c2)<=(rt1.c1)))))OR(((rt1.c5)<>(rt1.c5))))) ORDER BY CASE WHEN ((((((rt1.c3)AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c0)) THEN 0X787db2d3 WHEN rt1.c5 COLLATE RTRIM THEN (rt1.c4 IN (rt1.c6)) ELSE (((rt1.c5))<=((rt1.c4))) END  NULLS FIRST, ((((((((((rt1.c2 COLLATE RTRIM)AND(((rt1.c0)*('cHN)')))))OR((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c4))))))AND((('1941799750')OR(rt1.c0)))))OR(((rt1.c0) NOTNULL))))AND((rt1.c4 IN (rt1.c6)))), ((((rt1.c4)AND(rt1.c4)))|(CASE WHEN rt1.c0 THEN rt1.c5 END))  NULLS LAST;
SELECT * FROM rt1 WHERE (((((((((((((((x'')AND(((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c1)))))OR(rt1.c1 COLLATE NOCASE)))AND(((rt1.c5)IS NOT(rt1.c6)))))AND(((rt1.c1)|(rt1.c4)))))AND(((rt1.c2)<=(rt1.c1)))))OR(((rt1.c5)>(rt1.c5)))))AND((GLOB(rt1.c0, rt1.c6) IN (rt1.c0))))) ORDER BY ((((rt1.c1) NOT NULL))<((((rt1.c0, rt1.c1))!=((rt1.c0, rt1.c3))))) DESC, ((((rt1.c2)GLOB(rt1.c1))) ISNULL) LIMIT 0X0;
SELECT ALL * FROM rt1 WHERE (((((((((((((x'')AND(((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c1)))))OR(rt1.c1 COLLATE NOCASE)))AND(((rt1.c5)IS NOT(rt1.c6)))))AND(((rt1.c1)|(rt1.c4)))))AND(((rt1.c2)<=(rt1.c1)))))OR(((rt1.c5)<>(rt1.c5))))) ORDER BY CASE WHEN ((((((rt1.c3)AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c0)) THEN 0X787db2d3 WHEN rt1.c5 COLLATE RTRIM THEN (rt1.c4 IN (rt1.c6)) ELSE (((rt1.c5))<=((rt1.c4))) END  NULLS FIRST, ((((((((((rt1.c2 COLLATE RTRIM)AND(((rt1.c0)*('cHN)')))))OR((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c4))))))AND((('1941799750')OR(rt1.c0)))))OR(((rt1.c0) NOTNULL))))AND((rt1.c4 IN (rt1.c6)))), ((((rt1.c4)AND(rt1.c4)))|(CASE WHEN rt1.c0 THEN rt1.c5 END))  NULLS LAST;
SELECT * FROM rt1 WHERE (((((((((((((((x'')AND(((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c1)))))OR(rt1.c1 COLLATE NOCASE)))AND(((rt1.c5)IS NOT(rt1.c6)))))AND(((rt1.c1)|(rt1.c4)))))AND(((rt1.c2)<=(rt1.c1)))))OR(((rt1.c5)>(rt1.c5)))))AND((GLOB(rt1.c0, rt1.c6) IN (rt1.c0))))) ORDER BY ((((rt1.c1) NOT NULL))<((((rt1.c0, rt1.c1))!=((rt1.c0, rt1.c3))))) DESC, ((((rt1.c2)GLOB(rt1.c1))) ISNULL) LIMIT 0X0;
SELECT ALL * FROM rt1, t0 WHERE ((((((t0.c0, rt1.c0, rt1.c6, rt1.c3)) BETWEEN ((t0.c2, rt1.c1, rt1.c4, rt1.c0)) AND ((rt1.c1, rt1.c2, t0.c2, rt1.c4)))) NOT NULL));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c0, rt1.c0, rt1.c6, rt1.c3)) BETWEEN ((t0.c2, rt1.c1, rt1.c4, rt1.c0)) AND ((rt1.c1, rt1.c2, t0.c2, rt1.c4)))) NOT NULL)) ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (rt1.c4) AND (((t0.c3) BETWEEN (rt1.c5) AND (t0.c4)))) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (t0.c1) ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (rt1.c4) AND (((t0.c3) BETWEEN (rt1.c5) AND (t0.c4))));
SELECT ALL * FROM rt1, t0 WHERE ((((((t0.c0, rt1.c0, rt1.c6, rt1.c3)) BETWEEN ((t0.c2, rt1.c1, rt1.c4, rt1.c0)) AND ((rt1.c1, rt1.c2, t0.c2, rt1.c4)))) NOT NULL));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c0, rt1.c0, rt1.c6, rt1.c3)) BETWEEN ((t0.c2, rt1.c1, rt1.c4, rt1.c0)) AND ((rt1.c1, rt1.c2, t0.c2, rt1.c4)))) NOT NULL)) ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (rt1.c4) AND (((t0.c3) BETWEEN (rt1.c5) AND (t0.c4)))) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (t0.c1) ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (rt1.c4) AND (((t0.c3) BETWEEN (rt1.c5) AND (t0.c4))));
SELECT * FROM t0, rt1 WHERE (((((rt1.c5)LIKE(t0.c4))) BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (-215049216))) ORDER BY ((rt1.c3)IS(rt1.c5)) COLLATE BINARY, ((t0.c1)|((((t0.c3, t0.c0))=((rt1.c6, rt1.c3)))));
SELECT ALL * FROM t0, rt1 WHERE (((((((rt1.c5)LIKE(t0.c4))) BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (-215049216)))AND(CAST(((rt1.c4) BETWEEN (rt1.c0) AND ('2010461842')) AS REAL)))) ORDER BY ((rt1.c3)IS(rt1.c5)) COLLATE BINARY, ((t0.c1)|((((t0.c3, t0.c0))==((rt1.c6, rt1.c3))))) LIMIT 0x0;
SELECT * FROM t0, rt1 WHERE (((((rt1.c5)LIKE(t0.c4))) BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (-215049216))) ORDER BY ((rt1.c3)IS(rt1.c5)) COLLATE BINARY, ((t0.c1)|((((t0.c3, t0.c0))=((rt1.c6, rt1.c3)))));
SELECT ALL * FROM t0, rt1 WHERE (((((((rt1.c5)LIKE(t0.c4))) BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (-215049216)))AND(CAST(((rt1.c4) BETWEEN (rt1.c0) AND ('2010461842')) AS REAL)))) ORDER BY ((rt1.c3)IS(rt1.c5)) COLLATE BINARY, ((t0.c1)|((((t0.c3, t0.c0))==((rt1.c6, rt1.c3))))) LIMIT 0x0;
SELECT ALL * FROM rt1, t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN rt1.c0 WHEN rt1.c4 THEN t0.c3 ELSE t0.c3 END)+(CAST(0.4791826538667312 AS REAL))));
SELECT ALL * FROM rt1, t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN rt1.c0 WHEN rt1.c4 THEN t0.c3 ELSE t0.c3 END)+(CAST(0.4791826538667312 AS REAL)))) ORDER BY CASE ((rt1.c3)&(rt1.c5))  WHEN ((t0.c2)%(rt1.c0)) THEN (((rt1.c0)) NOT BETWEEN (('R)')) AND ((t0.c3))) WHEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c6 END THEN CASE t0.c0  WHEN rt1.c6 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 END END LIMIT 1 INTERSECT SELECT * FROM rt1, t0 WHERE ((((rt1.c4, NULL, rt1.c4)) NOT BETWEEN (((+ (t0.c4)), '-1033116233', rt1.c0 COLLATE BINARY)) AND ((CAST(t0.c3 AS NUMERIC), CAST(t0.c3 AS NUMERIC), t0.c4)))) ORDER BY CASE ((rt1.c3)&(rt1.c5))  WHEN ((t0.c2)%(rt1.c0)) THEN (((rt1.c0)) NOT BETWEEN (('R)')) AND ((t0.c3))) WHEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c6 END THEN CASE t0.c0  WHEN rt1.c6 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 END END LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN rt1.c0 WHEN rt1.c4 THEN t0.c3 ELSE t0.c3 END)+(CAST(0.4791826538667312 AS REAL))));
SELECT ALL * FROM rt1, t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN rt1.c0 WHEN rt1.c4 THEN t0.c3 ELSE t0.c3 END)+(CAST(0.4791826538667312 AS REAL)))) ORDER BY CASE ((rt1.c3)&(rt1.c5))  WHEN ((t0.c2)%(rt1.c0)) THEN (((rt1.c0)) NOT BETWEEN (('R)')) AND ((t0.c3))) WHEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c6 END THEN CASE t0.c0  WHEN rt1.c6 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 END END LIMIT 1 INTERSECT SELECT * FROM rt1, t0 WHERE ((((rt1.c4, NULL, rt1.c4)) NOT BETWEEN (((+ (t0.c4)), '-1033116233', rt1.c0 COLLATE BINARY)) AND ((CAST(t0.c3 AS NUMERIC), CAST(t0.c3 AS NUMERIC), t0.c4)))) ORDER BY CASE ((rt1.c3)&(rt1.c5))  WHEN ((t0.c2)%(rt1.c0)) THEN (((rt1.c0)) NOT BETWEEN (('R)')) AND ((t0.c3))) WHEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c6 END THEN CASE t0.c0  WHEN rt1.c6 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 END END LIMIT 1;
SELECT ALL MIN(rt1.c5) FROM rt1, t0 WHERE (rt1.c3) ORDER BY NULL ASC, ((('' IN ()))|((((rt1.c4))=((rt1.c0))))) DESC, t0.c4  NULLS FIRST;
SELECT DISTINCT MIN(rt1.c5) FROM rt1, t0 WHERE (rt1.c3) ORDER BY ((((rt1.c2)|(rt1.c4))) BETWEEN (((rt1.c0) IS TRUE)) AND (LIKELIHOOD(rt1.c4, x'0e4c43'))) ASC LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(rt1.c5) FROM rt1, t0 WHERE ((((rt1.c6, t0.c2, t0.c1, rt1.c0)) NOT BETWEEN ((CASE WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c0 END, ((0.4338372462582111)/('0.45090362117297056')), NULL, ((((((t0.c0)AND(rt1.c0)))AND(t0.c4)))OR(rt1.c0)))) AND (((((rt1.c5))>((t0.c4))), ((t0.c1)<>(1664405135)), ((t0.c4) ISNULL), LIKELIHOOD(t0.c4, t0.c0))))) ORDER BY ((((rt1.c2)|(rt1.c4))) BETWEEN (((rt1.c0) IS TRUE)) AND (LIKELIHOOD(rt1.c4, x'0e4c43'))) ASC LIMIT 1;
SELECT ALL MAX(rt1.c1) FROM t0, rt1 WHERE ((((((t0.c0)) BETWEEN ((0X1d568380)) AND ((rt1.c6))))LIKE(CAST(rt1.c4 AS NUMERIC)))) ORDER BY 'j' COLLATE BINARY DESC  NULLS FIRST, (CASE WHEN rt1.c0 THEN t0.c2 ELSE '' END IN ());
SELECT MAX(rt1.c1) FROM t0 NOT INDEXED, rt1 WHERE ((((((((t0.c0)) BETWEEN ((492209024)) AND ((rt1.c6))))LIKE(CAST(rt1.c4 AS NUMERIC))))AND(((rt1.c3 COLLATE NOCASE)OR((rt1.c4 IN ())))))) ORDER BY ((rt1.c2)LIKE(rt1.c5 COLLATE RTRIM))  NULLS FIRST INTERSECT SELECT ALL MAX(rt1.c1) FROM t0, rt1 WHERE ((t0.c1 IN ()) COLLATE BINARY) ORDER BY ((rt1.c2)LIKE(rt1.c5 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1 WHERE ((NOT (((t0.c1)AND(rt1.c5))))) ORDER BY ((((rt1.c1)|(rt1.c1))) NOTNULL) ASC  NULLS LAST, CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC), ((rt1.c1)<(rt1.c0))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((((NOT (((t0.c1)AND(rt1.c5)))))AND(LIKELY(DISTINCT 489068276)))) ORDER BY rt1.c6 ASC  NULLS LAST, ((((rt1.c4 COLLATE RTRIM)OR((t0.c4 IN ()))))OR(x'92')) INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((((NOT (rt1.c6)))<(UPPER(DISTINCT t0.c3)))) ORDER BY rt1.c6 ASC  NULLS LAST, ((((rt1.c4 COLLATE RTRIM)OR((t0.c4 IN ()))))OR(x'92'));
SELECT MAX(t0.c4) FROM t0, rt1 WHERE ((((CAST(0.9693143985470198 AS INTEGER), NULLIF(821932353, 0.010595025124782831), CAST(rt1.c5 AS TEXT), (- (t0.c3))))>=((rt1.c1 COLLATE BINARY, ((rt1.c4) NOTNULL), -6.95794534E8, (NOT (rt1.c5)))))) ORDER BY TYPEOF(DISTINCT TRIM(rt1.c2)) DESC, (~ ((rt1.c1 IN (rt1.c0))))  NULLS LAST;
SELECT MAX(t0.c4) FROM t0, rt1 WHERE ((((CAST(0.9693143985470198 AS INTEGER), NULLIF(821932353, 0.010595025124782831), CAST(rt1.c5 AS TEXT), (- (t0.c3))))>((rt1.c1 COLLATE BINARY, ((rt1.c4) NOTNULL), -6.95794534E8, (NOT (rt1.c5)))))) ORDER BY ((((x'') NOT BETWEEN (NULL) AND (rt1.c6))) BETWEEN (NULLIF(rt1.c3, rt1.c2)) AND ('246944807'))  NULLS LAST LIMIT 0X0;
SELECT MAX(rt1.c6) FROM rt1 WHERE (((('B' IN (rt1.c3, rt1.c5))) NOTNULL)) ORDER BY ((((rt1.c6) ISNULL)) NOT NULL)  NULLS LAST, ((CASE rt1.c6  WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c6 END) ISNULL) ASC;
SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE (((('B' IN (rt1.c3, rt1.c5))) NOTNULL)) ORDER BY ((((rt1.c6) ISNULL)) NOT NULL)  NULLS LAST, ((CASE rt1.c6  WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c6 END) ISNULL) ASC LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE ((((('1147367855')&(rt1.c4))) BETWEEN (rt1.c3) AND (((rt1.c0)<=('25539161'))))) ORDER BY ((((rt1.c6) ISNULL)) NOT NULL)  NULLS LAST, ((CASE rt1.c6  WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c6 END) ISNULL) ASC LIMIT 0X0;
SELECT * FROM rt1 WHERE (((((rt1.c2) IS TRUE)) BETWEEN (COALESCE(rt1.c3, rt1.c1, rt1.c6)) AND ((((rt1.c0)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c4)))))) ORDER BY ((((((rt1.c0) NOTNULL))AND(((rt1.c6) IS FALSE))))AND(((((rt1.c6)OR(rt1.c0)))AND(rt1.c0)))) DESC, (((rt1.c0 IN (rt1.c6))) NOTNULL) ASC;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c2) IS TRUE)) BETWEEN (COALESCE(rt1.c3, rt1.c1, rt1.c6)) AND ((((rt1.c0)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c4)))))) ORDER BY ((NULL) NOT BETWEEN (((rt1.c6) ISNULL)) AND (UNLIKELY(rt1.c0)))  NULLS FIRST LIMIT 1;
SELECT * FROM rt1 WHERE (((((rt1.c2) IS TRUE)) BETWEEN (COALESCE(rt1.c3, rt1.c1, rt1.c6)) AND ((((rt1.c0)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c4)))))) ORDER BY ((((((rt1.c0) NOTNULL))AND(((rt1.c6) IS FALSE))))AND(((((rt1.c6)OR(rt1.c0)))AND(rt1.c0)))) DESC, (((rt1.c0 IN (rt1.c6))) NOTNULL) ASC;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c2) IS TRUE)) BETWEEN (COALESCE(rt1.c3, rt1.c1, rt1.c6)) AND ((((rt1.c0)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c4)))))) ORDER BY ((NULL) NOT BETWEEN (((rt1.c6) ISNULL)) AND (UNLIKELY(rt1.c0)))  NULLS FIRST LIMIT 1;
SELECT MAX(t0.c2) FROM t0 WHERE (((CASE WHEN t0.c4 THEN t0.c2 END)%(SQLITE_COMPILEOPTION_USED(t0.c0))));
SELECT DISTINCT MAX(t0.c2) FROM t0 WHERE (((CASE WHEN t0.c4 THEN t0.c2 END)%(SQLITE_COMPILEOPTION_USED(t0.c0)))) ORDER BY IFNULL(((((t0.c1)AND(t0.c4)))OR(x'9b1e')), RTRIM(NULL)) ASC  NULLS LAST INTERSECT SELECT DISTINCT MAX(t0.c2) FROM t0 WHERE (((t0.c4 COLLATE RTRIM)+(((t0.c1) IS TRUE)))) ORDER BY IFNULL(((((t0.c1)AND(t0.c4)))OR(x'9b1e')), RTRIM(NULL)) ASC  NULLS LAST;
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE ((((((t0.c3, rt1.c6)) BETWEEN ((t0.c4, rt1.c2)) AND (('467217330', t0.c0)))) BETWEEN (((rt1.c4) NOT BETWEEN (t0.c0) AND (t0.c1))) AND (((t0.c4) ISNULL))));
SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE ((((((t0.c3, rt1.c6)) BETWEEN ((t0.c4, rt1.c2)) AND (('467217330', t0.c0)))) BETWEEN (((rt1.c4) NOT BETWEEN (t0.c0) AND (t0.c1))) AND (((t0.c4) ISNULL)))) LIMIT 0x1;
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE ((((((t0.c3, rt1.c6)) BETWEEN ((t0.c4, rt1.c2)) AND (('467217330', t0.c0)))) BETWEEN (((rt1.c4) NOT BETWEEN (t0.c0) AND (t0.c1))) AND (((t0.c4) ISNULL))));
SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE ((((((t0.c3, rt1.c6)) BETWEEN ((t0.c4, rt1.c2)) AND (('467217330', t0.c0)))) BETWEEN (((rt1.c4) NOT BETWEEN (t0.c0) AND (t0.c1))) AND (((t0.c4) ISNULL)))) LIMIT 0x1;
SELECT ALL MIN(t0.c1) FROM t0 WHERE (CASE t0.c3  WHEN t0.c2 THEN t0.c2 ELSE t0.c4 END COLLATE NOCASE) ORDER BY CAST(((t0.c2) IS TRUE) AS BLOB) ASC  NULLS FIRST, CAST(((t0.c0) IS FALSE) AS TEXT)  NULLS LAST;
SELECT DISTINCT MIN(t0.c1) FROM t0 WHERE (((CASE t0.c3  WHEN t0.c2 THEN t0.c2 ELSE t0.c4 END COLLATE NOCASE)AND(((CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c3 ELSE t0.c0 END)GLOB(CAST(t0.c0 AS TEXT)))))) ORDER BY (+ (t0.c2)) ASC, ((('' IN (t0.c1))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c3)GLOB(t0.c2)))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t0.c1) FROM t0 WHERE (CASE WHEN (NOT (t0.c4)) THEN t0.c2 WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c3 END THEN ((t0.c1)>(t0.c3)) WHEN STRFTIME(t0.c2, t0.c1, t0.c0, t0.c1) THEN ('nanu' IN (t0.c0)) ELSE (+ (t0.c4)) END) ORDER BY (+ (t0.c2)) ASC, ((('' IN (t0.c1))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c3)GLOB(t0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (+ (t0.c2))  WHEN t0.c4 COLLATE RTRIM THEN ((t0.c0)OR(t0.c0)) WHEN ((t0.c1)GLOB(t0.c2)) THEN ((t0.c2) BETWEEN (0.8891309466423558) AND (t0.c1)) WHEN x'' THEN (t0.c2 IN (t0.c2, x'')) END);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE (+ (t0.c2))  WHEN t0.c4 COLLATE RTRIM THEN ((t0.c0)OR(t0.c0)) WHEN ((t0.c1)GLOB(t0.c2)) THEN ((t0.c2) BETWEEN (0.8891309466423558) AND (t0.c1)) WHEN x'' THEN (t0.c2 IN (t0.c2, x'')) END)AND(COALESCE(CAST(t0.c0 AS TEXT), (- (t0.c1)))))) LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (((((NULL IN ())))<=((t0.c1)))) LIMIT 0X0;
SELECT MAX(t0.c0) FROM rt1, t0 WHERE ((('rI')IS NOT((NOT (t0.c1)))));
SELECT ALL MAX(t0.c0) FROM rt1, t0 WHERE ((('rI')IS NOT((NOT (t0.c1))))) ORDER BY CAST(NULLIF(DISTINCT x'1c', t0.c4) AS TEXT) ASC  NULLS LAST LIMIT 4;
SELECT MIN(t0.c0) FROM t0, rt1 WHERE (t0.c3) ORDER BY (((rt1.c1))=((rt1.c0))) COLLATE RTRIM ASC  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0, rt1 WHERE (((t0.c3)AND(CASE ((0.7233222966887922)GLOB(t0.c2))  WHEN t0.c0 THEN HEX(rt1.c2) WHEN rt1.c5 COLLATE NOCASE THEN (rt1.c3 IN ()) WHEN CAST(rt1.c2 AS TEXT) THEN rt1.c3 ELSE ((rt1.c4)AND(rt1.c1)) END))) ORDER BY (((rt1.c1))==((rt1.c0))) COLLATE RTRIM ASC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0, rt1 WHERE (((t0.c2 IN (rt1.c4)) IN ())) ORDER BY (((rt1.c1))=((rt1.c0))) COLLATE RTRIM ASC  NULLS LAST LIMIT 0;
SELECT * FROM rt1, t0 WHERE (CASE '736960138'  WHEN ((t0.c0) IS TRUE) THEN (((rt1.c6))<((rt1.c3))) WHEN ((rt1.c1)>=(t0.c0)) THEN ((rt1.c0) IS FALSE) WHEN (t0.c4 IN (rt1.c4)) THEN rt1.c1 COLLATE NOCASE ELSE t0.c4 COLLATE RTRIM END) ORDER BY (((t0.c0 IN ())) NOT NULL) ASC  NULLS LAST, CASE NULL  WHEN rt1.c0 THEN t0.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END COLLATE BINARY DESC;
SELECT DISTINCT * FROM rt1, t0 WHERE (CASE '736960138'  WHEN ((t0.c0) IS TRUE) THEN (((rt1.c6))<((rt1.c3))) WHEN ((rt1.c1)>=(t0.c0)) THEN ((rt1.c0) IS FALSE) WHEN (t0.c4 IN (rt1.c4)) THEN rt1.c1 COLLATE NOCASE ELSE t0.c4 COLLATE RTRIM END) ORDER BY ((((rt1.c5)GLOB(t0.c1))) BETWEEN (((((((t0.c0)OR(rt1.c5)))OR(rt1.c1)))OR(NULL))) AND ((t0.c1 IN (rt1.c1)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c3 COLLATE RTRIM)LIKE(rt1.c5))) ORDER BY ((((rt1.c5)GLOB(t0.c1))) BETWEEN (((((((t0.c0)OR(rt1.c5)))OR(rt1.c1)))OR(NULL))) AND ((t0.c1 IN (rt1.c1)))) DESC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (CASE '736960138'  WHEN ((t0.c0) IS TRUE) THEN (((rt1.c6))<((rt1.c3))) WHEN ((rt1.c1)>=(t0.c0)) THEN ((rt1.c0) IS FALSE) WHEN (t0.c4 IN (rt1.c4)) THEN rt1.c1 COLLATE NOCASE ELSE t0.c4 COLLATE RTRIM END) ORDER BY (((t0.c0 IN ())) NOT NULL) ASC  NULLS LAST, CASE NULL  WHEN rt1.c0 THEN t0.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END COLLATE BINARY DESC;
SELECT DISTINCT * FROM rt1, t0 WHERE (CASE '736960138'  WHEN ((t0.c0) IS TRUE) THEN (((rt1.c6))<((rt1.c3))) WHEN ((rt1.c1)>=(t0.c0)) THEN ((rt1.c0) IS FALSE) WHEN (t0.c4 IN (rt1.c4)) THEN rt1.c1 COLLATE NOCASE ELSE t0.c4 COLLATE RTRIM END) ORDER BY ((((rt1.c5)GLOB(t0.c1))) BETWEEN (((((((t0.c0)OR(rt1.c5)))OR(rt1.c1)))OR(NULL))) AND ((t0.c1 IN (rt1.c1)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c3 COLLATE RTRIM)LIKE(rt1.c5))) ORDER BY ((((rt1.c5)GLOB(t0.c1))) BETWEEN (((((((t0.c0)OR(rt1.c5)))OR(rt1.c1)))OR(NULL))) AND ((t0.c1 IN (rt1.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (TRIM((('-695794534')IS(rt1.c4)), rt1.c5)) ORDER BY (rt1.c0 IN ((rt1.c5 IN (rt1.c1, -986396451))));
SELECT DISTINCT * FROM rt1 WHERE (TRIM((('-695794534')IS(rt1.c4)), rt1.c5)) ORDER BY (((rt1.c5, rt1.c4, rt1.c4)) BETWEEN ((rt1.c5, rt1.c1, rt1.c3)) AND ((rt1.c0, rt1.c5, rt1.c2))) COLLATE BINARY COLLATE RTRIM  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CASE (rt1.c3 IN (rt1.c5))  WHEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c2)) THEN CASE rt1.c5  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c4 END WHEN CAST(rt1.c6 AS REAL) THEN ((rt1.c2)IS NOT(0.5870561471796082)) WHEN (rt1.c1 IN (rt1.c6)) THEN (((rt1.c6, 0x78ca250, rt1.c1, rt1.c0))>=((rt1.c1, rt1.c0, x'a592', rt1.c3))) WHEN CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 END THEN (((rt1.c4))==((rt1.c5))) WHEN CASE WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 END THEN rt1.c6 ELSE rt1.c0 END) ORDER BY (((rt1.c5, rt1.c4, rt1.c4)) BETWEEN ((rt1.c5, rt1.c1, rt1.c3)) AND ((rt1.c0, rt1.c5, rt1.c2))) COLLATE BINARY COLLATE RTRIM  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM rt1 WHERE (TRIM((('-695794534')IS(rt1.c4)), rt1.c5)) ORDER BY (rt1.c0 IN ((rt1.c5 IN (rt1.c1, -986396451))));
SELECT DISTINCT * FROM rt1 WHERE (TRIM((('-695794534')IS(rt1.c4)), rt1.c5)) ORDER BY (((rt1.c5, rt1.c4, rt1.c4)) BETWEEN ((rt1.c5, rt1.c1, rt1.c3)) AND ((rt1.c0, rt1.c5, rt1.c2))) COLLATE BINARY COLLATE RTRIM  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CASE (rt1.c3 IN (rt1.c5))  WHEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c2)) THEN CASE rt1.c5  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c4 END WHEN CAST(rt1.c6 AS REAL) THEN ((rt1.c2)IS NOT(0.5870561471796082)) WHEN (rt1.c1 IN (rt1.c6)) THEN (((rt1.c6, 0x78ca250, rt1.c1, rt1.c0))>=((rt1.c1, rt1.c0, x'a592', rt1.c3))) WHEN CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 END THEN (((rt1.c4))==((rt1.c5))) WHEN CASE WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 END THEN rt1.c6 ELSE rt1.c0 END) ORDER BY (((rt1.c5, rt1.c4, rt1.c4)) BETWEEN ((rt1.c5, rt1.c1, rt1.c3)) AND ((rt1.c0, rt1.c5, rt1.c2))) COLLATE BINARY COLLATE RTRIM  NULLS FIRST LIMIT 0X0;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)) COLLATE BINARY) ORDER BY CASE WHEN rt1.c4 THEN ((((rt1.c5)AND(rt1.c3)))OR(rt1.c5)) ELSE ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c6)) END  NULLS LAST, rt1.c2, ((NULLIF(DISTINCT rt1.c6, rt1.c0))|(((((rt1.c6)AND(rt1.c0)))AND(rt1.c4))))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)) COLLATE BINARY)AND(x'801f'))) ORDER BY CASE WHEN rt1.c4 THEN ((((rt1.c5)AND(rt1.c3)))OR(rt1.c5)) ELSE ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c6)) END  NULLS LAST, rt1.c2, ((NULLIF(DISTINCT rt1.c6, rt1.c0))|(((((rt1.c6)AND(rt1.c0)))AND(rt1.c4))))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (x'') ORDER BY CASE WHEN rt1.c4 THEN ((((rt1.c5)AND(rt1.c3)))OR(rt1.c5)) ELSE ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c6)) END  NULLS LAST, rt1.c2, ((NULLIF(DISTINCT rt1.c6, rt1.c0))|(((((rt1.c6)AND(rt1.c0)))AND(rt1.c4))))  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM rt1, t0 WHERE (((UNLIKELY(rt1.c6))+(LIKELIHOOD(t0.c1, t0.c2)))) ORDER BY (((t0.c3, t0.c1, rt1.c2, t0.c1)) BETWEEN ((t0.c0, t0.c3, rt1.c2, t0.c0)) AND (('-1980698300', rt1.c0, rt1.c1, t0.c3))) COLLATE NOCASE  NULLS LAST, CAST((NOT (NULL)) AS INTEGER) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0 WHERE (((UNLIKELY(rt1.c6))+(LIKELIHOOD(t0.c1, t0.c2)))) ORDER BY rt1.c1 ASC LIMIT 0x0;
SELECT ALL MAX(t0.c2) FROM rt1, t0 WHERE ((0.7811797929712536 IN ((+ (t0.c0)), 'EF1\N)2mv')));
SELECT MAX(t0.c2) FROM rt1, t0 WHERE ((0.7811797929712536 IN ((+ (t0.c0)), 'EF1\N)2mv'))) ORDER BY (((t0.c1, ((((t0.c3)AND(rt1.c2)))OR(t0.c2)), CAST(rt1.c5 AS BLOB)))>=((((rt1.c6)+(rt1.c1)), ((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)), ((rt1.c4)<(x'04')))))  NULLS LAST, rt1.c4, (CASE WHEN t0.c2 THEN t0.c3 WHEN rt1.c0 THEN rt1.c5 ELSE t0.c3 END IN ())  NULLS LAST LIMIT 0X2 INTERSECT SELECT MAX(t0.c2) FROM rt1, t0 WHERE (load_extension('{}')) ORDER BY (((t0.c1, ((((t0.c3)AND(rt1.c2)))OR(t0.c2)), CAST(rt1.c5 AS BLOB)))>=((((rt1.c6)+(rt1.c1)), ((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)), ((rt1.c4)<(x'04')))))  NULLS LAST, rt1.c4, (CASE WHEN t0.c2 THEN t0.c3 WHEN rt1.c0 THEN rt1.c5 ELSE t0.c3 END IN ())  NULLS LAST LIMIT 0X2;
SELECT * FROM rt1, t0 WHERE (((UNLIKELY(DISTINCT rt1.c4)) IS FALSE)) ORDER BY (((t0.c4)IS NOT(rt1.c0)) IN (((rt1.c1) NOT BETWEEN (x'c6') AND (t0.c4))))  NULLS FIRST, ((((rt1.c0)+(rt1.c4)))IS(CAST('1664405135' AS INTEGER))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((UNLIKELY(DISTINCT rt1.c4)) IS FALSE))AND(((((t0.c0)||(0x3b65eaae)))OR(((((((rt1.c2)OR(t0.c3)))OR(t0.c1)))OR(t0.c1))))))) ORDER BY (((t0.c4)IS NOT(rt1.c0)) IN (((rt1.c1) NOT BETWEEN (x'c6') AND (t0.c4))))  NULLS FIRST, ((((rt1.c0)+(rt1.c4)))IS(CAST('1664405135' AS INTEGER))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((rt1.c4 COLLATE BINARY IN ())) ORDER BY (((t0.c4)IS NOT(rt1.c0)) IN (((rt1.c1) NOT BETWEEN (x'c6') AND (t0.c4))))  NULLS FIRST, ((((rt1.c0)+(rt1.c4)))IS(CAST('1664405135' AS INTEGER))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM rt1, t0 WHERE (((UNLIKELY(DISTINCT rt1.c4)) IS FALSE)) ORDER BY (((t0.c4)IS NOT(rt1.c0)) IN (((rt1.c1) NOT BETWEEN (x'c6') AND (t0.c4))))  NULLS FIRST, ((((rt1.c0)+(rt1.c4)))IS(CAST('1664405135' AS INTEGER))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((UNLIKELY(DISTINCT rt1.c4)) IS FALSE))AND(((((t0.c0)||(0x3b65eaae)))OR(((((((rt1.c2)OR(t0.c3)))OR(t0.c1)))OR(t0.c1))))))) ORDER BY (((t0.c4)IS NOT(rt1.c0)) IN (((rt1.c1) NOT BETWEEN (x'c6') AND (t0.c4))))  NULLS FIRST, ((((rt1.c0)+(rt1.c4)))IS(CAST('1664405135' AS INTEGER))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((rt1.c4 COLLATE BINARY IN ())) ORDER BY (((t0.c4)IS NOT(rt1.c0)) IN (((rt1.c1) NOT BETWEEN (x'c6') AND (t0.c4))))  NULLS FIRST, ((((rt1.c0)+(rt1.c4)))IS(CAST('1664405135' AS INTEGER))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t0, rt1 WHERE (((((rt1.c0) IS FALSE))OR((t0.c4 IN ())))) ORDER BY rt1.c3 ASC;
SELECT ALL * FROM t0, rt1 WHERE (((((((rt1.c0) IS FALSE))OR((t0.c4 IN ()))))AND(CAST((('-650251463')<=(t0.c4)) AS INTEGER)))) ORDER BY ((((((t0.c4)|(t0.c0)))AND((rt1.c3 IN ()))))AND(rt1.c6 COLLATE BINARY))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t0, rt1 WHERE ((((rt1.c0 IN (t0.c0)))<=(((t0.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4))))) ORDER BY ((((((t0.c4)|(t0.c0)))AND((rt1.c3 IN ()))))AND(rt1.c6 COLLATE BINARY))  NULLS LAST LIMIT 0;
SELECT * FROM t0, rt1 WHERE (((((rt1.c0) IS FALSE))OR((t0.c4 IN ())))) ORDER BY rt1.c3 ASC;
SELECT ALL * FROM t0, rt1 WHERE (((((((rt1.c0) IS FALSE))OR((t0.c4 IN ()))))AND(CAST((('-650251463')<=(t0.c4)) AS INTEGER)))) ORDER BY ((((((t0.c4)|(t0.c0)))AND((rt1.c3 IN ()))))AND(rt1.c6 COLLATE BINARY))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t0, rt1 WHERE ((((rt1.c0 IN (t0.c0)))<=(((t0.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4))))) ORDER BY ((((((t0.c4)|(t0.c0)))AND((rt1.c3 IN ()))))AND(rt1.c6 COLLATE BINARY))  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))>(x'')));
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c0 AS NUMERIC))>(x'')))AND(((t0.c4)>(t0.c3)) COLLATE RTRIM))) ORDER BY COALESCE(DISTINCT (((t0.c2, t0.c3, t0.c4, t0.c4)) NOT BETWEEN ((t0.c4, t0.c2, t0.c0, -1436876185)) AND ((t0.c3, t0.c2, t0.c4, t0.c0))), t0.c1, ((t0.c3)-(t0.c1)))  NULLS LAST, '0.3070050356607299' LIMIT 0 INTERSECT SELECT COUNT(*) FROM t0 WHERE (((t0.c4) NOT NULL)) ORDER BY COALESCE(DISTINCT (((t0.c2, t0.c3, t0.c4, t0.c4)) NOT BETWEEN ((t0.c4, t0.c2, t0.c0, 0xffffffffaa5b0267)) AND ((t0.c3, t0.c2, t0.c4, t0.c0))), t0.c1, ((t0.c3)-(t0.c1)))  NULLS LAST, '0.3070050356607299' LIMIT 0;
SELECT ALL MAX(rt1.c6) FROM rt1, t0 WHERE (LIKELY(DISTINCT ((rt1.c6) IS TRUE))) ORDER BY ((t0.c2) NOT NULL) DESC  NULLS LAST, (((t0.c0)) BETWEEN ((TRIM(t0.c2))) AND (((((rt1.c4, t0.c1, rt1.c4))<=((rt1.c1, t0.c1, rt1.c1)))))) DESC;
SELECT MAX(rt1.c6) FROM rt1, t0 WHERE (LIKELY(DISTINCT ((rt1.c6) IS TRUE))) ORDER BY ((t0.c2) NOT NULL) DESC  NULLS LAST, (((t0.c0)) BETWEEN ((TRIM(t0.c2))) AND (((((rt1.c4, t0.c1, rt1.c4))<=((rt1.c1, t0.c1, rt1.c1)))))) DESC LIMIT 3;
SELECT MIN(rt1.c5) FROM rt1, t0 WHERE (((CAST(t0.c1 AS BLOB)) NOT BETWEEN (rt1.c1) AND (t0.c1))) ORDER BY (((+ (rt1.c3)))>>(t0.c4))  NULLS LAST;
SELECT ALL MIN(rt1.c5) FROM rt1, t0 WHERE (((((CAST(t0.c1 AS BLOB)) NOT BETWEEN (rt1.c1) AND (t0.c1)))AND(((CASE WHEN rt1.c2 THEN t0.c0 END) NOT BETWEEN ((((0X3b65eaae)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) AND (CAST(t0.c3 AS TEXT)))))) ORDER BY (((+ (rt1.c3)))>>(t0.c4))  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c4 IN (rt1.c2)))/((((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c5))))));
SELECT ALL * FROM rt1, t0 NOT INDEXED WHERE ((((((rt1.c4 IN (rt1.c2)))/((((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c5))))))AND(CASE 986744875  WHEN (t0.c1 IN ()) THEN (((t0.c4, rt1.c6))>=((t0.c0, t0.c2))) WHEN (- (t0.c1)) THEN ((((((rt1.c2)AND('Xxx4')))OR(rt1.c6)))OR(t0.c1)) WHEN ((t0.c1)*(t0.c2)) THEN ((t0.c0)*(x'')) ELSE CAST(rt1.c6 AS REAL) END))) LIMIT 1 INTERSECT SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c4, t0.c1, CASE rt1.c6  WHEN t0.c3 THEN t0.c1 END, ((t0.c1) BETWEEN (t0.c3) AND (t0.c0))))>=(('nZw+蹣', CASE t0.c0  WHEN t0.c0 THEN rt1.c5 WHEN t0.c2 THEN rt1.c3 ELSE t0.c2 END, ((((((t0.c1)OR(rt1.c4)))AND(t0.c2)))AND(rt1.c6)), NULL)))) LIMIT 0X1;
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c4 IN (rt1.c2)))/((((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c5))))));
SELECT ALL * FROM rt1, t0 NOT INDEXED WHERE ((((((rt1.c4 IN (rt1.c2)))/((((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c5))))))AND(CASE 986744875  WHEN (t0.c1 IN ()) THEN (((t0.c4, rt1.c6))>=((t0.c0, t0.c2))) WHEN (- (t0.c1)) THEN ((((((rt1.c2)AND('Xxx4')))OR(rt1.c6)))OR(t0.c1)) WHEN ((t0.c1)*(t0.c2)) THEN ((t0.c0)*(x'')) ELSE CAST(rt1.c6 AS REAL) END))) LIMIT 1 INTERSECT SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c4, t0.c1, CASE rt1.c6  WHEN t0.c3 THEN t0.c1 END, ((t0.c1) BETWEEN (t0.c3) AND (t0.c0))))>=(('nZw+蹣', CASE t0.c0  WHEN t0.c0 THEN rt1.c5 WHEN t0.c2 THEN rt1.c3 ELSE t0.c2 END, ((((((t0.c1)OR(rt1.c4)))AND(t0.c2)))AND(rt1.c6)), NULL)))) LIMIT 0X1;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2)||(rt1.c4)), rt1.c2))<(((+ (x'cc')), ((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c4)))OR(rt1.c5)))AND(rt1.c2)))))) ORDER BY ((((rt1.c6)||(rt1.c4))) NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND (rt1.c5));
SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c2)||(rt1.c4)), rt1.c2))<(((+ (x'cc')), ((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c4)))OR(rt1.c5)))AND(rt1.c2))))))AND(CASE WHEN (('<T*꒔|*g')GLOB(rt1.c2)) THEN json_array_length(rt1.c3, rt1.c3) WHEN CAST(rt1.c4 AS BLOB) THEN ((rt1.c4) IS TRUE) WHEN ((rt1.c3)*(rt1.c5)) THEN (rt1.c0 IN (rt1.c0)) ELSE ((rt1.c4)>(rt1.c4)) END))) ORDER BY LOWER((~ (rt1.c6))) ASC  NULLS FIRST, (((((((((rt1.c3 IN (rt1.c0, rt1.c5)))AND(rt1.c6)))OR(((rt1.c4)<=(rt1.c3)))))AND(CAST(rt1.c4 AS NUMERIC))))AND(rt1.c4)) INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c1, rt1.c4, rt1.c0)) NOT BETWEEN ((rt1.c3, (((rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c2)) AND ((rt1.c4, '1967614267'))), (rt1.c5 IN (rt1.c1)))) AND ((((((((rt1.c6)AND(rt1.c3)))OR(rt1.c1)))AND(rt1.c0)), CAST(rt1.c2 AS REAL), '-1701853655')))) ORDER BY LOWER((~ (rt1.c6))) ASC  NULLS FIRST, (((((((((rt1.c3 IN (rt1.c0, rt1.c5)))AND(rt1.c6)))OR(((rt1.c4)<=(rt1.c3)))))AND(CAST(rt1.c4 AS NUMERIC))))AND(rt1.c4));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2)||(rt1.c4)), rt1.c2))<(((+ (x'cc')), ((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c4)))OR(rt1.c5)))AND(rt1.c2)))))) ORDER BY ((((rt1.c6)||(rt1.c4))) NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND (rt1.c5));
SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c2)||(rt1.c4)), rt1.c2))<(((+ (x'cc')), ((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c4)))OR(rt1.c5)))AND(rt1.c2))))))AND(CASE WHEN (('<T*꒔|*g')GLOB(rt1.c2)) THEN json_array_length(rt1.c3, rt1.c3) WHEN CAST(rt1.c4 AS BLOB) THEN ((rt1.c4) IS TRUE) WHEN ((rt1.c3)*(rt1.c5)) THEN (rt1.c0 IN (rt1.c0)) ELSE ((rt1.c4)>(rt1.c4)) END))) ORDER BY LOWER((~ (rt1.c6))) ASC  NULLS FIRST, (((((((((rt1.c3 IN (rt1.c0, rt1.c5)))AND(rt1.c6)))OR(((rt1.c4)<=(rt1.c3)))))AND(CAST(rt1.c4 AS NUMERIC))))AND(rt1.c4)) INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c1, rt1.c4, rt1.c0)) NOT BETWEEN ((rt1.c3, (((rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c2)) AND ((rt1.c4, '1967614267'))), (rt1.c5 IN (rt1.c1)))) AND ((((((((rt1.c6)AND(rt1.c3)))OR(rt1.c1)))AND(rt1.c0)), CAST(rt1.c2 AS REAL), '-1701853655')))) ORDER BY LOWER((~ (rt1.c6))) ASC  NULLS FIRST, (((((((((rt1.c3 IN (rt1.c0, rt1.c5)))AND(rt1.c6)))OR(((rt1.c4)<=(rt1.c3)))))AND(CAST(rt1.c4 AS NUMERIC))))AND(rt1.c4));
SELECT ALL MIN(t0.c0) FROM rt1, t0 WHERE ((((t0.c2 COLLATE RTRIM, rt1.c1 COLLATE BINARY))>=(((((t0.c0, rt1.c4, t0.c0))<=((rt1.c0, rt1.c0, rt1.c2))), 'NOu >')))) ORDER BY (((NULL, rt1.c6)) NOT BETWEEN ((((0.5282283957617471)*(t0.c3)), LIKELY(t0.c0))) AND ((ABS(0xfffffffffebc818e), (NOT (rt1.c3))))), rt1.c6 COLLATE NOCASE ASC  NULLS LAST, CAST(t0.c3 AS REAL);
SELECT ALL MIN(t0.c0) FROM rt1, t0 WHERE ((((((t0.c2 COLLATE RTRIM, rt1.c1 COLLATE BINARY))>=(((((t0.c0, rt1.c4, t0.c0))<=((rt1.c0, rt1.c0, rt1.c2))), 'NOu >'))))AND((((rt1.c4 IN ())) NOTNULL)))) ORDER BY (((NULL, rt1.c6)) NOT BETWEEN ((((0.5282283957617471)*(t0.c3)), LIKELY(t0.c0))) AND ((ABS(-21200498), (NOT (rt1.c3))))), rt1.c6 COLLATE NOCASE ASC  NULLS LAST, CAST(t0.c3 AS REAL) INTERSECT SELECT MIN(t0.c0) FROM rt1, t0 WHERE ((NOT (((((t0.c2)OR(rt1.c4)))AND(0.8664384533844339))))) ORDER BY (((NULL, rt1.c6)) NOT BETWEEN ((((0.5282283957617471)*(t0.c3)), LIKELY(t0.c0))) AND ((ABS(-21200498), (NOT (rt1.c3))))), rt1.c6 COLLATE NOCASE ASC  NULLS LAST, CAST(t0.c3 AS REAL);
SELECT ALL MIN(t0.c3) FROM rt1, t0 WHERE (HEX(rt1.c5 COLLATE BINARY));
SELECT DISTINCT MIN(t0.c3) FROM rt1, t0 WHERE (((HEX(rt1.c5 COLLATE BINARY))AND(CASE WHEN (((((((((('-0.0')AND(rt1.c1)))AND(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(rt1.c5)) THEN CAST(rt1.c0 AS INTEGER) ELSE ((rt1.c5)/(rt1.c3)) END))) LIMIT 1;
SELECT * FROM t0 WHERE (CAST(((t0.c1)<(t0.c0)) AS REAL)) ORDER BY ((t0.c4) ISNULL)  NULLS LAST, (((((((((t0.c1, t0.c3, t0.c1, NULL))>=((t0.c2, t0.c2, t0.c2, t0.c1))))AND((((t0.c0, t0.c4, t0.c2)) BETWEEN ((t0.c1, t0.c4, t0.c1)) AND ((t0.c3, t0.c4, t0.c1))))))AND((t0.c2 IN (t0.c3)))))OR(((t0.c2) NOT BETWEEN (0xffffffff86ffcbb2) AND ('-608623216')))), NULL DESC, t0.c1 DESC;
SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c1)<(t0.c0)) AS REAL)) ORDER BY (((- ('釴0')))OR(t0.c2)) ASC, NULL, ((((t0.c1) ISNULL)) ISNULL) DESC LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c2, t0.c2 COLLATE NOCASE))>=((CASE WHEN t0.c0 THEN t0.c4 WHEN t0.c1 THEN t0.c2 END, ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))))) ORDER BY (((- ('釴0')))OR(t0.c2)) ASC, NULL, ((((t0.c1) ISNULL)) ISNULL) DESC LIMIT 0x2;
SELECT * FROM t0 WHERE (CAST(((t0.c1)<(t0.c0)) AS REAL)) ORDER BY ((t0.c4) ISNULL)  NULLS LAST, (((((((((t0.c1, t0.c3, t0.c1, NULL))>=((t0.c2, t0.c2, t0.c2, t0.c1))))AND((((t0.c0, t0.c4, t0.c2)) BETWEEN ((t0.c1, t0.c4, t0.c1)) AND ((t0.c3, t0.c4, t0.c1))))))AND((t0.c2 IN (t0.c3)))))OR(((t0.c2) NOT BETWEEN (0xffffffff86ffcbb2) AND ('-608623216')))), NULL DESC, t0.c1 DESC;
SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c1)<(t0.c0)) AS REAL)) ORDER BY (((- ('釴0')))OR(t0.c2)) ASC, NULL, ((((t0.c1) ISNULL)) ISNULL) DESC LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c2, t0.c2 COLLATE NOCASE))>=((CASE WHEN t0.c0 THEN t0.c4 WHEN t0.c1 THEN t0.c2 END, ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))))) ORDER BY (((- ('釴0')))OR(t0.c2)) ASC, NULL, ((((t0.c1) ISNULL)) ISNULL) DESC LIMIT 0x2;
SELECT ALL * FROM t0, rt1 WHERE (((CASE WHEN t0.c2 THEN '1002965645' WHEN NULL THEN t0.c1 ELSE '>j2D}r68' END) NOT NULL));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((CASE WHEN t0.c2 THEN '1002965645' WHEN NULL THEN t0.c1 ELSE '>j2D}r68' END) NOT NULL))AND((((((+ (rt1.c6)))AND((~ (t0.c4)))))OR(((rt1.c2)|(t0.c3))))))) ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN ((~ (t0.c4))) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))) ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((+ (t0.c2))) ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN ((~ (t0.c4))) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))) ASC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t0, rt1 WHERE (((CASE WHEN t0.c2 THEN '1002965645' WHEN NULL THEN t0.c1 ELSE '>j2D}r68' END) NOT NULL));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((CASE WHEN t0.c2 THEN '1002965645' WHEN NULL THEN t0.c1 ELSE '>j2D}r68' END) NOT NULL))AND((((((+ (rt1.c6)))AND((~ (t0.c4)))))OR(((rt1.c2)|(t0.c3))))))) ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN ((~ (t0.c4))) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))) ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((+ (t0.c2))) ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN ((~ (t0.c4))) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))) ASC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c1)AND(rt1.c6)))OR(rt1.c1)))OR(rt1.c2))) IS FALSE)) ORDER BY (((rt1.c0, rt1.c6, rt1.c4)) BETWEEN ((rt1.c0, rt1.c3, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c5))) COLLATE NOCASE ASC, CAST(((rt1.c1)&(rt1.c6)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((((((rt1.c1)AND(rt1.c6)))OR(rt1.c1)))OR(rt1.c2))) IS FALSE)) ORDER BY (((rt1.c0, rt1.c6, rt1.c4)) BETWEEN ((rt1.c0, rt1.c3, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c5))) COLLATE NOCASE ASC, CAST(((rt1.c1)&(rt1.c6)) AS NUMERIC)  NULLS FIRST LIMIT 2;
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c1)AND(rt1.c6)))OR(rt1.c1)))OR(rt1.c2))) IS FALSE)) ORDER BY (((rt1.c0, rt1.c6, rt1.c4)) BETWEEN ((rt1.c0, rt1.c3, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c5))) COLLATE NOCASE ASC, CAST(((rt1.c1)&(rt1.c6)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((((((rt1.c1)AND(rt1.c6)))OR(rt1.c1)))OR(rt1.c2))) IS FALSE)) ORDER BY (((rt1.c0, rt1.c6, rt1.c4)) BETWEEN ((rt1.c0, rt1.c3, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c5))) COLLATE NOCASE ASC, CAST(((rt1.c1)&(rt1.c6)) AS NUMERIC)  NULLS FIRST LIMIT 2;
SELECT ALL MAX(rt1.c1) FROM rt1 WHERE ((((- (rt1.c4)))IS(((rt1.c2) IS FALSE))));
SELECT ALL MAX(rt1.c1) FROM rt1 WHERE ((((- (rt1.c4)))IS(((rt1.c2) IS FALSE))));
SELECT * FROM rt1 INNER JOIN t0 ON CAST(CASE NULL  WHEN rt1.c1 THEN rt1.c0 END AS BLOB) WHERE (CASE CAST(t0.c1 AS INTEGER)  WHEN (((0.7280443742260774, t0.c4, rt1.c6, t0.c4, 0.07593670410908415)) NOT BETWEEN ((NULL, rt1.c3, t0.c2, rt1.c2, t0.c3)) AND ((t0.c2, rt1.c6, t0.c1, t0.c4, t0.c1))) THEN ((((rt1.c0)OR(t0.c1)))OR(rt1.c5)) WHEN ((rt1.c3) NOT BETWEEN (t0.c4) AND (t0.c4)) THEN ((((rt1.c3)OR(rt1.c4)))OR(t0.c1)) WHEN (- (t0.c2)) THEN CASE WHEN t0.c3 THEN rt1.c4 WHEN rt1.c2 THEN t0.c3 WHEN t0.c3 THEN t0.c2 ELSE rt1.c4 END WHEN ((rt1.c1)<=(rt1.c6)) THEN ((((((((t0.c0)OR(t0.c3)))OR(rt1.c0)))AND(t0.c4)))AND(0.9273288927672457)) WHEN ((((((rt1.c2)AND(t0.c2)))AND(t0.c0)))OR(rt1.c4)) THEN t0.c1 COLLATE NOCASE END);
SELECT * FROM rt1 INNER JOIN t0 ON CAST(CASE NULL  WHEN rt1.c1 THEN rt1.c0 END AS BLOB) WHERE (CASE CAST(t0.c1 AS INTEGER)  WHEN (((0.7280443742260774, t0.c4, rt1.c6, t0.c4, 0.07593670410908415)) NOT BETWEEN ((NULL, rt1.c3, t0.c2, rt1.c2, t0.c3)) AND ((t0.c2, rt1.c6, t0.c1, t0.c4, t0.c1))) THEN ((((rt1.c0)OR(t0.c1)))OR(rt1.c5)) WHEN ((rt1.c3) NOT BETWEEN (t0.c4) AND (t0.c4)) THEN ((((rt1.c3)OR(rt1.c4)))OR(t0.c1)) WHEN (- (t0.c2)) THEN CASE WHEN t0.c3 THEN rt1.c4 WHEN rt1.c2 THEN t0.c3 WHEN t0.c3 THEN t0.c2 ELSE rt1.c4 END WHEN ((rt1.c1)<=(rt1.c6)) THEN ((((((((t0.c0)OR(t0.c3)))OR(rt1.c0)))AND(t0.c4)))AND(0.9273288927672457)) WHEN ((((((rt1.c2)AND(t0.c2)))AND(t0.c0)))OR(rt1.c4)) THEN t0.c1 COLLATE NOCASE END) ORDER BY ((((((((((rt1.c5)<=('')))OR(rt1.c0)))AND((rt1.c6 IN (rt1.c4)))))AND(((((((((t0.c4)OR(t0.c1)))OR(t0.c1)))OR(rt1.c0)))AND(rt1.c2)))))AND(((t0.c0) IS FALSE)))  NULLS FIRST INTERSECT SELECT ALL * FROM rt1 INNER JOIN t0 ON CAST(CASE NULL  WHEN rt1.c1 THEN rt1.c0 END AS BLOB) WHERE (CAST(t0.c4 AS BLOB) COLLATE BINARY) ORDER BY ((((((((((rt1.c5)<=('')))OR(rt1.c0)))AND((rt1.c6 IN (rt1.c4)))))AND(((((((((t0.c4)OR(t0.c1)))OR(t0.c1)))OR(rt1.c0)))AND(rt1.c2)))))AND(((t0.c0) IS FALSE)))  NULLS FIRST;
SELECT * FROM rt1 INNER JOIN t0 ON CAST(CASE NULL  WHEN rt1.c1 THEN rt1.c0 END AS BLOB) WHERE (CASE CAST(t0.c1 AS INTEGER)  WHEN (((0.7280443742260774, t0.c4, rt1.c6, t0.c4, 0.07593670410908415)) NOT BETWEEN ((NULL, rt1.c3, t0.c2, rt1.c2, t0.c3)) AND ((t0.c2, rt1.c6, t0.c1, t0.c4, t0.c1))) THEN ((((rt1.c0)OR(t0.c1)))OR(rt1.c5)) WHEN ((rt1.c3) NOT BETWEEN (t0.c4) AND (t0.c4)) THEN ((((rt1.c3)OR(rt1.c4)))OR(t0.c1)) WHEN (- (t0.c2)) THEN CASE WHEN t0.c3 THEN rt1.c4 WHEN rt1.c2 THEN t0.c3 WHEN t0.c3 THEN t0.c2 ELSE rt1.c4 END WHEN ((rt1.c1)<=(rt1.c6)) THEN ((((((((t0.c0)OR(t0.c3)))OR(rt1.c0)))AND(t0.c4)))AND(0.9273288927672457)) WHEN ((((((rt1.c2)AND(t0.c2)))AND(t0.c0)))OR(rt1.c4)) THEN t0.c1 COLLATE NOCASE END);
SELECT * FROM rt1 INNER JOIN t0 ON CAST(CASE NULL  WHEN rt1.c1 THEN rt1.c0 END AS BLOB) WHERE (CASE CAST(t0.c1 AS INTEGER)  WHEN (((0.7280443742260774, t0.c4, rt1.c6, t0.c4, 0.07593670410908415)) NOT BETWEEN ((NULL, rt1.c3, t0.c2, rt1.c2, t0.c3)) AND ((t0.c2, rt1.c6, t0.c1, t0.c4, t0.c1))) THEN ((((rt1.c0)OR(t0.c1)))OR(rt1.c5)) WHEN ((rt1.c3) NOT BETWEEN (t0.c4) AND (t0.c4)) THEN ((((rt1.c3)OR(rt1.c4)))OR(t0.c1)) WHEN (- (t0.c2)) THEN CASE WHEN t0.c3 THEN rt1.c4 WHEN rt1.c2 THEN t0.c3 WHEN t0.c3 THEN t0.c2 ELSE rt1.c4 END WHEN ((rt1.c1)<=(rt1.c6)) THEN ((((((((t0.c0)OR(t0.c3)))OR(rt1.c0)))AND(t0.c4)))AND(0.9273288927672457)) WHEN ((((((rt1.c2)AND(t0.c2)))AND(t0.c0)))OR(rt1.c4)) THEN t0.c1 COLLATE NOCASE END) ORDER BY ((((((((((rt1.c5)<=('')))OR(rt1.c0)))AND((rt1.c6 IN (rt1.c4)))))AND(((((((((t0.c4)OR(t0.c1)))OR(t0.c1)))OR(rt1.c0)))AND(rt1.c2)))))AND(((t0.c0) IS FALSE)))  NULLS FIRST INTERSECT SELECT ALL * FROM rt1 INNER JOIN t0 ON CAST(CASE NULL  WHEN rt1.c1 THEN rt1.c0 END AS BLOB) WHERE (CAST(t0.c4 AS BLOB) COLLATE BINARY) ORDER BY ((((((((((rt1.c5)<=('')))OR(rt1.c0)))AND((rt1.c6 IN (rt1.c4)))))AND(((((((((t0.c4)OR(t0.c1)))OR(t0.c1)))OR(rt1.c0)))AND(rt1.c2)))))AND(((t0.c0) IS FALSE)))  NULLS FIRST;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (((((t0.c0 COLLATE RTRIM)AND(CASE WHEN t0.c4 THEN t0.c3 END)))OR(0.40921649164203133))) ORDER BY (((((x'')OR(t0.c4)))AND(t0.c2)) IN ()), (((((((((((t0.c1 IN ()))AND(((t0.c0)==(t0.c1)))))AND((+ (t0.c4)))))AND(((t0.c3)GLOB(t0.c4)))))OR(1027784514)))OR(((((t0.c0)AND(t0.c3)))AND(t0.c4))));
SELECT MAX(t0.c3) FROM t0 WHERE (((((((t0.c0 COLLATE RTRIM)AND(CASE WHEN t0.c4 THEN t0.c3 END)))OR(0.40921649164203133)))AND((t0.c3 COLLATE RTRIM IN ((t0.c0 IN (t0.c2, t0.c1))))))) ORDER BY ((CAST(t0.c4 AS NUMERIC)) IS TRUE) DESC  NULLS LAST, (((t0.c3)>=(t0.c2)) IN (((t0.c3) IS TRUE))) INTERSECT SELECT MAX(t0.c3) FROM t0 WHERE (((t0.c3 COLLATE RTRIM)>((NOT (t0.c0))))) ORDER BY ((CAST(t0.c4 AS NUMERIC)) IS TRUE) DESC  NULLS LAST, (((t0.c3)>=(t0.c2)) IN (((t0.c3) IS TRUE)));
SELECT MIN(t0.c2) FROM t0, rt1 WHERE (t0.c0) ORDER BY ((((rt1.c6) NOTNULL))/(((t0.c2)/(rt1.c6))));
SELECT ALL MIN(t0.c2) FROM t0, rt1 WHERE (((t0.c0)AND(((CAST(0.8850995107970847 AS NUMERIC)) BETWEEN (rt1.c4) AND ((((rt1.c3, t0.c2)) NOT BETWEEN ((rt1.c5, rt1.c6)) AND ((rt1.c6, rt1.c3)))))))) ORDER BY ((((rt1.c6) NOTNULL))/(((t0.c2)/(rt1.c6)))) LIMIT 4 INTERSECT SELECT ALL MIN(t0.c2) FROM t0, rt1 WHERE (((t0.c2)>(CASE t0.c1  WHEN t0.c4 THEN rt1.c3 WHEN rt1.c2 THEN t0.c1 WHEN t0.c0 THEN rt1.c4 WHEN t0.c2 THEN t0.c1 WHEN rt1.c0 THEN rt1.c0 WHEN x'' THEN rt1.c5 WHEN t0.c1 THEN t0.c2 END))) ORDER BY ((((rt1.c6) NOTNULL))/(((t0.c2)/(rt1.c6)))) LIMIT 4;
SELECT ALL * FROM t0 WHERE ('1664405135');
SELECT ALL * FROM t0 WHERE ((('1664405135')AND(((((((t0.c2)!=(t0.c0)))OR((~ (t0.c3)))))AND((t0.c2 IN (t0.c1))))))) ORDER BY (((((((1.191777648E9))<((t0.c2))))AND(t0.c0)))OR((t0.c2 IN (t0.c3, t0.c0)))) ASC, CAST((t0.c0 IN (t0.c3, t0.c3)) AS BLOB) ASC, (((5.91531326E8)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) COLLATE RTRIM LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ('1664405135');
SELECT ALL * FROM t0 WHERE ((('1664405135')AND(((((((t0.c2)!=(t0.c0)))OR((~ (t0.c3)))))AND((t0.c2 IN (t0.c1))))))) ORDER BY (((((((1.191777648E9))<((t0.c2))))AND(t0.c0)))OR((t0.c2 IN (t0.c3, t0.c0)))) ASC, CAST((t0.c0 IN (t0.c3, t0.c3)) AS BLOB) ASC, (((5.91531326E8)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) COLLATE RTRIM LIMIT 0X0;
SELECT ALL * FROM t0, rt1 WHERE (UPPER(DISTINCT ((t0.c1)*(t0.c2)))) ORDER BY (~ (((t0.c0)>>(rt1.c1)))), (CAST(t0.c1 AS INTEGER) IN ()) DESC;
SELECT * FROM t0, rt1 WHERE (UPPER(DISTINCT ((t0.c1)*(t0.c2)))) ORDER BY (~ (((t0.c0)>>(rt1.c1)))), (CAST(t0.c1 AS INTEGER) IN ()) DESC LIMIT 0x0 INTERSECT SELECT * FROM t0, rt1 WHERE (((((((((rt1.c1)AND(rt1.c6)))AND('-1908681393')))AND(rt1.c5)))OR(LIKELIHOOD(139625657, t0.c4)))) ORDER BY (~ (((t0.c0)>>(rt1.c1)))), (CAST(t0.c1 AS INTEGER) IN ()) DESC LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE (UPPER(DISTINCT ((t0.c1)*(t0.c2)))) ORDER BY (~ (((t0.c0)>>(rt1.c1)))), (CAST(t0.c1 AS INTEGER) IN ()) DESC;
SELECT ALL MAX(rt1.c1) FROM t0 LEFT OUTER JOIN rt1 ON (+ (t0.c3 COLLATE RTRIM)) WHERE (((((((0.7740754400410693)AND(t0.c0 COLLATE NOCASE)))AND(((t0.c4)>(rt1.c2)))))AND(rt1.c5)));
SELECT DISTINCT MAX(rt1.c1) FROM t0 LEFT OUTER JOIN rt1 ON (+ (t0.c3 COLLATE RTRIM)) WHERE (((((((0.7740754400410693)AND(t0.c0 COLLATE NOCASE)))AND(((t0.c4)>(rt1.c2)))))AND(rt1.c5))) LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)OR(t0.c1)))OR(t0.c4)))AND(t0.c1)))AND(t0.c2)))IS NOT(t0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c1)))OR(t0.c4)))AND(t0.c1)))AND(t0.c2)))IS NOT(t0.c0)))AND(((((((((1.191777648E9)OR(t0.c2)))AND(t0.c0)))AND(t0.c1)))GLOB(SQLITE_VERSION()))))) ORDER BY CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c0 THEN t0.c3 WHEN t0.c0 THEN NULL END COLLATE RTRIM COLLATE NOCASE  NULLS FIRST, ((((((((((t0.c3)OR(t0.c2)))OR(NULL)))OR(t0.c4)))OR(t0.c2)))>>(CAST(x'e092' AS NUMERIC)));
SELECT * FROM t0 WHERE (((((((t0.c1)AND(((t0.c1)&(x'e4')))))OR((t0.c4 IN ()))))OR((((NULL)) BETWEEN ((x'')) AND ((t0.c3)))))) ORDER BY ((CAST(t0.c4 AS TEXT)) BETWEEN (((((((((t0.c4)AND(t0.c2)))OR(t0.c1)))OR(t0.c4)))AND(t0.c0))) AND (((t0.c3) BETWEEN (t0.c3) AND (t0.c3))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c1)AND(((t0.c1)&(x'e4')))))OR((t0.c4 IN ()))))OR((((NULL)) BETWEEN ((x'')) AND ((t0.c3)))))) ORDER BY ((CAST(t0.c4 AS TEXT)) BETWEEN (((((((((t0.c4)AND(t0.c2)))OR(t0.c1)))OR(t0.c4)))AND(t0.c0))) AND (((t0.c3) BETWEEN (t0.c3) AND (t0.c3))));
SELECT * FROM t0 WHERE (((((((t0.c1)AND(((t0.c1)&(x'e4')))))OR((t0.c4 IN ()))))OR((((NULL)) BETWEEN ((x'')) AND ((t0.c3)))))) ORDER BY ((CAST(t0.c4 AS TEXT)) BETWEEN (((((((((t0.c4)AND(t0.c2)))OR(t0.c1)))OR(t0.c4)))AND(t0.c0))) AND (((t0.c3) BETWEEN (t0.c3) AND (t0.c3))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c1)AND(((t0.c1)&(x'e4')))))OR((t0.c4 IN ()))))OR((((NULL)) BETWEEN ((x'')) AND ((t0.c3)))))) ORDER BY ((CAST(t0.c4 AS TEXT)) BETWEEN (((((((((t0.c4)AND(t0.c2)))OR(t0.c1)))OR(t0.c4)))AND(t0.c0))) AND (((t0.c3) BETWEEN (t0.c3) AND (t0.c3))));
SELECT * FROM t0 WHERE (LIKELY(((t0.c0)AND(t0.c0)))) ORDER BY ((((t0.c4) NOT NULL))IS(json_object(t0.c4, t0.c1)))  NULLS LAST, (((~ (t0.c3)))%((('T')>(t0.c4)))) ASC;
SELECT DISTINCT * FROM t0 WHERE (((LIKELY(((t0.c0)AND(t0.c0))))AND((+ (((((t0.c4)AND(t0.c4)))AND(t0.c2))))))) ORDER BY CASE NULL  WHEN (+ (t0.c1)) THEN LIKELY(DISTINCT t0.c2) WHEN t0.c3 THEN ((t0.c4)<<(0.7154829410582749)) WHEN CASE WHEN t0.c1 THEN t0.c4 WHEN x'' THEN t0.c1 WHEN t0.c2 THEN x'' WHEN t0.c4 THEN NULL WHEN t0.c4 THEN t0.c3 WHEN t0.c4 THEN t0.c4 ELSE t0.c1 END THEN CASE WHEN t0.c2 THEN t0.c0 END ELSE (- ('1163750199')) END ASC, ((t0.c3)==(t0.c1 COLLATE BINARY)) ASC, CAST(t0.c0 COLLATE NOCASE AS REAL)  NULLS LAST, ((((0.16844029936387905)AND(t0.c3 COLLATE RTRIM)))OR((t0.c2 IN (t0.c4, t0.c1, t0.c4)))) ASC  NULLS FIRST LIMIT 0X1;
SELECT * FROM t0 WHERE (LIKELY(((t0.c0)AND(t0.c0)))) ORDER BY ((((t0.c4) NOT NULL))IS(json_object(t0.c4, t0.c1)))  NULLS LAST, (((~ (t0.c3)))%((('T')>(t0.c4)))) ASC;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (UNLIKELY((~ (0.8369835162852997))));
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((UNLIKELY((~ (0.8369835162852997))))AND(TYPEOF(((((t0.c1)AND(rt1.c6)))OR(t0.c2)))))) ORDER BY ((((rt1.c5)==(rt1.c4))) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE ((NOT (t0.c2 COLLATE RTRIM)));
SELECT * FROM t0, rt1 WHERE ((NOT (t0.c2 COLLATE RTRIM))) LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE ((NOT (t0.c2 COLLATE RTRIM)));
SELECT * FROM t0, rt1 WHERE ((NOT (t0.c2 COLLATE RTRIM))) LIMIT 0x0;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (((((((t0.c2)OR(t0.c0)))AND(rt1.c6)))AND(rt1.c5)) COLLATE NOCASE) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST;
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (((((((((t0.c2)OR(t0.c0)))AND(rt1.c6)))AND(rt1.c5)) COLLATE NOCASE)AND(CAST(rt1.c5 AS TEXT)))) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST INTERSECT SELECT * FROM t0 NATURAL JOIN rt1 WHERE (((rt1.c5)LIKE(t0.c0)) COLLATE RTRIM) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (((((((t0.c2)OR(t0.c0)))AND(rt1.c6)))AND(rt1.c5)) COLLATE NOCASE) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST;
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (((((((((t0.c2)OR(t0.c0)))AND(rt1.c6)))AND(rt1.c5)) COLLATE NOCASE)AND(CAST(rt1.c5 AS TEXT)))) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST INTERSECT SELECT * FROM t0 NATURAL JOIN rt1 WHERE (((rt1.c5)LIKE(t0.c0)) COLLATE RTRIM) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((rt1.c1)OR(rt1.c5)))OR(rt1.c4)))OR(x'')))>(((rt1.c1)GLOB(rt1.c6)))));
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)OR(rt1.c5)))OR(rt1.c4)))OR(x'')))>(((rt1.c1)GLOB(rt1.c6)))))AND((rt1.c1 IN ()) COLLATE BINARY))) ORDER BY (((CASE WHEN '' THEN rt1.c5 WHEN rt1.c5 THEN rt1.c5 END))<((rt1.c1))) DESC  NULLS LAST, NULL LIMIT 1;
SELECT * FROM rt1, t0 WHERE (rt1.c5);
SELECT ALL * FROM rt1, t0 WHERE (rt1.c5) ORDER BY CAST(IFNULL(DISTINCT t0.c4, rt1.c3) AS NUMERIC) ASC, (((- (rt1.c6)))<=(NULLIF(rt1.c0, rt1.c2)));
SELECT * FROM rt1, t0 WHERE (rt1.c5);
SELECT ALL * FROM rt1, t0 WHERE (rt1.c5) ORDER BY CAST(IFNULL(DISTINCT t0.c4, rt1.c3) AS NUMERIC) ASC, (((- (rt1.c6)))<=(NULLIF(rt1.c0, rt1.c2)));
SELECT MIN(rt1.c2) FROM rt1, t0 WHERE (CASE rt1.c1 COLLATE BINARY  WHEN ((((((t0.c4)AND(t0.c4)))AND(t0.c0)))OR(rt1.c1)) THEN ((t0.c3)IS NOT(t0.c0)) ELSE CASE rt1.c2  WHEN rt1.c5 THEN 0.3832386726858822 WHEN rt1.c2 THEN rt1.c2 WHEN t0.c4 THEN t0.c3 ELSE t0.c0 END END);
SELECT MIN(rt1.c2) FROM rt1, t0 WHERE (CASE rt1.c1 COLLATE BINARY  WHEN ((((((t0.c4)AND(t0.c4)))AND(t0.c0)))OR(rt1.c1)) THEN ((t0.c3)IS NOT(t0.c0)) ELSE CASE rt1.c2  WHEN rt1.c5 THEN 0.3832386726858822 WHEN rt1.c2 THEN rt1.c2 WHEN t0.c4 THEN t0.c3 ELSE t0.c0 END END) LIMIT 0x2;
SELECT MAX(t0.c0) FROM t0 NATURAL JOIN rt1 WHERE ((~ (t0.c3 COLLATE BINARY))) ORDER BY '-298110303';
SELECT MAX(t0.c0) FROM t0 NATURAL JOIN rt1 WHERE ((((~ (t0.c3 COLLATE BINARY)))AND((((~ (0.16236289094490708)))LIKE('6w%Gdw' COLLATE RTRIM))))) ORDER BY (((rt1.c5 IN (-1.908681393E9, t0.c3, rt1.c5))) IS FALSE) DESC  NULLS LAST, ((((t0.c3)GLOB(t0.c1))) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (t0.c2 COLLATE NOCASE)) DESC  NULLS FIRST, ((((((((((((((((t0.c3)OR(rt1.c6)))AND(rt1.c6)))OR(t0.c3)))AND(((rt1.c1) ISNULL))))AND(CASE WHEN rt1.c2 THEN t0.c1 WHEN t0.c3 THEN rt1.c6 END)))OR((~ (t0.c4)))))AND((rt1.c4 IN ()))))AND(MIN(t0.c3, rt1.c3, t0.c4)));
SELECT * FROM t0, rt1 WHERE ((((rt1.c6 COLLATE RTRIM, ((rt1.c3)=(rt1.c5))))>((t0.c4, (NOT (rt1.c3)))))) ORDER BY ((CASE t0.c3  WHEN rt1.c1 THEN t0.c4 END) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c6 COLLATE RTRIM, ((rt1.c3)==(rt1.c5))))>((t0.c4, (NOT (rt1.c3)))))) ORDER BY ((CASE t0.c3  WHEN rt1.c1 THEN t0.c4 END) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0, rt1 WHERE (UNLIKELY(((rt1.c3) NOTNULL))) ORDER BY ((CASE t0.c3  WHEN rt1.c1 THEN t0.c4 END) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t0, rt1 WHERE ((((rt1.c6 COLLATE RTRIM, ((rt1.c3)=(rt1.c5))))>((t0.c4, (NOT (rt1.c3)))))) ORDER BY ((CASE t0.c3  WHEN rt1.c1 THEN t0.c4 END) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c6 COLLATE RTRIM, ((rt1.c3)==(rt1.c5))))>((t0.c4, (NOT (rt1.c3)))))) ORDER BY ((CASE t0.c3  WHEN rt1.c1 THEN t0.c4 END) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0, rt1 WHERE (UNLIKELY(((rt1.c3) NOTNULL))) ORDER BY ((CASE t0.c3  WHEN rt1.c1 THEN t0.c4 END) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL MAX(t0.c1) FROM rt1, t0 WHERE ((- (0X3716fa8e))) ORDER BY (NOT ('2025863801')) DESC, ((rt1.c6) BETWEEN (TRIM(DISTINCT t0.c3)) AND (((t0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT ALL MAX(t0.c1) FROM rt1, t0 WHERE ((((- (924252814)))AND((((0.35225566927605534 IN ()))%((('996534958') NOT BETWEEN (rt1.c4) AND (rt1.c1))))))) ORDER BY (NOT ('2025863801')) DESC, ((rt1.c6) BETWEEN (TRIM(DISTINCT t0.c3)) AND (((t0.c0) ISNULL))) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL MAX(t0.c1) FROM rt1, t0 WHERE ((((rt1.c4)AND(x'98')) IN (0Xffffffffc561a043, (rt1.c3 IN (t0.c0))))) ORDER BY (NOT ('2025863801')) DESC, ((rt1.c6) BETWEEN (TRIM(DISTINCT t0.c3)) AND (((t0.c0) ISNULL))) DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c5 WHEN 1.163750199E9 THEN rt1.c4 END COLLATE BINARY);
SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c5 WHEN 1.163750199E9 THEN rt1.c4 END COLLATE BINARY) ORDER BY ((rt1.c0)>>(rt1.c3)) COLLATE RTRIM ASC, CASE rt1.c4  WHEN rt1.c3 COLLATE NOCASE THEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) WHEN ((((((((rt1.c6)AND(rt1.c6)))AND(rt1.c5)))OR(rt1.c4)))AND(rt1.c6)) THEN (((rt1.c6)) BETWEEN ((rt1.c4)) AND ((rt1.c1))) WHEN NULLIF(rt1.c0, rt1.c5) THEN (((rt1.c5)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) END  NULLS FIRST LIMIT 0;
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c5 WHEN 1.163750199E9 THEN rt1.c4 END COLLATE BINARY);
SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c5 WHEN 1.163750199E9 THEN rt1.c4 END COLLATE BINARY) ORDER BY ((rt1.c0)>>(rt1.c3)) COLLATE RTRIM ASC, CASE rt1.c4  WHEN rt1.c3 COLLATE NOCASE THEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) WHEN ((((((((rt1.c6)AND(rt1.c6)))AND(rt1.c5)))OR(rt1.c4)))AND(rt1.c6)) THEN (((rt1.c6)) BETWEEN ((rt1.c4)) AND ((rt1.c1))) WHEN NULLIF(rt1.c0, rt1.c5) THEN (((rt1.c5)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) END  NULLS FIRST LIMIT 0;
SELECT MAX(rt1.c3) FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c5) AND (rt1.c1))) IS FALSE));
SELECT DISTINCT MAX(rt1.c3) FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c5) AND (rt1.c1))) IS FALSE)) ORDER BY ((rt1.c5 COLLATE BINARY)>=((((rt1.c5)) NOT BETWEEN ((0.3714303075141462)) AND ((rt1.c1))))) ASC  NULLS LAST, CAST(((rt1.c0)IS(rt1.c5)) AS NUMERIC) DESC LIMIT 2;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((x''))>((rt1.c1)))) NOT BETWEEN (TIME(rt1.c5, NULL, t0.c2)) AND (((rt1.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((x''))>((rt1.c1)))) NOT BETWEEN (TIME(rt1.c5, NULL, t0.c2)) AND (((rt1.c3) NOTNULL)))) ORDER BY 9.96534958E8 ASC LIMIT 0X2 INTERSECT SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CASE WHEN QUOTE(t0.c4) THEN '' WHEN '-1830655989' THEN CASE WHEN t0.c3 THEN rt1.c2 END WHEN TIME(rt1.c3, rt1.c2, t0.c0, t0.c0) THEN NULL WHEN t0.c0 THEN (7.36960138E8 IN (rt1.c1, rt1.c6)) WHEN (rt1.c2 IN (rt1.c5, t0.c0, rt1.c3)) THEN ((((((t0.c1)AND(x'2f')))OR(t0.c4)))OR(rt1.c1)) WHEN CASE t0.c4  WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN t0.c3 THEN rt1.c4 WHEN rt1.c1 THEN t0.c2 ELSE t0.c1 END THEN ((t0.c3)AND(t0.c3)) WHEN (((t0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c1))) THEN ((t0.c3) NOT BETWEEN (t0.c0) AND (rt1.c0)) WHEN (((rt1.c2, rt1.c6, t0.c0, t0.c0)) NOT BETWEEN ((t0.c3, t0.c0, rt1.c6, rt1.c6)) AND ((rt1.c3, rt1.c1, rt1.c4, rt1.c4))) THEN ((t0.c4)%(t0.c1)) ELSE ((t0.c1)>=(rt1.c2)) END) ORDER BY 9.96534958E8 ASC LIMIT 2;
SELECT MAX(rt1.c3) FROM rt1 WHERE ((((NOT (rt1.c6))) IS FALSE)) ORDER BY 0.7650159515381817 ASC  NULLS LAST, (CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c2 END IN ((((((((('-229228074')AND(NULL)))AND(rt1.c2)))OR('g')))AND(rt1.c6)), ((rt1.c6)IS NOT(rt1.c3))));
SELECT DISTINCT MAX(rt1.c3) FROM rt1 WHERE ((((NOT (rt1.c6))) IS FALSE)) ORDER BY 0.7650159515381817 ASC  NULLS LAST, (CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c2 END IN ((((((((('-229228074')AND(NULL)))AND(rt1.c2)))OR('g')))AND(rt1.c6)), ((rt1.c6)IS NOT(rt1.c3)))) LIMIT 0x5 INTERSECT SELECT DISTINCT MAX(rt1.c3) FROM rt1 WHERE (((x'') ISNULL) COLLATE RTRIM) ORDER BY 0.7650159515381817 ASC  NULLS LAST, (CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c2 END IN ((((((((('-229228074')AND(NULL)))AND(rt1.c2)))OR('g')))AND(rt1.c6)), ((rt1.c6)IS NOT(rt1.c3)))) LIMIT 5;
SELECT * FROM t0, rt1 WHERE (rt1.c6);
SELECT DISTINCT * FROM t0, rt1 WHERE (rt1.c6) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (json_patch('BF9]D', -2099328978) COLLATE BINARY);
SELECT * FROM t0, rt1 WHERE (rt1.c6);
SELECT DISTINCT * FROM t0, rt1 WHERE (rt1.c6) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (json_patch('BF9]D', -2099328978) COLLATE BINARY);
SELECT * FROM t0, rt1 WHERE (((t0.c0)<((((rt1.c1))>=((rt1.c5))))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((t0.c0)<((((rt1.c1))>=((rt1.c5)))))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((t0.c2) BETWEEN ('1173830580') AND (t0.c3)))!=(((rt1.c2)+(rt1.c6)))));
SELECT * FROM t0, rt1 WHERE (((t0.c0)<((((rt1.c1))>=((rt1.c5))))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((t0.c0)<((((rt1.c1))>=((rt1.c5)))))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (((((t0.c2) BETWEEN ('1173830580') AND (t0.c3)))!=(((rt1.c2)+(rt1.c6)))));
SELECT * FROM rt1, t0 WHERE (rt1.c3) ORDER BY ((((rt1.c2)==(rt1.c6))) BETWEEN ((rt1.c3 IN ())) AND ((+ (rt1.c6)))) ASC, (((x'')<(rt1.c2)) IN ((((t0.c2, t0.c0, rt1.c5, rt1.c1))==((rt1.c1, t0.c4, t0.c2, rt1.c4))))), CASE WHEN ((((t0.c3)AND(t0.c3)))OR(rt1.c1)) THEN CASE '-439949854'  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN rt1.c0 WHEN t0.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 ELSE t0.c2 END WHEN ((rt1.c3) NOT BETWEEN (t0.c1) AND (rt1.c6)) THEN (- (t0.c2)) WHEN rt1.c4 COLLATE RTRIM THEN t0.c1 WHEN ((t0.c3) NOT BETWEEN (rt1.c3) AND (t0.c4)) THEN (rt1.c6 IN (t0.c3)) END ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE (rt1.c3) ORDER BY ((CASE WHEN rt1.c6 THEN t0.c1 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c0 THEN t0.c1 END)IS(LOWER(t0.c4))), rt1.c0 LIMIT 2;
SELECT * FROM rt1, t0 WHERE (rt1.c3) ORDER BY ((((rt1.c2)==(rt1.c6))) BETWEEN ((rt1.c3 IN ())) AND ((+ (rt1.c6)))) ASC, (((x'')<(rt1.c2)) IN ((((t0.c2, t0.c0, rt1.c5, rt1.c1))==((rt1.c1, t0.c4, t0.c2, rt1.c4))))), CASE WHEN ((((t0.c3)AND(t0.c3)))OR(rt1.c1)) THEN CASE '-439949854'  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN rt1.c0 WHEN t0.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 ELSE t0.c2 END WHEN ((rt1.c3) NOT BETWEEN (t0.c1) AND (rt1.c6)) THEN (- (t0.c2)) WHEN rt1.c4 COLLATE RTRIM THEN t0.c1 WHEN ((t0.c3) NOT BETWEEN (rt1.c3) AND (t0.c4)) THEN (rt1.c6 IN (t0.c3)) END ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE (rt1.c3) ORDER BY ((CASE WHEN rt1.c6 THEN t0.c1 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c0 THEN t0.c1 END)IS(LOWER(t0.c4))), rt1.c0 LIMIT 2;
SELECT * FROM t0, rt1 WHERE (((((CASE WHEN rt1.c2 THEN x'52' WHEN rt1.c6 THEN rt1.c1 END)OR(x'')))OR(CAST(x'94c8fb' AS INTEGER))));
SELECT ALL * FROM t0, rt1 WHERE (((((CASE WHEN rt1.c2 THEN x'52' WHEN rt1.c6 THEN rt1.c1 END)OR(x'')))OR(CAST(x'94c8fb' AS INTEGER))));
SELECT * FROM t0, rt1 WHERE (((((CASE WHEN rt1.c2 THEN x'52' WHEN rt1.c6 THEN rt1.c1 END)OR(x'')))OR(CAST(x'94c8fb' AS INTEGER))));
SELECT ALL * FROM t0, rt1 WHERE (((((CASE WHEN rt1.c2 THEN x'52' WHEN rt1.c6 THEN rt1.c1 END)OR(x'')))OR(CAST(x'94c8fb' AS INTEGER))));
SELECT ALL MAX(t0.c4) FROM t0 NOT INDEXED WHERE ((t0.c2 IN ()) COLLATE NOCASE) ORDER BY CAST(INSTR(t0.c2, t0.c0) AS REAL), (((t0.c4)) BETWEEN ((((((t0.c2)OR(t0.c0)))OR(t0.c1)))) AND ((t0.c2))) ASC, (CAST(t0.c2 AS NUMERIC) IN (((t0.c1)OR(t0.c1))));
SELECT DISTINCT MAX(t0.c4) FROM t0 WHERE ((((t0.c2 IN ()) COLLATE NOCASE)AND(t0.c2))) ORDER BY CAST(INSTR(t0.c2, t0.c0) AS REAL), (((t0.c4)) BETWEEN ((((((t0.c2)OR(t0.c0)))OR(t0.c1)))) AND ((t0.c2))) ASC, (CAST(t0.c2 AS NUMERIC) IN (((t0.c1)OR(t0.c1)))) INTERSECT SELECT DISTINCT MAX(t0.c4) FROM t0 WHERE (0.31574632751043197 COLLATE BINARY) ORDER BY CAST(INSTR(t0.c2, t0.c0) AS REAL), (((t0.c4)) BETWEEN ((((((t0.c2)OR(t0.c0)))OR(t0.c1)))) AND ((t0.c2))) ASC, (CAST(t0.c2 AS NUMERIC) IN (((t0.c1)OR(t0.c1))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c4) IS FALSE));
SELECT COUNT(*) FROM t0 WHERE (((t0.c4) IS FALSE)) LIMIT 2 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (CAST((NOT (t0.c1)) AS INTEGER)) LIMIT 2;
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c3)GLOB(rt1.c4)) AS BLOB)) ORDER BY CASE WHEN ((((((((((NULL)AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c5)))AND(rt1.c6)))AND(rt1.c3)) THEN rt1.c5 WHEN LIKELY(rt1.c1) THEN ((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c4)) WHEN json(rt1.c6) THEN (- (rt1.c3)) WHEN ((rt1.c2)OR(NULL)) THEN CASE rt1.c1  WHEN rt1.c5 THEN rt1.c2 WHEN NULL THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN 'O' THEN rt1.c3 END WHEN (NOT (rt1.c0)) THEN (+ ('489068276')) ELSE (rt1.c0 IN ('-983457725')) END, ((((rt1.c2) ISNULL)) ISNULL)  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((CAST(((rt1.c3)GLOB(rt1.c4)) AS BLOB))AND((~ (((rt1.c3)=(rt1.c6))))))) ORDER BY CASE WHEN ((((((((((NULL)AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c5)))AND(rt1.c6)))AND(rt1.c3)) THEN rt1.c5 WHEN LIKELY(rt1.c1) THEN ((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c4)) WHEN json(rt1.c6) THEN (- (rt1.c3)) WHEN ((rt1.c2)OR(NULL)) THEN CASE rt1.c1  WHEN rt1.c5 THEN rt1.c2 WHEN NULL THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN 'O' THEN rt1.c3 END WHEN (NOT (rt1.c0)) THEN (+ ('489068276')) ELSE (rt1.c0 IN ('-983457725')) END, ((((rt1.c2) ISNULL)) ISNULL)  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM rt1 WHERE (LOWER(((rt1.c0)IS NOT(rt1.c2)))) ORDER BY CASE WHEN ((((((((((NULL)AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c5)))AND(rt1.c6)))AND(rt1.c3)) THEN rt1.c5 WHEN LIKELY(rt1.c1) THEN ((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c4)) WHEN json(rt1.c6) THEN (- (rt1.c3)) WHEN ((rt1.c2)OR(NULL)) THEN CASE rt1.c1  WHEN rt1.c5 THEN rt1.c2 WHEN NULL THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN 'O' THEN rt1.c3 END WHEN (NOT (rt1.c0)) THEN (+ ('489068276')) ELSE (rt1.c0 IN ('-983457725')) END, ((((rt1.c2) ISNULL)) ISNULL)  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c3)GLOB(rt1.c4)) AS BLOB)) ORDER BY CASE WHEN ((((((((((NULL)AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c5)))AND(rt1.c6)))AND(rt1.c3)) THEN rt1.c5 WHEN LIKELY(rt1.c1) THEN ((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c4)) WHEN json(rt1.c6) THEN (- (rt1.c3)) WHEN ((rt1.c2)OR(NULL)) THEN CASE rt1.c1  WHEN rt1.c5 THEN rt1.c2 WHEN NULL THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN 'O' THEN rt1.c3 END WHEN (NOT (rt1.c0)) THEN (+ ('489068276')) ELSE (rt1.c0 IN ('-983457725')) END, ((((rt1.c2) ISNULL)) ISNULL)  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE ((- ('0.009731400528998901'))) ORDER BY (((('<Z') IS TRUE))>(((t0.c4)>(rt1.c6)))) ASC, CAST(NULL AS REAL) COLLATE NOCASE ASC;
SELECT * FROM rt1, t0 WHERE ((((- ('0.009731400528998901')))AND((((((('섈n3F')==(t0.c4)))OR((((t0.c1, t0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2)) AND ((t0.c1, rt1.c3))))))AND(t0.c1 COLLATE RTRIM))))) ORDER BY (((('<Z') IS TRUE))>(((t0.c4)>(rt1.c6)))) ASC, CAST(NULL AS REAL) COLLATE NOCASE ASC INTERSECT SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c4, t0.c4, t0.c3, t0.c3, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, t0.c4, t0.c4, rt1.c1)) AND ((rt1.c2, rt1.c3, t0.c3, t0.c4, rt1.c1))) COLLATE BINARY COLLATE NOCASE) ORDER BY (((('<Z') IS TRUE))>(((t0.c4)>(rt1.c6)))) ASC, CAST(NULL AS REAL) COLLATE NOCASE ASC;
SELECT ALL * FROM rt1, t0 WHERE ((- ('0.009731400528998901'))) ORDER BY (((('<Z') IS TRUE))>(((t0.c4)>(rt1.c6)))) ASC, CAST(NULL AS REAL) COLLATE NOCASE ASC;
SELECT * FROM rt1, t0 WHERE ((((- ('0.009731400528998901')))AND((((((('섈n3F')==(t0.c4)))OR((((t0.c1, t0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2)) AND ((t0.c1, rt1.c3))))))AND(t0.c1 COLLATE RTRIM))))) ORDER BY (((('<Z') IS TRUE))>(((t0.c4)>(rt1.c6)))) ASC, CAST(NULL AS REAL) COLLATE NOCASE ASC INTERSECT SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c4, t0.c4, t0.c3, t0.c3, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, t0.c4, t0.c4, rt1.c1)) AND ((rt1.c2, rt1.c3, t0.c3, t0.c4, rt1.c1))) COLLATE BINARY COLLATE NOCASE) ORDER BY (((('<Z') IS TRUE))>(((t0.c4)>(rt1.c6)))) ASC, CAST(NULL AS REAL) COLLATE NOCASE ASC;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((((((rt1.c1)AND((((rt1.c6, rt1.c5, rt1.c2, t0.c1, t0.c2, t0.c4)) NOT BETWEEN ((t0.c1, t0.c4, rt1.c2, rt1.c3, rt1.c6, rt1.c5)) AND ((rt1.c3, rt1.c4, rt1.c4, '293385207', t0.c0, rt1.c3))))))OR(((t0.c1)||(t0.c1)))))AND((rt1.c0 IN (t0.c1)))) WHERE (2.010798651E9) ORDER BY CASE WHEN t0.c4 THEN (rt1.c0 IN ()) WHEN (~ (t0.c3)) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (t0.c4)) WHEN (rt1.c3 IN ()) THEN ((rt1.c2)IS NOT(rt1.c4)) WHEN CASE rt1.c2  WHEN t0.c2 THEN '953423655' END THEN (- (rt1.c6)) WHEN ((rt1.c0) BETWEEN ('') AND (t0.c3)) THEN 0.4621682021050991 WHEN (NOT (NULL)) THEN rt1.c0 WHEN ((((((((rt1.c6)OR(rt1.c0)))OR(t0.c4)))OR(rt1.c2)))AND(t0.c2)) THEN ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)) WHEN (((rt1.c4, rt1.c0, t0.c2)) BETWEEN ((rt1.c1, t0.c4, rt1.c2)) AND ((rt1.c3, rt1.c5, t0.c3))) THEN (((t0.c3, t0.c3))<>((rt1.c5, t0.c0))) END DESC  NULLS FIRST;
SELECT ALL * FROM t0 INNER JOIN rt1 ON ((((((rt1.c1)AND((((rt1.c6, rt1.c5, rt1.c2, t0.c1, t0.c2, t0.c4)) NOT BETWEEN ((t0.c1, t0.c4, rt1.c2, rt1.c3, rt1.c6, rt1.c5)) AND ((rt1.c3, rt1.c4, rt1.c4, '293385207', t0.c0, rt1.c3))))))OR(((t0.c1)||(t0.c1)))))AND((rt1.c0 IN (t0.c1)))) WHERE (((2.010798651E9)AND(CASE WHEN (~ (rt1.c2)) THEN (((rt1.c6, rt1.c2)) NOT BETWEEN ((rt1.c4, rt1.c2)) AND ((rt1.c3, rt1.c1))) WHEN rt1.c3 COLLATE BINARY THEN (- (t0.c4)) WHEN '|1-c#~5' COLLATE NOCASE THEN rt1.c5 WHEN LIKE(rt1.c5, rt1.c1, '2') THEN 'Q]NFn#EG8' END))) ORDER BY CASE WHEN t0.c4 THEN (rt1.c0 IN ()) WHEN (~ (t0.c3)) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (t0.c4)) WHEN (rt1.c3 IN ()) THEN ((rt1.c2)IS NOT(rt1.c4)) WHEN CASE rt1.c2  WHEN t0.c2 THEN '953423655' END THEN (- (rt1.c6)) WHEN ((rt1.c0) BETWEEN ('') AND (t0.c3)) THEN 0.4621682021050991 WHEN (NOT (NULL)) THEN rt1.c0 WHEN ((((((((rt1.c6)OR(rt1.c0)))OR(t0.c4)))OR(rt1.c2)))AND(t0.c2)) THEN ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)) WHEN (((rt1.c4, rt1.c0, t0.c2)) BETWEEN ((rt1.c1, t0.c4, rt1.c2)) AND ((rt1.c3, rt1.c5, t0.c3))) THEN (((t0.c3, t0.c3))!=((rt1.c5, t0.c0))) END DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT * FROM t0 INNER JOIN rt1 ON ((((((rt1.c1)AND((((rt1.c6, rt1.c5, rt1.c2, t0.c1, t0.c2, t0.c4)) NOT BETWEEN ((t0.c1, t0.c4, rt1.c2, rt1.c3, rt1.c6, rt1.c5)) AND ((rt1.c3, rt1.c4, rt1.c4, '293385207', t0.c0, rt1.c3))))))OR(((t0.c1)||(t0.c1)))))AND((rt1.c0 IN (t0.c1)))) WHERE ((CAST(rt1.c0 AS REAL) IN ())) ORDER BY CASE WHEN t0.c4 THEN (rt1.c0 IN ()) WHEN (~ (t0.c3)) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (t0.c4)) WHEN (rt1.c3 IN ()) THEN ((rt1.c2)IS NOT(rt1.c4)) WHEN CASE rt1.c2  WHEN t0.c2 THEN '953423655' END THEN (- (rt1.c6)) WHEN ((rt1.c0) BETWEEN ('') AND (t0.c3)) THEN 0.4621682021050991 WHEN (NOT (NULL)) THEN rt1.c0 WHEN ((((((((rt1.c6)OR(rt1.c0)))OR(t0.c4)))OR(rt1.c2)))AND(t0.c2)) THEN ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)) WHEN (((rt1.c4, rt1.c0, t0.c2)) BETWEEN ((rt1.c1, t0.c4, rt1.c2)) AND ((rt1.c3, rt1.c5, t0.c3))) THEN (((t0.c3, t0.c3))<>((rt1.c5, t0.c0))) END DESC  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((((((rt1.c1)AND((((rt1.c6, rt1.c5, rt1.c2, t0.c1, t0.c2, t0.c4)) NOT BETWEEN ((t0.c1, t0.c4, rt1.c2, rt1.c3, rt1.c6, rt1.c5)) AND ((rt1.c3, rt1.c4, rt1.c4, '293385207', t0.c0, rt1.c3))))))OR(((t0.c1)||(t0.c1)))))AND((rt1.c0 IN (t0.c1)))) WHERE (2.010798651E9) ORDER BY CASE WHEN t0.c4 THEN (rt1.c0 IN ()) WHEN (~ (t0.c3)) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (t0.c4)) WHEN (rt1.c3 IN ()) THEN ((rt1.c2)IS NOT(rt1.c4)) WHEN CASE rt1.c2  WHEN t0.c2 THEN '953423655' END THEN (- (rt1.c6)) WHEN ((rt1.c0) BETWEEN ('') AND (t0.c3)) THEN 0.4621682021050991 WHEN (NOT (NULL)) THEN rt1.c0 WHEN ((((((((rt1.c6)OR(rt1.c0)))OR(t0.c4)))OR(rt1.c2)))AND(t0.c2)) THEN ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)) WHEN (((rt1.c4, rt1.c0, t0.c2)) BETWEEN ((rt1.c1, t0.c4, rt1.c2)) AND ((rt1.c3, rt1.c5, t0.c3))) THEN (((t0.c3, t0.c3))<>((rt1.c5, t0.c0))) END DESC  NULLS FIRST;
SELECT ALL * FROM t0 INNER JOIN rt1 ON ((((((rt1.c1)AND((((rt1.c6, rt1.c5, rt1.c2, t0.c1, t0.c2, t0.c4)) NOT BETWEEN ((t0.c1, t0.c4, rt1.c2, rt1.c3, rt1.c6, rt1.c5)) AND ((rt1.c3, rt1.c4, rt1.c4, '293385207', t0.c0, rt1.c3))))))OR(((t0.c1)||(t0.c1)))))AND((rt1.c0 IN (t0.c1)))) WHERE (((2.010798651E9)AND(CASE WHEN (~ (rt1.c2)) THEN (((rt1.c6, rt1.c2)) NOT BETWEEN ((rt1.c4, rt1.c2)) AND ((rt1.c3, rt1.c1))) WHEN rt1.c3 COLLATE BINARY THEN (- (t0.c4)) WHEN '|1-c#~5' COLLATE NOCASE THEN rt1.c5 WHEN LIKE(rt1.c5, rt1.c1, '2') THEN 'Q]NFn#EG8' END))) ORDER BY CASE WHEN t0.c4 THEN (rt1.c0 IN ()) WHEN (~ (t0.c3)) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (t0.c4)) WHEN (rt1.c3 IN ()) THEN ((rt1.c2)IS NOT(rt1.c4)) WHEN CASE rt1.c2  WHEN t0.c2 THEN '953423655' END THEN (- (rt1.c6)) WHEN ((rt1.c0) BETWEEN ('') AND (t0.c3)) THEN 0.4621682021050991 WHEN (NOT (NULL)) THEN rt1.c0 WHEN ((((((((rt1.c6)OR(rt1.c0)))OR(t0.c4)))OR(rt1.c2)))AND(t0.c2)) THEN ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)) WHEN (((rt1.c4, rt1.c0, t0.c2)) BETWEEN ((rt1.c1, t0.c4, rt1.c2)) AND ((rt1.c3, rt1.c5, t0.c3))) THEN (((t0.c3, t0.c3))!=((rt1.c5, t0.c0))) END DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT * FROM t0 INNER JOIN rt1 ON ((((((rt1.c1)AND((((rt1.c6, rt1.c5, rt1.c2, t0.c1, t0.c2, t0.c4)) NOT BETWEEN ((t0.c1, t0.c4, rt1.c2, rt1.c3, rt1.c6, rt1.c5)) AND ((rt1.c3, rt1.c4, rt1.c4, '293385207', t0.c0, rt1.c3))))))OR(((t0.c1)||(t0.c1)))))AND((rt1.c0 IN (t0.c1)))) WHERE ((CAST(rt1.c0 AS REAL) IN ())) ORDER BY CASE WHEN t0.c4 THEN (rt1.c0 IN ()) WHEN (~ (t0.c3)) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (t0.c4)) WHEN (rt1.c3 IN ()) THEN ((rt1.c2)IS NOT(rt1.c4)) WHEN CASE rt1.c2  WHEN t0.c2 THEN '953423655' END THEN (- (rt1.c6)) WHEN ((rt1.c0) BETWEEN ('') AND (t0.c3)) THEN 0.4621682021050991 WHEN (NOT (NULL)) THEN rt1.c0 WHEN ((((((((rt1.c6)OR(rt1.c0)))OR(t0.c4)))OR(rt1.c2)))AND(t0.c2)) THEN ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)) WHEN (((rt1.c4, rt1.c0, t0.c2)) BETWEEN ((rt1.c1, t0.c4, rt1.c2)) AND ((rt1.c3, rt1.c5, t0.c3))) THEN (((t0.c3, t0.c3))<>((rt1.c5, t0.c0))) END DESC  NULLS FIRST LIMIT 0x2;
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (~ (rt1.c2 COLLATE BINARY)) WHERE ((((~ (rt1.c3))) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON (~ (rt1.c2 COLLATE BINARY)) WHERE ((((((~ (rt1.c3))) ISNULL))AND((- (((rt1.c4)AND(t0.c2))))))) ORDER BY ((rt1.c2)+(CAST(rt1.c5 AS REAL))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON (~ (rt1.c2 COLLATE BINARY)) WHERE (((((rt1.c6) NOT BETWEEN (rt1.c5) AND (rt1.c1))) IS FALSE)) ORDER BY ((rt1.c2)+(CAST(rt1.c5 AS REAL))) LIMIT 0;
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (~ (rt1.c2 COLLATE BINARY)) WHERE ((((~ (rt1.c3))) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON (~ (rt1.c2 COLLATE BINARY)) WHERE ((((((~ (rt1.c3))) ISNULL))AND((- (((rt1.c4)AND(t0.c2))))))) ORDER BY ((rt1.c2)+(CAST(rt1.c5 AS REAL))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON (~ (rt1.c2 COLLATE BINARY)) WHERE (((((rt1.c6) NOT BETWEEN (rt1.c5) AND (rt1.c1))) IS FALSE)) ORDER BY ((rt1.c2)+(CAST(rt1.c5 AS REAL))) LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c0)|(rt1.c3)), ((x'e0dd') IS TRUE), NULL))>((LIKELY(DISTINCT t0.c1), ((rt1.c1)-(t0.c0)), t0.c1))));
SELECT * FROM t0, rt1 WHERE ((((((((t0.c0)|(rt1.c3)), ((x'e0dd') IS TRUE), NULL))>((LIKELY(DISTINCT t0.c1), ((rt1.c1)-(t0.c0)), t0.c1))))AND(rt1.c6))) ORDER BY ((CAST(rt1.c1 AS REAL)) IS TRUE)  NULLS LAST, ((NULLIF(t0.c0, rt1.c0)) BETWEEN (NULL) AND (LIKELIHOOD(t0.c4, rt1.c0))) ASC  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c0)|(rt1.c3)), ((x'e0dd') IS TRUE), NULL))>((LIKELY(DISTINCT t0.c1), ((rt1.c1)-(t0.c0)), t0.c1))));
SELECT * FROM t0, rt1 WHERE ((((((((t0.c0)|(rt1.c3)), ((x'e0dd') IS TRUE), NULL))>((LIKELY(DISTINCT t0.c1), ((rt1.c1)-(t0.c0)), t0.c1))))AND(rt1.c6))) ORDER BY ((CAST(rt1.c1 AS REAL)) IS TRUE)  NULLS LAST, ((NULLIF(t0.c0, rt1.c0)) BETWEEN (NULL) AND (LIKELIHOOD(t0.c4, rt1.c0))) ASC  NULLS FIRST LIMIT 3;
SELECT COUNT(*) FROM rt1, t0 WHERE ((((rt1.c0) NOT BETWEEN (t0.c0) AND (t0.c4)) IN ())) ORDER BY (CASE rt1.c6  WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c2 THEN t0.c0 END IN (t0.c2)), ((((((((rt1.c2)AND(rt1.c6)))OR(rt1.c2)))AND(rt1.c0)))==(((((((NULL)AND(t0.c3)))AND(rt1.c4)))OR(rt1.c1))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((rt1.c0) NOT BETWEEN (t0.c0) AND (t0.c4)) IN ())) ORDER BY (~ (((((((((rt1.c4)OR(t0.c0)))OR(rt1.c3)))OR(t0.c4)))OR(rt1.c4)))) ASC  NULLS LAST, (~ ((((rt1.c3, rt1.c4)) BETWEEN ((t0.c2, rt1.c5)) AND ((t0.c1, rt1.c6))))) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE WHEN UNLIKELY(DISTINCT rt1.c0) THEN (((t0.c0, rt1.c4))<((t0.c2, t0.c4))) WHEN ((rt1.c5) BETWEEN (rt1.c6) AND ('[GJ㈢*]98(~')) THEN ((((t0.c3)AND(t0.c4)))OR(t0.c3)) ELSE ((((rt1.c1)OR(x'fac61f')))OR(0.7338056095821793)) END) ORDER BY (~ (((((((((rt1.c4)OR(t0.c0)))OR(rt1.c3)))OR(t0.c4)))OR(rt1.c4)))) ASC  NULLS LAST, (~ ((((rt1.c3, rt1.c4)) BETWEEN ((t0.c2, rt1.c5)) AND ((t0.c1, rt1.c6))))) DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt1 WHERE (CASE WHEN ((((rt1.c0)OR(rt1.c3)))OR(rt1.c6)) THEN (NOT (rt1.c1)) WHEN CAST(8.86054297E8 AS NUMERIC) THEN CASE WHEN rt1.c6 THEN rt1.c5 END WHEN ((rt1.c6)*(rt1.c3)) THEN (rt1.c0 IN (rt1.c2)) WHEN (((rt1.c1, NULL, rt1.c3)) BETWEEN (('-1463084059', rt1.c6, 0.989903578335774)) AND ((rt1.c2, rt1.c1, rt1.c4))) THEN ((rt1.c6)>>(rt1.c0)) WHEN CAST(rt1.c0 AS NUMERIC) THEN CAST(rt1.c6 AS BLOB) END);
SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN ((((rt1.c0)OR(rt1.c3)))OR(rt1.c6)) THEN (NOT (rt1.c1)) WHEN CAST(8.86054297E8 AS NUMERIC) THEN CASE WHEN rt1.c6 THEN rt1.c5 END WHEN ((rt1.c6)*(rt1.c3)) THEN (rt1.c0 IN (rt1.c2)) WHEN (((rt1.c1, NULL, rt1.c3)) BETWEEN (('-1463084059', rt1.c6, 0.989903578335774)) AND ((rt1.c2, rt1.c1, rt1.c4))) THEN ((rt1.c6)>>(rt1.c0)) WHEN CAST(rt1.c0 AS NUMERIC) THEN CAST(rt1.c6 AS BLOB) END) LIMIT 0X2;
SELECT * FROM rt1 WHERE (CASE WHEN ((((rt1.c0)OR(rt1.c3)))OR(rt1.c6)) THEN (NOT (rt1.c1)) WHEN CAST(8.86054297E8 AS NUMERIC) THEN CASE WHEN rt1.c6 THEN rt1.c5 END WHEN ((rt1.c6)*(rt1.c3)) THEN (rt1.c0 IN (rt1.c2)) WHEN (((rt1.c1, NULL, rt1.c3)) BETWEEN (('-1463084059', rt1.c6, 0.989903578335774)) AND ((rt1.c2, rt1.c1, rt1.c4))) THEN ((rt1.c6)>>(rt1.c0)) WHEN CAST(rt1.c0 AS NUMERIC) THEN CAST(rt1.c6 AS BLOB) END);
SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN ((((rt1.c0)OR(rt1.c3)))OR(rt1.c6)) THEN (NOT (rt1.c1)) WHEN CAST(8.86054297E8 AS NUMERIC) THEN CASE WHEN rt1.c6 THEN rt1.c5 END WHEN ((rt1.c6)*(rt1.c3)) THEN (rt1.c0 IN (rt1.c2)) WHEN (((rt1.c1, NULL, rt1.c3)) BETWEEN (('-1463084059', rt1.c6, 0.989903578335774)) AND ((rt1.c2, rt1.c1, rt1.c4))) THEN ((rt1.c6)>>(rt1.c0)) WHEN CAST(rt1.c0 AS NUMERIC) THEN CAST(rt1.c6 AS BLOB) END) LIMIT 0X2;
SELECT ALL MAX(t0.c2) FROM t0 WHERE (x'');
SELECT ALL MAX(t0.c2) FROM t0 WHERE (x'') ORDER BY (((((((((t0.c0)AND(t0.c0)))OR(t0.c4)))OR(t0.c3)))OR(t0.c4)) IN (CASE WHEN t0.c2 THEN t0.c3 ELSE 'klE' END, (NOT (t0.c3))))  NULLS LAST INTERSECT SELECT MAX(t0.c2) FROM t0 WHERE ((NOT ('0.6582575926668529'))) ORDER BY (((((((((t0.c0)AND(t0.c0)))OR(t0.c4)))OR(t0.c3)))OR(t0.c4)) IN (CASE WHEN t0.c2 THEN t0.c3 ELSE 'klE' END, (NOT (t0.c3))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c1)), ((t0.c0) NOTNULL)))<=((PRINTF(t0.c1, t0.c4), CAST(t0.c2 AS NUMERIC))))) ORDER BY CASE ((((((t0.c3)OR(t0.c3)))OR(t0.c1)))OR(t0.c4))  WHEN x'71' THEN (t0.c3 IN (t0.c2)) WHEN (((t0.c3, t0.c4, t0.c2))>((t0.c3, t0.c2, t0.c0))) THEN (~ (t0.c1)) ELSE CASE t0.c3  WHEN t0.c1 THEN t0.c4 ELSE t0.c0 END END, ((((t0.c3)AND(t0.c4)))OR(t0.c3)) COLLATE NOCASE, ((((t0.c4) IS FALSE))IS((((t0.c3, 469195892))>=((t0.c1, t0.c3))))) ASC;
SELECT * FROM t0 WHERE ((((((((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c1)), ((t0.c0) NOTNULL)))<=((PRINTF(t0.c1, t0.c4), CAST(t0.c2 AS NUMERIC)))))AND((((((t0.c1)AND(t0.c1)))OR(0xffffffffbb152477)) IN ())))) ORDER BY (((t0.c4 IN (t0.c1))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN t0.c4 END) AND (((('+'))=((t0.c1))))) ASC  NULLS FIRST, ((((NULL) IS TRUE)) BETWEEN ((~ (t0.c2))) AND (((t0.c0)LIKE(t0.c2))))  NULLS LAST, '0.45735093364541624' DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c1)), ((t0.c0) NOTNULL)))<=((PRINTF(t0.c1, t0.c4), CAST(t0.c2 AS NUMERIC))))) ORDER BY CASE ((((((t0.c3)OR(t0.c3)))OR(t0.c1)))OR(t0.c4))  WHEN x'71' THEN (t0.c3 IN (t0.c2)) WHEN (((t0.c3, t0.c4, t0.c2))>((t0.c3, t0.c2, t0.c0))) THEN (~ (t0.c1)) ELSE CASE t0.c3  WHEN t0.c1 THEN t0.c4 ELSE t0.c0 END END, ((((t0.c3)AND(t0.c4)))OR(t0.c3)) COLLATE NOCASE, ((((t0.c4) IS FALSE))IS((((t0.c3, 469195892))>=((t0.c1, t0.c3))))) ASC;
SELECT * FROM t0 WHERE ((((((((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c1)), ((t0.c0) NOTNULL)))<=((PRINTF(t0.c1, t0.c4), CAST(t0.c2 AS NUMERIC)))))AND((((((t0.c1)AND(t0.c1)))OR(0xffffffffbb152477)) IN ())))) ORDER BY (((t0.c4 IN (t0.c1))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN t0.c4 END) AND (((('+'))=((t0.c1))))) ASC  NULLS FIRST, ((((NULL) IS TRUE)) BETWEEN ((~ (t0.c2))) AND (((t0.c0)LIKE(t0.c2))))  NULLS LAST, '0.45735093364541624' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (SQLITE_COMPILEOPTION_USED(CASE WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c5 THEN 0.29046447435207656 WHEN rt1.c0 THEN 'a삆' ELSE rt1.c2 END)) ORDER BY TYPEOF(rt1.c1) COLLATE RTRIM;
SELECT COUNT(*) FROM rt1 WHERE (((SQLITE_COMPILEOPTION_USED(CASE WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c5 THEN 0.29046447435207656 WHEN rt1.c0 THEN 'a삆' ELSE rt1.c2 END))AND(CASE ((rt1.c1) NOT NULL)  WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)) THEN (((rt1.c5)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))) WHEN (~ (rt1.c5)) THEN (- ('{qkg}')) WHEN ((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c1)) THEN (x'2f8a' IN ()) WHEN 0.4803023486917587 COLLATE BINARY THEN LOWER(0.6766698228567961) WHEN '-1483279645' THEN rt1.c6 COLLATE RTRIM ELSE (((rt1.c4, rt1.c4, rt1.c2)) NOT BETWEEN ((rt1.c0, '0.0032158905941063187', rt1.c3)) AND ((rt1.c0, rt1.c1, rt1.c1))) END))) ORDER BY TYPEOF(rt1.c1) COLLATE RTRIM LIMIT 0x0;
SELECT * FROM rt1 WHERE (((((rt1.c3)AND(((rt1.c2) NOT NULL))))OR('.')));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c3)AND(((rt1.c2) NOT NULL))))OR('.'))) ORDER BY ((((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c2))) NOT BETWEEN ((((rt1.c4)) NOT BETWEEN ((0.31913298488732933)) AND ((rt1.c6)))) AND (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN x'3098' THEN rt1.c4 ELSE (((((((((('ꂩinP-V4Z')OR(rt1.c6)))OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c5)))OR(rt1.c6)) END) ORDER BY ((((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c2))) NOT BETWEEN ((((rt1.c4)) NOT BETWEEN ((0.31913298488732933)) AND ((rt1.c6)))) AND (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) LIMIT 0X1;
SELECT * FROM rt1 WHERE (((((rt1.c3)AND(((rt1.c2) NOT NULL))))OR('.')));
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c3)AND(((rt1.c2) NOT NULL))))OR('.'))) ORDER BY ((((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c2))) NOT BETWEEN ((((rt1.c4)) NOT BETWEEN ((0.31913298488732933)) AND ((rt1.c6)))) AND (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN x'3098' THEN rt1.c4 ELSE (((((((((('ꂩinP-V4Z')OR(rt1.c6)))OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c5)))OR(rt1.c6)) END) ORDER BY ((((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c2))) NOT BETWEEN ((((rt1.c4)) NOT BETWEEN ((0.31913298488732933)) AND ((rt1.c6)))) AND (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) LIMIT 0X1;
SELECT MAX(t0.c0) FROM rt1, t0 WHERE (((((((NULLIF(rt1.c2, t0.c4))OR(LIKE(rt1.c5, rt1.c1, '	'))))OR('617068724')))OR(((rt1.c2) NOT BETWEEN (rt1.c5) AND (t0.c1)))));
SELECT ALL MAX(t0.c0) FROM rt1, t0 WHERE (((((((NULLIF(rt1.c2, t0.c4))OR(LIKE(rt1.c5, rt1.c1, '	'))))OR('617068724')))OR(((rt1.c2) NOT BETWEEN (rt1.c5) AND (t0.c1))))) INTERSECT SELECT MAX(t0.c0) FROM rt1, t0 NOT INDEXED WHERE (CASE WHEN (~ (rt1.c6)) THEN rt1.c4 WHEN (NOT (-1655688006)) THEN (rt1.c2 IN (rt1.c5)) WHEN ((rt1.c3)OR(t0.c3)) THEN TRIM(DISTINCT t0.c0, t0.c0) WHEN ((rt1.c1)IS NOT(t0.c2)) THEN ((rt1.c6) BETWEEN (rt1.c6) AND (rt1.c5)) WHEN (x'75c0' IN (rt1.c1)) THEN (~ (t0.c3)) END);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((+ (json_type(t0.c0))));
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((+ (json_type(t0.c0)))) LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((NOT (((rt1.c5) NOT NULL)))) LIMIT 0X0;
SELECT MAX(rt1.c2) FROM t0, rt1 WHERE ((((((rt1.c2))>=((rt1.c4)))) IS FALSE)) ORDER BY ((CASE WHEN t0.c4 THEN t0.c4 WHEN t0.c0 THEN rt1.c3 WHEN t0.c3 THEN rt1.c3 ELSE t0.c2 END) NOT NULL)  NULLS LAST, ((rt1.c1)%(((t0.c1)||(t0.c3))))  NULLS FIRST, t0.c1 DESC  NULLS LAST;
SELECT MAX(rt1.c2) FROM t0, rt1 WHERE ((((((rt1.c2))>=((rt1.c4)))) IS FALSE)) ORDER BY 'u9W\zw|' DESC, t0.c2 ASC INTERSECT SELECT ALL MAX(rt1.c2) FROM t0, rt1 WHERE (((((rt1.c5)OR(rt1.c0))) NOTNULL)) ORDER BY 'u9W\zw|' DESC, t0.c2 ASC;
SELECT ALL * FROM rt1 WHERE (CASE x'' COLLATE RTRIM  WHEN ((rt1.c1)=(rt1.c4)) THEN CASE rt1.c3  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c6 WHEN ',X(2U,뜙_' THEN rt1.c3 END WHEN CASE WHEN rt1.c0 THEN rt1.c3 WHEN 0.36342186960760736 THEN rt1.c5 ELSE rt1.c1 END THEN 0x4dbb9efc ELSE CAST(rt1.c4 AS BLOB) END);
SELECT * FROM rt1 WHERE (((CASE x'' COLLATE RTRIM  WHEN ((rt1.c1)=(rt1.c4)) THEN CASE rt1.c3  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c6 WHEN ',X(2U,뜙_' THEN rt1.c3 END WHEN CASE WHEN rt1.c0 THEN rt1.c3 WHEN 0.36342186960760736 THEN rt1.c5 ELSE rt1.c1 END THEN 1304141564 ELSE CAST(rt1.c4 AS BLOB) END)AND(((x'5ad511')&(rt1.c1)) COLLATE RTRIM))) INTERSECT SELECT ALL * FROM rt1 WHERE ((((((((rt1.c3 IN ()))AND(rt1.c5 COLLATE RTRIM)))OR(((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))))OR(rt1.c4)));
SELECT ALL * FROM rt1 WHERE (CASE x'' COLLATE RTRIM  WHEN ((rt1.c1)=(rt1.c4)) THEN CASE rt1.c3  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c6 WHEN ',X(2U,뜙_' THEN rt1.c3 END WHEN CASE WHEN rt1.c0 THEN rt1.c3 WHEN 0.36342186960760736 THEN rt1.c5 ELSE rt1.c1 END THEN 0x4dbb9efc ELSE CAST(rt1.c4 AS BLOB) END);
SELECT * FROM rt1 WHERE (((CASE x'' COLLATE RTRIM  WHEN ((rt1.c1)=(rt1.c4)) THEN CASE rt1.c3  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c6 WHEN ',X(2U,뜙_' THEN rt1.c3 END WHEN CASE WHEN rt1.c0 THEN rt1.c3 WHEN 0.36342186960760736 THEN rt1.c5 ELSE rt1.c1 END THEN 1304141564 ELSE CAST(rt1.c4 AS BLOB) END)AND(((x'5ad511')&(rt1.c1)) COLLATE RTRIM))) INTERSECT SELECT ALL * FROM rt1 WHERE ((((((((rt1.c3 IN ()))AND(rt1.c5 COLLATE RTRIM)))OR(((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))))OR(rt1.c4)));
SELECT ALL MIN(rt1.c5) FROM rt1, t0 WHERE ('-226271228') ORDER BY (((((rt1.c3)-(t0.c2)), CAST(t0.c1 AS TEXT), ((t0.c0) IS FALSE)))>(((rt1.c1 IN (rt1.c1)), (((t0.c3))<((t0.c1))), (((rt1.c6, rt1.c1, t0.c4)) BETWEEN ((t0.c3, rt1.c0, rt1.c6)) AND (('-956693349', t0.c3, 'i1')))))), (t0.c4 IN (CAST(rt1.c1 AS NUMERIC), rt1.c5));
SELECT DISTINCT MIN(rt1.c5) FROM rt1, t0 WHERE ((('-226271228')AND((NULLIF(DISTINCT '0.3382252848956877', t0.c0) IN ())))) ORDER BY (((t0.c1, t0.c4)) BETWEEN (('-721959623', ((t0.c3)&(rt1.c1)))) AND ((((((((((((((rt1.c4)AND(t0.c4)))AND(rt1.c6)))OR(t0.c4)))OR(t0.c3)))AND(rt1.c0)))AND(rt1.c4)), rt1.c1))) LIMIT 1;
SELECT * FROM rt1 CROSS JOIN t0 ON json(COALESCE(DISTINCT t0.c0, rt1.c6, rt1.c6)) WHERE (((t0.c4) BETWEEN (json_object(t0.c1, t0.c1, 0.7661803358895897, t0.c3, rt1.c0)) AND (((rt1.c3)<=(rt1.c5))))) ORDER BY ((((((load_extension(t0.c2, rt1.c1))OR(t0.c1 COLLATE RTRIM)))OR((('')!=(rt1.c3)))))OR(((((((((t0.c4)AND(rt1.c3)))AND(rt1.c5)))OR(rt1.c6)))OR(rt1.c4))))  NULLS FIRST, '(g' ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON json(COALESCE(DISTINCT t0.c0, rt1.c6, rt1.c6)) WHERE (((((t0.c4) BETWEEN (json_object(t0.c1, t0.c1, 0.7661803358895897, t0.c3, rt1.c0)) AND (((rt1.c3)<=(rt1.c5)))))AND((rt1.c2 COLLATE BINARY IN (rt1.c6 COLLATE BINARY))))) ORDER BY ((((((load_extension(t0.c2, rt1.c1))OR(t0.c1 COLLATE RTRIM)))OR((('')!=(rt1.c3)))))OR(((((((((t0.c4)AND(rt1.c3)))AND(rt1.c5)))OR(rt1.c6)))OR(rt1.c4))))  NULLS FIRST, '(g' ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON json(COALESCE(DISTINCT t0.c0, rt1.c6, rt1.c6)) WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c6))))>=(((t0.c4)+(rt1.c3))))) ORDER BY ((((((load_extension(t0.c2, rt1.c1))OR(t0.c1 COLLATE RTRIM)))OR((('')!=(rt1.c3)))))OR(((((((((t0.c4)AND(rt1.c3)))AND(rt1.c5)))OR(rt1.c6)))OR(rt1.c4))))  NULLS FIRST, '(g' ASC  NULLS FIRST;
SELECT * FROM rt1 CROSS JOIN t0 ON json(COALESCE(DISTINCT t0.c0, rt1.c6, rt1.c6)) WHERE (((t0.c4) BETWEEN (json_object(t0.c1, t0.c1, 0.7661803358895897, t0.c3, rt1.c0)) AND (((rt1.c3)<=(rt1.c5))))) ORDER BY ((((((load_extension(t0.c2, rt1.c1))OR(t0.c1 COLLATE RTRIM)))OR((('')!=(rt1.c3)))))OR(((((((((t0.c4)AND(rt1.c3)))AND(rt1.c5)))OR(rt1.c6)))OR(rt1.c4))))  NULLS FIRST, '(g' ASC  NULLS FIRST;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((((((((rt1.c6)OR(rt1.c3)))AND(t0.c3)))OR(x'6185f58e')))AND(t0.c1 COLLATE NOCASE))) ORDER BY 489068276 COLLATE RTRIM;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((((((((rt1.c6)OR(rt1.c3)))AND(t0.c3)))OR(x'6185f58e')))AND(t0.c1 COLLATE NOCASE))) ORDER BY 489068276 COLLATE RTRIM LIMIT 1;
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((((((((rt1.c6)OR(rt1.c3)))AND(t0.c3)))OR(x'6185f58e')))AND(t0.c1 COLLATE NOCASE))) ORDER BY 489068276 COLLATE RTRIM;
SELECT ALL MIN(t0.c0) FROM rt1 CROSS JOIN t0 ON (((rt1.c3 IN (t0.c0)))GLOB(((((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c4)))) WHERE (rt1.c3) ORDER BY (((((((0.06383918399619049)OR(rt1.c3)))OR(rt1.c4)))OR(t0.c0)) IN ((((t0.c3, rt1.c4, rt1.c6))>=((t0.c1, t0.c2, rt1.c4))))) ASC;
SELECT ALL MIN(t0.c0) FROM rt1 CROSS JOIN t0 ON (((rt1.c3 IN (t0.c0)))GLOB(((((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c4)))) WHERE (rt1.c3) ORDER BY ((((rt1.c1) ISNULL))>(((t0.c4)>=(rt1.c6)))) DESC  NULLS LAST LIMIT 0X1;
SELECT MAX(rt1.c2) FROM rt1 WHERE (((((((((((((rt1.c5)AND(0Xffffffffbc434e6d)))AND(rt1.c0)))AND(rt1.c6)))OR(rt1.c4)))OR(rt1.c4)))+(rt1.c6)));
SELECT DISTINCT MAX(rt1.c2) FROM rt1 WHERE (((((((((((((rt1.c5)AND(0xffffffffbc434e6d)))AND(rt1.c0)))AND(rt1.c6)))OR(rt1.c4)))OR(rt1.c4)))+(rt1.c6))) ORDER BY ((((rt1.c3) BETWEEN (rt1.c0) AND (0.9045214277801632)))>(CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END)) ASC  NULLS LAST, 'CLk!t䚬-' ASC;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE ((((((rt1.c4, t0.c1))>=((rt1.c6, rt1.c5))))>=((rt1.c1 IN (rt1.c4, rt1.c2, rt1.c3))))) ORDER BY t0.c3  NULLS FIRST, (((((t0.c3))=((rt1.c3)))) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (rt1.c2)) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE ((((((rt1.c4, t0.c1))>=((rt1.c6, rt1.c5))))>=((rt1.c1 IN (rt1.c4, rt1.c2, rt1.c3))))) ORDER BY t0.c3  NULLS FIRST, (((((t0.c3))=((rt1.c3)))) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (rt1.c2)) DESC  NULLS LAST LIMIT 1;
SELECT ALL MAX(t0.c1) FROM t0 WHERE (((((((0.30502087275362855)AND(((t0.c4) NOT NULL))))OR((((t0.c0))<=((t0.c1))))))AND(CASE t0.c3  WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)));
SELECT ALL MAX(t0.c1) FROM t0 WHERE (((((((((0.30502087275362855)AND(((t0.c4) NOT NULL))))OR((((t0.c0))<=((t0.c1))))))AND(CASE t0.c3  WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)))AND(((CASE WHEN t0.c3 THEN t0.c2 ELSE t0.c2 END) BETWEEN (NULL) AND (0.8745808189752132))))) LIMIT 0X0 INTERSECT SELECT MAX(t0.c1) FROM t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE) LIMIT 0X0;
SELECT ALL * FROM t0, rt1 WHERE ((~ ((~ (rt1.c2))))) ORDER BY CASE rt1.c3  WHEN rt1.c1 THEN 0.4291464439033724 WHEN t0.c3 THEN '1831207132' WHEN rt1.c2 THEN rt1.c1 ELSE t0.c3 END COLLATE BINARY, ((rt1.c2 COLLATE NOCASE) NOT BETWEEN ((rt1.c4 IN (t0.c2))) AND ((t0.c2 IN ()))) DESC;
SELECT ALL * FROM t0, rt1 WHERE ((~ ((~ (rt1.c2))))) ORDER BY (rt1.c0 IN (((((NULL)AND(rt1.c1)))OR(t0.c0)), ((((((rt1.c6)OR(rt1.c6)))OR(rt1.c4)))AND(rt1.c0)))) LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE ((~ ((~ (rt1.c2))))) ORDER BY CASE rt1.c3  WHEN rt1.c1 THEN 0.4291464439033724 WHEN t0.c3 THEN '1831207132' WHEN rt1.c2 THEN rt1.c1 ELSE t0.c3 END COLLATE BINARY, ((rt1.c2 COLLATE NOCASE) NOT BETWEEN ((rt1.c4 IN (t0.c2))) AND ((t0.c2 IN ()))) DESC;
SELECT ALL * FROM t0, rt1 WHERE ((~ ((~ (rt1.c2))))) ORDER BY (rt1.c0 IN (((((NULL)AND(rt1.c1)))OR(t0.c0)), ((((((rt1.c6)OR(rt1.c6)))OR(rt1.c4)))AND(rt1.c0)))) LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1)<(t0.c0)), CASE WHEN t0.c3 THEN t0.c3 WHEN '-1125839889' THEN t0.c2 ELSE t0.c1 END))=((CAST(t0.c2 AS NUMERIC), (- (t0.c3))))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((((t0.c1)<(t0.c0)), CASE WHEN t0.c3 THEN t0.c3 WHEN '-1125839889' THEN t0.c2 ELSE t0.c1 END))=((CAST(t0.c2 AS NUMERIC), (- (t0.c3))))))AND(((CAST(t0.c2 AS BLOB))|(NULL))))) ORDER BY (((t0.c0, NULL)) NOT BETWEEN (((t0.c1 IN ()), (t0.c2 IN ()))) AND ((LIKE(t0.c2, t0.c3, '9'), CASE t0.c0  WHEN t0.c3 THEN t0.c3 WHEN '' THEN t0.c4 WHEN t0.c4 THEN t0.c3 END))) ASC, (CASE WHEN t0.c4 THEN NULL WHEN '1844222368' THEN t0.c4 WHEN t0.c1 THEN t0.c4 ELSE t0.c3 END IN ()) DESC, 9.53423655E8  NULLS FIRST LIMIT 0;
SELECT * FROM rt1 WHERE (TRIM(rt1.c2));
SELECT DISTINCT * FROM rt1 WHERE (((TRIM(rt1.c2))AND((((- (rt1.c0)))OR(((rt1.c4)!=(rt1.c4))))))) ORDER BY ((LIKELIHOOD(rt1.c4, rt1.c0)) NOTNULL)  NULLS LAST, CASE ((rt1.c1)IS(rt1.c3))  WHEN rt1.c5 THEN (~ (rt1.c0)) WHEN ((rt1.c4) BETWEEN (rt1.c5) AND (x'3b')) THEN CASE NULL  WHEN rt1.c0 THEN rt1.c3 END END DESC, ((rt1.c3) NOT BETWEEN (((rt1.c3)<(rt1.c3))) AND (CASE rt1.c4  WHEN rt1.c4 THEN rt1.c6 END)) DESC LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((+ (rt1.c2))) IS FALSE)) ORDER BY ((LIKELIHOOD(rt1.c4, rt1.c0)) NOTNULL)  NULLS LAST, CASE ((rt1.c1)IS(rt1.c3))  WHEN rt1.c5 THEN (~ (rt1.c0)) WHEN ((rt1.c4) BETWEEN (rt1.c5) AND (x'3b')) THEN CASE NULL  WHEN rt1.c0 THEN rt1.c3 END END DESC, ((rt1.c3) NOT BETWEEN (((rt1.c3)<(rt1.c3))) AND (CASE rt1.c4  WHEN rt1.c4 THEN rt1.c6 END)) DESC LIMIT 1;
SELECT * FROM rt1 WHERE (TRIM(rt1.c2));
SELECT DISTINCT * FROM rt1 WHERE (((TRIM(rt1.c2))AND((((- (rt1.c0)))OR(((rt1.c4)!=(rt1.c4))))))) ORDER BY ((LIKELIHOOD(rt1.c4, rt1.c0)) NOTNULL)  NULLS LAST, CASE ((rt1.c1)IS(rt1.c3))  WHEN rt1.c5 THEN (~ (rt1.c0)) WHEN ((rt1.c4) BETWEEN (rt1.c5) AND (x'3b')) THEN CASE NULL  WHEN rt1.c0 THEN rt1.c3 END END DESC, ((rt1.c3) NOT BETWEEN (((rt1.c3)<(rt1.c3))) AND (CASE rt1.c4  WHEN rt1.c4 THEN rt1.c6 END)) DESC LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((((+ (rt1.c2))) IS FALSE)) ORDER BY ((LIKELIHOOD(rt1.c4, rt1.c0)) NOTNULL)  NULLS LAST, CASE ((rt1.c1)IS(rt1.c3))  WHEN rt1.c5 THEN (~ (rt1.c0)) WHEN ((rt1.c4) BETWEEN (rt1.c5) AND (x'3b')) THEN CASE NULL  WHEN rt1.c0 THEN rt1.c3 END END DESC, ((rt1.c3) NOT BETWEEN (((rt1.c3)<(rt1.c3))) AND (CASE rt1.c4  WHEN rt1.c4 THEN rt1.c6 END)) DESC LIMIT 1;
SELECT ALL MAX(rt1.c4) FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)))/(((('1516443410')) NOT BETWEEN ((rt1.c5)) AND ((rt1.c1))))));
SELECT DISTINCT MAX(rt1.c4) FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)))/(((('1516443410')) NOT BETWEEN ((rt1.c5)) AND ((rt1.c1)))))) INTERSECT SELECT DISTINCT MAX(rt1.c4) FROM rt1 WHERE (((rt1.c5 COLLATE NOCASE)|(0xffffffff89398181)));
SELECT ALL MAX(t0.c2) FROM t0 WHERE ((- ((~ (t0.c0))))) ORDER BY TRIM(DISTINCT t0.c2 COLLATE RTRIM, ((t0.c0)=(t0.c1))) ASC  NULLS FIRST, '0.7124830930282101' ASC  NULLS FIRST, ((((((NULL)-('S|Cp')))OR(((t0.c3)<>(t0.c0)))))OR(((t0.c2) IS FALSE))) ASC;
SELECT ALL MAX(t0.c2) FROM t0 WHERE ((((- ((~ (t0.c0)))))AND(((((t0.c1) NOTNULL)) IS FALSE)))) ORDER BY (NOT ('736960138')), t0.c3  NULLS LAST LIMIT 0x3;
SELECT * FROM t0 WHERE (CAST(NULL COLLATE BINARY AS INTEGER)) ORDER BY (((t0.c4, t0.c0, t0.c3, t0.c3)) BETWEEN ((t0.c3, t0.c3, t0.c1, t0.c1)) AND ((t0.c1, '4t饈', t0.c3, t0.c4))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((CAST(NULL COLLATE BINARY AS INTEGER))AND((- ((t0.c0 IN ())))))) ORDER BY (((t0.c4, t0.c0, t0.c3, t0.c3)) BETWEEN ((t0.c3, t0.c3, t0.c1, t0.c1)) AND ((t0.c1, '4t饈', t0.c3, t0.c4))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(NULL COLLATE BINARY AS INTEGER)) ORDER BY (((t0.c4, t0.c0, t0.c3, t0.c3)) BETWEEN ((t0.c3, t0.c3, t0.c1, t0.c1)) AND ((t0.c1, '4t饈', t0.c3, t0.c4))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((CAST(NULL COLLATE BINARY AS INTEGER))AND((- ((t0.c0 IN ())))))) ORDER BY (((t0.c4, t0.c0, t0.c3, t0.c3)) BETWEEN ((t0.c3, t0.c3, t0.c1, t0.c1)) AND ((t0.c1, '4t饈', t0.c3, t0.c4))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (((((NULL IN (rt1.c6))))!=((((t0.c1)%(rt1.c6))))));
SELECT * FROM rt1, t0 WHERE (((((NULL IN (rt1.c6))))<((((t0.c1)%(rt1.c6))))));
SELECT * FROM rt1, t0 WHERE (((((NULL IN (rt1.c6))))!=((((t0.c1)%(rt1.c6))))));
SELECT * FROM rt1, t0 WHERE (((((NULL IN (rt1.c6))))<((((t0.c1)%(rt1.c6))))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (ABS(DISTINCT ((((t0.c0)AND(t0.c1)))OR(t0.c2)))) ORDER BY ((ABS(t0.c2))GLOB(((t0.c0) NOT BETWEEN (t0.c4) AND (t0.c0))))  NULLS LAST, ((((CAST(t0.c4 AS REAL))OR((((t0.c1, t0.c3, t0.c3, t0.c1, t0.c1, t0.c0, t0.c0)) BETWEEN ((0.6265420755079167, t0.c3, t0.c1, t0.c2, t0.c2, t0.c2, t0.c3)) AND ((t0.c0, t0.c0, t0.c3, t0.c0, t0.c3, t0.c0, 0Xffffffffbe660d18))))))OR((((t0.c2, t0.c4))<=((t0.c1, t0.c1)))))  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (ABS(DISTINCT ((((t0.c0)AND(t0.c1)))OR(t0.c2)))) ORDER BY ((ABS(t0.c2))GLOB(((t0.c0) NOT BETWEEN (t0.c4) AND (t0.c0))))  NULLS LAST, ((((CAST(t0.c4 AS REAL))OR((((t0.c1, t0.c3, t0.c3, t0.c1, t0.c1, t0.c0, t0.c0)) BETWEEN ((0.6265420755079167, t0.c3, t0.c1, t0.c2, t0.c2, t0.c2, t0.c3)) AND ((t0.c0, t0.c0, t0.c3, t0.c0, t0.c3, t0.c0, 0xffffffffbe660d18))))))OR((((t0.c2, t0.c4))<=((t0.c1, t0.c1)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ('AF');
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((('AF')AND(CASE WHEN ((rt1.c2)>>(x'')) THEN ((((((0x563af963)AND(rt1.c6)))OR(rt1.c2)))AND(rt1.c5)) WHEN (rt1.c3 IN (0.10760126440431228)) THEN ((rt1.c1) NOT BETWEEN (rt1.c6) AND (rt1.c3)) WHEN (- (rt1.c6)) THEN ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c5)))OR(rt1.c2)))OR(rt1.c2)) END))) ORDER BY (((rt1.c2, rt1.c1)) BETWEEN ((rt1.c6 COLLATE NOCASE, ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) AND (((~ (rt1.c2)), (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c4)))))), ((LTRIM(rt1.c0, rt1.c4))LIKE(CAST(x'8b' AS TEXT))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (CASE ((t0.c0)<=(rt1.c4))  WHEN ((t0.c3)&(rt1.c5)) THEN (~ (t0.c2)) WHEN ((rt1.c2) NOTNULL) THEN rt1.c3 COLLATE RTRIM WHEN t0.c3 COLLATE BINARY THEN CAST(NULL AS BLOB) ELSE (rt1.c1 IN (rt1.c5)) END) ORDER BY ((((((((((0X63940e9d)<(rt1.c4)))OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c2)>>(rt1.c1)))))AND(((((t0.c2)AND(0.505393149749092)))AND(t0.c0)))))OR(CASE WHEN 0.6449567462636412 THEN t0.c0 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c6 THEN t0.c3 ELSE rt1.c5 END)) ASC, ((+ (t0.c4)) IN ());
SELECT DISTINCT * FROM t0, rt1 WHERE (CASE ((t0.c0)<=(rt1.c4))  WHEN ((t0.c3)&(rt1.c5)) THEN (~ (t0.c2)) WHEN ((rt1.c2) NOTNULL) THEN rt1.c3 COLLATE RTRIM WHEN t0.c3 COLLATE BINARY THEN CAST(NULL AS BLOB) ELSE (rt1.c1 IN (rt1.c5)) END) ORDER BY (((((((((t0.c1))<((rt1.c5))))OR((t0.c3 IN (rt1.c2, rt1.c3)))))AND((('18393758')>>(rt1.c3)))))AND(((((((rt1.c4)AND(rt1.c5)))AND(rt1.c4)))OR(rt1.c3)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE (CASE ((t0.c0)<=(rt1.c4))  WHEN ((t0.c3)&(rt1.c5)) THEN (~ (t0.c2)) WHEN ((rt1.c2) NOTNULL) THEN rt1.c3 COLLATE RTRIM WHEN t0.c3 COLLATE BINARY THEN CAST(NULL AS BLOB) ELSE (rt1.c1 IN (rt1.c5)) END) ORDER BY ((((((((((0X63940e9d)<(rt1.c4)))OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c2)>>(rt1.c1)))))AND(((((t0.c2)AND(0.505393149749092)))AND(t0.c0)))))OR(CASE WHEN 0.6449567462636412 THEN t0.c0 WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c6 THEN t0.c3 ELSE rt1.c5 END)) ASC, ((+ (t0.c4)) IN ());
SELECT ALL MAX(t0.c3) FROM rt1 CROSS JOIN t0 ON (+ (t0.c1 COLLATE BINARY)) WHERE (((((((t0.c4)OR(0.7775642459951456)))OR(x'73')))OR(rt1.c5)) COLLATE RTRIM) ORDER BY LIKELY((((rt1.c0)) NOT BETWEEN ((t0.c2)) AND ((rt1.c0))))  NULLS FIRST, (((((((((t0.c2)) BETWEEN ((t0.c3)) AND ((rt1.c6))))AND((t0.c4 IN ()))))AND(((rt1.c0)>(rt1.c5)))))OR(rt1.c6)) ASC  NULLS LAST;
SELECT MAX(t0.c3) FROM rt1 CROSS JOIN t0 ON (+ (t0.c1 COLLATE BINARY)) WHERE (((((((((t0.c4)OR(0.7775642459951456)))OR(x'73')))OR(rt1.c5)) COLLATE RTRIM)AND((((~ ('475221837')))>((~ (rt1.c4))))))) ORDER BY ((((rt1.c2)LIKE(rt1.c4)))>>((- (t0.c0))))  NULLS LAST LIMIT 0x1 INTERSECT SELECT MAX(t0.c3) FROM rt1 CROSS JOIN t0 ON (+ (t0.c1 COLLATE BINARY)) WHERE (((((((((t0.c3)LIKE(rt1.c1)))AND(((rt1.c6) ISNULL))))OR(((t0.c2) ISNULL))))AND(((rt1.c0) NOTNULL)))) ORDER BY ((((rt1.c2)LIKE(rt1.c4)))>>((- (t0.c0))))  NULLS LAST LIMIT 1;
SELECT * FROM rt1, t0 WHERE (((((t0.c0)+(t0.c3)))/(CAST(rt1.c4 AS TEXT))));
SELECT * FROM rt1, t0 WHERE (((((t0.c0)+(t0.c3)))/(CAST(rt1.c4 AS TEXT))));
SELECT * FROM rt1, t0 WHERE (((((t0.c0)+(t0.c3)))/(CAST(rt1.c4 AS TEXT))));
SELECT * FROM rt1, t0 WHERE (((((t0.c0)+(t0.c3)))/(CAST(rt1.c4 AS TEXT))));
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS INTEGER)) ISNULL)) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c4 END) BETWEEN ((rt1.c4 IN ())) AND (((((rt1.c5)OR(rt1.c6)))AND(rt1.c0))))  NULLS FIRST, NULLIF((rt1.c1 IN (x'8e')), rt1.c5 COLLATE NOCASE);
SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c0 AS INTEGER)) ISNULL)) ORDER BY (((x'')) BETWEEN ((((x'') NOTNULL))) AND ((rt1.c0))), CASE WHEN NULL THEN ((rt1.c1)OR(rt1.c6)) WHEN ((rt1.c5)<=(rt1.c3)) THEN (rt1.c1 IN (rt1.c1, rt1.c3)) ELSE (rt1.c0 IN (rt1.c4)) END DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((NULL) NOT BETWEEN (((rt1.c1)<<(rt1.c5))) AND ('O'))) ORDER BY (((x'')) BETWEEN ((((x'') NOTNULL))) AND ((rt1.c0))), CASE WHEN NULL THEN ((rt1.c1)OR(rt1.c6)) WHEN ((rt1.c5)<=(rt1.c3)) THEN (rt1.c1 IN (rt1.c1, rt1.c3)) ELSE (rt1.c0 IN (rt1.c4)) END DESC  NULLS LAST LIMIT 0;
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS INTEGER)) ISNULL)) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c4 END) BETWEEN ((rt1.c4 IN ())) AND (((((rt1.c5)OR(rt1.c6)))AND(rt1.c0))))  NULLS FIRST, NULLIF((rt1.c1 IN (x'8e')), rt1.c5 COLLATE NOCASE);
SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c0 AS INTEGER)) ISNULL)) ORDER BY (((x'')) BETWEEN ((((x'') NOTNULL))) AND ((rt1.c0))), CASE WHEN NULL THEN ((rt1.c1)OR(rt1.c6)) WHEN ((rt1.c5)<=(rt1.c3)) THEN (rt1.c1 IN (rt1.c1, rt1.c3)) ELSE (rt1.c0 IN (rt1.c4)) END DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((NULL) NOT BETWEEN (((rt1.c1)<<(rt1.c5))) AND ('O'))) ORDER BY (((x'')) BETWEEN ((((x'') NOTNULL))) AND ((rt1.c0))), CASE WHEN NULL THEN ((rt1.c1)OR(rt1.c6)) WHEN ((rt1.c5)<=(rt1.c3)) THEN (rt1.c1 IN (rt1.c1, rt1.c3)) ELSE (rt1.c0 IN (rt1.c4)) END DESC  NULLS LAST LIMIT 0;
SELECT * FROM rt1 WHERE (CAST((rt1.c4 IN (rt1.c1)) AS INTEGER)) ORDER BY ((rt1.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS FIRST, ((((rt1.c0)!=(rt1.c2))) IS FALSE) ASC;
SELECT ALL * FROM rt1 WHERE (CAST((rt1.c4 IN (rt1.c1)) AS INTEGER)) ORDER BY (((((((((((rt1.c2 IN (rt1.c6)))OR((('') ISNULL))))AND(((rt1.c3)>=(rt1.c5)))))OR('_0')))OR((+ ('?%')))))AND((rt1.c2 IN (rt1.c6))));
SELECT * FROM rt1 WHERE (CAST((rt1.c4 IN (rt1.c1)) AS INTEGER)) ORDER BY ((rt1.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS FIRST, ((((rt1.c0)!=(rt1.c2))) IS FALSE) ASC;
SELECT ALL * FROM rt1 WHERE (CAST((rt1.c4 IN (rt1.c1)) AS INTEGER)) ORDER BY (((((((((((rt1.c2 IN (rt1.c6)))OR((('') ISNULL))))AND(((rt1.c3)>=(rt1.c5)))))OR('_0')))OR((+ ('?%')))))AND((rt1.c2 IN (rt1.c6))));
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((rt1.c5) BETWEEN (NULL) AND (0.15021235320835236))) NOT BETWEEN (((((((((((t0.c1)AND(t0.c2)))AND(rt1.c6)))AND(t0.c4)))AND(rt1.c3)))AND(NULL))) AND (CASE WHEN rt1.c2 THEN rt1.c6 WHEN NULL THEN rt1.c4 WHEN t0.c0 THEN 3.03395121E8 WHEN NULL THEN rt1.c5 ELSE rt1.c6 END)) WHERE (((((t0.c0) NOT NULL))==(((t0.c3)LIKE(0.34476108381281323)))));
SELECT DISTINCT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((rt1.c5) BETWEEN (NULL) AND (0.15021235320835236))) NOT BETWEEN (((((((((((t0.c1)AND(t0.c2)))AND(rt1.c6)))AND(t0.c4)))AND(rt1.c3)))AND(NULL))) AND (CASE WHEN rt1.c2 THEN rt1.c6 WHEN NULL THEN rt1.c4 WHEN t0.c0 THEN 3.03395121E8 WHEN NULL THEN rt1.c5 ELSE rt1.c6 END)) WHERE (((((((t0.c0) NOT NULL))==(((t0.c3)LIKE(0.34476108381281323)))))AND(t0.c3))) ORDER BY TYPEOF(((rt1.c1)>>(t0.c0))) DESC LIMIT 0x1;
SELECT COUNT(*) FROM rt1 WHERE (CAST('v^cr+' AS TEXT));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((CAST('v^cr+' AS TEXT))AND((- (UNLIKELY(rt1.c3)))))) ORDER BY ((((rt1.c5) ISNULL))AND((NOT (rt1.c1)))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (UNICODE(x'df81d8')) ORDER BY ((((rt1.c5) ISNULL))AND((NOT (rt1.c1)))) LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((t0.c3)) NOT BETWEEN (('1')) AND ((((t0.c1) NOT NULL))))) ORDER BY (((t0.c3) BETWEEN (t0.c2) AND (t0.c0)) IN (t0.c1));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c3)) NOT BETWEEN (('1')) AND ((((t0.c1) NOT NULL))))) ORDER BY ((t0.c3) NOT BETWEEN (CASE t0.c0  WHEN t0.c3 THEN t0.c0 WHEN t0.c3 THEN t0.c2 WHEN t0.c4 THEN t0.c4 ELSE t0.c4 END) AND (((((t0.c1)OR(t0.c4)))OR(t0.c0)))) DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (x'31d619') ORDER BY ((t0.c3) NOT BETWEEN (CASE t0.c0  WHEN t0.c3 THEN t0.c0 WHEN t0.c3 THEN t0.c2 WHEN t0.c4 THEN t0.c4 ELSE t0.c4 END) AND (((((t0.c1)OR(t0.c4)))OR(t0.c0)))) DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((t0.c3)) NOT BETWEEN (('1')) AND ((((t0.c1) NOT NULL))))) ORDER BY (((t0.c3) BETWEEN (t0.c2) AND (t0.c0)) IN (t0.c1));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c3)) NOT BETWEEN (('1')) AND ((((t0.c1) NOT NULL))))) ORDER BY ((t0.c3) NOT BETWEEN (CASE t0.c0  WHEN t0.c3 THEN t0.c0 WHEN t0.c3 THEN t0.c2 WHEN t0.c4 THEN t0.c4 ELSE t0.c4 END) AND (((((t0.c1)OR(t0.c4)))OR(t0.c0)))) DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (x'31d619') ORDER BY ((t0.c3) NOT BETWEEN (CASE t0.c0  WHEN t0.c3 THEN t0.c0 WHEN t0.c3 THEN t0.c2 WHEN t0.c4 THEN t0.c4 ELSE t0.c4 END) AND (((((t0.c1)OR(t0.c4)))OR(t0.c0)))) DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CASE t0.c3  WHEN t0.c3 THEN t0.c0 ELSE t0.c2 END) AND (((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CASE t0.c3  WHEN t0.c3 THEN t0.c0 ELSE t0.c2 END) AND (((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))))AND(IFNULL(DISTINCT ((t0.c3) IS TRUE), x'')))) ORDER BY (CAST(0.054839638238780686 AS REAL) IN ((+ (t0.c0)))) DESC LIMIT 3;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CASE t0.c3  WHEN t0.c3 THEN t0.c0 ELSE t0.c2 END) AND (((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CASE t0.c3  WHEN t0.c3 THEN t0.c0 ELSE t0.c2 END) AND (((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))))AND(IFNULL(DISTINCT ((t0.c3) IS TRUE), x'')))) ORDER BY (CAST(0.054839638238780686 AS REAL) IN ((+ (t0.c0)))) DESC LIMIT 3;
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c0) BETWEEN (rt1.c4) AND (-1908681393)))<=((((t0.c2))!=((t0.c4))))));
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c0) BETWEEN (rt1.c4) AND (-1908681393)))<((((t0.c2))>((t0.c4)))))) ORDER BY CASE ((rt1.c6)IS NOT(rt1.c4))  WHEN ((rt1.c0)LIKE(t0.c2)) THEN CASE WHEN t0.c4 THEN t0.c3 END ELSE (('-1270526967')IS NOT(t0.c4)) END DESC  NULLS LAST, ((UPPER(DISTINCT t0.c2)) NOT BETWEEN ((rt1.c1 IN (rt1.c4, rt1.c4))) AND ((rt1.c2 IN (rt1.c3, rt1.c6))))  NULLS FIRST INTERSECT SELECT * FROM rt1, t0 WHERE (CAST(((rt1.c4) IS FALSE) AS REAL)) ORDER BY CASE ((rt1.c6)IS NOT(rt1.c4))  WHEN ((rt1.c0)LIKE(t0.c2)) THEN CASE WHEN t0.c4 THEN t0.c3 END ELSE (('-1270526967')IS NOT(t0.c4)) END DESC  NULLS LAST, ((UPPER(DISTINCT t0.c2)) NOT BETWEEN ((rt1.c1 IN (rt1.c4, rt1.c4))) AND ((rt1.c2 IN (rt1.c3, rt1.c6))))  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c0) BETWEEN (rt1.c4) AND (-1908681393)))<=((((t0.c2))!=((t0.c4))))));
SELECT ALL * FROM rt1, t0 WHERE (((((t0.c0) BETWEEN (rt1.c4) AND (-1908681393)))<((((t0.c2))>((t0.c4)))))) ORDER BY CASE ((rt1.c6)IS NOT(rt1.c4))  WHEN ((rt1.c0)LIKE(t0.c2)) THEN CASE WHEN t0.c4 THEN t0.c3 END ELSE (('-1270526967')IS NOT(t0.c4)) END DESC  NULLS LAST, ((UPPER(DISTINCT t0.c2)) NOT BETWEEN ((rt1.c1 IN (rt1.c4, rt1.c4))) AND ((rt1.c2 IN (rt1.c3, rt1.c6))))  NULLS FIRST INTERSECT SELECT * FROM rt1, t0 WHERE (CAST(((rt1.c4) IS FALSE) AS REAL)) ORDER BY CASE ((rt1.c6)IS NOT(rt1.c4))  WHEN ((rt1.c0)LIKE(t0.c2)) THEN CASE WHEN t0.c4 THEN t0.c3 END ELSE (('-1270526967')IS NOT(t0.c4)) END DESC  NULLS LAST, ((UPPER(DISTINCT t0.c2)) NOT BETWEEN ((rt1.c1 IN (rt1.c4, rt1.c4))) AND ((rt1.c2 IN (rt1.c3, rt1.c6))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c0)IS(rt1.c6))))) ORDER BY (((rt1.c4, rt1.c1, rt1.c4)) BETWEEN (((rt1.c5 IN ()), CAST(rt1.c5 AS REAL), CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c6 END)) AND ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c6)), ((rt1.c6)<(rt1.c0)), ((rt1.c3)/(rt1.c2))))) ASC;
SELECT DISTINCT * FROM rt1 WHERE ((+ (((rt1.c0)IS(rt1.c6))))) ORDER BY (((rt1.c4, rt1.c1, rt1.c4)) BETWEEN (((rt1.c5 IN ()), CAST(rt1.c5 AS REAL), CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c6 END)) AND ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c6)), ((rt1.c6)<(rt1.c0)), ((rt1.c3)/(rt1.c2))))) ASC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (0x47522cf4) ORDER BY (((rt1.c4, rt1.c1, rt1.c4)) BETWEEN (((rt1.c5 IN ()), CAST(rt1.c5 AS REAL), CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c6 END)) AND ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c6)), ((rt1.c6)<(rt1.c0)), ((rt1.c3)/(rt1.c2))))) ASC LIMIT 0X1;
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c0)IS(rt1.c6))))) ORDER BY (((rt1.c4, rt1.c1, rt1.c4)) BETWEEN (((rt1.c5 IN ()), CAST(rt1.c5 AS REAL), CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c6 END)) AND ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c6)), ((rt1.c6)<(rt1.c0)), ((rt1.c3)/(rt1.c2))))) ASC;
SELECT DISTINCT * FROM rt1 WHERE ((+ (((rt1.c0)IS(rt1.c6))))) ORDER BY (((rt1.c4, rt1.c1, rt1.c4)) BETWEEN (((rt1.c5 IN ()), CAST(rt1.c5 AS REAL), CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c6 END)) AND ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c6)), ((rt1.c6)<(rt1.c0)), ((rt1.c3)/(rt1.c2))))) ASC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt1 WHERE (0x47522cf4) ORDER BY (((rt1.c4, rt1.c1, rt1.c4)) BETWEEN (((rt1.c5 IN ()), CAST(rt1.c5 AS REAL), CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c6 END)) AND ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c6)), ((rt1.c6)<(rt1.c0)), ((rt1.c3)/(rt1.c2))))) ASC LIMIT 0X1;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((t0.c2) NOTNULL) IN (((((rt1.c6)AND(t0.c3)))AND(t0.c2)))));
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((t0.c2) NOTNULL) IN (((((rt1.c6)AND(t0.c3)))AND(t0.c2)))))AND(((((t0.c3)>>(rt1.c3)))==(load_extension(rt1.c3)))))) LIMIT 0X3;
SELECT * FROM t0 WHERE ((((((((((t0.c1 IN ()))AND(CAST('gd' AS INTEGER))))OR(1929272462 COLLATE BINARY)))AND(((t0.c1)||(t0.c1)))))AND(((t0.c3) ISNULL)))) ORDER BY CASE WHEN '963998975' THEN ((((t0.c0)OR(t0.c3)))OR(t0.c2)) WHEN SQLITE_VERSION() THEN (((t0.c2, t0.c1, t0.c0))<=((t0.c4, t0.c3, t0.c0))) ELSE CAST(t0.c2 AS TEXT) END DESC, (((- (t0.c1)))AND(((t0.c0)||(t0.c1))));
SELECT * FROM t0 WHERE ((((((((((t0.c1 IN ()))AND(CAST('gd' AS INTEGER))))OR(1929272462 COLLATE BINARY)))AND(((t0.c1)||(t0.c1)))))AND(((t0.c3) ISNULL)))) ORDER BY CASE WHEN '963998975' THEN ((((t0.c0)OR(t0.c3)))OR(t0.c2)) WHEN SQLITE_VERSION() THEN (((t0.c2, t0.c1, t0.c0))<=((t0.c4, t0.c3, t0.c0))) ELSE CAST(t0.c2 AS TEXT) END DESC, (((- (t0.c1)))AND(((t0.c0)||(t0.c1)))) LIMIT 0X1;
SELECT * FROM t0 WHERE ((((((((((t0.c1 IN ()))AND(CAST('gd' AS INTEGER))))OR(1929272462 COLLATE BINARY)))AND(((t0.c1)||(t0.c1)))))AND(((t0.c3) ISNULL)))) ORDER BY CASE WHEN '963998975' THEN ((((t0.c0)OR(t0.c3)))OR(t0.c2)) WHEN SQLITE_VERSION() THEN (((t0.c2, t0.c1, t0.c0))<=((t0.c4, t0.c3, t0.c0))) ELSE CAST(t0.c2 AS TEXT) END DESC, (((- (t0.c1)))AND(((t0.c0)||(t0.c1))));
SELECT * FROM t0 WHERE ((((((((((t0.c1 IN ()))AND(CAST('gd' AS INTEGER))))OR(1929272462 COLLATE BINARY)))AND(((t0.c1)||(t0.c1)))))AND(((t0.c3) ISNULL)))) ORDER BY CASE WHEN '963998975' THEN ((((t0.c0)OR(t0.c3)))OR(t0.c2)) WHEN SQLITE_VERSION() THEN (((t0.c2, t0.c1, t0.c0))<=((t0.c4, t0.c3, t0.c0))) ELSE CAST(t0.c2 AS TEXT) END DESC, (((- (t0.c1)))AND(((t0.c0)||(t0.c1)))) LIMIT 0X1;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c6) NOTNULL)) IS TRUE)) ORDER BY ((CAST(t0.c1 AS REAL))LIKE(CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, UPPER(rt1.c5 COLLATE BINARY) ASC;
SELECT ALL * FROM rt1, t0 WHERE (((((((rt1.c6) NOTNULL)) IS TRUE))AND((((rt1.c2 IN ())) NOTNULL)))) ORDER BY CAST((- (rt1.c4)) AS NUMERIC) DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (((((((((load_extension(t0.c4))OR((- (rt1.c0)))))OR((t0.c3 IN (t0.c3)))))AND(((t0.c0) NOT BETWEEN (t0.c4) AND (rt1.c2)))))AND((~ (t0.c0))))) ORDER BY CAST((- (rt1.c4)) AS NUMERIC) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c6) NOTNULL)) IS TRUE)) ORDER BY ((CAST(t0.c1 AS REAL))LIKE(CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, UPPER(rt1.c5 COLLATE BINARY) ASC;
SELECT ALL * FROM rt1, t0 WHERE (((((((rt1.c6) NOTNULL)) IS TRUE))AND((((rt1.c2 IN ())) NOTNULL)))) ORDER BY CAST((- (rt1.c4)) AS NUMERIC) DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (((((((((load_extension(t0.c4))OR((- (rt1.c0)))))OR((t0.c3 IN (t0.c3)))))AND(((t0.c0) NOT BETWEEN (t0.c4) AND (rt1.c2)))))AND((~ (t0.c0))))) ORDER BY CAST((- (rt1.c4)) AS NUMERIC) DESC  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM t0, rt1 WHERE ((((t0.c4)) BETWEEN ((CAST(t0.c3 AS INTEGER))) AND ((LIKELY(rt1.c3)))));
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((((((t0.c4)) BETWEEN ((CAST(t0.c3 AS INTEGER))) AND ((LIKELY(rt1.c3)))))AND(((((rt1.c0)*(rt1.c1))) IS FALSE)))) LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((((((t0.c1)|(t0.c4)))AND(((rt1.c6)-(t0.c0)))))OR((((rt1.c6, NULL, x''))<=((t0.c0, x'6473', x'56')))))) LIMIT 2;
SELECT ALL * FROM t0, rt1 WHERE (-1826802634) ORDER BY COALESCE((1.101841451E9 IN (rt1.c0)), CAST(rt1.c2 AS INTEGER), ((rt1.c3)<(NULL))) ASC, CAST(rt1.c1 AS REAL) ASC;
SELECT ALL * FROM t0, rt1 WHERE (((0xffffffff931d3436)AND(((((rt1.c2) NOT NULL)) NOT BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (((((((rt1.c2)OR(rt1.c1)))AND(rt1.c5)))AND(rt1.c0))))))) ORDER BY ((rt1.c0)*(TYPEOF(DISTINCT t0.c0))) DESC LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE (-1826802634) ORDER BY COALESCE((1.101841451E9 IN (rt1.c0)), CAST(rt1.c2 AS INTEGER), ((rt1.c3)<(NULL))) ASC, CAST(rt1.c1 AS REAL) ASC;
SELECT ALL * FROM t0, rt1 WHERE (((0xffffffff931d3436)AND(((((rt1.c2) NOT NULL)) NOT BETWEEN (CAST(t0.c3 AS NUMERIC)) AND (((((((rt1.c2)OR(rt1.c1)))AND(rt1.c5)))AND(rt1.c0))))))) ORDER BY ((rt1.c0)*(TYPEOF(DISTINCT t0.c0))) DESC LIMIT 1;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (x'78a4');
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((x'78a4')AND(rt1.c0)));
SELECT ALL * FROM t0 WHERE ((((NULL, t0.c0)) BETWEEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c0)), x'9d90c5' COLLATE RTRIM)) AND ((t0.c1 COLLATE BINARY, CAST(t0.c1 AS REAL))))) ORDER BY ((CASE t0.c3  WHEN t0.c2 THEN t0.c4 WHEN t0.c4 THEN t0.c2 WHEN t0.c2 THEN t0.c3 ELSE t0.c3 END)!=(((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c2)))) ASC  NULLS LAST, (+ (((((t0.c1)OR(t0.c1)))OR(t0.c0)))) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((((NULL, t0.c0)) BETWEEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c0)), x'9d90c5' COLLATE RTRIM)) AND ((t0.c1 COLLATE BINARY, CAST(t0.c1 AS REAL)))))AND(t0.c1))) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c3 ELSE t0.c1 END AS INTEGER), (((HEX(t0.c4), ((t0.c0) IS TRUE)))=((((t0.c1) BETWEEN (t0.c2) AND (t0.c3)), CASE t0.c0  WHEN t0.c3 THEN t0.c2 ELSE t0.c2 END))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((NULL, t0.c0)) BETWEEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c0)), x'9d90c5' COLLATE RTRIM)) AND ((t0.c1 COLLATE BINARY, CAST(t0.c1 AS REAL))))) ORDER BY ((CASE t0.c3  WHEN t0.c2 THEN t0.c4 WHEN t0.c4 THEN t0.c2 WHEN t0.c2 THEN t0.c3 ELSE t0.c3 END)!=(((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c2)))) ASC  NULLS LAST, (+ (((((t0.c1)OR(t0.c1)))OR(t0.c0)))) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((((NULL, t0.c0)) BETWEEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c0)), x'9d90c5' COLLATE RTRIM)) AND ((t0.c1 COLLATE BINARY, CAST(t0.c1 AS REAL)))))AND(t0.c1))) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c3 ELSE t0.c1 END AS INTEGER), (((HEX(t0.c4), ((t0.c0) IS TRUE)))=((((t0.c1) BETWEEN (t0.c2) AND (t0.c3)), CASE t0.c0  WHEN t0.c3 THEN t0.c2 ELSE t0.c2 END))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL MIN(t0.c2) FROM t0 NATURAL JOIN rt1 WHERE (((((rt1.c3) BETWEEN (rt1.c4) AND (t0.c2)))<>(0xfffffffff475a1ac)));
SELECT DISTINCT MIN(t0.c2) FROM t0 NATURAL JOIN rt1 WHERE (((((rt1.c3) BETWEEN (rt1.c4) AND (t0.c2)))!=(-193617492))) ORDER BY (NOT ((- (rt1.c4))))  NULLS FIRST, (((t0.c3 IN (rt1.c0, t0.c3))) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((((rt1.c3, rt1.c1)) BETWEEN ((rt1.c0, t0.c2)) AND ((rt1.c5, rt1.c1))))) ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(t0.c2) FROM t0 NATURAL JOIN rt1 WHERE (((json_array_length(rt1.c6, t0.c3)) IS FALSE)) ORDER BY (NOT ((- (rt1.c4))))  NULLS FIRST, (((t0.c3 IN (rt1.c0, t0.c3))) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((((rt1.c3, rt1.c1)) BETWEEN ((rt1.c0, t0.c2)) AND ((rt1.c5, rt1.c1))))) ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL MAX(rt1.c3) FROM t0, rt1 WHERE (((((rt1.c3) IS TRUE)) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (t0.c4))) ORDER BY (((((rt1.c2, rt1.c6)) NOT BETWEEN ((0.9227090609215451, rt1.c3)) AND ((rt1.c5, rt1.c4)))) BETWEEN (json_array_length(t0.c0)) AND ((~ (t0.c4)))) DESC, (('A')>=(CAST(0.7649592618165002 AS NUMERIC)));
SELECT ALL MAX(rt1.c3) FROM t0, rt1 WHERE (((((rt1.c3) IS TRUE)) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (t0.c4))) ORDER BY (((((rt1.c2, rt1.c6)) NOT BETWEEN ((0.9227090609215451, rt1.c3)) AND ((rt1.c5, rt1.c4)))) BETWEEN (json_array_length(t0.c0)) AND ((~ (t0.c4)))) DESC, (('A')>=(CAST(0.7649592618165002 AS NUMERIC))) LIMIT 0X1;
SELECT ALL * FROM t0, rt1 WHERE (((((((t0.c0)OR(rt1.c2)))OR(rt1.c6))) ISNULL)) ORDER BY (((((rt1.c5))!=((rt1.c6))))AND(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((t0.c0)OR(rt1.c2)))OR(rt1.c6))) ISNULL)) ORDER BY (+ (((rt1.c0)LIKE(t0.c2))))  NULLS LAST, ((t0.c1) NOT BETWEEN (t0.c4) AND (t0.c1)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (((((((t0.c0)OR(rt1.c2)))OR(rt1.c6))) ISNULL)) ORDER BY (((((rt1.c5))!=((rt1.c6))))AND(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((t0.c0)OR(rt1.c2)))OR(rt1.c6))) ISNULL)) ORDER BY (+ (((rt1.c0)LIKE(t0.c2))))  NULLS LAST, ((t0.c1) NOT BETWEEN (t0.c4) AND (t0.c1)) COLLATE BINARY  NULLS LAST;
SELECT ALL MAX(rt1.c0) FROM rt1 WHERE ((((((((((rt1.c5)OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c6)))OR(rt1.c5)) IN (CASE rt1.c6  WHEN 'fk夠ah' THEN x'' END, CASE rt1.c5  WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END, ((((((((((rt1.c4)AND(rt1.c6)))AND(rt1.c3)))OR(rt1.c1)))AND(x'df')))AND('128946799')))));
SELECT DISTINCT MAX(rt1.c0) FROM rt1 WHERE ((((((((((((rt1.c5)OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c6)))OR(rt1.c5)) IN (CASE rt1.c6  WHEN 'fk夠ah' THEN x'' END, CASE rt1.c5  WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)))AND((+ (CAST(rt1.c0 AS TEXT)))))) INTERSECT SELECT DISTINCT MAX(rt1.c0) FROM rt1 WHERE ('');
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN (+ (t0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c4)) WHEN (((t0.c1))<=((t0.c2))) THEN (((t0.c3, t0.c1, t0.c2))<=((t0.c3, t0.c1, t0.c4))) END);
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN (+ (t0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c4)) WHEN (((t0.c1))<=((t0.c2))) THEN (((t0.c3, t0.c1, t0.c2))<=((t0.c3, t0.c1, t0.c4))) END) ORDER BY ((t0.c4 COLLATE NOCASE)|(json_quote(t0.c1)))  NULLS FIRST, ((((t0.c1)%(t0.c1)))>>(((t0.c4)%(t0.c2)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (NULL COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (NULL COLLATE RTRIM) ORDER BY ((t0.c4) IS FALSE) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST, TIME(((NULL) BETWEEN (t0.c1) AND (t0.c3)), t0.c4, json_array(t0.c3, t0.c0, t0.c3, t0.c1), CASE t0.c2  WHEN t0.c0 THEN NULL WHEN NULL THEN t0.c4 WHEN t0.c0 THEN t0.c4 WHEN t0.c1 THEN t0.c0 ELSE t0.c4 END, (((t0.c0))<((t0.c1))))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (NULL COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (NULL COLLATE RTRIM) ORDER BY ((t0.c4) IS FALSE) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST, TIME(((NULL) BETWEEN (t0.c1) AND (t0.c3)), t0.c4, json_array(t0.c3, t0.c0, t0.c3, t0.c1), CASE t0.c2  WHEN t0.c0 THEN NULL WHEN NULL THEN t0.c4 WHEN t0.c0 THEN t0.c4 WHEN t0.c1 THEN t0.c0 ELSE t0.c4 END, (((t0.c0))<((t0.c1))))  NULLS FIRST LIMIT 0X0;
SELECT MAX(rt1.c4) FROM rt1 WHERE (0.14790898626958582) ORDER BY NULLIF(DISTINCT rt1.c2 COLLATE NOCASE, CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 END)  NULLS LAST;
SELECT DISTINCT MAX(rt1.c4) FROM rt1 WHERE (0.14790898626958582) ORDER BY x'a0e408' COLLATE RTRIM ASC  NULLS FIRST, (((((((((((- (rt1.c6)))AND(CAST(rt1.c2 AS TEXT))))AND(((rt1.c1) IS FALSE))))AND(((0.21745297646809247) NOTNULL))))OR(rt1.c2 COLLATE NOCASE)))OR((+ (rt1.c3))));
SELECT * FROM rt1 WHERE ((((((rt1.c3, rt1.c4)) BETWEEN ((rt1.c5, rt1.c0)) AND ((rt1.c5, rt1.c2))))>>(COALESCE(DISTINCT rt1.c6, rt1.c1, x'', rt1.c6, rt1.c6, rt1.c1, rt1.c4)))) ORDER BY (((+ (rt1.c2))) NOT BETWEEN (LIKELIHOOD(rt1.c0, rt1.c6)) AND ((rt1.c4 IN (rt1.c1, rt1.c2))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c3, rt1.c4)) BETWEEN ((rt1.c5, rt1.c0)) AND ((rt1.c5, rt1.c2))))>>(COALESCE(DISTINCT rt1.c6, rt1.c1, x'', rt1.c6, rt1.c6, rt1.c1, rt1.c4))))AND(CAST(((((((rt1.c5)AND(rt1.c5)))AND(rt1.c4)))AND(rt1.c1)) AS NUMERIC)))) ORDER BY (((+ (rt1.c2))) NOT BETWEEN (LIKELIHOOD(rt1.c0, rt1.c6)) AND ((rt1.c4 IN (rt1.c1, rt1.c2))))  NULLS LAST LIMIT 0X0;
SELECT * FROM rt1 WHERE ((((((rt1.c3, rt1.c4)) BETWEEN ((rt1.c5, rt1.c0)) AND ((rt1.c5, rt1.c2))))>>(COALESCE(DISTINCT rt1.c6, rt1.c1, x'', rt1.c6, rt1.c6, rt1.c1, rt1.c4)))) ORDER BY (((+ (rt1.c2))) NOT BETWEEN (LIKELIHOOD(rt1.c0, rt1.c6)) AND ((rt1.c4 IN (rt1.c1, rt1.c2))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0 WHERE (0.3070050356607299);
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((0.3070050356607299)AND((CASE WHEN NULL THEN t0.c2 WHEN rt1.c6 THEN rt1.c0 ELSE x'8b' END IN ((NOT ('wkuT')))))));
SELECT * FROM t0 WHERE (CAST(((t0.c2)&(t0.c0)) AS BLOB)) ORDER BY CASE WHEN t0.c1 THEN ((t0.c3)<>(t0.c0)) WHEN (t0.c1 IN (t0.c3)) THEN SQLITE_SOURCE_ID() END, t0.c0 ASC  NULLS LAST, ((((t0.c0 COLLATE NOCASE)AND(SQLITE_COMPILEOPTION_USED(665241070))))AND((t0.c2 IN ()))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c2)&(t0.c0)) AS BLOB)) ORDER BY CASE WHEN t0.c1 THEN ((t0.c3)!=(t0.c0)) WHEN (t0.c1 IN (t0.c3)) THEN SQLITE_SOURCE_ID() END, t0.c0 ASC  NULLS LAST, ((((t0.c0 COLLATE NOCASE)AND(SQLITE_COMPILEOPTION_USED(665241070))))AND((t0.c2 IN ()))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (HEX(t0.c1) COLLATE BINARY) ORDER BY CASE WHEN t0.c1 THEN ((t0.c3)<>(t0.c0)) WHEN (t0.c1 IN (t0.c3)) THEN SQLITE_SOURCE_ID() END, t0.c0 ASC  NULLS LAST, ((((t0.c0 COLLATE NOCASE)AND(SQLITE_COMPILEOPTION_USED(0X27a6c5ee))))AND((t0.c2 IN ()))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CAST(((t0.c2)&(t0.c0)) AS BLOB)) ORDER BY CASE WHEN t0.c1 THEN ((t0.c3)<>(t0.c0)) WHEN (t0.c1 IN (t0.c3)) THEN SQLITE_SOURCE_ID() END, t0.c0 ASC  NULLS LAST, ((((t0.c0 COLLATE NOCASE)AND(SQLITE_COMPILEOPTION_USED(665241070))))AND((t0.c2 IN ()))) ASC  NULLS LAST;
SELECT ALL MIN(t0.c4) FROM t0 WHERE (((CASE t0.c3  WHEN t0.c2 THEN t0.c4 WHEN t0.c2 THEN t0.c2 ELSE t0.c4 END) IS TRUE)) ORDER BY (NOT ((t0.c1 IN ())))  NULLS FIRST, (((t0.c0 IN ())) BETWEEN (((-257007865)&(t0.c4))) AND (UNLIKELY(t0.c4))) DESC;
SELECT MIN(t0.c4) FROM t0 WHERE (((((CASE t0.c3  WHEN t0.c2 THEN t0.c4 WHEN t0.c2 THEN t0.c2 ELSE t0.c4 END) IS TRUE))AND((((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c2)) IN ((t0.c1 IN (t0.c0, 0.5021690346612778))))))) ORDER BY ((((((ABS(DISTINCT t0.c4))AND(CAST(t0.c1 AS REAL))))OR(t0.c0 COLLATE BINARY)))OR((((t0.c4))<((t0.c1))))) LIMIT 0x0;
SELECT MIN(t0.c1) FROM t0, rt1 WHERE (((MAX(t0.c2, rt1.c1)) NOT BETWEEN ((((t0.c4))<((t0.c2)))) AND (t0.c0 COLLATE NOCASE))) ORDER BY (((NOT (t0.c1))) BETWEEN (t0.c4) AND (((('-701392510', t0.c1, rt1.c2, rt1.c3, t0.c4, 'kM7{')) NOT BETWEEN ((t0.c1, t0.c3, rt1.c4, t0.c3, x'e72772', rt1.c2)) AND (('', t0.c3, t0.c1, t0.c3, rt1.c4, t0.c4))))) DESC, (((rt1.c6, ((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c5)))AND(t0.c0)))OR(rt1.c3))))<=((CASE WHEN NULL THEN t0.c4 WHEN t0.c2 THEN rt1.c5 END, rt1.c6)))  NULLS FIRST;
SELECT DISTINCT MIN(t0.c1) FROM t0, rt1 WHERE (((MAX(t0.c2, rt1.c1)) NOT BETWEEN ((((t0.c4))<=((t0.c2)))) AND (t0.c0 COLLATE NOCASE))) ORDER BY (((t0.c0 IN (rt1.c5))) IS TRUE) ASC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t0.c1) FROM t0, rt1 WHERE (((((((t0.c3) NOT NULL))AND((((rt1.c4, rt1.c5)) NOT BETWEEN ((t0.c4, rt1.c4)) AND ((rt1.c4, t0.c1))))))AND((rt1.c3 IN (rt1.c0))))) ORDER BY (((t0.c0 IN (rt1.c5))) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(NULL AS BLOB));
SELECT ALL * FROM t0 WHERE (((CAST(NULL AS BLOB))AND((- (((t0.c2) IS FALSE)))))) ORDER BY (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c3)) IN ()) ASC, ((((((t0.c3))<>((NULL))), ((t0.c2) BETWEEN (t0.c1) AND (t0.c4)), CASE t0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c4 THEN t0.c4 END))>=((CASE t0.c2  WHEN t0.c4 THEN t0.c2 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN t0.c0 WHEN t0.c2 THEN t0.c4 ELSE t0.c1 END, ((t0.c3) ISNULL), ((t0.c1)&(t0.c0)))))  NULLS FIRST, CAST(t0.c3 AS INTEGER) COLLATE RTRIM ASC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (CASE WHEN x'' THEN (((8.86054297E8))==((t0.c2))) ELSE t0.c1 COLLATE NOCASE END) ORDER BY (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c3)) IN ()) ASC, ((((((t0.c3))!=((NULL))), ((t0.c2) BETWEEN (t0.c1) AND (t0.c4)), CASE t0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c4 THEN t0.c4 END))>=((CASE t0.c2  WHEN t0.c4 THEN t0.c2 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN t0.c0 WHEN t0.c2 THEN t0.c4 ELSE t0.c1 END, ((t0.c3) ISNULL), ((t0.c1)&(t0.c0)))))  NULLS FIRST, CAST(t0.c3 AS INTEGER) COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CAST(NULL AS BLOB));
SELECT ALL * FROM t0 WHERE (((CAST(NULL AS BLOB))AND((- (((t0.c2) IS FALSE)))))) ORDER BY (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c3)) IN ()) ASC, ((((((t0.c3))<>((NULL))), ((t0.c2) BETWEEN (t0.c1) AND (t0.c4)), CASE t0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c4 THEN t0.c4 END))>=((CASE t0.c2  WHEN t0.c4 THEN t0.c2 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN t0.c0 WHEN t0.c2 THEN t0.c4 ELSE t0.c1 END, ((t0.c3) ISNULL), ((t0.c1)&(t0.c0)))))  NULLS FIRST, CAST(t0.c3 AS INTEGER) COLLATE RTRIM ASC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (CASE WHEN x'' THEN (((8.86054297E8))==((t0.c2))) ELSE t0.c1 COLLATE NOCASE END) ORDER BY (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c3)) IN ()) ASC, ((((((t0.c3))!=((NULL))), ((t0.c2) BETWEEN (t0.c1) AND (t0.c4)), CASE t0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c4 THEN t0.c4 END))>=((CASE t0.c2  WHEN t0.c4 THEN t0.c2 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN t0.c0 WHEN t0.c2 THEN t0.c4 ELSE t0.c1 END, ((t0.c3) ISNULL), ((t0.c1)&(t0.c0)))))  NULLS FIRST, CAST(t0.c3 AS INTEGER) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (CASE rt1.c5  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c6 END COLLATE NOCASE) ORDER BY (rt1.c2 IN (((rt1.c2)AND(rt1.c6))))  NULLS FIRST, (((NOT (NULL)))|(((rt1.c3)GLOB(rt1.c5)))) DESC;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((CASE rt1.c5  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c6 END COLLATE NOCASE)AND((((((rt1.c5)) NOT BETWEEN ((rt1.c2)) AND ((x'b0')))) NOTNULL)))) ORDER BY (rt1.c2 IN (((rt1.c2)AND(rt1.c6))))  NULLS FIRST, (((NOT (NULL)))|(((rt1.c3)GLOB(rt1.c5)))) DESC INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2)>(rt1.c6)) AS INTEGER)) ORDER BY (rt1.c2 IN (((rt1.c2)AND(rt1.c6))))  NULLS FIRST, (((NOT (NULL)))|(((rt1.c3)GLOB(rt1.c5)))) DESC;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (((((t0.c2)+(t0.c2))) NOT BETWEEN (((t0.c2)IS NOT(t0.c2))) AND (((t0.c2)%(t0.c3))))) ORDER BY (((((t0.c1, t0.c3))<=((t0.c0, t0.c3)))) NOT BETWEEN (((t0.c1) ISNULL)) AND (CASE '/^]L'  WHEN t0.c2 THEN '-1166789338' END))  NULLS LAST, '0.7100941812594009';
SELECT DISTINCT MAX(t0.c3) FROM t0 WHERE (((((((t0.c2)+(t0.c2))) NOT BETWEEN (((t0.c2)IS NOT(t0.c2))) AND (((t0.c2)%(t0.c3)))))AND(CASE CAST(t0.c2 AS INTEGER)  WHEN ((t0.c4) BETWEEN (t0.c3) AND (t0.c2)) THEN (t0.c1 IN (t0.c2, t0.c2)) WHEN ((t0.c0)LIKE(t0.c1)) THEN t0.c2 WHEN CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c4 THEN t0.c0 ELSE t0.c2 END THEN t0.c1 COLLATE NOCASE WHEN CAST(939657665 AS BLOB) THEN CAST(t0.c0 AS NUMERIC) ELSE (('1664405135') NOT BETWEEN (t0.c2) AND (t0.c0)) END))) ORDER BY CASE WHEN (t0.c0 IN ()) THEN CASE t0.c1  WHEN t0.c4 THEN t0.c2 WHEN t0.c3 THEN t0.c2 WHEN t0.c4 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c4 THEN t0.c3 END WHEN t0.c1 THEN t0.c3 COLLATE BINARY WHEN t0.c3 COLLATE BINARY THEN t0.c2 WHEN ((t0.c3)GLOB(t0.c3)) THEN ((t0.c2)>(t0.c3)) END DESC INTERSECT SELECT DISTINCT MAX(t0.c3) FROM t0 WHERE (CASE WHEN t0.c2 COLLATE NOCASE THEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) WHEN LAST_INSERT_ROWID() THEN NULL END) ORDER BY CASE WHEN (t0.c0 IN ()) THEN CASE t0.c1  WHEN t0.c4 THEN t0.c2 WHEN t0.c3 THEN t0.c2 WHEN t0.c4 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c4 THEN t0.c3 END WHEN t0.c1 THEN t0.c3 COLLATE BINARY WHEN t0.c3 COLLATE BINARY THEN t0.c2 WHEN ((t0.c3)GLOB(t0.c3)) THEN ((t0.c2)>(t0.c3)) END DESC;
SELECT ALL MAX(t0.c1) FROM t0 WHERE (((0.186998869102454)=((((t0.c3, t0.c2)) BETWEEN ((t0.c4, t0.c2)) AND ((t0.c1, -1.85197407E9))))));
SELECT MAX(t0.c1) FROM t0 WHERE (((0.186998869102454)=((((t0.c3, t0.c2)) BETWEEN ((t0.c4, t0.c2)) AND ((t0.c1, -1.85197407E9)))))) INTERSECT SELECT MAX(t0.c1) FROM t0 WHERE (((((((t0.c0) IS TRUE))AND(NULL)))OR((~ (t0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ('') ORDER BY json_extract((t0.c0 IN ()), json_extract(t0.c2, rt1.c5, t0.c0, t0.c1, rt1.c1), ((rt1.c0)*(rt1.c1))) DESC  NULLS FIRST, ((CAST(t0.c1 AS REAL)) BETWEEN (CAST(rt1.c4 AS INTEGER)) AND (((((((rt1.c2)AND(t0.c1)))OR(t0.c2)))AND(t0.c0)))) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((('')AND(t0.c4))) ORDER BY json_extract((t0.c0 IN ()), json_extract(t0.c2, rt1.c5, t0.c0, t0.c1, rt1.c1), ((rt1.c0)*(rt1.c1))) DESC  NULLS FIRST, ((CAST(t0.c1 AS REAL)) BETWEEN (CAST(rt1.c4 AS INTEGER)) AND (((((((rt1.c2)AND(t0.c1)))OR(t0.c2)))AND(t0.c0)))) DESC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ('0.8095110720425828') ORDER BY json_extract((t0.c0 IN ()), json_extract(t0.c2, rt1.c5, t0.c0, t0.c1, rt1.c1), ((rt1.c0)*(rt1.c1))) DESC  NULLS FIRST, ((CAST(t0.c1 AS REAL)) BETWEEN (CAST(rt1.c4 AS INTEGER)) AND (((((((rt1.c2)AND(t0.c1)))OR(t0.c2)))AND(t0.c0)))) DESC  NULLS LAST LIMIT 1;
SELECT ALL MAX(t0.c2) FROM t0 WHERE (CASE WHEN TYPEOF(DISTINCT t0.c4) THEN (((t0.c2, t0.c1, x'', t0.c3))=((t0.c4, t0.c2, t0.c0, t0.c0))) WHEN ((NULL)GLOB(t0.c0)) THEN ((('s3o뢗gk7')) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) WHEN t0.c0 THEN LOWER(t0.c2) END);
SELECT DISTINCT MAX(t0.c2) FROM t0 WHERE (CASE WHEN TYPEOF(DISTINCT t0.c4) THEN (((t0.c2, t0.c1, x'', t0.c3))=((t0.c4, t0.c2, t0.c0, t0.c0))) WHEN ((NULL)GLOB(t0.c0)) THEN ((('s3o뢗gk7')) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) WHEN t0.c0 THEN LOWER(t0.c2) END) ORDER BY NULL, ((t0.c3) IS TRUE) COLLATE RTRIM ASC  NULLS LAST, (~ (((t0.c4)>=(t0.c0)))) DESC LIMIT 0X0;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (t0.c3) ORDER BY t0.c2  NULLS FIRST, x'';
SELECT ALL MAX(t0.c3) FROM t0 WHERE (t0.c3) ORDER BY HEX(DISTINCT (((((((((('w允')AND(t0.c3)))OR(t0.c4)))OR(t0.c0)))OR(t0.c2)))AND(NULL))) DESC, ((t0.c3 COLLATE BINARY) BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (t0.c1 COLLATE RTRIM)) ASC  NULLS FIRST, (((((t0.c3)&(0X8a63fe1))))<((((t0.c2) BETWEEN (t0.c2) AND (t0.c4))))) DESC  NULLS FIRST INTERSECT SELECT MAX(t0.c3) FROM t0 WHERE (((((t0.c1)=(t0.c3))) NOTNULL)) ORDER BY HEX(DISTINCT (((((((((('w允')AND(t0.c3)))OR(t0.c4)))OR(t0.c0)))OR(t0.c2)))AND(NULL))) DESC, ((t0.c3 COLLATE BINARY) BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (t0.c1 COLLATE RTRIM)) ASC  NULLS FIRST, (((((t0.c3)&(145113057))))<((((t0.c2) BETWEEN (t0.c2) AND (t0.c4))))) DESC  NULLS FIRST;
SELECT MIN(rt1.c1) FROM t0 INNER JOIN rt1 ON json_quote(rt1.c5) WHERE (((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c3)) COLLATE NOCASE);
SELECT DISTINCT MIN(rt1.c1) FROM t0 INNER JOIN rt1 ON json_quote(rt1.c5) WHERE (((t0.c1) NOT BETWEEN (t0.c3) AND (t0.c3)) COLLATE NOCASE);
SELECT * FROM rt1, t0 WHERE ((((rt1.c5, x'20d8')) BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)), ((rt1.c1) BETWEEN (t0.c2) AND (rt1.c0)))) AND ((NULL, ((rt1.c6) IS FALSE))))) ORDER BY ((((rt1.c5)GLOB(rt1.c3))) ISNULL) ASC, ((((rt1.c2)/(t0.c3))) ISNULL);
SELECT DISTINCT * FROM rt1, t0 NOT INDEXED WHERE ((((rt1.c5, x'20d8')) BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)), ((rt1.c1) BETWEEN (t0.c2) AND (rt1.c0)))) AND ((NULL, ((rt1.c6) IS FALSE))))) ORDER BY CASE (rt1.c2 IN (rt1.c1))  WHEN CASE t0.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c5 END THEN CASE WHEN rt1.c2 THEN t0.c4 WHEN t0.c0 THEN t0.c2 WHEN rt1.c4 THEN rt1.c2 END WHEN ((rt1.c5)IS(t0.c2)) THEN (t0.c4 IN ()) WHEN (((rt1.c0, 'R', rt1.c2))<((rt1.c2, rt1.c5, t0.c2))) THEN ((((((((((rt1.c2)OR(x'e9')))OR(t0.c0)))OR(rt1.c3)))AND(NULL)))AND(t0.c3)) WHEN SQLITE_COMPILEOPTION_GET(rt1.c4) THEN 216100007 WHEN ((((((((((rt1.c5)AND(rt1.c2)))OR(t0.c0)))AND(t0.c4)))AND(rt1.c6)))OR(t0.c0)) THEN rt1.c4 COLLATE RTRIM END DESC  NULLS FIRST LIMIT 0;
SELECT * FROM rt1, t0 WHERE ((((rt1.c5, x'20d8')) BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)), ((rt1.c1) BETWEEN (t0.c2) AND (rt1.c0)))) AND ((NULL, ((rt1.c6) IS FALSE))))) ORDER BY ((((rt1.c5)GLOB(rt1.c3))) ISNULL) ASC, ((((rt1.c2)/(t0.c3))) ISNULL);
SELECT DISTINCT * FROM rt1, t0 NOT INDEXED WHERE ((((rt1.c5, x'20d8')) BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)), ((rt1.c1) BETWEEN (t0.c2) AND (rt1.c0)))) AND ((NULL, ((rt1.c6) IS FALSE))))) ORDER BY CASE (rt1.c2 IN (rt1.c1))  WHEN CASE t0.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c5 END THEN CASE WHEN rt1.c2 THEN t0.c4 WHEN t0.c0 THEN t0.c2 WHEN rt1.c4 THEN rt1.c2 END WHEN ((rt1.c5)IS(t0.c2)) THEN (t0.c4 IN ()) WHEN (((rt1.c0, 'R', rt1.c2))<((rt1.c2, rt1.c5, t0.c2))) THEN ((((((((((rt1.c2)OR(x'e9')))OR(t0.c0)))OR(rt1.c3)))AND(NULL)))AND(t0.c3)) WHEN SQLITE_COMPILEOPTION_GET(rt1.c4) THEN 216100007 WHEN ((((((((((rt1.c5)AND(rt1.c2)))OR(t0.c0)))AND(t0.c4)))AND(rt1.c6)))OR(t0.c0)) THEN rt1.c4 COLLATE RTRIM END DESC  NULLS FIRST LIMIT 0;
SELECT * FROM rt1, t0 WHERE (t0.c1);
SELECT ALL * FROM rt1, t0 WHERE (t0.c1);
SELECT * FROM rt1, t0 WHERE (t0.c1);
SELECT ALL * FROM rt1, t0 WHERE (t0.c1);
SELECT MIN(rt1.c2) FROM rt1 WHERE ((rt1.c2 IN ()) COLLATE BINARY);
SELECT DISTINCT MIN(rt1.c2) FROM rt1 WHERE ((((rt1.c2 IN ()) COLLATE BINARY)AND(CAST(((rt1.c2) IS FALSE) AS REAL)))) ORDER BY ((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c3)) COLLATE BINARY ASC, ((NOT (rt1.c2)) IN (NULL)) INTERSECT SELECT DISTINCT MIN(rt1.c2) FROM rt1 WHERE (((((-1243230983)OR(((rt1.c5)LIKE(rt1.c6)))))OR(((NULL)>(rt1.c5))))) ORDER BY ((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c3)) COLLATE BINARY ASC, ((NOT (rt1.c2)) IN (NULL));
SELECT * FROM t0, rt1 WHERE (((((rt1.c6) NOTNULL))AND((((rt1.c3))<>((rt1.c6))))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((rt1.c6) NOTNULL))AND((((rt1.c3))!=((rt1.c6))))))AND((((t0.c1) BETWEEN (rt1.c2) AND (t0.c0)) IN (((rt1.c5)IS(t0.c2))))))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (PRINTF((- (t0.c0)), t0.c3));
SELECT * FROM t0, rt1 WHERE (((((rt1.c6) NOTNULL))AND((((rt1.c3))<>((rt1.c6))))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((rt1.c6) NOTNULL))AND((((rt1.c3))!=((rt1.c6))))))AND((((t0.c1) BETWEEN (rt1.c2) AND (t0.c0)) IN (((rt1.c5)IS(t0.c2))))))) INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (PRINTF((- (t0.c0)), t0.c3));
SELECT MAX(t0.c3) FROM t0 WHERE (((((((t0.c4)=(t0.c1)))AND(((t0.c1)<>(t0.c2)))))OR(UNICODE(t0.c2))));
SELECT DISTINCT MAX(t0.c3) FROM t0 WHERE (((((((t0.c4)==(t0.c1)))AND(((t0.c1)!=(t0.c2)))))OR(UNICODE(t0.c2)))) ORDER BY ((CASE WHEN t0.c1 THEN t0.c3 END)>((- (t0.c4))))  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t0.c3) FROM t0 WHERE (CAST(CASE t0.c3  WHEN t0.c3 THEN t0.c0 WHEN t0.c2 THEN x'acf6' WHEN NULL THEN t0.c2 END AS TEXT)) ORDER BY ((CASE WHEN t0.c1 THEN t0.c3 END)>((- (t0.c4))))  NULLS FIRST;
SELECT ALL MIN(t0.c1) FROM t0 WHERE ((((+ (NULL))) NOT BETWEEN (((t0.c3) IS TRUE)) AND ((t0.c0 IN (t0.c4))))) ORDER BY CAST(0.35793772604994123 AS TEXT) DESC, 0.14015236017530386 DESC  NULLS LAST;
SELECT MIN(t0.c1) FROM t0 WHERE ((((((+ (NULL))) NOT BETWEEN (((t0.c3) IS TRUE)) AND ((t0.c0 IN (t0.c4)))))AND(CASE CAST(t0.c4 AS INTEGER)  WHEN ((t0.c3)IS(t0.c3)) THEN ((t0.c2)<(t0.c2)) WHEN ((t0.c4) IS FALSE) THEN ((((((((((t0.c1)OR(t0.c1)))OR(t0.c3)))OR(t0.c1)))AND(t0.c1)))OR(t0.c2)) ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) END))) ORDER BY ((CAST(t0.c4 AS BLOB))AND(t0.c3)), UPPER(t0.c4 COLLATE NOCASE);
SELECT COUNT(*) FROM t0, rt1 WHERE (rt1.c4);
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((rt1.c4)AND('-1e500'))) LIMIT 0X0;
SELECT ALL * FROM rt1 WHERE (CASE WHEN 'W⧡x授動%_p' THEN rt1.c2 COLLATE RTRIM ELSE (+ (rt1.c2)) END) ORDER BY ((rt1.c0 COLLATE BINARY)+(((((((rt1.c6)AND(rt1.c5)))AND(rt1.c3)))OR(rt1.c6)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (CASE WHEN 'W⧡x授動%_p' THEN rt1.c2 COLLATE RTRIM ELSE (+ (rt1.c2)) END) ORDER BY CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c6)) THEN (NOT (rt1.c5)) WHEN ((rt1.c0) ISNULL) THEN ROUND(rt1.c6, rt1.c2) WHEN (rt1.c4 IN ()) THEN (- (rt1.c2)) END  NULLS FIRST, ((0.45090362117297056) NOTNULL);
SELECT ALL * FROM rt1 WHERE (CASE WHEN 'W⧡x授動%_p' THEN rt1.c2 COLLATE RTRIM ELSE (+ (rt1.c2)) END) ORDER BY ((rt1.c0 COLLATE BINARY)+(((((((rt1.c6)AND(rt1.c5)))AND(rt1.c3)))OR(rt1.c6)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (CASE WHEN 'W⧡x授動%_p' THEN rt1.c2 COLLATE RTRIM ELSE (+ (rt1.c2)) END) ORDER BY CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c6)) THEN (NOT (rt1.c5)) WHEN ((rt1.c0) ISNULL) THEN ROUND(rt1.c6, rt1.c2) WHEN (rt1.c4 IN ()) THEN (- (rt1.c2)) END  NULLS FIRST, ((0.45090362117297056) NOTNULL);
SELECT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (rt1.c6) ORDER BY ABS(((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c5))) ASC, CASE WHEN ((rt1.c2)<<(rt1.c0)) THEN 0xffffffffadc1ecde ELSE 0.5343964495043916 END;
SELECT DISTINCT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (((rt1.c6)AND(((COALESCE(t0.c3, rt1.c4))!=(((((((((rt1.c4)AND('-Uv}&')))AND(x'15')))AND(t0.c3)))OR(rt1.c6))))))) ORDER BY ABS(((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c5))) ASC, CASE WHEN ((rt1.c2)<<(rt1.c0)) THEN 0xffffffffadc1ecde ELSE 0.5343964495043916 END INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c6)IS(rt1.c6))) ISNULL)) ORDER BY ABS(((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c5))) ASC, CASE WHEN ((rt1.c2)<<(rt1.c0)) THEN -1379799842 ELSE 0.5343964495043916 END;
SELECT MAX(t0.c1) FROM rt1, t0 WHERE (((0.8653775091932557 COLLATE RTRIM)*((((rt1.c0, t0.c1, rt1.c4, t0.c2, '-1314074616')) BETWEEN ((rt1.c5, rt1.c2, rt1.c5, x'8eb7', t0.c1)) AND ((rt1.c2, t0.c2, t0.c1, t0.c3, rt1.c5)))))) ORDER BY x'a5' COLLATE RTRIM DESC  NULLS FIRST, CASE WHEN CASE t0.c3  WHEN rt1.c5 THEN t0.c0 WHEN t0.c1 THEN rt1.c4 WHEN t0.c3 THEN t0.c3 ELSE rt1.c1 END THEN (('-1279305933') IS FALSE) END ASC  NULLS LAST;
SELECT DISTINCT MAX(t0.c1) FROM rt1, t0 WHERE (((0.8653775091932557 COLLATE RTRIM)*((((rt1.c0, t0.c1, rt1.c4, t0.c2, '-1314074616')) BETWEEN ((rt1.c5, rt1.c2, rt1.c5, x'8eb7', t0.c1)) AND ((rt1.c2, t0.c2, t0.c1, t0.c3, rt1.c5)))))) ORDER BY x'a5' COLLATE RTRIM DESC  NULLS FIRST, CASE WHEN CASE t0.c3  WHEN rt1.c5 THEN t0.c0 WHEN t0.c1 THEN rt1.c4 WHEN t0.c3 THEN t0.c3 ELSE rt1.c1 END THEN (('-1279305933') IS FALSE) END ASC  NULLS LAST LIMIT 0;
SELECT * FROM rt1 CROSS JOIN t0 ON ((((((t0.c2)-(rt1.c5)))OR(x'4768')))AND(t0.c3)) WHERE (CASE WHEN (+ (rt1.c6)) THEN 'S⯐鴌쟢,' COLLATE RTRIM WHEN ABS(DISTINCT rt1.c5) THEN t0.c0 WHEN LIKELIHOOD(DISTINCT rt1.c4, rt1.c3) THEN ((t0.c1)<=(t0.c2)) WHEN (rt1.c6 IN (t0.c1)) THEN rt1.c1 ELSE rt1.c4 COLLATE NOCASE END);
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON ((((((t0.c2)-(rt1.c5)))OR(x'4768')))AND(t0.c3)) WHERE (CASE WHEN (+ (rt1.c6)) THEN 'S⯐鴌쟢,' COLLATE RTRIM WHEN ABS(DISTINCT rt1.c5) THEN t0.c0 WHEN LIKELIHOOD(DISTINCT rt1.c4, rt1.c3) THEN ((t0.c1)==(t0.c2)) WHEN (rt1.c6 IN (t0.c1)) THEN rt1.c1 ELSE rt1.c4 COLLATE NOCASE END) ORDER BY (((((~ (x'')))OR('-2015616748')))OR(t0.c2)) ASC  NULLS LAST, (('347404932') BETWEEN (((t0.c3) NOT BETWEEN (rt1.c6) AND (rt1.c4))) AND (NULLIF(rt1.c3, -856217189))) DESC INTERSECT SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON ((((((t0.c2)-(rt1.c5)))OR(x'4768')))AND(t0.c3)) WHERE (t0.c1) ORDER BY (((((~ (x'')))OR('-2015616748')))OR(t0.c2)) ASC  NULLS LAST, (('347404932') BETWEEN (((t0.c3) NOT BETWEEN (rt1.c6) AND (rt1.c4))) AND (NULLIF(rt1.c3, 0xffffffffccf7299b))) DESC;
SELECT * FROM rt1 CROSS JOIN t0 ON ((((((t0.c2)-(rt1.c5)))OR(x'4768')))AND(t0.c3)) WHERE (CASE WHEN (+ (rt1.c6)) THEN 'S⯐鴌쟢,' COLLATE RTRIM WHEN ABS(DISTINCT rt1.c5) THEN t0.c0 WHEN LIKELIHOOD(DISTINCT rt1.c4, rt1.c3) THEN ((t0.c1)<=(t0.c2)) WHEN (rt1.c6 IN (t0.c1)) THEN rt1.c1 ELSE rt1.c4 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c3)))>>(ABS(rt1.c2)))) ORDER BY rt1.c1 DESC, CAST(rt1.c2 COLLATE NOCASE AS NUMERIC);
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c3)))>>(ABS(rt1.c2)))) ORDER BY ((rt1.c1)*(rt1.c3)) COLLATE BINARY, CAST(LIKELY(rt1.c1) AS BLOB) ASC LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2))  WHEN 603733417 THEN '0.8143859891652997' WHEN rt1.c4 THEN CAST(rt1.c4 AS NUMERIC) WHEN ((rt1.c2)+(rt1.c0)) THEN 0xffffffff9caa5e8a ELSE ((rt1.c1) BETWEEN (-1.191521787E9) AND (rt1.c1)) END) ORDER BY ((rt1.c1)*(rt1.c3)) COLLATE BINARY, CAST(LIKELY(rt1.c1) AS BLOB) ASC LIMIT 2;
SELECT MAX(t0.c4) FROM t0, rt1 WHERE (rt1.c2);
SELECT ALL MAX(t0.c4) FROM t0, rt1 WHERE (((rt1.c2)AND((((((t0.c1)) NOT BETWEEN (('{.uq徸V.f0')) AND ((rt1.c0))))>(highlight(t0.c2, rt1.c1, 'L}FB.', t0.c3)))))) ORDER BY CAST(rt1.c5 COLLATE RTRIM AS NUMERIC) DESC LIMIT 3 INTERSECT SELECT MAX(t0.c4) FROM t0, rt1 WHERE ((- ((+ (rt1.c5))))) ORDER BY CAST(rt1.c5 COLLATE RTRIM AS NUMERIC) DESC LIMIT 3;
SELECT * FROM rt1 WHERE ((NOT (rt1.c4 COLLATE BINARY)));
SELECT DISTINCT * FROM rt1 WHERE ((((NOT (rt1.c4 COLLATE BINARY)))AND((('-1125839889')==(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))))))) ORDER BY (((rt1.c0)>(rt1.c3)) IN (((rt1.c4)=(rt1.c3)))) ASC INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((x'' IN (((((rt1.c2)AND(rt1.c4)))AND(rt1.c0)), ((rt1.c5) NOTNULL)))) ORDER BY (((rt1.c0)>(rt1.c3)) IN (((rt1.c4)=(rt1.c3)))) ASC;
SELECT * FROM rt1 WHERE ((NOT (rt1.c4 COLLATE BINARY)));
SELECT DISTINCT * FROM rt1 WHERE ((((NOT (rt1.c4 COLLATE BINARY)))AND((('-1125839889')==(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))))))) ORDER BY (((rt1.c0)>(rt1.c3)) IN (((rt1.c4)=(rt1.c3)))) ASC INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((x'' IN (((((rt1.c2)AND(rt1.c4)))AND(rt1.c0)), ((rt1.c5) NOTNULL)))) ORDER BY (((rt1.c0)>(rt1.c3)) IN (((rt1.c4)=(rt1.c3)))) ASC;
SELECT * FROM rt1, t0 WHERE (rt1.c4) ORDER BY ((((rt1.c3, rt1.c3, NULL))>((t0.c0, t0.c3, t0.c2))) IN (rt1.c4 COLLATE BINARY)), (~ (COALESCE(DISTINCT rt1.c3, t0.c1))) ASC, (CAST(t0.c2 AS TEXT) IN ()) DESC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (((rt1.c4)AND(((t0.c1)+(rt1.c6)) COLLATE BINARY COLLATE RTRIM))) ORDER BY (((t0.c0 IN (t0.c4, rt1.c5))) NOT NULL) DESC, (t0.c3 IN ((+ ('924252814')))) DESC  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((CASE t0.c1  WHEN t0.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END)) AND (((((t0.c1, t0.c1, t0.c2))<=((t0.c0, t0.c3, t0.c1))))))  NULLS LAST INTERSECT SELECT * FROM rt1, t0 WHERE ((((t0.c2 IN (x''))) NOT BETWEEN (CAST(rt1.c6 AS BLOB)) AND (rt1.c3 COLLATE BINARY))) ORDER BY (((t0.c0 IN (t0.c4, rt1.c5))) NOT NULL) DESC, (t0.c3 IN ((+ ('924252814')))) DESC  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((CASE t0.c1  WHEN t0.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c3 END)) AND (((((t0.c1, t0.c1, t0.c2))<=((t0.c0, t0.c3, t0.c1))))))  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (rt1.c4) ORDER BY ((((rt1.c3, rt1.c3, NULL))>((t0.c0, t0.c3, t0.c2))) IN (rt1.c4 COLLATE BINARY)), (~ (COALESCE(DISTINCT rt1.c3, t0.c1))) ASC, (CAST(t0.c2 AS TEXT) IN ()) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c3)) NOT BETWEEN (((t0.c0 IN (NULL, t0.c1)))) AND (((((t0.c0, t0.c1, t0.c4, t0.c4))!=((t0.c3, t0.c0, 0.9170098428398377, t0.c1))))))) ORDER BY CAST(t0.c4 COLLATE BINARY AS INTEGER) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c3)) NOT BETWEEN (((t0.c0 IN (NULL, t0.c1)))) AND (((((t0.c0, t0.c1, t0.c4, t0.c4))!=((t0.c3, t0.c0, 0.9170098428398377, t0.c1)))))))AND(CAST(((x'')!=(t0.c0)) AS INTEGER)))) ORDER BY CAST(t0.c4 COLLATE BINARY AS INTEGER) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (~ (t0.c1)) THEN ((t0.c1) NOT NULL) ELSE ((t0.c4) BETWEEN (t0.c1) AND (t0.c4)) END) ORDER BY CAST(t0.c4 COLLATE BINARY AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c3)) NOT BETWEEN (((t0.c0 IN (NULL, t0.c1)))) AND (((((t0.c0, t0.c1, t0.c4, t0.c4))!=((t0.c3, t0.c0, 0.9170098428398377, t0.c1))))))) ORDER BY CAST(t0.c4 COLLATE BINARY AS INTEGER) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c3)) NOT BETWEEN (((t0.c0 IN (NULL, t0.c1)))) AND (((((t0.c0, t0.c1, t0.c4, t0.c4))!=((t0.c3, t0.c0, 0.9170098428398377, t0.c1)))))))AND(CAST(((x'')!=(t0.c0)) AS INTEGER)))) ORDER BY CAST(t0.c4 COLLATE BINARY AS INTEGER) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (~ (t0.c1)) THEN ((t0.c1) NOT NULL) ELSE ((t0.c4) BETWEEN (t0.c1) AND (t0.c4)) END) ORDER BY CAST(t0.c4 COLLATE BINARY AS INTEGER) DESC  NULLS FIRST;
SELECT MIN(rt1.c6) FROM rt1 WHERE (LIKELY(DISTINCT ((rt1.c2)<(x'')))) ORDER BY 8.82744025E8  NULLS FIRST, (((((rt1.c3)AND(rt1.c4)))AND(rt1.c1)) IN (((rt1.c5)IS(rt1.c2))))  NULLS FIRST;
SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE (((LIKELY(DISTINCT ((rt1.c2)<(x''))))AND(((((((((((rt1.c5)OR(rt1.c4)))OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c0)))-((rt1.c2 IN ())))))) ORDER BY LAST_INSERT_ROWID() DESC, (load_extension(rt1.c0, rt1.c4) IN (((rt1.c4)IS NOT(rt1.c1)), rt1.c0)), ((((6.03733417E8)%(rt1.c5)))GLOB(((rt1.c1)<(rt1.c3)))) ASC;
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((((((((t0.c0)OR(rt1.c0)))OR(rt1.c5)))OR(rt1.c4)))OR(rt1.c2)))AND(rt1.c3)))OR(CASE t0.c4  WHEN rt1.c6 THEN rt1.c2 END)));
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((((((((t0.c0)OR(rt1.c0)))OR(rt1.c5)))OR(rt1.c4)))OR(rt1.c2)))AND(rt1.c3)))OR(CASE t0.c4  WHEN rt1.c6 THEN rt1.c2 END))) LIMIT 0x3;
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT UPPER(t0.c1), ((t0.c2) NOT NULL)));
SELECT DISTINCT * FROM t0 WHERE (((NULLIF(DISTINCT UPPER(t0.c1), ((t0.c2) NOT NULL)))AND(((NULL)&((- (t0.c3))))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) BETWEEN (((((t0.c4, t0.c1))>=((t0.c2, t0.c3))))) AND ((CAST(t0.c1 AS REAL)))));
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT UPPER(t0.c1), ((t0.c2) NOT NULL)));
SELECT DISTINCT * FROM t0 WHERE (((NULLIF(DISTINCT UPPER(t0.c1), ((t0.c2) NOT NULL)))AND(((NULL)&((- (t0.c3))))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) BETWEEN (((((t0.c4, t0.c1))>=((t0.c2, t0.c3))))) AND ((CAST(t0.c1 AS REAL)))));
SELECT MIN(t0.c0) FROM rt1 INNER JOIN t0 ON (((rt1.c2 IN (t0.c0))) NOTNULL) WHERE ((((((rt1.c0, t0.c4, rt1.c3, rt1.c6))>((rt1.c3, x'6d', rt1.c0, rt1.c1)))) BETWEEN (t0.c3 COLLATE BINARY) AND (0.8073319883057666)));
SELECT ALL MIN(t0.c0) FROM rt1 INNER JOIN t0 ON (((rt1.c2 IN (t0.c0))) NOTNULL) WHERE ((((((((rt1.c0, t0.c4, rt1.c3, rt1.c6))>((rt1.c3, x'6d', rt1.c0, rt1.c1)))) BETWEEN (t0.c3 COLLATE BINARY) AND (0.8073319883057666)))AND(json_array_length(COALESCE(t0.c2, rt1.c1), t0.c1 COLLATE NOCASE)))) INTERSECT SELECT ALL MIN(t0.c0) FROM rt1 INNER JOIN t0 ON (((rt1.c2 IN (t0.c0))) NOTNULL) WHERE (((((~ (rt1.c4))))>((((rt1.c3)IS('1240086679'))))));
SELECT COUNT(*) FROM t0, rt1 WHERE (t0.c1);
SELECT COUNT(*) FROM t0, rt1 WHERE (((t0.c1)AND(802588575))) LIMIT 0;
SELECT * FROM rt1 WHERE (((((((((((((((rt1.c6)AND(rt1.c2)))AND(rt1.c6)))OR('?cf-0')))OR((+ (rt1.c3)))))AND(CASE rt1.c4  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c5 END)))OR(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c4)))))AND(((rt1.c2)<=(rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (((((((((((((((((rt1.c6)AND(rt1.c2)))AND(rt1.c6)))OR('?cf-0')))OR((+ (rt1.c3)))))AND(CASE rt1.c4  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c5 END)))OR(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c4)))))AND(((rt1.c2)=(rt1.c1)))))AND((((+ ('v._')))<=(((('999714993', rt1.c3)) NOT BETWEEN ((rt1.c1, rt1.c5)) AND (('', rt1.c0)))))))) ORDER BY (((+ (rt1.c1)))IS(((rt1.c3)>(rt1.c2)))) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((((((((((((rt1.c6)AND(rt1.c2)))AND(rt1.c6)))OR('?cf-0')))OR((+ (rt1.c3)))))AND(CASE rt1.c4  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c5 END)))OR(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c4)))))AND(((rt1.c2)<=(rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (((((((((((((((((rt1.c6)AND(rt1.c2)))AND(rt1.c6)))OR('?cf-0')))OR((+ (rt1.c3)))))AND(CASE rt1.c4  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c5 END)))OR(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c4)))))AND(((rt1.c2)=(rt1.c1)))))AND((((+ ('v._')))<=(((('999714993', rt1.c3)) NOT BETWEEN ((rt1.c1, rt1.c5)) AND (('', rt1.c0)))))))) ORDER BY (((+ (rt1.c1)))IS(((rt1.c3)>(rt1.c2)))) DESC  NULLS FIRST;
SELECT ALL MAX(rt1.c6) FROM rt1 WHERE (((rt1.c4 COLLATE RTRIM)IS NOT((+ (rt1.c0))))) ORDER BY ((((rt1.c1, rt1.c4, rt1.c1)) BETWEEN ((rt1.c6, rt1.c0, rt1.c0)) AND ((rt1.c5, rt1.c0, rt1.c4))) IN (rt1.c2)) DESC  NULLS FIRST, 44439548 ASC, (((((NULL)<>(x'0a')), PRINTF(0xfffffffff2262a69, rt1.c5)))<=((rt1.c1 COLLATE BINARY, rt1.c5)));
SELECT ALL MAX(rt1.c6) FROM rt1 WHERE (((rt1.c4 COLLATE RTRIM)IS NOT((+ (rt1.c0))))) ORDER BY ((((rt1.c1, rt1.c4, rt1.c1)) BETWEEN ((rt1.c6, rt1.c0, rt1.c0)) AND ((rt1.c5, rt1.c0, rt1.c4))) IN (rt1.c2)) DESC  NULLS FIRST, 44439548 ASC, (((((NULL)<>(x'0a')), PRINTF(-232379799, rt1.c5)))<=((rt1.c1 COLLATE BINARY, rt1.c5)));
SELECT * FROM t0, rt1 WHERE (((rt1.c3 IN ()) IN ())) ORDER BY (CAST(rt1.c1 AS TEXT) IN (((rt1.c6)IS(t0.c2))))  NULLS FIRST, CAST(((rt1.c1) NOT BETWEEN (t0.c3) AND (t0.c4)) AS NUMERIC);
SELECT * FROM t0, rt1 WHERE (((((rt1.c3 IN ()) IN ()))AND('1844222368'))) ORDER BY (CAST(rt1.c1 AS TEXT) IN (((rt1.c6)IS(t0.c2))))  NULLS FIRST, CAST(((rt1.c1) NOT BETWEEN (t0.c3) AND (t0.c4)) AS NUMERIC);
SELECT * FROM t0, rt1 WHERE (((rt1.c3 IN ()) IN ())) ORDER BY (CAST(rt1.c1 AS TEXT) IN (((rt1.c6)IS(t0.c2))))  NULLS FIRST, CAST(((rt1.c1) NOT BETWEEN (t0.c3) AND (t0.c4)) AS NUMERIC);
SELECT * FROM t0, rt1 WHERE (((((rt1.c3 IN ()) IN ()))AND('1844222368'))) ORDER BY (CAST(rt1.c1 AS TEXT) IN (((rt1.c6)IS(t0.c2))))  NULLS FIRST, CAST(((rt1.c1) NOT BETWEEN (t0.c3) AND (t0.c4)) AS NUMERIC);
SELECT ALL * FROM rt1 WHERE (CASE WHEN CASE rt1.c6  WHEN x'73' THEN rt1.c2 END THEN (- (rt1.c1)) WHEN rt1.c5 COLLATE RTRIM THEN ((rt1.c6)%(rt1.c3)) WHEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c4)) THEN rt1.c4 COLLATE BINARY WHEN rt1.c0 THEN LIKELIHOOD(DISTINCT rt1.c5, rt1.c5) END) ORDER BY ((((CAST(rt1.c3 AS INTEGER))OR(((rt1.c0) BETWEEN (rt1.c5) AND (rt1.c3)))))AND('-1845383164'))  NULLS LAST, ((((rt1.c2)+(rt1.c0))) BETWEEN (((rt1.c5)<>(rt1.c3))) AND (rt1.c2 COLLATE RTRIM)) DESC, (rt1.c0 IN (rt1.c4)) COLLATE NOCASE DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN CASE rt1.c6  WHEN x'73' THEN rt1.c2 END THEN (- (rt1.c1)) WHEN rt1.c5 COLLATE RTRIM THEN ((rt1.c6)%(rt1.c3)) WHEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c4)) THEN rt1.c4 COLLATE BINARY WHEN rt1.c0 THEN LIKELIHOOD(DISTINCT rt1.c5, rt1.c5) END) ORDER BY ((((CAST(rt1.c3 AS INTEGER))OR(((rt1.c0) BETWEEN (rt1.c5) AND (rt1.c3)))))AND('-1845383164'))  NULLS LAST, ((((rt1.c2)+(rt1.c0))) BETWEEN (((rt1.c5)!=(rt1.c3))) AND (rt1.c2 COLLATE RTRIM)) DESC, (rt1.c0 IN (rt1.c4)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (CASE WHEN CASE rt1.c6  WHEN x'73' THEN rt1.c2 END THEN (- (rt1.c1)) WHEN rt1.c5 COLLATE RTRIM THEN ((rt1.c6)%(rt1.c3)) WHEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c4)) THEN rt1.c4 COLLATE BINARY WHEN rt1.c0 THEN LIKELIHOOD(DISTINCT rt1.c5, rt1.c5) END) ORDER BY ((((CAST(rt1.c3 AS INTEGER))OR(((rt1.c0) BETWEEN (rt1.c5) AND (rt1.c3)))))AND('-1845383164'))  NULLS LAST, ((((rt1.c2)+(rt1.c0))) BETWEEN (((rt1.c5)<>(rt1.c3))) AND (rt1.c2 COLLATE RTRIM)) DESC, (rt1.c0 IN (rt1.c4)) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE BINARY IN (CAST(rt1.c2 AS REAL), json_quote(rt1.c1))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE BINARY IN (CAST(rt1.c2 AS REAL), json_quote(rt1.c1)))) ORDER BY (((((x'1c')) BETWEEN ((rt1.c2)) AND ((0.6363554780013154))))>(json_array_length(NULL, rt1.c2)))  NULLS FIRST, rt1.c2 ASC LIMIT 0x1;
SELECT COUNT(*) FROM rt1 WHERE ('rwpx搜GS5');
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ('rwpx搜GS5') LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((((((+ (rt1.c4)))AND(((rt1.c1)/(rt1.c6)))))OR(((rt1.c2) NOTNULL))))OR((((rt1.c6)) BETWEEN ((rt1.c0)) AND ((rt1.c6)))))) LIMIT 1;
SELECT ALL MAX(t0.c0) FROM t0, rt1 WHERE (x'0236');
SELECT ALL MAX(t0.c0) FROM t0, rt1 WHERE (((x'0236')AND(CASE (rt1.c2 IN ())  WHEN CASE WHEN t0.c4 THEN rt1.c5 ELSE t0.c0 END THEN ((((t0.c0)AND(rt1.c4)))AND(rt1.c6)) ELSE ((rt1.c0) NOT NULL) END))) INTERSECT SELECT ALL MAX(t0.c0) FROM t0, rt1 WHERE (((rt1.c6) BETWEEN (t0.c4) AND (rt1.c4)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON ((((((t0.c0)AND(0.02144569608592506)))OR(rt1.c2)))AND(rt1.c2)) COLLATE NOCASE WHERE ((((rt1.c0) IS TRUE) IN ()));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON ((((((t0.c0)AND(0.02144569608592506)))OR(rt1.c2)))AND(rt1.c2)) COLLATE NOCASE WHERE ((((rt1.c0) IS TRUE) IN ())) ORDER BY TOTAL_CHANGES() DESC, (((((((((~ (t0.c0)))OR('1695456650')))AND(CAST(rt1.c2 AS TEXT))))AND(((t0.c0)-(rt1.c0)))))OR(t0.c1 COLLATE BINARY)) DESC  NULLS LAST LIMIT 0X2;
SELECT MAX(t0.c0) FROM rt1, t0 WHERE (((((rt1.c2) BETWEEN (t0.c2) AND (NULL))) NOT BETWEEN (ABS(rt1.c2)) AND (rt1.c5)));
SELECT ALL MAX(t0.c0) FROM rt1, t0 WHERE (((((((rt1.c2) BETWEEN (t0.c2) AND (NULL))) NOT BETWEEN (ABS(rt1.c2)) AND (rt1.c5)))AND(((((rt1.c4 IN (rt1.c6))))<=((((rt1.c2)=('2029517459'))))))));
SELECT * FROM t0 WHERE (TRIM((NOT (t0.c3)))) ORDER BY NULL  NULLS LAST, (((t0.c0, t0.c3)) NOT BETWEEN ((((t0.c2)|(t0.c1)), CAST(t0.c1 AS REAL))) AND ((((t0.c2)-(t0.c0)), (((t0.c2))>((t0.c1))))));
SELECT ALL * FROM t0 WHERE (TRIM((NOT (t0.c3)))) ORDER BY NULL  NULLS LAST, (((t0.c0, t0.c3)) NOT BETWEEN ((((t0.c2)|(t0.c1)), CAST(t0.c1 AS REAL))) AND ((((t0.c2)-(t0.c0)), (((t0.c2))>((t0.c1)))))) LIMIT 0 INTERSECT SELECT * FROM t0 WHERE ((TRIM(t0.c1) IN ())) ORDER BY NULL  NULLS LAST, (((t0.c0, t0.c3)) NOT BETWEEN ((((t0.c2)|(t0.c1)), CAST(t0.c1 AS REAL))) AND ((((t0.c2)-(t0.c0)), (((t0.c2))>((t0.c1)))))) LIMIT 0;
SELECT * FROM t0 WHERE (TRIM((NOT (t0.c3)))) ORDER BY NULL  NULLS LAST, (((t0.c0, t0.c3)) NOT BETWEEN ((((t0.c2)|(t0.c1)), CAST(t0.c1 AS REAL))) AND ((((t0.c2)-(t0.c0)), (((t0.c2))>((t0.c1))))));
SELECT ALL * FROM t0 WHERE (TRIM((NOT (t0.c3)))) ORDER BY NULL  NULLS LAST, (((t0.c0, t0.c3)) NOT BETWEEN ((((t0.c2)|(t0.c1)), CAST(t0.c1 AS REAL))) AND ((((t0.c2)-(t0.c0)), (((t0.c2))>((t0.c1)))))) LIMIT 0 INTERSECT SELECT * FROM t0 WHERE ((TRIM(t0.c1) IN ())) ORDER BY NULL  NULLS LAST, (((t0.c0, t0.c3)) NOT BETWEEN ((((t0.c2)|(t0.c1)), CAST(t0.c1 AS REAL))) AND ((((t0.c2)-(t0.c0)), (((t0.c2))>((t0.c1)))))) LIMIT 0;
SELECT * FROM rt1 WHERE (CASE rt1.c0 COLLATE NOCASE  WHEN rt1.c4 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY WHEN (+ (rt1.c2)) THEN CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c4 END ELSE CAST(rt1.c5 AS REAL) END);
SELECT * FROM rt1 WHERE (((CASE rt1.c0 COLLATE NOCASE  WHEN rt1.c4 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY WHEN (+ (rt1.c2)) THEN CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c4 END ELSE CAST(rt1.c5 AS REAL) END)AND((((+ (rt1.c5)))-(((rt1.c3)>=(rt1.c6))))))) LIMIT 3 INTERSECT SELECT * FROM rt1 WHERE (((((rt1.c0)%(rt1.c0)))==(((NULL) ISNULL)))) LIMIT 0X3;
SELECT * FROM rt1 WHERE (CASE rt1.c0 COLLATE NOCASE  WHEN rt1.c4 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY WHEN (+ (rt1.c2)) THEN CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c4 END ELSE CAST(rt1.c5 AS REAL) END);
SELECT * FROM rt1 WHERE (((CASE rt1.c0 COLLATE NOCASE  WHEN rt1.c4 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY WHEN (+ (rt1.c2)) THEN CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c4 END ELSE CAST(rt1.c5 AS REAL) END)AND((((+ (rt1.c5)))-(((rt1.c3)>=(rt1.c6))))))) LIMIT 3 INTERSECT SELECT * FROM rt1 WHERE (((((rt1.c0)%(rt1.c0)))==(((NULL) ISNULL)))) LIMIT 0X3;
SELECT MIN(rt1.c6) FROM rt1 WHERE (rt1.c6);
SELECT MIN(rt1.c6) FROM rt1 WHERE (((rt1.c6)AND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND (('1820991483')))))) ORDER BY CAST(((((((rt1.c3)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) AS NUMERIC) DESC  NULLS FIRST, (((+ (rt1.c3))) NOT BETWEEN (((rt1.c3)AND(rt1.c1))) AND ((rt1.c5 IN (rt1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ('8G舔20Ly^' COLLATE BINARY);
SELECT ALL * FROM t0 WHERE ('8G舔20Ly^' COLLATE BINARY) INTERSECT SELECT ALL * FROM t0 WHERE ((LOWER(t0.c3) IN ('Uv,Z孭&㮴', ((t0.c4)>=(t0.c2)), (t0.c2 IN ()))));
SELECT ALL * FROM t0 WHERE ('8G舔20Ly^' COLLATE BINARY);
SELECT ALL * FROM t0 WHERE ('8G舔20Ly^' COLLATE BINARY) INTERSECT SELECT ALL * FROM t0 WHERE ((LOWER(t0.c3) IN ('Uv,Z孭&㮴', ((t0.c4)>=(t0.c2)), (t0.c2 IN ()))));
SELECT MAX(rt1.c2) FROM rt1, t0 WHERE (((((((t0.c3)*(x'')))OR(((t0.c3)LIKE(rt1.c1)))))AND(CASE t0.c3  WHEN t0.c0 THEN rt1.c0 WHEN NULL THEN rt1.c4 ELSE t0.c2 END))) ORDER BY (~ (((rt1.c6) BETWEEN (rt1.c0) AND (rt1.c4)))) ASC  NULLS FIRST, (- (t0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL MAX(rt1.c2) FROM rt1, t0 WHERE (((((((((t0.c3)*(x'')))OR(((t0.c3)LIKE(rt1.c1)))))AND(CASE t0.c3  WHEN t0.c0 THEN rt1.c0 WHEN NULL THEN rt1.c4 ELSE t0.c2 END)))AND('TRUE'))) ORDER BY (~ (((rt1.c6) BETWEEN (rt1.c0) AND (rt1.c4)))) ASC  NULLS FIRST, (- (t0.c0)) COLLATE BINARY ASC  NULLS LAST LIMIT 0x4;
SELECT ALL MAX(t0.c0) FROM t0, rt1 WHERE (rt1.c6);
SELECT ALL MAX(t0.c0) FROM t0, rt1 WHERE (rt1.c6) LIMIT 0X0;
SELECT MIN(rt1.c1) FROM rt1 WHERE ((- (CAST(rt1.c5 AS NUMERIC)))) ORDER BY ((((((((((((((((((rt1.c4)OR(rt1.c5)))OR(rt1.c1)))AND(rt1.c5)))OR(rt1.c1)))AND(CAST(rt1.c0 AS REAL))))OR((rt1.c1 IN (rt1.c6, rt1.c1)))))OR(((0.2532644899588975)<<('!')))))OR(((x'') IS FALSE))))AND(((rt1.c4) BETWEEN (rt1.c1) AND ('0.045390897871673164')))) DESC;
SELECT DISTINCT MIN(rt1.c1) FROM rt1 WHERE ((((- (CAST(rt1.c5 AS NUMERIC))))AND((NOT (COALESCE(rt1.c4, rt1.c6)))))) ORDER BY ((((((((((((((((((rt1.c4)OR(rt1.c5)))OR(rt1.c1)))AND(rt1.c5)))OR(rt1.c1)))AND(CAST(rt1.c0 AS REAL))))OR((rt1.c1 IN (rt1.c6, rt1.c1)))))OR(((0.2532644899588975)<<('!')))))OR(((x'') IS FALSE))))AND(((rt1.c4) BETWEEN (rt1.c1) AND ('0.045390897871673164')))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((NOT (NULL)))OR(((NULL) NOT NULL))))AND(CASE WHEN rt1.c5 THEN rt1.c0 ELSE 1154561328 END)));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((((((NOT (NULL)))OR(((NULL) NOT NULL))))AND(CASE WHEN rt1.c5 THEN rt1.c0 ELSE 1154561328 END)))AND(((IFNULL(DISTINCT rt1.c1, rt1.c2)) BETWEEN ((((rt1.c5, rt1.c1))>((rt1.c5, rt1.c5)))) AND (0.6582575926668529))))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (0.9066167977819946);
SELECT ALL * FROM t0 WHERE (0.4791826538667312);
SELECT * FROM t0 WHERE (((0.4791826538667312)AND(CAST(CASE t0.c4  WHEN NULL THEN t0.c0 ELSE t0.c4 END AS TEXT)))) ORDER BY ((((t0.c1)AND(t0.c4)))AND(t0.c0)) COLLATE NOCASE, (((t0.c4 IN ())) NOT BETWEEN (((4.75221837E8) BETWEEN (t0.c2) AND (t0.c0))) AND (((t0.c3)>=(t0.c3)))), ((t0.c1 COLLATE NOCASE)==(t0.c2))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (0.4791826538667312);
SELECT * FROM t0 WHERE (((0.4791826538667312)AND(CAST(CASE t0.c4  WHEN NULL THEN t0.c0 ELSE t0.c4 END AS TEXT)))) ORDER BY ((((t0.c1)AND(t0.c4)))AND(t0.c0)) COLLATE NOCASE, (((t0.c4 IN ())) NOT BETWEEN (((4.75221837E8) BETWEEN (t0.c2) AND (t0.c0))) AND (((t0.c3)>=(t0.c3)))), ((t0.c1 COLLATE NOCASE)==(t0.c2))  NULLS FIRST;
SELECT ALL MAX(rt1.c4) FROM rt1 WHERE (0.9747774809669865);
SELECT DISTINCT MAX(rt1.c4) FROM rt1 WHERE (((0.9747774809669865)AND(NULL COLLATE BINARY))) LIMIT 5;
SELECT MAX(rt1.c4) FROM rt1 WHERE (((((rt1.c2) NOTNULL)) NOT NULL)) ORDER BY ((((((((rt1.c0) ISNULL))AND((((rt1.c4)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c6))))))AND(((((NULL)OR(rt1.c0)))OR(rt1.c0)))))OR(CASE rt1.c5  WHEN rt1.c2 THEN rt1.c2 END)), (rt1.c6 IN ()) ASC  NULLS LAST, ((((((((rt1.c0) IS FALSE))OR(rt1.c2)))OR((rt1.c6 IN (-1831354367)))))AND(rt1.c6 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT MAX(rt1.c4) FROM rt1 WHERE (((((((rt1.c2) NOTNULL)) NOT NULL))AND(ROUND(CASE WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c6 END, ((rt1.c4)&(137591527)))))) ORDER BY ((((((((rt1.c0) ISNULL))AND((((rt1.c4)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c6))))))AND(((((NULL)OR(rt1.c0)))OR(rt1.c0)))))OR(CASE rt1.c5  WHEN rt1.c2 THEN rt1.c2 END)), (rt1.c6 IN ()) ASC  NULLS LAST, ((((((((rt1.c0) IS FALSE))OR(rt1.c2)))OR((rt1.c6 IN (-1831354367)))))AND(rt1.c6 COLLATE BINARY)) DESC  NULLS FIRST INTERSECT SELECT MAX(rt1.c4) FROM rt1 WHERE (((INSTR(rt1.c1, rt1.c4)) ISNULL)) ORDER BY ((((((((rt1.c0) ISNULL))AND((((rt1.c4)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c6))))))AND(((((NULL)OR(rt1.c0)))OR(rt1.c0)))))OR(CASE rt1.c5  WHEN rt1.c2 THEN rt1.c2 END)), (rt1.c6 IN ()) ASC  NULLS LAST, ((((((((rt1.c0) IS FALSE))OR(rt1.c2)))OR((rt1.c6 IN (-1831354367)))))AND(rt1.c6 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (ABS(CAST(t0.c4 AS REAL))) ORDER BY TRIM(DISTINCT t0.c0 COLLATE NOCASE, t0.c2)  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (ABS(CAST(t0.c4 AS REAL))) ORDER BY TRIM(DISTINCT t0.c0 COLLATE NOCASE, t0.c2)  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((x'07ab' IN (t0.c3))) BETWEEN ((- (t0.c1))) AND (NULL))) ORDER BY TRIM(DISTINCT t0.c0 COLLATE NOCASE, t0.c2)  NULLS FIRST;
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT CAST(t0.c3 AS TEXT))) ORDER BY (CASE t0.c1  WHEN t0.c3 THEN t0.c0 END IN ((+ (t0.c1)))) ASC;
SELECT DISTINCT * FROM t0 WHERE (((TYPEOF(DISTINCT CAST(t0.c3 AS TEXT)))AND(((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c3)))LIKE(((((((((t0.c1)AND(t0.c4)))AND(t0.c0)))OR(t0.c1)))OR(t0.c1))))))) ORDER BY DATETIME(((t0.c0)-(0.7778323840392691)), NULLIF(0xffffffffe3777655, t0.c3), CAST(x'02c9c7a0' AS INTEGER)), ((CAST('M^eZ~' AS BLOB)) IS TRUE) DESC, ((t0.c0) ISNULL) DESC LIMIT 1;
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT CAST(t0.c3 AS TEXT))) ORDER BY (CASE t0.c1  WHEN t0.c3 THEN t0.c0 END IN ((+ (t0.c1)))) ASC;
SELECT DISTINCT * FROM t0 WHERE (((TYPEOF(DISTINCT CAST(t0.c3 AS TEXT)))AND(((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c3)))LIKE(((((((((t0.c1)AND(t0.c4)))AND(t0.c0)))OR(t0.c1)))OR(t0.c1))))))) ORDER BY DATETIME(((t0.c0)-(0.7778323840392691)), NULLIF(0xffffffffe3777655, t0.c3), CAST(x'02c9c7a0' AS INTEGER)), ((CAST('M^eZ~' AS BLOB)) IS TRUE) DESC, ((t0.c0) ISNULL) DESC LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c1) NOTNULL) AS INTEGER)) ORDER BY ((CAST(rt1.c4 AS BLOB)) NOTNULL) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(((rt1.c1) NOTNULL) AS INTEGER))AND(UNICODE('zzwIZR~{')))) ORDER BY ((CAST(rt1.c4 AS BLOB)) NOTNULL) ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (x'') ORDER BY ((CAST(rt1.c4 AS BLOB)) NOTNULL) ASC LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c1) NOTNULL) AS INTEGER)) ORDER BY ((CAST(rt1.c4 AS BLOB)) NOTNULL) ASC;
SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(((rt1.c1) NOTNULL) AS INTEGER))AND(UNICODE('zzwIZR~{')))) ORDER BY ((CAST(rt1.c4 AS BLOB)) NOTNULL) ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (x'') ORDER BY ((CAST(rt1.c4 AS BLOB)) NOTNULL) ASC LIMIT 1;
SELECT COUNT(*) FROM t0, rt1 WHERE (((((t0.c3)>(t0.c0)))-(CAST(t0.c1 AS REAL)))) ORDER BY '7' DESC;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((t0.c3)>(t0.c0)))-(CAST(t0.c1 AS REAL)))) ORDER BY '7' DESC INTERSECT SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c0) NOT BETWEEN (t0.c3) AND ('QFቭ<'))) NOT BETWEEN (((rt1.c6)%(rt1.c5))) AND (rt1.c4))) ORDER BY '7' DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3) ORDER BY ((rt1.c2) ISNULL) COLLATE NOCASE ASC, (- (rt1.c4)) DESC;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3)AND(rt1.c3))) ORDER BY CHANGES()  NULLS FIRST, rt1.c3 ASC  NULLS FIRST LIMIT 0X3;
SELECT MIN(t0.c2) FROM t0 LEFT OUTER JOIN rt1 ON ((((t0.c2) NOT BETWEEN (t0.c4) AND ('8p.㮜')))&(0xffffffffe6d1d4cb)) WHERE (CASE ((rt1.c1) NOTNULL)  WHEN CAST(t0.c2 AS TEXT) THEN ((((x'')AND(rt1.c6)))OR(rt1.c2)) END) ORDER BY CASE WHEN CAST(rt1.c0 AS INTEGER) THEN '-1665136082' ELSE ABS(NULL) END ASC, ((((t0.c0) NOT BETWEEN (t0.c2) AND (rt1.c4))) BETWEEN ((- (rt1.c4))) AND (((t0.c1) ISNULL))) ASC  NULLS LAST;
SELECT DISTINCT MIN(t0.c2) FROM t0 INNER JOIN rt1 ON ((((t0.c2) NOT BETWEEN (t0.c4) AND ('8p.㮜')))&(-422456117)) WHERE (CASE ((rt1.c1) NOTNULL)  WHEN CAST(t0.c2 AS TEXT) THEN ((((x'')AND(rt1.c6)))OR(rt1.c2)) END) ORDER BY (- (((rt1.c2)IS NOT(rt1.c1)))) DESC, ((LIKELY(rt1.c1)) IS FALSE) DESC LIMIT 0X0;
SELECT MAX(rt1.c6) FROM t0, rt1 WHERE ((((t0.c4 IN (rt1.c3)))<>(((t0.c2) ISNULL)))) ORDER BY IFNULL(((rt1.c0) IS TRUE), (+ (rt1.c5))) ASC  NULLS FIRST, (((rt1.c3)) NOT BETWEEN ((((rt1.c0)LIKE(t0.c0)))) AND (((rt1.c6 IN (t0.c1)))))  NULLS FIRST, ((CASE WHEN t0.c2 THEN NULL END) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND ('-134458342'))) AND (((((((rt1.c3)AND(rt1.c1)))OR(t0.c0)))OR(rt1.c2)))) DESC  NULLS FIRST;
SELECT DISTINCT MAX(rt1.c6) FROM t0 NOT INDEXED, rt1 WHERE ((((t0.c4 IN (rt1.c3)))>(((t0.c2) ISNULL)))) ORDER BY ((t0.c4) BETWEEN (UNICODE(rt1.c0)) AND (rt1.c4)) ASC, CAST(highlight(rt1.c4, rt1.c5, rt1.c5, rt1.c2) AS NUMERIC)  NULLS FIRST;
SELECT MAX(rt1.c3) FROM rt1 WHERE (((COALESCE(rt1.c4, NULL, rt1.c3, rt1.c3))<<((rt1.c3 IN (rt1.c1)))));
SELECT ALL MAX(rt1.c3) FROM rt1 WHERE (((COALESCE(rt1.c4, NULL, rt1.c3, rt1.c3))<<((rt1.c3 IN (rt1.c1))))) LIMIT 1 INTERSECT SELECT MAX(rt1.c3) FROM rt1 WHERE (CASE WHEN (rt1.c2 IN (rt1.c4)) THEN rt1.c3 END) LIMIT 1;
SELECT ALL MIN(rt1.c2) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))>>(rt1.c3)));
SELECT ALL MIN(rt1.c2) FROM rt1 WHERE (((((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))>>(rt1.c3)))AND((((rt1.c5 IN (rt1.c0))) IS TRUE)))) ORDER BY ((((rt1.c3) NOT NULL)) BETWEEN ((((rt1.c0, rt1.c0))<(('k', rt1.c3)))) AND (x'f18f'))  NULLS FIRST LIMIT 2;
SELECT ALL MAX(rt1.c4) FROM t0 NATURAL JOIN rt1 WHERE ((((NULL))>=((CASE t0.c3  WHEN rt1.c1 THEN rt1.c0 WHEN '1239046975' THEN rt1.c3 ELSE rt1.c0 END))));
SELECT ALL MAX(rt1.c4) FROM t0 NATURAL JOIN rt1 WHERE ((((((NULL))>=((CASE t0.c3  WHEN rt1.c1 THEN rt1.c0 WHEN '1239046975' THEN rt1.c3 ELSE rt1.c0 END))))AND(CAST(((rt1.c4)-(t0.c0)) AS NUMERIC)))) LIMIT 0X2 INTERSECT SELECT ALL MAX(rt1.c4) FROM t0 NATURAL JOIN rt1 WHERE (CASE WHEN ((x'81e2') IS FALSE) THEN (((rt1.c3, rt1.c2, t0.c0))<((rt1.c4, rt1.c4, 0Xffffffff98fcc0e6))) WHEN (NOT (rt1.c1)) THEN ((((((((((rt1.c2)AND(t0.c3)))OR(rt1.c0)))OR(t0.c3)))OR(rt1.c2)))AND(t0.c1)) WHEN ((rt1.c0) NOTNULL) THEN ((rt1.c3) NOT NULL) WHEN (t0.c0 IN (rt1.c2)) THEN SQLITE_COMPILEOPTION_GET(rt1.c4) END) LIMIT 0X2;
SELECT MIN(rt1.c4) FROM t0 NATURAL JOIN rt1 WHERE (CAST(t0.c3 AS NUMERIC) COLLATE BINARY) ORDER BY ((((((((rt1.c3)AND(rt1.c1)))OR('')))OR(t0.c4))) NOTNULL);
SELECT ALL MIN(rt1.c4) FROM t0 NATURAL JOIN rt1 WHERE (((CAST(t0.c3 AS NUMERIC) COLLATE BINARY)AND(((((t0.c0)AND(rt1.c1)))OR('Ifnf(')) COLLATE RTRIM))) ORDER BY ((((((((rt1.c3)AND(rt1.c1)))OR('')))OR(t0.c4))) NOTNULL);
SELECT * FROM t0 WHERE (((((((t0.c4))>((t0.c0))), t0.c1 COLLATE BINARY, (t0.c3 IN (t0.c0)), CAST(t0.c0 AS BLOB)))==((CAST(t0.c0 AS TEXT), ((((x'71')AND(t0.c1)))OR(t0.c0)), CAST(t0.c1 AS BLOB), t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c4))>((t0.c0))), t0.c1 COLLATE BINARY, (t0.c3 IN (t0.c0)), CAST(t0.c0 AS BLOB)))==((CAST(t0.c0 AS TEXT), ((((x'71')AND(t0.c1)))OR(t0.c0)), CAST(t0.c1 AS BLOB), t0.c0))))AND(CAST((t0.c3 IN (t0.c4)) AS TEXT)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c4, t0.c0, t0.c3, t0.c4))==((t0.c2, t0.c0, t0.c2, t0.c0))), CAST(t0.c2 AS INTEGER), ((t0.c2)!=(t0.c0)), ((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3))))<=((t0.c4 COLLATE BINARY, NULL, CAST(t0.c2 AS BLOB), (t0.c0 IN (t0.c1, t0.c0))))));
SELECT * FROM t0 WHERE (((((((t0.c4))>((t0.c0))), t0.c1 COLLATE BINARY, (t0.c3 IN (t0.c0)), CAST(t0.c0 AS BLOB)))==((CAST(t0.c0 AS TEXT), ((((x'71')AND(t0.c1)))OR(t0.c0)), CAST(t0.c1 AS BLOB), t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c4))>((t0.c0))), t0.c1 COLLATE BINARY, (t0.c3 IN (t0.c0)), CAST(t0.c0 AS BLOB)))==((CAST(t0.c0 AS TEXT), ((((x'71')AND(t0.c1)))OR(t0.c0)), CAST(t0.c1 AS BLOB), t0.c0))))AND(CAST((t0.c3 IN (t0.c4)) AS TEXT)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c4, t0.c0, t0.c3, t0.c4))==((t0.c2, t0.c0, t0.c2, t0.c0))), CAST(t0.c2 AS INTEGER), ((t0.c2)!=(t0.c0)), ((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c3))))<=((t0.c4 COLLATE BINARY, NULL, CAST(t0.c2 AS BLOB), (t0.c0 IN (t0.c1, t0.c0))))));
SELECT * FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((((rt1.c0)AND(rt1.c3)))OR('-615884566')))) AND ((((rt1.c6)+(x'')))))) ORDER BY CAST('' AS REAL)  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((((rt1.c0)AND(rt1.c3)))OR('-615884566')))) AND ((((rt1.c6)+(x'')))))) ORDER BY ((CASE rt1.c3  WHEN rt1.c6 THEN rt1.c3 END) ISNULL)  NULLS LAST, (((((rt1.c6)OR(rt1.c3)))OR(rt1.c0)) IN ()) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE (CASE ((rt1.c0)=(rt1.c6))  WHEN (rt1.c1 IN (rt1.c3)) THEN CAST(rt1.c5 AS REAL) END) ORDER BY ((CASE rt1.c3  WHEN rt1.c6 THEN rt1.c3 END) ISNULL)  NULLS LAST, (((((rt1.c6)OR(rt1.c3)))OR(rt1.c0)) IN ()) LIMIT 0X1;
SELECT * FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((((rt1.c0)AND(rt1.c3)))OR('-615884566')))) AND ((((rt1.c6)+(x'')))))) ORDER BY CAST('' AS REAL)  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((((rt1.c0)AND(rt1.c3)))OR('-615884566')))) AND ((((rt1.c6)+(x'')))))) ORDER BY ((CASE rt1.c3  WHEN rt1.c6 THEN rt1.c3 END) ISNULL)  NULLS LAST, (((((rt1.c6)OR(rt1.c3)))OR(rt1.c0)) IN ()) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE (CASE ((rt1.c0)=(rt1.c6))  WHEN (rt1.c1 IN (rt1.c3)) THEN CAST(rt1.c5 AS REAL) END) ORDER BY ((CASE rt1.c3  WHEN rt1.c6 THEN rt1.c3 END) ISNULL)  NULLS LAST, (((((rt1.c6)OR(rt1.c3)))OR(rt1.c0)) IN ()) LIMIT 0X1;
SELECT * FROM t0 WHERE ((((((t0.c0))<=((t0.c3))))GLOB(CAST(t0.c2 AS NUMERIC)))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 ELSE x'' END)-(t0.c1)) DESC, CASE ((t0.c2)AND(t0.c4))  WHEN (t0.c1 IN ()) THEN 0X59be5920 END DESC  NULLS LAST, ((((t0.c0)&(t0.c1))) ISNULL) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0))<((t0.c3))))GLOB(CAST(t0.c2 AS NUMERIC)))) ORDER BY ((t0.c3) IS TRUE) COLLATE RTRIM LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c4)&(t0.c0))))) ORDER BY ((t0.c3) IS TRUE) COLLATE RTRIM LIMIT 0X0;
SELECT * FROM t0 WHERE ((((((t0.c0))<=((t0.c3))))GLOB(CAST(t0.c2 AS NUMERIC)))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 ELSE x'' END)-(t0.c1)) DESC, CASE ((t0.c2)AND(t0.c4))  WHEN (t0.c1 IN ()) THEN 0X59be5920 END DESC  NULLS LAST, ((((t0.c0)&(t0.c1))) ISNULL) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0))<((t0.c3))))GLOB(CAST(t0.c2 AS NUMERIC)))) ORDER BY ((t0.c3) IS TRUE) COLLATE RTRIM LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c4)&(t0.c0))))) ORDER BY ((t0.c3) IS TRUE) COLLATE RTRIM LIMIT 0X0;
SELECT ALL MIN(rt1.c5) FROM t0, rt1 WHERE (((((t0.c0)!=(rt1.c1))) NOT NULL));
SELECT DISTINCT MIN(rt1.c5) FROM t0, rt1 WHERE (((((t0.c0)!=(rt1.c1))) NOT NULL)) INTERSECT SELECT DISTINCT MIN(rt1.c5) FROM t0, rt1 WHERE ((((~ (rt1.c2))) NOT BETWEEN (rt1.c0) AND (TRIM(NULL, t0.c0))));
SELECT MAX(rt1.c0) FROM rt1 LEFT OUTER JOIN t0 ON (((('w') NOTNULL)) NOT BETWEEN ((-232272012 IN (t0.c3))) AND (CASE WHEN rt1.c5 THEN rt1.c1 END)) WHERE (((((((((rt1.c5)OR(rt1.c1)))AND(rt1.c2)))AND(t0.c1))) NOTNULL));
SELECT DISTINCT MAX(rt1.c0) FROM rt1 INNER JOIN t0 ON (((('w') NOTNULL)) NOT BETWEEN ((0xfffffffff227cf74 IN (t0.c3))) AND (CASE WHEN rt1.c5 THEN rt1.c1 END)) WHERE (((((((((((rt1.c5)OR(rt1.c1)))AND(rt1.c2)))AND(t0.c1))) NOTNULL))AND(((rt1.c2)%(((t0.c0)LIKE(t0.c1))))))) ORDER BY (NOT (((t0.c3)/(rt1.c6)))) LIMIT 4;
SELECT * FROM rt1, t0 WHERE (CASE WHEN ((rt1.c3)|(t0.c3)) THEN ((rt1.c6) BETWEEN (t0.c0) AND (rt1.c1)) WHEN x'' THEN CASE t0.c0  WHEN rt1.c4 THEN t0.c4 WHEN t0.c3 THEN rt1.c5 WHEN '' THEN rt1.c2 END END);
SELECT DISTINCT * FROM rt1, t0 WHERE (CASE WHEN ((rt1.c3)|(t0.c3)) THEN ((rt1.c6) BETWEEN (t0.c0) AND (rt1.c1)) WHEN x'' THEN CASE t0.c0  WHEN rt1.c4 THEN t0.c4 WHEN t0.c3 THEN rt1.c5 WHEN '' THEN rt1.c2 END END) ORDER BY '穜' ASC  NULLS FIRST LIMIT 1;
SELECT * FROM rt1, t0 WHERE (CASE WHEN ((rt1.c3)|(t0.c3)) THEN ((rt1.c6) BETWEEN (t0.c0) AND (rt1.c1)) WHEN x'' THEN CASE t0.c0  WHEN rt1.c4 THEN t0.c4 WHEN t0.c3 THEN rt1.c5 WHEN '' THEN rt1.c2 END END);
SELECT DISTINCT * FROM rt1, t0 WHERE (CASE WHEN ((rt1.c3)|(t0.c3)) THEN ((rt1.c6) BETWEEN (t0.c0) AND (rt1.c1)) WHEN x'' THEN CASE t0.c0  WHEN rt1.c4 THEN t0.c4 WHEN t0.c3 THEN rt1.c5 WHEN '' THEN rt1.c2 END END) ORDER BY '穜' ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((x'7b') ISNULL) WHERE (((CASE WHEN t0.c1 THEN rt1.c3 ELSE t0.c1 END) IS TRUE));
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((x'7b') ISNULL) WHERE (((CASE WHEN t0.c1 THEN rt1.c3 ELSE t0.c1 END) IS TRUE));
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((x'7b') ISNULL) WHERE (((CASE WHEN t0.c1 THEN rt1.c3 ELSE t0.c1 END) IS TRUE));
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((x'7b') ISNULL) WHERE (((CASE WHEN t0.c1 THEN rt1.c3 ELSE t0.c1 END) IS TRUE));
SELECT * FROM t0 WHERE (t0.c1) ORDER BY ((((((((t0.c3) BETWEEN (t0.c4) AND (t0.c1)))OR(((t0.c1)/(t0.c1)))))OR((t0.c2 IN ()))))OR(UNLIKELY(DISTINCT t0.c0)))  NULLS LAST, ((((t0.c0 IN ()), (t0.c0 IN ()), CAST(t0.c0 AS NUMERIC), ((((((((t0.c2)AND(x'')))AND(t0.c1)))AND(t0.c3)))OR(t0.c0)), ((t0.c3)>=(t0.c1))))>=(((((NULL, t0.c0, '')) NOT BETWEEN ((t0.c2, t0.c3, t0.c3)) AND ((t0.c3, NULL, t0.c2))), (+ (t0.c3)), t0.c0 COLLATE NOCASE, CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c3 WHEN 'o8E' THEN 0.663687743175696 WHEN t0.c2 THEN t0.c4 ELSE t0.c3 END, (+ (t0.c4))))), ((((t0.c1)LIKE(t0.c3)))+((t0.c1 IN ())));
SELECT DISTINCT * FROM t0 WHERE (t0.c1) ORDER BY ((((((((t0.c0)LIKE(t0.c2)))AND(((t0.c3)<>(t0.c1)))))OR(((t0.c3) BETWEEN (t0.c4) AND (t0.c0)))))AND(CASE WHEN t0.c2 THEN 0Xffffffffd4e8b8f9 WHEN t0.c1 THEN t0.c1 END)) DESC, ((((t0.c0)IS(t0.c3)))<=(((t0.c4) BETWEEN (x'') AND (t0.c0)))) DESC  NULLS LAST, 0.6079899478204648 COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c1) ORDER BY ((((((((t0.c3) BETWEEN (t0.c4) AND (t0.c1)))OR(((t0.c1)/(t0.c1)))))OR((t0.c2 IN ()))))OR(UNLIKELY(DISTINCT t0.c0)))  NULLS LAST, ((((t0.c0 IN ()), (t0.c0 IN ()), CAST(t0.c0 AS NUMERIC), ((((((((t0.c2)AND(x'')))AND(t0.c1)))AND(t0.c3)))OR(t0.c0)), ((t0.c3)>=(t0.c1))))>=(((((NULL, t0.c0, '')) NOT BETWEEN ((t0.c2, t0.c3, t0.c3)) AND ((t0.c3, NULL, t0.c2))), (+ (t0.c3)), t0.c0 COLLATE NOCASE, CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c3 WHEN 'o8E' THEN 0.663687743175696 WHEN t0.c2 THEN t0.c4 ELSE t0.c3 END, (+ (t0.c4))))), ((((t0.c1)LIKE(t0.c3)))+((t0.c1 IN ())));
SELECT DISTINCT * FROM t0 WHERE (t0.c1) ORDER BY ((((((((t0.c0)LIKE(t0.c2)))AND(((t0.c3)<>(t0.c1)))))OR(((t0.c3) BETWEEN (t0.c4) AND (t0.c0)))))AND(CASE WHEN t0.c2 THEN 0Xffffffffd4e8b8f9 WHEN t0.c1 THEN t0.c1 END)) DESC, ((((t0.c0)IS(t0.c3)))<=(((t0.c4) BETWEEN (x'') AND (t0.c0)))) DESC  NULLS LAST, 0.6079899478204648 COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((NOT (MIN(t0.c2, '᫝', t0.c1, t0.c1))));
SELECT DISTINCT * FROM t0 WHERE ((((NOT (MIN(t0.c2, '᫝', t0.c1, t0.c1))))AND(((((t0.c1) ISNULL)) IS FALSE)))) LIMIT 0x1;
SELECT * FROM t0 WHERE ((NOT (MIN(t0.c2, '᫝', t0.c1, t0.c1))));
SELECT DISTINCT * FROM t0 WHERE ((((NOT (MIN(t0.c2, '᫝', t0.c1, t0.c1))))AND(((((t0.c1) ISNULL)) IS FALSE)))) LIMIT 0x1;
SELECT MAX(rt1.c6) FROM rt1, t0 WHERE (LOWER(((rt1.c4)&(t0.c3))));
SELECT DISTINCT MAX(rt1.c6) FROM rt1, t0 WHERE (((LOWER(((rt1.c4)&(t0.c3))))AND(ABS(CASE WHEN rt1.c4 THEN t0.c0 WHEN rt1.c2 THEN t0.c1 ELSE 0.8248085226934123 END)))) INTERSECT SELECT DISTINCT MAX(rt1.c6) FROM rt1, t0 WHERE ((((t0.c2, t0.c0)) NOT BETWEEN (((+ (rt1.c3)), (NOT (rt1.c4)))) AND ((t0.c4 COLLATE RTRIM, CAST(t0.c2 AS TEXT)))));
SELECT MIN(rt1.c3) FROM rt1 WHERE ((((((((((rt1.c5, rt1.c6))>((x'', rt1.c1))))OR(((((rt1.c2)OR(rt1.c1)))OR(rt1.c5)))))AND('o')))AND(0.9986991157359759)));
SELECT MIN(rt1.c3) FROM rt1 WHERE ((((((((((rt1.c5, rt1.c6))>((x'', rt1.c1))))OR(((((rt1.c2)OR(rt1.c1)))OR(rt1.c5)))))AND('o')))AND(0.9986991157359759)));
SELECT * FROM t0 WHERE ((t0.c2 IN ())) ORDER BY ((t0.c1)&(t0.c0)) COLLATE NOCASE  NULLS LAST, ((((((((t0.c3)AND(t0.c1)))AND(0.7666614709569044)))AND((((t0.c4, t0.c1, t0.c1, t0.c1))>=((t0.c2, t0.c1, t0.c0, t0.c3))))))AND(t0.c4 COLLATE RTRIM)), CAST((NOT (t0.c1)) AS BLOB) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((t0.c2 IN ())) ORDER BY ((t0.c1)&(t0.c0)) COLLATE NOCASE  NULLS LAST, ((((((((t0.c3)AND(t0.c1)))AND(0.7666614709569044)))AND((((t0.c4, t0.c1, t0.c1, t0.c1))>=((t0.c2, t0.c1, t0.c0, t0.c3))))))AND(t0.c4 COLLATE RTRIM)), CAST((NOT (t0.c1)) AS BLOB) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (CASE CAST(t0.c2 AS REAL)  WHEN ((t0.c3) NOT NULL) THEN 0.6766698228567961 COLLATE BINARY WHEN NULL COLLATE NOCASE THEN 0Xffffffff8e3bd54f WHEN t0.c0 THEN ((t0.c4) BETWEEN ('(粯J?f37#r') AND (t0.c3)) WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c0)) THEN CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c3 THEN t0.c3 END WHEN CASE t0.c0  WHEN t0.c3 THEN t0.c3 WHEN t0.c2 THEN t0.c4 END THEN '-469197563' END) ORDER BY ((t0.c1)&(t0.c0)) COLLATE NOCASE  NULLS LAST, ((((((((t0.c3)AND(t0.c1)))AND(0.7666614709569044)))AND((((t0.c4, t0.c1, t0.c1, t0.c1))>=((t0.c2, t0.c1, t0.c0, t0.c3))))))AND(t0.c4 COLLATE RTRIM)), CAST((NOT (t0.c1)) AS BLOB) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE ((t0.c2 IN ())) ORDER BY ((t0.c1)&(t0.c0)) COLLATE NOCASE  NULLS LAST, ((((((((t0.c3)AND(t0.c1)))AND(0.7666614709569044)))AND((((t0.c4, t0.c1, t0.c1, t0.c1))>=((t0.c2, t0.c1, t0.c0, t0.c3))))))AND(t0.c4 COLLATE RTRIM)), CAST((NOT (t0.c1)) AS BLOB) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((t0.c2 IN ())) ORDER BY ((t0.c1)&(t0.c0)) COLLATE NOCASE  NULLS LAST, ((((((((t0.c3)AND(t0.c1)))AND(0.7666614709569044)))AND((((t0.c4, t0.c1, t0.c1, t0.c1))>=((t0.c2, t0.c1, t0.c0, t0.c3))))))AND(t0.c4 COLLATE RTRIM)), CAST((NOT (t0.c1)) AS BLOB) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (CASE CAST(t0.c2 AS REAL)  WHEN ((t0.c3) NOT NULL) THEN 0.6766698228567961 COLLATE BINARY WHEN NULL COLLATE NOCASE THEN 0Xffffffff8e3bd54f WHEN t0.c0 THEN ((t0.c4) BETWEEN ('(粯J?f37#r') AND (t0.c3)) WHEN ((t0.c1) BETWEEN (t0.c4) AND (t0.c0)) THEN CASE WHEN t0.c3 THEN t0.c4 WHEN t0.c3 THEN t0.c3 END WHEN CASE t0.c0  WHEN t0.c3 THEN t0.c3 WHEN t0.c2 THEN t0.c4 END THEN '-469197563' END) ORDER BY ((t0.c1)&(t0.c0)) COLLATE NOCASE  NULLS LAST, ((((((((t0.c3)AND(t0.c1)))AND(0.7666614709569044)))AND((((t0.c4, t0.c1, t0.c1, t0.c1))>=((t0.c2, t0.c1, t0.c0, t0.c3))))))AND(t0.c4 COLLATE RTRIM)), CAST((NOT (t0.c1)) AS BLOB) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (x'') ORDER BY CASE WHEN ((t0.c4) BETWEEN (t0.c0) AND (t0.c3)) THEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) WHEN ((((((((t0.c0)OR(t0.c3)))AND(t0.c2)))AND(t0.c4)))AND(t0.c2)) THEN ((t0.c4)GLOB(t0.c2)) WHEN t0.c0 THEN (+ (t0.c0)) END, (+ (((t0.c1)>(t0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (x'') ORDER BY CASE WHEN ((t0.c4) BETWEEN (t0.c0) AND (t0.c3)) THEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) WHEN ((((((((t0.c0)OR(t0.c3)))AND(t0.c2)))AND(t0.c4)))AND(t0.c2)) THEN ((t0.c4)GLOB(t0.c2)) WHEN t0.c0 THEN (+ (t0.c0)) END, (+ (((t0.c1)>(t0.c2)))) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL * FROM t0 WHERE (((CAST(t0.c1 AS REAL))!=(CHAR(t0.c0, t0.c0)))) ORDER BY CASE WHEN ((t0.c4) BETWEEN (t0.c0) AND (t0.c3)) THEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) WHEN ((((((((t0.c0)OR(t0.c3)))AND(t0.c2)))AND(t0.c4)))AND(t0.c2)) THEN ((t0.c4)GLOB(t0.c2)) WHEN t0.c0 THEN (+ (t0.c0)) END, (+ (((t0.c1)>(t0.c2)))) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM t0 WHERE (x'') ORDER BY CASE WHEN ((t0.c4) BETWEEN (t0.c0) AND (t0.c3)) THEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) WHEN ((((((((t0.c0)OR(t0.c3)))AND(t0.c2)))AND(t0.c4)))AND(t0.c2)) THEN ((t0.c4)GLOB(t0.c2)) WHEN t0.c0 THEN (+ (t0.c0)) END, (+ (((t0.c1)>(t0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (x'') ORDER BY CASE WHEN ((t0.c4) BETWEEN (t0.c0) AND (t0.c3)) THEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) WHEN ((((((((t0.c0)OR(t0.c3)))AND(t0.c2)))AND(t0.c4)))AND(t0.c2)) THEN ((t0.c4)GLOB(t0.c2)) WHEN t0.c0 THEN (+ (t0.c0)) END, (+ (((t0.c1)>(t0.c2)))) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL * FROM t0 WHERE (((CAST(t0.c1 AS REAL))!=(CHAR(t0.c0, t0.c0)))) ORDER BY CASE WHEN ((t0.c4) BETWEEN (t0.c0) AND (t0.c3)) THEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) WHEN ((((((((t0.c0)OR(t0.c3)))AND(t0.c2)))AND(t0.c4)))AND(t0.c2)) THEN ((t0.c4)GLOB(t0.c2)) WHEN t0.c0 THEN (+ (t0.c0)) END, (+ (((t0.c1)>(t0.c2)))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL MIN(t0.c3) FROM rt1 CROSS JOIN t0 ON json_type(x'') WHERE ((- (((t0.c4)AND(NULL)))));
SELECT DISTINCT MIN(t0.c3) FROM rt1 CROSS JOIN t0 ON json_type(x'') WHERE ((- (((t0.c4)AND(NULL)))));
SELECT COUNT(*) FROM t0 WHERE (CASE CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END  WHEN t0.c2 THEN UPPER(DISTINCT t0.c2) ELSE ((t0.c0) NOT NULL) END);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CASE CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END  WHEN t0.c2 THEN UPPER(DISTINCT t0.c2) ELSE ((t0.c0) NOT NULL) END)AND(x'cd'))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((NOT (CASE t0.c4  WHEN t0.c0 THEN t0.c1 WHEN '-h}T}MK' THEN t0.c2 WHEN t0.c0 THEN t0.c4 WHEN t0.c4 THEN t0.c1 ELSE t0.c1 END))) LIMIT 0;
SELECT * FROM rt1, t0 WHERE (((LOWER(DISTINCT rt1.c3)) BETWEEN (((t0.c1) BETWEEN (t0.c1) AND (t0.c2))) AND (((((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c2)))OR(NULL)))AND(rt1.c5)))AND(t0.c3)))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((LOWER(DISTINCT rt1.c3)) BETWEEN (((t0.c1) BETWEEN (t0.c1) AND (t0.c2))) AND (((((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c2)))OR(NULL)))AND(rt1.c5)))AND(t0.c3)))))AND(0.8672328715593643))) ORDER BY ((CAST(rt1.c6 AS BLOB))OR(CAST(t0.c2 AS REAL))), (NOT (CASE rt1.c6  WHEN rt1.c4 THEN rt1.c3 WHEN 0.18598264017641553 THEN rt1.c0 WHEN rt1.c4 THEN t0.c1 END))  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (((LOWER(DISTINCT rt1.c3)) BETWEEN (((t0.c1) BETWEEN (t0.c1) AND (t0.c2))) AND (((((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c2)))OR(NULL)))AND(rt1.c5)))AND(t0.c3)))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((LOWER(DISTINCT rt1.c3)) BETWEEN (((t0.c1) BETWEEN (t0.c1) AND (t0.c2))) AND (((((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c2)))OR(NULL)))AND(rt1.c5)))AND(t0.c3)))))AND(0.8672328715593643))) ORDER BY ((CAST(rt1.c6 AS BLOB))OR(CAST(t0.c2 AS REAL))), (NOT (CASE rt1.c6  WHEN rt1.c4 THEN rt1.c3 WHEN 0.18598264017641553 THEN rt1.c0 WHEN rt1.c4 THEN t0.c1 END))  NULLS LAST;
SELECT ALL MIN(rt1.c3) FROM rt1, t0 WHERE ((((t0.c4, rt1.c1, rt1.c2)) NOT BETWEEN ((((t0.c0) IS TRUE), DATE(t0.c4, rt1.c1, rt1.c2, t0.c1, rt1.c0, rt1.c0), CASE WHEN '1116725577' THEN t0.c2 WHEN rt1.c6 THEN t0.c4 WHEN rt1.c4 THEN t0.c3 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN rt1.c3 ELSE rt1.c0 END)) AND ((((((t0.c4)OR(rt1.c4)))AND(rt1.c0)), ((t0.c1)-(rt1.c3)), (rt1.c3 IN (rt1.c0))))));
SELECT MIN(rt1.c3) FROM rt1, t0 WHERE ((((((t0.c4, rt1.c1, rt1.c2)) NOT BETWEEN ((((t0.c0) IS TRUE), DATE(t0.c4, rt1.c1, rt1.c2, t0.c1, rt1.c0, rt1.c0), CASE WHEN '1116725577' THEN t0.c2 WHEN rt1.c6 THEN t0.c4 WHEN rt1.c4 THEN t0.c3 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN rt1.c3 ELSE rt1.c0 END)) AND ((((((t0.c4)OR(rt1.c4)))AND(rt1.c0)), ((t0.c1)-(rt1.c3)), (rt1.c3 IN (rt1.c0))))))AND(CAST(rt1.c0 AS INTEGER)))) ORDER BY CAST(rt1.c3 AS BLOB) ASC, (LIKELIHOOD(rt1.c1, rt1.c6) IN (CAST(t0.c2 AS BLOB), (- (rt1.c3)))) ASC  NULLS FIRST, ((((((CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END)OR(((rt1.c0)!=(t0.c2)))))OR((+ (rt1.c1)))))AND(((rt1.c4) ISNULL))) ASC  NULLS FIRST LIMIT 0X4 INTERSECT SELECT ALL MIN(rt1.c3) FROM rt1, t0 WHERE ((+ (LOWER(rt1.c2)))) ORDER BY CAST(rt1.c3 AS BLOB) ASC, (LIKELIHOOD(rt1.c1, rt1.c6) IN (CAST(t0.c2 AS BLOB), (- (rt1.c3)))) ASC  NULLS FIRST, ((((((CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 END)OR(((rt1.c0)<>(t0.c2)))))OR((+ (rt1.c1)))))AND(((rt1.c4) ISNULL))) ASC  NULLS FIRST LIMIT 4;
SELECT * FROM rt1, t0 WHERE ((((t0.c3 IN (rt1.c4))) IS TRUE)) ORDER BY 0.7179479712691657 DESC  NULLS FIRST, (((rt1.c4 IN ()))<(((t0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2)))) ASC, ((((t0.c4) BETWEEN (rt1.c5) AND (t0.c1))) IS FALSE) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((t0.c3 IN (rt1.c4))) IS TRUE)) ORDER BY ((rt1.c5 COLLATE NOCASE)-(CAST(0.03652536089070024 AS REAL)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c2)LIKE(rt1.c1))))!=((((t0.c1) NOTNULL))))) ORDER BY ((rt1.c5 COLLATE NOCASE)-(CAST(0.03652536089070024 AS REAL)))  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ((((t0.c3 IN (rt1.c4))) IS TRUE)) ORDER BY 0.7179479712691657 DESC  NULLS FIRST, (((rt1.c4 IN ()))<(((t0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2)))) ASC, ((((t0.c4) BETWEEN (rt1.c5) AND (t0.c1))) IS FALSE) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((t0.c3 IN (rt1.c4))) IS TRUE)) ORDER BY ((rt1.c5 COLLATE NOCASE)-(CAST(0.03652536089070024 AS REAL)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c2)LIKE(rt1.c1))))!=((((t0.c1) NOTNULL))))) ORDER BY ((rt1.c5 COLLATE NOCASE)-(CAST(0.03652536089070024 AS REAL)))  NULLS FIRST;
SELECT ALL MAX(rt1.c2) FROM t0, rt1 WHERE ((((rt1.c6)) NOT BETWEEN ((((rt1.c6)<(t0.c4)))) AND ((((((((rt1.c0)AND(rt1.c5)))AND(t0.c3)))OR(rt1.c4)))))) ORDER BY ((((rt1.c5) NOT BETWEEN (t0.c4) AND (t0.c3))) BETWEEN (((((t0.c3)OR(rt1.c0)))OR(rt1.c4))) AND (((((rt1.c5)AND(t0.c0)))AND(t0.c0))))  NULLS FIRST;
SELECT ALL MAX(rt1.c2) FROM t0, rt1 WHERE ((((rt1.c6)) NOT BETWEEN ((((rt1.c6)!=(t0.c4)))) AND ((((((((rt1.c0)AND(rt1.c5)))AND(t0.c3)))OR(rt1.c4)))))) ORDER BY ((((rt1.c5) NOT BETWEEN (t0.c4) AND (t0.c3))) BETWEEN (((((t0.c3)OR(rt1.c0)))OR(rt1.c4))) AND (((((rt1.c5)AND(t0.c0)))AND(t0.c0))))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT ALL MAX(rt1.c2) FROM t0, rt1 WHERE (((rt1.c1 IN (rt1.c1)) IN ())) ORDER BY ((((rt1.c5) NOT BETWEEN (t0.c4) AND (t0.c3))) BETWEEN (((((t0.c3)OR(rt1.c0)))OR(rt1.c4))) AND (((((rt1.c5)AND(t0.c0)))AND(t0.c0))))  NULLS FIRST LIMIT 0X0;
SELECT MAX(rt1.c3) FROM rt1 WHERE (CASE json_array_length(rt1.c1)  WHEN x'' THEN 0.9798710491429612 WHEN ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)) THEN ((0.21183719898669884)+(rt1.c2)) WHEN (((rt1.c2, rt1.c5, rt1.c2, rt1.c3)) BETWEEN ((rt1.c4, rt1.c5, rt1.c4, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c3, rt1.c2))) THEN ((((((((rt1.c4)OR(rt1.c1)))AND(rt1.c6)))AND(rt1.c1)))OR(rt1.c6)) WHEN rt1.c5 COLLATE NOCASE THEN (NOT (rt1.c3)) WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c5)IS(rt1.c5)) THEN CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c6 THEN rt1.c3 END ELSE ((((((rt1.c6)AND(rt1.c2)))AND(rt1.c4)))OR(rt1.c4)) END) ORDER BY (((rt1.c2, rt1.c4, rt1.c2)) NOT BETWEEN ((((rt1.c5) NOTNULL), NULL, CASE NULL  WHEN NULL THEN rt1.c2 END)) AND ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c3 END, CAST(rt1.c6 AS TEXT), rt1.c0 COLLATE RTRIM)))  NULLS LAST, (((rt1.c2)-(rt1.c2)) IN ()) ASC;
SELECT ALL MAX(rt1.c3) FROM rt1 WHERE (CASE json_array_length(rt1.c1)  WHEN x'' THEN 0.9798710491429612 WHEN ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)) THEN ((0.21183719898669884)+(rt1.c2)) WHEN (((rt1.c2, rt1.c5, rt1.c2, rt1.c3)) BETWEEN ((rt1.c4, rt1.c5, rt1.c4, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c3, rt1.c2))) THEN ((((((((rt1.c4)OR(rt1.c1)))AND(rt1.c6)))AND(rt1.c1)))OR(rt1.c6)) WHEN rt1.c5 COLLATE NOCASE THEN (NOT (rt1.c3)) WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c5)IS(rt1.c5)) THEN CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c6 THEN rt1.c3 END ELSE ((((((rt1.c6)AND(rt1.c2)))AND(rt1.c4)))OR(rt1.c4)) END) ORDER BY (((rt1.c2, rt1.c4, rt1.c2)) NOT BETWEEN ((((rt1.c5) NOTNULL), NULL, CASE NULL  WHEN NULL THEN rt1.c2 END)) AND ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c3 END, CAST(rt1.c6 AS TEXT), rt1.c0 COLLATE RTRIM)))  NULLS LAST, (((rt1.c2)-(rt1.c2)) IN ()) ASC LIMIT 1;
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY ((((rt1.c3)IS NOT(rt1.c5))) BETWEEN (rt1.c1) AND ((- (rt1.c2))))  NULLS LAST, (- (rt1.c4)) COLLATE RTRIM  NULLS FIRST, rt1.c3 ASC;
SELECT DISTINCT * FROM rt1 WHERE (NULL) ORDER BY x'd91e'  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (IFNULL(((rt1.c4) ISNULL), rt1.c6 COLLATE NOCASE)) ORDER BY x'd91e'  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY ((((rt1.c3)IS NOT(rt1.c5))) BETWEEN (rt1.c1) AND ((- (rt1.c2))))  NULLS LAST, (- (rt1.c4)) COLLATE RTRIM  NULLS FIRST, rt1.c3 ASC;
SELECT DISTINCT * FROM rt1 WHERE (NULL) ORDER BY x'd91e'  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (IFNULL(((rt1.c4) ISNULL), rt1.c6 COLLATE NOCASE)) ORDER BY x'd91e'  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) ISNULL))LIKE(((((rt1.c2)OR(0.5065987780379918)))AND(rt1.c0)))));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((rt1.c0) ISNULL))LIKE(((((rt1.c2)OR(0.5065987780379918)))AND(rt1.c0))))) ORDER BY ((((((rt1.c0)OR(NULL)))OR(rt1.c5)))-(NULL)) DESC  NULLS LAST, 0.6061878276481447 DESC LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((((rt1.c3)OR(NULL)))OR(rt1.c4)))>=(((rt1.c2) NOTNULL)))) ORDER BY ((((((rt1.c0)OR(NULL)))OR(rt1.c5)))-(NULL)) DESC  NULLS LAST, 0.6061878276481447 DESC LIMIT 0;
SELECT ALL MIN(rt1.c3) FROM t0, rt1 WHERE ((((((rt1.c4) NOTNULL), (((rt1.c4))>((rt1.c4)))))!=(((rt1.c4 IN (rt1.c6, rt1.c0)), ((t0.c2) NOT BETWEEN ('o偦[') AND (t0.c3)))))) ORDER BY rt1.c0 DESC  NULLS FIRST;
SELECT DISTINCT MIN(rt1.c3) FROM t0, rt1 WHERE ((((((((rt1.c4) NOTNULL), (((rt1.c4))>((rt1.c4)))))<(((rt1.c4 IN (rt1.c6)), ((t0.c2) NOT BETWEEN ('o偦[') AND (t0.c3))))))AND((~ (((rt1.c0) NOT BETWEEN (t0.c4) AND (t0.c2))))))) ORDER BY ((((((((((((t0.c4)OR(((rt1.c3)>=(rt1.c0)))))OR('X')))AND((t0.c3 IN (t0.c2, rt1.c3)))))AND(t0.c2)))OR(CASE t0.c4  WHEN rt1.c1 THEN t0.c1 WHEN rt1.c1 THEN rt1.c3 ELSE t0.c0 END)))AND(((((t0.c4)OR(t0.c3)))OR(0.3587785563272279)))) DESC, (((((((((t0.c4 IN ()))AND(((NULL)>>(t0.c1)))))OR((rt1.c2 IN (t0.c0)))))AND(CAST(t0.c3 AS REAL))))OR(rt1.c5)) ASC INTERSECT SELECT DISTINCT MIN(rt1.c3) FROM t0, rt1 WHERE (((((((((rt1.c2)OR(rt1.c5)))OR(((rt1.c0) BETWEEN (t0.c0) AND (t0.c2)))))OR(((t0.c0)+(rt1.c4)))))OR(t0.c2 COLLATE NOCASE))) ORDER BY ((((((((((((t0.c4)OR(((rt1.c3)>=(rt1.c0)))))OR('X')))AND((t0.c3 IN (t0.c2, rt1.c3)))))AND(t0.c2)))OR(CASE t0.c4  WHEN rt1.c1 THEN t0.c1 WHEN rt1.c1 THEN rt1.c3 ELSE t0.c0 END)))AND(((((t0.c4)OR(t0.c3)))OR(0.3587785563272279)))) DESC, (((((((((t0.c4 IN ()))AND(((NULL)>>(t0.c1)))))OR((rt1.c2 IN (t0.c0)))))AND(CAST(t0.c3 AS REAL))))OR(rt1.c5)) ASC;
SELECT ALL * FROM t0 WHERE (((((((((((t0.c2)||(t0.c3)))OR((((t0.c4, t0.c2, t0.c1, 0.7622751321659875))=((NULL, t0.c1, '1799702489', t0.c1))))))AND((((t0.c1, t0.c4)) BETWEEN ((t0.c1, t0.c4)) AND ((t0.c2, t0.c1))))))OR(0Xffffffffe0645c38)))AND(((((((((t0.c2)OR('1967614267')))AND(0xffffffffd098208b)))AND(t0.c4)))AND(t0.c4)))));
SELECT DISTINCT * FROM t0 WHERE (((((((((((((t0.c2)||(t0.c3)))OR((((t0.c4, t0.c2, t0.c1, 0.7622751321659875))=((NULL, t0.c1, '1799702489', t0.c1))))))AND((((t0.c1, t0.c4)) BETWEEN ((t0.c1, t0.c4)) AND ((t0.c2, t0.c1))))))OR(0xffffffffe0645c38)))AND(((((((((t0.c2)OR('1967614267')))AND(-795336565)))AND(t0.c4)))AND(t0.c4)))))AND((t0.c4 IN (((t0.c0)IS(t0.c2))))))) ORDER BY (((+ (t0.c4))) BETWEEN (((t0.c2)IS(t0.c0))) AND (0.8230724333683757)) DESC LIMIT 0;
SELECT ALL * FROM t0 WHERE (((((((((((t0.c2)||(t0.c3)))OR((((t0.c4, t0.c2, t0.c1, 0.7622751321659875))=((NULL, t0.c1, '1799702489', t0.c1))))))AND((((t0.c1, t0.c4)) BETWEEN ((t0.c1, t0.c4)) AND ((t0.c2, t0.c1))))))OR(0Xffffffffe0645c38)))AND(((((((((t0.c2)OR('1967614267')))AND(0xffffffffd098208b)))AND(t0.c4)))AND(t0.c4)))));
SELECT DISTINCT * FROM t0 WHERE (((((((((((((t0.c2)||(t0.c3)))OR((((t0.c4, t0.c2, t0.c1, 0.7622751321659875))=((NULL, t0.c1, '1799702489', t0.c1))))))AND((((t0.c1, t0.c4)) BETWEEN ((t0.c1, t0.c4)) AND ((t0.c2, t0.c1))))))OR(0xffffffffe0645c38)))AND(((((((((t0.c2)OR('1967614267')))AND(-795336565)))AND(t0.c4)))AND(t0.c4)))))AND((t0.c4 IN (((t0.c0)IS(t0.c2))))))) ORDER BY (((+ (t0.c4))) BETWEEN (((t0.c2)IS(t0.c0))) AND (0.8230724333683757)) DESC LIMIT 0;
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY (- ((((rt1.c6))<((rt1.c5))))), CASE WHEN rt1.c5 COLLATE BINARY THEN ((((rt1.c6)OR(rt1.c6)))AND(rt1.c1)) ELSE ((((rt1.c6)AND(rt1.c6)))OR(rt1.c2)) END, ((((((rt1.c4)OR(((NULL)!=(rt1.c2)))))AND(ROUND(rt1.c1, rt1.c5))))AND(((rt1.c6)IS NOT(rt1.c0))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((rt1.c0)AND(((((rt1.c1))>((rt1.c2))) IN (x'5e2d0c'))))) ORDER BY (- ((((rt1.c6))<((rt1.c5))))), CASE WHEN rt1.c5 COLLATE BINARY THEN ((((rt1.c6)OR(rt1.c6)))AND(rt1.c1)) ELSE ((((rt1.c6)AND(rt1.c6)))OR(rt1.c2)) END, ((((((rt1.c4)OR(((NULL)<>(rt1.c2)))))AND(ROUND(rt1.c1, rt1.c5))))AND(((rt1.c6)IS NOT(rt1.c0))))  NULLS FIRST;
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY (- ((((rt1.c6))<((rt1.c5))))), CASE WHEN rt1.c5 COLLATE BINARY THEN ((((rt1.c6)OR(rt1.c6)))AND(rt1.c1)) ELSE ((((rt1.c6)AND(rt1.c6)))OR(rt1.c2)) END, ((((((rt1.c4)OR(((NULL)!=(rt1.c2)))))AND(ROUND(rt1.c1, rt1.c5))))AND(((rt1.c6)IS NOT(rt1.c0))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((rt1.c0)AND(((((rt1.c1))>((rt1.c2))) IN (x'5e2d0c'))))) ORDER BY (- ((((rt1.c6))<((rt1.c5))))), CASE WHEN rt1.c5 COLLATE BINARY THEN ((((rt1.c6)OR(rt1.c6)))AND(rt1.c1)) ELSE ((((rt1.c6)AND(rt1.c6)))OR(rt1.c2)) END, ((((((rt1.c4)OR(((NULL)<>(rt1.c2)))))AND(ROUND(rt1.c1, rt1.c5))))AND(((rt1.c6)IS NOT(rt1.c0))))  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (rt1.c1) ORDER BY ((((((((((((rt1.c2)AND(t0.c0)))AND(rt1.c6)))AND(t0.c4)))OR(t0.c1)))OR(rt1.c5))) BETWEEN (((((t0.c0)AND(rt1.c6)))AND(t0.c3))) AND (x''))  NULLS LAST, ((((((((((((CAST(x'' AS TEXT))AND(((rt1.c6)||(rt1.c6)))))OR(((rt1.c5) NOTNULL))))AND((rt1.c5 IN (rt1.c1, t0.c2)))))OR(((rt1.c2) NOT NULL))))OR(((t0.c3)&(rt1.c2)))))OR(CASE 1532249974  WHEN rt1.c2 THEN t0.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN rt1.c0 END)) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c1)AND(((+ (t0.c1)) IN (((((((((((((rt1.c5)OR(rt1.c3)))OR(t0.c0)))AND(rt1.c2)))AND(rt1.c4)))OR('-2002543342')))AND(rt1.c5))))))) ORDER BY ((((((((((((rt1.c2)AND(t0.c0)))AND(rt1.c6)))AND(t0.c4)))OR(t0.c1)))OR(rt1.c5))) BETWEEN (((((t0.c0)AND(rt1.c6)))AND(t0.c3))) AND (x''))  NULLS LAST, ((((((((((((CAST(x'' AS TEXT))AND(((rt1.c6)||(rt1.c6)))))OR(((rt1.c5) NOTNULL))))AND((rt1.c5 IN (rt1.c1, t0.c2)))))OR(((rt1.c2) NOT NULL))))OR(((t0.c3)&(rt1.c2)))))OR(CASE 1532249974  WHEN rt1.c2 THEN t0.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN rt1.c0 END)) ASC  NULLS FIRST LIMIT 0x3;
SELECT * FROM t0, rt1 WHERE (rt1.c1) ORDER BY ((((((((((((rt1.c2)AND(t0.c0)))AND(rt1.c6)))AND(t0.c4)))OR(t0.c1)))OR(rt1.c5))) BETWEEN (((((t0.c0)AND(rt1.c6)))AND(t0.c3))) AND (x''))  NULLS LAST, ((((((((((((CAST(x'' AS TEXT))AND(((rt1.c6)||(rt1.c6)))))OR(((rt1.c5) NOTNULL))))AND((rt1.c5 IN (rt1.c1, t0.c2)))))OR(((rt1.c2) NOT NULL))))OR(((t0.c3)&(rt1.c2)))))OR(CASE 1532249974  WHEN rt1.c2 THEN t0.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN rt1.c0 END)) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c1)AND(((+ (t0.c1)) IN (((((((((((((rt1.c5)OR(rt1.c3)))OR(t0.c0)))AND(rt1.c2)))AND(rt1.c4)))OR('-2002543342')))AND(rt1.c5))))))) ORDER BY ((((((((((((rt1.c2)AND(t0.c0)))AND(rt1.c6)))AND(t0.c4)))OR(t0.c1)))OR(rt1.c5))) BETWEEN (((((t0.c0)AND(rt1.c6)))AND(t0.c3))) AND (x''))  NULLS LAST, ((((((((((((CAST(x'' AS TEXT))AND(((rt1.c6)||(rt1.c6)))))OR(((rt1.c5) NOTNULL))))AND((rt1.c5 IN (rt1.c1, t0.c2)))))OR(((rt1.c2) NOT NULL))))OR(((t0.c3)&(rt1.c2)))))OR(CASE 1532249974  WHEN rt1.c2 THEN t0.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN rt1.c0 END)) ASC  NULLS FIRST LIMIT 0x3;
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((('2')&(t0.c0)))) AND ((rt1.c2))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((('2')&(t0.c0)))) AND ((rt1.c2))));
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((('2')&(t0.c0)))) AND ((rt1.c2))));
SELECT DISTINCT * FROM t0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((('2')&(t0.c0)))) AND ((rt1.c2))));
SELECT ALL MAX(rt1.c0) FROM rt1 WHERE (((((((rt1.c6)AND(rt1.c6)))AND(rt1.c1)))LIKE((((rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c4, rt1.c2)) AND ((rt1.c6, rt1.c5)))))) ORDER BY CASE ((NULL) IS TRUE)  WHEN ((rt1.c5)*(rt1.c0)) THEN CAST(rt1.c5 AS BLOB) END;
SELECT DISTINCT MAX(rt1.c0) FROM rt1 WHERE (((((((((rt1.c6)AND(rt1.c6)))AND(rt1.c1)))LIKE((((rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c4, rt1.c2)) AND ((rt1.c6, rt1.c5))))))AND(rt1.c1))) ORDER BY CASE ((NULL) IS TRUE)  WHEN ((rt1.c5)*(rt1.c0)) THEN CAST(rt1.c5 AS BLOB) END LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt1.c0) FROM rt1 WHERE (CASE ((rt1.c3)>(rt1.c2))  WHEN 0.022023077123497936 COLLATE NOCASE THEN rt1.c3 COLLATE BINARY WHEN ((((rt1.c3)AND(rt1.c0)))AND(rt1.c5)) THEN rt1.c5 COLLATE BINARY WHEN (rt1.c3 IN ()) THEN ((rt1.c6) NOT NULL) ELSE rt1.c5 COLLATE RTRIM END) ORDER BY CASE ((NULL) IS TRUE)  WHEN ((rt1.c5)*(rt1.c0)) THEN CAST(rt1.c5 AS BLOB) END LIMIT 0X0;
SELECT MIN(rt1.c3) FROM rt1 WHERE (((rt1.c5 IN (rt1.c1)) IN (rt1.c2 COLLATE RTRIM)));
SELECT ALL MIN(rt1.c3) FROM rt1 WHERE (((((rt1.c5 IN (rt1.c1)) IN (rt1.c2 COLLATE RTRIM)))AND((((- (rt1.c4))) IS FALSE)))) ORDER BY ((rt1.c1)=(rt1.c6))  NULLS LAST;
SELECT ALL MIN(rt1.c2) FROM rt1 WHERE (rt1.c1);
SELECT DISTINCT MIN(rt1.c2) FROM rt1 WHERE (rt1.c1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c6 COLLATE BINARY) ORDER BY ((((((x'')OR(CAST(rt1.c0 AS REAL))))OR(NULL)))AND((((rt1.c4, rt1.c5, rt1.c3))<((rt1.c4, rt1.c2, rt1.c0))))) DESC  NULLS FIRST, rt1.c3  NULLS LAST, (((NOT (rt1.c0)))-(rt1.c4 COLLATE RTRIM)), CAST((- (rt1.c3)) AS TEXT)  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (rt1.c6 COLLATE BINARY) ORDER BY ((((((x'')OR(CAST(rt1.c0 AS REAL))))OR(NULL)))AND((((rt1.c4, rt1.c5, rt1.c3))<((rt1.c4, rt1.c2, rt1.c0))))) DESC  NULLS FIRST, rt1.c3  NULLS LAST, (((NOT (rt1.c0)))-(rt1.c4 COLLATE RTRIM)), CAST((- (rt1.c3)) AS TEXT)  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((TRIM(DISTINCT rt1.c4, rt1.c4)) NOT NULL)) ORDER BY ((((((x'')OR(CAST(rt1.c0 AS REAL))))OR(NULL)))AND((((rt1.c4, rt1.c5, rt1.c3))<((rt1.c4, rt1.c2, rt1.c0))))) DESC  NULLS FIRST, rt1.c3  NULLS LAST, (((NOT (rt1.c0)))-(rt1.c4 COLLATE RTRIM)), CAST((- (rt1.c3)) AS TEXT)  NULLS FIRST;
SELECT MIN(rt1.c0) FROM rt1 CROSS JOIN t0 ON (~ (rt1.c6)) COLLATE BINARY WHERE (((((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c4)))>(CASE WHEN t0.c3 THEN rt1.c4 WHEN rt1.c4 THEN t0.c1 END))) ORDER BY ((((rt1.c4) NOT BETWEEN (rt1.c6) AND (t0.c2)))GLOB((((rt1.c6, t0.c2, t0.c0)) NOT BETWEEN ((rt1.c4, rt1.c1, rt1.c1)) AND ((NULL, rt1.c4, x'cf'))))), ((((((((((((t0.c1)OR(rt1.c2)))AND(rt1.c6)))AND('-2065710970')))OR(rt1.c0)))OR(rt1.c3)))<=(((rt1.c4) NOT NULL)))  NULLS LAST;
SELECT MIN(rt1.c0) FROM rt1 CROSS JOIN t0 ON (~ (rt1.c6)) COLLATE BINARY WHERE (((((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c4)))>(CASE WHEN t0.c3 THEN rt1.c4 WHEN rt1.c4 THEN t0.c1 END))) ORDER BY ((((rt1.c6) ISNULL)) BETWEEN (COALESCE(t0.c0, rt1.c1)) AND (((((((t0.c1)OR(rt1.c2)))AND(rt1.c5)))OR(rt1.c3)))) DESC  NULLS LAST LIMIT 0x0;
SELECT MAX(rt1.c2) FROM rt1 WHERE (RTRIM(rt1.c6 COLLATE BINARY)) ORDER BY rt1.c0 COLLATE BINARY  NULLS FIRST, ((((rt1.c3)AND(rt1.c6)))LIKE((~ (rt1.c0))));
SELECT ALL MAX(rt1.c2) FROM rt1 WHERE (RTRIM(rt1.c6 COLLATE BINARY)) ORDER BY rt1.c0 COLLATE BINARY  NULLS FIRST, ((((rt1.c3)AND(rt1.c6)))LIKE((~ (rt1.c0))));
SELECT * FROM t0, rt1 WHERE ((+ (((rt1.c5)LIKE(rt1.c3))))) ORDER BY ((((t0.c3) BETWEEN (t0.c1) AND (rt1.c1))) NOT BETWEEN (CASE WHEN t0.c3 THEN rt1.c0 ELSE rt1.c6 END) AND ((t0.c0 IN ()))), CASE ((t0.c0)*(rt1.c1))  WHEN ((rt1.c0) BETWEEN (rt1.c6) AND (t0.c3)) THEN rt1.c2 END  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((+ (((rt1.c5)LIKE(rt1.c3))))) ORDER BY ((((t0.c3) BETWEEN (t0.c1) AND (rt1.c1))) NOT BETWEEN (CASE WHEN t0.c3 THEN rt1.c0 ELSE rt1.c6 END) AND ((t0.c0 IN ()))), CASE ((t0.c0)*(rt1.c1))  WHEN ((rt1.c0) BETWEEN (rt1.c6) AND (t0.c3)) THEN rt1.c2 END  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE ((+ (((rt1.c5)LIKE(rt1.c3))))) ORDER BY ((((t0.c3) BETWEEN (t0.c1) AND (rt1.c1))) NOT BETWEEN (CASE WHEN t0.c3 THEN rt1.c0 ELSE rt1.c6 END) AND ((t0.c0 IN ()))), CASE ((t0.c0)*(rt1.c1))  WHEN ((rt1.c0) BETWEEN (rt1.c6) AND (t0.c3)) THEN rt1.c2 END  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((+ (((rt1.c5)LIKE(rt1.c3))))) ORDER BY ((((t0.c3) BETWEEN (t0.c1) AND (rt1.c1))) NOT BETWEEN (CASE WHEN t0.c3 THEN rt1.c0 ELSE rt1.c6 END) AND ((t0.c0 IN ()))), CASE ((t0.c0)*(rt1.c1))  WHEN ((rt1.c0) BETWEEN (rt1.c6) AND (t0.c3)) THEN rt1.c2 END  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (((((('k]&<Ejn')OR(((((((t0.c1)OR(131760099)))OR(t0.c0)))AND(t0.c0)))))OR(t0.c1)))OR(((t0.c2)AND(t0.c1)))) DESC  NULLS FIRST, (CASE t0.c2  WHEN t0.c3 THEN t0.c2 WHEN t0.c3 THEN t0.c2 END IN (t0.c3, ((t0.c4) NOTNULL), CASE t0.c3  WHEN t0.c4 THEN t0.c3 END)) DESC, t0.c4;
SELECT * FROM t0 WHERE (x'') ORDER BY ((((t0.c1, t0.c4))<((NULL, t0.c0))) IN (CHAR(t0.c0, t0.c2), json_valid(t0.c1))) DESC LIMIT 0X3 INTERSECT SELECT * FROM t0 WHERE ((((- (t0.c3)))=((t0.c3 IN ())))) ORDER BY ((((t0.c1, t0.c4))<((NULL, t0.c0))) IN (CHAR(t0.c0, t0.c2), json_valid(t0.c1))) DESC LIMIT 0X3;
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (((((('k]&<Ejn')OR(((((((t0.c1)OR(131760099)))OR(t0.c0)))AND(t0.c0)))))OR(t0.c1)))OR(((t0.c2)AND(t0.c1)))) DESC  NULLS FIRST, (CASE t0.c2  WHEN t0.c3 THEN t0.c2 WHEN t0.c3 THEN t0.c2 END IN (t0.c3, ((t0.c4) NOTNULL), CASE t0.c3  WHEN t0.c4 THEN t0.c3 END)) DESC, t0.c4;
SELECT * FROM t0 WHERE (x'') ORDER BY ((((t0.c1, t0.c4))<((NULL, t0.c0))) IN (CHAR(t0.c0, t0.c2), json_valid(t0.c1))) DESC LIMIT 0X3 INTERSECT SELECT * FROM t0 WHERE ((((- (t0.c3)))=((t0.c3 IN ())))) ORDER BY ((((t0.c1, t0.c4))<((NULL, t0.c0))) IN (CHAR(t0.c0, t0.c2), json_valid(t0.c1))) DESC LIMIT 0X3;
SELECT * FROM t0 WHERE (((('-560198705')-(t0.c3)) IN (((t0.c1)>=(t0.c4))))) ORDER BY ((((((((((((((t0.c3)OR(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c3)))OR(t0.c1)))OR(t0.c4)))GLOB(((t0.c3)>(t0.c1)))) DESC, 0.9789190505701061 DESC, ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (json_patch(t0.c4, t0.c4)) AND (t0.c0)) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((('-560198705')-(t0.c3)) IN (((t0.c1)>(t0.c4))))) ORDER BY ((((((((((((((t0.c3)OR(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c3)))OR(t0.c1)))OR(t0.c4)))GLOB(((t0.c3)>(t0.c1)))) DESC, 0.9789190505701061 DESC, ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (json_patch(t0.c4, t0.c4)) AND (t0.c0)) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((('-560198705')-(t0.c3)) IN (((t0.c1)>=(t0.c4))))) ORDER BY ((((((((((((((t0.c3)OR(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c3)))OR(t0.c1)))OR(t0.c4)))GLOB(((t0.c3)>(t0.c1)))) DESC, 0.9789190505701061 DESC, ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (json_patch(t0.c4, t0.c4)) AND (t0.c0)) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((('-560198705')-(t0.c3)) IN (((t0.c1)>(t0.c4))))) ORDER BY ((((((((((((((t0.c3)OR(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c3)))OR(t0.c1)))OR(t0.c4)))GLOB(((t0.c3)>(t0.c1)))) DESC, 0.9789190505701061 DESC, ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (json_patch(t0.c4, t0.c4)) AND (t0.c0)) ASC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c6, t0.c1)) NOT BETWEEN ((rt1.c3, t0.c0)) AND ((t0.c3, rt1.c5))) IN (((rt1.c1)AND(t0.c0))))) ORDER BY CAST((- (rt1.c3)) AS INTEGER), ((rtreenode(t0.c4, t0.c3))*(((((((t0.c2)AND(rt1.c5)))AND(rt1.c2)))AND(rt1.c6)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c6, t0.c1)) NOT BETWEEN ((rt1.c3, t0.c0)) AND ((t0.c3, rt1.c5))) IN (((rt1.c1)AND(t0.c0))))) ORDER BY CAST((- (rt1.c3)) AS INTEGER), ((rtreenode(t0.c4, t0.c3))*(((((((t0.c2)AND(rt1.c5)))AND(rt1.c2)))AND(rt1.c6)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c6, t0.c1)) NOT BETWEEN ((rt1.c3, t0.c0)) AND ((t0.c3, rt1.c5))) IN (((rt1.c1)AND(t0.c0))))) ORDER BY CAST((- (rt1.c3)) AS INTEGER), ((rtreenode(t0.c4, t0.c3))*(((((((t0.c2)AND(rt1.c5)))AND(rt1.c2)))AND(rt1.c6)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c6, t0.c1)) NOT BETWEEN ((rt1.c3, t0.c0)) AND ((t0.c3, rt1.c5))) IN (((rt1.c1)AND(t0.c0))))) ORDER BY CAST((- (rt1.c3)) AS INTEGER), ((rtreenode(t0.c4, t0.c3))*(((((((t0.c2)AND(rt1.c5)))AND(rt1.c2)))AND(rt1.c6)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL MIN(t0.c1) FROM t0, rt1 WHERE (CAST((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) AS TEXT));
SELECT ALL MIN(t0.c1) FROM t0, rt1 WHERE (CAST((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) AS TEXT)) INTERSECT SELECT MIN(t0.c1) FROM t0, rt1 WHERE ((((t0.c1)=(rt1.c6)) IN (((t0.c1) NOTNULL), (- (rt1.c6)))));
SELECT * FROM rt1 CROSS JOIN t0 ON (0.9631170960725886 IN ()) COLLATE NOCASE WHERE ((((((t0.c0)<=(t0.c1)), CASE t0.c2  WHEN rt1.c5 THEN t0.c0 WHEN t0.c3 THEN t0.c3 END))<=(((('924252814')IS NOT(rt1.c5)), ((t0.c1)IS(rt1.c3))))));
SELECT * FROM rt1 CROSS JOIN t0 ON (0.9631170960725886 IN ()) COLLATE NOCASE WHERE ((((((((t0.c0)==(t0.c1)), CASE t0.c2  WHEN rt1.c5 THEN t0.c0 WHEN t0.c3 THEN t0.c3 END))<(((('924252814')IS NOT(rt1.c5)), ((t0.c1)IS(rt1.c3))))))AND(((t0.c1 COLLATE NOCASE) IS FALSE))));
SELECT * FROM rt1 CROSS JOIN t0 ON (0.9631170960725886 IN ()) COLLATE NOCASE WHERE ((((((t0.c0)<=(t0.c1)), CASE t0.c2  WHEN rt1.c5 THEN t0.c0 WHEN t0.c3 THEN t0.c3 END))<=(((('924252814')IS NOT(rt1.c5)), ((t0.c1)IS(rt1.c3))))));
SELECT * FROM rt1 CROSS JOIN t0 ON (0.9631170960725886 IN ()) COLLATE NOCASE WHERE ((((((((t0.c0)==(t0.c1)), CASE t0.c2  WHEN rt1.c5 THEN t0.c0 WHEN t0.c3 THEN t0.c3 END))<(((('924252814')IS NOT(rt1.c5)), ((t0.c1)IS(rt1.c3))))))AND(((t0.c1 COLLATE NOCASE) IS FALSE))));
SELECT * FROM t0 WHERE (((((t0.c3)IS(t0.c1)))%(CASE t0.c1  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END))) ORDER BY CASE 0.8103828376075166  WHEN ((t0.c0)%(t0.c4)) THEN (t0.c0 IN ()) WHEN ((t0.c2) ISNULL) THEN x'' ELSE CASE t0.c3  WHEN t0.c1 THEN t0.c4 WHEN t0.c2 THEN '489068276' END END  NULLS LAST, CHAR(((((0.8477320305807522)OR(t0.c4)))OR(t0.c4)))  NULLS LAST, (((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c4)) IN (((t0.c2) BETWEEN (t0.c3) AND (t0.c4)), x'', UPPER(DISTINCT t0.c2)));
SELECT ALL * FROM t0 WHERE (((((((t0.c3)IS(t0.c1)))%(CASE t0.c1  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END)))AND(CAST(LIKELIHOOD(t0.c2, NULL) AS TEXT)))) ORDER BY CAST((- (t0.c4)) AS TEXT) LIMIT 0X1 INTERSECT SELECT * FROM t0 WHERE (((((t0.c2)<<(t0.c4))) IS FALSE)) ORDER BY CAST((- (t0.c4)) AS TEXT) LIMIT 0x1;
SELECT * FROM t0 WHERE (((((t0.c3)IS(t0.c1)))%(CASE t0.c1  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END))) ORDER BY CASE 0.8103828376075166  WHEN ((t0.c0)%(t0.c4)) THEN (t0.c0 IN ()) WHEN ((t0.c2) ISNULL) THEN x'' ELSE CASE t0.c3  WHEN t0.c1 THEN t0.c4 WHEN t0.c2 THEN '489068276' END END  NULLS LAST, CHAR(((((0.8477320305807522)OR(t0.c4)))OR(t0.c4)))  NULLS LAST, (((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c4)) IN (((t0.c2) BETWEEN (t0.c3) AND (t0.c4)), x'', UPPER(DISTINCT t0.c2)));
SELECT ALL * FROM t0 WHERE (((((((t0.c3)IS(t0.c1)))%(CASE t0.c1  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END)))AND(CAST(LIKELIHOOD(t0.c2, NULL) AS TEXT)))) ORDER BY CAST((- (t0.c4)) AS TEXT) LIMIT 0X1 INTERSECT SELECT * FROM t0 WHERE (((((t0.c2)<<(t0.c4))) IS FALSE)) ORDER BY CAST((- (t0.c4)) AS TEXT) LIMIT 0x1;
SELECT ALL * FROM rt1, t0 WHERE (CASE (- (t0.c4))  WHEN (+ (rt1.c0)) THEN ((((((((t0.c3)OR(t0.c3)))OR(rt1.c4)))OR(rt1.c2)))OR(t0.c2)) WHEN x'f0' THEN ((rt1.c0) NOT NULL) END) ORDER BY CAST((- (x'b1a5e2f525')) AS REAL)  NULLS FIRST, CASE WHEN x'' THEN t0.c2 COLLATE NOCASE WHEN ((rt1.c5) ISNULL) THEN (t0.c2 IN ()) ELSE COALESCE(0xffffffffccf7299b, NULL, 1.923174721E9) END DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (CASE (- (t0.c4))  WHEN (+ (rt1.c0)) THEN ((((((((t0.c3)OR(t0.c3)))OR(rt1.c4)))OR(rt1.c2)))OR(t0.c2)) WHEN x'f0' THEN ((rt1.c0) NOT NULL) END) ORDER BY CAST((- (x'b1a5e2f525')) AS REAL)  NULLS FIRST, CASE WHEN x'' THEN t0.c2 COLLATE NOCASE WHEN ((rt1.c5) ISNULL) THEN (t0.c2 IN ()) ELSE COALESCE(-856217189, NULL, 1.923174721E9) END DESC  NULLS FIRST INTERSECT SELECT * FROM rt1, t0 WHERE (((((((((((((rt1.c5)OR(rt1.c4)))AND(t0.c1)))OR(json(t0.c1))))AND((((rt1.c5)) NOT BETWEEN ((rt1.c2)) AND ((t0.c4))))))AND(((((((((((((t0.c2)OR(t0.c4)))AND(rt1.c4)))OR(t0.c0)))OR(rt1.c0)))AND(rt1.c5)))AND(t0.c3)))))OR((rt1.c1 IN ())))) ORDER BY CAST((- (x'b1a5e2f525')) AS REAL)  NULLS FIRST, CASE WHEN x'' THEN t0.c2 COLLATE NOCASE WHEN ((rt1.c5) ISNULL) THEN (t0.c2 IN ()) ELSE COALESCE(-856217189, NULL, 1.923174721E9) END DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (CASE (- (t0.c4))  WHEN (+ (rt1.c0)) THEN ((((((((t0.c3)OR(t0.c3)))OR(rt1.c4)))OR(rt1.c2)))OR(t0.c2)) WHEN x'f0' THEN ((rt1.c0) NOT NULL) END) ORDER BY CAST((- (x'b1a5e2f525')) AS REAL)  NULLS FIRST, CASE WHEN x'' THEN t0.c2 COLLATE NOCASE WHEN ((rt1.c5) ISNULL) THEN (t0.c2 IN ()) ELSE COALESCE(0xffffffffccf7299b, NULL, 1.923174721E9) END DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (CASE (- (t0.c4))  WHEN (+ (rt1.c0)) THEN ((((((((t0.c3)OR(t0.c3)))OR(rt1.c4)))OR(rt1.c2)))OR(t0.c2)) WHEN x'f0' THEN ((rt1.c0) NOT NULL) END) ORDER BY CAST((- (x'b1a5e2f525')) AS REAL)  NULLS FIRST, CASE WHEN x'' THEN t0.c2 COLLATE NOCASE WHEN ((rt1.c5) ISNULL) THEN (t0.c2 IN ()) ELSE COALESCE(-856217189, NULL, 1.923174721E9) END DESC  NULLS FIRST INTERSECT SELECT * FROM rt1, t0 WHERE (((((((((((((rt1.c5)OR(rt1.c4)))AND(t0.c1)))OR(json(t0.c1))))AND((((rt1.c5)) NOT BETWEEN ((rt1.c2)) AND ((t0.c4))))))AND(((((((((((((t0.c2)OR(t0.c4)))AND(rt1.c4)))OR(t0.c0)))OR(rt1.c0)))AND(rt1.c5)))AND(t0.c3)))))OR((rt1.c1 IN ())))) ORDER BY CAST((- (x'b1a5e2f525')) AS REAL)  NULLS FIRST, CASE WHEN x'' THEN t0.c2 COLLATE NOCASE WHEN ((rt1.c5) ISNULL) THEN (t0.c2 IN ()) ELSE COALESCE(-856217189, NULL, 1.923174721E9) END DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CASE WHEN UPPER(rt1.c2) THEN rt1.c2 COLLATE RTRIM WHEN (('1934950711')OR(rt1.c0)) THEN (+ (rt1.c2)) ELSE (~ (rt1.c3)) END) ORDER BY LENGTH(((rt1.c6)>(rt1.c1))) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (CASE WHEN UPPER(rt1.c2) THEN rt1.c2 COLLATE RTRIM WHEN (('1934950711')OR(rt1.c0)) THEN (+ (rt1.c2)) ELSE (~ (rt1.c3)) END) ORDER BY (((rt1.c0, rt1.c0)) NOT BETWEEN (((((rt1.c4, rt1.c5))>((0.07747216599623086, rt1.c4))), ((((((rt1.c4)AND(rt1.c6)))AND(rt1.c6)))AND(rt1.c3)))) AND ((((rt1.c0)IS(rt1.c4)), ((((((((rt1.c0)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c4)))AND(rt1.c2))))), (((NOT (rt1.c1)))<((((rt1.c4, rt1.c2, rt1.c5))>((rt1.c2, rt1.c5, rt1.c2)))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (CASE WHEN UPPER(rt1.c2) THEN rt1.c2 COLLATE RTRIM WHEN (('1934950711')OR(rt1.c0)) THEN (+ (rt1.c2)) ELSE (~ (rt1.c3)) END) ORDER BY LENGTH(((rt1.c6)>(rt1.c1))) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (CASE WHEN UPPER(rt1.c2) THEN rt1.c2 COLLATE RTRIM WHEN (('1934950711')OR(rt1.c0)) THEN (+ (rt1.c2)) ELSE (~ (rt1.c3)) END) ORDER BY (((rt1.c0, rt1.c0)) NOT BETWEEN (((((rt1.c4, rt1.c5))>((0.07747216599623086, rt1.c4))), ((((((rt1.c4)AND(rt1.c6)))AND(rt1.c6)))AND(rt1.c3)))) AND ((((rt1.c0)IS(rt1.c4)), ((((((((rt1.c0)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c4)))AND(rt1.c2))))), (((NOT (rt1.c1)))<((((rt1.c4, rt1.c2, rt1.c5))>((rt1.c2, rt1.c5, rt1.c2)))))  NULLS LAST;
SELECT * FROM t0 WHERE (CASE (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c3)))  WHEN CASE t0.c3  WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c3 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END THEN (t0.c4 IN (t0.c4, t0.c2)) END);
SELECT * FROM t0 WHERE (CASE (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c3)))  WHEN CASE t0.c3  WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c3 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END THEN (t0.c4 IN (t0.c4)) END) LIMIT 0x0;
SELECT * FROM t0 WHERE (CASE (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c3)))  WHEN CASE t0.c3  WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c3 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END THEN (t0.c4 IN (t0.c4, t0.c2)) END);
SELECT * FROM t0 WHERE (CASE (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c3)))  WHEN CASE t0.c3  WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c3 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END THEN (t0.c4 IN (t0.c4)) END) LIMIT 0x0;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c6 COLLATE RTRIM THEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c5))) END);
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c6 COLLATE RTRIM THEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c5))) END)AND((rt1.c6 IN (rt1.c1)) COLLATE NOCASE))) LIMIT 0x2 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((rt1.c5 IN (rt1.c5)))<(CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c5 END))) LIMIT 2;
SELECT ALL * FROM t0 WHERE ((((((((t0.c1)OR('-208659938')))OR(t0.c0)))AND(x'5c2063')) IN (t0.c1 COLLATE RTRIM, CAST(t0.c2 AS REAL), x'0d')));
SELECT ALL * FROM t0 WHERE ((((((((((t0.c1)OR('-208659938')))OR(t0.c0)))AND(x'5c2063')) IN (t0.c1 COLLATE RTRIM)))AND((- (CAST(t0.c2 AS INTEGER)))))) ORDER BY (+ ((((t0.c3, t0.c1)) NOT BETWEEN ((t0.c0, t0.c2)) AND ((t0.c2, t0.c1))))) DESC  NULLS FIRST, ((((((-1.666556278E9)OR(t0.c4)))OR(t0.c4))) NOTNULL) LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (((t0.c2) BETWEEN (0.9599565474275481) AND (CAST(t0.c2 AS REAL)))) ORDER BY (+ ((((t0.c3, t0.c1)) NOT BETWEEN ((t0.c0, t0.c2)) AND ((t0.c2, t0.c1))))) DESC  NULLS FIRST, ((((((-1.666556278E9)OR(t0.c4)))OR(t0.c4))) NOTNULL) LIMIT 0x0;
SELECT ALL * FROM t0 WHERE ((((((((t0.c1)OR('-208659938')))OR(t0.c0)))AND(x'5c2063')) IN (t0.c1 COLLATE RTRIM, CAST(t0.c2 AS REAL), x'0d')));
SELECT ALL * FROM t0 WHERE ((((((((((t0.c1)OR('-208659938')))OR(t0.c0)))AND(x'5c2063')) IN (t0.c1 COLLATE RTRIM)))AND((- (CAST(t0.c2 AS INTEGER)))))) ORDER BY (+ ((((t0.c3, t0.c1)) NOT BETWEEN ((t0.c0, t0.c2)) AND ((t0.c2, t0.c1))))) DESC  NULLS FIRST, ((((((-1.666556278E9)OR(t0.c4)))OR(t0.c4))) NOTNULL) LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (((t0.c2) BETWEEN (0.9599565474275481) AND (CAST(t0.c2 AS REAL)))) ORDER BY (+ ((((t0.c3, t0.c1)) NOT BETWEEN ((t0.c0, t0.c2)) AND ((t0.c2, t0.c1))))) DESC  NULLS FIRST, ((((((-1.666556278E9)OR(t0.c4)))OR(t0.c4))) NOTNULL) LIMIT 0x0;
SELECT ALL * FROM rt1 CROSS JOIN t0 ON (((t0.c4)) NOT BETWEEN ((CHANGES())) AND ((((0Xffffffffb6d001d1)%(rt1.c4))))) WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2)&(t0.c2)))) AND ((ABS(rt1.c3))))) ORDER BY ((((t0.c2)+(rt1.c4))) NOT BETWEEN (CASE rt1.c3  WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 END) AND ((+ (t0.c3)))), ((((t0.c2)=(rt1.c3)))||(((t0.c2)/(t0.c3))))  NULLS LAST;
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON (((t0.c4)) NOT BETWEEN ((CHANGES())) AND ((((0xffffffffb6d001d1)%(rt1.c4))))) WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2)&(t0.c2)))) AND ((ABS(rt1.c3))))) ORDER BY ((((t0.c2)+(rt1.c4))) NOT BETWEEN (CASE rt1.c3  WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 END) AND ((+ (t0.c3)))), ((((t0.c2)==(rt1.c3)))||(((t0.c2)/(t0.c3))))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON (((t0.c4)) NOT BETWEEN ((CHANGES())) AND ((((-1227882031)%(rt1.c4))))) WHERE ((((rt1.c6)) BETWEEN ((((((rt1.c3)AND(rt1.c0)))OR(0xffffffffff562b34)))) AND ((rt1.c5 COLLATE RTRIM)))) ORDER BY ((((t0.c2)+(rt1.c4))) NOT BETWEEN (CASE rt1.c3  WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 END) AND ((+ (t0.c3)))), ((((t0.c2)==(rt1.c3)))||(((t0.c2)/(t0.c3))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt1 CROSS JOIN t0 ON (((t0.c4)) NOT BETWEEN ((CHANGES())) AND ((((0Xffffffffb6d001d1)%(rt1.c4))))) WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2)&(t0.c2)))) AND ((ABS(rt1.c3))))) ORDER BY ((((t0.c2)+(rt1.c4))) NOT BETWEEN (CASE rt1.c3  WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 END) AND ((+ (t0.c3)))), ((((t0.c2)=(rt1.c3)))||(((t0.c2)/(t0.c3))))  NULLS LAST;
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON (((t0.c4)) NOT BETWEEN ((CHANGES())) AND ((((0xffffffffb6d001d1)%(rt1.c4))))) WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2)&(t0.c2)))) AND ((ABS(rt1.c3))))) ORDER BY ((((t0.c2)+(rt1.c4))) NOT BETWEEN (CASE rt1.c3  WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 END) AND ((+ (t0.c3)))), ((((t0.c2)==(rt1.c3)))||(((t0.c2)/(t0.c3))))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON (((t0.c4)) NOT BETWEEN ((CHANGES())) AND ((((-1227882031)%(rt1.c4))))) WHERE ((((rt1.c6)) BETWEEN ((((((rt1.c3)AND(rt1.c0)))OR(0xffffffffff562b34)))) AND ((rt1.c5 COLLATE RTRIM)))) ORDER BY ((((t0.c2)+(rt1.c4))) NOT BETWEEN (CASE rt1.c3  WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 END) AND ((+ (t0.c3)))), ((((t0.c2)==(rt1.c3)))||(((t0.c2)/(t0.c3))))  NULLS LAST LIMIT 0;
SELECT MIN(rt1.c4) FROM rt1 WHERE (CASE WHEN ((rt1.c0) NOT NULL) THEN CASE rt1.c6  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c6 THEN rt1.c3 WHEN '-1125628543' THEN rt1.c6 ELSE NULL END END);
SELECT MIN(rt1.c4) FROM rt1 WHERE (CASE WHEN ((rt1.c0) NOT NULL) THEN CASE rt1.c6  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c6 THEN rt1.c3 WHEN '-1125628543' THEN rt1.c6 ELSE NULL END END) ORDER BY CASE ((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c3))  WHEN (- (rt1.c5)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)) WHEN ((rt1.c3)OR(rt1.c1)) THEN ((rt1.c3)*(rt1.c6)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c1)) THEN rt1.c0 WHEN ((rt1.c0)!=(rt1.c3)) THEN ((((((((((x'2e200f')AND(rt1.c4)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c6)))OR(rt1.c6)) WHEN ((rt1.c3) IS TRUE) THEN NULL END ASC LIMIT 1 INTERSECT SELECT MIN(rt1.c4) FROM rt1 WHERE ((+ (x'')) COLLATE NOCASE) ORDER BY CASE ((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c3))  WHEN (- (rt1.c5)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)) WHEN ((rt1.c3)OR(rt1.c1)) THEN ((rt1.c3)*(rt1.c6)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c1)) THEN rt1.c0 WHEN ((rt1.c0)!=(rt1.c3)) THEN ((((((((((x'2e200f')AND(rt1.c4)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c6)))OR(rt1.c6)) WHEN ((rt1.c3) IS TRUE) THEN NULL END ASC LIMIT 0X1;
SELECT ALL * FROM t0 INNER JOIN rt1 ON (- (((t0.c0)<=(t0.c1)))) WHERE (((((((((rt1.c0)OR(t0.c1)))OR(x'8b')))AND('EO꨸'))) IS TRUE));
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON (- (((t0.c0)<=(t0.c1)))) WHERE (((((((((rt1.c0)OR(t0.c1)))OR(x'8b')))AND('EO꨸'))) IS TRUE)) ORDER BY CAST(((rt1.c0)IS NOT(rt1.c1)) AS NUMERIC), COALESCE(DISTINCT rt1.c5, NULL) COLLATE RTRIM  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 INNER JOIN rt1 ON (- (((t0.c0)<=(t0.c1)))) WHERE (((((((((rt1.c0)OR(t0.c1)))OR(x'8b')))AND('EO꨸'))) IS TRUE));
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON (- (((t0.c0)<=(t0.c1)))) WHERE (((((((((rt1.c0)OR(t0.c1)))OR(x'8b')))AND('EO꨸'))) IS TRUE)) ORDER BY CAST(((rt1.c0)IS NOT(rt1.c1)) AS NUMERIC), COALESCE(DISTINCT rt1.c5, NULL) COLLATE RTRIM  NULLS LAST LIMIT 2;
SELECT MIN(rt1.c2) FROM t0, rt1 WHERE (((rt1.c6)/(rt1.c1)) COLLATE NOCASE);
SELECT DISTINCT MIN(rt1.c2) FROM t0, rt1 WHERE (((rt1.c6)/(rt1.c1)) COLLATE NOCASE) ORDER BY (((t0.c0))==((rt1.c1))) COLLATE RTRIM ASC  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(rt1.c2) FROM t0, rt1 WHERE (((((t0.c4) BETWEEN (rt1.c0) AND (t0.c2))) NOT BETWEEN (((rt1.c6)<=(NULL))) AND (CHAR(rt1.c0)))) ORDER BY (((t0.c0))==((rt1.c1))) COLLATE RTRIM ASC  NULLS LAST LIMIT 1;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (HEX((- (t0.c2)))) ORDER BY (((rt1.c5 IN (rt1.c6)))*(((((((((0.11518430258898871)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c3)))) DESC, CAST(((rt1.c4) IS FALSE) AS INTEGER) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (HEX((- (t0.c2)))) ORDER BY (((rt1.c5 IN (rt1.c6)))*(((((((((0.11518430258898871)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c3)))) DESC, CAST(((rt1.c4) IS FALSE) AS INTEGER) ASC  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE ((((rt1.c5, t0.c1, x'27')) NOT BETWEEN (((rt1.c1 IN (rt1.c3)), CAST(t0.c2 AS BLOB), CAST(t0.c4 AS TEXT))) AND ((UPPER(DISTINCT t0.c1), t0.c2, CAST(rt1.c1 AS TEXT))))) ORDER BY (((rt1.c5 IN (rt1.c6)))*(((((((((0.11518430258898871)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c3)))) DESC, CAST(((rt1.c4) IS FALSE) AS INTEGER) ASC  NULLS FIRST LIMIT 0x2;
SELECT MAX(t0.c4) FROM t0 WHERE (CAST(((((((t0.c4)OR(t0.c3)))OR(0.348533508315234)))OR(t0.c3)) AS REAL)) ORDER BY (((t0.c3)) NOT BETWEEN (((t0.c3 IN ()))) AND (((~ ('N.I'))))) DESC, t0.c0 ASC;
SELECT DISTINCT MAX(t0.c4) FROM t0 WHERE (((CAST(((((((t0.c4)OR(t0.c3)))OR(0.348533508315234)))OR(t0.c3)) AS REAL))AND(((CAST(NULL AS TEXT))<(((((((((t0.c4)OR(t0.c1)))AND(t0.c1)))AND(t0.c0)))AND(t0.c4))))))) ORDER BY (((t0.c3)) NOT BETWEEN (((t0.c3 IN ()))) AND (((~ ('N.I'))))) DESC, t0.c0 ASC LIMIT 4;
SELECT * FROM rt1 WHERE (rt1.c2) ORDER BY (~ (CASE 0.8237587880307347  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END)) ASC, ((json_extract(rt1.c4, rt1.c4, rt1.c0, rt1.c1))!=(CAST(rt1.c0 AS BLOB))) ASC;
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c2)AND((((rt1.c3, rt1.c4, rt1.c4)) NOT BETWEEN ((0.03153459249841195, rt1.c4, ((((((((rt1.c6)OR(rt1.c1)))AND(rt1.c3)))OR(rt1.c5)))AND(rt1.c3)))) AND ((rt1.c6 COLLATE RTRIM, (rt1.c0 IN (rt1.c1)), (((rt1.c0, rt1.c1, rt1.c0, rt1.c4))<>((rt1.c3, rt1.c1, rt1.c0, rt1.c5))))))))) ORDER BY rt1.c4  NULLS LAST, ((rt1.c3 COLLATE BINARY) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c4 THEN rt1.c4 END) AND (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) DESC  NULLS FIRST, x''  NULLS FIRST, CHAR(CAST(rt1.c6 AS NUMERIC)) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM rt1 WHERE (rt1.c2) ORDER BY (~ (CASE 0.8237587880307347  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END)) ASC, ((json_extract(rt1.c4, rt1.c4, rt1.c0, rt1.c1))!=(CAST(rt1.c0 AS BLOB))) ASC;
SELECT * FROM rt1, t0 WHERE (((+ (rt1.c0)) IN (((rt1.c0)LIKE(rt1.c3)), LIKELIHOOD(t0.c4, rt1.c2))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((+ (rt1.c0)) IN (((rt1.c0)LIKE(rt1.c3))))) ORDER BY json_remove(CAST(rt1.c4 AS TEXT), ((((((t0.c2)AND(t0.c3)))OR(rt1.c5)))OR(rt1.c4)), (t0.c3 IN ()))  NULLS LAST, ((((rt1.c6 IN ()), UNLIKELY(rt1.c4), ((((t0.c0)AND(rt1.c5)))OR(rt1.c5))))>((t0.c1, rt1.c4, CASE t0.c0  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c4 END))) DESC LIMIT 0x3;
SELECT * FROM rt1, t0 WHERE (((+ (rt1.c0)) IN (((rt1.c0)LIKE(rt1.c3)), LIKELIHOOD(t0.c4, rt1.c2))));
SELECT COUNT(*) FROM t0 WHERE ('h^N') ORDER BY ((t0.c0) NOTNULL)  NULLS FIRST, NULL;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((('h^N')AND(CASE WHEN x'6315' THEN LOWER(t0.c1) WHEN json_array(t0.c1, t0.c4, t0.c4, t0.c1) THEN '-1446379791' WHEN (((t0.c3, t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c1, t0.c2, t0.c1, t0.c4)) AND ((t0.c2, t0.c2, t0.c2, t0.c4))) THEN (+ (t0.c3)) ELSE CASE WHEN t0.c3 THEN t0.c3 ELSE t0.c3 END END))) ORDER BY ((t0.c0) NOTNULL)  NULLS FIRST, NULL LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((NULL) NOT BETWEEN (t0.c4) AND (t0.c4)))%(t0.c3 COLLATE BINARY))) ORDER BY ((t0.c0) NOTNULL)  NULLS FIRST, NULL LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (((t0.c0)/(t0.c0)) COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)/(t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (((t0.c0)/(t0.c0)) COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)/(t0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((t0.c3) NOTNULL)))>((((((-1908681393)AND(rt1.c3)))AND(rt1.c5))))));
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE ((((((t0.c3) NOTNULL)))>((((((-1908681393)AND(rt1.c3)))AND(rt1.c5)))))) ORDER BY ((CAST(rt1.c1 AS TEXT))>>(((((((t0.c2)OR(rt1.c5)))OR(rt1.c3)))AND(rt1.c2))))  NULLS FIRST, (((rt1.c2)!=(rt1.c3)) IN ()) DESC, (('1941799750')>(((rt1.c4)+(rt1.c6)))) LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE (((0x20d745a7 IN (rt1.c1)) IN ()));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((550978983 IN (rt1.c1)) IN ()))AND(TRIM(HEX(rt1.c5))))) ORDER BY ((NULL)*(CAST(rt1.c2 AS TEXT)));
SELECT ALL * FROM rt1, t0 WHERE (((0x20d745a7 IN (rt1.c1)) IN ()));
SELECT DISTINCT * FROM rt1, t0 WHERE (((((550978983 IN (rt1.c1)) IN ()))AND(TRIM(HEX(rt1.c5))))) ORDER BY ((NULL)*(CAST(rt1.c2 AS TEXT)));
SELECT * FROM rt1 WHERE (489856521) ORDER BY x'ac53'  NULLS LAST, (+ ((- (rt1.c5)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (489856521) ORDER BY x'ac53'  NULLS LAST, (+ ((- (rt1.c5)))) ASC  NULLS LAST LIMIT 0x0;
SELECT * FROM rt1 WHERE (489856521) ORDER BY x'ac53'  NULLS LAST, (+ ((- (rt1.c5)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (489856521) ORDER BY x'ac53'  NULLS LAST, (+ ((- (rt1.c5)))) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(rt1.c0) FROM rt1 WHERE (SQLITE_COMPILEOPTION_USED(((((rt1.c0)OR(rt1.c0)))OR(rt1.c5)))) ORDER BY CASE WHEN ((rt1.c3) NOT BETWEEN (-1071383120) AND (rt1.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 END WHEN (((rt1.c0)) BETWEEN ((rt1.c6)) AND ((rt1.c5))) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c1)>=(rt1.c4)) END, (((rt1.c1)) NOT BETWEEN (((- (rt1.c1)))) AND (((rt1.c2 IN ())))) ASC, (NOT ((('243569868')>(rt1.c3))))  NULLS LAST;
SELECT DISTINCT MAX(rt1.c0) FROM rt1 WHERE (((SQLITE_COMPILEOPTION_USED(((((rt1.c0)OR(rt1.c0)))OR(rt1.c5))))AND('996534958'))) ORDER BY CASE WHEN ((rt1.c3) NOT BETWEEN (0xffffffffc023fdb0) AND (rt1.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 END WHEN (((rt1.c0)) BETWEEN ((rt1.c6)) AND ((rt1.c5))) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c1)>=(rt1.c4)) END, (((rt1.c1)) NOT BETWEEN (((- (rt1.c1)))) AND (((rt1.c2 IN ())))) ASC, (NOT ((('243569868')>(rt1.c3))))  NULLS LAST;
SELECT MIN(rt1.c6) FROM rt1, t0 WHERE ((- (((((((rt1.c1)AND(t0.c3)))OR(rt1.c2)))AND(rt1.c4))))) ORDER BY CASE WHEN ((t0.c2) IS FALSE) THEN ((((rt1.c3)AND(rt1.c3)))OR(t0.c0)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)) END ASC, (t0.c0 IN (t0.c0, rt1.c1)) COLLATE NOCASE DESC  NULLS FIRST, ((((x'58')&(t0.c3)))GLOB(x'af')) ASC;
SELECT DISTINCT MIN(rt1.c6) FROM rt1, t0 WHERE ((((- (((((((rt1.c1)AND(t0.c3)))OR(rt1.c2)))AND(rt1.c4)))))AND(((((((rt1.c3)OR(x'1f')))AND(((rt1.c2) IS FALSE))))OR(LTRIM(1002551892)))))) ORDER BY CASE WHEN ((t0.c2) IS FALSE) THEN ((((rt1.c3)AND(rt1.c3)))OR(t0.c0)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)) END ASC, (t0.c0 IN (t0.c0, rt1.c1)) COLLATE NOCASE DESC  NULLS FIRST, ((((x'58')&(t0.c3)))GLOB(x'af')) ASC LIMIT 5;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((CASE WHEN rt1.c2 THEN t0.c0 ELSE rt1.c6 END)!=(((t0.c4)/(rt1.c3)))) WHERE (rt1.c3 COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM) ORDER BY CASE t0.c4  WHEN x'cd' THEN CASE WHEN rt1.c5 THEN rt1.c5 WHEN 0.571231700670701 THEN NULL WHEN 0.5733275113138827 THEN t0.c4 WHEN t0.c2 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c2 END END;
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON ((CASE WHEN rt1.c2 THEN t0.c0 ELSE rt1.c6 END)<>(((t0.c4)/(rt1.c3)))) WHERE (((rt1.c3 COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM)AND(t0.c0))) ORDER BY CASE t0.c4  WHEN x'cd' THEN CASE WHEN rt1.c5 THEN rt1.c5 WHEN 0.571231700670701 THEN NULL WHEN 0.5733275113138827 THEN t0.c4 WHEN t0.c2 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c2 END END LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON ((CASE WHEN rt1.c2 THEN t0.c0 ELSE rt1.c6 END)!=(((t0.c4)/(rt1.c3)))) WHERE ((((rt1.c5 IN (rt1.c5))) BETWEEN (((rt1.c5)-(rt1.c3))) AND ((((rt1.c6, t0.c0, t0.c1)) NOT BETWEEN ((rt1.c5, t0.c3, rt1.c0)) AND ((rt1.c3, t0.c3, rt1.c4)))))) ORDER BY CASE t0.c4  WHEN x'cd' THEN CASE WHEN rt1.c5 THEN rt1.c5 WHEN 0.571231700670701 THEN NULL WHEN 0.5733275113138827 THEN t0.c4 WHEN t0.c2 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c2 END END LIMIT 0x3;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((CASE WHEN rt1.c2 THEN t0.c0 ELSE rt1.c6 END)!=(((t0.c4)/(rt1.c3)))) WHERE (rt1.c3 COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM) ORDER BY CASE t0.c4  WHEN x'cd' THEN CASE WHEN rt1.c5 THEN rt1.c5 WHEN 0.571231700670701 THEN NULL WHEN 0.5733275113138827 THEN t0.c4 WHEN t0.c2 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c2 END END;
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON ((CASE WHEN rt1.c2 THEN t0.c0 ELSE rt1.c6 END)<>(((t0.c4)/(rt1.c3)))) WHERE (((rt1.c3 COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM)AND(t0.c0))) ORDER BY CASE t0.c4  WHEN x'cd' THEN CASE WHEN rt1.c5 THEN rt1.c5 WHEN 0.571231700670701 THEN NULL WHEN 0.5733275113138827 THEN t0.c4 WHEN t0.c2 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c2 END END LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON ((CASE WHEN rt1.c2 THEN t0.c0 ELSE rt1.c6 END)!=(((t0.c4)/(rt1.c3)))) WHERE ((((rt1.c5 IN (rt1.c5))) BETWEEN (((rt1.c5)-(rt1.c3))) AND ((((rt1.c6, t0.c0, t0.c1)) NOT BETWEEN ((rt1.c5, t0.c3, rt1.c0)) AND ((rt1.c3, t0.c3, rt1.c4)))))) ORDER BY CASE t0.c4  WHEN x'cd' THEN CASE WHEN rt1.c5 THEN rt1.c5 WHEN 0.571231700670701 THEN NULL WHEN 0.5733275113138827 THEN t0.c4 WHEN t0.c2 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c2 END END LIMIT 0x3;
SELECT MIN(t0.c3) FROM t0 WHERE (UPPER(((t0.c0)OR(x''))));
SELECT DISTINCT MIN(t0.c3) FROM t0 WHERE (((UPPER(((t0.c0)OR(x''))))AND((((t0.c3)LIKE(t0.c2)) IN (CASE WHEN t0.c2 THEN t0.c0 END, t0.c4))))) LIMIT 2;
SELECT ALL * FROM t0, rt1 WHERE (rt1.c6) ORDER BY TYPEOF((((t0.c4))!=((rt1.c0)))) DESC  NULLS LAST, CAST((NOT (rt1.c6)) AS REAL), (- (CAST(t0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c6)AND(t0.c3))) ORDER BY (((t0.c4, -1906410965)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c6) AND (t0.c1)), (rt1.c4 IN (rt1.c2)))) AND ((((((((t0.c0)OR(NULL)))AND(rt1.c4)))AND(t0.c0)), HEX(rt1.c4)))), ((CASE WHEN rt1.c6 THEN t0.c2 WHEN rt1.c5 THEN rt1.c3 ELSE t0.c4 END)<(((((0.5349723149481403)OR(rt1.c3)))OR(rt1.c5)))) LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE (rt1.c6) ORDER BY TYPEOF((((t0.c4))!=((rt1.c0)))) DESC  NULLS LAST, CAST((NOT (rt1.c6)) AS REAL), (- (CAST(t0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c6)AND(t0.c3))) ORDER BY (((t0.c4, -1906410965)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c6) AND (t0.c1)), (rt1.c4 IN (rt1.c2)))) AND ((((((((t0.c0)OR(NULL)))AND(rt1.c4)))AND(t0.c0)), HEX(rt1.c4)))), ((CASE WHEN rt1.c6 THEN t0.c2 WHEN rt1.c5 THEN rt1.c3 ELSE t0.c4 END)<(((((0.5349723149481403)OR(rt1.c3)))OR(rt1.c5)))) LIMIT 0;
SELECT * FROM t0, rt1 WHERE ((((-1.7976931348623157E308)) BETWEEN ((LIKELY(rt1.c5))) AND ((((rt1.c6) BETWEEN (1823274675) AND (rt1.c4)))))) ORDER BY ((((t0.c1) NOT NULL))|(CASE rt1.c0  WHEN rt1.c5 THEN t0.c3 WHEN rt1.c1 THEN t0.c2 WHEN NULL THEN NULL END));
SELECT * FROM t0, rt1 WHERE ((((((-1.7976931348623157E308)) BETWEEN ((LIKELY(rt1.c5))) AND ((((rt1.c6) BETWEEN (0X6cacf6b3) AND (rt1.c4))))))AND(CAST(CAST(0.9089065234348361 AS TEXT) AS NUMERIC)))) ORDER BY ((((t0.c1) NOT NULL))|(CASE rt1.c0  WHEN rt1.c5 THEN t0.c3 WHEN rt1.c1 THEN t0.c2 WHEN NULL THEN NULL END));
SELECT * FROM t0, rt1 WHERE ((((-1.7976931348623157E308)) BETWEEN ((LIKELY(rt1.c5))) AND ((((rt1.c6) BETWEEN (1823274675) AND (rt1.c4)))))) ORDER BY ((((t0.c1) NOT NULL))|(CASE rt1.c0  WHEN rt1.c5 THEN t0.c3 WHEN rt1.c1 THEN t0.c2 WHEN NULL THEN NULL END));
SELECT * FROM t0, rt1 WHERE ((((((-1.7976931348623157E308)) BETWEEN ((LIKELY(rt1.c5))) AND ((((rt1.c6) BETWEEN (0X6cacf6b3) AND (rt1.c4))))))AND(CAST(CAST(0.9089065234348361 AS TEXT) AS NUMERIC)))) ORDER BY ((((t0.c1) NOT NULL))|(CASE rt1.c0  WHEN rt1.c5 THEN t0.c3 WHEN rt1.c1 THEN t0.c2 WHEN NULL THEN NULL END));
SELECT ALL MAX(t0.c2) FROM t0 WHERE (((((((((CASE t0.c0  WHEN t0.c1 THEN t0.c2 WHEN 'ID[]' THEN t0.c2 ELSE t0.c2 END)AND(t0.c1 COLLATE NOCASE)))OR(json_type(t0.c4))))OR(0.28541776697315324)))OR(x'')));
SELECT MAX(t0.c2) FROM t0 WHERE (((((((((((CASE t0.c0  WHEN t0.c1 THEN t0.c2 WHEN 'ID[]' THEN t0.c2 ELSE t0.c2 END)AND(t0.c1 COLLATE NOCASE)))OR(json_type(t0.c4))))OR(0.28541776697315324)))OR(x'')))AND(CHAR(COALESCE(DISTINCT t0.c1, t0.c1))))) LIMIT 0x3 INTERSECT SELECT ALL MAX(t0.c2) FROM t0 WHERE ((((((t0.c4) IS FALSE), (t0.c1 IN ())))<=((((((t0.c3)AND(t0.c0)))AND(t0.c1)), ((t0.c4) BETWEEN (t0.c0) AND (t0.c1)))))) LIMIT 3;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (x'9ebc190e5c');
SELECT DISTINCT MAX(t0.c3) FROM t0 WHERE (x'9ebc190e5c');
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c6 IN (rt1.c0))) IS TRUE));
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((((((rt1.c6 IN (rt1.c0))) IS TRUE))AND(rt1.c5))) LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (CAST((((((((((((((('-153614277')AND(t0.c0)))OR('Nqt''X-L<')))OR(t0.c0)))OR(rt1.c1)))AND('U')))AND(t0.c2)))OR(rt1.c4)) AS NUMERIC)) LIMIT 0;
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c4) BETWEEN (t0.c0) AND (t0.c4)))<(((t0.c4)==(t0.c1)))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c4) BETWEEN (t0.c0) AND (t0.c4)))<(((t0.c4)=(t0.c1)))));
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c4) BETWEEN (t0.c0) AND (t0.c4)))<(((t0.c4)==(t0.c1)))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c4) BETWEEN (t0.c0) AND (t0.c4)))<(((t0.c4)=(t0.c1)))));
SELECT MAX(rt1.c6) FROM t0, rt1 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY ((((t0.c1)+('AR')))%(rt1.c6 COLLATE RTRIM)) ASC  NULLS LAST, (~ (((((t0.c3)OR(rt1.c3)))AND(rt1.c5)))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(rt1.c6) FROM t0, rt1 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY NULLIF(DISTINCT 0.7406516846156954, ((t0.c4) BETWEEN (0.9359667882357533) AND (rt1.c3))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(rt1.c6) FROM t0, rt1 WHERE (((((UNLIKELY(DISTINCT rt1.c5))AND(((t0.c4) BETWEEN (t0.c4) AND (rt1.c2)))))AND((~ (t0.c1))))) ORDER BY NULLIF(DISTINCT 0.7406516846156954, ((t0.c4) BETWEEN (0.9359667882357533) AND (rt1.c3))) ASC  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (((((((((((rt1.c3) IS FALSE))AND(IFNULL(DISTINCT rt1.c2, rt1.c6))))OR(CAST(rt1.c2 AS INTEGER))))OR(CAST(rt1.c2 AS REAL))))OR('-640797792'))) ORDER BY (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c6)), ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c5)), (((t0.c0, t0.c3))>((t0.c4, t0.c1)))))!=((rt1.c6, ((rt1.c6)==(rt1.c6)), (~ (rt1.c0))))) ASC  NULLS FIRST, rt1.c6, TRIM(DISTINCT rt1.c0) COLLATE RTRIM  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (((((((((((rt1.c3) IS FALSE))AND(IFNULL(DISTINCT rt1.c2, rt1.c6))))OR(CAST(rt1.c2 AS INTEGER))))OR(CAST(rt1.c2 AS REAL))))OR('-640797792'))) ORDER BY (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c6)), ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c5)), (((t0.c0, t0.c3))>((t0.c4, t0.c1)))))<>((rt1.c6, ((rt1.c6)=(rt1.c6)), (~ (rt1.c0))))) ASC  NULLS FIRST, rt1.c6, TRIM(DISTINCT rt1.c0) COLLATE RTRIM  NULLS LAST INTERSECT SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN IFNULL(DISTINCT rt1.c5, rt1.c6) THEN rt1.c0 COLLATE RTRIM WHEN json_type(rt1.c4) THEN ((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c3)) WHEN t0.c0 COLLATE BINARY THEN (t0.c0 IN ()) WHEN ((rt1.c2)+(t0.c3)) THEN ((t0.c3) NOT BETWEEN (t0.c2) AND (rt1.c0)) ELSE t0.c1 END) ORDER BY (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c6)), ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c5)), (((t0.c0, t0.c3))>((t0.c4, t0.c1)))))<>((rt1.c6, ((rt1.c6)=(rt1.c6)), (~ (rt1.c0))))) ASC  NULLS FIRST, rt1.c6, TRIM(DISTINCT rt1.c0) COLLATE RTRIM  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (((((((((((rt1.c3) IS FALSE))AND(IFNULL(DISTINCT rt1.c2, rt1.c6))))OR(CAST(rt1.c2 AS INTEGER))))OR(CAST(rt1.c2 AS REAL))))OR('-640797792'))) ORDER BY (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c6)), ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c5)), (((t0.c0, t0.c3))>((t0.c4, t0.c1)))))!=((rt1.c6, ((rt1.c6)==(rt1.c6)), (~ (rt1.c0))))) ASC  NULLS FIRST, rt1.c6, TRIM(DISTINCT rt1.c0) COLLATE RTRIM  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (((((((((((rt1.c3) IS FALSE))AND(IFNULL(DISTINCT rt1.c2, rt1.c6))))OR(CAST(rt1.c2 AS INTEGER))))OR(CAST(rt1.c2 AS REAL))))OR('-640797792'))) ORDER BY (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c6)), ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c5)), (((t0.c0, t0.c3))>((t0.c4, t0.c1)))))<>((rt1.c6, ((rt1.c6)=(rt1.c6)), (~ (rt1.c0))))) ASC  NULLS FIRST, rt1.c6, TRIM(DISTINCT rt1.c0) COLLATE RTRIM  NULLS LAST INTERSECT SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN IFNULL(DISTINCT rt1.c5, rt1.c6) THEN rt1.c0 COLLATE RTRIM WHEN json_type(rt1.c4) THEN ((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c3)) WHEN t0.c0 COLLATE BINARY THEN (t0.c0 IN ()) WHEN ((rt1.c2)+(t0.c3)) THEN ((t0.c3) NOT BETWEEN (t0.c2) AND (rt1.c0)) ELSE t0.c1 END) ORDER BY (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c6)), ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c5)), (((t0.c0, t0.c3))>((t0.c4, t0.c1)))))<>((rt1.c6, ((rt1.c6)=(rt1.c6)), (~ (rt1.c0))))) ASC  NULLS FIRST, rt1.c6, TRIM(DISTINCT rt1.c0) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c0 AS TEXT));
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c0 AS TEXT))AND(((((((((((rt1.c6)OR(rt1.c1)))AND(rt1.c6)))OR(rt1.c6)))AND(rt1.c1))) NOTNULL)))) ORDER BY ((rt1.c1) IS FALSE) COLLATE RTRIM ASC LIMIT 0X2 INTERSECT SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((rt1.c1) IS FALSE) COLLATE RTRIM ASC LIMIT 0x2;
SELECT ALL * FROM t0, rt1 WHERE ((((0X75b71465, rt1.c3, t0.c4)) NOT BETWEEN ((CAST(rt1.c5 AS BLOB), x'' COLLATE RTRIM, t0.c4)) AND ((((t0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4)), (((rt1.c6, t0.c1))>((rt1.c6, t0.c2))), ((t0.c4) NOT BETWEEN (rt1.c0) AND (t0.c2)))))) ORDER BY CASE ((((t0.c0)AND(t0.c2)))AND(rt1.c5))  WHEN CASE t0.c0  WHEN t0.c0 THEN 0x61ba55ff END THEN CASE rt1.c2  WHEN t0.c4 THEN rt1.c3 WHEN '-994282758' THEN rt1.c5 WHEN t0.c1 THEN rt1.c2 END WHEN '-1900776550' THEN rt1.c5 WHEN (NULL IN ()) THEN t0.c4 COLLATE RTRIM WHEN ((rt1.c6) NOT BETWEEN (t0.c1) AND (rt1.c6)) THEN ((t0.c3) BETWEEN (t0.c0) AND (rt1.c3)) WHEN ((t0.c3)LIKE(t0.c4)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)) END ASC, ((t0.c4)IS NOT(rt1.c5)) COLLATE BINARY ASC  NULLS FIRST, ((((CASE WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c0 THEN t0.c4 END)OR(((rt1.c3)|(rt1.c2)))))AND(rt1.c1 COLLATE BINARY)) ASC;
SELECT * FROM t0 NOT INDEXED, rt1 WHERE ((((((1974932581, rt1.c3, t0.c4)) NOT BETWEEN ((CAST(rt1.c5 AS BLOB), x'' COLLATE RTRIM, t0.c4)) AND ((((t0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4)), (((rt1.c6, t0.c1))>((rt1.c6, t0.c2))), ((t0.c4) NOT BETWEEN (rt1.c0) AND (t0.c2))))))AND(((CASE WHEN t0.c0 THEN x'' WHEN rt1.c5 THEN t0.c1 WHEN rt1.c5 THEN rt1.c6 WHEN NULL THEN rt1.c4 ELSE rt1.c1 END)>=(SUBSTR(t0.c3, rt1.c6)))))) ORDER BY UNLIKELY(rt1.c6) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE ((((0X75b71465, rt1.c3, t0.c4)) NOT BETWEEN ((CAST(rt1.c5 AS BLOB), x'' COLLATE RTRIM, t0.c4)) AND ((((t0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4)), (((rt1.c6, t0.c1))>((rt1.c6, t0.c2))), ((t0.c4) NOT BETWEEN (rt1.c0) AND (t0.c2)))))) ORDER BY CASE ((((t0.c0)AND(t0.c2)))AND(rt1.c5))  WHEN CASE t0.c0  WHEN t0.c0 THEN 0x61ba55ff END THEN CASE rt1.c2  WHEN t0.c4 THEN rt1.c3 WHEN '-994282758' THEN rt1.c5 WHEN t0.c1 THEN rt1.c2 END WHEN '-1900776550' THEN rt1.c5 WHEN (NULL IN ()) THEN t0.c4 COLLATE RTRIM WHEN ((rt1.c6) NOT BETWEEN (t0.c1) AND (rt1.c6)) THEN ((t0.c3) BETWEEN (t0.c0) AND (rt1.c3)) WHEN ((t0.c3)LIKE(t0.c4)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)) END ASC, ((t0.c4)IS NOT(rt1.c5)) COLLATE BINARY ASC  NULLS FIRST, ((((CASE WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c0 THEN t0.c4 END)OR(((rt1.c3)|(rt1.c2)))))AND(rt1.c1 COLLATE BINARY)) ASC;
SELECT * FROM t0 NOT INDEXED, rt1 WHERE ((((((1974932581, rt1.c3, t0.c4)) NOT BETWEEN ((CAST(rt1.c5 AS BLOB), x'' COLLATE RTRIM, t0.c4)) AND ((((t0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4)), (((rt1.c6, t0.c1))>((rt1.c6, t0.c2))), ((t0.c4) NOT BETWEEN (rt1.c0) AND (t0.c2))))))AND(((CASE WHEN t0.c0 THEN x'' WHEN rt1.c5 THEN t0.c1 WHEN rt1.c5 THEN rt1.c6 WHEN NULL THEN rt1.c4 ELSE rt1.c1 END)>=(SUBSTR(t0.c3, rt1.c6)))))) ORDER BY UNLIKELY(rt1.c6) COLLATE NOCASE  NULLS FIRST;
SELECT ALL MAX(rt1.c3) FROM rt1 WHERE ((- (CAST(rt1.c5 AS REAL)))) ORDER BY (((rt1.c4)OR(rt1.c1)) IN (CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 WHEN NULL THEN rt1.c5 ELSE rt1.c6 END))  NULLS LAST, (((((rt1.c2, rt1.c1))>((rt1.c1, rt1.c0))))>>(rt1.c5))  NULLS FIRST, CASE WHEN ((rt1.c3)|(rt1.c6)) THEN ((rt1.c4)IS NOT(rt1.c1)) END  NULLS FIRST;
SELECT MAX(rt1.c3) FROM rt1 WHERE ((((- (CAST(rt1.c5 AS REAL))))AND(((((((((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c4)))OR(CAST(rt1.c3 AS TEXT))))OR(((((NULL)OR(NULL)))OR(rt1.c4)))))OR((NOT (rt1.c3))))))) ORDER BY ((rt1.c4) BETWEEN (((rt1.c2) ISNULL)) AND (((rt1.c3)<<(rt1.c4)))) DESC, x'' DESC, ((((rt1.c3)>>(rt1.c3)))-((((rt1.c3, rt1.c3, rt1.c5)) NOT BETWEEN ((rt1.c1, rt1.c4, rt1.c5)) AND ((rt1.c1, rt1.c1, rt1.c5)))));
SELECT ALL COUNT(*) FROM t0, rt1 NOT INDEXED WHERE ((NULL IN (CASE rt1.c0  WHEN t0.c1 THEN t0.c4 WHEN rt1.c2 THEN t0.c4 WHEN rt1.c4 THEN t0.c4 ELSE rt1.c0 END))) ORDER BY (((((((((((((+ (t0.c0)))AND(json_remove(t0.c3, t0.c1, rt1.c1))))AND(((((t0.c3)OR(rt1.c4)))AND(rt1.c0)))))AND((((rt1.c6, rt1.c5, '')) BETWEEN ((rt1.c5, rt1.c3, rt1.c6)) AND ((rt1.c4, t0.c4, rt1.c6))))))OR(((t0.c1)LIKE(rt1.c0)))))AND(((rt1.c1)-(rt1.c5)))))OR(((((((rt1.c2)AND(t0.c3)))OR(rt1.c0)))AND(t0.c1)))) DESC;
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((NULL IN (CASE rt1.c0  WHEN t0.c1 THEN t0.c4 WHEN rt1.c2 THEN t0.c4 WHEN rt1.c4 THEN t0.c4 ELSE rt1.c0 END))) ORDER BY (((rt1.c3 IN ()))LIKE(rt1.c6 COLLATE NOCASE)) DESC  NULLS FIRST, x'f6d6' COLLATE NOCASE COLLATE BINARY DESC;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (NULL);
SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE (NULL) ORDER BY CASE WHEN CASE x'87'  WHEN rt1.c4 THEN -2.29228074E8 ELSE rt1.c4 END THEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5)) WHEN ((rt1.c6) BETWEEN (rt1.c5) AND (t0.c2)) THEN NULL COLLATE NOCASE WHEN ((t0.c2) IS FALSE) THEN ((rt1.c6)<=(rt1.c3)) END DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE (((((((((rt1.c1)OR(rt1.c5)))AND(t0.c0)))OR(t0.c0)))IS(rt1.c3))) ORDER BY CASE WHEN CASE x'87'  WHEN rt1.c4 THEN -2.29228074E8 ELSE rt1.c4 END THEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5)) WHEN ((rt1.c6) BETWEEN (rt1.c5) AND (t0.c2)) THEN NULL COLLATE NOCASE WHEN ((t0.c2) IS FALSE) THEN ((rt1.c6)<=(rt1.c3)) END DESC  NULLS LAST;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (NULL);
SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE (NULL) ORDER BY CASE WHEN CASE x'87'  WHEN rt1.c4 THEN -2.29228074E8 ELSE rt1.c4 END THEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5)) WHEN ((rt1.c6) BETWEEN (rt1.c5) AND (t0.c2)) THEN NULL COLLATE NOCASE WHEN ((t0.c2) IS FALSE) THEN ((rt1.c6)<=(rt1.c3)) END DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE (((((((((rt1.c1)OR(rt1.c5)))AND(t0.c0)))OR(t0.c0)))IS(rt1.c3))) ORDER BY CASE WHEN CASE x'87'  WHEN rt1.c4 THEN -2.29228074E8 ELSE rt1.c4 END THEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5)) WHEN ((rt1.c6) BETWEEN (rt1.c5) AND (t0.c2)) THEN NULL COLLATE NOCASE WHEN ((t0.c2) IS FALSE) THEN ((rt1.c6)<=(rt1.c3)) END DESC  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN rt1 ON (- (IFNULL(t0.c4, t0.c1))) WHERE (((((CAST(rt1.c2 AS BLOB))OR(CAST(t0.c1 AS REAL))))OR(((rt1.c0)<=(t0.c2))))) ORDER BY ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (0X3a549b8f) AND ((((t0.c2, rt1.c5))>=((t0.c1, rt1.c3))))) ASC, ((CAST(t0.c1 AS TEXT))%(t0.c2 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT * FROM t0 INNER JOIN rt1 ON (- (IFNULL(t0.c4, t0.c1))) WHERE (((((((CAST(rt1.c2 AS BLOB))OR(CAST(t0.c1 AS REAL))))OR(((rt1.c0)<=(t0.c2)))))AND(((TRIM(DISTINCT rt1.c0, rt1.c0)) IS FALSE)))) ORDER BY (+ (CASE t0.c4  WHEN rt1.c5 THEN t0.c3 END)) ASC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t0 INNER JOIN rt1 ON (- (IFNULL(t0.c4, t0.c1))) WHERE (((((CAST(rt1.c2 AS BLOB))OR(CAST(t0.c1 AS REAL))))OR(((rt1.c0)<=(t0.c2))))) ORDER BY ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (0X3a549b8f) AND ((((t0.c2, rt1.c5))>=((t0.c1, rt1.c3))))) ASC, ((CAST(t0.c1 AS TEXT))%(t0.c2 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT * FROM t0 INNER JOIN rt1 ON (- (IFNULL(t0.c4, t0.c1))) WHERE (((((((CAST(rt1.c2 AS BLOB))OR(CAST(t0.c1 AS REAL))))OR(((rt1.c0)<=(t0.c2)))))AND(((TRIM(DISTINCT rt1.c0, rt1.c0)) IS FALSE)))) ORDER BY (+ (CASE t0.c4  WHEN rt1.c5 THEN t0.c3 END)) ASC  NULLS LAST LIMIT 0X1;
SELECT * FROM rt1 WHERE (((((((((((rt1.c0)OR(((rt1.c6) ISNULL))))OR(CASE rt1.c5  WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c6 WHEN NULL THEN rt1.c5 WHEN rt1.c1 THEN rt1.c4 END)))OR(((rt1.c4)GLOB(rt1.c4)))))OR((rt1.c0 IN (NULL)))))OR(((rt1.c6)/(rt1.c6)))));
SELECT * FROM rt1 WHERE (((((((((((((rt1.c0)OR(((rt1.c6) ISNULL))))OR(CASE rt1.c5  WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c6 WHEN NULL THEN rt1.c5 WHEN rt1.c1 THEN rt1.c4 END)))OR(((rt1.c4)GLOB(rt1.c4)))))OR((rt1.c0 IN (NULL)))))OR(((rt1.c6)/(rt1.c6)))))AND((((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4))))<=((((rt1.c3)!=(rt1.c6)))))))) LIMIT 0x3 INTERSECT SELECT ALL * FROM rt1 WHERE (((rt1.c5)>>((- (rt1.c0))))) LIMIT 0x3;
SELECT * FROM rt1 WHERE (((((((((((rt1.c0)OR(((rt1.c6) ISNULL))))OR(CASE rt1.c5  WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c6 WHEN NULL THEN rt1.c5 WHEN rt1.c1 THEN rt1.c4 END)))OR(((rt1.c4)GLOB(rt1.c4)))))OR((rt1.c0 IN (NULL)))))OR(((rt1.c6)/(rt1.c6)))));
SELECT * FROM rt1 WHERE (((((((((((((rt1.c0)OR(((rt1.c6) ISNULL))))OR(CASE rt1.c5  WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c6 WHEN NULL THEN rt1.c5 WHEN rt1.c1 THEN rt1.c4 END)))OR(((rt1.c4)GLOB(rt1.c4)))))OR((rt1.c0 IN (NULL)))))OR(((rt1.c6)/(rt1.c6)))))AND((((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4))))<=((((rt1.c3)!=(rt1.c6)))))))) LIMIT 0x3 INTERSECT SELECT ALL * FROM rt1 WHERE (((rt1.c5)>>((- (rt1.c0))))) LIMIT 0x3;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c0, rt1.c3, t0.c4, x'6c')) NOT BETWEEN ((CASE rt1.c2  WHEN rt1.c0 THEN t0.c1 WHEN t0.c1 THEN rt1.c2 ELSE rt1.c0 END, CAST(x'' AS BLOB), ((rt1.c1) NOT NULL), CAST(t0.c0 AS BLOB))) AND ((((rt1.c4)<(t0.c4)), ((rt1.c4)!=(rt1.c2)), ((rt1.c5)|(NULL)), CASE rt1.c6  WHEN t0.c2 THEN rt1.c5 WHEN t0.c1 THEN t0.c1 ELSE rt1.c1 END))));
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c0, rt1.c3, t0.c4, x'6c')) NOT BETWEEN ((CASE rt1.c2  WHEN rt1.c0 THEN t0.c1 WHEN t0.c1 THEN rt1.c2 ELSE rt1.c0 END, CAST(x'' AS BLOB), ((rt1.c1) NOT NULL), CAST(t0.c0 AS BLOB))) AND ((((rt1.c4)<(t0.c4)), ((rt1.c4)<>(rt1.c2)), ((rt1.c5)|(NULL)), CASE rt1.c6  WHEN t0.c2 THEN rt1.c5 WHEN t0.c1 THEN t0.c1 ELSE rt1.c1 END)))) ORDER BY (rt1.c1 IN (rt1.c3, rt1.c2)) COLLATE RTRIM DESC, (rt1.c0 IN (rt1.c6, rt1.c0)), 9.96534958E8 DESC, ((- (t0.c4)) IN ()) LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c0, rt1.c3, t0.c4, x'6c')) NOT BETWEEN ((CASE rt1.c2  WHEN rt1.c0 THEN t0.c1 WHEN t0.c1 THEN rt1.c2 ELSE rt1.c0 END, CAST(x'' AS BLOB), ((rt1.c1) NOT NULL), CAST(t0.c0 AS BLOB))) AND ((((rt1.c4)<(t0.c4)), ((rt1.c4)!=(rt1.c2)), ((rt1.c5)|(NULL)), CASE rt1.c6  WHEN t0.c2 THEN rt1.c5 WHEN t0.c1 THEN t0.c1 ELSE rt1.c1 END))));
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c0, rt1.c3, t0.c4, x'6c')) NOT BETWEEN ((CASE rt1.c2  WHEN rt1.c0 THEN t0.c1 WHEN t0.c1 THEN rt1.c2 ELSE rt1.c0 END, CAST(x'' AS BLOB), ((rt1.c1) NOT NULL), CAST(t0.c0 AS BLOB))) AND ((((rt1.c4)<(t0.c4)), ((rt1.c4)<>(rt1.c2)), ((rt1.c5)|(NULL)), CASE rt1.c6  WHEN t0.c2 THEN rt1.c5 WHEN t0.c1 THEN t0.c1 ELSE rt1.c1 END)))) ORDER BY (rt1.c1 IN (rt1.c3, rt1.c2)) COLLATE RTRIM DESC, (rt1.c0 IN (rt1.c6, rt1.c0)), 9.96534958E8 DESC, ((- (t0.c4)) IN ()) LIMIT 1;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((t0.c2)AND((+ (((t0.c0) NOTNULL)))))) ORDER BY (((t0.c2 IN (x'fe', t0.c2)))IS NOT((((t0.c4, 'J382 972-474T/!')) BETWEEN ((t0.c4, t0.c0)) AND ((t0.c4, t0.c3)))))  NULLS FIRST, '-226271228'  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((+ ((('Qr')%(x''))))) ORDER BY (((t0.c2 IN (x'fe', t0.c2)))IS NOT((((t0.c4, 'J382 972-474T/!')) BETWEEN ((t0.c4, t0.c0)) AND ((t0.c4, t0.c3)))))  NULLS FIRST, '-226271228'  NULLS LAST LIMIT 3;
SELECT ALL * FROM t0, rt1 WHERE (((((0.9879835981421284)AND(CASE WHEN rt1.c6 THEN t0.c1 END)))AND(((rt1.c1) NOT BETWEEN (t0.c2) AND (rt1.c3))))) ORDER BY rt1.c1 ASC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (((((((0.9879835981421284)AND(CASE WHEN rt1.c6 THEN t0.c1 END)))AND(((rt1.c1) NOT BETWEEN (t0.c2) AND (rt1.c3)))))AND((((NOT (t0.c1))) IS TRUE)))) ORDER BY rt1.c1 ASC  NULLS LAST INTERSECT SELECT * FROM t0, rt1 WHERE ((((t0.c3 IN (rt1.c5))) ISNULL)) ORDER BY rt1.c1 ASC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (((((0.9879835981421284)AND(CASE WHEN rt1.c6 THEN t0.c1 END)))AND(((rt1.c1) NOT BETWEEN (t0.c2) AND (rt1.c3))))) ORDER BY rt1.c1 ASC  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (((((((0.9879835981421284)AND(CASE WHEN rt1.c6 THEN t0.c1 END)))AND(((rt1.c1) NOT BETWEEN (t0.c2) AND (rt1.c3)))))AND((((NOT (t0.c1))) IS TRUE)))) ORDER BY rt1.c1 ASC  NULLS LAST INTERSECT SELECT * FROM t0, rt1 WHERE ((((t0.c3 IN (rt1.c5))) ISNULL)) ORDER BY rt1.c1 ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((- (t0.c3 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE ((- (t0.c3 COLLATE NOCASE))) ORDER BY ((((((((UNLIKELY(DISTINCT t0.c2))OR(((t0.c1)LIKE(t0.c1)))))AND(t0.c3)))AND(((t0.c2) IS TRUE))))AND(t0.c2 COLLATE NOCASE)) ASC  NULLS FIRST, ((x'')<<(((0.11972721212965909) IS TRUE))) ASC LIMIT 2;
SELECT ALL * FROM t0 WHERE ((- (t0.c3 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE ((- (t0.c3 COLLATE NOCASE))) ORDER BY ((((((((UNLIKELY(DISTINCT t0.c2))OR(((t0.c1)LIKE(t0.c1)))))AND(t0.c3)))AND(((t0.c2) IS TRUE))))AND(t0.c2 COLLATE NOCASE)) ASC  NULLS FIRST, ((x'')<<(((0.11972721212965909) IS TRUE))) ASC LIMIT 2;
SELECT ALL MIN(t0.c3) FROM t0 WHERE (((((t0.c2)<<(t0.c1))) NOT BETWEEN (t0.c0) AND (0.2838282136048207)));
SELECT DISTINCT MIN(t0.c3) FROM t0 WHERE (((((((t0.c2)<<(t0.c1))) NOT BETWEEN (t0.c0) AND (0.2838282136048207)))AND(CAST(((t0.c3) BETWEEN (NULL) AND (t0.c4)) AS INTEGER)))) INTERSECT SELECT DISTINCT MIN(t0.c3) FROM t0 WHERE ((((- (t0.c1)))>>(((t0.c3)=(t0.c1)))));
SELECT ALL MIN(t0.c1) FROM t0 WHERE (t0.c2);
SELECT ALL MIN(t0.c1) FROM t0 WHERE (((t0.c2)AND((((x'62b8', CASE t0.c0  WHEN t0.c3 THEN t0.c3 ELSE 'o-mBrQ' END, ((t0.c3)|(t0.c0))))<>((((t0.c1)!=(t0.c0)), ((x'') IS FALSE), (t0.c3 IN (t0.c1)))))))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c3 END) IS TRUE);
SELECT * FROM t0 WHERE ((((t0.c2)) BETWEEN ((t0.c3)) AND ((t0.c3 COLLATE RTRIM))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c2)) BETWEEN ((t0.c3)) AND ((t0.c3 COLLATE RTRIM)))) ORDER BY ((CASE WHEN t0.c4 THEN t0.c3 WHEN t0.c1 THEN 'C' END) NOT BETWEEN ((~ (t0.c0))) AND ((((t0.c4, t0.c2)) NOT BETWEEN ((t0.c0, t0.c2)) AND ((t0.c2, t0.c2))))), (((((((t0.c2, t0.c2))>((t0.c1, t0.c4))))AND((t0.c0 IN (t0.c2, NULL)))))AND((t0.c3 IN ())))  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c2)) BETWEEN ((t0.c3)) AND ((t0.c3 COLLATE RTRIM))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c2)) BETWEEN ((t0.c3)) AND ((t0.c3 COLLATE RTRIM)))) ORDER BY ((CASE WHEN t0.c4 THEN t0.c3 WHEN t0.c1 THEN 'C' END) NOT BETWEEN ((~ (t0.c0))) AND ((((t0.c4, t0.c2)) NOT BETWEEN ((t0.c0, t0.c2)) AND ((t0.c2, t0.c2))))), (((((((t0.c2, t0.c2))>((t0.c1, t0.c4))))AND((t0.c0 IN (t0.c2, NULL)))))AND((t0.c3 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (CASE (((t0.c2, rt1.c1)) BETWEEN ((rt1.c3, rt1.c1)) AND ((rt1.c3, t0.c1)))  WHEN ((((((((((((((((x'')OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c3)))OR(t0.c2)))AND(rt1.c3)))AND(t0.c2)))AND(rt1.c4)))OR(rt1.c5)) THEN CASE WHEN t0.c3 THEN rt1.c4 WHEN t0.c4 THEN t0.c3 WHEN t0.c2 THEN t0.c0 ELSE rt1.c4 END WHEN rt1.c6 COLLATE BINARY THEN CAST(rt1.c3 AS BLOB) ELSE ((rt1.c4)-(t0.c1)) END) ORDER BY CASE ((NULL) NOTNULL)  WHEN rt1.c2 COLLATE RTRIM THEN rt1.c3 WHEN ((t0.c1)<=(rt1.c3)) THEN json_extract(rt1.c0, rt1.c5, t0.c0) END;
SELECT DISTINCT * FROM rt1, t0 WHERE (((CASE (((t0.c2, rt1.c1)) BETWEEN ((rt1.c3, rt1.c1)) AND ((rt1.c3, t0.c1)))  WHEN ((((((((((((((((x'')OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c3)))OR(t0.c2)))AND(rt1.c3)))AND(t0.c2)))AND(rt1.c4)))OR(rt1.c5)) THEN CASE WHEN t0.c3 THEN rt1.c4 WHEN t0.c4 THEN t0.c3 WHEN t0.c2 THEN t0.c0 ELSE rt1.c4 END WHEN rt1.c6 COLLATE BINARY THEN CAST(rt1.c3 AS BLOB) ELSE ((rt1.c4)-(t0.c1)) END)AND((((rt1.c4) IS FALSE) IN (((rt1.c6) NOT BETWEEN (t0.c2) AND (t0.c2)), (+ (rt1.c6))))))) ORDER BY ((((t0.c1)GLOB(x'140a')))IS NOT(((t0.c0) NOTNULL)));
SELECT ALL * FROM rt1, t0 WHERE (CASE (((t0.c2, rt1.c1)) BETWEEN ((rt1.c3, rt1.c1)) AND ((rt1.c3, t0.c1)))  WHEN ((((((((((((((((x'')OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c3)))OR(t0.c2)))AND(rt1.c3)))AND(t0.c2)))AND(rt1.c4)))OR(rt1.c5)) THEN CASE WHEN t0.c3 THEN rt1.c4 WHEN t0.c4 THEN t0.c3 WHEN t0.c2 THEN t0.c0 ELSE rt1.c4 END WHEN rt1.c6 COLLATE BINARY THEN CAST(rt1.c3 AS BLOB) ELSE ((rt1.c4)-(t0.c1)) END) ORDER BY CASE ((NULL) NOTNULL)  WHEN rt1.c2 COLLATE RTRIM THEN rt1.c3 WHEN ((t0.c1)<=(rt1.c3)) THEN json_extract(rt1.c0, rt1.c5, t0.c0) END;
SELECT ALL MIN(t0.c4) FROM t0 WHERE ((NOT (NULL)));
SELECT DISTINCT MIN(t0.c4) FROM t0 WHERE ((((NOT (NULL)))AND(((NULL) BETWEEN ('
W_R') AND (((t0.c0) NOT NULL)))))) ORDER BY CASE WHEN CASE t0.c1  WHEN t0.c3 THEN t0.c3 WHEN t0.c3 THEN t0.c2 ELSE t0.c4 END THEN ('NZ' IN (NULL, t0.c2)) WHEN ((t0.c1)>(t0.c3)) THEN t0.c4 COLLATE RTRIM WHEN t0.c2 COLLATE BINARY THEN ((t0.c3)&(t0.c2)) END ASC, (((((((NOT (t0.c2)))AND(CAST(t0.c2 AS TEXT))))AND(((NULL)IS(t0.c0)))))OR((t0.c2 IN ())));
SELECT * FROM t0 INNER JOIN rt1 ON (CAST(t0.c0 AS REAL) IN (rt1.c4 COLLATE BINARY)) WHERE (((t0.c0) NOT NULL));
SELECT * FROM t0 INNER JOIN rt1 ON (CAST(t0.c0 AS REAL) IN (rt1.c4 COLLATE BINARY)) WHERE (((t0.c0) NOT NULL)) ORDER BY ((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c6)))AND(rt1.c2)))OR(rt1.c6))) IS TRUE) ASC, LIKELIHOOD(DISTINCT UPPER(rt1.c3), ((((rt1.c6)OR(t0.c0)))OR(rt1.c1))) ASC, rt1.c2 ASC  NULLS LAST;
SELECT * FROM t0 INNER JOIN rt1 ON (CAST(t0.c0 AS REAL) IN (rt1.c4 COLLATE BINARY)) WHERE (((t0.c0) NOT NULL));
SELECT * FROM t0 INNER JOIN rt1 ON (CAST(t0.c0 AS REAL) IN (rt1.c4 COLLATE BINARY)) WHERE (((t0.c0) NOT NULL)) ORDER BY ((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c6)))AND(rt1.c2)))OR(rt1.c6))) IS TRUE) ASC, LIKELIHOOD(DISTINCT UPPER(rt1.c3), ((((rt1.c6)OR(t0.c0)))OR(rt1.c1))) ASC, rt1.c2 ASC  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (((CAST(rt1.c6 AS BLOB))*(((t0.c4) NOTNULL)))) ORDER BY '355348664' ASC  NULLS FIRST, CASE CASE WHEN rt1.c0 THEN rt1.c0 WHEN t0.c3 THEN t0.c0 WHEN t0.c2 THEN rt1.c3 ELSE NULL END  WHEN ((rt1.c4) NOT BETWEEN (t0.c1) AND (rt1.c1)) THEN ((t0.c4)=(rt1.c0)) WHEN LIKELIHOOD(t0.c3, rt1.c0) THEN ((((((((0.703425257139912)AND(t0.c0)))AND(rt1.c6)))OR(t0.c1)))AND(rt1.c4)) WHEN ((rt1.c4)!=(rt1.c6)) THEN ((rt1.c4) BETWEEN (t0.c4) AND (rt1.c5)) ELSE ((((((((rt1.c5)OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c5)))AND(t0.c4)) END;
SELECT ALL * FROM t0, rt1 WHERE (((((CAST(rt1.c6 AS BLOB))*(((t0.c4) NOTNULL))))AND(((CASE WHEN rt1.c5 THEN rt1.c0 ELSE x'db9e11' END)<>(((rt1.c6)GLOB(t0.c4))))))) ORDER BY '355348664' ASC  NULLS FIRST, CASE CASE WHEN rt1.c0 THEN rt1.c0 WHEN t0.c3 THEN t0.c0 WHEN t0.c2 THEN rt1.c3 ELSE NULL END  WHEN ((rt1.c4) NOT BETWEEN (t0.c1) AND (rt1.c1)) THEN ((t0.c4)=(rt1.c0)) WHEN LIKELIHOOD(t0.c3, rt1.c0) THEN ((((((((0.703425257139912)AND(t0.c0)))AND(rt1.c6)))OR(t0.c1)))AND(rt1.c4)) WHEN ((rt1.c4)<>(rt1.c6)) THEN ((rt1.c4) BETWEEN (t0.c4) AND (rt1.c5)) ELSE ((((((((rt1.c5)OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c5)))AND(t0.c4)) END LIMIT 0x0;
SELECT * FROM t0, rt1 WHERE (((CAST(rt1.c6 AS BLOB))*(((t0.c4) NOTNULL)))) ORDER BY '355348664' ASC  NULLS FIRST, CASE CASE WHEN rt1.c0 THEN rt1.c0 WHEN t0.c3 THEN t0.c0 WHEN t0.c2 THEN rt1.c3 ELSE NULL END  WHEN ((rt1.c4) NOT BETWEEN (t0.c1) AND (rt1.c1)) THEN ((t0.c4)=(rt1.c0)) WHEN LIKELIHOOD(t0.c3, rt1.c0) THEN ((((((((0.703425257139912)AND(t0.c0)))AND(rt1.c6)))OR(t0.c1)))AND(rt1.c4)) WHEN ((rt1.c4)!=(rt1.c6)) THEN ((rt1.c4) BETWEEN (t0.c4) AND (rt1.c5)) ELSE ((((((((rt1.c5)OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c5)))AND(t0.c4)) END;
SELECT * FROM t0 WHERE (((((t0.c3)) BETWEEN ((t0.c1)) AND ((t0.c3))) IN ()));
SELECT * FROM t0 WHERE (((((((t0.c3)) BETWEEN ((t0.c1)) AND ((t0.c3))) IN ()))AND((((t0.c4, t0.c3)) BETWEEN ((t0.c1, t0.c1)) AND ((t0.c0, t0.c0))) COLLATE NOCASE))) ORDER BY t0.c0 ASC  NULLS LAST, t0.c0 ASC;
SELECT * FROM t0 WHERE (((((t0.c3)) BETWEEN ((t0.c1)) AND ((t0.c3))) IN ()));
SELECT * FROM t0 WHERE (((((((t0.c3)) BETWEEN ((t0.c1)) AND ((t0.c3))) IN ()))AND((((t0.c4, t0.c3)) BETWEEN ((t0.c1, t0.c1)) AND ((t0.c0, t0.c0))) COLLATE NOCASE))) ORDER BY t0.c0 ASC  NULLS LAST, t0.c0 ASC;
SELECT * FROM rt1, t0 WHERE ((+ (rt1.c4)));
SELECT DISTINCT * FROM rt1, t0 WHERE ((+ (rt1.c4))) ORDER BY (((((rt1.c5, t0.c0, t0.c4)) BETWEEN ((rt1.c3, rt1.c5, rt1.c5)) AND ((rt1.c3, t0.c3, t0.c0)))) NOTNULL) ASC, json_type(NULL) DESC;
SELECT * FROM rt1, t0 WHERE ((+ (rt1.c4)));
SELECT DISTINCT * FROM rt1, t0 WHERE ((+ (rt1.c4))) ORDER BY (((((rt1.c5, t0.c0, t0.c4)) BETWEEN ((rt1.c3, rt1.c5, rt1.c5)) AND ((rt1.c3, t0.c3, t0.c0)))) NOTNULL) ASC, json_type(NULL) DESC;
SELECT ALL MIN(t0.c4) FROM rt1, t0 WHERE (((((((((((rt1.c2)AND(t0.c1)))OR(rt1.c2)))OR(rt1.c3)))AND(t0.c3)))*(((t0.c3)<=(t0.c1))))) ORDER BY UNLIKELY(DISTINCT rt1.c0) COLLATE NOCASE  NULLS FIRST, ((x'8caf')||(0.9187571754710213))  NULLS FIRST;
SELECT DISTINCT MIN(t0.c4) FROM rt1, t0 WHERE (((((((((((((rt1.c2)AND(t0.c1)))OR(rt1.c2)))OR(rt1.c3)))AND(t0.c3)))*(((t0.c3)<=(t0.c1)))))AND(((((((rt1.c3)*(rt1.c0)))OR(((t0.c2)LIKE(rt1.c3)))))OR(rt1.c2 COLLATE RTRIM))))) ORDER BY TRIM(DISTINCT (((0.9649939493234985))<=((rt1.c0)))) LIMIT 4;
SELECT COUNT(*) FROM rt1 WHERE (UPPER(rt1.c4) COLLATE BINARY);
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (UPPER(rt1.c4) COLLATE BINARY) LIMIT 0x1;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((('2025863801')) BETWEEN ((rt1.c2)) AND ((NULL))) IN (CASE t0.c4  WHEN 0.9388799649529507 THEN rt1.c5 WHEN x'' THEN t0.c2 ELSE rt1.c0 END))) ORDER BY CAST(((((rt1.c2)AND(t0.c2)))OR(rt1.c4)) AS INTEGER) ASC  NULLS LAST, ((((rt1.c3) NOTNULL)) IS TRUE) DESC;
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((('2025863801')) BETWEEN ((rt1.c2)) AND ((NULL))) IN (CASE t0.c4  WHEN 0.9388799649529507 THEN rt1.c5 WHEN x'' THEN t0.c2 ELSE rt1.c0 END)))AND((~ (CASE rt1.c2  WHEN t0.c3 THEN t0.c3 ELSE rt1.c5 END))))) ORDER BY CAST(((((rt1.c2)AND(t0.c2)))OR(rt1.c4)) AS INTEGER) ASC  NULLS LAST, ((((rt1.c3) NOTNULL)) IS TRUE) DESC INTERSECT SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((+ ((rt1.c0 IN ())))) ORDER BY CAST(((((rt1.c2)AND(t0.c2)))OR(rt1.c4)) AS INTEGER) ASC  NULLS LAST, ((((rt1.c3) NOTNULL)) IS TRUE) DESC;
SELECT MAX(t0.c0) FROM t0 WHERE ((((- (t0.c4)))=((((t0.c1, t0.c0)) NOT BETWEEN ((2.015583807E9, t0.c0)) AND ((t0.c3, t0.c1))))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((- (t0.c4)))==((((t0.c1, t0.c0)) NOT BETWEEN ((2.015583807E9, t0.c0)) AND ((t0.c3, t0.c1))))));
SELECT MIN(t0.c3) FROM rt1 NATURAL JOIN t0 WHERE (CAST(0.6062187634562172 COLLATE NOCASE AS INTEGER));
SELECT DISTINCT MIN(t0.c3) FROM rt1 NATURAL JOIN t0 WHERE (((CAST(0.6062187634562172 COLLATE NOCASE AS INTEGER))AND(((LOWER(rt1.c4)) IS TRUE)))) ORDER BY ((((rt1.c1) IS FALSE))||((- (rt1.c1)))) ASC, (NULL IN ()) DESC  NULLS FIRST, (((((rt1.c5, t0.c2)) BETWEEN ((t0.c0, rt1.c0)) AND ((t0.c0, x''))))>=((((-1.9806983E9, rt1.c2)) BETWEEN ((t0.c2, rt1.c6)) AND ((rt1.c2, x'af48')))))  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (((ROUND(rt1.c3, t0.c2)) NOTNULL)) ORDER BY (((((rt1.c1))<((t0.c4))))>>(rt1.c5)) DESC, (~ (((((t0.c2)AND(t0.c2)))OR('-856217189'))))  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (((ROUND(rt1.c3, t0.c2)) NOTNULL)) ORDER BY ((((t0.c4) NOT BETWEEN (t0.c0) AND (rt1.c1))) NOT BETWEEN ((((rt1.c1, rt1.c1, rt1.c6, 0x56cdacc7, rt1.c3)) BETWEEN (('18393758', t0.c4, rt1.c6, t0.c0, rt1.c4)) AND ((rt1.c0, '0.9982487031170127', rt1.c2, t0.c3, t0.c0)))) AND (rt1.c4 COLLATE RTRIM)) ASC  NULLS LAST, ((-1.701853655E9) IS FALSE)  NULLS LAST INTERSECT SELECT ALL * FROM t0, rt1 WHERE (((t0.c4) IS TRUE)) ORDER BY ((((t0.c4) NOT BETWEEN (t0.c0) AND (rt1.c1))) NOT BETWEEN ((((rt1.c1, rt1.c1, rt1.c6, 1456319687, rt1.c3)) BETWEEN (('18393758', t0.c4, rt1.c6, t0.c0, rt1.c4)) AND ((rt1.c0, '0.9982487031170127', rt1.c2, t0.c3, t0.c0)))) AND (rt1.c4 COLLATE RTRIM)) ASC  NULLS LAST, ((-1.701853655E9) IS FALSE)  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (((ROUND(rt1.c3, t0.c2)) NOTNULL)) ORDER BY (((((rt1.c1))<((t0.c4))))>>(rt1.c5)) DESC, (~ (((((t0.c2)AND(t0.c2)))OR('-856217189'))))  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (((ROUND(rt1.c3, t0.c2)) NOTNULL)) ORDER BY ((((t0.c4) NOT BETWEEN (t0.c0) AND (rt1.c1))) NOT BETWEEN ((((rt1.c1, rt1.c1, rt1.c6, 0x56cdacc7, rt1.c3)) BETWEEN (('18393758', t0.c4, rt1.c6, t0.c0, rt1.c4)) AND ((rt1.c0, '0.9982487031170127', rt1.c2, t0.c3, t0.c0)))) AND (rt1.c4 COLLATE RTRIM)) ASC  NULLS LAST, ((-1.701853655E9) IS FALSE)  NULLS LAST INTERSECT SELECT ALL * FROM t0, rt1 WHERE (((t0.c4) IS TRUE)) ORDER BY ((((t0.c4) NOT BETWEEN (t0.c0) AND (rt1.c1))) NOT BETWEEN ((((rt1.c1, rt1.c1, rt1.c6, 1456319687, rt1.c3)) BETWEEN (('18393758', t0.c4, rt1.c6, t0.c0, rt1.c4)) AND ((rt1.c0, '0.9982487031170127', rt1.c2, t0.c3, t0.c0)))) AND (rt1.c4 COLLATE RTRIM)) ASC  NULLS LAST, ((-1.701853655E9) IS FALSE)  NULLS LAST;
SELECT ALL MAX(rt1.c1) FROM t0, rt1 WHERE (rt1.c3);
SELECT DISTINCT MAX(rt1.c1) FROM t0, rt1 WHERE (rt1.c3) ORDER BY rt1.c5 LIMIT 2 INTERSECT SELECT DISTINCT MAX(rt1.c1) FROM t0, rt1 WHERE (CASE ((t0.c4)IS NOT(t0.c1))  WHEN (NOT (rt1.c5)) THEN (((rt1.c4, rt1.c6)) BETWEEN ((rt1.c0, t0.c4)) AND ((t0.c1, x'e087c4'))) END) ORDER BY rt1.c5 LIMIT 0x2;
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT CAST(t0.c2 AS BLOB))) ORDER BY CAST(((t0.c4) NOT NULL) AS BLOB), (NOT (((t0.c0) NOT BETWEEN (t0.c4) AND (t0.c0)))) DESC, ((((t0.c3)AND(t0.c3))) IS FALSE) ASC  NULLS FIRST, x'2f' DESC;
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT CAST(t0.c2 AS BLOB))) ORDER BY CAST(((t0.c4) NOT NULL) AS BLOB), (NOT (((t0.c0) NOT BETWEEN (t0.c4) AND (t0.c0)))) DESC, ((((t0.c3)AND(t0.c3))) IS FALSE) ASC  NULLS FIRST, x'2f' DESC LIMIT 0;
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT CAST(t0.c2 AS BLOB))) ORDER BY CAST(((t0.c4) NOT NULL) AS BLOB), (NOT (((t0.c0) NOT BETWEEN (t0.c4) AND (t0.c0)))) DESC, ((((t0.c3)AND(t0.c3))) IS FALSE) ASC  NULLS FIRST, x'2f' DESC;
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT CAST(t0.c2 AS BLOB))) ORDER BY CAST(((t0.c4) NOT NULL) AS BLOB), (NOT (((t0.c0) NOT BETWEEN (t0.c4) AND (t0.c0)))) DESC, ((((t0.c3)AND(t0.c3))) IS FALSE) ASC  NULLS FIRST, x'2f' DESC LIMIT 0;
SELECT ALL MIN(t0.c1) FROM rt1 LEFT OUTER JOIN t0 ON NULL WHERE (CASE t0.c1  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c2 THEN x'606816c1' WHEN t0.c3 THEN t0.c4 WHEN t0.c1 THEN rt1.c6 ELSE rt1.c3 END COLLATE RTRIM);
SELECT ALL MIN(t0.c1) FROM rt1 INNER JOIN t0 ON NULL WHERE (((CASE t0.c1  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c2 THEN x'606816c1' WHEN t0.c3 THEN t0.c4 WHEN t0.c1 THEN rt1.c6 ELSE rt1.c3 END COLLATE RTRIM)AND(0.7903180941762418))) ORDER BY CASE WHEN CASE WHEN rt1.c2 THEN t0.c3 END THEN CASE NULL  WHEN rt1.c2 THEN t0.c1 ELSE rt1.c6 END ELSE ((rt1.c4)GLOB(rt1.c6)) END, ((CASE x''  WHEN t0.c1 THEN t0.c4 WHEN '-1998391137' THEN -33299360 END) ISNULL) ASC  NULLS LAST, DATE((+ (rt1.c3)), t0.c0 COLLATE RTRIM, NULLIF(rt1.c6, rt1.c5)) DESC  NULLS FIRST LIMIT 0x1;
SELECT * FROM t0 WHERE ((NOT (((t0.c0)AND(t0.c0))))) ORDER BY ((t0.c3)LIKE(t0.c2)) COLLATE BINARY COLLATE BINARY  NULLS FIRST, t0.c0  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)AND(t0.c0))))) ORDER BY ((t0.c1)||(((t0.c3) NOTNULL))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((~ (t0.c4 COLLATE RTRIM))) ORDER BY ((t0.c1)||(((t0.c3) NOTNULL))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((NOT (((t0.c0)AND(t0.c0))))) ORDER BY ((t0.c3)LIKE(t0.c2)) COLLATE BINARY COLLATE BINARY  NULLS FIRST, t0.c0  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)AND(t0.c0))))) ORDER BY ((t0.c1)||(((t0.c3) NOTNULL))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((~ (t0.c4 COLLATE RTRIM))) ORDER BY ((t0.c1)||(((t0.c3) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL MIN(t0.c3) FROM t0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c6)) AS INTEGER) WHERE (2.029517459E9);
SELECT MIN(t0.c3) FROM t0 INNER JOIN rt1 ON CAST(((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c6)) AS INTEGER) WHERE (2.029517459E9) INTERSECT SELECT MIN(t0.c3) FROM t0 INNER JOIN rt1 ON CAST(((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c6)) AS INTEGER) WHERE (CAST(((rt1.c6)AND(t0.c4)) AS INTEGER));
SELECT MIN(rt1.c5) FROM rt1 WHERE (((CAST(rt1.c3 AS INTEGER))||(CAST(rt1.c3 AS INTEGER)))) ORDER BY rt1.c5 ASC  NULLS FIRST, (~ (((x'37a7')|(x''))))  NULLS LAST;
SELECT MIN(rt1.c5) FROM rt1 WHERE (((((CAST(rt1.c3 AS INTEGER))||(CAST(rt1.c3 AS INTEGER))))AND(0.7124830930282101))) ORDER BY (NOT (rt1.c1)) COLLATE BINARY;
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD((- (rt1.c3)), ((rt1.c5) BETWEEN (rt1.c6) AND (rt1.c3))));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((LIKELIHOOD((- (rt1.c3)), ((rt1.c5) BETWEEN (rt1.c6) AND (rt1.c3))))AND(CAST(((((((0.518845779075093)AND(rt1.c5)))AND(rt1.c1)))OR(rt1.c1)) AS NUMERIC)))) ORDER BY ((NULL)|(((rt1.c6) NOT NULL))), 0.40529245242496637 ASC INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (0.5429603107142287) ORDER BY ((NULL)|(((rt1.c6) NOT NULL))), 0.40529245242496637 ASC;
SELECT MIN(rt1.c1) FROM rt1 WHERE (rt1.c0);
SELECT DISTINCT MIN(rt1.c1) FROM rt1 WHERE (rt1.c0) ORDER BY ((((((CAST(rt1.c3 AS NUMERIC))AND(rt1.c1)))OR(rt1.c1)))OR((((rt1.c0, rt1.c0)) NOT BETWEEN ((0.314868824012442, rt1.c5)) AND ((rt1.c0, rt1.c5)))))  NULLS LAST;
SELECT MAX(rt1.c6) FROM t0, rt1 WHERE (rt1.c5);
SELECT DISTINCT MAX(rt1.c6) FROM t0, rt1 WHERE (((rt1.c5)AND(rt1.c5))) ORDER BY COALESCE(t0.c0 COLLATE NOCASE, ((rt1.c1)=(0.7592528378227351)), ((0xffffffff88f45aec) IS FALSE)), t0.c0 ASC  NULLS FIRST, rt1.c5 LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt1.c6) FROM t0, rt1 WHERE ((((rt1.c3, t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c1 COLLATE NOCASE, (((NULL, 'J', rt1.c0, rt1.c0, rt1.c3)) BETWEEN ((rt1.c2, rt1.c4, t0.c0, t0.c1, rt1.c5)) AND ((0.8879190938807106, rt1.c5, t0.c0, rt1.c4, rt1.c3))), CASE rt1.c3  WHEN rt1.c4 THEN rt1.c3 WHEN t0.c1 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c1 END, CASE WHEN rt1.c3 THEN t0.c3 WHEN rt1.c3 THEN rt1.c0 END)) AND (((((rt1.c3, rt1.c5, t0.c2)) BETWEEN ((rt1.c3, rt1.c4, t0.c4)) AND ((rt1.c6, t0.c4, rt1.c4))), ((t0.c4)||(t0.c4)), ((t0.c2)|(rt1.c5)), CAST(t0.c0 AS BLOB))))) ORDER BY COALESCE(t0.c0 COLLATE NOCASE, ((rt1.c1)=(0.7592528378227351)), ((0Xffffffff88f45aec) IS FALSE)), t0.c0 ASC  NULLS FIRST, rt1.c5 LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (NULL);
SELECT DISTINCT * FROM t0 WHERE (((NULL)AND((((t0.c0) NOTNULL) IN (((t0.c1) NOT BETWEEN (x'34') AND (t0.c3)), CASE WHEN t0.c2 THEN t0.c0 END, t0.c0))))) ORDER BY ((((NULL)/(t0.c0)))<=(((((((((t0.c1)OR(t0.c1)))OR('i')))OR(t0.c1)))OR(t0.c3)))) ASC, ((t0.c3)<<(JULIANDAY(t0.c3, t0.c1, t0.c2, t0.c3))) DESC  NULLS LAST, CASE ((((((t0.c2)OR(t0.c1)))AND(t0.c0)))AND(t0.c1))  WHEN (((t0.c1, NULL, t0.c1, t0.c4))<((t0.c4, t0.c3, t0.c4, t0.c1))) THEN ((t0.c1) ISNULL) WHEN CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END THEN (NOT (t0.c3)) END INTERSECT SELECT DISTINCT * FROM t0 WHERE ((t0.c1 IN (t0.c4)) COLLATE RTRIM) ORDER BY ((((NULL)/(t0.c0)))<=(((((((((t0.c1)OR(t0.c1)))OR('i')))OR(t0.c1)))OR(t0.c3)))) ASC, ((t0.c3)<<(JULIANDAY(t0.c3, t0.c1, t0.c2, t0.c3))) DESC  NULLS LAST, CASE ((((((t0.c2)OR(t0.c1)))AND(t0.c0)))AND(t0.c1))  WHEN (((t0.c1, NULL, t0.c1, t0.c4))<((t0.c4, t0.c3, t0.c4, t0.c1))) THEN ((t0.c1) ISNULL) WHEN CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END THEN (NOT (t0.c3)) END;
SELECT ALL * FROM t0 WHERE (NULL);
SELECT DISTINCT * FROM t0 WHERE (((NULL)AND((((t0.c0) NOTNULL) IN (((t0.c1) NOT BETWEEN (x'34') AND (t0.c3)), CASE WHEN t0.c2 THEN t0.c0 END, t0.c0))))) ORDER BY ((((NULL)/(t0.c0)))<=(((((((((t0.c1)OR(t0.c1)))OR('i')))OR(t0.c1)))OR(t0.c3)))) ASC, ((t0.c3)<<(JULIANDAY(t0.c3, t0.c1, t0.c2, t0.c3))) DESC  NULLS LAST, CASE ((((((t0.c2)OR(t0.c1)))AND(t0.c0)))AND(t0.c1))  WHEN (((t0.c1, NULL, t0.c1, t0.c4))<((t0.c4, t0.c3, t0.c4, t0.c1))) THEN ((t0.c1) ISNULL) WHEN CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END THEN (NOT (t0.c3)) END INTERSECT SELECT DISTINCT * FROM t0 WHERE ((t0.c1 IN (t0.c4)) COLLATE RTRIM) ORDER BY ((((NULL)/(t0.c0)))<=(((((((((t0.c1)OR(t0.c1)))OR('i')))OR(t0.c1)))OR(t0.c3)))) ASC, ((t0.c3)<<(JULIANDAY(t0.c3, t0.c1, t0.c2, t0.c3))) DESC  NULLS LAST, CASE ((((((t0.c2)OR(t0.c1)))AND(t0.c0)))AND(t0.c1))  WHEN (((t0.c1, NULL, t0.c1, t0.c4))<((t0.c4, t0.c3, t0.c4, t0.c1))) THEN ((t0.c1) ISNULL) WHEN CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END THEN (NOT (t0.c3)) END;
SELECT * FROM t0 WHERE ((((t0.c0) NOT NULL) IN (((t0.c0)<=(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0) NOT NULL) IN (((t0.c0)<=(t0.c0)))))AND(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c4)) COLLATE NOCASE)));
SELECT * FROM t0 WHERE ((((t0.c0) NOT NULL) IN (((t0.c0)<=(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0) NOT NULL) IN (((t0.c0)<=(t0.c0)))))AND(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c4)) COLLATE NOCASE)));
SELECT ALL MIN(rt1.c4) FROM rt1 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN TYPEOF(rt1.c1) WHEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c4 ELSE rt1.c2 END WHEN rt1.c2 COLLATE NOCASE THEN CAST(rt1.c0 AS NUMERIC) ELSE ((rt1.c6)IS NOT(rt1.c3)) END);
SELECT ALL MIN(rt1.c4) FROM rt1 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN TYPEOF(rt1.c1) WHEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c4 ELSE rt1.c2 END WHEN rt1.c2 COLLATE NOCASE THEN CAST(rt1.c0 AS NUMERIC) ELSE ((rt1.c6)IS NOT(rt1.c3)) END);
SELECT * FROM rt1 INNER JOIN t0 ON ((((0Xfffffffff133a494)AND((- (t0.c2)))))AND(CAST(t0.c0 AS BLOB))) WHERE ('');
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ((((-248273772)AND((- (t0.c2)))))AND(CAST(t0.c0 AS BLOB))) WHERE ('') LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ((((-248273772)AND((- (t0.c2)))))AND(CAST(t0.c0 AS BLOB))) WHERE ((+ (t0.c4)) COLLATE BINARY) LIMIT 1;
SELECT * FROM rt1 INNER JOIN t0 ON ((((0Xfffffffff133a494)AND((- (t0.c2)))))AND(CAST(t0.c0 AS BLOB))) WHERE ('');
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ((((-248273772)AND((- (t0.c2)))))AND(CAST(t0.c0 AS BLOB))) WHERE ('') LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ((((-248273772)AND((- (t0.c2)))))AND(CAST(t0.c0 AS BLOB))) WHERE ((+ (t0.c4)) COLLATE BINARY) LIMIT 1;
SELECT * FROM t0 WHERE ((((((t0.c3) BETWEEN (t0.c2) AND (-1.7976931348623157E308)), CASE -1.675530015E9  WHEN t0.c0 THEN t0.c3 WHEN NULL THEN t0.c3 ELSE t0.c1 END, CASE t0.c4  WHEN t0.c2 THEN '' END, ((t0.c0)>=(t0.c1)), (t0.c4 IN ())))>(((((t0.c1, t0.c1))>=((t0.c1, t0.c4))), (~ (t0.c1)), t0.c2, -8.83143184E8, UNLIKELY(DISTINCT t0.c2))))) ORDER BY ((t0.c3 IN (t0.c2)) IN ((NOT (t0.c1)), 0.6318501066550793)), NULL DESC;
SELECT * FROM t0 NOT INDEXED WHERE ((((((((t0.c3) BETWEEN (t0.c2) AND (-1.7976931348623157E308)), CASE -1.675530015E9  WHEN t0.c0 THEN t0.c3 WHEN NULL THEN t0.c3 ELSE t0.c1 END, CASE t0.c4  WHEN t0.c2 THEN '' END, ((t0.c0)>(t0.c1)), (t0.c4 IN ())))>(((((t0.c1, t0.c1))>((t0.c1, t0.c4))), (~ (t0.c1)), t0.c2, -8.83143184E8, UNLIKELY(DISTINCT t0.c2)))))AND(CASE WHEN 0.5086638748793658 THEN ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c1)) ELSE '-1927307188' COLLATE RTRIM END))) ORDER BY CAST(CASE WHEN 0.6423169422821978 THEN t0.c4 ELSE '-1184841295' END AS REAL) DESC, (- (14334618))  NULLS LAST LIMIT 0x1 INTERSECT SELECT * FROM t0 WHERE (((((((((t0.c2 COLLATE NOCASE)OR((t0.c1 IN (t0.c4)))))AND(((t0.c0)/(t0.c0)))))AND(x'')))OR((+ (t0.c1))))) ORDER BY CAST(CASE WHEN 0.6423169422821978 THEN t0.c4 ELSE '-1184841295' END AS REAL) DESC, (- (14334618))  NULLS LAST LIMIT 0x1;
SELECT * FROM t0 WHERE ((((((t0.c3) BETWEEN (t0.c2) AND (-1.7976931348623157E308)), CASE -1.675530015E9  WHEN t0.c0 THEN t0.c3 WHEN NULL THEN t0.c3 ELSE t0.c1 END, CASE t0.c4  WHEN t0.c2 THEN '' END, ((t0.c0)>=(t0.c1)), (t0.c4 IN ())))>(((((t0.c1, t0.c1))>=((t0.c1, t0.c4))), (~ (t0.c1)), t0.c2, -8.83143184E8, UNLIKELY(DISTINCT t0.c2))))) ORDER BY ((t0.c3 IN (t0.c2)) IN ((NOT (t0.c1)), 0.6318501066550793)), NULL DESC;
SELECT * FROM t0 NOT INDEXED WHERE ((((((((t0.c3) BETWEEN (t0.c2) AND (-1.7976931348623157E308)), CASE -1.675530015E9  WHEN t0.c0 THEN t0.c3 WHEN NULL THEN t0.c3 ELSE t0.c1 END, CASE t0.c4  WHEN t0.c2 THEN '' END, ((t0.c0)>(t0.c1)), (t0.c4 IN ())))>(((((t0.c1, t0.c1))>((t0.c1, t0.c4))), (~ (t0.c1)), t0.c2, -8.83143184E8, UNLIKELY(DISTINCT t0.c2)))))AND(CASE WHEN 0.5086638748793658 THEN ((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c1)) ELSE '-1927307188' COLLATE RTRIM END))) ORDER BY CAST(CASE WHEN 0.6423169422821978 THEN t0.c4 ELSE '-1184841295' END AS REAL) DESC, (- (14334618))  NULLS LAST LIMIT 0x1 INTERSECT SELECT * FROM t0 WHERE (((((((((t0.c2 COLLATE NOCASE)OR((t0.c1 IN (t0.c4)))))AND(((t0.c0)/(t0.c0)))))AND(x'')))OR((+ (t0.c1))))) ORDER BY CAST(CASE WHEN 0.6423169422821978 THEN t0.c4 ELSE '-1184841295' END AS REAL) DESC, (- (14334618))  NULLS LAST LIMIT 0x1;
SELECT ALL MAX(rt1.c2) FROM rt1, t0 WHERE (x'0f00') ORDER BY ((DATE(t0.c2, rt1.c4, t0.c3, t0.c0, rt1.c3)) NOTNULL)  NULLS FIRST, (((('-956693349') IS TRUE))AND(CASE WHEN t0.c2 THEN t0.c4 WHEN rt1.c1 THEN t0.c3 END)) DESC;
SELECT DISTINCT MAX(rt1.c2) FROM rt1, t0 WHERE (x'0f00') ORDER BY ((DATE(t0.c2, rt1.c4, t0.c3, t0.c0, rt1.c3)) NOTNULL)  NULLS FIRST, (((('-956693349') IS TRUE))AND(CASE WHEN t0.c2 THEN t0.c4 WHEN rt1.c1 THEN t0.c3 END)) DESC INTERSECT SELECT DISTINCT MAX(rt1.c2) FROM rt1 NOT INDEXED, t0 WHERE ((((x'f8' IN (t0.c4, t0.c1)))IS NOT(CASE WHEN rt1.c6 THEN t0.c1 END))) ORDER BY ((DATE(t0.c2, rt1.c4, t0.c3, t0.c0, rt1.c3)) NOTNULL)  NULLS FIRST, (((('-956693349') IS TRUE))AND(CASE WHEN t0.c2 THEN t0.c4 WHEN rt1.c1 THEN t0.c3 END)) DESC;
SELECT COUNT(*) FROM t0, rt1 WHERE (x'ad4a');
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((x'ad4a')AND(NULL))) ORDER BY HEX(DISTINCT CASE t0.c2  WHEN t0.c1 THEN rt1.c3 END) ASC, ((NOT (rt1.c2)) IN (CASE rt1.c6  WHEN rt1.c4 THEN rt1.c6 WHEN t0.c1 THEN rt1.c6 ELSE rt1.c0 END)) LIMIT 0X2 INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((((((t0.c3)||(rt1.c5)))OR(0.9587399466525067)))AND(((t0.c0) BETWEEN (0.6942555208694464) AND (t0.c1))))) ORDER BY HEX(DISTINCT CASE t0.c2  WHEN t0.c1 THEN rt1.c3 END) ASC, ((NOT (rt1.c2)) IN (CASE rt1.c6  WHEN rt1.c4 THEN rt1.c6 WHEN t0.c1 THEN rt1.c6 ELSE rt1.c0 END)) LIMIT 2;
SELECT MIN(rt1.c6) FROM t0 INNER JOIN rt1 ON ((rt1.c5 COLLATE BINARY) NOTNULL) WHERE (CASE 'G{' COLLATE BINARY  WHEN LAST_INSERT_ROWID() THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN t0.c2 THEN x'167074' WHEN rt1.c6 THEN t0.c3 WHEN t0.c4 THEN rt1.c5 ELSE rt1.c5 END WHEN CASE WHEN rt1.c6 THEN rt1.c5 WHEN x'9e' THEN t0.c4 END THEN ((rt1.c2) NOTNULL) WHEN ((t0.c4) NOT NULL) THEN 991398234 END);
SELECT MIN(rt1.c6) FROM t0 INNER JOIN rt1 ON ((rt1.c5 COLLATE BINARY) NOTNULL) WHERE (((CASE 'G{' COLLATE BINARY  WHEN LAST_INSERT_ROWID() THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN t0.c2 THEN x'167074' WHEN rt1.c6 THEN t0.c3 WHEN t0.c4 THEN rt1.c5 ELSE rt1.c5 END WHEN CASE WHEN rt1.c6 THEN rt1.c5 WHEN x'9e' THEN t0.c4 END THEN ((rt1.c2) NOTNULL) WHEN ((t0.c4) NOT NULL) THEN 991398234 END)AND((NOT (((((((((rt1.c6)OR(t0.c4)))OR(NULL)))AND(rt1.c6)))AND(t0.c2))))))) ORDER BY CAST(((rt1.c3)||(rt1.c1)) AS NUMERIC), rt1.c6 LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (CAST((+ (t0.c4)) AS INTEGER));
SELECT DISTINCT * FROM t0 WHERE (((CAST((+ (t0.c4)) AS INTEGER))AND(((((t0.c0) BETWEEN (t0.c4) AND ('JB'))) IS FALSE))));
SELECT ALL * FROM t0 WHERE (CAST((+ (t0.c4)) AS INTEGER));
SELECT DISTINCT * FROM t0 WHERE (((CAST((+ (t0.c4)) AS INTEGER))AND(((((t0.c0) BETWEEN (t0.c4) AND ('JB'))) IS FALSE))));
SELECT COUNT(*) FROM rt1 WHERE (((((NULL IN (rt1.c0)), (rt1.c4 IN (rt1.c0))))>((((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c5)), ((rt1.c3)%(rt1.c0))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((NULL IN (rt1.c0)), (rt1.c4 IN (rt1.c0))))>((((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c5)), ((rt1.c3)%(rt1.c0))))))AND(UNLIKELY(UNLIKELY(rt1.c6))))) INTERSECT SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c6)))OR(rt1.c2))) NOT BETWEEN (((rt1.c2)-(rt1.c4))) AND ('qE0/t}㒱')));
SELECT MIN(rt1.c5) FROM t0, rt1 WHERE ((((NOT (t0.c4)))AND((((t0.c2, rt1.c3)) BETWEEN ((t0.c4, 0.43138262167666375)) AND ((0.640643028691663, t0.c2))))));
SELECT MIN(rt1.c5) FROM t0, rt1 WHERE ((((((NOT (t0.c4)))AND((((t0.c2, rt1.c3)) BETWEEN ((t0.c4, 0.43138262167666375)) AND ((0.640643028691663, t0.c2))))))AND((CASE t0.c4  WHEN rt1.c4 THEN rt1.c6 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN rt1.c6 THEN t0.c1 WHEN rt1.c4 THEN rt1.c6 WHEN x'5042ff' THEN rt1.c0 WHEN x'a795' THEN rt1.c1 ELSE rt1.c0 END IN (CASE WHEN t0.c2 THEN rt1.c3 ELSE '~m' END))))) ORDER BY ((CASE rt1.c4  WHEN '1967614267' THEN rt1.c6 WHEN rt1.c5 THEN t0.c0 WHEN t0.c2 THEN t0.c3 ELSE rt1.c3 END) NOT BETWEEN ((+ (t0.c4))) AND (((rt1.c4)%(x''))))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((NOT ('T'))) ORDER BY (NOT (rt1.c2 COLLATE NOCASE))  NULLS LAST, rt1.c1 DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NOT ('T')))AND(0.1794206835552976))) ORDER BY ((((((rt1.c6)OR(rt1.c2)))OR(x'ee')))/(((rt1.c1) IS FALSE))) DESC  NULLS FIRST, ((((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c0))) NOTNULL) LIMIT 0X0 INTERSECT SELECT COUNT(*) FROM rt1 WHERE ((NOT (rt1.c1)) COLLATE BINARY) ORDER BY ((((((rt1.c6)OR(rt1.c2)))OR(x'ee')))/(((rt1.c1) IS FALSE))) DESC  NULLS FIRST, ((((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c0))) NOTNULL) LIMIT 0;
SELECT ALL * FROM rt1 WHERE ((CASE -1496588974  WHEN '0.009731400528998901' THEN rt1.c4 WHEN rt1.c6 THEN rt1.c1 ELSE NULL END IN ()));
SELECT * FROM rt1 WHERE ((CASE 0Xffffffffa6cbdd52  WHEN '0.009731400528998901' THEN rt1.c4 WHEN rt1.c6 THEN rt1.c1 ELSE NULL END IN ())) LIMIT 2 INTERSECT SELECT ALL * FROM rt1 WHERE ((((~ (rt1.c1)))LIKE(((rt1.c4)<<(rt1.c6))))) LIMIT 0X2;
SELECT ALL * FROM rt1 WHERE ((CASE -1496588974  WHEN '0.009731400528998901' THEN rt1.c4 WHEN rt1.c6 THEN rt1.c1 ELSE NULL END IN ()));
SELECT * FROM rt1 WHERE ((CASE 0Xffffffffa6cbdd52  WHEN '0.009731400528998901' THEN rt1.c4 WHEN rt1.c6 THEN rt1.c1 ELSE NULL END IN ())) LIMIT 2 INTERSECT SELECT ALL * FROM rt1 WHERE ((((~ (rt1.c1)))LIKE(((rt1.c4)<<(rt1.c6))))) LIMIT 0X2;
SELECT ALL * FROM rt1, t0 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3))  WHEN 'Y⮲' COLLATE BINARY THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c0 WHEN t0.c1 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c4 WHEN t0.c3 THEN rt1.c3 END END) ORDER BY (((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((0.2635423110158326))) COLLATE RTRIM  NULLS LAST, ((((((((((((t0.c2) IS FALSE))AND(t0.c0)))OR(((rt1.c4) NOTNULL))))OR(TYPEOF(-1.927307188E9))))AND((((t0.c0, rt1.c5))<>((rt1.c4, t0.c2))))))OR(((rt1.c4)=(rt1.c6)))), (+ (((rt1.c5) IS TRUE)))  NULLS FIRST, (((rt1.c4))>((t0.c3))) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (((CASE ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3))  WHEN 'Y⮲' COLLATE BINARY THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c0 WHEN t0.c1 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c4 WHEN t0.c3 THEN rt1.c3 END END)AND(((((t0.c3)AND(t0.c1)))AND(rt1.c6)) COLLATE RTRIM))) ORDER BY ((((rt1.c3) BETWEEN (t0.c3) AND (rt1.c2))) NOTNULL) DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM rt1, t0 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3))  WHEN 'Y⮲' COLLATE BINARY THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c0 WHEN t0.c1 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c4 WHEN t0.c3 THEN rt1.c3 END END) ORDER BY (((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((0.2635423110158326))) COLLATE RTRIM  NULLS LAST, ((((((((((((t0.c2) IS FALSE))AND(t0.c0)))OR(((rt1.c4) NOTNULL))))OR(TYPEOF(-1.927307188E9))))AND((((t0.c0, rt1.c5))<>((rt1.c4, t0.c2))))))OR(((rt1.c4)=(rt1.c6)))), (+ (((rt1.c5) IS TRUE)))  NULLS FIRST, (((rt1.c4))>((t0.c3))) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (((CASE ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3))  WHEN 'Y⮲' COLLATE BINARY THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c0 WHEN t0.c1 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c4 WHEN t0.c3 THEN rt1.c3 END END)AND(((((t0.c3)AND(t0.c1)))AND(rt1.c6)) COLLATE RTRIM))) ORDER BY ((((rt1.c3) BETWEEN (t0.c3) AND (rt1.c2))) NOTNULL) DESC  NULLS FIRST LIMIT 2;
SELECT * FROM rt1, t0 WHERE ((((t0.c0 IN (t0.c0)))<(((rt1.c3) BETWEEN (rt1.c6) AND (t0.c2)))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c0 IN (t0.c0)))<(((rt1.c3) BETWEEN (rt1.c6) AND (t0.c2)))))AND(rt1.c3))) ORDER BY CAST(CAST(rt1.c0 AS TEXT) AS NUMERIC) ASC  NULLS LAST, MIN('m8	d', (((t0.c1, t0.c2, t0.c3, t0.c1)) NOT BETWEEN ((rt1.c6, t0.c2, rt1.c2, rt1.c1)) AND ((t0.c4, rt1.c3, t0.c3, rt1.c0))), LTRIM(rt1.c5, t0.c4), CAST(NULL AS NUMERIC)) ASC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ((((t0.c0 IN (t0.c0)))<(((rt1.c3) BETWEEN (rt1.c6) AND (t0.c2)))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c0 IN (t0.c0)))<(((rt1.c3) BETWEEN (rt1.c6) AND (t0.c2)))))AND(rt1.c3))) ORDER BY CAST(CAST(rt1.c0 AS TEXT) AS NUMERIC) ASC  NULLS LAST, MIN('m8	d', (((t0.c1, t0.c2, t0.c3, t0.c1)) NOT BETWEEN ((rt1.c6, t0.c2, rt1.c2, rt1.c1)) AND ((t0.c4, rt1.c3, t0.c3, rt1.c0))), LTRIM(rt1.c5, t0.c4), CAST(NULL AS NUMERIC)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON ((rt1.c2 COLLATE NOCASE)IS((((9.53423655E8, rt1.c6)) NOT BETWEEN ((rt1.c0, rt1.c1)) AND ((rt1.c0, rt1.c2))))) WHERE (LIKELIHOOD(DISTINCT IFNULL(rt1.c6, rt1.c3), CASE rt1.c1  WHEN t0.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END)) ORDER BY '0.6766698228567961' DESC  NULLS FIRST, CASE CASE t0.c1  WHEN rt1.c3 THEN rt1.c0 END  WHEN t0.c1 THEN (('') NOT BETWEEN (t0.c0) AND (t0.c1)) ELSE ((((((((((((t0.c0)OR(t0.c0)))OR(',hNj*f8}S')))OR(t0.c2)))OR(t0.c4)))OR(t0.c4)))AND(rt1.c1)) END;
SELECT DISTINCT COUNT(*) FROM rt1 INNER JOIN t0 ON ((rt1.c2 COLLATE NOCASE)IS((((9.53423655E8, rt1.c6)) NOT BETWEEN ((rt1.c0, rt1.c1)) AND ((rt1.c0, rt1.c2))))) WHERE (LIKELIHOOD(DISTINCT IFNULL(rt1.c6, rt1.c3), CASE rt1.c1  WHEN t0.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END)) ORDER BY '0.6766698228567961' DESC  NULLS FIRST, CASE CASE t0.c1  WHEN rt1.c3 THEN rt1.c0 END  WHEN t0.c1 THEN (('') NOT BETWEEN (t0.c0) AND (t0.c1)) ELSE ((((((((((((t0.c0)OR(t0.c0)))OR(',hNj*f8}S')))OR(t0.c2)))OR(t0.c4)))OR(t0.c4)))AND(rt1.c1)) END LIMIT 3 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 INNER JOIN t0 ON ((rt1.c2 COLLATE NOCASE)IS((((9.53423655E8, rt1.c6)) NOT BETWEEN ((rt1.c0, rt1.c1)) AND ((rt1.c0, rt1.c2))))) WHERE (rt1.c5) ORDER BY '0.6766698228567961' DESC  NULLS FIRST, CASE CASE t0.c1  WHEN rt1.c3 THEN rt1.c0 END  WHEN t0.c1 THEN (('') NOT BETWEEN (t0.c0) AND (t0.c1)) ELSE ((((((((((((t0.c0)OR(t0.c0)))OR(',hNj*f8}S')))OR(t0.c2)))OR(t0.c4)))OR(t0.c4)))AND(rt1.c1)) END LIMIT 0x3;
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE ((~ (rt1.c1)));
SELECT ALL MIN(rt1.c6) FROM rt1 WHERE ((((~ (rt1.c1)))AND(0.8242384760999536))) ORDER BY CAST(rt1.c1 COLLATE BINARY AS TEXT) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL MIN(rt1.c6) FROM rt1 WHERE ((((((rt1.c6)<=(rt1.c3)), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))))<((rt1.c0, rt1.c1 COLLATE RTRIM)))) ORDER BY CAST(rt1.c1 COLLATE BINARY AS TEXT) DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) BETWEEN (t0.c2) AND (t0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2) BETWEEN (t0.c2) AND (t0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2)>>(t0.c1)) THEN NULL ELSE ((((((((((t0.c2)OR(t0.c4)))AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))AND(t0.c0)) END) ORDER BY CAST(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) AS TEXT);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2)>>(t0.c1)) THEN NULL ELSE ((((((((((t0.c2)OR(t0.c4)))AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))AND(t0.c0)) END) ORDER BY CAST(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) AS TEXT) INTERSECT SELECT COUNT(*) FROM t0 WHERE ((TRIM(DISTINCT t0.c1) IN ((((t0.c1, t0.c4, t0.c3, t0.c2, t0.c3))<=((t0.c3, t0.c0, t0.c2, t0.c0, t0.c1))), (((t0.c3, NULL)) NOT BETWEEN ((t0.c1, t0.c2)) AND ((t0.c2, t0.c4)))))) ORDER BY CAST(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) AS TEXT);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c0 END AS BLOB));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CAST(CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c0 END AS BLOB));
SELECT * FROM rt1 WHERE ((+ ((rt1.c4 IN (rt1.c4, rt1.c0))))) ORDER BY ((((((rt1.c5)AND(rt1.c3)))OR(rt1.c0))) NOTNULL) DESC  NULLS LAST, (((rt1.c5) IS FALSE) IN ())  NULLS LAST, (((((rt1.c2)AND(rt1.c6)))OR(rt1.c5)) IN ()), ((((rt1.c0, rt1.c1, rt1.c1, rt1.c1, rt1.c3))>=((rt1.c2, rt1.c2, rt1.c0, rt1.c5, rt1.c5))) IN ((rt1.c1 IN ()))) ASC;
SELECT * FROM rt1 WHERE ((((+ ((rt1.c4 IN (rt1.c4, rt1.c0)))))AND(rt1.c5))) ORDER BY ((((((rt1.c5)AND(rt1.c3)))OR(rt1.c0))) NOTNULL) DESC  NULLS LAST, (((rt1.c5) IS FALSE) IN ())  NULLS LAST, (((((rt1.c2)AND(rt1.c6)))OR(rt1.c5)) IN ()), ((((rt1.c0, rt1.c1, rt1.c1, rt1.c1, rt1.c3))>=((rt1.c2, rt1.c2, rt1.c0, rt1.c5, rt1.c5))) IN ((rt1.c1 IN ()))) ASC LIMIT 1 INTERSECT SELECT ALL * FROM rt1 WHERE ((((((rt1.c4 IN (rt1.c3)))OR(rt1.c0 COLLATE NOCASE)))AND(TYPEOF(rt1.c1)))) ORDER BY ((((((rt1.c5)AND(rt1.c3)))OR(rt1.c0))) NOTNULL) DESC  NULLS LAST, (((rt1.c5) IS FALSE) IN ())  NULLS LAST, (((((rt1.c2)AND(rt1.c6)))OR(rt1.c5)) IN ()), ((((rt1.c0, rt1.c1, rt1.c1, rt1.c1, rt1.c3))>=((rt1.c2, rt1.c2, rt1.c0, rt1.c5, rt1.c5))) IN ((rt1.c1 IN ()))) ASC LIMIT 1;
SELECT * FROM rt1 WHERE ((+ ((rt1.c4 IN (rt1.c4, rt1.c0))))) ORDER BY ((((((rt1.c5)AND(rt1.c3)))OR(rt1.c0))) NOTNULL) DESC  NULLS LAST, (((rt1.c5) IS FALSE) IN ())  NULLS LAST, (((((rt1.c2)AND(rt1.c6)))OR(rt1.c5)) IN ()), ((((rt1.c0, rt1.c1, rt1.c1, rt1.c1, rt1.c3))>=((rt1.c2, rt1.c2, rt1.c0, rt1.c5, rt1.c5))) IN ((rt1.c1 IN ()))) ASC;
SELECT ALL MIN(t0.c1) FROM t0 WHERE ((((t0.c4, NULL, t0.c3)) NOT BETWEEN ((json_array(t0.c3, t0.c0, t0.c4), ((t0.c0) ISNULL), ((t0.c3) NOTNULL))) AND ((CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN x'e0' THEN x'1d' ELSE t0.c1 END, CAST(t0.c4 AS TEXT), (~ (t0.c1))))));
SELECT ALL MIN(t0.c1) FROM t0 WHERE ((((((t0.c4, NULL, t0.c3)) NOT BETWEEN ((json_array(t0.c3, t0.c0, t0.c4), ((t0.c0) ISNULL), ((t0.c3) NOTNULL))) AND ((CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN x'e0' THEN x'1d' ELSE t0.c1 END, CAST(t0.c4 AS TEXT), (~ (t0.c1))))))AND(CASE WHEN LIKELIHOOD(t0.c3, t0.c1) THEN ((t0.c0)%(t0.c3)) WHEN ((t0.c1)OR(t0.c3)) THEN (t0.c3 IN (t0.c1, t0.c4)) WHEN t0.c1 THEN 0Xd225b3f END))) ORDER BY (((t0.c4)) NOT BETWEEN ((CAST(t0.c3 AS INTEGER))) AND ((((NULL)!=(t0.c4))))), (((t0.c2) BETWEEN (t0.c4) AND (t0.c3)) IN (0.017398439087886408, (NOT (t0.c4)))), ((CAST(t0.c3 AS TEXT)) NOT NULL);
SELECT ALL MAX(rt1.c4) FROM rt1 WHERE (((rt1.c6 COLLATE RTRIM)/(TYPEOF(rt1.c3)))) ORDER BY (((rt1.c6) IS TRUE) IN ((~ (rt1.c1))))  NULLS FIRST;
SELECT DISTINCT MAX(rt1.c4) FROM rt1 WHERE (((rt1.c6 COLLATE RTRIM)/(TYPEOF(rt1.c3)))) ORDER BY ((rt1.c6)||(rt1.c1)) COLLATE RTRIM  NULLS LAST, ((rt1.c4) NOT NULL) COLLATE BINARY  NULLS LAST, (((rt1.c2, rt1.c2, rt1.c4)) NOT BETWEEN ((SQLITE_SOURCE_ID(), LENGTH(rt1.c2), rt1.c2 COLLATE NOCASE)) AND (((((rt1.c6, rt1.c2, rt1.c2, rt1.c0, NULL))<=((rt1.c2, rt1.c0, NULL, rt1.c5, rt1.c2))), ((((rt1.c3)AND(rt1.c4)))AND(rt1.c2)), ('vZ/)' IN ()))))  NULLS FIRST;
SELECT ALL MIN(t0.c1) FROM t0 WHERE ((((((t0.c3))!=((t0.c1))))|(CAST(t0.c2 AS REAL))));
SELECT MIN(t0.c1) FROM t0 WHERE ((((((((t0.c3))<>((t0.c1))))|(CAST(t0.c2 AS REAL))))AND(((((t0.c2)>=(t0.c3))) BETWEEN (((t0.c3) ISNULL)) AND (((((x'')OR(t0.c2)))OR(t0.c4))))))) ORDER BY CAST(NULL AS NUMERIC), TRIM(t0.c1, t0.c2)  NULLS FIRST LIMIT 3;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN ()))IS NOT(((rt1.c5) IS FALSE))));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN ()))IS NOT(((rt1.c5) IS FALSE)))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)) AS BLOB)) LIMIT 0x0;
SELECT ALL MIN(rt1.c2) FROM t0, rt1 WHERE (LIKE(((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)), ((rt1.c2) IS FALSE)));
SELECT ALL MIN(rt1.c2) FROM t0, rt1 WHERE (LIKE(((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)), ((rt1.c2) IS FALSE))) ORDER BY ((((rt1.c0)LIKE(rt1.c3))) NOT BETWEEN (((rt1.c0)>(rt1.c2))) AND ('1038762735')) DESC  NULLS LAST, (((rt1.c2)) BETWEEN (((- (t0.c3)))) AND ((rt1.c1))) ASC;
SELECT * FROM t0 WHERE (CASE t0.c2  WHEN '-1270526967' THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE) ORDER BY ((((((((((t0.c3)<(t0.c0)))AND((NOT (t0.c2)))))OR(((t0.c2) NOTNULL))))OR(t0.c2 COLLATE RTRIM)))OR(CAST(t0.c1 AS NUMERIC)));
SELECT DISTINCT * FROM t0 WHERE (((CASE t0.c2  WHEN '-1270526967' THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE)AND((- (x'fb'))))) ORDER BY (((t0.c2) IS FALSE) IN ()) ASC  NULLS FIRST, CAST(((t0.c0) NOTNULL) AS TEXT) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE t0.c2  WHEN '-1270526967' THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE) ORDER BY ((((((((((t0.c3)<(t0.c0)))AND((NOT (t0.c2)))))OR(((t0.c2) NOTNULL))))OR(t0.c2 COLLATE RTRIM)))OR(CAST(t0.c1 AS NUMERIC)));
SELECT DISTINCT * FROM t0 WHERE (((CASE t0.c2  WHEN '-1270526967' THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE)AND((- (x'fb'))))) ORDER BY (((t0.c2) IS FALSE) IN ()) ASC  NULLS FIRST, CAST(((t0.c0) NOTNULL) AS TEXT) ASC  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (((((rt1.c0)OR(t0.c1))) NOT NULL)) ORDER BY ((~ (rt1.c4)) IN ()) ASC  NULLS FIRST, ((((((((((0.8556700086832734)OR(rt1.c6 COLLATE BINARY)))AND(((t0.c3) IS FALSE))))AND(CAST(t0.c2 AS NUMERIC))))AND(((((((((rt1.c5)AND(t0.c4)))OR(rt1.c6)))OR(rt1.c0)))OR(rt1.c6)))))AND(((t0.c0)%(rt1.c3))))  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((rt1.c0)OR(t0.c1))) NOT NULL))AND(((((((t0.c0)OR(rt1.c5)))AND((NOT (rt1.c5)))))AND(CAST(rt1.c6 AS REAL)))))) ORDER BY ((~ (rt1.c4)) IN ()) ASC  NULLS FIRST, ((((((((((0.8556700086832734)OR(rt1.c6 COLLATE BINARY)))AND(((t0.c3) IS FALSE))))AND(CAST(t0.c2 AS NUMERIC))))AND(((((((((rt1.c5)AND(t0.c4)))OR(rt1.c6)))OR(rt1.c0)))OR(rt1.c6)))))AND(((t0.c0)%(rt1.c3))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (CASE WHEN x'4f' COLLATE RTRIM THEN ((t0.c1)&(rt1.c2)) WHEN (((t0.c2, t0.c1))<>((NULL, rt1.c6))) THEN (- (rt1.c2)) WHEN t0.c0 THEN ((t0.c3) BETWEEN (t0.c1) AND (rt1.c3)) WHEN ((rt1.c2)>>(rt1.c1)) THEN ((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c6)) END) ORDER BY ((~ (rt1.c4)) IN ()) ASC  NULLS FIRST, ((((((((((0.8556700086832734)OR(rt1.c6 COLLATE BINARY)))AND(((t0.c3) IS FALSE))))AND(CAST(t0.c2 AS NUMERIC))))AND(((((((((rt1.c5)AND(t0.c4)))OR(rt1.c6)))OR(rt1.c0)))OR(rt1.c6)))))AND(((t0.c0)%(rt1.c3))))  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (((((rt1.c0)OR(t0.c1))) NOT NULL)) ORDER BY ((~ (rt1.c4)) IN ()) ASC  NULLS FIRST, ((((((((((0.8556700086832734)OR(rt1.c6 COLLATE BINARY)))AND(((t0.c3) IS FALSE))))AND(CAST(t0.c2 AS NUMERIC))))AND(((((((((rt1.c5)AND(t0.c4)))OR(rt1.c6)))OR(rt1.c0)))OR(rt1.c6)))))AND(((t0.c0)%(rt1.c3))))  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (((((((((t0.c3)=(rt1.c5)))OR(((((t0.c1)AND(t0.c4)))OR(rt1.c5)))))AND(((rt1.c6)||(rt1.c5)))))OR(CASE WHEN t0.c3 THEN rt1.c6 WHEN rt1.c4 THEN rt1.c6 END))) ORDER BY 0x344ab11c  NULLS LAST, x'f9';
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((((t0.c3)==(rt1.c5)))OR(((((t0.c1)AND(t0.c4)))OR(rt1.c5)))))AND(((rt1.c6)||(rt1.c5)))))OR(CASE WHEN t0.c3 THEN rt1.c6 WHEN rt1.c4 THEN rt1.c6 END))) ORDER BY ((((rt1.c4) NOTNULL)) IS TRUE) LIMIT 0x0;
SELECT * FROM t0, rt1 WHERE (((((((((t0.c3)=(rt1.c5)))OR(((((t0.c1)AND(t0.c4)))OR(rt1.c5)))))AND(((rt1.c6)||(rt1.c5)))))OR(CASE WHEN t0.c3 THEN rt1.c6 WHEN rt1.c4 THEN rt1.c6 END))) ORDER BY 0x344ab11c  NULLS LAST, x'f9';
SELECT * FROM t0 WHERE (CAST(t0.c3 COLLATE BINARY AS TEXT));
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c3 COLLATE BINARY AS TEXT))AND((+ (t0.c1)) COLLATE RTRIM))) ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE  NULLS LAST, ((CASE WHEN t0.c3 THEN x'22' END)<(UNICODE(t0.c0)))  NULLS LAST LIMIT 4 INTERSECT SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE  NULLS LAST, ((CASE WHEN t0.c3 THEN x'22' END)<(UNICODE(t0.c0)))  NULLS LAST LIMIT 0X4;
SELECT * FROM t0 WHERE (CAST(t0.c3 COLLATE BINARY AS TEXT));
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c3 COLLATE BINARY AS TEXT))AND((+ (t0.c1)) COLLATE RTRIM))) ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE  NULLS LAST, ((CASE WHEN t0.c3 THEN x'22' END)<(UNICODE(t0.c0)))  NULLS LAST LIMIT 4 INTERSECT SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE  NULLS LAST, ((CASE WHEN t0.c3 THEN x'22' END)<(UNICODE(t0.c0)))  NULLS LAST LIMIT 0X4;
SELECT ALL MAX(t0.c1) FROM t0 CROSS JOIN rt1 ON UNLIKELY(((rt1.c3) BETWEEN (0.2106587826208981) AND (t0.c0))) WHERE ((((((rt1.c6) IS TRUE)))<=((t0.c0 COLLATE NOCASE)))) ORDER BY x'1dd2' ASC, ((((rt1.c5)||(rt1.c1))) IS TRUE)  NULLS FIRST;
SELECT DISTINCT MAX(t0.c1) FROM t0 CROSS JOIN rt1 ON UNLIKELY(((rt1.c3) BETWEEN (0.2106587826208981) AND (t0.c0))) WHERE ((((((((rt1.c6) IS TRUE)))<=((t0.c0 COLLATE NOCASE))))AND(CASE ((t0.c2) ISNULL)  WHEN CAST(rt1.c1 AS REAL) THEN CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN t0.c1 ELSE rt1.c2 END WHEN CAST(rt1.c1 AS NUMERIC) THEN (NOT (t0.c3)) END))) ORDER BY x'1dd2' ASC, ((((rt1.c5)||(rt1.c1))) IS TRUE)  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE ((((t0.c2)) BETWEEN (((t0.c1 IN (rt1.c2)))) AND ((CASE WHEN rt1.c6 THEN rt1.c3 WHEN t0.c0 THEN t0.c4 ELSE t0.c0 END))));
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c2)) BETWEEN (((t0.c1 IN (rt1.c2)))) AND ((CASE WHEN rt1.c6 THEN rt1.c3 WHEN t0.c0 THEN t0.c4 ELSE t0.c0 END))))AND(((((((((((CAST(rt1.c0 AS BLOB))OR((rt1.c0 IN ()))))AND(CAST(t0.c0 AS NUMERIC))))OR(CAST(t0.c1 AS TEXT))))AND(CAST(t0.c4 AS REAL))))OR(rt1.c1 COLLATE BINARY))))) LIMIT 0X0 INTERSECT SELECT ALL * FROM t0, rt1 WHERE ((- (rt1.c0 COLLATE NOCASE))) LIMIT 0;
SELECT * FROM t0, rt1 WHERE ((((t0.c2)) BETWEEN (((t0.c1 IN (rt1.c2)))) AND ((CASE WHEN rt1.c6 THEN rt1.c3 WHEN t0.c0 THEN t0.c4 ELSE t0.c0 END))));
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c2)) BETWEEN (((t0.c1 IN (rt1.c2)))) AND ((CASE WHEN rt1.c6 THEN rt1.c3 WHEN t0.c0 THEN t0.c4 ELSE t0.c0 END))))AND(((((((((((CAST(rt1.c0 AS BLOB))OR((rt1.c0 IN ()))))AND(CAST(t0.c0 AS NUMERIC))))OR(CAST(t0.c1 AS TEXT))))AND(CAST(t0.c4 AS REAL))))OR(rt1.c1 COLLATE BINARY))))) LIMIT 0X0 INTERSECT SELECT ALL * FROM t0, rt1 WHERE ((- (rt1.c0 COLLATE NOCASE))) LIMIT 0;
SELECT * FROM t0, rt1 WHERE (((((0Xffffffffc09447af) NOTNULL))*(((t0.c4)>=(t0.c3))))) ORDER BY ((x'bdbd946b') BETWEEN (((rt1.c3) NOT NULL)) AND (((t0.c4) BETWEEN ('591531326') AND (t0.c4)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((0Xffffffffc09447af) NOTNULL))*(((t0.c4)>=(t0.c3)))))AND(LIKELY(((rt1.c1)-(rt1.c3)))))) ORDER BY (((((rt1.c2, t0.c0, t0.c4)) BETWEEN ((t0.c2, t0.c1, rt1.c2)) AND (('-1446379791', rt1.c3, rt1.c4))))<=(t0.c2 COLLATE BINARY)) DESC INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((((t0.c1, rt1.c4))<((rt1.c4, t0.c1))))=(((t0.c3)IS NOT(rt1.c6))))) ORDER BY (((((rt1.c2, t0.c0, t0.c4)) BETWEEN ((t0.c2, t0.c1, rt1.c2)) AND (('-1446379791', rt1.c3, rt1.c4))))<=(t0.c2 COLLATE BINARY)) DESC;
SELECT * FROM t0, rt1 WHERE (((((0Xffffffffc09447af) NOTNULL))*(((t0.c4)>=(t0.c3))))) ORDER BY ((x'bdbd946b') BETWEEN (((rt1.c3) NOT NULL)) AND (((t0.c4) BETWEEN ('591531326') AND (t0.c4)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((0Xffffffffc09447af) NOTNULL))*(((t0.c4)>=(t0.c3)))))AND(LIKELY(((rt1.c1)-(rt1.c3)))))) ORDER BY (((((rt1.c2, t0.c0, t0.c4)) BETWEEN ((t0.c2, t0.c1, rt1.c2)) AND (('-1446379791', rt1.c3, rt1.c4))))<=(t0.c2 COLLATE BINARY)) DESC INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((((((t0.c1, rt1.c4))<((rt1.c4, t0.c1))))=(((t0.c3)IS NOT(rt1.c6))))) ORDER BY (((((rt1.c2, t0.c0, t0.c4)) BETWEEN ((t0.c2, t0.c1, rt1.c2)) AND (('-1446379791', rt1.c3, rt1.c4))))<=(t0.c2 COLLATE BINARY)) DESC;
SELECT ALL * FROM rt1, t0 WHERE (((NULL)>(t0.c4 COLLATE NOCASE)));
SELECT DISTINCT * FROM rt1, t0 WHERE (((NULL)>(t0.c4 COLLATE NOCASE))) ORDER BY CASE WHEN ((rt1.c0)GLOB(x'54')) THEN CAST(x'9c' AS BLOB) WHEN '-338331119' THEN t0.c0 COLLATE BINARY ELSE ((t0.c1)IS NOT(rt1.c0)) END ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (((NULL)>(t0.c4 COLLATE NOCASE)));
SELECT DISTINCT * FROM rt1, t0 WHERE (((NULL)>(t0.c4 COLLATE NOCASE))) ORDER BY CASE WHEN ((rt1.c0)GLOB(x'54')) THEN CAST(x'9c' AS BLOB) WHEN '-338331119' THEN t0.c0 COLLATE BINARY ELSE ((t0.c1)IS NOT(rt1.c0)) END ASC  NULLS LAST LIMIT 0;
SELECT MIN(t0.c0) FROM t0 WHERE (((NULLIF(DISTINCT t0.c3, t0.c2)) NOTNULL)) ORDER BY (((t0.c1 COLLATE BINARY))<((((((t0.c1)OR(t0.c4)))AND(t0.c3)))))  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((NULLIF(DISTINCT t0.c3, t0.c2)) NOTNULL)) ORDER BY ((((((t0.c1) BETWEEN (t0.c2) AND (x'')))OR(((t0.c2)<(-877663848)))))AND(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c3 ELSE NULL END COLLATE BINARY) ORDER BY ((((((t0.c1) BETWEEN (t0.c2) AND (x'')))OR(((t0.c2)<(0xffffffffcbafe998)))))AND(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)) DESC  NULLS LAST LIMIT 0;
SELECT * FROM t0, rt1 WHERE ((+ ((NOT (t0.c0))))) ORDER BY (((t0.c4)) NOT BETWEEN (((((rt1.c6, rt1.c3)) NOT BETWEEN ((rt1.c1, t0.c0)) AND ((rt1.c5, rt1.c1))))) AND ((((((((rt1.c6)AND(rt1.c2)))AND(t0.c3)))AND(t0.c1))))), ((rt1.c6 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST, CASE (NOT (t0.c2))  WHEN ((t0.c3)==(t0.c2)) THEN NULL ELSE LOWER(DISTINCT '') END;
SELECT ALL * FROM t0, rt1 WHERE ((((+ ((NOT (t0.c0)))))AND(x'd2'))) ORDER BY (((t0.c4)) NOT BETWEEN (((((rt1.c6, rt1.c3)) NOT BETWEEN ((rt1.c1, t0.c0)) AND ((rt1.c5, rt1.c1))))) AND ((((((((rt1.c6)AND(rt1.c2)))AND(t0.c3)))AND(t0.c1))))), ((rt1.c6 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST, CASE (NOT (t0.c2))  WHEN ((t0.c3)=(t0.c2)) THEN NULL ELSE LOWER(DISTINCT '') END INTERSECT SELECT ALL * FROM t0, rt1 NOT INDEXED WHERE (x'97') ORDER BY (((t0.c4)) NOT BETWEEN (((((rt1.c6, rt1.c3)) NOT BETWEEN ((rt1.c1, t0.c0)) AND ((rt1.c5, rt1.c1))))) AND ((((((((rt1.c6)AND(rt1.c2)))AND(t0.c3)))AND(t0.c1))))), ((rt1.c6 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST, CASE (NOT (t0.c2))  WHEN ((t0.c3)=(t0.c2)) THEN NULL ELSE LOWER(DISTINCT '') END;
SELECT * FROM t0, rt1 WHERE ((+ ((NOT (t0.c0))))) ORDER BY (((t0.c4)) NOT BETWEEN (((((rt1.c6, rt1.c3)) NOT BETWEEN ((rt1.c1, t0.c0)) AND ((rt1.c5, rt1.c1))))) AND ((((((((rt1.c6)AND(rt1.c2)))AND(t0.c3)))AND(t0.c1))))), ((rt1.c6 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST, CASE (NOT (t0.c2))  WHEN ((t0.c3)==(t0.c2)) THEN NULL ELSE LOWER(DISTINCT '') END;
SELECT ALL * FROM t0, rt1 WHERE ((((+ ((NOT (t0.c0)))))AND(x'd2'))) ORDER BY (((t0.c4)) NOT BETWEEN (((((rt1.c6, rt1.c3)) NOT BETWEEN ((rt1.c1, t0.c0)) AND ((rt1.c5, rt1.c1))))) AND ((((((((rt1.c6)AND(rt1.c2)))AND(t0.c3)))AND(t0.c1))))), ((rt1.c6 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST, CASE (NOT (t0.c2))  WHEN ((t0.c3)=(t0.c2)) THEN NULL ELSE LOWER(DISTINCT '') END INTERSECT SELECT ALL * FROM t0, rt1 NOT INDEXED WHERE (x'97') ORDER BY (((t0.c4)) NOT BETWEEN (((((rt1.c6, rt1.c3)) NOT BETWEEN ((rt1.c1, t0.c0)) AND ((rt1.c5, rt1.c1))))) AND ((((((((rt1.c6)AND(rt1.c2)))AND(t0.c3)))AND(t0.c1))))), ((rt1.c6 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST, CASE (NOT (t0.c2))  WHEN ((t0.c3)=(t0.c2)) THEN NULL ELSE LOWER(DISTINCT '') END;
SELECT ALL COUNT(*) FROM rt1 WHERE (CHANGES());
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CHANGES()) ORDER BY COALESCE(DISTINCT ((((rt1.c6)AND(rt1.c2)))OR(rt1.c1)), ((((((((((((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)))OR(0.13714546056659394)))OR(rt1.c2)))OR(0.6942555208694464)))OR(rt1.c0)))OR(rt1.c4)))OR(0X59be5920)), rt1.c3, (rt1.c5 IN (rt1.c2, rt1.c0))) ASC  NULLS FIRST, (+ (CHAR(0.6115905085347133))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((NULLIF(DISTINCT rt1.c1, x'7291')) IS TRUE)) ORDER BY COALESCE(DISTINCT ((((rt1.c6)AND(rt1.c2)))OR(rt1.c1)), ((((((((((((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)))OR(0.13714546056659394)))OR(rt1.c2)))OR(0.6942555208694464)))OR(rt1.c0)))OR(rt1.c4)))OR(0x59be5920)), rt1.c3, (rt1.c5 IN (rt1.c2, rt1.c0))) ASC  NULLS FIRST, (+ (CHAR(0.6115905085347133))) LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE (CASE WHEN ((t0.c3) IS FALSE) THEN t0.c1 COLLATE BINARY END);
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CASE WHEN ((t0.c3) IS FALSE) THEN t0.c1 COLLATE BINARY END)AND(((((t0.c1)<(t0.c2)))*(CAST(t0.c4 AS NUMERIC))))));
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT DISTINCT * FROM rt1 WHERE (rt1.c3) LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((('4O1HJਮ2') IS TRUE)) LIMIT 3;
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT DISTINCT * FROM rt1 WHERE (rt1.c3) LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM rt1 WHERE ((('4O1HJਮ2') IS TRUE)) LIMIT 3;
SELECT ALL * FROM t0 WHERE ((((((((t0.c2 IN ()))OR(CAST(t0.c4 AS NUMERIC))))OR(((t0.c3)%(t0.c1)))))OR(t0.c0 COLLATE NOCASE))) ORDER BY ((((((CASE WHEN t0.c1 THEN t0.c4 WHEN t0.c2 THEN t0.c3 WHEN t0.c2 THEN t0.c4 WHEN t0.c3 THEN t0.c3 END)OR(x'56a8')))OR(((t0.c3) BETWEEN (t0.c4) AND (t0.c0)))))AND(((((t0.c2)AND(t0.c1)))AND(t0.c1)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c2 IN ()))OR(CAST(t0.c4 AS NUMERIC))))OR(((t0.c3)%(t0.c1)))))OR(t0.c0 COLLATE NOCASE))) ORDER BY ((((((CASE WHEN t0.c1 THEN t0.c4 WHEN t0.c2 THEN t0.c3 WHEN t0.c2 THEN t0.c4 WHEN t0.c3 THEN t0.c3 END)OR(x'56a8')))OR(((t0.c3) BETWEEN (t0.c4) AND (t0.c0)))))AND(((((t0.c2)AND(t0.c1)))AND(t0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((((t0.c2 IN ()))OR(CAST(t0.c4 AS NUMERIC))))OR(((t0.c3)%(t0.c1)))))OR(t0.c0 COLLATE NOCASE))) ORDER BY ((((((CASE WHEN t0.c1 THEN t0.c4 WHEN t0.c2 THEN t0.c3 WHEN t0.c2 THEN t0.c4 WHEN t0.c3 THEN t0.c3 END)OR(x'56a8')))OR(((t0.c3) BETWEEN (t0.c4) AND (t0.c0)))))AND(((((t0.c2)AND(t0.c1)))AND(t0.c1)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c2 IN ()))OR(CAST(t0.c4 AS NUMERIC))))OR(((t0.c3)%(t0.c1)))))OR(t0.c0 COLLATE NOCASE))) ORDER BY ((((((CASE WHEN t0.c1 THEN t0.c4 WHEN t0.c2 THEN t0.c3 WHEN t0.c2 THEN t0.c4 WHEN t0.c3 THEN t0.c3 END)OR(x'56a8')))OR(((t0.c3) BETWEEN (t0.c4) AND (t0.c0)))))AND(((((t0.c2)AND(t0.c1)))AND(t0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE CAST(rt1.c3 AS NUMERIC)  WHEN (~ (rt1.c3)) THEN CASE WHEN rt1.c1 THEN 0X611a7523 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 END ELSE (~ (rt1.c6)) END);
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (CASE CAST(rt1.c3 AS NUMERIC)  WHEN (~ (rt1.c3)) THEN CASE WHEN rt1.c1 THEN 0X611a7523 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 END ELSE (~ (rt1.c6)) END) ORDER BY (rt1.c4 COLLATE BINARY IN ()) DESC, LIKELIHOOD(DISTINCT ((rt1.c3) NOT NULL), (~ (rt1.c2))), (((rt1.c1 IN (rt1.c4, rt1.c4)))AND(rt1.c5 COLLATE BINARY)) DESC LIMIT 2;
SELECT * FROM t0, rt1 WHERE (((x'07')>(((t0.c4)=(rt1.c5)))));
SELECT ALL * FROM t0, rt1 WHERE (((((x'07')>(((t0.c4)==(rt1.c5)))))AND(((rt1.c3)-(((rt1.c1)LIKE(t0.c4))))))) LIMIT 0 INTERSECT SELECT * FROM t0, rt1 WHERE ((rt1.c3 COLLATE NOCASE IN (((t0.c1)+(rt1.c5))))) LIMIT 0;
SELECT * FROM t0, rt1 WHERE (((x'07')>(((t0.c4)=(rt1.c5)))));
SELECT ALL * FROM t0, rt1 WHERE (((((x'07')>(((t0.c4)==(rt1.c5)))))AND(((rt1.c3)-(((rt1.c1)LIKE(t0.c4))))))) LIMIT 0 INTERSECT SELECT * FROM t0, rt1 WHERE ((rt1.c3 COLLATE NOCASE IN (((t0.c1)+(rt1.c5))))) LIMIT 0;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN ()))*(rt1.c4 COLLATE NOCASE))) ORDER BY ((-1.908681393E9) BETWEEN ((- (rt1.c3))) AND ((((rt1.c2, rt1.c2, rt1.c3))<=((rt1.c4, 'G', rt1.c2))))) DESC, rt1.c6 DESC;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN ()))*(rt1.c4 COLLATE NOCASE))) ORDER BY ((-1.908681393E9) BETWEEN ((- (rt1.c3))) AND ((((rt1.c2, rt1.c2, rt1.c3))<=((rt1.c4, 'G', rt1.c2))))) DESC, rt1.c6 DESC;
SELECT MAX(t0.c4) FROM t0 WHERE ((t0.c2 IN ())) ORDER BY ((((((t0.c2)<>(t0.c3)))AND(((x'bc12') NOT BETWEEN (t0.c3) AND (0.8298238782209276)))))OR(CASE t0.c1  WHEN t0.c3 THEN t0.c0 END)) ASC  NULLS FIRST;
SELECT ALL MAX(t0.c4) FROM t0 WHERE ((t0.c2 IN ())) ORDER BY CAST((((t0.c0))<=((t0.c3))) AS REAL) ASC;
SELECT MAX(t0.c1) FROM rt1, t0 WHERE ((((((((((('1147367855')<(rt1.c0)))OR(CASE t0.c1  WHEN '297062107' THEN rt1.c5 ELSE rt1.c2 END)))OR(rt1.c4 COLLATE RTRIM)))OR(((rt1.c0) BETWEEN (t0.c1) AND (rt1.c3)))))OR(((t0.c4) BETWEEN (rt1.c6) AND (NULL)))));
SELECT DISTINCT MAX(t0.c1) FROM rt1, t0 WHERE ((((((((((((('1147367855')<(rt1.c0)))OR(CASE t0.c1  WHEN '297062107' THEN rt1.c5 ELSE rt1.c2 END)))OR(rt1.c4 COLLATE RTRIM)))OR(((rt1.c0) BETWEEN (t0.c1) AND (rt1.c3)))))OR(((t0.c4) BETWEEN (rt1.c6) AND (NULL)))))AND(((((((((rt1.c0)AND('1054140306')))OR('')))OR(rt1.c5))) NOT BETWEEN (((rt1.c0)*(rt1.c3))) AND (rt1.c4 COLLATE NOCASE))))) ORDER BY (+ (NULL COLLATE RTRIM)), (((rt1.c0, t0.c3)) BETWEEN ((x'', ((rt1.c4)|(t0.c1)))) AND ((((rt1.c2)/(t0.c3)), ((t0.c0)>=(rt1.c4))))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(t0.c1) FROM rt1, t0 WHERE (x'7309') ORDER BY (+ (NULL COLLATE RTRIM)), (((rt1.c0, t0.c3)) BETWEEN ((x'', ((rt1.c4)|(t0.c1)))) AND ((((rt1.c2)/(t0.c3)), ((t0.c0)>=(rt1.c4))))) ASC LIMIT 0;
SELECT * FROM rt1, t0 WHERE (0.6800601138753949);
SELECT DISTINCT * FROM rt1, t0 WHERE (((0.6800601138753949)AND((((((rt1.c6)LIKE(rt1.c5)), rt1.c4 COLLATE RTRIM))==(((rt1.c0 IN (t0.c2)), (NOT (rt1.c1)))))))) ORDER BY ((CAST(t0.c2 AS TEXT))IS NOT(CAST(rt1.c4 AS NUMERIC)))  NULLS FIRST, CASE WHEN t0.c4 THEN t0.c3 WHEN rt1.c0 THEN t0.c4 WHEN rt1.c1 THEN rt1.c3 ELSE t0.c0 END COLLATE BINARY ASC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((- (t0.c3 COLLATE BINARY))) ORDER BY ((CAST(t0.c2 AS TEXT))IS NOT(CAST(rt1.c4 AS NUMERIC)))  NULLS FIRST, CASE WHEN t0.c4 THEN t0.c3 WHEN rt1.c0 THEN t0.c4 WHEN rt1.c1 THEN rt1.c3 ELSE t0.c0 END COLLATE BINARY ASC  NULLS LAST LIMIT 0;
SELECT * FROM rt1, t0 WHERE (0.6800601138753949);
SELECT DISTINCT * FROM rt1, t0 WHERE (((0.6800601138753949)AND((((((rt1.c6)LIKE(rt1.c5)), rt1.c4 COLLATE RTRIM))==(((rt1.c0 IN (t0.c2)), (NOT (rt1.c1)))))))) ORDER BY ((CAST(t0.c2 AS TEXT))IS NOT(CAST(rt1.c4 AS NUMERIC)))  NULLS FIRST, CASE WHEN t0.c4 THEN t0.c3 WHEN rt1.c0 THEN t0.c4 WHEN rt1.c1 THEN rt1.c3 ELSE t0.c0 END COLLATE BINARY ASC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((- (t0.c3 COLLATE BINARY))) ORDER BY ((CAST(t0.c2 AS TEXT))IS NOT(CAST(rt1.c4 AS NUMERIC)))  NULLS FIRST, CASE WHEN t0.c4 THEN t0.c3 WHEN rt1.c0 THEN t0.c4 WHEN rt1.c1 THEN rt1.c3 ELSE t0.c0 END COLLATE BINARY ASC  NULLS LAST LIMIT 0;
SELECT * FROM rt1 WHERE (((((rt1.c5) ISNULL)) NOT BETWEEN (((rt1.c4)>>(rt1.c4))) AND (((rt1.c2) NOTNULL))));
SELECT * FROM rt1 WHERE (((((((rt1.c5) ISNULL)) NOT BETWEEN (((rt1.c4)>>(rt1.c4))) AND (((rt1.c2) NOTNULL))))AND((((rt1.c2, rt1.c3)) NOT BETWEEN (((NOT (rt1.c0)), ((('', rt1.c5)) NOT BETWEEN ((rt1.c1, rt1.c0)) AND ((rt1.c3, rt1.c4))))) AND ((rt1.c4, (((rt1.c4))>=((rt1.c6))))))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM rt1 WHERE ((((CASE NULL  WHEN rt1.c5 THEN rt1.c0 END, (('-723041045') NOT BETWEEN (rt1.c5) AND (rt1.c5)), ((((0.5168424566143497)AND(rt1.c2)))OR(rt1.c2)), NULL))>((((((((((rt1.c6)AND(-1665136082)))OR(rt1.c0)))AND(rt1.c4)))OR(rt1.c3)), CASE rt1.c5  WHEN rt1.c3 THEN rt1.c1 END, (NULL IN ('0.8783035131824222', rt1.c6, rt1.c1)), TRIM(x'6aaf'))))) LIMIT 0x1;
SELECT * FROM rt1 WHERE (((((rt1.c5) ISNULL)) NOT BETWEEN (((rt1.c4)>>(rt1.c4))) AND (((rt1.c2) NOTNULL))));
SELECT * FROM rt1 WHERE (((((((rt1.c5) ISNULL)) NOT BETWEEN (((rt1.c4)>>(rt1.c4))) AND (((rt1.c2) NOTNULL))))AND((((rt1.c2, rt1.c3)) NOT BETWEEN (((NOT (rt1.c0)), ((('', rt1.c5)) NOT BETWEEN ((rt1.c1, rt1.c0)) AND ((rt1.c3, rt1.c4))))) AND ((rt1.c4, (((rt1.c4))>=((rt1.c6))))))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM rt1 WHERE ((((CASE NULL  WHEN rt1.c5 THEN rt1.c0 END, (('-723041045') NOT BETWEEN (rt1.c5) AND (rt1.c5)), ((((0.5168424566143497)AND(rt1.c2)))OR(rt1.c2)), NULL))>((((((((((rt1.c6)AND(-1665136082)))OR(rt1.c0)))AND(rt1.c4)))OR(rt1.c3)), CASE rt1.c5  WHEN rt1.c3 THEN rt1.c1 END, (NULL IN ('0.8783035131824222', rt1.c6, rt1.c1)), TRIM(x'6aaf'))))) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE ((((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))OR(t0.c1)), CASE WHEN t0.c2 THEN x'ff' ELSE t0.c4 END, (NOT (t0.c3))))<=((IFNULL(t0.c4, t0.c4), (~ (t0.c2)), t0.c0)))) ORDER BY CASE WHEN CAST(t0.c2 AS REAL) THEN t0.c4 WHEN ((t0.c0)AND(t0.c4)) THEN '⡜' WHEN CASE t0.c1  WHEN t0.c4 THEN t0.c2 WHEN t0.c4 THEN t0.c4 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN t0.c2 WHEN 1.844222368E9 THEN t0.c4 END THEN CASE t0.c1  WHEN t0.c2 THEN t0.c4 WHEN t0.c2 THEN t0.c1 WHEN t0.c3 THEN t0.c3 ELSE t0.c2 END ELSE t0.c2 COLLATE NOCASE END DESC  NULLS LAST, ((((t0.c3)LIKE(t0.c2))) NOT BETWEEN (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c3))) AND (((t0.c4)+(t0.c2))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))OR(t0.c1)), CASE WHEN t0.c2 THEN x'ff' ELSE t0.c4 END, (NOT (t0.c3))))==((IFNULL(t0.c4, t0.c4), (~ (t0.c2)), t0.c0)))) ORDER BY ((((t0.c1) ISNULL)) BETWEEN ((((x'6b17', t0.c1, t0.c4)) BETWEEN ((t0.c1, t0.c4, t0.c1)) AND ((t0.c2, t0.c0, t0.c2)))) AND (t0.c3 COLLATE BINARY))  NULLS FIRST, (NOT (((t0.c3) BETWEEN (0xffffffffa8cdd527) AND (t0.c2)))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c3)OR(t0.c2)))AND(t0.c4)))OR(t0.c4)) COLLATE NOCASE) ORDER BY ((((t0.c1) ISNULL)) BETWEEN ((((x'6b17', t0.c1, t0.c4)) BETWEEN ((t0.c1, t0.c4, t0.c1)) AND ((t0.c2, t0.c0, t0.c2)))) AND (t0.c3 COLLATE BINARY))  NULLS FIRST, (NOT (((t0.c3) BETWEEN (0Xffffffffa8cdd527) AND (t0.c2)))) ASC LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))OR(t0.c1)), CASE WHEN t0.c2 THEN x'ff' ELSE t0.c4 END, (NOT (t0.c3))))<=((IFNULL(t0.c4, t0.c4), (~ (t0.c2)), t0.c0)))) ORDER BY CASE WHEN CAST(t0.c2 AS REAL) THEN t0.c4 WHEN ((t0.c0)AND(t0.c4)) THEN '⡜' WHEN CASE t0.c1  WHEN t0.c4 THEN t0.c2 WHEN t0.c4 THEN t0.c4 WHEN t0.c2 THEN t0.c3 WHEN t0.c4 THEN t0.c2 WHEN 1.844222368E9 THEN t0.c4 END THEN CASE t0.c1  WHEN t0.c2 THEN t0.c4 WHEN t0.c2 THEN t0.c1 WHEN t0.c3 THEN t0.c3 ELSE t0.c2 END ELSE t0.c2 COLLATE NOCASE END DESC  NULLS LAST, ((((t0.c3)LIKE(t0.c2))) NOT BETWEEN (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c3))) AND (((t0.c4)+(t0.c2))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))OR(t0.c1)), CASE WHEN t0.c2 THEN x'ff' ELSE t0.c4 END, (NOT (t0.c3))))==((IFNULL(t0.c4, t0.c4), (~ (t0.c2)), t0.c0)))) ORDER BY ((((t0.c1) ISNULL)) BETWEEN ((((x'6b17', t0.c1, t0.c4)) BETWEEN ((t0.c1, t0.c4, t0.c1)) AND ((t0.c2, t0.c0, t0.c2)))) AND (t0.c3 COLLATE BINARY))  NULLS FIRST, (NOT (((t0.c3) BETWEEN (0xffffffffa8cdd527) AND (t0.c2)))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c3)OR(t0.c2)))AND(t0.c4)))OR(t0.c4)) COLLATE NOCASE) ORDER BY ((((t0.c1) ISNULL)) BETWEEN ((((x'6b17', t0.c1, t0.c4)) BETWEEN ((t0.c1, t0.c4, t0.c1)) AND ((t0.c2, t0.c0, t0.c2)))) AND (t0.c3 COLLATE BINARY))  NULLS FIRST, (NOT (((t0.c3) BETWEEN (0Xffffffffa8cdd527) AND (t0.c2)))) ASC LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)AND(t0.c2)))OR('2342307')))OR(t0.c4))) BETWEEN ((((t0.c3)) NOT BETWEEN ((t0.c2)) AND ((t0.c4)))) AND (((t0.c0)*(t0.c2)))));
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)AND(t0.c2)))OR('2342307')))OR(t0.c4))) BETWEEN ((((t0.c3)) NOT BETWEEN ((t0.c2)) AND ((t0.c4)))) AND (((t0.c0)*(t0.c2)))))AND(((((((((t0.c0) IS TRUE))AND(t0.c4 COLLATE NOCASE)))OR(((t0.c3)*('1139347580')))))OR(CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN t0.c4 END))))) ORDER BY (((((t0.c3, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c4, t0.c3)) AND (('-2066432779', t0.c2, t0.c4)))) NOTNULL) DESC  NULLS FIRST, IFNULL(t0.c1 COLLATE NOCASE, CASE t0.c1  WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c3 ELSE t0.c3 END) INTERSECT SELECT * FROM t0 WHERE ('') ORDER BY (((((t0.c3, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c4, t0.c3)) AND (('-2066432779', t0.c2, t0.c4)))) NOTNULL) DESC  NULLS FIRST, IFNULL(t0.c1 COLLATE NOCASE, CASE t0.c1  WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c3 ELSE t0.c3 END);
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)AND(t0.c2)))OR('2342307')))OR(t0.c4))) BETWEEN ((((t0.c3)) NOT BETWEEN ((t0.c2)) AND ((t0.c4)))) AND (((t0.c0)*(t0.c2)))));
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)AND(t0.c2)))OR('2342307')))OR(t0.c4))) BETWEEN ((((t0.c3)) NOT BETWEEN ((t0.c2)) AND ((t0.c4)))) AND (((t0.c0)*(t0.c2)))))AND(((((((((t0.c0) IS TRUE))AND(t0.c4 COLLATE NOCASE)))OR(((t0.c3)*('1139347580')))))OR(CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN t0.c4 END))))) ORDER BY (((((t0.c3, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c4, t0.c3)) AND (('-2066432779', t0.c2, t0.c4)))) NOTNULL) DESC  NULLS FIRST, IFNULL(t0.c1 COLLATE NOCASE, CASE t0.c1  WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c3 ELSE t0.c3 END) INTERSECT SELECT * FROM t0 WHERE ('') ORDER BY (((((t0.c3, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c4, t0.c3)) AND (('-2066432779', t0.c2, t0.c4)))) NOTNULL) DESC  NULLS FIRST, IFNULL(t0.c1 COLLATE NOCASE, CASE t0.c1  WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c3 ELSE t0.c3 END);
SELECT MIN(t0.c4) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c0) AND (t0.c4)))<<(((t0.c3) NOT BETWEEN (t0.c0) AND (t0.c4))))) ORDER BY ((((t0.c2) ISNULL)) ISNULL)  NULLS FIRST;
SELECT DISTINCT MIN(t0.c4) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c0) AND (t0.c4)))<<(((t0.c3) NOT BETWEEN (t0.c0) AND (t0.c4))))) ORDER BY ((((t0.c2) ISNULL)) ISNULL)  NULLS FIRST LIMIT 0;
SELECT MIN(t0.c4) FROM t0, rt1 WHERE (((rt1.c4)&(rt1.c5 COLLATE NOCASE)));
SELECT ALL MIN(t0.c4) FROM t0, rt1 WHERE (((rt1.c4)&(rt1.c5 COLLATE NOCASE))) ORDER BY ((CASE WHEN rt1.c1 THEN t0.c4 WHEN t0.c3 THEN rt1.c4 WHEN rt1.c5 THEN rt1.c0 WHEN t0.c0 THEN t0.c2 END) NOT BETWEEN (CASE t0.c4  WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 WHEN 0.3400969478313104 THEN t0.c2 WHEN NULL THEN rt1.c2 END) AND ((rt1.c4 IN (rt1.c2)))) ASC  NULLS LAST LIMIT 0x3 INTERSECT SELECT MIN(t0.c4) FROM t0, rt1 WHERE (CAST((+ (rt1.c0)) AS INTEGER)) ORDER BY ((CASE WHEN rt1.c1 THEN t0.c4 WHEN t0.c3 THEN rt1.c4 WHEN rt1.c5 THEN rt1.c0 WHEN t0.c0 THEN t0.c2 END) NOT BETWEEN (CASE t0.c4  WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 WHEN 0.3400969478313104 THEN t0.c2 WHEN NULL THEN rt1.c2 END) AND ((rt1.c4 IN (rt1.c2)))) ASC  NULLS LAST LIMIT 0X3;
SELECT ALL MIN(rt1.c1) FROM t0 CROSS JOIN rt1 ON ((((NULL IN ())))>=(((((t0.c4)) NOT BETWEEN ((0X2a617fc)) AND ((rt1.c2)))))) WHERE (CAST(0.9795538932317193 AS BLOB));
SELECT DISTINCT MIN(rt1.c1) FROM t0 CROSS JOIN rt1 ON ((((NULL IN ())))>=(((((t0.c4)) NOT BETWEEN ((44439548)) AND ((rt1.c2)))))) WHERE (CAST(0.9795538932317193 AS BLOB)) ORDER BY (((+ (t0.c2)))<<(rt1.c2)) DESC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT MIN(rt1.c1) FROM t0 CROSS JOIN rt1 ON ((((NULL IN ())))>=(((((t0.c4)) NOT BETWEEN ((0X2a617fc)) AND ((rt1.c2)))))) WHERE (t0.c3) ORDER BY (((+ (t0.c2)))<<(rt1.c2)) DESC  NULLS LAST LIMIT 1;
SELECT ALL MIN(rt1.c4) FROM rt1 WHERE (((~ (rt1.c4)) IN ()));
SELECT DISTINCT MIN(rt1.c4) FROM rt1 WHERE (((~ (rt1.c4)) IN ())) ORDER BY CASE ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c6))  WHEN ((rt1.c2)&(NULL)) THEN (('1302228150') NOT BETWEEN (rt1.c0) AND (rt1.c1)) WHEN ((rt1.c4) BETWEEN ('-1050996115') AND (rt1.c5)) THEN rt1.c0 WHEN NULL THEN ((rt1.c2) NOTNULL) WHEN ((rt1.c0) BETWEEN (NULL) AND (rt1.c6)) THEN x'a7' ELSE (((rt1.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c1))) END, ((((rt1.c2) BETWEEN (rt1.c6) AND (rt1.c6)))+(((rt1.c6)<(rt1.c4)))), (((((((rt1.c4 IN (rt1.c6, rt1.c0)))AND((('e+')<=(rt1.c3)))))OR((rt1.c2 IN (rt1.c0, -2.06571097E9)))))OR(rt1.c5)) DESC LIMIT 0x2 INTERSECT SELECT DISTINCT MIN(rt1.c4) FROM rt1 WHERE (((((((rt1.c6)OR(rt1.c6)))OR(rt1.c0)))||(0.6401469869567569))) ORDER BY CASE ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c6))  WHEN ((rt1.c2)&(NULL)) THEN (('1302228150') NOT BETWEEN (rt1.c0) AND (rt1.c1)) WHEN ((rt1.c4) BETWEEN ('-1050996115') AND (rt1.c5)) THEN rt1.c0 WHEN NULL THEN ((rt1.c2) NOTNULL) WHEN ((rt1.c0) BETWEEN (NULL) AND (rt1.c6)) THEN x'a7' ELSE (((rt1.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c1))) END, ((((rt1.c2) BETWEEN (rt1.c6) AND (rt1.c6)))+(((rt1.c6)<(rt1.c4)))), (((((((rt1.c4 IN (rt1.c6, rt1.c0)))AND((('e+')<=(rt1.c3)))))OR((rt1.c2 IN (rt1.c0, -2.06571097E9)))))OR(rt1.c5)) DESC LIMIT 0X2;
SELECT MAX(t0.c2) FROM rt1, t0 WHERE (((((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c4)))OR((((rt1.c5, rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((t0.c1, rt1.c2, t0.c2, rt1.c3)) AND ((rt1.c0, t0.c1, rt1.c3, t0.c3))))))OR(CAST(rt1.c0 AS NUMERIC))))AND((+ (t0.c1))))) ORDER BY NULL DESC;
SELECT ALL MAX(t0.c2) FROM rt1, t0 WHERE (((((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c4)))OR((((rt1.c5, rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((t0.c1, rt1.c2, t0.c2, rt1.c3)) AND ((rt1.c0, t0.c1, rt1.c3, t0.c3))))))OR(CAST(rt1.c0 AS NUMERIC))))AND((+ (t0.c1))))) ORDER BY NULL DESC LIMIT 1 INTERSECT SELECT MAX(t0.c2) FROM rt1, t0 WHERE (((SQLITE_COMPILEOPTION_USED(rt1.c5))<=(((t0.c1) NOTNULL)))) ORDER BY NULL DESC LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE (CASE -6.98996151E8  WHEN (((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN (+ (0.0434180822951844)) WHEN ((((((((t0.c2)OR('18393758')))AND(t0.c4)))AND(t0.c0)))AND('q4')) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) WHEN LIKE(rt1.c5, t0.c4) THEN CASE WHEN -931378761 THEN rt1.c0 WHEN '!6(u옩Fhwd' THEN '2010798651' WHEN t0.c1 THEN rt1.c5 END END);
SELECT DISTINCT * FROM rt1, t0 WHERE (((CASE -6.98996151E8  WHEN (((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN (+ (0.0434180822951844)) WHEN ((((((((t0.c2)OR('18393758')))AND(t0.c4)))AND(t0.c0)))AND('q4')) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) WHEN LIKE(rt1.c5, t0.c4) THEN CASE WHEN -931378761 THEN rt1.c0 WHEN '!6(u옩Fhwd' THEN '2010798651' WHEN t0.c1 THEN rt1.c5 END END)AND((- (((t0.c4)LIKE(rt1.c0))))))) LIMIT 0x2;
SELECT ALL * FROM rt1, t0 WHERE (CASE -6.98996151E8  WHEN (((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN (+ (0.0434180822951844)) WHEN ((((((((t0.c2)OR('18393758')))AND(t0.c4)))AND(t0.c0)))AND('q4')) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) WHEN LIKE(rt1.c5, t0.c4) THEN CASE WHEN -931378761 THEN rt1.c0 WHEN '!6(u옩Fhwd' THEN '2010798651' WHEN t0.c1 THEN rt1.c5 END END);
SELECT DISTINCT * FROM rt1, t0 WHERE (((CASE -6.98996151E8  WHEN (((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN (+ (0.0434180822951844)) WHEN ((((((((t0.c2)OR('18393758')))AND(t0.c4)))AND(t0.c0)))AND('q4')) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) WHEN LIKE(rt1.c5, t0.c4) THEN CASE WHEN -931378761 THEN rt1.c0 WHEN '!6(u옩Fhwd' THEN '2010798651' WHEN t0.c1 THEN rt1.c5 END END)AND((- (((t0.c4)LIKE(rt1.c0))))))) LIMIT 0x2;
SELECT * FROM t0 WHERE (TIME(t0.c2, (~ (t0.c4)), CASE t0.c2  WHEN t0.c4 THEN '2' WHEN 0Xffffffffca1c5cba THEN t0.c2 WHEN t0.c4 THEN t0.c0 ELSE t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c2)/(t0.c4)), t0.c0 COLLATE NOCASE, '0.7124830930282101'));
SELECT DISTINCT * FROM t0 WHERE (TIME(t0.c2, (~ (t0.c4)), CASE t0.c2  WHEN t0.c4 THEN '2' WHEN 0Xffffffffca1c5cba THEN t0.c2 WHEN t0.c4 THEN t0.c0 ELSE t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c2)/(t0.c4)), t0.c0 COLLATE NOCASE, '0.7124830930282101')) ORDER BY (~ (0Xffffffffccf7299b))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((((((((t0.c4)OR(0.34015700313800834)))AND(t0.c4)))AND(t0.c3)))OR(t0.c4)))AND(t0.c4)))AND(t0.c1)))OR(t0.c2)) COLLATE BINARY COLLATE NOCASE) ORDER BY (~ (-856217189))  NULLS LAST;
SELECT * FROM t0 WHERE (TIME(t0.c2, (~ (t0.c4)), CASE t0.c2  WHEN t0.c4 THEN '2' WHEN 0Xffffffffca1c5cba THEN t0.c2 WHEN t0.c4 THEN t0.c0 ELSE t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c2)/(t0.c4)), t0.c0 COLLATE NOCASE, '0.7124830930282101'));
SELECT DISTINCT * FROM t0 WHERE (TIME(t0.c2, (~ (t0.c4)), CASE t0.c2  WHEN t0.c4 THEN '2' WHEN 0Xffffffffca1c5cba THEN t0.c2 WHEN t0.c4 THEN t0.c0 ELSE t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c2)/(t0.c4)), t0.c0 COLLATE NOCASE, '0.7124830930282101')) ORDER BY (~ (0Xffffffffccf7299b))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((((((((t0.c4)OR(0.34015700313800834)))AND(t0.c4)))AND(t0.c3)))OR(t0.c4)))AND(t0.c4)))AND(t0.c1)))OR(t0.c2)) COLLATE BINARY COLLATE NOCASE) ORDER BY (~ (-856217189))  NULLS LAST;
SELECT MIN(t0.c3) FROM rt1, t0 WHERE ((((NOT (rt1.c5)))>=(((((((((rt1.c6)OR(t0.c0)))OR(t0.c4)))AND(t0.c3)))OR(t0.c3))))) ORDER BY (((rt1.c1)LIKE(rt1.c5)) IN ()) ASC  NULLS LAST;
SELECT DISTINCT MIN(t0.c3) FROM rt1, t0 WHERE ((((NOT (rt1.c5)))>=(((((((((rt1.c6)OR(t0.c0)))OR(t0.c4)))AND(t0.c3)))OR(t0.c3))))) ORDER BY (t0.c2 IN ()) COLLATE BINARY LIMIT 0;
SELECT MIN(rt1.c6) FROM rt1 WHERE ((((rt1.c2, rt1.c2)) NOT BETWEEN ((((((((((((((rt1.c2)AND(rt1.c5)))OR(rt1.c5)))AND(rt1.c3)))AND(rt1.c6)))OR(rt1.c1)))OR(rt1.c4)), (rt1.c2 IN ()))) AND ((rt1.c2, '1573710007'))));
SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE ((((rt1.c2, rt1.c2)) NOT BETWEEN ((((((((((((((rt1.c2)AND(rt1.c5)))OR(rt1.c5)))AND(rt1.c3)))AND(rt1.c6)))OR(rt1.c1)))OR(rt1.c4)), (rt1.c2 IN ()))) AND ((rt1.c2, '1573710007')))) INTERSECT SELECT DISTINCT MIN(rt1.c6) FROM rt1 WHERE ((((rt1.c1, rt1.c6, rt1.c6, rt1.c5)) NOT BETWEEN ((CAST(rt1.c3 AS INTEGER), CAST(rt1.c5 AS BLOB), ((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c0)), (((('!g3y[''')AND('-1463084059')))OR(rt1.c4)))) AND ((rt1.c6 COLLATE RTRIM, ((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c3)))OR('')), (rt1.c0 IN (rt1.c1)), CAST(rt1.c1 AS REAL)))));
SELECT ALL MAX(rt1.c4) FROM t0 CROSS JOIN rt1 ON rt1.c0 WHERE ((NOT (((rt1.c4)||(rt1.c0)))));
SELECT ALL MAX(rt1.c4) FROM t0 CROSS JOIN rt1 ON rt1.c0 WHERE ((((NOT (((rt1.c4)||(rt1.c0)))))AND(t0.c0))) LIMIT 2 INTERSECT SELECT ALL MAX(rt1.c4) FROM t0 CROSS JOIN rt1 ON rt1.c0 WHERE (((((((CASE t0.c4  WHEN rt1.c2 THEN t0.c1 ELSE t0.c4 END)OR(rt1.c2)))AND(CAST(rt1.c2 AS NUMERIC))))OR(NULL))) LIMIT 0x2;
SELECT ALL MIN(t0.c0) FROM rt1, t0 WHERE (x'');
SELECT MIN(t0.c0) FROM rt1, t0 WHERE (((x'')AND((((((t0.c1)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c5))))-(((t0.c1)OR(t0.c0))))))) ORDER BY LIKELIHOOD(CASE WHEN rt1.c6 THEN -1665136082 WHEN rt1.c5 THEN rt1.c2 END, ((rt1.c4)%(rt1.c6))) LIMIT 0x1 INTERSECT SELECT MIN(t0.c0) FROM rt1, t0 WHERE (rt1.c5) ORDER BY LIKELIHOOD(CASE WHEN rt1.c6 THEN 0xffffffff9cc00a2e WHEN rt1.c5 THEN rt1.c2 END, ((rt1.c4)%(rt1.c6))) LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (t0.c4) ORDER BY (((- (t0.c3))) BETWEEN (t0.c2) AND (CAST(x'4f' AS TEXT))) ASC  NULLS FIRST, CAST(((t0.c2) IS TRUE) AS TEXT) DESC;
SELECT ALL * FROM t0 WHERE (((t0.c4)AND(t0.c0))) ORDER BY (((t0.c2, t0.c3, t0.c0)) NOT BETWEEN (('0.5286396087382006', (((t0.c4, t0.c2)) BETWEEN ((t0.c3, NULL)) AND ((t0.c1, -2044483902))), ((t0.c3)<=(t0.c4)))) AND ((NULL, CASE WHEN t0.c0 THEN t0.c4 WHEN t0.c2 THEN NULL ELSE t0.c4 END, x''))) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL * FROM t0 WHERE (CASE WHEN (NOT (t0.c0)) THEN t0.c4 WHEN CAST(t0.c3 AS REAL) THEN ((t0.c1)<=(t0.c2)) END) ORDER BY (((t0.c2, t0.c3, t0.c0)) NOT BETWEEN (('0.5286396087382006', (((t0.c4, t0.c2)) BETWEEN ((t0.c3, NULL)) AND ((t0.c1, -2044483902))), ((t0.c3)<=(t0.c4)))) AND ((NULL, CASE WHEN t0.c0 THEN t0.c4 WHEN t0.c2 THEN NULL ELSE t0.c4 END, x''))) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (t0.c4) ORDER BY (((- (t0.c3))) BETWEEN (t0.c2) AND (CAST(x'4f' AS TEXT))) ASC  NULLS FIRST, CAST(((t0.c2) IS TRUE) AS TEXT) DESC;
SELECT ALL * FROM t0 WHERE (((t0.c4)AND(t0.c0))) ORDER BY (((t0.c2, t0.c3, t0.c0)) NOT BETWEEN (('0.5286396087382006', (((t0.c4, t0.c2)) BETWEEN ((t0.c3, NULL)) AND ((t0.c1, -2044483902))), ((t0.c3)<=(t0.c4)))) AND ((NULL, CASE WHEN t0.c0 THEN t0.c4 WHEN t0.c2 THEN NULL ELSE t0.c4 END, x''))) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL * FROM t0 WHERE (CASE WHEN (NOT (t0.c0)) THEN t0.c4 WHEN CAST(t0.c3 AS REAL) THEN ((t0.c1)<=(t0.c2)) END) ORDER BY (((t0.c2, t0.c3, t0.c0)) NOT BETWEEN (('0.5286396087382006', (((t0.c4, t0.c2)) BETWEEN ((t0.c3, NULL)) AND ((t0.c1, -2044483902))), ((t0.c3)<=(t0.c4)))) AND ((NULL, CASE WHEN t0.c0 THEN t0.c4 WHEN t0.c2 THEN NULL ELSE t0.c4 END, x''))) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt1 WHERE (SQLITE_COMPILEOPTION_GET(rt1.c3)) ORDER BY LIKELY(((rt1.c6)*(0.9633120481880056)))  NULLS LAST, ((0.499098139907317)<=(((((((rt1.c0)AND(rt1.c2)))OR(rt1.c5)))OR(rt1.c6)))) ASC, rt1.c6 ASC;
SELECT DISTINCT * FROM rt1 WHERE (((SQLITE_COMPILEOPTION_GET(rt1.c3))AND(((((((((rt1.c2)AND('{z9W7S^')))AND(rt1.c1)))OR(rt1.c3))) BETWEEN ((NOT ('0.5349723149481403'))) AND (((rt1.c6) NOT NULL)))))) ORDER BY CAST(rt1.c2 AS REAL) DESC  NULLS LAST, ((rt1.c4)>=(rt1.c3)) COLLATE RTRIM ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (rt1.c1) ORDER BY CAST(rt1.c2 AS REAL) DESC  NULLS LAST, ((rt1.c4)>=(rt1.c3)) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (SQLITE_COMPILEOPTION_GET(rt1.c3)) ORDER BY LIKELY(((rt1.c6)*(0.9633120481880056)))  NULLS LAST, ((0.499098139907317)<=(((((((rt1.c0)AND(rt1.c2)))OR(rt1.c5)))OR(rt1.c6)))) ASC, rt1.c6 ASC;
SELECT DISTINCT * FROM rt1 WHERE (((SQLITE_COMPILEOPTION_GET(rt1.c3))AND(((((((((rt1.c2)AND('{z9W7S^')))AND(rt1.c1)))OR(rt1.c3))) BETWEEN ((NOT ('0.5349723149481403'))) AND (((rt1.c6) NOT NULL)))))) ORDER BY CAST(rt1.c2 AS REAL) DESC  NULLS LAST, ((rt1.c4)>=(rt1.c3)) COLLATE RTRIM ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (rt1.c1) ORDER BY CAST(rt1.c2 AS REAL) DESC  NULLS LAST, ((rt1.c4)>=(rt1.c3)) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL MAX(rt1.c6) FROM rt1, t0 WHERE (((t0.c1) NOT NULL));
SELECT DISTINCT MAX(rt1.c6) FROM rt1, t0 WHERE (((((t0.c1) NOT NULL))AND('-180735253'))) ORDER BY ((((t0.c3) NOT BETWEEN (rt1.c1) AND (t0.c2)))>((((t0.c3, t0.c0))==((rt1.c0, rt1.c3))))) ASC INTERSECT SELECT DISTINCT MAX(rt1.c6) FROM rt1, t0 WHERE ((((2029517459))<=((NULL)))) ORDER BY ((((t0.c3) NOT BETWEEN (rt1.c1) AND (t0.c2)))>((((t0.c3, t0.c0))=((rt1.c0, rt1.c3))))) ASC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST((t0.c0 IN (t0.c1, t0.c0)) AS BLOB)) ORDER BY LAST_INSERT_ROWID() ASC  NULLS LAST, 0.9684774486826819;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((CAST((t0.c0 IN (t0.c1, t0.c0)) AS BLOB))AND(0xffffffff908c27ff))) ORDER BY ((((t0.c0)||(t0.c3))) BETWEEN (t0.c4) AND (((t0.c3)&(t0.c2)))) ASC  NULLS LAST, (((((('-81288085')AND(t0.c1)))AND(t0.c1)))-(((9.24252814E8) NOT BETWEEN (t0.c1) AND (t0.c2)))) DESC  NULLS FIRST, (((CAST(t0.c0 AS INTEGER), (+ (t0.c0))))>=(((- (t0.c1)), CAST(t0.c1 AS INTEGER)))) ASC, ((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c3)))AND(t0.c2)))AND(SUBSTR(t0.c0, t0.c0))) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (((t0.c0)||('7?⩉q5'))) AND (((t0.c2) IS TRUE)))) ORDER BY ((((t0.c0)||(t0.c3))) BETWEEN (t0.c4) AND (((t0.c3)&(t0.c2)))) ASC  NULLS LAST, (((((('-81288085')AND(t0.c1)))AND(t0.c1)))-(((9.24252814E8) NOT BETWEEN (t0.c1) AND (t0.c2)))) DESC  NULLS FIRST, (((CAST(t0.c0 AS INTEGER), (+ (t0.c0))))>=(((- (t0.c1)), CAST(t0.c1 AS INTEGER)))) ASC, ((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c3)))AND(t0.c2)))AND(SUBSTR(t0.c0, t0.c0))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c3 IN (t0.c2))) ISNULL));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c3 IN (t0.c2))) ISNULL))AND(rt1.c2))) LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c3 IN (t0.c2))) ISNULL));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c3 IN (t0.c2))) ISNULL))AND(rt1.c2))) LIMIT 0;
SELECT * FROM t0, rt1 WHERE ((((NOT (rt1.c4)))IS(0.2672957122232348))) ORDER BY UNLIKELY(DISTINCT (NULL IN ())) DESC;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((NOT (rt1.c4)))IS(0.2672957122232348))) ORDER BY rt1.c3 DESC  NULLS FIRST, ((t0.c4) ISNULL) COLLATE NOCASE  NULLS LAST LIMIT 1;
SELECT * FROM t0, rt1 WHERE ((((NOT (rt1.c4)))IS(0.2672957122232348))) ORDER BY UNLIKELY(DISTINCT (NULL IN ())) DESC;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((NOT (rt1.c4)))IS(0.2672957122232348))) ORDER BY rt1.c3 DESC  NULLS FIRST, ((t0.c4) ISNULL) COLLATE NOCASE  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM rt1, t0 WHERE ((((t0.c1)/(rt1.c6)) IN (t0.c1 COLLATE BINARY)));
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE ((((t0.c1)/(rt1.c6)) IN (t0.c1 COLLATE BINARY)));
SELECT ALL MAX(t0.c4) FROM t0, rt1 WHERE (TRIM(DISTINCT (((rt1.c4))<((rt1.c6))), (- (rt1.c0)))) ORDER BY (((t0.c4 IN (rt1.c3))) IS FALSE) ASC  NULLS FIRST, (((((rt1.c6))>((t0.c4)))) IS FALSE) DESC  NULLS LAST, CASE WHEN IFNULL(rt1.c2, rt1.c6) THEN ((rt1.c2)<(0.5286396087382006)) ELSE ((rt1.c6)/(rt1.c0)) END DESC;
SELECT ALL MAX(t0.c4) FROM t0, rt1 WHERE (TRIM(DISTINCT (((rt1.c4))<((rt1.c6))), (- (rt1.c0)))) ORDER BY (((t0.c4 IN (rt1.c3))) IS FALSE) ASC  NULLS FIRST, (((((rt1.c6))>((t0.c4)))) IS FALSE) DESC  NULLS LAST, CASE WHEN IFNULL(rt1.c2, rt1.c6) THEN ((rt1.c2)<(0.5286396087382006)) ELSE ((rt1.c6)/(rt1.c0)) END DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3)))))!=((((((((rt1.c6)OR(rt1.c4)))OR(NULL)))OR(0.8846008108150304)))))) ORDER BY (NOT (rt1.c6)) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3)))))>((((((((rt1.c6)OR(rt1.c4)))OR(NULL)))OR(0.8846008108150304))))))AND(((highlight(rt1.c5, rt1.c4, rt1.c5, rt1.c2)) NOT BETWEEN (TYPEOF(rt1.c0)) AND (CAST(0.8985866547440681 AS REAL)))))) ORDER BY (NOT (rt1.c6)) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 ELSE x'185173' END, (rt1.c4 IN (rt1.c2)), ((rt1.c1) NOT NULL), rt1.c5, rt1.c4, (((rt1.c5)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c6)))))>((((rt1.c2)+(rt1.c2)), ((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c6)), rt1.c1, CAST(rt1.c3 AS REAL), rt1.c0, rt1.c6 COLLATE NOCASE))));
SELECT * FROM rt1 WHERE ((((CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 ELSE x'185173' END, (rt1.c4 IN (rt1.c2)), ((rt1.c1) NOT NULL), rt1.c5, rt1.c4, (((rt1.c5)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c6)))))>((((rt1.c2)+(rt1.c2)), ((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c6)), rt1.c1, CAST(rt1.c3 AS REAL), rt1.c0, rt1.c6 COLLATE NOCASE)))) ORDER BY (((NULL COLLATE RTRIM))>=((rt1.c4 COLLATE BINARY)))  NULLS LAST, rt1.c5  NULLS LAST LIMIT 0X1 INTERSECT SELECT ALL * FROM rt1 WHERE (CASE rt1.c1  WHEN 0Xffffffffbfec16bc THEN rt1.c4 END COLLATE BINARY) ORDER BY (((NULL COLLATE RTRIM))>=((rt1.c4 COLLATE BINARY)))  NULLS LAST, rt1.c5  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM rt1 WHERE ((((CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 ELSE x'185173' END, (rt1.c4 IN (rt1.c2)), ((rt1.c1) NOT NULL), rt1.c5, rt1.c4, (((rt1.c5)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c6)))))>((((rt1.c2)+(rt1.c2)), ((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c6)), rt1.c1, CAST(rt1.c3 AS REAL), rt1.c0, rt1.c6 COLLATE NOCASE))));
SELECT * FROM rt1 WHERE ((((CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 ELSE x'185173' END, (rt1.c4 IN (rt1.c2)), ((rt1.c1) NOT NULL), rt1.c5, rt1.c4, (((rt1.c5)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c6)))))>((((rt1.c2)+(rt1.c2)), ((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c6)), rt1.c1, CAST(rt1.c3 AS REAL), rt1.c0, rt1.c6 COLLATE NOCASE)))) ORDER BY (((NULL COLLATE RTRIM))>=((rt1.c4 COLLATE BINARY)))  NULLS LAST, rt1.c5  NULLS LAST LIMIT 0X1 INTERSECT SELECT ALL * FROM rt1 WHERE (CASE rt1.c1  WHEN 0Xffffffffbfec16bc THEN rt1.c4 END COLLATE BINARY) ORDER BY (((NULL COLLATE RTRIM))>=((rt1.c4 COLLATE BINARY)))  NULLS LAST, rt1.c5  NULLS LAST LIMIT 0X1;
SELECT MAX(t0.c1) FROM t0 WHERE (CAST(t0.c4 AS INTEGER)) ORDER BY -856217189 DESC;
SELECT DISTINCT MAX(t0.c1) FROM t0 WHERE (CAST(t0.c4 AS INTEGER)) ORDER BY ((((t0.c2)%(t0.c0))) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE NULL  WHEN ((rt1.c4) IS FALSE) THEN ((t0.c2) IS FALSE) END);
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE NULL  WHEN ((rt1.c4) IS FALSE) THEN ((t0.c2) IS FALSE) END) LIMIT 2;
SELECT * FROM rt1, t0 WHERE (((t0.c1) NOT BETWEEN (rt1.c5) AND (((rt1.c2)LIKE(t0.c3))))) ORDER BY (((t0.c0, t0.c4, rt1.c2, ']V0{s>*w'))>=((t0.c1, t0.c2, rt1.c2, rt1.c4))) COLLATE BINARY  NULLS LAST, ((((((((rt1.c1)IS NOT(t0.c3)))AND(((t0.c2)+(t0.c4)))))AND((('1536644154')GLOB(rt1.c2)))))OR((- (t0.c1)))) DESC, rt1.c3;
SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c1) NOT BETWEEN (rt1.c5) AND (((rt1.c2)LIKE(t0.c3))))) ORDER BY rt1.c1 DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((x'f8' IN (((0.08182845140269956) BETWEEN (x'') AND (rt1.c0))))) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (((t0.c1) NOT BETWEEN (rt1.c5) AND (((rt1.c2)LIKE(t0.c3))))) ORDER BY (((t0.c0, t0.c4, rt1.c2, ']V0{s>*w'))>=((t0.c1, t0.c2, rt1.c2, rt1.c4))) COLLATE BINARY  NULLS LAST, ((((((((rt1.c1)IS NOT(t0.c3)))AND(((t0.c2)+(t0.c4)))))AND((('1536644154')GLOB(rt1.c2)))))OR((- (t0.c1)))) DESC, rt1.c3;
SELECT DISTINCT * FROM rt1, t0 WHERE (((t0.c1) NOT BETWEEN (rt1.c5) AND (((rt1.c2)LIKE(t0.c3))))) ORDER BY rt1.c1 DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((x'f8' IN (((0.08182845140269956) BETWEEN (x'') AND (rt1.c0))))) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (CAST(0.4875802708536756 AS REAL)) ORDER BY ((+ (rt1.c5)) IN (((t0.c0)=(0.4336950116839081)), CASE WHEN rt1.c1 THEN rt1.c6 WHEN x'2da1' THEN t0.c0 WHEN rt1.c1 THEN t0.c4 END)) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(0.4875802708536756 AS REAL))AND(((~ (rt1.c1)) IN ())))) ORDER BY ((+ (rt1.c5)) IN (((t0.c0)==(0.4336950116839081)), CASE WHEN rt1.c1 THEN rt1.c6 WHEN x'2da1' THEN t0.c0 WHEN rt1.c1 THEN t0.c4 END)) DESC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (CAST(0.4875802708536756 AS REAL)) ORDER BY ((+ (rt1.c5)) IN (((t0.c0)=(0.4336950116839081)), CASE WHEN rt1.c1 THEN rt1.c6 WHEN x'2da1' THEN t0.c0 WHEN rt1.c1 THEN t0.c4 END)) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((CAST(0.4875802708536756 AS REAL))AND(((~ (rt1.c1)) IN ())))) ORDER BY ((+ (rt1.c5)) IN (((t0.c0)==(0.4336950116839081)), CASE WHEN rt1.c1 THEN rt1.c6 WHEN x'2da1' THEN t0.c0 WHEN rt1.c1 THEN t0.c4 END)) DESC  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (((((((0.032681387684096674)AND(rt1.c2)))AND(t0.c3))) IS TRUE));
SELECT * FROM t0, rt1 WHERE (((((((0.032681387684096674)AND(rt1.c2)))AND(t0.c3))) IS TRUE)) LIMIT 0x2;
SELECT * FROM t0, rt1 WHERE (((((((0.032681387684096674)AND(rt1.c2)))AND(t0.c3))) IS TRUE));
SELECT * FROM t0, rt1 WHERE (((((((0.032681387684096674)AND(rt1.c2)))AND(t0.c3))) IS TRUE)) LIMIT 0x2;
SELECT * FROM rt1 INNER JOIN t0 ON (((('90315868')LIKE(rt1.c3)))<<((x'dd8749aa15' IN (t0.c2, rt1.c6)))) WHERE ((((rt1.c6) IS TRUE) IN (rt1.c4))) ORDER BY ((((rt1.c2)>(rt1.c3))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (x'd9b021dd') AND (t0.c3))) AND (((rt1.c5) NOT BETWEEN (t0.c3) AND (rt1.c1)))), rt1.c5, ((NULLIF(DISTINCT rt1.c3, rt1.c4)) NOTNULL)  NULLS LAST;
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((('90315868')LIKE(rt1.c3)))<<((x'dd8749aa15' IN (t0.c2, rt1.c6)))) WHERE ((((((rt1.c6) IS TRUE) IN (rt1.c4)))AND(CASE WHEN rt1.c3 THEN rt1.c6 COLLATE RTRIM WHEN CASE WHEN NULL THEN rt1.c5 WHEN '' THEN '35009463' WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c2 THEN t0.c0 ELSE t0.c1 END THEN t0.c2 WHEN (rt1.c4 IN (t0.c1)) THEN (((rt1.c4, t0.c1)) BETWEEN ((rt1.c6, rt1.c5)) AND ((rt1.c2, rt1.c0))) END))) ORDER BY ((((rt1.c2)>(rt1.c3))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (x'd9b021dd') AND (t0.c3))) AND (((rt1.c5) NOT BETWEEN (t0.c3) AND (rt1.c1)))), rt1.c5, ((NULLIF(DISTINCT rt1.c3, rt1.c4)) NOTNULL)  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((('90315868')LIKE(rt1.c3)))<<((x'dd8749aa15' IN (t0.c2, rt1.c6)))) WHERE (CASE ((rt1.c3)>(t0.c1))  WHEN CAST(rt1.c2 AS BLOB) THEN UNICODE(rt1.c5) ELSE ((rt1.c2)IS NOT(t0.c4)) END) ORDER BY ((((rt1.c2)>(rt1.c3))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (x'd9b021dd') AND (t0.c3))) AND (((rt1.c5) NOT BETWEEN (t0.c3) AND (rt1.c1)))), rt1.c5, ((NULLIF(DISTINCT rt1.c3, rt1.c4)) NOTNULL)  NULLS LAST;
SELECT * FROM rt1 INNER JOIN t0 ON (((('90315868')LIKE(rt1.c3)))<<((x'dd8749aa15' IN (t0.c2, rt1.c6)))) WHERE ((((rt1.c6) IS TRUE) IN (rt1.c4))) ORDER BY ((((rt1.c2)>(rt1.c3))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (x'd9b021dd') AND (t0.c3))) AND (((rt1.c5) NOT BETWEEN (t0.c3) AND (rt1.c1)))), rt1.c5, ((NULLIF(DISTINCT rt1.c3, rt1.c4)) NOTNULL)  NULLS LAST;
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((('90315868')LIKE(rt1.c3)))<<((x'dd8749aa15' IN (t0.c2, rt1.c6)))) WHERE ((((((rt1.c6) IS TRUE) IN (rt1.c4)))AND(CASE WHEN rt1.c3 THEN rt1.c6 COLLATE RTRIM WHEN CASE WHEN NULL THEN rt1.c5 WHEN '' THEN '35009463' WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c2 THEN t0.c0 ELSE t0.c1 END THEN t0.c2 WHEN (rt1.c4 IN (t0.c1)) THEN (((rt1.c4, t0.c1)) BETWEEN ((rt1.c6, rt1.c5)) AND ((rt1.c2, rt1.c0))) END))) ORDER BY ((((rt1.c2)>(rt1.c3))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (x'd9b021dd') AND (t0.c3))) AND (((rt1.c5) NOT BETWEEN (t0.c3) AND (rt1.c1)))), rt1.c5, ((NULLIF(DISTINCT rt1.c3, rt1.c4)) NOTNULL)  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((('90315868')LIKE(rt1.c3)))<<((x'dd8749aa15' IN (t0.c2, rt1.c6)))) WHERE (CASE ((rt1.c3)>(t0.c1))  WHEN CAST(rt1.c2 AS BLOB) THEN UNICODE(rt1.c5) ELSE ((rt1.c2)IS NOT(t0.c4)) END) ORDER BY ((((rt1.c2)>(rt1.c3))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (x'd9b021dd') AND (t0.c3))) AND (((rt1.c5) NOT BETWEEN (t0.c3) AND (rt1.c1)))), rt1.c5, ((NULLIF(DISTINCT rt1.c3, rt1.c4)) NOTNULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((NOT (x'64d3'))) NOT BETWEEN (load_extension(x'')) AND (t0.c1 COLLATE BINARY)));
SELECT * FROM t0 WHERE ((((NOT (x'64d3'))) NOT BETWEEN (load_extension(x'')) AND (t0.c1 COLLATE BINARY))) ORDER BY ((t0.c4) NOT BETWEEN (t0.c1) AND ('')) ASC  NULLS FIRST, ((CASE WHEN t0.c2 THEN t0.c0 END)||((((t0.c3)) NOT BETWEEN ((t0.c2)) AND ((t0.c4))))) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((NOT (x'64d3'))) NOT BETWEEN (load_extension(x'')) AND (t0.c1 COLLATE BINARY)));
SELECT ALL MIN(t0.c2) FROM rt1, t0 WHERE (t0.c4) ORDER BY ((CASE rt1.c0  WHEN t0.c4 THEN x'9922da' END)LIKE(rt1.c4 COLLATE BINARY))  NULLS FIRST, x'2255' ASC;
SELECT ALL MIN(t0.c2) FROM rt1, t0 WHERE (t0.c4) ORDER BY ((CASE rt1.c0  WHEN t0.c4 THEN x'9922da' END)LIKE(rt1.c4 COLLATE BINARY))  NULLS FIRST, x'2255' ASC LIMIT 0x0 INTERSECT SELECT ALL MIN(t0.c2) FROM rt1, t0 WHERE (((((((t0.c0) IS FALSE))OR(rt1.c3)))AND(t0.c0))) ORDER BY ((CASE rt1.c0  WHEN t0.c4 THEN x'9922da' END)LIKE(rt1.c4 COLLATE BINARY))  NULLS FIRST, x'2255' ASC LIMIT 0X0;
SELECT * FROM rt1 INNER JOIN t0 ON 475906789 WHERE (((((rt1.c2)>(rt1.c5))) NOT NULL)) ORDER BY ((((rt1.c2 IN (t0.c0))))<>((('0.45735093364541624' IN (NULL, rt1.c3))))), ((((t0.c2) BETWEEN (333583398) AND (t0.c2)))>>(rt1.c2 COLLATE NOCASE)) DESC;
SELECT * FROM rt1 INNER JOIN t0 ON 475906789 WHERE (((((((rt1.c2)>(rt1.c5))) NOT NULL))AND((((rt1.c0) NOT NULL) IN ())))) ORDER BY ((((rt1.c2 IN (t0.c0))))!=((('0.45735093364541624' IN (NULL, rt1.c3))))), ((((t0.c2) BETWEEN (0X13e21426) AND (t0.c2)))>>(rt1.c2 COLLATE NOCASE)) DESC;
SELECT * FROM rt1 INNER JOIN t0 ON 475906789 WHERE (((((rt1.c2)>(rt1.c5))) NOT NULL)) ORDER BY ((((rt1.c2 IN (t0.c0))))<>((('0.45735093364541624' IN (NULL, rt1.c3))))), ((((t0.c2) BETWEEN (333583398) AND (t0.c2)))>>(rt1.c2 COLLATE NOCASE)) DESC;
SELECT * FROM rt1 INNER JOIN t0 ON 475906789 WHERE (((((((rt1.c2)>(rt1.c5))) NOT NULL))AND((((rt1.c0) NOT NULL) IN ())))) ORDER BY ((((rt1.c2 IN (t0.c0))))!=((('0.45735093364541624' IN (NULL, rt1.c3))))), ((((t0.c2) BETWEEN (0X13e21426) AND (t0.c2)))>>(rt1.c2 COLLATE NOCASE)) DESC;
SELECT ALL MAX(t0.c1) FROM t0 WHERE (((((t0.c4)/(t0.c2))) BETWEEN (t0.c3) AND (((t0.c4) NOT NULL))));
SELECT DISTINCT MAX(t0.c1) FROM t0 WHERE (((((((t0.c4)/(t0.c2))) BETWEEN (t0.c3) AND (((t0.c4) NOT NULL))))AND((((t0.c2, t0.c4, t0.c3, t0.c1)) NOT BETWEEN ((t0.c3 COLLATE BINARY, NULL, (((t0.c0, t0.c4))<((t0.c1, t0.c1))), ((t0.c0)GLOB(t0.c3)))) AND ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c4 WHEN t0.c1 THEN t0.c3 END, CASE x'15'  WHEN t0.c2 THEN t0.c4 END, (((t0.c3, t0.c3)) BETWEEN ((t0.c0, t0.c2)) AND ((t0.c0, t0.c2))), ((((((((((t0.c3)OR(t0.c2)))AND(t0.c3)))AND(t0.c1)))OR(t0.c0)))OR(t0.c2)))))))) ORDER BY ('-1391045643' IN ()) ASC  NULLS LAST, CAST((NOT (t0.c1)) AS NUMERIC) DESC, ((((((((((((((((((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c3)))AND((((t0.c0, t0.c1, NULL, t0.c0)) NOT BETWEEN ((t0.c4, t0.c3, t0.c1, t0.c1)) AND ((t0.c2, t0.c2, t0.c3, 0X77d53692))))))AND(((t0.c0) NOT BETWEEN (t0.c3) AND (t0.c3)))))AND(LENGTH(t0.c0))))OR(t0.c3)))AND(NULL)))OR(json_quote(t0.c1))))AND((((t0.c2, '-883143184')) NOT BETWEEN ((t0.c1, t0.c1)) AND ((t0.c4, t0.c2))))))OR(t0.c1 COLLATE RTRIM)))AND((((t0.c1, t0.c0))<((t0.c1, t0.c3)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0 WHERE (((rt1.c3 COLLATE BINARY) BETWEEN ((~ (t0.c1))) AND (((((rt1.c3)OR(rt1.c1)))OR(t0.c0))))) ORDER BY TRIM(SQLITE_VERSION(), x'83') DESC, 0.46539763801619694 COLLATE RTRIM DESC  NULLS FIRST, ((DATETIME(t0.c0, 'o', t0.c3, rt1.c5))>>(CHANGES()));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((rt1.c3 COLLATE BINARY) BETWEEN ((~ (t0.c1))) AND (((((rt1.c3)OR(rt1.c1)))OR(t0.c0)))))AND(CASE WHEN '924225947' THEN (('467217330') NOT NULL) WHEN (((t0.c0))>=((t0.c0))) THEN '-1071383120' WHEN CAST(x'a8' AS BLOB) THEN rt1.c3 ELSE ((rt1.c3) NOT NULL) END))) ORDER BY TRIM(SQLITE_VERSION(), x'83') DESC, 0.46539763801619694 COLLATE RTRIM DESC  NULLS FIRST, ((DATETIME(t0.c0, 'o', t0.c3, rt1.c5))>>(CHANGES()));
SELECT * FROM rt1 WHERE ((((rt1.c6, rt1.c2)) BETWEEN (((NOT (rt1.c6)), rt1.c2)) AND ((TRIM(rt1.c5), CAST(rt1.c1 AS BLOB))))) ORDER BY QUOTE(NULL);
SELECT * FROM rt1 WHERE ((((((rt1.c6, rt1.c2)) BETWEEN (((NOT (rt1.c6)), rt1.c2)) AND ((TRIM(rt1.c5), CAST(rt1.c1 AS BLOB)))))AND((((rt1.c4)) NOT BETWEEN ((rt1.c4 COLLATE NOCASE)) AND (((('-1463084059')==(x'')))))))) ORDER BY (((rt1.c0, rt1.c0, rt1.c0)) NOT BETWEEN (((('') NOT BETWEEN (rt1.c4) AND (rt1.c3)), rt1.c4 COLLATE NOCASE, ((rt1.c4) NOT NULL))) AND ((((((rt1.c2)OR(rt1.c4)))OR(rt1.c4)), ((rt1.c3)>=(0.6548030930211851)), ((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4))))) DESC, 'hhّ'  NULLS LAST LIMIT 1;
SELECT * FROM rt1 WHERE ((((rt1.c6, rt1.c2)) BETWEEN (((NOT (rt1.c6)), rt1.c2)) AND ((TRIM(rt1.c5), CAST(rt1.c1 AS BLOB))))) ORDER BY QUOTE(NULL);
SELECT * FROM rt1 WHERE ((((((rt1.c6, rt1.c2)) BETWEEN (((NOT (rt1.c6)), rt1.c2)) AND ((TRIM(rt1.c5), CAST(rt1.c1 AS BLOB)))))AND((((rt1.c4)) NOT BETWEEN ((rt1.c4 COLLATE NOCASE)) AND (((('-1463084059')==(x'')))))))) ORDER BY (((rt1.c0, rt1.c0, rt1.c0)) NOT BETWEEN (((('') NOT BETWEEN (rt1.c4) AND (rt1.c3)), rt1.c4 COLLATE NOCASE, ((rt1.c4) NOT NULL))) AND ((((((rt1.c2)OR(rt1.c4)))OR(rt1.c4)), ((rt1.c3)>=(0.6548030930211851)), ((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4))))) DESC, 'hhّ'  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt1, t0 WHERE (((((((((t0.c1)AND(t0.c0)))OR(0.178836082653679)))OR(rt1.c3)))>=(((rt1.c2) NOT NULL))));
SELECT * FROM rt1, t0 WHERE (((((((((((t0.c1)AND(t0.c0)))OR(0.178836082653679)))OR(rt1.c3)))>(((rt1.c2) NOT NULL))))AND((((((((((((rt1.c2)) BETWEEN ((t0.c3)) AND ((rt1.c0))))OR(t0.c3)))OR(t0.c4)))AND(((rt1.c3)>>(rt1.c6)))))OR(((rt1.c2) NOT NULL)))))) ORDER BY (((rt1.c6)=(rt1.c0)) IN (rt1.c5 COLLATE BINARY, (((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((t0.c4)))))  NULLS FIRST, CASE WHEN ((t0.c3) NOTNULL) THEN t0.c2 COLLATE BINARY WHEN (x'' IN (t0.c4)) THEN ((t0.c4) ISNULL) WHEN t0.c0 COLLATE BINARY THEN ((((t0.c3)OR(rt1.c1)))AND('H7lMH')) END LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (((((((((t0.c1)AND(t0.c0)))OR(0.178836082653679)))OR(rt1.c3)))>=(((rt1.c2) NOT NULL))));
SELECT * FROM rt1, t0 WHERE (((((((((((t0.c1)AND(t0.c0)))OR(0.178836082653679)))OR(rt1.c3)))>(((rt1.c2) NOT NULL))))AND((((((((((((rt1.c2)) BETWEEN ((t0.c3)) AND ((rt1.c0))))OR(t0.c3)))OR(t0.c4)))AND(((rt1.c3)>>(rt1.c6)))))OR(((rt1.c2) NOT NULL)))))) ORDER BY (((rt1.c6)=(rt1.c0)) IN (rt1.c5 COLLATE BINARY, (((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((t0.c4)))))  NULLS FIRST, CASE WHEN ((t0.c3) NOTNULL) THEN t0.c2 COLLATE BINARY WHEN (x'' IN (t0.c4)) THEN ((t0.c4) ISNULL) WHEN t0.c0 COLLATE BINARY THEN ((((t0.c3)OR(rt1.c1)))AND('H7lMH')) END LIMIT 0;
SELECT * FROM t0, rt1 WHERE ((((t0.c3)>(t0.c4)) IN ((rt1.c3 IN ())))) ORDER BY ((((((t0.c1)AND(t0.c0)))OR(rt1.c3))) NOTNULL), ((CAST(rt1.c0 AS BLOB))<<('2084572322')) ASC, ((t0.c4)*(t0.c4)) COLLATE RTRIM DESC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((t0.c3)>(t0.c4)) IN ((rt1.c3 IN ())))) ORDER BY (((CASE WHEN t0.c1 THEN rt1.c3 WHEN t0.c2 THEN NULL ELSE t0.c0 END))=((CASE WHEN rt1.c5 THEN rt1.c6 ELSE t0.c3 END)))  NULLS LAST, LAST_INSERT_ROWID() ASC  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE ((((t0.c3)>(t0.c4)) IN ((rt1.c3 IN ())))) ORDER BY ((((((t0.c1)AND(t0.c0)))OR(rt1.c3))) NOTNULL), ((CAST(rt1.c0 AS BLOB))<<('2084572322')) ASC, ((t0.c4)*(t0.c4)) COLLATE RTRIM DESC  NULLS LAST;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((t0.c3)>(t0.c4)) IN ((rt1.c3 IN ())))) ORDER BY (((CASE WHEN t0.c1 THEN rt1.c3 WHEN t0.c2 THEN NULL ELSE t0.c0 END))=((CASE WHEN rt1.c5 THEN rt1.c6 ELSE t0.c3 END)))  NULLS LAST, LAST_INSERT_ROWID() ASC  NULLS FIRST;
SELECT MAX(rt1.c0) FROM rt1, t0 WHERE (0Xffffffffb3bf5733);
SELECT MAX(rt1.c0) FROM rt1, t0 WHERE (((-1279305933)AND((- ((t0.c4 IN (rt1.c1, t0.c4))))))) ORDER BY LIKE(((rt1.c5) ISNULL), (((t0.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c4)))) DESC;
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (CASE WHEN ((t0.c3)&(t0.c1)) THEN (rt1.c4 IN ()) WHEN (NOT (rt1.c4)) THEN '-856217189' WHEN ((t0.c3) ISNULL) THEN x'0a6eeafa' WHEN rt1.c4 COLLATE BINARY THEN 0x78f7fa93 END) ORDER BY t0.c1  NULLS LAST;
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (CASE WHEN ((t0.c3)&(t0.c1)) THEN (rt1.c4 IN ()) WHEN (NOT (rt1.c4)) THEN '-856217189' WHEN ((t0.c3) ISNULL) THEN x'0a6eeafa' WHEN rt1.c4 COLLATE BINARY THEN 0x78f7fa93 END) ORDER BY t0.c1  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (CASE WHEN ((t0.c3)&(t0.c1)) THEN (rt1.c4 IN ()) WHEN (NOT (rt1.c4)) THEN '-856217189' WHEN ((t0.c3) ISNULL) THEN x'0a6eeafa' WHEN rt1.c4 COLLATE BINARY THEN 0x78f7fa93 END) ORDER BY t0.c1  NULLS LAST;
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (CASE WHEN ((t0.c3)&(t0.c1)) THEN (rt1.c4 IN ()) WHEN (NOT (rt1.c4)) THEN '-856217189' WHEN ((t0.c3) ISNULL) THEN x'0a6eeafa' WHEN rt1.c4 COLLATE BINARY THEN 0x78f7fa93 END) ORDER BY t0.c1  NULLS LAST LIMIT 0X1;
SELECT * FROM rt1 WHERE (rt1.c6);
SELECT ALL * FROM rt1 WHERE (rt1.c6) ORDER BY NULL ASC  NULLS FIRST, rt1.c2 ASC  NULLS LAST, ((((rt1.c6)AND(0Xffffffff84adbe62)))AND(NULL)) COLLATE BINARY, CAST('B,' AS REAL) LIMIT 0;
SELECT * FROM rt1 WHERE (rt1.c6);
SELECT ALL * FROM rt1 WHERE (rt1.c6) ORDER BY NULL ASC  NULLS FIRST, rt1.c2 ASC  NULLS LAST, ((((rt1.c6)AND(0Xffffffff84adbe62)))AND(NULL)) COLLATE BINARY, CAST('B,' AS REAL) LIMIT 0;
SELECT ALL * FROM rt1 WHERE ((((((0.3070050356607299)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c2))))|(((((rt1.c1)AND(rt1.c3)))OR(rt1.c2))))) ORDER BY ((CASE '1581 1648T-3947515096231113976-7767931552631162227T4736573324571655767-4061580197157516404 539T'  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (CAST(rt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE ((((((0.3070050356607299)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c2))))|(((((rt1.c1)AND(rt1.c3)))OR(rt1.c2))))) ORDER BY ((((rt1.c1)>>(rt1.c2)))||(rt1.c3 COLLATE NOCASE))  NULLS LAST, ((((((((x'')OR(((rt1.c1)LIKE(rt1.c6)))))OR(rt1.c6)))AND(((rt1.c3) ISNULL))))OR((((rt1.c3))>=((rt1.c4))))) DESC;
SELECT ALL * FROM rt1 WHERE ((((((0.3070050356607299)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c2))))|(((((rt1.c1)AND(rt1.c3)))OR(rt1.c2))))) ORDER BY ((CASE '1581 1648T-3947515096231113976-7767931552631162227T4736573324571655767-4061580197157516404 539T'  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (CAST(rt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE ((((((0.3070050356607299)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c2))))|(((((rt1.c1)AND(rt1.c3)))OR(rt1.c2))))) ORDER BY ((((rt1.c1)>>(rt1.c2)))||(rt1.c3 COLLATE NOCASE))  NULLS LAST, ((((((((x'')OR(((rt1.c1)LIKE(rt1.c6)))))OR(rt1.c6)))AND(((rt1.c3) ISNULL))))OR((((rt1.c3))>=((rt1.c4))))) DESC;
SELECT * FROM rt1 WHERE (((((rt1.c2) ISNULL)) NOT BETWEEN ((+ (rt1.c3))) AND (rt1.c0))) ORDER BY ((((((((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))OR((rt1.c2 IN (rt1.c0, rt1.c4)))))AND((((rt1.c2)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))))))AND((rt1.c3 IN (rt1.c4, rt1.c0)))))AND(rt1.c3 COLLATE NOCASE)))AND((~ (rt1.c4)))) ASC  NULLS LAST, (~ (CAST(rt1.c2 AS INTEGER))), LIKELIHOOD((+ (rt1.c2)), (rt1.c4 IN (rt1.c6))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c2) ISNULL)) NOT BETWEEN ((+ (rt1.c3))) AND (rt1.c0))) ORDER BY ((((((((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))OR((rt1.c2 IN (rt1.c0, rt1.c4)))))AND((((rt1.c2)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))))))AND((rt1.c3 IN (rt1.c4, rt1.c0)))))AND(rt1.c3 COLLATE NOCASE)))AND((~ (rt1.c4)))) ASC  NULLS LAST, (~ (CAST(rt1.c2 AS INTEGER))), LIKELIHOOD((+ (rt1.c2)), (rt1.c4 IN (rt1.c6))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((rt1.c2) ISNULL)) NOT BETWEEN ((+ (rt1.c3))) AND (rt1.c0))) ORDER BY ((((((((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))OR((rt1.c2 IN (rt1.c0, rt1.c4)))))AND((((rt1.c2)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))))))AND((rt1.c3 IN (rt1.c4, rt1.c0)))))AND(rt1.c3 COLLATE NOCASE)))AND((~ (rt1.c4)))) ASC  NULLS LAST, (~ (CAST(rt1.c2 AS INTEGER))), LIKELIHOOD((+ (rt1.c2)), (rt1.c4 IN (rt1.c6))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CASE rt1.c1 COLLATE BINARY  WHEN -547373890 THEN ((((((t0.c1)AND(rt1.c3)))OR(rt1.c4)))OR(t0.c3)) WHEN (((NULL, t0.c2, rt1.c5))<((rt1.c5, t0.c2, rt1.c4))) THEN ((t0.c0)<<(rt1.c0)) END) ORDER BY (LIKELY(DISTINCT rt1.c4) IN ((NOT (NULL)))) ASC  NULLS FIRST, t0.c1  NULLS FIRST, ((((t0.c1) NOT NULL)) BETWEEN (rt1.c3 COLLATE BINARY) AND (json_array(rt1.c2, rt1.c3, rt1.c6, -889508270))) DESC;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((CASE rt1.c1 COLLATE BINARY  WHEN -547373890 THEN ((((((t0.c1)AND(rt1.c3)))OR(rt1.c4)))OR(t0.c3)) WHEN (((NULL, t0.c2, rt1.c5))<((rt1.c5, t0.c2, rt1.c4))) THEN ((t0.c0)<<(rt1.c0)) END)AND(t0.c3))) ORDER BY (LIKELY(DISTINCT rt1.c4) IN ((NOT (NULL)))) ASC  NULLS FIRST, t0.c1  NULLS FIRST, ((((t0.c1) NOT NULL)) BETWEEN (rt1.c3 COLLATE BINARY) AND (json_array(rt1.c2, rt1.c3, rt1.c6, -889508270))) DESC INTERSECT SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt1 WHERE ((((CAST(t0.c3 AS BLOB)))>((CAST(t0.c1 AS NUMERIC))))) ORDER BY (LIKELY(DISTINCT rt1.c4) IN ((NOT (NULL)))) ASC  NULLS FIRST, t0.c1  NULLS FIRST, ((((t0.c1) NOT NULL)) BETWEEN (rt1.c3 COLLATE BINARY) AND (json_array(rt1.c2, rt1.c3, rt1.c6, -889508270))) DESC;
SELECT ALL MIN(t0.c2) FROM rt1, t0 WHERE ((NOT (CAST(t0.c0 AS NUMERIC)))) ORDER BY (CASE t0.c2  WHEN t0.c0 THEN rt1.c4 ELSE rt1.c1 END IN (json_extract(rt1.c5, t0.c0))) ASC, CAST(((t0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3)) AS REAL)  NULLS FIRST, ((IFNULL(rt1.c5, rt1.c0))=((rt1.c5 IN (t0.c4, t0.c2))))  NULLS LAST;
SELECT DISTINCT MIN(t0.c2) FROM rt1, t0 WHERE ((((NOT (CAST(t0.c0 AS NUMERIC))))AND((((-1930007725, x'45', '-208235594'))>((3.03395121E8 COLLATE RTRIM, t0.c4 COLLATE RTRIM, ((rt1.c4)<(t0.c0)))))))) ORDER BY '-535538459'  NULLS LAST, ((((t0.c0) BETWEEN (t0.c2) AND (t0.c1))) ISNULL) LIMIT 0x0;
SELECT MAX(t0.c0) FROM t0 WHERE ((~ (t0.c1))) ORDER BY (((t0.c0)OR(1715038467)) IN (((((((((((t0.c0)OR(t0.c1)))OR(t0.c3)))AND(t0.c4)))OR(t0.c0)))AND(t0.c0)), ((((((t0.c1)OR(t0.c3)))OR(t0.c2)))OR(t0.c1)))) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((~ (t0.c1)))AND(CAST(CASE WHEN t0.c3 THEN t0.c1 WHEN t0.c1 THEN t0.c4 WHEN t0.c2 THEN t0.c0 END AS TEXT)))) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY DESC LIMIT 2;
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c3) IS FALSE));
SELECT * FROM t0, rt1 WHERE (((((rt1.c3) IS FALSE))AND(t0.c4))) ORDER BY ((UNLIKELY(t0.c1)) NOT BETWEEN (((t0.c3)||(rt1.c6))) AND (CASE t0.c0  WHEN rt1.c5 THEN t0.c3 WHEN t0.c0 THEN rt1.c6 WHEN t0.c0 THEN 0.8664384533844339 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c2 END)), (((((NULL, t0.c2, rt1.c2, rt1.c4)) BETWEEN ((rt1.c5, rt1.c4, rt1.c1, rt1.c6)) AND ((rt1.c2, rt1.c5, rt1.c6, t0.c3))))OR((((t0.c1))==((t0.c3))))), 0Xffffffff84dfc086  NULLS FIRST LIMIT 4;
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c3) IS FALSE));
SELECT * FROM t0, rt1 WHERE (((((rt1.c3) IS FALSE))AND(t0.c4))) ORDER BY ((UNLIKELY(t0.c1)) NOT BETWEEN (((t0.c3)||(rt1.c6))) AND (CASE t0.c0  WHEN rt1.c5 THEN t0.c3 WHEN t0.c0 THEN rt1.c6 WHEN t0.c0 THEN 0.8664384533844339 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c2 END)), (((((NULL, t0.c2, rt1.c2, rt1.c4)) BETWEEN ((rt1.c5, rt1.c4, rt1.c1, rt1.c6)) AND ((rt1.c2, rt1.c5, rt1.c6, t0.c3))))OR((((t0.c1))==((t0.c3))))), 0Xffffffff84dfc086  NULLS FIRST LIMIT 4;
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c3) IS FALSE))GLOB(((rt1.c0) IS FALSE))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c3) IS FALSE))GLOB(((rt1.c0) IS FALSE)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (rt1.c1) LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c3) IS FALSE))GLOB(((rt1.c0) IS FALSE))));
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c3) IS FALSE))GLOB(((rt1.c0) IS FALSE)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE (rt1.c1) LIMIT 0x0;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((rt1.c0)OR(((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c0)))))OR(CAST(rt1.c2 AS BLOB))));
SELECT COUNT(*) FROM rt1, t0 WHERE (((((rt1.c0)OR(((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c0)))))OR(CAST(rt1.c2 AS BLOB)))) ORDER BY ((((rt1.c2, t0.c4, t0.c1)) NOT BETWEEN ((rt1.c1, rt1.c4, rt1.c0)) AND ((t0.c4, rt1.c0, '-949490517'))) IN ((((rt1.c5, rt1.c4, t0.c4)) BETWEEN ((t0.c3, rt1.c3, 0.3720855666584332)) AND ((t0.c0, t0.c4, rt1.c3))))) DESC  NULLS FIRST LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE ((('z껤') BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c4))) AND ('-516437570')));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((('z껤') BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c4))) AND ('-516437570'))) ORDER BY (~ ((((t0.c1)) BETWEEN ((t0.c3)) AND ((t0.c0))))) ASC, CASE (NOT (t0.c4))  WHEN ((t0.c2)>(t0.c3)) THEN CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c3 THEN t0.c3 WHEN t0.c0 THEN t0.c1 WHEN t0.c3 THEN t0.c0 END END  NULLS FIRST;
SELECT * FROM rt1 WHERE (0.0);
SELECT ALL * FROM rt1 WHERE (((0.0)AND(((0.06722096350347473) IS TRUE)))) INTERSECT SELECT ALL * FROM rt1 WHERE ((((CASE ''  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c5 END, ((rt1.c2) NOT NULL)))<((CASE WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c3 THEN '1802628186' END, CASE rt1.c3  WHEN rt1.c2 THEN rt1.c4 WHEN 'EO|' THEN rt1.c0 END))));
SELECT * FROM rt1 WHERE (0.0);
SELECT ALL * FROM rt1 WHERE (((0.0)AND(((0.06722096350347473) IS TRUE)))) INTERSECT SELECT ALL * FROM rt1 WHERE ((((CASE ''  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c5 END, ((rt1.c2) NOT NULL)))<((CASE WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c3 THEN '1802628186' END, CASE rt1.c3  WHEN rt1.c2 THEN rt1.c4 WHEN 'EO|' THEN rt1.c0 END))));
SELECT * FROM rt1, t0 WHERE (((+ (rt1.c2)) IN ((rt1.c6 IN ()), ((rt1.c1)+(NULL))))) ORDER BY t0.c4 ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((+ (rt1.c2)) IN ((rt1.c6 IN ()), ((rt1.c1)+(NULL))))) ORDER BY CAST(((rt1.c1)||(rt1.c3)) AS INTEGER) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((rt1.c4)) NOT BETWEEN ((CASE WHEN t0.c4 THEN rt1.c4 WHEN t0.c1 THEN t0.c3 WHEN rt1.c1 THEN 0.7179479712691657 WHEN rt1.c6 THEN rt1.c3 WHEN '' THEN rt1.c0 ELSE rt1.c2 END)) AND ((rt1.c1 COLLATE RTRIM)))) ORDER BY CAST(((rt1.c1)||(rt1.c3)) AS INTEGER);
SELECT * FROM rt1, t0 WHERE (((+ (rt1.c2)) IN ((rt1.c6 IN ()), ((rt1.c1)+(NULL))))) ORDER BY t0.c4 ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1, t0 WHERE (((+ (rt1.c2)) IN ((rt1.c6 IN ()), ((rt1.c1)+(NULL))))) ORDER BY CAST(((rt1.c1)||(rt1.c3)) AS INTEGER) INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE ((((rt1.c4)) NOT BETWEEN ((CASE WHEN t0.c4 THEN rt1.c4 WHEN t0.c1 THEN t0.c3 WHEN rt1.c1 THEN 0.7179479712691657 WHEN rt1.c6 THEN rt1.c3 WHEN '' THEN rt1.c0 ELSE rt1.c2 END)) AND ((rt1.c1 COLLATE RTRIM)))) ORDER BY CAST(((rt1.c1)||(rt1.c3)) AS INTEGER);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((NULL)AND(CAST((NOT (rt1.c1)) AS INTEGER)))) ORDER BY ((CASE rt1.c1  WHEN rt1.c5 THEN rt1.c1 END) NOT NULL);
SELECT MAX(t0.c1) FROM t0 WHERE ((((((((((~ (t0.c3)))AND(0.5151193067928804)))AND(CASE t0.c4  WHEN t0.c3 THEN t0.c2 END)))OR(CAST(t0.c1 AS BLOB))))OR(0.005056586487964698)));
SELECT DISTINCT MAX(t0.c1) FROM t0 WHERE ((((((((((~ (t0.c3)))AND(0.5151193067928804)))AND(CASE t0.c4  WHEN t0.c3 THEN t0.c2 END)))OR(CAST(t0.c1 AS BLOB))))OR(0.005056586487964698))) ORDER BY ((load_extension(t0.c2, t0.c2))AND(((t0.c3) NOTNULL))) DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE (CASE (t0.c3 IN ())  WHEN 'C
6ne*-x
' THEN rt1.c2 END) ORDER BY (((NOT (t0.c4))) NOT BETWEEN (((rt1.c6)<=(x''))) AND (CASE rt1.c5  WHEN x'7f4a' THEN t0.c1 ELSE rt1.c2 END)) DESC, CAST(((('475221837')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS REAL);
SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE (t0.c3 IN ())  WHEN 'C
6ne*-x
' THEN rt1.c2 END)AND(rt1.c2))) ORDER BY (((NOT (t0.c4))) NOT BETWEEN (((rt1.c6)<=(x''))) AND (CASE rt1.c5  WHEN x'7f4a' THEN t0.c1 ELSE rt1.c2 END)) DESC, CAST(((('475221837')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS REAL);
SELECT ALL * FROM t0, rt1 WHERE (CASE (t0.c3 IN ())  WHEN 'C
6ne*-x
' THEN rt1.c2 END) ORDER BY (((NOT (t0.c4))) NOT BETWEEN (((rt1.c6)<=(x''))) AND (CASE rt1.c5  WHEN x'7f4a' THEN t0.c1 ELSE rt1.c2 END)) DESC, CAST(((('475221837')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS REAL);
SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE (t0.c3 IN ())  WHEN 'C
6ne*-x
' THEN rt1.c2 END)AND(rt1.c2))) ORDER BY (((NOT (t0.c4))) NOT BETWEEN (((rt1.c6)<=(x''))) AND (CASE rt1.c5  WHEN x'7f4a' THEN t0.c1 ELSE rt1.c2 END)) DESC, CAST(((('475221837')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS REAL);
SELECT ALL MIN(t0.c3) FROM t0, rt1 WHERE ((((((((((rt1.c6)) BETWEEN ((rt1.c4)) AND ((rt1.c2))))AND((((t0.c2, rt1.c3)) BETWEEN ((t0.c1, t0.c1)) AND ((rt1.c2, t0.c1))))))AND((~ (t0.c3)))))AND(CAST(rt1.c2 AS TEXT)))) ORDER BY t0.c0  NULLS FIRST;
SELECT DISTINCT MIN(t0.c3) FROM t0, rt1 WHERE ((((((((((rt1.c6)) BETWEEN ((rt1.c4)) AND ((rt1.c2))))AND((((t0.c2, rt1.c3)) BETWEEN ((t0.c1, t0.c1)) AND ((rt1.c2, t0.c1))))))AND((~ (t0.c3)))))AND(CAST(rt1.c2 AS TEXT)))) ORDER BY t0.c0  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t0.c3) FROM t0, rt1 WHERE (MAX(((t0.c4) IS TRUE), t0.c2 COLLATE BINARY, (((0X1e49c129)) NOT BETWEEN ((t0.c4)) AND ((rt1.c3))))) ORDER BY t0.c0  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE ((((rt1.c6)>=(rt1.c4)) IN ()));
SELECT * FROM t0, rt1 WHERE ((((rt1.c6)>(rt1.c4)) IN ()));
SELECT * FROM t0, rt1 WHERE ((((rt1.c6)>=(rt1.c4)) IN ()));
SELECT * FROM t0, rt1 WHERE ((((rt1.c6)>(rt1.c4)) IN ()));
SELECT ALL * FROM t0 WHERE (((((((((((t0.c1)AND(t0.c0)))AND(t0.c1)))AND(0.016533957937826638)))AND(t0.c2))) ISNULL)) ORDER BY (((t0.c3) NOT BETWEEN (-1.230812522E9) AND (t0.c3)) IN ((((t0.c3, 0.41611625266826924, t0.c4, t0.c4, t0.c2))==((t0.c4, NULL, t0.c0, t0.c3, t0.c3))))), ((t0.c2 COLLATE NOCASE) BETWEEN (t0.c0) AND ((t0.c4 IN ()))) ASC;
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c1)AND(t0.c0)))AND(t0.c1)))AND(0.016533957937826638)))AND(t0.c2))) ISNULL))AND((((t0.c3, t0.c1)) NOT BETWEEN (((- (0.5106144859789457)), ((t0.c1)<<(t0.c4)))) AND ((t0.c1 COLLATE BINARY, CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)))))) ORDER BY (~ (json_patch(t0.c0, t0.c3)))  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 WHERE (((((((((((t0.c1)AND(t0.c0)))AND(t0.c1)))AND(0.016533957937826638)))AND(t0.c2))) ISNULL)) ORDER BY (((t0.c3) NOT BETWEEN (-1.230812522E9) AND (t0.c3)) IN ((((t0.c3, 0.41611625266826924, t0.c4, t0.c4, t0.c2))==((t0.c4, NULL, t0.c0, t0.c3, t0.c3))))), ((t0.c2 COLLATE NOCASE) BETWEEN (t0.c0) AND ((t0.c4 IN ()))) ASC;
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c1)AND(t0.c0)))AND(t0.c1)))AND(0.016533957937826638)))AND(t0.c2))) ISNULL))AND((((t0.c3, t0.c1)) NOT BETWEEN (((- (0.5106144859789457)), ((t0.c1)<<(t0.c4)))) AND ((t0.c1 COLLATE BINARY, CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)))))) ORDER BY (~ (json_patch(t0.c0, t0.c3)))  NULLS LAST LIMIT 2;
SELECT * FROM t0 INNER JOIN rt1 ON (((t0.c1)) BETWEEN ((((((0.7909458021388981)OR(t0.c1)))AND(t0.c4)))) AND ((NULL))) WHERE (((((((((((t0.c2)OR(x'81')))AND(NULL)))OR(0.9121203576859049)))OR(t0.c4))) IS FALSE)) ORDER BY ((CASE WHEN 0.9117278158692961 THEN 0.6214832578992427 WHEN rt1.c0 THEN t0.c0 END)|(CASE WHEN rt1.c5 THEN t0.c1 ELSE rt1.c5 END)) DESC;
SELECT ALL * FROM t0 INNER JOIN rt1 ON (((t0.c1)) BETWEEN ((((((0.7909458021388981)OR(t0.c1)))AND(t0.c4)))) AND ((NULL))) WHERE (((((((((((((t0.c2)OR(x'81')))AND(NULL)))OR(0.9121203576859049)))OR(t0.c4))) IS FALSE))AND(CASE ((rt1.c2)>(rt1.c4))  WHEN ((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c4)) THEN ((rt1.c3)>(rt1.c6)) ELSE NULL END))) ORDER BY ((CASE WHEN 0.9117278158692961 THEN 0.6214832578992427 WHEN rt1.c0 THEN t0.c0 END)|(CASE WHEN rt1.c5 THEN t0.c1 ELSE rt1.c5 END)) DESC LIMIT 2;
SELECT * FROM t0 INNER JOIN rt1 ON (((t0.c1)) BETWEEN ((((((0.7909458021388981)OR(t0.c1)))AND(t0.c4)))) AND ((NULL))) WHERE (((((((((((t0.c2)OR(x'81')))AND(NULL)))OR(0.9121203576859049)))OR(t0.c4))) IS FALSE)) ORDER BY ((CASE WHEN 0.9117278158692961 THEN 0.6214832578992427 WHEN rt1.c0 THEN t0.c0 END)|(CASE WHEN rt1.c5 THEN t0.c1 ELSE rt1.c5 END)) DESC;
SELECT ALL * FROM t0 INNER JOIN rt1 ON (((t0.c1)) BETWEEN ((((((0.7909458021388981)OR(t0.c1)))AND(t0.c4)))) AND ((NULL))) WHERE (((((((((((((t0.c2)OR(x'81')))AND(NULL)))OR(0.9121203576859049)))OR(t0.c4))) IS FALSE))AND(CASE ((rt1.c2)>(rt1.c4))  WHEN ((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c4)) THEN ((rt1.c3)>(rt1.c6)) ELSE NULL END))) ORDER BY ((CASE WHEN 0.9117278158692961 THEN 0.6214832578992427 WHEN rt1.c0 THEN t0.c0 END)|(CASE WHEN rt1.c5 THEN t0.c1 ELSE rt1.c5 END)) DESC LIMIT 2;
SELECT COUNT(*) FROM rt1, t0 WHERE (1e500);
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (1e500) ORDER BY (((rt1.c3)/(x'62')) IN (((((t0.c0)AND(0.042341892711003526)))OR(t0.c0)))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((CAST(rt1.c3 AS REAL))||(CAST(t0.c0 AS BLOB)))) ORDER BY (((rt1.c3)/(x'62')) IN (((((t0.c0)AND(0.042341892711003526)))OR(t0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (rt1.c6);
SELECT ALL * FROM rt1 WHERE (((rt1.c6)AND((((rt1.c4) NOT BETWEEN (0.8264162948875464) AND (rt1.c2)) IN ())))) LIMIT 0;
SELECT * FROM rt1 WHERE (rt1.c6);
SELECT ALL * FROM rt1 WHERE (((rt1.c6)AND((((rt1.c4) NOT BETWEEN (0.8264162948875464) AND (rt1.c2)) IN ())))) LIMIT 0;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (CASE CAST(rt1.c6 AS NUMERIC)  WHEN 0xffffffffbf9b78d5 THEN ((rt1.c2)OR(t0.c4)) ELSE ((((t0.c2)AND(t0.c3)))AND(rt1.c0)) END) ORDER BY CAST(((('0.8801691197835113', NULL)) BETWEEN ((rt1.c1, rt1.c0)) AND ((rt1.c2, t0.c2))) AS BLOB) ASC;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (CASE CAST(rt1.c6 AS NUMERIC)  WHEN 0Xffffffffbf9b78d5 THEN ((rt1.c2)OR(t0.c4)) ELSE ((((t0.c2)AND(t0.c3)))AND(rt1.c0)) END) ORDER BY CAST(((('0.8801691197835113', NULL)) BETWEEN ((rt1.c1, rt1.c0)) AND ((rt1.c2, t0.c2))) AS BLOB) ASC LIMIT 0;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (CASE CAST(rt1.c6 AS NUMERIC)  WHEN 0xffffffffbf9b78d5 THEN ((rt1.c2)OR(t0.c4)) ELSE ((((t0.c2)AND(t0.c3)))AND(rt1.c0)) END) ORDER BY CAST(((('0.8801691197835113', NULL)) BETWEEN ((rt1.c1, rt1.c0)) AND ((rt1.c2, t0.c2))) AS BLOB) ASC;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (CASE CAST(rt1.c6 AS NUMERIC)  WHEN 0Xffffffffbf9b78d5 THEN ((rt1.c2)OR(t0.c4)) ELSE ((((t0.c2)AND(t0.c3)))AND(rt1.c0)) END) ORDER BY CAST(((('0.8801691197835113', NULL)) BETWEEN ((rt1.c1, rt1.c0)) AND ((rt1.c2, t0.c2))) AS BLOB) ASC LIMIT 0;
SELECT COUNT(*) FROM rt1, t0 WHERE (ABS(((t0.c2)>(rt1.c5)))) ORDER BY ((t0.c2 IN (t0.c1)) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0 WHERE (((ABS(((t0.c2)>(rt1.c5))))AND((((rt1.c2, rt1.c3, rt1.c6)) NOT BETWEEN ((rt1.c1, rt1.c5, t0.c1)) AND (('}k', rt1.c0, 0.05985014713793779))) COLLATE NOCASE))) ORDER BY rt1.c3, ((rt1.c2 COLLATE RTRIM) NOT BETWEEN (((((rt1.c0)AND(t0.c2)))AND(t0.c3))) AND (((rt1.c0)>=(rt1.c0)))) DESC, ((((0.382030725232974)|(rt1.c5)))LIKE(((rt1.c3)IS(rt1.c6)))) ASC INTERSECT SELECT COUNT(*) FROM rt1, t0 WHERE ((((- (rt1.c6))) NOT NULL)) ORDER BY rt1.c3, ((rt1.c2 COLLATE RTRIM) NOT BETWEEN (((((rt1.c0)AND(t0.c2)))AND(t0.c3))) AND (((rt1.c0)>=(rt1.c0)))) DESC, ((((0.382030725232974)|(rt1.c5)))LIKE(((rt1.c3)IS(rt1.c6)))) ASC;
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT * FROM rt1 WHERE (((rt1.c1)AND(CHANGES()))) ORDER BY ((rt1.c3)||(((rt1.c1)OR(rt1.c3)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT * FROM rt1 WHERE (((rt1.c1)AND(CHANGES()))) ORDER BY ((rt1.c3)||(((rt1.c1)OR(rt1.c3)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c2)>(t0.c1)))AND(((t0.c4)>=(t0.c1)))))OR(((t0.c0) NOT NULL))))OR(((t0.c4) BETWEEN (t0.c1) AND (t0.c2)))))OR((t0.c0 IN (t0.c2)))))OR(((t0.c0) IS TRUE)))) ORDER BY ((t0.c4 COLLATE BINARY)LIKE(((t0.c2)>(t0.c0)))), t0.c1;
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c2)>(t0.c1)))AND(((t0.c4)>(t0.c1)))))OR(((t0.c0) NOT NULL))))OR(((t0.c4) BETWEEN (t0.c1) AND (t0.c2)))))OR((t0.c0 IN (t0.c2)))))OR(((t0.c0) IS TRUE))))AND((((((NULL)) NOT BETWEEN ((t0.c4)) AND ((t0.c3))))<(((t0.c4) BETWEEN (t0.c0) AND (t0.c2))))))) ORDER BY ((t0.c4 COLLATE BINARY)LIKE(((t0.c2)>(t0.c0)))), t0.c1 LIMIT 2 INTERSECT SELECT * FROM t0 WHERE (CAST(((((((((((t0.c2)OR('')))OR(t0.c3)))OR(t0.c3)))OR(t0.c4)))AND(t0.c1)) AS NUMERIC)) ORDER BY ((t0.c4 COLLATE BINARY)LIKE(((t0.c2)>(t0.c0)))), t0.c1 LIMIT 0x2;
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c2)>(t0.c1)))AND(((t0.c4)>=(t0.c1)))))OR(((t0.c0) NOT NULL))))OR(((t0.c4) BETWEEN (t0.c1) AND (t0.c2)))))OR((t0.c0 IN (t0.c2)))))OR(((t0.c0) IS TRUE)))) ORDER BY ((t0.c4 COLLATE BINARY)LIKE(((t0.c2)>(t0.c0)))), t0.c1;
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c2)>(t0.c1)))AND(((t0.c4)>(t0.c1)))))OR(((t0.c0) NOT NULL))))OR(((t0.c4) BETWEEN (t0.c1) AND (t0.c2)))))OR((t0.c0 IN (t0.c2)))))OR(((t0.c0) IS TRUE))))AND((((((NULL)) NOT BETWEEN ((t0.c4)) AND ((t0.c3))))<(((t0.c4) BETWEEN (t0.c0) AND (t0.c2))))))) ORDER BY ((t0.c4 COLLATE BINARY)LIKE(((t0.c2)>(t0.c0)))), t0.c1 LIMIT 2 INTERSECT SELECT * FROM t0 WHERE (CAST(((((((((((t0.c2)OR('')))OR(t0.c3)))OR(t0.c3)))OR(t0.c4)))AND(t0.c1)) AS NUMERIC)) ORDER BY ((t0.c4 COLLATE BINARY)LIKE(((t0.c2)>(t0.c0)))), t0.c1 LIMIT 0x2;
SELECT MIN(rt1.c4) FROM rt1 WHERE (CAST(x'23' AS TEXT));
SELECT DISTINCT MIN(rt1.c4) FROM rt1 WHERE (((CAST(x'23' AS TEXT))AND(HEX(((rt1.c4)>(rt1.c0)))))) LIMIT 0;
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN (CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c4 END)));
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN (CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c4 END))) LIMIT 0x0 INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c3)*(t0.c4)) IN ('', CASE WHEN t0.c4 THEN t0.c4 ELSE '' END))) LIMIT 0;
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN (CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c4 END)));
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN (CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c4 END))) LIMIT 0x0 INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c3)*(t0.c4)) IN ('', CASE WHEN t0.c4 THEN t0.c4 ELSE '' END))) LIMIT 0;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c1, 0.5051761615754118, t0.c0)) NOT BETWEEN ((highlight(rt1.c5, rt1.c0, t0.c4, t0.c2), CAST(t0.c0 AS INTEGER), ((rt1.c4) BETWEEN (t0.c2) AND (t0.c0)), ((t0.c1)&(t0.c4)), ((t0.c1) NOT BETWEEN (t0.c4) AND (rt1.c6)))) AND ((UPPER(0.4875802708536756), ((rt1.c0)&(rt1.c6)), (((t0.c0))<((t0.c3))), (((rt1.c4)) BETWEEN ((rt1.c6)) AND ((rt1.c5))), ((('ZFvs', t0.c1)) NOT BETWEEN ((rt1.c5, rt1.c1)) AND (('-595764284', t0.c3))))))) ORDER BY (~ ((rt1.c5 IN ())))  NULLS LAST, ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN t0.c4 THEN rt1.c6 END) NOT BETWEEN ((- (t0.c4))) AND (((t0.c1)LIKE(rt1.c1))))  NULLS FIRST, CAST('1700666759' AS NUMERIC);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE ((((((rt1.c2, rt1.c2, rt1.c1, 0.5051761615754118, t0.c0)) NOT BETWEEN ((highlight(rt1.c5, rt1.c0, t0.c4, t0.c2), CAST(t0.c0 AS INTEGER), ((rt1.c4) BETWEEN (t0.c2) AND (t0.c0)), ((t0.c1)&(t0.c4)), ((t0.c1) NOT BETWEEN (t0.c4) AND (rt1.c6)))) AND ((UPPER(0.4875802708536756), ((rt1.c0)&(rt1.c6)), (((t0.c0))<((t0.c3))), (((rt1.c4)) BETWEEN ((rt1.c6)) AND ((rt1.c5))), ((('ZFvs', t0.c1)) NOT BETWEEN ((rt1.c5, rt1.c1)) AND (('-595764284', t0.c3)))))))AND(CASE WHEN ((((((((((t0.c3)OR(t0.c2)))OR(rt1.c2)))AND(t0.c1)))OR(rt1.c3)))OR(t0.c3)) THEN x'a6b0' WHEN ((t0.c1) NOT BETWEEN (rt1.c5) AND (rt1.c2)) THEN (NOT (rt1.c5)) WHEN ((rt1.c3)%(0.2837782952792971)) THEN JULIANDAY(t0.c4, t0.c0, t0.c1) WHEN ((t0.c1) IS FALSE) THEN ((t0.c2)AND(rt1.c4)) END))) ORDER BY (NOT (t0.c3)) DESC LIMIT 0X0 INTERSECT SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (CASE GLOB(rt1.c1, rt1.c2)  WHEN (t0.c0 IN ()) THEN (- (rt1.c1)) WHEN ((((((t0.c4)OR(rt1.c1)))AND(t0.c0)))OR(rt1.c1)) THEN ((((-0.0)OR(rt1.c0)))OR(t0.c4)) ELSE ((rt1.c0)!=(NULL)) END) ORDER BY (NOT (t0.c3)) DESC LIMIT 0x0;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((t0.c1)==((+ (rt1.c0)))));
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((((t0.c1)=((+ (rt1.c0)))))AND(((CAST(rt1.c3 AS TEXT))OR(((t0.c1)LIKE(rt1.c1))))))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c3)))IS NOT(0.33029260551514383)));
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE (((((CAST(rt1.c0 AS BLOB)) ISNULL))AND(SUBSTR(((rt1.c0)/(rt1.c3)), (rt1.c4 IN (rt1.c6, rt1.c1)))))) ORDER BY ((- (rt1.c0)) IN ()), json_valid(((rt1.c2)OR(rt1.c4))) DESC;
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE (((((CAST(rt1.c0 AS BLOB)) ISNULL))AND(SUBSTR(((rt1.c0)/(rt1.c3)), (rt1.c4 IN (rt1.c6, rt1.c1)))))) ORDER BY ((- (rt1.c0)) IN ()), json_valid(((rt1.c2)OR(rt1.c4))) DESC;
SELECT ALL * FROM t0, rt1 WHERE (x'' COLLATE RTRIM);
SELECT ALL * FROM t0, rt1 WHERE (x'' COLLATE RTRIM) ORDER BY ((((t0.c4) BETWEEN (rt1.c5) AND (t0.c3))) BETWEEN ((((rt1.c6))==((rt1.c4)))) AND (((t0.c1) BETWEEN (t0.c0) AND (x'cf')))), ('SSM' IN (((rt1.c4) IS FALSE))) INTERSECT SELECT * FROM t0, rt1 WHERE (((((rt1.c5) ISNULL)) NOT NULL)) ORDER BY ((((t0.c4) BETWEEN (rt1.c5) AND (t0.c3))) BETWEEN ((((rt1.c6))=((rt1.c4)))) AND (((t0.c1) BETWEEN (t0.c0) AND (x'cf')))), ('SSM' IN (((rt1.c4) IS FALSE)));
SELECT ALL * FROM t0, rt1 WHERE (x'' COLLATE RTRIM);
SELECT ALL * FROM t0, rt1 WHERE (x'' COLLATE RTRIM) ORDER BY ((((t0.c4) BETWEEN (rt1.c5) AND (t0.c3))) BETWEEN ((((rt1.c6))==((rt1.c4)))) AND (((t0.c1) BETWEEN (t0.c0) AND (x'cf')))), ('SSM' IN (((rt1.c4) IS FALSE))) INTERSECT SELECT * FROM t0, rt1 WHERE (((((rt1.c5) ISNULL)) NOT NULL)) ORDER BY ((((t0.c4) BETWEEN (rt1.c5) AND (t0.c3))) BETWEEN ((((rt1.c6))=((rt1.c4)))) AND (((t0.c1) BETWEEN (t0.c0) AND (x'cf')))), ('SSM' IN (((rt1.c4) IS FALSE)));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c4) NOT BETWEEN (t0.c3) AND (t0.c0)), (NOT (t0.c2))))<((((((((t0.c0)AND(t0.c4)))AND(t0.c0)))AND(t0.c2)), (((t0.c3))<>((t0.c1)))))), 0.15295742782866395 COLLATE RTRIM ASC, ((((t0.c2)-(t0.c3)))GLOB(NULLIF(DISTINCT t0.c2, t0.c4))) DESC;
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)AND(((t0.c0)<(t0.c0)) COLLATE RTRIM))) ORDER BY t0.c3 ASC LIMIT 0X1 INTERSECT SELECT COUNT(*) FROM t0 WHERE (CASE ((NULL)||(t0.c1))  WHEN t0.c2 COLLATE NOCASE THEN ((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c1)) WHEN ((t0.c1)IS NOT(t0.c3)) THEN ((t0.c0)IS(t0.c4)) WHEN ((((t0.c4)OR(t0.c3)))AND(1990188283)) THEN ((t0.c2)<(t0.c1)) END) ORDER BY t0.c3 ASC LIMIT 0X1;
SELECT MAX(t0.c2) FROM rt1, t0 WHERE (((((MAX(t0.c3, rt1.c0, rt1.c0))OR(((((((((((((((rt1.c5)OR(rt1.c3)))AND(t0.c1)))AND(t0.c0)))OR(t0.c0)))OR(rt1.c1)))AND('5v')))OR(t0.c4)))))OR((+ (t0.c3))))) ORDER BY (((rt1.c4)) NOT BETWEEN ((((rt1.c4) IS FALSE))) AND (((rt1.c0 IN (rt1.c1)))))  NULLS LAST;
SELECT MAX(t0.c2) FROM rt1, t0 WHERE (((((((MAX(t0.c3, rt1.c0, rt1.c0))OR(((((((((((((((rt1.c5)OR(rt1.c3)))AND(t0.c1)))AND(t0.c0)))OR(t0.c0)))OR(rt1.c1)))AND('5v')))OR(t0.c4)))))OR((+ (t0.c3)))))AND((((t0.c2, t0.c3)) BETWEEN (((((rt1.c2, rt1.c0))<((t0.c0, t0.c4))), t0.c0 COLLATE BINARY)) AND ((((t0.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)), CASE WHEN t0.c4 THEN rt1.c2 ELSE t0.c3 END)))))) ORDER BY (((rt1.c1, rt1.c0, rt1.c4)) NOT BETWEEN ((rt1.c5, rt1.c2, rt1.c0)) AND ((t0.c0, '1072199025', rt1.c0))) COLLATE RTRIM, ((((t0.c4) IS FALSE))LIKE(t0.c1))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (0Xffffffffc0227b91) ORDER BY CAST(0.5442837953102231 COLLATE NOCASE AS BLOB) ASC;
SELECT DISTINCT * FROM t0 WHERE (((-1071481967)AND('8('))) ORDER BY CAST(0.5442837953102231 COLLATE NOCASE AS BLOB) ASC LIMIT 0;
SELECT ALL * FROM t0 WHERE (0Xffffffffc0227b91) ORDER BY CAST(0.5442837953102231 COLLATE NOCASE AS BLOB) ASC;
SELECT DISTINCT * FROM t0 WHERE (((-1071481967)AND('8('))) ORDER BY CAST(0.5442837953102231 COLLATE NOCASE AS BLOB) ASC LIMIT 0;
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((NULL) NOT BETWEEN (CASE rt1.c1  WHEN t0.c2 THEN rt1.c4 ELSE NULL END) AND (CAST(rt1.c2 AS REAL))) WHERE ((((((((t0.c2))<>((rt1.c3))))AND(((rt1.c5) NOT NULL))))OR((((rt1.c3))<=((rt1.c6)))))) ORDER BY (((rt1.c2 IN ()))%(((t0.c3) IS TRUE))) DESC  NULLS LAST, ((CAST(rt1.c2 AS INTEGER))<>(((rt1.c6)<(t0.c3)))) DESC  NULLS FIRST, (((+ (rt1.c6)))>>(t0.c4));
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ((NULL) NOT BETWEEN (CASE rt1.c1  WHEN t0.c2 THEN rt1.c4 ELSE NULL END) AND (CAST(rt1.c2 AS REAL))) WHERE ((((((((t0.c2))!=((rt1.c3))))AND(((rt1.c5) NOT NULL))))OR((((rt1.c3))<=((rt1.c6)))))) ORDER BY (((rt1.c1 IN ())) ISNULL), ((((((((((rt1.c1)OR(rt1.c4)))AND(t0.c3)))AND(rt1.c1)))OR(t0.c1))) ISNULL)  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((NULL) NOT BETWEEN (CASE rt1.c1  WHEN t0.c2 THEN rt1.c4 ELSE NULL END) AND (CAST(rt1.c2 AS REAL))) WHERE ((((((((t0.c2))<>((rt1.c3))))AND(((rt1.c5) NOT NULL))))OR((((rt1.c3))<=((rt1.c6)))))) ORDER BY (((rt1.c2 IN ()))%(((t0.c3) IS TRUE))) DESC  NULLS LAST, ((CAST(rt1.c2 AS INTEGER))<>(((rt1.c6)<(t0.c3)))) DESC  NULLS FIRST, (((+ (rt1.c6)))>>(t0.c4));
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ((NULL) NOT BETWEEN (CASE rt1.c1  WHEN t0.c2 THEN rt1.c4 ELSE NULL END) AND (CAST(rt1.c2 AS REAL))) WHERE ((((((((t0.c2))!=((rt1.c3))))AND(((rt1.c5) NOT NULL))))OR((((rt1.c3))<=((rt1.c6)))))) ORDER BY (((rt1.c1 IN ())) ISNULL), ((((((((((rt1.c1)OR(rt1.c4)))AND(t0.c3)))AND(rt1.c1)))OR(t0.c1))) ISNULL)  NULLS LAST LIMIT 0;
SELECT * FROM rt1 WHERE (NULL);
SELECT * FROM rt1 WHERE (((NULL)AND(((((((rt1.c3)OR('-229228074')))OR(rt1.c6)))>>(CASE -368242246  WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c5 END))))) LIMIT 0x1;
SELECT * FROM rt1 WHERE (NULL);
SELECT * FROM rt1 WHERE (((NULL)AND(((((((rt1.c3)OR('-229228074')))OR(rt1.c6)))>>(CASE -368242246  WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c5 END))))) LIMIT 0x1;
SELECT ALL MAX(rt1.c1) FROM rt1, t0 WHERE (CAST(((t0.c0) ISNULL) AS INTEGER));
SELECT MAX(rt1.c1) FROM rt1, t0 WHERE (CAST(((t0.c0) ISNULL) AS INTEGER)) LIMIT 0x1;
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE WHEN (t0.c3 IN (NULL, rt1.c5)) THEN CASE rt1.c4  WHEN rt1.c1 THEN t0.c3 WHEN rt1.c5 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END END);
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (((CASE WHEN (t0.c3 IN (NULL)) THEN CASE rt1.c4  WHEN rt1.c1 THEN t0.c3 WHEN rt1.c5 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END END)AND((rt1.c1 IN ())))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE ((- (CAST(rt1.c0 AS BLOB))));
SELECT ALL * FROM t0, rt1 WHERE (((((((t0.c4)OR(t0.c4)))OR(t0.c3))) IS FALSE));
SELECT * FROM t0, rt1 WHERE (((((((t0.c4)OR(t0.c4)))OR(t0.c3))) IS FALSE)) ORDER BY ((t0.c1 COLLATE NOCASE)AND((t0.c4 IN ()))), ((((((((x'5c')OR(rt1.c3)))AND(t0.c4)))AND(rt1.c6))) NOT NULL) ASC INTERSECT SELECT * FROM t0, rt1 WHERE (((rt1.c4) BETWEEN (rt1.c4) AND (NULL)) COLLATE RTRIM) ORDER BY ((t0.c1 COLLATE NOCASE)AND((t0.c4 IN ()))), ((((((((x'5c')OR(rt1.c3)))AND(t0.c4)))AND(rt1.c6))) NOT NULL) ASC;
SELECT ALL * FROM t0, rt1 WHERE (((((((t0.c4)OR(t0.c4)))OR(t0.c3))) IS FALSE));
SELECT * FROM t0, rt1 WHERE (((((((t0.c4)OR(t0.c4)))OR(t0.c3))) IS FALSE)) ORDER BY ((t0.c1 COLLATE NOCASE)AND((t0.c4 IN ()))), ((((((((x'5c')OR(rt1.c3)))AND(t0.c4)))AND(rt1.c6))) NOT NULL) ASC INTERSECT SELECT * FROM t0, rt1 WHERE (((rt1.c4) BETWEEN (rt1.c4) AND (NULL)) COLLATE RTRIM) ORDER BY ((t0.c1 COLLATE NOCASE)AND((t0.c4 IN ()))), ((((((((x'5c')OR(rt1.c3)))AND(t0.c4)))AND(rt1.c6))) NOT NULL) ASC;
SELECT ALL MIN(rt1.c3) FROM rt1 WHERE (rt1.c5) ORDER BY CASE (rt1.c2 IN (rt1.c6))  WHEN (((rt1.c5, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c3, rt1.c3, rt1.c1)) AND ((rt1.c3, rt1.c3, rt1.c1))) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) ELSE rt1.c4 END  NULLS FIRST, CAST(rt1.c6 COLLATE NOCASE AS NUMERIC) ASC  NULLS LAST, ((((rt1.c2)<=('-1730662476')))-(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c6 END)) ASC;
SELECT DISTINCT MIN(rt1.c3) FROM rt1 WHERE (rt1.c5) ORDER BY CASE (rt1.c2 IN (rt1.c6))  WHEN (((rt1.c5, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c3, rt1.c3, rt1.c1)) AND ((rt1.c3, rt1.c3, rt1.c1))) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) ELSE rt1.c4 END  NULLS FIRST, CAST(rt1.c6 COLLATE NOCASE AS NUMERIC) ASC  NULLS LAST, ((((rt1.c2)<=('-1730662476')))-(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c6 END)) ASC LIMIT 0X1;
SELECT MIN(t0.c0) FROM t0 WHERE (t0.c3) ORDER BY CAST(((t0.c1)IS(t0.c3)) AS BLOB);
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((t0.c3)AND(((((t0.c0))<=((t0.c2))) IN ())))) ORDER BY CAST(((t0.c1)IS(t0.c3)) AS BLOB) INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ('\J') ORDER BY CAST(((t0.c1)IS(t0.c3)) AS BLOB);
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c0 IN ())) NOT NULL)) ORDER BY ((((t0.c0) NOT BETWEEN (rt1.c4) AND (t0.c2)))>=(LIKE(t0.c0, t0.c0, 'y')))  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c0 IN ())) NOT NULL)) ORDER BY rt1.c2 LIMIT 0 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (TRIM(DISTINCT CASE t0.c0  WHEN t0.c3 THEN x'' WHEN t0.c1 THEN rt1.c5 END)) ORDER BY rt1.c2 LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c0 IN ())) NOT NULL)) ORDER BY ((((t0.c0) NOT BETWEEN (rt1.c4) AND (t0.c2)))>=(LIKE(t0.c0, t0.c0, 'y')))  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c0 IN ())) NOT NULL)) ORDER BY rt1.c2 LIMIT 0 INTERSECT SELECT ALL * FROM rt1, t0 WHERE (TRIM(DISTINCT CASE t0.c0  WHEN t0.c3 THEN x'' WHEN t0.c1 THEN rt1.c5 END)) ORDER BY rt1.c2 LIMIT 0;
SELECT * FROM t0 CROSS JOIN rt1 ON ((COALESCE(rt1.c3, rt1.c3))<>(((rt1.c0)OR(rt1.c1)))) WHERE (((CAST(rt1.c1 AS INTEGER))&(((((((t0.c3)AND(rt1.c3)))AND(0.5223963127731661)))OR(rt1.c0)))));
SELECT * FROM t0 CROSS JOIN rt1 ON ((COALESCE(rt1.c3, rt1.c3))<>(((rt1.c0)OR(rt1.c1)))) WHERE (((CAST(rt1.c1 AS INTEGER))&(((((((t0.c3)AND(rt1.c3)))AND(0.5223963127731661)))OR(rt1.c0))))) ORDER BY CASE WHEN (((t0.c4))>((0.07265650912648347))) THEN (((NULL, rt1.c0)) NOT BETWEEN ((t0.c2, rt1.c6)) AND ((t0.c1, t0.c1))) END  NULLS FIRST, (((rt1.c5)) NOT BETWEEN ((((rt1.c6)>>(rt1.c6)))) AND ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c6))))) ASC LIMIT 0;
SELECT * FROM t0 CROSS JOIN rt1 ON ((COALESCE(rt1.c3, rt1.c3))<>(((rt1.c0)OR(rt1.c1)))) WHERE (((CAST(rt1.c1 AS INTEGER))&(((((((t0.c3)AND(rt1.c3)))AND(0.5223963127731661)))OR(rt1.c0)))));
SELECT * FROM t0 CROSS JOIN rt1 ON ((COALESCE(rt1.c3, rt1.c3))<>(((rt1.c0)OR(rt1.c1)))) WHERE (((CAST(rt1.c1 AS INTEGER))&(((((((t0.c3)AND(rt1.c3)))AND(0.5223963127731661)))OR(rt1.c0))))) ORDER BY CASE WHEN (((t0.c4))>((0.07265650912648347))) THEN (((NULL, rt1.c0)) NOT BETWEEN ((t0.c2, rt1.c6)) AND ((t0.c1, t0.c1))) END  NULLS FIRST, (((rt1.c5)) NOT BETWEEN ((((rt1.c6)>>(rt1.c6)))) AND ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c6))))) ASC LIMIT 0;
SELECT * FROM rt1, t0 WHERE (NULLIF(DISTINCT (((rt1.c1))!=((t0.c0))), ((rt1.c5)<(rt1.c0))));
SELECT DISTINCT * FROM rt1, t0 WHERE (NULLIF(DISTINCT (((rt1.c1))<((t0.c0))), ((rt1.c5)<(rt1.c0)))) LIMIT 0;
SELECT * FROM rt1, t0 WHERE (NULLIF(DISTINCT (((rt1.c1))!=((t0.c0))), ((rt1.c5)<(rt1.c0))));
SELECT DISTINCT * FROM rt1, t0 WHERE (NULLIF(DISTINCT (((rt1.c1))<((t0.c0))), ((rt1.c5)<(rt1.c0)))) LIMIT 0;
SELECT ALL MAX(rt1.c0) FROM rt1, t0 WHERE ((~ ((NOT (t0.c4))))) ORDER BY (rt1.c6 COLLATE RTRIM IN (rt1.c6 COLLATE NOCASE, CAST(rt1.c2 AS REAL), CASE rt1.c2  WHEN rt1.c3 THEN rt1.c5 END)) DESC;
SELECT DISTINCT MAX(rt1.c0) FROM rt1, t0 WHERE ((~ ((NOT (t0.c4))))) ORDER BY (rt1.c6 COLLATE RTRIM IN (rt1.c6 COLLATE NOCASE, CAST(rt1.c2 AS REAL), CASE rt1.c2  WHEN rt1.c3 THEN rt1.c5 END)) DESC;
SELECT * FROM rt1 WHERE (((((((rt1.c0)AND(-1.80735253E8)))OR(rt1.c6))) BETWEEN ((((rt1.c0, rt1.c3))>((rt1.c2, rt1.c1)))) AND (CAST(x'' AS BLOB)))) ORDER BY CAST(((rt1.c2)>(rt1.c3)) AS NUMERIC) DESC, (((rt1.c1, '1163750199')) NOT BETWEEN (((rt1.c6 IN (rt1.c2)), CAST(rt1.c3 AS BLOB))) AND ((((rt1.c0)<=('sB%''_䇖n潹')), ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c5)))OR(rt1.c2))))) ASC, ((rt1.c5)OR(((((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c4)))OR(0.35334588054103877)))OR(rt1.c5)))AND(rt1.c6))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((((rt1.c0)AND(-1.80735253E8)))OR(rt1.c6))) BETWEEN ((((rt1.c0, rt1.c3))>((rt1.c2, rt1.c1)))) AND (CAST(x'' AS BLOB)))) ORDER BY CAST(((rt1.c2)>(rt1.c3)) AS NUMERIC) DESC, (((rt1.c1, '1163750199')) NOT BETWEEN (((rt1.c6 IN (rt1.c2)), CAST(rt1.c3 AS BLOB))) AND ((((rt1.c0)<=('sB%''_䇖n潹')), ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c5)))OR(rt1.c2))))) ASC, ((rt1.c5)OR(((((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c4)))OR(0.35334588054103877)))OR(rt1.c5)))AND(rt1.c6))))  NULLS LAST INTERSECT SELECT * FROM rt1 WHERE ((('A3k)3A/''')>=(CAST(NULL AS BLOB)))) ORDER BY CAST(((rt1.c2)>(rt1.c3)) AS NUMERIC) DESC, (((rt1.c1, '1163750199')) NOT BETWEEN (((rt1.c6 IN (rt1.c2)), CAST(rt1.c3 AS BLOB))) AND ((((rt1.c0)<=('sB%''_䇖n潹')), ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c5)))OR(rt1.c2))))) ASC, ((rt1.c5)OR(((((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c4)))OR(0.35334588054103877)))OR(rt1.c5)))AND(rt1.c6))))  NULLS LAST;
SELECT * FROM rt1 WHERE (((((((rt1.c0)AND(-1.80735253E8)))OR(rt1.c6))) BETWEEN ((((rt1.c0, rt1.c3))>((rt1.c2, rt1.c1)))) AND (CAST(x'' AS BLOB)))) ORDER BY CAST(((rt1.c2)>(rt1.c3)) AS NUMERIC) DESC, (((rt1.c1, '1163750199')) NOT BETWEEN (((rt1.c6 IN (rt1.c2)), CAST(rt1.c3 AS BLOB))) AND ((((rt1.c0)<=('sB%''_䇖n潹')), ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c5)))OR(rt1.c2))))) ASC, ((rt1.c5)OR(((((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c4)))OR(0.35334588054103877)))OR(rt1.c5)))AND(rt1.c6))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((((rt1.c0)AND(-1.80735253E8)))OR(rt1.c6))) BETWEEN ((((rt1.c0, rt1.c3))>((rt1.c2, rt1.c1)))) AND (CAST(x'' AS BLOB)))) ORDER BY CAST(((rt1.c2)>(rt1.c3)) AS NUMERIC) DESC, (((rt1.c1, '1163750199')) NOT BETWEEN (((rt1.c6 IN (rt1.c2)), CAST(rt1.c3 AS BLOB))) AND ((((rt1.c0)<=('sB%''_䇖n潹')), ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c5)))OR(rt1.c2))))) ASC, ((rt1.c5)OR(((((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c4)))OR(0.35334588054103877)))OR(rt1.c5)))AND(rt1.c6))))  NULLS LAST INTERSECT SELECT * FROM rt1 WHERE ((('A3k)3A/''')>=(CAST(NULL AS BLOB)))) ORDER BY CAST(((rt1.c2)>(rt1.c3)) AS NUMERIC) DESC, (((rt1.c1, '1163750199')) NOT BETWEEN (((rt1.c6 IN (rt1.c2)), CAST(rt1.c3 AS BLOB))) AND ((((rt1.c0)<=('sB%''_䇖n潹')), ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c5)))OR(rt1.c2))))) ASC, ((rt1.c5)OR(((((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c4)))OR(0.35334588054103877)))OR(rt1.c5)))AND(rt1.c6))))  NULLS LAST;
SELECT ALL MAX(t0.c1) FROM rt1, t0 WHERE ((((((~ (rt1.c5)))AND(t0.c4 COLLATE RTRIM)))OR(((((((((t0.c0)OR(t0.c4)))OR(t0.c4)))AND(t0.c3)))OR(t0.c3))))) ORDER BY (((((rt1.c3)%(t0.c3)), ((rt1.c4)%(rt1.c2)), ((rt1.c5) IS FALSE)))<=((((rt1.c6)LIKE(t0.c0)), rt1.c4 COLLATE NOCASE, (NOT (t0.c2)))));
SELECT MAX(t0.c1) FROM rt1, t0 WHERE ((((((~ (rt1.c5)))AND(t0.c4 COLLATE RTRIM)))OR(((((((((t0.c0)OR(t0.c4)))OR(t0.c4)))AND(t0.c3)))OR(t0.c3))))) ORDER BY (((((rt1.c3)%(t0.c3)), ((rt1.c4)%(rt1.c2)), ((rt1.c5) IS FALSE)))<=((((rt1.c6)LIKE(t0.c0)), rt1.c4 COLLATE NOCASE, (NOT (t0.c2)))));
SELECT * FROM rt1 INNER JOIN t0 ON (((~ (rt1.c3))) NOTNULL) WHERE (((CASE rt1.c4  WHEN rt1.c4 THEN t0.c1 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN NULL ELSE rt1.c3 END) NOTNULL));
SELECT ALL * FROM rt1 INNER JOIN t0 ON (((~ (rt1.c3))) NOTNULL) WHERE (((CASE rt1.c4  WHEN rt1.c4 THEN t0.c1 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN NULL ELSE rt1.c3 END) NOTNULL)) ORDER BY UPPER(DISTINCT COALESCE(DISTINCT rt1.c6, t0.c2, rt1.c1)), CASE CAST(rt1.c2 AS REAL)  WHEN ((t0.c1) BETWEEN (NULL) AND (rt1.c5)) THEN ((((rt1.c2)AND(rt1.c2)))OR(t0.c0)) WHEN ((t0.c4) BETWEEN (t0.c3) AND (rt1.c3)) THEN (rt1.c0 IN (t0.c2, NULL, t0.c2)) END  NULLS LAST LIMIT 0X0;
SELECT * FROM rt1 INNER JOIN t0 ON (((~ (rt1.c3))) NOTNULL) WHERE (((CASE rt1.c4  WHEN rt1.c4 THEN t0.c1 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN NULL ELSE rt1.c3 END) NOTNULL));
SELECT ALL * FROM rt1 INNER JOIN t0 ON (((~ (rt1.c3))) NOTNULL) WHERE (((CASE rt1.c4  WHEN rt1.c4 THEN t0.c1 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN NULL ELSE rt1.c3 END) NOTNULL)) ORDER BY UPPER(DISTINCT COALESCE(DISTINCT rt1.c6, t0.c2, rt1.c1)), CASE CAST(rt1.c2 AS REAL)  WHEN ((t0.c1) BETWEEN (NULL) AND (rt1.c5)) THEN ((((rt1.c2)AND(rt1.c2)))OR(t0.c0)) WHEN ((t0.c4) BETWEEN (t0.c3) AND (rt1.c3)) THEN (rt1.c0 IN (t0.c2, NULL, t0.c2)) END  NULLS LAST LIMIT 0X0;
SELECT * FROM rt1, t0 WHERE (((((rt1.c3, t0.c3, x'c5')) BETWEEN ((rt1.c5, rt1.c5, t0.c3)) AND ((t0.c2, 'ꀵoퟹ<⫄', rt1.c3))) IN (t0.c1))) ORDER BY ((((NULL, t0.c4, t0.c3))<=((rt1.c2, rt1.c0, rt1.c3))) IN ()) DESC, t0.c1 DESC, ((((t0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c4))) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c3, t0.c3, x'c5')) BETWEEN ((rt1.c5, rt1.c5, t0.c3)) AND ((t0.c2, 'ꀵoퟹ<⫄', rt1.c3))) IN (t0.c1))) ORDER BY (~ (rt1.c4)), (CASE WHEN t0.c3 THEN rt1.c6 ELSE t0.c3 END IN ('')) LIMIT 2;
SELECT * FROM rt1, t0 WHERE (((((rt1.c3, t0.c3, x'c5')) BETWEEN ((rt1.c5, rt1.c5, t0.c3)) AND ((t0.c2, 'ꀵoퟹ<⫄', rt1.c3))) IN (t0.c1))) ORDER BY ((((NULL, t0.c4, t0.c3))<=((rt1.c2, rt1.c0, rt1.c3))) IN ()) DESC, t0.c1 DESC, ((((t0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c4))) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c5)*(rt1.c2))) NOT BETWEEN (CAST(rt1.c6 AS INTEGER)) AND (((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c4))))) ORDER BY (((((rt1.c5, rt1.c4, rt1.c5, rt1.c6))>((rt1.c1, rt1.c4, rt1.c6, rt1.c6))))<>(((((((((rt1.c3)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c4))))  NULLS LAST, UPPER(DISTINCT ((rt1.c3)>(rt1.c3))) DESC, rt1.c4  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((((rt1.c5)*(rt1.c2))) NOT BETWEEN (CAST(rt1.c6 AS INTEGER)) AND (((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c4)))))AND('**G'))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c6)) AS REAL) INTERSECT SELECT * FROM rt1 WHERE (((rt1.c5) IS TRUE) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c6)) AS REAL);
SELECT ALL * FROM rt1 WHERE (((((rt1.c5)*(rt1.c2))) NOT BETWEEN (CAST(rt1.c6 AS INTEGER)) AND (((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c4))))) ORDER BY (((((rt1.c5, rt1.c4, rt1.c5, rt1.c6))>((rt1.c1, rt1.c4, rt1.c6, rt1.c6))))<>(((((((((rt1.c3)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c4))))  NULLS LAST, UPPER(DISTINCT ((rt1.c3)>(rt1.c3))) DESC, rt1.c4  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((((rt1.c5)*(rt1.c2))) NOT BETWEEN (CAST(rt1.c6 AS INTEGER)) AND (((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c4)))))AND('**G'))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c6)) AS REAL) INTERSECT SELECT * FROM rt1 WHERE (((rt1.c5) IS TRUE) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c6)) AS REAL);
SELECT ALL * FROM rt1, t0 WHERE ((((((rt1.c3)&(t0.c1)), CASE t0.c3  WHEN t0.c1 THEN t0.c4 WHEN rt1.c4 THEN t0.c2 ELSE rt1.c0 END))<((rt1.c5 COLLATE BINARY, json_insert(rt1.c6, rt1.c0, x'3e6b')))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((((rt1.c3)&(t0.c1)), CASE t0.c3  WHEN t0.c1 THEN t0.c4 WHEN rt1.c4 THEN t0.c2 ELSE rt1.c0 END))<((rt1.c5 COLLATE BINARY, json_insert(rt1.c6, rt1.c0, x'3e6b')))))AND((((((t0.c4, NULL)) NOT BETWEEN ((rt1.c1, rt1.c3)) AND ((rt1.c3, rt1.c1))))&(CASE rt1.c3  WHEN rt1.c5 THEN rt1.c3 WHEN 0.943167415945289 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c4 WHEN t0.c0 THEN rt1.c2 END))))) ORDER BY rt1.c0 LIMIT 0X2;
SELECT ALL * FROM rt1, t0 WHERE ((((((rt1.c3)&(t0.c1)), CASE t0.c3  WHEN t0.c1 THEN t0.c4 WHEN rt1.c4 THEN t0.c2 ELSE rt1.c0 END))<((rt1.c5 COLLATE BINARY, json_insert(rt1.c6, rt1.c0, x'3e6b')))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((((rt1.c3)&(t0.c1)), CASE t0.c3  WHEN t0.c1 THEN t0.c4 WHEN rt1.c4 THEN t0.c2 ELSE rt1.c0 END))<((rt1.c5 COLLATE BINARY, json_insert(rt1.c6, rt1.c0, x'3e6b')))))AND((((((t0.c4, NULL)) NOT BETWEEN ((rt1.c1, rt1.c3)) AND ((rt1.c3, rt1.c1))))&(CASE rt1.c3  WHEN rt1.c5 THEN rt1.c3 WHEN 0.943167415945289 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c4 WHEN t0.c0 THEN rt1.c2 END))))) ORDER BY rt1.c0 LIMIT 0X2;
SELECT ALL MIN(t0.c2) FROM t0 WHERE (t0.c4);
SELECT MIN(t0.c2) FROM t0 WHERE (((t0.c4)AND(CAST((t0.c1 IN ()) AS REAL))));
SELECT MAX(rt1.c0) FROM t0, rt1 WHERE (((((rt1.c2, rt1.c1)) NOT BETWEEN (('#', rt1.c6)) AND ((rt1.c2, rt1.c5))) IN (CASE t0.c3  WHEN rt1.c5 THEN rt1.c5 END, rt1.c4)));
SELECT DISTINCT MAX(rt1.c0) FROM t0, rt1 WHERE (((((rt1.c2, rt1.c1)) NOT BETWEEN (('#', rt1.c6)) AND ((rt1.c2, rt1.c5))) IN (CASE t0.c3  WHEN rt1.c5 THEN rt1.c5 END, rt1.c4))) ORDER BY (~ (((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c2)))) DESC  NULLS FIRST, NULL;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((rt1.c2)IS NOT(t0.c2)) COLLATE BINARY WHERE (((CAST(t0.c0 AS TEXT))/(CAST(t0.c1 AS BLOB))));
SELECT * FROM t0 INNER JOIN rt1 ON ((rt1.c2)IS NOT(t0.c2)) COLLATE BINARY WHERE (((((CAST(t0.c0 AS TEXT))/(CAST(t0.c1 AS BLOB))))AND(CAST(((rt1.c2)+(rt1.c5)) AS INTEGER)))) ORDER BY (- (((((((((((rt1.c3)AND(rt1.c3)))OR(rt1.c0)))AND(NULL)))OR(t0.c0)))OR(t0.c4))))  NULLS FIRST, ((((t0.c2) IS FALSE)) IS TRUE) LIMIT 0;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((rt1.c2)IS NOT(t0.c2)) COLLATE BINARY WHERE (((CAST(t0.c0 AS TEXT))/(CAST(t0.c1 AS BLOB))));
SELECT * FROM t0 INNER JOIN rt1 ON ((rt1.c2)IS NOT(t0.c2)) COLLATE BINARY WHERE (((((CAST(t0.c0 AS TEXT))/(CAST(t0.c1 AS BLOB))))AND(CAST(((rt1.c2)+(rt1.c5)) AS INTEGER)))) ORDER BY (- (((((((((((rt1.c3)AND(rt1.c3)))OR(rt1.c0)))AND(NULL)))OR(t0.c0)))OR(t0.c4))))  NULLS FIRST, ((((t0.c2) IS FALSE)) IS TRUE) LIMIT 0;
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((((((((t0.c0)>(rt1.c5)))OR(((t0.c4)/(t0.c1)))))OR(((rt1.c1) NOT BETWEEN (rt1.c6) AND (rt1.c3)))))OR((t0.c0 IN ()))))AND(((rt1.c0) NOT BETWEEN (t0.c2) AND (rt1.c6)))))AND((((t0.c4, rt1.c2))>((rt1.c6, rt1.c3)))))) ORDER BY IFNULL(LENGTH(rt1.c3), ((((rt1.c3)OR(rt1.c3)))OR(t0.c2)));
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((((((((t0.c0)>(rt1.c5)))OR(((t0.c4)/(t0.c1)))))OR(((rt1.c1) NOT BETWEEN (rt1.c6) AND (rt1.c3)))))OR((t0.c0 IN ()))))AND(((rt1.c0) NOT BETWEEN (t0.c2) AND (rt1.c6)))))AND((((t0.c4, rt1.c2))>((rt1.c6, rt1.c3)))))) ORDER BY IFNULL(LENGTH(rt1.c3), ((((rt1.c3)OR(rt1.c3)))OR(t0.c2))) LIMIT 0x0 INTERSECT SELECT ALL COUNT(*) FROM rt1, t0 WHERE ('o^VK卯TZ-') ORDER BY IFNULL(LENGTH(rt1.c3), ((((rt1.c3)OR(rt1.c3)))OR(t0.c2))) LIMIT 0X0;
SELECT ALL MAX(rt1.c2) FROM rt1, t0 WHERE (((((rt1.c2) IS FALSE)) IS FALSE));
SELECT MAX(rt1.c2) FROM rt1, t0 NOT INDEXED WHERE (((((rt1.c2) IS FALSE)) IS FALSE)) INTERSECT SELECT ALL MAX(rt1.c2) FROM rt1, t0 WHERE (((((((t0.c4)|(rt1.c2)))AND(LIKELIHOOD(DISTINCT rt1.c2, t0.c1))))AND(((t0.c2) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT COUNT(*) FROM rt1 WHERE ((0.0 IN (((rt1.c1)IS NOT(x''))))) ORDER BY ((((rt1.c4 IN (rt1.c2)), CASE rt1.c5  WHEN rt1.c4 THEN NULL WHEN 0xffffffff9934641b THEN rt1.c0 END))<((rt1.c3 COLLATE RTRIM, CASE rt1.c1  WHEN 0.3365974081714892 THEN rt1.c1 WHEN x'70dd58' THEN rt1.c5 WHEN rt1.c6 THEN rt1.c1 ELSE rt1.c5 END)));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((((0.0 IN (((rt1.c1)IS NOT(x'')))))AND(-134458342))) ORDER BY ((((rt1.c4 IN (rt1.c2)), CASE rt1.c5  WHEN rt1.c4 THEN NULL WHEN 0xffffffff9934641b THEN rt1.c0 END))<((rt1.c3 COLLATE RTRIM, CASE rt1.c1  WHEN 0.3365974081714892 THEN rt1.c1 WHEN x'70dd58' THEN rt1.c5 WHEN rt1.c6 THEN rt1.c1 ELSE rt1.c5 END))) LIMIT 0x1;
SELECT MIN(t0.c0) FROM t0, rt1 WHERE ((NOT (((rt1.c3) ISNULL)))) ORDER BY rt1.c2 ASC;
SELECT ALL MIN(t0.c0) FROM t0, rt1 WHERE ((((NOT (((rt1.c3) ISNULL))))AND(((((t0.c1)>=(rt1.c3))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (rt1.c0 COLLATE RTRIM))))) ORDER BY ((((((t0.c0)OR(t0.c0)))OR(rt1.c3)))/(((t0.c1) NOT BETWEEN (rt1.c5) AND (rt1.c5)))) DESC  NULLS FIRST;
SELECT ALL MAX(rt1.c2) FROM rt1 WHERE (CAST((~ (rt1.c6)) AS TEXT)) ORDER BY CASE ((rt1.c0) BETWEEN (rt1.c5) AND (0.5789117370558894))  WHEN ((rt1.c5)OR(rt1.c6)) THEN rt1.c6 END DESC  NULLS LAST, -1062156080 ASC;
SELECT MAX(rt1.c2) FROM rt1 WHERE (((CAST((~ (rt1.c6)) AS TEXT))AND(rt1.c5))) ORDER BY CAST(((rt1.c6) NOT BETWEEN (rt1.c1) AND (rt1.c0)) AS REAL) DESC, (((((rt1.c6)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))))<<(((rt1.c5) BETWEEN (rt1.c6) AND (rt1.c0)))) INTERSECT SELECT ALL MAX(rt1.c2) FROM rt1 WHERE (CASE ((((((((((rt1.c6)AND(rt1.c3)))AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c5))  WHEN rt1.c6 COLLATE RTRIM THEN (rt1.c0 IN (rt1.c4, rt1.c5, rt1.c5)) WHEN ((((((((x'7e')OR(rt1.c5)))AND(rt1.c4)))OR(rt1.c1)))AND(rt1.c6)) THEN CAST('' AS REAL) ELSE CASE WHEN rt1.c0 THEN rt1.c2 END END) ORDER BY CAST(((rt1.c6) NOT BETWEEN (rt1.c1) AND (rt1.c0)) AS REAL) DESC, (((((rt1.c6)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))))<<(((rt1.c5) BETWEEN (rt1.c6) AND (rt1.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE ('1823274675');
SELECT DISTINCT COUNT(*) FROM t0 WHERE ('1823274675');
SELECT ALL * FROM t0, rt1 WHERE ((NOT (t0.c1)));
SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (t0.c1)));
SELECT ALL * FROM t0, rt1 WHERE ((NOT (t0.c1)));
SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (t0.c1)));
SELECT * FROM t0, rt1 WHERE (NULL) ORDER BY (NOT (rt1.c1)) ASC, CASE WHEN (((rt1.c5, rt1.c1, '35009463')) BETWEEN ((rt1.c2, t0.c4, t0.c3)) AND ((t0.c1, x'454a', rt1.c2))) THEN (+ (t0.c0)) WHEN '0.4875802708536756' THEN ((rt1.c2) BETWEEN (rt1.c6) AND (t0.c2)) WHEN ((rt1.c1) IS FALSE) THEN '-956693349' END  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (NULL) ORDER BY (((((((((((- (rt1.c1)))OR(rt1.c0)))OR(-1189038761)))OR(rt1.c2)))OR(rt1.c2)))OR(RTRIM('1934950711'))) ASC, x'5920' ASC  NULLS LAST, x'9a' DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM t0, rt1 WHERE (NULL) ORDER BY (NOT (rt1.c1)) ASC, CASE WHEN (((rt1.c5, rt1.c1, '35009463')) BETWEEN ((rt1.c2, t0.c4, t0.c3)) AND ((t0.c1, x'454a', rt1.c2))) THEN (+ (t0.c0)) WHEN '0.4875802708536756' THEN ((rt1.c2) BETWEEN (rt1.c6) AND (t0.c2)) WHEN ((rt1.c1) IS FALSE) THEN '-956693349' END  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (NULL) ORDER BY (((((((((((- (rt1.c1)))OR(rt1.c0)))OR(-1189038761)))OR(rt1.c2)))OR(rt1.c2)))OR(RTRIM('1934950711'))) ASC, x'5920' ASC  NULLS LAST, x'9a' DESC  NULLS LAST LIMIT 0x0;
SELECT MAX(t0.c4) FROM t0 WHERE (((CASE t0.c2  WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c4 WHEN t0.c3 THEN t0.c3 WHEN t0.c4 THEN '1158033150' END) ISNULL)) ORDER BY (((0.4527162870828929))>=((t0.c3))) COLLATE RTRIM DESC, ((CASE t0.c4  WHEN t0.c4 THEN t0.c3 WHEN t0.c4 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END) NOT BETWEEN ((- (t0.c2))) AND ((~ (t0.c3))));
SELECT DISTINCT MAX(t0.c4) FROM t0 WHERE (((CASE t0.c2  WHEN t0.c3 THEN t0.c0 WHEN t0.c1 THEN t0.c3 WHEN t0.c2 THEN t0.c4 WHEN t0.c3 THEN t0.c3 WHEN t0.c4 THEN '1158033150' END) ISNULL)) ORDER BY (((0.4527162870828929))>=((t0.c3))) COLLATE RTRIM DESC, ((CASE t0.c4  WHEN t0.c4 THEN t0.c3 WHEN t0.c4 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END) NOT BETWEEN ((- (t0.c2))) AND ((~ (t0.c3)))) INTERSECT SELECT DISTINCT MAX(t0.c4) FROM t0 WHERE ((((((t0.c2) ISNULL), ((((((((t0.c4)AND(t0.c3)))AND(t0.c4)))AND(t0.c4)))AND(t0.c2)), 0.15745800474254845))!=((t0.c4, ((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c0)), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c4)))))) ORDER BY (((0.4527162870828929))>=((t0.c3))) COLLATE RTRIM DESC, ((CASE t0.c4  WHEN t0.c4 THEN t0.c3 WHEN t0.c4 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END) NOT BETWEEN ((- (t0.c2))) AND ((~ (t0.c3))));
SELECT ALL MIN(t0.c1) FROM t0 WHERE (((((((((t0.c2) NOTNULL))AND(CAST(t0.c4 AS TEXT))))OR(0.8025714318341832)))AND(((t0.c3)OR(t0.c0))))) ORDER BY '|' DESC  NULLS FIRST, (((NULL IN (t0.c1, t0.c1)))/(((t0.c2)-(t0.c3)))) ASC;
SELECT DISTINCT MIN(t0.c1) FROM t0 WHERE (((((((((t0.c2) NOTNULL))AND(CAST(t0.c4 AS TEXT))))OR(0.8025714318341832)))AND(((t0.c3)OR(t0.c0))))) ORDER BY '|' DESC  NULLS FIRST, (((NULL IN (t0.c1, t0.c1)))/(((t0.c2)-(t0.c3)))) ASC;
SELECT ALL MAX(rt1.c5) FROM rt1, t0 WHERE (((((~ (t0.c2)), CASE WHEN rt1.c1 THEN t0.c2 END, CASE WHEN rt1.c0 THEN t0.c4 WHEN rt1.c3 THEN t0.c2 ELSE rt1.c0 END, TIME(rt1.c0, rt1.c5, rt1.c5)))>=((PRINTF(t0.c3, rt1.c2, t0.c2), (NOT (rt1.c5)), ROUND(rt1.c6, rt1.c5), rt1.c3 COLLATE BINARY)))) ORDER BY (((NULL, rt1.c0, rt1.c2, rt1.c1)) BETWEEN ((t0.c4, t0.c3, '-180735253', rt1.c2)) AND ((t0.c0, t0.c4, NULL, ''))) COLLATE RTRIM ASC, ((CAST(rt1.c2 AS REAL)) BETWEEN (((t0.c0)LIKE(rt1.c5))) AND (NULL)) ASC  NULLS LAST;
SELECT MAX(rt1.c5) FROM rt1, t0 WHERE (((((~ (t0.c2)), CASE WHEN rt1.c1 THEN t0.c2 END, CASE WHEN rt1.c0 THEN t0.c4 WHEN rt1.c3 THEN t0.c2 ELSE rt1.c0 END, TIME(rt1.c0, rt1.c5, rt1.c5)))>=((PRINTF(t0.c3, rt1.c2, t0.c2), (NOT (rt1.c5)), ROUND(rt1.c6, rt1.c5), rt1.c3 COLLATE BINARY)))) ORDER BY (NOT (((((((rt1.c4)OR('687576756')))OR(rt1.c6)))OR(t0.c4))))  NULLS FIRST, ((((rt1.c3)+(rt1.c5)))>((((t0.c2, x'a6', t0.c2, t0.c2))>((rt1.c2, t0.c4, t0.c4, '[}'))))) DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT MAX(rt1.c5) FROM rt1, t0 WHERE ((~ (json_array(t0.c1, rt1.c3, '799376404', rt1.c4)))) ORDER BY (NOT (((((((rt1.c4)OR('687576756')))OR(rt1.c6)))OR(t0.c4))))  NULLS FIRST, ((((rt1.c3)+(rt1.c5)))>((((t0.c2, x'a6', t0.c2, t0.c2))>((rt1.c2, t0.c4, t0.c4, '[}'))))) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c5)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c5)) IN ()));
SELECT DISTINCT * FROM rt1 WHERE ((((((((((rt1.c5)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c5)) IN ()))AND(((rt1.c1) BETWEEN (rt1.c6) AND (rt1.c0)) COLLATE BINARY))) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((rt1.c3)&((rt1.c2 IN ()))));
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c5)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c5)) IN ()));
SELECT DISTINCT * FROM rt1 WHERE ((((((((((rt1.c5)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c5)) IN ()))AND(((rt1.c1) BETWEEN (rt1.c6) AND (rt1.c0)) COLLATE BINARY))) INTERSECT SELECT DISTINCT * FROM rt1 WHERE (((rt1.c3)&((rt1.c2 IN ()))));
SELECT COUNT(*) FROM rt1 WHERE ((NOT (((((((rt1.c4)OR(rt1.c6)))OR(rt1.c2)))AND(rt1.c1)))));
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ((NOT (((((((rt1.c4)OR(rt1.c6)))OR(rt1.c2)))AND(rt1.c1))))) ORDER BY ((((rt1.c4)OR(rt1.c5))) NOT BETWEEN ((rt1.c1 IN (0.0032158905941063187, rt1.c4))) AND ('1rL*K8G')) DESC;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON ((UNLIKELY(DISTINCT x'')) NOT BETWEEN ((0.14932630683014714 IN ())) AND ((((rt1.c3, rt1.c3))=((t0.c2, rt1.c4))))) WHERE ((~ (((('1752951764')) BETWEEN ((t0.c1)) AND ((rt1.c0))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON ((UNLIKELY(DISTINCT x'')) NOT BETWEEN ((0.14932630683014714 IN ())) AND ((((rt1.c3, rt1.c3))=((t0.c2, rt1.c4))))) WHERE ((~ (((('1752951764')) BETWEEN ((t0.c1)) AND ((rt1.c0)))))) ORDER BY ((t0.c2) ISNULL) COLLATE RTRIM  NULLS FIRST, LOWER((t0.c3 IN (t0.c3))) LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN -2.26271228E8 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END COLLATE BINARY) ORDER BY ((((((t0.c2)==(t0.c4)))AND(t0.c1)))OR(((((t0.c1)AND(t0.c2)))AND(t0.c3)))) DESC, CASE ((t0.c4)|(t0.c1))  WHEN ((t0.c4) NOT BETWEEN (x'a6') AND (t0.c3)) THEN t0.c1 WHEN ((t0.c3)||(t0.c0)) THEN (t0.c0 IN (t0.c4)) WHEN ((t0.c3) ISNULL) THEN (~ (t0.c4)) END  NULLS LAST;
SELECT * FROM t0 WHERE (CASE t0.c0  WHEN -2.26271228E8 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END COLLATE BINARY) ORDER BY x'64' COLLATE NOCASE DESC, LIKELY(DISTINCT ((((((((t0.c0)AND(t0.c1)))AND(t0.c3)))AND(t0.c2)))AND(t0.c3))) DESC  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY x'64' COLLATE NOCASE DESC, LIKELY(DISTINCT ((((((((t0.c0)AND(t0.c1)))AND(t0.c3)))AND(t0.c2)))AND(t0.c3))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN -2.26271228E8 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END COLLATE BINARY) ORDER BY ((((((t0.c2)==(t0.c4)))AND(t0.c1)))OR(((((t0.c1)AND(t0.c2)))AND(t0.c3)))) DESC, CASE ((t0.c4)|(t0.c1))  WHEN ((t0.c4) NOT BETWEEN (x'a6') AND (t0.c3)) THEN t0.c1 WHEN ((t0.c3)||(t0.c0)) THEN (t0.c0 IN (t0.c4)) WHEN ((t0.c3) ISNULL) THEN (~ (t0.c4)) END  NULLS LAST;
SELECT * FROM t0 WHERE (CASE t0.c0  WHEN -2.26271228E8 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END COLLATE BINARY) ORDER BY x'64' COLLATE NOCASE DESC, LIKELY(DISTINCT ((((((((t0.c0)AND(t0.c1)))AND(t0.c3)))AND(t0.c2)))AND(t0.c3))) DESC  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY x'64' COLLATE NOCASE DESC, LIKELY(DISTINCT ((((((((t0.c0)AND(t0.c1)))AND(t0.c3)))AND(t0.c2)))AND(t0.c3))) DESC  NULLS LAST;
SELECT MIN(rt1.c5) FROM rt1 WHERE (((0.45017946789163465) BETWEEN (SQLITE_COMPILEOPTION_USED(rt1.c3)) AND (UNLIKELY(DISTINCT '1161333626'))));
SELECT DISTINCT MIN(rt1.c5) FROM rt1 WHERE (((((0.45017946789163465) BETWEEN (SQLITE_COMPILEOPTION_USED(rt1.c3)) AND (UNLIKELY(DISTINCT '1161333626'))))AND((CAST(rt1.c5 AS BLOB) IN ((rt1.c5 IN (rt1.c1)), CASE rt1.c2  WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c2 END))))) ORDER BY (NOT (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN '}>4Ds' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)), ((((rt1.c6, rt1.c4, rt1.c0)) BETWEEN ((rt1.c2, rt1.c5, rt1.c5)) AND ((rt1.c6, rt1.c4, rt1.c4))) IN ()) ASC  NULLS LAST, '0.07549142447844681' ASC  NULLS LAST, (((((rt1.c1 IN ()))AND(rt1.c0)))AND(((rt1.c0)||(rt1.c3))))  NULLS FIRST INTERSECT SELECT DISTINCT MIN(rt1.c5) FROM rt1 WHERE ((((rt1.c0) IS FALSE) IN (((rt1.c5)*(rt1.c3)), SQLITE_SOURCE_ID()))) ORDER BY (NOT (CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN '}>4Ds' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)), ((((rt1.c6, rt1.c4, rt1.c0)) BETWEEN ((rt1.c2, rt1.c5, rt1.c5)) AND ((rt1.c6, rt1.c4, rt1.c4))) IN ()) ASC  NULLS LAST, '0.07549142447844681' ASC  NULLS LAST, (((((rt1.c1 IN ()))AND(rt1.c0)))AND(((rt1.c0)||(rt1.c3))))  NULLS FIRST;
SELECT ALL MIN(t0.c1) FROM t0 WHERE ((NOT (t0.c4 COLLATE RTRIM)));
SELECT DISTINCT MIN(t0.c1) FROM t0 WHERE ((((NOT (t0.c4 COLLATE RTRIM)))AND(CASE ((t0.c2)>>(t0.c2))  WHEN t0.c2 THEN CAST(t0.c4 AS NUMERIC) END))) LIMIT 0;
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c4) NOT BETWEEN (rt1.c6) AND (t0.c4)))OR(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)))))OR((NOT (rt1.c4)))) WHERE ('T讨硠<2<|)s') ORDER BY CAST(((t0.c0)IS(rt1.c3)) AS NUMERIC) DESC;
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ((((((rt1.c4) NOT BETWEEN (rt1.c6) AND (t0.c4)))OR(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)))))OR((NOT (rt1.c4)))) WHERE ((('T讨硠<2<|)s')AND(((((rt1.c0) IS FALSE))|((rt1.c6 IN ())))))) ORDER BY CASE CASE rt1.c3  WHEN t0.c2 THEN '-134458342' ELSE t0.c0 END  WHEN (((rt1.c3, t0.c0))<=((t0.c2, x'41'))) THEN ((rt1.c4) BETWEEN (rt1.c6) AND (t0.c0)) END LIMIT 0x0;
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c4) NOT BETWEEN (rt1.c6) AND (t0.c4)))OR(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)))))OR((NOT (rt1.c4)))) WHERE ('T讨硠<2<|)s') ORDER BY CAST(((t0.c0)IS(rt1.c3)) AS NUMERIC) DESC;
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON ((((((rt1.c4) NOT BETWEEN (rt1.c6) AND (t0.c4)))OR(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)))))OR((NOT (rt1.c4)))) WHERE ((('T讨硠<2<|)s')AND(((((rt1.c0) IS FALSE))|((rt1.c6 IN ())))))) ORDER BY CASE CASE rt1.c3  WHEN t0.c2 THEN '-134458342' ELSE t0.c0 END  WHEN (((rt1.c3, t0.c0))<=((t0.c2, x'41'))) THEN ((rt1.c4) BETWEEN (rt1.c6) AND (t0.c0)) END LIMIT 0x0;
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((((((((((((rt1.c2) NOTNULL))OR((((t0.c0, t0.c2, rt1.c2, t0.c3))=((t0.c2, rt1.c4, rt1.c3, rt1.c1))))))OR(((rt1.c6)==(t0.c1)))))OR(((t0.c1) ISNULL))))AND(((rt1.c1)+(rt1.c3)))))AND((((t0.c0))==((t0.c1))))) WHERE ((t0.c2 IN ()) COLLATE BINARY);
SELECT * FROM rt1 INNER JOIN t0 ON ((((((((((((rt1.c2) NOTNULL))OR((((t0.c0, t0.c2, rt1.c2, t0.c3))=((t0.c2, rt1.c4, rt1.c3, rt1.c1))))))OR(((rt1.c6)==(t0.c1)))))OR(((t0.c1) ISNULL))))AND(((rt1.c1)+(rt1.c3)))))AND((((t0.c0))==((t0.c1))))) WHERE ((t0.c2 IN ()) COLLATE BINARY) ORDER BY (NOT (rt1.c1)) COLLATE BINARY DESC, ((rt1.c6) BETWEEN (t0.c2) AND (t0.c0)) COLLATE NOCASE ASC LIMIT 0x3;
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((((((((((((rt1.c2) NOTNULL))OR((((t0.c0, t0.c2, rt1.c2, t0.c3))=((t0.c2, rt1.c4, rt1.c3, rt1.c1))))))OR(((rt1.c6)==(t0.c1)))))OR(((t0.c1) ISNULL))))AND(((rt1.c1)+(rt1.c3)))))AND((((t0.c0))==((t0.c1))))) WHERE ((t0.c2 IN ()) COLLATE BINARY);
SELECT * FROM rt1 INNER JOIN t0 ON ((((((((((((rt1.c2) NOTNULL))OR((((t0.c0, t0.c2, rt1.c2, t0.c3))=((t0.c2, rt1.c4, rt1.c3, rt1.c1))))))OR(((rt1.c6)==(t0.c1)))))OR(((t0.c1) ISNULL))))AND(((rt1.c1)+(rt1.c3)))))AND((((t0.c0))==((t0.c1))))) WHERE ((t0.c2 IN ()) COLLATE BINARY) ORDER BY (NOT (rt1.c1)) COLLATE BINARY DESC, ((rt1.c6) BETWEEN (t0.c2) AND (t0.c0)) COLLATE NOCASE ASC LIMIT 0x3;
SELECT MAX(t0.c4) FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c0) BETWEEN (t0.c4) AND (rt1.c6)))AND((NOT (rt1.c6)))) WHERE (((((((((((((((t0.c2)OR(t0.c3)))AND(rt1.c1)))AND(rt1.c3)))OR((rt1.c3 IN (rt1.c0, t0.c2)))))OR(rt1.c3 COLLATE NOCASE)))OR(((t0.c4) BETWEEN (rt1.c0) AND (rt1.c1)))))OR(ABS(t0.c0)))) ORDER BY IFNULL(DISTINCT ((((((t0.c0)OR(rt1.c5)))OR(rt1.c3)))OR(rt1.c4)), t0.c4) ASC;
SELECT DISTINCT MAX(t0.c4) FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c0) BETWEEN (t0.c4) AND (rt1.c6)))AND((NOT (rt1.c6)))) WHERE (((((((((((((((((t0.c2)OR(t0.c3)))AND(rt1.c1)))AND(rt1.c3)))OR((rt1.c3 IN (rt1.c0)))))OR(rt1.c3 COLLATE NOCASE)))OR(((t0.c4) BETWEEN (rt1.c0) AND (rt1.c1)))))OR(ABS(t0.c0))))AND(LOWER((rt1.c6 IN ()))))) ORDER BY IFNULL(DISTINCT ((((((t0.c0)OR(rt1.c5)))OR(rt1.c3)))OR(rt1.c4)), t0.c4) ASC LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(t0.c4) FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c0) BETWEEN (t0.c4) AND (rt1.c6)))AND((NOT (rt1.c6)))) WHERE (((t0.c3 COLLATE BINARY)|((NOT (x''))))) ORDER BY IFNULL(DISTINCT ((((((t0.c0)OR(rt1.c5)))OR(rt1.c3)))OR(rt1.c4)), t0.c4) ASC LIMIT 0x1;
SELECT MAX(rt1.c2) FROM rt1 WHERE ((((x'', rt1.c4, '2mṊ')) BETWEEN ((((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c3)))AND('-523250614')), CAST(rt1.c1 AS TEXT), (rt1.c3 IN (rt1.c6)))) AND ((CAST(rt1.c3 AS BLOB), TYPEOF(DISTINCT rt1.c3), ((rt1.c4)OR(rt1.c3))))));
SELECT MAX(rt1.c2) FROM rt1 WHERE ((((((x'', rt1.c4, '2mṊ')) BETWEEN ((((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c3)))AND('-523250614')), CAST(rt1.c1 AS TEXT), (rt1.c3 IN (rt1.c6)))) AND ((CAST(rt1.c3 AS BLOB), TYPEOF(DISTINCT rt1.c3), ((rt1.c4)OR(rt1.c3))))))AND((((rt1.c2 IN ())) NOT BETWEEN (((x'efa2') IS TRUE)) AND (rt1.c6 COLLATE BINARY))))) INTERSECT SELECT MAX(rt1.c2) FROM rt1 WHERE (((((rt1.c6)-(rt1.c6)))>>(rt1.c6)));
SELECT COUNT(*) FROM rt1, t0 WHERE (t0.c3) ORDER BY (((t0.c3 IN (rt1.c2, rt1.c3, rt1.c2)))*(CASE rt1.c5  WHEN rt1.c4 THEN rt1.c3 END)) ASC, (((CASE WHEN t0.c1 THEN rt1.c0 ELSE t0.c1 END, CAST(rt1.c4 AS REAL), (- (t0.c0))))>((NULL, ((rt1.c5)<<(rt1.c3)), t0.c0 COLLATE BINARY)));
SELECT DISTINCT COUNT(*) FROM rt1, t0 WHERE (t0.c3) ORDER BY (((t0.c3 IN (rt1.c2, rt1.c3, rt1.c2)))*(CASE rt1.c5  WHEN rt1.c4 THEN rt1.c3 END)) ASC, (((CASE WHEN t0.c1 THEN rt1.c0 ELSE t0.c1 END, CAST(rt1.c4 AS REAL), (- (t0.c0))))>((NULL, ((rt1.c5)<<(rt1.c3)), t0.c0 COLLATE BINARY)));
SELECT * FROM rt1 WHERE (((((rt1.c2) IS FALSE))%(('gaUcn' IN (rt1.c4, rt1.c6))))) ORDER BY (((rt1.c0 COLLATE BINARY, (~ (rt1.c3))))<>((CASE WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c2 THEN 0.17031130697818908 WHEN rt1.c0 THEN rt1.c2 END, ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4)))))  NULLS LAST, (+ (LENGTH(rt1.c3))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c2) IS FALSE))%(('gaUcn' IN (rt1.c4, rt1.c6)))))AND((- (rt1.c4 COLLATE BINARY))))) ORDER BY (((rt1.c0 COLLATE BINARY, (~ (rt1.c3))))<>((CASE WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c2 THEN 0.17031130697818908 WHEN rt1.c0 THEN rt1.c2 END, ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4)))))  NULLS LAST, (+ (LENGTH(rt1.c3))) DESC  NULLS LAST LIMIT 0x3;
SELECT * FROM rt1 WHERE (((((rt1.c2) IS FALSE))%(('gaUcn' IN (rt1.c4, rt1.c6))))) ORDER BY (((rt1.c0 COLLATE BINARY, (~ (rt1.c3))))<>((CASE WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c2 THEN 0.17031130697818908 WHEN rt1.c0 THEN rt1.c2 END, ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4)))))  NULLS LAST, (+ (LENGTH(rt1.c3))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c2) IS FALSE))%(('gaUcn' IN (rt1.c4, rt1.c6)))))AND((- (rt1.c4 COLLATE BINARY))))) ORDER BY (((rt1.c0 COLLATE BINARY, (~ (rt1.c3))))<>((CASE WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c2 THEN 0.17031130697818908 WHEN rt1.c0 THEN rt1.c2 END, ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4)))))  NULLS LAST, (+ (LENGTH(rt1.c3))) DESC  NULLS LAST LIMIT 0x3;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (CAST((((t0.c3, t0.c4)) BETWEEN ((t0.c1, t0.c4)) AND ((t0.c3, t0.c1))) AS BLOB)) ORDER BY ((((((((t0.c2)<(t0.c4)))AND(CASE t0.c1  WHEN 0x3594bc93 THEN t0.c1 WHEN t0.c4 THEN t0.c2 WHEN t0.c4 THEN t0.c2 WHEN '362794140' THEN NULL ELSE t0.c3 END)))OR(((t0.c3) NOT NULL))))AND(json_array_length(t0.c0))) ASC  NULLS FIRST, ABS(DISTINCT (((t0.c4, x'3a', x'87a1950b')) NOT BETWEEN ((t0.c0, t0.c2, t0.c4)) AND ((t0.c3, t0.c0, t0.c1)))) DESC  NULLS FIRST;
SELECT MAX(t0.c3) FROM t0 WHERE (CAST((((t0.c3, t0.c4)) BETWEEN ((t0.c1, t0.c4)) AND ((t0.c3, t0.c1))) AS BLOB)) ORDER BY ((((((((t0.c2)<(t0.c4)))AND(CASE t0.c1  WHEN 898940051 THEN t0.c1 WHEN t0.c4 THEN t0.c2 WHEN t0.c4 THEN t0.c2 WHEN '362794140' THEN NULL ELSE t0.c3 END)))OR(((t0.c3) NOT NULL))))AND(json_array_length(t0.c0))) ASC  NULLS FIRST, ABS(DISTINCT (((t0.c4, x'3a', x'87a1950b')) NOT BETWEEN ((t0.c0, t0.c2, t0.c4)) AND ((t0.c3, t0.c0, t0.c1)))) DESC  NULLS FIRST LIMIT 0x2;
SELECT MAX(t0.c4) FROM t0 CROSS JOIN rt1 ON ((CASE rt1.c0  WHEN '1802664560' THEN t0.c1 WHEN rt1.c3 THEN rt1.c1 END) NOT NULL) WHERE ((NOT (((rt1.c3)%(t0.c2)))));
SELECT DISTINCT MAX(t0.c4) FROM t0 CROSS JOIN rt1 ON ((CASE rt1.c0  WHEN '1802664560' THEN t0.c1 WHEN rt1.c3 THEN rt1.c1 END) NOT NULL) WHERE ((NOT (((rt1.c3)%(t0.c2))))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(t0.c4) FROM t0 CROSS JOIN rt1 ON ((CASE rt1.c0  WHEN '1802664560' THEN t0.c1 WHEN rt1.c3 THEN rt1.c1 END) NOT NULL) WHERE (((((((t0.c1)AND(t0.c3)))AND(rt1.c6)))/(DATETIME(rt1.c5, rt1.c4, rt1.c4, rt1.c0, rt1.c0)))) LIMIT 0;
SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c0)&(t0.c3)) AS TEXT));
SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(((rt1.c0)&(t0.c3)) AS TEXT)) ORDER BY ((((x'')AND(((t0.c4)|(t0.c2)))))OR((NOT (rt1.c3))))  NULLS FIRST, ((((((((((UPPER(DISTINCT t0.c4))AND(CAST(rt1.c5 AS REAL))))OR((rt1.c0 IN ()))))OR(((t0.c3) NOT BETWEEN (t0.c1) AND (rt1.c1)))))AND(rt1.c1)))OR('361966788')) ASC;
SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c0)&(t0.c3)) AS TEXT));
SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(((rt1.c0)&(t0.c3)) AS TEXT)) ORDER BY ((((x'')AND(((t0.c4)|(t0.c2)))))OR((NOT (rt1.c3))))  NULLS FIRST, ((((((((((UPPER(DISTINCT t0.c4))AND(CAST(rt1.c5 AS REAL))))OR((rt1.c0 IN ()))))OR(((t0.c3) NOT BETWEEN (t0.c1) AND (rt1.c1)))))AND(rt1.c1)))OR('361966788')) ASC;
SELECT * FROM rt1 WHERE ((((rt1.c2))>=((rt1.c0 COLLATE NOCASE)))) ORDER BY ((((((((rt1.c5)>(rt1.c6)))OR(((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))AND((rt1.c6 IN (rt1.c0, rt1.c2)))))OR((((rt1.c5))<((rt1.c1))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c2))==((rt1.c0 COLLATE NOCASE)))) ORDER BY ((((((((rt1.c5)>(rt1.c6)))OR(((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))AND((rt1.c6 IN (rt1.c0, rt1.c2)))))OR((((rt1.c5))<((rt1.c1))))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((rt1.c2))>=((rt1.c0 COLLATE NOCASE)))) ORDER BY ((((((((rt1.c5)>(rt1.c6)))OR(((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))AND((rt1.c6 IN (rt1.c0, rt1.c2)))))OR((((rt1.c5))<((rt1.c1))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c2))==((rt1.c0 COLLATE NOCASE)))) ORDER BY ((((((((rt1.c5)>(rt1.c6)))OR(((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))AND((rt1.c6 IN (rt1.c0, rt1.c2)))))OR((((rt1.c5))<((rt1.c1))))) ASC  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (((rt1.c1 COLLATE RTRIM) NOT BETWEEN ((t0.c4 IN (t0.c4))) AND (rt1.c6 COLLATE RTRIM)));
SELECT * FROM t0, rt1 WHERE (((((rt1.c1 COLLATE RTRIM) NOT BETWEEN ((t0.c4 IN (t0.c4))) AND (rt1.c6 COLLATE RTRIM)))AND((((rt1.c6, t0.c4)) BETWEEN ((CASE WHEN x'' THEN NULL END, 1062820823)) AND ((((t0.c3)!=(rt1.c1)), CASE WHEN t0.c0 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c3 END)))))) INTERSECT SELECT * FROM t0, rt1 WHERE (0.10359529383030674);
SELECT * FROM t0, rt1 WHERE (((rt1.c1 COLLATE RTRIM) NOT BETWEEN ((t0.c4 IN (t0.c4))) AND (rt1.c6 COLLATE RTRIM)));
SELECT * FROM t0, rt1 WHERE (((((rt1.c1 COLLATE RTRIM) NOT BETWEEN ((t0.c4 IN (t0.c4))) AND (rt1.c6 COLLATE RTRIM)))AND((((rt1.c6, t0.c4)) BETWEEN ((CASE WHEN x'' THEN NULL END, 1062820823)) AND ((((t0.c3)!=(rt1.c1)), CASE WHEN t0.c0 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c3 END)))))) INTERSECT SELECT * FROM t0, rt1 WHERE (0.10359529383030674);
SELECT * FROM rt1 WHERE (((('*(', ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c6)), NULL, TRIM(DISTINCT rt1.c0)))<(((rt1.c2 IN (0.9991094564283517, '-1283036363')), (+ (rt1.c3)), 0.29608509524234816, rt1.c2)))) ORDER BY ((CASE 0Xffffffffcc95f4d5  WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN NULL END) NOT NULL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (((('*(', ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c6)), NULL, TRIM(DISTINCT rt1.c0)))<(((rt1.c2 IN (0.9991094564283517, '-1283036363')), (+ (rt1.c3)), 0.29608509524234816, rt1.c2)))) ORDER BY ((CASE 0xffffffffcc95f4d5  WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN NULL END) NOT NULL) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (MIN(TYPEOF(DISTINCT 0x7ddc540e), CAST(rt1.c3 AS TEXT), CASE WHEN rt1.c2 THEN rt1.c3 END, ((rt1.c2)<=(NULL)))) ORDER BY ((CASE -862587691  WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN NULL END) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((('*(', ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c6)), NULL, TRIM(DISTINCT rt1.c0)))<(((rt1.c2 IN (0.9991094564283517, '-1283036363')), (+ (rt1.c3)), 0.29608509524234816, rt1.c2)))) ORDER BY ((CASE 0Xffffffffcc95f4d5  WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN NULL END) NOT NULL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt1 WHERE (((('*(', ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c6)), NULL, TRIM(DISTINCT rt1.c0)))<(((rt1.c2 IN (0.9991094564283517, '-1283036363')), (+ (rt1.c3)), 0.29608509524234816, rt1.c2)))) ORDER BY ((CASE 0xffffffffcc95f4d5  WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN NULL END) NOT NULL) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (MIN(TYPEOF(DISTINCT 0x7ddc540e), CAST(rt1.c3 AS TEXT), CASE WHEN rt1.c2 THEN rt1.c3 END, ((rt1.c2)<=(NULL)))) ORDER BY ((CASE -862587691  WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN NULL END) NOT NULL) DESC  NULLS FIRST;
SELECT MAX(rt1.c6) FROM rt1 WHERE ((((((- (rt1.c3)))AND(((rt1.c1)>=(NULL)))))AND(((rt1.c5) IS FALSE))));
SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE ((((((- (rt1.c3)))AND(((rt1.c1)>=(NULL)))))AND(((rt1.c5) IS FALSE)))) ORDER BY CASE WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))) THEN (rt1.c4 IN (rt1.c5)) WHEN ((rt1.c5)||(rt1.c2)) THEN rtreenode(rt1.c1, NULL) ELSE ((((rt1.c5)AND(0.6853960602116498)))AND(rt1.c2)) END  NULLS LAST, LIKELIHOOD(CAST(NULL AS TEXT), ((rt1.c1)>=(rt1.c1))) DESC  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE (TRIM(DISTINCT (rt1.c5 IN (rt1.c1)), rt1.c0)) ORDER BY CASE WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))) THEN (rt1.c4 IN (rt1.c5)) WHEN ((rt1.c5)||(rt1.c2)) THEN rtreenode(rt1.c1, NULL) ELSE ((((rt1.c5)AND(0.6853960602116498)))AND(rt1.c2)) END  NULLS LAST, LIKELIHOOD(CAST(NULL AS TEXT), ((rt1.c1)>=(rt1.c1))) DESC  NULLS FIRST LIMIT 0x2;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((((((t0.c2)OR(t0.c1)))OR(t0.c2)))AND(t0.c3))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (x'')) THEN TRIM(DISTINCT t0.c3, NULL) END);
SELECT COUNT(*) FROM t0 WHERE (((CASE ((((((t0.c2)OR(t0.c1)))OR(t0.c2)))AND(t0.c3))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (x'')) THEN TRIM(DISTINCT t0.c3, NULL) END)AND(((((t0.c3)+(t0.c0))) NOT NULL)))) ORDER BY ((((t0.c1))<((t0.c0))) IN ()), ((CAST(t0.c4 AS REAL)) NOT BETWEEN (((t0.c4)*(t0.c1))) AND (((t0.c1)LIKE(t0.c4))))  NULLS LAST;
SELECT ALL MAX(rt1.c6) FROM rt1 WHERE (CASE NULLIF(DISTINCT rt1.c0, rt1.c5)  WHEN ((rt1.c4)=(rt1.c3)) THEN (((rt1.c1)) BETWEEN ((rt1.c6)) AND ((rt1.c5))) WHEN ((rt1.c0) NOT NULL) THEN rt1.c6 WHEN ((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c2)) THEN CAST(rt1.c1 AS INTEGER) END) ORDER BY CAST(((rt1.c1)&(rt1.c3)) AS TEXT)  NULLS LAST;
SELECT DISTINCT MAX(rt1.c6) FROM rt1 WHERE (((CASE NULLIF(DISTINCT rt1.c0, rt1.c5)  WHEN ((rt1.c4)==(rt1.c3)) THEN (((rt1.c1)) BETWEEN ((rt1.c6)) AND ((rt1.c5))) WHEN ((rt1.c0) NOT NULL) THEN rt1.c6 WHEN ((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c2)) THEN CAST(rt1.c1 AS INTEGER) END)AND(rt1.c4))) ORDER BY CAST(json_quote(x'') AS NUMERIC) DESC, rt1.c1;
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((CASE WHEN t0.c0 THEN t0.c1 WHEN rt1.c4 THEN t0.c4 WHEN t0.c2 THEN t0.c1 END) IS FALSE) WHERE ((((t0.c3 IN (rt1.c6))) BETWEEN (rt1.c1 COLLATE NOCASE) AND ((((t0.c0, t0.c4, rt1.c0, t0.c0))>((rt1.c4, t0.c1, rt1.c1, rt1.c2))))));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON ((CASE WHEN t0.c0 THEN t0.c1 WHEN rt1.c4 THEN t0.c4 WHEN t0.c2 THEN t0.c1 END) IS FALSE) WHERE ((((t0.c3 IN (rt1.c6))) BETWEEN (rt1.c1 COLLATE NOCASE) AND ((((t0.c0, t0.c4, rt1.c0, t0.c0))>((rt1.c4, t0.c1, rt1.c1, rt1.c2)))))) INTERSECT SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON ((CASE WHEN t0.c0 THEN t0.c1 WHEN rt1.c4 THEN t0.c4 WHEN t0.c2 THEN t0.c1 END) IS FALSE) WHERE (CASE WHEN (((t0.c1, rt1.c1))<((t0.c0, rt1.c3))) THEN ((rt1.c2) NOTNULL) WHEN IFNULL('<\8', rt1.c1) THEN CAST(rt1.c3 AS REAL) WHEN ((((rt1.c6)AND(t0.c0)))AND(rt1.c2)) THEN IFNULL(DISTINCT rt1.c5, rt1.c6) ELSE t0.c0 END);
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((CASE WHEN t0.c0 THEN t0.c1 WHEN rt1.c4 THEN t0.c4 WHEN t0.c2 THEN t0.c1 END) IS FALSE) WHERE ((((t0.c3 IN (rt1.c6))) BETWEEN (rt1.c1 COLLATE NOCASE) AND ((((t0.c0, t0.c4, rt1.c0, t0.c0))>((rt1.c4, t0.c1, rt1.c1, rt1.c2))))));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON ((CASE WHEN t0.c0 THEN t0.c1 WHEN rt1.c4 THEN t0.c4 WHEN t0.c2 THEN t0.c1 END) IS FALSE) WHERE ((((t0.c3 IN (rt1.c6))) BETWEEN (rt1.c1 COLLATE NOCASE) AND ((((t0.c0, t0.c4, rt1.c0, t0.c0))>((rt1.c4, t0.c1, rt1.c1, rt1.c2)))))) INTERSECT SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON ((CASE WHEN t0.c0 THEN t0.c1 WHEN rt1.c4 THEN t0.c4 WHEN t0.c2 THEN t0.c1 END) IS FALSE) WHERE (CASE WHEN (((t0.c1, rt1.c1))<((t0.c0, rt1.c3))) THEN ((rt1.c2) NOTNULL) WHEN IFNULL('<\8', rt1.c1) THEN CAST(rt1.c3 AS REAL) WHEN ((((rt1.c6)AND(t0.c0)))AND(rt1.c2)) THEN IFNULL(DISTINCT rt1.c5, rt1.c6) ELSE t0.c0 END);
SELECT ALL MIN(rt1.c1) FROM rt1 CROSS JOIN t0 ON CAST(((rt1.c2) NOT NULL) AS TEXT) WHERE ((((rt1.c6, rt1.c0)) NOT BETWEEN (((((t0.c2, rt1.c3, 0.20090666626908615, t0.c4)) NOT BETWEEN ((t0.c1, rt1.c1, t0.c3, rt1.c1)) AND ((rt1.c2, rt1.c4, rt1.c6, rt1.c4))), 0.5482650018673647)) AND ((LIKE(t0.c0, t0.c0, 'h'), rt1.c5)))) ORDER BY (((((((((t0.c2, '')) BETWEEN ((t0.c4, rt1.c0)) AND ((t0.c4, NULL))))OR(CAST(rt1.c4 AS TEXT))))OR(rt1.c5 COLLATE BINARY)))AND(((rt1.c3)AND(rt1.c1))))  NULLS FIRST, (((('') ISNULL))>(CASE WHEN t0.c1 THEN rt1.c0 END)), ((('0.5806564964651925' IN ())) BETWEEN (((t0.c0)>(t0.c0))) AND (rt1.c1 COLLATE BINARY))  NULLS LAST;
SELECT DISTINCT MIN(rt1.c1) FROM rt1 CROSS JOIN t0 ON CAST(((rt1.c2) NOT NULL) AS TEXT) WHERE ((((((rt1.c6, rt1.c0)) NOT BETWEEN (((((t0.c2, rt1.c3, 0.20090666626908615, t0.c4)) NOT BETWEEN ((t0.c1, rt1.c1, t0.c3, rt1.c1)) AND ((rt1.c2, rt1.c4, rt1.c6, rt1.c4))), 0.5482650018673647)) AND ((LIKE(t0.c0, t0.c0, 'h'), rt1.c5))))AND(CASE (((t0.c4))>((rt1.c0)))  WHEN ((rt1.c2)=(t0.c1)) THEN ((t0.c4)IS NOT(t0.c1)) END))) ORDER BY ((rt1.c1) IS TRUE) COLLATE NOCASE DESC  NULLS FIRST, ((((((((rt1.c1)OR(t0.c2)))AND(t0.c0)))AND(rt1.c6)))AND(((t0.c3)>=(rt1.c5)))) DESC  NULLS LAST, ((((NULL)/(x'74')))||(((t0.c2) IS TRUE)))  NULLS FIRST, (('-657915064') BETWEEN (0.42643673186228004) AND (UNLIKELY(DISTINCT t0.c4))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE ((((((t0.c4)*(t0.c3)), CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c1 END))=((CASE t0.c2  WHEN t0.c2 THEN rt1.c6 WHEN NULL THEN rt1.c3 ELSE rt1.c5 END, (~ (rt1.c5))))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((((t0.c4)*(t0.c3)), CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c1 END))=((CASE t0.c2  WHEN t0.c2 THEN rt1.c6 WHEN NULL THEN rt1.c3 ELSE rt1.c5 END, (~ (rt1.c5))))))AND(ABS(DISTINCT (t0.c3 IN ()))))) ORDER BY CASE WHEN ((t0.c2)<(t0.c2)) THEN ((rt1.c6)LIKE(rt1.c6)) WHEN ((((((t0.c1)OR(NULL)))OR(rt1.c3)))AND(t0.c3)) THEN CAST(t0.c1 AS NUMERIC) WHEN t0.c2 THEN ((rt1.c2)>(rt1.c0)) WHEN (- (rt1.c1)) THEN CAST(t0.c1 AS INTEGER) ELSE CAST(t0.c2 AS TEXT) END  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM rt1, t0 WHERE ((((((t0.c4)*(t0.c3)), CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c1 END))=((CASE t0.c2  WHEN t0.c2 THEN rt1.c6 WHEN NULL THEN rt1.c3 ELSE rt1.c5 END, (~ (rt1.c5))))));
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((((t0.c4)*(t0.c3)), CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c1 END))=((CASE t0.c2  WHEN t0.c2 THEN rt1.c6 WHEN NULL THEN rt1.c3 ELSE rt1.c5 END, (~ (rt1.c5))))))AND(ABS(DISTINCT (t0.c3 IN ()))))) ORDER BY CASE WHEN ((t0.c2)<(t0.c2)) THEN ((rt1.c6)LIKE(rt1.c6)) WHEN ((((((t0.c1)OR(NULL)))OR(rt1.c3)))AND(t0.c3)) THEN CAST(t0.c1 AS NUMERIC) WHEN t0.c2 THEN ((rt1.c2)>(rt1.c0)) WHEN (- (rt1.c1)) THEN CAST(t0.c1 AS INTEGER) ELSE CAST(t0.c2 AS TEXT) END  NULLS LAST LIMIT 0x2;
SELECT * FROM t0, rt1 WHERE (((((((((x'1483' COLLATE BINARY)OR((((t0.c4, t0.c3)) NOT BETWEEN ((t0.c1, t0.c0)) AND ((t0.c1, t0.c4))))))AND(CAST(rt1.c3 AS INTEGER))))AND(((rt1.c4)%(rt1.c1)))))OR(CAST(-1223942551 AS TEXT)))) ORDER BY LIKELIHOOD(rt1.c5, ((NULL)/(t0.c1)));
SELECT ALL * FROM t0, rt1 WHERE (((((((((((x'1483' COLLATE BINARY)OR((((t0.c4, t0.c3)) NOT BETWEEN ((t0.c1, t0.c0)) AND ((t0.c1, t0.c4))))))AND(CAST(rt1.c3 AS INTEGER))))AND(((rt1.c4)%(rt1.c1)))))OR(CAST(-1223942551 AS TEXT))))AND(((CAST(rt1.c2 AS INTEGER))IS(CASE rt1.c1  WHEN rt1.c6 THEN t0.c0 ELSE t0.c1 END))))) ORDER BY LIKELIHOOD(rt1.c5, ((NULL)/(t0.c1))) LIMIT 1 INTERSECT SELECT * FROM t0, rt1 WHERE (((((t0.c2) BETWEEN (t0.c3) AND (t0.c1))) IS TRUE)) ORDER BY LIKELIHOOD(rt1.c5, ((NULL)/(t0.c1))) LIMIT 0X1;
SELECT * FROM t0, rt1 WHERE (((((((((x'1483' COLLATE BINARY)OR((((t0.c4, t0.c3)) NOT BETWEEN ((t0.c1, t0.c0)) AND ((t0.c1, t0.c4))))))AND(CAST(rt1.c3 AS INTEGER))))AND(((rt1.c4)%(rt1.c1)))))OR(CAST(-1223942551 AS TEXT)))) ORDER BY LIKELIHOOD(rt1.c5, ((NULL)/(t0.c1)));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (t0.c3);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((t0.c3)AND((((((rt1.c6)+(rt1.c6)), (((rt1.c3))<((t0.c2)))))<>(((t0.c4 IN (t0.c4)), (+ (t0.c3)))))))) ORDER BY ((((CASE WHEN rt1.c2 THEN rt1.c4 WHEN t0.c1 THEN rt1.c1 WHEN rt1.c2 THEN t0.c4 END)AND(CAST(rt1.c1 AS NUMERIC))))AND(CHAR(rt1.c2))), CAST(((rt1.c5)OR(rt1.c4)) AS REAL) ASC  NULLS LAST, IFNULL(((rt1.c6) BETWEEN (rt1.c6) AND (NULL)), ((rt1.c5) IS FALSE)) ASC LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c4 IN (t0.c4, t0.c4)))<=(((t0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c1))))) ORDER BY ((((CASE WHEN rt1.c2 THEN rt1.c4 WHEN t0.c1 THEN rt1.c1 WHEN rt1.c2 THEN t0.c4 END)AND(CAST(rt1.c1 AS NUMERIC))))AND(CHAR(rt1.c2))), CAST(((rt1.c5)OR(rt1.c4)) AS REAL) ASC  NULLS LAST, IFNULL(((rt1.c6) BETWEEN (rt1.c6) AND (NULL)), ((rt1.c5) IS FALSE)) ASC LIMIT 0x0;
SELECT * FROM rt1 WHERE ((((rt1.c1, rt1.c6, rt1.c4)) BETWEEN ((rt1.c3 COLLATE BINARY, (~ (rt1.c0)), (((rt1.c6, NULL)) NOT BETWEEN ((rt1.c0, rt1.c2)) AND ((rt1.c3, rt1.c3))))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN 0.8461842628647115 END, ((rt1.c1)+('-764289347')), ((rt1.c4)&(rt1.c1))))));
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c1, rt1.c6, rt1.c4)) BETWEEN ((rt1.c3 COLLATE BINARY, (~ (rt1.c0)), (((rt1.c6, NULL)) NOT BETWEEN ((rt1.c0, rt1.c2)) AND ((rt1.c3, rt1.c3))))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN 0.8461842628647115 END, ((rt1.c1)+('-764289347')), ((rt1.c4)&(rt1.c1)))))) ORDER BY ((CASE WHEN rt1.c4 THEN rt1.c0 WHEN NULL THEN rt1.c6 END)IS NOT(((rt1.c6) NOTNULL)))  NULLS LAST, (((rt1.c5, rt1.c2, rt1.c5)) BETWEEN ((((rt1.c0) IS FALSE), DATETIME(rt1.c2, rt1.c2, rt1.c0, rt1.c0, rt1.c6, rt1.c1), (((rt1.c6, rt1.c1, rt1.c6, rt1.c6, rt1.c6, rt1.c1, rt1.c0, rt1.c6))<=((rt1.c2, rt1.c3, rt1.c1, rt1.c4, rt1.c3, rt1.c1, rt1.c3, rt1.c0))))) AND ((rt1.c1 COLLATE NOCASE, (((rt1.c5))<((rt1.c5))), rt1.c5 COLLATE BINARY)))  NULLS LAST LIMIT 0x1;
SELECT * FROM rt1 WHERE ((((rt1.c1, rt1.c6, rt1.c4)) BETWEEN ((rt1.c3 COLLATE BINARY, (~ (rt1.c0)), (((rt1.c6, NULL)) NOT BETWEEN ((rt1.c0, rt1.c2)) AND ((rt1.c3, rt1.c3))))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN 0.8461842628647115 END, ((rt1.c1)+('-764289347')), ((rt1.c4)&(rt1.c1))))));
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c1, rt1.c6, rt1.c4)) BETWEEN ((rt1.c3 COLLATE BINARY, (~ (rt1.c0)), (((rt1.c6, NULL)) NOT BETWEEN ((rt1.c0, rt1.c2)) AND ((rt1.c3, rt1.c3))))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN 0.8461842628647115 END, ((rt1.c1)+('-764289347')), ((rt1.c4)&(rt1.c1)))))) ORDER BY ((CASE WHEN rt1.c4 THEN rt1.c0 WHEN NULL THEN rt1.c6 END)IS NOT(((rt1.c6) NOTNULL)))  NULLS LAST, (((rt1.c5, rt1.c2, rt1.c5)) BETWEEN ((((rt1.c0) IS FALSE), DATETIME(rt1.c2, rt1.c2, rt1.c0, rt1.c0, rt1.c6, rt1.c1), (((rt1.c6, rt1.c1, rt1.c6, rt1.c6, rt1.c6, rt1.c1, rt1.c0, rt1.c6))<=((rt1.c2, rt1.c3, rt1.c1, rt1.c4, rt1.c3, rt1.c1, rt1.c3, rt1.c0))))) AND ((rt1.c1 COLLATE NOCASE, (((rt1.c5))<((rt1.c5))), rt1.c5 COLLATE BINARY)))  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) NOT NULL)) IS TRUE)) ORDER BY '-2052642299' COLLATE NOCASE  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c1) NOT NULL)) IS TRUE)) ORDER BY '-2052642299' COLLATE NOCASE  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CAST(((rt1.c6)=(rt1.c2)) AS REAL)) ORDER BY '-2052642299' COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) NOT NULL)) IS TRUE)) ORDER BY '-2052642299' COLLATE NOCASE  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c1) NOT NULL)) IS TRUE)) ORDER BY '-2052642299' COLLATE NOCASE  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CAST(((rt1.c6)=(rt1.c2)) AS REAL)) ORDER BY '-2052642299' COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (CASE CAST(0.7833823416746257 AS TEXT)  WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c4)) THEN rt1.c5 END);
SELECT COUNT(*) FROM rt1 WHERE (CASE CAST(0.7833823416746257 AS TEXT)  WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c4)) THEN rt1.c5 END);
SELECT ALL * FROM rt1 WHERE (0.5767214158235883) ORDER BY ((rt1.c6)LIKE(rt1.c4)) COLLATE RTRIM ASC, (NOT (rt1.c1)) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (0.5767214158235883) ORDER BY highlight((+ (rt1.c1)), UPPER(DISTINCT rt1.c1), (NOT (rt1.c0)), ('0.4292284324645219' IN ())) ASC, ((CASE rt1.c5  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)-(((rt1.c1)OR(rt1.c2)))) ASC  NULLS FIRST, ((((((((((((rt1.c1)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c1)))AND(rt1.c5)))OR(rt1.c6)))/(CAST(rt1.c5 AS NUMERIC)))  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM rt1 WHERE (0.5767214158235883) ORDER BY ((rt1.c6)LIKE(rt1.c4)) COLLATE RTRIM ASC, (NOT (rt1.c1)) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE (0.5767214158235883) ORDER BY highlight((+ (rt1.c1)), UPPER(DISTINCT rt1.c1), (NOT (rt1.c0)), ('0.4292284324645219' IN ())) ASC, ((CASE rt1.c5  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)-(((rt1.c1)OR(rt1.c2)))) ASC  NULLS FIRST, ((((((((((((rt1.c1)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c1)))AND(rt1.c5)))OR(rt1.c6)))/(CAST(rt1.c5 AS NUMERIC)))  NULLS LAST LIMIT 0x1;
SELECT * FROM rt1, t0 WHERE ('r' COLLATE BINARY);
SELECT * FROM rt1, t0 WHERE ((('r' COLLATE BINARY)AND(CAST(CAST(rt1.c3 AS TEXT) AS INTEGER)))) ORDER BY ((((t0.c0 IN (t0.c4)), ((rt1.c2) BETWEEN (rt1.c4) AND (t0.c2)), (t0.c3 IN ())))!=((((t0.c1)<(t0.c2)), ((rt1.c5) IS FALSE), (NOT (rt1.c5))))) ASC  NULLS LAST LIMIT 0X2;
SELECT * FROM rt1, t0 WHERE ('r' COLLATE BINARY);
SELECT * FROM rt1, t0 WHERE ((('r' COLLATE BINARY)AND(CAST(CAST(rt1.c3 AS TEXT) AS INTEGER)))) ORDER BY ((((t0.c0 IN (t0.c4)), ((rt1.c2) BETWEEN (rt1.c4) AND (t0.c2)), (t0.c3 IN ())))!=((((t0.c1)<(t0.c2)), ((rt1.c5) IS FALSE), (NOT (rt1.c5))))) ASC  NULLS LAST LIMIT 0X2;
SELECT * FROM t0, rt1 WHERE (((((((CASE t0.c4  WHEN rt1.c4 THEN rt1.c1 ELSE t0.c4 END)OR(rt1.c2)))AND(0x8a63fe1)))OR(((((((((t0.c3)AND(rt1.c6)))OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c3))))) ORDER BY (((((t0.c2, rt1.c4, rt1.c3)) NOT BETWEEN ((rt1.c6, rt1.c5, t0.c2)) AND ((rt1.c0, t0.c3, rt1.c3))))&(((rt1.c1) BETWEEN (rt1.c4) AND (0xffffffffc941ba71)))) ASC;
SELECT * FROM t0, rt1 WHERE (((((((CASE t0.c4  WHEN rt1.c4 THEN rt1.c1 ELSE t0.c4 END)OR(rt1.c2)))AND(0x8a63fe1)))OR(((((((((t0.c3)AND(rt1.c6)))OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c3))))) ORDER BY ((2006465073)>=(rt1.c1)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (((((((CASE t0.c4  WHEN rt1.c4 THEN rt1.c1 ELSE t0.c4 END)OR(rt1.c2)))AND(0x8a63fe1)))OR(((((((((t0.c3)AND(rt1.c6)))OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c3))))) ORDER BY (((((t0.c2, rt1.c4, rt1.c3)) NOT BETWEEN ((rt1.c6, rt1.c5, t0.c2)) AND ((rt1.c0, t0.c3, rt1.c3))))&(((rt1.c1) BETWEEN (rt1.c4) AND (0xffffffffc941ba71)))) ASC;
SELECT * FROM t0, rt1 WHERE (((((((CASE t0.c4  WHEN rt1.c4 THEN rt1.c1 ELSE t0.c4 END)OR(rt1.c2)))AND(0x8a63fe1)))OR(((((((((t0.c3)AND(rt1.c6)))OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c3))))) ORDER BY ((2006465073)>=(rt1.c1)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (CAST(((((rt1.c2)AND(rt1.c3)))AND(t0.c2)) AS BLOB));
SELECT ALL * FROM rt1, t0 WHERE (((CAST(((((rt1.c2)AND(rt1.c3)))AND(t0.c2)) AS BLOB))AND(CASE WHEN ((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c4)) THEN ((t0.c3) NOTNULL) END))) ORDER BY '-1936093851'  NULLS FIRST, (((((rt1.c6))>=((rt1.c3))))&(rt1.c0)) DESC, TRIM(((t0.c0) BETWEEN (t0.c1) AND (rt1.c3)), ((t0.c2) NOT BETWEEN (rt1.c6) AND (rt1.c3))) DESC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (CAST(((((rt1.c2)AND(rt1.c3)))AND(t0.c2)) AS BLOB));
SELECT ALL * FROM rt1, t0 WHERE (((CAST(((((rt1.c2)AND(rt1.c3)))AND(t0.c2)) AS BLOB))AND(CASE WHEN ((rt1.c1) NOT BETWEEN (t0.c1) AND (rt1.c4)) THEN ((t0.c3) NOTNULL) END))) ORDER BY '-1936093851'  NULLS FIRST, (((((rt1.c6))>=((rt1.c3))))&(rt1.c0)) DESC, TRIM(((t0.c0) BETWEEN (t0.c1) AND (rt1.c3)), ((t0.c2) NOT BETWEEN (rt1.c6) AND (rt1.c3))) DESC  NULLS FIRST;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON t0.c0 WHERE (((((((rt1.c3)OR(t0.c1)))OR(rt1.c2))) IS TRUE));
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON t0.c0 WHERE (((((((rt1.c3)OR(t0.c1)))OR(rt1.c2))) IS TRUE)) ORDER BY (NULLIF(rt1.c4, rt1.c4) IN ())  NULLS FIRST, 0.1500624517547785 ASC  NULLS LAST;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON t0.c0 WHERE (((((((rt1.c3)OR(t0.c1)))OR(rt1.c2))) IS TRUE));
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON t0.c0 WHERE (((((((rt1.c3)OR(t0.c1)))OR(rt1.c2))) IS TRUE)) ORDER BY (NULLIF(rt1.c4, rt1.c4) IN ())  NULLS FIRST, 0.1500624517547785 ASC  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (((rt1.c5)<<(CAST(t0.c2 AS BLOB))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((rt1.c5)<<(CAST(t0.c2 AS BLOB)))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(((((((((rt1.c2)AND(rt1.c6)))AND(t0.c1)))OR(0X1132b32e)))OR(rt1.c0)) AS INTEGER)) LIMIT 0x1;
SELECT * FROM rt1, t0 WHERE (((rt1.c5)<<(CAST(t0.c2 AS BLOB))));
SELECT DISTINCT * FROM rt1, t0 WHERE (((rt1.c5)<<(CAST(t0.c2 AS BLOB)))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt1, t0 WHERE (CAST(((((((((rt1.c2)AND(rt1.c6)))AND(t0.c1)))OR(0X1132b32e)))OR(rt1.c0)) AS INTEGER)) LIMIT 0x1;
SELECT * FROM rt1 WHERE ((+ (((rt1.c4)<(rt1.c5))))) ORDER BY 0.0333009422550824 ASC  NULLS LAST, CASE ((((rt1.c0)AND(rt1.c4)))AND(rt1.c2))  WHEN (~ (NULL)) THEN rt1.c6 COLLATE BINARY WHEN ((rt1.c3) IS FALSE) THEN (NOT ('-1980698300')) ELSE CAST(rt1.c3 AS NUMERIC) END ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE ((+ (((rt1.c4)<(rt1.c5))))) ORDER BY CAST(IFNULL(rt1.c1, rt1.c1) AS INTEGER) DESC  NULLS LAST, COALESCE(((((NULL)OR(rt1.c6)))AND(rt1.c2)), (rt1.c0 IN ()), (NOT (x'3d382a87d594'))) DESC  NULLS LAST, 0xffffffffb5672ca1 DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CAST((rt1.c1 IN (NULL, rt1.c2)) AS BLOB)) ORDER BY CAST(IFNULL(rt1.c1, rt1.c1) AS INTEGER) DESC  NULLS LAST, COALESCE(((((NULL)OR(rt1.c6)))AND(rt1.c2)), (rt1.c0 IN ()), (NOT (x'3d382a87d594'))) DESC  NULLS LAST, 0Xffffffffb5672ca1 DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((+ (((rt1.c4)<(rt1.c5))))) ORDER BY 0.0333009422550824 ASC  NULLS LAST, CASE ((((rt1.c0)AND(rt1.c4)))AND(rt1.c2))  WHEN (~ (NULL)) THEN rt1.c6 COLLATE BINARY WHEN ((rt1.c3) IS FALSE) THEN (NOT ('-1980698300')) ELSE CAST(rt1.c3 AS NUMERIC) END ASC  NULLS LAST;
SELECT DISTINCT * FROM rt1 WHERE ((+ (((rt1.c4)<(rt1.c5))))) ORDER BY CAST(IFNULL(rt1.c1, rt1.c1) AS INTEGER) DESC  NULLS LAST, COALESCE(((((NULL)OR(rt1.c6)))AND(rt1.c2)), (rt1.c0 IN ()), (NOT (x'3d382a87d594'))) DESC  NULLS LAST, 0xffffffffb5672ca1 DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt1 WHERE (CAST((rt1.c1 IN (NULL, rt1.c2)) AS BLOB)) ORDER BY CAST(IFNULL(rt1.c1, rt1.c1) AS INTEGER) DESC  NULLS LAST, COALESCE(((((NULL)OR(rt1.c6)))AND(rt1.c2)), (rt1.c0 IN ()), (NOT (x'3d382a87d594'))) DESC  NULLS LAST, 0Xffffffffb5672ca1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((t0.c4)LIKE(rt1.c0))) IS FALSE)) ORDER BY ((((rt1.c1) NOTNULL)) NOT BETWEEN (((rt1.c4) NOT BETWEEN (t0.c3) AND (t0.c4))) AND (((t0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) DESC;
SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE (((((((t0.c4)LIKE(rt1.c0))) IS FALSE))AND((((((t0.c1, t0.c2, rt1.c2))!=((rt1.c1, rt1.c1, t0.c3))))>=(CASE rt1.c6  WHEN rt1.c3 THEN rt1.c1 WHEN t0.c0 THEN t0.c4 WHEN rt1.c0 THEN t0.c1 WHEN rt1.c6 THEN t0.c2 END))))) ORDER BY ((((rt1.c1) NOTNULL)) NOT BETWEEN (((rt1.c4) NOT BETWEEN (t0.c3) AND (t0.c4))) AND (((t0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) DESC INTERSECT SELECT DISTINCT COUNT(*) FROM t0, rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((t0.c0)))) BETWEEN (t0.c3) AND (((x'')GLOB(rt1.c5))))) ORDER BY ((((rt1.c1) NOTNULL)) NOT BETWEEN (((rt1.c4) NOT BETWEEN (t0.c3) AND (t0.c4))) AND (((t0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) DESC;
SELECT * FROM rt1, t0 WHERE (((t0.c1 COLLATE RTRIM) IS FALSE)) ORDER BY CAST(LTRIM(rt1.c3) AS INTEGER)  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (((((t0.c1 COLLATE RTRIM) IS FALSE))AND(((highlight(rt1.c2, t0.c4, t0.c2, rt1.c3)) NOT NULL)))) ORDER BY ((((rt1.c3)<(t0.c3)))<<((rt1.c6 IN (t0.c3))))  NULLS FIRST, ((((rt1.c1)>>(t0.c4))) ISNULL) DESC, rt1.c2 COLLATE BINARY DESC;
SELECT * FROM rt1, t0 WHERE (((t0.c1 COLLATE RTRIM) IS FALSE)) ORDER BY CAST(LTRIM(rt1.c3) AS INTEGER)  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (((((t0.c1 COLLATE RTRIM) IS FALSE))AND(((highlight(rt1.c2, t0.c4, t0.c2, rt1.c3)) NOT NULL)))) ORDER BY ((((rt1.c3)<(t0.c3)))<<((rt1.c6 IN (t0.c3))))  NULLS FIRST, ((((rt1.c1)>>(t0.c4))) ISNULL) DESC, rt1.c2 COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (0.8428229219785842) ORDER BY (((rt1.c1)-(rt1.c4)) IN ((((t0.c4, rt1.c1))<((rt1.c3, 0X2e4955f9))), ((t0.c3)%(rt1.c3))))  NULLS FIRST, ((((((t0.c3)OR(QUOTE(rt1.c0))))AND(CASE x'169c9b'  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c3 END)))OR(CASE WHEN rt1.c2 THEN t0.c2 ELSE t0.c0 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (0.8428229219785842) ORDER BY CASE MAX(rt1.c4, rt1.c3, t0.c1, rt1.c1, rt1.c4)  WHEN ((t0.c1) BETWEEN (rt1.c2) AND ('2102086614')) THEN CAST(rt1.c3 AS BLOB) ELSE ((rt1.c6)&(rt1.c0)) END ASC  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((((((((rt1.c5))>=((rt1.c2))))OR(CAST(rt1.c0 AS INTEGER))))OR((~ (t0.c2)))))AND((t0.c3 IN ())))) ORDER BY CASE MAX(rt1.c4, rt1.c3, t0.c1, rt1.c1, rt1.c4)  WHEN ((t0.c1) BETWEEN (rt1.c2) AND ('2102086614')) THEN CAST(rt1.c3 AS BLOB) ELSE ((rt1.c6)&(rt1.c0)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE ((((rt1.c3) NOTNULL) IN (CASE t0.c3  WHEN rt1.c5 THEN rt1.c4 END))) ORDER BY (~ (((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c4)))OR(rt1.c0)))OR(rt1.c0)))) DESC;
SELECT DISTINCT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE ((((rt1.c3) NOTNULL) IN (CASE t0.c3  WHEN rt1.c5 THEN rt1.c4 END))) ORDER BY (~ (((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c4)))OR(rt1.c0)))OR(rt1.c0)))) DESC INTERSECT SELECT DISTINCT COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c2) NOT BETWEEN (t0.c4) AND (t0.c4)))<>(((rt1.c6) BETWEEN (NULL) AND (rt1.c3))))) ORDER BY (~ (((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c4)))OR(rt1.c0)))OR(rt1.c0)))) DESC;
SELECT ALL * FROM t0, rt1 WHERE ((TRIM(t0.c1) IN ((((t0.c1, t0.c2, t0.c0))==(('-16644864', rt1.c4, rt1.c5))), CASE rt1.c6  WHEN '-528801166' THEN t0.c3 END, ((t0.c2)%(rt1.c0)), ((((((((rt1.c0)AND(t0.c2)))OR(x'0b')))OR(rt1.c3)))AND(t0.c1)))));
SELECT ALL * FROM t0, rt1 WHERE ((((TRIM(t0.c1) IN ((((t0.c1, t0.c2, t0.c0))=(('-16644864', rt1.c4, rt1.c5))), CASE rt1.c6  WHEN '-528801166' THEN t0.c3 END, ((t0.c2)%(rt1.c0)), ((((((((rt1.c0)AND(t0.c2)))OR(x'0b')))OR(rt1.c3)))AND(t0.c1)))))AND(rt1.c1)));
SELECT ALL * FROM t0, rt1 WHERE ((TRIM(t0.c1) IN ((((t0.c1, t0.c2, t0.c0))==(('-16644864', rt1.c4, rt1.c5))), CASE rt1.c6  WHEN '-528801166' THEN t0.c3 END, ((t0.c2)%(rt1.c0)), ((((((((rt1.c0)AND(t0.c2)))OR(x'0b')))OR(rt1.c3)))AND(t0.c1)))));
SELECT ALL * FROM t0, rt1 WHERE ((((TRIM(t0.c1) IN ((((t0.c1, t0.c2, t0.c0))=(('-16644864', rt1.c4, rt1.c5))), CASE rt1.c6  WHEN '-528801166' THEN t0.c3 END, ((t0.c2)%(rt1.c0)), ((((((((rt1.c0)AND(t0.c2)))OR(x'0b')))OR(rt1.c3)))AND(t0.c1)))))AND(rt1.c1)));
SELECT MAX(rt1.c4) FROM rt1 WHERE (((((rt1.c5)<<(rt1.c5))) BETWEEN (((((((rt1.c5)AND(rt1.c6)))AND(rt1.c6)))OR(rt1.c5))) AND (highlight(rt1.c3, rt1.c1, rt1.c5, rt1.c6)))) ORDER BY ((CASE rt1.c6  WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c0 END) IS FALSE) DESC  NULLS FIRST;
SELECT MAX(rt1.c4) FROM rt1 WHERE (((((((rt1.c5)<<(rt1.c5))) BETWEEN (((((((rt1.c5)AND(rt1.c6)))AND(rt1.c6)))OR(rt1.c5))) AND (highlight(rt1.c3, rt1.c1, rt1.c5, rt1.c6))))AND(((0xffffffffdb43e926)<>(((((((((((0.08403710018982702)OR(rt1.c6)))OR(rt1.c1)))OR(rt1.c1)))OR(x'')))OR(rt1.c1))))))) ORDER BY (~ (((rt1.c4)<>(rt1.c5)))), '1804969471' ASC;
SELECT * FROM t0 WHERE (((((((t0.c4)AND((t0.c0 IN (t0.c2)))))AND(((((((t0.c3)AND(0X131c81ca)))OR(t0.c0)))AND(NULL)))))AND(((((((t0.c1)AND(0.9359667882357533)))OR(t0.c1)))AND(t0.c3))))) ORDER BY ((json_object(t0.c2, t0.c3))*(((0.7185198318510814)<=(t0.c4)))) ASC  NULLS FIRST, (STRFTIME(t0.c3, 0.2465070452129049, 0X1aabe739, t0.c3) IN ());
SELECT ALL * FROM t0 WHERE (((((((t0.c4)AND((t0.c0 IN (t0.c2)))))AND(((((((t0.c3)AND(320635338)))OR(t0.c0)))AND(NULL)))))AND(((((((t0.c1)AND(0.9359667882357533)))OR(t0.c1)))AND(t0.c3))))) ORDER BY (((((((((0.13459426010395603 IN ()))AND('')))AND((t0.c1 IN (t0.c4)))))OR((NOT (NULL)))))OR((t0.c3 IN (0.10795068278856201, t0.c0))))  NULLS LAST, (((((((((t0.c2 IN (x'9a', t0.c3)))AND(((t0.c0) NOTNULL))))AND(UNLIKELY(t0.c2))))AND(((((t0.c1)OR(t0.c4)))OR(t0.c1)))))OR(t0.c0 COLLATE NOCASE)) ASC, ((((((0.07549142447844681)OR(((t0.c1) ISNULL))))OR(CASE t0.c4  WHEN t0.c1 THEN t0.c1 END)))AND(DATE(-2.06571097E9, t0.c0, t0.c1, t0.c1, x'f3')))  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (((((((((((CAST(t0.c0 AS INTEGER))OR(((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))))AND(((t0.c3)/(t0.c4)))))OR(json_extract(t0.c0, t0.c4, t0.c3))))AND(((t0.c4) NOT BETWEEN (t0.c4) AND (t0.c4)))))OR(t0.c1))) ORDER BY (((((((((0.13459426010395603 IN ()))AND('')))AND((t0.c1 IN (t0.c4)))))OR((NOT (NULL)))))OR((t0.c3 IN (0.10795068278856201, t0.c0))))  NULLS LAST, (((((((((t0.c2 IN (x'9a', t0.c3)))AND(((t0.c0) NOTNULL))))AND(UNLIKELY(t0.c2))))AND(((((t0.c1)OR(t0.c4)))OR(t0.c1)))))OR(t0.c0 COLLATE NOCASE)) ASC, ((((((0.07549142447844681)OR(((t0.c1) ISNULL))))OR(CASE t0.c4  WHEN t0.c1 THEN t0.c1 END)))AND(DATE(-2.06571097E9, t0.c0, t0.c1, t0.c1, x'f3')))  NULLS FIRST LIMIT 0X0;
SELECT * FROM t0 WHERE (((((((t0.c4)AND((t0.c0 IN (t0.c2)))))AND(((((((t0.c3)AND(0X131c81ca)))OR(t0.c0)))AND(NULL)))))AND(((((((t0.c1)AND(0.9359667882357533)))OR(t0.c1)))AND(t0.c3))))) ORDER BY ((json_object(t0.c2, t0.c3))*(((0.7185198318510814)<=(t0.c4)))) ASC  NULLS FIRST, (STRFTIME(t0.c3, 0.2465070452129049, 0X1aabe739, t0.c3) IN ());
SELECT ALL * FROM t0, rt1 WHERE (CAST(((t0.c0) IS TRUE) AS NUMERIC)) ORDER BY CASE rt1.c6  WHEN ((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt1.c6)+(rt1.c3)) WHEN t0.c2 THEN (((t0.c1))==((rt1.c4))) END DESC;
SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(((t0.c0) IS TRUE) AS NUMERIC))AND(t0.c1))) ORDER BY ((t0.c4)<>(CAST(rt1.c2 AS INTEGER))) ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((t0.c4)LIKE(rt1.c1))))) ORDER BY ((t0.c4)!=(CAST(rt1.c2 AS INTEGER))) ASC LIMIT 1;
SELECT ALL * FROM t0, rt1 WHERE (CAST(((t0.c0) IS TRUE) AS NUMERIC)) ORDER BY CASE rt1.c6  WHEN ((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt1.c6)+(rt1.c3)) WHEN t0.c2 THEN (((t0.c1))==((rt1.c4))) END DESC;
SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(((t0.c0) IS TRUE) AS NUMERIC))AND(t0.c1))) ORDER BY ((t0.c4)<>(CAST(rt1.c2 AS INTEGER))) ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((t0.c4)LIKE(rt1.c1))))) ORDER BY ((t0.c4)!=(CAST(rt1.c2 AS INTEGER))) ASC LIMIT 1;
SELECT ALL MAX(t0.c2) FROM rt1, t0 WHERE (CAST(0xffffffffb4454c09 AS NUMERIC));
SELECT DISTINCT MAX(t0.c2) FROM rt1, t0 WHERE (((CAST(0Xffffffffb4454c09 AS NUMERIC))AND((((((rt1.c2, rt1.c1, t0.c4))<=((rt1.c0, rt1.c5, rt1.c0)))) BETWEEN (-2.29228074E8) AND (((rt1.c2) BETWEEN (t0.c1) AND (t0.c2))))))) ORDER BY t0.c0 DESC LIMIT 1 INTERSECT SELECT DISTINCT MAX(t0.c2) FROM rt1, t0 WHERE (((t0.c2) IS FALSE) COLLATE BINARY COLLATE NOCASE) ORDER BY t0.c0 DESC LIMIT 1;
SELECT * FROM t0 INNER JOIN rt1 ON (((rt1.c3 IN ())) BETWEEN (((rt1.c3)OR(t0.c0))) AND (((t0.c1)%(rt1.c6)))) WHERE (((IFNULL(rt1.c3, t0.c0))&(CAST(rt1.c4 AS NUMERIC))));
SELECT ALL * FROM t0 INNER JOIN rt1 ON (((rt1.c3 IN ())) BETWEEN (((rt1.c3)OR(t0.c0))) AND (((t0.c1)%(rt1.c6)))) WHERE (((((IFNULL(rt1.c3, t0.c0))&(CAST(rt1.c4 AS NUMERIC))))AND(((((rt1.c1) BETWEEN (rt1.c1) AND (x'9a')))GLOB(((NULL) NOT BETWEEN (t0.c4) AND (x''))))))) LIMIT 2 INTERSECT SELECT * FROM t0 INNER JOIN rt1 ON (((rt1.c3 IN ())) BETWEEN (((rt1.c3)OR(t0.c0))) AND (((t0.c1)%(rt1.c6)))) WHERE ((~ (((((((((t0.c4)OR(rt1.c3)))AND(t0.c2)))AND(t0.c3)))AND(t0.c2))))) LIMIT 2;
SELECT * FROM t0 INNER JOIN rt1 ON (((rt1.c3 IN ())) BETWEEN (((rt1.c3)OR(t0.c0))) AND (((t0.c1)%(rt1.c6)))) WHERE (((IFNULL(rt1.c3, t0.c0))&(CAST(rt1.c4 AS NUMERIC))));
SELECT ALL * FROM t0 INNER JOIN rt1 ON (((rt1.c3 IN ())) BETWEEN (((rt1.c3)OR(t0.c0))) AND (((t0.c1)%(rt1.c6)))) WHERE (((((IFNULL(rt1.c3, t0.c0))&(CAST(rt1.c4 AS NUMERIC))))AND(((((rt1.c1) BETWEEN (rt1.c1) AND (x'9a')))GLOB(((NULL) NOT BETWEEN (t0.c4) AND (x''))))))) LIMIT 2 INTERSECT SELECT * FROM t0 INNER JOIN rt1 ON (((rt1.c3 IN ())) BETWEEN (((rt1.c3)OR(t0.c0))) AND (((t0.c1)%(rt1.c6)))) WHERE ((~ (((((((((t0.c4)OR(rt1.c3)))AND(t0.c2)))AND(t0.c3)))AND(t0.c2))))) LIMIT 2;
SELECT ALL * FROM rt1, t0 WHERE (CAST(x'5b' AS NUMERIC)) ORDER BY CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (rt1.c1)) AS INTEGER)  NULLS LAST, CASE WHEN ((((t0.c3)OR(rt1.c3)))OR(t0.c2)) THEN (rt1.c1 IN ()) WHEN ((x'b021') BETWEEN (t0.c2) AND (t0.c3)) THEN (rt1.c2 IN ()) WHEN ((rt1.c3)-(t0.c0)) THEN ((((((((rt1.c1)AND(rt1.c4)))OR(rt1.c6)))OR(t0.c1)))AND(t0.c3)) ELSE CAST(t0.c1 AS REAL) END  NULLS LAST, (((((((((((rt1.c2)) NOT BETWEEN ((t0.c2)) AND ((rt1.c4))))AND((rt1.c3 IN (rt1.c5)))))OR(highlight(rt1.c1, t0.c4, rt1.c6, t0.c0))))AND(t0.c3 COLLATE BINARY)))OR((+ (rt1.c2))));
SELECT ALL * FROM rt1, t0 WHERE (CAST(x'5b' AS NUMERIC)) ORDER BY ((((rt1.c4, t0.c2))<((t0.c0, t0.c0))) IN (((((((((((t0.c0)OR(rt1.c5)))OR(t0.c4)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c0)), TYPEOF(DISTINCT rt1.c1))) LIMIT 0X1;
SELECT ALL * FROM rt1, t0 WHERE (CAST(x'5b' AS NUMERIC)) ORDER BY CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (rt1.c1)) AS INTEGER)  NULLS LAST, CASE WHEN ((((t0.c3)OR(rt1.c3)))OR(t0.c2)) THEN (rt1.c1 IN ()) WHEN ((x'b021') BETWEEN (t0.c2) AND (t0.c3)) THEN (rt1.c2 IN ()) WHEN ((rt1.c3)-(t0.c0)) THEN ((((((((rt1.c1)AND(rt1.c4)))OR(rt1.c6)))OR(t0.c1)))AND(t0.c3)) ELSE CAST(t0.c1 AS REAL) END  NULLS LAST, (((((((((((rt1.c2)) NOT BETWEEN ((t0.c2)) AND ((rt1.c4))))AND((rt1.c3 IN (rt1.c5)))))OR(highlight(rt1.c1, t0.c4, rt1.c6, t0.c0))))AND(t0.c3 COLLATE BINARY)))OR((+ (rt1.c2))));
SELECT ALL * FROM rt1, t0 WHERE (CAST(x'5b' AS NUMERIC)) ORDER BY ((((rt1.c4, t0.c2))<((t0.c0, t0.c0))) IN (((((((((((t0.c0)OR(rt1.c5)))OR(t0.c4)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c0)), TYPEOF(DISTINCT rt1.c1))) LIMIT 0X1;
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c5) IS TRUE));
SELECT * FROM t0, rt1 WHERE (((rt1.c5) IS TRUE)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c1 WHEN rt1.c1 THEN t0.c0 END)<<(((rt1.c1)<<(rt1.c1)))), (((rt1.c4 IN (rt1.c5)))|((NOT (rt1.c0))))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL * FROM t0, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c3) AND (t0.c1)) AS INTEGER)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c1 WHEN rt1.c1 THEN t0.c0 END)<<(((rt1.c1)<<(rt1.c1)))), (((rt1.c4 IN (rt1.c5)))|((NOT (rt1.c0))))  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t0, rt1 WHERE (((rt1.c5) IS TRUE));
SELECT * FROM t0, rt1 WHERE (((rt1.c5) IS TRUE)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c1 WHEN rt1.c1 THEN t0.c0 END)<<(((rt1.c1)<<(rt1.c1)))), (((rt1.c4 IN (rt1.c5)))|((NOT (rt1.c0))))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL * FROM t0, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c3) AND (t0.c1)) AS INTEGER)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c1 WHEN rt1.c1 THEN t0.c0 END)<<(((rt1.c1)<<(rt1.c1)))), (((rt1.c4 IN (rt1.c5)))|((NOT (rt1.c0))))  NULLS FIRST LIMIT 0x0;
SELECT * FROM t0 WHERE (NULL) ORDER BY ((-2.26271228E8 COLLATE RTRIM) NOT NULL)  NULLS LAST, TRIM(DISTINCT ((((((((t0.c4)AND('#')))AND(t0.c0)))OR(t0.c1)))AND(0.7020918382079648)), TYPEOF(DISTINCT t0.c4)) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((NULL)AND((CAST(t0.c1 AS TEXT) IN ())))) ORDER BY ((-2.26271228E8 COLLATE RTRIM) NOT NULL)  NULLS LAST, TRIM(DISTINCT ((((((((t0.c4)AND('#')))AND(t0.c0)))OR(t0.c1)))AND(0.7020918382079648)), TYPEOF(DISTINCT t0.c4)) ASC  NULLS LAST LIMIT 0x0;
SELECT * FROM t0 WHERE (NULL) ORDER BY ((-2.26271228E8 COLLATE RTRIM) NOT NULL)  NULLS LAST, TRIM(DISTINCT ((((((((t0.c4)AND('#')))AND(t0.c0)))OR(t0.c1)))AND(0.7020918382079648)), TYPEOF(DISTINCT t0.c4)) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((NULL)AND((CAST(t0.c1 AS TEXT) IN ())))) ORDER BY ((-2.26271228E8 COLLATE RTRIM) NOT NULL)  NULLS LAST, TRIM(DISTINCT ((((((((t0.c4)AND('#')))AND(t0.c0)))OR(t0.c1)))AND(0.7020918382079648)), TYPEOF(DISTINCT t0.c4)) ASC  NULLS LAST LIMIT 0x0;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1, t0.c0))<=((t0.c0, t0.c0)))) IS TRUE)) ORDER BY ((((((t0.c3)AND(1377919000)))OR(t0.c0))) IS FALSE) DESC, ((((((((((((CAST(0.10380167701207621 AS BLOB))OR(((((((((t0.c4)AND(NULL)))AND(t0.c1)))OR(t0.c3)))AND(t0.c0)))))AND(((t0.c0)LIKE(0.10176768358785371)))))AND(CAST(t0.c2 AS NUMERIC))))AND((((t0.c3)) BETWEEN ((0x6b4547d9)) AND ((t0.c1))))))AND(CASE WHEN 0Xffffffffea0d11ba THEN t0.c2 ELSE t0.c2 END)))OR(CAST(t0.c4 AS REAL))), (((t0.c3 IN ()))<=(((t0.c1) IS FALSE)))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((t0.c1, t0.c0))<=((t0.c0, t0.c0)))) IS TRUE)) ORDER BY ((((((t0.c3)AND(1377919000)))OR(t0.c0))) IS FALSE) DESC, ((((((((((((CAST(0.10380167701207621 AS BLOB))OR(((((((((t0.c4)AND(NULL)))AND(t0.c1)))OR(t0.c3)))AND(t0.c0)))))AND(((t0.c0)LIKE(0.10176768358785371)))))AND(CAST(t0.c2 AS NUMERIC))))AND((((t0.c3)) BETWEEN ((1799702489)) AND ((t0.c1))))))AND(CASE WHEN -368242246 THEN t0.c2 ELSE t0.c2 END)))OR(CAST(t0.c4 AS REAL))), (((t0.c3 IN ()))<=(((t0.c1) IS FALSE)))  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (t0.c4) ORDER BY ((((((t0.c3)AND(1377919000)))OR(t0.c0))) IS FALSE) DESC, ((((((((((((CAST(0.10380167701207621 AS BLOB))OR(((((((((t0.c4)AND(NULL)))AND(t0.c1)))OR(t0.c3)))AND(t0.c0)))))AND(((t0.c0)LIKE(0.10176768358785371)))))AND(CAST(t0.c2 AS NUMERIC))))AND((((t0.c3)) BETWEEN ((1799702489)) AND ((t0.c1))))))AND(CASE WHEN -368242246 THEN t0.c2 ELSE t0.c2 END)))OR(CAST(t0.c4 AS REAL))), (((t0.c3 IN ()))<=(((t0.c1) IS FALSE)))  NULLS LAST;
SELECT ALL MAX(t0.c3) FROM t0 WHERE (CAST((((t0.c1))!=((t0.c2))) AS TEXT));
SELECT ALL MAX(t0.c3) FROM t0 WHERE (((CAST((((t0.c1))<((t0.c2))) AS TEXT))AND(CASE WHEN ((t0.c3)-(t0.c3)) THEN CASE WHEN t0.c2 THEN t0.c3 WHEN t0.c3 THEN t0.c4 WHEN t0.c0 THEN t0.c3 ELSE t0.c0 END WHEN (((t0.c1, t0.c1, t0.c0)) NOT BETWEEN ((t0.c3, t0.c2, t0.c0)) AND ((t0.c3, t0.c3, t0.c3))) THEN CASE t0.c2  WHEN t0.c1 THEN t0.c3 END WHEN (NOT (t0.c4)) THEN ((NULL) IS FALSE) ELSE TYPEOF(t0.c1) END))) ORDER BY t0.c4 COLLATE BINARY ASC  NULLS FIRST INTERSECT SELECT MAX(t0.c3) FROM t0 WHERE (CAST('i3Ej' AS NUMERIC)) ORDER BY t0.c4 COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL MIN(rt1.c5) FROM rt1, t0 WHERE (((('-1835506993')) NOT BETWEEN ((((rt1.c3)IS(t0.c1)))) AND ((t0.c2)))) ORDER BY rt1.c0;
SELECT MIN(rt1.c5) FROM rt1, t0 WHERE (((('-1835506993')) NOT BETWEEN ((((rt1.c3)IS(t0.c1)))) AND ((t0.c2)))) ORDER BY rt1.c0 INTERSECT SELECT MIN(rt1.c5) FROM rt1, t0 WHERE (UPPER(CASE rt1.c4  WHEN t0.c3 THEN t0.c4 WHEN NULL THEN 0.14790898626958582 END)) ORDER BY rt1.c0;
SELECT * FROM rt1 WHERE (('1731612788' IN ()));
SELECT * FROM rt1 WHERE (((('1731612788' IN ()))AND(NULL))) ORDER BY (LOWER(DISTINCT '1517848955') IN ((((rt1.c4))>((rt1.c5))))) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM rt1 WHERE (-397967479) ORDER BY (LOWER(DISTINCT '1517848955') IN ((((rt1.c4))>((rt1.c5))))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (('1731612788' IN ()));
SELECT * FROM rt1 WHERE (((('1731612788' IN ()))AND(NULL))) ORDER BY (LOWER(DISTINCT '1517848955') IN ((((rt1.c4))>((rt1.c5))))) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM rt1 WHERE (-397967479) ORDER BY (LOWER(DISTINCT '1517848955') IN ((((rt1.c4))>((rt1.c5))))) ASC  NULLS FIRST;
SELECT ALL MAX(t0.c1) FROM t0 WHERE (COALESCE(DISTINCT (+ (t0.c2)), ((t0.c2) NOT NULL), x'f018ff', CAST(t0.c3 AS BLOB)));
SELECT DISTINCT MAX(t0.c1) FROM t0 WHERE (((COALESCE(DISTINCT (+ (t0.c2)), ((t0.c2) NOT NULL), x'f018ff', CAST(t0.c3 AS BLOB)))AND(TRIM(CAST(t0.c1 AS TEXT), LENGTH(t0.c1)))));
