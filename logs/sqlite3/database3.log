--java.lang.AssertionError: the size of the result sets mismatch (0 and 1)!
---- SELECT ALL * FROM t1 WHERE (CASE (((t1.c1, t1.c0, t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c1, 0.6137474060829725, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c1, t1.c0)))  WHEN CAST(t1.c1 AS REAL) THEN (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0))) WHEN ((t1.c0)<=(t1.c0)) THEN ((t1.c0)-(t1.c1)) WHEN ((t1.c0)>=(t1.c0)) THEN (NULL IN ()) ELSE (NOT (t1.c1)) END);
---- cardinality: 0
---- SELECT DISTINCT * FROM t1 WHERE (((CASE (((t1.c1, t1.c0, t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c1, 0.6137474060829725, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c1, t1.c0)))  WHEN CAST(t1.c1 AS REAL) THEN (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0))) WHEN ((t1.c0)<(t1.c0)) THEN ((t1.c0)-(t1.c1)) WHEN ((t1.c0)>(t1.c0)) THEN (NULL IN ()) ELSE (NOT (t1.c1)) END)AND(IFNULL((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))), CAST(t1.c0 AS REAL))))) LIMIT 1;
---- cardinality: 1
--	at sqlancer.ComparatorHelper.assumeResultSetsAreSubset(ComparatorHelper.java:126)
--	at sqlancer.sqlite3.oracle.SQLite3SubsetOracle.checkSubsetQuery(SQLite3SubsetOracle.java:242)
--	at sqlancer.sqlite3.oracle.SQLite3SubsetOracle.check(SQLite3SubsetOracle.java:109)
--	at sqlancer.ProviderAdapter.generateAndTestDatabase(ProviderAdapter.java:49)
--	at sqlancer.Main$DBMSExecutor.run(Main.java:323)
--	at sqlancer.Main$2.run(Main.java:507)
--	at sqlancer.Main$2.runThread(Main.java:485)
--	at sqlancer.Main$2.run(Main.java:475)
--	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
--	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
--	at java.base/java.lang.Thread.run(Thread.java:831)
---- Time: 2021/05/19 01:09:32
-- Database: database3
-- Database version: 3.34.0
-- seed value: 1621357771647
PRAGMA cache_size = 50000;
PRAGMA temp_store=MEMORY;
PRAGMA synchronous=off;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, +c4 BLOB , +c5 TEXT );
CREATE TEMPORARY TABLE t1 (c0 INTEGER , c1 REAL );
INSERT OR FAIL INTO t1(c0) VALUES (x'5bdf45');
UPDATE t1 SET c1 = NULL;
UPDATE OR REPLACE t1 SET c1 = 0Xffffffff8ab68553, c0 = -1624170603 WHERE ((CAST(t1.c0 AS BLOB)) NOTNULL);
ROLLBACK TRANSACTION;
UPDATE OR IGNORE t1 SET c0 = -1415981947, c0 = 0x6a043ce3;
UPDATE t1 SET (c0, c0, c1)=(0xffffffffab99d485, NULL, 0.1378758374089295) WHERE ((NOT (t1.c0)) IN ());
UPDATE OR FAIL t1 SET (c1, c1)=('-1415981947', x'1e') WHERE NULL;
PRAGMA temp.journal_mode = TRUNCATE;
END TRANSACTION;
INSERT OR FAIL INTO t1(c1) VALUES (213504008), ('-1967749805');
ANALYZE sqlite_master;
ANALYZE;
BEGIN DEFERRED TRANSACTION;
PRAGMA defer_foreign_keys = false;
UPDATE OR ROLLBACK t1 SET c0 = x'';
INSERT OR IGNORE INTO t1(c1) VALUES ('-1624170603');
INSERT OR ROLLBACK INTO t1 VALUES ('r', ''''), ('0.1378758374089295', '539426997'), ('', x'ea'), ('r', NULL), (NULL, 0.5568399481732258);
INSERT OR IGNORE INTO t1(c1, c0) VALUES ('539426997', '440482288'), (x'7c', 0.43560401409653293);
INSERT OR IGNORE INTO t1(c1, c0) VALUES ('2054253131', '*'), (NULL, '-1028690489');
ROLLBACK TRANSACTION;
REINDEX;
PRAGMA application_id = 1315069072439424791;
CREATE INDEX IF NOT EXISTS i91 ON t1(CASE WHEN ((c1) NOT NULL) THEN c1 ELSE c0 COLLATE BINARY END COLLATE NOCASE ASC,CASE WHEN ((NULL) NOT NULL) THEN CASE c0  WHEN c1 THEN c0 END ELSE UPPER(c0) END COLLATE RTRIM ASC);
INSERT OR ROLLBACK INTO t1(c0) VALUES ('-1028690489');
UPDATE t1 SET c0 = 0.43560401409653293, c0 = 'mDg\+jrQ' WHERE ((NULL) BETWEEN (((t1.c0)||(t1.c0))) AND ((- (t1.c0))));
UPDATE t1 SET c1 = '淇V', c1 = 0.5568399481732258;
UPDATE OR IGNORE t1 SET (c0, c1, c1)=(x'f1', NULL, 0.43560401409653293);
INSERT OR ABORT INTO t1(c1, c0) VALUES (x'', x'9a'), ('830816951', (((((('-1028690489') NOT BETWEEN (1.778662627E9) AND (NULL)))OR((+ (NULL)))))OR(NULL)));
CREATE INDEX IF NOT EXISTS i18 ON t1((((((+ (c0)))AND(c0)))AND((((c1))<=((c0))))),(((c1 IN (x'')))<=(CAST(c0 AS INTEGER)))) WHERE ((((c0, c1, c1, c1)) NOT BETWEEN ((c1, NULL, c0, c1)) AND ((c1, c1, c1, c0))) IN ());
PRAGMA main.cache_spill;
BEGIN  TRANSACTION;
PRAGMA temp.stats;
REINDEX;
ANALYZE i91;
INSERT OR ABORT INTO t1(c0) VALUES (0.9520305877013687) ON CONFLICT DO NOTHING;
INSERT OR FAIL INTO t1(c1) VALUES (x'7eee');
BEGIN IMMEDIATE TRANSACTION;
PRAGMA wal_checkpoint(RESTART);
PRAGMA checkpoint_fullfsync = true;
INSERT OR IGNORE INTO t1(c0) VALUES (0.7466536057175113);
UPDATE OR IGNORE t1 SET (c1)=('') WHERE CAST((NOT (t1.c1)) AS INTEGER);
COMMIT TRANSACTION;
COMMIT;
UPDATE t1 SET (c1)=(x'0d') WHERE ((t1.c1 COLLATE RTRIM)AND(((t1.c0)*(t1.c0))));
UPDATE OR IGNORE t1 SET (c1)=('[78''Xu>xJ') WHERE ((((~ ('')), x'd6'))<=((CHANGES(), t1.c1)));
INSERT OR ABORT INTO t1(c1) VALUES ('G%Hs!eb璖R'), (NULL);
PRAGMA locking_mode;
INSERT OR REPLACE INTO t1(c1) VALUES ('_K' COLLATE NOCASE), (1.612608662E9);
DELETE FROM sqlite_stat1;
INSERT OR ABORT INTO t1 VALUES (0.16259935654182844, 0.33403498781495977), (NULL, CASE x'7686f1d9'  WHEN HEX(NULL) THEN ((100929609)OR('zgftH')) WHEN ((x'ca')<>(-1.624170603E9)) THEN (('_qH*')&(x'')) END);
PRAGMA temp.secure_delete;
UPDATE OR IGNORE t1 SET c0 = x'0b', c0 = x'14cd' WHERE t1.c1;
INSERT OR IGNORE INTO t1(c0) VALUES ('1383623473'), (x'');
UPDATE t1 SET (c0)=(x'cebd') WHERE CAST(((((t1.c1)AND(x'')))AND(t1.c0)) AS INTEGER);
PRAGMA wal_checkpoint(PASSIVE);
PRAGMA locking_mode = NORMAL;
ROLLBACK TRANSACTION;
INSERT OR ROLLBACK INTO t1(c1, c0) VALUES (440482288, 0xd604867), ('-1408692428', x'ad7fbfdd'), ('-278721965', 0.4760103419149396);
INSERT OR FAIL INTO t1(c0) VALUES (0.9520305877013687), (0.25329335675993025);
PRAGMA auto_vacuum = FULL;
PRAGMA auto_vacuum;
END;
UPDATE t1 SET (c1)=(NULL) WHERE rtreenode((NOT (t1.c1)), (~ (t1.c0)));
UPDATE OR FAIL t1 SET (c1)=(NULL) WHERE (((x'') NOT BETWEEN (t1.c1) AND (t1.c1)) IN ());
UPDATE OR IGNORE t1 SET c1 = 0Xffffffff83037a86;
UPDATE OR IGNORE t1 SET (c0)=('9S*I5') WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) IN (TRIM(t1.c0, t1.c0), t1.c1 COLLATE RTRIM));
UPDATE OR REPLACE t1 SET c0 = '-716591780', c0 = x'';
ROLLBACK TRANSACTION;
ROLLBACK TRANSACTION;
UPDATE OR IGNORE t1 SET c1 = x'40ac', c0 = NULL, c0 = NULL WHERE SQLITE_VERSION();
INSERT OR ROLLBACK INTO t1(c0, c1) VALUES (NULL, x'7b');
INSERT OR IGNORE INTO t1(c1) VALUES (0.20017413120736938);
ROLLBACK TRANSACTION;
BEGIN  TRANSACTION;
PRAGMA main.shrink_memory;
UPDATE OR IGNORE t1 SET c1 = 0Xf8e765f, c1 = 0.7960258449854591, c0 = '䡧{' WHERE ((((((((t1.c0) ISNULL))AND(t1.c0 COLLATE RTRIM)))OR((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0)) AND ((t1.c1, t1.c0, t1.c1))))))AND(((((t1.c1)AND(t1.c1)))AND(t1.c0))));
INSERT OR FAIL INTO t1 VALUES (NULL, 1956082742), ('-1997783105', NULL), ((((CASE x'37'  WHEN '0.7466536057175113' THEN 0Xffffffffdb2b0a3b WHEN -1408692428 THEN 'S~]h-PMl%' WHEN 0.6602283942757515 THEN NULL WHEN x'cf' THEN 'N)+흃窆(' ELSE 0X52786b31 END))>((CASE WHEN 0.31304786534508133 THEN x'd2' WHEN 2.24413799E8 THEN -832560007 WHEN NULL THEN NULL END))), NULL), (NULL, NULL), ('Xs&GD7|1', '-2096924026');
REINDEX BINARY;
PRAGMA cell_size_check = false;
INSERT OR IGNORE INTO t1 VALUES (NULL, 0.3069049362694324);
INSERT OR IGNORE INTO t1 VALUES (NULL, -1997783105);
UPDATE t1 SET c1 = 704982203, c1 = '1408534150', c1 = 2.13504008E8, c1 = -2.096924026E9 WHERE (CASE WHEN t1.c1 THEN t1.c0 END IN (0.3069049362694324));
INSERT OR REPLACE INTO t1(c1, c0) VALUES (NULL, '-1176461747');
UPDATE OR IGNORE t1 SET c0 = 0.8878775773572767, c0 = x'1a74', c0 = NULL;
INSERT OR FAIL INTO t1(c1) VALUES (NULL), ('D㽸k(ZOM麟H');
UPDATE t1 SET (c0)=(0.10859642137339032);
PRAGMA main.journal_mode;
UPDATE t1 SET c1 = 0Xffffffffb3bff328, c0 = -1452555701;
PRAGMA temp.short_column_names;
ROLLBACK TRANSACTION;
PRAGMA reverse_unordered_selects;
INSERT OR IGNORE INTO t1(c1, c0) VALUES (x'', '-832560007'), ('w}*', 'v');
INSERT OR ABORT INTO t1(c0, c1) VALUES (0.058689931961938946, '224413799');
ANALYZE sqlite_master;
UPDATE OR IGNORE t1 SET c0 = x'ea', c0 = '1232394875' WHERE (~ (CAST(t1.c0 AS BLOB)));
INSERT OR IGNORE INTO t1(c0, c1) VALUES ('-747868847', x'e2b736');
UPDATE t1 SET c0 = x'', c0 = 0x6a043ce3, c1 = '-278721965' WHERE TYPEOF(DISTINCT (t1.c1 IN ()));
UPDATE OR IGNORE t1 SET (c1)=(NULL);
ANALYZE main;
UPDATE OR IGNORE t1 SET c0 = 853913989, c0 = 1.00929609E8 WHERE CAST((- (t1.c1)) AS TEXT);
ROLLBACK TRANSACTION;
END;
ROLLBACK TRANSACTION;
-- SELECT ALL * FROM t1 WHERE (CASE (((t1.c1, t1.c0, t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c1, 0.6137474060829725, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c1, t1.c0)))  WHEN CAST(t1.c1 AS REAL) THEN (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0))) WHEN ((t1.c0)<=(t1.c0)) THEN ((t1.c0)-(t1.c1)) WHEN ((t1.c0)>=(t1.c0)) THEN (NULL IN ()) ELSE (NOT (t1.c1)) END);
-- cardinality: 0
-- SELECT DISTINCT * FROM t1 WHERE (((CASE (((t1.c1, t1.c0, t1.c0, t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c1, 0.6137474060829725, t1.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c1, t1.c0)))  WHEN CAST(t1.c1 AS REAL) THEN (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c0))) WHEN ((t1.c0)<(t1.c0)) THEN ((t1.c0)-(t1.c1)) WHEN ((t1.c0)>(t1.c0)) THEN (NULL IN ()) ELSE (NOT (t1.c1)) END)AND(IFNULL((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))), CAST(t1.c0 AS REAL))))) LIMIT 1;
-- cardinality: 1
