-- Time: 2021/05/19 01:09:34
-- Database: database12
-- Database version: 3.34.0
-- seed value: 1621357771656
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 REAL , +c4 INT ); -- 2ms;
PRAGMA foreign_keys; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c0, c3, c2) VALUES (0.2654944958319284, '0.2654944958319284', 'Ii	kRoO', x'6e2259c590', 'q'), ('\*C|h,NN', x'', x'26', 185483481, x''), (185483481, 0.21138158116609207, NULL, x'd1', '185483481'), ('yW	?-)', 0xfffffffffb694120, '-1663045504', '2056680345', 'y9'), (x'941c34', 0Xb0e40d9, x'0739', NULL, 'M'); -- 1ms;
CREATE TEMPORARY VIEW v0(c0, c1) AS SELECT DISTINCT (((- (rt0.c4)))<<(TOTAL_CHANGES())), (((rt0.c1, '2056680345', x'9bba', ((rt0.c4)LIKE(rt0.c2))))<((((rt0.c3)%(rt0.c0)), x'', rt0.c4 COLLATE NOCASE, ((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c2))))) FROM rt0 WHERE (CASE ((('', 'D', -1.1138972E8)) NOT BETWEEN ((x'', NULL, x'')) AND ((-111389720, 'CA*j&C', 'L')))  WHEN CHAR(0.7565835635306349, 1e500) THEN (- (0.7136814299807567)) WHEN (((x'')) BETWEEN ((x'b6')) AND ((NULL))) THEN ((NULL) ISNULL) END); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('y'), (0.7136814299807567); -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c3 = NULL WHERE ((rt0.c1) BETWEEN (((rt0.c0)<>(rt0.c2))) AND ((- (rt0.c0)))); -- 0ms;
UPDATE rt0 SET c4 = '^괠', c0 = -1760908000 WHERE TRIM(DISTINCT rt0.c3 COLLATE BINARY, (((rt0.c2, rt0.c2))>((rt0.c4, rt0.c3)))); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c3, c4, c0) VALUES ('-0.0', 0.6164073611529854, '', NULL, x'9f'), (1143641029, 0.4050170447747563, x'', NULL, 0xffffffff970aad20); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2, c3, c4) VALUES (x'05', '153344800', 0x923db20, '叨', '8'), (0xffffffffe7a3d95c, 0.8529298698575656, x'', '叨[8t', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES ('
'); -- 0ms;
UPDATE OR REPLACE rt0 SET c0 = '153344800', c2 = x'', c4 = 0.7136814299807567; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c0, c0, c1)=(NULL, x'', NULL); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2, c4)=(0.7565835635306349, -76988128) WHERE LIKELIHOOD(rt0.c4 COLLATE NOCASE, (('') NOT BETWEEN (rt0.c3) AND (rt0.c3))); -- 0ms;
UPDATE OR IGNORE rt0 SET c1 = '-1663045504'; -- 0ms;
INSERT OR FAIL INTO rt0(c4, c1) VALUES (',E}', NULL), ('R', 0.14480232466435417); -- 1ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL), (0.9395383977162013); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES ('-1663045504', '2{?|()0', x'9c90', x'49a6ae', x'1eee25'), (0.6164073611529854, NULL, 0.929234403159568, NULL, '0.8529298698575656'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c4, c0, c1, c2) VALUES (NULL, x'ce', NULL, '1143641029', NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES ('-1663045504', 0.7565835635306349, x'', NULL, '~h'), (x'7f', NULL, -1039248594, NULL, '2Q\hm}'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3, c4, c2) VALUES (x'4b', NULL, x'', '-1240337007'), (NULL, '2056680345', x'd99b', NULL), (NULL, '2138942786', NULL, '^괠'); -- 1ms;
UPDATE rt0 SET (c1, c1, c1, c4)=(x'', x'89', 'LQX', ''); -- 1ms;
ANALYZE rt0; -- 0ms;
UPDATE OR FAIL rt0 SET (c0)=(x'e9d1'); -- 0ms;
UPDATE rt0 SET (c0, c3)=(0x602a9fa4, '<SQ') WHERE ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0)))=(NULL)); -- 0ms;
UPDATE OR FAIL rt0 SET c3 = 0.14480232466435417, c0 = 0X923db20 WHERE ((0.14480232466435417)OR(((rt0.c3) IS FALSE))); -- 1ms;
UPDATE OR REPLACE rt0 SET c0 = x'41', c1 = '153344800' WHERE ((((rt0.c4)<<(rt0.c2))) ISNULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c1 = NULL, c4 = 'T', c4 = x'' WHERE (rt0.c4 IN (((rt0.c4)LIKE(rt0.c3)))); -- 0ms;
UPDATE rt0 SET c1 = x'296f', c2 = NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=('-76988128'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c2) VALUES ('^m', '-1663045504', NULL); -- 1ms;
UPDATE OR IGNORE rt0 SET c2 = NULL; -- 2ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR ABORT rt0 SET c2 = '#[u5M	H'; -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c1, c4) VALUES (NULL, NULL, 'mgHM'); -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (0.19429088971119657), (0.5728833813842948), (57870782); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c4, c3) VALUES (0.4050170447747563, NULL, x'24949da6', 'o{^'), (5.7870782E7, -1.7976931348623157E308, 0.2925014821708145, NULL), (0.39515926690291703, '', '', NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c2, c1) VALUES (x'', 0.5543237427327017, '1523104592'), (0Xffffffff9c840f54, 0xffffffffc20e532e, 0.8468209008184995), (x'88', NULL, '2138942786'), (NULL, 'f', 0.09115304906558863); -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c3, c2) VALUES (x'd13e9d', 0.015903577225286902, -388515569); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c4, c3, c1) VALUES (573081910, x'60', '^HX)X陎', NULL, NULL), ('1523104592', 635499969, x'', 0.2654944958319284, 1.533448E8), (NULL, x'cd', 'K', NULL, 0.6494961136280326), (0x39c070a1, NULL, -1.039248594E9, x'', NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
COMMIT; -- 1ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1, c4, c2) VALUES (NULL, 0.5543237427327017, NULL, -353331634), (9.68913057E8, '706016084', x'42', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1, c0) VALUES (NULL, NULL, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_spill = true; -- 1ms;
UPDATE OR IGNORE rt0 SET (c4, c2)=(0.5821207094698443, NULL) WHERE (- (rt0.c3)) COLLATE BINARY; -- 1ms;
UPDATE rt0 SET c1 = NULL; -- 2ms;
UPDATE OR IGNORE rt0 SET (c3, c3, c0)=('-771383651', NULL, 0.015903577225286902); -- 2ms;
UPDATE OR IGNORE rt0 SET (c3)=('-1482694246'); -- 1ms;
UPDATE OR ABORT rt0 SET c0 = 0.3916842090229713 WHERE (((((((((((rt0.c0 IN (rt0.c2, rt0.c4)))OR(rt0.c3 COLLATE RTRIM)))OR(((rt0.c2)>=(rt0.c1)))))OR(((rt0.c3) IS FALSE))))OR(((rt0.c0)||(rt0.c0)))))OR((rt0.c2 IN (rt0.c4)))); -- 0ms;
UPDATE rt0 SET c4 = 1394209520; -- 1ms;
INSERT OR ROLLBACK INTO rt0 VALUES ('0.5821207094698443', '-1284205761', x'17893b', '-815973134', 0.26558105007963395), (0.21138158116609207, ' ?xj97', NULL, -1.760908E9, -0.0), (NULL, (((+ (NULL))) BETWEEN (NULL COLLATE BINARY) AND (LIKELIHOOD(-1203225677, x'09'))), '-408692388', 'G', NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c0, c2) VALUES (x'', -763501945, NULL); -- 1ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('-1669066924') WHERE ((((rt0.c3) NOTNULL))-(((rt0.c2)<(rt0.c4)))); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.015903577225286902) WHERE 0.46482869657360426; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c4 = 'I', c1 = x''; -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
END; -- 0ms;
REINDEX  rt0; -- 1ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR ABORT rt0 SET (c1)=(0.2925014821708145); -- 0ms;
UPDATE rt0 SET (c2)=('.(BK|') WHERE (~ (((((rt0.c0)OR(rt0.c0)))AND(1723524184)))); -- 1ms;
UPDATE rt0 SET c4 = NULL, c0 = 0X602a9fa4, c0 = '叨[8t' WHERE (((rt0.c2) ISNULL) IN ()); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c3) VALUES ((((((((('0.7136814299807567')||(-1284205761)))OR((- ('5r(')))))OR(NULL)))OR((('1360376831') BETWEEN (0.15727330867489464) AND (0xffffffffe6c54fe4)))), 0xffffffff9f0d1694), ('635499969', 0.09115304906558863), ('261358840', '968913057'); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0 = x'34'; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c4)=('153344800', 0.465303240673302); -- 1ms;
INSERT OR ABORT INTO rt0(c2, c0, c3, c1) VALUES (x'3586d4', x'', 'l?!|.1QN[z]', 0x561d085c), (-1797663919, 0xffffffffeaf0964e, NULL, 'Hhn'); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (x'44'), ('q'); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c4, c0) VALUES ('-1669066924', '-111389720', x''), ('0.465303240673302', x'ef', '0.3916842090229713'); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c2) VALUES ('', -1.663045504E9); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c4) VALUES ('-1482694246', 1360376831); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c4, c1, c0) VALUES (x'f20e', x'3061', 0.4225964275324794, x'', NULL), (0.5152802560125314, 0.20253496742302102, NULL, x'2b2777', 0.15727330867489464), ('1557454986', '-1663045504', '0.5152802560125314', -1.284205761E9, '1704698143'), (2.056680345E9, x'', -1.203225677E9, 'd妑', NULL), (x'dccf', '~h', NULL, 1.704698143E9, ((x'a97b')IS(NULL COLLATE BINARY))); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2, c4, c3) VALUES (x'1000dc', '1360376831', 0.015903577225286902, 0.3978808098041813), (0.4742589690874204, 0X5cd4e08a, 1523104592, NULL); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c3 = -1142264660, c0 = '7eKHxaR', c4 = NULL; -- 0ms;
UPDATE OR IGNORE rt0 SET c1 = 0Xffffffffce768da2, c0 = '7'; -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c1, c2, c0) VALUES ('>c࡜', 1092929578, 7.06016084E8, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c0, c3) VALUES (x'bb3e', NULL, NULL, '1613406116'), (x'9e', 1.39420952E9, x'47af', NULL); -- 1ms;
UPDATE rt0 SET c4 = 0.5465884064161508, c4 = x'f09ee606'; -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6494961136280326) IS FALSE))<(x'')); -- 0ms;
UPDATE rt0 SET (c3, c0, c2)=('-771383651', '1940114623', '635499969'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4, c1)=(x'', x'5e'); -- 1ms;
PRAGMA temp.cache_spill; -- 0ms;
INSERT OR ABORT INTO rt0(c4) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4, c4)=('', NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c3) VALUES (NULL), (x'42'); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0, c2) VALUES (x'', 0.9764418409055422, x''); -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
UPDATE rt0 SET (c1, c3)=(0x442a93c5, x'cdae'); -- 0ms;
UPDATE OR REPLACE rt0 SET (c2, c0)=(NULL, '-275123778'); -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT ALL * FROM rt0 WHERE (CAST(((((((rt0.c0)AND(rt0.c2)))AND(x'')))AND(rt0.c2)) AS BLOB));
SELECT DISTINCT * FROM rt0 WHERE (((CAST(((((((rt0.c0)AND(rt0.c2)))AND(x'')))AND(rt0.c2)) AS BLOB))AND((((rt0.c0)) NOT BETWEEN (((((((((((('2102992548')OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)))) AND ((((rt0.c1) IS FALSE))))))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (NULL))) IS TRUE), (((((~ (rt0.c4)))AND(((((((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c4)))AND('Ii	kRoO')))OR(rt0.c4)))))AND((((rt0.c1))>=(('
#'))))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (NULL))) IS TRUE), (((((~ (rt0.c4)))AND(((((((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c4)))AND('Ii	kRoO')))OR(rt0.c4)))))AND((((rt0.c1))>=(('
#'))))) LIMIT 3;
SELECT ALL * FROM rt0 WHERE (CAST(((((((rt0.c0)AND(rt0.c2)))AND(x'')))AND(rt0.c2)) AS BLOB));
SELECT DISTINCT * FROM rt0 WHERE (((CAST(((((((rt0.c0)AND(rt0.c2)))AND(x'')))AND(rt0.c2)) AS BLOB))AND((((rt0.c0)) NOT BETWEEN (((((((((((('2102992548')OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)))) AND ((((rt0.c1) IS FALSE))))))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (NULL))) IS TRUE), (((((~ (rt0.c4)))AND(((((((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c4)))AND('Ii	kRoO')))OR(rt0.c4)))))AND((((rt0.c1))>=(('
#'))))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (NULL))) IS TRUE), (((((~ (rt0.c4)))AND(((((((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c4)))AND('Ii	kRoO')))OR(rt0.c4)))))AND((((rt0.c1))>=(('
#'))))) LIMIT 3;
SELECT MAX(rt0.c0) FROM rt0 WHERE (((0.6382257372552298) BETWEEN (((('-2110560773', rt0.c1, rt0.c1)) BETWEEN ((NULL, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c4, rt0.c1)))) AND (rt0.c2)));
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (((((0.6382257372552298) BETWEEN (((('-2110560773', rt0.c1, rt0.c1)) BETWEEN ((NULL, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c4, rt0.c1)))) AND (rt0.c2)))AND((- (CAST(rt0.c2 AS NUMERIC)))))) LIMIT 0x0 INTERSECT SELECT ALL MAX(rt0.c0) FROM rt0 WHERE ((((((rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c3)))) NOT NULL)) LIMIT 0;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)-(rt0.c3)))||(((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((rt0.c3)-(rt0.c3)))||(((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))))AND((~ (rt0.c2)) COLLATE RTRIM))) ORDER BY ((CAST(0x7f7dad42 AS TEXT))!=((((rt0.c0))>=((rt0.c0))))) ASC, CAST((NOT (rt0.c4)) AS TEXT)  NULLS FIRST, rt0.c4  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4) ISNULL) COLLATE NOCASE);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((rt0.c4) ISNULL) COLLATE NOCASE) ORDER BY ((((rt0.c1) NOTNULL))>=(((rt0.c0) ISNULL))) DESC, (((+ (rt0.c2)))IS NOT(((rt0.c3) NOTNULL))) LIMIT 0x0;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)), CAST(rt0.c3 AS INTEGER)))=((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)), rt0.c4 COLLATE RTRIM)))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END)|(TRIM(DISTINCT rt0.c0, rt0.c3))) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)), CAST(rt0.c3 AS INTEGER)))=((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)), rt0.c4 COLLATE RTRIM)))) ORDER BY LIKELIHOOD(DISTINCT x'4cbcf10c', (rt0.c1 IN (0.9837189665320089))), ((((((((rt0.c3 COLLATE RTRIM)OR(((rt0.c4)>>(rt0.c3)))))OR(((((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c3)))OR(x'')))))AND(CAST(rt0.c0 AS TEXT))))OR(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 WHEN x'23' THEN rt0.c3 WHEN rt0.c3 THEN 0.6060658450883702 ELSE rt0.c4 END)), ((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c1))) IS FALSE) ASC, ((TYPEOF(DISTINCT rt0.c2)) BETWEEN (rt0.c1) AND (CASE WHEN rt0.c0 THEN 0.8174250210496518 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END))  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c3)))AND('-423276572')) AS BLOB)) ORDER BY LIKELIHOOD(DISTINCT x'4cbcf10c', (rt0.c1 IN (0.9837189665320089))), ((((((((rt0.c3 COLLATE RTRIM)OR(((rt0.c4)>>(rt0.c3)))))OR(((((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c3)))OR(x'')))))AND(CAST(rt0.c0 AS TEXT))))OR(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 WHEN x'23' THEN rt0.c3 WHEN rt0.c3 THEN 0.6060658450883702 ELSE rt0.c4 END)), ((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c1))) IS FALSE) ASC, ((TYPEOF(DISTINCT rt0.c2)) BETWEEN (rt0.c1) AND (CASE WHEN rt0.c0 THEN 0.8174250210496518 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((NOT (TRIM(NULL))));
SELECT ALL * FROM rt0 WHERE ((NOT (TRIM(NULL)))) ORDER BY rt0.c2 LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((NOT (TRIM(NULL))));
SELECT ALL * FROM rt0 WHERE ((NOT (TRIM(NULL)))) ORDER BY rt0.c2 LIMIT 0X0;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) ORDER BY (((rt0.c2, rt0.c3)) BETWEEN ((NULL, rt0.c4)) AND ((rt0.c0, rt0.c0))) COLLATE BINARY  NULLS FIRST, NULL  NULLS LAST;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))AND((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c2)) IN ((((rt0.c2, rt0.c3, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c4)))))))) ORDER BY (((rt0.c2, rt0.c3)) BETWEEN ((NULL, rt0.c4)) AND ((rt0.c0, rt0.c0))) COLLATE BINARY  NULLS FIRST, NULL  NULLS LAST LIMIT 0X2;
SELECT * FROM rt0 WHERE ((((rt0.c0)AND(rt0.c4)) IN ())) ORDER BY IFNULL((- (-1010016360)), ((((rt0.c4)AND(1092929578)))OR(rt0.c2)))  NULLS FIRST, x'a1dfe4', CAST(CAST(rt0.c4 AS TEXT) AS TEXT);
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)AND(rt0.c4)) IN ())) ORDER BY ('bk' IN (CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END, ((rt0.c1)|(rt0.c4)))) DESC;
SELECT * FROM rt0 WHERE ((((rt0.c0)AND(rt0.c4)) IN ())) ORDER BY IFNULL((- (-1010016360)), ((((rt0.c4)AND(1092929578)))OR(rt0.c2)))  NULLS FIRST, x'a1dfe4', CAST(CAST(rt0.c4 AS TEXT) AS TEXT);
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)AND(rt0.c4)) IN ())) ORDER BY ('bk' IN (CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END, ((rt0.c1)|(rt0.c4)))) DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)<<(rt0.c1)) IN (NULLIF(DISTINCT rt0.c4, NULL), (((rt0.c3, '968913057')) NOT BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c3))), (((rt0.c2, 0xfffffffffdf761d0))<=((rt0.c1, rt0.c0)))))) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)<<(rt0.c1)) IN (NULLIF(DISTINCT rt0.c4, NULL), (((rt0.c3, '968913057')) NOT BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c3)))))) ORDER BY (((x'ac8d') NOT BETWEEN (rt0.c3) AND (x'875041')) IN (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)))AND(-889791948)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)<<(rt0.c1)) IN (NULLIF(DISTINCT rt0.c4, NULL), (((rt0.c3, '968913057')) NOT BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c3))), (((rt0.c2, 0xfffffffffdf761d0))<=((rt0.c1, rt0.c0)))))) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)<<(rt0.c1)) IN (NULLIF(DISTINCT rt0.c4, NULL), (((rt0.c3, '968913057')) NOT BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c3)))))) ORDER BY (((x'ac8d') NOT BETWEEN (rt0.c3) AND (x'875041')) IN (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)))AND(-889791948)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) LIMIT 0;
SELECT * FROM rt0 WHERE (x'f7c0');
SELECT ALL * FROM rt0 WHERE (x'f7c0') ORDER BY (((rt0.c4, rt0.c2, rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c1)IS(1.360376831E9)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')), UPPER(DISTINCT rt0.c4), rt0.c2, (NOT (rt0.c1)))) AND ((TRIM(DISTINCT rt0.c4), ('0.6164073611529854' IN (rt0.c3, rt0.c1)), (rt0.c4 IN ()), ((rt0.c4) IS FALSE), ((rt0.c3)<<(rt0.c1)))))  NULLS FIRST, '-1010016360' DESC LIMIT 0x1 INTERSECT SELECT ALL * FROM rt0 WHERE ((('-1645278060' COLLATE NOCASE)<=(((rt0.c2)LIKE(rt0.c1))))) ORDER BY (((rt0.c4, rt0.c2, rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c1)IS(1.360376831E9)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')), UPPER(DISTINCT rt0.c4), rt0.c2, (NOT (rt0.c1)))) AND ((TRIM(DISTINCT rt0.c4), ('0.6164073611529854' IN (rt0.c3, rt0.c1)), (rt0.c4 IN ()), ((rt0.c4) IS FALSE), ((rt0.c3)<<(rt0.c1)))))  NULLS FIRST, '-1010016360' DESC LIMIT 0X1;
SELECT * FROM rt0 WHERE (x'f7c0');
SELECT ALL * FROM rt0 WHERE (x'f7c0') ORDER BY (((rt0.c4, rt0.c2, rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c1)IS(1.360376831E9)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')), UPPER(DISTINCT rt0.c4), rt0.c2, (NOT (rt0.c1)))) AND ((TRIM(DISTINCT rt0.c4), ('0.6164073611529854' IN (rt0.c3, rt0.c1)), (rt0.c4 IN ()), ((rt0.c4) IS FALSE), ((rt0.c3)<<(rt0.c1)))))  NULLS FIRST, '-1010016360' DESC LIMIT 0x1 INTERSECT SELECT ALL * FROM rt0 WHERE ((('-1645278060' COLLATE NOCASE)<=(((rt0.c2)LIKE(rt0.c1))))) ORDER BY (((rt0.c4, rt0.c2, rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c1)IS(1.360376831E9)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')), UPPER(DISTINCT rt0.c4), rt0.c2, (NOT (rt0.c1)))) AND ((TRIM(DISTINCT rt0.c4), ('0.6164073611529854' IN (rt0.c3, rt0.c1)), (rt0.c4 IN ()), ((rt0.c4) IS FALSE), ((rt0.c3)<<(rt0.c1)))))  NULLS FIRST, '-1010016360' DESC LIMIT 0X1;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((((~ (rt0.c3))) NOTNULL));
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE ((((((~ (rt0.c3))) NOTNULL))AND(((((((rt0.c3)AND(CASE rt0.c0  WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c1 END)))OR((+ (x'')))))OR(((((rt0.c0)AND(rt0.c3)))AND('-524230272'))))))) ORDER BY (((rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM, (- (rt0.c1)))) AND ((((((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)), CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 END))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS BLOB) AS REAL)) ORDER BY ((SQLITE_SOURCE_ID())OR(((rt0.c3)LIKE(rt0.c1)))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(CAST(rt0.c3 AS BLOB) AS REAL))AND((('Q')>(((((rt0.c4)AND(rt0.c1)))AND(rt0.c3))))))) ORDER BY ((SQLITE_SOURCE_ID())OR(((rt0.c3)LIKE(rt0.c1)))) ASC LIMIT 0;
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS BLOB) AS REAL)) ORDER BY ((SQLITE_SOURCE_ID())OR(((rt0.c3)LIKE(rt0.c1)))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(CAST(rt0.c3 AS BLOB) AS REAL))AND((('Q')>(((((rt0.c4)AND(rt0.c1)))AND(rt0.c3))))))) ORDER BY ((SQLITE_SOURCE_ID())OR(((rt0.c3)LIKE(rt0.c1)))) ASC LIMIT 0;
SELECT * FROM rt0 WHERE (((((rt0.c2)IS NOT(rt0.c4))) IS FALSE)) ORDER BY CAST(((rt0.c1)OR(rt0.c4)) AS INTEGER), (((NOT (rt0.c0)))<(CAST(rt0.c0 AS INTEGER))) DESC;
SELECT * FROM rt0 WHERE (((((rt0.c2)IS NOT(rt0.c4))) IS FALSE)) ORDER BY CAST(((rt0.c1)OR(rt0.c4)) AS INTEGER), (((NOT (rt0.c0)))<(CAST(rt0.c0 AS INTEGER))) DESC LIMIT 1;
SELECT * FROM rt0 WHERE (((((rt0.c2)IS NOT(rt0.c4))) IS FALSE)) ORDER BY CAST(((rt0.c1)OR(rt0.c4)) AS INTEGER), (((NOT (rt0.c0)))<(CAST(rt0.c0 AS INTEGER))) DESC;
SELECT * FROM rt0 WHERE (((((rt0.c2)IS NOT(rt0.c4))) IS FALSE)) ORDER BY CAST(((rt0.c1)OR(rt0.c4)) AS INTEGER), (((NOT (rt0.c0)))<(CAST(rt0.c0 AS INTEGER))) DESC LIMIT 1;
SELECT MIN(rt0.c1) FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND((rt0.c4 COLLATE BINARY IN ((((rt0.c0, rt0.c2, rt0.c0))<((x'c70e', rt0.c3, rt0.c2))), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) ORDER BY (NOT (rt0.c3 COLLATE NOCASE)) ASC LIMIT 1;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN rt0.c1 WHEN CAST(rt0.c1 AS BLOB) THEN NULL WHEN x'' THEN CASE WHEN 0.4742589690874204 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END WHEN rt0.c0 THEN rt0.c2 END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN rt0.c1 WHEN CAST(rt0.c1 AS BLOB) THEN NULL WHEN x'' THEN CASE WHEN 0.4742589690874204 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END WHEN rt0.c0 THEN rt0.c2 END) LIMIT 3;
SELECT ALL * FROM rt0 WHERE (TRIM(((rt0.c0)&(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)) ORDER BY ((((NULL) NOT BETWEEN ('sB') AND (rt0.c2)))<<((('-815973134') IS FALSE)))  NULLS LAST, CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END THEN ((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)) END, ((CASE WHEN rt0.c4 THEN rt0.c2 END) IS TRUE)  NULLS LAST, json_array((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)));
SELECT DISTINCT * FROM rt0 WHERE (TRIM(((rt0.c0)&(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)) ORDER BY ((((NULL) NOT BETWEEN ('sB') AND (rt0.c2)))<<((('-815973134') IS FALSE)))  NULLS LAST, CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END THEN ((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)) END, ((CASE WHEN rt0.c4 THEN rt0.c2 END) IS TRUE)  NULLS LAST, json_array((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)));
SELECT ALL * FROM rt0 WHERE (TRIM(((rt0.c0)&(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)) ORDER BY ((((NULL) NOT BETWEEN ('sB') AND (rt0.c2)))<<((('-815973134') IS FALSE)))  NULLS LAST, CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END THEN ((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)) END, ((CASE WHEN rt0.c4 THEN rt0.c2 END) IS TRUE)  NULLS LAST, json_array((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)));
SELECT DISTINCT * FROM rt0 WHERE (TRIM(((rt0.c0)&(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)) ORDER BY ((((NULL) NOT BETWEEN ('sB') AND (rt0.c2)))<<((('-815973134') IS FALSE)))  NULLS LAST, CASE WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END THEN ((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)) END, ((CASE WHEN rt0.c4 THEN rt0.c2 END) IS TRUE)  NULLS LAST, json_array((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)));
SELECT * FROM rt0 WHERE (((((rt0.c0)>=(rt0.c4))) NOT BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c0))) AND (((((((((-763501945)OR(rt0.c2)))OR('-1369374169')))AND(rt0.c0)))OR(rt0.c3)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)>=(rt0.c4))) NOT BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c0))) AND (((((((((0Xffffffffd27de287)OR(rt0.c2)))OR('-1369374169')))AND(rt0.c0)))OR(rt0.c3)))))AND(((rt0.c3) IS FALSE)))) ORDER BY ((((((rt0.c3 COLLATE NOCASE)AND((rt0.c1 IN ()))))AND(((rt0.c2)IS NOT(rt0.c0)))))OR((((rt0.c0, rt0.c3))>((rt0.c2, rt0.c0))))) ASC  NULLS LAST, (((('*UF-') IS TRUE))IS(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt0 WHERE (((((rt0.c0)>=(rt0.c4))) NOT BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c0))) AND (((((((((-763501945)OR(rt0.c2)))OR('-1369374169')))AND(rt0.c0)))OR(rt0.c3)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)>=(rt0.c4))) NOT BETWEEN ((rt0.c1 IN (rt0.c2, rt0.c0))) AND (((((((((0Xffffffffd27de287)OR(rt0.c2)))OR('-1369374169')))AND(rt0.c0)))OR(rt0.c3)))))AND(((rt0.c3) IS FALSE)))) ORDER BY ((((((rt0.c3 COLLATE NOCASE)AND((rt0.c1 IN ()))))AND(((rt0.c2)IS NOT(rt0.c0)))))OR((((rt0.c0, rt0.c3))>((rt0.c2, rt0.c0))))) ASC  NULLS LAST, (((('*UF-') IS TRUE))IS(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))!=(rt0.c3)));
SELECT * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))<>(rt0.c3)))AND(rt0.c0))) LIMIT 0X1;
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))!=(rt0.c3)));
SELECT * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))<>(rt0.c3)))AND(rt0.c0))) LIMIT 0X1;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4)OR(rt0.c1)))OR(NULL)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c1)))OR(NULL)) COLLATE RTRIM)AND((((rt0.c4 IN (rt0.c2))) NOT NULL)))) ORDER BY ((CAST(rt0.c2 AS NUMERIC))-(((rt0.c2) ISNULL))) DESC  NULLS FIRST, (rt0.c2 IN ('')) COLLATE RTRIM DESC, rt0.c0 ASC  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (0.5546311254982884) ORDER BY ((CAST(rt0.c2 AS NUMERIC))-(((rt0.c2) ISNULL))) DESC  NULLS FIRST, (rt0.c2 IN ('')) COLLATE RTRIM DESC, rt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((((((((rt0.c2, rt0.c4))<((rt0.c0, rt0.c3))))AND(COALESCE(rt0.c2, rt0.c2, rt0.c2, 2.102992548E9))))OR(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND(CAST(rt0.c1 AS TEXT))))OR(((rt0.c2)>(rt0.c2)))));
SELECT * FROM rt0 WHERE ((((((((((((rt0.c2, rt0.c4))<((rt0.c0, rt0.c3))))AND(COALESCE(rt0.c2, rt0.c2, rt0.c2, 2.102992548E9))))OR(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND(CAST(rt0.c1 AS TEXT))))OR(((rt0.c2)>(rt0.c2))))) ORDER BY ((x'b1') NOT NULL)  NULLS LAST, (((((0Xffffffffa9a15bd8))<((rt0.c4))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((((((((rt0.c2, rt0.c4))<((rt0.c0, rt0.c3))))AND(COALESCE(rt0.c2, rt0.c2, rt0.c2, 2.102992548E9))))OR(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND(CAST(rt0.c1 AS TEXT))))OR(((rt0.c2)>(rt0.c2)))));
SELECT * FROM rt0 WHERE ((((((((((((rt0.c2, rt0.c4))<((rt0.c0, rt0.c3))))AND(COALESCE(rt0.c2, rt0.c2, rt0.c2, 2.102992548E9))))OR(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND(CAST(rt0.c1 AS TEXT))))OR(((rt0.c2)>(rt0.c2))))) ORDER BY ((x'b1') NOT NULL)  NULLS LAST, (((((0Xffffffffa9a15bd8))<((rt0.c4))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE ('yW	?-)') ORDER BY CASE rt0.c1 COLLATE BINARY  WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) THEN ((rt0.c3) NOTNULL) WHEN (('-843941687') BETWEEN (rt0.c0) AND (NULL)) THEN NULL WHEN (- (rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN ((rt0.c0)<<(rt0.c3)) THEN (rt0.c2 IN (rt0.c2)) END DESC, rt0.c1;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE ('yW	?-)') ORDER BY CASE rt0.c1 COLLATE BINARY  WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) THEN ((rt0.c3) NOTNULL) WHEN (('-843941687') BETWEEN (rt0.c0) AND (NULL)) THEN NULL WHEN (- (rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN ((rt0.c0)<<(rt0.c3)) THEN (rt0.c2 IN (rt0.c2)) END DESC, rt0.c1 LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((((NULL)AND((('-1449042984')<=(rt0.c0)))))AND((rt0.c4 IN (rt0.c0)))))AND(((rt0.c0) IS TRUE)))) ORDER BY CASE rt0.c1 COLLATE BINARY  WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) THEN ((rt0.c3) NOTNULL) WHEN (('-843941687') BETWEEN (rt0.c0) AND (NULL)) THEN NULL WHEN (- (rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN ((rt0.c0)<<(rt0.c3)) THEN (rt0.c2 IN (rt0.c2)) END DESC, rt0.c1 LIMIT 0;
SELECT MAX(rt0.c4) FROM rt0 WHERE (((CASE rt0.c3  WHEN x'f1f6' THEN rt0.c3 WHEN 0.3452581343325458 THEN rt0.c3 ELSE rt0.c1 END) IS TRUE));
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((((CASE rt0.c3  WHEN x'f1f6' THEN rt0.c3 WHEN 0.3452581343325458 THEN rt0.c3 ELSE rt0.c1 END) IS TRUE))AND(json_array(((rt0.c3)&(rt0.c0)), (- (rt0.c4)), ((rt0.c0) NOT NULL))))) INTERSECT SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (CAST((((rt0.c1))>=((rt0.c0))) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0) NOTNULL))OR(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))) ASC, NULL ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0) NOTNULL))OR(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))) ASC, NULL ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)!=(rt0.c1)) AS TEXT));
SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c0)!=(rt0.c1)) AS TEXT))AND(((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c4))) NOTNULL))));
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)!=(rt0.c1)) AS TEXT));
SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c0)!=(rt0.c1)) AS TEXT))AND(((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c4))) NOTNULL))));
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) BETWEEN (0.9189973094140936) AND ((((rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c1)) AND ((rt0.c2, rt0.c3))))));
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) BETWEEN (0.9189973094140936) AND ((((rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c1)) AND ((rt0.c2, rt0.c3)))))) ORDER BY ((rt0.c1) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (rt0.c0)), CASE WHEN ((x'') IS FALSE) THEN rt0.c3 END  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) BETWEEN (0.9189973094140936) AND ((((rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c1)) AND ((rt0.c2, rt0.c3))))));
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) BETWEEN (0.9189973094140936) AND ((((rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c1)) AND ((rt0.c2, rt0.c3)))))) ORDER BY ((rt0.c1) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (rt0.c0)), CASE WHEN ((x'') IS FALSE) THEN rt0.c3 END  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c4)IS(rt0.c0)))>>(CASE x''  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN NULL ELSE rt0.c1 END))) ORDER BY (rt0.c4 IN ()) DESC, ((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) NOT NULL), ((LIKELIHOOD(rt0.c4, rt0.c4)) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)IS(rt0.c0)))>>(CASE x''  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN NULL ELSE rt0.c1 END)))AND(CAST(CAST(rt0.c1 AS BLOB) AS REAL)))) ORDER BY (rt0.c4 IN ()) DESC, ((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) NOT NULL), ((LIKELIHOOD(rt0.c4, rt0.c4)) IS FALSE)  NULLS FIRST LIMIT 0X4 INTERSECT SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2)IS(rt0.c2))))) ORDER BY (rt0.c4 IN ()) DESC, ((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) NOT NULL), ((LIKELIHOOD(rt0.c4, rt0.c4)) IS FALSE)  NULLS FIRST LIMIT 0X4;
SELECT * FROM rt0 WHERE (((((rt0.c4)IS(rt0.c0)))>>(CASE x''  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN NULL ELSE rt0.c1 END))) ORDER BY (rt0.c4 IN ()) DESC, ((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) NOT NULL), ((LIKELIHOOD(rt0.c4, rt0.c4)) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((0.8738438726719402) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (UNLIKELY(rt0.c0))));
SELECT * FROM rt0 WHERE (((0.8738438726719402) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (UNLIKELY(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (((0.8738438726719402) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (UNLIKELY(rt0.c0))));
SELECT * FROM rt0 WHERE (((0.8738438726719402) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (UNLIKELY(rt0.c0))));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((CASE WHEN NULL THEN x'7f' WHEN rt0.c4 THEN rt0.c4 END)>=(NULL));
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) ORDER BY ((CASE WHEN NULL THEN x'7f' WHEN rt0.c4 THEN rt0.c4 END)>=(NULL)) LIMIT 1;
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((CASE WHEN NULL THEN x'7f' WHEN rt0.c4 THEN rt0.c4 END)>=(NULL));
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) ORDER BY ((CASE WHEN NULL THEN x'7f' WHEN rt0.c4 THEN rt0.c4 END)>=(NULL)) LIMIT 1;
SELECT * FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS TEXT));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS TEXT)) ORDER BY ((((rt0.c0) ISNULL)) NOT NULL)  NULLS LAST, rt0.c2 DESC, ((rt0.c0)=((rt0.c4 IN ()))) INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE BINARY COLLATE RTRIM COLLATE BINARY) ORDER BY ((((rt0.c0) ISNULL)) NOT NULL)  NULLS LAST, rt0.c2 DESC, ((rt0.c0)=((rt0.c4 IN ())));
SELECT * FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS TEXT));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS TEXT)) ORDER BY ((((rt0.c0) ISNULL)) NOT NULL)  NULLS LAST, rt0.c2 DESC, ((rt0.c0)=((rt0.c4 IN ()))) INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE BINARY COLLATE RTRIM COLLATE BINARY) ORDER BY ((((rt0.c0) ISNULL)) NOT NULL)  NULLS LAST, rt0.c2 DESC, ((rt0.c0)=((rt0.c4 IN ())));
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (CAST((~ (rt0.c1)) AS TEXT));
SELECT MAX(rt0.c0) FROM rt0 WHERE (CAST((~ (rt0.c1)) AS TEXT)) ORDER BY ((CAST(rt0.c3 AS NUMERIC))<=(-1381152782)) LIMIT 0x0 INTERSECT SELECT MAX(rt0.c0) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2 COLLATE RTRIM)))) ORDER BY ((CAST(rt0.c3 AS NUMERIC))<=(0xffffffffadad47f2)) LIMIT 0;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE ((+ (((rt0.c3) ISNULL)))) ORDER BY CASE WHEN ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(x'0f')))AND(rt0.c4)) THEN UPPER(rt0.c2) WHEN TRIM(rt0.c2) THEN CAST(rt0.c3 AS NUMERIC) END;
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE ((+ (((rt0.c3) ISNULL)))) ORDER BY CASE WHEN ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(x'0f')))AND(rt0.c4)) THEN UPPER(rt0.c2) WHEN TRIM(rt0.c2) THEN CAST(rt0.c3 AS NUMERIC) END INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE ((((((rt0.c1 IN (1477462755, rt0.c3)))AND(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((1.557454986E9)<>(rt0.c0))))) ORDER BY CASE WHEN ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(x'0f')))AND(rt0.c4)) THEN UPPER(rt0.c2) WHEN TRIM(rt0.c2) THEN CAST(rt0.c3 AS NUMERIC) END;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END) BETWEEN (((rt0.c1) IS FALSE)) AND ((NULL IN ())))) ORDER BY '' DESC, ((((rt0.c1)OR(rt0.c2)))-(CAST(-785350786 AS NUMERIC)));
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END) BETWEEN (((rt0.c1) IS FALSE)) AND ((NULL IN ())))) ORDER BY '' DESC, ((((rt0.c1)OR(rt0.c2)))-(CAST(-785350786 AS NUMERIC))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)&(rt0.c4)) COLLATE BINARY) ORDER BY '' DESC, ((((rt0.c1)OR(rt0.c2)))-(CAST(0xffffffffd1307f7e AS NUMERIC))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END) BETWEEN (((rt0.c1) IS FALSE)) AND ((NULL IN ())))) ORDER BY '' DESC, ((((rt0.c1)OR(rt0.c2)))-(CAST(-785350786 AS NUMERIC)));
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END) BETWEEN (((rt0.c1) IS FALSE)) AND ((NULL IN ())))) ORDER BY '' DESC, ((((rt0.c1)OR(rt0.c2)))-(CAST(-785350786 AS NUMERIC))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)&(rt0.c4)) COLLATE BINARY) ORDER BY '' DESC, ((((rt0.c1)OR(rt0.c2)))-(CAST(0xffffffffd1307f7e AS NUMERIC))) LIMIT 0X0;
SELECT * FROM rt0 WHERE (((json_patch(rt0.c1, x'99'))<((((0x639f3955, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))))));
SELECT * FROM rt0 WHERE (((((json_patch(rt0.c1, x'99'))<((((0x639f3955, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))))))AND(((-1797663919)>>((rt0.c2 IN (rt0.c4)))))));
SELECT * FROM rt0 WHERE (((json_patch(rt0.c1, x'99'))<((((0x639f3955, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))))));
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE ((rt0.c0 IN ('-76988128')) COLLATE NOCASE);
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ((((rt0.c0 IN ('-76988128')) COLLATE NOCASE)AND((((json_extract(rt0.c1, rt0.c0, rt0.c2), (~ (-3.53331634E8)), rt0.c2))==((STRFTIME(rt0.c3, rt0.c0, rt0.c3), ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)), rt0.c0))))));
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<<((rt0.c1 IN ())))) ORDER BY ((((((json_array_length(rt0.c0, rt0.c4))AND((rt0.c1 IN ()))))OR(rt0.c1)))AND(rt0.c1)) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<<((rt0.c1 IN ())))) ORDER BY (((- (rt0.c4))) NOTNULL) ASC  NULLS FIRST, rt0.c2 COLLATE RTRIM  NULLS LAST LIMIT 0;
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<<((rt0.c1 IN ())))) ORDER BY ((((((json_array_length(rt0.c0, rt0.c4))AND((rt0.c1 IN ()))))OR(rt0.c1)))AND(rt0.c1)) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<<((rt0.c1 IN ())))) ORDER BY (((- (rt0.c4))) NOTNULL) ASC  NULLS FIRST, rt0.c2 COLLATE RTRIM  NULLS LAST LIMIT 0;
SELECT MIN(rt0.c2) FROM rt0 WHERE (((rt0.c4)>>(CAST(rt0.c0 AS BLOB)))) ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) IN (CASE WHEN rt0.c4 THEN rt0.c0 END)) DESC, ((CAST(rt0.c4 AS REAL)) BETWEEN ((~ (rt0.c4))) AND ((((rt0.c2))>((rt0.c4))))) DESC  NULLS FIRST, (((rt0.c0 IN (rt0.c3))) NOT NULL) ASC;
SELECT MIN(rt0.c2) FROM rt0 WHERE (((rt0.c4)>>(CAST(rt0.c0 AS BLOB)))) ORDER BY json_array(0.26558105007963395, json_insert(rt0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c0, rt0.c2), ((rt0.c3) IS TRUE), ((rt0.c2)<=('FALSE'))) ASC LIMIT 0X1;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c4)OR(rt0.c4)))AND(rt0.c3)) COLLATE RTRIM) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN '0.8529298698575656' WHEN rt0.c1 THEN 1143641029 END)OR(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR(((rt0.c1)>(0.14396667058173684)))) ASC  NULLS FIRST;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c4)OR(rt0.c4)))AND(rt0.c3)) COLLATE RTRIM) ORDER BY (((((rt0.c3))>=((rt0.c4)))) ISNULL)  NULLS FIRST LIMIT 1 INTERSECT SELECT MAX(rt0.c2) FROM rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS TEXT)) ORDER BY (((((rt0.c3))>=((rt0.c4)))) ISNULL)  NULLS FIRST LIMIT 1;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)), json_remove(rt0.c2, rt0.c2)))>((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (~ (0.1137645682949282)))))) ORDER BY ((rt0.c3)>=(((rt0.c1) NOT NULL))) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)), json_remove(rt0.c2, rt0.c2)))>((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (~ (0.1137645682949282)))))) ORDER BY ((rt0.c3)>=(((rt0.c1) NOT NULL))) ASC  NULLS LAST LIMIT 1;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE ((((((('1723524184')OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) COLLATE NOCASE) ORDER BY (((((rt0.c4))>((rt0.c2)))) BETWEEN (((rt0.c3) NOT NULL)) AND ((rt0.c3 IN (rt0.c0)))) ASC, (((rt0.c4 IN ()))||(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)))), ((((((((rt0.c3)||(rt0.c3)))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c4)IS NOT(rt0.c2)))))AND((rt0.c2 IN (rt0.c1)))) DESC  NULLS LAST;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE ((((((((('1723524184')OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) COLLATE NOCASE)AND(CASE WHEN (((rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c1))) THEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((rt0.c2) BETWEEN (x'a6') AND (rt0.c0)) THEN (rt0.c3 IN (rt0.c3)) WHEN ((rt0.c0)<=(rt0.c3)) THEN CASE WHEN rt0.c4 THEN rt0.c0 WHEN NULL THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN NULL THEN rt0.c1 ELSE rt0.c4 END ELSE 0X65ab5a67 END))) ORDER BY (- (rt0.c0 COLLATE BINARY)) LIMIT 0x1;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (HEX(((((((rt0.c3)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c3)))) ORDER BY (~ ((((rt0.c3, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0)) AND (('7_', rt0.c2)))))  NULLS FIRST;
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (((HEX(((((((rt0.c3)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c3))))AND(((((((NULL)AND(NULL)))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))OR(((((((rt0.c3)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c3))))))) ORDER BY LIKELIHOOD(rt0.c3, (NOT (rt0.c4)))  NULLS FIRST LIMIT 1;
SELECT * FROM rt0 WHERE ((((rt0.c3))<((-416868944)))) ORDER BY CAST(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c4)) AS REAL) DESC;
SELECT * FROM rt0 WHERE ((((((rt0.c3))<((-416868944))))AND(x'bd'))) ORDER BY (((((((rt0.c4 IN (rt0.c0)))OR(ABS(rt0.c0))))OR(((rt0.c3)%(rt0.c1)))))OR(((rt0.c2)>(rt0.c4))))  NULLS LAST, (rt0.c3 IN (rt0.c2)) COLLATE NOCASE  NULLS FIRST, (- (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END)) ASC INTERSECT SELECT ALL * FROM rt0 WHERE (CASE (~ (rt0.c0))  WHEN (rt0.c4 IN (rt0.c0)) THEN rt0.c3 WHEN (rt0.c1 IN (rt0.c0)) THEN CASE rt0.c4  WHEN 0.4200721986318393 THEN rt0.c1 ELSE rt0.c2 END ELSE ((rt0.c0) NOTNULL) END) ORDER BY (((((((rt0.c4 IN (rt0.c0)))OR(ABS(rt0.c0))))OR(((rt0.c3)%(rt0.c1)))))OR(((rt0.c2)>(rt0.c4))))  NULLS LAST, (rt0.c3 IN (rt0.c2)) COLLATE NOCASE  NULLS FIRST, (- (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END)) ASC;
SELECT * FROM rt0 WHERE ((((rt0.c3))<((-416868944)))) ORDER BY CAST(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c4)) AS REAL) DESC;
SELECT * FROM rt0 WHERE ((((((rt0.c3))<((-416868944))))AND(x'bd'))) ORDER BY (((((((rt0.c4 IN (rt0.c0)))OR(ABS(rt0.c0))))OR(((rt0.c3)%(rt0.c1)))))OR(((rt0.c2)>(rt0.c4))))  NULLS LAST, (rt0.c3 IN (rt0.c2)) COLLATE NOCASE  NULLS FIRST, (- (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END)) ASC INTERSECT SELECT ALL * FROM rt0 WHERE (CASE (~ (rt0.c0))  WHEN (rt0.c4 IN (rt0.c0)) THEN rt0.c3 WHEN (rt0.c1 IN (rt0.c0)) THEN CASE rt0.c4  WHEN 0.4200721986318393 THEN rt0.c1 ELSE rt0.c2 END ELSE ((rt0.c0) NOTNULL) END) ORDER BY (((((((rt0.c4 IN (rt0.c0)))OR(ABS(rt0.c0))))OR(((rt0.c3)%(rt0.c1)))))OR(((rt0.c2)>(rt0.c4))))  NULLS LAST, (rt0.c3 IN (rt0.c2)) COLLATE NOCASE  NULLS FIRST, (- (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END)) ASC;
SELECT * FROM rt0 WHERE ((((~ (rt0.c4)))IS((rt0.c2 IN (rt0.c4)))));
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c4)))IS((rt0.c2 IN (rt0.c4))))) LIMIT 0X1 INTERSECT SELECT * FROM rt0 WHERE ((rt0.c2 IN ((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c3, rt0.c3, rt0.c0))), CAST(rt0.c1 AS REAL)))) LIMIT 0x1;
SELECT * FROM rt0 WHERE ((((~ (rt0.c4)))IS((rt0.c2 IN (rt0.c4)))));
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c4)))IS((rt0.c2 IN (rt0.c4))))) LIMIT 0X1 INTERSECT SELECT * FROM rt0 WHERE ((rt0.c2 IN ((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c3, rt0.c3, rt0.c0))), CAST(rt0.c1 AS REAL)))) LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (((((((CAST(rt0.c0 AS INTEGER))AND((rt0.c3 IN (rt0.c3)))))AND(((('OB'))>((rt0.c2))))))AND(json_extract(rt0.c3, rt0.c4, rt0.c1))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((CAST(rt0.c0 AS INTEGER))AND((rt0.c3 IN (rt0.c3)))))AND(((('OB'))>((rt0.c2))))))AND(json_extract(rt0.c3, rt0.c4, rt0.c1))))AND(CASE ((rt0.c4)<>('1889769305'))  WHEN rt0.c1 THEN ((rt0.c0)>(0.3902642308724925)) ELSE RTRIM(rt0.c4) END))) ORDER BY rt0.c4 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)>>((rt0.c4 IN ('-2110560773'))))) ORDER BY rt0.c4;
SELECT ALL * FROM rt0 WHERE (((((((CAST(rt0.c0 AS INTEGER))AND((rt0.c3 IN (rt0.c3)))))AND(((('OB'))>((rt0.c2))))))AND(json_extract(rt0.c3, rt0.c4, rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (']E%ba訩W⟔E' COLLATE NOCASE) ORDER BY ((rt0.c2)<>(((NULL)<=(rt0.c2))))  NULLS LAST, ((((((((((TRIM(x'16'))AND((rt0.c3 IN ()))))OR(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END)))OR(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)))))OR(((((((rt0.c0)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c3)))))AND(((((((((rt0.c4)AND(rt0.c3)))OR(NULL)))AND(rt0.c1)))AND(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((']E%ba訩W⟔E' COLLATE NOCASE)AND((rt0.c0 IN ()) COLLATE RTRIM))) ORDER BY IFNULL(DISTINCT ((rt0.c1)OR(rt0.c3)), CAST(rt0.c4 AS TEXT))  NULLS FIRST, ((ABS(rt0.c3)) NOT BETWEEN (rt0.c1) AND (CAST(rt0.c3 AS REAL))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)) ORDER BY (~ (((rt0.c3) ISNULL))), (CAST(rt0.c1 AS BLOB) IN ()) DESC  NULLS FIRST, IFNULL(((rt0.c3)IS NOT(rt0.c4)), (0.4485641792259819 IN (NULL))) DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)) ORDER BY (~ (((rt0.c3) ISNULL))), (CAST(rt0.c1 AS BLOB) IN ()) DESC  NULLS FIRST, IFNULL(((rt0.c3)IS NOT(rt0.c4)), (0.4485641792259819 IN (NULL))) DESC LIMIT 1 INTERSECT SELECT ALL * FROM rt0 NOT INDEXED WHERE (json_insert(((rt0.c0)*(rt0.c4)), ((rt0.c1)+(rt0.c4)), ((rt0.c1) IS TRUE))) ORDER BY (~ (((rt0.c3) ISNULL))), (CAST(rt0.c1 AS BLOB) IN ()) DESC  NULLS FIRST, IFNULL(((rt0.c3)IS NOT(rt0.c4)), (0.4485641792259819 IN (NULL))) DESC LIMIT 0X1;
SELECT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)) ORDER BY (~ (((rt0.c3) ISNULL))), (CAST(rt0.c1 AS BLOB) IN ()) DESC  NULLS FIRST, IFNULL(((rt0.c3)IS NOT(rt0.c4)), (0.4485641792259819 IN (NULL))) DESC;
SELECT ALL * FROM rt0 WHERE ((('g9,*8뀋')GLOB(rt0.c0)) COLLATE BINARY) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))>(((rt0.c4) ISNULL))), ((((rt0.c0)||(rt0.c4)))+(((rt0.c4)==('2001252046'))))  NULLS FIRST, (((((rt0.c3)<=(rt0.c3))))>=((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 END)))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((((('g9,*8뀋')GLOB(rt0.c0)) COLLATE BINARY)AND('Z'))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((('g9,*8뀋')GLOB(rt0.c0)) COLLATE BINARY) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))>(((rt0.c4) ISNULL))), ((((rt0.c0)||(rt0.c4)))+(((rt0.c4)==('2001252046'))))  NULLS FIRST, (((((rt0.c3)<=(rt0.c3))))>=((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 END)))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((((('g9,*8뀋')GLOB(rt0.c0)) COLLATE BINARY)AND('Z'))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((+ (CASE rt0.c1  WHEN rt0.c2 THEN '-2110560773' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END)));
SELECT ALL * FROM rt0 WHERE ((+ (CASE rt0.c1  WHEN rt0.c2 THEN '-2110560773' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END))) ORDER BY (((rt0.c2, rt0.c3, rt0.c4, rt0.c4, rt0.c1, rt0.c1)) BETWEEN ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)), x'e05ea44b49', ((rt0.c1)=(rt0.c3)), NULL, (- (rt0.c0)), ((((((rt0.c3)AND(rt0.c4)))OR(-1.240337007E9)))OR(rt0.c2)))) AND ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), NULL, ((rt0.c2)==(rt0.c3)), ((']3hs괠_B') NOT BETWEEN (rt0.c3) AND (rt0.c4)), 0.30064826090331154, ((((((rt0.c4)OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c4))))) ASC, ((rt0.c3 COLLATE RTRIM)>((rt0.c0 IN (rt0.c3, rt0.c3)))) ASC;
SELECT ALL * FROM rt0 WHERE ((+ (CASE rt0.c1  WHEN rt0.c2 THEN '-2110560773' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END)));
SELECT ALL * FROM rt0 WHERE ((+ (CASE rt0.c1  WHEN rt0.c2 THEN '-2110560773' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END))) ORDER BY (((rt0.c2, rt0.c3, rt0.c4, rt0.c4, rt0.c1, rt0.c1)) BETWEEN ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)), x'e05ea44b49', ((rt0.c1)=(rt0.c3)), NULL, (- (rt0.c0)), ((((((rt0.c3)AND(rt0.c4)))OR(-1.240337007E9)))OR(rt0.c2)))) AND ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), NULL, ((rt0.c2)==(rt0.c3)), ((']3hs괠_B') NOT BETWEEN (rt0.c3) AND (rt0.c4)), 0.30064826090331154, ((((((rt0.c4)OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c4))))) ASC, ((rt0.c3 COLLATE RTRIM)>((rt0.c0 IN (rt0.c3, rt0.c3)))) ASC;
SELECT * FROM rt0 WHERE (((((rt0.c3)%(rt0.c0))) NOT BETWEEN ((rt0.c2 IN (rt0.c4))) AND ((rt0.c0 IN (rt0.c1))))) ORDER BY (+ (((0.8199004958034412) BETWEEN (rt0.c2) AND (rt0.c0)))), CAST(((rt0.c1)<<(rt0.c4)) AS NUMERIC), (+ ((rt0.c3 IN ()))) DESC, TRIM(DISTINCT ((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c4)))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3)%(rt0.c0))) NOT BETWEEN ((rt0.c2 IN (rt0.c4))) AND ((rt0.c0 IN (rt0.c1))))) ORDER BY (+ (((0.8199004958034412) BETWEEN (rt0.c2) AND (rt0.c0)))), CAST(((rt0.c1)<<(rt0.c4)) AS NUMERIC), (+ ((rt0.c3 IN ()))) DESC, TRIM(DISTINCT ((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c4)))  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c3)%(rt0.c0))) NOT BETWEEN ((rt0.c2 IN (rt0.c4))) AND ((rt0.c0 IN (rt0.c1))))) ORDER BY (+ (((0.8199004958034412) BETWEEN (rt0.c2) AND (rt0.c0)))), CAST(((rt0.c1)<<(rt0.c4)) AS NUMERIC), (+ ((rt0.c3 IN ()))) DESC, TRIM(DISTINCT ((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c4)))  NULLS LAST;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (((((((rt0.c2)AND(((rt0.c4) NOT NULL))))AND((((rt0.c4, rt0.c1, rt0.c4))>((rt0.c3, rt0.c0, rt0.c1))))))AND(CAST(rt0.c2 AS TEXT)))) ORDER BY ((rt0.c4 COLLATE RTRIM)<=((- (rt0.c0))))  NULLS LAST, ((TIME(rt0.c2, rt0.c1, x'91')) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (((((((((rt0.c2)AND(((rt0.c4) NOT NULL))))AND((((rt0.c4, rt0.c1, rt0.c4))>((rt0.c3, rt0.c0, rt0.c1))))))AND(CAST(rt0.c2 AS TEXT))))AND((((rt0.c4 IN ()))|((x'3a18' IN (x'11354b'))))))) ORDER BY '0.21138158116609207' ASC LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (CASE ((0xffffffffe7a3d95c) NOTNULL)  WHEN CASE rt0.c1  WHEN -1048427217 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 END THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN x'' THEN rt0.c4 END WHEN ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) THEN rt0.c1 COLLATE BINARY ELSE (((rt0.c3))<=((rt0.c4))) END);
SELECT * FROM rt0 WHERE (CASE ((-408692388) NOTNULL)  WHEN CASE rt0.c1  WHEN -1048427217 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 END THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN x'' THEN rt0.c4 END WHEN ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) THEN rt0.c1 COLLATE BINARY ELSE (((rt0.c3))<=((rt0.c4))) END) INTERSECT SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN ((- (rt0.c3))) AND (x'bcb910')));
SELECT ALL * FROM rt0 WHERE (CASE ((0xffffffffe7a3d95c) NOTNULL)  WHEN CASE rt0.c1  WHEN -1048427217 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 END THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN x'' THEN rt0.c4 END WHEN ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) THEN rt0.c1 COLLATE BINARY ELSE (((rt0.c3))<=((rt0.c4))) END);
SELECT * FROM rt0 WHERE (CASE ((-408692388) NOTNULL)  WHEN CASE rt0.c1  WHEN -1048427217 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 END THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN x'' THEN rt0.c4 END WHEN ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) THEN rt0.c1 COLLATE BINARY ELSE (((rt0.c3))<=((rt0.c4))) END) INTERSECT SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN ((- (rt0.c3))) AND (x'bcb910')));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)))!=(((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)))!=(((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))))AND(((rt0.c4 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((((rt0.c3)AND(rt0.c1)))OR('983362564'))))))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)) IN ()));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)))!=(((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)))!=(((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))))AND(((rt0.c4 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((((rt0.c3)AND(rt0.c1)))OR('983362564'))))))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)) IN ()));
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((0.06368945653582214) NOTNULL))) ORDER BY ((rt0.c4 COLLATE NOCASE) IS TRUE)  NULLS FIRST, CASE ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((rt0.c2)GLOB(rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c1 END ELSE (- (rt0.c4)) END  NULLS FIRST, (((rt0.c2, ((rt0.c2) IS FALSE), (- (rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3))))>((((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND('-7545377')), ((rt0.c3)+(rt0.c1)), rt0.c1, (((rt0.c2))>=((rt0.c4))))))  NULLS FIRST;
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(((0.06368945653582214) NOTNULL)))AND(CASE WHEN ((1.44474326E9)>=(rt0.c2)) THEN ((rt0.c2)>(rt0.c0)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) WHEN x'' THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))AND('
')))AND(rt0.c1)) THEN HEX(DISTINCT rt0.c1) WHEN (+ (rt0.c1)) THEN rt0.c1 END))) ORDER BY ((rt0.c4 COLLATE NOCASE) IS TRUE)  NULLS FIRST, CASE ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((rt0.c2)GLOB(rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c1 END ELSE (- (rt0.c4)) END  NULLS FIRST, (((rt0.c2, ((rt0.c2) IS FALSE), (- (rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3))))>((((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND('-7545377')), ((rt0.c3)+(rt0.c1)), rt0.c1, (((rt0.c2))>=((rt0.c4))))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (('7L8m') NOT NULL) ASC, CAST((rt0.c3 IN (rt0.c0)) AS INTEGER);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((NULL)AND(((HEX(rt0.c0))=((('964363598')IS NOT(rt0.c2))))))) ORDER BY (('7L8m') NOT NULL) ASC, CAST((rt0.c3 IN (rt0.c0)) AS INTEGER);
SELECT ALL * FROM rt0 WHERE ((+ (x'e834'))) ORDER BY (+ ('d')) ASC  NULLS FIRST, ((((rt0.c3)IS(rt0.c3))) IS FALSE)  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((+ (x'e834'))) ORDER BY ((rt0.c3)||((~ (rt0.c1)))), '136555943'  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((+ (x'e834'))) ORDER BY (+ ('d')) ASC  NULLS FIRST, ((((rt0.c3)IS(rt0.c3))) IS FALSE)  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((+ (x'e834'))) ORDER BY ((rt0.c3)||((~ (rt0.c1)))), '136555943'  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c3 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE ((((+ ((rt0.c3 IN ()))))AND((CAST(rt0.c3 AS TEXT) IN ())))) ORDER BY (((rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 END)) AND (((((rt0.c3, NULL, 'o '))<((x'db', rt0.c4, rt0.c1))), ((((rt0.c3)OR(rt0.c1)))OR(rt0.c1))))) DESC  NULLS FIRST, CAST((rt0.c3 IN ()) AS REAL) ASC, ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END) AND (IFNULL(rt0.c1, 0.56623392752164)))  NULLS LAST LIMIT 3;
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY '1940114623' ASC, ((TRIM(DISTINCT rt0.c3, rt0.c3))%(((rt0.c4) ISNULL))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (NULL) ORDER BY '1940114623' ASC, ((TRIM(DISTINCT rt0.c3, rt0.c3))%(((rt0.c4) ISNULL))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (0x14c5f221 COLLATE BINARY))) ORDER BY '1940114623' ASC, ((TRIM(DISTINCT rt0.c3, rt0.c3))%(((rt0.c4) ISNULL))) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY '1940114623' ASC, ((TRIM(DISTINCT rt0.c3, rt0.c3))%(((rt0.c4) ISNULL))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (NULL) ORDER BY '1940114623' ASC, ((TRIM(DISTINCT rt0.c3, rt0.c3))%(((rt0.c4) ISNULL))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (0x14c5f221 COLLATE BINARY))) ORDER BY '1940114623' ASC, ((TRIM(DISTINCT rt0.c3, rt0.c3))%(((rt0.c4) ISNULL))) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CASE WHEN rt0.c0 THEN json_extract(rt0.c2, rt0.c1) END  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c1)AND((((CASE WHEN rt0.c4 THEN rt0.c2 END, (~ (rt0.c1)), CAST(rt0.c1 AS INTEGER)))>(((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), CASE WHEN x'36' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END, DATE(rt0.c3, rt0.c1, '>2', rt0.c2, 0.9189973094140936, 'o{^'))))))) ORDER BY rt0.c3 COLLATE NOCASE  NULLS LAST, json_array(((rt0.c3) NOTNULL), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)AND(rt0.c0)) AS TEXT)) ORDER BY rt0.c3 COLLATE NOCASE  NULLS LAST, json_array(((rt0.c3) NOTNULL), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CASE WHEN rt0.c0 THEN json_extract(rt0.c2, rt0.c1) END  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c1)AND((((CASE WHEN rt0.c4 THEN rt0.c2 END, (~ (rt0.c1)), CAST(rt0.c1 AS INTEGER)))>(((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), CASE WHEN x'36' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END, DATE(rt0.c3, rt0.c1, '>2', rt0.c2, 0.9189973094140936, 'o{^'))))))) ORDER BY rt0.c3 COLLATE NOCASE  NULLS LAST, json_array(((rt0.c3) NOTNULL), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)AND(rt0.c0)) AS TEXT)) ORDER BY rt0.c3 COLLATE NOCASE  NULLS LAST, json_array(((rt0.c3) NOTNULL), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) ORDER BY CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN x'2d2d58' END COLLATE NOCASE ASC  NULLS FIRST, (((NOT (rt0.c1))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (NULL))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4))))<(((((((('> ')AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c0))))) DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END AS BLOB)) ORDER BY CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN x'2d2d58' END COLLATE NOCASE ASC  NULLS FIRST, (((NOT (rt0.c1))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (NULL))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4))))<(((((((('> ')AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c0))))) DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) ORDER BY CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN x'2d2d58' END COLLATE NOCASE ASC  NULLS FIRST, (((NOT (rt0.c1))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (NULL))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4))))<(((((((('> ')AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c0))))) DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END AS BLOB)) ORDER BY CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN x'2d2d58' END COLLATE NOCASE ASC  NULLS FIRST, (((NOT (rt0.c1))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (NULL))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4))))<(((((((('> ')AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c0))))) DESC;
SELECT * FROM rt0 WHERE ((x'3a' IN (rt0.c1, rt0.c0)) COLLATE NOCASE);
SELECT DISTINCT * FROM rt0 WHERE ((((x'3a' IN (rt0.c1)) COLLATE NOCASE)AND('
VjLX'))) ORDER BY ((rt0.c3 IN (NULL)) IN ())  NULLS FIRST, (('u沬hBq4') NOTNULL)  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) ORDER BY ((rt0.c3 IN (NULL)) IN ())  NULLS FIRST, (('u沬hBq4') NOTNULL)  NULLS FIRST LIMIT 1;
SELECT * FROM rt0 WHERE ((x'3a' IN (rt0.c1, rt0.c0)) COLLATE NOCASE);
SELECT DISTINCT * FROM rt0 WHERE ((((x'3a' IN (rt0.c1)) COLLATE NOCASE)AND('
VjLX'))) ORDER BY ((rt0.c3 IN (NULL)) IN ())  NULLS FIRST, (('u沬hBq4') NOTNULL)  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) ORDER BY ((rt0.c3 IN (NULL)) IN ())  NULLS FIRST, (('u沬hBq4') NOTNULL)  NULLS FIRST LIMIT 1;
SELECT * FROM rt0 WHERE (((((((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2)))OR(rt0.c0)))AND(((((((rt0.c2)OR(rt0.c4)))OR('611224210')))AND(rt0.c2)))))AND(((rt0.c1)AND(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2)))OR(rt0.c0)))AND(((((((rt0.c2)OR(rt0.c4)))OR('611224210')))AND(rt0.c2)))))AND(((rt0.c1)AND(rt0.c3)))))AND(((((((rt0.c2)-(rt0.c0)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('0.9395383977162013')))))AND(-1.369374169E9))))) ORDER BY ((HEX(rt0.c1))>=((rt0.c0 IN ()))) LIMIT 0X0;
SELECT * FROM rt0 WHERE (((((((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2)))OR(rt0.c0)))AND(((((((rt0.c2)OR(rt0.c4)))OR('611224210')))AND(rt0.c2)))))AND(((rt0.c1)AND(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2)))OR(rt0.c0)))AND(((((((rt0.c2)OR(rt0.c4)))OR('611224210')))AND(rt0.c2)))))AND(((rt0.c1)AND(rt0.c3)))))AND(((((((rt0.c2)-(rt0.c0)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('0.9395383977162013')))))AND(-1.369374169E9))))) ORDER BY ((HEX(rt0.c1))>=((rt0.c0 IN ()))) LIMIT 0X0;
SELECT * FROM rt0 WHERE (((rt0.c1)-(rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)-(rt0.c1)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (((rt0.c1)-(rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)-(rt0.c1)) COLLATE NOCASE);
SELECT MIN(rt0.c0) FROM rt0 WHERE ((NOT ((((rt0.c4, rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, rt0.c4, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c2, rt0.c1))))));
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE ((((NOT ((((rt0.c4, rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, rt0.c4, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c2, rt0.c1))))))AND((((((rt0.c1, rt0.c2, rt0.c4))==((rt0.c2, rt0.c2, x'8f'))))<>(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 END))))) ORDER BY 0X5d57564b DESC  NULLS FIRST LIMIT 4;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) THEN rt0.c2 COLLATE NOCASE END DESC  NULLS LAST;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) THEN rt0.c2 COLLATE NOCASE END DESC  NULLS LAST LIMIT 0;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (((-1150268632)AND((((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c1))))));
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (((0xffffffffbb704b28)AND((((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c1)))))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)) AND ((((0.7136814299807567) BETWEEN (rt0.c0) AND (rt0.c2))))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)) AND ((((0.7136814299807567) BETWEEN (rt0.c0) AND (rt0.c2)))))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)) AND ((((0.7136814299807567) BETWEEN (rt0.c0) AND (rt0.c2))))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)) AND ((((0.7136814299807567) BETWEEN (rt0.c0) AND (rt0.c2)))))) LIMIT 0;
SELECT * FROM rt0 WHERE (CASE ((rt0.c4) ISNULL)  WHEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN CAST(rt0.c1 AS BLOB) END);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4) ISNULL)  WHEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN CAST(rt0.c1 AS BLOB) END) ORDER BY TRIM(DISTINCT CASE rt0.c0  WHEN '1718798282' THEN rt0.c2 END, ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1))) DESC INTERSECT SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0)))IS NOT(CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY TRIM(DISTINCT CASE rt0.c0  WHEN '1718798282' THEN rt0.c2 END, ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1))) DESC;
SELECT * FROM rt0 WHERE (CASE ((rt0.c4) ISNULL)  WHEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN CAST(rt0.c1 AS BLOB) END);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4) ISNULL)  WHEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN CAST(rt0.c1 AS BLOB) END) ORDER BY TRIM(DISTINCT CASE rt0.c0  WHEN '1718798282' THEN rt0.c2 END, ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1))) DESC INTERSECT SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0)))IS NOT(CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY TRIM(DISTINCT CASE rt0.c0  WHEN '1718798282' THEN rt0.c2 END, ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1))) DESC;
SELECT MIN(rt0.c4) FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c2 AS REAL)) NOTNULL)) ORDER BY (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)) IN ((rt0.c1 IN (rt0.c3)))) DESC  NULLS FIRST;
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) NOTNULL)) ORDER BY (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)) IN ((rt0.c1 IN (rt0.c3)))) DESC  NULLS FIRST LIMIT 2;
SELECT MIN(rt0.c2) FROM rt0 WHERE (((((rt0.c4)<(rt0.c2))) BETWEEN ((~ (rt0.c3))) AND (CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN '919481535' WHEN 0x37309be THEN rt0.c4 END))) ORDER BY ((((rt0.c4) NOT NULL)) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (CASE WHEN '1831174746' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END))  NULLS LAST;
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (((((rt0.c4)<(rt0.c2))) BETWEEN ((~ (rt0.c3))) AND (CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN '919481535' WHEN 57870782 THEN rt0.c4 END))) ORDER BY ((((rt0.c4) NOT NULL)) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (CASE WHEN '1831174746' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END))  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE ((((+ (rt0.c3))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c4) IS TRUE)))) ORDER BY ((((rt0.c4) NOT NULL)) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (CASE WHEN '1831174746' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END))  NULLS LAST LIMIT 0x1;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE ((((((rt0.c0) IS FALSE)))>=((((rt0.c2)!=(rt0.c2)))))) ORDER BY ((((rt0.c0)-(rt0.c0)))&((((rt0.c2))>=((rt0.c1))))) DESC, (~ (NULL)) ASC;
SELECT MIN(rt0.c3) FROM rt0 WHERE ((((((((rt0.c0) IS FALSE)))>=((((rt0.c2)!=(rt0.c2))))))AND(((((rt0.c2)*(rt0.c3)))<=(((rt0.c2)LIKE(rt0.c0))))))) ORDER BY ((((rt0.c0)-(rt0.c0)))&((((rt0.c2))>=((rt0.c1))))) DESC, (~ (NULL)) ASC INTERSECT SELECT MIN(rt0.c3) FROM rt0 WHERE (((((rt0.c1 IN ())))<>((((rt0.c1)&(rt0.c2)))))) ORDER BY ((((rt0.c0)-(rt0.c0)))&((((rt0.c2))>=((rt0.c1))))) DESC, (~ (NULL)) ASC;
SELECT * FROM rt0 NOT INDEXED WHERE (((json_array(rt0.c3, rt0.c1, rt0.c4))GLOB(((rt0.c2) ISNULL))));
SELECT DISTINCT * FROM rt0 WHERE (((((json_array(rt0.c3, rt0.c1, rt0.c4))GLOB(((rt0.c2) ISNULL))))AND(json_remove(((rt0.c0) IS TRUE), ((x'')<(rt0.c2)))))) ORDER BY CASE (NOT (rt0.c0))  WHEN JULIANDAY(rt0.c3, rt0.c0, 0.8246898401545959) THEN rt0.c4 COLLATE RTRIM ELSE (((rt0.c4, rt0.c2, rt0.c0))>=(('{', rt0.c4, 0.8085821660464655))) END ASC  NULLS FIRST;
SELECT * FROM rt0 NOT INDEXED WHERE (((json_array(rt0.c3, rt0.c1, rt0.c4))GLOB(((rt0.c2) ISNULL))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS FALSE)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS FALSE)) IS FALSE)) ORDER BY ((((rt0.c1)LIKE(rt0.c0))) BETWEEN (((('1704698143', rt0.c0))<=((rt0.c2, rt0.c4)))) AND (rt0.c3)) ASC LIMIT 1 INTERSECT SELECT COUNT(*) FROM rt0 WHERE (((TRIM(rt0.c4)) IS TRUE)) ORDER BY ((((rt0.c1)LIKE(rt0.c0))) BETWEEN (((('1704698143', rt0.c0))<=((rt0.c2, rt0.c4)))) AND (rt0.c3)) ASC LIMIT 0X1;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (0.8800886998396956);
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (0.8800886998396956) ORDER BY (((0.233250137186923)<<(rt0.c4)) IN ())  NULLS FIRST, (NOT (-34119216)) ASC, ((((rt0.c3) NOTNULL)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))))  NULLS LAST, CAST(LOWER(DISTINCT rt0.c0) AS REAL);
SELECT MAX(rt0.c0) FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY rt0.c0  NULLS LAST;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY ((((rt0.c4)OR(rt0.c1)))IS(((rt0.c2)<<(rt0.c1)))) DESC LIMIT 2;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (CAST('-1203225677' AS INTEGER)) ORDER BY rt0.c3;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (((CAST('-1203225677' AS INTEGER))AND(CAST(((1.718798282E9) ISNULL) AS BLOB)))) ORDER BY (((((x'')) BETWEEN ((rt0.c3)) AND (('SFfNX&*d'))))=('!Fzd1')) ASC, 0xffffffff94d9d351 ASC  NULLS LAST LIMIT 0x4 INTERSECT SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ('mxQ[誒' COLLATE NOCASE COLLATE BINARY) ORDER BY (((((x'')) BETWEEN ((rt0.c3)) AND (('SFfNX&*d'))))=('!Fzd1')) ASC, -1797663919 ASC  NULLS LAST LIMIT 4;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) IN ()));
SELECT MIN(rt0.c2) FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) IN ())) ORDER BY CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN TRIM(DISTINCT rt0.c3) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN ((((((((((rt0.c3)AND('5166184')))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)) ELSE HEX(DISTINCT '-1008095061') END DESC, rt0.c1 DESC  NULLS FIRST INTERSECT SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ('311953353') ORDER BY CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN TRIM(DISTINCT rt0.c3) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN ((((((((((rt0.c3)AND('5166184')))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)) ELSE HEX(DISTINCT '-1008095061') END DESC, rt0.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c2)))<(((rt0.c0) IS FALSE)))) ORDER BY (((x'' IN (rt0.c0))) ISNULL), ((((rt0.c4)AND(rt0.c0 COLLATE BINARY)))AND(((rt0.c4) IS TRUE))) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c2)))<(((rt0.c0) IS FALSE))))AND(json_insert(PRINTF(rt0.c2), UPPER(rt0.c2), ((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))))) ORDER BY (((x'' IN (rt0.c0))) ISNULL), ((((rt0.c4)AND(rt0.c0 COLLATE BINARY)))AND(((rt0.c4) IS TRUE))) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))))>=((rt0.c4)))) ORDER BY rt0.c4 ASC, rt0.c2  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))))>=((rt0.c4))))AND(rt0.c2))) ORDER BY rt0.c4 ASC, rt0.c2  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))))>=((rt0.c4)))) ORDER BY rt0.c4 ASC, rt0.c2  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))))>=((rt0.c4))))AND(rt0.c2))) ORDER BY rt0.c4 ASC, rt0.c2  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c3 AS REAL) AS BLOB)) ORDER BY ((NULL)<=(((rt0.c0)*(rt0.c3)))) DESC  NULLS LAST, (+ (((rt0.c4) NOTNULL))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(CAST(rt0.c3 AS REAL) AS BLOB))AND(rt0.c3))) ORDER BY ((LTRIM(rt0.c3, rt0.c3))=(x'32'))  NULLS LAST, (((rt0.c2, rt0.c0, NULL, rt0.c1)) BETWEEN (((NOT (rt0.c4)), (((('')OR(rt0.c2)))OR('1283418960')), ((rt0.c0)LIKE(rt0.c2)), ((rt0.c2) IS FALSE))) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4)), ((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)), (- (rt0.c0)), (((rt0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1)) BETWEEN (('', rt0.c4, rt0.c3, rt0.c1, rt0.c3)) AND ((1.36555943E8, rt0.c4, x'86', 'R', rt0.c0)))))), ((CAST(rt0.c4 AS NUMERIC))==(((rt0.c4)%(rt0.c2))))  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)) COLLATE RTRIM);
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)) COLLATE RTRIM)AND(((((rt0.c2) NOT NULL))/(rt0.c4))))) ORDER BY ((((((((((((rt0.c3) BETWEEN ('261358840') AND (rt0.c4)))OR(rt0.c4)))AND(x'7b3a02')))AND(((((rt0.c4)OR(rt0.c4)))OR(rt0.c3)))))AND(((rt0.c3)||(rt0.c1)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)) COLLATE RTRIM);
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)) COLLATE RTRIM)AND(((((rt0.c2) NOT NULL))/(rt0.c4))))) ORDER BY ((((((((((((rt0.c3) BETWEEN ('261358840') AND (rt0.c4)))OR(rt0.c4)))AND(x'7b3a02')))AND(((((rt0.c4)OR(rt0.c4)))OR(rt0.c3)))))AND(((rt0.c3)||(rt0.c1)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE (- (rt0.c1))  WHEN rt0.c2 COLLATE BINARY THEN (rt0.c4 IN (rt0.c4, rt0.c2)) WHEN ((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) WHEN LAST_INSERT_ROWID() THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END WHEN ((rt0.c0)AND(rt0.c1)) THEN NULL ELSE INSTR(rt0.c0, rt0.c1) END);
SELECT DISTINCT * FROM rt0 WHERE (((CASE (- (rt0.c1))  WHEN rt0.c2 COLLATE BINARY THEN (rt0.c4 IN (rt0.c4)) WHEN ((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) WHEN LAST_INSERT_ROWID() THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END WHEN ((rt0.c0)AND(rt0.c1)) THEN NULL ELSE INSTR(rt0.c0, rt0.c1) END)AND(LIKELIHOOD(DISTINCT ((NULL)LIKE(x'b417')), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN x'8c226e0bce' ELSE rt0.c1 END)))) ORDER BY ((((rt0.c1, rt0.c2, rt0.c2))<((rt0.c1, rt0.c0, rt0.c3))) IN ())  NULLS FIRST, (rt0.c2 COLLATE RTRIM IN (rt0.c2, HEX(DISTINCT rt0.c0)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4) IS FALSE)) ORDER BY ((((rt0.c1, rt0.c2, rt0.c2))<((rt0.c1, rt0.c0, rt0.c3))) IN ())  NULLS FIRST, (rt0.c2 COLLATE RTRIM IN (rt0.c2, HEX(DISTINCT rt0.c0)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE (- (rt0.c1))  WHEN rt0.c2 COLLATE BINARY THEN (rt0.c4 IN (rt0.c4, rt0.c2)) WHEN ((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) WHEN LAST_INSERT_ROWID() THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END WHEN ((rt0.c0)AND(rt0.c1)) THEN NULL ELSE INSTR(rt0.c0, rt0.c1) END);
SELECT DISTINCT * FROM rt0 WHERE (((CASE (- (rt0.c1))  WHEN rt0.c2 COLLATE BINARY THEN (rt0.c4 IN (rt0.c4)) WHEN ((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) WHEN LAST_INSERT_ROWID() THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END WHEN ((rt0.c0)AND(rt0.c1)) THEN NULL ELSE INSTR(rt0.c0, rt0.c1) END)AND(LIKELIHOOD(DISTINCT ((NULL)LIKE(x'b417')), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN x'8c226e0bce' ELSE rt0.c1 END)))) ORDER BY ((((rt0.c1, rt0.c2, rt0.c2))<((rt0.c1, rt0.c0, rt0.c3))) IN ())  NULLS FIRST, (rt0.c2 COLLATE RTRIM IN (rt0.c2, HEX(DISTINCT rt0.c0)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4) IS FALSE)) ORDER BY ((((rt0.c1, rt0.c2, rt0.c2))<((rt0.c1, rt0.c0, rt0.c3))) IN ())  NULLS FIRST, (rt0.c2 COLLATE RTRIM IN (rt0.c2, HEX(DISTINCT rt0.c0)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c3))) AND (TRIM(rt0.c2)))) ORDER BY ((((rt0.c0 COLLATE NOCASE)OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c2)))) ASC  NULLS LAST, (((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))OR(CAST(x'' AS NUMERIC))))OR(UPPER(rt0.c0)));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c3))) AND (TRIM(rt0.c2))))AND(CASE CAST(rt0.c1 AS INTEGER)  WHEN ((x'ebf489') ISNULL) THEN ((rt0.c0)<<(rt0.c1)) WHEN ((rt0.c4) BETWEEN (x'') AND (rt0.c4)) THEN rt0.c4 COLLATE NOCASE WHEN ((x'0463') IS FALSE) THEN ((rt0.c4)%(rt0.c2)) ELSE NULL END))) ORDER BY ((((rt0.c0 COLLATE NOCASE)OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c2)))) ASC  NULLS LAST, (((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))OR(CAST(x'' AS NUMERIC))))OR(UPPER(rt0.c0)));
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c3))) AND (TRIM(rt0.c2)))) ORDER BY ((((rt0.c0 COLLATE NOCASE)OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c2)))) ASC  NULLS LAST, (((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))OR(CAST(x'' AS NUMERIC))))OR(UPPER(rt0.c0)));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c3))) AND (TRIM(rt0.c2))))AND(CASE CAST(rt0.c1 AS INTEGER)  WHEN ((x'ebf489') ISNULL) THEN ((rt0.c0)<<(rt0.c1)) WHEN ((rt0.c4) BETWEEN (x'') AND (rt0.c4)) THEN rt0.c4 COLLATE NOCASE WHEN ((x'0463') IS FALSE) THEN ((rt0.c4)%(rt0.c2)) ELSE NULL END))) ORDER BY ((((rt0.c0 COLLATE NOCASE)OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c2)))) ASC  NULLS LAST, (((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))OR(CAST(x'' AS NUMERIC))))OR(UPPER(rt0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS TRUE)) IS TRUE)) ORDER BY ((((rt0.c4)AND(rt0.c2)))AND(rt0.c4)) COLLATE BINARY ASC, rt0.c0;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS TRUE)) IS TRUE)) ORDER BY ((((rt0.c4)AND(rt0.c2)))AND(rt0.c4)) COLLATE BINARY ASC, rt0.c0 LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT (rt0.c4 IN (rt0.c0)))) ORDER BY ((rt0.c3)>=((rt0.c3 IN (rt0.c0, rt0.c2)))) DESC  NULLS LAST, (~ ((((rt0.c4, 'eQ', rt0.c0, rt0.c3, rt0.c0))>((rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(DISTINCT (rt0.c4 IN (rt0.c0))))AND(CAST(((((((0.08089709825752933)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c1)) AS INTEGER)))) ORDER BY rt0.c2 ASC, (((NOT (rt0.c1))) NOTNULL) ASC, ((0xffffffff970aad20)-((((rt0.c3, 0.08175168991687987, NULL, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c2, x'3a', rt0.c4)) AND ((x'', rt0.c1, '-1206050049', 0.6098641506995462))))) ASC  NULLS LAST, ((rt0.c2 IN (rt0.c1)) IN ('1BJ>p.', ((rt0.c1) IS TRUE)))  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY rt0.c2 ASC, (((NOT (rt0.c1))) NOTNULL) ASC, ((0Xffffffff970aad20)-((((rt0.c3, 0.08175168991687987, NULL, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c2, x'3a', rt0.c4)) AND ((x'', rt0.c1, '-1206050049', 0.6098641506995462))))) ASC  NULLS LAST, ((rt0.c2 IN (rt0.c1)) IN ('1BJ>p.', ((rt0.c1) IS TRUE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c0))>=((rt0.c0, rt0.c3))) AS TEXT));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c0))>((rt0.c0, rt0.c3))) AS TEXT)) ORDER BY CAST((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) AS INTEGER), COALESCE(DISTINCT CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN x'3f' WHEN rt0.c0 THEN rt0.c1 END, (+ (rt0.c3)), ((rt0.c3) IS TRUE), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c4)/(rt0.c4))), (((rt0.c1, rt0.c3, rt0.c1, '')) NOT BETWEEN ((TRIM(rt0.c2, rt0.c3), ((rt0.c4) BETWEEN (rt0.c1) AND (x'57')), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)LIKE(rt0.c0)))) AND ((((x'8f42') IS FALSE), (NULL IN (rt0.c2, rt0.c2)), ((rt0.c0) IS TRUE), (((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((0.9764418409055422, rt0.c3, rt0.c3)))))) ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (0.7093089705382557) ORDER BY CAST((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) AS INTEGER), COALESCE(DISTINCT CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN x'3f' WHEN rt0.c0 THEN rt0.c1 END, (+ (rt0.c3)), ((rt0.c3) IS TRUE), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c4)/(rt0.c4))), (((rt0.c1, rt0.c3, rt0.c1, '')) NOT BETWEEN ((TRIM(rt0.c2, rt0.c3), ((rt0.c4) BETWEEN (rt0.c1) AND (x'57')), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)LIKE(rt0.c0)))) AND ((((x'8f42') IS FALSE), (NULL IN (rt0.c2, rt0.c2)), ((rt0.c0) IS TRUE), (((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((0.9764418409055422, rt0.c3, rt0.c3)))))) ASC  NULLS FIRST LIMIT 0x0;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (rt0.c4);
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (((rt0.c4)AND(CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS NUMERIC)))) ORDER BY ((HEX(0.7371304901315668))OR((rt0.c1 IN ()))) INTERSECT SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE ((((((rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c3))))<(((rt0.c4) BETWEEN (rt0.c1) AND ('1161160780'))))) ORDER BY ((HEX(0.7371304901315668))OR((rt0.c1 IN ())));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))IS NOT(rt0.c4))) ORDER BY CAST(rt0.c4 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST, NULL COLLATE RTRIM  NULLS FIRST, rt0.c4;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))IS NOT(rt0.c4))) ORDER BY (~ (((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)))OR(-1420745692)))) ASC, (UPPER(DISTINCT 0.6382257372552298) IN ('826703244')) DESC LIMIT 0X1;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN (((rt0.c0) NOTNULL), rt0.c0 COLLATE BINARY))) ORDER BY CAST(0Xffffffff9ec4d995 AS TEXT) ASC, (((rt0.c0) IS FALSE) IN ())  NULLS LAST;
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN (((rt0.c0) NOTNULL), rt0.c0 COLLATE BINARY))) ORDER BY CAST(0xffffffff9ec4d995 AS TEXT) ASC, (((rt0.c0) IS FALSE) IN ())  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(rt0.c0, rt0.c4)) ORDER BY ((((0Xffffffffb2fc80a4)OR(rt0.c0)))OR((rt0.c2 IN ())))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((IFNULL(rt0.c0, rt0.c4))AND((((rt0.c1 IN ()))>>(((rt0.c4) IS FALSE)))))) ORDER BY ((((-1292074844)OR(rt0.c0)))OR((rt0.c2 IN ())))  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) NOTNULL)) ORDER BY ((((-1292074844)OR(rt0.c0)))OR((rt0.c2 IN ())))  NULLS LAST;
SELECT * FROM rt0 WHERE ('<SQ') ORDER BY ((rt0.c3)GLOB(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST, CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)) THEN LENGTH(rt0.c0) ELSE rt0.c3 END ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((('<SQ')AND(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM))) ORDER BY ((rt0.c3)GLOB(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST, CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)) THEN LENGTH(rt0.c0) ELSE rt0.c3 END ASC  NULLS LAST INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c0)OR(rt0.c4)))*(CASE WHEN 0.36819867644683957 THEN rt0.c2 WHEN rt0.c2 THEN x'660e' WHEN rt0.c1 THEN rt0.c4 END))) ORDER BY ((rt0.c3)GLOB(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST, CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)) THEN LENGTH(rt0.c0) ELSE rt0.c3 END ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ('<SQ') ORDER BY ((rt0.c3)GLOB(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST, CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)) THEN LENGTH(rt0.c0) ELSE rt0.c3 END ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((('<SQ')AND(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM))) ORDER BY ((rt0.c3)GLOB(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST, CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)) THEN LENGTH(rt0.c0) ELSE rt0.c3 END ASC  NULLS LAST INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c0)OR(rt0.c4)))*(CASE WHEN 0.36819867644683957 THEN rt0.c2 WHEN rt0.c2 THEN x'660e' WHEN rt0.c1 THEN rt0.c4 END))) ORDER BY ((rt0.c3)GLOB(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST, CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)) THEN LENGTH(rt0.c0) ELSE rt0.c3 END ASC  NULLS LAST;
SELECT MAX(rt0.c3) FROM rt0 WHERE ((((rt0.c3 COLLATE RTRIM, rt0.c4 COLLATE BINARY, (rt0.c2 IN ())))>=((json_object(rt0.c2, rt0.c1, rt0.c1, rt0.c3, '&'), ROUND(rt0.c3, 'uu-/^R'), (~ (rt0.c4)))))) ORDER BY ((rt0.c1) IS FALSE) DESC  NULLS FIRST, ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))&(((rt0.c4)&(rt0.c4)))), ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) BETWEEN (((rt0.c0) IS TRUE)) AND ((+ (rt0.c4)))) ASC;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE ((((((rt0.c3 COLLATE RTRIM, rt0.c4 COLLATE BINARY, (rt0.c2 IN ())))>((json_object(rt0.c2, rt0.c1, rt0.c1, rt0.c3, '&'), ROUND(rt0.c3, 'uu-/^R'), (~ (rt0.c4))))))AND(LIKELY(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)))) ORDER BY ((rt0.c1) IS FALSE) DESC  NULLS FIRST, ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))&(((rt0.c4)&(rt0.c4)))), ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) BETWEEN (((rt0.c0) IS TRUE)) AND ((+ (rt0.c4)))) ASC LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY CASE rt0.c2  WHEN 0.8759034093333612 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY;
SELECT ALL * FROM rt0 WHERE (((rt0.c3)AND(((rt0.c2)&(rt0.c0)) COLLATE BINARY))) ORDER BY CASE rt0.c2  WHEN 0.8759034093333612 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY LIMIT 1;
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY CASE rt0.c2  WHEN 0.8759034093333612 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY;
SELECT ALL * FROM rt0 WHERE (((rt0.c3)AND(((rt0.c2)&(rt0.c0)) COLLATE BINARY))) ORDER BY CASE rt0.c2  WHEN 0.8759034093333612 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY LIMIT 1;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (rt0.c3) ORDER BY (rt0.c3 IN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 END, '⋘3ㆎgT')) DESC  NULLS LAST;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (((rt0.c3)AND((((((((- (rt0.c3)))OR(rt0.c4)))OR((~ (rt0.c4)))))OR((rt0.c4 IN ('1724650679'))))))) ORDER BY (rt0.c3 IN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 END, '⋘3ㆎgT')) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))|((rt0.c2 IN (rt0.c4))))) ORDER BY ((((((((0.5067330884058259)AND(rt0.c0)))AND(rt0.c2)))OR('-1485311517')))OR(rt0.c2)) COLLATE BINARY;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))|((rt0.c2 IN (rt0.c4)))))AND((((rt0.c1 IN (rt0.c3)))IS NOT('1831174746'))))) ORDER BY ((((((((0.5067330884058259)AND(rt0.c0)))AND(rt0.c2)))OR('-1485311517')))OR(rt0.c2)) COLLATE BINARY INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c0))) BETWEEN (((rt0.c1)&(rt0.c2))) AND ((((NULL, rt0.c1))=((rt0.c3, rt0.c4)))))) ORDER BY ((((((((0.5067330884058259)AND(rt0.c0)))AND(rt0.c2)))OR('-1485311517')))OR(rt0.c2)) COLLATE BINARY;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))|((rt0.c2 IN (rt0.c4))))) ORDER BY ((((((((0.5067330884058259)AND(rt0.c0)))AND(rt0.c2)))OR('-1485311517')))OR(rt0.c2)) COLLATE BINARY;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))|((rt0.c2 IN (rt0.c4)))))AND((((rt0.c1 IN (rt0.c3)))IS NOT('1831174746'))))) ORDER BY ((((((((0.5067330884058259)AND(rt0.c0)))AND(rt0.c2)))OR('-1485311517')))OR(rt0.c2)) COLLATE BINARY INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c0))) BETWEEN (((rt0.c1)&(rt0.c2))) AND ((((NULL, rt0.c1))=((rt0.c3, rt0.c4)))))) ORDER BY ((((((((0.5067330884058259)AND(rt0.c0)))AND(rt0.c2)))OR('-1485311517')))OR(rt0.c2)) COLLATE BINARY;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3)!=(rt0.c2)) COLLATE BINARY);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((rt0.c3)<>(rt0.c2)) COLLATE BINARY) ORDER BY CASE WHEN (~ (rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) END ASC LIMIT 4 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((((((((((((((((NULL)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(COALESCE(DISTINCT rt0.c0, rt0.c4))))AND(((NULL)+(rt0.c2)))))AND(((((((rt0.c0)AND(rt0.c2)))AND('-2127062399')))OR(rt0.c3)))))OR(rt0.c2 COLLATE RTRIM))) ORDER BY CASE WHEN (~ (rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) END ASC LIMIT 4;
SELECT * FROM rt0 WHERE (((((rt0.c2)<<(rt0.c1))) NOT BETWEEN ((rt0.c2 IN ())) AND (TRIM(DISTINCT rt0.c0)))) ORDER BY (((rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((rt0.c1, rt0.c3, 'ro*?}Vou')) AND ((rt0.c1, rt0.c3, rt0.c1))) COLLATE BINARY, CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((rt0.c3)<>(rt0.c0)) THEN ((rt0.c1)>=(-1335560884)) WHEN (rt0.c3 IN ()) THEN ((rt0.c2)!=(rt0.c1)) ELSE ((rt0.c4)/(rt0.c1)) END DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)<<(rt0.c1))) NOT BETWEEN ((rt0.c2 IN ())) AND (TRIM(DISTINCT rt0.c0)))) ORDER BY (((rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((rt0.c1, rt0.c3, 'ro*?}Vou')) AND ((rt0.c1, rt0.c3, rt0.c1))) COLLATE BINARY, CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((rt0.c3)<>(rt0.c0)) THEN ((rt0.c1)>=(-1335560884)) WHEN (rt0.c3 IN ()) THEN ((rt0.c2)<>(rt0.c1)) ELSE ((rt0.c4)/(rt0.c1)) END DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c2)<<(rt0.c1))) NOT BETWEEN ((rt0.c2 IN ())) AND (TRIM(DISTINCT rt0.c0)))) ORDER BY (((rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((rt0.c1, rt0.c3, 'ro*?}Vou')) AND ((rt0.c1, rt0.c3, rt0.c1))) COLLATE BINARY, CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((rt0.c3)<>(rt0.c0)) THEN ((rt0.c1)>=(-1335560884)) WHEN (rt0.c3 IN ()) THEN ((rt0.c2)!=(rt0.c1)) ELSE ((rt0.c4)/(rt0.c1)) END DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)<<(rt0.c1))) NOT BETWEEN ((rt0.c2 IN ())) AND (TRIM(DISTINCT rt0.c0)))) ORDER BY (((rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((rt0.c1, rt0.c3, 'ro*?}Vou')) AND ((rt0.c1, rt0.c3, rt0.c1))) COLLATE BINARY, CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((rt0.c3)<>(rt0.c0)) THEN ((rt0.c1)>=(-1335560884)) WHEN (rt0.c3 IN ()) THEN ((rt0.c2)<>(rt0.c1)) ELSE ((rt0.c4)/(rt0.c1)) END DESC  NULLS FIRST;
SELECT MAX(rt0.c4) FROM rt0 WHERE ((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c3)), ((rt0.c2)&(rt0.c3)), 0.6494961136280326))<=((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END, 'Igᐘy', NULLIF(rt0.c4, rt0.c4))))) ORDER BY '1671379285'  NULLS FIRST;
SELECT MAX(rt0.c4) FROM rt0 WHERE ((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c3)), ((rt0.c2)&(rt0.c3)), 0.6494961136280326))<=((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END, 'Igᐘy', NULLIF(rt0.c4, rt0.c4))))) ORDER BY (NOT (HEX(DISTINCT rt0.c1))) DESC  NULLS LAST, (+ (SQLITE_VERSION())) DESC LIMIT 0X0;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (((((rt0.c1)OR(rt0.c3))) NOTNULL)) ORDER BY (((rt0.c4 IN (rt0.c1)))LIKE(((rt0.c4)>>(rt0.c1))))  NULLS LAST, TIME(((rt0.c0) BETWEEN (rt0.c2) AND ('0.3916842090229713')), ((((((((rt0.c1)AND('1bj>p.')))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0)), rt0.c4, rt0.c3, NULL COLLATE NOCASE, rt0.c0 COLLATE NOCASE, ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))) ASC  NULLS LAST;
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c3))) NOTNULL))AND((((rt0.c2, rt0.c3, rt0.c4, rt0.c0)) BETWEEN ((x'd1' COLLATE RTRIM, ((((NULL)OR(rt0.c2)))AND(rt0.c3)), ((rt0.c1)OR(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((rt0.c0 COLLATE BINARY, ((rt0.c1)<=(rt0.c1)), COALESCE(rt0.c3, 0.9615478493729646), 0.6519266735071056)))))) ORDER BY (((rt0.c4 IN (rt0.c1)))LIKE(((rt0.c4)>>(rt0.c1))))  NULLS LAST, TIME(((rt0.c0) BETWEEN (rt0.c2) AND ('0.3916842090229713')), ((((((((rt0.c1)AND('1bj>p.')))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0)), rt0.c4, rt0.c3, NULL COLLATE NOCASE, rt0.c0 COLLATE NOCASE, ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))) ASC  NULLS LAST;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE ((((((rt0.c0)<=(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))))>((TYPEOF(DISTINCT rt0.c3), CAST(rt0.c2 AS BLOB)))));
SELECT MIN(rt0.c4) FROM rt0 WHERE ((((((rt0.c0)<(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))))>((TYPEOF(DISTINCT rt0.c3), CAST(rt0.c2 AS BLOB))))) ORDER BY ((rt0.c0)!=(rt0.c1)) COLLATE RTRIM DESC, ((rt0.c2 COLLATE NOCASE) NOT NULL) DESC  NULLS LAST, ((((((((((((NULL)AND((((rt0.c4))>=((rt0.c4))))))OR((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c0, rt0.c1))))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND((NOT (rt0.c1)))))OR(NULL)))OR(CAST(rt0.c3 AS INTEGER))) DESC INTERSECT SELECT MIN(rt0.c4) FROM rt0 WHERE (((((rt0.c0) ISNULL))||(UNLIKELY(rt0.c0)))) ORDER BY ((rt0.c0)!=(rt0.c1)) COLLATE RTRIM DESC, ((rt0.c2 COLLATE NOCASE) NOT NULL) DESC  NULLS LAST, ((((((((((((NULL)AND((((rt0.c4))>=((rt0.c4))))))OR((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c0, rt0.c1))))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND((NOT (rt0.c1)))))OR(NULL)))OR(CAST(rt0.c3 AS INTEGER))) DESC;
SELECT MIN(rt0.c0) FROM rt0 WHERE (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM) ORDER BY x'' ASC  NULLS LAST;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM)AND((((rt0.c4)) NOT BETWEEN ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 END)))))) ORDER BY (((rt0.c4) NOT BETWEEN (x'ccd8') AND (-1384340350)) IN (((rt0.c1) IS FALSE)))  NULLS LAST, ((rt0.c0 COLLATE NOCASE) NOT NULL)  NULLS LAST INTERSECT SELECT ALL MIN(rt0.c0) FROM rt0 WHERE ((((LIKELY(rt0.c4), 2002921546, (+ (rt0.c1)), ((x'e3') NOT NULL), ((rt0.c0)-(rt0.c4))))>=((rt0.c3 COLLATE BINARY, (((rt0.c0))!=((rt0.c2))), 0xffffffffef99f1be, (rt0.c0 IN (rt0.c1)), 0X5cd4e08a)))) ORDER BY (((rt0.c4) NOT BETWEEN (x'ccd8') AND (0xffffffffad7ca482)) IN (((rt0.c1) IS FALSE)))  NULLS LAST, ((rt0.c0 COLLATE NOCASE) NOT NULL)  NULLS LAST;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (json_extract(((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c3)), ((rt0.c3)GLOB(NULL))));
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (json_extract(((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c3)), ((rt0.c3)GLOB(NULL)))) ORDER BY ((CAST(rt0.c3 AS NUMERIC))<=(((rt0.c2)/(rt0.c0)))) DESC, CAST((- (rt0.c0)) AS TEXT) ASC  NULLS LAST LIMIT 0X0;
SELECT * FROM rt0 WHERE (LOWER((((rt0.c3, rt0.c1, NULL))==((rt0.c3, rt0.c4, rt0.c4))))) ORDER BY ((NULL)LIKE(((((((((((rt0.c1)OR(rt0.c0)))OR('K3ep|6')))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))) DESC, ((+ (rt0.c4)) IN ());
SELECT DISTINCT * FROM rt0 WHERE (LOWER((((rt0.c3, rt0.c1, NULL))=((rt0.c3, rt0.c4, rt0.c4))))) ORDER BY ((NULL)LIKE(((((((((((rt0.c1)OR(rt0.c0)))OR('K3ep|6')))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))) DESC, ((+ (rt0.c4)) IN ()) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE RTRIM) ORDER BY ((NULL)LIKE(((((((((((rt0.c1)OR(rt0.c0)))OR('K3ep|6')))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))) DESC, ((+ (rt0.c4)) IN ());
SELECT * FROM rt0 WHERE (LOWER((((rt0.c3, rt0.c1, NULL))==((rt0.c3, rt0.c4, rt0.c4))))) ORDER BY ((NULL)LIKE(((((((((((rt0.c1)OR(rt0.c0)))OR('K3ep|6')))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))) DESC, ((+ (rt0.c4)) IN ());
SELECT ALL * FROM rt0 WHERE ('-423276572') ORDER BY ((x'0c' IN (rt0.c1)) IN (((rt0.c4) BETWEEN (rt0.c4) AND (0X129807c9))))  NULLS FIRST, COALESCE(((rt0.c4)OR(rt0.c3)), ((((((rt0.c1)OR(NULL)))OR(rt0.c1)))OR(rt0.c1)), rt0.c3, rt0.c3)  NULLS FIRST, ((((((rt0.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN 0Xc8a80a5 ELSE rt0.c0 END)))AND(((0.5755927985172933) NOT NULL))))OR((((rt0.c3, 0X64f41d09, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c4, rt0.c3, rt0.c4)) AND ((rt0.c1, rt0.c0, 0Xffffffff94d9d351, rt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((('-423276572')AND((((- (rt0.c1)))&(((rt0.c0)||(rt0.c2))))))) ORDER BY ((x'0c' IN (rt0.c1)) IN (((rt0.c4) BETWEEN (rt0.c4) AND (311953353))))  NULLS FIRST, COALESCE(((rt0.c4)OR(rt0.c3)), ((((((rt0.c1)OR(NULL)))OR(rt0.c1)))OR(rt0.c1)), rt0.c3, rt0.c3)  NULLS FIRST, ((((((rt0.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN 0Xc8a80a5 ELSE rt0.c0 END)))AND(((0.5755927985172933) NOT NULL))))OR((((rt0.c3, 1693719817, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c4, rt0.c3, rt0.c4)) AND ((rt0.c1, rt0.c0, 0Xffffffff94d9d351, rt0.c0))))) ASC  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE ('-423276572') ORDER BY ((x'0c' IN (rt0.c1)) IN (((rt0.c4) BETWEEN (rt0.c4) AND (0X129807c9))))  NULLS FIRST, COALESCE(((rt0.c4)OR(rt0.c3)), ((((((rt0.c1)OR(NULL)))OR(rt0.c1)))OR(rt0.c1)), rt0.c3, rt0.c3)  NULLS FIRST, ((((((rt0.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN 0Xc8a80a5 ELSE rt0.c0 END)))AND(((0.5755927985172933) NOT NULL))))OR((((rt0.c3, 0X64f41d09, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c4, rt0.c3, rt0.c4)) AND ((rt0.c1, rt0.c0, 0Xffffffff94d9d351, rt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((('-423276572')AND((((- (rt0.c1)))&(((rt0.c0)||(rt0.c2))))))) ORDER BY ((x'0c' IN (rt0.c1)) IN (((rt0.c4) BETWEEN (rt0.c4) AND (311953353))))  NULLS FIRST, COALESCE(((rt0.c4)OR(rt0.c3)), ((((((rt0.c1)OR(NULL)))OR(rt0.c1)))OR(rt0.c1)), rt0.c3, rt0.c3)  NULLS FIRST, ((((((rt0.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN 0Xc8a80a5 ELSE rt0.c0 END)))AND(((0.5755927985172933) NOT NULL))))OR((((rt0.c3, 1693719817, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c4, rt0.c3, rt0.c4)) AND ((rt0.c1, rt0.c0, 0Xffffffff94d9d351, rt0.c0))))) ASC  NULLS LAST LIMIT 0X2;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c4) IS TRUE));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c4) IS TRUE))AND(((rt0.c4) ISNULL)))) ORDER BY CAST(((rt0.c4)IS NOT(rt0.c3)) AS NUMERIC), COALESCE(DISTINCT (rt0.c2 IN (rt0.c4, rt0.c1)), rt0.c1, (((rt0.c1))<=((rt0.c3)))) ASC INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((((+ (rt0.c2)))AND(rt0.c2 COLLATE RTRIM)))OR((- (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE))) ORDER BY CAST(((rt0.c4)IS NOT(rt0.c3)) AS NUMERIC), COALESCE(DISTINCT (rt0.c2 IN (rt0.c4, rt0.c1)), rt0.c1, (((rt0.c1))<=((rt0.c3)))) ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))&(((rt0.c4)/(rt0.c0)))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))&(((rt0.c4)/(rt0.c0))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((rt0.c3 COLLATE NOCASE IN ())) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))&(((rt0.c4)/(rt0.c0)))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))&(((rt0.c4)/(rt0.c0))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((rt0.c3 COLLATE NOCASE IN ())) LIMIT 1;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c2)OR(NULL)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c4)))AND(x'5011')))LIKE((('|,\>?99') IS FALSE))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((((rt0.c2)OR(NULL)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c4)))AND(x'5011')))LIKE((('|,\>?99') IS FALSE))))AND((((88544582, rt0.c1, rt0.c4)) BETWEEN (((NOT (rt0.c1)), (rt0.c0 IN (rt0.c0)), CASE WHEN rt0.c3 THEN '1161160780' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)) AND ((TRIM(DISTINCT rt0.c0, rt0.c1), (- (rt0.c3)), (((rt0.c1))>=((0.9621641802607763))))))))) LIMIT 1 INTERSECT SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (rt0.c4 COLLATE NOCASE) LIMIT 1;
SELECT * FROM rt0 WHERE (((rt0.c1)<>(((rt0.c2) NOT NULL)))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE DESC  NULLS LAST, (((- (rt0.c4)))<(((((((((NULL)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c2))))  NULLS FIRST, ((((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3))) NOTNULL), '0.3978808098041813'  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)>(((rt0.c2) NOT NULL))))AND((PRINTF(rt0.c2, rt0.c1, rt0.c3, rt0.c1) IN (((((((((((0.8153825423469797)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4))))))) ORDER BY rt0.c0 LIMIT 2;
SELECT * FROM rt0 WHERE (((rt0.c1)<>(((rt0.c2) NOT NULL)))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE DESC  NULLS LAST, (((- (rt0.c4)))<(((((((((NULL)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c2))))  NULLS FIRST, ((((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3))) NOTNULL), '0.3978808098041813'  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)>(((rt0.c2) NOT NULL))))AND((PRINTF(rt0.c2, rt0.c1, rt0.c3, rt0.c1) IN (((((((((((0.8153825423469797)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4))))))) ORDER BY rt0.c0 LIMIT 2;
SELECT * FROM rt0 WHERE (((rt0.c0)/(rt0.c4)) COLLATE BINARY) ORDER BY x'180021' COLLATE NOCASE, rt0.c2;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)/(rt0.c4)) COLLATE BINARY) ORDER BY x'180021' COLLATE NOCASE, rt0.c2 LIMIT 0x0;
SELECT * FROM rt0 WHERE (((rt0.c0)/(rt0.c4)) COLLATE BINARY) ORDER BY x'180021' COLLATE NOCASE, rt0.c2;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)/(rt0.c4)) COLLATE BINARY) ORDER BY x'180021' COLLATE NOCASE, rt0.c2 LIMIT 0x0;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)-(rt0.c4)) COLLATE RTRIM) ORDER BY (((rt0.c4 IN (rt0.c1)))GLOB(rt0.c0 COLLATE BINARY))  NULLS LAST, (((((NOT (rt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(rt0.c3))  NULLS FIRST, CASE ((rt0.c3)|(x''))  WHEN ((((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c4)) THEN NULL WHEN ((rt0.c2)LIKE(rt0.c2)) THEN ((rt0.c2)=(rt0.c2)) ELSE 0.5687102069242116 END ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c2)-(rt0.c4)) COLLATE RTRIM)AND(x'a0'))) ORDER BY (((rt0.c4 IN (rt0.c1)))GLOB(rt0.c0 COLLATE BINARY))  NULLS LAST, (((((NOT (rt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(rt0.c3))  NULLS FIRST, CASE ((rt0.c3)|(x''))  WHEN ((((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c4)) THEN NULL WHEN ((rt0.c2)LIKE(rt0.c2)) THEN ((rt0.c2)==(rt0.c2)) ELSE 0.5687102069242116 END ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((LIKELY(DISTINCT rt0.c3))AND(rt0.c2 COLLATE NOCASE)))OR((rt0.c2 IN ()))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((LIKELY(DISTINCT rt0.c3))AND(rt0.c2 COLLATE NOCASE)))OR((rt0.c2 IN ()))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4)>=(rt0.c4))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN '0.5546311254982884' WHEN rt0.c2 THEN ((rt0.c2)<(rt0.c0)) END);
SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c4)>(rt0.c4))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN '0.5546311254982884' WHEN rt0.c2 THEN ((rt0.c2)<(rt0.c0)) END)AND(rt0.c3))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOTNULL)) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4)>=(rt0.c4))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN '0.5546311254982884' WHEN rt0.c2 THEN ((rt0.c2)<(rt0.c0)) END);
SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c4)>(rt0.c4))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN '0.5546311254982884' WHEN rt0.c2 THEN ((rt0.c2)<(rt0.c0)) END)AND(rt0.c3))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOTNULL)) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN 0x350c20e4 THEN rt0.c1 END) NOT NULL)) ORDER BY (((NOT (rt0.c3))) NOTNULL);
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN 889987300 THEN rt0.c1 END) NOT NULL)) ORDER BY (((NOT (rt0.c3))) NOTNULL) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY (((NOT (rt0.c3))) NOTNULL) LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN 0x350c20e4 THEN rt0.c1 END) NOT NULL)) ORDER BY (((NOT (rt0.c3))) NOTNULL);
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN 889987300 THEN rt0.c1 END) NOT NULL)) ORDER BY (((NOT (rt0.c3))) NOTNULL) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY (((NOT (rt0.c3))) NOTNULL) LIMIT 0X2;
SELECT MIN(rt0.c1) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL)  NULLS FIRST, 'A' ASC, (+ (((rt0.c0)>(rt0.c3))))  NULLS LAST;
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0  NULLS LAST;
SELECT MAX(rt0.c1) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE '叨[8t' END) NOT BETWEEN ((rt0.c3 IN ())) AND (CAST(rt0.c4 AS TEXT))));
SELECT MAX(rt0.c1) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE '叨[8t' END) NOT BETWEEN ((rt0.c3 IN ())) AND (CAST(rt0.c4 AS TEXT)))) ORDER BY (('O')GLOB((((rt0.c1, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c4, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2)))))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((CASE -1213108057  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END)LIKE(TRIM(rt0.c0, rt0.c4)))) ORDER BY (('O')GLOB((((rt0.c1, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c4, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2)))))  NULLS FIRST LIMIT 1;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (CASE (((rt0.c4))==((rt0.c0)))  WHEN rt0.c0 THEN (+ (rt0.c3)) END) ORDER BY CASE ((rt0.c3)||(NULL))  WHEN ((rt0.c1) IS TRUE) THEN 0.8738438726719402 WHEN highlight(rt0.c0, rt0.c1, 0xffffffff9f0d1694, rt0.c0) THEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (- (rt0.c2)) THEN '-849360051' WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((rt0.c0)<<(rt0.c2)) THEN ((rt0.c2)/(rt0.c4)) WHEN ((rt0.c3)|(rt0.c1)) THEN CASE '	適q8'  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN NULL END ELSE CASE rt0.c2  WHEN rt0.c3 THEN x'' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END END  NULLS LAST;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (CASE (((rt0.c4))==((rt0.c0)))  WHEN rt0.c0 THEN (+ (rt0.c3)) END) ORDER BY CASE ((rt0.c3)||(NULL))  WHEN ((rt0.c1) IS TRUE) THEN 0.8738438726719402 WHEN highlight(rt0.c0, rt0.c1, -1626532204, rt0.c0) THEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (- (rt0.c2)) THEN '-849360051' WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((rt0.c0)<<(rt0.c2)) THEN ((rt0.c2)/(rt0.c4)) WHEN ((rt0.c3)|(rt0.c1)) THEN CASE '	適q8'  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN NULL END ELSE CASE rt0.c2  WHEN rt0.c3 THEN x'' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END END  NULLS LAST LIMIT 2;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (CASE (((rt0.c4, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c4, rt0.c1)))  WHEN IFNULL(rt0.c4, rt0.c0) THEN ((rt0.c2)||(rt0.c0)) WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) WHEN 0.9658580160181868 THEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)) END);
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (((CASE (((rt0.c4, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c4, rt0.c1)))  WHEN IFNULL(rt0.c4, rt0.c0) THEN ((rt0.c2)||(rt0.c0)) WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) WHEN 0.9658580160181868 THEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)) END)AND((((rt0.c3, rt0.c4, rt0.c4))<>((rt0.c1, rt0.c0, rt0.c1))) COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN CHAR(rt0.c2, x'', rt0.c3) THEN '//*.sEf)6' WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 END END) ORDER BY 0.8246898401545959 ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN CHAR(rt0.c2, x'', rt0.c3) THEN '//*.sEf)6' WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 END END) ORDER BY (((NOT (rt0.c1)))==(0.07557845120647033)) DESC, ((((rt0.c0)-(rt0.c1))) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND ((- (rt0.c3)))), ((((rt0.c1) IS FALSE))GLOB(((rt0.c4)+('3{r*.Z')))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN CHAR(rt0.c2, x'', rt0.c3) THEN '//*.sEf)6' WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 END END) ORDER BY 0.8246898401545959 ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN CHAR(rt0.c2, x'', rt0.c3) THEN '//*.sEf)6' WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 END END) ORDER BY (((NOT (rt0.c1)))==(0.07557845120647033)) DESC, ((((rt0.c0)-(rt0.c1))) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND ((- (rt0.c3)))), ((((rt0.c1) IS FALSE))GLOB(((rt0.c4)+('3{r*.Z')))) DESC  NULLS LAST;
SELECT MIN(rt0.c0) FROM rt0 WHERE (CASE (((rt0.c2, rt0.c1))<=((rt0.c0, rt0.c4)))  WHEN NULL THEN SQLITE_SOURCE_ID() WHEN CAST(rt0.c3 AS REAL) THEN 0.7310677157556452 WHEN ((rt0.c3)<=(rt0.c4)) THEN UNLIKELY(rt0.c4) ELSE ((rt0.c1)&(rt0.c3)) END) ORDER BY CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE ASC;
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (CASE (((rt0.c2, rt0.c1))==((rt0.c0, rt0.c4)))  WHEN NULL THEN SQLITE_SOURCE_ID() WHEN CAST(rt0.c3 AS REAL) THEN 0.7310677157556452 WHEN ((rt0.c3)=(rt0.c4)) THEN UNLIKELY(rt0.c4) ELSE ((rt0.c1)&(rt0.c3)) END) ORDER BY CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE ASC LIMIT 0X2 INTERSECT SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE ((((rt0.c2, CASE WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3)), ((rt0.c4)>=(rt0.c3))))>=((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)), ((x'8fd3') IS FALSE), LOWER(DISTINCT rt0.c0), ((rt0.c3) NOT NULL))))) ORDER BY CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE ASC LIMIT 0x2;
SELECT MAX(rt0.c0) FROM rt0 WHERE (((CAST(rt0.c3 AS NUMERIC)) IS FALSE)) ORDER BY ((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c4)))OR(((rt0.c3)OR(rt0.c1)))) DESC  NULLS LAST, ((((rt0.c2 COLLATE RTRIM)AND(rt0.c3)))AND(((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c2))))  NULLS LAST;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (((((CAST(rt0.c3 AS NUMERIC)) IS FALSE))AND(((SQLITE_SOURCE_ID()) BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0))))))) ORDER BY CAST((((rt0.c4, rt0.c1))<((rt0.c2, rt0.c2))) AS TEXT) DESC  NULLS FIRST LIMIT 0X1;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN x'5708' END)>>(CAST(rt0.c4 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN x'5708' END)>>(CAST(rt0.c4 AS NUMERIC))))AND(LIKELY((~ (rt0.c4)))))) INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))!=(((rt0.c3)OR(rt0.c4)))));
SELECT * FROM rt0 WHERE (((((NULLIF(rt0.c1, rt0.c3))OR(CAST(rt0.c4 AS TEXT))))OR(CAST(rt0.c2 AS NUMERIC)))) ORDER BY (NOT (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))) DESC;
SELECT * FROM rt0 WHERE (((((((NULLIF(rt0.c1, rt0.c3))OR(CAST(rt0.c4 AS TEXT))))OR(CAST(rt0.c2 AS NUMERIC))))AND(((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4)) COLLATE NOCASE))) ORDER BY CAST((x'' IN (x'11')) AS NUMERIC)  NULLS LAST, ((((((((((rt0.c2) IS FALSE))OR(((rt0.c0) IS TRUE))))AND(CAST(rt0.c4 AS BLOB))))AND(CAST(rt0.c0 AS NUMERIC))))AND((rt0.c0 IN (rt0.c4))));
SELECT * FROM rt0 WHERE (((((NULLIF(rt0.c1, rt0.c3))OR(CAST(rt0.c4 AS TEXT))))OR(CAST(rt0.c2 AS NUMERIC)))) ORDER BY (NOT (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))) DESC;
SELECT * FROM rt0 WHERE (((((((NULLIF(rt0.c1, rt0.c3))OR(CAST(rt0.c4 AS TEXT))))OR(CAST(rt0.c2 AS NUMERIC))))AND(((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4)) COLLATE NOCASE))) ORDER BY CAST((x'' IN (x'11')) AS NUMERIC)  NULLS LAST, ((((((((((rt0.c2) IS FALSE))OR(((rt0.c0) IS TRUE))))AND(CAST(rt0.c4 AS BLOB))))AND(CAST(rt0.c0 AS NUMERIC))))AND((rt0.c0 IN (rt0.c4))));
SELECT MAX(rt0.c2) FROM rt0 WHERE (CASE WHEN (((rt0.c4, rt0.c4, rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c3, rt0.c2, rt0.c4, rt0.c4, NULL)) AND ((rt0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c0))) THEN ((rt0.c1)<=(rt0.c1)) WHEN NULLIF(rt0.c0, rt0.c4) THEN ((rt0.c4) ISNULL) WHEN ((rt0.c0)>(rt0.c4)) THEN ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) WHEN rt0.c4 THEN CAST(rt0.c0 AS REAL) WHEN COALESCE(DISTINCT rt0.c4, rt0.c2, rt0.c1) THEN ((rt0.c2) NOT NULL) END) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c2) NOT NULL))) DESC;
SELECT DISTINCT MAX(rt0.c2) FROM rt0 NOT INDEXED WHERE (((CASE WHEN (((rt0.c4, rt0.c4, rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c3, rt0.c2, rt0.c4, rt0.c4, NULL)) AND ((rt0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c0))) THEN ((rt0.c1)<=(rt0.c1)) WHEN NULLIF(rt0.c0, rt0.c4) THEN ((rt0.c4) ISNULL) WHEN ((rt0.c0)>(rt0.c4)) THEN ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) WHEN rt0.c4 THEN CAST(rt0.c0 AS REAL) WHEN COALESCE(DISTINCT rt0.c4, rt0.c2, rt0.c1) THEN ((rt0.c2) NOT NULL) END)AND((((((~ (rt0.c0)))AND(NULL)))OR(CASE WHEN rt0.c2 THEN rt0.c3 END))))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c2) NOT NULL))) DESC INTERSECT SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((rt0.c1) IS TRUE) COLLATE BINARY) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c2) NOT NULL))) DESC;
SELECT * FROM rt0 WHERE (LIKELY(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) ORDER BY ((((0.9895885614807849) NOT BETWEEN (rt0.c2) AND (rt0.c3))) NOT BETWEEN (LOWER(DISTINCT rt0.c3)) AND (((rt0.c3) IS FALSE))), (rt0.c0 COLLATE NOCASE IN (rt0.c0)) ASC, (CAST(rt0.c0 AS TEXT) IN ((~ (rt0.c3))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (LIKELY(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) ORDER BY ((((0.9895885614807849) NOT BETWEEN (rt0.c2) AND (rt0.c3))) NOT BETWEEN (LOWER(DISTINCT rt0.c3)) AND (((rt0.c3) IS FALSE))), (rt0.c0 COLLATE NOCASE IN (rt0.c0)) ASC, (CAST(rt0.c0 AS TEXT) IN ((~ (rt0.c3))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (LIKELY(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) ORDER BY ((((0.9895885614807849) NOT BETWEEN (rt0.c2) AND (rt0.c3))) NOT BETWEEN (LOWER(DISTINCT rt0.c3)) AND (((rt0.c3) IS FALSE))), (rt0.c0 COLLATE NOCASE IN (rt0.c0)) ASC, (CAST(rt0.c0 AS TEXT) IN ((~ (rt0.c3))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (LIKELY(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) ORDER BY ((((0.9895885614807849) NOT BETWEEN (rt0.c2) AND (rt0.c3))) NOT BETWEEN (LOWER(DISTINCT rt0.c3)) AND (((rt0.c3) IS FALSE))), (rt0.c0 COLLATE NOCASE IN (rt0.c0)) ASC, (CAST(rt0.c0 AS TEXT) IN ((~ (rt0.c3))))  NULLS FIRST;
SELECT MAX(rt0.c1) FROM rt0 WHERE (TYPEOF(DISTINCT rt0.c0 COLLATE RTRIM)) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE RTRIM COLLATE RTRIM DESC, (((- (rt0.c0)))>>(0.06364461351521755)), CASE rt0.c0  WHEN (rt0.c4 IN (0.3896397476201714)) THEN (~ (rt0.c3)) END  NULLS LAST;
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (TYPEOF(DISTINCT rt0.c0 COLLATE RTRIM)) ORDER BY ((CASE rt0.c3  WHEN rt0.c4 THEN 'q' ELSE rt0.c4 END) IS FALSE) DESC, ((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))AND(CAST(rt0.c2 AS TEXT))))OR(SQLITE_COMPILEOPTION_GET(0.27192131122060537))) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE ((- ((((rt0.c3))=((NULL)))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c4 THEN 'q' ELSE rt0.c4 END) IS FALSE) DESC, ((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))AND(CAST(rt0.c2 AS TEXT))))OR(SQLITE_COMPILEOPTION_GET(0.27192131122060537))) DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (CASE WHEN rt0.c4 THEN rt0.c2 END))) ORDER BY LIKELIHOOD(CAST(rt0.c3 AS TEXT), rt0.c2 COLLATE RTRIM)  NULLS LAST, ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c4))) IS TRUE)  NULLS FIRST, (((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c0)), (rt0.c1 IN (rt0.c0, rt0.c3, rt0.c4)), ((0.9621641802607763)&(rt0.c0)), GLOB(rt0.c1, rt0.c3), rt0.c1 COLLATE BINARY))>=((CASE '-831091294'  WHEN rt0.c0 THEN rt0.c3 WHEN -582062666 THEN rt0.c3 END, ((rt0.c0)||(rt0.c3)), rt0.c3 COLLATE NOCASE, LTRIM(rt0.c2, rt0.c1), ((rt0.c3)=(rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (CASE WHEN rt0.c4 THEN rt0.c2 END)))AND(rt0.c1))) ORDER BY LIKELIHOOD(CAST(rt0.c3 AS TEXT), rt0.c2 COLLATE RTRIM)  NULLS LAST, ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c4))) IS TRUE)  NULLS FIRST, (((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c0)), (rt0.c1 IN (rt0.c0, rt0.c3, rt0.c4)), ((0.9621641802607763)&(rt0.c0)), GLOB(rt0.c1, rt0.c3), rt0.c1 COLLATE BINARY))>=((CASE '-831091294'  WHEN rt0.c0 THEN rt0.c3 WHEN 0xffffffffdd4e6db6 THEN rt0.c3 END, ((rt0.c0)||(rt0.c3)), rt0.c3 COLLATE NOCASE, LTRIM(rt0.c2, rt0.c1), ((rt0.c3)==(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (CASE WHEN rt0.c4 THEN rt0.c2 END))) ORDER BY LIKELIHOOD(CAST(rt0.c3 AS TEXT), rt0.c2 COLLATE RTRIM)  NULLS LAST, ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c4))) IS TRUE)  NULLS FIRST, (((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c0)), (rt0.c1 IN (rt0.c0, rt0.c3, rt0.c4)), ((0.9621641802607763)&(rt0.c0)), GLOB(rt0.c1, rt0.c3), rt0.c1 COLLATE BINARY))>=((CASE '-831091294'  WHEN rt0.c0 THEN rt0.c3 WHEN -582062666 THEN rt0.c3 END, ((rt0.c0)||(rt0.c3)), rt0.c3 COLLATE NOCASE, LTRIM(rt0.c2, rt0.c1), ((rt0.c3)=(rt0.c1)))));
SELECT * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c2, rt0.c1)))>(TRIM(rt0.c3)))) ORDER BY DATETIME(((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c4)), ((rt0.c3) NOTNULL), NULLIF(rt0.c1, 'f'), (((rt0.c0, rt0.c3, rt0.c4))>((rt0.c3, rt0.c0, rt0.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4 IN (rt0.c2)))>(TRIM(rt0.c3))))AND((((rt0.c3, rt0.c0)) BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1)), ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)))) AND ((((((((((((((rt0.c0)OR(rt0.c2)))OR(0X67a2a0b)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c4)), CAST(rt0.c1 AS BLOB))))))) ORDER BY (((rt0.c3)) BETWEEN ((((((((rt0.c4)AND(rt0.c0)))OR(0.9278722358506356)))OR(rt0.c4)))) AND (((rt0.c2 IN ())))) DESC  NULLS LAST, NULL ASC  NULLS FIRST LIMIT 0;
SELECT * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c2, rt0.c1)))>(TRIM(rt0.c3)))) ORDER BY DATETIME(((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c4)), ((rt0.c3) NOTNULL), NULLIF(rt0.c1, 'f'), (((rt0.c0, rt0.c3, rt0.c4))>((rt0.c3, rt0.c0, rt0.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4 IN (rt0.c2)))>(TRIM(rt0.c3))))AND((((rt0.c3, rt0.c0)) BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1)), ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)))) AND ((((((((((((((rt0.c0)OR(rt0.c2)))OR(0X67a2a0b)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c4)), CAST(rt0.c1 AS BLOB))))))) ORDER BY (((rt0.c3)) BETWEEN ((((((((rt0.c4)AND(rt0.c0)))OR(0.9278722358506356)))OR(rt0.c4)))) AND (((rt0.c2 IN ())))) DESC  NULLS LAST, NULL ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((((((((((NULL)OR(((rt0.c4)>>(rt0.c0)))))OR(((rt0.c3) IS FALSE))))AND(((rt0.c3)*(rt0.c2)))))AND(((((((NULL)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)))))AND((NULL IN (rt0.c0)))));
SELECT * FROM rt0 WHERE (((((((((((((NULL)OR(((rt0.c4)>>(rt0.c0)))))OR(((rt0.c3) IS FALSE))))AND(((rt0.c3)*(rt0.c2)))))AND(((((((NULL)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)))))AND((NULL IN (rt0.c0)))))AND(CAST(((x'') NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)))) ORDER BY 8.26703244E8 DESC  NULLS LAST, ((((-1240337007) BETWEEN (rt0.c2) AND ('^.,U'))) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (LTRIM(rt0.c2, rt0.c0))), ((((rt0.c4) BETWEEN (x'') AND (rt0.c1))) NOT BETWEEN ((((rt0.c4))>((rt0.c4)))) AND (((rt0.c2)+(rt0.c1)))) INTERSECT SELECT ALL * FROM rt0 WHERE (((NULL) NOTNULL)) ORDER BY 8.26703244E8 DESC  NULLS LAST, ((((0xffffffffb611f591) BETWEEN (rt0.c2) AND ('^.,U'))) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (LTRIM(rt0.c2, rt0.c0))), ((((rt0.c4) BETWEEN (x'') AND (rt0.c1))) NOT BETWEEN ((((rt0.c4))>((rt0.c4)))) AND (((rt0.c2)+(rt0.c1))));
SELECT ALL * FROM rt0 WHERE (((((((((((NULL)OR(((rt0.c4)>>(rt0.c0)))))OR(((rt0.c3) IS FALSE))))AND(((rt0.c3)*(rt0.c2)))))AND(((((((NULL)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)))))AND((NULL IN (rt0.c0)))));
SELECT * FROM rt0 WHERE (((((((((((((NULL)OR(((rt0.c4)>>(rt0.c0)))))OR(((rt0.c3) IS FALSE))))AND(((rt0.c3)*(rt0.c2)))))AND(((((((NULL)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)))))AND((NULL IN (rt0.c0)))))AND(CAST(((x'') NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)))) ORDER BY 8.26703244E8 DESC  NULLS LAST, ((((-1240337007) BETWEEN (rt0.c2) AND ('^.,U'))) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (LTRIM(rt0.c2, rt0.c0))), ((((rt0.c4) BETWEEN (x'') AND (rt0.c1))) NOT BETWEEN ((((rt0.c4))>((rt0.c4)))) AND (((rt0.c2)+(rt0.c1)))) INTERSECT SELECT ALL * FROM rt0 WHERE (((NULL) NOTNULL)) ORDER BY 8.26703244E8 DESC  NULLS LAST, ((((0xffffffffb611f591) BETWEEN (rt0.c2) AND ('^.,U'))) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (LTRIM(rt0.c2, rt0.c0))), ((((rt0.c4) BETWEEN (x'') AND (rt0.c1))) NOT BETWEEN ((((rt0.c4))>((rt0.c4)))) AND (((rt0.c2)+(rt0.c1))));
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOTNULL) THEN (- (rt0.c1)) ELSE CHAR(rt0.c2, rt0.c4, rt0.c3) END);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN ((rt0.c2) NOTNULL) THEN (- (rt0.c1)) ELSE CHAR(rt0.c2, rt0.c4, rt0.c3) END)AND(CAST(rt0.c3 AS TEXT)))) ORDER BY (NOT (DATETIME(rt0.c0, rt0.c4, rt0.c1))) ASC  NULLS FIRST LIMIT 0X0;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOTNULL) THEN (- (rt0.c1)) ELSE CHAR(rt0.c2, rt0.c4, rt0.c3) END);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN ((rt0.c2) NOTNULL) THEN (- (rt0.c1)) ELSE CHAR(rt0.c2, rt0.c4, rt0.c3) END)AND(CAST(rt0.c3 AS TEXT)))) ORDER BY (NOT (DATETIME(rt0.c0, rt0.c4, rt0.c1))) ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((- ((((rt0.c0)) NOT BETWEEN ((x'ebf81de4')) AND ((rt0.c3))))));
SELECT DISTINCT * FROM rt0 WHERE ((- ((((rt0.c0)) NOT BETWEEN ((x'ebf81de4')) AND ((rt0.c3)))))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE ((- ((((rt0.c0)) NOT BETWEEN ((x'ebf81de4')) AND ((rt0.c3))))));
SELECT DISTINCT * FROM rt0 WHERE ((- ((((rt0.c0)) NOT BETWEEN ((x'ebf81de4')) AND ((rt0.c3)))))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER))IS NOT(CAST(rt0.c4 AS INTEGER)))) ORDER BY ((0.7178185028709279) IS FALSE) COLLATE BINARY ASC, CAST(rt0.c4 AS BLOB)  NULLS LAST, CAST((rt0.c2 IN ()) AS BLOB), ((rt0.c3)|(rt0.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c3 AS INTEGER))IS NOT(CAST(rt0.c4 AS INTEGER))))AND((((((rt0.c0, rt0.c1))>=((rt0.c1, rt0.c3)))) IS FALSE)))) ORDER BY ((0.7178185028709279) IS FALSE) COLLATE BINARY ASC, CAST(rt0.c4 AS BLOB)  NULLS LAST, CAST((rt0.c2 IN ()) AS BLOB), ((rt0.c3)|(rt0.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER))IS NOT(CAST(rt0.c4 AS INTEGER)))) ORDER BY ((0.7178185028709279) IS FALSE) COLLATE BINARY ASC, CAST(rt0.c4 AS BLOB)  NULLS LAST, CAST((rt0.c2 IN ()) AS BLOB), ((rt0.c3)|(rt0.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c3 AS INTEGER))IS NOT(CAST(rt0.c4 AS INTEGER))))AND((((((rt0.c0, rt0.c1))>=((rt0.c1, rt0.c3)))) IS FALSE)))) ORDER BY ((0.7178185028709279) IS FALSE) COLLATE BINARY ASC, CAST(rt0.c4 AS BLOB)  NULLS LAST, CAST((rt0.c2 IN ()) AS BLOB), ((rt0.c3)|(rt0.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c3 AS NUMERIC)  WHEN (-1.369374169E9 IN (rt0.c0)) THEN (rt0.c3 IN ()) END) ORDER BY (((NOT (rt0.c2)))<((~ (rt0.c1)))) DESC  NULLS FIRST, (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN 'Mt%O>rXaX' ELSE rt0.c4 END, ((rt0.c3)&(rt0.c2)), TYPEOF(rt0.c1)))!=((((('/', rt0.c1))<=((rt0.c0, rt0.c0))), CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END, rt0.c3 COLLATE NOCASE)))  NULLS LAST, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c1)))LIKE(rt0.c3 COLLATE RTRIM))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CASE CAST(rt0.c3 AS NUMERIC)  WHEN (-1.369374169E9 IN (rt0.c0)) THEN (rt0.c3 IN ()) END) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c2, rt0.c1)) THEN SQLITE_VERSION() ELSE (('-1469787951') BETWEEN (rt0.c0) AND (rt0.c3)) END  NULLS LAST, (((rt0.c1))>=(((- (rt0.c2))))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4)LIKE(CAST(rt0.c2 AS NUMERIC)))) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c2, rt0.c1)) THEN SQLITE_VERSION() ELSE (('-1469787951') BETWEEN (rt0.c0) AND (rt0.c3)) END  NULLS LAST, (((rt0.c1))>=(((- (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c3 AS NUMERIC)  WHEN (-1.369374169E9 IN (rt0.c0)) THEN (rt0.c3 IN ()) END) ORDER BY (((NOT (rt0.c2)))<((~ (rt0.c1)))) DESC  NULLS FIRST, (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN 'Mt%O>rXaX' ELSE rt0.c4 END, ((rt0.c3)&(rt0.c2)), TYPEOF(rt0.c1)))!=((((('/', rt0.c1))<=((rt0.c0, rt0.c0))), CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END, rt0.c3 COLLATE NOCASE)))  NULLS LAST, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c1)))LIKE(rt0.c3 COLLATE RTRIM))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CASE CAST(rt0.c3 AS NUMERIC)  WHEN (-1.369374169E9 IN (rt0.c0)) THEN (rt0.c3 IN ()) END) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c2, rt0.c1)) THEN SQLITE_VERSION() ELSE (('-1469787951') BETWEEN (rt0.c0) AND (rt0.c3)) END  NULLS LAST, (((rt0.c1))>=(((- (rt0.c2))))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4)LIKE(CAST(rt0.c2 AS NUMERIC)))) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c2, rt0.c1)) THEN SQLITE_VERSION() ELSE (('-1469787951') BETWEEN (rt0.c0) AND (rt0.c3)) END  NULLS LAST, (((rt0.c1))>=(((- (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)))&(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0)))), (NOT (((rt0.c2)IS(rt0.c2)))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY CASE (+ (rt0.c1))  WHEN IFNULL(DISTINCT rt0.c0, rt0.c1) THEN NULL WHEN (((rt0.c3, x''))>=((rt0.c3, rt0.c3))) THEN (((rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3)) AND ((rt0.c2, rt0.c2))) WHEN json_type(rt0.c4) THEN (((rt0.c4, rt0.c4))>((rt0.c1, 0.5937225419918347))) END  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END) ISNULL) DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((- (LTRIM(rt0.c4, rt0.c0)))) ORDER BY CASE (+ (rt0.c1))  WHEN IFNULL(DISTINCT rt0.c0, rt0.c1) THEN NULL WHEN (((rt0.c3, x''))>=((rt0.c3, rt0.c3))) THEN (((rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3)) AND ((rt0.c2, rt0.c2))) WHEN json_type(rt0.c4) THEN (((rt0.c4, rt0.c4))>((rt0.c1, 0.5937225419918347))) END  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END) ISNULL) DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)))&(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0)))), (NOT (((rt0.c2)IS(rt0.c2)))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY CASE (+ (rt0.c1))  WHEN IFNULL(DISTINCT rt0.c0, rt0.c1) THEN NULL WHEN (((rt0.c3, x''))>=((rt0.c3, rt0.c3))) THEN (((rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3)) AND ((rt0.c2, rt0.c2))) WHEN json_type(rt0.c4) THEN (((rt0.c4, rt0.c4))>((rt0.c1, 0.5937225419918347))) END  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END) ISNULL) DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((- (LTRIM(rt0.c4, rt0.c0)))) ORDER BY CASE (+ (rt0.c1))  WHEN IFNULL(DISTINCT rt0.c0, rt0.c1) THEN NULL WHEN (((rt0.c3, x''))>=((rt0.c3, rt0.c3))) THEN (((rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3)) AND ((rt0.c2, rt0.c2))) WHEN json_type(rt0.c4) THEN (((rt0.c4, rt0.c4))>((rt0.c1, 0.5937225419918347))) END  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END) ISNULL) DESC LIMIT 0;
SELECT * FROM rt0 WHERE ((((x'bc')) BETWEEN ((((rt0.c2)>(0.21138158116609207)))) AND ((json_extract(rt0.c4, rt0.c2, rt0.c2, 0.31711248445895235))))) ORDER BY CAST((rt0.c4 IN ()) AS BLOB);
SELECT ALL * FROM rt0 WHERE ((((x'bc')) BETWEEN ((((rt0.c2)>(0.21138158116609207)))) AND ((json_extract(rt0.c4, rt0.c2, rt0.c2, 0.31711248445895235))))) ORDER BY 0.3806972244790138, ((((rt0.c1)IS(rt0.c3)))==(rt0.c1)) LIMIT 0;
SELECT * FROM rt0 WHERE ((((x'bc')) BETWEEN ((((rt0.c2)>(0.21138158116609207)))) AND ((json_extract(rt0.c4, rt0.c2, rt0.c2, 0.31711248445895235))))) ORDER BY CAST((rt0.c4 IN ()) AS BLOB);
SELECT MIN(rt0.c1) FROM rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM);
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((CAST(rt0.c1 AS REAL) COLLATE RTRIM)AND(((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) NOT BETWEEN ('') AND ((((rt0.c2, rt0.c4, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c4, rt0.c2, rt0.c2, rt0.c3)))))))) INTERSECT SELECT MIN(rt0.c1) FROM rt0 WHERE ((((LOWER(rt0.c3), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))<((rt0.c1, rt0.c1))));
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END AS TEXT)) ORDER BY ((((rt0.c4)>=(rt0.c3)))GLOB((- (rt0.c2)))) DESC  NULLS LAST, (((rt0.c0, rt0.c1)) BETWEEN (((((rt0.c1, rt0.c2, x'b0', rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c2, rt0.c1, rt0.c0))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END, ((rt0.c3)LIKE(rt0.c4))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END AS TEXT))AND(((rt0.c0 COLLATE RTRIM) NOT NULL)))) ORDER BY ((((rt0.c4)>=(rt0.c3)))GLOB((- (rt0.c2)))) DESC  NULLS LAST, (((rt0.c0, rt0.c1)) BETWEEN (((((rt0.c1, rt0.c2, x'b0', rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c2, rt0.c1, rt0.c0))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END, ((rt0.c3)LIKE(rt0.c4))))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS TEXT)) ORDER BY ((((rt0.c4)>=(rt0.c3)))GLOB((- (rt0.c2)))) DESC  NULLS LAST, (((rt0.c0, rt0.c1)) BETWEEN (((((rt0.c1, rt0.c2, x'b0', rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c2, rt0.c1, rt0.c0))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END, ((rt0.c3)LIKE(rt0.c4))))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END AS TEXT)) ORDER BY ((((rt0.c4)>=(rt0.c3)))GLOB((- (rt0.c2)))) DESC  NULLS LAST, (((rt0.c0, rt0.c1)) BETWEEN (((((rt0.c1, rt0.c2, x'b0', rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c2, rt0.c1, rt0.c0))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END, ((rt0.c3)LIKE(rt0.c4))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END AS TEXT))AND(((rt0.c0 COLLATE RTRIM) NOT NULL)))) ORDER BY ((((rt0.c4)>=(rt0.c3)))GLOB((- (rt0.c2)))) DESC  NULLS LAST, (((rt0.c0, rt0.c1)) BETWEEN (((((rt0.c1, rt0.c2, x'b0', rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c2, rt0.c1, rt0.c0))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END, ((rt0.c3)LIKE(rt0.c4))))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS TEXT)) ORDER BY ((((rt0.c4)>=(rt0.c3)))GLOB((- (rt0.c2)))) DESC  NULLS LAST, (((rt0.c0, rt0.c1)) BETWEEN (((((rt0.c1, rt0.c2, x'b0', rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c2, rt0.c1, rt0.c0))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END, ((rt0.c3)LIKE(rt0.c4))))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(ABS(DISTINCT rt0.c3) AS REAL));
SELECT * FROM rt0 WHERE (((CAST(ABS(DISTINCT rt0.c3) AS REAL))AND((((rt0.c3, rt0.c3)) NOT BETWEEN (((~ (rt0.c3)), ((rt0.c1) NOTNULL))) AND ((rt0.c2 COLLATE NOCASE, IFNULL(DISTINCT rt0.c1, rt0.c2))))))) ORDER BY -8.31091294E8 ASC  NULLS FIRST LIMIT 0;
SELECT * FROM rt0 WHERE (CAST(ABS(DISTINCT rt0.c3) AS REAL));
SELECT * FROM rt0 WHERE (((CAST(ABS(DISTINCT rt0.c3) AS REAL))AND((((rt0.c3, rt0.c3)) NOT BETWEEN (((~ (rt0.c3)), ((rt0.c1) NOTNULL))) AND ((rt0.c2 COLLATE NOCASE, IFNULL(DISTINCT rt0.c1, rt0.c2))))))) ORDER BY -8.31091294E8 ASC  NULLS FIRST LIMIT 0;
SELECT * FROM rt0 NOT INDEXED WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)<=((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c4)))))) ORDER BY (((rt0.c3) NOTNULL) IN (UNLIKELY(rt0.c2)))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)==((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c4)))))) ORDER BY CAST((rt0.c1 IN (rt0.c1, rt0.c0)) AS NUMERIC) ASC  NULLS LAST, ((PRINTF(rt0.c2)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((0.01700008538233222 IN ('')))) ASC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY CAST((rt0.c1 IN (rt0.c1, rt0.c0)) AS NUMERIC) ASC  NULLS LAST, ((PRINTF(rt0.c2)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((0.01700008538233222 IN ('')))) ASC LIMIT 0x1;
SELECT * FROM rt0 NOT INDEXED WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)<=((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c4)))))) ORDER BY (((rt0.c3) NOTNULL) IN (UNLIKELY(rt0.c2)))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)==((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c4)))))) ORDER BY CAST((rt0.c1 IN (rt0.c1, rt0.c0)) AS NUMERIC) ASC  NULLS LAST, ((PRINTF(rt0.c2)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((0.01700008538233222 IN ('')))) ASC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY CAST((rt0.c1 IN (rt0.c1, rt0.c0)) AS NUMERIC) ASC  NULLS LAST, ((PRINTF(rt0.c2)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((0.01700008538233222 IN ('')))) ASC LIMIT 0x1;
SELECT * FROM rt0 WHERE ((((+ (rt0.c2)))+(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END)));
SELECT DISTINCT * FROM rt0 WHERE ((((((+ (rt0.c2)))+(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END)))AND((((((((((((+ (rt0.c1)))OR('635499969')))OR(CASE x''  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)))OR((NOT (rt0.c1)))))AND((rt0.c0 IN ()))))OR((((rt0.c0)) NOT BETWEEN (('-125908590')) AND ((rt0.c2))))))));
SELECT * FROM rt0 WHERE ((((+ (rt0.c2)))+(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END)));
SELECT DISTINCT * FROM rt0 WHERE ((((((+ (rt0.c2)))+(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END)))AND((((((((((((+ (rt0.c1)))OR('635499969')))OR(CASE x''  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)))OR((NOT (rt0.c1)))))AND((rt0.c0 IN ()))))OR((((rt0.c0)) NOT BETWEEN (('-125908590')) AND ((rt0.c2))))))));
SELECT MAX(rt0.c2) FROM rt0 WHERE ((((rt0.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, CAST(rt0.c2 AS REAL), ((rt0.c4)GLOB(rt0.c2)), rt0.c1 COLLATE RTRIM, (~ (rt0.c1)))) AND ((NULL, ((rt0.c4)||(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c3) AND ('2127626537')), (rt0.c2 IN (rt0.c2)), ((rt0.c0)>>(rt0.c2))))));
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE ((((((rt0.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, CAST(rt0.c2 AS REAL), ((rt0.c4)GLOB(rt0.c2)), rt0.c1 COLLATE RTRIM, (~ (rt0.c1)))) AND ((NULL, ((rt0.c4)||(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c3) AND ('2127626537')), (rt0.c2 IN (rt0.c2)), ((rt0.c0)>>(rt0.c2))))))AND(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c4))) BETWEEN ((rt0.c3 IN (rt0.c1, rt0.c3))) AND (CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE x'3a' END))))) LIMIT 6;
SELECT MIN(rt0.c4) FROM rt0 WHERE ((((NOT (NULL)))||(((rt0.c2) NOT NULL))));
SELECT MIN(rt0.c4) FROM rt0 WHERE ((((NOT (NULL)))||(((rt0.c2) NOT NULL)))) LIMIT 0;
SELECT * FROM rt0 WHERE (((rt0.c3)IS(((rt0.c2)!=(rt0.c1))))) ORDER BY ((((~ (rt0.c0)), ((rt0.c4)<=(rt0.c3))))<=((((rt0.c4) NOT NULL), rt0.c1))) DESC, rt0.c1;
SELECT ALL * FROM rt0 WHERE (((rt0.c3)IS(((rt0.c2)!=(rt0.c1))))) ORDER BY ((((~ (rt0.c0)), ((rt0.c4)<=(rt0.c3))))<=((((rt0.c4) NOT NULL), rt0.c1))) DESC, rt0.c1 INTERSECT SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) IS TRUE)) ORDER BY ((((~ (rt0.c0)), ((rt0.c4)<=(rt0.c3))))<=((((rt0.c4) NOT NULL), rt0.c1))) DESC, rt0.c1;
SELECT * FROM rt0 WHERE (((rt0.c3)IS(((rt0.c2)!=(rt0.c1))))) ORDER BY ((((~ (rt0.c0)), ((rt0.c4)<=(rt0.c3))))<=((((rt0.c4) NOT NULL), rt0.c1))) DESC, rt0.c1;
SELECT ALL * FROM rt0 WHERE (((rt0.c3)IS(((rt0.c2)!=(rt0.c1))))) ORDER BY ((((~ (rt0.c0)), ((rt0.c4)<=(rt0.c3))))<=((((rt0.c4) NOT NULL), rt0.c1))) DESC, rt0.c1 INTERSECT SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) IS TRUE)) ORDER BY ((((~ (rt0.c0)), ((rt0.c4)<=(rt0.c3))))<=((((rt0.c4) NOT NULL), rt0.c1))) DESC, rt0.c1;
SELECT MIN(rt0.c0) FROM rt0 WHERE (COALESCE((rt0.c0 IN (rt0.c0)), (((rt0.c1))<((rt0.c1))), NULL));
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (COALESCE((rt0.c0 IN (rt0.c0)), (((rt0.c1))<((rt0.c1))), NULL)) ORDER BY rt0.c2 COLLATE NOCASE ASC  NULLS FIRST INTERSECT SELECT MIN(rt0.c0) FROM rt0 WHERE (((((rt0.c3) IS TRUE))<(((rt0.c1) NOTNULL)))) ORDER BY rt0.c2 COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (NULL);
SELECT MIN(rt0.c0) FROM rt0 WHERE (((NULL)AND(CAST(rt0.c2 COLLATE NOCASE AS BLOB)))) LIMIT 0X0 INTERSECT SELECT MIN(rt0.c0) FROM rt0 WHERE (-1027870700) LIMIT 0x0;
SELECT MIN(rt0.c0) FROM rt0 WHERE ((~ (((rt0.c2) ISNULL))));
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE ((~ (((rt0.c2) ISNULL)))) INTERSECT SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (rt0.c3);
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (CASE ((((((((((rt0.c2)AND(rt0.c3)))AND(NULL)))OR(rt0.c3)))AND(rt0.c0)))AND('-2073758537'))  WHEN CASE WHEN NULL THEN rt0.c0 ELSE x'' END THEN rt0.c4 WHEN ((((rt0.c4)OR(rt0.c0)))AND(rt0.c3)) THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)) END);
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (CASE ((((((((((rt0.c2)AND(rt0.c3)))AND(NULL)))OR(rt0.c3)))AND(rt0.c0)))AND('-2073758537'))  WHEN CASE WHEN NULL THEN rt0.c0 ELSE x'' END THEN rt0.c4 WHEN ((((rt0.c4)OR(rt0.c0)))AND(rt0.c3)) THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)) END) ORDER BY 0.6972638677057181 DESC  NULLS FIRST LIMIT 0;
SELECT MIN(rt0.c4) FROM rt0 WHERE ((NOT (((rt0.c0) ISNULL)))) ORDER BY (NOT (0.3633883521994532)), CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER), rt0.c0  NULLS FIRST;
SELECT MIN(rt0.c4) FROM rt0 WHERE ((NOT (((rt0.c0) ISNULL)))) ORDER BY (NOT (0.3633883521994532)), CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER), rt0.c0  NULLS FIRST;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (CAST(CASE WHEN 'b' THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN NULL WHEN NULL THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END AS BLOB)) ORDER BY (((json_extract(rt0.c4, rt0.c2), (((rt0.c1))<((''))), CASE rt0.c1  WHEN 0.2524259039927911 THEN rt0.c3 WHEN rt0.c4 THEN x'' WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END))=((((rt0.c3)<<(rt0.c2)), '_g', CAST(rt0.c0 AS TEXT)))) ASC  NULLS LAST, CASE (rt0.c2 IN (rt0.c4))  WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS NUMERIC) WHEN ((rt0.c3)<<(NULL)) THEN (NOT (rt0.c3)) ELSE COALESCE(rt0.c4, rt0.c2) END;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((CAST(CASE WHEN 'b' THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN NULL WHEN NULL THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END AS BLOB))AND((((rt0.c3 IN ())) IS FALSE)))) ORDER BY (((json_extract(rt0.c4, rt0.c2), (((rt0.c1))<((''))), CASE rt0.c1  WHEN 0.2524259039927911 THEN rt0.c3 WHEN rt0.c4 THEN x'' WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END))=((((rt0.c3)<<(rt0.c2)), '_g', CAST(rt0.c0 AS TEXT)))) ASC  NULLS LAST, CASE (rt0.c2 IN (rt0.c4))  WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS NUMERIC) WHEN ((rt0.c3)<<(NULL)) THEN (NOT (rt0.c3)) ELSE COALESCE(rt0.c4, rt0.c2) END LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)=(rt0.c3)) COLLATE RTRIM) ORDER BY (- (CAST(rt0.c3 AS TEXT)))  NULLS LAST, MAX(0xffffffffb8483bb3, ((((rt0.c4)AND(rt0.c1)))OR(rt0.c3))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)=(rt0.c3)) COLLATE RTRIM)AND(((rt0.c3)<=((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))))) ORDER BY (- (CAST(rt0.c3 AS TEXT)))  NULLS LAST, MAX(0xffffffffb8483bb3, ((((rt0.c4)AND(rt0.c1)))OR(rt0.c3))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (json_array_length(x'', ((rt0.c4)/(rt0.c0)))) ORDER BY (- (CAST(rt0.c3 AS TEXT)))  NULLS LAST, MAX(-1203225677, ((((rt0.c4)AND(rt0.c1)))OR(rt0.c3))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)=(rt0.c3)) COLLATE RTRIM) ORDER BY (- (CAST(rt0.c3 AS TEXT)))  NULLS LAST, MAX(0xffffffffb8483bb3, ((((rt0.c4)AND(rt0.c1)))OR(rt0.c3))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)=(rt0.c3)) COLLATE RTRIM)AND(((rt0.c3)<=((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))))) ORDER BY (- (CAST(rt0.c3 AS TEXT)))  NULLS LAST, MAX(0xffffffffb8483bb3, ((((rt0.c4)AND(rt0.c1)))OR(rt0.c3))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (json_array_length(x'', ((rt0.c4)/(rt0.c0)))) ORDER BY (- (CAST(rt0.c3 AS TEXT)))  NULLS LAST, MAX(-1203225677, ((((rt0.c4)AND(rt0.c1)))OR(rt0.c3))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)>(rt0.c4)) AS TEXT)) ORDER BY (((- (rt0.c3))) BETWEEN (((rt0.c4)<>(rt0.c0))) AND (json_extract(rt0.c2, '1BJ>P.', rt0.c2, rt0.c4))) DESC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c1)>(rt0.c4)) AS TEXT)) ORDER BY (((- (rt0.c3))) BETWEEN (((rt0.c4)<>(rt0.c0))) AND (json_extract(rt0.c2, '1BJ>P.', rt0.c2, rt0.c4))) DESC;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)>(rt0.c4)) AS TEXT)) ORDER BY (((- (rt0.c3))) BETWEEN (((rt0.c4)<>(rt0.c0))) AND (json_extract(rt0.c2, '1BJ>P.', rt0.c2, rt0.c4))) DESC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c1)>(rt0.c4)) AS TEXT)) ORDER BY (((- (rt0.c3))) BETWEEN (((rt0.c4)<>(rt0.c0))) AND (json_extract(rt0.c2, '1BJ>P.', rt0.c2, rt0.c4))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)) END);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)) END)AND(CAST(CAST(rt0.c3 AS BLOB) AS TEXT)))) ORDER BY (((rt0.c0, rt0.c3, rt0.c4)) BETWEEN ((((rt0.c3) NOTNULL), 0.2668233887091713, (NOT (NULL)))) AND ((((rt0.c1)==(rt0.c3)), ((rt0.c1)>=(rt0.c4)), ((rt0.c3)<<(rt0.c4)))))  NULLS LAST, LOWER(DISTINCT rt0.c1)  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) BETWEEN ((('-1381152782') IS FALSE)) AND (LTRIM(rt0.c1)))) ORDER BY (((rt0.c0, rt0.c3, rt0.c4)) BETWEEN ((((rt0.c3) NOTNULL), 0.2668233887091713, (NOT (NULL)))) AND ((((rt0.c1)==(rt0.c3)), ((rt0.c1)>=(rt0.c4)), ((rt0.c3)<<(rt0.c4)))))  NULLS LAST, LOWER(DISTINCT rt0.c1)  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c2)>(rt0.c3)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>(rt0.c3)) COLLATE NOCASE)AND('*cD'))) ORDER BY CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS INTEGER) DESC  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c2)LIKE(rt0.c3))) IS FALSE)) ORDER BY CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c2)>(rt0.c3)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>(rt0.c3)) COLLATE NOCASE)AND('*cD'))) ORDER BY CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS INTEGER) DESC  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c2)LIKE(rt0.c3))) IS FALSE)) ORDER BY CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS INTEGER) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))) BETWEEN ((((rt0.c1, rt0.c2, rt0.c3))==((rt0.c4, rt0.c2, rt0.c2)))) AND (((rt0.c3)||(rt0.c4))))) ORDER BY rt0.c2  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))) BETWEEN ((((rt0.c1, rt0.c2, rt0.c3))==((rt0.c4, rt0.c2, rt0.c2)))) AND (((rt0.c3)||(rt0.c4)))))AND((((+ (rt0.c4)))-(UPPER(DISTINCT rt0.c0)))))) ORDER BY ((((((((((rt0.c2) NOT NULL))AND(rt0.c3)))OR(((rt0.c0)GLOB(rt0.c1)))))AND(((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c0)))))AND(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)) DESC, (((rt0.c2, rt0.c2)) NOT BETWEEN ((CHAR(rt0.c1, rt0.c0, rt0.c0, rt0.c0), rt0.c4)) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN '*
 0Q*zd' WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END)))  NULLS FIRST;
SELECT MIN(rt0.c2) FROM rt0 WHERE (rt0.c1);
SELECT MIN(rt0.c2) FROM rt0 WHERE (((rt0.c1)AND(UPPER(DISTINCT rt0.c3) COLLATE NOCASE))) ORDER BY CASE WHEN ((rt0.c4)LIKE(rt0.c1)) THEN rt0.c2 WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END ASC  NULLS LAST, rt0.c1 LIMIT 0x2 INTERSECT SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (((rt0.c2)<<(rt0.c0 COLLATE NOCASE))) ORDER BY CASE WHEN ((rt0.c4)LIKE(rt0.c1)) THEN rt0.c2 WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END ASC  NULLS LAST, rt0.c1 LIMIT 2;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN rt0.c3 COLLATE BINARY ELSE rt0.c2 END);
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN rt0.c3 COLLATE BINARY ELSE rt0.c2 END)AND(((((rt0.c1)>>(rt0.c0))) NOTNULL))));
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))IS(rt0.c0 COLLATE BINARY)));
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))IS(rt0.c0 COLLATE BINARY)))AND(((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN ((NULL IN (rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 END))))) ORDER BY (((+ (rt0.c0)))LIKE(rt0.c1)), ((((rt0.c4)-('210403493'))) ISNULL) ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1))) ISNULL)) ORDER BY (((+ (rt0.c0)))LIKE(rt0.c1)), ((((rt0.c4)-('210403493'))) ISNULL) ASC;
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))IS(rt0.c0 COLLATE BINARY)));
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))IS(rt0.c0 COLLATE BINARY)))AND(((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN ((NULL IN (rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 END))))) ORDER BY (((+ (rt0.c0)))LIKE(rt0.c1)), ((((rt0.c4)-('210403493'))) ISNULL) ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1))) ISNULL)) ORDER BY (((+ (rt0.c0)))LIKE(rt0.c1)), ((((rt0.c4)-('210403493'))) ISNULL) ASC;
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY (NULL IN (LIKELIHOOD(DISTINCT rt0.c3, rt0.c1), CAST(rt0.c2 AS BLOB), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))))  NULLS FIRST, CASE rt0.c4 COLLATE NOCASE  WHEN rt0.c1 THEN ((rt0.c1)*(rt0.c4)) END ASC  NULLS FIRST, CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END AS TEXT) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) ORDER BY (NULL IN (LIKELIHOOD(DISTINCT rt0.c3, rt0.c1), CAST(rt0.c2 AS BLOB), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))))  NULLS FIRST, CASE rt0.c4 COLLATE NOCASE  WHEN rt0.c1 THEN ((rt0.c1)*(rt0.c4)) END ASC  NULLS FIRST, CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END AS TEXT) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY (NULL IN (LIKELIHOOD(DISTINCT rt0.c3, rt0.c1), CAST(rt0.c2 AS BLOB), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))))  NULLS FIRST, CASE rt0.c4 COLLATE NOCASE  WHEN rt0.c1 THEN ((rt0.c1)*(rt0.c4)) END ASC  NULLS FIRST, CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END AS TEXT) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY (NULL IN (LIKELIHOOD(DISTINCT rt0.c3, rt0.c1), CAST(rt0.c2 AS BLOB), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))))  NULLS FIRST, CASE rt0.c4 COLLATE NOCASE  WHEN rt0.c1 THEN ((rt0.c1)*(rt0.c4)) END ASC  NULLS FIRST, CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END AS TEXT) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c4 COLLATE RTRIM) ORDER BY ((((rt0.c4)<=(rt0.c0)))-(NULL)) DESC, ((rt0.c4) NOT BETWEEN ((((rt0.c0, rt0.c2))>=((rt0.c1, rt0.c0)))) AND (((rt0.c2)!=(rt0.c3)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c4 COLLATE RTRIM) ORDER BY json_array(NULL, ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(0.6398001723701995)), (((rt0.c4, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c4))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((x''))>((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))))) ORDER BY json_array(NULL, ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(0.6398001723701995)), (((rt0.c4, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c4))))  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c4 COLLATE RTRIM) ORDER BY ((((rt0.c4)<=(rt0.c0)))-(NULL)) DESC, ((rt0.c4) NOT BETWEEN ((((rt0.c0, rt0.c2))>=((rt0.c1, rt0.c0)))) AND (((rt0.c2)!=(rt0.c3)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c4 COLLATE RTRIM) ORDER BY json_array(NULL, ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(0.6398001723701995)), (((rt0.c4, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c4))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((x''))>((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))))) ORDER BY json_array(NULL, ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(0.6398001723701995)), (((rt0.c4, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c4))))  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((rt0.c0) NOT NULL))OR(rt0.c3))) ORDER BY MAX(((rt0.c0)|(rt0.c2)), ((((rt0.c2)OR(rt0.c3)))OR(rt0.c0))) ASC  NULLS FIRST, ((((rt0.c3)&(rt0.c1)))OR(CAST(rt0.c4 AS REAL)))  NULLS FIRST, ((((rt0.c0)&(x'')))>(rt0.c2)) DESC, (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) IN (CAST(rt0.c3 AS TEXT), LIKELIHOOD(rt0.c0, rt0.c4), (NULL IN (rt0.c3)))), ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT NULL))OR(rt0.c3))) ORDER BY (((rt0.c2, rt0.c0, rt0.c2)) BETWEEN (((rt0.c3 IN (rt0.c4)), (+ (rt0.c4)), ((rt0.c0)-(rt0.c4)))) AND (((rt0.c2 IN (',E}')), (rt0.c3 IN ('')), (rt0.c3 IN ())))) INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOTNULL))<<((NOT (rt0.c3))))) ORDER BY (((rt0.c2, rt0.c0, rt0.c2)) BETWEEN (((rt0.c3 IN (rt0.c4)), (+ (rt0.c4)), ((rt0.c0)-(rt0.c4)))) AND (((rt0.c2 IN (',E}')), (rt0.c3 IN ('')), (rt0.c3 IN ()))));
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((rt0.c0) NOT NULL))OR(rt0.c3))) ORDER BY MAX(((rt0.c0)|(rt0.c2)), ((((rt0.c2)OR(rt0.c3)))OR(rt0.c0))) ASC  NULLS FIRST, ((((rt0.c3)&(rt0.c1)))OR(CAST(rt0.c4 AS REAL)))  NULLS FIRST, ((((rt0.c0)&(x'')))>(rt0.c2)) DESC, (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) IN (CAST(rt0.c3 AS TEXT), LIKELIHOOD(rt0.c0, rt0.c4), (NULL IN (rt0.c3)))), ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)IS(((rt0.c3)||(rt0.c4))))) ORDER BY CASE rt0.c1 COLLATE BINARY  WHEN CASE NULL  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END THEN ((rt0.c1)-(rt0.c1)) ELSE ((rt0.c3)==(rt0.c0)) END DESC, rt0.c1 ASC;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)IS(((rt0.c3)||(rt0.c4))))) ORDER BY CASE rt0.c1 COLLATE BINARY  WHEN CASE NULL  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END THEN ((rt0.c1)-(rt0.c1)) ELSE ((rt0.c3)=(rt0.c0)) END DESC, rt0.c1 ASC LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)IS(((rt0.c3)||(rt0.c4))))) ORDER BY CASE rt0.c1 COLLATE BINARY  WHEN CASE NULL  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END THEN ((rt0.c1)-(rt0.c1)) ELSE ((rt0.c3)==(rt0.c0)) END DESC, rt0.c1 ASC;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)IS(((rt0.c3)||(rt0.c4))))) ORDER BY CASE rt0.c1 COLLATE BINARY  WHEN CASE NULL  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END THEN ((rt0.c1)-(rt0.c1)) ELSE ((rt0.c3)=(rt0.c0)) END DESC, rt0.c1 ASC LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (CASE 'n}' COLLATE RTRIM  WHEN ((rt0.c4)/(rt0.c2)) THEN ((rt0.c0) IS FALSE) ELSE ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c4)) END) ORDER BY (((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)) IN ((((rt0.c3, rt0.c2, rt0.c2, rt0.c0))>=((rt0.c0, rt0.c0, rt0.c0, rt0.c1))), rt0.c1, rt0.c0)), ((TRIM(DISTINCT rt0.c0, rt0.c4))|(x'')), (((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)) IN ())  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE 'n}' COLLATE RTRIM  WHEN ((rt0.c4)/(rt0.c2)) THEN ((rt0.c0) IS FALSE) ELSE ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c4)) END)AND(((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((''))) IN (x'5e23' COLLATE RTRIM))))) ORDER BY (NOT (rt0.c3)) COLLATE RTRIM ASC  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt0 WHERE (CASE 'n}' COLLATE RTRIM  WHEN ((rt0.c4)/(rt0.c2)) THEN ((rt0.c0) IS FALSE) ELSE ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c4)) END) ORDER BY (((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)) IN ((((rt0.c3, rt0.c2, rt0.c2, rt0.c0))>=((rt0.c0, rt0.c0, rt0.c0, rt0.c1))), rt0.c1, rt0.c0)), ((TRIM(DISTINCT rt0.c0, rt0.c4))|(x'')), (((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)) IN ())  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((('351554250') ISNULL))) AND ((CASE '-2110560773'  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((('351554250') ISNULL))) AND ((CASE '-2110560773'  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)))) LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((('351554250') ISNULL))) AND ((CASE '-2110560773'  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((('351554250') ISNULL))) AND ((CASE '-2110560773'  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)))) LIMIT 0x1;
SELECT * FROM rt0 WHERE (((((((((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)OR((- ('90813891')))))OR('-1994747348')))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (x'e58b')))))OR(TRIM(DISTINCT rt0.c0))))AND(((rt0.c1)IS(rt0.c4)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)OR((- ('90813891')))))OR('-1994747348')))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (x'e58b')))))OR(TRIM(DISTINCT rt0.c0))))AND(((rt0.c1)IS(rt0.c4)))))AND(LOWER(DISTINCT CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 END)))) ORDER BY ((((((x'056047')AND('1360376831')))OR(rt0.c1))) IS FALSE)  NULLS FIRST, TOTAL_CHANGES() ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)) COLLATE NOCASE) ORDER BY ((((((x'056047')AND('1360376831')))OR(rt0.c1))) IS FALSE)  NULLS FIRST, TOTAL_CHANGES() ASC  NULLS LAST LIMIT 0X2;
SELECT * FROM rt0 WHERE (((((((((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)OR((- ('90813891')))))OR('-1994747348')))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (x'e58b')))))OR(TRIM(DISTINCT rt0.c0))))AND(((rt0.c1)IS(rt0.c4)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)OR((- ('90813891')))))OR('-1994747348')))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (x'e58b')))))OR(TRIM(DISTINCT rt0.c0))))AND(((rt0.c1)IS(rt0.c4)))))AND(LOWER(DISTINCT CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 END)))) ORDER BY ((((((x'056047')AND('1360376831')))OR(rt0.c1))) IS FALSE)  NULLS FIRST, TOTAL_CHANGES() ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)) COLLATE NOCASE) ORDER BY ((((((x'056047')AND('1360376831')))OR(rt0.c1))) IS FALSE)  NULLS FIRST, TOTAL_CHANGES() ASC  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c2 AS REAL))) ORDER BY '0yI', ((rt0.c1)<(rt0.c4)) COLLATE BINARY;
SELECT DISTINCT * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c2 AS REAL))) ORDER BY '0yI', ((rt0.c1)<(rt0.c4)) COLLATE BINARY LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (((rt0.c0)LIKE(NULL))))) ORDER BY '0yI', ((rt0.c1)<(rt0.c4)) COLLATE BINARY LIMIT 0;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c2 AS REAL))) ORDER BY '0yI', ((rt0.c1)<(rt0.c4)) COLLATE BINARY;
SELECT DISTINCT * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c2 AS REAL))) ORDER BY '0yI', ((rt0.c1)<(rt0.c4)) COLLATE BINARY LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (((rt0.c0)LIKE(NULL))))) ORDER BY '0yI', ((rt0.c1)<(rt0.c4)) COLLATE BINARY LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4) BETWEEN (rt0.c3) AND (0.5638587232048043)), ((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c3))))<=((((rt0.c1)||(rt0.c3)), ((rt0.c1)*(rt0.c1)))))) ORDER BY rt0.c3 ASC;
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c4) BETWEEN (rt0.c3) AND (0.5638587232048043)), ((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c3))))<=((((rt0.c1)||(rt0.c3)), ((rt0.c1)*(rt0.c1))))))AND(0.8468209008184995))) ORDER BY (((rt0.c2, rt0.c3, rt0.c2)) BETWEEN ((((((rt0.c2)OR(x'8c')))OR(rt0.c1)), UNICODE(rt0.c0), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END)) AND ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c4)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)), rt0.c3))) DESC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4) BETWEEN (rt0.c3) AND (0.5638587232048043)), ((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c3))))<=((((rt0.c1)||(rt0.c3)), ((rt0.c1)*(rt0.c1)))))) ORDER BY rt0.c3 ASC;
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c4) BETWEEN (rt0.c3) AND (0.5638587232048043)), ((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c3))))<=((((rt0.c1)||(rt0.c3)), ((rt0.c1)*(rt0.c1))))))AND(0.8468209008184995))) ORDER BY (((rt0.c2, rt0.c3, rt0.c2)) BETWEEN ((((((rt0.c2)OR(x'8c')))OR(rt0.c1)), UNICODE(rt0.c0), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END)) AND ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c4)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)), rt0.c3))) DESC;
SELECT * FROM rt0 WHERE (((((rt0.c3)|(rt0.c0)))>((((rt0.c3, rt0.c3, rt0.c4, rt0.c0, rt0.c2))>=((rt0.c3, rt0.c1, rt0.c1, rt0.c0, rt0.c0)))))) ORDER BY json(((rt0.c2)IS(x'4b'))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3)|(rt0.c0)))>((((rt0.c3, rt0.c3, rt0.c4, rt0.c0, rt0.c2))=((rt0.c3, rt0.c1, rt0.c1, rt0.c0, rt0.c0))))))AND(rt0.c2))) ORDER BY (rt0.c4 IN ()) COLLATE NOCASE ASC  NULLS LAST LIMIT 0x1;
SELECT * FROM rt0 WHERE (((((rt0.c3)|(rt0.c0)))>((((rt0.c3, rt0.c3, rt0.c4, rt0.c0, rt0.c2))>=((rt0.c3, rt0.c1, rt0.c1, rt0.c0, rt0.c0)))))) ORDER BY json(((rt0.c2)IS(x'4b'))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3)|(rt0.c0)))>((((rt0.c3, rt0.c3, rt0.c4, rt0.c0, rt0.c2))=((rt0.c3, rt0.c1, rt0.c1, rt0.c0, rt0.c0))))))AND(rt0.c2))) ORDER BY (rt0.c4 IN ()) COLLATE NOCASE ASC  NULLS LAST LIMIT 0x1;
SELECT MIN(rt0.c1) FROM rt0 WHERE (((((((((((((rt0.c3)<(rt0.c3)))AND(NULL)))OR(rt0.c0)))OR(-510828455)))AND((('1940114623')AND(rt0.c3)))))OR(((rt0.c2)==(rt0.c3)))));
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((((((((((((((rt0.c3)<(rt0.c3)))AND(NULL)))OR(rt0.c0)))OR(-510828455)))AND((('1940114623')AND(rt0.c3)))))OR(((rt0.c2)==(rt0.c3)))))AND(rt0.c1))) ORDER BY ((UPPER(DISTINCT rt0.c3))LIKE(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))), CAST(((NULL) BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND (('M)\'))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND (('M)\'))))AND(((rt0.c2)&(rt0.c4 COLLATE BINARY))))) ORDER BY x'e953' ASC  NULLS LAST, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) NOT NULL), (((((((rt0.c4, rt0.c3))>((rt0.c4, rt0.c4))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN x'46' THEN rt0.c1 WHEN rt0.c4 THEN 0.8637171610860976 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END)))AND((rt0.c0 IN ()))) ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND (('M)\'))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND (('M)\'))))AND(((rt0.c2)&(rt0.c4 COLLATE BINARY))))) ORDER BY x'e953' ASC  NULLS LAST, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) NOT NULL), (((((((rt0.c4, rt0.c3))>((rt0.c4, rt0.c4))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN x'46' THEN rt0.c1 WHEN rt0.c4 THEN 0.8637171610860976 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END)))AND((rt0.c0 IN ()))) ASC;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (rt0.c4);
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((rt0.c4)AND(json_type((NOT (rt0.c0)))))) ORDER BY x'95539a' ASC  NULLS LAST, CASE WHEN CAST(NULL AS NUMERIC) THEN rt0.c4 COLLATE RTRIM WHEN CAST(NULL AS BLOB) THEN ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c2)))AND(0.938501248139093)) WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END THEN rt0.c3 END, ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) NOT NULL) DESC, (- (rt0.c0)) COLLATE RTRIM INTERSECT SELECT MIN(rt0.c3) FROM rt0 WHERE (x'') ORDER BY x'95539a' ASC  NULLS LAST, CASE WHEN CAST(NULL AS NUMERIC) THEN rt0.c4 COLLATE RTRIM WHEN CAST(NULL AS BLOB) THEN ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c2)))AND(0.938501248139093)) WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END THEN rt0.c3 END, ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) NOT NULL) DESC, (- (rt0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((((((0.19429088971119657)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c4))  WHEN CAST(rt0.c1 AS BLOB) THEN (- (rt0.c0)) WHEN CAST(rt0.c3 AS INTEGER) THEN '0' ELSE ((rt0.c0) NOT NULL) END);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CASE ((((((((0.19429088971119657)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c4))  WHEN CAST(rt0.c1 AS BLOB) THEN (- (rt0.c0)) WHEN CAST(rt0.c3 AS INTEGER) THEN '0' ELSE ((rt0.c0) NOT NULL) END) LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (rt0.c1) LIMIT 0x2;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE ((NOT (((rt0.c0)>=(rt0.c0)))));
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE ((((NOT (((rt0.c0)>=(rt0.c0)))))AND(CASE WHEN ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)) THEN ((rt0.c3)AND(rt0.c2)) WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)) THEN -4.08692388E8 WHEN NULLIF(DISTINCT rt0.c4, rt0.c4) THEN CAST(rt0.c2 AS INTEGER) WHEN ((rt0.c2) NOTNULL) THEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)) END))) INTERSECT SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE ((('') NOT BETWEEN (LOWER('626019990')) AND (((rt0.c4) IS TRUE))));
SELECT ALL * FROM rt0 WHERE (CHANGES()) ORDER BY (((((((NULL IN (x'')))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(rt0.c3)))AND(x'03d0'))  NULLS FIRST, IFNULL(DISTINCT (rt0.c2 IN (rt0.c0, '1056948351')), ((rt0.c3)<(rt0.c0)))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((CHANGES())AND(TRIM(DISTINCT CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c3, rt0.c2, rt0.c2))<>((0X2a14f354, rt0.c3, -8.89791948E8))))))) ORDER BY CASE WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c2 WHEN '27823099' THEN rt0.c2 ELSE rt0.c3 END COLLATE RTRIM ASC  NULLS FIRST, (((-4.08692388E8)||(rt0.c0)) IN (ABS(-1095468951))) ASC LIMIT 2;
SELECT ALL * FROM rt0 WHERE (CHANGES()) ORDER BY (((((((NULL IN (x'')))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(rt0.c3)))AND(x'03d0'))  NULLS FIRST, IFNULL(DISTINCT (rt0.c2 IN (rt0.c0, '1056948351')), ((rt0.c3)<(rt0.c0)))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((CHANGES())AND(TRIM(DISTINCT CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c3, rt0.c2, rt0.c2))<>((0X2a14f354, rt0.c3, -8.89791948E8))))))) ORDER BY CASE WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c2 WHEN '27823099' THEN rt0.c2 ELSE rt0.c3 END COLLATE RTRIM ASC  NULLS FIRST, (((-4.08692388E8)||(rt0.c0)) IN (ABS(-1095468951))) ASC LIMIT 2;
SELECT MIN(rt0.c4) FROM rt0 WHERE (NULL);
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (NULL) LIMIT 2;
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT rt0.c1)) ORDER BY (NOT (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END)) DESC, (((~ (rt0.c3))) ISNULL) ASC;
SELECT * FROM rt0 WHERE (LOWER(DISTINCT rt0.c1)) ORDER BY (NOT (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END)) DESC, (((~ (rt0.c3))) ISNULL) ASC LIMIT 0x3;
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT rt0.c1)) ORDER BY (NOT (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END)) DESC, (((~ (rt0.c3))) ISNULL) ASC;
SELECT * FROM rt0 WHERE (LOWER(DISTINCT rt0.c1)) ORDER BY (NOT (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END)) DESC, (((~ (rt0.c3))) ISNULL) ASC LIMIT 0x3;
SELECT * FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC))));
SELECT ALL * FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC)))) ORDER BY CAST(((605669918) NOT NULL) AS REAL) ASC;
SELECT * FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC))));
SELECT ALL * FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC)))) ORDER BY CAST(((605669918) NOT NULL) AS REAL) ASC;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (rt0.c0);
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c3  NULLS FIRST, ((((rt0.c1)*(rt0.c2)))<(TRIM(rt0.c2)))  NULLS LAST, 0.3435694652901301 LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE '*
 0Q*zd' END)<=(ABS(rt0.c2)))) ORDER BY (((load_extension(rt0.c1)))<=((((x'') NOT BETWEEN (rt0.c2) AND (rt0.c3))))), ((((rt0.c3)%(rt0.c3)))+(NULL))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE '*
 0Q*zd' END)==(ABS(rt0.c2)))) ORDER BY ROUND((rt0.c4 IN ()), rt0.c0 COLLATE BINARY) ASC  NULLS LAST, (((((rt0.c2, rt0.c3)) BETWEEN ((rt0.c4, x'5504')) AND ((rt0.c0, NULL))))<(CAST(rt0.c0 AS REAL))) LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c4)||(rt0.c2))) BETWEEN (((rt0.c3) NOTNULL)) AND (((((rt0.c2)AND(rt0.c3)))OR('0.5152802560125314'))))) ORDER BY ROUND((rt0.c4 IN ()), rt0.c0 COLLATE BINARY) ASC  NULLS LAST, (((((rt0.c2, rt0.c3)) BETWEEN ((rt0.c4, x'5504')) AND ((rt0.c0, NULL))))<(CAST(rt0.c0 AS REAL))) LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE '*
 0Q*zd' END)<=(ABS(rt0.c2)))) ORDER BY (((load_extension(rt0.c1)))<=((((x'') NOT BETWEEN (rt0.c2) AND (rt0.c3))))), ((((rt0.c3)%(rt0.c3)))+(NULL))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY CASE WHEN ((rt0.c1)-(rt0.c2)) THEN ((rt0.c0)IS NOT(rt0.c1)) WHEN (NOT (rt0.c3)) THEN ((rt0.c0)<(rt0.c4)) END DESC;
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)AND(((((rt0.c1))=((rt0.c4))) IN ((x'77' IN (rt0.c3))))))) ORDER BY '0.233250137186923', rt0.c0 ASC  NULLS LAST INTERSECT SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c1))) IS TRUE)) ORDER BY '0.233250137186923', rt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY CASE WHEN ((rt0.c1)-(rt0.c2)) THEN ((rt0.c0)IS NOT(rt0.c1)) WHEN (NOT (rt0.c3)) THEN ((rt0.c0)<(rt0.c4)) END DESC;
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)AND(((((rt0.c1))=((rt0.c4))) IN ((x'77' IN (rt0.c3))))))) ORDER BY '0.233250137186923', rt0.c0 ASC  NULLS LAST INTERSECT SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c1))) IS TRUE)) ORDER BY '0.233250137186923', rt0.c0 ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c4)))OR(rt0.c1))) IS TRUE)) ORDER BY CAST(((rt0.c1)IS NOT(rt0.c0)) AS REAL), CASE WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c2)>=(rt0.c0)) ELSE rt0.c0 COLLATE BINARY END  NULLS FIRST, (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END IN ()) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c4)))OR(rt0.c1))) IS TRUE)) ORDER BY ((((~ (rt0.c0))))<>((NULL))) DESC  NULLS LAST, (((CAST(NULL AS BLOB)))==((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ASC LIMIT 0x3;
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c4)))OR(rt0.c1))) IS TRUE)) ORDER BY CAST(((rt0.c1)IS NOT(rt0.c0)) AS REAL), CASE WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c2)>=(rt0.c0)) ELSE rt0.c0 COLLATE BINARY END  NULLS FIRST, (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END IN ()) ASC;
SELECT ALL MAX(rt0.c0) FROM rt0 NOT INDEXED WHERE ((- (rt0.c3 COLLATE NOCASE)));
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE ((((- (rt0.c3 COLLATE NOCASE)))AND(CASE WHEN '^괠' THEN ((rt0.c4)&(rt0.c4)) ELSE (((759919941, rt0.c1, rt0.c0))<((rt0.c1, rt0.c4, rt0.c0))) END))) INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (LIKELY(rt0.c0 COLLATE RTRIM));
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((+ (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))) ORDER BY rt0.c0  NULLS FIRST, ((((NULL)<(rt0.c0))) IS FALSE) ASC;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((+ (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))) ORDER BY rt0.c0  NULLS FIRST, ((((NULL)<(rt0.c0))) IS FALSE) ASC INTERSECT SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((NOT ((rt0.c1 IN (rt0.c1, x'24'))))) ORDER BY rt0.c0  NULLS FIRST, ((((NULL)<(rt0.c0))) IS FALSE) ASC;
SELECT ALL * FROM rt0 WHERE (8.8544582E7) ORDER BY CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE;
SELECT DISTINCT * FROM rt0 WHERE (((8.8544582E7)AND(((rt0.c3 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (((rt0.c3) NOT BETWEEN (0xffffffffcdb278c9) AND (rt0.c3))))))) ORDER BY CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE;
SELECT ALL * FROM rt0 WHERE (8.8544582E7) ORDER BY CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE;
SELECT DISTINCT * FROM rt0 WHERE (((8.8544582E7)AND(((rt0.c3 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (((rt0.c3) NOT BETWEEN (0xffffffffcdb278c9) AND (rt0.c3))))))) ORDER BY CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE;
SELECT MAX(rt0.c4) FROM rt0 WHERE (rt0.c3) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))IS((rt0.c2 IN (rt0.c1)))), (((((rt0.c0)<<(rt0.c4)), (rt0.c2 IN ()), 0.5319749431489521 COLLATE RTRIM))>((json_array(rt0.c4, rt0.c3, rt0.c4), (NOT (rt0.c3)), rt0.c0)))  NULLS LAST;
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((rt0.c3)AND(NULLIF((((rt0.c2, rt0.c1)) BETWEEN ((rt0.c3, rt0.c2)) AND ((rt0.c3, rt0.c1))), (rt0.c0 IN (NULL)))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))IS((rt0.c2 IN (rt0.c1)))), (((((rt0.c0)<<(rt0.c4)), (rt0.c2 IN ()), 0.5319749431489521 COLLATE RTRIM))>((json_array(rt0.c4, rt0.c3, rt0.c4), (NOT (rt0.c3)), rt0.c0)))  NULLS LAST LIMIT 1;
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (1.566004811E9))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) AND (CHANGES())));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (1.566004811E9))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) AND (CHANGES())))AND(CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC)))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))) ISNULL)  NULLS LAST, ((((rt0.c0)>>(NULL)))=((rt0.c2 IN ()))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (rt0.c1))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))) ISNULL)  NULLS LAST, ((((rt0.c0)>>(NULL)))==((rt0.c2 IN ()))) LIMIT 2;
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (1.566004811E9))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) AND (CHANGES())));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (1.566004811E9))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) AND (CHANGES())))AND(CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC)))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))) ISNULL)  NULLS LAST, ((((rt0.c0)>>(NULL)))=((rt0.c2 IN ()))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (rt0.c1))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))) ISNULL)  NULLS LAST, ((((rt0.c0)>>(NULL)))==((rt0.c2 IN ()))) LIMIT 2;
SELECT * FROM rt0 WHERE ((((((((0xffffffffc3e9b0ab)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)) IN (LIKELIHOOD(DISTINCT rt0.c3, rt0.c1), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))|(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END)), ((((((((rt0.c0)!=(rt0.c2)))AND(rt0.c0)))AND(((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)))))AND(((rt0.c0) NOTNULL))) ASC  NULLS LAST, IFNULL(DISTINCT ((rt0.c1) IS FALSE), (rt0.c1 IN (rt0.c2))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((((-1008095061)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)) IN (LIKELIHOOD(DISTINCT rt0.c3, rt0.c1)))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))|(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END)), ((((((((rt0.c0)<>(rt0.c2)))AND(rt0.c0)))AND(((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)))))AND(((rt0.c0) NOTNULL))) ASC  NULLS LAST, IFNULL(DISTINCT ((rt0.c1) IS FALSE), (rt0.c1 IN (rt0.c2))) DESC  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))|(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END)), ((((((((rt0.c0)!=(rt0.c2)))AND(rt0.c0)))AND(((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)))))AND(((rt0.c0) NOTNULL))) ASC  NULLS LAST, IFNULL(DISTINCT ((rt0.c1) IS FALSE), (rt0.c1 IN (rt0.c2))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((((0xffffffffc3e9b0ab)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)) IN (LIKELIHOOD(DISTINCT rt0.c3, rt0.c1), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))|(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END)), ((((((((rt0.c0)!=(rt0.c2)))AND(rt0.c0)))AND(((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)))))AND(((rt0.c0) NOTNULL))) ASC  NULLS LAST, IFNULL(DISTINCT ((rt0.c1) IS FALSE), (rt0.c1 IN (rt0.c2))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c4 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c4 AS INTEGER)) ISNULL)) INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c4 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c4 AS INTEGER)) ISNULL)) INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)AND((((rt0.c2)) NOT BETWEEN ((CASE WHEN 0.28670527050263017 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN x'' THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END)) AND (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))))));
SELECT * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)AND((((rt0.c2)) NOT BETWEEN ((CASE WHEN 0.28670527050263017 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN x'' THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END)) AND (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))))));
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))IS(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))IS(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND((rt0.c2 IN (CAST(0.890787244339882 AS REAL)))))) ORDER BY ((rt0.c3 COLLATE NOCASE) NOT BETWEEN (((x'') NOT NULL)) AND ((rt0.c3 IN ()))) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((('	\J')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((((('	\J')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))) NOTNULL));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3)OR(rt0.c3))))>((json_array(rt0.c0, rt0.c2))))) ORDER BY 0.26481244812338955, CAST(x'46' AS TEXT) DESC, ((rt0.c4) NOT NULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3)OR(rt0.c3))))>((json_array(rt0.c0, rt0.c2))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN x'' WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)OR((NOT (rt0.c0)))) DESC  NULLS LAST, rt0.c4 ASC  NULLS FIRST, CAST(CAST(rt0.c2 AS REAL) AS TEXT)  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3)OR(rt0.c3))))>((json_array(rt0.c0, rt0.c2))))) ORDER BY 0.26481244812338955, CAST(x'46' AS TEXT) DESC, ((rt0.c4) NOT NULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3)OR(rt0.c3))))>((json_array(rt0.c0, rt0.c2))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN x'' WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)OR((NOT (rt0.c0)))) DESC  NULLS LAST, rt0.c4 ASC  NULLS FIRST, CAST(CAST(rt0.c2 AS REAL) AS TEXT)  NULLS FIRST LIMIT 0X1;
SELECT MIN(rt0.c4) FROM rt0 WHERE ((((CASE ''  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END, CAST(rt0.c2 AS INTEGER)))!=((((rt0.c1) NOTNULL), (((rt0.c4, 0Xffffffff959cf6a3, rt0.c0))=((rt0.c0, rt0.c4, rt0.c4))))))) ORDER BY ((CAST(0.3916842090229713 AS INTEGER))IS NOT((rt0.c1 IN (rt0.c1, 0xffffffffcc038fc9)))) ASC  NULLS FIRST, (((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) IN ()) ASC  NULLS FIRST, (((rt0.c0, rt0.c2, rt0.c4)) BETWEEN ((NULL, rt0.c4, rt0.c3)) AND ((rt0.c3, rt0.c0, rt0.c3))) COLLATE RTRIM ASC;
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE ((((CASE ''  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END, CAST(rt0.c2 AS INTEGER)))<>((((rt0.c1) NOTNULL), (((rt0.c4, 0Xffffffff959cf6a3, rt0.c0))=((rt0.c0, rt0.c4, rt0.c4))))))) ORDER BY ((CAST(0.3916842090229713 AS INTEGER))IS NOT((rt0.c1 IN (rt0.c1, 0Xffffffffcc038fc9)))) ASC  NULLS FIRST, (((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) IN ()) ASC  NULLS FIRST, (((rt0.c0, rt0.c2, rt0.c4)) BETWEEN ((NULL, rt0.c4, rt0.c3)) AND ((rt0.c3, rt0.c0, rt0.c3))) COLLATE RTRIM ASC LIMIT 0x3;
SELECT * FROM rt0 WHERE ((~ (rt0.c3)) COLLATE RTRIM) ORDER BY ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN (rt0.c0) AND (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) ASC  NULLS FIRST, CAST((rt0.c1 IN (rt0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((~ (rt0.c3)) COLLATE RTRIM)AND((NOT ((rt0.c4 IN (rt0.c4, '(U'))))))) ORDER BY ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN (rt0.c0) AND (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) ASC  NULLS FIRST, CAST((rt0.c1 IN (rt0.c1)) AS INTEGER) DESC  NULLS FIRST LIMIT 3 INTERSECT SELECT * FROM rt0 WHERE (IFNULL(DISTINCT (136555943 IN ()), (((rt0.c3))<((NULL))))) ORDER BY ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN (rt0.c0) AND (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) ASC  NULLS FIRST, CAST((rt0.c1 IN (rt0.c1)) AS INTEGER) DESC  NULLS FIRST LIMIT 3;
SELECT * FROM rt0 WHERE ((~ (rt0.c3)) COLLATE RTRIM) ORDER BY ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN (rt0.c0) AND (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) ASC  NULLS FIRST, CAST((rt0.c1 IN (rt0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((~ (rt0.c3)) COLLATE RTRIM)AND((NOT ((rt0.c4 IN (rt0.c4, '(U'))))))) ORDER BY ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN (rt0.c0) AND (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) ASC  NULLS FIRST, CAST((rt0.c1 IN (rt0.c1)) AS INTEGER) DESC  NULLS FIRST LIMIT 3 INTERSECT SELECT * FROM rt0 WHERE (IFNULL(DISTINCT (136555943 IN ()), (((rt0.c3))<((NULL))))) ORDER BY ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN (rt0.c0) AND (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) ASC  NULLS FIRST, CAST((rt0.c1 IN (rt0.c1)) AS INTEGER) DESC  NULLS FIRST LIMIT 3;
SELECT ALL * FROM rt0 WHERE (((((((((((((((((rt0.c3)AND('')))OR(rt0.c0)))OR(((rt0.c4)||(rt0.c3)))))AND((((rt0.c3))<=((rt0.c3))))))AND(((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS TEXT))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((rt0.c3)AND('')))OR(rt0.c0)))OR(((rt0.c4)||(rt0.c3)))))AND((((rt0.c3))<=((rt0.c3))))))AND(((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS TEXT)))) ORDER BY CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END COLLATE NOCASE INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((((((((((((rt0.c0 IN ()))AND(rt0.c1)))AND(UPPER(rt0.c0))))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END)))OR(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))))OR((NOT (rt0.c0)))))AND(((rt0.c3)>(rt0.c0)))))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END COLLATE NOCASE;
SELECT ALL * FROM rt0 WHERE (((((((((((((((((rt0.c3)AND('')))OR(rt0.c0)))OR(((rt0.c4)||(rt0.c3)))))AND((((rt0.c3))<=((rt0.c3))))))AND(((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS TEXT))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((rt0.c3)AND('')))OR(rt0.c0)))OR(((rt0.c4)||(rt0.c3)))))AND((((rt0.c3))<=((rt0.c3))))))AND(((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS TEXT)))) ORDER BY CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END COLLATE NOCASE INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((((((((((((rt0.c0 IN ()))AND(rt0.c1)))AND(UPPER(rt0.c0))))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END)))OR(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))))OR((NOT (rt0.c0)))))AND(((rt0.c3)>(rt0.c0)))))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END COLLATE NOCASE;
SELECT MIN(rt0.c4) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2) IS TRUE))) AND ((CAST(rt0.c1 AS BLOB)))), LTRIM((+ (rt0.c0)))  NULLS LAST;
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c1, TYPEOF('Dr^- 2') DESC, x'9ca4'  NULLS LAST;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2))))) ORDER BY ((((((x'')) BETWEEN ((0.3452581343325458)) AND ((rt0.c0)))))<((((rt0.c0)<(rt0.c2))))) DESC  NULLS FIRST, (+ (rt0.c0)) ASC  NULLS LAST;
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2))))) ORDER BY ((TRIM(DISTINCT rt0.c3)) NOTNULL)  NULLS FIRST, (((rt0.c4, rt0.c2, rt0.c3, rt0.c2, rt0.c1)) BETWEEN (((- (rt0.c3)), CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN NULL THEN rt0.c3 END, (rt0.c0 IN (rt0.c0, rt0.c3)), ((rt0.c3)/(rt0.c3)), 0.4108903782395532)) AND ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, (((rt0.c1, rt0.c0, rt0.c3))=((rt0.c0, rt0.c0, rt0.c4))), (rt0.c0 IN ()), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c1 COLLATE BINARY))) DESC, ((rt0.c3 COLLATE RTRIM)>(((rt0.c2) NOTNULL))) ASC LIMIT 1;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(CAST(rt0.c0 AS INTEGER)));
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (((SQLITE_COMPILEOPTION_USED(CAST(rt0.c0 AS INTEGER)))AND(x''))) ORDER BY CASE WHEN CASE WHEN rt0.c0 THEN x'8d4c' ELSE rt0.c3 END THEN (((NULL, rt0.c1)) BETWEEN ((rt0.c3, rt0.c4)) AND ((rt0.c2, rt0.c0))) WHEN rt0.c3 THEN (rt0.c0 IN ()) END ASC  NULLS LAST, (((((NULL, rt0.c4))!=((rt0.c3, rt0.c4)))) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c1, rt0.c2, rt0.c4, rt0.c1))==((rt0.c2, rt0.c0, rt0.c2, rt0.c0)))))  NULLS FIRST, ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END)))OR(CAST(rt0.c4 AS TEXT)))  NULLS LAST INTERSECT SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (CAST((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) AS TEXT)) ORDER BY CASE WHEN CASE WHEN rt0.c0 THEN x'8d4c' ELSE rt0.c3 END THEN (((NULL, rt0.c1)) BETWEEN ((rt0.c3, rt0.c4)) AND ((rt0.c2, rt0.c0))) WHEN rt0.c3 THEN (rt0.c0 IN ()) END ASC  NULLS LAST, (((((NULL, rt0.c4))!=((rt0.c3, rt0.c4)))) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c1, rt0.c2, rt0.c4, rt0.c1))=((rt0.c2, rt0.c0, rt0.c2, rt0.c0)))))  NULLS FIRST, ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END)))OR(CAST(rt0.c4 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((+ (((NULL)LIKE(rt0.c4))))) ORDER BY (((((((((((((- (rt0.c4)))OR(rt0.c3)))AND((rt0.c2 IN ()))))OR(rt0.c2)))OR((('i	RT샭*y[') NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR((+ (rt0.c0)))))AND((rt0.c4 IN ())))  NULLS FIRST, CASE (rt0.c4 IN (rt0.c1, rt0.c1))  WHEN ((rt0.c3) IS TRUE) THEN INSTR(rt0.c2, rt0.c2) ELSE ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) END  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((+ (((NULL)LIKE(rt0.c4))))) ORDER BY (((((((((((((- (rt0.c4)))OR(rt0.c3)))AND((rt0.c2 IN ()))))OR(rt0.c2)))OR((('i	RT샭*y[') NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR((+ (rt0.c0)))))AND((rt0.c4 IN ())))  NULLS FIRST, CASE (rt0.c4 IN (rt0.c1, rt0.c1))  WHEN ((rt0.c3) IS TRUE) THEN INSTR(rt0.c2, rt0.c2) ELSE ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) END  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c1)%(rt0.c2)) AS INTEGER)) ORDER BY (((((((((((((- (rt0.c4)))OR(rt0.c3)))AND((rt0.c2 IN ()))))OR(rt0.c2)))OR((('i	RT샭*y[') NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR((+ (rt0.c0)))))AND((rt0.c4 IN ())))  NULLS FIRST, CASE (rt0.c4 IN (rt0.c1, rt0.c1))  WHEN ((rt0.c3) IS TRUE) THEN INSTR(rt0.c2, rt0.c2) ELSE ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((+ (((NULL)LIKE(rt0.c4))))) ORDER BY (((((((((((((- (rt0.c4)))OR(rt0.c3)))AND((rt0.c2 IN ()))))OR(rt0.c2)))OR((('i	RT샭*y[') NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR((+ (rt0.c0)))))AND((rt0.c4 IN ())))  NULLS FIRST, CASE (rt0.c4 IN (rt0.c1, rt0.c1))  WHEN ((rt0.c3) IS TRUE) THEN INSTR(rt0.c2, rt0.c2) ELSE ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) END  NULLS LAST;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((((rt0.c3, rt0.c2))<=((rt0.c1, rt0.c1))) IN ()));
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((((rt0.c3, rt0.c2))<=((rt0.c1, rt0.c1))) IN ())) LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE ((((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c1) IS FALSE), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE x'14' END))<>((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)), CAST(rt0.c3 AS REAL), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)))) LIMIT 0;
SELECT * FROM rt0 WHERE (HEX(rt0.c4 COLLATE RTRIM)) ORDER BY ((- ('+')) IN ())  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((HEX(rt0.c4 COLLATE RTRIM))AND((((rt0.c4)) NOT BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((CAST(rt0.c0 AS REAL))))))) ORDER BY ((- ('+')) IN ())  NULLS LAST LIMIT 0;
SELECT * FROM rt0 WHERE (HEX(rt0.c4 COLLATE RTRIM)) ORDER BY ((- ('+')) IN ())  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END AS TEXT));
SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END AS TEXT)) ORDER BY rt0.c3 LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3 COLLATE BINARY) ORDER BY rt0.c3 LIMIT 1;
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END AS TEXT));
SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END AS TEXT)) ORDER BY rt0.c3 LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3 COLLATE BINARY) ORDER BY rt0.c3 LIMIT 1;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE ((- (rt0.c0 COLLATE RTRIM))) ORDER BY '-1292074844' DESC;
SELECT MIN(rt0.c0) FROM rt0 WHERE ((((- (rt0.c0 COLLATE RTRIM)))AND(CAST(LOWER(rt0.c2) AS TEXT)))) ORDER BY (rt0.c4 IN ()) ASC  NULLS LAST, (((((((((('-1747395865') NOTNULL))OR((((x'd2', rt0.c2)) NOT BETWEEN ((rt0.c1, x'fb40')) AND ((rt0.c1, rt0.c4))))))AND(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN '粠''' END)))AND((rt0.c4 IN (rt0.c4, rt0.c0)))))AND('968913057')) ASC;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((((rt0.c2)==(rt0.c2))) NOT BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 WHEN '> ' THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN x'49e422' END))) ORDER BY ((rt0.c0)OR(((((((rt0.c4)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))))  NULLS LAST, (NOT (((rt0.c4) IS FALSE))) DESC  NULLS FIRST, UNLIKELY((+ (rt0.c3)))  NULLS LAST;
SELECT MAX(rt0.c1) FROM rt0 WHERE (((((((rt0.c2)==(rt0.c2))) NOT BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 WHEN '> ' THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN x'49e422' END)))AND((((((rt0.c2, rt0.c4)) BETWEEN ((rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c2))))-(CAST(rt0.c0 AS BLOB)))))) ORDER BY ((rt0.c0)OR(((((((rt0.c4)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))))  NULLS LAST, (NOT (((rt0.c4) IS FALSE))) DESC  NULLS FIRST, UNLIKELY((+ (rt0.c3)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (0.5811681902200196);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (0.5811681902200196) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)<(rt0.c2)))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0) BETWEEN (NULL) AND (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)<(rt0.c2)))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0) BETWEEN (NULL) AND (rt0.c0))))) LIMIT 0x2 INTERSECT SELECT * FROM rt0 WHERE (rt0.c3) LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)<(rt0.c2)))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0) BETWEEN (NULL) AND (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)<(rt0.c2)))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c0) BETWEEN (NULL) AND (rt0.c0))))) LIMIT 0x2 INTERSECT SELECT * FROM rt0 WHERE (rt0.c3) LIMIT 0X2;
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT rt0.c2)) ORDER BY NULL;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((LIKELY(DISTINCT rt0.c2))AND(CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END AS INTEGER)))) ORDER BY ((NOT (rt0.c3)) IN ()), (((x'be')) NOT BETWEEN (((rt0.c0 IN (rt0.c0)))) AND (((+ (rt0.c2))))) DESC LIMIT 0X1;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c1)))>=(rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c1)))>=(rt0.c1 COLLATE RTRIM))) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND(rt0.c3 COLLATE NOCASE)))AND(TRIM(0.7681320185666598)))  NULLS LAST, (((('57870782')||(rt0.c4)))=(rt0.c2 COLLATE BINARY))  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c4, rt0.c3, rt0.c1))>((rt0.c1, rt0.c4, 0.7141080278524844, rt0.c2))))+(rt0.c4 COLLATE BINARY))) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND(rt0.c3 COLLATE NOCASE)))AND(TRIM(0.7681320185666598)))  NULLS LAST, (((('57870782')||(rt0.c4)))==(rt0.c2 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (NULL) LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE (rt0.c2) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (NULL) LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE (rt0.c2) LIMIT 1;
SELECT MAX(rt0.c1) FROM rt0 WHERE (NULL) ORDER BY ((((((ABS(rt0.c4))OR(((NULL) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((0.6111240846668111) NOT NULL))))OR(TRIM(DISTINCT rt0.c4, rt0.c3)))  NULLS LAST, rt0.c0;
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((NULL)AND(((~ (rt0.c4)) IN ())))) ORDER BY ((((((ABS(rt0.c4))OR(((NULL) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((0.6111240846668111) NOT NULL))))OR(TRIM(DISTINCT rt0.c4, rt0.c3)))  NULLS LAST, rt0.c0 LIMIT 0x4;
SELECT COUNT(*) FROM rt0 WHERE (((CAST(0.18733388856079813 AS INTEGER))IS NOT(rt0.c3)));
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(0.18733388856079813 AS INTEGER))IS NOT(rt0.c3)))AND(((((0X37309be) IS TRUE)) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END) AND (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN 0.4220587063327843 THEN rt0.c1 END))))) ORDER BY (rt0.c3 IN ()) COLLATE RTRIM ASC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((~ (rt0.c1))))) ORDER BY (rt0.c3 IN ()) COLLATE RTRIM ASC  NULLS LAST LIMIT 0X0;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN x'ac7338' THEN ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)) WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c4)LIKE(0.8323376384897074)) ELSE ((rt0.c3)!=(rt0.c0)) END);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE WHEN x'ac7338' THEN ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)) WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c4)LIKE(0.8323376384897074)) ELSE ((rt0.c3)!=(rt0.c0)) END)AND(((((rt0.c1) NOT NULL)) IS TRUE)))) LIMIT 0X1;
SELECT MIN(rt0.c3) FROM rt0 WHERE ((NOT (rt0.c1)));
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE ((NOT (rt0.c1))) LIMIT 0x3 INTERSECT SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (rt0.c0) LIMIT 3;
SELECT ALL * FROM rt0 WHERE ((0.6711629635922193 IN (rt0.c3)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((((0.6711629635922193 IN (rt0.c3)) COLLATE NOCASE)AND((('1831174746')+(((rt0.c3)<(rt0.c0))))))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((0.6711629635922193 IN (rt0.c3)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((((0.6711629635922193 IN (rt0.c3)) COLLATE NOCASE)AND((('1831174746')+(((rt0.c3)<(rt0.c0))))))) LIMIT 1;
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(((rt0.c1) IS FALSE), (rt0.c4 IN (rt0.c2)))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))<=(rt0.c1 COLLATE RTRIM)) DESC, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c4)) COLLATE BINARY;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (IFNULL(((rt0.c1) IS FALSE), (rt0.c4 IN (rt0.c2)))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))<=(rt0.c1 COLLATE RTRIM)) DESC, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c4)) COLLATE BINARY LIMIT 4;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (((((((rt0.c2, rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c4, rt0.c0, rt0.c1))), '-1555155468', ((rt0.c2) BETWEEN (rt0.c3) AND (0Xffffffffe70d343f))))!=((((rt0.c0) IS TRUE), ((rt0.c0) IS TRUE), (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))) ORDER BY ((((rt0.c1, rt0.c2))!=((rt0.c1, rt0.c2))) IN (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c2)), CAST(rt0.c0 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (((((((rt0.c2, rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c4, rt0.c0, rt0.c1))), '-1555155468', ((rt0.c2) BETWEEN (rt0.c3) AND (-418565057))))!=((((rt0.c0) IS TRUE), ((rt0.c0) IS TRUE), (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))) ORDER BY ((((rt0.c1, rt0.c2))<>((rt0.c1, rt0.c2))) IN (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c2)), CAST(rt0.c0 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT MAX(rt0.c4) FROM rt0 WHERE ('-831091294');
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ((('-831091294')AND(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE BINARY))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) NOT NULL)) ORDER BY load_extension(((rt0.c2)GLOB(rt0.c4))) ASC, COALESCE(rt0.c3 COLLATE NOCASE, ((rt0.c2)||(rt0.c0))) ASC, (((rt0.c0, rt0.c4, rt0.c0)) NOT BETWEEN (((rt0.c4 IN ()), ((rt0.c4) ISNULL), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((LIKELIHOOD(DISTINCT rt0.c0, rt0.c1), ((rt0.c4)&(rt0.c4)), rt0.c2))) ASC, ((rt0.c4 COLLATE BINARY)OR(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4))))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) NOT NULL)) ORDER BY ((((-622273672)=(rt0.c2))) BETWEEN (('635499969' IN (rt0.c0, '-617008658'))) AND (-1.240337007E9));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) NOT NULL)) ORDER BY load_extension(((rt0.c2)GLOB(rt0.c4))) ASC, COALESCE(rt0.c3 COLLATE NOCASE, ((rt0.c2)||(rt0.c0))) ASC, (((rt0.c0, rt0.c4, rt0.c0)) NOT BETWEEN (((rt0.c4 IN ()), ((rt0.c4) ISNULL), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((LIKELIHOOD(DISTINCT rt0.c0, rt0.c1), ((rt0.c4)&(rt0.c4)), rt0.c2))) ASC, ((rt0.c4 COLLATE BINARY)OR(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY ((((rt0.c2) NOT NULL))/(rt0.c4 COLLATE RTRIM))  NULLS FIRST, ((SUBSTR(rt0.c3, x'3a'))%(((rt0.c0)-(rt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY ((CAST(rt0.c1 AS NUMERIC))LIKE(((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))) ASC LIMIT 0X0 INTERSECT SELECT * FROM rt0 WHERE ((+ (((rt0.c3)<(rt0.c2))))) ORDER BY ((CAST(rt0.c1 AS NUMERIC))LIKE(((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))) ASC LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY ((((rt0.c2) NOT NULL))/(rt0.c4 COLLATE RTRIM))  NULLS FIRST, ((SUBSTR(rt0.c3, x'3a'))%(((rt0.c0)-(rt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY ((CAST(rt0.c1 AS NUMERIC))LIKE(((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))) ASC LIMIT 0X0 INTERSECT SELECT * FROM rt0 WHERE ((+ (((rt0.c3)<(rt0.c2))))) ORDER BY ((CAST(rt0.c1 AS NUMERIC))LIKE(((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))) ASC LIMIT 0x0;
SELECT MIN(rt0.c4) FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)>>((rt0.c0 IN (rt0.c0))))) ORDER BY rt0.c1 COLLATE NOCASE, (((~ (rt0.c1))) BETWEEN (((rt0.c0)GLOB(rt0.c0))) AND (0.18733388856079813));
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)>>((rt0.c0 IN (rt0.c0)))))AND(((('' IN (rt0.c2, rt0.c2))) BETWEEN ((NOT (rt0.c2))) AND (rt0.c3 COLLATE RTRIM))))) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(0.8166027854725564)))AND(rt0.c2)))AND(rt0.c2)))-(CASE rt0.c1  WHEN rt0.c0 THEN 0.18909315373070135 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 END))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 END))))AND(((((rt0.c1)!=(rt0.c2))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (rt0.c4))))) INTERSECT SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((((((+ (rt0.c3)))OR((((rt0.c4))=((x'c377449f'))))))OR(rt0.c1)));
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((((((+ (rt0.c3)))OR((((rt0.c4))=((x'c377449f'))))))OR(rt0.c1))) ORDER BY (NOT (rt0.c1 COLLATE NOCASE)) ASC  NULLS LAST, ((((-17444916)AND(((rt0.c2) IS TRUE))))AND(rt0.c2))  NULLS FIRST, (((rt0.c4)) NOT BETWEEN ((CASE WHEN '-1909189608' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c2 ELSE rt0.c3 END)) AND ((((rt0.c1) ISNULL)))) ASC INTERSECT SELECT MIN(rt0.c1) FROM rt0 WHERE ((((rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((rt0.c4, rt0.c1, rt0.c4, rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c1, rt0.c3, rt0.c4, rt0.c3))) COLLATE NOCASE) ORDER BY (NOT (rt0.c1 COLLATE NOCASE)) ASC  NULLS LAST, ((((-17444916)AND(((rt0.c2) IS TRUE))))AND(rt0.c2))  NULLS FIRST, (((rt0.c4)) NOT BETWEEN ((CASE WHEN '-1909189608' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c2 ELSE rt0.c3 END)) AND ((((rt0.c1) ISNULL)))) ASC;
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c4) NOT NULL)) NOT BETWEEN (((rt0.c3)GLOB(rt0.c0))) AND (rt0.c1))) ORDER BY LOWER(rt0.c1) COLLATE NOCASE DESC, ((rt0.c4 IN (rt0.c4)) IN ((((rt0.c0, rt0.c2)) BETWEEN ((NULL, rt0.c2)) AND ((rt0.c1, rt0.c1))))) ASC, ((((((rt0.c2)*(rt0.c4)))AND(CAST(rt0.c1 AS NUMERIC))))OR(rt0.c4))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((rt0.c4) NOT NULL)) NOT BETWEEN (((rt0.c3)GLOB(rt0.c0))) AND (rt0.c1)))AND((((NOT (rt0.c1)))!=((rt0.c1 IN (rt0.c0, rt0.c4))))))) ORDER BY ((((rt0.c0)IS NOT(rt0.c1))) NOTNULL) LIMIT 0x2;
SELECT * FROM rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) NOT BETWEEN (((rt0.c1)*(rt0.c3))) AND ('-1243883589' COLLATE NOCASE))) ORDER BY (NOT (((rt0.c1)OR(rt0.c1)))), (((rt0.c1, rt0.c2, rt0.c2, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c3, rt0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) NOT BETWEEN (((rt0.c1)*(rt0.c3))) AND ('-1243883589' COLLATE NOCASE)))AND(rt0.c4))) ORDER BY (NOT (((rt0.c1)OR(rt0.c1)))), (((rt0.c1, rt0.c2, rt0.c2, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c3, rt0.c0))) COLLATE NOCASE  NULLS FIRST LIMIT 2;
SELECT * FROM rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) NOT BETWEEN (((rt0.c1)*(rt0.c3))) AND ('-1243883589' COLLATE NOCASE))) ORDER BY (NOT (((rt0.c1)OR(rt0.c1)))), (((rt0.c1, rt0.c2, rt0.c2, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c3, rt0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) NOT BETWEEN (((rt0.c1)*(rt0.c3))) AND ('-1243883589' COLLATE NOCASE)))AND(rt0.c4))) ORDER BY (NOT (((rt0.c1)OR(rt0.c1)))), (((rt0.c1, rt0.c2, rt0.c2, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c3, rt0.c0))) COLLATE NOCASE  NULLS FIRST LIMIT 2;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) BETWEEN (((rt0.c0)*(rt0.c3))) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY (('1821523918')*(((rt0.c0)<(rt0.c4))))  NULLS FIRST, ((rt0.c0 COLLATE RTRIM) BETWEEN (x'') AND (((rt0.c1)LIKE(rt0.c0)))) DESC  NULLS FIRST;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) BETWEEN (((rt0.c0)*(rt0.c3))) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY ((((rt0.c3)!=(rt0.c1)))GLOB('	\j')) ASC  NULLS LAST, ((((((rt0.c4)AND(CAST(x'e9a5a1dd' AS REAL))))AND((((0.13348305304030128)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR((+ (rt0.c1)))) DESC, ((((rt0.c0)AND((NOT (rt0.c4)))))OR(((rt0.c0)AND(rt0.c1)))) INTERSECT SELECT MIN(rt0.c2) FROM rt0 WHERE (((0.7549030911747332)GLOB((- (rt0.c1))))) ORDER BY ((((rt0.c3)<>(rt0.c1)))GLOB('	\j')) ASC  NULLS LAST, ((((((rt0.c4)AND(CAST(x'e9a5a1dd' AS REAL))))AND((((0.13348305304030128)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR((+ (rt0.c1)))) DESC, ((((rt0.c0)AND((NOT (rt0.c4)))))OR(((rt0.c0)AND(rt0.c1))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>(rt0.c3))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN 0.346269196394696 THEN rt0.c3 END) AND (((x'a0f7ec') BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((NULL COLLATE RTRIM) NOT NULL) DESC, json_array((((rt0.c4, rt0.c3, 0.36109135457464525))!=((rt0.c3, rt0.c1, rt0.c1))), (rt0.c1 IN ()), CHANGES());
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)>(rt0.c3))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN 0.346269196394696 THEN rt0.c3 END) AND (((x'a0f7ec') BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((NULL COLLATE RTRIM) NOT NULL) DESC, json_array((((rt0.c4, rt0.c3, 0.36109135457464525))!=((rt0.c3, rt0.c1, rt0.c1))), (rt0.c1 IN ()), CHANGES()) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c0)))OR(NULL)))=(rt0.c4))) ORDER BY ((NULL COLLATE RTRIM) NOT NULL) DESC, json_array((((rt0.c4, rt0.c3, 0.36109135457464525))!=((rt0.c3, rt0.c1, rt0.c1))), (rt0.c1 IN ()), CHANGES());
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>(rt0.c3))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN 0.346269196394696 THEN rt0.c3 END) AND (((x'a0f7ec') BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((NULL COLLATE RTRIM) NOT NULL) DESC, json_array((((rt0.c4, rt0.c3, 0.36109135457464525))!=((rt0.c3, rt0.c1, rt0.c1))), (rt0.c1 IN ()), CHANGES());
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)>(rt0.c3))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN 0.346269196394696 THEN rt0.c3 END) AND (((x'a0f7ec') BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((NULL COLLATE RTRIM) NOT NULL) DESC, json_array((((rt0.c4, rt0.c3, 0.36109135457464525))!=((rt0.c3, rt0.c1, rt0.c1))), (rt0.c1 IN ()), CHANGES()) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c0)))OR(NULL)))=(rt0.c4))) ORDER BY ((NULL COLLATE RTRIM) NOT NULL) DESC, json_array((((rt0.c4, rt0.c3, 0.36109135457464525))!=((rt0.c3, rt0.c1, rt0.c1))), (rt0.c1 IN ()), CHANGES());
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt0 WHERE (rt0.c1) LIMIT 2 INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN ((+ (rt0.c3))) AND (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))) LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt0 WHERE (rt0.c1) LIMIT 2 INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN ((+ (rt0.c3))) AND (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))) LIMIT 0X2;
SELECT * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 ELSE 0x4ed468 END THEN ((rt0.c0)%(rt0.c4)) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN CAST(rt0.c3 AS TEXT) WHEN CASE x'48'  WHEN rt0.c1 THEN rt0.c1 END THEN (rt0.c3 IN ()) ELSE NULLIF(rt0.c3, rt0.c4) END) ORDER BY ((((rt0.c0) ISNULL))>=(rt0.c2))  NULLS LAST, NULL DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 ELSE 5166184 END THEN ((rt0.c0)%(rt0.c4)) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN CAST(rt0.c3 AS TEXT) WHEN CASE x'48'  WHEN rt0.c1 THEN rt0.c1 END THEN (rt0.c3 IN ()) ELSE NULLIF(rt0.c3, rt0.c4) END) ORDER BY (((rt0.c2 IN (rt0.c2)))%((((rt0.c3, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c3))))), ((((((((rt0.c4) BETWEEN (rt0.c1) AND ('2槉%Rf[Z2')))OR((rt0.c3 IN (rt0.c4)))))OR((rt0.c0 IN (rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) ASC LIMIT 1;
SELECT * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 ELSE 0x4ed468 END THEN ((rt0.c0)%(rt0.c4)) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN CAST(rt0.c3 AS TEXT) WHEN CASE x'48'  WHEN rt0.c1 THEN rt0.c1 END THEN (rt0.c3 IN ()) ELSE NULLIF(rt0.c3, rt0.c4) END) ORDER BY ((((rt0.c0) ISNULL))>=(rt0.c2))  NULLS LAST, NULL DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 ELSE 5166184 END THEN ((rt0.c0)%(rt0.c4)) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN CAST(rt0.c3 AS TEXT) WHEN CASE x'48'  WHEN rt0.c1 THEN rt0.c1 END THEN (rt0.c3 IN ()) ELSE NULLIF(rt0.c3, rt0.c4) END) ORDER BY (((rt0.c2 IN (rt0.c2)))%((((rt0.c3, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c3))))), ((((((((rt0.c4) BETWEEN (rt0.c1) AND ('2槉%Rf[Z2')))OR((rt0.c3 IN (rt0.c4)))))OR((rt0.c0 IN (rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) ASC LIMIT 1;
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(rt0.c0))) ORDER BY ((rt0.c4 COLLATE RTRIM)=(highlight(rt0.c1, rt0.c3, rt0.c2, x''))), ((((rt0.c3) NOT NULL))<<(rt0.c4)) DESC, ((x'b9') NOT NULL) DESC LIMIT 1;
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(rt0.c0))) ORDER BY ((rt0.c4 COLLATE RTRIM)=(highlight(rt0.c1, rt0.c3, rt0.c2, x''))), ((((rt0.c3) NOT NULL))<<(rt0.c4)) DESC, ((x'b9') NOT NULL) DESC LIMIT 1;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) NOT NULL)) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))<=(rt0.c0 COLLATE BINARY)), ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c3)) DESC  NULLS LAST, (~ ((+ (rt0.c0)))) ASC;
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c2))) NOT NULL))AND(((((rt0.c1) ISNULL))&(rt0.c1))))) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))<=(rt0.c0 COLLATE BINARY)), ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c3)) DESC  NULLS LAST, (~ ((+ (rt0.c0)))) ASC LIMIT 2 INTERSECT SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (x'') ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))<=(rt0.c0 COLLATE BINARY)), ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c3)) DESC  NULLS LAST, (~ ((+ (rt0.c0)))) ASC LIMIT 0X2;
SELECT MAX(rt0.c4) FROM rt0 WHERE ((((rt0.c2, rt0.c4, rt0.c4)) BETWEEN (('-1427604073', ((((((rt0.c3)AND(0.12514839164495883)))OR(rt0.c2)))AND(rt0.c0)), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))) AND ((((rt0.c4)%(rt0.c3)), NULL, ((rt0.c3) IS FALSE))))) ORDER BY (+ (((rt0.c0)>>(rt0.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ((((rt0.c2, rt0.c4, rt0.c4)) BETWEEN (('-1427604073', ((((((rt0.c3)AND(0.12514839164495883)))OR(rt0.c2)))AND(rt0.c0)), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))) AND ((((rt0.c4)%(rt0.c3)), NULL, ((rt0.c3) IS FALSE))))) ORDER BY (+ (((rt0.c0)>>(rt0.c1)))) ASC  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((x'2ea22660') NOT BETWEEN ((((rt0.c0, NULL, rt0.c1))<((rt0.c1, '', rt0.c3)))) AND ((rt0.c4 IN ())))) ORDER BY (+ (((rt0.c0)>>(rt0.c1)))) ASC  NULLS FIRST LIMIT 3;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) NOTNULL)) ORDER BY x'bd80a3' DESC  NULLS LAST, rt0.c3, rt0.c4, 0.3209313386443746 ASC;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) NOTNULL)) ORDER BY (((rt0.c4 IN (rt0.c0, rt0.c0))) BETWEEN (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 WHEN x'fb' THEN rt0.c3 ELSE rt0.c2 END) AND (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), ((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))<>((((rt0.c2)<<(0.924936933129825))))) ASC  NULLS FIRST;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))!=((rt0.c0 IN ())))) ORDER BY (('ܲX^pD') ISNULL) ASC;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))<((rt0.c0 IN ())))) ORDER BY (('ܲX^pD') ISNULL) ASC LIMIT 1;
SELECT MIN(rt0.c3) FROM rt0 WHERE (((IFNULL(DISTINCT rt0.c4, rt0.c3))*(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (((((IFNULL(DISTINCT rt0.c4, rt0.c3))*(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))))AND((((rt0.c3 IN ()))IS NOT(rt0.c0 COLLATE BINARY))))) ORDER BY -8.31091294E8 DESC  NULLS LAST, ((CAST(rt0.c2 AS REAL))IS NOT(IFNULL(rt0.c1, rt0.c0))) ASC, x'6c' INTERSECT SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (((CAST(rt0.c4 AS REAL)) NOT BETWEEN (((rt0.c4)+(rt0.c3))) AND ((((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c3)) AND ((rt0.c1, -275123778, rt0.c2)))))) ORDER BY -8.31091294E8 DESC  NULLS LAST, ((CAST(rt0.c2 AS REAL))IS NOT(IFNULL(rt0.c1, rt0.c0))) ASC, x'6c';
SELECT MIN(rt0.c4) FROM rt0 WHERE (CAST(((((rt0.c4)AND(rt0.c0)))OR(rt0.c0)) AS INTEGER)) ORDER BY ((((((((CAST(rt0.c0 AS TEXT))OR(((NULL)IS(rt0.c3)))))AND(NULL)))AND(((rt0.c2)%(0.4038951211060825)))))AND(((rt0.c0) NOT NULL)))  NULLS LAST, (NOT ((rt0.c3 IN ()))), CASE ((x'') NOTNULL)  WHEN ((((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)))AND(' nQ')) THEN ((rt0.c2)=('')) WHEN (((rt0.c2, rt0.c4, rt0.c3, rt0.c3))>((rt0.c3, rt0.c0, rt0.c0, rt0.c0))) THEN 'ﹰF' ELSE ((((rt0.c2)OR(rt0.c4)))AND(rt0.c2)) END ASC  NULLS LAST;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((CAST(((((rt0.c4)AND(rt0.c0)))OR(rt0.c0)) AS INTEGER))AND((((rt0.c3 IN (rt0.c4))) BETWEEN ((rt0.c4 IN (rt0.c3))) AND ((rt0.c4 IN (rt0.c1))))))) ORDER BY CASE (('1779677925') IS TRUE)  WHEN '1019767083' THEN (rt0.c4 IN ()) ELSE rt0.c4 COLLATE BINARY END  NULLS FIRST, ((rt0.c3)%(rt0.c3)) COLLATE NOCASE ASC, CAST(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)) AS INTEGER) ASC  NULLS LAST INTERSECT SELECT ALL MIN(rt0.c4) FROM rt0 WHERE ((((rt0.c2, ((rt0.c0)IS NOT(rt0.c1)), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))<=((CAST(rt0.c1 AS TEXT), 0.008528173379292014, (rt0.c2 IN (rt0.c3)))))) ORDER BY CASE (('1779677925') IS TRUE)  WHEN '1019767083' THEN (rt0.c4 IN ()) ELSE rt0.c4 COLLATE BINARY END  NULLS FIRST, ((rt0.c3)%(rt0.c3)) COLLATE NOCASE ASC, CAST(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)) AS INTEGER) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((x'c365')OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((1158255362, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c0)))) AND (LIKELY(rt0.c1))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((x'c365')OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((1158255362, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c0)))) AND (LIKELY(rt0.c1))))AND(rt0.c2))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((0Xffffffffe1f664f4)) AND ((rt0.c3)))) ISNULL)  NULLS FIRST, (((rt0.c1)>(rt0.c0)) IN (NULL))  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (0x7f388e7e) ORDER BY (((((rt0.c1)) NOT BETWEEN ((0xffffffffe1f664f4)) AND ((rt0.c3)))) ISNULL)  NULLS FIRST, (((rt0.c1)>(rt0.c0)) IN (NULL))  NULLS LAST LIMIT 1;
SELECT * FROM rt0 WHERE (((((((x'c365')OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((1158255362, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c0)))) AND (LIKELY(rt0.c1))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((x'c365')OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((1158255362, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c0)))) AND (LIKELY(rt0.c1))))AND(rt0.c2))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((0Xffffffffe1f664f4)) AND ((rt0.c3)))) ISNULL)  NULLS FIRST, (((rt0.c1)>(rt0.c0)) IN (NULL))  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (0x7f388e7e) ORDER BY (((((rt0.c1)) NOT BETWEEN ((0xffffffffe1f664f4)) AND ((rt0.c3)))) ISNULL)  NULLS FIRST, (((rt0.c1)>(rt0.c0)) IN (NULL))  NULLS LAST LIMIT 1;
SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN (((rt0.c1)>>(rt0.c3))) AND (CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END))) ORDER BY (NOT (((NULL) ISNULL))) ASC, load_extension(CASE WHEN rt0.c2 THEN rt0.c0 END) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) BETWEEN (((rt0.c1)>>(rt0.c3))) AND (CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END))) ORDER BY ((rt0.c1)IS((NOT (rt0.c3)))) DESC, (((NOT (rt0.c1)))LIKE('1313904577')) DESC  NULLS LAST, ((((((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1))) ISNULL)  NULLS LAST LIMIT 0X1;
SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN (((rt0.c1)>>(rt0.c3))) AND (CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END))) ORDER BY (NOT (((NULL) ISNULL))) ASC, load_extension(CASE WHEN rt0.c2 THEN rt0.c0 END) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c4)))OR('叨')), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)), rt0.c4, CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 END)) AND ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN x'8db260' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END, ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)), CAST('''掱7vD_' AS REAL), UNLIKELY(rt0.c4))))) ORDER BY CASE (((0.8246898401545959, NULL, rt0.c3, rt0.c3, '1401086913'))<=((rt0.c3, rt0.c2, rt0.c2, rt0.c0, rt0.c1)))  WHEN CAST(rt0.c0 AS REAL) THEN (((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c3, rt0.c2, rt0.c3))) ELSE NULLIF(rt0.c4, rt0.c1) END DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c4)))OR('叨')), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)), rt0.c4, CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 END)) AND ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN x'8db260' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END, ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)), CAST('''掱7vD_' AS REAL), UNLIKELY(rt0.c4))))) ORDER BY (+ ((((rt0.c0, rt0.c4))<((rt0.c2, rt0.c0))))) ASC  NULLS FIRST, ((CAST(rt0.c1 AS TEXT))-(LOWER(rt0.c1))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c0, rt0.c3)) BETWEEN ((rt0.c4, rt0.c1)) AND ((rt0.c2, rt0.c0))) IN ((((NULL, rt0.c3, rt0.c1, rt0.c3))>=((rt0.c4, rt0.c2, rt0.c3, rt0.c4)))))) ORDER BY (+ ((((rt0.c0, rt0.c4))<((rt0.c2, rt0.c0))))) ASC  NULLS FIRST, ((CAST(rt0.c1 AS TEXT))-(LOWER(rt0.c1)));
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (LOWER(DISTINCT ((rt0.c4)==(rt0.c3)))) ORDER BY ((rt0.c4 IN ()) IN (x'3b')), ((((((rt0.c3)|(rt0.c2)))AND((+ (rt0.c1)))))AND(LOWER(rt0.c2)))  NULLS LAST, x'4a' DESC;
SELECT MAX(rt0.c3) FROM rt0 WHERE (LOWER(DISTINCT ((rt0.c4)=(rt0.c3)))) ORDER BY CHAR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))) DESC LIMIT 0;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (rt0.c3) ORDER BY (((0.2654944958319284 IN ()))OR('1540129387')) ASC, 0X7748aece  NULLS LAST;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (rt0.c3) ORDER BY CAST(x'ac' AS TEXT) DESC LIMIT 0x0 INTERSECT SELECT MAX(rt0.c4) FROM rt0 WHERE ('') ORDER BY CAST(x'ac' AS TEXT) DESC LIMIT 0;
SELECT * FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))AND(UPPER(rt0.c4))))AND(rt0.c1)));
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))AND(UPPER(rt0.c4))))AND(rt0.c1)))AND(CASE WHEN ((0.9006854618414085)IS NOT(-1731452263)) THEN ((rt0.c1)&(rt0.c3)) WHEN rt0.c2 COLLATE RTRIM THEN (NOT (rt0.c0)) END)));
SELECT * FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))AND(UPPER(rt0.c4))))AND(rt0.c1)));
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))AND(UPPER(rt0.c4))))AND(rt0.c1)))AND(CASE WHEN ((0.9006854618414085)IS NOT(-1731452263)) THEN ((rt0.c1)&(rt0.c3)) WHEN rt0.c2 COLLATE RTRIM THEN (NOT (rt0.c0)) END)));
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)AND(0xbbbba84))) LIMIT 0x5;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)AND(0xbbbba84))) LIMIT 0x5;
SELECT MAX(rt0.c3) FROM rt0 WHERE (((((((((((((rt0.c1 COLLATE RTRIM)AND(((rt0.c4) ISNULL))))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))OR((((rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c2)) AND ((NULL, rt0.c2))))))OR((NOT (rt0.c3)))))OR(((x'') NOTNULL))))AND((rt0.c1 IN ())))) ORDER BY (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))) DESC, CASE CAST(rt0.c0 AS REAL)  WHEN ABS(DISTINCT rt0.c2) THEN (((((('-669012604')OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)) WHEN UPPER(rt0.c3) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)) WHEN CASE WHEN rt0.c2 THEN 0Xffffffff94d9d351 ELSE rt0.c0 END THEN INSTR(rt0.c3, rt0.c0) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((rt0.c4)GLOB(rt0.c2)) END ASC;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((((((((((rt0.c1 COLLATE RTRIM)AND(((rt0.c4) ISNULL))))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))OR((((rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c2)) AND ((NULL, rt0.c2))))))OR((NOT (rt0.c3)))))OR(((x'') NOTNULL))))AND((rt0.c1 IN ())))) ORDER BY (((('185483481') BETWEEN (rt0.c4) AND ('-1240337007'))) BETWEEN (NULL) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END)) DESC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (0Xffffffff970aad20) ORDER BY (((('185483481') BETWEEN (rt0.c4) AND ('-1240337007'))) BETWEEN (NULL) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END)) DESC  NULLS LAST LIMIT 1;
SELECT * FROM rt0 WHERE (((((rt0.c0)||(rt0.c0))) IS TRUE)) ORDER BY ((((((((((((((rt0.c1)AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END)))AND(((rt0.c3)||(rt0.c1)))))AND(rt0.c4 COLLATE RTRIM)))OR((rt0.c3 IN ()))))OR('''oaPV')))OR(rt0.c2)))OR((((rt0.c3, x'7e', rt0.c2)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND ((rt0.c4, rt0.c0, rt0.c2))))) ASC  NULLS LAST, (NOT (x'')) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c0)||(rt0.c0))) IS TRUE))AND(1178481895))) ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<>((rt0.c1 COLLATE BINARY)))  NULLS LAST, 2081119821 DESC INTERSECT SELECT * FROM rt0 WHERE ('') ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<>((rt0.c1 COLLATE BINARY)))  NULLS LAST, 2081119821 DESC;
SELECT * FROM rt0 WHERE (((((rt0.c0)||(rt0.c0))) IS TRUE)) ORDER BY ((((((((((((((rt0.c1)AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END)))AND(((rt0.c3)||(rt0.c1)))))AND(rt0.c4 COLLATE RTRIM)))OR((rt0.c3 IN ()))))OR('''oaPV')))OR(rt0.c2)))OR((((rt0.c3, x'7e', rt0.c2)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND ((rt0.c4, rt0.c0, rt0.c2))))) ASC  NULLS LAST, (NOT (x'')) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c0)||(rt0.c0))) IS TRUE))AND(1178481895))) ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<>((rt0.c1 COLLATE BINARY)))  NULLS LAST, 2081119821 DESC INTERSECT SELECT * FROM rt0 WHERE ('') ORDER BY (((CAST(rt0.c1 AS NUMERIC)))<>((rt0.c1 COLLATE BINARY)))  NULLS LAST, 2081119821 DESC;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (- (rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN (rt0.c2 IN ('-214264519', rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)) WHEN (+ (NULL)) THEN (+ (rt0.c3)) ELSE ABS(rt0.c3) END);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN (- (rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN (rt0.c2 IN ('-214264519')) THEN rt0.c0 COLLATE BINARY WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)) WHEN (+ (NULL)) THEN (+ (rt0.c3)) ELSE ABS(rt0.c3) END)AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM))) LIMIT 2 INTERSECT SELECT COUNT(*) FROM rt0 WHERE (CHANGES()) LIMIT 2;
SELECT * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END THEN (((rt0.c4, rt0.c3, rt0.c3))>((rt0.c4, rt0.c3, rt0.c0))) WHEN ((NULL)<(rt0.c2)) THEN ((rt0.c0)*(rt0.c4)) ELSE LOWER(rt0.c4) END);
SELECT * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END THEN (((rt0.c4, rt0.c3, rt0.c3))>((rt0.c4, rt0.c3, rt0.c0))) WHEN ((NULL)<(rt0.c2)) THEN ((rt0.c0)*(rt0.c4)) ELSE LOWER(rt0.c4) END) ORDER BY ((rt0.c4) IS TRUE) COLLATE BINARY COLLATE NOCASE  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c4) IS TRUE) COLLATE BINARY COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END THEN (((rt0.c4, rt0.c3, rt0.c3))>((rt0.c4, rt0.c3, rt0.c0))) WHEN ((NULL)<(rt0.c2)) THEN ((rt0.c0)*(rt0.c4)) ELSE LOWER(rt0.c4) END);
SELECT * FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END THEN (((rt0.c4, rt0.c3, rt0.c3))>((rt0.c4, rt0.c3, rt0.c0))) WHEN ((NULL)<(rt0.c2)) THEN ((rt0.c0)*(rt0.c4)) ELSE LOWER(rt0.c4) END) ORDER BY ((rt0.c4) IS TRUE) COLLATE BINARY COLLATE NOCASE  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c4) IS TRUE) COLLATE BINARY COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL)) ISNULL)) ORDER BY CASE WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c2)%(rt0.c4)) ELSE ((rt0.c4)<(x'dd')) END ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL)) ISNULL)) ORDER BY CASE WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c2)%(rt0.c4)) ELSE ((rt0.c4)<(x'dd')) END ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL)) ISNULL)) ORDER BY CASE WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c2)%(rt0.c4)) ELSE ((rt0.c4)<(x'dd')) END ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL)) ISNULL)) ORDER BY CASE WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c2)%(rt0.c4)) ELSE ((rt0.c4)<(x'dd')) END ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c1))) ORDER BY ((CASE WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN x'' ELSE x'' END) NOTNULL) ASC  NULLS FIRST, NULL ASC;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((+ (rt0.c1))) ORDER BY ((CASE WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN x'' ELSE x'' END) NOTNULL) ASC  NULLS FIRST, NULL ASC LIMIT 3;
SELECT * FROM rt0 WHERE ((((~ (rt0.c0)))<>(rt0.c3)));
SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c0)))<>(rt0.c3)));
SELECT * FROM rt0 WHERE ((((~ (rt0.c0)))<>(rt0.c3)));
SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c0)))<>(rt0.c3)));
SELECT MIN(rt0.c4) FROM rt0 WHERE (rt0.c0);
SELECT MIN(rt0.c4) FROM rt0 WHERE (((rt0.c0)AND((+ (CAST(rt0.c2 AS REAL)))))) ORDER BY ((rt0.c2)GLOB(rt0.c2)) COLLATE RTRIM LIMIT 0X1 INTERSECT SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c2)GLOB(rt0.c2)) COLLATE RTRIM LIMIT 0X1;
SELECT * FROM rt0 WHERE (CAST(json(rt0.c3) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (CAST(json(rt0.c3) AS NUMERIC)) ORDER BY ((((('-449445708')GLOB(rt0.c1)), (rt0.c3 IN ()), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=((rt0.c1, ((rt0.c0) IS FALSE), (((x'bd', rt0.c2)) BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c0)))))) ASC  NULLS FIRST, ((rt0.c0) NOT BETWEEN ((rt0.c3 IN ())) AND (CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)) DESC LIMIT 4 INTERSECT SELECT * FROM rt0 WHERE (0.6772414757124822) ORDER BY ((((('-449445708')GLOB(rt0.c1)), (rt0.c3 IN ()), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=((rt0.c1, ((rt0.c0) IS FALSE), (((x'bd', rt0.c2)) BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c0)))))) ASC  NULLS FIRST, ((rt0.c0) NOT BETWEEN ((rt0.c3 IN ())) AND (CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)) DESC LIMIT 4;
SELECT * FROM rt0 WHERE (CAST(json(rt0.c3) AS NUMERIC));
SELECT MIN(rt0.c3) FROM rt0 WHERE ((~ (CASE WHEN rt0.c4 THEN x'2ea5e3' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END))) ORDER BY UPPER(DISTINCT rt0.c1) COLLATE RTRIM  NULLS LAST, CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB)  NULLS LAST;
SELECT MIN(rt0.c3) FROM rt0 WHERE ((((~ (CASE WHEN rt0.c4 THEN x'2ea5e3' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)))AND(CAST((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) AS NUMERIC)))) ORDER BY UPPER(DISTINCT rt0.c1) COLLATE RTRIM  NULLS LAST, CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB)  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE BINARY) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 END IN (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c4 IN ()))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)AND(((HEX(DISTINCT rt0.c2))IS(CAST(rt0.c1 AS BLOB)))))) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 END IN (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c4 IN ()))) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE BINARY) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 END IN (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c4 IN ()))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)AND(((HEX(DISTINCT rt0.c2))IS(CAST(rt0.c1 AS BLOB)))))) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 END IN (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c4 IN ()))) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))/((rt0.c1 IN ())))) ORDER BY (((('?{{o}') NOT BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))/((rt0.c1 IN ()))))AND(CASE CAST(rt0.c1 AS REAL)  WHEN rt0.c0 COLLATE NOCASE THEN rt0.c4 COLLATE BINARY WHEN '-1399179229' THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) END))) ORDER BY (((('?{{o}') NOT BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE ((CAST(rt0.c3 AS REAL) IN ((rt0.c4 IN (rt0.c2, x'')), TYPEOF(rt0.c3)))) ORDER BY (((('?{{o}') NOT BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))/((rt0.c1 IN ())))) ORDER BY (((('?{{o}') NOT BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))/((rt0.c1 IN ()))))AND(CASE CAST(rt0.c1 AS REAL)  WHEN rt0.c0 COLLATE NOCASE THEN rt0.c4 COLLATE BINARY WHEN '-1399179229' THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) END))) ORDER BY (((('?{{o}') NOT BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE ((CAST(rt0.c3 AS REAL) IN ((rt0.c4 IN (rt0.c2, x'')), TYPEOF(rt0.c3)))) ORDER BY (((('?{{o}') NOT BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE) ASC  NULLS FIRST LIMIT 1;
SELECT MIN(rt0.c1) FROM rt0 WHERE (((CAST(rt0.c4 AS REAL))LIKE(CAST(rt0.c3 AS BLOB)))) ORDER BY rt0.c0 DESC;
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (((CAST(rt0.c4 AS REAL))LIKE(CAST(rt0.c3 AS BLOB)))) ORDER BY rt0.c0 DESC LIMIT 0 INTERSECT SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (((((((((((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)AND((rt0.c3 IN (rt0.c0, rt0.c2)))))AND(TYPEOF(rt0.c0))))AND(((rt0.c1) ISNULL))))OR((~ (rt0.c4)))))AND(rt0.c4))) ORDER BY rt0.c0 DESC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)%(json_insert(rt0.c4, rt0.c1, 0.725170635083402))));
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)%(json_insert(rt0.c4, rt0.c1, 0.725170635083402)))) ORDER BY ((((((NULL) BETWEEN (rt0.c3) AND (rt0.c4)))OR(((((x'')OR(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c0) NOTNULL))) ASC  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)))/(((x'f79d')OR(rt0.c0))))) ORDER BY ((((((NULL) BETWEEN (rt0.c3) AND (rt0.c4)))OR(((((x'')OR(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c0) NOTNULL))) ASC  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)%(json_insert(rt0.c4, rt0.c1, 0.725170635083402))));
SELECT ALL * FROM rt0 WHERE (0x6a86c1dc) ORDER BY QUOTE(rt0.c2 COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((0x6a86c1dc)AND(((CAST(rt0.c2 AS BLOB))GLOB(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2))))))) ORDER BY (rt0.c1 IN ()) ASC, (NOT (rt0.c0))  NULLS LAST LIMIT 3 INTERSECT SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END IN (((rt0.c2) NOTNULL)))) ORDER BY (rt0.c1 IN ()) ASC, (NOT (rt0.c0))  NULLS LAST LIMIT 0x3;
SELECT ALL * FROM rt0 WHERE (0x6a86c1dc) ORDER BY QUOTE(rt0.c2 COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((0x6a86c1dc)AND(((CAST(rt0.c2 AS BLOB))GLOB(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2))))))) ORDER BY (rt0.c1 IN ()) ASC, (NOT (rt0.c0))  NULLS LAST LIMIT 3 INTERSECT SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END IN (((rt0.c2) NOTNULL)))) ORDER BY (rt0.c1 IN ()) ASC, (NOT (rt0.c0))  NULLS LAST LIMIT 0x3;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN 0.4849328950319888 WHEN rt0.c4 THEN rt0.c3 END AS TEXT));
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN 0.4849328950319888 WHEN rt0.c4 THEN rt0.c3 END AS TEXT))AND(((CASE rt0.c3  WHEN '' THEN rt0.c0 ELSE rt0.c3 END)&(((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(x'57')))OR(rt0.c1))))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)<(((rt0.c4)OR(rt0.c3)))) DESC;
SELECT ALL * FROM rt0 WHERE (TRIM(((rt0.c0) IS TRUE)));
SELECT ALL * FROM rt0 WHERE (((TRIM(((rt0.c0) IS TRUE)))AND((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)) IN (x'63'))))) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE ((((rt0.c0, NULL COLLATE RTRIM))=((LTRIM(rt0.c2), ((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)))))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (TRIM(((rt0.c0) IS TRUE)));
SELECT ALL * FROM rt0 WHERE (((TRIM(((rt0.c0) IS TRUE)))AND((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)) IN (x'63'))))) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE ((((rt0.c0, NULL COLLATE RTRIM))=((LTRIM(rt0.c2), ((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)))))) LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0) NOTNULL) IN (CAST(rt0.c0 AS TEXT), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((rt0.c0) NOTNULL) IN (CAST(rt0.c0 AS TEXT))));
SELECT * FROM rt0 WHERE (((((((((((RTRIM(rt0.c1))OR(rt0.c0 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM)))AND(rt0.c0)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))))AND(((rt0.c2)GLOB(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((((((((RTRIM(rt0.c1))OR(rt0.c0 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM)))AND(rt0.c0)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))))AND(((rt0.c2)GLOB(rt0.c0)))))AND(CAST((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) AS BLOB)))) INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0))) BETWEEN ((rt0.c3 IN (rt0.c1))) AND ('-2127062399')));
SELECT * FROM rt0 WHERE (((((((((((RTRIM(rt0.c1))OR(rt0.c0 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM)))AND(rt0.c0)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))))AND(((rt0.c2)GLOB(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((((((((RTRIM(rt0.c1))OR(rt0.c0 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM)))AND(rt0.c0)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))))AND(((rt0.c2)GLOB(rt0.c0)))))AND(CAST((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) AS BLOB)))) INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0))) BETWEEN ((rt0.c3 IN (rt0.c1))) AND ('-2127062399')));
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY CAST(rt0.c1 COLLATE BINARY AS BLOB);
SELECT DISTINCT * FROM rt0 WHERE (x'') ORDER BY HEX(LOWER(rt0.c1))  NULLS LAST, (((((((rt0.c4 IN (rt0.c2, rt0.c1, rt0.c1)))OR(rt0.c3 COLLATE NOCASE)))OR(((((((rt0.c0)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)))))OR(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(CAST(rt0.c2 AS TEXT))))OR((NOT (rt0.c2))))) ORDER BY HEX(LOWER(rt0.c1))  NULLS LAST, (((((((rt0.c4 IN (rt0.c2, rt0.c1, rt0.c1)))OR(rt0.c3 COLLATE NOCASE)))OR(((((((rt0.c0)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)))))OR(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY CAST(rt0.c1 COLLATE BINARY AS BLOB);
SELECT DISTINCT * FROM rt0 WHERE (x'') ORDER BY HEX(LOWER(rt0.c1))  NULLS LAST, (((((((rt0.c4 IN (rt0.c2, rt0.c1, rt0.c1)))OR(rt0.c3 COLLATE NOCASE)))OR(((((((rt0.c0)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)))))OR(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(CAST(rt0.c2 AS TEXT))))OR((NOT (rt0.c2))))) ORDER BY HEX(LOWER(rt0.c1))  NULLS LAST, (((((((rt0.c4 IN (rt0.c2, rt0.c1, rt0.c1)))OR(rt0.c3 COLLATE NOCASE)))OR(((((((rt0.c0)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)))))OR(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST LIMIT 0;
SELECT * FROM rt0 WHERE ((((NOT (rt0.c2))) BETWEEN ((+ (rt0.c3))) AND ((rt0.c2 IN ()))));
SELECT DISTINCT * FROM rt0 WHERE ((((NOT (rt0.c2))) BETWEEN ((+ (rt0.c3))) AND ((rt0.c2 IN ())))) ORDER BY CAST('1947960327' AS REAL);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c2))) BETWEEN ((+ (rt0.c3))) AND ((rt0.c2 IN ()))));
SELECT DISTINCT * FROM rt0 WHERE ((((NOT (rt0.c2))) BETWEEN ((+ (rt0.c3))) AND ((rt0.c2 IN ())))) ORDER BY CAST('1947960327' AS REAL);
SELECT ALL * FROM rt0 WHERE ((((('N') IS TRUE))LIKE(((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT * FROM rt0 WHERE ((((('N') IS TRUE))LIKE(((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2))))) LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c2) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((((('N') IS TRUE))LIKE(((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT * FROM rt0 WHERE ((((('N') IS TRUE))LIKE(((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2))))) LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c2) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) IN ())) ORDER BY ((((NULL)<<(rt0.c3))) NOT BETWEEN ((((rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN (('210403493', rt0.c1, rt0.c3, rt0.c4, rt0.c0)) AND (('', NULL, NULL, rt0.c2, rt0.c3)))) AND ((('0.7371304901315668') NOTNULL))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) IN ()))AND(((((rt0.c4) NOT BETWEEN (0.1860111721840224) AND (rt0.c0))) IS FALSE)))) ORDER BY rt0.c3 DESC  NULLS LAST, JULIANDAY(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)), (rt0.c4 IN ()), ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)), (- (rt0.c2)), '%w︊()U]9'), (+ ('')), ((((rt0.c2)-(rt0.c3)))/(((rt0.c0)IS NOT(rt0.c1)))) ASC LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c3 DESC  NULLS LAST, JULIANDAY(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)), (rt0.c4 IN ()), ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)), (- (rt0.c2)), '%w︊()U]9'), (+ ('')), ((((rt0.c2)-(rt0.c3)))/(((rt0.c0)IS NOT(rt0.c1)))) ASC LIMIT 0x3;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) IN ())) ORDER BY ((((NULL)<<(rt0.c3))) NOT BETWEEN ((((rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN (('210403493', rt0.c1, rt0.c3, rt0.c4, rt0.c0)) AND (('', NULL, NULL, rt0.c2, rt0.c3)))) AND ((('0.7371304901315668') NOTNULL))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) IN ()))AND(((((rt0.c4) NOT BETWEEN (0.1860111721840224) AND (rt0.c0))) IS FALSE)))) ORDER BY rt0.c3 DESC  NULLS LAST, JULIANDAY(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)), (rt0.c4 IN ()), ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)), (- (rt0.c2)), '%w︊()U]9'), (+ ('')), ((((rt0.c2)-(rt0.c3)))/(((rt0.c0)IS NOT(rt0.c1)))) ASC LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c3 DESC  NULLS LAST, JULIANDAY(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)), (rt0.c4 IN ()), ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)), (- (rt0.c2)), '%w︊()U]9'), (+ ('')), ((((rt0.c2)-(rt0.c3)))/(((rt0.c0)IS NOT(rt0.c1)))) ASC LIMIT 0x3;
SELECT * FROM rt0 WHERE ((~ (rt0.c3 COLLATE RTRIM)));
SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c3 COLLATE RTRIM)))AND(CASE ((rt0.c3) ISNULL)  WHEN (((0.6254766268370029, rt0.c2, rt0.c0))>=((1.723524184E9, rt0.c4, rt0.c0))) THEN rt0.c3 END))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE rt0.c2  WHEN ((rt0.c0)/(rt0.c0)) THEN NULL ELSE rt0.c4 END) LIMIT 0X0;
SELECT * FROM rt0 WHERE ((~ (rt0.c3 COLLATE RTRIM)));
SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c3 COLLATE RTRIM)))AND(CASE ((rt0.c3) ISNULL)  WHEN (((0.6254766268370029, rt0.c2, rt0.c0))>=((1.723524184E9, rt0.c4, rt0.c0))) THEN rt0.c3 END))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE rt0.c2  WHEN ((rt0.c0)/(rt0.c0)) THEN NULL ELSE rt0.c4 END) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4)))OR(TRIM(rt0.c1))))AND(COALESCE(rt0.c2, rt0.c3, rt0.c1))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4)))OR(TRIM(rt0.c1))))AND(COALESCE(rt0.c2, rt0.c3, rt0.c1)))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4)))OR(TRIM(rt0.c1))))AND(COALESCE(rt0.c2, rt0.c3, rt0.c1))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4)))OR(TRIM(rt0.c1))))AND(COALESCE(rt0.c2, rt0.c3, rt0.c1)))) LIMIT 1;
SELECT * FROM rt0 WHERE ((~ (rt0.c4)));
SELECT DISTINCT * FROM rt0 WHERE ((~ (rt0.c4))) LIMIT 3;
SELECT * FROM rt0 WHERE ((~ (rt0.c4)));
SELECT DISTINCT * FROM rt0 WHERE ((~ (rt0.c4))) LIMIT 3;
SELECT ALL COUNT(*) FROM rt0 WHERE ((TYPEOF(rt0.c3) IN ((- (rt0.c3))))) ORDER BY UNLIKELY(CASE rt0.c0  WHEN 'Gz' THEN '-355671164' WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END) DESC  NULLS LAST, ((((((((rt0.c1)&(rt0.c0)))AND(CASE rt0.c4  WHEN rt0.c2 THEN '2082918145' WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 END)))AND(((rt0.c4)%(rt0.c4)))))OR((((rt0.c2, rt0.c1))<((0.20480743917230249, 0.803665339229775))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((TYPEOF(rt0.c3) IN ((- (rt0.c3))))) ORDER BY json_array_length(((rt0.c3)<>(rt0.c3)), CAST(rt0.c0 AS NUMERIC)) DESC  NULLS FIRST, (((rt0.c4 IN ()))<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS FIRST LIMIT 0x3;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3)&(rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)&(rt0.c1)) COLLATE NOCASE)AND(CASE rt0.c3 COLLATE NOCASE  WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c3) NOT NULL) END))) ORDER BY (((((rt0.c0, rt0.c1, '1026439967', rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c4, rt0.c2, rt0.c3))))|(((rt0.c1)=(rt0.c4))))  NULLS LAST, CASE ((rt0.c4)/(rt0.c1))  WHEN ((rt0.c4)IS(rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END WHEN CAST(rt0.c2 AS REAL) THEN CASE WHEN rt0.c2 THEN rt0.c4 WHEN 611224210 THEN rt0.c0 END ELSE CASE WHEN rt0.c4 THEN rt0.c4 END END  NULLS FIRST, rt0.c3 ASC  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE (NULL COLLATE NOCASE);
SELECT DISTINCT * FROM rt0 WHERE (((NULL COLLATE NOCASE)AND((((NOT (rt0.c1))) ISNULL)))) LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (NULL COLLATE NOCASE);
SELECT DISTINCT * FROM rt0 WHERE (((NULL COLLATE NOCASE)AND((((NOT (rt0.c1))) ISNULL)))) LIMIT 0x1;
SELECT MIN(rt0.c0) FROM rt0 WHERE (((CASE '1088738453'  WHEN rt0.c0 THEN rt0.c0 WHEN 0X23f61e4a THEN rt0.c3 ELSE rt0.c1 END) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((rt0.c2)==(rt0.c1)))));
SELECT MIN(rt0.c0) FROM rt0 WHERE (((((CASE '1088738453'  WHEN rt0.c0 THEN rt0.c0 WHEN 603332170 THEN rt0.c3 ELSE rt0.c1 END) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((rt0.c2)=(rt0.c1)))))AND(((rt0.c1)*(rt0.c1)) COLLATE RTRIM)));
SELECT * FROM rt0 WHERE ((((~ (rt0.c3)))<=(TRIM(rt0.c0, rt0.c4)))) ORDER BY ((rt0.c1)>>(rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))AND(((((rt0.c4)OR(rt0.c0)))OR(rt0.c1)))) DESC;
SELECT DISTINCT * FROM rt0 WHERE ((((((~ (rt0.c3)))==(TRIM(rt0.c0, rt0.c4))))AND(((LIKELY(rt0.c4))>(((x'a0c0') NOT BETWEEN (rt0.c4) AND (rt0.c1))))))) ORDER BY ((((rt0.c3) NOT NULL))<>((((rt0.c4, rt0.c0, NULL)) BETWEEN (('', rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))))), 'wtJ' DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (COALESCE(DISTINCT (((rt0.c1, rt0.c3, rt0.c0))>((rt0.c1, rt0.c0, rt0.c4))), ((rt0.c0) NOT NULL), NULL)) ORDER BY ((((rt0.c3) NOT NULL))<>((((rt0.c4, rt0.c0, NULL)) BETWEEN (('', rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))))), 'wtJ' DESC;
SELECT * FROM rt0 WHERE ((((~ (rt0.c3)))<=(TRIM(rt0.c0, rt0.c4)))) ORDER BY ((rt0.c1)>>(rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))AND(((((rt0.c4)OR(rt0.c0)))OR(rt0.c1)))) DESC;
SELECT DISTINCT * FROM rt0 WHERE ((((((~ (rt0.c3)))==(TRIM(rt0.c0, rt0.c4))))AND(((LIKELY(rt0.c4))>(((x'a0c0') NOT BETWEEN (rt0.c4) AND (rt0.c1))))))) ORDER BY ((((rt0.c3) NOT NULL))<>((((rt0.c4, rt0.c0, NULL)) BETWEEN (('', rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))))), 'wtJ' DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (COALESCE(DISTINCT (((rt0.c1, rt0.c3, rt0.c0))>((rt0.c1, rt0.c0, rt0.c4))), ((rt0.c0) NOT NULL), NULL)) ORDER BY ((((rt0.c3) NOT NULL))<>((((rt0.c4, rt0.c0, NULL)) BETWEEN (('', rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))))), 'wtJ' DESC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) NOT NULL), TOTAL_CHANGES(), (rt0.c0 IN ())))>=((((rt0.c1)>>(rt0.c4)), (- (rt0.c4)), ((rt0.c0)IS NOT(rt0.c3))))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) NOT NULL), TOTAL_CHANGES(), (rt0.c0 IN ())))>=((((rt0.c1)>>(rt0.c4)), (- (rt0.c4)), ((rt0.c0)IS NOT(rt0.c3)))))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) NOT NULL), TOTAL_CHANGES(), (rt0.c0 IN ())))>=((((rt0.c1)>>(rt0.c4)), (- (rt0.c4)), ((rt0.c0)IS NOT(rt0.c3))))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) NOT NULL), TOTAL_CHANGES(), (rt0.c0 IN ())))>=((((rt0.c1)>>(rt0.c4)), (- (rt0.c4)), ((rt0.c0)IS NOT(rt0.c3)))))) LIMIT 0;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (CAST((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) AS BLOB)) ORDER BY (((((0.014458551925268126, rt0.c2))<((rt0.c2, rt0.c0))))<=(NULLIF(rt0.c1, rt0.c0)))  NULLS LAST, ((((((QUOTE(rt0.c4))AND(NULL)))OR(rt0.c4)))OR((rt0.c1 IN (rt0.c4, rt0.c1))));
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((CAST((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) AS BLOB))AND(CAST(rt0.c2 AS TEXT) COLLATE NOCASE))) ORDER BY (((((0.014458551925268126, rt0.c2))<((rt0.c2, rt0.c0))))<=(NULLIF(rt0.c1, rt0.c0)))  NULLS LAST, ((((((QUOTE(rt0.c4))AND(NULL)))OR(rt0.c4)))OR((rt0.c1 IN (rt0.c4, rt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)*(rt0.c0)))>(((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2))))) ORDER BY CAST((NOT (rt0.c0)) AS REAL);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)*(rt0.c0)))>(((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))))AND((UNICODE(rt0.c3) IN (CAST(rt0.c4 AS INTEGER), ((((((rt0.c4)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))))) ORDER BY rt0.c4 DESC  NULLS FIRST, rt0.c4 ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY 'n
^' DESC, CAST(UPPER(rt0.c2) AS BLOB)  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c1)AND(((CAST(rt0.c1 AS BLOB))*(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 END))))) ORDER BY 'n
^' DESC, CAST(UPPER(rt0.c2) AS BLOB)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY 'n
^' DESC, CAST(UPPER(rt0.c2) AS BLOB)  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c1)AND(((CAST(rt0.c1 AS BLOB))*(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 END))))) ORDER BY 'n
^' DESC, CAST(UPPER(rt0.c2) AS BLOB)  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))) AND ((CAST(rt0.c0 AS TEXT)))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))) AND ((CAST(rt0.c0 AS TEXT)))))AND('2001252046')));
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))) AND ((CAST(rt0.c0 AS TEXT)))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))) AND ((CAST(rt0.c0 AS TEXT)))))AND('2001252046')));
SELECT * FROM rt0 WHERE ((((rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE), ((rt0.c2) ISNULL))) AND (((((rt0.c4, rt0.c1, rt0.c1))<>((rt0.c3, rt0.c1, rt0.c1))), CAST(rt0.c2 AS BLOB))))) ORDER BY LOWER(((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) DESC;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE), ((rt0.c2) ISNULL))) AND (((((rt0.c4, rt0.c1, rt0.c1))<>((rt0.c3, rt0.c1, rt0.c1))), CAST(rt0.c2 AS BLOB)))))AND(((((((((rt0.c0)>>(rt0.c0)))OR((~ (rt0.c3)))))AND(rt0.c1 COLLATE BINARY)))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN x'ef' THEN rt0.c0 END))))) ORDER BY LOWER(((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) ORDER BY LOWER(((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) DESC LIMIT 0;
SELECT * FROM rt0 WHERE ((((rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE), ((rt0.c2) ISNULL))) AND (((((rt0.c4, rt0.c1, rt0.c1))<>((rt0.c3, rt0.c1, rt0.c1))), CAST(rt0.c2 AS BLOB))))) ORDER BY LOWER(((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) DESC;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE), ((rt0.c2) ISNULL))) AND (((((rt0.c4, rt0.c1, rt0.c1))<>((rt0.c3, rt0.c1, rt0.c1))), CAST(rt0.c2 AS BLOB)))))AND(((((((((rt0.c0)>>(rt0.c0)))OR((~ (rt0.c3)))))AND(rt0.c1 COLLATE BINARY)))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN x'ef' THEN rt0.c0 END))))) ORDER BY LOWER(((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) ORDER BY LOWER(((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) DESC LIMIT 0;
SELECT MIN(rt0.c0) FROM rt0 WHERE ('O' COLLATE RTRIM);
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE ('O' COLLATE RTRIM) ORDER BY CASE WHEN x'60ce' THEN (NOT (rt0.c2)) ELSE (rt0.c0 IN ()) END DESC, ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)))OR(CASE rt0.c1  WHEN 0.8468209008184995 THEN rt0.c0 WHEN 0X2ec73395 THEN rt0.c1 ELSE rt0.c3 END)))AND(((rt0.c1)>=(rt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c0) NOT NULL) WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 ELSE x'da' END THEN (((rt0.c3))<=((rt0.c2))) ELSE rt0.c4 COLLATE NOCASE END) ORDER BY ((((0Xffffffffc045e7db)GLOB(rt0.c1)))OR((rt0.c3 IN (rt0.c4, rt0.c2))))  NULLS LAST, (((rt0.c2 IN ())) NOTNULL), ((0.9382952283610615) ISNULL);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c0) NOT NULL) WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 ELSE x'da' END THEN (((rt0.c3))<((rt0.c2))) ELSE rt0.c4 COLLATE NOCASE END) ORDER BY CASE WHEN STRFTIME(x'fe', rt0.c2, rt0.c2, rt0.c3, rt0.c4, rt0.c2, rt0.c0) THEN CAST(rt0.c1 AS BLOB) WHEN '-1719867074' THEN '-1142264660' WHEN CAST(rt0.c1 AS NUMERIC) THEN rt0.c0 WHEN rt0.c3 COLLATE RTRIM THEN (NOT (rt0.c4)) END DESC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN (~ (rt0.c3)) END) ORDER BY CASE WHEN STRFTIME(x'fe', rt0.c2, rt0.c2, rt0.c3, rt0.c4, rt0.c2, rt0.c0) THEN CAST(rt0.c1 AS BLOB) WHEN '-1719867074' THEN '-1142264660' WHEN CAST(rt0.c1 AS NUMERIC) THEN rt0.c0 WHEN rt0.c3 COLLATE RTRIM THEN (NOT (rt0.c4)) END DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c0) NOT NULL) WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 ELSE x'da' END THEN (((rt0.c3))<=((rt0.c2))) ELSE rt0.c4 COLLATE NOCASE END) ORDER BY ((((0Xffffffffc045e7db)GLOB(rt0.c1)))OR((rt0.c3 IN (rt0.c4, rt0.c2))))  NULLS LAST, (((rt0.c2 IN ())) NOTNULL), ((0.9382952283610615) ISNULL);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c0) NOT NULL) WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 ELSE x'da' END THEN (((rt0.c3))<((rt0.c2))) ELSE rt0.c4 COLLATE NOCASE END) ORDER BY CASE WHEN STRFTIME(x'fe', rt0.c2, rt0.c2, rt0.c3, rt0.c4, rt0.c2, rt0.c0) THEN CAST(rt0.c1 AS BLOB) WHEN '-1719867074' THEN '-1142264660' WHEN CAST(rt0.c1 AS NUMERIC) THEN rt0.c0 WHEN rt0.c3 COLLATE RTRIM THEN (NOT (rt0.c4)) END DESC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN (~ (rt0.c3)) END) ORDER BY CASE WHEN STRFTIME(x'fe', rt0.c2, rt0.c2, rt0.c3, rt0.c4, rt0.c2, rt0.c0) THEN CAST(rt0.c1 AS BLOB) WHEN '-1719867074' THEN '-1142264660' WHEN CAST(rt0.c1 AS NUMERIC) THEN rt0.c0 WHEN rt0.c3 COLLATE RTRIM THEN (NOT (rt0.c4)) END DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)<>((+ (rt0.c3))))) ORDER BY (((rt0.c0)) BETWEEN (((NOT (rt0.c1)))) AND ((((rt0.c3)IS NOT(rt0.c4))))) ASC, NULL ASC  NULLS LAST, (((((((((NOT (rt0.c0)))OR((((rt0.c4, rt0.c2))==((rt0.c0, rt0.c4))))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))OR(rt0.c0)))AND('A~')) DESC;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((((rt0.c2 COLLATE BINARY)>((+ (rt0.c3)))))AND(DATETIME(CASE WHEN rt0.c1 THEN rt0.c4 WHEN x'' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END, CASE WHEN rt0.c2 THEN rt0.c3 WHEN '-
*O' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END, (('l')<<(rt0.c2)), ((((((rt0.c4)AND(rt0.c4)))AND(NULL)))AND(rt0.c0)))))) ORDER BY ((((~ (rt0.c1)), (((0.8246898401545959)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), ((rt0.c4)%(rt0.c2)), ((rt0.c0) NOTNULL)))<=(((rt0.c1 IN (rt0.c4, rt0.c4)), CAST(rt0.c4 AS BLOB), (~ (rt0.c0)), UPPER(rt0.c3))))  NULLS FIRST, (((rt0.c1))>=((rt0.c2))) COLLATE NOCASE DESC  NULLS FIRST, ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)))AND(((rt0.c0) IS FALSE))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ('0.4225964275324794' COLLATE RTRIM) ORDER BY ((((~ (rt0.c1)), (((0.8246898401545959)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), ((rt0.c4)%(rt0.c2)), ((rt0.c0) NOTNULL)))<=(((rt0.c1 IN (rt0.c4, rt0.c4)), CAST(rt0.c4 AS BLOB), (~ (rt0.c0)), UPPER(rt0.c3))))  NULLS FIRST, (((rt0.c1))>=((rt0.c2))) COLLATE NOCASE DESC  NULLS FIRST, ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)))AND(((rt0.c0) IS FALSE))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)<>((+ (rt0.c3))))) ORDER BY (((rt0.c0)) BETWEEN (((NOT (rt0.c1)))) AND ((((rt0.c3)IS NOT(rt0.c4))))) ASC, NULL ASC  NULLS LAST, (((((((((NOT (rt0.c0)))OR((((rt0.c4, rt0.c2))==((rt0.c0, rt0.c4))))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))OR(rt0.c0)))AND('A~')) DESC;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((((rt0.c2 COLLATE BINARY)>((+ (rt0.c3)))))AND(DATETIME(CASE WHEN rt0.c1 THEN rt0.c4 WHEN x'' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END, CASE WHEN rt0.c2 THEN rt0.c3 WHEN '-
*O' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END, (('l')<<(rt0.c2)), ((((((rt0.c4)AND(rt0.c4)))AND(NULL)))AND(rt0.c0)))))) ORDER BY ((((~ (rt0.c1)), (((0.8246898401545959)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), ((rt0.c4)%(rt0.c2)), ((rt0.c0) NOTNULL)))<=(((rt0.c1 IN (rt0.c4, rt0.c4)), CAST(rt0.c4 AS BLOB), (~ (rt0.c0)), UPPER(rt0.c3))))  NULLS FIRST, (((rt0.c1))>=((rt0.c2))) COLLATE NOCASE DESC  NULLS FIRST, ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)))AND(((rt0.c0) IS FALSE))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ('0.4225964275324794' COLLATE RTRIM) ORDER BY ((((~ (rt0.c1)), (((0.8246898401545959)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), ((rt0.c4)%(rt0.c2)), ((rt0.c0) NOTNULL)))<=(((rt0.c1 IN (rt0.c4, rt0.c4)), CAST(rt0.c4 AS BLOB), (~ (rt0.c0)), UPPER(rt0.c3))))  NULLS FIRST, (((rt0.c1))>=((rt0.c2))) COLLATE NOCASE DESC  NULLS FIRST, ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)))AND(((rt0.c0) IS FALSE))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c2)) BETWEEN ((((rt0.c4) IS FALSE), LOWER(DISTINCT rt0.c0))) AND ((x'', ((rt0.c2) IS FALSE))))) ORDER BY rt0.c1 ASC  NULLS LAST, ((((((((rt0.c3)*(rt0.c0)))AND(((rt0.c4) NOT NULL))))OR('-1663045504')))OR(load_extension(x'92'))) DESC, rt0.c4  NULLS FIRST, ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR('?	')))AND(((rt0.c0)>=(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1, rt0.c2)) BETWEEN ((((rt0.c4) IS FALSE), LOWER(DISTINCT rt0.c0))) AND ((x'', ((rt0.c2) IS FALSE)))))AND(((rt0.c2 IN (0.6519266735071056)) IN ((rt0.c0 IN (rt0.c1))))))) ORDER BY rt0.c1 ASC  NULLS LAST, ((((((((rt0.c3)*(rt0.c0)))AND(((rt0.c4) NOT NULL))))OR('-1663045504')))OR(load_extension(x'92'))) DESC, rt0.c4  NULLS FIRST, ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR('?	')))AND(((rt0.c0)>=(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)) ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c1 ASC  NULLS LAST, ((((((((rt0.c3)*(rt0.c0)))AND(((rt0.c4) NOT NULL))))OR('-1663045504')))OR(load_extension(x'92'))) DESC, rt0.c4  NULLS FIRST, ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR('?	')))AND(((rt0.c0)>=(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)) ASC LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c2)) BETWEEN ((((rt0.c4) IS FALSE), LOWER(DISTINCT rt0.c0))) AND ((x'', ((rt0.c2) IS FALSE))))) ORDER BY rt0.c1 ASC  NULLS LAST, ((((((((rt0.c3)*(rt0.c0)))AND(((rt0.c4) NOT NULL))))OR('-1663045504')))OR(load_extension(x'92'))) DESC, rt0.c4  NULLS FIRST, ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR('?	')))AND(((rt0.c0)>=(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1, rt0.c2)) BETWEEN ((((rt0.c4) IS FALSE), LOWER(DISTINCT rt0.c0))) AND ((x'', ((rt0.c2) IS FALSE)))))AND(((rt0.c2 IN (0.6519266735071056)) IN ((rt0.c0 IN (rt0.c1))))))) ORDER BY rt0.c1 ASC  NULLS LAST, ((((((((rt0.c3)*(rt0.c0)))AND(((rt0.c4) NOT NULL))))OR('-1663045504')))OR(load_extension(x'92'))) DESC, rt0.c4  NULLS FIRST, ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR('?	')))AND(((rt0.c0)>=(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)) ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c1 ASC  NULLS LAST, ((((((((rt0.c3)*(rt0.c0)))AND(((rt0.c4) NOT NULL))))OR('-1663045504')))OR(load_extension(x'92'))) DESC, rt0.c4  NULLS FIRST, ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR('?	')))AND(((rt0.c0)>=(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)) ASC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY (((~ (0.8085821660464655)))-(rt0.c3))  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c4)AND('-177229813'))) ORDER BY (((~ (0.8085821660464655)))-(rt0.c3))  NULLS LAST INTERSECT SELECT * FROM rt0 WHERE ((NOT (((rt0.c3) NOTNULL)))) ORDER BY (((~ (0.8085821660464655)))-(rt0.c3))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY (((~ (0.8085821660464655)))-(rt0.c3))  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c4)AND('-177229813'))) ORDER BY (((~ (0.8085821660464655)))-(rt0.c3))  NULLS LAST INTERSECT SELECT * FROM rt0 WHERE ((NOT (((rt0.c3) NOTNULL)))) ORDER BY (((~ (0.8085821660464655)))-(rt0.c3))  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c1)=(0.6440544040485232))) ORDER BY CAST(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c1)=(0.6440544040485232))) ORDER BY CAST(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)) AS NUMERIC) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c1)=(0.6440544040485232))) ORDER BY CAST(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c1)=(0.6440544040485232))) ORDER BY CAST(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c3)))==(CAST(rt0.c2 AS BLOB)))) ORDER BY CAST(((((NULL)AND(rt0.c0)))OR(rt0.c2)) AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c3)))=(CAST(rt0.c2 AS BLOB))))AND(((((rt0.c3)GLOB(rt0.c4))) IS FALSE)))) ORDER BY CAST(((((NULL)AND(rt0.c0)))OR(rt0.c2)) AS BLOB) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT COUNT(*) FROM rt0 WHERE (rtreenode(CAST(rt0.c2 AS TEXT), CAST(rt0.c1 AS REAL))) ORDER BY CAST(((((NULL)AND(rt0.c0)))OR(rt0.c2)) AS BLOB) DESC  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c2))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN '' THEN '0.3978808098041813' END)-(((rt0.c0) NOT BETWEEN (rt0.c0) AND ('R')))), CAST(rt0.c0 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2)))AND(((rt0.c1)/(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4))))))) ORDER BY NULLIF(DISTINCT LTRIM(rt0.c1), rt0.c1)  NULLS LAST, ((((rt0.c1) NOT NULL)) BETWEEN (rt0.c2 COLLATE BINARY) AND (CAST(rt0.c4 AS NUMERIC))) ASC LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c2))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN '' THEN '0.3978808098041813' END)-(((rt0.c0) NOT BETWEEN (rt0.c0) AND ('R')))), CAST(rt0.c0 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2)))AND(((rt0.c1)/(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4))))))) ORDER BY NULLIF(DISTINCT LTRIM(rt0.c1), rt0.c1)  NULLS LAST, ((((rt0.c1) NOT NULL)) BETWEEN (rt0.c2 COLLATE BINARY) AND (CAST(rt0.c4 AS NUMERIC))) ASC LIMIT 0X1;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)))LIKE(((((((rt0.c4)OR(0x666dc91e)))OR(NULL)))OR(rt0.c2)))), '0.06364461351521755'  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0))) ORDER BY ((((x'7a')LIKE(rt0.c3)))>=(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))) DESC  NULLS FIRST, rt0.c3 LIMIT 0x2;
SELECT * FROM rt0 WHERE (-2100717689) ORDER BY LAST_INSERT_ROWID(), (((rt0.c1))>=((rt0.c3))) COLLATE BINARY DESC  NULLS LAST, rt0.c2 DESC;
SELECT ALL * FROM rt0 WHERE (((-2100717689)AND(((0.5475358849256223)IS((((0.004615283568871975, x''))>((0.406201299777874, rt0.c4)))))))) ORDER BY LAST_INSERT_ROWID(), (((rt0.c1))>=((rt0.c3))) COLLATE BINARY DESC  NULLS LAST, rt0.c2 DESC LIMIT 0x0;
SELECT * FROM rt0 WHERE (-2100717689) ORDER BY LAST_INSERT_ROWID(), (((rt0.c1))>=((rt0.c3))) COLLATE BINARY DESC  NULLS LAST, rt0.c2 DESC;
SELECT ALL * FROM rt0 WHERE (((-2100717689)AND(((0.5475358849256223)IS((((0.004615283568871975, x''))>((0.406201299777874, rt0.c4)))))))) ORDER BY LAST_INSERT_ROWID(), (((rt0.c1))>=((rt0.c3))) COLLATE BINARY DESC  NULLS LAST, rt0.c2 DESC LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (((ABS(DISTINCT rt0.c2)) NOT NULL)) ORDER BY CASE WHEN (+ (NULL)) THEN '66557685' WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-1240337007')) END;
SELECT * FROM rt0 WHERE (((((ABS(DISTINCT rt0.c2)) NOT NULL))AND((((rt0.c3)) NOT BETWEEN ((((rt0.c2)<(rt0.c3)))) AND ((((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))))))) ORDER BY CASE WHEN (+ (NULL)) THEN '66557685' WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-1240337007')) END INTERSECT SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 AS NUMERIC)) ORDER BY CASE WHEN (+ (NULL)) THEN '66557685' WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-1240337007')) END;
SELECT ALL * FROM rt0 WHERE (((ABS(DISTINCT rt0.c2)) NOT NULL)) ORDER BY CASE WHEN (+ (NULL)) THEN '66557685' WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-1240337007')) END;
SELECT * FROM rt0 WHERE (((((ABS(DISTINCT rt0.c2)) NOT NULL))AND((((rt0.c3)) NOT BETWEEN ((((rt0.c2)<(rt0.c3)))) AND ((((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))))))) ORDER BY CASE WHEN (+ (NULL)) THEN '66557685' WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-1240337007')) END INTERSECT SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 AS NUMERIC)) ORDER BY CASE WHEN (+ (NULL)) THEN '66557685' WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-1240337007')) END;
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1)&(rt0.c2)))));
SELECT DISTINCT * FROM rt0 WHERE ((((NOT (((rt0.c1)&(rt0.c2)))))AND((NOT (rt0.c0))))) LIMIT 0;
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1)&(rt0.c2)))));
SELECT DISTINCT * FROM rt0 WHERE ((((NOT (((rt0.c1)&(rt0.c2)))))AND((NOT (rt0.c0))))) LIMIT 0;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4)))) NOTNULL)) ORDER BY (((TRIM(DISTINCT rt0.c2, rt0.c2), ((rt0.c0) NOTNULL), rt0.c3, (~ (rt0.c2)), ((rt0.c1) BETWEEN ('') AND (rt0.c1))))>=((((rt0.c2)!=(rt0.c0)), ((rt0.c0)<>(0.029949481673546496)), (NOT (rt0.c2)), (+ (rt0.c2)), CASE WHEN 2.6135884E8 THEN rt0.c4 WHEN NULL THEN rt0.c3 END))) DESC, CASE (rt0.c2 IN ())  WHEN rt0.c0 THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND ('!\FZ''5YN#')) WHEN ((rt0.c3)<(rt0.c3)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END END  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4)))) NOTNULL))AND(((((((((((CASE rt0.c4  WHEN rt0.c4 THEN x'' WHEN rt0.c4 THEN 'ro*?}Vou' WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)AND((- (rt0.c0)))))AND(((rt0.c4) IS FALSE))))AND('')))OR(((rt0.c2)<=(rt0.c1)))))OR((((0.14325889769116695, rt0.c3, rt0.c2)) BETWEEN ((rt0.c1, x'58', rt0.c3)) AND ((rt0.c0, rt0.c1, rt0.c1)))))))) ORDER BY (((TRIM(DISTINCT rt0.c2, rt0.c2), ((rt0.c0) NOTNULL), rt0.c3, (~ (rt0.c2)), ((rt0.c1) BETWEEN ('') AND (rt0.c1))))>=((((rt0.c2)<>(rt0.c0)), ((rt0.c0)!=(0.029949481673546496)), (NOT (rt0.c2)), (+ (rt0.c2)), CASE WHEN 2.6135884E8 THEN rt0.c4 WHEN NULL THEN rt0.c3 END))) DESC, CASE (rt0.c2 IN ())  WHEN rt0.c0 THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND ('!\FZ''5YN#')) WHEN ((rt0.c3)<(rt0.c3)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END END  NULLS FIRST INTERSECT SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((1.950429582E9)) AND (((((rt0.c4, rt0.c4, rt0.c1))!=((rt0.c2, rt0.c1, rt0.c0))))))) ORDER BY (((TRIM(DISTINCT rt0.c2, rt0.c2), ((rt0.c0) NOTNULL), rt0.c3, (~ (rt0.c2)), ((rt0.c1) BETWEEN ('') AND (rt0.c1))))>=((((rt0.c2)<>(rt0.c0)), ((rt0.c0)!=(0.029949481673546496)), (NOT (rt0.c2)), (+ (rt0.c2)), CASE WHEN 2.6135884E8 THEN rt0.c4 WHEN NULL THEN rt0.c3 END))) DESC, CASE (rt0.c2 IN ())  WHEN rt0.c0 THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND ('!\FZ''5YN#')) WHEN ((rt0.c3)<(rt0.c3)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END END  NULLS FIRST;
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c4 AS TEXT))));
SELECT ALL * FROM rt0 WHERE ((- (CAST(rt0.c4 AS TEXT)))) INTERSECT SELECT * FROM rt0 WHERE ((((rt0.c3))>=((rt0.c2))) COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c4 AS TEXT))));
SELECT ALL * FROM rt0 WHERE ((- (CAST(rt0.c4 AS TEXT)))) INTERSECT SELECT * FROM rt0 WHERE ((((rt0.c3))>=((rt0.c2))) COLLATE NOCASE);
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ('k') ORDER BY ((((rt0.c3) BETWEEN ('|8\Dv') AND (rt0.c2)))OR(((rt0.c4)&(rt0.c3)))), (((NULL)IS NOT(rt0.c2)) IN (((rt0.c3)<<(rt0.c1)))), CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c2)) WHEN (rt0.c4 IN (rt0.c1, rt0.c2)) THEN CAST(rt0.c1 AS TEXT) WHEN (((rt0.c4, rt0.c0, rt0.c4))<=((rt0.c2, rt0.c2, rt0.c2))) THEN CAST(rt0.c0 AS NUMERIC) ELSE 0X689a4672 END ASC  NULLS LAST;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((('k')AND(SQLITE_SOURCE_ID()))) ORDER BY ((rt0.c4) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c3) NOTNULL)))  NULLS LAST LIMIT 0X3 INTERSECT SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN 'kL&' END  WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN CAST(rt0.c3 AS REAL) ELSE rt0.c4 COLLATE RTRIM END) ORDER BY ((rt0.c4) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c3) NOTNULL)))  NULLS LAST LIMIT 3;
SELECT MAX(rt0.c4) FROM rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (('348516897') IS FALSE), (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c3)GLOB(rt0.c1))))!=((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)), (rt0.c3 IN ())))) DESC  NULLS LAST;
SELECT MAX(rt0.c4) FROM rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (('348516897') IS FALSE), (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c3)GLOB(rt0.c1))))<>((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)), (rt0.c3 IN ())))) DESC  NULLS LAST;
SELECT MIN(rt0.c3) FROM rt0 WHERE (CAST(CAST(rt0.c3 AS BLOB) AS NUMERIC));
SELECT MIN(rt0.c3) FROM rt0 WHERE (CAST(CAST(rt0.c3 AS BLOB) AS NUMERIC)) ORDER BY (~ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))))  NULLS FIRST, ((IFNULL(rt0.c1, 'b')) NOTNULL) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ()))<=(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY x'97'  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2 IN ()))=(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))))AND((('-1797663919')&(UPPER(rt0.c2)))))) ORDER BY rtreenode(((rt0.c4)<<(rt0.c3)), ((rt0.c3) ISNULL))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ()))<=(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY x'97'  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2 IN ()))=(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))))AND((('-1797663919')&(UPPER(rt0.c2)))))) ORDER BY rtreenode(((rt0.c4)<<(rt0.c3)), ((rt0.c3) ISNULL))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((NULL)|('')));
SELECT ALL * FROM rt0 WHERE (((((NULL)|('')))AND(CASE WHEN ((rt0.c0)+(rt0.c3)) THEN CAST(rt0.c4 AS BLOB) WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c0)%(0.7912310614259633)) ELSE (((rt0.c3, rt0.c4, rt0.c3, rt0.c0))<>((rt0.c2, rt0.c0, rt0.c4, rt0.c2))) END))) INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt0 WHERE (((NULL)|('')));
SELECT ALL * FROM rt0 WHERE (((((NULL)|('')))AND(CASE WHEN ((rt0.c0)+(rt0.c3)) THEN CAST(rt0.c4 AS BLOB) WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c0)%(0.7912310614259633)) ELSE (((rt0.c3, rt0.c4, rt0.c3, rt0.c0))<>((rt0.c2, rt0.c0, rt0.c4, rt0.c2))) END))) INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (((((((((CAST(rt0.c0 AS REAL))OR(((rt0.c3)<<(rt0.c4)))))AND(((rt0.c2)IS(rt0.c1)))))AND(JULIANDAY(rt0.c4, rt0.c4, rt0.c4, rt0.c4))))AND((1.557454986E9 IN (rt0.c2, rt0.c1)))));
SELECT * FROM rt0 WHERE (((((((((((CAST(rt0.c0 AS REAL))OR(((rt0.c3)<<(rt0.c4)))))AND(((rt0.c2)IS(rt0.c1)))))AND(JULIANDAY(rt0.c4, rt0.c4, rt0.c4, rt0.c4))))AND((1.557454986E9 IN (rt0.c2)))))AND('-2054351934'))) LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((((((((CAST(rt0.c0 AS REAL))OR(((rt0.c3)<<(rt0.c4)))))AND(((rt0.c2)IS(rt0.c1)))))AND(JULIANDAY(rt0.c4, rt0.c4, rt0.c4, rt0.c4))))AND((1.557454986E9 IN (rt0.c2, rt0.c1)))));
SELECT * FROM rt0 WHERE (((((((((((CAST(rt0.c0 AS REAL))OR(((rt0.c3)<<(rt0.c4)))))AND(((rt0.c2)IS(rt0.c1)))))AND(JULIANDAY(rt0.c4, rt0.c4, rt0.c4, rt0.c4))))AND((1.557454986E9 IN (rt0.c2)))))AND('-2054351934'))) LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0)>>(rt0.c1)) THEN (((rt0.c0, rt0.c3))<((rt0.c0, rt0.c0))) END) ORDER BY (((rt0.c0, 0xffffffff9ec2e60c, rt0.c4, rt0.c4)) NOT BETWEEN (((rt0.c1 IN (rt0.c2, rt0.c4)), (rt0.c4 IN (rt0.c3, rt0.c3)), (NOT (rt0.c0)), ((rt0.c2)+(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)), (((rt0.c4)) BETWEEN (('i 
F|')) AND ((rt0.c4))), rt0.c4, (rt0.c3 IN (rt0.c2)))))  NULLS LAST, CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END COLLATE NOCASE DESC, CASE WHEN rt0.c1 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt0.c1 THEN 0.9066821300452172 WHEN rt0.c4 THEN rt0.c4 END WHEN TOTAL_CHANGES() THEN CASE WHEN rt0.c4 THEN rt0.c1 END ELSE (- (rt0.c0)) END  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0)>>(rt0.c1)) THEN (((rt0.c0, rt0.c3))<((rt0.c0, rt0.c0))) END) ORDER BY (((rt0.c4, rt0.c2)) BETWEEN ((((rt0.c2)GLOB('FALSE')), ((-1150268632)<(rt0.c1)))) AND (((- (rt0.c1)), ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))  NULLS LAST, CAST(0.3093849106790919 AS REAL) COLLATE BINARY DESC LIMIT 1;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0)>>(rt0.c1)) THEN (((rt0.c0, rt0.c3))<((rt0.c0, rt0.c0))) END) ORDER BY (((rt0.c0, 0xffffffff9ec2e60c, rt0.c4, rt0.c4)) NOT BETWEEN (((rt0.c1 IN (rt0.c2, rt0.c4)), (rt0.c4 IN (rt0.c3, rt0.c3)), (NOT (rt0.c0)), ((rt0.c2)+(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)), (((rt0.c4)) BETWEEN (('i 
F|')) AND ((rt0.c4))), rt0.c4, (rt0.c3 IN (rt0.c2)))))  NULLS LAST, CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END COLLATE NOCASE DESC, CASE WHEN rt0.c1 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt0.c1 THEN 0.9066821300452172 WHEN rt0.c4 THEN rt0.c4 END WHEN TOTAL_CHANGES() THEN CASE WHEN rt0.c4 THEN rt0.c1 END ELSE (- (rt0.c0)) END  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0)>>(rt0.c1)) THEN (((rt0.c0, rt0.c3))<((rt0.c0, rt0.c0))) END) ORDER BY (((rt0.c4, rt0.c2)) BETWEEN ((((rt0.c2)GLOB('FALSE')), ((-1150268632)<(rt0.c1)))) AND (((- (rt0.c1)), ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))  NULLS LAST, CAST(0.3093849106790919 AS REAL) COLLATE BINARY DESC LIMIT 1;
SELECT * FROM rt0 WHERE (((rt0.c3)>(rt0.c2)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((rt0.c3)>(rt0.c2)) COLLATE RTRIM) ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(CAST(rt0.c0 AS TEXT))))OR(rt0.c4 COLLATE BINARY)), UPPER((+ (NULL))) ASC  NULLS FIRST, 'ds' DESC  NULLS FIRST LIMIT 0X3 INTERSECT SELECT ALL * FROM rt0 WHERE ((((((rt0.c0))<=((rt0.c1)))) BETWEEN (rt0.c2) AND (SQLITE_VERSION()))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(CAST(rt0.c0 AS TEXT))))OR(rt0.c4 COLLATE BINARY)), UPPER((+ (NULL))) ASC  NULLS FIRST, 'ds' DESC  NULLS FIRST LIMIT 3;
SELECT * FROM rt0 WHERE (((rt0.c3)>(rt0.c2)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((rt0.c3)>(rt0.c2)) COLLATE RTRIM) ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(CAST(rt0.c0 AS TEXT))))OR(rt0.c4 COLLATE BINARY)), UPPER((+ (NULL))) ASC  NULLS FIRST, 'ds' DESC  NULLS FIRST LIMIT 0X3 INTERSECT SELECT ALL * FROM rt0 WHERE ((((((rt0.c0))<=((rt0.c1)))) BETWEEN (rt0.c2) AND (SQLITE_VERSION()))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(CAST(rt0.c0 AS TEXT))))OR(rt0.c4 COLLATE BINARY)), UPPER((+ (NULL))) ASC  NULLS FIRST, 'ds' DESC  NULLS FIRST LIMIT 3;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)>(rt0.c0)));
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)>(rt0.c0))) ORDER BY ((((rt0.c3)AND(rt0.c1)))>>(((x'bff1b3ba') NOT BETWEEN (rt0.c3) AND (rt0.c4)))) DESC  NULLS LAST, rt0.c1  NULLS FIRST, (((CAST(rt0.c0 AS TEXT), CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END))<(((rt0.c3 IN (rt0.c1)), ((('-1909189608')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)>(rt0.c0)));
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)>(rt0.c0))) ORDER BY ((((rt0.c3)AND(rt0.c1)))>>(((x'bff1b3ba') NOT BETWEEN (rt0.c3) AND (rt0.c4)))) DESC  NULLS LAST, rt0.c1  NULLS FIRST, (((CAST(rt0.c0 AS TEXT), CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END))<(((rt0.c3 IN (rt0.c1)), ((('-1909189608')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE 0X923db20 END) NOT BETWEEN (0.6827694358804446) AND ((rt0.c4 IN (rt0.c0)))));
SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE 153344800 END) NOT BETWEEN (0.6827694358804446) AND ((rt0.c4 IN (rt0.c0)))))AND(rt0.c3))) ORDER BY (rt0.c0 COLLATE BINARY IN (NULL)) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c3) IS TRUE))OR(CAST(rt0.c4 AS INTEGER))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3))))) ORDER BY (rt0.c0 COLLATE BINARY IN (NULL)) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE 0X923db20 END) NOT BETWEEN (0.6827694358804446) AND ((rt0.c4 IN (rt0.c0)))));
SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE 153344800 END) NOT BETWEEN (0.6827694358804446) AND ((rt0.c4 IN (rt0.c0)))))AND(rt0.c3))) ORDER BY (rt0.c0 COLLATE BINARY IN (NULL)) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c3) IS TRUE))OR(CAST(rt0.c4 AS INTEGER))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3))))) ORDER BY (rt0.c0 COLLATE BINARY IN (NULL)) LIMIT 0;
SELECT * FROM rt0 WHERE (HEX(((rt0.c1) IS FALSE))) ORDER BY (CAST(rt0.c0 AS NUMERIC) IN (UNLIKELY(DISTINCT rt0.c4))) ASC, ((((rt0.c4))>((0.7380597142665195))) IN (((rt0.c1)-(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (HEX(((rt0.c1) IS FALSE))) ORDER BY (+ (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN 0.8608661360608626 THEN '' ELSE rt0.c2 END)) DESC  NULLS LAST, CAST((~ (rt0.c1)) AS BLOB) DESC LIMIT 0x4;
SELECT * FROM rt0 WHERE (HEX(((rt0.c1) IS FALSE))) ORDER BY (CAST(rt0.c0 AS NUMERIC) IN (UNLIKELY(DISTINCT rt0.c4))) ASC, ((((rt0.c4))>((0.7380597142665195))) IN (((rt0.c1)-(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (HEX(((rt0.c1) IS FALSE))) ORDER BY (+ (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN 0.8608661360608626 THEN '' ELSE rt0.c2 END)) DESC  NULLS LAST, CAST((~ (rt0.c1)) AS BLOB) DESC LIMIT 0x4;
SELECT * FROM rt0 WHERE ((~ (((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))) ORDER BY CASE WHEN 0.014730046929896212 THEN ((rt0.c4)||(rt0.c4)) ELSE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((~ (((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))))AND(((((((((((HEX(DISTINCT rt0.c3))AND((NOT (rt0.c2)))))AND((rt0.c3 IN ()))))AND((rt0.c2 IN (rt0.c4, rt0.c2)))))AND(((rt0.c0)/(rt0.c3)))))AND((rt0.c4 IN (rt0.c4))))))) ORDER BY CASE WHEN 0.014730046929896212 THEN ((rt0.c4)||(rt0.c4)) ELSE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END END  NULLS FIRST LIMIT 0;
SELECT * FROM rt0 WHERE ((~ (((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))) ORDER BY CASE WHEN 0.014730046929896212 THEN ((rt0.c4)||(rt0.c4)) ELSE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((~ (((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))))AND(((((((((((HEX(DISTINCT rt0.c3))AND((NOT (rt0.c2)))))AND((rt0.c3 IN ()))))AND((rt0.c2 IN (rt0.c4, rt0.c2)))))AND(((rt0.c0)/(rt0.c3)))))AND((rt0.c4 IN (rt0.c4))))))) ORDER BY CASE WHEN 0.014730046929896212 THEN ((rt0.c4)||(rt0.c4)) ELSE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END END  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE (UNLIKELY(((rt0.c2)<=(rt0.c4)))) ORDER BY ((((rt0.c0)>=(-251974878)))GLOB(((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))), (NOT ((NOT (rt0.c4)))), (~ ((rt0.c1 IN ()))) ASC;
SELECT ALL * FROM rt0 WHERE (((UNLIKELY(((rt0.c2)<(rt0.c4))))AND(CAST('-622392268' AS REAL)))) ORDER BY ('{' IN (QUOTE(rt0.c0))) ASC, ((rt0.c4)<<((rt0.c4 IN (0.12030777489807143)))) ASC  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt0 WHERE (UNLIKELY(((rt0.c2)<=(rt0.c4)))) ORDER BY ((((rt0.c0)>=(-251974878)))GLOB(((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))), (NOT ((NOT (rt0.c4)))), (~ ((rt0.c1 IN ()))) ASC;
SELECT ALL * FROM rt0 WHERE (((UNLIKELY(((rt0.c2)<(rt0.c4))))AND(CAST('-622392268' AS REAL)))) ORDER BY ('{' IN (QUOTE(rt0.c0))) ASC, ((rt0.c4)<<((rt0.c4 IN (0.12030777489807143)))) ASC  NULLS LAST LIMIT 2;
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY((((rt0.c1, rt0.c0))<>((x'', rt0.c3)))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (LIKELY((((rt0.c1, rt0.c0))!=((x'', rt0.c3))))) ORDER BY ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END)AND(((-1.203225677E9)*(rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (NULL))) ORDER BY (((GLOB(rt0.c2, rt0.c2), (rt0.c2 IN ()), CASE WHEN NULL THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 END))==((DATE(rt0.c3, rt0.c2, rt0.c2), ((rt0.c2)|(rt0.c0)), ((((rt0.c3)OR(rt0.c4)))OR(rt0.c0))))), json_remove((rt0.c0 IN ()), ((x'') NOTNULL), rt0.c2) ASC, ((rt0.c2) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND ((- (rt0.c2)))) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((- (NULL)))AND(((((LTRIM(rt0.c4, rt0.c4))OR(((rt0.c2)<(rt0.c0)))))OR(x'7205c3'))))) ORDER BY ((CAST(rt0.c3 AS TEXT))AND(((rt0.c4)IS(rt0.c4)))) ASC  NULLS LAST, CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 END AS NUMERIC), CASE WHEN ((rt0.c2)||(rt0.c0)) THEN ((((((((rt0.c1)OR(rt0.c3)))OR(0.8415126089831556)))OR(rt0.c1)))OR(rt0.c0)) END  NULLS LAST, (rt0.c4 COLLATE RTRIM IN ()) DESC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((CAST(rt0.c3 AS TEXT))AND(((rt0.c4)IS(rt0.c4)))) ASC  NULLS LAST, CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 END AS NUMERIC), CASE WHEN ((rt0.c2)||(rt0.c0)) THEN ((((((((rt0.c1)OR(rt0.c3)))OR(0.8415126089831556)))OR(rt0.c1)))OR(rt0.c0)) END  NULLS LAST, (rt0.c4 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)IS NOT(((rt0.c4) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)IS NOT(((rt0.c4) NOT NULL)))) ORDER BY rt0.c3 DESC LIMIT 0x1;
SELECT * FROM rt0 WHERE (((json_array(rt0.c0, rt0.c3, rt0.c0, x'7db0', rt0.c1))>(CAST(rt0.c4 AS NUMERIC))));
SELECT ALL * FROM rt0 WHERE (((((json_array(rt0.c0, rt0.c3, rt0.c0, x'7db0', rt0.c1))>(CAST(rt0.c4 AS NUMERIC))))AND(CAST(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) AS TEXT)))) LIMIT 0x3 INTERSECT SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)&(CASE WHEN x'de3735' THEN rt0.c3 ELSE NULL END))) LIMIT 0X3;
SELECT * FROM rt0 WHERE (((json_array(rt0.c0, rt0.c3, rt0.c0, x'7db0', rt0.c1))>(CAST(rt0.c4 AS NUMERIC))));
SELECT ALL * FROM rt0 WHERE (json_extract((rt0.c1 IN ()), CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 END, LIKELY(DISTINCT rt0.c3))) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (json_extract((rt0.c1 IN ()), CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 END, LIKELY(DISTINCT rt0.c3))) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (json_extract((rt0.c1 IN ()), CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 END, LIKELY(DISTINCT rt0.c3))) ORDER BY NULL DESC  NULLS LAST;
SELECT MAX(rt0.c2) FROM rt0 WHERE ((((rt0.c3 IN (rt0.c1)))LIKE((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))));
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE ((((rt0.c3 IN (rt0.c1)))LIKE((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)), ((rt0.c3) NOT NULL), NULL))>=(('0.2925014821708145', CAST(rt0.c3 AS NUMERIC), CAST(rt0.c0 AS INTEGER)))), ((rt0.c0) NOTNULL) ASC, (((((rt0.c3, rt0.c1))>((rt0.c0, rt0.c0))))IS NOT(((rt0.c2)<<(rt0.c2)))) ASC, (((- (rt0.c3)))IS(rt0.c2))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((SUBSTR(rt0.c3, rt0.c2))OR(((rt0.c1)<(rt0.c1)))))OR((+ (rt0.c0)))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((SUBSTR(rt0.c3, rt0.c2))OR(((rt0.c1)<(rt0.c1)))))OR((+ (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT * FROM rt0 WHERE (rt0.c0) INTERSECT SELECT ALL * FROM rt0 WHERE (('446113910' IN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)), 0.5152802560125314)));
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT * FROM rt0 WHERE (rt0.c0) INTERSECT SELECT ALL * FROM rt0 WHERE (('446113910' IN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)), 0.5152802560125314)));
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) LIMIT 0X4 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((- (((((((((NULL)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))AND('nEg%'))))) LIMIT 4;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) LIMIT 0X4 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((- (((((((((NULL)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))AND('nEg%'))))) LIMIT 4;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)AND(CAST(x'6bd6' AS BLOB))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c2)AND(CAST(x'6bd6' AS BLOB))))AND((rt0.c3 IN (rt0.c3, rt0.c4, rt0.c0)) COLLATE BINARY))) ORDER BY HEX(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))), ((((((((((((rt0.c0)AND(((rt0.c2)<<(rt0.c3)))))OR((((rt0.c3, rt0.c2))<=((rt0.c0, rt0.c0))))))AND(x'e4fb0558')))OR(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE 0x39c070a1 END)))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 END)))OR((rt0.c0 IN (rt0.c0, NULL))));
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c3  WHEN 0x277f4349 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END AS TEXT)) ORDER BY ((((rt0.c4) IS TRUE))+(((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))) ASC  NULLS LAST, ((CAST(rt0.c4 AS TEXT)) BETWEEN (CASE rt0.c0  WHEN '㳲_gPTr' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END) AND (rt0.c4)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE rt0.c3  WHEN 0x277f4349 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END AS TEXT)) ORDER BY ((((rt0.c4) IS TRUE))+(((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))) ASC  NULLS LAST, ((CAST(rt0.c4 AS TEXT)) BETWEEN (CASE rt0.c0  WHEN '㳲_gPTr' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END) AND (rt0.c4)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c3  WHEN 0x277f4349 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END AS TEXT)) ORDER BY ((((rt0.c4) IS TRUE))+(((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))) ASC  NULLS LAST, ((CAST(rt0.c4 AS TEXT)) BETWEEN (CASE rt0.c0  WHEN '㳲_gPTr' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END) AND (rt0.c4)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE rt0.c3  WHEN 0x277f4349 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END AS TEXT)) ORDER BY ((((rt0.c4) IS TRUE))+(((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))) ASC  NULLS LAST, ((CAST(rt0.c4 AS TEXT)) BETWEEN (CASE rt0.c0  WHEN '㳲_gPTr' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END) AND (rt0.c4)) ASC  NULLS FIRST;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0))) NOTNULL));
SELECT MAX(rt0.c2) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0))) NOTNULL));
SELECT * FROM rt0 WHERE (((((('1786525495')) BETWEEN ((rt0.c3)) AND ((rt0.c4))))%(LENGTH(rt0.c2))));
SELECT DISTINCT * FROM rt0 WHERE (((((((('1786525495')) BETWEEN ((rt0.c3)) AND ((rt0.c4))))%(LENGTH(rt0.c2))))AND(CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT)))) ORDER BY ((rt0.c0)LIKE(NULL)) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((((((((rt0.c1)OR('l[巳93犈G')))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(((rt0.c4)AND(rt0.c1)))))AND((- (rt0.c2)))))OR(((rt0.c3) NOTNULL))))AND(LIKELIHOOD(rt0.c1, rt0.c3)))) ORDER BY ((rt0.c0)LIKE(NULL)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((('1786525495')) BETWEEN ((rt0.c3)) AND ((rt0.c4))))%(LENGTH(rt0.c2))));
SELECT DISTINCT * FROM rt0 WHERE (((((((('1786525495')) BETWEEN ((rt0.c3)) AND ((rt0.c4))))%(LENGTH(rt0.c2))))AND(CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT)))) ORDER BY ((rt0.c0)LIKE(NULL)) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((((((((rt0.c1)OR('l[巳93犈G')))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(((rt0.c4)AND(rt0.c1)))))AND((- (rt0.c2)))))OR(((rt0.c3) NOTNULL))))AND(LIKELIHOOD(rt0.c1, rt0.c3)))) ORDER BY ((rt0.c0)LIKE(NULL)) ASC  NULLS FIRST;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c2)+(rt0.c2)))) ORDER BY ((((((rt0.c4)IS(rt0.c1)))OR((((rt0.c0, rt0.c1))<=((rt0.c0, rt0.c1))))))AND((('-1e500')GLOB(-145513296)))) ASC  NULLS FIRST, (CAST(rt0.c2 AS TEXT) IN ()) ASC  NULLS LAST;
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((TRIM(DISTINCT ((rt0.c2)+(rt0.c2))))AND(rt0.c2))) ORDER BY ((((((rt0.c4 COLLATE NOCASE)OR(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 END)))AND(((rt0.c4)<<(rt0.c2)))))AND(LIKELIHOOD(DISTINCT rt0.c1, rt0.c4))), ((CAST(NULL AS REAL)) BETWEEN (((rt0.c3)*(rt0.c4))) AND (rt0.c3 COLLATE RTRIM)) DESC LIMIT 0x2;
SELECT ALL COUNT(*) FROM rt0 WHERE (load_extension(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c0 IN ())));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((load_extension(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c0 IN ())))AND(((x'')==(rt0.c1)))));
SELECT MIN(rt0.c4) FROM rt0 WHERE (((((((rt0.c2))==((rt0.c0)))))>=(((1.831174746E9 IN (rt0.c0)))))) ORDER BY CASE ((rt0.c0)/(rt0.c3))  WHEN ((rt0.c2) NOTNULL) THEN rt0.c0 COLLATE BINARY WHEN SQLITE_COMPILEOPTION_GET(rt0.c1) THEN (~ (rt0.c4)) ELSE ((rt0.c1) IS TRUE) END ASC, (((((((rt0.c4)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) IN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END));
SELECT MIN(rt0.c4) FROM rt0 WHERE (((((((rt0.c2))==((rt0.c0)))))>=(((1.831174746E9 IN (rt0.c0)))))) ORDER BY CASE ((rt0.c0)/(rt0.c3))  WHEN ((rt0.c2) NOTNULL) THEN rt0.c0 COLLATE BINARY WHEN SQLITE_COMPILEOPTION_GET(rt0.c1) THEN (~ (rt0.c4)) ELSE ((rt0.c1) IS TRUE) END ASC, (((((((rt0.c4)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) IN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)) LIMIT 4;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) ISNULL)) ORDER BY '1209235323';
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))AND(((((rt0.c1) NOTNULL))GLOB(CAST(rt0.c0 AS TEXT)))))) ORDER BY '1209235323';
SELECT MIN(rt0.c4) FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)=(((x'') BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)=(((x'') BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)  NULLS FIRST, ((((rt0.c2) IS FALSE))|(rt0.c4 COLLATE BINARY)), ((SQLITE_SOURCE_ID()) IS TRUE) ASC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE ((((- (rt0.c0))) BETWEEN (((rt0.c4)OR(rt0.c1))) AND (CAST(rt0.c0 AS BLOB)))) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)  NULLS FIRST, ((((rt0.c2) IS FALSE))|(rt0.c4 COLLATE BINARY)), ((SQLITE_SOURCE_ID()) IS TRUE) ASC  NULLS FIRST;
SELECT MIN(rt0.c4) FROM rt0 WHERE (UPPER(rt0.c2));
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((UPPER(rt0.c2))AND(((+ (rt0.c2)) IN (((rt0.c2) NOT NULL))))));
SELECT MIN(rt0.c2) FROM rt0 WHERE (((json_patch(rt0.c4, NULL))+(x'56'))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c4 WHEN (((rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c0))=((rt0.c0, '5>', rt0.c1, rt0.c3, rt0.c4))) THEN (('-611341928')+(rt0.c4)) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN NULL END END ASC  NULLS FIRST, (((((rt0.c1)>>(rt0.c2))))!=((((rt0.c1)OR(rt0.c2)))));
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (((((json_patch(rt0.c4, NULL))+(x'56')))AND(((((((((0.23233207660938826)AND(CASE WHEN x'' THEN rt0.c1 END)))AND((~ (0Xc8a80a5)))))AND((- (rt0.c4)))))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c4 WHEN (((rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c0))==((rt0.c0, '5>', rt0.c1, rt0.c3, rt0.c4))) THEN (('-611341928')+(rt0.c4)) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN NULL END END ASC  NULLS FIRST, (((((rt0.c1)>>(rt0.c2))))!=((((rt0.c1)OR(rt0.c2))))) LIMIT 0X5;
SELECT * FROM rt0 WHERE ((+ (CASE WHEN rt0.c4 THEN x'89' WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END))) ORDER BY (((((rt0.c3))<((rt0.c1)))) ISNULL), TYPEOF((((rt0.c2, rt0.c0, rt0.c4))!=((NULL, rt0.c2, rt0.c1)))) DESC;
SELECT DISTINCT * FROM rt0 WHERE ((+ (CASE WHEN rt0.c4 THEN x'89' WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END))) ORDER BY (('964363598') IS FALSE), CASE CASE WHEN rt0.c2 THEN rt0.c1 END  WHEN CAST(rt0.c1 AS INTEGER) THEN (((rt0.c0))=((rt0.c4))) END ASC  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ('218243800') ORDER BY (('964363598') IS FALSE), CASE CASE WHEN rt0.c2 THEN rt0.c1 END  WHEN CAST(rt0.c1 AS INTEGER) THEN (((rt0.c0))=((rt0.c4))) END ASC  NULLS LAST LIMIT 3;
SELECT * FROM rt0 WHERE ((+ (CASE WHEN rt0.c4 THEN x'89' WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END))) ORDER BY (((((rt0.c3))<((rt0.c1)))) ISNULL), TYPEOF((((rt0.c2, rt0.c0, rt0.c4))!=((NULL, rt0.c2, rt0.c1)))) DESC;
SELECT DISTINCT * FROM rt0 WHERE ((+ (CASE WHEN rt0.c4 THEN x'89' WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END))) ORDER BY (('964363598') IS FALSE), CASE CASE WHEN rt0.c2 THEN rt0.c1 END  WHEN CAST(rt0.c1 AS INTEGER) THEN (((rt0.c0))=((rt0.c4))) END ASC  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ('218243800') ORDER BY (('964363598') IS FALSE), CASE CASE WHEN rt0.c2 THEN rt0.c1 END  WHEN CAST(rt0.c1 AS INTEGER) THEN (((rt0.c0))=((rt0.c4))) END ASC  NULLS LAST LIMIT 3;
SELECT MAX(rt0.c0) FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c4)) COLLATE RTRIM) ORDER BY ((((((((rt0.c0)AND(CAST(rt0.c3 AS REAL))))OR((~ (rt0.c1)))))AND(((rt0.c0) NOTNULL))))AND(rt0.c0)), CAST(json_array(rt0.c4, '0.26558105007963395', rt0.c2, rt0.c3) AS TEXT) DESC;
SELECT MAX(rt0.c0) FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c4)) COLLATE RTRIM) ORDER BY CASE SQLITE_SOURCE_ID()  WHEN ((((((rt0.c0)AND(rt0.c1)))OR('-1335560884')))AND(rt0.c1)) THEN ((rt0.c2)GLOB(rt0.c2)) END DESC  NULLS LAST, ((((rt0.c3)>(rt0.c4))) IS TRUE) ASC  NULLS LAST LIMIT 0X1 INTERSECT SELECT MAX(rt0.c0) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY CASE SQLITE_SOURCE_ID()  WHEN ((((((rt0.c0)AND(rt0.c1)))OR('-1335560884')))AND(rt0.c1)) THEN ((rt0.c2)GLOB(rt0.c2)) END DESC  NULLS LAST, ((((rt0.c3)>(rt0.c4))) IS TRUE) ASC  NULLS LAST LIMIT 0x1;
SELECT * FROM rt0 WHERE (((((((((rt0.c2 COLLATE BINARY)AND((+ (rt0.c4)))))AND(CAST(rt0.c3 AS REAL))))AND(((((((((rt0.c2)AND(rt0.c2)))AND(0.5937225419918347)))OR(rt0.c0)))AND(rt0.c0)))))AND((0.4132927246320103 IN ()))));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE BINARY)AND((+ (rt0.c4)))))AND(CAST(rt0.c3 AS REAL))))AND(((((((((rt0.c2)AND(rt0.c2)))AND(0.5937225419918347)))OR(rt0.c0)))AND(rt0.c0)))))AND((0.4132927246320103 IN ())))) LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END IN (rt0.c2 COLLATE BINARY))) LIMIT 0x1;
SELECT * FROM rt0 WHERE (((((((((rt0.c2 COLLATE BINARY)AND((+ (rt0.c4)))))AND(CAST(rt0.c3 AS REAL))))AND(((((((((rt0.c2)AND(rt0.c2)))AND(0.5937225419918347)))OR(rt0.c0)))AND(rt0.c0)))))AND((0.4132927246320103 IN ()))));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE BINARY)AND((+ (rt0.c4)))))AND(CAST(rt0.c3 AS REAL))))AND(((((((((rt0.c2)AND(rt0.c2)))AND(0.5937225419918347)))OR(rt0.c0)))AND(rt0.c0)))))AND((0.4132927246320103 IN ())))) LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END IN (rt0.c2 COLLATE BINARY))) LIMIT 0x1;
SELECT MAX(rt0.c4) FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))OR((rt0.c0 IN (rt0.c3)))))OR(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))))AND(((rt0.c4)>(rt0.c0))))) ORDER BY ((-1713513415) NOT BETWEEN ((rt0.c3 IN (rt0.c2))) AND (rtreenode(rt0.c2, rt0.c1)))  NULLS FIRST;
SELECT MAX(rt0.c4) FROM rt0 WHERE (((((((((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))OR((rt0.c0 IN (rt0.c3)))))OR(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))))AND(((rt0.c4)>(rt0.c0)))))AND((((((((((-607196598 IN (rt0.c3, 0.9661580473773226)))OR(((1.092929578E9) BETWEEN (rt0.c3) AND (rt0.c4)))))AND((NOT (rt0.c2)))))OR(0X59948c58)))OR(((rt0.c0)|(rt0.c1))))))) ORDER BY ((-1713513415) NOT BETWEEN ((rt0.c3 IN (rt0.c2))) AND (rtreenode(rt0.c2, rt0.c1)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)AND((((rt0.c1, rt0.c1, rt0.c4, rt0.c3)) BETWEEN (((rt0.c0 IN (rt0.c0)), ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)), ((x'')|(rt0.c1)), rt0.c4)) AND ((rt0.c1 COLLATE RTRIM, ((rt0.c2)||(rt0.c0)), (- (rt0.c2)), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))))))) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS TEXT)  NULLS FIRST, 'F' INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS TEXT)  NULLS FIRST, 'F';
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)AND((((rt0.c1, rt0.c1, rt0.c4, rt0.c3)) BETWEEN (((rt0.c0 IN (rt0.c0)), ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)), ((x'')|(rt0.c1)), rt0.c4)) AND ((rt0.c1 COLLATE RTRIM, ((rt0.c2)||(rt0.c0)), (- (rt0.c2)), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))))))) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS TEXT)  NULLS FIRST, 'F' INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS TEXT)  NULLS FIRST, 'F';
SELECT * FROM rt0 WHERE (((((SQLITE_COMPILEOPTION_USED(NULL))AND((NOT (rt0.c3)))))AND(rt0.c3 COLLATE NOCASE))) ORDER BY (((rt0.c2 IN (rt0.c2)))-(((rt0.c3)<>(rt0.c0)))) DESC  NULLS LAST, ((rt0.c1) ISNULL) DESC;
SELECT DISTINCT * FROM rt0 WHERE (((((((SQLITE_COMPILEOPTION_USED(NULL))AND((NOT (rt0.c3)))))AND(rt0.c3 COLLATE NOCASE)))AND((NOT (rt0.c4))))) ORDER BY ((((rt0.c1)-(rt0.c1)))-(CAST('.' AS INTEGER))) ASC, NULL DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c4)|(rt0.c0)) IN (((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c4)))AND(NULL))))) ORDER BY ((((rt0.c1)-(rt0.c1)))-(CAST('.' AS INTEGER))) ASC, NULL DESC  NULLS FIRST LIMIT 1;
SELECT * FROM rt0 WHERE (((((SQLITE_COMPILEOPTION_USED(NULL))AND((NOT (rt0.c3)))))AND(rt0.c3 COLLATE NOCASE))) ORDER BY (((rt0.c2 IN (rt0.c2)))-(((rt0.c3)<>(rt0.c0)))) DESC  NULLS LAST, ((rt0.c1) ISNULL) DESC;
SELECT DISTINCT * FROM rt0 WHERE (((((((SQLITE_COMPILEOPTION_USED(NULL))AND((NOT (rt0.c3)))))AND(rt0.c3 COLLATE NOCASE)))AND((NOT (rt0.c4))))) ORDER BY ((((rt0.c1)-(rt0.c1)))-(CAST('.' AS INTEGER))) ASC, NULL DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c4)|(rt0.c0)) IN (((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c4)))AND(NULL))))) ORDER BY ((((rt0.c1)-(rt0.c1)))-(CAST('.' AS INTEGER))) ASC, NULL DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((json_array_length(rt0.c1, rt0.c0) IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((json_array_length(rt0.c1, rt0.c0) IN ())) ORDER BY ((((rt0.c3)*(rt0.c0))) BETWEEN ((rt0.c4 IN (rt0.c3))) AND ((((rt0.c4))!=((rt0.c2)))))  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((json_array_length(rt0.c1, rt0.c0) IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((json_array_length(rt0.c1, rt0.c0) IN ())) ORDER BY ((((rt0.c3)*(rt0.c0))) BETWEEN ((rt0.c4 IN (rt0.c3))) AND ((((rt0.c4))!=((rt0.c2)))))  NULLS LAST LIMIT 0X0;
SELECT * FROM rt0 WHERE (((((rt0.c2)>>(NULL))) IS FALSE));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)>>(NULL))) IS FALSE)) LIMIT 1;
SELECT * FROM rt0 WHERE (((((rt0.c2)>>(NULL))) IS FALSE));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)>>(NULL))) IS FALSE)) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) ORDER BY (((((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c3, rt0.c4, rt0.c0))))OR(((rt0.c2)|(rt0.c3)))))AND(CAST('343389524' AS TEXT))), ((((rt0.c2)<<(rt0.c4)))IS NOT((NOT (rt0.c1)))) ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE WHEN NULL THEN rt0.c1 WHEN (((rt0.c2))<=((x'28'))) THEN ((rt0.c0)<>(rt0.c4)) WHEN rt0.c3 THEN ((rt0.c4) NOTNULL) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) IS TRUE) WHEN CAST(rt0.c4 AS INTEGER) THEN ((rt0.c4)OR(rt0.c2)) ELSE (('1705728615') NOTNULL) END INTERSECT SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) AS INTEGER)) ORDER BY CASE WHEN NULL THEN rt0.c1 WHEN (((rt0.c2))<=((x'28'))) THEN ((rt0.c0)<>(rt0.c4)) WHEN rt0.c3 THEN ((rt0.c4) NOTNULL) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) IS TRUE) WHEN CAST(rt0.c4 AS INTEGER) THEN ((rt0.c4)OR(rt0.c2)) ELSE (('1705728615') NOTNULL) END;
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) ORDER BY (((((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c3, rt0.c4, rt0.c0))))OR(((rt0.c2)|(rt0.c3)))))AND(CAST('343389524' AS TEXT))), ((((rt0.c2)<<(rt0.c4)))IS NOT((NOT (rt0.c1)))) ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE WHEN NULL THEN rt0.c1 WHEN (((rt0.c2))<=((x'28'))) THEN ((rt0.c0)<>(rt0.c4)) WHEN rt0.c3 THEN ((rt0.c4) NOTNULL) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) IS TRUE) WHEN CAST(rt0.c4 AS INTEGER) THEN ((rt0.c4)OR(rt0.c2)) ELSE (('1705728615') NOTNULL) END INTERSECT SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) AS INTEGER)) ORDER BY CASE WHEN NULL THEN rt0.c1 WHEN (((rt0.c2))<=((x'28'))) THEN ((rt0.c0)<>(rt0.c4)) WHEN rt0.c3 THEN ((rt0.c4) NOTNULL) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) IS TRUE) WHEN CAST(rt0.c4 AS INTEGER) THEN ((rt0.c4)OR(rt0.c2)) ELSE (('1705728615') NOTNULL) END;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT)) ORDER BY TRIM(((rt0.c0)OR(rt0.c1))), '1185066907'  NULLS LAST;
SELECT MIN(rt0.c3) FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT)) ORDER BY TRIM(((rt0.c0)OR(rt0.c1))), '1185066907'  NULLS LAST LIMIT 0X0 INTERSECT SELECT MIN(rt0.c3) FROM rt0 WHERE (NULL COLLATE NOCASE) ORDER BY TRIM(((rt0.c0)OR(rt0.c1))), '1185066907'  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1, rt0.c2)))<=((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))))) ORDER BY '' ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c1, rt0.c2)))<=((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(((rt0.c1)>=(LOWER(DISTINCT rt0.c4)))))) ORDER BY (((((((+ (rt0.c2)))OR((NOT (rt0.c3)))))OR((rt0.c2 IN (rt0.c4, rt0.c4)))))AND((~ (rt0.c2)))) ASC  NULLS FIRST, rt0.c4 LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((x'cf54'))=((NULL))) COLLATE BINARY COLLATE RTRIM) ORDER BY (((((((+ (rt0.c2)))OR((NOT (rt0.c3)))))OR((rt0.c2 IN (rt0.c4, rt0.c4)))))AND((~ (rt0.c2)))) ASC  NULLS FIRST, rt0.c4 LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1, rt0.c2)))<=((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))))) ORDER BY '' ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c1, rt0.c2)))<=((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(((rt0.c1)>=(LOWER(DISTINCT rt0.c4)))))) ORDER BY (((((((+ (rt0.c2)))OR((NOT (rt0.c3)))))OR((rt0.c2 IN (rt0.c4, rt0.c4)))))AND((~ (rt0.c2)))) ASC  NULLS FIRST, rt0.c4 LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((x'cf54'))=((NULL))) COLLATE BINARY COLLATE RTRIM) ORDER BY (((((((+ (rt0.c2)))OR((NOT (rt0.c3)))))OR((rt0.c2 IN (rt0.c4, rt0.c4)))))AND((~ (rt0.c2)))) ASC  NULLS FIRST, rt0.c4 LIMIT 0X0;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (CAST(((rt0.c0)>(0xfffffffff6984930)) AS BLOB));
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((CAST(((rt0.c0)>(-157791952)) AS BLOB))AND((((rt0.c2, rt0.c3)) NOT BETWEEN (((rt0.c3 IN ()), TIME(rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c2, rt0.c0))) AND (((rt0.c2 IN ()), rt0.c0)))))) ORDER BY rt0.c4 COLLATE NOCASE  NULLS FIRST, NULL  NULLS FIRST LIMIT 0x1 INTERSECT SELECT MIN(rt0.c4) FROM rt0 WHERE (STRFTIME((- (rt0.c4)), UPPER(DISTINCT rt0.c0), TRIM(DISTINCT rt0.c0), CAST(rt0.c1 AS BLOB), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), HEX(rt0.c0))) ORDER BY rt0.c4 COLLATE NOCASE  NULLS FIRST, NULL  NULLS FIRST LIMIT 1;
SELECT * FROM rt0 WHERE (((((rt0.c3)<>(rt0.c0)))>>(((rt0.c3)%(rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3)<(rt0.c0)))>>(((rt0.c3)%(rt0.c1))))) ORDER BY CAST(NULL AS INTEGER) DESC LIMIT 4;
SELECT * FROM rt0 WHERE (((((rt0.c3)<>(rt0.c0)))>>(((rt0.c3)%(rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3)<(rt0.c0)))>>(((rt0.c3)%(rt0.c1))))) ORDER BY CAST(NULL AS INTEGER) DESC LIMIT 4;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((~ (rt0.c1))) ORDER BY (((rt0.c4)) NOT BETWEEN ((TRIM(rt0.c4, rt0.c0))) AND ((((rt0.c0)>=(rt0.c1)))))  NULLS LAST;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((((~ (rt0.c1)))AND(CASE WHEN (- (rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END WHEN ((rt0.c4)<=(rt0.c4)) THEN rt0.c4 COLLATE RTRIM ELSE ((rt0.c3)!=(rt0.c4)) END))) ORDER BY CASE NULL COLLATE NOCASE  WHEN '1762819034' COLLATE BINARY THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN ((rt0.c4)IS(rt0.c3)) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)) WHEN (((rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c2)) AND ((rt0.c4, rt0.c1))) THEN (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) END DESC, (((((rt0.c2)>(rt0.c2)), NULL, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN 0Xffffffff9e18c4a9 THEN rt0.c4 END, TRIM(rt0.c3, rt0.c1)))>((((rt0.c3)%(rt0.c1)), (rt0.c4 IN (rt0.c0, rt0.c1, rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c2 COLLATE NOCASE))) ASC  NULLS LAST LIMIT 6;
SELECT COUNT(*) FROM rt0 WHERE (RTRIM(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)))) ORDER BY CAST((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS TEXT)  NULLS LAST, '' ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (RTRIM(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)))) ORDER BY CAST((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS TEXT)  NULLS LAST, '' ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) IS FALSE)) BETWEEN (((((((((((rt0.c3)OR(rt0.c2)))AND(0.2411804991503027)))OR(rt0.c1)))AND(rt0.c1)))AND(''))) AND (CAST(rt0.c3 AS TEXT)))) ORDER BY NULL DESC, ((((('蹇', rt0.c4)) BETWEEN ((rt0.c3, rt0.c2)) AND ((' ?xj97', rt0.c3))))>>((+ (rt0.c3))))  NULLS FIRST, ((rt0.c4 COLLATE RTRIM)/(((rt0.c4)||(0.4200721986318393)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) IS FALSE)) BETWEEN (((((((((((rt0.c3)OR(rt0.c2)))AND(0.2411804991503027)))OR(rt0.c1)))AND(rt0.c1)))AND(''))) AND (CAST(rt0.c3 AS TEXT)))) ORDER BY NULL DESC, ((((('蹇', rt0.c4)) BETWEEN ((rt0.c3, rt0.c2)) AND ((' ?xj97', rt0.c3))))>>((+ (rt0.c3))))  NULLS FIRST, ((rt0.c4 COLLATE RTRIM)/(((rt0.c4)||(0.4200721986318393)))) ASC LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)-(rt0.c2)))||(0.3300558255261201))) ORDER BY NULL DESC, ((((('蹇', rt0.c4)) BETWEEN ((rt0.c3, rt0.c2)) AND ((' ?xj97', rt0.c3))))>>((+ (rt0.c3))))  NULLS FIRST, ((rt0.c4 COLLATE RTRIM)/(((rt0.c4)||(0.4200721986318393)))) ASC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL)) NOT BETWEEN ((- (rt0.c0))) AND (CAST(rt0.c4 AS TEXT))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) ISNULL)) NOT BETWEEN ((- (rt0.c0))) AND (CAST(rt0.c4 AS TEXT))))AND(rt0.c4)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL)) NOT BETWEEN ((- (rt0.c0))) AND (CAST(rt0.c4 AS TEXT))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) ISNULL)) NOT BETWEEN ((- (rt0.c0))) AND (CAST(rt0.c4 AS TEXT))))AND(rt0.c4)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR(CAST(rt0.c0 AS NUMERIC))), ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (((rt0.c0, (rt0.c1 IN (rt0.c3))))<=((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)), (((rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c1)))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) ISNULL))<>(0xffffffffa2b60346))) ORDER BY ((((((rt0.c0)OR(rt0.c4)))OR('136555943')))GLOB(CAST(rt0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4) ISNULL))<>(0Xffffffffa2b60346)))AND((- (((rt0.c2)AND(rt0.c3))))))) ORDER BY ((((((rt0.c0)OR(rt0.c4)))OR('136555943')))GLOB(CAST(rt0.c2 AS NUMERIC)))  NULLS FIRST LIMIT 3;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) ISNULL))<>(0xffffffffa2b60346))) ORDER BY ((((((rt0.c0)OR(rt0.c4)))OR('136555943')))GLOB(CAST(rt0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4) ISNULL))<>(0Xffffffffa2b60346)))AND((- (((rt0.c2)AND(rt0.c3))))))) ORDER BY ((((((rt0.c0)OR(rt0.c4)))OR('136555943')))GLOB(CAST(rt0.c2 AS NUMERIC)))  NULLS FIRST LIMIT 3;
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY ((((((((rt0.c3)AND(rt0.c0)))AND(x'0e')))OR(rt0.c3))) BETWEEN (rt0.c3) AND (rt0.c2 COLLATE BINARY))  NULLS LAST, ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))<>(((rt0.c2)<=(rt0.c1)))) DESC;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(CASE WHEN (~ (rt0.c2)) THEN rt0.c2 WHEN x'30' THEN CAST(rt0.c0 AS BLOB) END))) ORDER BY ((((((((rt0.c3)AND(rt0.c0)))AND(x'0e')))OR(rt0.c3))) BETWEEN (rt0.c3) AND (rt0.c2 COLLATE BINARY))  NULLS LAST, ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))!=(((rt0.c2)<=(rt0.c1)))) DESC LIMIT 0;
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY ((((((((rt0.c3)AND(rt0.c0)))AND(x'0e')))OR(rt0.c3))) BETWEEN (rt0.c3) AND (rt0.c2 COLLATE BINARY))  NULLS LAST, ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))<>(((rt0.c2)<=(rt0.c1)))) DESC;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(CASE WHEN (~ (rt0.c2)) THEN rt0.c2 WHEN x'30' THEN CAST(rt0.c0 AS BLOB) END))) ORDER BY ((((((((rt0.c3)AND(rt0.c0)))AND(x'0e')))OR(rt0.c3))) BETWEEN (rt0.c3) AND (rt0.c2 COLLATE BINARY))  NULLS LAST, ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))!=(((rt0.c2)<=(rt0.c1)))) DESC LIMIT 0;
SELECT * FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (rt0.c3 IN (rt0.c0)))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) COLLATE RTRIM, ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))OR(CAST(rt0.c1 AS REAL))))AND(LOWER(DISTINCT rt0.c4)));
SELECT DISTINCT * FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (rt0.c3 IN (rt0.c0)))) ORDER BY '폈l_q,' ASC LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY '폈l_q,' ASC LIMIT 0x3;
SELECT * FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (rt0.c3 IN (rt0.c0)))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) COLLATE RTRIM, ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))OR(CAST(rt0.c1 AS REAL))))AND(LOWER(DISTINCT rt0.c4)));
SELECT DISTINCT * FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (rt0.c3 IN (rt0.c0)))) ORDER BY '폈l_q,' ASC LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY '폈l_q,' ASC LIMIT 0x3;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN ((((rt0.c1))>=((rt0.c3)))))) ORDER BY ((((((rt0.c4)&(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)) ASC  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))-(rt0.c3 COLLATE RTRIM));
SELECT MIN(rt0.c0) FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE IN ((((rt0.c1))=((rt0.c3))))))AND(UPPER(DISTINCT ((NULL)<<(rt0.c3)))))) ORDER BY ((((((rt0.c4)&(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)) ASC  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))-(rt0.c3 COLLATE RTRIM)) LIMIT 0x2 INTERSECT SELECT ALL MIN(rt0.c0) FROM rt0 WHERE ((((rt0.c3, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c0) BETWEEN (x'') AND (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)))) AND ((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 END, (+ (rt0.c0)), ((rt0.c0)+(rt0.c2)), 0.8174250210496518)))) ORDER BY ((((((rt0.c4)&(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)) ASC  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))-(rt0.c3 COLLATE RTRIM)) LIMIT 0X2;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c4)||(0.1763794513879724))) ISNULL)) ORDER BY x'a2dd', ((rt0.c4)*(rt0.c2)) COLLATE RTRIM ASC;
SELECT MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c4)||(0.1763794513879724))) ISNULL)) ORDER BY x'a2dd', ((rt0.c4)*(rt0.c2)) COLLATE RTRIM ASC LIMIT 1;
SELECT MAX(rt0.c4) FROM rt0 WHERE (CAST(((rt0.c3) NOTNULL) AS TEXT));
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (CAST(((rt0.c3) NOTNULL) AS TEXT)) INTERSECT SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ('-1047692603');
SELECT ALL MIN(rt0.c4) FROM rt0 NOT INDEXED WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)+('-427576667')));
SELECT MIN(rt0.c4) FROM rt0 WHERE (((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)+('-427576667')))AND(((IFNULL(NULL, rt0.c2)) IS FALSE)))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST, ((((((CAST(rt0.c0 AS TEXT))AND(((rt0.c0)&(rt0.c4)))))OR((((rt0.c1))>((rt0.c4))))))OR(((rt0.c3) NOTNULL))) ASC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)) AS INTEGER)) ORDER BY ABS((rt0.c0 IN ())) DESC, CASE WHEN (((rt0.c0, rt0.c0))<=((rt0.c3, 0.058610683255166385))) THEN ((rt0.c0) IS TRUE) WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END THEN CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 END END ASC, ((((rt0.c2) ISNULL)) BETWEEN (((rt0.c4) NOT NULL)) AND (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)) AS INTEGER))AND(TRIM(DISTINCT ((rt0.c0) NOTNULL))))) ORDER BY CASE ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)) THEN ((((((((rt0.c4)AND('266676180')))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c3)) ELSE CASE WHEN rt0.c3 THEN rt0.c4 WHEN x'' THEN rt0.c2 ELSE '-1737111095' END END ASC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)) AS INTEGER)) ORDER BY ABS((rt0.c0 IN ())) DESC, CASE WHEN (((rt0.c0, rt0.c0))<=((rt0.c3, 0.058610683255166385))) THEN ((rt0.c0) IS TRUE) WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END THEN CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 END END ASC, ((((rt0.c2) ISNULL)) BETWEEN (((rt0.c4) NOT NULL)) AND (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)) AS INTEGER))AND(TRIM(DISTINCT ((rt0.c0) NOTNULL))))) ORDER BY CASE ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)) THEN ((((((((rt0.c4)AND('266676180')))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c3)) ELSE CASE WHEN rt0.c3 THEN rt0.c4 WHEN x'' THEN rt0.c2 ELSE '-1737111095' END END ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((rt0.c1) NOTNULL) IN (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))))AND(CASE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c2))  WHEN rt0.c3 THEN (NOT (rt0.c1)) END))) ORDER BY (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))>=((((rt0.c3) NOTNULL)))) DESC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((NULL)AND(CASE rt0.c1  WHEN rt0.c0 THEN '2068034167' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END)))AND(((rt0.c3)-(rt0.c2))))) ORDER BY (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))>=((((rt0.c3) NOTNULL)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((ROUND(rt0.c0, rt0.c0)) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ORDER BY ((rt0.c1)AND(rt0.c3)) COLLATE NOCASE, (+ (rt0.c0)) DESC  NULLS FIRST, CASE -147056233  WHEN rt0.c4 THEN rt0.c1 END COLLATE NOCASE;
SELECT DISTINCT * FROM rt0 WHERE (((ROUND(rt0.c0, rt0.c0)) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ORDER BY ((((((((rt0.c0) NOTNULL))AND((((rt0.c4, rt0.c3, x''))>=((rt0.c1, rt0.c4, rt0.c3))))))OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)), (NOT (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))  NULLS LAST LIMIT 0x0;
SELECT * FROM rt0 WHERE (((ROUND(rt0.c0, rt0.c0)) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ORDER BY ((rt0.c1)AND(rt0.c3)) COLLATE NOCASE, (+ (rt0.c0)) DESC  NULLS FIRST, CASE -147056233  WHEN rt0.c4 THEN rt0.c1 END COLLATE NOCASE;
SELECT DISTINCT * FROM rt0 WHERE (((ROUND(rt0.c0, rt0.c0)) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ORDER BY ((((((((rt0.c0) NOTNULL))AND((((rt0.c4, rt0.c3, x''))>=((rt0.c1, rt0.c4, rt0.c3))))))OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)), (NOT (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)>>(rt0.c3))) NOT NULL));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)>>(rt0.c3))) NOT NULL)) ORDER BY x'c5'  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)>>(rt0.c3))) NOT NULL));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)>>(rt0.c3))) NOT NULL)) ORDER BY x'c5'  NULLS FIRST;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (rt0.c0);
SELECT MAX(rt0.c3) FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE (json_array_length(((rt0.c1)!=(rt0.c2)), rt0.c4 COLLATE RTRIM));
SELECT DISTINCT * FROM rt0 WHERE (json_array_length(((rt0.c1)<>(rt0.c2)), rt0.c4 COLLATE RTRIM));
SELECT ALL * FROM rt0 WHERE (json_array_length(((rt0.c1)!=(rt0.c2)), rt0.c4 COLLATE RTRIM));
SELECT MAX(rt0.c4) FROM rt0 WHERE (TRIM(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0.29643245237462434))))) ORDER BY CASE (rt0.c4 IN ())  WHEN rt0.c4 THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN '' END END ASC  NULLS LAST;
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((TRIM(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0.29643245237462434)))))AND(HEX(DISTINCT load_extension('-179326053'))))) ORDER BY CASE rt0.c2  WHEN ((rt0.c3)%(rt0.c0)) THEN ((rt0.c4)<<(NULL)) WHEN ((rt0.c4) IS FALSE) THEN (x'e5' IN (NULL)) END DESC LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ((NULLIF(DISTINCT rt0.c2, rt0.c1) IN (rt0.c0, '-0.0'))) ORDER BY CASE rt0.c2  WHEN ((rt0.c3)%(rt0.c0)) THEN ((rt0.c4)<<(NULL)) WHEN ((rt0.c4) IS FALSE) THEN (x'e5' IN (NULL)) END DESC LIMIT 0;
SELECT MAX(rt0.c0) FROM rt0 WHERE ((NOT ((rt0.c4 IN (rt0.c3, rt0.c2)))));
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE ((NOT ((rt0.c4 IN (rt0.c3, rt0.c2))))) ORDER BY ((((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c1))) NOT NULL) ASC  NULLS FIRST, (((NOT (rt0.c4)))<(rt0.c4)) LIMIT 0X1;
SELECT * FROM rt0 WHERE (((rt0.c3)<=(rt0.c3)) COLLATE RTRIM);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)<=(rt0.c3)) COLLATE RTRIM) ORDER BY (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END))<>((CAST(rt0.c2 AS TEXT)))) LIMIT 0X1;
SELECT * FROM rt0 WHERE (((rt0.c3)<=(rt0.c3)) COLLATE RTRIM);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)<=(rt0.c3)) COLLATE RTRIM) ORDER BY (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END))<>((CAST(rt0.c2 AS TEXT)))) LIMIT 0X1;
SELECT MAX(rt0.c3) FROM rt0 WHERE (CAST(((rt0.c3)AND(rt0.c4)) AS NUMERIC));
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (CAST(((rt0.c3)AND(rt0.c4)) AS NUMERIC));
SELECT * FROM rt0 WHERE (((((((rt0.c3)OR('-1473642739')))OR(rt0.c3))) IS FALSE));
SELECT * FROM rt0 WHERE (((((((((rt0.c3)OR('-1473642739')))OR(rt0.c3))) IS FALSE))AND((((((((((((((NOT (rt0.c4)))OR(ROUND(rt0.c1, rt0.c2))))AND(rt0.c1)))OR(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))))OR((rt0.c1 IN (rt0.c1, rt0.c1)))))AND((rt0.c0 IN ()))))AND((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c4, '9A^︐撰Y2', rt0.c4)) AND ((rt0.c1, rt0.c0, rt0.c3)))))))) ORDER BY ((CAST(rt0.c4 AS NUMERIC))OR(NULLIF(DISTINCT rt0.c2, rt0.c1))), (((rt0.c1)<=(rt0.c1)) IN ()), ((((((((rt0.c2)AND((rt0.c1 IN (rt0.c2)))))OR(x'')))AND('153344800')))AND((rt0.c0 IN ()))) ASC LIMIT 0X0 INTERSECT SELECT * FROM rt0 WHERE (COALESCE(DISTINCT CASE rt0.c4  WHEN rt0.c0 THEN 0.8637171610860976 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN '-46791361' ELSE 'b6}ya' END, ((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3)))) ORDER BY ((CAST(rt0.c4 AS NUMERIC))OR(NULLIF(DISTINCT rt0.c2, rt0.c1))), (((rt0.c1)<=(rt0.c1)) IN ()), ((((((((rt0.c2)AND((rt0.c1 IN (rt0.c2)))))OR(x'')))AND('153344800')))AND((rt0.c0 IN ()))) ASC LIMIT 0x0;
SELECT * FROM rt0 WHERE (((((((rt0.c3)OR('-1473642739')))OR(rt0.c3))) IS FALSE));
SELECT * FROM rt0 WHERE (((((((((rt0.c3)OR('-1473642739')))OR(rt0.c3))) IS FALSE))AND((((((((((((((NOT (rt0.c4)))OR(ROUND(rt0.c1, rt0.c2))))AND(rt0.c1)))OR(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))))OR((rt0.c1 IN (rt0.c1, rt0.c1)))))AND((rt0.c0 IN ()))))AND((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c4, '9A^︐撰Y2', rt0.c4)) AND ((rt0.c1, rt0.c0, rt0.c3)))))))) ORDER BY ((CAST(rt0.c4 AS NUMERIC))OR(NULLIF(DISTINCT rt0.c2, rt0.c1))), (((rt0.c1)<=(rt0.c1)) IN ()), ((((((((rt0.c2)AND((rt0.c1 IN (rt0.c2)))))OR(x'')))AND('153344800')))AND((rt0.c0 IN ()))) ASC LIMIT 0X0 INTERSECT SELECT * FROM rt0 WHERE (COALESCE(DISTINCT CASE rt0.c4  WHEN rt0.c0 THEN 0.8637171610860976 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN '-46791361' ELSE 'b6}ya' END, ((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3)))) ORDER BY ((CAST(rt0.c4 AS NUMERIC))OR(NULLIF(DISTINCT rt0.c2, rt0.c1))), (((rt0.c1)<=(rt0.c1)) IN ()), ((((((((rt0.c2)AND((rt0.c1 IN (rt0.c2)))))OR(x'')))AND('153344800')))AND((rt0.c0 IN ()))) ASC LIMIT 0x0;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN x'e5' WHEN rt0.c4 THEN rt0.c3 END))) ORDER BY ((rt0.c2)/(((rt0.c2)AND(rt0.c4)))), (((- (rt0.c3))) NOTNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (CASE WHEN rt0.c0 THEN x'e5' WHEN rt0.c4 THEN rt0.c3 END)))AND(NULL))) ORDER BY ((rt0.c2)/(((rt0.c2)AND(rt0.c4)))), (((- (rt0.c3))) NOTNULL) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (CAST(TYPEOF(DISTINCT rt0.c4) AS BLOB));
SELECT DISTINCT * FROM rt0 WHERE (CAST(TYPEOF(DISTINCT rt0.c4) AS BLOB)) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (0.36278048132216767) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (CAST(TYPEOF(DISTINCT rt0.c4) AS BLOB));
SELECT DISTINCT * FROM rt0 WHERE (CAST(TYPEOF(DISTINCT rt0.c4) AS BLOB)) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (0.36278048132216767) LIMIT 1;
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND (((rt0.c4 IN (rt0.c3, rt0.c1, rt0.c4))))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND (((rt0.c4 IN (rt0.c3, rt0.c1, rt0.c4))))))AND(((((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c2)AND(rt0.c2)))))OR((rt0.c2 IN (rt0.c3, rt0.c3))))))) LIMIT 0X0;
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND (((rt0.c4 IN (rt0.c3, rt0.c1, rt0.c4))))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND (((rt0.c4 IN (rt0.c3, rt0.c1, rt0.c4))))))AND(((((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c2)AND(rt0.c2)))))OR((rt0.c2 IN (rt0.c3, rt0.c3))))))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c4, rt0.c4))<(('-1203225677', rt0.c2, rt0.c4)))) NOT NULL)) ORDER BY ((CAST(rt0.c3 AS REAL)) IS FALSE) DESC, CAST(((((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c4, rt0.c4))<(('-1203225677', rt0.c2, rt0.c4)))) NOT NULL)) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))/(CAST(rt0.c0 AS TEXT))) ASC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c4, rt0.c4))<(('-1203225677', rt0.c2, rt0.c4)))) NOT NULL)) ORDER BY ((CAST(rt0.c3 AS REAL)) IS FALSE) DESC, CAST(((((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c4, rt0.c4))<(('-1203225677', rt0.c2, rt0.c4)))) NOT NULL)) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))/(CAST(rt0.c0 AS TEXT))) ASC;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (CAST(json_valid(x'20') AS NUMERIC)) ORDER BY CAST(json_array(rt0.c3, rt0.c0, rt0.c0) AS BLOB)  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((CAST(json_valid(x'20') AS NUMERIC))AND(((((((((((CAST(x'' AS INTEGER))AND(rt0.c3)))AND((((rt0.c1, rt0.c2, rt0.c3))<>((rt0.c1, 0.03411867455059936, 0.09115304906558863))))))AND(((rt0.c0) IS FALSE))))OR('')))AND(x''))))) ORDER BY CAST(json_array(rt0.c3, rt0.c0, rt0.c0) AS BLOB)  NULLS FIRST LIMIT 4 INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT NULL)) ORDER BY CAST(json_array(rt0.c3, rt0.c0, rt0.c0) AS BLOB)  NULLS FIRST LIMIT 0x4;
SELECT * FROM rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ORDER BY ((((rt0.c0)==(rt0.c2)))/((((rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c3)))))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c1 COLLATE NOCASE AS TEXT))AND(IFNULL(((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c4)), ((rt0.c2) NOTNULL))))) ORDER BY ((-314174460) BETWEEN (IFNULL(rt0.c4, rt0.c4)) AND (((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c4)))), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE DESC  NULLS LAST, LOWER((((rt0.c2))>((rt0.c2)))) ASC;
SELECT * FROM rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ORDER BY ((((rt0.c0)==(rt0.c2)))/((((rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c3)))))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c1 COLLATE NOCASE AS TEXT))AND(IFNULL(((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c4)), ((rt0.c2) NOTNULL))))) ORDER BY ((-314174460) BETWEEN (IFNULL(rt0.c4, rt0.c4)) AND (((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c4)))), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE DESC  NULLS LAST, LOWER((((rt0.c2))>((rt0.c2)))) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((rt0.c0, rt0.c0))!=((0.9961272952264633, rt0.c2))))));
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((rt0.c0, rt0.c0))<>((0.9961272952264633, rt0.c2)))))) ORDER BY '%Dk' ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((rt0.c0, rt0.c0))!=((0.9961272952264633, rt0.c2))))));
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((((rt0.c0, rt0.c0))<>((0.9961272952264633, rt0.c2)))))) ORDER BY '%Dk' ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((((((((((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(UNLIKELY(NULL))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE 'Fo' END)))AND(((rt0.c4)*(rt0.c0)))))AND(TRIM(rt0.c2, rt0.c1))));
SELECT * FROM rt0 WHERE (((((((((((((((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(UNLIKELY(NULL))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE 'Fo' END)))AND(((rt0.c4)*(rt0.c0)))))AND(TRIM(rt0.c2, rt0.c1)))) LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE ((- (rt0.c0))) LIMIT 2;
SELECT * FROM rt0 WHERE (((((((((((((((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(UNLIKELY(NULL))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE 'Fo' END)))AND(((rt0.c4)*(rt0.c0)))))AND(TRIM(rt0.c2, rt0.c1))));
SELECT * FROM rt0 WHERE (((((((((((((((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(UNLIKELY(NULL))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE 'Fo' END)))AND(((rt0.c4)*(rt0.c0)))))AND(TRIM(rt0.c2, rt0.c1)))) LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE ((- (rt0.c0))) LIMIT 2;
SELECT * FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c3)))OR('-1550523142')))OR(rt0.c1)))OR(x'0d87')))AND('2001252046')))GLOB(rt0.c2)));
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c2)AND(rt0.c3)))OR('-1550523142')))OR(rt0.c1)))OR(x'0d87')))AND('2001252046')))GLOB(rt0.c2)))AND((((rt0.c4, rt0.c4, rt0.c1, rt0.c0)) NOT BETWEEN ((((NULL) ISNULL), (~ (rt0.c3)), ((rt0.c1) NOT NULL), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END)) AND ((((rt0.c4)IS NOT(rt0.c0)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('1729040247'))), ((rt0.c3) ISNULL), (+ (rt0.c2))))))));
SELECT * FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c3)))OR('-1550523142')))OR(rt0.c1)))OR(x'0d87')))AND('2001252046')))GLOB(rt0.c2)));
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c2)AND(rt0.c3)))OR('-1550523142')))OR(rt0.c1)))OR(x'0d87')))AND('2001252046')))GLOB(rt0.c2)))AND((((rt0.c4, rt0.c4, rt0.c1, rt0.c0)) NOT BETWEEN ((((NULL) ISNULL), (~ (rt0.c3)), ((rt0.c1) NOT NULL), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END)) AND ((((rt0.c4)IS NOT(rt0.c0)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('1729040247'))), ((rt0.c3) ISNULL), (+ (rt0.c2))))))));
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c1 WHEN '0.14480232466435417' THEN rt0.c0 END) IS TRUE)) ORDER BY rt0.c2 ASC, ((UNLIKELY(rt0.c2)) NOTNULL) ASC;
SELECT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c1 WHEN '0.14480232466435417' THEN rt0.c0 END) IS TRUE))AND(((CAST(rt0.c0 AS INTEGER))-((- (rt0.c2))))))) ORDER BY rt0.c2 ASC, ((UNLIKELY(rt0.c2)) NOTNULL) ASC INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c3) AND ('W')))>>(((rt0.c0)-(rt0.c2))))) ORDER BY rt0.c2 ASC, ((UNLIKELY(rt0.c2)) NOTNULL) ASC;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c1 WHEN '0.14480232466435417' THEN rt0.c0 END) IS TRUE)) ORDER BY rt0.c2 ASC, ((UNLIKELY(rt0.c2)) NOTNULL) ASC;
SELECT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c1 WHEN '0.14480232466435417' THEN rt0.c0 END) IS TRUE))AND(((CAST(rt0.c0 AS INTEGER))-((- (rt0.c2))))))) ORDER BY rt0.c2 ASC, ((UNLIKELY(rt0.c2)) NOTNULL) ASC INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c3) AND ('W')))>>(((rt0.c0)-(rt0.c2))))) ORDER BY rt0.c2 ASC, ((UNLIKELY(rt0.c2)) NOTNULL) ASC;
SELECT * FROM rt0 WHERE (((((((((((rt0.c4)AND(rt0.c1)))AND(NULL)))AND((((rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c4))))))OR(CAST(rt0.c4 AS INTEGER))))AND(((rt0.c1) ISNULL))));
SELECT * FROM rt0 WHERE (((((((((((rt0.c4)AND(rt0.c1)))AND(NULL)))AND((((rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c4))))))OR(CAST(rt0.c4 AS INTEGER))))AND(((rt0.c1) ISNULL))));
SELECT * FROM rt0 WHERE (((((((((((rt0.c4)AND(rt0.c1)))AND(NULL)))AND((((rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c4))))))OR(CAST(rt0.c4 AS INTEGER))))AND(((rt0.c1) ISNULL))));
SELECT * FROM rt0 WHERE (((((((((((rt0.c4)AND(rt0.c1)))AND(NULL)))AND((((rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c4))))))OR(CAST(rt0.c4 AS INTEGER))))AND(((rt0.c1) ISNULL))));
SELECT MIN(rt0.c2) FROM rt0 WHERE (x'9f');
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (x'9f') ORDER BY ((rt0.c2) NOT BETWEEN (CASE WHEN 0xffffffff90e90b4c THEN rt0.c2 END) AND (x'37'))  NULLS LAST, ((((((((((rt0.c1) IS TRUE))AND(((((((((((0.10681860850518732)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(0.4485641792259819)))))AND((((rt0.c3, rt0.c4))<>((rt0.c1, rt0.c1))))))OR(rt0.c0 COLLATE RTRIM)))OR((rt0.c3 IN ()))) DESC  NULLS LAST, rt0.c3 LIMIT 0 INTERSECT SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END WHEN CAST(rt0.c0 AS BLOB) THEN (~ (rt0.c1)) WHEN (+ (rt0.c2)) THEN ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) END) ORDER BY ((rt0.c2) NOT BETWEEN (CASE WHEN -1863775412 THEN rt0.c2 END) AND (x'37'))  NULLS LAST, ((((((((((rt0.c1) IS TRUE))AND(((((((((((0.10681860850518732)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(0.4485641792259819)))))AND((((rt0.c3, rt0.c4))!=((rt0.c1, rt0.c1))))))OR(rt0.c0 COLLATE RTRIM)))OR((rt0.c3 IN ()))) DESC  NULLS LAST, rt0.c3 LIMIT 0x0;
SELECT MAX(rt0.c4) FROM rt0 WHERE (CASE WHEN ((rt0.c2)IS(rt0.c4)) THEN '' WHEN ((rt0.c0) NOT NULL) THEN CAST(rt0.c4 AS REAL) WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) THEN CASE WHEN rt0.c3 THEN rt0.c2 END WHEN ((rt0.c3)>=(rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END WHEN (rt0.c2 IN (rt0.c1)) THEN CAST('261358840' AS REAL) WHEN (((rt0.c4))<((rt0.c1))) THEN (~ (rt0.c0)) ELSE rt0.c0 END);
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (CASE WHEN ((rt0.c2)IS(rt0.c4)) THEN '' WHEN ((rt0.c0) NOT NULL) THEN CAST(rt0.c4 AS REAL) WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) THEN CASE WHEN rt0.c3 THEN rt0.c2 END WHEN ((rt0.c3)>=(rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END WHEN (rt0.c2 IN (rt0.c1)) THEN CAST('261358840' AS REAL) WHEN (((rt0.c4))<((rt0.c1))) THEN (~ (rt0.c0)) ELSE rt0.c0 END) LIMIT 0x0;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (((((((((((TYPEOF(rt0.c3))AND((((rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c4, x'68')) AND ((rt0.c1, rt0.c0))))))OR(CAST(rt0.c3 AS NUMERIC))))AND(COALESCE(DISTINCT 0.9296791372627303, 'Q#x5q*t'''))))AND(NULL)))OR((rt0.c3 IN (rt0.c0)))));
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (((((((((((TYPEOF(rt0.c3))AND((((rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c4, x'68')) AND ((rt0.c1, rt0.c0))))))OR(CAST(rt0.c3 AS NUMERIC))))AND(COALESCE(DISTINCT 0.9296791372627303, 'Q#x5q*t'''))))AND(NULL)))OR((rt0.c3 IN (rt0.c0))))) ORDER BY (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END IN ()) LIMIT 0;
SELECT MAX(rt0.c3) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)))AND(((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))));
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)))AND(((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2))))) INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN 0.148594141476742 ELSE rt0.c0 END AS REAL));
SELECT * FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE))<>((((rt0.c3)||(rt0.c2)))))) ORDER BY ((rt0.c4 COLLATE BINARY) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (rt0.c4)) ASC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1 COLLATE NOCASE))<((((rt0.c3)||(rt0.c2))))))AND(((((rt0.c2) NOTNULL)) IS FALSE)))) ORDER BY (~ (CASE WHEN rt0.c4 THEN rt0.c4 END));
SELECT * FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE))<>((((rt0.c3)||(rt0.c2)))))) ORDER BY ((rt0.c4 COLLATE BINARY) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (rt0.c4)) ASC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1 COLLATE NOCASE))<((((rt0.c3)||(rt0.c2))))))AND(((((rt0.c2) NOTNULL)) IS FALSE)))) ORDER BY (~ (CASE WHEN rt0.c4 THEN rt0.c4 END));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ((rt0.c1 IN (x'c11b25'))))) ORDER BY ((((((((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 END)AND(((rt0.c2) IS TRUE))))OR(CAST(rt0.c0 AS INTEGER))))AND(((rt0.c2)>>(rt0.c2)))))AND(((rt0.c2) NOTNULL))) ASC;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((rt0.c0 COLLATE NOCASE IN ((rt0.c1 IN (x'c11b25')))))AND(ABS(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)))) ORDER BY (((rt0.c1))!=((rt0.c1))) COLLATE BINARY DESC, ((rt0.c4)%('2Q\hm}')) LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((((rt0.c3)LIKE(rt0.c1)))) AND (((('311953353')<>(rt0.c4)))))) ORDER BY (((rt0.c1))!=((rt0.c1))) COLLATE BINARY DESC, ((rt0.c4)%('2Q\hm}')) LIMIT 0;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (+ ((rt0.c2 IN (rt0.c3, rt0.c2)))) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)AND(((((LIKE(rt0.c1, rt0.c0, 'q'))AND(rt0.c2)))OR((+ (rt0.c0))))))) ORDER BY (+ ((rt0.c2 IN (rt0.c3, rt0.c2)))) ASC INTERSECT SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)) IN (rt0.c2))) ORDER BY (+ ((rt0.c2 IN (rt0.c3, rt0.c2)))) ASC;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (+ ((rt0.c2 IN (rt0.c3, rt0.c2)))) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)AND(((((LIKE(rt0.c1, rt0.c0, 'q'))AND(rt0.c2)))OR((+ (rt0.c0))))))) ORDER BY (+ ((rt0.c2 IN (rt0.c3, rt0.c2)))) ASC INTERSECT SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)) IN (rt0.c2))) ORDER BY (+ ((rt0.c2 IN (rt0.c3, rt0.c2)))) ASC;
SELECT MAX(rt0.c4) FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))<(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)));
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))<(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END))) INTERSECT SELECT MAX(rt0.c4) FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c3, rt0.c1))<=((rt0.c1, rt0.c4, rt0.c4, rt0.c3))))IS NOT(rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3) IS TRUE)))) ORDER BY (+ (x'0c89')), ((((((((NULL)AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c2))) ISNULL);
SELECT DISTINCT * FROM rt0 WHERE ((+ (((rt0.c3) IS TRUE)))) ORDER BY COALESCE(-4.16868944E8, LENGTH(rt0.c4), ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c2)))  NULLS FIRST, CASE WHEN rt0.c1 THEN ('-1770558138' IN (rt0.c0, rt0.c4)) END  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((~ (0.21698329928853188))) ORDER BY COALESCE(-4.16868944E8, LENGTH(rt0.c4), ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c2)))  NULLS FIRST, CASE WHEN rt0.c1 THEN ('-1770558138' IN (rt0.c0, rt0.c4)) END  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3) IS TRUE)))) ORDER BY (+ (x'0c89')), ((((((((NULL)AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c2))) ISNULL);
SELECT DISTINCT * FROM rt0 WHERE ((+ (((rt0.c3) IS TRUE)))) ORDER BY COALESCE(-4.16868944E8, LENGTH(rt0.c4), ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c2)))  NULLS FIRST, CASE WHEN rt0.c1 THEN ('-1770558138' IN (rt0.c0, rt0.c4)) END  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((~ (0.21698329928853188))) ORDER BY COALESCE(-4.16868944E8, LENGTH(rt0.c4), ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c2)))  NULLS FIRST, CASE WHEN rt0.c1 THEN ('-1770558138' IN (rt0.c0, rt0.c4)) END  NULLS FIRST LIMIT 0;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (highlight(rt0.c2 COLLATE NOCASE, CAST(rt0.c1 AS TEXT), ((((((((NULL)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c1)), ((((rt0.c3)OR('1724650679')))OR(rt0.c3))));
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (highlight(rt0.c2 COLLATE NOCASE, CAST(rt0.c1 AS TEXT), ((((((((NULL)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c1)), ((((rt0.c3)OR('1724650679')))OR(rt0.c3)))) LIMIT 0x2 INTERSECT SELECT MAX(rt0.c0) FROM rt0 WHERE (TRIM(DISTINCT 0Xb0e40d9, CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END)) LIMIT 2;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ('2056680345');
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ('2056680345') ORDER BY ((x'') BETWEEN (((rt0.c1)AND(rt0.c3))) AND (((rt0.c0)%(rt0.c2))))  NULLS LAST, ((((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END)OR(NULLIF(DISTINCT rt0.c1, rt0.c3))))OR(((rt0.c4)<=(rt0.c3)))) ASC  NULLS FIRST LIMIT 0X3;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4, 0.10983946412630952, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1, rt0.c4)) AND ((rt0.c2, rt0.c3, rt0.c3, rt0.c1))))/(rt0.c4))) ORDER BY ((TRIM(rt0.c3, rt0.c0))>=(((rt0.c4) BETWEEN (x'81d4') AND (rt0.c3)))) DESC, (((rt0.c2)/(rt0.c3)) IN (0.3906292282080476));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4, 0.10983946412630952, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1, rt0.c4)) AND ((rt0.c2, rt0.c3, rt0.c3, rt0.c1))))/(rt0.c4))) ORDER BY (~ (rt0.c3)) ASC, LOWER(DISTINCT json_patch(rt0.c1, 2002921546)) DESC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (((COALESCE(rt0.c3, rt0.c3))IS NOT(rt0.c1 COLLATE RTRIM))) ORDER BY (~ (rt0.c3)) ASC, LOWER(DISTINCT json_patch(rt0.c1, 0x7762284a)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4, 0.10983946412630952, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1, rt0.c4)) AND ((rt0.c2, rt0.c3, rt0.c3, rt0.c1))))/(rt0.c4))) ORDER BY ((TRIM(rt0.c3, rt0.c0))>=(((rt0.c4) BETWEEN (x'81d4') AND (rt0.c3)))) DESC, (((rt0.c2)/(rt0.c3)) IN (0.3906292282080476));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4, 0.10983946412630952, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1, rt0.c4)) AND ((rt0.c2, rt0.c3, rt0.c3, rt0.c1))))/(rt0.c4))) ORDER BY (~ (rt0.c3)) ASC, LOWER(DISTINCT json_patch(rt0.c1, 2002921546)) DESC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (((COALESCE(rt0.c3, rt0.c3))IS NOT(rt0.c1 COLLATE RTRIM))) ORDER BY (~ (rt0.c3)) ASC, LOWER(DISTINCT json_patch(rt0.c1, 0x7762284a)) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c0)<(rt0.c4))) NOTNULL)) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)%((- (rt0.c0)))), ((rt0.c0)%(rt0.c2)) COLLATE RTRIM DESC, CAST(rt0.c2 AS TEXT) COLLATE NOCASE ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)<(rt0.c4))) NOTNULL))AND(x''))) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)%((- (rt0.c0)))), ((rt0.c0)%(rt0.c2)) COLLATE RTRIM DESC, CAST(rt0.c2 AS TEXT) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c0)<(rt0.c4))) NOTNULL)) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)%((- (rt0.c0)))), ((rt0.c0)%(rt0.c2)) COLLATE RTRIM DESC, CAST(rt0.c2 AS TEXT) COLLATE NOCASE ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)<(rt0.c4))) NOTNULL))AND(x''))) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)%((- (rt0.c0)))), ((rt0.c0)%(rt0.c2)) COLLATE RTRIM DESC, CAST(rt0.c2 AS TEXT) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((((((((rt0.c4 IN ()))AND(((rt0.c2)LIKE(x'e8f3')))))AND(rt0.c2)))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))AND(rt0.c3 COLLATE NOCASE)))OR(x'6c'))) ORDER BY (((((rt0.c0, -1292074844))!=((rt0.c4, x'1c')))) IS FALSE) ASC  NULLS LAST, CAST(((((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c0)) AS NUMERIC)  NULLS LAST, ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE ASC;
SELECT * FROM rt0 WHERE ((((((((((((rt0.c4 IN ()))AND(((rt0.c2)LIKE(x'e8f3')))))AND(rt0.c2)))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))AND(rt0.c3 COLLATE NOCASE)))OR(x'6c'))) ORDER BY CASE WHEN (((rt0.c3, rt0.c1))>((rt0.c3, rt0.c4))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END WHEN LIKELY(DISTINCT '2056329241') THEN (((rt0.c4, rt0.c2, rt0.c3, rt0.c2))<((rt0.c2, rt0.c0, rt0.c2, rt0.c4))) END  NULLS LAST, ((ABS(rt0.c3))==((~ (rt0.c4))))  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL * FROM rt0 WHERE (CAST((+ (rt0.c4)) AS NUMERIC)) ORDER BY CASE WHEN (((rt0.c3, rt0.c1))>((rt0.c3, rt0.c4))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END WHEN LIKELY(DISTINCT '2056329241') THEN (((rt0.c4, rt0.c2, rt0.c3, rt0.c2))<((rt0.c2, rt0.c0, rt0.c2, rt0.c4))) END  NULLS LAST, ((ABS(rt0.c3))==((~ (rt0.c4))))  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE ((((((((((((rt0.c4 IN ()))AND(((rt0.c2)LIKE(x'e8f3')))))AND(rt0.c2)))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))AND(rt0.c3 COLLATE NOCASE)))OR(x'6c'))) ORDER BY (((((rt0.c0, -1292074844))!=((rt0.c4, x'1c')))) IS FALSE) ASC  NULLS LAST, CAST(((((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c0)) AS NUMERIC)  NULLS LAST, ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE ASC;
SELECT * FROM rt0 WHERE ((((((((((((rt0.c4 IN ()))AND(((rt0.c2)LIKE(x'e8f3')))))AND(rt0.c2)))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))AND(rt0.c3 COLLATE NOCASE)))OR(x'6c'))) ORDER BY CASE WHEN (((rt0.c3, rt0.c1))>((rt0.c3, rt0.c4))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END WHEN LIKELY(DISTINCT '2056329241') THEN (((rt0.c4, rt0.c2, rt0.c3, rt0.c2))<((rt0.c2, rt0.c0, rt0.c2, rt0.c4))) END  NULLS LAST, ((ABS(rt0.c3))==((~ (rt0.c4))))  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL * FROM rt0 WHERE (CAST((+ (rt0.c4)) AS NUMERIC)) ORDER BY CASE WHEN (((rt0.c3, rt0.c1))>((rt0.c3, rt0.c4))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END WHEN LIKELY(DISTINCT '2056329241') THEN (((rt0.c4, rt0.c2, rt0.c3, rt0.c2))<((rt0.c2, rt0.c0, rt0.c2, rt0.c4))) END  NULLS LAST, ((ABS(rt0.c3))==((~ (rt0.c4))))  NULLS LAST LIMIT 0x1;
SELECT * FROM rt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (NULL);
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (TRIM(DISTINCT (((rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c3))), ((((((0.5687102069242116)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))) ORDER BY ((rt0.c1 COLLATE BINARY)IS(rt0.c4 COLLATE NOCASE)) ASC  NULLS FIRST, CAST(((rt0.c4)!=(rt0.c4)) AS NUMERIC);
SELECT MIN(rt0.c1) FROM rt0 WHERE (TRIM(DISTINCT (((rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c3))), ((((((0.5687102069242116)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))) ORDER BY ((0.929234403159568) IS FALSE)  NULLS FIRST INTERSECT SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((((IFNULL(rt0.c1, rt0.c0))AND(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0)))))AND(rt0.c3))) ORDER BY ((0.929234403159568) IS FALSE)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)AND(CAST(rt0.c4 AS BLOB))))OR(((rt0.c1)<<(rt0.c3)))));
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)AND(CAST(rt0.c4 AS BLOB))))OR(((rt0.c1)<<(rt0.c3))))) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END))  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (CAST((~ (rt0.c4)) AS REAL)) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END))  NULLS LAST LIMIT 0x0;
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)AND(CAST(rt0.c4 AS BLOB))))OR(((rt0.c1)<<(rt0.c3)))));
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)AND(CAST(rt0.c4 AS BLOB))))OR(((rt0.c1)<<(rt0.c3))))) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END))  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (CAST((~ (rt0.c4)) AS REAL)) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END))  NULLS LAST LIMIT 0x0;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c3)%(rt0.c3)) THEN CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END WHEN (((rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c3, NULL)) AND ((rt0.c3, rt0.c2))) THEN ((rt0.c2)=(rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE CAST(rt0.c2 AS INTEGER) END) LIMIT 3;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c3)%(rt0.c3)) THEN CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END WHEN (((rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c3, NULL)) AND ((rt0.c3, rt0.c2))) THEN ((rt0.c2)=(rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE CAST(rt0.c2 AS INTEGER) END) LIMIT 3;
SELECT MAX(rt0.c3) FROM rt0 WHERE ((((rt0.c4)OR(rt0.c1)) IN ())) ORDER BY 0.019273236165271546;
SELECT MAX(rt0.c3) FROM rt0 WHERE ((((rt0.c4)OR(rt0.c1)) IN ())) ORDER BY 0.019273236165271546 INTERSECT SELECT ALL MAX(rt0.c3) FROM rt0 WHERE ((NULL IN ((((rt0.c4, rt0.c1, NULL)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, 0Xfffffffffa7465db, rt0.c1)))))) ORDER BY 0.019273236165271546;
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c1)))AND(NULL)))AND(rt0.c4)))AND(rt0.c3)))&(((((rt0.c0)OR(rt0.c3)))OR(rt0.c1))))) ORDER BY (NOT (TOTAL_CHANGES()))  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c1)))AND(NULL)))AND(rt0.c4)))AND(rt0.c3)))&(((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))))AND((rt0.c4 COLLATE NOCASE IN (rt0.c4))))) ORDER BY (NOT (TOTAL_CHANGES()))  NULLS LAST LIMIT 3 INTERSECT SELECT * FROM rt0 WHERE (x'23f1') ORDER BY (NOT (TOTAL_CHANGES()))  NULLS LAST LIMIT 0X3;
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c1)))AND(NULL)))AND(rt0.c4)))AND(rt0.c3)))&(((((rt0.c0)OR(rt0.c3)))OR(rt0.c1))))) ORDER BY (NOT (TOTAL_CHANGES()))  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c1)))AND(NULL)))AND(rt0.c4)))AND(rt0.c3)))&(((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))))AND((rt0.c4 COLLATE NOCASE IN (rt0.c4))))) ORDER BY (NOT (TOTAL_CHANGES()))  NULLS LAST LIMIT 3 INTERSECT SELECT * FROM rt0 WHERE (x'23f1') ORDER BY (NOT (TOTAL_CHANGES()))  NULLS LAST LIMIT 0X3;
SELECT * FROM rt0 WHERE ((- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY CASE COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c0)  WHEN '0.4050170447747563' THEN ((rt0.c2)||(rt0.c2)) END  NULLS FIRST, ((rt0.c1) BETWEEN (0xb0e40d9) AND (((rt0.c1) NOT NULL)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY CASE COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c0)  WHEN '0.4050170447747563' THEN ((rt0.c2)||(rt0.c2)) END  NULLS FIRST, ((rt0.c1) BETWEEN (185483481) AND (((rt0.c1) NOT NULL)))  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c4 AS TEXT)  WHEN ((rt0.c2)==('-97227058')) THEN ((rt0.c0) IS FALSE) WHEN CAST(rt0.c2 AS NUMERIC) THEN CASE WHEN x'a982f08c' THEN rt0.c4 ELSE rt0.c1 END WHEN (- (rt0.c4)) THEN rt0.c2 ELSE rt0.c2 COLLATE BINARY END) ORDER BY CASE COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c0)  WHEN '0.4050170447747563' THEN ((rt0.c2)||(rt0.c2)) END  NULLS FIRST, ((rt0.c1) BETWEEN (185483481) AND (((rt0.c1) NOT NULL)))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY CASE COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c0)  WHEN '0.4050170447747563' THEN ((rt0.c2)||(rt0.c2)) END  NULLS FIRST, ((rt0.c1) BETWEEN (0xb0e40d9) AND (((rt0.c1) NOT NULL)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY CASE COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c0)  WHEN '0.4050170447747563' THEN ((rt0.c2)||(rt0.c2)) END  NULLS FIRST, ((rt0.c1) BETWEEN (185483481) AND (((rt0.c1) NOT NULL)))  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c4 AS TEXT)  WHEN ((rt0.c2)==('-97227058')) THEN ((rt0.c0) IS FALSE) WHEN CAST(rt0.c2 AS NUMERIC) THEN CASE WHEN x'a982f08c' THEN rt0.c4 ELSE rt0.c1 END WHEN (- (rt0.c4)) THEN rt0.c2 ELSE rt0.c2 COLLATE BINARY END) ORDER BY CASE COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c0)  WHEN '0.4050170447747563' THEN ((rt0.c2)||(rt0.c2)) END  NULLS FIRST, ((rt0.c1) BETWEEN (185483481) AND (((rt0.c1) NOT NULL)))  NULLS FIRST;
SELECT MIN(rt0.c4) FROM rt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), -2.127062399E9)));
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE ((NOT (((rt0.c0)GLOB(rt0.c3))))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))||((((rt0.c0, rt0.c1)) BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c2, rt0.c3))))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))||((((rt0.c0, rt0.c1)) BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c2, rt0.c3))))))AND(0.7449621735062145))) LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((('', rt0.c2)) BETWEEN ((CAST(rt0.c1 AS NUMERIC), CAST(rt0.c2 AS BLOB))) AND ((NULL, ((rt0.c2)>>(rt0.c2)))))) LIMIT 0X3;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))||((((rt0.c0, rt0.c1)) BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c2, rt0.c3))))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))||((((rt0.c0, rt0.c1)) BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c2, rt0.c3))))))AND(0.7449621735062145))) LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((('', rt0.c2)) BETWEEN ((CAST(rt0.c1 AS NUMERIC), CAST(rt0.c2 AS BLOB))) AND ((NULL, ((rt0.c2)>>(rt0.c2)))))) LIMIT 0X3;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)IS(rt0.c1)))IS(CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)IS(rt0.c1)))IS(CAST(rt0.c2 AS TEXT)))) ORDER BY CASE ((rt0.c3)>=(rt0.c3))  WHEN CAST(rt0.c3 AS INTEGER) THEN '0.15727330867489464' WHEN ((rt0.c3)>>(rt0.c4)) THEN (+ (rt0.c2)) ELSE rt0.c4 COLLATE NOCASE END, rt0.c2 COLLATE RTRIM DESC  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS BLOB));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS BLOB)) LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE RTRIM IN ((~ (rt0.c1))))) LIMIT 1;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)AND(x'7b3f4c31')));
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)AND(x'7b3f4c31')))AND(((((rt0.c4 COLLATE NOCASE)OR(rt0.c0)))AND(rt0.c4))))) ORDER BY (- ((rt0.c1 IN (-1009062556))))  NULLS LAST INTERSECT SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (rt0.c4) ORDER BY (- ((rt0.c1 IN (0xffffffffc3daed64))))  NULLS LAST;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((+ ((NOT (rt0.c3))))) ORDER BY (~ (((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))) DESC, 0.43818142888528666 COLLATE RTRIM  NULLS FIRST;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((+ ((NOT (rt0.c3))))) ORDER BY ((rt0.c3) NOTNULL) DESC, ((((((((((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))AND(((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c3)))))OR(((rt0.c4)OR(rt0.c4)))))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0.4220587063327843 WHEN rt0.c1 THEN NULL ELSE rt0.c4 END)))OR(LIKELIHOOD(rt0.c0, rt0.c4))))AND(rt0.c1)))OR(((rt0.c4)/(rt0.c2)))))AND((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) AS BLOB)) ORDER BY ((((rt0.c3)|(rt0.c3))) BETWEEN (((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c2))) AND (0x41e06b4e)), ((((((rt0.c4)OR(((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))))OR(((0.2807224358589516) NOTNULL))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) AS BLOB)) ORDER BY ((((rt0.c3)|(rt0.c3))) BETWEEN (((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c2))) AND (0X41e06b4e)), ((((((rt0.c4)OR(((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))))OR(((0.2807224358589516) NOTNULL))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((x'1b')>=(((rt0.c0)%(rt0.c0))))) ORDER BY ((((rt0.c3)|(rt0.c3))) BETWEEN (((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c2))) AND (0X41e06b4e)), ((((((rt0.c4)OR(((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))))OR(((0.2807224358589516) NOTNULL))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) AS BLOB)) ORDER BY ((((rt0.c3)|(rt0.c3))) BETWEEN (((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c2))) AND (0x41e06b4e)), ((((((rt0.c4)OR(((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))))OR(((0.2807224358589516) NOTNULL))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) AS BLOB)) ORDER BY ((((rt0.c3)|(rt0.c3))) BETWEEN (((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c2))) AND (0X41e06b4e)), ((((((rt0.c4)OR(((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))))OR(((0.2807224358589516) NOTNULL))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((x'1b')>=(((rt0.c0)%(rt0.c0))))) ORDER BY ((((rt0.c3)|(rt0.c3))) BETWEEN (((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c2))) AND (0X41e06b4e)), ((((((rt0.c4)OR(((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))))OR(((0.2807224358589516) NOTNULL))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST LIMIT 0x1;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) ISNULL)) ORDER BY ((((rt0.c4) ISNULL))<=((((rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c4)) AND ((rt0.c0, rt0.c1)))))  NULLS FIRST, ((rt0.c4)=('-')) COLLATE RTRIM  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) ISNULL))AND(CAST((rt0.c3 IN ()) AS NUMERIC)))) ORDER BY CASE x''  WHEN (+ (rt0.c3)) THEN ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c0)) WHEN ((rt0.c4)>=(rt0.c3)) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c2 END END  NULLS LAST, (('')<>(rt0.c4)) COLLATE BINARY LIMIT 0;
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END)AND(((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END))) ORDER BY (+ (((rt0.c3)IS NOT(rt0.c3)))) DESC, ((rt0.c2) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c4 END) AND (rt0.c0 COLLATE RTRIM));
SELECT * FROM rt0 WHERE (((((((CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END)AND(((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END)))AND((((~ (rt0.c2))) IS FALSE)))) ORDER BY (+ (((rt0.c3)IS NOT(rt0.c3)))) DESC, ((rt0.c2) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c4 END) AND (rt0.c0 COLLATE RTRIM)) INTERSECT SELECT * FROM rt0 WHERE (0.8433034118518932) ORDER BY (+ (((rt0.c3)IS NOT(rt0.c3)))) DESC, ((rt0.c2) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c4 END) AND (rt0.c0 COLLATE RTRIM));
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END)AND(((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END))) ORDER BY (+ (((rt0.c3)IS NOT(rt0.c3)))) DESC, ((rt0.c2) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c4 END) AND (rt0.c0 COLLATE RTRIM));
SELECT * FROM rt0 WHERE (((((((CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END)AND(((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END)))AND((((~ (rt0.c2))) IS FALSE)))) ORDER BY (+ (((rt0.c3)IS NOT(rt0.c3)))) DESC, ((rt0.c2) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c4 END) AND (rt0.c0 COLLATE RTRIM)) INTERSECT SELECT * FROM rt0 WHERE (0.8433034118518932) ORDER BY (+ (((rt0.c3)IS NOT(rt0.c3)))) DESC, ((rt0.c2) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c4 END) AND (rt0.c0 COLLATE RTRIM));
SELECT MAX(rt0.c4) FROM rt0 WHERE (((((rt0.c4) ISNULL)) NOTNULL));
SELECT MAX(rt0.c4) FROM rt0 WHERE (((((rt0.c4) ISNULL)) NOTNULL)) ORDER BY ((((NULL)LIKE(rt0.c0))) BETWEEN ((rt0.c1 IN ())) AND ((0.4220587063327843 IN (rt0.c3)))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((rt0.c4) NOT BETWEEN ((((rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c1)))) AND ((('')|(rt0.c3))))) ORDER BY ('-889791948' IN (rt0.c2)) COLLATE BINARY ASC, (- ((rt0.c1 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c4) NOT BETWEEN ((((rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c1)))) AND ((('')|(rt0.c3))))) ORDER BY ('-889791948' IN (rt0.c2)) COLLATE BINARY ASC, (- ((rt0.c1 IN ())))  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE ((((((rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c0)) AND ((NULL, rt0.c2))))+(NULLIF(rt0.c4, '0.3916842090229713')))) ORDER BY ('-889791948' IN (rt0.c2)) COLLATE BINARY ASC, (- ((rt0.c1 IN ())))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((rt0.c4) NOT BETWEEN ((((rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c1)))) AND ((('')|(rt0.c3))))) ORDER BY ('-889791948' IN (rt0.c2)) COLLATE BINARY ASC, (- ((rt0.c1 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1) NOTNULL), CASE NULL  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN x'5fb6' END))>=(('-1142264660', NULL))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((rt0.c1) NOTNULL), CASE NULL  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN x'5fb6' END))>=(('-1142264660', NULL)))) LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1) IS TRUE)))) LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE ((('EN')AND((('0.19429088971119657')==(rt0.c0))))) ORDER BY CASE ((((rt0.c2)OR(rt0.c2)))AND(-1613767467))  WHEN (((rt0.c0, 0x6e5aa1c1))>((rt0.c3, rt0.c2))) THEN (~ (rt0.c1)) WHEN rt0.c3 THEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE NULL END WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c3)LIKE(rt0.c4)) ELSE x'fb' END DESC;
SELECT ALL * FROM rt0 WHERE ((((('EN')AND((('0.19429088971119657')==(rt0.c0)))))AND((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)), rt0.c2))>=((((1120388605) NOT BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c1 COLLATE RTRIM)))))) ORDER BY CASE ((((rt0.c2)OR(rt0.c2)))AND(-1613767467))  WHEN (((rt0.c0, 0x6e5aa1c1))>((rt0.c3, rt0.c2))) THEN (~ (rt0.c1)) WHEN rt0.c3 THEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE NULL END WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c3)LIKE(rt0.c4)) ELSE x'fb' END DESC LIMIT 0x0 INTERSECT SELECT * FROM rt0 WHERE (CASE WHEN TYPEOF(rt0.c2) THEN (~ (rt0.c2)) WHEN x'' THEN rt0.c2 COLLATE NOCASE WHEN (('0.28670527050263017') NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN (rt0.c4 IN ()) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c4)-(NULL)) ELSE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END END) ORDER BY CASE ((((rt0.c2)OR(rt0.c2)))AND(0xffffffff9fcfdcd5))  WHEN (((rt0.c0, 0x6e5aa1c1))>((rt0.c3, rt0.c2))) THEN (~ (rt0.c1)) WHEN rt0.c3 THEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE NULL END WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c3)LIKE(rt0.c4)) ELSE x'fb' END DESC LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE ((('EN')AND((('0.19429088971119657')==(rt0.c0))))) ORDER BY CASE ((((rt0.c2)OR(rt0.c2)))AND(-1613767467))  WHEN (((rt0.c0, 0x6e5aa1c1))>((rt0.c3, rt0.c2))) THEN (~ (rt0.c1)) WHEN rt0.c3 THEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE NULL END WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c3)LIKE(rt0.c4)) ELSE x'fb' END DESC;
SELECT ALL * FROM rt0 WHERE ((((('EN')AND((('0.19429088971119657')==(rt0.c0)))))AND((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)), rt0.c2))>=((((1120388605) NOT BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c1 COLLATE RTRIM)))))) ORDER BY CASE ((((rt0.c2)OR(rt0.c2)))AND(-1613767467))  WHEN (((rt0.c0, 0x6e5aa1c1))>((rt0.c3, rt0.c2))) THEN (~ (rt0.c1)) WHEN rt0.c3 THEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE NULL END WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c3)LIKE(rt0.c4)) ELSE x'fb' END DESC LIMIT 0x0 INTERSECT SELECT * FROM rt0 WHERE (CASE WHEN TYPEOF(rt0.c2) THEN (~ (rt0.c2)) WHEN x'' THEN rt0.c2 COLLATE NOCASE WHEN (('0.28670527050263017') NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN (rt0.c4 IN ()) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c4)-(NULL)) ELSE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END END) ORDER BY CASE ((((rt0.c2)OR(rt0.c2)))AND(0xffffffff9fcfdcd5))  WHEN (((rt0.c0, 0x6e5aa1c1))>((rt0.c3, rt0.c2))) THEN (~ (rt0.c1)) WHEN rt0.c3 THEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE NULL END WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c3)LIKE(rt0.c4)) ELSE x'fb' END DESC LIMIT 0x0;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE ((((((((((rt0.c4)AND(NULL)))AND(1523104592)))AND(rt0.c2))))>((CAST(rt0.c2 AS REAL))))) ORDER BY CASE WHEN ((rt0.c0)LIKE(rt0.c3)) THEN (rt0.c2 IN ()) ELSE rt0.c0 END DESC, '⽋-པ\'  NULLS LAST;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE ((((((((((rt0.c4)AND(NULL)))AND(1523104592)))AND(rt0.c2))))>((CAST(rt0.c2 AS REAL))))) ORDER BY CASE WHEN ((rt0.c0)LIKE(rt0.c3)) THEN (rt0.c2 IN ()) ELSE rt0.c0 END DESC, '⽋-པ\'  NULLS LAST LIMIT 3;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)-(rt0.c4))))<=((CASE rt0.c2  WHEN rt0.c1 THEN '-311443055' WHEN rt0.c4 THEN 0.470667230911766 WHEN rt0.c2 THEN rt0.c2 END))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)-(rt0.c4))))=((CASE rt0.c2  WHEN rt0.c1 THEN '-311443055' WHEN rt0.c4 THEN 0.470667230911766 WHEN rt0.c2 THEN rt0.c2 END)))) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((((0.8246898401545959)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)) THEN (~ (rt0.c4)) WHEN ((rt0.c2)/(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 END WHEN CASE WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN 0.6254667426828806 ELSE rt0.c4 END THEN ((rt0.c1)IS NOT(rt0.c4)) WHEN ((rt0.c1)<=(rt0.c1)) THEN 0X709b101c WHEN (((rt0.c0, rt0.c2))>((rt0.c4, rt0.c1))) THEN rt0.c1 ELSE (((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c3, rt0.c3, rt0.c4)) AND ((rt0.c4, rt0.c0, rt0.c2))) END) LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)-(rt0.c4))))<=((CASE rt0.c2  WHEN rt0.c1 THEN '-311443055' WHEN rt0.c4 THEN 0.470667230911766 WHEN rt0.c2 THEN rt0.c2 END))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)-(rt0.c4))))=((CASE rt0.c2  WHEN rt0.c1 THEN '-311443055' WHEN rt0.c4 THEN 0.470667230911766 WHEN rt0.c2 THEN rt0.c2 END)))) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((((0.8246898401545959)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)) THEN (~ (rt0.c4)) WHEN ((rt0.c2)/(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 END WHEN CASE WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN 0.6254667426828806 ELSE rt0.c4 END THEN ((rt0.c1)IS NOT(rt0.c4)) WHEN ((rt0.c1)<=(rt0.c1)) THEN 0X709b101c WHEN (((rt0.c0, rt0.c2))>((rt0.c4, rt0.c1))) THEN rt0.c1 ELSE (((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c3, rt0.c3, rt0.c4)) AND ((rt0.c4, rt0.c0, rt0.c2))) END) LIMIT 0;
SELECT MAX(rt0.c4) FROM rt0 WHERE (((+ (rt0.c0)) IN (IFNULL(rt0.c4, rt0.c4))));
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((((+ (rt0.c0)) IN (IFNULL(rt0.c4, rt0.c4))))AND(((((((CASE WHEN rt0.c3 THEN rt0.c2 END)AND(CAST(rt0.c0 AS INTEGER))))AND(((((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)))))AND(((((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0))))))) LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3))))=((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN 0.43747942256831407 THEN 1.523104592E9 END))));
SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3))))==((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN 0.43747942256831407 THEN 1.523104592E9 END)))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)) THEN 0x635b7a9 END);
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3))))=((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN 0.43747942256831407 THEN 1.523104592E9 END))));
SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3))))==((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN 0.43747942256831407 THEN 1.523104592E9 END)))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)) THEN 0x635b7a9 END);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY (((x'' IN ()))<(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)), SQLITE_SOURCE_ID() DESC  NULLS LAST, ((((rt0.c3) IS FALSE)) NOTNULL);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c4)AND((rt0.c3 IN (rt0.c4, rt0.c0)) COLLATE RTRIM))) ORDER BY '&'  NULLS FIRST, 0.24557630029917255  NULLS FIRST, ((((((((((((rt0.c3 COLLATE NOCASE)OR(x'' COLLATE NOCASE)))OR(rt0.c2)))OR(CAST(rt0.c4 AS BLOB))))OR(((x'')=(rt0.c1)))))OR(((rt0.c4)>(rt0.c4)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c4)))) ASC  NULLS LAST LIMIT 0;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4)+(rt0.c1)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))=((((rt0.c3) ISNULL), (((x'20')) BETWEEN ((rt0.c0)) AND ((rt0.c3))))))) ORDER BY (~ (rt0.c1)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c4)+(rt0.c1)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))=((((rt0.c3) ISNULL), (((x'20')) BETWEEN ((rt0.c0)) AND ((rt0.c3)))))))AND(SQLITE_COMPILEOPTION_GET(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))))) ORDER BY ((rt0.c4) NOT BETWEEN (((NULL)<=(rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC))) DESC LIMIT 0 INTERSECT SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c4) NOT BETWEEN (((NULL)<=(rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC))) DESC LIMIT 0x0;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (TRIM(DISTINCT rt0.c4, ((rt0.c1)|(rt0.c3)))) ORDER BY ((((rt0.c2)OR(rt0.c3)))AND(NULL)) COLLATE RTRIM ASC, CASE (+ (0.6459897302501995))  WHEN HEX(DISTINCT rt0.c2) THEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 END ELSE IFNULL(DISTINCT rt0.c4, rt0.c3) END  NULLS LAST;
SELECT MIN(rt0.c1) FROM rt0 WHERE (TRIM(DISTINCT rt0.c4, ((rt0.c1)|(rt0.c3)))) ORDER BY (- (CAST(rt0.c3 AS NUMERIC))) INTERSECT SELECT MIN(rt0.c1) FROM rt0 WHERE ((+ ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((x'8c')))))) ORDER BY (- (CAST(rt0.c3 AS NUMERIC)));
SELECT MIN(rt0.c0) FROM rt0 WHERE (((((((((((rt0.c0) BETWEEN (x'6d') AND (')')))OR(((rt0.c3) BETWEEN (0x7b694b1d) AND (rt0.c1)))))AND((- (rt0.c4)))))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c2)<(rt0.c1))))) ORDER BY (NOT (rt0.c3)) COLLATE NOCASE DESC, TIME(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)), ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(NULL)), rt0.c1)  NULLS LAST;
SELECT MIN(rt0.c0) FROM rt0 WHERE (((((((((((((rt0.c0) BETWEEN (x'6d') AND (')')))OR(((rt0.c3) BETWEEN (2070498077) AND (rt0.c1)))))AND((- (rt0.c4)))))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c2)<(rt0.c1)))))AND(((rt0.c2)IS(rt0.c0)) COLLATE BINARY))) ORDER BY (~ (((rt0.c4)AND(rt0.c3)))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((ABS(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY rt0.c2 DESC, IFNULL(rt0.c0, rt0.c2 COLLATE NOCASE);
SELECT * FROM rt0 WHERE (((((ABS(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((((rt0.c2)AND(NULL)))AND(0.039142907770781776))) IS FALSE)))) ORDER BY rt0.c2 DESC, IFNULL(rt0.c0, rt0.c2 COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((ABS(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY rt0.c2 DESC, IFNULL(rt0.c0, rt0.c2 COLLATE NOCASE);
SELECT * FROM rt0 WHERE (((((ABS(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((((rt0.c2)AND(NULL)))AND(0.039142907770781776))) IS FALSE)))) ORDER BY rt0.c2 DESC, IFNULL(rt0.c0, rt0.c2 COLLATE NOCASE);
SELECT * FROM rt0 WHERE (CASE ((rt0.c3) NOT NULL)  WHEN (- (rt0.c4)) THEN NULLIF(rt0.c3, rt0.c1) WHEN (('-1473654907') NOT BETWEEN (rt0.c1) AND (rt0.c4)) THEN (NOT (rt0.c1)) WHEN rt0.c2 THEN ((rt0.c4)>=(rt0.c3)) WHEN (((rt0.c0))<((rt0.c3))) THEN x'' END) ORDER BY (~ ((rt0.c1 IN (rt0.c4, NULL, 'OUQQkXnG-')))) ASC, (((CASE WHEN rt0.c3 THEN rt0.c0 END))>=((x'fc')))  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE ((rt0.c3) NOT NULL)  WHEN (- (rt0.c4)) THEN NULLIF(rt0.c3, rt0.c1) WHEN (('-1473654907') NOT BETWEEN (rt0.c1) AND (rt0.c4)) THEN (NOT (rt0.c1)) WHEN rt0.c2 THEN ((rt0.c4)>=(rt0.c3)) WHEN (((rt0.c0))<((rt0.c3))) THEN x'' END) ORDER BY (~ ((rt0.c1 IN (rt0.c4, NULL, 'OUQQkXnG-')))) ASC, (((CASE WHEN rt0.c3 THEN rt0.c0 END))>=((x'fc')))  NULLS FIRST LIMIT 4;
SELECT * FROM rt0 WHERE (CASE ((rt0.c3) NOT NULL)  WHEN (- (rt0.c4)) THEN NULLIF(rt0.c3, rt0.c1) WHEN (('-1473654907') NOT BETWEEN (rt0.c1) AND (rt0.c4)) THEN (NOT (rt0.c1)) WHEN rt0.c2 THEN ((rt0.c4)>=(rt0.c3)) WHEN (((rt0.c0))<((rt0.c3))) THEN x'' END) ORDER BY (~ ((rt0.c1 IN (rt0.c4, NULL, 'OUQQkXnG-')))) ASC, (((CASE WHEN rt0.c3 THEN rt0.c0 END))>=((x'fc')))  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE ((rt0.c3) NOT NULL)  WHEN (- (rt0.c4)) THEN NULLIF(rt0.c3, rt0.c1) WHEN (('-1473654907') NOT BETWEEN (rt0.c1) AND (rt0.c4)) THEN (NOT (rt0.c1)) WHEN rt0.c2 THEN ((rt0.c4)>=(rt0.c3)) WHEN (((rt0.c0))<((rt0.c3))) THEN x'' END) ORDER BY (~ ((rt0.c1 IN (rt0.c4, NULL, 'OUQQkXnG-')))) ASC, (((CASE WHEN rt0.c3 THEN rt0.c0 END))>=((x'fc')))  NULLS FIRST LIMIT 4;
SELECT * FROM rt0 WHERE (LENGTH(((rt0.c2) ISNULL)));
SELECT ALL * FROM rt0 WHERE (LENGTH(((rt0.c2) ISNULL))) ORDER BY CAST(((rt0.c4)*(rt0.c1)) AS NUMERIC) LIMIT 0X3;
SELECT * FROM rt0 WHERE (LENGTH(((rt0.c2) ISNULL)));
SELECT ALL * FROM rt0 WHERE (LENGTH(((rt0.c2) ISNULL))) ORDER BY CAST(((rt0.c4)*(rt0.c1)) AS NUMERIC) LIMIT 0X3;
SELECT * FROM rt0 WHERE (0.8085821660464655) ORDER BY ((rt0.c1 COLLATE BINARY)%(((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (((0.8085821660464655)AND(((rt0.c2)|(rt0.c0)) COLLATE BINARY))) ORDER BY (+ (((rt0.c0)GLOB(rt0.c3))))  NULLS FIRST, (((rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, ((rt0.c2) IS TRUE))) AND (((rt0.c4 IN (rt0.c0)), 0.7504932540703068))) LIMIT 0X1;
SELECT * FROM rt0 WHERE (0.8085821660464655) ORDER BY ((rt0.c1 COLLATE BINARY)%(((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (((0.8085821660464655)AND(((rt0.c2)|(rt0.c0)) COLLATE BINARY))) ORDER BY (+ (((rt0.c0)GLOB(rt0.c3))))  NULLS FIRST, (((rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, ((rt0.c2) IS TRUE))) AND (((rt0.c4 IN (rt0.c0)), 0.7504932540703068))) LIMIT 0X1;
SELECT MAX(rt0.c3) FROM rt0 WHERE (((((((rt0.c3))>((rt0.c3))), ((rt0.c3) IS TRUE), rt0.c3, (- (rt0.c0))))=(((rt0.c2 IN ()), ((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)), ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)), rt0.c0 COLLATE NOCASE))));
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((((((rt0.c3))>((rt0.c3))), ((rt0.c3) IS TRUE), rt0.c3, (- (rt0.c0))))=(((rt0.c2 IN ()), ((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)), ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)), rt0.c0 COLLATE NOCASE))))AND(-1369374169))) ORDER BY ((CAST(rt0.c2 AS TEXT))IS(CASE rt0.c0  WHEN '88544582' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END))  NULLS FIRST, json_patch((+ (rt0.c3)), rt0.c3 COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 WHERE (x'') LIMIT 4 INTERSECT SELECT COUNT(*) FROM rt0 WHERE (NULL COLLATE NOCASE) LIMIT 0X4;
SELECT ALL * FROM rt0 WHERE (CASE (('2040923094')OR(rt0.c2))  WHEN (rt0.c3 IN (rt0.c2)) THEN 0Xffffffffff8cdddf WHEN (0.5721072148539248 IN ()) THEN '-1150268632' COLLATE NOCASE END) ORDER BY CAST(((rt0.c0)>(rt0.c4)) AS TEXT) DESC, (+ (CAST(rt0.c3 AS REAL))) DESC  NULLS LAST, (((+ (rt0.c4)))%(TRIM(rt0.c3)));
SELECT DISTINCT * FROM rt0 WHERE (((CASE (('2040923094')OR(rt0.c2))  WHEN (rt0.c3 IN (rt0.c2)) THEN -7545377 WHEN (0.5721072148539248 IN ()) THEN '-1150268632' COLLATE NOCASE END)AND(((json_type(NULL))IS(((rt0.c4) NOTNULL)))))) ORDER BY CAST(((rt0.c0)>(rt0.c4)) AS TEXT) DESC, (+ (CAST(rt0.c3 AS REAL))) DESC  NULLS LAST, (((+ (rt0.c4)))%(TRIM(rt0.c3)));
SELECT ALL * FROM rt0 WHERE (CASE (('2040923094')OR(rt0.c2))  WHEN (rt0.c3 IN (rt0.c2)) THEN 0Xffffffffff8cdddf WHEN (0.5721072148539248 IN ()) THEN '-1150268632' COLLATE NOCASE END) ORDER BY CAST(((rt0.c0)>(rt0.c4)) AS TEXT) DESC, (+ (CAST(rt0.c3 AS REAL))) DESC  NULLS LAST, (((+ (rt0.c4)))%(TRIM(rt0.c3)));
SELECT DISTINCT * FROM rt0 WHERE (((CASE (('2040923094')OR(rt0.c2))  WHEN (rt0.c3 IN (rt0.c2)) THEN -7545377 WHEN (0.5721072148539248 IN ()) THEN '-1150268632' COLLATE NOCASE END)AND(((json_type(NULL))IS(((rt0.c4) NOTNULL)))))) ORDER BY CAST(((rt0.c0)>(rt0.c4)) AS TEXT) DESC, (+ (CAST(rt0.c3 AS REAL))) DESC  NULLS LAST, (((+ (rt0.c4)))%(TRIM(rt0.c3)));
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((x'45') IS TRUE));
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((x'45') IS TRUE))AND(x'' COLLATE BINARY))) ORDER BY ((((1205822974)AND((((rt0.c3, NULL, rt0.c1, rt0.c3))=((rt0.c1, rt0.c1, rt0.c3, rt0.c0))))))AND(((rt0.c4)OR(rt0.c2)))) ASC  NULLS LAST, (((NOT (rt0.c0))) IS TRUE), ((((((((rt0.c3)OR(0.45173605367941505)))AND(rt0.c2)))AND(rt0.c3)))OR(LENGTH(rt0.c2)))  NULLS LAST INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (0.7272521676014136) ORDER BY ((((1205822974)AND((((rt0.c3, NULL, rt0.c1, rt0.c3))=((rt0.c1, rt0.c1, rt0.c3, rt0.c0))))))AND(((rt0.c4)OR(rt0.c2)))) ASC  NULLS LAST, (((NOT (rt0.c0))) IS TRUE), ((((((((rt0.c3)OR(0.45173605367941505)))AND(rt0.c2)))AND(rt0.c3)))OR(LENGTH(rt0.c2)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY ((rt0.c2)>>(((rt0.c3) IS TRUE)))  NULLS FIRST, ((json_array(rt0.c0, x'62', rt0.c1)) NOTNULL);
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ()) COLLATE NOCASE)AND(((((((((x'')AND(rt0.c1)))OR(rt0.c0)))AND(0x73bd307e))) BETWEEN ((+ (rt0.c1))) AND ((((rt0.c0, rt0.c2, rt0.c3)) BETWEEN ((rt0.c4, rt0.c2, rt0.c3)) AND ((rt0.c3, x'', rt0.c2)))))))) ORDER BY ((rt0.c2)>>(((rt0.c3) IS TRUE)))  NULLS FIRST, ((json_array(rt0.c0, x'62', rt0.c1)) NOTNULL);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY ((rt0.c2)>>(((rt0.c3) IS TRUE)))  NULLS FIRST, ((json_array(rt0.c0, x'62', rt0.c1)) NOTNULL);
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ()) COLLATE NOCASE)AND(((((((((x'')AND(rt0.c1)))OR(rt0.c0)))AND(0x73bd307e))) BETWEEN ((+ (rt0.c1))) AND ((((rt0.c0, rt0.c2, rt0.c3)) BETWEEN ((rt0.c4, rt0.c2, rt0.c3)) AND ((rt0.c3, x'', rt0.c2)))))))) ORDER BY ((rt0.c2)>>(((rt0.c3) IS TRUE)))  NULLS FIRST, ((json_array(rt0.c0, x'62', rt0.c1)) NOTNULL);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 COLLATE NOCASE, ((rt0.c1)-(rt0.c0))))>((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c4)), (((rt0.c3, rt0.c3, rt0.c1))<=((rt0.c3, rt0.c4, rt0.c1))))))) ORDER BY ((CAST(rt0.c0 AS REAL))||(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE 1233668173 END)) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 COLLATE NOCASE, ((rt0.c1)-(rt0.c0))))>((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c4)), (((rt0.c3, rt0.c3, rt0.c1))<((rt0.c3, rt0.c4, rt0.c1))))))) ORDER BY ((('-536404611') NOT NULL) IN ((NOT (rt0.c4)), ((rt0.c4)*(rt0.c0)))), (~ (CASE WHEN x'1d' THEN rt0.c3 END)) DESC  NULLS LAST LIMIT 4 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY ((('-536404611') NOT NULL) IN ((NOT (rt0.c4)), ((rt0.c4)*(rt0.c0)))), (~ (CASE WHEN x'1d' THEN rt0.c3 END)) DESC  NULLS LAST LIMIT 4;
SELECT MIN(rt0.c3) FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT MIN(rt0.c3) FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY rt0.c1 ASC  NULLS LAST LIMIT 2;
SELECT * FROM rt0 WHERE ((CAST(rt0.c3 AS INTEGER) IN (((' ꊅ')/(rt0.c2))))) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN '*' THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c2)<<(rt0.c4))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END)) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((CAST(rt0.c3 AS INTEGER) IN (((' ꊅ')/(rt0.c2))))) ORDER BY NULL DESC LIMIT 0 INTERSECT SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((- (rt0.c0))) BETWEEN ((NOT (rt0.c3))) AND (CASE x''  WHEN rt0.c0 THEN rt0.c0 WHEN 1435748113 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END))) ORDER BY NULL DESC LIMIT 0;
SELECT * FROM rt0 WHERE ((CAST(rt0.c3 AS INTEGER) IN (((' ꊅ')/(rt0.c2))))) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN '*' THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c2)<<(rt0.c4))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END)) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((CAST(rt0.c3 AS INTEGER) IN (((' ꊅ')/(rt0.c2))))) ORDER BY NULL DESC LIMIT 0 INTERSECT SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((- (rt0.c0))) BETWEEN ((NOT (rt0.c3))) AND (CASE x''  WHEN rt0.c0 THEN rt0.c0 WHEN 1435748113 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END))) ORDER BY NULL DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))) ORDER BY ((((((((rt0.c2)OR(rt0.c3)))OR((((rt0.c3, rt0.c0)) BETWEEN ((rt0.c3, rt0.c4)) AND ((rt0.c0, 0.9895885614807849))))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(UPPER(rt0.c2))) ASC  NULLS FIRST, CASE ((rt0.c3)IS NOT(rt0.c4))  WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN ((rt0.c1)IS(rt0.c3)) THEN (- (rt0.c4)) ELSE (rt0.c2 IN ()) END ASC  NULLS FIRST, ((((rt0.c1) IS TRUE))>>((+ (NULL))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))) ORDER BY ((((rt0.c1)GLOB(rt0.c3)))AND(((x'cfd2') BETWEEN (x'87') AND (rt0.c4)))) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))) ORDER BY ((((((((rt0.c2)OR(rt0.c3)))OR((((rt0.c3, rt0.c0)) BETWEEN ((rt0.c3, rt0.c4)) AND ((rt0.c0, 0.9895885614807849))))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(UPPER(rt0.c2))) ASC  NULLS FIRST, CASE ((rt0.c3)IS NOT(rt0.c4))  WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN ((rt0.c1)IS(rt0.c3)) THEN (- (rt0.c4)) ELSE (rt0.c2 IN ()) END ASC  NULLS FIRST, ((((rt0.c1) IS TRUE))>>((+ (NULL))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))) ORDER BY ((((rt0.c1)GLOB(rt0.c3)))AND(((x'cfd2') BETWEEN (x'87') AND (rt0.c4)))) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((NOT ((('-1663045504') BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY ((rt0.c3)||(rt0.c1)) COLLATE RTRIM DESC;
SELECT DISTINCT * FROM rt0 WHERE ((((NOT ((('-1663045504') BETWEEN (rt0.c1) AND (rt0.c4)))))AND(rt0.c4))) ORDER BY ((rt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS LAST, rt0.c1  NULLS LAST, ((((rt0.c0)+(0.11227802671376819))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND (CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((((((rt0.c0)OR(rt0.c4)))OR(x'')))AND(rt0.c3)))) ORDER BY ((rt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS LAST, rt0.c1  NULLS LAST, ((((rt0.c0)+(0.11227802671376819))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND (CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((NOT ((('-1663045504') BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY ((rt0.c3)||(rt0.c1)) COLLATE RTRIM DESC;
SELECT DISTINCT * FROM rt0 WHERE ((((NOT ((('-1663045504') BETWEEN (rt0.c1) AND (rt0.c4)))))AND(rt0.c4))) ORDER BY ((rt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS LAST, rt0.c1  NULLS LAST, ((((rt0.c0)+(0.11227802671376819))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND (CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((((((rt0.c0)OR(rt0.c4)))OR(x'')))AND(rt0.c3)))) ORDER BY ((rt0.c0) ISNULL) COLLATE NOCASE DESC  NULLS LAST, rt0.c1  NULLS LAST, ((((rt0.c0)+(0.11227802671376819))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND (CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST LIMIT 1;
SELECT MAX(rt0.c3) FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE BINARY);
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((rt0.c3) NOTNULL) COLLATE BINARY)AND(CAST(0.4502574053666675 AS TEXT)))) LIMIT 0X0;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE ((((((rt0.c2)/(rt0.c0)), ((rt0.c0)|(rt0.c0))))<=((((rt0.c0) NOT NULL), ((rt0.c0) BETWEEN (rt0.c1) AND ('-Vo!L!UjI'))))));
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE ((((((rt0.c2)/(rt0.c0)), ((rt0.c0)|(rt0.c0))))<=((((rt0.c0) NOT NULL), ((rt0.c0) BETWEEN (rt0.c1) AND ('-Vo!L!UjI')))))) ORDER BY (((rt0.c4 IN ()))GLOB((((rt0.c1))<=((rt0.c0))))) ASC, (+ ((((rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c3, x'b3', rt0.c3, rt0.c0, rt0.c1, '~	*')) AND ((rt0.c2, rt0.c4, rt0.c2, rt0.c2, 0.08089709825752933, rt0.c3)))))  NULLS FIRST, (RTRIM(rt0.c4) IN ()) ASC  NULLS LAST INTERSECT SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (CASE rt0.c2  WHEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c4)) THEN ((rt0.c3)>>(rt0.c1)) WHEN '0.2925014821708145' THEN (rt0.c2 IN (rt0.c0)) ELSE CAST(rt0.c3 AS REAL) END) ORDER BY (((rt0.c4 IN ()))GLOB((((rt0.c1))<=((rt0.c0))))) ASC, (+ ((((rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c3, x'b3', rt0.c3, rt0.c0, rt0.c1, '~	*')) AND ((rt0.c2, rt0.c4, rt0.c2, rt0.c2, 0.08089709825752933, rt0.c3)))))  NULLS FIRST, (RTRIM(rt0.c4) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((NULL) BETWEEN (rt0.c1) AND (rt0.c0)))OR(rt0.c2 COLLATE NOCASE)))AND(((rt0.c4) IS TRUE))))AND(CASE x''  WHEN rt0.c4 THEN rt0.c1 END)))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))AND((rt0.c3 IN (rt0.c4)))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((((((((((((NULL) BETWEEN (rt0.c1) AND (rt0.c0)))OR(rt0.c2 COLLATE NOCASE)))AND(((rt0.c4) IS TRUE))))AND(CASE x''  WHEN rt0.c4 THEN rt0.c1 END)))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))AND((rt0.c3 IN (rt0.c4)))))AND(((((rt0.c3)<(rt0.c0)))/(CAST(rt0.c3 AS INTEGER)))))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.14480232466435417 WHEN '' THEN 'o ' END AS BLOB) DESC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) IS TRUE);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (rt0.c1))) ORDER BY ((((rt0.c1)IS(rt0.c4)))LIKE((rt0.c0 IN (rt0.c3, rt0.c4)))) ASC, CASE WHEN TRIM(rt0.c2) THEN rt0.c2 END  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c3) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (rt0.c1)))AND((((NULL, rt0.c3, rt0.c4, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c2)<=(rt0.c3)), ((rt0.c3) NOTNULL), (~ (rt0.c2)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)), load_extension(rt0.c2, rt0.c1))) AND ((0.014507159656198976, rt0.c0, rt0.c3 COLLATE RTRIM, (- (NULL)), rt0.c0)))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END) NOT BETWEEN ((('-1631266411')<<(rt0.c1))) AND ((rt0.c2 IN ()))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c4) IS FALSE))>(((rt0.c2)-(rt0.c1))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END) NOT BETWEEN ((('-1631266411')<<(rt0.c1))) AND ((rt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (LOWER((- (rt0.c3)))) ORDER BY ((((rt0.c2)IS(rt0.c1)))<>(((x'0e8b6e') NOT BETWEEN (rt0.c4) AND (rt0.c0)))) DESC, ((UPPER(rt0.c4))<((NOT (rt0.c0)))) ASC;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((LOWER((- (rt0.c3))))AND((((''))<=((CAST(rt0.c3 AS INTEGER))))))) ORDER BY ((((rt0.c2)IS(rt0.c1)))!=(((x'0e8b6e') NOT BETWEEN (rt0.c4) AND (rt0.c0)))) DESC, ((UPPER(rt0.c4))<((NOT (rt0.c0)))) ASC LIMIT 0X0;
SELECT * FROM rt0 WHERE ((rt0.c1 IN (UNICODE(rt0.c1), rt0.c0)));
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN (UNICODE(rt0.c1), rt0.c0))) LIMIT 0x0 INTERSECT SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) IS FALSE)) LIMIT 0x0;
SELECT * FROM rt0 WHERE ((rt0.c1 IN (UNICODE(rt0.c1), rt0.c0)));
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN (UNICODE(rt0.c1), rt0.c0))) LIMIT 0x0 INTERSECT SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) IS FALSE)) LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3) ISNULL)))) ORDER BY CAST(((rt0.c3)LIKE(rt0.c2)) AS TEXT) ASC, 0.853533529516264 ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((+ (((rt0.c3) ISNULL))))AND(((CAST(rt0.c3 AS TEXT))<=(((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(0.46837955175086976)))AND(rt0.c2)))AND(rt0.c2))))))) ORDER BY CAST(((rt0.c3)LIKE(rt0.c2)) AS TEXT) ASC, 0.853533529516264 ASC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS BLOB)) ORDER BY CAST(((rt0.c3)LIKE(rt0.c2)) AS TEXT) ASC, 0.853533529516264 ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3) ISNULL)))) ORDER BY CAST(((rt0.c3)LIKE(rt0.c2)) AS TEXT) ASC, 0.853533529516264 ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((+ (((rt0.c3) ISNULL))))AND(((CAST(rt0.c3 AS TEXT))<=(((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(0.46837955175086976)))AND(rt0.c2)))AND(rt0.c2))))))) ORDER BY CAST(((rt0.c3)LIKE(rt0.c2)) AS TEXT) ASC, 0.853533529516264 ASC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS BLOB)) ORDER BY CAST(((rt0.c3)LIKE(rt0.c2)) AS TEXT) ASC, 0.853533529516264 ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (0.003558523333235697);
SELECT DISTINCT * FROM rt0 WHERE (0.003558523333235697) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c2);
SELECT * FROM rt0 WHERE (0.003558523333235697);
SELECT DISTINCT * FROM rt0 WHERE (0.003558523333235697) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)||(rt0.c4)) COLLATE RTRIM COLLATE RTRIM) ORDER BY NULLIF(DISTINCT (+ (rt0.c3)), LIKE(rt0.c3, rt0.c4, 'Ꞝ'))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)||(rt0.c4)) COLLATE RTRIM COLLATE RTRIM) ORDER BY NULLIF(DISTINCT (+ (rt0.c3)), LIKE(rt0.c3, rt0.c4, 'Ꞝ'))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN '-1284205761' THEN ((rt0.c2)>(rt0.c0)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END) ORDER BY NULLIF(DISTINCT (+ (rt0.c3)), LIKE(rt0.c3, rt0.c4, 'Ꞝ'))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)||(rt0.c4)) COLLATE RTRIM COLLATE RTRIM) ORDER BY NULLIF(DISTINCT (+ (rt0.c3)), LIKE(rt0.c3, rt0.c4, 'Ꞝ'))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)||(rt0.c4)) COLLATE RTRIM COLLATE RTRIM) ORDER BY NULLIF(DISTINCT (+ (rt0.c3)), LIKE(rt0.c3, rt0.c4, 'Ꞝ'))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN '-1284205761' THEN ((rt0.c2)>(rt0.c0)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END) ORDER BY NULLIF(DISTINCT (+ (rt0.c3)), LIKE(rt0.c3, rt0.c4, 'Ꞝ'))  NULLS FIRST;
SELECT MIN(rt0.c1) FROM rt0 WHERE ((~ (SQLITE_SOURCE_ID()))) ORDER BY rt0.c4 DESC  NULLS LAST;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((~ (SQLITE_SOURCE_ID()))) ORDER BY rt0.c4 DESC  NULLS LAST LIMIT 0X2;
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY LIKELY(DISTINCT rt0.c4)  NULLS LAST, '-1663045504' DESC, ((((0.8985136316026583)!=(rt0.c0)))<>((rt0.c3 IN ()))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC), (((']&{')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))), ((((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c3)))) AND ((rt0.c2, CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1))))), (NOT (((rt0.c1) ISNULL)))  NULLS FIRST LIMIT 0;
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (- (0.7879088353820247)) DESC, ((('n')) NOT BETWEEN (((((rt0.c4, rt0.c4, 0.5811681902200196, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1, rt0.c2)) AND ((0.015903577225286902, 'I<!', rt0.c2, rt0.c0))))) AND ((CASE WHEN rt0.c3 THEN rt0.c1 END))) DESC  NULLS FIRST, CASE WHEN ((rt0.c3)>=(rt0.c3)) THEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4)) WHEN LIKE(rt0.c0, rt0.c2) THEN (~ (rt0.c3)) END;
SELECT * FROM rt0 WHERE (((rt0.c3)AND((UNLIKELY(DISTINCT rt0.c4) IN ((- (rt0.c4))))))) ORDER BY rt0.c4 ASC LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))/((NOT (rt0.c0))))) ORDER BY rt0.c4 ASC LIMIT 0x0;
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (- (0.7879088353820247)) DESC, ((('n')) NOT BETWEEN (((((rt0.c4, rt0.c4, 0.5811681902200196, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1, rt0.c2)) AND ((0.015903577225286902, 'I<!', rt0.c2, rt0.c0))))) AND ((CASE WHEN rt0.c3 THEN rt0.c1 END))) DESC  NULLS FIRST, CASE WHEN ((rt0.c3)>=(rt0.c3)) THEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4)) WHEN LIKE(rt0.c0, rt0.c2) THEN (~ (rt0.c3)) END;
SELECT * FROM rt0 WHERE (((rt0.c3)AND((UNLIKELY(DISTINCT rt0.c4) IN ((- (rt0.c4))))))) ORDER BY rt0.c4 ASC LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))/((NOT (rt0.c0))))) ORDER BY rt0.c4 ASC LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)+(((rt0.c4)>>(rt0.c2))))) ORDER BY '-408692388' ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)+(((rt0.c4)>>(rt0.c2)))))AND(((((rt0.c2 COLLATE NOCASE)OR(((rt0.c2)|(rt0.c4)))))AND(rt0.c0))))) ORDER BY ((rt0.c4) IS TRUE)  NULLS LAST, (~ (rt0.c1 COLLATE RTRIM)) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)+(((rt0.c4)>>(rt0.c2))))) ORDER BY '-408692388' ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)+(((rt0.c4)>>(rt0.c2)))))AND(((((rt0.c2 COLLATE NOCASE)OR(((rt0.c2)|(rt0.c4)))))AND(rt0.c0))))) ORDER BY ((rt0.c4) IS TRUE)  NULLS LAST, (~ (rt0.c1 COLLATE RTRIM)) ASC;
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) ISNULL)) ORDER BY ABS(DISTINCT (~ (rt0.c0))), 'Z?'  NULLS FIRST, ((rt0.c4 IN (rt0.c0)) IN (rt0.c0 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY) ISNULL))AND((NOT (((rt0.c3)%(rt0.c0))))))) ORDER BY UNLIKELY(((((((rt0.c4)AND(rt0.c0)))AND(NULL)))OR(rt0.c2))) DESC  NULLS FIRST, 0.8800886998396956 DESC LIMIT 0X0;
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) ISNULL)) ORDER BY ABS(DISTINCT (~ (rt0.c0))), 'Z?'  NULLS FIRST, ((rt0.c4 IN (rt0.c0)) IN (rt0.c0 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY) ISNULL))AND((NOT (((rt0.c3)%(rt0.c0))))))) ORDER BY UNLIKELY(((((((rt0.c4)AND(rt0.c0)))AND(NULL)))OR(rt0.c2))) DESC  NULLS FIRST, 0.8800886998396956 DESC LIMIT 0X0;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((((rt0.c0, ((rt0.c0)-(rt0.c0))))<=((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END, ((rt0.c0)||(rt0.c1))))));
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE ((((((rt0.c0, ((rt0.c0)-(rt0.c0))))==((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END, ((rt0.c0)||(rt0.c1))))))AND((((((rt0.c0, rt0.c2, rt0.c2))>=((rt0.c2, rt0.c3, rt0.c0))))||(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))));
SELECT MIN(rt0.c1) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END COLLATE BINARY COLLATE RTRIM);
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END COLLATE BINARY COLLATE RTRIM) ORDER BY CAST(CASE x'625af8'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END AS INTEGER) ASC, (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4 COLLATE BINARY)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((((((((CAST(0X34cdb2b4 AS REAL))OR(((((((((rt0.c4)OR('5')))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c1) NOTNULL))))AND(rt0.c1 COLLATE RTRIM)))AND(json_array_length(rt0.c4))))AND(rt0.c4 COLLATE RTRIM))) ORDER BY CASE rt0.c1  WHEN LTRIM(rt0.c3) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END WHEN rt0.c0 COLLATE BINARY THEN UPPER(rt0.c0) WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE rt0.c3 END THEN 0.29880938576758675 END DESC;
SELECT ALL * FROM rt0 WHERE (((((((((((((((CAST(0X34cdb2b4 AS REAL))OR(((((((((rt0.c4)OR('5')))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c1) NOTNULL))))AND(rt0.c1 COLLATE RTRIM)))AND(json_array_length(rt0.c4))))AND(rt0.c4 COLLATE RTRIM)))AND(MIN(rt0.c3, CASE WHEN rt0.c0 THEN 0.7722966598870065 ELSE rt0.c2 END)))) ORDER BY CASE rt0.c1  WHEN LTRIM(rt0.c3) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END WHEN rt0.c0 COLLATE BINARY THEN UPPER(rt0.c0) WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE rt0.c3 END THEN 0.29880938576758675 END DESC LIMIT 1;
SELECT * FROM rt0 WHERE (((((((((((((CAST(0X34cdb2b4 AS REAL))OR(((((((((rt0.c4)OR('5')))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c1) NOTNULL))))AND(rt0.c1 COLLATE RTRIM)))AND(json_array_length(rt0.c4))))AND(rt0.c4 COLLATE RTRIM))) ORDER BY CASE rt0.c1  WHEN LTRIM(rt0.c3) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END WHEN rt0.c0 COLLATE BINARY THEN UPPER(rt0.c0) WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE rt0.c3 END THEN 0.29880938576758675 END DESC;
SELECT ALL * FROM rt0 WHERE (((((((((((((((CAST(0X34cdb2b4 AS REAL))OR(((((((((rt0.c4)OR('5')))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c1) NOTNULL))))AND(rt0.c1 COLLATE RTRIM)))AND(json_array_length(rt0.c4))))AND(rt0.c4 COLLATE RTRIM)))AND(MIN(rt0.c3, CASE WHEN rt0.c0 THEN 0.7722966598870065 ELSE rt0.c2 END)))) ORDER BY CASE rt0.c1  WHEN LTRIM(rt0.c3) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END WHEN rt0.c0 COLLATE BINARY THEN UPPER(rt0.c0) WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE rt0.c3 END THEN 0.29880938576758675 END DESC LIMIT 1;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END) NOT BETWEEN (((rt0.c4)&(rt0.c3))) AND (NULL)));
SELECT MIN(rt0.c2) FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END) NOT BETWEEN (((rt0.c4)&(rt0.c3))) AND (NULL))) ORDER BY (~ (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) ASC INTERSECT SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (CASE (NOT (rt0.c1))  WHEN ((rt0.c2)|(rt0.c2)) THEN (((rt0.c2))<=((rt0.c0))) WHEN rt0.c4 THEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 WHEN x'' THEN rt0.c4 ELSE rt0.c3 END WHEN 0.7858731606871999 THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c4)) WHEN CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN '' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN ((((((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c4)))OR(0.40722250230572066)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)) END) ORDER BY (~ (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c4)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c4)) COLLATE RTRIM)AND(((((rt0.c3) BETWEEN (rt0.c0) AND ('_')))*(rt0.c2 COLLATE NOCASE))))) INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (((((PRINTF(rt0.c0))OR(CAST(rt0.c0 AS BLOB))))OR(((rt0.c0)&(rt0.c2)))));
SELECT MIN(rt0.c0) FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c2) BETWEEN (rt0.c4) AND (x'cf')), (rt0.c4 IN ())));
SELECT MIN(rt0.c0) FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c2) BETWEEN (rt0.c4) AND (x'cf')), (rt0.c4 IN ()))) ORDER BY (~ (((rt0.c4)>(rt0.c0)))) DESC  NULLS LAST, (((((rt0.c0)LIKE(rt0.c4))))<>((((rt0.c1)AND('*')))))  NULLS FIRST;
SELECT * FROM rt0 NOT INDEXED WHERE (TYPEOF(rt0.c3 COLLATE NOCASE));
SELECT ALL * FROM rt0 WHERE (TYPEOF(rt0.c3 COLLATE NOCASE)) ORDER BY (((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)) IN (rt0.c1)) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL * FROM rt0 WHERE ((((((((((~ (rt0.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))AND(CASE rt0.c0  WHEN NULL THEN rt0.c1 WHEN 0.3435694652901301 THEN rt0.c2 END)))OR(rt0.c1 COLLATE NOCASE)))OR(rt0.c1))) ORDER BY (((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)) IN (rt0.c1)) DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt0 NOT INDEXED WHERE (TYPEOF(rt0.c3 COLLATE NOCASE));
SELECT ALL * FROM rt0 WHERE (TYPEOF(rt0.c3 COLLATE NOCASE)) ORDER BY (((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)) IN (rt0.c1)) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL * FROM rt0 WHERE ((((((((((~ (rt0.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))AND(CASE rt0.c0  WHEN NULL THEN rt0.c1 WHEN 0.3435694652901301 THEN rt0.c2 END)))OR(rt0.c1 COLLATE NOCASE)))OR(rt0.c1))) ORDER BY (((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)) IN (rt0.c1)) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (rt0.c1) ORDER BY (('-1909189608')IS NOT(rt0.c1)) COLLATE NOCASE, CAST((((rt0.c3, rt0.c1, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, x'35', NULL, rt0.c4))) AS BLOB) ASC;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((rt0.c1)AND((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN (rt0.c3 COLLATE RTRIM))))) ORDER BY (('-1909189608')IS NOT(rt0.c1)) COLLATE NOCASE, CAST((((rt0.c3, rt0.c1, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, x'35', NULL, rt0.c4))) AS BLOB) ASC;
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT rt0.c0))) AND ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT rt0.c0))) AND ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))))AND(CAST(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 END AS NUMERIC)))) ORDER BY ((UNLIKELY(rt0.c3))!=(UNLIKELY(NULL))) ASC INTERSECT SELECT ALL * FROM rt0 WHERE (((rt0.c3) BETWEEN (((rt0.c3)LIKE(rt0.c4))) AND ((- (rt0.c3))))) ORDER BY ((UNLIKELY(rt0.c3))<>(UNLIKELY(NULL))) ASC;
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT rt0.c0))) AND ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT rt0.c0))) AND ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))))AND(CAST(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 END AS NUMERIC)))) ORDER BY ((UNLIKELY(rt0.c3))!=(UNLIKELY(NULL))) ASC INTERSECT SELECT ALL * FROM rt0 WHERE (((rt0.c3) BETWEEN (((rt0.c3)LIKE(rt0.c4))) AND ((- (rt0.c3))))) ORDER BY ((UNLIKELY(rt0.c3))<>(UNLIKELY(NULL))) ASC;
SELECT * FROM rt0 WHERE ((x'b50eff8c' IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((((x'b50eff8c' IN ()))AND(CASE DATE(rt0.c2, 301065113, rt0.c4, rt0.c3, rt0.c3)  WHEN rt0.c0 THEN ((rt0.c3)IS(rt0.c4)) WHEN ((NULL)LIKE(rt0.c2)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) WHEN rt0.c3 COLLATE BINARY THEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c4)) ELSE LIKELY(rt0.c1) END))) ORDER BY rt0.c3 DESC, ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))) NOT NULL) ASC, (~ (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)) DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (NULL) ORDER BY rt0.c3 DESC, ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))) NOT NULL) ASC, (~ (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)) DESC;
SELECT * FROM rt0 WHERE ((x'b50eff8c' IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((((x'b50eff8c' IN ()))AND(CASE DATE(rt0.c2, 301065113, rt0.c4, rt0.c3, rt0.c3)  WHEN rt0.c0 THEN ((rt0.c3)IS(rt0.c4)) WHEN ((NULL)LIKE(rt0.c2)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) WHEN rt0.c3 COLLATE BINARY THEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c4)) ELSE LIKELY(rt0.c1) END))) ORDER BY rt0.c3 DESC, ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))) NOT NULL) ASC, (~ (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)) DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (NULL) ORDER BY rt0.c3 DESC, ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))) NOT NULL) ASC, (~ (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)) DESC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (rt0.c4 COLLATE RTRIM))) ORDER BY (((((rt0.c3, rt0.c0, rt0.c3))<((rt0.c2, rt0.c1, rt0.c0)))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (rt0.c4 COLLATE RTRIM)))AND(NULLIF((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4))), HEX(rt0.c1))))) ORDER BY (((((rt0.c2) ISNULL), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END))<=((LOWER(rt0.c1), ((rt0.c2) NOT NULL))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (rt0.c4 COLLATE RTRIM))) ORDER BY (((((rt0.c3, rt0.c0, rt0.c3))<((rt0.c2, rt0.c1, rt0.c0)))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (rt0.c4 COLLATE RTRIM)))AND(NULLIF((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4))), HEX(rt0.c1))))) ORDER BY (((((rt0.c2) ISNULL), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END))<=((LOWER(rt0.c1), ((rt0.c2) NOT NULL))))  NULLS LAST;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE ((((((((rt0.c1)AND(x'f3')))AND(rt0.c4)))AND(rt0.c4)) IN ()));
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE ((((((((rt0.c1)AND(x'f3')))AND(rt0.c4)))AND(rt0.c4)) IN ())) LIMIT 1;
SELECT * FROM rt0 WHERE (((((NULL) IS FALSE))>>(rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE (((((((NULL) IS FALSE))>>(rt0.c2 COLLATE BINARY)))AND(((0.4586605332441859) IS FALSE)))) ORDER BY ((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(((rt0.c3)||(rt0.c4)))))OR(((rt0.c2) ISNULL)))  NULLS FIRST LIMIT 0X1;
SELECT * FROM rt0 WHERE (((((NULL) IS FALSE))>>(rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE (((((((NULL) IS FALSE))>>(rt0.c2 COLLATE BINARY)))AND(((0.4586605332441859) IS FALSE)))) ORDER BY ((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(((rt0.c3)||(rt0.c4)))))OR(((rt0.c2) ISNULL)))  NULLS FIRST LIMIT 0X1;
SELECT MIN(rt0.c0) FROM rt0 WHERE (NULL) ORDER BY json_remove(((rt0.c3)<<(1508894627)), ((rt0.c4)&(rt0.c2)), IFNULL(rt0.c0, rt0.c2)), ((rt0.c4 COLLATE NOCASE) NOT NULL);
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (((NULL)AND(CAST(CASE WHEN x'eef23323a1' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END AS REAL)))) ORDER BY json_remove(((rt0.c3)<<(0x59efe7a3)), ((rt0.c4)&(rt0.c2)), IFNULL(rt0.c0, rt0.c2)), ((rt0.c4 COLLATE NOCASE) NOT NULL);
SELECT MAX(rt0.c4) FROM rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c2)) AS NUMERIC)) ORDER BY ((((((((rt0.c0) NOTNULL))AND(rt0.c3 COLLATE BINARY)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CAST(NULL AS REAL)));
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (((CAST(((rt0.c0)IS NOT(rt0.c2)) AS NUMERIC))AND(((((CAST(rt0.c2 AS NUMERIC))AND(((rt0.c3) NOT NULL))))AND(((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2))))))) ORDER BY (((+ (rt0.c0)))GLOB(-1.039248594E9))  NULLS LAST, (~ (((rt0.c2)OR(rt0.c4)))), (((rt0.c0)<(rt0.c1)) IN ((- (rt0.c2)), CAST(rt0.c2 AS REAL))) ASC;
SELECT * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))))) ORDER BY CAST(CAST(rt0.c1 AS NUMERIC) AS REAL) DESC;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)))))AND(((rt0.c2)/(((rt0.c3) IS TRUE)))))) ORDER BY CASE WHEN (((rt0.c2, rt0.c0, rt0.c1, rt0.c0))<>((rt0.c3, rt0.c3, rt0.c2, rt0.c0))) THEN TYPEOF(DISTINCT rt0.c1) ELSE ((x'') NOT NULL) END ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS TEXT))) AND (((- (rt0.c2)))))) ORDER BY CASE WHEN (((rt0.c2, rt0.c0, rt0.c1, rt0.c0))<>((rt0.c3, rt0.c3, rt0.c2, rt0.c0))) THEN TYPEOF(DISTINCT rt0.c1) ELSE ((x'') NOT NULL) END ASC;
SELECT * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))))) ORDER BY CAST(CAST(rt0.c1 AS NUMERIC) AS REAL) DESC;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)))))AND(((rt0.c2)/(((rt0.c3) IS TRUE)))))) ORDER BY CASE WHEN (((rt0.c2, rt0.c0, rt0.c1, rt0.c0))<>((rt0.c3, rt0.c3, rt0.c2, rt0.c0))) THEN TYPEOF(DISTINCT rt0.c1) ELSE ((x'') NOT NULL) END ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS TEXT))) AND (((- (rt0.c2)))))) ORDER BY CASE WHEN (((rt0.c2, rt0.c0, rt0.c1, rt0.c0))<>((rt0.c3, rt0.c3, rt0.c2, rt0.c0))) THEN TYPEOF(DISTINCT rt0.c1) ELSE ((x'') NOT NULL) END ASC;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (((rt0.c1)==(rt0.c2)))));
SELECT MIN(rt0.c0) FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (((rt0.c1)==(rt0.c2))))) ORDER BY x'', CASE WHEN CAST(rt0.c4 AS NUMERIC) THEN (rt0.c1 IN (rt0.c3)) WHEN ((((((rt0.c4)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)) THEN ((rt0.c3) NOTNULL) WHEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)) THEN 0.88553267826606 WHEN ((rt0.c0)|(rt0.c3)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) WHEN IFNULL(DISTINCT rt0.c0, rt0.c0) THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) END LIMIT 1;
SELECT * FROM rt0 WHERE ((rt0.c3 IN (((rt0.c4)<=(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c3 IN (((rt0.c4)<(rt0.c1)))))AND((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN (rt0.c3 COLLATE NOCASE, ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2))))))) ORDER BY ((2108131864) NOTNULL), (rt0.c4 COLLATE BINARY IN (CASE WHEN rt0.c2 THEN NULL WHEN 0.5685057736130352 THEN '-1203057728' ELSE rt0.c2 END)), (NOT (LIKELIHOOD(rt0.c1, 1953798452))) ASC LIMIT 0x0 INTERSECT SELECT ALL * FROM rt0 WHERE (CAST(NULLIF(DISTINCT rt0.c2, rt0.c4) AS NUMERIC)) ORDER BY ((2108131864) NOTNULL), (rt0.c4 COLLATE BINARY IN (CASE WHEN rt0.c2 THEN NULL WHEN 0.5685057736130352 THEN '-1203057728' ELSE rt0.c2 END)), (NOT (LIKELIHOOD(rt0.c1, 0x74749934))) ASC LIMIT 0X0;
SELECT * FROM rt0 WHERE ((rt0.c3 IN (((rt0.c4)<=(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c3 IN (((rt0.c4)<(rt0.c1)))))AND((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN (rt0.c3 COLLATE NOCASE, ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2))))))) ORDER BY ((2108131864) NOTNULL), (rt0.c4 COLLATE BINARY IN (CASE WHEN rt0.c2 THEN NULL WHEN 0.5685057736130352 THEN '-1203057728' ELSE rt0.c2 END)), (NOT (LIKELIHOOD(rt0.c1, 1953798452))) ASC LIMIT 0x0 INTERSECT SELECT ALL * FROM rt0 WHERE (CAST(NULLIF(DISTINCT rt0.c2, rt0.c4) AS NUMERIC)) ORDER BY ((2108131864) NOTNULL), (rt0.c4 COLLATE BINARY IN (CASE WHEN rt0.c2 THEN NULL WHEN 0.5685057736130352 THEN '-1203057728' ELSE rt0.c2 END)), (NOT (LIKELIHOOD(rt0.c1, 0x74749934))) ASC LIMIT 0X0;
SELECT * FROM rt0 WHERE (((((((rt0.c1) ISNULL))AND(((rt0.c4) IS FALSE))))AND(json_extract(rt0.c4, rt0.c0))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) ISNULL))AND(((rt0.c4) IS FALSE))))AND(json_extract(rt0.c4, rt0.c0)))) ORDER BY (((((((((((((((rt0.c3, rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c4, rt0.c0))))OR(rt0.c4 COLLATE BINARY)))AND(((rt0.c1) NOT NULL))))OR(rt0.c3)))OR(CAST(rt0.c3 AS BLOB))))OR(((rt0.c1)/(rt0.c1)))))OR((((rt0.c1))==((rt0.c4)))))  NULLS LAST, CASE WHEN rt0.c0 THEN ((rt0.c1)<=(rt0.c0)) END;
SELECT * FROM rt0 WHERE (((((((rt0.c1) ISNULL))AND(((rt0.c4) IS FALSE))))AND(json_extract(rt0.c4, rt0.c0))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) ISNULL))AND(((rt0.c4) IS FALSE))))AND(json_extract(rt0.c4, rt0.c0)))) ORDER BY (((((((((((((((rt0.c3, rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c4, rt0.c0))))OR(rt0.c4 COLLATE BINARY)))AND(((rt0.c1) NOT NULL))))OR(rt0.c3)))OR(CAST(rt0.c3 AS BLOB))))OR(((rt0.c1)/(rt0.c1)))))OR((((rt0.c1))==((rt0.c4)))))  NULLS LAST, CASE WHEN rt0.c0 THEN ((rt0.c1)<=(rt0.c0)) END;
SELECT MAX(rt0.c2) FROM rt0 WHERE ((CASE -1.381152782E9  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END IN ())) ORDER BY ((((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))!=(((NULL)*(rt0.c4)))) DESC;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE ((CASE -1.381152782E9  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END IN ())) ORDER BY (((rt0.c0, rt0.c1)) NOT BETWEEN ((TRIM(rt0.c1), CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END)) AND ((((rt0.c2)GLOB(']_K-b\')), (rt0.c2 IN (rt0.c3))))), '210403493'  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)/(1477462755)) IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3)/(0X58104ae3)) IN ()))AND((((((x'fdfb') ISNULL)))<=((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0))))))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)/(1477462755)) IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3)/(0X58104ae3)) IN ()))AND((((((x'fdfb') ISNULL)))<=((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0))))))));
SELECT MIN(rt0.c1) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)))>>(CAST(rt0.c3 AS REAL)))) ORDER BY ((((rt0.c4)+(rt0.c4)))GLOB((((rt0.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c4, rt0.c1, rt0.c3, rt0.c2, 1394209520))))), 0.24754212415206356;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)))>>(CAST(rt0.c3 AS REAL)))) ORDER BY COALESCE(((rt0.c4)>>(rt0.c0)), rt0.c4 COLLATE RTRIM), ((rt0.c3)+(rt0.c0))  NULLS LAST LIMIT 0X1 INTERSECT SELECT MIN(rt0.c1) FROM rt0 WHERE (RTRIM(CAST(rt0.c3 AS NUMERIC))) ORDER BY COALESCE(((rt0.c4)>>(rt0.c0)), rt0.c4 COLLATE RTRIM), ((rt0.c3)+(rt0.c0))  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM rt0 WHERE (((CASE 0.1666638960454302  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (((rt0.c0)AND(rt0.c4))) AND (((rt0.c3)AND(rt0.c3))))) ORDER BY ((CASE WHEN NULL THEN rt0.c0 ELSE rt0.c0 END)<>(rt0.c1)) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE 0.1666638960454302  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (((rt0.c0)AND(rt0.c4))) AND (((rt0.c3)AND(rt0.c3))))) ORDER BY (NOT (((rt0.c4)*(rt0.c1)))) ASC, (((((rt0.c0, rt0.c2, rt0.c3))<=((rt0.c1, rt0.c0, rt0.c1)))) IS TRUE)  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (SUBSTR((~ (rt0.c1)), rt0.c2 COLLATE NOCASE)) ORDER BY (NOT (((rt0.c4)*(rt0.c1)))) ASC, (((((rt0.c0, rt0.c2, rt0.c3))<=((rt0.c1, rt0.c0, rt0.c1)))) IS TRUE)  NULLS LAST;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (CAST(0.916883767656419 AS NUMERIC)) ORDER BY ((rt0.c3 IN ()) IN (UPPER(rt0.c4), NULL)) DESC  NULLS FIRST, DATE(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4)), 0.42288057964224757, ((rt0.c4)|(rt0.c0)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END, (((rt0.c4, rt0.c0))>=((rt0.c3, rt0.c0))), rt0.c3 COLLATE BINARY) ASC  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((CAST(0.916883767656419 AS NUMERIC))AND(((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)) COLLATE BINARY))) ORDER BY ((rt0.c3 IN ()) IN (UPPER(rt0.c4), NULL)) DESC  NULLS FIRST, DATE(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4)), 0.42288057964224757, ((rt0.c4)|(rt0.c0)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END, (((rt0.c4, rt0.c0))>=((rt0.c3, rt0.c0))), rt0.c3 COLLATE BINARY) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY x'94', ((NOT (rt0.c4)) IN ());
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)AND(CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY))) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 END IN (((rt0.c3) IS FALSE)))  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY x'94', ((NOT (rt0.c4)) IN ());
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) IS TRUE)) NOTNULL)) ORDER BY rt0.c1  NULLS LAST, 0.24267986980563883 ASC;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c4) IS TRUE)) NOTNULL)) ORDER BY rt0.c1  NULLS LAST, 0.24267986980563883 ASC LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CASE WHEN ((((NULL)AND(rt0.c2)))OR(rt0.c1)) THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 END WHEN 0.8411692944267759 THEN CAST(rt0.c4 AS NUMERIC) WHEN HEX(rt0.c4) THEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) ELSE (((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c3, rt0.c4, rt0.c1))) END) ORDER BY rt0.c1  NULLS LAST, 0.24267986980563883 ASC LIMIT 0x0;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (CAST(((rt0.c3)<=(rt0.c4)) AS TEXT));
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (CAST(((rt0.c3)<(rt0.c4)) AS TEXT)) ORDER BY (((((((((((((rt0.c3, rt0.c0, rt0.c0, rt0.c3, '-1010016360')) BETWEEN ((rt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c3)) AND ((NULL, rt0.c2, rt0.c2, rt0.c3, rt0.c4))))AND((rt0.c0 IN (rt0.c1)))))AND(((((((((((rt0.c2)OR(0.2925014821708145)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))))OR(((rt0.c2)/(rt0.c4)))))AND(((rt0.c4)<=(rt0.c0)))))OR(((rt0.c0)OR(rt0.c2))))  NULLS LAST, UNLIKELY((((rt0.c0, rt0.c4))>(('o{^', rt0.c4)))), rt0.c2 COLLATE BINARY  NULLS FIRST, ((('P
O)b{ueW', ((rt0.c2) NOTNULL), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2))))<=(((((rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c4))>=((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c0))), CAST(rt0.c3 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) DESC LIMIT 0 INTERSECT SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (-7545377.0) ORDER BY (((((((((((((rt0.c3, rt0.c0, rt0.c0, rt0.c3, '-1010016360')) BETWEEN ((rt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c3)) AND ((NULL, rt0.c2, rt0.c2, rt0.c3, rt0.c4))))AND((rt0.c0 IN (rt0.c1)))))AND(((((((((((rt0.c2)OR(0.2925014821708145)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))))OR(((rt0.c2)/(rt0.c4)))))AND(((rt0.c4)<=(rt0.c0)))))OR(((rt0.c0)OR(rt0.c2))))  NULLS LAST, UNLIKELY((((rt0.c0, rt0.c4))>(('o{^', rt0.c4)))), rt0.c2 COLLATE BINARY  NULLS FIRST, ((('P
O)b{ueW', ((rt0.c2) NOTNULL), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2))))<=(((((rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c4))>=((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c0))), CAST(rt0.c3 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY NULL COLLATE RTRIM DESC, ((CAST(rt0.c1 AS INTEGER))GLOB(((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) ORDER BY NULL COLLATE RTRIM DESC, ((CAST(rt0.c1 AS INTEGER))GLOB(((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY NULL COLLATE RTRIM DESC, ((CAST(rt0.c1 AS INTEGER))GLOB(((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) ORDER BY NULL COLLATE RTRIM DESC, ((CAST(rt0.c1 AS INTEGER))GLOB(((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((x'b3') BETWEEN (rt0.c1) AND ('0.0')) COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE (((x'b3') BETWEEN (rt0.c1) AND ('0.0')) COLLATE BINARY) INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (rt0.c3)) COLLATE BINARY);
SELECT * FROM rt0 WHERE (((x'b3') BETWEEN (rt0.c1) AND ('0.0')) COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE (((x'b3') BETWEEN (rt0.c1) AND ('0.0')) COLLATE BINARY) INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (rt0.c3)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((rt0.c2)AND(((-1231771850) NOT BETWEEN ((+ (rt0.c2))) AND (((rt0.c0)&(rt0.c3))))))) ORDER BY ((rt0.c3)IS NOT(rt0.c2)) COLLATE NOCASE  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c3)IS NOT(rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT MIN(rt0.c0) FROM rt0 WHERE ((NOT (((rt0.c4) ISNULL))));
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE ((NOT (((rt0.c4) ISNULL))));
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c4 AS TEXT) IN ((rt0.c2 IN ()))));
SELECT * FROM rt0 WHERE ((((CAST(rt0.c4 AS TEXT) IN ((rt0.c2 IN ()))))AND(CASE rt0.c0  WHEN rt0.c1 THEN (('0.9895885614807849')!=(rt0.c0)) WHEN ((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c3)) THEN ((rt0.c3)<(rt0.c2)) END))) ORDER BY (- (rt0.c3)) COLLATE NOCASE DESC;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c4 AS TEXT) IN ((rt0.c2 IN ()))));
SELECT * FROM rt0 WHERE ((((CAST(rt0.c4 AS TEXT) IN ((rt0.c2 IN ()))))AND(CASE rt0.c0  WHEN rt0.c1 THEN (('0.9895885614807849')!=(rt0.c0)) WHEN ((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c3)) THEN ((rt0.c3)<(rt0.c2)) END))) ORDER BY (- (rt0.c3)) COLLATE NOCASE DESC;
SELECT MAX(rt0.c0) FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c3))) NOT BETWEEN ((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c1)))) AND ((~ (rt0.c1))))) ORDER BY (NOT ((NOT (rt0.c2)))) ASC;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c3))) NOT BETWEEN ((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c1)))) AND ((~ (rt0.c1))))) ORDER BY CAST((rt0.c3 IN (rt0.c4)) AS BLOB) ASC, CAST(rt0.c4 AS BLOB)  NULLS LAST, '1303243632' DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((HEX(rt0.c4))*(((rt0.c4)-(rt0.c0))))) ORDER BY (((rt0.c1, rt0.c4)) NOT BETWEEN ((((NULL)<<(rt0.c2)), rt0.c1 COLLATE RTRIM)) AND ((rt0.c2 COLLATE RTRIM, rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE (((HEX(rt0.c4))*(((rt0.c4)-(rt0.c0))))) ORDER BY CAST(((rt0.c3)|(rt0.c4)) AS NUMERIC), ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST, CAST(((rt0.c4)&(rt0.c2)) AS REAL) ASC  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM rt0 WHERE (CAST(rt0.c4 AS TEXT)) ORDER BY CAST(((rt0.c3)|(rt0.c4)) AS NUMERIC), ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST, CAST(((rt0.c4)&(rt0.c2)) AS REAL) ASC  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE (((HEX(rt0.c4))*(((rt0.c4)-(rt0.c0))))) ORDER BY (((rt0.c1, rt0.c4)) NOT BETWEEN ((((NULL)<<(rt0.c2)), rt0.c1 COLLATE RTRIM)) AND ((rt0.c2 COLLATE RTRIM, rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE (((HEX(rt0.c4))*(((rt0.c4)-(rt0.c0))))) ORDER BY CAST(((rt0.c3)|(rt0.c4)) AS NUMERIC), ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST, CAST(((rt0.c4)&(rt0.c2)) AS REAL) ASC  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM rt0 WHERE (CAST(rt0.c4 AS TEXT)) ORDER BY CAST(((rt0.c3)|(rt0.c4)) AS NUMERIC), ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST, CAST(((rt0.c4)&(rt0.c2)) AS REAL) ASC  NULLS FIRST LIMIT 0x2;
SELECT MAX(rt0.c0) FROM rt0 WHERE ((((((rt0.c3) NOTNULL), TYPEOF(rt0.c0)))>=(((rt0.c0 IN (rt0.c4)), ((((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))))));
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE ((((((((rt0.c3) NOTNULL), TYPEOF(rt0.c0)))>=(((rt0.c0 IN (rt0.c4)), ((((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))))))AND(rt0.c2))) ORDER BY COALESCE(DISTINCT (+ (rt0.c0)), (~ (rt0.c4)), CASE WHEN rt0.c4 THEN 0.7266333975539646 WHEN rt0.c0 THEN rt0.c4 WHEN x'' THEN rt0.c3 END, (- (rt0.c2))), CAST(rt0.c3 AS TEXT)  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (((~ (rt0.c2)) IN (((rt0.c3) IS TRUE)))) ORDER BY COALESCE(DISTINCT (+ (rt0.c0)), (~ (rt0.c4)), CASE WHEN rt0.c4 THEN 0.7266333975539646 WHEN rt0.c0 THEN rt0.c4 WHEN x'' THEN rt0.c3 END, (- (rt0.c2))), CAST(rt0.c3 AS TEXT)  NULLS LAST LIMIT 3;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c4)OR(((rt0.c2)&(rt0.c3)))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c4)OR(((rt0.c2)&(rt0.c3)))))AND(((rt0.c4 IN (rt0.c0, 0.6964626689538339)) IN ((rt0.c0 IN ()), CAST(rt0.c3 AS TEXT)))))) ORDER BY (NOT (rt0.c4)) COLLATE RTRIM DESC, ((((rt0.c0 IN ()), rt0.c4 COLLATE BINARY))>(((- (rt0.c3)), CAST(rt0.c0 AS BLOB)))) ASC, ((rt0.c0)>(TRIM(rt0.c0)))  NULLS FIRST;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((+ (json(rt0.c3))));
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE ((((+ (json(rt0.c3))))AND(((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 END) NOT NULL)))) INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (rt0.c4);
SELECT MIN(rt0.c2) FROM rt0 WHERE (((((rt0.c4)||(rt0.c2)))<(CAST(rt0.c3 AS TEXT)))) ORDER BY (((((rt0.c4)OR(rt0.c1))))<=(('-1550523142'))) ASC  NULLS LAST, CASE WHEN 0.5197611245842593 THEN LIKE(rt0.c2, rt0.c1, '1') WHEN CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 END THEN (rt0.c0 IN ()) ELSE CAST(rt0.c0 AS NUMERIC) END DESC, -15185782 COLLATE NOCASE  NULLS LAST;
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (((((rt0.c4)||(rt0.c2)))<(CAST(rt0.c3 AS TEXT)))) ORDER BY (LOWER(rt0.c1) IN ()) DESC;
SELECT MAX(rt0.c2) FROM rt0 WHERE (rt0.c4) ORDER BY ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (rt0.c4) ORDER BY ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)))/((((rt0.c4))<((rt0.c1)))))) ORDER BY ((((rt0.c4)GLOB(rt0.c0))) NOT NULL) ASC  NULLS LAST, ((((x'')AND(rt0.c2)))OR(NULL)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)))/((((rt0.c4))<((rt0.c1))))))AND((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(0X74eb93d8)))AND(rt0.c2))))<=((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))))) ORDER BY ((((rt0.c4)GLOB(rt0.c0))) NOT NULL) ASC  NULLS LAST, ((((x'')AND(rt0.c2)))OR(NULL)) COLLATE BINARY ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)))/((((rt0.c4))<((rt0.c1)))))) ORDER BY ((((rt0.c4)GLOB(rt0.c0))) NOT NULL) ASC  NULLS LAST, ((((x'')AND(rt0.c2)))OR(NULL)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)))/((((rt0.c4))<((rt0.c1))))))AND((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(0X74eb93d8)))AND(rt0.c2))))<=((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))))) ORDER BY ((((rt0.c4)GLOB(rt0.c0))) NOT NULL) ASC  NULLS LAST, ((((x'')AND(rt0.c2)))OR(NULL)) COLLATE BINARY ASC  NULLS FIRST LIMIT 1;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE ((NOT (rt0.c0))) ORDER BY (CAST(rt0.c3 AS REAL) IN (((rt0.c3)IS(rt0.c3)))), (((((((rt0.c4)OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c4)) IN (((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST, (rt0.c1 IN (((rt0.c2)>(NULL)))) DESC;
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE ((((NOT (rt0.c0)))AND(((ABS(rt0.c3)) IS FALSE)))) ORDER BY ((((((rt0.c1) NOTNULL))OR((~ (rt0.c0)))))OR((rt0.c3 IN ()))) INTERSECT SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((((((((CAST(rt0.c4 AS TEXT))OR(((NULL) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(rt0.c3 COLLATE RTRIM)))OR(CAST(rt0.c2 AS INTEGER))))AND(rt0.c3))) ORDER BY ((((((rt0.c1) NOTNULL))OR((~ (rt0.c0)))))OR((rt0.c3 IN ())));
SELECT COUNT(*) FROM rt0 WHERE ('846100088' COLLATE NOCASE) ORDER BY CAST(((rt0.c0)>=(rt0.c3)) AS INTEGER) ASC, ((((rt0.c0)IS NOT(rt0.c0)))>>(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((('846100088' COLLATE NOCASE)AND(NULLIF(rt0.c2, (rt0.c0 IN ()))))) ORDER BY CAST(((rt0.c0)>=(rt0.c3)) AS INTEGER) ASC, ((((rt0.c0)IS NOT(rt0.c0)))>>(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))) LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE rt0.c3  WHEN 0.9520370595954812 THEN '5' WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END)/(x'721e559cfbe8'))) ORDER BY CAST(((rt0.c0)>=(rt0.c3)) AS INTEGER) ASC, ((((rt0.c0)IS NOT(rt0.c0)))>>(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))) LIMIT 0x1;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))) IS TRUE)) ORDER BY ((rt0.c3 COLLATE BINARY) NOTNULL), ((rt0.c3 COLLATE BINARY) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END) AND (CAST(rt0.c3 AS INTEGER))) ASC  NULLS LAST, (~ (((rt0.c4)>(rt0.c4)))) ASC;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))) IS TRUE))AND(0.01700008538233222 COLLATE RTRIM))) ORDER BY (- (((rt0.c0) NOT BETWEEN (rt0.c1) AND (x''))))  NULLS FIRST, -1.38434035E9  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)IS(rt0.c0)))OR(rt0.c1 COLLATE RTRIM)))AND((NOT (rt0.c2)))))OR((((x'', rt0.c1, 'ȧ,Y'))<=((rt0.c4, rt0.c2, rt0.c0))))))OR((NOT (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)IS(rt0.c0)))OR(rt0.c1 COLLATE RTRIM)))AND((NOT (rt0.c2)))))OR((((x'', rt0.c1, 'ȧ,Y'))<=((rt0.c4, rt0.c2, rt0.c0))))))OR((NOT (rt0.c0))))) INTERSECT SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c4)OR(NULL)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c3))) NOT NULL));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)IS(rt0.c0)))OR(rt0.c1 COLLATE RTRIM)))AND((NOT (rt0.c2)))))OR((((x'', rt0.c1, 'ȧ,Y'))<=((rt0.c4, rt0.c2, rt0.c0))))))OR((NOT (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)IS(rt0.c0)))OR(rt0.c1 COLLATE RTRIM)))AND((NOT (rt0.c2)))))OR((((x'', rt0.c1, 'ȧ,Y'))<=((rt0.c4, rt0.c2, rt0.c0))))))OR((NOT (rt0.c0))))) INTERSECT SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c4)OR(NULL)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c3))) NOT NULL));
SELECT ALL * FROM rt0 WHERE (UPPER(rt0.c3));
SELECT DISTINCT * FROM rt0 WHERE (UPPER(rt0.c3)) ORDER BY (- (HEX(rt0.c1)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (UPPER(rt0.c3));
SELECT DISTINCT * FROM rt0 WHERE (UPPER(rt0.c3)) ORDER BY (- (HEX(rt0.c1)))  NULLS FIRST;
SELECT MAX(rt0.c2) FROM rt0 WHERE (CAST(((((0.1421086367753298)AND(rt0.c1)))AND(rt0.c2)) AS TEXT));
SELECT MAX(rt0.c2) FROM rt0 WHERE (((CAST(((((0.1421086367753298)AND(rt0.c1)))AND(rt0.c2)) AS TEXT))AND(CASE WHEN (rt0.c1 IN (rt0.c3)) THEN CASE WHEN '836140270' THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END ELSE CAST(rt0.c2 AS TEXT) END))) INTERSECT SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c3)==(rt0.c0)))AND((((rt0.c4, rt0.c4, rt0.c2)) BETWEEN ((rt0.c1, rt0.c4, rt0.c4)) AND ((rt0.c0, rt0.c1, rt0.c4))))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN (rt0.c1)))GLOB(MIN('-1467595672', rt0.c2))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN (rt0.c1)))GLOB(MIN('-1467595672', rt0.c2)))) ORDER BY CAST(rt0.c4 AS REAL) COLLATE BINARY ASC LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)OR(LIKELY(DISTINCT rt0.c0))))OR(CASE rt0.c2  WHEN '2001252046' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))AND(((rt0.c1)>=(rt0.c0)))))OR(rt0.c0))) ORDER BY CAST(rt0.c4 AS REAL) COLLATE BINARY ASC LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (((rt0.c4)<(((rt0.c1)LIKE(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4)<(((rt0.c1)LIKE(rt0.c3)))))AND((((((((rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c1)) AND ((-1.381152782E9, rt0.c1))))AND(((rt0.c0)-(rt0.c1)))))AND(((rt0.c1)IS(rt0.c4))))))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)&(CAST(rt0.c2 AS INTEGER))));
SELECT ALL * FROM rt0 WHERE (((rt0.c4)<(((rt0.c1)LIKE(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4)<(((rt0.c1)LIKE(rt0.c3)))))AND((((((((rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c1)) AND ((-1.381152782E9, rt0.c1))))AND(((rt0.c0)-(rt0.c1)))))AND(((rt0.c1)IS(rt0.c4))))))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)&(CAST(rt0.c2 AS INTEGER))));
SELECT MAX(rt0.c1) FROM rt0 WHERE (rt0.c0);
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c0 AS NUMERIC))<<(((rt0.c2) NOTNULL)))  NULLS LAST INTERSECT SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (CASE (((rt0.c4, rt0.c2))!=((rt0.c0, rt0.c4)))  WHEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) ELSE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END) ORDER BY ((CAST(rt0.c0 AS NUMERIC))<<(((rt0.c2) NOTNULL)))  NULLS LAST;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (((((((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)OR(CAST(rt0.c0 AS NUMERIC))))AND(IFNULL(DISTINCT rt0.c3, x'a8bf'))))AND((rt0.c4 IN ())))) ORDER BY 0.6213800679410805 DESC, ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY DESC;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (((((((((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)OR(CAST(rt0.c0 AS NUMERIC))))AND(IFNULL(DISTINCT rt0.c3, x'a8bf'))))AND((rt0.c4 IN ()))))AND(((((((((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)))OR((((rt0.c0, rt0.c4, rt0.c4, rt0.c0))!=((rt0.c1, rt0.c2, rt0.c4, rt0.c2))))))OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(CAST('0.9895885614807849' AS REAL))))AND((((rt0.c2, rt0.c3, rt0.c3))>=((rt0.c1, rt0.c3, rt0.c2))))))OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c3))))))) ORDER BY (((rt0.c3)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c3)<>(rt0.c4))))) DESC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ('f') ORDER BY ((((rt0.c3)OR(((rt0.c2)*(rt0.c0)))))AND((rt0.c0 IN (rt0.c4)))) DESC, NULL;
SELECT DISTINCT * FROM rt0 WHERE ('f') ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))>>(((rt0.c1)AND(rt0.c1)))), (((rt0.c0)) NOT BETWEEN ((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)))) AND ((IFNULL(rt0.c0, rt0.c4)))) DESC  NULLS LAST, ((NOT (rt0.c0)) IN (CAST(rt0.c3 AS REAL), (x'34' IN (0.7518749383980322)))) ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE BINARY THEN rt0.c4 WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2)) THEN NULLIF(rt0.c2, rt0.c0) ELSE ((rt0.c1) IS TRUE) END) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))>>(((rt0.c1)AND(rt0.c1)))), (((rt0.c0)) NOT BETWEEN ((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)))) AND ((IFNULL(rt0.c0, rt0.c4)))) DESC  NULLS LAST, ((NOT (rt0.c0)) IN (CAST(rt0.c3 AS REAL), (x'34' IN (0.7518749383980322)))) ASC;
SELECT ALL * FROM rt0 WHERE ('f') ORDER BY ((((rt0.c3)OR(((rt0.c2)*(rt0.c0)))))AND((rt0.c0 IN (rt0.c4)))) DESC, NULL;
SELECT DISTINCT * FROM rt0 WHERE ('f') ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))>>(((rt0.c1)AND(rt0.c1)))), (((rt0.c0)) NOT BETWEEN ((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)))) AND ((IFNULL(rt0.c0, rt0.c4)))) DESC  NULLS LAST, ((NOT (rt0.c0)) IN (CAST(rt0.c3 AS REAL), (x'34' IN (0.7518749383980322)))) ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE BINARY THEN rt0.c4 WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2)) THEN NULLIF(rt0.c2, rt0.c0) ELSE ((rt0.c1) IS TRUE) END) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))>>(((rt0.c1)AND(rt0.c1)))), (((rt0.c0)) NOT BETWEEN ((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)))) AND ((IFNULL(rt0.c0, rt0.c4)))) DESC  NULLS LAST, ((NOT (rt0.c0)) IN (CAST(rt0.c3 AS REAL), (x'34' IN (0.7518749383980322)))) ASC;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4)>=(rt0.c0))  WHEN ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) THEN CAST(rt0.c2 AS TEXT) WHEN CASE rt0.c1  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END THEN CAST(x'4b' AS BLOB) ELSE ((1.44474326E9)>>(rt0.c2)) END);
SELECT DISTINCT * FROM rt0 WHERE (CASE ((rt0.c4)>=(rt0.c0))  WHEN ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) THEN CAST(rt0.c2 AS TEXT) WHEN CASE rt0.c1  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END THEN CAST(x'4b' AS BLOB) ELSE ((1.44474326E9)>>(rt0.c2)) END) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CAST(0x6d910956 AS REAL)) NOTNULL)) LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4)>=(rt0.c0))  WHEN ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) THEN CAST(rt0.c2 AS TEXT) WHEN CASE rt0.c1  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END THEN CAST(x'4b' AS BLOB) ELSE ((1.44474326E9)>>(rt0.c2)) END);
SELECT DISTINCT * FROM rt0 WHERE (CASE ((rt0.c4)>=(rt0.c0))  WHEN ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) THEN CAST(rt0.c2 AS TEXT) WHEN CASE rt0.c1  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END THEN CAST(x'4b' AS BLOB) ELSE ((1.44474326E9)>>(rt0.c2)) END) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CAST(0x6d910956 AS REAL)) NOTNULL)) LIMIT 0X2;
SELECT * FROM rt0 WHERE (((((x'') BETWEEN (rt0.c2) AND (rt0.c2)))IS NOT((rt0.c2 IN (rt0.c0, rt0.c1))))) ORDER BY CAST(CAST(rt0.c4 AS TEXT) AS BLOB)  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((((x'') BETWEEN (rt0.c2) AND (rt0.c2)))IS NOT((rt0.c2 IN (rt0.c0, rt0.c1)))))AND(CAST(((rt0.c0)AND(rt0.c2)) AS BLOB)))) ORDER BY ((((rt0.c4) ISNULL)) NOT BETWEEN (0.8549239329788515) AND ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))  NULLS LAST, (rt0.c0 IN (rt0.c3)) COLLATE RTRIM;
SELECT * FROM rt0 WHERE (((((x'') BETWEEN (rt0.c2) AND (rt0.c2)))IS NOT((rt0.c2 IN (rt0.c0, rt0.c1))))) ORDER BY CAST(CAST(rt0.c4 AS TEXT) AS BLOB)  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((((x'') BETWEEN (rt0.c2) AND (rt0.c2)))IS NOT((rt0.c2 IN (rt0.c0, rt0.c1)))))AND(CAST(((rt0.c0)AND(rt0.c2)) AS BLOB)))) ORDER BY ((((rt0.c4) ISNULL)) NOT BETWEEN (0.8549239329788515) AND ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))  NULLS LAST, (rt0.c0 IN (rt0.c3)) COLLATE RTRIM;
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c3, rt0.c0)))<(CAST(rt0.c4 AS NUMERIC))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c3, rt0.c0)))<(CAST(rt0.c4 AS NUMERIC)))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE BINARY) LIMIT 0x2;
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c3, rt0.c0)))<(CAST(rt0.c4 AS NUMERIC))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c3, rt0.c0)))<(CAST(rt0.c4 AS NUMERIC)))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE BINARY) LIMIT 0x2;
SELECT * FROM rt0 WHERE ((- (rt0.c1)));
SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c1)))AND((((NOT (rt0.c1))) BETWEEN (MAX(rt0.c4, rt0.c4, rt0.c1)) AND (QUOTE(rt0.c2)))))) ORDER BY rt0.c2, (((rt0.c3, rt0.c2)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)) AND ((GLOB(1.613406116E9, rt0.c0), ((rt0.c0)OR(rt0.c2))))) ASC, (NOT (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) ASC  NULLS FIRST LIMIT 3;
SELECT * FROM rt0 WHERE ((- (rt0.c1)));
SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c1)))AND((((NOT (rt0.c1))) BETWEEN (MAX(rt0.c4, rt0.c4, rt0.c1)) AND (QUOTE(rt0.c2)))))) ORDER BY rt0.c2, (((rt0.c3, rt0.c2)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)) AND ((GLOB(1.613406116E9, rt0.c0), ((rt0.c0)OR(rt0.c2))))) ASC, (NOT (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) ASC  NULLS FIRST LIMIT 3;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((rt0.c1)AND((((rt0.c0 IN (rt0.c0))) NOT BETWEEN (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c4))) AND (SQLITE_COMPILEOPTION_GET(rt0.c2)))))) ORDER BY (CAST(rt0.c0 AS TEXT) IN (((rt0.c4)*(rt0.c0))))  NULLS LAST, ((((rt0.c2) NOTNULL)) IS FALSE) DESC  NULLS LAST, ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN '劓S' END) IS FALSE);
SELECT ALL * FROM rt0 WHERE ((~ (ABS(rt0.c3)))) ORDER BY (((((0.3435694652901301, rt0.c1))<=((rt0.c0, rt0.c2)))) IS TRUE) ASC, (((rt0.c0, (NOT (rt0.c3)), (+ (rt0.c3))))<=((rt0.c3 COLLATE RTRIM, LIKELY(rt0.c2), rt0.c2 COLLATE BINARY))) ASC  NULLS LAST, (((rt0.c0 IN (rt0.c1))) NOTNULL);
SELECT ALL * FROM rt0 WHERE ((~ (ABS(rt0.c3)))) ORDER BY (((((0.3435694652901301, rt0.c1))<=((rt0.c0, rt0.c2)))) IS TRUE) ASC, (((rt0.c0, (NOT (rt0.c3)), (+ (rt0.c3))))<=((rt0.c3 COLLATE RTRIM, LIKELY(rt0.c2), rt0.c2 COLLATE BINARY))) ASC  NULLS LAST, (((rt0.c0 IN (rt0.c1))) NOTNULL) LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE ((~ (ABS(rt0.c3)))) ORDER BY (((((0.3435694652901301, rt0.c1))<=((rt0.c0, rt0.c2)))) IS TRUE) ASC, (((rt0.c0, (NOT (rt0.c3)), (+ (rt0.c3))))<=((rt0.c3 COLLATE RTRIM, LIKELY(rt0.c2), rt0.c2 COLLATE BINARY))) ASC  NULLS LAST, (((rt0.c0 IN (rt0.c1))) NOTNULL);
SELECT ALL * FROM rt0 WHERE ((~ (ABS(rt0.c3)))) ORDER BY (((((0.3435694652901301, rt0.c1))<=((rt0.c0, rt0.c2)))) IS TRUE) ASC, (((rt0.c0, (NOT (rt0.c3)), (+ (rt0.c3))))<=((rt0.c3 COLLATE RTRIM, LIKELY(rt0.c2), rt0.c2 COLLATE BINARY))) ASC  NULLS LAST, (((rt0.c0 IN (rt0.c1))) NOTNULL) LIMIT 0X1;
SELECT * FROM rt0 WHERE ((((((rt0.c2)OR('442957430')))OR(rt0.c4)) IN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)), (rt0.c2 IN ()))));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c2)OR('442957430')))OR(rt0.c4)) IN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)), (rt0.c2 IN ()))))AND(((rt0.c3 IN (rt0.c1)) IN (((rt0.c4)IS NOT(rt0.c4)), (((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c0, rt0.c1, rt0.c0)))))))) ORDER BY (((rt0.c2 IN (rt0.c3, rt0.c3, rt0.c4)))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))))  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE ((((TRIM(DISTINCT rt0.c4), ((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c2))))==((NULLIF(rt0.c4, rt0.c3), ((rt0.c1) IS TRUE))))) ORDER BY (((rt0.c2 IN (rt0.c3, rt0.c3, rt0.c4)))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c2)OR('442957430')))OR(rt0.c4)) IN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)), (rt0.c2 IN ()))));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c2)OR('442957430')))OR(rt0.c4)) IN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)), (rt0.c2 IN ()))))AND(((rt0.c3 IN (rt0.c1)) IN (((rt0.c4)IS NOT(rt0.c4)), (((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c0, rt0.c1, rt0.c0)))))))) ORDER BY (((rt0.c2 IN (rt0.c3, rt0.c3, rt0.c4)))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))))  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE ((((TRIM(DISTINCT rt0.c4), ((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c2))))==((NULLIF(rt0.c4, rt0.c3), ((rt0.c1) IS TRUE))))) ORDER BY (((rt0.c2 IN (rt0.c3, rt0.c3, rt0.c4)))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)==(rt0.c4)) IN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY ((rt0.c3)%((NULL IN (rt0.c1, rt0.c3))))  NULLS FIRST, ((((((((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))IS(GLOB(rt0.c4, rt0.c2))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)=(rt0.c4)) IN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)))AND((('-')<=((~ (rt0.c1))))))) ORDER BY UPPER(DISTINCT CAST(rt0.c3 AS NUMERIC)) ASC, (+ (CAST(rt0.c2 AS TEXT))) DESC  NULLS LAST LIMIT 0;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)AND((((rt0.c2)) NOT BETWEEN ((((rt0.c2)/(rt0.c4)))) AND ((rt0.c4 COLLATE BINARY)))))) ORDER BY (((+ (rt0.c3)))>>(-7.71383651E8))  NULLS FIRST, (((rt0.c1)) BETWEEN (((- (rt0.c1)))) AND ((rt0.c1))) DESC  NULLS FIRST, ((rt0.c1) NOTNULL)  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS NUMERIC)) ORDER BY (((+ (rt0.c3)))>>(-7.71383651E8))  NULLS FIRST, (((rt0.c1)) BETWEEN (((- (rt0.c1)))) AND ((rt0.c1))) DESC  NULLS FIRST, ((rt0.c1) NOTNULL)  NULLS FIRST;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE ((((rt0.c3 IN (rt0.c2))) IS TRUE)) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS REAL) ASC  NULLS LAST, (('ꉵ%bO' COLLATE BINARY) BETWEEN ((((rt0.c2, rt0.c1))=((rt0.c2, rt0.c4)))) AND ((((rt0.c3))<=((rt0.c3)))));
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE ((((((rt0.c3 IN (rt0.c2))) IS TRUE))AND(UPPER(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))))) ORDER BY (rt0.c2 IN (rt0.c1, '-1909189608', rt0.c3)) COLLATE BINARY DESC, rt0.c4  NULLS FIRST, ((rt0.c1)IS((rt0.c2 IN (rt0.c1, rt0.c4)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (CAST(((rt0.c4) IS TRUE) AS BLOB)) ORDER BY (rt0.c2 IN (rt0.c1, '-1909189608', rt0.c3)) COLLATE BINARY DESC, rt0.c4  NULLS FIRST, ((rt0.c1)IS((rt0.c2 IN (rt0.c1, rt0.c4)))) DESC  NULLS FIRST;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (json_patch(((rt0.c2) NOTNULL), UNLIKELY(rt0.c1))) ORDER BY rt0.c3 DESC, ((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c4) IS TRUE)))  NULLS LAST;
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (json_patch(((rt0.c2) NOTNULL), UNLIKELY(rt0.c1))) ORDER BY rt0.c3 DESC, ((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c4) IS TRUE)))  NULLS LAST INTERSECT SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)) IN (((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))))) ORDER BY rt0.c3 DESC, ((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c4) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c4) NOTNULL) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (((((rt0.c4) NOTNULL) COLLATE NOCASE)AND((((((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c4)) AND ((rt0.c0, rt0.c4, rt0.c3)))) NOT NULL)))) ORDER BY (((rt0.c4, rt0.c0)) NOT BETWEEN ((((rt0.c3)%(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((CAST(rt0.c3 AS INTEGER), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))) ASC, ABS(rt0.c0) COLLATE RTRIM  NULLS FIRST, ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c4) NOTNULL) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (((((rt0.c4) NOTNULL) COLLATE NOCASE)AND((((((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c4)) AND ((rt0.c0, rt0.c4, rt0.c3)))) NOT NULL)))) ORDER BY (((rt0.c4, rt0.c0)) NOT BETWEEN ((((rt0.c3)%(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((CAST(rt0.c3 AS INTEGER), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))) ASC, ABS(rt0.c0) COLLATE RTRIM  NULLS FIRST, ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(CAST(rt0.c4 AS REAL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(CAST(rt0.c4 AS REAL))) ORDER BY (((~ (rt0.c2)))GLOB(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END));
SELECT ALL * FROM rt0 WHERE (((0.44529996709304764) NOTNULL) COLLATE NOCASE) ORDER BY ((((((((((rt0.c4) IS FALSE))OR(LIKE(rt0.c0, rt0.c4, '-'))))AND(((rt0.c4)*(rt0.c0)))))OR(CAST(rt0.c2 AS TEXT))))OR(((rt0.c3)>(rt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((0.44529996709304764) NOTNULL) COLLATE NOCASE) ORDER BY (((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (((((rt0.c1))==((rt0.c2))), ((-5.24230272E8) ISNULL), CASE 0.4229056523366984  WHEN rt0.c1 THEN rt0.c0 END, rt0.c0 COLLATE RTRIM, ((rt0.c2) ISNULL))) AND ((((rt0.c4) NOTNULL), rt0.c4, x'', ((rt0.c2)+(rt0.c2)), rt0.c4))) ASC, (((((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c0)) IN ()) ASC LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE (((0.44529996709304764) NOTNULL) COLLATE NOCASE) ORDER BY ((((((((((rt0.c4) IS FALSE))OR(LIKE(rt0.c0, rt0.c4, '-'))))AND(((rt0.c4)*(rt0.c0)))))OR(CAST(rt0.c2 AS TEXT))))OR(((rt0.c3)>(rt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((0.44529996709304764) NOTNULL) COLLATE NOCASE) ORDER BY (((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (((((rt0.c1))==((rt0.c2))), ((-5.24230272E8) ISNULL), CASE 0.4229056523366984  WHEN rt0.c1 THEN rt0.c0 END, rt0.c0 COLLATE RTRIM, ((rt0.c2) ISNULL))) AND ((((rt0.c4) NOTNULL), rt0.c4, x'', ((rt0.c2)+(rt0.c2)), rt0.c4))) ASC, (((((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c0)) IN ()) ASC LIMIT 0x2;
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c4 AS INTEGER)))) ORDER BY (- ((('1950429582') IS FALSE))) DESC  NULLS LAST, CAST(CAST(rt0.c0 AS REAL) AS TEXT)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((- (CAST(rt0.c4 AS INTEGER)))) ORDER BY (- ((('1950429582') IS FALSE))) DESC  NULLS LAST, CAST(CAST(rt0.c0 AS REAL) AS TEXT)  NULLS LAST LIMIT 2;
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c4 AS INTEGER)))) ORDER BY (- ((('1950429582') IS FALSE))) DESC  NULLS LAST, CAST(CAST(rt0.c0 AS REAL) AS TEXT)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((- (CAST(rt0.c4 AS INTEGER)))) ORDER BY (- ((('1950429582') IS FALSE))) DESC  NULLS LAST, CAST(CAST(rt0.c0 AS REAL) AS TEXT)  NULLS LAST LIMIT 2;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((NULL) NOT BETWEEN ((rt0.c4 IN (rt0.c3))) AND (((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4))))) ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END  WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c1) ISNULL) WHEN (+ (rt0.c2)) THEN ((rt0.c1) IS FALSE) END  NULLS LAST, rt0.c3 DESC  NULLS LAST;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((NULL) NOT BETWEEN ((rt0.c4 IN (rt0.c3))) AND (((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4))))) ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END  WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c1) ISNULL) WHEN (+ (rt0.c2)) THEN ((rt0.c1) IS FALSE) END  NULLS LAST, rt0.c3 DESC  NULLS LAST INTERSECT SELECT MAX(rt0.c1) FROM rt0 WHERE ((CAST(NULL AS INTEGER) IN (((rt0.c3)&('2102992548'))))) ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END  WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c1) ISNULL) WHEN (+ (rt0.c2)) THEN ((rt0.c1) IS FALSE) END  NULLS LAST, rt0.c3 DESC  NULLS LAST;
SELECT MIN(rt0.c1) FROM rt0 WHERE (highlight((x'50' IN ()), rt0.c0, NULL, CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END)) ORDER BY (rt0.c3 IN ()) COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST;
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (highlight((x'50' IN ()), rt0.c0, NULL, CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END)) ORDER BY (rt0.c3 IN ()) COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE ((~ (NULL))) ORDER BY (rt0.c3 IN ()) COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST LIMIT 3;
SELECT ALL * FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT DISTINCT * FROM rt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST(LOWER(rt0.c4) AS REAL) ASC, json(x'')  NULLS LAST LIMIT 4 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)))OR(CAST(rt0.c4 AS REAL))))OR(1266469598)))OR(rt0.c0 COLLATE RTRIM)))AND((~ (0.07874142475652901)))))AND(((rt0.c3)LIKE(rt0.c0)))))AND((('叨[8t') NOT BETWEEN (rt0.c2) AND (0.5361420675762121))))) ORDER BY CAST(LOWER(rt0.c4) AS REAL) ASC, json(x'')  NULLS LAST LIMIT 4;
SELECT ALL * FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT DISTINCT * FROM rt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST(LOWER(rt0.c4) AS REAL) ASC, json(x'')  NULLS LAST LIMIT 4 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)))OR(CAST(rt0.c4 AS REAL))))OR(1266469598)))OR(rt0.c0 COLLATE RTRIM)))AND((~ (0.07874142475652901)))))AND(((rt0.c3)LIKE(rt0.c0)))))AND((('叨[8t') NOT BETWEEN (rt0.c2) AND (0.5361420675762121))))) ORDER BY CAST(LOWER(rt0.c4) AS REAL) ASC, json(x'')  NULLS LAST LIMIT 4;
SELECT ALL * FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS BLOB));
SELECT DISTINCT * FROM rt0 WHERE (((CAST((NOT (rt0.c1)) AS BLOB))AND(((TRIM(DISTINCT rt0.c4)) NOT BETWEEN (((rt0.c4)*(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3)AND(((rt0.c3) NOTNULL))))OR(rt0.c0)))AND(rt0.c0 COLLATE BINARY))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS BLOB));
SELECT DISTINCT * FROM rt0 WHERE (((CAST((NOT (rt0.c1)) AS BLOB))AND(((TRIM(DISTINCT rt0.c4)) NOT BETWEEN (((rt0.c4)*(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3)AND(((rt0.c3) NOTNULL))))OR(rt0.c0)))AND(rt0.c0 COLLATE BINARY))) LIMIT 0;
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY CASE WHEN ((rt0.c2)<>(rt0.c3)) THEN (((rt0.c3, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c3, rt0.c3))) WHEN CAST(rt0.c2 AS NUMERIC) THEN (+ (rt0.c4)) END DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4)AND(CAST(MAX(rt0.c1, rt0.c4, 'y', rt0.c3, rt0.c2) AS TEXT)))) ORDER BY (('-934423939') NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (1412887847)) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c1)))>(((rt0.c2) IS FALSE)))) ORDER BY (('-934423939') NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (0x5436f527)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY CASE WHEN ((rt0.c2)<>(rt0.c3)) THEN (((rt0.c3, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c3, rt0.c3))) WHEN CAST(rt0.c2 AS NUMERIC) THEN (+ (rt0.c4)) END DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4)AND(CAST(MAX(rt0.c1, rt0.c4, 'y', rt0.c3, rt0.c2) AS TEXT)))) ORDER BY (('-934423939') NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (1412887847)) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c1)))>(((rt0.c2) IS FALSE)))) ORDER BY (('-934423939') NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (0x5436f527)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) BETWEEN (((((((rt0.c4)AND('9')))AND(rt0.c0)))AND(rt0.c2))) AND ('H{j8#4_ ')));
SELECT * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT)) BETWEEN (((((((rt0.c4)AND('9')))AND(rt0.c0)))AND(rt0.c2))) AND ('H{j8#4_ ')))AND(rt0.c0))) LIMIT 0x0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) BETWEEN (((((((rt0.c4)AND('9')))AND(rt0.c0)))AND(rt0.c2))) AND ('H{j8#4_ ')));
SELECT * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT)) BETWEEN (((((((rt0.c4)AND('9')))AND(rt0.c0)))AND(rt0.c2))) AND ('H{j8#4_ ')))AND(rt0.c0))) LIMIT 0x0;
SELECT * FROM rt0 WHERE (TRIM((- (rt0.c1)), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY rt0.c4 ASC, ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c4 COLLATE BINARY)) DESC, ((((rt0.c2 IN (0.2909260823506149, rt0.c0)), (+ (rt0.c0)), (((rt0.c1))>=((rt0.c0)))))<=((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)), rt0.c3 COLLATE RTRIM, (- (rt0.c1))))) ASC;
SELECT * FROM rt0 WHERE (TRIM((- (rt0.c1)), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY rt0.c4 ASC, ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c4 COLLATE BINARY)) DESC, ((((rt0.c2 IN (0.2909260823506149, rt0.c0)), (+ (rt0.c0)), (((rt0.c1))>=((rt0.c0)))))<=((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)), rt0.c3 COLLATE RTRIM, (- (rt0.c1))))) ASC INTERSECT SELECT * FROM rt0 WHERE (json_remove(rt0.c4 COLLATE RTRIM, ((((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))) ORDER BY rt0.c4 ASC, ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c4 COLLATE BINARY)) DESC, ((((rt0.c2 IN (0.2909260823506149, rt0.c0)), (+ (rt0.c0)), (((rt0.c1))>=((rt0.c0)))))<=((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)), rt0.c3 COLLATE RTRIM, (- (rt0.c1))))) ASC;
SELECT * FROM rt0 WHERE (TRIM((- (rt0.c1)), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY rt0.c4 ASC, ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c4 COLLATE BINARY)) DESC, ((((rt0.c2 IN (0.2909260823506149, rt0.c0)), (+ (rt0.c0)), (((rt0.c1))>=((rt0.c0)))))<=((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)), rt0.c3 COLLATE RTRIM, (- (rt0.c1))))) ASC;
SELECT * FROM rt0 WHERE (TRIM((- (rt0.c1)), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY rt0.c4 ASC, ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c4 COLLATE BINARY)) DESC, ((((rt0.c2 IN (0.2909260823506149, rt0.c0)), (+ (rt0.c0)), (((rt0.c1))>=((rt0.c0)))))<=((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)), rt0.c3 COLLATE RTRIM, (- (rt0.c1))))) ASC INTERSECT SELECT * FROM rt0 WHERE (json_remove(rt0.c4 COLLATE RTRIM, ((((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))) ORDER BY rt0.c4 ASC, ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c4 COLLATE BINARY)) DESC, ((((rt0.c2 IN (0.2909260823506149, rt0.c0)), (+ (rt0.c0)), (((rt0.c1))>=((rt0.c0)))))<=((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)), rt0.c3 COLLATE RTRIM, (- (rt0.c1))))) ASC;
SELECT * FROM rt0 WHERE ((~ (((rt0.c4)!=(rt0.c0))))) ORDER BY ((((rt0.c4) NOTNULL))+(((0.8287580442769814) NOT BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((~ (((rt0.c4)<>(rt0.c0))))) ORDER BY 0xffffffffe0c0e180  NULLS LAST, (((LIKELIHOOD(rt0.c1, rt0.c2), (rt0.c1 IN (rt0.c2))))<>(((((rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c2, 0.31214185096878644)) AND ((x'7322', rt0.c3))), (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) DESC;
SELECT * FROM rt0 WHERE ((~ (((rt0.c4)!=(rt0.c0))))) ORDER BY ((((rt0.c4) NOTNULL))+(((0.8287580442769814) NOT BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((~ (((rt0.c4)<>(rt0.c0))))) ORDER BY 0xffffffffe0c0e180  NULLS LAST, (((LIKELIHOOD(rt0.c1, rt0.c2), (rt0.c1 IN (rt0.c2))))<>(((((rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c2, 0.31214185096878644)) AND ((x'7322', rt0.c3))), (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) DESC;
SELECT ALL * FROM rt0 WHERE (SUBSTR(((rt0.c4) ISNULL), ((rt0.c4)>>(rt0.c1)))) ORDER BY CASE WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((0xffffffffea65c54b))) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) WHEN x'' THEN rt0.c3 ELSE (rt0.c4 IN ()) END DESC, (~ (((rt0.c3) NOT NULL)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((SUBSTR(((rt0.c4) ISNULL), ((rt0.c4)>>(rt0.c1))))AND(((((rt0.c2 COLLATE RTRIM)AND(CAST('-342243606' AS NUMERIC))))AND(((rt0.c2)/(rt0.c3))))))) ORDER BY CASE WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((-362429109))) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) WHEN x'' THEN rt0.c3 ELSE (rt0.c4 IN ()) END DESC, (~ (((rt0.c3) NOT NULL)))  NULLS FIRST LIMIT 2;
SELECT ALL * FROM rt0 WHERE (SUBSTR(((rt0.c4) ISNULL), ((rt0.c4)>>(rt0.c1)))) ORDER BY CASE WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((0xffffffffea65c54b))) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) WHEN x'' THEN rt0.c3 ELSE (rt0.c4 IN ()) END DESC, (~ (((rt0.c3) NOT NULL)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((SUBSTR(((rt0.c4) ISNULL), ((rt0.c4)>>(rt0.c1))))AND(((((rt0.c2 COLLATE RTRIM)AND(CAST('-342243606' AS NUMERIC))))AND(((rt0.c2)/(rt0.c3))))))) ORDER BY CASE WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((-362429109))) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) WHEN x'' THEN rt0.c3 ELSE (rt0.c4 IN ()) END DESC, (~ (((rt0.c3) NOT NULL)))  NULLS FIRST LIMIT 2;
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1)))<>(json_quote(rt0.c2))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c1)))<>(json_quote(rt0.c2))))AND(((ABS(rt0.c4))<=(0.4637977915911584))))) LIMIT 0X1;
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1)))<>(json_quote(rt0.c2))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c1)))<>(json_quote(rt0.c2))))AND(((ABS(rt0.c4))<=(0.4637977915911584))))) LIMIT 0X1;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)GLOB(rt0.c2)))OR(((((rt0.c2)OR(rt0.c4)))OR(rt0.c1)))))AND(HEX(DISTINCT rt0.c3))))OR(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END))) ORDER BY (((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)) IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)GLOB(rt0.c2)))OR(((((rt0.c2)OR(rt0.c4)))OR(rt0.c1)))))AND(HEX(DISTINCT rt0.c3))))OR(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END))) ORDER BY ((rt0.c1 COLLATE NOCASE)IS(CAST(rt0.c2 AS NUMERIC))) DESC  NULLS FIRST, CASE WHEN (((rt0.c3))<>((rt0.c2))) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c3)%(NULL)) THEN (((rt0.c0, rt0.c1))!=((rt0.c4, rt0.c1))) WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c0)-(rt0.c1)) END ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c0)));
SELECT DISTINCT * FROM rt0 WHERE ((+ (rt0.c0)));
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c0)));
SELECT DISTINCT * FROM rt0 WHERE ((+ (rt0.c0)));
SELECT ALL * FROM rt0 WHERE (((('j!' COLLATE NOCASE, (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), UPPER(rt0.c4), ((rt0.c1) IS TRUE), (rt0.c4 IN (rt0.c1))))==(((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), (((rt0.c1))<=((rt0.c3))), ((rt0.c2)IS(rt0.c2)), ((rt0.c0)<<(rt0.c3)), ((rt0.c3)-(rt0.c1))))));
SELECT * FROM rt0 WHERE (((('j!' COLLATE NOCASE, (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), UPPER(rt0.c4), ((rt0.c1) IS TRUE), (rt0.c4 IN (rt0.c1))))=(((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), (((rt0.c1))<=((rt0.c3))), ((rt0.c2)IS(rt0.c2)), ((rt0.c0)<<(rt0.c3)), ((rt0.c3)-(rt0.c1))))));
SELECT ALL * FROM rt0 WHERE (((('j!' COLLATE NOCASE, (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), UPPER(rt0.c4), ((rt0.c1) IS TRUE), (rt0.c4 IN (rt0.c1))))==(((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), (((rt0.c1))<=((rt0.c3))), ((rt0.c2)IS(rt0.c2)), ((rt0.c0)<<(rt0.c3)), ((rt0.c3)-(rt0.c1))))));
SELECT * FROM rt0 WHERE (((('j!' COLLATE NOCASE, (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), UPPER(rt0.c4), ((rt0.c1) IS TRUE), (rt0.c4 IN (rt0.c1))))=(((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), (((rt0.c1))<=((rt0.c3))), ((rt0.c2)IS(rt0.c2)), ((rt0.c0)<<(rt0.c3)), ((rt0.c3)-(rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE ((NOT (UNLIKELY(rt0.c2)))) ORDER BY (rt0.c0 COLLATE BINARY IN (IFNULL(rt0.c1, rt0.c3)))  NULLS FIRST, CAST(CASE rt0.c0  WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END AS INTEGER);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (UNLIKELY(rt0.c2)))) ORDER BY (rt0.c0 COLLATE BINARY IN (IFNULL(rt0.c1, rt0.c3)))  NULLS FIRST, CAST(CASE rt0.c0  WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END AS INTEGER) LIMIT 1 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (-332238111) ORDER BY (rt0.c0 COLLATE BINARY IN (IFNULL(rt0.c1, rt0.c3)))  NULLS FIRST, CAST(CASE rt0.c0  WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END AS INTEGER) LIMIT 1;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))>>(LIKELY(rt0.c1)))) ORDER BY NULL  NULLS FIRST, (rt0.c1 IN ()) COLLATE NOCASE ASC;
SELECT MIN(rt0.c0) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))>>(LIKELY(rt0.c1)))) ORDER BY NULL  NULLS FIRST, (rt0.c1 IN ()) COLLATE NOCASE ASC;
SELECT MIN(rt0.c0) FROM rt0 WHERE (CASE WHEN ((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c4)) THEN rt0.c1 END);
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (CASE WHEN ((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c4)) THEN rt0.c1 END);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ABS(CASE WHEN rt0.c2 THEN rt0.c0 END) ASC  NULLS LAST, ((NULL)<<(CAST(rt0.c1 AS NUMERIC)))  NULLS LAST, (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) IN (rt0.c0, ((((((x'')AND(rt0.c1)))OR(0.4553063870056139)))AND('-488985702'))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0)AND(CAST((((rt0.c1))<>(('sᴣ뀋h#'))) AS INTEGER)))) ORDER BY NULLIF(DISTINCT CAST('w' AS INTEGER), ((rt0.c4) BETWEEN (rt0.c3) AND (x'')))  NULLS FIRST, ((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END)AND(((rt0.c1)>>(rt0.c2)))))AND((rt0.c0 IN (rt0.c4)))))AND(((rt0.c1)AND(rt0.c1)))))AND(((rt0.c3)|(rt0.c1)))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ABS(CASE WHEN rt0.c2 THEN rt0.c0 END) ASC  NULLS LAST, ((NULL)<<(CAST(rt0.c1 AS NUMERIC)))  NULLS LAST, (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) IN (rt0.c0, ((((((x'')AND(rt0.c1)))OR(0.4553063870056139)))AND('-488985702'))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0)AND(CAST((((rt0.c1))<>(('sᴣ뀋h#'))) AS INTEGER)))) ORDER BY NULLIF(DISTINCT CAST('w' AS INTEGER), ((rt0.c4) BETWEEN (rt0.c3) AND (x'')))  NULLS FIRST, ((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END)AND(((rt0.c1)>>(rt0.c2)))))AND((rt0.c0 IN (rt0.c4)))))AND(((rt0.c1)AND(rt0.c1)))))AND(((rt0.c3)|(rt0.c1)))) ASC  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE (CASE COALESCE(rt0.c4, rt0.c2)  WHEN ((rt0.c2)&(rt0.c4)) THEN ((x'93')/(NULL)) WHEN '-388515569' THEN (rt0.c4 IN (rt0.c2)) WHEN NULL THEN CAST(NULL AS NUMERIC) END) ORDER BY UPPER(DISTINCT (~ (rt0.c0))) ASC, (((((((rt0.c0))<((rt0.c0))))AND(SQLITE_COMPILEOPTION_USED(rt0.c4))))AND(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE COALESCE(rt0.c4, rt0.c2)  WHEN ((rt0.c2)&(rt0.c4)) THEN ((x'93')/(NULL)) WHEN '-388515569' THEN (rt0.c4 IN (rt0.c2)) WHEN NULL THEN CAST(NULL AS NUMERIC) END)AND(CAST(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(x'1142dd')))OR(rt0.c3)) AS REAL)))) ORDER BY UPPER(DISTINCT (~ (rt0.c0))) ASC, (((((((rt0.c0))<((rt0.c0))))AND(SQLITE_COMPILEOPTION_USED(rt0.c4))))AND(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END)) LIMIT 3;
SELECT * FROM rt0 WHERE (json_array_length(rt0.c3 COLLATE RTRIM, ((((rt0.c2)AND(rt0.c0)))AND(rt0.c4))));
SELECT DISTINCT * FROM rt0 WHERE (((json_array_length(rt0.c3 COLLATE RTRIM, ((((rt0.c2)AND(rt0.c0)))AND(rt0.c4))))AND((((rt0.c4, rt0.c2)) BETWEEN ((((rt0.c0)-(rt0.c4)), ((rt0.c3)&(rt0.c4)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)), (((rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1))))))))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3))) AND (((rt0.c0)<(rt0.c4)))));
SELECT * FROM rt0 WHERE (json_array_length(rt0.c3 COLLATE RTRIM, ((((rt0.c2)AND(rt0.c0)))AND(rt0.c4))));
SELECT MAX(rt0.c2) FROM rt0 WHERE ((+ (CAST(rt0.c4 AS REAL)))) ORDER BY (CAST(1215547222 AS NUMERIC) IN ());
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE ((((+ (CAST(rt0.c4 AS REAL))))AND((((rt0.c1)|(rt0.c4)) IN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))))) ORDER BY (((rt0.c3, rt0.c4)) BETWEEN ((NULL, x'')) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))), rt0.c3 COLLATE BINARY))) DESC  NULLS LAST, rt0.c4 ASC  NULLS LAST LIMIT 2;
SELECT MAX(rt0.c3) FROM rt0 WHERE (CASE rt0.c1  WHEN x'6fd0' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END COLLATE BINARY) ORDER BY 1365622714  NULLS FIRST, ',XX%EL'  NULLS LAST;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((CASE rt0.c1  WHEN x'6fd0' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END COLLATE BINARY)AND(CAST((rt0.c2 IN (rt0.c2, rt0.c3, rt0.c3)) AS NUMERIC)))) ORDER BY 1365622714  NULLS FIRST, ',XX%EL'  NULLS LAST INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 NOT INDEXED WHERE (rt0.c4 COLLATE BINARY) ORDER BY 1365622714  NULLS FIRST, ',XX%EL'  NULLS LAST;
SELECT MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c1)==(rt0.c2))) NOT BETWEEN (((rt0.c2)||(rt0.c1))) AND (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((((((rt0.c1)==(rt0.c2))) NOT BETWEEN (((rt0.c2)||(rt0.c1))) AND (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(CAST(CASE rt0.c2  WHEN 0.4225964275324794 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS BLOB)))) LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c2)) BETWEEN ((x'', ((rt0.c4) IS TRUE))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c4)IS(rt0.c1)))))) ORDER BY ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c3)))>>(CAST(rt0.c0 AS NUMERIC))) ASC, ((((rt0.c0) IS TRUE))<<((((rt0.c2, '0.09115304906558863', rt0.c3, rt0.c4, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, x'cb', rt0.c2, rt0.c1)) AND ((x'', NULL, rt0.c0, rt0.c3, rt0.c2)))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c2)) BETWEEN ((x'', ((rt0.c4) IS TRUE))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c4)IS(rt0.c1))))))AND(CAST(((rt0.c0)*(rt0.c4)) AS INTEGER)))) ORDER BY json_insert(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c4 IN (rt0.c1)), rt0.c0 COLLATE NOCASE) DESC  NULLS FIRST, (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END IN ('-233609837')) ASC INTERSECT SELECT * FROM rt0 WHERE ((NOT ('#'))) ORDER BY json_insert(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c4 IN (rt0.c1)), rt0.c0 COLLATE NOCASE) DESC  NULLS FIRST, (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END IN ('-233609837')) ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c2)) BETWEEN ((x'', ((rt0.c4) IS TRUE))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c4)IS(rt0.c1)))))) ORDER BY ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c3)))>>(CAST(rt0.c0 AS NUMERIC))) ASC, ((((rt0.c0) IS TRUE))<<((((rt0.c2, '0.09115304906558863', rt0.c3, rt0.c4, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, x'cb', rt0.c2, rt0.c1)) AND ((x'', NULL, rt0.c0, rt0.c3, rt0.c2)))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c2)) BETWEEN ((x'', ((rt0.c4) IS TRUE))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c4)IS(rt0.c1))))))AND(CAST(((rt0.c0)*(rt0.c4)) AS INTEGER)))) ORDER BY json_insert(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c4 IN (rt0.c1)), rt0.c0 COLLATE NOCASE) DESC  NULLS FIRST, (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END IN ('-233609837')) ASC INTERSECT SELECT * FROM rt0 WHERE ((NOT ('#'))) ORDER BY json_insert(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c4 IN (rt0.c1)), rt0.c0 COLLATE NOCASE) DESC  NULLS FIRST, (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END IN ('-233609837')) ASC;
SELECT * FROM rt0 WHERE (CAST(((((((rt0.c2)AND(rt0.c3)))OR(0.27466906837819494)))OR(rt0.c3)) AS TEXT));
SELECT DISTINCT * FROM rt0 WHERE (CAST(((((((rt0.c2)AND(rt0.c3)))OR(0.27466906837819494)))OR(rt0.c3)) AS TEXT)) ORDER BY (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) BETWEEN ((rt0.c2 IN (rt0.c0))) AND (((rt0.c4)<<(rt0.c3)))), CASE rt0.c2  WHEN (rt0.c1 IN ()) THEN (((rt0.c3, rt0.c1))>=((rt0.c1, rt0.c3))) ELSE (- (rt0.c3)) END  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c1, rt0.c2)) BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c3, rt0.c4))))AND(((rt0.c4)IS(rt0.c3)))))AND(IFNULL(DISTINCT rt0.c0, rt0.c3))))OR(((rt0.c1) IS TRUE)))) ORDER BY (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) BETWEEN ((rt0.c2 IN (rt0.c0))) AND (((rt0.c4)<<(rt0.c3)))), CASE rt0.c2  WHEN (rt0.c1 IN ()) THEN (((rt0.c3, rt0.c1))>=((rt0.c1, rt0.c3))) ELSE (- (rt0.c3)) END  NULLS FIRST LIMIT 1;
SELECT * FROM rt0 WHERE (CAST(((((((rt0.c2)AND(rt0.c3)))OR(0.27466906837819494)))OR(rt0.c3)) AS TEXT));
SELECT DISTINCT * FROM rt0 WHERE (CAST(((((((rt0.c2)AND(rt0.c3)))OR(0.27466906837819494)))OR(rt0.c3)) AS TEXT)) ORDER BY (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) BETWEEN ((rt0.c2 IN (rt0.c0))) AND (((rt0.c4)<<(rt0.c3)))), CASE rt0.c2  WHEN (rt0.c1 IN ()) THEN (((rt0.c3, rt0.c1))>=((rt0.c1, rt0.c3))) ELSE (- (rt0.c3)) END  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c1, rt0.c2)) BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c3, rt0.c4))))AND(((rt0.c4)IS(rt0.c3)))))AND(IFNULL(DISTINCT rt0.c0, rt0.c3))))OR(((rt0.c1) IS TRUE)))) ORDER BY (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) BETWEEN ((rt0.c2 IN (rt0.c0))) AND (((rt0.c4)<<(rt0.c3)))), CASE rt0.c2  WHEN (rt0.c1 IN ()) THEN (((rt0.c3, rt0.c1))>=((rt0.c1, rt0.c3))) ELSE (- (rt0.c3)) END  NULLS FIRST LIMIT 1;
SELECT * FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (CAST(rt0.c4 AS TEXT))));
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (CAST(rt0.c4 AS TEXT)))) ORDER BY (((rt0.c4 IN ('-1543224555'))) ISNULL) DESC  NULLS LAST, (~ (((rt0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (CAST(rt0.c4 AS TEXT))));
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (CAST(rt0.c4 AS TEXT)))) ORDER BY (((rt0.c4 IN ('-1543224555'))) ISNULL) DESC  NULLS LAST, (~ (((rt0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c4)))AND((NOT (NULL)))))OR(CAST('928521122' AS NUMERIC))))OR(SQLITE_COMPILEOPTION_USED(rt0.c0))));
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c4)))AND((NOT (NULL)))))OR(CAST('928521122' AS NUMERIC))))OR(SQLITE_COMPILEOPTION_USED(rt0.c0)))) LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM) LIMIT 0X0;
SELECT MIN(rt0.c2) FROM rt0 WHERE (LOWER(NULL)) ORDER BY ((rt0.c1) NOTNULL) COLLATE NOCASE, (rt0.c4 COLLATE BINARY IN (((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)))) ASC, (- (LIKELY(DISTINCT rt0.c2)));
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (LOWER(NULL)) ORDER BY ((rt0.c1) NOTNULL) COLLATE NOCASE, (rt0.c4 COLLATE BINARY IN (((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)))) ASC, (- (LIKELY(DISTINCT rt0.c2))) LIMIT 0X1;
SELECT MAX(rt0.c4) FROM rt0 WHERE ((((rt0.c3)<<('-954504857')) IN ())) ORDER BY NULL ASC  NULLS FIRST, (((((((((((rt0.c1 IN (rt0.c1, rt0.c4)))OR(((rt0.c1)>(rt0.c2)))))OR(((rt0.c3) NOT NULL))))OR((+ (rt0.c0)))))OR(((rt0.c4)>=(rt0.c2)))))OR((~ (rt0.c2))));
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ((((((rt0.c3)<<('-954504857')) IN ()))AND(962419652))) ORDER BY NULL ASC  NULLS FIRST, (((((((((((rt0.c1 IN (rt0.c1, rt0.c4)))OR(((rt0.c1)>(rt0.c2)))))OR(((rt0.c3) NOT NULL))))OR((+ (rt0.c0)))))OR(((rt0.c4)>=(rt0.c2)))))OR((~ (rt0.c2)))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN 'b#|tu-X匮r' WHEN rt0.c3 THEN rt0.c1 END)/(((rt0.c1) BETWEEN (0.12444033802701782) AND (rt0.c1))))) ORDER BY NULL ASC  NULLS FIRST, (((((((((((rt0.c1 IN (rt0.c1, rt0.c4)))OR(((rt0.c1)>(rt0.c2)))))OR(((rt0.c3) NOT NULL))))OR((+ (rt0.c0)))))OR(((rt0.c4)>=(rt0.c2)))))OR((~ (rt0.c2)))) LIMIT 0x0;
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c4))<=((rt0.c4, rt0.c3))) COLLATE RTRIM) ORDER BY LAST_INSERT_ROWID(), LAST_INSERT_ROWID(), (((~ (rt0.c3))) NOT BETWEEN (((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c1))) AND (STRFTIME(rt0.c4, rt0.c0, x'fe7ce7', rt0.c3, rt0.c0)))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c4))<=((rt0.c4, rt0.c3))) COLLATE RTRIM) ORDER BY LAST_INSERT_ROWID(), LAST_INSERT_ROWID(), (((~ (rt0.c3))) NOT BETWEEN (((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c1))) AND (STRFTIME(rt0.c4, rt0.c0, x'fe7ce7', rt0.c3, rt0.c0)))  NULLS FIRST LIMIT 3;
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c4))<=((rt0.c4, rt0.c3))) COLLATE RTRIM) ORDER BY LAST_INSERT_ROWID(), LAST_INSERT_ROWID(), (((~ (rt0.c3))) NOT BETWEEN (((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c1))) AND (STRFTIME(rt0.c4, rt0.c0, x'fe7ce7', rt0.c3, rt0.c0)))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c4))<=((rt0.c4, rt0.c3))) COLLATE RTRIM) ORDER BY LAST_INSERT_ROWID(), LAST_INSERT_ROWID(), (((~ (rt0.c3))) NOT BETWEEN (((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c1))) AND (STRFTIME(rt0.c4, rt0.c0, x'fe7ce7', rt0.c3, rt0.c0)))  NULLS FIRST LIMIT 3;
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c4))) BETWEEN ((NOT (x'22'))) AND (((rt0.c3)IS(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE ((((((NOT (rt0.c4))) BETWEEN ((NOT (x'22'))) AND (((rt0.c3)IS(rt0.c3)))))AND(((((((rt0.c2)||(1849526044)))AND(rt0.c3 COLLATE BINARY)))AND(rt0.c3))))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c4))) BETWEEN ((NOT (x'22'))) AND (((rt0.c3)IS(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE ((((((NOT (rt0.c4))) BETWEEN ((NOT (x'22'))) AND (((rt0.c3)IS(rt0.c3)))))AND(((((((rt0.c2)||(1849526044)))AND(rt0.c3 COLLATE BINARY)))AND(rt0.c3))))) LIMIT 0X0;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE ((~ (IFNULL(rt0.c3, rt0.c1)))) ORDER BY x'57' DESC  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE ((~ (IFNULL(rt0.c3, rt0.c1)))) ORDER BY x'57' DESC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN (((x'')IS(rt0.c3))))) ORDER BY x'57' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c3 IN ())  WHEN 0X74b9136b THEN rt0.c0 ELSE 'X' END) ORDER BY (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((x'9fb0') IS TRUE), ((rt0.c3) NOT NULL), (NOT (NULL))))!=((((rt0.c4)<<(rt0.c0)), rt0.c4 COLLATE NOCASE, (rt0.c3 IN ()), ((((((rt0.c1)AND(rt0.c2)))AND('{}')))OR(rt0.c0))))), (+ (((((((rt0.c4)AND(rt0.c4)))OR(NULL)))AND(rt0.c4))))  NULLS FIRST, (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)) IN ()) DESC  NULLS LAST, ((NULL) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((rt0.c0 IN (rt0.c1, rt0.c0)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((CASE (rt0.c3 IN ())  WHEN 0X74b9136b THEN rt0.c0 ELSE 'X' END)AND((((((('')OR((((rt0.c4, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c1)) AND ((rt0.c0, 0.9213340385621018))))))AND(((rt0.c4) IS TRUE))))OR(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN '2002921546' END))))) ORDER BY (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((x'9fb0') IS TRUE), ((rt0.c3) NOT NULL), (NOT (NULL))))!=((((rt0.c4)<<(rt0.c0)), rt0.c4 COLLATE NOCASE, (rt0.c3 IN ()), ((((((rt0.c1)AND(rt0.c2)))AND('{}')))OR(rt0.c0))))), (+ (((((((rt0.c4)AND(rt0.c4)))OR(NULL)))AND(rt0.c4))))  NULLS FIRST, (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)) IN ()) DESC  NULLS LAST, ((NULL) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((rt0.c0 IN (rt0.c1, rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)<=(rt0.c3)) COLLATE NOCASE) ORDER BY ((((x'e888')%(rt0.c3))) NOT BETWEEN (((rt0.c1)|(rt0.c3))) AND (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)<(rt0.c3)) COLLATE NOCASE) ORDER BY ((rt0.c4)>=(rt0.c1)) COLLATE BINARY COLLATE BINARY  NULLS LAST, CASE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END  WHEN ((rt0.c4)LIKE(rt0.c2)) THEN '' WHEN CASE WHEN '粠''' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END WHEN (rt0.c2 IN ()) THEN (((rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c3)) AND ((rt0.c0, rt0.c2))) WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c4) NOT NULL) WHEN (((rt0.c4, rt0.c4))>=((rt0.c0, rt0.c4))) THEN rt0.c2 ELSE ((rt0.c0)AND(rt0.c4)) END  NULLS LAST, (rt0.c4 COLLATE NOCASE IN (((((rt0.c0)AND(rt0.c3)))OR(rt0.c1))))  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)<=(rt0.c3)) COLLATE NOCASE) ORDER BY ((((x'e888')%(rt0.c3))) NOT BETWEEN (((rt0.c1)|(rt0.c3))) AND (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)<(rt0.c3)) COLLATE NOCASE) ORDER BY ((rt0.c4)>=(rt0.c1)) COLLATE BINARY COLLATE BINARY  NULLS LAST, CASE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END  WHEN ((rt0.c4)LIKE(rt0.c2)) THEN '' WHEN CASE WHEN '粠''' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END WHEN (rt0.c2 IN ()) THEN (((rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c3)) AND ((rt0.c0, rt0.c2))) WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c4) NOT NULL) WHEN (((rt0.c4, rt0.c4))>=((rt0.c0, rt0.c4))) THEN rt0.c2 ELSE ((rt0.c0)AND(rt0.c4)) END  NULLS LAST, (rt0.c4 COLLATE NOCASE IN (((((rt0.c0)AND(rt0.c3)))OR(rt0.c1))))  NULLS LAST LIMIT 0x1;
SELECT * FROM rt0 WHERE ((((((((((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)))))OR(((rt0.c4)/(rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)))AND((((rt0.c2, rt0.c1, rt0.c4, rt0.c2))=((rt0.c0, rt0.c3, rt0.c2, rt0.c2))))))AND((((rt0.c4))<((rt0.c0))))));
SELECT * FROM rt0 WHERE ((((((((((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)))))OR(((rt0.c4)/(rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)))AND((((rt0.c2, rt0.c1, rt0.c4, rt0.c2))==((rt0.c0, rt0.c3, rt0.c2, rt0.c2))))))AND((((rt0.c4))<((rt0.c0)))))) LIMIT 0x1 INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c4)||(rt0.c4)))=(0.6895698808737336))) LIMIT 1;
SELECT * FROM rt0 WHERE ((((((((((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)))))OR(((rt0.c4)/(rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)))AND((((rt0.c2, rt0.c1, rt0.c4, rt0.c2))=((rt0.c0, rt0.c3, rt0.c2, rt0.c2))))))AND((((rt0.c4))<((rt0.c0))))));
SELECT * FROM rt0 WHERE ((((((((((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)))))OR(((rt0.c4)/(rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)))AND((((rt0.c2, rt0.c1, rt0.c4, rt0.c2))==((rt0.c0, rt0.c3, rt0.c2, rt0.c2))))))AND((((rt0.c4))<((rt0.c0)))))) LIMIT 0x1 INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c4)||(rt0.c4)))=(0.6895698808737336))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM) LIMIT 0x1 INTERSECT SELECT ALL * FROM rt0 WHERE (TOTAL_CHANGES()) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM) LIMIT 0x1 INTERSECT SELECT ALL * FROM rt0 WHERE (TOTAL_CHANGES()) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((LIKE(rt0.c2, rt0.c4)) NOTNULL)) ORDER BY CAST(HEX(NULL) AS INTEGER)  NULLS LAST, (((CAST(rt0.c1 AS REAL)))>(((NOT (rt0.c4))))) DESC;
SELECT * FROM rt0 WHERE (((((LIKE(rt0.c2, rt0.c4)) NOTNULL))AND(TRIM((((rt0.c2, rt0.c2))>=((rt0.c4, rt0.c1))))))) ORDER BY ((((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c1))) BETWEEN (LTRIM(rt0.c0)) AND (TRIM(DISTINCT rt0.c2))), ABS(DISTINCT (rt0.c2 IN ()))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((LIKE(rt0.c2, rt0.c4)) NOTNULL)) ORDER BY CAST(HEX(NULL) AS INTEGER)  NULLS LAST, (((CAST(rt0.c1 AS REAL)))>(((NOT (rt0.c4))))) DESC;
SELECT * FROM rt0 WHERE (((((LIKE(rt0.c2, rt0.c4)) NOTNULL))AND(TRIM((((rt0.c2, rt0.c2))>=((rt0.c4, rt0.c1))))))) ORDER BY ((((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c1))) BETWEEN (LTRIM(rt0.c0)) AND (TRIM(DISTINCT rt0.c2))), ABS(DISTINCT (rt0.c2 IN ()))  NULLS LAST;
SELECT MAX(rt0.c1) FROM rt0 WHERE (((rt0.c1) BETWEEN (x'46') AND (rt0.c4)) COLLATE RTRIM) ORDER BY (((- (rt0.c2)))+(((((((rt0.c1)OR(rt0.c3)))AND('-889791948')))OR(x'71')))) DESC, ((((~ (rt0.c1)), TRIM(rt0.c0, rt0.c1), ((rt0.c3)IS(rt0.c4)), ((rt0.c1) ISNULL)))<((((-1.669066924E9)IS(rt0.c1)), ((rt0.c4) NOT BETWEEN (x'') AND (rt0.c0)), ((rt0.c2) IS FALSE), (NOT (rt0.c0))))) DESC, rt0.c0;
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((((rt0.c1) BETWEEN (x'46') AND (rt0.c4)) COLLATE RTRIM)AND((((((((((+ (rt0.c0)))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR((rt0.c0 IN (rt0.c3, rt0.c2)))))OR(rt0.c3)))OR(((0.006475214417213326) NOTNULL)))))) ORDER BY (((- (rt0.c2)))+(((((((rt0.c1)OR(rt0.c3)))AND('-889791948')))OR(x'71')))) DESC, ((((~ (rt0.c1)), TRIM(rt0.c0, rt0.c1), ((rt0.c3)IS(rt0.c4)), ((rt0.c1) ISNULL)))<((((-1.669066924E9)IS(rt0.c1)), ((rt0.c4) NOT BETWEEN (x'') AND (rt0.c0)), ((rt0.c2) IS FALSE), (NOT (rt0.c0))))) DESC, rt0.c0 LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c2))) IS FALSE)) ORDER BY (((- (rt0.c2)))+(((((((rt0.c1)OR(rt0.c3)))AND('-889791948')))OR(x'71')))) DESC, ((((~ (rt0.c1)), TRIM(rt0.c0, rt0.c1), ((rt0.c3)IS(rt0.c4)), ((rt0.c1) ISNULL)))<((((-1.669066924E9)IS(rt0.c1)), ((rt0.c4) NOT BETWEEN (x'') AND (rt0.c0)), ((rt0.c2) IS FALSE), (NOT (rt0.c0))))) DESC, rt0.c0 LIMIT 0;
SELECT * FROM rt0 WHERE ((((((rt0.c4))=((rt0.c1)))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c4 END) AND (rt0.c3 COLLATE BINARY)));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4))=((rt0.c1)))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c4 END) AND (rt0.c3 COLLATE BINARY))) ORDER BY ((((((((rt0.c4 COLLATE NOCASE)AND(UPPER(rt0.c3))))AND(CAST(rt0.c4 AS REAL))))OR(((rt0.c4)<<(rt0.c0)))))OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS LAST, (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND (((((rt0.c3))<((rt0.c4)))))) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) ORDER BY ((((((((rt0.c4 COLLATE NOCASE)AND(UPPER(rt0.c3))))AND(CAST(rt0.c4 AS REAL))))OR(((rt0.c4)<<(rt0.c0)))))OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS LAST, (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND (((((rt0.c3))<((rt0.c4)))))) DESC LIMIT 0x1;
SELECT * FROM rt0 WHERE ((((((rt0.c4))=((rt0.c1)))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c4 END) AND (rt0.c3 COLLATE BINARY)));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4))=((rt0.c1)))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c4 END) AND (rt0.c3 COLLATE BINARY))) ORDER BY ((((((((rt0.c4 COLLATE NOCASE)AND(UPPER(rt0.c3))))AND(CAST(rt0.c4 AS REAL))))OR(((rt0.c4)<<(rt0.c0)))))OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS LAST, (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND (((((rt0.c3))<((rt0.c4)))))) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) ORDER BY ((((((((rt0.c4 COLLATE NOCASE)AND(UPPER(rt0.c3))))AND(CAST(rt0.c4 AS REAL))))OR(((rt0.c4)<<(rt0.c0)))))OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS LAST, (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND (((((rt0.c3))<((rt0.c4)))))) DESC LIMIT 0x1;
SELECT MIN(rt0.c1) FROM rt0 WHERE ((((((rt0.c1, rt0.c4, rt0.c0))!=((rt0.c0, rt0.c3, rt0.c1)))) BETWEEN (CAST(rt0.c4 AS BLOB)) AND (((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))));
SELECT MIN(rt0.c1) FROM rt0 WHERE ((((((rt0.c1, rt0.c4, rt0.c0))<>((rt0.c0, rt0.c3, rt0.c1)))) BETWEEN (CAST(rt0.c4 AS BLOB)) AND (((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c0))))) ORDER BY (((((((rt0.c4, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c0, rt0.c4, rt0.c3))))OR(rt0.c0)))AND(((rt0.c0) IS TRUE))) ASC  NULLS LAST LIMIT 0x3 INTERSECT SELECT MIN(rt0.c1) FROM rt0 WHERE (((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY (((((((rt0.c4, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c0, rt0.c4, rt0.c3))))OR(rt0.c0)))AND(((rt0.c0) IS TRUE))) ASC  NULLS LAST LIMIT 0x3;
SELECT MIN(rt0.c0) FROM rt0 WHERE ((rtreenode(rt0.c2, rt0.c3) IN (((rt0.c0)IS NOT(rt0.c0))))) ORDER BY ((x'7bf5ce')<=(IFNULL(DISTINCT rt0.c1, rt0.c1))) DESC  NULLS LAST, HEX('qbxt') ASC  NULLS LAST, ((((((rt0.c2)OR(rt0.c1)))OR(1.85483481E8))) NOTNULL) DESC;
SELECT MIN(rt0.c0) FROM rt0 NOT INDEXED WHERE ((((rtreenode(rt0.c2, rt0.c3) IN (((rt0.c0)IS NOT(rt0.c0)))))AND((rt0.c3 IN (rt0.c0 COLLATE NOCASE))))) ORDER BY (~ (rt0.c0)) ASC  NULLS LAST, ((((rt0.c3) IS FALSE))/(CASE WHEN x'f1' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) DESC LIMIT 0X0 INTERSECT SELECT MIN(rt0.c0) FROM rt0 WHERE ((((('887752115')IS NOT(rt0.c4)))>=((rt0.c2 IN (rt0.c2))))) ORDER BY (~ (rt0.c0)) ASC  NULLS LAST, ((((rt0.c3) IS FALSE))/(CASE WHEN x'f1' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) DESC LIMIT 0X0;
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS REAL)) ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c3)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE rt0.c1 COLLATE NOCASE END  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS REAL)) ORDER BY (((- (rt0.c0))) IS TRUE)  NULLS LAST, (NOT (-88156995)) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((NULL COLLATE RTRIM)AND((- (rt0.c2)))))AND(((rt0.c1)=(rt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2))))) ORDER BY (((- (rt0.c0))) IS TRUE)  NULLS LAST, (NOT (0xfffffffffabed4bd));
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS REAL)) ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c3)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE rt0.c1 COLLATE NOCASE END  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS REAL)) ORDER BY (((- (rt0.c0))) IS TRUE)  NULLS LAST, (NOT (-88156995)) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((NULL COLLATE RTRIM)AND((- (rt0.c2)))))AND(((rt0.c1)=(rt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2))))) ORDER BY (((- (rt0.c0))) IS TRUE)  NULLS LAST, (NOT (0xfffffffffabed4bd));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN 0xffffffffe72715b0 ELSE rt0.c2 END) NOT BETWEEN (NULL) AND (((rt0.c3)IS NOT(rt0.c2))))) ORDER BY (HEX(x'd8a2') IN (rt0.c0 COLLATE RTRIM, rt0.c3 COLLATE BINARY)) DESC;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN -416868944 ELSE rt0.c2 END) NOT BETWEEN (NULL) AND (((rt0.c3)IS NOT(rt0.c2))))) ORDER BY (HEX(x'd8a2') IN (rt0.c0 COLLATE RTRIM, rt0.c3 COLLATE BINARY)) DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (rt0.c0 COLLATE NOCASE))) ORDER BY (HEX(x'd8a2') IN (rt0.c0 COLLATE RTRIM, rt0.c3 COLLATE BINARY)) DESC;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN 0xffffffffe72715b0 ELSE rt0.c2 END) NOT BETWEEN (NULL) AND (((rt0.c3)IS NOT(rt0.c2))))) ORDER BY (HEX(x'd8a2') IN (rt0.c0 COLLATE RTRIM, rt0.c3 COLLATE BINARY)) DESC;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN -416868944 ELSE rt0.c2 END) NOT BETWEEN (NULL) AND (((rt0.c3)IS NOT(rt0.c2))))) ORDER BY (HEX(x'd8a2') IN (rt0.c0 COLLATE RTRIM, rt0.c3 COLLATE BINARY)) DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (rt0.c0 COLLATE NOCASE))) ORDER BY (HEX(x'd8a2') IN (rt0.c0 COLLATE RTRIM, rt0.c3 COLLATE BINARY)) DESC;
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (((NULL)AND((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)), ((rt0.c0) NOT BETWEEN ('&P9') AND (rt0.c4))))<=(((((rt0.c2, rt0.c1)) BETWEEN ((rt0.c3, rt0.c2)) AND ((rt0.c4, rt0.c3))), TRIM(rt0.c2))))))) ORDER BY ((json_type(rt0.c3)) BETWEEN (((((rt0.c4)AND(rt0.c0)))AND(rt0.c1))) AND (rt0.c3))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (((NULL)AND((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)), ((rt0.c0) NOT BETWEEN ('&P9') AND (rt0.c4))))<=(((((rt0.c2, rt0.c1)) BETWEEN ((rt0.c3, rt0.c2)) AND ((rt0.c4, rt0.c3))), TRIM(rt0.c2))))))) ORDER BY ((json_type(rt0.c3)) BETWEEN (((((rt0.c4)AND(rt0.c0)))AND(rt0.c1))) AND (rt0.c3))  NULLS FIRST;
SELECT MIN(rt0.c4) FROM rt0 WHERE (CASE WHEN '' THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN CAST(rt0.c0 AS BLOB) ELSE 0.6562677956592216 END);
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((CASE WHEN '' THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN CAST(rt0.c0 AS BLOB) ELSE 0.6562677956592216 END)AND((rt0.c0 IN ()) COLLATE BINARY))) INTERSECT SELECT MIN(rt0.c4) FROM rt0 WHERE (((rt0.c4)=((NOT (rt0.c4)))));
SELECT ALL * FROM rt0 WHERE ((((((((((((NOT (NULL)))AND((((rt0.c1, rt0.c1, 'ꁡ['))>=((rt0.c4, rt0.c1, rt0.c1))))))OR((rt0.c2 IN ()))))AND(((rt0.c4)GLOB(rt0.c3)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c4)))))AND(CAST(rt0.c2 AS NUMERIC)))) ORDER BY CASE WHEN (rt0.c4 IN (rt0.c2)) THEN ((rt0.c4) IS TRUE) WHEN ((0.9811832225814053) IS FALSE) THEN ((NULL)GLOB(rt0.c0)) WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN CASE WHEN rt0.c1 THEN '誒*z*' WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END ELSE CASE WHEN rt0.c0 THEN rt0.c3 END END, ((UPPER(rt0.c1)) BETWEEN (LIKELY(rt0.c4)) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((((((((((NOT (NULL)))AND((((rt0.c1, rt0.c1, 'ꁡ['))>((rt0.c4, rt0.c1, rt0.c1))))))OR((rt0.c2 IN ()))))AND(((rt0.c4)GLOB(rt0.c3)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c4)))))AND(CAST(rt0.c2 AS NUMERIC))))AND((('-195149794')AND(rt0.c1 COLLATE RTRIM))))) ORDER BY (((rt0.c3, rt0.c4, rt0.c4)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c4) NOTNULL))) AND ((((rt0.c0)*(rt0.c0)), (NOT (rt0.c4)), CAST(rt0.c4 AS BLOB)))) ASC, ((rt0.c4 COLLATE NOCASE)>=((rt0.c3 IN (rt0.c3)))) ASC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (((((((rt0.c1)LIKE(x'de10')))AND('bW')))AND(TOTAL_CHANGES()))) ORDER BY (((rt0.c3, rt0.c4, rt0.c4)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c4) NOTNULL))) AND ((((rt0.c0)*(rt0.c0)), (NOT (rt0.c4)), CAST(rt0.c4 AS BLOB)))) ASC, ((rt0.c4 COLLATE NOCASE)>=((rt0.c3 IN (rt0.c3)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((((((((NOT (NULL)))AND((((rt0.c1, rt0.c1, 'ꁡ['))>=((rt0.c4, rt0.c1, rt0.c1))))))OR((rt0.c2 IN ()))))AND(((rt0.c4)GLOB(rt0.c3)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c4)))))AND(CAST(rt0.c2 AS NUMERIC)))) ORDER BY CASE WHEN (rt0.c4 IN (rt0.c2)) THEN ((rt0.c4) IS TRUE) WHEN ((0.9811832225814053) IS FALSE) THEN ((NULL)GLOB(rt0.c0)) WHEN rt0.c3 COLLATE BINARY THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN CASE WHEN rt0.c1 THEN '誒*z*' WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END ELSE CASE WHEN rt0.c0 THEN rt0.c3 END END, ((UPPER(rt0.c1)) BETWEEN (LIKELY(rt0.c4)) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((((((((((NOT (NULL)))AND((((rt0.c1, rt0.c1, 'ꁡ['))>((rt0.c4, rt0.c1, rt0.c1))))))OR((rt0.c2 IN ()))))AND(((rt0.c4)GLOB(rt0.c3)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c4)))))AND(CAST(rt0.c2 AS NUMERIC))))AND((('-195149794')AND(rt0.c1 COLLATE RTRIM))))) ORDER BY (((rt0.c3, rt0.c4, rt0.c4)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c4) NOTNULL))) AND ((((rt0.c0)*(rt0.c0)), (NOT (rt0.c4)), CAST(rt0.c4 AS BLOB)))) ASC, ((rt0.c4 COLLATE NOCASE)>=((rt0.c3 IN (rt0.c3)))) ASC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (((((((rt0.c1)LIKE(x'de10')))AND('bW')))AND(TOTAL_CHANGES()))) ORDER BY (((rt0.c3, rt0.c4, rt0.c4)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c4) NOTNULL))) AND ((((rt0.c0)*(rt0.c0)), (NOT (rt0.c4)), CAST(rt0.c4 AS BLOB)))) ASC, ((rt0.c4 COLLATE NOCASE)>=((rt0.c3 IN (rt0.c3)))) ASC  NULLS FIRST;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (CAST(((rt0.c3)||(rt0.c3)) AS NUMERIC)) ORDER BY ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)AND(json_array_length(rt0.c4))) DESC  NULLS LAST, ((LIKE(rt0.c1, '611224210', '?')) IS TRUE) ASC;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (((CAST(((rt0.c3)||(rt0.c3)) AS NUMERIC))AND(LIKE(((rt0.c0) NOT NULL), (rt0.c1 IN ()))))) ORDER BY (((NOT (rt0.c4)))/('M
')), (+ (((rt0.c3) ISNULL))) ASC LIMIT 0x2;
SELECT * FROM rt0 WHERE (0Xfffffffffdf761d0) ORDER BY ((UPPER(rt0.c4))>>((((rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1)) AND ((rt0.c4, rt0.c0))))), LOWER(((rt0.c2)GLOB(rt0.c0))) ASC  NULLS LAST, (NOT (json_array_length(x'e4'))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((-34119216)AND((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 ELSE 0.3452581343325458 END IN (rt0.c1 COLLATE BINARY))))) ORDER BY ((UPPER(rt0.c4))>>((((rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1)) AND ((rt0.c4, rt0.c0))))), LOWER(((rt0.c2)GLOB(rt0.c0))) ASC  NULLS LAST, (NOT (json_array_length(x'e4'))) ASC  NULLS FIRST LIMIT 0X2 INTERSECT SELECT * FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c0, rt0.c0)) AS NUMERIC)) ORDER BY ((UPPER(rt0.c4))>>((((rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1)) AND ((rt0.c4, rt0.c0))))), LOWER(((rt0.c2)GLOB(rt0.c0))) ASC  NULLS LAST, (NOT (json_array_length(x'e4'))) ASC  NULLS FIRST LIMIT 2;
SELECT * FROM rt0 WHERE (0Xfffffffffdf761d0) ORDER BY ((UPPER(rt0.c4))>>((((rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1)) AND ((rt0.c4, rt0.c0))))), LOWER(((rt0.c2)GLOB(rt0.c0))) ASC  NULLS LAST, (NOT (json_array_length(x'e4'))) ASC  NULLS FIRST;
SELECT MAX(rt0.c2) FROM rt0 WHERE ((((rt0.c4, rt0.c4)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)), rt0.c3 COLLATE BINARY)) AND ((CAST('LZq17Y' AS NUMERIC), rt0.c1 COLLATE BINARY))));
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE ((((((rt0.c4, rt0.c4)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)), rt0.c3 COLLATE BINARY)) AND ((CAST('LZq17Y' AS NUMERIC), rt0.c1 COLLATE BINARY))))AND(INSTR(SUBSTR(rt0.c4, rt0.c0), (- (rt0.c1)))))) INTERSECT SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2))) BETWEEN (((rt0.c1)>>(rt0.c4))) AND (CAST(rt0.c4 AS BLOB)))) ORDER BY ((((rt0.c0)AND(rt0.c1)))<<(((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))AND('Q{'))))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2))) BETWEEN (((rt0.c1)>>(rt0.c4))) AND (CAST(rt0.c4 AS BLOB)))) ORDER BY ((((rt0.c0)AND(rt0.c1)))<<(((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))AND('Q{'))))  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4)AND(rt0.c0 COLLATE BINARY))) ORDER BY ((((rt0.c0)AND(rt0.c1)))<<(((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))AND('Q{'))))  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2))) BETWEEN (((rt0.c1)>>(rt0.c4))) AND (CAST(rt0.c4 AS BLOB)))) ORDER BY ((((rt0.c0)AND(rt0.c1)))<<(((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))AND('Q{'))))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2))) BETWEEN (((rt0.c1)>>(rt0.c4))) AND (CAST(rt0.c4 AS BLOB)))) ORDER BY ((((rt0.c0)AND(rt0.c1)))<<(((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))AND('Q{'))))  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4)AND(rt0.c0 COLLATE BINARY))) ORDER BY ((((rt0.c0)AND(rt0.c1)))<<(((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))AND('Q{'))))  NULLS FIRST LIMIT 0X1;
SELECT MIN(rt0.c2) FROM rt0 WHERE (((((rt0.c3)|(rt0.c1))) BETWEEN (((rt0.c0)>(rt0.c2))) AND (UNICODE(rt0.c0))));
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (((((rt0.c3)|(rt0.c1))) BETWEEN (((rt0.c0)>(rt0.c2))) AND (UNICODE(rt0.c0)))) ORDER BY (NOT ((NOT (rt0.c0)))), ((((((((rt0.c0) NOT NULL))AND((NOT (rt0.c3)))))AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 END)))OR(json_array(rt0.c0, rt0.c4)))  NULLS FIRST, (((- (rt0.c2)))>(((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))));
SELECT * FROM rt0 WHERE ((~ (((((rt0.c0)OR(rt0.c0)))OR(x'8284'))))) ORDER BY (((rt0.c1 COLLATE BINARY))>((((rt0.c4)==(rt0.c3))))), (((NULL)<=(rt0.c2)) IN ())  NULLS LAST, (((rt0.c3)<(rt0.c2)) IN ());
SELECT * FROM rt0 WHERE ((((~ (((((rt0.c0)OR(rt0.c0)))OR(x'8284')))))AND(IFNULL(((rt0.c4)||(rt0.c0)), x'd44d')))) ORDER BY rt0.c1 DESC  NULLS FIRST, CASE ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(0X5806a210)))AND(rt0.c2))  WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END THEN CAST(rt0.c2 AS TEXT) END, CAST((rt0.c1 IN (rt0.c3)) AS BLOB);
SELECT * FROM rt0 WHERE ((~ (((((rt0.c0)OR(rt0.c0)))OR(x'8284'))))) ORDER BY (((rt0.c1 COLLATE BINARY))>((((rt0.c4)==(rt0.c3))))), (((NULL)<=(rt0.c2)) IN ())  NULLS LAST, (((rt0.c3)<(rt0.c2)) IN ());
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (0.07557845120647033) AND (rt0.c0)) THEN ((rt0.c1)GLOB(rt0.c1)) ELSE ((rt0.c0)>=(rt0.c3)) END);
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (0.07557845120647033) AND (rt0.c0)) THEN ((rt0.c1)GLOB(rt0.c1)) ELSE ((rt0.c0)=(rt0.c3)) END) ORDER BY ((((rt0.c4)!=(rt0.c4))) NOT BETWEEN ((- (rt0.c4))) AND ((rt0.c0 IN (rt0.c2, rt0.c0)))) DESC, (NOT (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ASC, rt0.c0  NULLS LAST, CASE HEX(DISTINCT 'ꃑ)')  WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 END THEN ((rt0.c2)==(rt0.c0)) ELSE (NOT (rt0.c1)) END ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (0.07557845120647033) AND (rt0.c0)) THEN ((rt0.c1)GLOB(rt0.c1)) ELSE ((rt0.c0)>=(rt0.c3)) END);
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (0.07557845120647033) AND (rt0.c0)) THEN ((rt0.c1)GLOB(rt0.c1)) ELSE ((rt0.c0)=(rt0.c3)) END) ORDER BY ((((rt0.c4)!=(rt0.c4))) NOT BETWEEN ((- (rt0.c4))) AND ((rt0.c0 IN (rt0.c2, rt0.c0)))) DESC, (NOT (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ASC, rt0.c0  NULLS LAST, CASE HEX(DISTINCT 'ꃑ)')  WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 END THEN ((rt0.c2)==(rt0.c0)) ELSE (NOT (rt0.c1)) END ASC  NULLS FIRST LIMIT 1;
SELECT MIN(rt0.c3) FROM rt0 WHERE (((0.39874193676725367) IS TRUE));
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (((((0.39874193676725367) IS TRUE))AND((CAST(rt0.c2 AS REAL) IN (CAST(rt0.c1 AS BLOB), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 ELSE x'cffa' END, ((x'70') ISNULL)))))) ORDER BY ((((rt0.c2)<(rt0.c0)))AND((((rt0.c4)) BETWEEN ((0.1342178195373417)) AND ((rt0.c2))))) LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (((CAST(rt0.c4 AS NUMERIC))|(COALESCE(rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt0.c4, rt0.c2)))) ORDER BY ((((rt0.c2)<(rt0.c0)))AND((((rt0.c4)) BETWEEN ((0.1342178195373417)) AND ((rt0.c2))))) LIMIT 0;
SELECT * FROM rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c3 ELSE rt0.c2 END))<((0xffffffff887e724a)))) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE RTRIM, (((- (rt0.c4))) NOTNULL) DESC, ((((rt0.c1) BETWEEN (rt0.c1) AND (x'9b'))) IS FALSE) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c3 ELSE rt0.c2 END))<((-2004979126))))AND(((rt0.c0 IN (rt0.c2)) IN (CAST(NULL AS INTEGER)))))) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE RTRIM, (((- (rt0.c4))) NOTNULL) DESC, ((((rt0.c1) BETWEEN (rt0.c1) AND (x'9b'))) IS FALSE) ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ('-867657569') ORDER BY CAST(rt0.c3 AS TEXT) COLLATE RTRIM, (((- (rt0.c4))) NOTNULL) DESC, ((((rt0.c1) BETWEEN (rt0.c1) AND (x'9b'))) IS FALSE) ASC;
SELECT * FROM rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c3 ELSE rt0.c2 END))<((0xffffffff887e724a)))) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE RTRIM, (((- (rt0.c4))) NOTNULL) DESC, ((((rt0.c1) BETWEEN (rt0.c1) AND (x'9b'))) IS FALSE) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c3 ELSE rt0.c2 END))<((-2004979126))))AND(((rt0.c0 IN (rt0.c2)) IN (CAST(NULL AS INTEGER)))))) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE RTRIM, (((- (rt0.c4))) NOTNULL) DESC, ((((rt0.c1) BETWEEN (rt0.c1) AND (x'9b'))) IS FALSE) ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ('-867657569') ORDER BY CAST(rt0.c3 AS TEXT) COLLATE RTRIM, (((- (rt0.c4))) NOTNULL) DESC, ((((rt0.c1) BETWEEN (rt0.c1) AND (x'9b'))) IS FALSE) ASC;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)==((('!fzd1') BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY rt0.c2  NULLS FIRST, ((((rt0.c2) IS FALSE))OR(rt0.c4)) ASC  NULLS LAST;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((rt0.c3 COLLATE RTRIM)=((('!fzd1') BETWEEN (rt0.c3) AND (rt0.c0)))))AND(NULLIF(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)), (rt0.c2 IN (rt0.c3)))))) ORDER BY (+ (CAST(rt0.c4 AS BLOB))), rt0.c2  NULLS FIRST, CAST(1737301311 AS NUMERIC) DESC  NULLS LAST, (- (((rt0.c4)>>(rt0.c3)))) ASC INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (CAST(TYPEOF(rt0.c0) AS BLOB)) ORDER BY (+ (CAST(rt0.c4 AS BLOB))), rt0.c2  NULLS FIRST, CAST(0x678d1d3f AS NUMERIC) DESC  NULLS LAST, (- (((rt0.c4)>>(rt0.c3)))) ASC;
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1)) AS INTEGER));
SELECT ALL * FROM rt0 WHERE (((CAST(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1)) AS INTEGER))AND(((CAST(rt0.c1 AS NUMERIC))<=((rt0.c2 IN (rt0.c3))))))) ORDER BY (IFNULL(rt0.c2, rt0.c0) IN ()), ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))) ISNULL)  NULLS FIRST, (- (((rt0.c0)<=(rt0.c2)))) DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1)) AS INTEGER));
SELECT ALL * FROM rt0 WHERE (((CAST(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1)) AS INTEGER))AND(((CAST(rt0.c1 AS NUMERIC))<=((rt0.c2 IN (rt0.c3))))))) ORDER BY (IFNULL(rt0.c2, rt0.c0) IN ()), ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))) ISNULL)  NULLS FIRST, (- (((rt0.c0)<=(rt0.c2)))) DESC LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1))))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1))))))AND(x'c1'))) ORDER BY ((rt0.c4 COLLATE NOCASE)||(((rt0.c2)<(rt0.c0))))  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c4)!=(rt0.c2))) BETWEEN (TYPEOF(DISTINCT rt0.c2)) AND (json(rt0.c1)))) ORDER BY ((rt0.c4 COLLATE NOCASE)||(((rt0.c2)<(rt0.c0))))  NULLS FIRST;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((CAST(rt0.c4 AS REAL)) NOT BETWEEN (rt0.c2) AND ((- (rt0.c3))))) ORDER BY rt0.c2 ASC;
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((CAST(rt0.c4 AS REAL)) NOT BETWEEN (rt0.c2) AND ((- (rt0.c3))))) ORDER BY (((((rt0.c1, rt0.c4))<((rt0.c4, rt0.c0)))) BETWEEN (rt0.c4 COLLATE RTRIM) AND (((rt0.c2)GLOB(rt0.c2))))  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)GLOB(((rt0.c3) NOT NULL)))) ORDER BY (((((rt0.c1, rt0.c4))<((rt0.c4, rt0.c0)))) BETWEEN (rt0.c4 COLLATE RTRIM) AND (((rt0.c2)GLOB(rt0.c2))))  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))) AND ((rt0.c4 COLLATE RTRIM))));
SELECT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))) AND ((rt0.c4 COLLATE RTRIM))))AND(rt0.c1))) LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE (rt0.c1) LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))) AND ((rt0.c4 COLLATE RTRIM))));
SELECT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))) AND ((rt0.c4 COLLATE RTRIM))))AND(rt0.c1))) LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE (rt0.c1) LIMIT 0X2;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((rt0.c4)>=(((rt0.c1)=(rt0.c4)))));
SELECT MAX(rt0.c3) FROM rt0 WHERE (((rt0.c4)=(((rt0.c1)=(rt0.c4))))) LIMIT 1;
SELECT * FROM rt0 WHERE (((((((rt0.c3)OR(((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))))AND(((rt0.c4)IS NOT(rt0.c4)))))AND(rt0.c2)));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3)OR(((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))))AND(((rt0.c4)IS NOT(rt0.c4)))))AND(rt0.c2))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4))==((rt0.c0))))|((rt0.c1 IN (rt0.c3, rt0.c4, rt0.c1))))) LIMIT 2;
SELECT * FROM rt0 WHERE (((((((rt0.c3)OR(((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))))AND(((rt0.c4)IS NOT(rt0.c4)))))AND(rt0.c2)));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3)OR(((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))))AND(((rt0.c4)IS NOT(rt0.c4)))))AND(rt0.c2))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4))==((rt0.c0))))|((rt0.c1 IN (rt0.c3, rt0.c4, rt0.c1))))) LIMIT 2;
SELECT * FROM rt0 WHERE (((('1578407148')) NOT BETWEEN ((((rt0.c2)IS NOT(rt0.c2)))) AND ((rt0.c3 COLLATE BINARY)))) ORDER BY (- (((rt0.c2)GLOB(rt0.c2))));
SELECT DISTINCT * FROM rt0 WHERE (((((('1578407148')) NOT BETWEEN ((((rt0.c2)IS NOT(rt0.c2)))) AND ((rt0.c3 COLLATE BINARY))))AND(CAST(rt0.c3 AS TEXT)))) ORDER BY (- (((rt0.c2)GLOB(rt0.c2)))) LIMIT 0x0;
SELECT * FROM rt0 WHERE (((('1578407148')) NOT BETWEEN ((((rt0.c2)IS NOT(rt0.c2)))) AND ((rt0.c3 COLLATE BINARY)))) ORDER BY (- (((rt0.c2)GLOB(rt0.c2))));
SELECT DISTINCT * FROM rt0 WHERE (((((('1578407148')) NOT BETWEEN ((((rt0.c2)IS NOT(rt0.c2)))) AND ((rt0.c3 COLLATE BINARY))))AND(CAST(rt0.c3 AS TEXT)))) ORDER BY (- (((rt0.c2)GLOB(rt0.c2)))) LIMIT 0x0;
SELECT MAX(rt0.c2) FROM rt0 WHERE ('eF艚') ORDER BY ((rt0.c4) NOT BETWEEN ((((rt0.c0))=(('0.4485641792259819')))) AND (((rt0.c2)|(rt0.c0)))) ASC;
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE ((('eF艚')AND(x'61'))) ORDER BY ((IFNULL(DISTINCT rt0.c3, rt0.c3))>=(((rt0.c2)=('*k䞁8KCgr')))) ASC, (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c4 COLLATE NOCASE, '647083354', ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))) AND ((rt0.c0, ((rt0.c1)LIKE(rt0.c1)), rt0.c1 COLLATE RTRIM))) DESC LIMIT 0X1;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND (((('ﺲ]Y') NOT BETWEEN (rt0.c4) AND (rt0.c1)))))) ORDER BY (((('p' IN (rt0.c2)), CAST(rt0.c4 AS INTEGER)))==((((0.4264543196548669) NOT BETWEEN (rt0.c3) AND (rt0.c4)), (~ (rt0.c3))))) DESC;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND (((('ﺲ]Y') NOT BETWEEN (rt0.c4) AND (rt0.c1))))))AND((((NOT (rt0.c2)))IS(((rt0.c4) ISNULL)))))) ORDER BY '' INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c3 IN (0.5638587232048043, rt0.c2, '1378063360')) THEN ((rt0.c0)|(rt0.c2)) WHEN ((rt0.c4)IS NOT(rt0.c2)) THEN ((rt0.c1)%(rt0.c4)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END THEN x'927b' WHEN CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN 0xffffffff81008ff9 ELSE rt0.c4 END THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) ORDER BY '';
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)/(rt0.c2))) BETWEEN (((((NULL)OR('-1631266411')))OR(rt0.c0))) AND (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c2)))));
SELECT * FROM rt0 WHERE (((((rt0.c2)/(rt0.c2))) BETWEEN (((((NULL)OR('-1631266411')))OR(rt0.c0))) AND (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c2))))) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (CASE ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c4))  WHEN rt0.c1 THEN rt0.c3 END) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)/(rt0.c2))) BETWEEN (((((NULL)OR('-1631266411')))OR(rt0.c0))) AND (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c2)))));
SELECT * FROM rt0 WHERE (((((rt0.c2)/(rt0.c2))) BETWEEN (((((NULL)OR('-1631266411')))OR(rt0.c0))) AND (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c2))))) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (CASE ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c4))  WHEN rt0.c1 THEN rt0.c3 END) LIMIT 0X0;
SELECT * FROM rt0 WHERE ((((rt0.c2)-(rt0.c0)) IN ()));
SELECT * FROM rt0 WHERE ((((((rt0.c2)-(rt0.c0)) IN ()))AND('bk')));
SELECT * FROM rt0 WHERE ((((rt0.c2)-(rt0.c0)) IN ()));
SELECT * FROM rt0 WHERE ((((((rt0.c2)-(rt0.c0)) IN ()))AND('bk')));
SELECT * FROM rt0 WHERE ((((((((rt0.c1))!=((rt0.c2))))OR(((rt0.c4) ISNULL))))OR(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT * FROM rt0 WHERE ((((((((((rt0.c1))<>((rt0.c2))))OR(((rt0.c4) ISNULL))))OR(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)))))AND(rt0.c1))) INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))<=(HEX(rt0.c3))));
SELECT * FROM rt0 WHERE ((((((((rt0.c1))!=((rt0.c2))))OR(((rt0.c4) ISNULL))))OR(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT * FROM rt0 WHERE ((((((((((rt0.c1))<>((rt0.c2))))OR(((rt0.c4) ISNULL))))OR(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)))))AND(rt0.c1))) INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))<=(HEX(rt0.c3))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((SQLITE_COMPILEOPTION_GET(rt0.c4))))) ORDER BY (((~ (rt0.c0))) IS FALSE) DESC  NULLS LAST, ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<<((- (rt0.c1))));
SELECT * FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((SQLITE_COMPILEOPTION_GET(rt0.c4))))) ORDER BY x'31' INTERSECT SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))) AND ('~'))) ORDER BY x'31';
SELECT ALL * FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((SQLITE_COMPILEOPTION_GET(rt0.c4))))) ORDER BY (((~ (rt0.c0))) IS FALSE) DESC  NULLS LAST, ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<<((- (rt0.c1))));
SELECT * FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((SQLITE_COMPILEOPTION_GET(rt0.c4))))) ORDER BY x'31' INTERSECT SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))) AND ('~'))) ORDER BY x'31';
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN (rt0.c3)) THEN ((rt0.c4)GLOB(rt0.c4)) END) ORDER BY ((rt0.c3) NOTNULL), (rt0.c3 IN (CAST(rt0.c0 AS INTEGER))) DESC, (- (((((((rt0.c4)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN (rt0.c3)) THEN ((rt0.c4)GLOB(rt0.c4)) END) ORDER BY '-1631266411' LIMIT 0X1;
SELECT MIN(rt0.c3) FROM rt0 WHERE ((((((rt0.c1, rt0.c3, x'1a', rt0.c3))>((rt0.c4, rt0.c3, rt0.c1, rt0.c3))))GLOB(LTRIM(rt0.c3))));
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE ((((((rt0.c1, rt0.c3, x'1a', rt0.c3))>((rt0.c4, rt0.c3, rt0.c1, rt0.c3))))GLOB(LTRIM(rt0.c3)))) ORDER BY (((rt0.c1 IN (rt0.c3, rt0.c1))) BETWEEN ((rt0.c0 IN (rt0.c0, rt0.c3))) AND (CAST(rt0.c1 AS NUMERIC))), (COALESCE(DISTINCT rt0.c3, rt0.c4, rt0.c2) IN ()) LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c0)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END, CAST(rt0.c2 AS NUMERIC))) AND ((CAST(rt0.c4 AS INTEGER), ((rt0.c2) IS TRUE))))) ORDER BY (((((((((((~ (rt0.c3)))AND((+ (rt0.c4)))))AND(CAST(0.03402249014476311 AS TEXT))))OR(rt0.c1)))OR(load_extension(rt0.c0))))OR(((rt0.c4) BETWEEN (0.6712567612487759) AND (rt0.c1))))  NULLS FIRST, rt0.c4 COLLATE BINARY ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0, rt0.c0)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END, CAST(rt0.c2 AS NUMERIC))) AND ((CAST(rt0.c4 AS INTEGER), ((rt0.c2) IS TRUE)))))AND(CASE WHEN ((((((rt0.c2)OR('.z5')))OR(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c4)<<(rt0.c3)) ELSE json_type(rt0.c1) END))) ORDER BY (+ (rt0.c2)) COLLATE BINARY DESC, ((((((x'')OR((~ (rt0.c3)))))AND(x'')))AND(((rt0.c4) IS FALSE))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c3) NOT NULL) AS INTEGER)) ORDER BY (+ (rt0.c2)) COLLATE BINARY DESC, ((((((x'')OR((~ (rt0.c3)))))AND(x'')))AND(((rt0.c4) IS FALSE))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c0)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END, CAST(rt0.c2 AS NUMERIC))) AND ((CAST(rt0.c4 AS INTEGER), ((rt0.c2) IS TRUE))))) ORDER BY (((((((((((~ (rt0.c3)))AND((+ (rt0.c4)))))AND(CAST(0.03402249014476311 AS TEXT))))OR(rt0.c1)))OR(load_extension(rt0.c0))))OR(((rt0.c4) BETWEEN (0.6712567612487759) AND (rt0.c1))))  NULLS FIRST, rt0.c4 COLLATE BINARY ASC;
SELECT * FROM rt0 WHERE (((((((((((((((((rt0.c0)GLOB(rt0.c2)))OR(((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))))AND(x'' COLLATE NOCASE)))AND(((NULL)*(rt0.c1)))))OR(rt0.c3 COLLATE BINARY)))OR(rt0.c2 COLLATE RTRIM)))OR(UPPER(rt0.c3))))AND(((rt0.c2)<=(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((((rt0.c0)GLOB(rt0.c2)))OR(((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))))AND(x'' COLLATE NOCASE)))AND(((NULL)*(rt0.c1)))))OR(rt0.c3 COLLATE BINARY)))OR(rt0.c2 COLLATE RTRIM)))OR(UPPER(rt0.c3))))AND(((rt0.c2)<(rt0.c3)))))AND((((NOT (rt0.c3))) NOT NULL)))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((NOT (rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) LIMIT 0;
SELECT * FROM rt0 WHERE (((((((((((((((((rt0.c0)GLOB(rt0.c2)))OR(((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))))AND(x'' COLLATE NOCASE)))AND(((NULL)*(rt0.c1)))))OR(rt0.c3 COLLATE BINARY)))OR(rt0.c2 COLLATE RTRIM)))OR(UPPER(rt0.c3))))AND(((rt0.c2)<=(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((((rt0.c0)GLOB(rt0.c2)))OR(((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))))AND(x'' COLLATE NOCASE)))AND(((NULL)*(rt0.c1)))))OR(rt0.c3 COLLATE BINARY)))OR(rt0.c2 COLLATE RTRIM)))OR(UPPER(rt0.c3))))AND(((rt0.c2)<(rt0.c3)))))AND((((NOT (rt0.c3))) NOT NULL)))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((NOT (rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) LIMIT 0;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE ((((rt0.c3 IN ()))LIKE(1997742294))) ORDER BY ((((((((((rt0.c0) IS TRUE))AND(((rt0.c2)*(rt0.c3)))))AND(CAST(rt0.c2 AS TEXT))))OR(NULL)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE 0.9709118261758629 END)) DESC  NULLS LAST, LIKELY(rt0.c0 COLLATE NOCASE)  NULLS LAST;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE ((((rt0.c3 IN ()))LIKE(1997742294))) ORDER BY ((((((((((rt0.c0) IS TRUE))AND(((rt0.c2)*(rt0.c3)))))AND(CAST(rt0.c2 AS TEXT))))OR(NULL)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE 0.9709118261758629 END)) DESC  NULLS LAST, LIKELY(rt0.c0 COLLATE NOCASE)  NULLS LAST INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)) IN ())) ORDER BY ((((((((((rt0.c0) IS TRUE))AND(((rt0.c2)*(rt0.c3)))))AND(CAST(rt0.c2 AS TEXT))))OR(NULL)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE 0.9709118261758629 END)) DESC  NULLS LAST, LIKELY(rt0.c0 COLLATE NOCASE)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((rt0.c3)AND((CAST('-254992079' AS REAL) IN (NULL COLLATE NOCASE))))) ORDER BY ((((rt0.c2)<>(rt0.c4))) ISNULL) DESC, ((rt0.c3) IS TRUE) COLLATE RTRIM COLLATE NOCASE  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)+(rt0.c2)))AND(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY (((x'37', x'ab'))<=((rt0.c2 COLLATE BINARY, ((((rt0.c3)AND(rt0.c0)))OR(rt0.c3))))), CASE ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((rt0.c1)IS(rt0.c0)) ELSE CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END END DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)+(rt0.c2)))AND(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c0 END)))AND(CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN '	B' END))) ORDER BY (((+ (1548812972)))%(((rt0.c4)-(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)||(rt0.c3)))IS(((((((((rt0.c3)OR(rt0.c4)))OR(x'd8')))OR(rt0.c2)))OR(rt0.c3)))));
SELECT * FROM rt0 WHERE (((((((rt0.c1)||(rt0.c3)))IS(((((((((rt0.c3)OR(rt0.c4)))OR(x'd8')))OR(rt0.c2)))OR(rt0.c3)))))AND(CAST(NULL COLLATE NOCASE AS TEXT)))) INTERSECT SELECT ALL * FROM rt0 WHERE (NULLIF(NULLIF(DISTINCT rt0.c4, rt0.c0), ((rt0.c2) NOT NULL)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)||(rt0.c3)))IS(((((((((rt0.c3)OR(rt0.c4)))OR(x'd8')))OR(rt0.c2)))OR(rt0.c3)))));
SELECT * FROM rt0 WHERE (((((((rt0.c1)||(rt0.c3)))IS(((((((((rt0.c3)OR(rt0.c4)))OR(x'd8')))OR(rt0.c2)))OR(rt0.c3)))))AND(CAST(NULL COLLATE NOCASE AS TEXT)))) INTERSECT SELECT ALL * FROM rt0 WHERE (NULLIF(NULLIF(DISTINCT rt0.c4, rt0.c0), ((rt0.c2) NOT NULL)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c4, ((rt0.c3) IS FALSE), (rt0.c1 IN (rt0.c3))))>=((rt0.c4, ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c2 AS NUMERIC))))) ORDER BY ((((((((((CAST(rt0.c0 AS BLOB))OR(((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)))))OR(((rt0.c2) ISNULL))))AND((((rt0.c2))>=((rt0.c2))))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN '-1645278060' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC;
SELECT * FROM rt0 WHERE ((((rt0.c4, ((rt0.c3) IS FALSE), (rt0.c1 IN (rt0.c3))))>=((rt0.c4, ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c2 AS NUMERIC))))) ORDER BY ((((((((((CAST(rt0.c0 AS BLOB))OR(((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)))))OR(((rt0.c2) ISNULL))))AND((((rt0.c2))>=((rt0.c2))))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN '-1645278060' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c3)))OR(((rt0.c4) NOTNULL)))) ORDER BY ((((((((((CAST(rt0.c0 AS BLOB))OR(((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)))))OR(((rt0.c2) ISNULL))))AND((((rt0.c2))>=((rt0.c2))))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN '-1645278060' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4, ((rt0.c3) IS FALSE), (rt0.c1 IN (rt0.c3))))>=((rt0.c4, ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c2 AS NUMERIC))))) ORDER BY ((((((((((CAST(rt0.c0 AS BLOB))OR(((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)))))OR(((rt0.c2) ISNULL))))AND((((rt0.c2))>=((rt0.c2))))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN '-1645278060' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC;
SELECT * FROM rt0 WHERE ((((rt0.c4, ((rt0.c3) IS FALSE), (rt0.c1 IN (rt0.c3))))>=((rt0.c4, ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c2 AS NUMERIC))))) ORDER BY ((((((((((CAST(rt0.c0 AS BLOB))OR(((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)))))OR(((rt0.c2) ISNULL))))AND((((rt0.c2))>=((rt0.c2))))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN '-1645278060' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c3)))OR(((rt0.c4) NOTNULL)))) ORDER BY ((((((((((CAST(rt0.c0 AS BLOB))OR(((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)))))OR(((rt0.c2) ISNULL))))AND((((rt0.c2))>=((rt0.c2))))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN '-1645278060' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (rt0.c4);
SELECT ALL * FROM rt0 WHERE (rt0.c4) INTERSECT SELECT * FROM rt0 WHERE ((((('#(~5t틈', rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c1, rt0.c4, '1458453768', '-322390335'))) IN ()));
SELECT ALL * FROM rt0 WHERE (rt0.c4);
SELECT ALL * FROM rt0 WHERE (rt0.c4) INTERSECT SELECT * FROM rt0 WHERE ((((('#(~5t틈', rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c1, rt0.c4, '1458453768', '-322390335'))) IN ()));
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (((((((((0.31711248445895235 COLLATE BINARY)AND(CAST(rt0.c1 AS INTEGER))))OR((rt0.c3 IN ('-1086842203')))))AND((rt0.c4 IN (rt0.c3)))))AND(((rt0.c3)>(rt0.c2))))) ORDER BY rt0.c0, CASE WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END THEN ((NULL) IS TRUE) END  NULLS LAST;
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((((((((0.31711248445895235 COLLATE BINARY)AND(CAST(rt0.c1 AS INTEGER))))OR((rt0.c3 IN ('-1086842203')))))AND((rt0.c4 IN (rt0.c3)))))AND(((rt0.c3)>(rt0.c2))))) ORDER BY '-1999634267' LIMIT 2;
SELECT ALL * FROM rt0 WHERE (LOWER(((x'') IS FALSE))) ORDER BY (((((rt0.c0)%(rt0.c3)), '}KW+[n''Lp', (+ (rt0.c4)), json_object(rt0.c0, rt0.c2, rt0.c1)))<=(((~ (rt0.c0)), ((((rt0.c4)AND(x'9e92')))AND(rt0.c1)), ((rt0.c2)-(rt0.c1)), rt0.c3)))  NULLS LAST, ((((((((rt0.c3)AND(rt0.c2)))OR('-496310961')))OR((((rt0.c4, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4)) AND ((rt0.c2, rt0.c2))))))AND(((rt0.c2)||(rt0.c2)))), rt0.c0, ((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2 COLLATE RTRIM)))OR(TRIM(rt0.c4))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((LOWER(((x'') IS FALSE)))AND(((((rt0.c3)=(rt0.c3)))>(json_patch(rt0.c4, rt0.c3)))))) ORDER BY rt0.c1 DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))IS NOT(((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (LOWER(((x'') IS FALSE))) ORDER BY (((((rt0.c0)%(rt0.c3)), '}KW+[n''Lp', (+ (rt0.c4)), json_object(rt0.c0, rt0.c2, rt0.c1)))<=(((~ (rt0.c0)), ((((rt0.c4)AND(x'9e92')))AND(rt0.c1)), ((rt0.c2)-(rt0.c1)), rt0.c3)))  NULLS LAST, ((((((((rt0.c3)AND(rt0.c2)))OR('-496310961')))OR((((rt0.c4, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4)) AND ((rt0.c2, rt0.c2))))))AND(((rt0.c2)||(rt0.c2)))), rt0.c0, ((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2 COLLATE RTRIM)))OR(TRIM(rt0.c4))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((LOWER(((x'') IS FALSE)))AND(((((rt0.c3)=(rt0.c3)))>(json_patch(rt0.c4, rt0.c3)))))) ORDER BY rt0.c1 DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))IS NOT(((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) IN ((- (rt0.c2))))) ORDER BY (json_remove(1.36555943E8, rt0.c0, rt0.c1) IN ())  NULLS FIRST, rt0.c3  NULLS FIRST;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) IN ((- (rt0.c2)))))AND((NOT (rt0.c2 COLLATE NOCASE))))) ORDER BY (json_remove(1.36555943E8, rt0.c0, rt0.c1) IN ())  NULLS FIRST, rt0.c3  NULLS FIRST LIMIT 0x0;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ('+Z|');
SELECT MIN(rt0.c2) FROM rt0 WHERE ('+Z|') LIMIT 2;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL))AND(CAST(rt0.c1 AS BLOB)))) ORDER BY ((((~ (rt0.c1))))>=(((- (rt0.c3))))) DESC  NULLS FIRST, CASE (rt0.c1 IN ())  WHEN ROUND(0x923db20, rt0.c1) THEN (rt0.c4 IN (rt0.c2)) WHEN rt0.c1 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN '꛿' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END END DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT NULL))AND(CAST(rt0.c1 AS BLOB)))) ORDER BY ((((~ (rt0.c1))))>=(((- (rt0.c3))))) DESC  NULLS FIRST, CASE (rt0.c1 IN ())  WHEN ROUND(153344800, rt0.c1) THEN (rt0.c4 IN (rt0.c2)) WHEN rt0.c1 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN '꛿' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END END DESC  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c0)AND(rt0.c3)))AND(rt0.c0))  WHEN rt0.c4 THEN CAST(rt0.c3 AS INTEGER) END) ORDER BY ((((~ (rt0.c1))))>=(((- (rt0.c3))))) DESC  NULLS FIRST, CASE (rt0.c1 IN ())  WHEN ROUND(0x923db20, rt0.c1) THEN (rt0.c4 IN (rt0.c2)) WHEN rt0.c1 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN '꛿' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END END DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL))AND(CAST(rt0.c1 AS BLOB)))) ORDER BY ((((~ (rt0.c1))))>=(((- (rt0.c3))))) DESC  NULLS FIRST, CASE (rt0.c1 IN ())  WHEN ROUND(0x923db20, rt0.c1) THEN (rt0.c4 IN (rt0.c2)) WHEN rt0.c1 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN '꛿' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END END DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT NULL))AND(CAST(rt0.c1 AS BLOB)))) ORDER BY ((((~ (rt0.c1))))>=(((- (rt0.c3))))) DESC  NULLS FIRST, CASE (rt0.c1 IN ())  WHEN ROUND(153344800, rt0.c1) THEN (rt0.c4 IN (rt0.c2)) WHEN rt0.c1 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN '꛿' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END END DESC  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c0)AND(rt0.c3)))AND(rt0.c0))  WHEN rt0.c4 THEN CAST(rt0.c3 AS INTEGER) END) ORDER BY ((((~ (rt0.c1))))>=(((- (rt0.c3))))) DESC  NULLS FIRST, CASE (rt0.c1 IN ())  WHEN ROUND(0x923db20, rt0.c1) THEN (rt0.c4 IN (rt0.c2)) WHEN rt0.c1 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN '꛿' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END END DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) IN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY rt0.c2 ASC, ((1671379285) NOT BETWEEN (rt0.c4) AND ('L?w6nꍵ&')) COLLATE NOCASE, ((0.22452593384971764)LIKE(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END)) ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) IN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY rt0.c2 ASC, ((1671379285) NOT BETWEEN (rt0.c4) AND ('L?w6nꍵ&')) COLLATE NOCASE, ((0.22452593384971764)LIKE(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END)) ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) IN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY rt0.c2 ASC, ((1671379285) NOT BETWEEN (rt0.c4) AND ('L?w6nꍵ&')) COLLATE NOCASE, ((0.22452593384971764)LIKE(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END)) ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) IN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY rt0.c2 ASC, ((1671379285) NOT BETWEEN (rt0.c4) AND ('L?w6nꍵ&')) COLLATE NOCASE, ((0.22452593384971764)LIKE(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END)) ASC;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (NULL) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 END) ISNULL) DESC, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM  NULLS FIRST;
SELECT MAX(rt0.c2) FROM rt0 WHERE (NULL) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 END) ISNULL) DESC, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c2)) BETWEEN (((((rt0.c2, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c4, rt0.c4, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c0, rt0.c3))), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)) AND ((rt0.c0 COLLATE RTRIM, (((rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c3, 1.671379285E9)) AND ((rt0.c2, rt0.c3)))))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c2)) BETWEEN (((((rt0.c2, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c4, rt0.c4, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c0, rt0.c3))), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)) AND ((rt0.c0 COLLATE RTRIM, (((rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c3, 1.671379285E9)) AND ((rt0.c2, rt0.c3))))))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c2)) BETWEEN (((((rt0.c2, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c4, rt0.c4, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c0, rt0.c3))), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)) AND ((rt0.c0 COLLATE RTRIM, (((rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c3, 1.671379285E9)) AND ((rt0.c2, rt0.c3)))))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c2)) BETWEEN (((((rt0.c2, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c4, rt0.c4, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c0, rt0.c3))), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)) AND ((rt0.c0 COLLATE RTRIM, (((rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c3, 1.671379285E9)) AND ((rt0.c2, rt0.c3))))))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)>(rt0.c3))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3)>(rt0.c3))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))AND((((rt0.c4)LIKE(rt0.c2)) IN ())))) ORDER BY rt0.c3, ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END) NOT NULL)  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c3, ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)>(rt0.c3))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3)>(rt0.c3))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))AND((((rt0.c4)LIKE(rt0.c2)) IN ())))) ORDER BY rt0.c3, ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END) NOT NULL)  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c3, ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c4)))LIKE(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN -4.23276572E8 THEN rt0.c3 END))) ORDER BY CAST((rt0.c2 IN (rt0.c1)) AS TEXT)  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((+ (rt0.c4)))LIKE(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN -4.23276572E8 THEN rt0.c3 END))) ORDER BY (((((rt0.c4 IN (rt0.c3)))AND(CASE rt0.c3  WHEN rt0.c0 THEN 0X7d591ea4 WHEN rt0.c2 THEN rt0.c1 END)))OR((((rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0))))) DESC  NULLS LAST, (NULL IN ())  NULLS FIRST, ((TYPEOF(DISTINCT rt0.c4)) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c4)))LIKE(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN -4.23276572E8 THEN rt0.c3 END))) ORDER BY CAST((rt0.c2 IN (rt0.c1)) AS TEXT)  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((+ (rt0.c4)))LIKE(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN -4.23276572E8 THEN rt0.c3 END))) ORDER BY (((((rt0.c4 IN (rt0.c3)))AND(CASE rt0.c3  WHEN rt0.c0 THEN 0X7d591ea4 WHEN rt0.c2 THEN rt0.c1 END)))OR((((rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0))))) DESC  NULLS LAST, (NULL IN ())  NULLS FIRST, ((TYPEOF(DISTINCT rt0.c4)) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (0X10daca64 COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (0x10daca64 COLLATE NOCASE) LIMIT 0X2 INTERSECT SELECT ALL * FROM rt0 WHERE (((highlight(rt0.c4, rt0.c2, rt0.c3, rt0.c4))LIKE(NULL))) LIMIT 2;
SELECT ALL * FROM rt0 WHERE (0X10daca64 COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (0x10daca64 COLLATE NOCASE) LIMIT 0X2 INTERSECT SELECT ALL * FROM rt0 WHERE (((highlight(rt0.c4, rt0.c2, rt0.c3, rt0.c4))LIKE(NULL))) LIMIT 2;
SELECT MAX(rt0.c4) FROM rt0 WHERE (rt0.c2);
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (rt0.c2) LIMIT 1 INTERSECT SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c3)))OR(0.24680600214959014))) IS TRUE)) LIMIT 1;
SELECT MIN(rt0.c4) FROM rt0 WHERE (((rt0.c0) IS FALSE) COLLATE BINARY) ORDER BY ((((rt0.c1) NOT NULL))<<(rt0.c2));
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((((rt0.c0) IS FALSE) COLLATE BINARY)AND((('\p') BETWEEN ((NULL IN (rt0.c3, rt0.c3))) AND (((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c2))))))) ORDER BY (- (((rt0.c3) IS TRUE))), ((((-1.38434035E9)AND(NULL)))OR(((((rt0.c1)OR('')))AND(rt0.c1)))) DESC  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4) IS FALSE) IN ())) ORDER BY ((x'8f') NOT BETWEEN (((rt0.c3)<(-8.31091294E8))) AND (CAST(rt0.c1 AS REAL))), LIKE(((rt0.c1)<<(rt0.c0)), rt0.c4 COLLATE BINARY, '<') ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c4) IS FALSE) IN ())) ORDER BY ((x'8f') NOT BETWEEN (((rt0.c3)<(-8.31091294E8))) AND (CAST(rt0.c1 AS REAL))), LIKE(((rt0.c1)<<(rt0.c0)), rt0.c4 COLLATE BINARY, '<') ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4) IS FALSE) IN ())) ORDER BY ((x'8f') NOT BETWEEN (((rt0.c3)<(-8.31091294E8))) AND (CAST(rt0.c1 AS REAL))), LIKE(((rt0.c1)<<(rt0.c0)), rt0.c4 COLLATE BINARY, '<') ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c4) IS FALSE) IN ())) ORDER BY ((x'8f') NOT BETWEEN (((rt0.c3)<(-8.31091294E8))) AND (CAST(rt0.c1 AS REAL))), LIKE(((rt0.c1)<<(rt0.c0)), rt0.c4 COLLATE BINARY, '<') ASC;
SELECT * FROM rt0 WHERE (((((((((rt0.c2)==(rt0.c3)))OR(((rt0.c3)%(rt0.c1)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))))OR(((rt0.c4)=(rt0.c2))))) ORDER BY INSTR(DATETIME(rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c3), CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END) DESC  NULLS LAST, (('\') NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c4) NOTNULL))) DESC;
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)=(rt0.c3)))OR(((rt0.c3)%(rt0.c1)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))))OR(((rt0.c4)==(rt0.c2)))))AND(((rt0.c1)|(((rt0.c2)<=(rt0.c1))))))) ORDER BY ((((rt0.c0)AND(''))) NOT NULL)  NULLS FIRST, CAST(((rt0.c1) IS TRUE) AS INTEGER), ((((rt0.c2) IS TRUE))>>(((rt0.c3)GLOB(rt0.c1)))) INTERSECT SELECT ALL * FROM rt0 WHERE ((- (NULL))) ORDER BY ((((rt0.c0)AND(''))) NOT NULL)  NULLS FIRST, CAST(((rt0.c1) IS TRUE) AS INTEGER), ((((rt0.c2) IS TRUE))>>(((rt0.c3)GLOB(rt0.c1))));
SELECT * FROM rt0 WHERE (((((((((rt0.c2)==(rt0.c3)))OR(((rt0.c3)%(rt0.c1)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))))OR(((rt0.c4)=(rt0.c2))))) ORDER BY INSTR(DATETIME(rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c3), CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END) DESC  NULLS LAST, (('\') NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c4) NOTNULL))) DESC;
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)=(rt0.c3)))OR(((rt0.c3)%(rt0.c1)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))))OR(((rt0.c4)==(rt0.c2)))))AND(((rt0.c1)|(((rt0.c2)<=(rt0.c1))))))) ORDER BY ((((rt0.c0)AND(''))) NOT NULL)  NULLS FIRST, CAST(((rt0.c1) IS TRUE) AS INTEGER), ((((rt0.c2) IS TRUE))>>(((rt0.c3)GLOB(rt0.c1)))) INTERSECT SELECT ALL * FROM rt0 WHERE ((- (NULL))) ORDER BY ((((rt0.c0)AND(''))) NOT NULL)  NULLS FIRST, CAST(((rt0.c1) IS TRUE) AS INTEGER), ((((rt0.c2) IS TRUE))>>(((rt0.c3)GLOB(rt0.c1))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)<=(rt0.c0)))<(((rt0.c4) NOTNULL))));
SELECT * FROM rt0 WHERE (((((((rt0.c3)=(rt0.c0)))<(((rt0.c4) NOTNULL))))AND((((rt0.c2)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 END)) AND (((((rt0.c0, rt0.c3, rt0.c0))<((0.24715437054714318, rt0.c0, rt0.c0))))))))) LIMIT 3;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)<=(rt0.c0)))<(((rt0.c4) NOTNULL))));
SELECT * FROM rt0 WHERE (((((((rt0.c3)=(rt0.c0)))<(((rt0.c4) NOTNULL))))AND((((rt0.c2)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 END)) AND (((((rt0.c0, rt0.c3, rt0.c0))<((0.24715437054714318, rt0.c0, rt0.c0))))))))) LIMIT 3;
