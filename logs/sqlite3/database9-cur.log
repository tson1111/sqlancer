-- Time: 2021/05/19 01:09:34
-- Database: database9
-- Database version: 3.34.0
-- seed value: 1621357771653
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TABLE t0 (c0 INTEGER ); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (''), (x'a1'), (x'80'), (NULL), (''); -- 1ms;
UPDATE OR REPLACE t0 SET (c0, c0)=(0.4889236703951433, x'') WHERE CAST((t0.c0 IN (t0.c0)) AS BLOB); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.journal_size_limit = 1927414255789092507; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
PRAGMA integrity_check; -- 0ms;
CREATE INDEX IF NOT EXISTS i29 ON t0(((x'')>=(c0)) COLLATE BINARY) WHERE CAST(((c0)||(c0)) AS BLOB); -- 1ms;
REINDEX NOCASE; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 1ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 1ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'41'), (665515619), ('\JY,	3xP'); -- 0ms;
CREATE UNIQUE INDEX i26 ON t0((((((c0, c0)) NOT BETWEEN ((c0, c0)) AND ((c0, c0)))) BETWEEN (json_quote(c0)) AND (json_quote(c0))) COLLATE BINARY) WHERE x'01'; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
PRAGMA temp.legacy_file_format; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = false; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL), (NULL), (3063615), ('665515619'); -- 1ms;
ANALYZE temp; -- 1ms;
PRAGMA incremental_vacuum(141569879); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL), ('665515619'), (''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('ë¼¿'), (x'cce4'); -- 1ms;
ANALYZE temp; -- 1ms;
ANALYZE main; -- 0ms;
ANALYZE t0; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.2489019158786313), ('0.4889236703951433'), (NULL); -- 0ms;
PRAGMA main.cell_size_check = true; -- 0ms;
REINDEX  t0; -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT ALL * FROM t0 WHERE (665515619) ORDER BY CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE, ((t0.c0 COLLATE BINARY)LIKE(LENGTH(t0.c0)))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((0x27aaf663)AND(CAST(((t0.c0)IS(t0.c0)) AS REAL)))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE, ((t0.c0 COLLATE BINARY)LIKE(LENGTH(t0.c0)))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (665515619) ORDER BY CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE, ((t0.c0 COLLATE BINARY)LIKE(LENGTH(t0.c0)))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((0x27aaf663)AND(CAST(((t0.c0)IS(t0.c0)) AS REAL)))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE, ((t0.c0 COLLATE BINARY)LIKE(LENGTH(t0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((CAST(t0.c0 AS INTEGER))AND(t0.c0)))AND((+ (t0.c0)))))AND(TRIM(DISTINCT t0.c0, t0.c0))))AND(CHAR(t0.c0, t0.c0)))) ORDER BY t0.c0 DESC, STRFTIME((t0.c0 IN (t0.c0)), (- (x'76')), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) DESC;
SELECT COUNT(*) FROM t0 WHERE (((((((((CAST(t0.c0 AS INTEGER))AND(t0.c0)))AND((+ (t0.c0)))))AND(TRIM(DISTINCT t0.c0, t0.c0))))AND(CHAR(t0.c0, t0.c0)))) ORDER BY t0.c0 DESC, STRFTIME((t0.c0 IN (t0.c0)), (- (x'76')), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) DESC LIMIT 0X0 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0))<>((0.8573465205676907))))|((((t0.c0))>((x'')))))) ORDER BY t0.c0 DESC, STRFTIME((t0.c0 IN (t0.c0)), (- (x'76')), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) DESC LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)>(t0.c0)) COLLATE BINARY) ORDER BY LIKELY(DISTINCT (((t0.c0))<>((t0.c0)))) ASC;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((t0.c0)>(t0.c0)) COLLATE BINARY) ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) IS TRUE) DESC  NULLS FIRST, LIKELIHOOD(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS REAL)) DESC  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((t0.c0)<(t0.c0)))) AND ((-283579120))), ((((t0.c0) IS FALSE)) NOT NULL) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (CASE WHEN ((x'')==(t0.c0)) THEN CAST(t0.c0 AS TEXT) ELSE (~ (t0.c0)) END) ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) IS TRUE) DESC  NULLS FIRST, LIKELIHOOD(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS REAL)) DESC  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((t0.c0)<(t0.c0)))) AND ((0Xffffffffef18ed10))), ((((t0.c0) IS FALSE)) NOT NULL) DESC  NULLS LAST LIMIT 0;
SELECT MIN(t0.c0) FROM t0 WHERE ((((t0.c0 IN (t0.c0))) IS FALSE)) ORDER BY CASE WHEN t0.c0 THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE (((0.46559933533645714, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) END  NULLS FIRST, ((0X8702f57) NOTNULL), ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE)  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0 IN (t0.c0))) IS FALSE))AND(QUOTE(((t0.c0)IS NOT(t0.c0)))))) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((0.9583966798694991)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t0 WHERE (CASE NULLIF(t0.c0, t0.c0)  WHEN t0.c0 COLLATE NOCASE THEN json_type(t0.c0) WHEN ((t0.c0)|(t0.c0)) THEN (~ (t0.c0)) WHEN ((0.6477250351936891)>(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END);
SELECT * FROM t0 WHERE (((CASE NULLIF(t0.c0, t0.c0)  WHEN t0.c0 COLLATE NOCASE THEN json_type(t0.c0) WHEN ((t0.c0)|(t0.c0)) THEN (~ (t0.c0)) WHEN ((0.6477250351936891)>(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END)AND(((x'5786') NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CAST(0X5fbfc94d AS INTEGER))))));
SELECT ALL * FROM t0 WHERE (CASE NULLIF(t0.c0, t0.c0)  WHEN t0.c0 COLLATE NOCASE THEN json_type(t0.c0) WHEN ((t0.c0)|(t0.c0)) THEN (~ (t0.c0)) WHEN ((0.6477250351936891)>(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END);
SELECT * FROM t0 WHERE (((CASE NULLIF(t0.c0, t0.c0)  WHEN t0.c0 COLLATE NOCASE THEN json_type(t0.c0) WHEN ((t0.c0)|(t0.c0)) THEN (~ (t0.c0)) WHEN ((0.6477250351936891)>(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END)AND(((x'5786') NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CAST(0X5fbfc94d AS INTEGER))))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ()));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((t0.c0 COLLATE RTRIM IN ()))AND('-1819306421'))) ORDER BY (+ (CASE '665515619'  WHEN 0.4706055180158092 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST LIMIT 0x1;
SELECT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((0.8545779734237292)) AND ((t0.c0))))IS(((t0.c0)|(t0.c0)))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((((t0.c0)) NOT BETWEEN ((0.8545779734237292)) AND ((t0.c0))))IS(((t0.c0)|(t0.c0)))))AND((((NOT (t0.c0)))>(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(-1819306421)))GLOB((t0.c0 IN ()))) DESC LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (((((NULL) BETWEEN (t0.c0) AND (t0.c0)))>=(CAST('-266835620' AS NUMERIC)))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS NOT(TRIM(DISTINCT t0.c0, t0.c0)));
SELECT ALL * FROM t0 WHERE (((((NULL) BETWEEN (t0.c0) AND (t0.c0)))>=(CAST('-266835620' AS NUMERIC)))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS NOT(TRIM(DISTINCT t0.c0, t0.c0))) INTERSECT SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)||(0.8856474969537438)) AS BLOB)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS NOT(TRIM(DISTINCT t0.c0, t0.c0)));
SELECT ALL * FROM t0 WHERE (((((NULL) BETWEEN (t0.c0) AND (t0.c0)))>=(CAST('-266835620' AS NUMERIC)))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS NOT(TRIM(DISTINCT t0.c0, t0.c0)));
SELECT ALL * FROM t0 WHERE (((((NULL) BETWEEN (t0.c0) AND (t0.c0)))>=(CAST('-266835620' AS NUMERIC)))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS NOT(TRIM(DISTINCT t0.c0, t0.c0))) INTERSECT SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)||(0.8856474969537438)) AS BLOB)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS NOT(TRIM(DISTINCT t0.c0, t0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY UNLIKELY(DISTINCT t0.c0) COLLATE BINARY ASC  NULLS FIRST, CAST(t0.c0 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(json_type(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))) ORDER BY t0.c0 COLLATE NOCASE ASC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0 IN ())))!=((t0.c0)))) ORDER BY t0.c0 COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((ABS(t0.c0) IN ())) ORDER BY (((t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL))) AND ((CAST(t0.c0 AS REAL))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((ABS(t0.c0) IN ())) ORDER BY (((t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL))) AND ((CAST(t0.c0 AS REAL))))  NULLS FIRST;
SELECT * FROM t0 WHERE ((ABS(t0.c0) IN ())) ORDER BY (((t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL))) AND ((CAST(t0.c0 AS REAL))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((ABS(t0.c0) IN ())) ORDER BY (((t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL))) AND ((CAST(t0.c0 AS REAL))))  NULLS FIRST;
SELECT * FROM t0 WHERE (((CAST('-283579120' AS TEXT))/(t0.c0)));
SELECT ALL * FROM t0 WHERE (((CAST('-283579120' AS TEXT))/(t0.c0))) LIMIT 0x0;
SELECT * FROM t0 WHERE (((CAST('-283579120' AS TEXT))/(t0.c0)));
SELECT ALL * FROM t0 WHERE (((CAST('-283579120' AS TEXT))/(t0.c0))) LIMIT 0x0;
SELECT * FROM t0 WHERE (NULL) ORDER BY (((t0.c0, 141569879)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, 0.9494424192142433)) AND ((((t0.c0)%(t0.c0)), ((t0.c0) ISNULL)))) DESC;
SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY (((t0.c0, 141569879)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, 0.9494424192142433)) AND ((((t0.c0)%(t0.c0)), ((t0.c0) ISNULL)))) DESC;
SELECT * FROM t0 WHERE (NULL) ORDER BY (((t0.c0, 141569879)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, 0.9494424192142433)) AND ((((t0.c0)%(t0.c0)), ((t0.c0) ISNULL)))) DESC;
SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY (((t0.c0, 141569879)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, 0.9494424192142433)) AND ((((t0.c0)%(t0.c0)), ((t0.c0) ISNULL)))) DESC;
SELECT ALL * FROM t0 WHERE (((LTRIM(t0.c0))<<(((t0.c0)AND(t0.c0)))));
SELECT * FROM t0 WHERE (((LTRIM(t0.c0))<<(((t0.c0)AND(t0.c0))))) ORDER BY (~ (t0.c0)) ASC, (~ (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) DESC  NULLS LAST, ((UPPER(t0.c0)) NOT BETWEEN ((NULL IN (t0.c0, t0.c0))) AND ((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS FIRST, (((((((t0.c0 IN ()))OR(CAST(t0.c0 AS TEXT))))OR(CAST(t0.c0 AS INTEGER))))OR(0.3428488287718313 COLLATE RTRIM))  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE ((((t0.c0)&(t0.c0)) IN ())) ORDER BY (~ (t0.c0)) ASC, (~ (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) DESC  NULLS LAST, ((UPPER(t0.c0)) NOT BETWEEN ((NULL IN (t0.c0, t0.c0))) AND ((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS FIRST, (((((((t0.c0 IN ()))OR(CAST(t0.c0 AS TEXT))))OR(CAST(t0.c0 AS INTEGER))))OR(0.3428488287718313 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((LTRIM(t0.c0))<<(((t0.c0)AND(t0.c0)))));
SELECT * FROM t0 WHERE (((LTRIM(t0.c0))<<(((t0.c0)AND(t0.c0))))) ORDER BY (~ (t0.c0)) ASC, (~ (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) DESC  NULLS LAST, ((UPPER(t0.c0)) NOT BETWEEN ((NULL IN (t0.c0, t0.c0))) AND ((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS FIRST, (((((((t0.c0 IN ()))OR(CAST(t0.c0 AS TEXT))))OR(CAST(t0.c0 AS INTEGER))))OR(0.3428488287718313 COLLATE RTRIM))  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE ((((t0.c0)&(t0.c0)) IN ())) ORDER BY (~ (t0.c0)) ASC, (~ (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) DESC  NULLS LAST, ((UPPER(t0.c0)) NOT BETWEEN ((NULL IN (t0.c0, t0.c0))) AND ((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS FIRST, (((((((t0.c0 IN ()))OR(CAST(t0.c0 AS TEXT))))OR(CAST(t0.c0 AS INTEGER))))OR(0.3428488287718313 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (QUOTE(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ORDER BY t0.c0  NULLS FIRST, 'ZV%C';
SELECT ALL COUNT(*) FROM t0 WHERE (((QUOTE(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))AND(CAST(t0.c0 AS TEXT)))) ORDER BY t0.c0  NULLS FIRST, 'ZV%C' LIMIT 0X3;
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY t0.c0 DESC;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY t0.c0 DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY t0.c0 DESC;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY t0.c0 DESC;
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT))OR(t0.c0)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((CAST(t0.c0 AS TEXT))OR(t0.c0)))AND((((((t0.c0) IS TRUE)))>((t0.c0 COLLATE RTRIM)))))) ORDER BY (((((t0.c0, t0.c0, t0.c0))<(('83*&', t0.c0, t0.c0))))GLOB(((t0.c0)&(t0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY CAST(((t0.c0)IS NOT('&ê ')) AS NUMERIC)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB))AND(((((UPPER(t0.c0))OR(((t0.c0)IS(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY CAST(((t0.c0)IS NOT('&ê ')) AS NUMERIC)  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0, t0.c0)))OR((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 0.3244640030215684)) AND ((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0) IS FALSE)))) ORDER BY CAST(((t0.c0)IS NOT('&ê ')) AS NUMERIC)  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t0 WHERE ((((- ('-283579120')))<((x'' IN (t0.c0))))) ORDER BY (((((t0.c0)-(t0.c0))))==((CASE t0.c0  WHEN x'fb40' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ASC, 'ä¼' DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((- ('-283579120')))<((x'' IN (t0.c0))))) ORDER BY CAST(((t0.c0) IS TRUE) AS INTEGER)  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((']') IS FALSE)))) ORDER BY CAST(((t0.c0) IS TRUE) AS INTEGER)  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t0 WHERE ((((- ('-283579120')))<((x'' IN (t0.c0))))) ORDER BY (((((t0.c0)-(t0.c0))))==((CASE t0.c0  WHEN x'fb40' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ASC, 'ä¼' DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((- ('-283579120')))<((x'' IN (t0.c0))))) ORDER BY CAST(((t0.c0) IS TRUE) AS INTEGER)  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((']') IS FALSE)))) ORDER BY CAST(((t0.c0) IS TRUE) AS INTEGER)  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)OR(((t0.c0) BETWEEN ('>{ä²') AND (t0.c0)))))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0 COLLATE NOCASE)OR(((t0.c0) BETWEEN ('>{ä²') AND (t0.c0)))))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))AND(CASE WHEN NULL THEN ((0.8545779734237292) ISNULL) WHEN (((((('-266835620')AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c0 END WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN CAST(t0.c0 AS TEXT) ELSE ((t0.c0)<(t0.c0)) END))) ORDER BY NULL DESC  NULLS LAST, ((((x'de')%(0.9212908942704902)))&(CAST(t0.c0 AS REAL)))  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY NULL DESC  NULLS LAST, ((((x'de')%(0.9212908942704902)))&(CAST(t0.c0 AS REAL)))  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)OR(((t0.c0) BETWEEN ('>{ä²') AND (t0.c0)))))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0 COLLATE NOCASE)OR(((t0.c0) BETWEEN ('>{ä²') AND (t0.c0)))))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))AND(CASE WHEN NULL THEN ((0.8545779734237292) ISNULL) WHEN (((((('-266835620')AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c0 END WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN CAST(t0.c0 AS TEXT) ELSE ((t0.c0)<(t0.c0)) END))) ORDER BY NULL DESC  NULLS LAST, ((((x'de')%(0.9212908942704902)))&(CAST(t0.c0 AS REAL)))  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY NULL DESC  NULLS LAST, ((((x'de')%(0.9212908942704902)))&(CAST(t0.c0 AS REAL)))  NULLS LAST LIMIT 2;
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL))=((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((0.4524023923736694, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT NULL))=((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((0.4524023923736694, t0.c0)))))) ORDER BY ((((t0.c0)AND(UNLIKELY(t0.c0))))AND(CAST(t0.c0 AS BLOB))) ASC  NULLS LAST, (- ((((((('-r')AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)<(t0.c0)) COLLATE BINARY) ORDER BY ((((t0.c0)AND(UNLIKELY(t0.c0))))AND(CAST(t0.c0 AS BLOB))) ASC  NULLS LAST, (- ((((((('-r')AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL))=((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((0.4524023923736694, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT NULL))=((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((0.4524023923736694, t0.c0)))))) ORDER BY ((((t0.c0)AND(UNLIKELY(t0.c0))))AND(CAST(t0.c0 AS BLOB))) ASC  NULLS LAST, (- ((((((('-r')AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)<(t0.c0)) COLLATE BINARY) ORDER BY ((((t0.c0)AND(UNLIKELY(t0.c0))))AND(CAST(t0.c0 AS BLOB))) ASC  NULLS LAST, (- ((((((('-r')AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (NULL);
SELECT DISTINCT * FROM t0 WHERE (((NULL)AND(TRIM(DISTINCT DATETIME(t0.c0, t0.c0, t0.c0, t0.c0))))) ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC;
SELECT * FROM t0 WHERE (NULL);
SELECT DISTINCT * FROM t0 WHERE (((NULL)AND(TRIM(DISTINCT DATETIME(t0.c0, t0.c0, t0.c0, t0.c0))))) ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((~ (CAST(0.0936944252410401 AS NUMERIC)))) ORDER BY json_object(CAST(t0.c0 AS TEXT), ((t0.c0)GLOB(t0.c0)))  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((0Xffffffffef18ed10) IS TRUE)) DESC  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((~ (CAST(0.0936944252410401 AS NUMERIC)))) ORDER BY json_object(CAST(t0.c0 AS TEXT), ((t0.c0)GLOB(t0.c0)))  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((-283579120) IS TRUE)) DESC  NULLS LAST LIMIT 5 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE ((~ (((t0.c0) IS TRUE)))) ORDER BY json_object(CAST(t0.c0 AS TEXT), ((t0.c0)GLOB(t0.c0)))  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((-283579120) IS TRUE)) DESC  NULLS LAST LIMIT 5;
SELECT * FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(x'')) IN (CASE x'25ce'  WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL * FROM t0 WHERE ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(x'')) IN (CASE x'25ce'  WHEN t0.c0 THEN t0.c0 END)))AND((((NOT (t0.c0))) NOT BETWEEN (((t0.c0)%(NULL))) AND (t0.c0))))) LIMIT 0X3 INTERSECT SELECT * FROM t0 WHERE (((UNLIKELY('/H')) IS FALSE)) LIMIT 0X3;
SELECT * FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(x'')) IN (CASE x'25ce'  WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL * FROM t0 WHERE ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(x'')) IN (CASE x'25ce'  WHEN t0.c0 THEN t0.c0 END)))AND((((NOT (t0.c0))) NOT BETWEEN (((t0.c0)%(NULL))) AND (t0.c0))))) LIMIT 0X3 INTERSECT SELECT * FROM t0 WHERE (((UNLIKELY('/H')) IS FALSE)) LIMIT 0X3;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN (+ (t0.c0)) THEN 'b4t' WHEN ((t0.c0)<=(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS REAL) THEN (- (t0.c0)) ELSE (t0.c0 IN ()) END) ORDER BY CASE ((t0.c0) ISNULL)  WHEN ((t0.c0)>(t0.c0)) THEN (~ (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(t0.c0 AS INTEGER) ELSE t0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CASE WHEN (+ (t0.c0)) THEN 'b4t' WHEN ((t0.c0)<=(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS REAL) THEN (- (t0.c0)) ELSE (t0.c0 IN ()) END)AND((t0.c0 IN ())))) ORDER BY CASE ((t0.c0) ISNULL)  WHEN ((t0.c0)>(t0.c0)) THEN (~ (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(t0.c0 AS INTEGER) ELSE t0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((0.8233471028574048)OR((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=(('-r', t0.c0, t0.c0, t0.c0, t0.c0)))))  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((0.8233471028574048)OR((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=(('-r', t0.c0, t0.c0, t0.c0, t0.c0)))))  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY (CAST(t0.c0 AS TEXT) IN (t0.c0))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY ((t0.c0 COLLATE BINARY) NOT NULL), (~ (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) ASC, CAST(t0.c0 AS REAL) COLLATE RTRIM COLLATE BINARY ASC LIMIT 1;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY (CAST(t0.c0 AS TEXT) IN (t0.c0))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY ((t0.c0 COLLATE BINARY) NOT NULL), (~ (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) ASC, CAST(t0.c0 AS REAL) COLLATE RTRIM COLLATE BINARY ASC LIMIT 1;
SELECT * FROM t0 WHERE (((x'')AND(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ORDER BY ((CAST(t0.c0 AS REAL)) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((x'')AND(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ORDER BY ((CAST(t0.c0 AS REAL)) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((x'')AND(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ORDER BY ((CAST(t0.c0 AS REAL)) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((x'')AND(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ORDER BY ((CAST(t0.c0 AS REAL)) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c0)OR(0.2786745149741875)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, '-1112927373')) AND ((t0.c0, t0.c0, t0.c0))), (- (t0.c0))))<>((LIKELY(DISTINCT t0.c0), ((t0.c0)GLOB(t0.c0)), ((t0.c0) ISNULL))))) ORDER BY ((t0.c0)>=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS LAST, (('976722786') IS FALSE) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((((((((((((t0.c0)OR(0.2786745149741875)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, '-1112927373')) AND ((t0.c0, t0.c0, t0.c0))), (- (t0.c0))))!=((LIKELY(DISTINCT t0.c0), ((t0.c0)GLOB(t0.c0)), ((t0.c0) ISNULL)))))AND((((((((t0.c0 IN (t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(MAX(t0.c0, t0.c0)))))) ORDER BY (((t0.c0, t0.c0)) BETWEEN ((((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(0x618c588c)), 141569879)) AND ((json_array_length(t0.c0, t0.c0), ((t0.c0)%(t0.c0))))) LIMIT 0X1;
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c0)OR(0.2786745149741875)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, '-1112927373')) AND ((t0.c0, t0.c0, t0.c0))), (- (t0.c0))))<>((LIKELY(DISTINCT t0.c0), ((t0.c0)GLOB(t0.c0)), ((t0.c0) ISNULL))))) ORDER BY ((t0.c0)>=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS LAST, (('976722786') IS FALSE) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((((((((((((t0.c0)OR(0.2786745149741875)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, '-1112927373')) AND ((t0.c0, t0.c0, t0.c0))), (- (t0.c0))))!=((LIKELY(DISTINCT t0.c0), ((t0.c0)GLOB(t0.c0)), ((t0.c0) ISNULL)))))AND((((((((t0.c0 IN (t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(MAX(t0.c0, t0.c0)))))) ORDER BY (((t0.c0, t0.c0)) BETWEEN ((((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(0x618c588c)), 141569879)) AND ((json_array_length(t0.c0, t0.c0), ((t0.c0)%(t0.c0))))) LIMIT 0X1;
SELECT * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) NOTNULL));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) NOTNULL)) ORDER BY x'7b3d' ASC, (- (NULL)) DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0)>>(t0.c0)), ((t0.c0)+(t0.c0)))) ORDER BY x'7b3d' ASC, (- (NULL)) DESC;
SELECT * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) NOTNULL));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) NOTNULL)) ORDER BY x'7b3d' ASC, (- (NULL)) DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0)>>(t0.c0)), ((t0.c0)+(t0.c0)))) ORDER BY x'7b3d' ASC, (- (NULL)) DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((((t0.c0)IS(0.9418397844565232)))))) ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS FALSE) ASC, '1606404429'  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((((t0.c0)IS(0.9418397844565232))))))AND('1972789177'))) ORDER BY (((CAST(t0.c0 AS NUMERIC), t0.c0, ((t0.c0)+(t0.c0)), (+ (t0.c0)), TIME(t0.c0, t0.c0, t0.c0, '/', t0.c0, t0.c0), (t0.c0 IN ()), CAST(t0.c0 AS INTEGER)))!=(((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE NOCASE, ((t0.c0) ISNULL), 1, t0.c0 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (x'') AND (NULL)))))  NULLS LAST, ((((t0.c0) IS FALSE)) BETWEEN ((~ (t0.c0))) AND (NULL)) LIMIT 0X1 INTERSECT SELECT * FROM t0 WHERE (NULL) ORDER BY (((CAST(t0.c0 AS NUMERIC), t0.c0, ((t0.c0)+(t0.c0)), (+ (t0.c0)), TIME(t0.c0, t0.c0, t0.c0, '/', t0.c0, t0.c0), (t0.c0 IN ()), CAST(t0.c0 AS INTEGER)))!=(((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE NOCASE, ((t0.c0) ISNULL), 0x1, t0.c0 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (x'') AND (NULL)))))  NULLS LAST, ((((t0.c0) IS FALSE)) BETWEEN ((~ (t0.c0))) AND (NULL)) LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((((t0.c0)IS(0.9418397844565232)))))) ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS FALSE) ASC, '1606404429'  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((((t0.c0)IS(0.9418397844565232))))))AND('1972789177'))) ORDER BY (((CAST(t0.c0 AS NUMERIC), t0.c0, ((t0.c0)+(t0.c0)), (+ (t0.c0)), TIME(t0.c0, t0.c0, t0.c0, '/', t0.c0, t0.c0), (t0.c0 IN ()), CAST(t0.c0 AS INTEGER)))!=(((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE NOCASE, ((t0.c0) ISNULL), 1, t0.c0 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (x'') AND (NULL)))))  NULLS LAST, ((((t0.c0) IS FALSE)) BETWEEN ((~ (t0.c0))) AND (NULL)) LIMIT 0X1 INTERSECT SELECT * FROM t0 WHERE (NULL) ORDER BY (((CAST(t0.c0 AS NUMERIC), t0.c0, ((t0.c0)+(t0.c0)), (+ (t0.c0)), TIME(t0.c0, t0.c0, t0.c0, '/', t0.c0, t0.c0), (t0.c0 IN ()), CAST(t0.c0 AS INTEGER)))!=(((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE NOCASE, ((t0.c0) ISNULL), 0x1, t0.c0 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (x'') AND (NULL)))))  NULLS LAST, ((((t0.c0) IS FALSE)) BETWEEN ((~ (t0.c0))) AND (NULL)) LIMIT 1;
SELECT MIN(t0.c0) FROM t0 WHERE ((- (t0.c0 COLLATE BINARY)));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((- (t0.c0 COLLATE BINARY)));
SELECT * FROM t0 WHERE ((((((t0.c0)AND(0.7382185098365368)))AND(t0.c0)) IN (CAST(t0.c0 AS NUMERIC))));
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0)AND(0.7382185098365368)))AND(t0.c0)) IN (CAST(t0.c0 AS NUMERIC))))AND((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN ())))) ORDER BY (((load_extension(t0.c0)))>(((~ (t0.c0))))) DESC  NULLS LAST LIMIT 0;
SELECT * FROM t0 WHERE ((((((t0.c0)AND(0.7382185098365368)))AND(t0.c0)) IN (CAST(t0.c0 AS NUMERIC))));
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0)AND(0.7382185098365368)))AND(t0.c0)) IN (CAST(t0.c0 AS NUMERIC))))AND((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN ())))) ORDER BY (((load_extension(t0.c0)))>(((~ (t0.c0))))) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 NOT INDEXED WHERE (('' IN (((((t0.c0)AND(t0.c0)))AND(0.02968136076327177))))) ORDER BY (- (t0.c0)), (~ ((((t0.c0))=((t0.c0)))))  NULLS LAST;
SELECT * FROM t0 WHERE (('' IN (((((t0.c0)AND(t0.c0)))AND(0.02968136076327177))))) ORDER BY (- (t0.c0)), (~ ((((t0.c0))==((t0.c0)))))  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (NULL) ORDER BY (- (t0.c0)), (~ ((((t0.c0))=((t0.c0)))))  NULLS LAST;
SELECT ALL * FROM t0 NOT INDEXED WHERE (('' IN (((((t0.c0)AND(t0.c0)))AND(0.02968136076327177))))) ORDER BY (- (t0.c0)), (~ ((((t0.c0))=((t0.c0)))))  NULLS LAST;
SELECT * FROM t0 WHERE (('' IN (((((t0.c0)AND(t0.c0)))AND(0.02968136076327177))))) ORDER BY (- (t0.c0)), (~ ((((t0.c0))==((t0.c0)))))  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (NULL) ORDER BY (- (t0.c0)), (~ ((((t0.c0))=((t0.c0)))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0 IN ())))<((HEX(t0.c0))))) ORDER BY t0.c0 ASC;
SELECT ALL * FROM t0 WHERE (((((((t0.c0 IN ())))<((HEX(t0.c0)))))AND(0.6243538249504288))) ORDER BY t0.c0 ASC INTERSECT SELECT * FROM t0 WHERE ((((- (t0.c0)))GLOB(((t0.c0)GLOB(t0.c0))))) ORDER BY t0.c0 ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c0 IN ())))<((HEX(t0.c0))))) ORDER BY t0.c0 ASC;
SELECT ALL * FROM t0 WHERE (((((((t0.c0 IN ())))<((HEX(t0.c0)))))AND(0.6243538249504288))) ORDER BY t0.c0 ASC INTERSECT SELECT * FROM t0 WHERE ((((- (t0.c0)))GLOB(((t0.c0)GLOB(t0.c0))))) ORDER BY t0.c0 ASC;
SELECT ALL * FROM t0 WHERE (ABS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY ((((t0.c0)=(t0.c0)))%(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (ABS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY t0.c0 DESC  NULLS FIRST, t0.c0  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (ABS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY ((((t0.c0)=(t0.c0)))%(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (ABS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY t0.c0 DESC  NULLS FIRST, t0.c0  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)<<(t0.c0)) COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0)<<(t0.c0)) COLLATE RTRIM)AND(CAST((t0.c0 IN (t0.c0, t0.c0)) AS BLOB)))) ORDER BY (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()) LIMIT 0x1;
SELECT * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) ORDER BY ((t0.c0) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM)AND(CAST(t0.c0 AS INTEGER)))) ORDER BY (((((x'f821' IN ()))AND(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))OR((~ (t0.c0))))  NULLS FIRST, 141569879  NULLS LAST, '1977846067' ASC, (((((t0.c0)|(t0.c0))))<=((1.41569879E8))) ASC INTERSECT SELECT ALL * FROM t0 WHERE ((('-582384718')+((('I1')!=(t0.c0))))) ORDER BY (((((x'f821' IN ()))AND(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))OR((~ (t0.c0))))  NULLS FIRST, 141569879  NULLS LAST, '1977846067' ASC, (((((t0.c0)|(t0.c0))))<=((1.41569879E8))) ASC;
SELECT * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) ORDER BY ((t0.c0) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM)AND(CAST(t0.c0 AS INTEGER)))) ORDER BY (((((x'f821' IN ()))AND(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))OR((~ (t0.c0))))  NULLS FIRST, 141569879  NULLS LAST, '1977846067' ASC, (((((t0.c0)|(t0.c0))))<=((1.41569879E8))) ASC INTERSECT SELECT ALL * FROM t0 WHERE ((('-582384718')+((('I1')!=(t0.c0))))) ORDER BY (((((x'f821' IN ()))AND(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))OR((~ (t0.c0))))  NULLS FIRST, 141569879  NULLS LAST, '1977846067' ASC, (((((t0.c0)|(t0.c0))))<=((1.41569879E8))) ASC;
SELECT ALL * FROM t0 WHERE ((- ('773064094')));
SELECT DISTINCT * FROM t0 WHERE ((((- ('773064094')))AND(CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN '2052193680' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN t0.c0 WHEN NULL THEN CASE WHEN 0.5981005835119474 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END)));
SELECT ALL * FROM t0 WHERE ((- ('773064094')));
SELECT DISTINCT * FROM t0 WHERE ((((- ('773064094')))AND(CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN '2052193680' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN t0.c0 WHEN NULL THEN CASE WHEN 0.5981005835119474 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END)));
SELECT MIN(t0.c0) FROM t0 WHERE (-266835620 COLLATE BINARY);
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (0xfffffffff018695c COLLATE BINARY) LIMIT 0X0;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)*((t0.c0 IN (t0.c0, t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)*((t0.c0 IN (t0.c0, t0.c0))))) ORDER BY (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 'U\&å¶zsy' END)GLOB(CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST, ((+ (NULL)) IN ()) LIMIT 2 INTERSECT SELECT COUNT(*) FROM t0 WHERE (-266835620) ORDER BY (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 'U\&å¶zsy' END)GLOB(CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST, ((+ (NULL)) IN ()) LIMIT 0x2;
SELECT ALL * FROM t0 INDEXED BY i29 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'89c662' END)||(((t0.c0)=(t0.c0))))) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) ELSE (~ (t0.c0)) END  NULLS FIRST;
SELECT * FROM t0 INDEXED BY i29 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'89c662' END)||(((t0.c0)=(t0.c0)))))AND(((t0.c0 IN (NULL)) IN ())))) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) ELSE (~ (t0.c0)) END  NULLS FIRST LIMIT 0X1 INTERSECT SELECT * FROM t0 INDEXED BY i29 WHERE (((t0.c0)+(t0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) ELSE (~ (t0.c0)) END  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t0 INDEXED BY i29 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'89c662' END)||(((t0.c0)=(t0.c0))))) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) ELSE (~ (t0.c0)) END  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((NULL)>(t0.c0)))OR(NULL)))AND(0X1e4132))) ORDER BY (NOT ((NOT (NULL)))) DESC, (((((((t0.c0, t0.c0, t0.c0, t0.c0, '')) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((x'', t0.c0, t0.c0, t0.c0, t0.c0))))AND(((t0.c0)||(t0.c0)))))AND(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT * FROM t0 WHERE (((((((NULL)>(t0.c0)))OR(NULL)))AND(1982770))) ORDER BY (+ ((((t0.c0))!=((t0.c0))))) ASC, 'Bv';
SELECT * FROM t0 WHERE (((((((NULL)>(t0.c0)))OR(NULL)))AND(0X1e4132))) ORDER BY (NOT ((NOT (NULL)))) DESC, (((((((t0.c0, t0.c0, t0.c0, t0.c0, '')) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((x'', t0.c0, t0.c0, t0.c0, t0.c0))))AND(((t0.c0)||(t0.c0)))))AND(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT * FROM t0 WHERE (((((((NULL)>(t0.c0)))OR(NULL)))AND(1982770))) ORDER BY (+ ((((t0.c0))!=((t0.c0))))) ASC, 'Bv';
SELECT * FROM t0 WHERE ((NOT ((t0.c0 IN (t0.c0))))) ORDER BY '696086682' DESC  NULLS FIRST, ((NULLIF(DISTINCT t0.c0, 'CP'))GLOB(CAST(t0.c0 AS NUMERIC)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((NOT ((t0.c0 IN (t0.c0)))))AND(CAST(t0.c0 AS BLOB)))) ORDER BY '696086682' DESC  NULLS FIRST, ((NULLIF(DISTINCT t0.c0, 'CP'))GLOB(CAST(t0.c0 AS NUMERIC)))  NULLS LAST;
SELECT * FROM t0 WHERE ((NOT ((t0.c0 IN (t0.c0))))) ORDER BY '696086682' DESC  NULLS FIRST, ((NULLIF(DISTINCT t0.c0, 'CP'))GLOB(CAST(t0.c0 AS NUMERIC)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((NOT ((t0.c0 IN (t0.c0)))))AND(CAST(t0.c0 AS BLOB)))) ORDER BY '696086682' DESC  NULLS FIRST, ((NULLIF(DISTINCT t0.c0, 'CP'))GLOB(CAST(t0.c0 AS NUMERIC)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))) NOT BETWEEN (UNLIKELY(t0.c0)) AND (((t0.c0)IS NOT(t0.c0))))) ORDER BY CAST((- (t0.c0)) AS TEXT), LOWER(((((t0.c0)AND(t0.c0)))OR(t0.c0))), ((((((t0.c0)OR(TYPEOF(t0.c0))))AND(x'f97028')))OR(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) DESC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))) NOT BETWEEN (UNLIKELY(t0.c0)) AND (((t0.c0)IS NOT(t0.c0))))) ORDER BY CAST(t0.c0 COLLATE BINARY AS BLOB) ASC, CASE WHEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0)&(0.26546282780279995)) ELSE PRINTF(t0.c0, t0.c0) END ASC, (((t0.c0, t0.c0)) BETWEEN (((t0.c0 IN ()), (~ (t0.c0)))) AND ((t0.c0, t0.c0))) ASC  NULLS LAST LIMIT 0X0 INTERSECT SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)|(((t0.c0) IS TRUE)))) ORDER BY CAST(t0.c0 COLLATE BINARY AS BLOB) ASC, CASE WHEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0)&(0.26546282780279995)) ELSE PRINTF(t0.c0, t0.c0) END ASC, (((t0.c0, t0.c0)) BETWEEN (((t0.c0 IN ()), (~ (t0.c0)))) AND ((t0.c0, t0.c0))) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((TRIM(t0.c0))AND(t0.c0)))AND(LIKELY(DISTINCT 'f%Y'))))AND(NULL)))OR(CASE WHEN x'' THEN t0.c0 ELSE t0.c0 END))) ORDER BY (((LOWER(t0.c0)))>=((((t0.c0) NOT NULL)))), CASE WHEN (((t0.c0, t0.c0))>=((t0.c0, t0.c0))) THEN ((NULL) BETWEEN (t0.c0) AND (t0.c0)) END, CASE ((t0.c0)%(t0.c0))  WHEN (NOT (t0.c0)) THEN ((t0.c0)IS(t0.c0)) WHEN t0.c0 THEN ((t0.c0)&(t0.c0)) WHEN (+ (2119314506)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((((((((TRIM(t0.c0))AND(t0.c0)))AND(LIKELY(DISTINCT 'f%Y'))))AND(NULL)))OR(CASE WHEN x'' THEN t0.c0 ELSE t0.c0 END)))AND(((((t0.c0) IS FALSE)) NOT NULL)))) ORDER BY rtreenode(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) IS FALSE)) DESC  NULLS LAST, IFNULL(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE BINARY)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (CASE t0.c0  WHEN '-722364497' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((+ (CASE t0.c0  WHEN '-722364497' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((t0.c0) IS FALSE))LIKE(CAST(NULL AS REAL))), SUBSTR(CAST(t0.c0 AS BLOB), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ASC, (((t0.c0, t0.c0)) BETWEEN ((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 WHEN x'' THEN t0.c0 ELSE t0.c0 END)) AND (((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (CASE (+ (t0.c0))  WHEN ((t0.c0)%(t0.c0)) THEN ((t0.c0)>=(x'6d')) WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN NULL WHEN CASE t0.c0  WHEN NULL THEN t0.c0 ELSE t0.c0 END THEN TRIM(t0.c0) ELSE t0.c0 COLLATE RTRIM END) ORDER BY ((((t0.c0) IS FALSE))LIKE(CAST(NULL AS REAL))), SUBSTR(CAST(t0.c0 AS BLOB), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ASC, (((t0.c0, t0.c0)) BETWEEN ((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 WHEN x'' THEN t0.c0 ELSE t0.c0 END)) AND (((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))>>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 COLLATE RTRIM ELSE (t0.c0 IN ()) END  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS NUMERIC))>>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CASE ''  WHEN t0.c0 THEN (t0.c0 IN ()) WHEN (~ (t0.c0)) THEN CASE ''  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'fd90' THEN t0.c0 ELSE t0.c0 END END))) ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 COLLATE RTRIM ELSE (t0.c0 IN ()) END  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS TEXT)) ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 COLLATE RTRIM ELSE (t0.c0 IN ()) END  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))>>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 COLLATE RTRIM ELSE (t0.c0 IN ()) END  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS NUMERIC))>>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CASE ''  WHEN t0.c0 THEN (t0.c0 IN ()) WHEN (~ (t0.c0)) THEN CASE ''  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'fd90' THEN t0.c0 ELSE t0.c0 END END))) ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 COLLATE RTRIM ELSE (t0.c0 IN ()) END  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS TEXT)) ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 COLLATE RTRIM ELSE (t0.c0 IN ()) END  NULLS FIRST LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((MIN(0.502746508288293, t0.c0))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(UPPER(t0.c0)))) ORDER BY LIKE((((x''))==(('r'))), ((t0.c0)IS NOT(t0.c0)), '6') ASC  NULLS LAST, (- (t0.c0)) COLLATE BINARY DESC, (- (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(x'')))AND(t0.c0))))  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE (((((((MIN(0.502746508288293, t0.c0))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(UPPER(t0.c0))))AND(t0.c0))) ORDER BY ((((x'ac') IS TRUE)) BETWEEN (((((t0.c0)AND(x'')))OR(t0.c0))) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) LIMIT 3;
SELECT MIN(t0.c0) FROM t0 WHERE (TYPEOF(t0.c0 COLLATE NOCASE)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 ELSE t0.c0 END)>>(MIN(t0.c0, t0.c0, t0.c0, x'08c2')))  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((TYPEOF(t0.c0 COLLATE NOCASE))AND(((x'dc80') BETWEEN (((t0.c0)AND(t0.c0))) AND (((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(NULL)))AND(t0.c0))))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 ELSE t0.c0 END)>>(MIN(t0.c0, t0.c0, t0.c0, x'08c2')))  NULLS FIRST LIMIT 1;
SELECT * FROM t0 WHERE (CAST(((t0.c0)=(t0.c0)) AS NUMERIC));
SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0)=(t0.c0)) AS NUMERIC))AND(((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0))))))));
SELECT * FROM t0 WHERE (CAST(((t0.c0)=(t0.c0)) AS NUMERIC));
SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0)=(t0.c0)) AS NUMERIC))AND(((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0))))))));
SELECT ALL MAX(t0.c0) FROM t0 INDEXED BY i29 WHERE (CAST(CAST(t0.c0 AS REAL) AS REAL)) ORDER BY ((((((CAST(t0.c0 AS NUMERIC))AND(((t0.c0)<=(t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 INDEXED BY i29 WHERE (((CAST(CAST(t0.c0 AS REAL) AS REAL))AND(CASE WHEN CAST('2052193680' AS TEXT) THEN (((t0.c0, t0.c0))>((t0.c0, t0.c0))) ELSE ((t0.c0)|(t0.c0)) END))) ORDER BY ((CASE x''  WHEN 0Xfffffffffec88e50 THEN t0.c0 ELSE t0.c0 END)==(t0.c0 COLLATE NOCASE)) ASC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (LIKELY(DISTINCT (((t0.c0, t0.c0))>=((t0.c0, t0.c0)))));
SELECT MAX(t0.c0) FROM t0 WHERE (LIKELY(DISTINCT (((t0.c0, t0.c0))>=((t0.c0, t0.c0))))) ORDER BY (((t0.c0)) BETWEEN ((((((((0.3886583831214989)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) AND ((((t0.c0)<=(t0.c0))))) DESC LIMIT 1 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0))))<((((t0.c0)>(t0.c0)), (t0.c0 IN (t0.c0)))))) ORDER BY (((t0.c0)) BETWEEN ((((((((0.3886583831214989)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) AND ((((t0.c0)<=(t0.c0))))) DESC LIMIT 1;
SELECT * FROM t0 WHERE (UPPER((t0.c0 IN ())));
SELECT DISTINCT * FROM t0 WHERE (((UPPER((t0.c0 IN ())))AND((((t0.c0 IN (t0.c0)))-(((t0.c0)&(NULL))))))) ORDER BY t0.c0, t0.c0  NULLS FIRST LIMIT 0x0;
SELECT * FROM t0 WHERE (UPPER((t0.c0 IN ())));
SELECT DISTINCT * FROM t0 WHERE (((UPPER((t0.c0 IN ())))AND((((t0.c0 IN (t0.c0)))-(((t0.c0)&(NULL))))))) ORDER BY t0.c0, t0.c0  NULLS FIRST LIMIT 0x0;
SELECT * FROM t0 WHERE (t0.c0 COLLATE BINARY);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)AND(((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((t0.c0)>(t0.c0))) AND (0Xffffffffb26919f7))))) INTERSECT SELECT * FROM t0 WHERE (NULL);
SELECT * FROM t0 WHERE (t0.c0 COLLATE BINARY);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)AND(((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((t0.c0)>(t0.c0))) AND (0Xffffffffb26919f7))))) INTERSECT SELECT * FROM t0 WHERE (NULL);
SELECT * FROM t0 WHERE ((((CASE NULL  WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))==(((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS REAL))))) ORDER BY ((((t0.c0) ISNULL)) ISNULL)  NULLS FIRST, ((t0.c0) IS FALSE) COLLATE NOCASE, ((t0.c0 COLLATE BINARY)<<((((('2119314506')AND(NULL)))AND(t0.c0)))) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((CASE NULL  WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))=(((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS REAL))))) ORDER BY (json_array_length(t0.c0) IN ())  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0 IN (t0.c0, t0.c0)) IN ())) ORDER BY (json_array_length(t0.c0) IN ())  NULLS FIRST LIMIT 0X0;
SELECT * FROM t0 WHERE ((((CASE NULL  WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))==(((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS REAL))))) ORDER BY ((((t0.c0) ISNULL)) ISNULL)  NULLS FIRST, ((t0.c0) IS FALSE) COLLATE NOCASE, ((t0.c0 COLLATE BINARY)<<((((('2119314506')AND(NULL)))AND(t0.c0)))) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((CASE NULL  WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))=(((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS REAL))))) ORDER BY (json_array_length(t0.c0) IN ())  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0 IN (t0.c0, t0.c0)) IN ())) ORDER BY (json_array_length(t0.c0) IN ())  NULLS FIRST LIMIT 0X0;
SELECT * FROM t0 WHERE (((((x'')<=(t0.c0))) IS FALSE));
SELECT DISTINCT * FROM t0 WHERE (((((((x'')<=(t0.c0))) IS FALSE))AND('UC%ë¼¿]ZY'))) ORDER BY ((((((-7.22364497E8) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE RTRIM))  NULLS LAST LIMIT 1;
SELECT * FROM t0 WHERE (((((x'')<=(t0.c0))) IS FALSE));
SELECT DISTINCT * FROM t0 WHERE (((((((x'')<=(t0.c0))) IS FALSE))AND('UC%ë¼¿]ZY'))) ORDER BY ((((((-7.22364497E8) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE RTRIM))  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) ORDER BY ((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))IS NOT(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) ORDER BY t0.c0;
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) ORDER BY ((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))IS NOT(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) ORDER BY t0.c0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (HEX(CASE WHEN t0.c0 THEN t0.c0 WHEN 0X13b41af5 THEN t0.c0 END)) ORDER BY LIKELY(((((t0.c0)AND('')))OR(t0.c0)))  NULLS LAST, ((CASE x'5091'  WHEN t0.c0 THEN t0.c0 END)LIKE(CASE WHEN NULL THEN 'eD\g{O^P0' ELSE t0.c0 END))  NULLS FIRST, ((((((t0.c0)OR(TRIM(t0.c0, t0.c0))))OR(t0.c0)))OR(((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (HEX(CASE WHEN t0.c0 THEN t0.c0 WHEN 330570485 THEN t0.c0 END)) ORDER BY ((t0.c0 COLLATE BINARY)>>((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, x'2f0c1d')) AND ((t0.c0, t0.c0)))))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CAST((0.9946086528163941 IN (x'', t0.c0)) AS INTEGER) DESC;
SELECT * FROM t0 WHERE (((NULL)AND((((t0.c0, t0.c0, t0.c0)) BETWEEN ((LAST_INSERT_ROWID(), (((0X5f658d05, t0.c0, t0.c0, '-722364497')) BETWEEN ((t0.c0, -426363608, -1112927373, t0.c0)) AND ((NULL, t0.c0, t0.c0, t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0)IS NOT(t0.c0)), ((NULL)IS NOT(t0.c0)), '1282586232')))))) ORDER BY CAST((0.9946086528163941 IN (x'', t0.c0)) AS INTEGER) DESC;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CAST((0.9946086528163941 IN (x'', t0.c0)) AS INTEGER) DESC;
SELECT * FROM t0 WHERE (((NULL)AND((((t0.c0, t0.c0, t0.c0)) BETWEEN ((LAST_INSERT_ROWID(), (((0X5f658d05, t0.c0, t0.c0, '-722364497')) BETWEEN ((t0.c0, -426363608, -1112927373, t0.c0)) AND ((NULL, t0.c0, t0.c0, t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0)IS NOT(t0.c0)), ((NULL)IS NOT(t0.c0)), '1282586232')))))) ORDER BY CAST((0.9946086528163941 IN (x'', t0.c0)) AS INTEGER) DESC;
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) ISNULL))))OR(0X34cc34a5)))AND(t0.c0)))OR((((x'', t0.c0)) NOT BETWEEN ((t0.c0, 'O')) AND ((t0.c0, 0.08948534984541667)))))) ORDER BY ((CAST(t0.c0 AS INTEGER))/(((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) ISNULL))))OR(0X34cc34a5)))AND(t0.c0)))OR((((x'', t0.c0)) NOT BETWEEN ((t0.c0, 'O')) AND ((t0.c0, 0.08948534984541667)))))) ORDER BY ((CAST(t0.c0 AS INTEGER))/(((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)))) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) ISNULL))))OR(0X34cc34a5)))AND(t0.c0)))OR((((x'', t0.c0)) NOT BETWEEN ((t0.c0, 'O')) AND ((t0.c0, 0.08948534984541667)))))) ORDER BY ((CAST(t0.c0 AS INTEGER))/(((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) ISNULL))))OR(0X34cc34a5)))AND(t0.c0)))OR((((x'', t0.c0)) NOT BETWEEN ((t0.c0, 'O')) AND ((t0.c0, 0.08948534984541667)))))) ORDER BY ((CAST(t0.c0 AS INTEGER))/(((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)))) LIMIT 0X0;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) ISNULL))) ASC;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN ()), (((t0.c0, t0.c0))>=((t0.c0, t0.c0))), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), (((t0.c0))==((t0.c0))), ((t0.c0)==(t0.c0)))) AND (('', ((t0.c0)<=(t0.c0)), NULL COLLATE BINARY, ((t0.c0) NOTNULL), x'66')))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) ISNULL))) ASC LIMIT 1;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) ISNULL))) ASC;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN ()), (((t0.c0, t0.c0))>=((t0.c0, t0.c0))), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), (((t0.c0))==((t0.c0))), ((t0.c0)==(t0.c0)))) AND (('', ((t0.c0)<=(t0.c0)), NULL COLLATE BINARY, ((t0.c0) NOTNULL), x'66')))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) ISNULL))) ASC LIMIT 1;
SELECT MIN(t0.c0) FROM t0 WHERE ((NOT (t0.c0)));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((NOT (t0.c0))) LIMIT 1 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CAST((+ (t0.c0)) AS NUMERIC)) LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE (((((((((((-1239805400)OR(t0.c0)))AND((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR(CAST(t0.c0 AS INTEGER))))OR(t0.c0 COLLATE NOCASE)))AND(t0.c0))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END)<<((((t0.c0))<=((t0.c0))))) ASC, ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((((0xffffffffb61a1228)OR(t0.c0)))AND((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR(CAST(t0.c0 AS INTEGER))))OR(t0.c0 COLLATE NOCASE)))AND(t0.c0))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END)<<((((t0.c0))<=((t0.c0))))) ASC, ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) IS TRUE) DESC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST(((t0.c0)<(t0.c0)) AS BLOB)) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END)<<((((t0.c0))<=((t0.c0))))) ASC, ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0 COLLATE RTRIM))) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0.03106961641039463, NULL, t0.c0))))IS NOT(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), '717283822' DESC;
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0 COLLATE RTRIM))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB), -2113459527  NULLS FIRST LIMIT 0X2 INTERSECT SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))<(('&ê ' IN (t0.c0))))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB), -2113459527  NULLS FIRST LIMIT 2;
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0 COLLATE RTRIM))) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0.03106961641039463, NULL, t0.c0))))IS NOT(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), '717283822' DESC;
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0 COLLATE RTRIM))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB), -2113459527  NULLS FIRST LIMIT 0X2 INTERSECT SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))<(('&ê ' IN (t0.c0))))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB), -2113459527  NULLS FIRST LIMIT 2;
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT ((t0.c0)AND(t0.c0)), NULL));
SELECT DISTINCT * FROM t0 WHERE (LIKELIHOOD(DISTINCT ((t0.c0)AND(t0.c0)), NULL));
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT ((t0.c0)AND(t0.c0)), NULL));
SELECT ALL * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) NOTNULL))));
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) NOTNULL)))) ORDER BY (CAST(t0.c0 AS BLOB) IN ((((t0.c0))<=((t0.c0))))), INSTR((- (t0.c0)), ABS(t0.c0))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) NOTNULL))));
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) NOTNULL)))) ORDER BY (CAST(t0.c0 AS BLOB) IN ((((t0.c0))<=((t0.c0))))), INSTR((- (t0.c0)), ABS(t0.c0))  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (x'329edb4d')) IN (json_patch(t0.c0, t0.c0)))) ORDER BY ((((t0.c0)>>(t0.c0)))<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC, (((t0.c0 IN (t0.c0)))<(t0.c0 COLLATE BINARY));
SELECT ALL * FROM t0 WHERE ((((((t0.c0) BETWEEN (t0.c0) AND (x'329edb4d')) IN (json_patch(t0.c0, t0.c0))))AND(((t0.c0) BETWEEN (NULL) AND (t0.c0)) COLLATE BINARY))) ORDER BY NULLIF(DISTINCT ((t0.c0) NOT NULL), ((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))LIKE((((NULL, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))) DESC  NULLS FIRST, (CAST(t0.c0 AS INTEGER) IN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0)=(t0.c0)))) INTERSECT SELECT * FROM t0 WHERE (((((t0.c0)||(t0.c0)))-(t0.c0))) ORDER BY NULLIF(DISTINCT ((t0.c0) NOT NULL), ((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))LIKE((((NULL, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))) DESC  NULLS FIRST, (CAST(t0.c0 AS INTEGER) IN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0)=(t0.c0))));
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (x'329edb4d')) IN (json_patch(t0.c0, t0.c0)))) ORDER BY ((((t0.c0)>>(t0.c0)))<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC, (((t0.c0 IN (t0.c0)))<(t0.c0 COLLATE BINARY));
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((t0.c0)AND(((((t0.c0) IS TRUE)) NOTNULL))));
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c0))) BETWEEN (t0.c0) AND (MAX('-1239805400', t0.c0))));
SELECT COUNT(*) FROM t0 WHERE ((((((- (t0.c0))) BETWEEN (t0.c0) AND (MAX('-1239805400', t0.c0))))AND(((((t0.c0)&(t0.c0)))>(((t0.c0) ISNULL)))))) ORDER BY ((((t0.c0)-(t0.c0)))IS NOT(((t0.c0) NOTNULL)))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT COUNT(*) FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END THEN (t0.c0 IN (2.24546577E8)) ELSE (0.9583966798694991 IN (t0.c0)) END) ORDER BY ((((t0.c0)-(t0.c0)))IS NOT(((t0.c0) NOTNULL)))  NULLS FIRST LIMIT 1;
SELECT * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE)) LIMIT 3 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOTNULL))OR(((2058946507) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) LIMIT 0x3;
SELECT * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE)) LIMIT 3 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOTNULL))OR(((2058946507) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) LIMIT 0x3;
SELECT MAX(t0.c0) FROM t0 WHERE (-20410800) ORDER BY (((t0.c0)IS(t0.c0)) IN (((t0.c0)<=(t0.c0)))) ASC, CASE (('1549388927') NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN (~ ('dDî ')) THEN ((t0.c0) NOT NULL) ELSE SQLITE_COMPILEOPTION_USED(t0.c0) END DESC  NULLS FIRST, ((((t0.c0))!=((t0.c0))) IN ((+ (t0.c0))))  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((0Xfffffffffec88e50)AND((((((NULL)>(t0.c0)), (t0.c0 IN (871437567, t0.c0, '-10958963'))))<>((((t0.c0)GLOB(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))))) ORDER BY CASE WHEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0) IS FALSE) WHEN ((((((((t0.c0)AND('(WJ(é¹a ')))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN CAST(t0.c0 AS REAL) ELSE (- (t0.c0)) END DESC  NULLS FIRST, t0.c0 ASC, CAST(((t0.c0) ISNULL) AS BLOB) LIMIT 0x3;
SELECT * FROM t0 WHERE ((((NOT (t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((t0.c0 IN ()))));
SELECT DISTINCT * FROM t0 WHERE ((((((NOT (t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((t0.c0 IN ()))))AND((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN (((t0.c0)>=(NULL))))))) ORDER BY (((('1882081475')<(t0.c0)))<(t0.c0 COLLATE BINARY)) LIMIT 0;
SELECT * FROM t0 WHERE ((((NOT (t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((t0.c0 IN ()))));
SELECT DISTINCT * FROM t0 WHERE ((((((NOT (t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((t0.c0 IN ()))))AND((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN (((t0.c0)>=(NULL))))))) ORDER BY (((('1882081475')<(t0.c0)))<(t0.c0 COLLATE BINARY)) LIMIT 0;
SELECT MIN(t0.c0) FROM t0 WHERE ((NOT (t0.c0 COLLATE NOCASE))) ORDER BY (((NOT (t0.c0))) IS TRUE), ((((t0.c0, t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0, t0.c0))) IN ());
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((NOT (t0.c0 COLLATE NOCASE)))AND(((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND('OY')))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT NULL)))) ORDER BY (((NULL, x'51294a0c')) BETWEEN (('g,', CAST(t0.c0 AS NUMERIC))) AND ((TRIM(DISTINCT t0.c0), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '2119314506' END)))  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) IS TRUE)  NULLS LAST LIMIT 1 INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE ((- (TYPEOF(DISTINCT t0.c0)))) ORDER BY (((NULL, x'51294a0c')) BETWEEN (('g,', CAST(t0.c0 AS NUMERIC))) AND ((TRIM(DISTINCT t0.c0), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '2119314506' END)))  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) IS TRUE)  NULLS LAST LIMIT 1;
SELECT * FROM t0 INDEXED BY i29 WHERE ((((t0.c0 IN (t0.c0)))<<(t0.c0))) ORDER BY ((STRFTIME(t0.c0, t0.c0, t0.c0))AND(t0.c0 COLLATE BINARY)) ASC, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))=(((t0.c0)>(t0.c0)))), ((((t0.c0) BETWEEN (0.3970818771870539) AND (t0.c0))) NOT NULL);
SELECT DISTINCT * FROM t0 INDEXED BY i29 WHERE ((((((t0.c0 IN (t0.c0)))<<(t0.c0)))AND(((((NULL) BETWEEN (t0.c0) AND (t0.c0)))>>((((t0.c0, '1224713097'))>((t0.c0, t0.c0)))))))) ORDER BY ((STRFTIME(t0.c0, t0.c0, t0.c0))AND(t0.c0 COLLATE BINARY)) ASC, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))=(((t0.c0)>(t0.c0)))), ((((t0.c0) BETWEEN (0.3970818771870539) AND (t0.c0))) NOT NULL) INTERSECT SELECT DISTINCT * FROM t0 INDEXED BY i29 WHERE ((((t0.c0)) BETWEEN ((((((((t0.c0)AND(t0.c0)))AND('')))OR(t0.c0)))) AND ((((t0.c0)|(t0.c0)))))) ORDER BY ((STRFTIME(t0.c0, t0.c0, t0.c0))AND(t0.c0 COLLATE BINARY)) ASC, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))=(((t0.c0)>(t0.c0)))), ((((t0.c0) BETWEEN (0.3970818771870539) AND (t0.c0))) NOT NULL);
SELECT * FROM t0 INDEXED BY i29 WHERE ((((t0.c0 IN (t0.c0)))<<(t0.c0))) ORDER BY ((STRFTIME(t0.c0, t0.c0, t0.c0))AND(t0.c0 COLLATE BINARY)) ASC, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))=(((t0.c0)>(t0.c0)))), ((((t0.c0) BETWEEN (0.3970818771870539) AND (t0.c0))) NOT NULL);
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (((t0.c0)AND(((x'') IS TRUE)))) ORDER BY CASE WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN t0.c0 WHEN ((t0.c0) NOT NULL) THEN json_object(t0.c0, -722364497) WHEN CASE WHEN t0.c0 THEN 0.5878710302520644 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN -4.26363608E8 END THEN ((t0.c0)>>(t0.c0)) END, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(NULLIF(t0.c0, t0.c0)))  NULLS FIRST, (((NOT (t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0)AND(0xffffffffcad63593)))) ASC LIMIT 0;
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (((t0.c0)AND(((x'') IS TRUE)))) ORDER BY CASE WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN t0.c0 WHEN ((t0.c0) NOT NULL) THEN json_object(t0.c0, -722364497) WHEN CASE WHEN t0.c0 THEN 0.5878710302520644 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN -4.26363608E8 END THEN ((t0.c0)>>(t0.c0)) END, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(NULLIF(t0.c0, t0.c0)))  NULLS FIRST, (((NOT (t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0)AND(0xffffffffcad63593)))) ASC LIMIT 0;
SELECT MIN(t0.c0) FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(0x4184744c)))OR(t0.c0)))OR(t0.c0)))<(NULL)));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))OR(1099199564)))OR(t0.c0)))OR(t0.c0)))<(NULL)))AND(TYPEOF(DISTINCT MAX(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))) ORDER BY TOTAL_CHANGES() LIMIT 0x0 INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0)=(t0.c0 COLLATE NOCASE))) ORDER BY TOTAL_CHANGES() LIMIT 0x0;
SELECT ALL * FROM t0 INDEXED BY i29 WHERE (((CAST(t0.c0 AS REAL))/((((t0.c0, t0.c0))!=((t0.c0, t0.c0)))))) ORDER BY ((((((((t0.c0)<(t0.c0)))AND(((-6.15690058E8)*(t0.c0)))))AND(((t0.c0)AND(t0.c0)))))AND(t0.c0));
SELECT DISTINCT * FROM t0 INDEXED BY i29 WHERE (((((CAST(t0.c0 AS REAL))/((((t0.c0, t0.c0))<>((t0.c0, t0.c0))))))AND(((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(x'c1')))==((((t0.c0))<=((t0.c0)))))))) ORDER BY ((((((((t0.c0)<(t0.c0)))AND(((-6.15690058E8)*(t0.c0)))))AND(((t0.c0)AND(t0.c0)))))AND(t0.c0)) INTERSECT SELECT DISTINCT * FROM t0 INDEXED BY i29 WHERE ((((t0.c0, t0.c0)) BETWEEN ((load_extension(t0.c0), (+ (t0.c0)))) AND ((t0.c0 COLLATE NOCASE, (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((188415772, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))))) ORDER BY ((((((((t0.c0)<(t0.c0)))AND(((-6.15690058E8)*(t0.c0)))))AND(((t0.c0)AND(t0.c0)))))AND(t0.c0));
SELECT ALL * FROM t0 INDEXED BY i29 WHERE (((CAST(t0.c0 AS REAL))/((((t0.c0, t0.c0))!=((t0.c0, t0.c0)))))) ORDER BY ((((((((t0.c0)<(t0.c0)))AND(((-6.15690058E8)*(t0.c0)))))AND(((t0.c0)AND(t0.c0)))))AND(t0.c0));
SELECT ALL * FROM t0 WHERE (((json(t0.c0))IS NOT(((t0.c0)LIKE(t0.c0))))) ORDER BY ((((t0.c0)IS NOT(t0.c0))) BETWEEN (t0.c0) AND (((t0.c0)-(t0.c0)))) ASC  NULLS LAST, CAST(((t0.c0)=(t0.c0)) AS BLOB);
SELECT ALL * FROM t0 WHERE (((json(t0.c0))IS NOT(((t0.c0)LIKE(t0.c0))))) ORDER BY (CAST(t0.c0 AS INTEGER) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), ((CAST(t0.c0 AS INTEGER))IS(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), ((((((t0.c0) IS TRUE))OR((t0.c0 IN (t0.c0, t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (((json(t0.c0))IS NOT(((t0.c0)LIKE(t0.c0))))) ORDER BY ((((t0.c0)IS NOT(t0.c0))) BETWEEN (t0.c0) AND (((t0.c0)-(t0.c0)))) ASC  NULLS LAST, CAST(((t0.c0)=(t0.c0)) AS BLOB);
SELECT * FROM t0 WHERE (UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ORDER BY UPPER(DISTINCT ((t0.c0)||('-1528442103')))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ORDER BY UPPER(DISTINCT ((t0.c0)||('-1528442103')))  NULLS FIRST LIMIT 0x2;
SELECT * FROM t0 WHERE (UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ORDER BY UPPER(DISTINCT ((t0.c0)||('-1528442103')))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ORDER BY UPPER(DISTINCT ((t0.c0)||('-1528442103')))  NULLS FIRST LIMIT 0x2;
SELECT * FROM t0 WHERE (CAST(NULL AS NUMERIC));
SELECT * FROM t0 WHERE (CAST(NULL AS NUMERIC)) LIMIT 0x0;
SELECT * FROM t0 WHERE (CAST(NULL AS NUMERIC));
SELECT * FROM t0 WHERE (CAST(NULL AS NUMERIC)) LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (((x'')%(t0.c0 COLLATE NOCASE))) ORDER BY ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT BETWEEN ((NOT (t0.c0))) AND (t0.c0))  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT(('[S' IN (t0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((x'')%(t0.c0 COLLATE NOCASE)))AND((((((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR((((t0.c0))>=((t0.c0))))))AND((t0.c0 IN ()))))OR(((t0.c0) NOTNULL))))AND(((t0.c0) IS TRUE)))))) ORDER BY ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT BETWEEN ((NOT (t0.c0))) AND (t0.c0))  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT(('[S' IN (t0.c0))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((x'')%(t0.c0 COLLATE NOCASE))) ORDER BY ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT BETWEEN ((NOT (t0.c0))) AND (t0.c0))  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT(('[S' IN (t0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((x'')%(t0.c0 COLLATE NOCASE)))AND((((((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR((((t0.c0))>=((t0.c0))))))AND((t0.c0 IN ()))))OR(((t0.c0) NOTNULL))))AND(((t0.c0) IS TRUE)))))) ORDER BY ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT BETWEEN ((NOT (t0.c0))) AND (t0.c0))  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT(('[S' IN (t0.c0))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((- (84335673)), ((t0.c0)*(t0.c0))))<=((CAST(0xfffffffffc3bb4c3 AS TEXT), ((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0)))))) ORDER BY ((((((((((((t0.c0)AND(t0.c0)))AND('2119314506')))AND(NULL)))OR(t0.c0)))OR('B')))*(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) DESC, ((HEX(t0.c0))||(t0.c0));
SELECT ALL * FROM t0 WHERE (((((- (0x506dc39)), ((t0.c0)*(t0.c0))))=((CAST(-63195965 AS TEXT), ((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0)))))) ORDER BY ((((((((((((t0.c0)AND(t0.c0)))AND('2119314506')))AND(NULL)))OR(t0.c0)))OR('B')))*(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) DESC, ((HEX(t0.c0))||(t0.c0)) LIMIT 0X0 INTERSECT SELECT * FROM t0 WHERE (((((((t0.c0)<<(t0.c0)))AND(t0.c0 COLLATE RTRIM)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((((((((((t0.c0)AND(t0.c0)))AND('2119314506')))AND(NULL)))OR(t0.c0)))OR('B')))*(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) DESC, ((HEX(t0.c0))||(t0.c0)) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (((((- (84335673)), ((t0.c0)*(t0.c0))))<=((CAST(0xfffffffffc3bb4c3 AS TEXT), ((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0)))))) ORDER BY ((((((((((((t0.c0)AND(t0.c0)))AND('2119314506')))AND(NULL)))OR(t0.c0)))OR('B')))*(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) DESC, ((HEX(t0.c0))||(t0.c0));
SELECT ALL * FROM t0 WHERE (((((- (0x506dc39)), ((t0.c0)*(t0.c0))))=((CAST(-63195965 AS TEXT), ((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0)))))) ORDER BY ((((((((((((t0.c0)AND(t0.c0)))AND('2119314506')))AND(NULL)))OR(t0.c0)))OR('B')))*(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) DESC, ((HEX(t0.c0))||(t0.c0)) LIMIT 0X0 INTERSECT SELECT * FROM t0 WHERE (((((((t0.c0)<<(t0.c0)))AND(t0.c0 COLLATE RTRIM)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((((((((((t0.c0)AND(t0.c0)))AND('2119314506')))AND(NULL)))OR(t0.c0)))OR('B')))*(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) DESC, ((HEX(t0.c0))||(t0.c0)) LIMIT 0X0;
SELECT MAX(t0.c0) FROM t0 WHERE ((((((t0.c0)GLOB(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, CAST(t0.c0 AS INTEGER), ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0)), (+ (t0.c0))))<((CAST(t0.c0 AS BLOB), ((t0.c0)/(t0.c0)), ((NULL) ISNULL), (- (t0.c0)), ('-20410800' IN (t0.c0)))))) ORDER BY x'49'  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((((t0.c0)GLOB(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, CAST(t0.c0 AS INTEGER), ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0)), (+ (t0.c0))))<((CAST(t0.c0 AS BLOB), ((t0.c0)/(t0.c0)), ((NULL) ISNULL), (- (t0.c0)), ('-20410800' IN (t0.c0))))))AND(((((((t0.c0)AND(NULL)))AND(NULL)))IS(((t0.c0)<(t0.c0))))))) ORDER BY x'49'  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 WHERE (((t0.c0)GLOB(x'7e8f8e')) COLLATE BINARY) ORDER BY (x'' IN (t0.c0, t0.c0)) COLLATE RTRIM, ((COALESCE(t0.c0, t0.c0, t0.c0))|(t0.c0)) DESC;
SELECT ALL * FROM t0 WHERE (((t0.c0)GLOB(x'7e8f8e')) COLLATE BINARY) ORDER BY (NOT (((t0.c0)/(t0.c0)))) DESC  NULLS FIRST, ((((((((t0.c0)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)OR(t0.c0)))))AND(((t0.c0)&(t0.c0)))) DESC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (CASE ((t0.c0) ISNULL)  WHEN 0.7034717991299468 THEN t0.c0 COLLATE BINARY WHEN CAST(t0.c0 AS INTEGER) THEN NULLIF(t0.c0, t0.c0) END) ORDER BY (NOT (((t0.c0)/(t0.c0)))) DESC  NULLS FIRST, ((((((((t0.c0)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)OR(t0.c0)))))AND(((t0.c0)&(t0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c0)GLOB(x'7e8f8e')) COLLATE BINARY) ORDER BY (x'' IN (t0.c0, t0.c0)) COLLATE RTRIM, ((COALESCE(t0.c0, t0.c0, t0.c0))|(t0.c0)) DESC;
SELECT ALL * FROM t0 WHERE (((t0.c0)GLOB(x'7e8f8e')) COLLATE BINARY) ORDER BY (NOT (((t0.c0)/(t0.c0)))) DESC  NULLS FIRST, ((((((((t0.c0)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)OR(t0.c0)))))AND(((t0.c0)&(t0.c0)))) DESC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (CASE ((t0.c0) ISNULL)  WHEN 0.7034717991299468 THEN t0.c0 COLLATE BINARY WHEN CAST(t0.c0 AS INTEGER) THEN NULLIF(t0.c0, t0.c0) END) ORDER BY (NOT (((t0.c0)/(t0.c0)))) DESC  NULLS FIRST, ((((((((t0.c0)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)OR(t0.c0)))))AND(((t0.c0)&(t0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)OR(-144268744)))AND(t0.c0)))AND((t0.c0 IN (t0.c0)))))AND((t0.c0 IN (t0.c0, t0.c0)))));
SELECT * FROM t0 WHERE (((((((((((t0.c0)OR(0xfffffffff766a238)))AND(t0.c0)))AND((t0.c0 IN (t0.c0)))))AND((t0.c0 IN (t0.c0, t0.c0)))))AND((- ((t0.c0 IN (t0.c0)))))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)OR(-144268744)))AND(t0.c0)))AND((t0.c0 IN (t0.c0)))))AND((t0.c0 IN (t0.c0, t0.c0)))));
SELECT * FROM t0 WHERE (((((((((((t0.c0)OR(0xfffffffff766a238)))AND(t0.c0)))AND((t0.c0 IN (t0.c0)))))AND((t0.c0 IN (t0.c0, t0.c0)))))AND((- ((t0.c0 IN (t0.c0)))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((0.8826569514380319 IN (TRIM(DISTINCT t0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((0.8826569514380319 IN (TRIM(DISTINCT t0.c0))))AND('-1882441895'))) INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0, t0.c0))=((t0.c0, t0.c0))) IN (((t0.c0)<(t0.c0)))));
SELECT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) ISNULL)))) ORDER BY NULL COLLATE NOCASE  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) ISNULL))))AND(0.7762710001098772))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (NULL))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0)-(t0.c0)))) ASC, ((((t0.c0)%(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((NULL, t0.c0)) NOT BETWEEN ((NULL, t0.c0)) AND ((t0.c0, t0.c0)))))  NULLS LAST, ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(((t0.c0)<>(t0.c0)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (NULL))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0)-(t0.c0)))) ASC, ((((t0.c0)%(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((NULL, t0.c0)) NOT BETWEEN ((NULL, t0.c0)) AND ((t0.c0, t0.c0)))))  NULLS LAST, ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(((t0.c0)!=(t0.c0))));
SELECT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) ISNULL)))) ORDER BY NULL COLLATE NOCASE  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) ISNULL))))AND(0.7762710001098772))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (NULL))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0)-(t0.c0)))) ASC, ((((t0.c0)%(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((NULL, t0.c0)) NOT BETWEEN ((NULL, t0.c0)) AND ((t0.c0, t0.c0)))))  NULLS LAST, ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(((t0.c0)<>(t0.c0)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (NULL))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0)-(t0.c0)))) ASC, ((((t0.c0)%(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((NULL, t0.c0)) NOT BETWEEN ((NULL, t0.c0)) AND ((t0.c0, t0.c0)))))  NULLS LAST, ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(((t0.c0)!=(t0.c0))));
SELECT * FROM t0 WHERE (CAST((~ (t0.c0)) AS BLOB));
SELECT ALL * FROM t0 WHERE (CAST((~ (t0.c0)) AS BLOB)) ORDER BY (t0.c0 IN (IFNULL(DISTINCT t0.c0, t0.c0), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC, ((('290230488', t0.c0))<=((t0.c0, t0.c0))) COLLATE BINARY;
SELECT * FROM t0 WHERE (CAST((~ (t0.c0)) AS BLOB));
SELECT ALL * FROM t0 WHERE (CAST((~ (t0.c0)) AS BLOB)) ORDER BY (t0.c0 IN (IFNULL(DISTINCT t0.c0, t0.c0), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC, ((('290230488', t0.c0))<=((t0.c0, t0.c0))) COLLATE BINARY;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((- (t0.c0))))  NULLS LAST, CASE WHEN t0.c0 THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((x'') BETWEEN (t0.c0) AND (t0.c0)) ELSE (~ (t0.c0)) END;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT))AND(((TYPEOF(t0.c0)) BETWEEN ('2052193680') AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))))) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((- (t0.c0))))  NULLS LAST, CASE WHEN t0.c0 THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((x'') BETWEEN (t0.c0) AND (t0.c0)) ELSE (~ (t0.c0)) END LIMIT 4;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)/(t0.c0)))<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (- ((t0.c0 IN ()))) ASC, CAST((~ (t0.c0)) AS REAL) DESC  NULLS LAST, t0.c0 DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0)/(t0.c0)))<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY TRIM(COALESCE('1636587660', t0.c0, t0.c0, t0.c0), ((('1600490757', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND ((((t0.c0, t0.c0))!=((t0.c0, t0.c0))))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((- (t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND ((((t0.c0, t0.c0))!=((t0.c0, t0.c0))))))AND((((('2119314506')>=(t0.c0)))<<((-1.0958963E7 IN (t0.c0))))))) ORDER BY t0.c0  NULLS FIRST, CASE WHEN (+ (t0.c0)) THEN ((t0.c0)<(0.7552300774958424)) WHEN ((NULL)*(t0.c0)) THEN json_remove(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CASE WHEN t0.c0 THEN x'9d30bf' END WHEN ((t0.c0) ISNULL) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) WHEN t0.c0 THEN ((t0.c0) NOTNULL) WHEN ((t0.c0)LIKE(t0.c0)) THEN (- (t0.c0)) WHEN t0.c0 COLLATE RTRIM THEN TYPEOF(DISTINCT t0.c0) ELSE (((t0.c0, t0.c0))!=((t0.c0, t0.c0))) END  NULLS LAST, (((t0.c0)) BETWEEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))) AND (((NOT (t0.c0))))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE) ORDER BY CASE (t0.c0 IN (t0.c0))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (('871437567') BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 THEN (~ (t0.c0)) WHEN t0.c0 COLLATE BINARY THEN ((((-8.91931245E8)AND(t0.c0)))OR(t0.c0)) ELSE t0.c0 COLLATE RTRIM END;
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS FALSE) COLLATE NOCASE)AND('?'))) ORDER BY ((((((((((t0.c0)>=(t0.c0)))OR(0.888293443226404)))AND(t0.c0 COLLATE BINARY)))AND((t0.c0 IN (t0.c0)))))OR(((t0.c0)%(t0.c0)))) DESC LIMIT 0X4;
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE) ORDER BY CASE (t0.c0 IN (t0.c0))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (('871437567') BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 THEN (~ (t0.c0)) WHEN t0.c0 COLLATE BINARY THEN ((((-8.91931245E8)AND(t0.c0)))OR(t0.c0)) ELSE t0.c0 COLLATE RTRIM END;
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS FALSE) COLLATE NOCASE)AND('?'))) ORDER BY ((((((((((t0.c0)>=(t0.c0)))OR(0.888293443226404)))AND(t0.c0 COLLATE BINARY)))AND((t0.c0 IN (t0.c0)))))OR(((t0.c0)%(t0.c0)))) DESC LIMIT 0X4;
SELECT ALL * FROM t0 WHERE (CAST(LIKELIHOOD(t0.c0, t0.c0) AS TEXT));
SELECT ALL * FROM t0 WHERE (CAST(LIKELIHOOD(t0.c0, t0.c0) AS TEXT)) ORDER BY ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))<>((((t0.c0, '-1e500')) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, '>')))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(LIKELIHOOD(t0.c0, t0.c0) AS TEXT));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((UNLIKELY(DISTINCT t0.c0)) NOTNULL));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((UNLIKELY(DISTINCT t0.c0)) NOTNULL))AND(((((((((((t0.c0)>=(t0.c0)))OR(((t0.c0) NOT NULL))))AND((~ (t0.c0)))))AND((- (t0.c0)))))AND(((t0.c0) NOTNULL)))))) ORDER BY (json_insert(t0.c0, -58230501, t0.c0, t0.c0) IN ((+ (t0.c0)))) ASC, (((CAST(t0.c0 AS REAL)))>((LTRIM(t0.c0)))) ASC  NULLS LAST, (((t0.c0)) BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((('', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((0.9692806103974461, t0.c0)))))) DESC LIMIT 0x1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (t0.c0);
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0)AND(((CAST(t0.c0 AS TEXT)) NOT NULL))));
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN x'c4' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS NUMERIC));
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN x'c4' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS NUMERIC)) ORDER BY ((((((((0x18f52c62)OR(t0.c0)))AND(t0.c0)))AND(NULL))) ISNULL) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))LIKE(CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((((((418720866)OR(t0.c0)))AND(t0.c0)))AND(NULL))) ISNULL) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN x'c4' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS NUMERIC));
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN x'c4' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS NUMERIC)) ORDER BY ((((((((0x18f52c62)OR(t0.c0)))AND(t0.c0)))AND(NULL))) ISNULL) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))LIKE(CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((((((418720866)OR(t0.c0)))AND(t0.c0)))AND(NULL))) ISNULL) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)<<(t0.c0))) IS FALSE)) ORDER BY (((((t0.c0))<=((NULL)))) IS TRUE) DESC  NULLS LAST, ((t0.c0)||((((NULL)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) ASC;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0)<<(t0.c0))) IS FALSE)) ORDER BY (t0.c0 IN (NULL)) COLLATE RTRIM ASC, json_valid(((t0.c0)GLOB(t0.c0))) ASC LIMIT 0x0;
SELECT MIN(t0.c0) FROM t0 WHERE ((- ((+ (t0.c0))))) ORDER BY (((t0.c0)>>(t0.c0)) IN ((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS LAST, t0.c0, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((t0.c0)<(t0.c0))));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((- ((+ (t0.c0))))) ORDER BY (((t0.c0)>>(t0.c0)) IN ((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS LAST, t0.c0, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((t0.c0)<(t0.c0)))) INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0)) BETWEEN ((x'')) AND (((((t0.c0, t0.c0))>((t0.c0, t0.c0))))))) ORDER BY (((t0.c0)>>(t0.c0)) IN ((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS LAST, t0.c0, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((t0.c0)<(t0.c0))));
SELECT * FROM t0 WHERE (((((t0.c0)>>(t0.c0)))==((t0.c0 IN ()))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)>>(t0.c0)))=((t0.c0 IN ())))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (('118109865' COLLATE RTRIM IN ()));
SELECT * FROM t0 WHERE (((((t0.c0)>>(t0.c0)))==((t0.c0 IN ()))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)>>(t0.c0)))=((t0.c0 IN ())))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (('118109865' COLLATE RTRIM IN ()));
SELECT MIN(t0.c0) FROM t0 WHERE ((((CAST(t0.c0 AS TEXT), ((t0.c0)-(t0.c0)), UPPER(DISTINCT t0.c0), x'ed'))>=(((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), (~ (t0.c0)), (t0.c0 IN (t0.c0, t0.c0, 0.9479017287708916)), CASE WHEN t0.c0 THEN t0.c0 END))));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((CAST(t0.c0 AS TEXT), ((t0.c0)-(t0.c0)), UPPER(DISTINCT t0.c0), x'ed'))>(((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), (~ (t0.c0)), (t0.c0 IN (t0.c0, t0.c0, 0.9479017287708916)), CASE WHEN t0.c0 THEN t0.c0 END)))) INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((t0.c0 IN ()))))OR((t0.c0 IN ()))));
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)>=(json_remove(t0.c0, t0.c0, t0.c0, t0.c0)))  NULLS LAST, t0.c0, (((t0.c0)||(t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'm?' WHEN x'1371faf7' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END));
SELECT ALL * FROM t0 WHERE (((t0.c0)AND((NOT (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))))) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((- (t0.c0)))) ASC LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (NULL) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((- (t0.c0)))) ASC LIMIT 1;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)>=(json_remove(t0.c0, t0.c0, t0.c0, t0.c0)))  NULLS LAST, t0.c0, (((t0.c0)||(t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'm?' WHEN x'1371faf7' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END));
SELECT ALL * FROM t0 WHERE (((t0.c0)AND((NOT (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))))) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((- (t0.c0)))) ASC LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (NULL) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((- (t0.c0)))) ASC LIMIT 1;
SELECT ALL * FROM t0 WHERE (LENGTH(LIKELIHOOD(DISTINCT NULL, x'855fc0'))) ORDER BY (((t0.c0 IN ()))%(((t0.c0) ISNULL)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (LENGTH(LIKELIHOOD(DISTINCT NULL, x'855fc0'))) ORDER BY (((t0.c0 IN ()))%(((t0.c0) ISNULL)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (LENGTH(LIKELIHOOD(DISTINCT NULL, x'855fc0'))) ORDER BY (((t0.c0 IN ()))%(((t0.c0) ISNULL)))  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE (((CASE 0.6710776583781971  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)-((('-1819306421')*(t0.c0)))));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((CASE 0.6710776583781971  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)-((('-1819306421')*(t0.c0))))) ORDER BY (t0.c0 IN (((t0.c0) ISNULL), TYPEOF(t0.c0))), x'' COLLATE BINARY LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((((((t0.c0 COLLATE BINARY)AND(((t0.c0)IS(t0.c0)))))OR(NULL)))OR(t0.c0)) ASC, ((((t0.c0)>(t0.c0)))<>((t0.c0 IN ()))) ASC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY (NOT ((~ (t0.c0)))) LIMIT 0x0 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) ISNULL)) ORDER BY (NOT ((~ (t0.c0)))) LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0))) IS TRUE)) ORDER BY ((t0.c0)IS(CHAR(t0.c0, t0.c0, t0.c0, t0.c0))) DESC;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0))) IS TRUE))AND((~ (CAST(t0.c0 AS BLOB)))))) ORDER BY ((t0.c0)IS(CHAR(t0.c0, t0.c0, t0.c0, t0.c0))) DESC INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ('c)uZé­¢A') ORDER BY ((t0.c0)IS(CHAR(t0.c0, t0.c0, t0.c0, t0.c0))) DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, NULL))), (t0.c0 IN (t0.c0, t0.c0)))) AND ((((t0.c0)AND(-1.0958963E7)), CAST('-298618260' AS TEXT))))) ORDER BY 0.7382185098365368 COLLATE BINARY, CAST(t0.c0 AS TEXT) COLLATE NOCASE, (((t0.c0))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ASC;
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, NULL))), (t0.c0 IN (t0.c0, t0.c0)))) AND ((((t0.c0)AND(-1.0958963E7)), CAST('-298618260' AS TEXT)))))AND(((NULL)-(t0.c0)) COLLATE BINARY COLLATE RTRIM))) ORDER BY 0.7382185098365368 COLLATE BINARY, CAST(t0.c0 AS TEXT) COLLATE NOCASE, (((t0.c0))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ASC LIMIT 0X1 INTERSECT SELECT ALL * FROM t0 WHERE (CASE -1.2398054E9  WHEN '}XL' COLLATE BINARY THEN t0.c0 ELSE ((t0.c0)OR(t0.c0)) END) ORDER BY 0.7382185098365368 COLLATE BINARY, CAST(t0.c0 AS TEXT) COLLATE NOCASE, (((t0.c0))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ASC LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, NULL))), (t0.c0 IN (t0.c0, t0.c0)))) AND ((((t0.c0)AND(-1.0958963E7)), CAST('-298618260' AS TEXT))))) ORDER BY 0.7382185098365368 COLLATE BINARY, CAST(t0.c0 AS TEXT) COLLATE NOCASE, (((t0.c0))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ASC;
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, NULL))), (t0.c0 IN (t0.c0, t0.c0)))) AND ((((t0.c0)AND(-1.0958963E7)), CAST('-298618260' AS TEXT)))))AND(((NULL)-(t0.c0)) COLLATE BINARY COLLATE RTRIM))) ORDER BY 0.7382185098365368 COLLATE BINARY, CAST(t0.c0 AS TEXT) COLLATE NOCASE, (((t0.c0))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ASC LIMIT 0X1 INTERSECT SELECT ALL * FROM t0 WHERE (CASE -1.2398054E9  WHEN '}XL' COLLATE BINARY THEN t0.c0 ELSE ((t0.c0)OR(t0.c0)) END) ORDER BY 0.7382185098365368 COLLATE BINARY, CAST(t0.c0 AS TEXT) COLLATE NOCASE, (((t0.c0))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ASC LIMIT 1;
SELECT MAX(t0.c0) FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (421601257, (((t0.c0, t0.c0))>((t0.c0, t0.c0))), (+ (t0.c0)))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (0x19211fe9, (((t0.c0, t0.c0))>((t0.c0, t0.c0))), (+ (t0.c0))))) ORDER BY (((((t0.c0, t0.c0))<((t0.c0, t0.c0)))) NOT BETWEEN (LTRIM(NULL, t0.c0)) AND (((t0.c0) IS FALSE)));
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))+(((t0.c0)<=(t0.c0))))) ORDER BY (((NULL)) BETWEEN ((t0.c0)) AND ((CASE WHEN t0.c0 THEN t0.c0 END))) ASC  NULLS FIRST, ((((((CAST(t0.c0 AS BLOB))OR(((t0.c0)=(t0.c0)))))OR(t0.c0)))AND((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))+(((t0.c0)<(t0.c0))))) ORDER BY (((NULL)) BETWEEN ((t0.c0)) AND ((CASE WHEN t0.c0 THEN t0.c0 END))) ASC  NULLS FIRST, ((((((CAST(t0.c0 AS BLOB))OR(((t0.c0)=(t0.c0)))))OR(t0.c0)))AND((t0.c0 IN ()))) DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))+(((t0.c0)<=(t0.c0))))) ORDER BY (((NULL)) BETWEEN ((t0.c0)) AND ((CASE WHEN t0.c0 THEN t0.c0 END))) ASC  NULLS FIRST, ((((((CAST(t0.c0 AS BLOB))OR(((t0.c0)=(t0.c0)))))OR(t0.c0)))AND((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT NULL)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0) BETWEEN ('\JY,	3xP') AND (t0.c0))))) ORDER BY ((((t0.c0)/(t0.c0)))>((t0.c0 IN (t0.c0))));
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((((((t0.c0) NOT NULL)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0) BETWEEN ('\JY,	3xP') AND (t0.c0)))))AND(0.3106140443587251))) ORDER BY ((((t0.c0)/(t0.c0)))>((t0.c0 IN (t0.c0)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ('871437567') ORDER BY ((((t0.c0)/(t0.c0)))>((t0.c0 IN (t0.c0))));
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT NULL)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0) BETWEEN ('\JY,	3xP') AND (t0.c0))))) ORDER BY ((((t0.c0)/(t0.c0)))>((t0.c0 IN (t0.c0))));
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((((((t0.c0) NOT NULL)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0) BETWEEN ('\JY,	3xP') AND (t0.c0)))))AND(0.3106140443587251))) ORDER BY ((((t0.c0)/(t0.c0)))>((t0.c0 IN (t0.c0)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ('871437567') ORDER BY ((((t0.c0)/(t0.c0)))>((t0.c0 IN (t0.c0))));
SELECT * FROM t0 WHERE (((((t0.c0)=(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0)));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)<=(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0)))AND(((((t0.c0))>((t0.c0))) IN ())))) INTERSECT SELECT * FROM t0 WHERE (LIKELIHOOD((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((1034281120))), CAST(t0.c0 AS TEXT)));
SELECT * FROM t0 WHERE (((((t0.c0)=(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0)));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)<=(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0)))AND(((((t0.c0))>((t0.c0))) IN ())))) INTERSECT SELECT * FROM t0 WHERE (LIKELIHOOD((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((1034281120))), CAST(t0.c0 AS TEXT)));
SELECT MAX(t0.c0) FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((NOT (t0.c0)))))AND(NULL)));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((NOT (t0.c0)))))AND(NULL)))AND(CASE ((t0.c0) NOT NULL)  WHEN (((t0.c0))>=((t0.c0))) THEN (+ (t0.c0)) END))) LIMIT 4 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0) LIMIT 0x4;
SELECT ALL * FROM t0 WHERE ((((0x506dc39) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY 0xfffffffff37e82ac  NULLS LAST, ((CAST(t0.c0 AS NUMERIC)) NOTNULL), '665515619';
SELECT ALL * FROM t0 WHERE ((((((84335673) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()))AND(((~ (t0.c0)) IN ())))) ORDER BY -209812820  NULLS LAST, ((CAST(t0.c0 AS NUMERIC)) NOTNULL), '665515619';
SELECT ALL * FROM t0 WHERE ((((0x506dc39) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY 0xfffffffff37e82ac  NULLS LAST, ((CAST(t0.c0 AS NUMERIC)) NOTNULL), '665515619';
SELECT ALL * FROM t0 WHERE ((((((84335673) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()))AND(((~ (t0.c0)) IN ())))) ORDER BY -209812820  NULLS LAST, ((CAST(t0.c0 AS NUMERIC)) NOTNULL), '665515619';
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER));
SELECT ALL * FROM t0 WHERE (((CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER))AND(CAST(json_remove(t0.c0, t0.c0, t0.c0) AS INTEGER)))) ORDER BY t0.c0 ASC, ((t0.c0)||(CASE t0.c0  WHEN '1549388927' THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, (t0.c0 COLLATE BINARY IN (t0.c0, ((t0.c0) ISNULL))) DESC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((SUBSTR(t0.c0, t0.c0))))) ORDER BY t0.c0 ASC, ((t0.c0)||(CASE t0.c0  WHEN '1549388927' THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, (t0.c0 COLLATE BINARY IN (t0.c0, ((t0.c0) ISNULL))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER));
SELECT ALL * FROM t0 WHERE (((CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER))AND(CAST(json_remove(t0.c0, t0.c0, t0.c0) AS INTEGER)))) ORDER BY t0.c0 ASC, ((t0.c0)||(CASE t0.c0  WHEN '1549388927' THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, (t0.c0 COLLATE BINARY IN (t0.c0, ((t0.c0) ISNULL))) DESC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((SUBSTR(t0.c0, t0.c0))))) ORDER BY t0.c0 ASC, ((t0.c0)||(CASE t0.c0  WHEN '1549388927' THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, (t0.c0 COLLATE BINARY IN (t0.c0, ((t0.c0) ISNULL))) DESC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY PRINTF(((t0.c0)&(t0.c0)), '[ODmq') DESC, (((~ (t0.c0)))!=((t0.c0 IN (t0.c0))))  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY PRINTF(((t0.c0)&(t0.c0)), '[ODmq') DESC, (((~ (t0.c0)))!=((t0.c0 IN (t0.c0))))  NULLS LAST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY PRINTF(((t0.c0)&(t0.c0)), '[ODmq') DESC, (((~ (t0.c0)))<>((t0.c0 IN (t0.c0))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN 0.8826569514380319 WHEN x'' THEN t0.c0 END) NOT NULL));
SELECT ALL * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN 0.8826569514380319 WHEN x'' THEN t0.c0 END) NOT NULL))AND((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())))) INTERSECT SELECT ALL * FROM t0 WHERE (CAST((x'2d6a' IN ('-200258614', t0.c0)) AS REAL));
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN 0.8826569514380319 WHEN x'' THEN t0.c0 END) NOT NULL));
SELECT ALL * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN 0.8826569514380319 WHEN x'' THEN t0.c0 END) NOT NULL))AND((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())))) INTERSECT SELECT ALL * FROM t0 WHERE (CAST((x'2d6a' IN ('-200258614', t0.c0)) AS REAL));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)%(t0.c0)) END);
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)%(t0.c0)) END)AND(CAST(LIKELY(DISTINCT '}xl') AS INTEGER)))) INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0)))))>((((t0.c0)|(0.9479017287708916))))));
SELECT ALL * FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN t0.c0 END);
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN (t0.c0 IN ()) THEN t0.c0 END)AND(CASE NULL  WHEN (~ (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE 0.863752340007781 END)));
SELECT ALL * FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN t0.c0 END);
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN (t0.c0 IN ()) THEN t0.c0 END)AND(CASE NULL  WHEN (~ (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE 0.863752340007781 END)));
SELECT ALL * FROM t0 WHERE (CASE 0.7699292356868156  WHEN LIKELY(t0.c0) THEN (t0.c0 IN (t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END) ORDER BY CAST((((t0.c0))>((t0.c0))) AS REAL);
SELECT DISTINCT * FROM t0 WHERE (((CASE 0.7699292356868156  WHEN LIKELY(t0.c0) THEN (t0.c0 IN (t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END)AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (((t0.c0)<(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)IS(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 1.88415772E8 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), CAST(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(x'd6ec1a')))OR(t0.c0)))AND(t0.c0)) AS REAL) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (json_quote(x'')) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)IS(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 1.88415772E8 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), CAST(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(x'd6ec1a')))OR(t0.c0)))AND(t0.c0)) AS REAL) LIMIT 0;
SELECT ALL * FROM t0 WHERE (CASE 0.7699292356868156  WHEN LIKELY(t0.c0) THEN (t0.c0 IN (t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END) ORDER BY CAST((((t0.c0))>((t0.c0))) AS REAL);
SELECT DISTINCT * FROM t0 WHERE (((CASE 0.7699292356868156  WHEN LIKELY(t0.c0) THEN (t0.c0 IN (t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END)AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (((t0.c0)<(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)IS(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 1.88415772E8 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), CAST(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(x'd6ec1a')))OR(t0.c0)))AND(t0.c0)) AS REAL) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (json_quote(x'')) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)IS(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 1.88415772E8 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), CAST(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(x'd6ec1a')))OR(t0.c0)))AND(t0.c0)) AS REAL) LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE (((x'ac6a') NOT BETWEEN ((- (''))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY 0.6596075742276439 COLLATE RTRIM DESC  NULLS LAST, ((NULL)<>(CAST(t0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((x'ac6a') NOT BETWEEN ((- (''))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(((((t0.c0) IS TRUE)) NOT BETWEEN ((+ (t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))))) ORDER BY 0.6596075742276439 COLLATE RTRIM DESC  NULLS LAST, ((NULL)!=(CAST(t0.c0 AS NUMERIC)))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY 0.6596075742276439 COLLATE RTRIM DESC  NULLS LAST, ((NULL)<>(CAST(t0.c0 AS NUMERIC)))  NULLS FIRST LIMIT 1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((x'31' COLLATE NOCASE) IS TRUE));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((x'31' COLLATE NOCASE) IS TRUE))AND(((t0.c0 IN ()) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(NULL)))))));
SELECT COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END IN (t0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END IN (t0.c0 COLLATE RTRIM))) ORDER BY (((t0.c0) NOTNULL) IN ()), (((t0.c0 COLLATE NOCASE))<((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST, (((((((((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(0.42884698803596333)))AND(ABS(DISTINCT t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((t0.c0 IN ()))))OR((- (t0.c0)))))OR((NOT (t0.c0))))  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((t0.c0))==((t0.c0)))) BETWEEN (((t0.c0)=(t0.c0))) AND (CAST(t0.c0 AS BLOB))));
SELECT MAX(t0.c0) FROM t0 WHERE ((((((((t0.c0))==((t0.c0)))) BETWEEN (((t0.c0)==(t0.c0))) AND (CAST(t0.c0 AS BLOB))))AND(((((t0.c0 COLLATE BINARY)OR(((t0.c0)%(t0.c0)))))OR(x''))))) ORDER BY CAST(t0.c0 COLLATE NOCASE AS TEXT);
SELECT * FROM t0 WHERE (((((t0.c0) ISNULL))>>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t0 WHERE (((((t0.c0) ISNULL))>>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) LIMIT 0X1 INTERSECT SELECT * FROM t0 WHERE (IFNULL(DISTINCT ((t0.c0) NOT NULL), ((t0.c0)GLOB(t0.c0)))) LIMIT 1;
SELECT * FROM t0 WHERE (((((t0.c0) ISNULL))>>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t0 WHERE (((((t0.c0) ISNULL))>>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) LIMIT 0X1 INTERSECT SELECT * FROM t0 WHERE (IFNULL(DISTINCT ((t0.c0) NOT NULL), ((t0.c0)GLOB(t0.c0)))) LIMIT 1;
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((((NOT (t0.c0))))<=(((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) DESC, (((NOT (t0.c0)))GLOB(((NULL) NOT NULL)));
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY NULL  NULLS LAST, CAST(((t0.c0)||(NULL)) AS TEXT) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (TIME(t0.c0, t0.c0, x'82e7', t0.c0) COLLATE NOCASE) ORDER BY NULL  NULLS LAST, CAST(((t0.c0)||(NULL)) AS TEXT) LIMIT 0;
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((((NOT (t0.c0))))<=(((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) DESC, (((NOT (t0.c0)))GLOB(((NULL) NOT NULL)));
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY NULL  NULLS LAST, CAST(((t0.c0)||(NULL)) AS TEXT) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (TIME(t0.c0, t0.c0, x'82e7', t0.c0) COLLATE NOCASE) ORDER BY NULL  NULLS LAST, CAST(((t0.c0)||(NULL)) AS TEXT) LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE (((((x'')<(t0.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY (((- (t0.c0)))IS NOT(json_array(t0.c0, t0.c0, NULL, t0.c0))), CASE WHEN NULL THEN (((t0.c0, t0.c0))>=((t0.c0, t0.c0))) WHEN (- (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END;
SELECT MAX(t0.c0) FROM t0 WHERE (((((((x'')<(t0.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)))) ORDER BY (((- (t0.c0)))IS NOT(json_array(t0.c0, t0.c0, NULL, t0.c0))), CASE WHEN NULL THEN (((t0.c0, t0.c0))>=((t0.c0, t0.c0))) WHEN (- (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END LIMIT 0X3 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS BLOB)) ORDER BY (((- (t0.c0)))IS NOT(json_array(t0.c0, t0.c0, NULL, t0.c0))), CASE WHEN NULL THEN (((t0.c0, t0.c0))>=((t0.c0, t0.c0))) WHEN (- (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END LIMIT 0X3;
SELECT MIN(t0.c0) FROM t0 WHERE ((x'39' IN (CAST(t0.c0 AS REAL)))) ORDER BY LIKELIHOOD(DISTINCT ((t0.c0) NOT NULL), ((t0.c0) NOTNULL)) ASC  NULLS FIRST, t0.c0 ASC  NULLS FIRST, '6'  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((x'39' IN (CAST(t0.c0 AS REAL)))) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'95' THEN t0.c0 END IN ()) ASC, ((t0.c0) IS FALSE) COLLATE BINARY INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0)AND(CASE WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) BETWEEN (t0.c0) AND ('-283579120')))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'95' THEN t0.c0 END IN ()) ASC, ((t0.c0) IS FALSE) COLLATE BINARY;
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))<=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((t0.c0)) BETWEEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (x'7021'))))) DESC;
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))<=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((-2.9861826E8)+(t0.c0 COLLATE RTRIM))))) ORDER BY CAST(t0.c0 AS INTEGER), PRINTF((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ASC;
SELECT ALL * FROM t0 WHERE (CAST(CASE x'5cfb'  WHEN t0.c0 THEN t0.c0 END AS INTEGER));
SELECT * FROM t0 WHERE (((CAST(CASE x'5cfb'  WHEN t0.c0 THEN t0.c0 END AS INTEGER))AND(((((x'')AND((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)LIKE(t0.c0))))))) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (CAST(CASE x'5cfb'  WHEN t0.c0 THEN t0.c0 END AS INTEGER));
SELECT * FROM t0 WHERE (((CAST(CASE x'5cfb'  WHEN t0.c0 THEN t0.c0 END AS INTEGER))AND(((((x'')AND((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)LIKE(t0.c0))))))) LIMIT 0x1;
SELECT MIN(t0.c0) FROM t0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY t0.c0 DESC  NULLS LAST, CASE HEX(t0.c0)  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0)GLOB(t0.c0)) WHEN ('' IN (t0.c0)) THEN CASE NULL  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END ASC  NULLS LAST, ((((x'')>>(x'94'))) BETWEEN (t0.c0) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), CASE WHEN ((t0.c0)IS(t0.c0)) THEN ((t0.c0)=(t0.c0)) ELSE ((t0.c0) NOTNULL) END  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY t0.c0 DESC  NULLS LAST, CASE HEX(t0.c0)  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0)GLOB(t0.c0)) WHEN ('' IN (t0.c0)) THEN CASE NULL  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END ASC  NULLS LAST, ((((x'')>>(x'94'))) BETWEEN (t0.c0) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), CASE WHEN ((t0.c0)IS(t0.c0)) THEN ((t0.c0)==(t0.c0)) ELSE ((t0.c0) NOTNULL) END  NULLS LAST LIMIT 0;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN -283579120 ELSE t0.c0 END)) AND ((t0.c0 COLLATE RTRIM, (t0.c0 IN ())))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN -283579120 ELSE t0.c0 END)) AND ((t0.c0 COLLATE RTRIM, (t0.c0 IN ())))))AND((((((t0.c0, t0.c0, t0.c0, t0.c0))<=((-1e500, t0.c0, t0.c0, t0.c0))))<>(t0.c0 COLLATE NOCASE)))));
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN -283579120 ELSE t0.c0 END)) AND ((t0.c0 COLLATE RTRIM, (t0.c0 IN ())))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN -283579120 ELSE t0.c0 END)) AND ((t0.c0 COLLATE RTRIM, (t0.c0 IN ())))))AND((((((t0.c0, t0.c0, t0.c0, t0.c0))<=((-1e500, t0.c0, t0.c0, t0.c0))))<>(t0.c0 COLLATE NOCASE)))));
SELECT * FROM t0 WHERE ('1372401049') ORDER BY LENGTH(LAST_INSERT_ROWID()) DESC;
SELECT DISTINCT * FROM t0 WHERE ('1372401049') ORDER BY LENGTH(LAST_INSERT_ROWID()) DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (COALESCE(UNLIKELY(DISTINCT t0.c0), (- (t0.c0)), (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), ((t0.c0) NOTNULL), t0.c0 COLLATE BINARY)) ORDER BY LENGTH(LAST_INSERT_ROWID()) DESC;
SELECT * FROM t0 WHERE ('1372401049') ORDER BY LENGTH(LAST_INSERT_ROWID()) DESC;
SELECT DISTINCT * FROM t0 WHERE ('1372401049') ORDER BY LENGTH(LAST_INSERT_ROWID()) DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (COALESCE(UNLIKELY(DISTINCT t0.c0), (- (t0.c0)), (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), ((t0.c0) NOTNULL), t0.c0 COLLATE BINARY)) ORDER BY LENGTH(LAST_INSERT_ROWID()) DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c0, 0.6943290348956236)) NOT BETWEEN ((x'', ((t0.c0)LIKE(t0.c0)))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) ISNULL))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) ASC, ((t0.c0 COLLATE RTRIM)LIKE(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END));
SELECT * FROM t0 WHERE ((((t0.c0, 0.6943290348956236)) NOT BETWEEN ((x'', ((t0.c0)LIKE(t0.c0)))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) ISNULL))))) ORDER BY (('nìº)gBy' COLLATE RTRIM) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c0) IS TRUE))) DESC, t0.c0 LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE ('Oça') ORDER BY (('nìº)gBy' COLLATE RTRIM) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c0) IS TRUE))) DESC, t0.c0 LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((t0.c0, 0.6943290348956236)) NOT BETWEEN ((x'', ((t0.c0)LIKE(t0.c0)))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) ISNULL))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) ASC, ((t0.c0 COLLATE RTRIM)LIKE(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END));
SELECT * FROM t0 WHERE ((((t0.c0, 0.6943290348956236)) NOT BETWEEN ((x'', ((t0.c0)LIKE(t0.c0)))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) ISNULL))))) ORDER BY (('nìº)gBy' COLLATE RTRIM) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c0) IS TRUE))) DESC, t0.c0 LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE ('Oça') ORDER BY (('nìº)gBy' COLLATE RTRIM) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c0) IS TRUE))) DESC, t0.c0 LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE (']');
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((']')AND((t0.c0 COLLATE NOCASE IN ())))) INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))-(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END IN ())) ORDER BY ((CASE '967425476'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<=(((t0.c0) ISNULL))) ASC  NULLS LAST, '' ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END IN ()))AND(((t0.c0) NOTNULL)))) ORDER BY (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0))<((t0.c0))), LIKELY(DISTINCT NULL)))=(((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, 0xfdbdf69, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, -266835620)) AND ((t0.c0, t0.c0))), CAST(t0.c0 AS REAL)))), (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL) DESC;
SELECT * FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END IN ())) ORDER BY ((CASE '967425476'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<=(((t0.c0) ISNULL))) ASC  NULLS LAST, '' ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END IN ()))AND(((t0.c0) NOTNULL)))) ORDER BY (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0))<((t0.c0))), LIKELY(DISTINCT NULL)))=(((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, 0xfdbdf69, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, -266835620)) AND ((t0.c0, t0.c0))), CAST(t0.c0 AS REAL)))), (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL) DESC;
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0)<=(t0.c0)) COLLATE RTRIM) ORDER BY (~ (t0.c0)) COLLATE BINARY ASC, (NOT ((t0.c0 IN ())))  NULLS FIRST, CASE WHEN (t0.c0 IN (t0.c0, NULL)) THEN ((t0.c0)||(t0.c0)) END  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 NOT INDEXED WHERE (((t0.c0)=(t0.c0)) COLLATE RTRIM) ORDER BY (~ (t0.c0)) COLLATE BINARY ASC, (NOT ((t0.c0 IN ())))  NULLS FIRST, CASE WHEN (t0.c0 IN (t0.c0, NULL)) THEN ((t0.c0)||(t0.c0)) END  NULLS LAST INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE (t0.c0 IN (t0.c0))  WHEN -2017088226 THEN (t0.c0 IN ()) WHEN CAST(t0.c0 AS INTEGER) THEN LIKELY(t0.c0) END) ORDER BY (~ (t0.c0)) COLLATE BINARY ASC, (NOT ((t0.c0 IN ())))  NULLS FIRST, CASE WHEN (t0.c0 IN (t0.c0, NULL)) THEN ((t0.c0)||(t0.c0)) END  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 ELSE 0.14687430919927957 END)AND(((t0.c0) NOTNULL))))AND('
cFeU 41'));
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS BLOB))AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT NULL)))) ORDER BY ((SQLITE_VERSION())OR(t0.c0 COLLATE BINARY)) ASC  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM t0 WHERE ((NOT (CAST(t0.c0 AS TEXT)))) ORDER BY ((SQLITE_VERSION())OR(t0.c0 COLLATE BINARY)) ASC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 ELSE 0.14687430919927957 END)AND(((t0.c0) NOTNULL))))AND('
cFeU 41'));
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS BLOB))AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT NULL)))) ORDER BY ((SQLITE_VERSION())OR(t0.c0 COLLATE BINARY)) ASC  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM t0 WHERE ((NOT (CAST(t0.c0 AS TEXT)))) ORDER BY ((SQLITE_VERSION())OR(t0.c0 COLLATE BINARY)) ASC  NULLS LAST LIMIT 2;
SELECT * FROM t0 WHERE ((((t0.c0) NOT BETWEEN ('') AND (t0.c0)) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0) NOT BETWEEN ('') AND (t0.c0)) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 COLLATE RTRIM))>=((IFNULL(t0.c0, t0.c0)))));
SELECT * FROM t0 WHERE ((((t0.c0) NOT BETWEEN ('') AND (t0.c0)) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0) NOT BETWEEN ('') AND (t0.c0)) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 COLLATE RTRIM))>=((IFNULL(t0.c0, t0.c0)))));
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR('-209812820')))AND(t0.c0)))*(((t0.c0)+(t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)OR('-209812820')))AND(t0.c0)))*(((t0.c0)+(t0.c0)))))AND(((t0.c0 COLLATE BINARY)>>(((t0.c0)>=(t0.c0)))))));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR('-209812820')))AND(t0.c0)))*(((t0.c0)+(t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)OR('-209812820')))AND(t0.c0)))*(((t0.c0)+(t0.c0)))))AND(((t0.c0 COLLATE BINARY)>>(((t0.c0)>=(t0.c0)))))));
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)-(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END WHEN t0.c0 THEN ((t0.c0)IS(t0.c0)) END) ORDER BY ((((((t0.c0)GLOB(t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)LIKE(t0.c0))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN ((t0.c0)-(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END WHEN t0.c0 THEN ((t0.c0)IS(t0.c0)) END)AND((((t0.c0)) BETWEEN (((((t0.c0, x'd4')) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) AND ((CAST(t0.c0 AS BLOB))))))) ORDER BY (NOT (t0.c0)) COLLATE RTRIM DESC, (TYPEOF(t0.c0) IN ((((t0.c0)) NOT BETWEEN (('X>')) AND ((t0.c0))))) ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)-(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END WHEN t0.c0 THEN ((t0.c0)IS(t0.c0)) END) ORDER BY ((((((t0.c0)GLOB(t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)LIKE(t0.c0))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN ((t0.c0)-(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END WHEN t0.c0 THEN ((t0.c0)IS(t0.c0)) END)AND((((t0.c0)) BETWEEN (((((t0.c0, x'd4')) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) AND ((CAST(t0.c0 AS BLOB))))))) ORDER BY (NOT (t0.c0)) COLLATE RTRIM DESC, (TYPEOF(t0.c0) IN ((((t0.c0)) NOT BETWEEN (('X>')) AND ((t0.c0))))) ASC  NULLS LAST LIMIT 1;
SELECT * FROM t0 WHERE (CASE json_insert(t0.c0, t0.c0, t0.c0, t0.c0)  WHEN t0.c0 THEN ((t0.c0) NOTNULL) ELSE (('HZ
U+W')||(t0.c0)) END) ORDER BY LIKELY(DISTINCT ((t0.c0)GLOB(t0.c0))) ASC, CASE WHEN t0.c0 COLLATE NOCASE THEN NULL WHEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN (t0.c0 IN (t0.c0)) THEN CAST(-1.882441895E9 AS REAL) END  NULLS LAST, LTRIM(t0.c0, t0.c0)  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CASE json_insert(t0.c0, t0.c0, t0.c0, t0.c0)  WHEN t0.c0 THEN ((t0.c0) NOTNULL) ELSE (('HZ
U+W')||(t0.c0)) END)AND(((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0)<>(t0.c0)))))AND((- (t0.c0)))))AND((t0.c0 IN ()))))OR(TRIM(t0.c0, x'55')))))) ORDER BY ((((t0.c0) NOT NULL))<((((t0.c0))<=((t0.c0))))) DESC  NULLS FIRST LIMIT 1;
SELECT * FROM t0 WHERE (CASE json_insert(t0.c0, t0.c0, t0.c0, t0.c0)  WHEN t0.c0 THEN ((t0.c0) NOTNULL) ELSE (('HZ
U+W')||(t0.c0)) END) ORDER BY LIKELY(DISTINCT ((t0.c0)GLOB(t0.c0))) ASC, CASE WHEN t0.c0 COLLATE NOCASE THEN NULL WHEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN (t0.c0 IN (t0.c0)) THEN CAST(-1.882441895E9 AS REAL) END  NULLS LAST, LTRIM(t0.c0, t0.c0)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0))<=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) LIMIT 1;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0))<=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) LIMIT 1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (TRIM((('629-1197:-99580778245302058:1944 -8293616420631175693-') IS TRUE), (+ (t0.c0))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((TRIM((('629-1197:-99580778245302058:1944 -8293616420631175693-') IS TRUE), (+ (t0.c0))))AND((((((((t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))AND((- (t0.c0)))))AND(((t0.c0)*(t0.c0))))))) INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((0X2767f034)LIKE(CAST(t0.c0 AS BLOB))));
SELECT ALL * FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) NOTNULL) THEN (((x''))>((t0.c0))) END);
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) NOTNULL) THEN (((x''))>((t0.c0))) END) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '188415772' END)OR(((t0.c0)||(t0.c0)))))OR((((t0.c0))==((t0.c0))))));
SELECT ALL * FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) NOTNULL) THEN (((x''))>((t0.c0))) END);
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) NOTNULL) THEN (((x''))>((t0.c0))) END) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '188415772' END)OR(((t0.c0)||(t0.c0)))))OR((((t0.c0))==((t0.c0))))));
SELECT MAX(t0.c0) FROM t0 WHERE (CAST((NOT (t0.c0)) AS REAL)) ORDER BY ((((NULL) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL), CAST(((((t0.c0)AND(x'cb')))AND(t0.c0)) AS BLOB) ASC  NULLS FIRST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c0)) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CAST((NOT (t0.c0)) AS REAL))AND(((((((((((t0.c0)IS NOT(t0.c0)))AND(CAST(t0.c0 AS TEXT))))AND((NOT (t0.c0)))))AND((NOT (t0.c0)))))AND(((t0.c0) ISNULL)))))) ORDER BY ((((NULL) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL), CAST(((((t0.c0)AND(x'cb')))AND(t0.c0)) AS BLOB) ASC  NULLS FIRST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c0)) DESC;
SELECT * FROM t0 WHERE ((((NULL IN ()))IS NOT(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE ((((NULL IN ()))IS NOT(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END IN ((NOT (NULL)), ((t0.c0)GLOB(t0.c0))))) LIMIT 0;
SELECT * FROM t0 WHERE ((((NULL IN ()))IS NOT(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE ((((NULL IN ()))IS NOT(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END IN ((NOT (NULL)), ((t0.c0)GLOB(t0.c0))))) LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, '1549388927'))))AND(CAST(t0.c0 AS INTEGER))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR((+ (t0.c0)))))AND(NULL))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) DESC  NULLS LAST, CASE (+ (0xffffffff87c5ad1e))  WHEN t0.c0 COLLATE BINARY THEN t0.c0 COLLATE BINARY WHEN ((t0.c0) ISNULL) THEN CAST(t0.c0 AS NUMERIC) WHEN ((((t0.c0)OR(t0.c0)))OR('1''')) THEN ((t0.c0) NOTNULL) ELSE ((t0.c0)>>(t0.c0)) END  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((((((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, '1549388927'))))AND(CAST(t0.c0 AS INTEGER))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR((+ (t0.c0)))))AND(NULL)))AND(UPPER((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN ('OçA') AND (CASE t0.c0  WHEN t0.c0 THEN x'0ed9db' WHEN t0.c0 THEN '0.9946086528163941' END))  NULLS LAST, ((((((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0) NOTNULL))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)OR(t0.c0)))))OR(((t0.c0)IS NOT(t0.c0)))))OR('' COLLATE RTRIM)))AND(((t0.c0) IS FALSE))) ASC;
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, '1549388927'))))AND(CAST(t0.c0 AS INTEGER))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR((+ (t0.c0)))))AND(NULL))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) DESC  NULLS LAST, CASE (+ (0xffffffff87c5ad1e))  WHEN t0.c0 COLLATE BINARY THEN t0.c0 COLLATE BINARY WHEN ((t0.c0) ISNULL) THEN CAST(t0.c0 AS NUMERIC) WHEN ((((t0.c0)OR(t0.c0)))OR('1''')) THEN ((t0.c0) NOTNULL) ELSE ((t0.c0)>>(t0.c0)) END  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((((((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, '1549388927'))))AND(CAST(t0.c0 AS INTEGER))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR((+ (t0.c0)))))AND(NULL)))AND(UPPER((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN ('OçA') AND (CASE t0.c0  WHEN t0.c0 THEN x'0ed9db' WHEN t0.c0 THEN '0.9946086528163941' END))  NULLS LAST, ((((((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0) NOTNULL))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)OR(t0.c0)))))OR(((t0.c0)IS NOT(t0.c0)))))OR('' COLLATE RTRIM)))AND(((t0.c0) IS FALSE))) ASC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((((t0.c0)AND(HEX(DISTINCT t0.c0))))OR(TRIM(t0.c0))))AND(LOWER(t0.c0))))OR(t0.c0 COLLATE NOCASE)))AND(t0.c0 COLLATE BINARY)));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((((((t0.c0)AND(HEX(DISTINCT t0.c0))))OR(TRIM(t0.c0))))AND(LOWER(t0.c0))))OR(t0.c0 COLLATE NOCASE)))AND(t0.c0 COLLATE BINARY)))AND(((((((((t0.c0) BETWEEN (NULL) AND (t0.c0)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0) ISNULL))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE ((((NOT (t0.c0)))-((t0.c0 IN (t0.c0)))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (LIKE((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))), (((t0.c0, '', t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, -122510163, t0.c0))), '0'));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (LIKE((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))), (((t0.c0, '', t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0xfffffffff8b2a4ad, t0.c0))), '0')) ORDER BY ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((t0.c0 IN (t0.c0, t0.c0))) AND (COALESCE(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))  NULLS FIRST LIMIT 0X0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (((t0.c0)>(t0.c0)) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), CAST(t0.c0 AS NUMERIC))) DESC, (((t0.c0, 0.012341063954677822, t0.c0))!=((t0.c0, t0.c0, t0.c0))) COLLATE BINARY  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (((t0.c0)>(t0.c0)) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), CAST(t0.c0 AS NUMERIC))) DESC, (((t0.c0, 0.012341063954677822, t0.c0))<>((t0.c0, t0.c0, t0.c0))) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.4340185095549778 THEN t0.c0 ELSE t0.c0 END IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.4340185095549778 THEN t0.c0 ELSE t0.c0 END IN ())) ORDER BY NULL DESC  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE ((+ ('!yL[' COLLATE RTRIM)));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((+ ('!yL[' COLLATE RTRIM))) ORDER BY 939173896  NULLS LAST, CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CASE 0.46893913169343937  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c0)<<(t0.c0)) WHEN CASE WHEN t0.c0 THEN '-690656287' ELSE t0.c0 END THEN (t0.c0 IN (t0.c0)) WHEN (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) THEN CAST(t0.c0 AS INTEGER) END DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))))) AND (((- (t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))))) AND (((- (t0.c0)))))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) LIMIT 0x2;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))))) AND (((- (t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))))) AND (((- (t0.c0)))))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) LIMIT 0x2;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))*(t0.c0)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))*(t0.c0)))AND((('b') IS FALSE) COLLATE BINARY))) ORDER BY '1034281120' DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))||(((NULL)<>(t0.c0))))) ORDER BY '1034281120' DESC  NULLS FIRST LIMIT 2;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, x'ee72')) AND ((t0.c0, t0.c0))) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0) BETWEEN (NULL) AND (t0.c0)) THEN ((t0.c0) NOTNULL) ELSE t0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((t0.c0)AND(((CAST(t0.c0 AS INTEGER)) NOTNULL)))) ORDER BY CASE WHEN (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, x'ee72')) AND ((t0.c0, t0.c0))) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0) BETWEEN (NULL) AND (t0.c0)) THEN ((t0.c0) NOTNULL) ELSE t0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT * FROM t0 WHERE ((((((('1109996026' COLLATE BINARY)OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(1.977846067E9)))OR((t0.c0 IN (t0.c0, 0.5981005835119474))))) ORDER BY LIKELIHOOD(DISTINCT t0.c0, t0.c0) COLLATE BINARY ASC, TRIM(LIKELY(t0.c0));
SELECT DISTINCT * FROM t0 WHERE ((((((((('1109996026' COLLATE BINARY)OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(1.977846067E9)))OR((t0.c0 IN (t0.c0)))))AND(CASE ((t0.c0) NOTNULL)  WHEN 1228023982 THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)>>(t0.c0)) THEN t0.c0 COLLATE BINARY END))) ORDER BY ((((t0.c0) IS FALSE))=((- (t0.c0)))) ASC, (((t0.c0 IN (t0.c0))) NOTNULL)  NULLS FIRST, ((((((t0.c0)*(t0.c0)))AND(t0.c0)))AND(((t0.c0) IS FALSE)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((+ ((+ (t0.c0))))) ORDER BY ((((t0.c0) IS FALSE))=((- (t0.c0)))) ASC, (((t0.c0 IN (t0.c0))) NOTNULL)  NULLS FIRST, ((((((t0.c0)*(t0.c0)))AND(t0.c0)))AND(((t0.c0) IS FALSE)))  NULLS LAST;
SELECT * FROM t0 WHERE ((((((('1109996026' COLLATE BINARY)OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(1.977846067E9)))OR((t0.c0 IN (t0.c0, 0.5981005835119474))))) ORDER BY LIKELIHOOD(DISTINCT t0.c0, t0.c0) COLLATE BINARY ASC, TRIM(LIKELY(t0.c0));
SELECT MIN(t0.c0) FROM t0 WHERE (t0.c0);
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (t0.c0) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((~ ((((t0.c0, t0.c0))>=((t0.c0, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((~ ((((t0.c0, t0.c0))>=((t0.c0, t0.c0))))))AND(CASE WHEN TYPEOF(t0.c0) THEN ((t0.c0)>>(t0.c0)) ELSE ((t0.c0)<(t0.c0)) END))) LIMIT 0x0;
SELECT ALL * FROM t0 WHERE ((~ ((((t0.c0, t0.c0))>=((t0.c0, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((~ ((((t0.c0, t0.c0))>=((t0.c0, t0.c0))))))AND(CASE WHEN TYPEOF(t0.c0) THEN ((t0.c0)>>(t0.c0)) ELSE ((t0.c0)<(t0.c0)) END))) LIMIT 0x0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (load_extension(t0.c0 COLLATE RTRIM, ((t0.c0) NOT NULL))) ORDER BY (((t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0)>=(t0.c0))))), (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)IS(t0.c0)), t0.c0, t0.c0 COLLATE BINARY, json_quote(t0.c0))) AND ((CHANGES(), CASE x''  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) IS TRUE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ASC, (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c0)OR(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, ((t0.c0)>=(t0.c0)))) AND (('', highlight(t0.c0, t0.c0, t0.c0, x''), (t0.c0 IN (NULL))))) ASC  NULLS LAST, (((~ (t0.c0)))=((t0.c0 IN (-1.44268744E8)))) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (load_extension(t0.c0 COLLATE RTRIM, ((t0.c0) NOT NULL))) ORDER BY (- (((t0.c0) ISNULL)))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((CAST(t0.c0 AS BLOB), ((t0.c0)>=(t0.c0)), ((t0.c0)<=(t0.c0))))<=(((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((0.6779242930997512, t0.c0))), (+ (t0.c0)), (t0.c0 IN (t0.c0, t0.c0)))))) ORDER BY (- (((t0.c0) ISNULL)))  NULLS FIRST LIMIT 0x0;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT BETWEEN (0.6449941286291787) AND ('-619418653'))) AND (((t0.c0)<<(t0.c0)))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT BETWEEN (0.6449941286291787) AND ('-619418653'))) AND (((t0.c0)<<(t0.c0)))))AND(x'e2'))) LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL)) BETWEEN ((NOT (t0.c0))) AND ((t0.c0 IN (t0.c0))))) LIMIT 0x1;
SELECT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0)*(0.8082436460767842)))))AND(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ORDER BY t0.c0, ((NOT (t0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0)*(0.8082436460767842)))))AND(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))AND(((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (('-1417769168' IN (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))))) ORDER BY ((((CAST(t0.c0 AS INTEGER))OR((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0)-('k')))) ASC, ((0xffffffffdc190b8e)LIKE(((t0.c0)/(t0.c0)))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END THEN CAST(t0.c0 AS NUMERIC) ELSE (+ (t0.c0)) END) ORDER BY ((((CAST(t0.c0 AS INTEGER))OR((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0)-('k')))) ASC, ((-602338418)LIKE(((t0.c0)/(t0.c0)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ('') ORDER BY CAST(t0.c0 AS TEXT)  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE ((('')AND((((~ (t0.c0))) NOT BETWEEN ((t0.c0 IN (t0.c0, t0.c0, t0.c0))) AND (((('-1433023270')) BETWEEN ((t0.c0)) AND ((t0.c0)))))))) ORDER BY 2.058946507E9  NULLS FIRST, x'' INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY 2.058946507E9  NULLS FIRST, x'';
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, 0.863752340007781)))) BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(x'')))AND(t0.c0))) AND ('d0î '))) ORDER BY ((((t0.c0)>(t0.c0))) BETWEEN ((- (t0.c0))) AND (((t0.c0)<>(t0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, 0.863752340007781)))) BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(x'')))AND(t0.c0))) AND ('d0î '))) ORDER BY ((((t0.c0)>(t0.c0))) BETWEEN ((- (t0.c0))) AND (((t0.c0)<>(t0.c0)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY ((((t0.c0)>(t0.c0))) BETWEEN ((- (t0.c0))) AND (((t0.c0)!=(t0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, 0.863752340007781)))) BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(x'')))AND(t0.c0))) AND ('d0î '))) ORDER BY ((((t0.c0)>(t0.c0))) BETWEEN ((- (t0.c0))) AND (((t0.c0)<>(t0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, 0.863752340007781)))) BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(x'')))AND(t0.c0))) AND ('d0î '))) ORDER BY ((((t0.c0)>(t0.c0))) BETWEEN ((- (t0.c0))) AND (((t0.c0)<>(t0.c0)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY ((((t0.c0)>(t0.c0))) BETWEEN ((- (t0.c0))) AND (((t0.c0)!=(t0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))>=((((t0.c0)&(t0.c0))))));
SELECT * FROM t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))>=((((t0.c0)&(t0.c0)))))) LIMIT 0x2;
SELECT ALL * FROM t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))>=((((t0.c0)&(t0.c0))))));
SELECT * FROM t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))>=((((t0.c0)&(t0.c0)))))) LIMIT 0x2;
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0)<>(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((+ (((t0.c0)<(t0.c0))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS TEXT));
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0)<>(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((+ (((t0.c0)<(t0.c0))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS TEXT));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0))) NOT BETWEEN (t0.c0) AND ((((t0.c0))>=((t0.c0)))))) ORDER BY CAST(t0.c0 AS INTEGER) DESC  NULLS LAST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))+(SQLITE_VERSION())), t0.c0 ASC;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0))) NOT BETWEEN (t0.c0) AND ((((t0.c0))>=((t0.c0)))))) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL), CASE t0.c0  WHEN 'SVp 
' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) AND ((0.3244640030215684 COLLATE BINARY, CAST(t0.c0 AS REAL)))) ASC, TRIM(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) LIMIT 0x1 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c0)/(t0.c0))))) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL), CASE t0.c0  WHEN 'SVp 
' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) AND ((0.3244640030215684 COLLATE BINARY, CAST(t0.c0 AS REAL)))) ASC, TRIM(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) LIMIT 0X1;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)AND(((((t0.c0)AND(0.6845513233608435)))AND(t0.c0)))))OR(t0.c0 COLLATE RTRIM))) ORDER BY (NOT (((((t0.c0)AND(t0.c0)))OR(NULL)))) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(((((t0.c0)AND(0.6845513233608435)))AND(t0.c0)))))OR(t0.c0 COLLATE RTRIM)))AND(((((NULL COLLATE NOCASE)AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE x'' END)))AND(t0.c0 COLLATE BINARY))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))/(((t0.c0) ISNULL)))  NULLS FIRST, CAST(t0.c0 AS INTEGER) COLLATE RTRIM ASC  NULLS FIRST, t0.c0;
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0))>=((t0.c0, t0.c0))))<(((((((((((x'')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND('-2017088226'))))) ORDER BY ((((t0.c0 COLLATE NOCASE)OR(t0.c0 COLLATE RTRIM)))AND(((t0.c0)!=('-161788222')))), t0.c0 COLLATE BINARY DESC;
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0))>=((t0.c0, t0.c0))))<(((((((((((x'')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND('-2017088226'))))) ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN t0.c0 COLLATE RTRIM THEN 'CP' WHEN CAST(t0.c0 AS REAL) THEN (- (t0.c0)) WHEN 0.8856474969537438 THEN (((t0.c0, t0.c0)) BETWEEN ((t0.c0, 0.6595868342350101)) AND ((t0.c0, t0.c0))) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END DESC, (+ ((t0.c0 IN (t0.c0, 'sR5A_t')))) ASC  NULLS LAST LIMIT 3 INTERSECT SELECT * FROM t0 WHERE ((NOT (CAST(t0.c0 AS INTEGER)))) ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN t0.c0 COLLATE RTRIM THEN 'CP' WHEN CAST(t0.c0 AS REAL) THEN (- (t0.c0)) WHEN 0.8856474969537438 THEN (((t0.c0, t0.c0)) BETWEEN ((t0.c0, 0.6595868342350101)) AND ((t0.c0, t0.c0))) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END DESC, (+ ((t0.c0 IN (t0.c0, 'sR5A_t')))) ASC  NULLS LAST LIMIT 0x3;
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0))>=((t0.c0, t0.c0))))<(((((((((((x'')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND('-2017088226'))))) ORDER BY ((((t0.c0 COLLATE NOCASE)OR(t0.c0 COLLATE RTRIM)))AND(((t0.c0)!=('-161788222')))), t0.c0 COLLATE BINARY DESC;
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0))>=((t0.c0, t0.c0))))<(((((((((((x'')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND('-2017088226'))))) ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN t0.c0 COLLATE RTRIM THEN 'CP' WHEN CAST(t0.c0 AS REAL) THEN (- (t0.c0)) WHEN 0.8856474969537438 THEN (((t0.c0, t0.c0)) BETWEEN ((t0.c0, 0.6595868342350101)) AND ((t0.c0, t0.c0))) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END DESC, (+ ((t0.c0 IN (t0.c0, 'sR5A_t')))) ASC  NULLS LAST LIMIT 3 INTERSECT SELECT * FROM t0 WHERE ((NOT (CAST(t0.c0 AS INTEGER)))) ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN t0.c0 COLLATE RTRIM THEN 'CP' WHEN CAST(t0.c0 AS REAL) THEN (- (t0.c0)) WHEN 0.8856474969537438 THEN (((t0.c0, t0.c0)) BETWEEN ((t0.c0, 0.6595868342350101)) AND ((t0.c0, t0.c0))) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END DESC, (+ ((t0.c0 IN (t0.c0, 'sR5A_t')))) ASC  NULLS LAST LIMIT 0x3;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((NULL)AND(((t0.c0)*(t0.c0)))))AND((((t0.c0, NULL)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((((NULL)AND(((t0.c0)*(t0.c0)))))AND((((t0.c0, NULL)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(CAST(t0.c0 AS NUMERIC))));
SELECT ALL * FROM t0 WHERE (((((t0.c0)<(t0.c0)))==(CAST(t0.c0 AS INTEGER))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)<(t0.c0)))=(CAST(t0.c0 AS INTEGER))));
SELECT ALL * FROM t0 WHERE (((((t0.c0)<(t0.c0)))==(CAST(t0.c0 AS INTEGER))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)<(t0.c0)))=(CAST(t0.c0 AS INTEGER))));
SELECT MAX(t0.c0) FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN 0.4976323302016401 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS BLOB));
SELECT MAX(t0.c0) FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN 0.4976323302016401 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS BLOB)) ORDER BY ((((((t0.c0) BETWEEN (0.09139923300495112) AND (t0.c0)))AND(((t0.c0)AND('1231018761')))))OR((NOT (t0.c0))))  NULLS LAST, TRIM(DISTINCT (- (t0.c0))), CASE (t0.c0 IN (t0.c0))  WHEN (('-395782820')OR(t0.c0)) THEN t0.c0 WHEN (('1282586232')<(t0.c0)) THEN LOWER(t0.c0) ELSE (+ (t0.c0)) END  NULLS FIRST LIMIT 0x2 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (x'') ORDER BY ((((((t0.c0) BETWEEN (0.09139923300495112) AND (t0.c0)))AND(((t0.c0)AND('1231018761')))))OR((NOT (t0.c0))))  NULLS LAST, TRIM(DISTINCT (- (t0.c0))), CASE (t0.c0 IN (t0.c0))  WHEN (('-395782820')OR(t0.c0)) THEN t0.c0 WHEN (('1282586232')<(t0.c0)) THEN LOWER(t0.c0) ELSE (+ (t0.c0)) END  NULLS FIRST LIMIT 0x2;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0) ISNULL) COLLATE RTRIM);
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0) ISNULL) COLLATE RTRIM) ORDER BY (((t0.c0)AND(t0.c0)) IN ()), ((((t0.c0)/(t0.c0)))IS(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) LIMIT 0X0 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0)GLOB(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(0.4385794289584355)))AND(t0.c0)))AND(t0.c0))))) ORDER BY (((t0.c0)AND(t0.c0)) IN ()), ((((t0.c0)/(t0.c0)))IS(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) LIMIT 0;
SELECT * FROM t0 WHERE (x'504d') ORDER BY TYPEOF(DISTINCT ((t0.c0)|(t0.c0))) DESC, CAST((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, 0Xffffffffc7b5e1c8, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS INTEGER)  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (x'504d') ORDER BY NULL  NULLS LAST, 0.870326665437139  NULLS LAST;
SELECT * FROM t0 WHERE (x'504d') ORDER BY TYPEOF(DISTINCT ((t0.c0)|(t0.c0))) DESC, CAST((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, 0Xffffffffc7b5e1c8, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS INTEGER)  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (x'504d') ORDER BY NULL  NULLS LAST, 0.870326665437139  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c0)<>(t0.c0))) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ORDER BY (((- (t0.c0)))=((((t0.c0, x'', t0.c0))==((t0.c0, t0.c0, t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c0)<>(t0.c0))) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND((((t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0)|(t0.c0)))))))) ORDER BY (((t0.c0 COLLATE NOCASE, ((t0.c0) NOT NULL), (t0.c0 IN (t0.c0, t0.c0))))>((((((t0.c0)OR(t0.c0)))AND(t0.c0)), TYPEOF(t0.c0), CAST(t0.c0 AS INTEGER)))) ASC, (t0.c0 IN (LIKELIHOOD(t0.c0, x'bf'))) LIMIT 3;
SELECT ALL MAX(t0.c0) FROM t0 NOT INDEXED WHERE ((+ (LIKELY(t0.c0)))) ORDER BY t0.c0;
SELECT MAX(t0.c0) FROM t0 WHERE ((+ (LIKELY(t0.c0)))) ORDER BY t0.c0;
SELECT ALL COUNT(*) FROM t0 WHERE (((json_array_length(t0.c0, t0.c0))AND(6.61123124E8))) ORDER BY ((((t0.c0)>=(t0.c0))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND (t0.c0 COLLATE RTRIM)), LOWER(((0.6594987811054602)<<(t0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE (((json_array_length(t0.c0, t0.c0))AND(6.61123124E8))) ORDER BY (HEX(DISTINCT t0.c0) IN ((- (t0.c0)))) DESC, ((((t0.c0)GLOB(t0.c0)))<<((('Tq/í7,uO')>=(t0.c0)))) INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ((t0.c0 IN ())))) ORDER BY (HEX(DISTINCT t0.c0) IN ((- (t0.c0)))) DESC, ((((t0.c0)GLOB(t0.c0)))<<((('Tq/í7,uO')>=(t0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((t0.c0)AND(((CAST(t0.c0 AS BLOB)) BETWEEN (TYPEOF(t0.c0)) AND ((((t0.c0))>=((t0.c0)))))))) ORDER BY t0.c0 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c0;
SELECT MAX(t0.c0) FROM t0 NOT INDEXED WHERE (json(x'5e84e0'));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((json(x'5e84e0'))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE))) ORDER BY (((~ (t0.c0))) BETWEEN (((t0.c0)<(t0.c0))) AND (((t0.c0)<>(t0.c0)))) ASC, '(K' LIMIT 0 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((NOT (((t0.c0)*(x''))))) ORDER BY (((~ (t0.c0))) BETWEEN (((t0.c0)<(t0.c0))) AND (((t0.c0)!=(t0.c0)))) ASC, '(K' LIMIT 0;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN ((~ (t0.c0))) AND (((t0.c0) IS TRUE))));
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS REAL)) NOT BETWEEN ((~ (t0.c0))) AND (((t0.c0) IS TRUE))))AND(((((((((((((t0.c0)AND('224546577')))AND(t0.c0)))OR(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))AND(((0xffffffff91e00043) ISNULL))))OR(((t0.c0)%(t0.c0)))))OR(((t0.c0)*(t0.c0))))))) LIMIT 1 INTERSECT SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)-(0x4cf13226))) AND (((t0.c0) NOT NULL)))) LIMIT 1;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN ((~ (t0.c0))) AND (((t0.c0) IS TRUE))));
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS REAL)) NOT BETWEEN ((~ (t0.c0))) AND (((t0.c0) IS TRUE))))AND(((((((((((((t0.c0)AND('224546577')))AND(t0.c0)))OR(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))AND(((0xffffffff91e00043) ISNULL))))OR(((t0.c0)%(t0.c0)))))OR(((t0.c0)*(t0.c0))))))) LIMIT 1 INTERSECT SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)-(0x4cf13226))) AND (((t0.c0) NOT NULL)))) LIMIT 1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ('2119975713') ORDER BY 0.03106961641039463 ASC  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ('2119975713') ORDER BY 0.03106961641039463 ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CASE WHEN 0.29862939951498035 THEN (+ (t0.c0)) WHEN (- (t0.c0)) THEN ((t0.c0)IS NOT(t0.c0)) WHEN t0.c0 THEN NULL ELSE ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END);
SELECT ALL * FROM t0 WHERE (CASE WHEN 0.29862939951498035 THEN (+ (t0.c0)) WHEN (- (t0.c0)) THEN ((t0.c0)IS NOT(t0.c0)) WHEN t0.c0 THEN NULL ELSE ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END) INTERSECT SELECT * FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN ((((((((t0.c0)OR('2119975713')))OR(t0.c0)))AND(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), ((0.19324200832781058)+(t0.c0))))));
SELECT * FROM t0 WHERE (CASE WHEN 0.29862939951498035 THEN (+ (t0.c0)) WHEN (- (t0.c0)) THEN ((t0.c0)IS NOT(t0.c0)) WHEN t0.c0 THEN NULL ELSE ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END);
SELECT ALL * FROM t0 WHERE (CASE WHEN 0.29862939951498035 THEN (+ (t0.c0)) WHEN (- (t0.c0)) THEN ((t0.c0)IS NOT(t0.c0)) WHEN t0.c0 THEN NULL ELSE ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END) INTERSECT SELECT * FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN ((((((((t0.c0)OR('2119975713')))OR(t0.c0)))AND(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), ((0.19324200832781058)+(t0.c0))))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((t0.c0 COLLATE NOCASE)OR(-1.44268744E8)))AND((+ (t0.c0)))))OR(t0.c0)))OR(((t0.c0)*(t0.c0))))) ORDER BY ((CAST(t0.c0 AS REAL))*(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST, ((((t0.c0)/(t0.c0)))<>(x'05')) DESC  NULLS FIRST, IFNULL((t0.c0 IN ()), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ASC  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (((((((((t0.c0 COLLATE NOCASE)OR(-1.44268744E8)))AND((+ (t0.c0)))))OR(t0.c0)))OR(((t0.c0)*(t0.c0))))) ORDER BY ((CAST(t0.c0 AS REAL))*(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST, ((((t0.c0)/(t0.c0)))!=(x'05')) DESC  NULLS FIRST, IFNULL((t0.c0 IN ()), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0)&(((t0.c0)AND(t0.c0))))) ORDER BY ((CAST(t0.c0 AS REAL))*(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST, ((((t0.c0)/(t0.c0)))<>(x'05')) DESC  NULLS FIRST, IFNULL((t0.c0 IN ()), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ASC  NULLS FIRST LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE (LENGTH((~ (t0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE (((LENGTH((~ (t0.c0))))AND(((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND((((t0.c0, t0.c0, NULL))>((t0.c0, t0.c0, t0.c0))))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR((- (t0.c0)))))));
SELECT * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY t0.c0  NULLS FIRST, CASE WHEN ((t0.c0) NOTNULL) THEN LOWER(DISTINCT t0.c0) WHEN ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND('204747477')))AND(-6.02338418E8)))AND(t0.c0)))OR(t0.c0)) THEN x'97c64c31' WHEN ((t0.c0)=(t0.c0)) THEN t0.c0 WHEN NULL THEN (((t0.c0, t0.c0))<=((t0.c0, t0.c0))) END, t0.c0 LIMIT 0X3;
SELECT * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY t0.c0  NULLS FIRST, CASE WHEN ((t0.c0) NOTNULL) THEN LOWER(DISTINCT t0.c0) WHEN ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND('204747477')))AND(-6.02338418E8)))AND(t0.c0)))OR(t0.c0)) THEN x'97c64c31' WHEN ((t0.c0)=(t0.c0)) THEN t0.c0 WHEN NULL THEN (((t0.c0, t0.c0))<=((t0.c0, t0.c0))) END, t0.c0 LIMIT 0X3;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((NULL)LIKE(x'e9')));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((NULL)LIKE(x'e9'))) INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CASE LIKELIHOOD(t0.c0, t0.c0)  WHEN (+ (t0.c0)) THEN INSTR(t0.c0, t0.c0) WHEN ((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)) THEN CAST(t0.c0 AS BLOB) END);
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE)>(0.9872934169955062)));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE)>(0.9872934169955062))) ORDER BY (((CAST(t0.c0 AS INTEGER)))<=((((t0.c0)>=(t0.c0))))), CASE (((t0.c0))=((t0.c0)))  WHEN t0.c0 COLLATE BINARY THEN NULL WHEN ((t0.c0) ISNULL) THEN (NOT (t0.c0)) WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN CAST(t0.c0 AS TEXT) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END LIMIT 0x0 INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))<<(t0.c0 COLLATE NOCASE))) ORDER BY (((CAST(t0.c0 AS INTEGER)))<=((((t0.c0)>=(t0.c0))))), CASE (((t0.c0))=((t0.c0)))  WHEN t0.c0 COLLATE BINARY THEN NULL WHEN ((t0.c0) ISNULL) THEN (NOT (t0.c0)) WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN CAST(t0.c0 AS TEXT) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((((((((((CASE WHEN 0x3ff4895 THEN t0.c0 WHEN t0.c0 THEN -1.301734921E9 WHEN t0.c0 THEN t0.c0 END)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)<('h')))))OR(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0) NOT NULL))) ASC  NULLS FIRST, CAST(((t0.c0) IS TRUE) AS BLOB) DESC, CAST(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(0.557334764931193)))OR(t0.c0)) AS INTEGER)  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS TEXT) COLLATE NOCASE)AND(CAST(((t0.c0)IS(t0.c0)) AS TEXT)))) ORDER BY ((((((((((CASE WHEN 67061909 THEN t0.c0 WHEN t0.c0 THEN -1.301734921E9 WHEN t0.c0 THEN t0.c0 END)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)<('h')))))OR(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0) NOT NULL))) ASC  NULLS FIRST, CAST(((t0.c0) IS TRUE) AS BLOB) DESC, CAST(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(0.557334764931193)))OR(t0.c0)) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((((((((((CASE WHEN 0x3ff4895 THEN t0.c0 WHEN t0.c0 THEN -1.301734921E9 WHEN t0.c0 THEN t0.c0 END)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)<('h')))))OR(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0) NOT NULL))) ASC  NULLS FIRST, CAST(((t0.c0) IS TRUE) AS BLOB) DESC, CAST(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(0.557334764931193)))OR(t0.c0)) AS INTEGER)  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS TEXT) COLLATE NOCASE)AND(CAST(((t0.c0)IS(t0.c0)) AS TEXT)))) ORDER BY ((((((((((CASE WHEN 67061909 THEN t0.c0 WHEN t0.c0 THEN -1.301734921E9 WHEN t0.c0 THEN t0.c0 END)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)<('h')))))OR(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0) NOT NULL))) ASC  NULLS FIRST, CAST(((t0.c0) IS TRUE) AS BLOB) DESC, CAST(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(0.557334764931193)))OR(t0.c0)) AS INTEGER)  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE (((((((NULL) BETWEEN ('}A') AND (t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)<(NULL))))) ORDER BY (((- (t0.c0))) NOT BETWEEN (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND (t0.c0)) ASC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((NULL) BETWEEN ('}A') AND (t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)<(NULL))))) ORDER BY (((- (t0.c0))) NOT BETWEEN (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND (t0.c0)) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE ((- (CAST(t0.c0 AS REAL))));
SELECT DISTINCT * FROM t0 WHERE ((((- (CAST(t0.c0 AS REAL))))AND(t0.c0)));
SELECT ALL * FROM t0 WHERE ((- (CAST(t0.c0 AS REAL))));
SELECT DISTINCT * FROM t0 WHERE ((((- (CAST(t0.c0 AS REAL))))AND(t0.c0)));
SELECT ALL * FROM t0 WHERE (x'') ORDER BY 'cn_}á»
+' ASC  NULLS LAST, ((t0.c0)*(t0.c0 COLLATE NOCASE));
SELECT ALL * FROM t0 WHERE (((x'')AND(((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)/(x'73'))))) ORDER BY 'cn_}á»
+' ASC  NULLS LAST, ((t0.c0)*(t0.c0 COLLATE NOCASE));
SELECT ALL * FROM t0 WHERE (x'') ORDER BY 'cn_}á»
+' ASC  NULLS LAST, ((t0.c0)*(t0.c0 COLLATE NOCASE));
SELECT ALL * FROM t0 WHERE (((x'')AND(((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)/(x'73'))))) ORDER BY 'cn_}á»
+' ASC  NULLS LAST, ((t0.c0)*(t0.c0 COLLATE NOCASE));
SELECT * FROM t0 WHERE (((((t0.c0) ISNULL))<=(t0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (((((t0.c0) ISNULL))=(t0.c0 COLLATE BINARY))) LIMIT 0X1;
SELECT * FROM t0 WHERE (((((t0.c0) ISNULL))<=(t0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (((((t0.c0) ISNULL))=(t0.c0 COLLATE BINARY))) LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL));
SELECT ALL * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL))AND(((((t0.c0)>=(t0.c0)))|(CAST(x'64' AS TEXT)))))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN x'a3' WHEN ((t0.c0)AND('-235360116')) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0)&(t0.c0)))=(((t0.c0) NOT BETWEEN (4.18720866E8) AND (t0.c0))))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN x'a3' WHEN ((t0.c0)AND('-235360116')) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL));
SELECT ALL * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL))AND(((((t0.c0)>=(t0.c0)))|(CAST(x'64' AS TEXT)))))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN x'a3' WHEN ((t0.c0)AND('-235360116')) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END ASC  NULLS FIRST INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0)&(t0.c0)))=(((t0.c0) NOT BETWEEN (4.18720866E8) AND (t0.c0))))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN x'a3' WHEN ((t0.c0)AND('-235360116')) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ('2qE' COLLATE RTRIM) ORDER BY t0.c0 ASC  NULLS LAST, CASE (((t0.c0)) BETWEEN ((x'')) AND ((t0.c0)))  WHEN ((t0.c0) NOT NULL) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE t0.c0 END  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ('2qE' COLLATE RTRIM) ORDER BY t0.c0 ASC  NULLS LAST, CASE (((t0.c0)) BETWEEN ((x'')) AND ((t0.c0)))  WHEN ((t0.c0) NOT NULL) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE t0.c0 END  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((CAST(t0.c0 AS INTEGER))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR('266067817' COLLATE RTRIM)))AND(((t0.c0)/(t0.c0)))))AND((((x'75d6', t0.c0)) BETWEEN ((t0.c0, 0.6328700607262273)) AND ((t0.c0, t0.c0))))))AND(CASE WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY t0.c0 ASC  NULLS LAST, CASE (((t0.c0)) BETWEEN ((x'')) AND ((t0.c0)))  WHEN ((t0.c0) NOT NULL) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE t0.c0 END  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE ((((t0.c0, TRIM(NULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))>=((((t0.c0)>>(t0.c0)), (+ (t0.c0)), ((t0.c0)|(t0.c0)))))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL) ASC;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0, TRIM(NULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))>((((t0.c0)>>(t0.c0)), (+ (t0.c0)), ((t0.c0)|(t0.c0))))))AND(CAST(((((((x'')AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS NUMERIC)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL) ASC;
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) NOTNULL)) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, NULL)))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ())) NOTNULL)) ORDER BY CAST((((t0.c0))<=((t0.c0))) AS INTEGER) ASC, UNLIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY CAST((((t0.c0))<=((t0.c0))) AS INTEGER) ASC, UNLIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) DESC;
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) NOTNULL)) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, NULL)))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ())) NOTNULL)) ORDER BY CAST((((t0.c0))<=((t0.c0))) AS INTEGER) ASC, UNLIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY CAST((((t0.c0))<=((t0.c0))) AS INTEGER) ASC, UNLIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) DESC;
SELECT * FROM t0 WHERE ((~ ((- (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((~ ((- (t0.c0)))))AND((((NULL, t0.c0, t0.c0))<((0Xffffffffc3249f45, t0.c0, t0.c0))) COLLATE NOCASE)));
SELECT * FROM t0 WHERE ((~ ((- (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((~ ((- (t0.c0)))))AND((((NULL, t0.c0, t0.c0))<((0Xffffffffc3249f45, t0.c0, t0.c0))) COLLATE NOCASE)));
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))OR((t0.c0 IN ())))) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ()) ASC  NULLS LAST, x'';
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))OR((t0.c0 IN ()))))AND((t0.c0 COLLATE BINARY IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), HEX(DISTINCT t0.c0)))))) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ()) ASC  NULLS LAST, x'' LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((+ (t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ()) ASC  NULLS LAST, x'' LIMIT 2;
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))OR((t0.c0 IN ())))) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ()) ASC  NULLS LAST, x'';
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0)) BETWEEN ((LOWER(DISTINCT t0.c0))) AND ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) ORDER BY x'7518'  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0)) BETWEEN ((LOWER(DISTINCT t0.c0))) AND ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))AND((('1600490757')LIKE(LTRIM(t0.c0)))))) ORDER BY x'7518'  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((0x2767f034) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)!=(t0.c0)))));
SELECT MIN(t0.c0) FROM t0 WHERE (((((661123124) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)!=(t0.c0)))))AND(CASE ((t0.c0) IS FALSE)  WHEN ((t0.c0) NOT BETWEEN ('188415772') AND (t0.c0)) THEN (t0.c0 IN ()) WHEN CASE WHEN t0.c0 THEN x'23' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (~ (t0.c0)) ELSE '141569879' END))) ORDER BY x''  NULLS LAST, CASE WHEN UNICODE(t0.c0) THEN CAST(t0.c0 AS REAL) WHEN ((0Xffffffffb41f2980)<(t0.c0)) THEN ((t0.c0)IS NOT(t0.c0)) ELSE ((t0.c0)LIKE(t0.c0)) END  NULLS LAST;
SELECT * FROM t0 INDEXED BY i29 WHERE (CAST(UNLIKELY(t0.c0) AS REAL));
SELECT ALL * FROM t0 INDEXED BY i29 WHERE (((CAST(UNLIKELY(t0.c0) AS REAL))AND(load_extension(CAST(t0.c0 AS TEXT))))) ORDER BY 0.8501958295616701 LIMIT 0X1 INTERSECT SELECT * FROM t0 INDEXED BY i29 WHERE (((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ((NOT (t0.c0))))) ORDER BY 0.8501958295616701 LIMIT 0x1;
SELECT * FROM t0 INDEXED BY i29 WHERE (CAST(UNLIKELY(t0.c0) AS REAL));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) BETWEEN (((('1977846067', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (t0.c0 COLLATE NOCASE))) ORDER BY (((t0.c0, 0.07073050816093995)) NOT BETWEEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) AND ((t0.c0 COLLATE RTRIM, (t0.c0 IN (t0.c0))))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS TEXT)) BETWEEN (((('1977846067', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (t0.c0 COLLATE NOCASE)))AND(CASE t0.c0  WHEN UNLIKELY(DISTINCT t0.c0) THEN ((t0.c0) ISNULL) WHEN SQLITE_VERSION() THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'n*UeX(mi' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END))) ORDER BY (((t0.c0, 0.07073050816093995)) NOT BETWEEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) AND ((t0.c0 COLLATE RTRIM, (t0.c0 IN (t0.c0))))) DESC  NULLS FIRST LIMIT 3 INTERSECT SELECT ALL * FROM t0 WHERE (((t0.c0)OR(((t0.c0) BETWEEN ('-2128350805') AND (t0.c0))))) ORDER BY (((t0.c0, 0.07073050816093995)) NOT BETWEEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) AND ((t0.c0 COLLATE RTRIM, (t0.c0 IN (t0.c0))))) DESC  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) BETWEEN (((('1977846067', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (t0.c0 COLLATE NOCASE))) ORDER BY (((t0.c0, 0.07073050816093995)) NOT BETWEEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) AND ((t0.c0 COLLATE RTRIM, (t0.c0 IN (t0.c0))))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS TEXT)) BETWEEN (((('1977846067', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (t0.c0 COLLATE NOCASE)))AND(CASE t0.c0  WHEN UNLIKELY(DISTINCT t0.c0) THEN ((t0.c0) ISNULL) WHEN SQLITE_VERSION() THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'n*UeX(mi' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END))) ORDER BY (((t0.c0, 0.07073050816093995)) NOT BETWEEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) AND ((t0.c0 COLLATE RTRIM, (t0.c0 IN (t0.c0))))) DESC  NULLS FIRST LIMIT 3 INTERSECT SELECT ALL * FROM t0 WHERE (((t0.c0)OR(((t0.c0) BETWEEN ('-2128350805') AND (t0.c0))))) ORDER BY (((t0.c0, 0.07073050816093995)) NOT BETWEEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) AND ((t0.c0 COLLATE RTRIM, (t0.c0 IN (t0.c0))))) DESC  NULLS FIRST LIMIT 3;
SELECT * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB));
SELECT ALL * FROM t0 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB))AND(((('-1273026176'))<(((('') NOT NULL))))))) LIMIT 0x0 INTERSECT SELECT ALL * FROM t0 WHERE (((NULL) NOTNULL)) LIMIT 0X0;
SELECT * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB));
SELECT ALL * FROM t0 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB))AND(((('-1273026176'))<(((('') NOT NULL))))))) LIMIT 0x0 INTERSECT SELECT ALL * FROM t0 WHERE (((NULL) NOTNULL)) LIMIT 0X0;
SELECT MAX(t0.c0) FROM t0 WHERE ((('-1528442103')<=((NOT (t0.c0))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))-(0.3055269198467938 COLLATE RTRIM))  NULLS FIRST, ((((t0.c0)>(0.29862939951498035))) IS TRUE)  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))>>((- (t0.c0))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((('-1528442103')<=((NOT (t0.c0)))))AND(CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)))) ORDER BY (~ (t0.c0 COLLATE RTRIM)) ASC  NULLS LAST, CAST(t0.c0 COLLATE BINARY AS BLOB)  NULLS FIRST LIMIT 0x0;
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT MIN(t0.c0) FROM t0 WHERE (NULL) ORDER BY t0.c0 ASC, (((((t0.c0, t0.c0))>((t0.c0, t0.c0))))|(t0.c0 COLLATE BINARY)) ASC  NULLS LAST, (((((t0.c0)LIKE(t0.c0)), t0.c0 COLLATE BINARY))<=((-1, x'753d9c'))) DESC;
SELECT MIN(t0.c0) FROM t0 WHERE (((NULL)AND((~ (x'07'))))) ORDER BY t0.c0 ASC, (((((t0.c0, t0.c0))>((t0.c0, t0.c0))))|(t0.c0 COLLATE BINARY)) ASC  NULLS LAST, (((((t0.c0)LIKE(t0.c0)), t0.c0 COLLATE BINARY))<=((0xffffffffffffffff, x'753d9c'))) DESC INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN ((t0.c0)<<(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY t0.c0 ASC, (((((t0.c0, t0.c0))>((t0.c0, t0.c0))))|(t0.c0 COLLATE BINARY)) ASC  NULLS LAST, (((((t0.c0)LIKE(t0.c0)), t0.c0 COLLATE BINARY))<=((-1, x'753d9c'))) DESC;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN (('YTr', (~ (t0.c0)), CAST(t0.c0 AS INTEGER))) AND ((t0.c0 COLLATE BINARY, CASE WHEN t0.c0 THEN x'2eb714' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0)<(t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) BETWEEN (('YTr', (~ (t0.c0)), CAST(t0.c0 AS INTEGER))) AND ((t0.c0 COLLATE BINARY, CASE WHEN t0.c0 THEN x'2eb714' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0)<(t0.c0))))))AND(COALESCE(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, TRIM(t0.c0, t0.c0))))) ORDER BY ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((+ (t0.c0))) AND (CAST(t0.c0 AS REAL))), ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (t0.c0 COLLATE RTRIM))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))) NOT BETWEEN (DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND (CAST(NULL AS NUMERIC)))) ORDER BY ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((+ (t0.c0))) AND (CAST(t0.c0 AS REAL))), ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN (('YTr', (~ (t0.c0)), CAST(t0.c0 AS INTEGER))) AND ((t0.c0 COLLATE BINARY, CASE WHEN t0.c0 THEN x'2eb714' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0)<(t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) BETWEEN (('YTr', (~ (t0.c0)), CAST(t0.c0 AS INTEGER))) AND ((t0.c0 COLLATE BINARY, CASE WHEN t0.c0 THEN x'2eb714' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0)<(t0.c0))))))AND(COALESCE(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, TRIM(t0.c0, t0.c0))))) ORDER BY ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((+ (t0.c0))) AND (CAST(t0.c0 AS REAL))), ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (t0.c0 COLLATE RTRIM))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))) NOT BETWEEN (DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND (CAST(NULL AS NUMERIC)))) ORDER BY ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((+ (t0.c0))) AND (CAST(t0.c0 AS REAL))), ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE (CAST(((t0.c0)IS NOT(t0.c0)) AS BLOB));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((CAST(((t0.c0)IS NOT(t0.c0)) AS BLOB))AND(CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS NUMERIC)))) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (((((t0.c0)=(t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((t0.c0) NOT NULL))>>((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))), ((((t0.c0)OR(t0.c0)))==(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0 WHERE (((((((t0.c0)==(t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(t0.c0))) ORDER BY ((((t0.c0) NOT NULL))>>((((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0))))), ((((t0.c0)OR(t0.c0)))=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) INTERSECT SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0) NOT NULL))>>((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))), ((((t0.c0)OR(t0.c0)))==(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT ALL * FROM t0 WHERE (((((t0.c0)=(t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((t0.c0) NOT NULL))>>((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))), ((((t0.c0)OR(t0.c0)))==(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0 WHERE (((((((t0.c0)==(t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(t0.c0))) ORDER BY ((((t0.c0) NOT NULL))>>((((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0))))), ((((t0.c0)OR(t0.c0)))=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) INTERSECT SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0) NOT NULL))>>((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))), ((((t0.c0)OR(t0.c0)))==(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0 WHERE ((json_remove(t0.c0, t0.c0) IN (t0.c0, t0.c0 COLLATE RTRIM))) ORDER BY (((((((((0.9098039876512218)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) IN (((((((-2.128350805E9)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), CAST('(G_î®8m' AS INTEGER))) ASC, IFNULL(DISTINCT (~ (t0.c0)), (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))), (((t0.c0 IN (t0.c0))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((json_remove(t0.c0, t0.c0) IN (t0.c0, t0.c0 COLLATE RTRIM)))AND((((~ (t0.c0))) NOTNULL)))) ORDER BY (((((((((0.9098039876512218)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) IN (((((((-2.128350805E9)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), CAST('(G_î®8m' AS INTEGER))) ASC, IFNULL(DISTINCT (~ (t0.c0)), (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))), (((t0.c0 IN (t0.c0))) NOTNULL)  NULLS LAST LIMIT 0x4;
SELECT * FROM t0 WHERE ((json_remove(t0.c0, t0.c0) IN (t0.c0, t0.c0 COLLATE RTRIM))) ORDER BY (((((((((0.9098039876512218)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) IN (((((((-2.128350805E9)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), CAST('(G_î®8m' AS INTEGER))) ASC, IFNULL(DISTINCT (~ (t0.c0)), (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))), (((t0.c0 IN (t0.c0))) NOTNULL)  NULLS LAST;
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(CASE WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN t0.c0 COLLATE NOCASE THEN CHANGES() WHEN 0.4073367410305304 THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0)AND(t0.c0)) THEN (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, NULL, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))) END))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(CASE WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN t0.c0 COLLATE NOCASE THEN CHANGES() WHEN 0.4073367410305304 THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0)AND(t0.c0)) THEN (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, NULL, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))) END))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0);
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((t0.c0)=(t0.c0)) COLLATE BINARY) ORDER BY NULL;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((t0.c0)==(t0.c0)) COLLATE BINARY)AND((((t0.c0 IN (t0.c0, t0.c0))) NOT BETWEEN (((t0.c0)%(t0.c0))) AND (TYPEOF(t0.c0)))))) ORDER BY NULL INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CASE WHEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN t0.c0 END) ORDER BY NULL;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))<<(((('%fY'))<>((NULL))))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))<<(((('%fY'))<>((NULL))))));
SELECT MAX(t0.c0) FROM t0 WHERE (CAST(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS TEXT)) ORDER BY LIKELY(DISTINCT ((((t0.c0)AND(t0.c0)))OR(t0.c0))) DESC  NULLS LAST, SQLITE_COMPILEOPTION_GET(CAST(t0.c0 AS REAL))  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (CAST(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS TEXT)) ORDER BY ((((((t0.c0 COLLATE NOCASE)AND(CASE 0.6710776583781971  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND('''jj')))AND(((t0.c0)OR(t0.c0)))) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (LOWER(MAX(t0.c0, t0.c0, -709828426, '1972789177'))) ORDER BY ((((((t0.c0 COLLATE NOCASE)AND(CASE 0.6710776583781971  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND('''jj')))AND(((t0.c0)OR(t0.c0)))) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))%(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(((t0.c0) ISNULL))) ASC, NULL, CAST((NOT (x'')) AS REAL)  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))%(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(((t0.c0) ISNULL))) ASC, NULL, CAST((NOT (x'')) AS REAL)  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((t0.c0 COLLATE NOCASE)AND(ABS(t0.c0))))OR(((t0.c0)||(t0.c0)))))AND(COALESCE(DISTINCT t0.c0, t0.c0, t0.c0)))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(((t0.c0) ISNULL))) ASC, NULL, CAST((NOT (x'')) AS REAL)  NULLS FIRST LIMIT 0X2;
SELECT MIN(t0.c0) FROM t0 WHERE (load_extension(t0.c0 COLLATE BINARY));
SELECT MIN(t0.c0) FROM t0 WHERE (load_extension(t0.c0 COLLATE BINARY)) LIMIT 0x0;
SELECT * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY ((0Xffffffffd11af838)AND(CAST(t0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY CAST(((t0.c0) NOTNULL) AS TEXT)  NULLS LAST, CAST(CAST(x'ca' AS NUMERIC) AS NUMERIC) DESC;
SELECT * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY ((0Xffffffffd11af838)AND(CAST(t0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY CAST(((t0.c0) NOTNULL) AS TEXT)  NULLS LAST, CAST(CAST(x'ca' AS NUMERIC) AS NUMERIC) DESC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (0.07414561330167868);
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((0.07414561330167868)AND(CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN (t0.c0 IN (t0.c0, t0.c0)) ELSE (+ (t0.c0)) END)));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) IS FALSE))&(x'')));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) IS FALSE))&(x''))) ORDER BY CASE (NOT (t0.c0))  WHEN NULL THEN t0.c0 WHEN (((t0.c0, t0.c0))>=((t0.c0, t0.c0))) THEN CASE t0.c0  WHEN t0.c0 THEN 'u&' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 THEN t0.c0 END DESC LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (((t0.c0)*(t0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (((((t0.c0)*(t0.c0)) COLLATE BINARY)AND((t0.c0 COLLATE NOCASE IN ())))) INTERSECT SELECT ALL * FROM t0 WHERE (LTRIM(((-5.8230501E7)<<(t0.c0)), ((t0.c0) ISNULL)));
SELECT ALL * FROM t0 WHERE (((t0.c0)*(t0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (((((t0.c0)*(t0.c0)) COLLATE BINARY)AND((t0.c0 COLLATE NOCASE IN ())))) INTERSECT SELECT ALL * FROM t0 WHERE (LTRIM(((-5.8230501E7)<<(t0.c0)), ((t0.c0) ISNULL)));
SELECT * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY CASE WHEN json_quote(NULL) THEN (+ (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN t0.c0 ELSE ((t0.c0)IS(t0.c0)) END DESC;
SELECT DISTINCT * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY CASE WHEN json_quote(NULL) THEN (+ (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN t0.c0 ELSE ((t0.c0)IS(t0.c0)) END DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS BLOB)) ORDER BY CASE WHEN json_quote(NULL) THEN (+ (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN t0.c0 ELSE ((t0.c0)IS(t0.c0)) END DESC LIMIT 0X0;
SELECT * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY CASE WHEN json_quote(NULL) THEN (+ (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN t0.c0 ELSE ((t0.c0)IS(t0.c0)) END DESC;
SELECT DISTINCT * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY CASE WHEN json_quote(NULL) THEN (+ (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN t0.c0 ELSE ((t0.c0)IS(t0.c0)) END DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS BLOB)) ORDER BY CASE WHEN json_quote(NULL) THEN (+ (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN t0.c0 ELSE ((t0.c0)IS(t0.c0)) END DESC LIMIT 0X0;
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((t0.c0)AND(CASE (t0.c0 IN (-395782820, t0.c0))  WHEN (- (t0.c0)) THEN t0.c0 COLLATE BINARY ELSE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) END))) LIMIT 0X2;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0)GLOB(t0.c0)))*((t0.c0 IN ())))) ORDER BY ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(0.06019279316577686))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0))  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0)GLOB(t0.c0)))*((t0.c0 IN ())))) ORDER BY ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(0.06019279316577686))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0))  NULLS FIRST INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(0.06019279316577686))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0))  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE ((- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0))) LIMIT 2 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) AS NUMERIC)) LIMIT 0X2;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((- (t0.c0 COLLATE NOCASE)));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((- (t0.c0 COLLATE NOCASE))) ORDER BY CAST(t0.c0 AS INTEGER) ASC  NULLS FIRST, (((t0.c0, t0.c0, t0.c0)) BETWEEN ((UNLIKELY(DISTINCT 0.8989959352220974), CAST(t0.c0 AS BLOB), t0.c0 COLLATE BINARY)) AND (((t0.c0 IN ('á¦w', t0.c0)), ('à¤±nãEv5J' IN ()), NULL))) ASC LIMIT 0X0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (t0.c0);
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((t0.c0)AND(((t0.c0)<=(t0.c0)) COLLATE BINARY))) ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN x'' END) AND ('' COLLATE NOCASE))  NULLS FIRST LIMIT 1;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(json_array(t0.c0, t0.c0) AS REAL));
SELECT COUNT(*) FROM t0 WHERE (((CAST(json_array(t0.c0, t0.c0) AS REAL))AND(((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(x'')))AND(CAST(t0.c0 AS NUMERIC))))AND(t0.c0 COLLATE BINARY)))AND(CAST(0.21472377645291996 AS REAL)))))) INTERSECT SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL))/(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)));
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c0) IS FALSE)) BETWEEN (((t0.c0)IS(NULL))) AND (CAST(t0.c0 AS BLOB)))) ORDER BY ((t0.c0)>=(((t0.c0)+(t0.c0)))) ASC  NULLS FIRST, ((LIKELY(DISTINCT t0.c0)) NOT NULL) DESC;
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c0) IS FALSE)) BETWEEN (((t0.c0)IS(NULL))) AND (CAST(t0.c0 AS BLOB)))) ORDER BY (t0.c0 IN ()) DESC LIMIT 0x0 INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE ((((NULL))>=((((t0.c0)%(t0.c0)))))) ORDER BY (t0.c0 IN ()) DESC LIMIT 0X0;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN (t0.c0 IN ()) END) ORDER BY t0.c0;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN (t0.c0 IN ()) END) ORDER BY ((t0.c0)-(t0.c0)) COLLATE RTRIM ASC  NULLS FIRST, UPPER((~ (t0.c0))) DESC, NULL DESC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN ((SQLITE_VERSION())) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY ((t0.c0)-(t0.c0)) COLLATE RTRIM ASC  NULLS FIRST, UPPER((~ (t0.c0))) DESC, NULL DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE)) ORDER BY (((NOT (t0.c0))) NOTNULL)  NULLS FIRST, ((+ (0Xfffffffff65b4ec2)) IN (t0.c0))  NULLS LAST, CASE ((((t0.c0)AND(t0.c0)))OR(t0.c0))  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN ((((((((((-2.128350805E9)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)GLOB(t0.c0)) ELSE ((t0.c0)GLOB(t0.c0)) END;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) IS FALSE))AND(((CAST(t0.c0 AS BLOB))<>(((((t0.c0)OR(t0.c0)))OR(t0.c0))))))) ORDER BY (((NOT (t0.c0))) NOTNULL)  NULLS FIRST, ((+ (-161788222)) IN (t0.c0))  NULLS LAST, CASE ((((t0.c0)AND(t0.c0)))OR(t0.c0))  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN ((((((((((-2.128350805E9)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)GLOB(t0.c0)) ELSE ((t0.c0)GLOB(t0.c0)) END;
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE)) ORDER BY (((NOT (t0.c0))) NOTNULL)  NULLS FIRST, ((+ (0Xfffffffff65b4ec2)) IN (t0.c0))  NULLS LAST, CASE ((((t0.c0)AND(t0.c0)))OR(t0.c0))  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN ((((((((((-2.128350805E9)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)GLOB(t0.c0)) ELSE ((t0.c0)GLOB(t0.c0)) END;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) IS FALSE))AND(((CAST(t0.c0 AS BLOB))<>(((((t0.c0)OR(t0.c0)))OR(t0.c0))))))) ORDER BY (((NOT (t0.c0))) NOTNULL)  NULLS FIRST, ((+ (-161788222)) IN (t0.c0))  NULLS LAST, CASE ((((t0.c0)AND(t0.c0)))OR(t0.c0))  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN ((((((((((-2.128350805E9)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)GLOB(t0.c0)) ELSE ((t0.c0)GLOB(t0.c0)) END;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) ORDER BY ((((t0.c0)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND((NOT (t0.c0))))  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE)AND(x'1991a5'))) ORDER BY CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) DESC INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (UNLIKELY(((t0.c0) IS FALSE))) ORDER BY CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) DESC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((NULL IN (t0.c0, 0x55465326)))OR((('-1313987184')|(t0.c0)))));
SELECT MIN(t0.c0) FROM t0 WHERE ((((((NULL IN (t0.c0)))OR((('-1313987184')|(t0.c0)))))AND((((t0.c0)IS NOT(t0.c0)) IN ())))) LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) NOT NULL) IN ((('TQ/í7,UO')>=(t0.c0))))) ORDER BY CAST(QUOTE(t0.c0) AS NUMERIC), CASE WHEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN (((t0.c0))>=((t0.c0))) THEN ((t0.c0)-(0.09139923300495112)) ELSE '' END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0) NOT NULL) IN ((('TQ/í7,UO')>(t0.c0))))) ORDER BY ((((t0.c0)|(t0.c0))) BETWEEN (((((0xffffffffc00fd796)OR(t0.c0)))AND(t0.c0))) AND ((~ (t0.c0)))) DESC  NULLS FIRST, CAST(t0.c0 AS TEXT) DESC, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (t0.c0) AND (((t0.c0)>=(t0.c0)))) DESC  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ((- (t0.c0))))  NULLS LAST, highlight(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((NULL)>(t0.c0)), t0.c0, t0.c0), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ((- (t0.c0))))  NULLS LAST, highlight(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((NULL)>(t0.c0)), t0.c0, t0.c0), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE (CAST('204747477' AS REAL));
SELECT COUNT(*) FROM t0 WHERE (CAST('204747477' AS REAL)) ORDER BY (~ ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) ASC LIMIT 2;
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((CHAR(t0.c0))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(CAST('141569879' AS TEXT))), (((((t0.c0, t0.c0, t0.c0))>((x'2ac74dca', t0.c0, t0.c0)))) NOT BETWEEN ((t0.c0 IN (t0.c0, 0xffffffffff6ee69b))) AND (((t0.c0)==(0.5429355930210628)))) DESC, ((t0.c0) ISNULL) COLLATE NOCASE COLLATE BINARY ASC;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((NULL)AND((((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))/(((t0.c0)*(t0.c0))))))) ORDER BY (+ ((NOT (t0.c0)))) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c0 AS INTEGER)))) ORDER BY (+ ((NOT (t0.c0)))) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, CAST(t0.c0 AS REAL), (+ (t0.c0)), t0.c0, 0.45102068458126443))>((x'', ((((t0.c0)OR(t0.c0)))AND(t0.c0)), t0.c0 COLLATE BINARY, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)>(t0.c0)))))) ORDER BY ((UPPER(DISTINCT t0.c0))||(TRIM(DISTINCT t0.c0, t0.c0))) ASC;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, CAST(t0.c0 AS REAL), (+ (t0.c0)), t0.c0, 0.45102068458126443))>((x'', ((((t0.c0)OR(t0.c0)))AND(t0.c0)), t0.c0 COLLATE BINARY, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)>(t0.c0)))))) ORDER BY (NOT (t0.c0 COLLATE NOCASE)) ASC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ((t0.c0 IN (t0.c0))) AND (t0.c0 COLLATE BINARY)));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ((t0.c0 IN (t0.c0))) AND (t0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (((((t0.c0)|(t0.c0)))AND('-330942389'))) ORDER BY t0.c0, CAST(x'92' AS REAL) ASC  NULLS FIRST, ((((t0.c0) NOTNULL))GLOB(t0.c0)) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)|(t0.c0)))AND('-330942389'))) ORDER BY t0.c0, CAST(x'92' AS REAL) ASC  NULLS FIRST, ((((t0.c0) NOTNULL))GLOB(t0.c0)) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)|(t0.c0)))AND('-330942389'))) ORDER BY t0.c0, CAST(x'92' AS REAL) ASC  NULLS FIRST, ((((t0.c0) NOTNULL))GLOB(t0.c0)) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)|(t0.c0)))AND('-330942389'))) ORDER BY t0.c0, CAST(x'92' AS REAL) ASC  NULLS FIRST, ((((t0.c0) NOTNULL))GLOB(t0.c0)) DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((((- (t0.c0)))>=(((t0.c0)AND(t0.c0))))) ORDER BY NULL  NULLS LAST, ((t0.c0 COLLATE BINARY) BETWEEN (t0.c0) AND (CHAR(t0.c0, t0.c0, t0.c0))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((- (t0.c0)))>(((t0.c0)AND(t0.c0))))) ORDER BY NULL  NULLS LAST, ((t0.c0 COLLATE BINARY) BETWEEN (t0.c0) AND (CHAR(t0.c0, t0.c0, t0.c0))) DESC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (('uc%ë¼¿]zy' IN (((t0.c0)-(t0.c0))))) ORDER BY NULL  NULLS LAST, ((t0.c0 COLLATE BINARY) BETWEEN (t0.c0) AND (CHAR(t0.c0, t0.c0, t0.c0))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((((- (t0.c0)))>=(((t0.c0)AND(t0.c0))))) ORDER BY NULL  NULLS LAST, ((t0.c0 COLLATE BINARY) BETWEEN (t0.c0) AND (CHAR(t0.c0, t0.c0, t0.c0))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((- (t0.c0)))>(((t0.c0)AND(t0.c0))))) ORDER BY NULL  NULLS LAST, ((t0.c0 COLLATE BINARY) BETWEEN (t0.c0) AND (CHAR(t0.c0, t0.c0, t0.c0))) DESC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (('uc%ë¼¿]zy' IN (((t0.c0)-(t0.c0))))) ORDER BY NULL  NULLS LAST, ((t0.c0 COLLATE BINARY) BETWEEN (t0.c0) AND (CHAR(t0.c0, t0.c0, t0.c0))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((0.42181945002714705 IN (((t0.c0)%(t0.c0)), (+ (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((0.42181945002714705 IN (((t0.c0)%(t0.c0)), (+ (t0.c0))))) ORDER BY t0.c0 ASC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((((t0.c0, NULL)) NOT BETWEEN ((x'aa', t0.c0)) AND ((t0.c0, '-365596224')))) AND (CAST(t0.c0 AS NUMERIC)))) ORDER BY t0.c0 ASC LIMIT 0X1;
SELECT * FROM t0 WHERE ((0.42181945002714705 IN (((t0.c0)%(t0.c0)), (+ (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((0.42181945002714705 IN (((t0.c0)%(t0.c0)), (+ (t0.c0))))) ORDER BY t0.c0 ASC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((((t0.c0, NULL)) NOT BETWEEN ((x'aa', t0.c0)) AND ((t0.c0, '-365596224')))) AND (CAST(t0.c0 AS NUMERIC)))) ORDER BY t0.c0 ASC LIMIT 0X1;
SELECT MAX(t0.c0) FROM t0 WHERE (CASE ((t0.c0)<(t0.c0))  WHEN (((t0.c0, t0.c0, t0.c0, t0.c0))!=(('r6*fDá¾', t0.c0, t0.c0, t0.c0))) THEN NULL WHEN ((t0.c0)IS(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (((x'77', t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) WHEN '' THEN x'b5ce11' WHEN CAST(t0.c0 AS INTEGER) THEN '-188287110' ELSE ((t0.c0)AND(x'')) END) ORDER BY (+ (t0.c0)) ASC  NULLS LAST, ((SUBSTR(t0.c0, t0.c0)) NOT NULL) DESC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CASE ((t0.c0)<(t0.c0))  WHEN (((t0.c0, t0.c0, t0.c0, t0.c0))!=(('r6*fDá¾', t0.c0, t0.c0, t0.c0))) THEN NULL WHEN ((t0.c0)IS(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (((x'77', t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) WHEN '' THEN x'b5ce11' WHEN CAST(t0.c0 AS INTEGER) THEN '-188287110' ELSE ((t0.c0)AND(x'')) END) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST, ((((t0.c0)OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.04750344647660465 END)))AND('{N[sï}%'))  NULLS LAST, CAST((NOT (t0.c0)) AS BLOB)  NULLS LAST LIMIT 1 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE ((- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST, ((((t0.c0)OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.04750344647660465 END)))AND('{N[sï}%'))  NULLS LAST, CAST((NOT (t0.c0)) AS BLOB)  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (((TRIM(t0.c0)) BETWEEN (CAST(t0.c0 AS TEXT)) AND (-1887719382))) ORDER BY CASE (((((('0.0936944252410401')OR(t0.c0)))OR(t0.c0)))OR(t0.c0))  WHEN t0.c0 COLLATE BINARY THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN LIKELY(DISTINCT t0.c0) THEN (t0.c0 IN (t0.c0)) WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0)GLOB(t0.c0)) ELSE t0.c0 COLLATE BINARY END, CASE ((t0.c0) IS FALSE)  WHEN CAST(t0.c0 AS INTEGER) THEN t0.c0 COLLATE BINARY END, (json_insert(x'', t0.c0, t0.c0) IN ())  NULLS LAST;
SELECT * FROM t0 WHERE (((((TRIM(t0.c0)) BETWEEN (CAST(t0.c0 AS TEXT)) AND (-1887719382)))AND(CAST(t0.c0 COLLATE NOCASE AS INTEGER)))) ORDER BY ((CAST(t0.c0 AS INTEGER))|(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0X5f658d05 ELSE t0.c0 END)), rtreenode(NULL, (t0.c0 IN (NULL))) DESC LIMIT 0X1 INTERSECT SELECT ALL * FROM t0 WHERE ((- (((t0.c0) IS TRUE)))) ORDER BY ((CAST(t0.c0 AS INTEGER))|(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 1600490757 ELSE t0.c0 END)), rtreenode(NULL, (t0.c0 IN (NULL))) DESC LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (((TRIM(t0.c0)) BETWEEN (CAST(t0.c0 AS TEXT)) AND (-1887719382))) ORDER BY CASE (((((('0.0936944252410401')OR(t0.c0)))OR(t0.c0)))OR(t0.c0))  WHEN t0.c0 COLLATE BINARY THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN LIKELY(DISTINCT t0.c0) THEN (t0.c0 IN (t0.c0)) WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0)GLOB(t0.c0)) ELSE t0.c0 COLLATE BINARY END, CASE ((t0.c0) IS FALSE)  WHEN CAST(t0.c0 AS INTEGER) THEN t0.c0 COLLATE BINARY END, (json_insert(x'', t0.c0, t0.c0) IN ())  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY NULL  NULLS LAST, (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.6943290348956236)), ((t0.c0)/(t0.c0)), ((t0.c0) NOTNULL), ((t0.c0)<=(t0.c0)), ((t0.c0)<<(t0.c0)))) AND ((((((t0.c0)AND(t0.c0)))AND('î£¢ç')), ((t0.c0)>>(t0.c0)), CAST(t0.c0 AS INTEGER), MIN(t0.c0, t0.c0, t0.c0, t0.c0), ((t0.c0)-(t0.c0)))))  NULLS LAST, CAST(((t0.c0)GLOB(t0.c0)) AS NUMERIC)  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((t0.c0)AND(HEX(((t0.c0)-(t0.c0)))))) ORDER BY CASE WHEN t0.c0 THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) END;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOTNULL));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOTNULL));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOTNULL));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOTNULL));
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN (((~ (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) AND ((NULL, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST, ((((LIKE(t0.c0, t0.c0))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((((t0.c0, t0.c0)) NOT BETWEEN ((x'', t0.c0)) AND ((t0.c0, t0.c0))))) ASC  NULLS LAST, (((t0.c0 IN ()))-((t0.c0 IN (t0.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (x'') ORDER BY x'1b6b', NULL LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (t0.c0 COLLATE NOCASE))) ORDER BY x'1b6b', NULL LIMIT 1;
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN (((~ (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) AND ((NULL, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST, ((((LIKE(t0.c0, t0.c0))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((((t0.c0, t0.c0)) NOT BETWEEN ((x'', t0.c0)) AND ((t0.c0, t0.c0))))) ASC  NULLS LAST, (((t0.c0 IN ()))-((t0.c0 IN (t0.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (x'') ORDER BY x'1b6b', NULL LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (t0.c0 COLLATE NOCASE))) ORDER BY x'1b6b', NULL LIMIT 1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CAST(json_insert(t0.c0, t0.c0, t0.c0) AS NUMERIC)) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((CASE 0.7703181411053067  WHEN t0.c0 THEN t0.c0 END, SUBSTR(t0.c0, t0.c0))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)<=(t0.c0))))) DESC  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE (CAST(json_insert(t0.c0, t0.c0, t0.c0) AS NUMERIC)) ORDER BY 0.2716792175883517 DESC  NULLS FIRST, t0.c0 COLLATE NOCASE;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0)/(t0.c0 COLLATE NOCASE))) ORDER BY ((TRIM(DISTINCT t0.c0, t0.c0)) NOT NULL) ASC  NULLS FIRST, (((((((((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, NULL, t0.c0, t0.c0, t0.c0))))OR(CAST(t0.c0 AS BLOB))))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR((((t0.c0))<=((t0.c0))))))AND((t0.c0 IN (t0.c0)))))OR((('899170380') NOT NULL)))  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((t0.c0)/(t0.c0 COLLATE NOCASE))) ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c0)||(t0.c0)), ((t0.c0)<(t0.c0)), ((t0.c0) IS FALSE))) AND ((t0.c0, ((t0.c0) NOT NULL), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))  NULLS FIRST, (((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ASC  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((((((((t0.c0)IS NOT(t0.c0)))OR((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR(CAST(t0.c0 AS INTEGER))))AND((t0.c0 IN (t0.c0)))))OR(((t0.c0) ISNULL))))OR((+ (t0.c0)))))OR(((t0.c0)-(t0.c0)))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((((((((t0.c0)IS NOT(t0.c0)))OR((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR(CAST(t0.c0 AS INTEGER))))AND((t0.c0 IN (t0.c0)))))OR(((t0.c0) ISNULL))))OR((+ (t0.c0)))))OR(((t0.c0)-(t0.c0))))) ORDER BY ((((t0.c0)IS(t0.c0))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0) IS TRUE))), ((((t0.c0)GLOB(t0.c0)))>>(((t0.c0)|(t0.c0)))) LIMIT 0;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS TEXT))!=(NULLIF(DISTINCT t0.c0, t0.c0)))) ORDER BY (((t0.c0 IN (t0.c0)))&(CAST(t0.c0 AS BLOB)));
SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c0 AS TEXT))>(NULLIF(DISTINCT t0.c0, t0.c0))))AND(((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)/(((t0.c0)LIKE(t0.c0))))))) ORDER BY ((CASE WHEN '{{()' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END)AND(((((((t0.c0)AND(t0.c0)))AND(NULL)))AND(t0.c0))))  NULLS LAST LIMIT 4 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(TYPEOF(DISTINCT t0.c0) AS NUMERIC)) ORDER BY ((CASE WHEN '{{()' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END)AND(((((((t0.c0)AND(t0.c0)))AND(NULL)))AND(t0.c0))))  NULLS LAST LIMIT 4;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS TEXT))!=(NULLIF(DISTINCT t0.c0, t0.c0)))) ORDER BY (((t0.c0 IN (t0.c0)))&(CAST(t0.c0 AS BLOB)));
SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c0 AS TEXT))>(NULLIF(DISTINCT t0.c0, t0.c0))))AND(((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)/(((t0.c0)LIKE(t0.c0))))))) ORDER BY ((CASE WHEN '{{()' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END)AND(((((((t0.c0)AND(t0.c0)))AND(NULL)))AND(t0.c0))))  NULLS LAST LIMIT 4 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(TYPEOF(DISTINCT t0.c0) AS NUMERIC)) ORDER BY ((CASE WHEN '{{()' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END)AND(((((((t0.c0)AND(t0.c0)))AND(NULL)))AND(t0.c0))))  NULLS LAST LIMIT 4;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0))) ISNULL));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0))) ISNULL))AND((((t0.c0) NOT NULL) IN ((NOT (t0.c0))))))) INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((((0.3414311690596227)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS TEXT));
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)||(NULLIF(t0.c0, t0.c0)))) ORDER BY (((t0.c0, (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))<((((t0.c0)>=(t0.c0)), t0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)||(NULLIF(t0.c0, t0.c0)))) ORDER BY (((t0.c0, (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))<((((t0.c0)>=(t0.c0)), t0.c0 COLLATE RTRIM)))  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0 COLLATE NOCASE)AND((~ (t0.c0)))))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0 COLLATE NOCASE))) ORDER BY (((t0.c0, (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))<((((t0.c0)>=(t0.c0)), t0.c0 COLLATE RTRIM)))  NULLS LAST LIMIT 1;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)||(NULLIF(t0.c0, t0.c0)))) ORDER BY (((t0.c0, (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))<((((t0.c0)>=(t0.c0)), t0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)||(NULLIF(t0.c0, t0.c0)))) ORDER BY (((t0.c0, (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))<((((t0.c0)>=(t0.c0)), t0.c0 COLLATE RTRIM)))  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0 COLLATE NOCASE)AND((~ (t0.c0)))))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0 COLLATE NOCASE))) ORDER BY (((t0.c0, (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))<((((t0.c0)>=(t0.c0)), t0.c0 COLLATE RTRIM)))  NULLS LAST LIMIT 1;
SELECT MIN(t0.c0) FROM t0 WHERE (CAST((- (t0.c0)) AS NUMERIC));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CAST((- (t0.c0)) AS NUMERIC))AND(((t0.c0) NOTNULL)))) LIMIT 0X2 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(0.7586626948389887)))OR(-1371924699))) LIMIT 2;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (t0.c0) AND (UNLIKELY(DISTINCT t0.c0))));
SELECT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (t0.c0) AND (UNLIKELY(DISTINCT t0.c0))))AND(CAST(((t0.c0) BETWEEN (0.6943290348956236) AND (t0.c0)) AS INTEGER)))) ORDER BY CASE ((((((((((t0.c0)OR(t0.c0)))OR('2058946507')))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((NULL)||(t0.c0)) WHEN (0.46716706476202496 IN (t0.c0, t0.c0, t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN 'G' COLLATE NOCASE ELSE 'u&' COLLATE RTRIM END  NULLS LAST, json_extract((((t0.c0))>((t0.c0))), (NOT (t0.c0)), UPPER(t0.c0)) DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY CASE ((((((((((t0.c0)OR(t0.c0)))OR('2058946507')))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((NULL)||(t0.c0)) WHEN (0.46716706476202496 IN (t0.c0, t0.c0, t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN 'G' COLLATE NOCASE ELSE 'u&' COLLATE RTRIM END  NULLS LAST, json_extract((((t0.c0))>((t0.c0))), (NOT (t0.c0)), UPPER(t0.c0)) DESC  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (t0.c0) AND (UNLIKELY(DISTINCT t0.c0))));
SELECT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (t0.c0) AND (UNLIKELY(DISTINCT t0.c0))))AND(CAST(((t0.c0) BETWEEN (0.6943290348956236) AND (t0.c0)) AS INTEGER)))) ORDER BY CASE ((((((((((t0.c0)OR(t0.c0)))OR('2058946507')))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((NULL)||(t0.c0)) WHEN (0.46716706476202496 IN (t0.c0, t0.c0, t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN 'G' COLLATE NOCASE ELSE 'u&' COLLATE RTRIM END  NULLS LAST, json_extract((((t0.c0))>((t0.c0))), (NOT (t0.c0)), UPPER(t0.c0)) DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY CASE ((((((((((t0.c0)OR(t0.c0)))OR('2058946507')))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((NULL)||(t0.c0)) WHEN (0.46716706476202496 IN (t0.c0, t0.c0, t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN 'G' COLLATE NOCASE ELSE 'u&' COLLATE RTRIM END  NULLS LAST, json_extract((((t0.c0))>((t0.c0))), (NOT (t0.c0)), UPPER(t0.c0)) DESC  NULLS LAST LIMIT 0x1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))IS NOT(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY ((((t0.c0) IS TRUE)) NOT BETWEEN ((((t0.c0, t0.c0))<>((t0.c0, t0.c0)))) AND (((t0.c0)<<('3063615')))), (~ (((t0.c0)!=(t0.c0)))) DESC, (((((((t0.c0)AND(t0.c0)))OR(t0.c0)), (+ (t0.c0)), t0.c0 COLLATE RTRIM, LOWER(t0.c0)))=(((t0.c0 IN (t0.c0, 0.06019279316577686)), TYPEOF(t0.c0), ((t0.c0)GLOB(0.42884698803596333)), t0.c0 COLLATE NOCASE))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))IS NOT(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))AND(((((t0.c0)<(t0.c0))) NOT BETWEEN ((+ (t0.c0))) AND (IFNULL(0.07502060912088915, t0.c0)))))) ORDER BY ((((t0.c0) IS TRUE)) NOT BETWEEN ((((t0.c0, t0.c0))<>((t0.c0, t0.c0)))) AND (((t0.c0)<<('3063615')))), (~ (((t0.c0)!=(t0.c0)))) DESC, (((((((t0.c0)AND(t0.c0)))OR(t0.c0)), (+ (t0.c0)), t0.c0 COLLATE RTRIM, LOWER(t0.c0)))==(((t0.c0 IN (t0.c0, 0.06019279316577686)), TYPEOF(t0.c0), ((t0.c0)GLOB(0.42884698803596333)), t0.c0 COLLATE NOCASE))) ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0) IS TRUE)) NOT BETWEEN ((((t0.c0, t0.c0))!=((t0.c0, t0.c0)))) AND (((t0.c0)<<('3063615')))), (~ (((t0.c0)!=(t0.c0)))) DESC, (((((((t0.c0)AND(t0.c0)))OR(t0.c0)), (+ (t0.c0)), t0.c0 COLLATE RTRIM, LOWER(t0.c0)))=(((t0.c0 IN (t0.c0, 0.06019279316577686)), TYPEOF(t0.c0), ((t0.c0)GLOB(0.42884698803596333)), t0.c0 COLLATE NOCASE))) ASC  NULLS FIRST LIMIT 0;
SELECT MIN(t0.c0) FROM t0 INDEXED BY i29 WHERE (((((x'a267')>=(t0.c0)))OR(CAST(NULL AS REAL)))) ORDER BY CASE WHEN ((t0.c0) IS TRUE) THEN ((t0.c0) ISNULL) ELSE (~ (t0.c0)) END, (('ed\g{o^p0')<>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST, CAST(((t0.c0) NOTNULL) AS INTEGER) ASC, (NOT ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ASC;
SELECT DISTINCT MIN(t0.c0) FROM t0 INDEXED BY i29 WHERE (((((((x'a267')>(t0.c0)))OR(CAST(NULL AS REAL))))AND((t0.c0 IN (((t0.c0)>=(t0.c0))))))) ORDER BY CASE WHEN ((t0.c0)GLOB(t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0)LIKE(t0.c0)) THEN t0.c0 COLLATE NOCASE END LIMIT 0X1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (NULL);
SELECT MAX(t0.c0) FROM t0 WHERE (((NULL)AND(((t0.c0 COLLATE NOCASE)GLOB((+ (t0.c0))))))) ORDER BY (CAST('-144268744' AS INTEGER) IN ((+ (t0.c0)))) DESC, (((t0.c0) ISNULL) IN ()) DESC  NULLS LAST, ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(((t0.c0) NOT NULL)))  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (CAST('-144268744' AS INTEGER) IN ((+ (t0.c0)))) DESC, (((t0.c0) ISNULL) IN ()) DESC  NULLS LAST, ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(((t0.c0) NOT NULL)))  NULLS FIRST LIMIT 0X0;
SELECT MAX(t0.c0) FROM t0 WHERE (((0.3095610145850377)*(((t0.c0) ISNULL)))) ORDER BY (((((0.04556938344711847) IS TRUE), NULL))<(('rpæ¯£XP', (((t0.c0, 821181352)) NOT BETWEEN (('717283822', t0.c0)) AND ((t0.c0, t0.c0))))))  NULLS LAST, ((t0.c0 COLLATE RTRIM)AND(t0.c0))  NULLS FIRST, ((CAST(t0.c0 AS REAL))-(-2.8357912E8)) DESC  NULLS LAST, (((t0.c0, t0.c0)) BETWEEN (((((t0.c0))==((t0.c0))), ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) AND (('0.2786745149741875', ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))));
SELECT MAX(t0.c0) FROM t0 WHERE (((0.3095610145850377)*(((t0.c0) ISNULL)))) ORDER BY ((((((((((((0X7ed441c8)AND(t0.c0)))AND(t0.c0)))OR(NULL)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((NOT (t0.c0)))))OR(t0.c0)) ASC LIMIT 0X3 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)||(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (1379297237))) ORDER BY ((((((((((((2127839688)AND(t0.c0)))AND(t0.c0)))OR(NULL)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((NOT (t0.c0)))))OR(t0.c0)) ASC LIMIT 0X3;
SELECT ALL * FROM t0 WHERE ((~ (t0.c0))) ORDER BY NULL  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((~ (t0.c0))) ORDER BY ((t0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST, 0.8255875731075596, ((((LOWER(t0.c0))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND((((t0.c0))!=((t0.c0))))) DESC, CAST(((t0.c0)||(-494832440)) AS TEXT) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN CAST(t0.c0 AS TEXT) THEN t0.c0 COLLATE BINARY ELSE ((t0.c0)||(t0.c0)) END) ORDER BY ((t0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST, 0.8255875731075596, ((((LOWER(t0.c0))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND((((t0.c0))!=((t0.c0))))) DESC, CAST(((t0.c0)||(0xffffffffe28174c8)) AS TEXT) ASC;
SELECT ALL * FROM t0 WHERE ((~ (t0.c0))) ORDER BY NULL  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((~ (t0.c0))) ORDER BY ((t0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST, 0.8255875731075596, ((((LOWER(t0.c0))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND((((t0.c0))!=((t0.c0))))) DESC, CAST(((t0.c0)||(-494832440)) AS TEXT) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN CAST(t0.c0 AS TEXT) THEN t0.c0 COLLATE BINARY ELSE ((t0.c0)||(t0.c0)) END) ORDER BY ((t0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST, 0.8255875731075596, ((((LOWER(t0.c0))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND((((t0.c0))!=((t0.c0))))) DESC, CAST(((t0.c0)||(0xffffffffe28174c8)) AS TEXT) ASC;
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE));
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS FALSE))AND(CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL)))) LIMIT 0;
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE));
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS FALSE))AND(CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL)))) LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))||(((t0.c0) IS FALSE)))) ORDER BY t0.c0;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))||(((t0.c0) IS FALSE))))AND(x''))) ORDER BY t0.c0 LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (rtreenode(((t0.c0)+(t0.c0)), ((t0.c0)OR(t0.c0))));
SELECT MIN(t0.c0) FROM t0 WHERE (rtreenode(((t0.c0)+(t0.c0)), ((t0.c0)OR(t0.c0))));
SELECT * FROM t0 WHERE (json(((t0.c0) NOT NULL)));
SELECT * FROM t0 WHERE (((json(((t0.c0) NOT NULL)))AND(((LAST_INSERT_ROWID()) BETWEEN ((+ (t0.c0))) AND (((t0.c0)>=(t0.c0))))))) LIMIT 0X4 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0)IS(t0.c0)))*(('-1707237967' IN (t0.c0))))) LIMIT 4;
SELECT * FROM t0 WHERE (json(((t0.c0) NOT NULL)));
SELECT * FROM t0 WHERE (((json(((t0.c0) NOT NULL)))AND(((LAST_INSERT_ROWID()) BETWEEN ((+ (t0.c0))) AND (((t0.c0)>=(t0.c0))))))) LIMIT 0X4 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0)IS(t0.c0)))*(('-1707237967' IN (t0.c0))))) LIMIT 4;
SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY rtreenode(((((t0.c0)AND(t0.c0)))OR(t0.c0)), LIKELIHOOD(t0.c0, 'Jq')), (+ (t0.c0))  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0)AND(((((t0.c0)GLOB(t0.c0))) BETWEEN (((t0.c0) IS FALSE)) AND (((('595616389', t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))))) ORDER BY x'719a' DESC  NULLS FIRST, (t0.c0 IN ()) DESC LIMIT 0X2 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY x'719a' DESC  NULLS FIRST, (t0.c0 IN ()) DESC LIMIT 0x2;
SELECT * FROM t0 WHERE (rtreenode(t0.c0 COLLATE BINARY, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-188287110' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ORDER BY (((((t0.c0, '6}#O')) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))IS(((((t0.c0)OR(t0.c0)))OR(t0.c0)))), (- (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST, IFNULL(DISTINCT ((t0.c0) ISNULL), ((t0.c0)||(t0.c0))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((rtreenode(t0.c0 COLLATE BINARY, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-188287110' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))AND((((t0.c0) NOTNULL) IN (((t0.c0)<(t0.c0))))))) ORDER BY ((CAST(t0.c0 AS INTEGER))>=((~ (t0.c0)))), ((t0.c0 COLLATE BINARY) NOT NULL)  NULLS LAST, LOWER(DISTINCT CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB)) ORDER BY ((CAST(t0.c0 AS INTEGER))>=((~ (t0.c0)))), ((t0.c0 COLLATE BINARY) NOT NULL)  NULLS LAST, LOWER(DISTINCT CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) DESC  NULLS FIRST LIMIT 1;
SELECT * FROM t0 WHERE (rtreenode(t0.c0 COLLATE BINARY, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-188287110' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ORDER BY (((((t0.c0, '6}#O')) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))IS(((((t0.c0)OR(t0.c0)))OR(t0.c0)))), (- (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST, IFNULL(DISTINCT ((t0.c0) ISNULL), ((t0.c0)||(t0.c0))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((rtreenode(t0.c0 COLLATE BINARY, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-188287110' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))AND((((t0.c0) NOTNULL) IN (((t0.c0)<(t0.c0))))))) ORDER BY ((CAST(t0.c0 AS INTEGER))>=((~ (t0.c0)))), ((t0.c0 COLLATE BINARY) NOT NULL)  NULLS LAST, LOWER(DISTINCT CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB)) ORDER BY ((CAST(t0.c0 AS INTEGER))>=((~ (t0.c0)))), ((t0.c0 COLLATE BINARY) NOT NULL)  NULLS LAST, LOWER(DISTINCT CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) DESC  NULLS FIRST LIMIT 1;
SELECT ALL COUNT(*) FROM t0 WHERE (532448377);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((0x1fbc8479)AND(0.16156057922868905 COLLATE BINARY))) ORDER BY (t0.c0 COLLATE NOCASE IN ())  NULLS FIRST, ((CASE 0.32401030556779786  WHEN 0X4ce1b3cc THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (TRIM(t0.c0)) AND (((t0.c0) IS FALSE))) LIMIT 0x2;
SELECT ALL * FROM t0 WHERE ((('-903172259') BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0)));
SELECT ALL * FROM t0 WHERE ((((('-903172259') BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0)))AND(((((-14041110 IN (t0.c0)), t0.c0 COLLATE BINARY, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))>=((((0.38278742357045603) NOTNULL), (((0.10821346379924246, t0.c0, t0.c0)) BETWEEN ((x'', t0.c0, t0.c0)) AND ((t0.c0, NULL, t0.c0))), CASE 0.23493106770846395  WHEN t0.c0 THEN t0.c0 END))))));
SELECT ALL * FROM t0 WHERE ((('-903172259') BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0)));
SELECT ALL * FROM t0 WHERE ((((('-903172259') BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0)))AND(((((-14041110 IN (t0.c0)), t0.c0 COLLATE BINARY, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))>=((((0.38278742357045603) NOTNULL), (((0.10821346379924246, t0.c0, t0.c0)) BETWEEN ((x'', t0.c0, t0.c0)) AND ((t0.c0, NULL, t0.c0))), CASE 0.23493106770846395  WHEN t0.c0 THEN t0.c0 END))))));
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN (t0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 COLLATE NOCASE IN (t0.c0)))AND(t0.c0))) ORDER BY ((t0.c0 COLLATE BINARY)|(((NULL)<<(t0.c0)))) LIMIT 0x1 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 END IN ())) ORDER BY ((t0.c0 COLLATE BINARY)|(((NULL)<<(t0.c0)))) LIMIT 1;
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)<=(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) IS FALSE))))AND(NULL COLLATE NOCASE)));
SELECT * FROM t0 WHERE (((((((((t0.c0)<(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) IS FALSE))))AND(NULL COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)<=(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) IS FALSE))))AND(NULL COLLATE NOCASE)));
SELECT * FROM t0 WHERE (((((((((t0.c0)<(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) IS FALSE))))AND(NULL COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 WHERE (json_array_length(((t0.c0) IS FALSE)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((json_array_length(((t0.c0) IS FALSE)))AND(((((t0.c0 IN ()), ((t0.c0)<<(t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0))))=((TRIM(DISTINCT x'42ca'), LIKELY(DISTINCT 'd}ujY'), ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(NULL)))AND(t0.c0)))))))) LIMIT 1;
SELECT * FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND('p')))AND(t0.c0))) NOTNULL));
SELECT DISTINCT * FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND('p')))AND(t0.c0))) NOTNULL));
SELECT * FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND('p')))AND(t0.c0))) NOTNULL));
SELECT DISTINCT * FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND('p')))AND(t0.c0))) NOTNULL));
SELECT MAX(t0.c0) FROM t0 WHERE ((NOT (((x'8e977a')!=(t0.c0)))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((NOT (((x'8e977a')<>(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((-1.8828711E8, t0.c0, UPPER(DISTINCT t0.c0))) AND ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND('-395782820')), (- (t0.c0)), LIKELIHOOD(t0.c0, NULL)))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((-1.8828711E8, t0.c0, UPPER(DISTINCT t0.c0))) AND ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND('-395782820')), (- (t0.c0)), LIKELIHOOD(t0.c0, NULL))))) INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (DATETIME(LIKELIHOOD(DISTINCT t0.c0, t0.c0), UPPER(DISTINCT t0.c0), (+ (t0.c0)), (0.8595922735583824 IN (0X702e48c3, t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT MAX(t0.c0) FROM t0 WHERE (x'ee') ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE '-235360116' END) BETWEEN ((t0.c0 IN ())) AND (((t0.c0) ISNULL)))  NULLS LAST, (((- (t0.c0))) IS FALSE) DESC  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (x'ee') ORDER BY CASE t0.c0 COLLATE BINARY  WHEN (+ (t0.c0)) THEN t0.c0 WHEN t0.c0 COLLATE BINARY THEN t0.c0 COLLATE NOCASE END ASC;
SELECT * FROM t0 WHERE (((CAST('á«\Tæ¯£Wp,æ®' AS BLOB)) IS TRUE));
SELECT DISTINCT * FROM t0 WHERE (((CAST('á«\Tæ¯£Wp,æ®' AS BLOB)) IS TRUE)) LIMIT 2;
SELECT * FROM t0 WHERE (((CAST('á«\Tæ¯£Wp,æ®' AS BLOB)) IS TRUE));
SELECT DISTINCT * FROM t0 WHERE (((CAST('á«\Tæ¯£Wp,æ®' AS BLOB)) IS TRUE)) LIMIT 2;
SELECT MIN(t0.c0) FROM t0 WHERE ((0.03393738647094002 IN ()));
SELECT MIN(t0.c0) FROM t0 WHERE ((((0.03393738647094002 IN ()))AND(((((t0.c0) BETWEEN (t0.c0) AND ('74061087'))) ISNULL)))) ORDER BY (((t0.c0, ((t0.c0)>=(t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))>((-470998379, ((t0.c0)>=(t0.c0)), 'n
'))) ASC INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((CASE WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE x'cd' END, ((0.5060761254835251)-(t0.c0))))>=((((t0.c0) NOTNULL), (((t0.c0))<=((t0.c0))))))) ORDER BY (((t0.c0, ((t0.c0)>=(t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))>((0xffffffffe3ed2295, ((t0.c0)>=(t0.c0)), 'n
'))) ASC;
SELECT * FROM t0 WHERE (-690656287);
SELECT ALL * FROM t0 WHERE (((-690656287)AND((((t0.c0) NOT NULL) IN (((((((t0.c0)OR(t0.c0)))AND('-1021010107')))AND(t0.c0))))))) LIMIT 0;
SELECT * FROM t0 WHERE (-690656287);
SELECT ALL * FROM t0 WHERE (((-690656287)AND((((t0.c0) NOT NULL) IN (((((((t0.c0)OR(t0.c0)))AND('-1021010107')))AND(t0.c0))))))) LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ()))<((+ (0.09162493122335091)))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0 IN ()))<((+ (0.09162493122335091)))))AND(CAST((x'fab61027a0' IN ()) AS TEXT)))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(t0.c0)) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE BINARY) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(t0.c0)) ASC;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ()))<((+ (0.09162493122335091)))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0 IN ()))<((+ (0.09162493122335091)))))AND(CAST((x'fab61027a0' IN ()) AS TEXT)))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(t0.c0)) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE BINARY) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(t0.c0)) ASC;
SELECT * FROM t0 WHERE (((((((t0.c0)GLOB(t0.c0)))AND(((t0.c0)<=(t0.c0)))))OR('b6qNS\æ7'))) ORDER BY ((((((t0.c0)OR(UNLIKELY(t0.c0))))AND(((t0.c0)>=(t0.c0)))))OR((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS LAST, COALESCE(CAST(t0.c0 AS TEXT), t0.c0, CASE WHEN t0.c0 THEN x'9895' ELSE t0.c0 END);
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)GLOB(t0.c0)))AND(((t0.c0)=(t0.c0)))))OR('b6qNS\æ7'))) ORDER BY ((((((t0.c0)OR(UNLIKELY(t0.c0))))AND(((t0.c0)>=(t0.c0)))))OR((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS LAST, COALESCE(CAST(t0.c0 AS TEXT), t0.c0, CASE WHEN t0.c0 THEN x'9895' ELSE t0.c0 END);
SELECT * FROM t0 WHERE (((((((t0.c0)GLOB(t0.c0)))AND(((t0.c0)<=(t0.c0)))))OR('b6qNS\æ7'))) ORDER BY ((((((t0.c0)OR(UNLIKELY(t0.c0))))AND(((t0.c0)>=(t0.c0)))))OR((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS LAST, COALESCE(CAST(t0.c0 AS TEXT), t0.c0, CASE WHEN t0.c0 THEN x'9895' ELSE t0.c0 END);
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)GLOB(t0.c0)))AND(((t0.c0)=(t0.c0)))))OR('b6qNS\æ7'))) ORDER BY ((((((t0.c0)OR(UNLIKELY(t0.c0))))AND(((t0.c0)>=(t0.c0)))))OR((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS LAST, COALESCE(CAST(t0.c0 AS TEXT), t0.c0, CASE WHEN t0.c0 THEN x'9895' ELSE t0.c0 END);
SELECT ALL * FROM t0 WHERE ((((((((((((((((NOT (t0.c0)))AND(x'' COLLATE NOCASE)))AND(t0.c0 COLLATE BINARY)))OR(t0.c0 COLLATE RTRIM)))OR(NULL)))AND(((t0.c0)!=(t0.c0)))))OR(((t0.c0)<(t0.c0)))))OR(CAST(x'25b4' AS TEXT)))) ORDER BY GLOB(NULLIF(NULL, t0.c0), json_array_length(t0.c0, t0.c0)) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((((((((((((((((NOT (t0.c0)))AND(x'' COLLATE NOCASE)))AND(t0.c0 COLLATE BINARY)))OR(t0.c0 COLLATE RTRIM)))OR(NULL)))AND(((t0.c0)>(t0.c0)))))OR(((t0.c0)<(t0.c0)))))OR(CAST(x'25b4' AS TEXT))))AND(((((((t0.c0)AND(((t0.c0) ISNULL))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)LIKE(t0.c0))))))) ORDER BY GLOB(NULLIF(NULL, t0.c0), json_array_length(t0.c0, t0.c0)) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY GLOB(NULLIF(NULL, t0.c0), json_array_length(t0.c0, t0.c0)) ASC;
SELECT ALL * FROM t0 WHERE ((((((((((((((((NOT (t0.c0)))AND(x'' COLLATE NOCASE)))AND(t0.c0 COLLATE BINARY)))OR(t0.c0 COLLATE RTRIM)))OR(NULL)))AND(((t0.c0)!=(t0.c0)))))OR(((t0.c0)<(t0.c0)))))OR(CAST(x'25b4' AS TEXT)))) ORDER BY GLOB(NULLIF(NULL, t0.c0), json_array_length(t0.c0, t0.c0)) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((((((((((((((((NOT (t0.c0)))AND(x'' COLLATE NOCASE)))AND(t0.c0 COLLATE BINARY)))OR(t0.c0 COLLATE RTRIM)))OR(NULL)))AND(((t0.c0)>(t0.c0)))))OR(((t0.c0)<(t0.c0)))))OR(CAST(x'25b4' AS TEXT))))AND(((((((t0.c0)AND(((t0.c0) ISNULL))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)LIKE(t0.c0))))))) ORDER BY GLOB(NULLIF(NULL, t0.c0), json_array_length(t0.c0, t0.c0)) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY GLOB(NULLIF(NULL, t0.c0), json_array_length(t0.c0, t0.c0)) ASC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (x'');
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (x'') ORDER BY CASE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((t0.c0)IS(t0.c0)) THEN (NOT (t0.c0)) ELSE t0.c0 END  NULLS LAST, ROUND((t0.c0 IN (t0.c0)), ((t0.c0) NOTNULL))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))!=(ABS(t0.c0)))) ORDER BY CASE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((t0.c0)IS(t0.c0)) THEN (NOT (t0.c0)) ELSE t0.c0 END  NULLS LAST, ROUND((t0.c0 IN (t0.c0)), ((t0.c0) NOTNULL))  NULLS FIRST LIMIT 0;
SELECT MIN(t0.c0) FROM t0 WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN t0.c0 COLLATE NOCASE THEN (- (t0.c0)) WHEN (t0.c0 IN ()) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE LOWER(DISTINCT t0.c0) END) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((json_quote(t0.c0), (~ (t0.c0))))), IFNULL(t0.c0, SQLITE_SOURCE_ID()) ASC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN t0.c0 COLLATE NOCASE THEN (- (t0.c0)) WHEN (t0.c0 IN ()) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE LOWER(DISTINCT t0.c0) END) ORDER BY ((HEX(t0.c0))-((+ (t0.c0))))  NULLS FIRST, (((t0.c0, t0.c0)) BETWEEN ((((t0.c0) IS TRUE), (~ (t0.c0)))) AND ((CASE WHEN t0.c0 THEN 0.8586554776600237 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, LOWER(x''))))  NULLS FIRST, ((t0.c0 COLLATE RTRIM)*('0.5060761254835251')) LIMIT 0X2 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE ('') ORDER BY ((HEX(t0.c0))-((+ (t0.c0))))  NULLS FIRST, (((t0.c0, t0.c0)) BETWEEN ((((t0.c0) IS TRUE), (~ (t0.c0)))) AND ((CASE WHEN t0.c0 THEN 0.8586554776600237 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, LOWER(x''))))  NULLS FIRST, ((t0.c0 COLLATE RTRIM)*('0.5060761254835251')) LIMIT 2;
SELECT COUNT(*) FROM t0 WHERE (LENGTH(CAST(t0.c0 AS BLOB))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>((t0.c0 IN (t0.c0)))) DESC;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((LENGTH(CAST(t0.c0 AS BLOB)))AND((- (t0.c0)) COLLATE BINARY))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>((t0.c0 IN (t0.c0)))) DESC LIMIT 0x1;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) IS FALSE)) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) IS FALSE)) ORDER BY (((CASE WHEN t0.c0 THEN 0.3920855045045124 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<((((0.9212908942704902)<=(t0.c0))))) ASC;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) IS FALSE)) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) IS FALSE)) ORDER BY (((CASE WHEN t0.c0 THEN 0.3920855045045124 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<((((0.9212908942704902)<=(t0.c0))))) ASC;
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))AND('Y,')))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) IS FALSE));
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c0)AND(t0.c0)))AND('Y,')))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) IS FALSE))AND(t0.c0))) ORDER BY (~ (CAST(t0.c0 AS INTEGER))), (~ (t0.c0)) COLLATE BINARY, t0.c0  NULLS FIRST, ((t0.c0) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0) ISNULL))) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))AND('Y,')))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) IS FALSE));
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c0)AND(t0.c0)))AND('Y,')))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) IS FALSE))AND(t0.c0))) ORDER BY (~ (CAST(t0.c0 AS INTEGER))), (~ (t0.c0)) COLLATE BINARY, t0.c0  NULLS FIRST, ((t0.c0) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0) ISNULL))) LIMIT 0X0;
SELECT MAX(t0.c0) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) IS FALSE));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) IS FALSE)) ORDER BY ((((((((-2.04108E7)OR(((((((((((t0.c0)AND('0.02968136076327177')))OR(t0.c0)))AND(t0.c0)))AND(0.26250284691374537)))OR(t0.c0)))))AND(((t0.c0) NOTNULL))))OR(((t0.c0)GLOB(t0.c0)))))OR(highlight(t0.c0, t0.c0, t0.c0, t0.c0))) LIMIT 1 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((1.977846067E9 COLLATE BINARY IN (NULL))) ORDER BY ((((((((-2.04108E7)OR(((((((((((t0.c0)AND('0.02968136076327177')))OR(t0.c0)))AND(t0.c0)))AND(0.26250284691374537)))OR(t0.c0)))))AND(((t0.c0) NOTNULL))))OR(((t0.c0)GLOB(t0.c0)))))OR(highlight(t0.c0, t0.c0, t0.c0, t0.c0))) LIMIT 0x1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((CAST(0.7552300774958424 AS BLOB))+(((t0.c0) IS TRUE)))) ORDER BY ((TYPEOF(t0.c0)) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (CAST(t0.c0 AS NUMERIC))), (~ (0x297d709a))  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE (((((CAST(0.7552300774958424 AS BLOB))+(((t0.c0) IS TRUE))))AND(((((NULL) IS TRUE))>=(COALESCE(DISTINCT NULL, t0.c0, t0.c0, '
bé¹<')))))) ORDER BY ((((t0.c0) ISNULL))!=(t0.c0 COLLATE RTRIM))  NULLS FIRST, ((LIKELIHOOD(t0.c0, t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((t0.c0))<=((t0.c0))))) DESC INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (CAST((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) AS INTEGER)) ORDER BY ((((t0.c0) ISNULL))<>(t0.c0 COLLATE RTRIM))  NULLS FIRST, ((LIKELIHOOD(t0.c0, t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((t0.c0))<=((t0.c0))))) DESC;
SELECT COUNT(*) FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((x'', x'22a0'))) THEN 0.4763840521859146 WHEN t0.c0 THEN ((('
<}\é©{Tt', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)GLOB(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (t0.c0 IN ()) END) ORDER BY CASE WHEN t0.c0 THEN x'5d08' END COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((x'', x'22a0'))) THEN 0.4763840521859146 WHEN t0.c0 THEN ((('
<}\é©{Tt', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)GLOB(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (t0.c0 IN ()) END) ORDER BY (((t0.c0)-(t0.c0)) IN ())  NULLS LAST, '2075271062';
SELECT ALL * FROM t0 WHERE ((((t0.c0) ISNULL) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (-967626599))))) ORDER BY IFNULL(LIKELIHOOD(DISTINCT t0.c0, t0.c0), JULIANDAY(NULL, 0.7494168280556194, t0.c0, t0.c0)) DESC  NULLS FIRST, ((((((0.0034783030409640814) NOTNULL))OR(ABS('[odmq'))))AND(((t0.c0)>(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0) ISNULL) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (-967626599)))))AND(t0.c0))) ORDER BY (+ (t0.c0 COLLATE NOCASE)) DESC  NULLS LAST, NULLIF((~ (t0.c0)), json_array_length(t0.c0, t0.c0))  NULLS LAST, ((((t0.c0)>(t0.c0))) IS TRUE) DESC LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((((t0.c0) ISNULL) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (-967626599))))) ORDER BY IFNULL(LIKELIHOOD(DISTINCT t0.c0, t0.c0), JULIANDAY(NULL, 0.7494168280556194, t0.c0, t0.c0)) DESC  NULLS FIRST, ((((((0.0034783030409640814) NOTNULL))OR(ABS('[odmq'))))AND(((t0.c0)>(t0.c0))));
SELECT * FROM t0 WHERE (TRIM(DISTINCT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (TRIM(DISTINCT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) ORDER BY (((t0.c0 IN (t0.c0))) ISNULL)  NULLS FIRST, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE, ((t0.c0 IN (t0.c0, t0.c0, t0.c0)) IN ()) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (TRIM(DISTINCT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (TRIM(DISTINCT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) ORDER BY (((t0.c0 IN (t0.c0))) ISNULL)  NULLS FIRST, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE, ((t0.c0 IN (t0.c0, t0.c0, t0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) ORDER BY (((((((((- (t0.c0)))OR((t0.c0 IN ()))))AND((NOT (t0.c0)))))AND(CAST(t0.c0 AS REAL))))OR(((t0.c0) NOTNULL))) DESC;
SELECT MIN(t0.c0) FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) ORDER BY (((((((((- (t0.c0)))OR((t0.c0 IN ()))))AND((NOT (t0.c0)))))AND(CAST(t0.c0 AS REAL))))OR(((t0.c0) NOTNULL))) DESC LIMIT 0X0 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (CAST(CAST(t0.c0 AS TEXT) AS BLOB)) ORDER BY (((((((((- (t0.c0)))OR((t0.c0 IN ()))))AND((NOT (t0.c0)))))AND(CAST(t0.c0 AS REAL))))OR(((t0.c0) NOTNULL))) DESC LIMIT 0x0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ('Så¤çï' IN (t0.c0, t0.c0)) THEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) END);
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ('Så¤çï' IN (t0.c0, t0.c0)) THEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) END)AND(((((DATETIME(t0.c0, t0.c0, t0.c0))AND(CASE t0.c0  WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 END)))OR((NOT (t0.c0)))))));
SELECT * FROM t0 WHERE ((~ (((t0.c0)!=(t0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST, ((x'' COLLATE BINARY)+(3.46329657E8))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((~ (((t0.c0)<(t0.c0)))))AND((t0.c0 IN (t0.c0, t0.c0)) COLLATE NOCASE))) ORDER BY t0.c0 DESC  NULLS LAST, ((x'' COLLATE BINARY)+(3.46329657E8))  NULLS LAST;
SELECT * FROM t0 WHERE ((~ (((t0.c0)!=(t0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST, ((x'' COLLATE BINARY)+(3.46329657E8))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((~ (((t0.c0)<(t0.c0)))))AND((t0.c0 IN (t0.c0, t0.c0)) COLLATE NOCASE))) ORDER BY t0.c0 DESC  NULLS LAST, ((x'' COLLATE BINARY)+(3.46329657E8))  NULLS LAST;
SELECT * FROM t0 WHERE (((((((((t0.c0)AND((t0.c0 IN ()))))AND(((t0.c0) ISNULL))))AND(LIKELIHOOD(t0.c0, t0.c0))))AND((- (t0.c0)))));
SELECT * FROM t0 WHERE (((((((((((t0.c0)AND((t0.c0 IN ()))))AND(((t0.c0) ISNULL))))AND(LIKELIHOOD(t0.c0, t0.c0))))AND((- (t0.c0)))))AND(NULL))) ORDER BY NULL DESC LIMIT 0x0 INTERSECT SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY NULL DESC LIMIT 0X0;
SELECT * FROM t0 WHERE (((((((((t0.c0)AND((t0.c0 IN ()))))AND(((t0.c0) ISNULL))))AND(LIKELIHOOD(t0.c0, t0.c0))))AND((- (t0.c0)))));
SELECT * FROM t0 WHERE (((((((((((t0.c0)AND((t0.c0 IN ()))))AND(((t0.c0) ISNULL))))AND(LIKELIHOOD(t0.c0, t0.c0))))AND((- (t0.c0)))))AND(NULL))) ORDER BY NULL DESC LIMIT 0x0 INTERSECT SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY NULL DESC LIMIT 0X0;
SELECT * FROM t0 WHERE (((NULL)OR(CASE WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((((t0.c0)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((- (t0.c0)))))AND(CAST(t0.c0 AS NUMERIC)))  NULLS FIRST, (((((((((('\z')AND(((t0.c0) NOT NULL))))AND(UPPER(t0.c0))))AND(HEX(t0.c0))))AND(HEX(DISTINCT t0.c0))))OR(((0X14747836)%(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 NOT INDEXED WHERE (((NULL)OR(CASE WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((((t0.c0)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((- (t0.c0)))))AND(CAST(t0.c0 AS NUMERIC)))  NULLS FIRST, (((((((((('\z')AND(((t0.c0) NOT NULL))))AND(UPPER(t0.c0))))AND(HEX(t0.c0))))AND(HEX(DISTINCT t0.c0))))OR(((343177270)%(t0.c0))))  NULLS FIRST;
SELECT * FROM t0 WHERE (((NULL)OR(CASE WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((((t0.c0)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((- (t0.c0)))))AND(CAST(t0.c0 AS NUMERIC)))  NULLS FIRST, (((((((((('\z')AND(((t0.c0) NOT NULL))))AND(UPPER(t0.c0))))AND(HEX(t0.c0))))AND(HEX(DISTINCT t0.c0))))OR(((0X14747836)%(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 NOT INDEXED WHERE (((NULL)OR(CASE WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((((t0.c0)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((- (t0.c0)))))AND(CAST(t0.c0 AS NUMERIC)))  NULLS FIRST, (((((((((('\z')AND(((t0.c0) NOT NULL))))AND(UPPER(t0.c0))))AND(HEX(t0.c0))))AND(HEX(DISTINCT t0.c0))))OR(((343177270)%(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)<(t0.c0))) ISNULL));
SELECT * FROM t0 WHERE (((((t0.c0)<(t0.c0))) ISNULL)) INTERSECT SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)LIKE(t0.c0)) AS BLOB));
SELECT ALL * FROM t0 WHERE (((((t0.c0)<(t0.c0))) ISNULL));
SELECT * FROM t0 WHERE (((((t0.c0)<(t0.c0))) ISNULL)) INTERSECT SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)LIKE(t0.c0)) AS BLOB));
SELECT MIN(t0.c0) FROM t0 WHERE (LIKELY(t0.c0 COLLATE NOCASE));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (LIKELY(t0.c0 COLLATE NOCASE)) ORDER BY UNLIKELY(CAST(t0.c0 AS INTEGER)) DESC, (- ((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((t0.c0 IN ())) ORDER BY UNLIKELY(CAST(t0.c0 AS INTEGER)) DESC, (- ((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS FIRST LIMIT 2;
SELECT MAX(t0.c0) FROM t0 WHERE (((x'2f') BETWEEN (((((((((((t0.c0)OR(0X6fb4ad5d)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND('871437567'))) AND (((t0.c0) IS TRUE)))) ORDER BY NULL  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (((x'2f') BETWEEN (((((((((((t0.c0)OR(0x6fb4ad5d)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND('871437567'))) AND (((t0.c0) IS TRUE)))) ORDER BY '2032368069'  NULLS LAST, t0.c0, (NOT (COALESCE(DISTINCT t0.c0, t0.c0)))  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT ALL * FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((((((((t0.c0))>=((t0.c0))))OR(((t0.c0) BETWEEN (NULL) AND (x'be3c')))))OR(UNLIKELY(t0.c0))))AND(((t0.c0) IS TRUE))))AND((((t0.c0, x'96'))>=((t0.c0, t0.c0))))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((((((((((t0.c0))>=((t0.c0))))OR(((t0.c0) BETWEEN (NULL) AND (x'be3c')))))OR(UNLIKELY(t0.c0))))AND(((t0.c0) IS TRUE))))AND((((t0.c0, x'96'))>=((t0.c0, t0.c0)))))) LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) ISNULL) COLLATE RTRIM) ORDER BY ((((t0.c0) ISNULL)) BETWEEN (((t0.c0)%(t0.c0))) AND (((t0.c0)%(x'21')))), (t0.c0 COLLATE BINARY IN (t0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, (((+ (t0.c0)))LIKE(CAST(t0.c0 AS BLOB)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL) COLLATE RTRIM)AND((((t0.c0 IN ())) IS FALSE)))) ORDER BY ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))) ISNULL)  NULLS FIRST, t0.c0 ASC LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY SQLITE_VERSION() ASC LIMIT 2 INTERSECT SELECT * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN (((t0.c0) ISNULL), ((((((t0.c0)OR(0.7296617895710306)))AND(t0.c0)))AND(t0.c0))))) ORDER BY SQLITE_VERSION() ASC LIMIT 2;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY SQLITE_VERSION() ASC LIMIT 2 INTERSECT SELECT * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN (((t0.c0) ISNULL), ((((((t0.c0)OR(0.7296617895710306)))AND(t0.c0)))AND(t0.c0))))) ORDER BY SQLITE_VERSION() ASC LIMIT 2;
SELECT ALL * FROM t0 WHERE ((CAST(t0.c0 AS NUMERIC) IN ()));
SELECT * FROM t0 WHERE ((((CAST(t0.c0 AS NUMERIC) IN ()))AND((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((x'bda8', ((t0.c0)IS(t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0) IS FALSE))) AND ((CAST(t0.c0 AS NUMERIC), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (NOT (t0.c0)), ((((((((((t0.c0)OR(t0.c0)))OR(0.45443049183512807)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))))));
SELECT ALL * FROM t0 WHERE ((CAST(t0.c0 AS NUMERIC) IN ()));
SELECT * FROM t0 WHERE ((((CAST(t0.c0 AS NUMERIC) IN ()))AND((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((x'bda8', ((t0.c0)IS(t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0) IS FALSE))) AND ((CAST(t0.c0 AS NUMERIC), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (NOT (t0.c0)), ((((((((((t0.c0)OR(t0.c0)))OR(0.45443049183512807)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))))));
SELECT ALL * FROM t0 WHERE (((''']t JAI')AND(t0.c0 COLLATE RTRIM)));
SELECT * FROM t0 WHERE (((((''']t JAI')AND(t0.c0 COLLATE RTRIM)))AND((((((t0.c0 IN (t0.c0)))AND((+ (t0.c0)))))AND(TRIM(t0.c0, t0.c0)))))) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (((''']t JAI')AND(t0.c0 COLLATE RTRIM)));
SELECT * FROM t0 WHERE (((((''']t JAI')AND(t0.c0 COLLATE RTRIM)))AND((((((t0.c0 IN (t0.c0)))AND((+ (t0.c0)))))AND(TRIM(t0.c0, t0.c0)))))) LIMIT 0x1;
SELECT * FROM t0 WHERE (((UNLIKELY(DISTINCT t0.c0))<(LIKE(t0.c0, t0.c0))));
SELECT * FROM t0 WHERE (((((UNLIKELY(DISTINCT t0.c0))<(LIKE(t0.c0, t0.c0))))AND((((0.06019279316577686, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0)&(NULL)), (+ (t0.c0)))))))) LIMIT 0x0;
SELECT * FROM t0 WHERE (((UNLIKELY(DISTINCT t0.c0))<(LIKE(t0.c0, t0.c0))));
SELECT * FROM t0 WHERE (((((UNLIKELY(DISTINCT t0.c0))<(LIKE(t0.c0, t0.c0))))AND((((0.06019279316577686, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0)&(NULL)), (+ (t0.c0)))))))) LIMIT 0x0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY ((t0.c0)/(LTRIM(t0.c0, t0.c0))) ASC  NULLS LAST, ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND('-608806246')))AND(t0.c0)))AND(t0.c0)))/(((t0.c0)>=('-ä»c'))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY ((t0.c0)/(LTRIM(t0.c0, t0.c0))) ASC  NULLS LAST, ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND('-608806246')))AND(t0.c0)))AND(t0.c0)))/(((t0.c0)>=('-ä»c')))) LIMIT 1 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((t0.c0 IN ()))AND(((((NULL)AND(t0.c0)))AND(t0.c0)))))OR(CAST(t0.c0 AS REAL)))) ORDER BY ((t0.c0)/(LTRIM(t0.c0, t0.c0))) ASC  NULLS LAST, ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND('-608806246')))AND(t0.c0)))AND(t0.c0)))/(((t0.c0)>=('-ä»c')))) LIMIT 0X1;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((0Xffffffffc682c553)OR((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(x'')))AND(((t0.c0)||(t0.c0)))))AND(LOWER(DISTINCT t0.c0))))OR(0.3711734993597804))) ORDER BY ((json_array(t0.c0, t0.c0, t0.c0)) IS FALSE) ASC  NULLS FIRST, ((((((((((((('708366128'))>=((t0.c0))))OR(((t0.c0)-(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(x'df9d1a')))OR(t0.c0)))))AND(((t0.c0)>=(t0.c0)))))OR((NOT (t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((((0xffffffffc682c553)OR((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(x'')))AND(((t0.c0)||(t0.c0)))))AND(LOWER(DISTINCT t0.c0))))OR(0.3711734993597804))) ORDER BY ((json_array(t0.c0, t0.c0, t0.c0)) IS FALSE) ASC  NULLS FIRST, ((((((((((((('708366128'))>=((t0.c0))))OR(((t0.c0)-(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(x'df9d1a')))OR(t0.c0)))))AND(((t0.c0)>=(t0.c0)))))OR((NOT (t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN -1.0958963E7 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 224546577 END) BETWEEN ((((t0.c0))==((t0.c0)))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN -1.0958963E7 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 224546577 END) BETWEEN ((((t0.c0))==((t0.c0)))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY (((t0.c0)AND(t0.c0)) IN ()) LIMIT 0x2;
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN -1.0958963E7 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 224546577 END) BETWEEN ((((t0.c0))==((t0.c0)))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN -1.0958963E7 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 224546577 END) BETWEEN ((((t0.c0))==((t0.c0)))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY (((t0.c0)AND(t0.c0)) IN ()) LIMIT 0x2;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (UNLIKELY(CAST(t0.c0 AS INTEGER))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((UNLIKELY(CAST(t0.c0 AS INTEGER)))AND(t0.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM))) ORDER BY t0.c0 ASC  NULLS FIRST INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE ((((- (t0.c0))) BETWEEN ('rB&') AND ((t0.c0 IN (t0.c0, t0.c0))))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) AS INTEGER)) ORDER BY ((((t0.c0) ISNULL))AND(((t0.c0) NOTNULL)));
SELECT DISTINCT * FROM t0 WHERE (((CAST(DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) AS INTEGER))AND(0.4148463764963529))) ORDER BY t0.c0 LIMIT 3;
SELECT ALL * FROM t0 WHERE (CAST(DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) AS INTEGER)) ORDER BY ((((t0.c0) ISNULL))AND(((t0.c0) NOTNULL)));
SELECT DISTINCT * FROM t0 WHERE (((CAST(DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) AS INTEGER))AND(0.4148463764963529))) ORDER BY t0.c0 LIMIT 3;
SELECT COUNT(*) FROM t0 WHERE ((((((((((t0.c0)AND(1.29087543E9)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) IN ((t0.c0 IN (t0.c0))))) ORDER BY ((SQLITE_COMPILEOPTION_GET(t0.c0)) BETWEEN (((0.4064645124378611)<(t0.c0))) AND (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((((t0.c0)AND(1.29087543E9)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) IN ((t0.c0 IN (t0.c0)))))AND(((((t0.c0)>=(t0.c0)))&(NULL))))) ORDER BY CAST(t0.c0 AS TEXT) DESC  NULLS LAST LIMIT 0x3 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY CAST(t0.c0 AS TEXT) DESC  NULLS LAST LIMIT 3;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((t0.c0 IN ()));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((t0.c0 IN ()))AND(((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND('-395782820')))OR((t0.c0 IN (t0.c0, t0.c0)))))OR((- (t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (0X506dc39))))))) ORDER BY t0.c0  NULLS FIRST, (((t0.c0 IN (t0.c0)))+(((t0.c0) IS TRUE))) ASC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0)<=(t0.c0)))) AND ((((t0.c0) NOTNULL), ((t0.c0)OR(t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))))) ORDER BY t0.c0  NULLS FIRST, (((t0.c0 IN (t0.c0)))+(((t0.c0) IS TRUE))) ASC  NULLS LAST LIMIT 0;
SELECT ALL COUNT(*) FROM t0 WHERE (x'bba9') ORDER BY (t0.c0 COLLATE BINARY IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC, (((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, x'8025a9'))) COLLATE RTRIM ASC  NULLS FIRST, ((t0.c0)&(((t0.c0)!=(t0.c0)))) ASC;
SELECT COUNT(*) FROM t0 WHERE (((x'bba9')AND(t0.c0))) ORDER BY 'K' ASC, NULL  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (LTRIM(t0.c0, '1760991536'), (((t0.c0)) BETWEEN ((t0.c0)) AND ((0.1594204627017618)))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c0 COLLATE RTRIM IN ()))AND(((((t0.c0)IS(t0.c0))) NOT NULL)))) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (LTRIM(t0.c0, '1760991536'), (((t0.c0)) BETWEEN ((t0.c0)) AND ((0.1594204627017618)))))  NULLS FIRST LIMIT 2;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (LTRIM(t0.c0, '1760991536'), (((t0.c0)) BETWEEN ((t0.c0)) AND ((0.1594204627017618)))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c0 COLLATE RTRIM IN ()))AND(((((t0.c0)IS(t0.c0))) NOT NULL)))) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (LTRIM(t0.c0, '1760991536'), (((t0.c0)) BETWEEN ((t0.c0)) AND ((0.1594204627017618)))))  NULLS FIRST LIMIT 2;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)IS(CAST(t0.c0 AS TEXT)))) ORDER BY ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), ((t0.c0)>=(t0.c0))))>=((((t0.c0) IS TRUE), ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) DESC;
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)IS(CAST(t0.c0 AS TEXT)))) ORDER BY ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), ((t0.c0)>=(t0.c0))))>=((((t0.c0) IS TRUE), ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) DESC LIMIT 4;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)IS(CAST(t0.c0 AS TEXT)))) ORDER BY ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), ((t0.c0)>=(t0.c0))))>=((((t0.c0) IS TRUE), ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) DESC;
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)IS(CAST(t0.c0 AS TEXT)))) ORDER BY ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), ((t0.c0)>=(t0.c0))))>=((((t0.c0) IS TRUE), ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) DESC LIMIT 4;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(LIKELIHOOD(DISTINCT t0.c0, t0.c0) AS NUMERIC)) ORDER BY ((((((t0.c0) ISNULL))AND((((t0.c0))!=((t0.c0))))))OR(t0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CAST(LIKELIHOOD(DISTINCT t0.c0, t0.c0) AS NUMERIC))AND(((CAST(t0.c0 AS INTEGER)) NOT NULL)))) ORDER BY ((((((t0.c0) ISNULL))AND((((t0.c0))!=((t0.c0))))))OR(t0.c0 COLLATE RTRIM)) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c0)AND(t0.c0)))OR(t0.c0))  WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN NULL ELSE MAX(t0.c0, t0.c0, NULL, '-1887719382') END) ORDER BY t0.c0 COLLATE BINARY  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (CASE ((((t0.c0)AND(t0.c0)))OR(t0.c0))  WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN NULL ELSE MAX(t0.c0, t0.c0, NULL, '-1887719382') END) ORDER BY t0.c0 COLLATE BINARY  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0)<(t0.c0)) THEN (((t0.c0))>=((0X49c0a82c))) WHEN ((t0.c0)>>(x'd1c830')) THEN (+ (t0.c0)) ELSE (((t0.c0))==((t0.c0))) END) ORDER BY t0.c0 COLLATE BINARY  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c0)AND(t0.c0)))OR(t0.c0))  WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN NULL ELSE MAX(t0.c0, t0.c0, NULL, '-1887719382') END) ORDER BY t0.c0 COLLATE BINARY  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (CASE ((((t0.c0)AND(t0.c0)))OR(t0.c0))  WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN NULL ELSE MAX(t0.c0, t0.c0, NULL, '-1887719382') END) ORDER BY t0.c0 COLLATE BINARY  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0)<(t0.c0)) THEN (((t0.c0))>=((0X49c0a82c))) WHEN ((t0.c0)>>(x'd1c830')) THEN (+ (t0.c0)) ELSE (((t0.c0))==((t0.c0))) END) ORDER BY t0.c0 COLLATE BINARY  NULLS LAST LIMIT 2;
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((t0.c0)AND(CASE WHEN ((t0.c0)LIKE(t0.c0)) THEN NULLIF(t0.c0, t0.c0) END))) LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND('_hP[f^')))AND(t0.c0)))|(((1.63658766E9) NOT NULL)))) LIMIT 0;
SELECT ALL * FROM t0 WHERE (LTRIM(((t0.c0) NOTNULL), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (LTRIM(((t0.c0) NOTNULL), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) LIMIT 0;
SELECT ALL * FROM t0 WHERE (LTRIM(((t0.c0) NOTNULL), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (LTRIM(((t0.c0) NOTNULL), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) LIMIT 0;
SELECT * FROM t0 WHERE ((+ (0Xffffffffd6d56be1)) COLLATE NOCASE) ORDER BY t0.c0 ASC  NULLS FIRST, NULL;
SELECT * FROM t0 WHERE ((+ (-690656287)) COLLATE NOCASE) ORDER BY t0.c0 ASC  NULLS FIRST, NULL LIMIT 0X0;
SELECT * FROM t0 WHERE ((+ (0Xffffffffd6d56be1)) COLLATE NOCASE) ORDER BY t0.c0 ASC  NULLS FIRST, NULL;
SELECT * FROM t0 WHERE ((+ (-690656287)) COLLATE NOCASE) ORDER BY t0.c0 ASC  NULLS FIRST, NULL LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)|(t0.c0)))AND(t0.c0)))AND(CAST(t0.c0 AS NUMERIC)))) ORDER BY (~ ((((t0.c0))>((t0.c0))))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)|(t0.c0)))AND(t0.c0)))AND(CAST(t0.c0 AS NUMERIC)))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((((('591114925')OR(t0.c0)))AND(t0.c0))) AND (x'33')) ASC  NULLS LAST, CAST(ROUND(t0.c0, t0.c0) AS REAL) DESC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR('-1219429152')))OR(t0.c0)))AND(t0.c0)))!=(CASE t0.c0  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' END))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((((('591114925')OR(t0.c0)))AND(t0.c0))) AND (x'33')) ASC  NULLS LAST, CAST(ROUND(t0.c0, t0.c0) AS REAL) DESC LIMIT 0;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)|(t0.c0)))AND(t0.c0)))AND(CAST(t0.c0 AS NUMERIC)))) ORDER BY (~ ((((t0.c0))>((t0.c0))))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)|(t0.c0)))AND(t0.c0)))AND(CAST(t0.c0 AS NUMERIC)))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((((('591114925')OR(t0.c0)))AND(t0.c0))) AND (x'33')) ASC  NULLS LAST, CAST(ROUND(t0.c0, t0.c0) AS REAL) DESC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR('-1219429152')))OR(t0.c0)))AND(t0.c0)))!=(CASE t0.c0  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' END))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((((('591114925')OR(t0.c0)))AND(t0.c0))) AND (x'33')) ASC  NULLS LAST, CAST(ROUND(t0.c0, t0.c0) AS REAL) DESC LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS INTEGER) ASC  NULLS LAST, ((((t0.c0)%(t0.c0)))==(((t0.c0)%(t0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS INTEGER) ASC  NULLS LAST, ((((t0.c0)%(t0.c0)))==(((t0.c0)%(t0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOTNULL)) ORDER BY ((t0.c0 COLLATE BINARY) NOT NULL) DESC;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOTNULL))AND(ABS((((t0.c0))<=((t0.c0))))))) ORDER BY ((((t0.c0)GLOB(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))) AND (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))  NULLS LAST, LIKELY(DISTINCT t0.c0) COLLATE NOCASE ASC, (((- (t0.c0))) NOT BETWEEN (((t0.c0)OR(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC LIMIT 3;
SELECT * FROM t0 WHERE (((t0.c0)>>(t0.c0)) COLLATE RTRIM) ORDER BY (((0.33134594001392603)) NOT BETWEEN ((LTRIM(t0.c0, t0.c0))) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (('-1786844958', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ASC  NULLS FIRST, LIKELY(DISTINCT t0.c0 COLLATE NOCASE) DESC;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)>>(t0.c0)) COLLATE RTRIM) ORDER BY (((0.33134594001392603)) NOT BETWEEN ((LTRIM(t0.c0, t0.c0))) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (('-1786844958', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ASC  NULLS FIRST, LIKELY(DISTINCT t0.c0 COLLATE NOCASE) DESC;
SELECT * FROM t0 WHERE (((t0.c0)>>(t0.c0)) COLLATE RTRIM) ORDER BY (((0.33134594001392603)) NOT BETWEEN ((LTRIM(t0.c0, t0.c0))) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (('-1786844958', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ASC  NULLS FIRST, LIKELY(DISTINCT t0.c0 COLLATE NOCASE) DESC;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)>>(t0.c0)) COLLATE RTRIM) ORDER BY (((0.33134594001392603)) NOT BETWEEN ((LTRIM(t0.c0, t0.c0))) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (('-1786844958', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ASC  NULLS FIRST, LIKELY(DISTINCT t0.c0 COLLATE NOCASE) DESC;
SELECT COUNT(*) FROM t0 WHERE (json_patch(CAST(t0.c0 AS TEXT), t0.c0 COLLATE NOCASE));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((json_patch(CAST(t0.c0 AS TEXT), t0.c0 COLLATE NOCASE))AND((((~ (t0.c0)))=('567727177'))))) LIMIT 0X0;
SELECT * FROM t0 WHERE ((('?E')AND(((t0.c0)GLOB(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((('?E')AND(((t0.c0)GLOB(t0.c0)))))AND((- ((t0.c0 IN (t0.c0, t0.c0))))))) LIMIT 5 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c0) NOTNULL) AS NUMERIC)) LIMIT 0x5;
SELECT * FROM t0 WHERE ((('?E')AND(((t0.c0)GLOB(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((('?E')AND(((t0.c0)GLOB(t0.c0)))))AND((- ((t0.c0 IN (t0.c0, t0.c0))))))) LIMIT 5 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c0) NOTNULL) AS NUMERIC)) LIMIT 0x5;
SELECT ALL * FROM t0 WHERE (((((t0.c0)<(t0.c0))) IS FALSE)) ORDER BY (NOT ((t0.c0 IN ())))  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c0)<(t0.c0))) IS FALSE)) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL), (((t0.c0))<=((0.7762710001098772))), ((t0.c0)AND(0.8545779734237292)), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))  NULLS LAST, ((((t0.c0)=(t0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0)<=(t0.c0)))) LIMIT 0X3 INTERSECT SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))-((((t0.c0, t0.c0))>((t0.c0, t0.c0)))))) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL), (((t0.c0))<=((0.7762710001098772))), ((t0.c0)AND(0.8545779734237292)), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))  NULLS LAST, ((((t0.c0)=(t0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0)<=(t0.c0)))) LIMIT 0x3;
SELECT ALL * FROM t0 WHERE (((((t0.c0)<(t0.c0))) IS FALSE)) ORDER BY (NOT ((t0.c0 IN ())))  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c0)<(t0.c0))) IS FALSE)) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL), (((t0.c0))<=((0.7762710001098772))), ((t0.c0)AND(0.8545779734237292)), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))  NULLS LAST, ((((t0.c0)=(t0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0)<=(t0.c0)))) LIMIT 0X3 INTERSECT SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))-((((t0.c0, t0.c0))>((t0.c0, t0.c0)))))) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL), (((t0.c0))<=((0.7762710001098772))), ((t0.c0)AND(0.8545779734237292)), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))  NULLS LAST, ((((t0.c0)=(t0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0)<=(t0.c0)))) LIMIT 0x3;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c0)<(t0.c0)) IN (((t0.c0)*(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT MAX(t0.c0) FROM t0 WHERE ((((t0.c0)<(t0.c0)) IN (((t0.c0)*(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS FALSE))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((t0.c0)|(CAST(t0.c0 AS TEXT))) DESC, (((- (t0.c0))) NOT NULL) DESC;
SELECT ALL * FROM t0 WHERE (((((((t0.c0) IS FALSE))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((('-266835620', t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (((~ (t0.c0)), -1.847590845E9)))))) ORDER BY ((t0.c0)|(CAST(t0.c0 AS TEXT))) DESC, (((- (t0.c0))) NOT NULL) DESC;
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS FALSE))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((t0.c0)|(CAST(t0.c0 AS TEXT))) DESC, (((- (t0.c0))) NOT NULL) DESC;
SELECT ALL * FROM t0 WHERE (((((((t0.c0) IS FALSE))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((('-266835620', t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (((~ (t0.c0)), -1.847590845E9)))))) ORDER BY ((t0.c0)|(CAST(t0.c0 AS TEXT))) DESC, (((- (t0.c0))) NOT NULL) DESC;
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0) ISNULL) COLLATE BINARY) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ((- (x'b8eae0')), t0.c0 COLLATE NOCASE)), ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)%(t0.c0)))) ASC, '';
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0) ISNULL) COLLATE BINARY) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ((- (x'b8eae0')), t0.c0 COLLATE NOCASE)), ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)%(t0.c0)))) ASC, '' LIMIT 3 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS TEXT) THEN (((t0.c0))<=((NULL))) ELSE t0.c0 END) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ((- (x'b8eae0')), t0.c0 COLLATE NOCASE)), ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)%(t0.c0)))) ASC, '' LIMIT 0x3;
SELECT * FROM t0 WHERE (NULL);
SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY (((0Xffffffffd5e6f16e)) BETWEEN ((0.5505794088875049)) AND ((CAST(t0.c0 AS INTEGER)))), t0.c0 LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((x'0a96940e' IN ())) ORDER BY (((-706285202)) BETWEEN ((0.5505794088875049)) AND ((CAST(t0.c0 AS INTEGER)))), t0.c0 LIMIT 0;
SELECT * FROM t0 WHERE (NULL);
SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY (((0Xffffffffd5e6f16e)) BETWEEN ((0.5505794088875049)) AND ((CAST(t0.c0 AS INTEGER)))), t0.c0 LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((x'0a96940e' IN ())) ORDER BY (((-706285202)) BETWEEN ((0.5505794088875049)) AND ((CAST(t0.c0 AS INTEGER)))), t0.c0 LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN IFNULL(t0.c0, t0.c0) ELSE ((t0.c0)<=(t0.c0)) END) ORDER BY json_valid((t0.c0 IN (t0.c0, t0.c0))) ASC  NULLS LAST, '1262583256' DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN IFNULL(t0.c0, t0.c0) ELSE ((t0.c0)<=(t0.c0)) END) ORDER BY (((t0.c0)) NOT BETWEEN ((((0.3383017371837632)GLOB(t0.c0)))) AND ((CAST(t0.c0 AS NUMERIC)))) DESC  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT NULL)) ORDER BY NULLIF(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), json(t0.c0))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT NULL))AND(NULL))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT NULL)) ORDER BY NULLIF(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), json(t0.c0))  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE ((((- (t0.c0))) BETWEEN (((t0.c0) IS FALSE)) AND (t0.c0))) ORDER BY 0.29119519474282507;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((((- (t0.c0))) BETWEEN (((t0.c0) IS FALSE)) AND (t0.c0)))AND(((CAST(NULL AS BLOB)) BETWEEN (NULLIF(DISTINCT NULL, t0.c0)) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY 0.29119519474282507 INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (((((RTRIM(t0.c0))AND(CASE t0.c0  WHEN 349609341 THEN t0.c0 ELSE t0.c0 END)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY 0.29119519474282507;
SELECT * FROM t0 WHERE ((x'a8c579' IN ()));
SELECT ALL * FROM t0 WHERE ((((x'a8c579' IN ()))AND(((((((t0.c0)OR(t0.c0)))AND(t0.c0))) BETWEEN (LOWER(DISTINCT t0.c0)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) ORDER BY (CAST(t0.c0 AS BLOB) IN ((((t0.c0, t0.c0, NULL))=((t0.c0, t0.c0, t0.c0))))) ASC  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)-(NULL)) DESC;
SELECT * FROM t0 WHERE ((x'a8c579' IN ()));
SELECT ALL * FROM t0 WHERE ((((x'a8c579' IN ()))AND(((((((t0.c0)OR(t0.c0)))AND(t0.c0))) BETWEEN (LOWER(DISTINCT t0.c0)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) ORDER BY (CAST(t0.c0 AS BLOB) IN ((((t0.c0, t0.c0, NULL))=((t0.c0, t0.c0, t0.c0))))) ASC  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)-(NULL)) DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0)))>(CAST(t0.c0 AS NUMERIC))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0)))>(CAST(t0.c0 AS NUMERIC)))) ORDER BY (~ (((t0.c0)+(t0.c0)))) DESC, (~ (((t0.c0)*(t0.c0)))) LIMIT 2;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0)))>(CAST(t0.c0 AS NUMERIC))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0)))>(CAST(t0.c0 AS NUMERIC)))) ORDER BY (~ (((t0.c0)+(t0.c0)))) DESC, (~ (((t0.c0)*(t0.c0)))) LIMIT 2;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ((~ (t0.c0)))));
SELECT * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ((~ (t0.c0))))) INTERSECT SELECT * FROM t0 WHERE (((((t0.c0))>((t0.c0))) IN ()));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ((~ (t0.c0)))));
SELECT * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ((~ (t0.c0))))) INTERSECT SELECT * FROM t0 WHERE (((((t0.c0))>((t0.c0))) IN ()));
SELECT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, 0.9342066925536363)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0 COLLATE NOCASE))>((t0.c0 COLLATE RTRIM, MAX(t0.c0, x'e2bc', '-1140884071', t0.c0))))) ORDER BY 'svadY	'  NULLS FIRST, ((0.4227840037364461) BETWEEN ((t0.c0 IN (0.22916602276680031))) AND (((t0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE (((((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, 0.9342066925536363)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0 COLLATE NOCASE))>((t0.c0 COLLATE RTRIM, MAX(t0.c0, x'e2bc', '-1140884071', t0.c0)))))AND(((((((((((((x'')IS NOT(t0.c0)))OR((t0.c0 IN (t0.c0)))))OR(CAST(t0.c0 AS NUMERIC))))OR(NULL)))AND(CASE 0.07502060912088915  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0 COLLATE RTRIM))))) ORDER BY 'svadY	'  NULLS FIRST, ((0.4227840037364461) BETWEEN ((t0.c0 IN (0.22916602276680031))) AND (((t0.c0) IS FALSE))) ASC  NULLS FIRST INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY 'svadY	'  NULLS FIRST, ((0.4227840037364461) BETWEEN ((t0.c0 IN (0.22916602276680031))) AND (((t0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))&(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ORDER BY (((LIKE(t0.c0, t0.c0), t0.c0))>((HEX(t0.c0), ((t0.c0) IS FALSE)))) ASC, (((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))OR(((t0.c0) NOT NULL))) ASC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))&(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ORDER BY (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))<=((((t0.c0)IS NOT(t0.c0)))))  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (NULL) AND (NULL)))) AND ((CASE WHEN t0.c0 THEN t0.c0 END)))) ORDER BY (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))<=((((t0.c0)IS NOT(t0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), json_array(t0.c0, t0.c0, t0.c0, t0.c0))) AND (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, 'dãZë£¿'))), t0.c0)))) ORDER BY ((((t0.c0)%(t0.c0)))GLOB(CASE WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), json_array(t0.c0, t0.c0, t0.c0, t0.c0))) AND (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, 'dãZë£¿'))), t0.c0)))) ORDER BY CASE WHEN ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN LTRIM(t0.c0, t0.c0) ELSE LOWER(DISTINCT t0.c0) END LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), json_array(t0.c0, t0.c0, t0.c0, t0.c0))) AND (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, 'dãZë£¿'))), t0.c0)))) ORDER BY ((((t0.c0)%(t0.c0)))GLOB(CASE WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), json_array(t0.c0, t0.c0, t0.c0, t0.c0))) AND (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, 'dãZë£¿'))), t0.c0)))) ORDER BY CASE WHEN ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN LTRIM(t0.c0, t0.c0) ELSE LOWER(DISTINCT t0.c0) END LIMIT 0;
SELECT * FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.662584033695828 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) BETWEEN (x'fe') AND (t0.c0)) WHEN t0.c0 THEN ((t0.c0)IS NOT(' D0#è¼°''')) WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0)&('*é½¥å¦?mR')) WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0) ISNULL) WHEN (((t0.c0, t0.c0))<=((t0.c0, t0.c0))) THEN t0.c0 WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) END) ORDER BY ((((((((('1598365400' IN (t0.c0)))AND(t0.c0 COLLATE NOCASE)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(x'2058')))AND(((t0.c0)>>(0.6595868342350101))))  NULLS LAST, t0.c0 DESC  NULLS FIRST, CASE CAST(t0.c0 AS REAL)  WHEN t0.c0 THEN ((t0.c0) IS TRUE) END DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.662584033695828 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) BETWEEN (x'fe') AND (t0.c0)) WHEN t0.c0 THEN ((t0.c0)IS NOT(' D0#è¼°''')) WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0)&('*é½¥å¦?mR')) WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0) ISNULL) WHEN (((t0.c0, t0.c0))==((t0.c0, t0.c0))) THEN t0.c0 WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) END)AND(TRIM(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(NULL)))OR(NULL)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))) ORDER BY t0.c0 COLLATE NOCASE ASC  NULLS LAST, (- (((t0.c0)>(t0.c0))))  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.662584033695828 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) BETWEEN (x'fe') AND (t0.c0)) WHEN t0.c0 THEN ((t0.c0)IS NOT(' D0#è¼°''')) WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0)&('*é½¥å¦?mR')) WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0) ISNULL) WHEN (((t0.c0, t0.c0))<=((t0.c0, t0.c0))) THEN t0.c0 WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) END) ORDER BY ((((((((('1598365400' IN (t0.c0)))AND(t0.c0 COLLATE NOCASE)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(x'2058')))AND(((t0.c0)>>(0.6595868342350101))))  NULLS LAST, t0.c0 DESC  NULLS FIRST, CASE CAST(t0.c0 AS REAL)  WHEN t0.c0 THEN ((t0.c0) IS TRUE) END DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.662584033695828 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) BETWEEN (x'fe') AND (t0.c0)) WHEN t0.c0 THEN ((t0.c0)IS NOT(' D0#è¼°''')) WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0)&('*é½¥å¦?mR')) WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0) ISNULL) WHEN (((t0.c0, t0.c0))==((t0.c0, t0.c0))) THEN t0.c0 WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) END)AND(TRIM(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(NULL)))OR(NULL)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))) ORDER BY t0.c0 COLLATE NOCASE ASC  NULLS LAST, (- (((t0.c0)>(t0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>=(t0.c0)))<<((t0.c0 IN (t0.c0, t0.c0))))) ORDER BY ((((((((1972789177)AND((((t0.c0, t0.c0))>=((t0.c0, t0.c0))))))OR(t0.c0)))AND(json_quote(t0.c0))))AND(((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(x'7ea1'))))  NULLS FIRST, CAST((~ (t0.c0)) AS INTEGER);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)>=(t0.c0)))<<((t0.c0 IN (t0.c0, t0.c0))))) ORDER BY CASE WHEN ((t0.c0)<<(t0.c0)) THEN (NOT (t0.c0)) WHEN ((((((((((NULL)OR('1758002676')))AND(0Xfffffffff766a238)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END DESC, ((CAST(t0.c0 AS BLOB))==(((t0.c0)-(t0.c0))));
SELECT * FROM t0 WHERE (CAST((t0.c0 IN (x'd304')) AS INTEGER)) ORDER BY CAST(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS BLOB)  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN 0.45677404576749947 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ((t0.c0 IN (t0.c0, t0.c0))) AND (CAST(t0.c0 AS INTEGER))) ASC  NULLS FIRST, (((NOT (t0.c0)))!=(CAST(t0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CAST((t0.c0 IN (x'd304')) AS INTEGER)) ORDER BY ((0.8037475193878383)GLOB(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, (((((t0.c0)>=(t0.c0)), (- (t0.c0)), t0.c0 COLLATE BINARY, -1781072287))=(((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((x'18', t0.c0))), t0.c0 COLLATE RTRIM, NULL, t0.c0)))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((0.8037475193878383)GLOB(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, (((((t0.c0)>=(t0.c0)), (- (t0.c0)), t0.c0 COLLATE BINARY, 0xffffffff95d6fe61))==(((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((x'18', t0.c0))), t0.c0 COLLATE RTRIM, NULL, t0.c0)))  NULLS LAST LIMIT 0;
SELECT * FROM t0 WHERE (CAST((t0.c0 IN (x'd304')) AS INTEGER)) ORDER BY CAST(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS BLOB)  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN 0.45677404576749947 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ((t0.c0 IN (t0.c0, t0.c0))) AND (CAST(t0.c0 AS INTEGER))) ASC  NULLS FIRST, (((NOT (t0.c0)))!=(CAST(t0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CAST((t0.c0 IN (x'd304')) AS INTEGER)) ORDER BY ((0.8037475193878383)GLOB(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, (((((t0.c0)>=(t0.c0)), (- (t0.c0)), t0.c0 COLLATE BINARY, -1781072287))=(((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((x'18', t0.c0))), t0.c0 COLLATE RTRIM, NULL, t0.c0)))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((0.8037475193878383)GLOB(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, (((((t0.c0)>=(t0.c0)), (- (t0.c0)), t0.c0 COLLATE BINARY, 0xffffffff95d6fe61))==(((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((x'18', t0.c0))), t0.c0 COLLATE RTRIM, NULL, t0.c0)))  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (HEX(DISTINCT (((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (HEX(DISTINCT (((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0))))) ORDER BY CAST(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS INTEGER), (((x'' IN ())) BETWEEN (CAST(t0.c0 AS REAL)) AND ((~ (t0.c0))))  NULLS LAST;
SELECT * FROM t0 WHERE (NULL);
SELECT * FROM t0 WHERE (NULL) ORDER BY ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0)))AND(CAST(t0.c0 AS REAL))))AND(CAST(t0.c0 AS TEXT)))  NULLS LAST, ((t0.c0) ISNULL) ASC  NULLS LAST LIMIT 0x1;
SELECT * FROM t0 WHERE (NULL);
SELECT * FROM t0 WHERE (NULL) ORDER BY ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0)))AND(CAST(t0.c0 AS REAL))))AND(CAST(t0.c0 AS TEXT)))  NULLS LAST, ((t0.c0) ISNULL) ASC  NULLS LAST LIMIT 0x1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CASE CASE t0.c0  WHEN x'c9' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)|(t0.c0)) WHEN ((t0.c0)||(t0.c0)) THEN (t0.c0 IN ()) WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)OR(t0.c0)) ELSE 'Xv' END);
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CASE CASE t0.c0  WHEN x'c9' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)|(t0.c0)) WHEN ((t0.c0)||(t0.c0)) THEN (t0.c0 IN ()) WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)OR(t0.c0)) ELSE 'Xv' END) ORDER BY '-709828426' ASC, -0.0 DESC LIMIT 0 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((- (((t0.c0) NOT NULL)))) ORDER BY '-709828426' ASC, -0.0 DESC LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0)OR(t0.c0)) COLLATE RTRIM  NULLS FIRST, ((((CAST(t0.c0 AS NUMERIC))OR(t0.c0 COLLATE NOCASE)))AND((t0.c0 IN (t0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND(((((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))|(((t0.c0) IS FALSE)))))) ORDER BY ((t0.c0)OR(t0.c0)) COLLATE RTRIM  NULLS FIRST, ((((CAST(t0.c0 AS NUMERIC))OR(t0.c0 COLLATE NOCASE)))AND((t0.c0 IN (t0.c0)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0)OR(t0.c0)) COLLATE RTRIM  NULLS FIRST, ((((CAST(t0.c0 AS NUMERIC))OR(t0.c0 COLLATE NOCASE)))AND((t0.c0 IN (t0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND(((((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))|(((t0.c0) IS FALSE)))))) ORDER BY ((t0.c0)OR(t0.c0)) COLLATE RTRIM  NULLS FIRST, ((((CAST(t0.c0 AS NUMERIC))OR(t0.c0 COLLATE NOCASE)))AND((t0.c0 IN (t0.c0)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CAST(CAST(t0.c0 AS TEXT) AS TEXT) DESC;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CAST(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN (((t0.c0, ''))<=((t0.c0, t0.c0))) ELSE ((t0.c0) ISNULL) END ASC  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)&(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM)=(CAST(t0.c0 AS INTEGER)))) ORDER BY CAST(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN (((t0.c0, ''))<=((t0.c0, t0.c0))) ELSE ((t0.c0) ISNULL) END ASC  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)&(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CAST(CAST(t0.c0 AS TEXT) AS TEXT) DESC;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CAST(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN (((t0.c0, ''))<=((t0.c0, t0.c0))) ELSE ((t0.c0) ISNULL) END ASC  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)&(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM)=(CAST(t0.c0 AS INTEGER)))) ORDER BY CAST(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN (((t0.c0, ''))<=((t0.c0, t0.c0))) ELSE ((t0.c0) ISNULL) END ASC  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)&(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY CAST(CAST(t0.c0 AS TEXT) AS TEXT) DESC  NULLS LAST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE);
SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY CAST(CAST(t0.c0 AS TEXT) AS TEXT) DESC  NULLS LAST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) LIMIT 2;
SELECT * FROM t0 WHERE (LOWER(CAST(t0.c0 AS INTEGER))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (((t0.c0)AND(t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC, t0.c0  NULLS LAST;
SELECT ALL * FROM t0 WHERE (LOWER(CAST(t0.c0 AS INTEGER))) ORDER BY CASE WHEN t0.c0 THEN ((t0.c0)IS(t0.c0)) END ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (LOWER(CAST(t0.c0 AS INTEGER))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (((t0.c0)AND(t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC, t0.c0  NULLS LAST;
SELECT ALL * FROM t0 WHERE (LOWER(CAST(t0.c0 AS INTEGER))) ORDER BY CASE WHEN t0.c0 THEN ((t0.c0)IS(t0.c0)) END ASC  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((QUOTE(t0.c0), (t0.c0 IN ()), ((((((((NULL)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)), (t0.c0 IN (t0.c0)))) AND (((+ (NULL)), CASE t0.c0  WHEN 0.6466094388044258 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE BINARY, ((x'') NOTNULL)))) DESC  NULLS FIRST, ((((((((t0.c0) NOT NULL))AND((- (t0.c0)))))AND(0.09078726102654999)))AND((('241234946') ISNULL))) ASC  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((QUOTE(t0.c0), (t0.c0 IN ()), ((((((((NULL)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)), (t0.c0 IN (t0.c0)))) AND (((+ (NULL)), CASE t0.c0  WHEN 0.6466094388044258 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE BINARY, ((x'') NOTNULL)))) DESC  NULLS FIRST, ((((((((t0.c0) NOT NULL))AND((- (t0.c0)))))AND(0.09078726102654999)))AND((('241234946') ISNULL))) ASC  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) DESC  NULLS LAST LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS('418720866')));
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS('418720866'))) ORDER BY (t0.c0 IN (((((((((NULL)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), ((t0.c0) NOTNULL))), t0.c0 ASC  NULLS FIRST, ((- (t0.c0)) IN ())  NULLS FIRST INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (x'') ORDER BY (t0.c0 IN (((((((((NULL)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), ((t0.c0) NOTNULL))), t0.c0 ASC  NULLS FIRST, ((- (t0.c0)) IN ())  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS REAL));
SELECT MAX(t0.c0) FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS REAL)) ORDER BY ((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(0xffffffff82072ab9)))OR(t0.c0)))))OR(((t0.c0)/(t0.c0)))) ASC  NULLS LAST, ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(HEX(DISTINCT t0.c0))))OR(t0.c0)))OR((~ (t0.c0))))  NULLS FIRST, (((t0.c0)GLOB(0x16a7714c)) IN (((t0.c0)>>(t0.c0)))) ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (json_valid(NULL)) ORDER BY ((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(-2113459527)))OR(t0.c0)))))OR(((t0.c0)/(t0.c0)))) ASC  NULLS LAST, ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(HEX(DISTINCT t0.c0))))OR(t0.c0)))OR((~ (t0.c0))))  NULLS FIRST, (((t0.c0)GLOB(0X16a7714c)) IN (((t0.c0)>>(t0.c0)))) ASC  NULLS LAST LIMIT 0x2;
SELECT * FROM t0 WHERE (((((t0.c0)>(t0.c0)))<=(0.6371497071256468))) ORDER BY TRIM(t0.c0 COLLATE BINARY) ASC  NULLS FIRST, ((t0.c0)<<(TRIM(t0.c0))) DESC, CAST(t0.c0 AS TEXT) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)>(t0.c0)))<=(0.6371497071256468))) ORDER BY (((0.4764503486429903, t0.c0 COLLATE NOCASE, x'e8fb'))==((((t0.c0)-(t0.c0)), (0.0687080751535285 IN ()), t0.c0))) ASC, (t0.c0 IN ((((t0.c0))==((t0.c0))))) DESC  NULLS LAST LIMIT 0x1;
SELECT * FROM t0 WHERE (((((t0.c0)>(t0.c0)))<=(0.6371497071256468))) ORDER BY TRIM(t0.c0 COLLATE BINARY) ASC  NULLS FIRST, ((t0.c0)<<(TRIM(t0.c0))) DESC, CAST(t0.c0 AS TEXT) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)>(t0.c0)))<=(0.6371497071256468))) ORDER BY (((0.4764503486429903, t0.c0 COLLATE NOCASE, x'e8fb'))==((((t0.c0)-(t0.c0)), (0.0687080751535285 IN ()), t0.c0))) ASC, (t0.c0 IN ((((t0.c0))==((t0.c0))))) DESC  NULLS LAST LIMIT 0x1;
SELECT * FROM t0 WHERE (LIKELIHOOD(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CAST((((t0.c0))>=((t0.c0))) AS INTEGER)  NULLS FIRST;
SELECT * FROM t0 WHERE (LIKELIHOOD(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CAST((((t0.c0))>=((t0.c0))) AS INTEGER)  NULLS FIRST INTERSECT SELECT * FROM t0 NOT INDEXED WHERE ((- ((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, 0.4988729017372606)))))) ORDER BY CAST((((t0.c0))>=((t0.c0))) AS INTEGER)  NULLS FIRST;
SELECT * FROM t0 WHERE (LIKELIHOOD(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CAST((((t0.c0))>=((t0.c0))) AS INTEGER)  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE RTRIM) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (COALESCE(t0.c0, t0.c0, t0.c0, t0.c0))), CAST(CAST(t0.c0 AS INTEGER) AS TEXT);
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) IS FALSE) COLLATE RTRIM)AND(CASE (~ (NULL))  WHEN CAST(t0.c0 AS TEXT) THEN t0.c0 END))) ORDER BY ((((t0.c0) ISNULL)) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0)IS(t0.c0))))  NULLS LAST, ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR('773064094')))AND(t0.c0)))OR(t0.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ('\'))  NULLS FIRST LIMIT 0x0;
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE RTRIM) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (COALESCE(t0.c0, t0.c0, t0.c0, t0.c0))), CAST(CAST(t0.c0 AS INTEGER) AS TEXT);
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) IS FALSE) COLLATE RTRIM)AND(CASE (~ (NULL))  WHEN CAST(t0.c0 AS TEXT) THEN t0.c0 END))) ORDER BY ((((t0.c0) ISNULL)) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0)IS(t0.c0))))  NULLS LAST, ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR('773064094')))AND(t0.c0)))OR(t0.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ('\'))  NULLS FIRST LIMIT 0x0;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY CAST(0.8423403644711975 AS TEXT) COLLATE RTRIM DESC  NULLS FIRST, (~ ((t0.c0 IN ())));
SELECT ALL * FROM t0 WHERE (((t0.c0)AND(CAST(((t0.c0) ISNULL) AS BLOB)))) ORDER BY CAST(0.8423403644711975 AS TEXT) COLLATE RTRIM DESC  NULLS FIRST, (~ ((t0.c0 IN ()))) LIMIT 1;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY CAST(0.8423403644711975 AS TEXT) COLLATE RTRIM DESC  NULLS FIRST, (~ ((t0.c0 IN ())));
SELECT ALL * FROM t0 WHERE (((t0.c0)AND(CAST(((t0.c0) ISNULL) AS BLOB)))) ORDER BY CAST(0.8423403644711975 AS TEXT) COLLATE RTRIM DESC  NULLS FIRST, (~ ((t0.c0 IN ()))) LIMIT 1;
SELECT MIN(t0.c0) FROM t0 WHERE ((((((((((((t0.c0, t0.c0, t0.c0, 0.24754591595667208)) BETWEEN ((x'3e', x'fc332f', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))OR(STRFTIME(t0.c0, t0.c0, '/', t0.c0))))AND(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0) IS FALSE))))OR(t0.c0))) ORDER BY ((CAST(t0.c0 AS REAL))/((((t0.c0))<=((t0.c0))))) DESC  NULLS LAST, ((((((t0.c0 COLLATE NOCASE)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(CASE t0.c0  WHEN 'zHcn*' THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0 COLLATE NOCASE)) ASC;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((((((((((t0.c0, t0.c0, t0.c0, 0.24754591595667208)) BETWEEN ((x'3e', x'fc332f', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))OR(STRFTIME(t0.c0, t0.c0, '/', t0.c0))))AND(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0) IS FALSE))))OR(t0.c0)))AND(CAST(((x'')*(t0.c0)) AS BLOB)))) ORDER BY ((CAST(t0.c0 AS REAL))/((((t0.c0))<=((t0.c0))))) DESC  NULLS LAST, ((((((t0.c0 COLLATE NOCASE)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(CASE t0.c0  WHEN 'zHcn*' THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0 COLLATE NOCASE)) ASC INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((t0.c0)AND(t0.c0)) COLLATE NOCASE) ORDER BY ((CAST(t0.c0 AS REAL))/((((t0.c0))<=((t0.c0))))) DESC  NULLS LAST, ((((((t0.c0 COLLATE NOCASE)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(CASE t0.c0  WHEN 'zHcn*' THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM t0 WHERE ((((~ (t0.c0)))LIKE(json_object('', x'4a1f', t0.c0)))) ORDER BY CASE ((t0.c0)<=(t0.c0))  WHEN t0.c0 THEN ((t0.c0) ISNULL) WHEN (~ (NULL)) THEN (('') NOT NULL) WHEN t0.c0 COLLATE BINARY THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((x'') NOTNULL) THEN t0.c0 ELSE UNLIKELY(t0.c0) END DESC, ((0.2489019158786313) NOTNULL) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((~ (t0.c0)))LIKE(json_object('', x'4a1f', t0.c0)))) ORDER BY CASE ((t0.c0)<=(t0.c0))  WHEN t0.c0 THEN ((t0.c0) ISNULL) WHEN (~ (NULL)) THEN (('') NOT NULL) WHEN t0.c0 COLLATE BINARY THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((x'') NOTNULL) THEN t0.c0 ELSE UNLIKELY(t0.c0) END DESC, ((0.2489019158786313) NOTNULL) ASC  NULLS LAST LIMIT 0X3;
SELECT * FROM t0 WHERE (((((((CAST(t0.c0 AS NUMERIC))AND(((0Xffffffffe952d138) IS FALSE))))OR(((((t0.c0)OR(t0.c0)))AND(0.19702528538792552)))))OR(CAST(t0.c0 AS TEXT)))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((((CAST(t0.c0 AS NUMERIC))AND(((0Xffffffffe952d138) IS FALSE))))OR(((((t0.c0)OR(t0.c0)))AND(0.19702528538792552)))))OR(CAST(t0.c0 AS TEXT)))) ORDER BY ((t0.c0 COLLATE RTRIM) BETWEEN (((((((t0.c0)AND(t0.c0)))AND(x'5c')))AND(t0.c0))) AND (t0.c0 COLLATE RTRIM)), 0.6820002973199659 ASC, t0.c0 DESC  NULLS LAST, ((((((((((NULL)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND((t0.c0 IN ()))))OR((NOT (t0.c0)))) DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE RTRIM, ((t0.c0) NOTNULL), LOWER(DISTINCT '-503235320')))==(((NOT (t0.c0)), t0.c0 COLLATE BINARY, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (('.')%(NULL)))))) ORDER BY ((t0.c0 COLLATE RTRIM) BETWEEN (((((((t0.c0)AND(t0.c0)))AND(x'5c')))AND(t0.c0))) AND (t0.c0 COLLATE RTRIM)), 0.6820002973199659 ASC, t0.c0 DESC  NULLS LAST, ((((((((((NULL)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND((t0.c0 IN ()))))OR((NOT (t0.c0)))) DESC;
SELECT * FROM t0 WHERE (((((((CAST(t0.c0 AS NUMERIC))AND(((0Xffffffffe952d138) IS FALSE))))OR(((((t0.c0)OR(t0.c0)))AND(0.19702528538792552)))))OR(CAST(t0.c0 AS TEXT)))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((((CAST(t0.c0 AS NUMERIC))AND(((0Xffffffffe952d138) IS FALSE))))OR(((((t0.c0)OR(t0.c0)))AND(0.19702528538792552)))))OR(CAST(t0.c0 AS TEXT)))) ORDER BY ((t0.c0 COLLATE RTRIM) BETWEEN (((((((t0.c0)AND(t0.c0)))AND(x'5c')))AND(t0.c0))) AND (t0.c0 COLLATE RTRIM)), 0.6820002973199659 ASC, t0.c0 DESC  NULLS LAST, ((((((((((NULL)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND((t0.c0 IN ()))))OR((NOT (t0.c0)))) DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE RTRIM, ((t0.c0) NOTNULL), LOWER(DISTINCT '-503235320')))==(((NOT (t0.c0)), t0.c0 COLLATE BINARY, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (('.')%(NULL)))))) ORDER BY ((t0.c0 COLLATE RTRIM) BETWEEN (((((((t0.c0)AND(t0.c0)))AND(x'5c')))AND(t0.c0))) AND (t0.c0 COLLATE RTRIM)), 0.6820002973199659 ASC, t0.c0 DESC  NULLS LAST, ((((((((((NULL)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND((t0.c0 IN ()))))OR((NOT (t0.c0)))) DESC;
SELECT MAX(t0.c0) FROM t0 WHERE (json_array_length((t0.c0 IN (t0.c0)))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT) DESC  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (json_array_length((t0.c0 IN (t0.c0)))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT) DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0 NOT INDEXED WHERE ((((CASE WHEN t0.c0 THEN t0.c0 END, t0.c0))==((HEX(t0.c0), CAST(t0.c0 AS NUMERIC)))));
SELECT * FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 END, t0.c0))==((HEX(t0.c0), CAST(t0.c0 AS NUMERIC))))) ORDER BY ((CASE t0.c0  WHEN '2066263624' THEN x'65' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE) ASC  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (((((x'')>>('ê£ë ''y)NT84'))) BETWEEN (t0.c0 COLLATE NOCASE) AND (t0.c0 COLLATE BINARY))) ORDER BY ((CASE t0.c0  WHEN '2066263624' THEN x'65' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE) ASC  NULLS LAST;
SELECT ALL * FROM t0 NOT INDEXED WHERE ((((CASE WHEN t0.c0 THEN t0.c0 END, t0.c0))==((HEX(t0.c0), CAST(t0.c0 AS NUMERIC)))));
SELECT * FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 END, t0.c0))==((HEX(t0.c0), CAST(t0.c0 AS NUMERIC))))) ORDER BY ((CASE t0.c0  WHEN '2066263624' THEN x'65' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE) ASC  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (((((x'')>>('ê£ë ''y)NT84'))) BETWEEN (t0.c0 COLLATE NOCASE) AND (t0.c0 COLLATE BINARY))) ORDER BY ((CASE t0.c0  WHEN '2066263624' THEN x'65' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((1.977846067E9) NOT NULL));
SELECT * FROM t0 WHERE (((1.977846067E9) NOT NULL)) LIMIT 0;
SELECT * FROM t0 WHERE (((1.977846067E9) NOT NULL));
SELECT * FROM t0 WHERE (((1.977846067E9) NOT NULL)) LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE '-955189488'  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) WHEN (- (t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN (t0.c0 IN (t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE t0.c0 COLLATE RTRIM END) ORDER BY ((((HEX(t0.c0))AND('vá§*' COLLATE BINARY)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CASE '-955189488'  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) WHEN (- (t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN (t0.c0 IN (t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE t0.c0 COLLATE RTRIM END)AND(CASE WHEN ((((((((t0.c0)OR('')))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN (+ (t0.c0)) THEN x'7f' END))) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)IS(t0.c0)), ((t0.c0) ISNULL))) AND ((CAST(t0.c0 AS NUMERIC), (((t0.c0, t0.c0))<((t0.c0, '-1068271654'))))))  NULLS LAST, CASE ((NULL) BETWEEN (t0.c0) AND (t0.c0))  WHEN ((('I7f', t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0, t0.c0))) THEN t0.c0 WHEN ((t0.c0)AND(t0.c0)) THEN t0.c0 WHEN ((t0.c0)%(NULL)) THEN t0.c0 COLLATE NOCASE WHEN 'r,' THEN ((t0.c0)LIKE(t0.c0)) WHEN ((t0.c0) IS TRUE) THEN 'ç®º' WHEN ((((t0.c0)AND(t0.c0)))AND('885798053')) THEN ((t0.c0) NOT NULL) WHEN NULL THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((TRIM(DISTINCT t0.c0, t0.c0))%((t0.c0 IN ())))) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)IS(t0.c0)), ((t0.c0) ISNULL))) AND ((CAST(t0.c0 AS NUMERIC), (((t0.c0, t0.c0))<((t0.c0, '-1068271654'))))))  NULLS LAST, CASE ((NULL) BETWEEN (t0.c0) AND (t0.c0))  WHEN ((('I7f', t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0, t0.c0))) THEN t0.c0 WHEN ((t0.c0)AND(t0.c0)) THEN t0.c0 WHEN ((t0.c0)%(NULL)) THEN t0.c0 COLLATE NOCASE WHEN 'r,' THEN ((t0.c0)LIKE(t0.c0)) WHEN ((t0.c0) IS TRUE) THEN 'ç®º' WHEN ((((t0.c0)AND(t0.c0)))AND('885798053')) THEN ((t0.c0) NOT NULL) WHEN NULL THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END  NULLS LAST LIMIT 0;
SELECT * FROM t0 WHERE ((~ (t0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE ((~ (t0.c0)) COLLATE RTRIM) INTERSECT SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)*(t0.c0)));
SELECT * FROM t0 WHERE ((~ (t0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE ((~ (t0.c0)) COLLATE RTRIM) INTERSECT SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)*(t0.c0)));
SELECT * FROM t0 WHERE ((SQLITE_SOURCE_ID() IN (x'e249607f')));
SELECT * FROM t0 WHERE ((SQLITE_SOURCE_ID() IN (x'e249607f'))) ORDER BY x'2d' DESC, ((((((t0.c0, t0.c0))!=((t0.c0, ''))), 0.7703181411053067, t0.c0))<=((LIKELY(t0.c0), NULL, ((-981559411) ISNULL)))) LIMIT 0X4;
SELECT * FROM t0 WHERE ((SQLITE_SOURCE_ID() IN (x'e249607f')));
SELECT * FROM t0 WHERE ((SQLITE_SOURCE_ID() IN (x'e249607f'))) ORDER BY x'2d' DESC, ((((((t0.c0, t0.c0))!=((t0.c0, ''))), 0.7703181411053067, t0.c0))<=((LIKELY(t0.c0), NULL, ((-981559411) ISNULL)))) LIMIT 0X4;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) NOTNULL))IS NOT(((x'ba') BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ABS(((t0.c0) NOTNULL)) DESC;
SELECT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) NOTNULL))IS NOT(((x'ba') BETWEEN (t0.c0) AND (t0.c0)))))AND(CAST(t0.c0 AS BLOB) COLLATE NOCASE))) ORDER BY t0.c0 COLLATE RTRIM COLLATE NOCASE  NULLS FIRST, (t0.c0 COLLATE NOCASE IN ()) ASC, ((((t0.c0)>(t0.c0)))==(CAST(t0.c0 AS BLOB)))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0 NOT INDEXED WHERE (((((((((t0.c0)||(t0.c0)))OR((- (t0.c0)))))OR(t0.c0 COLLATE RTRIM)))OR((((t0.c0, t0.c0))>((t0.c0, t0.c0))))));
SELECT * FROM t0 WHERE (((((((((((t0.c0)||(t0.c0)))OR((- (t0.c0)))))OR(t0.c0 COLLATE RTRIM)))OR((((t0.c0, t0.c0))>((t0.c0, t0.c0))))))AND(((((t0.c0)|(t0.c0)))>>(((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(x'')))OR(t0.c0))))))) INTERSECT SELECT * FROM t0 WHERE ((- (CAST(t0.c0 AS REAL))));
SELECT ALL * FROM t0 NOT INDEXED WHERE (((((((((t0.c0)||(t0.c0)))OR((- (t0.c0)))))OR(t0.c0 COLLATE RTRIM)))OR((((t0.c0, t0.c0))>((t0.c0, t0.c0))))));
SELECT * FROM t0 WHERE (((((((((((t0.c0)||(t0.c0)))OR((- (t0.c0)))))OR(t0.c0 COLLATE RTRIM)))OR((((t0.c0, t0.c0))>((t0.c0, t0.c0))))))AND(((((t0.c0)|(t0.c0)))>>(((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(x'')))OR(t0.c0))))))) INTERSECT SELECT * FROM t0 WHERE ((- (CAST(t0.c0 AS REAL))));
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE RTRIM) ORDER BY (((t0.c0))>=((((t0.c0) ISNULL)))) ASC  NULLS FIRST, (NOT (t0.c0 COLLATE RTRIM)) DESC, ((((t0.c0 IN ()), (NULL IN ()), CASE WHEN '188415772' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-9509221' THEN t0.c0 END))>=((t0.c0 COLLATE BINARY, SQLITE_VERSION(), ((0.16170205565042073)GLOB(t0.c0)))))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE RTRIM) ORDER BY (+ (((t0.c0)||(t0.c0)))) DESC  NULLS LAST, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (x'') AND (((t0.c0)/(t0.c0)))) ASC  NULLS LAST, 'ì7M2{' ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((x'acc4') NOT NULL)) ORDER BY (+ (((t0.c0)||(t0.c0)))) DESC  NULLS LAST, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (x'') AND (((t0.c0)/(t0.c0)))) ASC  NULLS LAST, 'ì7M2{' ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE RTRIM) ORDER BY (((t0.c0))>=((((t0.c0) ISNULL)))) ASC  NULLS FIRST, (NOT (t0.c0 COLLATE RTRIM)) DESC, ((((t0.c0 IN ()), (NULL IN ()), CASE WHEN '188415772' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-9509221' THEN t0.c0 END))>=((t0.c0 COLLATE BINARY, SQLITE_VERSION(), ((0.16170205565042073)GLOB(t0.c0)))))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE RTRIM) ORDER BY (+ (((t0.c0)||(t0.c0)))) DESC  NULLS LAST, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (x'') AND (((t0.c0)/(t0.c0)))) ASC  NULLS LAST, 'ì7M2{' ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((x'acc4') NOT NULL)) ORDER BY (+ (((t0.c0)||(t0.c0)))) DESC  NULLS LAST, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (x'') AND (((t0.c0)/(t0.c0)))) ASC  NULLS LAST, 'ì7M2{' ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE)>=(((t0.c0) IS TRUE)))) ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), CASE WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)&(t0.c0)) ELSE ((t0.c0)>(t0.c0)) END ASC;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)=(((t0.c0) IS TRUE))))AND((+ ((t0.c0 IN ())))))) ORDER BY (((t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((((t0.c0)*(t0.c0))))) ASC, t0.c0  NULLS FIRST, (((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)OR(t0.c0))));
SELECT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE)>=(((t0.c0) IS TRUE)))) ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), CASE WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)&(t0.c0)) ELSE ((t0.c0)>(t0.c0)) END ASC;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)=(((t0.c0) IS TRUE))))AND((+ ((t0.c0 IN ())))))) ORDER BY (((t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((((t0.c0)*(t0.c0))))) ASC, t0.c0  NULLS FIRST, (((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)OR(t0.c0))));
SELECT * FROM t0 WHERE (CHAR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND('-298618260')))AND(t0.c0)), (((t0.c0))<=((t0.c0)))));
SELECT * FROM t0 WHERE (CHAR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND('-298618260')))AND(t0.c0)), (((t0.c0))==((t0.c0))))) ORDER BY ((((CAST(t0.c0 AS REAL))OR(t0.c0)))AND(((t0.c0)!=(t0.c0)))) DESC  NULLS FIRST LIMIT 2;
SELECT * FROM t0 WHERE (CHAR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND('-298618260')))AND(t0.c0)), (((t0.c0))<=((t0.c0)))));
SELECT * FROM t0 WHERE (CHAR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND('-298618260')))AND(t0.c0)), (((t0.c0))==((t0.c0))))) ORDER BY ((((CAST(t0.c0 AS REAL))OR(t0.c0)))AND(((t0.c0)!=(t0.c0)))) DESC  NULLS FIRST LIMIT 2;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (LTRIM((((t0.c0, t0.c0))==((t0.c0, t0.c0))))) ORDER BY ((((t0.c0)/(0xffffffff9591c908))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND ((~ (t0.c0)))), t0.c0 DESC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (LTRIM((((t0.c0, t0.c0))=((t0.c0, t0.c0))))) ORDER BY ((((t0.c0)/(-1785607928))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND ((~ (t0.c0)))), t0.c0 DESC INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0)*(t0.c0)) IN ((- (t0.c0))))) ORDER BY ((((t0.c0)/(-1785607928))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND ((~ (t0.c0)))), t0.c0 DESC;
SELECT * FROM t0 WHERE (x'');
SELECT * FROM t0 WHERE (((x'')AND((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((~ (t0.c0)), ((t0.c0)<(t0.c0)), (((x'a3', t0.c0))<((t0.c0, t0.c0))))) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0)), ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(NULL)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))))) ORDER BY ((((((((((t0.c0)AND(t0.c0)))AND(0.7703290953838486)))AND(t0.c0)))OR('927928369')))+(((t0.c0)|(t0.c0)))) ASC  NULLS FIRST, ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOT NULL) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (x'');
SELECT * FROM t0 WHERE (((x'')AND((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((~ (t0.c0)), ((t0.c0)<(t0.c0)), (((x'a3', t0.c0))<((t0.c0, t0.c0))))) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0)), ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(NULL)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))))) ORDER BY ((((((((((t0.c0)AND(t0.c0)))AND(0.7703290953838486)))AND(t0.c0)))OR('927928369')))+(((t0.c0)|(t0.c0)))) ASC  NULLS FIRST, ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOT NULL) DESC  NULLS FIRST LIMIT 0;
SELECT MIN(t0.c0) FROM t0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN ((t0.c0) ISNULL) THEN ((t0.c0)AND(t0.c0)) WHEN (((t0.c0))<>((t0.c0))) THEN t0.c0 COLLATE NOCASE WHEN CASE WHEN t0.c0 THEN x'' END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)/(NULL)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN NULLIF(DISTINCT t0.c0, t0.c0) END);
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CASE CAST(t0.c0 AS BLOB)  WHEN ((t0.c0) ISNULL) THEN ((t0.c0)AND(t0.c0)) WHEN (((t0.c0))>((t0.c0))) THEN t0.c0 COLLATE NOCASE WHEN CASE WHEN t0.c0 THEN x'' END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)/(NULL)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN NULLIF(DISTINCT t0.c0, t0.c0) END)AND(((NULLIF(t0.c0, t0.c0))<>((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))))) LIMIT 0x4;
SELECT * FROM t0 WHERE ((NOT ('-8093230'))) ORDER BY (((((333460181) BETWEEN (t0.c0) AND (t0.c0))))>((((t0.c0)|(t0.c0)))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((NOT ('-8093230'))) ORDER BY (- (t0.c0 COLLATE BINARY)) LIMIT 3;
SELECT * FROM t0 WHERE ((NOT ('-8093230'))) ORDER BY (((((333460181) BETWEEN (t0.c0) AND (t0.c0))))>((((t0.c0)|(t0.c0)))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((NOT ('-8093230'))) ORDER BY (- (t0.c0 COLLATE BINARY)) LIMIT 3;
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0) NOT NULL)))) ORDER BY (((t0.c0 IN (t0.c0))) BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c0)>(t0.c0))))  NULLS FIRST, t0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0) NOT NULL)))) ORDER BY (- ((((t0.c0, t0.c0))<((t0.c0, t0.c0))))), ((-147069138)|(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))OR(t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY (- ((((t0.c0, t0.c0))<((t0.c0, t0.c0))))), ((0Xfffffffff73be72e)|(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0) NOT NULL)))) ORDER BY (((t0.c0 IN (t0.c0))) BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c0)>(t0.c0))))  NULLS FIRST, t0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0) NOT NULL)))) ORDER BY (- ((((t0.c0, t0.c0))<((t0.c0, t0.c0))))), ((-147069138)|(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))OR(t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY (- ((((t0.c0, t0.c0))<((t0.c0, t0.c0))))), ((0Xfffffffff73be72e)|(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) LIMIT 0X0;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE BINARY);
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE BINARY)AND(((((t0.c0)>(t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND (LIKELIHOOD(DISTINCT t0.c0, t0.c0)))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE BINARY);
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE BINARY)AND(((((t0.c0)>(t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND (LIKELIHOOD(DISTINCT t0.c0, t0.c0)))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 NOT INDEXED WHERE (CAST(t0.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE BINARY) INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN (((((t0.c0))>=((39544255))), (t0.c0 IN (t0.c0, t0.c0)))) AND ((TRIM(t0.c0, NULL), (+ (t0.c0))))));
SELECT * FROM t0 NOT INDEXED WHERE (CAST(t0.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE BINARY) INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN (((((t0.c0))>=((39544255))), (t0.c0 IN (t0.c0, t0.c0)))) AND ((TRIM(t0.c0, NULL), (+ (t0.c0))))));
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0)))) AND (((((((((0Xfffffffffc62e021)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0)))) AND (((((((((0xfffffffffc62e021)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))AND(DATE(CAST(t0.c0 AS INTEGER), CASE t0.c0  WHEN t0.c0 THEN -0.0 ELSE t0.c0 END, ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))))) ORDER BY ((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) IN ((~ (t0.c0)), ((t0.c0)+(t0.c0)))), CAST(((t0.c0) NOTNULL) AS TEXT) ASC  NULLS LAST, (((((((t0.c0 IN ()))OR((~ ('*7gm')))))OR(t0.c0 COLLATE BINARY)))AND(CAST(t0.c0 AS TEXT))) DESC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, ((((t0.c0)OR('-1072703594')))AND(t0.c0)), json_object(t0.c0, t0.c0))) AND ((NULL, (+ (t0.c0)), (((t0.c0))<=((t0.c0))))))) ORDER BY ((NULL) BETWEEN (((0.29862939951498035) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) NOTNULL))) ASC;
SELECT MIN(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, ((((t0.c0)OR('-1072703594')))AND(t0.c0)), json_object(t0.c0, t0.c0))) AND ((NULL, (+ (t0.c0)), (((t0.c0))<=((t0.c0))))))) ORDER BY ((NULL) BETWEEN (((0.29862939951498035) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) NOTNULL))) ASC LIMIT 4;
SELECT * FROM t0 WHERE (CASE ((t0.c0)%(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0) IS FALSE) ELSE CAST(t0.c0 AS BLOB) END);
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0)%(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0) IS FALSE) ELSE CAST(t0.c0 AS BLOB) END);
SELECT * FROM t0 WHERE (CASE ((t0.c0)%(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0) IS FALSE) ELSE CAST(t0.c0 AS BLOB) END);
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0)%(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0) IS FALSE) ELSE CAST(t0.c0 AS BLOB) END);
SELECT * FROM t0 INDEXED BY i29 WHERE ((CAST(t0.c0 AS BLOB) IN (json_insert(t0.c0, t0.c0, t0.c0, t0.c0), x'e6'))) ORDER BY LOWER(DISTINCT x'1c')  NULLS LAST, (CAST(t0.c0 AS TEXT) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM t0 INDEXED BY i29 WHERE ((((CAST(t0.c0 AS BLOB) IN (json_insert(t0.c0, t0.c0, t0.c0, t0.c0), x'e6')))AND((((t0.c0) IS FALSE) IN ())))) ORDER BY LOWER(DISTINCT x'1c')  NULLS LAST, (CAST(t0.c0 AS TEXT) IN ()) DESC  NULLS FIRST LIMIT 3;
SELECT * FROM t0 INDEXED BY i29 WHERE ((CAST(t0.c0 AS BLOB) IN (json_insert(t0.c0, t0.c0, t0.c0, t0.c0), x'e6'))) ORDER BY LOWER(DISTINCT x'1c')  NULLS LAST, (CAST(t0.c0 AS TEXT) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ('?');
SELECT * FROM t0 WHERE ((('?')AND(CAST((((t0.c0))<=((t0.c0))) AS BLOB)))) INTERSECT SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM t0 WHERE ('?');
SELECT * FROM t0 WHERE ((('?')AND(CAST((((t0.c0))<=((t0.c0))) AS BLOB)))) INTERSECT SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN 0.5982825319173753 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL));
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN 0.5982825319173753 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL)) ORDER BY (((((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))AND(((x'') NOTNULL))))OR(x'1d')) ASC, x'22'  NULLS LAST, CAST(((t0.c0)IS(t0.c0)) AS TEXT) DESC LIMIT 0x2;
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN 0.5982825319173753 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL));
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN 0.5982825319173753 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL)) ORDER BY (((((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))AND(((x'') NOTNULL))))OR(x'1d')) ASC, x'22'  NULLS LAST, CAST(((t0.c0)IS(t0.c0)) AS TEXT) DESC LIMIT 0x2;
SELECT ALL * FROM t0 WHERE ((NOT ((NOT (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((NOT ((NOT (t0.c0))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (x'd8')))/(CAST(t0.c0 AS REAL))) DESC, x'471edc21'  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(x'19')))OR(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (x'd8')))/(CAST(t0.c0 AS REAL))) DESC, x'471edc21'  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 WHERE ((NOT ((NOT (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((NOT ((NOT (t0.c0))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (x'd8')))/(CAST(t0.c0 AS REAL))) DESC, x'471edc21'  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(x'19')))OR(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (x'd8')))/(CAST(t0.c0 AS REAL))) DESC, x'471edc21'  NULLS LAST LIMIT 0;
SELECT MIN(t0.c0) FROM t0 WHERE (NULL) ORDER BY (((- (t0.c0))) NOTNULL) ASC;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (NULL) ORDER BY (t0.c0 COLLATE BINARY IN (((t0.c0)AND(t0.c0)))) DESC  NULLS FIRST, (- (((x'48') ISNULL))) DESC  NULLS FIRST LIMIT 2;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))>>('n'''))) ORDER BY t0.c0  NULLS FIRST, ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) IS TRUE) DESC;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))>>('n'''))) ORDER BY ((((((((t0.c0)%(t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN 'ë·T^' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(CAST(t0.c0 AS BLOB)))  NULLS LAST, CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN 0.26546282780279995 COLLATE NOCASE WHEN (+ (t0.c0)) THEN ((t0.c0) ISNULL) WHEN ((t0.c0) IS TRUE) THEN CAST(t0.c0 AS REAL) END ASC INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((UPPER(DISTINCT t0.c0)) NOTNULL)) ORDER BY ((((((((t0.c0)%(t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN 'ë·T^' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(CAST(t0.c0 AS BLOB)))  NULLS LAST, CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN 0.26546282780279995 COLLATE NOCASE WHEN (+ (t0.c0)) THEN ((t0.c0) ISNULL) WHEN ((t0.c0) IS TRUE) THEN CAST(t0.c0 AS REAL) END ASC;
SELECT * FROM t0 WHERE (((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) ORDER BY ((NULL)||(t0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM t0 WHERE (((((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY)AND((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))AND(((t0.c0)GLOB(t0.c0)))))OR(((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY ((NULL)||(t0.c0 COLLATE RTRIM))  NULLS LAST LIMIT 0X3 INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) NOT BETWEEN (NULL) AND ((t0.c0 IN ())))) ORDER BY ((NULL)||(t0.c0 COLLATE RTRIM))  NULLS LAST LIMIT 3;
SELECT * FROM t0 WHERE (((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) ORDER BY ((NULL)||(t0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM t0 WHERE (((((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY)AND((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))AND(((t0.c0)GLOB(t0.c0)))))OR(((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY ((NULL)||(t0.c0 COLLATE RTRIM))  NULLS LAST LIMIT 0X3 INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) NOT BETWEEN (NULL) AND ((t0.c0 IN ())))) ORDER BY ((NULL)||(t0.c0 COLLATE RTRIM))  NULLS LAST LIMIT 3;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))<(((t0.c0) IS TRUE)))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) IS FALSE))<(((t0.c0) IS TRUE))))AND(SQLITE_COMPILEOPTION_GET((- (t0.c0)))))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0)AND(t0.c0)))IS NOT(IFNULL(DISTINCT t0.c0, t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))IS NOT(IFNULL(DISTINCT t0.c0, t0.c0))))AND(UNLIKELY(DISTINCT LIKELIHOOD(DISTINCT t0.c0, t0.c0))))) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE RTRIM ASC  NULLS LAST, t0.c0 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE RTRIM ASC  NULLS LAST, t0.c0 ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c0)AND(t0.c0)))IS NOT(IFNULL(DISTINCT t0.c0, t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))IS NOT(IFNULL(DISTINCT t0.c0, t0.c0))))AND(UNLIKELY(DISTINCT LIKELIHOOD(DISTINCT t0.c0, t0.c0))))) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE RTRIM ASC  NULLS LAST, t0.c0 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE RTRIM ASC  NULLS LAST, t0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY LIKELIHOOD(DISTINCT ((t0.c0)|(t0.c0)), ((t0.c0)AND(0.8233471028574048)));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)AND(((((t0.c0)==(t0.c0)))<(((((t0.c0)AND(t0.c0)))OR(t0.c0))))))) ORDER BY ((((t0.c0)<>(t0.c0))) BETWEEN (x'a3f167' COLLATE RTRIM) AND (JULIANDAY(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))  NULLS LAST, (((0.6202104181332487) IS TRUE) IN ()), (((((((NOT (t0.c0)))OR((t0.c0 IN (t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR(((x'')||(t0.c0)))) LIMIT 0X1;
SELECT MAX(t0.c0) FROM t0 WHERE (NULL);
SELECT ALL MAX(t0.c0) FROM t0 WHERE (NULL) LIMIT 1 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (json_extract(((t0.c0)>=(t0.c0)), (t0.c0 IN ('1122980211')))) LIMIT 1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))+(CAST(t0.c0 AS REAL)))) ORDER BY ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0)IS(t0.c0))))>(('602539550', ((t0.c0) IS TRUE))))  NULLS FIRST, (0xffffffff87c76cab IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST, ((((t0.c0)==(t0.c0))) NOT BETWEEN (t0.c0) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))+(CAST(t0.c0 AS REAL))))AND(TRIM(CAST(t0.c0 AS BLOB), t0.c0)))) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ('1430672166'))) BETWEEN (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))) AND ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ('1430672166'))) BETWEEN (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))) AND ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) ORDER BY 0.8365446437449939 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY 0.8365446437449939;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ('1430672166'))) BETWEEN (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))) AND ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ('1430672166'))) BETWEEN (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))) AND ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) ORDER BY 0.8365446437449939 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY 0.8365446437449939;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((((t0.c0)LIKE(0Xffffffffc8649e35)), t0.c0 COLLATE RTRIM, CAST(t0.c0 AS NUMERIC)))<=(((((t0.c0, t0.c0))>=((t0.c0, t0.c0))), ((t0.c0) ISNULL), (((((('K0T9/T!')AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))) ORDER BY 0.6742111245354778  NULLS FIRST, ((CASE x'c5701d'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0)LIKE(-932929995)), t0.c0 COLLATE RTRIM, CAST(t0.c0 AS NUMERIC)))<=(((((t0.c0, t0.c0))=((t0.c0, t0.c0))), ((t0.c0) ISNULL), (((((('K0T9/T!')AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))) ORDER BY (~ (CAST(t0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (TRIM(0.42181945002714705) COLLATE BINARY) ORDER BY (~ (((t0.c0)*(t0.c0)))) ASC  NULLS LAST, ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))/(((t0.c0)*(t0.c0)))) ASC  NULLS FIRST, ((((t0.c0)AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(0xffffffff948d1108 COLLATE BINARY));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (TRIM(0.42181945002714705) COLLATE BINARY) ORDER BY (~ (((t0.c0)*(t0.c0)))) ASC  NULLS LAST, ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))/(((t0.c0)*(t0.c0)))) ASC  NULLS FIRST, ((((t0.c0)AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(0Xffffffff948d1108 COLLATE BINARY)) INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((NOT (((1.03428112E9) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (~ (((t0.c0)*(t0.c0)))) ASC  NULLS LAST, ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))/(((t0.c0)*(t0.c0)))) ASC  NULLS FIRST, ((((t0.c0)AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(0Xffffffff948d1108 COLLATE BINARY));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)OR('J')))AND(t0.c0)) IN ((('')||(t0.c0)))));
SELECT * FROM t0 WHERE ((((((((t0.c0)OR('J')))AND(t0.c0)) IN ((('')||(t0.c0)))))AND(((((t0.c0)GLOB(t0.c0)))>=((('-786761672')<<(t0.c0))))))) LIMIT 0X1;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)OR('J')))AND(t0.c0)) IN ((('')||(t0.c0)))));
SELECT * FROM t0 WHERE ((((((((t0.c0)OR('J')))AND(t0.c0)) IN ((('')||(t0.c0)))))AND(((((t0.c0)GLOB(t0.c0)))>=((('-786761672')<<(t0.c0))))))) LIMIT 0X1;
SELECT MIN(t0.c0) FROM t0 WHERE ((~ (((t0.c0)|(t0.c0)))));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((~ (((t0.c0)|(t0.c0))))) ORDER BY (~ (t0.c0)) COLLATE RTRIM, (((((((((('L2')LIKE(0.04556938344711847)))AND((((t0.c0, t0.c0, 0.5570677945486069))<>((t0.c0, NULL, t0.c0))))))OR(((t0.c0)<=(t0.c0)))))OR((t0.c0 IN (t0.c0)))))AND((('634082934')>(t0.c0)))), CAST(CASE t0.c0  WHEN 1633917059 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT) ASC LIMIT 1;
SELECT ALL MAX(t0.c0) FROM t0 NOT INDEXED WHERE (CASE t0.c0 COLLATE BINARY  WHEN x'' THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 THEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND('1228023982')) WHEN TYPEOF(DISTINCT t0.c0) THEN UPPER(DISTINCT t0.c0) WHEN (~ (t0.c0)) THEN (+ (t0.c0)) END) ORDER BY ((NULL COLLATE BINARY)IS((((x'bd'))>((t0.c0))))) ASC  NULLS FIRST, (NOT (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((CASE t0.c0 COLLATE BINARY  WHEN x'' THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 THEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND('1228023982')) WHEN TYPEOF(DISTINCT t0.c0) THEN UPPER(DISTINCT t0.c0) WHEN (~ (t0.c0)) THEN (+ (t0.c0)) END)AND((t0.c0 COLLATE NOCASE IN (((t0.c0) IS TRUE), ((((((((t0.c0)OR('!!')))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))))) ORDER BY GLOB(((t0.c0) NOT BETWEEN (' ') AND (t0.c0)), t0.c0 COLLATE BINARY) DESC, (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) LIMIT 0x0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(json_object(t0.c0, x'ce') AS INTEGER));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((CAST(json_object(t0.c0, x'ce') AS INTEGER))AND(t0.c0))) ORDER BY LOWER((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))  NULLS LAST, t0.c0  NULLS LAST LIMIT 0X0 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (LOWER(DISTINCT CAST(t0.c0 AS NUMERIC))) ORDER BY LOWER((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))  NULLS LAST, t0.c0  NULLS LAST LIMIT 0;
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN 'L-nowu' THEN t0.c0 WHEN t0.c0 THEN '1868336717' END)IS((+ (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((((CASE t0.c0  WHEN 'L-nowu' THEN t0.c0 WHEN t0.c0 THEN '1868336717' END)IS((+ (t0.c0)))))AND(COALESCE(DISTINCT t0.c0, (t0.c0 IN ()))))) ORDER BY CASE ((((t0.c0)AND(t0.c0)))OR(t0.c0))  WHEN (t0.c0 IN ()) THEN 0xf994b85 WHEN ((t0.c0)>>(t0.c0)) THEN (+ (t0.c0)) WHEN ((t0.c0)|(t0.c0)) THEN LIKELIHOOD(DISTINCT t0.c0, t0.c0) ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END, CASE t0.c0  WHEN ((((NULL)OR(t0.c0)))OR(t0.c0)) THEN (((t0.c0, NULL))=((t0.c0, t0.c0))) WHEN t0.c0 COLLATE BINARY THEN 0.30586154708661384 ELSE (+ (t0.c0)) END  NULLS LAST LIMIT 0x4;
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN 'L-nowu' THEN t0.c0 WHEN t0.c0 THEN '1868336717' END)IS((+ (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((((CASE t0.c0  WHEN 'L-nowu' THEN t0.c0 WHEN t0.c0 THEN '1868336717' END)IS((+ (t0.c0)))))AND(COALESCE(DISTINCT t0.c0, (t0.c0 IN ()))))) ORDER BY CASE ((((t0.c0)AND(t0.c0)))OR(t0.c0))  WHEN (t0.c0 IN ()) THEN 0xf994b85 WHEN ((t0.c0)>>(t0.c0)) THEN (+ (t0.c0)) WHEN ((t0.c0)|(t0.c0)) THEN LIKELIHOOD(DISTINCT t0.c0, t0.c0) ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END, CASE t0.c0  WHEN ((((NULL)OR(t0.c0)))OR(t0.c0)) THEN (((t0.c0, NULL))=((t0.c0, t0.c0))) WHEN t0.c0 COLLATE BINARY THEN 0.30586154708661384 ELSE (+ (t0.c0)) END  NULLS LAST LIMIT 0x4;
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<(CAST(t0.c0 AS BLOB))));
SELECT ALL * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<(CAST(t0.c0 AS BLOB))))AND(((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) BETWEEN (LIKE(t0.c0, t0.c0, 'o')) AND (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))));
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<(CAST(t0.c0 AS BLOB))));
SELECT ALL * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<(CAST(t0.c0 AS BLOB))))AND(((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) BETWEEN (LIKE(t0.c0, t0.c0, 'o')) AND (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))));
SELECT ALL COUNT(*) FROM t0 WHERE (JULIANDAY(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), rtreenode(t0.c0, t0.c0), (((NULL, t0.c0, '-891931245', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, NULL, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))) ORDER BY t0.c0, CASE ((t0.c0) ISNULL)  WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 END, t0.c0 DESC;
SELECT COUNT(*) FROM t0 WHERE (((JULIANDAY(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), rtreenode(t0.c0, t0.c0), (((NULL, t0.c0, '-891931245', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, NULL, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0)))))AND(((NOT (t0.c0)) IN (((t0.c0)%(t0.c0))))))) ORDER BY (~ ((~ ('-1152647810')))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((UNLIKELY(t0.c0) IN ()));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((UNLIKELY(t0.c0) IN ())) LIMIT 0x4;
SELECT ALL * FROM t0 WHERE ((('204747477' COLLATE NOCASE)==(t0.c0)));
SELECT DISTINCT * FROM t0 WHERE ((('204747477' COLLATE NOCASE)==(t0.c0))) LIMIT 2;
SELECT ALL * FROM t0 WHERE ((('204747477' COLLATE NOCASE)==(t0.c0)));
SELECT DISTINCT * FROM t0 WHERE ((('204747477' COLLATE NOCASE)==(t0.c0))) LIMIT 2;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE BINARY IN ())) ORDER BY CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) DESC, t0.c0  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((t0.c0 COLLATE BINARY IN ())) ORDER BY CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) DESC, t0.c0  NULLS LAST LIMIT 0x0;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE BINARY IN ())) ORDER BY CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) DESC, t0.c0  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((t0.c0 COLLATE BINARY IN ())) ORDER BY CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) DESC, t0.c0  NULLS LAST LIMIT 0x0;
SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'â¦~' THEN t0.c0 WHEN t0.c0 THEN -2.0981282E8 ELSE t0.c0 END) AND (UNLIKELY(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOTNULL)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'â¦~' THEN t0.c0 WHEN t0.c0 THEN -2.0981282E8 ELSE t0.c0 END) AND (UNLIKELY(t0.c0))))AND((((t0.c0)||(t0.c0)) IN ())))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((t0.c0 COLLATE BINARY IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)IS NOT(t0.c0)))));
SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'â¦~' THEN t0.c0 WHEN t0.c0 THEN -2.0981282E8 ELSE t0.c0 END) AND (UNLIKELY(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOTNULL)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'â¦~' THEN t0.c0 WHEN t0.c0 THEN -2.0981282E8 ELSE t0.c0 END) AND (UNLIKELY(t0.c0))))AND((((t0.c0)||(t0.c0)) IN ())))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((t0.c0 COLLATE BINARY IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)IS NOT(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 IN ('-322963109')) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ('-322963109')) COLLATE RTRIM)AND(rtreenode(t0.c0, CASE t0.c0  WHEN t0.c0 THEN '1714530559' WHEN t0.c0 THEN t0.c0 END)))) INTERSECT SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY (LIKE(t0.c0, t0.c0, '1') IN (((t0.c0)LIKE(t0.c0)))) ASC  NULLS LAST, (((t0.c0)+(t0.c0)) IN (CASE WHEN t0.c0 THEN t0.c0 END, COALESCE(DISTINCT t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, '0.26250284691374537'))) ASC  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c0)<(t0.c0)))) AND ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((NULL)AND(((((t0.c0)<>(t0.c0)))%(t0.c0))))) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST LIMIT 0X2 INTERSECT SELECT * FROM t0 WHERE ((~ (x''))) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY (LIKE(t0.c0, t0.c0, '1') IN (((t0.c0)LIKE(t0.c0)))) ASC  NULLS LAST, (((t0.c0)+(t0.c0)) IN (CASE WHEN t0.c0 THEN t0.c0 END, COALESCE(DISTINCT t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, '0.26250284691374537'))) ASC  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c0)<(t0.c0)))) AND ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((NULL)AND(((((t0.c0)<>(t0.c0)))%(t0.c0))))) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST LIMIT 0X2 INTERSECT SELECT * FROM t0 WHERE ((~ (x''))) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS NOT(load_extension(t0.c0))));
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS NOT(load_extension(t0.c0)))) ORDER BY ((((((t0.c0) NOT NULL))AND((~ (0x8702f57)))))OR(x'e5e6cd')) DESC, ((0.07102489752837082) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (0.8865237184536182))) AND ((t0.c0 IN ()))) LIMIT 2;
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS NOT(load_extension(t0.c0))));
SELECT ALL * FROM t0 WHERE (')8x' COLLATE BINARY);
SELECT * FROM t0 WHERE (((')8x' COLLATE BINARY)AND(CAST(t0.c0 COLLATE BINARY AS BLOB)))) ORDER BY ((((((t0.c0)<=(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(COALESCE(DISTINCT t0.c0, t0.c0, t0.c0))) ASC;
SELECT ALL * FROM t0 WHERE (')8x' COLLATE BINARY);
SELECT * FROM t0 WHERE (((')8x' COLLATE BINARY)AND(CAST(t0.c0 COLLATE BINARY AS BLOB)))) ORDER BY ((((((t0.c0)<=(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(COALESCE(DISTINCT t0.c0, t0.c0, t0.c0))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) NOTNULL));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((t0.c0) NOTNULL)) NOTNULL))AND(((((t0.c0)IS NOT(t0.c0))) BETWEEN (t0.c0) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CAST(t0.c0 AS NUMERIC)))) ORDER BY (((0Xffffffff84194198) ISNULL) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CAST(t0.c0 AS NUMERIC)))) ORDER BY (((-2078719592) ISNULL) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CAST(t0.c0 AS NUMERIC)))) ORDER BY (((0Xffffffff84194198) ISNULL) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((t0.c0, NULL, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE, QUOTE(t0.c0), ((0.3055269198467938)LIKE(t0.c0)))) AND (((t0.c0 IN (t0.c0)), CAST(t0.c0 AS BLOB), ((t0.c0) NOT NULL))))  NULLS LAST, (t0.c0 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((t0.c0, NULL, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE, QUOTE(t0.c0), ((0.3055269198467938)LIKE(t0.c0)))) AND (((t0.c0 IN (t0.c0)), CAST(t0.c0 AS BLOB), ((t0.c0) NOT NULL))))  NULLS LAST, (t0.c0 IN ()) COLLATE RTRIM  NULLS LAST LIMIT 2;
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((- (t0.c0))))) ORDER BY (((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))))AND(t0.c0 COLLATE BINARY)))OR(CASE t0.c0  WHEN t0.c0 THEN '-1939732175' ELSE x'' END)))AND((~ (t0.c0))))  NULLS LAST, -1.068271654E9 ASC;
SELECT DISTINCT COUNT(*) FROM t0 NOT INDEXED WHERE ((((+ ((- (t0.c0)))))AND(CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND('-1e500')) AS REAL)))) ORDER BY CAST(((t0.c0)GLOB(t0.c0)) AS REAL) DESC  NULLS FIRST, ((0.5475449145428536)GLOB(((((t0.c0)AND(t0.c0)))OR(t0.c0))))  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((x'e61b', t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE RTRIM) ORDER BY CAST(((t0.c0)GLOB(t0.c0)) AS REAL) DESC  NULLS FIRST, ((0.5475449145428536)GLOB(((((t0.c0)AND(t0.c0)))OR(t0.c0))))  NULLS LAST LIMIT 1;
SELECT * FROM t0 WHERE (CASE ((((t0.c0)AND(t0.c0)))AND(t0.c0))  WHEN 'n' THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)IS NOT(0x499e72eb)) THEN LIKE(t0.c0, t0.c0) END);
SELECT DISTINCT * FROM t0 WHERE (((CASE ((((t0.c0)AND(t0.c0)))AND(t0.c0))  WHEN 'n' THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)IS NOT(1235120875)) THEN LIKE(t0.c0, t0.c0) END)AND(CASE (((NULL, t0.c0))==((t0.c0, 'f')))  WHEN ((t0.c0)&(t0.c0)) THEN ((t0.c0)||(0.259302317229114)) WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN ((t0.c0)|(t0.c0)) ELSE CAST(t0.c0 AS TEXT) END))) ORDER BY (((((t0.c0) ISNULL)))>((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))IS NOT(LAST_INSERT_ROWID()))) ORDER BY (((((t0.c0) ISNULL)))>((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))));
SELECT * FROM t0 WHERE (CASE ((((t0.c0)AND(t0.c0)))AND(t0.c0))  WHEN 'n' THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)IS NOT(0x499e72eb)) THEN LIKE(t0.c0, t0.c0) END);
SELECT DISTINCT * FROM t0 WHERE (((CASE ((((t0.c0)AND(t0.c0)))AND(t0.c0))  WHEN 'n' THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)IS NOT(1235120875)) THEN LIKE(t0.c0, t0.c0) END)AND(CASE (((NULL, t0.c0))==((t0.c0, 'f')))  WHEN ((t0.c0)&(t0.c0)) THEN ((t0.c0)||(0.259302317229114)) WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN ((t0.c0)|(t0.c0)) ELSE CAST(t0.c0 AS TEXT) END))) ORDER BY (((((t0.c0) ISNULL)))>((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))IS NOT(LAST_INSERT_ROWID()))) ORDER BY (((((t0.c0) ISNULL)))>((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))));
SELECT MIN(t0.c0) FROM t0 WHERE ((((t0.c0)>=(t0.c0)) IN (t0.c0 COLLATE NOCASE))) ORDER BY HEX(DISTINCT ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0))), LIKELIHOOD((((t0.c0))<((t0.c0))), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0)=(t0.c0)) IN (t0.c0 COLLATE NOCASE)))AND(((((x'')AND(t0.c0)))OR(((t0.c0)>(t0.c0))))))) ORDER BY ((TYPEOF(t0.c0))*(((((((x'8a71')AND(t0.c0)))OR('
')))OR(t0.c0))))  NULLS FIRST LIMIT 3;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (LOWER(ABS(DISTINCT 'xw_KR	,L'))) ORDER BY (((((t0.c0, t0.c0)) NOT BETWEEN ((x'e2c372e10f', t0.c0)) AND ((t0.c0, 0.3810876439202111)))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (0Xffffffffdb4d50b6)) ASC  NULLS FIRST, (((t0.c0 IN (t0.c0)))LIKE('1e500'));
SELECT MIN(t0.c0) FROM t0 WHERE (LOWER(ABS(DISTINCT 'xw_KR	,L'))) ORDER BY (((((t0.c0, t0.c0)) NOT BETWEEN ((x'e2c372e10f', t0.c0)) AND ((t0.c0, 0.3810876439202111)))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (-615690058)) ASC  NULLS FIRST, (((t0.c0 IN (t0.c0)))LIKE('1e500'));
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE) DESC, (((t0.c0) ISNULL) IN (t0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND((((t0.c0 IN (t0.c0, t0.c0))) IS FALSE)))) ORDER BY NULL INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN 'ka>F' THEN t0.c0 WHEN 'p49R]V|P' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (~ (t0.c0)) WHEN ((-7.09828426E8) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END) ORDER BY NULL;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE) DESC, (((t0.c0) ISNULL) IN (t0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND((((t0.c0 IN (t0.c0, t0.c0))) IS FALSE)))) ORDER BY NULL INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN 'ka>F' THEN t0.c0 WHEN 'p49R]V|P' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (~ (t0.c0)) WHEN ((-7.09828426E8) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END) ORDER BY NULL;
SELECT ALL * FROM t0 WHERE (((((t0.c0)||(t0.c0)))*(CAST(t0.c0 AS TEXT)))) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))LIKE(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), ((CASE '67061909'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)-(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(NULL))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)||(t0.c0)))*(CAST(t0.c0 AS TEXT)))) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))LIKE(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), ((CASE '67061909'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)-(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(NULL))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)||(t0.c0)))*(CAST(t0.c0 AS TEXT)))) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))LIKE(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), ((CASE '67061909'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)-(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(NULL))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)||(t0.c0)))*(CAST(t0.c0 AS TEXT)))) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))LIKE(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), ((CASE '67061909'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)-(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(NULL))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((CAST('346329657' AS TEXT) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN (t0.c0, t0.c0))))) ORDER BY NULL COLLATE NOCASE COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((CAST('346329657' AS TEXT) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN (t0.c0, t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM))) ORDER BY t0.c0 DESC, COALESCE(((((((((t0.c0)AND(t0.c0)))AND('')))AND(t0.c0)))AND(t0.c0)), CAST(t0.c0 AS REAL)) INTERSECT SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c0 DESC, COALESCE(((((((((t0.c0)AND(t0.c0)))AND('')))AND(t0.c0)))AND(t0.c0)), CAST(t0.c0 AS REAL));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0) NOTNULL) IN ())) ORDER BY (+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC  NULLS FIRST, (((t0.c0)) BETWEEN (((((x'b4', t0.c0, 0.5291841596026537, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))) AND ((((t0.c0)AND(t0.c0)))))  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0) NOTNULL) IN ()))AND(((t0.c0) NOTNULL)))) ORDER BY (+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC  NULLS FIRST, (((t0.c0)) BETWEEN (((((x'b4', t0.c0, 0.5291841596026537, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))) AND ((((t0.c0)AND(t0.c0)))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))AND(x'c5')))OR(LIKELIHOOD(DISTINCT t0.c0, t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))AND(x'c5')))OR(LIKELIHOOD(DISTINCT t0.c0, t0.c0)))) ORDER BY ABS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))  NULLS FIRST, CASE ((t0.c0)>=(t0.c0))  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (+ (t0.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))AND(x'c5')))OR(LIKELIHOOD(DISTINCT t0.c0, t0.c0))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE NULL END)AND(LOWER(DISTINCT t0.c0))))OR(json_object(0.2891872672185003, t0.c0))))AND((t0.c0 IN (t0.c0))))) ORDER BY ((((((t0.c0)<=(NULL)))OR((t0.c0 IN ()))))OR(((t0.c0) ISNULL)))  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE NULL END)AND(LOWER(DISTINCT t0.c0))))OR(json_object(0.2891872672185003, t0.c0))))AND((t0.c0 IN (t0.c0))))) ORDER BY ((((((t0.c0)<=(NULL)))OR((t0.c0 IN ()))))OR(((t0.c0) ISNULL)))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS BLOB)) ORDER BY ((((t0.c0)AND(t0.c0)))OR(1819715340))  NULLS LAST, CAST(t0.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT DISTINCT * FROM t0 WHERE (((CAST((t0.c0 IN (t0.c0)) AS BLOB))AND(t0.c0))) ORDER BY ((((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR((('') BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)>(t0.c0)))))OR(t0.c0 COLLATE RTRIM)))OR(CASE t0.c0  WHEN t0.c0 THEN x'ed' WHEN 1383160628 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((+ (t0.c0)))), (((- (t0.c0)))>(((t0.c0) IS FALSE))) DESC  NULLS LAST, CAST((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0))) AS BLOB) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS BLOB)) ORDER BY ((((t0.c0)AND(t0.c0)))OR(1819715340))  NULLS LAST, CAST(t0.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT DISTINCT * FROM t0 WHERE (((CAST((t0.c0 IN (t0.c0)) AS BLOB))AND(t0.c0))) ORDER BY ((((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR((('') BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)>(t0.c0)))))OR(t0.c0 COLLATE RTRIM)))OR(CASE t0.c0  WHEN t0.c0 THEN x'ed' WHEN 1383160628 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((+ (t0.c0)))), (((- (t0.c0)))>(((t0.c0) IS FALSE))) DESC  NULLS LAST, CAST((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0))) AS BLOB) DESC  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE ((((~ (t0.c0))) NOTNULL));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((~ (t0.c0))) NOTNULL)) ORDER BY (((~ (t0.c0)))<>(t0.c0 COLLATE RTRIM)) DESC, (NOT ((- (t0.c0)))) ASC  NULLS LAST LIMIT 2;
SELECT ALL COUNT(*) FROM t0 WHERE (UNLIKELY(DISTINCT LOWER(DISTINCT t0.c0))) ORDER BY CAST(((t0.c0) NOT BETWEEN ('rB&') AND (t0.c0)) AS REAL) ASC  NULLS FIRST, (((((t0.c0, t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)), t0.c0 DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (UNLIKELY(DISTINCT LOWER(DISTINCT t0.c0))) ORDER BY (((t0.c0 IN ()))<<((((t0.c0))<=((t0.c0))))) LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM)AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)||(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)), CASE (NOT (t0.c0))  WHEN ((t0.c0)LIKE(t0.c0)) THEN ((t0.c0) IS TRUE) END, CASE CAST('ã³0' AS BLOB)  WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)/(t0.c0)) ELSE 'æ' END DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM)AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)||(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)), CASE (NOT (t0.c0))  WHEN ((t0.c0)LIKE(t0.c0)) THEN ((t0.c0) IS TRUE) END, CASE CAST('ã³0' AS BLOB)  WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)/(t0.c0)) ELSE 'æ' END DESC  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ('aFL?
SSL+');
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((('aFL?
SSL+')AND(((((((x'f6ea')AND(t0.c0)))OR(LIKELY(t0.c0))))AND(((t0.c0)||(t0.c0))))))) ORDER BY LAST_INSERT_ROWID() DESC, ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)==('2119975713')), TRIM(DISTINCT CAST(t0.c0 AS INTEGER), 0X39a9bdc4)  NULLS FIRST LIMIT 2;
SELECT * FROM t0 WHERE (t0.c0 COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (t0.c0 COLLATE BINARY);
SELECT * FROM t0 WHERE (t0.c0 COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (t0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE ((((('u')+(t0.c0))) ISNULL)) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM ASC;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((('u')+(t0.c0))) ISNULL))AND(CAST(t0.c0 AS INTEGER)))) ORDER BY CASE (- (t0.c0))  WHEN 0.18102199488578719 THEN '204747477' WHEN ((t0.c0)IS(t0.c0)) THEN ((t0.c0) IS FALSE) END, CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS BLOB) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (((json_type(t0.c0)) NOT BETWEEN (((t0.c0)<(t0.c0))) AND (json_extract(t0.c0, t0.c0, t0.c0))));
SELECT ALL * FROM t0 WHERE (((json_type(t0.c0)) NOT BETWEEN (((t0.c0)<=(t0.c0))) AND (json_extract(t0.c0, t0.c0, t0.c0)))) ORDER BY CAST(0Xffffffffb6364efc AS INTEGER) ASC  NULLS FIRST, 'm', ((('0.03106961641039463'))>((CAST('#(aé¿è¿l-2' AS TEXT))))  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY CAST(0xffffffffb6364efc AS INTEGER) ASC  NULLS FIRST, 'm', ((('0.03106961641039463'))>((CAST('#(aé¿è¿l-2' AS TEXT))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((json_type(t0.c0)) NOT BETWEEN (((t0.c0)<(t0.c0))) AND (json_extract(t0.c0, t0.c0, t0.c0))));
SELECT ALL * FROM t0 WHERE (LOWER(((t0.c0) IS FALSE)));
SELECT ALL * FROM t0 WHERE (LOWER(((t0.c0) IS FALSE))) ORDER BY CAST(((t0.c0)LIKE(t0.c0)) AS BLOB) DESC;
SELECT ALL * FROM t0 WHERE (LOWER(((t0.c0) IS FALSE)));
SELECT ALL * FROM t0 WHERE (LOWER(((t0.c0) IS FALSE))) ORDER BY CAST(((t0.c0)LIKE(t0.c0)) AS BLOB) DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND (((NULL IN (t0.c0)))))) ORDER BY (((t0.c0)+(t0.c0)) IN ())  NULLS FIRST, CAST((('1287747535')>(t0.c0)) AS TEXT) ASC, (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))%(CAST(t0.c0 AS BLOB)));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND (((NULL IN (t0.c0))))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM))) ORDER BY ((((((((t0.c0)%(t0.c0)))OR((NOT (t0.c0)))))OR((t0.c0 IN ()))))OR('9m'))  NULLS FIRST, ((t0.c0)GLOB((- (t0.c0)))) LIMIT 0X0 INTERSECT SELECT * FROM t0 WHERE (((((t0.c0)IS(t0.c0))) IS FALSE)) ORDER BY ((((((((t0.c0)%(t0.c0)))OR((NOT (t0.c0)))))OR((t0.c0 IN ()))))OR('9m'))  NULLS FIRST, ((t0.c0)GLOB((- (t0.c0)))) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND (((NULL IN (t0.c0)))))) ORDER BY (((t0.c0)+(t0.c0)) IN ())  NULLS FIRST, CAST((('1287747535')>(t0.c0)) AS TEXT) ASC, (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))%(CAST(t0.c0 AS BLOB)));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM);
SELECT MIN(t0.c0) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM)AND(((((('-1076445702', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (CASE t0.c0  WHEN -1.301734921E9 THEN t0.c0 ELSE t0.c0 END))))) ORDER BY LOWER(DISTINCT ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0))), ((((('2058946507') NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((((t0.c0)AND(t0.c0)))OR('é'))))<>((((t0.c0) BETWEEN (t0.c0) AND ('Q')), ((x'') IS FALSE), ((t0.c0)||(t0.c0))))), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE ASC  NULLS LAST INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (t0.c0 IN (t0.c0)) WHEN HEX(DISTINCT t0.c0) THEN CAST(t0.c0 AS NUMERIC) ELSE 0.6258693287924149 END) ORDER BY LOWER(DISTINCT ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0))), ((((('2058946507') NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((((t0.c0)AND(t0.c0)))OR('é'))))<>((((t0.c0) BETWEEN (t0.c0) AND ('Q')), ((x'') IS FALSE), ((t0.c0)||(t0.c0))))), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE ASC  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (0.6565686701681376) ORDER BY t0.c0  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((0.6565686701681376)AND(((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ISNULL)))) ORDER BY ((IFNULL(DISTINCT t0.c0, 'a')) NOTNULL) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((CAST(t0.c0 AS NUMERIC) IN ())) ORDER BY ((IFNULL(DISTINCT t0.c0, 'a')) NOTNULL) DESC LIMIT 0X2;
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END)-((~ (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END)-((~ (t0.c0)))))AND(((((((((((t0.c0) NOTNULL))OR(CAST(t0.c0 AS REAL))))AND(((t0.c0) IS TRUE))))OR(((t0.c0)<(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ('%') LIMIT 0x0;
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END)-((~ (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END)-((~ (t0.c0)))))AND(((((((((((t0.c0) NOTNULL))OR(CAST(t0.c0 AS REAL))))AND(((t0.c0) IS TRUE))))OR(((t0.c0)<(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ('%') LIMIT 0x0;
SELECT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((t0.c0 IN ()))));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((t0.c0 IN ()))));
SELECT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((t0.c0 IN ()))));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((t0.c0 IN ()))));
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c0)||(t0.c0))) BETWEEN (((t0.c0)-(t0.c0))) AND (0.6644241047888846)));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((t0.c0)||(t0.c0))) BETWEEN (((t0.c0)-(t0.c0))) AND (0.6644241047888846))) ORDER BY ((((t0.c0)>>(t0.c0)))>=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.6845220912158383 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN -6.3195965E7 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT ALL * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE) ORDER BY (((NULL, t0.c0, t0.c0)) BETWEEN (((~ (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (NULL)), t0.c0 COLLATE RTRIM)) AND (((('')<<(NULL)), (t0.c0 IN (t0.c0, t0.c0)), UPPER(DISTINCT t0.c0)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((x'') NOTNULL), (+ (0.935706432101271))) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, RTRIM(t0.c0), t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)OR(t0.c0)))OR('-1547094619'))))<(((t0.c0 IN ()), t0.c0 COLLATE RTRIM, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, t0.c0 COLLATE NOCASE, (((t0.c0))>=((t0.c0))))))) ORDER BY (((NULL, t0.c0, t0.c0)) BETWEEN (((~ (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (NULL)), t0.c0 COLLATE RTRIM)) AND (((('')<<(NULL)), (t0.c0 IN (t0.c0, t0.c0)), UPPER(DISTINCT t0.c0)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((x'') NOTNULL), (+ (0.935706432101271))) ASC;
SELECT ALL * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE) ORDER BY (((NULL, t0.c0, t0.c0)) BETWEEN (((~ (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (NULL)), t0.c0 COLLATE RTRIM)) AND (((('')<<(NULL)), (t0.c0 IN (t0.c0, t0.c0)), UPPER(DISTINCT t0.c0)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((x'') NOTNULL), (+ (0.935706432101271))) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, RTRIM(t0.c0), t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)OR(t0.c0)))OR('-1547094619'))))<(((t0.c0 IN ()), t0.c0 COLLATE RTRIM, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, t0.c0 COLLATE NOCASE, (((t0.c0))>=((t0.c0))))))) ORDER BY (((NULL, t0.c0, t0.c0)) BETWEEN (((~ (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (NULL)), t0.c0 COLLATE RTRIM)) AND (((('')<<(NULL)), (t0.c0 IN (t0.c0, t0.c0)), UPPER(DISTINCT t0.c0)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((x'') NOTNULL), (+ (0.935706432101271))) ASC;
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE NOCASE) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE NOCASE DESC  NULLS FIRST, (((t0.c0 COLLATE RTRIM, t0.c0 COLLATE RTRIM))<(((t0.c0 IN (t0.c0)), (t0.c0 IN (t0.c0, t0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE NOCASE)AND(CHANGES()))) ORDER BY (((((t0.c0)=(t0.c0)), ((t0.c0)>(t0.c0)), load_extension(t0.c0, t0.c0), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))=((((t0.c0)+(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) NOTNULL), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0x3ff4895 THEN t0.c0 WHEN x'072c70' THEN t0.c0 ELSE t0.c0 END, (+ (t0.c0))))), ((((t0.c0)OR(((t0.c0)LIKE(t0.c0)))))OR(((t0.c0)=(t0.c0))))  NULLS FIRST LIMIT 0x3 INTERSECT SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS REAL))>=(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY (((((t0.c0)==(t0.c0)), ((t0.c0)>(t0.c0)), load_extension(t0.c0, t0.c0), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))==((((t0.c0)+(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) NOTNULL), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0x3ff4895 THEN t0.c0 WHEN x'072c70' THEN t0.c0 ELSE t0.c0 END, (+ (t0.c0))))), ((((t0.c0)OR(((t0.c0)LIKE(t0.c0)))))OR(((t0.c0)==(t0.c0))))  NULLS FIRST LIMIT 3;
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE NOCASE) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE NOCASE DESC  NULLS FIRST, (((t0.c0 COLLATE RTRIM, t0.c0 COLLATE RTRIM))<(((t0.c0 IN (t0.c0)), (t0.c0 IN (t0.c0, t0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE NOCASE)AND(CHANGES()))) ORDER BY (((((t0.c0)=(t0.c0)), ((t0.c0)>(t0.c0)), load_extension(t0.c0, t0.c0), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))=((((t0.c0)+(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) NOTNULL), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0x3ff4895 THEN t0.c0 WHEN x'072c70' THEN t0.c0 ELSE t0.c0 END, (+ (t0.c0))))), ((((t0.c0)OR(((t0.c0)LIKE(t0.c0)))))OR(((t0.c0)=(t0.c0))))  NULLS FIRST LIMIT 0x3 INTERSECT SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS REAL))>=(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY (((((t0.c0)==(t0.c0)), ((t0.c0)>(t0.c0)), load_extension(t0.c0, t0.c0), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))==((((t0.c0)+(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) NOTNULL), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0x3ff4895 THEN t0.c0 WHEN x'072c70' THEN t0.c0 ELSE t0.c0 END, (+ (t0.c0))))), ((((t0.c0)OR(((t0.c0)LIKE(t0.c0)))))OR(((t0.c0)==(t0.c0))))  NULLS FIRST LIMIT 3;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((141569879)&(SQLITE_VERSION()))) ORDER BY CASE ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(x'')))OR(t0.c0)))OR(t0.c0))  WHEN t0.c0 THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (((t0.c0, t0.c0))>((t0.c0, t0.c0))) THEN (+ (t0.c0)) ELSE ((t0.c0)IS NOT(t0.c0)) END ASC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((0x8702f57)&(SQLITE_VERSION()))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0 WHERE ('');
SELECT DISTINCT * FROM t0 WHERE ('') ORDER BY t0.c0 DESC, x'' INTERSECT SELECT DISTINCT * FROM t0 WHERE ('-722364497') ORDER BY t0.c0 DESC, x'';
SELECT ALL * FROM t0 WHERE ('');
SELECT DISTINCT * FROM t0 WHERE ('') ORDER BY t0.c0 DESC, x'' INTERSECT SELECT DISTINCT * FROM t0 WHERE ('-722364497') ORDER BY t0.c0 DESC, x'';
SELECT * FROM t0 WHERE (x'd74b') ORDER BY (((t0.c0)) BETWEEN ((x'')) AND ((t0.c0))) COLLATE RTRIM;
SELECT ALL * FROM t0 WHERE (x'd74b') ORDER BY (('-1330274090')%(((t0.c0) ISNULL))) DESC, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE) LIMIT 2 INTERSECT SELECT ALL * FROM t0 WHERE (((t0.c0 IN (t0.c0, t0.c0)) IN ())) ORDER BY (('-1330274090')%(((t0.c0) ISNULL))) DESC, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE) LIMIT 2;
SELECT * FROM t0 WHERE (x'd74b') ORDER BY (((t0.c0)) BETWEEN ((x'')) AND ((t0.c0))) COLLATE RTRIM;
SELECT ALL * FROM t0 WHERE (x'd74b') ORDER BY (('-1330274090')%(((t0.c0) ISNULL))) DESC, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE) LIMIT 2 INTERSECT SELECT ALL * FROM t0 WHERE (((t0.c0 IN (t0.c0, t0.c0)) IN ())) ORDER BY (('-1330274090')%(((t0.c0) ISNULL))) DESC, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE) LIMIT 2;
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0 COLLATE BINARY)OR((((t0.c0)) NOT BETWEEN (('1420848920')) AND ((t0.c0))))))OR((- (t0.c0)))))OR(CAST(t0.c0 AS REAL))))AND((- (t0.c0)))))AND(NULL)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((((t0.c0 COLLATE BINARY)OR((((t0.c0)) NOT BETWEEN (('1420848920')) AND ((t0.c0))))))OR((- (t0.c0)))))OR(CAST(t0.c0 AS REAL))))AND((- (t0.c0)))))AND(NULL))) ORDER BY CASE WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c0)>(t0.c0)) WHEN ((NULL)>=(t0.c0)) THEN DATETIME(t0.c0, t0.c0, '&', t0.c0) END, ((t0.c0 IN ()) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((((t0.c0)OR(t0.c0)))AND('1990220255')))AND(t0.c0)), ((t0.c0)-(t0.c0)))) LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (NULL) ORDER BY CASE WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c0)>(t0.c0)) WHEN ((NULL)>=(t0.c0)) THEN DATETIME(t0.c0, t0.c0, '&', t0.c0) END, ((t0.c0 IN ()) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((((t0.c0)OR(t0.c0)))AND('1990220255')))AND(t0.c0)), ((t0.c0)-(t0.c0)))) LIMIT 1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (HEX(DISTINCT TRIM(DISTINCT t0.c0, t0.c0)));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (HEX(DISTINCT TRIM(DISTINCT t0.c0, t0.c0))) LIMIT 0X1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (TRIM(((1932273770) NOT NULL))) ORDER BY (NOT (((t0.c0) IS TRUE))), CASE ((t0.c0) ISNULL)  WHEN CAST(t0.c0 AS TEXT) THEN (t0.c0 IN (t0.c0, t0.c0)) END ASC, (((((- (t0.c0)))AND(((t0.c0)|(t0.c0)))))AND((t0.c0 IN (t0.c0))))  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (TRIM(((0X732c286a) NOT NULL))) ORDER BY (((((((((t0.c0 IN (t0.c0)))OR(t0.c0 COLLATE BINARY)))OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0) NOTNULL))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END))  NULLS FIRST, (((t0.c0) IS TRUE) IN (json_array(t0.c0, t0.c0, t0.c0))) DESC;
SELECT ALL * FROM t0 INDEXED BY i29 WHERE (CAST(CAST(t0.c0 AS BLOB) AS NUMERIC));
SELECT DISTINCT * FROM t0 INDEXED BY i29 WHERE (CAST(CAST(t0.c0 AS BLOB) AS NUMERIC)) INTERSECT SELECT DISTINCT * FROM t0 INDEXED BY i29 WHERE (((((t0.c0)IS NOT(t0.c0)))IS NOT(CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL * FROM t0 INDEXED BY i29 WHERE (CAST(CAST(t0.c0 AS BLOB) AS NUMERIC));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN x'1b' THEN t0.c0 ELSE t0.c0 END))=(((+ (-1112927373)))))) ORDER BY CASE (t0.c0 IN (t0.c0, t0.c0, t0.c0))  WHEN (t0.c0 IN ()) THEN ((((((t0.c0)OR(t0.c0)))AND(0.9588229567043307)))AND(t0.c0)) END DESC  NULLS FIRST, t0.c0, (((~ (t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN (t0.c0)))) ASC;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN x'1b' THEN t0.c0 ELSE t0.c0 END))==(((+ (-1112927373))))))AND(UNLIKELY((- (t0.c0)))))) ORDER BY ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(CAST(t0.c0 AS REAL)))  NULLS FIRST, CASE -9.44381496E8  WHEN t0.c0 THEN -1750140301 WHEN 0.0 THEN t0.c0 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (x'' IN ()) WHEN ((t0.c0)>=(t0.c0)) THEN 0.4997056863343975 WHEN ((t0.c0)<(t0.c0)) THEN (t0.c0 IN (t0.c0, t0.c0)) ELSE t0.c0 END);
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (x'' IN ()) WHEN ((t0.c0)>=(t0.c0)) THEN 0.4997056863343975 WHEN ((t0.c0)<(t0.c0)) THEN (t0.c0 IN (t0.c0)) ELSE t0.c0 END)AND(x'cf'))) LIMIT 0X0;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)<<(0X70a8c557))) IS TRUE)) ORDER BY (+ ((((t0.c0))>=((NULL))))) DESC  NULLS FIRST, CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER) DESC  NULLS FIRST, ((t0.c0) NOTNULL) COLLATE BINARY  NULLS FIRST, ((CAST(t0.c0 AS BLOB))<<(t0.c0)) ASC, ((((- (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND ('-59568707')), CAST(t0.c0 AS TEXT)))=(((((t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0))), ((t0.c0)>(t0.c0)), (NOT (t0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)<<(1890108759))) IS TRUE)) ORDER BY ((((t0.c0)LIKE(t0.c0)))=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY ((((t0.c0)AND(t0.c0))) BETWEEN (((t0.c0)||(t0.c0))) AND (((t0.c0)LIKE(NULL)))), t0.c0 COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))AND(((((t0.c0) NOTNULL)) NOT BETWEEN (t0.c0) AND ('-668094527'))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))||((((t0.c0))<((t0.c0))))) DESC  NULLS FIRST, t0.c0 INTERSECT SELECT ALL * FROM t0 WHERE ((((((((NULL IN ()))AND(((t0.c0)>=(t0.c0)))))OR((t0.c0 IN ()))))OR(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))||((((t0.c0))<((t0.c0))))) DESC  NULLS FIRST, t0.c0;
SELECT * FROM t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY ((((t0.c0)AND(t0.c0))) BETWEEN (((t0.c0)||(t0.c0))) AND (((t0.c0)LIKE(NULL)))), t0.c0 COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))AND(((((t0.c0) NOTNULL)) NOT BETWEEN (t0.c0) AND ('-668094527'))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))||((((t0.c0))<((t0.c0))))) DESC  NULLS FIRST, t0.c0 INTERSECT SELECT ALL * FROM t0 WHERE ((((((((NULL IN ()))AND(((t0.c0)>=(t0.c0)))))OR((t0.c0 IN ()))))OR(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))||((((t0.c0))<((t0.c0))))) DESC  NULLS FIRST, t0.c0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((((((t0.c0 IN (t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0))) ORDER BY NULL DESC  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE ((((((((((t0.c0 IN (t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0)))AND(CASE WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t0.c0 THEN '-1939732175' WHEN x'' THEN t0.c0 ELSE t0.c0 END WHEN (t0.c0 IN ()) THEN 0x22a6b12d END))) ORDER BY ((((t0.c0) IS FALSE)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST, (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL) DESC LIMIT 0X3 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) IN (((t0.c0) NOTNULL)))) ORDER BY ((((t0.c0) IS FALSE)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST, (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL) DESC LIMIT 0x3;
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c0 THEN t0.c0 END) ORDER BY CAST(NULL AS BLOB), ((((t0.c0) IS TRUE)) NOTNULL) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)AND((((t0.c0, (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))), NULL, (+ (t0.c0))))>=((0.1530802186331368 COLLATE RTRIM, CAST(t0.c0 AS REAL), (((t0.c0)) NOT BETWEEN ((-1590194108)) AND ((t0.c0))), CAST(t0.c0 AS TEXT))))))) ORDER BY CAST(NULL AS BLOB), ((((t0.c0) IS TRUE)) NOTNULL) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) IN ())) ORDER BY CAST(NULL AS BLOB), ((((t0.c0) IS TRUE)) NOTNULL) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c0 THEN t0.c0 END) ORDER BY CAST(NULL AS BLOB), ((((t0.c0) IS TRUE)) NOTNULL) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)AND((((t0.c0, (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))), NULL, (+ (t0.c0))))>=((0.1530802186331368 COLLATE RTRIM, CAST(t0.c0 AS REAL), (((t0.c0)) NOT BETWEEN ((-1590194108)) AND ((t0.c0))), CAST(t0.c0 AS TEXT))))))) ORDER BY CAST(NULL AS BLOB), ((((t0.c0) IS TRUE)) NOTNULL) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) IN ())) ORDER BY CAST(NULL AS BLOB), ((((t0.c0) IS TRUE)) NOTNULL) ASC  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c0)LIKE(t0.c0)))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0 IN ())) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c0)LIKE(t0.c0)))))AND(json_array_length(t0.c0, CAST(t0.c0 AS BLOB))))) ORDER BY CASE ((t0.c0)*(x''))  WHEN ((0Xffffffff825d924f) NOTNULL) THEN (t0.c0 IN (t0.c0)) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE CAST(t0.c0 AS BLOB) END  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((('') IS FALSE)) ORDER BY CASE ((t0.c0)*(x''))  WHEN ((-2107796913) NOTNULL) THEN (t0.c0 IN (t0.c0)) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE CAST(t0.c0 AS BLOB) END  NULLS LAST LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN t0.c0 END) ORDER BY ((CAST(t0.c0 AS BLOB)) ISNULL) DESC, (((t0.c0 IN (t0.c0, '-944381496')))-(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST, x'b6f53b'  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN t0.c0 END) ORDER BY ((CAST(t0.c0 AS BLOB)) ISNULL) DESC, (((t0.c0 IN (t0.c0, '-944381496')))-(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST, x'b6f53b'  NULLS LAST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, '9'))<=((t0.c0, t0.c0, t0.c0, t0.c0, 0.25009301969831066, t0.c0, t0.c0)))) NOT BETWEEN (((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB)) ISNULL) DESC, (((t0.c0 IN (t0.c0, '-944381496')))-(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST, x'b6f53b'  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS REAL));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS REAL)) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))|(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (((t0.c0)AND(CAST(t0.c0 AS NUMERIC) COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (((t0.c0)AND(CAST(t0.c0 AS NUMERIC) COLLATE NOCASE)));
SELECT * FROM t0 WHERE (t0.c0) ORDER BY COALESCE(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, LIKELY(t0.c0)) DESC;
SELECT * FROM t0 WHERE (((t0.c0)AND(((((((t0.c0)OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(((((((((((NULL)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))))OR(CAST(t0.c0 AS INTEGER)))))) ORDER BY CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END  WHEN (- (t0.c0)) THEN ((t0.c0)LIKE(NULL)) WHEN NULL THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0)>>(t0.c0)) THEN ((t0.c0) IS TRUE) WHEN CAST(t0.c0 AS INTEGER) THEN (t0.c0 IN (t0.c0)) END ASC  NULLS FIRST, NULL;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY COALESCE(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, LIKELY(t0.c0)) DESC;
SELECT * FROM t0 WHERE (((t0.c0)AND(((((((t0.c0)OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(((((((((((NULL)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))))OR(CAST(t0.c0 AS INTEGER)))))) ORDER BY CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END  WHEN (- (t0.c0)) THEN ((t0.c0)LIKE(NULL)) WHEN NULL THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0)>>(t0.c0)) THEN ((t0.c0) IS TRUE) WHEN CAST(t0.c0 AS INTEGER) THEN (t0.c0 IN (t0.c0)) END ASC  NULLS FIRST, NULL;
SELECT ALL * FROM t0 WHERE (((- (t0.c0)) IN ())) ORDER BY LTRIM('
F', ((t0.c0) NOT NULL)) DESC, CASE WHEN ((t0.c0) IS TRUE) THEN 0.807859634969915 WHEN CAST(t0.c0 AS INTEGER) THEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, x'99')) AND ((t0.c0, t0.c0, t0.c0, 0.4267727776708219, t0.c0, t0.c0))) ELSE LOWER(t0.c0) END, (NOT (((t0.c0)>>(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((- (t0.c0)) IN ()))AND(((TRIM(DISTINCT t0.c0, 306904284))LIKE(COALESCE(DISTINCT t0.c0, t0.c0, t0.c0, t0.c0)))))) ORDER BY LTRIM('
F', ((t0.c0) NOT NULL)) DESC, CASE WHEN ((t0.c0) IS TRUE) THEN 0.807859634969915 WHEN CAST(t0.c0 AS INTEGER) THEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, x'99')) AND ((t0.c0, t0.c0, t0.c0, 0.4267727776708219, t0.c0, t0.c0))) ELSE LOWER(t0.c0) END, (NOT (((t0.c0)>>(t0.c0))))  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t0 WHERE (((- (t0.c0)) IN ())) ORDER BY LTRIM('
F', ((t0.c0) NOT NULL)) DESC, CASE WHEN ((t0.c0) IS TRUE) THEN 0.807859634969915 WHEN CAST(t0.c0 AS INTEGER) THEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, x'99')) AND ((t0.c0, t0.c0, t0.c0, 0.4267727776708219, t0.c0, t0.c0))) ELSE LOWER(t0.c0) END, (NOT (((t0.c0)>>(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((- (t0.c0)) IN ()))AND(((TRIM(DISTINCT t0.c0, 306904284))LIKE(COALESCE(DISTINCT t0.c0, t0.c0, t0.c0, t0.c0)))))) ORDER BY LTRIM('
F', ((t0.c0) NOT NULL)) DESC, CASE WHEN ((t0.c0) IS TRUE) THEN 0.807859634969915 WHEN CAST(t0.c0 AS INTEGER) THEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, x'99')) AND ((t0.c0, t0.c0, t0.c0, 0.4267727776708219, t0.c0, t0.c0))) ELSE LOWER(t0.c0) END, (NOT (((t0.c0)>>(t0.c0))))  NULLS FIRST LIMIT 0x2;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)IS(t0.c0)), ((t0.c0) NOT NULL), ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) AND ((((t0.c0) ISNULL), UPPER(DISTINCT t0.c0), ((t0.c0)<>(t0.c0))))));
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)IS(t0.c0)), ((t0.c0) NOT NULL), ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) AND ((((t0.c0) ISNULL), UPPER(DISTINCT t0.c0), ((t0.c0)<>(t0.c0))))))AND(CASE t0.c0  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN t0.c0 END))) ORDER BY CASE ((t0.c0)IS NOT(t0.c0))  WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN (('241234946', t0.c0, t0.c0)) AND ((NULL, t0.c0, t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END WHEN (t0.c0 IN (t0.c0)) THEN '717283822' WHEN ((x'91')OR(x'')) THEN (((NULL))==((t0.c0))) END  NULLS FIRST, (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((NULL) BETWEEN (t0.c0) AND (t0.c0))))<(((- (t0.c0)), ((t0.c0)<('-1094260511'))))) LIMIT 2 INTERSECT SELECT * FROM t0 WHERE (-1.2398054E9) ORDER BY CASE ((t0.c0)IS NOT(t0.c0))  WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN (('241234946', t0.c0, t0.c0)) AND ((NULL, t0.c0, t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END WHEN (t0.c0 IN (t0.c0)) THEN '717283822' WHEN ((x'91')OR(x'')) THEN (((NULL))==((t0.c0))) END  NULLS FIRST, (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((NULL) BETWEEN (t0.c0) AND (t0.c0))))<(((- (t0.c0)), ((t0.c0)<('-1094260511'))))) LIMIT 0x2;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)IS(t0.c0)), ((t0.c0) NOT NULL), ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) AND ((((t0.c0) ISNULL), UPPER(DISTINCT t0.c0), ((t0.c0)<>(t0.c0))))));
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)IS(t0.c0)), ((t0.c0) NOT NULL), ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) AND ((((t0.c0) ISNULL), UPPER(DISTINCT t0.c0), ((t0.c0)<>(t0.c0))))))AND(CASE t0.c0  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN t0.c0 END))) ORDER BY CASE ((t0.c0)IS NOT(t0.c0))  WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN (('241234946', t0.c0, t0.c0)) AND ((NULL, t0.c0, t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END WHEN (t0.c0 IN (t0.c0)) THEN '717283822' WHEN ((x'91')OR(x'')) THEN (((NULL))==((t0.c0))) END  NULLS FIRST, (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((NULL) BETWEEN (t0.c0) AND (t0.c0))))<(((- (t0.c0)), ((t0.c0)<('-1094260511'))))) LIMIT 2 INTERSECT SELECT * FROM t0 WHERE (-1.2398054E9) ORDER BY CASE ((t0.c0)IS NOT(t0.c0))  WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN (('241234946', t0.c0, t0.c0)) AND ((NULL, t0.c0, t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END WHEN (t0.c0 IN (t0.c0)) THEN '717283822' WHEN ((x'91')OR(x'')) THEN (((NULL))==((t0.c0))) END  NULLS FIRST, (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((NULL) BETWEEN (t0.c0) AND (t0.c0))))<(((- (t0.c0)), ((t0.c0)<('-1094260511'))))) LIMIT 0x2;
SELECT * FROM t0 WHERE (((((t0.c0)IS(t0.c0)))&((- (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)IS(t0.c0)))&((- (t0.c0))))) LIMIT 4;
SELECT * FROM t0 WHERE (((((t0.c0)IS(t0.c0)))&((- (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)IS(t0.c0)))&((- (t0.c0))))) LIMIT 4;
SELECT * FROM t0 WHERE (CAST(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS TEXT)) ORDER BY (NOT (t0.c0))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CAST(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS TEXT))AND((((t0.c0 IN (t0.c0))) NOT BETWEEN (((t0.c0)+(t0.c0))) AND (CASE t0.c0  WHEN '-1347543139' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) ORDER BY (NOT (t0.c0))  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM t0 WHERE (UNLIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (NOT (t0.c0))  NULLS LAST LIMIT 0x2;
SELECT * FROM t0 WHERE (CAST(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS TEXT)) ORDER BY (NOT (t0.c0))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CAST(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS TEXT))AND((((t0.c0 IN (t0.c0))) NOT BETWEEN (((t0.c0)+(t0.c0))) AND (CASE t0.c0  WHEN '-1347543139' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) ORDER BY (NOT (t0.c0))  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM t0 WHERE (UNLIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (NOT (t0.c0))  NULLS LAST LIMIT 0x2;
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) BETWEEN (NULL) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN ((((((((((((t0.c0)OR(1703368490)))OR(t0.c0)))OR(0.22637661280283727)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) WHEN '8J ' THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) ISNULL) THEN t0.c0 COLLATE BINARY WHEN t0.c0 COLLATE NOCASE THEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE (t0.c0 IN ()) END);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) BETWEEN (NULL) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN ((((((((((((t0.c0)OR(0X6587572a)))OR(t0.c0)))OR(0.22637661280283727)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) WHEN '8J ' THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) ISNULL) THEN t0.c0 COLLATE BINARY WHEN t0.c0 COLLATE NOCASE THEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE (t0.c0 IN ()) END);
SELECT * FROM t0 WHERE ((((t0.c0) IS TRUE) IN ())) ORDER BY ((((t0.c0)OR(((t0.c0)IS NOT(t0.c0)))))OR(((t0.c0) NOT NULL))), NULL ASC;
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS TRUE) IN ())) ORDER BY t0.c0 DESC, ((((t0.c0)IS(t0.c0)))|((+ (t0.c0))))  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM t0 WHERE (x'a9c8') ORDER BY t0.c0 DESC, ((((t0.c0)IS(t0.c0)))|((+ (t0.c0))))  NULLS LAST LIMIT 0X2;
SELECT * FROM t0 WHERE ((((t0.c0) IS TRUE) IN ())) ORDER BY ((((t0.c0)OR(((t0.c0)IS NOT(t0.c0)))))OR(((t0.c0) NOT NULL))), NULL ASC;
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS TRUE) IN ())) ORDER BY t0.c0 DESC, ((((t0.c0)IS(t0.c0)))|((+ (t0.c0))))  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM t0 WHERE (x'a9c8') ORDER BY t0.c0 DESC, ((((t0.c0)IS(t0.c0)))|((+ (t0.c0))))  NULLS LAST LIMIT 0X2;
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOTNULL)  WHEN '-1433023270' THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0)>>(t0.c0)) THEN (((t0.c0, t0.c0))<=((t0.c0, t0.c0))) WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((((((((t0.c0)OR(0.4422758534977609)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) END);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CASE ((t0.c0) NOTNULL)  WHEN '-1433023270' THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0)>>(t0.c0)) THEN (((t0.c0, t0.c0))==((t0.c0, t0.c0))) WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((((((((t0.c0)OR(0.4422758534977609)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) END)AND(((ABS(DISTINCT t0.c0))<<(x''))))) ORDER BY ((((((((t0.c0)<=(t0.c0)))OR('700080448')))OR((~ (t0.c0)))))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))  NULLS FIRST LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE BINARY)<('1579931971'))) ORDER BY CASE ((t0.c0) NOTNULL)  WHEN 0.5469412922278721 THEN (~ (t0.c0)) END  NULLS FIRST, t0.c0  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((t0.c0 COLLATE BINARY)<('1579931971')))AND(t0.c0))) ORDER BY CASE ((t0.c0) NOTNULL)  WHEN 0.5469412922278721 THEN (~ (t0.c0)) END  NULLS FIRST, t0.c0  NULLS FIRST;
SELECT * FROM t0 WHERE (((0.10821346379924246)>=(((t0.c0)GLOB(t0.c0))))) ORDER BY '1218456316' DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((0.10821346379924246)>=(((t0.c0)GLOB(t0.c0))))) ORDER BY '1218456316' DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL * FROM t0 WHERE (UPPER(CAST(t0.c0 AS INTEGER))) ORDER BY '1218456316' DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM t0 WHERE (((0.10821346379924246)>=(((t0.c0)GLOB(t0.c0))))) ORDER BY '1218456316' DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((0.10821346379924246)>=(((t0.c0)GLOB(t0.c0))))) ORDER BY '1218456316' DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL * FROM t0 WHERE (UPPER(CAST(t0.c0 AS INTEGER))) ORDER BY '1218456316' DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM t0 WHERE (((json_patch(t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (NULL)));
SELECT DISTINCT * FROM t0 WHERE (((((json_patch(t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (NULL)))AND(CAST(json_array(t0.c0, t0.c0) AS NUMERIC))));
SELECT * FROM t0 WHERE (((json_patch(t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (NULL)));
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((CAST(t0.c0 AS BLOB), (t0.c0 IN ()), t0.c0)))) ORDER BY ((0.644282439503356)/(CASE x'7f'  WHEN x'a4e68a' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)), ((NULL)&(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((CAST(t0.c0 AS BLOB), (t0.c0 IN ()), t0.c0))))AND('
A'))) ORDER BY ((0.644282439503356)/(CASE x'7f'  WHEN x'a4e68a' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)), ((NULL)&(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((CAST(t0.c0 AS BLOB), (t0.c0 IN ()), t0.c0)))) ORDER BY ((0.644282439503356)/(CASE x'7f'  WHEN x'a4e68a' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)), ((NULL)&(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((CAST(t0.c0 AS BLOB), (t0.c0 IN ()), t0.c0))))AND('
A'))) ORDER BY ((0.644282439503356)/(CASE x'7f'  WHEN x'a4e68a' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)), ((NULL)&(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE t0.c0  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN (NOT (t0.c0)) END) ORDER BY LOWER(t0.c0)  NULLS FIRST, TRIM(((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN (NOT (t0.c0)) END)AND(((((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0X7c03a0af THEN t0.c0 ELSE t0.c0 END)OR((t0.c0 IN (t0.c0)))))OR(CAST(t0.c0 AS BLOB))))AND((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)*(t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY (((t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), 'p')) AND ((((t0.c0)!=(0.3886583831214989)), ((t0.c0) NOTNULL)))) ASC, t0.c0 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN (((((t0.c0)OR(0.10174157792264804)))OR(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), 'p')) AND ((((t0.c0)<>(0.3886583831214989)), ((t0.c0) NOTNULL)))) ASC, t0.c0;
SELECT * FROM t0 WHERE (CASE t0.c0  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN (NOT (t0.c0)) END) ORDER BY LOWER(t0.c0)  NULLS FIRST, TRIM(((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN (NOT (t0.c0)) END)AND(((((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0X7c03a0af THEN t0.c0 ELSE t0.c0 END)OR((t0.c0 IN (t0.c0)))))OR(CAST(t0.c0 AS BLOB))))AND((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)*(t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY (((t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), 'p')) AND ((((t0.c0)!=(0.3886583831214989)), ((t0.c0) NOTNULL)))) ASC, t0.c0 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN (((((t0.c0)OR(0.10174157792264804)))OR(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), 'p')) AND ((((t0.c0)<>(0.3886583831214989)), ((t0.c0) NOTNULL)))) ASC, t0.c0;
SELECT MAX(t0.c0) FROM t0 WHERE ((((NOT (t0.c0)))>=((+ (t0.c0)))));
SELECT MAX(t0.c0) FROM t0 WHERE ((((((NOT (t0.c0)))==((+ (t0.c0)))))AND(t0.c0))) LIMIT 1 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)>((((t0.c0, t0.c0, t0.c0, t0.c0))==((NULL, t0.c0, t0.c0, t0.c0)))))) LIMIT 1;
SELECT * FROM t0 WHERE (((CASE x''  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)+(TYPEOF(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((CASE x''  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)+(TYPEOF(t0.c0))))AND(CAST(CASE WHEN t0.c0 THEN t0.c0 END AS NUMERIC)))) ORDER BY (- ((t0.c0 IN (x'85e46c')))) ASC  NULLS LAST, CAST(CAST(t0.c0 AS TEXT) AS REAL) ASC LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0))>((t0.c0, t0.c0)))) IS FALSE)) ORDER BY (- ((t0.c0 IN (x'85e46c')))) ASC  NULLS LAST, CAST(CAST(t0.c0 AS TEXT) AS REAL) ASC LIMIT 2;
SELECT * FROM t0 WHERE (((CASE x''  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)+(TYPEOF(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((CASE x''  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)+(TYPEOF(t0.c0))))AND(CAST(CASE WHEN t0.c0 THEN t0.c0 END AS NUMERIC)))) ORDER BY (- ((t0.c0 IN (x'85e46c')))) ASC  NULLS LAST, CAST(CAST(t0.c0 AS TEXT) AS REAL) ASC LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0))>((t0.c0, t0.c0)))) IS FALSE)) ORDER BY (- ((t0.c0 IN (x'85e46c')))) ASC  NULLS LAST, CAST(CAST(t0.c0 AS TEXT) AS REAL) ASC LIMIT 2;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (x'f8') ORDER BY (- ((t0.c0 IN (t0.c0)))) DESC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((x'f8')AND(CAST(((t0.c0)<<(t0.c0)) AS INTEGER)))) ORDER BY (((~ (t0.c0)))<=(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), (((t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c0 END)));
SELECT * FROM t0 WHERE (((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END)))AND(((t0.c0)!=(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND(x'c2a4')))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END)))AND(((t0.c0)<(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND(x'c2a4')))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) INTERSECT SELECT * FROM t0 WHERE (CASE ((t0.c0)<>(t0.c0))  WHEN (((t0.c0, t0.c0))!=((t0.c0, t0.c0))) THEN ((t0.c0)<=(t0.c0)) WHEN ((t0.c0) NOTNULL) THEN ((t0.c0)IS NOT(t0.c0)) ELSE t0.c0 END);
SELECT * FROM t0 WHERE (((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END)))AND(((t0.c0)!=(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND(x'c2a4')))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END)))AND(((t0.c0)<(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND(x'c2a4')))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) INTERSECT SELECT * FROM t0 WHERE (CASE ((t0.c0)<>(t0.c0))  WHEN (((t0.c0, t0.c0))!=((t0.c0, t0.c0))) THEN ((t0.c0)<=(t0.c0)) WHEN ((t0.c0) NOTNULL) THEN ((t0.c0)IS NOT(t0.c0)) ELSE t0.c0 END);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c0)<=(t0.c0))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c0)<=(t0.c0))))) ORDER BY NULL ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT COUNT(*) FROM t0 WHERE (json_array(CAST(t0.c0 AS INTEGER), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.6514954550432768 THEN '188415772' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOT NULL), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ORDER BY NULL ASC  NULLS FIRST LIMIT 0x1;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0)))==(CASE t0.c0  WHEN t0.c0 THEN 0.5393071269509839 ELSE 'G' END)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))=(CASE t0.c0  WHEN t0.c0 THEN 0.5393071269509839 ELSE 'G' END)))AND(CAST((((t0.c0))!=((NULL))) AS NUMERIC)))) ORDER BY x'0159' DESC LIMIT 0X4;
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND('-1056863942')))AND(t0.c0))) NOTNULL)) ORDER BY ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(LOWER(t0.c0))) ASC;
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND('-1056863942')))AND(t0.c0))) NOTNULL)) ORDER BY ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(LOWER(t0.c0))) ASC LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN ('188415772' COLLATE NOCASE) AND (t0.c0))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(LOWER(t0.c0))) ASC LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND('-1056863942')))AND(t0.c0))) NOTNULL)) ORDER BY ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(LOWER(t0.c0))) ASC;
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND('-1056863942')))AND(t0.c0))) NOTNULL)) ORDER BY ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(LOWER(t0.c0))) ASC LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN ('188415772' COLLATE NOCASE) AND (t0.c0))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(LOWER(t0.c0))) ASC LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY ((((t0.c0)GLOB(t0.c0)))&((t0.c0 IN (t0.c0)))) DESC;
SELECT DISTINCT * FROM t0 WHERE (((NULL)AND(t0.c0))) ORDER BY ((((t0.c0)GLOB(t0.c0)))&((t0.c0 IN (t0.c0)))) DESC LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY ((((t0.c0)GLOB(t0.c0)))&((t0.c0 IN (t0.c0)))) DESC;
SELECT DISTINCT * FROM t0 WHERE (((NULL)AND(t0.c0))) ORDER BY ((((t0.c0)GLOB(t0.c0)))&((t0.c0 IN (t0.c0)))) DESC LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (x'1e');
SELECT DISTINCT * FROM t0 WHERE (((x'1e')AND(((((t0.c0))<>((t0.c0))) IN ()))));
SELECT ALL * FROM t0 WHERE (x'1e');
SELECT DISTINCT * FROM t0 WHERE (((x'1e')AND(((((t0.c0))<>((t0.c0))) IN ()))));
SELECT * FROM t0 WHERE (json_extract(((t0.c0) IS TRUE), ((t0.c0)>>(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY UPPER(((t0.c0)<=(t0.c0))) DESC  NULLS LAST, t0.c0  NULLS LAST, ((((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0) BETWEEN (0.8989959352220974) AND (t0.c0)))))AND(t0.c0)))AND((t0.c0 IN (t0.c0)))))AND(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((json_extract(((t0.c0) IS TRUE), ((t0.c0)>>(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))AND(CASE WHEN (+ (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) END))) ORDER BY UPPER(((t0.c0)<=(t0.c0))) DESC  NULLS LAST, t0.c0  NULLS LAST, ((((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0) BETWEEN (0.8989959352220974) AND (t0.c0)))))AND(t0.c0)))AND((t0.c0 IN (t0.c0)))))AND(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ())) IS TRUE)) ORDER BY UPPER(((t0.c0)<=(t0.c0))) DESC  NULLS LAST, t0.c0  NULLS LAST, ((((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0) BETWEEN (0.8989959352220974) AND (t0.c0)))))AND(t0.c0)))AND((t0.c0 IN (t0.c0)))))AND(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (json_extract(((t0.c0) IS TRUE), ((t0.c0)>>(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY UPPER(((t0.c0)<=(t0.c0))) DESC  NULLS LAST, t0.c0  NULLS LAST, ((((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0) BETWEEN (0.8989959352220974) AND (t0.c0)))))AND(t0.c0)))AND((t0.c0 IN (t0.c0)))))AND(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0)>>(t0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((t0.c0 COLLATE BINARY)||(t0.c0));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((t0.c0)>>(t0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((t0.c0 COLLATE BINARY)||(t0.c0)) INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (LIKELIHOOD(t0.c0, ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ORDER BY ((t0.c0 COLLATE BINARY)||(t0.c0));
SELECT COUNT(*) FROM t0 WHERE ((~ (t0.c0)) COLLATE BINARY) ORDER BY ((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(COALESCE(DISTINCT t0.c0, t0.c0, t0.c0))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0)) COLLATE BINARY)AND((((t0.c0) IS FALSE) IN ())))) ORDER BY ((((((((t0.c0)IS(t0.c0)))OR(((((((t0.c0)OR(0.5187620616200115)))AND(t0.c0)))OR(t0.c0)))))AND(NULL)))OR(t0.c0)), CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT) DESC  NULLS FIRST INTERSECT SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((((((t0.c0)IS(t0.c0)))OR(((((((t0.c0)OR(0.5187620616200115)))AND(t0.c0)))OR(t0.c0)))))AND(NULL)))OR(t0.c0)), CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT) DESC  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 INDEXED BY i29 WHERE ((((((((+ (t0.c0)))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0)!=(t0.c0)))))OR(((t0.c0) NOT NULL)))) ORDER BY x'' ASC, CAST((((t0.c0))>((t0.c0))) AS INTEGER) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 INDEXED BY i29 WHERE ((((((((((+ (t0.c0)))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0)<>(t0.c0)))))OR(((t0.c0) NOT NULL))))AND(CASE t0.c0  WHEN t0.c0 THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0)GLOB(t0.c0)) THEN CAST(t0.c0 AS INTEGER) ELSE ((t0.c0)OR(t0.c0)) END))) ORDER BY x'' ASC, CAST((((t0.c0))>((t0.c0))) AS INTEGER) DESC INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 INDEXED BY i29 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)*('-615690058'))) ORDER BY x'' ASC, CAST((((t0.c0))>((t0.c0))) AS INTEGER) DESC;
SELECT MIN(t0.c0) FROM t0 WHERE (NULL);
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((NULL)AND((((((t0.c0, t0.c0, t0.c0))<=((1.372401049E9, t0.c0, t0.c0)))) IS FALSE))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN ('-1382654157') AND (('-1021010107' IN ()))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN ('-1382654157') AND (('-1021010107' IN ())))) LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CASE WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY) LIMIT 0x0;
SELECT MAX(t0.c0) FROM t0 WHERE ((('-1939732175') ISNULL));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((('-1939732175') ISNULL))AND(CASE WHEN t0.c0 COLLATE BINARY THEN (- (t0.c0)) END))) ORDER BY ((CAST(t0.c0 AS TEXT))&(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (SQLITE_SOURCE_ID() COLLATE RTRIM) ORDER BY CASE WHEN json_remove(t0.c0, t0.c0, t0.c0, t0.c0) THEN (('67061909')|(t0.c0)) WHEN (((t0.c0, t0.c0, t0.c0, NULL)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))) THEN (+ (t0.c0)) ELSE CASE t0.c0  WHEN t0.c0 THEN 'ps!D' WHEN t0.c0 THEN t0.c0 END END, (((t0.c0 IN (x'')))>=(t0.c0))  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (SQLITE_SOURCE_ID() COLLATE RTRIM) ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS TRUE) DESC, t0.c0 COLLATE RTRIM  NULLS FIRST INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (((('\', t0.c0 COLLATE BINARY, t0.c0, (t0.c0 IN (x'8da88a1c'))))<(((- (t0.c0)), TRIM(DISTINCT t0.c0), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), (((t0.c0, t0.c0, t0.c0, t0.c0))=((-1268754315, t0.c0, NULL, 0.5674576958206212))))))) ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS TRUE) DESC, t0.c0 COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN (0.7045884831940761, ((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY t0.c0 ASC;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN (0.7045884831940761, ((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY t0.c0 ASC LIMIT 3 INTERSECT SELECT ALL * FROM t0 WHERE ((('86966474') IS FALSE)) ORDER BY t0.c0 ASC LIMIT 3;
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN (0.7045884831940761, ((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY t0.c0 ASC;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN (0.7045884831940761, ((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY t0.c0 ASC LIMIT 3 INTERSECT SELECT ALL * FROM t0 WHERE ((('86966474') IS FALSE)) ORDER BY t0.c0 ASC LIMIT 3;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (x'ef0ef2') ORDER BY ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))IS(((t0.c0)>(t0.c0))))  NULLS LAST, (((((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))AND(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(0x5c2c45d3)) ASC  NULLS FIRST, (((t0.c0)/(t0.c0)) IN ())  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND (((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((x'ef0ef2')AND(((CAST(t0.c0 AS NUMERIC))>>((((t0.c0))=((t0.c0)))))))) ORDER BY ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))IS(((t0.c0)>(t0.c0))))  NULLS LAST, (((((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))AND(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(1546405331)) ASC  NULLS FIRST, (((t0.c0)/(t0.c0)) IN ())  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND (((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE NOCASE)/(-1193019330 COLLATE BINARY)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)/(-1193019330 COLLATE BINARY)))AND(((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))*(x'b4'))))) ORDER BY rtreenode(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), NULL)  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY rtreenode(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), NULL)  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (NULL) ORDER BY (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((CAST(t0.c0 AS INTEGER)))) ASC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((NULL)AND(((((t0.c0) ISNULL)) BETWEEN (((t0.c0)<('UU*'))) AND ((t0.c0 IN (t0.c0))))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (((t0.c0)/(t0.c0))) AND (((t0.c0) IS TRUE))) ASC  NULLS FIRST, '?~' ASC  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((t0.c0) IS FALSE)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (((t0.c0)/(t0.c0))) AND (((t0.c0) IS TRUE))) ASC  NULLS FIRST, '?~' ASC  NULLS LAST LIMIT 0x1;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)==(t0.c0)))|((((t0.c0))==((t0.c0))))));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)==(t0.c0)))|((((t0.c0))==((t0.c0))))))AND(((((((t0.c0)AND(t0.c0 COLLATE RTRIM)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)GLOB(717283822))))))) ORDER BY 0.27248455466595967 ASC  NULLS FIRST, CASE CAST(t0.c0 AS BLOB)  WHEN (NOT (t0.c0)) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)%(t0.c0)) END DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((LIKELY(t0.c0)) NOT BETWEEN ((((t0.c0, t0.c0))=((t0.c0, t0.c0)))) AND (CAST(0x103cb41 AS NUMERIC))));
SELECT * FROM t0 WHERE (((((LIKELY(t0.c0)) NOT BETWEEN ((((t0.c0, t0.c0))==((t0.c0, t0.c0)))) AND (CAST(0X103cb41 AS NUMERIC))))AND(LOWER((t0.c0 IN (t0.c0)))))) ORDER BY CAST(CASE WHEN x'8c76cf' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER)  NULLS FIRST, t0.c0;
SELECT ALL * FROM t0 WHERE (((LIKELY(t0.c0)) NOT BETWEEN ((((t0.c0, t0.c0))=((t0.c0, t0.c0)))) AND (CAST(0x103cb41 AS NUMERIC))));
SELECT * FROM t0 WHERE (((((LIKELY(t0.c0)) NOT BETWEEN ((((t0.c0, t0.c0))==((t0.c0, t0.c0)))) AND (CAST(0X103cb41 AS NUMERIC))))AND(LOWER((t0.c0 IN (t0.c0)))))) ORDER BY CAST(CASE WHEN x'8c76cf' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER)  NULLS FIRST, t0.c0;
SELECT MIN(t0.c0) FROM t0 WHERE (CAST(((t0.c0)>(t0.c0)) AS REAL)) ORDER BY CAST(x'512b' AS INTEGER), ((t0.c0) BETWEEN ((((t0.c0, '', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 188415772, t0.c0)))) AND (t0.c0 COLLATE BINARY)) DESC;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CAST(((t0.c0)>(t0.c0)) AS REAL))AND((((t0.c0)) BETWEEN (((((t0.c0))>(('-634383010'))))) AND ((CASE t0.c0  WHEN t0.c0 THEN NULL END)))))) ORDER BY ((CAST(t0.c0 AS REAL))+((t0.c0 IN (t0.c0, t0.c0))));
SELECT ALL * FROM t0 WHERE ((((- (t0.c0))) ISNULL));
SELECT * FROM t0 WHERE ((((((- (t0.c0))) ISNULL))AND(((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) NOT NULL))))AND(t0.c0))))) LIMIT 0X1 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0) IS FALSE))<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE ((((- (t0.c0))) ISNULL));
SELECT * FROM t0 WHERE ((((((- (t0.c0))) ISNULL))AND(((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) NOT NULL))))AND(t0.c0))))) LIMIT 0X1 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0) IS FALSE))<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE ((NOT (IFNULL(t0.c0, t0.c0))));
SELECT DISTINCT * FROM t0 WHERE ((((NOT (IFNULL(t0.c0, t0.c0))))AND((('-330942389')*((((t0.c0))<((t0.c0)))))))) LIMIT 0x2;
SELECT ALL * FROM t0 WHERE ((NOT (IFNULL(t0.c0, t0.c0))));
SELECT DISTINCT * FROM t0 WHERE ((((NOT (IFNULL(t0.c0, t0.c0))))AND((('-330942389')*((((t0.c0))<((t0.c0)))))))) LIMIT 0x2;
SELECT MIN(t0.c0) FROM t0 WHERE ((+ (CAST(t0.c0 AS TEXT)))) ORDER BY (- (((t0.c0)<(t0.c0)))) ASC, (((((t0.c0, t0.c0, t0.c0, t0.c0, x'', t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) ISNULL)  NULLS FIRST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((+ (CAST(t0.c0 AS TEXT)))) ORDER BY ((t0.c0) NOT BETWEEN (((t0.c0)IS NOT(NULL))) AND (((t0.c0) IS FALSE)))  NULLS LAST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))||(((t0.c0) IS FALSE)))  NULLS FIRST;
SELECT * FROM t0 WHERE ('118109865') ORDER BY (NOT ((t0.c0 IN ())))  NULLS LAST, (((t0.c0, t0.c0, t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((IFNULL(t0.c0, t0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)%(t0.c0)))))  NULLS FIRST;
SELECT * FROM t0 WHERE ((('118109865')AND(((((x'') NOTNULL)) NOT NULL)))) ORDER BY x'e4' ASC, TYPEOF(DISTINCT t0.c0)  NULLS FIRST, t0.c0 DESC  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)OR(t0.c0)) AS TEXT)) ORDER BY x'e4' ASC, TYPEOF(DISTINCT t0.c0)  NULLS FIRST, t0.c0 DESC  NULLS LAST LIMIT 2;
SELECT * FROM t0 WHERE ('118109865') ORDER BY (NOT ((t0.c0 IN ())))  NULLS LAST, (((t0.c0, t0.c0, t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((IFNULL(t0.c0, t0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)%(t0.c0)))))  NULLS FIRST;
SELECT * FROM t0 WHERE ((('118109865')AND(((((x'') NOTNULL)) NOT NULL)))) ORDER BY x'e4' ASC, TYPEOF(DISTINCT t0.c0)  NULLS FIRST, t0.c0 DESC  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)OR(t0.c0)) AS TEXT)) ORDER BY x'e4' ASC, TYPEOF(DISTINCT t0.c0)  NULLS FIRST, t0.c0 DESC  NULLS LAST LIMIT 2;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(0x7fffffffffffffff)))OR(t0.c0 COLLATE BINARY))) ORDER BY ((((t0.c0)!=(t0.c0))) BETWEEN ((t0.c0 IN (t0.c0))) AND ((((t0.c0, t0.c0))<((t0.c0, t0.c0))))), ((-298618260)==((- (t0.c0)))) ASC, ((((t0.c0, t0.c0))<=((t0.c0, t0.c0))) IN ((~ (t0.c0)))) DESC, ((t0.c0 IN (t0.c0)) IN (((t0.c0)AND(t0.c0)))) DESC  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(9223372036854775807)))OR(t0.c0 COLLATE BINARY)))AND(((((((t0.c0) NOTNULL))AND(t0.c0)))AND((~ (t0.c0))))))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(((t0.c0)==(t0.c0)))))OR(CAST(t0.c0 AS BLOB))))OR(((t0.c0) IS TRUE)))  NULLS LAST INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(((t0.c0)=(t0.c0)))))OR(CAST(t0.c0 AS BLOB))))OR(((t0.c0) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c0)>=(((((t0.c0)AND(t0.c0)))OR(x'd8d3')))));
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)>=(((((t0.c0)AND(t0.c0)))OR(x'd8d3'))))) LIMIT 0X3;
SELECT ALL * FROM t0 WHERE (((t0.c0)>=(((((t0.c0)AND(t0.c0)))OR(x'd8d3')))));
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)>=(((((t0.c0)AND(t0.c0)))OR(x'd8d3'))))) LIMIT 0X3;
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0)))<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((~ (t0.c0)))<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((((t0.c0 IN (t0.c0))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (t0.c0 COLLATE RTRIM))))) INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (rtreenode((t0.c0 IN (t0.c0)), t0.c0));
SELECT ALL * FROM t0 WHERE (CAST(0.985683244251983 AS INTEGER)) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c0)IS(t0.c0)), ((t0.c0) ISNULL), ((((((t0.c0)OR('-20410800')))OR(t0.c0)))AND(t0.c0)), ((t0.c0) NOTNULL))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0, ((t0.c0) NOTNULL), (t0.c0 IN ()))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((CAST(0.985683244251983 AS INTEGER))AND(((((((((((NULL)OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, x'8655'))))))OR(t0.c0 COLLATE RTRIM)))OR((((t0.c0, 'u')) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR(t0.c0))))) ORDER BY CASE WHEN COALESCE(DISTINCT t0.c0, t0.c0, t0.c0) THEN ((t0.c0)IS(t0.c0)) END DESC;
SELECT ALL * FROM t0 WHERE (CAST(0.985683244251983 AS INTEGER)) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c0)IS(t0.c0)), ((t0.c0) ISNULL), ((((((t0.c0)OR('-20410800')))OR(t0.c0)))AND(t0.c0)), ((t0.c0) NOTNULL))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0, ((t0.c0) NOTNULL), (t0.c0 IN ()))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((CAST(0.985683244251983 AS INTEGER))AND(((((((((((NULL)OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, x'8655'))))))OR(t0.c0 COLLATE RTRIM)))OR((((t0.c0, 'u')) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR(t0.c0))))) ORDER BY CASE WHEN COALESCE(DISTINCT t0.c0, t0.c0, t0.c0) THEN ((t0.c0)IS(t0.c0)) END DESC;
SELECT * FROM t0 WHERE ((- (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE ((((- (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((((t0.c0)<<(t0.c0)) IN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0 COLLATE BINARY)));
SELECT * FROM t0 WHERE ((- (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE ((((- (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((((t0.c0)<<(t0.c0)) IN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0 COLLATE BINARY)));
SELECT * FROM t0 WHERE ((- (((NULL)IS NOT(t0.c0))))) ORDER BY (((t0.c0)IS(t0.c0)) IN ((NOT (t0.c0)))) ASC, t0.c0 DESC;
SELECT DISTINCT * FROM t0 WHERE ((- (((NULL)IS NOT(t0.c0))))) ORDER BY (((t0.c0)IS(t0.c0)) IN ((NOT (t0.c0)))) ASC, t0.c0 DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (x'') ORDER BY (((t0.c0)IS(t0.c0)) IN ((NOT (t0.c0)))) ASC, t0.c0 DESC;
SELECT * FROM t0 WHERE ((- (((NULL)IS NOT(t0.c0))))) ORDER BY (((t0.c0)IS(t0.c0)) IN ((NOT (t0.c0)))) ASC, t0.c0 DESC;
SELECT DISTINCT * FROM t0 WHERE ((- (((NULL)IS NOT(t0.c0))))) ORDER BY (((t0.c0)IS(t0.c0)) IN ((NOT (t0.c0)))) ASC, t0.c0 DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (x'') ORDER BY (((t0.c0)IS(t0.c0)) IN ((NOT (t0.c0)))) ASC, t0.c0 DESC;
SELECT MIN(t0.c0) FROM t0 WHERE ((json(t0.c0) IN (t0.c0 COLLATE BINARY)));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((json(t0.c0) IN (t0.c0 COLLATE BINARY))) ORDER BY ((((t0.c0)/('-2130798800')))AND(t0.c0))  NULLS FIRST, (~ (t0.c0 COLLATE BINARY)) DESC  NULLS LAST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS REAL)) ORDER BY ((((t0.c0)/('-2130798800')))AND(t0.c0))  NULLS FIRST, (~ (t0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)|(t0.c0)))OR(x'b3df')))OR(((t0.c0)-(t0.c0))))) ORDER BY ((t0.c0)<>(((t0.c0)-(t0.c0)))) ASC, (((((((('OY')AND(NULL)))OR(t0.c0)))AND(t0.c0))) IS TRUE)  NULLS LAST, (('ã¡>g?JyäKw') BETWEEN (t0.c0) AND (t0.c0));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c0)|(t0.c0)))OR(x'b3df')))OR(((t0.c0)-(t0.c0)))))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) IS FALSE)))) ORDER BY ((t0.c0)<>(((t0.c0)-(t0.c0)))) ASC, (((((((('OY')AND(NULL)))OR(t0.c0)))AND(t0.c0))) IS TRUE)  NULLS LAST, (('ã¡>g?JyäKw') BETWEEN (t0.c0) AND (t0.c0)) LIMIT 0X2 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0) NOT NULL)))==((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY ((t0.c0)<>(((t0.c0)-(t0.c0)))) ASC, (((((((('OY')AND(NULL)))OR(t0.c0)))AND(t0.c0))) IS TRUE)  NULLS LAST, (('ã¡>g?JyäKw') BETWEEN (t0.c0) AND (t0.c0)) LIMIT 2;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (0.9612394127311649);
SELECT MIN(t0.c0) FROM t0 WHERE (0.9612394127311649) ORDER BY ((t0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST, (((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (t0.c0)) DESC  NULLS FIRST INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (TRIM(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((t0.c0)GLOB('#')))) ORDER BY ((t0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST, (((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (t0.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)%(t0.c0)), NULL, (t0.c0 IN ()), CAST(t0.c0 AS NUMERIC)))>=(((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))), ((0Xffffffff9fc06dc8) NOT BETWEEN (NULL) AND (t0.c0)), TYPEOF(t0.c0), (t0.c0 IN ()))))) ORDER BY ((IFNULL(t0.c0, t0.c0))<((NOT (t0.c0)))) DESC  NULLS LAST, ((json_remove(t0.c0, t0.c0, t0.c0)) NOT BETWEEN (-2.128350805E9) AND (t0.c0 COLLATE RTRIM)) DESC;
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0)%(t0.c0)), NULL, (t0.c0 IN ()), CAST(t0.c0 AS NUMERIC)))>(((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))), ((0xffffffff9fc06dc8) NOT BETWEEN (NULL) AND (t0.c0)), TYPEOF(t0.c0), (t0.c0 IN ())))))AND(t0.c0))) ORDER BY ((IFNULL(t0.c0, t0.c0))<((NOT (t0.c0)))) DESC  NULLS LAST, ((json_remove(t0.c0, t0.c0, t0.c0)) NOT BETWEEN (-2.128350805E9) AND (t0.c0 COLLATE RTRIM)) DESC LIMIT 0x0;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)%(t0.c0)), NULL, (t0.c0 IN ()), CAST(t0.c0 AS NUMERIC)))>=(((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))), ((0Xffffffff9fc06dc8) NOT BETWEEN (NULL) AND (t0.c0)), TYPEOF(t0.c0), (t0.c0 IN ()))))) ORDER BY ((IFNULL(t0.c0, t0.c0))<((NOT (t0.c0)))) DESC  NULLS LAST, ((json_remove(t0.c0, t0.c0, t0.c0)) NOT BETWEEN (-2.128350805E9) AND (t0.c0 COLLATE RTRIM)) DESC;
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0)%(t0.c0)), NULL, (t0.c0 IN ()), CAST(t0.c0 AS NUMERIC)))>(((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))), ((0xffffffff9fc06dc8) NOT BETWEEN (NULL) AND (t0.c0)), TYPEOF(t0.c0), (t0.c0 IN ())))))AND(t0.c0))) ORDER BY ((IFNULL(t0.c0, t0.c0))<((NOT (t0.c0)))) DESC  NULLS LAST, ((json_remove(t0.c0, t0.c0, t0.c0)) NOT BETWEEN (-2.128350805E9) AND (t0.c0 COLLATE RTRIM)) DESC LIMIT 0x0;
SELECT * FROM t0 WHERE (json_valid(CASE NULL  WHEN t0.c0 THEN t0.c0 END)) ORDER BY CASE WHEN ((t0.c0)GLOB(t0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN ((t0.c0)GLOB(t0.c0)) WHEN (((t0.c0))==((t0.c0))) THEN x'' WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((t0.c0) IS FALSE) WHEN (~ (t0.c0)) THEN ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) END, t0.c0 DESC;
SELECT ALL * FROM t0 WHERE (((json_valid(CASE NULL  WHEN t0.c0 THEN t0.c0 END))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END COLLATE NOCASE))) ORDER BY UNLIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND ('2077508382'))) ASC INTERSECT SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))))) ORDER BY UNLIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND ('2077508382'))) ASC;
SELECT * FROM t0 WHERE (json_valid(CASE NULL  WHEN t0.c0 THEN t0.c0 END)) ORDER BY CASE WHEN ((t0.c0)GLOB(t0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN ((t0.c0)GLOB(t0.c0)) WHEN (((t0.c0))==((t0.c0))) THEN x'' WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((t0.c0) IS FALSE) WHEN (~ (t0.c0)) THEN ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) END, t0.c0 DESC;
SELECT ALL * FROM t0 WHERE (((json_valid(CASE NULL  WHEN t0.c0 THEN t0.c0 END))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END COLLATE NOCASE))) ORDER BY UNLIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND ('2077508382'))) ASC INTERSECT SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))))) ORDER BY UNLIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND ('2077508382'))) ASC;
SELECT MIN(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL), (((t0.c0, t0.c0))<=((t0.c0, t0.c0))), ((t0.c0) IS FALSE))) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS BLOB))))) ORDER BY 400611739 COLLATE NOCASE  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL), (((t0.c0, t0.c0))<=((t0.c0, t0.c0))), ((t0.c0) IS FALSE))) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS BLOB))))) ORDER BY 0X17e0d99b COLLATE NOCASE  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((NOT ((- (t0.c0))))) ORDER BY 0x17e0d99b COLLATE NOCASE  NULLS FIRST LIMIT 0x2;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))<=((t0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))<=((t0.c0))) COLLATE RTRIM) LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE ((((((t0.c0)AND(t0.c0))))>((((t0.c0)<=(t0.c0)))))) ORDER BY ((t0.c0) NOT NULL)  NULLS FIRST, ((t0.c0 COLLATE BINARY)==((+ (t0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((((((t0.c0)AND(t0.c0))))>((((t0.c0)=(t0.c0))))))AND(((CAST(t0.c0 AS BLOB))=(x''))))) ORDER BY ((t0.c0)||(CAST(t0.c0 AS BLOB))) DESC INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((NOT (t0.c0)))<<(((t0.c0)<=(t0.c0))))) ORDER BY ((t0.c0)||(CAST(t0.c0 AS BLOB))) DESC;
SELECT * FROM t0 WHERE ((- (((('-816660807')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN (t0.c0 IN ()) WHEN LIKELY(DISTINCT t0.c0) THEN UPPER(t0.c0) WHEN CAST(t0.c0 AS REAL) THEN (+ (0.24959227807490592)) WHEN (t0.c0 IN ()) THEN SQLITE_VERSION() WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0, t0.c0))<=((t0.c0, t0.c0))) END ASC  NULLS LAST, (((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))-(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC;
SELECT * FROM t0 WHERE ((- (((('-816660807')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))) DESC, (~ ((t0.c0 IN (t0.c0)))) DESC INTERSECT SELECT ALL * FROM t0 WHERE (JULIANDAY((t0.c0 IN ()), '1011506760' COLLATE NOCASE, t0.c0)) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))) DESC, (~ ((t0.c0 IN (t0.c0)))) DESC;
SELECT * FROM t0 WHERE ((- (((('-816660807')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN (t0.c0 IN ()) WHEN LIKELY(DISTINCT t0.c0) THEN UPPER(t0.c0) WHEN CAST(t0.c0 AS REAL) THEN (+ (0.24959227807490592)) WHEN (t0.c0 IN ()) THEN SQLITE_VERSION() WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0, t0.c0))<=((t0.c0, t0.c0))) END ASC  NULLS LAST, (((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))-(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC;
SELECT * FROM t0 WHERE ((- (((('-816660807')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))) DESC, (~ ((t0.c0 IN (t0.c0)))) DESC INTERSECT SELECT ALL * FROM t0 WHERE (JULIANDAY((t0.c0 IN ()), '1011506760' COLLATE NOCASE, t0.c0)) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))) DESC, (~ ((t0.c0 IN (t0.c0)))) DESC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0);
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0)AND(((((t0.c0)!=(676563859)))<=(CASE WHEN 2072729457 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))));
SELECT ALL COUNT(*) FROM t0 WHERE (NULLIF(DISTINCT t0.c0 COLLATE BINARY, TRIM(t0.c0)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (NULLIF(DISTINCT t0.c0 COLLATE BINARY, TRIM(t0.c0))) ORDER BY ((((t0.c0)OR(t0.c0)))OR('-951512867')) COLLATE BINARY LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)OR(t0.c0)))OR('-951512867')) COLLATE BINARY LIMIT 0;
SELECT ALL * FROM t0 WHERE (((((~ (t0.c0)), ((t0.c0)AND(t0.c0))))<((-9509221.0, ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(NULL)))))) ORDER BY CAST((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0))) AS BLOB)  NULLS LAST, ((((((t0.c0 COLLATE BINARY)AND(((((NULL)OR(',%7eH}M')))OR(t0.c0)))))OR(0.7667295520099504)))AND(((NULL)+(t0.c0))))  NULLS LAST, ((t0.c0)OR(((t0.c0) IS FALSE)));
SELECT DISTINCT * FROM t0 WHERE (((((~ (t0.c0)), ((t0.c0)AND(t0.c0))))<((-9509221.0, ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(NULL)))))) ORDER BY ((LIKELIHOOD(t0.c0, t0.c0))&(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((~ (t0.c0)), ((t0.c0)AND(t0.c0))))<((-9509221.0, ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(NULL)))))) ORDER BY CAST((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0))) AS BLOB)  NULLS LAST, ((((((t0.c0 COLLATE BINARY)AND(((((NULL)OR(',%7eH}M')))OR(t0.c0)))))OR(0.7667295520099504)))AND(((NULL)+(t0.c0))))  NULLS LAST, ((t0.c0)OR(((t0.c0) IS FALSE)));
SELECT DISTINCT * FROM t0 WHERE (((((~ (t0.c0)), ((t0.c0)AND(t0.c0))))<((-9509221.0, ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(NULL)))))) ORDER BY ((LIKELIHOOD(t0.c0, t0.c0))&(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))));
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) LIMIT 0X2 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0)<(t0.c0))) IS TRUE)) LIMIT 0X2;
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))));
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) LIMIT 0X2 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0)<(t0.c0))) IS TRUE)) LIMIT 0X2;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((~ (CAST(t0.c0 AS BLOB))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((~ (CAST(t0.c0 AS BLOB))))AND(json_quote(COALESCE(t0.c0, t0.c0, t0.c0)))));
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN ((((((NULL)AND(t0.c0)))AND(t0.c0)), (~ (t0.c0)))) AND (((((t0.c0))<=((t0.c0))), ((t0.c0) IS FALSE))))) ORDER BY (- (CAST(t0.c0 AS TEXT))) DESC;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0)) BETWEEN ((((((NULL)AND(t0.c0)))AND(t0.c0)), (~ (t0.c0)))) AND (((((t0.c0))<((t0.c0))), ((t0.c0) IS FALSE)))))AND(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(t0.c0 COLLATE BINARY)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((~ (t0.c0))))))) ORDER BY (- (CAST(t0.c0 AS TEXT))) DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS TEXT))<((~ (t0.c0))))) ORDER BY (- (CAST(t0.c0 AS TEXT))) DESC;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN ((((((NULL)AND(t0.c0)))AND(t0.c0)), (~ (t0.c0)))) AND (((((t0.c0))<=((t0.c0))), ((t0.c0) IS FALSE))))) ORDER BY (- (CAST(t0.c0 AS TEXT))) DESC;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0)) BETWEEN ((((((NULL)AND(t0.c0)))AND(t0.c0)), (~ (t0.c0)))) AND (((((t0.c0))<((t0.c0))), ((t0.c0) IS FALSE)))))AND(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(t0.c0 COLLATE BINARY)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((~ (t0.c0))))))) ORDER BY (- (CAST(t0.c0 AS TEXT))) DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS TEXT))<((~ (t0.c0))))) ORDER BY (- (CAST(t0.c0 AS TEXT))) DESC;
SELECT * FROM t0 WHERE (x'09d927');
SELECT ALL * FROM t0 WHERE (((x'09d927')AND(((-144268744) NOT NULL) COLLATE NOCASE))) INTERSECT SELECT * FROM t0 WHERE (((t0.c0)-(t0.c0)) COLLATE RTRIM);
SELECT * FROM t0 WHERE (x'09d927');
SELECT ALL * FROM t0 WHERE (((x'09d927')AND(((-144268744) NOT NULL) COLLATE NOCASE))) INTERSECT SELECT * FROM t0 WHERE (((t0.c0)-(t0.c0)) COLLATE RTRIM);
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0 IN (t0.c0)) IN (((t0.c0) IS FALSE), t0.c0)));
SELECT MAX(t0.c0) FROM t0 NOT INDEXED WHERE (((t0.c0 IN (t0.c0)) IN (((t0.c0) IS FALSE), t0.c0))) ORDER BY t0.c0 ASC, CASE WHEN TRIM(DISTINCT t0.c0, t0.c0) THEN (~ (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN t0.c0 WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN t0.c0 WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN '' END  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)>>(t0.c0)))) AND ((json_array(t0.c0, t0.c0))))) ORDER BY t0.c0 ASC, CASE WHEN TRIM(DISTINCT t0.c0, t0.c0) THEN (~ (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN t0.c0 WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN t0.c0 WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN '' END  NULLS FIRST LIMIT 0x2;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0)>>(t0.c0)))IS NOT((((t0.c0))!=((t0.c0))))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0)>>(t0.c0)))IS NOT((((t0.c0))!=((t0.c0))))))AND(CASE WHEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN x'72' WHEN (NOT (t0.c0)) THEN (((t0.c0))<((t0.c0))) ELSE t0.c0 COLLATE BINARY END))) LIMIT 0x0;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS TEXT) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS TEXT) COLLATE RTRIM) INTERSECT SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)/(t0.c0)))+(((t0.c0) NOTNULL))));
SELECT ALL * FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END  WHEN (NOT ('-615629716')) THEN ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE BINARY THEN CAST(x'' AS TEXT) END) ORDER BY CAST(x'f5' AS BLOB) ASC  NULLS LAST, (+ (LOWER(t0.c0)))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END  WHEN (NOT ('-615629716')) THEN ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE BINARY THEN CAST(x'' AS TEXT) END)AND(CASE t0.c0  WHEN ((t0.c0)>>(t0.c0)) THEN UNLIKELY(DISTINCT t0.c0) WHEN (x'64e9' IN ()) THEN CAST(0.2489019158786313 AS TEXT) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 COLLATE RTRIM WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0)>>(t0.c0)) ELSE (((x'8e12f6', t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, -1575321403, '8ï¼W', 'ãé¶41?NlX', t0.c0))) END))) ORDER BY (NOT (((t0.c0)==(t0.c0)))) LIMIT 0;
SELECT ALL * FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END  WHEN (NOT ('-615629716')) THEN ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE BINARY THEN CAST(x'' AS TEXT) END) ORDER BY CAST(x'f5' AS BLOB) ASC  NULLS LAST, (+ (LOWER(t0.c0)))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END  WHEN (NOT ('-615629716')) THEN ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE BINARY THEN CAST(x'' AS TEXT) END)AND(CASE t0.c0  WHEN ((t0.c0)>>(t0.c0)) THEN UNLIKELY(DISTINCT t0.c0) WHEN (x'64e9' IN ()) THEN CAST(0.2489019158786313 AS TEXT) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 COLLATE RTRIM WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0)>>(t0.c0)) ELSE (((x'8e12f6', t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, -1575321403, '8ï¼W', 'ãé¶41?NlX', t0.c0))) END))) ORDER BY (NOT (((t0.c0)==(t0.c0)))) LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (UPPER(DISTINCT ((t0.c0)AND(t0.c0))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((UPPER(DISTINCT ((t0.c0)AND(t0.c0))))AND(0.502746508288293))) LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CASE ((t0.c0)>(t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR('-330942389')) WHEN t0.c0 THEN ((t0.c0)GLOB(t0.c0)) ELSE t0.c0 END) LIMIT 0;
SELECT ALL * FROM t0 WHERE (json_insert((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), NULL, ((t0.c0) IS TRUE), t0.c0));
SELECT ALL * FROM t0 WHERE (((json_insert((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), NULL, ((t0.c0) IS TRUE), t0.c0))AND(((('-209812820' IN (t0.c0, t0.c0)))!=((('1434496391') IS TRUE)))))) INTERSECT SELECT * FROM t0 WHERE (((LIKELY(t0.c0))LIKE((((t0.c0))>=((t0.c0))))));
SELECT ALL * FROM t0 WHERE (json_insert((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), NULL, ((t0.c0) IS TRUE), t0.c0));
SELECT ALL * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN '418720866' THEN t0.c0 ELSE t0.c0 END)OR(t0.c0 COLLATE NOCASE)))OR(((NULL)IS(t0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)IS(t0.c0));
SELECT * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN '418720866' THEN t0.c0 ELSE t0.c0 END)OR(t0.c0 COLLATE NOCASE)))OR(((NULL)IS(t0.c0))))) ORDER BY ((((t0.c0)+(t0.c0)))&(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST, t0.c0  NULLS LAST, ((CAST(t0.c0 AS INTEGER))OR(((((((t0.c0)AND(x'')))AND(t0.c0)))OR(t0.c0))))  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)+(t0.c0)))&(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST, t0.c0  NULLS LAST, ((CAST(t0.c0 AS INTEGER))OR(((((((t0.c0)AND(x'')))AND(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN '418720866' THEN t0.c0 ELSE t0.c0 END)OR(t0.c0 COLLATE NOCASE)))OR(((NULL)IS(t0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)IS(t0.c0));
SELECT * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN '418720866' THEN t0.c0 ELSE t0.c0 END)OR(t0.c0 COLLATE NOCASE)))OR(((NULL)IS(t0.c0))))) ORDER BY ((((t0.c0)+(t0.c0)))&(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST, t0.c0  NULLS LAST, ((CAST(t0.c0 AS INTEGER))OR(((((((t0.c0)AND(x'')))AND(t0.c0)))OR(t0.c0))))  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)+(t0.c0)))&(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST, t0.c0  NULLS LAST, ((CAST(t0.c0 AS INTEGER))OR(((((((t0.c0)AND(x'')))AND(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0)IS(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ORDER BY (- (t0.c0)) DESC  NULLS FIRST, (t0.c0 IN (t0.c0, t0.c0)) COLLATE RTRIM, (((t0.c0, t0.c0)) BETWEEN (((NOT (t0.c0)), ((t0.c0) IS TRUE))) AND ((t0.c0, ((t0.c0)==('l')))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0)IS(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ORDER BY (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE NOCASE LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((- (t0.c0)))<=(((t0.c0)>(t0.c0))))) ORDER BY (((((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))OR(((0.06936785727483163)>=(t0.c0)))))AND(((((((t0.c0)AND(-266835620)))AND(t0.c0)))OR(t0.c0)))), (((((((((((+ (t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c0) NOT NULL))))OR((((t0.c0)) BETWEEN (('+#At')) AND ((t0.c0))))))AND(CAST(t0.c0 AS INTEGER))))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((- (t0.c0)))<=(((t0.c0)>(t0.c0)))))AND(t0.c0))) ORDER BY (((((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))OR(((0.06936785727483163)>=(t0.c0)))))AND(((((((t0.c0)AND(-266835620)))AND(t0.c0)))OR(t0.c0)))), (((((((((((+ (t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c0) NOT NULL))))OR((((t0.c0)) BETWEEN (('+#At')) AND ((t0.c0))))))AND(CAST(t0.c0 AS INTEGER))))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((- (t0.c0)))<=(((t0.c0)>(t0.c0))))) ORDER BY (((((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))OR(((0.06936785727483163)>=(t0.c0)))))AND(((((((t0.c0)AND(-266835620)))AND(t0.c0)))OR(t0.c0)))), (((((((((((+ (t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c0) NOT NULL))))OR((((t0.c0)) BETWEEN (('+#At')) AND ((t0.c0))))))AND(CAST(t0.c0 AS INTEGER))))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((- (t0.c0)))<=(((t0.c0)>(t0.c0)))))AND(t0.c0))) ORDER BY (((((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))OR(((0.06936785727483163)>=(t0.c0)))))AND(((((((t0.c0)AND(-266835620)))AND(t0.c0)))OR(t0.c0)))), (((((((((((+ (t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c0) NOT NULL))))OR((((t0.c0)) BETWEEN (('+#At')) AND ((t0.c0))))))AND(CAST(t0.c0 AS INTEGER))))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(0.17098911548593154)))AND(t0.c0)) COLLATE BINARY) ORDER BY (+ (0.9070734578182803)) DESC, (~ (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(0.17098911548593154)))AND(t0.c0)) COLLATE BINARY) ORDER BY t0.c0 DESC, CAST(CAST('2071544845' AS INTEGER) AS INTEGER)  NULLS FIRST, (((t0.c0, '-619418653', t0.c0)) BETWEEN ((t0.c0, (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, NULL, 0.5938432010824796)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)+(t0.c0)))) AND ((CAST(t0.c0 AS NUMERIC), (NOT (t0.c0)), ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ASC  NULLS FIRST, CASE x''  WHEN ((t0.c0) ISNULL) THEN (t0.c0 IN ()) WHEN NULL THEN 0.9098039876512218 ELSE CAST(t0.c0 AS TEXT) END DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((MAX(t0.c0, 0x19211fe9), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((0.888293443226404, t0.c0))), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) AND ((CAST('188415772' AS BLOB), ((t0.c0)>>(t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, x'28')) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))))) ORDER BY t0.c0 DESC, CAST(CAST('2071544845' AS INTEGER) AS INTEGER)  NULLS FIRST, (((t0.c0, '-619418653', t0.c0)) BETWEEN ((t0.c0, (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, NULL, 0.5938432010824796)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)+(t0.c0)))) AND ((CAST(t0.c0 AS NUMERIC), (NOT (t0.c0)), ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ASC  NULLS FIRST, CASE x''  WHEN ((t0.c0) ISNULL) THEN (t0.c0 IN ()) WHEN NULL THEN 0.9098039876512218 ELSE CAST(t0.c0 AS TEXT) END DESC;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(0.17098911548593154)))AND(t0.c0)) COLLATE BINARY) ORDER BY (+ (0.9070734578182803)) DESC, (~ (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(0.17098911548593154)))AND(t0.c0)) COLLATE BINARY) ORDER BY t0.c0 DESC, CAST(CAST('2071544845' AS INTEGER) AS INTEGER)  NULLS FIRST, (((t0.c0, '-619418653', t0.c0)) BETWEEN ((t0.c0, (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, NULL, 0.5938432010824796)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)+(t0.c0)))) AND ((CAST(t0.c0 AS NUMERIC), (NOT (t0.c0)), ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ASC  NULLS FIRST, CASE x''  WHEN ((t0.c0) ISNULL) THEN (t0.c0 IN ()) WHEN NULL THEN 0.9098039876512218 ELSE CAST(t0.c0 AS TEXT) END DESC INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((MAX(t0.c0, 0x19211fe9), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((0.888293443226404, t0.c0))), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) AND ((CAST('188415772' AS BLOB), ((t0.c0)>>(t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, x'28')) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))))) ORDER BY t0.c0 DESC, CAST(CAST('2071544845' AS INTEGER) AS INTEGER)  NULLS FIRST, (((t0.c0, '-619418653', t0.c0)) BETWEEN ((t0.c0, (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, NULL, 0.5938432010824796)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)+(t0.c0)))) AND ((CAST(t0.c0 AS NUMERIC), (NOT (t0.c0)), ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ASC  NULLS FIRST, CASE x''  WHEN ((t0.c0) ISNULL) THEN (t0.c0 IN ()) WHEN NULL THEN 0.9098039876512218 ELSE CAST(t0.c0 AS TEXT) END DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((ABS(DISTINCT NULL), (+ (t0.c0)), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) AND ((((t0.c0)GLOB(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)=('f'))))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((ABS(DISTINCT NULL), (+ (t0.c0)), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) AND ((((t0.c0)GLOB(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)>=('f'))))))AND((- (((t0.c0)IS(t0.c0))))))) ORDER BY (~ (t0.c0)) COLLATE NOCASE ASC LIMIT 0x2;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((ABS(DISTINCT NULL), (+ (t0.c0)), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) AND ((((t0.c0)GLOB(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)=('f'))))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((ABS(DISTINCT NULL), (+ (t0.c0)), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) AND ((((t0.c0)GLOB(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)>=('f'))))))AND((- (((t0.c0)IS(t0.c0))))))) ORDER BY (~ (t0.c0)) COLLATE NOCASE ASC LIMIT 0x2;
SELECT * FROM t0 WHERE (((((t0.c0)>(t0.c0)))>=(CASE t0.c0  WHEN x'72' THEN t0.c0 WHEN t0.c0 THEN '1498301294' ELSE t0.c0 END)));
SELECT * FROM t0 WHERE (((((t0.c0)>(t0.c0)))>=(CASE t0.c0  WHEN x'72' THEN t0.c0 WHEN t0.c0 THEN '1498301294' ELSE t0.c0 END))) ORDER BY ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(-1265443287)))>(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC, (t0.c0 COLLATE BINARY IN ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, '0')) AND ((NULL, t0.c0))))) DESC  NULLS FIRST LIMIT 1;
SELECT * FROM t0 WHERE (((((t0.c0)>(t0.c0)))>=(CASE t0.c0  WHEN x'72' THEN t0.c0 WHEN t0.c0 THEN '1498301294' ELSE t0.c0 END)));
SELECT * FROM t0 WHERE (((((t0.c0)>(t0.c0)))>=(CASE t0.c0  WHEN x'72' THEN t0.c0 WHEN t0.c0 THEN '1498301294' ELSE t0.c0 END))) ORDER BY ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(-1265443287)))>(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC, (t0.c0 COLLATE BINARY IN ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, '0')) AND ((NULL, t0.c0))))) DESC  NULLS FIRST LIMIT 1;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)>>(t0.c0)) COLLATE BINARY) ORDER BY CASE WHEN ((t0.c0)IS NOT(t0.c0)) THEN (((t0.c0, t0.c0))<((t0.c0, t0.c0))) WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)<<(t0.c0)) END DESC, ((CAST(t0.c0 AS NUMERIC))GLOB((t0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>>(t0.c0)) COLLATE BINARY)AND((+ (t0.c0))))) ORDER BY CASE WHEN ((t0.c0)IS NOT(t0.c0)) THEN (((t0.c0, t0.c0))<((t0.c0, t0.c0))) WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)<<(t0.c0)) END DESC, ((CAST(t0.c0 AS NUMERIC))GLOB((t0.c0 IN ()))) ASC  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (((x'') BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0)/(t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB))|(t0.c0)) ASC, ABS(DISTINCT (t0.c0 IN (t0.c0))) DESC;
SELECT DISTINCT * FROM t0 WHERE (((x'') BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0)/(t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB))|(t0.c0)) ASC, ABS(DISTINCT (t0.c0 IN (t0.c0))) DESC LIMIT 0;
SELECT ALL * FROM t0 WHERE (((x'') BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0)/(t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB))|(t0.c0)) ASC, ABS(DISTINCT (t0.c0 IN (t0.c0))) DESC;
SELECT DISTINCT * FROM t0 WHERE (((x'') BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((t0.c0)/(t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB))|(t0.c0)) ASC, ABS(DISTINCT (t0.c0 IN (t0.c0))) DESC LIMIT 0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((t0.c0)))) ORDER BY ((-1939732175) BETWEEN (NULLIF(DISTINCT t0.c0, t0.c0)) AND (t0.c0)), ((t0.c0)<(NULL)) COLLATE NOCASE  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE))) ORDER BY ((0Xffffffff8c620931) BETWEEN (NULLIF(DISTINCT t0.c0, t0.c0)) AND (t0.c0)), ((t0.c0)<(NULL)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c0 AS REAL), CAST(t0.c0 AS REAL), ((t0.c0)|(t0.c0))))>=(('0.26250284691374537', (('-1623085861')LIKE(t0.c0)), t0.c0 COLLATE BINARY))));
SELECT DISTINCT * FROM t0 WHERE ((((((CAST(t0.c0 AS REAL), CAST(t0.c0 AS REAL), ((t0.c0)|(t0.c0))))=(('0.26250284691374537', (('-1623085861')LIKE(t0.c0)), t0.c0 COLLATE BINARY))))AND(((('5')<>(t0.c0)) IN ())))) ORDER BY COALESCE(t0.c0 COLLATE RTRIM, CHAR(0Xffffffffe0421af0, t0.c0, t0.c0, '-1273026176')), UNLIKELY(TRIM(t0.c0, t0.c0)) ASC, ((((t0.c0)IS(t0.c0)))!=((x'' IN (t0.c0, t0.c0)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))-(((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY COALESCE(t0.c0 COLLATE RTRIM, CHAR(0Xffffffffe0421af0, t0.c0, t0.c0, '-1273026176')), UNLIKELY(TRIM(t0.c0, t0.c0)) ASC, ((((t0.c0)IS(t0.c0)))<>((x'' IN (t0.c0, t0.c0)))) LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c0 AS REAL), CAST(t0.c0 AS REAL), ((t0.c0)|(t0.c0))))>=(('0.26250284691374537', (('-1623085861')LIKE(t0.c0)), t0.c0 COLLATE BINARY))));
SELECT DISTINCT * FROM t0 WHERE ((((((CAST(t0.c0 AS REAL), CAST(t0.c0 AS REAL), ((t0.c0)|(t0.c0))))=(('0.26250284691374537', (('-1623085861')LIKE(t0.c0)), t0.c0 COLLATE BINARY))))AND(((('5')<>(t0.c0)) IN ())))) ORDER BY COALESCE(t0.c0 COLLATE RTRIM, CHAR(0Xffffffffe0421af0, t0.c0, t0.c0, '-1273026176')), UNLIKELY(TRIM(t0.c0, t0.c0)) ASC, ((((t0.c0)IS(t0.c0)))!=((x'' IN (t0.c0, t0.c0)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))-(((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY COALESCE(t0.c0 COLLATE RTRIM, CHAR(0Xffffffffe0421af0, t0.c0, t0.c0, '-1273026176')), UNLIKELY(TRIM(t0.c0, t0.c0)) ASC, ((((t0.c0)IS(t0.c0)))<>((x'' IN (t0.c0, t0.c0)))) LIMIT 1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) ISNULL))>((NOT (t0.c0))))) ORDER BY (t0.c0 IN ()) COLLATE BINARY  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) ISNULL))>((NOT (t0.c0))))) ORDER BY CASE (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((0X25f2c0c6, t0.c0, t0.c0)))  WHEN CASE -3.30942389E8  WHEN t0.c0 THEN t0.c0 END THEN t0.c0 COLLATE BINARY WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (+ (t0.c0)) END  NULLS LAST, ((((t0.c0)<(t0.c0))) BETWEEN (CHAR(t0.c0)) AND (((t0.c0) ISNULL)))  NULLS FIRST LIMIT 0x0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((HEX(t0.c0) IN ((NOT (t0.c0)))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((HEX(t0.c0) IN ((NOT (t0.c0)))))AND(((LOWER(DISTINCT t0.c0)) BETWEEN (((t0.c0)OR(t0.c0))) AND (((t0.c0)<<(t0.c0))))))) ORDER BY ((((((((((t0.c0)>>(t0.c0)))OR(HEX(DISTINCT t0.c0))))OR((x'' IN (t0.c0)))))AND(t0.c0)))AND(load_extension(t0.c0))), (((t0.c0)) BETWEEN ((((t0.c0)<=(t0.c0)))) AND ((((t0.c0)IS(t0.c0))))) ASC, CASE WHEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) NOT NULL) WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN UNLIKELY(t0.c0) WHEN x'' THEN ((t0.c0)AND(t0.c0)) WHEN ((t0.c0) NOTNULL) THEN (x'29' IN (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN SUBSTR(t0.c0, t0.c0) END LIMIT 0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY ((((((((((t0.c0)>>(t0.c0)))OR(HEX(DISTINCT t0.c0))))OR((x'' IN (t0.c0)))))AND(t0.c0)))AND(load_extension(t0.c0))), (((t0.c0)) BETWEEN ((((t0.c0)<=(t0.c0)))) AND ((((t0.c0)IS(t0.c0))))) ASC, CASE WHEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) NOT NULL) WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN UNLIKELY(t0.c0) WHEN x'' THEN ((t0.c0)AND(t0.c0)) WHEN ((t0.c0) NOTNULL) THEN (x'29' IN (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN SUBSTR(t0.c0, t0.c0) END LIMIT 0;
SELECT * FROM t0 WHERE (t0.c0 COLLATE BINARY) ORDER BY x'';
SELECT DISTINCT * FROM t0 WHERE (t0.c0 COLLATE BINARY) ORDER BY (- ((- (t0.c0)))) DESC  NULLS FIRST, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM, (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))>=((t0.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c0 COLLATE BINARY) ORDER BY x'';
SELECT DISTINCT * FROM t0 WHERE (t0.c0 COLLATE BINARY) ORDER BY (- ((- (t0.c0)))) DESC  NULLS FIRST, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM, (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))>=((t0.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE) IS TRUE));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY (NOT (NULLIF(t0.c0, t0.c0)))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))!=(CAST(t0.c0 AS TEXT))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))>(CAST(t0.c0 AS TEXT)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)||(t0.c0)))OR(t0.c0 COLLATE RTRIM)))AND(((t0.c0)==(-4.1483633E8)))));
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))!=(CAST(t0.c0 AS TEXT))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))>(CAST(t0.c0 AS TEXT)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)||(t0.c0)))OR(t0.c0 COLLATE RTRIM)))AND(((t0.c0)==(-4.1483633E8)))));
SELECT ALL * FROM t0 WHERE ((UPPER(DISTINCT t0.c0) IN (((((x'c9bf9f')AND(t0.c0)))AND(t0.c0))))) ORDER BY ((((((((((t0.c0)>(t0.c0)))AND(t0.c0)))OR(((t0.c0)<(t0.c0)))))AND(((t0.c0) NOTNULL))))AND(NULLIF(t0.c0, t0.c0)))  NULLS LAST, ((((x'')*(t0.c0)))-(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((UPPER(DISTINCT t0.c0) IN (((((x'c9bf9f')AND(t0.c0)))AND(t0.c0))))) ORDER BY ((((((((((t0.c0)>(t0.c0)))AND(t0.c0)))OR(((t0.c0)<(t0.c0)))))AND(((t0.c0) NOTNULL))))AND(NULLIF(t0.c0, t0.c0)))  NULLS LAST, ((((x'')*(t0.c0)))-(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END)) ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0 WHERE ((UPPER(DISTINCT t0.c0) IN (((((x'c9bf9f')AND(t0.c0)))AND(t0.c0))))) ORDER BY ((((((((((t0.c0)>(t0.c0)))AND(t0.c0)))OR(((t0.c0)<(t0.c0)))))AND(((t0.c0) NOTNULL))))AND(NULLIF(t0.c0, t0.c0)))  NULLS LAST, ((((x'')*(t0.c0)))-(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((UPPER(DISTINCT t0.c0) IN (((((x'c9bf9f')AND(t0.c0)))AND(t0.c0))))) ORDER BY ((((((((((t0.c0)>(t0.c0)))AND(t0.c0)))OR(((t0.c0)<(t0.c0)))))AND(((t0.c0) NOTNULL))))AND(NULLIF(t0.c0, t0.c0)))  NULLS LAST, ((((x'')*(t0.c0)))-(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END)) ASC  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) AS TEXT));
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) AS TEXT)) INTERSECT SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))|((((t0.c0)) BETWEEN ((t0.c0)) AND ((0Xffffffffff6ee69b))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((0xffffffff8ef9feef, t0.c0, 'yS3&*'))>=((t0.c0, t0.c0, t0.c0))))-(((t0.c0) NOTNULL))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((((0Xffffffff8ef9feef, t0.c0, 'yS3&*'))>((t0.c0, t0.c0, t0.c0))))-(((t0.c0) NOTNULL))))AND(((((t0.c0)<(t0.c0))) BETWEEN (((t0.c0)AND(0.10852608012400333))) AND ((t0.c0 IN (t0.c0, t0.c0))))))) ORDER BY 0.6625322120005173, CASE (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, NULL)))  WHEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN ((x'6c5cf6f6')GLOB(t0.c0)) ELSE ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) END DESC LIMIT 0;
SELECT MIN(t0.c0) FROM t0 WHERE (NULL) ORDER BY (NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), ((NULL)IS NOT(t0.c0 COLLATE NOCASE)) ASC;
SELECT MIN(t0.c0) FROM t0 WHERE (NULL) ORDER BY RTRIM(GLOB(t0.c0, t0.c0))  NULLS LAST LIMIT 1 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY RTRIM(GLOB(t0.c0, t0.c0))  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)|(NULL)) AS NUMERIC)) ORDER BY (((((((NOT (t0.c0)))AND(((t0.c0)||(t0.c0)))))AND(ABS(DISTINCT t0.c0))))AND(LIKELY(DISTINCT t0.c0)));
SELECT ALL * FROM t0 WHERE (((CAST(((t0.c0)|(NULL)) AS NUMERIC))AND((~ ((t0.c0 IN (t0.c0))))))) ORDER BY (((((((NOT (t0.c0)))AND(((t0.c0)||(t0.c0)))))AND(ABS(DISTINCT t0.c0))))AND(LIKELY(DISTINCT t0.c0))) LIMIT 0x2;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)|(NULL)) AS NUMERIC)) ORDER BY (((((((NOT (t0.c0)))AND(((t0.c0)||(t0.c0)))))AND(ABS(DISTINCT t0.c0))))AND(LIKELY(DISTINCT t0.c0)));
SELECT ALL * FROM t0 WHERE (((CAST(((t0.c0)|(NULL)) AS NUMERIC))AND((~ ((t0.c0 IN (t0.c0))))))) ORDER BY (((((((NOT (t0.c0)))AND(((t0.c0)||(t0.c0)))))AND(ABS(DISTINCT t0.c0))))AND(LIKELY(DISTINCT t0.c0))) LIMIT 0x2;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE RTRIM WHEN IFNULL(t0.c0, t0.c0) THEN (('(?')LIKE('1714103594')) WHEN (((t0.c0))<=(('1453601553'))) THEN LIKELY(t0.c0) END) ORDER BY t0.c0 COLLATE BINARY ASC  NULLS FIRST, t0.c0 COLLATE RTRIM  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c0 COLLATE BINARY)) ASC, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL) DESC;
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE RTRIM WHEN IFNULL(t0.c0, t0.c0) THEN (('(?')LIKE('1714103594')) WHEN (((t0.c0))=(('1453601553'))) THEN LIKELY(t0.c0) END)AND(((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0) IS TRUE)))))) ORDER BY t0.c0 COLLATE BINARY ASC  NULLS FIRST, t0.c0 COLLATE RTRIM  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c0 COLLATE BINARY)) ASC, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL) DESC INTERSECT SELECT COUNT(*) FROM t0 WHERE ((((UPPER(t0.c0), ((t0.c0)<=(t0.c0)), '6k\Xá³/D<', CASE WHEN t0.c0 THEN t0.c0 END))=((((t0.c0)OR(t0.c0)), (- (t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, x'42')) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY t0.c0 COLLATE BINARY ASC  NULLS FIRST, t0.c0 COLLATE RTRIM  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c0 COLLATE BINARY)) ASC, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL) DESC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (TRIM(t0.c0)) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT MAX(t0.c0) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (TRIM(t0.c0)) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((0Xffffffffe0683eeb, ((t0.c0)-(t0.c0)), ((t0.c0)GLOB(t0.c0)))) AND ((((t0.c0)AND(t0.c0)), ((t0.c0) NOT NULL), ((t0.c0) NOTNULL)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)>=((((t0.c0))>=((NULL)))))) ORDER BY ((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((t0.c0 IN ()))))AND(x'')))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)>=((((t0.c0))>=((NULL)))))) ORDER BY ((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((t0.c0 IN ()))))AND(x'')))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT ALL * FROM t0 WHERE (((IFNULL(t0.c0, t0.c0)) NOT BETWEEN (TYPEOF(DISTINCT t0.c0)) AND (NULL)));
SELECT DISTINCT * FROM t0 WHERE (((IFNULL(t0.c0, t0.c0)) NOT BETWEEN (TYPEOF(DISTINCT t0.c0)) AND (NULL))) ORDER BY CAST(((t0.c0) IS TRUE) AS NUMERIC)  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0 WHERE (((IFNULL(t0.c0, t0.c0)) NOT BETWEEN (TYPEOF(DISTINCT t0.c0)) AND (NULL)));
SELECT DISTINCT * FROM t0 WHERE (((IFNULL(t0.c0, t0.c0)) NOT BETWEEN (TYPEOF(DISTINCT t0.c0)) AND (NULL))) ORDER BY CAST(((t0.c0) IS TRUE) AS NUMERIC)  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))>=((NULL)))) BETWEEN (x'') AND (RTRIM(t0.c0))));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))==((NULL)))) BETWEEN (x'') AND (RTRIM(t0.c0)))) ORDER BY ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))LIKE(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST, (+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT * FROM t0 WHERE ((+ (((t0.c0) ISNULL)))) ORDER BY LTRIM(((t0.c0)IS NOT(t0.c0))), ((CASE WHEN t0.c0 THEN x'0a461f' END)*(t0.c0)) ASC;
SELECT * FROM t0 WHERE ((((+ (((t0.c0) ISNULL))))AND(((((t0.c0)-(t0.c0))) BETWEEN (NULL) AND (t0.c0))))) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM ASC LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN t0.c0 WHEN ((t0.c0)<=(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((((NULL)AND(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0)IS NOT(t0.c0)) THEN (NOT (t0.c0)) END) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM ASC LIMIT 0;
SELECT * FROM t0 WHERE ((+ (((t0.c0) ISNULL)))) ORDER BY LTRIM(((t0.c0)IS NOT(t0.c0))), ((CASE WHEN t0.c0 THEN x'0a461f' END)*(t0.c0)) ASC;
SELECT * FROM t0 WHERE ((((+ (((t0.c0) ISNULL))))AND(((((t0.c0)-(t0.c0))) BETWEEN (NULL) AND (t0.c0))))) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM ASC LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN t0.c0 WHEN ((t0.c0)<=(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((((NULL)AND(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0)IS NOT(t0.c0)) THEN (NOT (t0.c0)) END) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM ASC LIMIT 0;
SELECT ALL * FROM t0 WHERE (0.40897783226238893);
SELECT DISTINCT * FROM t0 WHERE (0.40897783226238893) ORDER BY x'fc' DESC  NULLS LAST, -1.2398054E9, CASE WHEN 2.119975713E9 THEN (+ (t0.c0)) END  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (RTRIM(t0.c0)) ORDER BY x'fc' DESC  NULLS LAST, -1.2398054E9, CASE WHEN 2.119975713E9 THEN (+ (t0.c0)) END  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (0.40897783226238893);
SELECT DISTINCT * FROM t0 WHERE (0.40897783226238893) ORDER BY x'fc' DESC  NULLS LAST, -1.2398054E9, CASE WHEN 2.119975713E9 THEN (+ (t0.c0)) END  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (RTRIM(t0.c0)) ORDER BY x'fc' DESC  NULLS LAST, -1.2398054E9, CASE WHEN 2.119975713E9 THEN (+ (t0.c0)) END  NULLS FIRST LIMIT 0X0;
SELECT MAX(t0.c0) FROM t0 WHERE (((((t0.c0) IS TRUE))+(((t0.c0)<>(t0.c0)))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((t0.c0) IS TRUE))+(((t0.c0)>(t0.c0))))) INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELIHOOD(NULL, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ORDER BY CAST(t0.c0 COLLATE BINARY AS INTEGER)  NULLS LAST, CAST(((t0.c0)|(t0.c0)) AS INTEGER) DESC, ((((CAST(t0.c0 AS NUMERIC))AND(((t0.c0)GLOB(t0.c0)))))AND((((t0.c0, t0.c0, t0.c0)) BETWEEN (('1642934440', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((LIKELIHOOD(NULL, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))AND((((+ (x'557b')))GLOB(((((((NULL)AND(x'9ca9')))OR(t0.c0)))AND(t0.c0))))))) ORDER BY CAST(t0.c0 COLLATE BINARY AS INTEGER)  NULLS LAST, CAST(((t0.c0)|(t0.c0)) AS INTEGER) DESC, ((((CAST(t0.c0 AS NUMERIC))AND(((t0.c0)GLOB(t0.c0)))))AND((((t0.c0, t0.c0, t0.c0)) BETWEEN (('1642934440', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))  NULLS FIRST LIMIT 0x0;
SELECT * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY CAST(t0.c0 AS REAL), (NOT (t0.c0)) COLLATE BINARY ASC  NULLS FIRST LIMIT 0X5;
SELECT * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY CAST(t0.c0 AS REAL), (NOT (t0.c0)) COLLATE BINARY ASC  NULLS FIRST LIMIT 0X5;
SELECT ALL * FROM t0 WHERE (CAST(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS REAL));
SELECT DISTINCT * FROM t0 WHERE (CAST(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS REAL)) ORDER BY ((COALESCE(t0.c0, t0.c0, t0.c0))<<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c0)<<(t0.c0)) AS TEXT)) ORDER BY ((COALESCE(t0.c0, t0.c0, t0.c0))<<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC LIMIT 1;
SELECT ALL * FROM t0 WHERE (CAST(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS REAL));
SELECT DISTINCT * FROM t0 WHERE (CAST(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS REAL)) ORDER BY ((COALESCE(t0.c0, t0.c0, t0.c0))<<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c0)<<(t0.c0)) AS TEXT)) ORDER BY ((COALESCE(t0.c0, t0.c0, t0.c0))<<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC LIMIT 1;
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT BETWEEN (NULL) AND ((((t0.c0))<=((0.3970818771870539))))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (NULL) AND ((((t0.c0))<=((0.3970818771870539))))))AND(CASE WHEN ((t0.c0)>('0.32401030556779786')) THEN CASE t0.c0  WHEN '-1786844958' THEN t0.c0 ELSE t0.c0 END END))) ORDER BY ((t0.c0 COLLATE BINARY)||(('[s' IN ()))), CAST(CAST(t0.c0 AS TEXT) AS NUMERIC) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN (t0.c0, x'')))GLOB('-1112927373'))) ORDER BY ((t0.c0 COLLATE BINARY)||(('[s' IN ()))), CAST(CAST(t0.c0 AS TEXT) AS NUMERIC) ASC;
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT BETWEEN (NULL) AND ((((t0.c0))<=((0.3970818771870539))))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (NULL) AND ((((t0.c0))<=((0.3970818771870539))))))AND(CASE WHEN ((t0.c0)>('0.32401030556779786')) THEN CASE t0.c0  WHEN '-1786844958' THEN t0.c0 ELSE t0.c0 END END))) ORDER BY ((t0.c0 COLLATE BINARY)||(('[s' IN ()))), CAST(CAST(t0.c0 AS TEXT) AS NUMERIC) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN (t0.c0, x'')))GLOB('-1112927373'))) ORDER BY ((t0.c0 COLLATE BINARY)||(('[s' IN ()))), CAST(CAST(t0.c0 AS TEXT) AS NUMERIC) ASC;
SELECT * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((t0.c0)IS(x'ad1c'))) AND (((t0.c0) IS FALSE)))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((~ ('-235360116'))) AND (CAST(t0.c0 AS REAL)))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((t0.c0)IS(x'ad1c'))) AND (((t0.c0) IS FALSE))))AND((NULL IN ())))) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))) LIMIT 0x5;
SELECT * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((t0.c0)IS(x'ad1c'))) AND (((t0.c0) IS FALSE)))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((~ ('-235360116'))) AND (CAST(t0.c0 AS REAL)))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((t0.c0)IS(x'ad1c'))) AND (((t0.c0) IS FALSE))))AND((NULL IN ())))) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))) LIMIT 0x5;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE)>=(((t0.c0)<=(t0.c0))))) ORDER BY NULLIF((t0.c0 IN ()), NULLIF(DISTINCT t0.c0, t0.c0))  NULLS FIRST, t0.c0 ASC  NULLS LAST, (((('601852586') NOT NULL)) BETWEEN ((t0.c0 IN (t0.c0))) AND ((('') IS TRUE))) ASC;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE)>(((t0.c0)==(t0.c0))))) ORDER BY NULLIF((t0.c0 IN ()), NULLIF(DISTINCT t0.c0, t0.c0))  NULLS FIRST, t0.c0 ASC  NULLS LAST, (((('601852586') NOT NULL)) BETWEEN ((t0.c0 IN (t0.c0))) AND ((('') IS TRUE))) ASC INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN ((t0.c0) IS TRUE) THEN (((t0.c0, t0.c0)) BETWEEN ((x'cb33', t0.c0)) AND ((t0.c0, t0.c0))) END) ORDER BY NULLIF((t0.c0 IN ()), NULLIF(DISTINCT t0.c0, t0.c0))  NULLS FIRST, t0.c0 ASC  NULLS LAST, (((('601852586') NOT NULL)) BETWEEN ((t0.c0 IN (t0.c0))) AND ((('') IS TRUE))) ASC;
SELECT * FROM t0 WHERE (CAST(((0.6657221857405083) NOT BETWEEN (t0.c0) AND (t0.c0)) AS REAL)) ORDER BY ((((t0.c0)<<(t0.c0))) IS FALSE)  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(((0.6657221857405083) NOT BETWEEN (t0.c0) AND (t0.c0)) AS REAL)) ORDER BY ((((t0.c0)<<(t0.c0))) IS FALSE)  NULLS FIRST LIMIT 3;
SELECT * FROM t0 WHERE (CAST(((0.6657221857405083) NOT BETWEEN (t0.c0) AND (t0.c0)) AS REAL)) ORDER BY ((((t0.c0)<<(t0.c0))) IS FALSE)  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(((0.6657221857405083) NOT BETWEEN (t0.c0) AND (t0.c0)) AS REAL)) ORDER BY ((((t0.c0)<<(t0.c0))) IS FALSE)  NULLS FIRST LIMIT 3;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) ISNULL)) IS FALSE));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) ISNULL)) IS FALSE))AND(CASE WHEN LIKELIHOOD(t0.c0, t0.c0) THEN (+ (t0.c0)) ELSE (t0.c0 IN ()) END))) ORDER BY t0.c0 COLLATE RTRIM COLLATE BINARY  NULLS LAST, ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), '1282586232', CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))>((TYPEOF(t0.c0), '-1558517803', t0.c0 COLLATE NOCASE))) ASC LIMIT 1 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CASE (- (t0.c0))  WHEN CAST(x'' AS BLOB) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN NULL THEN ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) WHEN (((t0.c0, t0.c0))<((t0.c0, t0.c0))) THEN -1936744038 WHEN ((((((t0.c0)AND('976722786')))OR(t0.c0)))OR(t0.c0)) THEN CASE WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0)AND(t0.c0)) THEN '1369093385' ELSE load_extension(t0.c0) END) ORDER BY t0.c0 COLLATE RTRIM COLLATE BINARY  NULLS LAST, ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), '1282586232', CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))>((TYPEOF(t0.c0), '-1558517803', t0.c0 COLLATE NOCASE))) ASC LIMIT 1;
SELECT ALL * FROM t0 WHERE ((~ (t0.c0)));
SELECT ALL * FROM t0 WHERE ((~ (t0.c0))) ORDER BY CASE CAST(t0.c0 AS TEXT)  WHEN (+ (t0.c0)) THEN ((t0.c0)%(t0.c0)) WHEN (t0.c0 IN (t0.c0)) THEN LOWER(t0.c0) WHEN (NOT (t0.c0)) THEN t0.c0 ELSE ((0X55465326)||(t0.c0)) END;
SELECT ALL * FROM t0 WHERE ((~ (t0.c0)));
SELECT ALL * FROM t0 WHERE ((~ (t0.c0))) ORDER BY CASE CAST(t0.c0 AS TEXT)  WHEN (+ (t0.c0)) THEN ((t0.c0)%(t0.c0)) WHEN (t0.c0 IN (t0.c0)) THEN LOWER(t0.c0) WHEN (NOT (t0.c0)) THEN t0.c0 ELSE ((0X55465326)||(t0.c0)) END;
SELECT MAX(t0.c0) FROM t0 WHERE (((NULL)&((~ (t0.c0))))) ORDER BY CAST(((((t0.c0)AND(0.05933277498522638)))AND(t0.c0)) AS INTEGER), x'efb5'  NULLS FIRST, (t0.c0 IN (((((t0.c0)OR(t0.c0)))OR(t0.c0)), (NOT (t0.c0)))) DESC  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (((((NULL)&((~ (t0.c0)))))AND((((t0.c0)) BETWEEN (((((t0.c0)) NOT BETWEEN ((' ''')) AND ((t0.c0))))) AND (((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))))) ORDER BY '*'  NULLS LAST LIMIT 1 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (-9223372036854775808) ORDER BY '*'  NULLS LAST LIMIT 1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0)<=(t0.c0)) IN ())) ORDER BY CAST(CAST(t0.c0 AS REAL) AS BLOB) ASC  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0)<=(t0.c0)) IN ())) ORDER BY CAST(CAST(t0.c0 AS REAL) AS BLOB) ASC  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((NOT (t0.c0)), (((t0.c0))==((t0.c0))), (t0.c0 IN (t0.c0)), (((t0.c0, t0.c0, t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 717283822, 4.21601257E8, '612913984'))), (t0.c0 IN (t0.c0, t0.c0)), (t0.c0 IN ())))<>((((t0.c0)>>('ã!tNd?Hâ¬')), LIKE(t0.c0, t0.c0), ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)), t0.c0 COLLATE BINARY, ((((t0.c0)OR(t0.c0)))OR(241234946)), ((t0.c0) IS TRUE))))) ORDER BY CAST(CAST(t0.c0 AS REAL) AS BLOB) ASC  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ()))<((t0.c0 IN (t0.c0))))) ORDER BY ((0x4889504a) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0Xffffffff800d6e71 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((+ (t0.c0))))  NULLS LAST, (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0 IN ()))<((t0.c0 IN (t0.c0))))) ORDER BY ((0x4889504a) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0xffffffff800d6e71 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((+ (t0.c0))))  NULLS LAST, (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ()))<((t0.c0 IN (t0.c0))))) ORDER BY ((0x4889504a) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0Xffffffff800d6e71 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((+ (t0.c0))))  NULLS LAST, (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0 IN ()))<((t0.c0 IN (t0.c0))))) ORDER BY ((0x4889504a) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0xffffffff800d6e71 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((+ (t0.c0))))  NULLS LAST, (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST LIMIT 0X1;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) IS TRUE));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) NOTNULL)) IS TRUE))AND((((t0.c0 IN (t0.c0, t0.c0)))/(t0.c0 COLLATE RTRIM)))));
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)||(t0.c0)) THEN t0.c0 WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN (((t0.c0))>=((t0.c0))) END);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)||(t0.c0)) THEN t0.c0 WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN (((t0.c0))>=((t0.c0))) END) ORDER BY (((t0.c0)&(t0.c0)) IN ()) ASC, ((((((((((t0.c0)AND(x'')))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((t0.c0)<(t0.c0)))) ASC  NULLS FIRST, (NOT (t0.c0)) COLLATE BINARY DESC, ((((((((t0.c0 COLLATE RTRIM)OR(ROUND(t0.c0, t0.c0))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))OR(((t0.c0) ISNULL)))  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE ((((- (0Xfffffffff303769f)))AND(((t0.c0) NOT NULL)))) ORDER BY (((t0.c0)&(t0.c0)) IN ()) ASC, ((((((((((t0.c0)AND(x'')))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((t0.c0)<(t0.c0)))) ASC  NULLS FIRST, (NOT (t0.c0)) COLLATE BINARY DESC, ((((((((t0.c0 COLLATE RTRIM)OR(ROUND(t0.c0, t0.c0))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))OR(((t0.c0) ISNULL)))  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)||(t0.c0)) THEN t0.c0 WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN (((t0.c0))>=((t0.c0))) END);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)||(t0.c0)) THEN t0.c0 WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN (((t0.c0))>=((t0.c0))) END) ORDER BY (((t0.c0)&(t0.c0)) IN ()) ASC, ((((((((((t0.c0)AND(x'')))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((t0.c0)<(t0.c0)))) ASC  NULLS FIRST, (NOT (t0.c0)) COLLATE BINARY DESC, ((((((((t0.c0 COLLATE RTRIM)OR(ROUND(t0.c0, t0.c0))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))OR(((t0.c0) ISNULL)))  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE ((((- (0Xfffffffff303769f)))AND(((t0.c0) NOT NULL)))) ORDER BY (((t0.c0)&(t0.c0)) IN ()) ASC, ((((((((((t0.c0)AND(x'')))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((t0.c0)<(t0.c0)))) ASC  NULLS FIRST, (NOT (t0.c0)) COLLATE BINARY DESC, ((((((((t0.c0 COLLATE RTRIM)OR(ROUND(t0.c0, t0.c0))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))OR(((t0.c0) ISNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (0.3802418105792682) ORDER BY (((~ (t0.c0)))>>(CAST(t0.c0 AS REAL))) ASC  NULLS FIRST, CASE t0.c0  WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c0) NOT BETWEEN (0.5061153635630107) AND (t0.c0)) ELSE (t0.c0 IN (t0.c0, t0.c0)) END DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (0.3802418105792682) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)%(CASE WHEN t0.c0 THEN NULL ELSE t0.c0 END))  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS BLOB))) AND (((NOT (t0.c0)))));
SELECT * FROM t0 INDEXED BY i29 WHERE (((((t0.c0 COLLATE NOCASE)AND(((t0.c0)!=(t0.c0)))))OR(t0.c0 COLLATE RTRIM)));
SELECT * FROM t0 INDEXED BY i29 WHERE (((((((t0.c0 COLLATE NOCASE)AND(((t0.c0)!=(t0.c0)))))OR(t0.c0 COLLATE RTRIM)))AND(highlight(((t0.c0)-(NULL)), t0.c0 COLLATE NOCASE, CASE WHEN t0.c0 THEN t0.c0 END, -1031618406))));
SELECT * FROM t0 INDEXED BY i29 WHERE (((((t0.c0 COLLATE NOCASE)AND(((t0.c0)!=(t0.c0)))))OR(t0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(LOWER(DISTINCT t0.c0))))OR((('qI8')>>('1578054301')))));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(LOWER(DISTINCT t0.c0))))OR((('qI8')>>('1578054301')))))AND(SUBSTR(((((t0.c0)AND(t0.c0)))OR(t0.c0)), CAST(x'25b3' AS TEXT))))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((x'3a2f') NOT BETWEEN (x'12') AND (t0.c0))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(LOWER(DISTINCT t0.c0))))OR((('qI8')>>('1578054301')))));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(LOWER(DISTINCT t0.c0))))OR((('qI8')>>('1578054301')))))AND(SUBSTR(((((t0.c0)AND(t0.c0)))OR(t0.c0)), CAST(x'25b3' AS TEXT))))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((x'3a2f') NOT BETWEEN (x'12') AND (t0.c0))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(CAST(t0.c0 AS REAL))))AND((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(CAST(t0.c0 AS REAL))))AND((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND((+ ((t0.c0 IN (t0.c0)))))));
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(CAST(t0.c0 AS REAL))))AND((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(CAST(t0.c0 AS REAL))))AND((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND((+ ((t0.c0 IN (t0.c0)))))));
SELECT MAX(t0.c0) FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB))AND(CAST(t0.c0 AS BLOB)))) ORDER BY ((('wê '))=(((t0.c0 IN ())))) DESC  NULLS FIRST, (((((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))AND(((t0.c0)>=(t0.c0)))))AND(((t0.c0) IS TRUE))))OR((t0.c0 IN (NULL))))  NULLS LAST LIMIT 3;
SELECT MIN(t0.c0) FROM t0 INDEXED BY i29 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOT BETWEEN ((((t0.c0))>=((NULL)))) AND (((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL)  NULLS LAST, (((t0.c0)>>(x'')) IN (((t0.c0)IS NOT(t0.c0)), (NOT (t0.c0))))  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 INDEXED BY i29 WHERE (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOT BETWEEN ((((t0.c0))>=((NULL)))) AND (((((t0.c0)OR(t0.c0)))OR(t0.c0)))))AND(0.13705501258862596))) ORDER BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (t0.c0) AND ((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((-1.882441895E9, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 'Jq', t0.c0, t0.c0))))) DESC, ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM  NULLS LAST LIMIT 0X0 INTERSECT SELECT MIN(t0.c0) FROM t0 INDEXED BY i29 WHERE (((((t0.c0)&(t0.c0))) NOTNULL)) ORDER BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (t0.c0) AND ((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((-1.882441895E9, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 'Jq', t0.c0, t0.c0))))) DESC, ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM  NULLS LAST LIMIT 0X0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((+ (DATETIME(t0.c0, t0.c0, t0.c0)))) ORDER BY CASE WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN ((t0.c0) NOTNULL) END  NULLS LAST, TRIM((~ (t0.c0)), (+ (t0.c0))) ASC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((+ (DATETIME(t0.c0, t0.c0, t0.c0)))) ORDER BY CASE WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN ((t0.c0) NOTNULL) END  NULLS LAST, TRIM((~ (t0.c0)), (+ (t0.c0))) ASC;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0 COLLATE BINARY)||(t0.c0 COLLATE RTRIM))  NULLS LAST, (NOT (CAST(t0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((t0.c0)AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN -2.0981282E8 THEN t0.c0 END) IS FALSE)))) ORDER BY ((t0.c0 COLLATE BINARY)||(t0.c0 COLLATE RTRIM))  NULLS LAST, (NOT (CAST(t0.c0 AS INTEGER))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0 COLLATE BINARY)||(t0.c0 COLLATE RTRIM))  NULLS LAST, (NOT (CAST(t0.c0 AS INTEGER))) DESC  NULLS LAST LIMIT 0;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0 COLLATE BINARY)||(t0.c0 COLLATE RTRIM))  NULLS LAST, (NOT (CAST(t0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((t0.c0)AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN -2.0981282E8 THEN t0.c0 END) IS FALSE)))) ORDER BY ((t0.c0 COLLATE BINARY)||(t0.c0 COLLATE RTRIM))  NULLS LAST, (NOT (CAST(t0.c0 AS INTEGER))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0 COLLATE BINARY)||(t0.c0 COLLATE RTRIM))  NULLS LAST, (NOT (CAST(t0.c0 AS INTEGER))) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)=(((t0.c0) NOT BETWEEN ('124102508') AND (t0.c0))))) ORDER BY t0.c0  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)=(((t0.c0) NOT BETWEEN ('124102508') AND (t0.c0)))))AND((((t0.c0)) NOT BETWEEN ((((t0.c0) IS TRUE))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE NULL END)))))) ORDER BY t0.c0  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)=(((t0.c0) NOT BETWEEN ('124102508') AND (t0.c0))))) ORDER BY t0.c0  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)=(((t0.c0) NOT BETWEEN ('124102508') AND (t0.c0)))))AND((((t0.c0)) NOT BETWEEN ((((t0.c0) IS TRUE))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE NULL END)))))) ORDER BY t0.c0  NULLS FIRST LIMIT 1;
SELECT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)AND(t0.c0)))%(((t0.c0) ISNULL))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)AND(t0.c0)))%(((t0.c0) ISNULL)))) ORDER BY t0.c0, CASE WHEN (t0.c0 IN ()) THEN (NOT (t0.c0)) WHEN (~ (t0.c0)) THEN CAST(NULL AS REAL) ELSE (t0.c0 IN (t0.c0, t0.c0)) END DESC  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN -1786844958 WHEN t0.c0 THEN t0.c0 END) IS FALSE));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN 0Xffffffff957ee8e2 WHEN t0.c0 THEN t0.c0 END) IS FALSE)) ORDER BY CAST(t0.c0 COLLATE RTRIM AS NUMERIC)  NULLS LAST, ((CAST(t0.c0 AS TEXT))>>(((t0.c0)||(t0.c0)))), CASE WHEN ((t0.c0) IS FALSE) THEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) END DESC  NULLS FIRST LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)LIKE(t0.c0)))OR(t0.c0 COLLATE NOCASE)))AND(x'dd')))OR((((t0.c0))<>((t0.c0))))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((t0.c0)LIKE(t0.c0)))OR(t0.c0 COLLATE NOCASE)))AND(x'dd')))OR((((t0.c0))<>((t0.c0)))))) LIMIT 3 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS REAL)) LIMIT 3;
SELECT COUNT(*) FROM t0 WHERE (t0.c0 COLLATE BINARY) ORDER BY NULLIF(((((t0.c0)AND(t0.c0)))OR(t0.c0)), (~ (t0.c0))), ((((t0.c0)>(t0.c0))) IS TRUE) ASC;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (t0.c0 COLLATE BINARY) ORDER BY ((((t0.c0) NOT BETWEEN ('-634861410') AND (t0.c0)))GLOB(t0.c0 COLLATE BINARY))  NULLS FIRST, -1e500  NULLS FIRST, (NOT (TIME(t0.c0, t0.c0, t0.c0, NULL))) DESC LIMIT 2;
SELECT * FROM t0 WHERE ((((((((NOT ('0.19324200832781058')))AND(CAST(0.3699513344076433 AS INTEGER))))OR(((t0.c0) IS FALSE))))OR((+ (t0.c0)))));
SELECT * FROM t0 WHERE ((((((((((NOT ('0.19324200832781058')))AND(CAST(0.3699513344076433 AS INTEGER))))OR(((t0.c0) IS FALSE))))OR((+ (t0.c0)))))AND(CAST(((t0.c0) ISNULL) AS INTEGER)))) ORDER BY (t0.c0 IN (t0.c0 COLLATE RTRIM)) ASC  NULLS LAST, (+ (t0.c0))  NULLS FIRST LIMIT 0x1;
SELECT * FROM t0 WHERE ((((((((NOT ('0.19324200832781058')))AND(CAST(0.3699513344076433 AS INTEGER))))OR(((t0.c0) IS FALSE))))OR((+ (t0.c0)))));
SELECT * FROM t0 WHERE ((((((((((NOT ('0.19324200832781058')))AND(CAST(0.3699513344076433 AS INTEGER))))OR(((t0.c0) IS FALSE))))OR((+ (t0.c0)))))AND(CAST(((t0.c0) ISNULL) AS INTEGER)))) ORDER BY (t0.c0 IN (t0.c0 COLLATE RTRIM)) ASC  NULLS LAST, (+ (t0.c0))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (((((((CAST(t0.c0 AS REAL))AND(CASE WHEN '3063615' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0)<>(t0.c0))))) ORDER BY (NOT (NULL)) COLLATE BINARY, ((x'61' COLLATE RTRIM) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c0, t0.c0)) AND (((t0.c0)OR(t0.c0)))) ASC  NULLS LAST, (DATETIME(t0.c0, t0.c0, t0.c0, NULL) IN ()), CASE UNLIKELY(DISTINCT t0.c0)  WHEN ((t0.c0)LIKE(t0.c0)) THEN ((t0.c0) IS FALSE) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) END ASC;
SELECT ALL * FROM t0 WHERE (((((((CAST(t0.c0 AS REAL))AND(CASE WHEN '3063615' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0)!=(t0.c0))))) ORDER BY (((t0.c0)) BETWEEN ((((0.7019066335880331) BETWEEN (t0.c0) AND (x'c65e7f')))) AND (((t0.c0 IN ())))) ASC, CASE WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 ELSE (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (('-2128350805', t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, 'eè'))) END, ((((t0.c0)AND(t0.c0)))-(t0.c0)) DESC  NULLS LAST, t0.c0  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((CAST(t0.c0 AS REAL))AND(CASE WHEN '3063615' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0)<>(t0.c0))))) ORDER BY (NOT (NULL)) COLLATE BINARY, ((x'61' COLLATE RTRIM) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c0, t0.c0)) AND (((t0.c0)OR(t0.c0)))) ASC  NULLS LAST, (DATETIME(t0.c0, t0.c0, t0.c0, NULL) IN ()), CASE UNLIKELY(DISTINCT t0.c0)  WHEN ((t0.c0)LIKE(t0.c0)) THEN ((t0.c0) IS FALSE) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) END ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c0)/(t0.c0))) NOTNULL)) ORDER BY PRINTF((t0.c0 IN ())) ASC, ((t0.c0 IN (t0.c0, t0.c0)) IN (((t0.c0) IS TRUE))) ASC  NULLS LAST, (+ (CAST(t0.c0 AS BLOB))) DESC, t0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)/(t0.c0))) NOTNULL)) ORDER BY (((~ (0.059078044272068975))) ISNULL) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (x'48' COLLATE RTRIM) ORDER BY (((~ (0.059078044272068975))) ISNULL) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 WHERE (((((t0.c0)/(t0.c0))) NOTNULL)) ORDER BY PRINTF((t0.c0 IN ())) ASC, ((t0.c0 IN (t0.c0, t0.c0)) IN (((t0.c0) IS TRUE))) ASC  NULLS LAST, (+ (CAST(t0.c0 AS BLOB))) DESC, t0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)/(t0.c0))) NOTNULL)) ORDER BY (((~ (0.059078044272068975))) ISNULL) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (x'48' COLLATE RTRIM) ORDER BY (((~ (0.059078044272068975))) ISNULL) DESC  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE ((((((((((- (x'd1')))AND((+ (t0.c0)))))OR((t0.c0 IN (t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0 COLLATE NOCASE))) ORDER BY (- (TYPEOF(t0.c0)));
SELECT COUNT(*) FROM t0 WHERE ((((((((((- (x'd1')))AND((+ (t0.c0)))))OR((t0.c0 IN (t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0 COLLATE NOCASE))) ORDER BY (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(x'95f9')))OR(t0.c0)))AND('Y~{[à®_a{x')))OR(t0.c0)) IN ((t0.c0 IN (t0.c0, t0.c0)), CAST(t0.c0 AS TEXT))) ASC  NULLS FIRST, ((0.842524819342103)-(t0.c0 COLLATE NOCASE)), ((ABS(t0.c0))<=(((NULL) NOTNULL))) DESC  NULLS LAST LIMIT 3;
SELECT * FROM t0 WHERE ((((~ (t0.c0))) ISNULL));
SELECT * FROM t0 WHERE ((((~ (t0.c0))) ISNULL)) ORDER BY CAST(NULL AS TEXT);
SELECT * FROM t0 WHERE ((((~ (t0.c0))) ISNULL));
SELECT * FROM t0 WHERE ((((~ (t0.c0))) ISNULL)) ORDER BY CAST(NULL AS TEXT);
SELECT ALL * FROM t0 WHERE (NULLIF(((x'')==(NULL)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CAST(NULL AS INTEGER), (((t0.c0 IN (t0.c0, t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((((((t0.c0)AND(t0.c0)))OR(0.20810472624676957)))AND(t0.c0)))) DESC  NULLS FIRST, CASE WHEN NULL THEN t0.c0 ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END;
SELECT * FROM t0 WHERE (NULLIF(((x'')=(NULL)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CAST(NULL AS INTEGER), (((t0.c0 IN (t0.c0, t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((((((t0.c0)AND(t0.c0)))OR(0.20810472624676957)))AND(t0.c0)))) DESC  NULLS FIRST, CASE WHEN NULL THEN t0.c0 ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END INTERSECT SELECT ALL * FROM t0 WHERE ((t0.c0 IN (t0.c0)) COLLATE NOCASE COLLATE BINARY) ORDER BY CAST(NULL AS INTEGER), (((t0.c0 IN (t0.c0, t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((((((t0.c0)AND(t0.c0)))OR(0.20810472624676957)))AND(t0.c0)))) DESC  NULLS FIRST, CASE WHEN NULL THEN t0.c0 ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END;
SELECT ALL * FROM t0 WHERE (NULLIF(((x'')==(NULL)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CAST(NULL AS INTEGER), (((t0.c0 IN (t0.c0, t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((((((t0.c0)AND(t0.c0)))OR(0.20810472624676957)))AND(t0.c0)))) DESC  NULLS FIRST, CASE WHEN NULL THEN t0.c0 ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END;
SELECT * FROM t0 WHERE (NULLIF(((x'')=(NULL)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CAST(NULL AS INTEGER), (((t0.c0 IN (t0.c0, t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((((((t0.c0)AND(t0.c0)))OR(0.20810472624676957)))AND(t0.c0)))) DESC  NULLS FIRST, CASE WHEN NULL THEN t0.c0 ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END INTERSECT SELECT ALL * FROM t0 WHERE ((t0.c0 IN (t0.c0)) COLLATE NOCASE COLLATE BINARY) ORDER BY CAST(NULL AS INTEGER), (((t0.c0 IN (t0.c0, t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((((((t0.c0)AND(t0.c0)))OR(0.20810472624676957)))AND(t0.c0)))) DESC  NULLS FIRST, CASE WHEN NULL THEN t0.c0 ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END;
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0)>>(t0.c0)) COLLATE NOCASE) ORDER BY (((((t0.c0)%(t0.c0))))<(((~ (t0.c0)))))  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN 'G' END) BETWEEN (((t0.c0)GLOB(t0.c0))) AND ((- (t0.c0))))  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((t0.c0)>>(t0.c0)) COLLATE NOCASE) ORDER BY ((t0.c0 COLLATE RTRIM)>(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(0.1524142050604338)))AND(t0.c0)))AND(t0.c0))))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((((t0.c0))>((NULL))))))OR(CAST(0.7543296189912653 AS TEXT))))AND(t0.c0 COLLATE NOCASE)))AND(t0.c0))) ORDER BY ((t0.c0 COLLATE RTRIM)>(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(0.1524142050604338)))AND(t0.c0)))AND(t0.c0))))  NULLS LAST LIMIT 0;
SELECT MIN(t0.c0) FROM t0 WHERE (LIKELY(DISTINCT CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (LIKELY(DISTINCT CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ORDER BY (~ (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))), ((t0.c0 IN (t0.c0)) IN (((t0.c0) NOT NULL)))  NULLS FIRST, CASE WHEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((0.06592803827577443)<<(t0.c0)) WHEN CASE 0.08436226123564095  WHEN t0.c0 THEN t0.c0 END THEN UPPER(t0.c0) END LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND (((((0.5476946857835123)) BETWEEN ((t0.c0)) AND ((t0.c0))))))) ORDER BY (~ (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))), ((t0.c0 IN (t0.c0)) IN (((t0.c0) NOT NULL)))  NULLS FIRST, CASE WHEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((0.06592803827577443)<<(t0.c0)) WHEN CASE 0.08436226123564095  WHEN t0.c0 THEN t0.c0 END THEN UPPER(t0.c0) END LIMIT 0X0;
SELECT MAX(t0.c0) FROM t0 WHERE (((json_quote(t0.c0)) NOTNULL)) ORDER BY ((CAST(NULL AS REAL)) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c0) IS FALSE))), ((((((((((0Xffffffffcd400cef)AND(CAST(t0.c0 AS REAL))))AND(CAST(t0.c0 AS TEXT))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(UPPER(DISTINCT t0.c0))))AND((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))) ASC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((json_quote(t0.c0)) NOTNULL)) ORDER BY 0.8662421128689314 DESC, (((((t0.c0)%(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, load_extension(t0.c0, NULL), (- (t0.c0))))<=((CASE t0.c0  WHEN t0.c0 THEN 0xffffffff878a390f END, CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0)AND(t0.c0)), (NOT (t0.c0))))) ASC, (((((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))OR(CAST(t0.c0 AS TEXT))))OR(((t0.c0) IS FALSE))) DESC LIMIT 1 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((- (NULL))) ISNULL)) ORDER BY 0.8662421128689314 DESC, (((((t0.c0)%(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, load_extension(t0.c0, NULL), (- (t0.c0))))<=((CASE t0.c0  WHEN t0.c0 THEN -2020984561 END, CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0)AND(t0.c0)), (NOT (t0.c0))))) ASC, (((((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))OR(CAST(t0.c0 AS TEXT))))OR(((t0.c0) IS FALSE))) DESC LIMIT 1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CASE (((t0.c0, t0.c0))>=((x'0dfcba', t0.c0)))  WHEN t0.c0 THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE RTRIM THEN t0.c0 COLLATE NOCASE END) ORDER BY (- (((((t0.c0)AND(t0.c0)))AND(t0.c0)))), NULL ASC  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CASE (((t0.c0, t0.c0))>=((x'0dfcba', t0.c0)))  WHEN t0.c0 THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE RTRIM THEN t0.c0 COLLATE NOCASE END) ORDER BY 0.07659699858010793 DESC  NULLS LAST, t0.c0  NULLS FIRST, CAST(((t0.c0)>(t0.c0)) AS REAL), 0.4747308650634524;
SELECT MIN(t0.c0) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.4678514916961307 ELSE t0.c0 END)|(x'16'))) ORDER BY TRIM(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END) DESC;
SELECT MIN(t0.c0) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.4678514916961307 ELSE t0.c0 END)|(x'16'))) ORDER BY TRIM(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END) DESC;
SELECT ALL * FROM t0 WHERE (((((HEX(t0.c0))AND(((t0.c0)/(t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)<=(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST, x'' DESC  NULLS LAST, ((NULL) NOT BETWEEN (t0.c0) AND (((t0.c0) ISNULL)));
SELECT * FROM t0 WHERE (((((((HEX(t0.c0))AND(((t0.c0)/(t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(((((t0.c0)|(t0.c0)))<=(717283822))))) ORDER BY ((((((((((t0.c0) IS FALSE))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))AND(t0.c0 COLLATE NOCASE)))OR((((t0.c0, t0.c0, x'3d8a74', 0.6926094261528943))==((t0.c0, t0.c0, t0.c0, t0.c0))))) LIMIT 2;
SELECT ALL * FROM t0 WHERE (((((HEX(t0.c0))AND(((t0.c0)/(t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)<=(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST, x'' DESC  NULLS LAST, ((NULL) NOT BETWEEN (t0.c0) AND (((t0.c0) ISNULL)));
SELECT * FROM t0 WHERE (((((((HEX(t0.c0))AND(((t0.c0)/(t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(((((t0.c0)|(t0.c0)))<=(717283822))))) ORDER BY ((((((((((t0.c0) IS FALSE))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))AND(t0.c0 COLLATE NOCASE)))OR((((t0.c0, t0.c0, x'3d8a74', 0.6926094261528943))==((t0.c0, t0.c0, t0.c0, t0.c0))))) LIMIT 2;
SELECT ALL * FROM t0 WHERE ((((~ (t0.c0))) NOT NULL)) ORDER BY ((t0.c0)IS NOT((((t0.c0))<=((t0.c0)))))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((~ (t0.c0))) NOT NULL)) ORDER BY ((t0.c0)IS NOT((((t0.c0))<=((t0.c0)))))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((((~ (t0.c0))) NOT NULL)) ORDER BY ((t0.c0)IS NOT((((t0.c0))<=((t0.c0)))))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((~ (t0.c0))) NOT NULL)) ORDER BY ((t0.c0)IS NOT((((t0.c0))<=((t0.c0)))))  NULLS FIRST LIMIT 0X0;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 COLLATE BINARY THEN (t0.c0 IN ()) END) ORDER BY (+ ((+ (t0.c0))))  NULLS FIRST, (+ (DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) ASC, ((t0.c0 COLLATE NOCASE)!=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 COLLATE BINARY THEN (t0.c0 IN ()) END)AND((((t0.c0 IN (t0.c0))) BETWEEN (LIKELY(t0.c0)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((x'0a')))))))) ORDER BY (+ ((+ (t0.c0))))  NULLS FIRST, (+ (DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) ASC, ((t0.c0 COLLATE NOCASE)<>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST LIMIT 0X0;
SELECT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)AND(t0.c0)))GLOB(CASE t0.c0  WHEN '224546577' THEN 0.6953125397290146 END)));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)AND(t0.c0)))GLOB(CASE t0.c0  WHEN '224546577' THEN 0.6953125397290146 END))) ORDER BY x'c2' ASC, ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((- (t0.c0)))) ASC  NULLS LAST, (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)<=(t0.c0)), (t0.c0 IN (t0.c0)))) AND ((t0.c0, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST;
SELECT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) ORDER BY t0.c0 ASC  NULLS FIRST, ((t0.c0)&(t0.c0)) COLLATE BINARY ASC  NULLS FIRST, ((t0.c0) ISNULL) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) ORDER BY ((t0.c0) ISNULL) INTERSECT SELECT * FROM t0 WHERE ((((+ (t0.c0)))<=(NULL))) ORDER BY ((t0.c0) ISNULL);
SELECT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) ORDER BY t0.c0 ASC  NULLS FIRST, ((t0.c0)&(t0.c0)) COLLATE BINARY ASC  NULLS FIRST, ((t0.c0) ISNULL) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) ORDER BY ((t0.c0) ISNULL) INTERSECT SELECT * FROM t0 WHERE ((((+ (t0.c0)))<=(NULL))) ORDER BY ((t0.c0) ISNULL);
SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN ()))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((NOT (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0 IN ()))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((NOT (t0.c0)))))AND(NULLIF((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), (t0.c0 IN (t0.c0, '}U-''')))))) ORDER BY (~ (t0.c0 COLLATE BINARY))  NULLS LAST, CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS BLOB) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE (NOT (t0.c0))  WHEN json_type(t0.c0) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('câªfÂ%á§à®r-')) WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN (0.9872934169955062 IN ()) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOT NULL) END) ORDER BY (~ (t0.c0 COLLATE BINARY))  NULLS LAST, CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN ()))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((NOT (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0 IN ()))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((NOT (t0.c0)))))AND(NULLIF((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), (t0.c0 IN (t0.c0, '}U-''')))))) ORDER BY (~ (t0.c0 COLLATE BINARY))  NULLS LAST, CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS BLOB) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE (NOT (t0.c0))  WHEN json_type(t0.c0) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('câªfÂ%á§à®r-')) WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN (0.9872934169955062 IN ()) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOT NULL) END) ORDER BY (~ (t0.c0 COLLATE BINARY))  NULLS LAST, CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((UNLIKELY(t0.c0) IN ((- (t0.c0))))) ORDER BY LOWER((- (t0.c0)))  NULLS LAST, (t0.c0 COLLATE BINARY IN (((((t0.c0)AND(t0.c0)))OR(x'53')), TRIM(t0.c0, t0.c0)));
SELECT ALL * FROM t0 WHERE ((((UNLIKELY(t0.c0) IN ((- (t0.c0)))))AND(((((((((((t0.c0)LIKE(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0)))OR(((t0.c0)<=(NULL)))))AND(((t0.c0)&(t0.c0))))))) ORDER BY LOWER((- (t0.c0)))  NULLS LAST, (t0.c0 COLLATE BINARY IN (((((t0.c0)AND(t0.c0)))OR(x'53')), TRIM(t0.c0, t0.c0))) INTERSECT SELECT * FROM t0 WHERE ((((NULL, t0.c0, t0.c0)) NOT BETWEEN (((NOT (t0.c0)), (~ (t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND (((((t0.c0, t0.c0, '', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))) ORDER BY LOWER((- (t0.c0)))  NULLS LAST, (t0.c0 COLLATE BINARY IN (((((t0.c0)AND(t0.c0)))OR(x'53')), TRIM(t0.c0, t0.c0)));
SELECT ALL * FROM t0 WHERE ((UNLIKELY(t0.c0) IN ((- (t0.c0))))) ORDER BY LOWER((- (t0.c0)))  NULLS LAST, (t0.c0 COLLATE BINARY IN (((((t0.c0)AND(t0.c0)))OR(x'53')), TRIM(t0.c0, t0.c0)));
SELECT ALL * FROM t0 WHERE ((((UNLIKELY(t0.c0) IN ((- (t0.c0)))))AND(((((((((((t0.c0)LIKE(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0)))OR(((t0.c0)<=(NULL)))))AND(((t0.c0)&(t0.c0))))))) ORDER BY LOWER((- (t0.c0)))  NULLS LAST, (t0.c0 COLLATE BINARY IN (((((t0.c0)AND(t0.c0)))OR(x'53')), TRIM(t0.c0, t0.c0))) INTERSECT SELECT * FROM t0 WHERE ((((NULL, t0.c0, t0.c0)) NOT BETWEEN (((NOT (t0.c0)), (~ (t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND (((((t0.c0, t0.c0, '', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))) ORDER BY LOWER((- (t0.c0)))  NULLS LAST, (t0.c0 COLLATE BINARY IN (((((t0.c0)AND(t0.c0)))OR(x'53')), TRIM(t0.c0, t0.c0)));
SELECT MIN(t0.c0) FROM t0 WHERE (((((',') NOT BETWEEN (t0.c0) AND (t0.c0))) IS FALSE)) ORDER BY CASE WHEN x'aa' THEN (t0.c0 IN (t0.c0)) WHEN CAST(t0.c0 AS BLOB) THEN t0.c0 COLLATE NOCASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE CAST(t0.c0 AS BLOB) END DESC  NULLS FIRST, ((((CAST(t0.c0 AS TEXT))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0) BETWEEN (0.9878817659887635) AND (t0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((',') NOT BETWEEN (t0.c0) AND (t0.c0))) IS FALSE)) ORDER BY (~ (((x'c161d0')/(t0.c0)))) LIMIT 0X2;
SELECT * FROM t0 WHERE (highlight(((t0.c0) IS FALSE), ((t0.c0)|(t0.c0)), ((t0.c0)||(t0.c0)), (((t0.c0, t0.c0)) BETWEEN ((t0.c0, NULL)) AND ((t0.c0, t0.c0)))));
SELECT ALL * FROM t0 WHERE (((highlight(((t0.c0) IS FALSE), ((t0.c0)|(t0.c0)), ((t0.c0)||(t0.c0)), (((t0.c0, t0.c0)) BETWEEN ((t0.c0, NULL)) AND ((t0.c0, t0.c0)))))AND((t0.c0 COLLATE RTRIM IN ())))) LIMIT 3;
SELECT * FROM t0 WHERE (highlight(((t0.c0) IS FALSE), ((t0.c0)|(t0.c0)), ((t0.c0)||(t0.c0)), (((t0.c0, t0.c0)) BETWEEN ((t0.c0, NULL)) AND ((t0.c0, t0.c0)))));
SELECT * FROM t0 WHERE ((((TRIM(DISTINCT t0.c0, t0.c0), (t0.c0 IN (t0.c0, t0.c0))))>((t0.c0, ((t0.c0) ISNULL))))) ORDER BY ((((((t0.c0, t0.c0))>((t0.c0, t0.c0))), CAST(t0.c0 AS REAL)))<((t0.c0 COLLATE BINARY, x'59' COLLATE NOCASE)));
SELECT DISTINCT * FROM t0 WHERE ((((TRIM(DISTINCT t0.c0, t0.c0), (t0.c0 IN (t0.c0, t0.c0))))>((t0.c0, ((t0.c0) ISNULL))))) ORDER BY ((((((t0.c0, t0.c0))>((t0.c0, t0.c0))), CAST(t0.c0 AS REAL)))<((t0.c0 COLLATE BINARY, x'59' COLLATE NOCASE))) LIMIT 0x2;
SELECT * FROM t0 WHERE ((((TRIM(DISTINCT t0.c0, t0.c0), (t0.c0 IN (t0.c0, t0.c0))))>((t0.c0, ((t0.c0) ISNULL))))) ORDER BY ((((((t0.c0, t0.c0))>((t0.c0, t0.c0))), CAST(t0.c0 AS REAL)))<((t0.c0 COLLATE BINARY, x'59' COLLATE NOCASE)));
SELECT DISTINCT * FROM t0 WHERE ((((TRIM(DISTINCT t0.c0, t0.c0), (t0.c0 IN (t0.c0, t0.c0))))>((t0.c0, ((t0.c0) ISNULL))))) ORDER BY ((((((t0.c0, t0.c0))>((t0.c0, t0.c0))), CAST(t0.c0 AS REAL)))<((t0.c0 COLLATE BINARY, x'59' COLLATE NOCASE))) LIMIT 0x2;
SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0 COLLATE NOCASE);
SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0 COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((((((((((t0.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(t0.c0)), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), LIKELY(t0.c0))) AND ((t0.c0, (t0.c0 IN (t0.c0)), t0.c0)))) ORDER BY (('?')IS NOT(CASE WHEN t0.c0 THEN t0.c0 END)), ((((t0.c0)IS NOT(t0.c0)))<(((t0.c0)||(t0.c0))))  NULLS LAST, CAST(((t0.c0) IS TRUE) AS INTEGER) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((((((((((t0.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(t0.c0)), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), LIKELY(t0.c0))) AND ((t0.c0, (t0.c0 IN (t0.c0)), t0.c0)))) ORDER BY (+ (((t0.c0)|(t0.c0)))), CASE (((('1526070411')OR(t0.c0)))AND(t0.c0))  WHEN UNICODE(t0.c0) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)<>(t0.c0)) THEN ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) WHEN ABS(DISTINCT t0.c0) THEN (((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) END;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((((((((((t0.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(t0.c0)), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), LIKELY(t0.c0))) AND ((t0.c0, (t0.c0 IN (t0.c0)), t0.c0)))) ORDER BY (('?')IS NOT(CASE WHEN t0.c0 THEN t0.c0 END)), ((((t0.c0)IS NOT(t0.c0)))<(((t0.c0)||(t0.c0))))  NULLS LAST, CAST(((t0.c0) IS TRUE) AS INTEGER) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((((((((((t0.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(t0.c0)), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), LIKELY(t0.c0))) AND ((t0.c0, (t0.c0 IN (t0.c0)), t0.c0)))) ORDER BY (+ (((t0.c0)|(t0.c0)))), CASE (((('1526070411')OR(t0.c0)))AND(t0.c0))  WHEN UNICODE(t0.c0) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)<>(t0.c0)) THEN ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) WHEN ABS(DISTINCT t0.c0) THEN (((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) END;
SELECT ALL * FROM t0 WHERE ((('5')OR(((t0.c0) NOT BETWEEN (-1.2398054E9) AND (t0.c0))))) ORDER BY (((((t0.c0))>=((t0.c0))))+(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC, ((t0.c0 COLLATE NOCASE) IS TRUE), CASE WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS BLOB) WHEN (t0.c0 IN (t0.c0)) THEN (('1982770')>(t0.c0)) END  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((('5')OR(((t0.c0) NOT BETWEEN (-1.2398054E9) AND (t0.c0)))))AND(((((t0.c0) IS FALSE)) IS FALSE)))) ORDER BY (((((t0.c0))>=((t0.c0))))+(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC, ((t0.c0 COLLATE NOCASE) IS TRUE), CASE WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS BLOB) WHEN (t0.c0 IN (t0.c0)) THEN (('1982770')>(t0.c0)) END  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ((((t0.c0, ''))>=((t0.c0, t0.c0)))) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (((((t0.c0))>=((t0.c0))))+(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC, ((t0.c0 COLLATE NOCASE) IS TRUE), CASE WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS BLOB) WHEN (t0.c0 IN (t0.c0)) THEN (('1982770')>(t0.c0)) END  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t0 WHERE ((('5')OR(((t0.c0) NOT BETWEEN (-1.2398054E9) AND (t0.c0))))) ORDER BY (((((t0.c0))>=((t0.c0))))+(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC, ((t0.c0 COLLATE NOCASE) IS TRUE), CASE WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS BLOB) WHEN (t0.c0 IN (t0.c0)) THEN (('1982770')>(t0.c0)) END  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((('5')OR(((t0.c0) NOT BETWEEN (-1.2398054E9) AND (t0.c0)))))AND(((((t0.c0) IS FALSE)) IS FALSE)))) ORDER BY (((((t0.c0))>=((t0.c0))))+(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC, ((t0.c0 COLLATE NOCASE) IS TRUE), CASE WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS BLOB) WHEN (t0.c0 IN (t0.c0)) THEN (('1982770')>(t0.c0)) END  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ((((t0.c0, ''))>=((t0.c0, t0.c0)))) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (((((t0.c0))>=((t0.c0))))+(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC, ((t0.c0 COLLATE NOCASE) IS TRUE), CASE WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS BLOB) WHEN (t0.c0 IN (t0.c0)) THEN (('1982770')>(t0.c0)) END  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t0 INDEXED BY i29 WHERE (((((t0.c0)*(t0.c0)))LIKE(((t0.c0)/(t0.c0))))) ORDER BY t0.c0;
SELECT ALL * FROM t0 INDEXED BY i29 WHERE (((((t0.c0)*(t0.c0)))LIKE(((t0.c0)/(t0.c0))))) ORDER BY (((- (t0.c0)))IS(CAST(t0.c0 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM t0 INDEXED BY i29 WHERE (((((t0.c0)*(t0.c0)))LIKE(((t0.c0)/(t0.c0))))) ORDER BY t0.c0;
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((CAST(t0.c0 AS BLOB)))==(((t0.c0 IN (x'd588bcc4', t0.c0)))))) LIMIT 0x2;
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c0)>>(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)>(t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN 786163337 WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c0)>>(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)>(t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN 0X2edbe689 WHEN t0.c0 THEN t0.c0 END))) ORDER BY json_patch(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)), ((t0.c0)GLOB(t0.c0))) DESC  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY json_patch(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)), ((t0.c0)GLOB(t0.c0))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c0)>>(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)>(t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN 786163337 WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c0)>>(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)>(t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN 0X2edbe689 WHEN t0.c0 THEN t0.c0 END))) ORDER BY json_patch(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)), ((t0.c0)GLOB(t0.c0))) DESC  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY json_patch(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)), ((t0.c0)GLOB(t0.c0))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((LOWER(DISTINCT t0.c0))>(CAST(t0.c0 AS NUMERIC)))) ORDER BY (((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), ((((((t0.c0)AND(t0.c0)))OR('[]')))AND(t0.c0))))<(((t0.c0 IN (t0.c0, t0.c0)), (~ (t0.c0))))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((((LOWER(DISTINCT t0.c0))>(CAST(t0.c0 AS NUMERIC))))AND(t0.c0))) ORDER BY (((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), ((((((t0.c0)AND(t0.c0)))OR('[]')))AND(t0.c0))))<(((t0.c0 IN (t0.c0, t0.c0)), (~ (t0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((LOWER(DISTINCT t0.c0))>(CAST(t0.c0 AS NUMERIC)))) ORDER BY (((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), ((((((t0.c0)AND(t0.c0)))OR('[]')))AND(t0.c0))))<(((t0.c0 IN (t0.c0, t0.c0)), (~ (t0.c0))))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((((LOWER(DISTINCT t0.c0))>(CAST(t0.c0 AS NUMERIC))))AND(t0.c0))) ORDER BY (((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), ((((((t0.c0)AND(t0.c0)))OR('[]')))AND(t0.c0))))<(((t0.c0 IN (t0.c0, t0.c0)), (~ (t0.c0))))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) ORDER BY '' DESC, CAST(NULL AS BLOB) COLLATE NOCASE COLLATE RTRIM;
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) ORDER BY '' DESC, CAST(NULL AS BLOB) COLLATE NOCASE COLLATE RTRIM;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)!=(t0.c0))) BETWEEN (x'') AND (NULL)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((t0.c0)<>(t0.c0))) BETWEEN (x'') AND (NULL)))AND(t0.c0))) ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((COALESCE(0Xffffffff96d2afa6, t0.c0))/(((0.295784076731449) ISNULL)))) ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC LIMIT 0X2;
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c0)||(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((((- (((t0.c0)||(t0.c0)))))AND(((CASE WHEN t0.c0 THEN t0.c0 WHEN x'f2570d' THEN t0.c0 ELSE t0.c0 END)>=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY ((((t0.c0) IS TRUE))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC, json_array_length(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), x'75ed') LIMIT 0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (SQLITE_COMPILEOPTION_USED((t0.c0 IN ())));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (SQLITE_COMPILEOPTION_USED((t0.c0 IN ()))) INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c0)||(t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND(0.7762710001098772)))OR('1099199564')))AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))AND(0.7762710001098772)))OR('1099199564')))AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE)AND(((NULLIF(t0.c0, t0.c0)) BETWEEN (((t0.c0)>(t0.c0))) AND (((t0.c0)LIKE(t0.c0)))))));
SELECT ALL COUNT(*) FROM t0 WHERE ('717283822');
SELECT ALL COUNT(*) FROM t0 WHERE ('717283822') ORDER BY (- ((t0.c0 IN (t0.c0)))) INTERSECT SELECT COUNT(*) FROM t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY (- ((t0.c0 IN (t0.c0))));
SELECT ALL * FROM t0 WHERE ((((t0.c0, CAST(t0.c0 AS REAL)))>((HEX(DISTINCT t0.c0), NULL COLLATE NOCASE))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, CAST(t0.c0 AS REAL)))>((HEX(DISTINCT t0.c0), NULL COLLATE NOCASE))));
SELECT ALL * FROM t0 WHERE ((((t0.c0, CAST(t0.c0 AS REAL)))>((HEX(DISTINCT t0.c0), NULL COLLATE NOCASE))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, CAST(t0.c0 AS REAL)))>((HEX(DISTINCT t0.c0), NULL COLLATE NOCASE))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((']%', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))%(CAST(t0.c0 AS REAL))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((((']%', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))%(CAST(t0.c0 AS REAL)))) INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)/(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT (((t0.c0, t0.c0, 'nH'))!=((t0.c0, t0.c0, t0.c0))))) ORDER BY (+ ((((NULL, t0.c0, t0.c0, x'4c012c')) BETWEEN ((t0.c0, 0Xffffffffbdaa1373, NULL, 9.39173896E8)) AND ((t0.c0, t0.c0, t0.c0, t0.c0)))))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (TYPEOF(DISTINCT (((t0.c0, t0.c0, 'nH'))<>((t0.c0, t0.c0, t0.c0))))) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)-(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0) ISNULL), (t0.c0 IN ()))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(ABS(t0.c0) AS INTEGER)) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)-(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0) ISNULL), (t0.c0 IN ()))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT (((t0.c0, t0.c0, 'nH'))!=((t0.c0, t0.c0, t0.c0))))) ORDER BY (+ ((((NULL, t0.c0, t0.c0, x'4c012c')) BETWEEN ((t0.c0, 0Xffffffffbdaa1373, NULL, 9.39173896E8)) AND ((t0.c0, t0.c0, t0.c0, t0.c0)))))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (TYPEOF(DISTINCT (((t0.c0, t0.c0, 'nH'))<>((t0.c0, t0.c0, t0.c0))))) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)-(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0) ISNULL), (t0.c0 IN ()))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(ABS(t0.c0) AS INTEGER)) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)-(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0) ISNULL), (t0.c0 IN ()))))  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0) IS FALSE)) NOTNULL)) ORDER BY (((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))%(json_insert(t0.c0, t0.c0, t0.c0, t0.c0)));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) IS FALSE)) NOTNULL))AND(((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((2075271062) IS FALSE)))))) ORDER BY (((TYPEOF(t0.c0), (t0.c0 IN (t0.c0, t0.c0))))=((((((((t0.c0)AND(1.18109865E8)))AND(t0.c0)))AND(t0.c0)), (t0.c0 IN ())))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((((((x'', t0.c0, t0.c0)) BETWEEN ((NULL, t0.c0, 'à±')) AND ((t0.c0, t0.c0, t0.c0))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN '421601257' THEN 0.9467432663640123 END)))AND(((t0.c0)&('1510841474')))))AND(((((NULL)OR(t0.c0)))AND(t0.c0))))) ORDER BY (((TYPEOF(t0.c0), (t0.c0 IN (t0.c0, t0.c0))))==((((((((t0.c0)AND(1.18109865E8)))AND(t0.c0)))AND(t0.c0)), (t0.c0 IN ()))));
SELECT * FROM t0 WHERE (((((t0.c0) IS FALSE)) NOTNULL)) ORDER BY (((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))%(json_insert(t0.c0, t0.c0, t0.c0, t0.c0)));
SELECT MAX(t0.c0) FROM t0 WHERE ((NOT (((t0.c0)%(t0.c0))))) ORDER BY ((t0.c0)-(((t0.c0)<(t0.c0)))), ((t0.c0)=(t0.c0 COLLATE RTRIM));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((NOT (((t0.c0)%(t0.c0))))) ORDER BY ((t0.c0)-(((t0.c0)<(t0.c0)))), ((t0.c0)==(t0.c0 COLLATE RTRIM)) LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ('L') ORDER BY ((t0.c0)-(((t0.c0)<(t0.c0)))), ((t0.c0)=(t0.c0 COLLATE RTRIM)) LIMIT 1;
SELECT ALL * FROM t0 WHERE (0X34dd5943);
SELECT DISTINCT * FROM t0 WHERE (886921539) ORDER BY t0.c0;
SELECT ALL * FROM t0 WHERE (0X34dd5943);
SELECT DISTINCT * FROM t0 WHERE (886921539) ORDER BY t0.c0;
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))+(CAST(t0.c0 AS INTEGER)))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE NOCASE COLLATE RTRIM;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))+(CAST(t0.c0 AS INTEGER)))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE NOCASE COLLATE RTRIM;
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))+(CAST(t0.c0 AS INTEGER)))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE NOCASE COLLATE RTRIM;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))+(CAST(t0.c0 AS INTEGER)))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE NOCASE COLLATE RTRIM;
SELECT MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (((- (t0.c0))) NOTNULL), t0.c0 DESC  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0)AND((t0.c0 IN (t0.c0, t0.c0)) COLLATE RTRIM))) ORDER BY NULL, '2052193680' DESC  NULLS FIRST INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (0.3244640030215684) ORDER BY NULL, '2052193680' DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS REAL) COLLATE RTRIM)AND(CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END AS REAL)))) LIMIT 0x2;
SELECT * FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS REAL) COLLATE RTRIM)AND(CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END AS REAL)))) LIMIT 0x2;
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (t0.c0))) ORDER BY 0.08948534984541667, CAST((NOT (t0.c0)) AS INTEGER) ASC  NULLS LAST LIMIT 0X0;
SELECT * FROM t0 WHERE (CAST((((t0.c0))<=((t0.c0))) AS INTEGER)) ORDER BY CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER), CAST((+ (t0.c0)) AS REAL) ASC;
SELECT DISTINCT * FROM t0 WHERE (((CAST((((t0.c0))<=((t0.c0))) AS INTEGER))AND(((((t0.c0)AND('x')))AND(t0.c0)) COLLATE RTRIM))) ORDER BY ((((t0.c0) IS TRUE))%(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST LIMIT 1;
SELECT * FROM t0 WHERE (CAST((((t0.c0))<=((t0.c0))) AS INTEGER)) ORDER BY CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER), CAST((+ (t0.c0)) AS REAL) ASC;
SELECT DISTINCT * FROM t0 WHERE (((CAST((((t0.c0))<=((t0.c0))) AS INTEGER))AND(((((t0.c0)AND('x')))AND(t0.c0)) COLLATE RTRIM))) ORDER BY ((((t0.c0) IS TRUE))%(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST LIMIT 1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((NULL) BETWEEN ('Y') AND (((t0.c0)LIKE(t0.c0)))));
SELECT MAX(t0.c0) FROM t0 WHERE (((NULL) BETWEEN ('Y') AND (((t0.c0)LIKE(t0.c0)))));
SELECT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))%((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'f0')))))) ORDER BY (+ (x'')), ((t0.c0)OR(t0.c0)) COLLATE NOCASE;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))%((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'f0'))))))AND(CAST(((((t0.c0)AND(x'')))AND(t0.c0)) AS INTEGER)))) ORDER BY (+ (x'')), ((t0.c0)OR(t0.c0)) COLLATE NOCASE LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(t0.c0)))OR(t0.c0 COLLATE BINARY))) ORDER BY (+ (x'')), ((t0.c0)OR(t0.c0)) COLLATE NOCASE LIMIT 0X0;
SELECT * FROM t0 WHERE (((((((CAST(x'dc4dc5' AS BLOB))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((t0.c0 IN (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0X5be69e85 END)));
SELECT DISTINCT * FROM t0 WHERE (((((((CAST(x'dc4dc5' AS BLOB))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((t0.c0 IN (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0X5be69e85 END))) ORDER BY NULL ASC, t0.c0  NULLS LAST LIMIT 2;
SELECT * FROM t0 WHERE (((((((CAST(x'dc4dc5' AS BLOB))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((t0.c0 IN (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0X5be69e85 END)));
SELECT DISTINCT * FROM t0 WHERE (((((((CAST(x'dc4dc5' AS BLOB))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((t0.c0 IN (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0X5be69e85 END))) ORDER BY NULL ASC, t0.c0  NULLS LAST LIMIT 2;
SELECT MIN(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN ((0.6604818908257476, '0.06019279316577686')) AND (((- (t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY ((CASE 'îµ'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS NOT(((t0.c0) NOT BETWEEN (0.4669213233776296) AND (t0.c0)))) ASC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((((t0.c0, t0.c0)) BETWEEN ((0.6604818908257476, '0.06019279316577686')) AND (((- (t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))AND(((((((((((((CAST(t0.c0 AS NUMERIC))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(NULL)))OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(NULL)))OR((((t0.c0))==((x'543c43')))))))) ORDER BY (((((t0.c0) IS FALSE), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>(('AHEOjN', COALESCE(t0.c0, t0.c0)))) LIMIT 0x1 INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (((0.18782849485935504 COLLATE NOCASE)>=(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY (((((t0.c0) IS FALSE), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>(('AHEOjN', COALESCE(t0.c0, t0.c0)))) LIMIT 1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((CHAR(0.6228234713883862, t0.c0), 1.14216596E8))>((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((CHAR(0.6228234713883862, t0.c0), 1.14216596E8))>((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))) ORDER BY (~ (CAST(t0.c0 AS INTEGER))), (('2084735592')>>((t0.c0 IN (t0.c0))))  NULLS LAST, ((t0.c0 COLLATE RTRIM)&((+ (NULL)))) LIMIT 0x0 INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE ((- (((-1989806840) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (~ (CAST(t0.c0 AS INTEGER))), (('2084735592')>>((t0.c0 IN (t0.c0))))  NULLS LAST, ((t0.c0 COLLATE RTRIM)&((+ (NULL)))) LIMIT 0X0;
SELECT MAX(t0.c0) FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((t0.c0) IS TRUE) WHEN NULL THEN '-62346114' WHEN UNLIKELY(t0.c0) THEN ((t0.c0)*(t0.c0)) ELSE '241234946' COLLATE RTRIM END) ORDER BY (NOT ((NOT (t0.c0)))), ((((((((((CAST(t0.c0 AS TEXT))OR((((t0.c0))!=((t0.c0))))))AND((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)))))OR(((x'') NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) IS FALSE)));
SELECT MAX(t0.c0) FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((t0.c0) IS TRUE) WHEN NULL THEN '-62346114' WHEN UNLIKELY(t0.c0) THEN ((t0.c0)*(t0.c0)) ELSE '241234946' COLLATE RTRIM END) ORDER BY (NOT ((NOT (t0.c0)))), ((((((((((CAST(t0.c0 AS TEXT))OR((((t0.c0))<>((t0.c0))))))AND((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)))))OR(((x'') NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) IS FALSE))) INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((t0.c0)))) ORDER BY (NOT ((NOT (t0.c0)))), ((((((((((CAST(t0.c0 AS TEXT))OR((((t0.c0))!=((t0.c0))))))AND((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)))))OR(((x'') NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) IS FALSE)));
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0))==((t0.c0, '+P'))) COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0))=((t0.c0, '+P'))) COLLATE NOCASE) ORDER BY ABS(DISTINCT t0.c0 COLLATE NOCASE) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (((('0.6595868342350101', t0.c0))<>((t0.c0, x'')))))) ORDER BY ABS(DISTINCT t0.c0 COLLATE NOCASE) LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0))==((t0.c0, '+P'))) COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0))=((t0.c0, '+P'))) COLLATE NOCASE) ORDER BY ABS(DISTINCT t0.c0 COLLATE NOCASE) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (((('0.6595868342350101', t0.c0))<>((t0.c0, x'')))))) ORDER BY ABS(DISTINCT t0.c0 COLLATE NOCASE) LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((TRIM(DISTINCT 0.6778667448599497), CAST(t0.c0 AS INTEGER)))<=((((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((t0.c0)OR(t0.c0)))))) ORDER BY LIKE((((t0.c0, x''))<(('', t0.c0))), ((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((TRIM(DISTINCT 0.6778667448599497), CAST(t0.c0 AS INTEGER)))==((((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((t0.c0)OR(t0.c0)))))) ORDER BY (+ (((t0.c0) ISNULL))) LIMIT 3 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (TRIM(((t0.c0)AND(t0.c0)), (((t0.c0))==((t0.c0))))) ORDER BY (+ (((t0.c0) ISNULL))) LIMIT 3;
SELECT * FROM t0 WHERE (((((((t0.c0 COLLATE RTRIM)OR(t0.c0 COLLATE BINARY)))OR(t0.c0 COLLATE RTRIM)))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT * FROM t0 WHERE (((((((t0.c0 COLLATE RTRIM)OR(t0.c0 COLLATE BINARY)))OR(t0.c0 COLLATE RTRIM)))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (((((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND('3cw9rì·Iv(')))OR(t0.c0)))AND(t0.c0)))IS NOT((((NULL, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) LIMIT 0;
SELECT * FROM t0 WHERE (((((((t0.c0 COLLATE RTRIM)OR(t0.c0 COLLATE BINARY)))OR(t0.c0 COLLATE RTRIM)))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT * FROM t0 WHERE (((((((t0.c0 COLLATE RTRIM)OR(t0.c0 COLLATE BINARY)))OR(t0.c0 COLLATE RTRIM)))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (((((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND('3cw9rì·Iv(')))OR(t0.c0)))AND(t0.c0)))IS NOT((((NULL, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((((('0.3244640030215684')AND((t0.c0 IN ()))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR(t0.c0)));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((((((('0.3244640030215684')AND((t0.c0 IN ()))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR(t0.c0)))AND(0x6b08edf))) LIMIT 2;
SELECT MAX(t0.c0) FROM t0 WHERE (CASE WHEN (+ (t0.c0)) THEN (t0.c0 IN (t0.c0)) END);
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((CASE WHEN (+ (t0.c0)) THEN (t0.c0 IN (t0.c0)) END)AND((((t0.c0)/(t0.c0)) IN ())))) LIMIT 0x0 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))<<(CAST(t0.c0 AS REAL)))) LIMIT 0X0;
SELECT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0)OR(CAST(t0.c0 AS TEXT))))OR(((t0.c0) ISNULL))))AND((((t0.c0))>((t0.c0))))));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((((t0.c0)OR(CAST(t0.c0 AS TEXT))))OR(((t0.c0) ISNULL))))AND((((t0.c0))>((t0.c0))))))AND(((t0.c0)=(t0.c0)) COLLATE BINARY COLLATE RTRIM))) ORDER BY x'8d' DESC INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (CASE LAST_INSERT_ROWID()  WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE RTRIM WHEN (NOT (t0.c0)) THEN ((t0.c0) NOTNULL) ELSE x'' END) ORDER BY x'8d' DESC;
SELECT ALL * FROM t0 WHERE (CAST(RTRIM(t0.c0) AS TEXT));
SELECT ALL * FROM t0 WHERE (CAST(RTRIM(t0.c0) AS TEXT)) ORDER BY (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC, json_quote(t0.c0 COLLATE RTRIM) ASC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (((IFNULL(DISTINCT t0.c0, t0.c0))<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC, json_quote(t0.c0 COLLATE RTRIM) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(RTRIM(t0.c0) AS TEXT));
SELECT ALL * FROM t0 WHERE (CAST(RTRIM(t0.c0) AS TEXT)) ORDER BY (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC, json_quote(t0.c0 COLLATE RTRIM) ASC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (((IFNULL(DISTINCT t0.c0, t0.c0))<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC, json_quote(t0.c0 COLLATE RTRIM) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0)+(x'93')))));
SELECT DISTINCT * FROM t0 WHERE ((~ (((t0.c0)+(x'93'))))) LIMIT 0x4;
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0)+(x'93')))));
SELECT DISTINCT * FROM t0 WHERE ((~ (((t0.c0)+(x'93'))))) LIMIT 0x4;
SELECT * FROM t0 WHERE ((((t0.c0, x'b3b2f6')) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'b4' WHEN t0.c0 THEN t0.c0 END, (('-944381496')!=(t0.c0)))) AND ((CAST(-449142483 AS NUMERIC), (t0.c0 IN (t0.c0, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, x'b3b2f6')) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'b4' WHEN t0.c0 THEN t0.c0 END, (('-944381496')>(t0.c0)))) AND ((CAST(-449142483 AS NUMERIC), (t0.c0 IN (t0.c0)))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS TRUE));
SELECT * FROM t0 WHERE ((((t0.c0, x'b3b2f6')) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'b4' WHEN t0.c0 THEN t0.c0 END, (('-944381496')!=(t0.c0)))) AND ((CAST(-449142483 AS NUMERIC), (t0.c0 IN (t0.c0, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, x'b3b2f6')) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'b4' WHEN t0.c0 THEN t0.c0 END, (('-944381496')>(t0.c0)))) AND ((CAST(-449142483 AS NUMERIC), (t0.c0 IN (t0.c0)))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS TRUE));
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE RTRIM, t0.c0)) AND ((CAST(t0.c0 AS NUMERIC), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE RTRIM, t0.c0)) AND ((CAST(t0.c0 AS NUMERIC), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))))AND(CASE WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE RTRIM, t0.c0)) AND ((CAST(t0.c0 AS NUMERIC), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE RTRIM, t0.c0)) AND ((CAST(t0.c0 AS NUMERIC), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))))AND(CASE WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0);
SELECT MAX(t0.c0) FROM t0 NOT INDEXED WHERE ((((((t0.c0))<=((t0.c0)))) IS FALSE));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((((t0.c0))<=((t0.c0)))) IS FALSE)) ORDER BY CAST(IFNULL(t0.c0, t0.c0) AS BLOB);
SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (t0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST, ((t0.c0 COLLATE RTRIM) BETWEEN (((0.3414522600482014) IS TRUE)) AND (CASE WHEN 'Y>' THEN t0.c0 END))  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (t0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST, ((t0.c0 COLLATE RTRIM) BETWEEN (((0.3414522600482014) IS TRUE)) AND (CASE WHEN 'Y>' THEN t0.c0 END))  NULLS LAST INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((2045063630 IN ())) ORDER BY (t0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST, ((t0.c0 COLLATE RTRIM) BETWEEN (((0.3414522600482014) IS TRUE)) AND (CASE WHEN 'Y>' THEN t0.c0 END))  NULLS LAST;
SELECT * FROM t0 WHERE (0.6845513233608435) ORDER BY (CAST(t0.c0 AS REAL) IN (json_quote('-891931245'))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((0.6845513233608435)AND(((((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) ISNULL)))) ORDER BY (+ (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL), ((((((((t0.c0)OR(NULL)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) AND ((t0.c0 COLLATE NOCASE, NULL)))) ORDER BY (+ (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST LIMIT 0x1;
SELECT * FROM t0 WHERE (0.6845513233608435) ORDER BY (CAST(t0.c0 AS REAL) IN (json_quote('-891931245'))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((0.6845513233608435)AND(((((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) ISNULL)))) ORDER BY (+ (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) ISNULL), ((((((((t0.c0)OR(NULL)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) AND ((t0.c0 COLLATE NOCASE, NULL)))) ORDER BY (+ (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST LIMIT 0x1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE t0.c0  WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0) NOTNULL) WHEN x'' THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (+ (t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))OR(x'ab')))OR(t0.c0)))OR(t0.c0)) WHEN t0.c0 THEN ((t0.c0) BETWEEN ('G') AND (t0.c0)) WHEN (NOT (t0.c0)) THEN (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, 0Xffffffff96170127)) AND ((t0.c0, NULL, t0.c0, 0.3428488287718313))) END) ORDER BY CASE WHEN (~ (6.61123124E8)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END  NULLS FIRST, t0.c0 ASC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CASE t0.c0  WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0) NOTNULL) WHEN x'' THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (+ (t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))OR(x'ab')))OR(t0.c0)))OR(t0.c0)) WHEN t0.c0 THEN ((t0.c0) BETWEEN ('G') AND (t0.c0)) WHEN (NOT (t0.c0)) THEN (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, 0Xffffffff96170127)) AND ((t0.c0, NULL, t0.c0, 0.3428488287718313))) END) ORDER BY CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND (('m(x&)'))) THEN ((t0.c0) IS FALSE) WHEN ((((t0.c0)OR('?e')))OR(885798053)) THEN (~ (t0.c0)) ELSE (((t0.c0))=((t0.c0))) END DESC  NULLS LAST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ('976722786') ORDER BY CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND (('m(x&)'))) THEN ((t0.c0) IS FALSE) WHEN ((((t0.c0)OR('?e')))OR(0X34cc34a5)) THEN (~ (t0.c0)) ELSE (((t0.c0))==((t0.c0))) END DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((NOT ((t0.c0 IN (t0.c0))))) ORDER BY ((((((t0.c0)AND(NULL)))AND(0.8053318591241655)))AND(x'3f')) COLLATE NOCASE  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE))) AND ((t0.c0 COLLATE RTRIM))), CASE ((t0.c0)-(0xffffffffd511abfa))  WHEN (('22783869')*(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) WHEN JULIANDAY(t0.c0, t0.c0, t0.c0) THEN ((t0.c0)>>(t0.c0)) END DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((NOT ((t0.c0 IN (t0.c0))))) ORDER BY ((((((t0.c0)AND(NULL)))AND(0.8053318591241655)))AND(x'3f')) COLLATE NOCASE  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE))) AND ((t0.c0 COLLATE RTRIM))), CASE ((t0.c0)-(0xffffffffd511abfa))  WHEN (('22783869')*(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) WHEN JULIANDAY(t0.c0, t0.c0, t0.c0) THEN ((t0.c0)>>(t0.c0)) END DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) IS FALSE))GLOB(t0.c0 COLLATE NOCASE))) ORDER BY ((((((t0.c0)AND(NULL)))AND(0.8053318591241655)))AND(x'3f')) COLLATE NOCASE  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE))) AND ((t0.c0 COLLATE RTRIM))), CASE ((t0.c0)-(0xffffffffd511abfa))  WHEN (('22783869')*(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) WHEN JULIANDAY(t0.c0, t0.c0, t0.c0) THEN ((t0.c0)>>(t0.c0)) END DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((NOT ((t0.c0 IN (t0.c0))))) ORDER BY ((((((t0.c0)AND(NULL)))AND(0.8053318591241655)))AND(x'3f')) COLLATE NOCASE  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE))) AND ((t0.c0 COLLATE RTRIM))), CASE ((t0.c0)-(0xffffffffd511abfa))  WHEN (('22783869')*(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) WHEN JULIANDAY(t0.c0, t0.c0, t0.c0) THEN ((t0.c0)>>(t0.c0)) END DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((NOT ((t0.c0 IN (t0.c0))))) ORDER BY ((((((t0.c0)AND(NULL)))AND(0.8053318591241655)))AND(x'3f')) COLLATE NOCASE  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE))) AND ((t0.c0 COLLATE RTRIM))), CASE ((t0.c0)-(0xffffffffd511abfa))  WHEN (('22783869')*(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) WHEN JULIANDAY(t0.c0, t0.c0, t0.c0) THEN ((t0.c0)>>(t0.c0)) END DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) IS FALSE))GLOB(t0.c0 COLLATE NOCASE))) ORDER BY ((((((t0.c0)AND(NULL)))AND(0.8053318591241655)))AND(x'3f')) COLLATE NOCASE  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE))) AND ((t0.c0 COLLATE RTRIM))), CASE ((t0.c0)-(0xffffffffd511abfa))  WHEN (('22783869')*(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) WHEN JULIANDAY(t0.c0, t0.c0, t0.c0) THEN ((t0.c0)>>(t0.c0)) END DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0)<=(t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND('j')))OR(t0.c0))))) ORDER BY ((t0.c0)GLOB(t0.c0)) COLLATE RTRIM ASC  NULLS LAST, (+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0)<=(t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND('j')))OR(t0.c0))))) ORDER BY ((CAST(t0.c0 AS TEXT))!=(0.10969595288574607 COLLATE NOCASE)), ((((t0.c0) IS FALSE))<>(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), 'ë' DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM t0 WHERE (((0.7200333200401323)OR((((t0.c0))<((t0.c0)))))) ORDER BY ((CAST(t0.c0 AS TEXT))<>(0.10969595288574607 COLLATE NOCASE)), ((((t0.c0) IS FALSE))!=(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), 'ë' DESC  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0)<=(t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND('j')))OR(t0.c0))))) ORDER BY ((t0.c0)GLOB(t0.c0)) COLLATE RTRIM ASC  NULLS LAST, (+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0)<=(t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND('j')))OR(t0.c0))))) ORDER BY ((CAST(t0.c0 AS TEXT))!=(0.10969595288574607 COLLATE NOCASE)), ((((t0.c0) IS FALSE))<>(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), 'ë' DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM t0 WHERE (((0.7200333200401323)OR((((t0.c0))<((t0.c0)))))) ORDER BY ((CAST(t0.c0 AS TEXT))<>(0.10969595288574607 COLLATE NOCASE)), ((((t0.c0) IS FALSE))!=(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), 'ë' DESC  NULLS FIRST LIMIT 0x2;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)/(x'')))&(((t0.c0)*(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)/(x'')))&(((t0.c0)*(t0.c0))))) LIMIT 0x0;
SELECT MIN(t0.c0) FROM t0 WHERE (CASE ((((t0.c0)OR(-1.417769168E9)))AND('-671378790'))  WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN '-1068271654' WHEN ((t0.c0) NOTNULL) THEN x'4456b672' WHEN ((t0.c0) NOTNULL) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END);
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CASE ((((t0.c0)OR(-1.417769168E9)))AND('-671378790'))  WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN '-1068271654' WHEN ((t0.c0) NOTNULL) THEN x'4456b672' WHEN ((t0.c0) NOTNULL) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE ((~ ((t0.c0 IN ()))));
SELECT * FROM t0 WHERE ((~ ((t0.c0 IN ()))));
SELECT ALL * FROM t0 WHERE ((~ ((t0.c0 IN ()))));
SELECT * FROM t0 WHERE ((~ ((t0.c0 IN ()))));
SELECT MIN(t0.c0) FROM t0 WHERE (((x'5f')>=((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((x'5f')>=((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))))) LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(x'33')))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) LIMIT 0;
SELECT * FROM t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY ((((t0.c0)<(t0.c0)))<<((NOT (t0.c0)))) DESC;
SELECT ALL * FROM t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY ((((t0.c0)<(t0.c0)))<<((NOT (t0.c0)))) DESC;
SELECT * FROM t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY ((((t0.c0)<(t0.c0)))<<((NOT (t0.c0)))) DESC;
SELECT ALL * FROM t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY ((((t0.c0)<(t0.c0)))<<((NOT (t0.c0)))) DESC;
SELECT ALL * FROM t0 WHERE (LIKELY(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0 WHERE (((LIKELY(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))AND(x''))) ORDER BY (((((('jGV4~%')OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE DESC  NULLS LAST, (t0.c0 IN (x'33')) COLLATE BINARY DESC, CASE ((((((((0X7a51fd90)OR(0xffffffff884b4cd1)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (((t0.c0))<=((t0.c0))) ELSE (NULL IN (t0.c0)) END ASC  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE ((+ (((t0.c0) IS FALSE)))) ORDER BY (((((('jGV4~%')OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE DESC  NULLS LAST, (t0.c0 IN (x'33')) COLLATE BINARY DESC, CASE ((((((((2052193680)OR(-2008331055)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (((t0.c0))<=((t0.c0))) ELSE (NULL IN (t0.c0)) END ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (LIKELY(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0 WHERE (((LIKELY(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))AND(x''))) ORDER BY (((((('jGV4~%')OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE DESC  NULLS LAST, (t0.c0 IN (x'33')) COLLATE BINARY DESC, CASE ((((((((0X7a51fd90)OR(0xffffffff884b4cd1)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (((t0.c0))<=((t0.c0))) ELSE (NULL IN (t0.c0)) END ASC  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE ((+ (((t0.c0) IS FALSE)))) ORDER BY (((((('jGV4~%')OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE DESC  NULLS LAST, (t0.c0 IN (x'33')) COLLATE BINARY DESC, CASE ((((((((2052193680)OR(-2008331055)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (((t0.c0))<=((t0.c0))) ELSE (NULL IN (t0.c0)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY ((LIKELIHOOD(t0.c0, t0.c0)) BETWEEN (t0.c0 COLLATE RTRIM) AND (NULL)), ((0.9591762775986338)<=(t0.c0)) COLLATE NOCASE;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY ((LIKELIHOOD(t0.c0, t0.c0)) BETWEEN (t0.c0 COLLATE RTRIM) AND (NULL)), ((0.9591762775986338)<=(t0.c0)) COLLATE NOCASE LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ('-1098968804');
SELECT ALL * FROM t0 WHERE ('-1098968804') LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE (((t0.c0) NOT NULL)) LIMIT 0;
SELECT ALL * FROM t0 WHERE ('-1098968804');
SELECT ALL * FROM t0 WHERE ('-1098968804') LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE (((t0.c0) NOT NULL)) LIMIT 0;
SELECT * FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(0.912771152169157)))OR(t0.c0)))AND(NULL)) COLLATE BINARY) ORDER BY ((((t0.c0) NOTNULL))&(t0.c0))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(0.912771152169157)))OR(t0.c0)))AND(NULL)) COLLATE BINARY) ORDER BY (+ (CAST(t0.c0 AS TEXT)))  NULLS FIRST, ((t0.c0)>(CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)), CASE ((t0.c0)<<(t0.c0))  WHEN ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(2069036153)) THEN CAST(t0.c0 AS BLOB) WHEN t0.c0 COLLATE RTRIM THEN COALESCE(DISTINCT t0.c0, t0.c0, t0.c0) WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE ((t0.c0)=(t0.c0)) END INTERSECT SELECT * FROM t0 WHERE (((- (0Xc3432d5)) IN (((t0.c0) NOTNULL)))) ORDER BY (+ (CAST(t0.c0 AS TEXT)))  NULLS FIRST, ((t0.c0)>(CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)), CASE ((t0.c0)<<(t0.c0))  WHEN ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(2069036153)) THEN CAST(t0.c0 AS BLOB) WHEN t0.c0 COLLATE RTRIM THEN COALESCE(DISTINCT t0.c0, t0.c0, t0.c0) WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE ((t0.c0)==(t0.c0)) END;
SELECT * FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(0.912771152169157)))OR(t0.c0)))AND(NULL)) COLLATE BINARY) ORDER BY ((((t0.c0) NOTNULL))&(t0.c0))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(0.912771152169157)))OR(t0.c0)))AND(NULL)) COLLATE BINARY) ORDER BY (+ (CAST(t0.c0 AS TEXT)))  NULLS FIRST, ((t0.c0)>(CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)), CASE ((t0.c0)<<(t0.c0))  WHEN ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(2069036153)) THEN CAST(t0.c0 AS BLOB) WHEN t0.c0 COLLATE RTRIM THEN COALESCE(DISTINCT t0.c0, t0.c0, t0.c0) WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE ((t0.c0)=(t0.c0)) END INTERSECT SELECT * FROM t0 WHERE (((- (0Xc3432d5)) IN (((t0.c0) NOTNULL)))) ORDER BY (+ (CAST(t0.c0 AS TEXT)))  NULLS FIRST, ((t0.c0)>(CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)), CASE ((t0.c0)<<(t0.c0))  WHEN ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(2069036153)) THEN CAST(t0.c0 AS BLOB) WHEN t0.c0 COLLATE RTRIM THEN COALESCE(DISTINCT t0.c0, t0.c0, t0.c0) WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE ((t0.c0)==(t0.c0)) END;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0)>(t0.c0))  WHEN t0.c0 THEN t0.c0 WHEN (((t0.c0))=((t0.c0))) THEN ((((t0.c0)OR(0.8363264078129968)))OR(t0.c0)) ELSE ((t0.c0) ISNULL) END) ORDER BY ((x'70a44f') IS FALSE);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CASE ((t0.c0)>(t0.c0))  WHEN t0.c0 THEN t0.c0 WHEN (((t0.c0))==((t0.c0))) THEN ((((t0.c0)OR(0.8363264078129968)))OR(t0.c0)) ELSE ((t0.c0) ISNULL) END)AND(((((t0.c0)) BETWEEN ((t0.c0)) AND (('1806739121'))) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END))))) ORDER BY ((x'70a44f') IS FALSE) INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((t0.c0))>=((0.1482550098803812)))) NOT BETWEEN (t0.c0) AND (((t0.c0)+(t0.c0))))) ORDER BY ((x'70a44f') IS FALSE);
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0) BETWEEN (0.04750344647660465) AND (t0.c0)) COLLATE NOCASE);
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0) BETWEEN (0.04750344647660465) AND (t0.c0)) COLLATE NOCASE) INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (((CASE WHEN 0.14687430919927957 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0)/((((t0.c0, '1606404429')) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) ORDER BY json_extract((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) IS TRUE), CAST(t0.c0 AS REAL)) DESC, ((t0.c0)|(t0.c0)) COLLATE BINARY  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((t0.c0)/((((t0.c0, '1606404429')) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN (t0.c0 IN ()) THEN t0.c0 COLLATE BINARY END))) ORDER BY json_extract((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) IS TRUE), CAST(t0.c0 AS REAL)) DESC, ((t0.c0)|(t0.c0)) COLLATE BINARY  NULLS LAST LIMIT 0X6;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0))>((t0.c0, t0.c0))) COLLATE BINARY);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0))>((t0.c0, t0.c0))) COLLATE BINARY) LIMIT 0;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0))>((t0.c0, t0.c0))) COLLATE BINARY);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0))>((t0.c0, t0.c0))) COLLATE BINARY) LIMIT 0;
SELECT ALL * FROM t0 WHERE (CAST(NULL AS NUMERIC));
SELECT DISTINCT * FROM t0 WHERE (CAST(NULL AS NUMERIC)) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (CAST(NULL AS NUMERIC));
SELECT DISTINCT * FROM t0 WHERE (CAST(NULL AS NUMERIC)) LIMIT 0x1;
SELECT MIN(t0.c0) FROM t0 WHERE ('843657294' COLLATE BINARY);
SELECT MIN(t0.c0) FROM t0 WHERE ('843657294' COLLATE BINARY) ORDER BY t0.c0 DESC;
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c0)>>(t0.c0)))AND((t0.c0 IN (t0.c0)))))OR(DATETIME(t0.c0, '-725507536', t0.c0, t0.c0))))AND(((t0.c0)||(t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(CAST(t0.c0 AS INTEGER))))AND(-1072703594))) ORDER BY t0.c0;
SELECT * FROM t0 WHERE (((((((((((((((t0.c0)>>(t0.c0)))AND((t0.c0 IN (t0.c0)))))OR(DATETIME(t0.c0, '-725507536', t0.c0, t0.c0))))AND(((t0.c0)||(t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(CAST(t0.c0 AS INTEGER))))AND(0xffffffffc00fd796))) ORDER BY (CAST(t0.c0 AS NUMERIC) IN (((t0.c0)|(t0.c0)))), t0.c0 COLLATE RTRIM COLLATE BINARY LIMIT 0X0 INTERSECT SELECT * FROM t0 WHERE (NULL) ORDER BY (CAST(t0.c0 AS NUMERIC) IN (((t0.c0)|(t0.c0)))), t0.c0 COLLATE RTRIM COLLATE BINARY LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c0)>>(t0.c0)))AND((t0.c0 IN (t0.c0)))))OR(DATETIME(t0.c0, '-725507536', t0.c0, t0.c0))))AND(((t0.c0)||(t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(CAST(t0.c0 AS INTEGER))))AND(-1072703594))) ORDER BY t0.c0;
SELECT * FROM t0 WHERE (((((((((((((((t0.c0)>>(t0.c0)))AND((t0.c0 IN (t0.c0)))))OR(DATETIME(t0.c0, '-725507536', t0.c0, t0.c0))))AND(((t0.c0)||(t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(CAST(t0.c0 AS INTEGER))))AND(0xffffffffc00fd796))) ORDER BY (CAST(t0.c0 AS NUMERIC) IN (((t0.c0)|(t0.c0)))), t0.c0 COLLATE RTRIM COLLATE BINARY LIMIT 0X0 INTERSECT SELECT * FROM t0 WHERE (NULL) ORDER BY (CAST(t0.c0 AS NUMERIC) IN (((t0.c0)|(t0.c0)))), t0.c0 COLLATE RTRIM COLLATE BINARY LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))AND(t0.c0)));
SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))AND(t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY))) ORDER BY (((t0.c0)<<(t0.c0)) IN ()) ASC  NULLS LAST, ('' IN ((t0.c0 IN (t0.c0, t0.c0, t0.c0)))) DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))AND(t0.c0)));
SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))AND(t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY))) ORDER BY (((t0.c0)<<(t0.c0)) IN ()) ASC  NULLS LAST, ('' IN ((t0.c0 IN (t0.c0, t0.c0, t0.c0)))) DESC  NULLS FIRST LIMIT 2;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(((t0.c0)+(NULL)) AS NUMERIC)) ORDER BY t0.c0  NULLS FIRST, (((((((((((NOT (t0.c0)))OR((~ (t0.c0)))))OR(((t0.c0) ISNULL))))AND(CASE t0.c0  WHEN t0.c0 THEN 0.7382185098365368 WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0)OR(NULL)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CAST(((t0.c0)+(NULL)) AS NUMERIC))AND(IFNULL(DISTINCT CAST(t0.c0 AS TEXT), CAST(t0.c0 AS INTEGER))))) ORDER BY (((t0.c0) NOTNULL) IN ((+ (t0.c0))))  NULLS LAST, ((CAST(t0.c0 AS REAL)) NOT BETWEEN (0.18012378376872817) AND (CASE x'f783'  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN 387310075 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST LIMIT 0x3 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (LOWER(DISTINCT CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ORDER BY (((t0.c0) NOTNULL) IN ((+ (t0.c0))))  NULLS LAST, ((CAST(t0.c0 AS REAL)) NOT BETWEEN (0.18012378376872817) AND (CASE x'f783'  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN 387310075 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST LIMIT 0X3;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)=(t0.c0))) ORDER BY ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(x'1db9')))AND(((t0.c0)||(t0.c0)))), (NOT ((((t0.c0)) BETWEEN ((t0.c0)) AND ((-1847590845)))))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)=(t0.c0))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL) DESC  NULLS LAST, t0.c0 ASC INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL) DESC  NULLS LAST, t0.c0 ASC;
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT NULL));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT NULL))AND(t0.c0))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((+ ('*')));
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT NULL));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT NULL))AND(t0.c0))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((+ ('*')));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB));
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '976722786' END IN ())  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (6.65515619E8) AND ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) DESC  NULLS LAST, TRIM(DISTINCT ((t0.c0)==(t0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '976722786' END IN ())  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (6.65515619E8) AND ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) DESC  NULLS LAST, TRIM(DISTINCT ((t0.c0)==(t0.c0))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((- (((((((((t0.c0)OR(t0.c0)))OR(0X1)))OR(t0.c0)))OR(t0.c0))))) ORDER BY (((CAST('-16495515' AS BLOB), CAST(t0.c0 AS INTEGER)))<>((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), t0.c0 COLLATE RTRIM)));
SELECT * FROM t0 WHERE ((- (((((((((t0.c0)OR(t0.c0)))OR(0X1)))OR(t0.c0)))OR(t0.c0))))) ORDER BY t0.c0  NULLS LAST, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT * FROM t0 WHERE ((- (((((((((t0.c0)OR(t0.c0)))OR(0X1)))OR(t0.c0)))OR(t0.c0))))) ORDER BY (((CAST('-16495515' AS BLOB), CAST(t0.c0 AS INTEGER)))<>((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), t0.c0 COLLATE RTRIM)));
SELECT * FROM t0 WHERE ((- (((((((((t0.c0)OR(t0.c0)))OR(0X1)))OR(t0.c0)))OR(t0.c0))))) ORDER BY t0.c0  NULLS LAST, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN CAST(t0.c0 AS REAL) THEN CASE t0.c0  WHEN 0.07073050816093995 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN (((('')AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (((t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0))) THEN ((t0.c0) ISNULL) ELSE x'9e' END) ORDER BY CAST(((t0.c0) IS TRUE) AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN CAST(t0.c0 AS REAL) THEN CASE t0.c0  WHEN 0.07073050816093995 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN (((('')AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (((t0.c0, t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0))) THEN ((t0.c0) ISNULL) ELSE x'9e' END)AND(((t0.c0)IS(((NULL) IS TRUE)))))) ORDER BY CAST(((t0.c0) IS TRUE) AS NUMERIC) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT COUNT(*) FROM t0 WHERE ((- (t0.c0 COLLATE NOCASE))) ORDER BY CAST(((t0.c0) IS TRUE) AS NUMERIC) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (LTRIM((((NULL))=((t0.c0))), LOWER(DISTINCT t0.c0)));
SELECT DISTINCT * FROM t0 WHERE (LTRIM((((NULL))==((t0.c0))), LOWER(DISTINCT t0.c0))) LIMIT 0X2;
SELECT * FROM t0 WHERE (LTRIM((((NULL))=((t0.c0))), LOWER(DISTINCT t0.c0)));
SELECT DISTINCT * FROM t0 WHERE (LTRIM((((NULL))==((t0.c0))), LOWER(DISTINCT t0.c0))) LIMIT 0X2;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))>=(((t0.c0)AND(t0.c0))))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER) DESC, ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (t0.c0) AND (t0.c0)) DESC, (((~ (t0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((((NULL)OR(t0.c0)))OR(t0.c0))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))=(((t0.c0)AND(t0.c0))))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER) DESC, ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (t0.c0) AND (t0.c0)) DESC, (((~ (t0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((((NULL)OR(t0.c0)))OR(t0.c0))));
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c0) ISNULL)) IS TRUE)) ORDER BY (((((t0.c0)=(1.109996026E9))))>=((((t0.c0)>(t0.c0)))))  NULLS FIRST, ((((t0.c0) NOT NULL)) NOT NULL);
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) ISNULL)) IS TRUE))AND(t0.c0))) ORDER BY t0.c0  NULLS FIRST, (RTRIM(t0.c0) IN ()), (COALESCE(t0.c0, t0.c0) IN ()) LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((NOT ((((t0.c0, t0.c0))<((t0.c0, t0.c0)))))) ORDER BY t0.c0  NULLS FIRST, (RTRIM(t0.c0) IN ()), (COALESCE(t0.c0, t0.c0) IN ()) LIMIT 0;
SELECT ALL COUNT(*) FROM t0 WHERE ('-1741450688') ORDER BY ((t0.c0) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC  NULLS LAST, (((((t0.c0) ISNULL), CASE WHEN NULL THEN NULL WHEN t0.c0 THEN t0.c0 END, CAST(t0.c0 AS INTEGER)))>=((((t0.c0) IS TRUE), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), 0.33230367378864845))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((('-1741450688')AND((t0.c0 IN (0.9059246316009855)) COLLATE NOCASE))) ORDER BY ((t0.c0) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC  NULLS LAST, (((((t0.c0) ISNULL), CASE WHEN NULL THEN NULL WHEN t0.c0 THEN t0.c0 END, CAST(t0.c0 AS INTEGER)))>=((((t0.c0) IS TRUE), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), 0.33230367378864845))) ASC  NULLS FIRST LIMIT 0;
SELECT MIN(t0.c0) FROM t0 WHERE (json_insert(t0.c0, t0.c0, t0.c0) COLLATE RTRIM);
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((json_insert(t0.c0, t0.c0, t0.c0) COLLATE RTRIM)AND(LOWER(DISTINCT '-1326898282' COLLATE NOCASE)))) ORDER BY ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))>>((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0)))))  NULLS FIRST, ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(CAST(t0.c0 AS INTEGER)));
SELECT * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY ((((((((t0.c0)IS NOT(t0.c0)))OR(CAST(x'' AS INTEGER))))OR(t0.c0 COLLATE RTRIM)))OR(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, ((t0.c0 COLLATE RTRIM)<((t0.c0 IN (t0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY t0.c0 DESC INTERSECT SELECT * FROM t0 WHERE (NULLIF(DISTINCT t0.c0, '9223372036854775807')) ORDER BY t0.c0 DESC;
SELECT * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY ((((((((t0.c0)IS NOT(t0.c0)))OR(CAST(x'' AS INTEGER))))OR(t0.c0 COLLATE RTRIM)))OR(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, ((t0.c0 COLLATE RTRIM)<((t0.c0 IN (t0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY t0.c0 DESC INTERSECT SELECT * FROM t0 WHERE (NULLIF(DISTINCT t0.c0, '9223372036854775807')) ORDER BY t0.c0 DESC;
SELECT * FROM t0 WHERE ((((((((t0.c0))>(('rB&'))))AND((t0.c0 IN (t0.c0, t0.c0)))))AND((~ (t0.c0)))));
SELECT * FROM t0 WHERE ((((((((((t0.c0))>(('rB&'))))AND((t0.c0 IN (t0.c0, t0.c0)))))AND((~ (t0.c0)))))AND(((((((((((((((((((((t0.c0)OR(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0)))AND((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, 0X46857af7)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, NULL))))))OR(((t0.c0) BETWEEN (0.5538024940141438) AND (t0.c0)))))AND(((t0.c0)OR(-747703216)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((t0.c0 IN ()))))OR(((t0.c0) NOT NULL)))))) ORDER BY ((-1e500)IS NOT(((t0.c0) BETWEEN (t0.c0) AND (x'40')))) ASC, ((((t0.c0)|(t0.c0))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)>=(t0.c0)))) DESC;
SELECT * FROM t0 WHERE ((((((((t0.c0))>(('rB&'))))AND((t0.c0 IN (t0.c0, t0.c0)))))AND((~ (t0.c0)))));
SELECT * FROM t0 WHERE ((((((((((t0.c0))>(('rB&'))))AND((t0.c0 IN (t0.c0, t0.c0)))))AND((~ (t0.c0)))))AND(((((((((((((((((((((t0.c0)OR(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0)))AND((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, 0X46857af7)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, NULL))))))OR(((t0.c0) BETWEEN (0.5538024940141438) AND (t0.c0)))))AND(((t0.c0)OR(-747703216)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((t0.c0 IN ()))))OR(((t0.c0) NOT NULL)))))) ORDER BY ((-1e500)IS NOT(((t0.c0) BETWEEN (t0.c0) AND (x'40')))) ASC, ((((t0.c0)|(t0.c0))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)>=(t0.c0)))) DESC;
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS TEXT) COLLATE NOCASE) ORDER BY (((((((((('-1887719382')||(t0.c0)))AND(TYPEOF(DISTINCT t0.c0))))AND(((t0.c0)&(t0.c0)))))AND(((t0.c0) NOT NULL))))OR(CASE WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT) COLLATE NOCASE)AND(((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE '' END)%(LIKE(t0.c0, t0.c0, '/')))))) ORDER BY CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.6566744360314507 WHEN 0.8610097500559935 THEN 'RI1BPp' ELSE t0.c0 END COLLATE RTRIM, ((t0.c0 IN (t0.c0)) IN ())  NULLS LAST, CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS NUMERIC) DESC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.9583966798694991)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (t0.c0) AND (0.9583966798694991)) IN ()))AND((((((((+ (t0.c0)))OR(((t0.c0) ISNULL))))AND(0.06816258432177624 COLLATE RTRIM)))OR(((t0.c0) ISNULL)))))) LIMIT 1 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (TOTAL_CHANGES() COLLATE RTRIM) LIMIT 1;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)OR(NULL)))AND(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))), ((t0.c0 COLLATE BINARY)OR(((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND((((((((((((((t0.c0 IN (t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0)))OR(((t0.c0) IS FALSE))))OR(CASE WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, 0.26781314767316877))))))OR(t0.c0))))) ORDER BY NULL DESC LIMIT 2;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)OR(NULL)))AND(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))), ((t0.c0 COLLATE BINARY)OR(((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND((((((((((((((t0.c0 IN (t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0)))OR(((t0.c0) IS FALSE))))OR(CASE WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, 0.26781314767316877))))))OR(t0.c0))))) ORDER BY NULL DESC LIMIT 2;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CAST(x'' AS TEXT) COLLATE NOCASE);
SELECT MIN(t0.c0) FROM t0 WHERE (CAST(x'' AS TEXT) COLLATE NOCASE);
SELECT MIN(t0.c0) FROM t0 WHERE ((((t0.c0 IN (0.8012520111269589)))||(((t0.c0)-(t0.c0)))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((t0.c0 IN (0.8012520111269589)))||(((t0.c0)-(t0.c0))))) LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (IFNULL(((t0.c0) IS TRUE), ((t0.c0)%(t0.c0)))) LIMIT 0x1;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((CASE WHEN '745015413' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.6884132717380129 WHEN t0.c0 THEN x'ac' END)OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR((((t0.c0))<>((t0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((CASE WHEN '745015413' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.6884132717380129 WHEN t0.c0 THEN x'ac' END)OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR((((t0.c0))<((t0.c0))))))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(-475466385)) COLLATE NOCASE)));
SELECT * FROM t0 WHERE ((+ (t0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE ((+ (t0.c0)) COLLATE BINARY);
SELECT * FROM t0 WHERE ((+ (t0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE ((+ (t0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))|(((0.8595922735583824)==(t0.c0))))) ORDER BY ((((t0.c0)<<(t0.c0))) ISNULL) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))|(((0.8595922735583824)==(t0.c0))))) ORDER BY ((t0.c0)=(CAST(t0.c0 AS REAL)))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))|(((0.8595922735583824)==(t0.c0))))) ORDER BY ((((t0.c0)<<(t0.c0))) ISNULL) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))|(((0.8595922735583824)==(t0.c0))))) ORDER BY ((t0.c0)=(CAST(t0.c0 AS REAL)))  NULLS FIRST LIMIT 1;
SELECT MAX(t0.c0) FROM t0 WHERE (CAST(('' IN (t0.c0, t0.c0)) AS REAL));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CAST(('' IN (t0.c0, t0.c0)) AS REAL))AND(CAST(0.4524023923736694 AS NUMERIC)))) LIMIT 0x2;
SELECT ALL * FROM t0 WHERE ((- (ABS(DISTINCT t0.c0)))) ORDER BY (- (CAST(t0.c0 AS REAL))) ASC, UNLIKELY(CASE WHEN '-10958963' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ASC;
SELECT ALL * FROM t0 WHERE ((((- (ABS(DISTINCT t0.c0))))AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'd362' ELSE t0.c0 END)/(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))))) ORDER BY ((((NULL) BETWEEN (t0.c0) AND (t0.c0)))<=(t0.c0)) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((- (ABS(DISTINCT t0.c0)))) ORDER BY (- (CAST(t0.c0 AS REAL))) ASC, UNLIKELY(CASE WHEN '-10958963' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ASC;
SELECT ALL * FROM t0 WHERE ((((- (ABS(DISTINCT t0.c0))))AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'd362' ELSE t0.c0 END)/(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))))) ORDER BY ((((NULL) BETWEEN (t0.c0) AND (t0.c0)))<=(t0.c0)) DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM t0 WHERE (CASE WHEN (+ (t0.c0)) THEN (t0.c0 IN (t0.c0)) END);
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (+ (t0.c0)) THEN (t0.c0 IN (t0.c0)) END) ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC, (((((((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))AND(LIKELIHOOD(t0.c0, t0.c0))))OR(x'')))OR(((NULL) NOTNULL))) ASC  NULLS LAST, t0.c0  NULLS FIRST, (CAST(t0.c0 AS INTEGER) IN (t0.c0 COLLATE NOCASE, CASE WHEN 0.5183946887167524 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0, t0.c0))<=((t0.c0, t0.c0))))OR((+ (t0.c0)))))AND((((x'565f8e72', t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0)))))) ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC, (((((((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))AND(LIKELIHOOD(t0.c0, t0.c0))))OR(x'')))OR(((NULL) NOTNULL))) ASC  NULLS LAST, t0.c0  NULLS FIRST, (CAST(t0.c0 AS INTEGER) IN (t0.c0 COLLATE NOCASE, CASE WHEN 0.5183946887167524 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (CASE WHEN (+ (t0.c0)) THEN (t0.c0 IN (t0.c0)) END);
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (+ (t0.c0)) THEN (t0.c0 IN (t0.c0)) END) ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC, (((((((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))AND(LIKELIHOOD(t0.c0, t0.c0))))OR(x'')))OR(((NULL) NOTNULL))) ASC  NULLS LAST, t0.c0  NULLS FIRST, (CAST(t0.c0 AS INTEGER) IN (t0.c0 COLLATE NOCASE, CASE WHEN 0.5183946887167524 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0, t0.c0))<=((t0.c0, t0.c0))))OR((+ (t0.c0)))))AND((((x'565f8e72', t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0)))))) ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC, (((((((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))AND(LIKELIHOOD(t0.c0, t0.c0))))OR(x'')))OR(((NULL) NOTNULL))) ASC  NULLS LAST, t0.c0  NULLS FIRST, (CAST(t0.c0 AS INTEGER) IN (t0.c0 COLLATE NOCASE, CASE WHEN 0.5183946887167524 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0))) NOT BETWEEN (((((x'')OR(t0.c0)))AND(0.13125336154722478))) AND (((t0.c0)-(t0.c0))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.43899403682226645))) ISNULL), (+ (((t0.c0) BETWEEN (t0.c0) AND (-1882441895)))) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0))) NOT BETWEEN (((((x'')OR(t0.c0)))AND(0.13125336154722478))) AND (((t0.c0)-(t0.c0))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.43899403682226645))) ISNULL), (+ (((t0.c0) BETWEEN (t0.c0) AND (0Xffffffff8fcc3759)))) DESC LIMIT 0x0;
SELECT * FROM t0 WHERE (0.17056483385239296) ORDER BY (((0.972948554568557 IN (t0.c0)))<(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC, 0.7481586733260287;
SELECT ALL * FROM t0 WHERE (((0.17056483385239296)AND(((2010660648)|(HEX('-122510163')))))) ORDER BY (((t0.c0, t0.c0)) BETWEEN ((((t0.c0)<=(t0.c0)), UNICODE(t0.c0))) AND ((((t0.c0)IS NOT(t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0))))) DESC  NULLS LAST, ((t0.c0) NOTNULL) COLLATE BINARY  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (((LIKE(t0.c0, t0.c0))<<((t0.c0 IN (t0.c0))))) ORDER BY (((t0.c0, t0.c0)) BETWEEN ((((t0.c0)<=(t0.c0)), UNICODE(t0.c0))) AND ((((t0.c0)IS NOT(t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0))))) DESC  NULLS LAST, ((t0.c0) NOTNULL) COLLATE BINARY  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (0.17056483385239296) ORDER BY (((0.972948554568557 IN (t0.c0)))<(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC, 0.7481586733260287;
SELECT ALL * FROM t0 WHERE (((0.17056483385239296)AND(((2010660648)|(HEX('-122510163')))))) ORDER BY (((t0.c0, t0.c0)) BETWEEN ((((t0.c0)<=(t0.c0)), UNICODE(t0.c0))) AND ((((t0.c0)IS NOT(t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0))))) DESC  NULLS LAST, ((t0.c0) NOTNULL) COLLATE BINARY  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (((LIKE(t0.c0, t0.c0))<<((t0.c0 IN (t0.c0))))) ORDER BY (((t0.c0, t0.c0)) BETWEEN ((((t0.c0)<=(t0.c0)), UNICODE(t0.c0))) AND ((((t0.c0)IS NOT(t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0))))) DESC  NULLS LAST, ((t0.c0) NOTNULL) COLLATE BINARY  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CHAR((NOT (t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0, t0.c0)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY ((((NULL))<((t0.c0))) IN ())  NULLS LAST, ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) IN (((t0.c0) IS TRUE)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ()))GLOB((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY ((((NULL))<((t0.c0))) IN ())  NULLS LAST, ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) IN (((t0.c0) IS TRUE)))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CHAR((NOT (t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0, t0.c0)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY ((((NULL))<((t0.c0))) IN ())  NULLS LAST, ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) IN (((t0.c0) IS TRUE)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ()))GLOB((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY ((((NULL))<((t0.c0))) IN ())  NULLS LAST, ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) IN (((t0.c0) IS TRUE)))  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0)|(t0.c0)) IN ())) ORDER BY CASE CAST(t0.c0 AS TEXT)  WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-1939732175' END WHEN '' THEN LIKELY(t0.c0) WHEN t0.c0 THEN ((t0.c0)&(NULL)) END ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c0)|(t0.c0)) IN ())) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN (('-1982961531', ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((t0.c0, t0.c0 COLLATE RTRIM)))  NULLS LAST, (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CHAR(t0.c0), '8', ((t0.c0) IS FALSE), (((t0.c0, t0.c0))==((t0.c0, t0.c0))))) AND ((0Xffffffff865cb3d0, (((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))), ((t0.c0)IS NOT(t0.c0)), ((t0.c0)<=(t0.c0))))) ASC  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE ((('-1112927373') IS FALSE)) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN (('-1982961531', ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((t0.c0, t0.c0 COLLATE RTRIM)))  NULLS LAST, (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CHAR(t0.c0), '8', ((t0.c0) IS FALSE), (((t0.c0, t0.c0))==((t0.c0, t0.c0))))) AND ((-2040745008, (((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))), ((t0.c0)IS NOT(t0.c0)), ((t0.c0)<=(t0.c0))))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0)|(t0.c0)) IN ())) ORDER BY CASE CAST(t0.c0 AS TEXT)  WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-1939732175' END WHEN '' THEN LIKELY(t0.c0) WHEN t0.c0 THEN ((t0.c0)&(NULL)) END ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c0)|(t0.c0)) IN ())) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN (('-1982961531', ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((t0.c0, t0.c0 COLLATE RTRIM)))  NULLS LAST, (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CHAR(t0.c0), '8', ((t0.c0) IS FALSE), (((t0.c0, t0.c0))==((t0.c0, t0.c0))))) AND ((0Xffffffff865cb3d0, (((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))), ((t0.c0)IS NOT(t0.c0)), ((t0.c0)<=(t0.c0))))) ASC  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE ((('-1112927373') IS FALSE)) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN (('-1982961531', ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((t0.c0, t0.c0 COLLATE RTRIM)))  NULLS LAST, (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CHAR(t0.c0), '8', ((t0.c0) IS FALSE), (((t0.c0, t0.c0))==((t0.c0, t0.c0))))) AND ((-2040745008, (((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))), ((t0.c0)IS NOT(t0.c0)), ((t0.c0)<=(t0.c0))))) ASC  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(CAST(9.67425476E8 AS NUMERIC) AS REAL)) ORDER BY ((json_array(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))%(t0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (((CAST(CAST(9.67425476E8 AS NUMERIC) AS REAL))AND(NULLIF(DISTINCT CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0)!=(t0.c0)))))) ORDER BY (((+ (t0.c0)))%(CAST(t0.c0 AS REAL))) ASC, (((t0.c0 IN (t0.c0, t0.c0))) IS TRUE) ASC;
SELECT ALL * FROM t0 WHERE (x'd6');
SELECT * FROM t0 WHERE (((x'd6')AND((((188415772, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)), ((t0.c0)>=(-1951158172)), TRIM(DISTINCT t0.c0, t0.c0))) AND ((((t0.c0)AND(t0.c0)), t0.c0 COLLATE BINARY, t0.c0)))))) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (x'd6');
SELECT * FROM t0 WHERE (((x'd6')AND((((188415772, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)), ((t0.c0)>=(-1951158172)), TRIM(DISTINCT t0.c0, t0.c0))) AND ((((t0.c0)AND(t0.c0)), t0.c0 COLLATE BINARY, t0.c0)))))) LIMIT 0x1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (t0.c0);
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0)AND(((t0.c0)+(t0.c0)) COLLATE RTRIM))) ORDER BY ((CAST(t0.c0 AS INTEGER))OR((NOT (t0.c0)))) DESC  NULLS FIRST, x'26'  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((0.9472826548893927)LIKE(t0.c0))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0, t0.c0))!=((NULL, t0.c0, t0.c0, t0.c0)))) AND ((NOT (t0.c0))))) ORDER BY ((load_extension(t0.c0)) BETWEEN (((t0.c0)!=(t0.c0))) AND ((t0.c0 IN ()))) ASC;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((((((0.9472826548893927)LIKE(t0.c0))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0, t0.c0))!=((NULL, t0.c0, t0.c0, t0.c0)))) AND ((NOT (t0.c0)))))AND(((((t0.c0) ISNULL))+(((((t0.c0)AND(t0.c0)))OR(t0.c0))))))) ORDER BY (NOT (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))  NULLS LAST, (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()) ASC  NULLS LAST, CASE CAST(t0.c0 AS BLOB)  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0)<(t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN UPPER(DISTINCT t0.c0) WHEN ((t0.c0) NOT NULL) THEN ABS(-2.113459527E9) ELSE ((t0.c0)<<(t0.c0)) END LIMIT 0;
SELECT ALL * FROM t0 WHERE (((((0.9472826548893927)LIKE(t0.c0))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0, t0.c0))!=((NULL, t0.c0, t0.c0, t0.c0)))) AND ((NOT (t0.c0))))) ORDER BY ((load_extension(t0.c0)) BETWEEN (((t0.c0)!=(t0.c0))) AND ((t0.c0 IN ()))) ASC;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((((((0.9472826548893927)LIKE(t0.c0))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0, t0.c0))!=((NULL, t0.c0, t0.c0, t0.c0)))) AND ((NOT (t0.c0)))))AND(((((t0.c0) ISNULL))+(((((t0.c0)AND(t0.c0)))OR(t0.c0))))))) ORDER BY (NOT (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))  NULLS LAST, (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()) ASC  NULLS LAST, CASE CAST(t0.c0 AS BLOB)  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0)<(t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN UPPER(DISTINCT t0.c0) WHEN ((t0.c0) NOT NULL) THEN ABS(-2.113459527E9) ELSE ((t0.c0)<<(t0.c0)) END LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN CASE '1449477948'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END);
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((CASE WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN CASE '1449477948'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END)AND((((((((t0.c0 IN ()))AND((((x'77e9d0', t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))))) ORDER BY ((((t0.c0)<<(t0.c0))) BETWEEN ((((t0.c0, t0.c0))<>((t0.c0, t0.c0)))) AND (UPPER(t0.c0))) LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((CASE '?t'  WHEN t0.c0 THEN t0.c0 END)OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((t0.c0) NOTNULL))), (((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN (((t0.c0)IS(t0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)AND(NULL))) ORDER BY TIME(0.5598579515330545, LOWER(t0.c0), x'', (+ (''))) LIMIT 0 INTERSECT SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) IS FALSE) AS NUMERIC)) ORDER BY TIME(0.5598579515330545, LOWER(t0.c0), x'', (+ (''))) LIMIT 0;
SELECT * FROM t0 WHERE ((((~ (t0.c0))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND ('' COLLATE BINARY)));
SELECT * FROM t0 WHERE ((((~ (t0.c0))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND ('' COLLATE BINARY))) ORDER BY ((((((((((((((((t0.c0)OR(x'594aa5')))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0)==(-660719391)))) DESC;
SELECT * FROM t0 WHERE ((((~ (t0.c0))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND ('' COLLATE BINARY)));
SELECT * FROM t0 WHERE ((((~ (t0.c0))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND ('' COLLATE BINARY))) ORDER BY ((((((((((((((((t0.c0)OR(x'594aa5')))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0)==(-660719391)))) DESC;
SELECT * FROM t0 WHERE (LOWER(((t0.c0)==(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (LOWER(((t0.c0)==(t0.c0)))) ORDER BY NULLIF((t0.c0 IN ()), LIKELIHOOD(t0.c0, t0.c0))  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)%(t0.c0)) COLLATE BINARY) ORDER BY NULLIF((t0.c0 IN ()), LIKELIHOOD(t0.c0, t0.c0))  NULLS LAST LIMIT 0;
SELECT * FROM t0 WHERE (LOWER(((t0.c0)==(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (LOWER(((t0.c0)==(t0.c0)))) ORDER BY NULLIF((t0.c0 IN ()), LIKELIHOOD(t0.c0, t0.c0))  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)%(t0.c0)) COLLATE BINARY) ORDER BY NULLIF((t0.c0 IN ()), LIKELIHOOD(t0.c0, t0.c0))  NULLS LAST LIMIT 0;
SELECT ALL MAX(t0.c0) FROM t0 NOT INDEXED WHERE (CASE t0.c0  WHEN t0.c0 COLLATE RTRIM THEN (((t0.c0, t0.c0))=((t0.c0, t0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN CAST(x'e0bad4' AS NUMERIC) THEN TOTAL_CHANGES() ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) END) ORDER BY CASE t0.c0 COLLATE BINARY  WHEN t0.c0 COLLATE RTRIM THEN (0Xffffffffb41f2980 IN ()) WHEN ((t0.c0)<(t0.c0)) THEN ((t0.c0) IS FALSE) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 COLLATE RTRIM THEN (((t0.c0, t0.c0))==((t0.c0, t0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN CAST(x'e0bad4' AS NUMERIC) THEN TOTAL_CHANGES() ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) END) ORDER BY CASE t0.c0 COLLATE BINARY  WHEN t0.c0 COLLATE RTRIM THEN (-1273026176 IN ()) WHEN ((t0.c0)<(t0.c0)) THEN ((t0.c0) IS FALSE) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (x'') ORDER BY CASE t0.c0 COLLATE BINARY  WHEN t0.c0 COLLATE RTRIM THEN (-1273026176 IN ()) WHEN ((t0.c0)<(t0.c0)) THEN ((t0.c0) IS FALSE) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END;
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c0 IN ()))OR((('1099199564') BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)AND(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(0Xfffffffff4104bca)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE ((((((((((((((t0.c0 IN ()))OR((('1099199564') BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)AND(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(-200258614)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)<((NOT (x'77e7'))))))) INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, x'')) AND ((t0.c0, t0.c0, t0.c0))) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c0 IN ()))OR((('1099199564') BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)AND(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(0Xfffffffff4104bca)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE ((((((((((((((t0.c0 IN ()))OR((('1099199564') BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)AND(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(-200258614)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)<((NOT (x'77e7'))))))) INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, x'')) AND ((t0.c0, t0.c0, t0.c0))) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (((LOWER(DISTINCT t0.c0))+(((t0.c0) IS FALSE))));
SELECT ALL * FROM t0 WHERE (((((LOWER(DISTINCT t0.c0))+(((t0.c0) IS FALSE))))AND(((((t0.c0)/(t0.c0))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c0) BETWEEN ('êè´') AND (t0.c0)))))));
SELECT ALL * FROM t0 WHERE (((LOWER(DISTINCT t0.c0))+(((t0.c0) IS FALSE))));
SELECT ALL * FROM t0 WHERE (((((LOWER(DISTINCT t0.c0))+(((t0.c0) IS FALSE))))AND(((((t0.c0)/(t0.c0))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c0) BETWEEN ('êè´') AND (t0.c0)))))));
SELECT * FROM t0 WHERE (((CAST(0.6377786245905002 AS TEXT)) BETWEEN ((('2020069572')||(t0.c0))) AND ((t0.c0 IN ())))) ORDER BY t0.c0 ASC;
SELECT DISTINCT * FROM t0 WHERE (((((CAST(0.6377786245905002 AS TEXT)) BETWEEN ((('2020069572')||(t0.c0))) AND ((t0.c0 IN ()))))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT NULL)))) ORDER BY ((((t0.c0) IS TRUE))>>(((t0.c0)&(t0.c0)))) ASC  NULLS FIRST, (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM t0 WHERE (((CAST(0.6377786245905002 AS TEXT)) BETWEEN ((('2020069572')||(t0.c0))) AND ((t0.c0 IN ())))) ORDER BY t0.c0 ASC;
SELECT DISTINCT * FROM t0 WHERE (((((CAST(0.6377786245905002 AS TEXT)) BETWEEN ((('2020069572')||(t0.c0))) AND ((t0.c0 IN ()))))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT NULL)))) ORDER BY ((((t0.c0) IS TRUE))>>(((t0.c0)&(t0.c0)))) ASC  NULLS FIRST, (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM t0 WHERE (COALESCE(DISTINCT (x'0a' IN (0.3594728926007583)), (~ (t0.c0)))) ORDER BY NULL DESC, (((t0.c0 IN (t0.c0, '1494165700', t0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) ISNULL))) ASC;
SELECT * FROM t0 WHERE (((COALESCE(DISTINCT (x'0a' IN (0.3594728926007583)), (~ (t0.c0))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN (t0.c0 IN ()) THEN (t0.c0 IN ()) END))) ORDER BY NULL DESC, (((t0.c0 IN (t0.c0, '1494165700', t0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) ISNULL))) ASC LIMIT 3 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY NULL DESC, (((t0.c0 IN (t0.c0, '1494165700', t0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) ISNULL))) ASC LIMIT 0X3;
SELECT * FROM t0 WHERE (COALESCE(DISTINCT (x'0a' IN (0.3594728926007583)), (~ (t0.c0)))) ORDER BY NULL DESC, (((t0.c0 IN (t0.c0, '1494165700', t0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) ISNULL))) ASC;
SELECT * FROM t0 WHERE (((COALESCE(DISTINCT (x'0a' IN (0.3594728926007583)), (~ (t0.c0))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN (t0.c0 IN ()) THEN (t0.c0 IN ()) END))) ORDER BY NULL DESC, (((t0.c0 IN (t0.c0, '1494165700', t0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) ISNULL))) ASC LIMIT 3 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY NULL DESC, (((t0.c0 IN (t0.c0, '1494165700', t0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) ISNULL))) ASC LIMIT 0X3;
SELECT ALL COUNT(*) FROM t0 WHERE (IFNULL(DISTINCT ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((IFNULL(DISTINCT ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))AND(((((CAST(t0.c0 AS BLOB))AND(CAST(t0.c0 AS REAL))))OR(((t0.c0)/(t0.c0)))))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)-(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(NULL))))) ORDER BY HEX(DISTINCT ((t0.c0) IS TRUE)) DESC;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)-(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(NULL))))) ORDER BY ((((t0.c0)<(t0.c0))) BETWEEN (((x'') IS FALSE)) AND ((t0.c0 IN (t0.c0, t0.c0)))) INTERSECT SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))&(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) ORDER BY ((((t0.c0)<(t0.c0))) BETWEEN (((x'') IS FALSE)) AND ((t0.c0 IN (t0.c0, t0.c0))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)-(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(NULL))))) ORDER BY HEX(DISTINCT ((t0.c0) IS TRUE)) DESC;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)-(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(NULL))))) ORDER BY ((((t0.c0)<(t0.c0))) BETWEEN (((x'') IS FALSE)) AND ((t0.c0 IN (t0.c0, t0.c0)))) INTERSECT SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))&(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) ORDER BY ((((t0.c0)<(t0.c0))) BETWEEN (((x'') IS FALSE)) AND ((t0.c0 IN (t0.c0, t0.c0))));
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (x'a9') AND (((t0.c0)OR(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (x'a9') AND (((t0.c0)OR(t0.c0))))) ORDER BY (((t0.c0 COLLATE RTRIM, (t0.c0 IN ()), t0.c0 COLLATE RTRIM))<>((((NULL)<>(t0.c0)), (t0.c0 IN ()), ((t0.c0)&(t0.c0)))))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (x'a9') AND (((t0.c0)OR(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (x'a9') AND (((t0.c0)OR(t0.c0))))) ORDER BY (((t0.c0 COLLATE RTRIM, (t0.c0 IN ()), t0.c0 COLLATE RTRIM))<>((((NULL)<>(t0.c0)), (t0.c0 IN ()), ((t0.c0)&(t0.c0)))))  NULLS FIRST LIMIT 1;
SELECT * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN (t0.c0))) ORDER BY CASE (t0.c0 IN ())  WHEN SQLITE_COMPILEOPTION_USED(t0.c0) THEN ((t0.c0) ISNULL) END  NULLS LAST, CAST(((NULL) IS FALSE) AS REAL), (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)>>(x'')), t0.c0)) AND ((((t0.c0)IS NOT(t0.c0)), 0x41e1043a))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN (t0.c0))) ORDER BY (- (t0.c0)) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN (t0.c0))) ORDER BY CASE (t0.c0 IN ())  WHEN SQLITE_COMPILEOPTION_USED(t0.c0) THEN ((t0.c0) ISNULL) END  NULLS LAST, CAST(((NULL) IS FALSE) AS REAL), (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)>>(x'')), t0.c0)) AND ((((t0.c0)IS NOT(t0.c0)), 0x41e1043a))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN (t0.c0))) ORDER BY (- (t0.c0)) DESC  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (((((t0.c0) ISNULL)) BETWEEN ('-1635151636') AND (((t0.c0) BETWEEN (t0.c0) AND (0.7034717991299468))))) ORDER BY NULL  NULLS LAST, ((t0.c0) NOT NULL) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((t0.c0) ISNULL)) BETWEEN ('-1635151636') AND (((t0.c0) BETWEEN (t0.c0) AND (0.7034717991299468))))) ORDER BY NULL  NULLS LAST, ((t0.c0) NOT NULL) DESC LIMIT 0;
SELECT ALL COUNT(*) FROM t0 WHERE (((HEX(DISTINCT t0.c0))-((t0.c0 IN (t0.c0))))) ORDER BY (((LAST_INSERT_ROWID(), ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), ((t0.c0)<(t0.c0)), t0.c0))>=(((~ (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0, ((t0.c0)>(x''))))) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((HEX(DISTINCT t0.c0))-((t0.c0 IN (t0.c0))))) ORDER BY (('1549388927') IS FALSE) DESC  NULLS LAST, ((((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND((((t0.c0, t0.c0))<((t0.c0, t0.c0))))))OR(0.9971341411496897)))OR(((t0.c0)%(t0.c0)))))AND(0.8683184574347425)) ASC LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE (json_patch(((t0.c0) IS FALSE), ((((t0.c0)AND(t0.c0)))AND(t0.c0))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((json_patch(((t0.c0) IS FALSE), ((((t0.c0)AND(t0.c0)))AND(t0.c0))))AND((((t0.c0)OR(t0.c0)) IN (t0.c0))))) LIMIT 0 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(x'' AS BLOB)) LIMIT 0;
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0))>((t0.c0, t0.c0))))!=(((t0.c0) IS FALSE)))) ORDER BY (((~ (t0.c0))) IS TRUE)  NULLS FIRST, (((((t0.c0))<>((t0.c0)))) BETWEEN (t0.c0) AND (((t0.c0)<>(t0.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0, t0.c0))>((t0.c0, t0.c0))))<(((t0.c0) IS FALSE))))AND((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, ((x'')IS NOT(t0.c0)), TRIM(t0.c0), (+ (t0.c0)), t0.c0 COLLATE BINARY)) AND ((CAST(t0.c0 AS TEXT), t0.c0 COLLATE RTRIM, ((((t0.c0)AND(x'31')))OR(NULL)), (t0.c0 IN (t0.c0)), (~ (t0.c0)))))))) ORDER BY (((~ (t0.c0))) IS TRUE)  NULLS FIRST, (((((t0.c0))!=((t0.c0)))) BETWEEN (t0.c0) AND (((t0.c0)<>(t0.c0))))  NULLS FIRST LIMIT 0x4 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (json_remove(t0.c0, t0.c0, t0.c0)) AND (((t0.c0)<(t0.c0))))) ORDER BY (((~ (t0.c0))) IS TRUE)  NULLS FIRST, (((((t0.c0))<>((t0.c0)))) BETWEEN (t0.c0) AND (((t0.c0)<>(t0.c0))))  NULLS FIRST LIMIT 4;
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0))>((t0.c0, t0.c0))))!=(((t0.c0) IS FALSE)))) ORDER BY (((~ (t0.c0))) IS TRUE)  NULLS FIRST, (((((t0.c0))<>((t0.c0)))) BETWEEN (t0.c0) AND (((t0.c0)<>(t0.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0, t0.c0))>((t0.c0, t0.c0))))<(((t0.c0) IS FALSE))))AND((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, ((x'')IS NOT(t0.c0)), TRIM(t0.c0), (+ (t0.c0)), t0.c0 COLLATE BINARY)) AND ((CAST(t0.c0 AS TEXT), t0.c0 COLLATE RTRIM, ((((t0.c0)AND(x'31')))OR(NULL)), (t0.c0 IN (t0.c0)), (~ (t0.c0)))))))) ORDER BY (((~ (t0.c0))) IS TRUE)  NULLS FIRST, (((((t0.c0))!=((t0.c0)))) BETWEEN (t0.c0) AND (((t0.c0)<>(t0.c0))))  NULLS FIRST LIMIT 0x4 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (json_remove(t0.c0, t0.c0, t0.c0)) AND (((t0.c0)<(t0.c0))))) ORDER BY (((~ (t0.c0))) IS TRUE)  NULLS FIRST, (((((t0.c0))<>((t0.c0)))) BETWEEN (t0.c0) AND (((t0.c0)<>(t0.c0))))  NULLS FIRST LIMIT 4;
SELECT * FROM t0 WHERE ((- ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) ORDER BY (((t0.c0, '-1030407755')) NOT BETWEEN ((((t0.c0)/(t0.c0)), (- (t0.c0)))) AND ((((t0.c0)AND(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ASC, ((t0.c0)>=(CASE WHEN t0.c0 THEN t0.c0 END)) DESC;
SELECT DISTINCT * FROM t0 WHERE ((- ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) ORDER BY json_array(t0.c0, t0.c0) COLLATE RTRIM LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((~ ((((t0.c0))>=((x'')))))) ORDER BY json_array(t0.c0, t0.c0) COLLATE RTRIM LIMIT 0X1;
SELECT * FROM t0 WHERE ((- ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) ORDER BY (((t0.c0, '-1030407755')) NOT BETWEEN ((((t0.c0)/(t0.c0)), (- (t0.c0)))) AND ((((t0.c0)AND(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ASC, ((t0.c0)>=(CASE WHEN t0.c0 THEN t0.c0 END)) DESC;
SELECT DISTINCT * FROM t0 WHERE ((- ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) ORDER BY json_array(t0.c0, t0.c0) COLLATE RTRIM LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((~ ((((t0.c0))>=((x'')))))) ORDER BY json_array(t0.c0, t0.c0) COLLATE RTRIM LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (HEX(t0.c0 COLLATE BINARY));
SELECT * FROM t0 WHERE (HEX(t0.c0 COLLATE BINARY)) ORDER BY MIN(((t0.c0) ISNULL), CAST(t0.c0 AS INTEGER), ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)));
SELECT ALL * FROM t0 WHERE (HEX(t0.c0 COLLATE BINARY));
SELECT * FROM t0 WHERE (HEX(t0.c0 COLLATE BINARY)) ORDER BY MIN(((t0.c0) ISNULL), CAST(t0.c0 AS INTEGER), ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)));
SELECT * FROM t0 WHERE ((- (LIKELY(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE ((- (LIKELY(t0.c0)))) ORDER BY ((t0.c0) NOT NULL) DESC LIMIT 1;
SELECT * FROM t0 WHERE ((- (LIKELY(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE ((- (LIKELY(t0.c0)))) ORDER BY ((t0.c0) NOT NULL) DESC LIMIT 1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) IS TRUE))>((~ (t0.c0))))) ORDER BY (((((t0.c0))>=((0.8574572134707825))))>=(((((t0.c0)OR(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) IS TRUE))>((~ (t0.c0)))))AND(((((((((((NULL)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))IS NOT(-950781238))))) ORDER BY (- (((t0.c0)>>(t0.c0)))) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c0 AS NUMERIC), CASE WHEN NULL THEN x'1c' WHEN t0.c0 THEN t0.c0 WHEN 'Vp6' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))!=((((t0.c0) IS TRUE), t0.c0 COLLATE RTRIM))));
SELECT DISTINCT * FROM t0 WHERE ((((((CAST(t0.c0 AS NUMERIC), CASE WHEN NULL THEN x'1c' WHEN t0.c0 THEN t0.c0 WHEN 'Vp6' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>((((t0.c0) IS TRUE), t0.c0 COLLATE RTRIM))))AND((((('')>=(t0.c0)))|(CAST(t0.c0 AS BLOB)))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((((NOT (t0.c0)))OR(((t0.c0)LIKE(t0.c0)))))AND(t0.c0)))AND(t0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c0 AS NUMERIC), CASE WHEN NULL THEN x'1c' WHEN t0.c0 THEN t0.c0 WHEN 'Vp6' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))!=((((t0.c0) IS TRUE), t0.c0 COLLATE RTRIM))));
SELECT DISTINCT * FROM t0 WHERE ((((((CAST(t0.c0 AS NUMERIC), CASE WHEN NULL THEN x'1c' WHEN t0.c0 THEN t0.c0 WHEN 'Vp6' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>((((t0.c0) IS TRUE), t0.c0 COLLATE RTRIM))))AND((((('')>=(t0.c0)))|(CAST(t0.c0 AS BLOB)))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((((NOT (t0.c0)))OR(((t0.c0)LIKE(t0.c0)))))AND(t0.c0)))AND(t0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, NULL, t0.c0)) NOT BETWEEN ((((t0.c0)|(t0.c0)), (NOT (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)>>(t0.c0)), '' COLLATE NOCASE)) AND ((CAST(t0.c0 AS TEXT), CHAR(t0.c0, t0.c0, t0.c0, '2119975713', t0.c0, t0.c0), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ABS(DISTINCT t0.c0), ((t0.c0)||(t0.c0)))))) ORDER BY ((TRIM(t0.c0)) NOT BETWEEN ((~ (t0.c0))) AND ((x'6dcc85021d' IN (0Xfffffffff1f8b08c))));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, NULL, t0.c0)) NOT BETWEEN ((((t0.c0)|(t0.c0)), (NOT (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)>>(t0.c0)), '' COLLATE NOCASE)) AND ((CAST(t0.c0 AS TEXT), CHAR(t0.c0, t0.c0, t0.c0, '2119975713', t0.c0, t0.c0), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ABS(DISTINCT t0.c0), ((t0.c0)||(t0.c0))))))AND((- (t0.c0))))) ORDER BY ((TRIM(t0.c0)) NOT BETWEEN ((~ (t0.c0))) AND ((x'6dcc85021d' IN (0xfffffffff1f8b08c)))) LIMIT 0x0 INTERSECT SELECT COUNT(*) FROM t0 WHERE (((((x'')OR(CAST(t0.c0 AS BLOB))))OR((NOT (t0.c0))))) ORDER BY ((TRIM(t0.c0)) NOT BETWEEN ((~ (t0.c0))) AND ((x'6dcc85021d' IN (0Xfffffffff1f8b08c)))) LIMIT 0;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY CASE (('-1112927373') NOTNULL)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((x'')IS(t0.c0)) WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0)*(t0.c0)) WHEN (- (t0.c0)) THEN (- (NULL)) END ASC  NULLS LAST, UNLIKELY(DISTINCT ((t0.c0)IS NOT(t0.c0))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND((((t0.c0 IN (t0.c0))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(t0.c0))) AND ((NOT (t0.c0))))))) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM ASC  NULLS FIRST LIMIT 4;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY CASE (('-1112927373') NOTNULL)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((x'')IS(t0.c0)) WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0)*(t0.c0)) WHEN (- (t0.c0)) THEN (- (NULL)) END ASC  NULLS LAST, UNLIKELY(DISTINCT ((t0.c0)IS NOT(t0.c0))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND((((t0.c0 IN (t0.c0))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(t0.c0))) AND ((NOT (t0.c0))))))) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM ASC  NULLS FIRST LIMIT 4;
SELECT * FROM t0 WHERE ((NOT (t0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0)) COLLATE RTRIM)AND(((NOT (t0.c0)) IN (((NULL)==(t0.c0))))))) LIMIT 0X4 INTERSECT SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, 0.012341063954677822)) AND ((t0.c0, t0.c0))))AND((- (t0.c0))))) LIMIT 0X4;
SELECT * FROM t0 WHERE ((NOT (t0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0)) COLLATE RTRIM)AND(((NOT (t0.c0)) IN (((NULL)==(t0.c0))))))) LIMIT 0X4 INTERSECT SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, 0.012341063954677822)) AND ((t0.c0, t0.c0))))AND((- (t0.c0))))) LIMIT 0X4;
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c0)!=(t0.c0))) NOT NULL)) ORDER BY (~ (((t0.c0) NOTNULL))) ASC  NULLS FIRST, ((((((((((((((t0.c0)OR(t0.c0)))AND(NULL)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(-1966841373))) ISNULL) DESC;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0)!=(t0.c0))) NOT NULL))AND(t0.c0))) ORDER BY ((((t0.c0)-(t0.c0))) IS FALSE);
SELECT COUNT(*) FROM t0 WHERE (((- (t0.c0)) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((- (t0.c0)) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((t0.c0)=(t0.c0)))<=(((t0.c0)-(t0.c0))))))) ORDER BY ((((t0.c0)|(t0.c0)))<>(t0.c0 COLLATE RTRIM)) INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN -1179911117 WHEN t0.c0 THEN '1430672166' END THEN ((t0.c0)-(t0.c0)) ELSE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) END) ORDER BY ((((t0.c0)|(t0.c0)))!=(t0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))=(CAST(t0.c0 AS REAL)))) ORDER BY (UNICODE(NULL) IN ((((t0.c0))>=((t0.c0))))), (((((t0.c0, t0.c0))<>((t0.c0, t0.c0))))/(((t0.c0)>(t0.c0))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((t0.c0)IS NOT(t0.c0)))=(CAST(t0.c0 AS REAL))))AND(NULL))) ORDER BY UPPER(DISTINCT '1282586232')  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST(((t0.c0)|(t0.c0)) AS TEXT)) ORDER BY UPPER(DISTINCT '1282586232')  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0 WHERE ((~ (t0.c0)));
SELECT DISTINCT * FROM t0 WHERE ((((~ (t0.c0)))AND(((COALESCE(DISTINCT t0.c0, t0.c0)) IS FALSE)))) LIMIT 0X2;
SELECT ALL * FROM t0 WHERE ((~ (t0.c0)));
SELECT DISTINCT * FROM t0 WHERE ((((~ (t0.c0)))AND(((COALESCE(DISTINCT t0.c0, t0.c0)) IS FALSE)))) LIMIT 0X2;
SELECT ALL * FROM t0 WHERE ((NULL IN (NULLIF(DISTINCT t0.c0, t0.c0), ((t0.c0)OR(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((NULL IN (NULLIF(DISTINCT t0.c0, t0.c0), ((t0.c0)OR(t0.c0))))) LIMIT 0X1;
SELECT ALL * FROM t0 WHERE ((NULL IN (NULLIF(DISTINCT t0.c0, t0.c0), ((t0.c0)OR(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((NULL IN (NULLIF(DISTINCT t0.c0, t0.c0), ((t0.c0)OR(t0.c0))))) LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)&(t0.c0)))AND(CAST(t0.c0 AS BLOB))))AND((t0.c0 IN ()))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)&(t0.c0)))AND(CAST(t0.c0 AS BLOB))))AND((t0.c0 IN ())))) ORDER BY CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS NUMERIC) DESC, ((((CAST(t0.c0 AS BLOB))AND(-1372694229)))OR(t0.c0)), CASE WHEN ((t0.c0)|(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.5432791897656333 THEN t0.c0 ELSE t0.c0 END THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN (~ (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (((t0.c0, t0.c0))==((t0.c0, t0.c0))) THEN ((t0.c0) ISNULL) WHEN (t0.c0 IN (t0.c0)) THEN ((NULL) IS FALSE) END LIMIT 1;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)&(t0.c0)))AND(CAST(t0.c0 AS BLOB))))AND((t0.c0 IN ()))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)&(t0.c0)))AND(CAST(t0.c0 AS BLOB))))AND((t0.c0 IN ())))) ORDER BY CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS NUMERIC) DESC, ((((CAST(t0.c0 AS BLOB))AND(-1372694229)))OR(t0.c0)), CASE WHEN ((t0.c0)|(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.5432791897656333 THEN t0.c0 ELSE t0.c0 END THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN (~ (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (((t0.c0, t0.c0))==((t0.c0, t0.c0))) THEN ((t0.c0) ISNULL) WHEN (t0.c0 IN (t0.c0)) THEN ((NULL) IS FALSE) END LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((((((((- (t0.c0)))OR(t0.c0 COLLATE RTRIM)))AND('AwS)' COLLATE RTRIM)))OR(CAST(t0.c0 AS BLOB))))AND((((t0.c0, NULL, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((((((((- (t0.c0)))OR(t0.c0 COLLATE RTRIM)))AND('AwS)' COLLATE RTRIM)))OR(CAST(t0.c0 AS BLOB))))AND((((t0.c0, NULL, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0)))))) ORDER BY x'', (((- (t0.c0)))<>(((((((NULL)OR(t0.c0)))OR('-10958963')))OR(t0.c0))))  NULLS LAST, ((t0.c0 COLLATE RTRIM) NOTNULL) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND(x'26b5')) COLLATE RTRIM) ORDER BY x'', (((- (t0.c0)))!=(((((((NULL)OR(t0.c0)))OR('-10958963')))OR(t0.c0))))  NULLS LAST, ((t0.c0 COLLATE RTRIM) NOTNULL) LIMIT 0X2;
SELECT ALL * FROM t0 WHERE ((((((((((- (t0.c0)))OR(t0.c0 COLLATE RTRIM)))AND('AwS)' COLLATE RTRIM)))OR(CAST(t0.c0 AS BLOB))))AND((((t0.c0, NULL, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((((((((- (t0.c0)))OR(t0.c0 COLLATE RTRIM)))AND('AwS)' COLLATE RTRIM)))OR(CAST(t0.c0 AS BLOB))))AND((((t0.c0, NULL, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0)))))) ORDER BY x'', (((- (t0.c0)))<>(((((((NULL)OR(t0.c0)))OR('-10958963')))OR(t0.c0))))  NULLS LAST, ((t0.c0 COLLATE RTRIM) NOTNULL) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND(x'26b5')) COLLATE RTRIM) ORDER BY x'', (((- (t0.c0)))!=(((((((NULL)OR(t0.c0)))OR('-10958963')))OR(t0.c0))))  NULLS LAST, ((t0.c0 COLLATE RTRIM) NOTNULL) LIMIT 0X2;
SELECT ALL * FROM t0 WHERE ((NOT (t0.c0)));
SELECT DISTINCT * FROM t0 WHERE ((((NOT (t0.c0)))AND(CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '1882081475' ELSE t0.c0 END  WHEN ((t0.c0)>(x'50e219')) THEN TRIM(t0.c0, t0.c0) WHEN (+ (t0.c0)) THEN ((((((t0.c0)AND(t0.c0)))OR(-2.00258614E8)))OR(t0.c0)) WHEN (((t0.c0))!=((t0.c0))) THEN t0.c0 COLLATE NOCASE END))) ORDER BY ((CASE t0.c0  WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)>=(NULLIF(t0.c0, t0.c0)));
SELECT ALL * FROM t0 WHERE ((NOT (t0.c0)));
SELECT DISTINCT * FROM t0 WHERE ((((NOT (t0.c0)))AND(CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '1882081475' ELSE t0.c0 END  WHEN ((t0.c0)>(x'50e219')) THEN TRIM(t0.c0, t0.c0) WHEN (+ (t0.c0)) THEN ((((((t0.c0)AND(t0.c0)))OR(-2.00258614E8)))OR(t0.c0)) WHEN (((t0.c0))!=((t0.c0))) THEN t0.c0 COLLATE NOCASE END))) ORDER BY ((CASE t0.c0  WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)>=(NULLIF(t0.c0, t0.c0)));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)), '1290875430', NULL))<=((((t0.c0)IS NOT(t0.c0)), t0.c0, ((t0.c0)>=(t0.c0))))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)), '1290875430', NULL))<=((((t0.c0)IS NOT(t0.c0)), t0.c0, ((t0.c0)>=(t0.c0))))))AND(LIKELY(DISTINCT (((t0.c0, '(K', t0.c0))<>((t0.c0, 'd}ujY', t0.c0))))))) ORDER BY t0.c0 ASC, (((((((('q[')OR((~ (t0.c0)))))AND(((x'32e1')&(t0.c0)))))OR(((t0.c0)=(0.3095610145850377)))))AND(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))), CAST(t0.c0 AS INTEGER) COLLATE NOCASE LIMIT 0x4;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (0xfdbdf69);
SELECT MAX(t0.c0) FROM t0 WHERE (((0xfdbdf69)AND(LIKELIHOOD(DISTINCT CASE t0.c0  WHEN x'2f' THEN t0.c0 ELSE t0.c0 END, 0.005859752147863495))));
SELECT ALL * FROM t0 WHERE (((((((x'')OR(((t0.c0) ISNULL))))AND(((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR(((t0.c0)|(x''))))) ORDER BY CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC, (NOT (x'bd'))  NULLS FIRST, t0.c0 ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((((((x'')OR(((t0.c0) ISNULL))))AND(((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR(((t0.c0)|(x'')))))AND(CAST((t0.c0 IN ()) AS REAL)))) ORDER BY (((t0.c0, t0.c0, 'nS!s*')) BETWEEN ((CAST(t0.c0 AS REAL), ((t0.c0)>(NULL)), ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) AND (((((t0.c0))!=((t0.c0))), t0.c0 COLLATE NOCASE, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) INTERSECT SELECT * FROM t0 WHERE (((~ (t0.c0)) IN ())) ORDER BY (((t0.c0, t0.c0, 'nS!s*')) BETWEEN ((CAST(t0.c0 AS REAL), ((t0.c0)>(NULL)), ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) AND (((((t0.c0))<>((t0.c0))), t0.c0 COLLATE NOCASE, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((((x'')OR(((t0.c0) ISNULL))))AND(((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR(((t0.c0)|(x''))))) ORDER BY CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC, (NOT (x'bd'))  NULLS FIRST, t0.c0 ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((((((x'')OR(((t0.c0) ISNULL))))AND(((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))OR(((t0.c0)|(x'')))))AND(CAST((t0.c0 IN ()) AS REAL)))) ORDER BY (((t0.c0, t0.c0, 'nS!s*')) BETWEEN ((CAST(t0.c0 AS REAL), ((t0.c0)>(NULL)), ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) AND (((((t0.c0))!=((t0.c0))), t0.c0 COLLATE NOCASE, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) INTERSECT SELECT * FROM t0 WHERE (((~ (t0.c0)) IN ())) ORDER BY (((t0.c0, t0.c0, 'nS!s*')) BETWEEN ((CAST(t0.c0 AS REAL), ((t0.c0)>(NULL)), ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) AND (((((t0.c0))<>((t0.c0))), t0.c0 COLLATE NOCASE, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)OR(t0.c0)))<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (((t0.c0)<(x''))) AND ((t0.c0 IN ('E'))))))) ORDER BY ((CAST(t0.c0 AS INTEGER))AND(((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(0.6585512075670078)))) ASC  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (((x'53') BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (NULLIF(t0.c0, t0.c0)))) ORDER BY ((CAST(t0.c0 AS INTEGER))AND(((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(0.6585512075670078)))) ASC  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY CAST(NULL AS INTEGER) DESC  NULLS FIRST, ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0)||(t0.c0))) AND ((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, '8N', t0.c0, t0.c0))))) ASC  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (+ (CASE WHEN '' THEN t0.c0 END)) ASC  NULLS LAST, ((t0.c0 COLLATE BINARY) IS TRUE) INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (201915725) ORDER BY (+ (CASE WHEN '' THEN t0.c0 END)) ASC  NULLS LAST, ((t0.c0 COLLATE BINARY) IS TRUE);
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((x'8731') NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY t0.c0, t0.c0 DESC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((x'8731') NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()))AND(CASE ((((t0.c0)AND(t0.c0)))OR(t0.c0))  WHEN t0.c0 THEN ((t0.c0)GLOB(t0.c0)) WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END))) ORDER BY NULLIF(DISTINCT TRIM(t0.c0, t0.c0), t0.c0) DESC, NULL DESC;
SELECT MIN(t0.c0) FROM t0 WHERE (t0.c0);
SELECT MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY ((((((((((((t0.c0) NOT NULL))OR((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, 0xffffffff99227651))))))AND(t0.c0)))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((+ (t0.c0))))  NULLS LAST LIMIT 1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ('421601257', (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ('421601257', (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0)LIKE(t0.c0)) IN (CAST(t0.c0 AS REAL), (t0.c0 IN ()), ((t0.c0)IS NOT(t0.c0)))));
SELECT ALL * FROM t0 WHERE (CAST(LOWER(t0.c0) AS TEXT));
SELECT DISTINCT * FROM t0 WHERE (((CAST(LOWER(t0.c0) AS TEXT))AND(((((t0.c0)%(t0.c0)))LIKE((t0.c0 IN ())))))) LIMIT 2;
SELECT ALL * FROM t0 WHERE (CAST(LOWER(t0.c0) AS TEXT));
SELECT DISTINCT * FROM t0 WHERE (((CAST(LOWER(t0.c0) AS TEXT))AND(((((t0.c0)%(t0.c0)))LIKE((t0.c0 IN ())))))) LIMIT 2;
SELECT * FROM t0 WHERE (LOWER(DISTINCT json_extract(t0.c0, 0.03543748738672747))) ORDER BY 0.6719272861439439;
SELECT * FROM t0 WHERE (LOWER(DISTINCT json_extract(t0.c0, 0.03543748738672747))) ORDER BY 0.6719272861439439 LIMIT 1 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0))) NOT NULL)) ORDER BY 0.6719272861439439 LIMIT 0X1;
SELECT * FROM t0 WHERE (LOWER(DISTINCT json_extract(t0.c0, 0.03543748738672747))) ORDER BY 0.6719272861439439;
SELECT MIN(t0.c0) FROM t0 WHERE (CASE CASE t0.c0  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 END  WHEN (((t0.c0, t0.c0)) BETWEEN ((NULL, t0.c0)) AND ((t0.c0, t0.c0))) THEN (((t0.c0, t0.c0))>=((t0.c0, t0.c0))) WHEN ((t0.c0) NOTNULL) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)<<(t0.c0)) WHEN 0.22276080948901233 THEN t0.c0 END) ORDER BY '-1166791533' DESC  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE (((CASE CASE t0.c0  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 END  WHEN (((t0.c0, t0.c0)) BETWEEN ((NULL, t0.c0)) AND ((t0.c0, t0.c0))) THEN (((t0.c0, t0.c0))>=((t0.c0, t0.c0))) WHEN ((t0.c0) NOTNULL) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)<<(t0.c0)) WHEN 0.22276080948901233 THEN t0.c0 END)AND(((CAST(t0.c0 AS INTEGER)) IS FALSE)))) ORDER BY '-1166791533' DESC  NULLS FIRST LIMIT 0X2 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'00' THEN t0.c0 END)OR(((t0.c0)AND(t0.c0)))))OR(LIKELY(t0.c0))))OR((((t0.c0))>=((t0.c0)))))) ORDER BY '-1166791533' DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)=(t0.c0)) AS BLOB)) ORDER BY ((((CAST(t0.c0 AS NUMERIC))OR((((t0.c0))>((t0.c0))))))OR(NULL))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0)==(t0.c0)) AS BLOB))AND(((CAST(t0.c0 AS BLOB))+(((t0.c0)<=(t0.c0))))))) ORDER BY ((CAST(t0.c0 AS REAL)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c0)AND(t0.c0)))) ASC, t0.c0 ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (DATE(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0))>((t0.c0, t0.c0))), (((t0.c0, t0.c0))>((t0.c0, t0.c0))))) ORDER BY ((CAST(t0.c0 AS REAL)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c0)AND(t0.c0)))) ASC, t0.c0 ASC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)=(t0.c0)) AS BLOB)) ORDER BY ((((CAST(t0.c0 AS NUMERIC))OR((((t0.c0))>((t0.c0))))))OR(NULL))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0)==(t0.c0)) AS BLOB))AND(((CAST(t0.c0 AS BLOB))+(((t0.c0)<=(t0.c0))))))) ORDER BY ((CAST(t0.c0 AS REAL)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c0)AND(t0.c0)))) ASC, t0.c0 ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (DATE(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0))>((t0.c0, t0.c0))), (((t0.c0, t0.c0))>((t0.c0, t0.c0))))) ORDER BY ((CAST(t0.c0 AS REAL)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c0)AND(t0.c0)))) ASC, t0.c0 ASC  NULLS LAST LIMIT 2;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) IS FALSE))+(t0.c0 COLLATE NOCASE))) ORDER BY ((t0.c0 COLLATE NOCASE) NOT BETWEEN (t0.c0) AND (CAST(t0.c0 AS INTEGER))) DESC, ((t0.c0)>=(t0.c0)) COLLATE NOCASE  NULLS FIRST, (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (x'25fba6', NULLIF(t0.c0, t0.c0))) DESC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) IS FALSE))+(t0.c0 COLLATE NOCASE))) ORDER BY ((CAST(t0.c0 AS BLOB))|(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN -1.887719382E9 WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST, x'8e' ASC  NULLS FIRST LIMIT 0X1;
SELECT * FROM t0 WHERE (0Xffffffffb7de2be8) ORDER BY ((((t0.c0)GLOB(t0.c0)))|(NULL)), ((((t0.c0)*(t0.c0))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND ((((0.9098039876512218))<>((t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (-1210176536) ORDER BY ((((t0.c0)GLOB(t0.c0)))|(NULL)), ((((t0.c0)*(t0.c0))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND ((((0.9098039876512218))<>((t0.c0))))) LIMIT 3;
SELECT * FROM t0 WHERE (0Xffffffffb7de2be8) ORDER BY ((((t0.c0)GLOB(t0.c0)))|(NULL)), ((((t0.c0)*(t0.c0))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND ((((0.9098039876512218))<>((t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (-1210176536) ORDER BY ((((t0.c0)GLOB(t0.c0)))|(NULL)), ((((t0.c0)*(t0.c0))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND ((((0.9098039876512218))<>((t0.c0))))) LIMIT 3;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (- ((+ (t0.c0)))) ASC, CAST(t0.c0 AS NUMERIC) COLLATE RTRIM ASC;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY (- ((+ (t0.c0)))) ASC, CAST(t0.c0 AS NUMERIC) COLLATE RTRIM ASC;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (- ((+ (t0.c0)))) ASC, CAST(t0.c0 AS NUMERIC) COLLATE RTRIM ASC;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY (- ((+ (t0.c0)))) ASC, CAST(t0.c0 AS NUMERIC) COLLATE RTRIM ASC;
SELECT ALL * FROM t0 WHERE ((- (((t0.c0) IS FALSE))));
SELECT DISTINCT * FROM t0 WHERE ((((- (((t0.c0) IS FALSE))))AND(NULL COLLATE NOCASE))) ORDER BY (((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, '')) AND ((t0.c0, t0.c0))))/(IFNULL(DISTINCT t0.c0, t0.c0))) ASC  NULLS FIRST, (((t0.c0))<=(((t0.c0 IN (0x75330a1, t0.c0))))) LIMIT 0;
SELECT ALL * FROM t0 WHERE ((- (((t0.c0) IS FALSE))));
SELECT DISTINCT * FROM t0 WHERE ((((- (((t0.c0) IS FALSE))))AND(NULL COLLATE NOCASE))) ORDER BY (((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, '')) AND ((t0.c0, t0.c0))))/(IFNULL(DISTINCT t0.c0, t0.c0))) ASC  NULLS FIRST, (((t0.c0))<=(((t0.c0 IN (0x75330a1, t0.c0))))) LIMIT 0;
SELECT * FROM t0 WHERE (((t0.c0) IS TRUE));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) IS TRUE))AND(((t0.c0 COLLATE BINARY) IS FALSE)))) ORDER BY (NOT (t0.c0 COLLATE BINARY))  NULLS FIRST, NULL  NULLS FIRST, ((((t0.c0)|(t0.c0))) BETWEEN (((x'4638ffa0')<=(t0.c0))) AND (CASE WHEN 't' THEN 0.570833273855306 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'd19e' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC LIMIT 0x3;
SELECT * FROM t0 WHERE (((t0.c0) IS TRUE));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) IS TRUE))AND(((t0.c0 COLLATE BINARY) IS FALSE)))) ORDER BY (NOT (t0.c0 COLLATE BINARY))  NULLS FIRST, NULL  NULLS FIRST, ((((t0.c0)|(t0.c0))) BETWEEN (((x'4638ffa0')<=(t0.c0))) AND (CASE WHEN 't' THEN 0.570833273855306 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'd19e' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC LIMIT 0x3;
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0))>=((t0.c0, t0.c0)))) NOT BETWEEN ('!yL[') AND (x'4cae'))) ORDER BY t0.c0  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((t0.c0, t0.c0))>=((t0.c0, t0.c0)))) NOT BETWEEN ('!yL[') AND (x'4cae')))AND(t0.c0))) ORDER BY t0.c0  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0))>=((t0.c0, t0.c0)))) NOT BETWEEN ('!yL[') AND (x'4cae'))) ORDER BY t0.c0  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((t0.c0, t0.c0))>=((t0.c0, t0.c0)))) NOT BETWEEN ('!yL[') AND (x'4cae')))AND(t0.c0))) ORDER BY t0.c0  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((0.2839549326551152 IN ()))*(CASE WHEN t0.c0 THEN t0.c0 WHEN 0.0987957476596214 THEN t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE ((((0.2839549326551152 IN ()))*(CASE WHEN t0.c0 THEN t0.c0 WHEN 0.0987957476596214 THEN t0.c0 END))) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE RTRIM, ((t0.c0 COLLATE NOCASE) BETWEEN (LIKELIHOOD(DISTINCT t0.c0, t0.c0)) AND ((t0.c0 IN ()))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST((NOT (t0.c0)) AS REAL)) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE RTRIM, ((t0.c0 COLLATE NOCASE) BETWEEN (LIKELIHOOD(DISTINCT t0.c0, t0.c0)) AND ((t0.c0 IN ())));
SELECT ALL * FROM t0 WHERE ((((0.2839549326551152 IN ()))*(CASE WHEN t0.c0 THEN t0.c0 WHEN 0.0987957476596214 THEN t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE ((((0.2839549326551152 IN ()))*(CASE WHEN t0.c0 THEN t0.c0 WHEN 0.0987957476596214 THEN t0.c0 END))) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE RTRIM, ((t0.c0 COLLATE NOCASE) BETWEEN (LIKELIHOOD(DISTINCT t0.c0, t0.c0)) AND ((t0.c0 IN ()))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST((NOT (t0.c0)) AS REAL)) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE RTRIM, ((t0.c0 COLLATE NOCASE) BETWEEN (LIKELIHOOD(DISTINCT t0.c0, t0.c0)) AND ((t0.c0 IN ())));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0)>=(((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0))))) ORDER BY ((((t0.c0)%('1912967941'))) NOT BETWEEN (((t0.c0)>=(t0.c0))) AND (((t0.c0)%(t0.c0)))) ASC, ((((0Xfffffffff6b849bc) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (x'c40d') AND (SQLITE_COMPILEOPTION_GET(t0.c0))) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)==(((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0)))))AND(CAST(LIKELIHOOD(t0.c0, t0.c0) AS TEXT)))) ORDER BY ((((t0.c0)%('1912967941'))) NOT BETWEEN (((t0.c0)>=(t0.c0))) AND (((t0.c0)%(t0.c0)))) ASC, ((((0xfffffffff6b849bc) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (x'c40d') AND (SQLITE_COMPILEOPTION_GET(t0.c0))) DESC;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE BINARY, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) AND ((CAST(t0.c0 AS TEXT), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY 0X702e48c3, ((NOT (t0.c0)) IN ()) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE BINARY, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) AND ((CAST(t0.c0 AS TEXT), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))AND(LIKELY(DISTINCT ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))) ORDER BY t0.c0 ASC, (((~ (0.4976323302016401)))GLOB(CAST(t0.c0 AS INTEGER))) DESC, CAST((t0.c0 IN (t0.c0, t0.c0)) AS NUMERIC);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE BINARY, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) AND ((CAST(t0.c0 AS TEXT), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY 0X702e48c3, ((NOT (t0.c0)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY) IS TRUE)) ORDER BY x'099c' ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) IS TRUE)) ORDER BY x'099c' ASC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY) IS TRUE)) ORDER BY x'099c' ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) IS TRUE)) ORDER BY x'099c' ASC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (((((t0.c0, t0.c0))>=((t0.c0, t0.c0))) IN ()));
SELECT ALL * FROM t0 WHERE (((((t0.c0, t0.c0))>=((t0.c0, t0.c0))) IN ()));
SELECT ALL * FROM t0 WHERE (((((t0.c0, t0.c0))>=((t0.c0, t0.c0))) IN ()));
SELECT ALL * FROM t0 WHERE (((((t0.c0, t0.c0))>=((t0.c0, t0.c0))) IN ()));
SELECT * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)OR((+ (t0.c0)))))OR(((t0.c0)|(t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((((t0.c0 COLLATE NOCASE)OR((+ (t0.c0)))))OR(((t0.c0)|(t0.c0)))))AND(0.22660615113743765))) ORDER BY CAST(((t0.c0)-(t0.c0)) AS NUMERIC);
SELECT * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)OR((+ (t0.c0)))))OR(((t0.c0)|(t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((((t0.c0 COLLATE NOCASE)OR((+ (t0.c0)))))OR(((t0.c0)|(t0.c0)))))AND(0.22660615113743765))) ORDER BY CAST(((t0.c0)-(t0.c0)) AS NUMERIC);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN UPPER(t0.c0) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) WHEN ('773064094' IN (t0.c0)) THEN ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) WHEN CAST(t0.c0 AS TEXT) THEN ((x'')-(t0.c0)) ELSE t0.c0 COLLATE RTRIM END) ORDER BY ((((t0.c0)LIKE(t0.c0))) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c0 AS NUMERIC))), ((((t0.c0 IN ())))>=(('è¹'))), (((- (t0.c0)))*(((t0.c0)+(0.6004773448767163))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN UPPER(t0.c0) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) WHEN ('773064094' IN (t0.c0)) THEN ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) WHEN CAST(t0.c0 AS TEXT) THEN ((x'')-(t0.c0)) ELSE t0.c0 COLLATE RTRIM END)AND((((t0.c0 COLLATE NOCASE, (+ (t0.c0)), json_quote(t0.c0), t0.c0 COLLATE NOCASE))>=((MAX('Y', t0.c0, t0.c0), ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), SQLITE_SOURCE_ID(), (- (NULL)))))))) ORDER BY ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))IS(((0.1001154139809467)!=(t0.c0))))  NULLS FIRST INTERSECT SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)*(t0.c0))))>=((CAST(t0.c0 AS REAL))))) ORDER BY ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))IS(((0.1001154139809467)!=(t0.c0))))  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE (((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0 COLLATE BINARY)))OR(CAST(t0.c0 AS BLOB))))OR(((x'b1c0')IS NOT(t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0 COLLATE BINARY)))OR(CAST(t0.c0 AS BLOB))))OR(((x'b1c0')IS NOT(t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY t0.c0;
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)>=((((0xfffffffff65b4ec2, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0)))))) ORDER BY highlight(((t0.c0)|(t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0) ISNULL), ((t0.c0)&(0.4385794289584355)))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((t0.c0)>=((((0Xfffffffff65b4ec2, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0)))))) ORDER BY ((((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)-(t0.c0)))))OR(t0.c0 COLLATE BINARY)), ABS((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0)))) DESC LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST(COALESCE(DISTINCT t0.c0, NULL) AS BLOB)) ORDER BY ((((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)-(t0.c0)))))OR(t0.c0 COLLATE BINARY)), ABS((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0)))) DESC LIMIT 0X1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((-26377542) ISNULL)) ORDER BY (STRFTIME(t0.c0, t0.c0, x'', t0.c0) IN ()) DESC, (((x'', t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (NULL)), INSTR(t0.c0, t0.c0))) AND ((MAX(t0.c0, t0.c0), (~ (t0.c0))))) DESC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((0Xfffffffffe6d82ba) ISNULL)) ORDER BY (STRFTIME(t0.c0, t0.c0, x'', t0.c0) IN ()) DESC, (((x'', t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (NULL)), INSTR(t0.c0, t0.c0))) AND ((MAX(t0.c0, t0.c0), (~ (t0.c0))))) DESC LIMIT 0X0 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE (NOT (t0.c0))  WHEN NULL THEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (('Í\', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN TYPEOF(DISTINCT t0.c0) ELSE CAST(t0.c0 AS INTEGER) END) ORDER BY (STRFTIME(t0.c0, t0.c0, x'', t0.c0) IN ()) DESC, (((x'', t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (NULL)), INSTR(t0.c0, t0.c0))) AND ((MAX(t0.c0, t0.c0), (~ (t0.c0))))) DESC LIMIT 0x0;
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c0) IS TRUE))<((t0.c0 IN ())))) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE NOCASE ASC;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) IS TRUE))<((t0.c0 IN ()))))AND(((((t0.c0)AND(t0.c0)))-((('gMc>!') IS TRUE)))))) ORDER BY t0.c0 DESC  NULLS FIRST, (((t0.c0 IN (t0.c0)))-(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((((t0.c0)%(t0.c0)))OR(((t0.c0)IS(t0.c0)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(CAST(t0.c0 AS REAL)))) ORDER BY t0.c0 DESC  NULLS FIRST, (((t0.c0 IN (t0.c0)))-(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((ROUND('', t0.c0))OR((((t0.c0))=((t0.c0)))))) ORDER BY (((t0.c0, t0.c0)) BETWEEN ((((t0.c0)GLOB(t0.c0)), ((t0.c0)=(t0.c0)))) AND ((CAST(t0.c0 AS TEXT), (t0.c0 IN (t0.c0)))))  NULLS LAST, COALESCE(DISTINCT t0.c0 COLLATE BINARY, ((t0.c0) IS TRUE))  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE (((ROUND('', t0.c0))OR((((t0.c0))==((t0.c0)))))) ORDER BY (((t0.c0, t0.c0)) BETWEEN ((((t0.c0)GLOB(t0.c0)), ((t0.c0)==(t0.c0)))) AND ((CAST(t0.c0 AS TEXT), (t0.c0 IN (t0.c0)))))  NULLS LAST, COALESCE(DISTINCT t0.c0 COLLATE BINARY, ((t0.c0) IS TRUE))  NULLS FIRST;
SELECT * FROM t0 WHERE ((((NULL COLLATE NOCASE, ((t0.c0)IS(t0.c0))))>((t0.c0, (t0.c0 IN (t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((NULL COLLATE NOCASE, ((t0.c0)IS(t0.c0))))>((t0.c0, (t0.c0 IN (t0.c0)))))) ORDER BY (((('Tq/í7,uO') ISNULL)) IS FALSE) DESC  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (LIKELY(DISTINCT CAST(t0.c0 AS REAL))) ORDER BY (((('Tq/í7,uO') ISNULL)) IS FALSE) DESC  NULLS LAST LIMIT 2;
SELECT * FROM t0 WHERE ((((NULL COLLATE NOCASE, ((t0.c0)IS(t0.c0))))>((t0.c0, (t0.c0 IN (t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((NULL COLLATE NOCASE, ((t0.c0)IS(t0.c0))))>((t0.c0, (t0.c0 IN (t0.c0)))))) ORDER BY (((('Tq/í7,uO') ISNULL)) IS FALSE) DESC  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (LIKELY(DISTINCT CAST(t0.c0 AS REAL))) ORDER BY (((('Tq/í7,uO') ISNULL)) IS FALSE) DESC  NULLS LAST LIMIT 2;
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL))AND(((t0.c0 COLLATE BINARY) NOTNULL)))) ORDER BY (((((t0.c0)%(t0.c0)), (t0.c0 IN ())))<=((((t0.c0)GLOB(t0.c0)), json_object(t0.c0, t0.c0)))) ASC LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)+(t0.c0))))) ORDER BY (((((t0.c0)%(t0.c0)), (t0.c0 IN ())))<=((((t0.c0)GLOB(t0.c0)), json_object(t0.c0, t0.c0)))) ASC LIMIT 2;
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL))AND(((t0.c0 COLLATE BINARY) NOTNULL)))) ORDER BY (((((t0.c0)%(t0.c0)), (t0.c0 IN ())))<=((((t0.c0)GLOB(t0.c0)), json_object(t0.c0, t0.c0)))) ASC LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)+(t0.c0))))) ORDER BY (((((t0.c0)%(t0.c0)), (t0.c0 IN ())))<=((((t0.c0)GLOB(t0.c0)), json_object(t0.c0, t0.c0)))) ASC LIMIT 2;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS TEXT))|(t0.c0 COLLATE RTRIM))) ORDER BY LOWER(t0.c0) COLLATE RTRIM, ((((((((t0.c0)AND(NULL)))AND(((t0.c0)/(t0.c0)))))OR(((t0.c0)IS(t0.c0)))))OR(((t0.c0)IS NOT(t0.c0)))) DESC  NULLS LAST, ((((t0.c0) NOT NULL)) NOT NULL)  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS TEXT))|(t0.c0 COLLATE RTRIM))) ORDER BY (((NULL, x'02', t0.c0)) BETWEEN ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))) AND ((NULL, CASE NULL  WHEN 0x7f622693 THEN NULL ELSE t0.c0 END, ((t0.c0)>>(t0.c0))))) ASC  NULLS LAST, ((MAX(t0.c0, t0.c0, '126359011', t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0))<>(('33510953')))) AND (t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c0)GLOB(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS TEXT))|(t0.c0 COLLATE RTRIM))) ORDER BY LOWER(t0.c0) COLLATE RTRIM, ((((((((t0.c0)AND(NULL)))AND(((t0.c0)/(t0.c0)))))OR(((t0.c0)IS(t0.c0)))))OR(((t0.c0)IS NOT(t0.c0)))) DESC  NULLS LAST, ((((t0.c0) NOT NULL)) NOT NULL)  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS TEXT))|(t0.c0 COLLATE RTRIM))) ORDER BY (((NULL, x'02', t0.c0)) BETWEEN ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))) AND ((NULL, CASE NULL  WHEN 0x7f622693 THEN NULL ELSE t0.c0 END, ((t0.c0)>>(t0.c0))))) ASC  NULLS LAST, ((MAX(t0.c0, t0.c0, '126359011', t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0))<>(('33510953')))) AND (t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c0)GLOB(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS FIRST LIMIT 0X0;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC) COLLATE NOCASE)AND(t0.c0))) ORDER BY CASE WHEN 0.6594987811054602 THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0) IS FALSE) END DESC INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ('KJ	Extn>') ORDER BY CASE WHEN 0.6594987811054602 THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0) IS FALSE) END DESC;
SELECT ALL * FROM t0 WHERE (COALESCE(CAST(t0.c0 AS REAL), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0)<(t0.c0)))) ORDER BY CAST(((t0.c0)%(t0.c0)) AS INTEGER) ASC, CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN ((t0.c0)>>(0.2946214507192064)) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c0)*(t0.c0)) THEN CAST(t0.c0 AS REAL) WHEN json(t0.c0) THEN ((t0.c0) NOT BETWEEN (x'2aaa') AND (t0.c0)) WHEN ((t0.c0)+(t0.c0)) THEN ((t0.c0)*(t0.c0)) ELSE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END;
SELECT ALL * FROM t0 WHERE (COALESCE(CAST(t0.c0 AS REAL), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0)<(t0.c0)))) ORDER BY ((((((((t0.c0)AND((+ (t0.c0)))))AND((t0.c0 IN (t0.c0)))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))OR(NULL))  NULLS FIRST, LIKELIHOOD(DISTINCT CASE WHEN t0.c0 THEN '-1435987955' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (('oça') NOT BETWEEN (t0.c0) AND (t0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (COALESCE(CAST(t0.c0 AS REAL), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0)<(t0.c0)))) ORDER BY CAST(((t0.c0)%(t0.c0)) AS INTEGER) ASC, CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN ((t0.c0)>>(0.2946214507192064)) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c0)*(t0.c0)) THEN CAST(t0.c0 AS REAL) WHEN json(t0.c0) THEN ((t0.c0) NOT BETWEEN (x'2aaa') AND (t0.c0)) WHEN ((t0.c0)+(t0.c0)) THEN ((t0.c0)*(t0.c0)) ELSE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END;
SELECT ALL * FROM t0 WHERE (COALESCE(CAST(t0.c0 AS REAL), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0)<(t0.c0)))) ORDER BY ((((((((t0.c0)AND((+ (t0.c0)))))AND((t0.c0 IN (t0.c0)))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))OR(NULL))  NULLS FIRST, LIKELIHOOD(DISTINCT CASE WHEN t0.c0 THEN '-1435987955' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (('oça') NOT BETWEEN (t0.c0) AND (t0.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((NULL IN ())) ORDER BY ((((t0.c0)||(t0.c0)))OR(((t0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((NULL IN ())) ORDER BY ((((((((((t0.c0)OR(CAST(t0.c0 AS BLOB))))AND(t0.c0 COLLATE BINARY)))AND((t0.c0 IN ()))))OR(0.8074405297099918)))AND(t0.c0)), (((t0.c0, t0.c0)) BETWEEN ((((t0.c0)!=(t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((t0.c0, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((((((((t0.c0)OR(CAST(t0.c0 AS BLOB))))AND(t0.c0 COLLATE BINARY)))AND((t0.c0 IN ()))))OR(0.8074405297099918)))AND(t0.c0)), (((t0.c0, t0.c0)) BETWEEN ((((t0.c0)<>(t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((t0.c0, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) LIMIT 0x0;
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)%(CASE WHEN x'8e64' THEN t0.c0 ELSE t0.c0 END))) ORDER BY TYPEOF(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), CASE WHEN t0.c0 THEN -2.128350805E9 END DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)%(CASE WHEN x'8e64' THEN t0.c0 ELSE t0.c0 END))) ORDER BY TYPEOF(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), CASE WHEN t0.c0 THEN -2.128350805E9 END DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)*(t0.c0)) COLLATE NOCASE) ORDER BY TYPEOF(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), CASE WHEN t0.c0 THEN -2.128350805E9 END DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)%(CASE WHEN x'8e64' THEN t0.c0 ELSE t0.c0 END))) ORDER BY TYPEOF(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), CASE WHEN t0.c0 THEN -2.128350805E9 END DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)%(CASE WHEN x'8e64' THEN t0.c0 ELSE t0.c0 END))) ORDER BY TYPEOF(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), CASE WHEN t0.c0 THEN -2.128350805E9 END DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)*(t0.c0)) COLLATE NOCASE) ORDER BY TYPEOF(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), CASE WHEN t0.c0 THEN -2.128350805E9 END DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (t0.c0 COLLATE RTRIM IN ()) ASC, TYPEOF((+ (t0.c0))), CAST(x'' AS INTEGER)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (t0.c0 COLLATE RTRIM IN ()) ASC, TYPEOF((+ (t0.c0))), CAST(x'' AS INTEGER)  NULLS LAST LIMIT 0X0;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (t0.c0 COLLATE RTRIM IN ()) ASC, TYPEOF((+ (t0.c0))), CAST(x'' AS INTEGER)  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))>(x'43')));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))>(x'43'))) ORDER BY 'MSH4í´g' COLLATE RTRIM, COALESCE(((t0.c0)*(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE NOCASE) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((~ ((- (t0.c0))))) ORDER BY 'MSH4í´g' COLLATE RTRIM, COALESCE(((t0.c0)*(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE NOCASE);
SELECT * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))>(x'43')));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))>(x'43'))) ORDER BY 'MSH4í´g' COLLATE RTRIM, COALESCE(((t0.c0)*(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE NOCASE) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((~ ((- (t0.c0))))) ORDER BY 'MSH4í´g' COLLATE RTRIM, COALESCE(((t0.c0)*(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE NOCASE);
SELECT * FROM t0 WHERE (((t0.c0) IS TRUE));
SELECT * FROM t0 WHERE (((((t0.c0) IS TRUE))AND((((((~ (t0.c0)))AND((((t0.c0, t0.c0))=((t0.c0, t0.c0))))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) INTERSECT SELECT * FROM t0 WHERE ((~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t0 WHERE (((t0.c0) IS TRUE));
SELECT * FROM t0 WHERE (((((t0.c0) IS TRUE))AND((((((~ (t0.c0)))AND((((t0.c0, t0.c0))=((t0.c0, t0.c0))))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) INTERSECT SELECT * FROM t0 WHERE ((~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)==(t0.c0)) THEN ((t0.c0)IS(t0.c0)) WHEN ((t0.c0)!=(t0.c0)) THEN ((t0.c0) BETWEEN (x'25') AND (x'82b0')) END);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)=(t0.c0)) THEN ((t0.c0)IS(t0.c0)) WHEN ((t0.c0)<(t0.c0)) THEN ((t0.c0) BETWEEN (x'25') AND (x'82b0')) END);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)==(t0.c0)) THEN ((t0.c0)IS(t0.c0)) WHEN ((t0.c0)!=(t0.c0)) THEN ((t0.c0) BETWEEN (x'25') AND (x'82b0')) END);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0)=(t0.c0)) THEN ((t0.c0)IS(t0.c0)) WHEN ((t0.c0)<(t0.c0)) THEN ((t0.c0) BETWEEN (x'25') AND (x'82b0')) END);
SELECT * FROM t0 WHERE (CASE ABS(DISTINCT t0.c0)  WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0)>(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END);
SELECT DISTINCT * FROM t0 WHERE (CASE ABS(DISTINCT t0.c0)  WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0)>(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END) ORDER BY (x'' IN ()), t0.c0 ASC LIMIT 3;
SELECT * FROM t0 WHERE (CASE ABS(DISTINCT t0.c0)  WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0)>(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END);
SELECT DISTINCT * FROM t0 WHERE (CASE ABS(DISTINCT t0.c0)  WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0)>(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END) ORDER BY (x'' IN ()), t0.c0 ASC LIMIT 3;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))==((t0.c0))))<<((NOT (t0.c0))))) ORDER BY json_array_length((t0.c0 IN (t0.c0))) DESC  NULLS FIRST, ((((t0.c0)>=(0xb3aff1c))) BETWEEN (((t0.c0) IS FALSE)) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(0.523339031895271)))AND(NULL)))AND(t0.c0))) AND ((('-2054649933') NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST, 0.421946084897026  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((((t0.c0))==((t0.c0))))<<((NOT (t0.c0)))))AND((((((((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) ORDER BY json_array_length((t0.c0 IN (t0.c0))) DESC  NULLS FIRST, ((((t0.c0)>=(188415772))) BETWEEN (((t0.c0) IS FALSE)) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(0.523339031895271)))AND(NULL)))AND(t0.c0))) AND ((('-2054649933') NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST, 0.421946084897026  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((ROUND(t0.c0, t0.c0)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) BETWEEN (t0.c0) AND (0.7696837765623958))))) ORDER BY (((((((((t0.c0 IN (t0.c0)))AND(0.9907627163443592)))AND((0.4098485827391438 IN (t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) NOT NULL))) ASC, ABS(((t0.c0) NOTNULL))  NULLS LAST, ((((t0.c0) IS TRUE)) NOT NULL) DESC;
SELECT * FROM t0 WHERE (((ROUND(t0.c0, t0.c0)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) BETWEEN (t0.c0) AND (0.7696837765623958))))) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (NOT ('ÜS~bo#')) WHEN COALESCE(t0.c0, t0.c0) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)>>(t0.c0)) THEN NULL WHEN ((t0.c0)>>(x'fa')) THEN t0.c0 COLLATE RTRIM END DESC, (((t0.c0, t0.c0)) BETWEEN ((((t0.c0) NOTNULL), ((t0.c0)/(t0.c0)))) AND ((((x'31') ISNULL), (('b_') BETWEEN (t0.c0) AND (t0.c0))))) ASC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE ((NULLIF(t0.c0, '-1e500') IN (t0.c0 COLLATE NOCASE))) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (NOT ('ÜS~bo#')) WHEN COALESCE(t0.c0, t0.c0) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)>>(t0.c0)) THEN NULL WHEN ((t0.c0)>>(x'fa')) THEN t0.c0 COLLATE RTRIM END DESC, (((t0.c0, t0.c0)) BETWEEN ((((t0.c0) NOTNULL), ((t0.c0)/(t0.c0)))) AND ((((x'31') ISNULL), (('b_') BETWEEN (t0.c0) AND (t0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((ROUND(t0.c0, t0.c0)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) BETWEEN (t0.c0) AND (0.7696837765623958))))) ORDER BY (((((((((t0.c0 IN (t0.c0)))AND(0.9907627163443592)))AND((0.4098485827391438 IN (t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) NOT NULL))) ASC, ABS(((t0.c0) NOTNULL))  NULLS LAST, ((((t0.c0) IS TRUE)) NOT NULL) DESC;
SELECT * FROM t0 WHERE (((ROUND(t0.c0, t0.c0)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) BETWEEN (t0.c0) AND (0.7696837765623958))))) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (NOT ('ÜS~bo#')) WHEN COALESCE(t0.c0, t0.c0) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)>>(t0.c0)) THEN NULL WHEN ((t0.c0)>>(x'fa')) THEN t0.c0 COLLATE RTRIM END DESC, (((t0.c0, t0.c0)) BETWEEN ((((t0.c0) NOTNULL), ((t0.c0)/(t0.c0)))) AND ((((x'31') ISNULL), (('b_') BETWEEN (t0.c0) AND (t0.c0))))) ASC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE ((NULLIF(t0.c0, '-1e500') IN (t0.c0 COLLATE NOCASE))) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (NOT ('ÜS~bo#')) WHEN COALESCE(t0.c0, t0.c0) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)>>(t0.c0)) THEN NULL WHEN ((t0.c0)>>(x'fa')) THEN t0.c0 COLLATE RTRIM END DESC, (((t0.c0, t0.c0)) BETWEEN ((((t0.c0) NOTNULL), ((t0.c0)/(t0.c0)))) AND ((((x'31') ISNULL), (('b_') BETWEEN (t0.c0) AND (t0.c0))))) ASC  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE ((- ('1231018761')));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((- ('1231018761')))AND(((load_extension(0Xffffffff9907e863)) NOT BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0) NOT NULL)))))) ORDER BY LTRIM(t0.c0), (t0.c0 IN ()) COLLATE BINARY  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (json_quote((+ (t0.c0)))) ORDER BY CAST(0.3428488287718313 AS REAL) DESC, (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END IN ((((t0.c0, t0.c0, t0.c0))=((0.06465942314306361, '%', t0.c0))), json_valid(t0.c0))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((json_quote((+ (t0.c0))))AND(((t0.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND ((~ (t0.c0))))))) ORDER BY CAST(0.3428488287718313 AS REAL) DESC, (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END IN ((((t0.c0, t0.c0, t0.c0))==((0.06465942314306361, '%', t0.c0))), json_valid(t0.c0))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY CAST(0.3428488287718313 AS REAL) DESC, (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END IN ((((t0.c0, t0.c0, t0.c0))==((0.06465942314306361, '%', t0.c0))), json_valid(t0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (json_quote((+ (t0.c0)))) ORDER BY CAST(0.3428488287718313 AS REAL) DESC, (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END IN ((((t0.c0, t0.c0, t0.c0))=((0.06465942314306361, '%', t0.c0))), json_valid(t0.c0))) ASC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 NOT INDEXED WHERE (x'') ORDER BY (((0.2751840908603568))>((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((x'')AND(CAST(CASE t0.c0  WHEN 0.7141123010503293 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB)))) ORDER BY (((0.2751840908603568))>((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) IS TRUE)) ORDER BY (((0.2751840908603568))>((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) NOTNULL)) ORDER BY NULL, ((t0.c0 COLLATE BINARY)AND(((t0.c0)IS(t0.c0)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) NOTNULL)) ORDER BY ((IFNULL(t0.c0, t0.c0))IS(((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))))  NULLS LAST, (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS TRUE), (~ (0.8082436460767842)))) AND ((t0.c0, t0.c0))) ASC  NULLS LAST, ((t0.c0 IN ()) IN ((- (t0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) NOTNULL)) ORDER BY NULL, ((t0.c0 COLLATE BINARY)AND(((t0.c0)IS(t0.c0)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) NOTNULL)) ORDER BY ((IFNULL(t0.c0, t0.c0))IS(((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))))  NULLS LAST, (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS TRUE), (~ (0.8082436460767842)))) AND ((t0.c0, t0.c0))) ASC  NULLS LAST, ((t0.c0 IN ()) IN ((- (t0.c0)))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (0.4073367410305304);
SELECT DISTINCT * FROM t0 WHERE (0.4073367410305304) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((t0.c0 IN ((~ (t0.c0))))) LIMIT 0x1;
SELECT * FROM t0 WHERE (0.4073367410305304);
SELECT DISTINCT * FROM t0 WHERE (0.4073367410305304) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((t0.c0 IN ((~ (t0.c0))))) LIMIT 0x1;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)-(t0.c0 COLLATE NOCASE))) ORDER BY ((t0.c0 COLLATE NOCASE)&(t0.c0 COLLATE BINARY)), ((((t0.c0)IS(t0.c0)))!=((t0.c0 IN (x'cb2f')))) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)-(t0.c0 COLLATE NOCASE))) ORDER BY ((t0.c0 COLLATE NOCASE)&(t0.c0 COLLATE BINARY)), ((((t0.c0)IS(t0.c0)))<>((t0.c0 IN (x'cb2f')))) ASC  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((+ ('1282586232'))) ORDER BY ((t0.c0 COLLATE NOCASE)&(t0.c0 COLLATE BINARY)), ((((t0.c0)IS(t0.c0)))!=((t0.c0 IN (x'cb2f')))) ASC  NULLS LAST LIMIT 1;
SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (('Oz(')&(UNLIKELY(t0.c0))) DESC, CAST(LOWER(t0.c0) AS TEXT) ASC, ((((CASE 'Så¤çï'  WHEN 0.4714538857352498 THEN t0.c0 END)AND(((t0.c0) IS TRUE))))OR(((t0.c0)+(t0.c0))));
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0)AND(CAST(t0.c0 AS INTEGER)))) ORDER BY json_type((t0.c0 IN (t0.c0)))  NULLS FIRST, '-1786844958' DESC LIMIT 0x2 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE ((('é®]') NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ORDER BY json_type((t0.c0 IN (t0.c0)))  NULLS FIRST, '-1786844958' DESC LIMIT 0x2;
SELECT MIN(t0.c0) FROM t0 WHERE (((((CASE NULL  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))AND(0.056964684487217365))) ORDER BY LOWER((((((('-252603470')AND(t0.c0)))OR(t0.c0)))AND(t0.c0)));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((CASE NULL  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))AND(0.056964684487217365)))AND(((json_insert(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0) NOTNULL)))))) ORDER BY LOWER((((((('-252603470')AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE ((((((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0)>>(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((((((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0)>>(t0.c0)))))AND(((t0.c0 IN (t0.c0)) IN ((t0.c0 IN (t0.c0)), (- (t0.c0))))))) ORDER BY t0.c0 COLLATE BINARY ASC, t0.c0 ASC  NULLS FIRST, 0.3572898513492051 DESC;
SELECT ALL * FROM t0 WHERE ((((((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0)>>(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((((((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0)>>(t0.c0)))))AND(((t0.c0 IN (t0.c0)) IN ((t0.c0 IN (t0.c0)), (- (t0.c0))))))) ORDER BY t0.c0 COLLATE BINARY ASC, t0.c0 ASC  NULLS FIRST, 0.3572898513492051 DESC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0, '-1269195744')) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) COLLATE RTRIM) ORDER BY (((((((t0.c0))<=((t0.c0))))OR(NULL)))AND(HEX(DISTINCT t0.c0))) DESC  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((((t0.c0, '-1269195744')) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) COLLATE RTRIM)AND(COALESCE(DISTINCT t0.c0, 'CP') COLLATE NOCASE))) ORDER BY (((((((t0.c0))<=((t0.c0))))OR(NULL)))AND(HEX(DISTINCT t0.c0))) DESC  NULLS FIRST LIMIT 0x4;
SELECT ALL * FROM t0 WHERE ((- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE ((- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (((t0.c0) NOT NULL)) AND (''))  NULLS FIRST, CASE CAST(t0.c0 AS NUMERIC)  WHEN NULL THEN CAST(t0.c0 AS TEXT) ELSE (t0.c0 IN (t0.c0)) END  NULLS LAST, ((((CAST(t0.c0 AS INTEGER))AND(NULLIF(DISTINCT t0.c0, t0.c0))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE ((- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (((t0.c0) NOT NULL)) AND (''))  NULLS FIRST, CASE CAST(t0.c0 AS NUMERIC)  WHEN NULL THEN CAST(t0.c0 AS TEXT) ELSE (t0.c0 IN (t0.c0)) END  NULLS LAST, ((((CAST(t0.c0 AS INTEGER))AND(NULLIF(DISTINCT t0.c0, t0.c0))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) BETWEEN ((- (t0.c0))) AND (CAST(t0.c0 AS NUMERIC))));
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) BETWEEN ((- (t0.c0))) AND (CAST(t0.c0 AS NUMERIC)))) ORDER BY '>'  NULLS LAST, CAST(t0.c0 AS TEXT) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, CAST(t0.c0 AS INTEGER))) AND (((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))), CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)))) ORDER BY '>'  NULLS LAST, CAST(t0.c0 AS TEXT);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) BETWEEN ((- (t0.c0))) AND (CAST(t0.c0 AS NUMERIC))));
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) BETWEEN ((- (t0.c0))) AND (CAST(t0.c0 AS NUMERIC)))) ORDER BY '>'  NULLS LAST, CAST(t0.c0 AS TEXT) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, CAST(t0.c0 AS INTEGER))) AND (((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))), CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)))) ORDER BY '>'  NULLS LAST, CAST(t0.c0 AS TEXT);
SELECT ALL * FROM t0 WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)) ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(CAST(NULL AS INTEGER) AS TEXT))AND(((((((x'')AND(t0.c0)))AND(t0.c0))) BETWEEN (NULLIF(DISTINCT t0.c0, NULL)) AND (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))))) ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)) ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(CAST(NULL AS INTEGER) AS TEXT))AND(((((((x'')AND(t0.c0)))AND(t0.c0))) BETWEEN (NULLIF(DISTINCT t0.c0, NULL)) AND (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))))) ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((((((t0.c0 COLLATE RTRIM)OR(((t0.c0) ISNULL))))AND((- (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((t0.c0 IN ()))))AND(UNICODE(t0.c0))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((((((((t0.c0 COLLATE RTRIM)OR(((t0.c0) ISNULL))))AND((- (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((t0.c0 IN ()))))AND(UNICODE(t0.c0))))AND(CASE ((t0.c0)GLOB(t0.c0))  WHEN t0.c0 THEN (t0.c0 IN (t0.c0, x'79')) WHEN (((t0.c0))>=((t0.c0))) THEN CAST(t0.c0 AS NUMERIC) END))) LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((t0.c0) IS FALSE)) NOTNULL)) LIMIT 0x1;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) NOTNULL)) ORDER BY (((NOT (114216596)))/(0.6449941286291787)) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0 COLLATE BINARY) NOTNULL))AND(((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (((((((NULL)AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) AND (t0.c0 COLLATE BINARY))))) ORDER BY (((NOT (0X6cece94)))/(0.6449941286291787)) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)GLOB(0X3100095e)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((NOT (114216596)))/(0.6449941286291787)) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) NOTNULL)) ORDER BY (((NOT (114216596)))/(0.6449941286291787)) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0 COLLATE BINARY) NOTNULL))AND(((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (((((((NULL)AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) AND (t0.c0 COLLATE BINARY))))) ORDER BY (((NOT (0X6cece94)))/(0.6449941286291787)) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)GLOB(0X3100095e)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((NOT (114216596)))/(0.6449941286291787)) ASC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((t0.c0 IN (x'')) COLLATE BINARY) ORDER BY CAST(((t0.c0)>=(t0.c0)) AS REAL) DESC  NULLS LAST, ((t0.c0) IS TRUE) DESC;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((t0.c0 IN (x'')) COLLATE BINARY)AND((((t0.c0) BETWEEN (t0.c0) AND ('E')) IN (CAST(t0.c0 AS NUMERIC)))))) ORDER BY (((((1598365400))>((t0.c0)))) BETWEEN (((t0.c0)-(t0.c0))) AND (CAST(t0.c0 AS INTEGER))), (((NOT (t0.c0))) IS FALSE)  NULLS LAST LIMIT 0X0;
SELECT MAX(t0.c0) FROM t0 WHERE (SQLITE_SOURCE_ID());
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((((CAST(t0.c0 AS REAL))OR(CAST(t0.c0 AS NUMERIC))))AND(0.3057781170108803)))AND(((t0.c0)&(0.5327275274093773))))  NULLS FIRST, (((((((((((0xffffffffcd0a1aaf IN (t0.c0)))AND(t0.c0)))OR(t0.c0 COLLATE NOCASE)))AND((((t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, '~I', t0.c0))))))OR(((((((((t0.c0)OR(t0.c0)))AND(x'94')))OR(t0.c0)))AND(t0.c0)))))OR(((0.39587354740718916) BETWEEN (t0.c0) AND (t0.c0)))) DESC, ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))<(t0.c0)) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)GLOB(((t0.c0) NOT NULL)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)>(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ASC;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)GLOB(((t0.c0) NOT NULL)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)>(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ASC LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)>(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ASC LIMIT 2;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)GLOB(((t0.c0) NOT NULL)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)>(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ASC;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)GLOB(((t0.c0) NOT NULL)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)>(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ASC LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)>(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) ASC LIMIT 2;
SELECT ALL * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0 COLLATE BINARY)) ASC;
SELECT DISTINCT * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY (NOT ('829531148')) COLLATE NOCASE ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY (NOT ('829531148')) COLLATE NOCASE ASC LIMIT 1;
SELECT ALL * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0 COLLATE BINARY)) ASC;
SELECT DISTINCT * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY (NOT ('829531148')) COLLATE NOCASE ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY (NOT ('829531148')) COLLATE NOCASE ASC LIMIT 1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((CASE t0.c0  WHEN 0.8876300393678629 THEN t0.c0 END) NOT NULL));
SELECT MIN(t0.c0) FROM t0 WHERE (((CASE t0.c0  WHEN 0.8876300393678629 THEN t0.c0 END) NOT NULL)) ORDER BY (((t0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((CAST(x'' AS REAL)))), ABS(((t0.c0)>>(t0.c0))) ASC  NULLS LAST, CASE WHEN (t0.c0 IN ('904800015', t0.c0)) THEN t0.c0 ELSE (NOT (t0.c0)) END LIMIT 0X0;
SELECT MAX(t0.c0) FROM t0 WHERE (ROUND(((t0.c0) ISNULL), x'4b36' COLLATE NOCASE));
SELECT MAX(t0.c0) FROM t0 WHERE (((ROUND(((t0.c0) ISNULL), x'4b36' COLLATE NOCASE))AND(HEX((t0.c0 IN (t0.c0)))))) ORDER BY ((t0.c0 COLLATE RTRIM) NOT BETWEEN (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) AND (((t0.c0)<(t0.c0))))  NULLS LAST, (~ (t0.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t0 WHERE (((+ (t0.c0)) IN ())) ORDER BY ((((((((CAST(t0.c0 AS NUMERIC))OR((+ (t0.c0)))))OR(CAST(t0.c0 AS INTEGER))))AND(((t0.c0) NOTNULL))))AND((((t0.c0, t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0, t0.c0)))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((+ (t0.c0)) IN ()))AND((((t0.c0)) NOT BETWEEN ((((t0.c0) IS TRUE))) AND ((((t0.c0)*(t0.c0)))))))) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) IS TRUE) DESC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((+ ((((((((((('-414836330')OR(t0.c0)))OR('Y')))AND(t0.c0)))OR(t0.c0)))AND(x'b3a8'))))) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0)||(t0.c0)))));
SELECT * FROM t0 WHERE ((NOT (((t0.c0)||(t0.c0))))) ORDER BY ((t0.c0) NOT NULL) COLLATE BINARY  NULLS FIRST, (- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST, ((((t0.c0)-(t0.c0))) NOT BETWEEN (x'') AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0)||(t0.c0)))));
SELECT * FROM t0 WHERE ((NOT (((t0.c0)||(t0.c0))))) ORDER BY ((t0.c0) NOT NULL) COLLATE BINARY  NULLS FIRST, (- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST, ((((t0.c0)-(t0.c0))) NOT BETWEEN (x'') AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS LAST LIMIT 0X1;
SELECT MIN(t0.c0) FROM t0 WHERE (((((((((((CAST(t0.c0 AS TEXT))OR(t0.c0)))OR(((t0.c0) IS TRUE))))OR((t0.c0 IN (t0.c0)))))OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)<<(t0.c0)))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((((((CAST(t0.c0 AS TEXT))OR(t0.c0)))OR(((t0.c0) IS TRUE))))OR((t0.c0 IN (t0.c0)))))OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)<<(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (json_quote(LIKELY(DISTINCT t0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE (json_quote(LIKELY(DISTINCT t0.c0))) ORDER BY (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0xffffffffc7b5e1c8 ELSE t0.c0 END IN (t0.c0)) INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0xffffffffc7b5e1c8 ELSE t0.c0 END IN (t0.c0));
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL)) ORDER BY (('Q') BETWEEN (INSTR('-547033120', t0.c0)) AND (((t0.c0) IS FALSE))) ASC  NULLS LAST, ((((t0.c0)IS NOT(t0.c0)))>=(t0.c0));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL)) ORDER BY (('Q') BETWEEN (INSTR('-547033120', t0.c0)) AND (((t0.c0) IS FALSE))) ASC  NULLS LAST, ((((t0.c0)IS NOT(t0.c0)))>=(t0.c0)) LIMIT 0X2;
SELECT * FROM t0 WHERE (-1786844958);
SELECT DISTINCT * FROM t0 WHERE (0xffffffff957ee8e2) ORDER BY (((- (t0.c0))) BETWEEN ((~ (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.9418397844565232 END)), ((LOWER('-266835620'))-(((t0.c0) IS TRUE)))  NULLS FIRST;
SELECT * FROM t0 WHERE (-1786844958);
SELECT DISTINCT * FROM t0 WHERE (0xffffffff957ee8e2) ORDER BY (((- (t0.c0))) BETWEEN ((~ (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.9418397844565232 END)), ((LOWER('-266835620'))-(((t0.c0) IS TRUE)))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((x'6d') NOT BETWEEN (0.08602625003429365) AND (0.07555366386973439))) NOT BETWEEN (((t0.c0)-(t0.c0))) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)>(t0.c0))) BETWEEN (UNLIKELY(t0.c0)) AND (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) DESC, (- (t0.c0)) COLLATE NOCASE ASC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)>(t0.c0))) BETWEEN (UNLIKELY(t0.c0)) AND (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) DESC, (- (t0.c0)) COLLATE NOCASE ASC LIMIT 1;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((x'6d') NOT BETWEEN (0.08602625003429365) AND (0.07555366386973439))) NOT BETWEEN (((t0.c0)-(t0.c0))) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)>(t0.c0))) BETWEEN (UNLIKELY(t0.c0)) AND (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) DESC, (- (t0.c0)) COLLATE NOCASE ASC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)>(t0.c0))) BETWEEN (UNLIKELY(t0.c0)) AND (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) DESC, (- (t0.c0)) COLLATE NOCASE ASC LIMIT 1;
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c0)&(t0.c0))) AND (((t0.c0)+(t0.c0))))) ORDER BY (- (((((NULL)OR(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c0)&(t0.c0))) AND (((t0.c0)+(t0.c0)))))AND(((((((t0.c0)+(t0.c0)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c0 COLLATE NOCASE))))) ORDER BY (- (((((NULL)OR(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0)&(t0.c0))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 END);
SELECT * FROM t0 WHERE (CASE ((t0.c0)&(t0.c0))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 END) ORDER BY t0.c0, ((t0.c0) BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND ((t0.c0 IN (t0.c0)))) DESC  NULLS FIRST LIMIT 3 INTERSECT SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c0  WHEN x'95' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER)) ORDER BY t0.c0, ((t0.c0) BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND ((t0.c0 IN (t0.c0)))) DESC  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0)&(t0.c0))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 END);
SELECT * FROM t0 WHERE (CASE ((t0.c0)&(t0.c0))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 END) ORDER BY t0.c0, ((t0.c0) BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND ((t0.c0 IN (t0.c0)))) DESC  NULLS FIRST LIMIT 3 INTERSECT SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c0  WHEN x'95' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER)) ORDER BY t0.c0, ((t0.c0) BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND ((t0.c0 IN (t0.c0)))) DESC  NULLS FIRST LIMIT 3;
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.19305974629942135 WHEN t0.c0 THEN 0xffffffffc00fd796 END COLLATE BINARY) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<=(((t0.c0)OR(971355355)))) ASC  NULLS FIRST, ((x'52fb30') BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c0)>(t0.c0)))) ASC  NULLS LAST, t0.c0 DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.19305974629942135 WHEN t0.c0 THEN -1072703594 END COLLATE BINARY)AND(CAST(((t0.c0)==(t0.c0)) AS NUMERIC)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<=(((t0.c0)OR(971355355)))) ASC  NULLS FIRST, ((x'52fb30') BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c0)>(t0.c0)))) ASC  NULLS LAST, t0.c0 DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.19305974629942135 WHEN t0.c0 THEN 0xffffffffc00fd796 END COLLATE BINARY) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<=(((t0.c0)OR(971355355)))) ASC  NULLS FIRST, ((x'52fb30') BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c0)>(t0.c0)))) ASC  NULLS LAST, t0.c0 DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.19305974629942135 WHEN t0.c0 THEN -1072703594 END COLLATE BINARY)AND(CAST(((t0.c0)==(t0.c0)) AS NUMERIC)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<=(((t0.c0)OR(971355355)))) ASC  NULLS FIRST, ((x'52fb30') BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c0)>(t0.c0)))) ASC  NULLS LAST, t0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN ((NOT (t0.c0))) AND (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY (- (IFNULL(DISTINCT t0.c0, t0.c0))) ASC, (((t0.c0)) BETWEEN ((((t0.c0) IS FALSE))) AND ((COALESCE(t0.c0, t0.c0)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN ((NOT (t0.c0))) AND (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY TYPEOF(((t0.c0)<=(t0.c0))) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN ((NOT (t0.c0))) AND (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY (- (IFNULL(DISTINCT t0.c0, t0.c0))) ASC, (((t0.c0)) BETWEEN ((((t0.c0) IS FALSE))) AND ((COALESCE(t0.c0, t0.c0)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN ((NOT (t0.c0))) AND (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY TYPEOF(((t0.c0)<=(t0.c0))) LIMIT 0x1;
SELECT * FROM t0 WHERE (((((t0.c0)&(1598365400))) ISNULL)) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)-(t0.c0)), NULL COLLATE BINARY, CAST(-730346551 AS REAL), ((t0.c0) NOTNULL))) AND (((t0.c0 IN ()), ((t0.c0)==(t0.c0)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((0Xffffffffe868d55c))), CAST('' AS TEXT)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((((t0.c0)&(1598365400))) ISNULL))AND(((((t0.c0)=(t0.c0))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (t0.c0))))) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)-(t0.c0)), NULL COLLATE BINARY, CAST(0Xffffffffd477cbc9 AS REAL), ((t0.c0) NOTNULL))) AND (((t0.c0 IN ()), ((t0.c0)==(t0.c0)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((-395782820))), CAST('' AS TEXT)))) ASC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM t0 WHERE ((NOT (t0.c0))) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)-(t0.c0)), NULL COLLATE BINARY, CAST(0Xffffffffd477cbc9 AS REAL), ((t0.c0) NOTNULL))) AND (((t0.c0 IN ()), ((t0.c0)==(t0.c0)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((0xffffffffe868d55c))), CAST('' AS TEXT)))) ASC  NULLS LAST LIMIT 0;
SELECT * FROM t0 WHERE (((((t0.c0)&(1598365400))) ISNULL)) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)-(t0.c0)), NULL COLLATE BINARY, CAST(-730346551 AS REAL), ((t0.c0) NOTNULL))) AND (((t0.c0 IN ()), ((t0.c0)==(t0.c0)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((0Xffffffffe868d55c))), CAST('' AS TEXT)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((((t0.c0)&(1598365400))) ISNULL))AND(((((t0.c0)=(t0.c0))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (t0.c0))))) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)-(t0.c0)), NULL COLLATE BINARY, CAST(0Xffffffffd477cbc9 AS REAL), ((t0.c0) NOTNULL))) AND (((t0.c0 IN ()), ((t0.c0)==(t0.c0)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((-395782820))), CAST('' AS TEXT)))) ASC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM t0 WHERE ((NOT (t0.c0))) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)-(t0.c0)), NULL COLLATE BINARY, CAST(0Xffffffffd477cbc9 AS REAL), ((t0.c0) NOTNULL))) AND (((t0.c0 IN ()), ((t0.c0)==(t0.c0)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((0xffffffffe868d55c))), CAST('' AS TEXT)))) ASC  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (0.8411684801992543);
SELECT ALL COUNT(*) FROM t0 WHERE (((0.8411684801992543)AND(NULL COLLATE RTRIM COLLATE RTRIM))) ORDER BY CAST((~ (t0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM t0 WHERE ((NOT ((t0.c0 IN (t0.c0))))) ORDER BY ((((t0.c0) NOT NULL)) NOT BETWEEN ((NULL IN ())) AND (((t0.c0)>(t0.c0))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((NOT ((t0.c0 IN (t0.c0))))) ORDER BY '' ASC;
SELECT * FROM t0 WHERE ((NOT ((t0.c0 IN (t0.c0))))) ORDER BY ((((t0.c0) NOT NULL)) NOT BETWEEN ((NULL IN ())) AND (((t0.c0)>(t0.c0))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((NOT ((t0.c0 IN (t0.c0))))) ORDER BY '' ASC;
SELECT * FROM t0 WHERE ((((((((t0.c0))<=((t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((~ (NULL))))) ORDER BY 9223372036854775807 COLLATE BINARY  NULLS LAST, ((((((x'3046c2')AND(((t0.c0) ISNULL))))AND((~ (t0.c0)))))AND(((t0.c0) BETWEEN (x'7aff') AND (t0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((((((t0.c0))<((t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((~ (NULL)))))AND(((((((((((((0X7a51fd90)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM COLLATE NOCASE))) ORDER BY ((NULL COLLATE NOCASE)IS NOT(NULL)) ASC, ((((t0.c0) IS TRUE))<((NOT (t0.c0))))  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0 IN ())))<>((((t0.c0)==(t0.c0)))))) ORDER BY ((NULL COLLATE NOCASE)IS NOT(NULL)) ASC, ((((t0.c0) IS TRUE))<((NOT (t0.c0))))  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((t0.c0))<=((t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((~ (NULL))))) ORDER BY 9223372036854775807 COLLATE BINARY  NULLS LAST, ((((((x'3046c2')AND(((t0.c0) ISNULL))))AND((~ (t0.c0)))))AND(((t0.c0) BETWEEN (x'7aff') AND (t0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((((((t0.c0))<((t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((~ (NULL)))))AND(((((((((((((0X7a51fd90)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM COLLATE NOCASE))) ORDER BY ((NULL COLLATE NOCASE)IS NOT(NULL)) ASC, ((((t0.c0) IS TRUE))<((NOT (t0.c0))))  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0 IN ())))<>((((t0.c0)==(t0.c0)))))) ORDER BY ((NULL COLLATE NOCASE)IS NOT(NULL)) ASC, ((((t0.c0) IS TRUE))<((NOT (t0.c0))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN (t0.c0 IN ()) THEN (((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))) ELSE CAST(t0.c0 AS REAL) END) ORDER BY CAST((t0.c0 IN (t0.c0, t0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN (t0.c0 IN ()) THEN (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) ELSE CAST(t0.c0 AS REAL) END)AND(CASE (t0.c0 IN ('|FjxK'))  WHEN (x'660c' IN (x'')) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN UNLIKELY(t0.c0) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END))) ORDER BY ((t0.c0 COLLATE RTRIM)<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST, ABS(DISTINCT (x'69' IN ())) ASC LIMIT 0X0 INTERSECT SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(0.9899163969139411)))OR('49/yG 9')))AND(t0.c0)))<=((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY ((t0.c0 COLLATE RTRIM)<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST, ABS(DISTINCT (x'69' IN ())) ASC LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN (t0.c0 IN ()) THEN (((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))) ELSE CAST(t0.c0 AS REAL) END) ORDER BY CAST((t0.c0 IN (t0.c0, t0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN (t0.c0 IN ()) THEN (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) ELSE CAST(t0.c0 AS REAL) END)AND(CASE (t0.c0 IN ('|FjxK'))  WHEN (x'660c' IN (x'')) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN UNLIKELY(t0.c0) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END))) ORDER BY ((t0.c0 COLLATE RTRIM)<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST, ABS(DISTINCT (x'69' IN ())) ASC LIMIT 0X0 INTERSECT SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(0.9899163969139411)))OR('49/yG 9')))AND(t0.c0)))<=((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY ((t0.c0 COLLATE RTRIM)<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST, ABS(DISTINCT (x'69' IN ())) ASC LIMIT 0X0;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((CAST(t0.c0 AS TEXT))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)IS NOT(t0.c0)))))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR(((t0.c0)+(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((((((CAST(t0.c0 AS TEXT))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0)IS NOT(t0.c0)))))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR(((t0.c0)+(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((t0.c0)-(t0.c0)))>(((('3063615', t0.c0)) BETWEEN ((t0.c0, ',Râé9Q')) AND ((t0.c0, t0.c0))))))));
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT BETWEEN (SQLITE_VERSION()) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY GLOB(((t0.c0) IS TRUE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '0.8595922735583824' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END) ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (SQLITE_VERSION()) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<((NOT (t0.c0))))  NULLS LAST, ((((t0.c0)<>(t0.c0)))<>(t0.c0))  NULLS FIRST, ((((((((TRIM(DISTINCT t0.c0))OR((t0.c0 IN ()))))AND(UPPER(NULL))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) NOTNULL))) DESC LIMIT 1;
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT BETWEEN (SQLITE_VERSION()) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY GLOB(((t0.c0) IS TRUE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '0.8595922735583824' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END) ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (SQLITE_VERSION()) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<((NOT (t0.c0))))  NULLS LAST, ((((t0.c0)<>(t0.c0)))<>(t0.c0))  NULLS FIRST, ((((((((TRIM(DISTINCT t0.c0))OR((t0.c0 IN ()))))AND(UPPER(NULL))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) NOTNULL))) DESC LIMIT 1;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS NUMERIC)) ORDER BY ((0.012341063954677822) NOT BETWEEN (CASE WHEN t0.c0 THEN 0.5839314141774815 WHEN 0.7699292356868156 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST, x'c6bde969'  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS NUMERIC)) ORDER BY ((0.012341063954677822) NOT BETWEEN (CASE WHEN t0.c0 THEN 0.5839314141774815 WHEN 0.7699292356868156 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST, x'c6bde969'  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE ((t0.c0 COLLATE BINARY IN (CAST(t0.c0 AS INTEGER), '1034281120' COLLATE RTRIM)));
SELECT MAX(t0.c0) FROM t0 WHERE ((t0.c0 COLLATE BINARY IN (CAST(t0.c0 AS INTEGER), '1034281120' COLLATE RTRIM))) INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(((t0.c0)>(t0.c0)) AS TEXT));
SELECT * FROM t0 WHERE (t0.c0) ORDER BY t0.c0  NULLS FIRST, (t0.c0 IN (t0.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, (((t0.c0)GLOB(t0.c0)) IN (((t0.c0)>=(t0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND(((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (0.540025144281249)))AND(((t0.c0)IS NOT(t0.c0)))))OR(t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(HEX(t0.c0)))))) ORDER BY t0.c0  NULLS FIRST, (t0.c0 IN (t0.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, (((t0.c0)GLOB(t0.c0)) IN (((t0.c0)>=(t0.c0))))  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (TRIM(json_patch(t0.c0, t0.c0), ((((t0.c0)OR(t0.c0)))AND('-450514734')))) ORDER BY t0.c0  NULLS FIRST, (t0.c0 IN (t0.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, (((t0.c0)GLOB(t0.c0)) IN (((t0.c0)>=(t0.c0))))  NULLS LAST LIMIT 0x1;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY t0.c0  NULLS FIRST, (t0.c0 IN (t0.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, (((t0.c0)GLOB(t0.c0)) IN (((t0.c0)>=(t0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND(((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (0.540025144281249)))AND(((t0.c0)IS NOT(t0.c0)))))OR(t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(HEX(t0.c0)))))) ORDER BY t0.c0  NULLS FIRST, (t0.c0 IN (t0.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, (((t0.c0)GLOB(t0.c0)) IN (((t0.c0)>=(t0.c0))))  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (TRIM(json_patch(t0.c0, t0.c0), ((((t0.c0)OR(t0.c0)))AND('-450514734')))) ORDER BY t0.c0  NULLS FIRST, (t0.c0 IN (t0.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, (((t0.c0)GLOB(t0.c0)) IN (((t0.c0)>=(t0.c0))))  NULLS LAST LIMIT 0x1;
SELECT * FROM t0 WHERE (x'11');
SELECT DISTINCT * FROM t0 WHERE (((x'11')AND(((((((ABS(DISTINCT t0.c0))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(249850569)))))OR((- (t0.c0)))))AND(CAST(t0.c0 AS TEXT)))))) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS BLOB), (- (t0.c0)), highlight(t0.c0, t0.c0, t0.c0, t0.c0), (NOT (t0.c0)))) AND ((((t0.c0) BETWEEN (' rî®N') AND (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(0.5073008828067638)), (((t0.c0, t0.c0)) NOT BETWEEN ((x'c1ee', t0.c0)) AND ((t0.c0, t0.c0)))))) ASC  NULLS FIRST, (('-414836330') BETWEEN (t0.c0 COLLATE NOCASE) AND ((t0.c0 IN (t0.c0)))) ASC, (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((x'51') NOT NULL), ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((0.3106140443587251) BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0)!=(t0.c0)), ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)), t0.c0 COLLATE BINARY)));
SELECT * FROM t0 WHERE (x'11');
SELECT DISTINCT * FROM t0 WHERE (((x'11')AND(((((((ABS(DISTINCT t0.c0))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(249850569)))))OR((- (t0.c0)))))AND(CAST(t0.c0 AS TEXT)))))) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS BLOB), (- (t0.c0)), highlight(t0.c0, t0.c0, t0.c0, t0.c0), (NOT (t0.c0)))) AND ((((t0.c0) BETWEEN (' rî®N') AND (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(0.5073008828067638)), (((t0.c0, t0.c0)) NOT BETWEEN ((x'c1ee', t0.c0)) AND ((t0.c0, t0.c0)))))) ASC  NULLS FIRST, (('-414836330') BETWEEN (t0.c0 COLLATE NOCASE) AND ((t0.c0 IN (t0.c0)))) ASC, (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((x'51') NOT NULL), ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((0.3106140443587251) BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0)!=(t0.c0)), ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)), t0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (UNLIKELY(DISTINCT (('0.08948534984541667') BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY ((0.41504289623171786) ISNULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (UNLIKELY(DISTINCT (('0.08948534984541667') BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE NOCASE DESC, ((CAST(t0.c0 AS INTEGER)) NOT NULL)  NULLS LAST, CAST(x'2a' AS TEXT)  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t0 WHERE (UNLIKELY(DISTINCT (('0.08948534984541667') BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY ((0.41504289623171786) ISNULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (UNLIKELY(DISTINCT (('0.08948534984541667') BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE NOCASE DESC, ((CAST(t0.c0 AS INTEGER)) NOT NULL)  NULLS LAST, CAST(x'2a' AS TEXT)  NULLS FIRST LIMIT 3;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS TRUE))<>(((t0.c0) ISNULL)))) ORDER BY t0.c0 ASC  NULLS FIRST, -122510163  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) IS TRUE))>(((t0.c0) ISNULL))))AND(((t0.c0)+(t0.c0)) COLLATE RTRIM))) ORDER BY CAST(CAST(t0.c0 AS INTEGER) AS BLOB) DESC INTERSECT SELECT COUNT(*) FROM t0 WHERE (((t0.c0)IS NOT(t0.c0)) COLLATE RTRIM) ORDER BY CAST(CAST(t0.c0 AS INTEGER) AS BLOB) DESC;
SELECT MAX(t0.c0) FROM t0 WHERE (CASE (t0.c0 IN (t0.c0, t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN (+ (t0.c0)) WHEN ((t0.c0) IS TRUE) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((6.7061909E7))) END);
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CASE (t0.c0 IN (t0.c0, t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN (+ (t0.c0)) WHEN ((t0.c0) IS TRUE) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((6.7061909E7))) END) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) ASC, ((((t0.c0) IS TRUE)) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND ('2119975713'))) AND (t0.c0));
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) COLLATE RTRIM) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((((('1606500971')OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) NOTNULL)) LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) COLLATE RTRIM) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((((('1606500971')OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) NOTNULL)) LIMIT 0x0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CASE WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)!=(t0.c0)) WHEN (t0.c0 IN (t0.c0)) THEN ((((((((0.5551929776337623)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) WHEN ((t0.c0)>>(NULL)) THEN t0.c0 COLLATE NOCASE ELSE t0.c0 COLLATE RTRIM END) ORDER BY ((((t0.c0)-(t0.c0)))|(((t0.c0) NOTNULL))) DESC  NULLS LAST, ((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(TRIM(t0.c0))))OR(((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))))AND(t0.c0)) ASC;
SELECT MAX(t0.c0) FROM t0 WHERE (((CASE WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)>(t0.c0)) WHEN (t0.c0 IN (t0.c0)) THEN ((((((((0.5551929776337623)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) WHEN ((t0.c0)>>(NULL)) THEN t0.c0 COLLATE NOCASE ELSE t0.c0 COLLATE RTRIM END)AND((~ ((~ (t0.c0))))))) ORDER BY TRIM(((t0.c0) IS FALSE)), (CASE t0.c0  WHEN t0.c0 THEN x'' END IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((CAST(t0.c0 AS REAL)))>((((t0.c0) NOTNULL))))) ORDER BY TRIM(((t0.c0) IS FALSE)), (CASE t0.c0  WHEN t0.c0 THEN x'' END IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CHANGES() COLLATE BINARY) ORDER BY ((((((((t0.c0) NOT NULL))OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)))))AND(((t0.c0) IS TRUE))) DESC  NULLS LAST, (((TOTAL_CHANGES()))<((STRFTIME(t0.c0, t0.c0, t0.c0, t0.c0)))) DESC  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (((CHANGES() COLLATE BINARY)AND(((t0.c0 COLLATE RTRIM) IS TRUE)))) ORDER BY ((((((((t0.c0) NOT NULL))OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)))))AND(((t0.c0) IS TRUE))) DESC  NULLS LAST, (((TOTAL_CHANGES()))<((STRFTIME(t0.c0, t0.c0, t0.c0, t0.c0)))) DESC  NULLS FIRST INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE '-492011794' END)OR((t0.c0 IN ()))))OR((- (t0.c0)))))OR(TRIM(t0.c0)))) ORDER BY ((((((((t0.c0) NOT NULL))OR(CAST(t0.c0 AS NUMERIC))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)))))AND(((t0.c0) IS TRUE))) DESC  NULLS LAST, (((TOTAL_CHANGES()))<((STRFTIME(t0.c0, t0.c0, t0.c0, t0.c0)))) DESC  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('-1786844958')) THEN (t0.c0 IN ()) WHEN (t0.c0 IN ()) THEN ((t0.c0)<(t0.c0)) END);
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('-1786844958')) THEN (t0.c0 IN ()) WHEN (t0.c0 IN ()) THEN ((t0.c0)<(t0.c0)) END) ORDER BY ((t0.c0)%(((t0.c0)>>(t0.c0)))) DESC  NULLS FIRST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))+(x'77')) ASC;
SELECT ALL * FROM t0 WHERE (SQLITE_VERSION());
SELECT * FROM t0 WHERE (SQLITE_VERSION()) ORDER BY ((((t0.c0)<<(t0.c0)))&(t0.c0 COLLATE BINARY)) ASC, TYPEOF(DISTINCT t0.c0) COLLATE RTRIM DESC, (CAST(t0.c0 AS BLOB) IN (CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c0 END)) INTERSECT SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)<<(t0.c0)))&(t0.c0 COLLATE BINARY)) ASC, TYPEOF(DISTINCT t0.c0) COLLATE RTRIM DESC, (CAST(t0.c0 AS BLOB) IN (CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c0 END));
SELECT ALL * FROM t0 WHERE (SQLITE_VERSION());
SELECT * FROM t0 WHERE (SQLITE_VERSION()) ORDER BY ((((t0.c0)<<(t0.c0)))&(t0.c0 COLLATE BINARY)) ASC, TYPEOF(DISTINCT t0.c0) COLLATE RTRIM DESC, (CAST(t0.c0 AS BLOB) IN (CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c0 END)) INTERSECT SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)<<(t0.c0)))&(t0.c0 COLLATE BINARY)) ASC, TYPEOF(DISTINCT t0.c0) COLLATE RTRIM DESC, (CAST(t0.c0 AS BLOB) IN (CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c0 END));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(t0.c0))) AND (LOWER(t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(t0.c0))) AND (LOWER(t0.c0)))) ORDER BY ((((((CASE WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND((- (t0.c0)))))AND(x'93')))AND(CAST(t0.c0 AS NUMERIC)))  NULLS LAST, json_array_length(t0.c0 COLLATE BINARY, t0.c0);
SELECT * FROM t0 WHERE ((((t0.c0)IS(t0.c0)) IN (CAST(t0.c0 AS BLOB), ((t0.c0) NOTNULL))));
SELECT * FROM t0 WHERE ((((t0.c0)IS(t0.c0)) IN (CAST(t0.c0 AS BLOB), ((t0.c0) NOTNULL)))) INTERSECT SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))) NOTNULL));
SELECT * FROM t0 WHERE ((((t0.c0)IS(t0.c0)) IN (CAST(t0.c0 AS BLOB), ((t0.c0) NOTNULL))));
SELECT * FROM t0 WHERE ((((t0.c0)IS(t0.c0)) IN (CAST(t0.c0 AS BLOB), ((t0.c0) NOTNULL)))) INTERSECT SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))) NOTNULL));
SELECT * FROM t0 WHERE (IFNULL((- (0.721355547108321)), (('-1e500')GLOB(t0.c0)))) ORDER BY ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(732839206)))AND(t0.c0))) NOTNULL), ((CASE -651880257  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0xffffffffab7e8f30 END)GLOB(((t0.c0) IS TRUE)))  NULLS FIRST, CASE ((t0.c0) IS FALSE)  WHEN ((t0.c0) IS FALSE) THEN ((t0.c0)IS NOT(t0.c0)) WHEN (0X70a36a9 IN (0.6178893881693254)) THEN (t0.c0 IN (t0.c0)) END  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (IFNULL((- (0.721355547108321)), (('-1e500')GLOB(t0.c0)))) ORDER BY ((t0.c0) NOT NULL) ASC  NULLS LAST, ((t0.c0) NOT NULL) COLLATE BINARY  NULLS LAST;
SELECT * FROM t0 WHERE (IFNULL((- (0.721355547108321)), (('-1e500')GLOB(t0.c0)))) ORDER BY ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(732839206)))AND(t0.c0))) NOTNULL), ((CASE -651880257  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0xffffffffab7e8f30 END)GLOB(((t0.c0) IS TRUE)))  NULLS FIRST, CASE ((t0.c0) IS FALSE)  WHEN ((t0.c0) IS FALSE) THEN ((t0.c0)IS NOT(t0.c0)) WHEN (0X70a36a9 IN (0.6178893881693254)) THEN (t0.c0 IN (t0.c0)) END  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (IFNULL((- (0.721355547108321)), (('-1e500')GLOB(t0.c0)))) ORDER BY ((t0.c0) NOT NULL) ASC  NULLS LAST, ((t0.c0) NOT NULL) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)<<(t0.c0))) NOT NULL));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)<<(t0.c0))) NOT NULL))AND(CASE WHEN (8.71437567E8 IN (t0.c0)) THEN LENGTH(t0.c0) WHEN ((((((t0.c0)AND(t0.c0)))OR(NULL)))AND(t0.c0)) THEN x'' WHEN LTRIM(t0.c0) THEN t0.c0 WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((0.03341757893209174)*(t0.c0)) WHEN CAST(t0.c0 AS REAL) THEN t0.c0 ELSE (t0.c0 IN ('-453965695')) END))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE DESC  NULLS LAST, (- ((t0.c0 IN ()))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) NOT BETWEEN ((((t0.c0))!=((t0.c0)))) AND (((t0.c0) IS FALSE)))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE DESC  NULLS LAST, (- ((t0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)<<(t0.c0))) NOT NULL));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)<<(t0.c0))) NOT NULL))AND(CASE WHEN (8.71437567E8 IN (t0.c0)) THEN LENGTH(t0.c0) WHEN ((((((t0.c0)AND(t0.c0)))OR(NULL)))AND(t0.c0)) THEN x'' WHEN LTRIM(t0.c0) THEN t0.c0 WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((0.03341757893209174)*(t0.c0)) WHEN CAST(t0.c0 AS REAL) THEN t0.c0 ELSE (t0.c0 IN ('-453965695')) END))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE DESC  NULLS LAST, (- ((t0.c0 IN ()))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) NOT BETWEEN ((((t0.c0))!=((t0.c0)))) AND (((t0.c0) IS FALSE)))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE DESC  NULLS LAST, (- ((t0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN ()))OR(CAST(t0.c0 AS REAL))))AND(((t0.c0)LIKE(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0 IN ()))OR(CAST(t0.c0 AS REAL))))AND(((t0.c0)LIKE(t0.c0)))))AND(((((((t0.c0, t0.c0, t0.c0))<((NULL, t0.c0, t0.c0)))))>((((((t0.c0)OR(t0.c0)))AND(t0.c0)))))))) LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN ()))OR(CAST(t0.c0 AS REAL))))AND(((t0.c0)LIKE(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0 IN ()))OR(CAST(t0.c0 AS REAL))))AND(((t0.c0)LIKE(t0.c0)))))AND(((((((t0.c0, t0.c0, t0.c0))<((NULL, t0.c0, t0.c0)))))>((((((t0.c0)OR(t0.c0)))AND(t0.c0)))))))) LIMIT 1;
SELECT ALL * FROM t0 WHERE ((NULL IN (t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c0, NULL)) BETWEEN ((((((((t0.c0)AND(824128587)))OR(t0.c0)))OR(t0.c0)), ((t0.c0) IS FALSE))) AND ((t0.c0, ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(x'eb')))AND(t0.c0))))) ASC  NULLS LAST, CASE WHEN (~ (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE ((t0.c0) IS TRUE) END  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((NULL IN (t0.c0)) COLLATE NOCASE) ORDER BY ((((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0 COLLATE NOCASE)))AND((t0.c0 IN (t0.c0, t0.c0, '241234946')))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR(((t0.c0)!=(t0.c0)))))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0 COLLATE NOCASE)))AND((t0.c0 IN (t0.c0, t0.c0, '241234946')))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR(((t0.c0)!=(t0.c0)))))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) ASC;
SELECT ALL * FROM t0 WHERE ((NULL IN (t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c0, NULL)) BETWEEN ((((((((t0.c0)AND(824128587)))OR(t0.c0)))OR(t0.c0)), ((t0.c0) IS FALSE))) AND ((t0.c0, ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(x'eb')))AND(t0.c0))))) ASC  NULLS LAST, CASE WHEN (~ (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE ((t0.c0) IS TRUE) END  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((NULL IN (t0.c0)) COLLATE NOCASE) ORDER BY ((((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0 COLLATE NOCASE)))AND((t0.c0 IN (t0.c0, t0.c0, '241234946')))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR(((t0.c0)!=(t0.c0)))))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0 COLLATE NOCASE)))AND((t0.c0 IN (t0.c0, t0.c0, '241234946')))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR(((t0.c0)!=(t0.c0)))))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) ASC;
SELECT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0)AND('-502467676')))OR(t0.c0)))<(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((((t0.c0)AND('-502467676')))OR(t0.c0)))<(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))))AND(((t0.c0 COLLATE RTRIM) NOTNULL))));
SELECT COUNT(*) FROM t0 WHERE (((((((CASE t0.c0  WHEN '0.3920855045045124' THEN t0.c0 ELSE t0.c0 END)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(-49830676 COLLATE RTRIM)))AND(json_object(t0.c0, x'', t0.c0)))) ORDER BY CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) NOTNULL) WHEN (((t0.c0, 'K{W+', t0.c0)) BETWEEN ((x'', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) THEN t0.c0 COLLATE RTRIM ELSE IFNULL(t0.c0, t0.c0) END;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((CASE t0.c0  WHEN '0.3920855045045124' THEN t0.c0 ELSE t0.c0 END)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(0xfffffffffd07a4ec COLLATE RTRIM)))AND(json_object(t0.c0, x'', t0.c0)))) ORDER BY CAST(CASE WHEN 'A' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS REAL), (t0.c0 COLLATE BINARY IN (json_array_length(t0.c0, t0.c0))) DESC LIMIT 0x2;
SELECT MIN(t0.c0) FROM t0 WHERE (NULL) ORDER BY (((((((t0.c0 IN (t0.c0)))AND((t0.c0 IN ()))))AND(((t0.c0) ISNULL))))AND(((t0.c0) ISNULL)))  NULLS LAST, CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS TEXT)  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (NULL) ORDER BY (((((((t0.c0 IN (t0.c0)))AND((t0.c0 IN ()))))AND(((t0.c0) ISNULL))))AND(((t0.c0) ISNULL)))  NULLS LAST, CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS TEXT)  NULLS FIRST LIMIT 0X3 INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (LTRIM(t0.c0 COLLATE BINARY)) ORDER BY (((((((t0.c0 IN (t0.c0)))AND((t0.c0 IN ()))))AND(((t0.c0) ISNULL))))AND(((t0.c0) ISNULL)))  NULLS LAST, CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS TEXT)  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t0 WHERE (CASE (((t0.c0))<=((t0.c0)))  WHEN ((t0.c0) ISNULL) THEN (~ (t0.c0)) WHEN t0.c0 THEN '-1825162165' WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) END) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (CASE (((t0.c0))<((t0.c0)))  WHEN ((t0.c0) ISNULL) THEN (~ (t0.c0)) WHEN t0.c0 THEN '-1825162165' WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) END) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE (((t0.c0))<=((t0.c0)))  WHEN ((t0.c0) ISNULL) THEN (~ (t0.c0)) WHEN t0.c0 THEN '-1825162165' WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) END) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (CASE (((t0.c0))<((t0.c0)))  WHEN ((t0.c0) ISNULL) THEN (~ (t0.c0)) WHEN t0.c0 THEN '-1825162165' WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) END) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ('Ph]çY(dNa') ORDER BY LAST_INSERT_ROWID() ASC;
SELECT ALL * FROM t0 WHERE ('Ph]çY(dNa') ORDER BY ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND((((t0.c0, t0.c0))=((t0.c0, t0.c0))))))AND((t0.c0 IN ()))) DESC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE ((- (TYPEOF(t0.c0)))) ORDER BY ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND((((t0.c0, t0.c0))==((t0.c0, t0.c0))))))AND((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ('Ph]çY(dNa') ORDER BY LAST_INSERT_ROWID() ASC;
SELECT ALL * FROM t0 WHERE ('Ph]çY(dNa') ORDER BY ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND((((t0.c0, t0.c0))=((t0.c0, t0.c0))))))AND((t0.c0 IN ()))) DESC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE ((- (TYPEOF(t0.c0)))) ORDER BY ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND((((t0.c0, t0.c0))==((t0.c0, t0.c0))))))AND((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE ('(â¸­yDs?!c') ORDER BY (NOT ((((t0.c0, t0.c0, NULL, t0.c0, t0.c0, x'')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, '#')) AND ((t0.c0, t0.c0, t0.c0, t0.c0, NULL, t0.c0))))) DESC, CAST(CASE WHEN t0.c0 THEN NULL WHEN t0.c0 THEN -6.02338418E8 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER) ASC, ((((t0.c0) NOT BETWEEN (t0.c0) AND (x'441a9956'))) IS TRUE) DESC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ('(â¸­yDs?!c') ORDER BY (NOT ((((t0.c0, t0.c0, NULL, t0.c0, t0.c0, x'')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, '#')) AND ((t0.c0, t0.c0, t0.c0, t0.c0, NULL, t0.c0))))) DESC, CAST(CASE WHEN t0.c0 THEN NULL WHEN t0.c0 THEN -6.02338418E8 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER) ASC, ((((t0.c0) NOT BETWEEN (t0.c0) AND (x'441a9956'))) IS TRUE) DESC;
SELECT MAX(t0.c0) FROM t0 WHERE ((t0.c0 IN ()));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((t0.c0 IN ())) LIMIT 3 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CASE t0.c0  WHEN ((0X51d6883f) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)>=(t0.c0)) WHEN t0.c0 THEN t0.c0 COLLATE RTRIM WHEN ((((((((NULL)OR(t0.c0)))OR(t0.c0)))AND(4.21601257E8)))OR(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '	{}xE' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0x29de0105 END WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE 0.8082436460767842 END THEN t0.c0 COLLATE RTRIM END) LIMIT 3;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)IS(t0.c0)))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(t0.c0)));
SELECT * FROM t0 WHERE (((((((t0.c0)IS(t0.c0)))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(t0.c0))) LIMIT 0 INTERSECT SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)==(t0.c0)))) AND ((t0.c0)))) LIMIT 0;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)IS(t0.c0)))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(t0.c0)));
SELECT * FROM t0 WHERE (((((((t0.c0)IS(t0.c0)))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(t0.c0))) LIMIT 0 INTERSECT SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)==(t0.c0)))) AND ((t0.c0)))) LIMIT 0;
SELECT * FROM t0 NOT INDEXED WHERE (((((t0.c0)OR(t0.c0)))AND(t0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN (((t0.c0))>((t0.c0))) WHEN x'' THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END, ((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-1021010107' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(LIKELY(t0.c0))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))AND(t0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN (((t0.c0))>((t0.c0))) WHEN x'' THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END, ((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-1021010107' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(LIKELY(t0.c0))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((~ (t0.c0)) IN ((NOT (t0.c0))))) ORDER BY CASE WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN (((t0.c0))>((t0.c0))) WHEN x'' THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END, ((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-1021010107' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(LIKELY(t0.c0))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC LIMIT 0x0;
SELECT * FROM t0 NOT INDEXED WHERE (((((t0.c0)OR(t0.c0)))AND(t0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN (((t0.c0))>((t0.c0))) WHEN x'' THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END, ((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-1021010107' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(LIKELY(t0.c0))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))AND(t0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN (((t0.c0))>((t0.c0))) WHEN x'' THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END, ((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-1021010107' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(LIKELY(t0.c0))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((~ (t0.c0)) IN ((NOT (t0.c0))))) ORDER BY CASE WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN (((t0.c0))>((t0.c0))) WHEN x'' THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END, ((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-1021010107' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(LIKELY(t0.c0))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC LIMIT 0x0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((CASE WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((CASE WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END))))AND(((x'') IS TRUE) COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN ((((t0.c0)=(t0.c0)), t0.c0)) AND (((t0.c0 IN (t0.c0, t0.c0)), ((t0.c0) IS FALSE))))) ORDER BY ((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) NOTNULL);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN ((((t0.c0)==(t0.c0)), t0.c0)) AND (((t0.c0 IN (t0.c0, t0.c0)), ((t0.c0) IS FALSE))))) ORDER BY ((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) NOTNULL) LIMIT 0X1 INTERSECT SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c0))) NOT BETWEEN (((((((((((t0.c0)AND(t0.c0)))AND(x'5f')))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) AND (((t0.c0) IS FALSE)))) ORDER BY ((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) NOTNULL) LIMIT 1;
SELECT * FROM t0 WHERE (x'b20eba73') ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE;
SELECT ALL * FROM t0 WHERE (((x'b20eba73')AND((NOT (t0.c0 COLLATE NOCASE))))) ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE LIMIT 0x0;
SELECT * FROM t0 WHERE (x'b20eba73') ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE;
SELECT ALL * FROM t0 WHERE (((x'b20eba73')AND((NOT (t0.c0 COLLATE NOCASE))))) ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE LIMIT 0x0;
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c0)AND(t0.c0)))>=(t0.c0))) ORDER BY t0.c0  NULLS FIRST, LIKELIHOOD(DISTINCT ((t0.c0)/(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN 0x7e522c4a THEN '' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) DESC  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))=(t0.c0)))AND((((0x3b03bb42) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CAST(t0.c0 AS BLOB), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 END))))) ORDER BY t0.c0  NULLS FIRST, LIKELIHOOD(DISTINCT ((t0.c0)/(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN 0X7e522c4a THEN '' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((- (((t0.c0) NOT BETWEEN (t0.c0) AND ('266067817'))))) ORDER BY t0.c0  NULLS FIRST, LIKELIHOOD(DISTINCT ((t0.c0)/(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN 2119314506 THEN '' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) DESC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) IN ((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))));
SELECT ALL * FROM t0 WHERE (((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) IN ((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0)))))) ORDER BY (NOT (NULL))  NULLS LAST, ((((((((CAST(t0.c0 AS REAL))AND(0Xffffffffe7461996)))OR((- (t0.c0)))))AND(t0.c0 COLLATE BINARY)))OR(CAST(t0.c0 AS NUMERIC))) ASC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (((((CAST(NULL AS NUMERIC))AND(((t0.c0) NOTNULL))))AND((((t0.c0, t0.c0))<=((0.5056117496595296, t0.c0)))))) ORDER BY (NOT (NULL))  NULLS LAST, ((((((((CAST(t0.c0 AS REAL))AND(-414836330)))OR((- (t0.c0)))))AND(t0.c0 COLLATE BINARY)))OR(CAST(t0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) IN ((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))));
SELECT ALL * FROM t0 WHERE (((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) IN ((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0)))))) ORDER BY (NOT (NULL))  NULLS LAST, ((((((((CAST(t0.c0 AS REAL))AND(0Xffffffffe7461996)))OR((- (t0.c0)))))AND(t0.c0 COLLATE BINARY)))OR(CAST(t0.c0 AS NUMERIC))) ASC  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (((((CAST(NULL AS NUMERIC))AND(((t0.c0) NOTNULL))))AND((((t0.c0, t0.c0))<=((0.5056117496595296, t0.c0)))))) ORDER BY (NOT (NULL))  NULLS LAST, ((((((((CAST(t0.c0 AS REAL))AND(-414836330)))OR((- (t0.c0)))))AND(t0.c0 COLLATE BINARY)))OR(CAST(t0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (UPPER(t0.c0) COLLATE NOCASE) ORDER BY ((((t0.c0)%(t0.c0)))||(t0.c0 COLLATE RTRIM)) ASC, ((t0.c0 COLLATE BINARY)==(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (UPPER(t0.c0) COLLATE NOCASE) ORDER BY NULL COLLATE NOCASE  NULLS LAST, CAST(((t0.c0)>=(t0.c0)) AS BLOB) DESC;
SELECT * FROM t0 WHERE (UPPER(t0.c0) COLLATE NOCASE) ORDER BY ((((t0.c0)%(t0.c0)))||(t0.c0 COLLATE RTRIM)) ASC, ((t0.c0 COLLATE BINARY)==(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (UPPER(t0.c0) COLLATE NOCASE) ORDER BY NULL COLLATE NOCASE  NULLS LAST, CAST(((t0.c0)>=(t0.c0)) AS BLOB) DESC;
SELECT COUNT(*) FROM t0 WHERE ((- (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((- (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY CASE WHEN ((((t0.c0)OR(NULL)))AND(t0.c0)) THEN (- (t0.c0)) WHEN x'' THEN CASE WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 ELSE t0.c0 END END  NULLS LAST, (((t0.c0)>>(t0.c0)) IN (t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN ((((t0.c0)OR(NULL)))AND(t0.c0)) THEN (- (t0.c0)) WHEN x'' THEN CASE WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 ELSE t0.c0 END END  NULLS LAST, (((t0.c0)>>(t0.c0)) IN (t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0) ISNULL) IN (CASE NULL  WHEN t0.c0 THEN 0.49235591877849416 WHEN t0.c0 THEN 0.18535111465144138 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0) ISNULL) IN (CASE NULL  WHEN t0.c0 THEN 0.49235591877849416 WHEN t0.c0 THEN 0.18535111465144138 ELSE t0.c0 END)))AND((((t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS INTEGER), t0.c0)) AND (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), CAST(t0.c0 AS REAL))))))) ORDER BY 0.7034717991299468 ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (0.3480869467810972) ORDER BY 0.7034717991299468 ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT NULL) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT NULL) COLLATE RTRIM)AND(CASE t0.c0  WHEN 'eëHZ' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT NULL) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT NULL) COLLATE RTRIM)AND(CASE t0.c0  WHEN 'eëHZ' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) LIMIT 0X1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((CAST(t0.c0 AS BLOB))AND(TOTAL_CHANGES())))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((+ (t0.c0))))) ORDER BY (RTRIM(t0.c0) IN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOT BETWEEN (t0.c0) AND ('Hpaé¸¶')))) ASC, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((CAST(t0.c0 AS BLOB))AND(TOTAL_CHANGES())))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((+ (t0.c0)))))AND((((~ (t0.c0)))>=((((t0.c0))!=((t0.c0)))))))) ORDER BY (- ((- (t0.c0))))  NULLS LAST LIMIT 0 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0)+(t0.c0))) AND (t0.c0))) ORDER BY (- ((- (t0.c0))))  NULLS LAST LIMIT 0x0;
SELECT * FROM t0 WHERE ((NOT (LIKELIHOOD(NULL, t0.c0)))) ORDER BY ((('H6Xtb' COLLATE BINARY))>((((t0.c0) NOT BETWEEN (814605344) AND (t0.c0))))) DESC  NULLS LAST, (+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((NOT (LIKELIHOOD(NULL, t0.c0))))AND(((((((CAST(t0.c0 AS BLOB))OR(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))AND(t0.c0 COLLATE BINARY)))AND(((x'') BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY ((('H6Xtb' COLLATE BINARY))>((((t0.c0) NOT BETWEEN (0X308de420) AND (t0.c0))))) DESC  NULLS LAST, (+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 COLLATE BINARY WHEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN json_valid(t0.c0) WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c0)AND(t0.c0)) WHEN ((t0.c0)<<(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) ORDER BY ((('H6Xtb' COLLATE BINARY))>((((t0.c0) NOT BETWEEN (814605344) AND (t0.c0))))) DESC  NULLS LAST, (+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST LIMIT 0x3;
SELECT * FROM t0 WHERE ((NOT (LIKELIHOOD(NULL, t0.c0)))) ORDER BY ((('H6Xtb' COLLATE BINARY))>((((t0.c0) NOT BETWEEN (814605344) AND (t0.c0))))) DESC  NULLS LAST, (+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((+ ('{')))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOTNULL)) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((+ ('{')))))AND(LIKELY(load_extension(t0.c0))))) ORDER BY (((+ (t0.c0)))IS(CAST(t0.c0 AS INTEGER))) ASC LIMIT 0X4;
SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((+ ('{')))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOTNULL)) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((+ ('{')))))AND(LIKELY(load_extension(t0.c0))))) ORDER BY (((+ (t0.c0)))IS(CAST(t0.c0 AS INTEGER))) ASC LIMIT 0X4;
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c0) NOTNULL))) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, CASE WHEN ((t0.c0)>(t0.c0)) THEN (t0.c0 IN (t0.c0)) END ASC, t0.c0 COLLATE NOCASE DESC;
SELECT * FROM t0 NOT INDEXED WHERE (((TYPEOF(DISTINCT ((t0.c0) NOTNULL)))AND(((((t0.c0) NOT BETWEEN ('o''') AND (t0.c0)))LIKE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, CASE WHEN ((t0.c0)>(t0.c0)) THEN (t0.c0 IN (t0.c0)) END ASC, t0.c0 COLLATE NOCASE DESC LIMIT 0x3;
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c0) NOTNULL))) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, CASE WHEN ((t0.c0)>(t0.c0)) THEN (t0.c0 IN (t0.c0)) END ASC, t0.c0 COLLATE NOCASE DESC;
SELECT * FROM t0 NOT INDEXED WHERE (((TYPEOF(DISTINCT ((t0.c0) NOTNULL)))AND(((((t0.c0) NOT BETWEEN ('o''') AND (t0.c0)))LIKE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, CASE WHEN ((t0.c0)>(t0.c0)) THEN (t0.c0 IN (t0.c0)) END ASC, t0.c0 COLLATE NOCASE DESC LIMIT 0x3;
SELECT * FROM t0 WHERE ((x'' IN ())) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER) ASC;
SELECT * FROM t0 WHERE ((x'' IN ())) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER) ASC INTERSECT SELECT ALL * FROM t0 WHERE ((((+ (t0.c0))) IS TRUE)) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER) ASC;
SELECT * FROM t0 WHERE ((x'' IN ())) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER) ASC;
SELECT * FROM t0 WHERE ((x'' IN ())) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER) ASC INTERSECT SELECT ALL * FROM t0 WHERE ((((+ (t0.c0))) IS TRUE)) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER) ASC;
SELECT * FROM t0 WHERE ('696086682');
SELECT DISTINCT * FROM t0 WHERE ((('696086682')AND(x'60d7')));
SELECT * FROM t0 WHERE ('696086682');
SELECT DISTINCT * FROM t0 WHERE ((('696086682')AND(x'60d7')));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE (NOT (t0.c0))  WHEN (t0.c0 IN ()) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((((((t0.c0)OR(t0.c0)))OR(x'76')))OR(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN (t0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CAST(t0.c0 AS INTEGER) WHEN ((t0.c0) NOT NULL) THEN t0.c0 COLLATE NOCASE ELSE (((t0.c0, t0.c0))>=((x'66a963b5', t0.c0))) END) ORDER BY CAST((x'' IN ()) AS TEXT) ASC  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CASE (NOT (t0.c0))  WHEN (t0.c0 IN ()) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((((((t0.c0)OR(t0.c0)))OR(x'76')))OR(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN (t0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CAST(t0.c0 AS INTEGER) WHEN ((t0.c0) NOT NULL) THEN t0.c0 COLLATE NOCASE ELSE (((t0.c0, t0.c0))>((x'66a963b5', t0.c0))) END) ORDER BY CAST((x'' IN ()) AS TEXT) ASC  NULLS LAST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((- (ABS(t0.c0)))) ORDER BY CAST((x'' IN ()) AS TEXT) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0) NOTNULL) AS BLOB));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) NOTNULL) AS BLOB));
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(x'ac')))/(LOWER(DISTINCT t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(x'ac')))/(LOWER(DISTINCT t0.c0))))AND(LOWER(DISTINCT '863433551')))) ORDER BY ((((t0.c0)IS(t0.c0))) ISNULL) INTERSECT SELECT COUNT(*) FROM t0 WHERE (CASE (NOT (t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))AND('967425476')))AND(t0.c0)))OR(t0.c0)) ELSE t0.c0 COLLATE RTRIM END) ORDER BY ((((t0.c0)IS(t0.c0))) ISNULL);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 IN ())) ORDER BY (((t0.c0)) BETWEEN ((((8.71437567E8)AND(t0.c0)))) AND ((CAST(t0.c0 AS INTEGER))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))AND((0.6596075742276439 IN ())))) ORDER BY (((t0.c0)) BETWEEN ((((8.71437567E8)AND(t0.c0)))) AND ((CAST(t0.c0 AS INTEGER))))  NULLS FIRST INTERSECT SELECT COUNT(*) FROM t0 WHERE (((((~ (t0.c0))))<(((+ (t0.c0)))))) ORDER BY (((t0.c0)) BETWEEN ((((8.71437567E8)AND(t0.c0)))) AND ((CAST(t0.c0 AS INTEGER))))  NULLS FIRST;
SELECT * FROM t0 WHERE (((NULL)<<(((t0.c0)LIKE(t0.c0))))) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE  NULLS LAST, (((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))&(((((t0.c0)OR(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST, (((t0.c0)IS NOT(t0.c0)) IN ('3viâ´' COLLATE BINARY, x'3f'))  NULLS LAST, (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((NULL)<<(((t0.c0)LIKE(t0.c0)))))AND(TYPEOF(DISTINCT 0.46716706476202496)))) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE  NULLS LAST, (((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))&(((((t0.c0)OR(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST, (((t0.c0)IS NOT(t0.c0)) IN ('3viâ´' COLLATE BINARY, x'3f'))  NULLS LAST, (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((+ (ABS(DISTINCT t0.c0)))) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE  NULLS LAST, (((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))&(((((t0.c0)OR(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST, (((t0.c0)IS NOT(t0.c0)) IN ('3viâ´' COLLATE BINARY, x'3f'))  NULLS LAST, (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())  NULLS FIRST;
SELECT * FROM t0 WHERE (((NULL)<<(((t0.c0)LIKE(t0.c0))))) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE  NULLS LAST, (((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))&(((((t0.c0)OR(t0.c0)))AND(t0.c0)))) ASC  NULLS LAST, (((t0.c0)IS NOT(t0.c0)) IN ('3viâ´' COLLATE BINARY, x'3f'))  NULLS LAST, (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((- ((NOT (t0.c0))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL)  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((- ((NOT (t0.c0))))) ORDER BY (IFNULL(DISTINCT '392489314', NULL) IN ((((t0.c0))!=((t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE) ASC, (((t0.c0 IN (t0.c0)))>=(((t0.c0)|(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((- ((NOT (t0.c0))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL)  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((- ((NOT (t0.c0))))) ORDER BY (IFNULL(DISTINCT '392489314', NULL) IN ((((t0.c0))!=((t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE) ASC, (((t0.c0 IN (t0.c0)))>=(((t0.c0)|(t0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CHAR(NULL)) ORDER BY CAST('-1433023270' AS REAL)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CHAR(NULL)) ORDER BY CAST('-1433023270' AS REAL)  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CAST('-1433023270' AS REAL)  NULLS LAST LIMIT 0X0;
SELECT * FROM t0 WHERE (CASE (((t0.c0, t0.c0))<=((t0.c0, t0.c0)))  WHEN CAST(t0.c0 AS BLOB) THEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0)>(t0.c0)) THEN LIKELIHOOD(DISTINCT t0.c0, t0.c0) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN 0.1942639421111798 WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN (~ (t0.c0)) WHEN t0.c0 THEN ((t0.c0)>=(t0.c0)) WHEN (NOT (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END) ORDER BY ((((t0.c0) ISNULL)) NOT BETWEEN (((t0.c0) NOT NULL)) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), ((((((((t0.c0)AND(((t0.c0)IS NOT(t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0)))AND(NULL)) DESC  NULLS LAST, ((NULL)%(CAST(t0.c0 AS INTEGER)));
SELECT DISTINCT * FROM t0 WHERE (CASE (((t0.c0, t0.c0))<=((t0.c0, t0.c0)))  WHEN CAST(t0.c0 AS BLOB) THEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0)>(t0.c0)) THEN LIKELIHOOD(DISTINCT t0.c0, t0.c0) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN 0.1942639421111798 WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN (~ (t0.c0)) WHEN t0.c0 THEN ((t0.c0)>=(t0.c0)) WHEN (NOT (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END) ORDER BY SQLITE_COMPILEOPTION_USED(t0.c0 COLLATE NOCASE) DESC;
SELECT * FROM t0 WHERE (CASE (((t0.c0, t0.c0))<=((t0.c0, t0.c0)))  WHEN CAST(t0.c0 AS BLOB) THEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0)>(t0.c0)) THEN LIKELIHOOD(DISTINCT t0.c0, t0.c0) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN 0.1942639421111798 WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN (~ (t0.c0)) WHEN t0.c0 THEN ((t0.c0)>=(t0.c0)) WHEN (NOT (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END) ORDER BY ((((t0.c0) ISNULL)) NOT BETWEEN (((t0.c0) NOT NULL)) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), ((((((((t0.c0)AND(((t0.c0)IS NOT(t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0)))AND(NULL)) DESC  NULLS LAST, ((NULL)%(CAST(t0.c0 AS INTEGER)));
SELECT * FROM t0 WHERE ((CAST(t0.c0 AS REAL) IN ((- (t0.c0))))) ORDER BY (~ (t0.c0 COLLATE NOCASE)) ASC, ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))|(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC, t0.c0 DESC, t0.c0  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c0 AS REAL) IN ((- (t0.c0)))))AND(HEX(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY (~ (t0.c0 COLLATE NOCASE)) ASC, ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))|(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC, t0.c0 DESC, t0.c0  NULLS LAST;
SELECT * FROM t0 WHERE ((CAST(t0.c0 AS REAL) IN ((- (t0.c0))))) ORDER BY (~ (t0.c0 COLLATE NOCASE)) ASC, ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))|(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC, t0.c0 DESC, t0.c0  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c0 AS REAL) IN ((- (t0.c0)))))AND(HEX(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY (~ (t0.c0 COLLATE NOCASE)) ASC, ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))|(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC, t0.c0 DESC, t0.c0  NULLS LAST;
SELECT * FROM t0 WHERE (((TRIM(DISTINCT t0.c0, t0.c0)) NOT BETWEEN (json_type(t0.c0)) AND (((t0.c0)*(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((((TRIM(DISTINCT t0.c0, t0.c0)) NOT BETWEEN (json_type(t0.c0)) AND (((t0.c0)*(t0.c0)))))AND(t0.c0))) ORDER BY ((t0.c0)<=('')) COLLATE BINARY, '-1774489093' COLLATE RTRIM DESC  NULLS FIRST, '0.4385794289584355' DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((TRIM(DISTINCT t0.c0, t0.c0)) NOT BETWEEN (json_type(t0.c0)) AND (((t0.c0)*(t0.c0)))));
SELECT MAX(t0.c0) FROM t0 WHERE ((((+ (t0.c0)))+(CAST(t0.c0 AS BLOB)))) ORDER BY (((((t0.c0) NOT BETWEEN ('') AND (t0.c0))))>=(('now')));
SELECT MAX(t0.c0) FROM t0 WHERE ((((((+ (t0.c0)))+(CAST(t0.c0 AS BLOB))))AND((((t0.c0 IN ())) NOT NULL)))) ORDER BY (((((t0.c0) NOT BETWEEN ('') AND (t0.c0))))>=(('now'))) LIMIT 0;
SELECT ALL * FROM t0 WHERE (STRFTIME(ABS(DISTINCT t0.c0), ((t0.c0) IS FALSE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.761591357757349 THEN t0.c0 WHEN t0.c0 THEN x'' END, (t0.c0 IN (t0.c0, t0.c0)), ((((((((x'ec')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) ORDER BY (((t0.c0 IN (t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0) NOT NULL)))  NULLS FIRST;
SELECT * FROM t0 WHERE (STRFTIME(ABS(DISTINCT t0.c0), ((t0.c0) IS FALSE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.761591357757349 THEN t0.c0 WHEN t0.c0 THEN x'' END, (t0.c0 IN (t0.c0, t0.c0)), ((((((((x'ec')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) ORDER BY 0.01985421442386881 DESC  NULLS LAST, (((t0.c0, 0.6131841902909492, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0 COLLATE BINARY, json_object(t0.c0, t0.c0, t0.c0, t0.c0), ABS(t0.c0))) AND ((NULL, ((t0.c0)OR(t0.c0)), (NOT (t0.c0)), ((t0.c0) IS TRUE)))) ASC, CAST(t0.c0 AS INTEGER) COLLATE NOCASE DESC LIMIT 0X0 INTERSECT SELECT ALL * FROM t0 WHERE (LIKELIHOOD(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))) ORDER BY 0.01985421442386881 DESC  NULLS LAST, (((t0.c0, 0.6131841902909492, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0 COLLATE BINARY, json_object(t0.c0, t0.c0, t0.c0, t0.c0), ABS(t0.c0))) AND ((NULL, ((t0.c0)OR(t0.c0)), (NOT (t0.c0)), ((t0.c0) IS TRUE)))) ASC, CAST(t0.c0 AS INTEGER) COLLATE NOCASE DESC LIMIT 0;
SELECT ALL * FROM t0 WHERE (STRFTIME(ABS(DISTINCT t0.c0), ((t0.c0) IS FALSE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.761591357757349 THEN t0.c0 WHEN t0.c0 THEN x'' END, (t0.c0 IN (t0.c0, t0.c0)), ((((((((x'ec')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) ORDER BY (((t0.c0 IN (t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0) NOT NULL)))  NULLS FIRST;
SELECT * FROM t0 WHERE (STRFTIME(ABS(DISTINCT t0.c0), ((t0.c0) IS FALSE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.761591357757349 THEN t0.c0 WHEN t0.c0 THEN x'' END, (t0.c0 IN (t0.c0, t0.c0)), ((((((((x'ec')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) ORDER BY 0.01985421442386881 DESC  NULLS LAST, (((t0.c0, 0.6131841902909492, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0 COLLATE BINARY, json_object(t0.c0, t0.c0, t0.c0, t0.c0), ABS(t0.c0))) AND ((NULL, ((t0.c0)OR(t0.c0)), (NOT (t0.c0)), ((t0.c0) IS TRUE)))) ASC, CAST(t0.c0 AS INTEGER) COLLATE NOCASE DESC LIMIT 0X0 INTERSECT SELECT ALL * FROM t0 WHERE (LIKELIHOOD(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))) ORDER BY 0.01985421442386881 DESC  NULLS LAST, (((t0.c0, 0.6131841902909492, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0 COLLATE BINARY, json_object(t0.c0, t0.c0, t0.c0, t0.c0), ABS(t0.c0))) AND ((NULL, ((t0.c0)OR(t0.c0)), (NOT (t0.c0)), ((t0.c0) IS TRUE)))) ASC, CAST(t0.c0 AS INTEGER) COLLATE NOCASE DESC LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (((((x'ef') IS FALSE))==(((t0.c0) IS FALSE))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((x'ef') IS FALSE))=(((t0.c0) IS FALSE)))) ORDER BY ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (0xffffffffedc9c44e)))))AND(json_extract(t0.c0, t0.c0))) ASC;
SELECT MAX(t0.c0) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(CAST(t0.c0 AS INTEGER))))AND((t0.c0 IN (t0.c0, t0.c0, t0.c0)))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(CAST(t0.c0 AS INTEGER))))AND((t0.c0 IN (t0.c0)))))AND((((((t0.c0, t0.c0))==((t0.c0, NULL))))AND(t0.c0)))));
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0)!=(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((+ (((t0.c0)<(t0.c0)))))AND(((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL))));
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0)!=(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE ((((+ (((t0.c0)<(t0.c0)))))AND(((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL))));
SELECT COUNT(*) FROM t0 WHERE ((((NULL) NOT BETWEEN (t0.c0) AND ('>-/|)|')) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (0.7639979168440922)))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((NULL) NOT BETWEEN (t0.c0) AND ('>-/|)|')) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (0.7639979168440922))))) LIMIT 0X3;
SELECT * FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0)<=(t0.c0)), t0.c0 COLLATE RTRIM)) ORDER BY ((LOWER(t0.c0)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ())));
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0)<=(t0.c0)), t0.c0 COLLATE RTRIM)) ORDER BY ((LOWER(t0.c0)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ()))) INTERSECT SELECT * FROM t0 WHERE ((((NOT (t0.c0))) NOTNULL)) ORDER BY ((LOWER(t0.c0)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ())));
SELECT * FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0)<=(t0.c0)), t0.c0 COLLATE RTRIM)) ORDER BY ((LOWER(t0.c0)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ())));
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0)<=(t0.c0)), t0.c0 COLLATE RTRIM)) ORDER BY ((LOWER(t0.c0)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ()))) INTERSECT SELECT * FROM t0 WHERE ((((NOT (t0.c0))) NOTNULL)) ORDER BY ((LOWER(t0.c0)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN ())));
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, x'60')))) AND ((+ (t0.c0)))));
SELECT * FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, x'60')))) AND ((+ (t0.c0)))))AND(((x'c1')<=(t0.c0)) COLLATE BINARY COLLATE BINARY))) LIMIT 4 INTERSECT SELECT ALL * FROM t0 WHERE ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), LAST_INSERT_ROWID(), (t0.c0 IN (t0.c0, t0.c0, t0.c0))))>((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, t0.c0 COLLATE BINARY, ((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))) LIMIT 4;
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, x'60')))) AND ((+ (t0.c0)))));
SELECT * FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, x'60')))) AND ((+ (t0.c0)))))AND(((x'c1')<=(t0.c0)) COLLATE BINARY COLLATE BINARY))) LIMIT 4 INTERSECT SELECT ALL * FROM t0 WHERE ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), LAST_INSERT_ROWID(), (t0.c0 IN (t0.c0, t0.c0, t0.c0))))>((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, t0.c0 COLLATE BINARY, ((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))) LIMIT 4;
SELECT * FROM t0 WHERE ((((COALESCE(t0.c0, t0.c0)))>(((+ (t0.c0))))));
SELECT ALL * FROM t0 WHERE ((((((COALESCE(t0.c0, t0.c0)))>(((+ (t0.c0))))))AND(((t0.c0) NOT BETWEEN (0.38878606835927876) AND (((t0.c0)|(t0.c0))))))) INTERSECT SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT(((t0.c0) IS FALSE))));
SELECT * FROM t0 WHERE ((((COALESCE(t0.c0, t0.c0)))>(((+ (t0.c0))))));
SELECT ALL * FROM t0 WHERE ((((((COALESCE(t0.c0, t0.c0)))>(((+ (t0.c0))))))AND(((t0.c0) NOT BETWEEN (0.38878606835927876) AND (((t0.c0)|(t0.c0))))))) INTERSECT SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS NOT(((t0.c0) IS FALSE))));
SELECT MIN(t0.c0) FROM t0 WHERE (TRIM(t0.c0 COLLATE NOCASE));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((TRIM(t0.c0 COLLATE NOCASE))AND((((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0))) COLLATE BINARY))) LIMIT 0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((t0.c0, t0.c0))<((t0.c0, NULL))) IN (((0Xffffffffef823827)OR(t0.c0))))) ORDER BY CAST((((t0.c0))=((t0.c0))) AS INTEGER), HEX(('0.07073050816093995' IN ())) ASC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((((t0.c0, t0.c0))<((t0.c0, NULL))) IN (((0xffffffffef823827)OR(t0.c0)))))AND(((((((((t0.c0)>(t0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(t0.c0 AS TEXT)))))) ORDER BY CAST((((t0.c0))=((t0.c0))) AS INTEGER), HEX(('0.07073050816093995' IN ())) ASC LIMIT 0 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((x'14') IS FALSE)) ORDER BY CAST((((t0.c0))=((t0.c0))) AS INTEGER), HEX(('0.07073050816093995' IN ())) ASC LIMIT 0;
SELECT * FROM t0 WHERE (((NULL) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)>(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((((NULL) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)>(t0.c0)))))AND(0.7233861685513644))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) BETWEEN (t0.c0 COLLATE BINARY) AND (((((((((((0.013745741413457857)OR(-1.8828711E8)))OR(t0.c0)))AND(x'')))AND(t0.c0)))OR('2146668339')))));
SELECT * FROM t0 WHERE (((NULL) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)>(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((((NULL) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)>(t0.c0)))))AND(0.7233861685513644))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) BETWEEN (t0.c0 COLLATE BINARY) AND (((((((((((0.013745741413457857)OR(-1.8828711E8)))OR(t0.c0)))AND(x'')))AND(t0.c0)))OR('2146668339')))));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0)>(t0.c0)) IN (t0.c0))) ORDER BY (((((((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, '-10958963'))))AND(CASE x'83019e'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0) NOT NULL))))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0))))  NULLS FIRST, (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, NULL))))LIKE(NULLIF(t0.c0, t0.c0)));
SELECT MIN(t0.c0) FROM t0 WHERE ((((t0.c0)>(t0.c0)) IN (t0.c0))) ORDER BY ((t0.c0) NOT BETWEEN ('U|wF[z') AND (t0.c0)) COLLATE RTRIM, ((((((((x'')OR(TYPEOF(DISTINCT t0.c0))))OR(t0.c0)))OR(x'0b615356')))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) LIMIT 0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (x'c9');
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((x'c9')AND(((((t0.c0) BETWEEN (-1541906676) AND (t0.c0))) IS FALSE)))) ORDER BY t0.c0 ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (LOWER(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY t0.c0 ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE ('0.6943290348956236');
SELECT DISTINCT * FROM t0 WHERE ('0.6943290348956236') ORDER BY NULL ASC, t0.c0 ASC LIMIT 0;
SELECT ALL * FROM t0 WHERE ('0.6943290348956236');
SELECT DISTINCT * FROM t0 WHERE ('0.6943290348956236') ORDER BY NULL ASC, t0.c0 ASC LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (NOT (((t0.c0)<<(t0.c0))))  NULLS FIRST, (((- (t0.c0)))*(t0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)AND(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY CAST(NULL AS REAL) LIMIT 0x2 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (((UNLIKELY(t0.c0))/(((t0.c0)>>(t0.c0))))) ORDER BY CAST(NULL AS REAL) LIMIT 2;
SELECT ALL COUNT(*) FROM t0 WHERE (((~ (t0.c0)) IN ())) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS NUMERIC) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((~ (t0.c0)) IN ())) ORDER BY (+ ('' COLLATE NOCASE)) ASC LIMIT 0X0 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE ((HEX(DISTINCT t0.c0) IN ())) ORDER BY (+ ('' COLLATE NOCASE)) ASC LIMIT 0;
SELECT * FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN (~ (t0.c0)) THEN ((t0.c0)!=(t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (- (t0.c0)) WHEN (((t0.c0, t0.c0))=((t0.c0, t0.c0))) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) IS FALSE) END) ORDER BY (((t0.c0) NOTNULL) IN (((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC, ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CHANGES())) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CASE (t0.c0 IN ())  WHEN (~ (t0.c0)) THEN ((t0.c0)<>(t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (- (t0.c0)) WHEN (((t0.c0, t0.c0))=((t0.c0, t0.c0))) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) IS FALSE) END)AND(LIKELY(((t0.c0)*(NULL)))))) ORDER BY t0.c0 ASC, (((+ (t0.c0)))<(t0.c0))  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((UPPER(t0.c0))AND(((t0.c0) NOTNULL))))OR(CASE WHEN 0.04556938344711847 THEN t0.c0 END))) ORDER BY t0.c0 ASC, (((+ (t0.c0)))<(t0.c0))  NULLS FIRST LIMIT 0X3;
SELECT * FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN (~ (t0.c0)) THEN ((t0.c0)!=(t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (- (t0.c0)) WHEN (((t0.c0, t0.c0))=((t0.c0, t0.c0))) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) IS FALSE) END) ORDER BY (((t0.c0) NOTNULL) IN (((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC, ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CHANGES())) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CASE (t0.c0 IN ())  WHEN (~ (t0.c0)) THEN ((t0.c0)<>(t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (- (t0.c0)) WHEN (((t0.c0, t0.c0))=((t0.c0, t0.c0))) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) IS FALSE) END)AND(LIKELY(((t0.c0)*(NULL)))))) ORDER BY t0.c0 ASC, (((+ (t0.c0)))<(t0.c0))  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((UPPER(t0.c0))AND(((t0.c0) NOTNULL))))OR(CASE WHEN 0.04556938344711847 THEN t0.c0 END))) ORDER BY t0.c0 ASC, (((+ (t0.c0)))<(t0.c0))  NULLS FIRST LIMIT 0X3;
SELECT MAX(t0.c0) FROM t0 WHERE ((((((((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))OR(0.19467086515866638)))AND('1185265220')))OR('GR')))AND(t0.c0 COLLATE RTRIM)));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))OR(0.19467086515866638)))AND('1185265220')))OR('GR')))AND(t0.c0 COLLATE RTRIM))) ORDER BY 0X4cf13226 DESC, UPPER(DISTINCT (NOT (t0.c0)))  NULLS FIRST;
SELECT * FROM t0 WHERE (NULLIF(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ORDER BY ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))==(((- (t0.c0))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (NULLIF(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ORDER BY CASE (t0.c0 IN ())  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (t0.c0 IN ()) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (8.85798053E8)) END DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (NULLIF(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ORDER BY ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))==(((- (t0.c0))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (NULLIF(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ORDER BY CASE (t0.c0 IN ())  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (t0.c0 IN ()) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (8.85798053E8)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())  NULLS LAST, CAST(((t0.c0) ISNULL) AS NUMERIC) ASC;
SELECT ALL MIN(t0.c0) FROM t0 INDEXED BY i29 WHERE (CAST(((t0.c0) ISNULL) AS TEXT)) ORDER BY (NOT ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 INDEXED BY i29 WHERE (CAST(((t0.c0) ISNULL) AS TEXT)) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS BLOB)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0 COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE)AND((t0.c0 IN ())))) ORDER BY (NOT (((((t0.c0)AND(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c0 COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE)AND((t0.c0 IN ())))) ORDER BY (NOT (((((t0.c0)AND(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0)))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0)))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))) BETWEEN (LIKELY(DISTINCT t0.c0)) AND (((t0.c0)<(t0.c0)))), (((t0.c0)+(t0.c0)) IN ())  NULLS FIRST LIMIT 0x1;
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0)))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0)))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))) BETWEEN (LIKELY(DISTINCT t0.c0)) AND (((t0.c0)<(t0.c0)))), (((t0.c0)+(t0.c0)) IN ())  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (CAST((((t0.c0, NULL, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS BLOB));
SELECT DISTINCT * FROM t0 WHERE (((CAST((((t0.c0, NULL, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS BLOB))AND(((t0.c0 COLLATE RTRIM)/(((t0.c0)GLOB(t0.c0))))))) ORDER BY NULL DESC, CAST(0.025080179645466494 AS REAL) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (json(LIKELIHOOD(t0.c0, t0.c0))) ORDER BY NULL DESC, CAST(0.025080179645466494 AS REAL) ASC;
SELECT ALL * FROM t0 WHERE (CAST((((t0.c0, NULL, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS BLOB));
SELECT DISTINCT * FROM t0 WHERE (((CAST((((t0.c0, NULL, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS BLOB))AND(((t0.c0 COLLATE RTRIM)/(((t0.c0)GLOB(t0.c0))))))) ORDER BY NULL DESC, CAST(0.025080179645466494 AS REAL) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (json(LIKELIHOOD(t0.c0, t0.c0))) ORDER BY NULL DESC, CAST(0.025080179645466494 AS REAL) ASC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE) NOTNULL));
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE) NOTNULL)) LIMIT 0x2;
SELECT ALL * FROM t0 WHERE (((((t0.c0)<(t0.c0)))LIKE(((NULL)>>(t0.c0)))));
SELECT * FROM t0 WHERE (((((t0.c0)<(t0.c0)))LIKE(((NULL)>>(t0.c0))))) ORDER BY ((((t0.c0)-(t0.c0)))<<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), CAST(((t0.c0) IS FALSE) AS NUMERIC) DESC INTERSECT SELECT ALL * FROM t0 WHERE (CASE WHEN NULL THEN ((t0.c0)=(t0.c0)) END) ORDER BY ((((t0.c0)-(t0.c0)))<<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), CAST(((t0.c0) IS FALSE) AS NUMERIC) DESC;
SELECT ALL * FROM t0 WHERE (((((t0.c0)<(t0.c0)))LIKE(((NULL)>>(t0.c0)))));
SELECT * FROM t0 WHERE (((((t0.c0)<(t0.c0)))LIKE(((NULL)>>(t0.c0))))) ORDER BY ((((t0.c0)-(t0.c0)))<<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), CAST(((t0.c0) IS FALSE) AS NUMERIC) DESC INTERSECT SELECT ALL * FROM t0 WHERE (CASE WHEN NULL THEN ((t0.c0)=(t0.c0)) END) ORDER BY ((((t0.c0)-(t0.c0)))<<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), CAST(((t0.c0) IS FALSE) AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN (t0.c0, t0.c0)) AS NUMERIC)) ORDER BY ((t0.c0 COLLATE NOCASE) ISNULL), ((SQLITE_COMPILEOPTION_GET(t0.c0))/(t0.c0)) DESC  NULLS LAST, (NOT (((t0.c0) IS FALSE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS NUMERIC)) ORDER BY t0.c0 ASC  NULLS LAST, CAST((t0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((-1.068271654E9, t0.c0, t0.c0, t0.c0)) BETWEEN ((x'', t0.c0, t0.c0, t0.c0)) AND (('', t0.c0, t0.c0, t0.c0))) AS REAL)) ORDER BY t0.c0 ASC  NULLS LAST, CAST((t0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE '-298618260'  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)+(t0.c0)) WHEN ((t0.c0) IS FALSE) THEN CASE t0.c0  WHEN t0.c0 THEN x'0019' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('')) THEN (((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) WHEN ((('x+	%', t0.c0, t0.c0))<((x'aa0b', t0.c0, t0.c0))) THEN TRIM(t0.c0, t0.c0) WHEN CAST(346329657 AS TEXT) THEN TRIM(DISTINCT t0.c0) WHEN 0.9597734079121556 THEN x'd467' END) ORDER BY ((('A' IN (NULL))) IS TRUE) ASC;
SELECT DISTINCT * FROM t0 WHERE (((CASE '-298618260'  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)+(t0.c0)) WHEN ((t0.c0) IS FALSE) THEN CASE t0.c0  WHEN t0.c0 THEN x'0019' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('')) THEN (((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0))) WHEN ((('x+	%', t0.c0, t0.c0))<((x'aa0b', t0.c0, t0.c0))) THEN TRIM(t0.c0, t0.c0) WHEN CAST(0X14a49239 AS TEXT) THEN TRIM(DISTINCT t0.c0) WHEN 0.9597734079121556 THEN x'd467' END)AND((((((((((-1937557257, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))AND((t0.c0 IN (t0.c0)))))OR(t0.c0)))OR(t0.c0))))) ORDER BY ((('A' IN (NULL))) IS TRUE) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) ISNULL)) IS TRUE)) ORDER BY ((('A' IN (NULL))) IS TRUE) ASC;
SELECT ALL * FROM t0 WHERE (CASE '-298618260'  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)+(t0.c0)) WHEN ((t0.c0) IS FALSE) THEN CASE t0.c0  WHEN t0.c0 THEN x'0019' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('')) THEN (((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) WHEN ((('x+	%', t0.c0, t0.c0))<((x'aa0b', t0.c0, t0.c0))) THEN TRIM(t0.c0, t0.c0) WHEN CAST(346329657 AS TEXT) THEN TRIM(DISTINCT t0.c0) WHEN 0.9597734079121556 THEN x'd467' END) ORDER BY ((('A' IN (NULL))) IS TRUE) ASC;
SELECT DISTINCT * FROM t0 WHERE (((CASE '-298618260'  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)+(t0.c0)) WHEN ((t0.c0) IS FALSE) THEN CASE t0.c0  WHEN t0.c0 THEN x'0019' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('')) THEN (((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0))) WHEN ((('x+	%', t0.c0, t0.c0))<((x'aa0b', t0.c0, t0.c0))) THEN TRIM(t0.c0, t0.c0) WHEN CAST(0X14a49239 AS TEXT) THEN TRIM(DISTINCT t0.c0) WHEN 0.9597734079121556 THEN x'd467' END)AND((((((((((-1937557257, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))AND((t0.c0 IN (t0.c0)))))OR(t0.c0)))OR(t0.c0))))) ORDER BY ((('A' IN (NULL))) IS TRUE) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) ISNULL)) IS TRUE)) ORDER BY ((('A' IN (NULL))) IS TRUE) ASC;
SELECT ALL * FROM t0 WHERE ('1430672166') ORDER BY HEX(t0.c0) COLLATE RTRIM, SQLITE_COMPILEOPTION_USED(((t0.c0) ISNULL))  NULLS FIRST;
SELECT * FROM t0 WHERE ('1430672166') ORDER BY (((t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))>((((t0.c0)<(t0.c0)), t0.c0 COLLATE BINARY)))  NULLS FIRST, CASE WHEN NULLIF(t0.c0, t0.c0) THEN ((t0.c0) BETWEEN (x'45') AND (t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)<(t0.c0)) ELSE NULL END ASC  NULLS LAST, '-1599607330' LIMIT 0X0 INTERSECT SELECT ALL * FROM t0 WHERE ((((((((((t0.c0))==((t0.c0))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((NULL) BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(0.8801377223918498 AS INTEGER)))) ORDER BY (((t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))>((((t0.c0)<(t0.c0)), t0.c0 COLLATE BINARY)))  NULLS FIRST, CASE WHEN NULLIF(t0.c0, t0.c0) THEN ((t0.c0) BETWEEN (x'45') AND (t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)<(t0.c0)) ELSE NULL END ASC  NULLS LAST, '-1599607330' LIMIT 0;
SELECT ALL * FROM t0 WHERE ('1430672166') ORDER BY HEX(t0.c0) COLLATE RTRIM, SQLITE_COMPILEOPTION_USED(((t0.c0) ISNULL))  NULLS FIRST;
SELECT * FROM t0 WHERE ('1430672166') ORDER BY (((t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))>((((t0.c0)<(t0.c0)), t0.c0 COLLATE BINARY)))  NULLS FIRST, CASE WHEN NULLIF(t0.c0, t0.c0) THEN ((t0.c0) BETWEEN (x'45') AND (t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)<(t0.c0)) ELSE NULL END ASC  NULLS LAST, '-1599607330' LIMIT 0X0 INTERSECT SELECT ALL * FROM t0 WHERE ((((((((((t0.c0))==((t0.c0))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((NULL) BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(0.8801377223918498 AS INTEGER)))) ORDER BY (((t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))>((((t0.c0)<(t0.c0)), t0.c0 COLLATE BINARY)))  NULLS FIRST, CASE WHEN NULLIF(t0.c0, t0.c0) THEN ((t0.c0) BETWEEN (x'45') AND (t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)<(t0.c0)) ELSE NULL END ASC  NULLS LAST, '-1599607330' LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN (- (t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0) NOTNULL) THEN ((t0.c0) BETWEEN (NULL) AND (t0.c0)) WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE BINARY WHEN ((t0.c0)|(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END END) ORDER BY (('421601257' COLLATE RTRIM)OR(((t0.c0)<=(t0.c0)))) ASC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((CASE WHEN (- (t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0) NOTNULL) THEN ((t0.c0) BETWEEN (NULL) AND (t0.c0)) WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE BINARY WHEN ((t0.c0)|(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END END)AND((((NOT (t0.c0))) BETWEEN (((NULL)GLOB(x'98'))) AND (((t0.c0)%(t0.c0))))))) ORDER BY (('421601257' COLLATE RTRIM)OR(((t0.c0)<=(t0.c0)))) ASC INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (CAST((~ (t0.c0)) AS INTEGER)) ORDER BY (('421601257' COLLATE RTRIM)OR(((t0.c0)<=(t0.c0)))) ASC;
SELECT * FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN 0Xffffffffc0bd6deb THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE BINARY THEN CAST(0.33191244457192004 AS REAL) ELSE CAST(t0.c0 AS NUMERIC) END) ORDER BY (~ (t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN 0xffffffffc0bd6deb THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE BINARY THEN CAST(0.33191244457192004 AS REAL) ELSE CAST(t0.c0 AS NUMERIC) END) ORDER BY (~ (t0.c0)) COLLATE RTRIM  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0)/(0x2ebf3f))))) ORDER BY (~ (t0.c0)) COLLATE RTRIM  NULLS LAST LIMIT 0x0;
SELECT * FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN 0Xffffffffc0bd6deb THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE BINARY THEN CAST(0.33191244457192004 AS REAL) ELSE CAST(t0.c0 AS NUMERIC) END) ORDER BY (~ (t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN 0xffffffffc0bd6deb THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE BINARY THEN CAST(0.33191244457192004 AS REAL) ELSE CAST(t0.c0 AS NUMERIC) END) ORDER BY (~ (t0.c0)) COLLATE RTRIM  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0)/(0x2ebf3f))))) ORDER BY (~ (t0.c0)) COLLATE RTRIM  NULLS LAST LIMIT 0x0;
SELECT COUNT(*) FROM t0 WHERE ((NOT (x'c6'))) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE, (~ (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((NOT (x'c6'))) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE, (~ (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT 1882081475)) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)>(t0.c0)), ((((((1.882081475E9)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) AND ((t0.c0, ((t0.c0)AND(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((TYPEOF(DISTINCT 1882081475))AND(0.7032462658538016))) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)>(t0.c0)), ((((((1.882081475E9)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) AND ((t0.c0, ((t0.c0)AND(t0.c0))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (COALESCE((t0.c0 IN (t0.c0, t0.c0)), (((t0.c0))=(('|NVâ¦cvp'))))) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)>(t0.c0)), ((((((1.882081475E9)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) AND ((t0.c0, ((t0.c0)AND(t0.c0))))) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT 1882081475)) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)>(t0.c0)), ((((((1.882081475E9)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) AND ((t0.c0, ((t0.c0)AND(t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((TYPEOF(DISTINCT 1882081475))AND(0.7032462658538016))) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)>(t0.c0)), ((((((1.882081475E9)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) AND ((t0.c0, ((t0.c0)AND(t0.c0))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (COALESCE((t0.c0 IN (t0.c0, t0.c0)), (((t0.c0))=(('|NVâ¦cvp'))))) ORDER BY (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)>(t0.c0)), ((((((1.882081475E9)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) AND ((t0.c0, ((t0.c0)AND(t0.c0))))) LIMIT 0x1;
SELECT MIN(t0.c0) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (t0.c0) AND (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY ((x'c1') NOT BETWEEN (((t0.c0) NOT NULL)) AND (CASE x'0b'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, CASE WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0)>(t0.c0)) WHEN t0.c0 THEN ((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) WHEN 0xe60f402 THEN json_patch(t0.c0, 0.3359693645157189) WHEN t0.c0 COLLATE NOCASE THEN CAST(t0.c0 AS NUMERIC) ELSE ((t0.c0)IS NOT(t0.c0)) END  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (t0.c0) AND (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY ((x'c1') NOT BETWEEN (((t0.c0) NOT NULL)) AND (CASE x'0b'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, CASE WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0)>(t0.c0)) WHEN t0.c0 THEN ((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) WHEN 0xe60f402 THEN json_patch(t0.c0, 0.3359693645157189) WHEN t0.c0 COLLATE NOCASE THEN CAST(t0.c0 AS NUMERIC) ELSE ((t0.c0)IS NOT(t0.c0)) END  NULLS LAST LIMIT 1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0)));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0))) ORDER BY ((LENGTH(x'81')) NOT BETWEEN (((t0.c0)*(t0.c0))) AND (((t0.c0) NOT NULL))) LIMIT 1 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0))) IS TRUE)) ORDER BY ((LENGTH(x'81')) NOT BETWEEN (((t0.c0)*(t0.c0))) AND (((t0.c0) NOT NULL))) LIMIT 0X1;
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND((~ (t0.c0))))) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c0)>>(t0.c0)), x'', (((t0.c0))<((t0.c0))), '1405393743')) AND ((NULLIF(DISTINCT t0.c0, t0.c0), ((t0.c0)>(NULL)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (((t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (((- ('N8b')) IN ())) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c0)>>(t0.c0)), x'', (((t0.c0))<((t0.c0))), '1405393743')) AND ((NULLIF(DISTINCT t0.c0, t0.c0), ((t0.c0)>(NULL)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (((t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND((~ (t0.c0))))) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c0)>>(t0.c0)), x'', (((t0.c0))<((t0.c0))), '1405393743')) AND ((NULLIF(DISTINCT t0.c0, t0.c0), ((t0.c0)>(NULL)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (((t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (((- ('N8b')) IN ())) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c0)>>(t0.c0)), x'', (((t0.c0))<((t0.c0))), '1405393743')) AND ((NULLIF(DISTINCT t0.c0, t0.c0), ((t0.c0)>(NULL)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (((t0.c0, NULL)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN 0.8501958295616701 ELSE t0.c0 END)||('E'))) ORDER BY ((((((0.7682434511291931) NOT NULL))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c0 COLLATE NOCASE)) ASC, (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN (t0.c0))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN 0.8501958295616701 ELSE t0.c0 END)||('E')))AND(CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL)))) ORDER BY ((((((0.7682434511291931) NOT NULL))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c0 COLLATE NOCASE)) ASC, (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN (t0.c0))  NULLS LAST LIMIT 2;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN 0.8501958295616701 ELSE t0.c0 END)||('E'))) ORDER BY ((((((0.7682434511291931) NOT NULL))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c0 COLLATE NOCASE)) ASC, (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN (t0.c0))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN 0.8501958295616701 ELSE t0.c0 END)||('E')))AND(CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL)))) ORDER BY ((((((0.7682434511291931) NOT NULL))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c0 COLLATE NOCASE)) ASC, (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN (t0.c0))  NULLS LAST LIMIT 2;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (((NULL, CAST(t0.c0 AS NUMERIC)))=((CAST(t0.c0 AS INTEGER), CAST(t0.c0 AS NUMERIC))))  NULLS LAST, CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS INTEGER), (~ ((NOT (0xfffffffff018695c))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (((NULL, CAST(t0.c0 AS NUMERIC)))=((CAST(t0.c0 AS INTEGER), CAST(t0.c0 AS NUMERIC))))  NULLS LAST, CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS INTEGER), (~ ((NOT (-266835620)))) LIMIT 0 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(0.3839939312738695)))AND(0.5717330072156652)))OR(t0.c0)))>>(NULL))) ORDER BY (((NULL, CAST(t0.c0 AS NUMERIC)))=((CAST(t0.c0 AS INTEGER), CAST(t0.c0 AS NUMERIC))))  NULLS LAST, CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS INTEGER), (~ ((NOT (-266835620)))) LIMIT 0X0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CASE ((t0.c0) IS TRUE)  WHEN '-1313987184' COLLATE NOCASE THEN ((t0.c0) BETWEEN (t0.c0) AND ('')) WHEN (t0.c0 IN ()) THEN (~ (t0.c0)) END) ORDER BY (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE, ((t0.c0) NOT NULL), ((t0.c0)+('-944381496')), (t0.c0 IN (t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))), ((t0.c0)AND(t0.c0)), (t0.c0 IN (t0.c0, t0.c0)), (+ ('-2136077666'))))), CASE t0.c0  WHEN NULL THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE x'3ae1' END WHEN ((t0.c0) BETWEEN (t0.c0) AND (-2.9861826E8)) THEN t0.c0 WHEN CAST(t0.c0 AS BLOB) THEN t0.c0 COLLATE RTRIM END DESC;
SELECT MAX(t0.c0) FROM t0 WHERE (CASE ((t0.c0) IS TRUE)  WHEN '-1313987184' COLLATE NOCASE THEN ((t0.c0) BETWEEN (t0.c0) AND ('')) WHEN (t0.c0 IN ()) THEN (~ (t0.c0)) END) ORDER BY '586505692'  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) ISNULL)) BETWEEN ((- (t0.c0))) AND (((t0.c0)!=(t0.c0)))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) ISNULL)) BETWEEN ((- (t0.c0))) AND (((t0.c0)<>(t0.c0)))))AND(((t0.c0)OR(t0.c0))))) INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CAST(json_remove(t0.c0, t0.c0) AS INTEGER));
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0) ISNULL))) AND ((t0.c0)))) ORDER BY CHANGES()  NULLS FIRST, (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0))>=((t0.c0))), ((t0.c0)<>(t0.c0)), ((((((((((((-1905168259)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), t0.c0 COLLATE BINARY)) AND (((('-2041713962') NOT NULL), ((t0.c0)-(t0.c0)), t0.c0, (((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0)))))) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((((t0.c0) ISNULL))) AND ((t0.c0))))AND((NOT (t0.c0))))) ORDER BY CHANGES()  NULLS FIRST, (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0))>=((t0.c0))), ((t0.c0)<>(t0.c0)), ((((((((((((0Xffffffff8e71707d)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), t0.c0 COLLATE BINARY)) AND (((('-2041713962') NOT NULL), ((t0.c0)-(t0.c0)), t0.c0, (((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0)))))) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE ((- (CASE WHEN NULL THEN 0.34175003258764935 END))) ORDER BY CHANGES()  NULLS FIRST, (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0))>=((t0.c0))), ((t0.c0)<>(t0.c0)), ((((((((((((-1905168259)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), t0.c0 COLLATE BINARY)) AND (((('-2041713962') NOT NULL), ((t0.c0)-(t0.c0)), t0.c0, (((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0)))))) ASC;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0) ISNULL))) AND ((t0.c0)))) ORDER BY CHANGES()  NULLS FIRST, (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0))>=((t0.c0))), ((t0.c0)<>(t0.c0)), ((((((((((((-1905168259)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), t0.c0 COLLATE BINARY)) AND (((('-2041713962') NOT NULL), ((t0.c0)-(t0.c0)), t0.c0, (((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0)))))) ASC;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((((t0.c0) ISNULL))) AND ((t0.c0))))AND((NOT (t0.c0))))) ORDER BY CHANGES()  NULLS FIRST, (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0))>=((t0.c0))), ((t0.c0)<>(t0.c0)), ((((((((((((0Xffffffff8e71707d)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), t0.c0 COLLATE BINARY)) AND (((('-2041713962') NOT NULL), ((t0.c0)-(t0.c0)), t0.c0, (((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0)))))) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE ((- (CASE WHEN NULL THEN 0.34175003258764935 END))) ORDER BY CHANGES()  NULLS FIRST, (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0))>=((t0.c0))), ((t0.c0)<>(t0.c0)), ((((((((((((-1905168259)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), t0.c0 COLLATE BINARY)) AND (((('-2041713962') NOT NULL), ((t0.c0)-(t0.c0)), t0.c0, (((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0)))))) ASC;
SELECT MIN(t0.c0) FROM t0 WHERE (CASE WHEN ((t0.c0)*(t0.c0)) THEN (t0.c0 IN (t0.c0)) END) ORDER BY (((t0.c0)/('0.9479017287708916')) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN ((t0.c0)*(t0.c0)) THEN (t0.c0 IN (t0.c0)) END) ORDER BY (((t0.c0)/('0.9479017287708916')) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) LIMIT 0X2;
SELECT * FROM t0 WHERE (((((TRIM(t0.c0))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0)<<(t0.c0))))) ORDER BY x'', ((',á¨ P' COLLATE BINARY) IS TRUE) DESC, SUBSTR(((t0.c0)>=(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) DESC;
SELECT DISTINCT * FROM t0 WHERE (((((((TRIM(t0.c0))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0)<<(t0.c0)))))AND((((~ (t0.c0))) BETWEEN ((((t0.c0, t0.c0, t0.c0, t0.c0))>((NULL, t0.c0, t0.c0, t0.c0)))) AND (((t0.c0) IS FALSE)))))) ORDER BY ((((t0.c0) NOT NULL)) IS TRUE) DESC, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (t0.c0) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST, (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))<<(t0.c0 COLLATE BINARY)) DESC;
SELECT * FROM t0 WHERE (((((TRIM(t0.c0))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0)<<(t0.c0))))) ORDER BY x'', ((',á¨ P' COLLATE BINARY) IS TRUE) DESC, SUBSTR(((t0.c0)>=(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) DESC;
SELECT DISTINCT * FROM t0 WHERE (((((((TRIM(t0.c0))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0)<<(t0.c0)))))AND((((~ (t0.c0))) BETWEEN ((((t0.c0, t0.c0, t0.c0, t0.c0))>((NULL, t0.c0, t0.c0, t0.c0)))) AND (((t0.c0) IS FALSE)))))) ORDER BY ((((t0.c0) NOT NULL)) IS TRUE) DESC, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (t0.c0) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST, (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))<<(t0.c0 COLLATE BINARY)) DESC;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (NOT (t0.c0)))) AND ((((t0.c0)%(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (NOT (t0.c0)))) AND ((((t0.c0)%(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))AND(NULL))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((0.7580755531655237)OR(((t0.c0)AND('-863185252')))))AND((+ (t0.c0))))) LIMIT 1;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (NOT (t0.c0)))) AND ((((t0.c0)%(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (NOT (t0.c0)))) AND ((((t0.c0)%(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))AND(NULL))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((0.7580755531655237)OR(((t0.c0)AND('-863185252')))))AND((+ (t0.c0))))) LIMIT 1;
SELECT MIN(t0.c0) FROM t0 WHERE ((- ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY ((CAST(t0.c0 AS TEXT))IS NOT((- (t0.c0)))) ASC, ((t0.c0)AND(((t0.c0)<<(t0.c0)))) DESC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((- ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END  WHEN ((t0.c0) NOTNULL) THEN ((t0.c0)||(t0.c0)) WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN (NOT (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN LIKELY(DISTINCT t0.c0) END DESC  NULLS FIRST, ((t0.c0 COLLATE RTRIM)%(((((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST, CAST(LTRIM(t0.c0) AS BLOB)  NULLS FIRST LIMIT 0x2;
SELECT COUNT(*) FROM t0 WHERE (LOWER(DISTINCT CAST(t0.c0 AS NUMERIC)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((LOWER(DISTINCT CAST(t0.c0 AS NUMERIC)))AND(((((t0.c0)<(t0.c0)))!=((0.7912586062638478 IN ())))))) LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) LIMIT 0X1;
SELECT MIN(t0.c0) FROM t0 WHERE ((((~ (t0.c0)))*(t0.c0))) ORDER BY ((x'') BETWEEN ((2058946507 IN ())) AND (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC, (t0.c0 IN ()) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((~ (t0.c0)))*(t0.c0))) ORDER BY ((x'') BETWEEN ((0x7ab907cb IN ())) AND (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC, (t0.c0 IN ()) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY ((x'') BETWEEN ((0X7ab907cb IN ())) AND (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC, (t0.c0 IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)IS(x'796acf20'))) AND (((t0.c0) IS FALSE))));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)IS(x'796acf20'))) AND (((t0.c0) IS FALSE))))AND((((((((t0.c0)OR(t0.c0)))OR(t0.c0)), NULL))<(((((t0.c0, t0.c0))>=((t0.c0, t0.c0))), ((t0.c0) NOT NULL))))))) ORDER BY (((t0.c0)) NOT BETWEEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) AND ((x'03')))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0))<=(((((t0.c0, t0.c0))<=((t0.c0, t0.c0))))))) ORDER BY (((t0.c0)) NOT BETWEEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) AND ((x'03')))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)IS(x'796acf20'))) AND (((t0.c0) IS FALSE))));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)IS(x'796acf20'))) AND (((t0.c0) IS FALSE))))AND((((((((t0.c0)OR(t0.c0)))OR(t0.c0)), NULL))<(((((t0.c0, t0.c0))>=((t0.c0, t0.c0))), ((t0.c0) NOT NULL))))))) ORDER BY (((t0.c0)) NOT BETWEEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) AND ((x'03')))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0))<=(((((t0.c0, t0.c0))<=((t0.c0, t0.c0))))))) ORDER BY (((t0.c0)) NOT BETWEEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) AND ((x'03')))  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (TYPEOF(DISTINCT CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ORDER BY x'';
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((TYPEOF(DISTINCT CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))AND((((NOT (t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (t0.c0))))) ORDER BY x'';
SELECT ALL MAX(t0.c0) FROM t0 WHERE (LIKELIHOOD(DISTINCT (- (t0.c0)), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))<((NOT (t0.c0)))) ASC, (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (x'') AND (t0.c0)), x'')) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(NULL)))))  NULLS LAST, PRINTF(NULL)  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((LIKELIHOOD(DISTINCT (- (t0.c0)), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))))AND(t0.c0))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))<((NOT (t0.c0)))) ASC, (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (x'') AND (t0.c0)), x'')) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(NULL)))))  NULLS LAST, PRINTF(NULL)  NULLS FIRST INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))<((NOT (t0.c0)))) ASC, (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (x'') AND (t0.c0)), x'')) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(NULL)))))  NULLS LAST, PRINTF(NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELIHOOD(DISTINCT CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(DISTINCT CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) INTERSECT SELECT COUNT(*) FROM t0 WHERE (0.03393738647094002);
SELECT ALL * FROM t0 WHERE (COALESCE(json(t0.c0), t0.c0)) ORDER BY SQLITE_VERSION() DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((COALESCE(json(t0.c0), t0.c0))AND(CASE WHEN TYPEOF(t0.c0) THEN t0.c0 ELSE ((t0.c0)>=(t0.c0)) END))) ORDER BY SQLITE_VERSION() DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (COALESCE(json(t0.c0), t0.c0)) ORDER BY SQLITE_VERSION() DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY (t0.c0 IN (t0.c0)) COLLATE BINARY ASC, t0.c0 ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 COLLATE RTRIM AS INTEGER))AND((((t0.c0)<(t0.c0)) IN ((t0.c0 IN (t0.c0)), (('-1786844958')%(t0.c0))))))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE BINARY ASC, t0.c0 ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY (t0.c0 IN (t0.c0)) COLLATE BINARY ASC, t0.c0 ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 COLLATE RTRIM AS INTEGER))AND((((t0.c0)<(t0.c0)) IN ((t0.c0 IN (t0.c0)), (('-1786844958')%(t0.c0))))))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE BINARY ASC, t0.c0 ASC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (t0.c0);
SELECT DISTINCT MIN(t0.c0) FROM t0 NOT INDEXED WHERE (t0.c0) INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (0.3786992248653741);
SELECT ALL MIN(t0.c0) FROM t0 WHERE (('' IN (CAST(0.41987016331923144 AS NUMERIC))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((('' IN (CAST(0.41987016331923144 AS NUMERIC))))AND(((x'529210')<(t0.c0)) COLLATE NOCASE))) ORDER BY 0.15557044448487511 DESC, ((((((((t0.c0)AND(0.373768159415926)))OR(t0.c0)))OR(0.3402110993788171)))<=(CAST(t0.c0 AS NUMERIC))) ASC LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (UNICODE(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) ORDER BY (HEX(DISTINCT t0.c0) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (0.7876528194918455)))) ASC, (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(NULL)))AND(t0.c0)))OR(t0.c0)) IN ((t0.c0 IN (t0.c0)), 0.9992540937880847 COLLATE RTRIM)) DESC  NULLS FIRST, ((((CAST(t0.c0 AS BLOB))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))AND(CAST(t0.c0 AS REAL)))  NULLS FIRST, CAST('1977846067' AS NUMERIC)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (UNICODE(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) ORDER BY (HEX(DISTINCT t0.c0) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (0.7876528194918455)))) ASC, (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(NULL)))AND(t0.c0)))OR(t0.c0)) IN ((t0.c0 IN (t0.c0)), 0.9992540937880847 COLLATE RTRIM)) DESC  NULLS FIRST, ((((CAST(t0.c0 AS BLOB))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))AND(CAST(t0.c0 AS REAL)))  NULLS FIRST, CAST('1977846067' AS NUMERIC)  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE (SUBSTR(t0.c0 COLLATE BINARY, (t0.c0 IN ())));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (SUBSTR(t0.c0 COLLATE BINARY, (t0.c0 IN ()))) ORDER BY ((x'')IS((((1982770.0))!=((t0.c0)))))  NULLS LAST LIMIT 0X3;
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((0.25528457458061227)) AND ((t0.c0)))) ORDER BY CASE ((((t0.c0)OR(NULL)))OR(t0.c0))  WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE BINARY WHEN ((((x'')AND(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)<=(t0.c0)) END  NULLS FIRST, CASE (t0.c0 IN ())  WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) THEN t0.c0 ELSE ((t0.c0)>=(t0.c0)) END DESC, ((((((t0.c0 COLLATE BINARY)AND(CASE 'w{ M#%]'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))), ((((t0.c0)|(t0.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((0.25528457458061227)) AND ((t0.c0)))) ORDER BY x'' ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((0.25528457458061227)) AND ((t0.c0)))) ORDER BY CASE ((((t0.c0)OR(NULL)))OR(t0.c0))  WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE BINARY WHEN ((((x'')AND(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)<=(t0.c0)) END  NULLS FIRST, CASE (t0.c0 IN ())  WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) THEN t0.c0 ELSE ((t0.c0)>=(t0.c0)) END DESC, ((((((t0.c0 COLLATE BINARY)AND(CASE 'w{ M#%]'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))), ((((t0.c0)|(t0.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((0.25528457458061227)) AND ((t0.c0)))) ORDER BY x'' ASC  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((t0.c0)<<(t0.c0))) NOT BETWEEN (t0.c0) AND (UPPER(t0.c0))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)<<(t0.c0))) NOT BETWEEN (t0.c0) AND (UPPER(t0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'4ca10a26' THEN t0.c0 END COLLATE BINARY) ORDER BY LIKELIHOOD(DISTINCT ((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), (~ (t0.c0))) ASC, (((t0.c0 IN ())) BETWEEN (((0Xffffffff8c620931)<=(t0.c0))) AND (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))), ((SUBSTR(t0.c0, t0.c0)) ISNULL) DESC  NULLS FIRST, ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0)OR(t0.c0))))!=((((t0.c0) NOT BETWEEN (x'6b') AND (t0.c0)), t0.c0))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'4ca10a26' THEN t0.c0 END COLLATE BINARY) ORDER BY ((x'') NOT NULL) LIMIT 1 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0 COLLATE BINARY) ORDER BY ((x'') NOT NULL) LIMIT 1;
SELECT ALL * FROM t0 WHERE (((((-1.887719382E9) BETWEEN (t0.c0) AND (t0.c0)))<=(x'0f24'))) ORDER BY ((((t0.c0)OR(t0.c0)))>(t0.c0 COLLATE BINARY)) DESC  NULLS FIRST, ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))<<((+ (t0.c0)))) ASC  NULLS LAST, t0.c0 ASC;
SELECT DISTINCT * FROM t0 WHERE (((((-1.887719382E9) BETWEEN (t0.c0) AND (t0.c0)))<(x'0f24'))) ORDER BY ((((t0.c0)OR(t0.c0)))>(t0.c0 COLLATE BINARY)) DESC  NULLS FIRST, ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))<<((+ (t0.c0)))) ASC  NULLS LAST, t0.c0 ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE NOCASE) ORDER BY ((((t0.c0)OR(t0.c0)))>(t0.c0 COLLATE BINARY)) DESC  NULLS FIRST, ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))<<((+ (t0.c0)))) ASC  NULLS LAST, t0.c0 ASC;
SELECT ALL * FROM t0 WHERE (((((-1.887719382E9) BETWEEN (t0.c0) AND (t0.c0)))<=(x'0f24'))) ORDER BY ((((t0.c0)OR(t0.c0)))>(t0.c0 COLLATE BINARY)) DESC  NULLS FIRST, ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))<<((+ (t0.c0)))) ASC  NULLS LAST, t0.c0 ASC;
SELECT DISTINCT * FROM t0 WHERE (((((-1.887719382E9) BETWEEN (t0.c0) AND (t0.c0)))<(x'0f24'))) ORDER BY ((((t0.c0)OR(t0.c0)))>(t0.c0 COLLATE BINARY)) DESC  NULLS FIRST, ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))<<((+ (t0.c0)))) ASC  NULLS LAST, t0.c0 ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE NOCASE) ORDER BY ((((t0.c0)OR(t0.c0)))>(t0.c0 COLLATE BINARY)) DESC  NULLS FIRST, ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))<<((+ (t0.c0)))) ASC  NULLS LAST, t0.c0 ASC;
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)||(((t0.c0) NOT NULL))));
SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)||(((t0.c0) NOT NULL)))) ORDER BY ((((((((((t0.c0 COLLATE RTRIM)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) NOT NULL))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END)))AND((~ (t0.c0)))))OR((((t0.c0))<=((t0.c0))))) DESC  NULLS LAST, CAST(((t0.c0)LIKE(t0.c0)) AS NUMERIC) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))>=((LIKELIHOOD(t0.c0, t0.c0))))) ORDER BY ((((((((((t0.c0 COLLATE RTRIM)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) NOT NULL))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END)))AND((~ (t0.c0)))))OR((((t0.c0))<=((t0.c0))))) DESC  NULLS LAST, CAST(((t0.c0)LIKE(t0.c0)) AS NUMERIC);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)||(((t0.c0) NOT NULL))));
SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)||(((t0.c0) NOT NULL)))) ORDER BY ((((((((((t0.c0 COLLATE RTRIM)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) NOT NULL))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END)))AND((~ (t0.c0)))))OR((((t0.c0))<=((t0.c0))))) DESC  NULLS LAST, CAST(((t0.c0)LIKE(t0.c0)) AS NUMERIC) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))>=((LIKELIHOOD(t0.c0, t0.c0))))) ORDER BY ((((((((((t0.c0 COLLATE RTRIM)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) NOT NULL))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END)))AND((~ (t0.c0)))))OR((((t0.c0))<=((t0.c0))))) DESC  NULLS LAST, CAST(((t0.c0)LIKE(t0.c0)) AS NUMERIC);
SELECT MIN(t0.c0) FROM t0 WHERE ((((t0.c0, x'a87d')) NOT BETWEEN (('1430672166', (((t0.c0, t0.c0, -2.128350805E9))<>((t0.c0, t0.c0, t0.c0))))) AND ((NULL, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((t0.c0, x'a87d')) NOT BETWEEN (('1430672166', (((t0.c0, t0.c0, -2.128350805E9))<>((t0.c0, t0.c0, t0.c0))))) AND ((NULL, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) ORDER BY ((t0.c0)|(((t0.c0) NOT BETWEEN (t0.c0) AND (x'')))) ASC, ((UNLIKELY(DISTINCT t0.c0)) NOT BETWEEN (((((t0.c0)OR(0.48585091242534284)))OR(t0.c0))) AND (((t0.c0)GLOB(t0.c0))))  NULLS LAST, CASE ((x'536dff')*(t0.c0))  WHEN ((t0.c0)|(t0.c0)) THEN TYPEOF(DISTINCT t0.c0) WHEN ((t0.c0)-(NULL)) THEN ((t0.c0) IS FALSE) WHEN t0.c0 COLLATE NOCASE THEN ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 1.41569879E8 END END  NULLS LAST LIMIT 2;
SELECT COUNT(*) FROM t0 WHERE ((json_type(t0.c0) IN ((t0.c0 IN ()))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((json_type(t0.c0) IN ((t0.c0 IN ())))) INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((('118109865')|(((t0.c0) ISNULL))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((NOT (((t0.c0)AND(t0.c0))))) ORDER BY (((t0.c0) IS TRUE) IN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0xffffffffb41f2980 THEN t0.c0 ELSE t0.c0 END)) DESC, LTRIM(t0.c0 COLLATE NOCASE) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((NOT (((t0.c0)AND(t0.c0))))) ORDER BY (((((((((NOT ('')))AND(t0.c0 COLLATE NOCASE)))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(0)))AND((0.8989959352220974 IN (t0.c0)))), ((json_valid(t0.c0))+('')) LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((NOT ('á«µD''b'))) NOTNULL)) ORDER BY (((((((((NOT ('')))AND(t0.c0 COLLATE NOCASE)))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(0)))AND((0.8989959352220974 IN (t0.c0)))), ((json_valid(t0.c0))+('')) LIMIT 0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (json_object(t0.c0, -2122300077, t0.c0) COLLATE RTRIM) ORDER BY ((t0.c0) IS TRUE);
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((json_object(t0.c0, -2122300077, t0.c0) COLLATE RTRIM)AND((((NOT (t0.c0))) IS FALSE)))) ORDER BY t0.c0  NULLS LAST, x'1478' ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE BINARY);
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE BINARY) ORDER BY CAST((NOT (t0.c0)) AS BLOB) DESC, t0.c0  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)AND(((t0.c0)<=(t0.c0)))))OR((t0.c0 IN (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY CAST((NOT (t0.c0)) AS BLOB) DESC, t0.c0  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE BINARY);
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE BINARY) ORDER BY CAST((NOT (t0.c0)) AS BLOB) DESC, t0.c0  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)AND(((t0.c0)<=(t0.c0)))))OR((t0.c0 IN (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY CAST((NOT (t0.c0)) AS BLOB) DESC, t0.c0  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((TRIM(DISTINCT t0.c0, t0.c0))==((~ (0.05488946608985179)))));
SELECT * FROM t0 WHERE (((((TRIM(DISTINCT t0.c0, t0.c0))==((~ (0.05488946608985179)))))AND((((t0.c0)) BETWEEN ((((t0.c0)&(t0.c0)))) AND ((t0.c0)))))) LIMIT 0X0 INTERSECT SELECT ALL * FROM t0 WHERE ((json_array_length(t0.c0) IN ((~ (t0.c0)), (((600065434))<((t0.c0)))))) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (((TRIM(DISTINCT t0.c0, t0.c0))==((~ (0.05488946608985179)))));
SELECT * FROM t0 WHERE (((((TRIM(DISTINCT t0.c0, t0.c0))==((~ (0.05488946608985179)))))AND((((t0.c0)) BETWEEN ((((t0.c0)&(t0.c0)))) AND ((t0.c0)))))) LIMIT 0X0 INTERSECT SELECT ALL * FROM t0 WHERE ((json_array_length(t0.c0) IN ((~ (t0.c0)), (((600065434))<((t0.c0)))))) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (t0.c0) LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (t0.c0 COLLATE BINARY) LIMIT 1;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (t0.c0) LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (t0.c0 COLLATE BINARY) LIMIT 1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY CAST(t0.c0 AS BLOB) COLLATE NOCASE ASC;
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0)AND(CASE ((t0.c0) BETWEEN (t0.c0) AND ('S
g'))  WHEN ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN t0.c0 WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (t0.c0 IN ()) END))) ORDER BY ((((((((((((t0.c0) NOTNULL))OR(((t0.c0)IS(t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(NULL AS REAL))))AND((('') BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (((((((((((t0.c0)>(t0.c0)))OR(((t0.c0)<>(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))AND(((t0.c0)IS NOT(t0.c0)))))AND(((t0.c0) NOTNULL)))) ORDER BY ((((((((((((t0.c0) NOTNULL))OR(((t0.c0)IS(t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(NULL AS REAL))))AND((('') BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELIHOOD((NOT (t0.c0)), x'3345926ec4'));
SELECT COUNT(*) FROM t0 WHERE (((LIKELIHOOD((NOT (t0.c0)), x'3345926ec4'))AND(((t0.c0) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY 0.9671474255949624, ((((((((CAST(t0.c0 AS REAL))AND((- (t0.c0)))))OR((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0) IS FALSE))))OR(t0.c0 COLLATE NOCASE))  NULLS FIRST, (((- (t0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (x'3ea2'))) AND ((NOT (x'2a')))) LIMIT 0x1;
SELECT ALL * FROM t0 WHERE ((((((((((t0.c0, t0.c0, t0.c0, t0.c0, NULL))<=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))AND(t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) IS TRUE)))) ORDER BY CAST((~ (0.8405786100543757)) AS BLOB) DESC, ((((((UPPER(DISTINCT t0.c0))AND((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0)LIKE(t0.c0)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((((((t0.c0, t0.c0, t0.c0, t0.c0, NULL))<=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))AND(t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) IS TRUE))))AND(CAST(ABS('0.2786745149741875') AS BLOB)))) ORDER BY CAST((~ (0.8405786100543757)) AS BLOB) DESC, ((((((UPPER(DISTINCT t0.c0))AND((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0)LIKE(t0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((((((t0.c0, t0.c0, t0.c0, t0.c0, NULL))<=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))AND(t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) IS TRUE)))) ORDER BY CAST((~ (0.8405786100543757)) AS BLOB) DESC, ((((((UPPER(DISTINCT t0.c0))AND((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0)LIKE(t0.c0)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((((((t0.c0, t0.c0, t0.c0, t0.c0, NULL))<=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))AND(t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) IS TRUE))))AND(CAST(ABS('0.2786745149741875') AS BLOB)))) ORDER BY CAST((~ (0.8405786100543757)) AS BLOB) DESC, ((((((UPPER(DISTINCT t0.c0))AND((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)GLOB(t0.c0)))))OR(((t0.c0)LIKE(t0.c0)))) ASC  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) BETWEEN (((t0.c0)+('-1939732175'))) AND (0.04425297649537496 COLLATE RTRIM))) ORDER BY CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN CAST(t0.c0 AS NUMERIC) THEN (t0.c0 IN ()) WHEN t0.c0 THEN ((t0.c0)/(t0.c0)) ELSE ((t0.c0)>>(t0.c0)) END DESC  NULLS FIRST, 'i~RS#]*'  NULLS LAST, ((t0.c0 IN (t0.c0)) IN ((NOT (t0.c0)))) DESC  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) BETWEEN (((t0.c0)+('-1939732175'))) AND (0.04425297649537496 COLLATE RTRIM))) ORDER BY t0.c0 DESC  NULLS LAST, LOWER(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ASC INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN ((t0.c0) IS TRUE) WHEN (((t0.c0, t0.c0))<=((0.8514069688578622, t0.c0))) THEN t0.c0 COLLATE RTRIM END) ORDER BY t0.c0 DESC  NULLS LAST, LOWER(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ASC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((- (t0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY t0.c0  NULLS FIRST, (((t0.c0 IN (t0.c0)))<<(CHAR(t0.c0))) ASC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((- (t0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY t0.c0  NULLS FIRST, (((t0.c0 IN (t0.c0)))<<(CHAR(t0.c0))) ASC LIMIT 0 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)OR(HEX(t0.c0))))OR((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, '330570485')))))) ORDER BY t0.c0  NULLS FIRST, (((t0.c0 IN (t0.c0)))<<(CHAR(t0.c0))) ASC LIMIT 0x0;
SELECT ALL * FROM t0 WHERE ((((t0.c0)!=(t0.c0)) IN (-161788222, ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(0.3244640030215684)))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)<(t0.c0)) IN (-161788222, ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(0.3244640030215684))))) LIMIT 0X2;
SELECT ALL * FROM t0 WHERE ((((t0.c0)!=(t0.c0)) IN (-161788222, ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(0.3244640030215684)))));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)<(t0.c0)) IN (-161788222, ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(0.3244640030215684))))) LIMIT 0X2;
SELECT ALL * FROM t0 WHERE (((t0.c0)>(CAST(x'04' AS INTEGER))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)>(CAST(x'04' AS INTEGER))))AND(NULL))) ORDER BY t0.c0 ASC;
SELECT ALL * FROM t0 WHERE (((t0.c0)>(CAST(x'04' AS INTEGER))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)>(CAST(x'04' AS INTEGER))))AND(NULL))) ORDER BY t0.c0 ASC;
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<=((t0.c0))))<<((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))));
SELECT * FROM t0 WHERE ((((((((t0.c0))<=((t0.c0))))<<((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(x''))) LIMIT 0 INTERSECT SELECT * FROM t0 NOT INDEXED WHERE (CASE WHEN COALESCE(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) THEN 0x2b4b71f2 ELSE (((('204747477')AND(t0.c0)))OR(t0.c0)) END) LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<=((t0.c0))))<<((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))));
SELECT * FROM t0 WHERE ((((((((t0.c0))<=((t0.c0))))<<((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(x''))) LIMIT 0 INTERSECT SELECT * FROM t0 NOT INDEXED WHERE (CASE WHEN COALESCE(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) THEN 0x2b4b71f2 ELSE (((('204747477')AND(t0.c0)))OR(t0.c0)) END) LIMIT 0;
SELECT ALL * FROM t0 WHERE ('') ORDER BY (((((((-2050512127 IN (t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'fdv	w|Ok' ELSE t0.c0 END)))AND('Q')))AND((t0.c0 IN ()))) DESC, ABS(NULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((('')AND((~ (((t0.c0) NOTNULL)))))) ORDER BY (((((((0xffffffff85c7ab01 IN (t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'fdv	w|Ok' ELSE t0.c0 END)))AND('Q')))AND((t0.c0 IN ()))) DESC, ABS(NULL)  NULLS LAST LIMIT 3 INTERSECT SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (((((((-2050512127 IN (t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'fdv	w|Ok' ELSE t0.c0 END)))AND('Q')))AND((t0.c0 IN ()))) DESC, ABS(NULL)  NULLS LAST LIMIT 0X3;
SELECT ALL * FROM t0 WHERE ('') ORDER BY (((((((-2050512127 IN (t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'fdv	w|Ok' ELSE t0.c0 END)))AND('Q')))AND((t0.c0 IN ()))) DESC, ABS(NULL)  NULLS LAST;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE BINARY IN (CASE t0.c0  WHEN x'4de4d5e4' THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 END, ((t0.c0)|(t0.c0))))) ORDER BY MIN(t0.c0, x'', t0.c0) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE BINARY IN (CASE t0.c0  WHEN x'4de4d5e4' THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 END, ((t0.c0)|(t0.c0))))) ORDER BY MIN(t0.c0, x'', t0.c0) COLLATE BINARY DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE BINARY IN (CASE t0.c0  WHEN x'4de4d5e4' THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 END, ((t0.c0)|(t0.c0))))) ORDER BY MIN(t0.c0, x'', t0.c0) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE BINARY IN (CASE t0.c0  WHEN x'4de4d5e4' THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 END, ((t0.c0)|(t0.c0))))) ORDER BY MIN(t0.c0, x'', t0.c0) COLLATE BINARY DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (((SQLITE_SOURCE_ID())>=(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE (((((SQLITE_SOURCE_ID())>=(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY))) ORDER BY ((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN 0.5739410563605242 THEN NULL ELSE '' END) AND ((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((SQLITE_SOURCE_ID())>=(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE (((((SQLITE_SOURCE_ID())>=(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY))) ORDER BY ((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN 0.5739410563605242 THEN NULL ELSE '' END) AND ((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (x'') ORDER BY TOTAL_CHANGES(), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY ASC, (((t0.c0) NOTNULL) IN ((((x'67', t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND (('1845607088', t0.c0, t0.c0, t0.c0, t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (x'') ORDER BY NULL ASC, CAST((t0.c0 IN ()) AS REAL) INTERSECT SELECT DISTINCT * FROM t0 WHERE (0.34017738343296267) ORDER BY NULL ASC, CAST((t0.c0 IN ()) AS REAL);
SELECT * FROM t0 WHERE (x'') ORDER BY TOTAL_CHANGES(), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY ASC, (((t0.c0) NOTNULL) IN ((((x'67', t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND (('1845607088', t0.c0, t0.c0, t0.c0, t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (x'') ORDER BY NULL ASC, CAST((t0.c0 IN ()) AS REAL) INTERSECT SELECT DISTINCT * FROM t0 WHERE (0.34017738343296267) ORDER BY NULL ASC, CAST((t0.c0 IN ()) AS REAL);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)>>(t0.c0)), ((t0.c0)+(t0.c0)), 0.7006780662148362 COLLATE RTRIM))!=((((t0.c0) NOT NULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE BINARY)))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END)|(((t0.c0) NOTNULL)))  NULLS FIRST, (((t0.c0)%(t0.c0)) IN ())  NULLS FIRST, ((((t0.c0) NOT BETWEEN ('1982770') AND (t0.c0))) NOTNULL);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)>>(t0.c0)), ((t0.c0)+(t0.c0)), 0.7006780662148362 COLLATE RTRIM))<>((((t0.c0) NOT NULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE BINARY)))) ORDER BY (- ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))  NULLS FIRST, SUBSTR(((t0.c0) NOT NULL), (((t0.c0))=((t0.c0))))  NULLS LAST LIMIT 1 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT NULL))IS(t0.c0))) ORDER BY (- ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))  NULLS FIRST, SUBSTR(((t0.c0) NOT NULL), (((t0.c0))=((t0.c0))))  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(IFNULL(t0.c0, 0x233fe632))))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(t0.c0 COLLATE BINARY)))OR(((t0.c0) NOTNULL))))OR(((t0.c0)>(t0.c0))))) ORDER BY ((((t0.c0)>(t0.c0)))=(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT DISTINCT * FROM t0 WHERE (((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(IFNULL(t0.c0, 0x233fe632))))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(t0.c0 COLLATE BINARY)))OR(((t0.c0) NOTNULL))))OR(((t0.c0)>(t0.c0))))) ORDER BY ((((t0.c0)>(t0.c0)))=(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)/(NULL))) ORDER BY ((((t0.c0)>(t0.c0)))==(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(IFNULL(t0.c0, 0x233fe632))))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(t0.c0 COLLATE BINARY)))OR(((t0.c0) NOTNULL))))OR(((t0.c0)>(t0.c0))))) ORDER BY ((((t0.c0)>(t0.c0)))=(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT DISTINCT * FROM t0 WHERE (((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(IFNULL(t0.c0, 0x233fe632))))AND(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(t0.c0 COLLATE BINARY)))OR(((t0.c0) NOTNULL))))OR(((t0.c0)>(t0.c0))))) ORDER BY ((((t0.c0)>(t0.c0)))=(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)/(NULL))) ORDER BY ((((t0.c0)>(t0.c0)))==(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN ((t0.c0)/(t0.c0)) THEN ((t0.c0)=(t0.c0)) ELSE CASE 0x506dc39  WHEN t0.c0 THEN t0.c0 END END);
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((CASE WHEN ((t0.c0)/(t0.c0)) THEN ((t0.c0)=(t0.c0)) ELSE CASE 84335673  WHEN t0.c0 THEN t0.c0 END END)AND(CASE (((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, 0.4902945962751545)))  WHEN t0.c0 THEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0) NOT BETWEEN (x'c1') AND (t0.c0)) THEN x'' ELSE ((t0.c0)+(t0.c0)) END))) LIMIT 0X2 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0)*(t0.c0)))&(UNLIKELY(DISTINCT t0.c0)))) LIMIT 2;
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0)=(t0.c0)) COLLATE BINARY) ORDER BY ((((((NULL)AND((((('')OR(t0.c0)))OR(t0.c0)))))OR(((t0.c0)OR(x'1b5f')))))AND(t0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)==(t0.c0)) COLLATE BINARY)AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM))) ORDER BY ((t0.c0)GLOB(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC, CASE WHEN ((t0.c0)==(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (~ (t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-144268744' END THEN CASE 0.9247095932091612  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END WHEN ((t0.c0)<=(t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0) IS TRUE) THEN ((t0.c0) IS TRUE) ELSE ((t0.c0)>(t0.c0)) END ASC  NULLS FIRST, ((((t0.c0)||(t0.c0)))<(((t0.c0)LIKE(t0.c0))))  NULLS LAST INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0)GLOB(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC, CASE WHEN ((t0.c0)==(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (~ (t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-144268744' END THEN CASE 0.9247095932091612  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END WHEN ((t0.c0)<=(t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0) IS TRUE) THEN ((t0.c0) IS TRUE) ELSE ((t0.c0)>(t0.c0)) END ASC  NULLS FIRST, ((((t0.c0)||(t0.c0)))<(((t0.c0)LIKE(t0.c0))))  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0);
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((t0.c0)AND(((((t0.c0)|(t0.c0))) NOTNULL)))) ORDER BY (((t0.c0 IN ())) IS FALSE) ASC, (((- (t0.c0))) NOTNULL) ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((~ (CAST(t0.c0 AS BLOB)))) ORDER BY CASE ((t0.c0)%(t0.c0))  WHEN ((t0.c0)&(t0.c0)) THEN ((((((((x'90')AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(x'f8e449')) END DESC, ((((t0.c0) NOTNULL)) BETWEEN (t0.c0 COLLATE BINARY) AND ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, 0.3842305737322832)) AND ((t0.c0, t0.c0))))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((~ (CAST(t0.c0 AS BLOB))))AND(TRIM(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY x'9b7d94089570' ASC;
SELECT ALL * FROM t0 WHERE ((~ (CAST(t0.c0 AS BLOB)))) ORDER BY CASE ((t0.c0)%(t0.c0))  WHEN ((t0.c0)&(t0.c0)) THEN ((((((((x'90')AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(x'f8e449')) END DESC, ((((t0.c0) NOTNULL)) BETWEEN (t0.c0 COLLATE BINARY) AND ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, 0.3842305737322832)) AND ((t0.c0, t0.c0))))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((~ (CAST(t0.c0 AS BLOB))))AND(TRIM(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY x'9b7d94089570' ASC;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)OR(t0.c0)), (((t0.c0, t0.c0))<>((t0.c0, t0.c0))), 0.7068531042422237)) AND ((t0.c0, CAST(NULL AS TEXT), ((t0.c0)LIKE(t0.c0))))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)OR(t0.c0)), (((t0.c0, t0.c0))<>((t0.c0, t0.c0))), 0.7068531042422237)) AND ((t0.c0, CAST(NULL AS TEXT), ((t0.c0)LIKE(t0.c0))))))AND(CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS NUMERIC)))) ORDER BY NULL, (((((t0.c0) NOTNULL)))<((((t0.c0)<>(t0.c0)))))  NULLS FIRST, CAST(((t0.c0)IS NOT(t0.c0)) AS TEXT) INTERSECT SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0))<((t0.c0, t0.c0))))-(NULL COLLATE NOCASE))) ORDER BY NULL, (((((t0.c0) NOTNULL)))<((((t0.c0)<>(t0.c0)))))  NULLS FIRST, CAST(((t0.c0)IS NOT(t0.c0)) AS TEXT);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)OR(t0.c0)), (((t0.c0, t0.c0))<>((t0.c0, t0.c0))), 0.7068531042422237)) AND ((t0.c0, CAST(NULL AS TEXT), ((t0.c0)LIKE(t0.c0))))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)OR(t0.c0)), (((t0.c0, t0.c0))<>((t0.c0, t0.c0))), 0.7068531042422237)) AND ((t0.c0, CAST(NULL AS TEXT), ((t0.c0)LIKE(t0.c0))))))AND(CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS NUMERIC)))) ORDER BY NULL, (((((t0.c0) NOTNULL)))<((((t0.c0)<>(t0.c0)))))  NULLS FIRST, CAST(((t0.c0)IS NOT(t0.c0)) AS TEXT) INTERSECT SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0))<((t0.c0, t0.c0))))-(NULL COLLATE NOCASE))) ORDER BY NULL, (((((t0.c0) NOTNULL)))<((((t0.c0)<>(t0.c0)))))  NULLS FIRST, CAST(((t0.c0)IS NOT(t0.c0)) AS TEXT);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((((t0.c0)LIKE(t0.c0))))));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((((t0.c0)LIKE(t0.c0))))))AND(CAST(t0.c0 AS REAL)))) LIMIT 3;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))), NULL))==((((t0.c0)AND(t0.c0)), (~ (t0.c0))))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))), NULL))==((((t0.c0)AND(t0.c0)), (~ (t0.c0))))))AND((((t0.c0, t0.c0, t0.c0, x'ceaf', t0.c0)) BETWEEN ((CAST(t0.c0 AS REAL), HEX(DISTINCT t0.c0), ((t0.c0)>>(t0.c0)), t0.c0, (((((('f.''')OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))) AND ((t0.c0, ((t0.c0)-(t0.c0)), (t0.c0 IN (0.46361078903119424)), (t0.c0 IN (t0.c0)), CAST(t0.c0 AS INTEGER))))))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE  NULLS FIRST, ((t0.c0 COLLATE RTRIM)*(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((~ ((t0.c0 IN (t0.c0, t0.c0))))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE  NULLS FIRST, ((t0.c0 COLLATE RTRIM)*(t0.c0 COLLATE RTRIM)) DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (NULL) ORDER BY ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN ((NULL IN ())) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((''))))) DESC  NULLS FIRST, (((- (t0.c0)))<(((t0.c0)||(t0.c0)))), (NOT (t0.c0)) DESC;
SELECT MIN(t0.c0) FROM t0 WHERE (((NULL)AND(((0.7690139209899413)|(t0.c0))))) ORDER BY ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN ((NULL IN ())) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((''))))) DESC  NULLS FIRST, (((- (t0.c0)))<(((t0.c0)||(t0.c0)))), (NOT (t0.c0)) DESC LIMIT 0x3;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((('*')IS(t0.c0)))LIKE(((t0.c0)|(t0.c0)))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((('*')IS(t0.c0)))LIKE(((t0.c0)|(t0.c0))))) LIMIT 0;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0)IS NOT(((t0.c0)>=(t0.c0)))) DESC  NULLS LAST, ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) NOTNULL)  NULLS LAST, ((t0.c0 COLLATE RTRIM)<=((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))));
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (~ ((~ (t0.c0)))), 0.8891641439247883 LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0))<((t0.c0, t0.c0))) COLLATE BINARY) ORDER BY (~ ((~ (t0.c0)))), 0.8891641439247883 LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0)IS NOT(((t0.c0)>=(t0.c0)))) DESC  NULLS LAST, ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) NOTNULL)  NULLS LAST, ((t0.c0 COLLATE RTRIM)<=((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))));
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (~ ((~ (t0.c0)))), 0.8891641439247883 LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0))<((t0.c0, t0.c0))) COLLATE BINARY) ORDER BY (~ ((~ (t0.c0)))), 0.8891641439247883 LIMIT 0X0;
SELECT MIN(t0.c0) FROM t0 WHERE (((((((((((t0.c0)IS NOT(t0.c0)))AND(((((((((((((NULL)AND(t0.c0)))OR(0.1323303973558264)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE BINARY)))AND(t0.c0 COLLATE BINARY)))OR(((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY ((CAST(t0.c0 AS NUMERIC))&(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))) DESC, '1894963653'  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((((((t0.c0)IS NOT(t0.c0)))AND(((((((((((((NULL)AND(t0.c0)))OR(0.1323303973558264)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE BINARY)))AND(t0.c0 COLLATE BINARY)))OR(((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY 0x6c18b961  NULLS FIRST INTERSECT SELECT MIN(t0.c0) FROM t0 NOT INDEXED WHERE (((t0.c0) NOTNULL) COLLATE BINARY) ORDER BY 1813559649  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(0.8449696474474762 AS REAL));
SELECT DISTINCT * FROM t0 WHERE (CAST(0.8449696474474762 AS REAL)) ORDER BY ((((((t0.c0)AND(0.7762710001098772)))OR(t0.c0)))IS NOT(t0.c0 COLLATE BINARY)), ((((((((((CAST(t0.c0 AS REAL))AND(t0.c0 COLLATE NOCASE)))AND((~ (t0.c0)))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((''))))))AND(JULIANDAY(t0.c0, t0.c0, '-309383336', t0.c0, t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((x'5f', 2062471360, t0.c0))>((0.557334764931193, t0.c0, t0.c0)))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (UNLIKELY(t0.c0)))) ORDER BY ((((((t0.c0)AND(0.7762710001098772)))OR(t0.c0)))IS NOT(t0.c0 COLLATE BINARY)), ((((((((((CAST(t0.c0 AS REAL))AND(t0.c0 COLLATE NOCASE)))AND((~ (t0.c0)))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((''))))))AND(JULIANDAY(t0.c0, t0.c0, '-309383336', t0.c0, t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(0.8449696474474762 AS REAL));
SELECT DISTINCT * FROM t0 WHERE (CAST(0.8449696474474762 AS REAL)) ORDER BY ((((((t0.c0)AND(0.7762710001098772)))OR(t0.c0)))IS NOT(t0.c0 COLLATE BINARY)), ((((((((((CAST(t0.c0 AS REAL))AND(t0.c0 COLLATE NOCASE)))AND((~ (t0.c0)))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((''))))))AND(JULIANDAY(t0.c0, t0.c0, '-309383336', t0.c0, t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((((x'5f', 2062471360, t0.c0))>((0.557334764931193, t0.c0, t0.c0)))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (UNLIKELY(t0.c0)))) ORDER BY ((((((t0.c0)AND(0.7762710001098772)))OR(t0.c0)))IS NOT(t0.c0 COLLATE BINARY)), ((((((((((CAST(t0.c0 AS REAL))AND(t0.c0 COLLATE NOCASE)))AND((~ (t0.c0)))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((''))))))AND(JULIANDAY(t0.c0, t0.c0, '-309383336', t0.c0, t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((t0.c0)>=(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (((t0.c0)>=(t0.c0)))))AND(((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(NULL)))AND(t0.c0)))OR('-2014733563'))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (QUOTE(x'')))))) ORDER BY CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN -876112835 ELSE ((t0.c0)<<(t0.c0)) END DESC, ((((t0.c0) IS FALSE))GLOB(CASE WHEN t0.c0 THEN '' ELSE t0.c0 END)) DESC INTERSECT SELECT COUNT(*) FROM t0 WHERE (x'159212ecef' COLLATE NOCASE) ORDER BY CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN -876112835 ELSE ((t0.c0)<<(t0.c0)) END DESC, ((((t0.c0) IS FALSE))GLOB(CASE WHEN t0.c0 THEN '' ELSE t0.c0 END)) DESC;
SELECT MIN(t0.c0) FROM t0 WHERE (((((694828803) IS FALSE))OR(((t0.c0) NOTNULL)))) ORDER BY x''  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE (((((694828803) IS FALSE))OR(((t0.c0) NOTNULL)))) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY t0.c0, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'eië½¤|+uB#' THEN '' WHEN '-1407178433' THEN t0.c0 ELSE t0.c0 END)AND(t0.c0)), ((t0.c0) NOT NULL) COLLATE RTRIM  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY t0.c0, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'eië½¤|+uB#' THEN '' WHEN '-1407178433' THEN t0.c0 ELSE t0.c0 END)AND(t0.c0)), ((t0.c0) NOT NULL) COLLATE RTRIM  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY t0.c0, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'eië½¤|+uB#' THEN '' WHEN '-1407178433' THEN t0.c0 ELSE t0.c0 END)AND(t0.c0)), ((t0.c0) NOT NULL) COLLATE RTRIM  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY t0.c0, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'eië½¤|+uB#' THEN '' WHEN '-1407178433' THEN t0.c0 ELSE t0.c0 END)AND(t0.c0)), ((t0.c0) NOT NULL) COLLATE RTRIM  NULLS FIRST LIMIT 2;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((+ (((t0.c0)+(t0.c0)))));
SELECT MAX(t0.c0) FROM t0 WHERE ((+ (((t0.c0)+(t0.c0))))) INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (((~ (t0.c0)) IN (t0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 WHERE ((((((((((NULL IN (t0.c0)))AND(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (-9.44381496E8)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE x'' END)))AND(LOWER(DISTINCT t0.c0))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((((((((NULL IN (t0.c0)))AND(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (-9.44381496E8)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE x'' END)))AND(LOWER(DISTINCT t0.c0))))AND((((((t0.c0, x'1883', t0.c0))<((t0.c0, t0.c0, t0.c0)))) BETWEEN (((t0.c0) ISNULL)) AND (CASE WHEN t0.c0 THEN x'aa339c' ELSE t0.c0 END))))) ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) IS FALSE), ((((~ ('-1516590501')), (- (t0.c0))))=(((NOT (t0.c0)), (((t0.c0, NULL, '1007233500')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ASC INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) IS FALSE), ((((~ ('-1516590501')), (- (t0.c0))))=(((NOT (t0.c0)), (((t0.c0, NULL, '1007233500')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ASC;
SELECT * FROM t0 WHERE (CASE WHEN (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, -2128350805, 0.42731479089798596)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)IS(t0.c0)) END);
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, -2128350805, 0.42731479089798596)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)IS(t0.c0)) END) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)GLOB(t0.c0))))) LIMIT 0;
SELECT * FROM t0 WHERE (CASE WHEN (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, -2128350805, 0.42731479089798596)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)IS(t0.c0)) END);
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, -2128350805, 0.42731479089798596)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)IS(t0.c0)) END) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)GLOB(t0.c0))))) LIMIT 0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((((((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, NULL))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))OR(t0.c0)))AND(x'')))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(x'dd')))AND((x'd2' IN ('0.3886583831214989', t0.c0))))) ORDER BY (t0.c0 IN (t0.c0 COLLATE RTRIM)) DESC, (('{t''q') BETWEEN ('') AND (json_type(0.8656158698072429)))  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((((((((((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, NULL))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))OR(t0.c0)))AND(x'')))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(x'dd')))AND((x'd2' IN ('0.3886583831214989', t0.c0)))))AND((((t0.c0 IN (t0.c0, t0.c0))) BETWEEN ((t0.c0 IN (t0.c0))) AND (t0.c0))))) ORDER BY (t0.c0 IN (t0.c0 COLLATE RTRIM)) DESC, (('{t''q') BETWEEN ('') AND (json_type(0.8656158698072429)))  NULLS FIRST;
SELECT * FROM t0 WHERE (((1046482722)AND(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY t0.c0 COLLATE NOCASE  NULLS LAST, (((NOT (t0.c0))) NOT BETWEEN (RTRIM(t0.c0)) AND (t0.c0 COLLATE RTRIM)) DESC;
SELECT DISTINCT * FROM t0 WHERE (((1046482722)AND(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY t0.c0 COLLATE NOCASE  NULLS LAST, (((NOT (t0.c0))) NOT BETWEEN (RTRIM(t0.c0)) AND (t0.c0 COLLATE RTRIM)) DESC;
SELECT * FROM t0 WHERE (((1046482722)AND(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY t0.c0 COLLATE NOCASE  NULLS LAST, (((NOT (t0.c0))) NOT BETWEEN (RTRIM(t0.c0)) AND (t0.c0 COLLATE RTRIM)) DESC;
SELECT DISTINCT * FROM t0 WHERE (((1046482722)AND(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY t0.c0 COLLATE NOCASE  NULLS LAST, (((NOT (t0.c0))) NOT BETWEEN (RTRIM(t0.c0)) AND (t0.c0 COLLATE RTRIM)) DESC;
SELECT * FROM t0 WHERE (x'') ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (CASE 0X13b41af5  WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0) NOT NULL)));
SELECT * FROM t0 WHERE (x'') ORDER BY t0.c0 DESC INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c0 COLLATE RTRIM, LTRIM(x'b9', x'7db9')))<=((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))) ORDER BY t0.c0 DESC;
SELECT * FROM t0 WHERE (x'') ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (CASE 0X13b41af5  WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0) NOT NULL)));
SELECT * FROM t0 WHERE (x'') ORDER BY t0.c0 DESC INTERSECT SELECT ALL * FROM t0 WHERE ((((t0.c0 COLLATE RTRIM, LTRIM(x'b9', x'7db9')))<=((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))) ORDER BY t0.c0 DESC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0)IS NOT(((t0.c0)!=(t0.c0))))) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 END AS REAL) DESC;
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0)IS NOT(((t0.c0)<(t0.c0))))) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 END AS REAL) DESC INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE ((NOT (((t0.c0) ISNULL)))) ORDER BY CAST(CASE WHEN t0.c0 THEN t0.c0 END AS REAL) DESC;
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0)>=(CAST(t0.c0 AS BLOB)))) ORDER BY (+ ('-2118045820')) DESC, (x'81' COLLATE BINARY IN (t0.c0 COLLATE BINARY, (((t0.c0, t0.c0))<=((t0.c0, t0.c0)))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((t0.c0)>=(CAST(t0.c0 AS BLOB)))) ORDER BY CAST(json_array(t0.c0, t0.c0, '', NULL) AS BLOB) ASC  NULLS LAST, CASE (~ (t0.c0))  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN t0.c0 ELSE (((t0.c0))>((t0.c0))) END DESC INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((t0.c0)&(t0.c0)))GLOB(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CAST(json_array(t0.c0, t0.c0, '', NULL) AS BLOB) ASC  NULLS LAST, CASE (~ (t0.c0))  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN t0.c0 ELSE (((t0.c0))>((t0.c0))) END DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (0.6572185063236896) AND (t0.c0))  WHEN CAST(t0.c0 AS BLOB) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END) ORDER BY CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS REAL), (((t0.c0 COLLATE NOCASE, ((((x'')OR(t0.c0)))OR(t0.c0)), CAST(t0.c0 AS NUMERIC), t0.c0))>((TYPEOF(NULL), t0.c0, (t0.c0 IN (t0.c0)), NULL)))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (0.6572185063236896) AND (t0.c0))  WHEN CAST(t0.c0 AS BLOB) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END) ORDER BY CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS REAL), (((t0.c0 COLLATE NOCASE, ((((x'')OR(t0.c0)))OR(t0.c0)), CAST(t0.c0 AS NUMERIC), t0.c0))>((TYPEOF(NULL), t0.c0, (t0.c0 IN (t0.c0)), NULL)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0) NOT NULL) COLLATE NOCASE, INSTR(((NULL)*(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0) NOT NULL) COLLATE NOCASE, INSTR(((NULL)*(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0) NOT NULL) COLLATE NOCASE, INSTR(((NULL)*(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0) NOT NULL) COLLATE NOCASE, INSTR(((NULL)*(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ASC  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(((t0.c0)==(t0.c0)))))OR((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, 0.42374671918228646)))))) ORDER BY ((((t0.c0)<<(x'a0')))/(t0.c0 COLLATE BINARY)) DESC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(((t0.c0)==(t0.c0)))))OR((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, 0.42374671918228646))))))AND((NOT ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) DESC, NULL, t0.c0 DESC  NULLS LAST INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) DESC, NULL, t0.c0 DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))>(HEX(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))>(HEX(t0.c0)))) ORDER BY JULIANDAY(((t0.c0)>(t0.c0)), ((t0.c0) NOTNULL), 0.7916680152004424);
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))>(HEX(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))>(HEX(t0.c0)))) ORDER BY JULIANDAY(((t0.c0)>(t0.c0)), ((t0.c0) NOTNULL), 0.7916680152004424);
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, ((t0.c0)AND(t0.c0)), ((t0.c0) NOT NULL))) AND ((t0.c0 COLLATE BINARY, NULL, ((t0.c0) NOT NULL))))) ORDER BY (x'07922f' IN (t0.c0));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, ((t0.c0)AND(t0.c0)), ((t0.c0) NOT NULL))) AND ((t0.c0 COLLATE BINARY, NULL, ((t0.c0) NOT NULL))))) ORDER BY (x'07922f' IN (t0.c0)) LIMIT 1;
SELECT * FROM t0 WHERE (TOTAL_CHANGES()) ORDER BY (~ (IFNULL(0X184bf614, t0.c0)))  NULLS FIRST, t0.c0 DESC, NULL, (((t0.c0 IN ()))!=(CAST(t0.c0 AS NUMERIC)))  NULLS LAST;
SELECT * FROM t0 WHERE (TOTAL_CHANGES()) ORDER BY ((TYPEOF(DISTINCT t0.c0)) BETWEEN (0.21442084192246325) AND (((t0.c0) NOTNULL))), SUBSTR(((t0.c0) NOTNULL), (t0.c0 IN ('-1070693431', t0.c0)))  NULLS LAST LIMIT 0X0;
SELECT * FROM t0 WHERE (TOTAL_CHANGES()) ORDER BY (~ (IFNULL(0X184bf614, t0.c0)))  NULLS FIRST, t0.c0 DESC, NULL, (((t0.c0 IN ()))!=(CAST(t0.c0 AS NUMERIC)))  NULLS LAST;
SELECT * FROM t0 WHERE (TOTAL_CHANGES()) ORDER BY ((TYPEOF(DISTINCT t0.c0)) BETWEEN (0.21442084192246325) AND (((t0.c0) NOTNULL))), SUBSTR(((t0.c0) NOTNULL), (t0.c0 IN ('-1070693431', t0.c0)))  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<>((t0.c0))))GLOB(LENGTH(t0.c0)))) ORDER BY LTRIM(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ASC  NULLS LAST, ((t0.c0)LIKE(t0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((((t0.c0))!=((t0.c0))))GLOB(LENGTH(t0.c0)))) ORDER BY t0.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<>((t0.c0))))GLOB(LENGTH(t0.c0)))) ORDER BY LTRIM(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ASC  NULLS LAST, ((t0.c0)LIKE(t0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((((t0.c0))!=((t0.c0))))GLOB(LENGTH(t0.c0)))) ORDER BY t0.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST, (t0.c0 IN ()) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) NOTNULL))AND(((t0.c0)*(t0.c0)))))AND(t0.c0 COLLATE BINARY))) ORDER BY t0.c0;
SELECT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) NOTNULL))AND(((t0.c0)*(t0.c0)))))AND(t0.c0 COLLATE BINARY))) ORDER BY t0.c0 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) IS FALSE)) BETWEEN (((t0.c0)IS NOT(t0.c0))) AND (((t0.c0)IS(t0.c0))))) ORDER BY t0.c0;
SELECT * FROM t0 WHERE ((('85993778' COLLATE NOCASE) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE ((('85993778' COLLATE NOCASE) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c0 COLLATE BINARY))) LIMIT 0x1 INTERSECT SELECT ALL * FROM t0 WHERE (IFNULL(((t0.c0)+(t0.c0)), '-970942738')) LIMIT 1;
SELECT * FROM t0 WHERE ((('85993778' COLLATE NOCASE) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE ((('85993778' COLLATE NOCASE) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c0 COLLATE BINARY))) LIMIT 0x1 INTERSECT SELECT ALL * FROM t0 WHERE (IFNULL(((t0.c0)+(t0.c0)), '-970942738')) LIMIT 1;
SELECT ALL MAX(t0.c0) FROM t0 NOT INDEXED WHERE ((((((((t0.c0 IN ()))AND(((t0.c0) ISNULL))))OR((((t0.c0, t0.c0, 1606404429)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR((t0.c0 IN (t0.c0)))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((((((((t0.c0 IN ()))AND(((t0.c0) ISNULL))))OR((((t0.c0, t0.c0, 1606404429)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR((t0.c0 IN (t0.c0)))))AND(CASE WHEN x'6857' COLLATE RTRIM THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) END)));
SELECT * FROM t0 WHERE (((CAST(0.07173309408802764 AS BLOB))<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY t0.c0, ((((((CAST(t0.c0 AS NUMERIC))AND(((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(NULL)))))AND((('67061909') NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)||(t0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((CAST(0.07173309408802764 AS BLOB))<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CAST((((t0.c0, t0.c0, x'')) BETWEEN ((t0.c0, '', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS NUMERIC)))) ORDER BY t0.c0, ((((((CAST(t0.c0 AS NUMERIC))AND(((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(NULL)))))AND((('67061909') NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)||(t0.c0))))  NULLS LAST;
SELECT * FROM t0 WHERE (((CAST(0.07173309408802764 AS BLOB))<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY t0.c0, ((((((CAST(t0.c0 AS NUMERIC))AND(((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(NULL)))))AND((('67061909') NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)||(t0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((CAST(0.07173309408802764 AS BLOB))<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CAST((((t0.c0, t0.c0, x'')) BETWEEN ((t0.c0, '', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS NUMERIC)))) ORDER BY t0.c0, ((((((CAST(t0.c0 AS NUMERIC))AND(((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(NULL)))))AND((('67061909') NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)||(t0.c0))))  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0))) BETWEEN (t0.c0) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY (((t0.c0 IN ())) IS FALSE) ASC  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0))) BETWEEN (t0.c0) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((((t0.c0 COLLATE NOCASE)AND(((t0.c0)AND(t0.c0)))))AND(CAST(t0.c0 AS TEXT))))OR(((NULL) ISNULL))) ASC, (((((((((((((t0.c0 IN (t0.c0)))OR(TYPEOF(t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CHAR(t0.c0))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0)))AND((t0.c0 IN ()))) DESC LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN COALESCE(DISTINCT t0.c0, t0.c0) THEN UPPER(t0.c0) WHEN RTRIM(t0.c0) THEN (~ (t0.c0)) END);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CASE WHEN COALESCE(DISTINCT t0.c0, t0.c0) THEN UPPER(t0.c0) WHEN RTRIM(t0.c0) THEN (~ (t0.c0)) END)AND(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM))) ORDER BY (NOT (((t0.c0)>(t0.c0)))) DESC, (- (t0.c0)) COLLATE RTRIM ASC;
SELECT * FROM t0 WHERE ((('-1998251210')AND('1190771861'))) ORDER BY ((CAST(t0.c0 AS BLOB)) IS TRUE);
SELECT * FROM t0 WHERE ((('-1998251210')AND('1190771861'))) ORDER BY ((CAST(t0.c0 AS BLOB)) IS TRUE) LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (t0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY) ORDER BY ((CAST(t0.c0 AS BLOB)) IS TRUE) LIMIT 0;
SELECT * FROM t0 WHERE ((('-1998251210')AND('1190771861'))) ORDER BY ((CAST(t0.c0 AS BLOB)) IS TRUE);
SELECT * FROM t0 WHERE ((('-1998251210')AND('1190771861'))) ORDER BY ((CAST(t0.c0 AS BLOB)) IS TRUE) LIMIT 0 INTERSECT SELECT * FROM t0 WHERE (t0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY) ORDER BY ((CAST(t0.c0 AS BLOB)) IS TRUE) LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0) BETWEEN (0Xffffffffeff9b36d) AND ((~ (t0.c0))))) ORDER BY ((((x'') NOT NULL)) NOT BETWEEN (227458130) AND (('1e500' IN ()))) DESC, CASE ((t0.c0) IS FALSE)  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST, SQLITE_VERSION();
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((t0.c0) BETWEEN (0Xffffffffeff9b36d) AND ((~ (t0.c0))))) ORDER BY t0.c0  NULLS LAST, CASE WHEN (+ (t0.c0)) THEN ((t0.c0)>(t0.c0)) ELSE (t0.c0 IN (t0.c0)) END DESC, ((CAST(t0.c0 AS BLOB)) IS TRUE) INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (NULL) ORDER BY t0.c0  NULLS LAST, CASE WHEN (+ (t0.c0)) THEN ((t0.c0)>(t0.c0)) ELSE (t0.c0 IN (t0.c0)) END DESC, ((CAST(t0.c0 AS BLOB)) IS TRUE);
SELECT ALL * FROM t0 WHERE ('êwd0t7iYa');
SELECT DISTINCT * FROM t0 WHERE ('êwd0t7iYa') ORDER BY ((((t0.c0) NOT NULL))IS NOT(((((((((t0.c0)OR(t0.c0)))AND(x'')))AND(t0.c0)))AND(t0.c0)))), (+ ((NOT (t0.c0)))), (+ (t0.c0)) LIMIT 4;
SELECT ALL * FROM t0 WHERE ('êwd0t7iYa');
SELECT DISTINCT * FROM t0 WHERE ('êwd0t7iYa') ORDER BY ((((t0.c0) NOT NULL))IS NOT(((((((((t0.c0)OR(t0.c0)))AND(x'')))AND(t0.c0)))AND(t0.c0)))), (+ ((NOT (t0.c0)))), (+ (t0.c0)) LIMIT 4;
SELECT * FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'Mg->sDy' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (0.5429355930210628)));
SELECT * FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'Mg->sDy' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (0.5429355930210628))) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE  NULLS LAST, CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN (NOT (t0.c0)) THEN ((((((((0X1d13c57)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN '-1401793990' THEN t0.c0 COLLATE RTRIM END DESC  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN ()) WHEN (~ (t0.c0)) THEN 0.6021774980258705 END) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE  NULLS LAST, CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN (NOT (t0.c0)) THEN ((((((((30489687)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN '-1401793990' THEN t0.c0 COLLATE RTRIM END DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'Mg->sDy' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (0.5429355930210628)));
SELECT * FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'Mg->sDy' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (0.5429355930210628))) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE  NULLS LAST, CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN (NOT (t0.c0)) THEN ((((((((0X1d13c57)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN '-1401793990' THEN t0.c0 COLLATE RTRIM END DESC  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN ()) WHEN (~ (t0.c0)) THEN 0.6021774980258705 END) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE  NULLS LAST, CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN (NOT (t0.c0)) THEN ((((((((30489687)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN '-1401793990' THEN t0.c0 COLLATE RTRIM END DESC  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((NOT ((~ (t0.c0))))) ORDER BY CAST(((t0.c0)=(t0.c0)) AS NUMERIC), ((STRFTIME(t0.c0, t0.c0, t0.c0))LIKE(((t0.c0)+('0.09162493122335091')))) DESC  NULLS LAST, 0.8408441114417098;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((NOT ((~ (t0.c0)))))AND(CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS BLOB)))) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (t0.c0 COLLATE BINARY)), t0.c0 COLLATE NOCASE DESC, (json_patch(t0.c0, t0.c0) IN ((t0.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS BLOB)) ORDER BY CAST(t0.c0 AS BLOB) COLLATE BINARY  NULLS FIRST, ((NULL) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) NOT NULL)));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS BLOB)) ORDER BY ((((t0.c0)>(t0.c0)))-(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST, 0.10073890053998147 ASC INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((NOT (t0.c0)) IN (((t0.c0)<=(t0.c0)), (~ (t0.c0))))) ORDER BY ((((t0.c0)>(t0.c0)))-(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST, 0.10073890053998147 ASC;
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL));
SELECT ALL * FROM t0 WHERE (((CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL))AND(((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS FALSE)))) INTERSECT SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB));
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL));
SELECT ALL * FROM t0 WHERE (((CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL))AND(((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS FALSE)))) INTERSECT SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((((t0.c0)<(t0.c0)), ((t0.c0) NOTNULL)))<((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)>>(t0.c0)))))) ORDER BY CASE ((t0.c0) ISNULL)  WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0)>=(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.11318115332134582 THEN t0.c0 END THEN CAST(t0.c0 AS REAL) WHEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE RTRIM ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END ASC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((((((t0.c0)<(t0.c0)), ((t0.c0) NOTNULL)))<((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)>>(t0.c0))))))AND((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) IS FALSE)))<>((((((t0.c0)AND(t0.c0)))AND(t0.c0)), ('88925183' IN (t0.c0, t0.c0)))))))) ORDER BY CASE ((t0.c0) ISNULL)  WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0)>=(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.11318115332134582 THEN t0.c0 END THEN CAST(t0.c0 AS REAL) WHEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE RTRIM ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END ASC INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE ('') ORDER BY CASE ((t0.c0) ISNULL)  WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0)>=(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.11318115332134582 THEN t0.c0 END THEN CAST(t0.c0 AS REAL) WHEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE RTRIM ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END ASC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (NULL COLLATE RTRIM) ORDER BY CASE x''  WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c0) IS TRUE) WHEN '' THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c0) NOTNULL) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) ELSE HEX(t0.c0) END ASC  NULLS FIRST, (('u')&(0.6943290348956236)) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (NULL COLLATE RTRIM) ORDER BY t0.c0  NULLS LAST, SQLITE_COMPILEOPTION_GET(CAST(t0.c0 AS BLOB)) INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((NULL)OR(((t0.c0)|('èªY.r'))))) ORDER BY t0.c0  NULLS LAST, SQLITE_COMPILEOPTION_GET(CAST(t0.c0 AS BLOB));
SELECT ALL * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))||(t0.c0 COLLATE BINARY))) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)<=(t0.c0)))||(t0.c0 COLLATE BINARY)))AND(((CAST('d[%Jd' AS BLOB))>(LIKELY(DISTINCT t0.c0)))))) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN (('-365596224') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (- (t0.c0)) END) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT ALL * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))||(t0.c0 COLLATE BINARY))) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)<=(t0.c0)))||(t0.c0 COLLATE BINARY)))AND(((CAST('d[%Jd' AS BLOB))>(LIKELY(DISTINCT t0.c0)))))) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN (('-365596224') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (- (t0.c0)) END) ORDER BY (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0 WHERE (COALESCE(t0.c0 COLLATE RTRIM, t0.c0));
SELECT DISTINCT * FROM t0 WHERE (((COALESCE(t0.c0 COLLATE RTRIM, t0.c0))AND((((t0.c0 IN (t0.c0, t0.c0)))%(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))))) LIMIT 4;
SELECT * FROM t0 WHERE (COALESCE(t0.c0 COLLATE RTRIM, t0.c0));
SELECT DISTINCT * FROM t0 WHERE (((COALESCE(t0.c0 COLLATE RTRIM, t0.c0))AND((((t0.c0 IN (t0.c0, t0.c0)))%(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))))) LIMIT 4;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(((t0.c0)=(t0.c0))))) ORDER BY ((LIKELIHOOD(t0.c0, t0.c0))IS(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST, ((((((t0.c0)>>(t0.c0)))OR(((t0.c0)<<(t0.c0)))))AND(t0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(((t0.c0)=(t0.c0))))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))+(NULL)) ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(((t0.c0)=(t0.c0))))) ORDER BY ((LIKELIHOOD(t0.c0, t0.c0))IS(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST, ((((((t0.c0)>>(t0.c0)))OR(((t0.c0)<<(t0.c0)))))AND(t0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c0)||(t0.c0))))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE BINARY COLLATE RTRIM ASC, ((TOTAL_CHANGES()) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((((((t0.c0)AND(x'37')))AND(t0.c0)))AND(NULL)))) DESC, ((LOWER(DISTINCT t0.c0))%(CAST(t0.c0 AS BLOB)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (((t0.c0)||(t0.c0)))))AND(((((((CASE WHEN t0.c0 THEN t0.c0 ELSE 'Cyë¸' END)OR(t0.c0)))AND((+ (t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS REAL) DESC  NULLS LAST, ((((((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR(t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, CAST((t0.c0 IN ()) AS NUMERIC) ASC  NULLS FIRST INTERSECT SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) NOT NULL) AS TEXT)) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS REAL) DESC  NULLS LAST, ((((((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))OR(t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, CAST((t0.c0 IN ()) AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)AND(x'c0db07'))) ORDER BY t0.c0  NULLS LAST, (~ (CAST(t0.c0 AS NUMERIC))), CASE WHEN (t0.c0 IN (t0.c0, '1283528744')) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN ((t0.c0) IS TRUE) THEN NULL ELSE json_insert(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) END  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((((((CAST(t0.c0 AS BLOB))AND(((t0.c0) IS TRUE))))OR(CHANGES())))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY ((((((CAST(t0.c0 AS BLOB))AND(((t0.c0) IS TRUE))))OR(CHANGES())))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((((((CAST(t0.c0 AS BLOB))AND(((t0.c0) IS TRUE))))OR(CHANGES())))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (NULL) ORDER BY ((((((CAST(t0.c0 AS BLOB))AND(((t0.c0) IS TRUE))))OR(CHANGES())))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN ((t0.c0)>=(t0.c0)) THEN t0.c0 WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN (((t0.c0))<((t0.c0))) END) ORDER BY ((((t0.c0)OR(t0.c0))) NOTNULL), (~ ((t0.c0 IN (t0.c0))));
SELECT * FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN ((t0.c0)>=(t0.c0)) THEN t0.c0 WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN (((t0.c0))<((t0.c0))) END) ORDER BY (((~ (t0.c0)))LIKE((((t0.c0))<((t0.c0)))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN ((t0.c0)>=(t0.c0)) THEN t0.c0 WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN (((t0.c0))<((t0.c0))) END) ORDER BY ((((t0.c0)OR(t0.c0))) NOTNULL), (~ ((t0.c0 IN (t0.c0))));
SELECT * FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN ((t0.c0)>=(t0.c0)) THEN t0.c0 WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN (((t0.c0))<((t0.c0))) END) ORDER BY (((~ (t0.c0)))LIKE((((t0.c0))<((t0.c0)))))  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (((LIKELIHOOD(DISTINCT t0.c0, t0.c0))<<(((t0.c0)IS(t0.c0)))));
SELECT MAX(t0.c0) FROM t0 WHERE (((LIKELIHOOD(DISTINCT t0.c0, t0.c0))<<(((t0.c0)IS(t0.c0))))) LIMIT 0 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((t0.c0)AND(x'e2')))AND(t0.c0)))OR(t0.c0))) IS FALSE)) LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE (((((((t0.c0) IS FALSE))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((t0.c0 COLLATE BINARY)|((t0.c0 IN ())));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((t0.c0) IS FALSE))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY t0.c0 ASC  NULLS FIRST, (~ ((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS FIRST, ((TRIM(t0.c0))<<((t0.c0 IN (t0.c0)))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (((INSTR(t0.c0, '885798053'))>>((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))) ORDER BY t0.c0 ASC  NULLS FIRST, (~ ((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS FIRST, ((TRIM(t0.c0))<<((t0.c0 IN (t0.c0)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (((((t0.c0)|(t0.c0)))IS NOT((t0.c0 IN ())))) ORDER BY CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)|(t0.c0)))IS NOT((t0.c0 IN ())))) ORDER BY NULL ASC  NULLS LAST, ((t0.c0) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((-4.26363608E8) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT * FROM t0 WHERE (((((t0.c0)AND(t0.c0))) BETWEEN ((t0.c0 IN (t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ORDER BY NULL ASC  NULLS LAST, ((t0.c0) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((-4.26363608E8) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t0 WHERE (((((t0.c0)|(t0.c0)))IS NOT((t0.c0 IN ())))) ORDER BY CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)|(t0.c0)))IS NOT((t0.c0 IN ())))) ORDER BY NULL ASC  NULLS LAST, ((t0.c0) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((-4.26363608E8) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT * FROM t0 WHERE (((((t0.c0)AND(t0.c0))) BETWEEN ((t0.c0 IN (t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ORDER BY NULL ASC  NULLS LAST, ((t0.c0) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((-4.26363608E8) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST LIMIT 0X1;
SELECT * FROM t0 WHERE ((- (((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) IS TRUE) WHEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(NULL)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END, ABS(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) DESC;
SELECT ALL * FROM t0 WHERE ((((- (((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))))AND((((t0.c0, 'dL5', t0.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT t0.c0, t0.c0), ((t0.c0)||(t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((''))))) AND ((t0.c0, ((t0.c0) NOTNULL), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))))) ORDER BY (((NOT (t0.c0))) IS FALSE) ASC INTERSECT SELECT * FROM t0 WHERE (((t0.c0) IS TRUE) COLLATE NOCASE) ORDER BY (((NOT (t0.c0))) IS FALSE) ASC;
SELECT * FROM t0 WHERE ((- (((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) IS TRUE) WHEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(NULL)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END, ABS(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) DESC;
SELECT ALL * FROM t0 WHERE ((((- (((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))))AND((((t0.c0, 'dL5', t0.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT t0.c0, t0.c0), ((t0.c0)||(t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((''))))) AND ((t0.c0, ((t0.c0) NOTNULL), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))))) ORDER BY (((NOT (t0.c0))) IS FALSE) ASC INTERSECT SELECT * FROM t0 WHERE (((t0.c0) IS TRUE) COLLATE NOCASE) ORDER BY (((NOT (t0.c0))) IS FALSE) ASC;
SELECT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) ISNULL))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) ISNULL))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((((NOT (t0.c0)))OR(t0.c0 COLLATE RTRIM))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ('-826457037')));
SELECT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) ISNULL))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) ISNULL))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((((NOT (t0.c0)))OR(t0.c0 COLLATE RTRIM))))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ('-826457037')));
SELECT * FROM t0 WHERE ((+ ((t0.c0 IN ())))) ORDER BY CAST(((t0.c0) NOT NULL) AS TEXT) ASC, ((((t0.c0 IN ())))<=(('885798053')));
SELECT DISTINCT * FROM t0 WHERE ((+ ((t0.c0 IN ())))) ORDER BY CAST(((t0.c0) NOT NULL) AS TEXT) ASC, ((((t0.c0 IN ())))<=(('885798053')));
SELECT * FROM t0 WHERE ((+ ((t0.c0 IN ())))) ORDER BY CAST(((t0.c0) NOT NULL) AS TEXT) ASC, ((((t0.c0 IN ())))<=(('885798053')));
SELECT DISTINCT * FROM t0 WHERE ((+ ((t0.c0 IN ())))) ORDER BY CAST(((t0.c0) NOT NULL) AS TEXT) ASC, ((((t0.c0 IN ())))<=(('885798053')));
SELECT * FROM t0 WHERE ((((t0.c0))<>((t0.c0))) COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0))<((t0.c0))) COLLATE NOCASE);
SELECT * FROM t0 WHERE ((((t0.c0))<>((t0.c0))) COLLATE NOCASE);
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0))<((t0.c0))) COLLATE NOCASE);
SELECT MAX(t0.c0) FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE BINARY);
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE BINARY)AND((NOT (t0.c0 COLLATE NOCASE)))));
SELECT MAX(t0.c0) FROM t0 WHERE (CASE 'b6qNS\æ7'  WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)>>(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (~ (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 THEN (t0.c0 IN ()) END) ORDER BY ((((0X4c9b1d3b)AND(((t0.c0) ISNULL))))OR(((t0.c0)>>(t0.c0)))) ASC  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CASE 'b6qNS\æ7'  WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)>>(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (~ (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 THEN (t0.c0 IN ()) END) ORDER BY ((((0x4c9b1d3b)AND(((t0.c0) ISNULL))))OR(((t0.c0)>>(t0.c0)))) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((TYPEOF(t0.c0))>(((t0.c0) IS FALSE)))) ORDER BY ((((0X4c9b1d3b)AND(((t0.c0) ISNULL))))OR(((t0.c0)>>(t0.c0)))) ASC  NULLS LAST LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS INTEGER)) ORDER BY NULL DESC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS INTEGER)) ORDER BY NULL DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (NULL COLLATE BINARY))) ORDER BY ((((((CAST(t0.c0 AS NUMERIC))OR(((t0.c0) BETWEEN (t0.c0) AND (0.0034783030409640814)))))AND(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) ASC, CASE (((t0.c0, '0.7699292356868156', NULL, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, ' ', t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))  WHEN ((t0.c0) NOT NULL) THEN CAST(t0.c0 AS TEXT) WHEN ((NULL)+(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END, ((((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(CASE WHEN 0.9692806103974461 THEN t0.c0 END)))AND((NOT (t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC;
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (NULL COLLATE BINARY))) ORDER BY (((((((~ (t0.c0)))OR(((t0.c0)OR(t0.c0)))))AND(t0.c0 COLLATE NOCASE)))AND(((t0.c0)OR(t0.c0)))) DESC, ((NULL)IS(((0.5847992792766364) NOTNULL))) DESC LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE ((+ ((((t0.c0))<((t0.c0)))))) ORDER BY (((((((~ (t0.c0)))OR(((t0.c0)OR(t0.c0)))))AND(t0.c0 COLLATE NOCASE)))AND(((t0.c0)OR(t0.c0)))) DESC, ((NULL)IS(((0.5847992792766364) NOTNULL))) DESC LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (NULL COLLATE BINARY))) ORDER BY ((((((CAST(t0.c0 AS NUMERIC))OR(((t0.c0) BETWEEN (t0.c0) AND (0.0034783030409640814)))))AND(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) ASC, CASE (((t0.c0, '0.7699292356868156', NULL, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, ' ', t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))  WHEN ((t0.c0) NOT NULL) THEN CAST(t0.c0 AS TEXT) WHEN ((NULL)+(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END, ((((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(CASE WHEN 0.9692806103974461 THEN t0.c0 END)))AND((NOT (t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC;
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (NULL COLLATE BINARY))) ORDER BY (((((((~ (t0.c0)))OR(((t0.c0)OR(t0.c0)))))AND(t0.c0 COLLATE NOCASE)))AND(((t0.c0)OR(t0.c0)))) DESC, ((NULL)IS(((0.5847992792766364) NOTNULL))) DESC LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE ((+ ((((t0.c0))<((t0.c0)))))) ORDER BY (((((((~ (t0.c0)))OR(((t0.c0)OR(t0.c0)))))AND(t0.c0 COLLATE NOCASE)))AND(((t0.c0)OR(t0.c0)))) DESC, ((NULL)IS(((0.5847992792766364) NOTNULL))) DESC LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE ('1344639603');
SELECT COUNT(*) FROM t0 WHERE ((('1344639603')AND((NOT (t0.c0 COLLATE BINARY))))) INTERSECT SELECT COUNT(*) FROM t0 WHERE (0.6614332870757677);
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((-1857096100, t0.c0))>=((t0.c0, t0.c0))) COLLATE BINARY) ORDER BY ((871165688) IS TRUE) ASC  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((-1857096100, t0.c0))=((t0.c0, t0.c0))) COLLATE BINARY) ORDER BY CAST(0.6059849074594242 AS BLOB) DESC, t0.c0, CAST(PRINTF(t0.c0) AS REAL) ASC;
SELECT ALL * FROM t0 WHERE ((((t0.c0)OR(t0.c0)) IN ())) ORDER BY ((((t0.c0)%(t0.c0)))IS NOT(x'de')) ASC  NULLS LAST, (- (CAST(t0.c0 AS INTEGER))) DESC;
SELECT * FROM t0 WHERE ((((t0.c0)OR(t0.c0)) IN ())) ORDER BY ((((t0.c0)%(t0.c0)))IS NOT(x'de')) ASC  NULLS LAST, (- (CAST(t0.c0 AS INTEGER))) DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c0)OR(t0.c0)) IN ())) ORDER BY ((((t0.c0)%(t0.c0)))IS NOT(x'de')) ASC  NULLS LAST, (- (CAST(t0.c0 AS INTEGER))) DESC;
SELECT * FROM t0 WHERE ((((t0.c0)OR(t0.c0)) IN ())) ORDER BY ((((t0.c0)%(t0.c0)))IS NOT(x'de')) ASC  NULLS LAST, (- (CAST(t0.c0 AS INTEGER))) DESC;
SELECT MAX(t0.c0) FROM t0 WHERE (LTRIM((t0.c0 IN ())));
SELECT MAX(t0.c0) FROM t0 WHERE (((LTRIM((t0.c0 IN ())))AND(((((((((t0.c0 COLLATE BINARY)OR(((t0.c0)<=(t0.c0)))))AND((- (t0.c0)))))OR((+ (t0.c0)))))OR(t0.c0))))) ORDER BY (+ (((t0.c0) IS FALSE))) ASC, ((t0.c0) NOT BETWEEN (((t0.c0) IS FALSE)) AND (t0.c0)) LIMIT 0x0 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN ((((t0.c0))<>((t0.c0)))) AND (((t0.c0)%(t0.c0))))) ORDER BY (+ (((t0.c0) IS FALSE))) ASC, ((t0.c0) NOT BETWEEN (((t0.c0) IS FALSE)) AND (t0.c0)) LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (CASE WHEN (((t0.c0, t0.c0))<((t0.c0, t0.c0))) THEN (~ (t0.c0)) END) ORDER BY (NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), ((((t0.c0)<>(t0.c0))) NOT NULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CASE WHEN (((t0.c0, t0.c0))<((t0.c0, t0.c0))) THEN (~ (t0.c0)) END)AND(CASE WHEN ((-2.6683562E8)!=(t0.c0)) THEN (NOT (0Xfffffffff565f932)) WHEN LOWER(DISTINCT t0.c0) THEN ((t0.c0)IS(t0.c0)) WHEN (t0.c0 IN (t0.c0, '
ç')) THEN t0.c0 COLLATE BINARY ELSE t0.c0 COLLATE BINARY END))) ORDER BY CASE (t0.c0 IN (t0.c0))  WHEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('', 'a*ï¢·y', t0.c0))) THEN (t0.c0 IN (t0.c0)) END, ((CAST(t0.c0 AS REAL))=(TRIM(DISTINCT t0.c0))) ASC  NULLS FIRST, ((((((SUBSTR(t0.c0, t0.c0))AND(TRIM(DISTINCT t0.c0))))AND((((t0.c0, NULL, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)AND(t0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE WHEN (((t0.c0, t0.c0))<((t0.c0, t0.c0))) THEN (~ (t0.c0)) END) ORDER BY (NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), ((((t0.c0)<>(t0.c0))) NOT NULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CASE WHEN (((t0.c0, t0.c0))<((t0.c0, t0.c0))) THEN (~ (t0.c0)) END)AND(CASE WHEN ((-2.6683562E8)!=(t0.c0)) THEN (NOT (0Xfffffffff565f932)) WHEN LOWER(DISTINCT t0.c0) THEN ((t0.c0)IS(t0.c0)) WHEN (t0.c0 IN (t0.c0, '
ç')) THEN t0.c0 COLLATE BINARY ELSE t0.c0 COLLATE BINARY END))) ORDER BY CASE (t0.c0 IN (t0.c0))  WHEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('', 'a*ï¢·y', t0.c0))) THEN (t0.c0 IN (t0.c0)) END, ((CAST(t0.c0 AS REAL))=(TRIM(DISTINCT t0.c0))) ASC  NULLS FIRST, ((((((SUBSTR(t0.c0, t0.c0))AND(TRIM(DISTINCT t0.c0))))AND((((t0.c0, NULL, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)AND(t0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)+(t0.c0)) THEN LAST_INSERT_ROWID() WHEN ((t0.c0)IS NOT(t0.c0)) THEN ((((((((t0.c0)AND(0.83171834609094)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE t0.c0 END);
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN ((t0.c0)+(t0.c0)) THEN LAST_INSERT_ROWID() WHEN ((t0.c0)IS NOT(t0.c0)) THEN ((((((((t0.c0)AND(0.83171834609094)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE t0.c0 END);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)+(t0.c0)) THEN LAST_INSERT_ROWID() WHEN ((t0.c0)IS NOT(t0.c0)) THEN ((((((((t0.c0)AND(0.83171834609094)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE t0.c0 END);
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN ((t0.c0)+(t0.c0)) THEN LAST_INSERT_ROWID() WHEN ((t0.c0)IS NOT(t0.c0)) THEN ((((((((t0.c0)AND(0.83171834609094)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE t0.c0 END);
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0)>(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (CAST('' AS INTEGER) IN (t0.c0)) DESC, (((0.20506389135596126, t0.c0, t0.c0)) NOT BETWEEN (('-2128350805' COLLATE BINARY, (NOT (t0.c0)), CAST(t0.c0 AS NUMERIC))) AND ((x'1a32', ((t0.c0)&(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.9970536299439513 END)))  NULLS LAST, ((t0.c0)%('K')) COLLATE RTRIM DESC  NULLS LAST, ((CAST(t0.c0 AS NUMERIC))IS(t0.c0)) ASC  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0)>(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY 0.4385794289584355  NULLS FIRST, CAST(((t0.c0)>>(t0.c0)) AS NUMERIC)  NULLS LAST LIMIT 0 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY 0.4385794289584355  NULLS FIRST, CAST(((t0.c0)>>(t0.c0)) AS NUMERIC)  NULLS LAST LIMIT 0X0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ('RBp') ORDER BY (((((((((- (t0.c0)))OR(((t0.c0) NOT NULL))))OR((+ (t0.c0)))))AND((- (t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC, ((((((((((t0.c0)AND((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)>(t0.c0)))))OR((t0.c0 IN ()))))OR(((t0.c0) IS TRUE))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ('RBp') ORDER BY CAST(((t0.c0) IS TRUE) AS REAL) ASC, ((x'c11cf6') IS TRUE) COLLATE RTRIM, ((CASE WHEN t0.c0 THEN t0.c0 END)|('UwsnWP')) ASC INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CAST((NOT (t0.c0)) AS BLOB)) ORDER BY CAST(((t0.c0) IS TRUE) AS REAL) ASC, ((x'c11cf6') IS TRUE) COLLATE RTRIM, ((CASE WHEN t0.c0 THEN t0.c0 END)|('UwsnWP')) ASC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((((t0.c0)||(t0.c0)), ((t0.c0)/(NULL))))!=((CAST(t0.c0 AS INTEGER), (+ (t0.c0)))))) ORDER BY ((t0.c0)>=(x'838e')) COLLATE BINARY;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((((t0.c0)||(t0.c0)), ((t0.c0)/(NULL))))<((CAST(t0.c0 AS INTEGER), (+ (t0.c0))))))AND(t0.c0))) ORDER BY ((t0.c0)>=(x'838e')) COLLATE BINARY INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (0.2716792175883517) ORDER BY ((t0.c0)>=(x'838e')) COLLATE BINARY;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((x'67')IS NOT(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((x'67')IS NOT(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CAST(((t0.c0)<>(-1109727209)) AS BLOB)))) ORDER BY 'Nx', (- ((((t0.c0, t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0)))))  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((x'')<(t0.c0)) IN ((- (t0.c0))))) ORDER BY 'Nx', (- ((((t0.c0, t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0)))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN LIKE(t0.c0, t0.c0, 'U') WHEN ('--gp
Hn#y' IN ()) THEN (~ (t0.c0)) ELSE t0.c0 COLLATE BINARY END) ORDER BY ((x'') NOT BETWEEN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (CAST(t0.c0 AS TEXT))), ((CAST(t0.c0 AS TEXT)) ISNULL);
SELECT DISTINCT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN LIKE(t0.c0, t0.c0, 'U') WHEN ('--gp
Hn#y' IN ()) THEN (~ (t0.c0)) ELSE t0.c0 COLLATE BINARY END)AND(((((((t0.c0)|(t0.c0)))AND(((t0.c0) NOTNULL))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY ((((((((t0.c0 COLLATE NOCASE)AND(t0.c0 COLLATE NOCASE)))OR(1.88415772E8)))OR(t0.c0)))OR(((t0.c0) IS TRUE))) ASC  NULLS LAST, t0.c0 ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN LIKE(t0.c0, t0.c0, 'U') WHEN ('--gp
Hn#y' IN ()) THEN (~ (t0.c0)) ELSE t0.c0 COLLATE BINARY END) ORDER BY ((x'') NOT BETWEEN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (CAST(t0.c0 AS TEXT))), ((CAST(t0.c0 AS TEXT)) ISNULL);
SELECT DISTINCT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN LIKE(t0.c0, t0.c0, 'U') WHEN ('--gp
Hn#y' IN ()) THEN (~ (t0.c0)) ELSE t0.c0 COLLATE BINARY END)AND(((((((t0.c0)|(t0.c0)))AND(((t0.c0) NOTNULL))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY ((((((((t0.c0 COLLATE NOCASE)AND(t0.c0 COLLATE NOCASE)))OR(1.88415772E8)))OR(t0.c0)))OR(((t0.c0) IS TRUE))) ASC  NULLS LAST, t0.c0 ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 WHERE (CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS TEXT));
SELECT * FROM t0 WHERE (CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS TEXT)) ORDER BY ((QUOTE(t0.c0)) IS FALSE)  NULLS LAST, (((((t0.c0, t0.c0)) BETWEEN ((t0.c0, 0.3272987486111907)) AND ((t0.c0, t0.c0)))) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS TEXT));
SELECT * FROM t0 WHERE (CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS TEXT)) ORDER BY ((QUOTE(t0.c0)) IS FALSE)  NULLS LAST, (((((t0.c0, t0.c0)) BETWEEN ((t0.c0, 0.3272987486111907)) AND ((t0.c0, t0.c0)))) NOTNULL)  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((0.4076423771870089, t0.c0))))LIKE(((x'3f9030')!=(t0.c0)))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((0.4076423771870089, t0.c0))))LIKE(((x'3f9030')>(t0.c0))))) ORDER BY ((x'58') NOT NULL)  NULLS FIRST, ((((t0.c0)AND(NULL)))OR(((-63195965)<('0.4073367410305304')))) ASC LIMIT 0X3;
SELECT ALL * FROM t0 WHERE (CASE WHEN (t0.c0 IN (t0.c0)) THEN ((((((t0.c0)AND(2128952204)))OR(t0.c0)))AND(t0.c0)) WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((((((t0.c0)OR(t0.c0)))AND(0xe2e3ea9)))AND(t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 END END) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) IS TRUE)  NULLS LAST, t0.c0  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN (t0.c0 IN (t0.c0)) THEN ((((((t0.c0)AND(2128952204)))OR(t0.c0)))AND(t0.c0)) WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((((((t0.c0)OR(t0.c0)))AND(0Xe2e3ea9)))AND(t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 END END)AND(((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))<<(CAST(t0.c0 AS REAL)))))) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) IS TRUE)  NULLS LAST, t0.c0  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (CASE WHEN (t0.c0 IN (t0.c0)) THEN ((((((t0.c0)AND(2128952204)))OR(t0.c0)))AND(t0.c0)) WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((((((t0.c0)OR(t0.c0)))AND(0xe2e3ea9)))AND(t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 END END) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) IS TRUE)  NULLS LAST, t0.c0  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN (t0.c0 IN (t0.c0)) THEN ((((((t0.c0)AND(2128952204)))OR(t0.c0)))AND(t0.c0)) WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((((((t0.c0)OR(t0.c0)))AND(0Xe2e3ea9)))AND(t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 END END)AND(((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))<<(CAST(t0.c0 AS REAL)))))) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) IS TRUE)  NULLS LAST, t0.c0  NULLS FIRST LIMIT 0x1;
SELECT MIN(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS REAL))>>(((t0.c0)||(t0.c0))))) ORDER BY CAST(((t0.c0) NOT NULL) AS REAL) DESC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((CAST(t0.c0 AS REAL))>>(((t0.c0)||(t0.c0)))))AND(LIKELIHOOD(DISTINCT t0.c0, (((t0.c0))<((t0.c0))))))) ORDER BY CASE WHEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0.6894105039257591, t0.c0))) THEN CAST(t0.c0 AS REAL) WHEN ((t0.c0)&(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN (- (t0.c0)) THEN json_insert(t0.c0, t0.c0, '141569879', t0.c0, t0.c0, 0X3ff4895, t0.c0) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST, NULL DESC LIMIT 0x3;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((NULL))==(((~ (t0.c0))))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((NULL))==(((~ (t0.c0))))))AND(((t0.c0) IS TRUE) COLLATE BINARY))) ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN t0.c0 ELSE t0.c0 END  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((t0.c0))>=((t0.c0))) COLLATE RTRIM) ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN t0.c0 ELSE t0.c0 END  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE ((t0.c0 IN (CAST(t0.c0 AS INTEGER))));
SELECT DISTINCT * FROM t0 WHERE ((t0.c0 IN (CAST(t0.c0 AS INTEGER)))) ORDER BY (NOT (x''))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS REAL)) ORDER BY (NOT (x''))  NULLS LAST;
SELECT * FROM t0 WHERE ((t0.c0 IN (CAST(t0.c0 AS INTEGER))));
SELECT DISTINCT * FROM t0 WHERE ((t0.c0 IN (CAST(t0.c0 AS INTEGER)))) ORDER BY (NOT (x''))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS REAL)) ORDER BY (NOT (x''))  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0, x'2a', t0.c0)))AND(((t0.c0) IS FALSE)))) ORDER BY (~ (((t0.c0)>(x'')))) ASC;
SELECT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0, x'2a', t0.c0)))AND(((t0.c0) IS FALSE))))AND((~ (t0.c0))))) ORDER BY t0.c0  NULLS FIRST LIMIT 0x2;
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0, x'2a', t0.c0)))AND(((t0.c0) IS FALSE)))) ORDER BY (~ (((t0.c0)>(x'')))) ASC;
SELECT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0, x'2a', t0.c0)))AND(((t0.c0) IS FALSE))))AND((~ (t0.c0))))) ORDER BY t0.c0  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER))OR(((t0.c0)-(t0.c0)))))AND(((t0.c0) IS FALSE))));
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER))OR(((t0.c0)-(t0.c0)))))AND(((t0.c0) IS FALSE)))) ORDER BY ((((((((CAST(t0.c0 AS TEXT))OR((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))AND(UPPER(t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(('-1238024258' IN (t0.c0))))  NULLS FIRST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))IS NOT(t0.c0)) DESC, t0.c0;
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER))OR(((t0.c0)-(t0.c0)))))AND(((t0.c0) IS FALSE))));
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER))OR(((t0.c0)-(t0.c0)))))AND(((t0.c0) IS FALSE)))) ORDER BY ((((((((CAST(t0.c0 AS TEXT))OR((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))AND(UPPER(t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(('-1238024258' IN (t0.c0))))  NULLS FIRST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))IS NOT(t0.c0)) DESC, t0.c0;
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))!=((- (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<((- (t0.c0))))) ORDER BY t0.c0;
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))!=((- (t0.c0)))));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<((- (t0.c0))))) ORDER BY t0.c0;
SELECT * FROM t0 WHERE ((((0X1cca96e7, t0.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ABS(t0.c0), ((t0.c0) ISNULL))) AND (((t0.c0 IN (t0.c0, t0.c0)), t0.c0 COLLATE RTRIM, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))));
SELECT * FROM t0 WHERE ((((483038951, t0.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ABS(t0.c0), ((t0.c0) ISNULL))) AND (((t0.c0 IN (t0.c0, t0.c0)), t0.c0 COLLATE RTRIM, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))) ORDER BY RTRIM(((t0.c0)LIKE(t0.c0))) DESC, t0.c0 DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((0X1cca96e7, t0.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ABS(t0.c0), ((t0.c0) ISNULL))) AND (((t0.c0 IN (t0.c0, t0.c0)), t0.c0 COLLATE RTRIM, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))));
SELECT * FROM t0 WHERE ((((483038951, t0.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ABS(t0.c0), ((t0.c0) ISNULL))) AND (((t0.c0 IN (t0.c0, t0.c0)), t0.c0 COLLATE RTRIM, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))) ORDER BY RTRIM(((t0.c0)LIKE(t0.c0))) DESC, t0.c0 DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (((t0.c0)AND((((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN (((t0.c0)==('kRyb?nKr'))))))) LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (t0.c0) LIMIT 0;
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (((t0.c0)AND((((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN (((t0.c0)==('kRyb?nKr'))))))) LIMIT 0 INTERSECT SELECT ALL * FROM t0 WHERE (t0.c0) LIMIT 0;
SELECT MIN(t0.c0) FROM t0 WHERE (((TYPEOF(DISTINCT 802646908))OR((t0.c0 IN (t0.c0))))) ORDER BY ((((t0.c0) NOT NULL))!=(CAST(t0.c0 AS INTEGER))) DESC, x'' ASC, t0.c0;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((TYPEOF(DISTINCT 802646908))OR((t0.c0 IN (t0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)%(((((t0.c0)OR(t0.c0)))AND(t0.c0)))) ASC, '-1513497943'  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((t0.c0) ISNULL)) NOTNULL)) ORDER BY ((t0.c0 COLLATE RTRIM)%(((((t0.c0)OR(t0.c0)))AND(t0.c0)))) ASC, '-1513497943'  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)*('-1313987184'))))<=((((t0.c0)==(t0.c0)))))) ORDER BY (((t0.c0 IN (t0.c0))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (PRINTF(t0.c0, t0.c0)))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0)*('-1313987184'))))<((((t0.c0)==(t0.c0))))))AND(((t0.c0)!=(t0.c0)) COLLATE NOCASE))) ORDER BY GLOB(t0.c0, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (LIKELY(((t0.c0)-(t0.c0)))) ORDER BY GLOB(t0.c0, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)*('-1313987184'))))<=((((t0.c0)==(t0.c0)))))) ORDER BY (((t0.c0 IN (t0.c0))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (PRINTF(t0.c0, t0.c0)))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0)*('-1313987184'))))<((((t0.c0)==(t0.c0))))))AND(((t0.c0)!=(t0.c0)) COLLATE NOCASE))) ORDER BY GLOB(t0.c0, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (LIKELY(((t0.c0)-(t0.c0)))) ORDER BY GLOB(t0.c0, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) IN (TYPEOF(DISTINCT t0.c0)))) ORDER BY ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))>=((ROUND(t0.c0, t0.c0)))) ASC  NULLS FIRST, HEX((t0.c0 IN (t0.c0))) ASC;
SELECT * FROM t0 WHERE ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) IN (TYPEOF(DISTINCT t0.c0))))AND(t0.c0))) ORDER BY ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))>=((ROUND(t0.c0, t0.c0)))) ASC  NULLS FIRST, HEX((t0.c0 IN (t0.c0))) ASC LIMIT 2;
SELECT ALL * FROM t0 WHERE ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) IN (TYPEOF(DISTINCT t0.c0)))) ORDER BY ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))>=((ROUND(t0.c0, t0.c0)))) ASC  NULLS FIRST, HEX((t0.c0 IN (t0.c0))) ASC;
SELECT * FROM t0 WHERE ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) IN (TYPEOF(DISTINCT t0.c0))))AND(t0.c0))) ORDER BY ((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0)))))>=((ROUND(t0.c0, t0.c0)))) ASC  NULLS FIRST, HEX((t0.c0 IN (t0.c0))) ASC LIMIT 2;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE) ORDER BY (t0.c0 COLLATE RTRIM IN (CASE WHEN t0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE)AND(CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)AND(t0.c0)) THEN CASE WHEN t0.c0 THEN '' ELSE t0.c0 END END))) ORDER BY (t0.c0 COLLATE RTRIM IN (CASE WHEN t0.c0 THEN t0.c0 END))  NULLS LAST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0))) BETWEEN (CASE t0.c0  WHEN 0.9575522849720906 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ORDER BY (t0.c0 COLLATE RTRIM IN (CASE WHEN t0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((((t0.c0)>=(t0.c0))))==((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))) ORDER BY (- (t0.c0)) COLLATE BINARY ASC, (~ (((t0.c0)<=(t0.c0)))) ASC;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0)>=(t0.c0))))=((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))) ORDER BY CASE WHEN (- (t0.c0)) THEN (((t0.c0))<((t0.c0))) END  NULLS LAST, (((0xfffffffffbb9be31, 0.5864472350810028)) NOT BETWEEN ((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(NULL)))AND(t0.c0)), CAST(t0.c0 AS NUMERIC))) AND (((((x'06'))<=((t0.c0))), ((t0.c0)|(0.2283198248111663)))))  NULLS LAST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CAST(((t0.c0)>(t0.c0)) AS BLOB)) ORDER BY CASE WHEN (- (t0.c0)) THEN (((t0.c0))<((t0.c0))) END  NULLS LAST, (((0xfffffffffbb9be31, 0.5864472350810028)) NOT BETWEEN ((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(NULL)))AND(t0.c0)), CAST(t0.c0 AS NUMERIC))) AND (((((x'06'))<=((t0.c0))), ((t0.c0)|(0.2283198248111663)))))  NULLS LAST;
SELECT * FROM t0 WHERE ((((- (t0.c0)))IS((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))));
SELECT * FROM t0 WHERE ((((- (t0.c0)))IS((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY ((((t0.c0) NOTNULL)) IS TRUE) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((- (t0.c0)))IS((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))));
SELECT * FROM t0 WHERE ((((- (t0.c0)))IS((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY ((((t0.c0) NOTNULL)) IS TRUE) ASC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((~ (((t0.c0) ISNULL))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((~ (((t0.c0) ISNULL))))AND(LIKELY(DISTINCT t0.c0) COLLATE RTRIM))) ORDER BY ((t0.c0) BETWEEN (0.03278447440533783) AND (t0.c0)) COLLATE RTRIM COLLATE NOCASE DESC, ((((t0.c0) IS TRUE))/((t0.c0 IN (t0.c0)))) LIMIT 0 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((t0.c0) BETWEEN (0.03278447440533783) AND (t0.c0)) COLLATE RTRIM COLLATE NOCASE DESC, ((((t0.c0) IS TRUE))/((t0.c0 IN (t0.c0)))) LIMIT 0x0;
SELECT * FROM t0 WHERE (ABS(DISTINCT (t0.c0 IN ()))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))) ASC, (((((t0.c0) NOT NULL), CASE 0.6223961036088554  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-124486589' WHEN t0.c0 THEN t0.c0 END))>=((((t0.c0)>(t0.c0)), (('S*')IS NOT(t0.c0))))) DESC;
SELECT DISTINCT * FROM t0 WHERE (((ABS(DISTINCT (t0.c0 IN ())))AND(t0.c0))) ORDER BY (~ ((t0.c0 IN (t0.c0)))) DESC  NULLS LAST LIMIT 0;
SELECT * FROM t0 WHERE (ABS(DISTINCT (t0.c0 IN ()))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))) ASC, (((((t0.c0) NOT NULL), CASE 0.6223961036088554  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-124486589' WHEN t0.c0 THEN t0.c0 END))>=((((t0.c0)>(t0.c0)), (('S*')IS NOT(t0.c0))))) DESC;
SELECT DISTINCT * FROM t0 WHERE (((ABS(DISTINCT (t0.c0 IN ())))AND(t0.c0))) ORDER BY (~ ((t0.c0 IN (t0.c0)))) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t0 WHERE (((t0.c0 IN (t0.c0)) IN (((('67061909', t0.c0)) BETWEEN ((x'bf475c2c', t0.c0)) AND ((t0.c0, t0.c0))), (t0.c0 IN (t0.c0, t0.c0))))) ORDER BY (((('-147155092')=('r')))GLOB(ABS(DISTINCT t0.c0))), 0.8501958295616701 ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c0 IN (t0.c0)) IN (((('67061909', t0.c0)) BETWEEN ((x'bf475c2c', t0.c0)) AND ((t0.c0, t0.c0)))))) ORDER BY (+ (((t0.c0)>(t0.c0)))) INTERSECT SELECT ALL * FROM t0 WHERE (HEX(x'33' COLLATE RTRIM)) ORDER BY (+ (((t0.c0)>(t0.c0))));
SELECT ALL * FROM t0 WHERE (((t0.c0 IN (t0.c0)) IN (((('67061909', t0.c0)) BETWEEN ((x'bf475c2c', t0.c0)) AND ((t0.c0, t0.c0))), (t0.c0 IN (t0.c0, t0.c0))))) ORDER BY (((('-147155092')=('r')))GLOB(ABS(DISTINCT t0.c0))), 0.8501958295616701 ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c0 IN (t0.c0)) IN (((('67061909', t0.c0)) BETWEEN ((x'bf475c2c', t0.c0)) AND ((t0.c0, t0.c0)))))) ORDER BY (+ (((t0.c0)>(t0.c0)))) INTERSECT SELECT ALL * FROM t0 WHERE (HEX(x'33' COLLATE RTRIM)) ORDER BY (+ (((t0.c0)>(t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (CAST((0.9418397844565232 IN (t0.c0)) AS INTEGER)) ORDER BY ((0.4187063512701128 COLLATE BINARY)IS(t0.c0 COLLATE BINARY)) ASC, (+ (t0.c0 COLLATE NOCASE));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CAST((0.9418397844565232 IN (t0.c0)) AS INTEGER))AND(CASE ((t0.c0)LIKE(x'38c1b1'))  WHEN (~ (t0.c0)) THEN (((t0.c0, t0.c0))>((t0.c0, t0.c0))) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (x'964a3029fe')) THEN (((('(]')AND(t0.c0)))AND(x'3c')) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END))) ORDER BY ((0.4187063512701128 COLLATE BINARY)IS(t0.c0 COLLATE BINARY)) ASC, (+ (t0.c0 COLLATE NOCASE)) LIMIT 0;
SELECT ALL * FROM t0 WHERE (((((x'') IS TRUE)) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (+ (((t0.c0) ISNULL)))  NULLS LAST;
SELECT * FROM t0 WHERE (((((x'') IS TRUE)) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (+ (((t0.c0) ISNULL)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((x'') IS TRUE)) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (+ (((t0.c0) ISNULL)))  NULLS LAST;
SELECT * FROM t0 WHERE (((((x'') IS TRUE)) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (+ (((t0.c0) ISNULL)))  NULLS LAST;
SELECT * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY '*ohg(4';
SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB))AND((((~ (t0.c0))) ISNULL)))) ORDER BY ((((((((((((((((t0.c0)AND(-1004623476)))AND(x'b0')))OR(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)>=(t0.c0)))))OR(x'69')))OR(((t0.c0)>(t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) LIMIT 0x1;
SELECT * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY '*ohg(4';
SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB))AND((((~ (t0.c0))) ISNULL)))) ORDER BY ((((((((((((((((t0.c0)AND(-1004623476)))AND(x'b0')))OR(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)>=(t0.c0)))))OR(x'69')))OR(((t0.c0)>(t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) LIMIT 0x1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((TYPEOF(DISTINCT t0.c0), CASE WHEN t0.c0 THEN t0.c0 END, (t0.c0 IN (t0.c0, t0.c0))))==((((((t0.c0)AND(t0.c0)))OR(t0.c0)), 1372401049, TYPEOF(DISTINCT t0.c0))))) ORDER BY UNLIKELY(DISTINCT (~ (t0.c0)))  NULLS LAST, NULL  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((TYPEOF(DISTINCT t0.c0), CASE WHEN t0.c0 THEN t0.c0 END, (t0.c0 IN (t0.c0, t0.c0))))=((((((t0.c0)AND(t0.c0)))OR(t0.c0)), 0x51cd2d99, TYPEOF(DISTINCT t0.c0))))) ORDER BY UNLIKELY(DISTINCT (~ (t0.c0)))  NULLS LAST, NULL  NULLS LAST INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))-(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-997382822' END))) ORDER BY UNLIKELY(DISTINCT (~ (t0.c0)))  NULLS LAST, NULL  NULLS LAST;
SELECT ALL * FROM t0 WHERE (JULIANDAY(t0.c0, ((t0.c0)==(t0.c0)), ((t0.c0)>(0.5143861960760291)), CASE WHEN t0.c0 THEN t0.c0 WHEN 79040647 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END));
SELECT DISTINCT * FROM t0 WHERE (((JULIANDAY(t0.c0, ((t0.c0)==(t0.c0)), ((t0.c0)>(1.5143861960760292)), CASE WHEN t0.c0 THEN t0.c0 WHEN 0X4b61087 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))AND(((LIKELIHOOD(t0.c0, t0.c0)) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0))))) ORDER BY (- (((0.8907016320295154)||(t0.c0))))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (JULIANDAY(t0.c0, ((t0.c0)==(t0.c0)), ((t0.c0)>(0.5143861960760291)), CASE WHEN t0.c0 THEN t0.c0 WHEN 79040647 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END));
SELECT DISTINCT * FROM t0 WHERE (((JULIANDAY(t0.c0, ((t0.c0)==(t0.c0)), ((t0.c0)>(1.5143861960760292)), CASE WHEN t0.c0 THEN t0.c0 WHEN 0X4b61087 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))AND(((LIKELIHOOD(t0.c0, t0.c0)) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0))))) ORDER BY (- (((0.8907016320295154)||(t0.c0))))  NULLS FIRST LIMIT 0x1;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL))AND(((((t0.c0)OR(t0.c0))) NOT BETWEEN ((+ (t0.c0))) AND (t0.c0))))) LIMIT 0X6 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN ()) AS NUMERIC)) LIMIT 0X6;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0)<=(t0.c0)) AS REAL)) ORDER BY (+ ((t0.c0 IN (t0.c0))))  NULLS FIRST, ((t0.c0 COLLATE NOCASE) NOT BETWEEN (t0.c0) AND (((t0.c0) IS FALSE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(((t0.c0)<=(t0.c0)) AS REAL))AND('224546577'))) ORDER BY (((t0.c0 COLLATE NOCASE, ((t0.c0)-(t0.c0))))<=(((t0.c0 IN (t0.c0)), CAST(t0.c0 AS REAL))))  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)+(t0.c0))) IS TRUE)) ORDER BY (((t0.c0 COLLATE NOCASE, ((t0.c0)-(t0.c0))))<=(((t0.c0 IN (t0.c0)), CAST(t0.c0 AS REAL))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((- (t0.c0)))))OR(t0.c0)))AND(CAST(t0.c0 AS BLOB)))) ORDER BY (t0.c0 IN ()) ASC, (~ (((NULL) BETWEEN (t0.c0) AND (t0.c0)))), t0.c0 ASC, ((t0.c0)&(t0.c0));
SELECT * FROM t0 NOT INDEXED WHERE (((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((- (t0.c0)))))OR(t0.c0)))AND(CAST(t0.c0 AS BLOB))))AND(CAST((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, x'', t0.c0))) AS BLOB)))) ORDER BY (t0.c0 IN ()) ASC, (~ (((NULL) BETWEEN (t0.c0) AND (t0.c0)))), t0.c0 ASC, ((t0.c0)&(t0.c0));
SELECT ALL * FROM t0 WHERE (((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((- (t0.c0)))))OR(t0.c0)))AND(CAST(t0.c0 AS BLOB)))) ORDER BY (t0.c0 IN ()) ASC, (~ (((NULL) BETWEEN (t0.c0) AND (t0.c0)))), t0.c0 ASC, ((t0.c0)&(t0.c0));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0)IS NOT(((('0.0', NULL, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY (((t0.c0, x'bc', t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), TOTAL_CHANGES(), SQLITE_SOURCE_ID(), CAST(t0.c0 AS REAL), (((t0.c0, t0.c0, '-1580065190'))>=((t0.c0, t0.c0, '0.3414311690596227'))), CAST(t0.c0 AS NUMERIC))) AND ((((t0.c0)<(t0.c0)), t0.c0, LOWER(t0.c0), t0.c0 COLLATE NOCASE, json(t0.c0), CHANGES()))) DESC  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)IS NOT(((('0.0', NULL, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))AND((NOT (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))))) ORDER BY (((t0.c0, x'bc', t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), TOTAL_CHANGES(), SQLITE_SOURCE_ID(), CAST(t0.c0 AS REAL), (((t0.c0, t0.c0, '-1580065190'))>=((t0.c0, t0.c0, '0.3414311690596227'))), CAST(t0.c0 AS NUMERIC))) AND ((((t0.c0)<(t0.c0)), t0.c0, LOWER(t0.c0), t0.c0 COLLATE NOCASE, json(t0.c0), CHANGES()))) DESC  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((((t0.c0 IN ()))AND(-6.3195965E7)))AND(((t0.c0)AND(t0.c0))))) ORDER BY (((t0.c0, x'bc', t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), TOTAL_CHANGES(), SQLITE_SOURCE_ID(), CAST(t0.c0 AS REAL), (((t0.c0, t0.c0, '-1580065190'))>=((t0.c0, t0.c0, '0.3414311690596227'))), CAST(t0.c0 AS NUMERIC))) AND ((((t0.c0)<(t0.c0)), t0.c0, LOWER(t0.c0), t0.c0 COLLATE NOCASE, json(t0.c0), CHANGES()))) DESC  NULLS FIRST LIMIT 0X3;
SELECT * FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS REAL) COLLATE RTRIM)AND(((CAST(t0.c0 AS INTEGER))||((t0.c0 IN (t0.c0)))))));
SELECT * FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS REAL) COLLATE RTRIM)AND(((CAST(t0.c0 AS INTEGER))||((t0.c0 IN (t0.c0)))))));
SELECT COUNT(*) FROM t0 WHERE ((('-1638598001') NOT BETWEEN (x'') AND (CASE 0.3519934330528367  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((((t0.c0)+(-7.22364497E8)))>>((t0.c0 IN (t0.c0)))), ((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, '-2065411590'))) IN ((- (t0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((('-1638598001') NOT BETWEEN (x'') AND (CASE 0.3519934330528367  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((t0.c0)+(t0.c0)) COLLATE NOCASE DESC LIMIT 2 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c0)+(t0.c0)) COLLATE NOCASE DESC LIMIT 0x2;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CAST('-891931245' AS NUMERIC))));
SELECT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CAST('-891931245' AS NUMERIC))))AND(((((((CASE t0.c0  WHEN 0.9179576593229041 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0) NOTNULL))))OR((((t0.c0, t0.c0)) NOT BETWEEN ((0x1037405c, t0.c0)) AND ((t0.c0, t0.c0))))))AND(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))))) LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE (t0.c0) LIMIT 0x0;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CAST('-891931245' AS NUMERIC))));
SELECT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CAST('-891931245' AS NUMERIC))))AND(((((((CASE t0.c0  WHEN 0.9179576593229041 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0) NOTNULL))))OR((((t0.c0, t0.c0)) NOT BETWEEN ((0x1037405c, t0.c0)) AND ((t0.c0, t0.c0))))))AND(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))))) LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE (t0.c0) LIMIT 0x0;
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<=((t0.c0)))) NOT BETWEEN (((t0.c0)%(t0.c0))) AND ((((t0.c0))>((t0.c0)))))) ORDER BY ((((t0.c0) IS TRUE)) IS TRUE)  NULLS LAST, (~ (t0.c0 COLLATE RTRIM))  NULLS FIRST, CASE WHEN (0.7083787385169439 IN (NULL)) THEN CASE t0.c0  WHEN t0.c0 THEN 1072591251 ELSE t0.c0 END WHEN ((((((t0.c0)OR(x'')))OR(t0.c0)))AND(t0.c0)) THEN LOWER(t0.c0) END;
SELECT ALL * FROM t0 WHERE ((((((((t0.c0))<=((t0.c0)))) NOT BETWEEN (((t0.c0)%(t0.c0))) AND ((((t0.c0))>((t0.c0))))))AND((((t0.c0)) BETWEEN (((NOT (t0.c0)))) AND ((t0.c0 COLLATE BINARY)))))) ORDER BY ((((t0.c0) IS TRUE)) IS TRUE)  NULLS LAST, (~ (t0.c0 COLLATE RTRIM))  NULLS FIRST, CASE WHEN (0.7083787385169439 IN (NULL)) THEN CASE t0.c0  WHEN t0.c0 THEN 1072591251 ELSE t0.c0 END WHEN ((((((t0.c0)OR(x'')))OR(t0.c0)))AND(t0.c0)) THEN LOWER(t0.c0) END;
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<=((t0.c0)))) NOT BETWEEN (((t0.c0)%(t0.c0))) AND ((((t0.c0))>((t0.c0)))))) ORDER BY ((((t0.c0) IS TRUE)) IS TRUE)  NULLS LAST, (~ (t0.c0 COLLATE RTRIM))  NULLS FIRST, CASE WHEN (0.7083787385169439 IN (NULL)) THEN CASE t0.c0  WHEN t0.c0 THEN 1072591251 ELSE t0.c0 END WHEN ((((((t0.c0)OR(x'')))OR(t0.c0)))AND(t0.c0)) THEN LOWER(t0.c0) END;
SELECT ALL * FROM t0 WHERE ((((((((t0.c0))<=((t0.c0)))) NOT BETWEEN (((t0.c0)%(t0.c0))) AND ((((t0.c0))>((t0.c0))))))AND((((t0.c0)) BETWEEN (((NOT (t0.c0)))) AND ((t0.c0 COLLATE BINARY)))))) ORDER BY ((((t0.c0) IS TRUE)) IS TRUE)  NULLS LAST, (~ (t0.c0 COLLATE RTRIM))  NULLS FIRST, CASE WHEN (0.7083787385169439 IN (NULL)) THEN CASE t0.c0  WHEN t0.c0 THEN 1072591251 ELSE t0.c0 END WHEN ((((((t0.c0)OR(x'')))OR(t0.c0)))AND(t0.c0)) THEN LOWER(t0.c0) END;
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0)>(t0.c0)) COLLATE NOCASE);
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0)>(t0.c0)) COLLATE NOCASE)AND(t0.c0))) ORDER BY NULL  NULLS LAST, '67061909' ASC;
SELECT ALL * FROM t0 WHERE (((t0.c0)<=((((t0.c0, t0.c0))<=((t0.c0, t0.c0)))))) ORDER BY CASE WHEN (('0.2786745149741875') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)/(t0.c0)) END DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)<=((((t0.c0, t0.c0))<=((t0.c0, t0.c0))))))AND(((((((t0.c0)&(t0.c0)))OR(((t0.c0)LIKE(t0.c0)))))AND((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))))))) ORDER BY CASE WHEN (('0.2786745149741875') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)/(t0.c0)) END DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 WHERE (((t0.c0)<=((((t0.c0, t0.c0))<=((t0.c0, t0.c0)))))) ORDER BY CASE WHEN (('0.2786745149741875') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)/(t0.c0)) END DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)<=((((t0.c0, t0.c0))<=((t0.c0, t0.c0))))))AND(((((((t0.c0)&(t0.c0)))OR(((t0.c0)LIKE(t0.c0)))))AND((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))))))) ORDER BY CASE WHEN (('0.2786745149741875') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)/(t0.c0)) END DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0)+(t0.c0))  WHEN t0.c0 THEN ((0X738db894) IS FALSE) WHEN ((t0.c0)=(t0.c0)) THEN ((t0.c0)IS(t0.c0)) END) ORDER BY NULL DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0)+(t0.c0))  WHEN t0.c0 THEN ((0X738db894) IS FALSE) WHEN ((t0.c0)=(t0.c0)) THEN ((t0.c0)IS(t0.c0)) END) ORDER BY NULL DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)<(0X419dd34d))) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0)+(t0.c0))  WHEN t0.c0 THEN ((0X738db894) IS FALSE) WHEN ((t0.c0)=(t0.c0)) THEN ((t0.c0)IS(t0.c0)) END) ORDER BY NULL DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0)+(t0.c0))  WHEN t0.c0 THEN ((0X738db894) IS FALSE) WHEN ((t0.c0)=(t0.c0)) THEN ((t0.c0)IS(t0.c0)) END) ORDER BY NULL DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0)<(0X419dd34d))) ORDER BY NULL DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'k' THEN t0.c0 END)AND((+ (t0.c0)))))AND(UNLIKELY(DISTINCT t0.c0))))AND(((t0.c0)||(t0.c0)))));
SELECT * FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'k' THEN t0.c0 END)AND((+ (t0.c0)))))AND(UNLIKELY(DISTINCT t0.c0))))AND(((t0.c0)||(t0.c0))))) LIMIT 0;
SELECT * FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'k' THEN t0.c0 END)AND((+ (t0.c0)))))AND(UNLIKELY(DISTINCT t0.c0))))AND(((t0.c0)||(t0.c0)))));
SELECT * FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 'k' THEN t0.c0 END)AND((+ (t0.c0)))))AND(UNLIKELY(DISTINCT t0.c0))))AND(((t0.c0)||(t0.c0))))) LIMIT 0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))IS NOT(t0.c0)));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((CAST(t0.c0 AS NUMERIC))IS NOT(t0.c0)))AND(((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(CAST(t0.c0 AS TEXT))))OR((((t0.c0))<((t0.c0)))))))) ORDER BY (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, 0.9177797637656274, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) NOTNULL) DESC, t0.c0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0))) ORDER BY (+ (((t0.c0)AND(t0.c0)))) DESC  NULLS LAST, ((((((t0.c0)<=(t0.c0)))OR(CAST(t0.c0 AS BLOB))))AND(x'70fccd')), 1.231018761E9 ASC  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0)))AND(((x'f6') NOT BETWEEN ((+ (t0.c0))) AND (CAST(t0.c0 AS BLOB)))))) ORDER BY (+ (((t0.c0)AND(t0.c0)))) DESC  NULLS LAST, ((((((t0.c0)<=(t0.c0)))OR(CAST(t0.c0 AS BLOB))))AND(x'70fccd')), 1.231018761E9 ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))<=((t0.c0 IN (t0.c0)))));
SELECT * FROM t0 WHERE (((((((t0.c0)IS NOT(t0.c0)))==((t0.c0 IN (t0.c0)))))AND('885971908')));
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))<=((t0.c0 IN (t0.c0)))));
SELECT * FROM t0 WHERE (((((((t0.c0)IS NOT(t0.c0)))==((t0.c0 IN (t0.c0)))))AND('885971908')));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) IS TRUE)) ORDER BY CASE (t0.c0 IN ())  WHEN (((t0.c0, t0.c0, t0.c0, -1.819306421E9)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, '-722689552', t0.c0))) THEN (~ (t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((t0.c0 IN ())) IS TRUE))AND(((((((((((((((((((t0.c0)OR('')))AND(t0.c0)))OR(t0.c0)))AND('-540380673')))OR(t0.c0)))AND('')))AND(t0.c0)))AND(t0.c0)))|(LIKELY(DISTINCT t0.c0)))))) ORDER BY CASE WHEN ((t0.c0)|(' 0')) THEN CAST(t0.c0 AS TEXT) END ASC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((t0.c0)|(' 0')) THEN CAST(t0.c0 AS TEXT) END ASC  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (LENGTH(t0.c0 COLLATE NOCASE));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (LENGTH(t0.c0 COLLATE NOCASE)) LIMIT 0X3;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE)) ORDER BY ((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS TRUE) DESC  NULLS FIRST, (((((((t0.c0 IN (0.3414568335734831, NULL)))OR(t0.c0)))AND(t0.c0)))OR(((NULL) NOT NULL))) ASC, CAST(LIKELY(DISTINCT '-317119887') AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ('ddî ');
SELECT DISTINCT * FROM t0 WHERE ((('ddî ')AND((((t0.c0, t0.c0)) BETWEEN (((NOT (t0.c0)), t0.c0)) AND ((((((t0.c0)AND('TRUE')))AND(t0.c0)), ((t0.c0)-(t0.c0)))))))) ORDER BY ((((t0.c0) IS TRUE))-(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST, ((((t0.c0) NOT NULL)) BETWEEN (((((t0.c0)OR(t0.c0)))AND(t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))));
SELECT * FROM t0 WHERE ('ddî ');
SELECT DISTINCT * FROM t0 WHERE ((('ddî ')AND((((t0.c0, t0.c0)) BETWEEN (((NOT (t0.c0)), t0.c0)) AND ((((((t0.c0)AND('TRUE')))AND(t0.c0)), ((t0.c0)-(t0.c0)))))))) ORDER BY ((((t0.c0) IS TRUE))-(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST, ((((t0.c0) NOT NULL)) BETWEEN (((((t0.c0)OR(t0.c0)))AND(t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))));
SELECT ALL * FROM t0 WHERE (((CAST(1.29087543E9 AS REAL)) BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0) IS TRUE))));
SELECT * FROM t0 WHERE (((((CAST(1.29087543E9 AS REAL)) BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0) IS TRUE))))AND((((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT NULL), t0.c0 COLLATE BINARY)) AND ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (t0.c0 IN ()))))))) LIMIT 0x3;
SELECT ALL * FROM t0 WHERE (((CAST(1.29087543E9 AS REAL)) BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0) IS TRUE))));
SELECT * FROM t0 WHERE (((((CAST(1.29087543E9 AS REAL)) BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0) IS TRUE))))AND((((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT NULL), t0.c0 COLLATE BINARY)) AND ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (t0.c0 IN ()))))))) LIMIT 0x3;
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS TRUE) IN ()));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0) IS TRUE) IN ())) LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS TRUE) IN ()));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0) IS TRUE) IN ())) LIMIT 0;
SELECT * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'57d3' THEN t0.c0 END AS TEXT)) ORDER BY t0.c0  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'57d3' THEN t0.c0 END AS TEXT)) ORDER BY t0.c0  NULLS LAST LIMIT 2;
SELECT * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'57d3' THEN t0.c0 END AS TEXT)) ORDER BY t0.c0  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'57d3' THEN t0.c0 END AS TEXT)) ORDER BY t0.c0  NULLS LAST LIMIT 2;
SELECT MAX(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((TRIM(t0.c0), ((t0.c0)IS NOT(t0.c0)), CAST(t0.c0 AS TEXT), (('-188287110')+(t0.c0)))) AND (((((t0.c0))>((t0.c0))), (((('1725163502')AND(t0.c0)))OR(t0.c0)), ((t0.c0) ISNULL), ((t0.c0)>(t0.c0)))))) ORDER BY UNLIKELY((x'' IN (0.3414311690596227, t0.c0))) DESC, ((((('j8Dz0XsZF') ISNULL), (NOT (t0.c0))))<=((IFNULL(t0.c0, t0.c0), t0.c0 COLLATE RTRIM)));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((TRIM(t0.c0), ((t0.c0)IS NOT(t0.c0)), CAST(t0.c0 AS TEXT), (('-188287110')+(t0.c0)))) AND (((((t0.c0))>((t0.c0))), (((('1725163502')AND(t0.c0)))OR(t0.c0)), ((t0.c0) ISNULL), ((t0.c0)>(t0.c0)))))) ORDER BY (((t0.c0) NOT NULL) IN ()), CAST(((t0.c0)<=(t0.c0)) AS REAL) ASC, CAST(t0.c0 COLLATE NOCASE AS BLOB) INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((~ (t0.c0))) ORDER BY (((t0.c0) NOT NULL) IN ()), CAST(((t0.c0)<=(t0.c0)) AS REAL) ASC, CAST(t0.c0 COLLATE NOCASE AS BLOB);
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0))  WHEN CAST(t0.c0 AS INTEGER) THEN -582384718 ELSE t0.c0 END) ORDER BY 0.31251079131204484 ASC  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (CASE ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0))  WHEN CAST(t0.c0 AS INTEGER) THEN 0xffffffffdd4983b2 ELSE t0.c0 END) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) IS TRUE) DESC  NULLS LAST, CAST(CAST(t0.c0 AS INTEGER) AS REAL) ASC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (TRIM(t0.c0)) AND (((('<', t0.c0))==((t0.c0, t0.c0)))))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (TRIM(t0.c0)) AND (((('<', t0.c0))<=((t0.c0, t0.c0))))))AND((((+ (t0.c0)))&((('8')<(NULL))))))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE BINARY  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (t0.c0 IN (t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) BETWEEN (((t0.c0)IS(t0.c0))) AND (HEX(t0.c0))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) BETWEEN (((t0.c0)IS(t0.c0))) AND (HEX(t0.c0))))AND((((~ (t0.c0)))<<(t0.c0))))) ORDER BY ABS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ASC  NULLS FIRST, ((((((0xffffffffbdaa1373)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), (((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, 0Xffffffff957ee8e2)))))<>((((t0.c0)|(t0.c0)), t0.c0 COLLATE NOCASE))) DESC;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (((t0.c0)) NOT BETWEEN ((TRIM(DISTINCT t0.c0, t0.c0))) AND ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))  NULLS FIRST, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)!=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)), x'' ASC;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND(CAST(((t0.c0)IS(t0.c0)) AS TEXT)))) ORDER BY '-582384718', ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE) INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY '-582384718', ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (((t0.c0)) NOT BETWEEN ((TRIM(DISTINCT t0.c0, t0.c0))) AND ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))  NULLS FIRST, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)!=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)), x'' ASC;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND(CAST(((t0.c0)IS(t0.c0)) AS TEXT)))) ORDER BY '-582384718', ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE) INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY '-582384718', ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE) ORDER BY CAST(TRIM(t0.c0) AS BLOB)  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 NOT INDEXED WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE) ORDER BY (((((t0.c0)OR(t0.c0))))=(((~ (t0.c0))))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (0Xfffffffff40671a9) ORDER BY ((((t0.c0)>(t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN -38828906 THEN 'nìº)gBy' WHEN t0.c0 THEN t0.c0 ELSE NULL END) AND (((t0.c0)<=(t0.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (0Xfffffffff40671a9) ORDER BY ((((t0.c0)>(t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0Xfffffffffdaf8496 THEN 'nìº)gBy' WHEN t0.c0 THEN t0.c0 ELSE NULL END) AND (((t0.c0)<=(t0.c0)))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (0Xfffffffff40671a9) ORDER BY ((((t0.c0)>(t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN -38828906 THEN 'nìº)gBy' WHEN t0.c0 THEN t0.c0 ELSE NULL END) AND (((t0.c0)<=(t0.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (0Xfffffffff40671a9) ORDER BY ((((t0.c0)>(t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0Xfffffffffdaf8496 THEN 'nìº)gBy' WHEN t0.c0 THEN t0.c0 ELSE NULL END) AND (((t0.c0)<=(t0.c0)))) ASC  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CASE WHEN ((t0.c0) ISNULL) THEN ((('-1285124151'))<((t0.c0))) WHEN t0.c0 THEN -2.017088226E9 COLLATE BINARY ELSE ((t0.c0) NOT NULL) END);
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CASE WHEN ((t0.c0) ISNULL) THEN ((('-1285124151'))<((t0.c0))) WHEN t0.c0 THEN -2.017088226E9 COLLATE BINARY ELSE ((t0.c0) NOT NULL) END) ORDER BY QUOTE(((t0.c0) NOT NULL))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN (((((((((('')AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE 0.35408854616690855 END, CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE RTRIM, ((t0.c0) IS TRUE))) AND ((t0.c0 COLLATE RTRIM, TRIM(DISTINCT t0.c0, t0.c0), (('')==(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 END)))) ORDER BY QUOTE(((t0.c0) NOT NULL))  NULLS FIRST LIMIT 0x1;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CAST(((t0.c0)<>(t0.c0)) AS BLOB)) ORDER BY NULL ASC  NULLS FIRST, ((((1.41569879E8) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (t0.c0) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT MIN(t0.c0) FROM t0 WHERE (CAST(((t0.c0)<(t0.c0)) AS BLOB)) ORDER BY ABS((+ ('0.4976323302016401')))  NULLS LAST INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) NOT NULL)) ORDER BY ABS((+ ('0.4976323302016401')))  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (CASE WHEN (+ (t0.c0)) THEN ((t0.c0)IS NOT(t0.c0)) ELSE '&' END);
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CASE WHEN (+ (t0.c0)) THEN ((t0.c0)IS NOT(t0.c0)) ELSE '&' END)AND(t0.c0))) ORDER BY UNLIKELY(DISTINCT (('') BETWEEN (t0.c0) AND (t0.c0))) DESC  NULLS LAST, ((NULL) ISNULL)  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((- (t0.c0))) ORDER BY UNLIKELY(DISTINCT (('') BETWEEN (t0.c0) AND (t0.c0))) DESC  NULLS LAST, ((NULL) ISNULL)  NULLS FIRST;
SELECT * FROM t0 WHERE ((((((((t0.c0 IN (t0.c0)))OR((t0.c0 IN ()))))AND(((t0.c0)AND(t0.c0)))))AND(((t0.c0) IS TRUE)))) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (t0.c0) AND ((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((t0.c0 IN (t0.c0)))OR((t0.c0 IN ()))))AND(((t0.c0)AND(t0.c0)))))AND(((t0.c0) IS TRUE)))) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (t0.c0) AND ((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((t0.c0 IN (t0.c0)))OR((t0.c0 IN ()))))AND(((t0.c0)AND(t0.c0)))))AND(((t0.c0) IS TRUE)))) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (t0.c0) AND ((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((t0.c0 IN (t0.c0)))OR((t0.c0 IN ()))))AND(((t0.c0)AND(t0.c0)))))AND(((t0.c0) IS TRUE)))) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (t0.c0) AND ((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (x'') ORDER BY (((((((((((NULL)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0)))AND((NOT (t0.c0)))) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((x'')AND((((t0.c0)-(t0.c0)) IN ())))) ORDER BY (((((((((((NULL)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0)))AND((NOT (t0.c0)))) DESC LIMIT 0X1;
SELECT ALL * FROM t0 WHERE ((((((((((~ (t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(x'7d86')))AND(t0.c0)))))AND((t0.c0 IN ()))))OR((- (t0.c0)))))OR((NOT (NULL))))) ORDER BY '-1314067900' COLLATE NOCASE  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((UNICODE(t0.c0))))  NULLS LAST, HEX(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END) DESC, ((((((t0.c0)LIKE(t0.c0)))AND(CAST(t0.c0 AS BLOB))))AND(0xffffffffe868d55c COLLATE BINARY)) DESC;
SELECT * FROM t0 WHERE ((((((((((((~ (t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(x'7d86')))AND(t0.c0)))))AND((t0.c0 IN ()))))OR((- (t0.c0)))))OR((NOT (NULL)))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.26250284691374537 THEN NULL ELSE t0.c0 END COLLATE RTRIM))) ORDER BY '-1314067900' COLLATE NOCASE  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((UNICODE(t0.c0))))  NULLS LAST, HEX(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END) DESC, ((((((t0.c0)LIKE(t0.c0)))AND(CAST(t0.c0 AS BLOB))))AND(0xffffffffe868d55c COLLATE BINARY)) DESC LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((((((((~ (t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(x'7d86')))AND(t0.c0)))))AND((t0.c0 IN ()))))OR((- (t0.c0)))))OR((NOT (NULL))))) ORDER BY '-1314067900' COLLATE NOCASE  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((UNICODE(t0.c0))))  NULLS LAST, HEX(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END) DESC, ((((((t0.c0)LIKE(t0.c0)))AND(CAST(t0.c0 AS BLOB))))AND(0xffffffffe868d55c COLLATE BINARY)) DESC;
SELECT * FROM t0 WHERE ((((((((((((~ (t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(x'7d86')))AND(t0.c0)))))AND((t0.c0 IN ()))))OR((- (t0.c0)))))OR((NOT (NULL)))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.26250284691374537 THEN NULL ELSE t0.c0 END COLLATE RTRIM))) ORDER BY '-1314067900' COLLATE NOCASE  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((UNICODE(t0.c0))))  NULLS LAST, HEX(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END) DESC, ((((((t0.c0)LIKE(t0.c0)))AND(CAST(t0.c0 AS BLOB))))AND(0xffffffffe868d55c COLLATE BINARY)) DESC LIMIT 0;
SELECT * FROM t0 WHERE (((((((((t0.c0)LIKE(t0.c0)))AND(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND ('302392444048763919 9024808704921209500T787 1401-617:')))))AND((((t0.c0, t0.c0))>=((t0.c0, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)LIKE(t0.c0)))AND(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND ('302392444048763919 9024808704921209500T787 1401-617:')))))AND((((t0.c0, t0.c0))>((t0.c0, t0.c0))))));
SELECT * FROM t0 WHERE (((((((((t0.c0)LIKE(t0.c0)))AND(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND ('302392444048763919 9024808704921209500T787 1401-617:')))))AND((((t0.c0, t0.c0))>=((t0.c0, t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)LIKE(t0.c0)))AND(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND ('302392444048763919 9024808704921209500T787 1401-617:')))))AND((((t0.c0, t0.c0))>((t0.c0, t0.c0))))));
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'f380' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)*(CAST(t0.c0 AS REAL))));
SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'f380' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)*(CAST(t0.c0 AS REAL))))AND(((t0.c0)IS(t0.c0)) COLLATE BINARY))) ORDER BY -1917301131 DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY 0Xffffffff8db84e75 DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'f380' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)*(CAST(t0.c0 AS REAL))));
SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'f380' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)*(CAST(t0.c0 AS REAL))))AND(((t0.c0)IS(t0.c0)) COLLATE BINARY))) ORDER BY -1917301131 DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY 0Xffffffff8db84e75 DESC  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)==(t0.c0))) ISNULL)) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB)  NULLS FIRST, (+ (((t0.c0)-(t0.c0))));
SELECT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)=(t0.c0))) ISNULL)) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB)  NULLS FIRST, (+ (((t0.c0)-(t0.c0)))) LIMIT 1 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE ((((- (t0.c0)))||((t0.c0 IN ())))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB)  NULLS FIRST, (+ (((t0.c0)-(t0.c0)))) LIMIT 1;
SELECT ALL * FROM t0 WHERE (((t0.c0)AND(t0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY HEX(DISTINCT CASE WHEN t0.c0 THEN '1150163565' END) ASC  NULLS LAST, ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)AND(t0.c0)) COLLATE RTRIM COLLATE RTRIM)AND(((((+ (0.5111363111197662)), CAST(t0.c0 AS TEXT), t0.c0))<=((CAST(0.5120198878075523 AS BLOB), ((t0.c0)IS(t0.c0)), t0.c0 COLLATE RTRIM)))))) ORDER BY HEX(DISTINCT CASE WHEN t0.c0 THEN '1150163565' END) ASC  NULLS LAST, ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST LIMIT 0X3;
SELECT ALL * FROM t0 WHERE (((t0.c0)AND(t0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY HEX(DISTINCT CASE WHEN t0.c0 THEN '1150163565' END) ASC  NULLS LAST, ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)AND(t0.c0)) COLLATE RTRIM COLLATE RTRIM)AND(((((+ (0.5111363111197662)), CAST(t0.c0 AS TEXT), t0.c0))<=((CAST(0.5120198878075523 AS BLOB), ((t0.c0)IS(t0.c0)), t0.c0 COLLATE RTRIM)))))) ORDER BY HEX(DISTINCT CASE WHEN t0.c0 THEN '1150163565' END) ASC  NULLS LAST, ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST LIMIT 0X3;
SELECT ALL COUNT(*) FROM t0 WHERE ('hz
u+w');
SELECT ALL COUNT(*) FROM t0 WHERE ('hz
u+w') INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE ((~ ((((t0.c0, t0.c0))!=((t0.c0, t0.c0))))));
SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (~ (t0.c0)) ASC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((t0.c0)AND((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((LIKELIHOOD(DISTINCT t0.c0, t0.c0))))))) ORDER BY ((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS TRUE) LIMIT 0X0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE)*(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (t0.c0 COLLATE BINARY, t0.c0 COLLATE BINARY)) DESC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE NOCASE)*(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ORDER BY NULL  NULLS LAST, (((((t0.c0)LIKE(t0.c0)), TYPEOF(t0.c0)))<((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), t0.c0))) DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (((((((LIKELY(DISTINCT t0.c0))AND(((t0.c0) ISNULL))))AND(LIKELY(t0.c0))))OR((t0.c0 IN ())))) ORDER BY NULL  NULLS LAST, (((((t0.c0)LIKE(t0.c0)), TYPEOF(t0.c0)))<((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), t0.c0))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE (((((t0.c0)OR(x'a84727')))+(t0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(x'a84727')))+(t0.c0 COLLATE NOCASE)))AND(((highlight(t0.c0, NULL, t0.c0, t0.c0))OR(((t0.c0) BETWEEN (t0.c0) AND ('lW'))))))) ORDER BY COALESCE(DISTINCT t0.c0 COLLATE NOCASE, ((t0.c0) IS FALSE), ((t0.c0) IS FALSE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END, t0.c0 COLLATE RTRIM), t0.c0 INTERSECT SELECT * FROM t0 NOT INDEXED WHERE (CASE WHEN t0.c0 THEN t0.c0 END COLLATE BINARY) ORDER BY COALESCE(DISTINCT t0.c0 COLLATE NOCASE, ((t0.c0) IS FALSE), ((t0.c0) IS FALSE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END, t0.c0 COLLATE RTRIM), t0.c0;
SELECT * FROM t0 WHERE (((((t0.c0)OR(x'a84727')))+(t0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(x'a84727')))+(t0.c0 COLLATE NOCASE)))AND(((highlight(t0.c0, NULL, t0.c0, t0.c0))OR(((t0.c0) BETWEEN (t0.c0) AND ('lW'))))))) ORDER BY COALESCE(DISTINCT t0.c0 COLLATE NOCASE, ((t0.c0) IS FALSE), ((t0.c0) IS FALSE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END, t0.c0 COLLATE RTRIM), t0.c0 INTERSECT SELECT * FROM t0 NOT INDEXED WHERE (CASE WHEN t0.c0 THEN t0.c0 END COLLATE BINARY) ORDER BY COALESCE(DISTINCT t0.c0 COLLATE NOCASE, ((t0.c0) IS FALSE), ((t0.c0) IS FALSE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END, t0.c0 COLLATE RTRIM), t0.c0;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS BLOB)) BETWEEN (((t0.c0)-(t0.c0))) AND (0X1b2f6ed5)) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c0)AND(CAST((t0.c0 IN (t0.c0, t0.c0)) AS BLOB)))) ORDER BY CAST((t0.c0 IN ()) AS BLOB)  NULLS FIRST, ((((t0.c0)OR(t0.c0))) NOT BETWEEN ((((t0.c0))>=((t0.c0)))) AND ((((t0.c0, t0.c0))<((t0.c0, 'HVç'))))) ASC  NULLS LAST, ((((json(t0.c0))OR(CAST(t0.c0 AS NUMERIC))))OR((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((-9509221, t0.c0)))))  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS BLOB)) BETWEEN (((t0.c0)-(t0.c0))) AND (0X1b2f6ed5)) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c0)AND(CAST((t0.c0 IN (t0.c0, t0.c0)) AS BLOB)))) ORDER BY CAST((t0.c0 IN ()) AS BLOB)  NULLS FIRST, ((((t0.c0)OR(t0.c0))) NOT BETWEEN ((((t0.c0))>=((t0.c0)))) AND ((((t0.c0, t0.c0))<((t0.c0, 'HVç'))))) ASC  NULLS LAST, ((((json(t0.c0))OR(CAST(t0.c0 AS NUMERIC))))OR((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((-9509221, t0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (0X71a0e00d) ORDER BY (0.30378565880311725 IN (t0.c0)) ASC, (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (0x71a0e00d) ORDER BY (0.30378565880311725 IN (t0.c0)) ASC, (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT ALL * FROM t0 WHERE (0X71a0e00d) ORDER BY (0.30378565880311725 IN (t0.c0)) ASC, (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (0x71a0e00d) ORDER BY (0.30378565880311725 IN (t0.c0)) ASC, (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT MIN(t0.c0) FROM t0 WHERE ((((t0.c0)*(t0.c0)) IN (((((((((x'695d')AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY (((t0.c0)) BETWEEN ((((((((t0.c0)AND('')))OR(t0.c0)))OR(t0.c0)))) AND ((((t0.c0)>>(t0.c0))))) ASC, '' ASC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((t0.c0)*(t0.c0)) IN (((((((((x'695d')AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY (((t0.c0)) BETWEEN ((((((((t0.c0)AND('')))OR(t0.c0)))OR(t0.c0)))) AND ((((t0.c0)>>(t0.c0))))) ASC, '' ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE))IS((('128605242')+(t0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST, (((((((((((t0.c0 IN (t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (x'6d')))))AND((~ (t0.c0)))))AND((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))))OR(CAST(NULL AS TEXT))))AND(((t0.c0)>>(t0.c0)))) DESC  NULLS LAST, (+ (((t0.c0)&(''))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE))IS((('128605242')+(t0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST, (((((((((((t0.c0 IN (t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (x'6d')))))AND((~ (t0.c0)))))AND((((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0))))))OR(CAST(NULL AS TEXT))))AND(((t0.c0)>>(t0.c0)))) DESC  NULLS LAST, (+ (((t0.c0)&(''))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE))IS((('128605242')+(t0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST, (((((((((((t0.c0 IN (t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (x'6d')))))AND((~ (t0.c0)))))AND((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))))OR(CAST(NULL AS TEXT))))AND(((t0.c0)>>(t0.c0)))) DESC  NULLS LAST, (+ (((t0.c0)&(''))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE))IS((('128605242')+(t0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST, (((((((((((t0.c0 IN (t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (x'6d')))))AND((~ (t0.c0)))))AND((((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0))))))OR(CAST(NULL AS TEXT))))AND(((t0.c0)>>(t0.c0)))) DESC  NULLS LAST, (+ (((t0.c0)&(''))))  NULLS LAST;
SELECT * FROM t0 WHERE ((('?s/*Tä¥³wsv' COLLATE BINARY) NOTNULL));
SELECT DISTINCT * FROM t0 WHERE ((((('?s/*Tä¥³wsv' COLLATE BINARY) NOTNULL))AND(CASE CASE 0.45589727047776096  WHEN t0.c0 THEN t0.c0 END  WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END))) ORDER BY CAST((NOT (t0.c0)) AS NUMERIC);
SELECT * FROM t0 WHERE ((('?s/*Tä¥³wsv' COLLATE BINARY) NOTNULL));
SELECT DISTINCT * FROM t0 WHERE ((((('?s/*Tä¥³wsv' COLLATE BINARY) NOTNULL))AND(CASE CASE 0.45589727047776096  WHEN t0.c0 THEN t0.c0 END  WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END))) ORDER BY CAST((NOT (t0.c0)) AS NUMERIC);
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))!=(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS NUMERIC) DESC, CAST(x'' AS BLOB)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))!=(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(CASE WHEN NULL THEN t0.c0 ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END))) ORDER BY (((((NOT (t0.c0)))OR((((t0.c0, t0.c0)) NOT BETWEEN ((1972789177, t0.c0)) AND ((t0.c0, t0.c0))))))AND('-830086025')) DESC  NULLS LAST, ((CAST(t0.c0 AS REAL)) NOTNULL)  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY (((((NOT (t0.c0)))OR((((t0.c0, t0.c0)) NOT BETWEEN ((0x75965fb9, t0.c0)) AND ((t0.c0, t0.c0))))))AND('-830086025')) DESC  NULLS LAST, ((CAST(t0.c0 AS REAL)) NOTNULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))!=(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS NUMERIC) DESC, CAST(x'' AS BLOB)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))!=(((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(CASE WHEN NULL THEN t0.c0 ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END))) ORDER BY (((((NOT (t0.c0)))OR((((t0.c0, t0.c0)) NOT BETWEEN ((1972789177, t0.c0)) AND ((t0.c0, t0.c0))))))AND('-830086025')) DESC  NULLS LAST, ((CAST(t0.c0 AS REAL)) NOTNULL)  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY (((((NOT (t0.c0)))OR((((t0.c0, t0.c0)) NOT BETWEEN ((0x75965fb9, t0.c0)) AND ((t0.c0, t0.c0))))))AND('-830086025')) DESC  NULLS LAST, ((CAST(t0.c0 AS REAL)) NOTNULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE));
SELECT * FROM t0 WHERE (((t0.c0) IS TRUE)) ORDER BY CAST(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS BLOB)  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) INTERSECT SELECT * FROM t0 WHERE (NULLIF((t0.c0 IN ()), (t0.c0 IN (t0.c0)))) ORDER BY CAST(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS BLOB)  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE));
SELECT * FROM t0 WHERE (((t0.c0) IS TRUE)) ORDER BY CAST(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS BLOB)  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) INTERSECT SELECT * FROM t0 WHERE (NULLIF((t0.c0 IN ()), (t0.c0 IN (t0.c0)))) ORDER BY CAST(((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS BLOB)  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB);
SELECT ALL * FROM t0 WHERE (((('-890639597')==(x'b0bf')) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY t0.c0 COLLATE RTRIM, ((NULLIF(DISTINCT t0.c0, t0.c0))-((+ (t0.c0)))) ASC;
SELECT * FROM t0 WHERE (((('-890639597')=(x'b0bf')) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY t0.c0 COLLATE RTRIM, ((NULLIF(DISTINCT t0.c0, t0.c0))-((+ (t0.c0)))) ASC LIMIT 3;
SELECT ALL * FROM t0 WHERE (((('-890639597')==(x'b0bf')) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY t0.c0 COLLATE RTRIM, ((NULLIF(DISTINCT t0.c0, t0.c0))-((+ (t0.c0)))) ASC;
SELECT * FROM t0 WHERE (((('-890639597')=(x'b0bf')) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY t0.c0 COLLATE RTRIM, ((NULLIF(DISTINCT t0.c0, t0.c0))-((+ (t0.c0)))) ASC LIMIT 3;
SELECT MAX(t0.c0) FROM t0 WHERE (0Xffffffffb26919f7) ORDER BY CAST(COALESCE(t0.c0, t0.c0) AS NUMERIC) ASC;
SELECT MAX(t0.c0) FROM t0 WHERE (((0xffffffffb26919f7)AND((NOT (CAST(t0.c0 AS BLOB)))))) ORDER BY ((HEX(t0.c0)) BETWEEN (CAST(t0.c0 AS REAL)) AND (CAST(t0.c0 AS TEXT)))  NULLS FIRST, x'ec'  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY CAST((t0.c0 IN ()) AS NUMERIC), CASE WHEN ((t0.c0)/(t0.c0)) THEN (+ (t0.c0)) WHEN ((t0.c0) NOTNULL) THEN (((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) WHEN t0.c0 THEN json_object(t0.c0, t0.c0, t0.c0, t0.c0) ELSE t0.c0 COLLATE RTRIM END DESC  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY t0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c0) NOT NULL))AND((~ (t0.c0)))))AND(CASE '^r'  WHEN t0.c0 THEN '241234946' ELSE t0.c0 END)))AND(CAST(-6.15690058E8 AS REAL))))AND(t0.c0 COLLATE NOCASE)))OR(t0.c0))) ORDER BY (((((t0.c0, t0.c0))>=((t0.c0, t0.c0)))) NOTNULL), 188415772 ASC  NULLS FIRST, CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))  WHEN CAST(t0.c0 AS BLOB) THEN CAST(t0.c0 AS INTEGER) WHEN 0.36205333572471965 THEN t0.c0 ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END DESC;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((((((t0.c0) NOT NULL))AND((~ (t0.c0)))))AND(CASE '^r'  WHEN t0.c0 THEN '241234946' ELSE t0.c0 END)))AND(CAST(-6.15690058E8 AS REAL))))AND(t0.c0 COLLATE NOCASE)))OR(t0.c0))) ORDER BY '118109865' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (t0.c0))) BETWEEN ((((t0.c0, '', t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) AND (LIKE(t0.c0, t0.c0))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((- (t0.c0))) BETWEEN ((((t0.c0, '', t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) AND (LIKE(t0.c0, t0.c0))))AND(CAST(CAST(t0.c0 AS TEXT) AS BLOB)))) LIMIT 0X2;
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c0)&('Jtk{'))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND ((NOT (t0.c0)))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0)&('Jtk{'))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND ((NOT (t0.c0)))))AND(RTRIM((+ (t0.c0)))))) ORDER BY ((0.2200354623857198)|((((NULL)) BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC, CAST((((t0.c0, t0.c0))>((t0.c0, t0.c0))) AS TEXT) LIMIT 0x1;
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c0) IS TRUE))/(((t0.c0)<>(t0.c0)))));
SELECT MIN(t0.c0) FROM t0 WHERE (((((t0.c0) IS TRUE))/(((t0.c0)<(t0.c0))))) ORDER BY ((((((((((((t0.c0)OR(t0.c0)))AND(NULL)))AND(0.5039013461364095)))AND(x'f8ca88')))OR(NULL)))AND((((t0.c0, t0.c0))<((t0.c0, t0.c0))))) DESC, t0.c0 ASC;
SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))AND(HEX(DISTINCT t0.c0))))OR(((t0.c0)||(t0.c0))))) ORDER BY (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<=((((t0.c0)+(t0.c0))))) DESC  NULLS FIRST, CASE WHEN (t0.c0 IN (t0.c0, x'df')) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)|(t0.c0)) END  NULLS FIRST, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((t0.c0 IN (t0.c0)))AND(HEX(DISTINCT t0.c0))))OR(((t0.c0)||(t0.c0)))))AND(((t0.c0 COLLATE BINARY) NOT BETWEEN ((~ (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) ORDER BY ((((t0.c0) NOT NULL)) NOT BETWEEN (('C0U' IN ())) AND ((t0.c0 IN (t0.c0)))) DESC  NULLS LAST, ((('-1847590845' IN ())) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5331141743570534 ELSE t0.c0 END) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, ((((((t0.c0)%(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'86d4' ELSE t0.c0 END))  NULLS LAST LIMIT 4 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0) NOT NULL)) NOT BETWEEN (('C0U' IN ())) AND ((t0.c0 IN (t0.c0)))) DESC  NULLS LAST, ((('-1847590845' IN ())) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5331141743570534 ELSE t0.c0 END) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, ((((((t0.c0)%(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'86d4' ELSE t0.c0 END))  NULLS LAST LIMIT 4;
SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))AND(HEX(DISTINCT t0.c0))))OR(((t0.c0)||(t0.c0))))) ORDER BY (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<=((((t0.c0)+(t0.c0))))) DESC  NULLS FIRST, CASE WHEN (t0.c0 IN (t0.c0, x'df')) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)|(t0.c0)) END  NULLS FIRST, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((t0.c0 IN (t0.c0)))AND(HEX(DISTINCT t0.c0))))OR(((t0.c0)||(t0.c0)))))AND(((t0.c0 COLLATE BINARY) NOT BETWEEN ((~ (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) ORDER BY ((((t0.c0) NOT NULL)) NOT BETWEEN (('C0U' IN ())) AND ((t0.c0 IN (t0.c0)))) DESC  NULLS LAST, ((('-1847590845' IN ())) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5331141743570534 ELSE t0.c0 END) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, ((((((t0.c0)%(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'86d4' ELSE t0.c0 END))  NULLS LAST LIMIT 4 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0) NOT NULL)) NOT BETWEEN (('C0U' IN ())) AND ((t0.c0 IN (t0.c0)))) DESC  NULLS LAST, ((('-1847590845' IN ())) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5331141743570534 ELSE t0.c0 END) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, ((((((t0.c0)%(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'86d4' ELSE t0.c0 END))  NULLS LAST LIMIT 4;
SELECT * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))-(t0.c0))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ((t0.c0 IN ())) AND (t0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0)=(t0.c0)))-(t0.c0))) ORDER BY t0.c0  NULLS LAST, ((SQLITE_SOURCE_ID())<(((t0.c0)-(t0.c0)))) DESC  NULLS LAST, HEX(t0.c0 COLLATE RTRIM) ASC LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (((t0.c0) ISNULL) COLLATE NOCASE) ORDER BY t0.c0  NULLS LAST, ((SQLITE_SOURCE_ID())<(((t0.c0)-(t0.c0)))) DESC  NULLS LAST, HEX(t0.c0 COLLATE RTRIM) ASC LIMIT 1;
SELECT * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))-(t0.c0))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ((t0.c0 IN ())) AND (t0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0)=(t0.c0)))-(t0.c0))) ORDER BY t0.c0  NULLS LAST, ((SQLITE_SOURCE_ID())<(((t0.c0)-(t0.c0)))) DESC  NULLS LAST, HEX(t0.c0 COLLATE RTRIM) ASC LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (((t0.c0) ISNULL) COLLATE NOCASE) ORDER BY t0.c0  NULLS LAST, ((SQLITE_SOURCE_ID())<(((t0.c0)-(t0.c0)))) DESC  NULLS LAST, HEX(t0.c0 COLLATE RTRIM) ASC LIMIT 1;
SELECT ALL * FROM t0 WHERE ((+ ((t0.c0 IN ())))) ORDER BY CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS TEXT) DESC, CASE GLOB(t0.c0, t0.c0)  WHEN -7.09828426E8 THEN ((t0.c0) IS TRUE) WHEN ((t0.c0)/(0X399d0aff)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)<=(t0.c0)) END DESC  NULLS LAST, (((t0.c0)AND(t0.c0)) IN (((x'09')&(t0.c0))));
SELECT ALL * FROM t0 WHERE ((+ ((t0.c0 IN ())))) ORDER BY (((- (t0.c0)))OR(x'')), ((((((((x'aed103')-(t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0)))AND(t0.c0)) ASC  NULLS LAST, ((((t0.c0)|(t0.c0)))LIKE(((t0.c0) BETWEEN (NULL) AND (t0.c0)))) INTERSECT SELECT * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))GLOB(t0.c0 COLLATE RTRIM))) ORDER BY (((- (t0.c0)))OR(x'')), ((((((((x'aed103')-(t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0)))AND(t0.c0)) ASC  NULLS LAST, ((((t0.c0)|(t0.c0)))LIKE(((t0.c0) BETWEEN (NULL) AND (t0.c0))));
SELECT ALL * FROM t0 WHERE ((+ ((t0.c0 IN ())))) ORDER BY CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS TEXT) DESC, CASE GLOB(t0.c0, t0.c0)  WHEN -7.09828426E8 THEN ((t0.c0) IS TRUE) WHEN ((t0.c0)/(0X399d0aff)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)<=(t0.c0)) END DESC  NULLS LAST, (((t0.c0)AND(t0.c0)) IN (((x'09')&(t0.c0))));
SELECT ALL * FROM t0 WHERE ((+ ((t0.c0 IN ())))) ORDER BY (((- (t0.c0)))OR(x'')), ((((((((x'aed103')-(t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0)))AND(t0.c0)) ASC  NULLS LAST, ((((t0.c0)|(t0.c0)))LIKE(((t0.c0) BETWEEN (NULL) AND (t0.c0)))) INTERSECT SELECT * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))GLOB(t0.c0 COLLATE RTRIM))) ORDER BY (((- (t0.c0)))OR(x'')), ((((((((x'aed103')-(t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0)))AND(t0.c0)) ASC  NULLS LAST, ((((t0.c0)|(t0.c0)))LIKE(((t0.c0) BETWEEN (NULL) AND (t0.c0))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ('858319432'))) IS TRUE)) ORDER BY '506037817' COLLATE RTRIM, (((TRIM(DISTINCT t0.c0), ((((t0.c0)AND(t0.c0)))AND(t0.c0))))<=((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)GLOB(t0.c0)))))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ('858319432'))) IS TRUE)) ORDER BY '506037817' COLLATE RTRIM, (((TRIM(DISTINCT t0.c0), ((((t0.c0)AND(t0.c0)))AND(t0.c0))))<=((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)GLOB(t0.c0)))))  NULLS LAST LIMIT 0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((t0.c0)OR(((t0.c0)-(t0.c0)))))OR((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, 0x138e2d87)) AND ((t0.c0, t0.c0, t0.c0, NULL)))))) ORDER BY (~ ((~ (t0.c0)))), x'0b' COLLATE RTRIM, CAST((t0.c0 IN (t0.c0, t0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((t0.c0)OR(((t0.c0)-(t0.c0)))))OR((((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, 328084871)) AND ((t0.c0, t0.c0, t0.c0, NULL)))))) ORDER BY (~ ((~ (t0.c0)))), x'0b' COLLATE RTRIM, CAST((t0.c0 IN (t0.c0, t0.c0)) AS TEXT) DESC  NULLS LAST INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY (~ ((~ (t0.c0)))), x'0b' COLLATE RTRIM, CAST((t0.c0 IN (t0.c0, t0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (INSTR(t0.c0, CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (INSTR(t0.c0, CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)>(t0.c0)) ELSE STRFTIME(t0.c0, t0.c0, 'uä¾£å¬,]##Z') END, (t0.c0 IN (CASE t0.c0  WHEN x'520d' THEN t0.c0 END));
SELECT ALL MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0)GLOB(t0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((t0.c0)AND(((COALESCE(DISTINCT x'', t0.c0, t0.c0, t0.c0))LIKE((+ (t0.c0))))))) ORDER BY CAST(t0.c0 COLLATE BINARY AS REAL), json_object((('eiHï£')>=(t0.c0)), (NOT (t0.c0)), (NOT (t0.c0)), ((t0.c0) IS TRUE)) LIMIT 0X3 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((0.06019279316577686)/(t0.c0)) IN ())) ORDER BY CAST(t0.c0 COLLATE BINARY AS REAL), json_object((('eiHï£')>=(t0.c0)), (NOT (t0.c0)), (NOT (t0.c0)), ((t0.c0) IS TRUE)) LIMIT 0x3;
SELECT MIN(t0.c0) FROM t0 WHERE (((((0.7362325863539384) NOT BETWEEN (t0.c0) AND (t0.c0)))LIKE(((t0.c0) NOTNULL))));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((0.7362325863539384) NOT BETWEEN (t0.c0) AND (t0.c0)))LIKE(((t0.c0) NOTNULL))))AND((((((t0.c0)AND(t0.c0)))OR(t0.c0)) IN ())))) ORDER BY (((((t0.c0, t0.c0))>=((t0.c0, t0.c0)))) NOTNULL) DESC LIMIT 0;
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))=((+ (t0.c0))))) ORDER BY t0.c0, ((((t0.c0)||(t0.c0)))=((t0.c0 IN (t0.c0, t0.c0))))  NULLS LAST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((CAST(t0.c0 AS NUMERIC))==((+ (t0.c0)))))AND((NOT (TYPEOF(DISTINCT t0.c0)))))) ORDER BY (+ (((t0.c0) ISNULL))), CAST(((t0.c0)>(t0.c0)) AS BLOB) LIMIT 1 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE ((((((t0.c0)OR(t0.c0))))>((((0.2258309110971427)IS NOT(t0.c0)))))) ORDER BY (+ (((t0.c0) ISNULL))), CAST(((t0.c0)>(t0.c0)) AS BLOB) LIMIT 0x1;
SELECT MIN(t0.c0) FROM t0 WHERE (CAST(t0.c0 AS REAL));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS REAL))AND((((t0.c0)<=(t0.c0)) IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN ((((t0.c0))<=((t0.c0)))) AND (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(0.041466476537064145)))AND(t0.c0)))OR(t0.c0))))) ORDER BY ((((((t0.c0) IS FALSE))OR((((t0.c0))==((t0.c0))))))OR((t0.c0 IN (t0.c0, t0.c0)))), ((0.2073229377452851) IS TRUE) ASC;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0) IS FALSE)) NOT BETWEEN ((((t0.c0))<=((t0.c0)))) AND (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(0.041466476537064145)))AND(t0.c0)))OR(t0.c0)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM))) ORDER BY ((((((t0.c0) IS FALSE))OR((((t0.c0))==((t0.c0))))))OR((t0.c0 IN (t0.c0, t0.c0)))), ((0.2073229377452851) IS TRUE) ASC LIMIT 0x0 INTERSECT SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c0)<>(t0.c0))))) ORDER BY ((((((t0.c0) IS FALSE))OR((((t0.c0))==((t0.c0))))))OR((t0.c0 IN (t0.c0, t0.c0)))), ((0.2073229377452851) IS TRUE) ASC LIMIT 0X0;
SELECT * FROM t0 WHERE (((~ (t0.c0)) IN (t0.c0 COLLATE RTRIM))) ORDER BY ((COALESCE(t0.c0, t0.c0))-(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST;
SELECT * FROM t0 WHERE (((((~ (t0.c0)) IN (t0.c0 COLLATE RTRIM)))AND(((t0.c0)AND(t0.c0)) COLLATE RTRIM))) ORDER BY t0.c0 ASC LIMIT 0X0;
SELECT * FROM t0 WHERE (((~ (t0.c0)) IN (t0.c0 COLLATE RTRIM))) ORDER BY ((COALESCE(t0.c0, t0.c0))-(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST;
SELECT * FROM t0 WHERE (((((~ (t0.c0)) IN (t0.c0 COLLATE RTRIM)))AND(((t0.c0)AND(t0.c0)) COLLATE RTRIM))) ORDER BY t0.c0 ASC LIMIT 0X0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (0.8040968095692381) AND (t0.c0))) BETWEEN ('?ã©G') AND (((t0.c0) IS FALSE)))) ORDER BY CASE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.36890131733650666 END  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (0.8040968095692381) AND (t0.c0))) BETWEEN ('?ã©G') AND (((t0.c0) IS FALSE))))AND(TRIM(DISTINCT CASE t0.c0  WHEN t0.c0 THEN x'' ELSE t0.c0 END, ((t0.c0)=(t0.c0)))))) ORDER BY (((t0.c0))>=((t0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (t0.c0) LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST(CASE t0.c0  WHEN '1433387838' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER)) LIMIT 2;
SELECT * FROM t0 WHERE ((~ (t0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE ((((~ (t0.c0 COLLATE BINARY)))AND(((+ (t0.c0)) IN ())))) LIMIT 0X1 INTERSECT SELECT ALL * FROM t0 WHERE (0.46893913169343937) LIMIT 1;
SELECT * FROM t0 WHERE ((~ (t0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE ((((~ (t0.c0 COLLATE BINARY)))AND(((+ (t0.c0)) IN ())))) LIMIT 0X1 INTERSECT SELECT ALL * FROM t0 WHERE (0.46893913169343937) LIMIT 1;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL * FROM t0 WHERE (x'e2') ORDER BY (~ (CAST(t0.c0 AS REAL))) DESC, ((((((((((DATETIME(t0.c0, t0.c0, t0.c0))AND(x'')))OR(((t0.c0)IS(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (NULL)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(((t0.c0)AND(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (x'e2') ORDER BY (~ (CAST(t0.c0 AS REAL))) DESC, ((((((((((DATETIME(t0.c0, t0.c0, t0.c0))AND(x'')))OR(((t0.c0)IS(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (NULL)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(((t0.c0)AND(t0.c0)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((x'c625cc', t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)GLOB(t0.c0)) ELSE NULLIF(DISTINCT t0.c0, t0.c0) END) ORDER BY (~ (CAST(t0.c0 AS REAL))) DESC, ((((((((((DATETIME(t0.c0, t0.c0, t0.c0))AND(x'')))OR(((t0.c0)IS(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (NULL)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(((t0.c0)AND(t0.c0)))) LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (x'e2') ORDER BY (~ (CAST(t0.c0 AS REAL))) DESC, ((((((((((DATETIME(t0.c0, t0.c0, t0.c0))AND(x'')))OR(((t0.c0)IS(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (NULL)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(((t0.c0)AND(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (x'e2') ORDER BY (~ (CAST(t0.c0 AS REAL))) DESC, ((((((((((DATETIME(t0.c0, t0.c0, t0.c0))AND(x'')))OR(((t0.c0)IS(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (NULL)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(((t0.c0)AND(t0.c0)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((x'c625cc', t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)GLOB(t0.c0)) ELSE NULLIF(DISTINCT t0.c0, t0.c0) END) ORDER BY (~ (CAST(t0.c0 AS REAL))) DESC, ((((((((((DATETIME(t0.c0, t0.c0, t0.c0))AND(x'')))OR(((t0.c0)IS(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (NULL)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(((t0.c0)AND(t0.c0)))) LIMIT 0x0;
SELECT MAX(t0.c0) FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) ORDER BY 'r&1' ASC, (((((t0.c0, t0.c0))==((t0.c0, t0.c0))))>=((((1.430672166E9))<((t0.c0)))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT))AND(((0.9821003275489171) NOTNULL)))) ORDER BY 'r&1' ASC, (((((t0.c0, t0.c0))=((t0.c0, t0.c0))))>=((((1.430672166E9))<((t0.c0))))) LIMIT 0;
SELECT ALL * FROM t0 WHERE (CASE CAST(t0.c0 AS NUMERIC)  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN -9.44381496E8 END);
SELECT DISTINCT * FROM t0 WHERE (((CASE CAST(t0.c0 AS NUMERIC)  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN -9.44381496E8 END)AND((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ((t0.c0 IN (t0.c0))))))) ORDER BY ((((((t0.c0)OR(t0.c0)))AND('2119975713')))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST, 0.09360093746064324 COLLATE BINARY, -395782820 DESC LIMIT 0;
SELECT ALL * FROM t0 WHERE (CASE CAST(t0.c0 AS NUMERIC)  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN -9.44381496E8 END);
SELECT DISTINCT * FROM t0 WHERE (((CASE CAST(t0.c0 AS NUMERIC)  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN -9.44381496E8 END)AND((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ((t0.c0 IN (t0.c0))))))) ORDER BY ((((((t0.c0)OR(t0.c0)))AND('2119975713')))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST, 0.09360093746064324 COLLATE BINARY, -395782820 DESC LIMIT 0;
SELECT ALL * FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOTNULL));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOTNULL)) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE RTRIM)))AND(t0.c0)))AND(((t0.c0)>>(t0.c0))))) LIMIT 0x2;
SELECT ALL * FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOTNULL));
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOTNULL)) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE RTRIM)))AND(t0.c0)))AND(((t0.c0)>>(t0.c0))))) LIMIT 0x2;
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS TEXT)) ORDER BY json_extract(CAST(t0.c0 AS TEXT), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (((2.24546577E8, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))), CAST(t0.c0 AS TEXT)) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 COLLATE NOCASE AS TEXT))AND(t0.c0))) ORDER BY json_extract(CAST(t0.c0 AS TEXT), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (((2.24546577E8, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))), CAST(t0.c0 AS TEXT)) ASC INTERSECT SELECT COUNT(*) FROM t0 WHERE (((t0.c0)IS(t0.c0)) COLLATE BINARY) ORDER BY json_extract(CAST(t0.c0 AS TEXT), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (((2.24546577E8, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))), CAST(t0.c0 AS TEXT)) ASC;
SELECT MAX(t0.c0) FROM t0 WHERE (CAST((('ä¼')<<(t0.c0)) AS REAL)) ORDER BY NULLIF(((t0.c0)<>(t0.c0)), TRIM(DISTINCT t0.c0));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CAST((('ä¼')<<(t0.c0)) AS REAL)) ORDER BY (((t0.c0))==((NULL))) DESC LIMIT 1;
SELECT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0, t0.c0, '')) BETWEEN ((t0.c0, 'c', t0.c0)) AND ((t0.c0, t0.c0, x''))))LIKE(t0.c0)));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((t0.c0, t0.c0, '')) BETWEEN ((t0.c0, 'c', t0.c0)) AND ((t0.c0, t0.c0, x''))))LIKE(t0.c0))) ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (t0.c0 IN (t0.c0)) ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END LIMIT 1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (t0.c0);
SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0))>((t0.c0))) IN ('V4ëel', ((t0.c0) NOT BETWEEN (t0.c0) AND ('-63195965'))))  NULLS LAST, LTRIM(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, t0.c0) ASC  NULLS LAST, (NOT (NULL))  NULLS FIRST INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST((+ (t0.c0)) AS NUMERIC)) ORDER BY ((((t0.c0))>((t0.c0))) IN ('V4ëel', ((t0.c0) NOT BETWEEN (t0.c0) AND ('-63195965'))))  NULLS LAST, LTRIM(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, t0.c0) ASC  NULLS LAST, (NOT (NULL))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((0.8448505593514208) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0)))OR(((t0.c0) NOTNULL))))AND(t0.c0 COLLATE RTRIM))) ORDER BY CAST(t0.c0 AS REAL) COLLATE RTRIM  NULLS LAST, 0.20428486943337643 DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((0.8448505593514208) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0)))OR(((t0.c0) NOTNULL))))AND(t0.c0 COLLATE RTRIM))) ORDER BY ((((t0.c0 COLLATE RTRIM)OR(CASE WHEN t0.c0 THEN x'0c61' END)))AND(((t0.c0) IS FALSE))) ASC LIMIT 0;
SELECT ALL * FROM t0 WHERE (((((((((0.8448505593514208) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0)))OR(((t0.c0) NOTNULL))))AND(t0.c0 COLLATE RTRIM))) ORDER BY CAST(t0.c0 AS REAL) COLLATE RTRIM  NULLS LAST, 0.20428486943337643 DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((0.8448505593514208) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0)))OR(((t0.c0) NOTNULL))))AND(t0.c0 COLLATE RTRIM))) ORDER BY ((((t0.c0 COLLATE RTRIM)OR(CASE WHEN t0.c0 THEN x'0c61' END)))AND(((t0.c0) IS FALSE))) ASC LIMIT 0;
SELECT * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) ORDER BY ((t0.c0)==(t0.c0)) COLLATE RTRIM, ((t0.c0) IS FALSE), t0.c0 COLLATE NOCASE COLLATE NOCASE DESC;
SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT))AND((((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))AND(0.07456648467420057 COLLATE RTRIM)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY ((STRFTIME(t0.c0, t0.c0, t0.c0)) ISNULL), (CAST(t0.c0 AS REAL) IN (((t0.c0)IS(t0.c0)))) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))&(t0.c0 COLLATE RTRIM))) ORDER BY ((STRFTIME(t0.c0, t0.c0, t0.c0)) ISNULL), (CAST(t0.c0 AS REAL) IN (((t0.c0)IS(t0.c0)))) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) ORDER BY ((t0.c0)==(t0.c0)) COLLATE RTRIM, ((t0.c0) IS FALSE), t0.c0 COLLATE NOCASE COLLATE NOCASE DESC;
SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT))AND((((((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))AND(0.07456648467420057 COLLATE RTRIM)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY ((STRFTIME(t0.c0, t0.c0, t0.c0)) ISNULL), (CAST(t0.c0 AS REAL) IN (((t0.c0)IS(t0.c0)))) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))&(t0.c0 COLLATE RTRIM))) ORDER BY ((STRFTIME(t0.c0, t0.c0, t0.c0)) ISNULL), (CAST(t0.c0 AS REAL) IN (((t0.c0)IS(t0.c0)))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL COUNT(*) FROM t0 WHERE ('-900553777');
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((('-900553777')AND(((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL)))) LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((((t0.c0) NOTNULL))))) LIMIT 0X1;
SELECT MAX(t0.c0) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))IS NOT(CAST(t0.c0 AS INTEGER)))) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'a7b0e2', t0.c0)))) NOTNULL);
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))IS NOT(CAST(t0.c0 AS INTEGER)))) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'a7b0e2', t0.c0)))) NOTNULL) LIMIT 0 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (0.4136967610449903) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'a7b0e2', t0.c0)))) NOTNULL) LIMIT 0;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))/(t0.c0 COLLATE NOCASE))) ORDER BY CAST((((t0.c0))>=((t0.c0))) AS BLOB);
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))/(t0.c0 COLLATE NOCASE))) ORDER BY '395298345'  NULLS LAST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ((NOT (t0.c0))))) ORDER BY '395298345'  NULLS LAST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))/(t0.c0 COLLATE NOCASE))) ORDER BY CAST((((t0.c0))>=((t0.c0))) AS BLOB);
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))/(t0.c0 COLLATE NOCASE))) ORDER BY '395298345'  NULLS LAST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ((NOT (t0.c0))))) ORDER BY '395298345'  NULLS LAST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))  NULLS LAST LIMIT 0x2;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS REAL)) ORDER BY (((((t0.c0 IN ('F^IL-6hj', t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(t0.c0 AS NUMERIC))) DESC  NULLS FIRST, ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL)  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CAST(t0.c0 COLLATE RTRIM AS REAL))AND((((t0.c0 IN ()))<=(((t0.c0) IS FALSE)))))) ORDER BY ((NULL) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((x'f2')) BETWEEN ((((t0.c0) NOT NULL))) AND ((((((((((0.42181945002714705)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((((x'f2')) BETWEEN ((((t0.c0) NOT NULL))) AND ((((((((((0.42181945002714705)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))))AND((((t0.c0)) BETWEEN ((NULL)) AND ((t0.c0))) COLLATE NOCASE))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST('330570485' AS REAL));
SELECT ALL * FROM t0 WHERE ((((x'f2')) BETWEEN ((((t0.c0) NOT NULL))) AND ((((((((((0.42181945002714705)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))));
SELECT DISTINCT * FROM t0 WHERE ((((((x'f2')) BETWEEN ((((t0.c0) NOT NULL))) AND ((((((((((0.42181945002714705)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))))AND((((t0.c0)) BETWEEN ((NULL)) AND ((t0.c0))) COLLATE NOCASE))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST('330570485' AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)>(t0.c0)))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(TYPEOF(t0.c0)))) ORDER BY LENGTH(((t0.c0)>>(t0.c0))) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((t0.c0)>(t0.c0)))AND((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))AND(TYPEOF(t0.c0))))AND(IFNULL(DISTINCT ((t0.c0)IS NOT(t0.c0)), ((t0.c0)>(t0.c0)))))) ORDER BY LENGTH(((t0.c0)>>(t0.c0))) ASC  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST(CAST(0.19014155537258703 AS INTEGER) AS TEXT)) ORDER BY LENGTH(((t0.c0)>>(t0.c0))) ASC  NULLS LAST LIMIT 0X1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (HEX(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND ('-1421934080')))) ORDER BY (~ ((t0.c0 IN ())))  NULLS LAST, t0.c0 DESC;
SELECT MAX(t0.c0) FROM t0 WHERE (((HEX(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND ('-1421934080'))))AND((((((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))==(COALESCE(t0.c0, t0.c0, t0.c0)))))) ORDER BY (~ ((t0.c0 IN ())))  NULLS LAST, t0.c0 DESC LIMIT 0X1 INTERSECT SELECT MAX(t0.c0) FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE BINARY) ORDER BY (~ ((t0.c0 IN ())))  NULLS LAST, t0.c0 DESC LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOT BETWEEN (NULL) AND (TOTAL_CHANGES()))) ORDER BY (NOT (((t0.c0)>(t0.c0)))) ASC, (- (CAST(t0.c0 AS BLOB))) DESC, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '1600490757' WHEN t0.c0 THEN 0xffffffffb26919f7 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((t0.c0)>(t0.c0))) NOT BETWEEN (NULL) AND (TOTAL_CHANGES())))AND(CAST(t0.c0 COLLATE RTRIM AS REAL)))) ORDER BY (NOT (((t0.c0)>(t0.c0)))) ASC, (- (CAST(t0.c0 AS BLOB))) DESC, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '1600490757' WHEN t0.c0 THEN 0Xffffffffb26919f7 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOT BETWEEN (NULL) AND (TOTAL_CHANGES()))) ORDER BY (NOT (((t0.c0)>(t0.c0)))) ASC, (- (CAST(t0.c0 AS BLOB))) DESC, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '1600490757' WHEN t0.c0 THEN 0xffffffffb26919f7 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((t0.c0)>(t0.c0))) NOT BETWEEN (NULL) AND (TOTAL_CHANGES())))AND(CAST(t0.c0 COLLATE RTRIM AS REAL)))) ORDER BY (NOT (((t0.c0)>(t0.c0)))) ASC, (- (CAST(t0.c0 AS BLOB))) DESC, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '1600490757' WHEN t0.c0 THEN 0Xffffffffb26919f7 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN t0.c0 THEN t0.c0 END DESC  NULLS LAST, (((t0.c0)) BETWEEN ((((t0.c0)&(t0.c0)))) AND (('-700789758'))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN t0.c0 THEN t0.c0 END DESC  NULLS LAST, (((t0.c0)) BETWEEN ((((t0.c0)&(t0.c0)))) AND (('-700789758'))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN t0.c0 THEN t0.c0 END DESC  NULLS LAST, (((t0.c0)) BETWEEN ((((t0.c0)&(t0.c0)))) AND (('-700789758'))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN t0.c0 THEN t0.c0 END DESC  NULLS LAST, (((t0.c0)) BETWEEN ((((t0.c0)&(t0.c0)))) AND (('-700789758'))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (LIKELY(((t0.c0) NOT NULL)));
SELECT DISTINCT * FROM t0 WHERE (((LIKELY(((t0.c0) NOT NULL)))AND(CAST(x'' AS NUMERIC)))) ORDER BY ((((t0.c0) NOTNULL)) NOTNULL) ASC, (('P	G8é
') IS TRUE) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c0)<(t0.c0)) ELSE (((t0.c0, t0.c0))<>((t0.c0, t0.c0))) END) ORDER BY ((((t0.c0) NOTNULL)) NOTNULL) ASC, (('P	G8é
') IS TRUE) ASC LIMIT 0;
SELECT * FROM t0 WHERE (LIKELY(((t0.c0) NOT NULL)));
SELECT DISTINCT * FROM t0 WHERE (((LIKELY(((t0.c0) NOT NULL)))AND(CAST(x'' AS NUMERIC)))) ORDER BY ((((t0.c0) NOTNULL)) NOTNULL) ASC, (('P	G8é
') IS TRUE) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c0)<(t0.c0)) ELSE (((t0.c0, t0.c0))<>((t0.c0, t0.c0))) END) ORDER BY ((((t0.c0) NOTNULL)) NOTNULL) ASC, (('P	G8é
') IS TRUE) ASC LIMIT 0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))%(x'9591')));
SELECT MAX(t0.c0) FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))%(x'9591')))AND((((t0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND (((+ (t0.c0))))))));
SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0);
SELECT MAX(t0.c0) FROM t0 WHERE (((t0.c0)AND('-1939732175'))) ORDER BY ((t0.c0) NOTNULL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) NOTNULL))));
SELECT DISTINCT * FROM t0 WHERE ((~ (((t0.c0) NOTNULL)))) ORDER BY t0.c0 COLLATE NOCASE  NULLS LAST, ((json_patch(t0.c0, t0.c0))>>((~ (t0.c0)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)/(t0.c0))))) ORDER BY t0.c0 COLLATE NOCASE  NULLS LAST, ((json_patch(t0.c0, t0.c0))>>((~ (t0.c0))));
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) NOTNULL))));
SELECT DISTINCT * FROM t0 WHERE ((~ (((t0.c0) NOTNULL)))) ORDER BY t0.c0 COLLATE NOCASE  NULLS LAST, ((json_patch(t0.c0, t0.c0))>>((~ (t0.c0)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)/(t0.c0))))) ORDER BY t0.c0 COLLATE NOCASE  NULLS LAST, ((json_patch(t0.c0, t0.c0))>>((~ (t0.c0))));
SELECT MIN(t0.c0) FROM t0 WHERE (x'') ORDER BY (t0.c0 IN ()) COLLATE NOCASE ASC;
SELECT MIN(t0.c0) FROM t0 WHERE (x'') ORDER BY ((((t0.c0)<<(t0.c0)))==(CAST(t0.c0 AS INTEGER))) ASC, ((t0.c0 IN (t0.c0, t0.c0)) IN ()) DESC LIMIT 1;
SELECT MAX(t0.c0) FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR('1856011619')))>>((((t0.c0, 0.052072171861412664))>=(('-1206924117', t0.c0))))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR('1856011619')))>>((((t0.c0, 0.052072171861412664))>=(('-1206924117', t0.c0))))))AND((((t0.c0)) BETWEEN ((ABS(t0.c0))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))))) LIMIT 2;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) IS FALSE));
SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((((t0.c0 IN ())) IS FALSE))AND(CAST(((t0.c0)IS NOT(t0.c0)) AS TEXT)))) INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (TIME(t0.c0, t0.c0, x'a7df', t0.c0, t0.c0, t0.c0) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), CAST(t0.c0 AS BLOB))) AND ((rtreenode(t0.c0, t0.c0), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))) ORDER BY (t0.c0 IN (json_object(t0.c0, t0.c0, t0.c0, t0.c0))), ((((t0.c0 COLLATE BINARY)AND((NOT (t0.c0)))))OR((t0.c0 IN ()))) DESC;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), CAST(t0.c0 AS BLOB))) AND ((rtreenode(t0.c0, t0.c0), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))) ORDER BY (NOT (t0.c0)) ASC LIMIT 2;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), CAST(t0.c0 AS BLOB))) AND ((rtreenode(t0.c0, t0.c0), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))) ORDER BY (t0.c0 IN (json_object(t0.c0, t0.c0, t0.c0, t0.c0))), ((((t0.c0 COLLATE BINARY)AND((NOT (t0.c0)))))OR((t0.c0 IN ()))) DESC;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), CAST(t0.c0 AS BLOB))) AND ((rtreenode(t0.c0, t0.c0), (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))))) ORDER BY (NOT (t0.c0)) ASC LIMIT 2;
SELECT MIN(t0.c0) FROM t0 WHERE (NULL) ORDER BY ROUND(t0.c0, (t0.c0 IN ())), t0.c0 ASC, x'' DESC;
SELECT MIN(t0.c0) FROM t0 WHERE (((NULL)AND((((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((0.4608273199093008)))))) ORDER BY t0.c0  NULLS LAST, ((((t0.c0)&(t0.c0)))==(CAST(t0.c0 AS BLOB))) ASC LIMIT 7 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (((t0.c0) NOT BETWEEN (((((((((((t0.c0)OR(t0.c0)))OR('-891931245')))AND(t0.c0)))OR(t0.c0)))AND(0.36055540281866794))) AND (t0.c0 COLLATE RTRIM))) ORDER BY t0.c0  NULLS LAST, ((((t0.c0)&(t0.c0)))==(CAST(t0.c0 AS BLOB))) ASC LIMIT 0X7;
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS INTEGER)) ORDER BY (+ (t0.c0));
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS INTEGER)) ORDER BY (+ (t0.c0));
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS INTEGER)) ORDER BY (+ (t0.c0));
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS INTEGER)) ORDER BY (+ (t0.c0));
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))IS NOT(CAST(t0.c0 AS REAL)))) ORDER BY x'844ca3', ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC, load_extension(CASE WHEN '141569879' THEN t0.c0 END, ((t0.c0) IS TRUE))  NULLS FIRST, ((t0.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN 0.23943390962726918 WHEN t0.c0 THEN 'Oï­Uê sÃK9\' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS LAST, (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), '84335673')) AND (((((t0.c0, t0.c0, t0.c0, x'')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0.5161499439895146, t0.c0, t0.c0))), (NOT (t0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))IS NOT(CAST(t0.c0 AS REAL))))AND((((((t0.c0)AND(t0.c0))))<=((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))))))) ORDER BY (((((((t0.c0 IN (t0.c0)))OR(((t0.c0)>=(t0.c0)))))AND(((t0.c0)<(x'')))))AND(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) DESC, ((((((((((t0.c0)AND('4Xymp(')))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(NULL)))OR((((t0.c0))<(('qxn[BV'))))))AND(t0.c0))  NULLS FIRST INTERSECT SELECT * FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS NUMERIC)) ORDER BY (((((((t0.c0 IN (t0.c0)))OR(((t0.c0)>=(t0.c0)))))AND(((t0.c0)<(x'')))))AND(((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) DESC, ((((((((((t0.c0)AND('4Xymp(')))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(NULL)))OR((((t0.c0))<(('qxn[BV'))))))AND(t0.c0))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))IS NOT(CAST(t0.c0 AS REAL)))) ORDER BY x'844ca3', ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC, load_extension(CASE WHEN '141569879' THEN t0.c0 END, ((t0.c0) IS TRUE))  NULLS FIRST, ((t0.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN 0.23943390962726918 WHEN t0.c0 THEN 'Oï­Uê sÃK9\' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS LAST, (((t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), '84335673')) AND (((((t0.c0, t0.c0, t0.c0, x'')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0.5161499439895146, t0.c0, t0.c0))), (NOT (t0.c0)))))  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS TEXT));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS TEXT)) LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE (NULLIF(CAST(t0.c0 AS NUMERIC), ((t0.c0)||(t0.c0))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((NULLIF(CAST(t0.c0 AS NUMERIC), ((t0.c0)||(t0.c0))))AND(CASE t0.c0 COLLATE BINARY  WHEN ((t0.c0)>>(t0.c0)) THEN ((t0.c0)>(t0.c0)) END))) ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0)) AND (((- (t0.c0)), (((t0.c0))!=((t0.c0))), (NOT (t0.c0)))))  NULLS FIRST, ((x'5b5d' IN ()) IN (json_remove(0.9685425476849948, t0.c0)))  NULLS LAST, (((t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE NULL END)) AND ((((((((0.8463475173894851)AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) LIMIT 0x4;
SELECT * FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()))AND(x''))) LIMIT 0X0;
SELECT * FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()))AND(x''))) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (((t0.c0) NOT NULL)) AND (IFNULL(t0.c0, t0.c0)))) ORDER BY ((((t0.c0)*(t0.c0))) NOT NULL) DESC  NULLS LAST, (((((t0.c0)<<(t0.c0))))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ASC, (json_insert(t0.c0, t0.c0, t0.c0, t0.c0) IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) ISNULL), ((t0.c0)OR(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (((t0.c0) NOT NULL)) AND (IFNULL(t0.c0, t0.c0))))AND(((((((t0.c0)OR(((((((((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0)))AND('1290875430')))AND(t0.c0)))OR(t0.c0)))))OR((t0.c0 IN (x'')))))AND(CAST(t0.c0 AS BLOB)))))) ORDER BY ((((t0.c0)*(t0.c0))) NOT NULL) DESC  NULLS LAST, (((((t0.c0)<<(t0.c0))))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ASC, (json_insert(t0.c0, t0.c0, t0.c0, t0.c0) IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) ISNULL), ((t0.c0)OR(t0.c0)))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)*(t0.c0))) NOT NULL) DESC  NULLS LAST, (((((t0.c0)<<(t0.c0))))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ASC, (json_insert(t0.c0, t0.c0, t0.c0, t0.c0) IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) ISNULL), ((t0.c0)OR(t0.c0)))) LIMIT 0x2;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (((t0.c0) NOT NULL)) AND (IFNULL(t0.c0, t0.c0)))) ORDER BY ((((t0.c0)*(t0.c0))) NOT NULL) DESC  NULLS LAST, (((((t0.c0)<<(t0.c0))))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ASC, (json_insert(t0.c0, t0.c0, t0.c0, t0.c0) IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) ISNULL), ((t0.c0)OR(t0.c0))));
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (((t0.c0) NOT NULL)) AND (IFNULL(t0.c0, t0.c0))))AND(((((((t0.c0)OR(((((((((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0)))AND('1290875430')))AND(t0.c0)))OR(t0.c0)))))OR((t0.c0 IN (x'')))))AND(CAST(t0.c0 AS BLOB)))))) ORDER BY ((((t0.c0)*(t0.c0))) NOT NULL) DESC  NULLS LAST, (((((t0.c0)<<(t0.c0))))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ASC, (json_insert(t0.c0, t0.c0, t0.c0, t0.c0) IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) ISNULL), ((t0.c0)OR(t0.c0)))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)*(t0.c0))) NOT NULL) DESC  NULLS LAST, (((((t0.c0)<<(t0.c0))))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ASC, (json_insert(t0.c0, t0.c0, t0.c0, t0.c0) IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) ISNULL), ((t0.c0)OR(t0.c0)))) LIMIT 0x2;
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN (t0.c0, t0.c0)) AS BLOB));
SELECT COUNT(*) FROM t0 WHERE (((CAST((t0.c0 IN (t0.c0, t0.c0)) AS BLOB))AND(t0.c0))) INTERSECT SELECT COUNT(*) FROM t0 WHERE ((HEX(t0.c0) IN (((t0.c0)||(t0.c0)))));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL));
SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL))AND(((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0)))AND(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))))) ORDER BY ((((0Xffffffffedb2ae1c) IS FALSE)) NOTNULL) ASC  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((- (((x'951a948115') BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((-307057124) IS FALSE)) NOTNULL) ASC  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL));
SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL))AND(((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0)))AND(((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))))) ORDER BY ((((0Xffffffffedb2ae1c) IS FALSE)) NOTNULL) ASC  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t0 WHERE ((- (((x'951a948115') BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((-307057124) IS FALSE)) NOTNULL) ASC  NULLS LAST LIMIT 0x2;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((+ (t0.c0)) AS REAL)) ORDER BY -1.882441895E9 ASC, ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))IS(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE x'' END));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CAST((+ (t0.c0)) AS REAL))AND(CAST(((t0.c0)||(t0.c0)) AS NUMERIC)))) ORDER BY -1.882441895E9 ASC, ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))IS(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE x'' END)) LIMIT 0x0;
SELECT MAX(t0.c0) FROM t0 WHERE (TRIM(t0.c0) COLLATE BINARY) ORDER BY t0.c0  NULLS FIRST, (((t0.c0 IN ())) NOT BETWEEN (((t0.c0)<(t0.c0))) AND (t0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((TRIM(t0.c0) COLLATE BINARY)AND(CASE WHEN CAST(t0.c0 AS REAL) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0)/(t0.c0)) THEN t0.c0 ELSE ((t0.c0) IS TRUE) END))) ORDER BY ((((((((((((((t0.c0)GLOB(t0.c0)))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND('-1528442103')))OR(t0.c0)))))OR(COALESCE(DISTINCT t0.c0, t0.c0))))OR(CASE WHEN t0.c0 THEN '1390860318' ELSE 0xffffffffe9fa3387 END)))AND(((t0.c0)*(t0.c0)))))AND(((t0.c0) IS TRUE))))OR(NULL)), ((CAST(t0.c0 AS BLOB))>>(t0.c0)) LIMIT 1 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((t0.c0) ISNULL) IN (CAST(t0.c0 AS REAL), (((NULL, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 1686247011, t0.c0)))))) ORDER BY ((((((((((((((t0.c0)GLOB(t0.c0)))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND('-1528442103')))OR(t0.c0)))))OR(COALESCE(DISTINCT t0.c0, t0.c0))))OR(CASE WHEN t0.c0 THEN '1390860318' ELSE -369478777 END)))AND(((t0.c0)*(t0.c0)))))AND(((t0.c0) IS TRUE))))OR(NULL)), ((CAST(t0.c0 AS BLOB))>>(t0.c0)) LIMIT 1;
SELECT ALL * FROM t0 WHERE (((UPPER(t0.c0)) ISNULL)) ORDER BY (((((NOT (t0.c0)))AND(((t0.c0)=(t0.c0)))))AND(0xffffffff85987ca6))  NULLS LAST, CASE 0.6513028896048324  WHEN (t0.c0 IN (t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN ((t0.c0)+(t0.c0)) THEN t0.c0 END, NULL ASC;
SELECT DISTINCT * FROM t0 WHERE (((((UPPER(t0.c0)) ISNULL))AND(((((t0.c0)AND(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(x'237d')))AND(t0.c0)))AND(t0.c0)))))AND(0xffffffff81168cb5))))) ORDER BY (((((NOT (t0.c0)))AND(((t0.c0)==(t0.c0)))))AND(0xffffffff85987ca6))  NULLS LAST, CASE 0.6513028896048324  WHEN (t0.c0 IN (t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN ((t0.c0)+(t0.c0)) THEN t0.c0 END, NULL ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (0.6842074051711644) ORDER BY (((((NOT (t0.c0)))AND(((t0.c0)=(t0.c0)))))AND(-2053604186))  NULLS LAST, CASE 0.6513028896048324  WHEN (t0.c0 IN (t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN ((t0.c0)+(t0.c0)) THEN t0.c0 END, NULL ASC LIMIT 1;
SELECT ALL * FROM t0 WHERE (((UPPER(t0.c0)) ISNULL)) ORDER BY (((((NOT (t0.c0)))AND(((t0.c0)=(t0.c0)))))AND(0xffffffff85987ca6))  NULLS LAST, CASE 0.6513028896048324  WHEN (t0.c0 IN (t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN ((t0.c0)+(t0.c0)) THEN t0.c0 END, NULL ASC;
SELECT DISTINCT * FROM t0 WHERE (((((UPPER(t0.c0)) ISNULL))AND(((((t0.c0)AND(((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(x'237d')))AND(t0.c0)))AND(t0.c0)))))AND(0xffffffff81168cb5))))) ORDER BY (((((NOT (t0.c0)))AND(((t0.c0)==(t0.c0)))))AND(0xffffffff85987ca6))  NULLS LAST, CASE 0.6513028896048324  WHEN (t0.c0 IN (t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN ((t0.c0)+(t0.c0)) THEN t0.c0 END, NULL ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (0.6842074051711644) ORDER BY (((((NOT (t0.c0)))AND(((t0.c0)=(t0.c0)))))AND(-2053604186))  NULLS LAST, CASE 0.6513028896048324  WHEN (t0.c0 IN (t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN ((t0.c0)+(t0.c0)) THEN t0.c0 END, NULL ASC LIMIT 1;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CAST(t0.c0 AS TEXT) COLLATE BINARY);
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS TEXT) COLLATE BINARY)AND((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())))) INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (1141979770);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0)|(t0.c0))  WHEN (~ (NULL)) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)==(t0.c0)) THEN t0.c0 WHEN ((t0.c0)OR(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE t0.c0 COLLATE BINARY END);
SELECT ALL * FROM t0 WHERE (((CASE ((t0.c0)|(t0.c0))  WHEN (~ (NULL)) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)=(t0.c0)) THEN t0.c0 WHEN ((t0.c0)OR(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE t0.c0 COLLATE BINARY END)AND(LIKELY(DISTINCT CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) ORDER BY CAST(t0.c0 AS TEXT), (((~ (t0.c0)))IS(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0)|(t0.c0))  WHEN (~ (NULL)) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)==(t0.c0)) THEN t0.c0 WHEN ((t0.c0)OR(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE t0.c0 COLLATE BINARY END);
SELECT ALL * FROM t0 WHERE (((CASE ((t0.c0)|(t0.c0))  WHEN (~ (NULL)) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0)=(t0.c0)) THEN t0.c0 WHEN ((t0.c0)OR(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE t0.c0 COLLATE BINARY END)AND(LIKELY(DISTINCT CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) ORDER BY CAST(t0.c0 AS TEXT), (((~ (t0.c0)))IS(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) NOT NULL)) ORDER BY CASE WHEN ((t0.c0)|(t0.c0)) THEN (t0.c0 IN (t0.c0)) ELSE ((t0.c0)LIKE(t0.c0)) END ASC, ((UNICODE(t0.c0))|(t0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) NOT NULL))AND(((t0.c0 COLLATE NOCASE) NOT NULL)))) ORDER BY CASE WHEN ((t0.c0)|(t0.c0)) THEN (t0.c0 IN (t0.c0)) ELSE ((t0.c0)LIKE(t0.c0)) END ASC, ((UNICODE(t0.c0))|(t0.c0 COLLATE NOCASE)) ASC  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))<>(t0.c0 COLLATE NOCASE))) ORDER BY CASE WHEN ((t0.c0)|(t0.c0)) THEN (t0.c0 IN (t0.c0)) ELSE ((t0.c0)LIKE(t0.c0)) END ASC, ((UNICODE(t0.c0))|(t0.c0 COLLATE NOCASE)) ASC  NULLS LAST LIMIT 2;
SELECT * FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) NOT NULL)) ORDER BY CASE WHEN ((t0.c0)|(t0.c0)) THEN (t0.c0 IN (t0.c0)) ELSE ((t0.c0)LIKE(t0.c0)) END ASC, ((UNICODE(t0.c0))|(t0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) NOT NULL))AND(((t0.c0 COLLATE NOCASE) NOT NULL)))) ORDER BY CASE WHEN ((t0.c0)|(t0.c0)) THEN (t0.c0 IN (t0.c0)) ELSE ((t0.c0)LIKE(t0.c0)) END ASC, ((UNICODE(t0.c0))|(t0.c0 COLLATE NOCASE)) ASC  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))<>(t0.c0 COLLATE NOCASE))) ORDER BY CASE WHEN ((t0.c0)|(t0.c0)) THEN (t0.c0 IN (t0.c0)) ELSE ((t0.c0)LIKE(t0.c0)) END ASC, ((UNICODE(t0.c0))|(t0.c0 COLLATE NOCASE)) ASC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t0 WHERE (((LIKELIHOOD(t0.c0, t0.c0)) ISNULL)) ORDER BY x'6e' COLLATE RTRIM ASC  NULLS FIRST, (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))=(t0.c0)) DESC;
SELECT DISTINCT * FROM t0 WHERE (((LIKELIHOOD(t0.c0, t0.c0)) ISNULL)) ORDER BY ((t0.c0 IN ()) IN ((~ ('-1021010107')))) ASC  NULLS LAST, NULL INTERSECT SELECT DISTINCT * FROM t0 WHERE ((~ (t0.c0 COLLATE RTRIM))) ORDER BY ((t0.c0 IN ()) IN ((~ ('-1021010107')))) ASC  NULLS LAST, NULL;
SELECT ALL * FROM t0 WHERE (((LIKELIHOOD(t0.c0, t0.c0)) ISNULL)) ORDER BY x'6e' COLLATE RTRIM ASC  NULLS FIRST, (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))=(t0.c0)) DESC;
SELECT * FROM t0 WHERE (LIKELIHOOD(TRIM(DISTINCT 0.26546282780279995), ((t0.c0) ISNULL)));
SELECT ALL * FROM t0 WHERE (((LIKELIHOOD(TRIM(DISTINCT 0.26546282780279995), ((t0.c0) ISNULL)))AND(((((t0.c0)*(t0.c0)))>((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) LIMIT 0;
SELECT * FROM t0 WHERE (LIKELIHOOD(TRIM(DISTINCT 0.26546282780279995), ((t0.c0) ISNULL)));
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL))>(CASE WHEN t0.c0 THEN t0.c0 WHEN 'buC
a' THEN t0.c0 WHEN -90922439 THEN t0.c0 END))) ORDER BY ((LIKELIHOOD(DISTINCT t0.c0, t0.c0)) NOT NULL) DESC, ((('-1857986604', t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) NOTNULL))));
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOT NULL))>(CASE WHEN t0.c0 THEN t0.c0 WHEN 'buC
a' THEN t0.c0 WHEN 0Xfffffffffa94a239 THEN t0.c0 END)))AND(((((t0.c0) IS TRUE))*('E'))))) ORDER BY ((LIKELIHOOD(DISTINCT t0.c0, t0.c0)) NOT NULL) DESC, ((('-1857986604', t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) NOTNULL)))) INTERSECT SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c0)|(t0.c0)) AS INTEGER)) ORDER BY ((LIKELIHOOD(DISTINCT t0.c0, t0.c0)) NOT NULL) DESC, ((('-1857986604', t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) NOTNULL))));
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL))>(CASE WHEN t0.c0 THEN t0.c0 WHEN 'buC
a' THEN t0.c0 WHEN -90922439 THEN t0.c0 END))) ORDER BY ((LIKELIHOOD(DISTINCT t0.c0, t0.c0)) NOT NULL) DESC, ((('-1857986604', t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) NOTNULL))));
SELECT ALL * FROM t0 WHERE (((((x'4a')OR(t0.c0)))-(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((((t0.c0)GLOB(t0.c0)))&(((t0.c0)<>(t0.c0)))) DESC;
SELECT ALL * FROM t0 WHERE (((((x'4a')OR(t0.c0)))-(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((((t0.c0)GLOB(t0.c0)))&(((t0.c0)!=(t0.c0)))) DESC LIMIT 0 INTERSECT SELECT * FROM t0 WHERE ('_f') ORDER BY ((((t0.c0)GLOB(t0.c0)))&(((t0.c0)!=(t0.c0)))) DESC LIMIT 0;
SELECT ALL * FROM t0 WHERE (((((x'4a')OR(t0.c0)))-(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((((t0.c0)GLOB(t0.c0)))&(((t0.c0)<>(t0.c0)))) DESC;
SELECT ALL * FROM t0 WHERE (((((x'4a')OR(t0.c0)))-(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((((t0.c0)GLOB(t0.c0)))&(((t0.c0)!=(t0.c0)))) DESC LIMIT 0 INTERSECT SELECT * FROM t0 WHERE ('_f') ORDER BY ((((t0.c0)GLOB(t0.c0)))&(((t0.c0)!=(t0.c0)))) DESC LIMIT 0;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)||(t0.c0)))IS(((t0.c0) IS TRUE))));
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((t0.c0)||(t0.c0)))IS(((t0.c0) IS TRUE))))AND((((t0.c0 IN (t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) IS FALSE)))))) INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN (('|' COLLATE RTRIM, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0) NOT NULL), ((((t0.c0)AND(t0.c0)))OR(t0.c0))))));
SELECT * FROM t0 WHERE ((((x'77'))!=((TRIM(t0.c0))))) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ()), (-1845640416 IN (((t0.c0)IS(t0.c0)))) DESC  NULLS LAST, ((((((((t0.c0) NOTNULL))OR(((t0.c0)|(t0.c0)))))AND(CAST(t0.c0 AS REAL))))OR(ABS(t0.c0)))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((x'77'))!=((TRIM(t0.c0))))) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ()), (0xffffffff91fdc320 IN (((t0.c0)IS(t0.c0)))) DESC  NULLS LAST, ((((((((t0.c0) NOTNULL))OR(((t0.c0)|(t0.c0)))))AND(CAST(t0.c0 AS REAL))))OR(ABS(t0.c0)))  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0)&(t0.c0))  WHEN (t0.c0 IN ()) THEN ((t0.c0)AND(t0.c0)) WHEN (t0.c0 IN ()) THEN t0.c0 ELSE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) END) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ()), (-1845640416 IN (((t0.c0)IS(t0.c0)))) DESC  NULLS LAST, ((((((((t0.c0) NOTNULL))OR(((t0.c0)|(t0.c0)))))AND(CAST(t0.c0 AS REAL))))OR(ABS(t0.c0)))  NULLS LAST LIMIT 0X1;
SELECT * FROM t0 WHERE ((((x'77'))!=((TRIM(t0.c0))))) ORDER BY (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ()), (-1845640416 IN (((t0.c0)IS(t0.c0)))) DESC  NULLS LAST, ((((((((t0.c0) NOTNULL))OR(((t0.c0)|(t0.c0)))))AND(CAST(t0.c0 AS REAL))))OR(ABS(t0.c0)))  NULLS LAST;
SELECT MIN(t0.c0) FROM t0 WHERE ((((NOT (t0.c0)))<<(CAST(t0.c0 AS BLOB))));
SELECT MIN(t0.c0) FROM t0 WHERE ((((((NOT (t0.c0)))<<(CAST(t0.c0 AS BLOB))))AND(CASE ((t0.c0) NOT BETWEEN (x'36') AND (t0.c0))  WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END WHEN t0.c0 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'b4' WHEN t0.c0 THEN t0.c0 END WHEN COALESCE(t0.c0, t0.c0) THEN x'' END))) ORDER BY '-1939732175' DESC  NULLS LAST, CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) ISNULL) WHEN ((t0.c0)>=(t0.c0)) THEN TRIM(t0.c0, t0.c0) END;
SELECT MIN(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, 0x53adfa70, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'', t0.c0, t0.c0))) COLLATE RTRIM) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ((- ('Çª'))) AND (((t0.c0) ISNULL)));
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, 0X53adfa70, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'', t0.c0, t0.c0))) COLLATE RTRIM) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ((- ('Çª'))) AND (((t0.c0) ISNULL))) LIMIT 1 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ((- ('Çª'))) AND (((t0.c0) ISNULL))) LIMIT 1;
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN 0.45506448162197466 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)!=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 NOT INDEXED WHERE (((CASE WHEN t0.c0 THEN 0.45506448162197466 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN t0.c0 THEN ((0.5209860533048108)<>(t0.c0)) END  NULLS FIRST, (((~ (t0.c0)))IS NOT(((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS FIRST, ((MIN(t0.c0, t0.c0, t0.c0)) IS TRUE) INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN t0.c0 THEN ((0.5209860533048108)!=(t0.c0)) END  NULLS FIRST, (((~ (t0.c0)))IS NOT(((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS FIRST, ((MIN(t0.c0, t0.c0, t0.c0)) IS TRUE);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN 0.45506448162197466 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)!=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 NOT INDEXED WHERE (((CASE WHEN t0.c0 THEN 0.45506448162197466 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN t0.c0 THEN ((0.5209860533048108)<>(t0.c0)) END  NULLS FIRST, (((~ (t0.c0)))IS NOT(((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS FIRST, ((MIN(t0.c0, t0.c0, t0.c0)) IS TRUE) INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN t0.c0 THEN ((0.5209860533048108)!=(t0.c0)) END  NULLS FIRST, (((~ (t0.c0)))IS NOT(((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS FIRST, ((MIN(t0.c0, t0.c0, t0.c0)) IS TRUE);
SELECT MAX(t0.c0) FROM t0 WHERE ('Y,') ORDER BY 0.592228652801579 DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((('Y,')AND((((t0.c0 IN (t0.c0))) IS FALSE)))) ORDER BY CASE UPPER(DISTINCT t0.c0)  WHEN NULL COLLATE RTRIM THEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) END DESC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((NULL IN ())) ORDER BY CASE UPPER(DISTINCT t0.c0)  WHEN NULL COLLATE RTRIM THEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) END DESC  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (CAST(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CAST(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER))AND(NULL))) INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS REAL));
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS TRUE) IN (((t0.c0) NOT BETWEEN (t0.c0) AND ('1977846067'))))) ORDER BY CASE CAST(t0.c0 AS REAL)  WHEN '-1729398572' THEN ((t0.c0)|(t0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN ((t0.c0)<=(t0.c0)) END, CAST(t0.c0 AS NUMERIC) COLLATE BINARY;
SELECT * FROM t0 WHERE ((((t0.c0) IS TRUE) IN (((t0.c0) NOT BETWEEN (t0.c0) AND ('1977846067'))))) ORDER BY ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c0 IN (t0.c0)))))AND(((t0.c0)!=(t0.c0))))  NULLS FIRST, (((((t0.c0 IN ()))OR((t0.c0 IN (t0.c0)))))AND('188415772'))  NULLS LAST LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS TRUE) IN (((t0.c0) NOT BETWEEN (t0.c0) AND ('1977846067'))))) ORDER BY CASE CAST(t0.c0 AS REAL)  WHEN '-1729398572' THEN ((t0.c0)|(t0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN ((t0.c0)<=(t0.c0)) END, CAST(t0.c0 AS NUMERIC) COLLATE BINARY;
SELECT * FROM t0 WHERE ((((t0.c0) IS TRUE) IN (((t0.c0) NOT BETWEEN (t0.c0) AND ('1977846067'))))) ORDER BY ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c0 IN (t0.c0)))))AND(((t0.c0)!=(t0.c0))))  NULLS FIRST, (((((t0.c0 IN ()))OR((t0.c0 IN (t0.c0)))))AND('188415772'))  NULLS LAST LIMIT 1;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (json_insert(t0.c0, t0.c0, t0.c0) IN (((t0.c0) IS TRUE), t0.c0 COLLATE BINARY)), (~ (((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (json_insert(t0.c0, t0.c0, t0.c0) IN (((t0.c0) IS TRUE), t0.c0 COLLATE BINARY)), (~ (((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (ABS(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0X702e48c3 THEN t0.c0 END)) ORDER BY (json_insert(t0.c0, t0.c0, t0.c0) IN (((t0.c0) IS TRUE), t0.c0 COLLATE BINARY)), (~ (((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS LAST;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (json_insert(t0.c0, t0.c0, t0.c0) IN (((t0.c0) IS TRUE), t0.c0 COLLATE BINARY)), (~ (((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (json_insert(t0.c0, t0.c0, t0.c0) IN (((t0.c0) IS TRUE), t0.c0 COLLATE BINARY)), (~ (((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS LAST INTERSECT SELECT * FROM t0 WHERE (ABS(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0X702e48c3 THEN t0.c0 END)) ORDER BY (json_insert(t0.c0, t0.c0, t0.c0) IN (((t0.c0) IS TRUE), t0.c0 COLLATE BINARY)), (~ (((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE) ORDER BY (~ ((t0.c0 IN ()))), CASE json_extract(t0.c0, t0.c0, t0.c0, t0.c0)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((x'')) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN t0.c0 THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 END ASC;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE) ORDER BY (~ ((t0.c0 IN ()))), CASE json_extract(t0.c0, t0.c0, t0.c0, t0.c0)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((x'')) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN t0.c0 THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 END ASC INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (~ ((t0.c0 IN ()))), CASE json_extract(t0.c0, t0.c0, t0.c0, t0.c0)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((x'')) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN t0.c0 THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 END ASC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS REAL));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CAST(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS REAL))AND(((t0.c0 COLLATE RTRIM) ISNULL)))) LIMIT 0X4 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CAST(0Xffffffffff8daeb5 AS TEXT)) LIMIT 4;
SELECT * FROM t0 WHERE (UPPER(DISTINCT ((((((0.4832773780909223)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) ORDER BY 0.8336940589281648 DESC, CAST(t0.c0 AS BLOB) ASC  NULLS LAST, UNLIKELY(DISTINCT ((t0.c0)>(t0.c0)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT ((((((0.4832773780909223)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) ORDER BY 0.8336940589281648 DESC, CAST(t0.c0 AS BLOB) ASC  NULLS LAST, UNLIKELY(DISTINCT ((t0.c0)>(t0.c0)))  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (IFNULL(DISTINCT t0.c0, t0.c0)) AND ('9bb'))) ORDER BY 0.8336940589281648 DESC, CAST(t0.c0 AS BLOB) ASC  NULLS LAST, UNLIKELY(DISTINCT ((t0.c0)>(t0.c0)))  NULLS LAST LIMIT 0X1;
SELECT * FROM t0 WHERE (UPPER(DISTINCT ((((((0.4832773780909223)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) ORDER BY 0.8336940589281648 DESC, CAST(t0.c0 AS BLOB) ASC  NULLS LAST, UNLIKELY(DISTINCT ((t0.c0)>(t0.c0)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT ((((((0.4832773780909223)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) ORDER BY 0.8336940589281648 DESC, CAST(t0.c0 AS BLOB) ASC  NULLS LAST, UNLIKELY(DISTINCT ((t0.c0)>(t0.c0)))  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (IFNULL(DISTINCT t0.c0, t0.c0)) AND ('9bb'))) ORDER BY 0.8336940589281648 DESC, CAST(t0.c0 AS BLOB) ASC  NULLS LAST, UNLIKELY(DISTINCT ((t0.c0)>(t0.c0)))  NULLS LAST LIMIT 0X1;
SELECT * FROM t0 WHERE (((((t0.c0)|(t0.c0)))IS(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)|(t0.c0)))IS(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))AND(((t0.c0)/((+ (t0.c0))))))) LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'4de8e697ef' END)))AND((NOT (t0.c0))))) LIMIT 1;
SELECT * FROM t0 WHERE (((((t0.c0)|(t0.c0)))IS(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)|(t0.c0)))IS(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))AND(((t0.c0)/((+ (t0.c0))))))) LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'4de8e697ef' END)))AND((NOT (t0.c0))))) LIMIT 1;
SELECT * FROM t0 WHERE (CAST((- (t0.c0)) AS REAL));
SELECT DISTINCT * FROM t0 WHERE (CAST((- (t0.c0)) AS REAL)) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)|(t0.c0)))>>((NOT (t0.c0)))));
SELECT * FROM t0 WHERE (CAST((- (t0.c0)) AS REAL));
SELECT DISTINCT * FROM t0 WHERE (CAST((- (t0.c0)) AS REAL)) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)|(t0.c0)))>>((NOT (t0.c0)))));
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c0) ISNULL))) ORDER BY (((t0.c0, x'b9', t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (NULL)), t0.c0, LTRIM(t0.c0), (+ (t0.c0)))) AND ((t0.c0 COLLATE NOCASE, t0.c0, CAST(t0.c0 AS INTEGER), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ASC, t0.c0  NULLS LAST, (NOT (t0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((TYPEOF(DISTINCT ((t0.c0) ISNULL)))AND(CASE ((t0.c0)LIKE(t0.c0))  WHEN ((t0.c0)OR(t0.c0)) THEN LAST_INSERT_ROWID() ELSE ((t0.c0)OR(t0.c0)) END))) ORDER BY ((CAST(t0.c0 AS BLOB)) NOT BETWEEN ((('-722364497') ISNULL)) AND (LIKELY(t0.c0))) DESC, ((((t0.c0) ISNULL)) BETWEEN ((((t0.c0, 0x4cf13226))<((t0.c0, 'j')))) AND ((('1372401049') NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC, '241234946' ASC, CASE WHEN t0.c0 THEN CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1021010107' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE MIN('1120446299', t0.c0, t0.c0) END;
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c0) ISNULL))) ORDER BY (((t0.c0, x'b9', t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (NULL)), t0.c0, LTRIM(t0.c0), (+ (t0.c0)))) AND ((t0.c0 COLLATE NOCASE, t0.c0, CAST(t0.c0 AS INTEGER), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ASC, t0.c0  NULLS LAST, (NOT (t0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((TYPEOF(DISTINCT ((t0.c0) ISNULL)))AND(CASE ((t0.c0)LIKE(t0.c0))  WHEN ((t0.c0)OR(t0.c0)) THEN LAST_INSERT_ROWID() ELSE ((t0.c0)OR(t0.c0)) END))) ORDER BY ((CAST(t0.c0 AS BLOB)) NOT BETWEEN ((('-722364497') ISNULL)) AND (LIKELY(t0.c0))) DESC, ((((t0.c0) ISNULL)) BETWEEN ((((t0.c0, 0x4cf13226))<((t0.c0, 'j')))) AND ((('1372401049') NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC, '241234946' ASC, CASE WHEN t0.c0 THEN CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1021010107' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE MIN('1120446299', t0.c0, t0.c0) END;
SELECT * FROM t0 WHERE (x'') ORDER BY ((0.10134677590643815 IN (t0.c0, t0.c0)) IN ())  NULLS LAST, CASE NULL  WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)||(2.119975713E9)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0)<=(t0.c0)) WHEN CAST(t0.c0 AS BLOB) THEN t0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT * FROM t0 WHERE (x'') ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, (((t0.c0 IN ()))&(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0 WHERE (x'') ORDER BY ((0.10134677590643815 IN (t0.c0, t0.c0)) IN ())  NULLS LAST, CASE NULL  WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)||(2.119975713E9)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0)<=(t0.c0)) WHEN CAST(t0.c0 AS BLOB) THEN t0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((t0.c0) NOT NULL))LIKE(TYPEOF(DISTINCT t0.c0))) DESC  NULLS LAST, CAST((t0.c0 IN (t0.c0)) AS NUMERIC) DESC;
SELECT * FROM t0 WHERE ((((+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS NOT(((t0.c0) BETWEEN ('gã¦ZJ') AND (t0.c0))))))) ORDER BY ((((t0.c0) NOT NULL))LIKE(TYPEOF(DISTINCT t0.c0))) DESC  NULLS LAST, CAST((t0.c0 IN (t0.c0)) AS NUMERIC) DESC INTERSECT SELECT * FROM t0 WHERE (((((t0.c0)LIKE(t0.c0)))<=((~ (t0.c0))))) ORDER BY ((((t0.c0) NOT NULL))LIKE(TYPEOF(DISTINCT t0.c0))) DESC  NULLS LAST, CAST((t0.c0 IN (t0.c0)) AS NUMERIC) DESC;
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((t0.c0) NOT NULL))LIKE(TYPEOF(DISTINCT t0.c0))) DESC  NULLS LAST, CAST((t0.c0 IN (t0.c0)) AS NUMERIC) DESC;
SELECT * FROM t0 WHERE ((((+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS NOT(((t0.c0) BETWEEN ('gã¦ZJ') AND (t0.c0))))))) ORDER BY ((((t0.c0) NOT NULL))LIKE(TYPEOF(DISTINCT t0.c0))) DESC  NULLS LAST, CAST((t0.c0 IN (t0.c0)) AS NUMERIC) DESC INTERSECT SELECT * FROM t0 WHERE (((((t0.c0)LIKE(t0.c0)))<=((~ (t0.c0))))) ORDER BY ((((t0.c0) NOT NULL))LIKE(TYPEOF(DISTINCT t0.c0))) DESC  NULLS LAST, CAST((t0.c0 IN (t0.c0)) AS NUMERIC) DESC;
SELECT * FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND ('3dæ­c'))  WHEN (((t0.c0, t0.c0, NULL))!=((t0.c0, t0.c0, '-619418653'))) THEN ((t0.c0)>>(t0.c0)) WHEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((NULL, t0.c0))) END) ORDER BY ((CAST(t0.c0 AS INTEGER))LIKE(((t0.c0)<<(t0.c0))));
SELECT * FROM t0 WHERE (((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND ('3dæ­c'))  WHEN (((t0.c0, t0.c0, NULL))>((t0.c0, t0.c0, '-619418653'))) THEN ((t0.c0)>>(t0.c0)) WHEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((NULL, t0.c0))) END)AND(((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (t0.c0 COLLATE BINARY) AND ((t0.c0 IN (t0.c0))))))) ORDER BY ((CAST(t0.c0 AS INTEGER))LIKE(((t0.c0)<<(t0.c0)))) LIMIT 0x5 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS INTEGER))LIKE(((t0.c0)<<(t0.c0)))) LIMIT 0x5;
SELECT * FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND ('3dæ­c'))  WHEN (((t0.c0, t0.c0, NULL))!=((t0.c0, t0.c0, '-619418653'))) THEN ((t0.c0)>>(t0.c0)) WHEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((NULL, t0.c0))) END) ORDER BY ((CAST(t0.c0 AS INTEGER))LIKE(((t0.c0)<<(t0.c0))));
SELECT * FROM t0 WHERE (((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND ('3dæ­c'))  WHEN (((t0.c0, t0.c0, NULL))>((t0.c0, t0.c0, '-619418653'))) THEN ((t0.c0)>>(t0.c0)) WHEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE (((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((NULL, t0.c0))) END)AND(((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (t0.c0 COLLATE BINARY) AND ((t0.c0 IN (t0.c0))))))) ORDER BY ((CAST(t0.c0 AS INTEGER))LIKE(((t0.c0)<<(t0.c0)))) LIMIT 0x5 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS INTEGER))LIKE(((t0.c0)<<(t0.c0)))) LIMIT 0x5;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(1.63658766E9))) ISNULL)) ORDER BY CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c0  WHEN t0.c0 THEN '509058574' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5249751938844953 WHEN t0.c0 THEN t0.c0 END ELSE t0.c0 COLLATE BINARY END;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(1.63658766E9))) ISNULL))AND(((NULLIF(t0.c0, t0.c0))&(t0.c0))))) ORDER BY (+ (((t0.c0)IS(t0.c0)))), (+ (((t0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((('E8') NOT BETWEEN (t0.c0) AND (t0.c0)))IS NOT(NULL))) ORDER BY (+ (((((t0.c0)AND(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT * FROM t0 WHERE ((((('E8') NOT BETWEEN (t0.c0) AND (t0.c0)))IS NOT(NULL))) ORDER BY (+ (((((t0.c0)AND(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((('E8') NOT BETWEEN (t0.c0) AND (t0.c0)))IS NOT(NULL))) ORDER BY (+ (((((t0.c0)AND(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT * FROM t0 WHERE ((((('E8') NOT BETWEEN (t0.c0) AND (t0.c0)))IS NOT(NULL))) ORDER BY (+ (((((t0.c0)AND(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(((((((((t0.c0)AND(x'550952')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER)) ORDER BY (t0.c0 IN (((t0.c0)>>(t0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(((((((((t0.c0)AND(x'550952')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER))AND(CAST(CAST(t0.c0 AS BLOB) AS REAL)))) ORDER BY 0.8095600964173663 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0) IS TRUE) IN (((t0.c0)<=(t0.c0))))) ORDER BY 0.8095600964173663 ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(((((((((t0.c0)AND(x'550952')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER)) ORDER BY (t0.c0 IN (((t0.c0)>>(t0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(((((((((t0.c0)AND(x'550952')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER))AND(CAST(CAST(t0.c0 AS BLOB) AS REAL)))) ORDER BY 0.8095600964173663 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t0 WHERE ((((t0.c0) IS TRUE) IN (((t0.c0)<=(t0.c0))))) ORDER BY 0.8095600964173663 ASC  NULLS FIRST;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (IFNULL(DISTINCT ((t0.c0) IS TRUE), '1600490757'));
SELECT MAX(t0.c0) FROM t0 WHERE (IFNULL(DISTINCT ((t0.c0) IS TRUE), '1600490757')) INTERSECT SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c0) NOT NULL) IN ()));
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0))<=((0.8472165922687096, t0.c0))))AND(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) DESC, (~ (NULL)) DESC, ((CAST(t0.c0 AS REAL))OR((t0.c0 IN (t0.c0, t0.c0)))) DESC;
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0))<((0.8472165922687096, t0.c0))))AND(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0))))) ORDER BY ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(CAST(t0.c0 AS TEXT))))AND(((t0.c0)<>(t0.c0)))))AND((('-1520974497') BETWEEN (0.5101222170452878) AND (t0.c0)))), ((((CAST(t0.c0 AS TEXT))AND(CAST(t0.c0 AS REAL))))AND(t0.c0 COLLATE BINARY)), ((t0.c0)GLOB((+ (t0.c0)))) DESC;
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0))<=((0.8472165922687096, t0.c0))))AND(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) DESC, (~ (NULL)) DESC, ((CAST(t0.c0 AS REAL))OR((t0.c0 IN (t0.c0, t0.c0)))) DESC;
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0))<((0.8472165922687096, t0.c0))))AND(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0))))) ORDER BY ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(CAST(t0.c0 AS TEXT))))AND(((t0.c0)<>(t0.c0)))))AND((('-1520974497') BETWEEN (0.5101222170452878) AND (t0.c0)))), ((((CAST(t0.c0 AS TEXT))AND(CAST(t0.c0 AS REAL))))AND(t0.c0 COLLATE BINARY)), ((t0.c0)GLOB((+ (t0.c0)))) DESC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (((CAST(t0.c0 AS REAL)) ISNULL)) ORDER BY ((((((((t0.c0)OR(((t0.c0)OR(t0.c0)))))AND((- (t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), ((((((t0.c0)AND(t0.c0)))OR(x'0aed72'))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 8.85798053E8 END) AND (((0x2ac0e1ee)AND(t0.c0)))), ((((t0.c0 IN (t0.c0, '-1068271654'))))>=((x'e5c7')))  NULLS FIRST;
SELECT MIN(t0.c0) FROM t0 WHERE (((((CAST(t0.c0 AS REAL)) ISNULL))AND((((t0.c0, t0.c0)) BETWEEN ((((t0.c0)%(t0.c0)), ((NULL)>(t0.c0)))) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))))) ORDER BY ((0.22156744625165015) BETWEEN ('Re^/4g') AND ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))  NULLS LAST, CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (NOT (t0.c0)) ELSE ((((((t0.c0)AND(t0.c0)))AND('0.0')))AND(t0.c0)) END DESC, ((TYPEOF(DISTINCT t0.c0)) NOT BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND (NULLIF(t0.c0, x'a1d340')))  NULLS FIRST LIMIT 2;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) AS NUMERIC));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CAST((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) AS NUMERIC))AND((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END IN (((t0.c0)IS NOT(t0.c0)))))));
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ()))GLOB(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ()))GLOB(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM) LIMIT 0X1;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ()))GLOB(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ()))GLOB(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM) LIMIT 0X1;
SELECT * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND(((CAST(t0.c0 AS REAL)) IS TRUE)))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (-1.43302327E9) LIMIT 2;
SELECT * FROM t0 WHERE (t0.c0);
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND(((CAST(t0.c0 AS REAL)) IS TRUE)))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM t0 WHERE (-1.43302327E9) LIMIT 2;
SELECT * FROM t0 WHERE (((((((t0.c0)>(t0.c0)))AND((- (t0.c0)))))AND(((t0.c0) NOT BETWEEN ('HZ
U+W') AND (t0.c0)))));
SELECT * FROM t0 WHERE (((((((t0.c0)>(t0.c0)))AND((- (t0.c0)))))AND(((t0.c0) NOT BETWEEN ('HZ
U+W') AND (t0.c0))))) ORDER BY ((x'fb')|(t0.c0)) DESC, ((CAST(NULL AS NUMERIC)) BETWEEN (LIKE(t0.c0, t0.c0, 'F')) AND (CASE WHEN t0.c0 THEN t0.c0 END))  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY ((x'fb')|(t0.c0)) DESC, ((CAST(NULL AS NUMERIC)) BETWEEN (LIKE(t0.c0, t0.c0, 'F')) AND (CASE WHEN t0.c0 THEN t0.c0 END))  NULLS LAST LIMIT 0;
SELECT * FROM t0 WHERE (((((((t0.c0)>(t0.c0)))AND((- (t0.c0)))))AND(((t0.c0) NOT BETWEEN ('HZ
U+W') AND (t0.c0)))));
SELECT * FROM t0 WHERE (((((((t0.c0)>(t0.c0)))AND((- (t0.c0)))))AND(((t0.c0) NOT BETWEEN ('HZ
U+W') AND (t0.c0))))) ORDER BY ((x'fb')|(t0.c0)) DESC, ((CAST(NULL AS NUMERIC)) BETWEEN (LIKE(t0.c0, t0.c0, 'F')) AND (CASE WHEN t0.c0 THEN t0.c0 END))  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY ((x'fb')|(t0.c0)) DESC, ((CAST(NULL AS NUMERIC)) BETWEEN (LIKE(t0.c0, t0.c0, 'F')) AND (CASE WHEN t0.c0 THEN t0.c0 END))  NULLS LAST LIMIT 0;
SELECT * FROM t0 WHERE ((((t0.c0)>(NULL)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY NULL  NULLS LAST, ((((t0.c0)>(t0.c0))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((t0.c0 IN ())));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)>(NULL)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0 COLLATE BINARY)IS NOT((((x'f7bf', t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((-7.09828426E8, t0.c0, t0.c0, NULL, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))))) ORDER BY (- (t0.c0)) DESC  NULLS LAST, t0.c0 ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)>=(t0.c0)))AND(t0.c0)))AND(ABS(t0.c0))))AND(((t0.c0) ISNULL)))) ORDER BY (- (t0.c0)) DESC  NULLS LAST, t0.c0 ASC;
SELECT * FROM t0 WHERE ((((t0.c0)>(NULL)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY NULL  NULLS LAST, ((((t0.c0)>(t0.c0))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((t0.c0 IN ())));
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)>(NULL)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0 COLLATE BINARY)IS NOT((((x'f7bf', t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((-7.09828426E8, t0.c0, t0.c0, NULL, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))))) ORDER BY (- (t0.c0)) DESC  NULLS LAST, t0.c0 ASC INTERSECT SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)>=(t0.c0)))AND(t0.c0)))AND(ABS(t0.c0))))AND(((t0.c0) ISNULL)))) ORDER BY (- (t0.c0)) DESC  NULLS LAST, t0.c0 ASC;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE)AND((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (((((((((((t0.c0)OR(t0.c0)))AND(x'd04d')))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) AND ((((0.502746508288293)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) ORDER BY (- (((t0.c0)<=(t0.c0)))), ((CAST(t0.c0 AS BLOB))!=((t0.c0 IN (t0.c0, t0.c0))))  NULLS LAST, 1.977846067E9 COLLATE BINARY ASC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (CAST(t0.c0 AS BLOB), (- (t0.c0))))) ORDER BY (- (((t0.c0)<=(t0.c0)))), ((CAST(t0.c0 AS BLOB))<>((t0.c0 IN (t0.c0, t0.c0))))  NULLS LAST, 1.977846067E9 COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS TEXT))OR(((t0.c0) NOT NULL))))OR((t0.c0 IN ('PåXr^ew')))));
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS TEXT))OR(((t0.c0) NOT NULL))))OR((t0.c0 IN ('PåXr^ew'))))) ORDER BY CASE WHEN ((t0.c0)<<(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.3560245378064416 END WHEN (((t0.c0)) NOT BETWEEN ((x'8aafa0')) AND ((t0.c0))) THEN (+ (t0.c0)) WHEN 0.07215368742199335 THEN (t0.c0 IN ()) END LIMIT 0;
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS TEXT))OR(((t0.c0) NOT NULL))))OR((t0.c0 IN ('PåXr^ew')))));
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS TEXT))OR(((t0.c0) NOT NULL))))OR((t0.c0 IN ('PåXr^ew'))))) ORDER BY CASE WHEN ((t0.c0)<<(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.3560245378064416 END WHEN (((t0.c0)) NOT BETWEEN ((x'8aafa0')) AND ((t0.c0))) THEN (+ (t0.c0)) WHEN 0.07215368742199335 THEN (t0.c0 IN ()) END LIMIT 0;
SELECT * FROM t0 WHERE (((LIKELY(DISTINCT t0.c0))|((t0.c0 IN ()))));
SELECT * FROM t0 WHERE (((((LIKELY(DISTINCT t0.c0))|((t0.c0 IN ()))))AND((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, ((t0.c0) NOT NULL), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN ()), ((t0.c0)<>(t0.c0)))))))) ORDER BY CASE -298618260  WHEN NULL THEN (('-1112927373') NOT BETWEEN (NULL) AND (t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND ('2075271062')) THEN t0.c0 COLLATE NOCASE END ASC, (((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())  NULLS FIRST, CAST((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, 0.5167260144243013, t0.c0)) AND ((NULL, t0.c0, t0.c0, t0.c0, t0.c0))) AS INTEGER) DESC, CAST(((t0.c0) BETWEEN (x'37') AND (t0.c0)) AS TEXT) ASC;
SELECT * FROM t0 WHERE (((LIKELY(DISTINCT t0.c0))|((t0.c0 IN ()))));
SELECT * FROM t0 WHERE (((((LIKELY(DISTINCT t0.c0))|((t0.c0 IN ()))))AND((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, ((t0.c0) NOT NULL), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN ()), ((t0.c0)<>(t0.c0)))))))) ORDER BY CASE -298618260  WHEN NULL THEN (('-1112927373') NOT BETWEEN (NULL) AND (t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND ('2075271062')) THEN t0.c0 COLLATE NOCASE END ASC, (((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())  NULLS FIRST, CAST((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, 0.5167260144243013, t0.c0)) AND ((NULL, t0.c0, t0.c0, t0.c0, t0.c0))) AS INTEGER) DESC, CAST(((t0.c0) BETWEEN (x'37') AND (t0.c0)) AS TEXT) ASC;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (t0.c0 COLLATE NOCASE IN (((t0.c0)>(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ASC, ((t0.c0 IN ()) IN ((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0))))) DESC;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (t0.c0 COLLATE NOCASE IN (((t0.c0)>(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ASC, ((t0.c0 IN ()) IN ((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0))))) DESC INTERSECT SELECT * FROM t0 WHERE (ABS(DISTINCT CAST(t0.c0 AS BLOB))) ORDER BY (t0.c0 COLLATE NOCASE IN (((t0.c0)>(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ASC, ((t0.c0 IN ()) IN ((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0))))) DESC;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (t0.c0 COLLATE NOCASE IN (((t0.c0)>(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ASC, ((t0.c0 IN ()) IN ((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0))))) DESC;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (t0.c0 COLLATE NOCASE IN (((t0.c0)>(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ASC, ((t0.c0 IN ()) IN ((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0))))) DESC INTERSECT SELECT * FROM t0 WHERE (ABS(DISTINCT CAST(t0.c0 AS BLOB))) ORDER BY (t0.c0 COLLATE NOCASE IN (((t0.c0)>(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ASC, ((t0.c0 IN ()) IN ((((t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0))))) DESC;
SELECT MIN(t0.c0) FROM t0 WHERE (CAST((t0.c0 IN (t0.c0, t0.c0)) AS TEXT));
SELECT MIN(t0.c0) FROM t0 WHERE (CAST((t0.c0 IN (t0.c0, t0.c0)) AS TEXT)) ORDER BY (((((t0.c0)|(t0.c0)), t0.c0 COLLATE NOCASE))<>((t0.c0, CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ASC, ((((((t0.c0 COLLATE NOCASE)AND(LIKELIHOOD(t0.c0, t0.c0))))AND(((t0.c0)+(t0.c0)))))OR(t0.c0 COLLATE NOCASE)) ASC LIMIT 0x3;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(0.0)))AND(t0.c0)))OR(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>=((((((t0.c0)OR(t0.c0)))OR(x'246fd94e99')), (t0.c0 IN ()))))) ORDER BY '
bé¹<' DESC  NULLS LAST, (((t0.c0)+(t0.c0)) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(0.0)))AND(t0.c0)))OR(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>((((((t0.c0)OR(t0.c0)))OR(x'246fd94e99')), (t0.c0 IN ())))))AND(((t0.c0 COLLATE BINARY) NOT BETWEEN ((NOT (t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((0.47437616602600274)) AND ((t0.c0)))))))) ORDER BY ((CAST(t0.c0 AS INTEGER))<=(t0.c0 COLLATE BINARY)) DESC, NULL  NULLS LAST, -1532015074 DESC INTERSECT SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c0 IN (t0.c0)))OR((+ (0xffffffffa6a80969)))))OR(((t0.c0)*(t0.c0)))))AND(((t0.c0)GLOB(t0.c0))))) ORDER BY ((CAST(t0.c0 AS INTEGER))<=(t0.c0 COLLATE BINARY)) DESC, NULL  NULLS LAST, -1532015074 DESC;
SELECT MAX(t0.c0) FROM t0 WHERE (t0.c0) ORDER BY ((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE BINARY)))AND((((t0.c0, t0.c0, t0.c0, t0.c0, ''))<=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)!=(t0.c0)))) ASC, (((t0.c0 IN (x'0a')))<>(((t0.c0)LIKE(t0.c0))))  NULLS FIRST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((t0.c0)AND((+ ((((0X36bdd297, t0.c0))=((t0.c0, t0.c0)))))))) ORDER BY ((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE BINARY)))AND((((t0.c0, t0.c0, t0.c0, t0.c0, ''))<=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)!=(t0.c0)))) ASC, (((t0.c0 IN (x'0a')))<>(((t0.c0)LIKE(t0.c0))))  NULLS FIRST LIMIT 0X2;
SELECT * FROM t0 WHERE (((json_remove(t0.c0, t0.c0))<=(t0.c0))) ORDER BY (NULLIF(DISTINCT t0.c0, '-2018436282') IN (t0.c0))  NULLS LAST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((t0.c0 IN ())) AND (((t0.c0)OR(t0.c0)))), x'';
SELECT ALL * FROM t0 WHERE (((json_remove(t0.c0, t0.c0))<=(t0.c0))) ORDER BY (NULLIF(DISTINCT t0.c0, '-2018436282') IN (t0.c0))  NULLS LAST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((t0.c0 IN ())) AND (((t0.c0)OR(t0.c0)))), x'' LIMIT 0X0;
SELECT * FROM t0 WHERE (((json_remove(t0.c0, t0.c0))<=(t0.c0))) ORDER BY (NULLIF(DISTINCT t0.c0, '-2018436282') IN (t0.c0))  NULLS LAST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((t0.c0 IN ())) AND (((t0.c0)OR(t0.c0)))), x'';
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(((t0.c0) NOT NULL)))) ORDER BY t0.c0;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(((t0.c0) NOT NULL))))AND(LIKELY(t0.c0 COLLATE RTRIM)))) ORDER BY ((CHAR('3063615', t0.c0, t0.c0)) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c0) IS FALSE))) DESC, (('') ISNULL) DESC INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((t0.c0)GLOB(t0.c0))) IS TRUE)) ORDER BY ((CHAR('3063615', t0.c0, t0.c0)) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c0) IS FALSE))) DESC, (('') ISNULL) DESC;
SELECT MIN(t0.c0) FROM t0 WHERE ('1749792907') ORDER BY CASE ((t0.c0)LIKE(t0.c0))  WHEN x'c3' THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) END, '' ASC  NULLS FIRST, ((((x'')<<(t0.c0))) BETWEEN (0.04556938344711847) AND (((t0.c0)%(t0.c0)))) ASC  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((('1749792907')AND((NOT (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))))) ORDER BY -1528442103  NULLS LAST, CASE WHEN ((t0.c0)*(t0.c0)) THEN ((t0.c0)>>(x'ab')) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0))==((t0.c0))) WHEN (((t0.c0, t0.c0))<((0.5041104741976387, NULL))) THEN ((x'54') IS TRUE) WHEN ((((NULL)OR(t0.c0)))OR(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0)>(t0.c0)) ELSE t0.c0 END, 0.8856474969537438 LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) IS FALSE) AS INTEGER));
SELECT ALL * FROM t0 WHERE (((CAST(((t0.c0) IS FALSE) AS INTEGER))AND(json_array_length(NULLIF(t0.c0, t0.c0), t0.c0))));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) IS FALSE) AS INTEGER));
SELECT ALL * FROM t0 WHERE (((CAST(((t0.c0) IS FALSE) AS INTEGER))AND(json_array_length(NULLIF(t0.c0, t0.c0), t0.c0))));
SELECT * FROM t0 WHERE (json_array_length(((t0.c0)||(t0.c0)), (- (t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((json_array_length(((t0.c0)||(t0.c0)), (- (t0.c0))))AND(((((((((t0.c0 COLLATE RTRIM)AND(((t0.c0)>=(NULL)))))AND(x'')))AND((('-122510163')/(t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))));
SELECT * FROM t0 WHERE (json_array_length(((t0.c0)||(t0.c0)), (- (t0.c0))));
SELECT * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)AND(CAST(t0.c0 AS INTEGER))));
SELECT * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM) INTERSECT SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)AND(CAST(t0.c0 AS INTEGER))));
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((((~ (t0.c0))) NOT BETWEEN (LIKELIHOOD(t0.c0, t0.c0)) AND (UNLIKELY(t0.c0)))) ORDER BY t0.c0  NULLS FIRST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE ((((((~ (t0.c0))) NOT BETWEEN (LIKELIHOOD(t0.c0, t0.c0)) AND (UNLIKELY(t0.c0))))AND((((-1072703594)) NOT BETWEEN (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, x'48f7', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))) AND ((((('346329657'))=((t0.c0))))))))) ORDER BY CASE WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN ((t0.c0)-(t0.c0)) ELSE ABS(t0.c0) END, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.2084396100644914 END) AND (t0.c0)) DESC  NULLS LAST, json_valid(CAST(t0.c0 AS REAL))  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((t0.c0 COLLATE BINARY)OR(((t0.c0)&(t0.c0))))) ORDER BY CASE WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN ((t0.c0)-(t0.c0)) ELSE ABS(t0.c0) END, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.2084396100644914 END) AND (t0.c0)) DESC  NULLS LAST, json_valid(CAST(t0.c0 AS REAL))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST('T' AS TEXT)) ORDER BY CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN (('266067817')<(t0.c0)) THEN x'db7791bc85' WHEN t0.c0 THEN (+ (t0.c0)) ELSE (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) END DESC;
SELECT DISTINCT * FROM t0 WHERE (((CAST('T' AS TEXT))AND(t0.c0))) ORDER BY CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN (('266067817')<(t0.c0)) THEN x'db7791bc85' WHEN t0.c0 THEN (+ (t0.c0)) ELSE (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) END DESC LIMIT 1;
SELECT ALL * FROM t0 WHERE (CAST('T' AS TEXT)) ORDER BY CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN (('266067817')<(t0.c0)) THEN x'db7791bc85' WHEN t0.c0 THEN (+ (t0.c0)) ELSE (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) END DESC;
SELECT DISTINCT * FROM t0 WHERE (((CAST('T' AS TEXT))AND(t0.c0))) ORDER BY CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN (('266067817')<(t0.c0)) THEN x'db7791bc85' WHEN t0.c0 THEN (+ (t0.c0)) ELSE (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) END DESC LIMIT 1;
SELECT COUNT(*) FROM t0 WHERE (LAST_INSERT_ROWID()) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN t0.c0 THEN 6.65515619E8 WHEN ((t0.c0)IS NOT(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN t0.c0 THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 THEN ((t0.c0)|(t0.c0)) END, CAST(CAST(t0.c0 AS INTEGER) AS TEXT)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (LAST_INSERT_ROWID()) ORDER BY (t0.c0 IN (((t0.c0)|(t0.c0)), (x'5d' IN (t0.c0)))) ASC, (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST, ((t0.c0)>('-2113459527')) COLLATE RTRIM DESC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), 961997551, 0.42181945002714705, load_extension(t0.c0))) AND ((CAST(NULL AS BLOB), t0.c0 COLLATE NOCASE, ((t0.c0)<>(t0.c0)), NULL)))) ORDER BY (t0.c0 IN (((t0.c0)|(t0.c0)), (x'5d' IN (t0.c0)))) ASC, (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST, ((t0.c0)>('-2113459527')) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (2.119314506E9) ORDER BY ((- (t0.c0)) IN ()), (NOT ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((0xffffffffb59a7b7d, t0.c0)))))  NULLS LAST, (((+ (t0.c0)))LIKE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT DISTINCT * FROM t0 WHERE (((2.119314506E9)AND((((((t0.c0))<((t0.c0))))>(t0.c0))))) ORDER BY t0.c0;
SELECT * FROM t0 WHERE (2.119314506E9) ORDER BY ((- (t0.c0)) IN ()), (NOT ((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((0xffffffffb59a7b7d, t0.c0)))))  NULLS LAST, (((+ (t0.c0)))LIKE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0 WHERE ((((t0.c0) NOTNULL) IN ((('-235360116')>(t0.c0)))));
SELECT * FROM t0 WHERE ((((t0.c0) NOTNULL) IN ((('-235360116')>(t0.c0))))) ORDER BY (((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) IN ()) ASC, ((((((CAST(t0.c0 AS TEXT))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0 COLLATE BINARY)))OR((- (NULL)))) DESC LIMIT 0x1;
SELECT * FROM t0 WHERE ((((t0.c0) NOTNULL) IN ((('-235360116')>(t0.c0)))));
SELECT * FROM t0 WHERE ((((t0.c0) NOTNULL) IN ((('-235360116')>(t0.c0))))) ORDER BY (((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) IN ()) ASC, ((((((CAST(t0.c0 AS TEXT))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0 COLLATE BINARY)))OR((- (NULL)))) DESC LIMIT 0x1;
SELECT * FROM t0 WHERE (CAST(((x'bb') IS FALSE) AS REAL));
SELECT * FROM t0 WHERE (((CAST(((x'bb') IS FALSE) AS REAL))AND(((t0.c0) BETWEEN (NULL) AND (t0.c0)) COLLATE BINARY))) ORDER BY ((GLOB(t0.c0, x''))>>('an')) DESC;
SELECT * FROM t0 WHERE (CAST(((x'bb') IS FALSE) AS REAL));
SELECT * FROM t0 WHERE (((CAST(((x'bb') IS FALSE) AS REAL))AND(((t0.c0) BETWEEN (NULL) AND (t0.c0)) COLLATE BINARY))) ORDER BY ((GLOB(t0.c0, x''))>>('an')) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC)) ORDER BY t0.c0;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC))AND(((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((t0.c0 IN (t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY UPPER(((t0.c0)*(t0.c0)))  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, '-309172433'))>((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE) ORDER BY (+ (UNLIKELY(DISTINCT t0.c0))) DESC, (+ (CAST(t0.c0 AS BLOB))) ASC, ((((((t0.c0)AND('666070357')))OR(NULL)))AND(t0.c0)) COLLATE RTRIM ASC  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((t0.c0 IN (t0.c0, t0.c0, t0.c0))) AND ((((t0.c0, t0.c0))<((t0.c0, t0.c0))))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0, '-309172433'))>((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE) ORDER BY CAST(t0.c0 COLLATE BINARY AS REAL) ASC, CASE WHEN CASE WHEN x'ac' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)/('-995191464')) THEN CAST('I5' AS TEXT) END, ((((((t0.c0) NOT NULL))OR(CASE WHEN t0.c0 THEN 'r' END)))OR(((t0.c0)>(t0.c0)))) ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0)/(t0.c0))  WHEN (((0.3244640030215684, '290230488')) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) THEN CAST(t0.c0 AS BLOB) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS REAL) THEN CASE 0.4524023923736694  WHEN t0.c0 THEN t0.c0 END ELSE CAST(t0.c0 AS INTEGER) END) ORDER BY CAST(t0.c0 COLLATE BINARY AS REAL) ASC, CASE WHEN CASE WHEN x'ac' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)/('-995191464')) THEN CAST('I5' AS TEXT) END, ((((((t0.c0) NOT NULL))OR(CASE WHEN t0.c0 THEN 'r' END)))OR(((t0.c0)>(t0.c0)))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, '-309172433'))>((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE) ORDER BY (+ (UNLIKELY(DISTINCT t0.c0))) DESC, (+ (CAST(t0.c0 AS BLOB))) ASC, ((((((t0.c0)AND('666070357')))OR(NULL)))AND(t0.c0)) COLLATE RTRIM ASC  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((t0.c0 IN (t0.c0, t0.c0, t0.c0))) AND ((((t0.c0, t0.c0))<((t0.c0, t0.c0))))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0, '-309172433'))>((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE) ORDER BY CAST(t0.c0 COLLATE BINARY AS REAL) ASC, CASE WHEN CASE WHEN x'ac' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)/('-995191464')) THEN CAST('I5' AS TEXT) END, ((((((t0.c0) NOT NULL))OR(CASE WHEN t0.c0 THEN 'r' END)))OR(((t0.c0)>(t0.c0)))) ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0)/(t0.c0))  WHEN (((0.3244640030215684, '290230488')) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) THEN CAST(t0.c0 AS BLOB) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS REAL) THEN CASE 0.4524023923736694  WHEN t0.c0 THEN t0.c0 END ELSE CAST(t0.c0 AS INTEGER) END) ORDER BY CAST(t0.c0 COLLATE BINARY AS REAL) ASC, CASE WHEN CASE WHEN x'ac' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)/('-995191464')) THEN CAST('I5' AS TEXT) END, ((((((t0.c0) NOT NULL))OR(CASE WHEN t0.c0 THEN 'r' END)))OR(((t0.c0)>(t0.c0)))) ASC  NULLS FIRST LIMIT 0;
SELECT MAX(t0.c0) FROM t0 WHERE ((((t0.c0)-(t0.c0)) IN (HEX(t0.c0), (t0.c0 IN ())))) ORDER BY ((t0.c0 IN ()) IN (t0.c0)) DESC, 'K_}';
SELECT MAX(t0.c0) FROM t0 WHERE ((((((t0.c0)-(t0.c0)) IN (HEX(t0.c0), (t0.c0 IN ()))))AND(((((t0.c0)==(x'')))<(((((t0.c0)OR(t0.c0)))OR(t0.c0))))))) ORDER BY ((CAST('(' AS REAL))<(t0.c0)) ASC  NULLS FIRST, CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS TEXT)  NULLS LAST, (((t0.c0 IN ())) IS TRUE) ASC LIMIT 0x0;
SELECT MAX(t0.c0) FROM t0 WHERE ((ABS(t0.c0) IN (((t0.c0) IS FALSE))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((ABS(t0.c0) IN (((t0.c0) IS FALSE))))AND(t0.c0))) LIMIT 1;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((t0.c0)/(t0.c0)), t0.c0 COLLATE NOCASE)))) ORDER BY x'0a'  NULLS LAST, x'73c5960d70'  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND ((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, '1651316513', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((t0.c0)/(t0.c0)), t0.c0 COLLATE NOCASE))))AND((-911721088 IN ())))) ORDER BY x'0a'  NULLS LAST, x'73c5960d70'  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND ((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, '1651316513', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((t0.c0)/(t0.c0)), t0.c0 COLLATE NOCASE)))) ORDER BY x'0a'  NULLS LAST, x'73c5960d70'  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND ((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, '1651316513', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((t0.c0)/(t0.c0)), t0.c0 COLLATE NOCASE))))AND((-911721088 IN ())))) ORDER BY x'0a'  NULLS LAST, x'73c5960d70'  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND ((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, '1651316513', t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0))))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (HEX(DISTINCT 0Xffffffffef948f7e)) ORDER BY CAST((t0.c0 IN (t0.c0)) AS INTEGER) ASC  NULLS LAST, NULLIF(DISTINCT json_array_length(t0.c0), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (HEX(DISTINCT -275476610)) ORDER BY (((t0.c0 IN (t0.c0)))AND(((t0.c0) IS FALSE))) ASC  NULLS FIRST, ((NULLIF(t0.c0, 'Lx|G'))/((~ (t0.c0))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t0 WHERE (t0.c0) ORDER BY (((t0.c0 IN (t0.c0)))AND(((t0.c0) IS FALSE))) ASC  NULLS FIRST, ((NULLIF(t0.c0, 'Lx|G'))/((~ (t0.c0))))  NULLS LAST;
SELECT * FROM t0 WHERE (HEX(DISTINCT 0Xffffffffef948f7e)) ORDER BY CAST((t0.c0 IN (t0.c0)) AS INTEGER) ASC  NULLS LAST, NULLIF(DISTINCT json_array_length(t0.c0), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))  NULLS FIRST;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (t0.c0);
SELECT MIN(t0.c0) FROM t0 WHERE (((t0.c0)AND((((('0.4073367410305304')!=(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))))) INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))  WHEN NULL THEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, NULL, t0.c0)) AND ((t0.c0, t0.c0, 0.02126206678874032))) END);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)|(NULL)) THEN (('204747477')AND(t0.c0)) END);
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN ((t0.c0)|(NULL)) THEN (('204747477')AND(t0.c0)) END) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN t0.c0 THEN (- (t0.c0)) WHEN (('_Fe9') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) ISNULL) WHEN 0.012118578334606278 THEN (((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) ELSE x'6fb20b' END) LIMIT 1;
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)|(NULL)) THEN (('204747477')AND(t0.c0)) END);
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN ((t0.c0)|(NULL)) THEN (('204747477')AND(t0.c0)) END) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN t0.c0 THEN (- (t0.c0)) WHEN (('_Fe9') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) ISNULL) WHEN 0.012118578334606278 THEN (((t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))) ELSE x'6fb20b' END) LIMIT 1;
SELECT MIN(t0.c0) FROM t0 WHERE (LOWER((t0.c0 IN ()))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)%(((t0.c0)<=(t0.c0)))) DESC, (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ()), ((ABS(DISTINCT t0.c0)) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST, x'8ead7f';
SELECT MIN(t0.c0) FROM t0 WHERE (LOWER((t0.c0 IN ()))) ORDER BY ((((t0.c0)!=(t0.c0))) NOT NULL)  NULLS LAST, CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC LIMIT 0X1 INTERSECT SELECT ALL MIN(t0.c0) FROM t0 WHERE (CASE WHEN (NULL IN (t0.c0)) THEN ((t0.c0) NOT NULL) WHEN t0.c0 THEN ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) WHEN (- (t0.c0)) THEN t0.c0 WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) ORDER BY ((((t0.c0)!=(t0.c0))) NOT NULL)  NULLS LAST, CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC LIMIT 0x1;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((~ (t0.c0)) COLLATE NOCASE) ORDER BY (+ (((t0.c0)<<(t0.c0)))) ASC, (((((t0.c0)+(t0.c0))))==((((t0.c0) NOT NULL)))) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((~ (t0.c0)) COLLATE NOCASE)AND(SUBSTR(MAX(t0.c0, t0.c0), ((t0.c0)>>(t0.c0)))))) ORDER BY (+ (((t0.c0)<<(t0.c0)))) ASC, (((((t0.c0)+(t0.c0))))=((((t0.c0) NOT NULL)))) DESC INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CAST(NULL AS TEXT)) ORDER BY (+ (((t0.c0)<<(t0.c0)))) ASC, (((((t0.c0)+(t0.c0))))=((((t0.c0) NOT NULL)))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((NULL)<>(t0.c0)) AS REAL)) ORDER BY LIKELY(CHAR(t0.c0, t0.c0, t0.c0)), ((t0.c0 IN (t0.c0)) IN (((((((((((((t0.c0)OR(-2.35360116E8)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CAST(((NULL)<(t0.c0)) AS REAL)) ORDER BY LIKELY(CHAR(t0.c0, t0.c0, t0.c0)), ((t0.c0 IN (t0.c0)) IN (((((((((((((t0.c0)OR(-2.35360116E8)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM t0 WHERE (((((t0.c0)AND(((NULL)IS(t0.c0)))))AND((~ (t0.c0))))) ORDER BY t0.c0  NULLS FIRST, (NOT (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)AND(((NULL)IS(t0.c0)))))AND((~ (t0.c0))))) ORDER BY (((((t0.c0)) BETWEEN (('lGä¾qU(|,')) AND ((t0.c0)))) ISNULL)  NULLS LAST, t0.c0  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c0)AND(((NULL)IS(t0.c0)))))AND((~ (t0.c0))))) ORDER BY t0.c0  NULLS FIRST, (NOT (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)AND(((NULL)IS(t0.c0)))))AND((~ (t0.c0))))) ORDER BY (((((t0.c0)) BETWEEN (('lGä¾qU(|,')) AND ((t0.c0)))) ISNULL)  NULLS LAST, t0.c0  NULLS FIRST;
SELECT * FROM t0 WHERE (((CAST(x'' AS TEXT))<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t0 WHERE (((((CAST(x'' AS TEXT))<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND((((t0.c0, t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND (((t0.c0 IN (t0.c0)), CAST(t0.c0 AS REAL))))))) ORDER BY JULIANDAY(t0.c0, t0.c0, t0.c0) COLLATE BINARY  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE ((~ ((NOT (t0.c0))))) ORDER BY JULIANDAY(t0.c0, t0.c0, t0.c0) COLLATE BINARY  NULLS LAST;
SELECT * FROM t0 WHERE (((CAST(x'' AS TEXT))<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t0 WHERE (((((CAST(x'' AS TEXT))<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND((((t0.c0, t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND (((t0.c0 IN (t0.c0)), CAST(t0.c0 AS REAL))))))) ORDER BY JULIANDAY(t0.c0, t0.c0, t0.c0) COLLATE BINARY  NULLS LAST INTERSECT SELECT ALL * FROM t0 WHERE ((~ ((NOT (t0.c0))))) ORDER BY JULIANDAY(t0.c0, t0.c0, t0.c0) COLLATE BINARY  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((((t0.c0) IS FALSE)))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((((t0.c0) IS FALSE)))))AND((((~ (t0.c0)))IS NOT('986517248'))))) ORDER BY ROUND(UPPER(DISTINCT '-1313987184'), (- (t0.c0))) DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((((t0.c0) IS FALSE)))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((((t0.c0) IS FALSE)))))AND((((~ (t0.c0)))IS NOT('986517248'))))) ORDER BY ROUND(UPPER(DISTINCT '-1313987184'), (- (t0.c0))) DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t0 WHERE (((COALESCE(DISTINCT t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((- (t0.c0))) AND (UNLIKELY(t0.c0)))) ORDER BY CAST(CAST(t0.c0 AS TEXT) AS BLOB) ASC, ((~ (t0.c0)) IN ((((t0.c0))<((t0.c0))))) ASC;
SELECT ALL * FROM t0 WHERE (((((COALESCE(DISTINCT t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((- (t0.c0))) AND (UNLIKELY(t0.c0))))AND(x'81b7ef56'))) ORDER BY CAST(CAST(t0.c0 AS TEXT) AS BLOB) ASC, ((~ (t0.c0)) IN ((((t0.c0))<((t0.c0))))) ASC INTERSECT SELECT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM)>(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY CAST(CAST(t0.c0 AS TEXT) AS BLOB) ASC, ((~ (t0.c0)) IN ((((t0.c0))<((t0.c0))))) ASC;
SELECT ALL * FROM t0 WHERE (((COALESCE(DISTINCT t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((- (t0.c0))) AND (UNLIKELY(t0.c0)))) ORDER BY CAST(CAST(t0.c0 AS TEXT) AS BLOB) ASC, ((~ (t0.c0)) IN ((((t0.c0))<((t0.c0))))) ASC;
SELECT ALL * FROM t0 WHERE (((((COALESCE(DISTINCT t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((- (t0.c0))) AND (UNLIKELY(t0.c0))))AND(x'81b7ef56'))) ORDER BY CAST(CAST(t0.c0 AS TEXT) AS BLOB) ASC, ((~ (t0.c0)) IN ((((t0.c0))<((t0.c0))))) ASC INTERSECT SELECT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM)>(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY CAST(CAST(t0.c0 AS TEXT) AS BLOB) ASC, ((~ (t0.c0)) IN ((((t0.c0))<((t0.c0))))) ASC;
SELECT ALL MIN(t0.c0) FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER))AND(1224713097))) ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN t0.c0 WHEN ((((t0.c0)OR(NULL)))OR(NULL)) THEN t0.c0 COLLATE BINARY WHEN x'' THEN ((t0.c0)/(NULL)) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT MIN(t0.c0) FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOTNULL)) ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN t0.c0 WHEN ((((t0.c0)OR(NULL)))OR(NULL)) THEN t0.c0 COLLATE BINARY WHEN x'' THEN ((t0.c0)/(NULL)) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END  NULLS LAST LIMIT 0X1;
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE x'' END))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE x'' END))))AND(((((((((t0.c0)OR('1695139792')))OR(t0.c0)))AND(x'e6'))) NOT NULL)))) LIMIT 2 INTERSECT SELECT * FROM t0 WHERE (((((t0.c0)%(t0.c0))) NOT BETWEEN (((((((((t0.c0)AND('-602338418')))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) LIMIT 2;
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE x'' END))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE x'' END))))AND(((((((((t0.c0)OR('1695139792')))OR(t0.c0)))AND(x'e6'))) NOT NULL)))) LIMIT 2 INTERSECT SELECT * FROM t0 WHERE (((((t0.c0)%(t0.c0))) NOT BETWEEN (((((((((t0.c0)AND('-602338418')))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) LIMIT 2;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS REAL) WHEN COALESCE(t0.c0, 0Xffffffffaa95ccda) THEN t0.c0 WHEN (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, 0Xffffffff82072ab9, t0.c0, t0.c0)) AND (('-1198632397', t0.c0, t0.c0, t0.c0))) THEN ((0.7381698443649347)&(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, x'6b'))) ELSE ((t0.c0) NOTNULL) END);
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS REAL) WHEN COALESCE(t0.c0, 0xffffffffaa95ccda) THEN t0.c0 WHEN (((t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, 0xffffffff82072ab9, t0.c0, t0.c0)) AND (('-1198632397', t0.c0, t0.c0, t0.c0))) THEN ((0.7381698443649347)&(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0, t0.c0, x'6b'))) ELSE ((t0.c0) NOTNULL) END) ORDER BY ((0xffffffff82072ab9)<>(((t0.c0)<(t0.c0)))) ASC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM t0 WHERE ((NOT (((((((t0.c0)AND(x'd5')))OR(t0.c0)))OR(t0.c0))))) ORDER BY ((-2113459527)!=(((t0.c0)<(t0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (0X4278e0d4) ORDER BY ((UNLIKELY(t0.c0))>>(t0.c0));
SELECT * FROM t0 WHERE (1115218132) ORDER BY (NOT (CAST('-351685878' AS REAL)))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t0 WHERE (0X4278e0d4) ORDER BY ((UNLIKELY(t0.c0))>>(t0.c0));
SELECT * FROM t0 WHERE (1115218132) ORDER BY (NOT (CAST('-351685878' AS REAL)))  NULLS FIRST LIMIT 1;
SELECT * FROM t0 WHERE ((((0.8736360348658702, ((6.65515619E8)*(0.19007750734326823))))<>(((t0.c0 IN ()), t0.c0 COLLATE BINARY))));
SELECT * FROM t0 WHERE ((((((0.8736360348658702, ((6.65515619E8)*(0.19007750734326823))))<(((t0.c0 IN ()), t0.c0 COLLATE BINARY))))AND(((t0.c0)LIKE((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, x'20f59c')))))))) ORDER BY ((((((((((((((t0.c0)AND(t0.c0)))OR('')))AND(t0.c0)))AND(t0.c0)))OR(0x595ce85a)))OR(t0.c0)))=('0.7703181411053067')) LIMIT 3 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((((((((((((((t0.c0)AND(t0.c0)))OR('')))AND(t0.c0)))AND(t0.c0)))OR(0X595ce85a)))OR(t0.c0)))=('0.7703181411053067')) LIMIT 0X3;
SELECT * FROM t0 WHERE ((((0.8736360348658702, ((6.65515619E8)*(0.19007750734326823))))<>(((t0.c0 IN ()), t0.c0 COLLATE BINARY))));
SELECT * FROM t0 WHERE ((((((0.8736360348658702, ((6.65515619E8)*(0.19007750734326823))))<(((t0.c0 IN ()), t0.c0 COLLATE BINARY))))AND(((t0.c0)LIKE((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, x'20f59c')))))))) ORDER BY ((((((((((((((t0.c0)AND(t0.c0)))OR('')))AND(t0.c0)))AND(t0.c0)))OR(0x595ce85a)))OR(t0.c0)))=('0.7703181411053067')) LIMIT 3 INTERSECT SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((((((((((((((t0.c0)AND(t0.c0)))OR('')))AND(t0.c0)))AND(t0.c0)))OR(0X595ce85a)))OR(t0.c0)))=('0.7703181411053067')) LIMIT 0X3;
SELECT MAX(t0.c0) FROM t0 WHERE ((~ (((t0.c0)-(t0.c0)))));
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((~ (((t0.c0)-(t0.c0)))))AND('J
G')));
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))OR(0.5878710302520644)))AND(((t0.c0) ISNULL)))) ORDER BY STRFTIME(LOWER(t0.c0), t0.c0, ((310040797)+(t0.c0)), CAST(t0.c0 AS INTEGER))  NULLS LAST, ((((x'')<=(t0.c0)))%(((t0.c0)||(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))OR(0.5878710302520644)))AND(((t0.c0) ISNULL)))) ORDER BY ((t0.c0)LIKE(x'e8')) COLLATE BINARY DESC, t0.c0 COLLATE BINARY DESC, (((t0.c0 IN (t0.c0, t0.c0)))GLOB(((t0.c0) NOT BETWEEN (x'') AND (t0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))OR(0.5878710302520644)))AND(((t0.c0) ISNULL)))) ORDER BY STRFTIME(LOWER(t0.c0), t0.c0, ((310040797)+(t0.c0)), CAST(t0.c0 AS INTEGER))  NULLS LAST, ((((x'')<=(t0.c0)))%(((t0.c0)||(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))OR(0.5878710302520644)))AND(((t0.c0) ISNULL)))) ORDER BY ((t0.c0)LIKE(x'e8')) COLLATE BINARY DESC, t0.c0 COLLATE BINARY DESC, (((t0.c0 IN (t0.c0, t0.c0)))GLOB(((t0.c0) NOT BETWEEN (x'') AND (t0.c0)))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ('~ì¡¦6*w9~') ORDER BY (((+ (t0.c0)))||((((x'', t0.c0, '1549388927', t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0)))))  NULLS LAST, ((t0.c0)AND(((t0.c0)&(t0.c0)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((('~ì¡¦6*w9~')AND(CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN (((t0.c0, t0.c0, t0.c0, t0.c0, 0.7884677259794163))<>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) THEN (t0.c0 IN (t0.c0)) END))) ORDER BY (((+ (t0.c0)))||((((x'', t0.c0, '1549388927', t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0)))))  NULLS LAST, ((t0.c0)AND(((t0.c0)&(t0.c0)))) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))<=(CAST(t0.c0 AS BLOB)))) ORDER BY (((+ (t0.c0)))||((((x'', t0.c0, '1549388927', t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0)))))  NULLS LAST, ((t0.c0)AND(((t0.c0)&(t0.c0)))) ASC  NULLS LAST LIMIT 0X0;
SELECT * FROM t0 WHERE ('~ì¡¦6*w9~') ORDER BY (((+ (t0.c0)))||((((x'', t0.c0, '1549388927', t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0)))))  NULLS LAST, ((t0.c0)AND(((t0.c0)&(t0.c0)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((('~ì¡¦6*w9~')AND(CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN (((t0.c0, t0.c0, t0.c0, t0.c0, 0.7884677259794163))<>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) THEN (t0.c0 IN (t0.c0)) END))) ORDER BY (((+ (t0.c0)))||((((x'', t0.c0, '1549388927', t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0)))))  NULLS LAST, ((t0.c0)AND(((t0.c0)&(t0.c0)))) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))<=(CAST(t0.c0 AS BLOB)))) ORDER BY (((+ (t0.c0)))||((((x'', t0.c0, '1549388927', t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0)))))  NULLS LAST, ((t0.c0)AND(((t0.c0)&(t0.c0)))) ASC  NULLS LAST LIMIT 0X0;
SELECT ALL MIN(t0.c0) FROM t0 WHERE ((t0.c0 IN ()) COLLATE RTRIM);
SELECT ALL MIN(t0.c0) FROM t0 NOT INDEXED WHERE ((t0.c0 IN ()) COLLATE RTRIM) ORDER BY ((((((((t0.c0)AND(x'2f')))OR(CAST(t0.c0 AS NUMERIC))))OR((t0.c0 IN (t0.c0, t0.c0, t0.c0)))))AND((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) ASC, (((CASE t0.c0  WHEN 0.8856474969537438 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.11169841113635692 ELSE t0.c0 END, (+ (x''))))<=(((t0.c0 IN (t0.c0, x'd87c')), (((t0.c0, t0.c0, 0.45810747459300194, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0)))))) DESC, ((((((((((((t0.c0)||(NULL)))OR((- (t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((-1887216830) NOT NULL))))OR((('-1528442103')&(t0.c0)))))AND(t0.c0 COLLATE BINARY)) LIMIT 3 INTERSECT SELECT MIN(t0.c0) FROM t0 WHERE (CASE IFNULL(t0.c0, t0.c0)  WHEN ((0.6487543958503681) BETWEEN (x'') AND (t0.c0)) THEN ((t0.c0)IS NOT(t0.c0)) END) ORDER BY ((((((((t0.c0)AND(x'2f')))OR(CAST(t0.c0 AS NUMERIC))))OR((t0.c0 IN (t0.c0, t0.c0, t0.c0)))))AND((((t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))) ASC, (((CASE t0.c0  WHEN 0.8856474969537438 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.11169841113635692 ELSE t0.c0 END, (+ (x''))))<=(((t0.c0 IN (t0.c0, x'd87c')), (((t0.c0, t0.c0, 0.45810747459300194, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0)))))) DESC, ((((((((((((t0.c0)||(NULL)))OR((- (t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((0xffffffff8f835b42) NOT NULL))))OR((('-1528442103')&(t0.c0)))))AND(t0.c0 COLLATE BINARY)) LIMIT 3;
SELECT * FROM t0 WHERE (CASE CAST(0.6566851879540441 AS REAL)  WHEN ((t0.c0)LIKE(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY CAST((- (x'3d')) AS TEXT) DESC, (NOT (t0.c0)) ASC  NULLS FIRST, ((((t0.c0)LIKE(t0.c0)))<=((NOT (t0.c0)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((CASE CAST(0.6566851879540441 AS REAL)  WHEN ((t0.c0)LIKE(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END)AND((((((('421601257') NOT BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0) NOTNULL))))OR(t0.c0 COLLATE BINARY))))) ORDER BY CAST(t0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS LAST, ((t0.c0 COLLATE RTRIM)<>(1.231018761E9)) ASC  NULLS LAST, 0.5970944177001871 DESC, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))%(x'd94c6a4c')) LIMIT 0x0;
SELECT * FROM t0 WHERE (CASE CAST(0.6566851879540441 AS REAL)  WHEN ((t0.c0)LIKE(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY CAST((- (x'3d')) AS TEXT) DESC, (NOT (t0.c0)) ASC  NULLS FIRST, ((((t0.c0)LIKE(t0.c0)))<=((NOT (t0.c0)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((CASE CAST(0.6566851879540441 AS REAL)  WHEN ((t0.c0)LIKE(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END)AND((((((('421601257') NOT BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0) NOTNULL))))OR(t0.c0 COLLATE BINARY))))) ORDER BY CAST(t0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS LAST, ((t0.c0 COLLATE RTRIM)<>(1.231018761E9)) ASC  NULLS LAST, 0.5970944177001871 DESC, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))%(x'd94c6a4c')) LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (IFNULL(((t0.c0)IS NOT(t0.c0)), t0.c0)) ORDER BY NULL  NULLS LAST, CASE t0.c0  WHEN CAST(t0.c0 AS REAL) THEN CASE t0.c0  WHEN t0.c0 THEN '4á§·?f?qU' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN CASE WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) WHEN '[,)OY' THEN CAST(t0.c0 AS TEXT) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN '0.4385794289584355' END  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((IFNULL(((t0.c0)IS NOT(t0.c0)), t0.c0))AND((- ((+ (0x50d5ba49))))))) ORDER BY ((x'7455')<<(((t0.c0)AND(t0.c0)))) ASC  NULLS LAST, t0.c0 COLLATE RTRIM COLLATE BINARY ASC, ((CAST(t0.c0 AS BLOB))!=(CASE t0.c0  WHEN t0.c0 THEN '' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (IFNULL(((t0.c0)IS NOT(t0.c0)), t0.c0)) ORDER BY NULL  NULLS LAST, CASE t0.c0  WHEN CAST(t0.c0 AS REAL) THEN CASE t0.c0  WHEN t0.c0 THEN '4á§·?f?qU' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN CASE WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) WHEN '[,)OY' THEN CAST(t0.c0 AS TEXT) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN '0.4385794289584355' END  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((IFNULL(((t0.c0)IS NOT(t0.c0)), t0.c0))AND((- ((+ (0x50d5ba49))))))) ORDER BY ((x'7455')<<(((t0.c0)AND(t0.c0)))) ASC  NULLS LAST, t0.c0 COLLATE RTRIM COLLATE BINARY ASC, ((CAST(t0.c0 AS BLOB))!=(CASE t0.c0  WHEN t0.c0 THEN '' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN ((t0.c0 IN (t0.c0))) AND (IFNULL(DISTINCT t0.c0, t0.c0)))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS REAL))AND((((t0.c0))=((t0.c0))) COLLATE RTRIM))) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN ((t0.c0 IN (t0.c0))) AND (IFNULL(DISTINCT t0.c0, t0.c0)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN ((t0.c0 IN (t0.c0))) AND (IFNULL(DISTINCT t0.c0, t0.c0)))  NULLS LAST;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS REAL))AND((((t0.c0))=((t0.c0))) COLLATE RTRIM))) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN ((t0.c0 IN (t0.c0))) AND (IFNULL(DISTINCT t0.c0, t0.c0)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY IFNULL(t0.c0, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.8747692933971026 END);
SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM)AND((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END IN ('1306325015' COLLATE RTRIM))))) ORDER BY ((((('1372401049', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))IS NOT((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ASC, ((((t0.c0)>(t0.c0)))%(t0.c0))  NULLS FIRST, json_array(((t0.c0)%(t0.c0)), ((t0.c0)-(t0.c0)), CAST(t0.c0 AS BLOB), CASE WHEN t0.c0 THEN t0.c0 END) DESC;
SELECT ALL * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY IFNULL(t0.c0, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.8747692933971026 END);
SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM)AND((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END IN ('1306325015' COLLATE RTRIM))))) ORDER BY ((((('1372401049', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0)) AND ((t0.c0, t0.c0))))IS NOT((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ASC, ((((t0.c0)>(t0.c0)))%(t0.c0))  NULLS FIRST, json_array(((t0.c0)%(t0.c0)), ((t0.c0)-(t0.c0)), CAST(t0.c0 AS BLOB), CASE WHEN t0.c0 THEN t0.c0 END) DESC;
SELECT MAX(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS TRUE), ((x'') IS FALSE), ((t0.c0)<>(t0.c0)), (t0.c0 IN ()))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((0x57bae549) IS TRUE), (NOT (t0.c0)), ((0.7726286259587622)OR(t0.c0)))))) ORDER BY ((((t0.c0) NOTNULL))LIKE(TYPEOF('1982770')))  NULLS FIRST, t0.c0  NULLS LAST;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS TRUE), ((x'') IS FALSE), ((t0.c0)!=(t0.c0)), (t0.c0 IN ()))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((1471866185) IS TRUE), (NOT (t0.c0)), ((0.7726286259587622)OR(t0.c0))))))AND(((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((-747001905) IS FALSE)))))) ORDER BY ((((t0.c0) NOTNULL))LIKE(TYPEOF('1982770')))  NULLS FIRST, t0.c0  NULLS LAST INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (CASE WHEN ((NULL) NOTNULL) THEN (NOT (t0.c0)) WHEN (((t0.c0, 'TRUE'))>=((t0.c0, t0.c0))) THEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(NULL)) END) ORDER BY ((((t0.c0) NOTNULL))LIKE(TYPEOF('1982770')))  NULLS FIRST, t0.c0  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)>>(t0.c0))) NOT NULL)) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((t0.c0 IN ()))) ASC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)>>(t0.c0))) NOT NULL)) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((t0.c0 IN ()))) ASC INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((t0.c0) NOT BETWEEN (RTRIM(t0.c0)) AND (t0.c0))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((t0.c0 IN ()))) ASC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN (((+ (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((x'', (((t0.c0, t0.c0))=((t0.c0, t0.c0)))))));
SELECT ALL MAX(t0.c0) FROM t0 WHERE ((((t0.c0, t0.c0)) NOT BETWEEN (((+ (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((x'', (((t0.c0, t0.c0))==((t0.c0, t0.c0))))))) LIMIT 0;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (((((t0.c0)>>(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (t0.c0))) ORDER BY ((((t0.c0)*(t0.c0)))%(t0.c0))  NULLS LAST, ((((t0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT MAX(t0.c0) FROM t0 WHERE (((((t0.c0)>>(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (t0.c0))) ORDER BY TIME(t0.c0 COLLATE NOCASE, x'', ((0.867756047034564) NOT NULL), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ASC, 0.4686303775365128 ASC  NULLS LAST, 0x70a36a9 DESC LIMIT 0x2;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((x'7955') NOT BETWEEN ('-2005089698') AND (((t0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((x'7955') NOT BETWEEN ('-2005089698') AND (((t0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT MAX(t0.c0) FROM t0 WHERE (((((t0.c0) ISNULL)) BETWEEN ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, NULL)) AND ((t0.c0, t0.c0)))) AND (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))));
SELECT MAX(t0.c0) FROM t0 WHERE (((((((t0.c0) ISNULL)) BETWEEN ((((t0.c0, t0.c0)) BETWEEN ((t0.c0, NULL)) AND ((t0.c0, t0.c0)))) AND (((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))AND(((t0.c0 COLLATE RTRIM) BETWEEN ((t0.c0 IN ())) AND (t0.c0))))) ORDER BY UPPER(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) DESC  NULLS LAST, ((t0.c0 IN (t0.c0, '-144268744', t0.c0)) IN ()) DESC;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY t0.c0  NULLS FIRST, LIKELY(DISTINCT t0.c0) COLLATE BINARY DESC;
SELECT ALL * FROM t0 WHERE (((((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(((((t0.c0)+(t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY t0.c0  NULLS FIRST, LIKELY(DISTINCT t0.c0) COLLATE BINARY DESC INTERSECT SELECT * FROM t0 WHERE (CAST((t0.c0 IN ('e')) AS TEXT)) ORDER BY t0.c0  NULLS FIRST, LIKELY(DISTINCT t0.c0) COLLATE BINARY DESC;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY t0.c0  NULLS FIRST, LIKELY(DISTINCT t0.c0) COLLATE BINARY DESC;
SELECT ALL * FROM t0 WHERE (((((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(((((t0.c0)+(t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) ORDER BY t0.c0  NULLS FIRST, LIKELY(DISTINCT t0.c0) COLLATE BINARY DESC INTERSECT SELECT * FROM t0 WHERE (CAST((t0.c0 IN ('e')) AS TEXT)) ORDER BY t0.c0  NULLS FIRST, LIKELY(DISTINCT t0.c0) COLLATE BINARY DESC;
SELECT ALL * FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))))>((((((t0.c0)OR(t0.c0)))OR(t0.c0)))))) ORDER BY (t0.c0 IN ()) ASC, (~ ('meaIrf')) ASC  NULLS FIRST, '' ASC;
SELECT * FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))))>((((((t0.c0)OR(t0.c0)))OR(t0.c0)))))) ORDER BY (t0.c0 IN ()) ASC, (~ ('meaIrf')) ASC  NULLS FIRST, '' ASC LIMIT 1 INTERSECT SELECT ALL * FROM t0 WHERE (json_remove(t0.c0, t0.c0, t0.c0) COLLATE BINARY) ORDER BY (t0.c0 IN ()) ASC, (~ ('meaIrf')) ASC  NULLS FIRST, '' ASC LIMIT 0X1;
SELECT ALL * FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (NULL) AND (t0.c0))))>((((((t0.c0)OR(t0.c0)))OR(t0.c0)))))) ORDER BY (t0.c0 IN ()) ASC, (~ ('meaIrf')) ASC  NULLS FIRST, '' ASC;
SELECT ALL MAX(t0.c0) FROM t0 WHERE (CAST(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS BLOB)) ORDER BY ((((t0.c0)>=(t0.c0)))||(x'8da8')) ASC, ((CAST(t0.c0 AS INTEGER)) NOT NULL) DESC  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL), ((CAST(t0.c0 AS INTEGER)) ISNULL) DESC;
SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (((CAST(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS BLOB))AND(((((((t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, 0.7690916829988743)) AND ((t0.c0, t0.c0, x'', t0.c0)))))<((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))))) ORDER BY ((((t0.c0)>=(t0.c0)))||(x'8da8')) ASC, ((CAST(t0.c0 AS INTEGER)) NOT NULL) DESC  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL), ((CAST(t0.c0 AS INTEGER)) ISNULL) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(t0.c0) FROM t0 WHERE (0.3051041434178884) ORDER BY ((((t0.c0)>=(t0.c0)))||(x'8da8')) ASC, ((CAST(t0.c0 AS INTEGER)) NOT NULL) DESC  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL), ((CAST(t0.c0 AS INTEGER)) ISNULL) DESC LIMIT 0x0;
SELECT ALL * FROM t0 WHERE (TRIM(((t0.c0)%(t0.c0)))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE BINARY DESC;
SELECT * FROM t0 WHERE (((TRIM(((t0.c0)%(t0.c0))))AND(NULL))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE BINARY DESC LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (((SUBSTR(t0.c0, t0.c0))<(CAST(t0.c0 AS REAL)))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE BINARY DESC LIMIT 0x1;
SELECT ALL * FROM t0 WHERE (TRIM(((t0.c0)%(t0.c0)))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE BINARY DESC;
SELECT * FROM t0 WHERE (((TRIM(((t0.c0)%(t0.c0))))AND(NULL))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE BINARY DESC LIMIT 1 INTERSECT SELECT * FROM t0 WHERE (((SUBSTR(t0.c0, t0.c0))<(CAST(t0.c0 AS REAL)))) ORDER BY (t0.c0 IN (t0.c0)) COLLATE BINARY DESC LIMIT 0x1;
SELECT ALL * FROM t0 WHERE ((((CAST(x'4d4d' AS BLOB), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>((t0.c0, ((t0.c0) ISNULL)))));
SELECT DISTINCT * FROM t0 WHERE ((((CAST(x'4d4d' AS BLOB), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>((t0.c0, ((t0.c0) ISNULL))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN ('9223372036854775807' IN (t0.c0, t0.c0)) THEN ((t0.c0) IS TRUE) WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE x'36' END THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN x'' WHEN RTRIM(t0.c0) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) ELSE NULL COLLATE BINARY END) LIMIT 0X0;
SELECT ALL * FROM t0 WHERE ((((CAST(x'4d4d' AS BLOB), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>((t0.c0, ((t0.c0) ISNULL)))));
SELECT DISTINCT * FROM t0 WHERE ((((CAST(x'4d4d' AS BLOB), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>((t0.c0, ((t0.c0) ISNULL))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t0 WHERE (CASE WHEN ('9223372036854775807' IN (t0.c0, t0.c0)) THEN ((t0.c0) IS TRUE) WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE x'36' END THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN x'' WHEN RTRIM(t0.c0) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) ELSE NULL COLLATE BINARY END) LIMIT 0X0;
SELECT * FROM t0 WHERE (CASE WHEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<(('', t0.c0, t0.c0, t0.c0, t0.c0))) THEN t0.c0 COLLATE RTRIM END);
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<(('', t0.c0, t0.c0, t0.c0, t0.c0))) THEN t0.c0 COLLATE RTRIM END)AND(t0.c0))) ORDER BY (((((((((((t0.c0, t0.c0, t0.c0, t0.c0))>=((x'', t0.c0, t0.c0, t0.c0))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CAST('' AS REAL))))OR(t0.c0)))AND(TRIM(DISTINCT t0.c0))) ASC  NULLS FIRST LIMIT 0x2;
SELECT * FROM t0 WHERE (CASE WHEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<(('', t0.c0, t0.c0, t0.c0, t0.c0))) THEN t0.c0 COLLATE RTRIM END);
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<(('', t0.c0, t0.c0, t0.c0, t0.c0))) THEN t0.c0 COLLATE RTRIM END)AND(t0.c0))) ORDER BY (((((((((((t0.c0, t0.c0, t0.c0, t0.c0))>=((x'', t0.c0, t0.c0, t0.c0))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CAST('' AS REAL))))OR(t0.c0)))AND(TRIM(DISTINCT t0.c0))) ASC  NULLS FIRST LIMIT 0x2;
SELECT * FROM t0 WHERE (((((((((((t0.c0)OR(x'')))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))LIKE((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) ORDER BY (NOT ('æ¯£ygN%JNn'))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((((((((((t0.c0)OR(x'')))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))LIKE((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))AND(0.26546282780279995))) ORDER BY (NOT ('æ¯£ygN%JNn'))  NULLS FIRST LIMIT 0x1;
SELECT * FROM t0 WHERE (((((((((((t0.c0)OR(x'')))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))LIKE((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) ORDER BY (NOT ('æ¯£ygN%JNn'))  NULLS FIRST;
SELECT DISTINCT * FROM t0 WHERE (((((((((((((t0.c0)OR(x'')))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))LIKE((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))AND(0.26546282780279995))) ORDER BY (NOT ('æ¯£ygN%JNn'))  NULLS FIRST LIMIT 0x1;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS REAL)) ISNULL), (((((x'9a')IS(t0.c0)), ((t0.c0)AND(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))<=((((t0.c0)/(t0.c0)), NULLIF(DISTINCT t0.c0, t0.c0), t0.c0)));
SELECT ALL * FROM t0 WHERE (((t0.c0)AND(t0.c0 COLLATE RTRIM))) ORDER BY ((CAST(t0.c0 AS REAL)) ISNULL), (((((x'9a')IS(t0.c0)), ((t0.c0)AND(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))<=((((t0.c0)/(t0.c0)), NULLIF(DISTINCT t0.c0, t0.c0), t0.c0))) LIMIT 1 INTERSECT SELECT ALL * FROM t0 WHERE (((((((t0.c0)LIKE(t0.c0)))OR(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))AND(((t0.c0)OR(t0.c0))))) ORDER BY ((CAST(t0.c0 AS REAL)) ISNULL), (((((x'9a')IS(t0.c0)), ((t0.c0)AND(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))<=((((t0.c0)/(t0.c0)), NULLIF(DISTINCT t0.c0, t0.c0), t0.c0))) LIMIT 0x1;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS REAL)) ISNULL), (((((x'9a')IS(t0.c0)), ((t0.c0)AND(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))<=((((t0.c0)/(t0.c0)), NULLIF(DISTINCT t0.c0, t0.c0), t0.c0)));
SELECT ALL * FROM t0 WHERE (((t0.c0)AND(t0.c0 COLLATE RTRIM))) ORDER BY ((CAST(t0.c0 AS REAL)) ISNULL), (((((x'9a')IS(t0.c0)), ((t0.c0)AND(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))<=((((t0.c0)/(t0.c0)), NULLIF(DISTINCT t0.c0, t0.c0), t0.c0))) LIMIT 1 INTERSECT SELECT ALL * FROM t0 WHERE (((((((t0.c0)LIKE(t0.c0)))OR(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))AND(((t0.c0)OR(t0.c0))))) ORDER BY ((CAST(t0.c0 AS REAL)) ISNULL), (((((x'9a')IS(t0.c0)), ((t0.c0)AND(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))<=((((t0.c0)/(t0.c0)), NULLIF(DISTINCT t0.c0, t0.c0), t0.c0))) LIMIT 0x1;
SELECT COUNT(*) FROM t0 WHERE ((NOT (x'2c')));
SELECT COUNT(*) FROM t0 WHERE ((NOT (x'2c')));
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)>=(t0.c0))) AND ((+ (t0.c0)))));
SELECT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)>(t0.c0))) AND ((+ (t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)>=(t0.c0))) AND ((+ (t0.c0)))));
SELECT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)>(t0.c0))) AND ((+ (t0.c0)))));
