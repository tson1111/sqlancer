-- Time: 2021/05/19 01:09:34
-- Database: database11
-- Database version: 3.34.0
-- seed value: 1621357771655
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED, languageid="lid"); -- 1ms;
CREATE TABLE t1 (c0 INTEGER , c1 INT ); -- 1ms;
PRAGMA cache_size; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
PRAGMA main.cache_size; -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1654091823);
; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '59412'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '42304'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1891682367,13');
; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '49748'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(lid, c1, c2) VALUES ('%S[	6	㒂ff', 'wora', 0.5765511609537718), (-938789758, '-938789758', x''); -- 2ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, lid, c2) VALUES ('%S[	6	㒂ff', 'm1<Gtk', 0X56aa20ff); -- 2ms;
REINDEX BINARY; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.soft_heap_limit = 0; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE t1; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0.11851432196579836, '1453990143'), (NULL, '-208665743'); -- 0ms;
INSERT OR ROLLBACK INTO t1(c1) VALUES (''), (0.9849697064163125); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t1(c1, c0) VALUES (0.19825909010793974, '-1064208416'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1708896965); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '6081'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR IGNORE INTO vt0(c1, lid, c0, c2) VALUES (NULL, NULL, NULL, NULL), (x'72', '-1085033156', 0.9849697064163125, 0.5791516613055935), ((((-2.08665743E8 IN (0.11851432196579836, '%S[	6	㒂ff')))<(767748392 COLLATE NOCASE)), 0x16dfa69a, 0.1279980208142556, (((((NULL)AND(',')))OR(0x56aa20ff)) IN ())); -- 1ms;
INSERT OR FAIL INTO t1(c1) VALUES (x'0319ab55'), (NULL), (x'9182'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, lid, c2, c1) VALUES (x'6d', -860569680, NULL, NULL); -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT ALL AVG(((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c0))) OVER ( ROWS ((((((((((CAST(vt0.c1 AS NUMERIC))OR(t1.c0)))AND((('7F3矠0')&(vt0.lid)))))OR(IFNULL(DISTINCT t1.c0, t1.c1))))AND(x'' COLLATE RTRIM)))OR(CAST(t1.c0 AS BLOB))) PRECEDING) FROM vt0; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE main; -- 1ms;
PRAGMA temp.short_column_names; -- 0ms;
INSERT OR FAIL INTO vt0(c1, c0, lid, c2) VALUES ('0.5765511609537718', x'58da37', NULL, x'74'); -- 1ms;
INSERT OR ROLLBACK INTO t1(c1) VALUES (0Xffffffffccb4bfb0), (NULL), (x'81'); -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 383755930 sz=1922856525 noskipscan'); -- 1ms;
PRAGMA temp.busy_timeout; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, lid, c1) VALUES (x'47', '', -1928117674); -- 3ms;
PRAGMA main.defer_foreign_keys = false; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'e6'), (NULL); -- 1ms;
INSERT OR ABORT INTO t1(c1, c0) VALUES (0.11851432196579836, NULL), ('0.5791516613055935', NULL), ('y', 0.1279980208142556); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, lid) VALUES (x'e3', x'1d'); -- 1ms;
INSERT OR FAIL INTO t1 VALUES (' ', 1922856525); -- 1ms;
ANALYZE; -- 2ms;
PRAGMA temp.recursive_triggers = true; -- 0ms;
INSERT OR FAIL INTO t1(c1, c0) VALUES (NULL, -981114213), (0.5644616308110597, 0.8982271372328591); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 1ms;
INSERT OR ABORT INTO vt0(lid, c2, c0) VALUES (0.1279980208142556, 'wora', 0.2666932378192628); -- 1ms;
PRAGMA temp.cell_size_check; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
REINDEX; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i77 ON t1(x'',x'8982' COLLATE RTRIM DESC); -- 1ms;
CREATE INDEX i65 ON t1(CASE ((((((c0)OR(-1.891682367E9)))OR(c1)))OR(c1))  WHEN ((c1) ISNULL) THEN TYPEOF(x'ea') WHEN (((c0, c1)) BETWEEN ((c1, c0)) AND ((c1, c1))) THEN ((c1)<<(c0)) WHEN x'd6fde7' COLLATE RTRIM THEN CASE WHEN c1 THEN c1 ELSE c1 END ELSE CASE c0  WHEN 0.4786974358234275 THEN c1 END END COLLATE RTRIM,((((c1)!=(c0))) IS TRUE) COLLATE NOCASE) WHERE (((c0)) BETWEEN ((((c0)|(c0)))) AND ((CASE WHEN c1 THEN c1 END))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1483914412); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 1ms;
PRAGMA cell_size_check; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0.3997793162546692), (0.25082130696014815); -- 1ms;
PRAGMA main.secure_delete = FAST; -- 0ms;
PRAGMA application_id = 4512758646852539963; -- 1ms;
PRAGMA temp.cell_size_check; -- 0ms;
END; -- 0ms;
PRAGMA secure_delete; -- 0ms;
REINDEX i65; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX i65; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i90 ON t1((~ (CAST(c0 AS REAL))) ASC,CAST((x'51' IN (c0)) AS INTEGER) ASC) WHERE ((c1 IN (c1, c0)) IN (((((((c0)OR(c1)))AND(c0)))OR(c0)))); -- 0ms;
INSERT OR ABORT INTO vt0(c2, c0) VALUES (0xfffffffff699c751, '''//'); -- 0ms;
CREATE UNIQUE INDEX i8 ON t1(CAST((((c0, c1))>=((c0, c1))) AS NUMERIC) COLLATE BINARY DESC,(((((((('.癍')AND(c1)))AND(c1)))AND(c1)))AND(c1)) COLLATE BINARY COLLATE RTRIM); -- 0ms;
CREATE UNIQUE INDEX i30 ON t1((((c1) IS TRUE) IN ()),(((c1) BETWEEN (c0) AND (NULL)) IN ())); -- 0ms;
CREATE INDEX i7 ON t1(((0.47093642199023156) BETWEEN (CAST(0.2666932378192628 AS BLOB)) AND (((c0) NOT BETWEEN (c0) AND (c0)))) DESC,(((('')*(c0)))AND(c1 COLLATE NOCASE))); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, lid, c2) VALUES ('[', NULL, x'6f'), (0Xfffffffff699c751, 0.5644616308110597, 1922856525), ('1453990143', 0.8982271372328591, 'A㇄'); -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL MAX(vt0.lid) FROM vt0, t1 WHERE ((((((vt0.lid)AND(vt0.lid)))AND(vt0.c0)) IN (((vt0.c0)|(vt0.c2)))));
SELECT DISTINCT MAX(vt0.lid) FROM vt0, t1 WHERE ((((((((vt0.lid)AND(vt0.lid)))AND(vt0.c0)) IN (((vt0.c0)|(vt0.c2)))))AND((((vt0.c2 IN ())) NOTNULL)))) ORDER BY vt0.c2  NULLS LAST, ABS((- (vt0.c0))) ASC  NULLS LAST, IFNULL(DISTINCT ((((((1.453990143E9)OR(vt0.lid)))OR(vt0.lid)))AND(t1.c0)), ((vt0.c0) NOT NULL))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((t1.c0)AND(t1.c0)))AND(vt0.c1)) IN (TRIM(1e500, t1.c0), '')));
SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE ((((((((t1.c0)AND(t1.c0)))AND(vt0.c1)) IN (TRIM(1e500, t1.c0))))AND(0.5459105469872081))) LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE ((- ((vt0.c2 IN ())))) LIMIT 1;
SELECT MIN(vt0.c0) FROM t1, vt0 WHERE (IFNULL((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.lid))), CAST(t1.c1 AS TEXT)));
SELECT DISTINCT MIN(vt0.c0) FROM t1, vt0 WHERE (((IFNULL((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.lid))), CAST(t1.c1 AS TEXT)))AND(((((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)))<=((((vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.lid, vt0.c2)) AND ((0.9383035280993056, vt0.c2)))))))) LIMIT 0;
SELECT * FROM t1, vt0 WHERE (t1.c1) ORDER BY (0x676c31c4 IN ())  NULLS LAST, ((CAST(t1.c0 AS NUMERIC))*(UNLIKELY(vt0.lid))), CAST(t1.c0 AS BLOB) COLLATE NOCASE;
SELECT DISTINCT * FROM t1, vt0 WHERE (t1.c1) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM t1, vt0 WHERE (t1.c1) ORDER BY (0x676c31c4 IN ())  NULLS LAST, ((CAST(t1.c0 AS NUMERIC))*(UNLIKELY(vt0.lid))), CAST(t1.c0 AS BLOB) COLLATE NOCASE;
SELECT MAX(t1.c0) FROM t1, vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.lid)) AS NUMERIC));
SELECT ALL MAX(t1.c0) FROM t1, vt0 WHERE (((CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.lid)) AS NUMERIC))AND(CASE vt0.c2  WHEN vt0.lid THEN t1.c1 END COLLATE RTRIM))) ORDER BY HEX(DISTINCT 7.67748392E8 COLLATE RTRIM) DESC LIMIT 0;
SELECT COUNT(*) FROM t1, vt0 WHERE ((((vt0.c1 IN (vt0.lid))) NOTNULL));
SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE ((((vt0.c1 IN (vt0.lid))) NOTNULL)) ORDER BY vt0.lid  NULLS FIRST, (((- (vt0.lid)))||(((vt0.c1)%(vt0.c2)))) DESC  NULLS LAST LIMIT 0;
SELECT * FROM t1 NATURAL JOIN vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1, t1.c1, vt0.c1)) BETWEEN ((CAST(vt0.c0 AS REAL), CAST(vt0.c2 AS INTEGER), 'A㇄', ((vt0.lid) NOT BETWEEN (t1.c0) AND (t1.c1)), x'9190')) AND ((LIKE(t1.c0, t1.c1, '['), CAST(vt0.c0 AS INTEGER), CAST(vt0.c1 AS BLOB), (vt0.c0 IN (vt0.c1)), CAST(t1.c0 AS TEXT))))) ORDER BY ((t1.c1)*(vt0.c0)) COLLATE RTRIM;
SELECT * FROM t1 NATURAL JOIN vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1, t1.c1, vt0.c1)) BETWEEN ((CAST(vt0.c0 AS REAL), CAST(vt0.c2 AS INTEGER), 'A㇄', ((vt0.lid) NOT BETWEEN (t1.c0) AND (t1.c1)), x'9190')) AND ((LIKE(t1.c0, t1.c1, '['), CAST(vt0.c0 AS INTEGER), CAST(vt0.c1 AS BLOB), (vt0.c0 IN (vt0.c1)), CAST(t1.c0 AS TEXT)))))AND(LAST_INSERT_ROWID()))) ORDER BY (((- (vt0.c0))) IS TRUE) DESC, (((((vt0.c1, vt0.lid, vt0.c1, vt0.lid))>=((vt0.c2, vt0.c2, t1.c1, t1.c1)))) NOT BETWEEN (((vt0.lid) BETWEEN (NULL) AND (vt0.c2))) AND (vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM t1 NATURAL JOIN vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1, t1.c1, vt0.c1)) BETWEEN ((CAST(vt0.c0 AS REAL), CAST(vt0.c2 AS INTEGER), 'A㇄', ((vt0.lid) NOT BETWEEN (t1.c0) AND (t1.c1)), x'9190')) AND ((LIKE(t1.c0, t1.c1, '['), CAST(vt0.c0 AS INTEGER), CAST(vt0.c1 AS BLOB), (vt0.c0 IN (vt0.c1)), CAST(t1.c0 AS TEXT))))) ORDER BY ((t1.c1)*(vt0.c0)) COLLATE RTRIM;
SELECT * FROM t1 NATURAL JOIN vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1, t1.c1, vt0.c1)) BETWEEN ((CAST(vt0.c0 AS REAL), CAST(vt0.c2 AS INTEGER), 'A㇄', ((vt0.lid) NOT BETWEEN (t1.c0) AND (t1.c1)), x'9190')) AND ((LIKE(t1.c0, t1.c1, '['), CAST(vt0.c0 AS INTEGER), CAST(vt0.c1 AS BLOB), (vt0.c0 IN (vt0.c1)), CAST(t1.c0 AS TEXT)))))AND(LAST_INSERT_ROWID()))) ORDER BY (((- (vt0.c0))) IS TRUE) DESC, (((((vt0.c1, vt0.lid, vt0.c1, vt0.lid))>=((vt0.c2, vt0.c2, t1.c1, t1.c1)))) NOT BETWEEN (((vt0.lid) BETWEEN (NULL) AND (vt0.c2))) AND (vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT ALL MAX(t1.c0) FROM vt0, t1 WHERE ((LAST_INSERT_ROWID() IN (((t1.c1) IS FALSE))));
SELECT ALL MAX(t1.c0) FROM vt0, t1 WHERE ((LAST_INSERT_ROWID() IN (((t1.c1) IS FALSE)))) LIMIT 0x0 INTERSECT SELECT MAX(t1.c0) FROM vt0, t1 WHERE (((vt0.lid) IS TRUE) COLLATE BINARY) LIMIT 0X0;
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (((((((-938789758)|(t1.c1)))OR(((vt0.lid) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND((((t1.c0, vt0.c2))>((t1.c1, vt0.c1)))))) ORDER BY ((((((vt0.lid COLLATE NOCASE)OR((~ (vt0.lid)))))AND(CAST(t1.c0 AS REAL))))AND(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE (((((((((0Xffffffffc80b3482)|(t1.c1)))OR(((vt0.lid) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND((((t1.c0, vt0.c2))>((t1.c1, vt0.c1))))))AND(((vt0.c1 COLLATE NOCASE) ISNULL)))) ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN '' ELSE vt0.c0 END COLLATE RTRIM DESC INTERSECT SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE (CASE CASE WHEN vt0.c1 THEN t1.c0 ELSE vt0.c1 END  WHEN CASE t1.c1  WHEN vt0.lid THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN t1.c1 THEN vt0.c2 WHEN vt0.c0 THEN t1.c0 END THEN (((t1.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, t1.c0)) AND ((vt0.c2, t1.c1))) WHEN ((t1.c0)<(vt0.lid)) THEN (+ (vt0.c1)) WHEN (0.1547307848547349 IN ()) THEN ((((((vt0.c2)AND('R曗u~')))OR(vt0.c1)))AND(vt0.c0)) END) ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN '' ELSE vt0.c0 END COLLATE RTRIM DESC;
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (((((((-938789758)|(t1.c1)))OR(((vt0.lid) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND((((t1.c0, vt0.c2))>((t1.c1, vt0.c1)))))) ORDER BY ((((((vt0.lid COLLATE NOCASE)OR((~ (vt0.lid)))))AND(CAST(t1.c0 AS REAL))))AND(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE (((((((((0Xffffffffc80b3482)|(t1.c1)))OR(((vt0.lid) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND((((t1.c0, vt0.c2))>((t1.c1, vt0.c1))))))AND(((vt0.c1 COLLATE NOCASE) ISNULL)))) ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN '' ELSE vt0.c0 END COLLATE RTRIM DESC INTERSECT SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE (CASE CASE WHEN vt0.c1 THEN t1.c0 ELSE vt0.c1 END  WHEN CASE t1.c1  WHEN vt0.lid THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN t1.c1 THEN vt0.c2 WHEN vt0.c0 THEN t1.c0 END THEN (((t1.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, t1.c0)) AND ((vt0.c2, t1.c1))) WHEN ((t1.c0)<(vt0.lid)) THEN (+ (vt0.c1)) WHEN (0.1547307848547349 IN ()) THEN ((((((vt0.c2)AND('R曗u~')))OR(vt0.c1)))AND(vt0.c0)) END) ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN '' ELSE vt0.c0 END COLLATE RTRIM DESC;
SELECT * FROM t1 NATURAL JOIN vt0 WHERE (((NOT (t1.c0)) IN (((vt0.c2)<>(t1.c1))))) ORDER BY (CAST(t1.c0 AS INTEGER) IN (((((vt0.lid)OR(vt0.c0)))OR(vt0.c2)), CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE (((NOT (t1.c0)) IN (((vt0.c2)>(t1.c1))))) ORDER BY (CAST(t1.c0 AS INTEGER) IN (((((vt0.lid)OR(vt0.c0)))OR(vt0.c2)), CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE (((((((((t1.c1)AND(vt0.lid)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE) ORDER BY (CAST(t1.c0 AS INTEGER) IN (((((vt0.lid)OR(vt0.c0)))OR(vt0.c2)), CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT * FROM t1 NATURAL JOIN vt0 WHERE (((NOT (t1.c0)) IN (((vt0.c2)<>(t1.c1))))) ORDER BY (CAST(t1.c0 AS INTEGER) IN (((((vt0.lid)OR(vt0.c0)))OR(vt0.c2)), CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE (((NOT (t1.c0)) IN (((vt0.c2)>(t1.c1))))) ORDER BY (CAST(t1.c0 AS INTEGER) IN (((((vt0.lid)OR(vt0.c0)))OR(vt0.c2)), CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE (((((((((t1.c1)AND(vt0.lid)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE) ORDER BY (CAST(t1.c0 AS INTEGER) IN (((((vt0.lid)OR(vt0.c0)))OR(vt0.c2)), CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1, vt0 WHERE ((NOT ((~ (vt0.c1)))));
SELECT DISTINCT MIN(t1.c0) FROM t1, vt0 WHERE ((((NOT ((~ (vt0.c1)))))AND(CASE ((vt0.c2)-(vt0.lid))  WHEN ((t1.c0)>>(t1.c0)) THEN x'' WHEN ((((t1.c1)AND(t1.c1)))OR(t1.c1)) THEN vt0.c0 COLLATE NOCASE WHEN CASE vt0.lid  WHEN vt0.c0 THEN vt0.c1 END THEN 1922856525 WHEN CAST(vt0.c2 AS NUMERIC) THEN CASE WHEN vt0.c2 THEN vt0.lid WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN vt0.c1 END WHEN CASE WHEN vt0.lid THEN t1.c1 ELSE NULL END THEN ((((((((t1.c0)OR(vt0.c1)))OR(t1.c0)))AND(vt0.c1)))AND(t1.c0)) ELSE ((vt0.c1)||(t1.c1)) END))) INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1, vt0 WHERE (((((((((((t1.c1 COLLATE BINARY)OR(((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)))OR(0x676c31c4)))AND(vt0.c0)))))AND(((vt0.c2)>>(vt0.c1)))))OR(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.lid)))))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(vt0.c2)));
SELECT ALL * FROM t1 INNER JOIN vt0 ON NULLIF(CASE t1.c1  WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END, ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR('-975141274')))OR(t1.c0))) WHERE (((t1.c0) IS TRUE) COLLATE BINARY);
SELECT * FROM t1 INNER JOIN vt0 ON NULLIF(CASE t1.c1  WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END, ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR('-975141274')))OR(t1.c0))) WHERE (((((t1.c0) IS TRUE) COLLATE BINARY)AND(TRIM(CASE 0.4461761715121718  WHEN vt0.lid THEN vt0.lid WHEN vt0.c1 THEN t1.c1 END))));
SELECT ALL * FROM t1 INNER JOIN vt0 ON NULLIF(CASE t1.c1  WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END, ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR('-975141274')))OR(t1.c0))) WHERE (((t1.c0) IS TRUE) COLLATE BINARY);
SELECT * FROM t1 INNER JOIN vt0 ON NULLIF(CASE t1.c1  WHEN vt0.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END, ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR('-975141274')))OR(t1.c0))) WHERE (((((t1.c0) IS TRUE) COLLATE BINARY)AND(TRIM(CASE 0.4461761715121718  WHEN vt0.lid THEN vt0.lid WHEN vt0.c1 THEN t1.c1 END))));
SELECT ALL * FROM t1 INDEXED BY i65 WHERE (((((((((t1.c0)AND(-1e500)))AND(t1.c1)))OR(t1.c1))) BETWEEN ((((x'd3', t1.c1)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1)))) AND (((t1.c1)LIKE(t1.c0)))));
SELECT * FROM t1 INDEXED BY i65 WHERE (((((((((t1.c0)AND(-1e500)))AND(t1.c1)))OR(t1.c1))) BETWEEN ((((x'd3', t1.c1)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1)))) AND (((t1.c1)LIKE(t1.c0))))) LIMIT 0;
SELECT ALL * FROM t1 INDEXED BY i65 WHERE (((((((((t1.c0)AND(-1e500)))AND(t1.c1)))OR(t1.c1))) BETWEEN ((((x'd3', t1.c1)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1)))) AND (((t1.c1)LIKE(t1.c0)))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((vt0.c1)&((('9223372036854775807')LIKE(vt0.lid))))) ORDER BY ((((vt0.lid COLLATE RTRIM)AND(((vt0.c0) BETWEEN (t1.c0) AND (vt0.lid)))))AND(((t1.c0) IS FALSE))) DESC  NULLS LAST, ((vt0.c1) IS FALSE) COLLATE RTRIM, (NOT ((((t1.c0, t1.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0, vt0.c1)) AND ((t1.c1, 0xffffffffb3b6c2a2, vt0.lid, x'e904')))));
SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE (((vt0.c1)&((('9223372036854775807')LIKE(vt0.lid))))) ORDER BY ((((vt0.lid COLLATE RTRIM)AND(((vt0.c0) BETWEEN (t1.c0) AND (vt0.lid)))))AND(((t1.c0) IS FALSE))) DESC  NULLS LAST, ((vt0.c1) IS FALSE) COLLATE RTRIM, (NOT ((((t1.c0, t1.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0, vt0.c1)) AND ((t1.c1, -1279868254, vt0.lid, x'e904'))))) LIMIT 1;
SELECT ALL MIN(vt0.c0) FROM vt0, t1 WHERE (0.7608391808713805) ORDER BY (t1.c1 COLLATE NOCASE IN ())  NULLS FIRST, (((((t1.c1)<<(vt0.lid)), CAST(vt0.c1 AS INTEGER), CASE WHEN t1.c1 THEN vt0.c0 END))<((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 END, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END, ((vt0.c2) IS FALSE)))) ASC  NULLS FIRST;
SELECT MIN(vt0.c0) FROM vt0, t1 WHERE (0.7608391808713805) ORDER BY ((vt0.c0)IS(vt0.c1)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c1)-(t1.c0)))<(-1279868254)));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)-(t1.c0)))<(0Xffffffffb3b6c2a2))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) NOTNULL))AND(t1.c0 COLLATE RTRIM)));
SELECT ALL * FROM t1 WHERE (((((t1.c1)-(t1.c0)))<(-1279868254)));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)-(t1.c0)))<(0Xffffffffb3b6c2a2))) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) NOTNULL))AND(t1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, t1 WHERE ((- (CAST(vt0.c0 AS REAL))));
SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE ((((- (CAST(vt0.c0 AS REAL))))AND(CASE WHEN ((vt0.c1)+(0.6151396006227638)) THEN CAST(vt0.c1 AS BLOB) END)));
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE ((((~ (vt0.lid))) IS FALSE)) ORDER BY ((HEX(DISTINCT t1.c0))>=(((((((((((vt0.c1)AND(vt0.lid)))OR(vt0.c0)))AND(t1.c0)))AND(t1.c1)))OR(vt0.c2)))) ASC  NULLS LAST, CASE (~ (t1.c0))  WHEN ((vt0.lid)&(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN TIME(t1.c1, t1.c0, vt0.c2, vt0.c2) THEN ((vt0.c1)%(t1.c1)) END DESC;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE ((((~ (vt0.lid))) IS FALSE)) ORDER BY (NOT ((- (vt0.lid)))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE ((- (json_valid(t1.c0)))) ORDER BY (NOT ((- (vt0.lid)))) LIMIT 1;
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE ((((~ (vt0.lid))) IS FALSE)) ORDER BY ((HEX(DISTINCT t1.c0))>=(((((((((((vt0.c1)AND(vt0.lid)))OR(vt0.c0)))AND(t1.c0)))AND(t1.c1)))OR(vt0.c2)))) ASC  NULLS LAST, CASE (~ (t1.c0))  WHEN ((vt0.lid)&(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) WHEN TIME(t1.c1, t1.c0, vt0.c2, vt0.c2) THEN ((vt0.c1)%(t1.c1)) END DESC;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE ((((~ (vt0.lid))) IS FALSE)) ORDER BY (NOT ((- (vt0.lid)))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE ((- (json_valid(t1.c0)))) ORDER BY (NOT ((- (vt0.lid)))) LIMIT 1;
SELECT ALL * FROM vt0 WHERE (COALESCE(-9.81114213E8, '-166244635', vt0.c0, vt0.lid) COLLATE BINARY);
SELECT * FROM vt0 WHERE (COALESCE(-9.81114213E8, '-166244635', vt0.c0, vt0.lid) COLLATE BINARY) ORDER BY ((vt0.c0 COLLATE RTRIM)+(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, (((~ ('-1944975075'))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN vt0.lid END)) ASC  NULLS FIRST LIMIT 0x2 INTERSECT SELECT ALL * FROM vt0 WHERE (CASE (((vt0.lid))<=((vt0.c2)))  WHEN vt0.c2 COLLATE NOCASE THEN vt0.c0 END) ORDER BY ((vt0.c0 COLLATE RTRIM)+(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, (((~ ('-1944975075'))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN vt0.lid END)) ASC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM vt0 WHERE (COALESCE(-9.81114213E8, '-166244635', vt0.c0, vt0.lid) COLLATE BINARY);
SELECT * FROM vt0 WHERE (COALESCE(-9.81114213E8, '-166244635', vt0.c0, vt0.lid) COLLATE BINARY) ORDER BY ((vt0.c0 COLLATE RTRIM)+(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, (((~ ('-1944975075'))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN vt0.lid END)) ASC  NULLS FIRST LIMIT 0x2 INTERSECT SELECT ALL * FROM vt0 WHERE (CASE (((vt0.lid))<=((vt0.c2)))  WHEN vt0.c2 COLLATE NOCASE THEN vt0.c0 END) ORDER BY ((vt0.c0 COLLATE RTRIM)+(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, (((~ ('-1944975075'))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN vt0.lid END)) ASC  NULLS FIRST LIMIT 2;
SELECT * FROM t1 WHERE (((((((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR((NOT (t1.c1)))))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))OR((+ (t1.c1)))))AND((t1.c0 IN ()))))AND(x''))) ORDER BY ((t1.c0 COLLATE BINARY) IS FALSE), ((((((((t1.c1)AND(-1635427576)))AND(t1.c0)))OR(t1.c1)))/(((t1.c1)>=(t1.c0)))), ((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(HEX(t1.c0))))AND(((('', t1.c0))<>((t1.c0, t1.c1))))))AND((t1.c0 IN (t1.c0)))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR((NOT (t1.c1)))))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))OR((+ (t1.c1)))))AND((t1.c0 IN ()))))AND(x''))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))/(((x'')|(t1.c0)))) DESC  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND(((t1.c0) IS TRUE))))AND(t1.c1)))AND(CAST(t1.c0 AS TEXT)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))/(((x'')|(t1.c0)))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR((NOT (t1.c1)))))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))OR((+ (t1.c1)))))AND((t1.c0 IN ()))))AND(x''))) ORDER BY ((t1.c0 COLLATE BINARY) IS FALSE), ((((((((t1.c1)AND(-1635427576)))AND(t1.c0)))OR(t1.c1)))/(((t1.c1)>=(t1.c0)))), ((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(HEX(t1.c0))))AND(((('', t1.c0))<>((t1.c0, t1.c1))))))AND((t1.c0 IN (t1.c0)))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR((NOT (t1.c1)))))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))OR((+ (t1.c1)))))AND((t1.c0 IN ()))))AND(x''))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))/(((x'')|(t1.c0)))) DESC  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND(((t1.c0) IS TRUE))))AND(t1.c1)))AND(CAST(t1.c0 AS TEXT)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))/(((x'')|(t1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE 0.569557044178326  WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END THEN (t1.c1 IN ()) WHEN (+ (t1.c1)) THEN CAST(t1.c0 AS REAL) WHEN ((t1.c1)IS NOT(t1.c1)) THEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) END) ORDER BY (NOT (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))), (+ (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE 0.569557044178326  WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END THEN (t1.c1 IN ()) WHEN (+ (t1.c1)) THEN CAST(t1.c0 AS REAL) WHEN ((t1.c1)IS NOT(t1.c1)) THEN (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) END)AND('secondsC'))) ORDER BY (- ((((t1.c1, t1.c0))<>((0Xffffffffbf53b53c, t1.c1))))) DESC, CAST(t1.c0 AS INTEGER) COLLATE BINARY DESC LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((t1.c0)+(t1.c1)))OR(((t1.c1) NOT NULL))))AND(((t1.c0) IS FALSE)))) ORDER BY (- ((((t1.c1, t1.c0))<>((0xffffffffbf53b53c, t1.c1))))) DESC, CAST(t1.c0 AS INTEGER) COLLATE BINARY DESC LIMIT 0X0;
SELECT MIN(t1.c0) FROM t1 WHERE (t1.c1);
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((t1.c1)AND(((+ (NULL)) IN (t1.c0 COLLATE BINARY)))));
SELECT MIN(t1.c0) FROM t1, vt0 INDEXED BY i7 WHERE ((((vt0.c0, '-1085033156', t1.c1, x'95e5b26c', t1.c1, t1.c1)) BETWEEN ((t1.c1, (('-157694127')>(vt0.c2)), CASE vt0.c2  WHEN vt0.c2 THEN t1.c1 WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN vt0.c2 ELSE vt0.c1 END, ((((((vt0.c2)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), ((vt0.c0) IS FALSE), vt0.c2 COLLATE BINARY)) AND ((LTRIM(vt0.lid, t1.c1), (t1.c1 IN (vt0.c0)), INSTR(t1.c0, t1.c0), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.lid)))OR(t1.c0)))OR(vt0.lid)), 0.4027548931169431 COLLATE RTRIM, ((vt0.lid) NOT NULL)))));
SELECT DISTINCT MIN(t1.c0) FROM t1, vt0 INDEXED BY i7 WHERE ((((vt0.c0, '-1085033156', t1.c1, x'95e5b26c', t1.c1, t1.c1)) BETWEEN ((t1.c1, (('-157694127')>(vt0.c2)), CASE vt0.c2  WHEN vt0.c2 THEN t1.c1 WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN vt0.c2 ELSE vt0.c1 END, ((((((vt0.c2)AND(t1.c1)))AND(t1.c1)))AND(t1.c0)), ((vt0.c0) IS FALSE), vt0.c2 COLLATE BINARY)) AND ((LTRIM(vt0.lid, t1.c1), (t1.c1 IN (vt0.c0)), INSTR(t1.c0, t1.c0), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.lid)))OR(t1.c0)))OR(vt0.lid)), 0.4027548931169431 COLLATE RTRIM, ((vt0.lid) NOT NULL))))) ORDER BY (((vt0.c0 IN (vt0.c0, '-1944975075'))) IS TRUE) ASC LIMIT 0x2 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1, vt0 INDEXED BY i7 WHERE ((((x'57')) BETWEEN ((t1.c1)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY (((vt0.c0 IN (vt0.c0, '-1944975075'))) IS TRUE) ASC LIMIT 0x2;
SELECT ALL MAX(vt0.lid) FROM t1, vt0 WHERE ('''g') ORDER BY ((vt0.c1) NOT NULL) COLLATE NOCASE  NULLS FIRST, ((((t1.c0) BETWEEN ('-2140833096') AND (t1.c0)))!=(((((vt0.lid)OR(t1.c0)))AND(NULL)))) ASC, CAST(t1.c1 COLLATE NOCASE AS INTEGER) DESC  NULLS LAST;
SELECT DISTINCT MAX(vt0.lid) FROM t1, vt0 WHERE ((('''g')AND((NOT (LIKELIHOOD(DISTINCT vt0.c1, vt0.c2)))))) ORDER BY ((((vt0.c1)>('lD<'))) ISNULL) ASC, ((HEX(vt0.c1)) BETWEEN (((t1.c1) BETWEEN (vt0.c1) AND (vt0.c2))) AND (IFNULL(DISTINCT t1.c1, t1.c1))) ASC LIMIT 1;
SELECT MIN(vt0.c2) FROM vt0 WHERE (((((((vt0.c0)OR(0.6059696527120175)))AND(vt0.lid)))OR(x'')) COLLATE BINARY);
SELECT DISTINCT MIN(vt0.c2) FROM vt0 WHERE (((((((vt0.c0)OR(0.6059696527120175)))AND(vt0.lid)))OR(x'')) COLLATE BINARY) LIMIT 2;
SELECT * FROM vt0, t1 WHERE ((CASE t1.c1  WHEN vt0.c1 THEN vt0.lid WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 END IN ((vt0.lid IN (t1.c0, t1.c1)))));
SELECT * FROM vt0, t1 WHERE ((((CASE t1.c1  WHEN vt0.c1 THEN vt0.lid WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 END IN ((vt0.lid IN (t1.c0, t1.c1)))))AND(CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c1)) THEN CAST(vt0.c2 AS NUMERIC) WHEN t1.c1 THEN ((((((((((((vt0.c1)AND(vt0.lid)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.lid)))OR(vt0.c2)))AND(vt0.lid)) END))) LIMIT 0X0;
SELECT * FROM vt0, t1 WHERE ((CASE t1.c1  WHEN vt0.c1 THEN vt0.lid WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 END IN ((vt0.lid IN (t1.c0, t1.c1)))));
SELECT * FROM vt0, t1 WHERE ((((CASE t1.c1  WHEN vt0.c1 THEN vt0.lid WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 END IN ((vt0.lid IN (t1.c0, t1.c1)))))AND(CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c1)) THEN CAST(vt0.c2 AS NUMERIC) WHEN t1.c1 THEN ((((((((((((vt0.c1)AND(vt0.lid)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.lid)))OR(vt0.c2)))AND(vt0.lid)) END))) LIMIT 0X0;
SELECT * FROM t1, vt0 WHERE ((NOT (CASE WHEN x'' THEN vt0.c2 ELSE vt0.c2 END))) ORDER BY ((- (0.3643271186715735)) IN ()) ASC, (+ ((+ (vt0.c2))))  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE ((NOT (CASE WHEN x'' THEN vt0.c2 ELSE vt0.c2 END))) ORDER BY UPPER(DISTINCT vt0.lid), vt0.c1 DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM t1, vt0 WHERE ('1735143876') ORDER BY UPPER(DISTINCT vt0.lid), vt0.c1 DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t1, vt0 WHERE ((NOT (CASE WHEN x'' THEN vt0.c2 ELSE vt0.c2 END))) ORDER BY ((- (0.3643271186715735)) IN ()) ASC, (+ ((+ (vt0.c2))))  NULLS LAST;
SELECT ALL MAX(vt0.c2) FROM vt0, t1 WHERE ((t1.c0 COLLATE RTRIM IN (((t1.c0)<=(x'df1347')), ((t1.c1)>(vt0.c1)))));
SELECT MAX(vt0.c2) FROM vt0, t1 WHERE ((t1.c0 COLLATE RTRIM IN (((t1.c0)<=(x'df1347')), ((t1.c1)>(vt0.c1))))) LIMIT 2 INTERSECT SELECT ALL MAX(vt0.c2) FROM vt0, t1 WHERE (CAST(((vt0.c0)<=(vt0.c0)) AS INTEGER)) LIMIT 2;
SELECT ALL * FROM t1, vt0 WHERE (((((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid)))AND(t1.c0))) BETWEEN (1735143876) AND ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))));
SELECT DISTINCT * FROM t1, vt0 WHERE (((((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid)))AND(t1.c0))) BETWEEN (0x676c31c4) AND ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))))) LIMIT 0x1;
SELECT ALL * FROM t1, vt0 WHERE (((((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid)))AND(t1.c0))) BETWEEN (1735143876) AND ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))));
SELECT DISTINCT * FROM t1, vt0 WHERE (((((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid)))AND(t1.c0))) BETWEEN (0x676c31c4) AND ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))))) LIMIT 0x1;
SELECT * FROM t1, vt0 INDEXED BY i65 WHERE (vt0.c1);
SELECT ALL * FROM t1, vt0 INDEXED BY i65 WHERE (((vt0.c1)AND((((((((vt0.c2)OR(vt0.lid)))OR(vt0.c0)))AND(vt0.c0)) IN ())))) INTERSECT SELECT * FROM t1, vt0 INDEXED BY i65 WHERE (0.43641431309379297);
SELECT * FROM t1, vt0 INDEXED BY i65 WHERE (vt0.c1);
SELECT * FROM vt0, t1 WHERE ((x'835568b1' IN (((vt0.c0) NOT BETWEEN (vt0.lid) AND (t1.c1))))) ORDER BY t1.c1  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE ((((x'835568b1' IN (((vt0.c0) NOT BETWEEN (vt0.lid) AND (t1.c1)))))AND(((((((((t1.c1)OR(t1.c0)))OR('')))AND(((t1.c0)|(vt0.c0)))))OR(vt0.c0))))) ORDER BY t1.c1  NULLS FIRST LIMIT 2;
SELECT * FROM vt0, t1 WHERE ((x'835568b1' IN (((vt0.c0) NOT BETWEEN (vt0.lid) AND (t1.c1))))) ORDER BY t1.c1  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE ((((x'835568b1' IN (((vt0.c0) NOT BETWEEN (vt0.lid) AND (t1.c1)))))AND(((((((((t1.c1)OR(t1.c0)))OR('')))AND(((t1.c0)|(vt0.c0)))))OR(vt0.c0))))) ORDER BY t1.c1  NULLS FIRST LIMIT 2;
SELECT ALL MAX(vt0.c1) FROM vt0, t1 WHERE ((((t1.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)))) AND ((CASE t1.c0  WHEN vt0.c2 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN t1.c0 END)))) ORDER BY CAST(((t1.c1) ISNULL) AS REAL), (((0.9972256142531567))!=((CAST(vt0.c2 AS TEXT))));
SELECT ALL MAX(vt0.c1) FROM vt0, t1 WHERE ((((t1.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)))) AND ((CASE t1.c0  WHEN vt0.c2 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN t1.c0 END)))) ORDER BY CAST(((t1.c1) ISNULL) AS REAL), (((0.9972256142531567))<>((CAST(vt0.c2 AS TEXT)))) LIMIT 0x5;
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c2 AS TEXT))OR((- (vt0.lid)))))OR((((vt0.c2)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid))))))AND((((vt0.lid, vt0.c0))<=((vt0.c2, vt0.c0))))))AND((vt0.lid IN ()))));
SELECT ALL * FROM vt0 WHERE (((((((((CAST(vt0.c2 AS TEXT))OR((- (vt0.lid)))))OR((((vt0.c2)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid))))))AND((((vt0.lid, vt0.c0))==((vt0.c2, vt0.c0))))))AND((vt0.lid IN ()))));
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c2 AS TEXT))OR((- (vt0.lid)))))OR((((vt0.c2)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid))))))AND((((vt0.lid, vt0.c0))<=((vt0.c2, vt0.c0))))))AND((vt0.lid IN ()))));
SELECT ALL * FROM vt0 WHERE (((((((((CAST(vt0.c2 AS TEXT))OR((- (vt0.lid)))))OR((((vt0.c2)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid))))))AND((((vt0.lid, vt0.c0))==((vt0.c2, vt0.c0))))))AND((vt0.lid IN ()))));
SELECT * FROM t1 INNER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t1.c0 ELSE t1.c1 END AS NUMERIC) WHERE (((0.022960271538790655) BETWEEN ((((vt0.c0, vt0.c2, t1.c1, t1.c0)) NOT BETWEEN ((vt0.lid, vt0.c0, t1.c0, t1.c0)) AND ((t1.c0, vt0.lid, vt0.c1, vt0.c2)))) AND ('⢼慂')));
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t1.c0 ELSE t1.c1 END AS NUMERIC) WHERE (((0.022960271538790655) BETWEEN ((((vt0.c0, vt0.c2, t1.c1, t1.c0)) NOT BETWEEN ((vt0.lid, vt0.c0, t1.c0, t1.c0)) AND ((t1.c0, vt0.lid, vt0.c1, vt0.c2)))) AND ('⢼慂'))) LIMIT 0X0;
SELECT * FROM t1 INNER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t1.c0 ELSE t1.c1 END AS NUMERIC) WHERE (((0.022960271538790655) BETWEEN ((((vt0.c0, vt0.c2, t1.c1, t1.c0)) NOT BETWEEN ((vt0.lid, vt0.c0, t1.c0, t1.c0)) AND ((t1.c0, vt0.lid, vt0.c1, vt0.c2)))) AND ('⢼慂')));
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t1.c0 ELSE t1.c1 END AS NUMERIC) WHERE (((0.022960271538790655) BETWEEN ((((vt0.c0, vt0.c2, t1.c1, t1.c0)) NOT BETWEEN ((vt0.lid, vt0.c0, t1.c0, t1.c0)) AND ((t1.c0, vt0.lid, vt0.c1, vt0.c2)))) AND ('⢼慂'))) LIMIT 0X0;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)<(vt0.lid)) THEN vt0.lid WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)) THEN CAST(vt0.c2 AS BLOB) WHEN (((vt0.lid, vt0.lid))<=((vt0.c2, vt0.c2))) THEN (NOT (vt0.c2)) WHEN vt0.lid COLLATE NOCASE THEN TIME(vt0.c2, vt0.c0, -1.085033156E9) ELSE (((vt0.c0, vt0.c2, vt0.c2))>=((vt0.c1, 0Xffffffffb985b486, vt0.lid))) END);
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)<(vt0.lid)) THEN vt0.lid WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)) THEN CAST(vt0.c2 AS BLOB) WHEN (((vt0.lid, vt0.lid))==((vt0.c2, vt0.c2))) THEN (NOT (vt0.c2)) WHEN vt0.lid COLLATE NOCASE THEN TIME(vt0.c2, vt0.c0, -1.085033156E9) ELSE (((vt0.c0, vt0.c2, vt0.c2))==((vt0.c1, -1182419834, vt0.lid))) END) ORDER BY (CAST(vt0.c1 AS REAL) IN ())  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CHANGES()) ORDER BY (CAST(vt0.c1 AS REAL) IN ())  NULLS FIRST LIMIT 0X1;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)<(vt0.lid)) THEN vt0.lid WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)) THEN CAST(vt0.c2 AS BLOB) WHEN (((vt0.lid, vt0.lid))<=((vt0.c2, vt0.c2))) THEN (NOT (vt0.c2)) WHEN vt0.lid COLLATE NOCASE THEN TIME(vt0.c2, vt0.c0, -1.085033156E9) ELSE (((vt0.c0, vt0.c2, vt0.c2))>=((vt0.c1, 0Xffffffffb985b486, vt0.lid))) END);
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)<(vt0.lid)) THEN vt0.lid WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)) THEN CAST(vt0.c2 AS BLOB) WHEN (((vt0.lid, vt0.lid))==((vt0.c2, vt0.c2))) THEN (NOT (vt0.c2)) WHEN vt0.lid COLLATE NOCASE THEN TIME(vt0.c2, vt0.c0, -1.085033156E9) ELSE (((vt0.c0, vt0.c2, vt0.c2))==((vt0.c1, -1182419834, vt0.lid))) END) ORDER BY (CAST(vt0.c1 AS REAL) IN ())  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CHANGES()) ORDER BY (CAST(vt0.c1 AS REAL) IN ())  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM vt0 WHERE ('-192192190');
SELECT DISTINCT * FROM vt0 WHERE ('-192192190') LIMIT 0x0;
SELECT ALL * FROM vt0 WHERE ('-192192190');
SELECT DISTINCT * FROM vt0 WHERE ('-192192190') LIMIT 0x0;
SELECT MAX(t1.c0) FROM t1 WHERE ((((CASE t1.c1  WHEN NULL THEN t1.c1 END, t1.c0 COLLATE NOCASE, (~ (t1.c1)), CAST(t1.c0 AS TEXT), '-1279868254'))=((((t1.c1)>=(t1.c1)), t1.c1, (('%㇄')+(t1.c0)), x'e1e6f69a', t1.c0 COLLATE NOCASE))));
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((CASE t1.c1  WHEN NULL THEN t1.c1 END, t1.c0 COLLATE NOCASE, (~ (t1.c1)), CAST(t1.c0 AS TEXT), '-1279868254'))==((((t1.c1)=(t1.c1)), t1.c1, (('%㇄')+(t1.c0)), x'e1e6f69a', t1.c0 COLLATE NOCASE)))) LIMIT 2 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((((t1.c0)>=('1642844612')), ((t1.c1) BETWEEN (t1.c1) AND (t1.c1))))==(((+ (t1.c0)), 0.954695491861347)))) LIMIT 0x2;
SELECT ALL * FROM t1, vt0 WHERE ((((- ('TRUE')))%(((vt0.lid)<<(vt0.c1))))) ORDER BY ((((vt0.c2 IN ())))!=((((vt0.lid) BETWEEN (t1.c1) AND (vt0.lid))))), (NOT (vt0.c0 COLLATE NOCASE));
SELECT * FROM t1, vt0 WHERE ((((- ('TRUE')))%(((vt0.lid)<<(vt0.c1))))) ORDER BY TRIM((vt0.lid IN ()), (~ (t1.c1))) DESC  NULLS LAST, (vt0.lid IN (LIKELY(DISTINCT vt0.c1)));
SELECT ALL * FROM t1, vt0 WHERE ((((- ('TRUE')))%(((vt0.lid)<<(vt0.c1))))) ORDER BY ((((vt0.c2 IN ())))!=((((vt0.lid) BETWEEN (t1.c1) AND (vt0.lid))))), (NOT (vt0.c0 COLLATE NOCASE));
SELECT * FROM t1, vt0 WHERE ((((- ('TRUE')))%(((vt0.lid)<<(vt0.c1))))) ORDER BY TRIM((vt0.lid IN ()), (~ (t1.c1))) DESC  NULLS LAST, (vt0.lid IN (LIKELY(DISTINCT vt0.c1)));
SELECT ALL MIN(t1.c1) FROM t1, vt0 WHERE (t1.c0);
SELECT ALL MIN(t1.c1) FROM t1, vt0 WHERE (t1.c0) ORDER BY (((vt0.lid IN (t1.c0)))||(((NULL)&('')))), ((NULL)<<(vt0.c0)) COLLATE RTRIM  NULLS LAST LIMIT 0X5;
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid)) COLLATE RTRIM)AND(((((UNLIKELY(vt0.lid))OR((~ (vt0.c0)))))AND(((((0.05036455809364471)OR(vt0.c0)))OR(vt0.c2))))))) LIMIT 1;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON vt0.lid WHERE (TYPEOF(DISTINCT CASE vt0.c1  WHEN vt0.c2 THEN t1.c0 WHEN t1.c1 THEN vt0.lid ELSE t1.c0 END)) ORDER BY (((((((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND (('S9J]MX'))))AND((((vt0.lid, t1.c1, vt0.lid, vt0.c2))=((t1.c1, vt0.c2, vt0.c1, vt0.c1))))))OR(CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c2 END)))AND(t1.c0 COLLATE BINARY)))AND(vt0.c0)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN vt0 ON vt0.lid WHERE (TYPEOF(DISTINCT CASE vt0.c1  WHEN vt0.c2 THEN t1.c0 WHEN t1.c1 THEN vt0.lid ELSE t1.c0 END)) ORDER BY (((((((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND (('S9J]MX'))))AND((((vt0.lid, t1.c1, vt0.lid, vt0.c2))==((t1.c1, vt0.c2, vt0.c1, vt0.c1))))))OR(CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c2 END)))AND(t1.c0 COLLATE BINARY)))AND(vt0.c0)) DESC  NULLS FIRST LIMIT 1;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON vt0.lid WHERE (TYPEOF(DISTINCT CASE vt0.c1  WHEN vt0.c2 THEN t1.c0 WHEN t1.c1 THEN vt0.lid ELSE t1.c0 END)) ORDER BY (((((((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND (('S9J]MX'))))AND((((vt0.lid, t1.c1, vt0.lid, vt0.c2))=((t1.c1, vt0.c2, vt0.c1, vt0.c1))))))OR(CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c2 END)))AND(t1.c0 COLLATE BINARY)))AND(vt0.c0)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN vt0 ON vt0.lid WHERE (TYPEOF(DISTINCT CASE vt0.c1  WHEN vt0.c2 THEN t1.c0 WHEN t1.c1 THEN vt0.lid ELSE t1.c0 END)) ORDER BY (((((((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND (('S9J]MX'))))AND((((vt0.lid, t1.c1, vt0.lid, vt0.c2))==((t1.c1, vt0.c2, vt0.c1, vt0.c1))))))OR(CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c2 END)))AND(t1.c0 COLLATE BINARY)))AND(vt0.c0)) DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 NOT INDEXED, vt0 NOT INDEXED WHERE ((CASE t1.c1  WHEN t1.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN 0.7694314648599674 END IN ((((vt0.lid)) NOT BETWEEN ((vt0.c2)) AND ((vt0.lid))), ((((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))OR(t1.c1)))OR(vt0.lid)))OR(vt0.lid)))));
SELECT DISTINCT * FROM t1, vt0 WHERE ((((CASE t1.c1  WHEN t1.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN 0.7694314648599674 END IN ((((vt0.lid)) NOT BETWEEN ((vt0.c2)) AND ((vt0.lid))), ((((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))OR(t1.c1)))OR(vt0.lid)))OR(vt0.lid)))))AND((((vt0.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c1) AND (vt0.c1)))) AND ((((((t1.c1)AND(vt0.c0)))AND(vt0.lid)))))))) ORDER BY (((('-208665743'))>((vt0.lid))) IN ()), PRINTF(NULLIF(DISTINCT vt0.lid, t1.c1), (t1.c1 IN (vt0.c2))) ASC, (((vt0.c1))>=((vt0.lid))) COLLATE NOCASE DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.lid)))AND(NULL)))AND(CAST(t1.c1 AS TEXT)))) ORDER BY (((('-208665743'))>((vt0.lid))) IN ()), PRINTF(NULLIF(DISTINCT vt0.lid, t1.c1), (t1.c1 IN (vt0.c2))) ASC, (((vt0.c1))>=((vt0.lid))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM t1 NOT INDEXED, vt0 NOT INDEXED WHERE ((CASE t1.c1  WHEN t1.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN 0.7694314648599674 END IN ((((vt0.lid)) NOT BETWEEN ((vt0.c2)) AND ((vt0.lid))), ((((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))OR(t1.c1)))OR(vt0.lid)))OR(vt0.lid)))));
SELECT DISTINCT * FROM t1, vt0 WHERE ((((CASE t1.c1  WHEN t1.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN 0.7694314648599674 END IN ((((vt0.lid)) NOT BETWEEN ((vt0.c2)) AND ((vt0.lid))), ((((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))OR(t1.c1)))OR(vt0.lid)))OR(vt0.lid)))))AND((((vt0.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c1) AND (vt0.c1)))) AND ((((((t1.c1)AND(vt0.c0)))AND(vt0.lid)))))))) ORDER BY (((('-208665743'))>((vt0.lid))) IN ()), PRINTF(NULLIF(DISTINCT vt0.lid, t1.c1), (t1.c1 IN (vt0.c2))) ASC, (((vt0.c1))>=((vt0.lid))) COLLATE NOCASE DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.lid)))AND(NULL)))AND(CAST(t1.c1 AS TEXT)))) ORDER BY (((('-208665743'))>((vt0.lid))) IN ()), PRINTF(NULLIF(DISTINCT vt0.lid, t1.c1), (t1.c1 IN (vt0.c2))) ASC, (((vt0.c1))>=((vt0.lid))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON t1.c0 WHERE ((- (((t1.c0)<=(t1.c0)))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON t1.c0 WHERE ((((- (((t1.c0)<=(t1.c0)))))AND(CASE UPPER(t1.c0)  WHEN NULL COLLATE BINARY THEN '-324521247' END))) ORDER BY (((- (vt0.c1)))>>(((vt0.c2)LIKE(vt0.c0))))  NULLS LAST LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON t1.c0 WHERE (UNLIKELY(((t1.c1)<<(t1.c0)))) ORDER BY (((- (vt0.c1)))>>(((vt0.c2)LIKE(vt0.c0))))  NULLS LAST LIMIT 0x0;
SELECT MAX(t1.c0) FROM t1 WHERE (((('-1085033156')) BETWEEN ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((((0.9552210908706101) BETWEEN (t1.c1) AND (t1.c1)))))) ORDER BY t1.c1;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((('-1085033156')) BETWEEN ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((((0.9552210908706101) BETWEEN (t1.c1) AND (t1.c1))))))AND(((CAST(t1.c0 AS NUMERIC)) IS FALSE)))) ORDER BY t1.c1 LIMIT 0X1;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)!=(vt0.c2)) IN (NULL))) ORDER BY CASE WHEN (~ (vt0.lid)) THEN (+ (vt0.lid)) END DESC;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((vt0.c1)<>(vt0.c2)) IN (NULL))) ORDER BY ((((vt0.lid) ISNULL))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN 0.005403717873442959 THEN vt0.c1 END)) LIMIT 0x3;
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON ((((t1.c0) ISNULL))+(((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.c0)))) WHERE ((NULL IN ('-938789758'))) ORDER BY (((vt0.c0)) BETWEEN (((t1.c1 IN (vt0.c0)))) AND ((((vt0.c1)<=(t1.c1))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON ((((t1.c0) ISNULL))+(((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.c0)))) WHERE ((NULL IN ('-938789758'))) ORDER BY (((vt0.c0)) BETWEEN (((t1.c1 IN (vt0.c0)))) AND ((((vt0.c1)<=(t1.c1))))) DESC  NULLS LAST INTERSECT SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON ((((t1.c0) ISNULL))+(((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.c0)))) WHERE (((((NULL, t1.c0, vt0.c2, vt0.c1))<=(('-1223874372', vt0.c1, vt0.c1, t1.c0))) IN (((vt0.c2)|(t1.c1))))) ORDER BY (((vt0.c0)) BETWEEN (((t1.c1 IN (vt0.c0)))) AND ((((vt0.c1)<=(t1.c1))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (-1928117674);
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (0Xffffffff8d134256) ORDER BY TIME(vt0.c1, CASE vt0.c2  WHEN vt0.lid THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END, CASE vt0.c0  WHEN vt0.c2 THEN vt0.lid ELSE vt0.c0 END, CASE vt0.c2  WHEN x'9df8' THEN vt0.lid END, (vt0.c0 IN ()), CAST(vt0.c1 AS BLOB)), (((((vt0.lid)OR(vt0.lid)))OR(vt0.lid)) IN ())  NULLS FIRST, (((vt0.lid, vt0.c0)) NOT BETWEEN ((((((vt0.lid)AND(vt0.c0)))OR(vt0.c1)), (vt0.c0 IN (vt0.lid)))) AND ((vt0.c2, json_array_length(vt0.c0, vt0.c2)))) ASC;
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.lid)!=(t1.c0)) IN (((-9.38789758E8) NOT BETWEEN (t1.c1) AND (t1.c0)), CAST(t1.c0 AS REAL)))) ORDER BY (NOT (t1.c0)) COLLATE NOCASE DESC, (((((t1.c0)LIKE(vt0.lid))))=((CASE vt0.c2  WHEN vt0.c0 THEN vt0.lid WHEN t1.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN t1.c1 THEN t1.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid WHEN t1.c1 THEN vt0.c0 ELSE vt0.c2 END))) ASC, ((((vt0.c2) IS FALSE))+(CASE vt0.lid  WHEN '.mj9' THEN vt0.lid END));
SELECT ALL * FROM t1, vt0 WHERE ((((((vt0.lid)!=(t1.c0)) IN (((-9.38789758E8) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((t1.c0 COLLATE NOCASE)>((NOT ('104387332'))))))) ORDER BY (NOT (t1.c0)) COLLATE NOCASE DESC, (((((t1.c0)LIKE(vt0.lid))))=((CASE vt0.c2  WHEN vt0.c0 THEN vt0.lid WHEN t1.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN t1.c1 THEN t1.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid WHEN t1.c1 THEN vt0.c0 ELSE vt0.c2 END))) ASC, ((((vt0.c2) IS FALSE))+(CASE vt0.lid  WHEN '.mj9' THEN vt0.lid END)) LIMIT 0X2 INTERSECT SELECT ALL * FROM t1, vt0 WHERE (CASE CASE WHEN vt0.c2 THEN t1.c1 END  WHEN LIKELIHOOD(vt0.c0, t1.c0) THEN TOTAL_CHANGES() ELSE (((vt0.c1)) BETWEEN ((t1.c1)) AND ((vt0.c2))) END) ORDER BY (NOT (t1.c0)) COLLATE NOCASE DESC, (((((t1.c0)LIKE(vt0.lid))))==((CASE vt0.c2  WHEN vt0.c0 THEN vt0.lid WHEN t1.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN t1.c1 THEN t1.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid WHEN t1.c1 THEN vt0.c0 ELSE vt0.c2 END))) ASC, ((((vt0.c2) IS FALSE))+(CASE vt0.lid  WHEN '.mj9' THEN vt0.lid END)) LIMIT 0x2;
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.lid)!=(t1.c0)) IN (((-9.38789758E8) NOT BETWEEN (t1.c1) AND (t1.c0)), CAST(t1.c0 AS REAL)))) ORDER BY (NOT (t1.c0)) COLLATE NOCASE DESC, (((((t1.c0)LIKE(vt0.lid))))=((CASE vt0.c2  WHEN vt0.c0 THEN vt0.lid WHEN t1.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN t1.c1 THEN t1.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid WHEN t1.c1 THEN vt0.c0 ELSE vt0.c2 END))) ASC, ((((vt0.c2) IS FALSE))+(CASE vt0.lid  WHEN '.mj9' THEN vt0.lid END));
SELECT ALL * FROM t1, vt0 WHERE ((((((vt0.lid)!=(t1.c0)) IN (((-9.38789758E8) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((t1.c0 COLLATE NOCASE)>((NOT ('104387332'))))))) ORDER BY (NOT (t1.c0)) COLLATE NOCASE DESC, (((((t1.c0)LIKE(vt0.lid))))=((CASE vt0.c2  WHEN vt0.c0 THEN vt0.lid WHEN t1.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN t1.c1 THEN t1.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid WHEN t1.c1 THEN vt0.c0 ELSE vt0.c2 END))) ASC, ((((vt0.c2) IS FALSE))+(CASE vt0.lid  WHEN '.mj9' THEN vt0.lid END)) LIMIT 0X2 INTERSECT SELECT ALL * FROM t1, vt0 WHERE (CASE CASE WHEN vt0.c2 THEN t1.c1 END  WHEN LIKELIHOOD(vt0.c0, t1.c0) THEN TOTAL_CHANGES() ELSE (((vt0.c1)) BETWEEN ((t1.c1)) AND ((vt0.c2))) END) ORDER BY (NOT (t1.c0)) COLLATE NOCASE DESC, (((((t1.c0)LIKE(vt0.lid))))==((CASE vt0.c2  WHEN vt0.c0 THEN vt0.lid WHEN t1.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN t1.c1 THEN t1.c0 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid WHEN t1.c1 THEN vt0.c0 ELSE vt0.c2 END))) ASC, ((((vt0.c2) IS FALSE))+(CASE vt0.lid  WHEN '.mj9' THEN vt0.lid END)) LIMIT 0x2;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (CASE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.lid)))OR(vt0.c2))  WHEN ((vt0.lid) NOT BETWEEN (vt0.c2) AND (vt0.c2)) THEN ((vt0.lid)>(vt0.c2)) WHEN vt0.c1 THEN ((vt0.c2) IS TRUE) WHEN NULL THEN vt0.c1 COLLATE NOCASE END);
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (CASE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.lid)))OR(vt0.c2))  WHEN ((vt0.lid) NOT BETWEEN (vt0.c2) AND (vt0.c2)) THEN ((vt0.lid)>(vt0.c2)) WHEN vt0.c1 THEN ((vt0.c2) IS TRUE) WHEN NULL THEN vt0.c1 COLLATE NOCASE END) ORDER BY CASE CAST(vt0.lid AS NUMERIC)  WHEN ((x'')IS(vt0.c2)) THEN (NOT (vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN LENGTH(vt0.c1) WHEN CAST(vt0.c0 AS TEXT) THEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)) END DESC, CASE ((vt0.c2)IS(vt0.c0))  WHEN (vt0.c2 IN (vt0.c0, vt0.c0)) THEN ((vt0.c2) NOT BETWEEN (vt0.lid) AND (vt0.c1)) WHEN (((vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.lid))) THEN LOWER(DISTINCT vt0.lid) WHEN (vt0.c2 IN ()) THEN vt0.c0 COLLATE BINARY ELSE ((((((vt0.c2)AND(vt0.lid)))OR(vt0.c2)))OR(vt0.lid)) END ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL MAX(vt0.c2) FROM vt0, t1 WHERE ((+ (('\
' IN ())))) ORDER BY (((((((NULL IN ()))OR(t1.c1)))OR(CASE WHEN t1.c0 THEN t1.c1 ELSE vt0.c0 END)))OR(((vt0.lid) BETWEEN (vt0.c0) AND (t1.c1)))) ASC, (((('[') NOT BETWEEN (vt0.c0) AND (vt0.c2)))IS(x'de2958'))  NULLS FIRST, ((vt0.c2)<=(vt0.lid)) COLLATE RTRIM  NULLS LAST;
SELECT DISTINCT MAX(vt0.c2) FROM vt0, t1 WHERE ((((+ (('\
' IN ()))))AND(((((vt0.lid)>(NULL)))<((t1.c0 IN (t1.c1))))))) ORDER BY (((((((NULL IN ()))OR(t1.c1)))OR(CASE WHEN t1.c0 THEN t1.c1 ELSE vt0.c0 END)))OR(((vt0.lid) BETWEEN (vt0.c0) AND (t1.c1)))) ASC, (((('[') NOT BETWEEN (vt0.c0) AND (vt0.c2)))IS(x'de2958'))  NULLS FIRST, ((vt0.c2)<=(vt0.lid)) COLLATE RTRIM  NULLS LAST LIMIT 3;
SELECT * FROM t1, vt0 WHERE ((((vt0.c2 IN ())) NOT NULL)) ORDER BY ABS(DISTINCT vt0.c1) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c2 IN ())) NOT NULL)) ORDER BY CASE WHEN 'AY#<dⷊv\' THEN ((((((t1.c0)OR(vt0.lid)))AND(x'077c')))AND(vt0.c2)) ELSE vt0.c0 END ASC, ((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (((vt0.lid) IS TRUE)) AND ((((t1.c1, '-981114213', vt0.lid, t1.c1, t1.c1)) NOT BETWEEN ((vt0.c2, vt0.lid, t1.c0, vt0.c0, t1.c1)) AND ((vt0.c2, t1.c1, vt0.c0, t1.c1, vt0.c0))))) ASC, CASE WHEN (vt0.c2 IN (t1.c0)) THEN ((t1.c1)|(vt0.lid)) WHEN CAST(t1.c1 AS TEXT) THEN vt0.c0 COLLATE BINARY ELSE CASE t1.c1  WHEN vt0.lid THEN vt0.c0 END END DESC, ((((vt0.c1)IS NOT(vt0.c1))) NOT NULL)  NULLS LAST;
SELECT * FROM t1, vt0 WHERE ((((vt0.c2 IN ())) NOT NULL)) ORDER BY ABS(DISTINCT vt0.c1) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c2 IN ())) NOT NULL)) ORDER BY CASE WHEN 'AY#<dⷊv\' THEN ((((((t1.c0)OR(vt0.lid)))AND(x'077c')))AND(vt0.c2)) ELSE vt0.c0 END ASC, ((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (((vt0.lid) IS TRUE)) AND ((((t1.c1, '-981114213', vt0.lid, t1.c1, t1.c1)) NOT BETWEEN ((vt0.c2, vt0.lid, t1.c0, vt0.c0, t1.c1)) AND ((vt0.c2, t1.c1, vt0.c0, t1.c1, vt0.c0))))) ASC, CASE WHEN (vt0.c2 IN (t1.c0)) THEN ((t1.c1)|(vt0.lid)) WHEN CAST(t1.c1 AS TEXT) THEN vt0.c0 COLLATE BINARY ELSE CASE t1.c1  WHEN vt0.lid THEN vt0.c0 END END DESC, ((((vt0.c1)IS NOT(vt0.c1))) NOT NULL)  NULLS LAST;
SELECT MIN(vt0.c2) FROM vt0 INDEXED BY i90, t1 WHERE ((- (((vt0.lid) BETWEEN (vt0.lid) AND (t1.c1)))));
SELECT DISTINCT MIN(vt0.c2) FROM vt0 INDEXED BY i90, t1 WHERE ((- (((vt0.lid) BETWEEN (vt0.lid) AND (t1.c1))))) LIMIT 0X2;
SELECT ALL * FROM t1 INNER JOIN vt0 ON (((t1.c1 COLLATE NOCASE))<=((vt0.c2 COLLATE BINARY))) WHERE ((+ (vt0.lid COLLATE BINARY)));
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON (((t1.c1 COLLATE NOCASE))<=((vt0.c2 COLLATE BINARY))) WHERE ((((+ (vt0.lid COLLATE BINARY)))AND((((vt0.c2, vt0.lid, vt0.c1, vt0.c0, t1.c0)) BETWEEN ((LIKELY(DISTINCT x''), ((((((t1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)), CAST(vt0.c2 AS NUMERIC), MIN(t1.c1, 0.5745834244167143), CASE vt0.c2  WHEN t1.c0 THEN vt0.c0 WHEN vt0.lid THEN t1.c1 WHEN vt0.c2 THEN vt0.lid WHEN t1.c1 THEN vt0.lid ELSE NULL END)) AND ((((vt0.c0) NOT NULL), ((t1.c0) NOT BETWEEN (vt0.c0) AND (x'')), ((vt0.c2)IS(vt0.lid)), CASE vt0.c0  WHEN x'' THEN vt0.c1 END, t1.c0 COLLATE NOCASE)))))) ORDER BY ((((NULL)=(t1.c1))) NOT BETWEEN (NULL COLLATE RTRIM) AND (((x'') ISNULL)))  NULLS LAST, (NOT (CASE NULL  WHEN t1.c1 THEN vt0.lid WHEN t1.c0 THEN 0x7cbe745 ELSE t1.c1 END))  NULLS LAST;
SELECT ALL * FROM t1 INNER JOIN vt0 ON (((t1.c1 COLLATE NOCASE))<=((vt0.c2 COLLATE BINARY))) WHERE ((+ (vt0.lid COLLATE BINARY)));
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON (((t1.c1 COLLATE NOCASE))<=((vt0.c2 COLLATE BINARY))) WHERE ((((+ (vt0.lid COLLATE BINARY)))AND((((vt0.c2, vt0.lid, vt0.c1, vt0.c0, t1.c0)) BETWEEN ((LIKELY(DISTINCT x''), ((((((t1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)), CAST(vt0.c2 AS NUMERIC), MIN(t1.c1, 0.5745834244167143), CASE vt0.c2  WHEN t1.c0 THEN vt0.c0 WHEN vt0.lid THEN t1.c1 WHEN vt0.c2 THEN vt0.lid WHEN t1.c1 THEN vt0.lid ELSE NULL END)) AND ((((vt0.c0) NOT NULL), ((t1.c0) NOT BETWEEN (vt0.c0) AND (x'')), ((vt0.c2)IS(vt0.lid)), CASE vt0.c0  WHEN x'' THEN vt0.c1 END, t1.c0 COLLATE NOCASE)))))) ORDER BY ((((NULL)=(t1.c1))) NOT BETWEEN (NULL COLLATE RTRIM) AND (((x'') ISNULL)))  NULLS LAST, (NOT (CASE NULL  WHEN t1.c1 THEN vt0.lid WHEN t1.c0 THEN 0x7cbe745 ELSE t1.c1 END))  NULLS LAST;
SELECT MAX(vt0.c1) FROM t1, vt0 WHERE (vt0.c1) ORDER BY (- (CASE WHEN t1.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END));
SELECT ALL MAX(vt0.c1) FROM t1, vt0 WHERE (vt0.c1) ORDER BY (- (CASE WHEN t1.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)) LIMIT 0X5;
SELECT * FROM t1 WHERE (CAST(((t1.c1)>(t1.c0)) AS NUMERIC)) ORDER BY json_valid((('') NOT BETWEEN (t1.c1) AND (t1.c1))), t1.c0  NULLS LAST;
SELECT * FROM t1 WHERE (((CAST(((t1.c1)>(t1.c0)) AS NUMERIC))AND(x'4f'))) ORDER BY json_valid((('') NOT BETWEEN (t1.c1) AND (t1.c1))), t1.c0  NULLS LAST LIMIT 4;
SELECT * FROM t1 WHERE (CAST(((t1.c1)>(t1.c0)) AS NUMERIC)) ORDER BY json_valid((('') NOT BETWEEN (t1.c1) AND (t1.c1))), t1.c0  NULLS LAST;
SELECT * FROM t1 WHERE (((CAST(((t1.c1)>(t1.c0)) AS NUMERIC))AND(x'4f'))) ORDER BY json_valid((('') NOT BETWEEN (t1.c1) AND (t1.c1))), t1.c0  NULLS LAST LIMIT 4;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1, t1.c0, t1.c0, t1.c1)) NOT BETWEEN (((NOT (t1.c0)), (~ (t1.c0)), ((t1.c0)<=('299204934')), COALESCE(t1.c0, t1.c1, t1.c1, t1.c1))) AND ((CAST(t1.c0 AS NUMERIC), (NOT (0.39160648416918786)), LIKELY(DISTINCT NULL), t1.c0 COLLATE BINARY)))) ORDER BY (((((((t1.c0 IN ()))AND(((t1.c1)<>(t1.c0)))))AND(((((x'')AND(t1.c0)))OR(t1.c0)))))OR(((t1.c0) NOT NULL)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c0, t1.c1)) NOT BETWEEN (((NOT (t1.c0)), (~ (t1.c0)), ((t1.c0)<=('299204934')), COALESCE(t1.c0, t1.c1, t1.c1, t1.c1))) AND ((CAST(t1.c0 AS NUMERIC), (NOT (0.39160648416918786)), LIKELY(DISTINCT NULL), t1.c0 COLLATE BINARY))))AND(((LENGTH(t1.c1))GLOB(((0.14306487247030464) IS TRUE)))))) ORDER BY ((CAST('''g' AS TEXT)) BETWEEN (LOWER(t1.c0)) AND (((t1.c0)<<(t1.c0)))) ASC, (t1.c0 IN ()) COLLATE BINARY INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST(((((((t1.c1)AND(t1.c0)))AND(x'f0')))AND(t1.c0)) AS NUMERIC)) ORDER BY ((CAST('''g' AS TEXT)) BETWEEN (LOWER(t1.c0)) AND (((t1.c0)<<(t1.c0)))) ASC, (t1.c0 IN ()) COLLATE BINARY;
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) COLLATE RTRIM DESC  NULLS FIRST, LIKE(((vt0.c2) NOT NULL), vt0.c1 COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) COLLATE RTRIM DESC  NULLS FIRST, LIKE(((vt0.c2) NOT NULL), vt0.c1 COLLATE RTRIM) LIMIT 0 INTERSECT SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) COLLATE RTRIM DESC  NULLS FIRST, LIKE(((vt0.c2) NOT NULL), vt0.c1 COLLATE RTRIM) LIMIT 0x0;
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) COLLATE RTRIM DESC  NULLS FIRST, LIKE(((vt0.c2) NOT NULL), vt0.c1 COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) COLLATE RTRIM DESC  NULLS FIRST, LIKE(((vt0.c2) NOT NULL), vt0.c1 COLLATE RTRIM) LIMIT 0 INTERSECT SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) COLLATE RTRIM DESC  NULLS FIRST, LIKE(((vt0.c2) NOT NULL), vt0.c1 COLLATE RTRIM) LIMIT 0x0;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.lid)|(vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c2)IS(vt0.c0)) END);
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((vt0.lid)|(vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c2)IS(vt0.c0)) END)AND(((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN '' THEN vt0.c0 ELSE vt0.c1 END) ISNULL)))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((vt0.c1 IN ()));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.lid)|(vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c2)IS(vt0.c0)) END);
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((vt0.lid)|(vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c2)IS(vt0.c0)) END)AND(((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN '' THEN vt0.c0 ELSE vt0.c1 END) ISNULL)))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((vt0.c1 IN ()));
SELECT ALL * FROM vt0, t1 WHERE (((((((((((vt0.lid)OR(vt0.c1)))OR(t1.c0)))AND(t1.c1)))OR(vt0.c0)))OR(t1.c1)) COLLATE BINARY) ORDER BY NULL DESC, LIKELIHOOD(DISTINCT ((vt0.c0)+(vt0.c0)), ((t1.c0)=(vt0.lid)))  NULLS FIRST, (NOT (NULL COLLATE NOCASE))  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (((((((((((vt0.lid)OR(vt0.c1)))OR(t1.c0)))AND(t1.c1)))OR(vt0.c0)))OR(t1.c1)) COLLATE BINARY) ORDER BY CASE WHEN vt0.c1 THEN (t1.c1 IN (x'')) ELSE CAST(vt0.c2 AS NUMERIC) END  NULLS FIRST INTERSECT SELECT ALL * FROM vt0, t1 WHERE (((CASE NULL  WHEN t1.c0 THEN 0.7227954337612192 ELSE vt0.lid END)<=(x''))) ORDER BY CASE WHEN vt0.c1 THEN (t1.c1 IN (x'')) ELSE CAST(vt0.c2 AS NUMERIC) END  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (((((((((((vt0.lid)OR(vt0.c1)))OR(t1.c0)))AND(t1.c1)))OR(vt0.c0)))OR(t1.c1)) COLLATE BINARY) ORDER BY NULL DESC, LIKELIHOOD(DISTINCT ((vt0.c0)+(vt0.c0)), ((t1.c0)=(vt0.lid)))  NULLS FIRST, (NOT (NULL COLLATE NOCASE))  NULLS LAST;
SELECT * FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0 WHERE (((x'') ISNULL)) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((~ (((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c2)))));
SELECT * FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0 WHERE (((x'') ISNULL)) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((~ (((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c2)))));
SELECT MIN(t1.c0) FROM t1 WHERE ((NOT (((t1.c0)==(t1.c1)))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((NOT (((t1.c0)=(t1.c1))))) LIMIT 1 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((((((t1.c1)OR('-1958114803')))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)) COLLATE RTRIM) LIMIT 0x1;
SELECT * FROM vt0 WHERE (vt0.lid);
SELECT DISTINCT * FROM vt0 WHERE (vt0.lid) ORDER BY ((((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN vt0.c0 END)OR(((vt0.c2)*(x'5f6f28')))))OR(vt0.lid))  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.lid);
SELECT DISTINCT * FROM vt0 WHERE (vt0.lid) ORDER BY ((((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN vt0.c0 END)OR(((vt0.c2)*(x'5f6f28')))))OR(vt0.lid))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c2 AS NUMERIC))IS((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c2 AS NUMERIC))IS((vt0.c0 IN ())))) ORDER BY (((((vt0.c0)>=(vt0.lid))))==((CAST(vt0.c0 AS NUMERIC)))) ASC  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt0 CROSS JOIN t1 ON CAST(x'' AS INTEGER) WHERE ((((t1.c0, vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.lid)%(t1.c0)))) AND (((vt0.c0 IN ()), (t1.c1 IN ()))))) ORDER BY ((((x'')OR(((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.lid)))))OR((NOT (t1.c0))))  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt0 CROSS JOIN t1 ON CAST(x'' AS INTEGER) WHERE ((((t1.c0, vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.lid)%(t1.c0)))) AND (((vt0.c0 IN ()), (t1.c1 IN ()))))) ORDER BY ((((x'')OR(((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.lid)))))OR((NOT (t1.c0))))  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (CAST(((((((vt0.c1)OR(t1.c1)))OR(t1.c1)))AND(vt0.c0)) AS BLOB)) ORDER BY ((~ (vt0.c2)) IN (NULL)) ASC  NULLS FIRST, (t1.c0 IN (vt0.c0)) COLLATE BINARY DESC, (((vt0.c0 IN (vt0.c0, vt0.c1)))>(((0.9180730582411379) ISNULL))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE (CAST(((((((vt0.c1)OR(t1.c1)))OR(t1.c1)))AND(vt0.c0)) AS BLOB)) ORDER BY CAST(((((vt0.c2)AND(x'ad')))OR(vt0.c0)) AS NUMERIC), (((NOT (t1.c1)))<(CHAR('', t1.c0, vt0.c1, vt0.c1, vt0.c2, vt0.c2))) ASC;
SELECT ALL * FROM t1, vt0 WHERE (CAST(((((((vt0.c1)OR(t1.c1)))OR(t1.c1)))AND(vt0.c0)) AS BLOB)) ORDER BY ((~ (vt0.c2)) IN (NULL)) ASC  NULLS FIRST, (t1.c0 IN (vt0.c0)) COLLATE BINARY DESC, (((vt0.c0 IN (vt0.c0, vt0.c1)))>(((0.9180730582411379) ISNULL))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE (CAST(((((((vt0.c1)OR(t1.c1)))OR(t1.c1)))AND(vt0.c0)) AS BLOB)) ORDER BY CAST(((((vt0.c2)AND(x'ad')))OR(vt0.c0)) AS NUMERIC), (((NOT (t1.c1)))<(CHAR('', t1.c0, vt0.c1, vt0.c1, vt0.c2, vt0.c2))) ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.lid, vt0.lid, vt0.c2, vt0.c0)) NOT BETWEEN (((((vt0.c0))<((0xfffffffff56966d7))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c0) NOT NULL), (+ (NULL)))) AND ((((vt0.c0)<<(vt0.c1)), vt0.c2 COLLATE RTRIM, ((vt0.lid)<=(vt0.c1)), HEX(vt0.c2)))));
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.lid, vt0.lid, vt0.c2, vt0.c0)) NOT BETWEEN (((((vt0.c0))<=((-177641769))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c0) NOT NULL), (+ (NULL)))) AND ((((vt0.c0)<<(vt0.c1)), vt0.c2 COLLATE RTRIM, ((vt0.lid)<=(vt0.c1)), HEX(vt0.c2)))))AND((((((((((vt0.c1, vt0.c1, NULL))>=((vt0.c0, vt0.c1, vt0.c1))))AND((vt0.lid IN ('T0㒂Z[Q')))))AND(CASE vt0.lid  WHEN vt0.c2 THEN vt0.c1 END)))AND((- (vt0.c2))))))) ORDER BY ((((((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid WHEN x'cc' THEN vt0.c1 ELSE vt0.lid END)AND(vt0.lid COLLATE RTRIM)))OR((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR(LIKE(vt0.c0, vt0.c2, '1'))) DESC  NULLS LAST, ((((((((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(CAST(vt0.c1 AS INTEGER))))OR(CAST(vt0.c1 AS INTEGER))))AND((((x'', vt0.lid)) BETWEEN ((vt0.lid, vt0.c0)) AND ((vt0.c0, vt0.c0))))) ASC LIMIT 0x4;
SELECT ALL * FROM vt0 WHERE ((((vt0.lid, vt0.lid, vt0.c2, vt0.c0)) NOT BETWEEN (((((vt0.c0))<((0xfffffffff56966d7))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c0) NOT NULL), (+ (NULL)))) AND ((((vt0.c0)<<(vt0.c1)), vt0.c2 COLLATE RTRIM, ((vt0.lid)<=(vt0.c1)), HEX(vt0.c2)))));
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.lid, vt0.lid, vt0.c2, vt0.c0)) NOT BETWEEN (((((vt0.c0))<=((-177641769))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c0) NOT NULL), (+ (NULL)))) AND ((((vt0.c0)<<(vt0.c1)), vt0.c2 COLLATE RTRIM, ((vt0.lid)<=(vt0.c1)), HEX(vt0.c2)))))AND((((((((((vt0.c1, vt0.c1, NULL))>=((vt0.c0, vt0.c1, vt0.c1))))AND((vt0.lid IN ('T0㒂Z[Q')))))AND(CASE vt0.lid  WHEN vt0.c2 THEN vt0.c1 END)))AND((- (vt0.c2))))))) ORDER BY ((((((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid WHEN x'cc' THEN vt0.c1 ELSE vt0.lid END)AND(vt0.lid COLLATE RTRIM)))OR((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR(LIKE(vt0.c0, vt0.c2, '1'))) DESC  NULLS LAST, ((((((((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(CAST(vt0.c1 AS INTEGER))))OR(CAST(vt0.c1 AS INTEGER))))AND((((x'', vt0.lid)) BETWEEN ((vt0.lid, vt0.c0)) AND ((vt0.c0, vt0.c0))))) ASC LIMIT 0x4;
SELECT MIN(vt0.lid) FROM t1, vt0 WHERE (vt0.c0);
SELECT DISTINCT MIN(vt0.lid) FROM t1, vt0 WHERE (vt0.c0) LIMIT 0;
SELECT * FROM t1 WHERE (highlight(t1.c1, t1.c1, t1.c1, t1.c1) COLLATE NOCASE) ORDER BY CASE WHEN (((t1.c1))<=((t1.c0))) THEN t1.c1 WHEN t1.c1 COLLATE RTRIM THEN ((t1.c0)<(t1.c0)) ELSE ((t1.c0)>(t1.c1)) END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((highlight(t1.c1, t1.c1, t1.c1, t1.c1) COLLATE NOCASE)AND(ABS(((t1.c1)!=(t1.c0)))))) ORDER BY CASE WHEN (((t1.c1))<=((t1.c0))) THEN t1.c1 WHEN t1.c1 COLLATE RTRIM THEN ((t1.c0)<(t1.c0)) ELSE ((t1.c0)>(t1.c1)) END  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (highlight(t1.c1, t1.c1, t1.c1, t1.c1) COLLATE NOCASE) ORDER BY CASE WHEN (((t1.c1))<=((t1.c0))) THEN t1.c1 WHEN t1.c1 COLLATE RTRIM THEN ((t1.c0)<(t1.c0)) ELSE ((t1.c0)>(t1.c1)) END  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (LOWER(DISTINCT (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.lid)))));
SELECT DISTINCT * FROM vt0, t1 WHERE (LOWER(DISTINCT (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.lid))))) LIMIT 1;
SELECT ALL * FROM vt0, t1 WHERE (LOWER(DISTINCT (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.lid)))));
SELECT DISTINCT * FROM vt0, t1 WHERE (LOWER(DISTINCT (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.lid))))) LIMIT 1;
SELECT * FROM vt0 WHERE (x'dda607') ORDER BY ((((((((((vt0.c2)AND(vt0.c2)))AND(vt0.lid)))AND(vt0.c0)))AND(vt0.c0)))<>(CAST(vt0.c2 AS NUMERIC))) DESC, (((((((vt0.c1)AND(vt0.c2)))OR(0.8348340220999703)))OR(vt0.c1)) IN (vt0.lid COLLATE NOCASE, ((vt0.c0) IS FALSE)));
SELECT DISTINCT * FROM vt0 WHERE (x'dda607') ORDER BY LIKELY(((vt0.c2)/(vt0.c1))) ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST, HEX(vt0.c1 COLLATE NOCASE) DESC;
SELECT * FROM vt0 WHERE (x'dda607') ORDER BY ((((((((((vt0.c2)AND(vt0.c2)))AND(vt0.lid)))AND(vt0.c0)))AND(vt0.c0)))<>(CAST(vt0.c2 AS NUMERIC))) DESC, (((((((vt0.c1)AND(vt0.c2)))OR(0.8348340220999703)))OR(vt0.c1)) IN (vt0.lid COLLATE NOCASE, ((vt0.c0) IS FALSE)));
SELECT DISTINCT * FROM vt0 WHERE (x'dda607') ORDER BY LIKELY(((vt0.c2)/(vt0.c1))) ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST, HEX(vt0.c1 COLLATE NOCASE) DESC;
SELECT ALL * FROM t1, vt0 WHERE (NULL);
SELECT ALL * FROM t1, vt0 WHERE (NULL) ORDER BY HEX(DISTINCT CASE vt0.c0  WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END) ASC, vt0.c2 DESC  NULLS LAST, vt0.lid  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (NULL);
SELECT ALL * FROM t1, vt0 WHERE (NULL) ORDER BY HEX(DISTINCT CASE vt0.c0  WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END) ASC, vt0.c2 DESC  NULLS LAST, vt0.lid  NULLS LAST;
SELECT * FROM t1 WHERE (CHAR(((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ORDER BY ((((t1.c0) ISNULL))>>(t1.c0 COLLATE RTRIM))  NULLS FIRST, CHANGES() DESC;
SELECT ALL * FROM t1 WHERE (((CHAR(((((t1.c0)OR(t1.c0)))OR(t1.c0))))AND(((((((((((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))OR(t1.c1)))AND(t1.c1 COLLATE RTRIM))))) ORDER BY ((((t1.c0) ISNULL))>>(t1.c0 COLLATE RTRIM))  NULLS FIRST, CHANGES() DESC LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE ((- ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) ORDER BY ((((t1.c0) ISNULL))>>(t1.c0 COLLATE RTRIM))  NULLS FIRST, CHANGES() DESC LIMIT 1;
SELECT * FROM t1 WHERE (CHAR(((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ORDER BY ((((t1.c0) ISNULL))>>(t1.c0 COLLATE RTRIM))  NULLS FIRST, CHANGES() DESC;
SELECT ALL * FROM t1 WHERE (((CHAR(((((t1.c0)OR(t1.c0)))OR(t1.c0))))AND(((((((((((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))OR(t1.c1)))AND(t1.c1 COLLATE RTRIM))))) ORDER BY ((((t1.c0) ISNULL))>>(t1.c0 COLLATE RTRIM))  NULLS FIRST, CHANGES() DESC LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE ((- ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) ORDER BY ((((t1.c0) ISNULL))>>(t1.c0 COLLATE RTRIM))  NULLS FIRST, CHANGES() DESC LIMIT 1;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((((((vt0.c2)OR('
U2It')))OR(vt0.c0)))AND(NULL)))AND(((((((((((((vt0.c0)AND(t1.c0)))OR(vt0.lid)))AND('1922856525')))AND('-1944975075')))AND(vt0.c1)))OR(NULL)))))AND(CAST('uzz ' AS INTEGER))));
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((((((((vt0.c2)OR('
U2It')))OR(vt0.c0)))AND(NULL)))AND(((((((((((((vt0.c0)AND(t1.c0)))OR(vt0.lid)))AND('1922856525')))AND('-1944975075')))AND(vt0.c1)))OR(NULL)))))AND(CAST('uzz ' AS INTEGER))))AND((((((((((vt0.c1))!=((vt0.lid))))AND(0x49548b9f)))AND(((vt0.c1) IS TRUE))))AND((- (vt0.lid))))))) LIMIT 0X1;
SELECT MAX(vt0.c0) FROM vt0, t1 INDEXED BY i65 WHERE (0.9208948998547875) ORDER BY (LOWER(vt0.c0) IN ((~ (vt0.c0)))) ASC, ((t1.c0)!=(vt0.lid)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL MAX(vt0.c0) FROM vt0, t1 INDEXED BY i65 WHERE (0.9208948998547875) ORDER BY (+ ((vt0.c0 IN ()))), ((x'0ae66f')OR(vt0.c2)) COLLATE BINARY LIMIT 0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((t1.c0)LIKE(t1.c1)))LIKE(json_patch(t1.c0, t1.c0)))) ORDER BY ((((t1.c0)/(t1.c1))) NOTNULL) DESC;
SELECT MAX(t1.c0) FROM t1 WHERE (((((((t1.c0)LIKE(t1.c1)))LIKE(json_patch(t1.c0, t1.c0))))AND(((CAST(t1.c1 AS REAL))/(((t1.c0)+(t1.c0))))))) ORDER BY ((t1.c1 COLLATE NOCASE) BETWEEN (((((t1.c1)OR(t1.c1)))OR(t1.c0))) AND (CASE t1.c1  WHEN 0.18044993300244638 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN '2ER#yz+)Q' END))  NULLS LAST, CASE WHEN ((t1.c1) IS TRUE) THEN ((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(t1.c0)) WHEN t1.c0 THEN ((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)) WHEN (t1.c0 IN (t1.c0)) THEN CAST(t1.c1 AS REAL) WHEN t1.c0 THEN ((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)) END  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (((t1.c0 COLLATE BINARY) NOTNULL)) ORDER BY ((t1.c1 COLLATE NOCASE) BETWEEN (((((t1.c1)OR(t1.c1)))OR(t1.c0))) AND (CASE t1.c1  WHEN 0.18044993300244638 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN '2ER#yz+)Q' END))  NULLS LAST, CASE WHEN ((t1.c1) IS TRUE) THEN ((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(t1.c0)) WHEN t1.c0 THEN ((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c0)) WHEN (t1.c0 IN (t1.c0)) THEN CAST(t1.c1 AS REAL) WHEN t1.c0 THEN ((((((t1.c1)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)) END  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (CAST(COALESCE(DISTINCT t1.c1, t1.c0, t1.c1, 0X5e5b7f0b, t1.c0) AS NUMERIC));
SELECT DISTINCT * FROM t1 WHERE (((CAST(COALESCE(DISTINCT t1.c1, t1.c0, t1.c1, 1583054603, t1.c0) AS NUMERIC))AND((NOT ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c0)))))))) ORDER BY UPPER(DISTINCT t1.c0)  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((LIKELY(DISTINCT 0.9763723898896564))OR(t1.c1)))OR(((0.3628610447319105) BETWEEN (t1.c0) AND (t1.c0)))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c0 END)))AND(((t1.c1) NOTNULL)))) ORDER BY UPPER(DISTINCT t1.c0)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CAST(COALESCE(DISTINCT t1.c1, t1.c0, t1.c1, 0X5e5b7f0b, t1.c0) AS NUMERIC));
SELECT DISTINCT * FROM t1 WHERE (((CAST(COALESCE(DISTINCT t1.c1, t1.c0, t1.c1, 1583054603, t1.c0) AS NUMERIC))AND((NOT ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c0)))))))) ORDER BY UPPER(DISTINCT t1.c0)  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((LIKELY(DISTINCT 0.9763723898896564))OR(t1.c1)))OR(((0.3628610447319105) BETWEEN (t1.c0) AND (t1.c0)))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c0 END)))AND(((t1.c1) NOTNULL)))) ORDER BY UPPER(DISTINCT t1.c0)  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((+ (CAST(t1.c1 AS BLOB))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((+ (CAST(t1.c1 AS BLOB)))) ORDER BY t1.c0  NULLS FIRST, CAST(t1.c1 AS TEXT) COLLATE NOCASE, CAST(((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) AS NUMERIC) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((NOT (t1.c1)) COLLATE NOCASE) ORDER BY t1.c0  NULLS FIRST, CAST(t1.c1 AS TEXT) COLLATE NOCASE, CAST(((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) AS NUMERIC);
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.lid)) BETWEEN (('1709627680')) AND ((vt0.c0)))  WHEN (((0.35702828008918164, vt0.c2, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) THEN ((vt0.c1)OR(0.3595840424565482)) WHEN (vt0.c0 IN (vt0.c2, '-1635427576')) THEN CAST(vt0.c1 AS NUMERIC) ELSE vt0.lid END) ORDER BY 0.860793057784565  NULLS LAST, CAST(((vt0.c0)LIKE(vt0.lid)) AS NUMERIC), CAST(((((((vt0.c2)AND(vt0.c2)))AND(vt0.lid)))OR(vt0.lid)) AS TEXT) DESC, ((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))||(((vt0.c0)<=(vt0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((CASE (((vt0.lid)) BETWEEN (('1709627680')) AND ((vt0.c0)))  WHEN (((0.35702828008918164, vt0.c2, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) THEN ((vt0.c1)OR(0.3595840424565482)) WHEN (vt0.c0 IN (vt0.c2, '-1635427576')) THEN CAST(vt0.c1 AS NUMERIC) ELSE vt0.lid END)AND(CASE vt0.c1  WHEN vt0.lid THEN vt0.lid END COLLATE BINARY))) ORDER BY (((vt0.lid)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((vt0.c1))), CAST((vt0.c2 IN ()) AS TEXT) DESC;
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.lid)) BETWEEN (('1709627680')) AND ((vt0.c0)))  WHEN (((0.35702828008918164, vt0.c2, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) THEN ((vt0.c1)OR(0.3595840424565482)) WHEN (vt0.c0 IN (vt0.c2, '-1635427576')) THEN CAST(vt0.c1 AS NUMERIC) ELSE vt0.lid END) ORDER BY 0.860793057784565  NULLS LAST, CAST(((vt0.c0)LIKE(vt0.lid)) AS NUMERIC), CAST(((((((vt0.c2)AND(vt0.c2)))AND(vt0.lid)))OR(vt0.lid)) AS TEXT) DESC, ((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))||(((vt0.c0)<=(vt0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((CASE (((vt0.lid)) BETWEEN (('1709627680')) AND ((vt0.c0)))  WHEN (((0.35702828008918164, vt0.c2, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) THEN ((vt0.c1)OR(0.3595840424565482)) WHEN (vt0.c0 IN (vt0.c2, '-1635427576')) THEN CAST(vt0.c1 AS NUMERIC) ELSE vt0.lid END)AND(CASE vt0.c1  WHEN vt0.lid THEN vt0.lid END COLLATE BINARY))) ORDER BY (((vt0.lid)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((vt0.c1))), CAST((vt0.c2 IN ()) AS TEXT) DESC;
SELECT * FROM vt0 WHERE ((~ (((vt0.lid) IS TRUE))));
SELECT DISTINCT * FROM vt0 WHERE ((((~ (((vt0.lid) IS TRUE))))AND(UNICODE(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))))) LIMIT 0X2;
SELECT * FROM vt0 WHERE ((~ (((vt0.lid) IS TRUE))));
SELECT DISTINCT * FROM vt0 WHERE ((((~ (((vt0.lid) IS TRUE))))AND(UNICODE(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))))) LIMIT 0X2;
SELECT MAX(vt0.c0) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))OR(((vt0.lid) BETWEEN (vt0.c2) AND (x'47fdf8bffb43')))))OR(NULL)))OR(CAST(vt0.c1 AS INTEGER))))OR(CAST(vt0.c2 AS INTEGER))));
SELECT MAX(vt0.c0) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))OR(((vt0.lid) BETWEEN (vt0.c2) AND (x'47fdf8bffb43')))))OR(NULL)))OR(CAST(vt0.c1 AS INTEGER))))OR(CAST(vt0.c2 AS INTEGER)))) ORDER BY CASE WHEN vt0.c2 THEN ((vt0.c0)IS(vt0.c0)) WHEN (+ (NULL)) THEN JULIANDAY(vt0.c2, vt0.c0, vt0.c0) WHEN (vt0.c0 IN (vt0.lid, vt0.lid, vt0.lid)) THEN vt0.c0 COLLATE BINARY WHEN CAST(0.8236357891609194 AS TEXT) THEN ((vt0.c0)&(vt0.lid)) END  NULLS FIRST INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((- (LIKE(vt0.c0, vt0.c2, 'a')))) ORDER BY CASE WHEN vt0.c2 THEN ((vt0.c0)IS(vt0.c0)) WHEN (+ (NULL)) THEN JULIANDAY(vt0.c2, vt0.c0, vt0.c0) WHEN (vt0.c0 IN (vt0.lid, vt0.lid, vt0.lid)) THEN vt0.c0 COLLATE BINARY WHEN CAST(0.8236357891609194 AS TEXT) THEN ((vt0.c0)&(vt0.lid)) END  NULLS FIRST;
SELECT MAX(t1.c0) FROM vt0, t1 WHERE (t1.c0) ORDER BY (((t1.c1, vt0.lid)) NOT BETWEEN ((CASE WHEN vt0.lid THEN vt0.c2 WHEN '0.18044993300244638' THEN vt0.c0 END, vt0.c2 COLLATE RTRIM)) AND ((((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(NULL)), LIKELIHOOD(vt0.lid, t1.c1)))) ASC  NULLS LAST;
SELECT MAX(t1.c0) FROM vt0, t1 WHERE (t1.c0) ORDER BY (((t1.c1, vt0.lid)) NOT BETWEEN ((CASE WHEN vt0.lid THEN vt0.c2 WHEN '0.18044993300244638' THEN vt0.c0 END, vt0.c2 COLLATE RTRIM)) AND ((((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(NULL)), LIKELIHOOD(vt0.lid, t1.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (vt0.c2);
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.c2)AND(((((~ (vt0.c0))))<=((((((((((t1.c0)AND(t1.c0)))AND(vt0.lid)))OR(vt0.lid)))OR(vt0.c1)))))))) ORDER BY ((CAST(t1.c1 AS INTEGER))>=((t1.c1 IN (NULL, t1.c1)))) ASC LIMIT 0x1 INTERSECT SELECT COUNT(*) FROM vt0, t1 WHERE (IFNULL(DISTINCT (~ (vt0.c2)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))) ORDER BY ((CAST(t1.c1 AS INTEGER))>=((t1.c1 IN (NULL, t1.c1)))) ASC LIMIT 1;
SELECT * FROM t1 INNER JOIN vt0 ON CAST(vt0.c2 COLLATE BINARY AS TEXT) WHERE (CASE (vt0.c0 IN (vt0.c2))  WHEN vt0.c2 COLLATE RTRIM THEN t1.c1 COLLATE RTRIM WHEN ((((((vt0.c0)OR('-488086941')))OR(vt0.c1)))OR(vt0.c0)) THEN (~ (vt0.c2)) WHEN vt0.c1 THEN (('TRUE') BETWEEN (t1.c0) AND (t1.c1)) END) ORDER BY ((('1249359975' IN (vt0.c1))) NOT BETWEEN (((vt0.lid)%(vt0.c1))) AND (IFNULL(DISTINCT t1.c0, t1.c0))) DESC  NULLS LAST, (NOT (SQLITE_SOURCE_ID())) ASC  NULLS LAST, t1.c1  NULLS LAST;
SELECT ALL * FROM t1 INNER JOIN vt0 ON CAST(vt0.c2 COLLATE BINARY AS TEXT) WHERE (((CASE (vt0.c0 IN (vt0.c2))  WHEN vt0.c2 COLLATE RTRIM THEN t1.c1 COLLATE RTRIM WHEN ((((((vt0.c0)OR('-488086941')))OR(vt0.c1)))OR(vt0.c0)) THEN (~ (vt0.c2)) WHEN vt0.c1 THEN (('TRUE') BETWEEN (t1.c0) AND (t1.c1)) END)AND((((t1.c1)) BETWEEN ((vt0.c1)) AND ((1e500)))))) ORDER BY ABS(vt0.c2 COLLATE RTRIM)  NULLS LAST, t1.c0 ASC INTERSECT SELECT ALL * FROM t1 INNER JOIN vt0 ON CAST(vt0.c2 COLLATE BINARY AS TEXT) WHERE (((vt0.c2)LIKE((((t1.c0, vt0.c2))<=((vt0.c1, vt0.lid)))))) ORDER BY ABS(vt0.c2 COLLATE RTRIM)  NULLS LAST, t1.c0 ASC;
SELECT * FROM t1 INNER JOIN vt0 ON CAST(vt0.c2 COLLATE BINARY AS TEXT) WHERE (CASE (vt0.c0 IN (vt0.c2))  WHEN vt0.c2 COLLATE RTRIM THEN t1.c1 COLLATE RTRIM WHEN ((((((vt0.c0)OR('-488086941')))OR(vt0.c1)))OR(vt0.c0)) THEN (~ (vt0.c2)) WHEN vt0.c1 THEN (('TRUE') BETWEEN (t1.c0) AND (t1.c1)) END) ORDER BY ((('1249359975' IN (vt0.c1))) NOT BETWEEN (((vt0.lid)%(vt0.c1))) AND (IFNULL(DISTINCT t1.c0, t1.c0))) DESC  NULLS LAST, (NOT (SQLITE_SOURCE_ID())) ASC  NULLS LAST, t1.c1  NULLS LAST;
SELECT ALL * FROM t1 INNER JOIN vt0 ON CAST(vt0.c2 COLLATE BINARY AS TEXT) WHERE (((CASE (vt0.c0 IN (vt0.c2))  WHEN vt0.c2 COLLATE RTRIM THEN t1.c1 COLLATE RTRIM WHEN ((((((vt0.c0)OR('-488086941')))OR(vt0.c1)))OR(vt0.c0)) THEN (~ (vt0.c2)) WHEN vt0.c1 THEN (('TRUE') BETWEEN (t1.c0) AND (t1.c1)) END)AND((((t1.c1)) BETWEEN ((vt0.c1)) AND ((1e500)))))) ORDER BY ABS(vt0.c2 COLLATE RTRIM)  NULLS LAST, t1.c0 ASC INTERSECT SELECT ALL * FROM t1 INNER JOIN vt0 ON CAST(vt0.c2 COLLATE BINARY AS TEXT) WHERE (((vt0.c2)LIKE((((t1.c0, vt0.c2))<=((vt0.c1, vt0.lid)))))) ORDER BY ABS(vt0.c2 COLLATE RTRIM)  NULLS LAST, t1.c0 ASC;
SELECT * FROM t1, vt0 WHERE ((((((0.49141583392326016, vt0.c1, t1.c1, t1.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, t1.c1, vt0.c2)) AND ((vt0.c1, t1.c1, t1.c0, vt0.lid))))>=((601369208 IN (vt0.c0))))) ORDER BY vt0.c2, (NOT (((((vt0.c1)OR(t1.c0)))AND(t1.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((((((0.49141583392326016, vt0.c1, t1.c1, t1.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, t1.c1, vt0.c2)) AND ((vt0.c1, t1.c1, t1.c0, vt0.lid))))>=((0X23d82a78 IN (vt0.c0)))))AND(((vt0.lid)==(t1.c1)) COLLATE NOCASE))) ORDER BY x'c10b' ASC, ((((vt0.c2)-(t1.c1))) BETWEEN (ABS(vt0.c2)) AND (LOWER(vt0.c0))), ((UNLIKELY(t1.c0)) IS TRUE) LIMIT 0x0;
SELECT * FROM t1, vt0 WHERE ((((((0.49141583392326016, vt0.c1, t1.c1, t1.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, t1.c1, vt0.c2)) AND ((vt0.c1, t1.c1, t1.c0, vt0.lid))))>=((601369208 IN (vt0.c0))))) ORDER BY vt0.c2, (NOT (((((vt0.c1)OR(t1.c0)))AND(t1.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((((((0.49141583392326016, vt0.c1, t1.c1, t1.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, t1.c1, vt0.c2)) AND ((vt0.c1, t1.c1, t1.c0, vt0.lid))))>=((0X23d82a78 IN (vt0.c0)))))AND(((vt0.lid)==(t1.c1)) COLLATE NOCASE))) ORDER BY x'c10b' ASC, ((((vt0.c2)-(t1.c1))) BETWEEN (ABS(vt0.c2)) AND (LOWER(vt0.c0))), ((UNLIKELY(t1.c0)) IS TRUE) LIMIT 0x0;
SELECT * FROM t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c1)>=(vt0.c0)))) AND ((((((((((t1.c1)OR(vt0.lid)))OR(vt0.c1)))OR(vt0.c1)))OR(t1.c1))))));
SELECT DISTINCT * FROM t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c1)>=(vt0.c0)))) AND ((((((((((t1.c1)OR(vt0.lid)))OR(vt0.c1)))OR(vt0.c1)))OR(t1.c1))))));
SELECT * FROM t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c1)>=(vt0.c0)))) AND ((((((((((t1.c1)OR(vt0.lid)))OR(vt0.c1)))OR(vt0.c1)))OR(t1.c1))))));
SELECT DISTINCT * FROM t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c1)>=(vt0.c0)))) AND ((((((((((t1.c1)OR(vt0.lid)))OR(vt0.c1)))OR(vt0.c1)))OR(t1.c1))))));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (t1.c0) ORDER BY (((1.30803525E8, t1.c0, t1.c0, t1.c0)) BETWEEN ((((t1.c0)||(t1.c1)), NULLIF(DISTINCT x'', t1.c1), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0, t1.c0, x'')) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c0))))) AND ((((((t1.c1)OR(t1.c1)))AND(t1.c0)), CASE WHEN t1.c1 THEN t1.c0 WHEN 0.6548137795723757 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END, UNLIKELY(t1.c0), ((0xffffffffdeefb845)IS NOT(t1.c1))))) ASC  NULLS LAST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((t1.c0)AND((NOT ((t1.c1 IN (t1.c1))))))) ORDER BY NULL ASC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((0.04169258751962279) BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))))OR(json_remove(t1.c1, t1.c0, t1.c1, t1.c0)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (LAST_INSERT_ROWID()) ORDER BY ((t1.c1 COLLATE RTRIM)<<(NULLIF(x'', t1.c1)));
SELECT * FROM t1 WHERE (LAST_INSERT_ROWID()) ORDER BY ((t1.c1 COLLATE RTRIM)<<(NULLIF(x'', t1.c1))) INTERSECT SELECT * FROM t1 WHERE (x'') ORDER BY ((t1.c1 COLLATE RTRIM)<<(NULLIF(x'', t1.c1)));
SELECT * FROM t1 WHERE (LAST_INSERT_ROWID()) ORDER BY ((t1.c1 COLLATE RTRIM)<<(NULLIF(x'', t1.c1)));
SELECT * FROM t1 WHERE (LAST_INSERT_ROWID()) ORDER BY ((t1.c1 COLLATE RTRIM)<<(NULLIF(x'', t1.c1))) INTERSECT SELECT * FROM t1 WHERE (x'') ORDER BY ((t1.c1 COLLATE RTRIM)<<(NULLIF(x'', t1.c1)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0))) BETWEEN (json_valid(vt0.lid)) AND (json_patch(vt0.c1, vt0.lid))));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0))) BETWEEN (json_valid(vt0.lid)) AND (json_patch(vt0.c1, vt0.lid)))) ORDER BY ((((((vt0.c1)AND(vt0.lid)))OR(vt0.lid)))=(CAST(vt0.c1 AS REAL)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0))) BETWEEN (json_valid(vt0.lid)) AND (json_patch(vt0.c1, vt0.lid))));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0))) BETWEEN (json_valid(vt0.lid)) AND (json_patch(vt0.c1, vt0.lid)))) ORDER BY ((((((vt0.c1)AND(vt0.lid)))OR(vt0.lid)))=(CAST(vt0.c1 AS REAL)))  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE (((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.lid))) BETWEEN (NULL) AND (vt0.c2))) ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS FIRST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c1)) THEN ((t1.c1)AND(vt0.c1)) WHEN ((((((((t1.c1)AND(vt0.c2)))AND(104387332)))AND(vt0.c0)))AND(vt0.c1)) THEN CHANGES() WHEN CASE 0.15075791795181037  WHEN t1.c0 THEN t1.c0 WHEN -581710910 THEN t1.c0 ELSE vt0.c2 END THEN ((t1.c1) NOT BETWEEN (vt0.c2) AND (t1.c1)) END DESC;
SELECT * FROM vt0, t1 WHERE (((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.lid))) BETWEEN (NULL) AND (vt0.c2))) ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS FIRST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c1)) THEN ((t1.c1)AND(vt0.c1)) WHEN ((((((((t1.c1)AND(vt0.c2)))AND(0X638d304)))AND(vt0.c0)))AND(vt0.c1)) THEN CHANGES() WHEN CASE 0.15075791795181037  WHEN t1.c0 THEN t1.c0 WHEN 0Xffffffffdd53cbc2 THEN t1.c0 ELSE vt0.c2 END THEN ((t1.c1) NOT BETWEEN (vt0.c2) AND (t1.c1)) END DESC LIMIT 0;
SELECT ALL * FROM vt0, t1 WHERE (((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.lid))) BETWEEN (NULL) AND (vt0.c2))) ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS FIRST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c1)) THEN ((t1.c1)AND(vt0.c1)) WHEN ((((((((t1.c1)AND(vt0.c2)))AND(104387332)))AND(vt0.c0)))AND(vt0.c1)) THEN CHANGES() WHEN CASE 0.15075791795181037  WHEN t1.c0 THEN t1.c0 WHEN -581710910 THEN t1.c0 ELSE vt0.c2 END THEN ((t1.c1) NOT BETWEEN (vt0.c2) AND (t1.c1)) END DESC;
SELECT * FROM vt0, t1 WHERE (((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.lid))) BETWEEN (NULL) AND (vt0.c2))) ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS FIRST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c1)) THEN ((t1.c1)AND(vt0.c1)) WHEN ((((((((t1.c1)AND(vt0.c2)))AND(0X638d304)))AND(vt0.c0)))AND(vt0.c1)) THEN CHANGES() WHEN CASE 0.15075791795181037  WHEN t1.c0 THEN t1.c0 WHEN 0Xffffffffdd53cbc2 THEN t1.c0 ELSE vt0.c2 END THEN ((t1.c1) NOT BETWEEN (vt0.c2) AND (t1.c1)) END DESC LIMIT 0;
SELECT * FROM vt0 WHERE (CAST(((0.9257439032833168)+(vt0.c0)) AS TEXT)) ORDER BY ((vt0.c1)IS NOT(vt0.c2)) COLLATE RTRIM  NULLS FIRST, ((((((((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE vt0.lid  WHEN vt0.lid THEN vt0.lid ELSE vt0.c0 END)))AND(vt0.c0)))AND(vt0.lid COLLATE RTRIM)))OR(NULL))  NULLS FIRST, CASE (NOT ('z70LS'))  WHEN vt0.c1 THEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) WHEN CAST(vt0.c1 AS BLOB) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.lid)) WHEN ((vt0.lid)<=(vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE (((vt0.lid, vt0.c2)) NOT BETWEEN ((0.9208948998547875, vt0.lid)) AND ((vt0.c0, vt0.c0))) END ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((0.9257439032833168)+(vt0.c0)) AS TEXT)) ORDER BY ((vt0.c1)IS NOT(vt0.c2)) COLLATE RTRIM  NULLS FIRST, ((((((((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE vt0.lid  WHEN vt0.lid THEN vt0.lid ELSE vt0.c0 END)))AND(vt0.c0)))AND(vt0.lid COLLATE RTRIM)))OR(NULL))  NULLS FIRST, CASE (NOT ('z70LS'))  WHEN vt0.c1 THEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) WHEN CAST(vt0.c1 AS BLOB) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.lid)) WHEN ((vt0.lid)<=(vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE (((vt0.lid, vt0.c2)) NOT BETWEEN ((0.9208948998547875, vt0.lid)) AND ((vt0.c0, vt0.c0))) END ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(((0.9257439032833168)+(vt0.c0)) AS TEXT)) ORDER BY ((vt0.c1)IS NOT(vt0.c2)) COLLATE RTRIM  NULLS FIRST, ((((((((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE vt0.lid  WHEN vt0.lid THEN vt0.lid ELSE vt0.c0 END)))AND(vt0.c0)))AND(vt0.lid COLLATE RTRIM)))OR(NULL))  NULLS FIRST, CASE (NOT ('z70LS'))  WHEN vt0.c1 THEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) WHEN CAST(vt0.c1 AS BLOB) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.lid)) WHEN ((vt0.lid)<=(vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE (((vt0.lid, vt0.c2)) NOT BETWEEN ((0.9208948998547875, vt0.lid)) AND ((vt0.c0, vt0.c0))) END ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((0.9257439032833168)+(vt0.c0)) AS TEXT)) ORDER BY ((vt0.c1)IS NOT(vt0.c2)) COLLATE RTRIM  NULLS FIRST, ((((((((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE vt0.lid  WHEN vt0.lid THEN vt0.lid ELSE vt0.c0 END)))AND(vt0.c0)))AND(vt0.lid COLLATE RTRIM)))OR(NULL))  NULLS FIRST, CASE (NOT ('z70LS'))  WHEN vt0.c1 THEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) WHEN CAST(vt0.c1 AS BLOB) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.lid)) WHEN ((vt0.lid)<=(vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE (((vt0.lid, vt0.c2)) NOT BETWEEN ((0.9208948998547875, vt0.lid)) AND ((vt0.c0, vt0.c0))) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)==(vt0.lid)), ((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.lid))<=((vt0.c0))), ((((((((((vt0.lid)OR(vt0.c2)))AND(vt0.c2)))AND(vt0.lid)))AND(vt0.lid)))OR(vt0.c0))))<(((~ (vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (~ (vt0.c2)), (((((('1583054603')AND(vt0.c2)))OR(vt0.c2)))OR(vt0.lid))))));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)=(vt0.lid)), ((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.lid))==((vt0.c0))), ((((((((((vt0.lid)OR(vt0.c2)))AND(vt0.c2)))AND(vt0.lid)))AND(vt0.lid)))OR(vt0.c0))))<(((~ (vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (~ (vt0.c2)), (((((('1583054603')AND(vt0.c2)))OR(vt0.c2)))OR(vt0.lid))))))AND((((((+ (vt0.c0)))AND((((NULL, vt0.c1, NULL, x'2f4c31')) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0, vt0.c2)) AND ((vt0.c2, vt0.lid, vt0.lid, vt0.c0))))))AND(((((vt0.c0)AND(vt0.lid)))AND(vt0.lid))))))) ORDER BY CASE (vt0.lid IN (vt0.c2))  WHEN ((vt0.lid)==(vt0.lid)) THEN ((vt0.lid)IS NOT(vt0.c2)) END ASC, CASE WHEN NULL THEN ((vt0.c1)*(vt0.c2)) END ASC, ((((vt0.c2)AND(vt0.lid)))OR(NULL)) COLLATE BINARY INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((((vt0.c2))>=((vt0.c0)))) BETWEEN ((((vt0.c0, vt0.lid, vt0.c2))<>((vt0.c2, '', vt0.c1)))) AND (CAST(vt0.lid AS INTEGER)))) ORDER BY CASE (vt0.lid IN (vt0.c2))  WHEN ((vt0.lid)==(vt0.lid)) THEN ((vt0.lid)IS NOT(vt0.c2)) END ASC, CASE WHEN NULL THEN ((vt0.c1)*(vt0.c2)) END ASC, ((((vt0.c2)AND(vt0.lid)))OR(NULL)) COLLATE BINARY;
SELECT ALL MAX(t1.c1) FROM t1 WHERE ((('D꿋9\u0')-(((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))AND(t1.c1))))) ORDER BY CASE NULL  WHEN t1.c0 THEN t1.c1 COLLATE BINARY ELSE (~ (t1.c1)) END, ((((((((t1.c1)OR(load_extension(t1.c0))))AND(t1.c0 COLLATE RTRIM)))OR(((t1.c1)<<(t1.c1)))))AND(CAST(t1.c1 AS REAL))) ASC  NULLS FIRST, t1.c1 DESC  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE ((('D꿋9\u0')-(((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))AND(t1.c1))))) ORDER BY CASE NULL  WHEN t1.c0 THEN t1.c1 COLLATE BINARY ELSE (~ (t1.c1)) END, ((((((((t1.c1)OR(load_extension(t1.c0))))AND(t1.c0 COLLATE RTRIM)))OR(((t1.c1)<<(t1.c1)))))AND(CAST(t1.c1 AS REAL))) ASC  NULLS FIRST, t1.c1 DESC  NULLS FIRST LIMIT 0X4 INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (MIN(0.9259391362434363, ((t1.c1)/(t1.c1)))) ORDER BY CASE NULL  WHEN t1.c0 THEN t1.c1 COLLATE BINARY ELSE (~ (t1.c1)) END, ((((((((t1.c1)OR(load_extension(t1.c0))))AND(t1.c0 COLLATE RTRIM)))OR(((t1.c1)<<(t1.c1)))))AND(CAST(t1.c1 AS REAL))) ASC  NULLS FIRST, t1.c1 DESC  NULLS FIRST LIMIT 0X4;
SELECT * FROM vt0, t1 WHERE ((((((((t1.c0)AND(vt0.c0)))OR(vt0.c0)), (t1.c0 IN (vt0.c1, t1.c0)), (- (t1.c0))))<(((('1369148192')%(vt0.c1)), CASE t1.c0  WHEN t1.c0 THEN vt0.lid WHEN vt0.c2 THEN t1.c0 WHEN vt0.c1 THEN vt0.lid WHEN vt0.c0 THEN t1.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END, ((((((((vt0.c2)OR(t1.c1)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))))) ORDER BY ((((((((((((CASE WHEN vt0.c1 THEN vt0.c2 END)AND(((vt0.lid)>(vt0.c1)))))AND((((vt0.c2, vt0.lid, t1.c0, t1.c0, vt0.c1, t1.c0))<>((vt0.c1, vt0.c2, t1.c0, vt0.lid, 1.642844612E9, '/'))))))OR(((vt0.c2)+(vt0.c2)))))OR(HEX(vt0.c1))))OR(vt0.c2 COLLATE RTRIM)))OR(CASE WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN x'' WHEN vt0.c2 THEN t1.c1 WHEN NULL THEN 0.528438920411735 ELSE vt0.c1 END)) DESC, (~ (CASE WHEN 0Xffffffff9ad3126f THEN t1.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((((((t1.c0)AND(vt0.c0)))OR(vt0.c0)), (t1.c0 IN (vt0.c1, t1.c0)), (- (t1.c0))))<(((('1369148192')%(vt0.c1)), CASE t1.c0  WHEN t1.c0 THEN vt0.lid WHEN vt0.c2 THEN t1.c0 WHEN vt0.c1 THEN vt0.lid WHEN vt0.c0 THEN t1.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END, ((((((((vt0.c2)OR(t1.c1)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1))))))AND((~ (t1.c0))))) ORDER BY vt0.lid DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE ((vt0.c2 COLLATE RTRIM IN ())) ORDER BY vt0.lid DESC  NULLS FIRST LIMIT 0;
SELECT * FROM vt0, t1 WHERE ((((((((t1.c0)AND(vt0.c0)))OR(vt0.c0)), (t1.c0 IN (vt0.c1, t1.c0)), (- (t1.c0))))<(((('1369148192')%(vt0.c1)), CASE t1.c0  WHEN t1.c0 THEN vt0.lid WHEN vt0.c2 THEN t1.c0 WHEN vt0.c1 THEN vt0.lid WHEN vt0.c0 THEN t1.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END, ((((((((vt0.c2)OR(t1.c1)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))))) ORDER BY ((((((((((((CASE WHEN vt0.c1 THEN vt0.c2 END)AND(((vt0.lid)>(vt0.c1)))))AND((((vt0.c2, vt0.lid, t1.c0, t1.c0, vt0.c1, t1.c0))<>((vt0.c1, vt0.c2, t1.c0, vt0.lid, 1.642844612E9, '/'))))))OR(((vt0.c2)+(vt0.c2)))))OR(HEX(vt0.c1))))OR(vt0.c2 COLLATE RTRIM)))OR(CASE WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN x'' WHEN vt0.c2 THEN t1.c1 WHEN NULL THEN 0.528438920411735 ELSE vt0.c1 END)) DESC, (~ (CASE WHEN 0Xffffffff9ad3126f THEN t1.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((((((t1.c0)AND(vt0.c0)))OR(vt0.c0)), (t1.c0 IN (vt0.c1, t1.c0)), (- (t1.c0))))<(((('1369148192')%(vt0.c1)), CASE t1.c0  WHEN t1.c0 THEN vt0.lid WHEN vt0.c2 THEN t1.c0 WHEN vt0.c1 THEN vt0.lid WHEN vt0.c0 THEN t1.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END, ((((((((vt0.c2)OR(t1.c1)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1))))))AND((~ (t1.c0))))) ORDER BY vt0.lid DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE ((vt0.c2 COLLATE RTRIM IN ())) ORDER BY vt0.lid DESC  NULLS FIRST LIMIT 0;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.lid AS REAL))OR(CAST(vt0.lid AS REAL))));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((CAST(vt0.lid AS REAL))OR(CAST(vt0.lid AS REAL)))) ORDER BY TIME((((vt0.c2, vt0.lid, vt0.c0, vt0.c1))>=((0.4461761715121718, vt0.lid, vt0.c0, vt0.c0))), ((vt0.lid)==(vt0.lid)), LIKELY(DISTINCT vt0.c1)) DESC  NULLS FIRST, CASE vt0.c2  WHEN ((((((vt0.c2)OR(vt0.lid)))OR(vt0.c0)))AND(vt0.lid)) THEN ((((-1173956306)AND(vt0.lid)))AND(vt0.c1)) WHEN -5.8171091E8 COLLATE NOCASE THEN ((vt0.c2) NOT NULL) WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN '0.6059696527120175' END, ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.lid)))OR(vt0.c0)))OR(vt0.lid)))LIKE(x'')) LIMIT 6;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN (((t1.c1) IS FALSE)) AND (((t1.c1)<<(t1.c0)))));
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN (((t1.c1) IS FALSE)) AND (((t1.c1)<<(t1.c0))))) ORDER BY (LIKELIHOOD(DISTINCT t1.c1, t1.c0) IN (((t1.c0) IS TRUE), t1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN (((t1.c1) IS FALSE)) AND (((t1.c1)<<(t1.c0)))));
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN (((t1.c1) IS FALSE)) AND (((t1.c1)<<(t1.c0))))) ORDER BY (LIKELIHOOD(DISTINCT t1.c1, t1.c0) IN (((t1.c0) IS TRUE), t1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM t1, vt0 WHERE (((HEX(DISTINCT t1.c0)) IS FALSE)) ORDER BY (((vt0.c2)!=(vt0.c2)) IN (CASE vt0.lid  WHEN vt0.c1 THEN vt0.c0 ELSE 'b[z*b+{' END, vt0.lid COLLATE RTRIM))  NULLS LAST, SQLITE_VERSION();
SELECT DISTINCT * FROM t1, vt0 WHERE (((((HEX(DISTINCT t1.c0)) IS FALSE))AND((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))>>((((t1.c0, t1.c1))=((t1.c0, vt0.lid)))))))) ORDER BY (((vt0.c2)<>(vt0.c2)) IN (CASE vt0.lid  WHEN vt0.c1 THEN vt0.c0 ELSE 'b[z*b+{' END, vt0.lid COLLATE RTRIM))  NULLS LAST, SQLITE_VERSION() LIMIT 2;
SELECT * FROM t1, vt0 WHERE (((HEX(DISTINCT t1.c0)) IS FALSE)) ORDER BY (((vt0.c2)!=(vt0.c2)) IN (CASE vt0.lid  WHEN vt0.c1 THEN vt0.c0 ELSE 'b[z*b+{' END, vt0.lid COLLATE RTRIM))  NULLS LAST, SQLITE_VERSION();
SELECT DISTINCT * FROM t1, vt0 WHERE (((((HEX(DISTINCT t1.c0)) IS FALSE))AND((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))>>((((t1.c0, t1.c1))=((t1.c0, vt0.lid)))))))) ORDER BY (((vt0.c2)<>(vt0.c2)) IN (CASE vt0.lid  WHEN vt0.c1 THEN vt0.c0 ELSE 'b[z*b+{' END, vt0.lid COLLATE RTRIM))  NULLS LAST, SQLITE_VERSION() LIMIT 2;
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE ((((((((((vt0.c2 IN (23235364)))AND(((vt0.c0)OR(t1.c0)))))OR(((((t1.c1)AND(vt0.c2)))OR(vt0.c2)))))OR(((t1.c1) BETWEEN (t1.c0) AND (vt0.lid)))))OR(((((((vt0.c1)OR(vt0.c1)))OR(0.6556157882943094)))AND(t1.c1))))) ORDER BY t1.c1 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE, (CAST(t1.c0 AS INTEGER) IN (CASE vt0.c1  WHEN vt0.lid THEN vt0.c1 ELSE vt0.lid END));
SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE ((((((((((vt0.c2 IN (0x1628b24)))AND(((vt0.c0)OR(t1.c0)))))OR(((((t1.c1)AND(vt0.c2)))OR(vt0.c2)))))OR(((t1.c1) BETWEEN (t1.c0) AND (vt0.lid)))))OR(((((((vt0.c1)OR(vt0.c1)))OR(0.6556157882943094)))AND(t1.c1))))) ORDER BY t1.c1 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE, (CAST(t1.c0 AS INTEGER) IN (CASE vt0.c1  WHEN vt0.lid THEN vt0.c1 ELSE vt0.lid END));
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE ((((((((((vt0.c2 IN (23235364)))AND(((vt0.c0)OR(t1.c0)))))OR(((((t1.c1)AND(vt0.c2)))OR(vt0.c2)))))OR(((t1.c1) BETWEEN (t1.c0) AND (vt0.lid)))))OR(((((((vt0.c1)OR(vt0.c1)))OR(0.6556157882943094)))AND(t1.c1))))) ORDER BY t1.c1 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE, (CAST(t1.c0 AS INTEGER) IN (CASE vt0.c1  WHEN vt0.lid THEN vt0.c1 ELSE vt0.lid END));
SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE ((((((((((vt0.c2 IN (0x1628b24)))AND(((vt0.c0)OR(t1.c0)))))OR(((((t1.c1)AND(vt0.c2)))OR(vt0.c2)))))OR(((t1.c1) BETWEEN (t1.c0) AND (vt0.lid)))))OR(((((((vt0.c1)OR(vt0.c1)))OR(0.6556157882943094)))AND(t1.c1))))) ORDER BY t1.c1 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE, (CAST(t1.c0 AS INTEGER) IN (CASE vt0.c1  WHEN vt0.lid THEN vt0.c1 ELSE vt0.lid END));
SELECT * FROM vt0 WHERE ((0x251742d0 IN ())) ORDER BY CASE vt0.lid  WHEN '383755930' THEN 0Xffffffffeca832e1 WHEN vt0.lid THEN vt0.c2 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END COLLATE RTRIM DESC  NULLS FIRST, x'b4', (~ (((vt0.lid) ISNULL)));
SELECT ALL * FROM vt0 WHERE ((622281424 IN ())) ORDER BY COALESCE(DISTINCT (((vt0.c1, vt0.c0, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.c0, vt0.c1)) AND ((vt0.c1, 0xffffffff8a9eb3ad, vt0.lid))), ((vt0.c0) IS TRUE)) DESC  NULLS FIRST, ((((NULL)>>(vt0.c2)))AND(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT * FROM vt0 WHERE ((0x251742d0 IN ())) ORDER BY CASE vt0.lid  WHEN '383755930' THEN 0Xffffffffeca832e1 WHEN vt0.lid THEN vt0.c2 WHEN vt0.lid THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END COLLATE RTRIM DESC  NULLS FIRST, x'b4', (~ (((vt0.lid) ISNULL)));
SELECT ALL * FROM vt0 WHERE ((622281424 IN ())) ORDER BY COALESCE(DISTINCT (((vt0.c1, vt0.c0, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.c0, vt0.c1)) AND ((vt0.c1, 0xffffffff8a9eb3ad, vt0.lid))), ((vt0.c0) IS TRUE)) DESC  NULLS FIRST, ((((NULL)>>(vt0.c2)))AND(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT ALL * FROM t1, vt0 WHERE ((~ (((vt0.lid) IS FALSE))));
SELECT DISTINCT * FROM t1, vt0 WHERE ((~ (((vt0.lid) IS FALSE)))) ORDER BY ((vt0.lid) BETWEEN (CAST(t1.c1 AS BLOB)) AND ((t1.c0 IN (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE ((~ (((vt0.lid) IS FALSE))));
SELECT DISTINCT * FROM t1, vt0 WHERE ((~ (((vt0.lid) IS FALSE)))) ORDER BY ((vt0.lid) BETWEEN (CAST(t1.c1 AS BLOB)) AND ((t1.c0 IN (vt0.c0))))  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE (json_array_length((t1.c1 IN (t1.c0)), (t1.c1 IN (t1.c0))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (json_array_length((t1.c1 IN (t1.c0)), (t1.c1 IN (t1.c0)))) INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((t1.c1 IN (((t1.c0) ISNULL))));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c2)))|(t1.c0)) WHERE ((((vt0.c1, vt0.c2, vt0.lid, t1.c1)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, t1.c1 COLLATE RTRIM, CASE vt0.c2  WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.lid ELSE t1.c1 END, ((vt0.c1) BETWEEN (vt0.c0) AND (0.1627352067828749)))) AND ((CAST(vt0.c0 AS REAL), (('') ISNULL), CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END, ((((((((vt0.lid)AND(1.04387332E8)))AND(t1.c1)))AND(vt0.lid)))OR(t1.c0))))));
SELECT ALL * FROM t1 INNER JOIN vt0 ON ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c2)))|(t1.c0)) WHERE ((((vt0.c1, vt0.c2, vt0.lid, t1.c1)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, t1.c1 COLLATE RTRIM, CASE vt0.c2  WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.lid ELSE t1.c1 END, ((vt0.c1) BETWEEN (vt0.c0) AND (0.1627352067828749)))) AND ((CAST(vt0.c0 AS REAL), (('') ISNULL), CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END, ((((((((vt0.lid)AND(1.04387332E8)))AND(t1.c1)))AND(vt0.lid)))OR(t1.c0)))))) ORDER BY (- (t1.c0))  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM t1 INNER JOIN vt0 ON ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c2)))|(t1.c0)) WHERE (vt0.c0) ORDER BY (- (t1.c0))  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c2)))|(t1.c0)) WHERE ((((vt0.c1, vt0.c2, vt0.lid, t1.c1)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, t1.c1 COLLATE RTRIM, CASE vt0.c2  WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.lid ELSE t1.c1 END, ((vt0.c1) BETWEEN (vt0.c0) AND (0.1627352067828749)))) AND ((CAST(vt0.c0 AS REAL), (('') ISNULL), CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END, ((((((((vt0.lid)AND(1.04387332E8)))AND(t1.c1)))AND(vt0.lid)))OR(t1.c0))))));
SELECT ALL * FROM t1 INNER JOIN vt0 ON ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c2)))|(t1.c0)) WHERE ((((vt0.c1, vt0.c2, vt0.lid, t1.c1)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END, t1.c1 COLLATE RTRIM, CASE vt0.c2  WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.lid ELSE t1.c1 END, ((vt0.c1) BETWEEN (vt0.c0) AND (0.1627352067828749)))) AND ((CAST(vt0.c0 AS REAL), (('') ISNULL), CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END, ((((((((vt0.lid)AND(1.04387332E8)))AND(t1.c1)))AND(vt0.lid)))OR(t1.c0)))))) ORDER BY (- (t1.c0))  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM t1 INNER JOIN vt0 ON ((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c2)))|(t1.c0)) WHERE (vt0.c0) ORDER BY (- (t1.c0))  NULLS LAST LIMIT 0;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c2)))AND((((vt0.c0))!=((vt0.c2)))))) ORDER BY (((vt0.lid)<(vt0.lid)) IN (((((((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))OR(-324521247)))OR(vt0.c1)))OR(vt0.c2)))OR(vt0.lid))))  NULLS LAST;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c2)))AND((((vt0.c0))<((vt0.c2))))))AND(((vt0.c0)<=('104387332'))))) ORDER BY CAST(0.4012962410345208 AS INTEGER) DESC, ((vt0.lid)LIKE(0.37823549991960437)) COLLATE NOCASE DESC;
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT vt0.c1 COLLATE BINARY, (vt0.lid IN ()))) ORDER BY ((((((vt0.lid COLLATE NOCASE)OR(vt0.c0)))OR(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND(vt0.c1));
SELECT ALL * FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c1 COLLATE BINARY, (vt0.lid IN ())))AND(((LENGTH(vt0.c0)) NOT BETWEEN (((vt0.lid)||(vt0.c1))) AND (((vt0.lid) NOT NULL)))))) ORDER BY ((((((vt0.lid COLLATE NOCASE)OR(vt0.c0)))OR(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND(vt0.c1));
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT vt0.c1 COLLATE BINARY, (vt0.lid IN ()))) ORDER BY ((((((vt0.lid COLLATE NOCASE)OR(vt0.c0)))OR(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND(vt0.c1));
SELECT ALL * FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c1 COLLATE BINARY, (vt0.lid IN ())))AND(((LENGTH(vt0.c0)) NOT BETWEEN (((vt0.lid)||(vt0.c1))) AND (((vt0.lid) NOT NULL)))))) ORDER BY ((((((vt0.lid COLLATE NOCASE)OR(vt0.c0)))OR(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND(vt0.c1));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid)) BETWEEN ((((vt0.lid)LIKE(vt0.lid)))) AND ((((vt0.lid)OR(vt0.c2)))))) ORDER BY CASE ((vt0.c2) NOT BETWEEN (0.8552248309036663) AND (vt0.c0))  WHEN UPPER(vt0.lid) THEN ((vt0.c2) NOT NULL) ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (0.7412698998586684)) END DESC  NULLS LAST, CASE WHEN ('nc' IN (vt0.c1)) THEN vt0.c0 WHEN ((vt0.c1)&(vt0.c2)) THEN (((vt0.c2))>=((vt0.c2))) END DESC, (((~ (vt0.c1))) NOT BETWEEN (((vt0.lid)AND(vt0.lid))) AND ((vt0.lid IN (vt0.lid)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.lid)) BETWEEN ((((vt0.lid)LIKE(vt0.lid)))) AND ((((vt0.lid)OR(vt0.c2)))))) ORDER BY vt0.lid, vt0.c0 DESC  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM vt0, t1 WHERE (((json_array_length(vt0.lid)) IS TRUE)) ORDER BY ((CAST('I' AS INTEGER))IS((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '-1064208416')) AND ((t1.c0, t1.c0))))) DESC;
SELECT ALL MAX(vt0.c0) FROM vt0, t1 WHERE (((((json_array_length(vt0.lid)) IS TRUE))AND((((((t1.c0, t1.c1, t1.c1))>=((vt0.c1, vt0.lid, vt0.c1))))|(NULLIF(DISTINCT t1.c0, vt0.c2)))))) ORDER BY ((CAST('I' AS INTEGER))IS((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '-1064208416')) AND ((t1.c0, t1.c0))))) DESC INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0, t1 WHERE (NULL) ORDER BY ((CAST('I' AS INTEGER))IS((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '-1064208416')) AND ((t1.c0, t1.c0))))) DESC;
SELECT * FROM vt0, t1 WHERE ((NOT ((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1)))))) ORDER BY ((((vt0.c1)OR(t1.c0)))IS(CAST(vt0.c1 AS BLOB))), ((t1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE, (- ((~ (vt0.c1))));
SELECT * FROM vt0, t1 WHERE ((((NOT ((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))))))AND(COALESCE((((t1.c0, vt0.lid, vt0.lid, vt0.c1, vt0.c1))=((vt0.c0, vt0.c1, t1.c0, vt0.c0, t1.c1))), NULL)))) ORDER BY TIME(((vt0.c1)-(t1.c0)), CAST(t1.c0 AS NUMERIC), (vt0.lid IN (vt0.c2)))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL * FROM vt0, t1 WHERE ((NOT (CAST(vt0.c2 AS NUMERIC)))) ORDER BY TIME(((vt0.c1)-(t1.c0)), CAST(t1.c0 AS NUMERIC), (vt0.lid IN (vt0.c2)))  NULLS FIRST LIMIT 0X1;
SELECT * FROM vt0, t1 WHERE ((NOT ((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1)))))) ORDER BY ((((vt0.c1)OR(t1.c0)))IS(CAST(vt0.c1 AS BLOB))), ((t1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE, (- ((~ (vt0.c1))));
SELECT * FROM vt0, t1 WHERE ((((NOT ((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))))))AND(COALESCE((((t1.c0, vt0.lid, vt0.lid, vt0.c1, vt0.c1))=((vt0.c0, vt0.c1, t1.c0, vt0.c0, t1.c1))), NULL)))) ORDER BY TIME(((vt0.c1)-(t1.c0)), CAST(t1.c0 AS NUMERIC), (vt0.lid IN (vt0.c2)))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL * FROM vt0, t1 WHERE ((NOT (CAST(vt0.c2 AS NUMERIC)))) ORDER BY TIME(((vt0.c1)-(t1.c0)), CAST(t1.c0 AS NUMERIC), (vt0.lid IN (vt0.c2)))  NULLS FIRST LIMIT 0X1;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))<=((- (t1.c1)))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))<((- (t1.c1))))) ORDER BY ((((t1.c0) IS FALSE)) ISNULL)  NULLS FIRST, (((t1.c0, t1.c1, t1.c0)) BETWEEN ((CAST(t1.c0 AS REAL), HEX('-868919299'), CAST(t1.c1 AS REAL))) AND ((CAST(t1.c0 AS NUMERIC), CAST(t1.c0 AS INTEGER), (((t1.c0, t1.c1, t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c1, t1.c0, t1.c1))))));
SELECT MIN(t1.c1) FROM t1 WHERE ((NOT (((((((t1.c1)AND(t1.c1)))AND(x'bf2303')))AND(t1.c1)))));
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((NOT (((((((t1.c1)AND(t1.c1)))AND(x'bf2303')))AND(t1.c1))))) LIMIT 1;
SELECT MAX(vt0.lid) FROM vt0 WHERE ((((vt0.lid IN ()))<(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END))) ORDER BY CAST(CAST(vt0.c2 AS REAL) AS REAL)  NULLS LAST, 0.005403717873442959 ASC;
SELECT ALL MAX(vt0.lid) FROM vt0 WHERE ((((vt0.lid IN ()))<(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END))) ORDER BY CASE NULL COLLATE NOCASE  WHEN ((vt0.lid) IS TRUE) THEN ((987729507)+(vt0.c1)) END  NULLS LAST, ((((vt0.c2)%(vt0.c1))) NOT BETWEEN (((x'152b9b') BETWEEN (vt0.c1) AND (vt0.c2))) AND (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.lid))));
SELECT MAX(t1.c1) FROM t1 WHERE ((((((t1.c1 IN (t1.c1)))OR((NOT (t1.c0)))))AND((((t1.c0, t1.c1, t1.c1))>=((t1.c0, t1.c1, t1.c1)))))) ORDER BY ((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1))) BETWEEN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))) AND (((t1.c1)IS NOT(x'1f7c'))))  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((t1.c1 IN (t1.c1)))OR((NOT (t1.c0)))))AND((((t1.c0, t1.c1, t1.c1))>((t1.c0, t1.c1, t1.c1)))))) ORDER BY '0.3643271186715735', COALESCE(((((t1.c1)OR(t1.c1)))OR(t1.c0)), t1.c1)  NULLS LAST INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((t1.c1)AND(t1.c0)), ('-166244635' IN ()), ((('￿[~钼5B7Rn', t1.c1, 207213488, t1.c0, '381797042')) NOT BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c0, t1.c0)) AND ((t1.c1, t1.c0, t1.c0, t1.c0, t1.c0))), ((t1.c0)OR(t1.c0))))>=((x'', (~ (t1.c1)), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)), x'')))) ORDER BY '0.3643271186715735', COALESCE(((((t1.c1)OR(t1.c1)))OR(t1.c0)), t1.c1)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c2  WHEN ((vt0.c2) IS FALSE) THEN (((vt0.c1, vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.c0)) AND ((vt0.lid, vt0.c1, vt0.lid))) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT DISTINCT * FROM vt0 WHERE (CASE vt0.c2  WHEN ((vt0.c2) IS FALSE) THEN (((vt0.c1, vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.c0)) AND ((vt0.lid, vt0.c1, vt0.lid))) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST LIMIT 2;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c2  WHEN ((vt0.c2) IS FALSE) THEN (((vt0.c1, vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.c0)) AND ((vt0.lid, vt0.c1, vt0.lid))) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT DISTINCT * FROM vt0 WHERE (CASE vt0.c2  WHEN ((vt0.c2) IS FALSE) THEN (((vt0.c1, vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.c0)) AND ((vt0.lid, vt0.c1, vt0.lid))) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST LIMIT 2;
SELECT * FROM t1, vt0 WHERE (((((vt0.lid)*(t1.c0)))||(json(vt0.c0))));
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.lid)*(t1.c0)))||(json(vt0.c0)))) ORDER BY ((((vt0.c2) NOT NULL))>>(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c1)))OR(t1.c0)))) DESC, (COALESCE(vt0.c0, t1.c0, vt0.lid) IN (((vt0.lid)>(vt0.c2)), (t1.c0 IN (t1.c0))))  NULLS LAST;
SELECT * FROM t1, vt0 WHERE (((((vt0.lid)*(t1.c0)))||(json(vt0.c0))));
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))AND(NULL)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) COLLATE NOCASE);
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))AND(NULL)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) COLLATE NOCASE) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, NULL)) NOT BETWEEN ((((t1.c1) NOT NULL), t1.c1 COLLATE RTRIM)) AND ((SQLITE_COMPILEOPTION_GET(t1.c1), COALESCE(DISTINCT t1.c1, t1.c0, 'VM?_1E%1', t1.c0)))));
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))AND(NULL)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) COLLATE NOCASE);
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c1)))AND(NULL)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) COLLATE NOCASE) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c1, NULL)) NOT BETWEEN ((((t1.c1) NOT NULL), t1.c1 COLLATE RTRIM)) AND ((SQLITE_COMPILEOPTION_GET(t1.c1), COALESCE(DISTINCT t1.c1, t1.c0, 'VM?_1E%1', t1.c0)))));
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((CAST(t1.c1 AS BLOB))) AND ((((vt0.c1)%(t1.c1)))))) ORDER BY ((CASE t1.c0  WHEN -208665743 THEN vt0.c1 WHEN vt0.lid THEN vt0.c2 WHEN 0Xffffffff8a9eb3ad THEN t1.c1 END)==(((NULL) BETWEEN (t1.c0) AND (vt0.c0))));
SELECT ALL * FROM t1, vt0 WHERE ((((((vt0.c2)) NOT BETWEEN ((CAST(t1.c1 AS BLOB))) AND ((((vt0.c1)%(t1.c1))))))AND(LIKELIHOOD(vt0.c2, t1.c1) COLLATE RTRIM))) ORDER BY MIN((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((t1.c1))), t1.c0, (vt0.c2 IN ())), ((vt0.c2 COLLATE RTRIM)LIKE(0.528438920411735)) ASC  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((CAST(t1.c1 AS BLOB))) AND ((((vt0.c1)%(t1.c1)))))) ORDER BY ((CASE t1.c0  WHEN -208665743 THEN vt0.c1 WHEN vt0.lid THEN vt0.c2 WHEN 0Xffffffff8a9eb3ad THEN t1.c1 END)==(((NULL) BETWEEN (t1.c0) AND (vt0.c0))));
SELECT ALL * FROM t1, vt0 WHERE ((((((vt0.c2)) NOT BETWEEN ((CAST(t1.c1 AS BLOB))) AND ((((vt0.c1)%(t1.c1))))))AND(LIKELIHOOD(vt0.c2, t1.c1) COLLATE RTRIM))) ORDER BY MIN((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((t1.c1))), t1.c0, (vt0.c2 IN ())), ((vt0.c2 COLLATE RTRIM)LIKE(0.528438920411735)) ASC  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (CAST(t1.c1 AS TEXT) COLLATE NOCASE);
SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM t1 WHERE (CAST(t1.c1 AS TEXT) COLLATE NOCASE);
SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM t1 INNER JOIN vt0 ON (t1.c1 IN (vt0.c0)) COLLATE BINARY WHERE (CASE ((vt0.c1) ISNULL)  WHEN CASE WHEN vt0.lid THEN vt0.lid WHEN t1.c0 THEN vt0.lid WHEN vt0.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE 'CtbMk+?|' END THEN (((vt0.c2, t1.c0))<((t1.c1, vt0.lid))) END);
SELECT * FROM t1 INNER JOIN vt0 ON (t1.c1 IN (vt0.c0)) COLLATE BINARY WHERE (CASE ((vt0.c1) ISNULL)  WHEN CASE WHEN vt0.lid THEN vt0.lid WHEN t1.c0 THEN vt0.lid WHEN vt0.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE 'CtbMk+?|' END THEN (((vt0.c2, t1.c0))<((t1.c1, vt0.lid))) END) ORDER BY ABS((((vt0.c2, vt0.c0))!=((vt0.c1, vt0.lid)))) DESC  NULLS LAST INTERSECT SELECT * FROM t1 INNER JOIN vt0 ON (t1.c1 IN (vt0.c0)) COLLATE BINARY WHERE (CAST((vt0.c2 IN (t1.c1)) AS BLOB)) ORDER BY ABS((((vt0.c2, vt0.c0))<>((vt0.c1, vt0.lid)))) DESC  NULLS LAST;
SELECT ALL * FROM t1 INNER JOIN vt0 ON (t1.c1 IN (vt0.c0)) COLLATE BINARY WHERE (CASE ((vt0.c1) ISNULL)  WHEN CASE WHEN vt0.lid THEN vt0.lid WHEN t1.c0 THEN vt0.lid WHEN vt0.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE 'CtbMk+?|' END THEN (((vt0.c2, t1.c0))<((t1.c1, vt0.lid))) END);
SELECT * FROM t1 INNER JOIN vt0 ON (t1.c1 IN (vt0.c0)) COLLATE BINARY WHERE (CASE ((vt0.c1) ISNULL)  WHEN CASE WHEN vt0.lid THEN vt0.lid WHEN t1.c0 THEN vt0.lid WHEN vt0.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE 'CtbMk+?|' END THEN (((vt0.c2, t1.c0))<((t1.c1, vt0.lid))) END) ORDER BY ABS((((vt0.c2, vt0.c0))!=((vt0.c1, vt0.lid)))) DESC  NULLS LAST INTERSECT SELECT * FROM t1 INNER JOIN vt0 ON (t1.c1 IN (vt0.c0)) COLLATE BINARY WHERE (CAST((vt0.c2 IN (t1.c1)) AS BLOB)) ORDER BY ABS((((vt0.c2, vt0.c0))<>((vt0.c1, vt0.lid)))) DESC  NULLS LAST;
SELECT * FROM t1, vt0 WHERE ((((((t1.c0)AND(t1.c1)))AND(vt0.c0)) IN ())) ORDER BY ((TYPEOF(DISTINCT t1.c0)) IS TRUE)  NULLS LAST;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((((t1.c0)AND(t1.c1)))AND(vt0.c0)) IN ())) ORDER BY UNLIKELY((t1.c1 IN (x'847534'))) DESC;
SELECT * FROM t1, vt0 WHERE ((((((t1.c0)AND(t1.c1)))AND(vt0.c0)) IN ())) ORDER BY ((TYPEOF(DISTINCT t1.c0)) IS TRUE)  NULLS LAST;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((((t1.c0)AND(t1.c1)))AND(vt0.c0)) IN ())) ORDER BY UNLIKELY((t1.c1 IN (x'847534'))) DESC;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) IS FALSE)) ORDER BY ((vt0.c1)IS NOT((((vt0.c2, vt0.lid, vt0.c1, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1, vt0.c2))))) ASC;
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) IS FALSE)) ORDER BY ((vt0.c1)IS NOT((((vt0.c2, vt0.lid, vt0.c1, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1, vt0.c2))))) ASC LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) IS FALSE)) ORDER BY ((vt0.c1)IS NOT((((vt0.c2, vt0.lid, vt0.c1, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1, vt0.c2))))) ASC;
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) IS FALSE)) ORDER BY ((vt0.c1)IS NOT((((vt0.c2, vt0.lid, vt0.c1, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1, vt0.c2))))) ASC LIMIT 0X0;
SELECT MIN(vt0.c0) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN ((vt0.c2 IN (vt0.lid))) AND (0.9612669387822281)));
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN ((vt0.c2 IN (vt0.lid))) AND (0.9612669387822281))) ORDER BY (((vt0.c2)) BETWEEN (((((vt0.c2, vt0.c2, vt0.c1))<=((vt0.lid, '-1958114803', vt0.c0))))) AND ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) DESC  NULLS FIRST, ((vt0.c1)>>(CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END)) DESC LIMIT 0x2;
SELECT MAX(t1.c1) FROM t1 WHERE (((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1)));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))OR(t1.c1)))AND(x'8f'))) LIMIT 0X0 INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (CAST('' AS TEXT) COLLATE NOCASE) LIMIT 0X0;
SELECT * FROM t1, vt0 WHERE ((NOT (vt0.lid COLLATE BINARY))) ORDER BY CASE WHEN t1.c0 COLLATE NOCASE THEN (vt0.c1 IN (t1.c0)) WHEN ((t1.c1) IS FALSE) THEN ((vt0.c0) NOT BETWEEN ('\
') AND (vt0.lid)) WHEN vt0.c2 COLLATE RTRIM THEN vt0.c1 END  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((NOT (vt0.lid COLLATE BINARY)))AND(vt0.lid))) ORDER BY ((((((((vt0.c1)AND(vt0.c1)))OR(t1.c0)))AND(vt0.c0)))AND(vt0.c2)) COLLATE NOCASE DESC  NULLS FIRST, '/傜nin'  NULLS LAST;
SELECT * FROM t1, vt0 WHERE ((NOT (vt0.lid COLLATE BINARY))) ORDER BY CASE WHEN t1.c0 COLLATE NOCASE THEN (vt0.c1 IN (t1.c0)) WHEN ((t1.c1) IS FALSE) THEN ((vt0.c0) NOT BETWEEN ('\
') AND (vt0.lid)) WHEN vt0.c2 COLLATE RTRIM THEN vt0.c1 END  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((NOT (vt0.lid COLLATE BINARY)))AND(vt0.lid))) ORDER BY ((((((((vt0.c1)AND(vt0.c1)))OR(t1.c0)))AND(vt0.c0)))AND(vt0.c2)) COLLATE NOCASE DESC  NULLS FIRST, '/傜nin'  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST(((vt0.c2) NOT NULL) AS BLOB)) ORDER BY (((UNLIKELY(DISTINCT t1.c1)))>=((((t1.c1)<=(vt0.c2))))), ((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))OR(vt0.lid)))%(((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.c2))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE (((CAST(((vt0.c2) NOT NULL) AS BLOB))AND(CAST(((vt0.c2) ISNULL) AS INTEGER)))) ORDER BY (((UNLIKELY(DISTINCT t1.c1)))>=((((t1.c1)<=(vt0.c2))))), ((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))OR(vt0.lid)))%(((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON t1.c0 WHERE ((((NULL, '\I'))<((vt0.c1 COLLATE RTRIM, vt0.lid))));
SELECT DISTINCT COUNT(*) FROM vt0 CROSS JOIN t1 ON t1.c0 WHERE ((((NULL, '\I'))<((vt0.c1 COLLATE RTRIM, vt0.lid)))) INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 CROSS JOIN t1 ON t1.c0 WHERE (CASE WHEN ((1.583054603E9)!=(vt0.c2)) THEN (((vt0.c1))!=((vt0.c0))) WHEN (vt0.lid IN (vt0.c2, t1.c0)) THEN ((((((((vt0.lid)AND(vt0.c2)))OR(t1.c0)))OR(vt0.c1)))OR(vt0.c1)) END);
SELECT * FROM t1 WHERE (0.689549384297043 COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE (0.689549384297043 COLLATE RTRIM) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))IS(TIME(t1.c0, '-177641769', t1.c1)))  NULLS LAST, (('Z~[.R%&m') IS FALSE)  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM t1 WHERE (((t1.c1)<(t1.c0)) COLLATE BINARY) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))IS(TIME(t1.c0, '-177641769', t1.c1)))  NULLS LAST, (('Z~[.R%&m') IS FALSE)  NULLS LAST LIMIT 2;
SELECT * FROM t1 WHERE (0.689549384297043 COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE (0.689549384297043 COLLATE RTRIM) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))IS(TIME(t1.c0, '-177641769', t1.c1)))  NULLS LAST, (('Z~[.R%&m') IS FALSE)  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM t1 WHERE (((t1.c1)<(t1.c0)) COLLATE BINARY) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))IS(TIME(t1.c0, '-177641769', t1.c1)))  NULLS LAST, (('Z~[.R%&m') IS FALSE)  NULLS LAST LIMIT 2;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON ((((~ (vt0.c2))))<=((((t1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2))))) WHERE (((((vt0.lid) IS FALSE))|((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))))) ORDER BY CAST(((vt0.lid) BETWEEN (vt0.c2) AND (t1.c0)) AS NUMERIC), DATETIME(((t1.c0)GLOB(vt0.c0)), CAST(t1.c0 AS NUMERIC), (((t1.c0, t1.c1, t1.c0, NULL, vt0.lid)) NOT BETWEEN ((t1.c1, t1.c1, vt0.c2, vt0.lid, vt0.lid)) AND ((vt0.c2, vt0.c0, vt0.c2, x'', vt0.lid))), vt0.c0)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON ((((~ (vt0.c2))))<=((((t1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2))))) WHERE (((((vt0.lid) IS FALSE))|((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))))) ORDER BY CAST(((vt0.lid) BETWEEN (vt0.c2) AND (t1.c0)) AS NUMERIC), DATETIME(((t1.c0)GLOB(vt0.c0)), CAST(t1.c0 AS NUMERIC), (((t1.c0, t1.c1, t1.c0, NULL, vt0.lid)) NOT BETWEEN ((t1.c1, t1.c1, vt0.c2, vt0.lid, vt0.lid)) AND ((vt0.c2, vt0.c0, vt0.c2, x'', vt0.lid))), vt0.c0)  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE (x'84' IN (vt0.lid))  WHEN ((((((((((vt0.lid)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)) THEN CAST(vt0.c2 AS INTEGER) WHEN ((((NULL)OR(vt0.lid)))OR(vt0.lid)) THEN vt0.lid COLLATE BINARY END) ORDER BY (((0.9763723898896564, COALESCE(NULL, vt0.c0, vt0.c2, vt0.c0), CAST(vt0.c2 AS NUMERIC)))<>((vt0.c1, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)), (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))), (((vt0.lid) NOT NULL) IN ()) ASC, vt0.lid ASC;
SELECT DISTINCT * FROM vt0 WHERE (((CASE (x'84' IN (vt0.lid))  WHEN ((((((((((vt0.lid)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)) THEN CAST(vt0.c2 AS INTEGER) WHEN ((((NULL)OR(vt0.lid)))OR(vt0.lid)) THEN vt0.lid COLLATE BINARY END)AND(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) COLLATE RTRIM))) ORDER BY CAST('-1513329194' AS INTEGER)  NULLS LAST, (- (vt0.c2)) COLLATE RTRIM  NULLS LAST, ((CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.lid THEN vt0.c2 ELSE vt0.c2 END)%(CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST LIMIT 2;
SELECT * FROM vt0 WHERE (CASE (x'84' IN (vt0.lid))  WHEN ((((((((((vt0.lid)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)) THEN CAST(vt0.c2 AS INTEGER) WHEN ((((NULL)OR(vt0.lid)))OR(vt0.lid)) THEN vt0.lid COLLATE BINARY END) ORDER BY (((0.9763723898896564, COALESCE(NULL, vt0.c0, vt0.c2, vt0.c0), CAST(vt0.c2 AS NUMERIC)))<>((vt0.c1, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)), (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))), (((vt0.lid) NOT NULL) IN ()) ASC, vt0.lid ASC;
SELECT ALL MIN(vt0.c2) FROM vt0, t1 WHERE (((((((((vt0.c0)+(vt0.c1)))OR((x'9d' IN (vt0.lid, vt0.lid, t1.c0)))))OR(((vt0.c1)%(t1.c1)))))AND(((vt0.c1)/(t1.c1)))));
SELECT ALL MIN(vt0.c2) FROM vt0, t1 WHERE (((((((((vt0.c0)+(vt0.c1)))OR((x'9d' IN (vt0.lid, vt0.lid, t1.c0)))))OR(((vt0.c1)%(t1.c1)))))AND(((vt0.c1)/(t1.c1))))) LIMIT 0x0 INTERSECT SELECT ALL MIN(vt0.c2) FROM vt0, t1 WHERE (((((vt0.c0) IS FALSE)) IS FALSE)) LIMIT 0;
SELECT ALL * FROM vt0, t1 WHERE (CASE ((vt0.c0)-(vt0.lid))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 WHEN CAST(vt0.c1 AS REAL) THEN vt0.c0 COLLATE NOCASE WHEN '564106157' THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN vt0.c0 THEN t1.c0 WHEN (vt0.lid IN (vt0.c0)) THEN ((((((vt0.c1)AND(vt0.c1)))OR(t1.c0)))AND(vt0.c0)) END) ORDER BY (json_remove(x'', vt0.c0) IN (CASE WHEN vt0.c1 THEN t1.c1 WHEN t1.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c1 END)) ASC  NULLS FIRST, (((((vt0.c2))>=((t1.c1)))) NOT BETWEEN ((~ (t1.c1))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST, ((1230277535) BETWEEN (x'696587') AND (vt0.c1)) COLLATE NOCASE  NULLS LAST, (((-8.68919299E8, t1.c0, IFNULL(DISTINCT vt0.c0, t1.c1)))>((vt0.lid, ((t1.c0)GLOB(vt0.c2)), vt0.c0))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (((CASE ((vt0.c0)-(vt0.lid))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 WHEN CAST(vt0.c1 AS REAL) THEN vt0.c0 COLLATE NOCASE WHEN '564106157' THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN vt0.c0 THEN t1.c0 WHEN (vt0.lid IN (vt0.c0)) THEN ((((((vt0.c1)AND(vt0.c1)))OR(t1.c0)))AND(vt0.c0)) END)AND(CAST(((t1.c0)<=(t1.c0)) AS TEXT)))) ORDER BY (json_remove(x'', vt0.c0) IN (CASE WHEN vt0.c1 THEN t1.c1 WHEN t1.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c1 END)) ASC  NULLS FIRST, (((((vt0.c2))>=((t1.c1)))) NOT BETWEEN ((~ (t1.c1))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST, ((0x49548b9f) BETWEEN (x'696587') AND (vt0.c1)) COLLATE NOCASE  NULLS LAST, (((-8.68919299E8, t1.c0, IFNULL(DISTINCT vt0.c0, t1.c1)))>((vt0.lid, ((t1.c0)GLOB(vt0.c2)), vt0.c0))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE ((CASE WHEN t1.c0 THEN t1.c1 END IN (CAST(t1.c1 AS NUMERIC)))) ORDER BY (json_remove(x'', vt0.c0) IN (CASE WHEN vt0.c1 THEN t1.c1 WHEN t1.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c1 END)) ASC  NULLS FIRST, (((((vt0.c2))>=((t1.c1)))) NOT BETWEEN ((~ (t1.c1))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST, ((0x49548b9f) BETWEEN (x'696587') AND (vt0.c1)) COLLATE NOCASE  NULLS LAST, (((-8.68919299E8, t1.c0, IFNULL(DISTINCT vt0.c0, t1.c1)))>((vt0.lid, ((t1.c0)GLOB(vt0.c2)), vt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (CASE ((vt0.c0)-(vt0.lid))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 WHEN CAST(vt0.c1 AS REAL) THEN vt0.c0 COLLATE NOCASE WHEN '564106157' THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN vt0.c0 THEN t1.c0 WHEN (vt0.lid IN (vt0.c0)) THEN ((((((vt0.c1)AND(vt0.c1)))OR(t1.c0)))AND(vt0.c0)) END) ORDER BY (json_remove(x'', vt0.c0) IN (CASE WHEN vt0.c1 THEN t1.c1 WHEN t1.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c1 END)) ASC  NULLS FIRST, (((((vt0.c2))>=((t1.c1)))) NOT BETWEEN ((~ (t1.c1))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST, ((1230277535) BETWEEN (x'696587') AND (vt0.c1)) COLLATE NOCASE  NULLS LAST, (((-8.68919299E8, t1.c0, IFNULL(DISTINCT vt0.c0, t1.c1)))>((vt0.lid, ((t1.c0)GLOB(vt0.c2)), vt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (((((((((((t1.c1) NOT BETWEEN (vt0.lid) AND (t1.c1)))OR(((vt0.lid)%(vt0.lid)))))AND(CHANGES())))OR(CAST(vt0.lid AS BLOB))))OR(CASE WHEN vt0.lid THEN vt0.c0 END))) ORDER BY (((t1.c0)) NOT BETWEEN ((CASE 0xfffffffffb128009  WHEN t1.c1 THEN t1.c0 WHEN vt0.c2 THEN t1.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)) AND (((t1.c0 IN (t1.c1)))));
SELECT * FROM t1, vt0 WHERE (((((((((((t1.c1) NOT BETWEEN (vt0.lid) AND (t1.c1)))OR(((vt0.lid)%(vt0.lid)))))AND(CHANGES())))OR(CAST(vt0.lid AS BLOB))))OR(CASE WHEN vt0.lid THEN vt0.c0 END))) ORDER BY (((t1.c0)) NOT BETWEEN ((CASE -82673655  WHEN t1.c1 THEN t1.c0 WHEN vt0.c2 THEN t1.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)) AND (((t1.c0 IN (t1.c1))))) INTERSECT SELECT ALL * FROM t1, vt0 WHERE (x'ff') ORDER BY (((t1.c0)) NOT BETWEEN ((CASE 0xfffffffffb128009  WHEN t1.c1 THEN t1.c0 WHEN vt0.c2 THEN t1.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)) AND (((t1.c0 IN (t1.c1)))));
SELECT ALL * FROM t1, vt0 WHERE (((((((((((t1.c1) NOT BETWEEN (vt0.lid) AND (t1.c1)))OR(((vt0.lid)%(vt0.lid)))))AND(CHANGES())))OR(CAST(vt0.lid AS BLOB))))OR(CASE WHEN vt0.lid THEN vt0.c0 END))) ORDER BY (((t1.c0)) NOT BETWEEN ((CASE 0xfffffffffb128009  WHEN t1.c1 THEN t1.c0 WHEN vt0.c2 THEN t1.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)) AND (((t1.c0 IN (t1.c1)))));
SELECT * FROM t1, vt0 WHERE (((((((((((t1.c1) NOT BETWEEN (vt0.lid) AND (t1.c1)))OR(((vt0.lid)%(vt0.lid)))))AND(CHANGES())))OR(CAST(vt0.lid AS BLOB))))OR(CASE WHEN vt0.lid THEN vt0.c0 END))) ORDER BY (((t1.c0)) NOT BETWEEN ((CASE -82673655  WHEN t1.c1 THEN t1.c0 WHEN vt0.c2 THEN t1.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)) AND (((t1.c0 IN (t1.c1))))) INTERSECT SELECT ALL * FROM t1, vt0 WHERE (x'ff') ORDER BY (((t1.c0)) NOT BETWEEN ((CASE 0xfffffffffb128009  WHEN t1.c1 THEN t1.c0 WHEN vt0.c2 THEN t1.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)) AND (((t1.c0 IN (t1.c1)))));
SELECT ALL MIN(t1.c1) FROM t1 WHERE (COALESCE(t1.c1 COLLATE BINARY, ((((((0.9407781201896221)OR(t1.c0)))AND(t1.c1)))AND(NULL)), CASE 0.7608391808713805  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)) ORDER BY t1.c1  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (COALESCE(t1.c1 COLLATE BINARY, ((((((0.9407781201896221)OR(t1.c0)))AND(t1.c1)))AND(NULL)), CASE 0.7608391808713805  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)) ORDER BY NULL DESC  NULLS FIRST, (((~ (t1.c1))) NOT BETWEEN ((t1.c0 IN ())) AND ((NOT (t1.c1)))) ASC  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c0, NULL)) NOT BETWEEN (((vt0.lid IN ()), CASE WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 WHEN vt0.lid THEN vt0.c0 END)) AND ((((vt0.c0)OR(vt0.lid)), (- ('-135256829'))))));
SELECT * FROM vt0, t1 WHERE ((((vt0.c0, NULL)) NOT BETWEEN (((vt0.lid IN ()), CASE WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 WHEN vt0.lid THEN vt0.c0 END)) AND ((((vt0.c0)OR(vt0.lid)), (- ('-135256829')))))) INTERSECT SELECT ALL * FROM vt0, t1 WHERE (((CAST(vt0.c2 AS REAL)) IS TRUE));
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c0, NULL)) NOT BETWEEN (((vt0.lid IN ()), CASE WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 WHEN vt0.lid THEN vt0.c0 END)) AND ((((vt0.c0)OR(vt0.lid)), (- ('-135256829'))))));
SELECT * FROM vt0, t1 WHERE ((((vt0.c0, NULL)) NOT BETWEEN (((vt0.lid IN ()), CASE WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 WHEN vt0.lid THEN vt0.c0 END)) AND ((((vt0.c0)OR(vt0.lid)), (- ('-135256829')))))) INTERSECT SELECT ALL * FROM vt0, t1 WHERE (((CAST(vt0.c2 AS REAL)) IS TRUE));
SELECT ALL * FROM vt0 WHERE (vt0.lid COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((vt0.lid COLLATE RTRIM)AND((((('nc') IS TRUE)) IS FALSE)))) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY COLLATE NOCASE LIMIT 3 INTERSECT SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY COLLATE NOCASE LIMIT 0x3;
SELECT ALL * FROM vt0 WHERE (vt0.lid COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((vt0.lid COLLATE RTRIM)AND((((('nc') IS TRUE)) IS FALSE)))) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY COLLATE NOCASE LIMIT 3 INTERSECT SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY COLLATE NOCASE LIMIT 0x3;
SELECT * FROM vt0 WHERE (((((vt0.c2) NOTNULL))OR(((((vt0.lid)AND(1453990143)))OR(vt0.c2)))));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c2) NOTNULL))OR(((((vt0.lid)AND(0x56aa20ff)))OR(vt0.c2))))) ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST, CASE WHEN vt0.c0 THEN (- (vt0.c1)) WHEN ((vt0.lid)>(vt0.lid)) THEN (~ (vt0.lid)) WHEN ((((vt0.c0)OR(vt0.c2)))OR('')) THEN ((vt0.c2) NOT BETWEEN (vt0.lid) AND (vt0.lid)) END ASC, ((INSTR(vt0.c2, vt0.lid)) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c2) NOTNULL))OR(((((vt0.lid)AND(1453990143)))OR(vt0.c2)))));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c2) NOTNULL))OR(((((vt0.lid)AND(0x56aa20ff)))OR(vt0.c2))))) ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST, CASE WHEN vt0.c0 THEN (- (vt0.c1)) WHEN ((vt0.lid)>(vt0.lid)) THEN (~ (vt0.lid)) WHEN ((((vt0.c0)OR(vt0.c2)))OR('')) THEN ((vt0.c2) NOT BETWEEN (vt0.lid) AND (vt0.lid)) END ASC, ((INSTR(vt0.c2, vt0.lid)) IS TRUE) DESC  NULLS FIRST;
SELECT MAX(t1.c1) FROM vt0, t1 WHERE (((((((((vt0.c0 COLLATE RTRIM)AND(((((((vt0.c0)OR(vt0.lid)))OR(vt0.c1)))OR(t1.c1)))))OR(0.5951837614697534)))OR(t1.c1 COLLATE NOCASE)))AND(((vt0.c0)!=(vt0.c1))))) ORDER BY ((NULL COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM vt0, t1 WHERE (((((((((vt0.c0 COLLATE RTRIM)AND(((((((vt0.c0)OR(vt0.lid)))OR(vt0.c1)))OR(t1.c1)))))OR(0.5951837614697534)))OR(t1.c1 COLLATE NOCASE)))AND(((vt0.c0)!=(vt0.c1))))) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.lid) ISNULL))) AND ((((vt0.c2) NOT BETWEEN (vt0.c2) AND (t1.c1))))) DESC, (((vt0.lid IN ())) NOT NULL)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN vt0.lid THEN vt0.lid END))) ORDER BY (((vt0.c1)AND(vt0.lid)) IN (((vt0.lid)=(vt0.c1)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c2)IS NOT(vt0.c2)) THEN 0.9082076631380811 END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((NOT (CASE WHEN vt0.lid THEN vt0.lid END)))AND(((vt0.lid COLLATE RTRIM)-(((vt0.c1)IS(vt0.lid))))))) ORDER BY (((vt0.c1)AND(vt0.lid)) IN (((vt0.lid)=(vt0.c1)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c2)IS NOT(vt0.c2)) THEN 0.9082076631380811 END  NULLS LAST LIMIT 0X1 INTERSECT SELECT ALL * FROM vt0 WHERE (((x'')+(((vt0.c1) IS TRUE)))) ORDER BY (((vt0.c1)AND(vt0.lid)) IN (((vt0.lid)=(vt0.c1)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c2)IS NOT(vt0.c2)) THEN 0.9082076631380811 END  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN vt0.lid THEN vt0.lid END))) ORDER BY (((vt0.c1)AND(vt0.lid)) IN (((vt0.lid)=(vt0.c1)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c2)IS NOT(vt0.c2)) THEN 0.9082076631380811 END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((NOT (CASE WHEN vt0.lid THEN vt0.lid END)))AND(((vt0.lid COLLATE RTRIM)-(((vt0.c1)IS(vt0.lid))))))) ORDER BY (((vt0.c1)AND(vt0.lid)) IN (((vt0.lid)=(vt0.c1)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c2)IS NOT(vt0.c2)) THEN 0.9082076631380811 END  NULLS LAST LIMIT 0X1 INTERSECT SELECT ALL * FROM vt0 WHERE (((x'')+(((vt0.c1) IS TRUE)))) ORDER BY (((vt0.c1)AND(vt0.lid)) IN (((vt0.lid)=(vt0.c1)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c2)IS NOT(vt0.c2)) THEN 0.9082076631380811 END  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM vt0 CROSS JOIN t1 ON ((((t1.c1 IN ()), ((t1.c0)-(t1.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (x''))))>=((CAST(vt0.c1 AS NUMERIC), ((t1.c0)AND(vt0.c0)), CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN vt0.lid THEN vt0.c2 END))) WHERE (((((((((t1.c0)AND(vt0.lid)))OR((- (vt0.c0)))))AND(COALESCE(NULL, vt0.c2, vt0.lid, vt0.c1))))AND((((vt0.c0))>((t1.c0)))))) ORDER BY ((((t1.c1) IS TRUE)) IS TRUE)  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN t1 ON ((((t1.c1 IN ()), ((t1.c0)-(t1.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (x''))))>=((CAST(vt0.c1 AS NUMERIC), ((t1.c0)AND(vt0.c0)), CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN vt0.lid THEN vt0.c2 END))) WHERE (((((((((t1.c0)AND(vt0.lid)))OR((- (vt0.c0)))))AND(COALESCE(NULL, vt0.c2, vt0.lid, vt0.c1))))AND((((vt0.c0))>((t1.c0)))))) ORDER BY x'', t1.c1  NULLS FIRST INTERSECT SELECT ALL * FROM vt0 CROSS JOIN t1 ON ((((t1.c1 IN ()), ((t1.c0)-(t1.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (x''))))>=((CAST(vt0.c1 AS NUMERIC), ((t1.c0)AND(vt0.c0)), CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN vt0.lid THEN vt0.c2 END))) WHERE ((+ ((vt0.lid IN ())))) ORDER BY x'', t1.c1  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN t1 ON ((((t1.c1 IN ()), ((t1.c0)-(t1.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (x''))))>=((CAST(vt0.c1 AS NUMERIC), ((t1.c0)AND(vt0.c0)), CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN vt0.lid THEN vt0.c2 END))) WHERE (((((((((t1.c0)AND(vt0.lid)))OR((- (vt0.c0)))))AND(COALESCE(NULL, vt0.c2, vt0.lid, vt0.c1))))AND((((vt0.c0))>((t1.c0)))))) ORDER BY ((((t1.c1) IS TRUE)) IS TRUE)  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN t1 ON ((((t1.c1 IN ()), ((t1.c0)-(t1.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (x''))))>=((CAST(vt0.c1 AS NUMERIC), ((t1.c0)AND(vt0.c0)), CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN vt0.lid THEN vt0.c2 END))) WHERE (((((((((t1.c0)AND(vt0.lid)))OR((- (vt0.c0)))))AND(COALESCE(NULL, vt0.c2, vt0.lid, vt0.c1))))AND((((vt0.c0))>((t1.c0)))))) ORDER BY x'', t1.c1  NULLS FIRST INTERSECT SELECT ALL * FROM vt0 CROSS JOIN t1 ON ((((t1.c1 IN ()), ((t1.c0)-(t1.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (x''))))>=((CAST(vt0.c1 AS NUMERIC), ((t1.c0)AND(vt0.c0)), CASE t1.c0  WHEN t1.c1 THEN t1.c0 WHEN vt0.lid THEN vt0.c2 END))) WHERE ((+ ((vt0.lid IN ())))) ORDER BY x'', t1.c1  NULLS FIRST;
SELECT * FROM t1 CROSS JOIN vt0 ON CAST((t1.c0 IN ()) AS BLOB) WHERE (CAST((vt0.c0 IN ()) AS INTEGER));
SELECT * FROM t1 CROSS JOIN vt0 ON CAST((t1.c0 IN ()) AS BLOB) WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY CAST(vt0.lid COLLATE BINARY AS TEXT) ASC  NULLS FIRST, CAST(t1.c0 COLLATE BINARY AS REAL)  NULLS LAST INTERSECT SELECT ALL * FROM t1 CROSS JOIN vt0 ON CAST((t1.c0 IN ()) AS BLOB) WHERE ((vt0.c1 IN (vt0.c2)) COLLATE RTRIM) ORDER BY CAST(vt0.lid COLLATE BINARY AS TEXT) ASC  NULLS FIRST, CAST(t1.c0 COLLATE BINARY AS REAL)  NULLS LAST;
SELECT * FROM t1 CROSS JOIN vt0 ON CAST((t1.c0 IN ()) AS BLOB) WHERE (CAST((vt0.c0 IN ()) AS INTEGER));
SELECT * FROM t1 CROSS JOIN vt0 ON CAST((t1.c0 IN ()) AS BLOB) WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY CAST(vt0.lid COLLATE BINARY AS TEXT) ASC  NULLS FIRST, CAST(t1.c0 COLLATE BINARY AS REAL)  NULLS LAST INTERSECT SELECT ALL * FROM t1 CROSS JOIN vt0 ON CAST((t1.c0 IN ()) AS BLOB) WHERE ((vt0.c1 IN (vt0.c2)) COLLATE RTRIM) ORDER BY CAST(vt0.lid COLLATE BINARY AS TEXT) ASC  NULLS FIRST, CAST(t1.c0 COLLATE BINARY AS REAL)  NULLS LAST;
SELECT * FROM t1 WHERE ((~ (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((~ (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND(((t1.c0)GLOB(t1.c0 COLLATE RTRIM)))));
SELECT * FROM t1 WHERE ((~ (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE ((((~ (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND(((t1.c0)GLOB(t1.c0 COLLATE RTRIM)))));
SELECT MAX(vt0.c0) FROM t1, vt0 WHERE (CAST((- (vt0.c2)) AS REAL)) ORDER BY ((vt0.lid)LIKE(t1.c1)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c0) FROM t1, vt0 WHERE (((CAST((- (vt0.c2)) AS REAL))AND(t1.c0))) ORDER BY (- (IFNULL(vt0.c2, vt0.c1))) ASC, (((~ (t1.c1))) NOT BETWEEN (NULL) AND ((- (vt0.c0)))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((t1.c0)|(t1.c1)) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE (((t1.c0)|(t1.c1)) COLLATE RTRIM) ORDER BY ((CAST(t1.c1 AS INTEGER)) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (t1.c1)) DESC  NULLS FIRST, ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))OR(((((t1.c1)OR(t1.c0)))OR(x'7f2aa356')))))OR(t1.c0))  NULLS LAST, ((((t1.c0)|(t1.c0)))/(((t1.c0)%(t1.c1))))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((t1.c0)|(t1.c1)) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE (((t1.c0)|(t1.c1)) COLLATE RTRIM) ORDER BY ((CAST(t1.c1 AS INTEGER)) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (t1.c1)) DESC  NULLS FIRST, ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))OR(((((t1.c1)OR(t1.c0)))OR(x'7f2aa356')))))OR(t1.c0))  NULLS LAST, ((((t1.c0)|(t1.c0)))/(((t1.c0)%(t1.c1))))  NULLS FIRST LIMIT 1;
SELECT MAX(vt0.c0) FROM vt0, t1 WHERE ((((vt0.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) IN (t1.c1))) ORDER BY UPPER((((t1.c0, t1.c0, t1.c0, t1.c1, vt0.lid)) BETWEEN ((vt0.c1, vt0.c0, t1.c1, NULL, vt0.c2)) AND ((t1.c0, vt0.lid, vt0.c1, vt0.lid, t1.c1)))) ASC;
SELECT MAX(vt0.c0) FROM vt0, t1 WHERE ((((((vt0.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) IN (t1.c1)))AND((x'' IN ())))) ORDER BY UPPER((((t1.c0, t1.c0, t1.c0, t1.c1, vt0.lid)) BETWEEN ((vt0.c1, vt0.c0, t1.c1, NULL, vt0.c2)) AND ((t1.c0, vt0.lid, vt0.c1, vt0.lid, t1.c1)))) ASC LIMIT 6;
SELECT * FROM t1 INNER JOIN vt0 ON ((t1.c1)LIKE((~ (t1.c1)))) WHERE ((0.3872148537733697 IN (CAST(t1.c1 AS BLOB), ((t1.c0) BETWEEN (vt0.lid) AND (t1.c0))))) ORDER BY (((x'0aaf85c1' IN ()))AND(CASE vt0.lid  WHEN vt0.c0 THEN t1.c0 END)) ASC, (NOT (((((((vt0.c2)OR(t1.c0)))OR(NULL)))OR(vt0.c2)))) ASC;
SELECT * FROM t1 INNER JOIN vt0 ON ((t1.c1)LIKE((~ (t1.c1)))) WHERE ((0.3872148537733697 IN (CAST(t1.c1 AS BLOB), ((t1.c0) BETWEEN (vt0.lid) AND (t1.c0))))) ORDER BY (((x'0aaf85c1' IN ()))AND(CASE vt0.lid  WHEN vt0.c0 THEN t1.c0 END)) ASC, (NOT (((((((vt0.c2)OR(t1.c0)))OR(NULL)))OR(vt0.c2)))) ASC LIMIT 0X6;
SELECT * FROM t1 INNER JOIN vt0 ON ((t1.c1)LIKE((~ (t1.c1)))) WHERE ((0.3872148537733697 IN (CAST(t1.c1 AS BLOB), ((t1.c0) BETWEEN (vt0.lid) AND (t1.c0))))) ORDER BY (((x'0aaf85c1' IN ()))AND(CASE vt0.lid  WHEN vt0.c0 THEN t1.c0 END)) ASC, (NOT (((((((vt0.c2)OR(t1.c0)))OR(NULL)))OR(vt0.c2)))) ASC;
SELECT ALL MAX(vt0.lid) FROM t1, vt0 WHERE (vt0.c0);
SELECT MAX(vt0.lid) FROM t1, vt0 WHERE (((vt0.c0)AND(((CAST(0.10870094114560747 AS TEXT))GLOB(((vt0.c2)=(t1.c1))))))) ORDER BY (CAST(t1.c1 AS REAL) IN (CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN t1.c1 WHEN vt0.c0 THEN 0.7918081324213821 WHEN vt0.c1 THEN t1.c0 END, ((vt0.lid) NOT NULL))), ((highlight(t1.c0, vt0.c2, t1.c0, vt0.c1))>>((+ (t1.c1)))) DESC  NULLS LAST LIMIT 1 INTERSECT SELECT ALL MAX(vt0.lid) FROM t1, vt0 WHERE (((((vt0.c0)AND(vt0.c1)))OR(NULL)) COLLATE RTRIM) ORDER BY (CAST(t1.c1 AS REAL) IN (CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN t1.c1 WHEN vt0.c0 THEN 0.7918081324213821 WHEN vt0.c1 THEN t1.c0 END, ((vt0.lid) NOT NULL))), ((highlight(t1.c0, vt0.c2, t1.c0, vt0.c1))>>((+ (t1.c1)))) DESC  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 COLLATE RTRIM)AND(vt0.c1 COLLATE NOCASE)))AND(NULL)));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1 COLLATE RTRIM)AND(vt0.c1 COLLATE NOCASE)))AND(NULL)))AND(NULL))) ORDER BY (((((vt0.lid)AND(vt0.lid)))OR(vt0.lid)) IN ()), ((((vt0.c1)+(vt0.lid)))>=(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 COLLATE RTRIM)AND(vt0.c1 COLLATE NOCASE)))AND(NULL)));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1 COLLATE RTRIM)AND(vt0.c1 COLLATE NOCASE)))AND(NULL)))AND(NULL))) ORDER BY (((((vt0.lid)AND(vt0.lid)))OR(vt0.lid)) IN ()), ((((vt0.c1)+(vt0.lid)))>=(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST LIMIT 0X0;
SELECT MAX(vt0.c2) FROM vt0 WHERE ((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))-(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.lid)))));
SELECT MAX(vt0.c2) FROM vt0 WHERE ((((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))-(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.lid)))))AND(CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.lid) ISNULL) THEN NULLIF(vt0.c1, vt0.lid) END))) ORDER BY '-2140833096' DESC INTERSECT SELECT ALL MAX(vt0.c2) FROM vt0 WHERE (vt0.c2) ORDER BY '-2140833096' DESC;
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY CASE ((((t1.c1)OR(t1.c0)))AND(t1.c0))  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (x'')) THEN ((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) WHEN 0.5935131821842233 COLLATE NOCASE THEN ((t1.c0)GLOB(t1.c1)) WHEN ((t1.c1)+(t1.c1)) THEN json_quote(t1.c0) ELSE ((t1.c1)%('g')) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c1)>=(t1.c0)))*(((t1.c0)<>(t1.c1)))) DESC, CAST(NULL AS INTEGER) ASC;
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0))) ISNULL));
SELECT COUNT(*) FROM t1 WHERE (((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0))) ISNULL))AND(((GLOB(t1.c1, t1.c0)) NOT BETWEEN (((t1.c0)<(t1.c1))) AND (CASE WHEN t1.c1 THEN t1.c0 END))))) LIMIT 0X2;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST((~ (t1.c0)) AS TEXT) WHERE (vt0.c2);
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON CAST((~ (t1.c0)) AS TEXT) WHERE (vt0.c2) ORDER BY ((((((((t1.c1)OR(CHANGES())))AND(CAST(t1.c1 AS REAL))))OR(CASE WHEN t1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(((((((t1.c1)AND(t1.c0)))AND(t1.c1)))AND(t1.c0)))) LIMIT 0x2 INTERSECT SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST((~ (t1.c0)) AS TEXT) WHERE (((((((vt0.c0)>=(vt0.c2)))AND(json_patch(vt0.c0, vt0.c1))))OR((t1.c0 IN (vt0.lid))))) ORDER BY ((((((((t1.c1)OR(CHANGES())))AND(CAST(t1.c1 AS REAL))))OR(CASE WHEN t1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(((((((t1.c1)AND(t1.c0)))AND(t1.c1)))AND(t1.c0)))) LIMIT 2;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST((~ (t1.c0)) AS TEXT) WHERE (vt0.c2);
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON CAST((~ (t1.c0)) AS TEXT) WHERE (vt0.c2) ORDER BY ((((((((t1.c1)OR(CHANGES())))AND(CAST(t1.c1 AS REAL))))OR(CASE WHEN t1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(((((((t1.c1)AND(t1.c0)))AND(t1.c1)))AND(t1.c0)))) LIMIT 0x2 INTERSECT SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST((~ (t1.c0)) AS TEXT) WHERE (((((((vt0.c0)>=(vt0.c2)))AND(json_patch(vt0.c0, vt0.c1))))OR((t1.c0 IN (vt0.lid))))) ORDER BY ((((((((t1.c1)OR(CHANGES())))AND(CAST(t1.c1 AS REAL))))OR(CASE WHEN t1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(((((((t1.c1)AND(t1.c0)))AND(t1.c1)))AND(t1.c0)))) LIMIT 2;
SELECT ALL MAX(vt0.c2) FROM t1, vt0 WHERE (((((((vt0.lid, t1.c0))<>((vt0.c0, vt0.c0)))))>=(((((t1.c1, ''))<((t1.c1, vt0.c1))))))) ORDER BY vt0.lid, 618205674  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c2) FROM t1, vt0 WHERE (((((((((vt0.lid, t1.c0))<((vt0.c0, vt0.c0)))))>=(((((t1.c1, ''))<((t1.c1, vt0.c1)))))))AND(CASE CAST(t1.c0 AS TEXT)  WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN t1.c0 THEN vt0.lid END END))) ORDER BY vt0.lid, 618205674  NULLS FIRST LIMIT 0X3 INTERSECT SELECT DISTINCT MAX(vt0.c2) FROM t1, vt0 WHERE ((((vt0.c1) BETWEEN (vt0.lid) AND (t1.c0)) IN ((vt0.c2 IN ()), CASE WHEN t1.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.lid THEN t1.c1 END))) ORDER BY vt0.lid, 618205674  NULLS FIRST LIMIT 0x3;
SELECT ALL * FROM t1 WHERE (((((t1.c1)||(t1.c1)))<(INSTR(t1.c0, NULL)))) ORDER BY (((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((((((t1.c0)OR(t1.c0)))OR(0.8336181886842777)))AND(t1.c0)), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), ((t1.c0) IS FALSE), ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1))))=((CAST(NULL AS REAL), ((t1.c1)GLOB(t1.c1)), ((t1.c1) NOT BETWEEN (t1.c0) AND (NULL)), (- (t1.c0)), 0.09518166805436679))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((t1.c1)||(t1.c1)))<(INSTR(t1.c0, NULL))))AND(((((((SQLITE_COMPILEOPTION_USED(t1.c0))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)))OR(CHAR(t1.c1))))AND((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))))) ORDER BY (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ()), CAST((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) AS TEXT)  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((((t1.c1)||(t1.c1)))<(INSTR(t1.c0, NULL)))) ORDER BY (((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((((((t1.c0)OR(t1.c0)))OR(0.8336181886842777)))AND(t1.c0)), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), ((t1.c0) IS FALSE), ((((((t1.c0)AND(t1.c1)))OR(t1.c0)))AND(t1.c1))))=((CAST(NULL AS REAL), ((t1.c1)GLOB(t1.c1)), ((t1.c1) NOT BETWEEN (t1.c0) AND (NULL)), (- (t1.c0)), 0.09518166805436679))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((t1.c1)||(t1.c1)))<(INSTR(t1.c0, NULL))))AND(((((((SQLITE_COMPILEOPTION_USED(t1.c0))AND(CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)))OR(CHAR(t1.c1))))AND((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))))) ORDER BY (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ()), CAST((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) AS TEXT)  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt0, t1 WHERE (vt0.c2) ORDER BY 0.00666488337945248 ASC  NULLS FIRST, CASE WHEN (t1.c1 IN (t1.c1)) THEN ((((vt0.c2)AND(vt0.c2)))OR(t1.c1)) WHEN (((t1.c1, vt0.lid)) BETWEEN ((t1.c0, vt0.c2)) AND ((vt0.c1, '槕'))) THEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN vt0.c1 ELSE t1.c1 END END ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 NOT INDEXED WHERE (vt0.c2) ORDER BY 0.00666488337945248 ASC  NULLS FIRST, CASE WHEN (t1.c1 IN (t1.c1)) THEN ((((vt0.c2)AND(vt0.c2)))OR(t1.c1)) WHEN (((t1.c1, vt0.lid)) BETWEEN ((t1.c0, vt0.c2)) AND ((vt0.c1, '槕'))) THEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN vt0.c1 ELSE t1.c1 END END ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((vt0.lid)AND(t1.c0)) COLLATE RTRIM) ORDER BY 0.00666488337945248 ASC  NULLS FIRST, CASE WHEN (t1.c1 IN (t1.c1)) THEN ((((vt0.c2)AND(vt0.c2)))OR(t1.c1)) WHEN (((t1.c1, vt0.lid)) BETWEEN ((t1.c0, vt0.c2)) AND ((vt0.c1, '槕'))) THEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN vt0.c1 ELSE t1.c1 END END ASC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0, t1 WHERE (vt0.c2) ORDER BY 0.00666488337945248 ASC  NULLS FIRST, CASE WHEN (t1.c1 IN (t1.c1)) THEN ((((vt0.c2)AND(vt0.c2)))OR(t1.c1)) WHEN (((t1.c1, vt0.lid)) BETWEEN ((t1.c0, vt0.c2)) AND ((vt0.c1, '槕'))) THEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN vt0.c1 ELSE t1.c1 END END ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 NOT INDEXED WHERE (vt0.c2) ORDER BY 0.00666488337945248 ASC  NULLS FIRST, CASE WHEN (t1.c1 IN (t1.c1)) THEN ((((vt0.c2)AND(vt0.c2)))OR(t1.c1)) WHEN (((t1.c1, vt0.lid)) BETWEEN ((t1.c0, vt0.c2)) AND ((vt0.c1, '槕'))) THEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN vt0.c1 ELSE t1.c1 END END ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((vt0.lid)AND(t1.c0)) COLLATE RTRIM) ORDER BY 0.00666488337945248 ASC  NULLS FIRST, CASE WHEN (t1.c1 IN (t1.c1)) THEN ((((vt0.c2)AND(vt0.c2)))OR(t1.c1)) WHEN (((t1.c1, vt0.lid)) BETWEEN ((t1.c0, vt0.c2)) AND ((vt0.c1, '槕'))) THEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN vt0.c1 ELSE t1.c1 END END ASC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((NULL) IS FALSE) THEN 'Tr' WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN NULL THEN vt0.c0 WHEN '-1279868254' THEN vt0.lid WHEN vt0.c2 THEN vt0.lid ELSE vt0.c2 END THEN (((vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c1))) WHEN CAST(vt0.c1 AS NUMERIC) THEN vt0.c0 WHEN '.' THEN ((vt0.c0)*(vt0.c0)) ELSE vt0.c2 COLLATE NOCASE END) ORDER BY CAST(vt0.lid AS BLOB) COLLATE BINARY, CAST(json_patch(vt0.lid, x'd5b8') AS BLOB) DESC;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((NULL) IS FALSE) THEN 'Tr' WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN NULL THEN vt0.c0 WHEN '-1279868254' THEN vt0.lid WHEN vt0.c2 THEN vt0.lid ELSE vt0.c2 END THEN (((vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c1))) WHEN CAST(vt0.c1 AS NUMERIC) THEN vt0.c0 WHEN '.' THEN ((vt0.c0)*(vt0.c0)) ELSE vt0.c2 COLLATE NOCASE END)AND(((((((LOWER(vt0.c0))OR(((vt0.c2) ISNULL))))AND(vt0.c0)))AND(((((vt0.c0)OR(vt0.c2)))AND(vt0.c0))))))) ORDER BY ((((vt0.c0)<=(vt0.lid))) BETWEEN ((NOT (vt0.c2))) AND (vt0.c0 COLLATE NOCASE))  NULLS LAST, (~ (vt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((NULL) IS FALSE) THEN 'Tr' WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN NULL THEN vt0.c0 WHEN '-1279868254' THEN vt0.lid WHEN vt0.c2 THEN vt0.lid ELSE vt0.c2 END THEN (((vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c1))) WHEN CAST(vt0.c1 AS NUMERIC) THEN vt0.c0 WHEN '.' THEN ((vt0.c0)*(vt0.c0)) ELSE vt0.c2 COLLATE NOCASE END) ORDER BY CAST(vt0.lid AS BLOB) COLLATE BINARY, CAST(json_patch(vt0.lid, x'd5b8') AS BLOB) DESC;
SELECT * FROM vt0, t1 WHERE (vt0.lid) ORDER BY ((t1.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c1)IS(t1.c1))) AND (((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))AND(0.9252825679727669)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE (((vt0.lid)AND((((vt0.c1 IN ())) ISNULL)))) ORDER BY CAST(vt0.lid COLLATE BINARY AS TEXT) ASC INTERSECT SELECT ALL * FROM vt0, t1 WHERE (((((((((vt0.c0)+(vt0.c2)))OR(CASE t1.c0  WHEN vt0.c1 THEN vt0.c0 END)))AND((~ (t1.c0)))))AND(ABS(DISTINCT vt0.c0)))) ORDER BY CAST(vt0.lid COLLATE BINARY AS TEXT) ASC;
SELECT * FROM vt0, t1 WHERE (vt0.lid) ORDER BY ((t1.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c1)IS(t1.c1))) AND (((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))AND(0.9252825679727669)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE (((vt0.lid)AND((((vt0.c1 IN ())) ISNULL)))) ORDER BY CAST(vt0.lid COLLATE BINARY AS TEXT) ASC INTERSECT SELECT ALL * FROM vt0, t1 WHERE (((((((((vt0.c0)+(vt0.c2)))OR(CASE t1.c0  WHEN vt0.c1 THEN vt0.c0 END)))AND((~ (t1.c0)))))AND(ABS(DISTINCT vt0.c0)))) ORDER BY CAST(vt0.lid COLLATE BINARY AS TEXT) ASC;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CASE ((vt0.c1)<(vt0.c0))  WHEN vt0.lid COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((t1.c0) NOTNULL) ELSE ((((vt0.lid)AND(vt0.c2)))OR(0.858164832828106)) END WHERE ((((vt0.lid, vt0.c0, vt0.c0, vt0.lid, vt0.c1, vt0.c0)) NOT BETWEEN (((t1.c1 IN ()), ((t1.c0) NOTNULL), ((t1.c0) BETWEEN (vt0.lid) AND (t1.c1)), vt0.c2 COLLATE BINARY, '9223372036854775807', (((vt0.c2)) NOT BETWEEN ((x'')) AND ((vt0.c0))))) AND ((ROUND(t1.c1, '0.8982271372328591'), ('-177641769' IN (vt0.lid)), vt0.c2 COLLATE RTRIM, (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), CAST(vt0.c0 AS TEXT), ((t1.c1) ISNULL))))) ORDER BY (t1.c1 IN (vt0.c1, vt0.c2)) COLLATE RTRIM DESC;
SELECT * FROM t1 INNER JOIN vt0 ON CASE ((vt0.c1)<(vt0.c0))  WHEN vt0.lid COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((t1.c0) NOTNULL) ELSE ((((vt0.lid)AND(vt0.c2)))OR(0.858164832828106)) END WHERE ((((vt0.lid, vt0.c0, vt0.c0, vt0.lid, vt0.c1, vt0.c0)) NOT BETWEEN (((t1.c1 IN ()), ((t1.c0) NOTNULL), ((t1.c0) BETWEEN (vt0.lid) AND (t1.c1)), vt0.c2 COLLATE BINARY, '9223372036854775807', (((vt0.c2)) NOT BETWEEN ((x'')) AND ((vt0.c0))))) AND ((ROUND(t1.c1, '0.8982271372328591'), ('-177641769' IN (vt0.lid)), vt0.c2 COLLATE RTRIM, (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), CAST(vt0.c0 AS TEXT), ((t1.c1) ISNULL))))) ORDER BY (t1.c1 IN (vt0.c1, vt0.c2)) COLLATE RTRIM DESC INTERSECT SELECT * FROM t1 INNER JOIN vt0 ON CASE ((vt0.c1)<(vt0.c0))  WHEN vt0.lid COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((t1.c0) NOTNULL) ELSE ((((vt0.lid)AND(vt0.c2)))OR(0.858164832828106)) END WHERE (0.359416498904237) ORDER BY (t1.c1 IN (vt0.c1, vt0.c2)) COLLATE RTRIM DESC;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CASE ((vt0.c1)<(vt0.c0))  WHEN vt0.lid COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((t1.c0) NOTNULL) ELSE ((((vt0.lid)AND(vt0.c2)))OR(0.858164832828106)) END WHERE ((((vt0.lid, vt0.c0, vt0.c0, vt0.lid, vt0.c1, vt0.c0)) NOT BETWEEN (((t1.c1 IN ()), ((t1.c0) NOTNULL), ((t1.c0) BETWEEN (vt0.lid) AND (t1.c1)), vt0.c2 COLLATE BINARY, '9223372036854775807', (((vt0.c2)) NOT BETWEEN ((x'')) AND ((vt0.c0))))) AND ((ROUND(t1.c1, '0.8982271372328591'), ('-177641769' IN (vt0.lid)), vt0.c2 COLLATE RTRIM, (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), CAST(vt0.c0 AS TEXT), ((t1.c1) ISNULL))))) ORDER BY (t1.c1 IN (vt0.c1, vt0.c2)) COLLATE RTRIM DESC;
SELECT * FROM t1 INNER JOIN vt0 ON CASE ((vt0.c1)<(vt0.c0))  WHEN vt0.lid COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((t1.c0) NOTNULL) ELSE ((((vt0.lid)AND(vt0.c2)))OR(0.858164832828106)) END WHERE ((((vt0.lid, vt0.c0, vt0.c0, vt0.lid, vt0.c1, vt0.c0)) NOT BETWEEN (((t1.c1 IN ()), ((t1.c0) NOTNULL), ((t1.c0) BETWEEN (vt0.lid) AND (t1.c1)), vt0.c2 COLLATE BINARY, '9223372036854775807', (((vt0.c2)) NOT BETWEEN ((x'')) AND ((vt0.c0))))) AND ((ROUND(t1.c1, '0.8982271372328591'), ('-177641769' IN (vt0.lid)), vt0.c2 COLLATE RTRIM, (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), CAST(vt0.c0 AS TEXT), ((t1.c1) ISNULL))))) ORDER BY (t1.c1 IN (vt0.c1, vt0.c2)) COLLATE RTRIM DESC INTERSECT SELECT * FROM t1 INNER JOIN vt0 ON CASE ((vt0.c1)<(vt0.c0))  WHEN vt0.lid COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((t1.c0) NOTNULL) ELSE ((((vt0.lid)AND(vt0.c2)))OR(0.858164832828106)) END WHERE (0.359416498904237) ORDER BY (t1.c1 IN (vt0.c1, vt0.c2)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1) IS FALSE) IN (((t1.c0) ISNULL))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((t1.c1) IS FALSE) IN (((t1.c0) ISNULL)))) LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 NOT INDEXED WHERE ((((t1.c0 IN ())) NOT BETWEEN ((+ ('-581710910'))) AND ((((t1.c0))=((t1.c0)))))) LIMIT 0;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((('SyH') IS FALSE)) ORDER BY ((- (vt0.c2)) IN ((('1230277535') IS FALSE)))  NULLS LAST, '0.19825909010793974' COLLATE BINARY  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((('SyH') IS FALSE)) ORDER BY (- (vt0.lid)) ASC LIMIT 0X2;
SELECT COUNT(*) FROM t1 WHERE (((((NULLIF(t1.c0, t1.c0))OR(((t1.c0) NOT BETWEEN ('Bai') AND (x'')))))OR(((t1.c0) NOTNULL)))) ORDER BY ((((('g')>(t1.c0))))>=((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((NULLIF(t1.c0, t1.c0))OR(((t1.c0) NOT BETWEEN ('Bai') AND (x'')))))OR(((t1.c0) NOTNULL))))AND((((t1.c1, t1.c1)) NOT BETWEEN ((NULLIF(t1.c1, t1.c1), ((t1.c1)LIKE('-488086941')))) AND (((NOT (t1.c1)), ((((t1.c1)AND(t1.c1)))AND(t1.c0)))))))) ORDER BY CAST(CASE ''  WHEN t1.c0 THEN t1.c1 END AS INTEGER)  NULLS LAST INTERSECT SELECT COUNT(*) FROM t1 WHERE (((((NULL)GLOB(t1.c1))) BETWEEN (((((t1.c0)OR(t1.c0)))AND(t1.c1))) AND (((0.7747615995086045) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY CAST(CASE ''  WHEN t1.c0 THEN t1.c1 END AS INTEGER)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0 COLLATE RTRIM)AND((t1.c0 IN ()))))OR(t1.c1 COLLATE BINARY)))AND(CAST(t1.c1 AS NUMERIC))))AND(t1.c1))) ORDER BY ((t1.c0) NOT NULL) COLLATE RTRIM ASC, ((((CAST(t1.c0 AS NUMERIC))AND(t1.c1)))AND(((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))) DESC;
SELECT * FROM t1 WHERE (((((((((t1.c0 COLLATE RTRIM)AND((t1.c0 IN ()))))OR(t1.c1 COLLATE BINARY)))AND(CAST(t1.c1 AS NUMERIC))))AND(t1.c1))) ORDER BY ((t1.c0) NOT NULL) COLLATE RTRIM ASC, ((((CAST(t1.c0 AS NUMERIC))AND(t1.c1)))AND(((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))) DESC LIMIT 3;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0 COLLATE RTRIM)AND((t1.c0 IN ()))))OR(t1.c1 COLLATE BINARY)))AND(CAST(t1.c1 AS NUMERIC))))AND(t1.c1))) ORDER BY ((t1.c0) NOT NULL) COLLATE RTRIM ASC, ((((CAST(t1.c0 AS NUMERIC))AND(t1.c1)))AND(((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))) DESC;
SELECT * FROM t1 WHERE (((((((((t1.c0 COLLATE RTRIM)AND((t1.c0 IN ()))))OR(t1.c1 COLLATE BINARY)))AND(CAST(t1.c1 AS NUMERIC))))AND(t1.c1))) ORDER BY ((t1.c0) NOT NULL) COLLATE RTRIM ASC, ((((CAST(t1.c0 AS NUMERIC))AND(t1.c1)))AND(((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))) DESC LIMIT 3;
SELECT ALL * FROM t1 WHERE ((- (t1.c0)));
SELECT * FROM t1 WHERE ((- (t1.c0)));
SELECT ALL * FROM t1 WHERE ((- (t1.c0)));
SELECT * FROM t1 WHERE ((- (t1.c0)));
SELECT MAX(t1.c1) FROM t1, vt0 WHERE (((((vt0.lid) BETWEEN (t1.c1) AND (vt0.c1)))<((vt0.c1 IN (vt0.c2, t1.c0))))) ORDER BY (((((t1.c0, t1.c1, vt0.c1)) NOT BETWEEN ((t1.c0, t1.c1, vt0.c0)) AND ((vt0.c2, t1.c1, vt0.lid)))) IS FALSE)  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1, vt0 WHERE (((((((vt0.lid) BETWEEN (t1.c1) AND (vt0.c1)))<((vt0.c1 IN (vt0.c2, t1.c0)))))AND(((((t1.c1)&(x'')))>=((vt0.c0 IN (t1.c0, NULL))))))) ORDER BY (((((t1.c0, t1.c1, vt0.c1)) NOT BETWEEN ((t1.c0, t1.c1, vt0.c0)) AND ((vt0.c2, t1.c1, vt0.lid)))) IS FALSE)  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (0.9552210908706101);
SELECT DISTINCT * FROM t1 WHERE (((0.9552210908706101)AND(t1.c1))) ORDER BY CASE WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN ((t1.c0)LIKE(t1.c1)) ELSE ((t1.c0) ISNULL) END ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))OR(t1.c0)))AND(((t1.c0)<=(t1.c1))))) ORDER BY CASE WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN ((t1.c0)LIKE(t1.c1)) ELSE ((t1.c0) ISNULL) END ASC;
SELECT ALL * FROM t1 WHERE (0.9552210908706101);
SELECT DISTINCT * FROM t1 WHERE (((0.9552210908706101)AND(t1.c1))) ORDER BY CASE WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN ((t1.c0)LIKE(t1.c1)) ELSE ((t1.c0) ISNULL) END ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))OR(t1.c0)))AND(((t1.c0)<=(t1.c1))))) ORDER BY CASE WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN ((t1.c0)LIKE(t1.c1)) ELSE ((t1.c0) ISNULL) END ASC;
SELECT ALL * FROM vt0, t1 WHERE (CAST((((vt0.lid, t1.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.lid, vt0.c0, vt0.c1, t1.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, t1.c1))) AS INTEGER)) ORDER BY 0.46010967551216686, (((CASE vt0.c1  WHEN t1.c1 THEN vt0.c1 WHEN t1.c0 THEN '' WHEN '0.7747615995086045' THEN x'd03cae' WHEN vt0.c1 THEN t1.c0 ELSE vt0.c1 END, ((((vt0.c0)AND(vt0.c0)))OR(t1.c1)), NULL))>((vt0.c1 COLLATE NOCASE, ((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0)), x'')));
SELECT DISTINCT * FROM vt0, t1 WHERE (CAST((((vt0.lid, t1.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.lid, vt0.c0, vt0.c1, t1.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, t1.c1))) AS INTEGER)) ORDER BY 0.46010967551216686, (((CASE vt0.c1  WHEN t1.c1 THEN vt0.c1 WHEN t1.c0 THEN '' WHEN '0.7747615995086045' THEN x'd03cae' WHEN vt0.c1 THEN t1.c0 ELSE vt0.c1 END, ((((vt0.c0)AND(vt0.c0)))OR(t1.c1)), NULL))>((vt0.c1 COLLATE NOCASE, ((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0)), x''))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((((((t1.c0) NOTNULL))AND(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c2)))))OR(((vt0.c0) NOT BETWEEN ('') AND (t1.c0))))) ORDER BY 0.46010967551216686, (((CASE vt0.c1  WHEN t1.c1 THEN vt0.c1 WHEN t1.c0 THEN '' WHEN '0.7747615995086045' THEN x'd03cae' WHEN vt0.c1 THEN t1.c0 ELSE vt0.c1 END, ((((vt0.c0)AND(vt0.c0)))OR(t1.c1)), NULL))>((vt0.c1 COLLATE NOCASE, ((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0)), x''))) LIMIT 0x0;
SELECT ALL * FROM vt0, t1 WHERE (CAST((((vt0.lid, t1.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.lid, vt0.c0, vt0.c1, t1.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, t1.c1))) AS INTEGER)) ORDER BY 0.46010967551216686, (((CASE vt0.c1  WHEN t1.c1 THEN vt0.c1 WHEN t1.c0 THEN '' WHEN '0.7747615995086045' THEN x'd03cae' WHEN vt0.c1 THEN t1.c0 ELSE vt0.c1 END, ((((vt0.c0)AND(vt0.c0)))OR(t1.c1)), NULL))>((vt0.c1 COLLATE NOCASE, ((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0)), x'')));
SELECT DISTINCT * FROM vt0, t1 WHERE (CAST((((vt0.lid, t1.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.lid, vt0.c0, vt0.c1, t1.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, t1.c1))) AS INTEGER)) ORDER BY 0.46010967551216686, (((CASE vt0.c1  WHEN t1.c1 THEN vt0.c1 WHEN t1.c0 THEN '' WHEN '0.7747615995086045' THEN x'd03cae' WHEN vt0.c1 THEN t1.c0 ELSE vt0.c1 END, ((((vt0.c0)AND(vt0.c0)))OR(t1.c1)), NULL))>((vt0.c1 COLLATE NOCASE, ((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0)), x''))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((((((t1.c0) NOTNULL))AND(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c2)))))OR(((vt0.c0) NOT BETWEEN ('') AND (t1.c0))))) ORDER BY 0.46010967551216686, (((CASE vt0.c1  WHEN t1.c1 THEN vt0.c1 WHEN t1.c0 THEN '' WHEN '0.7747615995086045' THEN x'd03cae' WHEN vt0.c1 THEN t1.c0 ELSE vt0.c1 END, ((((vt0.c0)AND(vt0.c0)))OR(t1.c1)), NULL))>((vt0.c1 COLLATE NOCASE, ((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0)), x''))) LIMIT 0x0;
SELECT ALL * FROM vt0, t1 WHERE (vt0.lid) ORDER BY (((vt0.c1, t1.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, highlight(NULL, vt0.lid, t1.c0, vt0.c2))) AND ((vt0.c1, (vt0.lid IN (vt0.c2)))))  NULLS LAST, CASE WHEN ((t1.c1) BETWEEN (vt0.c2) AND (t1.c0)) THEN (t1.c0 IN ()) WHEN ((((vt0.c2)OR(t1.c1)))AND(vt0.c1)) THEN NULL WHEN ((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((t1.c1, vt0.c0)) NOT BETWEEN ((vt0.lid, vt0.c1)) AND ((vt0.c2, t1.c0))) WHEN ((t1.c1)*(NULL)) THEN CASE vt0.lid  WHEN t1.c0 THEN vt0.lid ELSE vt0.c2 END WHEN ((t1.c0)/(vt0.c0)) THEN (((vt0.c0, vt0.lid, x'a9'))<=((vt0.c1, t1.c0, vt0.c0))) ELSE ((vt0.c2)/(vt0.c0)) END  NULLS FIRST, (((((vt0.c1)AND(vt0.lid)), ((t1.c0) BETWEEN (vt0.c2) AND (vt0.c1))))<=((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c2)), CAST(t1.c0 AS NUMERIC))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((vt0.lid)AND(vt0.c0))) ORDER BY CAST(((((t1.c0)AND(vt0.lid)))AND(vt0.c0)) AS TEXT) INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (x'' COLLATE RTRIM) ORDER BY CAST(((((t1.c0)AND(vt0.lid)))AND(vt0.c0)) AS TEXT);
SELECT ALL * FROM vt0, t1 WHERE (vt0.lid) ORDER BY (((vt0.c1, t1.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, highlight(NULL, vt0.lid, t1.c0, vt0.c2))) AND ((vt0.c1, (vt0.lid IN (vt0.c2)))))  NULLS LAST, CASE WHEN ((t1.c1) BETWEEN (vt0.c2) AND (t1.c0)) THEN (t1.c0 IN ()) WHEN ((((vt0.c2)OR(t1.c1)))AND(vt0.c1)) THEN NULL WHEN ((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((t1.c1, vt0.c0)) NOT BETWEEN ((vt0.lid, vt0.c1)) AND ((vt0.c2, t1.c0))) WHEN ((t1.c1)*(NULL)) THEN CASE vt0.lid  WHEN t1.c0 THEN vt0.lid ELSE vt0.c2 END WHEN ((t1.c0)/(vt0.c0)) THEN (((vt0.c0, vt0.lid, x'a9'))<=((vt0.c1, t1.c0, vt0.c0))) ELSE ((vt0.c2)/(vt0.c0)) END  NULLS FIRST, (((((vt0.c1)AND(vt0.lid)), ((t1.c0) BETWEEN (vt0.c2) AND (vt0.c1))))<=((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c2)), CAST(t1.c0 AS NUMERIC))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((vt0.lid)AND(vt0.c0))) ORDER BY CAST(((((t1.c0)AND(vt0.lid)))AND(vt0.c0)) AS TEXT) INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (x'' COLLATE RTRIM) ORDER BY CAST(((((t1.c0)AND(vt0.lid)))AND(vt0.c0)) AS TEXT);
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) AND ((((t1.c1)GLOB(t1.c0)))))) ORDER BY ((t1.c1)=(t1.c0)) COLLATE RTRIM  NULLS FIRST, ((t1.c0 COLLATE RTRIM)>(((t1.c0)OR(t1.c1)))) ASC, ((t1.c1 COLLATE BINARY) NOTNULL);
SELECT MIN(t1.c0) FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) AND ((((t1.c1)GLOB(t1.c0))))))AND('䤣腆	'))) ORDER BY ((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))&(((t1.c0)>(t1.c1)))) ASC  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE (((HEX(DISTINCT vt0.c2)) IS TRUE)) ORDER BY vt0.lid DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE (((HEX(DISTINCT vt0.c2)) IS TRUE)) ORDER BY (((t1.c1)) BETWEEN (((+ (t1.c0)))) AND ((((t1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))), (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)))OR(vt0.c2)))AND(vt0.c0)))AND('')) IN (vt0.c2 COLLATE RTRIM, vt0.lid))  NULLS FIRST, 0.7918434461580723 COLLATE NOCASE ASC  NULLS LAST, ((((vt0.lid)&(t1.c1))) BETWEEN (ABS(vt0.c1)) AND (LENGTH(t1.c0))) DESC  NULLS LAST;
SELECT * FROM t1, vt0 WHERE (((HEX(DISTINCT vt0.c2)) IS TRUE)) ORDER BY vt0.lid DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE (((HEX(DISTINCT vt0.c2)) IS TRUE)) ORDER BY (((t1.c1)) BETWEEN (((+ (t1.c0)))) AND ((((t1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))), (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)))OR(vt0.c2)))AND(vt0.c0)))AND('')) IN (vt0.c2 COLLATE RTRIM, vt0.lid))  NULLS FIRST, 0.7918434461580723 COLLATE NOCASE ASC  NULLS LAST, ((((vt0.lid)&(t1.c1))) BETWEEN (ABS(vt0.c1)) AND (LENGTH(t1.c0))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE (((t1.c0, '-1093370908')) NOT BETWEEN ((vt0.lid, 0.5850404141255526)) AND ((t1.c0, vt0.c1)))  WHEN (((0.13483669845936141))>((vt0.c1))) THEN ((vt0.c0)|(vt0.c0)) ELSE ((0.2747351526316252) NOT BETWEEN (vt0.c0) AND (t1.c1)) END);
SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE (CASE (((t1.c0, '-1093370908')) NOT BETWEEN ((vt0.lid, 0.5850404141255526)) AND ((t1.c0, vt0.c1)))  WHEN (((0.13483669845936141))>((vt0.c1))) THEN ((vt0.c0)|(vt0.c0)) ELSE ((0.2747351526316252) NOT BETWEEN (vt0.c0) AND (t1.c1)) END) ORDER BY ((((((((t1.c1)OR(t1.c0)))AND(vt0.lid)))AND(t1.c1)))+(CAST(vt0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1 WHERE (((CASE WHEN vt0.c2 THEN vt0.lid ELSE t1.c1 END) BETWEEN ((((vt0.c0, vt0.c1)) BETWEEN ((vt0.lid, t1.c0)) AND (('槕', vt0.lid)))) AND (t1.c0))) ORDER BY COALESCE(LIKE(vt0.c0, NULL), vt0.c0, ((((((t1.c0)AND(vt0.c0)))AND(vt0.c2)))OR(t1.c0)), ((vt0.c0)OR(t1.c1))) DESC  NULLS FIRST, (((t1.c1, NULL)) BETWEEN ((t1.c0 COLLATE NOCASE, (t1.c0 IN ()))) AND (((vt0.c0 IN (vt0.c0, t1.c0, vt0.c0)), ((vt0.c2) BETWEEN (0.6437514540477148) AND (vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CASE WHEN vt0.c2 THEN vt0.lid ELSE t1.c1 END) BETWEEN ((((vt0.c0, vt0.c1)) BETWEEN ((vt0.lid, t1.c0)) AND (('槕', vt0.lid)))) AND (t1.c0))) ORDER BY COALESCE(LIKE(vt0.c0, NULL), vt0.c0, ((((((t1.c0)AND(vt0.c0)))AND(vt0.c2)))OR(t1.c0)), ((vt0.c0)OR(t1.c1))) DESC  NULLS FIRST, (((t1.c1, NULL)) BETWEEN ((t1.c0 COLLATE NOCASE, (t1.c0 IN ()))) AND (((vt0.c0 IN (vt0.c0, t1.c0, vt0.c0)), ((vt0.c2) BETWEEN (0.6437514540477148) AND (vt0.c0))))) DESC  NULLS FIRST INTERSECT SELECT COUNT(*) FROM vt0, t1 WHERE ((NOT (t1.c1 COLLATE RTRIM))) ORDER BY COALESCE(LIKE(vt0.c0, NULL), vt0.c0, ((((((t1.c0)AND(vt0.c0)))AND(vt0.c2)))OR(t1.c0)), ((vt0.c0)OR(t1.c1))) DESC  NULLS FIRST, (((t1.c1, NULL)) BETWEEN ((t1.c0 COLLATE NOCASE, (t1.c0 IN ()))) AND (((vt0.c0 IN (vt0.c0, t1.c0, vt0.c0)), ((vt0.c2) BETWEEN (0.6437514540477148) AND (vt0.c0))))) DESC  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE (((((((((vt0.c1)+(vt0.lid)))AND(((((vt0.c1)AND(vt0.c2)))OR(t1.c0)))))OR(vt0.lid)))OR(CAST(vt0.lid AS TEXT))));
SELECT ALL * FROM t1, vt0 WHERE (((((((((vt0.c1)+(vt0.lid)))AND(((((vt0.c1)AND(vt0.c2)))OR(t1.c0)))))OR(vt0.lid)))OR(CAST(vt0.lid AS TEXT))));
SELECT * FROM t1, vt0 WHERE (((((((((vt0.c1)+(vt0.lid)))AND(((((vt0.c1)AND(vt0.c2)))OR(t1.c0)))))OR(vt0.lid)))OR(CAST(vt0.lid AS TEXT))));
SELECT ALL * FROM t1, vt0 WHERE (((((((((vt0.c1)+(vt0.lid)))AND(((((vt0.c1)AND(vt0.c2)))OR(t1.c0)))))OR(vt0.lid)))OR(CAST(vt0.lid AS TEXT))));
SELECT ALL * FROM t1 WHERE (((t1.c1)IS(t1.c1)) COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)IS(t1.c1)) COLLATE RTRIM) ORDER BY ((t1.c1)%('~)PC '))  NULLS LAST, ((((x'dd04')||(t1.c1))) BETWEEN (t1.c0 COLLATE RTRIM) AND (((t1.c1) NOT BETWEEN (t1.c1) AND ('Z,')))) DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((NOT (((t1.c0)<<(t1.c1))))) ORDER BY ((t1.c1)%('~)PC '))  NULLS LAST, ((((x'dd04')||(t1.c1))) BETWEEN (t1.c0 COLLATE RTRIM) AND (((t1.c1) NOT BETWEEN (t1.c1) AND ('Z,')))) DESC LIMIT 0;
SELECT ALL * FROM t1 WHERE (((t1.c1)IS(t1.c1)) COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)IS(t1.c1)) COLLATE RTRIM) ORDER BY ((t1.c1)%('~)PC '))  NULLS LAST, ((((x'dd04')||(t1.c1))) BETWEEN (t1.c0 COLLATE RTRIM) AND (((t1.c1) NOT BETWEEN (t1.c1) AND ('Z,')))) DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((NOT (((t1.c0)<<(t1.c1))))) ORDER BY ((t1.c1)%('~)PC '))  NULLS LAST, ((((x'dd04')||(t1.c1))) BETWEEN (t1.c0 COLLATE RTRIM) AND (((t1.c1) NOT BETWEEN (t1.c1) AND ('Z,')))) DESC LIMIT 0;
SELECT * FROM vt0, t1 WHERE (((CAST(t1.c0 AS NUMERIC))LIKE(((vt0.c0)/(vt0.c0))))) ORDER BY ((((vt0.c2) BETWEEN (vt0.c1) AND (t1.c0))) NOT BETWEEN ((('-1697443217')IS(vt0.c1))) AND ((vt0.c1 IN ())));
SELECT * FROM vt0, t1 WHERE (((CAST(t1.c0 AS NUMERIC))LIKE(((vt0.c0)/(vt0.c0))))) ORDER BY ((((vt0.c2) BETWEEN (vt0.c1) AND (t1.c0))) NOT BETWEEN ((('-1697443217')IS(vt0.c1))) AND ((vt0.c1 IN ()))) LIMIT 1;
SELECT * FROM vt0, t1 WHERE (((CAST(t1.c0 AS NUMERIC))LIKE(((vt0.c0)/(vt0.c0))))) ORDER BY ((((vt0.c2) BETWEEN (vt0.c1) AND (t1.c0))) NOT BETWEEN ((('-1697443217')IS(vt0.c1))) AND ((vt0.c1 IN ())));
SELECT * FROM vt0, t1 WHERE (((CAST(t1.c0 AS NUMERIC))LIKE(((vt0.c0)/(vt0.c0))))) ORDER BY ((((vt0.c2) BETWEEN (vt0.c1) AND (t1.c0))) NOT BETWEEN ((('-1697443217')IS(vt0.c1))) AND ((vt0.c1 IN ()))) LIMIT 1;
SELECT * FROM t1 WHERE ((- (LOWER(t1.c1)))) ORDER BY (((t1.c1 IN (0.059542764009755667))) NOT NULL) ASC;
SELECT DISTINCT * FROM t1 WHERE ((- (LOWER(t1.c1)))) ORDER BY (- (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))) LIMIT 0x3;
SELECT * FROM t1 WHERE ((- (LOWER(t1.c1)))) ORDER BY (((t1.c1 IN (0.059542764009755667))) NOT NULL) ASC;
SELECT DISTINCT * FROM t1 WHERE ((- (LOWER(t1.c1)))) ORDER BY (- (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))) LIMIT 0x3;
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.lid) NOTNULL)) NOT BETWEEN ((t1.c0 IN ())) AND (HEX(vt0.c0)))) ORDER BY CAST(((vt0.c0) BETWEEN ('B') AND (vt0.lid)) AS TEXT) DESC  NULLS FIRST, ((vt0.lid COLLATE NOCASE) ISNULL);
SELECT DISTINCT * FROM vt0, t1 WHERE (((((vt0.lid) NOTNULL)) NOT BETWEEN ((t1.c0 IN ())) AND (HEX(vt0.c0)))) ORDER BY CAST(((vt0.c0) BETWEEN ('B') AND (vt0.lid)) AS TEXT) DESC  NULLS FIRST, ((vt0.lid COLLATE NOCASE) ISNULL) LIMIT 0X0;
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.lid) NOTNULL)) NOT BETWEEN ((t1.c0 IN ())) AND (HEX(vt0.c0)))) ORDER BY CAST(((vt0.c0) BETWEEN ('B') AND (vt0.lid)) AS TEXT) DESC  NULLS FIRST, ((vt0.lid COLLATE NOCASE) ISNULL);
SELECT DISTINCT * FROM vt0, t1 WHERE (((((vt0.lid) NOTNULL)) NOT BETWEEN ((t1.c0 IN ())) AND (HEX(vt0.c0)))) ORDER BY CAST(((vt0.c0) BETWEEN ('B') AND (vt0.lid)) AS TEXT) DESC  NULLS FIRST, ((vt0.lid COLLATE NOCASE) ISNULL) LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (((CASE WHEN t1.c1 THEN vt0.c0 END, ((vt0.c1) IS FALSE), 0.00666488337945248, (NOT (vt0.c0))))=(((- (vt0.lid)), ((vt0.lid)!=(t1.c0)), (- (vt0.c0)), x'ef49'))) WHERE (CASE WHEN ((((NULL)AND(vt0.c2)))AND(x'')) THEN (+ (vt0.c1)) END) ORDER BY CASE vt0.c0  WHEN x'c8' THEN vt0.lid ELSE vt0.c0 END COLLATE BINARY, ((((vt0.c2, vt0.c1))>((vt0.c1, t1.c1))) IN ((+ (vt0.c2)))) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 INNER JOIN vt0 ON (((CASE WHEN t1.c1 THEN vt0.c0 END, ((vt0.c1) IS FALSE), 0.00666488337945248, (NOT (vt0.c0))))==(((- (vt0.lid)), ((vt0.lid)<>(t1.c0)), (- (vt0.c0)), x'ef49'))) WHERE (((CASE WHEN ((((NULL)AND(vt0.c2)))AND(x'')) THEN (+ (vt0.c1)) END)AND(0.8525370509589908))) ORDER BY CASE vt0.c0  WHEN x'c8' THEN vt0.lid ELSE vt0.c0 END COLLATE BINARY, ((((vt0.c2, vt0.c1))>((vt0.c1, t1.c1))) IN ((+ (vt0.c2)))) DESC  NULLS FIRST LIMIT 0X2;
SELECT * FROM t1 WHERE (((((((CAST(t1.c0 AS INTEGER))AND(t1.c1 COLLATE RTRIM)))AND((t1.c1 IN (t1.c1)))))OR((+ (NULL)))));
SELECT DISTINCT * FROM t1 WHERE (((((((((CAST(t1.c0 AS INTEGER))AND(t1.c1 COLLATE RTRIM)))AND((t1.c1 IN (t1.c1)))))OR((+ (NULL)))))AND(CAST(CASE WHEN x'e44fe34e' THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END AS REAL)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((CAST(t1.c1 AS TEXT) IN ()));
SELECT * FROM t1 WHERE (((((((CAST(t1.c0 AS INTEGER))AND(t1.c1 COLLATE RTRIM)))AND((t1.c1 IN (t1.c1)))))OR((+ (NULL)))));
SELECT DISTINCT * FROM t1 WHERE (((((((((CAST(t1.c0 AS INTEGER))AND(t1.c1 COLLATE RTRIM)))AND((t1.c1 IN (t1.c1)))))OR((+ (NULL)))))AND(CAST(CASE WHEN x'e44fe34e' THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END AS REAL)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((CAST(t1.c1 AS TEXT) IN ()));
SELECT ALL * FROM vt0, t1 WHERE ((((((t1.c0) ISNULL), (- (vt0.c1)), (vt0.lid IN (t1.c1)), UNLIKELY(DISTINCT t1.c0), t1.c1))<>(((((t1.c1)) BETWEEN ((t1.c1)) AND ((vt0.c1))), ((vt0.c2)==(vt0.c0)), ((vt0.c1)<(23235364)), ((vt0.c1) NOT NULL), ((vt0.c0)>(vt0.c2))))));
SELECT ALL * FROM vt0, t1 WHERE ((((((((t1.c0) ISNULL), (- (vt0.c1)), (vt0.lid IN (t1.c1)), UNLIKELY(DISTINCT t1.c0), t1.c1))<>(((((t1.c1)) BETWEEN ((t1.c1)) AND ((vt0.c1))), ((vt0.c2)=(vt0.c0)), ((vt0.c1)<(23235364)), ((vt0.c1) NOT NULL), ((vt0.c0)>(vt0.c2))))))AND((~ (((vt0.c0)IS NOT(t1.c1))))))) LIMIT 2;
SELECT ALL * FROM vt0, t1 WHERE ((((((t1.c0) ISNULL), (- (vt0.c1)), (vt0.lid IN (t1.c1)), UNLIKELY(DISTINCT t1.c0), t1.c1))<>(((((t1.c1)) BETWEEN ((t1.c1)) AND ((vt0.c1))), ((vt0.c2)==(vt0.c0)), ((vt0.c1)<(23235364)), ((vt0.c1) NOT NULL), ((vt0.c0)>(vt0.c2))))));
SELECT ALL * FROM vt0, t1 WHERE ((((((((t1.c0) ISNULL), (- (vt0.c1)), (vt0.lid IN (t1.c1)), UNLIKELY(DISTINCT t1.c0), t1.c1))<>(((((t1.c1)) BETWEEN ((t1.c1)) AND ((vt0.c1))), ((vt0.c2)=(vt0.c0)), ((vt0.c1)<(23235364)), ((vt0.c1) NOT NULL), ((vt0.c0)>(vt0.c2))))))AND((~ (((vt0.c0)IS NOT(t1.c1))))))) LIMIT 2;
SELECT MAX(t1.c0) FROM t1, vt0 WHERE ((((t1.c1, vt0.c2)) BETWEEN ((vt0.lid COLLATE NOCASE, (('366274612')+(t1.c1)))) AND ((CASE WHEN t1.c1 THEN vt0.lid WHEN t1.c1 THEN t1.c1 WHEN vt0.c1 THEN t1.c1 END, ((vt0.c1)<<(vt0.lid)))))) ORDER BY (((NOT (vt0.lid)))&(((((vt0.c2)OR(vt0.c1)))OR(vt0.lid)))) ASC  NULLS FIRST, ((((vt0.c1)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))) IN (NULL COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT MAX(t1.c0) FROM t1, vt0 WHERE ((((((t1.c1, vt0.c2)) BETWEEN ((vt0.lid COLLATE NOCASE, (('366274612')+(t1.c1)))) AND ((CASE WHEN t1.c1 THEN vt0.lid WHEN t1.c1 THEN t1.c1 WHEN vt0.c1 THEN t1.c1 END, ((vt0.c1)<<(vt0.lid))))))AND(0.04169258751962279))) ORDER BY (~ (t1.c1))  NULLS FIRST, NULLIF(DISTINCT (- (vt0.c0)), ((t1.c1)&(vt0.lid))) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT MAX(t1.c0) FROM t1, vt0 WHERE (vt0.c2) ORDER BY (~ (t1.c1))  NULLS FIRST, NULLIF(DISTINCT (- (vt0.c0)), ((t1.c1)&(vt0.lid))) DESC  NULLS FIRST LIMIT 0X0;
SELECT MIN(vt0.c1) FROM vt0, t1 WHERE (CAST(((((vt0.c2)AND(vt0.c2)))OR(vt0.c2)) AS REAL)) ORDER BY ((((((((vt0.lid)AND(t1.c0)))AND(vt0.c1)))OR(vt0.c2)))AND(vt0.lid)) COLLATE RTRIM COLLATE NOCASE ASC;
SELECT MIN(vt0.c1) FROM vt0, t1 WHERE (((CAST(((((vt0.c2)AND(vt0.c2)))OR(vt0.c2)) AS REAL))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY))) ORDER BY (((((((vt0.c0, t1.c1, t1.c1, vt0.c0))<(('', '-581710910', vt0.lid, t1.c1))))OR(((vt0.c2)!=(t1.c0)))))OR(x'')) ASC LIMIT 0;
SELECT * FROM t1, vt0 WHERE ((~ (t1.c1)) COLLATE BINARY);
SELECT ALL * FROM t1, vt0 WHERE ((~ (t1.c1)) COLLATE BINARY) ORDER BY (((vt0.lid)OR(vt0.lid)) IN ()) DESC INTERSECT SELECT * FROM t1, vt0 WHERE (UNLIKELY(DISTINCT vt0.lid) COLLATE RTRIM) ORDER BY (((vt0.lid)OR(vt0.lid)) IN ()) DESC;
SELECT * FROM t1, vt0 WHERE ((~ (t1.c1)) COLLATE BINARY);
SELECT ALL * FROM t1, vt0 WHERE ((~ (t1.c1)) COLLATE BINARY) ORDER BY (((vt0.lid)OR(vt0.lid)) IN ()) DESC INTERSECT SELECT * FROM t1, vt0 WHERE (UNLIKELY(DISTINCT vt0.lid) COLLATE RTRIM) ORDER BY (((vt0.lid)OR(vt0.lid)) IN ()) DESC;
SELECT ALL MIN(t1.c1) FROM t1, vt0 WHERE ((((((((+ (vt0.c1)))OR(((t1.c1) IS TRUE))))OR(((t1.c0) BETWEEN (vt0.c0) AND (vt0.lid)))))OR(-1478968477))) ORDER BY LIKELY(((vt0.c0)<<(vt0.c0))) ASC, vt0.c1, CASE ((t1.c0)AND(vt0.c0))  WHEN CAST(vt0.lid AS INTEGER) THEN ((t1.c1)IS NOT(vt0.c1)) WHEN ((((((((vt0.c2)AND(vt0.lid)))OR(t1.c0)))AND(vt0.lid)))AND(vt0.c2)) THEN (- (x'')) WHEN 0.26763432015113664 THEN vt0.c2 WHEN ((vt0.c2)*(vt0.lid)) THEN ((t1.c1)>>(vt0.c1)) ELSE ((((((((vt0.c1)OR(t1.c1)))OR(vt0.c2)))AND(t1.c0)))OR(t1.c1)) END;
SELECT MIN(t1.c1) FROM t1, vt0 WHERE ((((((((+ (vt0.c1)))OR(((t1.c1) IS TRUE))))OR(((t1.c0) BETWEEN (vt0.c0) AND (vt0.lid)))))OR(0Xffffffffa7d8bb63))) ORDER BY vt0.c1 LIMIT 0x0 INTERSECT SELECT MIN(t1.c1) FROM t1, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((CASE WHEN '160186897' THEN '!
UR' END)) AND (((((vt0.c1)) BETWEEN ((t1.c1)) AND ((0.33976593892545637))))))) ORDER BY vt0.c1 LIMIT 0;
SELECT * FROM t1, vt0 WHERE ('9223372036854775807') ORDER BY 0.9317575006159926, CAST((('1W')|(vt0.c2)) AS REAL);
SELECT DISTINCT * FROM t1, vt0 WHERE ((('9223372036854775807')AND(((((x'48fab0') IS FALSE))<=(((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))))))) ORDER BY (- (((vt0.lid) BETWEEN (vt0.c0) AND (x'e5')))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (((((t1.c1) NOTNULL)) BETWEEN (CAST(vt0.lid AS TEXT)) AND (((t1.c0) NOTNULL)))) ORDER BY (- (((vt0.lid) BETWEEN (vt0.c0) AND (x'e5')))) DESC  NULLS LAST LIMIT 0;
SELECT * FROM t1, vt0 WHERE ('9223372036854775807') ORDER BY 0.9317575006159926, CAST((('1W')|(vt0.c2)) AS REAL);
SELECT DISTINCT * FROM t1, vt0 WHERE ((('9223372036854775807')AND(((((x'48fab0') IS FALSE))<=(((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))))))) ORDER BY (- (((vt0.lid) BETWEEN (vt0.c0) AND (x'e5')))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (((((t1.c1) NOTNULL)) BETWEEN (CAST(vt0.lid AS TEXT)) AND (((t1.c0) NOTNULL)))) ORDER BY (- (((vt0.lid) BETWEEN (vt0.c0) AND (x'e5')))) DESC  NULLS LAST LIMIT 0;
SELECT * FROM vt0, t1 WHERE (((((t1.c0)OR(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY (((t1.c0)<>(vt0.c2)) IN ()) ASC  NULLS FIRST, CASE WHEN json_type(vt0.c2) THEN CAST(vt0.c1 AS INTEGER) WHEN t1.c1 THEN vt0.c2 ELSE t1.c1 COLLATE BINARY END DESC  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (((((t1.c0)OR(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY CAST('NaNꩅ' AS TEXT) ASC, ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)))=(0.865247174893893)), (((((vt0.c1)OR(vt0.c1)), (((vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c0, t1.c1)) AND ((t1.c1, vt0.c0)))))<((t1.c1, (0.5758624582494263 IN ())))) ASC;
SELECT * FROM vt0, t1 WHERE (((((t1.c0)OR(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY (((t1.c0)<>(vt0.c2)) IN ()) ASC  NULLS FIRST, CASE WHEN json_type(vt0.c2) THEN CAST(vt0.c1 AS INTEGER) WHEN t1.c1 THEN vt0.c2 ELSE t1.c1 COLLATE BINARY END DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY (((~ (t1.c1)))AND(((t1.c1) IS TRUE)));
SELECT COUNT(*) FROM t1 WHERE (((t1.c1)AND(((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))OR(t1.c0))) NOT BETWEEN (t1.c0) AND (t1.c0 COLLATE NOCASE))))) ORDER BY (((~ (t1.c1)))AND(((t1.c1) IS TRUE))) LIMIT 0X0 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)==(t1.c0))) IS FALSE)) ORDER BY (((~ (t1.c1)))AND(((t1.c1) IS TRUE))) LIMIT 0x0;
SELECT ALL * FROM vt0, t1 WHERE (DATE((((('465179858')OR(NULL)))OR(vt0.lid)), ((t1.c1)/(t1.c1)), (t1.c1 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY UPPER(DISTINCT (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))) DESC  NULLS LAST, CASE CAST(t1.c1 AS TEXT)  WHEN TIME(t1.c1, t1.c1, t1.c1, x'4415', vt0.lid, t1.c0) THEN ((vt0.c1)<(t1.c0)) WHEN ((t1.c0)/(vt0.c1)) THEN ((((NULL)AND(t1.c1)))OR(t1.c1)) WHEN NULL THEN ((((((t1.c0)AND(t1.c1)))OR(vt0.c0)))OR(vt0.c0)) END;
SELECT DISTINCT * FROM vt0, t1 WHERE (((DATE((((('465179858')OR(NULL)))OR(vt0.lid)), ((t1.c1)/(t1.c1)), (t1.c1 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END))AND(((((((vt0.c0) NOTNULL))AND(((((vt0.lid)OR(vt0.c2)))AND(t1.c0)))))AND((t1.c0 IN ())))))) ORDER BY UPPER(DISTINCT (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))) DESC  NULLS LAST, CASE CAST(t1.c1 AS TEXT)  WHEN TIME(t1.c1, t1.c1, t1.c1, x'4415', vt0.lid, t1.c0) THEN ((vt0.c1)<(t1.c0)) WHEN ((t1.c0)/(vt0.c1)) THEN ((((NULL)AND(t1.c1)))OR(t1.c1)) WHEN NULL THEN ((((((t1.c0)AND(t1.c1)))OR(vt0.c0)))OR(vt0.c0)) END;
SELECT ALL * FROM vt0, t1 WHERE (DATE((((('465179858')OR(NULL)))OR(vt0.lid)), ((t1.c1)/(t1.c1)), (t1.c1 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY UPPER(DISTINCT (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))) DESC  NULLS LAST, CASE CAST(t1.c1 AS TEXT)  WHEN TIME(t1.c1, t1.c1, t1.c1, x'4415', vt0.lid, t1.c0) THEN ((vt0.c1)<(t1.c0)) WHEN ((t1.c0)/(vt0.c1)) THEN ((((NULL)AND(t1.c1)))OR(t1.c1)) WHEN NULL THEN ((((((t1.c0)AND(t1.c1)))OR(vt0.c0)))OR(vt0.c0)) END;
SELECT DISTINCT * FROM vt0, t1 WHERE (((DATE((((('465179858')OR(NULL)))OR(vt0.lid)), ((t1.c1)/(t1.c1)), (t1.c1 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END))AND(((((((vt0.c0) NOTNULL))AND(((((vt0.lid)OR(vt0.c2)))AND(t1.c0)))))AND((t1.c0 IN ())))))) ORDER BY UPPER(DISTINCT (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))) DESC  NULLS LAST, CASE CAST(t1.c1 AS TEXT)  WHEN TIME(t1.c1, t1.c1, t1.c1, x'4415', vt0.lid, t1.c0) THEN ((vt0.c1)<(t1.c0)) WHEN ((t1.c0)/(vt0.c1)) THEN ((((NULL)AND(t1.c1)))OR(t1.c1)) WHEN NULL THEN ((((((t1.c0)AND(t1.c1)))OR(vt0.c0)))OR(vt0.c0)) END;
SELECT * FROM vt0, t1 WHERE (CAST(vt0.lid AS REAL));
SELECT ALL * FROM vt0, t1 WHERE (((CAST(vt0.lid AS REAL))AND((((((vt0.c2, t1.c0, vt0.c1)) NOT BETWEEN ((t1.c0, t1.c0, '-292497679')) AND ((vt0.c0, vt0.lid, vt0.lid)))) IS TRUE)))) ORDER BY x'84', (NOT (vt0.lid)) COLLATE NOCASE LIMIT 2;
SELECT * FROM vt0, t1 WHERE (CAST(vt0.lid AS REAL));
SELECT ALL * FROM vt0, t1 WHERE (((CAST(vt0.lid AS REAL))AND((((((vt0.c2, t1.c0, vt0.c1)) NOT BETWEEN ((t1.c0, t1.c0, '-292497679')) AND ((vt0.c0, vt0.lid, vt0.lid)))) IS TRUE)))) ORDER BY x'84', (NOT (vt0.lid)) COLLATE NOCASE LIMIT 2;
SELECT MAX(t1.c0) FROM t1 WHERE (CASE NULL  WHEN 0.9247518389504176 THEN json_valid(t1.c1) WHEN (t1.c1 IN (t1.c0)) THEN (((((('ꯌ4')OR(t1.c1)))AND(t1.c0)))AND(t1.c0)) WHEN 0X47dabcc COLLATE BINARY THEN MAX(t1.c1, t1.c0, t1.c0) WHEN CAST(t1.c1 AS TEXT) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END WHEN ((t1.c1)>(t1.c0)) THEN ((t1.c0) NOTNULL) END);
SELECT MAX(t1.c0) FROM t1 WHERE (CASE NULL  WHEN 0.9247518389504176 THEN json_valid(t1.c1) WHEN (t1.c1 IN (t1.c0)) THEN (((((('ꯌ4')OR(t1.c1)))AND(t1.c0)))AND(t1.c0)) WHEN 75344844 COLLATE BINARY THEN MAX(t1.c1, t1.c0, t1.c0) WHEN CAST(t1.c1 AS TEXT) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END WHEN ((t1.c1)>(t1.c0)) THEN ((t1.c0) NOTNULL) END);
SELECT ALL * FROM t1 WHERE (1369148192) ORDER BY ((t1.c1 IN (t1.c1)) IN (0.9266441221631293))  NULLS FIRST;
SELECT * FROM t1 WHERE (((0X519b8b20)AND(CASE x'5ab0'  WHEN ((t1.c1) IS TRUE) THEN t1.c1 COLLATE RTRIM ELSE 0.14981452774563742 END))) ORDER BY SQLITE_VERSION() LIMIT 0;
SELECT ALL * FROM t1 WHERE (1369148192) ORDER BY ((t1.c1 IN (t1.c1)) IN (0.9266441221631293))  NULLS FIRST;
SELECT * FROM t1 WHERE (((0X519b8b20)AND(CASE x'5ab0'  WHEN ((t1.c1) IS TRUE) THEN t1.c1 COLLATE RTRIM ELSE 0.14981452774563742 END))) ORDER BY SQLITE_VERSION() LIMIT 0;
SELECT ALL * FROM vt0, t1 WHERE ((~ ((t1.c0 IN ()))));
SELECT * FROM vt0, t1 WHERE ((((~ ((t1.c0 IN ()))))AND((+ (vt0.c2 COLLATE BINARY))))) INTERSECT SELECT * FROM vt0, t1 WHERE (((vt0.c2)|(vt0.c1)) COLLATE BINARY);
SELECT ALL * FROM vt0, t1 WHERE ((~ ((t1.c0 IN ()))));
SELECT * FROM vt0, t1 WHERE ((((~ ((t1.c0 IN ()))))AND((+ (vt0.c2 COLLATE BINARY))))) INTERSECT SELECT * FROM vt0, t1 WHERE (((vt0.c2)|(vt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON NULLIF((((vt0.c1, t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c0, '-1060963155', t1.c1, t1.c0)) AND ((vt0.c2, t1.c0, t1.c1, vt0.c2))), (vt0.lid IN ())) WHERE (t1.c0) ORDER BY ((vt0.c1 COLLATE RTRIM) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON NULLIF((((vt0.c1, t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c0, '-1060963155', t1.c1, t1.c0)) AND ((vt0.c2, t1.c0, t1.c1, vt0.c2))), (vt0.lid IN ())) WHERE (t1.c0) ORDER BY ((vt0.c1 COLLATE RTRIM) ISNULL) DESC  NULLS LAST LIMIT 0X3;
SELECT * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN '0.7227954337612192' THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN '7-e2[~U' ELSE vt0.c1 END  WHEN (+ (vt0.c0)) THEN 0.9190277583187245 END) ORDER BY (((vt0.lid)) BETWEEN ((((vt0.lid) NOT NULL))) AND ((NULL)))  NULLS FIRST, ((((x'bd')AND((vt0.c2 IN (vt0.lid)))))AND(((((((((vt0.c1)AND(vt0.lid)))AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN '0.7227954337612192' THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN '7-e2[~U' ELSE vt0.c1 END  WHEN (+ (vt0.c0)) THEN 0.9190277583187245 END) ORDER BY LIKE(vt0.c2, vt0.lid) COLLATE BINARY COLLATE NOCASE ASC, (((vt0.c1) NOT NULL) IN (CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.lid END)) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (vt0.c2) ORDER BY LIKE(vt0.c2, vt0.lid) COLLATE BINARY COLLATE NOCASE ASC, (((vt0.c1) NOT NULL) IN (CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.lid END)) LIMIT 0X0;
SELECT * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN '0.7227954337612192' THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN '7-e2[~U' ELSE vt0.c1 END  WHEN (+ (vt0.c0)) THEN 0.9190277583187245 END) ORDER BY (((vt0.lid)) BETWEEN ((((vt0.lid) NOT NULL))) AND ((NULL)))  NULLS FIRST, ((((x'bd')AND((vt0.c2 IN (vt0.lid)))))AND(((((((((vt0.c1)AND(vt0.lid)))AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN '0.7227954337612192' THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN '7-e2[~U' ELSE vt0.c1 END  WHEN (+ (vt0.c0)) THEN 0.9190277583187245 END) ORDER BY LIKE(vt0.c2, vt0.lid) COLLATE BINARY COLLATE NOCASE ASC, (((vt0.c1) NOT NULL) IN (CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.lid END)) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (vt0.c2) ORDER BY LIKE(vt0.c2, vt0.lid) COLLATE BINARY COLLATE NOCASE ASC, (((vt0.c1) NOT NULL) IN (CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.lid END)) LIMIT 0X0;
SELECT MIN(vt0.c1) FROM t1, vt0 WHERE (((((t1.c0)IS(vt0.c0))) BETWEEN (-664918544) AND ((((vt0.lid, vt0.c2)) NOT BETWEEN ((vt0.lid, vt0.c1)) AND ((t1.c1, vt0.c2)))))) ORDER BY CAST((vt0.lid IN (vt0.c2, t1.c1, vt0.c1)) AS REAL);
SELECT DISTINCT MIN(vt0.c1) FROM t1 NOT INDEXED, vt0 WHERE (((((((t1.c0)IS(vt0.c0))) BETWEEN (0Xffffffffd85e25f0) AND ((((vt0.lid, vt0.c2)) NOT BETWEEN ((vt0.lid, vt0.c1)) AND ((t1.c1, vt0.c2))))))AND(vt0.c2))) ORDER BY ((((t1.c1)GLOB(t1.c0)))*(((((vt0.c0)AND(vt0.c1)))OR(vt0.lid)))) ASC, (((vt0.c1, vt0.c0, vt0.c2, 0.9563626584557815)) BETWEEN ((((((x'36')AND(vt0.c2)))OR(vt0.c1)), (('w') BETWEEN ('/8t޹謠D') AND (t1.c0)), (~ (vt0.c1)), vt0.c2 COLLATE BINARY)) AND (((('E*oV虦G2') NOTNULL), ((vt0.c2) BETWEEN ('1735143876') AND (t1.c1)), CASE vt0.lid  WHEN t1.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 END, ((vt0.lid)LIKE(t1.c1))))) DESC  NULLS LAST LIMIT 4;
SELECT * FROM t1 NOT INDEXED WHERE (((((t1.c0)%(t1.c1)))<=(('465179858' IN ())))) ORDER BY ABS(DISTINCT (~ (t1.c0))) DESC, CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) AS TEXT) ASC, t1.c1 ASC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)%(t1.c1)))<=(('465179858' IN ())))) ORDER BY ABS(DISTINCT (~ (t1.c0))) DESC, CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) AS TEXT) ASC, t1.c1 ASC LIMIT 0X1;
SELECT * FROM t1 NOT INDEXED WHERE (((((t1.c0)%(t1.c1)))<=(('465179858' IN ())))) ORDER BY ABS(DISTINCT (~ (t1.c0))) DESC, CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) AS TEXT) ASC, t1.c1 ASC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)%(t1.c1)))<=(('465179858' IN ())))) ORDER BY ABS(DISTINCT (~ (t1.c0))) DESC, CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) AS TEXT) ASC, t1.c1 ASC LIMIT 0X1;
SELECT ALL MAX(vt0.c2) FROM t1, vt0 WHERE ((- (vt0.c0 COLLATE RTRIM)));
SELECT DISTINCT MAX(vt0.c2) FROM t1, vt0 NOT INDEXED WHERE ((((- (vt0.c0 COLLATE RTRIM)))AND('j'))) ORDER BY '-1497545950' ASC, ((CASE WHEN vt0.c2 THEN t1.c0 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid ELSE t1.c1 END)GLOB(((vt0.c1) NOT BETWEEN (-2106283451) AND (vt0.c0)))) LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((x'' IN (t1.c1)))|(CAST(t1.c1 AS NUMERIC)))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))<(((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST, CASE (t1.c1 IN (t1.c1))  WHEN '200210160' THEN t1.c1 WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN STRFTIME(t1.c1, t1.c1, t1.c1) WHEN t1.c1 THEN ((NULL)<(t1.c0)) ELSE CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END END  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((x'' IN (t1.c1)))|(CAST(t1.c1 AS NUMERIC))))AND((((t1.c0 IN (t1.c1, t1.c1))) NOT BETWEEN (((t1.c1)IS NOT(t1.c1))) AND ((t1.c1 IN (t1.c0, t1.c1))))))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))<(((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST, CASE (t1.c1 IN (t1.c1))  WHEN '200210160' THEN t1.c1 WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN STRFTIME(t1.c1, t1.c1, t1.c1) WHEN t1.c1 THEN ((NULL)<(t1.c0)) ELSE CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END END  NULLS LAST LIMIT 2;
SELECT ALL * FROM t1 WHERE ((((x'' IN (t1.c1)))|(CAST(t1.c1 AS NUMERIC)))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))<(((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST, CASE (t1.c1 IN (t1.c1))  WHEN '200210160' THEN t1.c1 WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN STRFTIME(t1.c1, t1.c1, t1.c1) WHEN t1.c1 THEN ((NULL)<(t1.c0)) ELSE CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END END  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((x'' IN (t1.c1)))|(CAST(t1.c1 AS NUMERIC))))AND((((t1.c0 IN (t1.c1, t1.c1))) NOT BETWEEN (((t1.c1)IS NOT(t1.c1))) AND ((t1.c1 IN (t1.c0, t1.c1))))))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))<(((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST, CASE (t1.c1 IN (t1.c1))  WHEN '200210160' THEN t1.c1 WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) THEN STRFTIME(t1.c1, t1.c1, t1.c1) WHEN t1.c1 THEN ((NULL)<(t1.c0)) ELSE CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END END  NULLS LAST LIMIT 2;
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) AND ((+ (vt0.lid)))));
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (((((((vt0.c0) NOTNULL)) NOT BETWEEN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) AND ((+ (vt0.lid)))))AND(((((vt0.lid) BETWEEN (vt0.lid) AND (t1.c0)))/(((((((((t1.c0)OR(t1.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))))) INTERSECT SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE ((((((((vt0.lid, vt0.c0, t1.c0, vt0.c2, vt0.c0, vt0.lid, vt0.c0))=((vt0.c0, vt0.c2, vt0.c1, vt0.c1, '1922856525', 'Ik?', vt0.lid))))OR((NOT (vt0.c2)))))AND(t1.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) AND ((+ (vt0.lid)))));
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (((((((vt0.c0) NOTNULL)) NOT BETWEEN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) AND ((+ (vt0.lid)))))AND(((((vt0.lid) BETWEEN (vt0.lid) AND (t1.c0)))/(((((((((t1.c0)OR(t1.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))))) INTERSECT SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE ((((((((vt0.lid, vt0.c0, t1.c0, vt0.c2, vt0.c0, vt0.lid, vt0.c0))=((vt0.c0, vt0.c2, vt0.c1, vt0.c1, '1922856525', 'Ik?', vt0.lid))))OR((NOT (vt0.c2)))))AND(t1.c0 COLLATE BINARY)));
SELECT ALL * FROM t1, vt0 WHERE (((CASE WHEN vt0.lid THEN vt0.c2 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END) NOTNULL));
SELECT DISTINCT * FROM t1, vt0 WHERE (((CASE WHEN vt0.lid THEN vt0.c2 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END) NOTNULL)) INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (vt0.c2)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c2) BETWEEN (NULL) AND (vt0.c0)) THEN json_remove(vt0.c0, vt0.c0) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN t1.c1 THEN t1.c1 END END);
SELECT ALL * FROM t1, vt0 WHERE (((CASE WHEN vt0.lid THEN vt0.c2 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END) NOTNULL));
SELECT DISTINCT * FROM t1, vt0 WHERE (((CASE WHEN vt0.lid THEN vt0.c2 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END) NOTNULL)) INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (vt0.c2)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c2) BETWEEN (NULL) AND (vt0.c0)) THEN json_remove(vt0.c0, vt0.c0) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN t1.c1 THEN t1.c1 END END);
SELECT ALL MAX(vt0.c1) FROM t1, vt0 WHERE (CASE (((NULL, vt0.c2)) BETWEEN ((vt0.lid, vt0.c1)) AND ((vt0.lid, x'')))  WHEN 0.2605357967430739 THEN ((vt0.c1)>>(t1.c1)) WHEN t1.c0 COLLATE RTRIM THEN NULL ELSE CAST(t1.c0 AS NUMERIC) END);
SELECT ALL MAX(vt0.c1) FROM t1, vt0 WHERE (CASE (((NULL, vt0.c2)) BETWEEN ((vt0.lid, vt0.c1)) AND ((vt0.lid, x'')))  WHEN 0.2605357967430739 THEN ((vt0.c1)>>(t1.c1)) WHEN t1.c0 COLLATE RTRIM THEN NULL ELSE CAST(t1.c0 AS NUMERIC) END) INTERSECT SELECT MAX(vt0.c1) FROM t1, vt0 WHERE ((((vt0.c2 IN (NULL))) BETWEEN (((vt0.c1) IS FALSE)) AND (((vt0.c0)*(t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((('', t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1))) IN ((('465179858')<=(t1.c1))))) ORDER BY ((((x'')LIKE(t1.c0))) IS TRUE) DESC  NULLS LAST, x'46e83e' DESC  NULLS LAST, CASE ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))  WHEN ((t1.c0) IS TRUE) THEN ((('1W', t1.c1, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c0, t1.c0)) AND ((t1.c1, NULL, t1.c1, t1.c0, t1.c0))) WHEN (('1374047325')||(t1.c0)) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) ELSE (- (t1.c1)) END ASC, ((CAST(t1.c1 AS INTEGER))IS NOT(json_type(t1.c1))) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((('', t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1))) IN ((('465179858')==(t1.c1))))) ORDER BY ((t1.c1 COLLATE BINARY)>>('-207376437'))  NULLS LAST, (~ (t1.c0))  NULLS LAST, LENGTH(t1.c1) DESC  NULLS FIRST INTERSECT SELECT COUNT(*) FROM t1 WHERE ((~ (CAST(0.683058147188111 AS REAL)))) ORDER BY ((t1.c1 COLLATE BINARY)>>('-207376437'))  NULLS LAST, (~ (t1.c0))  NULLS LAST, LENGTH(t1.c1) DESC  NULLS FIRST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (t1.c0);
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((t1.c0)AND(rtreenode(((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), (NOT (NULL)))))) ORDER BY ((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))LIKE(CAST(t1.c1 AS TEXT))), CAST(((t1.c1)|(t1.c1)) AS TEXT) DESC LIMIT 0x2;
SELECT * FROM vt0, t1 WHERE ('Ail');
SELECT DISTINCT * FROM vt0, t1 WHERE ((('Ail')AND((~ (vt0.c0)) COLLATE RTRIM))) ORDER BY ABS(DISTINCT LTRIM(vt0.c1, x'77')), (+ (TRIM(DISTINCT t1.c0, vt0.c0))) DESC INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE ((((vt0.c2) NOT BETWEEN (vt0.lid) AND (t1.c1)) IN (((vt0.lid)<<(vt0.lid)), ((t1.c1) NOT BETWEEN (vt0.lid) AND (vt0.lid))))) ORDER BY ABS(DISTINCT LTRIM(vt0.c1, x'77')), (+ (TRIM(DISTINCT t1.c0, vt0.c0))) DESC;
SELECT * FROM vt0, t1 WHERE ('Ail');
SELECT DISTINCT * FROM vt0, t1 WHERE ((('Ail')AND((~ (vt0.c0)) COLLATE RTRIM))) ORDER BY ABS(DISTINCT LTRIM(vt0.c1, x'77')), (+ (TRIM(DISTINCT t1.c0, vt0.c0))) DESC INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE ((((vt0.c2) NOT BETWEEN (vt0.lid) AND (t1.c1)) IN (((vt0.lid)<<(vt0.lid)), ((t1.c1) NOT BETWEEN (vt0.lid) AND (vt0.lid))))) ORDER BY ABS(DISTINCT LTRIM(vt0.c1, x'77')), (+ (TRIM(DISTINCT t1.c0, vt0.c0))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN -1.57694127E8 THEN vt0.c2 WHEN vt0.c1 THEN x'49' WHEN vt0.lid THEN vt0.c2 ELSE vt0.c2 END IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CASE WHEN -1.57694127E8 THEN vt0.c2 WHEN vt0.c1 THEN x'49' WHEN vt0.lid THEN vt0.c2 ELSE vt0.c2 END IN ()))AND(((CAST(vt0.c1 AS REAL))%(HEX(vt0.c0)))))) LIMIT 0X1;
SELECT ALL MAX(t1.c0) FROM t1, vt0 WHERE ((vt0.lid IN ()) COLLATE RTRIM) ORDER BY CASE CAST(t1.c0 AS TEXT)  WHEN vt0.c2 COLLATE NOCASE THEN (- (t1.c1)) ELSE (~ (vt0.c0)) END DESC  NULLS LAST;
SELECT DISTINCT MAX(t1.c0) FROM t1, vt0 WHERE ((((vt0.lid IN ()) COLLATE RTRIM)AND(0xffffffffa17378c2))) ORDER BY CASE CAST(t1.c0 AS TEXT)  WHEN vt0.c2 COLLATE NOCASE THEN (- (t1.c1)) ELSE (~ (vt0.c0)) END DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1, vt0 WHERE ((((x'', t1.c1)) BETWEEN (((t1.c1 IN (t1.c1)), ((t1.c1)<(t1.c1)))) AND (((NOT (vt0.c2)), ((((t1.c1)OR('-664918544')))OR(vt0.c0)))))) ORDER BY CASE CAST(t1.c0 AS TEXT)  WHEN vt0.c2 COLLATE NOCASE THEN (- (t1.c1)) ELSE (~ (vt0.c0)) END DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM vt0, t1 WHERE (((vt0.c0)=(((((vt0.c1)AND(t1.c1)))OR('62963430'))))) ORDER BY CAST(CASE WHEN '-977946708' THEN vt0.c2 END AS TEXT)  NULLS LAST, ((((- (t1.c1)), -1260961186, ((((vt0.lid)AND(t1.c0)))OR(t1.c1)), (- (NULL)), CASE vt0.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN vt0.c0 END))>=((((vt0.c2) NOT BETWEEN (vt0.c1) AND ('T')), ((((((((t1.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)), ((t1.c0)<<(vt0.c2)), '618205674', 0.12579941724135568)))  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 WHERE (((((vt0.c0)==(((((vt0.c1)AND(t1.c1)))OR('62963430')))))AND(((NULL)IS NOT(CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.lid END))))) ORDER BY CAST(CASE WHEN '-977946708' THEN vt0.c2 END AS TEXT)  NULLS LAST, ((((- (t1.c1)), 0xffffffffb4d7425e, ((((vt0.lid)AND(t1.c0)))OR(t1.c1)), (- (NULL)), CASE vt0.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN vt0.c0 END))>=((((vt0.c2) NOT BETWEEN (vt0.c1) AND ('T')), ((((((((t1.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)), ((t1.c0)<<(vt0.c2)), '618205674', 0.12579941724135568)))  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (((vt0.c0)=(((((vt0.c1)AND(t1.c1)))OR('62963430'))))) ORDER BY CAST(CASE WHEN '-977946708' THEN vt0.c2 END AS TEXT)  NULLS LAST, ((((- (t1.c1)), -1260961186, ((((vt0.lid)AND(t1.c0)))OR(t1.c1)), (- (NULL)), CASE vt0.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN vt0.c0 END))>=((((vt0.c2) NOT BETWEEN (vt0.c1) AND ('T')), ((((((((t1.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)), ((t1.c0)<<(vt0.c2)), '618205674', 0.12579941724135568)))  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 WHERE (((((vt0.c0)==(((((vt0.c1)AND(t1.c1)))OR('62963430')))))AND(((NULL)IS NOT(CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.lid END))))) ORDER BY CAST(CASE WHEN '-977946708' THEN vt0.c2 END AS TEXT)  NULLS LAST, ((((- (t1.c1)), 0xffffffffb4d7425e, ((((vt0.lid)AND(t1.c0)))OR(t1.c1)), (- (NULL)), CASE vt0.c0  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN vt0.c0 END))>=((((vt0.c2) NOT BETWEEN (vt0.c1) AND ('T')), ((((((((t1.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)), ((t1.c0)<<(vt0.c2)), '618205674', 0.12579941724135568)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c1, vt0.lid))=((vt0.c0, vt0.c2))) THEN TRIM(DISTINCT vt0.lid, vt0.lid) ELSE CAST(vt0.c0 AS REAL) END);
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((CASE WHEN (((vt0.c1, vt0.lid))==((vt0.c0, vt0.c2))) THEN TRIM(DISTINCT vt0.lid, vt0.lid) ELSE CAST(vt0.c0 AS REAL) END)AND(0.7150119230715811))) LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((('1266571021') NOT BETWEEN (vt0.c2) AND (vt0.lid))) LIMIT 1;
SELECT MIN(vt0.c2) FROM vt0 WHERE (CASE WHEN (((vt0.c2))<((vt0.c2))) THEN ((vt0.lid)LIKE(vt0.lid)) END);
SELECT DISTINCT MIN(vt0.c2) FROM vt0 WHERE (((CASE WHEN (((vt0.c2))<((vt0.c2))) THEN ((vt0.lid)LIKE(vt0.lid)) END)AND((((- (vt0.c0))) ISNULL)))) ORDER BY CAST(((vt0.c1)<=(vt0.c1)) AS BLOB)  NULLS FIRST, ((((((((vt0.lid)AND(NULL)))AND(vt0.c2)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.lid)) AND ((vt0.c1, vt0.c2, vt0.c1)))) AND (CAST(vt0.c2 AS NUMERIC))) ASC INTERSECT SELECT DISTINCT MIN(vt0.c2) FROM vt0 WHERE (((CAST(vt0.c2 AS TEXT)) NOT BETWEEN (vt0.c2) AND (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY CAST(((vt0.c1)<=(vt0.c1)) AS BLOB)  NULLS FIRST, ((((((((vt0.lid)AND(NULL)))AND(vt0.c2)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.lid)) AND ((vt0.c1, vt0.c2, vt0.c1)))) AND (CAST(vt0.c2 AS NUMERIC))) ASC;
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))IS(((1.7976931348623157E308)||(t1.c0)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC))IS(((1.7976931348623157E308)||(t1.c0)))))AND((((t1.c1, t1.c0))<((t1.c1, t1.c0))) COLLATE BINARY))) ORDER BY (((t1.c0)) NOT BETWEEN ((TRIM(DISTINCT t1.c0, t1.c0))) AND (((((t1.c1, t1.c1, x''))!=((t1.c1, t1.c0, t1.c0))))))  NULLS LAST, CASE WHEN (('465179858') NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 END WHEN t1.c1 COLLATE NOCASE THEN ((t1.c0)<(t1.c1)) END ASC  NULLS FIRST;
SELECT MAX(vt0.c0) FROM t1, vt0 WHERE (CAST(vt0.c2 AS REAL));
SELECT DISTINCT MAX(vt0.c0) FROM t1, vt0 WHERE (((CAST(vt0.c2 AS REAL))AND(CASE ((t1.c1) NOTNULL)  WHEN 'l*j3''X' THEN ((vt0.lid)*(t1.c0)) END))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c1))))>(vt0.c2))  NULLS FIRST, CASE ((NULL) NOT NULL)  WHEN '^롧W~cBI-?' THEN CASE vt0.lid  WHEN t1.c1 THEN vt0.lid WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END LIMIT 2 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM t1, vt0 WHERE (((((((((vt0.c2)AND(vt0.lid)))AND(vt0.lid)))OR(vt0.c2))) NOT NULL)) ORDER BY (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c1))))>(vt0.c2))  NULLS FIRST, CASE ((NULL) NOT NULL)  WHEN '^롧W~cBI-?' THEN CASE vt0.lid  WHEN t1.c1 THEN vt0.lid WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END LIMIT 0X2;
SELECT * FROM t1 CROSS JOIN vt0 ON ((vt0.lid)<=(vt0.c2)) COLLATE NOCASE WHERE ((NOT ((('')/(t1.c1))))) ORDER BY ((((((vt0.c0) ISNULL))AND(((vt0.c0)>=(vt0.c2)))))OR((t1.c0 IN ()))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON ((vt0.lid)<=(vt0.c2)) COLLATE NOCASE WHERE ((((NOT ((('')/(t1.c1)))))AND((('/崾')<<(CASE t1.c1  WHEN '-901435615' THEN vt0.c0 WHEN t1.c0 THEN t1.c1 WHEN vt0.c1 THEN vt0.c1 END))))) ORDER BY ((((((vt0.c0) ISNULL))AND(((vt0.c0)>=(vt0.c2)))))OR((t1.c0 IN ()))) DESC  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON ((vt0.lid)<=(vt0.c2)) COLLATE NOCASE WHERE (((((vt0.lid)|(t1.c0))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((vt0.lid) BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY ((((((vt0.c0) ISNULL))AND(((vt0.c0)>=(vt0.c2)))))OR((t1.c0 IN ()))) DESC  NULLS LAST LIMIT 0x2;
SELECT * FROM t1 CROSS JOIN vt0 ON ((vt0.lid)<=(vt0.c2)) COLLATE NOCASE WHERE ((NOT ((('')/(t1.c1))))) ORDER BY ((((((vt0.c0) ISNULL))AND(((vt0.c0)>=(vt0.c2)))))OR((t1.c0 IN ()))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON ((vt0.lid)<=(vt0.c2)) COLLATE NOCASE WHERE ((((NOT ((('')/(t1.c1)))))AND((('/崾')<<(CASE t1.c1  WHEN '-901435615' THEN vt0.c0 WHEN t1.c0 THEN t1.c1 WHEN vt0.c1 THEN vt0.c1 END))))) ORDER BY ((((((vt0.c0) ISNULL))AND(((vt0.c0)>=(vt0.c2)))))OR((t1.c0 IN ()))) DESC  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON ((vt0.lid)<=(vt0.c2)) COLLATE NOCASE WHERE (((((vt0.lid)|(t1.c0))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((vt0.lid) BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY ((((((vt0.c0) ISNULL))AND(((vt0.c0)>=(vt0.c2)))))OR((t1.c0 IN ()))) DESC  NULLS LAST LIMIT 0x2;
SELECT * FROM vt0 WHERE ((((vt0.lid IN ()))%(((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c1)))));
SELECT * FROM vt0 WHERE ((((vt0.lid IN ()))%(((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c1))))) ORDER BY (vt0.c2 IN (vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((vt0.c0 COLLATE BINARY)>>(NULL)), CASE WHEN vt0.c1 COLLATE RTRIM THEN DATETIME(vt0.lid, vt0.c1, vt0.lid, x'ef3d72') WHEN ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c1)) THEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)) WHEN CAST(vt0.c2 AS TEXT) THEN (+ (vt0.c0)) WHEN (vt0.lid IN (vt0.c0)) THEN (((vt0.lid, vt0.lid, vt0.lid, vt0.lid))<((vt0.c0, vt0.c2, vt0.c1, vt0.c2))) WHEN vt0.c1 COLLATE BINARY THEN (((vt0.c1, vt0.lid, vt0.c1, vt0.c2, vt0.lid))>((vt0.c1, 's]Wp鎭I8]	', vt0.c2, vt0.c1, vt0.c0))) WHEN vt0.c0 COLLATE BINARY THEN ((((vt0.c2)AND(5.64106157E8)))AND(vt0.lid)) END ASC LIMIT 0x2;
SELECT * FROM vt0 WHERE ((((vt0.lid IN ()))%(((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c1)))));
SELECT * FROM vt0 WHERE ((((vt0.lid IN ()))%(((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c1))))) ORDER BY (vt0.c2 IN (vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((vt0.c0 COLLATE BINARY)>>(NULL)), CASE WHEN vt0.c1 COLLATE RTRIM THEN DATETIME(vt0.lid, vt0.c1, vt0.lid, x'ef3d72') WHEN ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c1)) THEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)) WHEN CAST(vt0.c2 AS TEXT) THEN (+ (vt0.c0)) WHEN (vt0.lid IN (vt0.c0)) THEN (((vt0.lid, vt0.lid, vt0.lid, vt0.lid))<((vt0.c0, vt0.c2, vt0.c1, vt0.c2))) WHEN vt0.c1 COLLATE BINARY THEN (((vt0.c1, vt0.lid, vt0.c1, vt0.c2, vt0.lid))>((vt0.c1, 's]Wp鎭I8]	', vt0.c2, vt0.c1, vt0.c0))) WHEN vt0.c0 COLLATE BINARY THEN ((((vt0.c2)AND(5.64106157E8)))AND(vt0.lid)) END ASC LIMIT 0x2;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((((t1.c0 IN (vt0.c1))))<((x''))) WHERE (((((((((((((vt0.c0)AND(t1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t1.c1)))OR(vt0.lid)))>=(((vt0.lid) BETWEEN (vt0.lid) AND (t1.c1))))) ORDER BY ((json_array(t1.c0, NULL, vt0.c1, vt0.c2)) IS FALSE) DESC  NULLS FIRST, ((((((((((3.8375593E8)OR((- (vt0.c2)))))AND((((t1.c1))>=((t1.c0))))))AND(((vt0.c0) IS FALSE))))AND(vt0.c1 COLLATE NOCASE)))OR((- (vt0.lid)))) ASC, ((((vt0.c2)-(vt0.c0))) BETWEEN (CAST(vt0.c2 AS INTEGER)) AND ((NOT (vt0.c2))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((((t1.c0 IN (vt0.c1))))<((x''))) WHERE (((((((((((((vt0.c0)AND(t1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t1.c1)))OR(vt0.lid)))>=(((vt0.lid) BETWEEN (vt0.lid) AND (t1.c1))))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS INTEGER)  NULLS FIRST INTERSECT SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((((t1.c0 IN (vt0.c1))))<((x''))) WHERE ((((((t1.c1)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))) NOT NULL)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((((t1.c0 IN (vt0.c1))))<((x''))) WHERE (((((((((((((vt0.c0)AND(t1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t1.c1)))OR(vt0.lid)))>=(((vt0.lid) BETWEEN (vt0.lid) AND (t1.c1))))) ORDER BY ((json_array(t1.c0, NULL, vt0.c1, vt0.c2)) IS FALSE) DESC  NULLS FIRST, ((((((((((3.8375593E8)OR((- (vt0.c2)))))AND((((t1.c1))>=((t1.c0))))))AND(((vt0.c0) IS FALSE))))AND(vt0.c1 COLLATE NOCASE)))OR((- (vt0.lid)))) ASC, ((((vt0.c2)-(vt0.c0))) BETWEEN (CAST(vt0.c2 AS INTEGER)) AND ((NOT (vt0.c2))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((((t1.c0 IN (vt0.c1))))<((x''))) WHERE (((((((((((((vt0.c0)AND(t1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t1.c1)))OR(vt0.lid)))>=(((vt0.lid) BETWEEN (vt0.lid) AND (t1.c1))))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS INTEGER)  NULLS FIRST INTERSECT SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((((t1.c0 IN (vt0.c1))))<((x''))) WHERE ((((((t1.c1)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))) NOT NULL)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.lid)) IN (((t1.c0) NOT NULL)))) ORDER BY (NOT (vt0.c1)) COLLATE BINARY;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.lid)) IN (((t1.c0) NOT NULL)))) ORDER BY ((0xffffffffdd53cbc2) NOT BETWEEN ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (((vt0.c2)<<(0X3537a20b)))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (x'c7b2') ORDER BY ((0xffffffffdd53cbc2) NOT BETWEEN ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (((vt0.c2)<<(0X3537a20b)))) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.lid)) IN (((t1.c0) NOT NULL)))) ORDER BY (NOT (vt0.c1)) COLLATE BINARY;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.lid)) IN (((t1.c0) NOT NULL)))) ORDER BY ((0xffffffffdd53cbc2) NOT BETWEEN ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (((vt0.c2)<<(0X3537a20b)))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (x'c7b2') ORDER BY ((0xffffffffdd53cbc2) NOT BETWEEN ((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (((vt0.c2)<<(0X3537a20b)))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END) NOT BETWEEN (((t1.c1) NOT NULL)) AND (CASE t1.c0  WHEN t1.c1 THEN t1.c0 END)));
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END) NOT BETWEEN (((t1.c1) NOT NULL)) AND (CASE t1.c0  WHEN t1.c1 THEN t1.c0 END))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END) NOT BETWEEN (((t1.c1) NOT NULL)) AND (CASE t1.c0  WHEN t1.c1 THEN t1.c0 END)));
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END) NOT BETWEEN (((t1.c1) NOT NULL)) AND (CASE t1.c0  WHEN t1.c1 THEN t1.c0 END))) LIMIT 0;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST(vt0.c2 COLLATE NOCASE AS REAL)) ORDER BY TRIM(CAST(vt0.lid AS REAL)) DESC, CAST((((vt0.lid))!=((vt0.c1))) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST(vt0.c2 COLLATE NOCASE AS REAL)) ORDER BY (((vt0.lid IN ())) ISNULL) DESC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST((((t1.c0, t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c0)) AND ((t1.c0, t1.c0, t1.c1, t1.c0))) AS NUMERIC));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (CAST((((t1.c0, t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c0)) AND ((t1.c0, t1.c0, t1.c1, t1.c0))) AS NUMERIC)) LIMIT 2 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((t1.c0)AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND(CASE WHEN t1.c0 THEN t1.c1 END))) LIMIT 2;
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON (((t1.c0)|(vt0.c1)) IN (((vt0.lid) IS TRUE), ((vt0.c1)<>(vt0.c2)), (((t1.c1)) BETWEEN ((t1.c1)) AND ((vt0.lid))))) WHERE ((+ ((((t1.c0))<((vt0.c1)))))) ORDER BY ((-1.260961186E9) BETWEEN (CASE vt0.c0  WHEN vt0.lid THEN vt0.c2 END) AND (((0.44338332495807253) IS TRUE))) ASC;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (((t1.c0)|(vt0.c1)) IN (((vt0.lid) IS TRUE), ((vt0.c1)<>(vt0.c2)), (((t1.c1)) BETWEEN ((t1.c1)) AND ((vt0.lid))))) WHERE ((+ ((((t1.c0))<((vt0.c1)))))) ORDER BY ((-1.260961186E9) BETWEEN (CASE vt0.c0  WHEN vt0.lid THEN vt0.c2 END) AND (((0.44338332495807253) IS TRUE))) ASC LIMIT 0x0;
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON (((t1.c0)|(vt0.c1)) IN (((vt0.lid) IS TRUE), ((vt0.c1)<>(vt0.c2)), (((t1.c1)) BETWEEN ((t1.c1)) AND ((vt0.lid))))) WHERE ((+ ((((t1.c0))<((vt0.c1)))))) ORDER BY ((-1.260961186E9) BETWEEN (CASE vt0.c0  WHEN vt0.lid THEN vt0.c2 END) AND (((0.44338332495807253) IS TRUE))) ASC;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (((t1.c0)|(vt0.c1)) IN (((vt0.lid) IS TRUE), ((vt0.c1)<>(vt0.c2)), (((t1.c1)) BETWEEN ((t1.c1)) AND ((vt0.lid))))) WHERE ((+ ((((t1.c0))<((vt0.c1)))))) ORDER BY ((-1.260961186E9) BETWEEN (CASE vt0.c0  WHEN vt0.lid THEN vt0.c2 END) AND (((0.44338332495807253) IS TRUE))) ASC LIMIT 0x0;
SELECT * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt0.c2))  WHEN ((((((vt0.lid)OR(vt0.c0)))AND('oꩅ')))AND(vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) ELSE ((vt0.lid)<(vt0.lid)) END) ORDER BY CAST((vt0.lid IN (vt0.c2)) AS BLOB) DESC  NULLS LAST, json_array_length(((vt0.c2)IS NOT(vt0.c0)), ((vt0.c2)OR(vt0.c2))), CAST(vt0.c0 AS REAL) COLLATE RTRIM DESC;
SELECT * FROM vt0 WHERE (((CASE ((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt0.c2))  WHEN ((((((vt0.lid)OR(vt0.c0)))AND('oꩅ')))AND(vt0.c0)) THEN (((vt0.c0))>((vt0.c0))) ELSE ((vt0.lid)<(vt0.lid)) END)AND((vt0.c2 COLLATE NOCASE IN (IFNULL(vt0.lid, vt0.c0)))))) ORDER BY CAST((vt0.lid IN (vt0.c2)) AS BLOB) DESC  NULLS LAST, json_array_length(((vt0.c2)IS NOT(vt0.c0)), ((vt0.c2)OR(vt0.c2))), CAST(vt0.c0 AS REAL) COLLATE RTRIM DESC INTERSECT SELECT * FROM vt0 WHERE (((CASE WHEN '-1085033156' THEN '' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.lid END) IS FALSE)) ORDER BY CAST((vt0.lid IN (vt0.c2)) AS BLOB) DESC  NULLS LAST, json_array_length(((vt0.c2)IS NOT(vt0.c0)), ((vt0.c2)OR(vt0.c2))), CAST(vt0.c0 AS REAL) COLLATE RTRIM DESC;
SELECT * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.lid) AND (vt0.c2))  WHEN ((((((vt0.lid)OR(vt0.c0)))AND('oꩅ')))AND(vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) ELSE ((vt0.lid)<(vt0.lid)) END) ORDER BY CAST((vt0.lid IN (vt0.c2)) AS BLOB) DESC  NULLS LAST, json_array_length(((vt0.c2)IS NOT(vt0.c0)), ((vt0.c2)OR(vt0.c2))), CAST(vt0.c0 AS REAL) COLLATE RTRIM DESC;
SELECT * FROM vt0 INNER JOIN t1 ON (((x'e1')) NOT BETWEEN (((((vt0.c0, vt0.c0))=((vt0.lid, vt0.lid))))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((NULL)))))) WHERE (CASE vt0.lid COLLATE RTRIM  WHEN ((((((t1.c1)AND(vt0.c2)))OR(t1.c1)))AND(vt0.c1)) THEN LIKE(t1.c0, vt0.c0, 'I') WHEN (t1.c0 IN (vt0.c2, 0.17840602528948846)) THEN ((t1.c0) NOT NULL) END) ORDER BY ((((0.11851432196579836 COLLATE NOCASE)OR(((t1.c1)/(vt0.c2)))))AND(t1.c1 COLLATE NOCASE)), (((((vt0.c1)>=(t1.c1)), (vt0.c2 IN ()), ((((((((vt0.c2)AND(t1.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)), t1.c0))<>((t1.c0, ((vt0.c0) NOTNULL), COALESCE(DISTINCT t1.c1, vt0.c0, vt0.c0), ((vt0.c2)<<(vt0.lid))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON (((x'e1')) NOT BETWEEN (((((vt0.c0, vt0.c0))=((vt0.lid, vt0.lid))))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((NULL)))))) WHERE (((CASE vt0.lid COLLATE RTRIM  WHEN ((((((t1.c1)AND(vt0.c2)))OR(t1.c1)))AND(vt0.c1)) THEN LIKE(t1.c0, vt0.c0, 'I') WHEN (t1.c0 IN (vt0.c2, 0.17840602528948846)) THEN ((t1.c0) NOT NULL) END)AND(json_insert(((((((((vt0.c1)AND(t1.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(t1.c0)), 0.9068609059941257 COLLATE RTRIM, CASE vt0.c2  WHEN t1.c0 THEN vt0.c2 WHEN x'' THEN t1.c0 END)))) ORDER BY (((+ ('20')))!=(((vt0.c1)+(t1.c1)))) ASC  NULLS LAST;
SELECT * FROM vt0 INNER JOIN t1 ON (((x'e1')) NOT BETWEEN (((((vt0.c0, vt0.c0))=((vt0.lid, vt0.lid))))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((NULL)))))) WHERE (CASE vt0.lid COLLATE RTRIM  WHEN ((((((t1.c1)AND(vt0.c2)))OR(t1.c1)))AND(vt0.c1)) THEN LIKE(t1.c0, vt0.c0, 'I') WHEN (t1.c0 IN (vt0.c2, 0.17840602528948846)) THEN ((t1.c0) NOT NULL) END) ORDER BY ((((0.11851432196579836 COLLATE NOCASE)OR(((t1.c1)/(vt0.c2)))))AND(t1.c1 COLLATE NOCASE)), (((((vt0.c1)>=(t1.c1)), (vt0.c2 IN ()), ((((((((vt0.c2)AND(t1.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)), t1.c0))<>((t1.c0, ((vt0.c0) NOTNULL), COALESCE(DISTINCT t1.c1, vt0.c0, vt0.c0), ((vt0.c2)<<(vt0.lid))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON (((x'e1')) NOT BETWEEN (((((vt0.c0, vt0.c0))=((vt0.lid, vt0.lid))))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((NULL)))))) WHERE (((CASE vt0.lid COLLATE RTRIM  WHEN ((((((t1.c1)AND(vt0.c2)))OR(t1.c1)))AND(vt0.c1)) THEN LIKE(t1.c0, vt0.c0, 'I') WHEN (t1.c0 IN (vt0.c2, 0.17840602528948846)) THEN ((t1.c0) NOT NULL) END)AND(json_insert(((((((((vt0.c1)AND(t1.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(t1.c0)), 0.9068609059941257 COLLATE RTRIM, CASE vt0.c2  WHEN t1.c0 THEN vt0.c2 WHEN x'' THEN t1.c0 END)))) ORDER BY (((+ ('20')))!=(((vt0.c1)+(t1.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1 WHERE (((CHANGES()) NOT NULL));
SELECT COUNT(*) FROM vt0, t1 WHERE (((((CHANGES()) NOT NULL))AND((vt0.c2 IN ((vt0.c0 IN (x'c7e7', vt0.c2))))))) LIMIT 0X2 INTERSECT SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((((vt0.lid IN (t1.c1, vt0.c1)))OR(((t1.c0)-('NaNꩅ')))))AND(('' IN ())))) LIMIT 2;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c1)|(t1.c1)))LIKE(t1.c0))) ORDER BY CAST((((t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c1))) AS BLOB) DESC  NULLS LAST, CAST(((t1.c0)>(t1.c1)) AS REAL) ASC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((((t1.c1)|(t1.c1)))LIKE(t1.c0)))AND(CAST(CASE WHEN x'8248' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END AS NUMERIC)))) ORDER BY t1.c1, ((NULL) NOTNULL) DESC INTERSECT SELECT MIN(t1.c0) FROM t1 WHERE (((((((((t1.c1) NOT NULL))OR('|YA/&5ig')))OR(json_object(t1.c1, t1.c0))))AND(LIKE(t1.c0, t1.c1, '-')))) ORDER BY t1.c1, ((NULL) NOTNULL) DESC;
SELECT MIN(t1.c0) FROM t1 WHERE ((((t1.c1, t1.c0, t1.c1, t1.c1, 1.735143876E9))!=((t1.c1, t1.c0, t1.c0, t1.c0, 0.6895567909279241))) COLLATE BINARY);
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((t1.c1, t1.c0, t1.c1, t1.c1, 1.735143876E9))<>((t1.c1, t1.c0, t1.c0, t1.c0, 0.6895567909279241))) COLLATE BINARY) LIMIT 0x2 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (NULL) LIMIT 0X2;
SELECT * FROM t1 WHERE (((((((((((t1.c0)>>(x'')))AND((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, 404955733))))))OR(t1.c0 COLLATE NOCASE)))AND(t1.c1)))AND(CASE t1.c1  WHEN '1048715384' THEN x'90159568' WHEN t1.c0 THEN t1.c0 END)));
SELECT * FROM t1 WHERE (((((((((((((t1.c0)>>(x'')))AND((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, 404955733))))))OR(t1.c0 COLLATE NOCASE)))AND(t1.c1)))AND(CASE t1.c1  WHEN '1048715384' THEN x'90159568' WHEN t1.c0 THEN t1.c0 END)))AND((((t1.c0)IS NOT(t1.c0)) IN (((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c0))))))) INTERSECT SELECT * FROM t1 WHERE ((t1.c1 IN (t1.c0, t1.c0)) COLLATE BINARY);
SELECT * FROM t1 WHERE (((((((((((t1.c0)>>(x'')))AND((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, 404955733))))))OR(t1.c0 COLLATE NOCASE)))AND(t1.c1)))AND(CASE t1.c1  WHEN '1048715384' THEN x'90159568' WHEN t1.c0 THEN t1.c0 END)));
SELECT * FROM t1 WHERE (((((((((((((t1.c0)>>(x'')))AND((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, 404955733))))))OR(t1.c0 COLLATE NOCASE)))AND(t1.c1)))AND(CASE t1.c1  WHEN '1048715384' THEN x'90159568' WHEN t1.c0 THEN t1.c0 END)))AND((((t1.c0)IS NOT(t1.c0)) IN (((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c0))))))) INTERSECT SELECT * FROM t1 WHERE ((t1.c1 IN (t1.c0, t1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE (SQLITE_COMPILEOPTION_USED((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))));
SELECT COUNT(*) FROM t1 WHERE (SQLITE_COMPILEOPTION_USED((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))) LIMIT 2;
SELECT * FROM vt0 WHERE ((((~ (vt0.c2))) NOT BETWEEN ((vt0.c2 IN ())) AND ('|YA/&5ig'))) ORDER BY ((((((vt0.lid, vt0.c2))=((vt0.c2, vt0.c0)))))<=(('x')))  NULLS LAST, MAX((((vt0.lid, NULL, vt0.c0, vt0.lid))>=((vt0.c2, vt0.lid, vt0.c0, vt0.c0))), CAST(vt0.c0 AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c2))) NOT BETWEEN ((vt0.c2 IN ())) AND ('|YA/&5ig'))) ORDER BY ((((((((vt0.c0) IS TRUE))AND(((vt0.c0)OR('bai')))))AND((vt0.c2 IN (vt0.c0)))))AND((((x'b7b3')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) DESC  NULLS FIRST, ((((((((((((vt0.c2) NOT NULL))OR(((vt0.c2) IS FALSE))))AND(vt0.c2)))AND(CAST(vt0.lid AS TEXT))))OR(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)))AND(CASE WHEN vt0.lid THEN vt0.c0 END));
SELECT * FROM vt0 WHERE ((((~ (vt0.c2))) NOT BETWEEN ((vt0.c2 IN ())) AND ('|YA/&5ig'))) ORDER BY ((((((vt0.lid, vt0.c2))=((vt0.c2, vt0.c0)))))<=(('x')))  NULLS LAST, MAX((((vt0.lid, NULL, vt0.c0, vt0.lid))>=((vt0.c2, vt0.lid, vt0.c0, vt0.c0))), CAST(vt0.c0 AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c2))) NOT BETWEEN ((vt0.c2 IN ())) AND ('|YA/&5ig'))) ORDER BY ((((((((vt0.c0) IS TRUE))AND(((vt0.c0)OR('bai')))))AND((vt0.c2 IN (vt0.c0)))))AND((((x'b7b3')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) DESC  NULLS FIRST, ((((((((((((vt0.c2) NOT NULL))OR(((vt0.c2) IS FALSE))))AND(vt0.c2)))AND(CAST(vt0.lid AS TEXT))))OR(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)))AND(CASE WHEN vt0.lid THEN vt0.c0 END));
SELECT ALL * FROM t1 WHERE (0.16994514255528648) ORDER BY ROUND(((t1.c0) NOTNULL), (t1.c1 IN (t1.c0, t1.c0))) ASC  NULLS LAST, ((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))>>((((t1.c0, t1.c1, t1.c0)) BETWEEN ((NULL, t1.c0, -5.8171091E8)) AND ((t1.c1, t1.c0, t1.c1)))))  NULLS FIRST, ((((((((t1.c0)GLOB(t1.c0)))AND(CASE t1.c1  WHEN 0.26976481520470785 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)))AND(CAST(t1.c0 AS TEXT))))OR(CAST(t1.c1 AS REAL)))  NULLS FIRST, ((((t1.c1) NOT NULL))>((t1.c0 IN ('x謤bQ+MJ'))));
SELECT * FROM t1 WHERE (0.16994514255528648) ORDER BY ROUND(((t1.c0) NOTNULL), (t1.c1 IN (t1.c0, t1.c0))) ASC  NULLS LAST, ((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))>>((((t1.c0, t1.c1, t1.c0)) BETWEEN ((NULL, t1.c0, -5.8171091E8)) AND ((t1.c1, t1.c0, t1.c1)))))  NULLS FIRST, ((((((((t1.c0)GLOB(t1.c0)))AND(CASE t1.c1  WHEN 0.26976481520470785 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)))AND(CAST(t1.c0 AS TEXT))))OR(CAST(t1.c1 AS REAL)))  NULLS FIRST, ((((t1.c1) NOT NULL))>((t1.c0 IN ('x謤bQ+MJ')))) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (0.16994514255528648) ORDER BY ROUND(((t1.c0) NOTNULL), (t1.c1 IN (t1.c0, t1.c0))) ASC  NULLS LAST, ((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))>>((((t1.c0, t1.c1, t1.c0)) BETWEEN ((NULL, t1.c0, -5.8171091E8)) AND ((t1.c1, t1.c0, t1.c1)))))  NULLS FIRST, ((((((((t1.c0)GLOB(t1.c0)))AND(CASE t1.c1  WHEN 0.26976481520470785 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)))AND(CAST(t1.c0 AS TEXT))))OR(CAST(t1.c1 AS REAL)))  NULLS FIRST, ((((t1.c1) NOT NULL))>((t1.c0 IN ('x謤bQ+MJ'))));
SELECT * FROM t1 WHERE (0.16994514255528648) ORDER BY ROUND(((t1.c0) NOTNULL), (t1.c1 IN (t1.c0, t1.c0))) ASC  NULLS LAST, ((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))>>((((t1.c0, t1.c1, t1.c0)) BETWEEN ((NULL, t1.c0, -5.8171091E8)) AND ((t1.c1, t1.c0, t1.c1)))))  NULLS FIRST, ((((((((t1.c0)GLOB(t1.c0)))AND(CASE t1.c1  WHEN 0.26976481520470785 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END)))AND(CAST(t1.c0 AS TEXT))))OR(CAST(t1.c1 AS REAL)))  NULLS FIRST, ((((t1.c1) NOT NULL))>((t1.c0 IN ('x謤bQ+MJ')))) LIMIT 0x0;
SELECT COUNT(*) FROM vt0, t1 WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((vt0.c2)AND(CASE WHEN (~ (t1.c1)) THEN ((x'5a')!=(vt0.lid)) WHEN ((vt0.c2) ISNULL) THEN ((vt0.c2) ISNULL) ELSE vt0.c2 COLLATE BINARY END))) LIMIT 0X1 INTERSECT SELECT COUNT(*) FROM vt0, t1 WHERE ((((((vt0.lid))<((0x7fffffffffffffff)))) BETWEEN (CASE WHEN vt0.lid THEN t1.c0 END) AND (0xffffffffa7d8bb63))) LIMIT 1;
SELECT ALL MIN(t1.c1) FROM t1, vt0 WHERE ((((vt0.c0, NULL)) NOT BETWEEN (((- (vt0.lid)), ((((vt0.lid)OR(t1.c0)))OR(vt0.c1)))) AND ((CAST('0.5765511609537718' AS TEXT), (t1.c0 IN (vt0.lid, t1.c1))))));
SELECT DISTINCT MIN(t1.c1) FROM t1, vt0 WHERE ((((((vt0.c0, NULL)) NOT BETWEEN (((- (vt0.lid)), ((((vt0.lid)OR(t1.c0)))OR(vt0.c1)))) AND ((CAST('0.5765511609537718' AS TEXT), (t1.c0 IN (vt0.lid, t1.c1))))))AND(NULL)));
SELECT ALL MAX(vt0.lid) FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.lid ELSE vt0.lid END COLLATE BINARY COLLATE BINARY);
SELECT DISTINCT MAX(vt0.lid) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.lid ELSE vt0.lid END COLLATE BINARY COLLATE BINARY)AND(-399895181))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(vt0.lid) FROM vt0 WHERE (x'') LIMIT 0;
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))GLOB((vt0.c2 IN (vt0.c0))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1)))) NOTNULL);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1 IN ()))GLOB((vt0.c2 IN (vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1)))) NOTNULL);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))GLOB((vt0.c2 IN (vt0.c0))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1)))) NOTNULL);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1 IN ()))GLOB((vt0.c2 IN (vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1)))) NOTNULL);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c2) IS TRUE)))<((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))) ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST, CASE WHEN vt0.c2 COLLATE NOCASE THEN ROUND(vt0.c2, vt0.c2) ELSE LOWER(vt0.c0) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c2) IS TRUE)))<((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))))AND(((((((((((((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)))AND(((((((((vt0.lid)OR(vt0.lid)))AND('2123040743')))AND(vt0.lid)))OR(vt0.c1)))))AND(vt0.lid)))AND(CAST(vt0.lid AS BLOB))))AND(CASE WHEN vt0.lid THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END)))OR(CAST(vt0.c2 AS REAL))))AND(vt0.c0))))) ORDER BY ((x'89bd')OR(((vt0.lid)*(vt0.c1)))) INTERSECT SELECT COUNT(*) FROM vt0 WHERE (((0.836237141111551)IS(vt0.c2))) ORDER BY ((x'89bd')OR(((vt0.lid)*(vt0.c1))));
SELECT ALL * FROM vt0, t1 WHERE ((((- (vt0.c0)))<(0.5935131821842233)));
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((- (vt0.c0)))<(0.5935131821842233)))AND((((CASE vt0.c1  WHEN t1.c1 THEN vt0.lid WHEN t1.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.lid WHEN vt0.c1 THEN vt0.c2 WHEN t1.c0 THEN t1.c0 WHEN vt0.c2 THEN vt0.c1 END))>=((json_valid(vt0.c1))))))) ORDER BY ((0xffffffff804c6e67)||(((vt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE ((((- (vt0.c0)))<(0.5935131821842233)));
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((- (vt0.c0)))<(0.5935131821842233)))AND((((CASE vt0.c1  WHEN t1.c1 THEN vt0.lid WHEN t1.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.lid WHEN vt0.c1 THEN vt0.c2 WHEN t1.c0 THEN t1.c0 WHEN vt0.c2 THEN vt0.c1 END))>=((json_valid(vt0.c1))))))) ORDER BY ((0xffffffff804c6e67)||(((vt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)==((+ (NULL)))));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)==((+ (NULL))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT NULL) DESC  NULLS LAST, (~ (((((((vt0.c2)AND(vt0.c0)))AND(x'b9')))AND(vt0.c0)))) ASC LIMIT 0;
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN t1.c0 WHEN vt0.lid THEN t1.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.lid END  WHEN CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN TOTAL_CHANGES() THEN '-1993536982' WHEN CASE WHEN vt0.c2 THEN vt0.c0 END THEN NULL WHEN (((vt0.c0, vt0.lid, t1.c1)) BETWEEN ((t1.c0, vt0.c2, t1.c1)) AND ((vt0.lid, vt0.lid, vt0.lid))) THEN ((0.18044993300244638) BETWEEN (0.8587066549565139) AND (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.lid IN (t1.c0)) ELSE ((((t1.c0)AND(t1.c1)))OR(vt0.c1)) END) ORDER BY (((vt0.c1 IN (vt0.c2, vt0.c2, vt0.c1)))OR('D%&]'));
SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN t1.c0 WHEN vt0.lid THEN t1.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.lid END  WHEN CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN TOTAL_CHANGES() THEN '-1993536982' WHEN CASE WHEN vt0.c2 THEN vt0.c0 END THEN NULL WHEN (((vt0.c0, vt0.lid, t1.c1)) BETWEEN ((t1.c0, vt0.c2, t1.c1)) AND ((vt0.lid, vt0.lid, vt0.lid))) THEN ((0.18044993300244638) BETWEEN (0.8587066549565139) AND (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.lid IN (t1.c0)) ELSE ((((t1.c0)AND(t1.c1)))OR(vt0.c1)) END) ORDER BY 0X18293272 ASC  NULLS FIRST, (- (CASE vt0.c0  WHEN 'Bvgu' THEN t1.c1 ELSE t1.c1 END)), 0x62422220 ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE (CASE ((t1.c1) NOTNULL)  WHEN ((vt0.c1)<=(t1.c0)) THEN CASE t1.c1  WHEN vt0.c2 THEN t1.c0 ELSE t1.c1 END WHEN ((((((((vt0.c1)OR(vt0.c1)))OR(t1.c0)))OR(vt0.lid)))AND(t1.c0)) THEN ((vt0.c2)IS(vt0.c0)) WHEN vt0.c2 THEN ((((vt0.c1)AND(vt0.lid)))AND(vt0.c0)) END) ORDER BY 405353074 ASC  NULLS FIRST, (- (CASE vt0.c0  WHEN 'Bvgu' THEN t1.c1 ELSE t1.c1 END)), 1648501280 ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN t1.c0 WHEN vt0.lid THEN t1.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.lid END  WHEN CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN TOTAL_CHANGES() THEN '-1993536982' WHEN CASE WHEN vt0.c2 THEN vt0.c0 END THEN NULL WHEN (((vt0.c0, vt0.lid, t1.c1)) BETWEEN ((t1.c0, vt0.c2, t1.c1)) AND ((vt0.lid, vt0.lid, vt0.lid))) THEN ((0.18044993300244638) BETWEEN (0.8587066549565139) AND (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.lid IN (t1.c0)) ELSE ((((t1.c0)AND(t1.c1)))OR(vt0.c1)) END) ORDER BY (((vt0.c1 IN (vt0.c2, vt0.c2, vt0.c1)))OR('D%&]'));
SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN t1.c0 WHEN vt0.lid THEN t1.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.lid END  WHEN CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN TOTAL_CHANGES() THEN '-1993536982' WHEN CASE WHEN vt0.c2 THEN vt0.c0 END THEN NULL WHEN (((vt0.c0, vt0.lid, t1.c1)) BETWEEN ((t1.c0, vt0.c2, t1.c1)) AND ((vt0.lid, vt0.lid, vt0.lid))) THEN ((0.18044993300244638) BETWEEN (0.8587066549565139) AND (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.lid IN (t1.c0)) ELSE ((((t1.c0)AND(t1.c1)))OR(vt0.c1)) END) ORDER BY 0X18293272 ASC  NULLS FIRST, (- (CASE vt0.c0  WHEN 'Bvgu' THEN t1.c1 ELSE t1.c1 END)), 0x62422220 ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE (CASE ((t1.c1) NOTNULL)  WHEN ((vt0.c1)<=(t1.c0)) THEN CASE t1.c1  WHEN vt0.c2 THEN t1.c0 ELSE t1.c1 END WHEN ((((((((vt0.c1)OR(vt0.c1)))OR(t1.c0)))OR(vt0.lid)))AND(t1.c0)) THEN ((vt0.c2)IS(vt0.c0)) WHEN vt0.c2 THEN ((((vt0.c1)AND(vt0.lid)))AND(vt0.c0)) END) ORDER BY 405353074 ASC  NULLS FIRST, (- (CASE vt0.c0  WHEN 'Bvgu' THEN t1.c1 ELSE t1.c1 END)), 1648501280 ASC  NULLS LAST LIMIT 1;
SELECT ALL MIN(vt0.c0) FROM vt0, t1 WHERE ((CASE WHEN vt0.c2 THEN vt0.lid WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN vt0.c0 WHEN vt0.c0 THEN '-1868605768' ELSE t1.c1 END IN ())) ORDER BY (((((t1.c1, vt0.lid))!=((vt0.lid, t1.c1))))&(t1.c1 COLLATE RTRIM))  NULLS LAST;
SELECT DISTINCT MIN(vt0.c0) FROM vt0, t1 WHERE ((CASE WHEN vt0.c2 THEN vt0.lid WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN vt0.c0 WHEN vt0.c0 THEN '-1868605768' ELSE t1.c1 END IN ())) ORDER BY (((((t1.c1, vt0.lid))!=((vt0.lid, t1.c1))))&(t1.c1 COLLATE RTRIM))  NULLS LAST LIMIT 0;
SELECT * FROM t1, vt0 WHERE (((vt0.c2 COLLATE BINARY)<>(((((vt0.lid)AND(vt0.c2)))AND(t1.c1))))) ORDER BY x'' ASC  NULLS FIRST, ((((t1.c1) IS FALSE)) NOT BETWEEN (((((vt0.lid)AND(vt0.lid)))OR(vt0.c2))) AND (vt0.c0)) ASC, (((t1.c1 IN (vt0.c1)))AND((NOT (vt0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM t1, vt0 WHERE (((((vt0.c2 COLLATE BINARY)>(((((vt0.lid)AND(vt0.c2)))AND(t1.c1)))))AND(x''))) ORDER BY (((t1.c1)) NOT BETWEEN (((((vt0.c2, vt0.c0, 'rMrp%p,R}', vt0.c2)) BETWEEN ((vt0.c0, vt0.lid, vt0.c0, vt0.c0)) AND ((t1.c0, vt0.c0, vt0.c1, 'mQ'))))) AND ((CASE vt0.c1  WHEN '0.9563626584557815' THEN x'c4d7' WHEN vt0.c2 THEN vt0.c1 WHEN vt0.lid THEN vt0.c1 ELSE vt0.c0 END)))  NULLS LAST, CAST(((((vt0.c0)AND(t1.c0)))OR(t1.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE (((vt0.c2 COLLATE BINARY)<>(((((vt0.lid)AND(vt0.c2)))AND(t1.c1))))) ORDER BY x'' ASC  NULLS FIRST, ((((t1.c1) IS FALSE)) NOT BETWEEN (((((vt0.lid)AND(vt0.lid)))OR(vt0.c2))) AND (vt0.c0)) ASC, (((t1.c1 IN (vt0.c1)))AND((NOT (vt0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM t1, vt0 WHERE (((((vt0.c2 COLLATE BINARY)>(((((vt0.lid)AND(vt0.c2)))AND(t1.c1)))))AND(x''))) ORDER BY (((t1.c1)) NOT BETWEEN (((((vt0.c2, vt0.c0, 'rMrp%p,R}', vt0.c2)) BETWEEN ((vt0.c0, vt0.lid, vt0.c0, vt0.c0)) AND ((t1.c0, vt0.c0, vt0.c1, 'mQ'))))) AND ((CASE vt0.c1  WHEN '0.9563626584557815' THEN x'c4d7' WHEN vt0.c2 THEN vt0.c1 WHEN vt0.lid THEN vt0.c1 ELSE vt0.c0 END)))  NULLS LAST, CAST(((((vt0.c0)AND(t1.c0)))OR(t1.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE (((CASE vt0.c2  WHEN 0X383ba803 THEN vt0.c0 WHEN vt0.lid THEN t1.c1 WHEN t1.c0 THEN vt0.c2 END)<((t1.c1 IN ())))) ORDER BY CAST(vt0.lid AS TEXT) COLLATE RTRIM ASC, LIKELIHOOD(json_object(t1.c1, vt0.c0, vt0.c2, t1.c0), json_object(t1.c0, vt0.c1, NULL)) DESC, (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.lid)))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (((CASE vt0.c2  WHEN 0x383ba803 THEN vt0.c0 WHEN vt0.lid THEN t1.c1 WHEN t1.c0 THEN vt0.c2 END)<((t1.c1 IN ())))) ORDER BY 0xffffffff8a0457eb  NULLS FIRST, NULL ASC  NULLS FIRST INTERSECT SELECT * FROM t1, vt0 WHERE (((IFNULL(t1.c0, t1.c1)) IS FALSE)) ORDER BY -1979426837  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE (((CASE vt0.c2  WHEN 0X383ba803 THEN vt0.c0 WHEN vt0.lid THEN t1.c1 WHEN t1.c0 THEN vt0.c2 END)<((t1.c1 IN ())))) ORDER BY CAST(vt0.lid AS TEXT) COLLATE RTRIM ASC, LIKELIHOOD(json_object(t1.c1, vt0.c0, vt0.c2, t1.c0), json_object(t1.c0, vt0.c1, NULL)) DESC, (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.lid)))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON NULLIF(DISTINCT t1.c0, vt0.c2) COLLATE RTRIM WHERE ('');
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON NULLIF(DISTINCT t1.c0, vt0.c2) COLLATE RTRIM WHERE ('') LIMIT 0x1;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON NULLIF(DISTINCT t1.c0, vt0.c2) COLLATE RTRIM WHERE ('');
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON NULLIF(DISTINCT t1.c0, vt0.c2) COLLATE RTRIM WHERE ('') LIMIT 0x1;
SELECT * FROM vt0 WHERE ((((vt0.lid, TRIM(vt0.c1)))<=(((((vt0.c0, vt0.c1, vt0.c0, vt0.lid)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.lid, vt0.c1))), vt0.c2)))) ORDER BY ((((vt0.c2 IN (vt0.c0, vt0.lid)), (NOT (vt0.c2)), (~ (vt0.c0)), CAST('-1958114803' AS NUMERIC), TIME(NULL, vt0.c1, vt0.lid)))==((vt0.c2 COLLATE RTRIM, ((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c2)), '881164828', ((((vt0.c0)AND(1921768955)))AND(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))), ((((((((vt0.c2)AND(vt0.c1)))OR(x'3c')))AND(vt0.c2 COLLATE RTRIM)))OR(CAST(vt0.c1 AS REAL))) DESC  NULLS FIRST, (((((x'eb37', NULL))>=((vt0.c2, x'a674')))) IS TRUE) ASC, (((- (vt0.c1))) NOT NULL)  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.lid, TRIM(vt0.c1)))<=(((((vt0.c0, vt0.c1, vt0.c0, vt0.lid)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.lid, vt0.c1))), vt0.c2)))) ORDER BY ((((vt0.c2 IN (vt0.c0, vt0.lid)), (NOT (vt0.c2)), (~ (vt0.c0)), CAST('-1958114803' AS NUMERIC), TIME(NULL, vt0.c1, vt0.lid)))=((vt0.c2 COLLATE RTRIM, ((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c2)), '881164828', ((((vt0.c0)AND(1921768955)))AND(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))), ((((((((vt0.c2)AND(vt0.c1)))OR(x'3c')))AND(vt0.c2 COLLATE RTRIM)))OR(CAST(vt0.c1 AS REAL))) DESC  NULLS FIRST, (((((x'eb37', NULL))>=((vt0.c2, x'a674')))) IS TRUE) ASC, (((- (vt0.c1))) NOT NULL)  NULLS FIRST LIMIT 2;
SELECT * FROM vt0 WHERE ((((vt0.lid, TRIM(vt0.c1)))<=(((((vt0.c0, vt0.c1, vt0.c0, vt0.lid)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.lid, vt0.c1))), vt0.c2)))) ORDER BY ((((vt0.c2 IN (vt0.c0, vt0.lid)), (NOT (vt0.c2)), (~ (vt0.c0)), CAST('-1958114803' AS NUMERIC), TIME(NULL, vt0.c1, vt0.lid)))==((vt0.c2 COLLATE RTRIM, ((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c2)), '881164828', ((((vt0.c0)AND(1921768955)))AND(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))), ((((((((vt0.c2)AND(vt0.c1)))OR(x'3c')))AND(vt0.c2 COLLATE RTRIM)))OR(CAST(vt0.c1 AS REAL))) DESC  NULLS FIRST, (((((x'eb37', NULL))>=((vt0.c2, x'a674')))) IS TRUE) ASC, (((- (vt0.c1))) NOT NULL)  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.lid, TRIM(vt0.c1)))<=(((((vt0.c0, vt0.c1, vt0.c0, vt0.lid)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.lid, vt0.c1))), vt0.c2)))) ORDER BY ((((vt0.c2 IN (vt0.c0, vt0.lid)), (NOT (vt0.c2)), (~ (vt0.c0)), CAST('-1958114803' AS NUMERIC), TIME(NULL, vt0.c1, vt0.lid)))=((vt0.c2 COLLATE RTRIM, ((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c2)), '881164828', ((((vt0.c0)AND(1921768955)))AND(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))), ((((((((vt0.c2)AND(vt0.c1)))OR(x'3c')))AND(vt0.c2 COLLATE RTRIM)))OR(CAST(vt0.c1 AS REAL))) DESC  NULLS FIRST, (((((x'eb37', NULL))>=((vt0.c2, x'a674')))) IS TRUE) ASC, (((- (vt0.c1))) NOT NULL)  NULLS FIRST LIMIT 2;
SELECT ALL COUNT(*) FROM t1 INDEXED BY i65 WHERE (((IFNULL(t1.c0, t1.c1))>=(CAST(t1.c0 AS TEXT)))) ORDER BY CASE WHEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN t1.c1 END ASC  NULLS LAST, NULL;
SELECT DISTINCT COUNT(*) FROM t1 INDEXED BY i65 WHERE (((((IFNULL(t1.c0, t1.c1))>=(CAST(t1.c0 AS TEXT))))AND(((((((((((CAST('' AS INTEGER))OR(((t1.c1)<=(t1.c0)))))AND(((t1.c1) NOTNULL))))OR(((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))))AND(((t1.c0)OR(0x729c764d)))))AND(t1.c1))))) ORDER BY CASE WHEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN t1.c1 END ASC  NULLS LAST, NULL INTERSECT SELECT DISTINCT COUNT(*) FROM t1 INDEXED BY i65 WHERE (((x'095d2362')GLOB((NOT (t1.c0))))) ORDER BY CASE WHEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN t1.c1 END ASC  NULLS LAST, NULL;
SELECT * FROM t1 WHERE ((((- (t1.c1))) BETWEEN (((((t1.c1)AND(t1.c1)))AND(t1.c1))) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))));
SELECT ALL * FROM t1 WHERE ((((((- (t1.c1))) BETWEEN (((((t1.c1)AND(t1.c1)))AND(t1.c1))) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))AND((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) IN ((+ (t1.c0))))))) LIMIT 3;
SELECT * FROM t1 WHERE ((((- (t1.c1))) BETWEEN (((((t1.c1)AND(t1.c1)))AND(t1.c1))) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))));
SELECT ALL * FROM t1 WHERE ((((((- (t1.c1))) BETWEEN (((((t1.c1)AND(t1.c1)))AND(t1.c1))) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))AND((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)) IN ((+ (t1.c0))))))) LIMIT 3;
SELECT ALL MIN(vt0.c2) FROM vt0 CROSS JOIN t1 ON (((vt0.c2 IN (vt0.c0, t1.c1))) BETWEEN ((~ (t1.c1))) AND ((~ (vt0.lid)))) WHERE (((((((((vt0.c2 COLLATE BINARY)OR(vt0.c2 COLLATE RTRIM)))AND(((vt0.c1)|(vt0.c2)))))AND(INSTR(vt0.c1, vt0.lid))))OR(t1.c1))) ORDER BY (((- (0.5204399450569723))) NOTNULL)  NULLS FIRST, TYPEOF(DISTINCT (((0.639817937886))<((vt0.lid)))) DESC;
SELECT DISTINCT MIN(vt0.c2) FROM vt0 CROSS JOIN t1 ON (((vt0.c2 IN (vt0.c0, t1.c1))) BETWEEN ((~ (t1.c1))) AND ((~ (vt0.lid)))) WHERE (((((((((vt0.c2 COLLATE BINARY)OR(vt0.c2 COLLATE RTRIM)))AND(((vt0.c1)|(vt0.c2)))))AND(INSTR(vt0.c1, vt0.lid))))OR(t1.c1))) ORDER BY CAST(vt0.c1 AS REAL) ASC, json_type(((t1.c0) IS TRUE))  NULLS LAST INTERSECT SELECT DISTINCT MIN(vt0.c2) FROM vt0 CROSS JOIN t1 ON (((vt0.c2 IN (vt0.c0, t1.c1))) BETWEEN ((~ (t1.c1))) AND ((~ (vt0.lid)))) WHERE (-1093352247) ORDER BY CAST(vt0.c1 AS REAL) ASC, json_type(((t1.c0) IS TRUE))  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((+ (t1.c0 COLLATE RTRIM)));
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((+ (t1.c0 COLLATE RTRIM))) LIMIT 0x1;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CAST(t1.c0 AS REAL)) NOTNULL)) ORDER BY CAST(((t1.c1)<(vt0.c2)) AS REAL)  NULLS LAST, CAST(((t1.c0)<=(0.0)) AS REAL) DESC  NULLS LAST, CASE (~ (vt0.c1))  WHEN vt0.lid THEN (((((('-257855733')OR(vt0.lid)))OR(vt0.c0)))AND(0.7946196781507643)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.9402734309523362)) THEN ((vt0.c1)AND(vt0.c1)) END DESC, (+ (highlight(465179858, vt0.c1, vt0.c0, t1.c1)))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE (((((CAST(t1.c0 AS REAL)) NOTNULL))AND((((NOT (t1.c0)))OR(((((((t1.c0)OR(t1.c0)))AND(vt0.c2)))OR(t1.c1))))))) ORDER BY CAST(((t1.c1)<(vt0.c2)) AS REAL)  NULLS LAST, CAST(((t1.c0)<=(0.0)) AS REAL) DESC  NULLS LAST, CASE (~ (vt0.c1))  WHEN vt0.lid THEN (((((('-257855733')OR(vt0.lid)))OR(vt0.c0)))AND(0.7946196781507643)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.9402734309523362)) THEN ((vt0.c1)AND(vt0.c1)) END DESC, (+ (highlight(0x1bba14d2, vt0.c1, vt0.c0, t1.c1)))  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE (((((((vt0.c0)<<(vt0.c2)))OR((t1.c0 IN (0.912192824856075)))))OR(CAST(vt0.c1 AS REAL)))) ORDER BY CAST(((t1.c1)<(vt0.c2)) AS REAL)  NULLS LAST, CAST(((t1.c0)<=(0.0)) AS REAL) DESC  NULLS LAST, CASE (~ (vt0.c1))  WHEN vt0.lid THEN (((((('-257855733')OR(vt0.lid)))OR(vt0.c0)))AND(0.7946196781507643)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.9402734309523362)) THEN ((vt0.c1)AND(vt0.c1)) END DESC, (+ (highlight(465179858, vt0.c1, vt0.c0, t1.c1)))  NULLS LAST;
SELECT ALL MAX(vt0.c2) FROM vt0, t1 WHERE (((TRIM(DISTINCT vt0.c0)) ISNULL));
SELECT MAX(vt0.c2) FROM vt0, t1 WHERE (((((TRIM(DISTINCT vt0.c0)) ISNULL))AND(((- (vt0.c0)) IN ())))) ORDER BY (((((t1.c1)AND(t1.c0)))OR(t1.c1)) IN (((('0.6151396006227638', vt0.c2)) NOT BETWEEN ((vt0.lid, vt0.lid)) AND ((vt0.c2, vt0.c1))))), (((vt0.c2 IN ())) NOT BETWEEN (NULL) AND ((~ (vt0.c1))))  NULLS LAST LIMIT 1 INTERSECT SELECT MAX(vt0.c2) FROM vt0, t1 WHERE (vt0.c2 COLLATE NOCASE) ORDER BY (((((t1.c1)AND(t1.c0)))OR(t1.c1)) IN (((('0.6151396006227638', vt0.c2)) NOT BETWEEN ((vt0.lid, vt0.lid)) AND ((vt0.c2, vt0.c1))))), (((vt0.c2 IN ())) NOT BETWEEN (NULL) AND ((~ (vt0.c1))))  NULLS LAST LIMIT 1;
SELECT ALL MAX(vt0.c0) FROM vt0, t1 WHERE (((((((((((vt0.lid)AND(((vt0.lid)<>(vt0.c1)))))AND(((NULL) BETWEEN (vt0.c0) AND (t1.c1)))))AND(((vt0.c1) NOTNULL))))OR(((vt0.c0)>(t1.c0)))))AND((t1.c0 IN (vt0.c2)))));
SELECT DISTINCT MAX(vt0.c0) FROM vt0, t1 WHERE (((((((((((((vt0.lid)AND(((vt0.lid)!=(vt0.c1)))))AND(((NULL) BETWEEN (vt0.c0) AND (t1.c1)))))AND(((vt0.c1) NOTNULL))))OR(((vt0.c0)>(t1.c0)))))AND((t1.c0 IN (vt0.c2)))))AND(((CAST(t1.c1 AS INTEGER))<<(vt0.lid COLLATE NOCASE))))) LIMIT 2;
SELECT ALL * FROM t1 WHERE (LIKELIHOOD(DISTINCT (((t1.c0, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, x'28', t1.c0, t1.c1)) AND ((t1.c0, t1.c1, t1.c1, t1.c1))), ((t1.c0)>>(t1.c1))));
SELECT ALL * FROM t1 WHERE (LIKELIHOOD(DISTINCT (((t1.c0, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, x'28', t1.c0, t1.c1)) AND ((t1.c0, t1.c1, t1.c1, t1.c1))), ((t1.c0)>>(t1.c1)))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (LIKELIHOOD(DISTINCT (((t1.c0, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, x'28', t1.c0, t1.c1)) AND ((t1.c0, t1.c1, t1.c1, t1.c1))), ((t1.c0)>>(t1.c1))));
SELECT * FROM t1 WHERE (('' IN (CAST(t1.c0 AS INTEGER)))) ORDER BY ((((t1.c1)<<(t1.c1))) NOT BETWEEN (CAST(t1.c0 AS REAL)) AND ('}')) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (('' IN (CAST(t1.c0 AS INTEGER)))) ORDER BY CASE t1.c1  WHEN (t1.c1 IN (t1.c0)) THEN (~ (t1.c0)) WHEN UNICODE(0X32031a2a) THEN ((t1.c1)GLOB(t1.c1)) ELSE (NOT (t1.c0)) END LIMIT 0;
SELECT * FROM t1 WHERE (('' IN (CAST(t1.c0 AS INTEGER)))) ORDER BY ((((t1.c1)<<(t1.c1))) NOT BETWEEN (CAST(t1.c0 AS REAL)) AND ('}')) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (('' IN (CAST(t1.c0 AS INTEGER)))) ORDER BY CASE t1.c1  WHEN (t1.c1 IN (t1.c0)) THEN (~ (t1.c0)) WHEN UNICODE(0X32031a2a) THEN ((t1.c1)GLOB(t1.c1)) ELSE (NOT (t1.c0)) END LIMIT 0;
SELECT * FROM vt0 NOT INDEXED WHERE ((((vt0.c1, vt0.lid)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c1 IN (vt0.lid)))) AND ((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c2)), (vt0.c1 IN ())))));
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, vt0.lid)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c1 IN (vt0.lid)))) AND ((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c2)), (vt0.c1 IN ())))))AND((- ('-1279868254'))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) IS FALSE))>((vt0.c2 IN ())))) LIMIT 0X1;
SELECT * FROM vt0 NOT INDEXED WHERE ((((vt0.c1, vt0.lid)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c1 IN (vt0.lid)))) AND ((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c2)), (vt0.c1 IN ())))));
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, vt0.lid)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c1 IN (vt0.lid)))) AND ((((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c2)), (vt0.c1 IN ())))))AND((- ('-1279868254'))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) IS FALSE))>((vt0.c2 IN ())))) LIMIT 0X1;
SELECT ALL * FROM vt0 WHERE (vt0.lid);
SELECT DISTINCT * FROM vt0 WHERE (((vt0.lid)AND(NULL))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) LIMIT 1;
SELECT ALL * FROM vt0 WHERE (vt0.lid);
SELECT DISTINCT * FROM vt0 WHERE (((vt0.lid)AND(NULL))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) LIMIT 1;
SELECT * FROM t1, vt0 WHERE (((((((t1.c0) NOTNULL))OR(t1.c1)))OR(((NULL)IS NOT(t1.c1))))) ORDER BY TYPEOF(((vt0.c0) BETWEEN (t1.c0) AND ('')))  NULLS LAST, HEX(DISTINCT CASE vt0.c2  WHEN t1.c0 THEN vt0.c2 ELSE vt0.c1 END);
SELECT DISTINCT * FROM t1, vt0 WHERE (((((((((t1.c0) NOTNULL))OR(t1.c1)))OR(((NULL)IS NOT(t1.c1)))))AND((t1.c0 IN (((0x40087fea) BETWEEN (vt0.c0) AND (t1.c0)), (- (vt0.c0))))))) ORDER BY TYPEOF(((vt0.c0) BETWEEN (t1.c0) AND ('')))  NULLS LAST, HEX(DISTINCT CASE vt0.c2  WHEN t1.c0 THEN vt0.c2 ELSE vt0.c1 END) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (vt0.lid COLLATE NOCASE) ORDER BY TYPEOF(((vt0.c0) BETWEEN (t1.c0) AND ('')))  NULLS LAST, HEX(DISTINCT CASE vt0.c2  WHEN t1.c0 THEN vt0.c2 ELSE vt0.c1 END) LIMIT 1;
SELECT * FROM t1, vt0 WHERE (((((((t1.c0) NOTNULL))OR(t1.c1)))OR(((NULL)IS NOT(t1.c1))))) ORDER BY TYPEOF(((vt0.c0) BETWEEN (t1.c0) AND ('')))  NULLS LAST, HEX(DISTINCT CASE vt0.c2  WHEN t1.c0 THEN vt0.c2 ELSE vt0.c1 END);
SELECT DISTINCT * FROM t1, vt0 WHERE (((((((((t1.c0) NOTNULL))OR(t1.c1)))OR(((NULL)IS NOT(t1.c1)))))AND((t1.c0 IN (((0x40087fea) BETWEEN (vt0.c0) AND (t1.c0)), (- (vt0.c0))))))) ORDER BY TYPEOF(((vt0.c0) BETWEEN (t1.c0) AND ('')))  NULLS LAST, HEX(DISTINCT CASE vt0.c2  WHEN t1.c0 THEN vt0.c2 ELSE vt0.c1 END) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (vt0.lid COLLATE NOCASE) ORDER BY TYPEOF(((vt0.c0) BETWEEN (t1.c0) AND ('')))  NULLS LAST, HEX(DISTINCT CASE vt0.c2  WHEN t1.c0 THEN vt0.c2 ELSE vt0.c1 END) LIMIT 1;
SELECT MIN(t1.c1) FROM t1 WHERE (CAST(NULL AS BLOB)) ORDER BY ((((((((t1.c0) IS TRUE))OR(t1.c1)))AND(((t1.c0)&(t1.c1)))))OR(CAST(t1.c0 AS NUMERIC))) ASC;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((CAST(NULL AS BLOB))AND(((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c1)))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND((((t1.c1, t1.c1)) BETWEEN ((t1.c0, '-1968898226')) AND ((t1.c0, '2ER#yz+)Q'))))))AND(((t1.c0)GLOB(t1.c0))))))) ORDER BY ((((((((t1.c0) IS TRUE))OR(t1.c1)))AND(((t1.c0)&(t1.c1)))))OR(CAST(t1.c0 AS NUMERIC))) ASC INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (CAST(x'1e' AS INTEGER)) ORDER BY ((((((((t1.c0) IS TRUE))OR(t1.c1)))AND(((t1.c0)&(t1.c1)))))OR(CAST(t1.c0 AS NUMERIC))) ASC;
SELECT * FROM t1 WHERE (((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), ((t1.c0)GLOB(t1.c0)), (t1.c0 IN ()), ((t1.c0)<(t1.c0))))>((((t1.c0)>(t1.c1)), (t1.c1 IN ()), (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))), ((t1.c1) IS FALSE))))) ORDER BY (((((((((t1.c0 IN (t1.c1)))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))AND((t1.c0 IN (t1.c1)))))AND((+ (t1.c1)))))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (NOT (CAST(t1.c1 AS TEXT)))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), ((t1.c0)GLOB(t1.c0)), (t1.c0 IN ()), ((t1.c0)<(t1.c0))))>((((t1.c0)>(t1.c1)), (t1.c1 IN ()), (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))), ((t1.c1) IS FALSE)))))AND(((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) NOT BETWEEN (TRIM(t1.c0, t1.c0)) AND ((t1.c0 IN (t1.c0, t1.c1))))))) ORDER BY (((((((((t1.c0 IN (t1.c1)))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))AND((t1.c0 IN (t1.c1)))))AND((+ (t1.c1)))))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (NOT (CAST(t1.c1 AS TEXT)))  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), ((t1.c0)GLOB(t1.c0)), (t1.c0 IN ()), ((t1.c0)<(t1.c0))))>((((t1.c0)>(t1.c1)), (t1.c1 IN ()), (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))), ((t1.c1) IS FALSE))))) ORDER BY (((((((((t1.c0 IN (t1.c1)))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))AND((t1.c0 IN (t1.c1)))))AND((+ (t1.c1)))))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (NOT (CAST(t1.c1 AS TEXT)))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), ((t1.c0)GLOB(t1.c0)), (t1.c0 IN ()), ((t1.c0)<(t1.c0))))>((((t1.c0)>(t1.c1)), (t1.c1 IN ()), (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c0))), ((t1.c1) IS FALSE)))))AND(((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) NOT BETWEEN (TRIM(t1.c0, t1.c0)) AND ((t1.c0 IN (t1.c0, t1.c1))))))) ORDER BY (((((((((t1.c0 IN (t1.c1)))AND(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))AND((t1.c0 IN (t1.c1)))))AND((+ (t1.c1)))))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (NOT (CAST(t1.c1 AS TEXT)))  NULLS FIRST LIMIT 0;
SELECT * FROM vt0, t1 WHERE (json_extract(vt0.lid COLLATE BINARY, t1.c0 COLLATE RTRIM)) ORDER BY '0.5758624582494263' DESC, 'g+' DESC  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (((json_extract(vt0.lid COLLATE BINARY, t1.c0 COLLATE RTRIM))AND(((t1.c1) NOT BETWEEN (((vt0.c0)OR(t1.c0))) AND (((((vt0.c1)OR(t1.c1)))OR(vt0.c2))))))) ORDER BY ((((vt0.lid) IS TRUE)) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN '?	v4' THEN t1.c1 WHEN vt0.c0 THEN t1.c1 WHEN vt0.c1 THEN t1.c1 ELSE t1.c1 END) AND (((t1.c1) BETWEEN (t1.c0) AND (vt0.c2))))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT ALL * FROM vt0, t1 WHERE (t1.c0 COLLATE RTRIM) ORDER BY ((((vt0.lid) IS TRUE)) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN '?	v4' THEN t1.c1 WHEN vt0.c0 THEN t1.c1 WHEN vt0.c1 THEN t1.c1 ELSE t1.c1 END) AND (((t1.c1) BETWEEN (t1.c0) AND (vt0.c2))))  NULLS FIRST LIMIT 0x1;
SELECT * FROM vt0, t1 WHERE (json_extract(vt0.lid COLLATE BINARY, t1.c0 COLLATE RTRIM)) ORDER BY '0.5758624582494263' DESC, 'g+' DESC  NULLS LAST;
SELECT ALL MAX(vt0.lid) FROM vt0 WHERE ((((((vt0.c2) BETWEEN (0.07330731955692837) AND (vt0.c1))))!=((vt0.c1)))) ORDER BY CASE WHEN ((vt0.c0)&(0.5077479336349903)) THEN ((vt0.lid) IS FALSE) WHEN vt0.c2 THEN NULL WHEN ((((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)))OR(vt0.c0)) THEN ((NULL)OR(vt0.lid)) ELSE ((vt0.c0)>>(vt0.c2)) END ASC  NULLS FIRST;
SELECT DISTINCT MAX(vt0.lid) FROM vt0 WHERE ((((((vt0.c2) BETWEEN (0.07330731955692837) AND (vt0.c1))))<((vt0.c1)))) ORDER BY ((vt0.lid COLLATE NOCASE) NOT BETWEEN (((((((((((vt0.lid)OR(vt0.c1)))OR(vt0.lid)))AND('-1969310803')))OR(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c1)))) ASC  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE (vt0.c0) ORDER BY (((((((- (x'6082')))OR((- (t1.c1)))))OR(((-1.182419834E9) NOT BETWEEN (t1.c0) AND (vt0.c1)))))AND(((vt0.c2)IS(vt0.c2)))) DESC;
SELECT ALL * FROM vt0, t1 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.lid)) THEN LIKELIHOOD(t1.c0, t1.c0) WHEN ((((((vt0.c0)OR(vt0.lid)))AND(t1.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((t1.c0) IS FALSE) THEN CAST(vt0.c2 AS BLOB) END DESC  NULLS LAST INTERSECT SELECT ALL * FROM vt0, t1 WHERE (((((((((vt0.c1)OR(vt0.lid)))OR((((t1.c0))<((vt0.c2))))))OR((((vt0.c1))>((vt0.c2))))))OR(CAST(vt0.lid AS NUMERIC)))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.lid)) THEN LIKELIHOOD(t1.c0, t1.c0) WHEN ((((((vt0.c0)OR(vt0.lid)))AND(t1.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((t1.c0) IS FALSE) THEN CAST(vt0.c2 AS BLOB) END DESC  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (vt0.c0) ORDER BY (((((((- (x'6082')))OR((- (t1.c1)))))OR(((-1.182419834E9) NOT BETWEEN (t1.c0) AND (vt0.c1)))))AND(((vt0.c2)IS(vt0.c2)))) DESC;
SELECT ALL * FROM vt0, t1 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.lid)) THEN LIKELIHOOD(t1.c0, t1.c0) WHEN ((((((vt0.c0)OR(vt0.lid)))AND(t1.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((t1.c0) IS FALSE) THEN CAST(vt0.c2 AS BLOB) END DESC  NULLS LAST INTERSECT SELECT ALL * FROM vt0, t1 WHERE (((((((((vt0.c1)OR(vt0.lid)))OR((((t1.c0))<((vt0.c2))))))OR((((vt0.c1))>((vt0.c2))))))OR(CAST(vt0.lid AS NUMERIC)))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.lid)) THEN LIKELIHOOD(t1.c0, t1.c0) WHEN ((((((vt0.c0)OR(vt0.lid)))AND(t1.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((t1.c0) IS FALSE) THEN CAST(vt0.c2 AS BLOB) END DESC  NULLS LAST;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((t1.c0 COLLATE RTRIM) ISNULL) WHERE ((((vt0.c1 IN (vt0.c0, t1.c0)))<>(((NULL) BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY CAST((((NULL))<((t1.c1))) AS NUMERIC) DESC;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((t1.c0 COLLATE RTRIM) ISNULL) WHERE ((((vt0.c1 IN (vt0.c0, t1.c0)))>(((NULL) BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY ((CASE WHEN vt0.c1 THEN t1.c1 ELSE vt0.c2 END)+(((t1.c1)<>(t1.c0)))) ASC  NULLS LAST, CAST(CASE vt0.c2  WHEN t1.c0 THEN vt0.c2 WHEN vt0.lid THEN vt0.c1 WHEN vt0.lid THEN t1.c1 WHEN t1.c0 THEN x'' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN t1.c0 END AS BLOB) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((t1.c0 COLLATE RTRIM) ISNULL) WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c1))), (((vt0.c1))>((t1.c1)))))>(((((vt0.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.lid)) AND ((t1.c0, vt0.c0))), CASE WHEN vt0.c1 THEN vt0.lid WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c2 ELSE vt0.c0 END)))) ORDER BY ((CASE WHEN vt0.c1 THEN t1.c1 ELSE vt0.c2 END)+(((t1.c1)<>(t1.c0)))) ASC  NULLS LAST, CAST(CASE vt0.c2  WHEN t1.c0 THEN vt0.c2 WHEN vt0.lid THEN vt0.c1 WHEN vt0.lid THEN t1.c1 WHEN t1.c0 THEN x'' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN t1.c0 END AS BLOB) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((t1.c0 COLLATE RTRIM) ISNULL) WHERE ((((vt0.c1 IN (vt0.c0, t1.c0)))<>(((NULL) BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY CAST((((NULL))<((t1.c1))) AS NUMERIC) DESC;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((t1.c0 COLLATE RTRIM) ISNULL) WHERE ((((vt0.c1 IN (vt0.c0, t1.c0)))>(((NULL) BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY ((CASE WHEN vt0.c1 THEN t1.c1 ELSE vt0.c2 END)+(((t1.c1)<>(t1.c0)))) ASC  NULLS LAST, CAST(CASE vt0.c2  WHEN t1.c0 THEN vt0.c2 WHEN vt0.lid THEN vt0.c1 WHEN vt0.lid THEN t1.c1 WHEN t1.c0 THEN x'' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN t1.c0 END AS BLOB) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((t1.c0 COLLATE RTRIM) ISNULL) WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c1))), (((vt0.c1))>((t1.c1)))))>(((((vt0.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.lid)) AND ((t1.c0, vt0.c0))), CASE WHEN vt0.c1 THEN vt0.lid WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c2 ELSE vt0.c0 END)))) ORDER BY ((CASE WHEN vt0.c1 THEN t1.c1 ELSE vt0.c2 END)+(((t1.c1)<>(t1.c0)))) ASC  NULLS LAST, CAST(CASE vt0.c2  WHEN t1.c0 THEN vt0.c2 WHEN vt0.lid THEN vt0.c1 WHEN vt0.lid THEN t1.c1 WHEN t1.c0 THEN x'' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN t1.c0 END AS BLOB) ASC  NULLS FIRST LIMIT 0;
SELECT MIN(t1.c1) FROM t1 WHERE (CAST((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) AS TEXT)) ORDER BY (COALESCE(t1.c0, t1.c1, t1.c1) IN ((((t1.c1, t1.c0, t1.c0))<(('''G', t1.c0, 0.9699628615163899)))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CAST((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) AS TEXT)) ORDER BY (COALESCE(t1.c0, t1.c1, t1.c1) IN ((((t1.c1, t1.c0, t1.c0))<(('''G', t1.c0, 0.9699628615163899)))));
SELECT * FROM vt0, t1 WHERE (CASE WHEN CASE t1.c0  WHEN vt0.lid THEN t1.c0 WHEN t1.c0 THEN vt0.c2 WHEN vt0.lid THEN 0.4349930766312966 WHEN x'3e' THEN vt0.lid END THEN vt0.lid WHEN (((vt0.c1))<=((vt0.lid))) THEN ((vt0.c0)GLOB('1271138618')) ELSE vt0.c2 COLLATE BINARY END) ORDER BY ((t1.c1)&(CASE 0.17832414539117492  WHEN vt0.c0 THEN -1112377873 WHEN t1.c0 THEN t1.c1 WHEN vt0.lid THEN vt0.c0 WHEN t1.c1 THEN t1.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (CASE WHEN CASE t1.c0  WHEN vt0.lid THEN t1.c0 WHEN t1.c0 THEN vt0.c2 WHEN vt0.lid THEN 0.4349930766312966 WHEN x'3e' THEN vt0.lid END THEN vt0.lid WHEN (((vt0.c1))<=((vt0.lid))) THEN ((vt0.c0)GLOB('1271138618')) ELSE vt0.c2 COLLATE BINARY END) ORDER BY ((CAST(vt0.lid AS REAL))>=((((vt0.c0, vt0.c0))>=((t1.c1, vt0.lid))))) DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((((LIKELY(DISTINCT NULL))AND(CAST(t1.c1 AS INTEGER))))AND(UNLIKELY(vt0.c2)))) ORDER BY ((CAST(vt0.lid AS REAL))>=((((vt0.c0, vt0.c0))>=((t1.c1, vt0.lid))))) DESC  NULLS LAST LIMIT 0X1;
SELECT * FROM vt0, t1 WHERE (CASE WHEN CASE t1.c0  WHEN vt0.lid THEN t1.c0 WHEN t1.c0 THEN vt0.c2 WHEN vt0.lid THEN 0.4349930766312966 WHEN x'3e' THEN vt0.lid END THEN vt0.lid WHEN (((vt0.c1))<=((vt0.lid))) THEN ((vt0.c0)GLOB('1271138618')) ELSE vt0.c2 COLLATE BINARY END) ORDER BY ((t1.c1)&(CASE 0.17832414539117492  WHEN vt0.c0 THEN -1112377873 WHEN t1.c0 THEN t1.c1 WHEN vt0.lid THEN vt0.c0 WHEN t1.c1 THEN t1.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (CASE WHEN CASE t1.c0  WHEN vt0.lid THEN t1.c0 WHEN t1.c0 THEN vt0.c2 WHEN vt0.lid THEN 0.4349930766312966 WHEN x'3e' THEN vt0.lid END THEN vt0.lid WHEN (((vt0.c1))<=((vt0.lid))) THEN ((vt0.c0)GLOB('1271138618')) ELSE vt0.c2 COLLATE BINARY END) ORDER BY ((CAST(vt0.lid AS REAL))>=((((vt0.c0, vt0.c0))>=((t1.c1, vt0.lid))))) DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((((LIKELY(DISTINCT NULL))AND(CAST(t1.c1 AS INTEGER))))AND(UNLIKELY(vt0.c2)))) ORDER BY ((CAST(vt0.lid AS REAL))>=((((vt0.c0, vt0.c0))>=((t1.c1, vt0.lid))))) DESC  NULLS LAST LIMIT 0X1;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (NOT (((((((((vt0.c2)AND(vt0.c0)))AND('')))OR(vt0.c0)))OR(NULL)))) WHERE (CASE WHEN LIKELY(DISTINCT vt0.c2) THEN vt0.c0 WHEN ((t1.c1) BETWEEN (vt0.lid) AND (t1.c0)) THEN (t1.c0 IN (vt0.c1)) END) ORDER BY vt0.c0 ASC;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN vt0 ON (NOT (((((((((vt0.c2)AND(vt0.c0)))AND('')))OR(vt0.c0)))OR(NULL)))) WHERE (((CASE WHEN LIKELY(DISTINCT vt0.c2) THEN vt0.c0 WHEN ((t1.c1) BETWEEN (vt0.lid) AND (t1.c0)) THEN (t1.c0 IN (vt0.c1)) END)AND(((CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN NULL WHEN vt0.c1 THEN t1.c0 END) IS FALSE)))) ORDER BY CAST((('-1064208416')<(NULL)) AS NUMERIC)  NULLS LAST, CAST(((t1.c0)>>(vt0.lid)) AS TEXT) ASC  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (NOT (((((((((vt0.c2)AND(vt0.c0)))AND('')))OR(vt0.c0)))OR(NULL)))) WHERE (CASE WHEN LIKELY(DISTINCT vt0.c2) THEN vt0.c0 WHEN ((t1.c1) BETWEEN (vt0.lid) AND (t1.c0)) THEN (t1.c0 IN (vt0.c1)) END) ORDER BY vt0.c0 ASC;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN vt0 ON (NOT (((((((((vt0.c2)AND(vt0.c0)))AND('')))OR(vt0.c0)))OR(NULL)))) WHERE (((CASE WHEN LIKELY(DISTINCT vt0.c2) THEN vt0.c0 WHEN ((t1.c1) BETWEEN (vt0.lid) AND (t1.c0)) THEN (t1.c0 IN (vt0.c1)) END)AND(((CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN NULL WHEN vt0.c1 THEN t1.c0 END) IS FALSE)))) ORDER BY CAST((('-1064208416')<(NULL)) AS NUMERIC)  NULLS LAST, CAST(((t1.c0)>>(vt0.lid)) AS TEXT) ASC  NULLS FIRST LIMIT 0x0;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)/(vt0.lid))) ORDER BY ((((0Xffffffff804c6e67)||(vt0.c2)))*((((vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, NULL, vt0.c0))))), CAST(CAST(vt0.lid AS REAL) AS REAL)  NULLS FIRST, (((+ (vt0.c2)))<>(((vt0.c0)<>(vt0.lid))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)/(vt0.lid))) ORDER BY ((((-2142474649)||(vt0.c2)))*((((vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, NULL, vt0.c0))))), CAST(CAST(vt0.lid AS REAL) AS REAL)  NULLS FIRST, (((+ (vt0.c2)))!=(((vt0.c0)!=(vt0.lid))))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) ORDER BY ((((0Xffffffff804c6e67)||(vt0.c2)))*((((vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, NULL, vt0.c0))))), CAST(CAST(vt0.lid AS REAL) AS REAL)  NULLS FIRST, (((+ (vt0.c2)))!=(((vt0.c0)!=(vt0.lid))))  NULLS FIRST LIMIT 0x1;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)/(vt0.lid))) ORDER BY ((((0Xffffffff804c6e67)||(vt0.c2)))*((((vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, NULL, vt0.c0))))), CAST(CAST(vt0.lid AS REAL) AS REAL)  NULLS FIRST, (((+ (vt0.c2)))<>(((vt0.c0)<>(vt0.lid))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)/(vt0.lid))) ORDER BY ((((-2142474649)||(vt0.c2)))*((((vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, NULL, vt0.c0))))), CAST(CAST(vt0.lid AS REAL) AS REAL)  NULLS FIRST, (((+ (vt0.c2)))!=(((vt0.c0)!=(vt0.lid))))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) ORDER BY ((((0Xffffffff804c6e67)||(vt0.c2)))*((((vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, NULL, vt0.c0))))), CAST(CAST(vt0.lid AS REAL) AS REAL)  NULLS FIRST, (((+ (vt0.c2)))!=(((vt0.c0)!=(vt0.lid))))  NULLS FIRST LIMIT 0x1;
SELECT MAX(t1.c0) FROM t1 WHERE (CAST('' AS TEXT));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (CAST('' AS TEXT));
SELECT ALL * FROM t1, vt0 WHERE (CASE vt0.c2  WHEN ((vt0.c2)-(vt0.c2)) THEN t1.c1 ELSE ((((((((((vt0.lid)OR(vt0.c2)))AND(vt0.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)) END);
SELECT DISTINCT * FROM t1, vt0 NOT INDEXED WHERE (((CASE vt0.c2  WHEN ((vt0.c2)-(vt0.c2)) THEN t1.c1 ELSE ((((((((((vt0.lid)OR(vt0.c2)))AND(vt0.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)) END)AND(CAST(((t1.c1) NOTNULL) AS REAL)))) LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (vt0.c0) LIMIT 3;
SELECT ALL * FROM t1, vt0 WHERE (CASE vt0.c2  WHEN ((vt0.c2)-(vt0.c2)) THEN t1.c1 ELSE ((((((((((vt0.lid)OR(vt0.c2)))AND(vt0.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)) END);
SELECT DISTINCT * FROM t1, vt0 NOT INDEXED WHERE (((CASE vt0.c2  WHEN ((vt0.c2)-(vt0.c2)) THEN t1.c1 ELSE ((((((((((vt0.lid)OR(vt0.c2)))AND(vt0.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)) END)AND(CAST(((t1.c1) NOTNULL) AS REAL)))) LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (vt0.c0) LIMIT 3;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((~ (((vt0.c0)<<('-977946708'))))) ORDER BY 0.49141583392326016 DESC, (((+ (vt0.lid))) BETWEEN ((~ (vt0.c0))) AND (x'bc'))  NULLS LAST;
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((((~ (((vt0.c0)<<('-977946708')))))AND(HEX((+ ('1369148192')))))) ORDER BY '-691442167' DESC, ((NULL)>=((((vt0.c1, '-1183151630')) NOT BETWEEN ((vt0.lid, vt0.c2)) AND ((vt0.c2, vt0.c0))))) DESC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((+ (((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY '-691442167' DESC, ((NULL)>=((((vt0.c1, '-1183151630')) NOT BETWEEN ((vt0.lid, vt0.c2)) AND ((vt0.c2, vt0.c0))))) DESC  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (UPPER(DISTINCT CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)) ORDER BY ((((t1.c1, t1.c1))<((t1.c0, t1.c0))) IN ((t1.c0 IN (t1.c1, t1.c1, t1.c0))))  NULLS LAST, (~ ((~ (t1.c0)))) ASC;
SELECT * FROM t1 WHERE (((UPPER(DISTINCT CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))AND(x''))) ORDER BY (((((t1.c1, 0Xffffffffc3490790)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c1))))OR(COALESCE(t1.c0, t1.c1, t1.c0)));
SELECT ALL * FROM t1 WHERE (UPPER(DISTINCT CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)) ORDER BY ((((t1.c1, t1.c1))<((t1.c0, t1.c0))) IN ((t1.c0 IN (t1.c1, t1.c1, t1.c0))))  NULLS LAST, (~ ((~ (t1.c0)))) ASC;
SELECT * FROM t1 WHERE (((UPPER(DISTINCT CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END))AND(x''))) ORDER BY (((((t1.c1, 0Xffffffffc3490790)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c1))))OR(COALESCE(t1.c0, t1.c1, t1.c0)));
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE ((t1.c0 IN ())) ORDER BY CASE WHEN CAST(vt0.c2 AS REAL) THEN CAST(t1.c1 AS REAL) WHEN t1.c0 COLLATE RTRIM THEN ((t1.c1)>(vt0.c1)) WHEN CASE WHEN t1.c0 THEN vt0.lid WHEN '202711714' THEN vt0.c2 WHEN 0X758c82d6 THEN vt0.c1 WHEN t1.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (+ (vt0.lid)) WHEN ((vt0.lid)&(t1.c0)) THEN CASE t1.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.lid WHEN '-1717347628' THEN vt0.c1 ELSE '/R!' END ELSE ((t1.c0) NOTNULL) END, 0.05036455809364471 DESC;
SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE ((t1.c0 IN ())) ORDER BY CASE WHEN CAST(vt0.c2 AS REAL) THEN CAST(t1.c1 AS REAL) WHEN t1.c0 COLLATE RTRIM THEN ((t1.c1)>(vt0.c1)) WHEN CASE WHEN t1.c0 THEN vt0.lid WHEN '202711714' THEN vt0.c2 WHEN 0X758c82d6 THEN vt0.c1 WHEN t1.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (+ (vt0.lid)) WHEN ((vt0.lid)&(t1.c0)) THEN CASE t1.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.lid WHEN '-1717347628' THEN vt0.c1 ELSE '/R!' END ELSE ((t1.c0) NOTNULL) END, 0.05036455809364471 DESC;
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE ((t1.c0 IN ())) ORDER BY CASE WHEN CAST(vt0.c2 AS REAL) THEN CAST(t1.c1 AS REAL) WHEN t1.c0 COLLATE RTRIM THEN ((t1.c1)>(vt0.c1)) WHEN CASE WHEN t1.c0 THEN vt0.lid WHEN '202711714' THEN vt0.c2 WHEN 0X758c82d6 THEN vt0.c1 WHEN t1.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (+ (vt0.lid)) WHEN ((vt0.lid)&(t1.c0)) THEN CASE t1.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.lid WHEN '-1717347628' THEN vt0.c1 ELSE '/R!' END ELSE ((t1.c0) NOTNULL) END, 0.05036455809364471 DESC;
SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE ((t1.c0 IN ())) ORDER BY CASE WHEN CAST(vt0.c2 AS REAL) THEN CAST(t1.c1 AS REAL) WHEN t1.c0 COLLATE RTRIM THEN ((t1.c1)>(vt0.c1)) WHEN CASE WHEN t1.c0 THEN vt0.lid WHEN '202711714' THEN vt0.c2 WHEN 0X758c82d6 THEN vt0.c1 WHEN t1.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (+ (vt0.lid)) WHEN ((vt0.lid)&(t1.c0)) THEN CASE t1.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.lid WHEN '-1717347628' THEN vt0.c1 ELSE '/R!' END ELSE ((t1.c0) NOTNULL) END, 0.05036455809364471 DESC;
SELECT * FROM t1, vt0 WHERE ((((vt0.lid IN (vt0.c2))) BETWEEN (CASE WHEN x'7d' THEN t1.c1 END) AND (((t1.c0) NOTNULL)))) ORDER BY ((((((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))AND(CAST(vt0.lid AS REAL))))AND(CASE vt0.c0  WHEN vt0.lid THEN t1.c1 END)))OR(CASE WHEN t1.c0 THEN NULL ELSE vt0.c2 END)))OR((t1.c1 IN ())))  NULLS LAST, vt0.c2 ASC;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((vt0.lid IN (vt0.c2))) BETWEEN (CASE WHEN x'7d' THEN t1.c1 END) AND (((t1.c0) NOTNULL)))) ORDER BY t1.c0  NULLS FIRST, vt0.lid, CASE WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c1)<=(vt0.c0)) ELSE CAST(t1.c0 AS BLOB) END;
SELECT * FROM t1, vt0 WHERE ((((vt0.lid IN (vt0.c2))) BETWEEN (CASE WHEN x'7d' THEN t1.c1 END) AND (((t1.c0) NOTNULL)))) ORDER BY ((((((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))AND(CAST(vt0.lid AS REAL))))AND(CASE vt0.c0  WHEN vt0.lid THEN t1.c1 END)))OR(CASE WHEN t1.c0 THEN NULL ELSE vt0.c2 END)))OR((t1.c1 IN ())))  NULLS LAST, vt0.c2 ASC;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((vt0.lid IN (vt0.c2))) BETWEEN (CASE WHEN x'7d' THEN t1.c1 END) AND (((t1.c0) NOTNULL)))) ORDER BY t1.c0  NULLS FIRST, vt0.lid, CASE WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c1)<=(vt0.c0)) ELSE CAST(t1.c0 AS BLOB) END;
SELECT ALL MIN(vt0.c2) FROM t1, vt0 WHERE ((CAST(vt0.lid AS INTEGER) IN (t1.c1 COLLATE NOCASE)));
SELECT MIN(vt0.c2) FROM t1, vt0 WHERE ((((CAST(vt0.lid AS INTEGER) IN (t1.c1 COLLATE NOCASE)))AND(0.6684059711702802))) ORDER BY (((CAST(vt0.c1 AS TEXT), ((vt0.lid)>(vt0.c2)), t1.c1, CAST(t1.c1 AS INTEGER)))!=(((t1.c1 IN (vt0.c2)), (vt0.c1 IN ()), ABS(DISTINCT vt0.c2), (t1.c0 IN ())))), CAST(((((((((((1.7976931348623157E308)AND(vt0.c0)))AND(vt0.lid)))AND(t1.c0)))AND(vt0.c1)))OR(t1.c1)) AS REAL) INTERSECT SELECT ALL MIN(vt0.c2) FROM t1, vt0 WHERE (((CASE vt0.c2  WHEN t1.c1 THEN vt0.c1 END)<<(IFNULL(vt0.lid, vt0.c2)))) ORDER BY (((CAST(vt0.c1 AS TEXT), ((vt0.lid)>(vt0.c2)), t1.c1, CAST(t1.c1 AS INTEGER)))<>(((t1.c1 IN (vt0.c2)), (vt0.c1 IN ()), ABS(DISTINCT vt0.c2), (t1.c0 IN ())))), CAST(((((((((((1.7976931348623157E308)AND(vt0.c0)))AND(vt0.lid)))AND(t1.c0)))AND(vt0.c1)))OR(t1.c1)) AS REAL);
SELECT MIN(vt0.c1) FROM vt0 NATURAL JOIN t1 WHERE ((((vt0.c0)IS(t1.c1)) IN (((t1.c0) ISNULL))));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 NATURAL JOIN t1 WHERE ((((vt0.c0)IS(t1.c1)) IN (((t1.c0) ISNULL)))) LIMIT 0;
SELECT MAX(t1.c0) FROM t1 WHERE (((((t1.c1)>=(t1.c1))) IS TRUE));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((t1.c1)>(t1.c1))) IS TRUE))AND((((t1.c0) NOT NULL) IN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), (((t1.c0, t1.c0))<=((NULL, NULL))), ((((t1.c1)AND(t1.c1)))OR(t1.c0))))))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((('r(')<>(t1.c0))) NOT NULL)) LIMIT 0x0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((CAST(t1.c1 AS BLOB), CAST(t1.c0 AS BLOB)))<((CAST(t1.c1 AS BLOB), ((t1.c1) BETWEEN (t1.c1) AND (NULL)))))) ORDER BY NULL;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((CAST(t1.c1 AS BLOB), CAST(t1.c0 AS BLOB)))<((CAST(t1.c1 AS BLOB), ((t1.c1) BETWEEN (t1.c1) AND (NULL)))))) ORDER BY NULL;
SELECT * FROM vt0 WHERE (((vt0.c0)<<((- (vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)<<((- (vt0.c0)))))AND((((vt0.c0, '1668980540', vt0.c0, vt0.lid)) NOT BETWEEN ((((vt0.c1)>>(vt0.c2)), LIKELY(vt0.lid), (((vt0.c1, vt0.c1))>=((vt0.c2, vt0.c1))), (((vt0.c1, NULL, x''))=((vt0.c1, vt0.c1, vt0.lid))))) AND ((CASE vt0.lid  WHEN vt0.lid THEN vt0.c2 END, (~ (vt0.c2)), (vt0.c1 IN ()), vt0.c2)))))) ORDER BY (NOT (((vt0.c2) IS FALSE))) LIMIT 0x1;
SELECT * FROM vt0 WHERE (((vt0.c0)<<((- (vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)<<((- (vt0.c0)))))AND((((vt0.c0, '1668980540', vt0.c0, vt0.lid)) NOT BETWEEN ((((vt0.c1)>>(vt0.c2)), LIKELY(vt0.lid), (((vt0.c1, vt0.c1))>=((vt0.c2, vt0.c1))), (((vt0.c1, NULL, x''))=((vt0.c1, vt0.c1, vt0.lid))))) AND ((CASE vt0.lid  WHEN vt0.lid THEN vt0.c2 END, (~ (vt0.c2)), (vt0.c1 IN ()), vt0.c2)))))) ORDER BY (NOT (((vt0.c2) IS FALSE))) LIMIT 0x1;
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.lid)))));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.lid)))))AND(''))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN vt0.c1 END ASC  NULLS LAST, CASE (('Tk') BETWEEN (vt0.c1) AND (vt0.c0))  WHEN 0.22005395378649784 THEN CAST(vt0.c0 AS INTEGER) WHEN (((vt0.c0))>((vt0.lid))) THEN vt0.lid END DESC, (((((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)) IN (((vt0.c0)<(x'ce8f')))) DESC LIMIT 0x1;
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.lid)))));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.lid)))))AND(''))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN vt0.c1 END ASC  NULLS LAST, CASE (('Tk') BETWEEN (vt0.c1) AND (vt0.c0))  WHEN 0.22005395378649784 THEN CAST(vt0.c0 AS INTEGER) WHEN (((vt0.c0))>((vt0.lid))) THEN vt0.lid END DESC, (((((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)) IN (((vt0.c0)<(x'ce8f')))) DESC LIMIT 0x1;
SELECT MIN(vt0.c1) FROM vt0, t1 WHERE (((((vt0.lid)>>(vt0.c0))) IS FALSE)) ORDER BY (((((((((((((((vt0.lid IN (vt0.c2)))AND(((((vt0.c0)OR(vt0.c2)))AND(vt0.c2)))))OR(((vt0.lid) IS TRUE))))AND(((t1.c0)LIKE(t1.c1)))))AND(((t1.c1) NOT BETWEEN ('251577193') AND (t1.c0)))))AND(CASE vt0.c1  WHEN vt0.lid THEN t1.c1 END)))OR(6.22281424E8)))OR(TRIM(vt0.lid, 9.223372036854776E18)))  NULLS LAST, ((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) IN (CAST(vt0.c2 AS BLOB), ((t1.c0)&(vt0.c1)), CAST(t1.c1 AS BLOB)))  NULLS LAST;
SELECT DISTINCT MIN(vt0.c1) FROM vt0, t1 WHERE (((((((vt0.lid)>>(vt0.c0))) IS FALSE))AND(CASE WHEN CASE WHEN t1.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.lid END THEN NULL WHEN CAST(vt0.c0 AS INTEGER) THEN x'aa' END))) ORDER BY ((((('!
ur', vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((vt0.lid, t1.c0, t1.c1, vt0.c1)) AND ((vt0.c2, vt0.c0, t1.c1, vt0.c2))))/('﵈B')) DESC  NULLS FIRST, CAST(t1.c0 AS TEXT) COLLATE BINARY DESC, ((((vt0.c1 IN (vt0.c0))))<=((((t1.c1) NOT BETWEEN (vt0.c0) AND (t1.c1)))))  NULLS LAST INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0, t1 WHERE (LIKELIHOOD(DISTINCT CAST(vt0.lid AS BLOB), t1.c0 COLLATE NOCASE)) ORDER BY ((((('!
ur', vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((vt0.lid, t1.c0, t1.c1, vt0.c1)) AND ((vt0.c2, vt0.c0, t1.c1, vt0.c2))))/('﵈B')) DESC  NULLS FIRST, CAST(t1.c0 AS TEXT) COLLATE BINARY DESC, ((((vt0.c1 IN (vt0.c0))))<=((((t1.c1) NOT BETWEEN (vt0.c0) AND (t1.c1)))))  NULLS LAST;
SELECT MIN(t1.c0) FROM vt0, t1 NOT INDEXED WHERE ((((((vt0.c0) IS TRUE)))>((CASE vt0.c2  WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END))));
SELECT DISTINCT MIN(t1.c0) FROM vt0, t1 WHERE ((((((((vt0.c0) IS TRUE)))>((CASE vt0.c2  WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END))))AND((((UPPER(DISTINCT '8')))<((CAST(vt0.lid AS TEXT))))))) ORDER BY ((vt0.c2 IN (vt0.c1)) IN (((t1.c0)%(vt0.c2)), ((vt0.c0)%(vt0.c2)), (((t1.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c2)) AND ((t1.c1, vt0.c1))))) ASC  NULLS FIRST, (CAST(vt0.c0 AS REAL) IN ((((t1.c0))>((vt0.c0))))) DESC  NULLS LAST, ((((((((t1.c1) BETWEEN (vt0.lid) AND (vt0.c1)))AND(((t1.c1)LIKE(vt0.lid)))))OR(-6.64918544E8)))AND(CASE vt0.c0  WHEN NULL THEN t1.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.lid END)) INTERSECT SELECT DISTINCT MIN(t1.c0) FROM vt0, t1 WHERE (json_extract((vt0.c2 IN ()), ((NULL) IS FALSE))) ORDER BY ((vt0.c2 IN (vt0.c1)) IN (((t1.c0)%(vt0.c2)), ((vt0.c0)%(vt0.c2)), (((t1.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c2)) AND ((t1.c1, vt0.c1))))) ASC  NULLS FIRST, (CAST(vt0.c0 AS REAL) IN ((((t1.c0))>((vt0.c0))))) DESC  NULLS LAST, ((((((((t1.c1) BETWEEN (vt0.lid) AND (vt0.c1)))AND(((t1.c1)LIKE(vt0.lid)))))OR(-6.64918544E8)))AND(CASE vt0.c0  WHEN NULL THEN t1.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.lid END));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((x'')*((~ (t1.c0))))) ORDER BY (((((((((t1.c1)OR(t1.c0)))OR(0xffffffffccd54d03)))OR(x'43')), LOWER(t1.c1)))>((((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)), TRIM(t1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((x'')*((~ (t1.c0)))))AND((NOT (((t1.c0)LIKE(t1.c1))))))) ORDER BY (((((((((t1.c1)OR(t1.c0)))OR(-858436349)))OR(x'43')), LOWER(t1.c1)))>((((((((((((t1.c1)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c1)))OR(t1.c0)), TRIM(t1.c0)))) ASC  NULLS FIRST;
SELECT ALL MIN(vt0.lid) FROM t1, vt0 WHERE ((((t1.c1 IN (vt0.c2)))==(((('Ih', t1.c1, vt0.c2, t1.c1, vt0.c0, vt0.c1, t1.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, t1.c0, vt0.lid, vt0.c0, vt0.c0, 0.8001671472388618)) AND ((t1.c0, vt0.lid, vt0.c0, t1.c1, t1.c0, vt0.c0, vt0.c2)))))) ORDER BY ((TRIM(t1.c1)) IS TRUE)  NULLS FIRST, ((((vt0.c1, t1.c0, vt0.c0, vt0.c2)) BETWEEN ((x'509192', vt0.c2, vt0.c1, vt0.c0)) AND ((t1.c0, vt0.c1, vt0.c1, vt0.lid))) IN ()) DESC  NULLS LAST, (((t1.c0 COLLATE BINARY, 2075573172))<=((((vt0.c0)%(vt0.lid)), LOWER(t1.c1))));
SELECT MIN(vt0.lid) FROM t1, vt0 WHERE ((((((t1.c1 IN (vt0.c2)))=(((('Ih', t1.c1, vt0.c2, t1.c1, vt0.c0, vt0.c1, t1.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, t1.c0, vt0.lid, vt0.c0, vt0.c0, 0.8001671472388618)) AND ((t1.c0, vt0.lid, vt0.c0, t1.c1, t1.c0, vt0.c0, vt0.c2))))))AND(((((LIKELIHOOD(DISTINCT vt0.c2, x'0b202c'))AND(((vt0.c0)<(vt0.c1)))))OR(CAST(vt0.c0 AS REAL)))))) ORDER BY ((TRIM(t1.c1)) IS TRUE)  NULLS FIRST, ((((vt0.c1, t1.c0, vt0.c0, vt0.c2)) BETWEEN ((x'509192', vt0.c2, vt0.c1, vt0.c0)) AND ((t1.c0, vt0.c1, vt0.c1, vt0.lid))) IN ()) DESC  NULLS LAST, (((t1.c0 COLLATE BINARY, 2075573172))<=((((vt0.c0)%(vt0.lid)), LOWER(t1.c1)))) LIMIT 0X1 INTERSECT SELECT MIN(vt0.lid) FROM t1, vt0 WHERE (CAST(ABS(t1.c1) AS NUMERIC)) ORDER BY ((TRIM(t1.c1)) IS TRUE)  NULLS FIRST, ((((vt0.c1, t1.c0, vt0.c0, vt0.c2)) BETWEEN ((x'509192', vt0.c2, vt0.c1, vt0.c0)) AND ((t1.c0, vt0.c1, vt0.c1, vt0.lid))) IN ()) DESC  NULLS LAST, (((t1.c0 COLLATE BINARY, 0X7bb6bbb4))<=((((vt0.c0)%(vt0.lid)), LOWER(t1.c1)))) LIMIT 0X1;
SELECT MIN(vt0.c2) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) ORDER BY (CASE WHEN NULL THEN vt0.lid WHEN '-1868235924' THEN vt0.c1 ELSE vt0.lid END IN (vt0.lid COLLATE NOCASE)) DESC, ((((((vt0.c2) NOT BETWEEN (x'') AND (vt0.c2)))AND(((vt0.lid)>=('-1275847162')))))OR(((vt0.lid) IS FALSE))) ASC;
SELECT ALL MIN(vt0.c2) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.5840938597891613 WHEN vt0.lid THEN '-1080574975' ELSE vt0.c2 END IN (((((vt0.c2)AND(vt0.lid)))AND(vt0.lid)))) DESC  NULLS FIRST, vt0.c1 ASC LIMIT 0 INTERSECT SELECT ALL MIN(vt0.c2) FROM vt0 WHERE (CAST((((-1602223800, 'FALSE', vt0.c0))>((vt0.c2, vt0.c2, vt0.c2))) AS INTEGER)) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.5840938597891613 WHEN vt0.lid THEN '-1080574975' ELSE vt0.c2 END IN (((((vt0.c2)AND(vt0.lid)))AND(vt0.lid)))) DESC  NULLS FIRST, vt0.c1 ASC LIMIT 0x0;
SELECT ALL MIN(vt0.c2) FROM vt0, t1 WHERE (((vt0.c2 COLLATE RTRIM) BETWEEN ('23235364') AND (((t1.c1) BETWEEN (vt0.c2) AND ('-1093370908')))));
SELECT MIN(vt0.c2) FROM vt0, t1 WHERE (((vt0.c2 COLLATE RTRIM) BETWEEN ('23235364') AND (((t1.c1) BETWEEN (vt0.c2) AND ('-1093370908'))))) INTERSECT SELECT MIN(vt0.c2) FROM vt0, t1 WHERE (((t1.c0 IN ()) IN ()));
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c2)) AS BLOB));
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c2)) AS BLOB)) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c2) NOTNULL))) AND ((CAST(vt0.c1 AS TEXT)))) INTERSECT SELECT * FROM vt0 WHERE (CAST(x'81' AS NUMERIC)) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c2) NOTNULL))) AND ((CAST(vt0.c1 AS TEXT))));
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c2)) AS BLOB));
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c2)) AS BLOB)) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c2) NOTNULL))) AND ((CAST(vt0.c1 AS TEXT)))) INTERSECT SELECT * FROM vt0 WHERE (CAST(x'81' AS NUMERIC)) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c2) NOTNULL))) AND ((CAST(vt0.c1 AS TEXT))));
SELECT ALL * FROM t1 WHERE (((CAST('0.022960271538790655' AS NUMERIC)) BETWEEN (((t1.c0)+(x''))) AND (t1.c0)));
SELECT * FROM t1 WHERE (((((CAST('0.022960271538790655' AS NUMERIC)) BETWEEN (((t1.c0)+(x''))) AND (t1.c0)))AND(CAST(((t1.c0)GLOB(t1.c1)) AS REAL)))) INTERSECT SELECT ALL * FROM t1 WHERE ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 END IN (((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))));
SELECT ALL * FROM t1 WHERE (((CAST('0.022960271538790655' AS NUMERIC)) BETWEEN (((t1.c0)+(x''))) AND (t1.c0)));
SELECT * FROM t1 WHERE (((((CAST('0.022960271538790655' AS NUMERIC)) BETWEEN (((t1.c0)+(x''))) AND (t1.c0)))AND(CAST(((t1.c0)GLOB(t1.c1)) AS REAL)))) INTERSECT SELECT ALL * FROM t1 WHERE ((CASE t1.c0  WHEN t1.c1 THEN t1.c0 END IN (((((((t1.c1)OR(t1.c1)))AND(t1.c0)))OR(t1.c0)))));
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (t1.c1) ORDER BY NULLIF(((((NULL)AND(t1.c1)))AND(t1.c1)), HEX(DISTINCT t1.c0));
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (t1.c1) ORDER BY (((+ (t1.c0)))==(vt0.c2 COLLATE BINARY)) LIMIT 4 INTERSECT SELECT * FROM vt0 NATURAL JOIN t1 WHERE (((((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c2))) NOTNULL)) ORDER BY (((+ (t1.c0)))==(vt0.c2 COLLATE BINARY)) LIMIT 4;
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (t1.c1) ORDER BY NULLIF(((((NULL)AND(t1.c1)))AND(t1.c1)), HEX(DISTINCT t1.c0));
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (t1.c1) ORDER BY (((+ (t1.c0)))==(vt0.c2 COLLATE BINARY)) LIMIT 4 INTERSECT SELECT * FROM vt0 NATURAL JOIN t1 WHERE (((((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c2))) NOTNULL)) ORDER BY (((+ (t1.c0)))==(vt0.c2 COLLATE BINARY)) LIMIT 4;
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.lid)) AS INTEGER)) ORDER BY IFNULL(DISTINCT LTRIM(vt0.c1), x'02be4a') ASC  NULLS FIRST, (((((((- (vt0.c0)))OR(((vt0.c1)<<(vt0.c0)))))OR(((vt0.c1)>>(x'')))))OR(((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))), (~ ((((vt0.c2)) NOT BETWEEN ((0.48308088724813947)) AND ((NULL))))) DESC  NULLS LAST, CAST(x'' AS NUMERIC) ASC, (((vt0.c1 IN (vt0.c1, vt0.c0))) BETWEEN (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt0.lid))  NULLS LAST;
SELECT * FROM vt0 WHERE (((CAST((vt0.c1 IN (vt0.lid)) AS INTEGER))AND(((((((vt0.c1, vt0.c1))<=((vt0.lid, vt0.lid))), (((vt0.c2, vt0.c0, vt0.lid, vt0.lid, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.lid, vt0.c1, vt0.c0, vt0.c2, vt0.c2))), (vt0.c1 IN (vt0.c2))))<=((CAST('nanꩅ' AS REAL), ((0.26656429917086144)%(vt0.c1)), ((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))))) ORDER BY IFNULL(DISTINCT LTRIM(vt0.c1), x'02be4a') ASC  NULLS FIRST, (((((((- (vt0.c0)))OR(((vt0.c1)<<(vt0.c0)))))OR(((vt0.c1)>>(x'')))))OR(((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))), (~ ((((vt0.c2)) NOT BETWEEN ((0.48308088724813947)) AND ((NULL))))) DESC  NULLS LAST, CAST(x'' AS NUMERIC) ASC, (((vt0.c1 IN (vt0.c1, vt0.c0))) BETWEEN (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt0.lid))  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.lid)) AS INTEGER)) ORDER BY IFNULL(DISTINCT LTRIM(vt0.c1), x'02be4a') ASC  NULLS FIRST, (((((((- (vt0.c0)))OR(((vt0.c1)<<(vt0.c0)))))OR(((vt0.c1)>>(x'')))))OR(((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))), (~ ((((vt0.c2)) NOT BETWEEN ((0.48308088724813947)) AND ((NULL))))) DESC  NULLS LAST, CAST(x'' AS NUMERIC) ASC, (((vt0.c1 IN (vt0.c1, vt0.c0))) BETWEEN (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt0.lid))  NULLS LAST;
SELECT * FROM vt0 WHERE (((CAST((vt0.c1 IN (vt0.lid)) AS INTEGER))AND(((((((vt0.c1, vt0.c1))<=((vt0.lid, vt0.lid))), (((vt0.c2, vt0.c0, vt0.lid, vt0.lid, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.lid, vt0.c1, vt0.c0, vt0.c2, vt0.c2))), (vt0.c1 IN (vt0.c2))))<=((CAST('nanꩅ' AS REAL), ((0.26656429917086144)%(vt0.c1)), ((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))))) ORDER BY IFNULL(DISTINCT LTRIM(vt0.c1), x'02be4a') ASC  NULLS FIRST, (((((((- (vt0.c0)))OR(((vt0.c1)<<(vt0.c0)))))OR(((vt0.c1)>>(x'')))))OR(((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))), (~ ((((vt0.c2)) NOT BETWEEN ((0.48308088724813947)) AND ((NULL))))) DESC  NULLS LAST, CAST(x'' AS NUMERIC) ASC, (((vt0.c1 IN (vt0.c1, vt0.c0))) BETWEEN (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt0.lid))  NULLS LAST;
SELECT ALL MIN(vt0.lid) FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.lid THEN vt0.c2 END))) ORDER BY RTRIM(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 END) ASC, ((x'5c') BETWEEN (vt0.lid COLLATE NOCASE) AND (((vt0.c0) IS TRUE)))  NULLS LAST, (vt0.c0 IN (((((((vt0.lid)AND(vt0.c1)))AND(vt0.lid)))OR(vt0.c0))))  NULLS FIRST;
SELECT MIN(vt0.lid) FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.lid THEN vt0.c2 END))) ORDER BY RTRIM(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 END) ASC, ((x'5c') BETWEEN (vt0.lid COLLATE NOCASE) AND (((vt0.c0) IS TRUE)))  NULLS LAST, (vt0.c0 IN (((((((vt0.lid)AND(vt0.c1)))AND(vt0.lid)))OR(vt0.c0))))  NULLS FIRST INTERSECT SELECT MIN(vt0.lid) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((vt0.lid) NOTNULL))))AND((vt0.c2 IN (vt0.lid))))) ORDER BY RTRIM(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 END) ASC, ((x'5c') BETWEEN (vt0.lid COLLATE NOCASE) AND (((vt0.c0) IS TRUE)))  NULLS LAST, (vt0.c0 IN (((((((vt0.lid)AND(vt0.c1)))AND(vt0.lid)))OR(vt0.c0))))  NULLS FIRST;
SELECT MAX(vt0.c0) FROM t1, vt0 WHERE (((((vt0.c2) NOT BETWEEN (t1.c0) AND ('?')))LIKE(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END))) ORDER BY ((HEX(DISTINCT vt0.c1))*(((vt0.lid) NOT BETWEEN (t1.c0) AND (x'')))) DESC;
SELECT DISTINCT MAX(vt0.c0) FROM t1, vt0 WHERE (((((((vt0.c2) NOT BETWEEN (t1.c0) AND ('?')))LIKE(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)))AND(((t1.c1)||(vt0.c2)) COLLATE BINARY))) ORDER BY INSTR(x'09', ((vt0.c2)>(vt0.lid)))  NULLS LAST, ((0.5341210406602571)=((~ (vt0.c0)))) DESC  NULLS FIRST, CAST(((t1.c1) BETWEEN (vt0.lid) AND (t1.c0)) AS INTEGER)  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c1);
SELECT * FROM t1 WHERE (((t1.c1)AND(t1.c0))) ORDER BY (((((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((0xffffffff815c7537, -1093352247)))) IS FALSE) ASC, CASE WHEN PRINTF(t1.c0, t1.c1, t1.c0, t1.c0) THEN CAST(0Xffffffff91404042 AS NUMERIC) WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN 0.9383035280993056 END THEN json_quote(t1.c1) ELSE ((t1.c0) NOT NULL) END ASC LIMIT 0X1;
SELECT * FROM t1 WHERE (t1.c1);
SELECT * FROM t1 WHERE (((t1.c1)AND(t1.c0))) ORDER BY (((((t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((0xffffffff815c7537, -1093352247)))) IS FALSE) ASC, CASE WHEN PRINTF(t1.c0, t1.c1, t1.c0, t1.c0) THEN CAST(0Xffffffff91404042 AS NUMERIC) WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN 0.9383035280993056 END THEN json_quote(t1.c1) ELSE ((t1.c0) NOT NULL) END ASC LIMIT 0X1;
SELECT ALL * FROM t1 NOT INDEXED WHERE (((0.1897016821287314) BETWEEN ((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))) AND (((t1.c0)/(t1.c0))))) ORDER BY ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))!=(t1.c1 COLLATE NOCASE)) DESC, '1074298858' DESC, ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c1)*(t1.c0)))))OR(((t1.c0) IS TRUE))) DESC;
SELECT ALL * FROM t1 WHERE (((0.1897016821287314) BETWEEN ((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))) AND (((t1.c0)/(t1.c0))))) ORDER BY (((t1.c0 IN ()))||(t1.c1 COLLATE RTRIM)) LIMIT 0X3;
SELECT ALL * FROM t1 NOT INDEXED WHERE (((0.1897016821287314) BETWEEN ((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))) AND (((t1.c0)/(t1.c0))))) ORDER BY ((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))!=(t1.c1 COLLATE NOCASE)) DESC, '1074298858' DESC, ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))AND(((t1.c1)*(t1.c0)))))OR(((t1.c0) IS TRUE))) DESC;
SELECT ALL * FROM t1 WHERE (((0.1897016821287314) BETWEEN ((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))) AND (((t1.c0)/(t1.c0))))) ORDER BY (((t1.c0 IN ()))||(t1.c1 COLLATE RTRIM)) LIMIT 0X3;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((~ (t1.c0)) COLLATE NOCASE) ORDER BY ((((((((((((TRIM(t1.c1, t1.c1))OR(CAST(t1.c0 AS REAL))))AND(((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))))OR(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE NULL END)))AND(t1.c1)))AND((- (t1.c1)))))AND(((t1.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((~ (t1.c0)) COLLATE NOCASE) ORDER BY CASE WHEN (t1.c1 IN (t1.c0)) THEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) END ASC, (((CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE -1993536982 END, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))>((((NULL) IS TRUE), ((t1.c1) NOT NULL))))  NULLS FIRST INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (CAST(((t1.c0)|(t1.c1)) AS REAL)) ORDER BY CASE WHEN (t1.c1 IN (t1.c0)) THEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) END ASC, (((CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE -1993536982 END, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))>((((NULL) IS TRUE), ((t1.c1) NOT NULL))))  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE ((((+ (vt0.c2)))OR(CASE vt0.c1  WHEN t1.c1 THEN x'' ELSE '-694628667' END))) ORDER BY ((vt0.c2 COLLATE RTRIM)GLOB(((((((vt0.lid)OR(t1.c0)))OR(vt0.c0)))AND(t1.c0))));
SELECT DISTINCT * FROM t1, vt0 WHERE ((((((+ (vt0.c2)))OR(CASE vt0.c1  WHEN t1.c1 THEN x'' ELSE '-694628667' END)))AND((((vt0.c0 IN ()))|('c'))))) ORDER BY CASE WHEN (vt0.c0 IN (t1.c1, 943433731)) THEN ((t1.c1)<=(t1.c1)) WHEN t1.c1 THEN (NOT (vt0.c0)) END  NULLS FIRST, ((((vt0.c1))>=((vt0.lid))) IN ((vt0.lid IN (t1.c1)))) DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t1, vt0 WHERE ((((+ (vt0.c2)))OR(CASE vt0.c1  WHEN t1.c1 THEN x'' ELSE '-694628667' END))) ORDER BY ((vt0.c2 COLLATE RTRIM)GLOB(((((((vt0.lid)OR(t1.c0)))OR(vt0.c0)))AND(t1.c0))));
SELECT DISTINCT * FROM t1, vt0 WHERE ((((((+ (vt0.c2)))OR(CASE vt0.c1  WHEN t1.c1 THEN x'' ELSE '-694628667' END)))AND((((vt0.c0 IN ()))|('c'))))) ORDER BY CASE WHEN (vt0.c0 IN (t1.c1, 943433731)) THEN ((t1.c1)<=(t1.c1)) WHEN t1.c1 THEN (NOT (vt0.c0)) END  NULLS FIRST, ((((vt0.c1))>=((vt0.lid))) IN ((vt0.lid IN (t1.c1)))) DESC  NULLS FIRST LIMIT 2;
SELECT ALL MIN(vt0.lid) FROM vt0, t1 WHERE (((((CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN vt0.c2 WHEN t1.c1 THEN vt0.lid ELSE vt0.c2 END)AND((+ (vt0.c2)))))AND(CASE vt0.c1  WHEN vt0.lid THEN t1.c0 WHEN t1.c0 THEN 0xffffffff9ba6e9a1 WHEN t1.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((((((TIME(t1.c0, vt0.c1, t1.c1, t1.c0, vt0.lid))OR(UNLIKELY(t1.c1))))AND(LIKELY(DISTINCT '-488086941'))))AND(CAST(t1.c1 AS BLOB))) DESC;
SELECT DISTINCT MIN(vt0.lid) FROM vt0, t1 WHERE (((((CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN vt0.c2 WHEN t1.c1 THEN vt0.lid ELSE vt0.c2 END)AND((+ (vt0.c2)))))AND(CASE vt0.c1  WHEN vt0.lid THEN t1.c0 WHEN t1.c0 THEN -1683560031 WHEN t1.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((((((TIME(t1.c0, vt0.c1, t1.c1, t1.c0, vt0.lid))OR(UNLIKELY(t1.c1))))AND(LIKELY(DISTINCT '-488086941'))))AND(CAST(t1.c1 AS BLOB))) DESC INTERSECT SELECT DISTINCT MIN(vt0.lid) FROM vt0, t1 WHERE (CASE WHEN ((((vt0.c1)OR(vt0.lid)))AND(vt0.c2)) THEN ((vt0.c1)>(vt0.c2)) END) ORDER BY ((((((TIME(t1.c0, vt0.c1, t1.c1, t1.c0, vt0.lid))OR(UNLIKELY(t1.c1))))AND(LIKELY(DISTINCT '-488086941'))))AND(CAST(t1.c1 AS BLOB))) DESC;
SELECT ALL * FROM t1, vt0 WHERE (t1.c1) ORDER BY (((((t1.c0 IN ()))OR((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.lid))))))AND(vt0.c2)), (((vt0.lid)) BETWEEN (((((vt0.c0, vt0.lid))<=((t1.c0, t1.c0))))) AND ((((t1.c0) NOT NULL)))) ASC;
SELECT * FROM t1, vt0 WHERE (t1.c1) ORDER BY (((((t1.c0 IN ()))OR((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.lid))))))AND(vt0.c2)), (((vt0.lid)) BETWEEN (((((vt0.c0, vt0.lid))<=((t1.c0, t1.c0))))) AND ((((t1.c0) NOT NULL)))) ASC LIMIT 0x0 INTERSECT SELECT ALL * FROM t1, vt0 WHERE (UNLIKELY(DISTINCT x'8bedd568')) ORDER BY (((((t1.c0 IN ()))OR((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.lid))))))AND(vt0.c2)), (((vt0.lid)) BETWEEN (((((vt0.c0, vt0.lid))<=((t1.c0, t1.c0))))) AND ((((t1.c0) NOT NULL)))) ASC LIMIT 0X0;
SELECT ALL * FROM t1, vt0 WHERE (t1.c1) ORDER BY (((((t1.c0 IN ()))OR((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.lid))))))AND(vt0.c2)), (((vt0.lid)) BETWEEN (((((vt0.c0, vt0.lid))<=((t1.c0, t1.c0))))) AND ((((t1.c0) NOT NULL)))) ASC;
SELECT * FROM t1, vt0 WHERE (t1.c1) ORDER BY (((((t1.c0 IN ()))OR((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.lid))))))AND(vt0.c2)), (((vt0.lid)) BETWEEN (((((vt0.c0, vt0.lid))<=((t1.c0, t1.c0))))) AND ((((t1.c0) NOT NULL)))) ASC LIMIT 0x0 INTERSECT SELECT ALL * FROM t1, vt0 WHERE (UNLIKELY(DISTINCT x'8bedd568')) ORDER BY (((((t1.c0 IN ()))OR((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.lid))))))AND(vt0.c2)), (((vt0.lid)) BETWEEN (((((vt0.c0, vt0.lid))<=((t1.c0, t1.c0))))) AND ((((t1.c0) NOT NULL)))) ASC LIMIT 0X0;
SELECT MAX(vt0.c0) FROM t1 INNER JOIN vt0 ON t1.c0 WHERE ((- ((((t1.c1, t1.c0))<>((7.67748392E8, t1.c1)))))) ORDER BY (((((t1.c0, vt0.lid, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.lid, t1.c0)) AND ((t1.c1, vt0.lid, vt0.c2))))+((((vt0.lid, t1.c0))>((vt0.c0, t1.c1))))), ((t1.c1 COLLATE RTRIM)<(((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c2)))) ASC, (- ('' COLLATE NOCASE)) DESC;
SELECT MAX(vt0.c0) FROM t1 INNER JOIN vt0 ON t1.c0 WHERE ((- ((((t1.c1, t1.c0))>((7.67748392E8, t1.c1)))))) ORDER BY vt0.c0  NULLS LAST, ((((t1.c1, vt0.c1, vt0.c0, vt0.c2)) BETWEEN ((vt0.c1, vt0.lid, vt0.lid, vt0.c0)) AND ((vt0.c0, NULL, 0Xffffffff8d7969d5, vt0.c0))) IN ((~ (vt0.lid)))) DESC LIMIT 3;
SELECT ALL * FROM t1 WHERE (((((((t1.c0)AND(t1.c1)))OR(t1.c0)))<=(LIKELIHOOD(DISTINCT NULL, t1.c1)))) ORDER BY (- (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))<=(LIKELIHOOD(DISTINCT NULL, t1.c1))))AND(t1.c1))) ORDER BY (- (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (CASE t1.c1  WHEN t1.c0 THEN t1.c0 COLLATE RTRIM WHEN NULL THEN (x'' IN (t1.c1, t1.c0)) WHEN ((t1.c0)-(t1.c0)) THEN ((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND('-2142474649')) ELSE ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) END) ORDER BY (- (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((t1.c0)AND(t1.c1)))OR(t1.c0)))<=(LIKELIHOOD(DISTINCT NULL, t1.c1)))) ORDER BY (- (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM vt0, t1 WHERE (0.5460795557177899) ORDER BY (((CASE WHEN vt0.lid THEN vt0.c2 ELSE t1.c1 END))>=((LTRIM(t1.c0)))) DESC, (((t1.c0 IN (vt0.c2)))%((- (vt0.lid)))), (~ (vt0.c2 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM vt0, t1 WHERE (((0.5460795557177899)AND((((((vt0.c2, vt0.lid, vt0.c1)) BETWEEN ((t1.c1, vt0.c0, t1.c0)) AND ((vt0.c1, vt0.lid, vt0.c1))))-((((vt0.c1, vt0.c2))<>((t1.c0, vt0.lid)))))))) ORDER BY (((CASE WHEN vt0.lid THEN vt0.c2 ELSE t1.c1 END))>=((LTRIM(t1.c0)))) DESC, (((t1.c0 IN (vt0.c2)))%((- (vt0.lid)))), (~ (vt0.c2 COLLATE BINARY)) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM vt0, t1 WHERE ((+ (json_patch(vt0.c0, t1.c1)))) ORDER BY (((CASE WHEN vt0.lid THEN vt0.c2 ELSE t1.c1 END))>=((LTRIM(t1.c0)))) DESC, (((t1.c0 IN (vt0.c2)))%((- (vt0.lid)))), (~ (vt0.c2 COLLATE BINARY)) DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((((+ (t1.c1)), t1.c1, ((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND('-664918544')))OR(t1.c0)))OR(t1.c1))))=(((t1.c0 IN ()), CAST(t1.c1 AS TEXT), t1.c1 COLLATE BINARY)))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)&(t1.c0))  NULLS LAST, ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '1192920561' WHEN t1.c0 THEN t1.c0 END) NOTNULL) DESC, (((- (t1.c1)))/((((((('-620974596')AND(t1.c0)))AND(t1.c1)))OR(t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((((+ (t1.c1)), t1.c1, ((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND('-664918544')))OR(t1.c0)))OR(t1.c1))))=(((t1.c0 IN ()), CAST(t1.c1 AS TEXT), t1.c1 COLLATE BINARY)))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)&(t1.c0))  NULLS LAST, ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '1192920561' WHEN t1.c0 THEN t1.c0 END) NOTNULL) DESC, (((- (t1.c1)))/((((((('-620974596')AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))))-(((((t1.c1)OR(t1.c1)))OR(t1.c0))))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)&(t1.c0))  NULLS LAST, ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '1192920561' WHEN t1.c0 THEN t1.c0 END) NOTNULL) DESC, (((- (t1.c1)))/((((((('-620974596')AND(t1.c0)))AND(t1.c1)))OR(t1.c1))));
SELECT ALL * FROM t1 WHERE (((((+ (t1.c1)), t1.c1, ((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND('-664918544')))OR(t1.c0)))OR(t1.c1))))=(((t1.c0 IN ()), CAST(t1.c1 AS TEXT), t1.c1 COLLATE BINARY)))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)&(t1.c0))  NULLS LAST, ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '1192920561' WHEN t1.c0 THEN t1.c0 END) NOTNULL) DESC, (((- (t1.c1)))/((((((('-620974596')AND(t1.c0)))AND(t1.c1)))OR(t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((((+ (t1.c1)), t1.c1, ((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND('-664918544')))OR(t1.c0)))OR(t1.c1))))=(((t1.c0 IN ()), CAST(t1.c1 AS TEXT), t1.c1 COLLATE BINARY)))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)&(t1.c0))  NULLS LAST, ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '1192920561' WHEN t1.c0 THEN t1.c0 END) NOTNULL) DESC, (((- (t1.c1)))/((((((('-620974596')AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c0, t1.c0))))-(((((t1.c1)OR(t1.c1)))OR(t1.c0))))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)&(t1.c0))  NULLS LAST, ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '1192920561' WHEN t1.c0 THEN t1.c0 END) NOTNULL) DESC, (((- (t1.c1)))/((((((('-620974596')AND(t1.c0)))AND(t1.c1)))OR(t1.c1))));
SELECT ALL * FROM vt0, t1 WHERE (vt0.lid) ORDER BY ((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(vt0.c1)) COLLATE BINARY, ABS(DISTINCT vt0.c0)  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (vt0.lid) ORDER BY '' ASC, ((0.6501948388491364)>>((((NULL, vt0.c2, t1.c1))>((vt0.c2, vt0.c1, t1.c0)))))  NULLS FIRST, (((~ (vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE (vt0.lid) ORDER BY ((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(vt0.c1)) COLLATE BINARY, ABS(DISTINCT vt0.c0)  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (vt0.lid) ORDER BY '' ASC, ((0.6501948388491364)>>((((NULL, vt0.c2, t1.c1))>((vt0.c2, vt0.c1, t1.c0)))))  NULLS FIRST, (((~ (vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((t1.c1) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN '-2106283451' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) AND (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN ' 	+W' THEN t1.c0 END))) ORDER BY CAST((((t1.c0, t1.c1, t1.c1, t1.c1))!=((t1.c0, t1.c1, t1.c1, 9.223372036854776E18))) AS BLOB) ASC, (((x''))!=((t1.c1))) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c1) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN '-2106283451' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) AND (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN ' 	+W' THEN t1.c0 END))) ORDER BY LIKELY(CAST(t1.c0 AS REAL))  NULLS LAST, 0.6882598812282795 ASC LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))>=('2033197106'))) ORDER BY LIKELY(CAST(t1.c0 AS REAL))  NULLS LAST, 0.6882598812282795 ASC LIMIT 0x0;
SELECT * FROM t1 WHERE (((t1.c1) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN '-2106283451' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) AND (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN ' 	+W' THEN t1.c0 END))) ORDER BY CAST((((t1.c0, t1.c1, t1.c1, t1.c1))!=((t1.c0, t1.c1, t1.c1, 9.223372036854776E18))) AS BLOB) ASC, (((x''))!=((t1.c1))) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c1) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN '-2106283451' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) AND (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN ' 	+W' THEN t1.c0 END))) ORDER BY LIKELY(CAST(t1.c0 AS REAL))  NULLS LAST, 0.6882598812282795 ASC LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))>=('2033197106'))) ORDER BY LIKELY(CAST(t1.c0 AS REAL))  NULLS LAST, 0.6882598812282795 ASC LIMIT 0x0;
SELECT MAX(vt0.c0) FROM vt0 NATURAL JOIN t1 WHERE (x'403d') ORDER BY CAST(vt0.lid COLLATE BINARY AS BLOB), vt0.lid DESC  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM vt0 NATURAL JOIN t1 WHERE (((x'403d')AND(x'6813'))) ORDER BY vt0.c2 COLLATE NOCASE DESC, NULL  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE ('939040820') ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (((NOT (vt0.c0)), CASE t1.c0  WHEN '-9223372036854775808' THEN vt0.c2 WHEN t1.c1 THEN t1.c1 WHEN vt0.lid THEN vt0.lid END, ((t1.c1)OR(vt0.c1)))) AND ((((vt0.c1) BETWEEN (vt0.c1) AND (-687826906)), ((NULL)+(vt0.c0)), ((vt0.c0)>=(t1.c0))))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 WHERE ('939040820') ORDER BY ((vt0.c2)/((vt0.c0 IN (0.5644616308110597)))), (((vt0.lid, vt0.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t1.c1 END, ((t1.c0) NOT NULL))) AND ((((vt0.c0) IS FALSE), (x'd8' IN ())))) DESC LIMIT 0X3;
SELECT * FROM vt0, t1 WHERE ('939040820') ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (((NOT (vt0.c0)), CASE t1.c0  WHEN '-9223372036854775808' THEN vt0.c2 WHEN t1.c1 THEN t1.c1 WHEN vt0.lid THEN vt0.lid END, ((t1.c1)OR(vt0.c1)))) AND ((((vt0.c1) BETWEEN (vt0.c1) AND (-687826906)), ((NULL)+(vt0.c0)), ((vt0.c0)>=(t1.c0))))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 WHERE ('939040820') ORDER BY ((vt0.c2)/((vt0.c0 IN (0.5644616308110597)))), (((vt0.lid, vt0.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t1.c1 END, ((t1.c0) NOT NULL))) AND ((((vt0.c0) IS FALSE), (x'd8' IN ())))) DESC LIMIT 0X3;
SELECT MAX(vt0.lid) FROM t1, vt0 WHERE ((((t1.c1, 'IH')) BETWEEN ((CASE WHEN vt0.lid THEN vt0.lid END, ((vt0.lid)=(t1.c1)))) AND ((((vt0.c2) BETWEEN (t1.c0) AND (vt0.c1)), TRIM(t1.c0))))) ORDER BY ((COALESCE(DISTINCT vt0.c2, t1.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (- (CASE vt0.lid  WHEN 'H' THEN t1.c0 END)) ASC;
SELECT DISTINCT MAX(vt0.lid) FROM t1, vt0 WHERE ((((t1.c1, 'IH')) BETWEEN ((CASE WHEN vt0.lid THEN vt0.lid END, ((vt0.lid)==(t1.c1)))) AND ((((vt0.c2) BETWEEN (t1.c0) AND (vt0.c1)), TRIM(t1.c0))))) ORDER BY ((((((((((vt0.lid)OR(NULL)))AND(vt0.c2)))OR(vt0.c1)))OR(0.2045398453980487)))OR((- (vt0.c2)))) DESC  NULLS FIRST, (((vt0.c0)<<(vt0.c2)) IN ()) DESC LIMIT 0x4 INTERSECT SELECT DISTINCT MAX(vt0.lid) FROM t1, vt0 WHERE (t1.c0) ORDER BY ((((((((((vt0.lid)OR(NULL)))AND(vt0.c2)))OR(vt0.c1)))OR(0.2045398453980487)))OR((- (vt0.c2)))) DESC  NULLS FIRST, (((vt0.c0)<<(vt0.c2)) IN ()) DESC LIMIT 4;
SELECT * FROM t1, vt0 WHERE ((((vt0.lid)) NOT BETWEEN ((((((vt0.c1)OR(t1.c0)))OR(t1.c1)))) AND ((((((((t1.c1)OR(vt0.c2)))OR(vt0.c2)))AND(t1.c1))))));
SELECT ALL * FROM t1, vt0 WHERE ((((((vt0.lid)) NOT BETWEEN ((((((vt0.c1)OR(t1.c0)))OR(t1.c1)))) AND ((((((((t1.c1)OR(vt0.c2)))OR(vt0.c2)))AND(t1.c1))))))AND(((t1.c0)>(((vt0.c0)IS(t1.c0))))))) LIMIT 0 INTERSECT SELECT * FROM t1, vt0 WHERE (LIKELY(DISTINCT ((vt0.c0) BETWEEN (t1.c0) AND (vt0.c2)))) LIMIT 0;
SELECT * FROM t1, vt0 WHERE ((((vt0.lid)) NOT BETWEEN ((((((vt0.c1)OR(t1.c0)))OR(t1.c1)))) AND ((((((((t1.c1)OR(vt0.c2)))OR(vt0.c2)))AND(t1.c1))))));
SELECT ALL * FROM t1, vt0 WHERE ((((((vt0.lid)) NOT BETWEEN ((((((vt0.c1)OR(t1.c0)))OR(t1.c1)))) AND ((((((((t1.c1)OR(vt0.c2)))OR(vt0.c2)))AND(t1.c1))))))AND(((t1.c0)>(((vt0.c0)IS(t1.c0))))))) LIMIT 0 INTERSECT SELECT * FROM t1, vt0 WHERE (LIKELY(DISTINCT ((vt0.c0) BETWEEN (t1.c0) AND (vt0.c2)))) LIMIT 0;
SELECT * FROM vt0 INNER JOIN t1 ON CASE ((vt0.lid)==(vt0.c1))  WHEN (((vt0.c0))<((vt0.lid))) THEN ((t1.c1) BETWEEN (vt0.lid) AND (vt0.c2)) WHEN CASE WHEN t1.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c1 END THEN ((t1.c0) NOT NULL) WHEN ((vt0.c0) NOTNULL) THEN t1.c1 END WHERE (CASE (((t1.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))  WHEN x'3e' THEN x'e7' WHEN ((vt0.c0) IS FALSE) THEN 'bs' COLLATE BINARY WHEN (((vt0.lid, vt0.c1))<=((t1.c0, vt0.c1))) THEN (t1.c1 IN (vt0.c0, vt0.c0)) END) ORDER BY ((0.2870285864609665) NOT BETWEEN (((vt0.lid)|(vt0.c2))) AND (0x365a628a COLLATE BINARY)) ASC;
SELECT DISTINCT * FROM vt0 NOT INDEXED INNER JOIN t1 ON CASE ((vt0.lid)==(vt0.c1))  WHEN (((vt0.c0))<((vt0.lid))) THEN ((t1.c1) BETWEEN (vt0.lid) AND (vt0.c2)) WHEN CASE WHEN t1.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c1 END THEN ((t1.c0) NOT NULL) WHEN ((vt0.c0) NOTNULL) THEN t1.c1 END WHERE (((CASE (((t1.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))  WHEN x'3e' THEN x'e7' WHEN ((vt0.c0) IS FALSE) THEN 'bs' COLLATE BINARY WHEN (((vt0.lid, vt0.c1))<((t1.c0, vt0.c1))) THEN (t1.c1 IN (vt0.c0, vt0.c0)) END)AND(CAST(LIKELIHOOD(DISTINCT vt0.c1, vt0.lid) AS NUMERIC)))) ORDER BY (((~ (vt0.c0))) ISNULL) ASC  NULLS FIRST, ((('-1950235700')GLOB(vt0.c1)) IN (vt0.lid, ((vt0.lid) IS TRUE))), ((((((((((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid)))OR(vt0.c2)))AND(x'ff')))AND(vt0.lid)))OR(NULL)))LIKE((~ (vt0.c0))))  NULLS LAST LIMIT 0x5 INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON CASE ((vt0.lid)==(vt0.c1))  WHEN (((vt0.c0))<((vt0.lid))) THEN ((t1.c1) BETWEEN (vt0.lid) AND (vt0.c2)) WHEN CASE WHEN t1.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c1 END THEN ((t1.c0) NOT NULL) WHEN ((vt0.c0) NOTNULL) THEN t1.c1 END WHERE (CAST(((((x'ef8b')OR(vt0.lid)))AND(vt0.lid)) AS NUMERIC)) ORDER BY (((~ (vt0.c0))) ISNULL) ASC  NULLS FIRST, ((('-1950235700')GLOB(vt0.c1)) IN (vt0.lid, ((vt0.lid) IS TRUE))), ((((((((((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid)))OR(vt0.c2)))AND(x'ff')))AND(vt0.lid)))OR(NULL)))LIKE((~ (vt0.c0))))  NULLS LAST LIMIT 0x5;
SELECT * FROM vt0 INNER JOIN t1 ON CASE ((vt0.lid)==(vt0.c1))  WHEN (((vt0.c0))<((vt0.lid))) THEN ((t1.c1) BETWEEN (vt0.lid) AND (vt0.c2)) WHEN CASE WHEN t1.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c1 END THEN ((t1.c0) NOT NULL) WHEN ((vt0.c0) NOTNULL) THEN t1.c1 END WHERE (CASE (((t1.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))  WHEN x'3e' THEN x'e7' WHEN ((vt0.c0) IS FALSE) THEN 'bs' COLLATE BINARY WHEN (((vt0.lid, vt0.c1))<=((t1.c0, vt0.c1))) THEN (t1.c1 IN (vt0.c0, vt0.c0)) END) ORDER BY ((0.2870285864609665) NOT BETWEEN (((vt0.lid)|(vt0.c2))) AND (0x365a628a COLLATE BINARY)) ASC;
SELECT DISTINCT * FROM vt0 NOT INDEXED INNER JOIN t1 ON CASE ((vt0.lid)==(vt0.c1))  WHEN (((vt0.c0))<((vt0.lid))) THEN ((t1.c1) BETWEEN (vt0.lid) AND (vt0.c2)) WHEN CASE WHEN t1.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c1 END THEN ((t1.c0) NOT NULL) WHEN ((vt0.c0) NOTNULL) THEN t1.c1 END WHERE (((CASE (((t1.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))  WHEN x'3e' THEN x'e7' WHEN ((vt0.c0) IS FALSE) THEN 'bs' COLLATE BINARY WHEN (((vt0.lid, vt0.c1))<((t1.c0, vt0.c1))) THEN (t1.c1 IN (vt0.c0, vt0.c0)) END)AND(CAST(LIKELIHOOD(DISTINCT vt0.c1, vt0.lid) AS NUMERIC)))) ORDER BY (((~ (vt0.c0))) ISNULL) ASC  NULLS FIRST, ((('-1950235700')GLOB(vt0.c1)) IN (vt0.lid, ((vt0.lid) IS TRUE))), ((((((((((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid)))OR(vt0.c2)))AND(x'ff')))AND(vt0.lid)))OR(NULL)))LIKE((~ (vt0.c0))))  NULLS LAST LIMIT 0x5 INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON CASE ((vt0.lid)==(vt0.c1))  WHEN (((vt0.c0))<((vt0.lid))) THEN ((t1.c1) BETWEEN (vt0.lid) AND (vt0.c2)) WHEN CASE WHEN t1.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c1 END THEN ((t1.c0) NOT NULL) WHEN ((vt0.c0) NOTNULL) THEN t1.c1 END WHERE (CAST(((((x'ef8b')OR(vt0.lid)))AND(vt0.lid)) AS NUMERIC)) ORDER BY (((~ (vt0.c0))) ISNULL) ASC  NULLS FIRST, ((('-1950235700')GLOB(vt0.c1)) IN (vt0.lid, ((vt0.lid) IS TRUE))), ((((((((((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid)))OR(vt0.c2)))AND(x'ff')))AND(vt0.lid)))OR(NULL)))LIKE((~ (vt0.c0))))  NULLS LAST LIMIT 0x5;
SELECT ALL MAX(vt0.lid) FROM vt0 WHERE (CAST(((vt0.lid)%(vt0.c2)) AS INTEGER)) ORDER BY ((((vt0.c0)<(vt0.c1)))<((vt0.lid IN (vt0.lid))))  NULLS LAST, ((x'')+('0.6059696527120175'));
SELECT DISTINCT MAX(vt0.lid) FROM vt0 WHERE (((CAST(((vt0.lid)%(vt0.c2)) AS INTEGER))AND((((vt0.lid)) NOT BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((-974873134) ISNULL))))))) ORDER BY (+ (vt0.c2 COLLATE RTRIM)) DESC  NULLS LAST, CAST(LOWER(DISTINCT vt0.lid) AS REAL)  NULLS FIRST LIMIT 0;
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c2, vt0.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.lid, x'af', vt0.c1, vt0.c2, vt0.c2)) AND ((vt0.lid, vt0.lid, vt0.c2, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c2)GLOB(vt0.c0))) AND (vt0.c1))) ORDER BY ((vt0.c2) ISNULL)  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c1, vt0.c2, vt0.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.lid, x'af', vt0.c1, vt0.c2, vt0.c2)) AND ((vt0.lid, vt0.lid, vt0.c2, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c2)GLOB(vt0.c0))) AND (vt0.c1)))AND(((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c2))) IS TRUE)))) ORDER BY ((vt0.c2) ISNULL)  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (NULL) ORDER BY ((vt0.c2) ISNULL)  NULLS FIRST LIMIT 0X2;
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c2, vt0.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.lid, x'af', vt0.c1, vt0.c2, vt0.c2)) AND ((vt0.lid, vt0.lid, vt0.c2, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c2)GLOB(vt0.c0))) AND (vt0.c1))) ORDER BY ((vt0.c2) ISNULL)  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c1, vt0.c2, vt0.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.lid, x'af', vt0.c1, vt0.c2, vt0.c2)) AND ((vt0.lid, vt0.lid, vt0.c2, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c2)GLOB(vt0.c0))) AND (vt0.c1)))AND(((((vt0.lid) BETWEEN (vt0.c1) AND (vt0.c2))) IS TRUE)))) ORDER BY ((vt0.c2) ISNULL)  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (NULL) ORDER BY ((vt0.c2) ISNULL)  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t1 INNER JOIN vt0 ON ((CAST(vt0.c1 AS INTEGER))AND(((((vt0.c2)AND(t1.c1)))AND(vt0.c2)))) WHERE (0.17357990325020944) ORDER BY ((((((CAST(vt0.c0 AS TEXT))AND(((t1.c1)<(vt0.c2)))))AND(vt0.c1)))AND(((vt0.c1) BETWEEN (t1.c1) AND (vt0.c2)))) ASC  NULLS LAST, (- ((((t1.c0, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, t1.c1, '붊B8')) AND ((vt0.c0, vt0.lid, vt0.c0)))))  NULLS LAST;
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON ((CAST(vt0.c1 AS INTEGER))AND(((((vt0.c2)AND(t1.c1)))AND(vt0.c2)))) WHERE (((0.17357990325020944)AND((((json_array_length(vt0.c2), x'9ef3'))>=((((t1.c1) ISNULL), CAST(vt0.lid AS NUMERIC))))))) ORDER BY (CASE vt0.lid  WHEN vt0.c1 THEN vt0.c0 WHEN x'dd7a' THEN x'c3' ELSE vt0.c1 END IN (((t1.c0) NOT BETWEEN (vt0.lid) AND (vt0.lid)), (- (vt0.c0)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON ((CAST(vt0.c1 AS INTEGER))AND(((((vt0.c2)AND(t1.c1)))AND(vt0.c2)))) WHERE ((LENGTH(t1.c0) IN (LIKELIHOOD(DISTINCT t1.c1, t1.c0)))) ORDER BY (CASE vt0.lid  WHEN vt0.c1 THEN vt0.c0 WHEN x'dd7a' THEN x'c3' ELSE vt0.c1 END IN (((t1.c0) NOT BETWEEN (vt0.lid) AND (vt0.lid)), (- (vt0.c0)))) LIMIT 0x0;
SELECT ALL * FROM t1 INNER JOIN vt0 ON ((CAST(vt0.c1 AS INTEGER))AND(((((vt0.c2)AND(t1.c1)))AND(vt0.c2)))) WHERE (0.17357990325020944) ORDER BY ((((((CAST(vt0.c0 AS TEXT))AND(((t1.c1)<(vt0.c2)))))AND(vt0.c1)))AND(((vt0.c1) BETWEEN (t1.c1) AND (vt0.c2)))) ASC  NULLS LAST, (- ((((t1.c0, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, t1.c1, '붊B8')) AND ((vt0.c0, vt0.lid, vt0.c0)))))  NULLS LAST;
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON ((CAST(vt0.c1 AS INTEGER))AND(((((vt0.c2)AND(t1.c1)))AND(vt0.c2)))) WHERE (((0.17357990325020944)AND((((json_array_length(vt0.c2), x'9ef3'))>=((((t1.c1) ISNULL), CAST(vt0.lid AS NUMERIC))))))) ORDER BY (CASE vt0.lid  WHEN vt0.c1 THEN vt0.c0 WHEN x'dd7a' THEN x'c3' ELSE vt0.c1 END IN (((t1.c0) NOT BETWEEN (vt0.lid) AND (vt0.lid)), (- (vt0.c0)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON ((CAST(vt0.c1 AS INTEGER))AND(((((vt0.c2)AND(t1.c1)))AND(vt0.c2)))) WHERE ((LENGTH(t1.c0) IN (LIKELIHOOD(DISTINCT t1.c1, t1.c0)))) ORDER BY (CASE vt0.lid  WHEN vt0.c1 THEN vt0.c0 WHEN x'dd7a' THEN x'c3' ELSE vt0.c1 END IN (((t1.c0) NOT BETWEEN (vt0.lid) AND (vt0.lid)), (- (vt0.c0)))) LIMIT 0x0;
SELECT * FROM vt0 WHERE ((+ (LENGTH(vt0.c1)))) ORDER BY ((NULL) NOT BETWEEN (((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))) AND (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))), vt0.lid ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((+ (LENGTH(vt0.c1)))) ORDER BY ((NULL) NOT BETWEEN (((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))) AND (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))), vt0.lid ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((+ (LENGTH(vt0.c1)))) ORDER BY ((NULL) NOT BETWEEN (((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))) AND (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))), vt0.lid ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((+ (LENGTH(vt0.c1)))) ORDER BY ((NULL) NOT BETWEEN (((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))) AND (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))), vt0.lid ASC  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.lid, vt0.c0)) BETWEEN (('-1868605768', CAST(vt0.c1 AS NUMERIC))) AND ((((vt0.c2)IS(t1.c1)), JULIANDAY(vt0.c1, t1.c0, vt0.c2)))));
SELECT DISTINCT * FROM t1, vt0 WHERE ((((((vt0.lid, vt0.c0)) BETWEEN (('-1868605768', CAST(vt0.c1 AS NUMERIC))) AND ((((vt0.c2)IS(t1.c1)), JULIANDAY(vt0.c1, t1.c0, vt0.c2)))))AND((((((t1.c0) IS TRUE), LOWER(vt0.c2)))<=(((('1212339111') ISNULL), '')))))) ORDER BY (NOT (((t1.c0) IS FALSE)))  NULLS LAST, 0.10311593578902711  NULLS FIRST, (NULLIF(vt0.lid, vt0.c1) IN (((vt0.lid) NOT BETWEEN (NULL) AND (t1.c0))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.lid, vt0.c0)) BETWEEN (('-1868605768', CAST(vt0.c1 AS NUMERIC))) AND ((((vt0.c2)IS(t1.c1)), JULIANDAY(vt0.c1, t1.c0, vt0.c2)))));
SELECT DISTINCT * FROM t1, vt0 WHERE ((((((vt0.lid, vt0.c0)) BETWEEN (('-1868605768', CAST(vt0.c1 AS NUMERIC))) AND ((((vt0.c2)IS(t1.c1)), JULIANDAY(vt0.c1, t1.c0, vt0.c2)))))AND((((((t1.c0) IS TRUE), LOWER(vt0.c2)))<=(((('1212339111') ISNULL), '')))))) ORDER BY (NOT (((t1.c0) IS FALSE)))  NULLS LAST, 0.10311593578902711  NULLS FIRST, (NULLIF(vt0.lid, vt0.c1) IN (((vt0.lid) NOT BETWEEN (NULL) AND (t1.c0))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1, vt0 WHERE ((~ (t1.c0 COLLATE NOCASE))) ORDER BY (((((vt0.c1))<((0.04337948852662532))))IS NOT(((vt0.lid)>=(vt0.c2)))), x'';
SELECT * FROM t1, vt0 WHERE ((~ (t1.c0 COLLATE NOCASE))) ORDER BY (((((vt0.c1, t1.c1)) BETWEEN ((x'', t1.c1)) AND ((vt0.c1, vt0.lid)))) NOTNULL) ASC, vt0.c0, ((((vt0.lid COLLATE NOCASE)OR(UPPER(t1.c0))))OR((NOT (vt0.c1)))) ASC INTERSECT SELECT * FROM t1, vt0 WHERE (((((t1.c1)!=(vt0.lid))) NOTNULL)) ORDER BY (((((vt0.c1, t1.c1)) BETWEEN ((x'', t1.c1)) AND ((vt0.c1, vt0.lid)))) NOTNULL) ASC, vt0.c0, ((((vt0.lid COLLATE NOCASE)OR(UPPER(t1.c0))))OR((NOT (vt0.c1)))) ASC;
SELECT ALL * FROM t1, vt0 WHERE ((~ (t1.c0 COLLATE NOCASE))) ORDER BY (((((vt0.c1))<((0.04337948852662532))))IS NOT(((vt0.lid)>=(vt0.c2)))), x'';
SELECT * FROM t1, vt0 WHERE ((~ (t1.c0 COLLATE NOCASE))) ORDER BY (((((vt0.c1, t1.c1)) BETWEEN ((x'', t1.c1)) AND ((vt0.c1, vt0.lid)))) NOTNULL) ASC, vt0.c0, ((((vt0.lid COLLATE NOCASE)OR(UPPER(t1.c0))))OR((NOT (vt0.c1)))) ASC INTERSECT SELECT * FROM t1, vt0 WHERE (((((t1.c1)!=(vt0.lid))) NOTNULL)) ORDER BY (((((vt0.c1, t1.c1)) BETWEEN ((x'', t1.c1)) AND ((vt0.c1, vt0.lid)))) NOTNULL) ASC, vt0.c0, ((((vt0.lid COLLATE NOCASE)OR(UPPER(t1.c0))))OR((NOT (vt0.c1)))) ASC;
SELECT ALL * FROM t1, vt0 WHERE ((NOT ((+ (vt0.c0))))) ORDER BY vt0.c2, ((x'3f')>((t1.c1 IN (vt0.c0)))) DESC;
SELECT * FROM t1, vt0 WHERE ((((NOT ((+ (vt0.c0)))))AND(t1.c0))) ORDER BY ((ABS(DISTINCT vt0.lid)) NOT BETWEEN (UPPER(vt0.lid)) AND (((-4.88086941E8)==(0.21143384027787693)))) DESC;
SELECT ALL * FROM t1, vt0 WHERE ((NOT ((+ (vt0.c0))))) ORDER BY vt0.c2, ((x'3f')>((t1.c1 IN (vt0.c0)))) DESC;
SELECT * FROM t1, vt0 WHERE ((((NOT ((+ (vt0.c0)))))AND(t1.c0))) ORDER BY ((ABS(DISTINCT vt0.lid)) NOT BETWEEN (UPPER(vt0.lid)) AND (((-4.88086941E8)==(0.21143384027787693)))) DESC;
SELECT ALL * FROM t1 WHERE ((~ (((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))));
SELECT * FROM t1 WHERE ((((~ (((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))))AND(((((((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))OR('-200726578')))OR(t1.c0)))OR(t1.c0))) IS TRUE)))) ORDER BY t1.c0  NULLS FIRST, UPPER(DISTINCT t1.c1)  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((~ (((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))));
SELECT * FROM t1 WHERE ((((~ (((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))))AND(((((((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))OR('-200726578')))OR(t1.c0)))OR(t1.c0))) IS TRUE)))) ORDER BY t1.c0  NULLS FIRST, UPPER(DISTINCT t1.c1)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (0.8900289067451527);
SELECT DISTINCT * FROM vt0 WHERE (0.8900289067451527) LIMIT 1;
SELECT ALL * FROM vt0 WHERE (0.8900289067451527);
SELECT DISTINCT * FROM vt0 WHERE (0.8900289067451527) LIMIT 1;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((t1.c0, t1.c0)) BETWEEN ((x'', (~ (t1.c0)))) AND (((~ (t1.c1)), ((t1.c1) IS FALSE)))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((t1.c0, t1.c0)) BETWEEN ((x'', (~ (t1.c0)))) AND (((~ (t1.c1)), ((t1.c1) IS FALSE))))) ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST, (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN NULL THEN 0.5850404141255526 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END IN (t1.c1, t1.c0)) ASC  NULLS LAST, (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, CAST(x'adb2' AS BLOB)))<(((- (t1.c0)), t1.c0))) ASC LIMIT 0 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((t1.c0)LIKE(t1.c0)) IN ())) ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST, (CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN NULL THEN 0.5850404141255526 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END IN (t1.c1, t1.c0)) ASC  NULLS LAST, (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END, CAST(x'adb2' AS BLOB)))<(((- (t1.c0)), t1.c0))) ASC LIMIT 0x0;
SELECT MAX(t1.c0) FROM t1 WHERE (((IFNULL(t1.c0, t1.c1))>(DATETIME(t1.c1, t1.c0, t1.c1))));
SELECT DISTINCT MAX(t1.c0) FROM t1 NOT INDEXED WHERE (((((IFNULL(t1.c0, t1.c1))>(DATETIME(t1.c1, t1.c0, t1.c1))))AND((((t1.c0, t1.c0)) BETWEEN (((NOT (t1.c1)), QUOTE(t1.c1))) AND ((CAST(t1.c0 AS REAL), CAST(t1.c0 AS BLOB))))))) LIMIT 1;
SELECT MAX(vt0.c0) FROM vt0 NOT INDEXED WHERE (((((vt0.lid)|(vt0.c0)))&((((vt0.c0))>=((vt0.lid)))))) ORDER BY TRIM(0.9923126789404835) ASC;
SELECT MAX(vt0.c0) FROM vt0 WHERE (((((((vt0.lid)|(vt0.c0)))&((((vt0.c0))>((vt0.lid))))))AND(CASE WHEN (~ (NULL)) THEN (((vt0.lid))<=((vt0.lid))) ELSE (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END))) ORDER BY IFNULL(237737148, 1.266571021E9) ASC INTERSECT SELECT MAX(vt0.c0) FROM vt0 WHERE (((((vt0.c1 IN (vt0.c2, vt0.c0)), vt0.c0))!=((((vt0.lid)>>(vt0.c1)), ('U)c0' IN ()))))) ORDER BY IFNULL(0xe2b94bc, 1.266571021E9) ASC;
SELECT ALL MIN(vt0.c0) FROM t1, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))<((NOT ('-1928117674'))))) ORDER BY (x'' IN ()) DESC, ((((((((vt0.lid)+(vt0.c2)))AND((t1.c1 IN (t1.c1)))))AND(((x'')-(t1.c1)))))OR((((t1.c1, t1.c1, vt0.c1, t1.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c1, vt0.lid, t1.c0)))))  NULLS LAST, ((((((((t1.c1)AND(t1.c1)))OR(vt0.lid)))OR(vt0.lid))) ISNULL)  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM t1, vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))<((NOT ('-1928117674')))))AND((((('絻')AND(t1.c1)))AND(vt0.c1)) COLLATE NOCASE))) ORDER BY ((((vt0.c2)AND(t1.c1))) NOT BETWEEN (LOWER(DISTINCT t1.c1)) AND (((t1.c1) NOTNULL))) INTERSECT SELECT ALL MIN(vt0.c0) FROM t1, vt0 WHERE (TIME((((vt0.c0, vt0.c0, vt0.c2, NULL)) NOT BETWEEN ((vt0.c1, vt0.c2, t1.c1, vt0.c0)) AND ((vt0.c2, vt0.c0, t1.c0, vt0.c0))), (((vt0.c1, vt0.lid)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((NULL, t1.c1))), (0xffffffffeca832e1 IN (vt0.lid, x'13aea5')), ((vt0.c2) NOT BETWEEN (vt0.c0) AND (t1.c1)))) ORDER BY ((((vt0.c2)AND(t1.c1))) NOT BETWEEN (LOWER(DISTINCT t1.c1)) AND (((t1.c1) NOTNULL)));
SELECT ALL * FROM t1, vt0 WHERE (((CASE WHEN vt0.c1 THEN t1.c1 WHEN t1.c0 THEN vt0.lid END) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (((t1.c1) ISNULL))));
SELECT ALL * FROM t1, vt0 WHERE (((CASE WHEN vt0.c1 THEN t1.c1 WHEN t1.c0 THEN vt0.lid END) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (((t1.c1) ISNULL)))) LIMIT 0X0;
SELECT ALL * FROM t1, vt0 WHERE (((CASE WHEN vt0.c1 THEN t1.c1 WHEN t1.c0 THEN vt0.lid END) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (((t1.c1) ISNULL))));
SELECT ALL * FROM t1, vt0 WHERE (((CASE WHEN vt0.c1 THEN t1.c1 WHEN t1.c0 THEN vt0.lid END) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (((t1.c1) ISNULL)))) LIMIT 0X0;
SELECT ALL MIN(vt0.c2) FROM vt0 WHERE (((((vt0.c1)<=(vt0.c2))) NOT BETWEEN (((vt0.c2)IS NOT(vt0.c1))) AND (CAST(vt0.c1 AS TEXT)))) ORDER BY ((((vt0.c1)GLOB(vt0.c1))) BETWEEN (((vt0.c2)/(vt0.c2))) AND (TRIM(DISTINCT vt0.c2))) ASC  NULLS FIRST, vt0.c2  NULLS LAST;
SELECT DISTINCT MIN(vt0.c2) FROM vt0 WHERE (((((((vt0.c1)<=(vt0.c2))) NOT BETWEEN (((vt0.c2)IS NOT(vt0.c1))) AND (CAST(vt0.c1 AS TEXT))))AND(CAST(vt0.lid AS INTEGER)))) ORDER BY ((((vt0.c1)GLOB(vt0.c1))) BETWEEN (((vt0.c2)/(vt0.c2))) AND (TRIM(DISTINCT vt0.c2))) ASC  NULLS FIRST, vt0.c2  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM vt0, t1 WHERE (0.27624503438472114 COLLATE NOCASE) ORDER BY (+ (((vt0.lid)IS(vt0.lid)))) DESC, (((t1.c1)<<(t1.c1)) IN (((vt0.c0)*(t1.c1))));
SELECT MAX(t1.c1) FROM vt0, t1 WHERE (0.27624503438472114 COLLATE NOCASE) ORDER BY ((vt0.c0) BETWEEN ('496344976') AND (0.6304552909209034))  NULLS FIRST, (((t1.c1, vt0.lid, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), ((0.3139193629105187)>>(vt0.lid)), (- (vt0.lid)))) AND (((+ (vt0.c2)), ((((((((((x'')AND('')))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.lid)))AND(vt0.lid)), ((vt0.c2)||(t1.c1))))) INTERSECT SELECT MAX(t1.c1) FROM vt0, t1 WHERE (((vt0.c2 COLLATE RTRIM) BETWEEN ((+ (vt0.c0))) AND (((t1.c0)>>(t1.c0))))) ORDER BY ((vt0.c0) BETWEEN ('496344976') AND (0.6304552909209034))  NULLS FIRST, (((t1.c1, vt0.lid, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), ((0.3139193629105187)>>(vt0.lid)), (- (vt0.lid)))) AND (((+ (vt0.c2)), ((((((((((x'')AND('')))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.lid)))AND(vt0.lid)), ((vt0.c2)||(t1.c1)))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((- (((vt0.c0)GLOB(t1.c1))))) ORDER BY CASE ((vt0.c2)-(vt0.c2))  WHEN SQLITE_COMPILEOPTION_USED(t1.c0) THEN vt0.c1 END ASC, ((vt0.c2)IS NOT(vt0.c2)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST, ((t1.c0) IS TRUE) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM t1, vt0 WHERE ((- (((vt0.c0)GLOB(t1.c1))))) ORDER BY ((((vt0.lid)>=(vt0.c1)))*((((t1.c0, t1.c0, t1.c1, vt0.c0))<=((t1.c1, t1.c0, vt0.c0, vt0.c1))))) LIMIT 0;
SELECT ALL * FROM t1, vt0 WHERE (((vt0.lid)OR(((vt0.c2)AND(vt0.c2)))));
SELECT ALL * FROM t1, vt0 WHERE (((vt0.lid)OR(((vt0.c2)AND(vt0.c2))))) LIMIT 2;
SELECT ALL * FROM t1, vt0 WHERE (((vt0.lid)OR(((vt0.c2)AND(vt0.c2)))));
SELECT ALL * FROM t1, vt0 WHERE (((vt0.lid)OR(((vt0.c2)AND(vt0.c2))))) LIMIT 2;
SELECT MAX(vt0.c0) FROM t1 INNER JOIN vt0 ON UPPER((vt0.lid IN (vt0.c2))) WHERE (vt0.c0);
SELECT DISTINCT MAX(vt0.c0) FROM t1 INNER JOIN vt0 ON UPPER((vt0.lid IN (vt0.c2))) WHERE (((vt0.c0)AND(((((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c1)))|(CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 ELSE t1.c1 END))))) LIMIT 0x1;
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.lid)-(vt0.c1))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((0.641424777033699)) AND ((vt0.c1))))));
SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE (((((vt0.lid)-(vt0.c1))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((0.641424777033699)) AND ((vt0.c1)))))) LIMIT 3 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE (NULL COLLATE RTRIM) LIMIT 0x3;
SELECT * FROM t1 NATURAL JOIN vt0 WHERE ((((~ (t1.c1)))||(((vt0.c2) NOTNULL)))) ORDER BY ((((((vt0.c1)>(vt0.lid)))OR(vt0.lid COLLATE NOCASE)))AND(t1.c1 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE ((((((~ (t1.c1)))||(((vt0.c2) NOTNULL))))AND(x'4a'))) ORDER BY (+ ((-985550566 IN (vt0.lid)))) DESC  NULLS LAST, ((((vt0.c0)*(vt0.lid))) ISNULL)  NULLS LAST, (((vt0.lid, t1.c1)) BETWEEN (((vt0.c1 IN ()), CAST(0.08860224649869197 AS TEXT))) AND ((t1.c1, CASE WHEN vt0.lid THEN vt0.c0 END))) ASC  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM t1 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt0.lid) BETWEEN (t1.c1) AND (vt0.lid)) THEN CASE WHEN t1.c0 THEN t1.c1 END WHEN t1.c1 THEN ((t1.c1)>(vt0.lid)) ELSE LIKELIHOOD(vt0.c0, t1.c0) END) ORDER BY (+ ((0Xffffffffc541b11a IN (vt0.lid)))) DESC  NULLS LAST, ((((vt0.c0)*(vt0.lid))) ISNULL)  NULLS LAST, (((vt0.lid, t1.c1)) BETWEEN (((vt0.c1 IN ()), CAST(0.08860224649869197 AS TEXT))) AND ((t1.c1, CASE WHEN vt0.lid THEN vt0.c0 END))) ASC  NULLS LAST LIMIT 0;
SELECT * FROM t1 NATURAL JOIN vt0 WHERE ((((~ (t1.c1)))||(((vt0.c2) NOTNULL)))) ORDER BY ((((((vt0.c1)>(vt0.lid)))OR(vt0.lid COLLATE NOCASE)))AND(t1.c1 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE ((((((~ (t1.c1)))||(((vt0.c2) NOTNULL))))AND(x'4a'))) ORDER BY (+ ((-985550566 IN (vt0.lid)))) DESC  NULLS LAST, ((((vt0.c0)*(vt0.lid))) ISNULL)  NULLS LAST, (((vt0.lid, t1.c1)) BETWEEN (((vt0.c1 IN ()), CAST(0.08860224649869197 AS TEXT))) AND ((t1.c1, CASE WHEN vt0.lid THEN vt0.c0 END))) ASC  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM t1 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt0.lid) BETWEEN (t1.c1) AND (vt0.lid)) THEN CASE WHEN t1.c0 THEN t1.c1 END WHEN t1.c1 THEN ((t1.c1)>(vt0.lid)) ELSE LIKELIHOOD(vt0.c0, t1.c0) END) ORDER BY (+ ((0Xffffffffc541b11a IN (vt0.lid)))) DESC  NULLS LAST, ((((vt0.c0)*(vt0.lid))) ISNULL)  NULLS LAST, (((vt0.lid, t1.c1)) BETWEEN (((vt0.c1 IN ()), CAST(0.08860224649869197 AS TEXT))) AND ((t1.c1, CASE WHEN vt0.lid THEN vt0.c0 END))) ASC  NULLS LAST LIMIT 0;
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (NULL) ORDER BY (NOT (((t1.c1) BETWEEN (vt0.lid) AND (t1.c1)))) ASC;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE (NULL) ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, (((((((((((vt0.c0)AND(0.5195052091213822)))AND(t1.c0)))AND(vt0.c0)))AND(t1.c0)))OR(vt0.c1)) IN (((((((((((t1.c1)OR(vt0.c2)))OR(t1.c1)))AND(NULL)))OR(vt0.c1)))AND(vt0.c1)))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE (t1.c1) ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, (((((((((((vt0.c0)AND(0.5195052091213822)))AND(t1.c0)))AND(vt0.c0)))AND(t1.c0)))OR(vt0.c1)) IN (((((((((((t1.c1)OR(vt0.c2)))OR(t1.c1)))AND(NULL)))OR(vt0.c1)))AND(vt0.c1)))) ASC  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (NULL) ORDER BY (NOT (((t1.c1) BETWEEN (vt0.lid) AND (t1.c1)))) ASC;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE (NULL) ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, (((((((((((vt0.c0)AND(0.5195052091213822)))AND(t1.c0)))AND(vt0.c0)))AND(t1.c0)))OR(vt0.c1)) IN (((((((((((t1.c1)OR(vt0.c2)))OR(t1.c1)))AND(NULL)))OR(vt0.c1)))AND(vt0.c1)))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 WHERE (t1.c1) ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, (((((((((((vt0.c0)AND(0.5195052091213822)))AND(t1.c0)))AND(vt0.c0)))AND(t1.c0)))OR(vt0.c1)) IN (((((((((((t1.c1)OR(vt0.c2)))OR(t1.c1)))AND(NULL)))OR(vt0.c1)))AND(vt0.c1)))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((ABS(DISTINCT t1.c1))<(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END))) ORDER BY (- (t1.c0)) ASC  NULLS LAST, (((t1.c0) ISNULL) IN (((t1.c1) BETWEEN (NULL) AND (t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((((ABS(DISTINCT t1.c1))<(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)))AND(CASE WHEN 0.22826524980894858 THEN TIME(t1.c1, t1.c1, t1.c1, '75344844', 0.24941561913751897) WHEN ((0xfffffffff48b6142)>=(t1.c0)) THEN ((t1.c1) NOTNULL) ELSE ((x'') NOT BETWEEN (t1.c1) AND (t1.c0)) END))) ORDER BY t1.c0  NULLS LAST, (((t1.c0)) NOT BETWEEN ((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))) AND (((t1.c0 IN (t1.c1))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ ((t1.c0 IN (t1.c0))))) ORDER BY t1.c0  NULLS LAST, (((t1.c0)) NOT BETWEEN ((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))) AND (((t1.c0 IN (t1.c1)))));
SELECT * FROM t1 WHERE (((ABS(DISTINCT t1.c1))<(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END))) ORDER BY (- (t1.c0)) ASC  NULLS LAST, (((t1.c0) ISNULL) IN (((t1.c1) BETWEEN (NULL) AND (t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((((ABS(DISTINCT t1.c1))<(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)))AND(CASE WHEN 0.22826524980894858 THEN TIME(t1.c1, t1.c1, t1.c1, '75344844', 0.24941561913751897) WHEN ((0xfffffffff48b6142)>=(t1.c0)) THEN ((t1.c1) NOTNULL) ELSE ((x'') NOT BETWEEN (t1.c1) AND (t1.c0)) END))) ORDER BY t1.c0  NULLS LAST, (((t1.c0)) NOT BETWEEN ((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))) AND (((t1.c0 IN (t1.c1))))) INTERSECT SELECT DISTINCT * FROM t1 WHERE ((~ ((t1.c0 IN (t1.c0))))) ORDER BY t1.c0  NULLS LAST, (((t1.c0)) NOT BETWEEN ((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))) AND (((t1.c0 IN (t1.c1)))));
SELECT COUNT(*) FROM t1, vt0 WHERE (((('1297899451') IS FALSE) IN (((vt0.c0)GLOB(vt0.c1)), vt0.c1)));
SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE (((((('1297899451') IS FALSE) IN (((vt0.c0)GLOB(vt0.c1)))))AND(((((vt0.c2)=(vt0.c2)))>>((0.43084684440245835 IN ())))))) LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE (((((DATETIME(vt0.c2, t1.c1, vt0.c1, t1.c1, vt0.c1, vt0.lid))OR(t1.c1 COLLATE BINARY)))OR(CAST(vt0.c0 AS NUMERIC)))) LIMIT 1;
SELECT MIN(t1.c0) FROM vt0 INNER JOIN t1 ON ((((((CASE vt0.c2  WHEN t1.c0 THEN t1.c0 END)AND((vt0.c2 IN (vt0.lid)))))AND((vt0.c2 IN (vt0.c0)))))AND(((vt0.c2) IS TRUE))) WHERE (CAST(LENGTH(t1.c1) AS TEXT));
SELECT MIN(t1.c0) FROM vt0 INNER JOIN t1 ON ((((((CASE vt0.c2  WHEN t1.c0 THEN t1.c0 END)AND((vt0.c2 IN (vt0.lid)))))AND((vt0.c2 IN (vt0.c0)))))AND(((vt0.c2) IS TRUE))) WHERE (((CAST(LENGTH(t1.c1) AS TEXT))AND(CAST(((vt0.c1) IS FALSE) AS NUMERIC)))) LIMIT 2 INTERSECT SELECT ALL MIN(t1.c0) FROM vt0 INNER JOIN t1 ON ((((((CASE vt0.c2  WHEN t1.c0 THEN t1.c0 END)AND((vt0.c2 IN (vt0.lid)))))AND((vt0.c2 IN (vt0.c0)))))AND(((vt0.c2) IS TRUE))) WHERE (CAST(SQLITE_COMPILEOPTION_GET(vt0.lid) AS INTEGER)) LIMIT 0X2;
SELECT MIN(vt0.c0) FROM vt0, t1 WHERE (NULL) ORDER BY 0.9182932879455351 DESC  NULLS LAST, (~ (NULL))  NULLS FIRST, ((((vt0.c1) IS FALSE))AND(t1.c0));
SELECT ALL MIN(vt0.c0) FROM vt0, t1 WHERE (((NULL)AND(0.8982271372328591))) ORDER BY ((((((((((((vt0.c0)OR(t1.c1)))OR(vt0.lid)))OR(x'')))OR('')))AND(t1.c1))) NOT BETWEEN (((vt0.lid)>=(vt0.lid))) AND (t1.c0)) ASC LIMIT 3;
SELECT ALL MIN(vt0.lid) FROM vt0, t1 WHERE (x'2c9191' COLLATE RTRIM);
SELECT DISTINCT MIN(vt0.lid) FROM vt0, t1 NOT INDEXED WHERE (((x'2c9191' COLLATE RTRIM)AND((+ (((((x'')OR(vt0.lid)))OR(t1.c1))))))) LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(vt0.lid) FROM vt0, t1 WHERE (((((t1.c1) IS TRUE)) NOTNULL)) LIMIT 0x0;
SELECT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN (+ (t1.c1)) WHEN TRIM(DISTINCT t1.c1) THEN (('') BETWEEN (t1.c1) AND (t1.c1)) WHEN (vt0.c0 IN (vt0.c1)) THEN (- ('-1928117674')) WHEN ((vt0.lid)*(vt0.c0)) THEN ROUND(t1.c0, vt0.c1) WHEN (- (vt0.c1)) THEN UPPER(vt0.c2) END);
SELECT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN (+ (t1.c1)) WHEN TRIM(DISTINCT t1.c1) THEN (('') BETWEEN (t1.c1) AND (t1.c1)) WHEN (vt0.c0 IN (vt0.c1)) THEN (- ('-1928117674')) WHEN ((vt0.lid)*(vt0.c0)) THEN ROUND(t1.c0, vt0.c1) WHEN (- (vt0.c1)) THEN UPPER(vt0.c2) END) LIMIT 3 INTERSECT SELECT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (t1.c1) LIMIT 0x3;
SELECT ALL MAX(vt0.c0) FROM t1, vt0 WHERE (json_array_length((vt0.c1 IN (vt0.c2, vt0.lid))));
SELECT MAX(vt0.c0) FROM t1, vt0 WHERE (json_array_length((vt0.c1 IN (vt0.c2, vt0.lid)))) ORDER BY CASE ((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN (vt0.lid IN ()) THEN NULL WHEN ((x'53')>=(vt0.c0)) THEN (vt0.c0 IN ()) WHEN vt0.c2 THEN LTRIM(vt0.c0) WHEN (t1.c0 IN (vt0.c1)) THEN (NOT (vt0.c2)) WHEN '' THEN vt0.lid ELSE vt0.c2 END  NULLS FIRST LIMIT 0x1;
SELECT MAX(vt0.c1) FROM vt0, t1 WHERE ((((((vt0.c0) BETWEEN (0.5765511609537718) AND ('-2057774573'))))<=(((- (t1.c1))))));
SELECT DISTINCT MAX(vt0.c1) FROM vt0, t1 WHERE ((((((vt0.c0) BETWEEN (0.5765511609537718) AND ('-2057774573'))))<(((- (t1.c1))))));
SELECT ALL * FROM t1, vt0 WHERE ((((((((- (vt0.c0)))OR((vt0.c1 IN (t1.c0, vt0.c0)))))AND(CASE vt0.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND(CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.lid ELSE t1.c0 END)));
SELECT * FROM t1, vt0 WHERE ((((((((((- (vt0.c0)))OR((vt0.c1 IN (t1.c0, vt0.c0)))))AND(CASE vt0.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND(CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.lid ELSE t1.c0 END)))AND(x'ce43'))) LIMIT 0;
SELECT ALL * FROM t1, vt0 WHERE ((((((((- (vt0.c0)))OR((vt0.c1 IN (t1.c0, vt0.c0)))))AND(CASE vt0.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND(CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.lid ELSE t1.c0 END)));
SELECT * FROM t1, vt0 WHERE ((((((((((- (vt0.c0)))OR((vt0.c1 IN (t1.c0, vt0.c0)))))AND(CASE vt0.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)))AND(CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.lid ELSE t1.c0 END)))AND(x'ce43'))) LIMIT 0;
SELECT ALL * FROM vt0, t1 WHERE (LIKE(((vt0.c1)LIKE(vt0.c0)), ((((t1.c1)OR(x'')))AND(vt0.c1)), 'l'));
SELECT DISTINCT * FROM vt0, t1 WHERE (LIKE(((vt0.c1)LIKE(vt0.c0)), ((((t1.c1)OR(x'')))AND(vt0.c1)), 'l')) ORDER BY UPPER((t1.c1 IN ()))  NULLS LAST, ((((vt0.c1)OR(t1.c1)))AND(vt0.c2)) COLLATE NOCASE DESC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((CAST(t1.c0 AS NUMERIC)) IS TRUE)) ORDER BY UPPER((t1.c1 IN ()))  NULLS LAST, ((((vt0.c1)OR(t1.c1)))AND(vt0.c2)) COLLATE NOCASE DESC LIMIT 0x0;
SELECT ALL * FROM vt0, t1 WHERE (LIKE(((vt0.c1)LIKE(vt0.c0)), ((((t1.c1)OR(x'')))AND(vt0.c1)), 'l'));
SELECT DISTINCT * FROM vt0, t1 WHERE (LIKE(((vt0.c1)LIKE(vt0.c0)), ((((t1.c1)OR(x'')))AND(vt0.c1)), 'l')) ORDER BY UPPER((t1.c1 IN ()))  NULLS LAST, ((((vt0.c1)OR(t1.c1)))AND(vt0.c2)) COLLATE NOCASE DESC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((CAST(t1.c0 AS NUMERIC)) IS TRUE)) ORDER BY UPPER((t1.c1 IN ()))  NULLS LAST, ((((vt0.c1)OR(t1.c1)))AND(vt0.c2)) COLLATE NOCASE DESC LIMIT 0x0;
SELECT * FROM vt0, t1 WHERE (ABS(CAST(t1.c0 AS INTEGER)));
SELECT DISTINCT * FROM vt0, t1 WHERE (((ABS(CAST(t1.c0 AS INTEGER)))AND(COALESCE(DISTINCT (- (t1.c1)), (NOT (t1.c0)), NULLIF('781813584', t1.c1), CASE vt0.c2  WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c2 ELSE vt0.lid END, (vt0.c1 IN (vt0.c1, vt0.lid)))))) ORDER BY (((t1.c0, t1.c1, vt0.lid, vt0.c0)) BETWEEN ((((vt0.c2) ISNULL), vt0.c0 COLLATE RTRIM, (t1.c1 IN (vt0.c1, t1.c1)), (((t1.c0, vt0.c1)) BETWEEN ((t1.c1, vt0.c1)) AND ((vt0.c0, vt0.c2))))) AND ((CAST(t1.c0 AS REAL), ((vt0.c2) NOTNULL), CAST(vt0.c2 AS INTEGER), ((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.lid)))))  NULLS LAST, CASE (+ (vt0.c0))  WHEN (((vt0.lid, vt0.lid)) NOT BETWEEN ((t1.c0, NULL)) AND ((vt0.c0, vt0.c1))) THEN ((vt0.c1)&(t1.c1)) WHEN ((vt0.c1) NOTNULL) THEN ((vt0.lid)IS(vt0.c0)) ELSE ((vt0.lid) ISNULL) END  NULLS FIRST LIMIT 0x2;
SELECT * FROM vt0, t1 WHERE (ABS(CAST(t1.c0 AS INTEGER)));
SELECT DISTINCT * FROM vt0, t1 WHERE (((ABS(CAST(t1.c0 AS INTEGER)))AND(COALESCE(DISTINCT (- (t1.c1)), (NOT (t1.c0)), NULLIF('781813584', t1.c1), CASE vt0.c2  WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c2 ELSE vt0.lid END, (vt0.c1 IN (vt0.c1, vt0.lid)))))) ORDER BY (((t1.c0, t1.c1, vt0.lid, vt0.c0)) BETWEEN ((((vt0.c2) ISNULL), vt0.c0 COLLATE RTRIM, (t1.c1 IN (vt0.c1, t1.c1)), (((t1.c0, vt0.c1)) BETWEEN ((t1.c1, vt0.c1)) AND ((vt0.c0, vt0.c2))))) AND ((CAST(t1.c0 AS REAL), ((vt0.c2) NOTNULL), CAST(vt0.c2 AS INTEGER), ((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.lid)))))  NULLS LAST, CASE (+ (vt0.c0))  WHEN (((vt0.lid, vt0.lid)) NOT BETWEEN ((t1.c0, NULL)) AND ((vt0.c0, vt0.c1))) THEN ((vt0.c1)&(t1.c1)) WHEN ((vt0.c1) NOTNULL) THEN ((vt0.lid)IS(vt0.c0)) ELSE ((vt0.lid) ISNULL) END  NULLS FIRST LIMIT 0x2;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((CAST(t1.c1 AS INTEGER)) NOT BETWEEN (((t1.c0)|(t1.c0))) AND ((((t1.c1, t1.c1))<=((t1.c0, t1.c1))))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER)) NOT BETWEEN (((t1.c0)|(t1.c0))) AND ((((t1.c1, t1.c1))<=((t1.c0, t1.c1))))))AND(CASE ((t1.c0) NOTNULL)  WHEN 0.38379442380088735 COLLATE RTRIM THEN t1.c1 END)));
SELECT * FROM vt0 WHERE (CASE (((vt0.lid, vt0.c2, vt0.lid)) BETWEEN ((vt0.lid, vt0.c2, NULL)) AND ((vt0.c2, vt0.c2, vt0.c2)))  WHEN ((((((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))AND(vt0.lid)))AND(vt0.c1)))AND(vt0.lid)) THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN 0.8996903898069204 ELSE vt0.c0 END) ORDER BY ((((((((((((((((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)))AND(vt0.lid)))OR(vt0.lid)))OR(vt0.c1)))OR(vt0.lid)))AND(x'24')))AND((vt0.c0 IN (vt0.c2)))))OR(vt0.c0)), (~ (SQLITE_COMPILEOPTION_USED(vt0.c1))), (((vt0.lid))<>((((NULL) IS TRUE))));
SELECT ALL * FROM vt0 WHERE (((CASE (((vt0.lid, vt0.c2, vt0.lid)) BETWEEN ((vt0.lid, vt0.c2, NULL)) AND ((vt0.c2, vt0.c2, vt0.c2)))  WHEN ((((((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))AND(vt0.lid)))AND(vt0.c1)))AND(vt0.lid)) THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN 0.8996903898069204 ELSE vt0.c0 END)AND(TRIM(DISTINCT vt0.c1 COLLATE RTRIM, ((((((vt0.c0)OR(NULL)))AND(vt0.c1)))OR(vt0.c0)))))) ORDER BY ((((((((((((((((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)))AND(vt0.lid)))OR(vt0.lid)))OR(vt0.c1)))OR(vt0.lid)))AND(x'24')))AND((vt0.c0 IN (vt0.c2)))))OR(vt0.c0)), (~ (SQLITE_COMPILEOPTION_USED(vt0.c1))), (((vt0.lid))!=((((NULL) IS TRUE)))) INTERSECT SELECT * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)), (vt0.c2 IN ())))) ORDER BY ((((((((((((((((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)))AND(vt0.lid)))OR(vt0.lid)))OR(vt0.c1)))OR(vt0.lid)))AND(x'24')))AND((vt0.c0 IN (vt0.c2)))))OR(vt0.c0)), (~ (SQLITE_COMPILEOPTION_USED(vt0.c1))), (((vt0.lid))!=((((NULL) IS TRUE))));
SELECT * FROM vt0 WHERE (CASE (((vt0.lid, vt0.c2, vt0.lid)) BETWEEN ((vt0.lid, vt0.c2, NULL)) AND ((vt0.c2, vt0.c2, vt0.c2)))  WHEN ((((((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))AND(vt0.lid)))AND(vt0.c1)))AND(vt0.lid)) THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN 0.8996903898069204 ELSE vt0.c0 END) ORDER BY ((((((((((((((((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)))AND(vt0.lid)))OR(vt0.lid)))OR(vt0.c1)))OR(vt0.lid)))AND(x'24')))AND((vt0.c0 IN (vt0.c2)))))OR(vt0.c0)), (~ (SQLITE_COMPILEOPTION_USED(vt0.c1))), (((vt0.lid))<>((((NULL) IS TRUE))));
SELECT ALL * FROM vt0 WHERE (((CASE (((vt0.lid, vt0.c2, vt0.lid)) BETWEEN ((vt0.lid, vt0.c2, NULL)) AND ((vt0.c2, vt0.c2, vt0.c2)))  WHEN ((((((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))AND(vt0.lid)))AND(vt0.c1)))AND(vt0.lid)) THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN 0.8996903898069204 ELSE vt0.c0 END)AND(TRIM(DISTINCT vt0.c1 COLLATE RTRIM, ((((((vt0.c0)OR(NULL)))AND(vt0.c1)))OR(vt0.c0)))))) ORDER BY ((((((((((((((((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)))AND(vt0.lid)))OR(vt0.lid)))OR(vt0.c1)))OR(vt0.lid)))AND(x'24')))AND((vt0.c0 IN (vt0.c2)))))OR(vt0.c0)), (~ (SQLITE_COMPILEOPTION_USED(vt0.c1))), (((vt0.lid))!=((((NULL) IS TRUE)))) INTERSECT SELECT * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)), (vt0.c2 IN ())))) ORDER BY ((((((((((((((((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)))AND(vt0.lid)))OR(vt0.lid)))OR(vt0.c1)))OR(vt0.lid)))AND(x'24')))AND((vt0.c0 IN (vt0.c2)))))OR(vt0.c0)), (~ (SQLITE_COMPILEOPTION_USED(vt0.c1))), (((vt0.lid))!=((((NULL) IS TRUE))));
SELECT ALL MIN(vt0.c1) FROM vt0, t1 WHERE (CAST(((((((t1.c0)AND(vt0.lid)))OR(t1.c0)))AND(t1.c1)) AS REAL)) ORDER BY ((((CASE vt0.c2  WHEN t1.c1 THEN t1.c0 WHEN vt0.c1 THEN t1.c1 WHEN vt0.c2 THEN vt0.c0 END)AND(x'70')))OR('9')) DESC  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM vt0, t1 WHERE (((CAST(((((((t1.c0)AND(vt0.lid)))OR(t1.c0)))AND(t1.c1)) AS REAL))AND(((t1.c0 COLLATE RTRIM) NOT NULL)))) ORDER BY NULLIF(CASE t1.c0  WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c2 WHEN vt0.c0 THEN t1.c1 WHEN vt0.c2 THEN t1.c0 ELSE vt0.lid END, ((vt0.c2) IS TRUE))  NULLS LAST, ((t1.c1 COLLATE RTRIM)<<(LAST_INSERT_ROWID())), LOWER(DISTINCT ((vt0.c2) BETWEEN (vt0.c0) AND (0Xfffffffff4a934cd))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.lid) ORDER BY LIKELY(DISTINCT CAST(vt0.c1 AS TEXT)), ((((((vt0.c0)GLOB(vt0.c2)))AND(CAST(vt0.lid AS BLOB))))OR(x'')), (((((vt0.lid) NOT NULL)))<>(((((vt0.lid, vt0.c0))>=((vt0.lid, vt0.c0)))))) ASC;
SELECT DISTINCT * FROM vt0 WHERE (vt0.lid) ORDER BY CAST(((vt0.c1)>(vt0.lid)) AS INTEGER) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (LIKE((vt0.c1 IN ()), COALESCE(vt0.lid, vt0.c2, vt0.lid, vt0.c2, vt0.c0), 'b')) ORDER BY CAST(((vt0.c1)>(vt0.lid)) AS INTEGER) LIMIT 0X2;
SELECT * FROM vt0 WHERE (vt0.lid) ORDER BY LIKELY(DISTINCT CAST(vt0.c1 AS TEXT)), ((((((vt0.c0)GLOB(vt0.c2)))AND(CAST(vt0.lid AS BLOB))))OR(x'')), (((((vt0.lid) NOT NULL)))<>(((((vt0.lid, vt0.c0))>=((vt0.lid, vt0.c0)))))) ASC;
SELECT DISTINCT * FROM vt0 WHERE (vt0.lid) ORDER BY CAST(((vt0.c1)>(vt0.lid)) AS INTEGER) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (LIKE((vt0.c1 IN ()), COALESCE(vt0.lid, vt0.c2, vt0.lid, vt0.c2, vt0.c0), 'b')) ORDER BY CAST(((vt0.c1)>(vt0.lid)) AS INTEGER) LIMIT 0X2;
SELECT ALL MIN(t1.c1) FROM vt0, t1 WHERE ((((vt0.lid COLLATE RTRIM, vt0.c1 COLLATE NOCASE, (((t1.c0, t1.c1, vt0.c1, '-324521247', vt0.lid))!=((vt0.c1, vt0.lid, vt0.c0, t1.c1, vt0.c2))), ((vt0.lid)<(t1.c1)), vt0.c1 COLLATE RTRIM, CASE WHEN t1.c0 THEN vt0.c0 ELSE x'8e' END, ((vt0.c0) IS FALSE)))<>((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)), CAST(x'' AS INTEGER), CAST(vt0.c2 AS REAL), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)+(vt0.c2)), UPPER(DISTINCT t1.c0), ((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c2))))));
SELECT DISTINCT MIN(t1.c1) FROM vt0, t1 WHERE ((((vt0.lid COLLATE RTRIM, vt0.c1 COLLATE NOCASE, (((t1.c0, t1.c1, vt0.c1, '-324521247', vt0.lid))<>((vt0.c1, vt0.lid, vt0.c0, t1.c1, vt0.c2))), ((vt0.lid)<(t1.c1)), vt0.c1 COLLATE RTRIM, CASE WHEN t1.c0 THEN vt0.c0 ELSE x'8e' END, ((vt0.c0) IS FALSE)))<>((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)), CAST(x'' AS INTEGER), CAST(vt0.c2 AS REAL), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)+(vt0.c2)), UPPER(DISTINCT t1.c0), ((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)))))) ORDER BY ((NULL)<>(((t1.c0)GLOB(t1.c1))))  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c2) AND (t1.c0))) IS TRUE) ASC, 0.8210084642642758 COLLATE RTRIM ASC  NULLS LAST INTERSECT SELECT DISTINCT MIN(t1.c1) FROM vt0, t1 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 END) NOTNULL)) ORDER BY ((NULL)!=(((t1.c0)GLOB(t1.c1))))  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c2) AND (t1.c0))) IS TRUE) ASC, 0.8210084642642758 COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (0.031544898619934925);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((0.031544898619934925)AND((((((vt0.c2, vt0.c0)) BETWEEN ((t1.c0, vt0.c0)) AND ((vt0.c2, vt0.c1))))|(((vt0.lid) NOTNULL)))))) ORDER BY '-', ABS(DISTINCT CAST(t1.c1 AS BLOB)) ASC LIMIT 0X1 INTERSECT SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN vt0.c1 THEN t1.c0 WHEN t1.c1 THEN vt0.lid WHEN t1.c1 THEN vt0.lid WHEN t1.c0 THEN vt0.lid END AS INTEGER)) ORDER BY '-', ABS(DISTINCT CAST(t1.c1 AS BLOB)) ASC LIMIT 0x1;
SELECT * FROM t1 WHERE (((t1.c0 COLLATE BINARY) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END) AND (LIKELIHOOD(DISTINCT t1.c1, t1.c1))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0 COLLATE BINARY) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END) AND (LIKELIHOOD(DISTINCT t1.c1, t1.c1))))AND((((- (t1.c1)))||('-97176161')))));
SELECT * FROM t1 WHERE (((t1.c0 COLLATE BINARY) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END) AND (LIKELIHOOD(DISTINCT t1.c1, t1.c1))));
SELECT ALL * FROM vt0, t1 WHERE (NULLIF(0x59c34714, TRIM(DISTINCT t1.c1))) ORDER BY ((vt0.c0) IS FALSE) ASC, ((((((((((((vt0.c1)OR(t1.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))>=(((t1.c0)&(t1.c0)))) ASC  NULLS LAST, CASE (('23235364') ISNULL)  WHEN TIME(vt0.c0, vt0.lid, vt0.c0) THEN CAST(vt0.c2 AS NUMERIC) WHEN ((((((((((vt0.lid)AND(vt0.c1)))OR(-9.77946708E8)))AND(vt0.lid)))OR(vt0.c2)))AND(vt0.c0)) THEN ((((((vt0.lid)AND(vt0.c0)))OR(t1.c0)))OR(vt0.lid)) WHEN vt0.c1 THEN (((t1.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.lid, vt0.c0, t1.c0)) AND ((t1.c0, vt0.c1, vt0.lid))) WHEN ((t1.c0) NOT NULL) THEN ((('N8'))>((vt0.c0))) ELSE x'88' END  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (((NULLIF(0X59c34714, TRIM(DISTINCT t1.c1)))AND((t1.c0 IN (vt0.c1, vt0.c2)) COLLATE BINARY))) ORDER BY NULLIF(('1352990148' IN (vt0.lid)), vt0.c0 COLLATE RTRIM) DESC  NULLS FIRST, ((((t1.c1)OR(vt0.c2))) IS FALSE)  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (CASE CAST(vt0.c2 AS INTEGER)  WHEN CASE WHEN vt0.c0 THEN 0.23657168226984127 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN UNLIKELY(DISTINCT vt0.c2) ELSE CASE t1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.lid END END) ORDER BY NULLIF(('1352990148' IN (vt0.lid)), vt0.c0 COLLATE RTRIM) DESC  NULLS FIRST, ((((t1.c1)OR(vt0.c2))) IS FALSE)  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM vt0, t1 WHERE (NULLIF(0x59c34714, TRIM(DISTINCT t1.c1))) ORDER BY ((vt0.c0) IS FALSE) ASC, ((((((((((((vt0.c1)OR(t1.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))>=(((t1.c0)&(t1.c0)))) ASC  NULLS LAST, CASE (('23235364') ISNULL)  WHEN TIME(vt0.c0, vt0.lid, vt0.c0) THEN CAST(vt0.c2 AS NUMERIC) WHEN ((((((((((vt0.lid)AND(vt0.c1)))OR(-9.77946708E8)))AND(vt0.lid)))OR(vt0.c2)))AND(vt0.c0)) THEN ((((((vt0.lid)AND(vt0.c0)))OR(t1.c0)))OR(vt0.lid)) WHEN vt0.c1 THEN (((t1.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.lid, vt0.c0, t1.c0)) AND ((t1.c0, vt0.c1, vt0.lid))) WHEN ((t1.c0) NOT NULL) THEN ((('N8'))>((vt0.c0))) ELSE x'88' END  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (((NULLIF(0X59c34714, TRIM(DISTINCT t1.c1)))AND((t1.c0 IN (vt0.c1, vt0.c2)) COLLATE BINARY))) ORDER BY NULLIF(('1352990148' IN (vt0.lid)), vt0.c0 COLLATE RTRIM) DESC  NULLS FIRST, ((((t1.c1)OR(vt0.c2))) IS FALSE)  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (CASE CAST(vt0.c2 AS INTEGER)  WHEN CASE WHEN vt0.c0 THEN 0.23657168226984127 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN UNLIKELY(DISTINCT vt0.c2) ELSE CASE t1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.lid END END) ORDER BY NULLIF(('1352990148' IN (vt0.lid)), vt0.c0 COLLATE RTRIM) DESC  NULLS FIRST, ((((t1.c1)OR(vt0.c2))) IS FALSE)  NULLS FIRST LIMIT 0x0;
SELECT MAX(t1.c1) FROM t1 LEFT OUTER JOIN vt0 ON (((x'cb6b', ((vt0.c2) IS FALSE)))>=((CASE vt0.lid  WHEN vt0.c1 THEN t1.c1 ELSE t1.c0 END, CASE WHEN t1.c0 THEN vt0.c1 END))) WHERE (((t1.c1 COLLATE RTRIM) NOT NULL)) ORDER BY LIKELY(((vt0.c0)/(vt0.c2)));
SELECT DISTINCT MAX(t1.c1) FROM t1 LEFT OUTER JOIN vt0 ON (((x'cb6b', ((vt0.c2) IS FALSE)))>=((CASE vt0.lid  WHEN vt0.c1 THEN t1.c1 ELSE t1.c0 END, CASE WHEN t1.c0 THEN vt0.c1 END))) WHERE (((t1.c1 COLLATE RTRIM) NOT NULL)) ORDER BY IFNULL(CASE t1.c0  WHEN NULL THEN -1513329194 WHEN t1.c0 THEN '-1413290201' END, ((((vt0.c0)OR(t1.c0)))AND(vt0.c0))) DESC  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE (CAST('ThZwnZF''w' AS NUMERIC)) ORDER BY (((t1.c1) NOT BETWEEN (t1.c0) AND (vt0.c2)) IN (t1.c1 COLLATE RTRIM)) DESC  NULLS LAST, COALESCE(vt0.lid COLLATE RTRIM, (vt0.c1 IN ()))  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (((CAST('ThZwnZF''w' AS NUMERIC))AND(((t1.c0 COLLATE NOCASE) IS TRUE)))) ORDER BY CASE WHEN ((t1.c1) NOT NULL) THEN vt0.c0 END DESC  NULLS LAST, vt0.c0  NULLS FIRST, CAST((vt0.c0 IN (vt0.c0)) AS BLOB) ASC LIMIT 3;
SELECT * FROM t1, vt0 WHERE (CAST('ThZwnZF''w' AS NUMERIC)) ORDER BY (((t1.c1) NOT BETWEEN (t1.c0) AND (vt0.c2)) IN (t1.c1 COLLATE RTRIM)) DESC  NULLS LAST, COALESCE(vt0.lid COLLATE RTRIM, (vt0.c1 IN ()))  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (((CAST('ThZwnZF''w' AS NUMERIC))AND(((t1.c0 COLLATE NOCASE) IS TRUE)))) ORDER BY CASE WHEN ((t1.c1) NOT NULL) THEN vt0.c0 END DESC  NULLS LAST, vt0.c0  NULLS FIRST, CAST((vt0.c0 IN (vt0.c0)) AS BLOB) ASC LIMIT 3;
SELECT * FROM t1, vt0 WHERE (vt0.c1) ORDER BY ((COALESCE(vt0.c2, t1.c1, vt0.c2, 0.032118422316417594, t1.c0, vt0.c0, vt0.c0)) BETWEEN (CASE t1.c1  WHEN vt0.c1 THEN NULL END) AND (((vt0.lid) IS TRUE))) ASC  NULLS FIRST, ((((vt0.lid)=(vt0.c2)))||(load_extension(t1.c0, t1.c0))), (HEX(5.64106157E8) IN ());
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c1)AND(ROUND(t1.c1, ((vt0.c2) ISNULL))))) ORDER BY ((COALESCE(vt0.c2, t1.c1, vt0.c2, 0.032118422316417594, t1.c0, vt0.c0, vt0.c0)) BETWEEN (CASE t1.c1  WHEN vt0.c1 THEN NULL END) AND (((vt0.lid) IS TRUE))) ASC  NULLS FIRST, ((((vt0.lid)==(vt0.c2)))||(load_extension(t1.c0, t1.c0))), (HEX(5.64106157E8) IN ()) LIMIT 1;
SELECT * FROM t1, vt0 WHERE (vt0.c1) ORDER BY ((COALESCE(vt0.c2, t1.c1, vt0.c2, 0.032118422316417594, t1.c0, vt0.c0, vt0.c0)) BETWEEN (CASE t1.c1  WHEN vt0.c1 THEN NULL END) AND (((vt0.lid) IS TRUE))) ASC  NULLS FIRST, ((((vt0.lid)=(vt0.c2)))||(load_extension(t1.c0, t1.c0))), (HEX(5.64106157E8) IN ());
SELECT COUNT(*) FROM t1 WHERE ((((((('[')OR(t1.c0)))AND(t1.c1)))<((x'23' IN (t1.c0))))) ORDER BY ((((t1.c0)>>(t1.c0))) BETWEEN (((t1.c0) IS TRUE)) AND (LIKELIHOOD(t1.c0, 0.11400405890040977))) ASC, t1.c0 ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((((('[')OR(t1.c0)))AND(t1.c1)))<((x'23' IN (t1.c0)))))AND((((t1.c1, (-1279868254 IN (t1.c0))))<=(('405353074' COLLATE BINARY, t1.c1)))))) ORDER BY (((((((t1.c1)OR(t1.c1)))AND(0Xffffffff8274aa45))))>(((NOT (t1.c1))))) ASC;
SELECT * FROM t1 WHERE (((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) COLLATE BINARY);
SELECT * FROM t1 WHERE (((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) COLLATE BINARY) ORDER BY ((t1.c1 COLLATE NOCASE) BETWEEN ((NOT (t1.c0))) AND (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST, ((((NOT (t1.c0))))>=((CAST(t1.c1 AS TEXT)))) DESC;
SELECT * FROM t1 WHERE (((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) COLLATE BINARY);
SELECT * FROM t1 WHERE (((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) COLLATE BINARY) ORDER BY ((t1.c1 COLLATE NOCASE) BETWEEN ((NOT (t1.c0))) AND (CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST, ((((NOT (t1.c0))))>=((CAST(t1.c1 AS TEXT)))) DESC;
SELECT MIN(t1.c0) FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(0.8659107420055951 AS INTEGER)) BETWEEN (((t1.c0)||(vt0.lid))) AND (((vt0.lid)>(vt0.c1)))) WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0)==(vt0.lid)))) ORDER BY CASE WHEN vt0.c0 THEN t1.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 END COLLATE RTRIM ASC, '-1635427576';
SELECT ALL MIN(t1.c0) FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(0.8659107420055951 AS INTEGER)) BETWEEN (((t1.c0)||(vt0.lid))) AND (((vt0.lid)>(vt0.c1)))) WHERE (((SQLITE_COMPILEOPTION_USED(((vt0.c0)==(vt0.lid))))AND(('''NY-h
' IN ())))) ORDER BY CASE WHEN vt0.c0 THEN t1.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 END COLLATE RTRIM ASC, '-1635427576';
SELECT ALL * FROM vt0 WHERE ((+ (vt0.lid COLLATE BINARY))) ORDER BY ((vt0.c1 IN (vt0.lid)) IN (vt0.c0 COLLATE BINARY, ((vt0.c1)/(vt0.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((+ (vt0.lid COLLATE BINARY)))AND((((~ (vt0.c2)))IS NOT(((NULL) BETWEEN (vt0.c1) AND (vt0.c0))))))) ORDER BY ((vt0.c1 IN (vt0.lid)) IN (vt0.c0 COLLATE BINARY, ((vt0.c1)/(vt0.c0))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.lid)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) ORDER BY ((vt0.c1 IN (vt0.lid)) IN (vt0.c0 COLLATE BINARY, ((vt0.c1)/(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((+ (vt0.lid COLLATE BINARY))) ORDER BY ((vt0.c1 IN (vt0.lid)) IN (vt0.c0 COLLATE BINARY, ((vt0.c1)/(vt0.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((+ (vt0.lid COLLATE BINARY)))AND((((~ (vt0.c2)))IS NOT(((NULL) BETWEEN (vt0.c1) AND (vt0.c0))))))) ORDER BY ((vt0.c1 IN (vt0.lid)) IN (vt0.c0 COLLATE BINARY, ((vt0.c1)/(vt0.c0))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.lid)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) ORDER BY ((vt0.c1 IN (vt0.lid)) IN (vt0.c0 COLLATE BINARY, ((vt0.c1)/(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)OR(((t1.c0) NOTNULL)))) ORDER BY (((~ (0.8421866819036528)))IS(((t1.c0) ISNULL)));
SELECT COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)OR(((t1.c0) NOTNULL)))) ORDER BY ((t1.c0 IN ()) IN (json_insert(t1.c1, t1.c1, t1.c1, t1.c1, t1.c1, t1.c0, t1.c1))) LIMIT 0 INTERSECT SELECT COUNT(*) FROM t1 WHERE ((((NULL) NOTNULL) IN (t1.c1))) ORDER BY ((t1.c0 IN ()) IN (json_insert(t1.c1, t1.c1, t1.c1, t1.c1, t1.c1, t1.c0, t1.c1))) LIMIT 0;
SELECT MIN(vt0.c1) FROM vt0 WHERE (CAST(CAST(vt0.c2 AS INTEGER) AS TEXT));
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((CAST(CAST(vt0.c2 AS INTEGER) AS TEXT))AND(vt0.c0))) LIMIT 1;
SELECT ALL * FROM t1, vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY (((vt0.lid IN (t1.c0)))OR(((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT * FROM t1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE)AND(((((((((((vt0.c0)GLOB(t1.c0)))AND((+ (vt0.c0)))))OR(((t1.c1)/(t1.c0)))))OR(((vt0.c2)!=(t1.c1)))))AND(CAST(t1.c1 AS REAL)))))) ORDER BY (((vt0.lid IN (t1.c0)))OR(((vt0.c0) NOTNULL))) ASC  NULLS LAST INTERSECT SELECT ALL * FROM t1, vt0 WHERE ((+ (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(0.47093642199023156))))) ORDER BY (((vt0.lid IN (t1.c0)))OR(((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY (((vt0.lid IN (t1.c0)))OR(((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT * FROM t1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE)AND(((((((((((vt0.c0)GLOB(t1.c0)))AND((+ (vt0.c0)))))OR(((t1.c1)/(t1.c0)))))OR(((vt0.c2)!=(t1.c1)))))AND(CAST(t1.c1 AS REAL)))))) ORDER BY (((vt0.lid IN (t1.c0)))OR(((vt0.c0) NOTNULL))) ASC  NULLS LAST INTERSECT SELECT ALL * FROM t1, vt0 WHERE ((+ (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(0.47093642199023156))))) ORDER BY (((vt0.lid IN (t1.c0)))OR(((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 WHERE (((CAST('-1205288861' AS BLOB))IS(((vt0.c2) NOTNULL))));
SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE (((CAST('-1205288861' AS BLOB))IS(((vt0.c2) NOTNULL)))) ORDER BY (((((t1.c0, vt0.c2))>=((vt0.c1, vt0.c0))))&(COALESCE(DISTINCT t1.c1, -1.993536982E9, vt0.c1, '', 'i(''qｦ'))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE (((vt0.lid)LIKE(HEX(DISTINCT vt0.c2)))) ORDER BY (((((t1.c0, vt0.c2))>=((vt0.c1, vt0.c0))))&(COALESCE(DISTINCT t1.c1, -1.993536982E9, vt0.c1, '', 'i(''qｦ'))) ASC LIMIT 0x0;
SELECT ALL MAX(vt0.c1) FROM t1, vt0 WHERE (((((((t1.c1)<(vt0.c1)))AND(CASE WHEN t1.c1 THEN vt0.lid WHEN t1.c1 THEN x'' WHEN vt0.c0 THEN vt0.lid END)))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.lid)))));
SELECT MAX(vt0.c1) FROM t1, vt0 WHERE (((((((t1.c1)<(vt0.c1)))AND(CASE WHEN t1.c1 THEN vt0.lid WHEN t1.c1 THEN x'' WHEN vt0.c0 THEN vt0.lid END)))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.lid))))) ORDER BY CAST(CAST(vt0.lid AS TEXT) AS REAL)  NULLS LAST, t1.c0 LIMIT 0X1;
SELECT MAX(vt0.c1) FROM vt0 WHERE (CAST((((vt0.c2, vt0.c1))>=((vt0.c2, vt0.c1))) AS BLOB));
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((CAST((((vt0.c2, vt0.c1))>((vt0.c2, vt0.c1))) AS BLOB))AND((((+ (vt0.c0)))<<(((vt0.c1)&(vt0.c0))))))) LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)OR((- (t1.c1)))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))) ORDER BY (~ (((t1.c1)&(t1.c0)))) DESC;
SELECT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)OR((- (t1.c1)))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))) ORDER BY (((((((((((((t1.c1))<=((t1.c0))))AND(((t1.c1)>(t1.c0)))))OR(UNLIKELY(t1.c0))))AND(t1.c0)))OR('')))AND(((t1.c1)||(t1.c1)))) DESC  NULLS LAST, LOWER((t1.c0 IN ())) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)OR((- (t1.c1)))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))) ORDER BY (~ (((t1.c1)&(t1.c0)))) DESC;
SELECT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)OR((- (t1.c1)))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))) ORDER BY (((((((((((((t1.c1))<=((t1.c0))))AND(((t1.c1)>(t1.c0)))))OR(UNLIKELY(t1.c0))))AND(t1.c0)))OR('')))AND(((t1.c1)||(t1.c1)))) DESC  NULLS LAST, LOWER((t1.c0 IN ())) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((RTRIM(vt0.lid))+(CAST('u' AS BLOB))));
SELECT DISTINCT * FROM vt0 WHERE (((((RTRIM(vt0.lid))+(CAST('u' AS BLOB))))AND(CAST(vt0.c0 AS INTEGER) COLLATE NOCASE))) ORDER BY ((0.5056899385172552)<=((NOT (vt0.c1)))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN '-1767369083' END))>=((((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.lid)))AND(vt0.lid)))))) ORDER BY ((0.5056899385172552)<=((NOT (vt0.c1)))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((RTRIM(vt0.lid))+(CAST('u' AS BLOB))));
SELECT DISTINCT * FROM vt0 WHERE (((((RTRIM(vt0.lid))+(CAST('u' AS BLOB))))AND(CAST(vt0.c0 AS INTEGER) COLLATE NOCASE))) ORDER BY ((0.5056899385172552)<=((NOT (vt0.c1)))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN '-1767369083' END))>=((((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.lid)))AND(vt0.lid)))))) ORDER BY ((0.5056899385172552)<=((NOT (vt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON ((vt0.c2 COLLATE NOCASE) BETWEEN (((vt0.c1) NOTNULL)) AND (UNLIKELY(vt0.lid))) WHERE ((+ (((t1.c1) NOT NULL)))) ORDER BY (((t1.c0)IS(t1.c1)) IN (CASE WHEN vt0.lid THEN t1.c1 ELSE vt0.lid END, vt0.c2)) DESC;
SELECT DISTINCT COUNT(*) FROM t1 INNER JOIN vt0 ON ((vt0.c2 COLLATE NOCASE) BETWEEN (((vt0.c1) NOTNULL)) AND (UNLIKELY(vt0.lid))) WHERE ((+ (((t1.c1) NOT NULL)))) ORDER BY (((t1.c0)IS(t1.c1)) IN (CASE WHEN vt0.lid THEN t1.c1 ELSE vt0.lid END, vt0.c2)) DESC;
SELECT ALL MIN(vt0.c0) FROM vt0 CROSS JOIN t1 ON t1.c1 WHERE (((0.4124881950623419)<>(t1.c1 COLLATE RTRIM))) ORDER BY (NOT (((vt0.c1)<<(vt0.c2))))  NULLS LAST, ((vt0.lid) BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt0.c1 THEN t1.c1 ELSE vt0.lid END) AND (vt0.c1 COLLATE RTRIM)) ASC, ((0.05036455809364471)+(CAST(t1.c0 AS BLOB))) ASC;
SELECT MIN(vt0.c0) FROM vt0 CROSS JOIN t1 ON t1.c1 WHERE (((0.4124881950623419)>(t1.c1 COLLATE RTRIM))) ORDER BY (NOT (((vt0.c1)<<(vt0.c2))))  NULLS LAST, ((vt0.lid) BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt0.c1 THEN t1.c1 ELSE vt0.lid END) AND (vt0.c1 COLLATE RTRIM)) ASC, ((0.05036455809364471)+(CAST(t1.c0 AS BLOB))) ASC LIMIT 1 INTERSECT SELECT MIN(vt0.c0) FROM vt0 CROSS JOIN t1 ON t1.c1 WHERE (CASE CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.c2 ELSE t1.c1 END  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) THEN CAST(vt0.lid AS BLOB) WHEN ((vt0.c2) BETWEEN (t1.c0) AND (t1.c1)) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) WHEN ((t1.c0) BETWEEN (vt0.c0) AND (t1.c1)) THEN CAST(vt0.c2 AS BLOB) WHEN ((vt0.c0)LIKE(x'')) THEN (- (t1.c0)) END) ORDER BY (NOT (((vt0.c1)<<(vt0.c2))))  NULLS LAST, ((vt0.lid) BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt0.c1 THEN t1.c1 ELSE vt0.lid END) AND (vt0.c1 COLLATE RTRIM)) ASC, ((0.05036455809364471)+(CAST(t1.c0 AS BLOB))) ASC LIMIT 0x1;
SELECT MAX(vt0.c1) FROM t1, vt0 WHERE ((((vt0.c0) BETWEEN (t1.c0) AND (t1.c1)) IN ())) ORDER BY ((t1.c0 COLLATE RTRIM) NOT BETWEEN ((((0xffffffffa8ef5204, vt0.c1))>(('0.9849697064163125', t1.c0)))) AND ('-510524931')) ASC  NULLS FIRST, NULL  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c1) FROM t1, vt0 WHERE ((((vt0.c0) BETWEEN (t1.c0) AND (t1.c1)) IN ())) ORDER BY ((((t1.c0)%(t1.c0)))AND((- (t1.c1)))) INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM t1, vt0 WHERE (CAST(((vt0.c2)%(t1.c0)) AS TEXT)) ORDER BY ((((t1.c0)%(t1.c0)))AND((- (t1.c1))));
SELECT COUNT(*) FROM t1 WHERE (RTRIM((t1.c1 IN (t1.c1))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (RTRIM((t1.c1 IN (t1.c1))));
SELECT MAX(vt0.c2) FROM vt0 WHERE ((~ (CAST(vt0.c1 AS TEXT)))) ORDER BY (~ (((0.9186935030443071)%(vt0.c2))))  NULLS FIRST, vt0.lid DESC, 0.7320069439468709 ASC  NULLS LAST;
SELECT MAX(vt0.c2) FROM vt0 WHERE ((~ (CAST(vt0.c1 AS TEXT)))) ORDER BY CASE WHEN LIKELIHOOD(vt0.lid, vt0.c0) THEN CAST(vt0.c1 AS NUMERIC) WHEN CAST(vt0.c2 AS TEXT) THEN (((vt0.c2, vt0.c1)) BETWEEN ((vt0.c1, x'')) AND ((vt0.c1, x'07087c0f'))) WHEN ((((((((vt0.c1)OR(200210160)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c2) NOT BETWEEN (vt0.lid) AND (vt0.c2)) END DESC  NULLS FIRST INTERSECT SELECT MAX(vt0.c2) FROM vt0 WHERE (((((((((0.3479084558304395)AND(((NULL) IS FALSE))))AND(((vt0.lid)LIKE(0.32691867950062137)))))OR((vt0.c2 IN (vt0.c2)))))AND(vt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN LIKELIHOOD(vt0.lid, vt0.c0) THEN CAST(vt0.c1 AS NUMERIC) WHEN CAST(vt0.c2 AS TEXT) THEN (((vt0.c2, vt0.c1)) BETWEEN ((vt0.c1, x'')) AND ((vt0.c1, x'07087c0f'))) WHEN ((((((((vt0.c1)OR(200210160)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c2) NOT BETWEEN (vt0.lid) AND (vt0.c2)) END DESC  NULLS FIRST;
SELECT MAX(t1.c1) FROM t1 WHERE ((NOT (t1.c0 COLLATE BINARY)));
SELECT ALL MAX(t1.c1) FROM t1 NOT INDEXED WHERE ((NOT (t1.c0 COLLATE BINARY))) INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE ((((t1.c1)) BETWEEN (((((t1.c0))<>((x'ee49'))))) AND ((((t1.c1) IS TRUE)))));
SELECT * FROM t1 WHERE (TRIM(0x906e096));
SELECT * FROM t1 WHERE (TRIM(151445654)) ORDER BY (t1.c1 IN (CAST(t1.c0 AS BLOB))), LIKELIHOOD((((t1.c1, t1.c0, t1.c1))==(('lL65nQ', t1.c0, t1.c0))), (- (t1.c1)))  NULLS LAST, 'dKbP.' DESC LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((NOT (((t1.c1)LIKE(t1.c1))))) ORDER BY (t1.c1 IN (CAST(t1.c0 AS BLOB))), LIKELIHOOD((((t1.c1, t1.c0, t1.c1))=(('lL65nQ', t1.c0, t1.c0))), (- (t1.c1)))  NULLS LAST, 'dKbP.' DESC LIMIT 0;
SELECT * FROM t1 WHERE (TRIM(0x906e096));
SELECT * FROM t1 WHERE (TRIM(151445654)) ORDER BY (t1.c1 IN (CAST(t1.c0 AS BLOB))), LIKELIHOOD((((t1.c1, t1.c0, t1.c1))==(('lL65nQ', t1.c0, t1.c0))), (- (t1.c1)))  NULLS LAST, 'dKbP.' DESC LIMIT 0 INTERSECT SELECT * FROM t1 WHERE ((NOT (((t1.c1)LIKE(t1.c1))))) ORDER BY (t1.c1 IN (CAST(t1.c0 AS BLOB))), LIKELIHOOD((((t1.c1, t1.c0, t1.c1))=(('lL65nQ', t1.c0, t1.c0))), (- (t1.c1)))  NULLS LAST, 'dKbP.' DESC LIMIT 0;
SELECT ALL * FROM t1, vt0 WHERE (((((((((((((vt0.c0) NOTNULL))OR(((((((vt0.c1)AND(t1.c0)))AND(vt0.c0)))OR(t1.c1)))))AND(((((((vt0.c2)OR(vt0.lid)))AND(t1.c1)))OR(vt0.lid)))))AND(vt0.c2)))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(t1.c1 AS TEXT))));
SELECT ALL * FROM t1, vt0 WHERE (((((((((((((((vt0.c0) NOTNULL))OR(((((((vt0.c1)AND(t1.c0)))AND(vt0.c0)))OR(t1.c1)))))AND(((((((vt0.c2)OR(vt0.lid)))AND(t1.c1)))OR(vt0.lid)))))AND(vt0.c2)))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(t1.c1 AS TEXT))))AND((((((vt0.c0) IS FALSE), json_patch(vt0.c1, 1198900214)))>=((t1.c1, CASE vt0.c1  WHEN t1.c1 THEN vt0.c0 END)))))) ORDER BY vt0.c2 ASC  NULLS LAST, (NOT (((vt0.c2) IS TRUE))) ASC;
SELECT ALL * FROM t1, vt0 WHERE (((((((((((((vt0.c0) NOTNULL))OR(((((((vt0.c1)AND(t1.c0)))AND(vt0.c0)))OR(t1.c1)))))AND(((((((vt0.c2)OR(vt0.lid)))AND(t1.c1)))OR(vt0.lid)))))AND(vt0.c2)))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(t1.c1 AS TEXT))));
SELECT ALL * FROM t1, vt0 WHERE (((((((((((((((vt0.c0) NOTNULL))OR(((((((vt0.c1)AND(t1.c0)))AND(vt0.c0)))OR(t1.c1)))))AND(((((((vt0.c2)OR(vt0.lid)))AND(t1.c1)))OR(vt0.lid)))))AND(vt0.c2)))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(t1.c1 AS TEXT))))AND((((((vt0.c0) IS FALSE), json_patch(vt0.c1, 1198900214)))>=((t1.c1, CASE vt0.c1  WHEN t1.c1 THEN vt0.c0 END)))))) ORDER BY vt0.c2 ASC  NULLS LAST, (NOT (((vt0.c2) IS TRUE))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN 0.6915837835297232 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN 'm1<Gtk' END)>(vt0.c0)));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c1  WHEN 0.6915837835297232 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c1 THEN 'm1<Gtk' END)>(vt0.c0)))AND((((- (vt0.c1))) ISNULL)))) LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (vt0.c1) LIMIT 1;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((LOWER(t1.c0) IN (LOWER(DISTINCT t1.c0)))) ORDER BY 0.7227954337612192  NULLS FIRST, ((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))OR(((0x5095a460) BETWEEN (t1.c1) AND (t1.c0)))))AND(GLOB(t1.c0, t1.c0))))OR(highlight(0.4012962410345208, '^', t1.c0, t1.c0)))  NULLS LAST, (~ (((t1.c1) IS FALSE)));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((LOWER(t1.c0) IN (LOWER(DISTINCT t1.c0)))) ORDER BY 0.7227954337612192  NULLS FIRST, ((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))OR(((1351984224) BETWEEN (t1.c1) AND (t1.c0)))))AND(GLOB(t1.c0, t1.c0))))OR(highlight(0.4012962410345208, '^', t1.c0, t1.c0)))  NULLS LAST, (~ (((t1.c1) IS FALSE))) LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)!=(t1.c0)))>>(CAST(t1.c1 AS BLOB))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((t1.c0)>(t1.c0)))>>(CAST(t1.c1 AS BLOB))))AND(CAST((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1))) AS NUMERIC)))) ORDER BY HEX('*p&P''E*AQ'), (((t1.c1 IN ()))+((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))))) DESC, (((t1.c1, t1.c0)) NOT BETWEEN ((UNICODE(t1.c1), CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)) AND (((t1.c0 IN (t1.c1, t1.c1)), ((t1.c1) IS FALSE)))) ASC LIMIT 0;
SELECT * FROM t1 WHERE (x'8007') ORDER BY CAST(CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS BLOB) DESC, (((NOT (NULL))) NOT BETWEEN ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c1)))) AND (CAST(t1.c1 AS INTEGER))) ASC  NULLS LAST, STRFTIME(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), t1.c1 COLLATE NOCASE, LOWER(x''), ((8.39064106E8) IS TRUE), (- (t1.c1)));
SELECT DISTINCT * FROM t1 WHERE (((x'8007')AND(((NULLIF(t1.c0, t1.c1))GLOB(-8261361))))) ORDER BY CAST(CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS BLOB) DESC, (((NOT (NULL))) NOT BETWEEN ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c1)))) AND (CAST(t1.c1 AS INTEGER))) ASC  NULLS LAST, STRFTIME(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), t1.c1 COLLATE NOCASE, LOWER(x''), ((8.39064106E8) IS TRUE), (- (t1.c1))) LIMIT 0x5;
SELECT * FROM t1 WHERE (x'8007') ORDER BY CAST(CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS BLOB) DESC, (((NOT (NULL))) NOT BETWEEN ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c1)))) AND (CAST(t1.c1 AS INTEGER))) ASC  NULLS LAST, STRFTIME(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), t1.c1 COLLATE NOCASE, LOWER(x''), ((8.39064106E8) IS TRUE), (- (t1.c1)));
SELECT DISTINCT * FROM t1 WHERE (((x'8007')AND(((NULLIF(t1.c0, t1.c1))GLOB(-8261361))))) ORDER BY CAST(CASE t1.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS BLOB) DESC, (((NOT (NULL))) NOT BETWEEN ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c1)))) AND (CAST(t1.c1 AS INTEGER))) ASC  NULLS LAST, STRFTIME(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), t1.c1 COLLATE NOCASE, LOWER(x''), ((8.39064106E8) IS TRUE), (- (t1.c1))) LIMIT 0x5;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((CAST(t1.c1 AS INTEGER))|((t1.c0 IN (t1.c0))))) ORDER BY t1.c1 ASC  NULLS LAST, (- (((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1))));
SELECT MAX(t1.c0) FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER))|((t1.c0 IN (t1.c0)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM))) ORDER BY -1868605768  NULLS FIRST, CAST(t1.c1 AS BLOB) COLLATE BINARY DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (CASE t1.c1 COLLATE RTRIM  WHEN NULLIF(t1.c1, t1.c0) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((t1.c1)!=(t1.c1)) THEN ((t1.c1) IS TRUE) ELSE (NOT (0.9259391362434363)) END) ORDER BY -1868605768  NULLS FIRST, CAST(t1.c1 AS BLOB) COLLATE BINARY DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0 NOT INDEXED CROSS JOIN t1 ON load_extension(0.3864105958073304) WHERE (((((vt0.c0)%(t1.c1)))<>((('*Hc') NOT BETWEEN (vt0.c1) AND (t1.c1)))));
SELECT DISTINCT * FROM vt0 CROSS JOIN t1 ON load_extension(0.3864105958073304) WHERE (((((((vt0.c0)%(t1.c1)))!=((('*Hc') NOT BETWEEN (vt0.c1) AND (t1.c1)))))AND((((vt0.c1) IS FALSE) IN ())))) ORDER BY ((((((t1.c1)||(t1.c0)))AND(vt0.c2)))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.lid))));
SELECT * FROM vt0 NOT INDEXED CROSS JOIN t1 ON load_extension(0.3864105958073304) WHERE (((((vt0.c0)%(t1.c1)))<>((('*Hc') NOT BETWEEN (vt0.c1) AND (t1.c1)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE (CAST(((vt0.c0) BETWEEN (0.2253638392198698) AND (x'a6b8a0')) AS TEXT)) ORDER BY UNLIKELY(DISTINCT CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN 0.27304394625579165 WHEN vt0.c0 THEN t1.c1 ELSE vt0.lid END) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE (((CAST(((vt0.c0) BETWEEN (0.2253638392198698) AND (x'a6b8a0')) AS TEXT))AND((((vt0.c2)) BETWEEN ((CAST(t1.c0 AS INTEGER))) AND (('d' COLLATE RTRIM)))))) ORDER BY CAST(((((vt0.c0)AND(t1.c0)))OR(vt0.c2)) AS NUMERIC), ((TRIM(vt0.c0))LIKE(TOTAL_CHANGES())), ((((vt0.lid)<(t1.c0)))-(((((vt0.c0)OR(t1.c1)))OR(vt0.lid)))) ASC;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (CASE WHEN vt0.c2 COLLATE NOCASE THEN vt0.c0 ELSE ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.lid)) END);
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (CASE WHEN vt0.c2 COLLATE NOCASE THEN vt0.c0 ELSE ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.lid)) END) ORDER BY UPPER(load_extension(x'cfc3')), CAST(vt0.c2 AS NUMERIC) COLLATE RTRIM INTERSECT SELECT MAX(vt0.c0) FROM vt0 WHERE (CASE WHEN CAST(vt0.lid AS REAL) THEN (- (vt0.c2)) WHEN CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.c2 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN vt0.c0 WHEN x'' THEN vt0.c0 END THEN ((vt0.c1)*(vt0.c1)) ELSE 0.3060323715850404 END) ORDER BY UPPER(load_extension(x'cfc3')), CAST(vt0.c2 AS NUMERIC) COLLATE RTRIM;
SELECT ALL * FROM vt0 INNER JOIN t1 ON UPPER(DISTINCT CAST(t1.c1 AS INTEGER)) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.lid WHEN NULL THEN -1983493999 ELSE t1.c0 END)AND((NOT (vt0.c1)))))OR(((vt0.c2)*(vt0.c1))))) ORDER BY (((vt0.c1, vt0.c2, vt0.lid, vt0.c1)) BETWEEN ((TRIM(t1.c0), ((t1.c0)OR(vt0.lid)), ((((((((((((((vt0.lid)OR(t1.c0)))OR(t1.c0)))OR(vt0.c2)))OR(t1.c0)))OR(vt0.c1)))OR(vt0.lid)))AND(vt0.c1)), ((vt0.c1)IS(x'')))) AND ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN vt0.lid THEN '\JS''
' END, 555904710, (~ (vt0.c0)), ((vt0.c1) BETWEEN (t1.c1) AND (vt0.c2))))) DESC  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN t1 ON UPPER(DISTINCT CAST(t1.c1 AS INTEGER)) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.lid WHEN NULL THEN 0Xffffffff89c64891 ELSE t1.c0 END)AND((NOT (vt0.c1)))))OR(((vt0.c2)*(vt0.c1))))) ORDER BY (((vt0.c1, vt0.c2, vt0.lid, vt0.c1)) BETWEEN ((TRIM(t1.c0), ((t1.c0)OR(vt0.lid)), ((((((((((((((vt0.lid)OR(t1.c0)))OR(t1.c0)))OR(vt0.c2)))OR(t1.c0)))OR(vt0.c1)))OR(vt0.lid)))AND(vt0.c1)), ((vt0.c1)IS(x'')))) AND ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN vt0.lid THEN '\JS''
' END, 0x21226ec6, (~ (vt0.c0)), ((vt0.c1) BETWEEN (t1.c1) AND (vt0.c2))))) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM vt0 INNER JOIN t1 ON UPPER(DISTINCT CAST(t1.c1 AS INTEGER)) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.lid WHEN NULL THEN -1983493999 ELSE t1.c0 END)AND((NOT (vt0.c1)))))OR(((vt0.c2)*(vt0.c1))))) ORDER BY (((vt0.c1, vt0.c2, vt0.lid, vt0.c1)) BETWEEN ((TRIM(t1.c0), ((t1.c0)OR(vt0.lid)), ((((((((((((((vt0.lid)OR(t1.c0)))OR(t1.c0)))OR(vt0.c2)))OR(t1.c0)))OR(vt0.c1)))OR(vt0.lid)))AND(vt0.c1)), ((vt0.c1)IS(x'')))) AND ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN vt0.lid THEN '\JS''
' END, 555904710, (~ (vt0.c0)), ((vt0.c1) BETWEEN (t1.c1) AND (vt0.c2))))) DESC  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN t1 ON UPPER(DISTINCT CAST(t1.c1 AS INTEGER)) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c2 WHEN t1.c0 THEN vt0.lid WHEN NULL THEN 0Xffffffff89c64891 ELSE t1.c0 END)AND((NOT (vt0.c1)))))OR(((vt0.c2)*(vt0.c1))))) ORDER BY (((vt0.c1, vt0.c2, vt0.lid, vt0.c1)) BETWEEN ((TRIM(t1.c0), ((t1.c0)OR(vt0.lid)), ((((((((((((((vt0.lid)OR(t1.c0)))OR(t1.c0)))OR(vt0.c2)))OR(t1.c0)))OR(vt0.c1)))OR(vt0.lid)))AND(vt0.c1)), ((vt0.c1)IS(x'')))) AND ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN vt0.lid THEN '\JS''
' END, 0x21226ec6, (~ (vt0.c0)), ((vt0.c1) BETWEEN (t1.c1) AND (vt0.c2))))) DESC  NULLS FIRST LIMIT 0x0;
SELECT MIN(vt0.c0) FROM vt0, t1 WHERE (((vt0.c0) NOT NULL));
SELECT MIN(vt0.c0) FROM vt0, t1 WHERE (((((vt0.c0) NOT NULL))AND(CAST((vt0.c2 IN ()) AS INTEGER)))) ORDER BY (~ (CASE vt0.lid  WHEN vt0.c2 THEN vt0.c2 END)), load_extension((((vt0.c1, x'')) BETWEEN ((vt0.c0, t1.c0)) AND ((vt0.lid, vt0.lid))), (vt0.c2 IN ())) DESC LIMIT 2 INTERSECT SELECT ALL MIN(vt0.c0) FROM vt0, t1 WHERE ((+ (((0X6a823a38)>(vt0.c1))))) ORDER BY (~ (CASE vt0.lid  WHEN vt0.c2 THEN vt0.c2 END)), load_extension((((vt0.c1, x'')) BETWEEN ((vt0.c0, t1.c0)) AND ((vt0.lid, vt0.lid))), (vt0.c2 IN ())) DESC LIMIT 0X2;
SELECT * FROM t1 WHERE ((((STRFTIME(t1.c0, t1.c0, t1.c1), JULIANDAY(t1.c1, t1.c0, t1.c1)))<=((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))OR(x'64')), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))));
SELECT DISTINCT * FROM t1 WHERE ((((STRFTIME(t1.c0, t1.c0, t1.c1), JULIANDAY(t1.c1, t1.c0, t1.c1)))<=((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))OR(x'64')), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))));
SELECT * FROM t1 WHERE ((((STRFTIME(t1.c0, t1.c0, t1.c1), JULIANDAY(t1.c1, t1.c0, t1.c1)))<=((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))OR(x'64')), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))));
SELECT DISTINCT * FROM t1 WHERE ((((STRFTIME(t1.c0, t1.c0, t1.c1), JULIANDAY(t1.c1, t1.c0, t1.c1)))<=((((((((t1.c0)OR(t1.c1)))OR(t1.c0)))OR(x'64')), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))));
SELECT MIN(vt0.c1) FROM t1 INNER JOIN vt0 ON (t1.c0 COLLATE BINARY IN (((((t1.c1)AND(vt0.lid)))OR(t1.c0)))) WHERE (((((((t1.c1)IS NOT(vt0.c1)))OR(vt0.c1 COLLATE RTRIM)))AND(CASE WHEN t1.c0 THEN t1.c0 END))) ORDER BY CAST(CAST(t1.c0 AS NUMERIC) AS INTEGER);
SELECT DISTINCT MIN(vt0.c1) FROM t1 INNER JOIN vt0 ON (t1.c0 COLLATE BINARY IN (((((t1.c1)AND(vt0.lid)))OR(t1.c0)))) WHERE (((((((((t1.c1)IS NOT(vt0.c1)))OR(vt0.c1 COLLATE RTRIM)))AND(CASE WHEN t1.c0 THEN t1.c0 END)))AND((vt0.c0 IN (CAST(t1.c0 AS BLOB)))))) ORDER BY CAST(CAST(t1.c0 AS NUMERIC) AS INTEGER);
SELECT MIN(vt0.lid) FROM t1, vt0 WHERE (((((((IFNULL(DISTINCT vt0.c2, vt0.c1))OR(((((vt0.c0)AND(vt0.c2)))AND(t1.c1)))))AND((+ (vt0.c0)))))AND(((t1.c0)<(t1.c1)))));
SELECT DISTINCT MIN(vt0.lid) FROM t1, vt0 WHERE (((((((IFNULL(DISTINCT vt0.c2, vt0.c1))OR(((((vt0.c0)AND(vt0.c2)))AND(t1.c1)))))AND((+ (vt0.c0)))))AND(((t1.c0)<(t1.c1))))) ORDER BY ((((((((((LIKELY(DISTINCT vt0.c1))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t1.c1 WHEN vt0.c2 THEN vt0.c0 ELSE 0.007738751658794563 END)))OR(((0.08611925204329696)<<(t1.c1)))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.c0)))))OR(((vt0.c0)<<(vt0.lid)))))OR(CAST(t1.c0 AS BLOB)))  NULLS FIRST, TRIM(((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)), ((vt0.c0)||(vt0.c2))), NULL LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(vt0.lid) FROM t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('J')) AND ((CAST(vt0.c0 AS BLOB))))) ORDER BY ((((((((((LIKELY(DISTINCT vt0.c1))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t1.c1 WHEN vt0.c2 THEN vt0.c0 ELSE 0.007738751658794563 END)))OR(((0.08611925204329696)<<(t1.c1)))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (vt0.c0)))))OR(((vt0.c0)<<(vt0.lid)))))OR(CAST(t1.c0 AS BLOB)))  NULLS FIRST, TRIM(((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)), ((vt0.c0)||(vt0.c2))), NULL LIMIT 0x0;
SELECT MAX(t1.c1) FROM t1 WHERE ((((~ (NULL)))/((((237737148)) BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT MAX(t1.c1) FROM t1 WHERE ((((((~ (NULL)))/((((0xe2b94bc)) BETWEEN ((t1.c0)) AND ((t1.c0))))))AND(GLOB(t1.c0, CAST(t1.c0 AS INTEGER))))) ORDER BY CASE WHEN (0Xc59d3b0 IN ()) THEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END WHEN ((t1.c1) NOTNULL) THEN t1.c0 END DESC  NULLS FIRST, (((t1.c1 IN (NULL))) BETWEEN (('1' IN (t1.c1))) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 's]Wp鎭I8]	' WHEN NULL THEN t1.c1 ELSE t1.c1 END));
SELECT MAX(t1.c1) FROM t1 WHERE (((CAST(t1.c1 AS BLOB))-(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))) ORDER BY t1.c1 COLLATE BINARY ASC, SQLITE_SOURCE_ID() ASC  NULLS FIRST, ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))<(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS LAST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CAST(t1.c1 AS BLOB))-(CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))) ORDER BY ((((((NULL, t1.c0))!=((t1.c0, t1.c0))), NULL))>=((t1.c0 COLLATE NOCASE, ((t1.c0)>=(t1.c1)))))  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (UPPER(((t1.c0) BETWEEN (t1.c1) AND (t1.c1)))) ORDER BY ((((((NULL, t1.c0))<>((t1.c0, t1.c0))), NULL))>=((t1.c0 COLLATE NOCASE, ((t1.c0)>=(t1.c1)))))  NULLS LAST LIMIT 2;
SELECT MIN(vt0.c0) FROM vt0 CROSS JOIN t1 ON (('X9RIN*.,') IS FALSE) WHERE ((((t1.c0) IS TRUE) IN ((((vt0.c2, x'76', vt0.c1)) BETWEEN ((t1.c0, vt0.c2, vt0.c1)) AND ((t1.c0, vt0.c0, vt0.c1)))))) ORDER BY (((CAST(t1.c1 AS NUMERIC), ((613458189)!=(vt0.c0))))==((HEX(vt0.c2), ((vt0.c0)OR(vt0.lid)))))  NULLS FIRST, CASE ((vt0.lid) NOT BETWEEN (vt0.c1) AND (t1.c0))  WHEN CASE vt0.c2  WHEN vt0.c1 THEN t1.c0 END THEN vt0.c0 COLLATE RTRIM WHEN vt0.c2 THEN (vt0.c2 IN (vt0.c2, vt0.lid)) END DESC  NULLS LAST, ((((vt0.c1) NOT NULL))/((+ (vt0.c0)))) DESC;
SELECT MIN(vt0.c0) FROM vt0 CROSS JOIN t1 ON (('X9RIN*.,') IS FALSE) WHERE ((((t1.c0) IS TRUE) IN ((((vt0.c2, x'76', vt0.c1)) BETWEEN ((t1.c0, vt0.c2, vt0.c1)) AND ((t1.c0, vt0.c0, vt0.c1)))))) ORDER BY (((CAST(t1.c1 AS NUMERIC), ((0x2490a10d)<>(vt0.c0))))==((HEX(vt0.c2), ((vt0.c0)OR(vt0.lid)))))  NULLS FIRST, CASE ((vt0.lid) NOT BETWEEN (vt0.c1) AND (t1.c0))  WHEN CASE vt0.c2  WHEN vt0.c1 THEN t1.c0 END THEN vt0.c0 COLLATE RTRIM WHEN vt0.c2 THEN (vt0.c2 IN (vt0.c2, vt0.lid)) END DESC  NULLS LAST, ((((vt0.c1) NOT NULL))/((+ (vt0.c0)))) DESC LIMIT 1 INTERSECT SELECT MIN(vt0.c0) FROM vt0 CROSS JOIN t1 ON (('X9RIN*.,') IS FALSE) WHERE (0.050437617502713805) ORDER BY (((CAST(t1.c1 AS NUMERIC), ((0X2490a10d)<>(vt0.c0))))=((HEX(vt0.c2), ((vt0.c0)OR(vt0.lid)))))  NULLS FIRST, CASE ((vt0.lid) NOT BETWEEN (vt0.c1) AND (t1.c0))  WHEN CASE vt0.c2  WHEN vt0.c1 THEN t1.c0 END THEN vt0.c0 COLLATE RTRIM WHEN vt0.c2 THEN (vt0.c2 IN (vt0.c2, vt0.lid)) END DESC  NULLS LAST, ((((vt0.c1) NOT NULL))/((+ (vt0.c0)))) DESC LIMIT 1;
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT ALL COUNT(*) FROM vt0 WHERE ('') ORDER BY CASE (((vt0.lid, vt0.lid, vt0.c2))>((vt0.c0, vt0.c2, vt0.c1)))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.lid)) THEN ((vt0.c0)>(vt0.lid)) WHEN ((vt0.c2)!=(vt0.lid)) THEN vt0.c0 COLLATE RTRIM END DESC, CASE WHEN CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN CASE WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN vt0.c0 ELSE vt0.lid END WHEN vt0.c1 THEN 0.15437928670199008 ELSE ((((((((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.lid)))OR(vt0.lid)))AND(vt0.c0)) END ASC LIMIT 1;
SELECT MIN(vt0.c2) FROM t1 LEFT OUTER JOIN vt0 ON (((1223169661) ISNULL) IN (((vt0.c1)<(vt0.lid)))) WHERE (CASE WHEN ((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c1)) THEN (((t1.c1))<>((t1.c1))) WHEN CAST('~)PC ' AS REAL) THEN ((((((vt0.c2)OR(vt0.c1)))OR(t1.c1)))OR(t1.c0)) WHEN (vt0.c2 IN ()) THEN ((vt0.c0)>(vt0.c2)) END);
SELECT MIN(vt0.c2) FROM t1 LEFT OUTER JOIN vt0 ON (((1223169661) ISNULL) IN (((vt0.c1)<(vt0.lid)))) WHERE (((CASE WHEN ((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c1)) THEN (((t1.c1))<>((t1.c1))) WHEN CAST('~)PC ' AS REAL) THEN ((((((vt0.c2)OR(vt0.c1)))OR(t1.c1)))OR(t1.c0)) WHEN (vt0.c2 IN ()) THEN ((vt0.c0)>(vt0.c2)) END)AND((~ (CAST(t1.c1 AS BLOB)))))) ORDER BY ((t1.c1)IS(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST, (((t1.c1 COLLATE NOCASE, vt0.c1 COLLATE BINARY, ((vt0.c2)GLOB(vt0.c1))))!=((((vt0.c2) BETWEEN (t1.c0) AND (vt0.lid)), vt0.c2, CAST(vt0.c1 AS INTEGER)))) ASC INTERSECT SELECT MIN(vt0.c2) FROM t1 LEFT OUTER JOIN vt0 ON (((0X48e8167d) ISNULL) IN (((vt0.c1)<(vt0.lid)))) WHERE (((vt0.lid COLLATE BINARY) IS TRUE)) ORDER BY ((t1.c1)IS(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST, (((t1.c1 COLLATE NOCASE, vt0.c1 COLLATE BINARY, ((vt0.c2)GLOB(vt0.c1))))<>((((vt0.c2) BETWEEN (t1.c0) AND (vt0.lid)), vt0.c2, CAST(vt0.c1 AS INTEGER)))) ASC;
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON ((((vt0.c2)/(t1.c1)))AND(((t1.c0)|(t1.c1)))) WHERE (vt0.c2) ORDER BY (((CAST(vt0.c1 AS INTEGER), ((vt0.lid) NOTNULL), ((vt0.lid) IS TRUE), ((vt0.c2) IS FALSE)))<=((CASE WHEN t1.c1 THEN vt0.c1 ELSE t1.c0 END, (+ (vt0.c2)), t1.c1 COLLATE NOCASE, ((((t1.c1)AND(t1.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON ((((vt0.c2)/(t1.c1)))AND(((t1.c0)|(t1.c1)))) WHERE (vt0.c2) ORDER BY ((CASE WHEN vt0.c2 THEN vt0.lid WHEN vt0.c0 THEN t1.c1 WHEN vt0.lid THEN t1.c0 ELSE vt0.c2 END)|(((0.9753127870596606)>>(t1.c1)))), (((vt0.lid IN ()))>=('s9j]mx'))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c2 COLLATE BINARY)OR(((vt0.c2)>(vt0.c0)))))OR((('C') NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND((((vt0.c2, vt0.lid, vt0.lid))<>((vt0.c2, vt0.c0, vt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c2 COLLATE BINARY)OR(((vt0.c2)>(vt0.c0)))))OR((('C') NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND((((vt0.c2, vt0.lid, vt0.lid))>((vt0.c2, vt0.c0, vt0.c2))))))AND(((vt0.lid)GLOB((vt0.c1 IN (vt0.c2))))))) LIMIT 0X1;
SELECT ALL MAX(vt0.lid) FROM vt0 INNER JOIN t1 ON (vt0.lid COLLATE RTRIM IN ()) WHERE (((((vt0.c0)OR(t1.c1))) BETWEEN (CASE vt0.lid  WHEN vt0.lid THEN vt0.lid ELSE vt0.c1 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((t1.c0)))))) ORDER BY ((t1.c0)*(vt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT ALL MAX(vt0.lid) FROM vt0 INNER JOIN t1 ON (vt0.lid COLLATE RTRIM IN ()) WHERE (((((vt0.c0)OR(t1.c1))) BETWEEN (CASE vt0.lid  WHEN vt0.lid THEN vt0.lid ELSE vt0.c1 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((t1.c0)))))) ORDER BY ((t1.c0)*(vt0.c1)) COLLATE BINARY  NULLS FIRST LIMIT 0x5 INTERSECT SELECT MAX(vt0.lid) FROM vt0 INNER JOIN t1 ON (vt0.lid COLLATE RTRIM IN ()) WHERE (NULL COLLATE BINARY) ORDER BY ((t1.c0)*(vt0.c1)) COLLATE BINARY  NULLS FIRST LIMIT 0X5;
SELECT * FROM vt0 WHERE (ABS(((((vt0.c1)AND(vt0.lid)))AND(vt0.c2)))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.lid ELSE vt0.c2 END END ASC, ((vt0.c2 IN (vt0.c1)) IN (TRIM(DISTINCT vt0.c2, vt0.c2))) DESC, COALESCE(DISTINCT (((vt0.lid)) NOT BETWEEN ((vt0.c2)) AND ((vt0.lid))), (vt0.c0 IN (vt0.lid)), ((((((vt0.lid)OR(vt0.lid)))OR(vt0.c0)))AND(vt0.c1)), (- (vt0.c0)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((ABS(((((vt0.c1)AND(vt0.lid)))AND(vt0.c2))))AND('616615981'))) ORDER BY '0.25082130696014815'  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY '0.25082130696014815'  NULLS LAST LIMIT 0X1;
SELECT * FROM vt0 WHERE (ABS(((((vt0.c1)AND(vt0.lid)))AND(vt0.c2)))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.lid ELSE vt0.c2 END END ASC, ((vt0.c2 IN (vt0.c1)) IN (TRIM(DISTINCT vt0.c2, vt0.c2))) DESC, COALESCE(DISTINCT (((vt0.lid)) NOT BETWEEN ((vt0.c2)) AND ((vt0.lid))), (vt0.c0 IN (vt0.lid)), ((((((vt0.lid)OR(vt0.lid)))OR(vt0.c0)))AND(vt0.c1)), (- (vt0.c0)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((ABS(((((vt0.c1)AND(vt0.lid)))AND(vt0.c2))))AND('616615981'))) ORDER BY '0.25082130696014815'  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY '0.25082130696014815'  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((((t1.c0) IS TRUE) IN ())) ORDER BY ((CASE t1.c1  WHEN x'3d6afd12' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) AND (t1.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0) IS TRUE) IN ()))AND((((t1.c1) NOTNULL) IN ())))) ORDER BY ((CASE t1.c1  WHEN x'3d6afd12' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) AND (t1.c0 COLLATE BINARY)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN LIKELY(t1.c1) THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) ELSE 0.07554713357558585 END) ORDER BY ((CASE t1.c1  WHEN x'3d6afd12' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) AND (t1.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0) IS TRUE) IN ())) ORDER BY ((CASE t1.c1  WHEN x'3d6afd12' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) AND (t1.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0) IS TRUE) IN ()))AND((((t1.c1) NOTNULL) IN ())))) ORDER BY ((CASE t1.c1  WHEN x'3d6afd12' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) AND (t1.c0 COLLATE BINARY)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN LIKELY(t1.c1) THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) ELSE 0.07554713357558585 END) ORDER BY ((CASE t1.c1  WHEN x'3d6afd12' THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END) AND (t1.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c2))) BETWEEN (((vt0.c0)/(vt0.c2))) AND (((vt0.c1)<>(vt0.c1)))));
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c2))) BETWEEN (((vt0.c0)/(vt0.c2))) AND (((vt0.c1)<(vt0.c1))))) INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (',');
SELECT ALL MIN(t1.c0) FROM vt0, t1 WHERE (PRINTF(t1.c0) COLLATE RTRIM) ORDER BY vt0.c1  NULLS FIRST, '1462630436' DESC  NULLS LAST, ((CASE NULL  WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN t1.c0 THEN vt0.lid END)<=(CASE t1.c1  WHEN vt0.c2 THEN t1.c0 WHEN t1.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN t1.c1 ELSE vt0.c2 END)) ASC;
SELECT DISTINCT MIN(t1.c0) FROM vt0, t1 WHERE (((PRINTF(t1.c0) COLLATE RTRIM)AND((((((t1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) BETWEEN (((((t1.c1)OR(t1.c1)))AND(vt0.c1))) AND ((((t1.c0, 0.3564508003585234))<>((vt0.c1, t1.c0)))))))) ORDER BY vt0.c1  NULLS FIRST, '1462630436' DESC  NULLS LAST, ((CASE NULL  WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN t1.c0 THEN vt0.lid END)<=(CASE t1.c1  WHEN vt0.c2 THEN t1.c0 WHEN t1.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN t1.c1 ELSE vt0.c2 END)) ASC LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM vt0, t1 WHERE (vt0.c2) ORDER BY vt0.c1  NULLS FIRST, '1462630436' DESC  NULLS LAST, ((CASE NULL  WHEN vt0.c1 THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN t1.c0 THEN vt0.lid END)<=(CASE t1.c1  WHEN vt0.c2 THEN t1.c0 WHEN t1.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN t1.c1 ELSE vt0.c2 END)) ASC LIMIT 1;
SELECT ALL MAX(vt0.c1) FROM vt0, t1 WHERE (CAST((~ (vt0.c0)) AS BLOB)) ORDER BY (((t1.c1)) BETWEEN ((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c2 THEN t1.c0 ELSE t1.c1 END)) AND ((((x'0105')<(t1.c1)))))  NULLS FIRST, ((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))) BETWEEN (vt0.lid COLLATE RTRIM) AND ((((vt0.c2, t1.c0, vt0.c1))==(('6V^', vt0.c2, t1.c1)))));
SELECT DISTINCT MAX(vt0.c1) FROM vt0, t1 WHERE (((CAST((~ (vt0.c0)) AS BLOB))AND(((LIKELIHOOD(t1.c0, vt0.c1)) NOT BETWEEN ((vt0.c1 IN (vt0.c2))) AND ((vt0.c2 IN ())))))) ORDER BY (((t1.c1)) BETWEEN ((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c2 THEN t1.c0 ELSE t1.c1 END)) AND ((((x'0105')<(t1.c1)))))  NULLS FIRST, ((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))) BETWEEN (vt0.lid COLLATE RTRIM) AND ((((vt0.c2, t1.c0, vt0.c1))==(('6V^', vt0.c2, t1.c1))))) LIMIT 0x1;
SELECT ALL MAX(vt0.lid) FROM vt0, t1 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (x'22') AND (((2.3235364E7) NOT BETWEEN (0Xffffffffca48748f) AND (vt0.c0)))));
SELECT ALL MAX(vt0.lid) FROM vt0, t1 WHERE ((((((vt0.c1 IN ())) NOT BETWEEN (x'22') AND (((2.3235364E7) NOT BETWEEN (-901221233) AND (vt0.c0)))))AND(CASE WHEN ((vt0.c2)|(vt0.c2)) THEN ((0.4222079485775989) ISNULL) WHEN x'27' THEN (vt0.c1 IN (t1.c1, '-2002827797')) WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c1) BETWEEN (t1.c1) AND (vt0.c0)) WHEN CAST(vt0.lid AS TEXT) THEN NULL WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (t1.c1)) THEN ((t1.c0)%(vt0.c0)) ELSE vt0.c0 END))) ORDER BY t1.c0, ((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1))) IN (0.24903077684202168));
SELECT * FROM vt0, t1 WHERE (json_type(((vt0.c2)GLOB(vt0.c1)))) ORDER BY ((((vt0.lid IN ('', vt0.c2)), (vt0.c2 IN ())))>(((((vt0.c2))<=((x''))), CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.lid ELSE vt0.c2 END))) DESC;
SELECT * FROM vt0, t1 WHERE (json_type(((vt0.c2)GLOB(vt0.c1)))) ORDER BY (((vt0.lid, t1.c1)) BETWEEN (((t1.c0 IN ()), ((vt0.c2) NOTNULL))) AND ((LOWER(vt0.c0), CAST(NULL AS INTEGER)))), vt0.c1 ASC  NULLS FIRST, ((((json_object(t1.c1, vt0.c0))AND(vt0.c2 COLLATE BINARY)))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.lid WHEN t1.c0 THEN t1.c0 END)) DESC  NULLS LAST LIMIT 0x1;
SELECT * FROM vt0, t1 WHERE (json_type(((vt0.c2)GLOB(vt0.c1)))) ORDER BY ((((vt0.lid IN ('', vt0.c2)), (vt0.c2 IN ())))>(((((vt0.c2))<=((x''))), CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.lid ELSE vt0.c2 END))) DESC;
SELECT * FROM vt0, t1 WHERE (json_type(((vt0.c2)GLOB(vt0.c1)))) ORDER BY (((vt0.lid, t1.c1)) BETWEEN (((t1.c0 IN ()), ((vt0.c2) NOTNULL))) AND ((LOWER(vt0.c0), CAST(NULL AS INTEGER)))), vt0.c1 ASC  NULLS FIRST, ((((json_object(t1.c1, vt0.c0))AND(vt0.c2 COLLATE BINARY)))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.lid WHEN t1.c0 THEN t1.c0 END)) DESC  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t1, vt0 WHERE (((0.4539149773982458) BETWEEN ((((vt0.lid, vt0.c2, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.c2, t1.c0)) AND ((vt0.c2, vt0.c1, t1.c0)))) AND ('0.9257439032833168')));
SELECT DISTINCT * FROM t1, vt0 WHERE (((((0.4539149773982458) BETWEEN ((((vt0.lid, vt0.c2, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.c2, t1.c0)) AND ((vt0.c2, vt0.c1, t1.c0)))) AND ('0.9257439032833168')))AND((((vt0.c2)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid))) COLLATE BINARY COLLATE RTRIM))) ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (((((vt0.c0, vt0.c1)) BETWEEN ((t1.c1, t1.c1)) AND ((vt0.c1, vt0.lid))) IN ())) ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (((0.4539149773982458) BETWEEN ((((vt0.lid, vt0.c2, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.c2, t1.c0)) AND ((vt0.c2, vt0.c1, t1.c0)))) AND ('0.9257439032833168')));
SELECT DISTINCT * FROM t1, vt0 WHERE (((((0.4539149773982458) BETWEEN ((((vt0.lid, vt0.c2, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.c2, t1.c0)) AND ((vt0.c2, vt0.c1, t1.c0)))) AND ('0.9257439032833168')))AND((((vt0.c2)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid))) COLLATE BINARY COLLATE RTRIM))) ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (((((vt0.c0, vt0.c1)) BETWEEN ((t1.c1, t1.c1)) AND ((vt0.c1, vt0.lid))) IN ())) ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM t1 INNER JOIN vt0 ON CAST(CAST(t1.c0 AS INTEGER) AS BLOB) WHERE (QUOTE(((vt0.c2)==(vt0.c2)))) ORDER BY CAST(CASE t1.c0  WHEN vt0.lid THEN t1.c1 WHEN vt0.c2 THEN NULL WHEN t1.c0 THEN vt0.lid ELSE x'' END AS REAL) ASC, (~ (CAST(t1.c1 AS REAL))) DESC;
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON CAST(CAST(t1.c0 AS INTEGER) AS BLOB) WHERE (QUOTE(((vt0.c2)==(vt0.c2)))) ORDER BY ((CASE vt0.c2  WHEN vt0.c1 THEN t1.c1 WHEN x'2052' THEN vt0.c2 WHEN t1.c0 THEN vt0.c0 WHEN t1.c1 THEN vt0.lid WHEN vt0.c0 THEN vt0.c2 END)IS(((vt0.c0) IS TRUE))) DESC;
SELECT ALL * FROM t1 INNER JOIN vt0 ON CAST(CAST(t1.c0 AS INTEGER) AS BLOB) WHERE (QUOTE(((vt0.c2)==(vt0.c2)))) ORDER BY CAST(CASE t1.c0  WHEN vt0.lid THEN t1.c1 WHEN vt0.c2 THEN NULL WHEN t1.c0 THEN vt0.lid ELSE x'' END AS REAL) ASC, (~ (CAST(t1.c1 AS REAL))) DESC;
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON CAST(CAST(t1.c0 AS INTEGER) AS BLOB) WHERE (QUOTE(((vt0.c2)==(vt0.c2)))) ORDER BY ((CASE vt0.c2  WHEN vt0.c1 THEN t1.c1 WHEN x'2052' THEN vt0.c2 WHEN t1.c0 THEN vt0.c0 WHEN t1.c1 THEN vt0.lid WHEN vt0.c0 THEN vt0.c2 END)IS(((vt0.c0) IS TRUE))) DESC;
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (CASE CASE WHEN vt0.c1 THEN 0.042764798136026294 WHEN t1.c1 THEN vt0.c2 END  WHEN (((t1.c1))<>((t1.c1))) THEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(t1.c1)) WHEN t1.c1 THEN -1.969310803E9 WHEN CASE WHEN '-868919299' THEN vt0.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END THEN ((vt0.lid)<(vt0.c0)) END) ORDER BY ((vt0.c0) BETWEEN (t1.c0) AND (vt0.lid)) COLLATE BINARY, GLOB(((vt0.c1)GLOB(t1.c1)), (- (vt0.c0))) DESC, CAST(json_extract(t1.c1, vt0.c0, vt0.c1, vt0.lid) AS BLOB);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (((CASE CASE WHEN vt0.c1 THEN 0.042764798136026294 WHEN t1.c1 THEN vt0.c2 END  WHEN (((t1.c1))!=((t1.c1))) THEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(t1.c1)) WHEN t1.c1 THEN -1.969310803E9 WHEN CASE WHEN '-868919299' THEN vt0.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END THEN ((vt0.lid)<(vt0.c0)) END)AND(CAST(t1.c1 AS BLOB) COLLATE BINARY))) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN t1.c0 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)!=((t1.c0 IN ())))  NULLS FIRST, (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ())  NULLS LAST, (1064682032 IN (((t1.c1)AND(t1.c0)), (t1.c0 IN (vt0.c0)))) ASC, (- (((((((((vt0.c1)OR(vt0.c2)))OR(t1.c0)))OR(vt0.c2)))OR(vt0.c0)))) ASC  NULLS LAST INTERSECT SELECT * FROM vt0 NATURAL JOIN t1 WHERE (0.1324462662631083) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN t1.c0 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)!=((t1.c0 IN ())))  NULLS FIRST, (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ())  NULLS LAST, (0X3f75c230 IN (((t1.c1)AND(t1.c0)), (t1.c0 IN (vt0.c0)))) ASC, (- (((((((((vt0.c1)OR(vt0.c2)))OR(t1.c0)))OR(vt0.c2)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (CASE CASE WHEN vt0.c1 THEN 0.042764798136026294 WHEN t1.c1 THEN vt0.c2 END  WHEN (((t1.c1))<>((t1.c1))) THEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(t1.c1)) WHEN t1.c1 THEN -1.969310803E9 WHEN CASE WHEN '-868919299' THEN vt0.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END THEN ((vt0.lid)<(vt0.c0)) END) ORDER BY ((vt0.c0) BETWEEN (t1.c0) AND (vt0.lid)) COLLATE BINARY, GLOB(((vt0.c1)GLOB(t1.c1)), (- (vt0.c0))) DESC, CAST(json_extract(t1.c1, vt0.c0, vt0.c1, vt0.lid) AS BLOB);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (((CASE CASE WHEN vt0.c1 THEN 0.042764798136026294 WHEN t1.c1 THEN vt0.c2 END  WHEN (((t1.c1))!=((t1.c1))) THEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(t1.c1)) WHEN t1.c1 THEN -1.969310803E9 WHEN CASE WHEN '-868919299' THEN vt0.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END THEN ((vt0.lid)<(vt0.c0)) END)AND(CAST(t1.c1 AS BLOB) COLLATE BINARY))) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN t1.c0 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)!=((t1.c0 IN ())))  NULLS FIRST, (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ())  NULLS LAST, (1064682032 IN (((t1.c1)AND(t1.c0)), (t1.c0 IN (vt0.c0)))) ASC, (- (((((((((vt0.c1)OR(vt0.c2)))OR(t1.c0)))OR(vt0.c2)))OR(vt0.c0)))) ASC  NULLS LAST INTERSECT SELECT * FROM vt0 NATURAL JOIN t1 WHERE (0.1324462662631083) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.lid THEN t1.c0 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)!=((t1.c0 IN ())))  NULLS FIRST, (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ())  NULLS LAST, (0X3f75c230 IN (((t1.c1)AND(t1.c0)), (t1.c0 IN (vt0.c0)))) ASC, (- (((((((((vt0.c1)OR(vt0.c2)))OR(t1.c0)))OR(vt0.c2)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN x'' END AS INTEGER)) ORDER BY ((CASE WHEN vt0.c2 THEN 0.8679854251329561 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-1944975075' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN '-257855733' WHEN vt0.c0 THEN vt0.lid END) IS TRUE), ((((vt0.lid) NOT NULL))>=((NOT (vt0.c2)))) DESC  NULLS LAST, CAST(((vt0.lid)%(vt0.c2)) AS INTEGER)  NULLS LAST;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN x'' END AS INTEGER)) ORDER BY ((CASE WHEN vt0.c2 THEN 0.8679854251329561 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-1944975075' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN '-257855733' WHEN vt0.c0 THEN vt0.lid END) IS TRUE), ((((vt0.lid) NOT NULL))>=((NOT (vt0.c2)))) DESC  NULLS LAST, CAST(((vt0.lid)%(vt0.c2)) AS INTEGER)  NULLS LAST;
SELECT * FROM t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c2))!=((t1.c1))))) AND (('jjm.'))));
SELECT * FROM t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c2))<>((t1.c1))))) AND (('jjm.')))) ORDER BY ((((t1.c1)AND('-1520966291')))OR(x'')) COLLATE BINARY, HEX(NULLIF(DISTINCT vt0.c1, 6.01369208E8))  NULLS FIRST LIMIT 3 INTERSECT SELECT * FROM t1, vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((- (t1.c0))) AND (((((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)))OR(vt0.c1))))) ORDER BY ((((t1.c1)AND('-1520966291')))OR(x'')) COLLATE BINARY, HEX(NULLIF(DISTINCT vt0.c1, 6.01369208E8))  NULLS FIRST LIMIT 3;
SELECT * FROM t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c2))!=((t1.c1))))) AND (('jjm.'))));
SELECT * FROM t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c2))<>((t1.c1))))) AND (('jjm.')))) ORDER BY ((((t1.c1)AND('-1520966291')))OR(x'')) COLLATE BINARY, HEX(NULLIF(DISTINCT vt0.c1, 6.01369208E8))  NULLS FIRST LIMIT 3 INTERSECT SELECT * FROM t1, vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((- (t1.c0))) AND (((((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)))OR(vt0.c1))))) ORDER BY ((((t1.c1)AND('-1520966291')))OR(x'')) COLLATE BINARY, HEX(NULLIF(DISTINCT vt0.c1, 6.01369208E8))  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t1 WHERE ((- (((t1.c1)/(t1.c0))))) ORDER BY (((t1.c1)) NOT BETWEEN ((((t1.c1)&(t1.c1)))) AND ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))), ((+ (t1.c0)) IN (((t1.c1) NOTNULL))), CAST(t1.c0 AS REAL) COLLATE BINARY;
SELECT DISTINCT * FROM t1 WHERE ((- (((t1.c1)/(t1.c0))))) ORDER BY t1.c1  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 AS NUMERIC) COLLATE RTRIM) ORDER BY t1.c1  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t1 WHERE ((- (((t1.c1)/(t1.c0))))) ORDER BY (((t1.c1)) NOT BETWEEN ((((t1.c1)&(t1.c1)))) AND ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))))), ((+ (t1.c0)) IN (((t1.c1) NOTNULL))), CAST(t1.c0 AS REAL) COLLATE BINARY;
SELECT DISTINCT * FROM t1 WHERE ((- (((t1.c1)/(t1.c0))))) ORDER BY t1.c1  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c1 AS NUMERIC) COLLATE RTRIM) ORDER BY t1.c1  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t1, vt0 WHERE (DATE(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)), t1.c0 COLLATE RTRIM, CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 END, vt0.c0, (((vt0.c2, vt0.c0, vt0.c2))<=((vt0.lid, t1.c1, vt0.c1))))) ORDER BY ((json_array(NULL, vt0.c1, t1.c1)) NOT BETWEEN (((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(vt0.c2))) AND (vt0.c0)) DESC, x'078b';
SELECT DISTINCT * FROM t1, vt0 WHERE (((DATE(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)), t1.c0 COLLATE RTRIM, CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 END, vt0.c0, (((vt0.c2, vt0.c0, vt0.c2))=((vt0.lid, t1.c1, vt0.c1)))))AND(GLOB(((((vt0.c2)AND(t1.c1)))AND(vt0.lid)), CAST(vt0.c2 AS TEXT))))) ORDER BY ((json_array(NULL, vt0.c1, t1.c1)) NOT BETWEEN (((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(vt0.c2))) AND (vt0.c0)) DESC, x'078b' LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (CAST(vt0.c2 AS TEXT)) ORDER BY ((json_array(NULL, vt0.c1, t1.c1)) NOT BETWEEN (((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(vt0.c2))) AND (vt0.c0)) DESC, x'078b' LIMIT 0x3;
SELECT ALL * FROM t1, vt0 WHERE (DATE(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)), t1.c0 COLLATE RTRIM, CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 END, vt0.c0, (((vt0.c2, vt0.c0, vt0.c2))<=((vt0.lid, t1.c1, vt0.c1))))) ORDER BY ((json_array(NULL, vt0.c1, t1.c1)) NOT BETWEEN (((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(vt0.c2))) AND (vt0.c0)) DESC, x'078b';
SELECT DISTINCT * FROM t1, vt0 WHERE (((DATE(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)), t1.c0 COLLATE RTRIM, CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 END, vt0.c0, (((vt0.c2, vt0.c0, vt0.c2))=((vt0.lid, t1.c1, vt0.c1)))))AND(GLOB(((((vt0.c2)AND(t1.c1)))AND(vt0.lid)), CAST(vt0.c2 AS TEXT))))) ORDER BY ((json_array(NULL, vt0.c1, t1.c1)) NOT BETWEEN (((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(vt0.c2))) AND (vt0.c0)) DESC, x'078b' LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (CAST(vt0.c2 AS TEXT)) ORDER BY ((json_array(NULL, vt0.c1, t1.c1)) NOT BETWEEN (((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(vt0.c2))) AND (vt0.c0)) DESC, x'078b' LIMIT 0x3;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((~ ((vt0.lid IN (vt0.lid)))));
SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE ((~ ((vt0.lid IN (vt0.lid))))) ORDER BY (((vt0.c0)) NOT BETWEEN (('r蹣h&1gz')) AND (((vt0.lid IN (vt0.c1, vt0.lid)))))  NULLS LAST, (vt0.c2 IN (vt0.c0)) COLLATE BINARY INTERSECT SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE (((((NULL)*(vt0.c2))) NOT NULL)) ORDER BY (((vt0.c0)) NOT BETWEEN (('r蹣h&1gz')) AND (((vt0.lid IN (vt0.c1, vt0.lid)))))  NULLS LAST, (vt0.c2 IN (vt0.c0)) COLLATE BINARY;
SELECT ALL * FROM t1, vt0 WHERE (CAST(((vt0.c0)|(vt0.c0)) AS REAL));
SELECT ALL * FROM t1, vt0 WHERE (CAST(((vt0.c0)|(vt0.c0)) AS REAL)) ORDER BY (((t1.c1) BETWEEN (vt0.c2) AND (t1.c0)) IN ((t1.c0 IN (vt0.lid))))  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (CAST(((vt0.c0)|(vt0.c0)) AS REAL));
SELECT ALL * FROM t1, vt0 WHERE (CAST(((vt0.c0)|(vt0.c0)) AS REAL)) ORDER BY (((t1.c1) BETWEEN (vt0.c2) AND (t1.c0)) IN ((t1.c0 IN (vt0.lid))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((+ ((vt0.c2 IN (vt0.c1, vt0.lid, vt0.c1))))) ORDER BY vt0.c2 DESC  NULLS FIRST, CAST(vt0.lid COLLATE RTRIM AS NUMERIC);
SELECT ALL * FROM vt0 WHERE ((((+ ((vt0.c2 IN (vt0.c1, vt0.lid, vt0.c1)))))AND((('+HD&') NOT BETWEEN (((0.8593878414283365) ISNULL)) AND (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.lid)))OR(vt0.c2)))OR(vt0.c2))))))) ORDER BY vt0.c2 ASC  NULLS FIRST, (((vt0.c2, vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.lid)), (((vt0.c1, 0.21559933353337557, vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.lid, vt0.c2, vt0.c0, NULL)) AND ((vt0.lid, vt0.c1, vt0.c1, vt0.lid))))) AND (((((vt0.lid))>((vt0.lid))), (((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))), vt0.c0  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM vt0 WHERE (((vt0.c1 IN ()) IN ())) ORDER BY vt0.c2 ASC  NULLS FIRST, (((vt0.c2, vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.lid)), (((vt0.c1, 0.21559933353337557, vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.lid, vt0.c2, vt0.c0, NULL)) AND ((vt0.lid, vt0.c1, vt0.c1, vt0.lid))))) AND (((((vt0.lid))>((vt0.lid))), (((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))), vt0.c0  NULLS FIRST LIMIT 0;
SELECT * FROM vt0 WHERE ((+ ((vt0.c2 IN (vt0.c1, vt0.lid, vt0.c1))))) ORDER BY vt0.c2 DESC  NULLS FIRST, CAST(vt0.lid COLLATE RTRIM AS NUMERIC);
SELECT ALL * FROM vt0 WHERE ((((+ ((vt0.c2 IN (vt0.c1, vt0.lid, vt0.c1)))))AND((('+HD&') NOT BETWEEN (((0.8593878414283365) ISNULL)) AND (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.lid)))OR(vt0.c2)))OR(vt0.c2))))))) ORDER BY vt0.c2 ASC  NULLS FIRST, (((vt0.c2, vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.lid)), (((vt0.c1, 0.21559933353337557, vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.lid, vt0.c2, vt0.c0, NULL)) AND ((vt0.lid, vt0.c1, vt0.c1, vt0.lid))))) AND (((((vt0.lid))>((vt0.lid))), (((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))), vt0.c0  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM vt0 WHERE (((vt0.c1 IN ()) IN ())) ORDER BY vt0.c2 ASC  NULLS FIRST, (((vt0.c2, vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.lid)), (((vt0.c1, 0.21559933353337557, vt0.lid, vt0.c1)) NOT BETWEEN ((vt0.lid, vt0.c2, vt0.c0, NULL)) AND ((vt0.lid, vt0.c1, vt0.c1, vt0.lid))))) AND (((((vt0.lid))>((vt0.lid))), (((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))), vt0.c0  NULLS FIRST LIMIT 0;
SELECT * FROM vt0, t1 WHERE (x'');
SELECT ALL * FROM vt0, t1 WHERE (((x'')AND(vt0.c2))) ORDER BY (((NULL, (~ (vt0.c0))))>=((((vt0.lid) BETWEEN (t1.c0) AND (vt0.c1)), load_extension(vt0.c2, vt0.lid)))) ASC, ((((t1.c1)&(vt0.c1))) NOTNULL), (((t1.c0, vt0.c1)) NOT BETWEEN ((t1.c0 COLLATE RTRIM, ((((t1.c0)OR(t1.c1)))AND(t1.c0)))) AND ((LIKELY(DISTINCT vt0.c2), ((vt0.c2) ISNULL)))) ASC  NULLS FIRST INTERSECT SELECT * FROM vt0, t1 WHERE (0x56aa20ff) ORDER BY (((NULL, (~ (vt0.c0))))>=((((vt0.lid) BETWEEN (t1.c0) AND (vt0.c1)), load_extension(vt0.c2, vt0.lid)))) ASC, ((((t1.c1)&(vt0.c1))) NOTNULL), (((t1.c0, vt0.c1)) NOT BETWEEN ((t1.c0 COLLATE RTRIM, ((((t1.c0)OR(t1.c1)))AND(t1.c0)))) AND ((LIKELY(DISTINCT vt0.c2), ((vt0.c2) ISNULL)))) ASC  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE (x'');
SELECT ALL * FROM vt0, t1 WHERE (((x'')AND(vt0.c2))) ORDER BY (((NULL, (~ (vt0.c0))))>=((((vt0.lid) BETWEEN (t1.c0) AND (vt0.c1)), load_extension(vt0.c2, vt0.lid)))) ASC, ((((t1.c1)&(vt0.c1))) NOTNULL), (((t1.c0, vt0.c1)) NOT BETWEEN ((t1.c0 COLLATE RTRIM, ((((t1.c0)OR(t1.c1)))AND(t1.c0)))) AND ((LIKELY(DISTINCT vt0.c2), ((vt0.c2) ISNULL)))) ASC  NULLS FIRST INTERSECT SELECT * FROM vt0, t1 WHERE (0x56aa20ff) ORDER BY (((NULL, (~ (vt0.c0))))>=((((vt0.lid) BETWEEN (t1.c0) AND (vt0.c1)), load_extension(vt0.c2, vt0.lid)))) ASC, ((((t1.c1)&(vt0.c1))) NOTNULL), (((t1.c0, vt0.c1)) NOT BETWEEN ((t1.c0 COLLATE RTRIM, ((((t1.c0)OR(t1.c1)))AND(t1.c0)))) AND ((LIKELY(DISTINCT vt0.c2), ((vt0.c2) ISNULL)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (json_array(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.lid AS REAL), json_valid(vt0.lid), ((0x21784ff6) NOT BETWEEN (vt0.c0) AND (vt0.lid))));
SELECT ALL * FROM vt0 WHERE (((json_array(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.lid AS REAL), json_valid(vt0.lid), ((561532918) NOT BETWEEN (vt0.c0) AND (vt0.lid))))AND(((((vt0.c2))<((vt0.lid))) IN (vt0.c1))))) LIMIT 0x0 INTERSECT SELECT * FROM vt0 WHERE (CASE WHEN ((0.7761133827176325) NOT BETWEEN (vt0.c2) AND (vt0.lid)) THEN (NOT (vt0.lid)) WHEN vt0.c2 THEN json_insert(vt0.lid, vt0.c1, vt0.lid, vt0.lid, 0.9252825679727669, vt0.c2, vt0.c2, vt0.c2) ELSE ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)) END) LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (json_array(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.lid AS REAL), json_valid(vt0.lid), ((0x21784ff6) NOT BETWEEN (vt0.c0) AND (vt0.lid))));
SELECT ALL * FROM vt0 WHERE (((json_array(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.lid AS REAL), json_valid(vt0.lid), ((561532918) NOT BETWEEN (vt0.c0) AND (vt0.lid))))AND(((((vt0.c2))<((vt0.lid))) IN (vt0.c1))))) LIMIT 0x0 INTERSECT SELECT * FROM vt0 WHERE (CASE WHEN ((0.7761133827176325) NOT BETWEEN (vt0.c2) AND (vt0.lid)) THEN (NOT (vt0.lid)) WHEN vt0.c2 THEN json_insert(vt0.lid, vt0.c1, vt0.lid, vt0.lid, 0.9252825679727669, vt0.c2, vt0.c2, vt0.c2) ELSE ((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)) END) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (CAST((NOT (t1.c0)) AS BLOB));
SELECT * FROM t1 WHERE (CAST((NOT (t1.c0)) AS BLOB)) ORDER BY ((((((((t1.c0 COLLATE RTRIM)AND(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c1)IS(t1.c0)))))AND((NOT (t1.c1)))))AND(t1.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST((NOT (t1.c0)) AS BLOB));
SELECT * FROM t1 WHERE (CAST((NOT (t1.c0)) AS BLOB)) ORDER BY ((((((((t1.c0 COLLATE RTRIM)AND(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)))OR(((t1.c1)IS(t1.c0)))))AND((NOT (t1.c1)))))AND(t1.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) COLLATE BINARY);
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) COLLATE BINARY) LIMIT 0X0;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN 'b	Ne+g}?' THEN vt0.c2 COLLATE NOCASE ELSE vt0.lid COLLATE BINARY END) ORDER BY (((vt0.c1 IN ())) NOT BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND (((vt0.c0)AND(vt0.c1))))  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((CASE CAST(vt0.c0 AS TEXT)  WHEN 'b	Ne+g}?' THEN vt0.c2 COLLATE NOCASE ELSE vt0.lid COLLATE BINARY END)AND(vt0.c1))) ORDER BY (CAST(vt0.c1 AS INTEGER) IN (TRIM(vt0.c0))) DESC LIMIT 1;
SELECT ALL MIN(vt0.c0) FROM t1, vt0 WHERE ((((((vt0.c1, vt0.lid, vt0.c2, vt0.c0, vt0.c2))==((t1.c0, t1.c0, vt0.lid, t1.c1, vt0.lid))))IS NOT(vt0.c1))) ORDER BY IFNULL(CASE vt0.c0  WHEN NULL THEN t1.c1 ELSE vt0.c2 END, ((t1.c1) NOTNULL));
SELECT DISTINCT MIN(vt0.c0) FROM t1, vt0 WHERE ((((((vt0.c1, vt0.lid, vt0.c2, vt0.c0, vt0.c2))==((t1.c0, t1.c0, vt0.lid, t1.c1, vt0.lid))))IS NOT(vt0.c1))) ORDER BY NULL COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON ((((((t1.c0)AND(vt0.c2)))AND(vt0.c2))) NOT NULL) WHERE (((((vt0.lid)OR(t1.c1))) BETWEEN (LIKELIHOOD(DISTINCT t1.c0, vt0.c0)) AND (((vt0.c0) ISNULL)))) ORDER BY CAST(CASE WHEN vt0.c2 THEN vt0.c2 WHEN t1.c1 THEN vt0.lid ELSE vt0.c1 END AS INTEGER)  NULLS LAST, ((((t1.c1) NOTNULL)) NOT BETWEEN (((vt0.c1)-(vt0.lid))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON ((((((t1.c0)AND(vt0.c2)))AND(vt0.c2))) NOT NULL) WHERE (((((vt0.lid)OR(t1.c1))) BETWEEN (LIKELIHOOD(DISTINCT t1.c0, vt0.c0)) AND (((vt0.c0) ISNULL)))) ORDER BY -1e500 DESC LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c2)) BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0, vt0.lid))>=((vt0.c1, vt0.c0))))))) ORDER BY NULL ASC  NULLS FIRST, (IFNULL(vt0.c0, vt0.lid) IN ((vt0.c1 IN ())))  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c2)) BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0, vt0.lid))=((vt0.c1, vt0.c0))))))) ORDER BY (((vt0.c2) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c2)) BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0, vt0.lid))>=((vt0.c1, vt0.c0))))))) ORDER BY NULL ASC  NULLS FIRST, (IFNULL(vt0.c0, vt0.lid) IN ((vt0.c1 IN ())))  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c2)) BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0, vt0.lid))=((vt0.c1, vt0.c0))))))) ORDER BY (((vt0.c2) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)LIKE(CAST(vt0.lid AS REAL)))) ORDER BY CAST(((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)) AS REAL) DESC  NULLS LAST, ((((vt0.lid)OR(vt0.c1)))AND(vt0.lid)) COLLATE NOCASE  NULLS LAST;
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)LIKE(CAST(vt0.lid AS REAL))))AND(((vt0.c1) NOTNULL)))) ORDER BY CAST(((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)) AS REAL) DESC  NULLS LAST, ((((vt0.lid)OR(vt0.c1)))AND(vt0.lid)) COLLATE NOCASE  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0)||(t1.c0)))-(CASE WHEN vt0.lid THEN x'' END)));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((vt0.c0)||(t1.c0)))-(CASE WHEN vt0.lid THEN x'' END))) LIMIT 0X1;
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0)||(t1.c0)))-(CASE WHEN vt0.lid THEN x'' END)));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((vt0.c0)||(t1.c0)))-(CASE WHEN vt0.lid THEN x'' END))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((((t1.c0 IN (t1.c0))))>=(((+ (t1.c1)))))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END AS INTEGER) ASC  NULLS LAST, LIKE(((-4.88086941E8) IS TRUE), DATETIME(t1.c0, t1.c1, t1.c1, t1.c1, t1.c1, t1.c1)), LIKELIHOOD(DISTINCT t1.c0 COLLATE NOCASE, 'N');
SELECT * FROM t1 WHERE (((((t1.c0 IN (t1.c0))))=(((+ (t1.c1)))))) ORDER BY (((((((t1.c0)AND(NULL)))AND('')))AND(t1.c1)) IN (((t1.c1)LIKE(t1.c0))))  NULLS FIRST, IFNULL(t1.c0, t1.c1) COLLATE RTRIM, ((((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c1))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c0 IN (t1.c0))))>=(((+ (t1.c1)))))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END AS INTEGER) ASC  NULLS LAST, LIKE(((-4.88086941E8) IS TRUE), DATETIME(t1.c0, t1.c1, t1.c1, t1.c1, t1.c1, t1.c1)), LIKELIHOOD(DISTINCT t1.c0 COLLATE NOCASE, 'N');
SELECT MIN(t1.c1) FROM t1 WHERE ((('W6lER/')>=((t1.c1 IN (t1.c0)))));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((('W6lER/')==((t1.c1 IN (t1.c0))))) ORDER BY '' ASC, (((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) IN (CAST(t1.c1 AS REAL))), (((t1.c0)) BETWEEN (((NOT (t1.c0)))) AND (((+ (t1.c1))))) DESC  NULLS LAST, (NOT (t1.c1 COLLATE NOCASE))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN '' WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END IN (t1.c1))) ORDER BY '' ASC, (((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) IN (CAST(t1.c1 AS REAL))), (((t1.c0)) BETWEEN (((NOT (t1.c0)))) AND (((+ (t1.c1))))) DESC  NULLS LAST, (NOT (t1.c1 COLLATE NOCASE))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t1, vt0 WHERE (SQLITE_COMPILEOPTION_USED(vt0.c1) COLLATE BINARY);
SELECT DISTINCT * FROM t1, vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1) COLLATE BINARY)AND((~ (((vt0.c2)>>(vt0.lid)))))));
SELECT ALL * FROM t1, vt0 WHERE (SQLITE_COMPILEOPTION_USED(vt0.c1) COLLATE BINARY);
SELECT DISTINCT * FROM t1, vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1) COLLATE BINARY)AND((~ (((vt0.c2)>>(vt0.lid)))))));
SELECT * FROM vt0 WHERE ((((vt0.lid, vt0.c1)) BETWEEN (((((vt0.c0))<>((vt0.c0))), vt0.c0)) AND ((vt0.lid COLLATE BINARY, ((vt0.lid) ISNULL))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE '' END)<((((vt0.c0, 'yN'))>((vt0.c0, vt0.lid)))))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.lid, vt0.c1)) BETWEEN (((((vt0.c0))>((vt0.c0))), vt0.c0)) AND ((vt0.lid COLLATE BINARY, ((vt0.lid) ISNULL)))))AND((+ (vt0.c0)) COLLATE RTRIM))) ORDER BY (TRIM(vt0.c2) IN (ABS(vt0.c1), ((vt0.c0) ISNULL)))  NULLS LAST, NULL DESC, ((((((((((((((vt0.c0) BETWEEN (vt0.lid) AND (2.37737148E8)))OR((((vt0.lid, vt0.lid, vt0.c2)) BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.c1, '-82673655', vt0.c2))))))OR(((vt0.c0)>(vt0.c2)))))AND(((vt0.c0)<=(vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))OR(json_insert(vt0.c0, vt0.lid, vt0.c2, vt0.c0))))OR(vt0.c2)) DESC  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1)<=(vt0.lid)))&(((((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.lid)))AND('160186897'))))) ORDER BY (TRIM(vt0.c2) IN (ABS(vt0.c1), ((vt0.c0) ISNULL)))  NULLS LAST, NULL DESC, ((((((((((((((vt0.c0) BETWEEN (vt0.lid) AND (2.37737148E8)))OR((((vt0.lid, vt0.lid, vt0.c2)) BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.c1, '-82673655', vt0.c2))))))OR(((vt0.c0)>(vt0.c2)))))AND(((vt0.c0)<=(vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))OR(json_insert(vt0.c0, vt0.lid, vt0.c2, vt0.c0))))OR(vt0.c2)) DESC  NULLS LAST LIMIT 0X2;
SELECT * FROM vt0 WHERE ((((vt0.lid, vt0.c1)) BETWEEN (((((vt0.c0))<>((vt0.c0))), vt0.c0)) AND ((vt0.lid COLLATE BINARY, ((vt0.lid) ISNULL))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE '' END)<((((vt0.c0, 'yN'))>((vt0.c0, vt0.lid)))))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.lid, vt0.c1)) BETWEEN (((((vt0.c0))>((vt0.c0))), vt0.c0)) AND ((vt0.lid COLLATE BINARY, ((vt0.lid) ISNULL)))))AND((+ (vt0.c0)) COLLATE RTRIM))) ORDER BY (TRIM(vt0.c2) IN (ABS(vt0.c1), ((vt0.c0) ISNULL)))  NULLS LAST, NULL DESC, ((((((((((((((vt0.c0) BETWEEN (vt0.lid) AND (2.37737148E8)))OR((((vt0.lid, vt0.lid, vt0.c2)) BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.c1, '-82673655', vt0.c2))))))OR(((vt0.c0)>(vt0.c2)))))AND(((vt0.c0)<=(vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))OR(json_insert(vt0.c0, vt0.lid, vt0.c2, vt0.c0))))OR(vt0.c2)) DESC  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1)<=(vt0.lid)))&(((((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.lid)))AND('160186897'))))) ORDER BY (TRIM(vt0.c2) IN (ABS(vt0.c1), ((vt0.c0) ISNULL)))  NULLS LAST, NULL DESC, ((((((((((((((vt0.c0) BETWEEN (vt0.lid) AND (2.37737148E8)))OR((((vt0.lid, vt0.lid, vt0.c2)) BETWEEN ((vt0.c2, vt0.lid, vt0.c0)) AND ((vt0.c1, '-82673655', vt0.c2))))))OR(((vt0.c0)>(vt0.c2)))))AND(((vt0.c0)<=(vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))OR(json_insert(vt0.c0, vt0.lid, vt0.c2, vt0.c0))))OR(vt0.c2)) DESC  NULLS LAST LIMIT 0X2;
SELECT * FROM vt0, t1 WHERE ((~ (CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 WHEN vt0.lid THEN t1.c0 ELSE vt0.c1 END))) ORDER BY LIKELY(DISTINCT ((vt0.lid)OR(t1.c1)));
SELECT * FROM vt0, t1 WHERE ((((~ (CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 WHEN vt0.lid THEN t1.c0 ELSE vt0.c1 END)))AND(json_patch((((t1.c1, vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((NULL, vt0.c1, vt0.c0, vt0.c2)) AND ((t1.c1, vt0.c0, vt0.lid, vt0.lid))), ((vt0.lid)IS NOT(t1.c0)))))) ORDER BY LIKELY(DISTINCT ((vt0.lid)OR(t1.c1))) LIMIT 0;
SELECT * FROM vt0, t1 WHERE ((~ (CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 WHEN vt0.lid THEN t1.c0 ELSE vt0.c1 END))) ORDER BY LIKELY(DISTINCT ((vt0.lid)OR(t1.c1)));
SELECT * FROM vt0, t1 WHERE ((((~ (CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 WHEN vt0.lid THEN t1.c0 ELSE vt0.c1 END)))AND(json_patch((((t1.c1, vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((NULL, vt0.c1, vt0.c0, vt0.c2)) AND ((t1.c1, vt0.c0, vt0.lid, vt0.lid))), ((vt0.lid)IS NOT(t1.c0)))))) ORDER BY LIKELY(DISTINCT ((vt0.lid)OR(t1.c1))) LIMIT 0;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2 COLLATE NOCASE) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.lid)IS NOT(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2 COLLATE NOCASE) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.lid)IS NOT(vt0.c1))))) ORDER BY ((((vt0.c0)GLOB(vt0.c2))) IS TRUE) DESC  NULLS LAST, (((vt0.c0)) BETWEEN ((((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)))) AND ((vt0.c2))) LIMIT 0x0;
SELECT ALL MAX(t1.c1) FROM vt0, t1 WHERE (((((NULL) BETWEEN (vt0.c1) AND (t1.c1))) IS TRUE));
SELECT ALL MAX(t1.c1) FROM vt0, t1 WHERE (((((NULL) BETWEEN (vt0.c1) AND (t1.c1))) IS TRUE)) ORDER BY (- (((((((t1.c1)OR(vt0.c2)))AND(vt0.lid)))OR(vt0.lid)))), (+ ((~ (t1.c1)))), CAST((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((t1.c0))) AS BLOB);
SELECT ALL MIN(vt0.c0) FROM t1, vt0 WHERE ((((t1.c1, vt0.lid, vt0.c1)) BETWEEN ((((t1.c1) BETWEEN (t1.c1) AND (x'137c')), vt0.c2, COALESCE(t1.c0, t1.c1, vt0.lid))) AND ((((t1.c0) NOT BETWEEN (vt0.lid) AND (vt0.c2)), ((((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))AND(NULL)))OR(t1.c0)), GLOB(vt0.c2, vt0.c2)))));
SELECT DISTINCT MIN(vt0.c0) FROM t1, vt0 WHERE ((((t1.c1, vt0.lid, vt0.c1)) BETWEEN ((((t1.c1) BETWEEN (t1.c1) AND (x'137c')), vt0.c2, COALESCE(t1.c0, t1.c1, vt0.lid))) AND ((((t1.c0) NOT BETWEEN (vt0.lid) AND (vt0.c2)), ((((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))AND(NULL)))OR(t1.c0)), GLOB(vt0.c2, vt0.c2)))));
SELECT MAX(vt0.lid) FROM vt0, t1 WHERE (((CAST(vt0.c2 AS BLOB))LIKE((t1.c0 IN (vt0.c2)))));
SELECT DISTINCT MAX(vt0.lid) FROM vt0, t1 WHERE (((((CAST(vt0.c2 AS BLOB))LIKE((t1.c0 IN (vt0.c2)))))AND(((t1.c1 COLLATE NOCASE) IS TRUE)))) INTERSECT SELECT DISTINCT MAX(vt0.lid) FROM vt0, t1 WHERE (((((((((((CASE WHEN t1.c1 THEN NULL WHEN vt0.c0 THEN t1.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN t1.c1 END)OR(LAST_INSERT_ROWID())))OR(((t1.c1)GLOB(t1.c0)))))OR('-1891682367')))OR(0Xffffffffc585629b)))AND(((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c1)))));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON CASE CAST(x'' AS REAL)  WHEN (('R') NOT NULL) THEN (- (vt0.lid)) WHEN -1.921422891E9 THEN (vt0.c1 IN (t1.c0)) WHEN ((t1.c1)<<(t1.c1)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) ELSE (((t1.c1))<=((vt0.c0))) END WHERE ((((vt0.lid)) BETWEEN ((CASE WHEN t1.c1 THEN t1.c1 END)) AND ((((t1.c0)||(t1.c1)))))) ORDER BY ((vt0.c1)&((t1.c1 IN ()))) ASC, ((((- (t1.c1))))!=((((t1.c1)>=(vt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON CASE CAST(x'' AS REAL)  WHEN (('R') NOT NULL) THEN (- (vt0.lid)) WHEN -1.921422891E9 THEN (vt0.c1 IN (t1.c0)) WHEN ((t1.c1)<<(t1.c1)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) ELSE (((t1.c1))<=((vt0.c0))) END WHERE ((((vt0.lid)) BETWEEN ((CASE WHEN t1.c1 THEN t1.c1 END)) AND ((((t1.c0)||(t1.c1)))))) ORDER BY ((vt0.c1)&((t1.c1 IN ()))) ASC, ((((- (t1.c1))))<>((((t1.c1)>=(vt0.c0)))))  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON CASE CAST(x'' AS REAL)  WHEN (('R') NOT NULL) THEN (- (vt0.lid)) WHEN -1.921422891E9 THEN (vt0.c1 IN (t1.c0)) WHEN ((t1.c1)<<(t1.c1)) THEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) ELSE (((t1.c1))<=((vt0.c0))) END WHERE (CAST(NULL AS BLOB)) ORDER BY ((vt0.c1)&((t1.c1 IN ()))) ASC, ((((- (t1.c1))))!=((((t1.c1)>=(vt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE ((((CASE WHEN NULL THEN vt0.lid END, CASE t1.c0  WHEN '-1182419834' THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END))<(((((vt0.c0))>=((vt0.lid))), (((x'db', vt0.c2, t1.c1)) NOT BETWEEN ((vt0.c2, t1.c1, vt0.c0)) AND ((t1.c1, vt0.c2, vt0.lid)))))));
SELECT ALL * FROM t1, vt0 WHERE ((((((CASE WHEN NULL THEN vt0.lid END, CASE t1.c0  WHEN '-1182419834' THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END))<(((((vt0.c0))>=((vt0.lid))), (((x'db', vt0.c2, t1.c1)) NOT BETWEEN ((vt0.c2, t1.c1, vt0.c0)) AND ((t1.c1, vt0.c2, vt0.lid)))))))AND(((((vt0.c2)*(vt0.c1))) IS TRUE)))) ORDER BY (((+ ('f3-ᎊ￿#
/'))) BETWEEN ((0.359416498904237 IN ())) AND (vt0.c2)) ASC;
SELECT ALL * FROM t1, vt0 WHERE ((((CASE WHEN NULL THEN vt0.lid END, CASE t1.c0  WHEN '-1182419834' THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END))<(((((vt0.c0))>=((vt0.lid))), (((x'db', vt0.c2, t1.c1)) NOT BETWEEN ((vt0.c2, t1.c1, vt0.c0)) AND ((t1.c1, vt0.c2, vt0.lid)))))));
SELECT ALL * FROM t1, vt0 WHERE ((((((CASE WHEN NULL THEN vt0.lid END, CASE t1.c0  WHEN '-1182419834' THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END))<(((((vt0.c0))>=((vt0.lid))), (((x'db', vt0.c2, t1.c1)) NOT BETWEEN ((vt0.c2, t1.c1, vt0.c0)) AND ((t1.c1, vt0.c2, vt0.lid)))))))AND(((((vt0.c2)*(vt0.c1))) IS TRUE)))) ORDER BY (((+ ('f3-ᎊ￿#
/'))) BETWEEN ((0.359416498904237 IN ())) AND (vt0.c2)) ASC;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((((vt0.lid)|(vt0.c2))) IS TRUE)) ORDER BY (((vt0.lid IN (vt0.lid, vt0.c1)))-(CAST(vt0.lid AS REAL))) ASC  NULLS LAST, CAST(CASE vt0.c0  WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.c1 ELSE vt0.lid END AS REAL) DESC;
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((((((vt0.lid)|(vt0.c2))) IS TRUE))AND(CASE vt0.lid COLLATE NOCASE  WHEN (NOT (vt0.c1)) THEN CAST(vt0.c1 AS REAL) WHEN ((((vt0.c0)AND(vt0.c1)))AND(NULL)) THEN ((vt0.c1)==(vt0.lid)) WHEN ((vt0.c2) IS TRUE) THEN CAST(vt0.lid AS TEXT) WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)) THEN vt0.c2 COLLATE RTRIM END))) ORDER BY COALESCE(DISTINCT ((('hQ/2', vt0.lid, vt0.c0, vt0.c1))<((vt0.lid, vt0.c2, vt0.c1, vt0.lid))), CAST(vt0.c0 AS TEXT), CAST(vt0.c2 AS REAL)) ASC, vt0.c0 DESC  NULLS LAST;
SELECT MAX(vt0.c1) FROM vt0 WHERE ((('p')|(rtreenode(vt0.c2, x'47'))));
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE ((((('p')|(rtreenode(vt0.c2, x'47'))))AND((((((vt0.c1, vt0.lid, vt0.lid)) BETWEEN ((vt0.c1, vt0.lid, vt0.lid)) AND ((vt0.c1, vt0.c0, vt0.lid)))) NOT NULL)))) LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE ((((((vt0.c0) IS FALSE), CAST(vt0.c1 AS INTEGER), CAST(vt0.c2 AS REAL)))==((CASE vt0.c2  WHEN '-324521247' THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '641564268' WHEN vt0.lid THEN vt0.c0 END, (+ (vt0.c2)), IFNULL(DISTINCT vt0.c1, vt0.lid))))) LIMIT 0x0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(vt0.c1 AS BLOB) WHEN '1815581643' THEN '7' COLLATE RTRIM WHEN ((vt0.c0)LIKE('705184790')) THEN LIKELY(t1.c0) END WHERE ((((((((t1.c0)AND(vt0.c2)))AND(vt0.c1)), (((vt0.lid, t1.c0))==((vt0.c0, t1.c1)))))>=((CASE vt0.c2  WHEN -508055424 THEN t1.c1 ELSE vt0.c1 END, ((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(vt0.c1 AS BLOB) WHEN '1815581643' THEN '7' COLLATE RTRIM WHEN ((vt0.c0)LIKE('705184790')) THEN LIKELY(t1.c0) END WHERE ((((((((t1.c0)AND(vt0.c2)))AND(vt0.c1)), (((vt0.lid, t1.c0))==((vt0.c0, t1.c1)))))>=((CASE vt0.c2  WHEN -508055424 THEN t1.c1 ELSE vt0.c1 END, ((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))) ORDER BY (((((t1.c0)<<('*')), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2))))>=(((vt0.c2 IN ()), CASE WHEN t1.c1 THEN vt0.lid WHEN t1.c0 THEN 0.359416498904237 ELSE vt0.lid END))) DESC, (NOT (vt0.c1)) DESC INTERSECT SELECT * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(vt0.c1 AS BLOB) WHEN '1815581643' THEN '7' COLLATE RTRIM WHEN ((vt0.c0)LIKE('705184790')) THEN LIKELY(t1.c0) END WHERE (CASE ((((((((t1.c0)AND(vt0.c1)))AND(t1.c1)))OR(vt0.c2)))OR(vt0.c2))  WHEN TYPEOF(vt0.c2) THEN CAST(t1.c0 AS NUMERIC) WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.lid))) THEN (((('-1928117674')AND(vt0.lid)))OR(vt0.c1)) WHEN ((t1.c0) NOT BETWEEN (t1.c1) AND (NULL)) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) ELSE ((vt0.c1) BETWEEN (t1.c0) AND (t1.c1)) END) ORDER BY (((((t1.c0)<<('*')), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2))))>=(((vt0.c2 IN ()), CASE WHEN t1.c1 THEN vt0.lid WHEN t1.c0 THEN 0.359416498904237 ELSE vt0.lid END))) DESC, (NOT (vt0.c1)) DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(vt0.c1 AS BLOB) WHEN '1815581643' THEN '7' COLLATE RTRIM WHEN ((vt0.c0)LIKE('705184790')) THEN LIKELY(t1.c0) END WHERE ((((((((t1.c0)AND(vt0.c2)))AND(vt0.c1)), (((vt0.lid, t1.c0))==((vt0.c0, t1.c1)))))>=((CASE vt0.c2  WHEN -508055424 THEN t1.c1 ELSE vt0.c1 END, ((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(vt0.c1 AS BLOB) WHEN '1815581643' THEN '7' COLLATE RTRIM WHEN ((vt0.c0)LIKE('705184790')) THEN LIKELY(t1.c0) END WHERE ((((((((t1.c0)AND(vt0.c2)))AND(vt0.c1)), (((vt0.lid, t1.c0))==((vt0.c0, t1.c1)))))>=((CASE vt0.c2  WHEN -508055424 THEN t1.c1 ELSE vt0.c1 END, ((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))) ORDER BY (((((t1.c0)<<('*')), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2))))>=(((vt0.c2 IN ()), CASE WHEN t1.c1 THEN vt0.lid WHEN t1.c0 THEN 0.359416498904237 ELSE vt0.lid END))) DESC, (NOT (vt0.c1)) DESC INTERSECT SELECT * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(vt0.c1 AS BLOB) WHEN '1815581643' THEN '7' COLLATE RTRIM WHEN ((vt0.c0)LIKE('705184790')) THEN LIKELY(t1.c0) END WHERE (CASE ((((((((t1.c0)AND(vt0.c1)))AND(t1.c1)))OR(vt0.c2)))OR(vt0.c2))  WHEN TYPEOF(vt0.c2) THEN CAST(t1.c0 AS NUMERIC) WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.lid))) THEN (((('-1928117674')AND(vt0.lid)))OR(vt0.c1)) WHEN ((t1.c0) NOT BETWEEN (t1.c1) AND (NULL)) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) ELSE ((vt0.c1) BETWEEN (t1.c0) AND (t1.c1)) END) ORDER BY (((((t1.c0)<<('*')), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2))))>=(((vt0.c2 IN ()), CASE WHEN t1.c1 THEN vt0.lid WHEN t1.c0 THEN 0.359416498904237 ELSE vt0.lid END))) DESC, (NOT (vt0.c1)) DESC;
SELECT ALL * FROM t1, vt0 WHERE (CAST(CASE WHEN vt0.lid THEN vt0.lid END AS BLOB));
SELECT * FROM t1, vt0 WHERE (CAST(CASE WHEN vt0.lid THEN vt0.lid END AS BLOB)) LIMIT 0X3;
SELECT ALL * FROM t1, vt0 WHERE (CAST(CASE WHEN vt0.lid THEN vt0.lid END AS BLOB));
SELECT * FROM t1, vt0 WHERE (CAST(CASE WHEN vt0.lid THEN vt0.lid END AS BLOB)) LIMIT 0X3;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((((987729507)AND(vt0.lid)))AND(vt0.c0)) COLLATE NOCASE);
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((((987729507)AND(vt0.lid)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY NULL DESC  NULLS LAST, (((((vt0.c2)GLOB(vt0.c2))))=(((vt0.lid IN ())))) ASC  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt0, t1 WHERE (CAST(vt0.c2 AS TEXT)) ORDER BY ((((t1.c1)OR(0x4df2f6ba)))OR(vt0.lid)) COLLATE RTRIM ASC, (((vt0.lid) BETWEEN (vt0.c0) AND (t1.c1)) IN (((vt0.c2) BETWEEN (t1.c1) AND (vt0.c2)))) ASC;
SELECT DISTINCT MIN(vt0.c0) FROM vt0, t1 WHERE (CAST(vt0.c2 AS TEXT)) ORDER BY ((((t1.c1)OR(0X4df2f6ba)))OR(vt0.lid)) COLLATE RTRIM ASC, (((vt0.lid) BETWEEN (vt0.c0) AND (t1.c1)) IN (((vt0.c2) BETWEEN (t1.c1) AND (vt0.c2)))) ASC INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0, t1 WHERE (CASE WHEN TYPEOF(DISTINCT vt0.c2) THEN vt0.c1 WHEN CASE WHEN t1.c0 THEN vt0.c2 WHEN t1.c1 THEN vt0.c1 WHEN vt0.c0 THEN t1.c1 ELSE t1.c0 END THEN LIKELIHOOD(vt0.c0, t1.c0) WHEN LAST_INSERT_ROWID() THEN CASE WHEN 0.1306389850687174 THEN t1.c0 WHEN t1.c0 THEN vt0.c2 ELSE vt0.lid END ELSE CAST(vt0.c2 AS BLOB) END) ORDER BY ((((t1.c1)OR(1307768506)))OR(vt0.lid)) COLLATE RTRIM ASC, (((vt0.lid) BETWEEN (vt0.c0) AND (t1.c1)) IN (((vt0.c2) BETWEEN (t1.c1) AND (vt0.c2)))) ASC;
SELECT ALL * FROM t1 WHERE (')謠z^{蹐k') ORDER BY ((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0))) IS FALSE) DESC  NULLS FIRST, CASE WHEN ((t1.c1)/(t1.c0)) THEN (((t1.c1, t1.c0))!=((t1.c0, t1.c0))) END ASC, (((((t1.c0, t1.c0, t1.c1, t1.c1))>((t1.c1, t1.c0, t1.c1, t1.c1))))%(TIME(t1.c0, t1.c1, t1.c1, t1.c0)))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((')謠z^{蹐k')AND(((0.3438968318068041)||(')Gl6dnJ('))))) ORDER BY (NOT (((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE (')謠z^{蹐k') ORDER BY ((((((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)))AND(t1.c0))) IS FALSE) DESC  NULLS FIRST, CASE WHEN ((t1.c1)/(t1.c0)) THEN (((t1.c1, t1.c0))!=((t1.c0, t1.c0))) END ASC, (((((t1.c0, t1.c0, t1.c1, t1.c1))>((t1.c1, t1.c0, t1.c1, t1.c1))))%(TIME(t1.c0, t1.c1, t1.c1, t1.c0)))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((')謠z^{蹐k')AND(((0.3438968318068041)||(')Gl6dnJ('))))) ORDER BY (NOT (((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))  NULLS LAST LIMIT 1;
SELECT MAX(t1.c1) FROM t1 WHERE ((0.17115185824822088 IN ((t1.c1 IN (t1.c0, t1.c1))))) ORDER BY (- (t1.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((0.17115185824822088 IN ((t1.c1 IN (t1.c0)))))AND(CASE WHEN ((t1.c1)OR(t1.c0)) THEN (- (t1.c0)) END))) ORDER BY (- (t1.c0 COLLATE BINARY)) ASC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (UNICODE(((t1.c1)||(t1.c1)))) ORDER BY (- (t1.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT MAX(vt0.c1) FROM vt0 NATURAL JOIN t1 WHERE (((INSTR(t1.c0, '-1421338493'))=(x'')));
SELECT DISTINCT MAX(vt0.c1) FROM vt0 NATURAL JOIN t1 WHERE (((INSTR(t1.c0, '-1421338493'))=(x''))) INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 NOT INDEXED NATURAL JOIN t1 WHERE ((- (CASE NULL  WHEN t1.c0 THEN t1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)));
SELECT MIN(vt0.c2) FROM vt0 WHERE (((((0.2641564034928904)-(vt0.lid))) NOT NULL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c2 THEN vt0.lid WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END) IS FALSE), ((('601369208') NOT BETWEEN (vt0.lid) AND (vt0.c2)) IN ()) ASC;
SELECT MIN(vt0.c2) FROM vt0 WHERE (((((((0.2641564034928904)-(vt0.lid))) NOT NULL))AND(CASE WHEN (- (vt0.c2)) THEN ((vt0.c1)<=(vt0.lid)) WHEN ((vt0.c2)<=(vt0.lid)) THEN CASE WHEN x'' THEN vt0.c2 WHEN vt0.lid THEN vt0.c2 WHEN vt0.lid THEN vt0.c1 ELSE '0.7694314648599674' END WHEN CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END THEN (- (vt0.c0)) END))) ORDER BY ((('1847904414' IN (vt0.c0))) NOT NULL), (((vt0.lid) NOT NULL) IN ()) DESC  NULLS LAST INTERSECT SELECT ALL MIN(vt0.c2) FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt0.lid END))>((((vt0.c2)AND(vt0.c1)))))) ORDER BY ((('1847904414' IN (vt0.c0))) NOT NULL), (((vt0.lid) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (t1.c0);
SELECT ALL MIN(t1.c1) FROM t1 WHERE (t1.c0) LIMIT 2;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c2)<=(vt0.c2)) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) END) ORDER BY vt0.c2 DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((vt0.c2)<=(vt0.c2)) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) END)AND(((vt0.c1 COLLATE BINARY) IS TRUE)))) ORDER BY vt0.c2 DESC  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.lid)))OR(vt0.c2))) ISNULL)) ORDER BY vt0.c2 DESC  NULLS LAST LIMIT 2;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c2)<=(vt0.c2)) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) END) ORDER BY vt0.c2 DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((vt0.c2)<=(vt0.c2)) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) END)AND(((vt0.c1 COLLATE BINARY) IS TRUE)))) ORDER BY vt0.c2 DESC  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.lid)))OR(vt0.c2))) ISNULL)) ORDER BY vt0.c2 DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM vt0 WHERE (((vt0.c2 IN (vt0.c1, vt0.c1)) IN (((vt0.c0)||(vt0.c2)))));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c2 IN (vt0.c1, vt0.c1)) IN (((vt0.c0)||(vt0.c2)))))AND(CAST(565044673 AS BLOB)))) ORDER BY ((0.607498520558832)=(((vt0.c0)==(vt0.c0)))) ASC LIMIT 0;
SELECT ALL * FROM vt0 WHERE (((vt0.c2 IN (vt0.c1, vt0.c1)) IN (((vt0.c0)||(vt0.c2)))));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c2 IN (vt0.c1, vt0.c1)) IN (((vt0.c0)||(vt0.c2)))))AND(CAST(565044673 AS BLOB)))) ORDER BY ((0.607498520558832)=(((vt0.c0)==(vt0.c0)))) ASC LIMIT 0;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (~ (t1.c0)) COLLATE RTRIM  NULLS LAST, (NOT (t1.c1))  NULLS FIRST, (((('-1979426837')OR(t1.c0)))OR(((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND('1921768955')))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY CASE ((t1.c0) IS TRUE)  WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END END ASC, ((CHAR(t1.c0, x'')) ISNULL) DESC;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (~ (t1.c0)) COLLATE RTRIM  NULLS LAST, (NOT (t1.c1))  NULLS FIRST, (((('-1979426837')OR(t1.c0)))OR(((((((t1.c1)OR(t1.c0)))OR(t1.c1)))AND('1921768955')))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY CASE ((t1.c0) IS TRUE)  WHEN CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END THEN CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END END ASC, ((CHAR(t1.c0, x'')) ISNULL) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)*(t1.c0)))-(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)*(t1.c0)))-(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (CAST('FALSE' AS BLOB));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON (((~ (x'')))IS((t1.c0 IN ()))) WHERE (vt0.c1) ORDER BY ((((t1.c1) ISNULL))=(CAST(t1.c1 AS BLOB))) ASC  NULLS FIRST, ((((vt0.c1) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT * FROM t1 INNER JOIN vt0 ON (((~ (x'')))IS((t1.c0 IN ()))) WHERE (vt0.c1) ORDER BY ((((t1.c1) ISNULL))==(CAST(t1.c1 AS BLOB))) ASC  NULLS FIRST, ((((vt0.c1) NOT NULL)) NOT NULL)  NULLS FIRST INTERSECT SELECT ALL * FROM t1 INNER JOIN vt0 ON (((~ (x'')))IS((t1.c0 IN ()))) WHERE ((((((t1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND ('e'))) ORDER BY ((((t1.c1) ISNULL))==(CAST(t1.c1 AS BLOB))) ASC  NULLS FIRST, ((((vt0.c1) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON (((~ (x'')))IS((t1.c0 IN ()))) WHERE (vt0.c1) ORDER BY ((((t1.c1) ISNULL))=(CAST(t1.c1 AS BLOB))) ASC  NULLS FIRST, ((((vt0.c1) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT * FROM t1 INNER JOIN vt0 ON (((~ (x'')))IS((t1.c0 IN ()))) WHERE (vt0.c1) ORDER BY ((((t1.c1) ISNULL))==(CAST(t1.c1 AS BLOB))) ASC  NULLS FIRST, ((((vt0.c1) NOT NULL)) NOT NULL)  NULLS FIRST INTERSECT SELECT ALL * FROM t1 INNER JOIN vt0 ON (((~ (x'')))IS((t1.c0 IN ()))) WHERE ((((((t1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND ('e'))) ORDER BY ((((t1.c1) ISNULL))==(CAST(t1.c1 AS BLOB))) ASC  NULLS FIRST, ((((vt0.c1) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT MAX(vt0.lid) FROM vt0 WHERE (((((vt0.c1)|(vt0.c0)))IS NOT((vt0.lid IN (vt0.c0, vt0.lid))))) ORDER BY json_array_length(load_extension(vt0.lid), ((vt0.c0)||(vt0.c0))) DESC  NULLS FIRST, (((((((vt0.c1)AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c2)) IN (0.9612669387822281));
SELECT ALL MAX(vt0.lid) FROM vt0 WHERE (((((((vt0.c1)|(vt0.c0)))IS NOT((vt0.lid IN (vt0.c0, vt0.lid)))))AND(vt0.lid))) ORDER BY (- (vt0.lid COLLATE RTRIM)) DESC LIMIT 0 INTERSECT SELECT MAX(vt0.lid) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c1)) COLLATE BINARY) ORDER BY (- (vt0.lid COLLATE RTRIM)) DESC LIMIT 0x0;
SELECT * FROM vt0 WHERE (CAST(((((((((((vt0.c2)OR(vt0.lid)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER));
SELECT * FROM vt0 WHERE (CAST(((((((((((vt0.c2)OR(vt0.lid)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER)) LIMIT 0x1 INTERSECT SELECT * FROM vt0 WHERE (x'') LIMIT 0x1;
SELECT * FROM vt0 WHERE (CAST(((((((((((vt0.c2)OR(vt0.lid)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER));
SELECT * FROM vt0 WHERE (CAST(((((((((((vt0.c2)OR(vt0.lid)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER)) LIMIT 0x1 INTERSECT SELECT * FROM vt0 WHERE (x'') LIMIT 0x1;
SELECT ALL COUNT(*) FROM vt0 WHERE ('lfLNO#&') ORDER BY (NOT (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((('lfLNO#&')AND(CAST(vt0.lid AS TEXT) COLLATE RTRIM))) ORDER BY (((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)))OR(vt0.lid)))OR(0.46010967551216686)), (- (vt0.lid)), (vt0.c2 IN (vt0.c1))))<=((vt0.c2 COLLATE RTRIM, (vt0.c1 IN ()), ((vt0.c2)+(x''))))) DESC  NULLS FIRST, ((vt0.lid COLLATE NOCASE) NOT BETWEEN ((vt0.c2 IN ())) AND (((vt0.c1)!=(vt0.lid))));
SELECT * FROM t1, vt0 WHERE (t1.c0) ORDER BY CAST(((t1.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) AS TEXT) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1, vt0 WHERE (((t1.c0)AND(t1.c1))) ORDER BY CAST(((t1.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) AS TEXT) ASC  NULLS LAST LIMIT 2;
SELECT * FROM t1, vt0 WHERE (t1.c0) ORDER BY CAST(((t1.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) AS TEXT) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1, vt0 WHERE (((t1.c0)AND(t1.c1))) ORDER BY CAST(((t1.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) AS TEXT) ASC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t1 WHERE (((((t1.c0) IS FALSE)) NOT NULL));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) IS FALSE)) NOT NULL));
SELECT ALL * FROM t1 WHERE (((((t1.c0) IS FALSE)) NOT NULL));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) IS FALSE)) NOT NULL));
SELECT MIN(t1.c1) FROM t1 WHERE (ABS((t1.c0 IN ())));
SELECT MIN(t1.c1) FROM t1 WHERE (ABS((t1.c0 IN ())));
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((0.43641431309379297))>=((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))))) ORDER BY ((t1.c0)>>(t1.c0)) COLLATE BINARY;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((0.43641431309379297))=((((((((t1.c1)OR(t1.c0)))AND(t1.c1)))AND(t1.c0))))))AND(t1.c1))) ORDER BY ((t1.c0)>>(t1.c0)) COLLATE BINARY LIMIT 2 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (NULL) ORDER BY ((t1.c0)>>(t1.c0)) COLLATE BINARY LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<=(t1.c1)))GLOB((t1.c1 IN (t1.c0, t1.c1))))) ORDER BY (((((+ (t1.c1)))AND(t1.c0)))AND((~ (t1.c1))))  NULLS LAST, t1.c0  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((t1.c0)==(t1.c1)))GLOB((t1.c1 IN (t1.c0, t1.c1)))))AND(((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)))) ORDER BY ((t1.c1 IN (0.17904706204061271)) IN (((t1.c0) IS TRUE)))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((NULL IN (((t1.c1)%(t1.c1))))) ORDER BY ((t1.c1 IN (0.17904706204061271)) IN (((t1.c0) IS TRUE)))  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0, t1 WHERE (0.7365877352584167);
SELECT * FROM vt0, t1 WHERE (0.7365877352584167) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1))) AS TEXT), ((CAST(t1.c1 AS REAL)) BETWEEN (((((vt0.c2)OR(0.539555644451909)))AND(vt0.c1))) AND (NULL))  NULLS LAST LIMIT 0x4;
SELECT * FROM vt0, t1 WHERE (0.7365877352584167);
SELECT * FROM vt0, t1 WHERE (0.7365877352584167) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1))) AS TEXT), ((CAST(t1.c1 AS REAL)) BETWEEN (((((vt0.c2)OR(0.539555644451909)))AND(vt0.c1))) AND (NULL))  NULLS LAST LIMIT 0x4;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CASE HEX(DISTINCT t1.c1)  WHEN ((t1.c1)||(t1.c0)) THEN CAST(t1.c0 AS REAL) ELSE (+ (t1.c0)) END) ORDER BY t1.c1, (+ (t1.c1)) COLLATE NOCASE COLLATE RTRIM  NULLS LAST, CASE CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN 'A뷿' WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END  WHEN (t1.c1 IN ()) THEN t1.c0 COLLATE RTRIM ELSE CAST(t1.c0 AS BLOB) END ASC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((CASE HEX(DISTINCT t1.c1)  WHEN ((t1.c1)||(t1.c0)) THEN CAST(t1.c0 AS REAL) ELSE (+ (t1.c0)) END)AND(((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))LIKE(((t1.c1)>>(t1.c1))))))) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)>>(((t1.c1) BETWEEN (t1.c1) AND ('0.37823549991960437')))) ASC;
SELECT MAX(vt0.c1) FROM vt0 NATURAL JOIN t1 WHERE (((CASE WHEN vt0.c0 THEN vt0.lid ELSE t1.c0 END)OR(CAST(t1.c0 AS INTEGER))));
SELECT MAX(vt0.c1) FROM vt0 NATURAL JOIN t1 WHERE (((((CASE WHEN vt0.c0 THEN vt0.lid ELSE t1.c0 END)OR(CAST(t1.c0 AS INTEGER))))AND(CAST(vt0.c2 AS BLOB) COLLATE NOCASE)));
SELECT MIN(vt0.c1) FROM vt0 WHERE ((~ (((vt0.c2)AND(vt0.c1))))) ORDER BY (('H')*(((((((vt0.c0)OR(vt0.c2)))AND(vt0.lid)))AND(vt0.c1))));
SELECT MIN(vt0.c1) FROM vt0 WHERE ((((~ (((vt0.c2)AND(vt0.c1)))))AND(((((((CAST(vt0.c1 AS REAL))OR(NULLIF(vt0.c1, vt0.c1))))AND((NOT (vt0.c0)))))AND(((vt0.lid)IS(vt0.c1))))))) ORDER BY (((vt0.lid)+(vt0.lid)) IN (((vt0.c0) IS FALSE))) ASC  NULLS FIRST, ((((((((((((((((((vt0.c1)OR(vt0.lid)))OR(vt0.lid)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))AND((vt0.c2 IN ()))))AND(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 END)))AND(((vt0.c1)IS('1924575090')))))AND((+ (vt0.lid))))  NULLS FIRST INTERSECT SELECT MIN(vt0.c1) FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM) BETWEEN ('') AND ((('605307051')<=(vt0.c2))))) ORDER BY (((vt0.lid)+(vt0.lid)) IN (((vt0.c0) IS FALSE))) ASC  NULLS FIRST, ((((((((((((((((((vt0.c1)OR(vt0.lid)))OR(vt0.lid)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))AND((vt0.c2 IN ()))))AND(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 END)))AND(((vt0.c1)IS('1924575090')))))AND((+ (vt0.lid))))  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE (CASE vt0.c0  WHEN ((t1.c1) NOTNULL) THEN vt0.c2 WHEN vt0.c2 COLLATE NOCASE THEN vt0.lid COLLATE NOCASE END) ORDER BY CAST((((vt0.c2, vt0.lid, t1.c1))<=((vt0.c0, t1.c0, t1.c0))) AS REAL), (((vt0.lid) NOT BETWEEN (t1.c1) AND (vt0.lid)) IN (CAST(vt0.lid AS INTEGER), vt0.c2 COLLATE BINARY));
SELECT DISTINCT * FROM vt0, t1 WHERE (((CASE vt0.c0  WHEN ((t1.c1) NOTNULL) THEN vt0.c2 WHEN vt0.c2 COLLATE NOCASE THEN vt0.lid COLLATE NOCASE END)AND((((((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid))))OR(LOWER(DISTINCT t1.c0))))AND((+ (vt0.c0))))))) ORDER BY CAST((((vt0.c2, vt0.lid, t1.c1))<=((vt0.c0, t1.c0, t1.c0))) AS REAL), (((vt0.lid) NOT BETWEEN (t1.c1) AND (vt0.lid)) IN (CAST(vt0.lid AS INTEGER), vt0.c2 COLLATE BINARY)) INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (CASE t1.c0  WHEN '62963430' THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN vt0.lid END COLLATE BINARY) ORDER BY CAST((((vt0.c2, vt0.lid, t1.c1))<=((vt0.c0, t1.c0, t1.c0))) AS REAL), (((vt0.lid) NOT BETWEEN (t1.c1) AND (vt0.lid)) IN (CAST(vt0.lid AS INTEGER), vt0.c2 COLLATE BINARY));
SELECT * FROM vt0, t1 WHERE (CASE vt0.c0  WHEN ((t1.c1) NOTNULL) THEN vt0.c2 WHEN vt0.c2 COLLATE NOCASE THEN vt0.lid COLLATE NOCASE END) ORDER BY CAST((((vt0.c2, vt0.lid, t1.c1))<=((vt0.c0, t1.c0, t1.c0))) AS REAL), (((vt0.lid) NOT BETWEEN (t1.c1) AND (vt0.lid)) IN (CAST(vt0.lid AS INTEGER), vt0.c2 COLLATE BINARY));
SELECT DISTINCT * FROM vt0, t1 WHERE (((CASE vt0.c0  WHEN ((t1.c1) NOTNULL) THEN vt0.c2 WHEN vt0.c2 COLLATE NOCASE THEN vt0.lid COLLATE NOCASE END)AND((((((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid))))OR(LOWER(DISTINCT t1.c0))))AND((+ (vt0.c0))))))) ORDER BY CAST((((vt0.c2, vt0.lid, t1.c1))<=((vt0.c0, t1.c0, t1.c0))) AS REAL), (((vt0.lid) NOT BETWEEN (t1.c1) AND (vt0.lid)) IN (CAST(vt0.lid AS INTEGER), vt0.c2 COLLATE BINARY)) INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (CASE t1.c0  WHEN '62963430' THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN vt0.lid END COLLATE BINARY) ORDER BY CAST((((vt0.c2, vt0.lid, t1.c1))<=((vt0.c0, t1.c0, t1.c0))) AS REAL), (((vt0.lid) NOT BETWEEN (t1.c1) AND (vt0.lid)) IN (CAST(vt0.lid AS INTEGER), vt0.c2 COLLATE BINARY));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c2 COLLATE RTRIM)AND(vt0.lid COLLATE RTRIM)))AND((((x'49')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(vt0.c0)))AND((~ (vt0.c0))))) ORDER BY ' R' ASC  NULLS LAST, ((((vt0.c2)OR(vt0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((((vt0.c2 COLLATE RTRIM)AND(vt0.lid COLLATE RTRIM)))AND((((x'49')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(vt0.c0)))AND((~ (vt0.c0)))))AND(((((((vt0.lid)OR(vt0.lid)))AND(vt0.c0)))<<(UNLIKELY(DISTINCT vt0.lid)))))) ORDER BY (((((vt0.c0, vt0.c2, vt0.lid, vt0.lid))>=((vt0.c1, vt0.c2, vt0.lid, vt0.lid))))!=(vt0.lid COLLATE NOCASE)) ASC, CAST(((vt0.c2)<(vt0.lid)) AS TEXT) INTERSECT SELECT * FROM vt0 WHERE (((((((((((((1.249359975E9)OR(x'5a00a8')))OR(vt0.c2)))AND((NOT (vt0.c2)))))OR((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))))AND(CASE vt0.lid  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid END)))AND(IFNULL(vt0.c1, vt0.c2)))) ORDER BY (((((vt0.c0, vt0.c2, vt0.lid, vt0.lid))>=((vt0.c1, vt0.c2, vt0.lid, vt0.lid))))!=(vt0.lid COLLATE NOCASE)) ASC, CAST(((vt0.c2)<(vt0.lid)) AS TEXT);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c2 COLLATE RTRIM)AND(vt0.lid COLLATE RTRIM)))AND((((x'49')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(vt0.c0)))AND((~ (vt0.c0))))) ORDER BY ' R' ASC  NULLS LAST, ((((vt0.c2)OR(vt0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((((vt0.c2 COLLATE RTRIM)AND(vt0.lid COLLATE RTRIM)))AND((((x'49')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(vt0.c0)))AND((~ (vt0.c0)))))AND(((((((vt0.lid)OR(vt0.lid)))AND(vt0.c0)))<<(UNLIKELY(DISTINCT vt0.lid)))))) ORDER BY (((((vt0.c0, vt0.c2, vt0.lid, vt0.lid))>=((vt0.c1, vt0.c2, vt0.lid, vt0.lid))))!=(vt0.lid COLLATE NOCASE)) ASC, CAST(((vt0.c2)<(vt0.lid)) AS TEXT) INTERSECT SELECT * FROM vt0 WHERE (((((((((((((1.249359975E9)OR(x'5a00a8')))OR(vt0.c2)))AND((NOT (vt0.c2)))))OR((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))))AND(CASE vt0.lid  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.lid END)))AND(IFNULL(vt0.c1, vt0.c2)))) ORDER BY (((((vt0.c0, vt0.c2, vt0.lid, vt0.lid))>=((vt0.c1, vt0.c2, vt0.lid, vt0.lid))))!=(vt0.lid COLLATE NOCASE)) ASC, CAST(((vt0.c2)<(vt0.lid)) AS TEXT);
SELECT MIN(vt0.c1) FROM vt0 INNER JOIN t1 ON TRIM(json_quote(vt0.lid)) WHERE (((((((vt0.c0)OR('v竄S8&e')))OR(t1.c1)))IS NOT(((vt0.c1) ISNULL))));
SELECT MIN(vt0.c1) FROM vt0 INNER JOIN t1 ON TRIM(json_quote(vt0.lid)) WHERE (((((((vt0.c0)OR('v竄S8&e')))OR(t1.c1)))IS NOT(((vt0.c1) ISNULL)))) ORDER BY ((((((vt0.c2)<(t1.c0)))AND((((vt0.c2, vt0.c0))>=((vt0.c0, vt0.c2))))))OR(CAST(vt0.c0 AS BLOB))) LIMIT 0;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (LTRIM(t1.c0, ((t1.c0)IS(t1.c1)))) ORDER BY CAST(CAST(t1.c1 AS TEXT) AS BLOB) DESC  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((LTRIM(t1.c0, ((t1.c0)IS(t1.c1))))AND((((t1.c1 IN ())) IS TRUE)))) ORDER BY ((((t1.c0)<>(',O9')))+((t1.c1 IN ()))) DESC  NULLS FIRST, CAST(LIKE(x'', t1.c1) AS INTEGER) ASC  NULLS FIRST, '-186903492'  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) COLLATE NOCASE) ORDER BY x'82' ASC, CAST((vt0.c2 IN (vt0.c1, x'f9')) AS TEXT), ((((vt0.lid) ISNULL)) IS FALSE)  NULLS LAST;
SELECT ALL MAX(vt0.lid) FROM vt0 NATURAL JOIN t1 WHERE (('|YA/&5ig' IN ((((t1.c0, 0.1627352067828749, t1.c0))>=((t1.c0, vt0.c2, vt0.c2)))))) ORDER BY ((((vt0.c1)||(0.3569284037434812)))<>(((vt0.c2) IS FALSE))) DESC, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE t1.c1 END) IS TRUE)  NULLS FIRST;
SELECT DISTINCT MAX(vt0.lid) FROM vt0 NATURAL JOIN t1 WHERE (((('|YA/&5ig' IN ((((t1.c0, 0.1627352067828749, t1.c0))>((t1.c0, vt0.c2, vt0.c2))))))AND(vt0.c0 COLLATE RTRIM))) ORDER BY (((((((vt0.lid)AND(vt0.c1)))AND(t1.c0)), ((vt0.lid) IS TRUE), ((vt0.c2) NOT BETWEEN (vt0.c0) AND (t1.c0))))<=((CASE WHEN '-636018188' THEN t1.c0 ELSE t1.c1 END, (((0.3179205041091029))>((t1.c1))), (+ (vt0.c0))))) DESC  NULLS FIRST, (((((((NOT (x'4e')))OR(CASE vt0.c0  WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.lid WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 END)))OR((~ (t1.c1)))))AND(CASE t1.c0  WHEN vt0.c1 THEN vt0.lid END));
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON (((vt0.c2) NOTNULL) IN (json_patch(vt0.lid, vt0.c0))) WHERE ((((((t1.c0, vt0.c0, t1.c0, vt0.lid, t1.c1))<=((t1.c1, t1.c1, 'S&SPzS', t1.c0, vt0.c0))))IS NOT(((vt0.c1)=(vt0.c0)))));
SELECT * FROM vt0 INNER JOIN t1 ON (((vt0.c2) NOTNULL) IN (json_patch(vt0.lid, vt0.c0))) WHERE ((((((t1.c0, vt0.c0, t1.c0, vt0.lid, t1.c1))<((t1.c1, t1.c1, 'S&SPzS', t1.c0, vt0.c0))))IS NOT(((vt0.c1)=(vt0.c0))))) ORDER BY NULL DESC LIMIT 0;
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON (((vt0.c2) NOTNULL) IN (json_patch(vt0.lid, vt0.c0))) WHERE ((((((t1.c0, vt0.c0, t1.c0, vt0.lid, t1.c1))<=((t1.c1, t1.c1, 'S&SPzS', t1.c0, vt0.c0))))IS NOT(((vt0.c1)=(vt0.c0)))));
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(vt0.c2, vt0.c1) COLLATE NOCASE, (((0.7634401920726267 IN (vt0.c2, vt0.c1)))GLOB((x'be' IN (vt0.c1, vt0.lid)))) ASC;
SELECT MAX(vt0.c1) FROM vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(vt0.c2, vt0.c1) COLLATE NOCASE, (((0.7634401920726267 IN (vt0.c2, vt0.c1)))GLOB((x'be' IN (vt0.c1, vt0.lid)))) ASC;
SELECT MIN(t1.c0) FROM vt0, t1 WHERE (vt0.c1);
SELECT DISTINCT MIN(t1.c0) FROM vt0, t1 WHERE (vt0.c1) LIMIT 0 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM vt0, t1 WHERE (2.99204934E8) LIMIT 0;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON vt0.c0 WHERE (UNLIKELY(TRIM(t1.c0)));
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON vt0.c0 WHERE (((UNLIKELY(TRIM(t1.c0)))AND(t1.c1))) INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON vt0.c0 WHERE ((((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)), NULL))>=(('ᶰy	z1wbs' COLLATE BINARY, 'xu'))));
SELECT ALL * FROM t1 CROSS JOIN vt0 ON vt0.c0 WHERE (UNLIKELY(TRIM(t1.c0)));
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON vt0.c0 WHERE (((UNLIKELY(TRIM(t1.c0)))AND(t1.c1))) INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON vt0.c0 WHERE ((((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)), NULL))>=(('ᶰy	z1wbs' COLLATE BINARY, 'xu'))));
SELECT MIN(vt0.c0) FROM vt0 WHERE (CAST((+ (vt0.c1)) AS REAL)) ORDER BY ((vt0.c0 IN (vt0.c0)) IN ()), COALESCE(DISTINCT ((x'aecb')+(vt0.c2)), CAST(vt0.c1 AS REAL))  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (CAST((+ (vt0.c1)) AS REAL)) ORDER BY ((vt0.c0 IN (vt0.c0)) IN ()), COALESCE(DISTINCT ((x'aecb')+(vt0.c2)), CAST(vt0.c1 AS REAL))  NULLS FIRST LIMIT 0;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((vt0.c2) NOT NULL));
SELECT MAX(vt0.c1) FROM vt0 WHERE (((vt0.c2) NOT NULL)) LIMIT 0 INTERSECT SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((vt0.c0) BETWEEN (NULL) AND (vt0.lid)) COLLATE RTRIM COLLATE BINARY) LIMIT 0;
SELECT * FROM vt0 WHERE (-1522079502) ORDER BY (((vt0.c1 IN (vt0.c1)))AND(((vt0.c1)||(vt0.lid))));
SELECT * FROM vt0 WHERE (-1522079502) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN vt0.c0 END) AND (((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c2)))) DESC, (- ((~ (vt0.c2)))) ASC  NULLS FIRST, vt0.c0 ASC;
SELECT * FROM vt0 WHERE (-1522079502) ORDER BY (((vt0.c1 IN (vt0.c1)))AND(((vt0.c1)||(vt0.lid))));
SELECT * FROM vt0 WHERE (-1522079502) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.lid THEN vt0.c0 END) AND (((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c2)))) DESC, (- ((~ (vt0.c2)))) ASC  NULLS FIRST, vt0.c0 ASC;
SELECT MAX(t1.c1) FROM t1 WHERE (((TRIM(DISTINCT t1.c0)) NOTNULL)) ORDER BY t1.c1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((TRIM(DISTINCT t1.c0)) NOTNULL))AND((((t1.c0) ISNULL) IN (((((((t1.c0)OR(t1.c1)))AND(t1.c0)))AND(t1.c0)), '1074298858'))))) ORDER BY t1.c1;
