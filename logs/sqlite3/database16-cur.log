-- Time: 2021/05/19 01:09:35
-- Database: database16
-- Database version: 3.34.0
-- seed value: 1621357771660
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 TEXT , +c4 BLOB ); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2, c3) VALUES ('-306832129', 'h', NULL, NULL); -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c2) VALUES ('900617651', 0.041433903950121476, 151159958), (x'a68a', x'1c1362', 1.51159958E8); -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1, c4, c0, c2) VALUES ('0.041433903950121476', NULL, 0x7b9ca061, NULL, '-1893339925'); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c4, c3, c1, c0) VALUES (x'', '-306832129', 0.006682118759644307, -228762077, 0.041433903950121476); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c2, c4) VALUES (0.23562389377176596, 0xffffffffdd55200b), (x'', '2039131043'), (0.09090607930004835, x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
REINDEX RTRIM; -- 0ms;
INSERT OR FAIL INTO rt0(c3, c2, c1, c4, c0) VALUES (x'aba8', '0.09090607930004835', x'b41c', NULL, 'A/Sy鸒<!5Z'), (-1460951953, '151159958', x'c0cb', x'', '-2087489413'); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (9.00617651E8, x'', 0.025633417922032997, x'529bef', '0.0'), (NULL, -2.087489413E9, NULL, 1341759012, NULL); -- 1ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0, c3) VALUES (NULL, 0.722967209956647, 0.6016400182583505), (NULL, x'84', 0.722967209956647); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7068082949634995)>(CASE '755777378'  WHEN '0' THEN NULL WHEN NULL THEN '2073862241' END)); -- 0ms;
INSERT OR FAIL INTO rt0(c4) VALUES (x''), (x''); -- 1ms;
REINDEX  rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c4) VALUES (x'92e7', '0.041433903950121476', NULL), ('*yI​', -2.087489413E9, NULL), (0.622290299903252, -1614554992, 'k0~g<O'), ('-171394040', x'ef9fc5f0', '2073862241'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c4) VALUES ('-1444392489', '9'), (NULL, '&G'); -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c2, c4, c0) VALUES (x'', '_', NULL, 0xffffffffb63fc6e8); -- 1ms;
INSERT OR ABORT INTO rt0(c2) VALUES (x'dd9fb6'), (x'4a'); -- 1ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c1, c0) VALUES (x'3b01', NULL, 1089252062, '-1094403164'), ('1341759012', NULL, x'16', x'95'); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1, c2, c3) VALUES ('1341759012', x'', x'', 0Xb8f5ddb), (0Xffffffffbec4bba4, 0x65de0ac2, -3.06832129E8, NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c4, c2, c0) VALUES ('*', 0xffffffffbec4bba4, x'35c6'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3, c1, c2) VALUES (NULL, x'94c3f79c', 'l/Np8*Y', NULL), (x'b1', -931054513, 'sU2bD', 7.55777378E8); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4) VALUES (NULL, '/T?i6q#vO'), ('4%', '0.025633417922032997'), (NULL, NULL), (NULL, x'89'); -- 1ms;
ANALYZE; -- 1ms;
PRAGMA temp.mmap_size; -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (0.4650768208002728); -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c3, c4, c2) VALUES (NULL, '1953476835', 0x1b2fb740, NULL, 0.006682118759644307), (x'', '1963081765', '9A', '', 0.8090256724827729); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c2) VALUES (NULL, x'b5', 0.622290299903252), (NULL, x'', 0.40705773166459003), (0Xfffffffff5c8bc08, x'fd', NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS REAL); -- 0ms;
ANALYZE main; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c4, c0, c1, c2, c3) VALUES ('4IⲅnLd', NULL, NULL, x'af90e9', x''), (0.35538331364521136, x'', 0.496157638007812, NULL, '0.6016400182583505'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
CREATE TEMP VIEW v0(c0, c1) AS SELECT ALL (- ((+ (rt0.c3)))), SUM(rt0.c3) FROM rt0; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1) VALUES (NULL, x'd7'), (-505397036, NULL), ('_', NULL); -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c0, c4, c2) VALUES (x'', 0.24124863449502254, x'53ad17', 0x1f3ccfbc); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
VACUUM; -- 2ms;
REINDEX; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS TEXT) AS NUMERIC); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4, c3, c1, c2) VALUES (x'1e', '3
x#', 'k0~gt<O', '5B'); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c3, c1) VALUES (1.953476835E9, 0X31d43c5f, 0.5229458308839939); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1) VALUES (x'b540ab', 0.8703885294512965); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c2, c3, c4, c1) VALUES (x'62', NULL, x'2e', '튘9qG凗', '1%b^ e'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c4, c0) VALUES (1.51159958E8, '-581623797', 0.14096668873042084); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3) VALUES (NULL), ('719967020'), (''); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(NULL AS BLOB) AS INTEGER));
SELECT * FROM rt0 WHERE (CAST(CAST(NULL AS BLOB) AS INTEGER)) ORDER BY (((rt0.c3 IN (rt0.c2))) NOT BETWEEN (rt0.c0) AND (((rt0.c3)LIKE(rt0.c1)))) ASC, (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c1)<>(rt0.c3))) BETWEEN ((- (rt0.c2))) AND (json_remove(rt0.c0, rt0.c3)))) ORDER BY (((rt0.c3 IN (rt0.c2))) NOT BETWEEN (rt0.c0) AND (((rt0.c3)LIKE(rt0.c1)))) ASC, (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(NULL AS BLOB) AS INTEGER));
SELECT * FROM rt0 WHERE (CAST(CAST(NULL AS BLOB) AS INTEGER)) ORDER BY (((rt0.c3 IN (rt0.c2))) NOT BETWEEN (rt0.c0) AND (((rt0.c3)LIKE(rt0.c1)))) ASC, (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c1)<>(rt0.c3))) BETWEEN ((- (rt0.c2))) AND (json_remove(rt0.c0, rt0.c3)))) ORDER BY (((rt0.c3 IN (rt0.c2))) NOT BETWEEN (rt0.c0) AND (((rt0.c3)LIKE(rt0.c1)))) ASC, (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST LIMIT 0x0;
SELECT MIN(rt0.c1) FROM rt0 WHERE (LIKELY(DISTINCT rt0.c1) COLLATE BINARY) ORDER BY ((((rt0.c1)+(rt0.c1))) BETWEEN (CASE x'1a'  WHEN rt0.c1 THEN x'f3' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 END) AND (json_extract(rt0.c1, rt0.c0, rt0.c0, rt0.c3)))  NULLS LAST, ((((rt0.c0) ISNULL)) BETWEEN (rt0.c4) AND ((((rt0.c0, rt0.c3))<=((rt0.c3, rt0.c0)))));
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((LIKELY(DISTINCT rt0.c1) COLLATE BINARY)AND(rt0.c2))) ORDER BY NULL ASC  NULLS FIRST, rt0.c2, CASE ((rt0.c4) NOT BETWEEN (-664717828) AND (rt0.c0))  WHEN ((rt0.c3)<=(rt0.c4)) THEN ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c2)) ELSE ((rt0.c0) IS TRUE) END DESC  NULLS LAST;
SELECT MAX(rt0.c4) FROM rt0 WHERE ((+ (rt0.c1))) ORDER BY ((((rt0.c3) ISNULL))GLOB('-1460951953'))  NULLS FIRST, (((((rt0.c1, rt0.c0, rt0.c3))<((rt0.c2, rt0.c3, rt0.c1)))) NOT BETWEEN (NULL) AND ((('0') IS TRUE))) ASC  NULLS LAST, rt0.c3;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE ((+ (rt0.c1))) ORDER BY ((((rt0.c3) ISNULL))GLOB('-1460951953'))  NULLS FIRST, (((((rt0.c1, rt0.c0, rt0.c3))<((rt0.c2, rt0.c3, rt0.c1)))) NOT BETWEEN (NULL) AND ((('0') IS TRUE))) ASC  NULLS LAST, rt0.c3 INTERSECT SELECT ALL MAX(rt0.c4) FROM rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 END, ((rt0.c4)/(rt0.c2)), rt0.c4 COLLATE BINARY, ((((((((((((rt0.c0)AND('-76563004')))OR(x'')))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c1)))AND(x'a7'))))>=(('2106060077', rt0.c0 COLLATE RTRIM, ABS(rt0.c1), ((rt0.c0)*(0X43de2060)))))) ORDER BY ((((rt0.c3) ISNULL))GLOB('-1460951953'))  NULLS FIRST, (((((rt0.c1, rt0.c0, rt0.c3))<((rt0.c2, rt0.c3, rt0.c1)))) NOT BETWEEN (NULL) AND ((('0') IS TRUE))) ASC  NULLS LAST, rt0.c3;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c2)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)), CAST('-1208261584' AS TEXT), ((x'd42ca4c0')OR(rt0.c3)))) AND ((CASE -1444392489  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END, (((rt0.c1))>((rt0.c0))), ((rt0.c0)IS NOT(rt0.c0)))))) ORDER BY (+ ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c4, rt0.c2)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)), CAST('-1208261584' AS TEXT), ((x'd42ca4c0')OR(rt0.c3)))) AND ((CASE 0xffffffffa9e851d7  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END, (((rt0.c1))>((rt0.c0))), ((rt0.c0)IS NOT(rt0.c0))))))AND(rt0.c4))) ORDER BY (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), NULL))!=((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c3)*(rt0.c0))))) DESC, (rt0.c0 COLLATE RTRIM IN (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST, (((rt0.c0 IN (rt0.c2))) NOT BETWEEN (((('U', rt0.c3)) BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c4, rt0.c1)))) AND (NULL)) ASC  NULLS LAST INTERSECT SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (COALESCE(rt0.c3, rt0.c3, rt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c1), ((rt0.c0)OR(rt0.c1))))) ORDER BY (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), NULL))<>((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c3)*(rt0.c0))))) DESC, (rt0.c0 COLLATE RTRIM IN (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST, (((rt0.c0 IN (rt0.c2))) NOT BETWEEN (((('U', rt0.c3)) BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c4, rt0.c1)))) AND (NULL)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(x'' AS NUMERIC)) BETWEEN (rt0.c0) AND (((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(x'' AS NUMERIC)) BETWEEN (rt0.c0) AND (((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)))))AND(((((rt0.c0)%(rt0.c1)))&((~ (rt0.c3))))))) ORDER BY (((rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, LIKELIHOOD(DISTINCT rt0.c0, rt0.c0))) AND (((rt0.c0 IN ()), (((rt0.c3))>=((rt0.c0))))))  NULLS LAST INTERSECT SELECT COUNT(*) FROM rt0 WHERE ((((((1.93945051E8))>=((rt0.c2))))<<(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END))) ORDER BY (((rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, LIKELIHOOD(DISTINCT rt0.c0, rt0.c0))) AND (((rt0.c0 IN ()), (((rt0.c3))>=((rt0.c0))))))  NULLS LAST;
SELECT MIN(rt0.c1) FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c2))<((rt0.c2, rt0.c3, rt0.c2))))&(0X3bddb3d3))) ORDER BY ((((rt0.c0 COLLATE RTRIM)AND(CASE rt0.c4  WHEN '1106871160' THEN rt0.c4 ELSE rt0.c2 END)))OR(rt0.c2)) ASC, CASE WHEN (((rt0.c3, rt0.c1))!=((NULL, rt0.c4))) THEN (((rt0.c3, rt0.c0, rt0.c1, '')) BETWEEN ((rt0.c2, NULL, rt0.c1, rt0.c4)) AND ((rt0.c3, rt0.c1, rt0.c3, '-858505247'))) END DESC  NULLS LAST;
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c2))<((rt0.c2, rt0.c3, rt0.c2))))&(0X3bddb3d3))) ORDER BY NULL, (((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))) NOTNULL)  NULLS FIRST INTERSECT SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (((((rt0.c4)IS(rt0.c4)))OR('eZ	Nf'))) ORDER BY NULL, (((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))) NOTNULL)  NULLS FIRST;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE ((((rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, (((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN -370957686 ELSE '456111936' END, CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY (((rt0.c2)IS(rt0.c4)) IN ()), (~ (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))), rt0.c0;
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE ((((((rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, (((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN -370957686 ELSE '456111936' END, CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END))))AND(((((rt0.c3)<(rt0.c2)))||(rt0.c3 COLLATE BINARY))))) ORDER BY (((rt0.c2)IS(rt0.c4)) IN ()), (~ (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))), rt0.c0 LIMIT 1;
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c2)==(rt0.c4)) END DESC, ((((rt0.c3)<(rt0.c0)))|(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 END)) ASC;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c2)==(rt0.c4)) END DESC, ((((rt0.c3)<(rt0.c0)))|(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 END)) ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c2)==(rt0.c4)) END DESC, ((((rt0.c3)<(rt0.c0)))|(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 END)) ASC;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c2)==(rt0.c4)) END DESC, ((((rt0.c3)<(rt0.c0)))|(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 END)) ASC;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c4)<<(rt0.c1)))AND(rt0.c0)))OR('EӺg9&EW紻' COLLATE NOCASE)))AND((rt0.c4 IN (rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c4)<<(rt0.c1)))AND(rt0.c0)))OR('EӺg9&EW紻' COLLATE NOCASE)))AND((rt0.c4 IN (rt0.c1)))))AND(CAST(rt0.c1 AS REAL) COLLATE RTRIM))) ORDER BY COALESCE(DISTINCT IFNULL(rt0.c1, rt0.c3), (rt0.c3 IN ())) DESC  NULLS FIRST, CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN rt0.c3 ELSE rt0.c4 END  NULLS LAST, (((((rt0.c1) NOTNULL), (x'' IN (rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) AS INTEGER)) ORDER BY COALESCE(DISTINCT IFNULL(rt0.c1, rt0.c3), (rt0.c3 IN ())) DESC  NULLS FIRST, CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN rt0.c3 ELSE rt0.c4 END  NULLS LAST, (((((rt0.c1) NOTNULL), (x'' IN (rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c4)<<(rt0.c1)))AND(rt0.c0)))OR('EӺg9&EW紻' COLLATE NOCASE)))AND((rt0.c4 IN (rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c4)<<(rt0.c1)))AND(rt0.c0)))OR('EӺg9&EW紻' COLLATE NOCASE)))AND((rt0.c4 IN (rt0.c1)))))AND(CAST(rt0.c1 AS REAL) COLLATE RTRIM))) ORDER BY COALESCE(DISTINCT IFNULL(rt0.c1, rt0.c3), (rt0.c3 IN ())) DESC  NULLS FIRST, CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN rt0.c3 ELSE rt0.c4 END  NULLS LAST, (((((rt0.c1) NOTNULL), (x'' IN (rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) AS INTEGER)) ORDER BY COALESCE(DISTINCT IFNULL(rt0.c1, rt0.c3), (rt0.c3 IN ())) DESC  NULLS FIRST, CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN rt0.c3 ELSE rt0.c4 END  NULLS LAST, (((((rt0.c1) NOTNULL), (x'' IN (rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (CASE ((((((((rt0.c0)OR(rt0.c1)))AND(0.9905463079117223)))AND(rt0.c4)))AND(rt0.c4))  WHEN (+ (rt0.c1)) THEN LOWER(rt0.c3) ELSE ((rt0.c3)IS(rt0.c0)) END) ORDER BY rt0.c0  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE ((((((((rt0.c0)OR(rt0.c1)))AND(0.9905463079117223)))AND(rt0.c4)))AND(rt0.c4))  WHEN (+ (rt0.c1)) THEN LOWER(rt0.c3) ELSE ((rt0.c3)IS(rt0.c0)) END) ORDER BY rt0.c0  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c4)))GLOB(((rt0.c1) NOTNULL)))) ORDER BY rt0.c0  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (CASE ((((((((rt0.c0)OR(rt0.c1)))AND(0.9905463079117223)))AND(rt0.c4)))AND(rt0.c4))  WHEN (+ (rt0.c1)) THEN LOWER(rt0.c3) ELSE ((rt0.c3)IS(rt0.c0)) END) ORDER BY rt0.c0  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE ((((((((rt0.c0)OR(rt0.c1)))AND(0.9905463079117223)))AND(rt0.c4)))AND(rt0.c4))  WHEN (+ (rt0.c1)) THEN LOWER(rt0.c3) ELSE ((rt0.c3)IS(rt0.c0)) END) ORDER BY rt0.c0  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c4)))GLOB(((rt0.c1) NOTNULL)))) ORDER BY rt0.c0  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (LOWER((('') NOTNULL))) ORDER BY (((rt0.c4)) BETWEEN ((((rt0.c3)AND(rt0.c3)))) AND ((((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((LOWER((('') NOTNULL)))AND(CAST((rt0.c4 IN (rt0.c3)) AS BLOB)))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((((rt0.c2)>(rt0.c2)))))  NULLS LAST, CAST(((rt0.c3) NOTNULL) AS REAL)  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3 COLLATE NOCASE) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((((rt0.c2)>(rt0.c2)))))  NULLS LAST, CAST(((rt0.c3) NOTNULL) AS REAL)  NULLS FIRST LIMIT 3;
SELECT ALL * FROM rt0 WHERE (LOWER((('') NOTNULL))) ORDER BY (((rt0.c4)) BETWEEN ((((rt0.c3)AND(rt0.c3)))) AND ((((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((LOWER((('') NOTNULL)))AND(CAST((rt0.c4 IN (rt0.c3)) AS BLOB)))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((((rt0.c2)>(rt0.c2)))))  NULLS LAST, CAST(((rt0.c3) NOTNULL) AS REAL)  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3 COLLATE NOCASE) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((((rt0.c2)>(rt0.c2)))))  NULLS LAST, CAST(((rt0.c3) NOTNULL) AS REAL)  NULLS FIRST LIMIT 3;
SELECT * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c3)))OR(((NULL) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4 IN (rt0.c3)))OR(((NULL) BETWEEN (rt0.c1) AND (rt0.c2)))))AND((((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND (('_', rt0.c3, rt0.c0)))) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))AND(rt0.c4))) AND (NULLIF(rt0.c1, rt0.c1)))))) ORDER BY (rt0.c1 IN (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)), (rt0.c2 IN ()))) ASC  NULLS LAST, ((-5.05397036E8)IS(rt0.c2)) COLLATE RTRIM ASC LIMIT 0;
SELECT * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c3)))OR(((NULL) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4 IN (rt0.c3)))OR(((NULL) BETWEEN (rt0.c1) AND (rt0.c2)))))AND((((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND (('_', rt0.c3, rt0.c0)))) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))AND(rt0.c4))) AND (NULLIF(rt0.c1, rt0.c1)))))) ORDER BY (rt0.c1 IN (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)), (rt0.c2 IN ()))) ASC  NULLS LAST, ((-5.05397036E8)IS(rt0.c2)) COLLATE RTRIM ASC LIMIT 0;
SELECT * FROM rt0 WHERE ((NOT (x''))) ORDER BY CASE WHEN ((rt0.c2)/(x'a7')) THEN HEX(rt0.c3) ELSE ((((((rt0.c4)AND(0.8000808491476142)))OR(rt0.c3)))AND(rt0.c4)) END, (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ()) DESC, NULL DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((NOT (x''))) ORDER BY ((((rt0.c2)/(rt0.c3)))&(((rt0.c4)<=('O8邴o~')))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (NULLIF((x'' IN ()), ((rt0.c3) NOT NULL))) ORDER BY ((((rt0.c2)/(rt0.c3)))&(((rt0.c4)<=('O8邴o~')))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((NOT (x''))) ORDER BY CASE WHEN ((rt0.c2)/(x'a7')) THEN HEX(rt0.c3) ELSE ((((((rt0.c4)AND(0.8000808491476142)))OR(rt0.c3)))AND(rt0.c4)) END, (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ()) DESC, NULL DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c4) NOTNULL))IS NOT(CASE NULL  WHEN rt0.c4 THEN NULL ELSE rt0.c0 END)));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4) NOTNULL))IS NOT(CASE NULL  WHEN rt0.c4 THEN NULL ELSE rt0.c0 END)))AND(x'c0')));
SELECT * FROM rt0 WHERE (((((rt0.c4) NOTNULL))IS NOT(CASE NULL  WHEN rt0.c4 THEN NULL ELSE rt0.c0 END)));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4) NOTNULL))IS NOT(CASE NULL  WHEN rt0.c4 THEN NULL ELSE rt0.c0 END)))AND(x'c0')));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) AS REAL));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) AS REAL)) LIMIT 0X4 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c4) ISNULL), MIN(rt0.c1, rt0.c1, rt0.c1, 0.23562389377176596))) AND ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (0.9584134159452729)), ((rt0.c1)>=(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 END)))) LIMIT 4;
SELECT MAX(rt0.c1) FROM rt0 WHERE ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) IN ()));
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) IN ()))AND(rt0.c1))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) NOT NULL) DESC, ((rt0.c3)>=(rt0.c0)) COLLATE NOCASE  NULLS LAST LIMIT 2 INTERSECT SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (x'') ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) NOT NULL) DESC, ((rt0.c3)>=(rt0.c0)) COLLATE NOCASE  NULLS LAST LIMIT 2;
SELECT * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1)))%(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4 IN (rt0.c1)))%(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))AND((((TRIM(DISTINCT rt0.c3), (rt0.c1 IN (rt0.c2)), CASE 'f'  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END))!=((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c4)), SQLITE_SOURCE_ID(), '*' COLLATE NOCASE))))));
SELECT * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1)))%(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4 IN (rt0.c1)))%(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))AND((((TRIM(DISTINCT rt0.c3), (rt0.c1 IN (rt0.c2)), CASE 'f'  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END))!=((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c4)), SQLITE_SOURCE_ID(), '*' COLLATE NOCASE))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 END AS REAL)) ORDER BY ((((rt0.c2)<=(rt0.c1)))OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CHANGES()));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 END AS REAL)) ORDER BY ((((rt0.c2)<=(rt0.c1)))OR(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CHANGES()));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE))==((rt0.c0 COLLATE BINARY)))) ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE))==((rt0.c0 COLLATE BINARY)))) ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL) ASC LIMIT 0X3;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE))==((rt0.c0 COLLATE BINARY)))) ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE))==((rt0.c0 COLLATE BINARY)))) ORDER BY ((rt0.c1 COLLATE RTRIM) ISNULL) ASC LIMIT 0X3;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE ((~ ((((rt0.c4, rt0.c3, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c3, rt0.c1, NULL, rt0.c1)))))) ORDER BY (NOT (0.7178121898905323)) ASC, (((rt0.c0)) BETWEEN (((rt0.c0 IN (rt0.c4)))) AND ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))))) DESC;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE ((~ ((((rt0.c4, rt0.c3, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c3, rt0.c1, NULL, rt0.c1)))))) ORDER BY (NOT (0.7178121898905323)) ASC, (((rt0.c0)) BETWEEN (((rt0.c0 IN (rt0.c4)))) AND ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))))) DESC LIMIT 1 INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (rt0.c0) ORDER BY (NOT (0.7178121898905323)) ASC, (((rt0.c0)) BETWEEN (((rt0.c0 IN (rt0.c4)))) AND ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))))) DESC LIMIT 0x1;
SELECT MAX(rt0.c1) FROM rt0 WHERE (((((((((((((rt0.c4)AND(rt0.c1)))AND('151159958')))OR(0.5623287721733697)))OR(rt0.c0)))OR(((rt0.c3) IS FALSE))))OR((((rt0.c1, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c1))))));
SELECT MAX(rt0.c1) FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c1)))AND('151159958')))OR(0.5623287721733697)))OR(rt0.c0)))OR(((rt0.c3) IS FALSE))))OR((((rt0.c1, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c1))))))AND((NOT (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))))))) ORDER BY ((((NULL)|(rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))) AND (CAST(rt0.c3 AS REAL))) DESC  NULLS LAST, (((rt0.c2, HEX(rt0.c0)))!=((((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)), ((rt0.c3)IS NOT(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(LIKELY(DISTINCT rt0.c2) AS TEXT)) ORDER BY (((((((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))OR(CAST(rt0.c1 AS REAL))))OR((rt0.c1 IN ()))))OR((~ (rt0.c2)))) DESC  NULLS FIRST, (('U')*(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(LIKELY(DISTINCT rt0.c2) AS TEXT)) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END, (NOT (rt0.c3))))==(((+ (rt0.c3)), ((rt0.c4) ISNULL)))) DESC LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END  WHEN ((rt0.c2)*(rt0.c0)) THEN (('A/Sy鸒<!5Z') NOT NULL) ELSE CAST(rt0.c0 AS REAL) END) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END, (NOT (rt0.c3))))=(((+ (rt0.c3)), ((rt0.c4) ISNULL)))) DESC LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT NULL, rt0.c4 COLLATE BINARY));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT NULL, rt0.c4 COLLATE BINARY)) LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c3)LIKE(rt0.c3))))) LIMIT 0;
SELECT MIN(rt0.c2) FROM rt0 WHERE (rt0.c4) ORDER BY ((CAST(rt0.c4 AS NUMERIC))OR((rt0.c0 IN (rt0.c3, rt0.c2))));
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (((rt0.c4)AND((- (CAST(rt0.c1 AS REAL)))))) ORDER BY ((('1341759012')) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND (((('A}') IS TRUE)))) DESC, ((rt0.c4)>(((rt0.c2)<(rt0.c1)))) ASC, (- ((((rt0.c4, rt0.c2))==((rt0.c0, rt0.c2))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c3)<<(rt0.c2)), (rt0.c2 IN ()))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c1) AND (0x77d0898f)), 'R'))<=((rt0.c3 COLLATE NOCASE, ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))), (NULL IN ());
SELECT ALL * FROM rt0 WHERE (((TRIM(DISTINCT ((rt0.c3)<<(rt0.c2)), (rt0.c2 IN ())))AND(TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)))))) ORDER BY (((x'0ca3dd' IN ()))>>((((rt0.c3, rt0.c3)) NOT BETWEEN ((x'', rt0.c3)) AND ((rt0.c1, '-1094403164')))))  NULLS LAST INTERSECT SELECT ALL * FROM rt0 WHERE ('rd(1' COLLATE BINARY) ORDER BY (((x'0ca3dd' IN ()))>>((((rt0.c3, rt0.c3)) NOT BETWEEN ((x'', rt0.c3)) AND ((rt0.c1, '-1094403164')))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c3)<<(rt0.c2)), (rt0.c2 IN ()))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c1) AND (0x77d0898f)), 'R'))<=((rt0.c3 COLLATE NOCASE, ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))), (NULL IN ());
SELECT ALL * FROM rt0 WHERE (ABS(('-1893339925' IN (rt0.c1)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((+ (rt0.c4)))))  NULLS LAST, rt0.c4 ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (ABS(('-1893339925' IN (rt0.c1)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((+ (rt0.c4)))))  NULLS LAST, rt0.c4 ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (ABS(('-1893339925' IN (rt0.c1)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((+ (rt0.c4)))))  NULLS LAST, rt0.c4 ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (ABS(('-1893339925' IN (rt0.c1)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((+ (rt0.c4)))))  NULLS LAST, rt0.c4 ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((((((((rt0.c0)>(rt0.c2)))AND(UNLIKELY(rt0.c2))))AND(rt0.c3 COLLATE NOCASE)))OR(rt0.c1 COLLATE BINARY)))OR(((534814226) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(rt0.c1)));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((rt0.c0)>(rt0.c2)))AND(UNLIKELY(rt0.c2))))AND(rt0.c3 COLLATE NOCASE)))OR(rt0.c1 COLLATE BINARY)))OR(((0X1fe09e12) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(rt0.c1)))AND(x'ec'))) ORDER BY (NOT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST LIMIT 0X1;
SELECT * FROM rt0 WHERE (((((((((((((rt0.c0)>(rt0.c2)))AND(UNLIKELY(rt0.c2))))AND(rt0.c3 COLLATE NOCASE)))OR(rt0.c1 COLLATE BINARY)))OR(((534814226) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(rt0.c1)));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((rt0.c0)>(rt0.c2)))AND(UNLIKELY(rt0.c2))))AND(rt0.c3 COLLATE NOCASE)))OR(rt0.c1 COLLATE BINARY)))OR(((0X1fe09e12) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(rt0.c1)))AND(x'ec'))) ORDER BY (NOT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)<=((rt0.c4 IN ()))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)=((rt0.c4 IN ()))))AND(((((rt0.c2)%(rt0.c3))) IS TRUE)))) LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE (((((((((((0.36062870293789195)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND('1341759012'))) LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)<=((rt0.c4 IN ()))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)=((rt0.c4 IN ()))))AND(((((rt0.c2)%(rt0.c3))) IS TRUE)))) LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE (((((((((((0.36062870293789195)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND('1341759012'))) LIMIT 0x1;
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB(rt0.c3 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)GLOB(rt0.c3 COLLATE NOCASE)))AND(CASE WHEN (- (rt0.c4)) THEN rt0.c2 COLLATE BINARY END))) ORDER BY ((((((((CAST(0.24124863449502254 AS REAL))AND((- (rt0.c2)))))AND(((((((rt0.c1)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c4)))))AND((((rt0.c4, rt0.c1))!=((rt0.c3, rt0.c0))))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))) ASC, ((rt0.c4 COLLATE RTRIM) IS TRUE)  NULLS LAST, rt0.c4, CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)) WHEN rt0.c4 THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END WHEN ((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)) THEN rt0.c3 COLLATE NOCASE WHEN ((('1663949070'))>((rt0.c3))) THEN ((rt0.c3)IS(rt0.c0)) ELSE NULL END LIMIT 0;
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB(rt0.c3 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)GLOB(rt0.c3 COLLATE NOCASE)))AND(CASE WHEN (- (rt0.c4)) THEN rt0.c2 COLLATE BINARY END))) ORDER BY ((((((((CAST(0.24124863449502254 AS REAL))AND((- (rt0.c2)))))AND(((((((rt0.c1)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c4)))))AND((((rt0.c4, rt0.c1))!=((rt0.c3, rt0.c0))))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))) ASC, ((rt0.c4 COLLATE RTRIM) IS TRUE)  NULLS LAST, rt0.c4, CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)) WHEN rt0.c4 THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END WHEN ((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)) THEN rt0.c3 COLLATE NOCASE WHEN ((('1663949070'))>((rt0.c3))) THEN ((rt0.c3)IS(rt0.c0)) ELSE NULL END LIMIT 0;
SELECT ALL * FROM rt0 WHERE (0.722967209956647) ORDER BY ((CAST(rt0.c1 AS INTEGER)) IS TRUE) ASC, rt0.c0;
SELECT DISTINCT * FROM rt0 WHERE (0.722967209956647) ORDER BY ((CAST(rt0.c1 AS INTEGER)) IS TRUE) ASC, rt0.c0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0)IS(rt0.c0)))AND((~ (rt0.c4)))))OR((rt0.c4 IN (rt0.c2)))))AND(CAST(rt0.c2 AS INTEGER))))OR((((rt0.c0))<=((rt0.c3)))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) IS TRUE) ASC, rt0.c0;
SELECT ALL * FROM rt0 WHERE (0.722967209956647) ORDER BY ((CAST(rt0.c1 AS INTEGER)) IS TRUE) ASC, rt0.c0;
SELECT DISTINCT * FROM rt0 WHERE (0.722967209956647) ORDER BY ((CAST(rt0.c1 AS INTEGER)) IS TRUE) ASC, rt0.c0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0)IS(rt0.c0)))AND((~ (rt0.c4)))))OR((rt0.c4 IN (rt0.c2)))))AND(CAST(rt0.c2 AS INTEGER))))OR((((rt0.c0))<=((rt0.c3)))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) IS TRUE) ASC, rt0.c0;
SELECT MAX(rt0.c3) FROM rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (((rt0.c2)=(rt0.c2))) AND ((NULL IN ('-199072782', rt0.c1, rt0.c2)))));
SELECT MAX(rt0.c3) FROM rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (((rt0.c2)==(rt0.c2))) AND ((NULL IN ('-199072782', rt0.c1, rt0.c2))))) ORDER BY CASE WHEN (('-1834650494') BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c4)IS NOT(rt0.c3)) END ASC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM rt0 WHERE (((NULL)OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)))));
SELECT * FROM rt0 WHERE (((((NULL)OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((rt0.c3)+(UNLIKELY(rt0.c2)))))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((NULL)OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)))));
SELECT * FROM rt0 WHERE (((((NULL)OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((rt0.c3)+(UNLIKELY(rt0.c2)))))) LIMIT 0X0;
SELECT * FROM rt0 WHERE ('Ak_7उ&') ORDER BY TRIM(rt0.c2), LIKELY(DISTINCT ((NULL)<=(rt0.c3)));
SELECT DISTINCT * FROM rt0 WHERE ('Ak_7उ&') ORDER BY NULL DESC  NULLS LAST, CASE ((rt0.c3)<(rt0.c4))  WHEN rt0.c1 COLLATE NOCASE THEN rt0.c1 WHEN ((rt0.c0)=(rt0.c2)) THEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN 'M๓?YYP,6' THEN rt0.c0 ELSE rt0.c2 END THEN rt0.c3 COLLATE BINARY WHEN (rt0.c3 IN (rt0.c3)) THEN ((rt0.c2) IS TRUE) END  NULLS LAST LIMIT 2;
SELECT * FROM rt0 WHERE ('Ak_7उ&') ORDER BY TRIM(rt0.c2), LIKELY(DISTINCT ((NULL)<=(rt0.c3)));
SELECT DISTINCT * FROM rt0 WHERE ('Ak_7उ&') ORDER BY NULL DESC  NULLS LAST, CASE ((rt0.c3)<(rt0.c4))  WHEN rt0.c1 COLLATE NOCASE THEN rt0.c1 WHEN ((rt0.c0)=(rt0.c2)) THEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN 'M๓?YYP,6' THEN rt0.c0 ELSE rt0.c2 END THEN rt0.c3 COLLATE BINARY WHEN (rt0.c3 IN (rt0.c3)) THEN ((rt0.c2) IS TRUE) END  NULLS LAST LIMIT 2;
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY (- (load_extension(rt0.c0))), ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c4))) BETWEEN (((((rt0.c2)OR(rt0.c1)))OR(0.47240744666235823))) AND (rt0.c2)) ASC  NULLS LAST, (+ ((+ (rt0.c2)))), (((rt0.c3)>=(rt0.c0)) IN (((rt0.c2) ISNULL), CAST(rt0.c1 AS REAL))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c1) IS TRUE)) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ASC LIMIT 0X3 INTERSECT SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)>=((+ (rt0.c2))))) ORDER BY ((((rt0.c1) IS TRUE)) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ASC LIMIT 3;
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY (- (load_extension(rt0.c0))), ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c4))) BETWEEN (((((rt0.c2)OR(rt0.c1)))OR(0.47240744666235823))) AND (rt0.c2)) ASC  NULLS LAST, (+ ((+ (rt0.c2)))), (((rt0.c3)>=(rt0.c0)) IN (((rt0.c2) ISNULL), CAST(rt0.c1 AS REAL))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c2)IS(rt0.c1))) IS FALSE)) ORDER BY (- (json_patch(rt0.c3, rt0.c2)))  NULLS FIRST, (((((rt0.c1) NOTNULL), (rt0.c2 IN (rt0.c2)), ((rt0.c3) NOT NULL), ((((((((((50479720)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0))))!=(('-1208261584', ((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)), rt0.c0, (((rt0.c1, rt0.c2, rt0.c4))>=((rt0.c0, rt0.c1, rt0.c2)))))) DESC  NULLS FIRST, (((((((((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(0.3363812129553627)))AND(rt0.c3 COLLATE NOCASE)))AND(0.7469160494421078)))AND(((rt0.c4)IS NOT(rt0.c0)))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c1))) IS FALSE))AND((+ (((NULL)<=(rt0.c4))))))) ORDER BY (- (json_patch(rt0.c3, rt0.c2)))  NULLS FIRST, (((((rt0.c1) NOTNULL), (rt0.c2 IN (rt0.c2)), ((rt0.c3) NOT NULL), ((((((((((50479720)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0))))!=(('-1208261584', ((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)), rt0.c0, (((rt0.c1, rt0.c2, rt0.c4))>=((rt0.c0, rt0.c1, rt0.c2)))))) DESC  NULLS FIRST, (((((((((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(0.3363812129553627)))AND(rt0.c3 COLLATE NOCASE)))AND(0.7469160494421078)))AND(((rt0.c4)IS NOT(rt0.c0)))) ASC LIMIT 0X0;
SELECT * FROM rt0 WHERE (((((rt0.c2)IS(rt0.c1))) IS FALSE)) ORDER BY (- (json_patch(rt0.c3, rt0.c2)))  NULLS FIRST, (((((rt0.c1) NOTNULL), (rt0.c2 IN (rt0.c2)), ((rt0.c3) NOT NULL), ((((((((((50479720)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0))))!=(('-1208261584', ((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)), rt0.c0, (((rt0.c1, rt0.c2, rt0.c4))>=((rt0.c0, rt0.c1, rt0.c2)))))) DESC  NULLS FIRST, (((((((((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(0.3363812129553627)))AND(rt0.c3 COLLATE NOCASE)))AND(0.7469160494421078)))AND(((rt0.c4)IS NOT(rt0.c0)))) ASC;
SELECT * FROM rt0 WHERE (((((((((rt0.c4) NOTNULL))OR(CAST(rt0.c1 AS REAL))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))))OR(rt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (((((((((rt0.c4) NOTNULL))OR(CAST(rt0.c1 AS REAL))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY COALESCE(DISTINCT 4.56111936E8, (rt0.c0 IN (rt0.c4))), (((rt0.c2)) NOT BETWEEN (((NOT (rt0.c2)))) AND (((((rt0.c2)) NOT BETWEEN ((x'9d9b')) AND ((rt0.c1)))))) DESC INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY COALESCE(DISTINCT 4.56111936E8, (rt0.c0 IN (rt0.c4))), (((rt0.c2)) NOT BETWEEN (((NOT (rt0.c2)))) AND (((((rt0.c2)) NOT BETWEEN ((x'9d9b')) AND ((rt0.c1)))))) DESC;
SELECT * FROM rt0 WHERE (((((((((rt0.c4) NOTNULL))OR(CAST(rt0.c1 AS REAL))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))))OR(rt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (((((((((rt0.c4) NOTNULL))OR(CAST(rt0.c1 AS REAL))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY COALESCE(DISTINCT 4.56111936E8, (rt0.c0 IN (rt0.c4))), (((rt0.c2)) NOT BETWEEN (((NOT (rt0.c2)))) AND (((((rt0.c2)) NOT BETWEEN ((x'9d9b')) AND ((rt0.c1)))))) DESC INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY COALESCE(DISTINCT 4.56111936E8, (rt0.c0 IN (rt0.c4))), (((rt0.c2)) NOT BETWEEN (((NOT (rt0.c2)))) AND (((((rt0.c2)) NOT BETWEEN ((x'9d9b')) AND ((rt0.c1)))))) DESC;
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c0) IS TRUE), HEX('-862041157'))) ORDER BY (('-322342703') NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY DESC, x'2a' DESC;
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c0) IS TRUE), HEX('-862041157'))) ORDER BY (('-322342703') NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY DESC, x'2a' DESC INTERSECT SELECT * FROM rt0 WHERE (CAST(((x'') NOTNULL) AS BLOB)) ORDER BY (('-322342703') NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY DESC, x'2a' DESC;
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c0) IS TRUE), HEX('-862041157'))) ORDER BY (('-322342703') NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY DESC, x'2a' DESC;
SELECT ALL * FROM rt0 WHERE ((- (((((rt0.c4)AND(x'f3eb88')))AND(rt0.c2)))));
SELECT DISTINCT * FROM rt0 WHERE ((((- (((((rt0.c4)AND(x'f3eb88')))AND(rt0.c2)))))AND((((rt0.c2, rt0.c2)) NOT BETWEEN ((x'' COLLATE RTRIM, CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) AND ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, x'2d'))))));
SELECT ALL * FROM rt0 WHERE ((- (((((rt0.c4)AND(x'f3eb88')))AND(rt0.c2)))));
SELECT DISTINCT * FROM rt0 WHERE ((((- (((((rt0.c4)AND(x'f3eb88')))AND(rt0.c2)))))AND((((rt0.c2, rt0.c2)) NOT BETWEEN ((x'' COLLATE RTRIM, CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) AND ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, x'2d'))))));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY '-228762077' ASC;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)AND((rt0.c3 COLLATE BINARY IN ((~ (rt0.c3))))))) ORDER BY (((rt0.c0)) BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((rt0.c1))) DESC  NULLS FIRST, CASE (NOT (rt0.c2))  WHEN ((rt0.c2)IS NOT(rt0.c4)) THEN ((rt0.c0) IS FALSE) ELSE (NOT (rt0.c0)) END ASC  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY '-228762077' ASC;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)AND((rt0.c3 COLLATE BINARY IN ((~ (rt0.c3))))))) ORDER BY (((rt0.c0)) BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((rt0.c1))) DESC  NULLS FIRST, CASE (NOT (rt0.c2))  WHEN ((rt0.c2)IS NOT(rt0.c4)) THEN ((rt0.c0) IS FALSE) ELSE (NOT (rt0.c0)) END ASC  NULLS FIRST LIMIT 0x0;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c0)) NOT BETWEEN ((CAST(rt0.c4 AS NUMERIC), (((rt0.c0, rt0.c1))!=((rt0.c3, rt0.c4))))) AND (((rt0.c2 IN ()), (((('-858505247')OR(rt0.c4)))AND(-9.31054513E8))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c0)) NOT BETWEEN ((CAST(rt0.c4 AS NUMERIC), (((rt0.c0, rt0.c1))<>((rt0.c3, rt0.c4))))) AND (((rt0.c2 IN ()), (((('-858505247')OR(rt0.c4)))AND(-9.31054513E8))))))AND(('0.36062870293789195' IN (NULL COLLATE NOCASE))))) ORDER BY rt0.c4  NULLS LAST, ((ABS(DISTINCT rt0.c4))=(x'e310e9')) LIMIT 0x3 INTERSECT SELECT COUNT(*) FROM rt0 WHERE ((+ ((+ (rt0.c3))))) ORDER BY rt0.c4  NULLS LAST, ((ABS(DISTINCT rt0.c4))=(x'e310e9')) LIMIT 3;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (LIKELY((- (rt0.c2)))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))>=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((LIKELY((- (rt0.c2))))AND(((('O8邴O~')|(rt0.c2)) IN (CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END))))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))>=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS LAST INTERSECT SELECT MIN(rt0.c3) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN x'' WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END)GLOB((0.28182724067425524 IN ('5', rt0.c2))))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))>=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT NULL)) NOT BETWEEN ((((rt0.c4, x'356f', rt0.c3))=((rt0.c4, rt0.c4, '-862041157')))) AND ((+ (rt0.c0))))) ORDER BY ((((((rt0.c4 COLLATE RTRIM)OR(CAST(rt0.c2 AS TEXT))))OR(((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)))))AND((((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3, rt0.c3, rt0.c1)) AND ((rt0.c3, NULL, rt0.c0, rt0.c1, rt0.c3))))) ASC, (('') NOTNULL) DESC;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((rt0.c2) NOT NULL)) NOT BETWEEN ((((rt0.c4, x'356f', rt0.c3))=((rt0.c4, rt0.c4, '-862041157')))) AND ((+ (rt0.c0)))))AND('1941015625'))) ORDER BY ((((((rt0.c4 COLLATE RTRIM)OR(CAST(rt0.c2 AS TEXT))))OR(((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)))))AND((((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3, rt0.c3, rt0.c1)) AND ((rt0.c3, NULL, rt0.c0, rt0.c1, rt0.c3))))) ASC, (('') NOTNULL) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c1)), (NOT (rt0.c4))))==((rt0.c0 COLLATE NOCASE, rt0.c4 COLLATE BINARY)))) ORDER BY ((((((rt0.c4 COLLATE RTRIM)OR(CAST(rt0.c2 AS TEXT))))OR(((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)))))AND((((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3, rt0.c3, rt0.c1)) AND ((rt0.c3, NULL, rt0.c0, rt0.c1, rt0.c3))))) ASC, (('') NOTNULL) DESC LIMIT 2;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE ((((((0.1577259704754851)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))-(((rt0.c4) IS FALSE)))) ORDER BY ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c3)))IS(CASE rt0.c3  WHEN rt0.c2 THEN x'a6' WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END));
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE ((((((0.1577259704754851)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))-(((rt0.c4) IS FALSE)))) ORDER BY TYPEOF((NOT (rt0.c4))) ASC, CAST((rt0.c0 IN ()) AS TEXT) DESC, CASE WHEN (~ (rt0.c2)) THEN '-403041340' WHEN ((rt0.c2) ISNULL) THEN ((0.4671908475999308) ISNULL) WHEN 1089252062 THEN ((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)) ELSE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 END END  NULLS LAST;
SELECT * FROM rt0 WHERE (INSTR(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END, ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) ORDER BY (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((0.15736626222781902, HEX(DISTINCT rt0.c3), ((rt0.c3) NOTNULL))) AND (('0.6016400182583505', CAST(0.7908859790417583 AS BLOB), CAST(rt0.c0 AS NUMERIC)))) ASC;
SELECT * FROM rt0 WHERE (((INSTR(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END, ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))AND(((((rt0.c0)-(rt0.c1))) BETWEEN (((((((x'da')OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2))) AND (rt0.c1))))) ORDER BY (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((0.15736626222781902, HEX(DISTINCT rt0.c3), ((rt0.c3) NOTNULL))) AND (('0.6016400182583505', CAST(0.7908859790417583 AS BLOB), CAST(rt0.c0 AS NUMERIC)))) ASC LIMIT 0X0;
SELECT * FROM rt0 WHERE (INSTR(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END, ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) ORDER BY (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((0.15736626222781902, HEX(DISTINCT rt0.c3), ((rt0.c3) NOTNULL))) AND (('0.6016400182583505', CAST(0.7908859790417583 AS BLOB), CAST(rt0.c0 AS NUMERIC)))) ASC;
SELECT * FROM rt0 WHERE (((INSTR(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END, ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))AND(((((rt0.c0)-(rt0.c1))) BETWEEN (((((((x'da')OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2))) AND (rt0.c1))))) ORDER BY (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((0.15736626222781902, HEX(DISTINCT rt0.c3), ((rt0.c3) NOTNULL))) AND (('0.6016400182583505', CAST(0.7908859790417583 AS BLOB), CAST(rt0.c0 AS NUMERIC)))) ASC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (NULLIF(CAST(rt0.c3 AS NUMERIC), (rt0.c1 IN ()))) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c3 IN (rt0.c0))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END)) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (NULLIF(CAST(rt0.c3 AS NUMERIC), (rt0.c1 IN ()))) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c3 IN (rt0.c0))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END)) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (NULLIF(CAST(rt0.c3 AS NUMERIC), (rt0.c1 IN ()))) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c3 IN (rt0.c0))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END)) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (NULLIF(CAST(rt0.c3 AS NUMERIC), (rt0.c1 IN ()))) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c3 IN (rt0.c0))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END)) ASC  NULLS LAST LIMIT 0x0;
SELECT MAX(rt0.c0) FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c3)-(rt0.c3)), ABS(DISTINCT rt0.c1))) ORDER BY CAST(CASE WHEN rt0.c2 THEN 1.709050562E9 ELSE rt0.c4 END AS BLOB) ASC  NULLS LAST;
SELECT MAX(rt0.c0) FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c3)-(rt0.c3)), ABS(DISTINCT rt0.c1))) ORDER BY CAST(CASE WHEN rt0.c2 THEN 1.709050562E9 ELSE rt0.c4 END AS BLOB) ASC  NULLS LAST INTERSECT SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN '-797584744' WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END) BETWEEN ((- (rt0.c4))) AND (((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY CAST(CASE WHEN rt0.c2 THEN 1.709050562E9 ELSE rt0.c4 END AS BLOB) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)));
SELECT DISTINCT * FROM rt0 WHERE ((((+ (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)))AND(((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END) BETWEEN (((rt0.c2)&(rt0.c0))) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) ORDER BY (((rt0.c3 IN ())) ISNULL) ASC, ((((rt0.c1) IS TRUE))*(((rt0.c1) NOT NULL))) DESC, ((((rt0.c3)>=(rt0.c2)))>=((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4 COLLATE BINARY)%((rt0.c3 IN ())))) ORDER BY (((rt0.c3 IN ())) ISNULL) ASC, ((((rt0.c1) IS TRUE))*(((rt0.c1) NOT NULL))) DESC, ((((rt0.c3)>=(rt0.c2)))>=((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ASC;
SELECT * FROM rt0 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)));
SELECT DISTINCT * FROM rt0 WHERE ((((+ (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)))AND(((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END) BETWEEN (((rt0.c2)&(rt0.c0))) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) ORDER BY (((rt0.c3 IN ())) ISNULL) ASC, ((((rt0.c1) IS TRUE))*(((rt0.c1) NOT NULL))) DESC, ((((rt0.c3)>=(rt0.c2)))>=((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4 COLLATE BINARY)%((rt0.c3 IN ())))) ORDER BY (((rt0.c3 IN ())) ISNULL) ASC, ((((rt0.c1) IS TRUE))*(((rt0.c1) NOT NULL))) DESC, ((((rt0.c3)>=(rt0.c2)))>=((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ASC;
SELECT * FROM rt0 WHERE (json_remove(((rt0.c2)/(rt0.c2)), (((rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c1, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c3, rt0.c1, x'33'))), rt0.c4 COLLATE NOCASE));
SELECT DISTINCT * FROM rt0 WHERE (json_remove(((rt0.c2)/(rt0.c2)), (((rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c1, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c3, rt0.c1, x'33'))), rt0.c4 COLLATE NOCASE)) LIMIT 0X0;
SELECT * FROM rt0 WHERE (json_remove(((rt0.c2)/(rt0.c2)), (((rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c1, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c3, rt0.c1, x'33'))), rt0.c4 COLLATE NOCASE));
SELECT ALL * FROM rt0 WHERE (UNLIKELY((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c1, rt0.c4)))));
SELECT DISTINCT * FROM rt0 WHERE (UNLIKELY((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c1, rt0.c4)))));
SELECT ALL * FROM rt0 WHERE (UNLIKELY((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c1, rt0.c4)))));
SELECT DISTINCT * FROM rt0 WHERE (UNLIKELY((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c1, rt0.c4)))));
SELECT MIN(rt0.c0) FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY ((CAST(rt0.c1 AS REAL))AND(rt0.c2 COLLATE BINARY))  NULLS LAST, (- (rt0.c3)) DESC  NULLS LAST;
SELECT MIN(rt0.c0) FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY ((CAST(rt0.c1 AS REAL))AND(rt0.c2 COLLATE BINARY))  NULLS LAST, (- (rt0.c3)) DESC  NULLS LAST LIMIT 0x1;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((((((rt0.c3 COLLATE BINARY)OR(((rt0.c2)!=(rt0.c3)))))AND((((('-740535334')OR(rt0.c2)))OR(rt0.c4)))))OR(rt0.c4 COLLATE RTRIM))) ORDER BY CAST(IFNULL(rt0.c1, rt0.c3) AS BLOB) DESC, rt0.c0 DESC  NULLS LAST, CASE WHEN 0.25635920819463986 THEN ((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)) WHEN ((rt0.c4) ISNULL) THEN ((rt0.c3) IS FALSE) WHEN rt0.c2 THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN ((((((rt0.c2)AND(NULL)))OR(rt0.c3)))OR(rt0.c4)) THEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END WHEN UNICODE(rt0.c0) THEN ((rt0.c1)<(rt0.c2)) ELSE (((rt0.c2, rt0.c1, '50479720'))>((rt0.c2, rt0.c3, rt0.c1))) END DESC  NULLS LAST;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((((((((rt0.c3 COLLATE BINARY)OR(((rt0.c2)<(rt0.c3)))))AND((((('-740535334')OR(rt0.c2)))OR(rt0.c4)))))OR(rt0.c4 COLLATE RTRIM)))AND((((rt0.c3)||(rt0.c3)) IN (((rt0.c0)<=(rt0.c3)), ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c3))))))) ORDER BY (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)) IN ((-1904867303 IN (rt0.c2)))) DESC, CASE WHEN ((rt0.c0)>>('5B')) THEN ((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c4)) END DESC LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE ((rt0.c4 IN ((+ (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((rt0.c4 IN ((+ (rt0.c1))))) ORDER BY ((((((rt0.c4)LIKE(rt0.c3)))AND((NOT (rt0.c3)))))AND(CAST(rt0.c4 AS BLOB)))  NULLS LAST INTERSECT SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c3)) COLLATE BINARY) ORDER BY ((((((rt0.c4)LIKE(rt0.c3)))AND((NOT (rt0.c3)))))AND(CAST(rt0.c4 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((rt0.c4 IN ((+ (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((rt0.c4 IN ((+ (rt0.c1))))) ORDER BY ((((((rt0.c4)LIKE(rt0.c3)))AND((NOT (rt0.c3)))))AND(CAST(rt0.c4 AS BLOB)))  NULLS LAST INTERSECT SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c3)) COLLATE BINARY) ORDER BY ((((((rt0.c4)LIKE(rt0.c3)))AND((NOT (rt0.c3)))))AND(CAST(rt0.c4 AS BLOB)))  NULLS LAST;
SELECT MIN(rt0.c2) FROM rt0 WHERE (rt0.c0);
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (((rt0.c0)AND((((rt0.c3 IN ())) NOT NULL)))) ORDER BY TRIM(DISTINCT ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) ASC  NULLS FIRST, (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))GLOB(rt0.c4)) DESC LIMIT 1;
SELECT * FROM rt0 WHERE (CASE WHEN x'' THEN (rt0.c0 IN ()) WHEN 0.2061717597819066 THEN rt0.c3 COLLATE BINARY WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END THEN ((rt0.c4) ISNULL) END) ORDER BY ABS(DISTINCT (rt0.c4 IN (rt0.c2))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN x'' THEN (rt0.c0 IN ()) WHEN 0.2061717597819066 THEN rt0.c3 COLLATE BINARY WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END THEN ((rt0.c4) ISNULL) END) ORDER BY ABS(DISTINCT (rt0.c4 IN (rt0.c2))) ASC  NULLS LAST LIMIT 1;
SELECT * FROM rt0 WHERE (CASE WHEN x'' THEN (rt0.c0 IN ()) WHEN 0.2061717597819066 THEN rt0.c3 COLLATE BINARY WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END THEN ((rt0.c4) ISNULL) END) ORDER BY ABS(DISTINCT (rt0.c4 IN (rt0.c2))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN x'' THEN (rt0.c0 IN ()) WHEN 0.2061717597819066 THEN rt0.c3 COLLATE BINARY WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END THEN ((rt0.c4) ISNULL) END) ORDER BY ABS(DISTINCT (rt0.c4 IN (rt0.c2))) ASC  NULLS LAST LIMIT 1;
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND ('3*wt邴'))) AND (rt0.c2 COLLATE NOCASE))) ORDER BY ((((((((HEX(rt0.c2))AND((rt0.c0 IN (rt0.c4)))))OR(rt0.c3)))AND(rt0.c3)))AND(CAST(rt0.c3 AS TEXT)));
SELECT * FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND ('3*wt邴'))) AND (rt0.c2 COLLATE NOCASE)))AND(json_object((((rt0.c3, rt0.c0, rt0.c1))>=((rt0.c0, rt0.c1, rt0.c4))), ((rt0.c0) NOT BETWEEN (rt0.c4) AND (x'')), rt0.c2, ((((rt0.c1)OR(rt0.c2)))AND(x'76')))))) ORDER BY (((NOT (rt0.c4))) IS TRUE)  NULLS FIRST, ((rt0.c2) IS FALSE) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND ('3*wt邴'))) AND (rt0.c2 COLLATE NOCASE))) ORDER BY ((((((((HEX(rt0.c2))AND((rt0.c0 IN (rt0.c4)))))OR(rt0.c3)))AND(rt0.c3)))AND(CAST(rt0.c3 AS TEXT)));
SELECT * FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c4))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND ('3*wt邴'))) AND (rt0.c2 COLLATE NOCASE)))AND(json_object((((rt0.c3, rt0.c0, rt0.c1))>=((rt0.c0, rt0.c1, rt0.c4))), ((rt0.c0) NOT BETWEEN (rt0.c4) AND (x'')), rt0.c2, ((((rt0.c1)OR(rt0.c2)))AND(x'76')))))) ORDER BY (((NOT (rt0.c4))) IS TRUE)  NULLS FIRST, ((rt0.c2) IS FALSE) COLLATE RTRIM DESC  NULLS FIRST;
SELECT MIN(rt0.c2) FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER))AND((rt0.c4 IN (rt0.c1))))) ORDER BY ((rt0.c4 COLLATE NOCASE)>=(NULL)) ASC  NULLS LAST, (~ (rt0.c4)) COLLATE RTRIM, (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) IN (((rt0.c0)>=(rt0.c1)))) ASC;
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (((((CAST(rt0.c3 AS INTEGER))AND((rt0.c4 IN (rt0.c1)))))AND((~ ((- (rt0.c4))))))) ORDER BY ((rt0.c4 COLLATE NOCASE)>=(NULL)) ASC  NULLS LAST, (~ (rt0.c4)) COLLATE RTRIM, (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) IN (((rt0.c0)>=(rt0.c1)))) ASC INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (((5.047972E7) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 END) AND (rt0.c3 COLLATE BINARY))) ORDER BY ((rt0.c4 COLLATE NOCASE)>=(NULL)) ASC  NULLS LAST, (~ (rt0.c4)) COLLATE RTRIM, (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) IN (((rt0.c0)>=(rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((('洪')/(((rt0.c0)%(rt0.c2))))) ORDER BY (((rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END)) AND ((''))) ASC, rt0.c4  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((('洪')/(((rt0.c0)%(rt0.c2))))) ORDER BY (((rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END)) AND ((''))) ASC, rt0.c4  NULLS FIRST;
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN 0.5061146522342032 THEN rt0.c4 END)>>((rt0.c4 IN ())))) ORDER BY json(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN '3' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN 0.5061146522342032 THEN rt0.c4 END)>>((rt0.c4 IN ())))) ORDER BY json(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN '3' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END) DESC  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN 0.5061146522342032 THEN rt0.c4 END)>>((rt0.c4 IN ())))) ORDER BY json(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN '3' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c3 IN (NULL, rt0.c1))) NOT NULL)) ORDER BY (((((((NOT (rt0.c1)))AND(TRIM(rt0.c1, '-862041157'))))AND(STRFTIME(rt0.c0, rt0.c4, rt0.c0, rt0.c4))))AND(rt0.c0)) DESC;
SELECT * FROM rt0 WHERE ((((((rt0.c3 IN (NULL, rt0.c1))) NOT NULL))AND('-1477424952'))) ORDER BY -249913950 DESC, (((+ (rt0.c2))) NOTNULL) DESC;
SELECT * FROM rt0 WHERE ((((rt0.c3 IN (NULL, rt0.c1))) NOT NULL)) ORDER BY (((((((NOT (rt0.c1)))AND(TRIM(rt0.c1, '-862041157'))))AND(STRFTIME(rt0.c0, rt0.c4, rt0.c0, rt0.c4))))AND(rt0.c0)) DESC;
SELECT * FROM rt0 WHERE ((((((rt0.c3 IN (NULL, rt0.c1))) NOT NULL))AND('-1477424952'))) ORDER BY -249913950 DESC, (((+ (rt0.c2))) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER))<((rt0.c2 IN (rt0.c3, '', rt0.c2))))) ORDER BY CASE ((rt0.c2)%(rt0.c2))  WHEN rt0.c1 THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)) WHEN rt0.c3 THEN (('-1122472387')OR(rt0.c2)) WHEN (rt0.c1 IN (rt0.c1, rt0.c2, rt0.c2)) THEN NULL END ASC, ((((((((((rt0.c2 COLLATE NOCASE)OR(CASE rt0.c1  WHEN rt0.c2 THEN ')''GM~E' END)))OR(((rt0.c4)AND(rt0.c3)))))AND((((rt0.c1, rt0.c2))>=((rt0.c3, rt0.c1))))))OR(rt0.c1)))AND(0.5663152067440695)) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c3 AS INTEGER))<((rt0.c2 IN (rt0.c3)))))AND(CASE WHEN (- (rt0.c1)) THEN ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) WHEN ((rt0.c2)IS(rt0.c4)) THEN ((rt0.c1)>=(rt0.c4)) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c4)&(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) THEN rt0.c4 COLLATE BINARY WHEN LIKELIHOOD(rt0.c2, rt0.c2) THEN (((rt0.c2, rt0.c3, rt0.c1))<=((rt0.c4, rt0.c1, rt0.c0))) ELSE ((rt0.c3)%(rt0.c3)) END))) ORDER BY ((((rt0.c2) NOT NULL))>>(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (HEX(DISTINCT CASE rt0.c0  WHEN rt0.c4 THEN x'96e0' WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 END)) ORDER BY ((((rt0.c2) NOT NULL))>>(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT * FROM rt0 WHERE (0.15736626222781902);
SELECT * FROM rt0 WHERE (0.15736626222781902) INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))<(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT * FROM rt0 WHERE (0.15736626222781902);
SELECT * FROM rt0 WHERE (0.15736626222781902) INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))<(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (CASE ((('-228762077', rt0.c0))=((rt0.c3, rt0.c2)))  WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c1)GLOB(rt0.c4)) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) END);
SELECT DISTINCT * FROM rt0 WHERE (CASE ((('-228762077', rt0.c0))==((rt0.c3, rt0.c2)))  WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c1)GLOB(rt0.c4)) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) END) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (x'a2');
SELECT ALL * FROM rt0 WHERE (CASE ((('-228762077', rt0.c0))=((rt0.c3, rt0.c2)))  WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c1)GLOB(rt0.c4)) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) END);
SELECT DISTINCT * FROM rt0 WHERE (CASE ((('-228762077', rt0.c0))==((rt0.c3, rt0.c2)))  WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c1)GLOB(rt0.c4)) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) END) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (x'a2');
SELECT COUNT(*) FROM rt0 WHERE (LOWER(DISTINCT ((rt0.c3)+(rt0.c4)))) ORDER BY (((rt0.c0) ISNULL) IN ((((x'67e280', NULL, rt0.c1, rt0.c0))>((rt0.c1, rt0.c4, rt0.c3, rt0.c0)))))  NULLS LAST, CASE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((rt0.c2)>>(rt0.c0)) THEN ((((((((rt0.c3)OR('1004385235')))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)) ELSE ((rt0.c4) IS TRUE) END DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((LOWER(DISTINCT ((rt0.c3)+(rt0.c4))))AND((((+ ('O喳U1dR'))) NOT NULL)))) ORDER BY (((rt0.c0) ISNULL) IN ((((x'67e280', NULL, rt0.c1, rt0.c0))>((rt0.c1, rt0.c4, rt0.c3, rt0.c0)))))  NULLS LAST, CASE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((rt0.c2)>>(rt0.c0)) THEN ((((((((rt0.c3)OR('1004385235')))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)) ELSE ((rt0.c4) IS TRUE) END DESC LIMIT 1 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN (((((rt0.c2))<((rt0.c0))), (((rt0.c4))<((rt0.c3))), ((rt0.c2) IS TRUE))) AND ((CAST(rt0.c0 AS BLOB), ((rt0.c0)<<(rt0.c2)), ((rt0.c1)LIKE(rt0.c3)))))) ORDER BY (((rt0.c0) ISNULL) IN ((((x'67e280', NULL, rt0.c1, rt0.c0))>((rt0.c1, rt0.c4, rt0.c3, rt0.c0)))))  NULLS LAST, CASE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((rt0.c2)>>(rt0.c0)) THEN ((((((((rt0.c3)OR('1004385235')))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)) ELSE ((rt0.c4) IS TRUE) END DESC LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2))) AND (rt0.c2))) ORDER BY ((((rt0.c1)==(rt0.c1))) NOT NULL)  NULLS FIRST, CASE '-889184185'  WHEN NULL THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL ELSE rt0.c3 END COLLATE BINARY ASC  NULLS LAST, (((((rt0.c3, rt0.c1, rt0.c0))<((x'00', '', rt0.c1))))&(((rt0.c0)<=(rt0.c4))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2))) AND (rt0.c2))) ORDER BY ((((rt0.c1)==(rt0.c1))) NOT NULL)  NULLS FIRST, CASE '-889184185'  WHEN NULL THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL ELSE rt0.c3 END COLLATE BINARY ASC  NULLS LAST, (((((rt0.c3, rt0.c1, rt0.c0))<((x'00', '', rt0.c1))))&(((rt0.c0)<=(rt0.c4))))  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2))) AND (rt0.c2))) ORDER BY ((((rt0.c1)==(rt0.c1))) NOT NULL)  NULLS FIRST, CASE '-889184185'  WHEN NULL THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL ELSE rt0.c3 END COLLATE BINARY ASC  NULLS LAST, (((((rt0.c3, rt0.c1, rt0.c0))<((x'00', '', rt0.c1))))&(((rt0.c0)<=(rt0.c4))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2))) AND (rt0.c2))) ORDER BY ((((rt0.c1)==(rt0.c1))) NOT NULL)  NULLS FIRST, CASE '-889184185'  WHEN NULL THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL ELSE rt0.c3 END COLLATE BINARY ASC  NULLS LAST, (((((rt0.c3, rt0.c1, rt0.c0))<((x'00', '', rt0.c1))))&(((rt0.c0)<=(rt0.c4))))  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)) THEN ((rt0.c1)<(NULL)) ELSE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 END END) ORDER BY (CAST(rt0.c4 AS INTEGER) IN ()) DESC  NULLS FIRST, ((rt0.c1)OR(rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)) THEN ((rt0.c1)<(NULL)) ELSE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 END END)AND(CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN NULL WHEN rt0.c2 THEN (~ (rt0.c1)) END))) ORDER BY (((((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c2)) IN ((NOT ('-935285430')))) ASC  NULLS LAST, 1004385235, COALESCE((rt0.c0 IN ()), ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))) DESC;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)) THEN ((rt0.c1)<(NULL)) ELSE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 END END) ORDER BY (CAST(rt0.c4 AS INTEGER) IN ()) DESC  NULLS FIRST, ((rt0.c1)OR(rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)) THEN (NOT (rt0.c4)) ELSE rt0.c1 COLLATE NOCASE END);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)) THEN (NOT (rt0.c4)) ELSE rt0.c1 COLLATE NOCASE END)AND(((((rt0.c3 COLLATE BINARY)AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))AND(CAST(rt0.c0 AS REAL)))))) ORDER BY ((CAST(rt0.c4 AS NUMERIC)) NOTNULL) ASC  NULLS FIRST, ((((((NULL)AND(rt0.c4)))AND(rt0.c4)))>>((((rt0.c0, rt0.c4))<>((rt0.c0, rt0.c2))))) DESC  NULLS LAST, ((((rt0.c2) ISNULL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND ('L' COLLATE RTRIM)) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((rt0.c4) NOTNULL) IN ((((NULL))!=((rt0.c0)))))) ORDER BY ((CAST(rt0.c4 AS NUMERIC)) NOTNULL) ASC  NULLS FIRST, ((((((NULL)AND(rt0.c4)))AND(rt0.c4)))>>((((rt0.c0, rt0.c4))<>((rt0.c0, rt0.c2))))) DESC  NULLS LAST, ((((rt0.c2) ISNULL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND ('L' COLLATE RTRIM)) ASC  NULLS FIRST LIMIT 1;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (ABS(DISTINCT ((0.9531247324114311) NOT NULL))) ORDER BY CAST(((rt0.c3)>>(rt0.c4)) AS REAL) DESC, CAST(rt0.c3 AS BLOB) COLLATE RTRIM;
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (ABS(DISTINCT ((0.9531247324114311) NOT NULL))) ORDER BY NULL, ((rt0.c2) NOT NULL) COLLATE RTRIM ASC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (rt0.c4);
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY x'99' ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c4);
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY x'99' ASC;
SELECT ALL * FROM rt0 WHERE ((rt0.c3 IN ())) ORDER BY CAST(x'4c' AS NUMERIC) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c3 IN ())) ORDER BY ((((CAST(rt0.c1 AS TEXT))AND(x'')))AND(((rt0.c4) ISNULL)))  NULLS FIRST, LIKELIHOOD(DISTINCT CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c4 AS REAL)) ORDER BY ((((CAST(rt0.c1 AS TEXT))AND(x'')))AND(((rt0.c4) ISNULL)))  NULLS FIRST, LIKELIHOOD(DISTINCT CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) ASC LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE ((rt0.c3 IN ())) ORDER BY CAST(x'4c' AS NUMERIC) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c3 IN ())) ORDER BY ((((CAST(rt0.c1 AS TEXT))AND(x'')))AND(((rt0.c4) ISNULL)))  NULLS FIRST, LIKELIHOOD(DISTINCT CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c4 AS REAL)) ORDER BY ((((CAST(rt0.c1 AS TEXT))AND(x'')))AND(((rt0.c4) ISNULL)))  NULLS FIRST, LIKELIHOOD(DISTINCT CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) ASC LIMIT 0x1;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN ((rt0.c3 IN ())))) ORDER BY ((rt0.c4)||(rt0.c4)) COLLATE BINARY ASC  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) ISNULL) DESC;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN ((rt0.c3 IN ())))) ORDER BY ((rt0.c4)||(rt0.c4)) COLLATE BINARY ASC  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) ISNULL) DESC INTERSECT SELECT MIN(rt0.c2) FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c4)||(rt0.c4)) COLLATE BINARY ASC  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) ISNULL) DESC;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (((rt0.c3)IS NOT(rt0.c3)) COLLATE BINARY);
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (((((rt0.c3)IS NOT(rt0.c3)) COLLATE BINARY)AND((((((rt0.c0, rt0.c4, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c4, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c3, rt0.c4)))) BETWEEN (((rt0.c2) BETWEEN (0.9098461503477276) AND (rt0.c4))) AND (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4))))))) ORDER BY ((((rt0.c4)>(rt0.c2)))<>(CAST(rt0.c1 AS INTEGER))) DESC  NULLS LAST, (((rt0.c1 IN (rt0.c0)))OR((NOT (rt0.c4)))) ASC  NULLS FIRST, CASE WHEN NULL THEN (NOT (rt0.c3)) WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 END THEN ((rt0.c1) ISNULL) WHEN -3.70957686E8 THEN ((rt0.c2)IS NOT(rt0.c3)) WHEN NULL THEN ((rt0.c0)>(rt0.c1)) ELSE CASE rt0.c0  WHEN '144521769' THEN rt0.c0 END END INTERSECT SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE ((+ (((rt0.c2)>=(rt0.c4))))) ORDER BY ((((rt0.c4)>(rt0.c2)))<>(CAST(rt0.c1 AS INTEGER))) DESC  NULLS LAST, (((rt0.c1 IN (rt0.c0)))OR((NOT (rt0.c4)))) ASC  NULLS FIRST, CASE WHEN NULL THEN (NOT (rt0.c3)) WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 END THEN ((rt0.c1) ISNULL) WHEN -3.70957686E8 THEN ((rt0.c2)IS NOT(rt0.c3)) WHEN NULL THEN ((rt0.c0)>(rt0.c1)) ELSE CASE rt0.c0  WHEN '144521769' THEN rt0.c0 END END;
SELECT MIN(rt0.c4) FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN '1435424012' ELSE rt0.c4 END) BETWEEN (((rt0.c1)<=(rt0.c4))) AND ((rt0.c4 IN ())))) ORDER BY ((((CAST(rt0.c3 AS REAL))AND(rt0.c1 COLLATE RTRIM)))AND((rt0.c1 IN (rt0.c3)))) ASC  NULLS LAST, ((((rt0.c2)AND((~ (rt0.c3)))))OR((~ (rt0.c3))));
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN '1435424012' ELSE rt0.c4 END) BETWEEN (((rt0.c1)<=(rt0.c4))) AND ((rt0.c4 IN ())))) ORDER BY ((((x'') NOT BETWEEN (rt0.c2) AND (0x108504dc))) IS TRUE)  NULLS LAST LIMIT 0X2 INTERSECT SELECT ALL MIN(rt0.c4) FROM rt0 WHERE ((+ (rt0.c2))) ORDER BY ((((x'') NOT BETWEEN (rt0.c2) AND (0x108504dc))) IS TRUE)  NULLS LAST LIMIT 0X2;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)AND(rt0.c2 COLLATE RTRIM)))OR((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))));
SELECT MIN(rt0.c2) FROM rt0 WHERE (((((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)AND(rt0.c2 COLLATE RTRIM)))OR((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(((rt0.c3) IS TRUE))));
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (rt0.c1);
SELECT MIN(rt0.c1) FROM rt0 WHERE (((rt0.c1)AND(((0.2624267090094461)-(((rt0.c2)-(0.18058567832909878))))))) LIMIT 0x0 INTERSECT SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((x'0ce6')<((+ (rt0.c2))))) LIMIT 0X0;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN (+ (rt0.c0)) THEN ((rt0.c0)IS(rt0.c2)) WHEN rt0.c3 COLLATE BINARY THEN (('-1477424952') BETWEEN (NULL) AND (rt0.c2)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (- (rt0.c4)) WHEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN x'' ELSE ((rt0.c3)%(rt0.c4)) END);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2 COLLATE RTRIM  WHEN (+ (rt0.c0)) THEN ((rt0.c0)IS(rt0.c2)) WHEN rt0.c3 COLLATE BINARY THEN (('-1477424952') BETWEEN (NULL) AND (rt0.c2)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (- (rt0.c4)) WHEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN x'' ELSE ((rt0.c3)%(rt0.c4)) END)AND(((((rt0.c1) NOTNULL))>=((rt0.c1 IN (rt0.c2, rt0.c2)))))));
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)) AS NUMERIC)) ORDER BY TRIM((rt0.c1 IN (rt0.c2))) DESC, CAST((- ('!RT/>s揲oV')) AS TEXT)  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((CAST(((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)) AS NUMERIC))AND(((((((0.09762069403104956)AND(((rt0.c4)IS NOT(rt0.c1)))))OR(x'f97d')))AND(rt0.c3))))) ORDER BY TRIM((rt0.c1 IN (rt0.c2))) DESC, CAST((- ('!RT/>s揲oV')) AS TEXT)  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((((((LIKELIHOOD(rt0.c3, rt0.c4))AND((rt0.c0 IN ()))))AND(((rt0.c2)<(rt0.c2)))))AND(((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))));
SELECT * FROM rt0 WHERE (((((((((LIKELIHOOD(rt0.c3, rt0.c4))AND((rt0.c0 IN ()))))AND(((rt0.c2)<(rt0.c2)))))AND(((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))))AND(0.6067888191955144))) LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (((1906348312) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) AND (COALESCE(DISTINCT rt0.c2, rt0.c3, rt0.c4)))) LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (((((((LIKELIHOOD(rt0.c3, rt0.c4))AND((rt0.c0 IN ()))))AND(((rt0.c2)<(rt0.c2)))))AND(((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))));
SELECT * FROM rt0 WHERE (((((((((LIKELIHOOD(rt0.c3, rt0.c4))AND((rt0.c0 IN ()))))AND(((rt0.c2)<(rt0.c2)))))AND(((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))))AND(0.6067888191955144))) LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (((1906348312) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) AND (COALESCE(DISTINCT rt0.c2, rt0.c3, rt0.c4)))) LIMIT 0x0;
SELECT ALL COUNT(*) FROM rt0 WHERE ('M') ORDER BY '-591352603' DESC, (NOT (CAST(rt0.c4 AS TEXT)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ('M') ORDER BY '-591352603' DESC, (NOT (CAST(rt0.c4 AS TEXT)))  NULLS LAST;
SELECT * FROM rt0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT * FROM rt0 WHERE ((~ ((rt0.c1 IN ())))) ORDER BY ((((((((rt0.c2)<(rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c3)==(rt0.c1)))))AND(((((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c4)))) DESC  NULLS FIRST LIMIT 0X1;
SELECT * FROM rt0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT * FROM rt0 WHERE ((~ ((rt0.c1 IN ())))) ORDER BY ((((((((rt0.c2)<(rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c3)==(rt0.c1)))))AND(((((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c4)))) DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (0.2866925974160843) ORDER BY -1268073866  NULLS LAST, ((rt0.c3)LIKE(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((0.2866925974160843)AND(((((((rt0.c3 COLLATE RTRIM)AND(rt0.c0)))AND(((rt0.c1) NOTNULL))))AND(((rt0.c2)GLOB(rt0.c1))))))) ORDER BY CAST(json_patch(rt0.c3, NULL) AS REAL) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN (0Xffffffff8393707b IN (rt0.c3)) WHEN (NOT (x'3d131c')) THEN (NOT (rt0.c1)) WHEN NULL THEN ((x'40') ISNULL) WHEN UNLIKELY(rt0.c3) THEN (((rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3)) AND ((rt0.c4, NULL))) END) ORDER BY CAST(json_patch(rt0.c3, NULL) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (0.2866925974160843) ORDER BY -1268073866  NULLS LAST, ((rt0.c3)LIKE(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c3) ISNULL) COLLATE BINARY) ORDER BY ((((((rt0.c4)<<(rt0.c0)))AND(((rt0.c0)-(rt0.c1)))))AND(((rt0.c1)&(rt0.c2))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c3) ISNULL) COLLATE BINARY) ORDER BY ((rt0.c2)LIKE(rt0.c0)) COLLATE RTRIM DESC, ((CAST(rt0.c4 AS REAL))%(((rt0.c4) IS FALSE)))  NULLS FIRST, ((((((((((((rt0.c1)<<(rt0.c4)))OR(CAST(rt0.c4 AS BLOB))))AND((((rt0.c0))<>((rt0.c1))))))AND(((rt0.c2)OR(rt0.c4)))))AND((rt0.c1 IN ()))))AND(0.1014295628490337))  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c2)||(rt0.c0)))&(CAST(rt0.c3 AS REAL)))) ORDER BY ((rt0.c2)LIKE(rt0.c0)) COLLATE RTRIM DESC, ((CAST(rt0.c4 AS REAL))%(((rt0.c4) IS FALSE)))  NULLS FIRST, ((((((((((((rt0.c1)<<(rt0.c4)))OR(CAST(rt0.c4 AS BLOB))))AND((((rt0.c0))!=((rt0.c1))))))AND(((rt0.c2)OR(rt0.c4)))))AND((rt0.c1 IN ()))))AND(0.1014295628490337))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c3) ISNULL) COLLATE BINARY) ORDER BY ((((((rt0.c4)<<(rt0.c0)))AND(((rt0.c0)-(rt0.c1)))))AND(((rt0.c1)&(rt0.c2))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c3) ISNULL) COLLATE BINARY) ORDER BY ((rt0.c2)LIKE(rt0.c0)) COLLATE RTRIM DESC, ((CAST(rt0.c4 AS REAL))%(((rt0.c4) IS FALSE)))  NULLS FIRST, ((((((((((((rt0.c1)<<(rt0.c4)))OR(CAST(rt0.c4 AS BLOB))))AND((((rt0.c0))<>((rt0.c1))))))AND(((rt0.c2)OR(rt0.c4)))))AND((rt0.c1 IN ()))))AND(0.1014295628490337))  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c2)||(rt0.c0)))&(CAST(rt0.c3 AS REAL)))) ORDER BY ((rt0.c2)LIKE(rt0.c0)) COLLATE RTRIM DESC, ((CAST(rt0.c4 AS REAL))%(((rt0.c4) IS FALSE)))  NULLS FIRST, ((((((((((((rt0.c1)<<(rt0.c4)))OR(CAST(rt0.c4 AS BLOB))))AND((((rt0.c0))!=((rt0.c1))))))AND(((rt0.c2)OR(rt0.c4)))))AND((rt0.c1 IN ()))))AND(0.1014295628490337))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))) AND (((rt0.c3 IN ())))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))) AND (((rt0.c3 IN ()))))) ORDER BY ((CAST(rt0.c2 AS TEXT)) BETWEEN (CAST(x'' AS REAL)) AND (CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END)) DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))) AND (((rt0.c3 IN ())))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))) AND (((rt0.c3 IN ()))))) ORDER BY ((CAST(rt0.c2 AS TEXT)) BETWEEN (CAST(x'' AS REAL)) AND (CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END)) DESC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((NULL, rt0.c3, rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c0, rt0.c0, rt0.c2, rt0.c4))))<('2106060077')));
SELECT * FROM rt0 WHERE ((((((((rt0.c3, rt0.c1, rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((NULL, rt0.c3, rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c0, rt0.c0, rt0.c2, rt0.c4))))<('2106060077')))AND(((((rt0.c1)AND(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)))))AND(NULL))))) INTERSECT SELECT ALL * FROM rt0 WHERE ((('Z#') BETWEEN (((rt0.c2)GLOB(rt0.c4))) AND (rt0.c3 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((NULL, rt0.c3, rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c0, rt0.c0, rt0.c2, rt0.c4))))<('2106060077')));
SELECT * FROM rt0 WHERE ((((((((rt0.c3, rt0.c1, rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((NULL, rt0.c3, rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c0, rt0.c0, rt0.c2, rt0.c4))))<('2106060077')))AND(((((rt0.c1)AND(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)))))AND(NULL))))) INTERSECT SELECT ALL * FROM rt0 WHERE ((('Z#') BETWEEN (((rt0.c2)GLOB(rt0.c4))) AND (rt0.c3 COLLATE NOCASE)));
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE ((((0X7b879c5c, rt0.c0, rt0.c3)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 END, '9223372036854775807', ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))) AND (((~ (rt0.c1)), CAST(rt0.c0 AS INTEGER), (NOT (rt0.c0))))));
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE ((((0x7b879c5c, rt0.c0, rt0.c3)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 END, '9223372036854775807', ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))) AND (((~ (rt0.c1)), CAST(rt0.c0 AS INTEGER), (NOT (rt0.c0)))))) LIMIT 0 INTERSECT SELECT MAX(rt0.c0) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END COLLATE BINARY) LIMIT 0;
SELECT * FROM rt0 WHERE (((rt0.c2)>=(((rt0.c2)/(-3.06832129E8))))) ORDER BY (((+ (rt0.c4)))IS NOT(((rt0.c0) NOTNULL)));
SELECT * FROM rt0 WHERE (((rt0.c2)>(((rt0.c2)/(-3.06832129E8))))) ORDER BY CAST(CAST(rt0.c1 AS NUMERIC) AS REAL) ASC  NULLS LAST, CASE (rt0.c1 IN ())  WHEN (NOT (rt0.c3)) THEN HEX(rt0.c1) WHEN ((0.025633417922032997)/(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN x'1149f9' ELSE rt0.c2 END WHEN CASE 0xffffffffc250f1d9  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN 'u' WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c1 END THEN rt0.c3 END LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0) IS TRUE)  WHEN ((rt0.c2)=(rt0.c4)) THEN IFNULL(rt0.c4, 0.28986854789270844) WHEN (+ (rt0.c0)) THEN (rt0.c2 IN ()) WHEN CAST(rt0.c3 AS BLOB) THEN (rt0.c0 IN ()) ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) ORDER BY CAST(CAST(rt0.c1 AS NUMERIC) AS REAL) ASC  NULLS LAST, CASE (rt0.c1 IN ())  WHEN (NOT (rt0.c3)) THEN HEX(rt0.c1) WHEN ((0.025633417922032997)/(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN x'1149f9' ELSE rt0.c2 END WHEN CASE 0Xffffffffc250f1d9  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN 'u' WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c1 END THEN rt0.c3 END LIMIT 0x1;
SELECT * FROM rt0 WHERE (((rt0.c2)>=(((rt0.c2)/(-3.06832129E8))))) ORDER BY (((+ (rt0.c4)))IS NOT(((rt0.c0) NOTNULL)));
SELECT * FROM rt0 WHERE (((rt0.c2)>(((rt0.c2)/(-3.06832129E8))))) ORDER BY CAST(CAST(rt0.c1 AS NUMERIC) AS REAL) ASC  NULLS LAST, CASE (rt0.c1 IN ())  WHEN (NOT (rt0.c3)) THEN HEX(rt0.c1) WHEN ((0.025633417922032997)/(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN x'1149f9' ELSE rt0.c2 END WHEN CASE 0xffffffffc250f1d9  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN 'u' WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c1 END THEN rt0.c3 END LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0) IS TRUE)  WHEN ((rt0.c2)=(rt0.c4)) THEN IFNULL(rt0.c4, 0.28986854789270844) WHEN (+ (rt0.c0)) THEN (rt0.c2 IN ()) WHEN CAST(rt0.c3 AS BLOB) THEN (rt0.c0 IN ()) ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) ORDER BY CAST(CAST(rt0.c1 AS NUMERIC) AS REAL) ASC  NULLS LAST, CASE (rt0.c1 IN ())  WHEN (NOT (rt0.c3)) THEN HEX(rt0.c1) WHEN ((0.025633417922032997)/(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN x'1149f9' ELSE rt0.c2 END WHEN CASE 0Xffffffffc250f1d9  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN 'u' WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c1 END THEN rt0.c3 END LIMIT 0x1;
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c1)))OR(x'69')))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c4))  WHEN ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c4)) THEN (rt0.c3 IN (rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c1)))OR(x'69')))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c4))  WHEN ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c4)) THEN (rt0.c3 IN (rt0.c2)) END) ORDER BY ((((+ (rt0.c1))))>((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))), CAST(((rt0.c1)IS NOT(rt0.c0)) AS BLOB)  NULLS FIRST, ((((rt0.c4) IS FALSE)) NOT NULL), ((((((((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c3)))AND(((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))))AND(SQLITE_SOURCE_ID())))AND((- (rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (((((((TIME(rt0.c3, rt0.c1, rt0.c4, rt0.c2))OR((rt0.c4 IN (rt0.c0, rt0.c3)))))AND(((rt0.c4)<<(rt0.c4)))))OR((rt0.c3 IN (rt0.c2))))) ORDER BY CAST((((rt0.c1, rt0.c0)) NOT BETWEEN ((0.496157638007812, rt0.c0)) AND ((x'67', rt0.c3))) AS BLOB);
SELECT * FROM rt0 WHERE (((((((((TIME(rt0.c3, rt0.c1, rt0.c4, rt0.c2))OR((rt0.c4 IN (rt0.c0, rt0.c3)))))AND(((rt0.c4)<<(rt0.c4)))))OR((rt0.c3 IN (rt0.c2)))))AND((((rt0.c3 IN (rt0.c2, rt0.c3))) BETWEEN (((((((rt0.c2)AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c1))) AND (((rt0.c2)<(rt0.c4))))))) ORDER BY ((LIKELIHOOD(rt0.c2, rt0.c3)) ISNULL) DESC LIMIT 0X3;
SELECT ALL * FROM rt0 WHERE (((((((TIME(rt0.c3, rt0.c1, rt0.c4, rt0.c2))OR((rt0.c4 IN (rt0.c0, rt0.c3)))))AND(((rt0.c4)<<(rt0.c4)))))OR((rt0.c3 IN (rt0.c2))))) ORDER BY CAST((((rt0.c1, rt0.c0)) NOT BETWEEN ((0.496157638007812, rt0.c0)) AND ((x'67', rt0.c3))) AS BLOB);
SELECT * FROM rt0 WHERE (((((((((TIME(rt0.c3, rt0.c1, rt0.c4, rt0.c2))OR((rt0.c4 IN (rt0.c0, rt0.c3)))))AND(((rt0.c4)<<(rt0.c4)))))OR((rt0.c3 IN (rt0.c2)))))AND((((rt0.c3 IN (rt0.c2, rt0.c3))) BETWEEN (((((((rt0.c2)AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c1))) AND (((rt0.c2)<(rt0.c4))))))) ORDER BY ((LIKELIHOOD(rt0.c2, rt0.c3)) ISNULL) DESC LIMIT 0X3;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c1) NOTNULL)) BETWEEN ((NOT (rt0.c2))) AND (((rt0.c4)>>(rt0.c1))))) ORDER BY (((rt0.c4 IN (rt0.c3))) IS TRUE), (((rt0.c3 IN ()))||(rt0.c1)) DESC;
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c1) NOTNULL)) BETWEEN ((NOT (rt0.c2))) AND (((rt0.c4)>>(rt0.c1))))) ORDER BY (((rt0.c4 IN (rt0.c3))) IS TRUE), (((rt0.c3 IN ()))||(rt0.c1)) DESC INTERSECT SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE ((~ (((rt0.c4) IS TRUE)))) ORDER BY (((rt0.c4 IN (rt0.c3))) IS TRUE), (((rt0.c3 IN ()))||(rt0.c1)) DESC;
SELECT ALL * FROM rt0 WHERE (1.709050562E9) ORDER BY ((((((rt0.c2) IS TRUE))AND(rt0.c3)))AND((rt0.c2 IN (rt0.c4)))) DESC;
SELECT * FROM rt0 WHERE (1.709050562E9) ORDER BY ((((((rt0.c2) IS TRUE))AND(rt0.c3)))AND((rt0.c2 IN (rt0.c4)))) DESC LIMIT 2;
SELECT ALL * FROM rt0 WHERE (1.709050562E9) ORDER BY ((((((rt0.c2) IS TRUE))AND(rt0.c3)))AND((rt0.c2 IN (rt0.c4)))) DESC;
SELECT * FROM rt0 WHERE (1.709050562E9) ORDER BY ((((((rt0.c2) IS TRUE))AND(rt0.c3)))AND((rt0.c2 IN (rt0.c4)))) DESC LIMIT 2;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (UNLIKELY(DISTINCT ((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))));
SELECT MAX(rt0.c4) FROM rt0 WHERE (((UNLIKELY(DISTINCT ((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))))AND((((~ (NULL)))>(NULL))))) INTERSECT SELECT MAX(rt0.c4) FROM rt0 NOT INDEXED WHERE (((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(json(rt0.c1))));
SELECT MIN(rt0.c3) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))*(x'd5')));
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))*(x'd5'))) ORDER BY CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (''))  WHEN ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND(0Xffffffffcc85e797)) THEN rt0.c0 WHEN (((NULL))!=((rt0.c1))) THEN rt0.c4 END DESC  NULLS FIRST, ((((('7'))<((rt0.c0)))) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND (rt0.c3)) ASC  NULLS LAST, ((((((((((rt0.c0)AND(rt0.c4)))AND(0.8000808491476142)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)) COLLATE NOCASE  NULLS LAST LIMIT 0x2;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)|(rt0.c3)) IN ()));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)|(rt0.c3)) IN ()))AND('-1579451077'))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((((rt0.c4) IS FALSE))/('' COLLATE RTRIM)), ((0.4979620207144305 COLLATE NOCASE)%(((rt0.c4)/(rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3)AND(((ABS(DISTINCT rt0.c1))/(rt0.c2))))) ORDER BY ((((rt0.c4) IS FALSE))/('' COLLATE RTRIM)), ((0.4979620207144305 COLLATE NOCASE)%(((rt0.c4)/(rt0.c2)))) LIMIT 0x0 INTERSECT SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c4, '-9223372036854775808')) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN x'' ELSE rt0.c3 END, rt0.c4, ((rt0.c4)LIKE(rt0.c1)))) AND (((('') BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c3)%(rt0.c1)), ((((((((((rt0.c1)AND(rt0.c3)))OR(x'')))AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))))) ORDER BY ((((rt0.c4) IS FALSE))/('' COLLATE RTRIM)), ((0.4979620207144305 COLLATE NOCASE)%(((rt0.c4)/(rt0.c2)))) LIMIT 0X0;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (CASE ((rt0.c1)<=('ln''Xi}ANaNb'))  WHEN rt0.c0 THEN COALESCE(x'', rt0.c4) WHEN (~ (rt0.c1)) THEN ((((((rt0.c1)OR(0.5623287721733697)))OR(rt0.c3)))AND(rt0.c3)) END) ORDER BY (((((rt0.c2, rt0.c1))>=(('-1840384088', NULL)))) IS TRUE)  NULLS FIRST, (((('')IS NOT(rt0.c1)))AND((rt0.c0 IN (rt0.c3, '-226105798'))))  NULLS LAST;
SELECT MAX(rt0.c1) FROM rt0 WHERE (((CASE ((rt0.c1)<('ln''Xi}ANaNb'))  WHEN rt0.c0 THEN COALESCE(x'', rt0.c4) WHEN (~ (rt0.c1)) THEN ((((((rt0.c1)OR(0.5623287721733697)))OR(rt0.c3)))AND(rt0.c3)) END)AND((((((((rt0.c4, rt0.c2))=((rt0.c3, rt0.c0))))OR((+ (rt0.c0)))))AND(x'c1'))))) ORDER BY CAST(((rt0.c3) NOT NULL) AS BLOB)  NULLS LAST LIMIT 0X2;
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (((- (rt0.c0)), rt0.c0, CAST(x'' AS REAL))) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)), rt0.c2, CAST(rt0.c0 AS BLOB))))) ORDER BY ((('-381090566' IN (631698164)))GLOB(((rt0.c2)+(rt0.c2)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (((- (rt0.c0)), rt0.c0, CAST(x'' AS REAL))) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)), rt0.c2, CAST(rt0.c0 AS BLOB)))))AND(((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 END) BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))) AND (rt0.c2 COLLATE BINARY))))) ORDER BY LIKELY(((rt0.c2) IS FALSE)) DESC, ((((0Xffffffffdd55200b)GLOB(rt0.c2))) NOT BETWEEN (1656892549) AND ((+ (rt0.c4)))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (json_type((((rt0.c2, rt0.c2, rt0.c1))==((rt0.c1, rt0.c1, rt0.c1))))) ORDER BY LIKELY(((rt0.c2) IS FALSE)) DESC, ((((0Xffffffffdd55200b)GLOB(rt0.c2))) NOT BETWEEN (1656892549) AND ((+ (rt0.c4))));
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (((- (rt0.c0)), rt0.c0, CAST(x'' AS REAL))) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)), rt0.c2, CAST(rt0.c0 AS BLOB))))) ORDER BY ((('-381090566' IN (631698164)))GLOB(((rt0.c2)+(rt0.c2)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (((- (rt0.c0)), rt0.c0, CAST(x'' AS REAL))) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)), rt0.c2, CAST(rt0.c0 AS BLOB)))))AND(((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 END) BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))) AND (rt0.c2 COLLATE BINARY))))) ORDER BY LIKELY(((rt0.c2) IS FALSE)) DESC, ((((0Xffffffffdd55200b)GLOB(rt0.c2))) NOT BETWEEN (1656892549) AND ((+ (rt0.c4)))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (json_type((((rt0.c2, rt0.c2, rt0.c1))==((rt0.c1, rt0.c1, rt0.c1))))) ORDER BY LIKELY(((rt0.c2) IS FALSE)) DESC, ((((0Xffffffffdd55200b)GLOB(rt0.c2))) NOT BETWEEN (1656892549) AND ((+ (rt0.c4))));
SELECT ALL * FROM rt0 WHERE (TIME(((rt0.c0)*(rt0.c1)), ((((((((rt0.c1)OR(rt0.c4)))AND(x'')))OR(rt0.c1)))AND(rt0.c0)), UPPER(rt0.c2))) ORDER BY ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))OR(((rt0.c2)/(rt0.c4)))) DESC;
SELECT * FROM rt0 WHERE (TIME(((rt0.c0)*(rt0.c1)), ((((((((rt0.c1)OR(rt0.c4)))AND(x'')))OR(rt0.c1)))AND(rt0.c0)), UPPER(rt0.c2))) ORDER BY ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))OR(((rt0.c2)/(rt0.c4)))) DESC LIMIT 0x0 INTERSECT SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c3)==(rt0.c1))) AND ((~ (0.09177745456049491))))) ORDER BY ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))OR(((rt0.c2)/(rt0.c4)))) DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (TIME(((rt0.c0)*(rt0.c1)), ((((((((rt0.c1)OR(rt0.c4)))AND(x'')))OR(rt0.c1)))AND(rt0.c0)), UPPER(rt0.c2))) ORDER BY ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))OR(((rt0.c2)/(rt0.c4)))) DESC;
SELECT * FROM rt0 WHERE (TIME(((rt0.c0)*(rt0.c1)), ((((((((rt0.c1)OR(rt0.c4)))AND(x'')))OR(rt0.c1)))AND(rt0.c0)), UPPER(rt0.c2))) ORDER BY ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))OR(((rt0.c2)/(rt0.c4)))) DESC LIMIT 0x0 INTERSECT SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c3)==(rt0.c1))) AND ((~ (0.09177745456049491))))) ORDER BY ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))OR(((rt0.c2)/(rt0.c4)))) DESC LIMIT 0;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c2)OR(rt0.c1)))) AND ((rt0.c2))));
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE ((((((rt0.c3)) BETWEEN ((((rt0.c2)OR(rt0.c1)))) AND ((rt0.c2))))AND(rt0.c2)));
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c2))) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c4))) AND (rt0.c4)));
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c2))) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c4))) AND (rt0.c4))) ORDER BY (((((rt0.c1)LIKE(rt0.c1)), x'd1'))>=((json_array_length(rt0.c1), ((rt0.c2)/(rt0.c0))))), (+ ((rt0.c1 IN (rt0.c2)))) ASC, (((((rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c0)) AND ((-1654285559, rt0.c1))))IS NOT(rt0.c2)) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN (rt0.c1 IN ()) WHEN json_array_length(rt0.c3) THEN (((rt0.c3, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c3, rt0.c0))) ELSE (rt0.c3 IN (rt0.c4)) END) ORDER BY (((((rt0.c1)LIKE(rt0.c1)), x'd1'))>=((json_array_length(rt0.c1), ((rt0.c2)/(rt0.c0))))), (+ ((rt0.c1 IN (rt0.c2)))) ASC, (((((rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c0)) AND ((0xffffffff9d659b09, rt0.c1))))IS NOT(rt0.c2)) DESC LIMIT 1;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'b0') ORDER BY (- ((((rt0.c4))<((rt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'b0') ORDER BY (- ((((rt0.c4))<((rt0.c0))))) DESC;
SELECT ALL * FROM rt0 WHERE (CASE WHEN 0.5612793441452829 THEN LIKELY(rt0.c1) ELSE ((rt0.c4) NOT NULL) END) ORDER BY (((((((+ (rt0.c0)))OR(rt0.c0)))AND(((rt0.c3)AND(rt0.c4)))))OR(rt0.c4))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN 0.5612793441452829 THEN LIKELY(rt0.c1) ELSE ((rt0.c4) NOT NULL) END) ORDER BY (+ (CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END))  NULLS FIRST, ((((((rt0.c0 COLLATE NOCASE)AND((((rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c0, '-0.0'))))))OR(((rt0.c1)<(NULL)))))AND(((rt0.c4) ISNULL))) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c3)<>(rt0.c0))))) ORDER BY (+ (CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END))  NULLS FIRST, ((((((rt0.c0 COLLATE NOCASE)AND((((rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c0, '-0.0'))))))OR(((rt0.c1)<(NULL)))))AND(((rt0.c4) ISNULL))) DESC LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (CASE WHEN 0.5612793441452829 THEN LIKELY(rt0.c1) ELSE ((rt0.c4) NOT NULL) END) ORDER BY (((((((+ (rt0.c0)))OR(rt0.c0)))AND(((rt0.c3)AND(rt0.c4)))))OR(rt0.c4))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN 0.5612793441452829 THEN LIKELY(rt0.c1) ELSE ((rt0.c4) NOT NULL) END) ORDER BY (+ (CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END))  NULLS FIRST, ((((((rt0.c0 COLLATE NOCASE)AND((((rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c0, '-0.0'))))))OR(((rt0.c1)<(NULL)))))AND(((rt0.c4) ISNULL))) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c3)<>(rt0.c0))))) ORDER BY (+ (CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END))  NULLS FIRST, ((((((rt0.c0 COLLATE NOCASE)AND((((rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c0, '-0.0'))))))OR(((rt0.c1)<(NULL)))))AND(((rt0.c4) ISNULL))) DESC LIMIT 0X1;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c0)-(rt0.c2)))>(((0.19983168132506135)+(rt0.c3)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c0)-(rt0.c2)))>(((0.19983168132506135)+(rt0.c3)))) DESC  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)) COLLATE BINARY) ORDER BY ((((rt0.c0)-(rt0.c2)))>(((0.19983168132506135)+(rt0.c3)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0 ASC, UPPER(((rt0.c4) NOT NULL)) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) ORDER BY (((('42601212') IS FALSE))==(0Xffffffffb7fb6430))  NULLS FIRST, (+ (rt0.c4)) COLLATE RTRIM DESC, ((((((RTRIM('-505397036'))OR(((rt0.c4)/(rt0.c3)))))AND(rt0.c3 COLLATE BINARY)))OR(TYPEOF(rt0.c4))) ASC LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0 ASC, UPPER(((rt0.c4) NOT NULL)) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) ORDER BY (((('42601212') IS FALSE))==(0Xffffffffb7fb6430))  NULLS FIRST, (+ (rt0.c4)) COLLATE RTRIM DESC, ((((((RTRIM('-505397036'))OR(((rt0.c4)/(rt0.c3)))))AND(rt0.c3 COLLATE BINARY)))OR(TYPEOF(rt0.c4))) ASC LIMIT 0X2;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((rt0.c2)AND((~ (rt0.c3)) COLLATE NOCASE))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((- (rt0.c4))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CAST(rt0.c2 AS TEXT))));
SELECT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c0)) COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c0)) COLLATE BINARY) INTERSECT SELECT DISTINCT * FROM rt0 WHERE ('0.5612793441452829');
SELECT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c0)) COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c0)) COLLATE BINARY) INTERSECT SELECT DISTINCT * FROM rt0 WHERE ('0.5612793441452829');
SELECT * FROM rt0 WHERE ('-1490826403') ORDER BY (CAST(rt0.c4 AS REAL) IN ())  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((('-1490826403')AND(((NOT (rt0.c0)) IN ())))) ORDER BY (CAST(rt0.c4 AS REAL) IN ())  NULLS LAST LIMIT 0X0;
SELECT * FROM rt0 WHERE ('-1490826403') ORDER BY (CAST(rt0.c4 AS REAL) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (TYPEOF(rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (TYPEOF(rt0.c3))))AND((((((+ (rt0.c3)))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))OR(((rt0.c4)||(rt0.c4))))))) LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c2))) NOT BETWEEN (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c4)AND(rt0.c0))))) ORDER BY CAST(rt0.c1 AS BLOB) COLLATE BINARY  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((((((- (rt0.c2))) NOT BETWEEN (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c4)AND(rt0.c0)))))AND((((((((((((rt0.c3 IN ()))OR(rt0.c1 COLLATE NOCASE)))AND(((-1268073866)+(0.8218277004916531)))))OR(0.9184287678251294)))OR(rt0.c4 COLLATE BINARY)))OR(RTRIM(rt0.c1)))))) ORDER BY ((((((((rt0.c1) NOT NULL))OR(((rt0.c2)LIKE(rt0.c1)))))OR(CAST(rt0.c4 AS BLOB))))OR(TRIM(DISTINCT rt0.c2, rt0.c0))) DESC, (((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0))))GLOB(((rt0.c3)<<(rt0.c0)))) DESC  NULLS FIRST, ((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR(x'')))OR(((rt0.c3)-(rt0.c2)))))AND(rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((LIKELY(DISTINCT rt0.c4) IN (((((((((((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))AND(0x2d0c3f62)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1))))) ORDER BY ((((((((rt0.c1) NOT NULL))OR(((rt0.c2)LIKE(rt0.c1)))))OR(CAST(rt0.c4 AS BLOB))))OR(TRIM(DISTINCT rt0.c2, rt0.c0))) DESC, (((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0))))GLOB(((rt0.c3)<<(rt0.c0)))) DESC  NULLS FIRST, ((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR(x'')))OR(((rt0.c3)-(rt0.c2)))))AND(rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c2))) NOT BETWEEN (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c4)AND(rt0.c0))))) ORDER BY CAST(rt0.c1 AS BLOB) COLLATE BINARY  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((((((- (rt0.c2))) NOT BETWEEN (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c4)AND(rt0.c0)))))AND((((((((((((rt0.c3 IN ()))OR(rt0.c1 COLLATE NOCASE)))AND(((-1268073866)+(0.8218277004916531)))))OR(0.9184287678251294)))OR(rt0.c4 COLLATE BINARY)))OR(RTRIM(rt0.c1)))))) ORDER BY ((((((((rt0.c1) NOT NULL))OR(((rt0.c2)LIKE(rt0.c1)))))OR(CAST(rt0.c4 AS BLOB))))OR(TRIM(DISTINCT rt0.c2, rt0.c0))) DESC, (((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0))))GLOB(((rt0.c3)<<(rt0.c0)))) DESC  NULLS FIRST, ((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR(x'')))OR(((rt0.c3)-(rt0.c2)))))AND(rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((LIKELY(DISTINCT rt0.c4) IN (((((((((((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))AND(0x2d0c3f62)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1))))) ORDER BY ((((((((rt0.c1) NOT NULL))OR(((rt0.c2)LIKE(rt0.c1)))))OR(CAST(rt0.c4 AS BLOB))))OR(TRIM(DISTINCT rt0.c2, rt0.c0))) DESC, (((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0))))GLOB(((rt0.c3)<<(rt0.c0)))) DESC  NULLS FIRST, ((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR(x'')))OR(((rt0.c3)-(rt0.c2)))))AND(rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3))>((rt0.c1))))&(rt0.c3)));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3))>((rt0.c1))))&(rt0.c3))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3))>((rt0.c1))))&(rt0.c3)));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3))>((rt0.c1))))&(rt0.c3))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((HEX(DISTINCT rt0.c4) IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((((HEX(DISTINCT rt0.c4) IN ()))AND(json_array(0xffffffffd68c0d0e, rt0.c1, ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4))))));
SELECT ALL * FROM rt0 WHERE ((HEX(DISTINCT rt0.c4) IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((((HEX(DISTINCT rt0.c4) IN ()))AND(json_array(0xffffffffd68c0d0e, rt0.c1, ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4))))));
SELECT * FROM rt0 WHERE (((((rt0.c0) NOTNULL)) NOTNULL)) ORDER BY (((- (rt0.c1))) BETWEEN (0.3402382383532525) AND (IFNULL(rt0.c1, rt0.c2))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOTNULL)) NOTNULL)) ORDER BY ((((rt0.c2)<(rt0.c4)))OR(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)) ASC;
SELECT * FROM rt0 WHERE (((((rt0.c0) NOTNULL)) NOTNULL)) ORDER BY (((- (rt0.c1))) BETWEEN (0.3402382383532525) AND (IFNULL(rt0.c1, rt0.c2))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOTNULL)) NOTNULL)) ORDER BY ((((rt0.c2)<(rt0.c4)))OR(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)) ASC;
SELECT MAX(rt0.c1) FROM rt0 WHERE (0.9259177911575226);
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (0.9259177911575226) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)-(LIKELY(rt0.c3))));
SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)-(LIKELY(rt0.c3))))AND(CASE WHEN rt0.c1 THEN NULL COLLATE RTRIM ELSE rt0.c4 END))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (HEX(((rt0.c1)>=(rt0.c4))));
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)-(LIKELY(rt0.c3))));
SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)-(LIKELY(rt0.c3))))AND(CASE WHEN rt0.c1 THEN NULL COLLATE RTRIM ELSE rt0.c4 END))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (HEX(((rt0.c1)>=(rt0.c4))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (LIKELIHOOD(rt0.c0, rt0.c3)) AND ((((rt0.c3))<((rt0.c3))))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (LIKELIHOOD(rt0.c0, rt0.c3)) AND ((((rt0.c3))<((rt0.c3)))))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CASE LIKELY(rt0.c0)  WHEN (((rt0.c4, rt0.c1, -591352603, NULL, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c3)) AND ((rt0.c4, rt0.c3, rt0.c3, rt0.c4, rt0.c2, rt0.c1))) THEN (((rt0.c4, 0.19983168132506135, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, NULL, rt0.c2, rt0.c1))) WHEN json(rt0.c4) THEN rt0.c3 COLLATE BINARY WHEN rt0.c3 THEN CAST(rt0.c1 AS TEXT) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c3)))AND(((rt0.c1)GLOB(rt0.c0)))))OR((~ (rt0.c2))))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c3)))AND(((rt0.c1)GLOB(rt0.c0)))))OR((~ (rt0.c2))))) ORDER BY rt0.c1 DESC  NULLS LAST LIMIT 2 INTERSECT SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c3))) IN ())) ORDER BY rt0.c1 DESC  NULLS LAST LIMIT 0X2;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (((((rt0.c2)%(rt0.c0))) IS FALSE));
SELECT MIN(rt0.c2) FROM rt0 WHERE (((((((rt0.c2)%(rt0.c0))) IS FALSE))AND(CAST(((rt0.c3)OR(rt0.c3)) AS BLOB)))) ORDER BY ((rt0.c4) NOTNULL) COLLATE RTRIM  NULLS LAST, ((rt0.c1 COLLATE RTRIM)|(((rt0.c1) NOT NULL)))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT MIN(rt0.c2) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c4) NOTNULL) COLLATE RTRIM  NULLS LAST, ((rt0.c1 COLLATE RTRIM)|(((rt0.c1) NOT NULL)))  NULLS FIRST LIMIT 0x1;
SELECT * FROM rt0 WHERE (((rt0.c3)+(((rt0.c3)<<(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)+(((rt0.c3)<<(rt0.c2)))))AND(((rt0.c0 COLLATE RTRIM) BETWEEN ((rt0.c2 IN (rt0.c3, rt0.c0))) AND (COALESCE(rt0.c4, -1.893339925E9)))))) ORDER BY ((rt0.c0 COLLATE RTRIM)GLOB(CAST(rt0.c1 AS INTEGER))) DESC, LIKELY(DISTINCT ((((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(x'88450a')))AND(rt0.c3)))  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM rt0 WHERE (0.35722344418140595) ORDER BY ((rt0.c0 COLLATE RTRIM)GLOB(CAST(rt0.c1 AS INTEGER))) DESC, LIKELY(DISTINCT ((((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(x'88450a')))AND(rt0.c3)))  NULLS LAST LIMIT 0;
SELECT * FROM rt0 WHERE (((rt0.c3)+(((rt0.c3)<<(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)+(((rt0.c3)<<(rt0.c2)))))AND(((rt0.c0 COLLATE RTRIM) BETWEEN ((rt0.c2 IN (rt0.c3, rt0.c0))) AND (COALESCE(rt0.c4, -1.893339925E9)))))) ORDER BY ((rt0.c0 COLLATE RTRIM)GLOB(CAST(rt0.c1 AS INTEGER))) DESC, LIKELY(DISTINCT ((((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(x'88450a')))AND(rt0.c3)))  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM rt0 WHERE (0.35722344418140595) ORDER BY ((rt0.c0 COLLATE RTRIM)GLOB(CAST(rt0.c1 AS INTEGER))) DESC, LIKELY(DISTINCT ((((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(x'88450a')))AND(rt0.c3)))  NULLS LAST LIMIT 0;
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)&((rt0.c4 IN (NULL)))) DESC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))AND((rt0.c3 IN ()))))OR((- (rt0.c1))))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)&((rt0.c4 IN (NULL)))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)&((rt0.c4 IN (NULL)))) DESC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))AND((rt0.c3 IN ()))))OR((- (rt0.c1))))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)&((rt0.c4 IN (NULL)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ('*nt/mx]f唵' IN ()) THEN UPPER(DISTINCT rt0.c2) ELSE ((rt0.c0) ISNULL) END);
SELECT * FROM rt0 WHERE (CASE WHEN ('*nt/mx]f唵' IN ()) THEN UPPER(DISTINCT rt0.c2) ELSE ((rt0.c0) ISNULL) END) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ('*nt/mx]f唵' IN ()) THEN UPPER(DISTINCT rt0.c2) ELSE ((rt0.c0) ISNULL) END);
SELECT * FROM rt0 WHERE (CASE WHEN ('*nt/mx]f唵' IN ()) THEN UPPER(DISTINCT rt0.c2) ELSE ((rt0.c0) ISNULL) END) LIMIT 1;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) BETWEEN ('FZ''xqr') AND (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END))) ORDER BY ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c3))) ISNULL) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) BETWEEN ('FZ''xqr') AND (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END))) ORDER BY MAX(((-1.477424952E9) NOT BETWEEN ('-974234847') AND (rt0.c2)), ((rt0.c4)*(rt0.c4)), ((rt0.c4) NOTNULL), ((rt0.c4)||(rt0.c2))) LIMIT 0X0;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE BINARY);
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE BINARY) LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (((((rt0.c2) IS TRUE)) IS FALSE)) LIMIT 0x1;
SELECT * FROM rt0 WHERE (UNLIKELY(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT DISTINCT * FROM rt0 WHERE (((UNLIKELY(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))AND(SQLITE_COMPILEOPTION_USED(rt0.c4) COLLATE NOCASE))) ORDER BY (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))AND(rt0.c4)))OR((rt0.c4 IN (NULL, rt0.c3)))) ASC, LIKELIHOOD((~ (NULL)), CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END)  NULLS FIRST LIMIT 1;
SELECT * FROM rt0 WHERE (UNLIKELY(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT DISTINCT * FROM rt0 WHERE (((UNLIKELY(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))AND(SQLITE_COMPILEOPTION_USED(rt0.c4) COLLATE NOCASE))) ORDER BY (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))AND(rt0.c4)))OR((rt0.c4 IN (NULL, rt0.c3)))) ASC, LIKELIHOOD((~ (NULL)), CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END)  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (0.006550762704542579);
SELECT ALL * FROM rt0 WHERE (0.006550762704542579) ORDER BY ((((TOTAL_CHANGES())AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1)<=(rt0.c2))))  NULLS LAST, ((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))>=(((NULL) BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS LAST, (NOT ((((((((((('1525876419')AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c1)))) ASC INTERSECT SELECT * FROM rt0 WHERE ((rt0.c3 COLLATE NOCASE IN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((((TOTAL_CHANGES())AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1)<=(rt0.c2))))  NULLS LAST, ((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))>=(((NULL) BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS LAST, (NOT ((((((((((('1525876419')AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c1)))) ASC;
SELECT ALL * FROM rt0 WHERE (0.006550762704542579);
SELECT ALL * FROM rt0 WHERE (0.006550762704542579) ORDER BY ((((TOTAL_CHANGES())AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1)<=(rt0.c2))))  NULLS LAST, ((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))>=(((NULL) BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS LAST, (NOT ((((((((((('1525876419')AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c1)))) ASC INTERSECT SELECT * FROM rt0 WHERE ((rt0.c3 COLLATE NOCASE IN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((((TOTAL_CHANGES())AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1)<=(rt0.c2))))  NULLS LAST, ((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))>=(((NULL) BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS LAST, (NOT ((((((((((('1525876419')AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c1)))) ASC;
SELECT * FROM rt0 WHERE (((x'') BETWEEN (((rt0.c0)*(rt0.c4))) AND ('275607653'))) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.5418946909131519 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END  WHEN (rt0.c4 IN (0.5503813991036502)) THEN (rt0.c1 IN ()) WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN x'' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END THEN (0.05147568335182329 IN ()) ELSE (rt0.c2 IN ()) END  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((x'') BETWEEN (((rt0.c0)*(rt0.c4))) AND ('275607653'))) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.5418946909131519 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END  WHEN (rt0.c4 IN (0.5503813991036502)) THEN (rt0.c1 IN ()) WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN x'' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END THEN (0.05147568335182329 IN ()) ELSE (rt0.c2 IN ()) END  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((x'') BETWEEN (((rt0.c0)*(rt0.c4))) AND ('275607653'))) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.5418946909131519 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END  WHEN (rt0.c4 IN (0.5503813991036502)) THEN (rt0.c1 IN ()) WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN x'' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END THEN (0.05147568335182329 IN ()) ELSE (rt0.c2 IN ()) END  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((x'') BETWEEN (((rt0.c0)*(rt0.c4))) AND ('275607653'))) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.5418946909131519 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END  WHEN (rt0.c4 IN (0.5503813991036502)) THEN (rt0.c1 IN ()) WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN x'' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END THEN (0.05147568335182329 IN ()) ELSE (rt0.c2 IN ()) END  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4)+(rt0.c3)) AS TEXT)) ORDER BY CAST(((rt0.c0)LIKE(rt0.c3)) AS NUMERIC) ASC, ((LIKE('', rt0.c3)) NOT BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (CAST(rt0.c4 AS BLOB)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((CAST(((rt0.c4)+(rt0.c3)) AS TEXT))AND(rt0.c2))) ORDER BY ((((rt0.c0)<<(rt0.c2)))LIKE((rt0.c0 IN ())))  NULLS LAST, '0.041433903950121476' INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (((HEX(rt0.c4)) IS FALSE)) ORDER BY ((((rt0.c0)<<(rt0.c2)))LIKE((rt0.c0 IN ())))  NULLS LAST, '0.041433903950121476';
SELECT MAX(rt0.c0) FROM rt0 WHERE (PRINTF((((rt0.c3, rt0.c0, rt0.c1))>=((rt0.c0, rt0.c4, rt0.c0))), ((NULL)GLOB(rt0.c0)))) ORDER BY ((rt0.c2) IS TRUE) COLLATE RTRIM ASC, ((((((((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)AND(rt0.c1)))OR(x'')))AND((((rt0.c2, rt0.c1, rt0.c4, rt0.c2, rt0.c2)) BETWEEN ((rt0.c4, x'ce', -249913950, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2, rt0.c1, 0.6329431460905375))))))AND(((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))) DESC;
SELECT MAX(rt0.c0) FROM rt0 WHERE (((PRINTF((((rt0.c3, rt0.c0, rt0.c1))>=((rt0.c0, rt0.c4, rt0.c0))), ((NULL)GLOB(rt0.c0))))AND((((((rt0.c3, rt0.c2))>((rt0.c4, rt0.c0))))==(((0x186d3731)IS NOT(rt0.c2))))))) ORDER BY ((rt0.c2) IS TRUE) COLLATE RTRIM ASC, ((((((((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)AND(rt0.c1)))OR(x'')))AND((((rt0.c2, rt0.c1, rt0.c4, rt0.c2, rt0.c2)) BETWEEN ((rt0.c4, x'ce', -249913950, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2, rt0.c1, 0.6329431460905375))))))AND(((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))) DESC LIMIT 1;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (rt0.c4) ORDER BY CAST(rt0.c3 AS REAL) DESC;
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (rt0.c4) ORDER BY CAST(rt0.c3 AS REAL) DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) NOT NULL))>=(((rt0.c4) ISNULL)))) ORDER BY rt0.c2 DESC  NULLS LAST, (((NOT (rt0.c1))) NOT BETWEEN ((rt0.c1 IN ())) AND (CAST(rt0.c2 AS BLOB))) DESC, (+ (rt0.c4)) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c4) NOT NULL))>=(((rt0.c4) ISNULL)))) ORDER BY rt0.c2 DESC  NULLS LAST, (((NOT (rt0.c1))) NOT BETWEEN ((rt0.c1 IN ())) AND (CAST(rt0.c2 AS BLOB))) DESC, (+ (rt0.c4)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) NOT NULL))>=(((rt0.c4) ISNULL)))) ORDER BY rt0.c2 DESC  NULLS LAST, (((NOT (rt0.c1))) NOT BETWEEN ((rt0.c1 IN ())) AND (CAST(rt0.c2 AS BLOB))) DESC, (+ (rt0.c4)) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c4) NOT NULL))>=(((rt0.c4) ISNULL)))) ORDER BY rt0.c2 DESC  NULLS LAST, (((NOT (rt0.c1))) NOT BETWEEN ((rt0.c1 IN ())) AND (CAST(rt0.c2 AS BLOB))) DESC, (+ (rt0.c4)) DESC  NULLS FIRST;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS INTEGER)) ORDER BY (('1') NOT NULL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((CAST(CAST(rt0.c1 AS TEXT) AS INTEGER))AND((((+ (rt0.c3)))=(rt0.c2))))) ORDER BY (('1') NOT NULL) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0x2 INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((+ (x'de')) IN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (('1') NOT NULL) COLLATE RTRIM ASC  NULLS FIRST LIMIT 2;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (rt0.c1) ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (((rt0.c3)>>(rt0.c4))) AND (rt0.c4))  NULLS FIRST;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((rt0.c1)AND(((((((((((IFNULL(DISTINCT rt0.c0, '2106060077'))AND((~ (rt0.c3)))))OR(((rt0.c1)-(rt0.c4)))))AND('524079036')))OR((rt0.c1 IN (rt0.c1, rt0.c1)))))OR(rt0.c3 COLLATE RTRIM))))) ORDER BY ((((x'58', rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((x'', rt0.c4, rt0.c2))) IN (((((rt0.c1)AND(NULL)))OR(rt0.c0)))), (((((((rt0.c0 IN (rt0.c1)))OR(rt0.c3)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)))))OR(rt0.c4)) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((DATETIME(rt0.c3, rt0.c2, rt0.c2, rt0.c0, rt0.c1))<<(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<>(0.6329431460905375)) ASC  NULLS LAST, UPPER(NULL COLLATE RTRIM), ((((((((rt0.c3)<(rt0.c2)))OR(rt0.c0)))AND(((rt0.c4) NOTNULL))))AND(((rt0.c0)*(rt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((DATETIME(rt0.c3, rt0.c2, rt0.c2, rt0.c0, rt0.c1))<<(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))))AND(TYPEOF(DISTINCT IFNULL(DISTINCT rt0.c2, rt0.c1))))) ORDER BY CAST('-1614554992' COLLATE RTRIM AS BLOB) ASC, ((CASE WHEN rt0.c4 THEN rt0.c2 END)==(CAST(NULL AS NUMERIC))) DESC, ((((x'c8') NOT BETWEEN (rt0.c1) AND (rt0.c3)))/(((rt0.c4)<=(rt0.c1)))) ASC  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)==(rt0.c2)) AS TEXT)) ORDER BY CAST('-1614554992' COLLATE RTRIM AS BLOB) ASC, ((CASE WHEN rt0.c4 THEN rt0.c2 END)=(CAST(NULL AS NUMERIC))) DESC, ((((x'c8') NOT BETWEEN (rt0.c1) AND (rt0.c3)))/(((rt0.c4)<=(rt0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) NOT BETWEEN (((((rt0.c2)AND(rt0.c4)))AND(rt0.c0))) AND (rt0.c4)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3 COLLATE BINARY) NOT BETWEEN (((((rt0.c2)AND(rt0.c4)))AND(rt0.c0))) AND (rt0.c4)))AND(rt0.c4)));
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) NOT BETWEEN (((((rt0.c2)AND(rt0.c4)))AND(rt0.c0))) AND (rt0.c4)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3 COLLATE BINARY) NOT BETWEEN (((((rt0.c2)AND(rt0.c4)))AND(rt0.c0))) AND (rt0.c4)))AND(rt0.c4)));
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (((((rt0.c3)>=(rt0.c1)))>>((NOT (rt0.c0)))));
SELECT MIN(rt0.c0) FROM rt0 WHERE (((((((rt0.c3)>=(rt0.c1)))>>((NOT (rt0.c0)))))AND(((LIKELY(rt0.c4))>=(((rt0.c4)>=(0.2866925974160843))))))) INTERSECT SELECT MIN(rt0.c0) FROM rt0 WHERE (((((-1956352262)*(rt0.c2)))-(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT MAX(rt0.c1) FROM rt0 WHERE (IFNULL(CAST(rt0.c1 AS TEXT), (rt0.c1 IN (x'0648', rt0.c0)))) ORDER BY CASE (- (rt0.c0))  WHEN TYPEOF(DISTINCT rt0.c2) THEN ((x'38') IS FALSE) WHEN CASE WHEN rt0.c3 THEN rt0.c2 END THEN rt0.c4 COLLATE NOCASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN rt0.c3 COLLATE BINARY WHEN rt0.c0 COLLATE NOCASE THEN 0.39122442847687167 WHEN ((0.6675364535288844) NOT NULL) THEN (+ (rt0.c3)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN rt0.c4 COLLATE BINARY WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)) THEN ((rt0.c1) NOT NULL) ELSE ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) END, ((rt0.c1)-(rt0.c1 COLLATE RTRIM))  NULLS LAST, (((rt0.c1 IN (rt0.c0, rt0.c3))) NOT BETWEEN ((0.12568823631040027 IN ())) AND ((- (rt0.c2))));
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((IFNULL(CAST(rt0.c1 AS TEXT), (rt0.c1 IN (x'0648', rt0.c0))))AND((NOT (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))))))) ORDER BY (NOT (rt0.c1)) COLLATE RTRIM  NULLS LAST, (~ (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 ELSE 0.041433903950121476 END)) DESC INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((rt0.c4 COLLATE BINARY) NOT NULL)) ORDER BY (NOT (rt0.c1)) COLLATE RTRIM  NULLS LAST, (~ (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 ELSE 0.041433903950121476 END)) DESC;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE ((((((x'435d', rt0.c1))>=((rt0.c0, rt0.c2)))) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (((rt0.c1) IS TRUE))));
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE ((((((((x'435d', rt0.c1))>=((rt0.c0, rt0.c2)))) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (((rt0.c1) IS TRUE))))AND(CAST(((0.24437310928445277) NOT BETWEEN (rt0.c2) AND (rt0.c3)) AS BLOB)))) LIMIT 3;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c4 AS REAL) AS INTEGER));
SELECT ALL * FROM rt0 WHERE (((CAST(CAST(rt0.c4 AS REAL) AS INTEGER))AND((~ ((NOT (rt0.c4))))))) LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c4 AS BLOB)) ISNULL)) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c4 AS REAL) AS INTEGER));
SELECT ALL * FROM rt0 WHERE (((CAST(CAST(rt0.c4 AS REAL) AS INTEGER))AND((~ ((NOT (rt0.c4))))))) LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c4 AS BLOB)) ISNULL)) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) ORDER BY ((rt0.c4 COLLATE BINARY)>>(rt0.c4)) ASC, CAST(CAST(rt0.c0 AS BLOB) AS TEXT)  NULLS LAST, rt0.c2 DESC;
SELECT * FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT) IN ()))AND(''))) ORDER BY ((UNICODE(rt0.c4)) BETWEEN (((rt0.c0)*(rt0.c3))) AND (CASE WHEN rt0.c3 THEN rt0.c4 ELSE 'Yp' END)) ASC LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (json(rt0.c0)) ORDER BY ((UNICODE(rt0.c4)) BETWEEN (((rt0.c0)*(rt0.c3))) AND (CASE WHEN rt0.c3 THEN rt0.c4 ELSE 'Yp' END)) ASC LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) ORDER BY ((rt0.c4 COLLATE BINARY)>>(rt0.c4)) ASC, CAST(CAST(rt0.c0 AS BLOB) AS TEXT)  NULLS LAST, rt0.c2 DESC;
SELECT * FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT) IN ()))AND(''))) ORDER BY ((UNICODE(rt0.c4)) BETWEEN (((rt0.c0)*(rt0.c3))) AND (CASE WHEN rt0.c3 THEN rt0.c4 ELSE 'Yp' END)) ASC LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (json(rt0.c0)) ORDER BY ((UNICODE(rt0.c4)) BETWEEN (((rt0.c0)*(rt0.c3))) AND (CASE WHEN rt0.c3 THEN rt0.c4 ELSE 'Yp' END)) ASC LIMIT 0;
SELECT MAX(rt0.c2) FROM rt0 WHERE ((((rt0.c1))>((rt0.c3))) COLLATE RTRIM);
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE ((((((rt0.c1))>((rt0.c3))) COLLATE RTRIM)AND(CASE WHEN rt0.c4 THEN SQLITE_COMPILEOPTION_GET(rt0.c0) WHEN ((((rt0.c4)OR('1525876419')))AND(rt0.c4)) THEN (~ (rt0.c0)) WHEN (+ (rt0.c0)) THEN CAST(rt0.c1 AS BLOB) END))) LIMIT 0X1 INTERSECT SELECT MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c1) IS TRUE))*(((rt0.c1)|(rt0.c0))))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1 IN ()))OR(NULL)))OR(((rt0.c1)IS(rt0.c3)))));
SELECT * FROM rt0 WHERE ((((((rt0.c1 IN ()))OR(NULL)))OR(((rt0.c1)IS(rt0.c3))))) ORDER BY ((((rt0.c0)GLOB(rt0.c4))) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS FIRST, (((x'c06a')GLOB(rt0.c3)) IN ((rt0.c1 IN (rt0.c3)))) DESC, '1089252062'  NULLS LAST LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)GLOB(rt0.c4))) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS FIRST, (((x'c06a')GLOB(rt0.c3)) IN ((rt0.c1 IN (rt0.c3)))) DESC, '1089252062'  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1 IN ()))OR(NULL)))OR(((rt0.c1)IS(rt0.c3)))));
SELECT * FROM rt0 WHERE ((((((rt0.c1 IN ()))OR(NULL)))OR(((rt0.c1)IS(rt0.c3))))) ORDER BY ((((rt0.c0)GLOB(rt0.c4))) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS FIRST, (((x'c06a')GLOB(rt0.c3)) IN ((rt0.c1 IN (rt0.c3)))) DESC, '1089252062'  NULLS LAST LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)GLOB(rt0.c4))) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS FIRST, (((x'c06a')GLOB(rt0.c3)) IN ((rt0.c1 IN (rt0.c3)))) DESC, '1089252062'  NULLS LAST LIMIT 0X1;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (HEX(DISTINCT (((rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c4)))));
SELECT MIN(rt0.c2) FROM rt0 WHERE (HEX(DISTINCT (((rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c4))))) LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c3)OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR((- (rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN NULL END)))AND(((rt0.c0)||(rt0.c1)))))AND(((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c4)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c3)OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR((- (rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN NULL END)))AND(((rt0.c0)||(rt0.c1)))))AND(((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c4))))) ORDER BY LIKELY(((0.20414887539015325)<=(rt0.c1))) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END) NOT NULL) DESC  NULLS FIRST, '?' LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))+((((rt0.c3, rt0.c4)) NOT BETWEEN ((-880972502, rt0.c2)) AND ((rt0.c3, rt0.c4)))))) ORDER BY LIKELY(((0.20414887539015325)<=(rt0.c1))) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END) NOT NULL) DESC  NULLS FIRST, '?' LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c3)OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR((- (rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN NULL END)))AND(((rt0.c0)||(rt0.c1)))))AND(((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c4)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c3)OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR((- (rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN NULL END)))AND(((rt0.c0)||(rt0.c1)))))AND(((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c4))))) ORDER BY LIKELY(((0.20414887539015325)<=(rt0.c1))) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END) NOT NULL) DESC  NULLS FIRST, '?' LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))+((((rt0.c3, rt0.c4)) NOT BETWEEN ((-880972502, rt0.c2)) AND ((rt0.c3, rt0.c4)))))) ORDER BY LIKELY(((0.20414887539015325)<=(rt0.c1))) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END) NOT NULL) DESC  NULLS FIRST, '?' LIMIT 0;
SELECT * FROM rt0 WHERE ((- (0.9213598487965424)));
SELECT DISTINCT * FROM rt0 WHERE ((- (0.9213598487965424))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) LIMIT 2;
SELECT * FROM rt0 WHERE ((- (0.9213598487965424)));
SELECT DISTINCT * FROM rt0 WHERE ((- (0.9213598487965424))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) LIMIT 2;
SELECT COUNT(*) FROM rt0 WHERE (UPPER(rt0.c2) COLLATE BINARY) ORDER BY (CAST(NULL AS NUMERIC) IN ());
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(rt0.c2) COLLATE BINARY) ORDER BY (CAST(NULL AS NUMERIC) IN ()) LIMIT 1;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)=(rt0.c3)) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)=(rt0.c3)) AS INTEGER)) LIMIT 0 INTERSECT SELECT COUNT(*) FROM rt0 WHERE (HEX(DISTINCT ((rt0.c0) NOTNULL))) LIMIT 0;
SELECT * FROM rt0 WHERE (((LOWER(rt0.c0)) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE -1.237334296E9 END) AND (CAST(rt0.c2 AS BLOB))));
SELECT * FROM rt0 WHERE (((LOWER(rt0.c0)) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE -1.237334296E9 END) AND (CAST(rt0.c2 AS BLOB)))) LIMIT 0;
SELECT * FROM rt0 WHERE (((LOWER(rt0.c0)) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE -1.237334296E9 END) AND (CAST(rt0.c2 AS BLOB))));
SELECT * FROM rt0 WHERE (((LOWER(rt0.c0)) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE -1.237334296E9 END) AND (CAST(rt0.c2 AS BLOB)))) LIMIT 0;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) ISNULL));
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) ISNULL)) ORDER BY ((((rt0.c3)OR(rt0.c1)))+(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) DESC LIMIT 2 INTERSECT SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (rt0.c3) ORDER BY ((((rt0.c3)OR(rt0.c1)))+(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) DESC LIMIT 0X2;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 END) NOT NULL)) ORDER BY ((((rt0.c2 COLLATE RTRIM)OR(((rt0.c1) BETWEEN (0.5352950627620193) AND (rt0.c1)))))AND(rt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 END) NOT NULL)) ORDER BY ((((rt0.c2 COLLATE RTRIM)OR(((rt0.c1) BETWEEN (0.5352950627620193) AND (rt0.c1)))))AND(rt0.c1 COLLATE NOCASE))  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c4 IN (rt0.c4, rt0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((((rt0.c2 COLLATE RTRIM)OR(((rt0.c1) BETWEEN (0.5352950627620193) AND (rt0.c1)))))AND(rt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT MIN(rt0.c1) FROM rt0 WHERE ((((('F')>>(rt0.c4))) NOTNULL)) ORDER BY ((TRIM(DISTINCT rt0.c2, rt0.c1)) IS TRUE) DESC, ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'1316ad' WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END)OR('-199072782')))AND(((rt0.c1) BETWEEN (rt0.c0) AND (x'51'))))  NULLS LAST;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((((('F')>>(rt0.c4))) NOTNULL)) ORDER BY ((TRIM(DISTINCT rt0.c2, rt0.c1)) IS TRUE) DESC, ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'1316ad' WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END)OR('-199072782')))AND(((rt0.c1) BETWEEN (rt0.c0) AND (x'51'))))  NULLS LAST LIMIT 0x0;
SELECT MAX(rt0.c3) FROM rt0 WHERE (((((rt0.c4) IS FALSE))|((rt0.c4 IN ())))) ORDER BY (((x'3c028b' IN ('BBV6u(||떙'))) IS FALSE) ASC;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((rt0.c4) IS FALSE))|((rt0.c4 IN ())))) ORDER BY (((x'3c028b' IN ('BBV6u(||떙'))) IS FALSE) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END)) AND ((rt0.c2 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END)) AND ((rt0.c2 COLLATE RTRIM))))AND(((rt0.c4 COLLATE BINARY) NOT NULL)))) ORDER BY LIKELY(('' IN ()))  NULLS LAST LIMIT 0X1;
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c4, rt0.c0, rt0.c0))<((x'', rt0.c1, x'9af9', rt0.c0)))) BETWEEN (((rt0.c1)GLOB(rt0.c0))) AND (((rt0.c0)GLOB(rt0.c0)))));
SELECT * FROM rt0 WHERE ((((((((rt0.c0, rt0.c4, rt0.c0, rt0.c0))<((x'', rt0.c1, x'9af9', rt0.c0)))) BETWEEN (((rt0.c1)GLOB(rt0.c0))) AND (((rt0.c0)GLOB(rt0.c0)))))AND(CASE ((0.9073053028422443)|(rt0.c1))  WHEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN x'' THEN x'' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END THEN CAST(rt0.c0 AS BLOB) WHEN (rt0.c1 IN ()) THEN ((rt0.c1)<(rt0.c1)) WHEN CAST(rt0.c2 AS REAL) THEN rt0.c1 COLLATE BINARY ELSE ((rt0.c3)AND(rt0.c1)) END))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1)) AS TEXT)  NULLS FIRST, CASE rt0.c4 COLLATE NOCASE  WHEN (- (rt0.c2)) THEN (rt0.c0 IN ('')) END, ((((((CAST(rt0.c3 AS REAL))AND((rt0.c4 IN ()))))AND(((rt0.c4)GLOB(rt0.c1)))))OR(((rt0.c0) NOTNULL))) ASC, '' DESC LIMIT 0x2 INTERSECT SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1 COLLATE NOCASE)OR(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)))))OR((+ (rt0.c4)))))AND(((rt0.c3) NOT NULL))))AND(((rt0.c1)|(rt0.c4)))))AND(1436703206))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1)) AS TEXT)  NULLS FIRST, CASE rt0.c4 COLLATE NOCASE  WHEN (- (rt0.c2)) THEN (rt0.c0 IN ('')) END, ((((((CAST(rt0.c3 AS REAL))AND((rt0.c4 IN ()))))AND(((rt0.c4)GLOB(rt0.c1)))))OR(((rt0.c0) NOTNULL))) ASC, '' DESC LIMIT 2;
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c4, rt0.c0, rt0.c0))<((x'', rt0.c1, x'9af9', rt0.c0)))) BETWEEN (((rt0.c1)GLOB(rt0.c0))) AND (((rt0.c0)GLOB(rt0.c0)))));
SELECT * FROM rt0 WHERE ((((((((rt0.c0, rt0.c4, rt0.c0, rt0.c0))<((x'', rt0.c1, x'9af9', rt0.c0)))) BETWEEN (((rt0.c1)GLOB(rt0.c0))) AND (((rt0.c0)GLOB(rt0.c0)))))AND(CASE ((0.9073053028422443)|(rt0.c1))  WHEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN x'' THEN x'' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END THEN CAST(rt0.c0 AS BLOB) WHEN (rt0.c1 IN ()) THEN ((rt0.c1)<(rt0.c1)) WHEN CAST(rt0.c2 AS REAL) THEN rt0.c1 COLLATE BINARY ELSE ((rt0.c3)AND(rt0.c1)) END))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1)) AS TEXT)  NULLS FIRST, CASE rt0.c4 COLLATE NOCASE  WHEN (- (rt0.c2)) THEN (rt0.c0 IN ('')) END, ((((((CAST(rt0.c3 AS REAL))AND((rt0.c4 IN ()))))AND(((rt0.c4)GLOB(rt0.c1)))))OR(((rt0.c0) NOTNULL))) ASC, '' DESC LIMIT 0x2 INTERSECT SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1 COLLATE NOCASE)OR(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)))))OR((+ (rt0.c4)))))AND(((rt0.c3) NOT NULL))))AND(((rt0.c1)|(rt0.c4)))))AND(1436703206))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1)) AS TEXT)  NULLS FIRST, CASE rt0.c4 COLLATE NOCASE  WHEN (- (rt0.c2)) THEN (rt0.c0 IN ('')) END, ((((((CAST(rt0.c3 AS REAL))AND((rt0.c4 IN ()))))AND(((rt0.c4)GLOB(rt0.c1)))))OR(((rt0.c0) NOTNULL))) ASC, '' DESC LIMIT 2;
SELECT MAX(rt0.c3) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2)))>=(LIKELY(rt0.c3)))) ORDER BY ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))GLOB('-226105798'));
SELECT MAX(rt0.c3) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2)))>(LIKELY(rt0.c3)))) ORDER BY ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))GLOB('-226105798'));
SELECT * FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) IN (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 0.2624267090094461 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) IN (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 0.2624267090094461 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(((json_remove(rt0.c2, 0.1394638075611907, rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN (rt0.c2) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))))))) INTERSECT SELECT ALL * FROM rt0 WHERE (0.38549964305779516);
SELECT * FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) IN (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 0.2624267090094461 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) IN (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 0.2624267090094461 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(((json_remove(rt0.c2, 0.1394638075611907, rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN (rt0.c2) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))))))) INTERSECT SELECT ALL * FROM rt0 WHERE (0.38549964305779516);
SELECT MIN(rt0.c2) FROM rt0 WHERE ((+ (x'9d')));
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE ((+ (x'9d')));
SELECT * FROM rt0 WHERE ((((rt0.c4))>=((rt0.c2))) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE ((((rt0.c4))>=((rt0.c2))) COLLATE BINARY) LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE (COALESCE(CASE WHEN rt0.c3 THEN rt0.c0 END, (NOT (rt0.c1)))) LIMIT 2;
SELECT * FROM rt0 WHERE ((((rt0.c4))>=((rt0.c2))) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE ((((rt0.c4))>=((rt0.c2))) COLLATE BINARY) LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE (COALESCE(CASE WHEN rt0.c3 THEN rt0.c0 END, (NOT (rt0.c1)))) LIMIT 2;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT MIN(rt0.c2) FROM rt0 WHERE (NULL COLLATE BINARY);
SELECT MIN(rt0.c2) FROM rt0 WHERE (((NULL COLLATE BINARY)AND((((((rt0.c3) NOT BETWEEN (rt0.c0) AND ('1452718832'))))<(((((rt0.c2))>=((rt0.c4))))))))) ORDER BY ((rt0.c3) NOT NULL)  NULLS LAST;
SELECT * FROM rt0 WHERE ((((NULL, rt0.c4, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((NULL, rt0.c4, rt0.c2))) COLLATE RTRIM) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((((NULL, rt0.c4, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((NULL, rt0.c4, rt0.c2))) COLLATE RTRIM)AND((((((((((rt0.c4 IN ()))AND(CAST(rt0.c0 AS TEXT))))AND(0.9946472276362125)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(rt0.c1 COLLATE NOCASE))))) ORDER BY rt0.c0 DESC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((UPPER(DISTINCT rt0.c4) IN ((((rt0.c3, rt0.c4, rt0.c2, rt0.c3, rt0.c2, rt0.c1, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c4))), ((((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c2))))) ORDER BY rt0.c0 DESC  NULLS LAST LIMIT 0X2;
SELECT * FROM rt0 WHERE ((((NULL, rt0.c4, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((NULL, rt0.c4, rt0.c2))) COLLATE RTRIM) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((((NULL, rt0.c4, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((NULL, rt0.c4, rt0.c2))) COLLATE RTRIM)AND((((((((((rt0.c4 IN ()))AND(CAST(rt0.c0 AS TEXT))))AND(0.9946472276362125)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(rt0.c1 COLLATE NOCASE))))) ORDER BY rt0.c0 DESC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((UPPER(DISTINCT rt0.c4) IN ((((rt0.c3, rt0.c4, rt0.c2, rt0.c3, rt0.c2, rt0.c1, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c4))), ((((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c2))))) ORDER BY rt0.c0 DESC  NULLS LAST LIMIT 0X2;
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN ((rt0.c0) ISNULL) END) ORDER BY ((rt0.c0)>>(rt0.c0)) COLLATE BINARY ASC, (((rt0.c3 IN (rt0.c3))) NOTNULL) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN ((rt0.c0) ISNULL) END)AND((- ((NOT (rt0.c4))))))) ORDER BY ((rt0.c0)>>(rt0.c0)) COLLATE BINARY ASC, (((rt0.c3 IN (rt0.c3))) NOTNULL) ASC  NULLS LAST INTERSECT SELECT ALL * FROM rt0 WHERE (((rt0.c4) NOT BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c4)) AND (rt0.c0 COLLATE RTRIM))) ORDER BY ((rt0.c0)>>(rt0.c0)) COLLATE BINARY ASC, (((rt0.c3 IN (rt0.c3))) NOTNULL) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN ((rt0.c0) ISNULL) END) ORDER BY ((rt0.c0)>>(rt0.c0)) COLLATE BINARY ASC, (((rt0.c3 IN (rt0.c3))) NOTNULL) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN ((rt0.c0) ISNULL) END)AND((- ((NOT (rt0.c4))))))) ORDER BY ((rt0.c0)>>(rt0.c0)) COLLATE BINARY ASC, (((rt0.c3 IN (rt0.c3))) NOTNULL) ASC  NULLS LAST INTERSECT SELECT ALL * FROM rt0 WHERE (((rt0.c4) NOT BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c4)) AND (rt0.c0 COLLATE RTRIM))) ORDER BY ((rt0.c0)>>(rt0.c0)) COLLATE BINARY ASC, (((rt0.c3 IN (rt0.c3))) NOTNULL) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c4, rt0.c2, rt0.c4, rt0.c0)) NOT BETWEEN ((CAST(rt0.c4 AS REAL), (((rt0.c1))<>((rt0.c4))), (rt0.c1 IN (rt0.c2, NULL)), ((rt0.c0) ISNULL))) AND (((((rt0.c3, rt0.c0)) BETWEEN ((rt0.c2, rt0.c4)) AND ((rt0.c0, rt0.c4))), (rt0.c1 IN ()), CASE rt0.c3  WHEN 0.5707116589789466 THEN rt0.c4 ELSE rt0.c1 END, 0.4979620207144305 COLLATE BINARY))));
SELECT * FROM rt0 WHERE ((((rt0.c4, rt0.c2, rt0.c4, rt0.c0)) NOT BETWEEN ((CAST(rt0.c4 AS REAL), (((rt0.c1))<>((rt0.c4))), (rt0.c1 IN (rt0.c2, NULL)), ((rt0.c0) ISNULL))) AND (((((rt0.c3, rt0.c0)) BETWEEN ((rt0.c2, rt0.c4)) AND ((rt0.c0, rt0.c4))), (rt0.c1 IN ()), CASE rt0.c3  WHEN 0.5707116589789466 THEN rt0.c4 ELSE rt0.c1 END, 0.4979620207144305 COLLATE BINARY)))) LIMIT 0;
SELECT * FROM rt0 WHERE ((((rt0.c4, rt0.c2, rt0.c4, rt0.c0)) NOT BETWEEN ((CAST(rt0.c4 AS REAL), (((rt0.c1))<>((rt0.c4))), (rt0.c1 IN (rt0.c2, NULL)), ((rt0.c0) ISNULL))) AND (((((rt0.c3, rt0.c0)) BETWEEN ((rt0.c2, rt0.c4)) AND ((rt0.c0, rt0.c4))), (rt0.c1 IN ()), CASE rt0.c3  WHEN 0.5707116589789466 THEN rt0.c4 ELSE rt0.c1 END, 0.4979620207144305 COLLATE BINARY))));
SELECT * FROM rt0 WHERE ((((rt0.c4, rt0.c2, rt0.c4, rt0.c0)) NOT BETWEEN ((CAST(rt0.c4 AS REAL), (((rt0.c1))<>((rt0.c4))), (rt0.c1 IN (rt0.c2, NULL)), ((rt0.c0) ISNULL))) AND (((((rt0.c3, rt0.c0)) BETWEEN ((rt0.c2, rt0.c4)) AND ((rt0.c0, rt0.c4))), (rt0.c1 IN ()), CASE rt0.c3  WHEN 0.5707116589789466 THEN rt0.c4 ELSE rt0.c1 END, 0.4979620207144305 COLLATE BINARY)))) LIMIT 0;
SELECT MAX(rt0.c3) FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) IS TRUE)) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) IS TRUE)) ORDER BY NULL DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT MAX(rt0.c3) FROM rt0 WHERE ((~ (CAST(rt0.c1 AS NUMERIC)))) ORDER BY NULL DESC  NULLS FIRST LIMIT 0x1;
SELECT * FROM rt0 WHERE (rt0.c0 COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)AND(TIME(((((rt0.c4)OR(rt0.c0)))OR(rt0.c1)), rt0.c4, ((rt0.c3) NOT NULL))))) LIMIT 0x1;
SELECT * FROM rt0 WHERE (rt0.c0 COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)AND(TIME(((((rt0.c4)OR(rt0.c0)))OR(rt0.c1)), rt0.c4, ((rt0.c3) NOT NULL))))) LIMIT 0x1;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE ((rt0.c3 IN (rt0.c3)) COLLATE NOCASE) ORDER BY (+ (CASE rt0.c0  WHEN rt0.c4 THEN 0.9098461503477276 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) ASC  NULLS LAST, rt0.c2 DESC  NULLS FIRST, (((rt0.c3)IS NOT(rt0.c4)) IN ()) DESC;
SELECT MIN(rt0.c4) FROM rt0 WHERE ((rt0.c3 IN (rt0.c3)) COLLATE NOCASE) ORDER BY CAST(rt0.c1 AS NUMERIC) DESC, ((((((((rt0.c1 COLLATE BINARY)OR(((((rt0.c4)OR(rt0.c4)))OR(x'')))))AND(((((((((((rt0.c4)OR('-858505247')))AND(rt0.c3)))AND(NULL)))OR(rt0.c1)))AND(rt0.c0)))))OR(((((((((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))AND('-1579451077')))))AND(((rt0.c0)/(rt0.c4))))  NULLS LAST LIMIT 0 INTERSECT SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (NULL) ORDER BY CAST(rt0.c1 AS NUMERIC) DESC, ((((((((rt0.c1 COLLATE BINARY)OR(((((rt0.c4)OR(rt0.c4)))OR(x'')))))AND(((((((((((rt0.c4)OR('-858505247')))AND(rt0.c3)))AND(NULL)))OR(rt0.c1)))AND(rt0.c0)))))OR(((((((((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))AND('-1579451077')))))AND(((rt0.c0)/(rt0.c4))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)>>(rt0.c4)))!=((rt0.c4 IN ())))) ORDER BY (+ ((((rt0.c3, rt0.c4, rt0.c3, rt0.c0, rt0.c3))<((rt0.c3, rt0.c1, rt0.c4, rt0.c1, rt0.c4))))) DESC  NULLS FIRST, ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c0)))&(CAST(rt0.c4 AS NUMERIC))) DESC;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)>>(rt0.c4)))<((rt0.c4 IN ()))))AND(((NOT (rt0.c0)) IN (rt0.c4))))) ORDER BY rt0.c0 ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (CAST(rt0.c0 AS REAL)))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)>>(rt0.c4)))!=((rt0.c4 IN ())))) ORDER BY (+ ((((rt0.c3, rt0.c4, rt0.c3, rt0.c0, rt0.c3))<((rt0.c3, rt0.c1, rt0.c4, rt0.c1, rt0.c4))))) DESC  NULLS FIRST, ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c0)))&(CAST(rt0.c4 AS NUMERIC))) DESC;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)>>(rt0.c4)))<((rt0.c4 IN ()))))AND(((NOT (rt0.c0)) IN (rt0.c4))))) ORDER BY rt0.c0 ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ (CAST(rt0.c0 AS REAL)))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (x'');
SELECT DISTINCT * FROM rt0 WHERE (x'') ORDER BY 0.9198046578303558, ((((((rt0.c2)AND(x'')))OR(rt0.c3)))%((((rt0.c4, rt0.c4)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0))))) ASC  NULLS LAST, (((rt0.c2)) BETWEEN (((((NULL)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))) AND ((((rt0.c4)IS NOT(rt0.c4))))) DESC LIMIT 0x1;
SELECT * FROM rt0 WHERE (x'');
SELECT DISTINCT * FROM rt0 WHERE (x'') ORDER BY 0.9198046578303558, ((((((rt0.c2)AND(x'')))OR(rt0.c3)))%((((rt0.c4, rt0.c4)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0))))) ASC  NULLS LAST, (((rt0.c2)) BETWEEN (((((NULL)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))) AND ((((rt0.c4)IS NOT(rt0.c4))))) DESC LIMIT 0x1;
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS BLOB));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS BLOB)) LIMIT 0x0;
SELECT * FROM rt0 WHERE (rt0.c4 COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE BINARY) ORDER BY (((rt0.c3 IN (rt0.c4, rt0.c4))) IS TRUE), rt0.c0  NULLS FIRST LIMIT 0;
SELECT * FROM rt0 WHERE (rt0.c4 COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE BINARY) ORDER BY (((rt0.c3 IN (rt0.c4, rt0.c4))) IS TRUE), rt0.c0  NULLS FIRST LIMIT 0;
SELECT MIN(rt0.c4) FROM rt0 WHERE (((((NULL) ISNULL)) BETWEEN (((rt0.c1)*(rt0.c4))) AND ((- (rt0.c1))))) ORDER BY ((((((rt0.c0 COLLATE NOCASE)AND(rt0.c0)))AND(CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)))OR(((((((rt0.c4)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))) DESC  NULLS FIRST, NULL  NULLS FIRST, ((NULL) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((+ (rt0.c2))))  NULLS LAST;
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (((((((NULL) ISNULL)) BETWEEN (((rt0.c1)*(rt0.c4))) AND ((- (rt0.c1)))))AND(rt0.c3))) ORDER BY ((((((rt0.c0 COLLATE NOCASE)AND(rt0.c0)))AND(CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)))OR(((((((rt0.c4)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))) DESC  NULLS FIRST, NULL  NULLS FIRST, ((NULL) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((+ (rt0.c2))))  NULLS LAST INTERSECT SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (((x'') BETWEEN (rt0.c2) AND (((rt0.c0)IS NOT(rt0.c3))))) ORDER BY ((((((rt0.c0 COLLATE NOCASE)AND(rt0.c0)))AND(CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)))OR(((((((rt0.c4)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))) DESC  NULLS FIRST, NULL  NULLS FIRST, ((NULL) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((+ (rt0.c2))))  NULLS LAST;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE ((((rt0.c1 IN ()))>>((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c4)) AND ((rt0.c1, rt0.c3, rt0.c3))))));
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ((((((rt0.c1 IN ()))>>((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c4)) AND ((rt0.c1, rt0.c3, rt0.c3))))))AND('ᕊ' COLLATE NOCASE))) LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4, ((rt0.c3)||(rt0.c2)), rt0.c0 COLLATE NOCASE))<(((((rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c3))), (rt0.c1 IN (rt0.c1)), rt0.c4)))) ORDER BY ABS(((rt0.c3)<(rt0.c2)))  NULLS LAST, CAST((x'85' IN ()) AS TEXT) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c4, ((rt0.c3)||(rt0.c2)), rt0.c0 COLLATE NOCASE))<(((((rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c3))), (rt0.c1 IN (rt0.c1)), rt0.c4)))) ORDER BY rt0.c3  NULLS FIRST, CASE rt0.c0  WHEN rt0.c0 THEN ((rt0.c3)>=(rt0.c1)) WHEN x'' THEN (((rt0.c0, rt0.c4))==((rt0.c3, ''))) WHEN ((rt0.c0)&(rt0.c3)) THEN (NULL IN (rt0.c1)) ELSE rt0.c4 END DESC, x'10' ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c3  NULLS FIRST, CASE rt0.c0  WHEN rt0.c0 THEN ((rt0.c3)>=(rt0.c1)) WHEN x'' THEN (((rt0.c0, rt0.c4))==((rt0.c3, ''))) WHEN ((rt0.c0)&(rt0.c3)) THEN (NULL IN (rt0.c1)) ELSE rt0.c4 END DESC, x'10' ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4, ((rt0.c3)||(rt0.c2)), rt0.c0 COLLATE NOCASE))<(((((rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c3))), (rt0.c1 IN (rt0.c1)), rt0.c4)))) ORDER BY ABS(((rt0.c3)<(rt0.c2)))  NULLS LAST, CAST((x'85' IN ()) AS TEXT) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c4, ((rt0.c3)||(rt0.c2)), rt0.c0 COLLATE NOCASE))<(((((rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c3))), (rt0.c1 IN (rt0.c1)), rt0.c4)))) ORDER BY rt0.c3  NULLS FIRST, CASE rt0.c0  WHEN rt0.c0 THEN ((rt0.c3)>=(rt0.c1)) WHEN x'' THEN (((rt0.c0, rt0.c4))==((rt0.c3, ''))) WHEN ((rt0.c0)&(rt0.c3)) THEN (NULL IN (rt0.c1)) ELSE rt0.c4 END DESC, x'10' ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c3  NULLS FIRST, CASE rt0.c0  WHEN rt0.c0 THEN ((rt0.c3)>=(rt0.c1)) WHEN x'' THEN (((rt0.c0, rt0.c4))==((rt0.c3, ''))) WHEN ((rt0.c0)&(rt0.c3)) THEN (NULL IN (rt0.c1)) ELSE rt0.c4 END DESC, x'10' ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(((rt0.c1) ISNULL), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((NULLIF(((rt0.c1) ISNULL), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2))))AND(((rt0.c1) NOT NULL)))) LIMIT 0X2 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((('&'))<((NULLIF(DISTINCT rt0.c0, rt0.c0))))) LIMIT 2;
SELECT MIN(rt0.c4) FROM rt0 WHERE (x'') ORDER BY (((~ (rt0.c0)))||(CASE WHEN rt0.c0 THEN rt0.c4 END))  NULLS LAST;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((x'')AND((((rt0.c0, rt0.c4)) BETWEEN (((~ (rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END)) AND (((- (rt0.c3)), CAST(0.024804391620882105 AS INTEGER))))))) ORDER BY rt0.c1  NULLS FIRST, (~ (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c4) ISNULL))) AND ((CHAR(rt0.c1))))) ORDER BY ((((((((rt0.c4)AND(((rt0.c3) BETWEEN (rt0.c4) AND (x'59')))))OR((((rt0.c3)) BETWEEN ((1.525876419E9)) AND ((rt0.c0))))))OR(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c1)))))AND(((rt0.c0) ISNULL)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((((rt0.c4) ISNULL))) AND ((CHAR(rt0.c1)))))AND((((CAST(x'ba' AS NUMERIC), LIKELY(rt0.c0)))>((rt0.c2 COLLATE NOCASE, (rt0.c3 IN (rt0.c3, rt0.c4)))))))) ORDER BY ((((((((rt0.c4)AND(((rt0.c3) BETWEEN (rt0.c4) AND (x'59')))))OR((((rt0.c3)) BETWEEN ((1.525876419E9)) AND ((rt0.c0))))))OR(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c1)))))AND(((rt0.c0) ISNULL)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE ''  WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 END THEN '-974234847' END) ORDER BY (LTRIM(rt0.c1) IN ()) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE ''  WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 END THEN '-974234847' END)AND((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c4)) IN ())))) ORDER BY ((((((((rt0.c0)GLOB(NULL)))OR(((rt0.c0)IS(rt0.c3)))))OR(((((rt0.c2)AND(rt0.c2)))AND(rt0.c3)))))AND(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 END)) INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (0.2606952949825153) ORDER BY ((((((((rt0.c0)GLOB(NULL)))OR(((rt0.c0)IS(rt0.c3)))))OR(((((rt0.c2)AND(rt0.c2)))AND(rt0.c3)))))AND(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 END));
SELECT ALL * FROM rt0 WHERE ((('277152988' IN ()) IN (CAST(rt0.c4 AS NUMERIC), rt0.c4))) ORDER BY ((0.13475384587025907)/(rt0.c4)) DESC, rt0.c2, rt0.c2 ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((('277152988' IN ()) IN (CAST(rt0.c4 AS NUMERIC))))AND(TRIM(((rt0.c4) NOT NULL), TRIM(DISTINCT rt0.c2, rt0.c1))))) ORDER BY ((((rt0.c2) IS TRUE)) NOT NULL) DESC LIMIT 3;
SELECT ALL * FROM rt0 WHERE ((('277152988' IN ()) IN (CAST(rt0.c4 AS NUMERIC), rt0.c4))) ORDER BY ((0.13475384587025907)/(rt0.c4)) DESC, rt0.c2, rt0.c2 ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((('277152988' IN ()) IN (CAST(rt0.c4 AS NUMERIC))))AND(TRIM(((rt0.c4) NOT NULL), TRIM(DISTINCT rt0.c2, rt0.c1))))) ORDER BY ((((rt0.c2) IS TRUE)) NOT NULL) DESC LIMIT 3;
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER));
SELECT * FROM rt0 WHERE (((CAST((rt0.c2 IN ()) AS INTEGER))AND(((((CAST(rt0.c4 AS BLOB))AND(NULL COLLATE BINARY)))AND(CASE rt0.c4  WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN 0x3024268 END)))));
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER));
SELECT * FROM rt0 WHERE (((CAST((rt0.c2 IN ()) AS INTEGER))AND(((((CAST(rt0.c4 AS BLOB))AND(NULL COLLATE BINARY)))AND(CASE rt0.c4  WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN 0x3024268 END)))));
SELECT MIN(rt0.c4) FROM rt0 WHERE (0x4131b7fd) ORDER BY rt0.c2 DESC;
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (1093777405) ORDER BY rt0.c2 DESC LIMIT 0X0;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (((((rt0.c4) IS TRUE)) ISNULL));
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((((rt0.c4) IS TRUE)) ISNULL)) LIMIT 0X1;
SELECT * FROM rt0 WHERE (((((rt0.c3 IN (rt0.c3))))!=((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c3) AND ('F')) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3 IN (rt0.c3))))>((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))))AND((- (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))))))) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c3) AND ('F')) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c3 IN (rt0.c3))))!=((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c3) AND ('F')) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3 IN (rt0.c3))))>((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))))AND((- (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))))))) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c3) AND ('F')) COLLATE BINARY ASC  NULLS FIRST;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((~ (((rt0.c3) IS FALSE)))) ORDER BY CAST(UNLIKELY(x'22') AS NUMERIC)  NULLS FIRST, (('1586928368')>=(rt0.c1)) ASC;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((((~ (((rt0.c3) IS FALSE))))AND(((((0.9213598487965424)-(rt0.c3)))>=(((rt0.c4)LIKE(rt0.c3))))))) ORDER BY (+ (CAST(rt0.c3 AS REAL))) DESC LIMIT 3;
SELECT * FROM rt0 WHERE (((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))-(((rt0.c0)IS(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))-(((rt0.c0)IS(rt0.c0)))))AND(((TYPEOF(rt0.c3)) NOT BETWEEN ('l') AND (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END))))) ORDER BY CAST(((((0.14761821333354774)OR(0.7213237742857513)))AND(rt0.c2)) AS TEXT)  NULLS LAST, x'' DESC  NULLS LAST LIMIT 0X1;
SELECT * FROM rt0 WHERE (((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))-(((rt0.c0)IS(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))-(((rt0.c0)IS(rt0.c0)))))AND(((TYPEOF(rt0.c3)) NOT BETWEEN ('l') AND (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END))))) ORDER BY CAST(((((0.14761821333354774)OR(0.7213237742857513)))AND(rt0.c2)) AS TEXT)  NULLS LAST, x'' DESC  NULLS LAST LIMIT 0X1;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (CASE rt0.c4  WHEN ((rt0.c2)AND(rt0.c3)) THEN (+ (rt0.c0)) WHEN ((0xffffffff9fc3d890) BETWEEN ('1138630752') AND (rt0.c2)) THEN (((rt0.c2, rt0.c3))<=((rt0.c0, 0Xffffffff95c95fe2))) END) ORDER BY CHAR(LOWER(DISTINCT rt0.c0))  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (CASE rt0.c4  WHEN ((rt0.c2)AND(rt0.c3)) THEN (+ (rt0.c0)) WHEN ((-1614554992) BETWEEN ('1138630752') AND (rt0.c2)) THEN (((rt0.c2, rt0.c3))=((rt0.c0, -1781964830))) END) ORDER BY rt0.c4 ASC LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE ((((rt0.c2, CAST(rt0.c4 AS NUMERIC), ((rt0.c1) IS TRUE), ((rt0.c1) ISNULL), rt0.c1 COLLATE NOCASE))==((CASE rt0.c4  WHEN rt0.c0 THEN NULL ELSE rt0.c3 END, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END, ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)), ((rt0.c1)-(rt0.c1)), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)))) ORDER BY rt0.c4 ASC LIMIT 0X0;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((((((((((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))AND(CASE rt0.c3  WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))))AND(((rt0.c1) IS FALSE))))OR(CAST(rt0.c2 AS NUMERIC))))AND(rt0.c4 COLLATE BINARY)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (((((((((((((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))AND(CASE rt0.c3  WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))))AND(((rt0.c1) IS FALSE))))OR(CAST(rt0.c2 AS NUMERIC))))AND(rt0.c4 COLLATE BINARY)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((NOT (rt0.c4))) IS TRUE)))) ORDER BY 0.8894527200383157  NULLS FIRST, CASE WHEN (((rt0.c4, NULL, rt0.c3))>=((rt0.c4, rt0.c1, rt0.c2))) THEN (rt0.c3 IN ()) WHEN ((rt0.c0)*(rt0.c3)) THEN (~ (rt0.c2)) WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c1 COLLATE NOCASE WHEN x'' THEN (+ (rt0.c4)) ELSE CAST(rt0.c3 AS TEXT) END  NULLS FIRST, ((((rt0.c3)||(rt0.c3))) BETWEEN (((rt0.c1)IS NOT(rt0.c2))) AND (rt0.c0)) ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE ((NOT (((rt0.c0) IS FALSE)))) ORDER BY 0.8894527200383157  NULLS FIRST, CASE WHEN (((rt0.c4, NULL, rt0.c3))>=((rt0.c4, rt0.c1, rt0.c2))) THEN (rt0.c3 IN ()) WHEN ((rt0.c0)*(rt0.c3)) THEN (~ (rt0.c2)) WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c1 COLLATE NOCASE WHEN x'' THEN (+ (rt0.c4)) ELSE CAST(rt0.c3 AS TEXT) END  NULLS FIRST, ((((rt0.c3)||(rt0.c3))) BETWEEN (((rt0.c1)IS NOT(rt0.c2))) AND (rt0.c0)) ASC  NULLS FIRST LIMIT 0;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (((((rt0.c2) IS TRUE)) IS FALSE));
SELECT MAX(rt0.c4) FROM rt0 WHERE (((((((rt0.c2) IS TRUE)) IS FALSE))AND((+ (((rt0.c2) NOT NULL)))))) LIMIT 3;
SELECT * FROM rt0 WHERE (5.24079036E8) ORDER BY LOWER(((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c4))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((5.24079036E8)AND((((((rt0.c2))==((rt0.c2)))) IS FALSE)))) ORDER BY LOWER(((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c4))) DESC  NULLS FIRST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ('W') ORDER BY LOWER(((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c4))) DESC  NULLS FIRST LIMIT 0X2;
SELECT * FROM rt0 WHERE (5.24079036E8) ORDER BY LOWER(((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c4))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((5.24079036E8)AND((((((rt0.c2))==((rt0.c2)))) IS FALSE)))) ORDER BY LOWER(((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c4))) DESC  NULLS FIRST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ('W') ORDER BY LOWER(((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c4))) DESC  NULLS FIRST LIMIT 0X2;
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c0)||(0.6016400182583505))));
SELECT * FROM rt0 WHERE (((TYPEOF(DISTINCT ((rt0.c0)||(0.6016400182583505))))AND(CASE CAST(x'' AS BLOB)  WHEN ((((((((((rt0.c2)AND(rt0.c0)))OR('忢^')))OR(rt0.c0)))AND(x'49')))AND(rt0.c2)) THEN rt0.c2 COLLATE BINARY WHEN ((rt0.c1)IS(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN '#zK_6THA' ELSE rt0.c2 END WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END THEN (rt0.c4 IN ('595711314')) ELSE ((rt0.c0) IS FALSE) END))) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c2)))||(((rt0.c1)<(rt0.c3))))) LIMIT 0;
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c0)||(0.6016400182583505))));
SELECT * FROM rt0 WHERE (((TYPEOF(DISTINCT ((rt0.c0)||(0.6016400182583505))))AND(CASE CAST(x'' AS BLOB)  WHEN ((((((((((rt0.c2)AND(rt0.c0)))OR('忢^')))OR(rt0.c0)))AND(x'49')))AND(rt0.c2)) THEN rt0.c2 COLLATE BINARY WHEN ((rt0.c1)IS(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN '#zK_6THA' ELSE rt0.c2 END WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END THEN (rt0.c4 IN ('595711314')) ELSE ((rt0.c0) IS FALSE) END))) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c2)))||(((rt0.c1)<(rt0.c3))))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE 0.0626761756516897 END COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE 0.0626761756516897 END COLLATE BINARY) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CAST(NULL AS NUMERIC))*((rt0.c2 IN ())))) LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE 0.0626761756516897 END COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE 0.0626761756516897 END COLLATE BINARY) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CAST(NULL AS NUMERIC))*((rt0.c2 IN ())))) LIMIT 0X2;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE ((((rt0.c3, rt0.c2, rt0.c4, rt0.c4))>((rt0.c4, rt0.c0, x'', rt0.c1))) COLLATE NOCASE);
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE ((((((rt0.c3, rt0.c2, rt0.c4, rt0.c4))>((rt0.c4, rt0.c0, x'', rt0.c1))) COLLATE NOCASE)AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 END COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (0.584170418625161);
SELECT DISTINCT * FROM rt0 WHERE (0.584170418625161) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (0.584170418625161);
SELECT DISTINCT * FROM rt0 WHERE (0.584170418625161) LIMIT 0X0;
SELECT MAX(rt0.c4) FROM rt0 WHERE ('QaHu');
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ('QaHu') ORDER BY CAST(((rt0.c2)>=(rt0.c1)) AS NUMERIC) ASC  NULLS LAST, ((((-713664940) NOTNULL)) NOT BETWEEN (rt0.c2) AND ((('1477441143')=(rt0.c2)))) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (CASE WHEN rt0.c3 THEN 0.33006275405695096 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END COLLATE BINARY) ORDER BY CAST(((rt0.c2)>=(rt0.c1)) AS NUMERIC) ASC  NULLS LAST, ((((0xffffffffd5765654) NOTNULL)) NOT BETWEEN (rt0.c2) AND ((('1477441143')==(rt0.c2)))) DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c1)LIKE(rt0.c4)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3))))) ORDER BY ((((((((((rt0.c0)AND(((((rt0.c4)OR(rt0.c1)))AND(rt0.c0)))))AND(((rt0.c4)IS(rt0.c1)))))OR(rt0.c0)))OR(TYPEOF(DISTINCT rt0.c2))))AND(CAST(0.9573504732278878 AS TEXT))) ASC, '1627866469' ASC, (~ ((((rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((0.7469160494421078, rt0.c0, '1452718832')) AND ((rt0.c2, rt0.c1, rt0.c3)))))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c1)LIKE(rt0.c4)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3))))) ORDER BY LAST_INSERT_ROWID()  NULLS FIRST, (~ (((rt0.c0) NOT NULL)))  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2 IN ()) IN (((NULL)<(rt0.c4))))) ORDER BY LAST_INSERT_ROWID()  NULLS FIRST, (~ (((rt0.c0) NOT NULL)))  NULLS LAST LIMIT 0X2;
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c1)LIKE(rt0.c4)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3))))) ORDER BY ((((((((((rt0.c0)AND(((((rt0.c4)OR(rt0.c1)))AND(rt0.c0)))))AND(((rt0.c4)IS(rt0.c1)))))OR(rt0.c0)))OR(TYPEOF(DISTINCT rt0.c2))))AND(CAST(0.9573504732278878 AS TEXT))) ASC, '1627866469' ASC, (~ ((((rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((0.7469160494421078, rt0.c0, '1452718832')) AND ((rt0.c2, rt0.c1, rt0.c3)))))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c1)LIKE(rt0.c4)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3))))) ORDER BY LAST_INSERT_ROWID()  NULLS FIRST, (~ (((rt0.c0) NOT NULL)))  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2 IN ()) IN (((NULL)<(rt0.c4))))) ORDER BY LAST_INSERT_ROWID()  NULLS FIRST, (~ (((rt0.c0) NOT NULL)))  NULLS LAST LIMIT 0X2;
SELECT MIN(rt0.c3) FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1))) BETWEEN (rt0.c3 COLLATE RTRIM) AND (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))));
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1))) BETWEEN (rt0.c3 COLLATE RTRIM) AND (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4))))) ORDER BY 'iE	%Oeza	' ASC;
SELECT * FROM rt0 WHERE (((rt0.c1)*(rt0.c2)) COLLATE NOCASE) ORDER BY CAST(rt0.c2 AS BLOB) DESC;
SELECT * FROM rt0 WHERE (((rt0.c1)*(rt0.c2)) COLLATE NOCASE) ORDER BY 0.2208182203599408  NULLS FIRST, (((((((((rt0.c4)AND(x'12')))OR(NULL)))OR(rt0.c4))))<>((IFNULL(DISTINCT rt0.c3, rt0.c4))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c1)*(rt0.c2)) COLLATE NOCASE) ORDER BY CAST(rt0.c2 AS BLOB) DESC;
SELECT * FROM rt0 WHERE (((rt0.c1)*(rt0.c2)) COLLATE NOCASE) ORDER BY 0.2208182203599408  NULLS FIRST, (((((((((rt0.c4)AND(x'12')))OR(NULL)))OR(rt0.c4))))<>((IFNULL(DISTINCT rt0.c3, rt0.c4))))  NULLS FIRST;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) BETWEEN ((NOT (rt0.c4))) AND ((((rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c4)))))) ORDER BY ((TRIM(rt0.c1, rt0.c3))IS NOT(rt0.c0)) DESC;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (((((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) BETWEEN ((NOT (rt0.c4))) AND ((((rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c4))))))AND(''))) ORDER BY ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c4)))OR((~ (rt0.c4)))) DESC, (+ (((rt0.c0)%(rt0.c0)))) DESC  NULLS LAST LIMIT 0;
SELECT * FROM rt0 WHERE (((((rt0.c4 IN ()), (((rt0.c1, 1371330600)) BETWEEN ((rt0.c2, NULL)) AND ((rt0.c1, rt0.c4)))))>((rt0.c0 COLLATE RTRIM, (- (rt0.c2))))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4 IN ()), (((rt0.c1, 0x51bcd828)) BETWEEN ((rt0.c2, NULL)) AND ((rt0.c1, rt0.c4)))))>((rt0.c0 COLLATE RTRIM, (- (rt0.c2))))))AND(((((((rt0.c2, rt0.c1, rt0.c2))<=(('-1654285559', rt0.c3, rt0.c0))), rt0.c4, ((rt0.c3)-(rt0.c3)), HEX(rt0.c2)))>=((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c1)>>(rt0.c1)), (NOT (rt0.c4)), CAST(rt0.c2 AS TEXT))))))) ORDER BY ((((((((rt0.c1)==(rt0.c2)))AND(((rt0.c3) IS FALSE))))OR(-1.904867303E9)))OR(((rt0.c3) NOTNULL))) DESC, ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3, rt0.c2, rt0.c4, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c3, rt0.c3, rt0.c3, rt0.c2))) IN (((rt0.c1)!=(rt0.c3)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY ((((((((rt0.c1)==(rt0.c2)))AND(((rt0.c3) IS FALSE))))OR(-1.904867303E9)))OR(((rt0.c3) NOTNULL))) DESC, ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL) LIMIT 0X0;
SELECT * FROM rt0 WHERE (((((rt0.c4 IN ()), (((rt0.c1, 1371330600)) BETWEEN ((rt0.c2, NULL)) AND ((rt0.c1, rt0.c4)))))>((rt0.c0 COLLATE RTRIM, (- (rt0.c2))))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4 IN ()), (((rt0.c1, 0x51bcd828)) BETWEEN ((rt0.c2, NULL)) AND ((rt0.c1, rt0.c4)))))>((rt0.c0 COLLATE RTRIM, (- (rt0.c2))))))AND(((((((rt0.c2, rt0.c1, rt0.c2))<=(('-1654285559', rt0.c3, rt0.c0))), rt0.c4, ((rt0.c3)-(rt0.c3)), HEX(rt0.c2)))>=((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c1)>>(rt0.c1)), (NOT (rt0.c4)), CAST(rt0.c2 AS TEXT))))))) ORDER BY ((((((((rt0.c1)==(rt0.c2)))AND(((rt0.c3) IS FALSE))))OR(-1.904867303E9)))OR(((rt0.c3) NOTNULL))) DESC, ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3, rt0.c2, rt0.c4, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c3, rt0.c3, rt0.c3, rt0.c2))) IN (((rt0.c1)!=(rt0.c3)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY ((((((((rt0.c1)==(rt0.c2)))AND(((rt0.c3) IS FALSE))))OR(-1.904867303E9)))OR(((rt0.c3) NOTNULL))) DESC, ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((rt0.c3)&(x'd1')) COLLATE RTRIM);
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3)&(x'd1')) COLLATE RTRIM)AND((rt0.c2 IN ())))) ORDER BY ((((rt0.c3)<=(rt0.c4)))||(rt0.c2))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((rt0.c3)&(x'd1')) COLLATE RTRIM);
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3)&(x'd1')) COLLATE RTRIM)AND((rt0.c2 IN ())))) ORDER BY ((((rt0.c3)<=(rt0.c4)))||(rt0.c2))  NULLS FIRST LIMIT 0;
SELECT * FROM rt0 WHERE (((x'9b')&((rt0.c1 IN ()))));
SELECT DISTINCT * FROM rt0 WHERE (((x'9b')&((rt0.c1 IN ())))) ORDER BY (- ((NOT (rt0.c2)))) DESC LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0))<=((rt0.c0))), x'', (NOT (rt0.c4))))<>((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2)GLOB(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c2 END)))) ORDER BY (- ((NOT (rt0.c2)))) DESC LIMIT 2;
SELECT * FROM rt0 WHERE (((x'9b')&((rt0.c1 IN ()))));
SELECT DISTINCT * FROM rt0 WHERE (((x'9b')&((rt0.c1 IN ())))) ORDER BY (- ((NOT (rt0.c2)))) DESC LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0))<=((rt0.c0))), x'', (NOT (rt0.c4))))<>((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2)GLOB(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c2 END)))) ORDER BY (- ((NOT (rt0.c2)))) DESC LIMIT 2;
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c4))) NOT NULL)) ORDER BY (((((((NOT (rt0.c2)))OR((rt0.c4 IN (rt0.c3)))))AND(((rt0.c2) IS TRUE))))OR(((((((rt0.c2)AND(rt0.c3)))AND(0.45863776695102176)))OR(rt0.c2)))) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((- (rt0.c4))) NOT NULL)) ORDER BY (NOT (rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((0.7437641643818338 IN ((~ (rt0.c1))))) ORDER BY (NOT (rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE ((('1941015625') NOT BETWEEN (0.26072509212682093) AND ((NOT (rt0.c4)))));
SELECT MIN(rt0.c3) FROM rt0 WHERE ((((('1941015625') NOT BETWEEN (0.26072509212682093) AND ((NOT (rt0.c4)))))AND((~ (((rt0.c1)<=(rt0.c0))))))) ORDER BY (((json_remove('-1956352262', rt0.c3, rt0.c2)))<>((((rt0.c1) NOT NULL)))) DESC LIMIT 0X0 INTERSECT SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((((rt0.c2)==(-9.3528543E8))) BETWEEN (((rt0.c1) NOTNULL)) AND (rt0.c0 COLLATE NOCASE))) ORDER BY (((json_remove('-1956352262', rt0.c3, rt0.c2)))<>((((rt0.c1) NOT NULL)))) DESC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (x'94127e' COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE (((x'94127e' COLLATE BINARY)AND(CAST(TOTAL_CHANGES() AS INTEGER)))) ORDER BY (+ (rt0.c2)) COLLATE NOCASE DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) ORDER BY (+ (rt0.c2)) COLLATE NOCASE DESC;
SELECT ALL * FROM rt0 WHERE (x'94127e' COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE (((x'94127e' COLLATE BINARY)AND(CAST(TOTAL_CHANGES() AS INTEGER)))) ORDER BY (+ (rt0.c2)) COLLATE NOCASE DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) ORDER BY (+ (rt0.c2)) COLLATE NOCASE DESC;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((((((((('-858505247' IN (rt0.c0)))AND(((rt0.c4)||(0.43697999112607333)))))OR(rt0.c0 COLLATE NOCASE)))AND(CAST(rt0.c3 AS BLOB))))OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c4)))));
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((((((((((('-858505247' IN (rt0.c0)))AND(((rt0.c4)||(0.43697999112607333)))))OR(rt0.c0 COLLATE NOCASE)))AND(CAST(rt0.c3 AS BLOB))))OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c4)))))AND(((rt0.c0) NOT BETWEEN (0.7469160494421078) AND (x'')) COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))||(((rt0.c2)-(rt0.c3))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((((rt0.c3)AND(rt0.c4)))OR(rt0.c4))) AND (LIKELIHOOD(DISTINCT rt0.c4, rt0.c4)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))||(((rt0.c2)-(rt0.c3)))))AND(rt0.c1))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((((rt0.c3)AND(rt0.c4)))OR(rt0.c4))) AND (LIKELIHOOD(DISTINCT rt0.c4, rt0.c4)))  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)LIKE(rt0.c1)))OR(((rt0.c3) IS FALSE))))AND(rt0.c0)))OR(((rt0.c2)OR(rt0.c3))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((((rt0.c3)AND(rt0.c4)))OR(rt0.c4))) AND (LIKELIHOOD(DISTINCT rt0.c4, rt0.c4)))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))||(((rt0.c2)-(rt0.c3))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((((rt0.c3)AND(rt0.c4)))OR(rt0.c4))) AND (LIKELIHOOD(DISTINCT rt0.c4, rt0.c4)))  NULLS LAST;
SELECT * FROM rt0 WHERE ((~ (NULL)));
SELECT DISTINCT * FROM rt0 WHERE ((~ (NULL))) LIMIT 1;
SELECT * FROM rt0 WHERE ((~ (NULL)));
SELECT DISTINCT * FROM rt0 WHERE ((~ (NULL))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)/(rt0.c0))) IS FALSE)) ORDER BY CAST(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN x'a79b' THEN rt0.c3 END AS INTEGER);
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)/(rt0.c0))) IS FALSE)) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END THEN NULL COLLATE RTRIM END LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4 COLLATE RTRIM)||(NULLIF(rt0.c4, rt0.c0)))) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END THEN NULL COLLATE RTRIM END LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)/(rt0.c0))) IS FALSE)) ORDER BY CAST(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN x'a79b' THEN rt0.c3 END AS INTEGER);
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)/(rt0.c0))) IS FALSE)) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END THEN NULL COLLATE RTRIM END LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4 COLLATE RTRIM)||(NULLIF(rt0.c4, rt0.c0)))) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END THEN NULL COLLATE RTRIM END LIMIT 0x0;
SELECT MAX(rt0.c0) FROM rt0 WHERE (rt0.c4);
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (rt0.c4) ORDER BY (rt0.c4 IN (x'', rt0.c1)) COLLATE BINARY, (((rt0.c4))>((rt0.c1))) DESC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(((rt0.c0)>=(rt0.c4))) LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (CAST(((rt0.c0)>('1743999883')) AS INTEGER)) ORDER BY (rt0.c4 IN (x'', rt0.c1)) COLLATE BINARY, (((rt0.c4))>((rt0.c1))) DESC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(((rt0.c0)>=(rt0.c4))) LIMIT 0;
SELECT MIN(rt0.c1) FROM rt0 WHERE (rt0.c3);
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (((rt0.c3)AND(((((((rt0.c3)/(rt0.c3)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))))OR((NOT (rt0.c3))))))) LIMIT 1;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (json_array(rt0.c4, NULL, ((rt0.c1)<=(rt0.c4))));
SELECT MAX(rt0.c4) FROM rt0 WHERE (json_array(rt0.c4, NULL, ((rt0.c1)<=(rt0.c4)))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN LIKELIHOOD(DISTINCT rt0.c3, rt0.c0) WHEN ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)) THEN ((rt0.c0) ISNULL) END ASC  NULLS LAST, (rt0.c0 IN (-9.3528543E8)) ASC  NULLS LAST, CASE ((rt0.c3)AND(rt0.c0))  WHEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END END LIMIT 0;
SELECT * FROM rt0 WHERE (CASE (+ (rt0.c4))  WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END THEN (rt0.c4 IN ()) WHEN rt0.c0 COLLATE RTRIM THEN rt0.c4 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (0.015954195092571566)) THEN (rt0.c0 IN ()) ELSE (+ (rt0.c1)) END) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c2) NOT NULL) WHEN ((rt0.c3)<>(rt0.c2)) THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END WHEN (- (rt0.c0)) THEN ABS(DISTINCT rt0.c3) END;
SELECT * FROM rt0 WHERE (CASE (+ (rt0.c4))  WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END THEN (rt0.c4 IN ()) WHEN rt0.c0 COLLATE RTRIM THEN rt0.c4 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (0.015954195092571566)) THEN (rt0.c0 IN ()) ELSE (+ (rt0.c1)) END) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c2) NOT NULL) WHEN ((rt0.c3)<>(rt0.c2)) THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END WHEN (- (rt0.c0)) THEN ABS(DISTINCT rt0.c3) END LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)))OR(0.6335893688787078)))AND(rt0.c4)))AND('-858505247')))AND((- (rt0.c2))))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c2) NOT NULL) WHEN ((rt0.c3)<>(rt0.c2)) THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END WHEN (- (rt0.c0)) THEN ABS(DISTINCT rt0.c3) END LIMIT 0X0;
SELECT * FROM rt0 WHERE (CASE (+ (rt0.c4))  WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END THEN (rt0.c4 IN ()) WHEN rt0.c0 COLLATE RTRIM THEN rt0.c4 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (0.015954195092571566)) THEN (rt0.c0 IN ()) ELSE (+ (rt0.c1)) END) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c2) NOT NULL) WHEN ((rt0.c3)<>(rt0.c2)) THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END WHEN (- (rt0.c0)) THEN ABS(DISTINCT rt0.c3) END;
SELECT * FROM rt0 WHERE (CASE (+ (rt0.c4))  WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END THEN (rt0.c4 IN ()) WHEN rt0.c0 COLLATE RTRIM THEN rt0.c4 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (0.015954195092571566)) THEN (rt0.c0 IN ()) ELSE (+ (rt0.c1)) END) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c2) NOT NULL) WHEN ((rt0.c3)<>(rt0.c2)) THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END WHEN (- (rt0.c0)) THEN ABS(DISTINCT rt0.c3) END LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)))OR(0.6335893688787078)))AND(rt0.c4)))AND('-858505247')))AND((- (rt0.c2))))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c2) NOT NULL) WHEN ((rt0.c3)<>(rt0.c2)) THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END WHEN (- (rt0.c0)) THEN ABS(DISTINCT rt0.c3) END LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((1.435424012E9) NOT BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE NOCASE COLLATE NOCASE);
SELECT DISTINCT * FROM rt0 WHERE (((((1.435424012E9) NOT BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE NOCASE COLLATE NOCASE)AND(COALESCE((((rt0.c1, rt0.c2))>=((rt0.c0, rt0.c3))), ((rt0.c1)-(rt0.c2)), ABS(rt0.c2), ((rt0.c3)=(rt0.c3)))))) ORDER BY rt0.c1  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((+ ('p|aV'))) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((1.435424012E9) NOT BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE NOCASE COLLATE NOCASE);
SELECT DISTINCT * FROM rt0 WHERE (((((1.435424012E9) NOT BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE NOCASE COLLATE NOCASE)AND(COALESCE((((rt0.c1, rt0.c2))>=((rt0.c0, rt0.c3))), ((rt0.c1)-(rt0.c2)), ABS(rt0.c2), ((rt0.c3)=(rt0.c3)))))) ORDER BY rt0.c1  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((+ ('p|aV'))) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 END)>=(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END)));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 END)>=(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL) DESC, ((((rt0.c0)AND((((rt0.c1, x'')) BETWEEN (('d엢', rt0.c0)) AND ((x'ad', rt0.c3))))))OR(((rt0.c3) ISNULL))) DESC INTERSECT SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))OR('9W}>wHn')))AND('z'))) IS FALSE)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL) DESC, ((((rt0.c0)AND((((rt0.c1, x'')) BETWEEN (('d엢', rt0.c0)) AND ((x'ad', rt0.c3))))))OR(((rt0.c3) ISNULL))) DESC;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 END)>=(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END)));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 END)>=(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL) DESC, ((((rt0.c0)AND((((rt0.c1, x'')) BETWEEN (('d엢', rt0.c0)) AND ((x'ad', rt0.c3))))))OR(((rt0.c3) ISNULL))) DESC INTERSECT SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))OR('9W}>wHn')))AND('z'))) IS FALSE)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL) DESC, ((((rt0.c0)AND((((rt0.c1, x'')) BETWEEN (('d엢', rt0.c0)) AND ((x'ad', rt0.c3))))))OR(((rt0.c3) ISNULL))) DESC;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((((rt0.c0) IS TRUE)) NOT NULL)) ORDER BY (((((((((((+ (rt0.c0)))OR((NOT (rt0.c4)))))AND(((0.11883538280783412) BETWEEN (rt0.c3) AND (rt0.c1)))))OR(((((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))))OR((((((((('')AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))))OR((~ (rt0.c0)))) ASC  NULLS LAST, (- (((rt0.c1)*(rt0.c0)))) DESC, rt0.c2 ASC  NULLS LAST;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((((rt0.c0) IS TRUE)) NOT NULL)) ORDER BY (- (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))) DESC LIMIT 1;
SELECT MIN(rt0.c4) FROM rt0 WHERE (((((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1)))>(CAST(rt0.c2 AS INTEGER))));
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1)))>(CAST(rt0.c2 AS INTEGER))))AND((~ (x'56')) COLLATE BINARY))) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c2 WHEN '1093777405' THEN 0.622290299903252 ELSE rt0.c4 END)) ASC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE ((('275607653') BETWEEN (ABS(DISTINCT rt0.c3)) AND ((((rt0.c1, rt0.c4, rt0.c0, rt0.c2))>((x'98', rt0.c1, NULL, rt0.c2)))))) ORDER BY rt0.c3 ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((('275607653') BETWEEN (ABS(DISTINCT rt0.c3)) AND ((((rt0.c1, rt0.c4, rt0.c0, rt0.c2))>((x'98', rt0.c1, NULL, rt0.c2))))))AND((((CAST(rt0.c3 AS REAL), CAST(rt0.c4 AS TEXT)))<(((NOT (0.8652986497796625)), ((rt0.c1) NOTNULL))))))) ORDER BY rt0.c3 ASC LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((('275607653') BETWEEN (ABS(DISTINCT rt0.c3)) AND ((((rt0.c1, rt0.c4, rt0.c0, rt0.c2))>((x'98', rt0.c1, NULL, rt0.c2)))))) ORDER BY rt0.c3 ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((('275607653') BETWEEN (ABS(DISTINCT rt0.c3)) AND ((((rt0.c1, rt0.c4, rt0.c0, rt0.c2))>((x'98', rt0.c1, NULL, rt0.c2))))))AND((((CAST(rt0.c3 AS REAL), CAST(rt0.c4 AS TEXT)))<(((NOT (0.8652986497796625)), ((rt0.c1) NOTNULL))))))) ORDER BY rt0.c3 ASC LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((rt0.c3 COLLATE BINARY IN (((rt0.c0) IS FALSE))));
SELECT * FROM rt0 WHERE ((((rt0.c3 COLLATE BINARY IN (((rt0.c0) IS FALSE))))AND(x''))) ORDER BY (~ (((rt0.c4)GLOB(rt0.c0)))) DESC  NULLS FIRST, ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))) BETWEEN (((rt0.c3)||(rt0.c0))) AND (((rt0.c4)GLOB(rt0.c3)))) DESC  NULLS FIRST, (((((((((('772565305') IS TRUE))OR(rt0.c2)))AND(((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c0)))))OR(LENGTH(rt0.c1))))AND((~ (rt0.c2)))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((rt0.c3 COLLATE BINARY IN (((rt0.c0) IS FALSE))));
SELECT * FROM rt0 WHERE ((((rt0.c3 COLLATE BINARY IN (((rt0.c0) IS FALSE))))AND(x''))) ORDER BY (~ (((rt0.c4)GLOB(rt0.c0)))) DESC  NULLS FIRST, ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))) BETWEEN (((rt0.c3)||(rt0.c0))) AND (((rt0.c4)GLOB(rt0.c3)))) DESC  NULLS FIRST, (((((((((('772565305') IS TRUE))OR(rt0.c2)))AND(((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c0)))))OR(LENGTH(rt0.c1))))AND((~ (rt0.c2)))) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM rt0 WHERE (x'');
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY LIKE(rt0.c0, rt0.c0, 'V') COLLATE RTRIM ASC  NULLS FIRST LIMIT 0;
SELECT * FROM rt0 WHERE (x'');
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY LIKE(rt0.c0, rt0.c0, 'V') COLLATE RTRIM ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOTNULL))LIKE('L')));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3) NOTNULL))LIKE('L')))AND(((rt0.c3)-(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))))) ORDER BY (rt0.c4 COLLATE RTRIM IN ())  NULLS LAST, rt0.c0  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c1))<=((rt0.c1))))AND(((rt0.c1)%(rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c0) IS FALSE)))) ORDER BY (rt0.c4 COLLATE RTRIM IN ())  NULLS LAST, rt0.c0  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOTNULL))LIKE('L')));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3) NOTNULL))LIKE('L')))AND(((rt0.c3)-(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))))) ORDER BY (rt0.c4 COLLATE RTRIM IN ())  NULLS LAST, rt0.c0  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c1))<=((rt0.c1))))AND(((rt0.c1)%(rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c0) IS FALSE)))) ORDER BY (rt0.c4 COLLATE RTRIM IN ())  NULLS LAST, rt0.c0  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR((+ (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR((+ (rt0.c0))))) ORDER BY ((rt0.c4)IS(rt0.c0)) COLLATE NOCASE LIMIT 3;
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR((+ (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR((+ (rt0.c0))))) ORDER BY ((rt0.c4)IS(rt0.c0)) COLLATE NOCASE LIMIT 3;
SELECT ALL * FROM rt0 WHERE ((UPPER(rt0.c2) IN ((rt0.c4 IN (rt0.c1, rt0.c0))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 WHEN NULL THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))) DESC  NULLS LAST, NULLIF(DISTINCT rt0.c2, rt0.c2) COLLATE NOCASE DESC;
SELECT ALL * FROM rt0 WHERE ((UPPER(rt0.c2) IN ((rt0.c4 IN (rt0.c1, rt0.c0))))) ORDER BY CASE WHEN (NOT (rt0.c2)) THEN 'h+Y' ELSE '.' END  NULLS FIRST, CAST(((rt0.c1) IS TRUE) AS REAL) INTERSECT SELECT ALL * FROM rt0 WHERE (CAST(NULL COLLATE RTRIM AS REAL)) ORDER BY CASE WHEN (NOT (rt0.c2)) THEN 'h+Y' ELSE '.' END  NULLS FIRST, CAST(((rt0.c1) IS TRUE) AS REAL);
SELECT ALL * FROM rt0 WHERE ((UPPER(rt0.c2) IN ((rt0.c4 IN (rt0.c1, rt0.c0))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 WHEN NULL THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))) DESC  NULLS LAST, NULLIF(DISTINCT rt0.c2, rt0.c2) COLLATE NOCASE DESC;
SELECT ALL * FROM rt0 WHERE ((UPPER(rt0.c2) IN ((rt0.c4 IN (rt0.c1, rt0.c0))))) ORDER BY CASE WHEN (NOT (rt0.c2)) THEN 'h+Y' ELSE '.' END  NULLS FIRST, CAST(((rt0.c1) IS TRUE) AS REAL) INTERSECT SELECT ALL * FROM rt0 WHERE (CAST(NULL COLLATE RTRIM AS REAL)) ORDER BY CASE WHEN (NOT (rt0.c2)) THEN 'h+Y' ELSE '.' END  NULLS FIRST, CAST(((rt0.c1) IS TRUE) AS REAL);
SELECT * FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND ((((rt0.c2)AND(rt0.c4)))))) ORDER BY rtreenode(((rt0.c3)=('524079036')), COALESCE(rt0.c2, rt0.c1, rt0.c1))  NULLS LAST, ((+ (rt0.c3)) IN (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) ASC;
SELECT * FROM rt0 WHERE ((((((rt0.c4)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND ((((rt0.c2)AND(rt0.c4))))))AND((- (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))))) ORDER BY ((((rt0.c1)LIKE(rt0.c4))) NOTNULL) DESC, ((0.5628699772073466)&((rt0.c0 IN (rt0.c1, rt0.c4)))), ((((((rt0.c2)>=(rt0.c4)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c0) ISNULL))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND ((((rt0.c2)AND(rt0.c4)))))) ORDER BY rtreenode(((rt0.c3)=('524079036')), COALESCE(rt0.c2, rt0.c1, rt0.c1))  NULLS LAST, ((+ (rt0.c3)) IN (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) ASC;
SELECT * FROM rt0 WHERE ((((((rt0.c4)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND ((((rt0.c2)AND(rt0.c4))))))AND((- (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))))) ORDER BY ((((rt0.c1)LIKE(rt0.c4))) NOTNULL) DESC, ((0.5628699772073466)&((rt0.c0 IN (rt0.c1, rt0.c4)))), ((((((rt0.c2)>=(rt0.c4)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c0) ISNULL))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS NUMERIC))IS NOT(((rt0.c0)<=(rt0.c3)))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS NUMERIC))IS NOT(((rt0.c0)<=(rt0.c3))))) ORDER BY ((((0.21432733284251304) NOT NULL)) NOT BETWEEN ((~ (0.496157638007812))) AND ((('N!%t&') NOT NULL))) DESC  NULLS LAST, ((0.015551038451190324) BETWEEN ((((rt0.c3, rt0.c2))!=((rt0.c4, rt0.c3)))) AND ('-858505247')) ASC, NULLIF(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c1 AS REAL)) LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE ((((1.477441143E9, rt0.c1, ((rt0.c3)==(rt0.c2))))<(((rt0.c2 IN ()), (+ ('-51579624')), (((rt0.c0, rt0.c0))<((rt0.c1, rt0.c4))))))) ORDER BY ((((0.21432733284251304) NOT NULL)) NOT BETWEEN ((~ (0.496157638007812))) AND ((('N!%t&') NOT NULL))) DESC  NULLS LAST, ((0.015551038451190324) BETWEEN ((((rt0.c3, rt0.c2))<>((rt0.c4, rt0.c3)))) AND ('-858505247')) ASC, NULLIF(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c1 AS REAL)) LIMIT 0X1;
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS NUMERIC))IS NOT(((rt0.c0)<=(rt0.c3)))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS NUMERIC))IS NOT(((rt0.c0)<=(rt0.c3))))) ORDER BY ((((0.21432733284251304) NOT NULL)) NOT BETWEEN ((~ (0.496157638007812))) AND ((('N!%t&') NOT NULL))) DESC  NULLS LAST, ((0.015551038451190324) BETWEEN ((((rt0.c3, rt0.c2))!=((rt0.c4, rt0.c3)))) AND ('-858505247')) ASC, NULLIF(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c1 AS REAL)) LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE ((((1.477441143E9, rt0.c1, ((rt0.c3)==(rt0.c2))))<(((rt0.c2 IN ()), (+ ('-51579624')), (((rt0.c0, rt0.c0))<((rt0.c1, rt0.c4))))))) ORDER BY ((((0.21432733284251304) NOT NULL)) NOT BETWEEN ((~ (0.496157638007812))) AND ((('N!%t&') NOT NULL))) DESC  NULLS LAST, ((0.015551038451190324) BETWEEN ((((rt0.c3, rt0.c2))<>((rt0.c4, rt0.c3)))) AND ('-858505247')) ASC, NULLIF(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c1 AS REAL)) LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)<(((((((rt0.c1)OR(rt0.c1)))AND(0.4981183280022632)))AND(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)<(((((((rt0.c1)OR(rt0.c1)))AND(0.4981183280022632)))AND(rt0.c3)))))AND(CASE WHEN (('-1923153326')GLOB(rt0.c4)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) END))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((rt0.c3 IN ())) LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)<(((((((rt0.c1)OR(rt0.c1)))AND(0.4981183280022632)))AND(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)<(((((((rt0.c1)OR(rt0.c1)))AND(0.4981183280022632)))AND(rt0.c3)))))AND(CASE WHEN (('-1923153326')GLOB(rt0.c4)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) END))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((rt0.c3 IN ())) LIMIT 0x2;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NULL)/(rt0.c4)))>(((rt0.c0)IS(rt0.c4))))) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))))>=((0X5e969af0))) ASC;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((NULL)/(rt0.c4)))>(((rt0.c0)IS(rt0.c4)))))AND(((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) IN (rt0.c3, (rt0.c0 IN (rt0.c3)), rt0.c2))))) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))))>=((0X5e969af0))) ASC LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ('') ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))))>=((1586928368))) ASC LIMIT 0X1;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT * FROM rt0 WHERE (rt0.c0) LIMIT 0X2 INTERSECT SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((((rt0.c2)AND(x'3aae')))OR(rt0.c3)))AND(rt0.c0)))) AND ((((rt0.c3) NOTNULL))))) LIMIT 2;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT * FROM rt0 WHERE (rt0.c0) LIMIT 0X2 INTERSECT SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((((rt0.c2)AND(x'3aae')))OR(rt0.c3)))AND(rt0.c0)))) AND ((((rt0.c3) NOTNULL))))) LIMIT 2;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c0)) BETWEEN ((NULL, rt0.c3)) AND ((rt0.c3, rt0.c3))))LIKE(rt0.c0)));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3, rt0.c0)) BETWEEN ((NULL, rt0.c3)) AND ((rt0.c3, rt0.c3))))LIKE(rt0.c0))) LIMIT 2;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c0)) BETWEEN ((NULL, rt0.c3)) AND ((rt0.c3, rt0.c3))))LIKE(rt0.c0)));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3, rt0.c0)) BETWEEN ((NULL, rt0.c3)) AND ((rt0.c3, rt0.c3))))LIKE(rt0.c0))) LIMIT 2;
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) AS NUMERIC)) ORDER BY ((CAST(rt0.c4 AS REAL))*((rt0.c3 IN (rt0.c2)))), UPPER(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))  NULLS FIRST, json_object((((rt0.c1, rt0.c1))=(('', rt0.c4))), ((rt0.c3)*(rt0.c4)), (+ (rt0.c0)));
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) AS NUMERIC)) ORDER BY (((((rt0.c1, '1452718832'))>=((rt0.c1, x'70cc')))) NOT NULL), rt0.c4 ASC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c4)))==(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN x'e9' END))) ORDER BY (((((rt0.c1, '1452718832'))>=((rt0.c1, x'70cc')))) NOT NULL), rt0.c4 ASC LIMIT 1;
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) AS NUMERIC)) ORDER BY ((CAST(rt0.c4 AS REAL))*((rt0.c3 IN (rt0.c2)))), UPPER(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))  NULLS FIRST, json_object((((rt0.c1, rt0.c1))=(('', rt0.c4))), ((rt0.c3)*(rt0.c4)), (+ (rt0.c0)));
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((IFNULL(rt0.c4, rt0.c1)) NOT BETWEEN ((+ (rt0.c3))) AND (((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c3)))));
SELECT MIN(rt0.c3) FROM rt0 WHERE (((IFNULL(rt0.c4, rt0.c1)) NOT BETWEEN ((+ (rt0.c3))) AND (((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c3))))) LIMIT 3;
SELECT MAX(rt0.c4) FROM rt0 WHERE ((x'' IN ((((rt0.c4, rt0.c0, rt0.c4))<>((rt0.c3, rt0.c2, x'd1'))), rt0.c3)));
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ((((x'' IN ((((rt0.c4, rt0.c0, rt0.c4))!=((rt0.c3, rt0.c2, x'd1'))), rt0.c3)))AND(((((rt0.c4 IN (rt0.c4))))==((MAX(rt0.c4, rt0.c0, rt0.c3))))))) ORDER BY CAST((rt0.c0 IN ()) AS INTEGER), (~ (((rt0.c1)<>(rt0.c0))))  NULLS FIRST LIMIT 0X2;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOTNULL)) ORDER BY '1106871160', (((rt0.c2)IS NOT(rt0.c1)) IN (((rt0.c3) NOTNULL)));
SELECT MAX(rt0.c1) FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT)) NOTNULL))AND('vee揆_lor'))) ORDER BY '1106871160', (((rt0.c2)IS NOT(rt0.c1)) IN (((rt0.c3) NOTNULL))) LIMIT 0X0;
SELECT MAX(rt0.c3) FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((x'') ISNULL)) ORDER BY CAST(('쀹\' IN ()) AS INTEGER) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (x'') LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS NUMERIC));
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS NUMERIC)) ORDER BY '1525876419' DESC  NULLS LAST, ('722842447' IN ()) LIMIT 2;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS NUMERIC));
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS NUMERIC)) ORDER BY '1525876419' DESC  NULLS LAST, ('722842447' IN ()) LIMIT 2;
SELECT ALL * FROM rt0 WHERE ((((NULL, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0 COLLATE RTRIM, ((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))) AND ((((rt0.c3) NOT BETWEEN (-9.3528543E8) AND (rt0.c2)), 'EYVVb)(0', CAST(rt0.c1 AS INTEGER)))));
SELECT * FROM rt0 WHERE ((((((NULL, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0 COLLATE RTRIM, ((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))) AND ((((rt0.c3) NOT BETWEEN (-9.3528543E8) AND (rt0.c2)), 'EYVVb)(0', CAST(rt0.c1 AS INTEGER)))))AND(TYPEOF(((rt0.c3)GLOB(rt0.c4)))))) ORDER BY rt0.c1, (((((((NOT ('1525876419')))AND(((rt0.c0)OR(rt0.c4)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(rt0.c1 COLLATE NOCASE)) DESC LIMIT 0x3 INTERSECT SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c0 AS BLOB), ((rt0.c4)=(rt0.c0)))) ORDER BY rt0.c1, (((((((NOT ('1525876419')))AND(((rt0.c0)OR(rt0.c4)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(rt0.c1 COLLATE NOCASE)) DESC LIMIT 3;
SELECT ALL * FROM rt0 WHERE ((((NULL, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0 COLLATE RTRIM, ((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))) AND ((((rt0.c3) NOT BETWEEN (-9.3528543E8) AND (rt0.c2)), 'EYVVb)(0', CAST(rt0.c1 AS INTEGER)))));
SELECT * FROM rt0 WHERE ((((((NULL, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0 COLLATE RTRIM, ((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))) AND ((((rt0.c3) NOT BETWEEN (-9.3528543E8) AND (rt0.c2)), 'EYVVb)(0', CAST(rt0.c1 AS INTEGER)))))AND(TYPEOF(((rt0.c3)GLOB(rt0.c4)))))) ORDER BY rt0.c1, (((((((NOT ('1525876419')))AND(((rt0.c0)OR(rt0.c4)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(rt0.c1 COLLATE NOCASE)) DESC LIMIT 0x3 INTERSECT SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c0 AS BLOB), ((rt0.c4)=(rt0.c0)))) ORDER BY rt0.c1, (((((((NOT ('1525876419')))AND(((rt0.c0)OR(rt0.c4)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(rt0.c1 COLLATE NOCASE)) DESC LIMIT 3;
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT * FROM rt0 WHERE (((rt0.c4)AND(NULL))) ORDER BY ((((rt0.c0) IS FALSE))/(((rt0.c3)|(rt0.c4)))) ASC, LIKELIHOOD(rt0.c1, rt0.c2) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (0.6487005212634951) ORDER BY ((((rt0.c0) IS FALSE))/(((rt0.c3)|(rt0.c4)))) ASC, LIKELIHOOD(rt0.c1, rt0.c2) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT * FROM rt0 WHERE (((rt0.c4)AND(NULL))) ORDER BY ((((rt0.c0) IS FALSE))/(((rt0.c3)|(rt0.c4)))) ASC, LIKELIHOOD(rt0.c1, rt0.c2) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (0.6487005212634951) ORDER BY ((((rt0.c0) IS FALSE))/(((rt0.c3)|(rt0.c4)))) ASC, LIKELIHOOD(rt0.c1, rt0.c2) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((((rt0.c3)||(rt0.c4))) ISNULL)) ORDER BY (- (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN '-403041340' ELSE rt0.c2 END)) DESC  NULLS FIRST, ((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END) NOT BETWEEN ((rt0.c4 IN (x'c2f9'))) AND ((+ (rt0.c4)))) DESC;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((((rt0.c3)||(rt0.c4))) ISNULL))AND(0.7129461838529774))) ORDER BY (- (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN '-403041340' ELSE rt0.c2 END)) DESC  NULLS FIRST, ((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END) NOT BETWEEN ((rt0.c4 IN (x'c2f9'))) AND ((+ (rt0.c4)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'e7')+(-313599224)));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((x'e7')+(0Xffffffffed4edb08))) LIMIT 0x1;
SELECT MIN(rt0.c0) FROM rt0 WHERE (((((((((((JULIANDAY(-1.094403164E9, rt0.c3, rt0.c0))OR(((rt0.c0)==(rt0.c3)))))AND(CAST(rt0.c4 AS TEXT))))AND(CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END)))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)))OR(((rt0.c0) NOT BETWEEN (0.18058567832909878) AND (x'')))));
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (((((((((((JULIANDAY(-1.094403164E9, rt0.c3, rt0.c0))OR(((rt0.c0)==(rt0.c3)))))AND(CAST(rt0.c4 AS TEXT))))AND(CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END)))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)))OR(((rt0.c0) NOT BETWEEN (0.18058567832909878) AND (x''))))) ORDER BY (LIKE(rt0.c2, rt0.c4, 'V') IN (((rt0.c2)&(rt0.c3)))), ' d軺D'  NULLS FIRST LIMIT 0x0;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (rt0.c3) ORDER BY TRIM((+ (rt0.c3)), ((rt0.c2)-(rt0.c0)))  NULLS FIRST, (NOT (SQLITE_VERSION())) ASC  NULLS FIRST;
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (rt0.c3) ORDER BY TRIM((+ (rt0.c3)), ((rt0.c2)-(rt0.c0)))  NULLS FIRST, (NOT (SQLITE_VERSION())) ASC  NULLS FIRST LIMIT 0;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((((CASE rt0.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3))))<=((NULLIF(rt0.c1, rt0.c1), CAST(rt0.c1 AS REAL))))) ORDER BY (~ (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN 0.9143968701872934 END))  NULLS FIRST;
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE ((((CASE rt0.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3))))<((NULLIF(rt0.c1, rt0.c1), CAST(rt0.c1 AS REAL))))) ORDER BY (~ (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN 0.9143968701872934 END))  NULLS FIRST INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (rt0.c1) ORDER BY (~ (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN 0.9143968701872934 END))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c1)) AS TEXT));
SELECT * FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c1)) AS TEXT)) ORDER BY ((((NULL)<<(rt0.c4))) NOT NULL), ((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c2)))AND((((('1328645886')OR(rt0.c0)))OR(rt0.c4)))))OR((rt0.c0 IN (rt0.c3, rt0.c1)))))OR(((rt0.c4)-(rt0.c3)))) DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c1)) AS TEXT));
SELECT * FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c1)) AS TEXT)) ORDER BY ((((NULL)<<(rt0.c4))) NOT NULL), ((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c2)))AND((((('1328645886')OR(rt0.c0)))OR(rt0.c4)))))OR((rt0.c0 IN (rt0.c3, rt0.c1)))))OR(((rt0.c4)-(rt0.c3)))) DESC LIMIT 0;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE ((((rt0.c0) IS TRUE) IN ()));
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ((((((rt0.c0) IS TRUE) IN ()))AND(CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)) WHEN ((rt0.c1)IS NOT(rt0.c1)) THEN (+ (rt0.c1)) WHEN ((rt0.c3)||(rt0.c2)) THEN CAST(rt0.c3 AS TEXT) END))) ORDER BY (((~ (rt0.c3))) BETWEEN (((rt0.c1)-(rt0.c4))) AND (CASE WHEN rt0.c3 THEN x'' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END)) INTERSECT SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ((((+ (rt0.c1))) IS FALSE)) ORDER BY (((~ (rt0.c3))) BETWEEN (((rt0.c1)-(rt0.c4))) AND (CASE WHEN rt0.c3 THEN x'' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(HEX(DISTINCT rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(HEX(DISTINCT rt0.c1))) INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (')');
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END)OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))))OR(rt0.c2)));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((CASE WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END)OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))))OR(rt0.c2))) ORDER BY (((rt0.c2, rt0.c1)) NOT BETWEEN (('M' COLLATE BINARY, rt0.c4)) AND ((TYPEOF(rt0.c2), rt0.c3 COLLATE BINARY))) ASC  NULLS FIRST, (- ((((0X59fc636b, rt0.c0))<=((rt0.c3, rt0.c3)))))  NULLS LAST LIMIT 4;
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c2) NOTNULL), CAST('' AS BLOB)));
SELECT COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT ((rt0.c2) NOTNULL), CAST('' AS BLOB)))AND((- ((((rt0.c0, rt0.c0, rt0.c3))<=((rt0.c0, rt0.c2, rt0.c3)))))))) LIMIT 2 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))%(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE (((NULL COLLATE RTRIM)%((rt0.c4 IN (rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((((NULL COLLATE RTRIM)%((rt0.c4 IN (rt0.c3)))))AND(CAST(((rt0.c0) NOTNULL) AS NUMERIC)))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((NULL COLLATE RTRIM)%((rt0.c4 IN (rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((((NULL COLLATE RTRIM)%((rt0.c4 IN (rt0.c3)))))AND(CAST(((rt0.c0) NOTNULL) AS NUMERIC)))) LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c4, rt0.c0)) NOT BETWEEN ((CASE NULL  WHEN rt0.c3 THEN rt0.c3 WHEN '0.09090607930004835' THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c4)&(rt0.c2)), ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))) AND (((+ (rt0.c2)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 ELSE NULL END, ((rt0.c1) ISNULL))))) ORDER BY ((((163811210) BETWEEN (rt0.c2) AND (rt0.c2)))GLOB((+ ('-581623797')))) ASC;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c4, rt0.c0)) NOT BETWEEN ((CASE NULL  WHEN rt0.c3 THEN rt0.c3 WHEN '0.09090607930004835' THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c4)&(rt0.c2)), ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))) AND (((+ (rt0.c2)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 ELSE NULL END, ((rt0.c1) ISNULL)))))AND(rt0.c2))) ORDER BY ((((0x9c38f8a) BETWEEN (rt0.c2) AND (rt0.c2)))GLOB((+ ('-581623797')))) ASC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((((NULL)IS NOT(rt0.c0))) IS FALSE)) ORDER BY ((((((rt0.c0)&(rt0.c4)))OR((rt0.c2 IN ()))))OR('538044574')) ASC, rt0.c1  NULLS FIRST, ((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN x'af14' END)GLOB(rt0.c0));
SELECT ALL * FROM rt0 WHERE (((((((NULL)IS NOT(rt0.c0))) IS FALSE))AND(((((((860232689)OR((rt0.c2 IN (rt0.c3)))))AND(((((((((((rt0.c2)OR(rt0.c3)))OR('-228762077')))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM))))) ORDER BY ((((((rt0.c0)&(rt0.c4)))OR((rt0.c2 IN ()))))OR('538044574')) ASC, rt0.c1  NULLS FIRST, ((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN x'af14' END)GLOB(rt0.c0)) INTERSECT SELECT ALL * FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1)) BETWEEN (((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c4)))AND(0xffffffffe376f278)))AND(rt0.c4))) AND (CAST(x'6600' AS BLOB)))) ORDER BY ((((((rt0.c0)&(rt0.c4)))OR((rt0.c2 IN ()))))OR('538044574')) ASC, rt0.c1  NULLS FIRST, ((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN x'af14' END)GLOB(rt0.c0));
SELECT ALL * FROM rt0 WHERE (((((NULL)IS NOT(rt0.c0))) IS FALSE)) ORDER BY ((((((rt0.c0)&(rt0.c4)))OR((rt0.c2 IN ()))))OR('538044574')) ASC, rt0.c1  NULLS FIRST, ((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN x'af14' END)GLOB(rt0.c0));
SELECT ALL * FROM rt0 WHERE (((((((NULL)IS NOT(rt0.c0))) IS FALSE))AND(((((((860232689)OR((rt0.c2 IN (rt0.c3)))))AND(((((((((((rt0.c2)OR(rt0.c3)))OR('-228762077')))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))))OR(rt0.c1 COLLATE RTRIM))))) ORDER BY ((((((rt0.c0)&(rt0.c4)))OR((rt0.c2 IN ()))))OR('538044574')) ASC, rt0.c1  NULLS FIRST, ((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN x'af14' END)GLOB(rt0.c0)) INTERSECT SELECT ALL * FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1)) BETWEEN (((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c4)))AND(0xffffffffe376f278)))AND(rt0.c4))) AND (CAST(x'6600' AS BLOB)))) ORDER BY ((((((rt0.c0)&(rt0.c4)))OR((rt0.c2 IN ()))))OR('538044574')) ASC, rt0.c1  NULLS FIRST, ((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN x'af14' END)GLOB(rt0.c0));
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY ((((((((((((((((((((((rt0.c3)OR('^\7#T')))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c4)))AND(((rt0.c4) NOT BETWEEN (0.9198046578303558) AND (rt0.c1)))))AND(json_insert(rt0.c4, rt0.c4, rt0.c2, 0.08395587944644711))))OR(((((rt0.c4)OR(rt0.c0)))OR(rt0.c4)))))OR((((rt0.c4))>((rt0.c3))))) ASC  NULLS FIRST, ((((rt0.c4)>(rt0.c3)))<((+ (rt0.c2))));
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4)AND((((CAST(rt0.c3 AS TEXT)))<(((((rt0.c3, rt0.c0, rt0.c0, rt0.c4, rt0.c4))=((rt0.c3, rt0.c3, rt0.c4, rt0.c1, rt0.c2))))))))) ORDER BY ((((rt0.c3) ISNULL)) NOT NULL) LIMIT 2;
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY ((((((((((((((((((((((rt0.c3)OR('^\7#T')))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c4)))AND(((rt0.c4) NOT BETWEEN (0.9198046578303558) AND (rt0.c1)))))AND(json_insert(rt0.c4, rt0.c4, rt0.c2, 0.08395587944644711))))OR(((((rt0.c4)OR(rt0.c0)))OR(rt0.c4)))))OR((((rt0.c4))>((rt0.c3))))) ASC  NULLS FIRST, ((((rt0.c4)>(rt0.c3)))<((+ (rt0.c2))));
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4) ISNULL)  WHEN (((rt0.c0))<=((rt0.c2))) THEN 0.9955544679083106 WHEN (~ (rt0.c4)) THEN CAST(rt0.c1 AS BLOB) END) ORDER BY ((CAST(rt0.c4 AS NUMERIC))>=(0.8827420053828914)) DESC, (((NOT (rt0.c4))) IS TRUE);
SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c4) ISNULL)  WHEN (((rt0.c0))<=((rt0.c2))) THEN 0.9955544679083106 WHEN (~ (rt0.c4)) THEN CAST(rt0.c1 AS BLOB) END)AND(((((((((rt0.c1) IS FALSE))AND((rt0.c3 IN (rt0.c3, rt0.c0, rt0.c4)))))OR(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))))AND(CASE x'9d'  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END))))) ORDER BY ((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c3)))AND(((rt0.c0)GLOB(rt0.c3)))))AND(((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))))OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) ASC  NULLS FIRST, (((rt0.c0, rt0.c3)) BETWEEN (((((rt0.c2))>((rt0.c3))), ((rt0.c4)AND(rt0.c1)))) AND ((((rt0.c0)%(rt0.c4)), json_valid(rt0.c0)))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((((((((((((('-910735569')GLOB(NULL)))AND(((0x5c80f981) BETWEEN (rt0.c4) AND (x'')))))AND(((((rt0.c4)AND(rt0.c0)))AND('11292414')))))AND(TRIM(DISTINCT rt0.c2))))AND(rt0.c1 COLLATE RTRIM)))OR((- (rt0.c1)))))OR(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)))OR((~ (rt0.c3))))) ORDER BY ((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c3)))AND(((rt0.c0)GLOB(rt0.c3)))))AND(((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))))OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) ASC  NULLS FIRST, (((rt0.c0, rt0.c3)) BETWEEN (((((rt0.c2))>((rt0.c3))), ((rt0.c4)AND(rt0.c1)))) AND ((((rt0.c0)%(rt0.c4)), json_valid(rt0.c0)))) ASC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4) ISNULL)  WHEN (((rt0.c0))<=((rt0.c2))) THEN 0.9955544679083106 WHEN (~ (rt0.c4)) THEN CAST(rt0.c1 AS BLOB) END) ORDER BY ((CAST(rt0.c4 AS NUMERIC))>=(0.8827420053828914)) DESC, (((NOT (rt0.c4))) IS TRUE);
SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c4) ISNULL)  WHEN (((rt0.c0))<=((rt0.c2))) THEN 0.9955544679083106 WHEN (~ (rt0.c4)) THEN CAST(rt0.c1 AS BLOB) END)AND(((((((((rt0.c1) IS FALSE))AND((rt0.c3 IN (rt0.c3, rt0.c0, rt0.c4)))))OR(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))))AND(CASE x'9d'  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END))))) ORDER BY ((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c3)))AND(((rt0.c0)GLOB(rt0.c3)))))AND(((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))))OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) ASC  NULLS FIRST, (((rt0.c0, rt0.c3)) BETWEEN (((((rt0.c2))>((rt0.c3))), ((rt0.c4)AND(rt0.c1)))) AND ((((rt0.c0)%(rt0.c4)), json_valid(rt0.c0)))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((((((((((((('-910735569')GLOB(NULL)))AND(((0x5c80f981) BETWEEN (rt0.c4) AND (x'')))))AND(((((rt0.c4)AND(rt0.c0)))AND('11292414')))))AND(TRIM(DISTINCT rt0.c2))))AND(rt0.c1 COLLATE RTRIM)))OR((- (rt0.c1)))))OR(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)))OR((~ (rt0.c3))))) ORDER BY ((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c3)))AND(((rt0.c0)GLOB(rt0.c3)))))AND(((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))))OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) ASC  NULLS FIRST, (((rt0.c0, rt0.c3)) BETWEEN (((((rt0.c2))>((rt0.c3))), ((rt0.c4)AND(rt0.c1)))) AND ((((rt0.c0)%(rt0.c4)), json_valid(rt0.c0)))) ASC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c2 ELSE json_quote(rt0.c0) END) ORDER BY ('-1323441332' IN ((+ (rt0.c2)))) DESC  NULLS FIRST, CASE WHEN (((((('-970735243')OR(rt0.c4)))OR(1.953476835E9)))AND(rt0.c4)) THEN rt0.c2 COLLATE BINARY END  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c2 ELSE json_quote(rt0.c0) END)AND((((rt0.c3, '', rt0.c2, rt0.c2)) BETWEEN ((rt0.c3 COLLATE BINARY, x'', rt0.c3, (((rt0.c2, rt0.c2))!=((rt0.c3, rt0.c2))))) AND ((0x7ecc3092, (rt0.c0 IN (rt0.c1)), rt0.c0, rt0.c0 COLLATE BINARY)))))) ORDER BY ((((rt0.c1)&(rt0.c2)))&(((rt0.c0) IS TRUE))) DESC  NULLS LAST, ((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((rt0.c1 IN (rt0.c0, rt0.c2))) AND ((+ (rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c2 ELSE json_quote(rt0.c0) END) ORDER BY ('-1323441332' IN ((+ (rt0.c2)))) DESC  NULLS FIRST, CASE WHEN (((((('-970735243')OR(rt0.c4)))OR(1.953476835E9)))AND(rt0.c4)) THEN rt0.c2 COLLATE BINARY END  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c2 ELSE json_quote(rt0.c0) END)AND((((rt0.c3, '', rt0.c2, rt0.c2)) BETWEEN ((rt0.c3 COLLATE BINARY, x'', rt0.c3, (((rt0.c2, rt0.c2))!=((rt0.c3, rt0.c2))))) AND ((0x7ecc3092, (rt0.c0 IN (rt0.c1)), rt0.c0, rt0.c0 COLLATE BINARY)))))) ORDER BY ((((rt0.c1)&(rt0.c2)))&(((rt0.c0) IS TRUE))) DESC  NULLS LAST, ((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((rt0.c1 IN (rt0.c0, rt0.c2))) AND ((+ (rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)), UPPER(rt0.c2)))>=((((rt0.c4) BETWEEN (rt0.c3) AND ('0.4979620207144305')), TRIM(NULL))))) ORDER BY (((((((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)) IN ()) DESC  NULLS FIRST, LIKE(CASE WHEN rt0.c2 THEN x'f9' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END, TIME(rt0.c4, rt0.c3, rt0.c1, rt0.c4, rt0.c1))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)), UPPER(rt0.c2)))>=((((rt0.c4) BETWEEN (rt0.c3) AND ('0.4979620207144305')), TRIM(NULL))))) ORDER BY (((((((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)) IN ()) DESC  NULLS FIRST, LIKE(CASE WHEN rt0.c2 THEN x'f9' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END, TIME(rt0.c4, rt0.c3, rt0.c1, rt0.c4, rt0.c1))  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)), UPPER(rt0.c2)))>=((((rt0.c4) BETWEEN (rt0.c3) AND ('0.4979620207144305')), TRIM(NULL))))) ORDER BY (((((((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)) IN ()) DESC  NULLS FIRST, LIKE(CASE WHEN rt0.c2 THEN x'f9' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END, TIME(rt0.c4, rt0.c3, rt0.c1, rt0.c4, rt0.c1))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 ELSE 'f' END))) ORDER BY (NOT ((- (rt0.c3)))), ((((((0X1b4d8b5a)OR(((rt0.c3) ISNULL))))OR(((rt0.c4)=(rt0.c0)))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((NOT (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 ELSE 'f' END)))AND(((((((MAX(rt0.c4, 0.9239083299544525))AND(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))OR(((rt0.c1)<=(rt0.c2)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END))))) ORDER BY TRIM(DISTINCT (rt0.c4 IN (rt0.c4)), rt0.c1), CAST((- (rt0.c3)) AS REAL) DESC, NULL  NULLS FIRST;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE ((TYPEOF(DISTINCT rt0.c4) IN ())) ORDER BY rt0.c2 COLLATE NOCASE DESC  NULLS LAST;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE ((TYPEOF(DISTINCT rt0.c4) IN ())) ORDER BY rt0.c4  NULLS FIRST, rt0.c2 ASC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE ((((rt0.c0) NOT NULL) IN (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY rt0.c4  NULLS FIRST, rt0.c2 ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((- (((-7.6563004E7)*(rt0.c0))))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT), ((((x'7b')+(rt0.c1))) BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))) AND (CASE rt0.c3  WHEN 0.08395587944644711 THEN rt0.c1 END));
SELECT DISTINCT * FROM rt0 WHERE ((((- (((-7.6563004E7)*(rt0.c0)))))AND((((rt0.c1) IS TRUE) IN ())))) ORDER BY (- (PRINTF(rt0.c2, NULL))), (NOT (((rt0.c3) NOTNULL)))  NULLS LAST LIMIT 0X0;
SELECT * FROM rt0 WHERE ((- (((-7.6563004E7)*(rt0.c0))))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT), ((((x'7b')+(rt0.c1))) BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))) AND (CASE rt0.c3  WHEN 0.08395587944644711 THEN rt0.c1 END));
SELECT DISTINCT * FROM rt0 WHERE ((((- (((-7.6563004E7)*(rt0.c0)))))AND((((rt0.c1) IS TRUE) IN ())))) ORDER BY (- (PRINTF(rt0.c2, NULL))), (NOT (((rt0.c3) NOTNULL)))  NULLS LAST LIMIT 0X0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) NOTNULL)) ORDER BY (((rt0.c3, rt0.c4)) BETWEEN ((((rt0.c4) ISNULL), TRIM(rt0.c1))) AND (((rt0.c0 IN (rt0.c0, rt0.c0)), CAST(rt0.c4 AS BLOB)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT json_array_length(rt0.c1), rt0.c2) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c3 AS INTEGER)) NOTNULL))AND(NULLIF(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, (NULL IN (rt0.c4, rt0.c0)))))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) NOTNULL)) ORDER BY (((rt0.c3, rt0.c4)) BETWEEN ((((rt0.c4) ISNULL), TRIM(rt0.c1))) AND (((rt0.c0 IN (rt0.c0, rt0.c0)), CAST(rt0.c4 AS BLOB)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT json_array_length(rt0.c1), rt0.c2) DESC  NULLS FIRST;
SELECT MAX(rt0.c4) FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT MAX(rt0.c4) FROM rt0 WHERE ((((rt0.c0 IN ()))AND(((0.6646644670754072)>=(rt0.c4 COLLATE NOCASE))))) ORDER BY (+ (((rt0.c2) NOTNULL))) ASC LIMIT 0x1 INTERSECT SELECT MAX(rt0.c4) FROM rt0 WHERE (((((rt0.c3, rt0.c2)) BETWEEN ((rt0.c4, rt0.c3)) AND ((rt0.c2, rt0.c2))) IN (rt0.c1 COLLATE BINARY))) ORDER BY (+ (((rt0.c2) NOTNULL))) ASC LIMIT 1;
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT rt0.c3, rt0.c0) COLLATE BINARY);
SELECT * FROM rt0 WHERE (((IFNULL(DISTINCT rt0.c3, rt0.c0) COLLATE BINARY)AND(x'')));
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT rt0.c3, rt0.c0) COLLATE BINARY);
SELECT * FROM rt0 WHERE (((IFNULL(DISTINCT rt0.c3, rt0.c0) COLLATE BINARY)AND(x'')));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS REAL)) IS TRUE)) ORDER BY ((rt0.c2) IS FALSE) COLLATE NOCASE ASC  NULLS FIRST, ((((CASE WHEN rt0.c1 THEN rt0.c3 END)OR(((rt0.c3)%(rt0.c0)))))AND(1004385235))  NULLS LAST, ((((rt0.c2)||(-1194816857)))AND((('-1654687543') BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((CAST(rt0.c3 AS REAL)) IS TRUE))AND(TYPEOF(((rt0.c1) NOT NULL))))) ORDER BY rt0.c1  NULLS FIRST LIMIT 0x0 INTERSECT SELECT * FROM rt0 WHERE ((+ ((rt0.c0 IN (rt0.c1))))) ORDER BY rt0.c1  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS REAL)) IS TRUE)) ORDER BY ((rt0.c2) IS FALSE) COLLATE NOCASE ASC  NULLS FIRST, ((((CASE WHEN rt0.c1 THEN rt0.c3 END)OR(((rt0.c3)%(rt0.c0)))))AND(1004385235))  NULLS LAST, ((((rt0.c2)||(-1194816857)))AND((('-1654687543') BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((CAST(rt0.c3 AS REAL)) IS TRUE))AND(TYPEOF(((rt0.c1) NOT NULL))))) ORDER BY rt0.c1  NULLS FIRST LIMIT 0x0 INTERSECT SELECT * FROM rt0 WHERE ((+ ((rt0.c0 IN (rt0.c1))))) ORDER BY rt0.c1  NULLS FIRST LIMIT 0X0;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((rt0.c4 COLLATE RTRIM) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))) AND (((912455991)>>('7^L'))))) ORDER BY CASE WHEN ('2072484956' IN (rt0.c3)) THEN rt0.c2 WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END THEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c2)IS(x'5ab0ce')) THEN rt0.c1 COLLATE NOCASE END;
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c4 COLLATE RTRIM) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))) AND (((912455991)>>('7^L')))))AND(CASE (NOT (rt0.c4))  WHEN TRIM(rt0.c3) THEN (- (rt0.c1)) WHEN (((rt0.c1, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c4)) AND ((rt0.c0, rt0.c4, rt0.c0))) THEN CAST(rt0.c1 AS TEXT) ELSE ((rt0.c3) IS FALSE) END))) ORDER BY rt0.c4;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 END AS REAL)) ORDER BY CAST(4.56111936E8 AS INTEGER) COLLATE NOCASE DESC, CASE ((rt0.c4)<(x''))  WHEN (+ (rt0.c4)) THEN ((0.7570470817154521) NOTNULL) END;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 END AS REAL)) ORDER BY (CAST(rt0.c2 AS REAL) IN (rt0.c3, ((((((((rt0.c1)OR(rt0.c3)))AND('EFOxh	D')))OR(rt0.c0)))OR('1709050562')), LIKELIHOOD(DISTINCT rt0.c4, rt0.c1)))  NULLS FIRST, ((((rt0.c1)IS NOT(rt0.c4)))+(((rt0.c4)LIKE(rt0.c3))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN (- (rt0.c4)) THEN rt0.c0 WHEN ((0xffffffffffe1f99e)&(rt0.c3)) THEN (- (rt0.c1)) WHEN CASE WHEN x'' THEN rt0.c2 ELSE rt0.c4 END THEN ((rt0.c2) IS TRUE) END) ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS INTEGER) DESC  NULLS LAST, COALESCE(DISTINCT (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c0)+(rt0.c1)))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (- (rt0.c4)) THEN rt0.c0 WHEN ((-1967714)&(rt0.c3)) THEN (- (rt0.c1)) WHEN CASE WHEN x'' THEN rt0.c2 ELSE rt0.c4 END THEN ((rt0.c2) IS TRUE) END)AND(CAST((+ (rt0.c4)) AS NUMERIC)))) ORDER BY CAST(((rt0.c3)-(rt0.c4)) AS REAL) ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))))AND(1.436703206E9))) ORDER BY CAST(((rt0.c3)-(rt0.c4)) AS REAL) ASC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN (- (rt0.c4)) THEN rt0.c0 WHEN ((0xffffffffffe1f99e)&(rt0.c3)) THEN (- (rt0.c1)) WHEN CASE WHEN x'' THEN rt0.c2 ELSE rt0.c4 END THEN ((rt0.c2) IS TRUE) END) ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS INTEGER) DESC  NULLS LAST, COALESCE(DISTINCT (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c0)+(rt0.c1)))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (- (rt0.c4)) THEN rt0.c0 WHEN ((-1967714)&(rt0.c3)) THEN (- (rt0.c1)) WHEN CASE WHEN x'' THEN rt0.c2 ELSE rt0.c4 END THEN ((rt0.c2) IS TRUE) END)AND(CAST((+ (rt0.c4)) AS NUMERIC)))) ORDER BY CAST(((rt0.c3)-(rt0.c4)) AS REAL) ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))))AND(1.436703206E9))) ORDER BY CAST(((rt0.c3)-(rt0.c4)) AS REAL) ASC LIMIT 0X0;
SELECT * FROM rt0 WHERE ((((((('76495070')AND('iA5')))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c0 COLLATE NOCASE))) ORDER BY CAST(((rt0.c4) NOTNULL) AS NUMERIC) ASC, (((((rt0.c4) ISNULL)))<((((rt0.c3) NOT BETWEEN (1627866469) AND (rt0.c0))))) ASC;
SELECT * FROM rt0 WHERE ((((((((('76495070')AND('iA5')))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)))AND(((((((((((rt0.c3)>>(rt0.c2)))OR((rt0.c0 IN (rt0.c3, rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)))AND((- (rt0.c1)))))AND((NOT ('iE[]'))))))) ORDER BY CAST(((rt0.c4) NOTNULL) AS NUMERIC) ASC, (((((rt0.c4) ISNULL)))<((((rt0.c3) NOT BETWEEN (1627866469) AND (rt0.c0))))) ASC INTERSECT SELECT ALL * FROM rt0 WHERE (((LIKELY(rt0.c1))GLOB(((rt0.c0) NOTNULL)))) ORDER BY CAST(((rt0.c4) NOTNULL) AS NUMERIC) ASC, (((((rt0.c4) ISNULL)))<((((rt0.c3) NOT BETWEEN (0x61074565) AND (rt0.c0))))) ASC;
SELECT * FROM rt0 WHERE ((((((('76495070')AND('iA5')))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c0 COLLATE NOCASE))) ORDER BY CAST(((rt0.c4) NOTNULL) AS NUMERIC) ASC, (((((rt0.c4) ISNULL)))<((((rt0.c3) NOT BETWEEN (1627866469) AND (rt0.c0))))) ASC;
SELECT * FROM rt0 WHERE ((((((((('76495070')AND('iA5')))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)))AND(((((((((((rt0.c3)>>(rt0.c2)))OR((rt0.c0 IN (rt0.c3, rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)))AND((- (rt0.c1)))))AND((NOT ('iE[]'))))))) ORDER BY CAST(((rt0.c4) NOTNULL) AS NUMERIC) ASC, (((((rt0.c4) ISNULL)))<((((rt0.c3) NOT BETWEEN (1627866469) AND (rt0.c0))))) ASC INTERSECT SELECT ALL * FROM rt0 WHERE (((LIKELY(rt0.c1))GLOB(((rt0.c0) NOTNULL)))) ORDER BY CAST(((rt0.c4) NOTNULL) AS NUMERIC) ASC, (((((rt0.c4) ISNULL)))<((((rt0.c3) NOT BETWEEN (0x61074565) AND (rt0.c0))))) ASC;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (NULL) ORDER BY ((rt0.c2)<=(rt0.c3)) COLLATE BINARY, ((((((rt0.c1)OR(rt0.c0)))OR(x'')))&((rt0.c4 IN ())));
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (NULL) ORDER BY CASE ((NULL)>(rt0.c1))  WHEN ((((rt0.c4)OR(rt0.c4)))AND(x'fb7d')) THEN (NULL IN (rt0.c3, rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c0) NOTNULL) THEN '458602630' ELSE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END ASC  NULLS LAST, (((rt0.c2)) BETWEEN (((rt0.c1 IN ()))) AND ((HEX(rt0.c4)))) ASC;
SELECT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) NOT BETWEEN (((rt0.c1)>=(-1.893339925E9))) AND (json(rt0.c3))));
SELECT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) NOT BETWEEN (((rt0.c1)>=(-1.893339925E9))) AND (json(rt0.c3)))) LIMIT 0X2 INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)))OR(((rt0.c0)IS(x'1f4a'))))) LIMIT 0X2;
SELECT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) NOT BETWEEN (((rt0.c1)>=(-1.893339925E9))) AND (json(rt0.c3))));
SELECT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) NOT BETWEEN (((rt0.c1)>=(-1.893339925E9))) AND (json(rt0.c3)))) LIMIT 0X2 INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)))OR(((rt0.c0)IS(x'1f4a'))))) LIMIT 0X2;
SELECT * FROM rt0 WHERE (((((rt0.c4)OR(x'042c')))AND(rt0.c4)) COLLATE BINARY COLLATE RTRIM);
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4)OR(x'042c')))AND(rt0.c4)) COLLATE BINARY COLLATE RTRIM)AND('聵o]L\웨?'))) LIMIT 0x2;
SELECT * FROM rt0 WHERE (((((rt0.c4)OR(x'042c')))AND(rt0.c4)) COLLATE BINARY COLLATE RTRIM);
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4)OR(x'042c')))AND(rt0.c4)) COLLATE BINARY COLLATE RTRIM)AND('聵o]L\웨?'))) LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE ((ABS(DISTINCT rt0.c0) IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((ABS(DISTINCT rt0.c0) IN ())) ORDER BY CASE WHEN 0.7337884895426849 THEN rt0.c4 COLLATE BINARY WHEN HEX(rt0.c4) THEN (+ (rt0.c3)) END DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) ORDER BY CASE WHEN 0.7337884895426849 THEN rt0.c4 COLLATE BINARY WHEN HEX(rt0.c4) THEN (+ (rt0.c3)) END DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((ABS(DISTINCT rt0.c0) IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((ABS(DISTINCT rt0.c0) IN ())) ORDER BY CASE WHEN 0.7337884895426849 THEN rt0.c4 COLLATE BINARY WHEN HEX(rt0.c4) THEN (+ (rt0.c3)) END DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) ORDER BY CASE WHEN 0.7337884895426849 THEN rt0.c4 COLLATE BINARY WHEN HEX(rt0.c4) THEN (+ (rt0.c3)) END DESC  NULLS LAST LIMIT 0;
SELECT * FROM rt0 WHERE ((((((((0X77d0898f)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) IN ((((rt0.c2, NULL, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, rt0.c2, 0.31596443282358755, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2, rt0.c4))), ((rt0.c0)>>(rt0.c2)))));
SELECT * FROM rt0 WHERE ((((((((((0x77d0898f)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) IN ((((rt0.c2, NULL, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, rt0.c2, 0.31596443282358755, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2, rt0.c4))), ((rt0.c0)>>(rt0.c2)))))AND(((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c3) AND (((rt0.c1)*(rt0.c2))))))) ORDER BY rt0.c1 DESC  NULLS FIRST, rt0.c0 ASC LIMIT 0X2 INTERSECT SELECT * FROM rt0 WHERE ((((('忢^')>(NULL))) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (CASE WHEN rt0.c4 THEN rt0.c0 END))) ORDER BY rt0.c1 DESC  NULLS FIRST, rt0.c0 ASC LIMIT 0x2;
SELECT * FROM rt0 WHERE ((((((((0X77d0898f)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) IN ((((rt0.c2, NULL, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, rt0.c2, 0.31596443282358755, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2, rt0.c4))), ((rt0.c0)>>(rt0.c2)))));
SELECT * FROM rt0 WHERE ((((((((((0x77d0898f)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) IN ((((rt0.c2, NULL, rt0.c4, rt0.c3)) BETWEEN ((rt0.c4, rt0.c2, 0.31596443282358755, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2, rt0.c4))), ((rt0.c0)>>(rt0.c2)))))AND(((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c3) AND (((rt0.c1)*(rt0.c2))))))) ORDER BY rt0.c1 DESC  NULLS FIRST, rt0.c0 ASC LIMIT 0X2 INTERSECT SELECT * FROM rt0 WHERE ((((('忢^')>(NULL))) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (CASE WHEN rt0.c4 THEN rt0.c0 END))) ORDER BY rt0.c1 DESC  NULLS FIRST, rt0.c0 ASC LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE ((rt0.c4 IN (CASE rt0.c0  WHEN rt0.c1 THEN x'36' END, ((rt0.c0)||(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c4 IN (CASE rt0.c0  WHEN rt0.c1 THEN x'36' END)))AND((((x'89' IN (rt0.c3))) IS TRUE)))) ORDER BY -1490826403 DESC  NULLS FIRST, CAST(((rt0.c3) ISNULL) AS REAL)  NULLS LAST, NULL INTERSECT SELECT ALL * FROM rt0 WHERE ((+ (IFNULL(rt0.c1, rt0.c2)))) ORDER BY 0xffffffffa723cb5d DESC  NULLS FIRST, CAST(((rt0.c3) ISNULL) AS REAL)  NULLS LAST, NULL;
SELECT ALL * FROM rt0 WHERE ((rt0.c4 IN (CASE rt0.c0  WHEN rt0.c1 THEN x'36' END, ((rt0.c0)||(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c4 IN (CASE rt0.c0  WHEN rt0.c1 THEN x'36' END)))AND((((x'89' IN (rt0.c3))) IS TRUE)))) ORDER BY -1490826403 DESC  NULLS FIRST, CAST(((rt0.c3) ISNULL) AS REAL)  NULLS LAST, NULL INTERSECT SELECT ALL * FROM rt0 WHERE ((+ (IFNULL(rt0.c1, rt0.c2)))) ORDER BY 0xffffffffa723cb5d DESC  NULLS FIRST, CAST(((rt0.c3) ISNULL) AS REAL)  NULLS LAST, NULL;
SELECT * FROM rt0 WHERE (((((rt0.c3)>(rt0.c4)))<(rt0.c1)));
SELECT * FROM rt0 WHERE (((((rt0.c3)>(rt0.c4)))<(rt0.c1))) ORDER BY CAST(rt0.c4 COLLATE BINARY AS BLOB) ASC INTERSECT SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) IS FALSE)) ORDER BY CAST(rt0.c4 COLLATE BINARY AS BLOB) ASC;
SELECT * FROM rt0 WHERE (((((rt0.c3)>(rt0.c4)))<(rt0.c1)));
SELECT * FROM rt0 WHERE (((((rt0.c3)>(rt0.c4)))<(rt0.c1))) ORDER BY CAST(rt0.c4 COLLATE BINARY AS BLOB) ASC INTERSECT SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) IS FALSE)) ORDER BY CAST(rt0.c4 COLLATE BINARY AS BLOB) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)IS(rt0.c4)))<<((((rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c3, rt0.c2))))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c4)))<<((((rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c3, rt0.c2))))))AND(NULL))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT ALL * FROM rt0 WHERE (((CAST(-7.40535334E8 AS INTEGER)) IS FALSE)) ORDER BY ((((((0, rt0.c0, rt0.c4))>=((rt0.c3, 0.5598920686494592, rt0.c4))), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)), (- (rt0.c3)), CAST(rt0.c1 AS REAL)))>((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END, rt0.c3 COLLATE NOCASE, rt0.c1, ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(x'5f02c024'))))) ASC;
SELECT ALL * FROM rt0 WHERE (((((CAST(-7.40535334E8 AS INTEGER)) IS FALSE))AND(CASE WHEN (- (rt0.c2)) THEN (('') BETWEEN (rt0.c2) AND (rt0.c3)) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c3)&(rt0.c2)) WHEN ((0.2037667403405542)LIKE(rt0.c1)) THEN x'' WHEN ((rt0.c3)IS NOT(x'c560')) THEN '[z馝' COLLATE RTRIM WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN TRIM(rt0.c2) END))) ORDER BY ((((((0, rt0.c0, rt0.c4))>=((rt0.c3, 0.5598920686494592, rt0.c4))), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)), (- (rt0.c3)), CAST(rt0.c1 AS REAL)))>((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END, rt0.c3 COLLATE NOCASE, rt0.c1, ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(x'5f02c024'))))) ASC;
SELECT ALL * FROM rt0 WHERE (((CAST(-7.40535334E8 AS INTEGER)) IS FALSE)) ORDER BY ((((((0, rt0.c0, rt0.c4))>=((rt0.c3, 0.5598920686494592, rt0.c4))), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)), (- (rt0.c3)), CAST(rt0.c1 AS REAL)))>((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END, rt0.c3 COLLATE NOCASE, rt0.c1, ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(x'5f02c024'))))) ASC;
SELECT ALL * FROM rt0 WHERE (((((CAST(-7.40535334E8 AS INTEGER)) IS FALSE))AND(CASE WHEN (- (rt0.c2)) THEN (('') BETWEEN (rt0.c2) AND (rt0.c3)) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c3)&(rt0.c2)) WHEN ((0.2037667403405542)LIKE(rt0.c1)) THEN x'' WHEN ((rt0.c3)IS NOT(x'c560')) THEN '[z馝' COLLATE RTRIM WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN TRIM(rt0.c2) END))) ORDER BY ((((((0, rt0.c0, rt0.c4))>=((rt0.c3, 0.5598920686494592, rt0.c4))), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)), (- (rt0.c3)), CAST(rt0.c1 AS REAL)))>((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END, rt0.c3 COLLATE NOCASE, rt0.c1, ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(x'5f02c024'))))) ASC;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((((((((('*_v2뷄m')AND(0X6ceca6b6)))OR(CAST(rt0.c4 AS NUMERIC))))AND((((rt0.c2, rt0.c2, rt0.c2, x'f2f7')) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c3, rt0.c3, rt0.c0, rt0.c4))))))OR(((rt0.c3)IS NOT(rt0.c2)))));
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE ((((((((('*_v2뷄m')AND(1827448502)))OR(CAST(rt0.c4 AS NUMERIC))))AND((((rt0.c2, rt0.c2, rt0.c2, x'f2f7')) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c3, rt0.c3, rt0.c0, rt0.c4))))))OR(((rt0.c3)IS NOT(rt0.c2))))) ORDER BY (((+ (rt0.c1)))<>(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))  NULLS FIRST, (~ ((rt0.c4 IN (rt0.c1)))) ASC INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (CAST(ABS(rt0.c1) AS BLOB)) ORDER BY (((+ (rt0.c1)))<>(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))  NULLS FIRST, (~ ((rt0.c4 IN (rt0.c1)))) ASC;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c0)) COLLATE RTRIM) ORDER BY ((0.32293943394305313) BETWEEN (rt0.c4 COLLATE RTRIM) AND (NULLIF(rt0.c4, rt0.c4))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c0)) COLLATE RTRIM) ORDER BY ((0.32293943394305313) BETWEEN (rt0.c4 COLLATE RTRIM) AND (NULLIF(rt0.c4, rt0.c4))) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (rt0.c0) ORDER BY ((0.32293943394305313) BETWEEN (rt0.c4 COLLATE RTRIM) AND (NULLIF(rt0.c4, rt0.c4))) ASC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) WHEN ((('zu', rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c0, rt0.c2))) THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END ASC;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(((rt0.c0 COLLATE RTRIM)OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))))) ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) WHEN ((('zu', rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c0, rt0.c2))) THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END ASC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((0.5818167157817631) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4))) AND (PRINTF(rt0.c1)))) ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) WHEN ((('zu', rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c0, rt0.c2))) THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END ASC LIMIT 1;
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) WHEN ((('zu', rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c0, rt0.c2))) THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END ASC;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(((rt0.c0 COLLATE RTRIM)OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))))) ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) WHEN ((('zu', rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c0, rt0.c2))) THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END ASC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((0.5818167157817631) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4))) AND (PRINTF(rt0.c1)))) ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) WHEN ((('zu', rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4)) AND ((rt0.c0, rt0.c2))) THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END ASC LIMIT 1;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM DESC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)AND(((rt0.c4) IS FALSE)))) ORDER BY CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM DESC LIMIT 0x1;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM DESC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)AND(((rt0.c4) IS FALSE)))) ORDER BY CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM DESC LIMIT 0x1;
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c1)>>(rt0.c0)), rt0.c0 COLLATE BINARY)) ORDER BY (NOT (UNLIKELY(DISTINCT rt0.c0))) ASC  NULLS FIRST, (CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END IN (((rt0.c1) BETWEEN (rt0.c4) AND (-1.78196483E9)), NULLIF(rt0.c3, rt0.c4))) ASC;
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c1)>>(rt0.c0)), rt0.c0 COLLATE BINARY)) ORDER BY (NOT (UNLIKELY(DISTINCT rt0.c0))) ASC  NULLS FIRST, (CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END IN (((rt0.c1) BETWEEN (rt0.c4) AND (-1.78196483E9)), NULLIF(rt0.c3, rt0.c4))) ASC INTERSECT SELECT ALL * FROM rt0 WHERE ((- ((NOT (rt0.c4))))) ORDER BY (NOT (UNLIKELY(DISTINCT rt0.c0))) ASC  NULLS FIRST, (CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END IN (((rt0.c1) BETWEEN (rt0.c4) AND (-1.78196483E9)), NULLIF(rt0.c3, rt0.c4))) ASC;
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c1)>>(rt0.c0)), rt0.c0 COLLATE BINARY)) ORDER BY (NOT (UNLIKELY(DISTINCT rt0.c0))) ASC  NULLS FIRST, (CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END IN (((rt0.c1) BETWEEN (rt0.c4) AND (-1.78196483E9)), NULLIF(rt0.c3, rt0.c4))) ASC;
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c1)>>(rt0.c0)), rt0.c0 COLLATE BINARY)) ORDER BY (NOT (UNLIKELY(DISTINCT rt0.c0))) ASC  NULLS FIRST, (CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END IN (((rt0.c1) BETWEEN (rt0.c4) AND (-1.78196483E9)), NULLIF(rt0.c3, rt0.c4))) ASC INTERSECT SELECT ALL * FROM rt0 WHERE ((- ((NOT (rt0.c4))))) ORDER BY (NOT (UNLIKELY(DISTINCT rt0.c0))) ASC  NULLS FIRST, (CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END IN (((rt0.c1) BETWEEN (rt0.c4) AND (-1.78196483E9)), NULLIF(rt0.c3, rt0.c4))) ASC;
SELECT * FROM rt0 WHERE ((((~ (NULL))) BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END) AND (0X50d4d624)));
SELECT DISTINCT * FROM rt0 WHERE ((((~ (NULL))) BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END) AND (0x50d4d624))) ORDER BY ((((rt0.c0)*(rt0.c4))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((NOT (rt0.c1)))) ASC  NULLS FIRST, rt0.c0 ASC;
SELECT * FROM rt0 WHERE ((((~ (NULL))) BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END) AND (0X50d4d624)));
SELECT DISTINCT * FROM rt0 WHERE ((((~ (NULL))) BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END) AND (0x50d4d624))) ORDER BY ((((rt0.c0)*(rt0.c4))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((NOT (rt0.c1)))) ASC  NULLS FIRST, rt0.c0 ASC;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)|(((rt0.c0)OR(rt0.c2))))) ORDER BY CAST(rt0.c4 COLLATE RTRIM AS TEXT)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)|(((rt0.c0)OR(rt0.c2)))))AND(rt0.c3 COLLATE NOCASE))) ORDER BY CAST(rt0.c4 COLLATE RTRIM AS TEXT)  NULLS LAST LIMIT 0X4 INTERSECT SELECT * FROM rt0 WHERE (((json(rt0.c3))!=(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END))) ORDER BY CAST(rt0.c4 COLLATE RTRIM AS TEXT)  NULLS LAST LIMIT 4;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)|(((rt0.c0)OR(rt0.c2))))) ORDER BY CAST(rt0.c4 COLLATE RTRIM AS TEXT)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)|(((rt0.c0)OR(rt0.c2)))))AND(rt0.c3 COLLATE NOCASE))) ORDER BY CAST(rt0.c4 COLLATE RTRIM AS TEXT)  NULLS LAST LIMIT 0X4 INTERSECT SELECT * FROM rt0 WHERE (((json(rt0.c3))!=(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END))) ORDER BY CAST(rt0.c4 COLLATE RTRIM AS TEXT)  NULLS LAST LIMIT 4;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((- (rt0.c0)));
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE ((((- (rt0.c0)))AND((((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((NULL))))<>(((('o6uvN')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))))) ORDER BY CASE CAST(rt0.c2 AS TEXT)  WHEN (rt0.c0 IN (rt0.c0)) THEN CASE WHEN rt0.c1 THEN 1477441143 END ELSE (((rt0.c4))<=((rt0.c0))) END ASC INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (((IFNULL(DISTINCT rt0.c3, rt0.c4))||((rt0.c4 IN ())))) ORDER BY CASE CAST(rt0.c2 AS TEXT)  WHEN (rt0.c0 IN (rt0.c0)) THEN CASE WHEN rt0.c1 THEN 1477441143 END ELSE (((rt0.c4))<=((rt0.c0))) END ASC;
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (rt0.c1))) ORDER BY (('50479720')||((rt0.c3 IN (rt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c1)))AND(((((((json_array('㋽㫦i', rt0.c2, rt0.c0, rt0.c4))OR(TIME(rt0.c1, rt0.c0, rt0.c1))))AND(rt0.c4)))OR((- (rt0.c0))))))) ORDER BY CASE json_remove(rt0.c1, rt0.c4, rt0.c4, rt0.c2)  WHEN DATE(rt0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c0) THEN CAST(rt0.c0 AS REAL) WHEN INSTR(rt0.c4, '1566169085') THEN json_valid(rt0.c2) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 END THEN ((rt0.c0)==(rt0.c0)) ELSE x'' END ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((('g.')+(('?۔Y42%!eY' IN ())))) ORDER BY (((((0.7213237742857513, rt0.c1, rt0.c0)) BETWEEN ((rt0.c4, rt0.c4, rt0.c4)) AND ((rt0.c0, rt0.c1, rt0.c4)))) BETWEEN ((~ (rt0.c3))) AND (((((rt0.c4)AND(rt0.c0)))OR(rt0.c3))))  NULLS LAST, CASE ((((rt0.c0)OR(rt0.c3)))AND(rt0.c1))  WHEN UPPER(DISTINCT '779611745') THEN CASE WHEN rt0.c2 THEN rt0.c0 END END  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((('g.')+(('?۔Y42%!eY' IN ())))) ORDER BY UNLIKELY(DISTINCT ((((rt0.c0)OR(x'2b0f')))OR(rt0.c0))) DESC LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((('g.')+(('?۔Y42%!eY' IN ())))) ORDER BY (((((0.7213237742857513, rt0.c1, rt0.c0)) BETWEEN ((rt0.c4, rt0.c4, rt0.c4)) AND ((rt0.c0, rt0.c1, rt0.c4)))) BETWEEN ((~ (rt0.c3))) AND (((((rt0.c4)AND(rt0.c0)))OR(rt0.c3))))  NULLS LAST, CASE ((((rt0.c0)OR(rt0.c3)))AND(rt0.c1))  WHEN UPPER(DISTINCT '779611745') THEN CASE WHEN rt0.c2 THEN rt0.c0 END END  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((('g.')+(('?۔Y42%!eY' IN ())))) ORDER BY UNLIKELY(DISTINCT ((((rt0.c0)OR(x'2b0f')))OR(rt0.c0))) DESC LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c4)))!=((((rt0.c2, rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c0, rt0.c4, rt0.c0))))));
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c4)))<((((rt0.c2, rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c0, rt0.c4, rt0.c0)))))) ORDER BY (((((rt0.c4, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c4)))) IS TRUE);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c4)))!=((((rt0.c2, rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c0, rt0.c4, rt0.c0))))));
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c4)))<((((rt0.c2, rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c0, rt0.c4, rt0.c0)))))) ORDER BY (((((rt0.c4, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c4)))) IS TRUE);
SELECT MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c3)!=(rt0.c3))) ISNULL));
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c3)>(rt0.c3))) ISNULL));
SELECT * FROM rt0 WHERE (((((((((((((0.8561583248547171)OR(rt0.c2)))OR(rt0.c1)))OR(((rt0.c4)<>('-228762077')))))OR(CAST(rt0.c2 AS NUMERIC))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END)))AND(((rt0.c0)%(0xffffffffcdeb8b37)))));
SELECT * FROM rt0 WHERE (((((((((((((0.8561583248547171)OR(rt0.c2)))OR(rt0.c1)))OR(((rt0.c4)<>('-228762077')))))OR(CAST(rt0.c2 AS NUMERIC))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END)))AND(((rt0.c0)%(0Xffffffffcdeb8b37))))) ORDER BY ((((((CASE WHEN rt0.c2 THEN 0.595688796505529 WHEN rt0.c4 THEN 0.38661372476650435 ELSE rt0.c0 END)AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c3) NOTNULL))))OR(rt0.c3)) LIMIT 0;
SELECT * FROM rt0 WHERE (((((((((((((0.8561583248547171)OR(rt0.c2)))OR(rt0.c1)))OR(((rt0.c4)<>('-228762077')))))OR(CAST(rt0.c2 AS NUMERIC))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END)))AND(((rt0.c0)%(0xffffffffcdeb8b37)))));
SELECT * FROM rt0 WHERE (((((((((((((0.8561583248547171)OR(rt0.c2)))OR(rt0.c1)))OR(((rt0.c4)<>('-228762077')))))OR(CAST(rt0.c2 AS NUMERIC))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END)))AND(((rt0.c0)%(0Xffffffffcdeb8b37))))) ORDER BY ((((((CASE WHEN rt0.c2 THEN 0.595688796505529 WHEN rt0.c4 THEN 0.38661372476650435 ELSE rt0.c0 END)AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c3) NOTNULL))))OR(rt0.c3)) LIMIT 0;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c4 THEN rt0.c2 WHEN 2072484956 THEN rt0.c3 END THEN (NULL IN ()) ELSE ((((rt0.c1)AND(rt0.c4)))AND(rt0.c1)) END) ORDER BY (((rt0.c0)GLOB(rt0.c0)) IN (((rt0.c1)OR(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (1.709050562E9)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN CASE WHEN rt0.c4 THEN rt0.c2 WHEN 2072484956 THEN rt0.c3 END THEN (NULL IN ()) ELSE ((((rt0.c1)AND(rt0.c4)))AND(rt0.c1)) END)AND(CAST(rt0.c4 AS BLOB) COLLATE NOCASE COLLATE RTRIM))) ORDER BY (((rt0.c0)GLOB(rt0.c0)) IN (((rt0.c1)OR(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (1.709050562E9)))) DESC LIMIT 0x1 INTERSECT SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>((0.09137474371147447)))) NOT NULL)) ORDER BY (((rt0.c0)GLOB(rt0.c0)) IN (((rt0.c1)OR(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (1.709050562E9)))) DESC LIMIT 0x1;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CASE rt0.c1 COLLATE BINARY  WHEN ((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c4)) THEN HEX(DISTINCT rt0.c3) WHEN ((rt0.c0) IS FALSE) THEN CAST(rt0.c3 AS TEXT) ELSE LOWER(DISTINCT rt0.c0) END ASC  NULLS LAST, json(rt0.c4) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((rt0.c0)AND((+ ('L5딪T'))))) ORDER BY ((rt0.c4 COLLATE RTRIM) BETWEEN (NULL) AND ((((rt0.c1, rt0.c1))<=((rt0.c0, rt0.c3)))))  NULLS LAST, ABS(CAST(rt0.c4 AS BLOB)) DESC LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((((rt0.c4) NOTNULL))OR(((rt0.c4)>(rt0.c2)))))OR((rt0.c4 IN ()))))AND(rt0.c0 COLLATE RTRIM))) ORDER BY ((rt0.c4 COLLATE RTRIM) BETWEEN (NULL) AND ((((rt0.c1, rt0.c1))<=((rt0.c0, rt0.c3)))))  NULLS LAST, ABS(CAST(rt0.c4 AS BLOB)) DESC LIMIT 0x1;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)AND(CAST((NOT (rt0.c2)) AS REAL)))) ORDER BY UPPER(((rt0.c2)/(rt0.c0)))  NULLS LAST, (((((rt0.c4 IN ()))OR(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((+ (rt0.c3)))) DESC, CASE WHEN (+ (rt0.c2)) THEN rt0.c3 ELSE ((rt0.c1)&(rt0.c1)) END  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)AND(CAST((NOT (rt0.c2)) AS REAL)))) ORDER BY UPPER(((rt0.c2)/(rt0.c0)))  NULLS LAST, (((((rt0.c4 IN ()))OR(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((+ (rt0.c3)))) DESC, CASE WHEN (+ (rt0.c2)) THEN rt0.c3 ELSE ((rt0.c1)&(rt0.c1)) END  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c2)GLOB(rt0.c0))) BETWEEN (rtreenode(rt0.c3, rt0.c2)) AND (((rt0.c3)<=(rt0.c4)))), TRIM(DISTINCT (0xffffffff8393707b IN ()), ((NULL) IS FALSE)) ASC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c2, rt0.c0))>=((rt0.c2, x'cb'))) IN (((rt0.c1)>(rt0.c2))))) ORDER BY ((((rt0.c2)GLOB(rt0.c0))) BETWEEN (rtreenode(rt0.c3, rt0.c2)) AND (((rt0.c3)<=(rt0.c4)))), TRIM(DISTINCT (0Xffffffff8393707b IN ()), ((NULL) IS FALSE)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c2)GLOB(rt0.c0))) BETWEEN (rtreenode(rt0.c3, rt0.c2)) AND (((rt0.c3)<=(rt0.c4)))), TRIM(DISTINCT (0xffffffff8393707b IN ()), ((NULL) IS FALSE)) ASC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c2, rt0.c0))>=((rt0.c2, x'cb'))) IN (((rt0.c1)>(rt0.c2))))) ORDER BY ((((rt0.c2)GLOB(rt0.c0))) BETWEEN (rtreenode(rt0.c3, rt0.c2)) AND (((rt0.c3)<=(rt0.c4)))), TRIM(DISTINCT (0Xffffffff8393707b IN ()), ((NULL) IS FALSE)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 END) AND (rt0.c1)));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 END) AND (rt0.c1))) LIMIT 0x4;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 END) AND (rt0.c1)));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 END) AND (rt0.c1))) LIMIT 0x4;
SELECT MAX(rt0.c0) FROM rt0 WHERE (MIN(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END, (rt0.c0 IN (rt0.c1)), (((rt0.c2, x'1d', rt0.c2))>=((rt0.c4, rt0.c2, rt0.c3)))));
SELECT MAX(rt0.c0) FROM rt0 WHERE (MIN(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END, (rt0.c0 IN (rt0.c1)), (((rt0.c2, x'1d', rt0.c2))>((rt0.c4, rt0.c2, rt0.c3))))) INTERSECT SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (CAST(((NULL)%(rt0.c2)) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (highlight((rt0.c4 IN (rt0.c0)), (rt0.c2 IN ('0.5352950627620193')), CAST(rt0.c1 AS NUMERIC), TRIM(rt0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (highlight((rt0.c4 IN (rt0.c0)), (rt0.c2 IN ('0.5352950627620193')), CAST(rt0.c1 AS NUMERIC), TRIM(rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(((rt0.c4)&(rt0.c0))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (TYPEOF(((rt0.c4)&(rt0.c0)))) ORDER BY ((COALESCE(DISTINCT rt0.c2, rt0.c3, rt0.c0)) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END) AND ((rt0.c3 IN ()))) ASC  NULLS FIRST, LTRIM(rt0.c1 COLLATE RTRIM) ASC, (('')&(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END))  NULLS FIRST, ((((rt0.c4)-(rt0.c3)))LIKE((((rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c4))))) ASC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((('0.622290299903252')AND((('F~')GLOB(rt0.c2)))))AND(((rt0.c1) ISNULL)))) ORDER BY ((COALESCE(DISTINCT rt0.c2, rt0.c3, rt0.c0)) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END) AND ((rt0.c3 IN ()))) ASC  NULLS FIRST, LTRIM(rt0.c1 COLLATE RTRIM) ASC, (('')&(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END))  NULLS FIRST, ((((rt0.c4)-(rt0.c3)))LIKE((((rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c4))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)AND(CAST(rt0.c3 AS NUMERIC))))AND(((x'0389') ISNULL))))AND(LIKE(rt0.c1, -907832682, '8'))));
SELECT * FROM rt0 WHERE (((((((((rt0.c1)AND(CAST(rt0.c3 AS NUMERIC))))AND(((x'0389') ISNULL))))AND(LIKE(rt0.c1, -907832682, '8'))))AND((((rt0.c2)) BETWEEN ((json_extract('0.9259177911575226', rt0.c2, rt0.c0, rt0.c2, rt0.c4))) AND ((((rt0.c2)OR(rt0.c0)))))))) ORDER BY ((((rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c0))) IN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c4)/(rt0.c4))))  NULLS LAST, CASE WHEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)) THEN ((rt0.c2)AND(rt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)AND(CAST(rt0.c3 AS NUMERIC))))AND(((x'0389') ISNULL))))AND(LIKE(rt0.c1, -907832682, '8'))));
SELECT * FROM rt0 WHERE (((((((((rt0.c1)AND(CAST(rt0.c3 AS NUMERIC))))AND(((x'0389') ISNULL))))AND(LIKE(rt0.c1, -907832682, '8'))))AND((((rt0.c2)) BETWEEN ((json_extract('0.9259177911575226', rt0.c2, rt0.c0, rt0.c2, rt0.c4))) AND ((((rt0.c2)OR(rt0.c0)))))))) ORDER BY ((((rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c0))) IN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c4)/(rt0.c4))))  NULLS LAST, CASE WHEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)) THEN ((rt0.c2)AND(rt0.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT (((x'', NULL)) BETWEEN ((rt0.c1, rt0.c2)) AND (('-740535334', '5'))), CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)) ORDER BY ((rt0.c4) IS FALSE) DESC, ((rt0.c4 COLLATE NOCASE) NOTNULL)  NULLS LAST, (((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)) IN ((((rt0.c0, rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, 1.656892549E9, rt0.c2, rt0.c3)) AND ((rt0.c0, rt0.c4, rt0.c0, rt0.c4))), CAST(NULL AS INTEGER))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((LIKELIHOOD(DISTINCT (((x'', NULL)) BETWEEN ((rt0.c1, rt0.c2)) AND (('-740535334', '5'))), CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END))AND(CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c4) IS TRUE) END))) ORDER BY (((rt0.c4)) BETWEEN ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) ASC, (((rt0.c0, rt0.c4)) BETWEEN ((((rt0.c1) BETWEEN ('') AND ('827666359')), x'8f')) AND (((NOT (rt0.c4)), '1444161202'))) ASC LIMIT 0x4;
SELECT MAX(rt0.c0) FROM rt0 WHERE (CASE ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((1756418760)-(rt0.c1)) THEN 0.9213598487965424 ELSE ((rt0.c3) IS TRUE) END);
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (((CASE ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((0x68b0d2c8)-(rt0.c1)) THEN 0.9213598487965424 ELSE ((rt0.c3) IS TRUE) END)AND(json_object(rt0.c2, CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 END, 'le')))) LIMIT 0X2 INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END AS REAL)) LIMIT 2;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (CAST((((rt0.c0, x'91')) BETWEEN ((rt0.c2, rt0.c0)) AND ((rt0.c4, rt0.c2))) AS BLOB)) ORDER BY x'' ASC;
SELECT MIN(rt0.c3) FROM rt0 WHERE (CAST((((rt0.c0, x'91')) BETWEEN ((rt0.c2, rt0.c0)) AND ((rt0.c4, rt0.c2))) AS BLOB)) ORDER BY x'' ASC LIMIT 0x2 INTERSECT SELECT ALL MIN(rt0.c3) FROM rt0 WHERE ((((((((((((NOT (rt0.c1)))AND(((rt0.c4)LIKE(rt0.c4)))))OR((+ (rt0.c4)))))OR(((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(0.24039461294755293)))))AND(((rt0.c3)%(rt0.c1)))))OR(((rt0.c0)&(rt0.c0))))) ORDER BY x'' ASC LIMIT 0X2;
SELECT MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN ('-1551289881') AND (rt0.c0))) IS FALSE));
SELECT MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN ('-1551289881') AND (rt0.c0))) IS FALSE)) ORDER BY rt0.c0 ASC  NULLS FIRST INTERSECT SELECT ALL MAX(rt0.c2) FROM rt0 WHERE ((('8')>=(CASE WHEN rt0.c2 THEN rt0.c1 ELSE 0.041433903950121476 END))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c4) NOTNULL))) ASC, (NOT (((rt0.c1) IS FALSE)))  NULLS LAST INTERSECT SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((NULL) ISNULL), ((rt0.c3)&(rt0.c0)))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c4) NOTNULL))) ASC, (NOT (((rt0.c1) IS FALSE)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c0))) BETWEEN ((rt0.c2 IN ('1586928368'))) AND ((rt0.c3 IN (rt0.c0)))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((- (rt0.c0))) BETWEEN ((rt0.c2 IN ('1586928368'))) AND ((rt0.c3 IN (rt0.c0))))) LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT (((((((((((('0.1577259704754851')OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))) LIMIT 2;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) ISNULL)))>(((((rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c3, -1460951953)) AND ((rt0.c4, rt0.c0)))))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1) ISNULL)))>(((((rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c3, 0xffffffffa8eba46f)) AND ((rt0.c4, rt0.c0))))))) LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) ISNULL)))>(((((rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c3, -1460951953)) AND ((rt0.c4, rt0.c0)))))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1) ISNULL)))>(((((rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c3, 0xffffffffa8eba46f)) AND ((rt0.c4, rt0.c0))))))) LIMIT 0x0;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE ((((((((+ (rt0.c0)))AND(CASE rt0.c4  WHEN rt0.c0 THEN 0x746fb0e3 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 END)))AND(((('ትXfn*heﲁ'))==((rt0.c1))))))OR('Fm'))) ORDER BY (((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOT BETWEEN (((rt0.c3)||(rt0.c0))) AND (((rt0.c2)IS(rt0.c3)))) ASC, (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c4))))<((TRIM(rt0.c1, rt0.c3))))  NULLS LAST, TRIM(CAST(rt0.c1 AS BLOB), SUBSTR(0.979522508810194, rt0.c2)) DESC;
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE ((((((((((+ (rt0.c0)))AND(CASE rt0.c4  WHEN rt0.c0 THEN 1953476835 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 END)))AND(((('ትXfn*heﲁ'))==((rt0.c1))))))OR('Fm')))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE NOCASE))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((0X7c90792c)OR('')))) AND ((json_remove(rt0.c2, rt0.c0, rt0.c4, rt0.c3, 0.8680328653841799, x'c38ef4'))))  NULLS FIRST LIMIT 0x3;
SELECT ALL COUNT(*) FROM rt0 WHERE (-984070661);
SELECT ALL COUNT(*) FROM rt0 WHERE (0xffffffffc55845fb) ORDER BY CASE CAST(NULL AS INTEGER)  WHEN ((rt0.c2)=(rt0.c1)) THEN rt0.c1 COLLATE NOCASE WHEN TYPEOF(DISTINCT rt0.c4) THEN ((rt0.c3)/(rt0.c1)) END DESC LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT rt0.c2 COLLATE NOCASE));
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT rt0.c2 COLLATE NOCASE)) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT rt0.c2 COLLATE NOCASE));
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT rt0.c2 COLLATE NOCASE)) LIMIT 0X0;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c3)!=(rt0.c4)) THEN ((rt0.c3)>=(rt0.c0)) WHEN (~ (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c0) IS TRUE) THEN MIN(rt0.c0, rt0.c1, rt0.c1, rt0.c0) WHEN (((rt0.c3, '-403041340', rt0.c2, rt0.c4))<>((rt0.c1, rt0.c3, rt0.c0, rt0.c1))) THEN ((rt0.c3) ISNULL) ELSE ((rt0.c1)<(rt0.c4)) END) ORDER BY ((((rt0.c1, rt0.c4)) BETWEEN ((x'cd352a', rt0.c4)) AND ((rt0.c3, rt0.c3))) IN ((rt0.c4 IN ()))), ((((((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE '*_v2뷄m' END)AND(((rt0.c0) NOTNULL))))OR(((rt0.c2) IS FALSE))))AND((((rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1)) AND ((rt0.c4, rt0.c2))))))OR(((rt0.c0)|(rt0.c4))))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c3)<>(rt0.c4)) THEN ((rt0.c3)>=(rt0.c0)) WHEN (~ (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c0) IS TRUE) THEN MIN(rt0.c0, rt0.c1, rt0.c1, rt0.c0) WHEN (((rt0.c3, '-403041340', rt0.c2, rt0.c4))<>((rt0.c1, rt0.c3, rt0.c0, rt0.c1))) THEN ((rt0.c3) ISNULL) ELSE ((rt0.c1)<(rt0.c4)) END) ORDER BY ((((rt0.c1, rt0.c4)) BETWEEN ((x'cd352a', rt0.c4)) AND ((rt0.c3, rt0.c3))) IN ((rt0.c4 IN ()))), ((((((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE '*_v2뷄m' END)AND(((rt0.c0) NOTNULL))))OR(((rt0.c2) IS FALSE))))AND((((rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1)) AND ((rt0.c4, rt0.c2))))))OR(((rt0.c0)|(rt0.c4))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) ORDER BY ((((rt0.c1, rt0.c4)) BETWEEN ((x'cd352a', rt0.c4)) AND ((rt0.c3, rt0.c3))) IN ((rt0.c4 IN ()))), ((((((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE '*_v2뷄m' END)AND(((rt0.c0) NOTNULL))))OR(((rt0.c2) IS FALSE))))AND((((rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1)) AND ((rt0.c4, rt0.c2))))))OR(((rt0.c0)|(rt0.c4))))  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c3)!=(rt0.c4)) THEN ((rt0.c3)>=(rt0.c0)) WHEN (~ (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c0) IS TRUE) THEN MIN(rt0.c0, rt0.c1, rt0.c1, rt0.c0) WHEN (((rt0.c3, '-403041340', rt0.c2, rt0.c4))<>((rt0.c1, rt0.c3, rt0.c0, rt0.c1))) THEN ((rt0.c3) ISNULL) ELSE ((rt0.c1)<(rt0.c4)) END) ORDER BY ((((rt0.c1, rt0.c4)) BETWEEN ((x'cd352a', rt0.c4)) AND ((rt0.c3, rt0.c3))) IN ((rt0.c4 IN ()))), ((((((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE '*_v2뷄m' END)AND(((rt0.c0) NOTNULL))))OR(((rt0.c2) IS FALSE))))AND((((rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1)) AND ((rt0.c4, rt0.c2))))))OR(((rt0.c0)|(rt0.c4))))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c3)<>(rt0.c4)) THEN ((rt0.c3)>=(rt0.c0)) WHEN (~ (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c0) IS TRUE) THEN MIN(rt0.c0, rt0.c1, rt0.c1, rt0.c0) WHEN (((rt0.c3, '-403041340', rt0.c2, rt0.c4))<>((rt0.c1, rt0.c3, rt0.c0, rt0.c1))) THEN ((rt0.c3) ISNULL) ELSE ((rt0.c1)<(rt0.c4)) END) ORDER BY ((((rt0.c1, rt0.c4)) BETWEEN ((x'cd352a', rt0.c4)) AND ((rt0.c3, rt0.c3))) IN ((rt0.c4 IN ()))), ((((((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE '*_v2뷄m' END)AND(((rt0.c0) NOTNULL))))OR(((rt0.c2) IS FALSE))))AND((((rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1)) AND ((rt0.c4, rt0.c2))))))OR(((rt0.c0)|(rt0.c4))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) ORDER BY ((((rt0.c1, rt0.c4)) BETWEEN ((x'cd352a', rt0.c4)) AND ((rt0.c3, rt0.c3))) IN ((rt0.c4 IN ()))), ((((((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 ELSE '*_v2뷄m' END)AND(((rt0.c0) NOTNULL))))OR(((rt0.c2) IS FALSE))))AND((((rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1)) AND ((rt0.c4, rt0.c2))))))OR(((rt0.c0)|(rt0.c4))))  NULLS LAST;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((((rt0.c0)>>(rt0.c0)))IS(((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))));
SELECT MIN(rt0.c3) FROM rt0 WHERE (((((((rt0.c0)>>(rt0.c0)))IS(((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))))AND(NULL))) ORDER BY x'84' LIMIT 0;
SELECT * FROM rt0 WHERE (((((IFNULL(DISTINCT rt0.c0, 1.627866469E9))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))))) ORDER BY CASE rt0.c0  WHEN ((rt0.c2)GLOB(rt0.c1)) THEN CAST('o^' AS BLOB) WHEN ((rt0.c1)>(rt0.c1)) THEN json_quote(rt0.c3) ELSE ((rt0.c4) NOTNULL) END ASC  NULLS FIRST, x'274e' DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((IFNULL(DISTINCT rt0.c0, 1.627866469E9))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))))) ORDER BY CASE CASE rt0.c3  WHEN '-1369343092' THEN rt0.c2 WHEN 0.31103801395365505 THEN rt0.c2 END  WHEN (((rt0.c0))>((rt0.c0))) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1)) THEN (rt0.c2 IN (rt0.c0)) WHEN (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN ((rt0.c3)<>(rt0.c1)) ELSE (- (rt0.c0)) END ASC;
SELECT * FROM rt0 WHERE (((((IFNULL(DISTINCT rt0.c0, 1.627866469E9))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))))) ORDER BY CASE rt0.c0  WHEN ((rt0.c2)GLOB(rt0.c1)) THEN CAST('o^' AS BLOB) WHEN ((rt0.c1)>(rt0.c1)) THEN json_quote(rt0.c3) ELSE ((rt0.c4) NOTNULL) END ASC  NULLS FIRST, x'274e' DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((IFNULL(DISTINCT rt0.c0, 1.627866469E9))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))))) ORDER BY CASE CASE rt0.c3  WHEN '-1369343092' THEN rt0.c2 WHEN 0.31103801395365505 THEN rt0.c2 END  WHEN (((rt0.c0))>((rt0.c0))) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1)) THEN (rt0.c2 IN (rt0.c0)) WHEN (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN ((rt0.c3)<>(rt0.c1)) ELSE (- (rt0.c0)) END ASC;
SELECT ALL * FROM rt0 WHERE (((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0 WHERE (((((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL))AND(rt0.c2))) ORDER BY ((TRIM(rt0.c0))IS NOT((NOT (rt0.c2)))) ASC, rt0.c0 LIMIT 2;
SELECT ALL * FROM rt0 WHERE (((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0 WHERE (((((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL))AND(rt0.c2))) ORDER BY ((TRIM(rt0.c0))IS NOT((NOT (rt0.c2)))) ASC, rt0.c0 LIMIT 2;
SELECT ALL * FROM rt0 WHERE (LIKELY(((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))) ORDER BY (((NULL, rt0.c1)) BETWEEN ((COALESCE(rt0.c4, rt0.c0, 0.03575259706199185), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END)) AND ((((rt0.c0)==(rt0.c2)), rt0.c4))) DESC;
SELECT DISTINCT * FROM rt0 WHERE (((LIKELY(((((rt0.c2)OR(rt0.c3)))AND(rt0.c1))))AND(((((((((((CAST(rt0.c4 AS NUMERIC))AND(((rt0.c1)!=(rt0.c3)))))OR(CAST(rt0.c3 AS NUMERIC))))OR((NOT (rt0.c2)))))AND(((NULL)&(rt0.c3)))))OR((rt0.c4 IN ())))))) ORDER BY (((NULL, rt0.c1)) BETWEEN ((COALESCE(rt0.c4, rt0.c0, 0.03575259706199185), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END)) AND ((((rt0.c0)=(rt0.c2)), rt0.c4))) DESC;
SELECT ALL * FROM rt0 WHERE (LIKELY(((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))) ORDER BY (((NULL, rt0.c1)) BETWEEN ((COALESCE(rt0.c4, rt0.c0, 0.03575259706199185), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END)) AND ((((rt0.c0)==(rt0.c2)), rt0.c4))) DESC;
SELECT DISTINCT * FROM rt0 WHERE (((LIKELY(((((rt0.c2)OR(rt0.c3)))AND(rt0.c1))))AND(((((((((((CAST(rt0.c4 AS NUMERIC))AND(((rt0.c1)!=(rt0.c3)))))OR(CAST(rt0.c3 AS NUMERIC))))OR((NOT (rt0.c2)))))AND(((NULL)&(rt0.c3)))))OR((rt0.c4 IN ())))))) ORDER BY (((NULL, rt0.c1)) BETWEEN ((COALESCE(rt0.c4, rt0.c0, 0.03575259706199185), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END)) AND ((((rt0.c0)=(rt0.c2)), rt0.c4))) DESC;
SELECT ALL * FROM rt0 WHERE ((NOT ((NOT (rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE ((((NOT ((NOT (rt0.c1)))))AND((((rt0.c0)) BETWEEN ((((rt0.c2)+(rt0.c3)))) AND (((+ (rt0.c4)))))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((0.6918630670592975) IS TRUE) IN ())) LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE ((NOT ((NOT (rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE ((((NOT ((NOT (rt0.c1)))))AND((((rt0.c0)) BETWEEN ((((rt0.c2)+(rt0.c3)))) AND (((+ (rt0.c4)))))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((0.6918630670592975) IS TRUE) IN ())) LIMIT 0x1;
SELECT COUNT(*) FROM rt0 WHERE ((- (x'910b')) COLLATE BINARY COLLATE BINARY) ORDER BY x''  NULLS LAST, '4';
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (x'910b')) COLLATE BINARY COLLATE BINARY)AND((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)), CAST(rt0.c0 AS INTEGER), ((rt0.c1)GLOB(rt0.c2))))<((rt0.c2, rt0.c2, CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN x'81' THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 END)))))) ORDER BY x''  NULLS LAST, '4' INTERSECT SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)LIKE(rt0.c3)) IN (x'8d'))) ORDER BY x''  NULLS LAST, '4';
SELECT MIN(rt0.c3) FROM rt0 WHERE (((((NULL, rt0.c2, rt0.c0))<((rt0.c2, rt0.c4, rt0.c1))) IN (((rt0.c2) NOTNULL))));
SELECT MIN(rt0.c3) FROM rt0 WHERE (((((((NULL, rt0.c2, rt0.c0))<((rt0.c2, rt0.c4, rt0.c1))) IN (((rt0.c2) NOTNULL))))AND(((((rt0.c0)>=(rt0.c4))) IS TRUE)))) ORDER BY ((((rt0.c4)<(rt0.c2)))%((rt0.c2 IN ()))) DESC LIMIT 1;
SELECT MIN(rt0.c4) FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))>=(0.7929026918791002)));
SELECT MIN(rt0.c4) FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))>=(0.7929026918791002))) LIMIT 0x2;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (LIKE((rt0.c4 IN ()), ((rt0.c3)|(rt0.c4)), '
'));
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (((LIKE((rt0.c4 IN ()), ((rt0.c3)|(rt0.c4)), '
'))AND((rt0.c4 IN (0.5750867544988901, CASE x''  WHEN rt0.c3 THEN '-581623797' ELSE rt0.c3 END))))) ORDER BY (((((((((((rt0.c3 IN ()))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c4)*(rt0.c2)))))AND(((rt0.c2) NOTNULL))))AND(((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))))OR((~ (rt0.c4)))), (rt0.c3 IN (((rt0.c4)>=(rt0.c1))))  NULLS LAST LIMIT 2 INTERSECT SELECT MAX(rt0.c0) FROM rt0 WHERE (x'a47fd73c') ORDER BY (((((((((((rt0.c3 IN ()))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c4)*(rt0.c2)))))AND(((rt0.c2) NOTNULL))))AND(((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))))OR((~ (rt0.c4)))), (rt0.c3 IN (((rt0.c4)>=(rt0.c1))))  NULLS LAST LIMIT 0X2;
SELECT MAX(rt0.c3) FROM rt0 WHERE (0.9276446063886219) ORDER BY ((((((((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)))OR(rt0.c2)))AND('G')))AND('-306832129')))AND((rt0.c2 IN (rt0.c3)))) DESC, CASE WHEN (rt0.c4 IN (rt0.c4)) THEN rt0.c4 WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)) THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)) WHEN '-211006243' THEN (((rt0.c1, rt0.c4, rt0.c2, rt0.c0))<>((x'637b', rt0.c1, '1525876419', rt0.c1))) END DESC  NULLS FIRST;
SELECT MAX(rt0.c3) FROM rt0 WHERE (0.9276446063886219) ORDER BY ((LIKELIHOOD(rt0.c0, x'53')) IS TRUE) ASC  NULLS FIRST, ((rt0.c1 COLLATE BINARY)LIKE(CAST(rt0.c0 AS TEXT))) ASC  NULLS FIRST, (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END))>((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 END)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (UPPER(DISTINCT rt0.c2))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((- (UPPER(DISTINCT rt0.c2))));
SELECT ALL * FROM rt0 WHERE ((~ (MAX(rt0.c1, rt0.c0, rt0.c3, rt0.c0)))) ORDER BY 0.9804414049296203, rt0.c3, CASE ((rt0.c0) NOTNULL)  WHEN CASE rt0.c1  WHEN rt0.c0 THEN 0.9531247324114311 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN 5.34814226E8 WHEN rt0.c0 THEN rt0.c1 END THEN load_extension(rt0.c1, rt0.c4) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN x'' ELSE rt0.c2 END END ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((~ (MAX(rt0.c1, rt0.c0, rt0.c3, rt0.c0)))) ORDER BY (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4)) IN (((rt0.c0)>=(rt0.c0)))), ((((rt0.c0) IS FALSE))*(0.20414887539015325)) LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))) AND ((((rt0.c3)>(rt0.c1)))))) ORDER BY (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4)) IN (((rt0.c0)>=(rt0.c0)))), ((((rt0.c0) IS FALSE))*(0.20414887539015325)) LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE ((~ (MAX(rt0.c1, rt0.c0, rt0.c3, rt0.c0)))) ORDER BY 0.9804414049296203, rt0.c3, CASE ((rt0.c0) NOTNULL)  WHEN CASE rt0.c1  WHEN rt0.c0 THEN 0.9531247324114311 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN 5.34814226E8 WHEN rt0.c0 THEN rt0.c1 END THEN load_extension(rt0.c1, rt0.c4) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN x'' ELSE rt0.c2 END END ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((~ (MAX(rt0.c1, rt0.c0, rt0.c3, rt0.c0)))) ORDER BY (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4)) IN (((rt0.c0)>=(rt0.c0)))), ((((rt0.c0) IS FALSE))*(0.20414887539015325)) LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))) AND ((((rt0.c3)>(rt0.c1)))))) ORDER BY (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4)) IN (((rt0.c0)>=(rt0.c0)))), ((((rt0.c0) IS FALSE))*(0.20414887539015325)) LIMIT 0X2;
SELECT * FROM rt0 WHERE (-1034882599) ORDER BY '-812666902' COLLATE RTRIM  NULLS LAST, -2085732389  NULLS LAST;
SELECT * FROM rt0 WHERE (0Xffffffffc250f1d9) ORDER BY '-812666902' COLLATE RTRIM  NULLS LAST, 0Xffffffff83ae3fdb  NULLS LAST LIMIT 0X0;
SELECT * FROM rt0 WHERE (-1034882599) ORDER BY '-812666902' COLLATE RTRIM  NULLS LAST, -2085732389  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ('969502593') ORDER BY (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END IN ()) ASC  NULLS LAST, ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)))>=(x'c87812'))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((('969502593')AND(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c3)))<=(((rt0.c4)<(rt0.c4))))))) ORDER BY (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END IN ()) ASC  NULLS LAST, ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)))>=(x'c87812'))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ('969502593') ORDER BY (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END IN ()) ASC  NULLS LAST, ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)))>=(x'c87812'))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(((rt0.c0) NOT NULL))) ORDER BY (((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((CASE rt0.c1  WHEN 0.4315046519950886 THEN 'bT''' END, CAST(rt0.c0 AS NUMERIC), rt0.c0)) AND (('-829845324', (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))), 0.3089515442160464))) ASC  NULLS FIRST, CASE WHEN ((((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))AND(-1.477424952E9)) THEN (rt0.c3 IN (rt0.c4, rt0.c4)) WHEN ((((rt0.c0)AND(rt0.c4)))OR(rt0.c3)) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(((rt0.c0) NOT NULL))) ORDER BY (((rt0.c3, (rt0.c1 IN ())))==(((+ ('''')), (((rt0.c1, rt0.c3, rt0.c2, rt0.c3))<((rt0.c0, rt0.c2, rt0.c4, rt0.c0)))))) DESC LIMIT 0X2 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOT NULL))<<(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (((rt0.c3, (rt0.c1 IN ())))==(((+ ('''')), (((rt0.c1, rt0.c3, rt0.c2, rt0.c3))<((rt0.c0, rt0.c2, rt0.c4, rt0.c0)))))) DESC LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) NOT NULL))AND(((rt0.c0) IS FALSE))))OR(CAST(rt0.c0 AS REAL)))) ORDER BY (((rt0.c1, rt0.c2)) BETWEEN (((rt0.c1 IN ()), ((0.5953111333327619) BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)), (rt0.c0 IN (rt0.c2, '\-H')))))  NULLS LAST, (((rt0.c3)) BETWEEN ((((rt0.c2)||(rt0.c4)))) AND ((((rt0.c3)<=(rt0.c3))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1) NOT NULL))AND(((rt0.c0) IS FALSE))))OR(CAST(rt0.c0 AS REAL))))AND((((rt0.c4 IN (rt0.c0, rt0.c0))) NOTNULL)))) ORDER BY (+ (((rt0.c0)LIKE(rt0.c0)))) ASC  NULLS LAST, (((rt0.c4, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)), (rt0.c3 IN (rt0.c2)), CASE NULL  WHEN rt0.c2 THEN rt0.c2 END)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'40')), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)), CASE WHEN rt0.c3 THEN '-1784747573' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM rt0 WHERE (json_array_length(((rt0.c4)%(rt0.c4)))) ORDER BY (+ (((rt0.c0)LIKE(rt0.c0)))) ASC  NULLS LAST, (((rt0.c4, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)), (rt0.c3 IN (rt0.c2)), CASE NULL  WHEN rt0.c2 THEN rt0.c2 END)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'40')), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)), CASE WHEN rt0.c3 THEN '-1784747573' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))  NULLS FIRST LIMIT 2;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) NOT NULL))AND(((rt0.c0) IS FALSE))))OR(CAST(rt0.c0 AS REAL)))) ORDER BY (((rt0.c1, rt0.c2)) BETWEEN (((rt0.c1 IN ()), ((0.5953111333327619) BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)), (rt0.c0 IN (rt0.c2, '\-H')))))  NULLS LAST, (((rt0.c3)) BETWEEN ((((rt0.c2)||(rt0.c4)))) AND ((((rt0.c3)<=(rt0.c3))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1) NOT NULL))AND(((rt0.c0) IS FALSE))))OR(CAST(rt0.c0 AS REAL))))AND((((rt0.c4 IN (rt0.c0, rt0.c0))) NOTNULL)))) ORDER BY (+ (((rt0.c0)LIKE(rt0.c0)))) ASC  NULLS LAST, (((rt0.c4, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)), (rt0.c3 IN (rt0.c2)), CASE NULL  WHEN rt0.c2 THEN rt0.c2 END)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'40')), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)), CASE WHEN rt0.c3 THEN '-1784747573' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM rt0 WHERE (json_array_length(((rt0.c4)%(rt0.c4)))) ORDER BY (+ (((rt0.c0)LIKE(rt0.c0)))) ASC  NULLS LAST, (((rt0.c4, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)), (rt0.c3 IN (rt0.c2)), CASE NULL  WHEN rt0.c2 THEN rt0.c2 END)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'40')), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)), CASE WHEN rt0.c3 THEN '-1784747573' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))  NULLS FIRST LIMIT 2;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (PRINTF(rt0.c1 COLLATE NOCASE, ((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3))));
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (PRINTF(rt0.c1 COLLATE NOCASE, ((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))) ORDER BY ((((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)))AND(((rt0.c0) NOT NULL))))AND(CASE WHEN rt0.c0 THEN 5.34814226E8 END)))OR('0.09762069403104956'))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((((rt0.c1) IS FALSE)) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (rt0.c0))) ORDER BY ((((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)))AND(((rt0.c0) NOT NULL))))AND(CASE WHEN rt0.c0 THEN 5.34814226E8 END)))OR('0.09762069403104956'))  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt0 WHERE (((((((rt0.c3 COLLATE RTRIM)AND((+ (rt0.c2)))))AND(((rt0.c3) BETWEEN (rt0.c3) AND ('-268529337')))))OR(rt0.c4))) ORDER BY (~ ((rt0.c4 IN (rt0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3 COLLATE RTRIM)AND((+ (rt0.c2)))))AND(((rt0.c3) BETWEEN (rt0.c3) AND ('-268529337')))))OR(rt0.c4))) ORDER BY CAST((rt0.c2 IN (x'31', rt0.c1)) AS INTEGER) DESC, (((rt0.c3, NULL COLLATE NOCASE, CASE WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 END))<>((rt0.c0 COLLATE RTRIM, rt0.c3 COLLATE BINARY, ((rt0.c2)<<(rt0.c1))))) LIMIT 0X1;
SELECT * FROM rt0 WHERE (((((((rt0.c3 COLLATE RTRIM)AND((+ (rt0.c2)))))AND(((rt0.c3) BETWEEN (rt0.c3) AND ('-268529337')))))OR(rt0.c4))) ORDER BY (~ ((rt0.c4 IN (rt0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3 COLLATE RTRIM)AND((+ (rt0.c2)))))AND(((rt0.c3) BETWEEN (rt0.c3) AND ('-268529337')))))OR(rt0.c4))) ORDER BY CAST((rt0.c2 IN (x'31', rt0.c1)) AS INTEGER) DESC, (((rt0.c3, NULL COLLATE NOCASE, CASE WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 END))<>((rt0.c0 COLLATE RTRIM, rt0.c3 COLLATE BINARY, ((rt0.c2)<<(rt0.c1))))) LIMIT 0X1;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (x'b5');
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((x'b5')AND(0x5ed9a402))) LIMIT 1 INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (((rt0.c3) ISNULL)) AND (((((((rt0.c4)OR(rt0.c2)))OR(rt0.c0)))AND(x'b941'))))) LIMIT 0X1;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((rt0.c2, rt0.c3)) BETWEEN ((x'74', rt0.c0)) AND ((NULL, rt0.c3))))AND(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END)))OR(TRIM(rt0.c4))))AND(((((((0.4260976170333124)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c3))))) ORDER BY ((((rt0.c3)<=(rt0.c1))) ISNULL)  NULLS FIRST, (NOT ((rt0.c1 IN ()))), CASE ((rt0.c4) IS TRUE)  WHEN 'm7UUG7K팫' THEN rt0.c2 COLLATE BINARY WHEN (rt0.c2 IN ()) THEN CAST(rt0.c1 AS REAL) END DESC;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((((((((rt0.c2, rt0.c3)) BETWEEN ((x'74', rt0.c0)) AND ((NULL, rt0.c3))))AND(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END)))OR(TRIM(rt0.c4))))AND(((((((0.4260976170333124)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c3)))))AND((((- (rt0.c0)))%(rt0.c4))))) ORDER BY ((((rt0.c3)<=(rt0.c1))) ISNULL)  NULLS FIRST, (NOT ((rt0.c1 IN ()))), CASE ((rt0.c4) IS TRUE)  WHEN 'm7UUG7K팫' THEN rt0.c2 COLLATE BINARY WHEN (rt0.c2 IN ()) THEN CAST(rt0.c1 AS REAL) END DESC LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c4) ISNULL)) BETWEEN (((rt0.c1) NOT NULL)) AND ((- (NULL))))) ORDER BY ((((rt0.c3)<=(rt0.c1))) ISNULL)  NULLS FIRST, (NOT ((rt0.c1 IN ()))), CASE ((rt0.c4) IS TRUE)  WHEN 'm7UUG7K팫' THEN rt0.c2 COLLATE BINARY WHEN (rt0.c2 IN ()) THEN CAST(rt0.c1 AS REAL) END DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (rt0.c3) AND (TRIM(DISTINCT rt0.c3, NULL)))) ORDER BY (((rt0.c2, x'', rt0.c1)) BETWEEN ((((rt0.c2)>>(rt0.c4)), rt0.c1, ((rt0.c0)||(rt0.c2)))) AND ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c3) NOT NULL), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))))  NULLS LAST, CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM DESC, 0X78ebf5c1  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (rt0.c3) AND (TRIM(DISTINCT rt0.c3, NULL))))AND((((~ (rt0.c4))) NOT NULL)))) ORDER BY rt0.c0 DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (rt0.c3) AND (TRIM(DISTINCT rt0.c3, NULL)))) ORDER BY (((rt0.c2, x'', rt0.c1)) BETWEEN ((((rt0.c2)>>(rt0.c4)), rt0.c1, ((rt0.c0)||(rt0.c2)))) AND ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c3) NOT NULL), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))))  NULLS LAST, CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM DESC, 0X78ebf5c1  NULLS FIRST;
SELECT MIN(rt0.c0) FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN 0.5048182119862745 WHEN rt0.c0 THEN rt0.c4 WHEN ((rt0.c1)OR(rt0.c1)) THEN (NOT (rt0.c1)) END) ORDER BY (HEX(DISTINCT rt0.c3) IN (((x'4d')=(rt0.c4)))) DESC  NULLS FIRST, NULLIF(DISTINCT (+ (rt0.c1)), TYPEOF(x'')) ASC, ((CAST(rt0.c3 AS INTEGER)) BETWEEN (((rt0.c0)<<(rt0.c0))) AND (CAST(rt0.c0 AS TEXT))) ASC;
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN 0.5048182119862745 WHEN rt0.c0 THEN rt0.c4 WHEN ((rt0.c1)OR(rt0.c1)) THEN (NOT (rt0.c1)) END) ORDER BY CASE WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c0)<(rt0.c1)) WHEN 0.814229931376345 COLLATE RTRIM THEN (((rt0.c0, rt0.c2))<=((rt0.c1, rt0.c0))) WHEN ((rt0.c0)%(rt0.c1)) THEN rt0.c2 WHEN (((rt0.c0))<((rt0.c0))) THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN '0quBmB<' END WHEN x'1e55aa' THEN (~ (rt0.c0)) ELSE (~ (rt0.c3)) END DESC  NULLS LAST, (((((rt0.c2, rt0.c4)) BETWEEN ((rt0.c1, rt0.c1)) AND ((rt0.c4, rt0.c0)))) NOT BETWEEN ((rt0.c2 IN ())) AND (rt0.c3 COLLATE BINARY))  NULLS FIRST LIMIT 1;
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ((~ (x'082e')))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ((~ (x'082e'))))) ORDER BY (((((rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c4, rt0.c2)))) NOT BETWEEN (((0.21280201497159146)LIKE(rt0.c4))) AND (CASE rt0.c4  WHEN rt0.c3 THEN 22249965 WHEN x'' THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 END)) DESC, TRIM(x'11', rt0.c2) COLLATE RTRIM DESC  NULLS LAST, CASE LIKE(rt0.c4, rt0.c3)  WHEN ((rt0.c4)<<(rt0.c3)) THEN ((rt0.c4) NOT NULL) END ASC  NULLS LAST LIMIT 0x1;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS BLOB) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END THEN ((x'95')LIKE(rt0.c2)) ELSE ((rt0.c0)<(rt0.c2)) END) ORDER BY (((((((- (rt0.c4)))OR((((rt0.c3, rt0.c2, rt0.c4, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2, rt0.c4))))))AND((+ (rt0.c3)))))OR(rt0.c2)) DESC  NULLS FIRST, x'' ASC  NULLS LAST, ((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))OR(((rt0.c3) IS TRUE))))OR(((((((((((((rt0.c2)OR(rt0.c0)))OR(NULL)))AND(rt0.c0)))AND(0.4178623874551256)))OR(rt0.c3)))OR(rt0.c4))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS BLOB) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END THEN ((x'95')LIKE(rt0.c2)) ELSE ((rt0.c0)<(rt0.c2)) END)AND((((rt0.c2 IN (rt0.c0, rt0.c4))) NOTNULL)))) ORDER BY (((((rt0.c2, rt0.c2))>=((rt0.c1, 0X56ae45d3)))) NOT BETWEEN (LIKELY(DISTINCT rt0.c4)) AND ((~ (rt0.c4))))  NULLS FIRST, rt0.c0 COLLATE RTRIM ASC  NULLS LAST LIMIT 1;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS BLOB) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END THEN ((x'95')LIKE(rt0.c2)) ELSE ((rt0.c0)<(rt0.c2)) END) ORDER BY (((((((- (rt0.c4)))OR((((rt0.c3, rt0.c2, rt0.c4, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2, rt0.c4))))))AND((+ (rt0.c3)))))OR(rt0.c2)) DESC  NULLS FIRST, x'' ASC  NULLS LAST, ((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))OR(((rt0.c3) IS TRUE))))OR(((((((((((((rt0.c2)OR(rt0.c0)))OR(NULL)))AND(rt0.c0)))AND(0.4178623874551256)))OR(rt0.c3)))OR(rt0.c4))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS BLOB) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END THEN ((x'95')LIKE(rt0.c2)) ELSE ((rt0.c0)<(rt0.c2)) END)AND((((rt0.c2 IN (rt0.c0, rt0.c4))) NOTNULL)))) ORDER BY (((((rt0.c2, rt0.c2))>=((rt0.c1, 0X56ae45d3)))) NOT BETWEEN (LIKELY(DISTINCT rt0.c4)) AND ((~ (rt0.c4))))  NULLS FIRST, rt0.c0 COLLATE RTRIM ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (((rt0.c0)<(rt0.c1))) AND (((rt0.c1)||(rt0.c4))))) ORDER BY '-1826425696' DESC, CAST((((rt0.c4, rt0.c2))<((rt0.c2, rt0.c2))) AS REAL);
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (((rt0.c0)<(rt0.c1))) AND (((rt0.c1)||(rt0.c4)))))AND(CASE WHEN rt0.c0 THEN x'' WHEN ((((((rt0.c1)OR(0xffffffffed986125)))AND(rt0.c4)))OR(rt0.c4)) THEN rt0.c0 END))) ORDER BY ((rt0.c1)<((+ ('nPXyE0')))) DESC, rt0.c3 DESC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (((rt0.c0)<(rt0.c1))) AND (((rt0.c1)||(rt0.c4))))) ORDER BY '-1826425696' DESC, CAST((((rt0.c4, rt0.c2))<((rt0.c2, rt0.c2))) AS REAL);
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (((rt0.c0)<(rt0.c1))) AND (((rt0.c1)||(rt0.c4)))))AND(CASE WHEN rt0.c0 THEN x'' WHEN ((((((rt0.c1)OR(0xffffffffed986125)))AND(rt0.c4)))OR(rt0.c4)) THEN rt0.c0 END))) ORDER BY ((rt0.c1)<((+ ('nPXyE0')))) DESC, rt0.c3 DESC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2)>>(rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2)>>(rt0.c1))))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2)>>(rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2)>>(rt0.c1))))) LIMIT 0X0;
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))<>(CAST(x'ea' AS BLOB))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))>(CAST(x'ea' AS BLOB)))) ORDER BY ((rt0.c2) NOT NULL) COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((NOT (rt0.c3)) IN ()));
SELECT DISTINCT * FROM rt0 WHERE (((((NOT (rt0.c3)) IN ()))AND(CASE ((rt0.c2)-(rt0.c0))  WHEN CHAR(x'fd') THEN ((rt0.c3) IS FALSE) WHEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) THEN CAST(rt0.c3 AS NUMERIC) WHEN ')' THEN (((rt0.c1, rt0.c4, NULL, rt0.c1))>=((rt0.c2, rt0.c2, rt0.c0, rt0.c3))) WHEN (+ (rt0.c0)) THEN ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) END))) ORDER BY CAST(rt0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4)||(rt0.c3))) NOT NULL)) ORDER BY CAST(rt0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((NOT (rt0.c3)) IN ()));
SELECT DISTINCT * FROM rt0 WHERE (((((NOT (rt0.c3)) IN ()))AND(CASE ((rt0.c2)-(rt0.c0))  WHEN CHAR(x'fd') THEN ((rt0.c3) IS FALSE) WHEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) THEN CAST(rt0.c3 AS NUMERIC) WHEN ')' THEN (((rt0.c1, rt0.c4, NULL, rt0.c1))>=((rt0.c2, rt0.c2, rt0.c0, rt0.c3))) WHEN (+ (rt0.c0)) THEN ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) END))) ORDER BY CAST(rt0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4)||(rt0.c3))) NOT NULL)) ORDER BY CAST(rt0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE ((((~ (rt0.c0))) NOTNULL)) ORDER BY rt0.c1 COLLATE NOCASE, (((rt0.c4) BETWEEN (917218728) AND (rt0.c0)) IN ())  NULLS LAST;
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE ((((((~ (rt0.c0))) NOTNULL))AND((NULL IN (((rt0.c1)LIKE(rt0.c4))))))) ORDER BY (0Xffffffffb12409f7 COLLATE RTRIM IN ())  NULLS FIRST, ((rt0.c1) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c4)) ASC, ((((HEX('-1893339925'))AND((((rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, 0Xffffffff9873efd4, rt0.c3, rt0.c4))))))AND((((rt0.c2))>((rt0.c0)))))  NULLS LAST INTERSECT SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (rt0.c1) ORDER BY (0xffffffffb12409f7 COLLATE RTRIM IN ())  NULLS FIRST, ((rt0.c1) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c4)) ASC, ((((HEX('-1893339925'))AND((((rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, 0Xffffffff9873efd4, rt0.c3, rt0.c4))))))AND((((rt0.c2))>((rt0.c0)))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND((~ (rt0.c3)))))OR(((rt0.c1) IS TRUE))))OR('?۔2W2%!eY')))OR(CASE WHEN rt0.c4 THEN rt0.c1 END)))AND(((rt0.c0)!=(rt0.c0)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))))) ORDER BY QUOTE(rt0.c2);
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND((~ (rt0.c3)))))OR(((rt0.c1) IS TRUE))))OR('?۔2W2%!eY')))OR(CASE WHEN rt0.c4 THEN rt0.c1 END)))AND(((rt0.c0)!=(rt0.c0)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))))AND((((((rt0.c2)<>(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), LIKELIHOOD(DISTINCT rt0.c2, rt0.c3), ((rt0.c0) ISNULL)))<((rt0.c1, (((rt0.c0, rt0.c0, '	[侱[F]U', rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, '631698164', rt0.c3)) AND ((rt0.c0, rt0.c1, rt0.c4, rt0.c3))), rt0.c0, ((rt0.c3) NOT BETWEEN (rt0.c4) AND (NULL)))))))) ORDER BY rt0.c0 DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4))) BETWEEN (LIKELY(DISTINCT rt0.c0)) AND (((rt0.c3) NOT BETWEEN (-1.654285559E9) AND (rt0.c1))))) ORDER BY rt0.c0 DESC;
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND((~ (rt0.c3)))))OR(((rt0.c1) IS TRUE))))OR('?۔2W2%!eY')))OR(CASE WHEN rt0.c4 THEN rt0.c1 END)))AND(((rt0.c0)!=(rt0.c0)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))))) ORDER BY QUOTE(rt0.c2);
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND((~ (rt0.c3)))))OR(((rt0.c1) IS TRUE))))OR('?۔2W2%!eY')))OR(CASE WHEN rt0.c4 THEN rt0.c1 END)))AND(((rt0.c0)!=(rt0.c0)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))))AND((((((rt0.c2)<>(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), LIKELIHOOD(DISTINCT rt0.c2, rt0.c3), ((rt0.c0) ISNULL)))<((rt0.c1, (((rt0.c0, rt0.c0, '	[侱[F]U', rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, '631698164', rt0.c3)) AND ((rt0.c0, rt0.c1, rt0.c4, rt0.c3))), rt0.c0, ((rt0.c3) NOT BETWEEN (rt0.c4) AND (NULL)))))))) ORDER BY rt0.c0 DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4))) BETWEEN (LIKELY(DISTINCT rt0.c0)) AND (((rt0.c3) NOT BETWEEN (-1.654285559E9) AND (rt0.c1))))) ORDER BY rt0.c0 DESC;
SELECT MIN(rt0.c3) FROM rt0 WHERE (0xfffffffff572db7f) ORDER BY (((((((((((((~ (rt0.c0)))AND((rt0.c1 IN ()))))AND(((rt0.c1) NOTNULL))))AND((((rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3))<>((rt0.c0, rt0.c4, rt0.c0, rt0.c2, rt0.c2))))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c1)LIKE(rt0.c1)))))AND(IFNULL(rt0.c3, rt0.c0))) ASC  NULLS FIRST, 0.10267398533693772 DESC;
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (0xfffffffff572db7f) ORDER BY (((((((((((((~ (rt0.c0)))AND((rt0.c1 IN ()))))AND(((rt0.c1) NOTNULL))))AND((((rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3))<>((rt0.c0, rt0.c4, rt0.c0, rt0.c2, rt0.c2))))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c1)LIKE(rt0.c1)))))AND(IFNULL(rt0.c3, rt0.c0))) ASC  NULLS FIRST, 0.10267398533693772 DESC LIMIT 1 INTERSECT SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (NULL) ORDER BY (((((((((((((~ (rt0.c0)))AND((rt0.c1 IN ()))))AND(((rt0.c1) NOTNULL))))AND((((rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3))<>((rt0.c0, rt0.c4, rt0.c0, rt0.c2, rt0.c2))))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c1)LIKE(rt0.c1)))))AND(IFNULL(rt0.c3, rt0.c0))) ASC  NULLS FIRST, 0.10267398533693772 DESC LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) ISNULL))AND(x'7e'))) ORDER BY CASE (((rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c2)) AND ((rt0.c1, rt0.c4)))  WHEN json_array(rt0.c4, rt0.c2) THEN ((('!㔬1iPgeY	')) BETWEEN ((x'bba286')) AND ((rt0.c0))) ELSE ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) END, (CAST(rt0.c1 AS NUMERIC) IN (((rt0.c1)||(rt0.c1)))) ASC LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((+ (INSTR(rt0.c0, rt0.c1)))) ORDER BY CASE (((rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c2)) AND ((rt0.c1, rt0.c4)))  WHEN json_array(rt0.c4, rt0.c2) THEN ((('!㔬1iPgeY	')) BETWEEN ((x'bba286')) AND ((rt0.c0))) ELSE ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) END, (CAST(rt0.c1 AS NUMERIC) IN (((rt0.c1)||(rt0.c1)))) ASC LIMIT 2;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) ISNULL))AND(x'7e'))) ORDER BY CASE (((rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c2)) AND ((rt0.c1, rt0.c4)))  WHEN json_array(rt0.c4, rt0.c2) THEN ((('!㔬1iPgeY	')) BETWEEN ((x'bba286')) AND ((rt0.c0))) ELSE ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) END, (CAST(rt0.c1 AS NUMERIC) IN (((rt0.c1)||(rt0.c1)))) ASC LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((+ (INSTR(rt0.c0, rt0.c1)))) ORDER BY CASE (((rt0.c0, rt0.c2)) BETWEEN ((rt0.c3, rt0.c2)) AND ((rt0.c1, rt0.c4)))  WHEN json_array(rt0.c4, rt0.c2) THEN ((('!㔬1iPgeY	')) BETWEEN ((x'bba286')) AND ((rt0.c0))) ELSE ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) END, (CAST(rt0.c1 AS NUMERIC) IN (((rt0.c1)||(rt0.c1)))) ASC LIMIT 2;
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY ((((((LIKE(rt0.c4, rt0.c0, 'R'))OR(rt0.c4)))OR(((rt0.c0)*('i1EOtC')))))AND((- (rt0.c4))))  NULLS LAST, CAST(LENGTH(rt0.c2) AS REAL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))GLOB(((rt0.c4) NOT NULL))) DESC  NULLS FIRST, json_quote(LENGTH(rt0.c4)) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((rt0.c4 IN ()) COLLATE NOCASE) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))GLOB(((rt0.c4) NOT NULL))) DESC  NULLS FIRST, json_quote(LENGTH(rt0.c4)) LIMIT 0x1;
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY ((((((LIKE(rt0.c4, rt0.c0, 'R'))OR(rt0.c4)))OR(((rt0.c0)*('i1EOtC')))))AND((- (rt0.c4))))  NULLS LAST, CAST(LENGTH(rt0.c2) AS REAL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))GLOB(((rt0.c4) NOT NULL))) DESC  NULLS FIRST, json_quote(LENGTH(rt0.c4)) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((rt0.c4 IN ()) COLLATE NOCASE) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))GLOB(((rt0.c4) NOT NULL))) DESC  NULLS FIRST, json_quote(LENGTH(rt0.c4)) LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) IS TRUE)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (rt0.c4 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) IS TRUE)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (rt0.c4 COLLATE NOCASE))) ORDER BY (((rt0.c4, rt0.c3, rt0.c0)) BETWEEN (((rt0.c0 IN (rt0.c1)), ((rt0.c3)&(rt0.c0)), CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)) AND ((((((rt0.c0)OR(rt0.c3)))OR(rt0.c4)), COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c1), (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4)))))), CAST(((rt0.c2)*(rt0.c0)) AS NUMERIC) ASC, (NOT (((((rt0.c4)OR(rt0.c4)))OR(rt0.c1)))) DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) IS TRUE)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (rt0.c4 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) IS TRUE)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (rt0.c4 COLLATE NOCASE))) ORDER BY (((rt0.c4, rt0.c3, rt0.c0)) BETWEEN (((rt0.c0 IN (rt0.c1)), ((rt0.c3)&(rt0.c0)), CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)) AND ((((((rt0.c0)OR(rt0.c3)))OR(rt0.c4)), COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c1), (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4)))))), CAST(((rt0.c2)*(rt0.c0)) AS NUMERIC) ASC, (NOT (((((rt0.c4)OR(rt0.c4)))OR(rt0.c1)))) DESC;
SELECT ALL * FROM rt0 WHERE (((((((((UNLIKELY(DISTINCT rt0.c2))AND(CAST(rt0.c4 AS INTEGER))))OR('99958450')))AND((((rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c3, rt0.c3))))))AND(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ABS(((((((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((UNLIKELY(DISTINCT rt0.c2))AND(CAST(rt0.c4 AS INTEGER))))OR('99958450')))AND((((rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c3, rt0.c3))))))AND(CAST(rt0.c0 AS NUMERIC))))AND(((((((((((LIKELY(DISTINCT rt0.c0))OR((rt0.c2 IN (rt0.c4)))))OR((- (rt0.c0)))))AND(CAST(rt0.c3 AS BLOB))))AND(rt0.c4)))OR(((rt0.c0) BETWEEN (rt0.c2) AND ('-1263018144'))))))) ORDER BY ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c3)))IS NOT((rt0.c2 IN (rt0.c2, rt0.c3, rt0.c0)))), PRINTF((((x''))=((0Xffffffffbbfe4d91)))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST((NOT (rt0.c2)) AS TEXT)) ORDER BY ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c3)))IS NOT((rt0.c2 IN (rt0.c2, rt0.c3, rt0.c0)))), PRINTF((((x''))==((-1140961903))));
SELECT ALL * FROM rt0 WHERE (((((((((UNLIKELY(DISTINCT rt0.c2))AND(CAST(rt0.c4 AS INTEGER))))OR('99958450')))AND((((rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c3, rt0.c3))))))AND(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ABS(((((((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((UNLIKELY(DISTINCT rt0.c2))AND(CAST(rt0.c4 AS INTEGER))))OR('99958450')))AND((((rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c3, rt0.c3))))))AND(CAST(rt0.c0 AS NUMERIC))))AND(((((((((((LIKELY(DISTINCT rt0.c0))OR((rt0.c2 IN (rt0.c4)))))OR((- (rt0.c0)))))AND(CAST(rt0.c3 AS BLOB))))AND(rt0.c4)))OR(((rt0.c0) BETWEEN (rt0.c2) AND ('-1263018144'))))))) ORDER BY ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c3)))IS NOT((rt0.c2 IN (rt0.c2, rt0.c3, rt0.c0)))), PRINTF((((x''))=((0Xffffffffbbfe4d91)))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST((NOT (rt0.c2)) AS TEXT)) ORDER BY ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c3)))IS NOT((rt0.c2 IN (rt0.c2, rt0.c3, rt0.c0)))), PRINTF((((x''))==((-1140961903))));
SELECT ALL * FROM rt0 WHERE (((0.3696575159202732) NOT NULL)) ORDER BY ((((rt0.c1, rt0.c2, rt0.c0))=((rt0.c0, rt0.c4, rt0.c4))) IN ((((rt0.c1, rt0.c3))>((rt0.c4, rt0.c0))), ((rt0.c3)AND(rt0.c4)))), json_remove(((('-1409521905')) BETWEEN ((rt0.c4)) AND ((rt0.c1))), ((rt0.c2)LIKE(rt0.c2)), rt0.c0, x'c5');
SELECT * FROM rt0 WHERE (((0.3696575159202732) NOT NULL)) ORDER BY (json_object(rt0.c3, rt0.c2, rt0.c2) IN ((rt0.c2 IN (rt0.c0)))) ASC  NULLS FIRST, (((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))<>((rt0.c3 IN (rt0.c0, rt0.c0)))) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((0.3696575159202732) NOT NULL)) ORDER BY ((((rt0.c1, rt0.c2, rt0.c0))=((rt0.c0, rt0.c4, rt0.c4))) IN ((((rt0.c1, rt0.c3))>((rt0.c4, rt0.c0))), ((rt0.c3)AND(rt0.c4)))), json_remove(((('-1409521905')) BETWEEN ((rt0.c4)) AND ((rt0.c1))), ((rt0.c2)LIKE(rt0.c2)), rt0.c0, x'c5');
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c0)|(-880972502))) IS TRUE)) ORDER BY (~ (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))), (+ (UPPER(rt0.c0))) ASC, CAST(CAST(rt0.c0 AS BLOB) AS REAL) ASC  NULLS FIRST;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c0)|(0xffffffffcb7d6d2a))) IS TRUE)) ORDER BY (~ (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))), (+ (UPPER(rt0.c0))) ASC, CAST(CAST(rt0.c0 AS BLOB) AS REAL) ASC  NULLS FIRST LIMIT 0;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE ((((((rt0.c1, rt0.c4, rt0.c0))==((rt0.c4, rt0.c3, rt0.c3))))IS(((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c3))))) ORDER BY (((rt0.c1, x'', rt0.c3)) BETWEEN (((rt0.c1 IN (rt0.c1)), rt0.c0, ((rt0.c4) IS FALSE))) AND ((CAST(rt0.c4 AS NUMERIC), 0.8397567222788435, ((NULL)>(rt0.c3)))))  NULLS LAST, 0.853554932702528  NULLS LAST, rt0.c3 COLLATE NOCASE DESC;
SELECT MAX(rt0.c3) FROM rt0 WHERE ((((((((rt0.c1, rt0.c4, rt0.c0))==((rt0.c4, rt0.c3, rt0.c3))))IS(((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))))AND(((x'') NOT BETWEEN (((rt0.c1)OR('-1490826403'))) AND (((((rt0.c3)AND(NULL)))OR(rt0.c2))))))) ORDER BY CASE WHEN x'7a' THEN (NOT (rt0.c4)) WHEN ((rt0.c2) NOT NULL) THEN TYPEOF(DISTINCT rt0.c1) WHEN CASE WHEN rt0.c3 THEN x'df' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE NULL END THEN ((NULL) BETWEEN (rt0.c2) AND (rt0.c3)) WHEN ((rt0.c3)%(rt0.c2)) THEN ((rt0.c1)>(rt0.c4)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c4) NOTNULL) ELSE (~ (rt0.c2)) END DESC, CASE NULL  WHEN x'91' THEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN (rt0.c1 IN (rt0.c1)) THEN ((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)) WHEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)) THEN ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c0)) ELSE CAST(rt0.c1 AS INTEGER) END  NULLS LAST, (+ (((rt0.c2) NOT BETWEEN (0.3756884682570697) AND (rt0.c2))))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((((rt0.c3)>>(rt0.c2)))GLOB(rt0.c4 COLLATE RTRIM))) ORDER BY CASE WHEN x'7a' THEN (NOT (rt0.c4)) WHEN ((rt0.c2) NOT NULL) THEN TYPEOF(DISTINCT rt0.c1) WHEN CASE WHEN rt0.c3 THEN x'df' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE NULL END THEN ((NULL) BETWEEN (rt0.c2) AND (rt0.c3)) WHEN ((rt0.c3)%(rt0.c2)) THEN ((rt0.c1)>(rt0.c4)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c4) NOTNULL) ELSE (~ (rt0.c2)) END DESC, CASE NULL  WHEN x'91' THEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN (rt0.c1 IN (rt0.c1)) THEN ((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)) WHEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)) THEN ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c0)) ELSE CAST(rt0.c1 AS INTEGER) END  NULLS LAST, (+ (((rt0.c2) NOT BETWEEN (0.3756884682570697) AND (rt0.c2))))  NULLS FIRST LIMIT 1;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'4d') ORDER BY rt0.c0 ASC  NULLS LAST, CASE ((((((rt0.c4)AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c3))  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c0) ISNULL) WHEN (rt0.c1 IN ()) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c0)LIKE(rt0.c3)) THEN rt0.c1 END ASC;
SELECT COUNT(*) FROM rt0 WHERE (((x'4d')AND(CASE ((rt0.c4)<=(rt0.c1))  WHEN ((rt0.c0) NOTNULL) THEN (rt0.c3 IN (rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 END WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c3) BETWEEN (rt0.c1) AND (0xffffffffa4c5c042)) WHEN -1619558323 THEN ((((rt0.c2)AND('1452718832')))AND(rt0.c1)) END))) ORDER BY rt0.c0 ASC  NULLS LAST, CASE ((((((rt0.c4)AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c3))  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c0) ISNULL) WHEN (rt0.c1 IN ()) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c0)LIKE(rt0.c3)) THEN rt0.c1 END ASC LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)<=(rt0.c0)), ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<=((rt0.c0, ((rt0.c2)+(rt0.c3))))));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1)<=(rt0.c0)), ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<=((rt0.c0, ((rt0.c2)+(rt0.c3))))))AND(((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (rt0.c3))))) ORDER BY (~ (((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))) DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)<=(rt0.c0)), ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<=((rt0.c0, ((rt0.c2)+(rt0.c3))))));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1)<=(rt0.c0)), ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<=((rt0.c0, ((rt0.c2)+(rt0.c3))))))AND(((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (rt0.c3))))) ORDER BY (~ (((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))) DESC LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c0 AS TEXT)))) ORDER BY rt0.c1  NULLS LAST, x'68f2' DESC, rt0.c0  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((+ (CAST(rt0.c0 AS TEXT))))AND((((('1525876419')AND(0.3864711761062979)))AND(TRIM(rt0.c0, rt0.c1)))))) ORDER BY rt0.c1  NULLS LAST, x'68f2' DESC, rt0.c0  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c4)>>(rt0.c4))))) ORDER BY rt0.c1  NULLS LAST, x'68f2' DESC, rt0.c0  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((rt0.c4, rt0.c4)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, -1834650494 COLLATE NOCASE)) AND (((NOT (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))) ORDER BY ((((rt0.c0 COLLATE RTRIM)OR((NOT (rt0.c4)))))AND(CAST(rt0.c0 AS INTEGER)))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c4, rt0.c4)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, 0Xffffffff92a57482 COLLATE NOCASE)) AND (((NOT (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))) ORDER BY ((((rt0.c0 COLLATE RTRIM)OR((NOT (rt0.c4)))))AND(CAST(rt0.c0 AS INTEGER)))  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((rt0.c4, rt0.c4)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, -1834650494 COLLATE NOCASE)) AND (((NOT (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))) ORDER BY ((((rt0.c0 COLLATE RTRIM)OR((NOT (rt0.c4)))))AND(CAST(rt0.c0 AS INTEGER)))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c4, rt0.c4)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, 0Xffffffff92a57482 COLLATE NOCASE)) AND (((NOT (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))) ORDER BY ((((rt0.c0 COLLATE RTRIM)OR((NOT (rt0.c4)))))AND(CAST(rt0.c0 AS INTEGER)))  NULLS LAST LIMIT 0x2;
SELECT MAX(rt0.c0) FROM rt0 WHERE ((((rt0.c2 IN ())) NOTNULL)) ORDER BY rt0.c2 DESC  NULLS FIRST, CASE ((rt0.c4)+(rt0.c1))  WHEN 'E#' THEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END THEN x'' ELSE (rt0.c1 IN ()) END  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE ((((rt0.c2 IN ())) NOTNULL)) ORDER BY rt0.c2 DESC  NULLS FIRST, CASE ((rt0.c4)+(rt0.c1))  WHEN 'E#' THEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END THEN x'' ELSE (rt0.c1 IN ()) END  NULLS FIRST INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c2 DESC  NULLS FIRST, CASE ((rt0.c4)+(rt0.c1))  WHEN 'E#' THEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END THEN x'' ELSE (rt0.c1 IN ()) END  NULLS FIRST;
SELECT * FROM rt0 WHERE (MAX(LIKE(0.676870816865742, 0X1343e5f7, '0'), ((rt0.c1)LIKE(rt0.c0)), ((rt0.c3)<(0.7350865898382037)), json_remove(NULL, rt0.c4), ((rt0.c0) ISNULL), CASE rt0.c2  WHEN NULL THEN '0.36062870293789195' ELSE rt0.c3 END)) ORDER BY CASE WHEN (+ (rt0.c4)) THEN ((((((rt0.c2)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c2)) ELSE CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END END ASC, ((((rt0.c2) ISNULL)) NOT BETWEEN ((((rt0.c2, rt0.c0, rt0.c2))<((rt0.c2, rt0.c0, rt0.c3)))) AND ((((rt0.c4, rt0.c1, rt0.c0, rt0.c1, rt0.c2))>((rt0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c2)))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((MAX(LIKE(0.676870816865742, 0X1343e5f7, '0'), ((rt0.c1)LIKE(rt0.c0)), ((rt0.c3)<(0.7350865898382037)), json_remove(NULL, rt0.c4), ((rt0.c0) ISNULL), CASE rt0.c2  WHEN NULL THEN '0.36062870293789195' ELSE rt0.c3 END))AND(LIKELIHOOD(DISTINCT CAST(rt0.c1 AS TEXT), x'')))) ORDER BY (((rt0.c0)IS NOT(rt0.c4)) IN ())  NULLS LAST, 0.4494906594495147, ((TRIM(x'', rt0.c4))<<(x'5ace751f')) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (MAX(LIKE(0.676870816865742, 0X1343e5f7, '0'), ((rt0.c1)LIKE(rt0.c0)), ((rt0.c3)<(0.7350865898382037)), json_remove(NULL, rt0.c4), ((rt0.c0) ISNULL), CASE rt0.c2  WHEN NULL THEN '0.36062870293789195' ELSE rt0.c3 END)) ORDER BY CASE WHEN (+ (rt0.c4)) THEN ((((((rt0.c2)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c2)) ELSE CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END END ASC, ((((rt0.c2) ISNULL)) NOT BETWEEN ((((rt0.c2, rt0.c0, rt0.c2))<((rt0.c2, rt0.c0, rt0.c3)))) AND ((((rt0.c4, rt0.c1, rt0.c0, rt0.c1, rt0.c2))>((rt0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c2)))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((MAX(LIKE(0.676870816865742, 0X1343e5f7, '0'), ((rt0.c1)LIKE(rt0.c0)), ((rt0.c3)<(0.7350865898382037)), json_remove(NULL, rt0.c4), ((rt0.c0) ISNULL), CASE rt0.c2  WHEN NULL THEN '0.36062870293789195' ELSE rt0.c3 END))AND(LIKELIHOOD(DISTINCT CAST(rt0.c1 AS TEXT), x'')))) ORDER BY (((rt0.c0)IS NOT(rt0.c4)) IN ())  NULLS LAST, 0.4494906594495147, ((TRIM(x'', rt0.c4))<<(x'5ace751f')) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)>(rt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)>(rt0.c0)) IN ())) INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c4 AS REAL))%(((rt0.c1)%(rt0.c3)))));
SELECT MIN(rt0.c1) FROM rt0 WHERE (((rt0.c0 IN (rt0.c2)) IN ())) ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CAST(rt0.c2 AS BLOB))));
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (((rt0.c0 IN (rt0.c2)) IN ())) ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CAST(rt0.c2 AS BLOB))));
SELECT * FROM rt0 WHERE ('0quBmB<') ORDER BY CASE ((rt0.c0)>>(rt0.c4))  WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN LIKELY(rt0.c1) WHEN rt0.c0 COLLATE RTRIM THEN NULL WHEN rt0.c2 THEN ((0Xffffffffdd55200b)GLOB(rt0.c0)) WHEN (((rt0.c2, rt0.c2)) BETWEEN ((NULL, rt0.c0)) AND ((0xffffffffc5ee5b21, rt0.c2))) THEN ((rt0.c2)|(rt0.c3)) WHEN ((rt0.c0) BETWEEN (0.020394367188729556) AND (rt0.c2)) THEN rt0.c4 COLLATE RTRIM WHEN SQLITE_VERSION() THEN 0x4131b7fd END  NULLS FIRST, '1' ASC;
SELECT DISTINCT * FROM rt0 WHERE ('0quBmB<') ORDER BY (~ (((rt0.c3)LIKE(rt0.c2)))) ASC  NULLS LAST LIMIT 2;
SELECT * FROM rt0 WHERE ('0quBmB<') ORDER BY CASE ((rt0.c0)>>(rt0.c4))  WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN LIKELY(rt0.c1) WHEN rt0.c0 COLLATE RTRIM THEN NULL WHEN rt0.c2 THEN ((0Xffffffffdd55200b)GLOB(rt0.c0)) WHEN (((rt0.c2, rt0.c2)) BETWEEN ((NULL, rt0.c0)) AND ((0xffffffffc5ee5b21, rt0.c2))) THEN ((rt0.c2)|(rt0.c3)) WHEN ((rt0.c0) BETWEEN (0.020394367188729556) AND (rt0.c2)) THEN rt0.c4 COLLATE RTRIM WHEN SQLITE_VERSION() THEN 0x4131b7fd END  NULLS FIRST, '1' ASC;
SELECT DISTINCT * FROM rt0 WHERE ('0quBmB<') ORDER BY (~ (((rt0.c3)LIKE(rt0.c2)))) ASC  NULLS LAST LIMIT 2;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE NOCASE);
SELECT MAX(rt0.c0) FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE NOCASE) LIMIT 5;
SELECT * FROM rt0 WHERE ('+');
SELECT DISTINCT * FROM rt0 WHERE ('+') LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE ((-101451845)<>(rt0.c1))  WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN 0.8090256724827729 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c4)>(rt0.c0)) END) LIMIT 0;
SELECT * FROM rt0 WHERE ('+');
SELECT DISTINCT * FROM rt0 WHERE ('+') LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE ((-101451845)<>(rt0.c1))  WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN 0.8090256724827729 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c4)>(rt0.c0)) END) LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) IS FALSE) IN (((rt0.c0) NOTNULL))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1) IS FALSE) IN (((rt0.c0) NOTNULL))))AND(((CASE WHEN NULL THEN rt0.c4 WHEN NULL THEN rt0.c2 WHEN NULL THEN x'' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END)<<(((((((rt0.c3)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0))))))) ORDER BY ((((((rt0.c2)>>(rt0.c1)))AND(rt0.c4)))OR((rt0.c2 IN (rt0.c2, rt0.c0))))  NULLS FIRST, ((LIKELY(DISTINCT x'')) NOT BETWEEN (((0.9184287678251294) BETWEEN (rt0.c2) AND (-1643031243))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE NOCASE) ORDER BY ((((((rt0.c2)>>(rt0.c1)))AND(rt0.c4)))OR((rt0.c2 IN (rt0.c2, rt0.c0))))  NULLS FIRST, ((LIKELY(DISTINCT x'')) NOT BETWEEN (((0.9184287678251294) BETWEEN (rt0.c2) AND (0Xffffffff9e115535))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) IS FALSE) IN (((rt0.c0) NOTNULL))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1) IS FALSE) IN (((rt0.c0) NOTNULL))))AND(((CASE WHEN NULL THEN rt0.c4 WHEN NULL THEN rt0.c2 WHEN NULL THEN x'' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END)<<(((((((rt0.c3)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0))))))) ORDER BY ((((((rt0.c2)>>(rt0.c1)))AND(rt0.c4)))OR((rt0.c2 IN (rt0.c2, rt0.c0))))  NULLS FIRST, ((LIKELY(DISTINCT x'')) NOT BETWEEN (((0.9184287678251294) BETWEEN (rt0.c2) AND (-1643031243))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE NOCASE) ORDER BY ((((((rt0.c2)>>(rt0.c1)))AND(rt0.c4)))OR((rt0.c2 IN (rt0.c2, rt0.c0))))  NULLS FIRST, ((LIKELY(DISTINCT x'')) NOT BETWEEN (((0.9184287678251294) BETWEEN (rt0.c2) AND (0Xffffffff9e115535))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE ((((rt0.c4)) BETWEEN (((('154406483') BETWEEN (rt0.c1) AND (x'6bdd2ec4')))) AND ((((rt0.c2)>(rt0.c3))))));
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE ((((rt0.c4)) BETWEEN (((('154406483') BETWEEN (rt0.c1) AND (x'6bdd2ec4')))) AND ((((rt0.c2)>(rt0.c3)))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3)))>(rt0.c1 COLLATE RTRIM)) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0)!=(rt0.c3))))) ORDER BY (rt0.c4 IN ()) COLLATE NOCASE  NULLS LAST, ((((rt0.c2) NOTNULL))-(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((((NOT (((rt0.c0)<>(rt0.c3)))))AND(CASE (0.7378424822209528 IN ())  WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c1 AS INTEGER) WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN x'e64b' WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END THEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END THEN ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)) ELSE rt0.c2 COLLATE RTRIM END))) ORDER BY (rt0.c4 IN ()) COLLATE NOCASE  NULLS LAST, ((((rt0.c2) NOTNULL))-(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END))  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ORDER BY (rt0.c4 IN ()) COLLATE NOCASE  NULLS LAST, ((((rt0.c2) NOTNULL))-(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0)!=(rt0.c3))))) ORDER BY (rt0.c4 IN ()) COLLATE NOCASE  NULLS LAST, ((((rt0.c2) NOTNULL))-(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(x'b655' COLLATE NOCASE AS INTEGER)) ORDER BY (((rt0.c2)) BETWEEN ((LTRIM(rt0.c4, rt0.c2))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND ('>]^')))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CAST(x'b655' COLLATE NOCASE AS INTEGER)) ORDER BY (((rt0.c2)) BETWEEN ((LTRIM(rt0.c4, rt0.c2))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND ('>]^')))));
SELECT * FROM rt0 WHERE (GLOB(rt0.c1, rt0.c1) COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE (((GLOB(rt0.c1, rt0.c1) COLLATE BINARY)AND(((CAST(rt0.c2 AS TEXT)) IS TRUE)))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (load_extension(CASE rt0.c0  WHEN -759345500 THEN rt0.c2 ELSE rt0.c3 END));
SELECT * FROM rt0 WHERE (GLOB(rt0.c1, rt0.c1) COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE (((GLOB(rt0.c1, rt0.c1) COLLATE BINARY)AND(((CAST(rt0.c2 AS TEXT)) IS TRUE)))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (load_extension(CASE rt0.c0  WHEN -759345500 THEN rt0.c2 ELSE rt0.c3 END));
SELECT ALL * FROM rt0 WHERE (((x'7f') NOT NULL)) ORDER BY 0Xffffffffecc970d1 DESC, rt0.c2 DESC  NULLS LAST, CASE WHEN (((rt0.c0))>=((rt0.c0))) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END WHEN ((rt0.c4)<(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) ELSE (((rt0.c3))>(('LR09'))) END  NULLS FIRST, rt0.c3 DESC;
SELECT ALL * FROM rt0 WHERE (((x'7f') NOT NULL)) ORDER BY ((((0xffffffffc225f2cc, rt0.c1, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c4, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3, 937887956))) IN (rt0.c0, ((rt0.c3)OR(rt0.c1)), ((rt0.c0) NOT NULL))), (NOT (CAST(rt0.c0 AS NUMERIC))) DESC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((x'7f') NOT NULL)) ORDER BY 0Xffffffffecc970d1 DESC, rt0.c2 DESC  NULLS LAST, CASE WHEN (((rt0.c0))>=((rt0.c0))) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END WHEN ((rt0.c4)<(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) ELSE (((rt0.c3))>(('LR09'))) END  NULLS FIRST, rt0.c3 DESC;
SELECT ALL * FROM rt0 WHERE (((x'7f') NOT NULL)) ORDER BY ((((0xffffffffc225f2cc, rt0.c1, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c4, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3, 937887956))) IN (rt0.c0, ((rt0.c3)OR(rt0.c1)), ((rt0.c0) NOT NULL))), (NOT (CAST(rt0.c0 AS NUMERIC))) DESC LIMIT 0X0;
SELECT MIN(rt0.c0) FROM rt0 WHERE (((((rt0.c3)LIKE(rt0.c4)))|((NOT (rt0.c3))))) ORDER BY (((rt0.c2 IN (rt0.c3)))/(CAST(rt0.c2 AS TEXT)))  NULLS FIRST;
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (((((((rt0.c3)LIKE(rt0.c4)))|((NOT (rt0.c3)))))AND(((CAST(rt0.c3 AS NUMERIC)) IS FALSE)))) ORDER BY CAST(0.9072282871395894 AS TEXT) DESC LIMIT 2 INTERSECT SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4)))<(LENGTH(rt0.c0)))) ORDER BY CAST(0.9072282871395894 AS TEXT) DESC LIMIT 0x2;
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN highlight(rt0.c4, NULL, rt0.c1, rt0.c3) ELSE (+ ('i,Y>tbo')) END ASC, ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c4)) COLLATE BINARY INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN ((rt0.c4 IN (x'cc'))) AND (((((((rt0.c4)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN highlight(rt0.c4, NULL, rt0.c1, rt0.c3) ELSE (+ ('i,Y>tbo')) END ASC, ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c4)) COLLATE BINARY;
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN highlight(rt0.c4, NULL, rt0.c1, rt0.c3) ELSE (+ ('i,Y>tbo')) END ASC, ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c4)) COLLATE BINARY INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN ((rt0.c4 IN (x'cc'))) AND (((((((rt0.c4)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN highlight(rt0.c4, NULL, rt0.c1, rt0.c3) ELSE (+ ('i,Y>tbo')) END ASC, ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c4)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0 WHERE (QUOTE((rt0.c3 IN (rt0.c1)))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 END)IS(((((((rt0.c4)AND(NULL)))OR(rt0.c3)))AND(NULL)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (QUOTE((rt0.c3 IN (rt0.c1)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)))+(rt0.c4)), (((rt0.c3)%(rt0.c2)) IN ())  NULLS LAST, ((((rt0.c0) IS TRUE)) IS FALSE) ASC  NULLS LAST LIMIT 0X3;
SELECT * FROM rt0 WHERE ((- ((rt0.c3 IN ()))));
SELECT ALL * FROM rt0 WHERE ((- ((rt0.c3 IN ())))) INTERSECT SELECT * FROM rt0 WHERE (((NULL) BETWEEN (rt0.c2) AND (((((((((((NULL)OR(0.7359171613050844)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))));
SELECT * FROM rt0 WHERE ((- ((rt0.c3 IN ()))));
SELECT ALL * FROM rt0 WHERE ((- ((rt0.c3 IN ())))) INTERSECT SELECT * FROM rt0 WHERE (((NULL) BETWEEN (rt0.c2) AND (((((((((((NULL)OR(0.7359171613050844)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))));
SELECT MIN(rt0.c2) FROM rt0 WHERE (NULL);
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (((NULL)AND(((((rt0.c3) NOT NULL))>(((rt0.c3) ISNULL)))))) LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE ((((rt0.c4 IN (rt0.c0, rt0.c4))) NOT BETWEEN (CASE x'6f'  WHEN rt0.c4 THEN rt0.c1 END) AND (((rt0.c2)<(rt0.c1))))) LIMIT 1;
SELECT MIN(rt0.c1) FROM rt0 WHERE (((((rt0.c4) NOT NULL))%(((rt0.c4) NOTNULL)))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((((((rt0.c4) NOT NULL))%(((rt0.c4) NOTNULL))))AND('y{!U'))) ORDER BY rt0.c2 ASC  NULLS LAST LIMIT 3;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c4)))-(CAST(rt0.c2 AS REAL))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c4)))-(CAST(rt0.c2 AS REAL))))AND(rt0.c2))) LIMIT 3;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c4)))-(CAST(rt0.c2 AS REAL))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c4)))-(CAST(rt0.c2 AS REAL))))AND(rt0.c2))) LIMIT 3;
SELECT MAX(rt0.c3) FROM rt0 WHERE (CASE WHEN LOWER(rt0.c2) THEN CAST(rt0.c3 AS BLOB) WHEN LIKELY(rt0.c1) THEN ('f5Mᐦ.
#T' IN (rt0.c4)) WHEN (- (rt0.c1)) THEN '/' WHEN (+ (rt0.c2)) THEN CAST(x'' AS TEXT) ELSE rt0.c1 COLLATE BINARY END) ORDER BY CAST((+ (rt0.c2)) AS REAL);
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((CASE WHEN LOWER(rt0.c2) THEN CAST(rt0.c3 AS BLOB) WHEN LIKELY(rt0.c1) THEN ('f5Mᐦ.
#T' IN (rt0.c4)) WHEN (- (rt0.c1)) THEN '/' WHEN (+ (rt0.c2)) THEN CAST(x'' AS TEXT) ELSE rt0.c1 COLLATE BINARY END)AND(CASE WHEN (- (0.6141128684589086)) THEN (rt0.c4 IN (rt0.c3)) WHEN ((rt0.c3) ISNULL) THEN ((rt0.c1) NOTNULL) ELSE x'cabd67' COLLATE RTRIM END))) ORDER BY json_object((rt0.c4 IN ()), ((rt0.c0)>(rt0.c3))), CAST(rt0.c0 AS INTEGER) COLLATE BINARY ASC, (((rt0.c3)-(rt0.c1)) IN ((((rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c2)) AND ((rt0.c1, rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (TRIM(rt0.c4, NULL)))) ORDER BY (((((rt0.c1, '', rt0.c2, ''))>((rt0.c2, rt0.c3, rt0.c0, rt0.c4))))<<((- (rt0.c3)))) ASC, (((+ (rt0.c3)))-(((rt0.c3)GLOB(rt0.c3)))), ((((rt0.c2 IN (rt0.c4)), (rt0.c1 IN (rt0.c2))))>((CAST(rt0.c3 AS TEXT), (rt0.c2 IN (rt0.c0)))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((~ (TRIM(rt0.c4, NULL))))AND('.v?O'))) ORDER BY (((((rt0.c1, '', rt0.c2, ''))>((rt0.c2, rt0.c3, rt0.c0, rt0.c4))))<<((- (rt0.c3)))) ASC, (((+ (rt0.c3)))-(((rt0.c3)GLOB(rt0.c3)))), ((((rt0.c2 IN (rt0.c4)), (rt0.c1 IN (rt0.c2))))>((CAST(rt0.c3 AS TEXT), (rt0.c2 IN (rt0.c0)))))  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CAST((+ (rt0.c3)) AS BLOB)) ORDER BY (((((rt0.c1, '', rt0.c2, ''))>((rt0.c2, rt0.c3, rt0.c0, rt0.c4))))<<((- (rt0.c3)))) ASC, (((+ (rt0.c3)))-(((rt0.c3)GLOB(rt0.c3)))), ((((rt0.c2 IN (rt0.c4)), (rt0.c1 IN (rt0.c2))))>((CAST(rt0.c3 AS TEXT), (rt0.c2 IN (rt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN (((0.255291898494279))!=((x'2c'))) THEN rt0.c2 COLLATE BINARY WHEN UPPER(DISTINCT '1089252062') THEN ((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)) WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN -1380457019 THEN rt0.c1 ELSE x'' END THEN rt0.c0 COLLATE RTRIM ELSE ((x'258c')<(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN (((0.255291898494279))!=((x'2c'))) THEN rt0.c2 COLLATE BINARY WHEN UPPER(DISTINCT '1089252062') THEN ((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)) WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN -1380457019 THEN rt0.c1 ELSE x'' END THEN rt0.c0 COLLATE RTRIM ELSE ((x'258c')<(rt0.c2)) END);
SELECT ALL * FROM rt0 WHERE (((NULL)AND(((rt0.c3) IS FALSE))));
SELECT DISTINCT * FROM rt0 WHERE (((NULL)AND(((rt0.c3) IS FALSE)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((NULL)AND(((rt0.c3) IS FALSE))));
SELECT DISTINCT * FROM rt0 WHERE (((NULL)AND(((rt0.c3) IS FALSE)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) LIMIT 0X0;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((((rt0.c4)AND((((rt0.c1, rt0.c1, rt0.c3))<((rt0.c1, rt0.c2, rt0.c1))))))OR(CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((((rt0.c4)OR(rt0.c0)))AND(rt0.c4))) NOT NULL) ASC, (CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END IN (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST, '-7oBaa'  NULLS FIRST;
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (((((rt0.c4)AND((((rt0.c1, rt0.c1, rt0.c3))<((rt0.c1, rt0.c2, rt0.c1))))))OR(CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((((rt0.c4)OR(rt0.c0)))AND(rt0.c4))) NOT NULL) ASC, (CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END IN (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST, '-7oBaa'  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)-(NULL COLLATE NOCASE)));
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)-(NULL COLLATE NOCASE))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (HEX(DISTINCT rt0.c2) COLLATE NOCASE) LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)-(NULL COLLATE NOCASE)));
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)-(NULL COLLATE NOCASE))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (HEX(DISTINCT rt0.c2) COLLATE NOCASE) LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE ((~ ((((rt0.c3, rt0.c0, x'', rt0.c1)) BETWEEN ((rt0.c4, rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c2, rt0.c2))))));
SELECT DISTINCT * FROM rt0 WHERE ((~ ((((rt0.c3, rt0.c0, x'', rt0.c1)) BETWEEN ((rt0.c4, rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c2, rt0.c2)))))) ORDER BY ((((((rt0.c4)AND(rt0.c3)))AND(rt0.c4))) ISNULL) DESC, ((rt0.c4 COLLATE NOCASE)!=(rt0.c3)) DESC LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE ((~ ((((rt0.c3, rt0.c0, x'', rt0.c1)) BETWEEN ((rt0.c4, rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c2, rt0.c2))))));
SELECT DISTINCT * FROM rt0 WHERE ((~ ((((rt0.c3, rt0.c0, x'', rt0.c1)) BETWEEN ((rt0.c4, rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c2, rt0.c2)))))) ORDER BY ((((((rt0.c4)AND(rt0.c3)))AND(rt0.c4))) ISNULL) DESC, ((rt0.c4 COLLATE NOCASE)!=(rt0.c3)) DESC LIMIT 0X1;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE ((((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)), rt0.c1 COLLATE NOCASE, ((rt0.c4) NOT NULL)))<>(((rt0.c1 IN ()), ((rt0.c3) IS TRUE), rt0.c4))));
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE ((((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)), rt0.c1 COLLATE NOCASE, ((rt0.c4) NOT NULL)))>(((rt0.c1 IN ()), ((rt0.c3) IS TRUE), rt0.c4)))) INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((((rt0.c0 IN (rt0.c3)), COALESCE(DISTINCT rt0.c3, rt0.c1), '-2086708202'))>(((rt0.c0 IN (rt0.c1)), ((rt0.c4)-(rt0.c0)), CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 END))));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c4))) NOT BETWEEN (((rt0.c2)AND(rt0.c0))) AND (rt0.c0 COLLATE BINARY))) ORDER BY (NOT (CASE WHEN x'' THEN rt0.c0 END)), (NOT ('-865522577')) COLLATE RTRIM ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c4))) NOT BETWEEN (((rt0.c2)AND(rt0.c0))) AND (rt0.c0 COLLATE BINARY))) ORDER BY (NOT (CASE WHEN x'' THEN rt0.c0 END)), (NOT ('-865522577')) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c4))) NOT BETWEEN (((rt0.c2)AND(rt0.c0))) AND (rt0.c0 COLLATE BINARY))) ORDER BY (NOT (CASE WHEN x'' THEN rt0.c0 END)), (NOT ('-865522577')) COLLATE RTRIM ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c4))) NOT BETWEEN (((rt0.c2)AND(rt0.c0))) AND (rt0.c0 COLLATE BINARY))) ORDER BY (NOT (CASE WHEN x'' THEN rt0.c0 END)), (NOT ('-865522577')) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((CAST(rt0.c4 AS INTEGER))AND((~ (rt0.c0)))));
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((CAST(rt0.c4 AS INTEGER))AND((~ (rt0.c0)))))AND(x'15202a5a'))) ORDER BY (~ (x'94')), (- (((rt0.c2)!=(rt0.c4)))) ASC, (~ (CASE rt0.c1  WHEN rt0.c3 THEN '2039131043' ELSE rt0.c1 END)) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c2)GLOB(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c2)GLOB(rt0.c0))))) ORDER BY CASE TYPEOF(DISTINCT rt0.c3)  WHEN (NOT (rt0.c0)) THEN ((rt0.c4) ISNULL) END, (((CAST(rt0.c4 AS TEXT)))==(((((rt0.c3, rt0.c2, 0.061201192982992425)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c2, rt0.c1))))))  NULLS LAST INTERSECT SELECT * FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)), rt0.c3 COLLATE BINARY))<((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END, (~ (0.42507785182359237)))))) ORDER BY CASE TYPEOF(DISTINCT rt0.c3)  WHEN (NOT (rt0.c0)) THEN ((rt0.c4) ISNULL) END, (((CAST(rt0.c4 AS TEXT)))==(((((rt0.c3, rt0.c2, 0.061201192982992425)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c2, rt0.c1))))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c2)GLOB(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c2)GLOB(rt0.c0))))) ORDER BY CASE TYPEOF(DISTINCT rt0.c3)  WHEN (NOT (rt0.c0)) THEN ((rt0.c4) ISNULL) END, (((CAST(rt0.c4 AS TEXT)))==(((((rt0.c3, rt0.c2, 0.061201192982992425)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c2, rt0.c1))))))  NULLS LAST INTERSECT SELECT * FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)), rt0.c3 COLLATE BINARY))<((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END, (~ (0.42507785182359237)))))) ORDER BY CASE TYPEOF(DISTINCT rt0.c3)  WHEN (NOT (rt0.c0)) THEN ((rt0.c4) ISNULL) END, (((CAST(rt0.c4 AS TEXT)))==(((((rt0.c3, rt0.c2, 0.061201192982992425)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c2, rt0.c1))))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4)*(rt0.c1))  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)|(rt0.c2)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN 0.2664369422402839 END THEN (('540631489')<=(rt0.c0)) WHEN (((rt0.c0, rt0.c4))>=((rt0.c3, rt0.c3))) THEN ((rt0.c2)IS(rt0.c0)) END) ORDER BY ((rt0.c0)>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END) IS TRUE) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c4)*(rt0.c1))  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)|(rt0.c2)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN 0.2664369422402839 END THEN (('540631489')=(rt0.c0)) WHEN (((rt0.c0, rt0.c4))>((rt0.c3, rt0.c3))) THEN ((rt0.c2)IS(rt0.c0)) END)AND((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, (NOT (rt0.c1))))<((CAST(rt0.c3 AS BLOB), rt0.c3 COLLATE RTRIM)))))) ORDER BY ((rt0.c0)>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END) IS TRUE) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4)*(rt0.c1))  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)|(rt0.c2)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN 0.2664369422402839 END THEN (('540631489')<=(rt0.c0)) WHEN (((rt0.c0, rt0.c4))>=((rt0.c3, rt0.c3))) THEN ((rt0.c2)IS(rt0.c0)) END) ORDER BY ((rt0.c0)>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END) IS TRUE) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c4)*(rt0.c1))  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)|(rt0.c2)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN 0.2664369422402839 END THEN (('540631489')=(rt0.c0)) WHEN (((rt0.c0, rt0.c4))>((rt0.c3, rt0.c3))) THEN ((rt0.c2)IS(rt0.c0)) END)AND((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, (NOT (rt0.c1))))<((CAST(rt0.c3 AS BLOB), rt0.c3 COLLATE RTRIM)))))) ORDER BY ((rt0.c0)>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END) IS TRUE) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT DISTINCT * FROM rt0 WHERE (((NULL)AND((- (x'')))));
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT DISTINCT * FROM rt0 WHERE (((NULL)AND((- (x'')))));
SELECT * FROM rt0 WHERE (ROUND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'7c'))));
SELECT ALL * FROM rt0 WHERE (ROUND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'7c')))) INTERSECT SELECT * FROM rt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (ROUND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'7c'))));
SELECT ALL * FROM rt0 WHERE (ROUND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'7c')))) INTERSECT SELECT * FROM rt0 WHERE (NULL);
SELECT MAX(rt0.c1) FROM rt0 WHERE (x'') ORDER BY x'';
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (x'') ORDER BY x'';
SELECT ALL * FROM rt0 WHERE (0.7005632345631737);
SELECT DISTINCT * FROM rt0 WHERE (((0.7005632345631737)AND(LIKE(((rt0.c3)>=(rt0.c4)), (rt0.c2 IN (rt0.c2)))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (0.7005632345631737);
SELECT DISTINCT * FROM rt0 WHERE (((0.7005632345631737)AND(LIKE(((rt0.c3)>=(rt0.c4)), (rt0.c2 IN (rt0.c2)))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((UNLIKELY(rt0.c1)) NOTNULL)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)GLOB(rt0.c3)), CASE WHEN ((rt0.c1)LIKE(rt0.c4)) THEN rt0.c4 COLLATE BINARY WHEN (NOT (rt0.c0)) THEN (rt0.c0 IN ()) WHEN ((rt0.c1) IS FALSE) THEN rt0.c2 END DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((UNLIKELY(rt0.c1)) NOTNULL)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)GLOB(rt0.c3)), CASE WHEN ((rt0.c1)LIKE(rt0.c4)) THEN rt0.c4 COLLATE BINARY WHEN (NOT (rt0.c0)) THEN (rt0.c0 IN ()) WHEN ((rt0.c1) IS FALSE) THEN rt0.c2 END DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOTNULL)) NOTNULL)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)GLOB(rt0.c3)), CASE WHEN ((rt0.c1)LIKE(rt0.c4)) THEN rt0.c4 COLLATE BINARY WHEN (NOT (rt0.c0)) THEN (rt0.c0 IN ()) WHEN ((rt0.c1) IS FALSE) THEN rt0.c2 END DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((UNLIKELY(rt0.c1)) NOTNULL)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)GLOB(rt0.c3)), CASE WHEN ((rt0.c1)LIKE(rt0.c4)) THEN rt0.c4 COLLATE BINARY WHEN (NOT (rt0.c0)) THEN (rt0.c0 IN ()) WHEN ((rt0.c1) IS FALSE) THEN rt0.c2 END DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((UNLIKELY(rt0.c1)) NOTNULL)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)GLOB(rt0.c3)), CASE WHEN ((rt0.c1)LIKE(rt0.c4)) THEN rt0.c4 COLLATE BINARY WHEN (NOT (rt0.c0)) THEN (rt0.c0 IN ()) WHEN ((rt0.c1) IS FALSE) THEN rt0.c2 END DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOTNULL)) NOTNULL)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)GLOB(rt0.c3)), CASE WHEN ((rt0.c1)LIKE(rt0.c4)) THEN rt0.c4 COLLATE BINARY WHEN (NOT (rt0.c0)) THEN (rt0.c0 IN ()) WHEN ((rt0.c1) IS FALSE) THEN rt0.c2 END DESC  NULLS FIRST LIMIT 0X0;
SELECT MAX(rt0.c3) FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM) NOT NULL));
SELECT MAX(rt0.c3) FROM rt0 WHERE (((((rt0.c3 COLLATE RTRIM) NOT NULL))AND(((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END) NOT NULL)))) ORDER BY CAST(('A0' IN (rt0.c0, 0.8047386451714935)) AS TEXT)  NULLS LAST LIMIT 0x1;
SELECT * FROM rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS INTEGER)) ORDER BY CASE ((((0Xffffffff9f4f2f7a)AND(rt0.c0)))AND(rt0.c2))  WHEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1)) THEN '1074888247' END, ((((((rt0.c1)%(rt0.c1)))AND(rt0.c3 COLLATE RTRIM)))AND((+ (rt0.c4))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 COLLATE NOCASE AS INTEGER))AND(((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0))) NOT BETWEEN (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))OR(x'')))OR(rt0.c2)))OR(rt0.c3))) AND (x''))))) ORDER BY ((CAST(rt0.c2 AS REAL)) ISNULL) DESC INTERSECT SELECT * FROM rt0 WHERE (CASE WHEN ((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)) THEN ((rt0.c1)*(rt0.c3)) WHEN rt0.c2 THEN ((x'') IS TRUE) ELSE CASE rt0.c0  WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END END) ORDER BY ((CAST(rt0.c2 AS REAL)) ISNULL) DESC;
SELECT * FROM rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS INTEGER)) ORDER BY CASE ((((0Xffffffff9f4f2f7a)AND(rt0.c0)))AND(rt0.c2))  WHEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1)) THEN '1074888247' END, ((((((rt0.c1)%(rt0.c1)))AND(rt0.c3 COLLATE RTRIM)))AND((+ (rt0.c4))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 COLLATE NOCASE AS INTEGER))AND(((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0))) NOT BETWEEN (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))OR(x'')))OR(rt0.c2)))OR(rt0.c3))) AND (x''))))) ORDER BY ((CAST(rt0.c2 AS REAL)) ISNULL) DESC INTERSECT SELECT * FROM rt0 WHERE (CASE WHEN ((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)) THEN ((rt0.c1)*(rt0.c3)) WHEN rt0.c2 THEN ((x'') IS TRUE) ELSE CASE rt0.c0  WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END END) ORDER BY ((CAST(rt0.c2 AS REAL)) ISNULL) DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (+ (rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 END THEN rt0.c4 ELSE rt0.c0 END ASC, (- ((- (rt0.c2))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (+ (rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 END THEN rt0.c4 ELSE rt0.c0 END ASC, (- ((- (rt0.c2))))  NULLS FIRST LIMIT 3 INTERSECT SELECT * FROM rt0 WHERE (x'abec') ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (+ (rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 END THEN rt0.c4 ELSE rt0.c0 END ASC, (- ((- (rt0.c2))))  NULLS FIRST LIMIT 3;
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (+ (rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 END THEN rt0.c4 ELSE rt0.c0 END ASC, (- ((- (rt0.c2))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (+ (rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 END THEN rt0.c4 ELSE rt0.c0 END ASC, (- ((- (rt0.c2))))  NULLS FIRST LIMIT 3 INTERSECT SELECT * FROM rt0 WHERE (x'abec') ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (+ (rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 END THEN rt0.c4 ELSE rt0.c0 END ASC, (- ((- (rt0.c2))))  NULLS FIRST LIMIT 3;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)>=(rt0.c1)))<>(((rt0.c4)%(rt0.c2)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4)>=(rt0.c1)))!=(((rt0.c4)%(rt0.c2)))))AND(((((rt0.c3) NOT NULL))+(CAST(rt0.c1 AS TEXT))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)>=(rt0.c1)))<>(((rt0.c4)%(rt0.c2)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4)>=(rt0.c1)))!=(((rt0.c4)%(rt0.c2)))))AND(((((rt0.c3) NOT NULL))+(CAST(rt0.c1 AS TEXT))))));
SELECT * FROM rt0 WHERE (((LIKELY(rt0.c2)) IS FALSE)) ORDER BY CASE ((rt0.c3)LIKE(rt0.c2))  WHEN rt0.c3 COLLATE NOCASE THEN NULL WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) WHEN ((rt0.c4) NOTNULL) THEN ((rt0.c2)|(rt0.c4)) END, rt0.c0 ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((LIKELY(rt0.c2)) IS FALSE)) ORDER BY CASE ((rt0.c3)LIKE(rt0.c2))  WHEN rt0.c3 COLLATE NOCASE THEN NULL WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) WHEN ((rt0.c4) NOTNULL) THEN ((rt0.c2)|(rt0.c4)) END, rt0.c0 ASC  NULLS FIRST LIMIT 0X1;
SELECT * FROM rt0 WHERE (((LIKELY(rt0.c2)) IS FALSE)) ORDER BY CASE ((rt0.c3)LIKE(rt0.c2))  WHEN rt0.c3 COLLATE NOCASE THEN NULL WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) WHEN ((rt0.c4) NOTNULL) THEN ((rt0.c2)|(rt0.c4)) END, rt0.c0 ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((LIKELY(rt0.c2)) IS FALSE)) ORDER BY CASE ((rt0.c3)LIKE(rt0.c2))  WHEN rt0.c3 COLLATE NOCASE THEN NULL WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) WHEN ((rt0.c4) NOTNULL) THEN ((rt0.c2)|(rt0.c4)) END, rt0.c0 ASC  NULLS FIRST LIMIT 0X1;
SELECT * FROM rt0 WHERE (CASE rt0.c3  WHEN HEX(DISTINCT 0.3155644910848261) THEN ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2)) WHEN json_quote(rt0.c1) THEN ((rt0.c2) NOT BETWEEN (x'3425184d') AND (x'd1e69c12e3')) WHEN ((((((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c3) ISNULL) WHEN json_valid(rt0.c0) THEN rt0.c2 COLLATE NOCASE ELSE ((rt0.c2)&(rt0.c1)) END);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c3  WHEN HEX(DISTINCT 0.3155644910848261) THEN ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2)) WHEN json_quote(rt0.c1) THEN ((rt0.c2) NOT BETWEEN (x'3425184d') AND (x'd1e69c12e3')) WHEN ((((((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c3) ISNULL) WHEN json_valid(rt0.c0) THEN rt0.c2 COLLATE NOCASE ELSE ((rt0.c2)&(rt0.c1)) END)AND(((((rt0.c4)=(rt0.c0)))>=((((rt0.c4))!=((rt0.c2)))))))) INTERSECT SELECT * FROM rt0 WHERE ((+ (ABS(DISTINCT rt0.c2))));
SELECT * FROM rt0 WHERE (CASE rt0.c3  WHEN HEX(DISTINCT 0.3155644910848261) THEN ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2)) WHEN json_quote(rt0.c1) THEN ((rt0.c2) NOT BETWEEN (x'3425184d') AND (x'd1e69c12e3')) WHEN ((((((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c3) ISNULL) WHEN json_valid(rt0.c0) THEN rt0.c2 COLLATE NOCASE ELSE ((rt0.c2)&(rt0.c1)) END);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c3  WHEN HEX(DISTINCT 0.3155644910848261) THEN ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2)) WHEN json_quote(rt0.c1) THEN ((rt0.c2) NOT BETWEEN (x'3425184d') AND (x'd1e69c12e3')) WHEN ((((((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c3) ISNULL) WHEN json_valid(rt0.c0) THEN rt0.c2 COLLATE NOCASE ELSE ((rt0.c2)&(rt0.c1)) END)AND(((((rt0.c4)=(rt0.c0)))>=((((rt0.c4))!=((rt0.c2)))))))) INTERSECT SELECT * FROM rt0 WHERE ((+ (ABS(DISTINCT rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c4);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))LIKE(CAST(rt0.c1 AS REAL))) ASC  NULLS LAST, (((~ (rt0.c1)))>(CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) ASC, ROUND(rt0.c4, ((0.12594642237135867) NOT BETWEEN (rt0.c0) AND (rt0.c3)))  NULLS LAST LIMIT 0x0;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((- (rt0.c2)) IN ()));
SELECT MIN(rt0.c1) FROM rt0 WHERE (((- (rt0.c2)) IN ())) LIMIT 0x0;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c0))>=((rt0.c4, rt0.c1))) AS BLOB));
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c0))>=((rt0.c4, rt0.c1))) AS BLOB)) ORDER BY ((((rt0.c3)IS(rt0.c2))) NOT BETWEEN (((rt0.c0)*(rt0.c3))) AND ((rt0.c0 IN (NULL))))  NULLS LAST LIMIT 0;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (rt0.c0) ORDER BY ((((((-1792769827) ISNULL))AND(TYPEOF(rt0.c3))))AND(((rt0.c4)IS NOT(rt0.c1)))) DESC  NULLS LAST;
SELECT MIN(rt0.c3) FROM rt0 WHERE (rt0.c0) ORDER BY LIKELIHOOD(NULL, ((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))  NULLS LAST, rt0.c4 DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT MIN(rt0.c3) FROM rt0 WHERE ('VeE揆_lOR') ORDER BY LIKELIHOOD(NULL, ((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))  NULLS LAST, rt0.c4 DESC  NULLS FIRST LIMIT 0x1;
SELECT MAX(rt0.c0) FROM rt0 WHERE (((((rt0.c3)<(rt0.c1))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND (0xffffffffe1e040d4)));
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (((((rt0.c3)<>(rt0.c1))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND (0xffffffffe1e040d4))) ORDER BY x'8c8d' ASC INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (rt0.c1) ORDER BY x'8c8d' ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY CASE ((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c1))  WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN CASE WHEN rt0.c2 THEN rt0.c1 END WHEN ((rt0.c1)IS(rt0.c1)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END END  NULLS FIRST, NULLIF(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)), CAST(rt0.c1 AS TEXT))  NULLS FIRST, CASE WHEN '4iⲅnld' THEN ((rt0.c2) ISNULL) WHEN ((rt0.c3) NOT NULL) THEN CAST(rt0.c4 AS BLOB) ELSE ((rt0.c1)OR(rt0.c1)) END  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(((STRFTIME(rt0.c1, rt0.c4, rt0.c4, rt0.c3))AND(((rt0.c1) NOT NULL)))))) ORDER BY rt0.c1 COLLATE NOCASE, ((((((rt0.c4) NOTNULL))AND(((rt0.c1) IS TRUE))))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN UPPER(rt0.c1) THEN UPPER(0.2507088943808371) WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN 'ꕬ|t' THEN rt0.c0 WHEN rt0.c2 THEN x'e466' END THEN (((rt0.c0, rt0.c1)) BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c4, rt0.c2))) WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END ELSE ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) END) ORDER BY rt0.c1 COLLATE NOCASE, ((((((rt0.c4) NOTNULL))AND(((rt0.c1) IS TRUE))))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY CASE ((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c1))  WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN CASE WHEN rt0.c2 THEN rt0.c1 END WHEN ((rt0.c1)IS(rt0.c1)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END END  NULLS FIRST, NULLIF(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)), CAST(rt0.c1 AS TEXT))  NULLS FIRST, CASE WHEN '4iⲅnld' THEN ((rt0.c2) ISNULL) WHEN ((rt0.c3) NOT NULL) THEN CAST(rt0.c4 AS BLOB) ELSE ((rt0.c1)OR(rt0.c1)) END  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(((STRFTIME(rt0.c1, rt0.c4, rt0.c4, rt0.c3))AND(((rt0.c1) NOT NULL)))))) ORDER BY rt0.c1 COLLATE NOCASE, ((((((rt0.c4) NOTNULL))AND(((rt0.c1) IS TRUE))))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN UPPER(rt0.c1) THEN UPPER(0.2507088943808371) WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN 'ꕬ|t' THEN rt0.c0 WHEN rt0.c2 THEN x'e466' END THEN (((rt0.c0, rt0.c1)) BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c4, rt0.c2))) WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END ELSE ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) END) ORDER BY rt0.c1 COLLATE NOCASE, ((((((rt0.c4) NOTNULL))AND(((rt0.c1) IS TRUE))))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)))) LIMIT 1;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)))>>(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN 'mkp.' THEN rt0.c3 END))) ORDER BY (('') NOT BETWEEN ((((rt0.c4, rt0.c4, rt0.c0, rt0.c3))!=(('', rt0.c2, rt0.c1, rt0.c0)))) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS FIRST, (- (rt0.c1)) COLLATE BINARY;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)))>>(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN 'mkp.' THEN rt0.c3 END)))AND(((((CAST(rt0.c3 AS INTEGER))OR(((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))))AND(((rt0.c4)<>(rt0.c3))))))) ORDER BY ((((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND((~ (rt0.c2)))))OR(((rt0.c4) IS FALSE))))OR(((rt0.c1)IS(rt0.c0)))), CAST(((rt0.c0) ISNULL) AS NUMERIC) DESC LIMIT 0X3 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2)>>(rt0.c2)) THEN CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END WHEN rt0.c0 THEN (((rt0.c3, 2.06812569E8, rt0.c3)) BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c3))) ELSE ((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)) END) ORDER BY ((((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND((~ (rt0.c2)))))OR(((rt0.c4) IS FALSE))))OR(((rt0.c1)IS(rt0.c0)))), CAST(((rt0.c0) ISNULL) AS NUMERIC) DESC LIMIT 0x3;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))IS NOT((rt0.c2 IN (rt0.c2, rt0.c2, rt0.c0))))) ORDER BY CAST((- (rt0.c0)) AS BLOB) ASC, CAST(((rt0.c1)-(rt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0 IN ()))IS NOT((rt0.c2 IN (rt0.c2, rt0.c2, rt0.c0)))))AND(((rt0.c3)>>(((rt0.c1) NOT NULL)))))) ORDER BY LIKELIHOOD(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (rt0.c2))))) ORDER BY LIKELIHOOD(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))IS NOT((rt0.c2 IN (rt0.c2, rt0.c2, rt0.c0))))) ORDER BY CAST((- (rt0.c0)) AS BLOB) ASC, CAST(((rt0.c1)-(rt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0 IN ()))IS NOT((rt0.c2 IN (rt0.c2, rt0.c2, rt0.c0)))))AND(((rt0.c3)>>(((rt0.c1) NOT NULL)))))) ORDER BY LIKELIHOOD(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (rt0.c2))))) ORDER BY LIKELIHOOD(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) DESC  NULLS LAST;
SELECT MAX(rt0.c1) FROM rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE BINARY);
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((CAST(rt0.c2 AS REAL) COLLATE BINARY)AND((('98603598')GLOB(rt0.c0 COLLATE BINARY))))) LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE ((rt0.c3 IN (rt0.c4, rt0.c1, rt0.c0)) COLLATE RTRIM) LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c2 IN (rt0.c2, rt0.c2))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN (rt0.c1 IN (rt0.c3)) WHEN ((rt0.c1) NOTNULL) THEN CAST(rt0.c2 AS BLOB) END) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN NULL ELSE 0.9423046051742753 END)|(((rt0.c2)*(rt0.c4))))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE (rt0.c2 IN (rt0.c2, rt0.c2))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN (rt0.c1 IN (rt0.c3)) WHEN ((rt0.c1) NOTNULL) THEN CAST(rt0.c2 AS BLOB) END)AND(TRIM(TYPEOF(rt0.c3), x'')))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN NULL ELSE 0.9423046051742753 END)|(((rt0.c2)*(rt0.c4))))  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((rt0.c1)LIKE(rt0.c3)) COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN NULL ELSE 0.9423046051742753 END)|(((rt0.c2)*(rt0.c4))))  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(((((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c3)))AND((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))))));
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(((((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c3)))AND((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1)))>>(TRIM(DISTINCT rt0.c3))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1)))>>(TRIM(DISTINCT rt0.c3))));
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE ((- (rt0.c3 COLLATE NOCASE))) ORDER BY (+ (rt0.c0)) COLLATE NOCASE  NULLS FIRST, 0.3178792283825408, (((((((((- (rt0.c4)))OR(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c0 COLLATE NOCASE)))AND((~ ('-228762077')))))AND(((rt0.c0)=(rt0.c2)))) DESC;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE ((((- (rt0.c3 COLLATE NOCASE)))AND((((('DP5Fupc9#') BETWEEN (rt0.c2) AND (rt0.c3))) NOT NULL)))) ORDER BY (+ (rt0.c0)) COLLATE NOCASE  NULLS FIRST, 0.3178792283825408, (((((((((- (rt0.c4)))OR(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c0 COLLATE NOCASE)))AND((~ ('-228762077')))))AND(((rt0.c0)==(rt0.c2)))) DESC;
SELECT * FROM rt0 WHERE ('u^') ORDER BY ((((rt0.c3)>=(rt0.c3)))>=(CAST(rt0.c3 AS REAL)))  NULLS FIRST, (+ (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ('u^') ORDER BY (((rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((((NULL)/(rt0.c4)), ((rt0.c4)!=(rt0.c0)), (~ (rt0.c0)))) AND ((((rt0.c3)-(rt0.c0)), (((rt0.c1, rt0.c1, rt0.c4, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c4, rt0.c2)) AND ((rt0.c2, rt0.c4, rt0.c2, rt0.c1))), CAST(rt0.c2 AS TEXT)))) DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (-8.89184185E8) AND (json_array_length(rt0.c2, rt0.c4)))) ORDER BY (((rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((((NULL)/(rt0.c4)), ((rt0.c4)<>(rt0.c0)), (~ (rt0.c0)))) AND ((((rt0.c3)-(rt0.c0)), (((rt0.c1, rt0.c1, rt0.c4, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c4, rt0.c2)) AND ((rt0.c2, rt0.c4, rt0.c2, rt0.c1))), CAST(rt0.c2 AS TEXT)))) DESC  NULLS FIRST LIMIT 2;
SELECT * FROM rt0 WHERE ('u^') ORDER BY ((((rt0.c3)>=(rt0.c3)))>=(CAST(rt0.c3 AS REAL)))  NULLS FIRST, (+ (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ('u^') ORDER BY (((rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((((NULL)/(rt0.c4)), ((rt0.c4)!=(rt0.c0)), (~ (rt0.c0)))) AND ((((rt0.c3)-(rt0.c0)), (((rt0.c1, rt0.c1, rt0.c4, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c4, rt0.c2)) AND ((rt0.c2, rt0.c4, rt0.c2, rt0.c1))), CAST(rt0.c2 AS TEXT)))) DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (-8.89184185E8) AND (json_array_length(rt0.c2, rt0.c4)))) ORDER BY (((rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((((NULL)/(rt0.c4)), ((rt0.c4)<>(rt0.c0)), (~ (rt0.c0)))) AND ((((rt0.c3)-(rt0.c0)), (((rt0.c1, rt0.c1, rt0.c4, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c4, rt0.c2)) AND ((rt0.c2, rt0.c4, rt0.c2, rt0.c1))), CAST(rt0.c2 AS TEXT)))) DESC  NULLS FIRST LIMIT 2;
SELECT * FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN 0.5167071307463985 ELSE rt0.c1 END)>(0.2697955169075531 COLLATE BINARY))) ORDER BY '900617651'  NULLS LAST, (((((rt0.c3, rt0.c4, rt0.c1, rt0.c3)) BETWEEN ((rt0.c4, rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c4, rt0.c3, rt0.c4))))<>(CAST('A' AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN 0.5167071307463985 ELSE rt0.c1 END)>(0.2697955169075531 COLLATE BINARY)))AND(CASE (rt0.c1 IN (rt0.c4, rt0.c4))  WHEN ((rt0.c1)<<(NULL)) THEN (rt0.c1 IN ()) ELSE (((rt0.c3, NULL, rt0.c1, rt0.c0, rt0.c4))>((rt0.c4, rt0.c0, rt0.c4, rt0.c3, rt0.c0))) END))) ORDER BY '900617651'  NULLS LAST, (((((rt0.c3, rt0.c4, rt0.c1, rt0.c3)) BETWEEN ((rt0.c4, rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c4, rt0.c3, rt0.c4))))<>(CAST('A' AS TEXT)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN 0.5167071307463985 ELSE rt0.c1 END)>(0.2697955169075531 COLLATE BINARY))) ORDER BY '900617651'  NULLS LAST, (((((rt0.c3, rt0.c4, rt0.c1, rt0.c3)) BETWEEN ((rt0.c4, rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c4, rt0.c3, rt0.c4))))<>(CAST('A' AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN 0.5167071307463985 ELSE rt0.c1 END)>(0.2697955169075531 COLLATE BINARY)))AND(CASE (rt0.c1 IN (rt0.c4, rt0.c4))  WHEN ((rt0.c1)<<(NULL)) THEN (rt0.c1 IN ()) ELSE (((rt0.c3, NULL, rt0.c1, rt0.c0, rt0.c4))>((rt0.c4, rt0.c0, rt0.c4, rt0.c3, rt0.c0))) END))) ORDER BY '900617651'  NULLS LAST, (((((rt0.c3, rt0.c4, rt0.c1, rt0.c3)) BETWEEN ((rt0.c4, rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c4, rt0.c3, rt0.c4))))<>(CAST('A' AS TEXT)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE)  NULLS FIRST, CAST((((rt0.c3, rt0.c3))<((rt0.c1, rt0.c3))) AS BLOB) DESC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)AND(((((((0.5367840529995146)AND(rt0.c4 COLLATE NOCASE)))AND(((rt0.c0) IS TRUE))))OR((rt0.c3 IN (rt0.c0))))))) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE)  NULLS FIRST, CAST((((rt0.c3, rt0.c3))<((rt0.c1, rt0.c3))) AS BLOB) DESC INTERSECT SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2)LIKE(rt0.c0)) WHEN rt0.c4 THEN (((rt0.c4, rt0.c3))>=((rt0.c2, rt0.c1))) ELSE (- (rt0.c3)) END) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE)  NULLS FIRST, CAST((((rt0.c3, rt0.c3))<((rt0.c1, rt0.c3))) AS BLOB) DESC;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE)  NULLS FIRST, CAST((((rt0.c3, rt0.c3))<((rt0.c1, rt0.c3))) AS BLOB) DESC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)AND(((((((0.5367840529995146)AND(rt0.c4 COLLATE NOCASE)))AND(((rt0.c0) IS TRUE))))OR((rt0.c3 IN (rt0.c0))))))) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE)  NULLS FIRST, CAST((((rt0.c3, rt0.c3))<((rt0.c1, rt0.c3))) AS BLOB) DESC INTERSECT SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2)LIKE(rt0.c0)) WHEN rt0.c4 THEN (((rt0.c4, rt0.c3))>=((rt0.c2, rt0.c1))) ELSE (- (rt0.c3)) END) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE)  NULLS FIRST, CAST((((rt0.c3, rt0.c3))<((rt0.c1, rt0.c3))) AS BLOB) DESC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))>=(((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))>=(((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))))AND(((rt0.c1) BETWEEN ('0.40705773166459003') AND (rt0.c2 COLLATE BINARY))))) ORDER BY (x'afe3' IN ((NOT (rt0.c3)), rt0.c2 COLLATE RTRIM)) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((+ (-25482496)) COLLATE RTRIM) ORDER BY (x'afe3' IN ((NOT (rt0.c3)), rt0.c2 COLLATE RTRIM)) LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))>=(((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))>=(((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))))AND(((rt0.c1) BETWEEN ('0.40705773166459003') AND (rt0.c2 COLLATE BINARY))))) ORDER BY (x'afe3' IN ((NOT (rt0.c3)), rt0.c2 COLLATE RTRIM)) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((+ (-25482496)) COLLATE RTRIM) ORDER BY (x'afe3' IN ((NOT (rt0.c3)), rt0.c2 COLLATE RTRIM)) LIMIT 0;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (RTRIM('6k	S
')) ORDER BY ((((rt0.c3, rt0.c3, rt0.c0))>((rt0.c3, rt0.c3, rt0.c2))) IN (CASE x'7489d7a5'  WHEN rt0.c2 THEN rt0.c3 WHEN 'H' THEN '7(b' WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)) ASC  NULLS LAST, ((+ (NULL)) IN (rt0.c3 COLLATE NOCASE)), (((((((((rt0.c4 IN (rt0.c2)))OR((rt0.c1 IN ()))))AND(((((((((rt0.c0)OR(rt0.c0)))AND(NULL)))OR(rt0.c0)))AND(rt0.c3)))))AND(CAST(rt0.c4 AS NUMERIC))))OR((- (rt0.c0)))) ASC  NULLS FIRST;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (RTRIM('6k	S
')) ORDER BY -7.97584744E8, (0.24525893302116442 IN (((rt0.c2) ISNULL), MAX(rt0.c4, rt0.c3, rt0.c4, rt0.c4, rt0.c3))), TRIM(DISTINCT ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), rt0.c4 COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (0xffffffff92690646) ORDER BY ((CAST(rt0.c2 AS TEXT))IS(rt0.c2))  NULLS FIRST, CAST(CAST(rt0.c3 AS REAL) AS BLOB) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (-1838610874) ORDER BY (rt0.c1 IN (rt0.c2)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (0xffffffff92690646) ORDER BY ((CAST(rt0.c2 AS TEXT))IS(rt0.c2))  NULLS FIRST, CAST(CAST(rt0.c3 AS REAL) AS BLOB) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (-1838610874) ORDER BY (rt0.c1 IN (rt0.c2)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT MIN(rt0.c3) FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY ((((rt0.c1) IS FALSE)) NOTNULL) DESC  NULLS FIRST, CAST(CAST(908047697 AS TEXT) AS TEXT);
SELECT MIN(rt0.c3) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))AND((rt0.c2 IN (CAST(rt0.c4 AS INTEGER)))))) ORDER BY ((((rt0.c1) IS FALSE)) NOTNULL) DESC  NULLS FIRST, CAST(CAST(908047697 AS TEXT) AS TEXT);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4, rt0.c2, rt0.c1))!=((rt0.c2, rt0.c2, NULL)))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (((NULL)GLOB(rt0.c4))))) ORDER BY (((rt0.c2, rt0.c2, rt0.c3)) BETWEEN ((rt0.c4, ((rt0.c2)+(rt0.c3)), rt0.c0)) AND ((((rt0.c0)IS(rt0.c3)), ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))), (((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)) IN (((((rt0.c3)AND(rt0.c4)))AND(rt0.c2)))) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4, rt0.c2, rt0.c1))<((rt0.c2, rt0.c2, NULL)))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (((NULL)GLOB(rt0.c4))))) ORDER BY 0.15298446322479053 DESC  NULLS LAST, ((((rt0.c1) ISNULL)) BETWEEN (((((((((((rt0.c2)AND(rt0.c3)))OR('-1834650494')))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c1))) AND (((rt0.c2)>=(rt0.c3))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4, rt0.c2, rt0.c1))!=((rt0.c2, rt0.c2, NULL)))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (((NULL)GLOB(rt0.c4))))) ORDER BY (((rt0.c2, rt0.c2, rt0.c3)) BETWEEN ((rt0.c4, ((rt0.c2)+(rt0.c3)), rt0.c0)) AND ((((rt0.c0)IS(rt0.c3)), ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))), (((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)) IN (((((rt0.c3)AND(rt0.c4)))AND(rt0.c2)))) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4, rt0.c2, rt0.c1))<((rt0.c2, rt0.c2, NULL)))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (((NULL)GLOB(rt0.c4))))) ORDER BY 0.15298446322479053 DESC  NULLS LAST, ((((rt0.c1) ISNULL)) BETWEEN (((((((((((rt0.c2)AND(rt0.c3)))OR('-1834650494')))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c1))) AND (((rt0.c2)>=(rt0.c3))))  NULLS LAST;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE ((- (x''))) ORDER BY (((rt0.c2)) BETWEEN ((NULLIF(DISTINCT rt0.c2, rt0.c1))) AND ((((rt0.c4)IS(rt0.c2))))) ASC  NULLS LAST, (((((rt0.c1, rt0.c3, '-1662642870', rt0.c2, rt0.c4, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c1, rt0.c1, x'bd', rt0.c1, rt0.c4)) AND ((rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c3, rt0.c0))))|(rt0.c0)) ASC  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE ((- (x''))) ORDER BY CASE 0.8456799832655753  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END THEN ((((((rt0.c0)OR(rt0.c0)))AND('')))AND(rt0.c0)) ELSE CAST(rt0.c0 AS REAL) END ASC, CASE WHEN ((((rt0.c4)AND(rt0.c2)))AND(rt0.c3)) THEN NULLIF(rt0.c2, rt0.c1) ELSE rt0.c0 COLLATE NOCASE END DESC  NULLS LAST LIMIT 0x4;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((- (rt0.c1)) IN (((0.6792177413036257)OR(rt0.c2))))) ORDER BY (((rt0.c1, rt0.c0)) BETWEEN ((((rt0.c2)>>(rt0.c3)), LIKELIHOOD(DISTINCT rt0.c0, rt0.c1))) AND ((((rt0.c3) ISNULL), rt0.c2))) DESC, (+ (((rt0.c1) NOT NULL))) DESC  NULLS LAST, ((((rt0.c0)<<(rt0.c3))) ISNULL) DESC  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((((- (rt0.c1)) IN (((0.6792177413036257)OR(rt0.c2)))))AND(CAST(-1452792287 AS BLOB)))) ORDER BY ((NULL) IS FALSE)  NULLS FIRST, ((rt0.c4)GLOB(rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (CASE WHEN ((((((rt0.c0)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)) THEN rt0.c2 END) ORDER BY ((NULL) IS FALSE)  NULLS FIRST, ((rt0.c4)GLOB(rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0X1;
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c3 END IN (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c3 END IN (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))=(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END)/(rt0.c3))) ORDER BY ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))=(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c3 END IN (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c3 END IN (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))=(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END)/(rt0.c3))) ORDER BY ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))=(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((- (((((((rt0.c1)AND(rt0.c3)))AND('-1662642870')))AND(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((((- (((((((rt0.c1)AND(rt0.c3)))AND('-1662642870')))AND(rt0.c0)))))AND(((((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND('0')))OR(rt0.c3 COLLATE BINARY)))AND(IFNULL(DISTINCT rt0.c4, rt0.c4)))))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((- (((((((rt0.c1)AND(rt0.c3)))AND('-1662642870')))AND(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((((- (((((((rt0.c1)AND(rt0.c3)))AND('-1662642870')))AND(rt0.c0)))))AND(((((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND('0')))OR(rt0.c3 COLLATE BINARY)))AND(IFNULL(DISTINCT rt0.c4, rt0.c4)))))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c3 IN (rt0.c0, rt0.c2)) AS TEXT)) ORDER BY ((0.9528743710703269) NOT BETWEEN (rt0.c0) AND (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS LAST, (NOT (rt0.c1));
SELECT * FROM rt0 WHERE (((CAST((rt0.c3 IN (rt0.c0, rt0.c2)) AS TEXT))AND(((((rt0.c2) NOT NULL))>>(CASE WHEN rt0.c2 THEN rt0.c2 END))))) ORDER BY ((CAST(NULL AS INTEGER))>(CAST(rt0.c4 AS TEXT))) LIMIT 0X2 INTERSECT SELECT * FROM rt0 WHERE ((((((rt0.c4) NOTNULL)))<=((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c4)))AND('2072484956')))OR(rt0.c1)))))) ORDER BY ((CAST(NULL AS INTEGER))>(CAST(rt0.c4 AS TEXT))) LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c3 IN (rt0.c0, rt0.c2)) AS TEXT)) ORDER BY ((0.9528743710703269) NOT BETWEEN (rt0.c0) AND (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS LAST, (NOT (rt0.c1));
SELECT * FROM rt0 WHERE (((CAST((rt0.c3 IN (rt0.c0, rt0.c2)) AS TEXT))AND(((((rt0.c2) NOT NULL))>>(CASE WHEN rt0.c2 THEN rt0.c2 END))))) ORDER BY ((CAST(NULL AS INTEGER))>(CAST(rt0.c4 AS TEXT))) LIMIT 0X2 INTERSECT SELECT * FROM rt0 WHERE ((((((rt0.c4) NOTNULL)))<=((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c4)))AND('2072484956')))OR(rt0.c1)))))) ORDER BY ((CAST(NULL AS INTEGER))>(CAST(rt0.c4 AS TEXT))) LIMIT 0x2;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (rt0.c3 COLLATE NOCASE) ORDER BY '0.8894527200383157', rt0.c0 ASC  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)AND((('0.2208182203599408')&(0Xffffffff98ff7ed5))))) ORDER BY (('<')GLOB(CAST(rt0.c4 AS TEXT))), ((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))IS NOT(rt0.c4));
SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY ((((NULL) IS FALSE))&(((rt0.c2)-(rt0.c3)))), (~ (((rt0.c0)|(NULL))))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) ISNULL) COLLATE NOCASE)AND(((((rt0.c2, rt0.c1, 0.2606952949825153))<>((rt0.c2, x'', rt0.c4))) IN ((+ (rt0.c1))))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN 0.9363828239254263 WHEN rt0.c3 THEN rt0.c4 END)LIKE(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)), CAST(rt0.c4 AS INTEGER) ASC  NULLS FIRST, ((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4))) BETWEEN (CASE rt0.c0  WHEN 0.9436098065014047 THEN 0.023148129024355812 END) AND (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(x'aa'))))  NULLS LAST, (CASE WHEN rt0.c2 THEN rt0.c3 END IN (rt0.c4)) LIMIT 0X3;
SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY ((((NULL) IS FALSE))&(((rt0.c2)-(rt0.c3)))), (~ (((rt0.c0)|(NULL))))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) ISNULL) COLLATE NOCASE)AND(((((rt0.c2, rt0.c1, 0.2606952949825153))<>((rt0.c2, x'', rt0.c4))) IN ((+ (rt0.c1))))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN 0.9363828239254263 WHEN rt0.c3 THEN rt0.c4 END)LIKE(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)), CAST(rt0.c4 AS INTEGER) ASC  NULLS FIRST, ((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4))) BETWEEN (CASE rt0.c0  WHEN 0.9436098065014047 THEN 0.023148129024355812 END) AND (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(x'aa'))))  NULLS LAST, (CASE WHEN rt0.c2 THEN rt0.c3 END IN (rt0.c4)) LIMIT 0X3;
SELECT COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 END IN (((NULL) IS FALSE)))) ORDER BY ((((((((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR((rt0.c0 IN ()))))AND(((((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c3)))))AND(CAST(rt0.c3 AS NUMERIC))))OR(rt0.c2 COLLATE RTRIM))  NULLS LAST, ((((x'') IS TRUE))>>(IFNULL(rt0.c1, rt0.c4)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 END IN (((NULL) IS FALSE)))) ORDER BY ((((((((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR((rt0.c0 IN ()))))AND(((((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c3)))))AND(CAST(rt0.c3 AS NUMERIC))))OR(rt0.c2 COLLATE RTRIM))  NULLS LAST, ((((x'') IS TRUE))>>(IFNULL(rt0.c1, rt0.c4)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (0.1788861054037214) AND (rt0.c0))) AND ((- (rt0.c1)))));
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (0.1788861054037214) AND (rt0.c0))) AND ((- (rt0.c1))))) ORDER BY LIKELY(rt0.c0) DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (0.1788861054037214) AND (rt0.c0))) AND ((- (rt0.c1)))));
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (0.1788861054037214) AND (rt0.c0))) AND ((- (rt0.c1))))) ORDER BY LIKELY(rt0.c0) DESC  NULLS FIRST LIMIT 0X1;
SELECT MAX(rt0.c3) FROM rt0 WHERE (((NULL) NOT BETWEEN (0.23685802739570172 COLLATE RTRIM) AND (rt0.c0))) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 END THEN (- ('-228762077')) END;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((NULL) NOT BETWEEN (0.23685802739570172 COLLATE RTRIM) AND (rt0.c0)))AND(rt0.c2))) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 END THEN (- ('-228762077')) END INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (json_quote(rt0.c0 COLLATE BINARY)) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 END THEN (- ('-228762077')) END;
SELECT ALL * FROM rt0 WHERE (IFNULL(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END, CASE WHEN x'' THEN 0.33156475755626114 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END)) ORDER BY (NOT (((rt0.c4)>>(rt0.c3)))), CAST(rt0.c1 COLLATE NOCASE AS REAL), (((((+ (rt0.c0)))OR('-381090566')))OR(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END))  NULLS LAST, rt0.c1  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((IFNULL(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END, CASE WHEN x'' THEN 0.33156475755626114 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END))AND((((((rt0.c3))<>(('-1034882599'))))*((((rt0.c4, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2)) AND ((rt0.c4, rt0.c0)))))))) ORDER BY (((rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c0) NOT NULL), ((rt0.c1)+(rt0.c1)))) AND ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))  NULLS LAST, (((rt0.c1, rt0.c2)) NOT BETWEEN (((- (rt0.c0)), (~ (rt0.c2)))) AND ((CAST(rt0.c3 AS BLOB), ((rt0.c4) IS FALSE)))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c3)%(rt0.c3)))OR(CAST(rt0.c1 AS BLOB))))AND(((rt0.c3) ISNULL))))AND(ABS(rt0.c3))))AND(CAST(rt0.c0 AS REAL))))OR(((((rt0.c3)OR(rt0.c4)))AND(rt0.c2))))) ORDER BY (((rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c0) NOT NULL), ((rt0.c1)+(rt0.c1)))) AND ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))  NULLS LAST, (((rt0.c1, rt0.c2)) NOT BETWEEN (((- (rt0.c0)), (~ (rt0.c2)))) AND ((CAST(rt0.c3 AS BLOB), ((rt0.c4) IS FALSE)))) LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (IFNULL(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END, CASE WHEN x'' THEN 0.33156475755626114 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END)) ORDER BY (NOT (((rt0.c4)>>(rt0.c3)))), CAST(rt0.c1 COLLATE NOCASE AS REAL), (((((+ (rt0.c0)))OR('-381090566')))OR(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END))  NULLS LAST, rt0.c1  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((IFNULL(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END, CASE WHEN x'' THEN 0.33156475755626114 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END))AND((((((rt0.c3))<>(('-1034882599'))))*((((rt0.c4, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2)) AND ((rt0.c4, rt0.c0)))))))) ORDER BY (((rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c0) NOT NULL), ((rt0.c1)+(rt0.c1)))) AND ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))  NULLS LAST, (((rt0.c1, rt0.c2)) NOT BETWEEN (((- (rt0.c0)), (~ (rt0.c2)))) AND ((CAST(rt0.c3 AS BLOB), ((rt0.c4) IS FALSE)))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c3)%(rt0.c3)))OR(CAST(rt0.c1 AS BLOB))))AND(((rt0.c3) ISNULL))))AND(ABS(rt0.c3))))AND(CAST(rt0.c0 AS REAL))))OR(((((rt0.c3)OR(rt0.c4)))AND(rt0.c2))))) ORDER BY (((rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c0) NOT NULL), ((rt0.c1)+(rt0.c1)))) AND ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))  NULLS LAST, (((rt0.c1, rt0.c2)) NOT BETWEEN (((- (rt0.c0)), (~ (rt0.c2)))) AND ((CAST(rt0.c3 AS BLOB), ((rt0.c4) IS FALSE)))) LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)AND(CASE rt0.c4 COLLATE RTRIM  WHEN ((rt0.c2) IS TRUE) THEN x'3710' WHEN (((rt0.c4, rt0.c4))<=((rt0.c2, rt0.c2))) THEN ((rt0.c1)>=(rt0.c2)) WHEN rt0.c3 COLLATE BINARY THEN LIKELIHOOD(rt0.c4, rt0.c3) END))) ORDER BY ((x'')OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))  NULLS FIRST, (+ (((((((((rt0.c2)OR(rt0.c3)))OR(x'2e3d')))AND(rt0.c0)))AND(rt0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)AND(CASE rt0.c4 COLLATE RTRIM  WHEN ((rt0.c2) IS TRUE) THEN x'3710' WHEN (((rt0.c4, rt0.c4))<=((rt0.c2, rt0.c2))) THEN ((rt0.c1)>=(rt0.c2)) WHEN rt0.c3 COLLATE BINARY THEN LIKELIHOOD(rt0.c4, rt0.c3) END))) ORDER BY ((x'')OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))  NULLS FIRST, (+ (((((((((rt0.c2)OR(rt0.c3)))OR(x'2e3d')))AND(rt0.c0)))AND(rt0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c3 AS TEXT)))) ORDER BY (rt0.c0 COLLATE NOCASE IN (ABS(rt0.c0))) ASC  NULLS FIRST, (((rt0.c3, rt0.c4)) NOT BETWEEN ((CAST(rt0.c2 AS REAL), ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))) AND ((CAST(rt0.c1 AS NUMERIC), (rt0.c3 IN (rt0.c4))))) DESC  NULLS LAST, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))%((+ ('r'))))  NULLS LAST, rt0.c0 ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((+ (CAST(rt0.c3 AS TEXT))))AND((((rt0.c2, rt0.c2)) NOT BETWEEN (((((rt0.c2, rt0.c3, rt0.c4))<((rt0.c3, rt0.c0, rt0.c1))), (((rt0.c4, rt0.c4, rt0.c4))<=((rt0.c1, rt0.c2, rt0.c3))))) AND ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)), TYPEOF(rt0.c3))))))) ORDER BY (rt0.c0 COLLATE NOCASE IN (ABS(rt0.c0))) ASC  NULLS FIRST, (((rt0.c3, rt0.c4)) NOT BETWEEN ((CAST(rt0.c2 AS REAL), ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))) AND ((CAST(rt0.c1 AS NUMERIC), (rt0.c3 IN (rt0.c4))))) DESC  NULLS LAST, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))%((+ ('r'))))  NULLS LAST, rt0.c0 ASC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) BETWEEN (NULL) AND (rt0.c2)))AND((((rt0.c1, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2))))))OR(((rt0.c1) ISNULL)))) ORDER BY (rt0.c0 COLLATE NOCASE IN (ABS(rt0.c0))) ASC  NULLS FIRST, (((rt0.c3, rt0.c4)) NOT BETWEEN ((CAST(rt0.c2 AS REAL), ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))) AND ((CAST(rt0.c1 AS NUMERIC), (rt0.c3 IN (rt0.c4))))) DESC  NULLS LAST, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))%((+ ('r'))))  NULLS LAST, rt0.c0 ASC  NULLS LAST;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND('I.')))*(((rt0.c4) IS TRUE))));
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND('I.')))*(((rt0.c4) IS TRUE))))AND(((((((rt0.c2)OR((('1780714369') ISNULL))))AND((rt0.c2 IN ()))))AND((rt0.c4 IN (rt0.c0))))))) ORDER BY CASE (((rt0.c4, '.'))>((rt0.c3, NULL)))  WHEN rt0.c2 COLLATE BINARY THEN (NOT ('-1237334296')) WHEN 0.3735457208502744 THEN ((rt0.c3) ISNULL) ELSE UNLIKELY(DISTINCT 0.718243821441104) END ASC LIMIT 0;
SELECT * FROM rt0 WHERE (((SQLITE_COMPILEOPTION_USED(rt0.c0))IS(CAST(x'' AS BLOB))));
SELECT DISTINCT * FROM rt0 WHERE (((((SQLITE_COMPILEOPTION_USED(rt0.c0))IS(CAST(x'' AS BLOB))))AND(((LENGTH(rt0.c0)) BETWEEN ((((rt0.c2, rt0.c1, x'a48ba7')) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c3)) AND ((rt0.c3, rt0.c3, NULL)))) AND (((7.1996702E8) NOT NULL))))));
SELECT * FROM rt0 WHERE (((SQLITE_COMPILEOPTION_USED(rt0.c0))IS(CAST(x'' AS BLOB))));
SELECT DISTINCT * FROM rt0 WHERE (((((SQLITE_COMPILEOPTION_USED(rt0.c0))IS(CAST(x'' AS BLOB))))AND(((LENGTH(rt0.c0)) BETWEEN ((((rt0.c2, rt0.c1, x'a48ba7')) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c3)) AND ((rt0.c3, rt0.c3, NULL)))) AND (((7.1996702E8) NOT NULL))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((SQLITE_SOURCE_ID())AND(((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))IS((rt0.c4 IN (rt0.c1)))))));
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c0, rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3, rt0.c4)) AND ((rt0.c2, rt0.c1, rt0.c4, rt0.c1))) AS TEXT)) ORDER BY TRIM(((rt0.c3)&(rt0.c3)), rt0.c2)  NULLS FIRST, (((('-505397036')&(rt0.c0))) NOTNULL) DESC, (((((rt0.c4, '1509409244'))>=(('n鿼|OTl햋뫰', rt0.c2)))) IS TRUE);
SELECT DISTINCT * FROM rt0 WHERE (CAST((((rt0.c0, rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3, rt0.c4)) AND ((rt0.c2, rt0.c1, rt0.c4, rt0.c1))) AS TEXT)) ORDER BY TRIM(((rt0.c3)&(rt0.c3)), rt0.c2)  NULLS FIRST, (((('-505397036')&(rt0.c0))) NOTNULL) DESC, (((((rt0.c4, '1509409244'))>=(('n鿼|OTl햋뫰', rt0.c2)))) IS TRUE) INTERSECT SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (CAST((+ (rt0.c4)) AS INTEGER)) ORDER BY TRIM(((rt0.c3)&(rt0.c3)), rt0.c2)  NULLS FIRST, (((('-505397036')&(rt0.c0))) NOTNULL) DESC, (((((rt0.c4, '1509409244'))>=(('n鿼|OTl햋뫰', rt0.c2)))) IS TRUE);
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c0, rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3, rt0.c4)) AND ((rt0.c2, rt0.c1, rt0.c4, rt0.c1))) AS TEXT)) ORDER BY TRIM(((rt0.c3)&(rt0.c3)), rt0.c2)  NULLS FIRST, (((('-505397036')&(rt0.c0))) NOTNULL) DESC, (((((rt0.c4, '1509409244'))>=(('n鿼|OTl햋뫰', rt0.c2)))) IS TRUE);
SELECT DISTINCT * FROM rt0 WHERE (CAST((((rt0.c0, rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3, rt0.c4)) AND ((rt0.c2, rt0.c1, rt0.c4, rt0.c1))) AS TEXT)) ORDER BY TRIM(((rt0.c3)&(rt0.c3)), rt0.c2)  NULLS FIRST, (((('-505397036')&(rt0.c0))) NOTNULL) DESC, (((((rt0.c4, '1509409244'))>=(('n鿼|OTl햋뫰', rt0.c2)))) IS TRUE) INTERSECT SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (CAST((+ (rt0.c4)) AS INTEGER)) ORDER BY TRIM(((rt0.c3)&(rt0.c3)), rt0.c2)  NULLS FIRST, (((('-505397036')&(rt0.c0))) NOTNULL) DESC, (((((rt0.c4, '1509409244'))>=(('n鿼|OTl햋뫰', rt0.c2)))) IS TRUE);
SELECT * FROM rt0 WHERE (rt0.c4 COLLATE NOCASE) ORDER BY (((((((rt0.c3, rt0.c2, rt0.c4, rt0.c4, rt0.c1))<=((rt0.c1, rt0.c4, rt0.c1, rt0.c3, rt0.c4))))AND(((rt0.c3)&(rt0.c0)))))OR(STRFTIME(rt0.c1, '277152988', rt0.c4, rt0.c4))) DESC  NULLS LAST, 0.7610983254432326  NULLS FIRST, (((((((((rt0.c4 IN ()))AND(((((((((rt0.c4)OR(x'32')))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))))AND(((rt0.c4) IS TRUE))))AND(5.34814226E8)))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4 COLLATE NOCASE)AND((~ (((rt0.c2) ISNULL)))))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)OR(CASE rt0.c3  WHEN '-560017810' THEN x'' WHEN rt0.c3 THEN rt0.c3 END))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((- (NULL))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)OR(CASE rt0.c3  WHEN '-560017810' THEN x'' WHEN rt0.c3 THEN rt0.c3 END))  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c4 COLLATE NOCASE) ORDER BY (((((((rt0.c3, rt0.c2, rt0.c4, rt0.c4, rt0.c1))<=((rt0.c1, rt0.c4, rt0.c1, rt0.c3, rt0.c4))))AND(((rt0.c3)&(rt0.c0)))))OR(STRFTIME(rt0.c1, '277152988', rt0.c4, rt0.c4))) DESC  NULLS LAST, 0.7610983254432326  NULLS FIRST, (((((((((rt0.c4 IN ()))AND(((((((((rt0.c4)OR(x'32')))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))))AND(((rt0.c4) IS TRUE))))AND(5.34814226E8)))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN (((+ (rt0.c2)))) AND ((rt0.c0))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4)) NOT BETWEEN (((+ (rt0.c2)))) AND ((rt0.c0))))AND(CASE x'd128706f'  WHEN '1436703206' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN '-740535334' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END COLLATE NOCASE))) LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN (((+ (rt0.c2)))) AND ((rt0.c0))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4)) NOT BETWEEN (((+ (rt0.c2)))) AND ((rt0.c0))))AND(CASE x'd128706f'  WHEN '1436703206' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN '-740535334' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END COLLATE NOCASE))) LIMIT 0x0;
SELECT * FROM rt0 WHERE (6.118936692994792E-4) ORDER BY (((~ (rt0.c4)))||(CAST(rt0.c0 AS REAL)));
SELECT * FROM rt0 WHERE (6.118936692994792E-4) ORDER BY ((rt0.c4) IS TRUE)  NULLS FIRST, ((((rt0.c0, rt0.c1, rt0.c3))=((rt0.c1, rt0.c2, rt0.c4))) IN ((((rt0.c4))>=((rt0.c1)))))  NULLS LAST;
SELECT * FROM rt0 WHERE (6.118936692994792E-4) ORDER BY (((~ (rt0.c4)))||(CAST(rt0.c0 AS REAL)));
SELECT * FROM rt0 WHERE (6.118936692994792E-4) ORDER BY ((rt0.c4) IS TRUE)  NULLS FIRST, ((((rt0.c0, rt0.c1, rt0.c3))=((rt0.c1, rt0.c2, rt0.c4))) IN ((((rt0.c4))>=((rt0.c1)))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY CAST(((rt0.c0)IS NOT(NULL)) AS BLOB);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(((((rt0.c3)>(rt0.c3)))AND((rt0.c4 IN ())))))) ORDER BY CAST(((rt0.c0)IS NOT(NULL)) AS BLOB) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c0, rt0.c2))=((rt0.c0, rt0.c4, rt0.c1)))))) ORDER BY CAST(((rt0.c0)IS NOT(NULL)) AS BLOB) LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY CAST(((rt0.c0)IS NOT(NULL)) AS BLOB);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(((((rt0.c3)>(rt0.c3)))AND((rt0.c4 IN ())))))) ORDER BY CAST(((rt0.c0)IS NOT(NULL)) AS BLOB) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c0, rt0.c2))=((rt0.c0, rt0.c4, rt0.c1)))))) ORDER BY CAST(((rt0.c0)IS NOT(NULL)) AS BLOB) LIMIT 0X2;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN 0.9968482204621427 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)-(LAST_INSERT_ROWID()))) ORDER BY CAST((((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0, 0Xffffffffd04f441e, rt0.c0))) AS TEXT) ASC, ((((rt0.c0) IS TRUE))<=('1004385235' COLLATE RTRIM)) DESC  NULLS LAST, x'';
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN 0.9968482204621427 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)-(LAST_INSERT_ROWID()))) ORDER BY CAST((((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0, -800111586, rt0.c0))) AS TEXT) ASC, ((((rt0.c0) IS TRUE))<=('1004385235' COLLATE RTRIM)) DESC  NULLS LAST, x'' LIMIT 0X3 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c3)>=(rt0.c0)))>>(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY CAST((((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0, -800111586, rt0.c0))) AS TEXT) ASC, ((((rt0.c0) IS TRUE))<=('1004385235' COLLATE RTRIM)) DESC  NULLS LAST, x'' LIMIT 3;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4)))) ISNULL));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4)))) ISNULL))AND(NULL))) INTERSECT SELECT * FROM rt0 WHERE ((+ (((0.12254259894821695) BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4)))) ISNULL));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4)))) ISNULL))AND(NULL))) INTERSECT SELECT * FROM rt0 WHERE ((+ (((0.12254259894821695) BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL)) ORDER BY CAST(((((rt0.c2)OR(rt0.c4)))OR(rt0.c3)) AS INTEGER), ((rt0.c1) BETWEEN (NULL) AND (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END))  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) AS NUMERIC)) ORDER BY CAST(((((rt0.c2)OR(rt0.c4)))OR(rt0.c3)) AS INTEGER), ((rt0.c1) BETWEEN (NULL) AND (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END))  NULLS LAST LIMIT 0;
SELECT * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL)) ORDER BY CAST(((((rt0.c2)OR(rt0.c4)))OR(rt0.c3)) AS INTEGER), ((rt0.c1) BETWEEN (NULL) AND (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END))  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) AS NUMERIC)) ORDER BY CAST(((((rt0.c2)OR(rt0.c4)))OR(rt0.c3)) AS INTEGER), ((rt0.c1) BETWEEN (NULL) AND (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END))  NULLS LAST LIMIT 0;
SELECT MIN(rt0.c3) FROM rt0 WHERE (CAST(rt0.c4 AS NUMERIC));
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (((CAST(rt0.c4 AS NUMERIC))AND(((SQLITE_COMPILEOPTION_USED(rt0.c1)) IS TRUE)))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) COLLATE NOCASE, rt0.c1, NULLIF('j둲*D
oF', (NOT (0Xffffffffdfb2365a)))  NULLS FIRST LIMIT 2;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)<(rt0.c3)) AS BLOB)) ORDER BY x'249285' COLLATE RTRIM ASC  NULLS FIRST, ((((((((rt0.c1)%(rt0.c0)))AND((((rt0.c4, rt0.c3))<=((rt0.c2, rt0.c3))))))OR('-117441129')))AND(rt0.c2)) ASC  NULLS LAST, ((((0.37760211995998305)OR(rt0.c4)))AND(rt0.c2)) COLLATE NOCASE ASC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)<(rt0.c3)) AS BLOB)) ORDER BY ((((rt0.c3) NOT BETWEEN (1477441143) AND (rt0.c4))) NOT BETWEEN ((((rt0.c3))<((rt0.c0)))) AND (((0.09090607930004835) BETWEEN (rt0.c1) AND (rt0.c2)))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (((x'')|(((rt0.c4)<(rt0.c1))))) ORDER BY ((((rt0.c3) NOT BETWEEN (1477441143) AND (rt0.c4))) NOT BETWEEN ((((rt0.c3))<((rt0.c0)))) AND (((0.09090607930004835) BETWEEN (rt0.c1) AND (rt0.c2)))) DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)<(rt0.c3)) AS BLOB)) ORDER BY x'249285' COLLATE RTRIM ASC  NULLS FIRST, ((((((((rt0.c1)%(rt0.c0)))AND((((rt0.c4, rt0.c3))<=((rt0.c2, rt0.c3))))))OR('-117441129')))AND(rt0.c2)) ASC  NULLS LAST, ((((0.37760211995998305)OR(rt0.c4)))AND(rt0.c2)) COLLATE NOCASE ASC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)<(rt0.c3)) AS BLOB)) ORDER BY ((((rt0.c3) NOT BETWEEN (1477441143) AND (rt0.c4))) NOT BETWEEN ((((rt0.c3))<((rt0.c0)))) AND (((0.09090607930004835) BETWEEN (rt0.c1) AND (rt0.c2)))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (((x'')|(((rt0.c4)<(rt0.c1))))) ORDER BY ((((rt0.c3) NOT BETWEEN (1477441143) AND (rt0.c4))) NOT BETWEEN ((((rt0.c3))<((rt0.c0)))) AND (((0.09090607930004835) BETWEEN (rt0.c1) AND (rt0.c2)))) DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c3) AND (((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))));
SELECT * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c3) AND (((((rt0.c1)AND(rt0.c4)))OR(rt0.c3))))) LIMIT 2;
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c3) AND (((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))));
SELECT * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c3) AND (((((rt0.c1)AND(rt0.c4)))OR(rt0.c3))))) LIMIT 2;
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))+(((rt0.c1) IS FALSE)))) ORDER BY NULL DESC, ((((rt0.c0) IS TRUE))OR(((rt0.c4)<<(-1.579451077E9))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))+(((rt0.c1) IS FALSE)))) ORDER BY rt0.c1 DESC, (((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)) IN (((rt0.c1) NOT BETWEEN (NULL) AND (-6.9546469E8)))) DESC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE UNICODE(rt0.c3)  WHEN (~ (rt0.c4)) THEN rt0.c4 COLLATE BINARY WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END THEN (rt0.c4 IN ()) WHEN ((rt0.c1)==(0.9184287678251294)) THEN (((rt0.c0, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3)) AND ((rt0.c2, rt0.c0))) END) ORDER BY rt0.c1 DESC, (((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)) IN (((rt0.c1) NOT BETWEEN (NULL) AND (-6.9546469E8)))) DESC LIMIT 0x0;
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))+(((rt0.c1) IS FALSE)))) ORDER BY NULL DESC, ((((rt0.c0) IS TRUE))OR(((rt0.c4)<<(-1.579451077E9))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))+(((rt0.c1) IS FALSE)))) ORDER BY rt0.c1 DESC, (((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)) IN (((rt0.c1) NOT BETWEEN (NULL) AND (-6.9546469E8)))) DESC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE UNICODE(rt0.c3)  WHEN (~ (rt0.c4)) THEN rt0.c4 COLLATE BINARY WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END THEN (rt0.c4 IN ()) WHEN ((rt0.c1)==(0.9184287678251294)) THEN (((rt0.c0, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3)) AND ((rt0.c2, rt0.c0))) END) ORDER BY rt0.c1 DESC, (((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)) IN (((rt0.c1) NOT BETWEEN (NULL) AND (-6.9546469E8)))) DESC LIMIT 0x0;
SELECT MIN(rt0.c4) FROM rt0 WHERE (((rt0.c4)GLOB(rt0.c0)) COLLATE NOCASE);
SELECT MIN(rt0.c4) FROM rt0 WHERE (((((rt0.c4)GLOB(rt0.c0)) COLLATE NOCASE)AND((((rt0.c4)) NOT BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((CAST(rt0.c4 AS BLOB))))))) LIMIT 3;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c0 AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE ((((~ (CAST(rt0.c0 AS TEXT))))AND((- ((((x'47'))>((rt0.c4)))))))) ORDER BY (~ ('')) ASC LIMIT 0X0 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(NULLIF(rt0.c2, rt0.c2) AS INTEGER)) ORDER BY (~ ('')) ASC LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((('277152988') BETWEEN (CASE WHEN rt0.c4 THEN 0.8452250604528321 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (((rt0.c1)GLOB(rt0.c3))))) ORDER BY LIKELIHOOD((((rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2))), (rt0.c2 IN ())) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((('277152988') BETWEEN (CASE WHEN rt0.c4 THEN 0.8452250604528321 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (((rt0.c1)GLOB(rt0.c3)))))AND((~ (rt0.c3 COLLATE RTRIM))))) ORDER BY LIKELIHOOD((((rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2))), (rt0.c2 IN ())) DESC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (((rt0.c3)%(rt0.c3)) COLLATE RTRIM) ORDER BY LIKELIHOOD((((rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2))), (rt0.c2 IN ())) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((('277152988') BETWEEN (CASE WHEN rt0.c4 THEN 0.8452250604528321 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (((rt0.c1)GLOB(rt0.c3))))) ORDER BY LIKELIHOOD((((rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2))), (rt0.c2 IN ())) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c4 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c4 COLLATE BINARY)))AND(x''))) ORDER BY (((((rt0.c0, '', rt0.c0, rt0.c1, rt0.c4, rt0.c3))!=((rt0.c1, rt0.c1, rt0.c1, rt0.c4, rt0.c4, rt0.c1))))<(rt0.c0)) ASC  NULLS LAST, (~ (((rt0.c0)>>(rt0.c3))))  NULLS FIRST, (((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c4))) COLLATE BINARY;
SELECT MAX(rt0.c2) FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END AS BLOB));
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END AS BLOB)) LIMIT 0;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (ABS(DISTINCT rt0.c1 COLLATE NOCASE)) ORDER BY LIKELIHOOD(rt0.c0, rt0.c0) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (ABS(DISTINCT rt0.c1 COLLATE NOCASE)) ORDER BY LIKELIHOOD(rt0.c0, rt0.c0) COLLATE NOCASE ASC  NULLS LAST;
SELECT MAX(rt0.c2) FROM rt0 WHERE ((~ (CAST(rt0.c4 AS TEXT))));
SELECT MAX(rt0.c2) FROM rt0 WHERE ((((~ (CAST(rt0.c4 AS TEXT))))AND(((((rt0.c3)&(rt0.c2))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c2 IN (rt0.c2, 0x13a9e6f3))))))) INTERSECT SELECT MAX(rt0.c2) FROM rt0 WHERE (((NULL)<=(((((((rt0.c4)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c3)>(rt0.c4))) NOT BETWEEN (((rt0.c1)||(rt0.c4))) AND (((rt0.c1)AND(x'')))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3)<>(rt0.c4))) NOT BETWEEN (((rt0.c1)||(rt0.c4))) AND (((rt0.c1)AND(x'')))))AND(ABS(((rt0.c1)!=(rt0.c0)))))) ORDER BY rt0.c3  NULLS LAST, ((((rt0.c3) IS TRUE))+('zsGPq'))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS BLOB)) ORDER BY rt0.c3  NULLS LAST, ((((rt0.c3) IS TRUE))+('zsGPq'))  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c3)>(rt0.c4))) NOT BETWEEN (((rt0.c1)||(rt0.c4))) AND (((rt0.c1)AND(x'')))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3)<>(rt0.c4))) NOT BETWEEN (((rt0.c1)||(rt0.c4))) AND (((rt0.c1)AND(x'')))))AND(ABS(((rt0.c1)!=(rt0.c0)))))) ORDER BY rt0.c3  NULLS LAST, ((((rt0.c3) IS TRUE))+('zsGPq'))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS BLOB)) ORDER BY rt0.c3  NULLS LAST, ((((rt0.c3) IS TRUE))+('zsGPq'))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((NULL, rt0.c0, rt0.c4))>=(('dڿh%f', rt0.c0, rt0.c3)))) BETWEEN (rtreenode(rt0.c2, rt0.c0)) AND (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY 'f7' ASC  NULLS FIRST, CAST(((x'')||(rt0.c2)) AS NUMERIC)  NULLS LAST, ((CAST(rt0.c1 AS INTEGER)) NOT NULL) DESC;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((NULL, rt0.c0, rt0.c4))>=(('dڿh%f', rt0.c0, rt0.c3)))) BETWEEN (rtreenode(rt0.c2, rt0.c0)) AND (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY 'f7' ASC  NULLS FIRST, CAST(((x'')||(rt0.c2)) AS NUMERIC)  NULLS LAST, ((CAST(rt0.c1 AS INTEGER)) NOT NULL) DESC;
SELECT MAX(rt0.c1) FROM rt0 WHERE (((((rt0.c1)AND((((rt0.c0))<=((rt0.c3))))))AND((((rt0.c2, rt0.c4))<=(('-1547328615', rt0.c4)))))) ORDER BY (('d>') IS FALSE) COLLATE BINARY;
SELECT MAX(rt0.c1) FROM rt0 WHERE (((((((rt0.c1)AND((((rt0.c0))==((rt0.c3))))))AND((((rt0.c2, rt0.c4))=(('-1547328615', rt0.c4))))))AND(((((rt0.c0)-(rt0.c0))) BETWEEN ((rt0.c3 IN (rt0.c0, rt0.c1))) AND (((rt0.c1)LIKE(rt0.c1))))))) ORDER BY (('d>') IS FALSE) COLLATE BINARY INTERSECT SELECT MAX(rt0.c1) FROM rt0 WHERE ((((((rt0.c4)OR(rt0.c0)))AND(rt0.c3)) IN (((rt0.c3)==(rt0.c2))))) ORDER BY (('d>') IS FALSE) COLLATE BINARY;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1)<(rt0.c0)) WHEN (NOT (rt0.c2)) THEN 0.42432361073689695 END);
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1)<(rt0.c0)) WHEN (NOT (rt0.c2)) THEN 0.42432361073689695 END) LIMIT 2 INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c2) AND ('kT')) AS NUMERIC)) LIMIT 0x2;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN 0.17289945698500175 WHEN rt0.c2 THEN 1264049941 ELSE rt0.c2 END)&((((rt0.c0, rt0.c2))<((rt0.c1, rt0.c1)))))) ORDER BY rt0.c2, TYPEOF((((rt0.c3, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2))))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN 0.17289945698500175 WHEN rt0.c2 THEN 0x4b57df15 ELSE rt0.c2 END)&((((rt0.c0, rt0.c2))<((rt0.c1, rt0.c1)))))) ORDER BY rt0.c2, TYPEOF((((rt0.c3, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((- (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 END))) ORDER BY rt0.c2, TYPEOF((((rt0.c3, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2))))  NULLS LAST;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN 0.17289945698500175 WHEN rt0.c2 THEN 1264049941 ELSE rt0.c2 END)&((((rt0.c0, rt0.c2))<((rt0.c1, rt0.c1)))))) ORDER BY rt0.c2, TYPEOF((((rt0.c3, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2))))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN 0.17289945698500175 WHEN rt0.c2 THEN 0x4b57df15 ELSE rt0.c2 END)&((((rt0.c0, rt0.c2))<((rt0.c1, rt0.c1)))))) ORDER BY rt0.c2, TYPEOF((((rt0.c3, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((- (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 END))) ORDER BY rt0.c2, TYPEOF((((rt0.c3, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND ('')) COLLATE RTRIM) ORDER BY (+ (((rt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND ('')) COLLATE RTRIM)AND((- (((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4))))))) ORDER BY (~ (((rt0.c4) NOT BETWEEN ('Hh>Z+') AND (0.26370015903652366))))  NULLS FIRST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (json((~ (rt0.c2)))) ORDER BY (~ (((rt0.c4) NOT BETWEEN ('Hh>Z+') AND (0.26370015903652366))))  NULLS FIRST LIMIT 2;
SELECT ALL * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND ('')) COLLATE RTRIM) ORDER BY (+ (((rt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND ('')) COLLATE RTRIM)AND((- (((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4))))))) ORDER BY (~ (((rt0.c4) NOT BETWEEN ('Hh>Z+') AND (0.26370015903652366))))  NULLS FIRST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (json((~ (rt0.c2)))) ORDER BY (~ (((rt0.c4) NOT BETWEEN ('Hh>Z+') AND (0.26370015903652366))))  NULLS FIRST LIMIT 2;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (CASE ('9223372036854775807' IN ())  WHEN ((rt0.c4)>(x'5bed')) THEN (+ (rt0.c0)) END);
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (CASE ('9223372036854775807' IN ())  WHEN ((rt0.c4)>(x'5bed')) THEN (+ (rt0.c0)) END) ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END) NOTNULL)  NULLS FIRST, ((rt0.c1)GLOB(HEX(rt0.c1))) DESC  NULLS LAST, rt0.c0 DESC LIMIT 0X0;
SELECT MAX(rt0.c1) FROM rt0 WHERE ((((rt0.c3 IN (rt0.c4))) NOT BETWEEN (((rt0.c4) NOTNULL)) AND (((rt0.c3)<<(rt0.c0))))) ORDER BY rt0.c3;
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE ((((rt0.c3 IN (rt0.c4))) NOT BETWEEN (((rt0.c4) NOTNULL)) AND (((rt0.c3)<<(rt0.c0))))) ORDER BY LIKELY(CAST(rt0.c2 AS REAL)) ASC;
SELECT * FROM rt0 WHERE (TRIM(rt0.c1));
SELECT DISTINCT * FROM rt0 WHERE (TRIM(rt0.c1));
SELECT * FROM rt0 WHERE (TRIM(rt0.c1));
SELECT DISTINCT * FROM rt0 WHERE (TRIM(rt0.c1));
SELECT * FROM rt0 WHERE ((((NULL, ((rt0.c4)/(rt0.c2))))<((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, rt0.c1)))) ORDER BY (((rt0.c2 IN (rt0.c0))) BETWEEN ((((rt0.c2))<=((rt0.c1)))) AND (IFNULL(DISTINCT rt0.c2, rt0.c0))) ASC;
SELECT * FROM rt0 WHERE ((((((NULL, ((rt0.c4)/(rt0.c2))))<((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, rt0.c1))))AND((((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((ROUND(rt0.c0, rt0.c0), json_patch(rt0.c1, rt0.c4), ((rt0.c4)*(rt0.c3)), CASE -1212889418  WHEN rt0.c1 THEN rt0.c1 END, '1525876419')) AND ((TYPEOF(rt0.c1), UNLIKELY(DISTINCT rt0.c2), ((rt0.c3)>(rt0.c0)), (((rt0.c1))>((rt0.c2))), ((rt0.c4)LIKE(rt0.c4)))))))) ORDER BY ((((('TpK', rt0.c0, 0.3807665874591616)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c2))))||('-1579451077'))  NULLS LAST, COALESCE(DISTINCT (rt0.c2 IN (rt0.c2)), ((rt0.c2) NOTNULL)) LIMIT 1 INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND ('')))AND((rt0.c0 IN (rt0.c4, rt0.c1))))) ORDER BY ((((('TpK', rt0.c0, 0.3807665874591616)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c2))))||('-1579451077'))  NULLS LAST, COALESCE(DISTINCT (rt0.c2 IN (rt0.c2)), ((rt0.c2) NOTNULL)) LIMIT 1;
SELECT * FROM rt0 WHERE ((((NULL, ((rt0.c4)/(rt0.c2))))<((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, rt0.c1)))) ORDER BY (((rt0.c2 IN (rt0.c0))) BETWEEN ((((rt0.c2))<=((rt0.c1)))) AND (IFNULL(DISTINCT rt0.c2, rt0.c0))) ASC;
SELECT * FROM rt0 WHERE ((((((NULL, ((rt0.c4)/(rt0.c2))))<((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, rt0.c1))))AND((((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((ROUND(rt0.c0, rt0.c0), json_patch(rt0.c1, rt0.c4), ((rt0.c4)*(rt0.c3)), CASE -1212889418  WHEN rt0.c1 THEN rt0.c1 END, '1525876419')) AND ((TYPEOF(rt0.c1), UNLIKELY(DISTINCT rt0.c2), ((rt0.c3)>(rt0.c0)), (((rt0.c1))>((rt0.c2))), ((rt0.c4)LIKE(rt0.c4)))))))) ORDER BY ((((('TpK', rt0.c0, 0.3807665874591616)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c2))))||('-1579451077'))  NULLS LAST, COALESCE(DISTINCT (rt0.c2 IN (rt0.c2)), ((rt0.c2) NOTNULL)) LIMIT 1 INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND ('')))AND((rt0.c0 IN (rt0.c4, rt0.c1))))) ORDER BY ((((('TpK', rt0.c0, 0.3807665874591616)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c2))))||('-1579451077'))  NULLS LAST, COALESCE(DISTINCT (rt0.c2 IN (rt0.c2)), ((rt0.c2) NOTNULL)) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) ISNULL))AND(((rt0.c3)>(rt0.c3)))))OR(rt0.c4)));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) ISNULL))AND(((rt0.c3)>(rt0.c3)))))OR(rt0.c4))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) ISNULL))AND(((rt0.c3)>(rt0.c3)))))OR(rt0.c4)));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) ISNULL))AND(((rt0.c3)>(rt0.c3)))))OR(rt0.c4))) LIMIT 1;
SELECT MAX(rt0.c3) FROM rt0 WHERE (((((((((((rt0.c2)==(rt0.c0)))AND(((((((((((rt0.c4)AND(rt0.c0)))AND('+^')))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))))AND((~ (rt0.c4)))))AND(((rt0.c3)IS(rt0.c4)))))OR(NULL)));
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((((((((((rt0.c2)==(rt0.c0)))AND(((((((((((rt0.c4)AND(rt0.c0)))AND('+^')))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))))AND((~ (rt0.c4)))))AND(((rt0.c3)IS(rt0.c4)))))OR(NULL))) ORDER BY TYPEOF(0.5778558770146623)  NULLS FIRST LIMIT 0x3;
SELECT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (((rt0.c4) IS TRUE)) AND (rt0.c4 COLLATE NOCASE)));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (((rt0.c4) IS TRUE)) AND (rt0.c4 COLLATE NOCASE))) LIMIT 0x4 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)>=(NULL))) BETWEEN (CASE rt0.c1  WHEN 2.28849133E8 THEN '-959711698' ELSE rt0.c1 END) AND (x'2a'))) LIMIT 4;
SELECT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (((rt0.c4) IS TRUE)) AND (rt0.c4 COLLATE NOCASE)));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (((rt0.c4) IS TRUE)) AND (rt0.c4 COLLATE NOCASE))) LIMIT 0x4 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)>=(NULL))) BETWEEN (CASE rt0.c1  WHEN 2.28849133E8 THEN '-959711698' ELSE rt0.c1 END) AND (x'2a'))) LIMIT 4;
SELECT * FROM rt0 WHERE (CAST((~ (rt0.c1)) AS INTEGER));
SELECT * FROM rt0 WHERE (CAST((~ (rt0.c1)) AS INTEGER)) ORDER BY ((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)|(CAST('50479720' AS INTEGER))) DESC  NULLS FIRST, ((((rt0.c1)-(rt0.c3))) IS TRUE), (((CAST(0.96193991270756 AS TEXT), x'', (+ (rt0.c3)), (~ (rt0.c1)), ((rt0.c2) NOTNULL)))==((rt0.c3 COLLATE RTRIM, ((rt0.c0)OR(rt0.c1)), CAST(rt0.c4 AS NUMERIC), (((rt0.c1))<((rt0.c2))), rt0.c4))) DESC INTERSECT SELECT * FROM rt0 WHERE (TRIM((- ('42601212')), (((rt0.c4, rt0.c2))>=((x'f311', NULL))))) ORDER BY ((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)|(CAST('50479720' AS INTEGER))) DESC  NULLS FIRST, ((((rt0.c1)-(rt0.c3))) IS TRUE), (((CAST(0.96193991270756 AS TEXT), x'', (+ (rt0.c3)), (~ (rt0.c1)), ((rt0.c2) NOTNULL)))=((rt0.c3 COLLATE RTRIM, ((rt0.c0)OR(rt0.c1)), CAST(rt0.c4 AS NUMERIC), (((rt0.c1))<((rt0.c2))), rt0.c4))) DESC;
SELECT * FROM rt0 WHERE (CAST((~ (rt0.c1)) AS INTEGER));
SELECT * FROM rt0 WHERE (CAST((~ (rt0.c1)) AS INTEGER)) ORDER BY ((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)|(CAST('50479720' AS INTEGER))) DESC  NULLS FIRST, ((((rt0.c1)-(rt0.c3))) IS TRUE), (((CAST(0.96193991270756 AS TEXT), x'', (+ (rt0.c3)), (~ (rt0.c1)), ((rt0.c2) NOTNULL)))==((rt0.c3 COLLATE RTRIM, ((rt0.c0)OR(rt0.c1)), CAST(rt0.c4 AS NUMERIC), (((rt0.c1))<((rt0.c2))), rt0.c4))) DESC INTERSECT SELECT * FROM rt0 WHERE (TRIM((- ('42601212')), (((rt0.c4, rt0.c2))>=((x'f311', NULL))))) ORDER BY ((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)|(CAST('50479720' AS INTEGER))) DESC  NULLS FIRST, ((((rt0.c1)-(rt0.c3))) IS TRUE), (((CAST(0.96193991270756 AS TEXT), x'', (+ (rt0.c3)), (~ (rt0.c1)), ((rt0.c2) NOTNULL)))=((rt0.c3 COLLATE RTRIM, ((rt0.c0)OR(rt0.c1)), CAST(rt0.c4 AS NUMERIC), (((rt0.c1))<((rt0.c2))), rt0.c4))) DESC;
SELECT MAX(rt0.c4) FROM rt0 WHERE (((((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))OR(((rt0.c0)GLOB(rt0.c1)))))OR(((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))))AND(((rt0.c0)GLOB(rt0.c2)))));
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((((((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))OR(((rt0.c0)GLOB(rt0.c1)))))OR(((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))))AND(((rt0.c0)GLOB(rt0.c2)))))AND(NULL)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY);
SELECT MAX(rt0.c4) FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN LIKELIHOOD(DISTINCT rt0.c3, rt0.c1) THEN ((((((((((((((0.18842802788432522)OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c3)))OR('(_tdELIk')))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)) ELSE rt0.c1 COLLATE BINARY END;
SELECT MAX(rt0.c4) FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN CHANGES() THEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)) WHEN (((rt0.c1, rt0.c1, rt0.c4)) BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c4, rt0.c3, rt0.c0))) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)) WHEN rt0.c3 THEN ((rt0.c4) NOTNULL) END ASC, ((0xffffffffa7f048c8)-(DATE(rt0.c2, rt0.c4, rt0.c1, rt0.c4))) DESC  NULLS LAST LIMIT 2;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY CAST(((((((0.19939149863575145)AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)) AS REAL) ASC, rt0.c2 DESC;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY CAST(((((rt0.c1)AND(rt0.c4)))OR(rt0.c4)) AS INTEGER) LIMIT 3;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c4))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c4))) ISNULL)) ORDER BY (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 END IN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)), rt0.c3 COLLATE NOCASE, ((x'50')|(rt0.c2)))) ASC  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c4))) BETWEEN (((rt0.c0)<>(rt0.c1))) AND (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)), rt0.c1 DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY x'11' ASC  NULLS LAST, ((((((((((rt0.c3)AND((((rt0.c4))<>((rt0.c3))))))OR((- (rt0.c4)))))AND((~ (rt0.c1)))))OR(1586928368)))OR((((rt0.c0, x'', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c2, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c2, rt0.c2)))))  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c0 END)>(rt0.c0 COLLATE NOCASE))) ORDER BY x'11' ASC  NULLS LAST, ((((((((((rt0.c3)AND((((rt0.c4))<>((rt0.c3))))))OR((- (rt0.c4)))))AND((~ (rt0.c1)))))OR(0x5e969af0)))OR((((rt0.c0, x'', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c2, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c2, rt0.c2)))))  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c4))) BETWEEN (((rt0.c0)<>(rt0.c1))) AND (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)), rt0.c1 DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY x'11' ASC  NULLS LAST, ((((((((((rt0.c3)AND((((rt0.c4))<>((rt0.c3))))))OR((- (rt0.c4)))))AND((~ (rt0.c1)))))OR(1586928368)))OR((((rt0.c0, x'', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c2, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c2, rt0.c2)))))  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c0 END)>(rt0.c0 COLLATE NOCASE))) ORDER BY x'11' ASC  NULLS LAST, ((((((((((rt0.c3)AND((((rt0.c4))<>((rt0.c3))))))OR((- (rt0.c4)))))AND((~ (rt0.c1)))))OR(0x5e969af0)))OR((((rt0.c0, x'', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c2, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c2, rt0.c2)))))  NULLS LAST LIMIT 2;
SELECT MAX(rt0.c0) FROM rt0 WHERE (((((((((rt0.c4 COLLATE NOCASE)OR(((rt0.c3)GLOB(rt0.c1)))))OR(CAST('L[1FMH+' AS REAL))))AND(rtreenode(rt0.c3, rt0.c3))))OR(((rt0.c2)LIKE(rt0.c0)))));
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (((((((((((rt0.c4 COLLATE NOCASE)OR(((rt0.c3)GLOB(rt0.c1)))))OR(CAST('L[1FMH+' AS REAL))))AND(rtreenode(rt0.c3, rt0.c3))))OR(((rt0.c2)LIKE(rt0.c0)))))AND((((rt0.c2) NOT NULL) IN (NULL)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c3, rt0.c2))) BETWEEN (rt0.c4) AND (((rt0.c0)IS NOT(rt0.c0)))));
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c3))) BETWEEN (rt0.c4) AND (((rt0.c0)IS NOT(rt0.c0))))) LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c3, rt0.c2))) BETWEEN (rt0.c4) AND (((rt0.c0)IS NOT(rt0.c0)))));
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c3))) BETWEEN (rt0.c4) AND (((rt0.c0)IS NOT(rt0.c0))))) LIMIT 0x0;
SELECT MIN(rt0.c4) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN '-581623797' WHEN rt0.c1 THEN rt0.c3 WHEN '-1034882599' THEN rt0.c4 ELSE rt0.c1 END)AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN '-581623797' WHEN rt0.c1 THEN rt0.c3 WHEN '-1034882599' THEN rt0.c4 ELSE rt0.c1 END)AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) INTERSECT SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE ((((('-1783513817') BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (rt0.c1) AND ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c4))))));
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT NULL)) ORDER BY (((((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))OR(rt0.c0 COLLATE RTRIM)))OR((((rt0.c3, rt0.c4)) NOT BETWEEN ((0X3bddb3d3, rt0.c2)) AND ((rt0.c2, -381090566)))));
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (((((CAST(rt0.c0 AS INTEGER)) NOT NULL))AND(LIKE(rt0.c2, (((rt0.c0, rt0.c3, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c3, rt0.c1, rt0.c2))), 'N')))) ORDER BY (((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c3)<>(rt0.c4)), (NOT (rt0.c2))))>((((rt0.c2)||(rt0.c2)), '', 'e''|')))  NULLS LAST, (CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END IN ())  NULLS FIRST;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((('350988680') BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) ORDER BY (((((((((((rt0.c4, rt0.c3))<((rt0.c0, 'SZ汷a'))))AND((- (rt0.c0)))))OR(((((((rt0.c4)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(((((rt0.c4)AND(rt0.c0)))OR(rt0.c2)))) ASC, ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) NOT BETWEEN ((((rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2)) AND ((rt0.c4, rt0.c0)))) AND (((rt0.c2)|(rt0.c4))))  NULLS LAST;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((((('350988680') BETWEEN (rt0.c1) AND (rt0.c1)) IN ()))AND(TRIM(0.34851388380304427)))) ORDER BY ((rt0.c3)IS NOT((rt0.c4 IN (rt0.c1)))) ASC, (- ((rt0.c2 IN ())))  NULLS FIRST LIMIT 0;
SELECT MAX(rt0.c0) FROM rt0 WHERE (((((rt0.c3) ISNULL))<=(((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))));
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (((((rt0.c3) ISNULL))==(((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c2))))) INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE ((rt0.c2 COLLATE RTRIM IN ('kKV,')));
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE ('peN r!ܞu ') ORDER BY ('m' IN ()) ASC  NULLS LAST, rt0.c4 DESC;
SELECT MIN(rt0.c3) FROM rt0 WHERE ('peN r!ܞu ') ORDER BY ('m' IN ()) ASC  NULLS LAST, rt0.c4 DESC;
SELECT * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c3))) BETWEEN ((- (0Xffffffff9bf8cd36))) AND ((('-2130079094') IS FALSE))));
SELECT * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c3))) BETWEEN ((- (0xffffffff9bf8cd36))) AND ((('-2130079094') IS FALSE)))) LIMIT 2;
SELECT * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c3))) BETWEEN ((- (0Xffffffff9bf8cd36))) AND ((('-2130079094') IS FALSE))));
SELECT * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c3))) BETWEEN ((- (0xffffffff9bf8cd36))) AND ((('-2130079094') IS FALSE)))) LIMIT 2;
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ((+ (rt0.c4)))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ((+ (rt0.c4))))) ORDER BY ((((((((((((((rt0.c3)OR(rt0.c0)))AND(NULL)))OR(rt0.c3)))OR(rt0.c2)))AND(((rt0.c1)<=(rt0.c4)))))OR((rt0.c1 IN ()))))OR(CAST(rt0.c1 AS TEXT))) ASC LIMIT 0x1;
SELECT * FROM rt0 WHERE (rtreenode(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, NULLIF(rt0.c1, rt0.c3))) ORDER BY CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN '2XᡣF|' WHEN (((rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c1, 0.8407734604571081, rt0.c1, rt0.c4, rt0.c1))) THEN rt0.c4 COLLATE RTRIM WHEN (('8')<<(rt0.c0)) THEN ((((((((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)) WHEN CASE WHEN rt0.c4 THEN rt0.c2 END THEN CAST(rt0.c4 AS BLOB) END;
SELECT DISTINCT * FROM rt0 WHERE (rtreenode(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, NULLIF(rt0.c1, rt0.c3))) ORDER BY LTRIM(rt0.c3 COLLATE RTRIM, (rt0.c2 IN (rt0.c2)))  NULLS LAST, CASE WHEN IFNULL('h', rt0.c3) THEN (~ (rt0.c3)) WHEN 0X76774bd0 THEN ((rt0.c2)<=('-228762077')) END;
SELECT * FROM rt0 WHERE (rtreenode(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, NULLIF(rt0.c1, rt0.c3))) ORDER BY CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN '2XᡣF|' WHEN (((rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c1, 0.8407734604571081, rt0.c1, rt0.c4, rt0.c1))) THEN rt0.c4 COLLATE RTRIM WHEN (('8')<<(rt0.c0)) THEN ((((((((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)) WHEN CASE WHEN rt0.c4 THEN rt0.c2 END THEN CAST(rt0.c4 AS BLOB) END;
SELECT DISTINCT * FROM rt0 WHERE (rtreenode(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, NULLIF(rt0.c1, rt0.c3))) ORDER BY LTRIM(rt0.c3 COLLATE RTRIM, (rt0.c2 IN (rt0.c2)))  NULLS LAST, CASE WHEN IFNULL('h', rt0.c3) THEN (~ (rt0.c3)) WHEN 0X76774bd0 THEN ((rt0.c2)<=('-228762077')) END;
SELECT MIN(rt0.c2) FROM rt0 WHERE (IFNULL((NULL IN (rt0.c1)), ((rt0.c1)>(rt0.c1)))) ORDER BY LIKELY(((rt0.c3) IS TRUE)), json_type(0.5180170327850083), LIKELIHOOD('*la뤎u<4o', rt0.c2) COLLATE NOCASE  NULLS LAST;
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (IFNULL((NULL IN (rt0.c1)), ((rt0.c1)>(rt0.c1)))) ORDER BY LIKELY(((rt0.c3) IS TRUE)), json_type(0.5180170327850083), LIKELIHOOD('*la뤎u<4o', rt0.c2) COLLATE NOCASE  NULLS LAST INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE ((((rt0.c1 IN (0.45077188205482366)))||(x''))) ORDER BY LIKELY(((rt0.c3) IS TRUE)), json_type(0.5180170327850083), LIKELIHOOD('*la뤎u<4o', rt0.c2) COLLATE NOCASE  NULLS LAST;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (CASE ((rt0.c1)*(0.5759431098398984))  WHEN NULLIF(DISTINCT rt0.c1, rt0.c2) THEN NULL ELSE ((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c4)))AND('-1887065383')))AND(rt0.c1)))AND(rt0.c1)) END);
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (CASE ((rt0.c1)*(0.5759431098398984))  WHEN NULLIF(DISTINCT rt0.c1, rt0.c2) THEN NULL ELSE ((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c4)))AND('-1887065383')))AND(rt0.c1)))AND(rt0.c1)) END) LIMIT 0x2 INTERSECT SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE ((((- (rt0.c0)))|((0.13540592491584513 IN ())))) LIMIT 2;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (((rt0.c3 COLLATE NOCASE, CAST(rt0.c1 AS INTEGER), ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)), ((NULL) NOT BETWEEN ('-1771240701') AND (rt0.c3))))!=(((((rt0.c0))<((rt0.c2))), ((rt0.c1)OR(NULL)), '[BGrxjezb', (((rt0.c2, rt0.c0)) BETWEEN ((rt0.c3, '1906348312')) AND ((rt0.c4, rt0.c2))))))  NULLS LAST, (- ((((rt0.c2, rt0.c0))>=((rt0.c3, rt0.c4))))) DESC  NULLS LAST, ((rt0.c2) NOTNULL) COLLATE BINARY ASC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (((rt0.c3 COLLATE NOCASE, CAST(rt0.c1 AS INTEGER), ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)), ((NULL) NOT BETWEEN ('-1771240701') AND (rt0.c3))))!=(((((rt0.c0))<((rt0.c2))), ((rt0.c1)OR(NULL)), '[BGrxjezb', (((rt0.c2, rt0.c0)) BETWEEN ((rt0.c3, '1906348312')) AND ((rt0.c4, rt0.c2))))))  NULLS LAST, (- ((((rt0.c2, rt0.c0))>=((rt0.c3, rt0.c4))))) DESC  NULLS LAST, ((rt0.c2) NOTNULL) COLLATE BINARY ASC INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3)+(rt0.c0)), rt0.c3))!=((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))) ORDER BY (((rt0.c3 COLLATE NOCASE, CAST(rt0.c1 AS INTEGER), ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)), ((NULL) NOT BETWEEN ('-1771240701') AND (rt0.c3))))!=(((((rt0.c0))<((rt0.c2))), ((rt0.c1)OR(NULL)), '[BGrxjezb', (((rt0.c2, rt0.c0)) BETWEEN ((rt0.c3, '1906348312')) AND ((rt0.c4, rt0.c2))))))  NULLS LAST, (- ((((rt0.c2, rt0.c0))>=((rt0.c3, rt0.c4))))) DESC  NULLS LAST, ((rt0.c2) NOTNULL) COLLATE BINARY ASC;
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c4 COLLATE BINARY THEN NULL WHEN ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c1)) THEN ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c0)) WHEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)) THEN (0.8666738807512744 IN (rt0.c4)) WHEN CASE rt0.c3  WHEN rt0.c3 THEN -1878383578 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END THEN rt0.c1 END);
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c4 COLLATE BINARY THEN NULL WHEN ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c1)) THEN ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c0)) WHEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)) THEN (0.8666738807512744 IN (rt0.c4)) WHEN CASE rt0.c3  WHEN rt0.c3 THEN -1878383578 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END THEN rt0.c1 END) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c4 COLLATE BINARY THEN NULL WHEN ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c1)) THEN ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c0)) WHEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)) THEN (0.8666738807512744 IN (rt0.c4)) WHEN CASE rt0.c3  WHEN rt0.c3 THEN -1878383578 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END THEN rt0.c1 END);
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c4 COLLATE BINARY THEN NULL WHEN ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c1)) THEN ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c0)) WHEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)) THEN (0.8666738807512744 IN (rt0.c4)) WHEN CASE rt0.c3  WHEN rt0.c3 THEN -1878383578 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END THEN rt0.c1 END) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1)))&(((rt0.c4)>=(rt0.c0))))) ORDER BY ('1888153372' IN (rt0.c2)) COLLATE NOCASE  NULLS FIRST, CASE HEX(DISTINCT rt0.c2)  WHEN ((rt0.c3)GLOB(rt0.c3)) THEN (((rt0.c4, x'bdf6', rt0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c2, rt0.c4, rt0.c3, rt0.c3))) WHEN (((rt0.c3, 0.2963598091100029, rt0.c4, rt0.c3))<((rt0.c3, rt0.c2, rt0.c0, rt0.c0))) THEN IFNULL(DISTINCT rt0.c1, rt0.c0) WHEN ((rt0.c4)<(rt0.c2)) THEN (rt0.c0 IN ()) ELSE UPPER(rt0.c3) END ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1)))&(((rt0.c4)>(rt0.c0))))) ORDER BY (((rt0.c3 IN (rt0.c2))) NOT NULL)  NULLS LAST, (((rt0.c2 IN ())) ISNULL) LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE (((((((SQLITE_COMPILEOPTION_USED(rt0.c4))OR(CAST(rt0.c0 AS INTEGER))))AND(((rt0.c1)&(rt0.c1)))))OR(((rt0.c2)&(rt0.c0))))) ORDER BY (((rt0.c3 IN (rt0.c2))) NOT NULL)  NULLS LAST, (((rt0.c2 IN ())) ISNULL) LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1)))&(((rt0.c4)>=(rt0.c0))))) ORDER BY ('1888153372' IN (rt0.c2)) COLLATE NOCASE  NULLS FIRST, CASE HEX(DISTINCT rt0.c2)  WHEN ((rt0.c3)GLOB(rt0.c3)) THEN (((rt0.c4, x'bdf6', rt0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c2, rt0.c4, rt0.c3, rt0.c3))) WHEN (((rt0.c3, 0.2963598091100029, rt0.c4, rt0.c3))<((rt0.c3, rt0.c2, rt0.c0, rt0.c0))) THEN IFNULL(DISTINCT rt0.c1, rt0.c0) WHEN ((rt0.c4)<(rt0.c2)) THEN (rt0.c0 IN ()) ELSE UPPER(rt0.c3) END ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1)))&(((rt0.c4)>(rt0.c0))))) ORDER BY (((rt0.c3 IN (rt0.c2))) NOT NULL)  NULLS LAST, (((rt0.c2 IN ())) ISNULL) LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE (((((((SQLITE_COMPILEOPTION_USED(rt0.c4))OR(CAST(rt0.c0 AS INTEGER))))AND(((rt0.c1)&(rt0.c1)))))OR(((rt0.c2)&(rt0.c0))))) ORDER BY (((rt0.c3 IN (rt0.c2))) NOT NULL)  NULLS LAST, (((rt0.c2 IN ())) ISNULL) LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)IS NOT(rt0.c2)))>=(((-1.7976931348623157E308)==(rt0.c4)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)IS NOT(rt0.c2)))>=(((-1.7976931348623157E308)==(rt0.c4))))) ORDER BY (('1051530187') IS FALSE) DESC  NULLS FIRST, (~ (LIKELY(DISTINCT rt0.c2))) INTERSECT SELECT ALL * FROM rt0 WHERE (json_array(UNLIKELY(rt0.c0), rt0.c2, '')) ORDER BY (('1051530187') IS FALSE) DESC  NULLS FIRST, (~ (LIKELY(DISTINCT rt0.c2)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)IS NOT(rt0.c2)))>=(((-1.7976931348623157E308)==(rt0.c4)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)IS NOT(rt0.c2)))>=(((-1.7976931348623157E308)==(rt0.c4))))) ORDER BY (('1051530187') IS FALSE) DESC  NULLS FIRST, (~ (LIKELY(DISTINCT rt0.c2))) INTERSECT SELECT ALL * FROM rt0 WHERE (json_array(UNLIKELY(rt0.c0), rt0.c2, '')) ORDER BY (('1051530187') IS FALSE) DESC  NULLS FIRST, (~ (LIKELY(DISTINCT rt0.c2)));
SELECT * FROM rt0 WHERE (UNLIKELY((rt0.c2 IN ()))) ORDER BY (((rt0.c1))<((rt0.c3)));
SELECT DISTINCT * FROM rt0 WHERE (UNLIKELY((rt0.c2 IN ()))) ORDER BY (((rt0.c1))<((rt0.c3)));
SELECT * FROM rt0 WHERE (UNLIKELY((rt0.c2 IN ()))) ORDER BY (((rt0.c1))<((rt0.c3)));
SELECT DISTINCT * FROM rt0 WHERE (UNLIKELY((rt0.c2 IN ()))) ORDER BY (((rt0.c1))<((rt0.c3)));
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((((rt0.c4)LIKE(rt0.c4))) ISNULL));
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (((((((rt0.c4)LIKE(rt0.c4))) ISNULL))AND(((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) NOTNULL)))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) ASC  NULLS FIRST, (((((((~ (rt0.c2)))AND(CASE WHEN 'm' THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)))OR(ABS(rt0.c1))))OR('忢0{^n'))  NULLS LAST, CASE WHEN TOTAL_CHANGES() THEN ((rt0.c3) ISNULL) WHEN TYPEOF(DISTINCT rt0.c1) THEN CAST(rt0.c4 AS TEXT) ELSE CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END END ASC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (CASE (((0.8842438051903487, rt0.c0))!=((rt0.c3, rt0.c2)))  WHEN '-1726433871' THEN (((rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c4)) AND ((rt0.c0, x''))) WHEN rt0.c4 THEN (~ (rt0.c1)) END) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) ASC  NULLS FIRST, (((((((~ (rt0.c2)))AND(CASE WHEN 'm' THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)))OR(ABS(rt0.c1))))OR('忢0{^n'))  NULLS LAST, CASE WHEN TOTAL_CHANGES() THEN ((rt0.c3) ISNULL) WHEN TYPEOF(DISTINCT rt0.c1) THEN CAST(rt0.c4 AS TEXT) ELSE CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END END ASC  NULLS FIRST;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((((+ (rt0.c4))) NOT BETWEEN (((x'796c9735') NOT BETWEEN (rt0.c3) AND (0.7753259157443904))) AND (x''))) ORDER BY (NOT (rt0.c4 COLLATE NOCASE))  NULLS LAST, rt0.c3 ASC;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((((((+ (rt0.c4))) NOT BETWEEN (((x'796c9735') NOT BETWEEN (rt0.c3) AND (0.7753259157443904))) AND (x'')))AND(((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 END)|(((rt0.c1)<(rt0.c1))))))) ORDER BY (NOT (rt0.c4 COLLATE NOCASE))  NULLS LAST, rt0.c3 ASC LIMIT 0x1 INTERSECT SELECT MIN(rt0.c1) FROM rt0 WHERE (CAST((rt0.c1 IN ('2010155407')) AS TEXT)) ORDER BY (NOT (rt0.c4 COLLATE NOCASE))  NULLS LAST, rt0.c3 ASC LIMIT 0x1;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((NULL)%(rt0.c0)) THEN rt0.c3 ELSE (rt0.c2 IN (rt0.c3)) END);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN ((NULL)%(rt0.c0)) THEN rt0.c3 ELSE (rt0.c2 IN (rt0.c3)) END)AND(((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 WHEN 1.743999883E9 THEN rt0.c4 ELSE rt0.c3 END)IS(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4))))))) ORDER BY ((rt0.c2 COLLATE RTRIM) ISNULL)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(UNLIKELY(rt0.c0) AS BLOB));
SELECT DISTINCT * FROM rt0 WHERE (((CAST(UNLIKELY(rt0.c0) AS BLOB))AND(rt0.c4))) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ((rt0.c3 IN ()), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((UNICODE(rt0.c2)) ISNULL)) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ((rt0.c3 IN ()), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (CAST(UNLIKELY(rt0.c0) AS BLOB));
SELECT DISTINCT * FROM rt0 WHERE (((CAST(UNLIKELY(rt0.c0) AS BLOB))AND(rt0.c4))) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ((rt0.c3 IN ()), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((UNICODE(rt0.c2)) ISNULL)) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ((rt0.c3 IN ()), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) DESC  NULLS FIRST LIMIT 1;
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)!=((NOT (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)<>((NOT (rt0.c1))))) INTERSECT SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c1))<((0x10272fad))) AS INTEGER));
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)!=((NOT (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)<>((NOT (rt0.c1))))) INTERSECT SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c1))<((0x10272fad))) AS INTEGER));
SELECT ALL * FROM rt0 WHERE ((+ (((((((((rt0.c4)AND(rt0.c0)))OR(NULL)))OR(rt0.c2)))OR(rt0.c1))))) ORDER BY CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END AS REAL) ASC, ((((((((rt0.c3)/(rt0.c4)))AND(json_insert(-5.05397036E8, rt0.c3, rt0.c3))))AND(((rt0.c2)%(rt0.c1)))))OR(((rt0.c3)||('456111936')))) DESC;
SELECT ALL * FROM rt0 WHERE ((+ (((((((((rt0.c4)AND(rt0.c0)))OR(NULL)))OR(rt0.c2)))OR(rt0.c1))))) ORDER BY CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END AS REAL) ASC, ((((((((rt0.c3)/(rt0.c4)))AND(json_insert(-5.05397036E8, rt0.c3, rt0.c3))))AND(((rt0.c2)%(rt0.c1)))))OR(((rt0.c3)||('456111936')))) DESC LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (((rt0.c0)*(rt0.c0)) COLLATE RTRIM) ORDER BY CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END AS REAL) ASC, ((((((((rt0.c3)/(rt0.c4)))AND(json_insert(-5.05397036E8, rt0.c3, rt0.c3))))AND(((rt0.c2)%(rt0.c1)))))OR(((rt0.c3)||('456111936')))) DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((+ (((((((((rt0.c4)AND(rt0.c0)))OR(NULL)))OR(rt0.c2)))OR(rt0.c1))))) ORDER BY CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END AS REAL) ASC, ((((((((rt0.c3)/(rt0.c4)))AND(json_insert(-5.05397036E8, rt0.c3, rt0.c3))))AND(((rt0.c2)%(rt0.c1)))))OR(((rt0.c3)||('456111936')))) DESC;
SELECT * FROM rt0 WHERE (RTRIM((((x'576a', rt0.c3))=((rt0.c1, rt0.c1)))));
SELECT * FROM rt0 WHERE (((RTRIM((((x'576a', rt0.c3))==((rt0.c1, rt0.c1)))))AND((NOT (rt0.c3 COLLATE NOCASE))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0) BETWEEN (-1.237334296E9) AND (rt0.c2))  WHEN ((rt0.c3)IS NOT(rt0.c3)) THEN (((rt0.c1))<((rt0.c2))) WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c4)+(rt0.c2)) END) LIMIT 1;
SELECT * FROM rt0 WHERE (RTRIM((((x'576a', rt0.c3))=((rt0.c1, rt0.c1)))));
SELECT * FROM rt0 WHERE (((RTRIM((((x'576a', rt0.c3))==((rt0.c1, rt0.c1)))))AND((NOT (rt0.c3 COLLATE NOCASE))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0) BETWEEN (-1.237334296E9) AND (rt0.c2))  WHEN ((rt0.c3)IS NOT(rt0.c3)) THEN (((rt0.c1))<((rt0.c2))) WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c4)+(rt0.c2)) END) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT DISTINCT * FROM rt0 WHERE (((SQLITE_SOURCE_ID())AND(CAST(NULL AS NUMERIC) COLLATE NOCASE))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT DISTINCT * FROM rt0 WHERE (((SQLITE_SOURCE_ID())AND(CAST(NULL AS NUMERIC) COLLATE NOCASE))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (LIKELY(DISTINCT (rt0.c0 IN (rt0.c2)))) ORDER BY rt0.c4  NULLS FIRST, 1525876419  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((LIKELY(DISTINCT (rt0.c0 IN (rt0.c2))))AND((x'' IN (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END))))) ORDER BY rt0.c4  NULLS FIRST, 0x5af306c3  NULLS LAST INTERSECT SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS REAL), CASE WHEN rt0.c3 THEN rt0.c1 WHEN -1.834650494E9 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END, CAST(0.17597951881002727 AS NUMERIC), ((rt0.c2)<=('m7uug7k팫')), (((NULL)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))) AND ((((rt0.c1)-(x'0f787161')), x'', ((rt0.c3)IS NOT(rt0.c2)), (((rt0.c3))<((NULL))), (- (rt0.c0)))))) ORDER BY rt0.c4  NULLS FIRST, 0X5af306c3  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (LIKELY(DISTINCT (rt0.c0 IN (rt0.c2)))) ORDER BY rt0.c4  NULLS FIRST, 1525876419  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (json_quote(rt0.c0 COLLATE BINARY)) ORDER BY (((((rt0.c1))<=((rt0.c3)))) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE NOCASE)) DESC;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((json_quote(rt0.c0 COLLATE BINARY))AND((+ (CAST(rt0.c1 AS TEXT)))))) ORDER BY ((rt0.c0 COLLATE NOCASE)GLOB((rt0.c0 IN ())));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)<(rt0.c2))) NOT NULL)) ORDER BY ((rt0.c3) IS FALSE), ((((rt0.c1)||(rt0.c2)))<<(((((rt0.c3)AND(rt0.c2)))AND(rt0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)<(rt0.c2))) NOT NULL))AND((((~ (rt0.c2)))<<(0.18058567832909878))))) ORDER BY ((rt0.c3) IS FALSE), ((((rt0.c1)||(rt0.c2)))<<(((((rt0.c3)AND(rt0.c2)))AND(rt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)<(rt0.c2))) NOT NULL)) ORDER BY ((rt0.c3) IS FALSE), ((((rt0.c1)||(rt0.c2)))<<(((((rt0.c3)AND(rt0.c2)))AND(rt0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)<(rt0.c2))) NOT NULL))AND((((~ (rt0.c2)))<<(0.18058567832909878))))) ORDER BY ((rt0.c3) IS FALSE), ((((rt0.c1)||(rt0.c2)))<<(((((rt0.c3)AND(rt0.c2)))AND(rt0.c0))))  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c2)OR(rt0.c3)))&((+ (rt0.c0)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))&((+ (rt0.c0)))))AND((TYPEOF(rt0.c1) IN ())))) LIMIT 3;
SELECT * FROM rt0 WHERE (((((rt0.c2)OR(rt0.c3)))&((+ (rt0.c0)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))&((+ (rt0.c0)))))AND((TYPEOF(rt0.c1) IN ())))) LIMIT 3;
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY ((0.5645799564056703) NOT BETWEEN (((rt0.c2)>=(rt0.c2))) AND (((rt0.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) ORDER BY ((0.5645799564056703) NOT BETWEEN (((rt0.c2)>=(rt0.c2))) AND (((rt0.c1) NOT NULL))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c4)) AS REAL)) ORDER BY ((0.5645799564056703) NOT BETWEEN (((rt0.c2)>=(rt0.c2))) AND (((rt0.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY ((0.5645799564056703) NOT BETWEEN (((rt0.c2)>=(rt0.c2))) AND (((rt0.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) ORDER BY ((0.5645799564056703) NOT BETWEEN (((rt0.c2)>=(rt0.c2))) AND (((rt0.c1) NOT NULL))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c4)) AS REAL)) ORDER BY ((0.5645799564056703) NOT BETWEEN (((rt0.c2)>=(rt0.c2))) AND (((rt0.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((ABS(rt0.c4)) BETWEEN (CAST(rt0.c4 AS BLOB)) AND (rt0.c0)));
SELECT DISTINCT * FROM rt0 WHERE (((((ABS(rt0.c4)) BETWEEN (CAST(rt0.c4 AS BLOB)) AND (rt0.c0)))AND(((((((((((((((LOWER(rt0.c1))AND((rt0.c3 IN (rt0.c4)))))OR(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END)))AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))))OR(CAST(rt0.c1 AS REAL))))AND(HEX(DISTINCT rt0.c3))))AND((NOT (rt0.c4)))))OR(((rt0.c1)>(']}B31I'))))))) ORDER BY (((((+ (rt0.c4)))OR(((rt0.c0)OR(rt0.c2)))))OR((NOT (rt0.c4)))) DESC, ((((rt0.c3) NOTNULL)) NOT NULL) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN HEX(rt0.c0) THEN '៨j>e' WHEN ((rt0.c2)>>(rt0.c3)) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END) ORDER BY (((((+ (rt0.c4)))OR(((rt0.c0)OR(rt0.c2)))))OR((NOT (rt0.c4)))) DESC, ((((rt0.c3) NOTNULL)) NOT NULL);
SELECT ALL * FROM rt0 WHERE (((ABS(rt0.c4)) BETWEEN (CAST(rt0.c4 AS BLOB)) AND (rt0.c0)));
SELECT DISTINCT * FROM rt0 WHERE (((((ABS(rt0.c4)) BETWEEN (CAST(rt0.c4 AS BLOB)) AND (rt0.c0)))AND(((((((((((((((LOWER(rt0.c1))AND((rt0.c3 IN (rt0.c4)))))OR(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END)))AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))))OR(CAST(rt0.c1 AS REAL))))AND(HEX(DISTINCT rt0.c3))))AND((NOT (rt0.c4)))))OR(((rt0.c1)>(']}B31I'))))))) ORDER BY (((((+ (rt0.c4)))OR(((rt0.c0)OR(rt0.c2)))))OR((NOT (rt0.c4)))) DESC, ((((rt0.c3) NOTNULL)) NOT NULL) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN HEX(rt0.c0) THEN '៨j>e' WHEN ((rt0.c2)>>(rt0.c3)) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END) ORDER BY (((((+ (rt0.c4)))OR(((rt0.c0)OR(rt0.c2)))))OR((NOT (rt0.c4)))) DESC, ((((rt0.c3) NOTNULL)) NOT NULL);
SELECT MIN(rt0.c2) FROM rt0 WHERE (((rt0.c1)&(rt0.c0)) COLLATE NOCASE);
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (((((rt0.c1)&(rt0.c0)) COLLATE NOCASE)AND((((((('-1650853674')AND(LENGTH(rt0.c3))))AND((('-421751137') NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND((+ (rt0.c2))))))) ORDER BY NULLIF(((rt0.c3) IS FALSE), 'NW')  NULLS FIRST, rt0.c4, (- (rt0.c1)) LIMIT 5 INTERSECT SELECT MIN(rt0.c2) FROM rt0 WHERE (((((rt0.c0)AND(rt0.c4)))*(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END))) ORDER BY NULLIF(((rt0.c3) IS FALSE), 'NW')  NULLS FIRST, rt0.c4, (- (rt0.c1)) LIMIT 5;
SELECT * FROM rt0 WHERE (COALESCE((~ (rt0.c0)), (- (rt0.c2)))) ORDER BY CAST((((rt0.c1, rt0.c3, rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((x'', rt0.c0, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c3, rt0.c2, rt0.c1, rt0.c3, rt0.c0))) AS REAL) ASC  NULLS LAST, ((((rt0.c4)LIKE(rt0.c1))) ISNULL) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((COALESCE((~ (rt0.c0)), (- (rt0.c2))))AND(NULL))) ORDER BY CAST((((rt0.c1, rt0.c3, rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((x'', rt0.c0, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c3, rt0.c2, rt0.c1, rt0.c3, rt0.c0))) AS REAL) ASC  NULLS LAST, ((((rt0.c4)LIKE(rt0.c1))) ISNULL) ASC  NULLS LAST LIMIT 2;
SELECT * FROM rt0 WHERE (COALESCE((~ (rt0.c0)), (- (rt0.c2)))) ORDER BY CAST((((rt0.c1, rt0.c3, rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((x'', rt0.c0, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c3, rt0.c2, rt0.c1, rt0.c3, rt0.c0))) AS REAL) ASC  NULLS LAST, ((((rt0.c4)LIKE(rt0.c1))) ISNULL) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((COALESCE((~ (rt0.c0)), (- (rt0.c2))))AND(NULL))) ORDER BY CAST((((rt0.c1, rt0.c3, rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((x'', rt0.c0, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c3, rt0.c2, rt0.c1, rt0.c3, rt0.c0))) AS REAL) ASC  NULLS LAST, ((((rt0.c4)LIKE(rt0.c1))) ISNULL) ASC  NULLS LAST LIMIT 2;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (SUBSTR(rt0.c3 COLLATE NOCASE, (((rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c4)) AND ((rt0.c3, '-1444392489')))));
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (SUBSTR(rt0.c3 COLLATE NOCASE, (((rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c4)) AND ((rt0.c3, '-1444392489')))));
SELECT ALL * FROM rt0 WHERE (((((((((((((((CAST(rt0.c3 AS NUMERIC))AND(CAST(rt0.c0 AS BLOB))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 END)))AND((- (rt0.c4)))))OR(rt0.c4)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c3) IS FALSE))));
SELECT ALL * FROM rt0 WHERE (((((((((((((((((CAST(rt0.c3 AS NUMERIC))AND(CAST(rt0.c0 AS BLOB))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 END)))AND((- (rt0.c4)))))OR(rt0.c4)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c3) IS FALSE))))AND(NULL))) ORDER BY x'367003' DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM rt0 WHERE (((((((((((((((CAST(rt0.c3 AS NUMERIC))AND(CAST(rt0.c0 AS BLOB))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 END)))AND((- (rt0.c4)))))OR(rt0.c4)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c3) IS FALSE))));
SELECT ALL * FROM rt0 WHERE (((((((((((((((((CAST(rt0.c3 AS NUMERIC))AND(CAST(rt0.c0 AS BLOB))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 END)))AND((- (rt0.c4)))))OR(rt0.c4)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c3) IS FALSE))))AND(NULL))) ORDER BY x'367003' DESC  NULLS FIRST LIMIT 2;
SELECT * FROM rt0 WHERE ('-171394040') ORDER BY (((((((((rt0.c4, '-489391334', rt0.c4, rt0.c0))<>((rt0.c0, rt0.c2, rt0.c2, rt0.c1))))OR((- (rt0.c2)))))OR(((rt0.c4)>(rt0.c4)))))AND(((rt0.c4)&(rt0.c1))))  NULLS FIRST, '	' COLLATE RTRIM ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ('-171394040') ORDER BY (((((((((rt0.c4, '-489391334', rt0.c4, rt0.c0))!=((rt0.c0, rt0.c2, rt0.c2, rt0.c1))))OR((- (rt0.c2)))))OR(((rt0.c4)>(rt0.c4)))))AND(((rt0.c4)&(rt0.c1))))  NULLS FIRST, '	' COLLATE RTRIM ASC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)&(rt0.c1)))<((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN ((rt0.c3, rt0.c1, rt0.c4)) AND ((rt0.c1, rt0.c1, rt0.c1)))))) ORDER BY (((((((((rt0.c4, '-489391334', rt0.c4, rt0.c0))!=((rt0.c0, rt0.c2, rt0.c2, rt0.c1))))OR((- (rt0.c2)))))OR(((rt0.c4)>(rt0.c4)))))AND(((rt0.c4)&(rt0.c1))))  NULLS FIRST, '	' COLLATE RTRIM ASC  NULLS LAST LIMIT 0;
SELECT * FROM rt0 WHERE ('-171394040') ORDER BY (((((((((rt0.c4, '-489391334', rt0.c4, rt0.c0))<>((rt0.c0, rt0.c2, rt0.c2, rt0.c1))))OR((- (rt0.c2)))))OR(((rt0.c4)>(rt0.c4)))))AND(((rt0.c4)&(rt0.c1))))  NULLS FIRST, '	' COLLATE RTRIM ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ('-171394040') ORDER BY (((((((((rt0.c4, '-489391334', rt0.c4, rt0.c0))!=((rt0.c0, rt0.c2, rt0.c2, rt0.c1))))OR((- (rt0.c2)))))OR(((rt0.c4)>(rt0.c4)))))AND(((rt0.c4)&(rt0.c1))))  NULLS FIRST, '	' COLLATE RTRIM ASC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)&(rt0.c1)))<((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN ((rt0.c3, rt0.c1, rt0.c4)) AND ((rt0.c1, rt0.c1, rt0.c1)))))) ORDER BY (((((((((rt0.c4, '-489391334', rt0.c4, rt0.c0))!=((rt0.c0, rt0.c2, rt0.c2, rt0.c1))))OR((- (rt0.c2)))))OR(((rt0.c4)>(rt0.c4)))))AND(((rt0.c4)&(rt0.c1))))  NULLS FIRST, '	' COLLATE RTRIM ASC  NULLS LAST LIMIT 0;
SELECT MIN(rt0.c3) FROM rt0 WHERE (ABS(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) ORDER BY ((((((((((rt0.c2)=(rt0.c4)))OR(CAST(rt0.c0 AS TEXT))))AND(NULL)))OR((rt0.c3 IN (rt0.c1)))))OR(rt0.c1 COLLATE BINARY)) DESC;
SELECT MIN(rt0.c3) FROM rt0 WHERE (ABS(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) ORDER BY NULL DESC, IFNULL(json_remove(rt0.c1, rt0.c2), UNLIKELY(DISTINCT rt0.c0)) LIMIT 0x2 INTERSECT SELECT MIN(rt0.c3) FROM rt0 NOT INDEXED WHERE (((rt0.c2) NOT NULL) COLLATE BINARY) ORDER BY NULL DESC, IFNULL(json_remove(rt0.c1, rt0.c2), UNLIKELY(DISTINCT rt0.c0)) LIMIT 0x2;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))IS NOT((- (rt0.c1))))) ORDER BY ((MAX(rt0.c2, rt0.c2, rt0.c3))IS((NOT (rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))IS NOT((- (rt0.c1))))) ORDER BY ((MAX(rt0.c2, rt0.c2, rt0.c3))IS((NOT (rt0.c0)))) INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((rt0.c0)) BETWEEN (('343997421')) AND ((rt0.c3))))AND(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END)))AND((rt0.c1 IN ()))))AND(((((rt0.c2)OR(rt0.c4)))AND('-1268073866')))))AND((+ (rt0.c4))))) ORDER BY ((MAX(rt0.c2, rt0.c2, rt0.c3))IS((NOT (rt0.c0))));
SELECT ALL * FROM rt0 WHERE ('1656892549');
SELECT DISTINCT * FROM rt0 WHERE ('1656892549') ORDER BY ((rt0.c0 COLLATE BINARY)>>(GLOB(rt0.c0, rt0.c2))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((((0.28182724067425524) IS TRUE))AND(((rt0.c0) ISNULL))))AND(((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))))AND(((((((rt0.c0)AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c3)))))OR(rt0.c0))) ORDER BY ((rt0.c0 COLLATE BINARY)>>(GLOB(rt0.c0, rt0.c2)));
SELECT ALL * FROM rt0 WHERE ('1656892549');
SELECT DISTINCT * FROM rt0 WHERE ('1656892549') ORDER BY ((rt0.c0 COLLATE BINARY)>>(GLOB(rt0.c0, rt0.c2))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((((0.28182724067425524) IS TRUE))AND(((rt0.c0) ISNULL))))AND(((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))))AND(((((((rt0.c0)AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c3)))))OR(rt0.c0))) ORDER BY ((rt0.c0 COLLATE BINARY)>>(GLOB(rt0.c0, rt0.c2)));
SELECT * FROM rt0 WHERE ('1978964765');
SELECT DISTINCT * FROM rt0 WHERE ((('1978964765')AND((((rt0.c3)<<('4IⲅnLd')) IN (((rt0.c4)AND(rt0.c4))))))) LIMIT 0x1;
SELECT * FROM rt0 WHERE ('1978964765');
SELECT DISTINCT * FROM rt0 WHERE ((('1978964765')AND((((rt0.c3)<<('4IⲅnLd')) IN (((rt0.c4)AND(rt0.c4))))))) LIMIT 0x1;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c1) IS FALSE))&(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((((((rt0.c1) IS FALSE))&(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND((NOT (rt0.c0 COLLATE NOCASE))))) LIMIT 0X2 INTERSECT SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (LOWER((rt0.c3 IN (rt0.c2)))) LIMIT 0x2;
SELECT MAX(rt0.c4) FROM rt0 WHERE (CASE WHEN (+ (rt0.c4)) THEN MIN(rt0.c3, rt0.c4) WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c4)+(NULL)) END) ORDER BY ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c3))) IS TRUE) ASC  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (CASE WHEN (+ (rt0.c4)) THEN MIN(rt0.c3, rt0.c4) WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c4)+(NULL)) END) ORDER BY ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c3))) IS TRUE) ASC  NULLS FIRST LIMIT 0X2;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(0.17615822736848852)) COLLATE NOCASE) ORDER BY CAST((((rt0.c3, rt0.c3, rt0.c2))==((rt0.c4, rt0.c0, 0.9112752965300064))) AS NUMERIC) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(0.17615822736848852)) COLLATE NOCASE) ORDER BY CAST((((rt0.c3, rt0.c3, rt0.c2))==((rt0.c4, rt0.c0, 0.9112752965300064))) AS NUMERIC) DESC  NULLS LAST INTERSECT SELECT COUNT(*) FROM rt0 WHERE (LIKE((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), rt0.c4 COLLATE RTRIM, '-')) ORDER BY CAST((((rt0.c3, rt0.c3, rt0.c2))=((rt0.c4, rt0.c0, 0.9112752965300064))) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((NULL)>(rt0.c4)));
SELECT * FROM rt0 WHERE (((NULL)>(rt0.c4)));
SELECT ALL * FROM rt0 WHERE (((NULL)>(rt0.c4)));
SELECT * FROM rt0 WHERE (((NULL)>(rt0.c4)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END COLLATE BINARY) ORDER BY CASE CAST(rt0.c0 AS NUMERIC)  WHEN (((rt0.c2, rt0.c2, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c0))) THEN 0.26072509212682093 WHEN CASE rt0.c4  WHEN rt0.c0 THEN '719967020' WHEN rt0.c4 THEN 0.7469160494421078 END THEN NULL WHEN ((((rt0.c1)AND(rt0.c4)))AND(rt0.c4)) THEN ABS(rt0.c4) WHEN (- (rt0.c4)) THEN (rt0.c1 IN (rt0.c2)) WHEN ((((NULL)OR(rt0.c4)))OR(x'f60245ed19')) THEN x'' COLLATE RTRIM END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END COLLATE BINARY)AND(LIKELY((+ (rt0.c4)))))) ORDER BY rt0.c3 COLLATE NOCASE, rt0.c3 DESC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (((CASE WHEN 0.2578763746968885 THEN rt0.c0 WHEN 0.9695718875725254 THEN rt0.c2 END) NOTNULL)) ORDER BY rt0.c3 COLLATE NOCASE, rt0.c3 DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END COLLATE BINARY) ORDER BY CASE CAST(rt0.c0 AS NUMERIC)  WHEN (((rt0.c2, rt0.c2, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c0))) THEN 0.26072509212682093 WHEN CASE rt0.c4  WHEN rt0.c0 THEN '719967020' WHEN rt0.c4 THEN 0.7469160494421078 END THEN NULL WHEN ((((rt0.c1)AND(rt0.c4)))AND(rt0.c4)) THEN ABS(rt0.c4) WHEN (- (rt0.c4)) THEN (rt0.c1 IN (rt0.c2)) WHEN ((((NULL)OR(rt0.c4)))OR(x'f60245ed19')) THEN x'' COLLATE RTRIM END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END COLLATE BINARY)AND(LIKELY((+ (rt0.c4)))))) ORDER BY rt0.c3 COLLATE NOCASE, rt0.c3 DESC  NULLS FIRST INTERSECT SELECT * FROM rt0 WHERE (((CASE WHEN 0.2578763746968885 THEN rt0.c0 WHEN 0.9695718875725254 THEN rt0.c2 END) NOTNULL)) ORDER BY rt0.c3 COLLATE NOCASE, rt0.c3 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((((((+ (rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))))AND(rt0.c4)))OR(ABS(DISTINCT rt0.c0))));
SELECT * FROM rt0 WHERE ((((((((((+ (rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))))AND(rt0.c4)))OR(ABS(DISTINCT rt0.c0)))) ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) DESC  NULLS LAST LIMIT 5 INTERSECT SELECT ALL * FROM rt0 WHERE (((((((rt0.c3 COLLATE RTRIM)OR((rt0.c1 IN (rt0.c0, rt0.c1)))))OR(rt0.c3)))AND(rt0.c4 COLLATE BINARY))) ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) DESC  NULLS LAST LIMIT 5;
SELECT * FROM rt0 WHERE ((((((((((+ (rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))))AND(rt0.c4)))OR(ABS(DISTINCT rt0.c0))));
SELECT * FROM rt0 WHERE ((((((((((+ (rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))))AND(rt0.c4)))OR(ABS(DISTINCT rt0.c0)))) ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) DESC  NULLS LAST LIMIT 5 INTERSECT SELECT ALL * FROM rt0 WHERE (((((((rt0.c3 COLLATE RTRIM)OR((rt0.c1 IN (rt0.c0, rt0.c1)))))OR(rt0.c3)))AND(rt0.c4 COLLATE BINARY))) ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) DESC  NULLS LAST LIMIT 5;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c3)LIKE(rt0.c1))) AND (((rt0.c0) NOTNULL))));
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (((rt0.c3)LIKE(rt0.c1))) AND (((rt0.c0) NOTNULL))))AND((((rt0.c3 IN (rt0.c4, rt0.c3))) NOTNULL)))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE ('-370957686') ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c4) AND ('355625923')) IN (CAST(rt0.c3 AS BLOB), ((rt0.c2) BETWEEN (rt0.c2) AND (0.9865678691023669)))) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((('-370957686')AND(0.9786764279526701))) ORDER BY rt0.c4 ASC  NULLS FIRST, rt0.c3 DESC;
SELECT ALL * FROM rt0 WHERE ('-370957686') ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c4) AND ('355625923')) IN (CAST(rt0.c3 AS BLOB), ((rt0.c2) BETWEEN (rt0.c2) AND (0.9865678691023669)))) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((('-370957686')AND(0.9786764279526701))) ORDER BY rt0.c4 ASC  NULLS FIRST, rt0.c3 DESC;
SELECT * FROM rt0 WHERE ((~ (rt0.c1)) COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c1)) COLLATE BINARY)AND(CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))  WHEN (rt0.c2 IN (rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c4) AND (0x632dd90e)) WHEN (rt0.c0 IN ()) THEN (rt0.c4 IN ()) END))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3)|(rt0.c3)))=(((rt0.c1) BETWEEN (rt0.c0) AND (0x73bcf17e))))) LIMIT 3;
SELECT * FROM rt0 WHERE ((~ (rt0.c1)) COLLATE BINARY);
SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c1)) COLLATE BINARY)AND(CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))  WHEN (rt0.c2 IN (rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c4) AND (0x632dd90e)) WHEN (rt0.c0 IN ()) THEN (rt0.c4 IN ()) END))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3)|(rt0.c3)))=(((rt0.c1) BETWEEN (rt0.c0) AND (0x73bcf17e))))) LIMIT 3;
SELECT * FROM rt0 WHERE (((((((rt0.c1, rt0.c0, rt0.c1))=((rt0.c3, rt0.c4, rt0.c2))), CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 WHEN '1436703206' THEN rt0.c4 ELSE rt0.c1 END, ((rt0.c1)GLOB(rt0.c0))))>((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END, CAST(rt0.c1 AS BLOB), (- (rt0.c1)))))) ORDER BY ((((x'4b', rt0.c3)) BETWEEN ((rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c3))) IN (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS FIRST, (rt0.c3 IN ());
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1, rt0.c0, rt0.c1))=((rt0.c3, rt0.c4, rt0.c2))), CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 WHEN '1436703206' THEN rt0.c4 ELSE rt0.c1 END, ((rt0.c1)GLOB(rt0.c0))))>((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END, CAST(rt0.c1 AS BLOB), (- (rt0.c1)))))) ORDER BY ((((x'4b', rt0.c3)) BETWEEN ((rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c3))) IN (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS FIRST, (rt0.c3 IN ());
SELECT * FROM rt0 WHERE (((((((rt0.c1, rt0.c0, rt0.c1))=((rt0.c3, rt0.c4, rt0.c2))), CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 WHEN '1436703206' THEN rt0.c4 ELSE rt0.c1 END, ((rt0.c1)GLOB(rt0.c0))))>((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END, CAST(rt0.c1 AS BLOB), (- (rt0.c1)))))) ORDER BY ((((x'4b', rt0.c3)) BETWEEN ((rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c3))) IN (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS FIRST, (rt0.c3 IN ());
SELECT * FROM rt0 WHERE (LIKELIHOOD(rt0.c1, CAST(rt0.c1 AS BLOB))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c0))) ISNULL) DESC  NULLS LAST, rt0.c1 ASC;
SELECT * FROM rt0 WHERE (LIKELIHOOD(rt0.c1, CAST(rt0.c1 AS BLOB))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c0))) ISNULL) DESC  NULLS LAST, rt0.c1 ASC;
SELECT * FROM rt0 WHERE (LIKELIHOOD(rt0.c1, CAST(rt0.c1 AS BLOB))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c0))) ISNULL) DESC  NULLS LAST, rt0.c1 ASC;
SELECT MIN(rt0.c1) FROM rt0 WHERE (rt0.c0);
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (rt0.c0) LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (x'') LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0))) ISNULL)) ORDER BY (((rt0.c2 IN (rt0.c4))) BETWEEN ('719967020') AND ((((rt0.c2, rt0.c2, rt0.c0))=((rt0.c3, rt0.c1, rt0.c1)))))  NULLS LAST, (NOT (rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0))) ISNULL)) ORDER BY (NOT (rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST, (((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 END, (((rt0.c0, rt0.c3))=((rt0.c2, rt0.c1)))))=((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)), rt0.c3 COLLATE RTRIM))) DESC LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c4)-(rt0.c4)))%(((rt0.c3)IS(rt0.c0))))) ORDER BY (NOT (rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST, (((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 END, (((rt0.c0, rt0.c3))==((rt0.c2, rt0.c1)))))=((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)), rt0.c3 COLLATE RTRIM))) DESC LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0))) ISNULL)) ORDER BY (((rt0.c2 IN (rt0.c4))) BETWEEN ('719967020') AND ((((rt0.c2, rt0.c2, rt0.c0))=((rt0.c3, rt0.c1, rt0.c1)))))  NULLS LAST, (NOT (rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0))) ISNULL)) ORDER BY (NOT (rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST, (((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 END, (((rt0.c0, rt0.c3))=((rt0.c2, rt0.c1)))))=((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)), rt0.c3 COLLATE RTRIM))) DESC LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c4)-(rt0.c4)))%(((rt0.c3)IS(rt0.c0))))) ORDER BY (NOT (rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST, (((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 END, (((rt0.c0, rt0.c3))==((rt0.c2, rt0.c1)))))=((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)), rt0.c3 COLLATE RTRIM))) DESC LIMIT 0x2;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((0.7393992413633202 COLLATE BINARY)%((rt0.c0 IN (rt0.c3))))) ORDER BY ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) BETWEEN (rt0.c4) AND (NULL))  NULLS FIRST, ((((((((rt0.c4)OR(rt0.c2)))OR(NULL)))OR(0.8401762978742852)))OR(x'5433')) COLLATE NOCASE DESC;
SELECT MIN(rt0.c1) FROM rt0 WHERE (((0.7393992413633202 COLLATE BINARY)%((rt0.c0 IN (rt0.c3))))) ORDER BY ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) BETWEEN (rt0.c4) AND (NULL))  NULLS FIRST, ((((((((rt0.c4)OR(rt0.c2)))OR(NULL)))OR(0.8401762978742852)))OR(x'5433')) COLLATE NOCASE DESC INTERSECT SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (rt0.c4) ORDER BY ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c3))) BETWEEN (rt0.c4) AND (NULL))  NULLS FIRST, ((((((((rt0.c4)OR(rt0.c2)))OR(NULL)))OR(0.8401762978742852)))OR(x'5433')) COLLATE NOCASE DESC;
SELECT * FROM rt0 WHERE ('Kb') ORDER BY x''  NULLS LAST, ((STRFTIME(rt0.c1, rt0.c1, rt0.c0)) BETWEEN (x'') AND (CAST(rt0.c3 AS TEXT)));
SELECT DISTINCT * FROM rt0 WHERE ((('Kb')AND(CASE WHEN rt0.c4 THEN x'06dbe5' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END COLLATE RTRIM))) ORDER BY x''  NULLS LAST, ((STRFTIME(rt0.c1, rt0.c1, rt0.c0)) BETWEEN (x'') AND (CAST(rt0.c3 AS TEXT))) LIMIT 4 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c3) NOTNULL) AS BLOB)) ORDER BY x''  NULLS LAST, ((STRFTIME(rt0.c1, rt0.c1, rt0.c0)) BETWEEN (x'') AND (CAST(rt0.c3 AS TEXT))) LIMIT 4;
SELECT * FROM rt0 WHERE ('Kb') ORDER BY x''  NULLS LAST, ((STRFTIME(rt0.c1, rt0.c1, rt0.c0)) BETWEEN (x'') AND (CAST(rt0.c3 AS TEXT)));
SELECT DISTINCT * FROM rt0 WHERE ((('Kb')AND(CASE WHEN rt0.c4 THEN x'06dbe5' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END COLLATE RTRIM))) ORDER BY x''  NULLS LAST, ((STRFTIME(rt0.c1, rt0.c1, rt0.c0)) BETWEEN (x'') AND (CAST(rt0.c3 AS TEXT))) LIMIT 4 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c3) NOTNULL) AS BLOB)) ORDER BY x''  NULLS LAST, ((STRFTIME(rt0.c1, rt0.c1, rt0.c0)) BETWEEN (x'') AND (CAST(rt0.c3 AS TEXT))) LIMIT 4;
SELECT * FROM rt0 WHERE (CASE ((rt0.c4) ISNULL)  WHEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)) THEN LIKE(rt0.c3, rt0.c4) ELSE ((rt0.c4) NOT NULL) END);
SELECT * FROM rt0 WHERE (CASE ((rt0.c4) ISNULL)  WHEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)) THEN LIKE(rt0.c3, rt0.c4) ELSE ((rt0.c4) NOT NULL) END) INTERSECT SELECT * FROM rt0 WHERE (0.6059362216532783);
SELECT * FROM rt0 WHERE (CASE ((rt0.c4) ISNULL)  WHEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)) THEN LIKE(rt0.c3, rt0.c4) ELSE ((rt0.c4) NOT NULL) END);
SELECT * FROM rt0 WHERE (CASE ((rt0.c4) ISNULL)  WHEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)) THEN LIKE(rt0.c3, rt0.c4) ELSE ((rt0.c4) NOT NULL) END) INTERSECT SELECT * FROM rt0 WHERE (0.6059362216532783);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c4)))AND(rt0.c3)) IN ()));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c4)))AND(rt0.c3)) IN ())) ORDER BY ((IFNULL(DISTINCT -1.7139404E8, rt0.c4))IS NOT(rt0.c2 COLLATE BINARY)) ASC LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c4)))AND(rt0.c3)) IN ()));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c4)))AND(rt0.c3)) IN ())) ORDER BY ((IFNULL(DISTINCT -1.7139404E8, rt0.c4))IS NOT(rt0.c2 COLLATE BINARY)) ASC LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE ('');
SELECT DISTINCT * FROM rt0 WHERE ((('')AND(((CASE x'4dbd'  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END)AND(0Xfffffffff5796bab))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) LIMIT 0;
SELECT ALL * FROM rt0 WHERE ('');
SELECT DISTINCT * FROM rt0 WHERE ((('')AND(((CASE x'4dbd'  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END)AND(0Xfffffffff5796bab))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((((('u')AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((((((('u')AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)) COLLATE RTRIM) LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c3, rt0.c4, rt0.c1, rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c3, NULL, NULL, rt0.c3, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2, 0.36062870293789195, rt0.c4, rt0.c1)))))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((((((('u')AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((((((('u')AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)) COLLATE RTRIM) LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c3, rt0.c4, rt0.c1, rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c3, NULL, NULL, rt0.c3, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2, 0.36062870293789195, rt0.c4, rt0.c1)))))) LIMIT 1;
SELECT MAX(rt0.c0) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))|((~ (rt0.c1))))) ORDER BY x'74'  NULLS LAST, CASE rt0.c4 COLLATE RTRIM  WHEN TRIM(rt0.c0) THEN CAST(rt0.c4 AS REAL) END  NULLS LAST;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))|((~ (rt0.c1)))))AND((((rt0.c1) ISNULL) IN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))))))) ORDER BY rt0.c1 DESC  NULLS FIRST, (((((- (rt0.c0)))AND((+ (rt0.c2)))))OR(rt0.c3 COLLATE RTRIM)) LIMIT 1 INTERSECT SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (((((rt0.c3, rt0.c3)) BETWEEN ((0.5418946909131519, rt0.c4)) AND ((rt0.c3, rt0.c0))) IN (CASE WHEN rt0.c2 THEN NULL WHEN rt0.c3 THEN NULL WHEN rt0.c3 THEN rt0.c0 END))) ORDER BY rt0.c1 DESC  NULLS FIRST, (((((- (rt0.c0)))AND((+ (rt0.c2)))))OR(rt0.c3 COLLATE RTRIM)) LIMIT 0x1;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE) ORDER BY ((rt0.c3 COLLATE NOCASE)-(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE) ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c4)<(NULL))) AND (LIKELY(rt0.c4))), (((((rt0.c1, rt0.c2, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c4, rt0.c0))))*(((rt0.c2)AND(x'75442ee3')))) ASC  NULLS LAST, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE (((((((rt0.c4) NOTNULL))OR(rt0.c0 COLLATE NOCASE)))AND(0.5142984799490283))) ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c4)<(NULL))) AND (LIKELY(rt0.c4))), (((((rt0.c1, rt0.c2, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c4, rt0.c0))))*(((rt0.c2)AND(x'75442ee3')))) ASC  NULLS LAST, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM DESC  NULLS LAST LIMIT 0;
SELECT MIN(rt0.c2) FROM rt0 WHERE (NULL);
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (((NULL)AND((CASE WHEN rt0.c0 THEN rt0.c1 END IN ((rt0.c0 IN (rt0.c1))))))) LIMIT 3;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2, rt0.c0, 0.9259177911575226)) NOT BETWEEN ((rt0.c4, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c1))) AS REAL));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2, rt0.c0, 0.9259177911575226)) NOT BETWEEN ((rt0.c4, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c1))) AS REAL)) ORDER BY (((rt0.c0) ISNULL) IN ((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))), ((rt0.c1)&(rt0.c2)), CASE 0.3116589776993015  WHEN rt0.c4 THEN rt0.c4 WHEN -681358751 THEN rt0.c0 WHEN rt0.c2 THEN NULL END));
SELECT MIN(rt0.c4) FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c2)))<<(((rt0.c3)IS(rt0.c0))))) ORDER BY (- (rt0.c1 COLLATE BINARY)), ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE BINARY ASC;
SELECT MIN(rt0.c4) FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c2)))<<(((rt0.c3)IS(rt0.c0))))) ORDER BY (~ (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS LAST, 0x45174b30  NULLS LAST INTERSECT SELECT MIN(rt0.c4) FROM rt0 WHERE (rt0.c2) ORDER BY (~ (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS LAST, 0X45174b30  NULLS LAST;
SELECT * FROM rt0 WHERE (((ABS(rt0.c4))*(((rt0.c1) NOT NULL))));
SELECT DISTINCT * FROM rt0 WHERE (((ABS(rt0.c4))*(((rt0.c1) NOT NULL))));
SELECT * FROM rt0 WHERE (((ABS(rt0.c4))*(((rt0.c1) NOT NULL))));
SELECT DISTINCT * FROM rt0 WHERE (((ABS(rt0.c4))*(((rt0.c1) NOT NULL))));
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (NOT ((rt0.c3 IN (rt0.c3, '1477441143', 0xffffffff901f1995)))) DESC LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT rt0.c2, RTRIM(rt0.c1))) ORDER BY (NOT ((rt0.c3 IN (rt0.c3, '1477441143', 0Xffffffff901f1995)))) DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (NOT ((rt0.c3 IN (rt0.c3, '1477441143', 0xffffffff901f1995)))) DESC LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT rt0.c2, RTRIM(rt0.c1))) ORDER BY (NOT ((rt0.c3 IN (rt0.c3, '1477441143', 0Xffffffff901f1995)))) DESC LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)AND(((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))OR(x'')))OR(rt0.c3 COLLATE NOCASE)))AND(((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1))))))) LIMIT 1 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (JULIANDAY('-2106856686', ((rt0.c4)<<(rt0.c3)), ((rt0.c4) NOTNULL))) LIMIT 1;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)))+(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)))+(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 END)))AND(CAST(rt0.c1 AS BLOB)))) INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((CAST(0.2213521829134708 AS REAL))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))OR(((rt0.c4)==(rt0.c2)))))OR(rt0.c4 COLLATE RTRIM)))OR(CAST(rt0.c2 AS BLOB))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT))>>((NOT (rt0.c0))))) ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN rt0.c0 THEN CASE rt0.c1  WHEN '}[' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN -9.31054513E8 THEN rt0.c3 ELSE rt0.c4 END END DESC;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT))>>((NOT (rt0.c0))))) ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN rt0.c0 THEN CASE rt0.c1  WHEN '}[' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN -9.31054513E8 THEN rt0.c3 ELSE rt0.c4 END END DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c3, rt0.c1))) BETWEEN (LIKELIHOOD('>', 0.8119728781265142)) AND ((((((('')OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3))))) ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN rt0.c0 THEN CASE rt0.c1  WHEN '}[' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN -9.31054513E8 THEN rt0.c3 ELSE rt0.c4 END END DESC;
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT))>>((NOT (rt0.c0))))) ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN rt0.c0 THEN CASE rt0.c1  WHEN '}[' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN -9.31054513E8 THEN rt0.c3 ELSE rt0.c4 END END DESC;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT))>>((NOT (rt0.c0))))) ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN rt0.c0 THEN CASE rt0.c1  WHEN '}[' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN -9.31054513E8 THEN rt0.c3 ELSE rt0.c4 END END DESC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c3, rt0.c1))) BETWEEN (LIKELIHOOD('>', 0.8119728781265142)) AND ((((((('')OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3))))) ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN rt0.c0 THEN CASE rt0.c1  WHEN '}[' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN -9.31054513E8 THEN rt0.c3 ELSE rt0.c4 END END DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((((CAST(rt0.c3 AS NUMERIC))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND(CASE WHEN rt0.c4 THEN x'29e5' WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)))OR(CAST(rt0.c1 AS TEXT))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((CAST(rt0.c3 AS NUMERIC))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND(CASE WHEN rt0.c4 THEN x'29e5' WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)))OR(CAST(rt0.c1 AS TEXT)))) LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((rt0.c3)|(rt0.c4 COLLATE BINARY))) LIMIT 0;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (rt0.c0);
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((rt0.c0)AND((((rt0.c4, rt0.c3)) NOT BETWEEN ((SQLITE_COMPILEOPTION_GET(rt0.c1), ((rt0.c3)LIKE(rt0.c1)))) AND ((rt0.c1 COLLATE RTRIM, (rt0.c2 IN (rt0.c1))))))));
SELECT * FROM rt0 WHERE ((((rt0.c3) IS TRUE) IN ((((rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0)))))) ORDER BY (NOT ((~ (rt0.c2))))  NULLS FIRST, ((rt0.c3 IN ()) IN (CAST(rt0.c1 AS BLOB))) DESC, (+ ((+ (rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3) IS TRUE) IN ((((rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0)))))) ORDER BY (((rt0.c2, '126086825')) BETWEEN ((CAST(rt0.c0 AS TEXT), ((rt0.c3) NOT NULL))) AND (((((0.4671908475999308)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))), (((rt0.c2, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c4)))))) DESC LIMIT 2;
SELECT * FROM rt0 WHERE ((((rt0.c3) IS TRUE) IN ((((rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0)))))) ORDER BY (NOT ((~ (rt0.c2))))  NULLS FIRST, ((rt0.c3 IN ()) IN (CAST(rt0.c1 AS BLOB))) DESC, (+ ((+ (rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3) IS TRUE) IN ((((rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0)))))) ORDER BY (((rt0.c2, '126086825')) BETWEEN ((CAST(rt0.c0 AS TEXT), ((rt0.c3) NOT NULL))) AND (((((0.4671908475999308)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))), (((rt0.c2, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c4)))))) DESC LIMIT 2;
SELECT * FROM rt0 WHERE (LOWER(DISTINCT rt0.c4 COLLATE BINARY));
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT rt0.c4 COLLATE BINARY)) LIMIT 0X2 INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c0) IS FALSE))/((NOT (x''))))) LIMIT 0x2;
SELECT * FROM rt0 WHERE (LOWER(DISTINCT rt0.c4 COLLATE BINARY));
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT rt0.c4 COLLATE BINARY)) LIMIT 0X2 INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c0) IS FALSE))/((NOT (x''))))) LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c4 COLLATE BINARY AS NUMERIC)) ORDER BY ((((((rt0.c2, rt0.c4))>=((rt0.c0, rt0.c3)))))=((rt0.c0)))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c4 COLLATE BINARY AS NUMERIC)) ORDER BY ((((((rt0.c2, rt0.c4))>=((rt0.c0, rt0.c3)))))==((rt0.c0)))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c0)))AND(load_extension(rt0.c3))))AND(LIKELIHOOD(rt0.c4, rt0.c2)))) ORDER BY ((((((rt0.c2, rt0.c4))>=((rt0.c0, rt0.c3)))))==((rt0.c0)))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c4 COLLATE BINARY AS NUMERIC)) ORDER BY ((((((rt0.c2, rt0.c4))>=((rt0.c0, rt0.c3)))))=((rt0.c0)))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c4 COLLATE BINARY AS NUMERIC)) ORDER BY ((((((rt0.c2, rt0.c4))>=((rt0.c0, rt0.c3)))))==((rt0.c0)))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c0)))AND(load_extension(rt0.c3))))AND(LIKELIHOOD(rt0.c4, rt0.c2)))) ORDER BY ((((((rt0.c2, rt0.c4))>=((rt0.c0, rt0.c3)))))==((rt0.c0)))  NULLS FIRST LIMIT 0;
SELECT MAX(rt0.c0) FROM rt0 WHERE ((((rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c3, x'd0fc15'))<>((rt0.c1, rt0.c4))), (x'17' IN ()))) AND ((rt0.c3 COLLATE RTRIM, (((rt0.c3))<((rt0.c1))))))) ORDER BY ((((rt0.c2 IN ()), x'767c32', ((rt0.c1) IS TRUE)))<((((rt0.c0)!=(rt0.c2)), ((rt0.c2) IS FALSE), (rt0.c2 IN ()))))  NULLS FIRST, (((rt0.c1 IN (rt0.c0))) BETWEEN ((((rt0.c2, rt0.c4))<=((rt0.c0, rt0.c2)))) AND ((rt0.c1 IN ())))  NULLS FIRST;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE ((((((rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c3, x'd0fc15'))!=((rt0.c1, rt0.c4))), (x'17' IN ()))) AND ((rt0.c3 COLLATE RTRIM, (((rt0.c3))<((rt0.c1)))))))AND(CAST(LIKELY(rt0.c3) AS TEXT)))) ORDER BY ((((rt0.c2 IN ()), x'767c32', ((rt0.c1) IS TRUE)))<((((rt0.c0)<>(rt0.c2)), ((rt0.c2) IS FALSE), (rt0.c2 IN ()))))  NULLS FIRST, (((rt0.c1 IN (rt0.c0))) BETWEEN ((((rt0.c2, rt0.c4))<=((rt0.c0, rt0.c2)))) AND ((rt0.c1 IN ())))  NULLS FIRST;
SELECT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(TYPEOF(NULL))) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (409810737)) IN ((rt0.c3 IN (rt0.c0, rt0.c1)), x'6ebc')) DESC, json_extract(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c4))), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((SQLITE_COMPILEOPTION_USED(TYPEOF(NULL)))AND(CASE WHEN rt0.c3 COLLATE NOCASE THEN ((1525876419) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c2)=(991414367)) THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c0) NOT BETWEEN ('691849485') AND (rt0.c4)) THEN LIKELY(rt0.c4) ELSE ((rt0.c2)IS NOT(rt0.c3)) END))) ORDER BY (((NOT (rt0.c1))) NOTNULL)  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE (CAST('‒ ' AS INTEGER)) ORDER BY (((NOT (rt0.c1))) NOTNULL)  NULLS FIRST LIMIT 0x1;
SELECT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(TYPEOF(NULL))) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (409810737)) IN ((rt0.c3 IN (rt0.c0, rt0.c1)), x'6ebc')) DESC, json_extract(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c4))), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((SQLITE_COMPILEOPTION_USED(TYPEOF(NULL)))AND(CASE WHEN rt0.c3 COLLATE NOCASE THEN ((1525876419) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c2)=(991414367)) THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c0) NOT BETWEEN ('691849485') AND (rt0.c4)) THEN LIKELY(rt0.c4) ELSE ((rt0.c2)IS NOT(rt0.c3)) END))) ORDER BY (((NOT (rt0.c1))) NOTNULL)  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM rt0 WHERE (CAST('‒ ' AS INTEGER)) ORDER BY (((NOT (rt0.c1))) NOTNULL)  NULLS FIRST LIMIT 0x1;
SELECT * FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB)))) ORDER BY ((((((((rt0.c2)+(rt0.c4)))AND(INSTR(rt0.c4, rt0.c0))))OR(((rt0.c4) IS FALSE))))OR((((rt0.c3)) BETWEEN ((NULL)) AND ((rt0.c1))))), CAST(rt0.c1 AS INTEGER)  NULLS FIRST, (+ (((rt0.c3) BETWEEN (0.40705773166459003) AND (rt0.c1)))) ASC  NULLS FIRST, rt0.c3;
SELECT DISTINCT * FROM rt0 WHERE ((((NOT (CAST(rt0.c0 AS BLOB))))AND(rt0.c2 COLLATE BINARY))) ORDER BY ((((((((rt0.c2)+(rt0.c4)))AND(INSTR(rt0.c4, rt0.c0))))OR(((rt0.c4) IS FALSE))))OR((((rt0.c3)) BETWEEN ((NULL)) AND ((rt0.c1))))), CAST(rt0.c1 AS INTEGER)  NULLS FIRST, (+ (((rt0.c3) BETWEEN (0.40705773166459003) AND (rt0.c1)))) ASC  NULLS FIRST, rt0.c3 LIMIT 0;
SELECT * FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB)))) ORDER BY ((((((((rt0.c2)+(rt0.c4)))AND(INSTR(rt0.c4, rt0.c0))))OR(((rt0.c4) IS FALSE))))OR((((rt0.c3)) BETWEEN ((NULL)) AND ((rt0.c1))))), CAST(rt0.c1 AS INTEGER)  NULLS FIRST, (+ (((rt0.c3) BETWEEN (0.40705773166459003) AND (rt0.c1)))) ASC  NULLS FIRST, rt0.c3;
SELECT DISTINCT * FROM rt0 WHERE ((((NOT (CAST(rt0.c0 AS BLOB))))AND(rt0.c2 COLLATE BINARY))) ORDER BY ((((((((rt0.c2)+(rt0.c4)))AND(INSTR(rt0.c4, rt0.c0))))OR(((rt0.c4) IS FALSE))))OR((((rt0.c3)) BETWEEN ((NULL)) AND ((rt0.c1))))), CAST(rt0.c1 AS INTEGER)  NULLS FIRST, (+ (((rt0.c3) BETWEEN (0.40705773166459003) AND (rt0.c1)))) ASC  NULLS FIRST, rt0.c3 LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c4 AS NUMERIC))<>(((rt0.c3) BETWEEN (rt0.c0) AND ('&fGA&e'))))) ORDER BY (((rt0.c2, rt0.c0, rt0.c4)) BETWEEN (((((rt0.c1))>=((rt0.c0))), ((rt0.c2) IS TRUE), COALESCE(DISTINCT rt0.c4, rt0.c1))) AND ((rt0.c0, CASE WHEN rt0.c4 THEN rt0.c3 END, CAST(rt0.c3 AS REAL))))  NULLS FIRST, (NULL IN ());
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c4 AS NUMERIC))<(((rt0.c3) BETWEEN (rt0.c0) AND ('&fGA&e'))))) ORDER BY (((((((rt0.c2)AND('0.35722344418140595')))AND(rt0.c0)))OR(rt0.c2)) IN (CAST(rt0.c0 AS NUMERIC))) DESC;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c4 AS NUMERIC))<>(((rt0.c3) BETWEEN (rt0.c0) AND ('&fGA&e'))))) ORDER BY (((rt0.c2, rt0.c0, rt0.c4)) BETWEEN (((((rt0.c1))>=((rt0.c0))), ((rt0.c2) IS TRUE), COALESCE(DISTINCT rt0.c4, rt0.c1))) AND ((rt0.c0, CASE WHEN rt0.c4 THEN rt0.c3 END, CAST(rt0.c3 AS REAL))))  NULLS FIRST, (NULL IN ());
SELECT MIN(rt0.c2) FROM rt0 WHERE ((((~ (rt0.c2)))/(((0.9997675036582995) NOT NULL)))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c2 END)<=(0xffffffff8bcab4f7 COLLATE NOCASE))  NULLS LAST;
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE ((((~ (rt0.c2)))/(((0.9997675036582995) NOT NULL)))) ORDER BY ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END) NOTNULL), ((((rt0.c3, rt0.c2))>((rt0.c4, rt0.c1))) IN ((+ (rt0.c4)))) ASC  NULLS FIRST;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (((rt0.c0) NOT NULL)) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((CAST(rt0.c1 AS TEXT)))) ASC  NULLS LAST, ((CAST(rt0.c3 AS NUMERIC))|(rt0.c3)), ((((((rt0.c1) NOTNULL))OR(((rt0.c0)IS NOT(rt0.c4)))))OR((+ (rt0.c3))));
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (((rt0.c0) NOT NULL)) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((CAST(rt0.c1 AS TEXT)))) ASC  NULLS LAST, ((CAST(rt0.c3 AS NUMERIC))|(rt0.c3)), ((((((rt0.c1) NOTNULL))OR(((rt0.c0)IS NOT(rt0.c4)))))OR((+ (rt0.c3)))) INTERSECT SELECT MAX(rt0.c4) FROM rt0 WHERE ((~ (((((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c2))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((CAST(rt0.c1 AS TEXT)))) ASC  NULLS LAST, ((CAST(rt0.c3 AS NUMERIC))|(rt0.c3)), ((((((rt0.c1) NOTNULL))OR(((rt0.c0)IS NOT(rt0.c4)))))OR((+ (rt0.c3))));
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (IFNULL(0.7035073668253115, rt0.c1)) AND (((rt0.c2) NOT NULL)))) ORDER BY json('-226105798'), rt0.c0 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (IFNULL(0.7035073668253115, rt0.c1)) AND (((rt0.c2) NOT NULL)))) ORDER BY CASE WHEN (rt0.c2 IN (rt0.c0)) THEN ((((((rt0.c4)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)) END ASC, CAST(((rt0.c3) IS FALSE) AS BLOB) DESC  NULLS FIRST, ((rt0.c1)>>(rt0.c4)) COLLATE BINARY DESC  NULLS LAST LIMIT 0X4;
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (IFNULL(0.7035073668253115, rt0.c1)) AND (((rt0.c2) NOT NULL)))) ORDER BY json('-226105798'), rt0.c0 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (IFNULL(0.7035073668253115, rt0.c1)) AND (((rt0.c2) NOT NULL)))) ORDER BY CASE WHEN (rt0.c2 IN (rt0.c0)) THEN ((((((rt0.c4)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)) END ASC, CAST(((rt0.c3) IS FALSE) AS BLOB) DESC  NULLS FIRST, ((rt0.c1)>>(rt0.c4)) COLLATE BINARY DESC  NULLS LAST LIMIT 0X4;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((((rt0.c0)+(rt0.c3)))OR((~ (rt0.c0)))))AND(((rt0.c3)/(rt0.c0))))) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) ASC, (CASE WHEN rt0.c4 THEN rt0.c0 END IN (((rt0.c0) NOTNULL), CASE WHEN rt0.c4 THEN rt0.c2 WHEN 0Xfffffffffb50453a THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END));
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((((((rt0.c0)+(rt0.c3)))OR((~ (rt0.c0)))))AND(((rt0.c3)/(rt0.c0)))))AND(LIKE((+ (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c4) AND (0.8921354058888339)))))) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) ASC, (CASE WHEN rt0.c4 THEN rt0.c0 END IN (((rt0.c0) NOTNULL), CASE WHEN rt0.c4 THEN rt0.c2 WHEN -78625478 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END)) LIMIT 0x0 INTERSECT SELECT MAX(rt0.c2) FROM rt0 WHERE (CASE WHEN ((rt0.c4) IS TRUE) THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN x'' WHEN x'e015e2' THEN rt0.c4 END THEN ((rt0.c0) NOTNULL) END) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) ASC, (CASE WHEN rt0.c4 THEN rt0.c0 END IN (((rt0.c0) NOTNULL), CASE WHEN rt0.c4 THEN rt0.c2 WHEN 0Xfffffffffb50453a THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END)) LIMIT 0;
SELECT * FROM rt0 WHERE (CAST(((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) AS BLOB)) ORDER BY ((rt0.c2 IN (rt0.c1, NULL, rt0.c1)) IN (((rt0.c4)>>(rt0.c4)), ((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) AS BLOB)) ORDER BY rt0.c4 ASC  NULLS FIRST, (((rt0.c2 IN (rt0.c3))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c4 ASC  NULLS FIRST, (((rt0.c2 IN (rt0.c3))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))) LIMIT 0X0;
SELECT * FROM rt0 WHERE (CAST(((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) AS BLOB)) ORDER BY ((rt0.c2 IN (rt0.c1, NULL, rt0.c1)) IN (((rt0.c4)>>(rt0.c4)), ((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) AS BLOB)) ORDER BY rt0.c4 ASC  NULLS FIRST, (((rt0.c2 IN (rt0.c3))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c4 ASC  NULLS FIRST, (((rt0.c2 IN (rt0.c3))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))) LIMIT 0X0;
SELECT * FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(INSTR(rt0.c1, rt0.c2))))OR((~ (rt0.c0)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(INSTR(rt0.c1, rt0.c2))))OR((~ (rt0.c0)))))AND(rt0.c4))) ORDER BY COALESCE((((rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2)) AND ((rt0.c3, rt0.c3))), rt0.c3) DESC, CASE WHEN ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c4)|(rt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)) THEN json_valid(rt0.c0) END DESC LIMIT 1;
SELECT * FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(INSTR(rt0.c1, rt0.c2))))OR((~ (rt0.c0)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(INSTR(rt0.c1, rt0.c2))))OR((~ (rt0.c0)))))AND(rt0.c4))) ORDER BY COALESCE((((rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2)) AND ((rt0.c3, rt0.c3))), rt0.c3) DESC, CASE WHEN ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c4)|(rt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)) THEN json_valid(rt0.c0) END DESC LIMIT 1;
SELECT MAX(rt0.c1) FROM rt0 WHERE (((((((((1609903403)AND(((rt0.c3) NOTNULL))))AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)))AND((- (rt0.c1)))))OR(((rt0.c2)AND(rt0.c4)))));
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((((((((((1609903403)AND(((rt0.c3) NOTNULL))))AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)))AND((- (rt0.c1)))))OR(((rt0.c2)AND(rt0.c4)))))AND(((rt0.c4) ISNULL) COLLATE RTRIM))) ORDER BY ((((rt0.c0)+(0.9251492370317644)))>=(CASE WHEN rt0.c0 THEN 0.773613463200124 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)) DESC, ((((rt0.c2, rt0.c0))<>((rt0.c4, rt0.c1))) IN ((NOT (rt0.c4)))), ((((((rt0.c2)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c4)) COLLATE NOCASE ASC  NULLS FIRST LIMIT 1;
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) ORDER BY json_insert(rt0.c2 COLLATE RTRIM, (~ (NULL)), (NOT ('a1QBucK')), (- (rt0.c1)), (((rt0.c1, rt0.c1))>((rt0.c0, rt0.c1)))) DESC  NULLS FIRST, (+ (((rt0.c2)<<(rt0.c1)))) DESC  NULLS FIRST, CASE CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END  WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)) THEN ((rt0.c0)%(rt0.c4)) WHEN rt0.c3 THEN (((rt0.c1, rt0.c4, rt0.c1))<((rt0.c3, rt0.c2, rt0.c3))) WHEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c4))) THEN SQLITE_COMPILEOPTION_USED(rt0.c3) END ASC;
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) ORDER BY TYPEOF(DISTINCT rt0.c0) COLLATE NOCASE, UNLIKELY(((rt0.c1)AND(rt0.c2))) DESC;
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) ORDER BY json_insert(rt0.c2 COLLATE RTRIM, (~ (NULL)), (NOT ('a1QBucK')), (- (rt0.c1)), (((rt0.c1, rt0.c1))>((rt0.c0, rt0.c1)))) DESC  NULLS FIRST, (+ (((rt0.c2)<<(rt0.c1)))) DESC  NULLS FIRST, CASE CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END  WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)) THEN ((rt0.c0)%(rt0.c4)) WHEN rt0.c3 THEN (((rt0.c1, rt0.c4, rt0.c1))<((rt0.c3, rt0.c2, rt0.c3))) WHEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c4))) THEN SQLITE_COMPILEOPTION_USED(rt0.c3) END ASC;
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) ORDER BY TYPEOF(DISTINCT rt0.c0) COLLATE NOCASE, UNLIKELY(((rt0.c1)AND(rt0.c2))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) END)AND((((((((rt0.c1, rt0.c2, rt0.c3))<=((rt0.c1, rt0.c2, rt0.c2))))OR(rt0.c1)))AND(((rt0.c0) ISNULL)))))) ORDER BY ((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END)))AND(0.31747934719031035)) DESC  NULLS FIRST, CAST((+ (rt0.c2)) AS TEXT) ASC, NULL ASC LIMIT 1;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((CAST(rt0.c4 AS INTEGER) IN (LIKELIHOOD(DISTINCT rt0.c1, rt0.c1))));
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((CAST(rt0.c4 AS INTEGER) IN (LIKELIHOOD(DISTINCT rt0.c1, rt0.c1)))) ORDER BY (((rt0.c2, rt0.c1, rt0.c3)) BETWEEN ((((rt0.c0)-(rt0.c3)), rt0.c0 COLLATE NOCASE, ((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))) AND (((+ (rt0.c4)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) ISNULL)))) ASC, CAST(((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)) AS REAL), '1743999883' COLLATE BINARY  NULLS LAST;
SELECT MAX(rt0.c2) FROM rt0 WHERE ((('0.9955544679083106' COLLATE RTRIM)!=(TYPEOF(rt0.c2))));
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE ((('0.9955544679083106' COLLATE RTRIM)<>(TYPEOF(rt0.c2)))) ORDER BY CAST((('')AND(rt0.c0)) AS NUMERIC) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN NULL END)))AND(rtreenode(-228762077, rt0.c4))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))))OR(((rt0.c1) IS FALSE)))) ORDER BY CAST((('')AND(rt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((('')&(((rt0.c0)+(rt0.c1))))) ORDER BY CAST(((((rt0.c0)OR(rt0.c4)))AND(0.5765541869753318)) AS NUMERIC) ASC, ((('1648665178', rt0.c4, rt0.c2)) NOT BETWEEN (((((rt0.c3, rt0.c3, rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c4, rt0.c0, rt0.c1, rt0.c0, rt0.c3))), ((rt0.c2)<>(rt0.c3)), ((rt0.c3)>=(rt0.c3)))) AND ((((rt0.c0)OR(rt0.c2)), rt0.c3 COLLATE BINARY, DATE(rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c1, rt0.c0))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 NOT INDEXED WHERE ((('')&(((rt0.c0)+(rt0.c1))))) ORDER BY (NOT (x'')), (~ ((- (rt0.c3)))) ASC, x''  NULLS LAST;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((((((((CAST(rt0.c1 AS TEXT))AND(rt0.c4)))OR(((rt0.c1)AND(rt0.c0)))))OR(rt0.c4 COLLATE BINARY)))AND(((rt0.c3) NOT NULL)))) ORDER BY ((((rt0.c1)LIKE(rt0.c1)))<<(rt0.c1))  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((((((CAST(rt0.c1 AS TEXT))AND(rt0.c4)))OR(((rt0.c1)AND(rt0.c0)))))OR(rt0.c4 COLLATE BINARY)))AND(((rt0.c3) NOT NULL)))) ORDER BY ((((rt0.c1)LIKE(rt0.c1)))<<(rt0.c1))  NULLS FIRST INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE ((((rt0.c0, rt0.c3)) BETWEEN ((((((((-158137594)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)), ((rt0.c1)LIKE(rt0.c0)))) AND ((((NULL) NOTNULL), NULL)))) ORDER BY ((((rt0.c1)LIKE(rt0.c1)))<<(rt0.c1))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c4 AS TEXT) THEN ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c3)) WHEN ((rt0.c2)%(rt0.c4)) THEN ((rt0.c0)%(rt0.c3)) ELSE CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END END) ORDER BY CAST(((rt0.c4)*(rt0.c1)) AS BLOB);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c4 AS TEXT) THEN ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c3)) WHEN ((rt0.c2)%(rt0.c4)) THEN ((rt0.c0)%(rt0.c3)) ELSE CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END END) ORDER BY CAST(((rt0.c4)*(rt0.c1)) AS BLOB) LIMIT 0x0;
SELECT * FROM rt0 WHERE (((((((((((CAST(rt0.c2 AS INTEGER))OR((+ (rt0.c3)))))OR(rt0.c0 COLLATE RTRIM)))AND(HEX(NULL))))OR((- (NULL)))))AND((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (((((((((((CAST(rt0.c2 AS INTEGER))OR((+ (rt0.c3)))))OR(rt0.c0 COLLATE RTRIM)))AND(HEX(NULL))))OR((- (NULL)))))AND((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) LIMIT 0X0;
SELECT * FROM rt0 WHERE (((((((((((CAST(rt0.c2 AS INTEGER))OR((+ (rt0.c3)))))OR(rt0.c0 COLLATE RTRIM)))AND(HEX(NULL))))OR((- (NULL)))))AND((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (((((((((((CAST(rt0.c2 AS INTEGER))OR((+ (rt0.c3)))))OR(rt0.c0 COLLATE RTRIM)))AND(HEX(NULL))))OR((- (NULL)))))AND((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) LIMIT 0X0;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (TRIM(((((rt0.c3)AND(rt0.c3)))OR('')))) ORDER BY (((rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((CAST(rt0.c1 AS INTEGER), CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 WHEN 0x62c22c85 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END, CASE WHEN rt0.c3 THEN x'' END)) AND ((((((((rt0.c0)AND(0.5695271868825051)))AND(rt0.c1)))OR(rt0.c1)), CAST(rt0.c1 AS NUMERIC), (NOT (NULL)))));
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (TRIM(((((rt0.c3)AND(rt0.c3)))OR('')))) ORDER BY IFNULL(DISTINCT CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END, TRIM(DISTINCT rt0.c0, rt0.c3)) DESC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY IFNULL(DISTINCT CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END, TRIM(DISTINCT rt0.c0, rt0.c3)) DESC  NULLS LAST LIMIT 2;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CHAR(rt0.c4, rt0.c3) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(CHAR(rt0.c4, rt0.c3) AS NUMERIC))AND(((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((((rt0.c4)OR(rt0.c3)))OR(rt0.c0))) AND (((rt0.c0)/(rt0.c0))))))) LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((IFNULL(rt0.c3, rt0.c0)) ISNULL));
SELECT DISTINCT * FROM rt0 WHERE (((((IFNULL(rt0.c3, rt0.c0)) ISNULL))AND(NULL))) ORDER BY ((rt0.c4 COLLATE BINARY) NOT BETWEEN ((rt0.c1 IN (NULL, rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 WHEN '-322342703' THEN rt0.c0 END)), CAST(((rt0.c0) IS FALSE) AS INTEGER) ASC, (((((((NOT (rt0.c0)))OR(((rt0.c0) NOTNULL))))OR('DqN 	')))AND(((((rt0.c1)OR(0.16880143256797975)))AND(0xffffffffa1f06313)))) DESC  NULLS FIRST LIMIT 0X3;
SELECT ALL * FROM rt0 WHERE (((IFNULL(rt0.c3, rt0.c0)) ISNULL));
SELECT DISTINCT * FROM rt0 WHERE (((((IFNULL(rt0.c3, rt0.c0)) ISNULL))AND(NULL))) ORDER BY ((rt0.c4 COLLATE BINARY) NOT BETWEEN ((rt0.c1 IN (NULL, rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 WHEN '-322342703' THEN rt0.c0 END)), CAST(((rt0.c0) IS FALSE) AS INTEGER) ASC, (((((((NOT (rt0.c0)))OR(((rt0.c0) NOTNULL))))OR('DqN 	')))AND(((((rt0.c1)OR(0.16880143256797975)))AND(0xffffffffa1f06313)))) DESC  NULLS FIRST LIMIT 0X3;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) ORDER BY ((((((((((rt0.c1)*(rt0.c1)))AND(LENGTH('Yw'))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (x'')))))OR(CASE WHEN rt0.c4 THEN rt0.c3 ELSE x'' END)))AND(rt0.c4 COLLATE NOCASE)) ASC  NULLS FIRST LIMIT 0X1;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) ORDER BY ((((((((((rt0.c1)*(rt0.c1)))AND(LENGTH('Yw'))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (x'')))))OR(CASE WHEN rt0.c4 THEN rt0.c3 ELSE x'' END)))AND(rt0.c4 COLLATE NOCASE)) ASC  NULLS FIRST LIMIT 0X1;
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c4, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c4, rt0.c1))) AS BLOB)) ORDER BY CAST(((rt0.c2)GLOB(rt0.c2)) AS BLOB) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c4, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c4, rt0.c1))) AS BLOB)) ORDER BY (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))))<=((CAST(rt0.c0 AS BLOB))))  NULLS FIRST, ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END)%((((rt0.c1, rt0.c2, rt0.c0, rt0.c4)) BETWEEN ((rt0.c4, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c3, rt0.c1, rt0.c2)))));
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c4, x'', rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOTNULL), rt0.c0 COLLATE BINARY, NULLIF(rt0.c1, rt0.c1), (rt0.c4 IN (rt0.c3)), CAST(rt0.c4 AS REAL))) AND (((((rt0.c1))>((rt0.c0))), ((((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)), ((rt0.c0)IS NOT(rt0.c4)), rt0.c1 COLLATE BINARY, IFNULL(DISTINCT rt0.c4, rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1, rt0.c4, x'', rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOTNULL), rt0.c0 COLLATE BINARY, NULLIF(rt0.c1, rt0.c1), (rt0.c4 IN (rt0.c3)), CAST(rt0.c4 AS REAL))) AND (((((rt0.c1))>=((rt0.c0))), ((((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)), ((rt0.c0)IS NOT(rt0.c4)), rt0.c1 COLLATE BINARY, IFNULL(DISTINCT rt0.c4, rt0.c3))))) ORDER BY LIKELIHOOD(DISTINCT rt0.c2 COLLATE RTRIM, ((rt0.c0)IS(rt0.c1))) LIMIT 0X1;
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c4, x'', rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOTNULL), rt0.c0 COLLATE BINARY, NULLIF(rt0.c1, rt0.c1), (rt0.c4 IN (rt0.c3)), CAST(rt0.c4 AS REAL))) AND (((((rt0.c1))>((rt0.c0))), ((((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)), ((rt0.c0)IS NOT(rt0.c4)), rt0.c1 COLLATE BINARY, IFNULL(DISTINCT rt0.c4, rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1, rt0.c4, x'', rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOTNULL), rt0.c0 COLLATE BINARY, NULLIF(rt0.c1, rt0.c1), (rt0.c4 IN (rt0.c3)), CAST(rt0.c4 AS REAL))) AND (((((rt0.c1))>=((rt0.c0))), ((((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)), ((rt0.c0)IS NOT(rt0.c4)), rt0.c1 COLLATE BINARY, IFNULL(DISTINCT rt0.c4, rt0.c3))))) ORDER BY LIKELIHOOD(DISTINCT rt0.c2 COLLATE RTRIM, ((rt0.c0)IS(rt0.c1))) LIMIT 0X1;
SELECT MIN(rt0.c4) FROM rt0 WHERE (rt0.c4);
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (((rt0.c4)AND(((((0.42968495157844) IS FALSE)) IS TRUE)))) LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((((rt0.c2) IS FALSE)) ISNULL), rt0.c0;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((rt0.c3)AND(('d~' IN (((rt0.c4)AND(rt0.c4)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))))))) ORDER BY ((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST, (((rt0.c2, rt0.c4)) NOT BETWEEN ((((rt0.c0)GLOB(rt0.c1)), ((rt0.c0)&(NULL)))) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), NULL))) ASC, CAST(((rt0.c1)/(rt0.c2)) AS BLOB) ASC  NULLS LAST LIMIT 0;
SELECT * FROM rt0 WHERE (NULL);
SELECT DISTINCT * FROM rt0 WHERE (NULL) LIMIT 0X1;
SELECT * FROM rt0 WHERE (NULL);
SELECT DISTINCT * FROM rt0 WHERE (NULL) LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((((0.16386573107121039)+(rt0.c4)))<>(((('q'))<=((rt0.c4))))));
SELECT * FROM rt0 WHERE (((((0.16386573107121039)+(rt0.c4)))<(((('q'))<((rt0.c4)))))) ORDER BY ((rt0.c3) NOT NULL)  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (((((0.16386573107121039)+(rt0.c4)))<>(((('q'))<=((rt0.c4))))));
SELECT * FROM rt0 WHERE (((((0.16386573107121039)+(rt0.c4)))<(((('q'))<((rt0.c4)))))) ORDER BY ((rt0.c3) NOT NULL)  NULLS LAST LIMIT 0x1;
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (1689726239 COLLATE BINARY);
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((1689726239 COLLATE BINARY)AND((((((rt0.c0, rt0.c1, rt0.c3, x''))>=((rt0.c2, rt0.c2, rt0.c0, rt0.c2)))) IS TRUE)))) LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c3 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE ((~ (rt0.c3 COLLATE RTRIM))) ORDER BY rt0.c0 ASC, (~ (CASE rt0.c1  WHEN 0.48334667353261607 THEN rt0.c1 END)) LIMIT 0X0 INTERSECT SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0 ASC, (~ (CASE rt0.c1  WHEN 0.48334667353261607 THEN rt0.c1 END)) LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c3 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE ((~ (rt0.c3 COLLATE RTRIM))) ORDER BY rt0.c0 ASC, (~ (CASE rt0.c1  WHEN 0.48334667353261607 THEN rt0.c1 END)) LIMIT 0X0 INTERSECT SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0 ASC, (~ (CASE rt0.c1  WHEN 0.48334667353261607 THEN rt0.c1 END)) LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE (((((IFNULL(rt0.c0, rt0.c2))AND((((rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, rt0.c0, rt0.c4, rt0.c1)) AND (('', rt0.c3, rt0.c3, -1.654285559E9, rt0.c1))))))OR(CAST(rt0.c1 AS INTEGER))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((IFNULL(rt0.c0, rt0.c2))AND((((rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, rt0.c0, rt0.c4, rt0.c1)) AND (('', rt0.c3, rt0.c3, -1.654285559E9, rt0.c1))))))OR(CAST(rt0.c1 AS INTEGER)))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (rt0.c4 COLLATE BINARY COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4, rt0.c0, rt0.c2)) NOT BETWEEN ((((((((((0.6653574541903592)AND('-565359063')))AND(rt0.c0)))AND(0xffffffffa723cb5d)))OR(rt0.c3)), ((rt0.c4)/(rt0.c4)), ((((((rt0.c1)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))) AND ((((rt0.c2) IS TRUE), rt0.c0, ((rt0.c1) IS FALSE)))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((rt0.c4, rt0.c0, rt0.c2)) NOT BETWEEN ((((((((((0.6653574541903592)AND('-565359063')))AND(rt0.c0)))AND(0Xffffffffa723cb5d)))OR(rt0.c3)), ((rt0.c4)/(rt0.c4)), ((((((rt0.c1)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))) AND ((((rt0.c2) IS TRUE), rt0.c0, ((rt0.c1) IS FALSE))))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CASE ((NULL)/(rt0.c0))  WHEN (((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c3, rt0.c4, rt0.c4))) THEN CASE NULL  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END ELSE ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)) END);
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c2))!=((rt0.c2))))OR(((rt0.c2)+(rt0.c1)))))OR(0x7c19f01b)))AND((rt0.c3 IN ()))));
SELECT * FROM rt0 WHERE ((((((((((rt0.c2))>((rt0.c2))))OR(((rt0.c2)+(rt0.c1)))))OR(0x7c19f01b)))AND((rt0.c3 IN ())))) LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE ((((- (rt0.c3)))&((rt0.c0 IN ())))) LIMIT 2;
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c2))!=((rt0.c2))))OR(((rt0.c2)+(rt0.c1)))))OR(0x7c19f01b)))AND((rt0.c3 IN ()))));
SELECT * FROM rt0 WHERE ((((((((((rt0.c2))>((rt0.c2))))OR(((rt0.c2)+(rt0.c1)))))OR(0x7c19f01b)))AND((rt0.c3 IN ())))) LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE ((((- (rt0.c3)))&((rt0.c0 IN ())))) LIMIT 2;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) ISNULL));
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) ISNULL)) ORDER BY (((CAST(rt0.c3 AS REAL)))==((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN 0.050303213047676265 END))) DESC INTERSECT SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (DATETIME(rt0.c1, ((rt0.c2)>(rt0.c4)), 170075486, rt0.c2)) ORDER BY (((CAST(rt0.c3 AS REAL)))==((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN 0.050303213047676265 END))) DESC;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (CASE (((0.060785532646167595, rt0.c4, rt0.c3)) NOT BETWEEN (('z9L/}R', rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c4, rt0.c4)))  WHEN rt0.c0 THEN (((rt0.c4))<((rt0.c1))) WHEN rt0.c0 THEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) END);
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (CASE (((0.060785532646167595, rt0.c4, rt0.c3)) NOT BETWEEN (('z9L/}R', rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c4, rt0.c4)))  WHEN rt0.c0 THEN (((rt0.c4))<((rt0.c1))) WHEN rt0.c0 THEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) END) INTERSECT SELECT MIN(rt0.c4) FROM rt0 WHERE ((- (((rt0.c3) NOTNULL))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS FALSE)) IS FALSE)) ORDER BY ((((rt0.c3 IN ())))<(((rt0.c2 IN (rt0.c2, rt0.c2))))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) IS FALSE)) IS FALSE))AND(CHAR(rt0.c2 COLLATE RTRIM)))) ORDER BY ((((rt0.c3 IN ())))<(((rt0.c2 IN (rt0.c2, rt0.c2))))) ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS FALSE)) IS FALSE)) ORDER BY ((((rt0.c3 IN ())))<(((rt0.c2 IN (rt0.c2, rt0.c2))))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) IS FALSE)) IS FALSE))AND(CHAR(rt0.c2 COLLATE RTRIM)))) ORDER BY ((((rt0.c3 IN ())))<(((rt0.c2 IN (rt0.c2, rt0.c2))))) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (7.1996702E8) AND (rt0.c1)) COLLATE NOCASE);
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (7.1996702E8) AND (rt0.c1)) COLLATE NOCASE)AND(COALESCE(LOWER(rt0.c3), (NOT (rt0.c1)), ((rt0.c2)|(0.21723496077492876)))))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (7.1996702E8) AND (rt0.c1)) COLLATE NOCASE);
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (7.1996702E8) AND (rt0.c1)) COLLATE NOCASE)AND(COALESCE(LOWER(rt0.c3), (NOT (rt0.c1)), ((rt0.c2)|(0.21723496077492876)))))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((((((((0.26611255929943967) NOT NULL))OR(rt0.c4)))AND((('65z?Ot') NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND(CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM rt0 WHERE (((((((((((0.26611255929943967) NOT NULL))OR(rt0.c4)))AND((('65z?Ot') NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND(CAST(rt0.c1 AS BLOB))))AND((((rt0.c2 COLLATE RTRIM, ((((rt0.c4)OR(0.8175635480336231)))OR(rt0.c1))))<=((rt0.c0, rt0.c1)))))) ORDER BY CAST((+ (rt0.c3)) AS NUMERIC), json(((rt0.c2)-(rt0.c3))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((((0.26611255929943967) NOT NULL))OR(rt0.c4)))AND((('65z?Ot') NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND(CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM rt0 WHERE (((((((((((0.26611255929943967) NOT NULL))OR(rt0.c4)))AND((('65z?Ot') NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND(CAST(rt0.c1 AS BLOB))))AND((((rt0.c2 COLLATE RTRIM, ((((rt0.c4)OR(0.8175635480336231)))OR(rt0.c1))))<=((rt0.c0, rt0.c1)))))) ORDER BY CAST((+ (rt0.c3)) AS NUMERIC), json(((rt0.c2)-(rt0.c3))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c3))>=((rt0.c2, rt0.c2))))%(-76563004)));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0, rt0.c3))>((rt0.c2, rt0.c2))))%(-76563004))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (((rt0.c2))<((rt0.c2))) THEN (((rt0.c0, rt0.c4, rt0.c2))>=((rt0.c4, rt0.c1, rt0.c0))) WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) THEN ((rt0.c0)|(rt0.c3)) ELSE (((rt0.c2, rt0.c3))>((rt0.c2, rt0.c4))) END) LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c3))>=((rt0.c2, rt0.c2))))%(-76563004)));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0, rt0.c3))>((rt0.c2, rt0.c2))))%(-76563004))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (((rt0.c2))<((rt0.c2))) THEN (((rt0.c0, rt0.c4, rt0.c2))>=((rt0.c4, rt0.c1, rt0.c0))) WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) THEN ((rt0.c0)|(rt0.c3)) ELSE (((rt0.c2, rt0.c3))>((rt0.c2, rt0.c4))) END) LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END IN ()))AND(CASE WHEN UPPER(rt0.c3) THEN (rt0.c3 IN (rt0.c2)) WHEN (((rt0.c2, rt0.c1)) BETWEEN ((x'f9', rt0.c0)) AND ((rt0.c3, rt0.c2))) THEN x'13df' WHEN ((rt0.c1) ISNULL) THEN rt0.c4 END))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END IN ()))AND(CASE WHEN UPPER(rt0.c3) THEN (rt0.c3 IN (rt0.c2)) WHEN (((rt0.c2, rt0.c1)) BETWEEN ((x'f9', rt0.c0)) AND ((rt0.c3, rt0.c2))) THEN x'13df' WHEN ((rt0.c1) ISNULL) THEN rt0.c4 END))) LIMIT 0X0;
SELECT MAX(rt0.c4) FROM rt0 WHERE ((+ (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1))))) ORDER BY CAST((((rt0.c2, rt0.c1))>((rt0.c4, rt0.c1))) AS NUMERIC) DESC  NULLS LAST, ((((rt0.c0)||(rt0.c0))) BETWEEN ('_') AND ((+ (rt0.c0)))) DESC  NULLS LAST;
SELECT MAX(rt0.c4) FROM rt0 WHERE ((+ (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1))))) ORDER BY CAST((((rt0.c2, rt0.c1))>((rt0.c4, rt0.c1))) AS NUMERIC) DESC  NULLS LAST, ((((rt0.c0)||(rt0.c0))) BETWEEN ('_') AND ((+ (rt0.c0)))) DESC  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)GLOB(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)GLOB(rt0.c2))) ISNULL)) INTERSECT SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c0)>>(rt0.c0))) AND (TRIM(rt0.c3, rt0.c0))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)GLOB(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)GLOB(rt0.c2))) ISNULL)) INTERSECT SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c0)>>(rt0.c0))) AND (TRIM(rt0.c3, rt0.c0))));
SELECT MAX(rt0.c1) FROM rt0 WHERE ((+ (((rt0.c4)|(rt0.c3))))) ORDER BY ((((rt0.c2)/(rt0.c3)))<<(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))), ((rt0.c0) IS TRUE)  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE ((+ (((rt0.c4)|(rt0.c3))))) ORDER BY ((((((((CAST(rt0.c2 AS BLOB))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)))))OR(((rt0.c2)>>(1.963081765E9)))))AND(((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))) DESC  NULLS FIRST, ((((((((((((rt0.c3) ISNULL))OR((((rt0.c2, '-322342703')) NOT BETWEEN ((rt0.c0, rt0.c0)) AND ((2039131043, rt0.c2))))))OR(LIKELY(rt0.c1))))AND(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)))OR(CAST(rt0.c4 AS REAL))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))  NULLS LAST INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((((((((CAST(rt0.c2 AS BLOB))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)))))OR(((rt0.c2)>>(1.963081765E9)))))AND(((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))) DESC  NULLS FIRST, ((((((((((((rt0.c3) ISNULL))OR((((rt0.c2, '-322342703')) NOT BETWEEN ((rt0.c0, rt0.c0)) AND ((2039131043, rt0.c2))))))OR(LIKELY(rt0.c1))))AND(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)))OR(CAST(rt0.c4 AS REAL))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))  NULLS LAST;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((((((((((CAST(rt0.c0 AS INTEGER))AND((x'' IN (rt0.c1, rt0.c3)))))OR(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END)))OR(((rt0.c2)+(rt0.c2)))))AND((- (rt0.c1)))))AND(((rt0.c4) NOT NULL)))) ORDER BY x'76' ASC, HEX(DISTINCT ((NULL) NOT NULL));
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((((((((((((CAST(rt0.c0 AS INTEGER))AND((x'' IN (rt0.c1)))))OR(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END)))OR(((rt0.c2)+(rt0.c2)))))AND((- (rt0.c1)))))AND(((rt0.c4) NOT NULL))))AND((rt0.c0 IN ()) COLLATE NOCASE))) ORDER BY ((rt0.c3) NOT NULL) COLLATE BINARY DESC  NULLS LAST LIMIT 0X1 INTERSECT SELECT MIN(rt0.c1) FROM rt0 WHERE (((rt0.c2)GLOB(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY ((rt0.c3) NOT NULL) COLLATE BINARY DESC  NULLS LAST LIMIT 1;
SELECT MIN(rt0.c3) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN ('-1828303826') AND (rt0.c4)));
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN ('-1828303826') AND (rt0.c4)))AND((- (rt0.c3)) COLLATE RTRIM))) ORDER BY rt0.c1 ASC, (~ (LIKELIHOOD(rt0.c2, rt0.c2))) ASC  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (CAST((+ (rt0.c0)) AS REAL)) ORDER BY rt0.c1 ASC, (~ (LIKELIHOOD(rt0.c2, rt0.c2))) ASC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL))AND((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c1)) IN ())))) ORDER BY LTRIM(TRIM('sb'), ''), (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ()) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CASE 0.9296819120304664  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 END) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c1)IS NOT(rt0.c0))))) ORDER BY LTRIM(TRIM('sb'), ''), (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ());
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL))AND((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c1)) IN ())))) ORDER BY LTRIM(TRIM('sb'), ''), (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ()) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CASE 0.9296819120304664  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 END) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c1)IS NOT(rt0.c0))))) ORDER BY LTRIM(TRIM('sb'), ''), (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ());
SELECT * FROM rt0 WHERE ((((((rt0.c1)&(rt0.c1))))>=((NULL)))) ORDER BY ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))<>(((rt0.c4)GLOB(rt0.c2)))) ASC  NULLS FIRST, (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) IN (load_extension(rt0.c1, rt0.c4), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN 'fm' END)) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((rt0.c1)&(rt0.c1))))>=((NULL)))) ORDER BY CASE WHEN ((rt0.c4) NOT BETWEEN (0Xffffffffa7f048c8) AND (rt0.c2)) THEN json_insert(rt0.c2, rt0.c1, rt0.c4, rt0.c2, rt0.c1) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c4, x'', rt0.c4, rt0.c3))>(('', rt0.c3, rt0.c4, rt0.c4))) END DESC, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))GLOB(TYPEOF(rt0.c3))) DESC LIMIT 1 INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((rt0.c4) NOT BETWEEN (0xffffffffa7f048c8) AND (rt0.c2)) THEN json_insert(rt0.c2, rt0.c1, rt0.c4, rt0.c2, rt0.c1) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c4, x'', rt0.c4, rt0.c3))>(('', rt0.c3, rt0.c4, rt0.c4))) END DESC, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))GLOB(TYPEOF(rt0.c3))) DESC LIMIT 0X1;
SELECT * FROM rt0 WHERE ((((((rt0.c1)&(rt0.c1))))>=((NULL)))) ORDER BY ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))<>(((rt0.c4)GLOB(rt0.c2)))) ASC  NULLS FIRST, (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) IN (load_extension(rt0.c1, rt0.c4), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN 'fm' END)) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((rt0.c1)&(rt0.c1))))>=((NULL)))) ORDER BY CASE WHEN ((rt0.c4) NOT BETWEEN (0Xffffffffa7f048c8) AND (rt0.c2)) THEN json_insert(rt0.c2, rt0.c1, rt0.c4, rt0.c2, rt0.c1) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c4, x'', rt0.c4, rt0.c3))>(('', rt0.c3, rt0.c4, rt0.c4))) END DESC, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))GLOB(TYPEOF(rt0.c3))) DESC LIMIT 1 INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((rt0.c4) NOT BETWEEN (0xffffffffa7f048c8) AND (rt0.c2)) THEN json_insert(rt0.c2, rt0.c1, rt0.c4, rt0.c2, rt0.c1) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (((rt0.c4, x'', rt0.c4, rt0.c3))>(('', rt0.c3, rt0.c4, rt0.c4))) END DESC, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))GLOB(TYPEOF(rt0.c3))) DESC LIMIT 0X1;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE ((NOT (((1436703206) IS TRUE)))) ORDER BY ((((rt0.c4)IS NOT(rt0.c0)))/(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END));
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE ((((NOT (((0X55a259e6) IS TRUE))))AND(ABS(rt0.c0) COLLATE RTRIM))) ORDER BY NULL DESC  NULLS LAST, ((((((COALESCE(rt0.c2, rt0.c2, rt0.c0))AND(IFNULL(rt0.c3, rt0.c2))))OR(rt0.c0)))AND(rt0.c0)) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)<<(rt0.c4))) ORDER BY (NOT (((rt0.c3) NOTNULL))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)<<(rt0.c4)))AND(((CAST(rt0.c1 AS BLOB)) IS FALSE)))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (-1548045697))) BETWEEN (((-665800004)|(rt0.c4))) AND (rt0.c0 COLLATE BINARY))  NULLS LAST, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(((rt0.c4) NOTNULL))))OR(((rt0.c0)/(rt0.c1)))) DESC  NULLS LAST INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (0xffffffffa3bab27f))) BETWEEN (((-665800004)|(rt0.c4))) AND (rt0.c0 COLLATE BINARY))  NULLS LAST, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(((rt0.c4) NOTNULL))))OR(((rt0.c0)/(rt0.c1)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)<<(rt0.c4))) ORDER BY (NOT (((rt0.c3) NOTNULL))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)<<(rt0.c4)))AND(((CAST(rt0.c1 AS BLOB)) IS FALSE)))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (-1548045697))) BETWEEN (((-665800004)|(rt0.c4))) AND (rt0.c0 COLLATE BINARY))  NULLS LAST, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(((rt0.c4) NOTNULL))))OR(((rt0.c0)/(rt0.c1)))) DESC  NULLS LAST INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (0xffffffffa3bab27f))) BETWEEN (((-665800004)|(rt0.c4))) AND (rt0.c0 COLLATE BINARY))  NULLS LAST, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))AND(((rt0.c4) NOTNULL))))OR(((rt0.c0)/(rt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END)))OR(CASE WHEN rt0.c2 THEN rt0.c1 END)))AND((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))))) ORDER BY ((((rt0.c1)/(rt0.c2))) NOT NULL)  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((((rt0.c0)AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END)))OR(CASE WHEN rt0.c2 THEN rt0.c1 END)))AND((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(((CAST(rt0.c3 AS INTEGER))>=(((((rt0.c0)AND(rt0.c0)))AND(rt0.c3))))))) ORDER BY ((((rt0.c1)/(rt0.c2))) NOT NULL)  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN (CAST(rt0.c3 AS INTEGER), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END))) ORDER BY ((((rt0.c1)/(rt0.c2))) NOT NULL)  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END)))OR(CASE WHEN rt0.c2 THEN rt0.c1 END)))AND((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))))) ORDER BY ((((rt0.c1)/(rt0.c2))) NOT NULL)  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((((rt0.c0)AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END)))OR(CASE WHEN rt0.c2 THEN rt0.c1 END)))AND((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(((CAST(rt0.c3 AS INTEGER))>=(((((rt0.c0)AND(rt0.c0)))AND(rt0.c3))))))) ORDER BY ((((rt0.c1)/(rt0.c2))) NOT NULL)  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN (CAST(rt0.c3 AS INTEGER), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END))) ORDER BY ((((rt0.c1)/(rt0.c2))) NOT NULL)  NULLS LAST LIMIT 0;
SELECT MAX(rt0.c3) FROM rt0 WHERE ((+ (((rt0.c0) IS FALSE)))) ORDER BY NULL, (((rt0.c0)) BETWEEN (((~ (rt0.c2)))) AND ((NULL))) ASC;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE ((((+ (((rt0.c0) IS FALSE))))AND(rt0.c0))) ORDER BY NULL, (((rt0.c0)) BETWEEN (((~ (rt0.c2)))) AND ((NULL))) ASC INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS NUMERIC)) ORDER BY NULL, (((rt0.c0)) BETWEEN (((~ (rt0.c2)))) AND ((NULL))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2)IS NOT(rt0.c3)))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2)IS NOT(rt0.c3))))) ORDER BY ((LIKELIHOOD(rt0.c4, rt0.c0)) NOT BETWEEN (((NULL)!=(rt0.c3))) AND ((('l')-(rt0.c2)))) ASC, ((((1558308800) IS FALSE))AND(CAST(rt0.c0 AS BLOB))), ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c4) ISNULL)) AND (((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)))) DESC LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c2)+(rt0.c4)))IS((((rt0.c0, rt0.c3, rt0.c4))>((rt0.c2, rt0.c4, NULL)))))) ORDER BY ((LIKELIHOOD(rt0.c4, rt0.c0)) NOT BETWEEN (((NULL)!=(rt0.c3))) AND ((('l')-(rt0.c2)))) ASC, ((((1558308800) IS FALSE))AND(CAST(rt0.c0 AS BLOB))), ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c4) ISNULL)) AND (((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)))) DESC LIMIT 0;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c4))IS(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((((rt0.c2)|(rt0.c2)))LIKE(((rt0.c2)IS NOT(x'f4471d')))) ASC  NULLS LAST, ((((('5b')&(rt0.c1))))=((((rt0.c4) IS FALSE))))  NULLS LAST;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((((TRIM(DISTINCT rt0.c4))IS(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((((rt0.c3)LIKE(rt0.c2))) NOTNULL)))) ORDER BY ((((rt0.c2)|(rt0.c2)))LIKE(((rt0.c2)IS NOT(x'f4471d')))) ASC  NULLS LAST, ((((('5b')&(rt0.c1))))=((((rt0.c4) IS FALSE))))  NULLS LAST INTERSECT SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(LIKELIHOOD(rt0.c1, rt0.c0))))OR(((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))))OR(((rt0.c4)IS NOT(rt0.c3)))))OR(rt0.c4 COLLATE BINARY))) ORDER BY ((((rt0.c2)|(rt0.c2)))LIKE(((rt0.c2)IS NOT(x'f4471d')))) ASC  NULLS LAST, ((((('5b')&(rt0.c1))))==((((rt0.c4) IS FALSE))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c4 THEN x'b0f02b' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END AS NUMERIC)) ORDER BY ((CAST(rt0.c3 AS BLOB)) NOTNULL)  NULLS FIRST, (+ (rt0.c3)) COLLATE NOCASE;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c4 THEN x'b0f02b' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END AS NUMERIC)) ORDER BY ((CAST(rt0.c3 AS BLOB)) NOTNULL)  NULLS FIRST, (+ (rt0.c3)) COLLATE NOCASE;
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)/((rt0.c0 IN (rt0.c1))))) ORDER BY CASE rt0.c2  WHEN (NOT (rt0.c2)) THEN ((rt0.c4) IS FALSE) WHEN NULL THEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END ELSE (NOT (x'a96642')) END, -1.268073866E9 DESC  NULLS LAST, LIKELIHOOD(DISTINCT CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 END), ((CASE x''  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN NULL ELSE rt0.c1 END)||((((rt0.c3, rt0.c0, rt0.c0, rt0.c4))>=((rt0.c2, rt0.c3, rt0.c1, rt0.c4)))))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3 COLLATE NOCASE)/((rt0.c0 IN (rt0.c1)))))AND('0.20414887539015325'))) ORDER BY (((((rt0.c2, rt0.c1, rt0.c3))!=((rt0.c1, rt0.c0, rt0.c0)))) NOT BETWEEN (((0.4191205935978667) NOTNULL)) AND (((((((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))OR(x'')))OR(rt0.c1)))AND(rt0.c1)))) DESC, IFNULL(((rt0.c0)%(rt0.c0)), ((rt0.c0) ISNULL)) DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)/((rt0.c0 IN (rt0.c1))))) ORDER BY CASE rt0.c2  WHEN (NOT (rt0.c2)) THEN ((rt0.c4) IS FALSE) WHEN NULL THEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END ELSE (NOT (x'a96642')) END, -1.268073866E9 DESC  NULLS LAST, LIKELIHOOD(DISTINCT CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 END), ((CASE x''  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN NULL ELSE rt0.c1 END)||((((rt0.c3, rt0.c0, rt0.c0, rt0.c4))>=((rt0.c2, rt0.c3, rt0.c1, rt0.c4)))))  NULLS FIRST;
SELECT MAX(rt0.c3) FROM rt0 WHERE ((((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<>(((((rt0.c2))!=((rt0.c0))), (+ (rt0.c0)))))) ORDER BY ((rt0.c2 COLLATE NOCASE) NOT NULL)  NULLS FIRST, (((-3.06832129E8)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((0.6016400182583505)))  NULLS LAST, (((((rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c1, 0.2208182203599408, rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c3))))|(rt0.c3)), (('4-Tw6XoᏪ') NOT BETWEEN (rt0.c3) AND (rt0.c4)) DESC;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE ((((((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<(((((rt0.c2))<((rt0.c0))), (+ (rt0.c0))))))AND(((CAST(x'73' AS INTEGER)) NOTNULL)))) ORDER BY ((rt0.c2 COLLATE NOCASE) NOT NULL)  NULLS FIRST, (((-3.06832129E8)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((0.6016400182583505)))  NULLS LAST, (((((rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c1, 0.2208182203599408, rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c3))))|(rt0.c3)), (('4-Tw6XoᏪ') NOT BETWEEN (rt0.c3) AND (rt0.c4)) DESC LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB))>(NULL)));
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))>(NULL)))AND(CASE WHEN ((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c4)) THEN CAST(rt0.c1 AS INTEGER) ELSE json_remove(rt0.c2, 0.749058354466069, rt0.c3) END))) INTERSECT SELECT ALL * FROM rt0 WHERE (CHANGES());
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB))>(NULL)));
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))>(NULL)))AND(CASE WHEN ((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c4)) THEN CAST(rt0.c1 AS INTEGER) ELSE json_remove(rt0.c2, 0.749058354466069, rt0.c3) END))) INTERSECT SELECT ALL * FROM rt0 WHERE (CHANGES());
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3 IN (rt0.c1))))==((((rt0.c3)-(rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c3 IN (rt0.c1))))==((((rt0.c3)-(rt0.c2))))))AND((rt0.c0 IN ())))) INTERSECT SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((x'65')OR(rt0.c4)) THEN ((rt0.c0)OR(rt0.c0)) WHEN ((rt0.c4) ISNULL) THEN ((rt0.c1)<>(rt0.c2)) WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c4)*(rt0.c1)) ELSE ((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)AND((rt0.c0 IN ()))))OR('B')))OR(((rt0.c0) IS TRUE))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)AND((rt0.c0 IN ()))))OR('B')))OR(((rt0.c0) IS TRUE)))) ORDER BY MIN((((rt0.c1))==((rt0.c4))), HEX(rt0.c2)) DESC, CAST(rt0.c1 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4 IN ()))||(((rt0.c3) NOT BETWEEN (rt0.c4) AND ('*'))))) ORDER BY ((((+ (rt0.c3)), CASE WHEN 4.09810737E8 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END))>=((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c1)), (((rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c2)))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4 IN ()))||(((rt0.c3) NOT BETWEEN (rt0.c4) AND ('*')))))AND((+ ((rt0.c4 IN (rt0.c3, rt0.c0))))))) ORDER BY ((((+ (rt0.c3)), CASE WHEN 4.09810737E8 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END))>=((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c1)), (((rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c2)))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4 IN ()))||(((rt0.c3) NOT BETWEEN (rt0.c4) AND ('*'))))) ORDER BY ((((+ (rt0.c3)), CASE WHEN 4.09810737E8 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END))>=((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c1)), (((rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c2)))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4 IN ()))||(((rt0.c3) NOT BETWEEN (rt0.c4) AND ('*')))))AND((+ ((rt0.c4 IN (rt0.c3, rt0.c0))))))) ORDER BY ((((+ (rt0.c3)), CASE WHEN 4.09810737E8 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END))>=((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c1)), (((rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c2)))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)>>(rt0.c4)))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)>>(rt0.c4))))) LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((+ (rt0.c3))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))) NOTNULL)) INTERSECT SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((((((rt0.c3)OR(rt0.c0)))OR(NULL)))OR(rt0.c2))) AND ((rt0.c0 IN (rt0.c4)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))) NOTNULL)) INTERSECT SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((((((rt0.c3)OR(rt0.c0)))OR(NULL)))OR(rt0.c2))) AND ((rt0.c0 IN (rt0.c4)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)))<(((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)))<(((((rt0.c0)OR(rt0.c0)))AND(rt0.c3))))) LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (0.46230050332395267) LIMIT 2;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)))<(((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)))<(((((rt0.c0)OR(rt0.c0)))AND(rt0.c3))))) LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (0.46230050332395267) LIMIT 2;
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN ('563243751') AND ('n&碥D%J')))IS NOT((NOT (0.358972790283809))))) ORDER BY ((((rt0.c2)IS(rt0.c4)))>(((rt0.c1)-(rt0.c0))))  NULLS LAST, (((~ (x'6880'))) NOT BETWEEN (1.66394907E9) AND ((('193945051')+(0Xffffffffc64a8f3e))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) BETWEEN ('563243751') AND ('n&碥D%J')))IS NOT((NOT (0.358972790283809))))) ORDER BY ((((rt0.c2)IS(rt0.c4)))>(((rt0.c1)-(rt0.c0))))  NULLS LAST, (((~ (x'6880'))) NOT BETWEEN (1.66394907E9) AND ((('193945051')+(-968192194)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB)) ORDER BY ((((rt0.c2)IS(rt0.c4)))>(((rt0.c1)-(rt0.c0))))  NULLS LAST, (((~ (x'6880'))) NOT BETWEEN (1.66394907E9) AND ((('193945051')+(-968192194)))) LIMIT 1;
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN ('563243751') AND ('n&碥D%J')))IS NOT((NOT (0.358972790283809))))) ORDER BY ((((rt0.c2)IS(rt0.c4)))>(((rt0.c1)-(rt0.c0))))  NULLS LAST, (((~ (x'6880'))) NOT BETWEEN (1.66394907E9) AND ((('193945051')+(0Xffffffffc64a8f3e))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) BETWEEN ('563243751') AND ('n&碥D%J')))IS NOT((NOT (0.358972790283809))))) ORDER BY ((((rt0.c2)IS(rt0.c4)))>(((rt0.c1)-(rt0.c0))))  NULLS LAST, (((~ (x'6880'))) NOT BETWEEN (1.66394907E9) AND ((('193945051')+(-968192194)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB)) ORDER BY ((((rt0.c2)IS(rt0.c4)))>(((rt0.c1)-(rt0.c0))))  NULLS LAST, (((~ (x'6880'))) NOT BETWEEN (1.66394907E9) AND ((('193945051')+(-968192194)))) LIMIT 1;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))AND((((('Y|5')AND(rt0.c2)))AND(rt0.c0))))) ORDER BY CASE WHEN rtreenode(rt0.c0, x'dc3f') THEN CAST(rt0.c4 AS REAL) WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c0) IS FALSE) END DESC  NULLS LAST, ((CAST(rt0.c4 AS TEXT)) ISNULL) DESC;
SELECT MIN(rt0.c1) FROM rt0 WHERE (((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))AND((((('Y|5')AND(rt0.c2)))AND(rt0.c0))))) ORDER BY CASE WHEN rtreenode(rt0.c0, x'dc3f') THEN CAST(rt0.c4 AS REAL) WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c0) IS FALSE) END DESC  NULLS LAST, ((CAST(rt0.c4 AS TEXT)) ISNULL) DESC LIMIT 0;
SELECT MIN(rt0.c1) FROM rt0 WHERE (((UNLIKELY(rt0.c0)) BETWEEN (((rt0.c0) NOT NULL)) AND (1525876419))) ORDER BY (((((((rt0.c4 IN ()))OR(((rt0.c3) NOTNULL))))OR(((rt0.c2)>(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END))  NULLS FIRST;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((UNLIKELY(rt0.c0)) BETWEEN (((rt0.c0) NOT NULL)) AND (0x5af306c3))) ORDER BY (((((((rt0.c4 IN ()))OR(((rt0.c3) NOTNULL))))OR(((rt0.c2)>(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END))  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE ((rt0.c3)/(rt0.c1))  WHEN ((rt0.c1) IS FALSE) THEN (- (rt0.c3)) WHEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)) THEN CAST(rt0.c1 AS REAL) WHEN ((x'53') NOTNULL) THEN ((rt0.c3)<<(rt0.c1)) END) ORDER BY json_type(rt0.c4) COLLATE BINARY  NULLS FIRST, ((0.9623383813202022) IS TRUE)  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE ((rt0.c3)/(rt0.c1))  WHEN ((rt0.c1) IS FALSE) THEN (- (rt0.c3)) WHEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)) THEN CAST(rt0.c1 AS REAL) WHEN ((x'53') NOTNULL) THEN ((rt0.c3)<<(rt0.c1)) END) ORDER BY ((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1))) NOT NULL)  NULLS FIRST LIMIT 0X4 INTERSECT SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE ')迺D' END) BETWEEN (((rt0.c3) NOTNULL)) AND (((((rt0.c4)AND('QW2')))AND(rt0.c1))))) ORDER BY ((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1))) NOT NULL)  NULLS FIRST LIMIT 4;
SELECT * FROM rt0 WHERE (CASE ((rt0.c3)/(rt0.c1))  WHEN ((rt0.c1) IS FALSE) THEN (- (rt0.c3)) WHEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)) THEN CAST(rt0.c1 AS REAL) WHEN ((x'53') NOTNULL) THEN ((rt0.c3)<<(rt0.c1)) END) ORDER BY json_type(rt0.c4) COLLATE BINARY  NULLS FIRST, ((0.9623383813202022) IS TRUE)  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE ((rt0.c3)/(rt0.c1))  WHEN ((rt0.c1) IS FALSE) THEN (- (rt0.c3)) WHEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)) THEN CAST(rt0.c1 AS REAL) WHEN ((x'53') NOTNULL) THEN ((rt0.c3)<<(rt0.c1)) END) ORDER BY ((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1))) NOT NULL)  NULLS FIRST LIMIT 0X4 INTERSECT SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE ')迺D' END) BETWEEN (((rt0.c3) NOTNULL)) AND (((((rt0.c4)AND('QW2')))AND(rt0.c1))))) ORDER BY ((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1))) NOT NULL)  NULLS FIRST LIMIT 4;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))) AND ((rt0.c3 COLLATE RTRIM))));
SELECT MAX(rt0.c2) FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))) AND ((rt0.c3 COLLATE RTRIM))));
SELECT MIN(rt0.c0) FROM rt0 WHERE (rt0.c2);
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (((rt0.c2)AND(NULL))) ORDER BY ((rt0.c0 COLLATE BINARY) IS FALSE), ((rt0.c1) ISNULL) COLLATE RTRIM  NULLS LAST INTERSECT SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (JULIANDAY(rt0.c0 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))) ORDER BY ((rt0.c0 COLLATE BINARY) IS FALSE), ((rt0.c1) ISNULL) COLLATE RTRIM  NULLS LAST;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (rt0.c4) ORDER BY rt0.c4 DESC;
SELECT MAX(rt0.c3) FROM rt0 WHERE (((rt0.c4)AND(((((((((1.941015625E9)OR(rt0.c1 COLLATE BINARY)))OR((((rt0.c2, rt0.c2, 355702741))>((rt0.c4, rt0.c4, rt0.c1))))))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 END)))AND((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))))) ORDER BY rt0.c4 DESC LIMIT 0;
SELECT * FROM rt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((LIKE(rt0.c2, rt0.c4))>(((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((LIKE(rt0.c2, rt0.c4))>(((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) IS TRUE) THEN rt0.c2 WHEN CAST(rt0.c2 AS NUMERIC) THEN GLOB('(W쭝Lw', rt0.c1) END) ORDER BY ((LIKE(rt0.c2, rt0.c4))>(((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((LIKE(rt0.c2, rt0.c4))>(((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((LIKE(rt0.c2, rt0.c4))>(((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) IS TRUE) THEN rt0.c2 WHEN CAST(rt0.c2 AS NUMERIC) THEN GLOB('(W쭝Lw', rt0.c1) END) ORDER BY ((LIKE(rt0.c2, rt0.c4))>(((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)+(rt0.c1)) AS NUMERIC));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)+(rt0.c1)) AS NUMERIC)) ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM  NULLS LAST, ((CAST(rt0.c0 AS NUMERIC))&(((((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))) DESC LIMIT 3;
SELECT * FROM rt0 WHERE (((((rt0.c4) BETWEEN (x'') AND (rt0.c3)))OR(((-33291152) NOT BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (x'') AND (rt0.c3)))OR(((-33291152) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))AND((NOT (COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c2, rt0.c1)))))) ORDER BY CAST(((rt0.c3)&(rt0.c3)) AS NUMERIC) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (((json_extract(rt0.c1, rt0.c0, 0.3363812129553627)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c2 COLLATE RTRIM))) ORDER BY CAST(((rt0.c3)&(rt0.c3)) AS NUMERIC) LIMIT 0;
SELECT * FROM rt0 WHERE (((((rt0.c4) BETWEEN (x'') AND (rt0.c3)))OR(((-33291152) NOT BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (x'') AND (rt0.c3)))OR(((-33291152) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))AND((NOT (COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c2, rt0.c1)))))) ORDER BY CAST(((rt0.c3)&(rt0.c3)) AS NUMERIC) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE (((json_extract(rt0.c1, rt0.c0, 0.3363812129553627)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c2 COLLATE RTRIM))) ORDER BY CAST(((rt0.c3)&(rt0.c3)) AS NUMERIC) LIMIT 0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL))*(rt0.c4 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))*(rt0.c4 COLLATE BINARY)))AND(NULLIF((- (rt0.c0)), ((rt0.c4)%(-4.0304134E8)))))) INTERSECT SELECT * FROM rt0 WHERE (x'5b');
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL))*(rt0.c4 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))*(rt0.c4 COLLATE BINARY)))AND(NULLIF((- (rt0.c0)), ((rt0.c4)%(-4.0304134E8)))))) INTERSECT SELECT * FROM rt0 WHERE (x'5b');
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) IS TRUE)) NOT NULL)) ORDER BY (((((rt0.c3))>=((rt0.c4)))) NOTNULL);
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) IS TRUE)) NOT NULL)) ORDER BY (((((rt0.c3))>=((rt0.c4)))) NOTNULL) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c3))>=((rt0.c4)))) NOTNULL) LIMIT 2;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) IS TRUE)) NOT NULL)) ORDER BY (((((rt0.c3))>=((rt0.c4)))) NOTNULL);
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) IS TRUE)) NOT NULL)) ORDER BY (((((rt0.c3))>=((rt0.c4)))) NOTNULL) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c3))>=((rt0.c4)))) NOTNULL) LIMIT 2;
SELECT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1))) AS INTEGER));
SELECT DISTINCT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1))) AS INTEGER)) ORDER BY 0.3644930334480747 DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1))) AS INTEGER));
SELECT DISTINCT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1))) AS INTEGER)) ORDER BY 0.3644930334480747 DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((((((~ (rt0.c4)))OR(rt0.c3)))OR(rt0.c4)))AND((rt0.c2 IN (rt0.c2, rt0.c3)))))OR(rt0.c4))) ORDER BY CASE (((rt0.c0, rt0.c2))<((rt0.c2, rt0.c4)))  WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN '-1508947706' END;
SELECT ALL * FROM rt0 WHERE ((((((((((((~ (rt0.c4)))OR(rt0.c3)))OR(rt0.c4)))AND((rt0.c2 IN (rt0.c2)))))OR(rt0.c4)))AND(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))OR(402012172)))<=(-51308065))))) ORDER BY ((((((419230197)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY, ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END)|(((rt0.c2)<<(rt0.c1)))), CASE ((rt0.c0)||(rt0.c0))  WHEN ((rt0.c2)>(rt0.c1)) THEN (rt0.c0 IN (rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)) THEN CAST(rt0.c2 AS TEXT) ELSE CAST(rt0.c1 AS BLOB) END  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((((((~ (rt0.c4)))OR(rt0.c3)))OR(rt0.c4)))AND((rt0.c2 IN (rt0.c2, rt0.c3)))))OR(rt0.c4))) ORDER BY CASE (((rt0.c0, rt0.c2))<((rt0.c2, rt0.c4)))  WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN '-1508947706' END;
SELECT ALL * FROM rt0 WHERE ((((((((((((~ (rt0.c4)))OR(rt0.c3)))OR(rt0.c4)))AND((rt0.c2 IN (rt0.c2)))))OR(rt0.c4)))AND(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))OR(402012172)))<=(-51308065))))) ORDER BY ((((((419230197)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY, ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END)|(((rt0.c2)<<(rt0.c1)))), CASE ((rt0.c0)||(rt0.c0))  WHEN ((rt0.c2)>(rt0.c1)) THEN (rt0.c0 IN (rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)) THEN CAST(rt0.c2 AS TEXT) ELSE CAST(rt0.c1 AS BLOB) END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))<((((rt0.c1, rt0.c4))>=((rt0.c2, rt0.c2))))));
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))<((((rt0.c1, rt0.c4))=((rt0.c2, rt0.c2)))))) INTERSECT SELECT * FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))OR(((rt0.c2)>>(rt0.c1)))))OR(rt0.c3)))AND(COALESCE(rt0.c2, rt0.c3, rt0.c4))))OR(CAST(rt0.c2 AS NUMERIC))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))<((((rt0.c1, rt0.c4))>=((rt0.c2, rt0.c2))))));
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))<((((rt0.c1, rt0.c4))=((rt0.c2, rt0.c2)))))) INTERSECT SELECT * FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))OR(((rt0.c2)>>(rt0.c1)))))OR(rt0.c3)))AND(COALESCE(rt0.c2, rt0.c3, rt0.c4))))OR(CAST(rt0.c2 AS NUMERIC))));
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((IFNULL(rt0.c0, rt0.c0)) BETWEEN ((- (NULL))) AND (rt0.c0)));
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((((IFNULL(rt0.c0, rt0.c0)) BETWEEN ((- (NULL))) AND (rt0.c0)))AND(CAST(rt0.c3 COLLATE BINARY AS NUMERIC)))) INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE ((((rt0.c2 IN ()))GLOB((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))==(((((rt0.c1)AND(rt0.c0)))AND(rt0.c4))))) ORDER BY (((('.') BETWEEN (rt0.c3) AND (rt0.c0))) IS FALSE) DESC;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))==(((((rt0.c1)AND(rt0.c0)))AND(rt0.c4)))))AND((rt0.c0 IN ()) COLLATE RTRIM))) ORDER BY (((('.') BETWEEN (rt0.c3) AND (rt0.c0))) IS FALSE) DESC;
SELECT * FROM rt0 WHERE (((SQLITE_VERSION()) NOT NULL)) ORDER BY LIKELIHOOD(DISTINCT (((rt0.c4, rt0.c4, rt0.c4))>=((rt0.c1, rt0.c0, rt0.c3))), ((((0.7449298806890902)AND(rt0.c0)))AND(rt0.c1))) DESC, (((((((((rt0.c2))<((rt0.c0))))OR(((rt0.c2)<=(rt0.c2)))))OR(((rt0.c4)OR(rt0.c3)))))OR(CAST(rt0.c3 AS INTEGER))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((SQLITE_VERSION()) NOT NULL)) ORDER BY (NOT (((rt0.c2)>>(rt0.c1))))  NULLS FIRST, CASE rt0.c3 COLLATE RTRIM  WHEN ((rt0.c1)>=(rt0.c2)) THEN CASE '-1343471093'  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN NULL THEN rt0.c0 ELSE rt0.c2 END END, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END COLLATE RTRIM  NULLS LAST LIMIT 0X3;
SELECT * FROM rt0 WHERE (((SQLITE_VERSION()) NOT NULL)) ORDER BY LIKELIHOOD(DISTINCT (((rt0.c4, rt0.c4, rt0.c4))>=((rt0.c1, rt0.c0, rt0.c3))), ((((0.7449298806890902)AND(rt0.c0)))AND(rt0.c1))) DESC, (((((((((rt0.c2))<((rt0.c0))))OR(((rt0.c2)<=(rt0.c2)))))OR(((rt0.c4)OR(rt0.c3)))))OR(CAST(rt0.c3 AS INTEGER))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((- (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))) ORDER BY (((((((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c1))))))AND(CAST(rt0.c2 AS TEXT))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC, CASE ((rt0.c1)GLOB(rt0.c3))  WHEN ((rt0.c4)>=(rt0.c0)) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END ELSE '1026875241' END;
SELECT ALL * FROM rt0 WHERE ((((- (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))))AND(0.4274742935820923))) ORDER BY (((((((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c1))))))AND(CAST(rt0.c2 AS TEXT))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC, CASE ((rt0.c1)GLOB(rt0.c3))  WHEN ((rt0.c4)>=(rt0.c0)) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END ELSE '1026875241' END LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((- (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))) ORDER BY (((((((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c1))))))AND(CAST(rt0.c2 AS TEXT))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC, CASE ((rt0.c1)GLOB(rt0.c3))  WHEN ((rt0.c4)>=(rt0.c0)) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END ELSE '1026875241' END;
SELECT ALL * FROM rt0 WHERE ((((- (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))))AND(0.4274742935820923))) ORDER BY (((((((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c1))))))AND(CAST(rt0.c2 AS TEXT))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC, CASE ((rt0.c1)GLOB(rt0.c3))  WHEN ((rt0.c4)>=(rt0.c0)) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END ELSE '1026875241' END LIMIT 0X0;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)-(rt0.c0)))+('-862041157' COLLATE BINARY))) ORDER BY (+ (((rt0.c3) NOT NULL))), 595711314  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)-(rt0.c0)))+('-862041157' COLLATE BINARY))) ORDER BY x'b5', (NOT (((rt0.c0) IS FALSE))) ASC  NULLS FIRST INTERSECT SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c0))) BETWEEN ((rt0.c3 IN (rt0.c0, '9vটK%K'))) AND (((rt0.c4) NOT NULL)))) ORDER BY x'b5', (NOT (((rt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((0.36475971000365837 COLLATE RTRIM IN (((rt0.c4)%(rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE ((((0.36475971000365837 COLLATE RTRIM IN (((rt0.c4)%(rt0.c1)))))AND(ABS(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (-1.834650494E9) LIMIT 0X2;
SELECT * FROM rt0 WHERE ((0.36475971000365837 COLLATE RTRIM IN (((rt0.c4)%(rt0.c1)))));
SELECT DISTINCT * FROM rt0 WHERE ((((0.36475971000365837 COLLATE RTRIM IN (((rt0.c4)%(rt0.c1)))))AND(ABS(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (-1.834650494E9) LIMIT 0X2;
SELECT MAX(rt0.c1) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN x'77b77c' WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END AS BLOB));
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN x'77b77c' WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (0X25a6f2f4) ORDER BY NULLIF(DISTINCT ((rt0.c3)<(rt0.c2)), ((rt0.c2)>(rt0.c2))), rt0.c4;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((631698164)AND(((((CAST(rt0.c3 AS BLOB))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))))AND('y'))))) ORDER BY NULLIF(DISTINCT ((rt0.c3)<(rt0.c2)), ((rt0.c2)>(rt0.c2))), rt0.c4 LIMIT 2;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) AS TEXT));
SELECT MIN(rt0.c2) FROM rt0 WHERE (((CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) AS TEXT))AND((LTRIM(rt0.c4) IN ())))) LIMIT 0x1 INTERSECT SELECT MIN(rt0.c2) FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c4)))OR(0x115255f7)))AND(rt0.c1))) NOT BETWEEN (((rt0.c3)>=(rt0.c1))) AND (((rt0.c1)>=(rt0.c0))))) LIMIT 1;
SELECT * FROM rt0 WHERE (CAST((- (rt0.c2)) AS BLOB)) ORDER BY x'38', (((rt0.c3 IN (rt0.c0, rt0.c2))) BETWEEN ((- (1.525876419E9))) AND (((rt0.c4)/(rt0.c3))))  NULLS FIRST, CASE (rt0.c3 IN ())  WHEN CAST(0.9698893285220187 AS NUMERIC) THEN rt0.c3 WHEN rt0.c0 THEN (rt0.c1 IN (rt0.c4)) WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c3)<=(rt0.c2)) THEN TRIM(rt0.c4, rt0.c4) ELSE ((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)) END DESC;
SELECT ALL * FROM rt0 WHERE (CAST((- (rt0.c2)) AS BLOB)) ORDER BY CASE WHEN (+ ('-926384875')) THEN (rt0.c4 IN (rt0.c2)) WHEN ((0x2381d552)GLOB(rt0.c0)) THEN x'' END ASC, (- ((rt0.c3 IN ()))) DESC INTERSECT SELECT * FROM rt0 WHERE (((((((((rt0.c3)AND(rt0.c1)))AND(((rt0.c1) ISNULL))))OR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)))AND(((rt0.c2)<(rt0.c1))))) ORDER BY CASE WHEN (+ ('-926384875')) THEN (rt0.c4 IN (rt0.c2)) WHEN ((0x2381d552)GLOB(rt0.c0)) THEN x'' END ASC, (- ((rt0.c3 IN ()))) DESC;
SELECT * FROM rt0 WHERE (CAST((- (rt0.c2)) AS BLOB)) ORDER BY x'38', (((rt0.c3 IN (rt0.c0, rt0.c2))) BETWEEN ((- (1.525876419E9))) AND (((rt0.c4)/(rt0.c3))))  NULLS FIRST, CASE (rt0.c3 IN ())  WHEN CAST(0.9698893285220187 AS NUMERIC) THEN rt0.c3 WHEN rt0.c0 THEN (rt0.c1 IN (rt0.c4)) WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c3)<=(rt0.c2)) THEN TRIM(rt0.c4, rt0.c4) ELSE ((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)) END DESC;
SELECT ALL * FROM rt0 WHERE (CAST((- (rt0.c2)) AS BLOB)) ORDER BY CASE WHEN (+ ('-926384875')) THEN (rt0.c4 IN (rt0.c2)) WHEN ((0x2381d552)GLOB(rt0.c0)) THEN x'' END ASC, (- ((rt0.c3 IN ()))) DESC INTERSECT SELECT * FROM rt0 WHERE (((((((((rt0.c3)AND(rt0.c1)))AND(((rt0.c1) ISNULL))))OR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)))AND(((rt0.c2)<(rt0.c1))))) ORDER BY CASE WHEN (+ ('-926384875')) THEN (rt0.c4 IN (rt0.c2)) WHEN ((0x2381d552)GLOB(rt0.c0)) THEN x'' END ASC, (- ((rt0.c3 IN ()))) DESC;
SELECT MIN(rt0.c3) FROM rt0 WHERE (((rt0.c1) IS FALSE));
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((rt0.c1) IS FALSE)) ORDER BY (((rt0.c3)) BETWEEN ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN '0.722967209956647' END)) AND ((((rt0.c3)OR(rt0.c3))))), rt0.c2, ((rt0.c1)GLOB(rt0.c3)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS NUMERIC)) BETWEEN (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4))) AND (((((rt0.c2)AND(x'bf57')))AND(-5.81623797E8)))));
SELECT * FROM rt0 WHERE (((((CAST(rt0.c3 AS NUMERIC)) BETWEEN (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4))) AND (((((rt0.c2)AND(x'bf57')))AND(-5.81623797E8)))))AND((((rt0.c2, rt0.c4, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c2 END, CAST(rt0.c1 AS TEXT), rt0.c0)) AND ((((rt0.c1) ISNULL), COALESCE(DISTINCT rt0.c2, rt0.c3, rt0.c3, rt0.c0, 'unSgxP'), (rt0.c1 IN (rt0.c2)))))))) ORDER BY (CAST(rt0.c3 AS BLOB) IN ()) ASC, rt0.c2  NULLS LAST, ((((rt0.c0) NOT NULL)) IS FALSE) INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (CAST(rt0.c3 AS BLOB) IN ()) ASC, rt0.c2  NULLS LAST, ((((rt0.c0) NOT NULL)) IS FALSE);
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS NUMERIC)) BETWEEN (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4))) AND (((((rt0.c2)AND(x'bf57')))AND(-5.81623797E8)))));
SELECT * FROM rt0 WHERE (((((CAST(rt0.c3 AS NUMERIC)) BETWEEN (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4))) AND (((((rt0.c2)AND(x'bf57')))AND(-5.81623797E8)))))AND((((rt0.c2, rt0.c4, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c2 END, CAST(rt0.c1 AS TEXT), rt0.c0)) AND ((((rt0.c1) ISNULL), COALESCE(DISTINCT rt0.c2, rt0.c3, rt0.c3, rt0.c0, 'unSgxP'), (rt0.c1 IN (rt0.c2)))))))) ORDER BY (CAST(rt0.c3 AS BLOB) IN ()) ASC, rt0.c2  NULLS LAST, ((((rt0.c0) NOT NULL)) IS FALSE) INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (CAST(rt0.c3 AS BLOB) IN ()) ASC, rt0.c2  NULLS LAST, ((((rt0.c0) NOT NULL)) IS FALSE);
SELECT MIN(rt0.c2) FROM rt0 WHERE (((rt0.c4 COLLATE RTRIM) NOTNULL));
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (((rt0.c4 COLLATE RTRIM) NOTNULL)) LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (rt0.c3) LIMIT 0;
SELECT * FROM rt0 WHERE (CASE CAST(rt0.c4 AS REAL)  WHEN (+ (NULL)) THEN ((rt0.c4) NOTNULL) ELSE (((('-1904867303')OR(rt0.c4)))OR(-994734260)) END) ORDER BY (((rt0.c0 IN ()))IS((((rt0.c0, rt0.c3)) BETWEEN ((rt0.c4, rt0.c4)) AND ((NULL, rt0.c1))))) DESC  NULLS LAST, CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CASE CAST(rt0.c4 AS REAL)  WHEN (+ (NULL)) THEN ((rt0.c4) NOTNULL) ELSE (((('-1904867303')OR(rt0.c4)))OR(-994734260)) END)AND(((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END) NOTNULL)))) ORDER BY (((rt0.c0 IN ()))IS((((rt0.c0, rt0.c3)) BETWEEN ((rt0.c4, rt0.c4)) AND ((NULL, rt0.c1))))) DESC  NULLS LAST, CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT LIKELY(DISTINCT rt0.c1))) ORDER BY (((rt0.c0 IN ()))IS((((rt0.c0, rt0.c3)) BETWEEN ((rt0.c4, rt0.c4)) AND ((NULL, rt0.c1))))) DESC  NULLS LAST, CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE CAST(rt0.c4 AS REAL)  WHEN (+ (NULL)) THEN ((rt0.c4) NOTNULL) ELSE (((('-1904867303')OR(rt0.c4)))OR(-994734260)) END) ORDER BY (((rt0.c0 IN ()))IS((((rt0.c0, rt0.c3)) BETWEEN ((rt0.c4, rt0.c4)) AND ((NULL, rt0.c1))))) DESC  NULLS LAST, CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CASE CAST(rt0.c4 AS REAL)  WHEN (+ (NULL)) THEN ((rt0.c4) NOTNULL) ELSE (((('-1904867303')OR(rt0.c4)))OR(-994734260)) END)AND(((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END) NOTNULL)))) ORDER BY (((rt0.c0 IN ()))IS((((rt0.c0, rt0.c3)) BETWEEN ((rt0.c4, rt0.c4)) AND ((NULL, rt0.c1))))) DESC  NULLS LAST, CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT LIKELY(DISTINCT rt0.c1))) ORDER BY (((rt0.c0 IN ()))IS((((rt0.c0, rt0.c3)) BETWEEN ((rt0.c4, rt0.c4)) AND ((NULL, rt0.c1))))) DESC  NULLS LAST, CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((((+ (rt0.c3))) IS TRUE));
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((((((+ (rt0.c3))) IS TRUE))AND(((rt0.c0) IS TRUE))));
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT (((rt0.c2))==((rt0.c3))), rt0.c1));
SELECT DISTINCT * FROM rt0 WHERE (((IFNULL(DISTINCT (((rt0.c2))==((rt0.c3))), rt0.c1))AND(((((rt0.c0) NOTNULL))|(((rt0.c1)IS NOT(rt0.c0))))))) ORDER BY 0.09177745456049491, (- (CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c4)))AND(1.138630752E9)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END) ORDER BY 0.09177745456049491, (- (CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT (((rt0.c2))==((rt0.c3))), rt0.c1));
SELECT DISTINCT * FROM rt0 WHERE (((IFNULL(DISTINCT (((rt0.c2))==((rt0.c3))), rt0.c1))AND(((((rt0.c0) NOTNULL))|(((rt0.c1)IS NOT(rt0.c0))))))) ORDER BY 0.09177745456049491, (- (CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c4)))AND(1.138630752E9)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END) ORDER BY 0.09177745456049491, (- (CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST LIMIT 0x1;
SELECT * FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c2)))<=(CAST(rt0.c3 AS NUMERIC))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c2)))<(CAST(rt0.c3 AS NUMERIC)))) ORDER BY (rt0.c4 COLLATE NOCASE IN ())  NULLS LAST, ((UNLIKELY(DISTINCT rt0.c4)) BETWEEN (x'14c4e18f') AND (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END));
SELECT * FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c2)))<=(CAST(rt0.c3 AS NUMERIC))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c2)))<(CAST(rt0.c3 AS NUMERIC)))) ORDER BY (rt0.c4 COLLATE NOCASE IN ())  NULLS LAST, ((UNLIKELY(DISTINCT rt0.c4)) BETWEEN (x'14c4e18f') AND (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END));
SELECT * FROM rt0 NOT INDEXED WHERE ((NOT (x'3d'))) ORDER BY ((rt0.c3) IS FALSE) COLLATE NOCASE ASC;
SELECT * FROM rt0 WHERE ((((NOT (x'3d')))AND(CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL)))) ORDER BY ((rt0.c3) IS FALSE) COLLATE NOCASE ASC;
SELECT * FROM rt0 NOT INDEXED WHERE ((NOT (x'3d'))) ORDER BY ((rt0.c3) IS FALSE) COLLATE NOCASE ASC;
SELECT * FROM rt0 WHERE ((((NOT (x'3d')))AND(CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL)))) ORDER BY ((rt0.c3) IS FALSE) COLLATE NOCASE ASC;
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)AND(((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)))LIKE(CAST(rt0.c3 AS NUMERIC)))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ ((((NULL, rt0.c3))>=((rt0.c3, rt0.c4)))))) LIMIT 0x0;
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)AND(((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)))LIKE(CAST(rt0.c3 AS NUMERIC)))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((~ ((((NULL, rt0.c3))>=((rt0.c3, rt0.c4)))))) LIMIT 0x0;
SELECT MAX(rt0.c4) FROM rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END AS INTEGER)) ORDER BY rt0.c4 DESC  NULLS LAST;
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END AS INTEGER)) ORDER BY rt0.c4 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY CAST((rt0.c0 IN (rt0.c2)) AS NUMERIC) ASC, HEX(DISTINCT ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))  NULLS FIRST, (+ (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY CAST((rt0.c0 IN (rt0.c2)) AS NUMERIC) ASC, HEX(DISTINCT ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))  NULLS FIRST, (+ (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))) LIMIT 2;
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c4 END AS INTEGER));
SELECT DISTINCT * FROM rt0 WHERE (((CAST(CASE WHEN rt0.c0 THEN rt0.c4 END AS INTEGER))AND('*nt/mx]f唵'))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1))) ISNULL) ASC  NULLS LAST, ((((rt0.c4)<(rt0.c2)))/(rt0.c1 COLLATE BINARY)) ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CAST(0.18589762890134032 AS INTEGER))) AND ((((rt0.c2)OR(rt0.c0)))))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1))) ISNULL) ASC  NULLS LAST, ((((rt0.c4)<(rt0.c2)))/(rt0.c1 COLLATE BINARY)) ASC;
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c4 END AS INTEGER));
SELECT DISTINCT * FROM rt0 WHERE (((CAST(CASE WHEN rt0.c0 THEN rt0.c4 END AS INTEGER))AND('*nt/mx]f唵'))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1))) ISNULL) ASC  NULLS LAST, ((((rt0.c4)<(rt0.c2)))/(rt0.c1 COLLATE BINARY)) ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CAST(0.18589762890134032 AS INTEGER))) AND ((((rt0.c2)OR(rt0.c0)))))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1))) ISNULL) ASC  NULLS LAST, ((((rt0.c4)<(rt0.c2)))/(rt0.c1 COLLATE BINARY)) ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c4)) BETWEEN (('wxY6IkGg', rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, x'7ae1'))) COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c4)) BETWEEN (('wxY6IkGg', rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, x'7ae1'))) COLLATE RTRIM) LIMIT 2 INTERSECT SELECT ALL * FROM rt0 WHERE ((- (((rt0.c4)IS NOT(rt0.c1))))) LIMIT 2;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c4)) BETWEEN (('wxY6IkGg', rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, x'7ae1'))) COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c4)) BETWEEN (('wxY6IkGg', rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, x'7ae1'))) COLLATE RTRIM) LIMIT 2 INTERSECT SELECT ALL * FROM rt0 WHERE ((- (((rt0.c4)IS NOT(rt0.c1))))) LIMIT 2;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (LIKELY(rt0.c0));
SELECT MAX(rt0.c0) FROM rt0 WHERE (((LIKELY(rt0.c0))AND(((((((((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END)AND(((rt0.c4) BETWEEN (rt0.c1) AND (0.3180940990617248)))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE 0.2475720474653964 END)))OR(rt0.c2 COLLATE NOCASE)))AND(((rt0.c1)>>(rt0.c4))))))) LIMIT 0x3 INTERSECT SELECT ALL MAX(rt0.c0) FROM rt0 WHERE ((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))))==((x'')))) LIMIT 0X3;
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS NUMERIC)) IS FALSE));
SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c4 AS NUMERIC)) IS FALSE))AND(rt0.c2)));
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS NUMERIC)) IS FALSE));
SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c4 AS NUMERIC)) IS FALSE))AND(rt0.c2)));
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (rt0.c1) ORDER BY (((((((- (rt0.c3)))AND(0.12568823631040027)))AND(rt0.c3 COLLATE NOCASE)))AND(((((((rt0.c0)AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c3)))) ASC  NULLS LAST, ((TRIM(DISTINCT rt0.c0)) BETWEEN (((rt0.c0) IS TRUE)) AND (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4))));
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE (((rt0.c1)AND(((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)))AND(NULL))) NOTNULL)))) ORDER BY (((((((- (rt0.c3)))AND(0.12568823631040027)))AND(rt0.c3 COLLATE NOCASE)))AND(((((((rt0.c0)AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c3)))) ASC  NULLS LAST, ((TRIM(DISTINCT rt0.c0)) BETWEEN (((rt0.c0) IS TRUE)) AND (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))) INTERSECT SELECT MIN(rt0.c4) FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))%(TYPEOF(DISTINCT rt0.c0)))) ORDER BY (((((((- (rt0.c3)))AND(0.12568823631040027)))AND(rt0.c3 COLLATE NOCASE)))AND(((((((rt0.c0)AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c3)))) ASC  NULLS LAST, ((TRIM(DISTINCT rt0.c0)) BETWEEN (((rt0.c0) IS TRUE)) AND (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((json_array_length(rt0.c2))) AND (((('-1840384088') NOTNULL)))));
SELECT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((json_array_length(rt0.c2))) AND (((('-1840384088') NOTNULL)))))AND(CAST((rt0.c1 IN (rt0.c0)) AS BLOB)))) LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c3) LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((json_array_length(rt0.c2))) AND (((('-1840384088') NOTNULL)))));
SELECT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((json_array_length(rt0.c2))) AND (((('-1840384088') NOTNULL)))))AND(CAST((rt0.c1 IN (rt0.c0)) AS BLOB)))) LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c3) LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (((rt0.c4 IN (rt0.c4, rt0.c0, rt0.c0)) IN (CAST(rt0.c1 AS BLOB))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4 IN (rt0.c4, rt0.c0, rt0.c0)) IN (CAST(rt0.c1 AS BLOB))))AND((((((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))OR((((rt0.c0))<=((rt0.c3))))))OR(((rt0.c1)/(rt0.c1)))))OR(((rt0.c2) ISNULL))))OR((((rt0.c0, rt0.c1, rt0.c1))>((rt0.c4, rt0.c0, rt0.c1)))))))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c4 IN (rt0.c4, rt0.c0, rt0.c0)) IN (CAST(rt0.c1 AS BLOB))));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4 IN (rt0.c4, rt0.c0, rt0.c0)) IN (CAST(rt0.c1 AS BLOB))))AND((((((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))OR((((rt0.c0))<=((rt0.c3))))))OR(((rt0.c1)/(rt0.c1)))))OR(((rt0.c2) ISNULL))))OR((((rt0.c0, rt0.c1, rt0.c1))>((rt0.c4, rt0.c0, rt0.c1)))))))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY rt0.c1  NULLS FIRST, CAST(CASE rt0.c3  WHEN NULL THEN rt0.c4 WHEN rt0.c2 THEN NULL ELSE rt0.c0 END AS REAL)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY rt0.c1  NULLS FIRST, CAST(CASE rt0.c3  WHEN NULL THEN rt0.c4 WHEN rt0.c2 THEN NULL ELSE rt0.c0 END AS REAL)  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c3)))AND(0.7188754164273924)))OR(rt0.c1))) IS TRUE)) ORDER BY rt0.c1  NULLS FIRST, CAST(CASE rt0.c3  WHEN NULL THEN rt0.c4 WHEN rt0.c2 THEN NULL ELSE rt0.c0 END AS REAL)  NULLS LAST LIMIT 2;
SELECT * FROM rt0 WHERE ((- ((- (rt0.c0))))) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY ASC, (+ (CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))  NULLS FIRST, 0.6487859775513825 COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((- ((- (rt0.c0)))))AND('-1268073866'))) ORDER BY (~ (((rt0.c0)>(rt0.c3)))), (((rt0.c0)IS(rt0.c1)) IN (CAST(rt0.c3 AS INTEGER), ((rt0.c3)LIKE(rt0.c2)))) ASC  NULLS FIRST LIMIT 0x2;
SELECT * FROM rt0 WHERE ((- ((- (rt0.c0))))) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY ASC, (+ (CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))  NULLS FIRST, 0.6487859775513825 COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((- ((- (rt0.c0)))))AND('-1268073866'))) ORDER BY (~ (((rt0.c0)>(rt0.c3)))), (((rt0.c0)IS(rt0.c1)) IN (CAST(rt0.c3 AS INTEGER), ((rt0.c3)LIKE(rt0.c2)))) ASC  NULLS FIRST LIMIT 0x2;
SELECT MAX(rt0.c3) FROM rt0 WHERE (CASE rt0.c0  WHEN (((rt0.c1, rt0.c0, x'd1'))<=((rt0.c4, '(?', rt0.c0))) THEN CASE rt0.c1  WHEN 0.8082494924816727 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END WHEN (NOT (rt0.c4)) THEN IFNULL(rt0.c3, rt0.c2) WHEN (rt0.c3 IN ()) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN TRIM(rt0.c0) THEN (rt0.c4 IN (rt0.c4)) END) ORDER BY ((rt0.c1 COLLATE NOCASE) NOT NULL) DESC, CASE -8.63639657E8  WHEN ((0.2652097511001127)<(rt0.c4)) THEN rt0.c1 COLLATE NOCASE ELSE ((((rt0.c3)OR(rt0.c1)))AND(rt0.c2)) END DESC  NULLS FIRST;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (CASE rt0.c0  WHEN (((rt0.c1, rt0.c0, x'd1'))<((rt0.c4, '(?', rt0.c0))) THEN CASE rt0.c1  WHEN 0.8082494924816727 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END WHEN (NOT (rt0.c4)) THEN IFNULL(rt0.c3, rt0.c2) WHEN (rt0.c3 IN ()) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN TRIM(rt0.c0) THEN (rt0.c4 IN (rt0.c4)) END) ORDER BY ((rt0.c1 COLLATE NOCASE) NOT NULL) DESC, CASE -8.63639657E8  WHEN ((0.2652097511001127)<(rt0.c4)) THEN rt0.c1 COLLATE NOCASE ELSE ((((rt0.c3)OR(rt0.c1)))AND(rt0.c2)) END DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT ALL MAX(rt0.c3) FROM rt0 WHERE ((((((x'', rt0.c1, rt0.c3))<>((rt0.c4, NULL, rt0.c1)))) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0)|(rt0.c0))))) ORDER BY ((rt0.c1 COLLATE NOCASE) NOT NULL) DESC, CASE -8.63639657E8  WHEN ((0.2652097511001127)<(rt0.c4)) THEN rt0.c1 COLLATE NOCASE ELSE ((((rt0.c3)OR(rt0.c1)))AND(rt0.c2)) END DESC  NULLS FIRST LIMIT 0x1;
SELECT * FROM rt0 WHERE (((rt0.c3)<=(rt0.c4)) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)<=(rt0.c4)) COLLATE BINARY)AND(CASE WHEN ((((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c4)) THEN (((rt0.c4, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c4, rt0.c0, rt0.c4))) END))) ORDER BY (((((((('nw~^1ꤥC!*' COLLATE NOCASE)OR((rt0.c3 IN (rt0.c2)))))AND('_')))OR(rt0.c0)))OR(((((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)))) DESC  NULLS FIRST, CAST(CAST(rt0.c4 AS BLOB) AS INTEGER) ASC  NULLS LAST LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)AND(NULL)))AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)) COLLATE BINARY) ORDER BY (((((((('nw~^1ꤥC!*' COLLATE NOCASE)OR((rt0.c3 IN (rt0.c2)))))AND('_')))OR(rt0.c0)))OR(((((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)))) DESC  NULLS FIRST, CAST(CAST(rt0.c4 AS BLOB) AS INTEGER) ASC  NULLS LAST LIMIT 0X1;
SELECT * FROM rt0 WHERE (((rt0.c3)<=(rt0.c4)) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)<=(rt0.c4)) COLLATE BINARY)AND(CASE WHEN ((((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c4)) THEN (((rt0.c4, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c4, rt0.c0, rt0.c4))) END))) ORDER BY (((((((('nw~^1ꤥC!*' COLLATE NOCASE)OR((rt0.c3 IN (rt0.c2)))))AND('_')))OR(rt0.c0)))OR(((((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)))) DESC  NULLS FIRST, CAST(CAST(rt0.c4 AS BLOB) AS INTEGER) ASC  NULLS LAST LIMIT 0X1 INTERSECT SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)AND(NULL)))AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)) COLLATE BINARY) ORDER BY (((((((('nw~^1ꤥC!*' COLLATE NOCASE)OR((rt0.c3 IN (rt0.c2)))))AND('_')))OR(rt0.c0)))OR(((((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)))) DESC  NULLS FIRST, CAST(CAST(rt0.c4 AS BLOB) AS INTEGER) ASC  NULLS LAST LIMIT 0X1;
SELECT MAX(rt0.c1) FROM rt0 WHERE (((rt0.c1)|((rt0.c2 IN (rt0.c2, rt0.c2)))));
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (((rt0.c1)|((rt0.c2 IN (rt0.c2))))) ORDER BY CAST((rt0.c1 IN ()) AS TEXT) DESC  NULLS FIRST, ((((rt0.c4)*(rt0.c2)))<(((rt0.c1) IS FALSE))) DESC  NULLS FIRST INTERSECT SELECT MAX(rt0.c1) FROM rt0 WHERE ((((rt0.c1 IN (0.5622880935244342)))*(CAST(rt0.c1 AS BLOB)))) ORDER BY CAST((rt0.c1 IN ()) AS TEXT) DESC  NULLS FIRST, ((((rt0.c4)*(rt0.c2)))<(((rt0.c1) IS FALSE))) DESC  NULLS FIRST;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((~ (((rt0.c4) NOT NULL))));
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE ((~ (((rt0.c4) NOT NULL)))) LIMIT 1 INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE ((~ ((((rt0.c4, rt0.c1, rt0.c0, rt0.c2))!=((rt0.c0, rt0.c0, rt0.c2, '')))))) LIMIT 0X1;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)))LIKE(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c0) NOTNULL)) NOT BETWEEN (((rt0.c3)AND(rt0.c1))) AND ('-1732286791' COLLATE NOCASE)) DESC;
SELECT * FROM rt0 WHERE ((- (((rt0.c2)<<(rt0.c3)))));
SELECT * FROM rt0 WHERE ((- (((rt0.c2)<<(rt0.c3))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END)=((+ (rt0.c4)))) DESC  NULLS FIRST, ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((- (((rt0.c2)<<(rt0.c3)))));
SELECT * FROM rt0 WHERE ((- (((rt0.c2)<<(rt0.c3))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END)=((+ (rt0.c4)))) DESC  NULLS FIRST, ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c0))<>((rt0.c4, rt0.c0, rt0.c2))) COLLATE RTRIM) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END)||((rt0.c0 IN (rt0.c3, rt0.c4))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c0, rt0.c0))<((rt0.c4, rt0.c0, rt0.c2))) COLLATE RTRIM)AND(((((rt0.c3))=((rt0.c3))) IN ())))) ORDER BY (((rt0.c1 IN ()))LIKE(((rt0.c1)IS NOT(rt0.c1)))) DESC  NULLS LAST, (((rt0.c3))==((rt0.c3))) COLLATE NOCASE ASC, ((CASE WHEN rt0.c4 THEN rt0.c0 END)-(((rt0.c4)LIKE(rt0.c1)))) ASC  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c4) IS TRUE) WHEN ((rt0.c3)!=(rt0.c3)) THEN (((((((('P')AND(rt0.c1)))AND(x'9ec15dc042')))AND(NULL)))OR(rt0.c2)) ELSE (rt0.c2 IN (rt0.c2, rt0.c2)) END) ORDER BY ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))>>((rt0.c2 IN ()))) ASC, rt0.c2  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c4) IS TRUE) WHEN ((rt0.c3)<(rt0.c3)) THEN (((((((('P')AND(rt0.c1)))AND(x'9ec15dc042')))AND(NULL)))OR(rt0.c2)) ELSE (rt0.c2 IN (rt0.c2, rt0.c2)) END)AND(rt0.c2))) ORDER BY (((- (rt0.c3)))OR(((rt0.c1)<=(rt0.c1))))  NULLS FIRST, ((((rt0.c1)|(rt0.c0))) ISNULL) DESC INTERSECT SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (((- (rt0.c3)))OR(((rt0.c1)<=(rt0.c1))))  NULLS FIRST, ((((rt0.c1)|(rt0.c0))) ISNULL) DESC;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c4) IS TRUE) WHEN ((rt0.c3)!=(rt0.c3)) THEN (((((((('P')AND(rt0.c1)))AND(x'9ec15dc042')))AND(NULL)))OR(rt0.c2)) ELSE (rt0.c2 IN (rt0.c2, rt0.c2)) END) ORDER BY ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))>>((rt0.c2 IN ()))) ASC, rt0.c2  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c4) IS TRUE) WHEN ((rt0.c3)<(rt0.c3)) THEN (((((((('P')AND(rt0.c1)))AND(x'9ec15dc042')))AND(NULL)))OR(rt0.c2)) ELSE (rt0.c2 IN (rt0.c2, rt0.c2)) END)AND(rt0.c2))) ORDER BY (((- (rt0.c3)))OR(((rt0.c1)<=(rt0.c1))))  NULLS FIRST, ((((rt0.c1)|(rt0.c0))) ISNULL) DESC INTERSECT SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (((- (rt0.c3)))OR(((rt0.c1)<=(rt0.c1))))  NULLS FIRST, ((((rt0.c1)|(rt0.c0))) ISNULL) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (json_remove(((rt0.c4)>(rt0.c4)), ((rt0.c0)||(rt0.c0)), STRFTIME(rt0.c2, 0x79f40600, rt0.c4, rt0.c0)));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (json_remove(((rt0.c4)>(rt0.c4)), ((rt0.c0)||(rt0.c0)), STRFTIME(rt0.c2, 2046035456, rt0.c4, rt0.c0))) LIMIT 4 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (rt0.c2) LIMIT 4;
SELECT ALL MIN(rt0.c4) FROM rt0 WHERE ((((((((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))OR(CAST(rt0.c3 AS BLOB))))OR(((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c4)))))AND(((((rt0.c0)AND(rt0.c4)))OR(rt0.c2)))))OR(NULL COLLATE RTRIM)))AND(TYPEOF(rt0.c2)))) ORDER BY ((((rt0.c1)-(rt0.c1))) NOT NULL);
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE ((((((((((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))OR(CAST(rt0.c3 AS BLOB))))OR(((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c4)))))AND(((((rt0.c0)AND(rt0.c4)))OR(rt0.c2)))))OR(NULL COLLATE RTRIM)))AND(TYPEOF(rt0.c2))))AND(((rt0.c3 IN (rt0.c1, rt0.c2)) IN ())))) ORDER BY CASE (((rt0.c2))>=((rt0.c2)))  WHEN rt0.c4 THEN rt0.c1 WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN (NOT (rt0.c0)) WHEN CASE rt0.c4  WHEN ']' THEN rt0.c4 WHEN '197003680' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 END THEN (rt0.c3 IN (rt0.c4)) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c4)||(rt0.c0)) WHEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 END THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END ELSE 0.7276397822502392 COLLATE RTRIM END, (((((((~ (rt0.c1)))OR(((rt0.c4)>>(rt0.c0)))))AND(((rt0.c4) IS TRUE))))AND((((rt0.c3, rt0.c3, rt0.c0, rt0.c3))<((rt0.c3, rt0.c2, rt0.c3, rt0.c1)))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN (rt0.c0 IN ()) THEN ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)) WHEN rt0.c4 COLLATE RTRIM THEN (+ ('wJ	CHy')) END) ORDER BY json_insert((rt0.c0 IN (rt0.c1)), CASE WHEN NULL THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END, '503899415') DESC  NULLS LAST, (+ (CAST(rt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((CASE CAST(rt0.c0 AS NUMERIC)  WHEN (rt0.c0 IN ()) THEN ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)) WHEN rt0.c4 COLLATE RTRIM THEN (+ ('wJ	CHy')) END)AND((((rt0.c2, rt0.c0)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)), rt0.c1)) AND ((rt0.c1, (- (rt0.c2)))))))) ORDER BY json_insert((rt0.c0 IN (rt0.c1)), CASE WHEN NULL THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END, '503899415') DESC  NULLS LAST, (+ (CAST(rt0.c1 AS NUMERIC))) ASC  NULLS LAST LIMIT 0x1;
SELECT * FROM rt0 WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN (rt0.c0 IN ()) THEN ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)) WHEN rt0.c4 COLLATE RTRIM THEN (+ ('wJ	CHy')) END) ORDER BY json_insert((rt0.c0 IN (rt0.c1)), CASE WHEN NULL THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END, '503899415') DESC  NULLS LAST, (+ (CAST(rt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((CAST(rt0.c4 AS NUMERIC) IN (((rt0.c2)LIKE(rt0.c3)), ((rt0.c4)&(rt0.c3))))) ORDER BY COALESCE((- (rt0.c1)), (('dlM~') NOT BETWEEN (rt0.c0) AND (rt0.c3)), json_type(rt0.c4), '-249913950');
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((CAST(rt0.c4 AS NUMERIC) IN (((rt0.c2)LIKE(rt0.c3)), ((rt0.c4)&(rt0.c3))))) ORDER BY (rt0.c4 IN (rt0.c3)) COLLATE RTRIM ASC  NULLS FIRST, (rt0.c2 IN ()) COLLATE BINARY  NULLS FIRST, ((8.35992671E8) NOTNULL) ASC INTERSECT SELECT MIN(rt0.c2) FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))OR(CASE WHEN rt0.c0 THEN rt0.c3 ELSE x'bbfa' END)))OR(rt0.c2))) ORDER BY (rt0.c4 IN (rt0.c3)) COLLATE RTRIM ASC  NULLS FIRST, (rt0.c2 IN ()) COLLATE BINARY  NULLS FIRST, ((8.35992671E8) NOTNULL) ASC;
SELECT * FROM rt0 WHERE ((((~ (rt0.c3))) NOT NULL)) ORDER BY (((rt0.c2) BETWEEN (x'') AND (rt0.c3)) IN (((((rt0.c4)OR(rt0.c1)))OR(rt0.c1)), ((rt0.c2) ISNULL), CAST(rt0.c4 AS TEXT)));
SELECT ALL * FROM rt0 WHERE ((((((~ (rt0.c3))) NOT NULL))AND(((((rt0.c3) IS FALSE)) IS TRUE)))) ORDER BY (+ ((+ (rt0.c3)))) LIMIT 1;
SELECT * FROM rt0 WHERE ((((~ (rt0.c3))) NOT NULL)) ORDER BY (((rt0.c2) BETWEEN (x'') AND (rt0.c3)) IN (((((rt0.c4)OR(rt0.c1)))OR(rt0.c1)), ((rt0.c2) ISNULL), CAST(rt0.c4 AS TEXT)));
SELECT ALL * FROM rt0 WHERE ((((((~ (rt0.c3))) NOT NULL))AND(((((rt0.c3) IS FALSE)) IS TRUE)))) ORDER BY (+ ((+ (rt0.c3)))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT * FROM rt0 WHERE (((rt0.c3)AND(rt0.c2))) ORDER BY CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END COLLATE BINARY  NULLS FIRST, (((- (rt0.c1))) IS FALSE) DESC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT * FROM rt0 WHERE (((rt0.c3)AND(rt0.c2))) ORDER BY CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END COLLATE BINARY  NULLS FIRST, (((- (rt0.c1))) IS FALSE) DESC LIMIT 0X0;
SELECT * FROM rt0 WHERE (CAST(((rt0.c3)<=(rt0.c0)) AS BLOB)) ORDER BY -589142078 DESC  NULLS FIRST, (((((rt0.c0)IS(rt0.c0)), (('') IS TRUE), rt0.c4, ((rt0.c1)==(rt0.c1))))<=((CAST(rt0.c2 AS NUMERIC), ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)))OR(0.32558663292333145)))OR(rt0.c1)), LAST_INSERT_ROWID(), (((rt0.c2))>((rt0.c3))))))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c3)<=(rt0.c0)) AS BLOB))AND(CAST(((rt0.c4)LIKE(x'')) AS BLOB)))) ORDER BY 0Xffffffffdce267c2 DESC  NULLS FIRST, (((((rt0.c0)IS(rt0.c0)), (('') IS TRUE), rt0.c4, ((rt0.c1)=(rt0.c1))))<=((CAST(rt0.c2 AS NUMERIC), ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)))OR(0.32558663292333145)))OR(rt0.c1)), LAST_INSERT_ROWID(), (((rt0.c2))>((rt0.c3))))))  NULLS FIRST LIMIT 0X2;
SELECT * FROM rt0 WHERE (CAST(((rt0.c3)<=(rt0.c0)) AS BLOB)) ORDER BY -589142078 DESC  NULLS FIRST, (((((rt0.c0)IS(rt0.c0)), (('') IS TRUE), rt0.c4, ((rt0.c1)==(rt0.c1))))<=((CAST(rt0.c2 AS NUMERIC), ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)))OR(0.32558663292333145)))OR(rt0.c1)), LAST_INSERT_ROWID(), (((rt0.c2))>((rt0.c3))))))  NULLS FIRST;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (287480363);
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (0x11229a2b) ORDER BY ((((rt0.c2) NOTNULL)) NOTNULL) ASC;
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(NULL)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))OR(((rt0.c1)AND(rt0.c1)))))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)));
SELECT * FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(NULL)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))OR(((rt0.c1)AND(rt0.c1)))))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(NULL)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))OR(((rt0.c1)AND(rt0.c1)))))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)));
SELECT * FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(NULL)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))OR(((rt0.c1)AND(rt0.c1)))))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)));
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c0)))OR((rt0.c0 IN (rt0.c2)))))AND(rt0.c3 COLLATE NOCASE)));
SELECT DISTINCT * FROM rt0 WHERE ((((((((NOT (rt0.c0)))OR((rt0.c0 IN (rt0.c2)))))AND(rt0.c3 COLLATE NOCASE)))AND(CAST(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END AS BLOB)))) ORDER BY (0.7461270856566903 IN (rt0.c4 COLLATE RTRIM)), (((rt0.c4 IN (rt0.c2)))IS NOT(TRIM(DISTINCT rt0.c1, rt0.c0)))  NULLS LAST, 0x55a259e6 ASC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((rt0.c4 IN (rt0.c0))) ORDER BY (0.7461270856566903 IN (rt0.c4 COLLATE RTRIM)), (((rt0.c4 IN (rt0.c2)))IS NOT(TRIM(DISTINCT rt0.c1, rt0.c0)))  NULLS LAST, 1436703206 ASC LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c0)))OR((rt0.c0 IN (rt0.c2)))))AND(rt0.c3 COLLATE NOCASE)));
SELECT DISTINCT * FROM rt0 WHERE ((((((((NOT (rt0.c0)))OR((rt0.c0 IN (rt0.c2)))))AND(rt0.c3 COLLATE NOCASE)))AND(CAST(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END AS BLOB)))) ORDER BY (0.7461270856566903 IN (rt0.c4 COLLATE RTRIM)), (((rt0.c4 IN (rt0.c2)))IS NOT(TRIM(DISTINCT rt0.c1, rt0.c0)))  NULLS LAST, 0x55a259e6 ASC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((rt0.c4 IN (rt0.c0))) ORDER BY (0.7461270856566903 IN (rt0.c4 COLLATE RTRIM)), (((rt0.c4 IN (rt0.c2)))IS NOT(TRIM(DISTINCT rt0.c1, rt0.c0)))  NULLS LAST, 1436703206 ASC LIMIT 0X1;
SELECT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((('H\LJ灻', rt0.c0, rt0.c2, rt0.c2))<(('G', rt0.c4, rt0.c1, rt0.c4))))) AND ((277152988 COLLATE RTRIM)))) ORDER BY ((rt0.c1) NOT BETWEEN ((~ (')''gm~e'))) AND (CAST(rt0.c1 AS REAL))), (((rt0.c2 IN ()))*(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '1663949070' WHEN rt0.c0 THEN rt0.c2 END)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((('H\LJ灻', rt0.c0, rt0.c2, rt0.c2))<(('G', rt0.c4, rt0.c1, rt0.c4))))) AND ((277152988 COLLATE RTRIM)))) ORDER BY ((rt0.c1) NOT BETWEEN ((~ (')''gm~e'))) AND (CAST(rt0.c1 AS REAL))), (((rt0.c2 IN ()))*(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '1663949070' WHEN rt0.c0 THEN rt0.c2 END)) ASC  NULLS FIRST LIMIT 0X1;
SELECT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((('H\LJ灻', rt0.c0, rt0.c2, rt0.c2))<(('G', rt0.c4, rt0.c1, rt0.c4))))) AND ((277152988 COLLATE RTRIM)))) ORDER BY ((rt0.c1) NOT BETWEEN ((~ (')''gm~e'))) AND (CAST(rt0.c1 AS REAL))), (((rt0.c2 IN ()))*(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '1663949070' WHEN rt0.c0 THEN rt0.c2 END)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((('H\LJ灻', rt0.c0, rt0.c2, rt0.c2))<(('G', rt0.c4, rt0.c1, rt0.c4))))) AND ((277152988 COLLATE RTRIM)))) ORDER BY ((rt0.c1) NOT BETWEEN ((~ (')''gm~e'))) AND (CAST(rt0.c1 AS REAL))), (((rt0.c2 IN ()))*(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '1663949070' WHEN rt0.c0 THEN rt0.c2 END)) ASC  NULLS FIRST LIMIT 0X1;
SELECT ALL COUNT(*) FROM rt0 WHERE (LOWER(HEX(rt0.c4)));
SELECT COUNT(*) FROM rt0 WHERE (((LOWER(HEX(rt0.c4)))AND((- (((rt0.c0)*(rt0.c3))))))) ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END WHEN CASE -2811022  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END THEN ((rt0.c1) IS FALSE) END  NULLS FIRST, (((((rt0.c1, rt0.c3))>((rt0.c3, rt0.c4))))%((((rt0.c4))=((rt0.c1)))))  NULLS FIRST INTERSECT SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END WHEN CASE 0xffffffffffd51b72  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END THEN ((rt0.c1) IS FALSE) END  NULLS FIRST, (((((rt0.c1, rt0.c3))>((rt0.c3, rt0.c4))))%((((rt0.c4))=((rt0.c1)))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CASE WHEN NULL THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 END) ISNULL));
SELECT * FROM rt0 WHERE (((((CASE WHEN NULL THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 END) ISNULL))AND((('-1423349019') NOT BETWEEN (rt0.c4) AND (rt0.c3)) COLLATE RTRIM))) LIMIT 0X0;
SELECT * FROM rt0 WHERE (((CASE WHEN NULL THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 END) ISNULL));
SELECT * FROM rt0 WHERE (((((CASE WHEN NULL THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 END) ISNULL))AND((('-1423349019') NOT BETWEEN (rt0.c4) AND (rt0.c3)) COLLATE RTRIM))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS TEXT));
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS TEXT)) LIMIT 0X3;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS TEXT));
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS TEXT)) LIMIT 0X3;
SELECT MAX(rt0.c4) FROM rt0 WHERE (LIKELIHOOD(HEX(rt0.c1), x'34'));
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (LIKELIHOOD(HEX(rt0.c1), x'34')) ORDER BY CASE (((rt0.c3, rt0.c1, rt0.c3))<=((rt0.c3, rt0.c2, rt0.c3)))  WHEN rt0.c4 THEN (rt0.c3 IN (rt0.c0, rt0.c1, rt0.c0)) WHEN ((rt0.c3) BETWEEN (x'e5a5') AND (0.37702273406594244)) THEN ((rt0.c4)>=(rt0.c4)) END  NULLS FIRST LIMIT 0x0;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE ((((rt0.c4 COLLATE RTRIM, '-935285430'))==((CASE '1004385235'  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN -3.22342703E8 END, ((rt0.c4)*(rt0.c2))))));
SELECT MAX(rt0.c4) FROM rt0 WHERE ((((((rt0.c4 COLLATE RTRIM, '-935285430'))==((CASE '1004385235'  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN -3.22342703E8 END, ((rt0.c4)*(rt0.c2))))))AND(rt0.c1))) LIMIT 1 INTERSECT SELECT MAX(rt0.c4) FROM rt0 WHERE ((((((((rt0.c1, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))))AND((((rt0.c4, rt0.c0))>((rt0.c3, rt0.c2))))))AND((rt0.c0 IN (rt0.c4))))) LIMIT 1;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN '4>B' THEN rt0.c4 WHEN 'Z' THEN rt0.c0 WHEN rt0.c0 THEN 0.4661654466088814 ELSE rt0.c1 END)||(((rt0.c3)<=(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN '4>B' THEN rt0.c4 WHEN 'Z' THEN rt0.c0 WHEN rt0.c0 THEN 0.4661654466088814 ELSE rt0.c1 END)||(((rt0.c3)<=(rt0.c0)))))AND((((CAST(x'' AS TEXT)))>=((rt0.c0 COLLATE NOCASE)))))) INTERSECT SELECT * FROM rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)AND('-472979053' COLLATE NOCASE)))AND(((((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))))OR('')))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN '4>B' THEN rt0.c4 WHEN 'Z' THEN rt0.c0 WHEN rt0.c0 THEN 0.4661654466088814 ELSE rt0.c1 END)||(((rt0.c3)<=(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN '4>B' THEN rt0.c4 WHEN 'Z' THEN rt0.c0 WHEN rt0.c0 THEN 0.4661654466088814 ELSE rt0.c1 END)||(((rt0.c3)<=(rt0.c0)))))AND((((CAST(x'' AS TEXT)))>=((rt0.c0 COLLATE NOCASE)))))) INTERSECT SELECT * FROM rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)AND('-472979053' COLLATE NOCASE)))AND(((((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))))OR('')))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c4 IN (rt0.c0)))<<(UNICODE(rt0.c1))) ASC, (((+ (rt0.c1))) IS TRUE) ASC, CAST((NOT (rt0.c2)) AS NUMERIC)  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (0X43de2060) ORDER BY (((rt0.c4 IN (rt0.c0)))<<(UNICODE(rt0.c1))) ASC, (((+ (rt0.c1))) IS TRUE) ASC, CAST((NOT (rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c4 IN (rt0.c0)))<<(UNICODE(rt0.c1))) ASC, (((+ (rt0.c1))) IS TRUE) ASC, CAST((NOT (rt0.c2)) AS NUMERIC)  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (0X43de2060) ORDER BY (((rt0.c4 IN (rt0.c0)))<<(UNICODE(rt0.c1))) ASC, (((+ (rt0.c1))) IS TRUE) ASC, CAST((NOT (rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c3)%(json_type(rt0.c1)))) ORDER BY (((((0.7094046265734871, -1.7139404E8, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, NULL)) AND ((rt0.c1, rt0.c0, rt0.c4))))*(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '-730099325' END));
SELECT * FROM rt0 WHERE (((((rt0.c3)%(json_type(rt0.c1))))AND(CAST(((rt0.c2)<(rt0.c0)) AS BLOB)))) ORDER BY (((((0.7094046265734871, -1.7139404E8, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, NULL)) AND ((rt0.c1, rt0.c0, rt0.c4))))*(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '-730099325' END)) INTERSECT SELECT * FROM rt0 WHERE ((((- (rt0.c1))) NOT BETWEEN (((rt0.c0)IS(rt0.c4))) AND (rt0.c2 COLLATE NOCASE))) ORDER BY (((((0.7094046265734871, -1.7139404E8, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, NULL)) AND ((rt0.c1, rt0.c0, rt0.c4))))*(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '-730099325' END));
SELECT * FROM rt0 WHERE (((rt0.c3)%(json_type(rt0.c1)))) ORDER BY (((((0.7094046265734871, -1.7139404E8, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, NULL)) AND ((rt0.c1, rt0.c0, rt0.c4))))*(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '-730099325' END));
SELECT * FROM rt0 WHERE (((((rt0.c3)%(json_type(rt0.c1))))AND(CAST(((rt0.c2)<(rt0.c0)) AS BLOB)))) ORDER BY (((((0.7094046265734871, -1.7139404E8, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, NULL)) AND ((rt0.c1, rt0.c0, rt0.c4))))*(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '-730099325' END)) INTERSECT SELECT * FROM rt0 WHERE ((((- (rt0.c1))) NOT BETWEEN (((rt0.c0)IS(rt0.c4))) AND (rt0.c2 COLLATE NOCASE))) ORDER BY (((((0.7094046265734871, -1.7139404E8, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, NULL)) AND ((rt0.c1, rt0.c0, rt0.c4))))*(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '-730099325' END));
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE BINARY);
SELECT * FROM rt0 WHERE (((rt0.c4 COLLATE BINARY)AND(((((((rt0.c0) NOTNULL))OR((+ (rt0.c1)))))AND(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) ORDER BY ((((rt0.c2)AND('m')))IS((NOT (rt0.c0))))  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) ORDER BY ((((rt0.c2)AND('m')))IS((NOT (rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE BINARY);
SELECT * FROM rt0 WHERE (((rt0.c4 COLLATE BINARY)AND(((((((rt0.c0) NOTNULL))OR((+ (rt0.c1)))))AND(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) ORDER BY ((((rt0.c2)AND('m')))IS((NOT (rt0.c0))))  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) ORDER BY ((((rt0.c2)AND('m')))IS((NOT (rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c1 IN (rt0.c1, rt0.c1)) AS BLOB)) ORDER BY (((+ (rt0.c2))) BETWEEN (0.1832362095060246) AND (((rt0.c4) IS FALSE)));
SELECT DISTINCT * FROM rt0 WHERE (CAST((rt0.c1 IN (rt0.c1, rt0.c1)) AS BLOB)) ORDER BY (((+ (rt0.c2))) BETWEEN (0.1832362095060246) AND (((rt0.c4) IS FALSE)));
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c1 IN (rt0.c1, rt0.c1)) AS BLOB)) ORDER BY (((+ (rt0.c2))) BETWEEN (0.1832362095060246) AND (((rt0.c4) IS FALSE)));
SELECT DISTINCT * FROM rt0 WHERE (CAST((rt0.c1 IN (rt0.c1, rt0.c1)) AS BLOB)) ORDER BY (((+ (rt0.c2))) BETWEEN (0.1832362095060246) AND (((rt0.c4) IS FALSE)));
SELECT * FROM rt0 WHERE ((((rt0.c3, rt0.c1, 0Xfffffffff25d5e23, rt0.c2)) NOT BETWEEN ((rt0.c1, ABS(DISTINCT rt0.c2), ((((x'd9')OR(rt0.c2)))OR(NULL)), CASE WHEN rt0.c0 THEN rt0.c2 END)) AND ((((rt0.c1)|(rt0.c1)), NULL, (((rt0.c2, rt0.c2))==((rt0.c2, rt0.c2))), ((rt0.c3) BETWEEN (rt0.c3) AND ('#zK_6THA'))))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3, rt0.c1, 0xfffffffff25d5e23, rt0.c2)) NOT BETWEEN ((rt0.c1, ABS(DISTINCT rt0.c2), ((((x'd9')OR(rt0.c2)))OR(NULL)), CASE WHEN rt0.c0 THEN rt0.c2 END)) AND ((((rt0.c1)|(rt0.c1)), NULL, (((rt0.c2, rt0.c2))==((rt0.c2, rt0.c2))), ((rt0.c3) BETWEEN (rt0.c3) AND ('#zK_6THA')))))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c2, '5')) AND ((rt0.c3, rt0.c2))))||((((rt0.c3, rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c4, rt0.c3, 1627866469)) AND ((rt0.c2, rt0.c4, rt0.c3, rt0.c0)))))) LIMIT 2;
SELECT * FROM rt0 WHERE ((((rt0.c3, rt0.c1, 0Xfffffffff25d5e23, rt0.c2)) NOT BETWEEN ((rt0.c1, ABS(DISTINCT rt0.c2), ((((x'd9')OR(rt0.c2)))OR(NULL)), CASE WHEN rt0.c0 THEN rt0.c2 END)) AND ((((rt0.c1)|(rt0.c1)), NULL, (((rt0.c2, rt0.c2))==((rt0.c2, rt0.c2))), ((rt0.c3) BETWEEN (rt0.c3) AND ('#zK_6THA'))))));
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3, rt0.c1, 0xfffffffff25d5e23, rt0.c2)) NOT BETWEEN ((rt0.c1, ABS(DISTINCT rt0.c2), ((((x'd9')OR(rt0.c2)))OR(NULL)), CASE WHEN rt0.c0 THEN rt0.c2 END)) AND ((((rt0.c1)|(rt0.c1)), NULL, (((rt0.c2, rt0.c2))==((rt0.c2, rt0.c2))), ((rt0.c3) BETWEEN (rt0.c3) AND ('#zK_6THA')))))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c2, '5')) AND ((rt0.c3, rt0.c2))))||((((rt0.c3, rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c4, rt0.c3, 1627866469)) AND ((rt0.c2, rt0.c4, rt0.c3, rt0.c0)))))) LIMIT 2;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END) NOTNULL)) ORDER BY ((rt0.c3 COLLATE BINARY) ISNULL)  NULLS LAST, (rt0.c4 IN (rt0.c3, ((rt0.c0)>(rt0.c0)))), CAST(rt0.c1 COLLATE BINARY AS BLOB);
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END) NOTNULL)) ORDER BY ((rt0.c3 COLLATE BINARY) ISNULL)  NULLS LAST, (rt0.c4 IN (rt0.c3, ((rt0.c0)>(rt0.c0)))), CAST(rt0.c1 COLLATE BINARY AS BLOB);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END) NOTNULL)) ORDER BY ((rt0.c3 COLLATE BINARY) ISNULL)  NULLS LAST, (rt0.c4 IN (rt0.c3, ((rt0.c0)>(rt0.c0)))), CAST(rt0.c1 COLLATE BINARY AS BLOB);
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END) NOTNULL)) ORDER BY ((rt0.c3 COLLATE BINARY) ISNULL)  NULLS LAST, (rt0.c4 IN (rt0.c3, ((rt0.c0)>(rt0.c0)))), CAST(rt0.c1 COLLATE BINARY AS BLOB);
SELECT ALL * FROM rt0 WHERE (0Xda3f5ed) ORDER BY ((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0))) AND (((rt0.c1) IS TRUE))) DESC, (- (NULL))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (0Xda3f5ed) ORDER BY CAST((~ (rt0.c2)) AS BLOB) ASC, x'5e'  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) ORDER BY CAST((~ (rt0.c2)) AS BLOB) ASC, x'5e'  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (0Xda3f5ed) ORDER BY ((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0))) AND (((rt0.c1) IS TRUE))) DESC, (- (NULL))  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (0Xda3f5ed) ORDER BY CAST((~ (rt0.c2)) AS BLOB) ASC, x'5e'  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) ORDER BY CAST((~ (rt0.c2)) AS BLOB) ASC, x'5e'  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c0)))AND((- (rt0.c3)))))AND(((rt0.c3)<>(rt0.c0)))));
SELECT * FROM rt0 WHERE ((((((((rt0.c0 IN (rt0.c0)))AND((- (rt0.c3)))))AND(((rt0.c3)!=(rt0.c0)))))AND(((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(0.2834488044084674)))AND(rt0.c4)))=((~ (rt0.c4)))))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c0)))AND((- (rt0.c3)))))AND(((rt0.c3)<>(rt0.c0)))));
SELECT * FROM rt0 WHERE ((((((((rt0.c0 IN (rt0.c0)))AND((- (rt0.c3)))))AND(((rt0.c3)!=(rt0.c0)))))AND(((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(0.2834488044084674)))AND(rt0.c4)))=((~ (rt0.c4)))))));
SELECT * FROM rt0 WHERE ((((rt0.c1)==(rt0.c4)) IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)=(rt0.c4)) IN ()))AND(NULL))) ORDER BY ((((NULL)OR('j1')))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 END)) DESC  NULLS FIRST, UPPER(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0 COLLATE RTRIM))) ORDER BY ((((NULL)OR('j1')))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 END)) DESC  NULLS FIRST, UPPER(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0))) LIMIT 2;
SELECT * FROM rt0 WHERE ((((rt0.c1)==(rt0.c4)) IN ()));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)=(rt0.c4)) IN ()))AND(NULL))) ORDER BY ((((NULL)OR('j1')))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 END)) DESC  NULLS FIRST, UPPER(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0 COLLATE RTRIM))) ORDER BY ((((NULL)OR('j1')))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 END)) DESC  NULLS FIRST, UPPER(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0))) LIMIT 2;
SELECT MAX(rt0.c4) FROM rt0 WHERE (((((((((rt0.c1)OR((~ (rt0.c4)))))OR(x'd6')))AND(((rt0.c2) BETWEEN (0.5129543472507884) AND (rt0.c2)))))AND(((rt0.c1)>>(rt0.c3))))) ORDER BY CASE ((rt0.c0)IS(rt0.c0))  WHEN (rt0.c1 IN ()) THEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)) END DESC, ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 END)%(((rt0.c0) IS FALSE)));
SELECT MAX(rt0.c4) FROM rt0 WHERE (((((((((rt0.c1)OR((~ (rt0.c4)))))OR(x'd6')))AND(((rt0.c2) BETWEEN (0.5129543472507884) AND (rt0.c2)))))AND(((rt0.c1)>>(rt0.c3))))) ORDER BY MAX(((x'') NOT BETWEEN (rt0.c0) AND (0.8454584150957054)), CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END, NULL) ASC  NULLS LAST LIMIT 2;
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM);
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM) LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((((((NOT (rt0.c3)))AND(((rt0.c4) IS FALSE))))OR((((rt0.c0, rt0.c4, NULL))=((rt0.c0, rt0.c4, rt0.c0))))))AND(NULL)))AND((((rt0.c1, rt0.c4, rt0.c2, rt0.c2))<=((rt0.c3, rt0.c1, x'', rt0.c3)))))) LIMIT 2;
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM);
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM) LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((((((((NOT (rt0.c3)))AND(((rt0.c4) IS FALSE))))OR((((rt0.c0, rt0.c4, NULL))=((rt0.c0, rt0.c4, rt0.c0))))))AND(NULL)))AND((((rt0.c1, rt0.c4, rt0.c2, rt0.c2))<=((rt0.c3, rt0.c1, x'', rt0.c3)))))) LIMIT 2;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c4 AS REAL))) ORDER BY CAST(((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)) AS REAL)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c4 AS REAL))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)))>(((rt0.c2) NOT BETWEEN (rt0.c2) AND (0x471a4a3f)))) DESC, 0.5229458308839939 LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c4 AS REAL))) ORDER BY CAST(((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)) AS REAL)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c4 AS REAL))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)))>(((rt0.c2) NOT BETWEEN (rt0.c2) AND (0x471a4a3f)))) DESC, 0.5229458308839939 LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (0.6530789708500887);
SELECT ALL * FROM rt0 WHERE (0.6530789708500887);
SELECT ALL * FROM rt0 WHERE (0.6530789708500887);
SELECT ALL * FROM rt0 WHERE (0.6530789708500887);
SELECT COUNT(*) FROM rt0 WHERE (x'7359');
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((x'7359')AND(((~ (rt0.c3)) IN ())))) ORDER BY CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((0Xffffffff893b3f8b)-(rt0.c0)) THEN (NOT (rt0.c4)) WHEN ((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN CASE rt0.c2  WHEN x'b3489c1a99' THEN rt0.c1 ELSE rt0.c3 END WHEN (((0.18731432568145978, rt0.c0, rt0.c3, rt0.c4, rt0.c1))!=((x'', rt0.c3, rt0.c2, rt0.c1, rt0.c4))) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE (rt0.c2 IN (rt0.c1)) END ASC, ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE '-505397036' END)|(((rt0.c4)GLOB(rt0.c4)))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (0.9325158370991051) ORDER BY ((((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 END)AND(((rt0.c2) NOTNULL))))AND(rt0.c3 COLLATE RTRIM)) DESC;
SELECT ALL * FROM rt0 WHERE (((0.9325158370991051)AND(NULL))) ORDER BY ((0.7045175243655425)-(rt0.c2)) COLLATE BINARY INTERSECT SELECT ALL * FROM rt0 WHERE (CASE CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN '1573488977' END  WHEN ((rt0.c3)OR(rt0.c4)) THEN ((rt0.c4)>=(rt0.c1)) WHEN ((rt0.c2)OR(x'96')) THEN ((rt0.c0)&(rt0.c1)) WHEN rt0.c1 THEN 'h耇D*聡' WHEN CASE NULL  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END THEN ((rt0.c4)|(rt0.c4)) WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) THEN MIN(rt0.c4, rt0.c2, '釶k', rt0.c3, rt0.c0) WHEN rt0.c4 COLLATE NOCASE THEN rt0.c0 COLLATE BINARY WHEN rtreenode(rt0.c0, x'44') THEN 0.7437641643818338 END) ORDER BY ((0.7045175243655425)-(rt0.c2)) COLLATE BINARY;
SELECT * FROM rt0 WHERE (0.9325158370991051) ORDER BY ((((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 END)AND(((rt0.c2) NOTNULL))))AND(rt0.c3 COLLATE RTRIM)) DESC;
SELECT ALL * FROM rt0 WHERE (((0.9325158370991051)AND(NULL))) ORDER BY ((0.7045175243655425)-(rt0.c2)) COLLATE BINARY INTERSECT SELECT ALL * FROM rt0 WHERE (CASE CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN '1573488977' END  WHEN ((rt0.c3)OR(rt0.c4)) THEN ((rt0.c4)>=(rt0.c1)) WHEN ((rt0.c2)OR(x'96')) THEN ((rt0.c0)&(rt0.c1)) WHEN rt0.c1 THEN 'h耇D*聡' WHEN CASE NULL  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 END THEN ((rt0.c4)|(rt0.c4)) WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) THEN MIN(rt0.c4, rt0.c2, '釶k', rt0.c3, rt0.c0) WHEN rt0.c4 COLLATE NOCASE THEN rt0.c0 COLLATE BINARY WHEN rtreenode(rt0.c0, x'44') THEN 0.7437641643818338 END) ORDER BY ((0.7045175243655425)-(rt0.c2)) COLLATE BINARY;
SELECT ALL MIN(rt0.c2) FROM rt0 NOT INDEXED WHERE ((((((((rt0.c3))!=((rt0.c3))))AND(((rt0.c4)<=(rt0.c1)))))OR(((0.7279443693564358) NOT BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT MIN(rt0.c2) FROM rt0 WHERE ((((((((rt0.c3))!=((rt0.c3))))AND(((rt0.c4)<=(rt0.c1)))))OR(((0.7279443693564358) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY (rt0.c4 COLLATE RTRIM IN ()), ((((rt0.c4) NOT NULL)) IS TRUE)  NULLS LAST LIMIT 1 INTERSECT SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (((((((rt0.c4)-(rt0.c0)))AND((NOT (rt0.c4)))))OR((((rt0.c2, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c3, rt0.c2)))))) ORDER BY (rt0.c4 COLLATE RTRIM IN ()), ((((rt0.c4) NOT NULL)) IS TRUE)  NULLS LAST LIMIT 0x1;
SELECT COUNT(*) FROM rt0 WHERE ('%/k') ORDER BY (((((rt0.c3)==(rt0.c0))))<(((~ ('-'))))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((('%/k')AND((((- (rt0.c3)))OR((rt0.c4 IN ())))))) ORDER BY (((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)) IN ())  NULLS FIRST, (((rt0.c1) BETWEEN ('o,>vN') AND (rt0.c3)) IN ()) DESC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c4)>=(rt0.c1)) IN ()) ASC, CAST(((((((((((((rt0.c4)AND(rt0.c1)))AND(x'')))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c4)) AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (rt0.c0 COLLATE BINARY IN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))) DESC LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (((+ (rt0.c1)) IN ())) ORDER BY (rt0.c0 COLLATE BINARY IN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))) DESC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c4)>=(rt0.c1)) IN ()) ASC, CAST(((((((((((((rt0.c4)AND(rt0.c1)))AND(x'')))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c4)) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c0)<(x'')))IS NOT(((rt0.c1)<>(rt0.c0))))) ORDER BY ((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c0)))AND((((rt0.c4, rt0.c4, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c3, rt0.c0))))))AND((0.30454381274792286 IN (rt0.c2)))))OR(CAST(rt0.c1 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)<(x'')))IS NOT(((rt0.c1)<>(rt0.c0)))))AND((((rt0.c1 IN (rt0.c0, 'V'))) BETWEEN (((rt0.c4)<>('䉨	W])T'))) AND (rt0.c3))))) ORDER BY 0.3041289180806924, CASE x'f9'  WHEN rt0.c0 THEN ((rt0.c2) BETWEEN (0.5352950627620193) AND (rt0.c0)) WHEN (((rt0.c3, rt0.c0, rt0.c0, rt0.c0))<((rt0.c2, rt0.c4, rt0.c2, rt0.c3))) THEN (('')<<(rt0.c2)) END;
SELECT * FROM rt0 WHERE (((((rt0.c0)<(x'')))IS NOT(((rt0.c1)<>(rt0.c0))))) ORDER BY ((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c0)))AND((((rt0.c4, rt0.c4, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c3, rt0.c0))))))AND((0.30454381274792286 IN (rt0.c2)))))OR(CAST(rt0.c1 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)<(x'')))IS NOT(((rt0.c1)<>(rt0.c0)))))AND((((rt0.c1 IN (rt0.c0, 'V'))) BETWEEN (((rt0.c4)<>('䉨	W])T'))) AND (rt0.c3))))) ORDER BY 0.3041289180806924, CASE x'f9'  WHEN rt0.c0 THEN ((rt0.c2) BETWEEN (0.5352950627620193) AND (rt0.c0)) WHEN (((rt0.c3, rt0.c0, rt0.c0, rt0.c0))<((rt0.c2, rt0.c4, rt0.c2, rt0.c3))) THEN (('')<<(rt0.c2)) END;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt0 WHERE (((rt0.c1)AND(CASE (((rt0.c1))>((rt0.c0)))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c3 AS NUMERIC) ELSE ((rt0.c3) NOTNULL) END))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt0 WHERE (((rt0.c1)AND(CASE (((rt0.c1))>((rt0.c0)))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c3 AS NUMERIC) ELSE ((rt0.c3) NOTNULL) END))) LIMIT 0;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)|(UNICODE(rt0.c3))));
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)|(UNICODE(rt0.c3))))AND((((((((((((((0.09018974312606576)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR((((rt0.c4))<=((rt0.c3))))))OR(CASE WHEN rt0.c4 THEN x'4d' WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 END)))OR(((rt0.c0)IS NOT(rt0.c0)))))AND((((rt0.c4, rt0.c1, rt0.c4)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND (('uf[ ]V6lw', rt0.c1, rt0.c2))))))AND(rt0.c2))))) INTERSECT SELECT MAX(rt0.c2) FROM rt0 WHERE (UPPER(DISTINCT rt0.c4));
SELECT MIN(rt0.c3) FROM rt0 WHERE (((LIKELY(rt0.c1)) IS FALSE)) ORDER BY CAST(((rt0.c4) BETWEEN (rt0.c0) AND (0.6259584733104222)) AS NUMERIC) ASC, NULL ASC, ((rt0.c0)-(rt0.c2)) COLLATE NOCASE COLLATE BINARY DESC;
SELECT MIN(rt0.c3) FROM rt0 WHERE (((LIKELY(rt0.c1)) IS FALSE)) ORDER BY ((NULL) ISNULL)  NULLS FIRST, ((0.6675364535288844) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM DESC  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE (((NOT (rt0.c1)) IN (((rt0.c1) IS TRUE), ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4)))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((NOT (rt0.c1)) IN (((rt0.c1) IS TRUE), ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4))))) ORDER BY (NOT ((NOT (rt0.c4)))) LIMIT 0x1;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) ISNULL) AS NUMERIC)) ORDER BY CAST(CAST(rt0.c4 AS INTEGER) AS BLOB) DESC  NULLS FIRST, ((((((rt0.c1)AND(rt0.c3)))OR(rt0.c2)))<<(((rt0.c3) IS FALSE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(((rt0.c0) ISNULL) AS NUMERIC))AND(rt0.c3))) ORDER BY CAST(CAST(rt0.c4 AS INTEGER) AS BLOB) DESC  NULLS FIRST, ((((((rt0.c1)AND(rt0.c3)))OR(rt0.c2)))<<(((rt0.c3) IS FALSE)))  NULLS FIRST LIMIT 0x2;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END)!=(LIKELY(DISTINCT rt0.c3))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END)!=(LIKELY(DISTINCT rt0.c3))))AND(((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c4)))|(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1))))))) ORDER BY rt0.c3 DESC, (+ (((rt0.c0)&(NULL)))) ASC LIMIT 2;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS NUMERIC)) ORDER BY (~ ((- (rt0.c4)))) DESC;
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS NUMERIC)) ORDER BY (~ ((- (rt0.c4)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c4 ASC;
SELECT MAX(rt0.c1) FROM rt0 WHERE (((rt0.c2)AND(((CAST(rt0.c4 AS BLOB)) BETWEEN (rt0.c3 COLLATE RTRIM) AND (0.0626761756516897))))) ORDER BY rt0.c4 ASC INTERSECT SELECT ALL MAX(rt0.c1) FROM rt0 WHERE ((- (((rt0.c1)>=(rt0.c4))))) ORDER BY rt0.c4 ASC;
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC)) ORDER BY '?t(j' COLLATE NOCASE ASC  NULLS FIRST LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE (CAST((rt0.c3 IN (rt0.c2)) AS TEXT)) ORDER BY '?t(j' COLLATE NOCASE ASC  NULLS FIRST LIMIT 0x2;
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC)) ORDER BY '?t(j' COLLATE NOCASE ASC  NULLS FIRST LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE (CAST((rt0.c3 IN (rt0.c2)) AS TEXT)) ORDER BY '?t(j' COLLATE NOCASE ASC  NULLS FIRST LIMIT 0x2;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)IS(rt0.c4)) COLLATE NOCASE) ORDER BY (- (NULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS(rt0.c4)) COLLATE NOCASE)AND(((((((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))OR(((rt0.c3) IS TRUE))))AND(rt0.c3 COLLATE BINARY)))AND(((rt0.c0)LIKE(rt0.c4)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))))) ORDER BY ((CAST(rt0.c0 AS TEXT))+(((x'03e5')IS(rt0.c2)))) ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (((LOWER(DISTINCT rt0.c1)) ISNULL)) ORDER BY ((CAST(rt0.c0 AS TEXT))+(((x'03e5')IS(rt0.c2)))) ASC  NULLS FIRST LIMIT 0X0;
SELECT MAX(rt0.c0) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE BINARY);
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE BINARY) ORDER BY CASE (((NULL, rt0.c2))<=((rt0.c1, rt0.c4)))  WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN CASE WHEN rt0.c0 THEN rt0.c4 END ELSE ((rt0.c3)GLOB(rt0.c2)) END DESC  NULLS LAST, (((rt0.c0)) BETWEEN (((rt0.c3 IN (rt0.c1)))) AND (((rt0.c0 IN (rt0.c0))))) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (CAST((~ (rt0.c0)) AS BLOB)) ORDER BY CASE (((NULL, rt0.c2))<=((rt0.c1, rt0.c4)))  WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN CASE WHEN rt0.c0 THEN rt0.c4 END ELSE ((rt0.c3)GLOB(rt0.c2)) END DESC  NULLS LAST, (((rt0.c0)) BETWEEN (((rt0.c3 IN (rt0.c1)))) AND (((rt0.c0 IN (rt0.c0))))) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY ((((((((CAST(rt0.c3 AS BLOB))AND(CAST(x'453756' AS INTEGER))))OR(((((((rt0.c2)OR(rt0.c4)))OR(x'eb')))AND(rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END)))OR((((rt0.c0, rt0.c4))=((rt0.c0, NULL))))), (+ (HEX(DISTINCT rt0.c4)));
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY ((((((((CAST(rt0.c3 AS BLOB))AND(CAST(x'453756' AS INTEGER))))OR(((((((rt0.c2)OR(rt0.c4)))OR(x'eb')))AND(rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END)))OR((((rt0.c0, rt0.c4))==((rt0.c0, NULL))))), (+ (HEX(DISTINCT rt0.c4))) LIMIT 0X3;
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY ((((((((CAST(rt0.c3 AS BLOB))AND(CAST(x'453756' AS INTEGER))))OR(((((((rt0.c2)OR(rt0.c4)))OR(x'eb')))AND(rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END)))OR((((rt0.c0, rt0.c4))=((rt0.c0, NULL))))), (+ (HEX(DISTINCT rt0.c4)));
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY ((((((((CAST(rt0.c3 AS BLOB))AND(CAST(x'453756' AS INTEGER))))OR(((((((rt0.c2)OR(rt0.c4)))OR(x'eb')))AND(rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END)))OR((((rt0.c0, rt0.c4))==((rt0.c0, NULL))))), (+ (HEX(DISTINCT rt0.c4))) LIMIT 0X3;
SELECT MIN(rt0.c0) FROM rt0 WHERE (((- (rt0.c2)) IN (((rt0.c2)<(rt0.c4)), (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))));
SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (((- (rt0.c2)) IN (((rt0.c2)<(rt0.c4)), (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c4)))))) ORDER BY CAST(((rt0.c4)/(rt0.c2)) AS BLOB)  NULLS LAST, (((((rt0.c0) BETWEEN (rt0.c2) AND (0.1394638075611907))))<=((NULL COLLATE RTRIM))), ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))>((((rt0.c4, rt0.c2))=((rt0.c2, rt0.c0))))) LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(rt0.c0) FROM rt0 WHERE (NULL) ORDER BY CAST(((rt0.c4)/(rt0.c2)) AS BLOB)  NULLS LAST, (((((rt0.c0) BETWEEN (rt0.c2) AND (0.1394638075611907))))<=((NULL COLLATE RTRIM))), ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))>((((rt0.c4, rt0.c2))==((rt0.c2, rt0.c0))))) LIMIT 0;
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)))||((~ (0.8025610452157629))))) ORDER BY COALESCE((((rt0.c1))<((rt0.c0))), CAST(rt0.c3 AS NUMERIC), ((rt0.c0) NOTNULL)) ASC, (rt0.c0 IN (CASE rt0.c0  WHEN rt0.c2 THEN 0.7734264898456114 WHEN rt0.c2 THEN rt0.c3 END))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)))||((~ (0.8025610452157629)))))AND((((rt0.c3)) BETWEEN (((rt0.c4 IN (rt0.c3)))) AND (((+ (rt0.c2)))))))) ORDER BY COALESCE((((rt0.c1))<((rt0.c0))), CAST(rt0.c3 AS NUMERIC), ((rt0.c0) NOTNULL)) ASC, (rt0.c0 IN (CASE rt0.c0  WHEN rt0.c2 THEN 0.7734264898456114 WHEN rt0.c2 THEN rt0.c3 END))  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((- (0.6949958333542687)))>=(CAST(rt0.c4 AS INTEGER)))) ORDER BY COALESCE((((rt0.c1))<((rt0.c0))), CAST(rt0.c3 AS NUMERIC), ((rt0.c0) NOTNULL)) ASC, (rt0.c0 IN (CASE rt0.c0  WHEN rt0.c2 THEN 0.7734264898456114 WHEN rt0.c2 THEN rt0.c3 END))  NULLS LAST LIMIT 0X1;
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)))||((~ (0.8025610452157629))))) ORDER BY COALESCE((((rt0.c1))<((rt0.c0))), CAST(rt0.c3 AS NUMERIC), ((rt0.c0) NOTNULL)) ASC, (rt0.c0 IN (CASE rt0.c0  WHEN rt0.c2 THEN 0.7734264898456114 WHEN rt0.c2 THEN rt0.c3 END))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)))||((~ (0.8025610452157629)))))AND((((rt0.c3)) BETWEEN (((rt0.c4 IN (rt0.c3)))) AND (((+ (rt0.c2)))))))) ORDER BY COALESCE((((rt0.c1))<((rt0.c0))), CAST(rt0.c3 AS NUMERIC), ((rt0.c0) NOTNULL)) ASC, (rt0.c0 IN (CASE rt0.c0  WHEN rt0.c2 THEN 0.7734264898456114 WHEN rt0.c2 THEN rt0.c3 END))  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((- (0.6949958333542687)))>=(CAST(rt0.c4 AS INTEGER)))) ORDER BY COALESCE((((rt0.c1))<((rt0.c0))), CAST(rt0.c3 AS NUMERIC), ((rt0.c0) NOTNULL)) ASC, (rt0.c0 IN (CASE rt0.c0  WHEN rt0.c2 THEN 0.7734264898456114 WHEN rt0.c2 THEN rt0.c3 END))  NULLS LAST LIMIT 0X1;
SELECT MIN(rt0.c1) FROM rt0 WHERE ((((((rt0.c2))>((rt0.c2)))) BETWEEN ((((rt0.c2, rt0.c0, rt0.c4, rt0.c3))<=((rt0.c1, rt0.c0, rt0.c3, rt0.c1)))) AND (rt0.c2))) ORDER BY ((((0.0)OR(CAST(rt0.c1 AS TEXT))))OR(CAST(rt0.c4 AS REAL)))  NULLS LAST, (((rt0.c4))<=((rt0.c1))) COLLATE BINARY  NULLS FIRST, CAST(CAST(rt0.c2 AS BLOB) AS TEXT), ((((((((((rt0.c2) IS FALSE))OR(((rt0.c1)>=(rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)))))OR(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0)>>(rt0.c0)))) ASC;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((((((((rt0.c2))>((rt0.c2)))) BETWEEN ((((rt0.c2, rt0.c0, rt0.c4, rt0.c3))<=((rt0.c1, rt0.c0, rt0.c3, rt0.c1)))) AND (rt0.c2)))AND(((((((((((UNLIKELY(DISTINCT ''))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END)))OR(((rt0.c2)=('0.09090607930004835')))))AND(HEX(rt0.c3))))OR(rt0.c3 COLLATE BINARY)))AND((~ (rt0.c3))))))) ORDER BY ((((0.0)OR(CAST(rt0.c1 AS TEXT))))OR(CAST(rt0.c4 AS REAL)))  NULLS LAST, (((rt0.c4))<=((rt0.c1))) COLLATE BINARY  NULLS FIRST, CAST(CAST(rt0.c2 AS BLOB) AS TEXT), ((((((((((rt0.c2) IS FALSE))OR(((rt0.c1)>=(rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)))))OR(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0)>>(rt0.c0)))) ASC LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((COALESCE(x'60', rt0.c2)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NULL IN (rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((COALESCE(x'60', rt0.c2)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NULL IN (rt0.c3))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END AS TEXT)) LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (((COALESCE(x'60', rt0.c2)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NULL IN (rt0.c3)))));
SELECT DISTINCT * FROM rt0 WHERE (((COALESCE(x'60', rt0.c2)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NULL IN (rt0.c3))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END AS TEXT)) LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE) ORDER BY CAST(((rt0.c0)IS(rt0.c4)) AS REAL), json((- (rt0.c2)))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE) ORDER BY CAST(((rt0.c0)IS(rt0.c4)) AS REAL), json((- (rt0.c2)))  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((~ (NULL)))<(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END))) ORDER BY CAST(((rt0.c0)IS(rt0.c4)) AS REAL), json((- (rt0.c2)))  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE) ORDER BY CAST(((rt0.c0)IS(rt0.c4)) AS REAL), json((- (rt0.c2)))  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE) ORDER BY CAST(((rt0.c0)IS(rt0.c4)) AS REAL), json((- (rt0.c2)))  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((~ (NULL)))<(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END))) ORDER BY CAST(((rt0.c0)IS(rt0.c4)) AS REAL), json((- (rt0.c2)))  NULLS LAST LIMIT 0x1;
SELECT * FROM rt0 WHERE (((((rt0.c3)>>(rt0.c4)))|(((((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c4)))OR('-109717290')))));
SELECT * FROM rt0 WHERE (((((((rt0.c3)>>(rt0.c4)))|(((((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c4)))OR('-109717290')))))AND((x'f4' IN (((rt0.c4)GLOB(rt0.c3))))))) LIMIT 0x2;
SELECT * FROM rt0 WHERE (((((rt0.c3)>>(rt0.c4)))|(((((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c4)))OR('-109717290')))));
SELECT * FROM rt0 WHERE (((((((rt0.c3)>>(rt0.c4)))|(((((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c4)))OR('-109717290')))))AND((x'f4' IN (((rt0.c4)GLOB(rt0.c3))))))) LIMIT 0x2;
SELECT * FROM rt0 WHERE ((NOT (rt0.c4)) COLLATE BINARY) ORDER BY (((NOT (rt0.c3))) NOT BETWEEN ((NOT (x''))) AND (rt0.c1)) DESC;
SELECT * FROM rt0 WHERE ((NOT (rt0.c4)) COLLATE BINARY) ORDER BY (((NOT (rt0.c3))) NOT BETWEEN ((NOT (x''))) AND (rt0.c1)) DESC INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((NOT (rt0.c3))) NOT BETWEEN ((NOT (x''))) AND (rt0.c1)) DESC;
SELECT * FROM rt0 WHERE ((NOT (rt0.c4)) COLLATE BINARY) ORDER BY (((NOT (rt0.c3))) NOT BETWEEN ((NOT (x''))) AND (rt0.c1)) DESC;
SELECT * FROM rt0 WHERE ((NOT (rt0.c4)) COLLATE BINARY) ORDER BY (((NOT (rt0.c3))) NOT BETWEEN ((NOT (x''))) AND (rt0.c1)) DESC INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((NOT (rt0.c3))) NOT BETWEEN ((NOT (x''))) AND (rt0.c1)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (0.879799485125255))) ORDER BY CAST((- (rt0.c0)) AS BLOB)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((NOT (0.879799485125255))) ORDER BY CAST((- (rt0.c0)) AS BLOB)  NULLS LAST;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((((rt0.c2 IN (NULL))) NOTNULL)) ORDER BY CASE ((rt0.c3)LIKE(rt0.c0))  WHEN (((rt0.c4, rt0.c3))>((rt0.c3, rt0.c4))) THEN 0.8886667505296605 WHEN '-739305910' THEN (rt0.c4 IN ()) WHEN rt0.c2 THEN (((rt0.c1, rt0.c0))<=((rt0.c4, rt0.c1))) WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c0)LIKE(rt0.c0)) WHEN (- (rt0.c4)) THEN rt0.c4 COLLATE RTRIM ELSE CAST(rt0.c0 AS REAL) END  NULLS LAST, (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c1)|(rt0.c0))) AND (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST, UNLIKELY(DISTINCT rt0.c1) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((((((rt0.c2 IN (NULL))) NOTNULL))AND(((((rt0.c3)AND(rt0.c4))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3))))))) ORDER BY 0Xffffffffc83b2853 DESC LIMIT 0x5 INTERSECT SELECT ALL MIN(rt0.c2) FROM rt0 WHERE (rt0.c0) ORDER BY -935647149 DESC LIMIT 5;
SELECT * FROM rt0 WHERE (ROUND(RTRIM(rt0.c1), ((rt0.c0)>=(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (((ROUND(RTRIM(rt0.c1), ((rt0.c0)>(rt0.c0))))AND(CAST((((NULL, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c4))) AS NUMERIC)))) ORDER BY rt0.c1, ((((((rt0.c2)AND(rt0.c4)))AND(rt0.c2))) ISNULL)  NULLS LAST LIMIT 1;
SELECT * FROM rt0 WHERE (ROUND(RTRIM(rt0.c1), ((rt0.c0)>=(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (((ROUND(RTRIM(rt0.c1), ((rt0.c0)>(rt0.c0))))AND(CAST((((NULL, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c4))) AS NUMERIC)))) ORDER BY rt0.c1, ((((((rt0.c2)AND(rt0.c4)))AND(rt0.c2))) ISNULL)  NULLS LAST LIMIT 1;
SELECT * FROM rt0 WHERE (x'') ORDER BY ((((rt0.c1)-(rt0.c4)))||(((rt0.c3)|(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((((rt0.c1)-(rt0.c4)))||(((rt0.c3)|(rt0.c2)))) INTERSECT SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c1)-(rt0.c4)))||(((rt0.c3)|(rt0.c2))));
SELECT * FROM rt0 WHERE (x'') ORDER BY ((((rt0.c1)-(rt0.c4)))||(((rt0.c3)|(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((((rt0.c1)-(rt0.c4)))||(((rt0.c3)|(rt0.c2)))) INTERSECT SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c1)-(rt0.c4)))||(((rt0.c3)|(rt0.c2))));
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c0  NULLS FIRST, ((((((((((CAST(rt0.c0 AS INTEGER))AND((rt0.c2 IN (rt0.c4)))))OR(((rt0.c1)-(NULL)))))AND(719967020)))AND(0.09257791327357168)))OR(CAST(rt0.c0 AS NUMERIC))) DESC;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c0  NULLS FIRST, ((((((((((CAST(rt0.c0 AS INTEGER))AND((rt0.c2 IN (rt0.c4)))))OR(((rt0.c1)-(NULL)))))AND(0x2ae9d32c)))AND(0.09257791327357168)))OR(CAST(rt0.c0 AS NUMERIC))) DESC;
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c0  NULLS FIRST, ((((((((((CAST(rt0.c0 AS INTEGER))AND((rt0.c2 IN (rt0.c4)))))OR(((rt0.c1)-(NULL)))))AND(719967020)))AND(0.09257791327357168)))OR(CAST(rt0.c0 AS NUMERIC))) DESC;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c0  NULLS FIRST, ((((((((((CAST(rt0.c0 AS INTEGER))AND((rt0.c2 IN (rt0.c4)))))OR(((rt0.c1)-(NULL)))))AND(0x2ae9d32c)))AND(0.09257791327357168)))OR(CAST(rt0.c0 AS NUMERIC))) DESC;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c3) AND (0.2626950793961451)) AS INTEGER));
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c3) AND (0.2626950793961451)) AS INTEGER)) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS TEXT), rt0.c1 DESC  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (((rt0.c2)IS NOT('0.5418946909131519')) COLLATE NOCASE) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS TEXT), rt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c3) AND (0.2626950793961451)) AS INTEGER));
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c3) AND (0.2626950793961451)) AS INTEGER)) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS TEXT), rt0.c1 DESC  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (((rt0.c2)IS NOT('0.5418946909131519')) COLLATE NOCASE) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS TEXT), rt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((COALESCE(rt0.c2, rt0.c2, rt0.c1))OR(rt0.c1)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END)))AND(rt0.c1)));
SELECT DISTINCT * FROM rt0 WHERE (((((((COALESCE(rt0.c2, rt0.c2, rt0.c1))OR(rt0.c1)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END)))AND(rt0.c1))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN ()));
SELECT ALL * FROM rt0 WHERE (((((((COALESCE(rt0.c2, rt0.c2, rt0.c1))OR(rt0.c1)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END)))AND(rt0.c1)));
SELECT DISTINCT * FROM rt0 WHERE (((((((COALESCE(rt0.c2, rt0.c2, rt0.c1))OR(rt0.c1)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END)))AND(rt0.c1))) INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN ()));
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE (('&G' IN ()) COLLATE BINARY);
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((('&G' IN ()) COLLATE BINARY)AND(''))) ORDER BY CASE WHEN CAST(rt0.c4 AS TEXT) THEN rt0.c2 ELSE ((rt0.c2)<=(rt0.c4)) END  NULLS FIRST, '压' DESC  NULLS LAST INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (rt0.c4) ORDER BY CASE WHEN CAST(rt0.c4 AS TEXT) THEN rt0.c2 ELSE ((rt0.c2)<=(rt0.c4)) END  NULLS FIRST, '压' DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c1)<(rt0.c1)) IN (x'')));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)<(rt0.c1)) IN (x''))) ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN (TYPEOF(DISTINCT rt0.c4)) AND (CASE WHEN rt0.c3 THEN rt0.c1 WHEN '' THEN rt0.c1 ELSE rt0.c3 END))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c1)<(rt0.c1)) IN (x'')));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)<(rt0.c1)) IN (x''))) ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN (TYPEOF(DISTINCT rt0.c4)) AND (CASE WHEN rt0.c3 THEN rt0.c1 WHEN '' THEN rt0.c1 ELSE rt0.c3 END))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (x'1e') ORDER BY ((rt0.c0)GLOB(0.28819260840668914)) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (x'1e') ORDER BY ((rt0.c0)GLOB(0.28819260840668914)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (x'1e') ORDER BY ((rt0.c0)GLOB(0.28819260840668914)) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (x'1e') ORDER BY ((rt0.c0)GLOB(0.28819260840668914)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(rt0.c1 COLLATE RTRIM)) ORDER BY ((((rt0.c1)IS(rt0.c2))) BETWEEN (rt0.c1) AND (CAST(rt0.c1 AS BLOB))) DESC, ((((rt0.c4) IS TRUE)) NOTNULL), CAST(SUBSTR(rt0.c2, rt0.c1) AS BLOB);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(rt0.c1 COLLATE RTRIM)) ORDER BY CAST((((rt0.c0, rt0.c2))<=((rt0.c4, rt0.c1))) AS NUMERIC)  NULLS LAST LIMIT 3;
SELECT MAX(rt0.c0) FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END) BETWEEN ('655589485') AND (UPPER(DISTINCT NULL))));
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END) BETWEEN ('655589485') AND (UPPER(DISTINCT NULL)))) INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(rt0.c3));
SELECT ALL * FROM rt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL * FROM rt0 WHERE (((LAST_INSERT_ROWID())AND(((((rt0.c3) NOT NULL))=(rt0.c4))))) ORDER BY ((rt0.c1)IS(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN 'oE' ELSE rt0.c1 END)) DESC  NULLS LAST, rt0.c0  NULLS FIRST, CASE ((((rt0.c3)OR(rt0.c1)))OR(rt0.c3))  WHEN -843991605 THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND ('472733420')) WHEN ((rt0.c4)-(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 END END  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((rt0.c1)IS(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN 'oE' ELSE rt0.c1 END)) DESC  NULLS LAST, rt0.c0  NULLS FIRST, CASE ((((rt0.c3)OR(rt0.c1)))OR(rt0.c3))  WHEN -843991605 THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND ('472733420')) WHEN ((rt0.c4)-(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 END END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL * FROM rt0 WHERE (((LAST_INSERT_ROWID())AND(((((rt0.c3) NOT NULL))=(rt0.c4))))) ORDER BY ((rt0.c1)IS(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN 'oE' ELSE rt0.c1 END)) DESC  NULLS LAST, rt0.c0  NULLS FIRST, CASE ((((rt0.c3)OR(rt0.c1)))OR(rt0.c3))  WHEN -843991605 THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND ('472733420')) WHEN ((rt0.c4)-(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 END END  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((rt0.c1)IS(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN 'oE' ELSE rt0.c1 END)) DESC  NULLS LAST, rt0.c0  NULLS FIRST, CASE ((((rt0.c3)OR(rt0.c1)))OR(rt0.c3))  WHEN -843991605 THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND ('472733420')) WHEN ((rt0.c4)-(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 END END  NULLS FIRST;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((CHANGES()) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c2)));
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((CHANGES()) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c2))) ORDER BY x'' DESC  NULLS LAST, ((rt0.c4)>(rt0.c2)) COLLATE BINARY  NULLS FIRST, CASE WHEN ((x'fd4c')/(rt0.c3)) THEN (+ (rt0.c3)) WHEN UNLIKELY(rt0.c0) THEN ((rt0.c1) IS TRUE) ELSE rt0.c3 END ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS BLOB));
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB))AND(((rt0.c2 COLLATE RTRIM)>>((+ (rt0.c3))))))) ORDER BY rt0.c3 ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0) NOTNULL))AND((((rt0.c1, rt0.c3, '0.6675364535288844')) BETWEEN ((rt0.c0, 0.29127812828270594, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)))))OR(LAST_INSERT_ROWID())))OR(ABS(DISTINCT rt0.c1)))) ORDER BY rt0.c3 ASC;
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS BLOB));
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB))AND(((rt0.c2 COLLATE RTRIM)>>((+ (rt0.c3))))))) ORDER BY rt0.c3 ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0) NOTNULL))AND((((rt0.c1, rt0.c3, '0.6675364535288844')) BETWEEN ((rt0.c0, 0.29127812828270594, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)))))OR(LAST_INSERT_ROWID())))OR(ABS(DISTINCT rt0.c1)))) ORDER BY rt0.c3 ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (DATETIME((~ (rt0.c0)), rt0.c0, CASE WHEN rt0.c1 THEN '-1662642870' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END, x'8b33'));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((DATETIME((~ (rt0.c0)), rt0.c0, CASE WHEN rt0.c1 THEN '-1662642870' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END, x'8b33'))AND('1436703206'))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c0))) IS TRUE));
SELECT MAX(rt0.c4) FROM rt0 WHERE (0.11383756797696798);
SELECT MAX(rt0.c4) FROM rt0 WHERE (0.11383756797696798) LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)<=(rt0.c3)))+(rt0.c3 COLLATE NOCASE)));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)<=(rt0.c3)))+(rt0.c3 COLLATE NOCASE))) ORDER BY (((rt0.c0)) NOT BETWEEN ((json_insert(rt0.c2, rt0.c1, rt0.c1, rt0.c0, rt0.c0))) AND ((((rt0.c1)+(rt0.c3))))) ASC, MAX(QUOTE('1'), rt0.c0 COLLATE BINARY)  NULLS FIRST, (((rt0.c0)) BETWEEN ((((rt0.c4) IS TRUE))) AND ((rt0.c2 COLLATE BINARY)))  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (NULLIF(((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)), rt0.c1 COLLATE BINARY)) ORDER BY (((rt0.c0)) NOT BETWEEN ((json_insert(rt0.c2, rt0.c1, rt0.c1, rt0.c0, rt0.c0))) AND ((((rt0.c1)+(rt0.c3))))) ASC, MAX(QUOTE('1'), rt0.c0 COLLATE BINARY)  NULLS FIRST, (((rt0.c0)) BETWEEN ((((rt0.c4) IS TRUE))) AND ((rt0.c2 COLLATE BINARY)))  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)<=(rt0.c3)))+(rt0.c3 COLLATE NOCASE)));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)<=(rt0.c3)))+(rt0.c3 COLLATE NOCASE))) ORDER BY (((rt0.c0)) NOT BETWEEN ((json_insert(rt0.c2, rt0.c1, rt0.c1, rt0.c0, rt0.c0))) AND ((((rt0.c1)+(rt0.c3))))) ASC, MAX(QUOTE('1'), rt0.c0 COLLATE BINARY)  NULLS FIRST, (((rt0.c0)) BETWEEN ((((rt0.c4) IS TRUE))) AND ((rt0.c2 COLLATE BINARY)))  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (NULLIF(((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)), rt0.c1 COLLATE BINARY)) ORDER BY (((rt0.c0)) NOT BETWEEN ((json_insert(rt0.c2, rt0.c1, rt0.c1, rt0.c0, rt0.c0))) AND ((((rt0.c1)+(rt0.c3))))) ASC, MAX(QUOTE('1'), rt0.c0 COLLATE BINARY)  NULLS FIRST, (((rt0.c0)) BETWEEN ((((rt0.c4) IS TRUE))) AND ((rt0.c2 COLLATE BINARY)))  NULLS FIRST LIMIT 0x2;
SELECT MIN(rt0.c1) FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c3)))OR(NULL)))AND(rt0.c1)) COLLATE BINARY) ORDER BY (((((+ (rt0.c3)))AND(((rt0.c1)LIKE(rt0.c3)))))OR(rt0.c1 COLLATE NOCASE)) ASC, ((((rt0.c1)/(rt0.c3)))<<((('-1049857838')<(rt0.c0)))) ASC, (('B' COLLATE BINARY)IS(rt0.c3)) DESC;
SELECT MIN(rt0.c1) FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c3)))OR(NULL)))AND(rt0.c1)) COLLATE BINARY)AND(CASE WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c1)OR(rt0.c0)) WHEN rt0.c1 THEN rt0.c4 END))) ORDER BY CAST(('1286122294' IN (rt0.c3)) AS TEXT) DESC  NULLS FIRST, (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE(CAST(']}' AS INTEGER))) ASC  NULLS LAST, (~ (((rt0.c0)/(rt0.c3)))) DESC LIMIT 2;
SELECT * FROM rt0 WHERE (((('')) BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c4)>>(rt0.c2)))))) ORDER BY ((((rt0.c3)LIKE(rt0.c2))) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (((rt0.c3)+(rt0.c2)))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((('')) BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c4)>>(rt0.c2))))))AND(((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))>=(0.12568823631040027))))) ORDER BY ((rt0.c0) NOT NULL) COLLATE RTRIM, ((rt0.c0) BETWEEN ((rt0.c2 IN ())) AND (((((((rt0.c4)OR(rt0.c4)))OR(x'')))OR(rt0.c1)))) DESC;
SELECT * FROM rt0 WHERE (((('')) BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c4)>>(rt0.c2)))))) ORDER BY ((((rt0.c3)LIKE(rt0.c2))) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (((rt0.c3)+(rt0.c2)))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((('')) BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c4)>>(rt0.c2))))))AND(((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))>=(0.12568823631040027))))) ORDER BY ((rt0.c0) NOT NULL) COLLATE RTRIM, ((rt0.c0) BETWEEN ((rt0.c2 IN ())) AND (((((((rt0.c4)OR(rt0.c4)))OR(x'')))OR(rt0.c1)))) DESC;
SELECT * FROM rt0 WHERE ((((((('277152988')>=('-1094403164')))AND(((rt0.c0)IS(rt0.c3)))))OR(((rt0.c0)LIKE(rt0.c4))))) ORDER BY ((((((((rt0.c1)OR(rt0.c0)))AND('|k9S')))OR(x'')))>(CASE rt0.c1  WHEN 0x52dfcfab THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END));
SELECT * FROM rt0 WHERE ((((((('277152988')==('-1094403164')))AND(((rt0.c0)IS(rt0.c3)))))OR(((rt0.c0)LIKE(rt0.c4))))) ORDER BY CAST(((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1)) AS BLOB) ASC  NULLS LAST, CAST(rt0.c3 COLLATE BINARY AS BLOB)  NULLS FIRST LIMIT 0x0 INTERSECT SELECT * FROM rt0 WHERE ('iDJE馠CN|~') ORDER BY CAST(((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1)) AS BLOB) ASC  NULLS LAST, CAST(rt0.c3 COLLATE BINARY AS BLOB)  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt0 WHERE ((((((('277152988')>=('-1094403164')))AND(((rt0.c0)IS(rt0.c3)))))OR(((rt0.c0)LIKE(rt0.c4))))) ORDER BY ((((((((rt0.c1)OR(rt0.c0)))AND('|k9S')))OR(x'')))>(CASE rt0.c1  WHEN 0x52dfcfab THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END));
SELECT * FROM rt0 WHERE ((((((('277152988')==('-1094403164')))AND(((rt0.c0)IS(rt0.c3)))))OR(((rt0.c0)LIKE(rt0.c4))))) ORDER BY CAST(((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1)) AS BLOB) ASC  NULLS LAST, CAST(rt0.c3 COLLATE BINARY AS BLOB)  NULLS FIRST LIMIT 0x0 INTERSECT SELECT * FROM rt0 WHERE ('iDJE馠CN|~') ORDER BY CAST(((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1)) AS BLOB) ASC  NULLS LAST, CAST(rt0.c3 COLLATE BINARY AS BLOB)  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt0 WHERE (0.6905752535983708) ORDER BY SQLITE_VERSION(), rt0.c1 DESC;
SELECT ALL * FROM rt0 WHERE (0.6905752535983708) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))*(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END));
SELECT * FROM rt0 WHERE (0.6905752535983708) ORDER BY SQLITE_VERSION(), rt0.c1 DESC;
SELECT ALL * FROM rt0 WHERE (0.6905752535983708) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))*(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END));
SELECT MAX(rt0.c0) FROM rt0 WHERE (CASE (~ (rt0.c0))  WHEN ((rt0.c1) NOT NULL) THEN CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END WHEN ((rt0.c4)>(rt0.c2)) THEN (~ (rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c0)>(rt0.c3)) ELSE rt0.c3 COLLATE BINARY END);
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (((CASE (~ (rt0.c0))  WHEN ((rt0.c1) NOT NULL) THEN CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END WHEN ((rt0.c4)>(rt0.c2)) THEN (~ (rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c0)>(rt0.c3)) ELSE rt0.c3 COLLATE BINARY END)AND((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)), (- (rt0.c3)), ((rt0.c2)<=(rt0.c1)), ((rt0.c4)%(rt0.c1))))<((rt0.c2 COLLATE RTRIM, ((rt0.c2)|(0.3116914639218895)), CAST(rt0.c0 AS REAL), ((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))))))) ORDER BY ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c4)))GLOB(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) DESC, CASE rt0.c3  WHEN (((rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c2)) BETWEEN ((rt0.c2, rt0.c4, rt0.c4, rt0.c4, 0.7960292023700238)) AND ((rt0.c0, 0.5834358638142138, rt0.c4, rt0.c0, 0.7447439873225848))) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((rt0.c0)||(rt0.c1)) WHEN CAST(rt0.c3 AS NUMERIC) THEN GLOB(rt0.c3, rt0.c1) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c0)IS NOT(rt0.c0)) ELSE rt0.c0 END  NULLS LAST LIMIT 5;
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(((((('_kQ')) BETWEEN ((rt0.c3)) AND ((rt0.c1)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c3) NOT BETWEEN (rt0.c0) AND (''))))))) LIMIT 0X3;
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)AND(((((('_kQ')) BETWEEN ((rt0.c3)) AND ((rt0.c1)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c3) NOT BETWEEN (rt0.c0) AND (''))))))) LIMIT 0X3;
SELECT MIN(rt0.c2) FROM rt0 WHERE (((+ (rt0.c0)) IN (((((NULL)OR(rt0.c4)))OR(rt0.c2))))) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE  NULLS LAST, CASE WHEN (738153986 IN ()) THEN (('0.9531247324114311')/(rt0.c4)) WHEN UPPER(rt0.c3) THEN ((rt0.c1)+(rt0.c4)) WHEN rt0.c1 THEN ((((((((rt0.c2)OR(0.13697280607570117)))AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c3)) END DESC;
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (((+ (rt0.c0)) IN (((((NULL)OR(rt0.c4)))OR(rt0.c2))))) ORDER BY ((((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))LIKE(((rt0.c0) NOT BETWEEN ('-695464690') AND (NULL)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS BLOB)) ORDER BY ((((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))LIKE(((rt0.c0) NOT BETWEEN ('-695464690') AND (NULL)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((ABS(DISTINCT rt0.c0))OR((((('-808174913')OR(rt0.c3)))AND(x'64')))))AND(MIN(rt0.c4, rt0.c2, rt0.c1, rt0.c1)))) ORDER BY (NOT (((rt0.c3)+(rt0.c4)))), ((x'50')-(LTRIM(rt0.c4))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((ABS(DISTINCT rt0.c0))OR((((('-808174913')OR(rt0.c3)))AND(x'64')))))AND(MIN(rt0.c4, rt0.c2, rt0.c1, rt0.c1)))) ORDER BY (NOT (((rt0.c3)+(rt0.c4)))), ((x'50')-(LTRIM(rt0.c4))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((json_patch(rt0.c2, rt0.c0))GLOB(((0.8724717562648373) IS TRUE)))) ORDER BY (NOT (((rt0.c3)+(rt0.c4)))), ((x'50')-(LTRIM(rt0.c4))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((ABS(DISTINCT rt0.c0))OR((((('-808174913')OR(rt0.c3)))AND(x'64')))))AND(MIN(rt0.c4, rt0.c2, rt0.c1, rt0.c1)))) ORDER BY (NOT (((rt0.c3)+(rt0.c4)))), ((x'50')-(LTRIM(rt0.c4))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((ABS(DISTINCT rt0.c0))OR((((('-808174913')OR(rt0.c3)))AND(x'64')))))AND(MIN(rt0.c4, rt0.c2, rt0.c1, rt0.c1)))) ORDER BY (NOT (((rt0.c3)+(rt0.c4)))), ((x'50')-(LTRIM(rt0.c4))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((json_patch(rt0.c2, rt0.c0))GLOB(((0.8724717562648373) IS TRUE)))) ORDER BY (NOT (((rt0.c3)+(rt0.c4)))), ((x'50')-(LTRIM(rt0.c4))) ASC  NULLS FIRST;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2)))LIKE(UNLIKELY(rt0.c1))));
SELECT MAX(rt0.c2) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2)))LIKE(UNLIKELY(rt0.c1)))) ORDER BY (((423190619 COLLATE NOCASE, rt0.c1 COLLATE BINARY, (~ (rt0.c3)), rt0.c3 COLLATE BINARY))=((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c3) IS TRUE), rt0.c2, CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END))) ASC  NULLS FIRST, (~ ((((rt0.c2))<((rt0.c0))))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY NULLIF((((rt0.c4, rt0.c0))<=((rt0.c0, rt0.c1))), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c3)AND(((((((TRIM(rt0.c2, rt0.c3))AND((((rt0.c0, rt0.c4))<=((rt0.c3, rt0.c4))))))OR((rt0.c3 IN ()))))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))))))) ORDER BY (((rt0.c4 IN (rt0.c1)))/((((rt0.c3, rt0.c4))>=((rt0.c3, rt0.c1))))), NULLIF('fm', TYPEOF(rt0.c4)) DESC;
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY NULLIF((((rt0.c4, rt0.c0))<=((rt0.c0, rt0.c1))), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c3)AND(((((((TRIM(rt0.c2, rt0.c3))AND((((rt0.c0, rt0.c4))<=((rt0.c3, rt0.c4))))))OR((rt0.c3 IN ()))))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))))))) ORDER BY (((rt0.c4 IN (rt0.c1)))/((((rt0.c3, rt0.c4))>=((rt0.c3, rt0.c1))))), NULLIF('fm', TYPEOF(rt0.c4)) DESC;
SELECT MAX(rt0.c2) FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c3)))AND((((('%')OR(rt0.c1)))OR(rt0.c1)))))OR(((rt0.c1) NOT NULL))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c3)))AND((((('%')OR(rt0.c1)))OR(rt0.c1)))))OR(((rt0.c1) NOT NULL))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((CAST(rt0.c1 AS TEXT))+(ABS(DISTINCT '-226105798'))) DESC INTERSECT SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 END)==(((rt0.c0)<(rt0.c0))))) ORDER BY ((CAST(rt0.c1 AS TEXT))+(ABS(DISTINCT '-226105798'))) DESC;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((((((CAST(rt0.c1 AS INTEGER))AND((((rt0.c3, 0.49131960400043506, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c4, rt0.c1, rt0.c1))))))OR(rt0.c3)))OR(CAST(rt0.c1 AS TEXT)))) ORDER BY x''  NULLS LAST, CASE rt0.c4 COLLATE RTRIM  WHEN rt0.c3 THEN (- (rt0.c0)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c0) NOTNULL) END DESC;
SELECT DISTINCT MIN(rt0.c1) FROM rt0 NOT INDEXED WHERE (((((((CAST(rt0.c1 AS INTEGER))AND((((rt0.c3, 0.49131960400043506, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c4, rt0.c1, rt0.c1))))))OR(rt0.c3)))OR(CAST(rt0.c1 AS TEXT)))) ORDER BY HEX(DISTINCT (1.709050562E9 IN (rt0.c0))), (((((((~ (-11514016)))AND(LOWER(DISTINCT 0.40112686189096836))))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))))OR(0Xffffffffa8eba46f)) DESC  NULLS FIRST, (((((((('2')AND(rt0.c0 COLLATE BINARY)))AND(((-255306992) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))))OR(((rt0.c4)IS NOT(rt0.c0))))  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT NULL))));
SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT NULL)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)GLOB(x'e5'))) LIMIT 1;
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT NULL))));
SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT NULL)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)GLOB(x'e5'))) LIMIT 1;
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE ((NOT ((rt0.c1 IN (rt0.c0)))));
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ((((NOT ((rt0.c1 IN (rt0.c0)))))AND(rt0.c1)));
