-- Time: 2021/05/19 01:09:35
-- Database: database13
-- Database version: 3.34.0
-- seed value: 1621357771657
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=(0X68f301b4, x'') WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL); -- 0ms;
REINDEX; -- 1ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL), (0.310211915931208); -- 1ms;
INSERT OR ABORT INTO vt1 VALUES ('1760756148'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.9299467230100918), (x'83bfbcff'); -- 0ms;
ANALYZE main; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (1489150588, 0.9299467230100918), (0.8462327308249847, 0.09482646582543619); -- 1ms;
COMMIT; -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '33404'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(x'f9f3b3', NULL) WHERE CAST(0x58c2a27c AS REAL); -- 1ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=('1979604771', 'bWhv_衎'); -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (0.8462327308249847, NULL), ('-1656493811', x''), ('1086688798', 'S09n{~p'), ('v1', NULL), (-0.0, '1760756148'); -- 1ms;
REINDEX  vt1; -- 0ms;
UPDATE OR IGNORE vt1 SET c0 = '1086688798'; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (x''), (NULL); -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'dc'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ROLLBACK vt1 SET c0 = x'84'; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '20012'); -- 1ms;
UPDATE OR REPLACE vt1 SET (c0, c0, c0)=('S09n{~p', x'cc', 0.6386073490585216) WHERE vt1.c0; -- 1ms;
END; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c1 = x'' WHERE CAST((vt0.c0 IN (vt0.c0)) AS BLOB); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c1, c1)=('0.9299467230100918', NULL, '499733756'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=('-1656493811', 0.9299467230100918, 0X58c2a27c); -- 0ms;
UPDATE OR ABORT vt1 SET c0 = 1.489150588E9, c0 = 0xffffffffd9549324 WHERE (('m') IS TRUE); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'e36f'), (x''), (NULL); -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES (1258981454), (x'33'), (x'dcf3'), (x'2f06'), (x''); -- 1ms;
ANALYZE; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.8166922048681287); -- 1ms;
UPDATE OR IGNORE vt0 SET c1 = 0X175b922a WHERE CASE (+ (vt0.c0))  WHEN (vt0.c0 IN (vt0.c1)) THEN CASE WHEN vt0.c1 THEN 0x784e74a5 WHEN '?' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE NULL END WHEN vt0.c0 THEN NULL WHEN -1.656493811E9 THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) WHEN QUOTE(vt0.c0) THEN ((((((vt0.c0)OR('vX-\\>u')))AND(vt0.c1)))AND(vt0.c0)) ELSE NULL END; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('%M-hours2'); -- 1ms;
END; -- 0ms;
END; -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c1) VALUES (x'', -1.656493811E9), (0.3600785158629738, 0Xffffffffd9549324); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
ANALYZE; -- 1ms;
REINDEX; -- 0ms;
PRAGMA incremental_vacuum(1043883576); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1427404429);
; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'188d8a77', 0Xffffffffd435a799) WHERE ABS(DISTINCT (((vt0.c1, vt0.c1, vt0.c1, NULL))<=((vt0.c0, vt0.c0, vt0.c1, vt0.c0)))); -- 0ms;
UPDATE vt1 SET (c0)=('391877162') WHERE (vt1.c0 IN ()); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT MIN(vt0.c1) FROM vt0 WHERE (((CASE WHEN 0.9299467230100918 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (LOWER(vt0.c0)) AND ((vt0.c0 IN ()))));
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((((CASE WHEN 0.9299467230100918 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (LOWER(vt0.c0)) AND ((vt0.c0 IN ()))))AND(((CAST(vt0.c0 AS TEXT))LIKE(vt0.c1))))) ORDER BY ((vt0.c0)!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST, ((vt0.c1)!=(vt0.c1)) COLLATE RTRIM ASC  NULLS LAST LIMIT 2 INTERSECT SELECT MIN(vt0.c1) FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0)<>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST, ((vt0.c1)!=(vt0.c1)) COLLATE RTRIM ASC  NULLS LAST LIMIT 2;
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE ('''f') ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN ((vt0.c1) ISNULL) WHEN '499733756' THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)) WHEN (vt1.c0 IN (vt0.c0, vt1.c0)) THEN x'' WHEN vt0.c1 COLLATE RTRIM THEN vt0.c0 WHEN CASE vt1.c0  WHEN vt0.c0 THEN '1489150588' ELSE vt1.c0 END THEN ((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)) END ASC, (((vt1.c0))>((vt1.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1, vt0 WHERE ('''f') ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN ((vt0.c1) ISNULL) WHEN '499733756' THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)) WHEN (vt1.c0 IN (vt0.c0, vt1.c0)) THEN x'' WHEN vt0.c1 COLLATE RTRIM THEN vt0.c0 WHEN CASE vt1.c0  WHEN vt0.c0 THEN '1489150588' ELSE vt1.c0 END THEN ((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)) END ASC, (((vt1.c0))>((vt1.c0))) COLLATE NOCASE DESC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1, vt0 WHERE (((((((vt0.c1)<=(vt0.c1)))AND(x'06c1')))AND(NULLIF(NULL, vt0.c0)))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN ((vt0.c1) ISNULL) WHEN '499733756' THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)) WHEN (vt1.c0 IN (vt0.c0, vt1.c0)) THEN x'' WHEN vt0.c1 COLLATE RTRIM THEN vt0.c0 WHEN CASE vt1.c0  WHEN vt0.c0 THEN '1489150588' ELSE vt1.c0 END THEN ((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)) END ASC, (((vt1.c0))>((vt1.c0))) COLLATE NOCASE DESC  NULLS LAST LIMIT 1;
SELECT * FROM vt1 WHERE ((+ (((vt1.c0) IS TRUE))));
SELECT DISTINCT * FROM vt1 WHERE ((+ (((vt1.c0) IS TRUE)))) ORDER BY ((((vt1.c0, vt1.c0, vt1.c0))<=((x'34d1', vt1.c0, vt1.c0))) IN ())  NULLS LAST, COALESCE(DISTINCT vt1.c0, vt1.c0, CAST(vt1.c0 AS REAL), NULL, '-1427404429'), ((vt1.c0) NOT BETWEEN (CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)-(vt1.c0))))  NULLS FIRST, CASE WHEN ((((((x'72')AND(vt1.c0)))OR(-1464712341)))OR(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (- (vt1.c0)) WHEN ((0.8166922048681287) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (((vt1.c0))>((vt1.c0))) WHEN CASE WHEN vt1.c0 THEN 0Xffffffff8cc1dd23 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END LIMIT 0X0;
SELECT * FROM vt1 WHERE ((+ (((vt1.c0) IS TRUE))));
SELECT DISTINCT * FROM vt1 WHERE ((+ (((vt1.c0) IS TRUE)))) ORDER BY ((((vt1.c0, vt1.c0, vt1.c0))<=((x'34d1', vt1.c0, vt1.c0))) IN ())  NULLS LAST, COALESCE(DISTINCT vt1.c0, vt1.c0, CAST(vt1.c0 AS REAL), NULL, '-1427404429'), ((vt1.c0) NOT BETWEEN (CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)-(vt1.c0))))  NULLS FIRST, CASE WHEN ((((((x'72')AND(vt1.c0)))OR(-1464712341)))OR(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (- (vt1.c0)) WHEN ((0.8166922048681287) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (((vt1.c0))>((vt1.c0))) WHEN CASE WHEN vt1.c0 THEN 0Xffffffff8cc1dd23 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END LIMIT 0X0;
SELECT * FROM vt1 WHERE (0X28e7893f);
SELECT ALL * FROM vt1 WHERE (((0x28e7893f)AND(((json_remove(vt1.c0, vt1.c0))>=(((vt1.c0)!=(vt1.c0))))))) LIMIT 0x0;
SELECT * FROM vt1 WHERE (0X28e7893f);
SELECT ALL * FROM vt1 WHERE (((0x28e7893f)AND(((json_remove(vt1.c0, vt1.c0))>=(((vt1.c0)!=(vt1.c0))))))) LIMIT 0x0;
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY CASE WHEN (~ (vt1.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) ELSE 0.4427175247759766 END, LOWER(((vt0.c0) IS TRUE)) DESC;
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY CASE WHEN (~ (vt1.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) ELSE 0.4427175247759766 END, LOWER(((vt0.c0) IS TRUE)) DESC LIMIT 1;
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(((vt1.c0)AND(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)OR(((vt1.c0)AND(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(NULL))) LIMIT 2;
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(((vt1.c0)AND(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)OR(((vt1.c0)AND(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(NULL))) LIMIT 2;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END, json_array_length(vt0.c1)))>=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)), (vt0.c1 IN (vt0.c1)), ((vt1.c0)IS(vt0.c0))))));
SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE ((((((vt0.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END, json_array_length(vt0.c1)))>=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)), (vt0.c1 IN (vt0.c1)), ((vt1.c0)IS(vt0.c0))))))AND(x'447f58'))) ORDER BY vt0.c1 DESC  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((('-' COLLATE NOCASE)AND(x'5a28a1'))) ORDER BY vt0.c1 DESC  NULLS LAST LIMIT 3;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END, json_array_length(vt0.c1)))>=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)), (vt0.c1 IN (vt0.c1)), ((vt1.c0)IS(vt0.c0))))));
SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE ((((((vt0.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END, json_array_length(vt0.c1)))>=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)), (vt0.c1 IN (vt0.c1)), ((vt1.c0)IS(vt0.c0))))))AND(x'447f58'))) ORDER BY vt0.c1 DESC  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((('-' COLLATE NOCASE)AND(x'5a28a1'))) ORDER BY vt0.c1 DESC  NULLS LAST LIMIT 3;
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE ((((((((((vt0.c0))<=((NULL))))OR(LIKELIHOOD(vt0.c1, vt1.c0))))AND((NOT (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) ORDER BY 0.9299467230100918 COLLATE NOCASE DESC;
SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE ((((((((((vt0.c0))=((NULL))))OR(LIKELIHOOD(vt0.c1, vt1.c0))))AND((NOT (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) ORDER BY 0.9299467230100918 COLLATE NOCASE DESC INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE (((x'34') ISNULL) COLLATE RTRIM) ORDER BY 0.9299467230100918 COLLATE NOCASE DESC;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN (((vt0.c0, vt1.c0))<=((vt1.c0, x''))) THEN ((vt0.c1)+(vt1.c0)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN vt1.c0 ELSE CASE WHEN vt0.c0 THEN 0.6018460411226147 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END END) ORDER BY ((((vt1.c0) IS TRUE))%(((((((((vt1.c0)AND(0.4427175247759766)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))  NULLS LAST, rtreenode((NOT (vt0.c1)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE WHEN (((vt0.c0, vt1.c0))<=((vt1.c0, x''))) THEN ((vt0.c1)+(vt1.c0)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN vt1.c0 ELSE CASE WHEN vt0.c0 THEN 0.6018460411226147 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END END)AND(((GLOB(vt0.c1, vt0.c1))>>(vt1.c0))))) ORDER BY ((((vt1.c0) IS TRUE))%(((((((((vt1.c0)AND(0.4427175247759766)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))  NULLS LAST, rtreenode((NOT (vt0.c1)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c0)>=(vt0.c0))) NOTNULL)) ORDER BY ((((vt1.c0) IS TRUE))%(((((((((vt1.c0)AND(0.4427175247759766)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))  NULLS LAST, rtreenode((NOT (vt0.c1)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN (((vt0.c0, vt1.c0))<=((vt1.c0, x''))) THEN ((vt0.c1)+(vt1.c0)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN vt1.c0 ELSE CASE WHEN vt0.c0 THEN 0.6018460411226147 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END END) ORDER BY ((((vt1.c0) IS TRUE))%(((((((((vt1.c0)AND(0.4427175247759766)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))  NULLS LAST, rtreenode((NOT (vt0.c1)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE WHEN (((vt0.c0, vt1.c0))<=((vt1.c0, x''))) THEN ((vt0.c1)+(vt1.c0)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN vt1.c0 ELSE CASE WHEN vt0.c0 THEN 0.6018460411226147 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END END)AND(((GLOB(vt0.c1, vt0.c1))>>(vt1.c0))))) ORDER BY ((((vt1.c0) IS TRUE))%(((((((((vt1.c0)AND(0.4427175247759766)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))  NULLS LAST, rtreenode((NOT (vt0.c1)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c0)>=(vt0.c0))) NOTNULL)) ORDER BY ((((vt1.c0) IS TRUE))%(((((((((vt1.c0)AND(0.4427175247759766)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))  NULLS LAST, rtreenode((NOT (vt0.c1)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (TYPEOF(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL ELSE vt0.c0 END));
SELECT DISTINCT * FROM vt0 WHERE (((TYPEOF(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL ELSE vt0.c0 END))AND(NULL))) ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS BLOB) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (NULL) ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS BLOB) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (TYPEOF(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL ELSE vt0.c0 END));
SELECT DISTINCT * FROM vt0 WHERE (((TYPEOF(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL ELSE vt0.c0 END))AND(NULL))) ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS BLOB) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (NULL) ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS BLOB) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(vt0.c1 AS BLOB)) ORDER BY (+ (vt0.c0 COLLATE NOCASE)) DESC;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (CAST(vt0.c1 AS BLOB)) ORDER BY (+ (vt0.c0 COLLATE NOCASE)) DESC;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (x'')) IN (NULL)));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (x'')) IN (NULL)))AND(((((((((((vt1.c0)<<(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC))))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) IS TRUE))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0x572164b1)))))))) ORDER BY ((vt1.c0)OR(vt1.c0)) COLLATE NOCASE DESC, CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, '\ck#h'))) END, CASE WHEN vt1.c0 THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN '-1464712341' THEN UNLIKELY(vt1.c0) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE ((vt1.c0)<>(vt1.c0)) END ASC, ((vt1.c0 IN ()) IN ()) DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT * FROM vt1 WHERE ((((((vt1.c0)%(vt1.c0))))==((((vt1.c0)==(x'802205')))))) ORDER BY ((vt1.c0)OR(vt1.c0)) COLLATE NOCASE DESC, CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, '\ck#h'))) END, CASE WHEN vt1.c0 THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN '-1464712341' THEN UNLIKELY(vt1.c0) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE ((vt1.c0)<>(vt1.c0)) END ASC, ((vt1.c0 IN ()) IN ()) DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (x'')) IN (NULL)));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (x'')) IN (NULL)))AND(((((((((((vt1.c0)<<(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC))))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) IS TRUE))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0x572164b1)))))))) ORDER BY ((vt1.c0)OR(vt1.c0)) COLLATE NOCASE DESC, CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, '\ck#h'))) END, CASE WHEN vt1.c0 THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN '-1464712341' THEN UNLIKELY(vt1.c0) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE ((vt1.c0)<>(vt1.c0)) END ASC, ((vt1.c0 IN ()) IN ()) DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT * FROM vt1 WHERE ((((((vt1.c0)%(vt1.c0))))==((((vt1.c0)==(x'802205')))))) ORDER BY ((vt1.c0)OR(vt1.c0)) COLLATE NOCASE DESC, CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, '\ck#h'))) END, CASE WHEN vt1.c0 THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN '-1464712341' THEN UNLIKELY(vt1.c0) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE ((vt1.c0)<>(vt1.c0)) END ASC, ((vt1.c0 IN ()) IN ()) DESC  NULLS FIRST LIMIT 1;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)) IN ())) ORDER BY -1464712341, ((vt1.c0)>>((vt0.c0 IN ())));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)) IN ())) ORDER BY -1464712341, ((vt1.c0)>>((vt0.c0 IN ())));
SELECT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c0) ISNULL)) INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE ((((- (vt0.c0)))OR(vt0.c1)));
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE ((((- (vt0.c0)))OR(vt0.c1))) ORDER BY CAST('1461806257' AS INTEGER) LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)|(vt0.c1)), 1.086688798E9))!=((((vt1.c0)>>(vt1.c0)), (vt1.c0 IN (vt0.c1, vt1.c0, vt0.c0))))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0)|(vt0.c1)), 1.086688798E9))>((((vt1.c0)>>(vt1.c0)), (vt1.c0 IN (vt0.c1)))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (MAX(vt0.c0, vt0.c0, vt1.c0)) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), ((((((((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE '0.9299467230100918' END)OR(HEX(vt1.c0))))AND(((vt1.c0)%(vt1.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR((- (vt1.c0)))) ASC LIMIT 0X3;
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)|(vt0.c1)), 1.086688798E9))!=((((vt1.c0)>>(vt1.c0)), (vt1.c0 IN (vt0.c1, vt1.c0, vt0.c0))))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0)|(vt0.c1)), 1.086688798E9))>((((vt1.c0)>>(vt1.c0)), (vt1.c0 IN (vt0.c1)))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (MAX(vt0.c0, vt0.c0, vt1.c0)) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), ((((((((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE '0.9299467230100918' END)OR(HEX(vt1.c0))))AND(((vt1.c0)%(vt1.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR((- (vt1.c0)))) ASC LIMIT 0X3;
SELECT MIN(vt0.c0) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))+(vt0.c1))) ORDER BY vt0.c0 ASC  NULLS FIRST, (((((vt0.c0)<>(vt0.c0))))>((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -2.96494888E8 ELSE vt0.c0 END)));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))+(vt0.c1)))AND(((((((738629008)LIKE(vt0.c1)))AND(CAST(vt0.c0 AS NUMERIC))))OR(MIN(vt0.c1, vt0.c1, vt0.c1, vt0.c1)))))) ORDER BY ((((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR(((vt0.c1)>>(vt0.c0)))))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST, vt0.c0 ASC  NULLS LAST, CASE ((x'91cea8')IS NOT(vt0.c0))  WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c1) NOTNULL) WHEN NULL THEN (((vt0.c0, x'27'))=((vt0.c0, vt0.c0))) WHEN -517599695 THEN (+ (vt0.c1)) ELSE (((vt0.c1))=((vt0.c0))) END ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (LIKELY(((vt1.c0) NOTNULL))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL) DESC  NULLS LAST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.7934751872240151 END)*((+ (vt1.c0))));
SELECT DISTINCT * FROM vt1 WHERE (((LIKELY(((vt1.c0) NOTNULL)))AND((((vt1.c0, vt1.c0)) NOT BETWEEN ((((NULL) IS FALSE), (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))) AND ((UNLIKELY(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))))) ORDER BY ((vt1.c0 IN (vt1.c0)) IN ()) ASC  NULLS LAST LIMIT 0x0;
SELECT * FROM vt1 WHERE (LIKELY(((vt1.c0) NOTNULL))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL) DESC  NULLS LAST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.7934751872240151 END)*((+ (vt1.c0))));
SELECT DISTINCT * FROM vt1 WHERE (((LIKELY(((vt1.c0) NOTNULL)))AND((((vt1.c0, vt1.c0)) NOT BETWEEN ((((NULL) IS FALSE), (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))) AND ((UNLIKELY(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))))) ORDER BY ((vt1.c0 IN (vt1.c0)) IN ()) ASC  NULLS LAST LIMIT 0x0;
SELECT MIN(vt0.c0) FROM vt0 NATURAL JOIN vt1 WHERE (CAST(((vt0.c0)&(vt1.c0)) AS TEXT));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 NATURAL JOIN vt1 WHERE (((CAST(((vt0.c0)&(vt1.c0)) AS TEXT))AND(vt0.c0))) LIMIT 0X4;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((json(vt0.c0))) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0Xffffffff8c2f0a38 END))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0)) BETWEEN ((json(vt0.c0))) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0Xffffffff8c2f0a38 END))))AND((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())))) ORDER BY ((highlight('1419213546', vt0.c1, vt0.c0, vt0.c1)) BETWEEN (CAST(vt0.c1 AS BLOB)) AND ((vt0.c0 IN (vt0.c0)))), (+ (vt0.c0 COLLATE BINARY))  NULLS FIRST, (((((vt1.c0, vt0.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt1.c0, vt0.c0)) AND ((vt0.c1, vt1.c0, vt1.c0, vt0.c0))))|(((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())) ORDER BY (- (((vt0.c0) IS TRUE)));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())) ORDER BY (- (((vt0.c0) IS TRUE)));
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())) ORDER BY (- (((vt0.c0) IS TRUE)));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())) ORDER BY (- (((vt0.c0) IS TRUE)));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (-1786790141) AND (0.6018460411226147)) THEN CAST(vt1.c0 AS BLOB) ELSE CASE vt1.c0  WHEN 'a' THEN 'FALSE' END END);
SELECT * FROM vt1 WHERE (((CASE WHEN ((vt1.c0) BETWEEN (-1786790141) AND (0.6018460411226147)) THEN CAST(vt1.c0 AS BLOB) ELSE CASE vt1.c0  WHEN 'a' THEN 'FALSE' END END)AND(CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS REAL)))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))) NOTNULL), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) LIMIT 0 INTERSECT SELECT ALL * FROM vt1 WHERE (((((('婜', vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL)) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))) NOTNULL), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) LIMIT 0;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (-1786790141) AND (0.6018460411226147)) THEN CAST(vt1.c0 AS BLOB) ELSE CASE vt1.c0  WHEN 'a' THEN 'FALSE' END END);
SELECT * FROM vt1 WHERE (((CASE WHEN ((vt1.c0) BETWEEN (-1786790141) AND (0.6018460411226147)) THEN CAST(vt1.c0 AS BLOB) ELSE CASE vt1.c0  WHEN 'a' THEN 'FALSE' END END)AND(CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS REAL)))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))) NOTNULL), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) LIMIT 0 INTERSECT SELECT ALL * FROM vt1 WHERE (((((('婜', vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL)) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))) NOTNULL), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) LIMIT 0;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)>(vt1.c0)))OR(((vt0.c1) IS TRUE)))) ORDER BY ABS(DISTINCT INSTR(vt0.c1, vt0.c1)) DESC, (((((vt1.c0, vt0.c0))>((vt0.c1, vt0.c1)))) NOT BETWEEN ((- (vt1.c0))) AND (CASE 'Hvb5<EkJ'  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt1.c0)>(vt1.c0)))OR(((vt0.c1) IS TRUE))))AND((+ (vt0.c1))))) ORDER BY ''  NULLS LAST, (vt1.c0 COLLATE NOCASE IN (vt0.c1, IFNULL(DISTINCT NULL, vt0.c0))) ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED WHERE (0x724e1420) ORDER BY ''  NULLS LAST, (vt1.c0 COLLATE NOCASE IN (vt0.c1, IFNULL(DISTINCT NULL, vt0.c0))) ASC LIMIT 0X0;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)>(vt1.c0)))OR(((vt0.c1) IS TRUE)))) ORDER BY ABS(DISTINCT INSTR(vt0.c1, vt0.c1)) DESC, (((((vt1.c0, vt0.c0))>((vt0.c1, vt0.c1)))) NOT BETWEEN ((- (vt1.c0))) AND (CASE 'Hvb5<EkJ'  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt1.c0)>(vt1.c0)))OR(((vt0.c1) IS TRUE))))AND((+ (vt0.c1))))) ORDER BY ''  NULLS LAST, (vt1.c0 COLLATE NOCASE IN (vt0.c1, IFNULL(DISTINCT NULL, vt0.c0))) ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED WHERE (0x724e1420) ORDER BY ''  NULLS LAST, (vt1.c0 COLLATE NOCASE IN (vt0.c1, IFNULL(DISTINCT NULL, vt0.c0))) ASC LIMIT 0X0;
SELECT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0))&((vt0.c0 IN (vt0.c1))))) ORDER BY ((((CAST(vt0.c1 AS TEXT))AND((NOT (0.09482646582543619)))))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0))&((vt0.c0 IN (vt0.c1))))) ORDER BY ((((CAST(vt0.c1 AS TEXT))AND((NOT (0.09482646582543619)))))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0))&((vt0.c0 IN (vt0.c1))))) ORDER BY ((((CAST(vt0.c1 AS TEXT))AND((NOT (0.09482646582543619)))))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0))&((vt0.c0 IN (vt0.c1))))) ORDER BY ((((CAST(vt0.c1 AS TEXT))AND((NOT (0.09482646582543619)))))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))  NULLS LAST;
SELECT MAX(vt0.c0) FROM vt1, vt0 WHERE (((vt0.c1)AND(((vt1.c0)*(NULL))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt0.c1)))) AND ((vt0.c0 COLLATE NOCASE))), ((((CAST(vt1.c0 AS TEXT))AND(((vt1.c0)>=(vt0.c1)))))OR(vt0.c1 COLLATE BINARY));
SELECT DISTINCT MAX(vt0.c0) FROM vt1, vt0 WHERE (((vt0.c1)AND(((vt1.c0)*(NULL))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt0.c1)))) AND ((vt0.c0 COLLATE NOCASE))), ((((CAST(vt1.c0 AS TEXT))AND(((vt1.c0)>=(vt0.c1)))))OR(vt0.c1 COLLATE BINARY)) LIMIT 0X0;
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (((vt0.c0, vt0.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)), (((0.767642353761802, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c1)) AND ((x'6e', vt0.c0, vt0.c1, vt1.c0, vt0.c0))))) AND ((((vt0.c0)||(vt0.c0)), CAST(vt1.c0 AS BLOB)))) DESC  NULLS LAST, (((~ (vt1.c0)))OR((0Xffffffffe06bbf19 IN (vt0.c1)))) ASC  NULLS FIRST, 0Xffffffff8c2f0a38  NULLS FIRST, 0.7831646522758499 ASC  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))<>((CAST(vt0.c0 AS TEXT)))) INTERSECT SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE (CASE (NOT (vt0.c1))  WHEN (x'22' IN (vt0.c1)) THEN ((x'752b') BETWEEN (vt1.c0) AND (vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) END) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))!=((CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt1 WHERE (((NULL)LIKE(SQLITE_SOURCE_ID())));
SELECT DISTINCT * FROM vt1 WHERE (((((NULL)LIKE(SQLITE_SOURCE_ID())))AND(((CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.09482646582543619 THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>((~ (vt1.c0))))))) ORDER BY UNLIKELY(CAST(vt1.c0 AS TEXT))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY UNLIKELY(CAST(vt1.c0 AS TEXT))  NULLS FIRST LIMIT 0;
SELECT * FROM vt1 WHERE (((NULL)LIKE(SQLITE_SOURCE_ID())));
SELECT DISTINCT * FROM vt1 WHERE (((((NULL)LIKE(SQLITE_SOURCE_ID())))AND(((CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.09482646582543619 THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>((~ (vt1.c0))))))) ORDER BY UNLIKELY(CAST(vt1.c0 AS TEXT))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY UNLIKELY(CAST(vt1.c0 AS TEXT))  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((NULL) NOT NULL)) ORDER BY CASE WHEN vt1.c0 THEN (- (vt0.c1)) END ASC  NULLS LAST, CAST(((vt0.c0) NOTNULL) AS BLOB) ASC;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((((NULL) NOT NULL))AND((- ((((vt0.c0, NULL)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt0.c1, 0.13580659175708854)))))))) ORDER BY CASE WHEN vt1.c0 THEN (- (vt0.c1)) END ASC  NULLS LAST, CAST(((vt0.c0) NOTNULL) AS BLOB) ASC LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY CASE WHEN vt1.c0 THEN (- (vt0.c1)) END ASC  NULLS LAST, CAST(((vt0.c0) NOTNULL) AS BLOB) ASC LIMIT 1;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE ((vt0.c1 IN ())) ORDER BY CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) AS BLOB) ASC  NULLS FIRST;
SELECT MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c1 IN ()))AND((((vt0.c1, vt0.c0)) BETWEEN ((((((((vt0.c1)AND(vt0.c0)))AND(x'f5b9')))AND(vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)LIKE(vt0.c0)), (vt0.c1 IN (vt0.c0)))))))) ORDER BY CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) AS BLOB) ASC  NULLS FIRST LIMIT 0x2;
SELECT COUNT(*) FROM vt0, vt1 WHERE (TRIM(DISTINCT (~ (vt0.c1)), ((vt0.c1)>(vt1.c0))));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((TRIM(DISTINCT (~ (vt0.c1)), ((vt0.c1)>(vt1.c0))))AND(((vt0.c0)/(vt0.c0)) COLLATE NOCASE))) ORDER BY (((((((((~ (vt0.c1)))OR((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CASE WHEN '?M' THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN '<' THEN 0.7451127957262554 WHEN vt0.c0 THEN NULL END)))AND((- (vt0.c0)))))AND(UPPER(vt1.c0))) DESC, (((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0))))>((CAST(vt0.c0 AS TEXT), ((vt0.c0)==(vt1.c0))))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (CASE 0x175b922a  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((vt0.c1)OR(x'71')))AND(vt0.c0)) END) ORDER BY (((((((((~ (vt0.c1)))OR((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CASE WHEN '?M' THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN '<' THEN 0.7451127957262554 WHEN vt0.c0 THEN NULL END)))AND((- (vt0.c0)))))AND(UPPER(vt1.c0))) DESC, (((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0))))>((CAST(vt0.c0 AS TEXT), ((vt0.c0)=(vt1.c0))))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0))<((0.4556401320561386))) AS NUMERIC)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(vt1.c0))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((CAST((((vt1.c0))<((0.4556401320561386))) AS NUMERIC))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 'NEl%4b' THEN vt1.c0 END COLLATE RTRIM))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(vt1.c0))  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ())) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(vt1.c0))  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0))<((0.4556401320561386))) AS NUMERIC)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(vt1.c0))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((CAST((((vt1.c0))<((0.4556401320561386))) AS NUMERIC))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 'NEl%4b' THEN vt1.c0 END COLLATE RTRIM))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(vt1.c0))  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ())) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(vt1.c0))  NULLS LAST LIMIT 0x1;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<<('|L
'))) ORDER BY 'Oq'  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<<('|L
'))) ORDER BY ((((((((1.979604771E9)AND(vt0.c1 COLLATE NOCASE)))AND(ABS(vt0.c0))))AND(vt0.c1)))OR((~ (vt0.c0)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ABS(DISTINCT vt0.c0) END  NULLS LAST LIMIT 0X3 INTERSECT SELECT MIN(vt0.c1) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)||((+ (vt0.c0))))) ORDER BY ((((((((1.979604771E9)AND(vt0.c1 COLLATE NOCASE)))AND(ABS(vt0.c0))))AND(vt0.c1)))OR((~ (vt0.c0)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ABS(DISTINCT vt0.c0) END  NULLS LAST LIMIT 0x3;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))GLOB((vt0.c0 IN ())))) ORDER BY ((json_insert(vt0.c1, vt0.c1, vt0.c0))<<(vt0.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))GLOB((vt0.c0 IN ())))) ORDER BY ((json_insert(vt0.c1, vt0.c1, vt0.c0))<<(vt0.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt0 INNER JOIN vt1 ON CASE ((vt1.c0)<>(vt0.c0))  WHEN ((vt0.c1)*(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN '-24960678' THEN ((vt0.c0)|(0.767642353761802)) END WHERE (((((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0))) IS TRUE));
SELECT DISTINCT MAX(vt1.c0) FROM vt0 INNER JOIN vt1 ON CASE ((vt1.c0)<>(vt0.c0))  WHEN ((vt0.c1)*(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN '-24960678' THEN ((vt0.c0)|(0.767642353761802)) END WHERE (((((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0))) IS TRUE)) ORDER BY vt1.c0 ASC LIMIT 0x2;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 IN (vt1.c0, vt1.c0)) IN ()));
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ())) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((- (vt1.c0))) LIMIT 0x1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 IN (vt1.c0, vt1.c0)) IN ()));
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ())) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((- (vt1.c0))) LIMIT 0x1;
SELECT COUNT(*) FROM vt1 WHERE ((((((((NOT (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0)) NOT BETWEEN ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL)), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'6bf5')))OR(vt1.c0)))) AND (((+ (vt1.c0)), vt1.c0))) ASC;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((((((((((NOT (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((~ ((((vt1.c0)) NOT BETWEEN ((x'ce15')) AND ((vt1.c0)))))))) ORDER BY (((vt1.c0, vt1.c0)) NOT BETWEEN ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL)), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'6bf5')))OR(vt1.c0)))) AND (((+ (vt1.c0)), vt1.c0))) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0)*(vt0.c1)) IN ()));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)*(vt0.c1)) IN ())) ORDER BY NULL DESC INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR((((0x68f301b4, vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c1, x'', vt0.c1, vt0.c0, vt0.c1, vt0.c1)))))) ORDER BY NULL DESC;
SELECT * FROM vt0 WHERE ((((vt0.c0)*(vt0.c1)) IN ()));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)*(vt0.c1)) IN ())) ORDER BY NULL DESC INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR((((0x68f301b4, vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c1, x'', vt0.c1, vt0.c0, vt0.c1, vt0.c1)))))) ORDER BY NULL DESC;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY, (+ (vt1.c0)), CAST(NULL AS BLOB), (~ (''))))>((('489876441' IN (vt1.c0, vt1.c0, vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)), ((vt1.c0) ISNULL), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0 COLLATE BINARY, (+ (vt1.c0)), CAST(NULL AS BLOB), (~ (''))))>((('489876441' IN (vt1.c0, vt1.c0, vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)), ((vt1.c0) ISNULL), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))))AND(CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)))) ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) IS TRUE) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) IS TRUE) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY, (+ (vt1.c0)), CAST(NULL AS BLOB), (~ (''))))>((('489876441' IN (vt1.c0, vt1.c0, vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)), ((vt1.c0) ISNULL), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0 COLLATE BINARY, (+ (vt1.c0)), CAST(NULL AS BLOB), (~ (''))))>((('489876441' IN (vt1.c0, vt1.c0, vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)), ((vt1.c0) ISNULL), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))))AND(CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)))) ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) IS TRUE) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) IS TRUE) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)+((vt1.c0 IN ())))) ORDER BY (NOT ((vt1.c0 IN (vt1.c0, vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)+((vt1.c0 IN ()))))AND(((((((LIKELIHOOD(vt0.c1, vt0.c0))AND(((vt1.c0)IS NOT(vt0.c1)))))OR((vt0.c0 IN (vt0.c1)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))))) ORDER BY ((vt0.c0) BETWEEN ((((vt0.c0))!=((vt1.c0)))) AND ((((vt1.c0, vt1.c0))>=((vt0.c0, vt0.c0))))), (((+ (NULL))) NOTNULL) DESC;
SELECT MIN(vt0.c1) FROM vt0 LEFT OUTER JOIN vt1 ON (('x#|T鈪,F') IS FALSE) WHERE ((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((((vt0.c1)IS(vt0.c0)), ((vt1.c0)!=(vt0.c1)), NULL COLLATE BINARY)) AND (((((x'02', vt1.c0, vt0.c1, vt1.c0, vt0.c1))<((vt0.c0, vt1.c0, vt0.c1, vt0.c0, x'28f1'))), ((vt0.c0)*(vt0.c1)), (((vt1.c0, 'F)j5놇곘 T')) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0))))))) ORDER BY ((CAST(vt1.c0 AS REAL)) IS TRUE) DESC;
SELECT DISTINCT MIN(vt0.c1) FROM vt0 LEFT OUTER JOIN vt1 ON (('x#|T鈪,F') IS FALSE) WHERE ((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((((vt0.c1)IS(vt0.c0)), ((vt1.c0)<>(vt0.c1)), NULL COLLATE BINARY)) AND (((((x'02', vt1.c0, vt0.c1, vt1.c0, vt0.c1))<((vt0.c0, vt1.c0, vt0.c1, vt0.c0, x'28f1'))), ((vt0.c0)*(vt0.c1)), (((vt1.c0, 'F)j5놇곘 T')) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0))))))) ORDER BY vt1.c0 ASC  NULLS FIRST, (((vt0.c0) NOTNULL) IN ()) ASC  NULLS LAST;
SELECT MAX(vt0.c0) FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (highlight(vt0.c1, vt0.c0, vt0.c1, vt0.c1)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE NULL END)));
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE ((((((- (vt0.c0))) NOT BETWEEN (highlight(vt0.c1, vt0.c0, vt0.c1, vt0.c1)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE NULL END)))AND(((vt0.c1)&((vt0.c0 IN (vt0.c1, vt0.c1))))))) ORDER BY CAST(UNLIKELY(DISTINCT vt0.c0) AS REAL) ASC  NULLS FIRST, (((vt0.c1 IN ()))-(((vt0.c1) IS TRUE))), vt0.c1  NULLS LAST LIMIT 0;
SELECT * FROM vt1, vt0 WHERE (x'');
SELECT DISTINCT * FROM vt1, vt0 WHERE (x'') ORDER BY ((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ('213797321') ORDER BY ((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT * FROM vt1, vt0 WHERE (x'');
SELECT DISTINCT * FROM vt1, vt0 WHERE (x'') ORDER BY ((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ('213797321') ORDER BY ((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) ISNULL))))) ORDER BY ((vt1.c0) IS TRUE)  NULLS FIRST, CASE WHEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND ('V#ัf
''sz')) WHEN vt1.c0 THEN (NOT (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN -2022459642 THEN vt1.c0 END THEN vt1.c0 END ASC  NULLS LAST, ((((((((vt1.c0)<>(vt1.c0)))OR((NOT (vt1.c0)))))AND(((vt1.c0) BETWEEN (-1.656493811E9) AND (vt1.c0)))))OR(CAST(vt1.c0 AS INTEGER)));
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) ISNULL))))) ORDER BY ((vt1.c0) IS TRUE)  NULLS FIRST, CASE WHEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND ('V#ัf
''sz')) WHEN vt1.c0 THEN (NOT (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN -2022459642 THEN vt1.c0 END THEN vt1.c0 END ASC  NULLS LAST, ((((((((vt1.c0)<>(vt1.c0)))OR((NOT (vt1.c0)))))AND(((vt1.c0) BETWEEN (-1.656493811E9) AND (vt1.c0)))))OR(CAST(vt1.c0 AS INTEGER))) LIMIT 0x1;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY CASE ((vt0.c1)&('1934281787'))  WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN vt0.c1 COLLATE BINARY WHEN HEX(DISTINCT vt0.c1) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt0.c0)>=(vt0.c0)) THEN (vt0.c0 IN (vt1.c0, vt1.c0)) ELSE (vt1.c0 IN ()) END ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY (((vt1.c0) IS FALSE) IN ((+ (vt0.c0)))) DESC, (~ (TRIM(vt0.c0))) DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY CASE ((vt0.c1)&('1934281787'))  WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN vt0.c1 COLLATE BINARY WHEN HEX(DISTINCT vt0.c1) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt0.c0)>=(vt0.c0)) THEN (vt0.c0 IN (vt1.c0, vt1.c0)) ELSE (vt1.c0 IN ()) END ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY (((vt1.c0) IS FALSE) IN ((+ (vt0.c0)))) DESC, (~ (TRIM(vt0.c0))) DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL MIN(vt1.c0) FROM vt0, vt1 WHERE ((NOT ((+ (0.0010294982188797652))))) ORDER BY NULL, CAST((vt0.c1 IN (vt0.c0)) AS REAL) DESC, CAST(NULL AS INTEGER) DESC  NULLS FIRST;
SELECT ALL MIN(vt1.c0) FROM vt0, vt1 WHERE ((((NOT ((+ (0.0010294982188797652)))))AND(-2.4960678E7))) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN x'' THEN '' END) NOTNULL) DESC  NULLS LAST, ((vt0.c1 IN ()) IN (TRIM(DISTINCT vt0.c0), (((0.344683209230246, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, NULL, x'472d')) AND ((7.38629008E8, vt0.c1, vt0.c1))), ((vt1.c0)AND(vt1.c0)))) ASC  NULLS LAST, CAST(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) AS BLOB) INTERSECT SELECT MIN(vt1.c0) FROM vt0, vt1 WHERE ((((MAX(vt0.c0, vt0.c0, vt0.c1, vt1.c0), ((vt0.c0)|(vt0.c0))))>(((- (vt0.c0)), CAST(vt0.c0 AS INTEGER))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN x'' THEN '' END) NOTNULL) DESC  NULLS LAST, ((vt0.c1 IN ()) IN (TRIM(DISTINCT vt0.c0), (((0.344683209230246, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, NULL, x'472d')) AND ((7.38629008E8, vt0.c1, vt0.c1))), ((vt1.c0)AND(vt1.c0)))) ASC  NULLS LAST, CAST(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) AS BLOB);
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((NOT (vt0.c0)))) AND ((vt0.c0)))) ORDER BY ((vt0.c1 COLLATE RTRIM)AND(CASE x'34'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END));
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((NOT (vt0.c0)))) AND ((vt0.c0)))) ORDER BY ((vt0.c1 COLLATE RTRIM)AND(CASE x'34'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) LIMIT 2;
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE ((((vt0.c1)*('1917719584')) IN ())) ORDER BY ((((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))|(IFNULL(DISTINCT vt0.c0, x'81'))) ASC  NULLS LAST, CASE vt1.c0 COLLATE NOCASE  WHEN (vt0.c1 IN (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) WHEN NULL THEN (((vt0.c0))!=((vt0.c0))) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END THEN NULLIF(vt0.c0, vt0.c0) END, ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(CAST(vt1.c0 AS INTEGER))))OR((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE ((((((vt0.c1)*('1917719584')) IN ()))AND(vt0.c0 COLLATE RTRIM))) ORDER BY ((((((CAST(vt1.c0 AS INTEGER))AND(vt0.c1)))OR(((((((((((((vt1.c0)AND(vt0.c0)))OR(0.8981311707057964)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(0Xffffffffa41b833f)))))OR(x'' COLLATE RTRIM))  NULLS LAST, ((CAST(vt0.c1 AS BLOB)) BETWEEN (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0))) AND (((vt1.c0)|(vt0.c1)))) ASC  NULLS LAST LIMIT 0;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (4.89876441E8) ORDER BY (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<>((((vt1.c0)=(vt1.c0))))), ((vt1.c0) NOTNULL) COLLATE BINARY  NULLS FIRST, ((((((vt1.c0)<>(vt1.c0)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((-1.7976931348623157E308))))))AND(((vt1.c0)IS NOT(vt1.c0))));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (4.89876441E8) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY DESC LIMIT 0;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)) LIMIT 0X4 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (vt1.c0) LIMIT 4;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM) ORDER BY ((((vt1.c0)-('')))%((((vt1.c0))>((vt1.c0))))), ((((((((vt1.c0) IS FALSE))OR((NOT (vt1.c0)))))AND('391877162')))OR(CAST(vt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM) ORDER BY ((((vt1.c0)-('')))%((((vt1.c0))>((vt1.c0))))), ((((((((vt1.c0) IS FALSE))OR((NOT (vt1.c0)))))AND('391877162')))OR(CAST(vt1.c0 AS INTEGER)))  NULLS FIRST INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS BLOB)) ORDER BY ((((vt1.c0)-('')))%((((vt1.c0))>((vt1.c0))))), ((((((((vt1.c0) IS FALSE))OR((NOT (vt1.c0)))))AND('391877162')))OR(CAST(vt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM)AND(((((((((((vt0.c1 COLLATE NOCASE)OR(((vt0.c1)&(vt0.c0)))))AND((vt0.c1 IN (vt0.c1)))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0) ISNULL))))OR(CAST(vt0.c1 AS NUMERIC)))))) LIMIT 5 INTERSECT SELECT ALL * FROM vt0 WHERE ((CAST('''ux*r' AS NUMERIC) IN ((vt0.c0 IN ()), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) LIMIT 5;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM)AND(((((((((((vt0.c1 COLLATE NOCASE)OR(((vt0.c1)&(vt0.c0)))))AND((vt0.c1 IN (vt0.c1)))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0) ISNULL))))OR(CAST(vt0.c1 AS NUMERIC)))))) LIMIT 5 INTERSECT SELECT ALL * FROM vt0 WHERE ((CAST('''ux*r' AS NUMERIC) IN ((vt0.c0 IN ()), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) LIMIT 5;
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE (CASE ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(NULL))  WHEN ((vt1.c0)IS(vt1.c0)) THEN (((vt0.c1))<=((vt0.c0))) END);
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE (CASE ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(NULL))  WHEN ((vt1.c0)IS(vt1.c0)) THEN (((vt0.c1))<((vt0.c0))) END) LIMIT 1;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((NOT (TRIM(DISTINCT vt0.c0, vt0.c0)))) ORDER BY (((vt0.c1, ((((((((NULL)AND(vt0.c1)))AND(x'25f0')))AND(vt0.c0)))AND('Fzj?3I')), TYPEOF(vt0.c0), ((vt0.c0) IS FALSE)))!=((CASE WHEN vt0.c1 THEN 'CoV6' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c1) NOT NULL), vt0.c1 COLLATE NOCASE, (vt0.c1 IN (vt0.c0)))));
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((((NOT (TRIM(DISTINCT vt0.c0, vt0.c0))))AND((((CAST(vt0.c1 AS TEXT), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), vt0.c0 COLLATE NOCASE))<((vt0.c0, (vt0.c1 IN (vt0.c0)), ('1519580750' IN (vt0.c0)))))))) ORDER BY (((vt0.c1, ((((((((NULL)AND(vt0.c1)))AND(x'25f0')))AND(vt0.c0)))AND('Fzj?3I')), TYPEOF(vt0.c0), ((vt0.c0) IS FALSE)))!=((CASE WHEN vt0.c1 THEN 'CoV6' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c1) NOT NULL), vt0.c1 COLLATE NOCASE, (vt0.c1 IN (vt0.c0))))) INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)=(UPPER(0.6440139258552643)))) ORDER BY (((vt0.c1, ((((((((NULL)AND(vt0.c1)))AND(x'25f0')))AND(vt0.c0)))AND('Fzj?3I')), TYPEOF(vt0.c0), ((vt0.c0) IS FALSE)))!=((CASE WHEN vt0.c1 THEN 'CoV6' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c1) NOT NULL), vt0.c1 COLLATE NOCASE, (vt0.c1 IN (vt0.c0)))));
SELECT MIN(vt0.c0) FROM vt0, vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY ((vt1.c0) BETWEEN ((+ (vt0.c0))) AND (vt0.c1 COLLATE NOCASE))  NULLS LAST, UNLIKELY((('')<<(vt1.c0)))  NULLS FIRST;
SELECT ALL MIN(vt0.c0) FROM vt0, vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY (LTRIM(0.5462267792585872, vt0.c1) IN ((~ (vt1.c0)))) ASC, CAST((~ (0x175b922a)) AS BLOB) LIMIT 0x1;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((NULL)LIKE(vt1.c0)) COLLATE NOCASE WHERE ((((vt1.c0)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) AND (((~ (vt1.c0)))))) ORDER BY (NOT (((vt0.c0) IS FALSE))), vt0.c1  NULLS LAST, ((((((((((vt1.c0) NOTNULL))OR(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(NULL)))AND(((vt0.c0)>(vt0.c0))));
SELECT DISTINCT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((NULL)LIKE(vt1.c0)) COLLATE NOCASE WHERE ((((((vt1.c0)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) AND (((~ (vt1.c0))))))AND(json_quote(((vt1.c0) IS FALSE))))) ORDER BY (~ (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END))  NULLS LAST, (((('1979604771')AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))OR(0.21046504447610692)))OR(vt1.c0)))AND(vt1.c0)))) DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((NULL)LIKE(vt1.c0)) COLLATE NOCASE WHERE ((((((((+ (vt0.c1)))AND(((vt0.c0) NOTNULL))))AND(0.18511872058691092)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) ORDER BY (~ (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END))  NULLS LAST, (((('1979604771')AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))OR(0.21046504447610692)))OR(vt1.c0)))AND(vt1.c0)))) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL)) LIMIT 0x0 INTERSECT SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)<(vt0.c1)), ((vt0.c1) NOT NULL)))>=((CASE WHEN vt0.c0 THEN vt1.c0 ELSE NULL END, CHAR(vt1.c0, vt0.c0))))) LIMIT 0X0;
SELECT MAX(vt1.c0) FROM vt1 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY (vt1.c0 IN (x'')) COLLATE NOCASE, (((vt1.c0)) BETWEEN (((((vt1.c0, vt1.c0, x'')) BETWEEN ((vt1.c0, vt1.c0, '')) AND ((vt1.c0, vt1.c0, vt1.c0))))) AND (((vt1.c0 IN (vt1.c0)))))  NULLS LAST, TYPEOF((((vt1.c0))<((vt1.c0))))  NULLS FIRST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((CASE CAST(vt1.c0 AS INTEGER)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END)AND(0.7603792470194533))) ORDER BY (vt1.c0 IN (x'')) COLLATE NOCASE, (((vt1.c0)) BETWEEN (((((vt1.c0, vt1.c0, x'')) BETWEEN ((vt1.c0, vt1.c0, '')) AND ((vt1.c0, vt1.c0, vt1.c0))))) AND (((vt1.c0 IN (vt1.c0)))))  NULLS LAST, TYPEOF((((vt1.c0))<((vt1.c0))))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE));
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY COALESCE(((vt0.c0)GLOB(vt0.c1)), vt0.c0) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE));
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY COALESCE(((vt0.c0)GLOB(vt0.c1)), vt0.c0) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (NULL);
SELECT DISTINCT * FROM vt0, vt1 WHERE (((NULL)AND(CHAR((- (vt0.c1)), vt0.c1, ((((((((vt0.c1)OR(vt0.c0)))AND(0.8134426419548006)))OR(x'19')))AND(vt0.c0)), CAST(vt0.c0 AS BLOB))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (TRIM(NULL, ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))) LIMIT 0X0;
SELECT ALL * FROM vt0, vt1 WHERE (NULL);
SELECT DISTINCT * FROM vt0, vt1 WHERE (((NULL)AND(CHAR((- (vt0.c1)), vt0.c1, ((((((((vt0.c1)OR(vt0.c0)))AND(0.8134426419548006)))OR(x'19')))AND(vt0.c0)), CAST(vt0.c0 AS BLOB))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (TRIM(NULL, ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))) LIMIT 0X0;
SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE (((vt1.c0)||(vt0.c0)) COLLATE RTRIM);
SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE (((vt1.c0)||(vt0.c0)) COLLATE RTRIM) ORDER BY vt1.c0 DESC INTERSECT SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE (CASE WHEN CAST(vt0.c1 AS TEXT) THEN vt0.c1 WHEN (vt0.c1 IN ()) THEN vt0.c0 WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN (+ (vt0.c1)) ELSE NULL END) ORDER BY vt1.c0 DESC;
SELECT * FROM vt0 WHERE (CASE WHEN NULL THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)IS(vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 END WHEN ((((((((((((((vt0.c1)OR(vt0.c1)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) THEN x'' COLLATE BINARY ELSE CAST(vt0.c1 AS REAL) END) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))));
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN NULL THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)IS(vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 END WHEN ((((((((((((((vt0.c1)OR(vt0.c1)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) THEN x'' COLLATE BINARY ELSE CAST(vt0.c1 AS REAL) END)AND('?'))) ORDER BY (+ (((vt0.c1)LIKE(vt0.c1))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (((vt0.c1)LIKE(vt0.c1))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE WHEN NULL THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)IS(vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 END WHEN ((((((((((((((vt0.c1)OR(vt0.c1)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) THEN x'' COLLATE BINARY ELSE CAST(vt0.c1 AS REAL) END) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))));
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN NULL THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c0)IS(vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 END WHEN ((((((((((((((vt0.c1)OR(vt0.c1)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) THEN x'' COLLATE BINARY ELSE CAST(vt0.c1 AS REAL) END)AND('?'))) ORDER BY (+ (((vt0.c1)LIKE(vt0.c1))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (((vt0.c1)LIKE(vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END IN (((vt0.c1) IS TRUE), '')));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END IN (((vt0.c1) IS TRUE), '')))AND(''))) ORDER BY CASE CAST(vt0.c1 AS BLOB)  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1) ISNULL) WHEN ((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((((((((((((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(((vt1.c0)==(vt1.c0)))))OR((NOT (vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END)))AND(vt0.c1 COLLATE NOCASE)))AND(((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))))OR(CASE WHEN vt1.c0 THEN 0.0010294982188797652 END)))AND(vt0.c1))) ORDER BY CASE CAST(vt0.c1 AS BLOB)  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1) ISNULL) WHEN ((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END;
SELECT ALL * FROM vt0, vt1 WHERE ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END IN (((vt0.c1) IS TRUE), '')));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END IN (((vt0.c1) IS TRUE), '')))AND(''))) ORDER BY CASE CAST(vt0.c1 AS BLOB)  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1) ISNULL) WHEN ((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((((((((((((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(((vt1.c0)==(vt1.c0)))))OR((NOT (vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END)))AND(vt0.c1 COLLATE NOCASE)))AND(((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))))OR(CASE WHEN vt1.c0 THEN 0.0010294982188797652 END)))AND(vt0.c1))) ORDER BY CASE CAST(vt0.c1 AS BLOB)  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1) ISNULL) WHEN ((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((- (vt0.c0)))) AND (((vt1.c0 IN (x'3ddac8'))))));
SELECT DISTINCT MAX(vt0.c0) FROM vt1, vt0 WHERE ((((((vt0.c1)) NOT BETWEEN (((- (vt0.c0)))) AND (((vt1.c0 IN (x'3ddac8'))))))AND(CAST((((vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1)) AND ((vt1.c0, vt0.c1))) AS INTEGER)))) LIMIT 1 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt1, vt0 WHERE (((((UNICODE(vt0.c0))OR(((vt0.c1) IS TRUE))))OR(vt0.c1 COLLATE NOCASE))) LIMIT 0x1;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CASE WHEN ((x'ba') NOT BETWEEN (NULL) AND (vt1.c0)) THEN IFNULL(DISTINCT vt1.c0, vt1.c0) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY CAST((~ (vt1.c0)) AS NUMERIC);
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((CASE WHEN ((x'ba') NOT BETWEEN (NULL) AND (vt1.c0)) THEN IFNULL(DISTINCT vt1.c0, vt1.c0) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END)AND((vt1.c0 IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) ORDER BY (NULL IN ((NOT (vt1.c0)))) ASC  NULLS LAST, (+ (TYPEOF(DISTINCT vt1.c0))) ASC  NULLS LAST;
SELECT MAX(vt1.c0) FROM vt1 CROSS JOIN vt0 ON CAST(((vt0.c1)LIKE(vt0.c0)) AS TEXT) WHERE (CASE WHEN ((((((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)IS NOT(0.19388439680507563)) END) ORDER BY ((vt0.c0)IS NOT(vt0.c1)) COLLATE BINARY  NULLS FIRST, CAST(vt0.c1 COLLATE NOCASE AS BLOB) ASC  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))-((vt0.c1 IN (vt0.c1))));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 CROSS JOIN vt0 ON CAST(((vt0.c1)LIKE(vt0.c0)) AS TEXT) WHERE (CASE WHEN ((((((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)IS NOT(0.19388439680507563)) END) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt1.c0)<=(vt0.c0))))  NULLS LAST, ((RTRIM(x'')) BETWEEN (((vt1.c0)GLOB(vt0.c1))) AND ((vt0.c0 IN (vt0.c0, vt1.c0))))  NULLS FIRST, ((((((NULLIF(vt0.c1, vt0.c1))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.14087406893072174))))))AND(CASE WHEN vt0.c1 THEN 'NEl%4b' WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))AND(((vt0.c1)GLOB(vt1.c0))))  NULLS FIRST, ((vt0.c1)<>(vt0.c1)) COLLATE RTRIM ASC INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 CROSS JOIN vt0 ON CAST(((vt0.c1)LIKE(vt0.c0)) AS TEXT) WHERE (CAST(CAST(vt0.c0 AS BLOB) AS REAL)) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt1.c0)<=(vt0.c0))))  NULLS LAST, ((RTRIM(x'')) BETWEEN (((vt1.c0)GLOB(vt0.c1))) AND ((vt0.c0 IN (vt0.c0, vt1.c0))))  NULLS FIRST, ((((((NULLIF(vt0.c1, vt0.c1))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.14087406893072174))))))AND(CASE WHEN vt0.c1 THEN 'NEl%4b' WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))AND(((vt0.c1)GLOB(vt1.c0))))  NULLS FIRST, ((vt0.c1)<>(vt0.c1)) COLLATE RTRIM ASC;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((vt0.c1)&(vt0.c1)) AS REAL) DESC  NULLS FIRST, ((((((vt0.c0) IS FALSE))OR('1693756632')))OR(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))), json_remove(vt0.c1, ((vt0.c1)GLOB(vt0.c0)), ((vt0.c1) IS TRUE), (((0.6549450423695943, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c1)AND((NOT (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))))) ORDER BY CAST(((vt0.c1)&(vt0.c1)) AS REAL) DESC  NULLS FIRST, ((((((vt0.c0) IS FALSE))OR('1693756632')))OR(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))), json_remove(vt0.c1, ((vt0.c1)GLOB(vt0.c0)), ((vt0.c1) IS TRUE), (((0.6549450423695943, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)  NULLS FIRST LIMIT 0X1;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((vt0.c1)&(vt0.c1)) AS REAL) DESC  NULLS FIRST, ((((((vt0.c0) IS FALSE))OR('1693756632')))OR(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))), json_remove(vt0.c1, ((vt0.c1)GLOB(vt0.c0)), ((vt0.c1) IS TRUE), (((0.6549450423695943, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((~ (x''))) ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0, 0.19537380418562933, x'1d')) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0))>=((vt1.c0))))) ASC;
SELECT DISTINCT * FROM vt1 WHERE ((((~ (x'')))AND((((vt1.c0)) NOT BETWEEN (((x'bd' IN ()))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.8276168406964959 END)))))) ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0, 0.19537380418562933, x'1d')) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0))>=((vt1.c0))))) ASC LIMIT 0;
SELECT ALL * FROM vt1 WHERE ((~ (x''))) ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0, 0.19537380418562933, x'1d')) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0))>=((vt1.c0))))) ASC;
SELECT DISTINCT * FROM vt1 WHERE ((((~ (x'')))AND((((vt1.c0)) NOT BETWEEN (((x'bd' IN ()))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.8276168406964959 END)))))) ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0, 0.19537380418562933, x'1d')) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c0))>=((vt1.c0))))) ASC LIMIT 0;
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)=(vt1.c0)))AND(((vt1.c0)<<(x'63f8')))))AND(0.10374213464292625)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(x'f931'))) ORDER BY ((((((ROUND(vt1.c0, x'e1'))AND(((vt1.c0)*('0.310211915931208')))))AND(((vt1.c0) ISNULL))))AND(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST, (vt1.c0 IN (vt1.c0)) COLLATE NOCASE COLLATE NOCASE;
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((vt1.c0)==(vt1.c0)))AND(((vt1.c0)<<(x'63f8')))))AND(0.10374213464292625)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(x'f931')))AND(((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)=(vt1.c0)))AND(((vt1.c0)<<(x'63f8')))))AND(0.10374213464292625)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(x'f931'))) ORDER BY ((((((ROUND(vt1.c0, x'e1'))AND(((vt1.c0)*('0.310211915931208')))))AND(((vt1.c0) ISNULL))))AND(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST, (vt1.c0 IN (vt1.c0)) COLLATE NOCASE COLLATE NOCASE;
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((vt1.c0)==(vt1.c0)))AND(((vt1.c0)<<(x'63f8')))))AND(0.10374213464292625)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(x'f931')))AND(((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE ('1693756632');
SELECT DISTINCT MAX(vt0.c1) FROM vt1, vt0 WHERE ((('1693756632')AND((NOT ((vt1.c0 IN (vt0.c0, vt1.c0)))))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) IS TRUE));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) IS TRUE))AND(((CAST(vt0.c1 AS TEXT)) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c1)-(vt0.c0))))))) LIMIT 1;
SELECT COUNT(*) FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) ORDER BY ((vt1.c0)-(vt1.c0)) COLLATE BINARY COLLATE NOCASE ASC, (NOT ((('') IS TRUE))) DESC;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) ORDER BY ((vt1.c0)-(vt1.c0)) COLLATE BINARY COLLATE NOCASE ASC, (NOT ((('') IS TRUE))) DESC LIMIT 0x1;
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (vt0.c0 IN (vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (((((((x'')OR(vt1.c0)))AND(vt0.c1)))OR(vt1.c0)) IN ((((vt0.c1, vt0.c1, vt1.c0))==((vt0.c1, vt0.c1, vt0.c0))), (vt1.c0 IN (vt0.c1))));
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (vt0.c0 IN (vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (((((((x'')OR(vt1.c0)))AND(vt0.c1)))OR(vt1.c0)) IN ((((vt0.c1, vt0.c1, vt1.c0))==((vt0.c1, vt0.c1, vt0.c0))), (vt1.c0 IN (vt0.c1))));
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))<=(NULL))) ORDER BY CASE TRIM(vt0.c0)  WHEN vt0.c1 THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END WHEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE vt0.c0 COLLATE BINARY END, (vt0.c0 IN (vt0.c0, '905496803')) COLLATE BINARY DESC  NULLS LAST;
SELECT MIN(vt0.c0) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))=(NULL))) ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END END ASC, ((vt0.c1 COLLATE RTRIM)*(CAST(vt0.c0 AS TEXT)))  NULLS LAST INTERSECT SELECT MIN(vt0.c0) FROM vt0 WHERE (((((vt0.c1)+(vt0.c1)))|(((vt0.c1) IS TRUE)))) ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END END ASC, ((vt0.c1 COLLATE RTRIM)*(CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT * FROM vt0 WHERE (((DATETIME(vt0.c0, x'29', vt0.c1))|(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE (((DATETIME(vt0.c0, x'29', vt0.c1))|(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))))) ORDER BY LIKE(CAST(vt0.c1 AS NUMERIC), (vt0.c0 IN (vt0.c0))), (((vt0.c0)||(vt0.c1)) IN ('0.4556401320561386', TRIM(vt0.c0, vt0.c1))) ASC  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((LOWER(DISTINCT x'') IN (x''))) ORDER BY LIKE(CAST(vt0.c1 AS NUMERIC), (vt0.c0 IN (vt0.c0))), (((vt0.c0)||(vt0.c1)) IN ('0.4556401320561386', TRIM(vt0.c0, vt0.c1))) ASC  NULLS LAST LIMIT 0x3;
SELECT * FROM vt0 WHERE (((DATETIME(vt0.c0, x'29', vt0.c1))|(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE (((DATETIME(vt0.c0, x'29', vt0.c1))|(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))))) ORDER BY LIKE(CAST(vt0.c1 AS NUMERIC), (vt0.c0 IN (vt0.c0))), (((vt0.c0)||(vt0.c1)) IN ('0.4556401320561386', TRIM(vt0.c0, vt0.c1))) ASC  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((LOWER(DISTINCT x'') IN (x''))) ORDER BY LIKE(CAST(vt0.c1 AS NUMERIC), (vt0.c0 IN (vt0.c0))), (((vt0.c0)||(vt0.c1)) IN ('0.4556401320561386', TRIM(vt0.c0, vt0.c1))) ASC  NULLS LAST LIMIT 0x3;
SELECT ALL MIN(vt1.c0) FROM vt0, vt1 WHERE ((((+ (vt0.c1)))-(vt0.c1)));
SELECT ALL MIN(vt1.c0) FROM vt0, vt1 WHERE ((((((+ (vt0.c1)))-(vt0.c1)))AND((NOT (((vt1.c0) IS FALSE)))))) ORDER BY json(NULL) ASC, vt0.c0, vt0.c1 INTERSECT SELECT ALL MIN(vt1.c0) FROM vt0, vt1 WHERE ((((vt0.c0) BETWEEN (x'') AND (NULL)) IN (-1686332408, (vt0.c0 IN (vt1.c0))))) ORDER BY json(NULL) ASC, vt0.c0, vt0.c1;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((vt0.c1) BETWEEN ('-1692152891' COLLATE NOCASE) AND ((~ (vt0.c1))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((vt0.c1) BETWEEN ('-1692152891' COLLATE NOCASE) AND ((~ (vt0.c1))))) ORDER BY (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS LAST LIMIT 0X0;
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY (((vt1.c0)) BETWEEN ((vt0.c0)) AND (((NOT (vt0.c1))))) ASC;
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY ((vt0.c0 IN (1.979604771E9)) IN (vt0.c1))  NULLS FIRST, vt1.c0 COLLATE NOCASE DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM vt0, vt1 WHERE (json_array_length(LOWER(vt0.c1), (~ (vt1.c0))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (json_array_length(LOWER(vt0.c1), (~ (vt1.c0)))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END THEN IFNULL(DISTINCT vt0.c0, vt0.c1) END DESC INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN (('
r')) AND ((vt0.c0))))|((NOT (vt0.c1))))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END THEN IFNULL(DISTINCT vt0.c0, vt0.c1) END DESC;
SELECT ALL * FROM vt0, vt1 WHERE (json_array_length(LOWER(vt0.c1), (~ (vt1.c0))));
SELECT * FROM vt1, vt0 WHERE ((~ (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((~ (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT * FROM vt1, vt0 WHERE ((~ (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((~ (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)+(vt1.c0)) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0) NOT NULL) WHEN vt1.c0 THEN (((0.5913309396412324))<((vt1.c0))) ELSE ((vt1.c0) NOT NULL) END) ORDER BY (NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)+(vt1.c0)) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0) NOT NULL) WHEN vt1.c0 THEN (((0.5913309396412324))<((vt1.c0))) ELSE ((vt1.c0) NOT NULL) END) ORDER BY ((vt1.c0)<=(vt1.c0)) DESC LIMIT 0;
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) NOTNULL));
SELECT DISTINCT MAX(vt0.c1) FROM vt1, vt0 WHERE (((((CAST(vt0.c1 AS INTEGER)) NOTNULL))AND(CAST(((vt0.c1)>(vt0.c1)) AS NUMERIC)))) ORDER BY (vt1.c0 IN (vt0.c1, vt0.c1)) COLLATE RTRIM  NULLS LAST, (((vt1.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN (((('') NOT BETWEEN (vt1.c0) AND (vt1.c0)), (NOT (0.6428434565447221)), 1043883576, json_object(vt0.c0, vt1.c0), (((vt1.c0, vt0.c1))<((vt1.c0, vt0.c0))))) AND ((CAST(vt0.c1 AS BLOB), ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)), CAST(vt0.c1 AS NUMERIC), ((vt0.c0) BETWEEN (x'4d') AND (vt0.c1)), ((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR('-947017812')))))  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt1 LEFT OUTER JOIN vt0 ON (~ (NULL)) WHERE (json_array_length(((vt0.c0)IS NOT(vt1.c0)), (vt1.c0 IN ()))) ORDER BY (((NULL)AND(vt1.c0)) IN ())  NULLS LAST, ((((vt0.c0) NOT NULL))>(((vt0.c1)*(vt0.c1)))) DESC, (~ (vt0.c0)) DESC;
SELECT ALL MIN(vt0.c1) FROM vt1 LEFT OUTER JOIN vt0 ON (~ (NULL)) WHERE (json_array_length(((vt0.c0)IS NOT(vt1.c0)), (vt1.c0 IN ()))) ORDER BY (((NULL)AND(vt1.c0)) IN ())  NULLS LAST, ((((vt0.c0) NOT NULL))>(((vt0.c1)*(vt0.c1)))) DESC, (~ (vt0.c0)) DESC INTERSECT SELECT ALL MIN(vt0.c1) FROM vt1 LEFT OUTER JOIN vt0 ON (~ (NULL)) WHERE (PRINTF((0.14082895662949868 IN ()), (vt1.c0 IN (vt0.c1)), CAST(vt1.c0 AS INTEGER), ((vt1.c0)>=(vt1.c0)))) ORDER BY (((NULL)AND(vt1.c0)) IN ())  NULLS LAST, ((((vt0.c0) NOT NULL))>(((vt0.c1)*(vt0.c1)))) DESC, (~ (vt0.c0)) DESC;
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE (((((+ (vt0.c0))))<>((CAST(vt0.c1 AS INTEGER))))) ORDER BY '3o'  NULLS FIRST;
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 NOT INDEXED WHERE (((((+ (vt0.c0))))<((CAST(vt0.c1 AS INTEGER))))) ORDER BY ((NULL) IS FALSE), CASE CAST(vt0.c0 AS TEXT)  WHEN ((('-1203112250', vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c1))) THEN vt0.c1 COLLATE RTRIM ELSE COALESCE(vt0.c0, vt1.c0, vt0.c1, vt0.c1) END ASC, ((((vt0.c0) NOTNULL))IS NOT(CASE '\B'  WHEN vt1.c0 THEN vt0.c0 WHEN -244010617 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, CASE json_quote(vt0.c0)  WHEN (- (vt0.c1)) THEN (((vt0.c1, vt1.c0, vt0.c0))>=((vt1.c0, vt1.c0, vt0.c1))) ELSE (+ (vt1.c0)) END, (NOT ((vt0.c0 IN ())))  NULLS LAST LIMIT 0X3 INTERSECT SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (LIKELIHOOD(vt0.c1, UNLIKELY(DISTINCT vt1.c0))) ORDER BY ((NULL) IS FALSE), CASE CAST(vt0.c0 AS TEXT)  WHEN ((('-1203112250', vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c1))) THEN vt0.c1 COLLATE RTRIM ELSE COALESCE(vt0.c0, vt1.c0, vt0.c1, vt0.c1) END ASC, ((((vt0.c0) NOTNULL))IS NOT(CASE '\B'  WHEN vt1.c0 THEN vt0.c0 WHEN -244010617 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, CASE json_quote(vt0.c0)  WHEN (- (vt0.c1)) THEN (((vt0.c1, vt1.c0, vt0.c0))>=((vt1.c0, vt1.c0, vt0.c1))) ELSE (+ (vt1.c0)) END, (NOT ((vt0.c0 IN ())))  NULLS LAST LIMIT 3;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE (CAST(((0Xffffffffffb5d400) IS TRUE) AS REAL)) ORDER BY ((vt0.c0 COLLATE BINARY) ISNULL), CAST(((((((((vt1.c0)OR(vt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)) AS INTEGER) ASC  NULLS FIRST, vt0.c1 DESC, vt0.c0 COLLATE BINARY COLLATE BINARY;
SELECT DISTINCT MAX(vt0.c0) FROM vt0, vt1 WHERE (((CAST(((-4860928) IS TRUE) AS REAL))AND((((((vt1.c0))<((vt0.c0))))IS(((vt0.c0)LIKE(vt1.c0))))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN NULL END) IS TRUE)  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CASE ((vt1.c0)!=(vt1.c0))  WHEN ((vt1.c0)+(vt1.c0)) THEN (- (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)/(NULL)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (- (vt1.c0)) WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) ELSE UPPER(DISTINCT vt1.c0) END);
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((CASE ((vt1.c0)<(vt1.c0))  WHEN ((vt1.c0)+(vt1.c0)) THEN (- (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)/(NULL)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (- (vt1.c0)) WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) ELSE UPPER(DISTINCT vt1.c0) END)AND(CAST((- ('v1l1{RD&}j}')) AS NUMERIC)))) ORDER BY CAST(vt1.c0 AS REAL), ((((vt1.c0)OR(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ()));
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0) IS TRUE) IN ()))AND(((((((vt1.c0)AND((NOT (0Xffffffff9b7c9c08)))))AND((vt1.c0 IN ()))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (RTRIM((vt1.c0 IN (vt1.c0)))) LIMIT 0;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ()));
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0) IS TRUE) IN ()))AND(((((((vt1.c0)AND((NOT (0Xffffffff9b7c9c08)))))AND((vt1.c0 IN ()))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (RTRIM((vt1.c0 IN (vt1.c0)))) LIMIT 0;
SELECT ALL MAX(vt0.c1) FROM vt0, vt1 WHERE (CASE vt0.c0  WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN (vt0.c0)) END);
SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE (((CASE vt0.c0  WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN (vt0.c0)) END)AND((((vt0.c1 IN ())) ISNULL)))) LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE (CASE ((vt0.c1)>(vt0.c0))  WHEN ((0Xffffffffdcf8eb15)GLOB(vt1.c0)) THEN (vt0.c1 IN (vt0.c0, vt0.c0)) WHEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN LIKELIHOOD('ꮥTxvwE㢲]K', vt0.c1) ELSE IFNULL(DISTINCT vt0.c1, vt1.c0) END) LIMIT 0;
SELECT MAX(vt0.c1) FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT DISTINCT MAX(vt0.c1) FROM vt1 INNER JOIN vt0 ON vt1.c0 WHERE (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) ORDER BY CAST(highlight(vt1.c0, vt0.c0, vt1.c0, vt0.c0) AS NUMERIC) DESC  NULLS LAST, ((vt0.c1)IS NOT(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt1 INNER JOIN vt0 ON vt1.c0 WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL)) ORDER BY CAST(highlight(vt1.c0, vt0.c0, vt1.c0, vt0.c0) AS NUMERIC) DESC  NULLS LAST, ((vt0.c1)IS NOT(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) NOT NULL)) ORDER BY ((((vt1.c0)+(vt1.c0)))-(x'38')) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0))) NOT NULL))AND(vt1.c0))) ORDER BY CASE vt1.c0  WHEN (NOT (vt1.c0)) THEN CAST('F' AS INTEGER) END DESC, vt1.c0 LIMIT 0x2 INTERSECT SELECT * FROM vt1 WHERE (((((vt1.c0)-(vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)AND(vt1.c0))))) ORDER BY CASE vt1.c0  WHEN (NOT (vt1.c0)) THEN CAST('F' AS INTEGER) END DESC, vt1.c0 LIMIT 2;
SELECT * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) NOT NULL)) ORDER BY ((((vt1.c0)+(vt1.c0)))-(x'38')) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0))) NOT NULL))AND(vt1.c0))) ORDER BY CASE vt1.c0  WHEN (NOT (vt1.c0)) THEN CAST('F' AS INTEGER) END DESC, vt1.c0 LIMIT 0x2 INTERSECT SELECT * FROM vt1 WHERE (((((vt1.c0)-(vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)AND(vt1.c0))))) ORDER BY CASE vt1.c0  WHEN (NOT (vt1.c0)) THEN CAST('F' AS INTEGER) END DESC, vt1.c0 LIMIT 2;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (json_extract(CASE 'YH'  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'3e' WHEN vt1.c0 THEN vt1.c0 END, ((vt0.c0) ISNULL))) ORDER BY (((vt1.c0 IN (NULL, x'68'))) IS TRUE), (((((vt0.c1, vt1.c0, vt1.c0))!=((vt0.c1, vt1.c0, vt1.c0)))) BETWEEN ((((vt0.c1))=((vt0.c0)))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)), (((((x'')) BETWEEN ((0xffffffff8814ca1a)) AND ((vt1.c0))))<<(((vt1.c0)GLOB(vt1.c0))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((json_extract(CASE 'YH'  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'3e' WHEN vt1.c0 THEN vt1.c0 END, ((vt0.c0) ISNULL)))AND((vt1.c0 COLLATE RTRIM IN (((((((((vt1.c0)OR(vt1.c0)))OR(x'fd')))AND(x'e75b')))AND(vt0.c1)), (vt0.c1 IN (vt0.c1))))))) ORDER BY ((('365792862')IS(vt0.c0)) IN ())  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((('0.6018460411226147')<(((vt0.c0) IS TRUE)))) ORDER BY ((('365792862')IS(vt0.c0)) IN ())  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((NOT ((~ (vt0.c1))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN (((vt0.c0) IS FALSE))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((~ (vt0.c1))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN (((vt0.c0) IS FALSE))) ASC  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((NOT (0.5305901528374672)) IN ())) ORDER BY (CAST(vt0.c0 AS BLOB) IN (((vt0.c0) IS FALSE))) ASC  NULLS LAST LIMIT 3;
SELECT * FROM vt1, vt0 WHERE ((NOT ((~ (vt0.c1))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN (((vt0.c0) IS FALSE))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((~ (vt0.c1))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN (((vt0.c0) IS FALSE))) ASC  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((NOT (0.5305901528374672)) IN ())) ORDER BY (CAST(vt0.c0 AS BLOB) IN (((vt0.c0) IS FALSE))) ASC  NULLS LAST LIMIT 3;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((((vt1.c0)OR(((vt0.c0) IS FALSE))))OR((((vt0.c0, vt1.c0, vt0.c0))<((vt1.c0, vt0.c0, vt1.c0))))))AND((vt0.c1 IN (vt0.c0)))))AND((NOT (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END)))OR(((vt0.c0)LIKE(vt1.c0)))) WHERE (LIKELY(vt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((((vt1.c0)OR(((vt0.c0) IS FALSE))))OR((((vt0.c0, vt1.c0, vt0.c0))<((vt1.c0, vt0.c0, vt1.c0))))))AND((vt0.c1 IN (vt0.c0)))))AND((NOT (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END)))OR(((vt0.c0)LIKE(vt1.c0)))) WHERE (((LIKELY(vt0.c0 COLLATE NOCASE))AND(((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt0.c0)LIKE(vt1.c0))))))) ORDER BY vt1.c0  NULLS LAST, (((((vt0.c1, vt0.c1))=((vt0.c0, vt0.c1)))) NOT BETWEEN ((((vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1)))) AND (NULL))  NULLS LAST INTERSECT SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((((vt1.c0)OR(((vt0.c0) IS FALSE))))OR((((vt0.c0, vt1.c0, vt0.c0))<((vt1.c0, vt0.c0, vt1.c0))))))AND((vt0.c1 IN (vt0.c0)))))AND((NOT (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END)))OR(((vt0.c0)LIKE(vt1.c0)))) WHERE (((((vt0.c0)/(vt1.c0)))OR(((vt1.c0)&(x''))))) ORDER BY vt1.c0  NULLS LAST, (((((vt0.c1, vt0.c1))==((vt0.c0, vt0.c1)))) NOT BETWEEN ((((vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1)))) AND (NULL))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((('1258981454') IS TRUE));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((((('1258981454') IS TRUE))AND(vt1.c0))) ORDER BY ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY ASC, CAST(IFNULL(DISTINCT vt1.c0, vt1.c0) AS NUMERIC) DESC, ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY LIMIT 0;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))OR((vt1.c0 IN ())))) ORDER BY CAST((- (vt1.c0)) AS TEXT) DESC;
SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))OR((vt1.c0 IN ()))))AND(CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)))) ORDER BY TRIM(DISTINCT 0.9031882890677928, ((vt1.c0) BETWEEN (vt1.c0) AND ('1262217373'))), (CAST(vt1.c0 AS NUMERIC) IN (vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS REAL))) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0) NOTNULL)) AND (-1692152891 COLLATE BINARY))) ORDER BY TRIM(DISTINCT 0.9031882890677928, ((vt1.c0) BETWEEN (vt1.c0) AND ('1262217373'))), (CAST(vt1.c0 AS NUMERIC) IN (vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS REAL))) ASC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))OR((vt1.c0 IN ())))) ORDER BY CAST((- (vt1.c0)) AS TEXT) DESC;
SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))OR((vt1.c0 IN ()))))AND(CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)))) ORDER BY TRIM(DISTINCT 0.9031882890677928, ((vt1.c0) BETWEEN (vt1.c0) AND ('1262217373'))), (CAST(vt1.c0 AS NUMERIC) IN (vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS REAL))) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0) NOTNULL)) AND (-1692152891 COLLATE BINARY))) ORDER BY TRIM(DISTINCT 0.9031882890677928, ((vt1.c0) BETWEEN (vt1.c0) AND ('1262217373'))), (CAST(vt1.c0 AS NUMERIC) IN (vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS REAL))) ASC  NULLS LAST LIMIT 0X1;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) ORDER BY (((vt0.c0 IN (vt0.c0))) ISNULL) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((NULL)))  NULLS LAST, UPPER(vt0.c0), ((((vt0.c1 IN ()), ((vt0.c0) ISNULL)))<>((HEX(vt0.c0), (((vt0.c0))>((vt0.c1))))))  NULLS FIRST LIMIT 0x3 INTERSECT SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((NULL)))  NULLS LAST, UPPER(vt0.c0), ((((vt0.c1 IN ()), ((vt0.c0) ISNULL)))!=((HEX(vt0.c0), (((vt0.c0))>((vt0.c1))))))  NULLS FIRST LIMIT 3;
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0) BETWEEN (-1.464712341E9) AND (vt1.c0)))))OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))AND('N')))))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) ASC  NULLS FIRST, ((((vt1.c0)AND(vt1.c0)))+(((vt1.c0)%(vt1.c0)))) DESC  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)<<(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(NULL))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0) BETWEEN (-1.464712341E9) AND (vt1.c0)))))OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))AND('N')))))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ())  NULLS FIRST LIMIT 0;
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0) BETWEEN (-1.464712341E9) AND (vt1.c0)))))OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))AND('N')))))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) ASC  NULLS FIRST, ((((vt1.c0)AND(vt1.c0)))+(((vt1.c0)%(vt1.c0)))) DESC  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)<<(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(NULL))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0) BETWEEN (-1.464712341E9) AND (vt1.c0)))))OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))AND('N')))))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ())  NULLS FIRST LIMIT 0;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (CAST(((vt0.c1) NOT NULL) AS INTEGER));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((CAST(((vt0.c1) NOT NULL) AS INTEGER))AND(((((((((vt1.c0)OR(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 END)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN NULL END)))OR((vt0.c1 IN (vt1.c0, NULL)))))OR(CAST(vt1.c0 AS INTEGER)))))) ORDER BY 's09n{~p' LIMIT 0x2;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (CAST(((vt0.c1) NOT NULL) AS INTEGER));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((CAST(((vt0.c1) NOT NULL) AS INTEGER))AND(((((((((vt1.c0)OR(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 END)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN NULL END)))OR((vt0.c1 IN (vt1.c0, NULL)))))OR(CAST(vt1.c0 AS INTEGER)))))) ORDER BY 's09n{~p' LIMIT 0x2;
SELECT * FROM vt0 WHERE (CASE x'47'  WHEN JULIANDAY('{', vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1) THEN ((vt0.c1)<=(vt0.c0)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c1) IS TRUE) END);
SELECT ALL * FROM vt0 WHERE (((CASE x'47'  WHEN JULIANDAY('{', vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1) THEN ((vt0.c1)<(vt0.c0)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c1) IS TRUE) END)AND(NULL))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL), x'9173' ASC  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (((TRIM('N', vt0.c0)) BETWEEN ((~ (vt0.c0))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL), x'9173' ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE x'47'  WHEN JULIANDAY('{', vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1) THEN ((vt0.c1)<=(vt0.c0)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c1) IS TRUE) END);
SELECT ALL * FROM vt0 WHERE (((CASE x'47'  WHEN JULIANDAY('{', vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1) THEN ((vt0.c1)<(vt0.c0)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c1) IS TRUE) END)AND(NULL))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL), x'9173' ASC  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (((TRIM('N', vt0.c0)) BETWEEN ((~ (vt0.c0))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL), x'9173' ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) IS TRUE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)+(CAST(vt0.c1 AS BLOB)))  NULLS LAST, (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1)<>('1254715249')), (vt0.c0 IN (vt0.c1)), CAST(vt0.c1 AS INTEGER))) AND ((((vt0.c1) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE ((((- (vt0.c0))) IS TRUE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)+(CAST(vt0.c1 AS BLOB)))  NULLS LAST, (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1)<>('1254715249')), (vt0.c0 IN (vt0.c1)), CAST(vt0.c1 AS INTEGER))) AND ((((vt0.c1) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((0.37404806540162816)+(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)+(CAST(vt0.c1 AS BLOB)))  NULLS LAST, (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1)<>('1254715249')), (vt0.c0 IN (vt0.c1)), CAST(vt0.c1 AS INTEGER))) AND ((((vt0.c1) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))))) LIMIT 0X1;
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) IS TRUE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)+(CAST(vt0.c1 AS BLOB)))  NULLS LAST, (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1)<>('1254715249')), (vt0.c0 IN (vt0.c1)), CAST(vt0.c1 AS INTEGER))) AND ((((vt0.c1) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE ((((- (vt0.c0))) IS TRUE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)+(CAST(vt0.c1 AS BLOB)))  NULLS LAST, (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1)<>('1254715249')), (vt0.c0 IN (vt0.c1)), CAST(vt0.c1 AS INTEGER))) AND ((((vt0.c1) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((0.37404806540162816)+(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)+(CAST(vt0.c1 AS BLOB)))  NULLS LAST, (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1)<>('1254715249')), (vt0.c0 IN (vt0.c1)), CAST(vt0.c1 AS INTEGER))) AND ((((vt0.c1) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))))) LIMIT 0X1;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((CAST(0.5015620545538608 AS BLOB)) NOTNULL)) ORDER BY ((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) AND (vt0.c1)) ASC  NULLS FIRST, (CAST(vt0.c0 AS NUMERIC) IN (vt0.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT MIN(vt0.c1) FROM vt0 WHERE (((((CAST(0.5015620545538608 AS BLOB)) NOTNULL))AND(((((vt0.c0)GLOB(vt0.c1)))+(((vt0.c0)>(vt0.c0))))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) AND (vt0.c1)) ASC  NULLS FIRST, (CAST(vt0.c0 AS NUMERIC) IN (vt0.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0) IS FALSE) IN ()));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0) IS FALSE) IN ()))AND((- (vt0.c0 COLLATE BINARY))))) ORDER BY (((NOT (vt1.c0))) ISNULL) ASC, ((0Xffffffffc24ec574) IS FALSE)  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((vt0.c1 IN (((vt0.c0) NOTNULL)))) ORDER BY (((NOT (vt1.c0))) ISNULL) ASC, ((-1035025036) IS FALSE)  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0) IS FALSE) IN ()));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0) IS FALSE) IN ()))AND((- (vt0.c0 COLLATE BINARY))))) ORDER BY (((NOT (vt1.c0))) ISNULL) ASC, ((0Xffffffffc24ec574) IS FALSE)  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((vt0.c1 IN (((vt0.c0) NOTNULL)))) ORDER BY (((NOT (vt1.c0))) ISNULL) ASC, ((-1035025036) IS FALSE)  NULLS LAST LIMIT 1;
SELECT MIN(vt0.c1) FROM vt1, vt0 NOT INDEXED WHERE (vt0.c0);
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (((vt0.c0)AND(((((((vt0.c0)/(vt0.c1)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (0.0075527239610586605)))))OR(((vt0.c0)%(vt0.c0))))))) ORDER BY (vt0.c0 COLLATE RTRIM IN (CAST(vt1.c0 AS TEXT))) ASC  NULLS FIRST, x''  NULLS LAST, CAST(((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND('981740771')) AS TEXT) ASC LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS INTEGER)) ORDER BY ((vt0.c0 IN (0xffffffffd435a799)) IN (((((NULL)OR(vt0.c1)))AND(0x26eb02dc))));
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS INTEGER)) ORDER BY ((vt0.c0 IN (0xffffffffd435a799)) IN (((((NULL)OR(vt0.c1)))AND(0x26eb02dc)))) LIMIT 0;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS INTEGER)) ORDER BY ((vt0.c0 IN (0xffffffffd435a799)) IN (((((NULL)OR(vt0.c1)))AND(0x26eb02dc))));
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS INTEGER)) ORDER BY ((vt0.c0 IN (0xffffffffd435a799)) IN (((((NULL)OR(vt0.c1)))AND(0x26eb02dc)))) LIMIT 0;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (NULL);
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((NULL)AND((((((((vt1.c0)AND(vt1.c0)))AND(x'e6ed')), 0.8086136764661435))==((x'44', (NOT (vt1.c0)))))))) ORDER BY vt1.c0 DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS REAL)) ORDER BY ((((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))GLOB(((vt1.c0)<=(vt0.c1))));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS REAL)) ORDER BY (+ ((((vt0.c1))<>((vt0.c1))))) ASC, (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))>((vt0.c1))) ASC LIMIT 0x0;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS REAL)) ORDER BY ((((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))GLOB(((vt1.c0)<=(vt0.c1))));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS REAL)) ORDER BY (+ ((((vt0.c1))<>((vt0.c1))))) ASC, (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))>((vt0.c1))) ASC LIMIT 0x0;
SELECT ALL MIN(vt0.c0) FROM vt1 NATURAL JOIN vt0 WHERE (((CAST(vt1.c0 AS INTEGER))+(CAST(vt1.c0 AS TEXT)))) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN '㢲(_ZG0f' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END) NOT NULL) DESC;
SELECT MIN(vt0.c0) FROM vt1 NATURAL JOIN vt0 WHERE (((((CAST(vt1.c0 AS INTEGER))+(CAST(vt1.c0 AS TEXT))))AND(CAST(vt0.c1 AS BLOB)))) ORDER BY (((~ (0.8381764835439557)))*(LIKELY(vt1.c0))) DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL MIN(vt0.c0) FROM vt1 NATURAL JOIN vt0 WHERE ((((((((((vt0.c0, vt0.c1))>((vt0.c0, vt0.c0))))AND(HEX(DISTINCT vt1.c0))))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))))AND(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END))) ORDER BY (((~ (0.8381764835439557)))*(LIKELY(vt1.c0))) DESC  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt0.c1) LIMIT 2;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt0.c1) LIMIT 2;
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c1)) IN ()));
SELECT DISTINCT * FROM vt0 WHERE (((NOT (vt0.c1)) IN ())) ORDER BY (((((((((0.7361552485194938)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)) IN ((~ (vt0.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c1)) IN ()));
SELECT DISTINCT * FROM vt0 WHERE (((NOT (vt0.c1)) IN ())) ORDER BY (((((((((0.7361552485194938)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)) IN ((~ (vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB)) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB)) NOT NULL)) ORDER BY ((((NULL) BETWEEN (vt0.c0) AND (vt0.c1))) IS FALSE) LIMIT 0;
SELECT ALL * FROM vt0 WHERE (0xcbe49c9) ORDER BY ((vt0.c1) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 END) AND ((vt0.c0 IN ()))) ASC, (~ (vt0.c1)) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (0Xcbe49c9) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, vt0.c1) AS REAL) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (ABS(DISTINCT vt0.c1) COLLATE BINARY COLLATE RTRIM) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, vt0.c1) AS REAL);
SELECT ALL * FROM vt0 WHERE (0xcbe49c9) ORDER BY ((vt0.c1) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 END) AND ((vt0.c0 IN ()))) ASC, (~ (vt0.c1)) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (0Xcbe49c9) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, vt0.c1) AS REAL) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (ABS(DISTINCT vt0.c1) COLLATE BINARY COLLATE RTRIM) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, vt0.c1) AS REAL);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1) NOT NULL))IS(CASE WHEN vt0.c1 THEN '-2050172140' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE -338958845 END))) ORDER BY ((((vt1.c0)LIKE(vt0.c1))) IS TRUE), ((((((((vt0.c1)OR(vt1.c0)))OR(0Xffffffffa8b2436b)))AND(vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN 0x724e1420 ELSE vt0.c0 END) AND (((vt0.c1) ISNULL)))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1) NOT NULL))IS(CASE WHEN vt0.c1 THEN '-2050172140' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE -338958845 END))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC LIMIT 0x3;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1) NOT NULL))IS(CASE WHEN vt0.c1 THEN '-2050172140' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE -338958845 END))) ORDER BY ((((vt1.c0)LIKE(vt0.c1))) IS TRUE), ((((((((vt0.c1)OR(vt1.c0)))OR(0Xffffffffa8b2436b)))AND(vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN 0x724e1420 ELSE vt0.c0 END) AND (((vt0.c1) ISNULL)))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1) NOT NULL))IS(CASE WHEN vt0.c1 THEN '-2050172140' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE -338958845 END))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC LIMIT 0x3;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND((('.Y') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND((('.Y') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0 COLLATE BINARY)-((NOT (vt1.c0))))))) LIMIT 4 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((+ (x''))) LIMIT 0x4;
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (TRIM(vt1.c0) IN ())  NULLS FIRST, (NOT (((('[M竷', vt0.c0, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c1, vt0.c1, vt0.c1))))), (vt0.c1 IN ()) COLLATE BINARY, (((((vt0.c0, '300746964')) NOT BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c0, vt1.c0)))) NOT NULL) DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0)AND(vt0.c1))) ORDER BY (((((~ (vt0.c0)))AND(((vt0.c0)<(vt0.c1)))))OR((('')IS(vt0.c1)))) ASC  NULLS FIRST, (((vt0.c0))==((NULL))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (TRIM(vt1.c0) IN ())  NULLS FIRST, (NOT (((('[M竷', vt0.c0, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c1, vt0.c1, vt0.c1))))), (vt0.c1 IN ()) COLLATE BINARY, (((((vt0.c0, '300746964')) NOT BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c0, vt1.c0)))) NOT NULL) DESC;
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE ((((vt0.c1 IN (vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND ((((vt1.c0, x''))==((vt1.c0, vt0.c0)))))) ORDER BY (NOT (LAST_INSERT_ROWID()));
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE ((((((vt0.c1 IN (vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND ((((vt1.c0, x''))==((vt1.c0, vt0.c0))))))AND(vt1.c0))) ORDER BY (NOT (LAST_INSERT_ROWID())) INTERSECT SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE ((((CAST('{繮}d' AS NUMERIC)))>=((vt1.c0)))) ORDER BY (NOT (LAST_INSERT_ROWID()));
SELECT ALL * FROM vt1, vt0 WHERE ('1461806257');
SELECT ALL * FROM vt1, vt0 WHERE ('1461806257') ORDER BY (~ ((vt0.c0 IN (vt0.c1)))) DESC  NULLS LAST INTERSECT SELECT * FROM vt1, vt0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c0))>((3.00746964E8, vt1.c0, vt1.c0))) AS BLOB)) ORDER BY (~ ((vt0.c0 IN (vt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ('1461806257');
SELECT ALL * FROM vt1, vt0 WHERE ('1461806257') ORDER BY (~ ((vt0.c0 IN (vt0.c1)))) DESC  NULLS LAST INTERSECT SELECT * FROM vt1, vt0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c0))>((3.00746964E8, vt1.c0, vt1.c0))) AS BLOB)) ORDER BY (~ ((vt0.c0 IN (vt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (rtreenode(((vt0.c0)-('-244010617')), NULL));
SELECT ALL * FROM vt0 WHERE (rtreenode(((vt0.c0)-('-244010617')), NULL)) ORDER BY ((vt0.c1)<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN 0.6614166504041828 THEN vt0.c1 END));
SELECT ALL * FROM vt0 WHERE (rtreenode(((vt0.c0)-('-244010617')), NULL));
SELECT ALL * FROM vt0 WHERE (rtreenode(((vt0.c0)-('-244010617')), NULL)) ORDER BY ((vt0.c1)<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN 0.6614166504041828 THEN vt0.c1 END));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN ((((vt1.c0, 0.7689912317045176))>((vt1.c0, vt1.c0)))) AND ((- (vt1.c0)))));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN ((((vt1.c0, 0.7689912317045176))>((vt1.c0, vt1.c0)))) AND ((- (vt1.c0)))));
SELECT MIN(vt1.c0) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0 COLLATE BINARY)));
SELECT MIN(vt1.c0) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0 COLLATE BINARY))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0)GLOB(vt1.c0))))  NULLS LAST, (((vt1.c0)) BETWEEN ((((vt1.c0)<(vt1.c0)))) AND ((COALESCE(vt1.c0, vt1.c0, vt1.c0)))) ASC  NULLS FIRST INTERSECT SELECT MIN(vt1.c0) FROM vt1 WHERE (((((((((((vt1.c0) NOT NULL))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(x'')))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND((((x''))<>((0.9592457715033358)))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0)GLOB(vt1.c0))))  NULLS LAST, (((vt1.c0)) BETWEEN ((((vt1.c0)<(vt1.c0)))) AND ((COALESCE(vt1.c0, vt1.c0, vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CAST((+ (vt1.c0)) AS REAL)) ORDER BY ((((vt1.c0)+(vt1.c0)))>=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ASC;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((CAST((+ (vt1.c0)) AS REAL))AND(((((vt1.c0)>=(x'd7ad'))) NOT NULL)))) ORDER BY ((((vt1.c0)+(vt1.c0)))>=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ASC LIMIT 0;
SELECT ALL * FROM vt1 WHERE (NULL COLLATE NOCASE COLLATE RTRIM);
SELECT DISTINCT * FROM vt1 WHERE (NULL COLLATE NOCASE COLLATE RTRIM) INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0 IN (vt1.c0)), (('an,1o') NOTNULL), (vt1.c0 IN ())))==(((NOT (vt1.c0)), ((vt1.c0)>>(vt1.c0)), TRIM(vt1.c0, vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (NULL COLLATE NOCASE COLLATE RTRIM);
SELECT DISTINCT * FROM vt1 WHERE (NULL COLLATE NOCASE COLLATE RTRIM) INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0 IN (vt1.c0)), (('an,1o') NOTNULL), (vt1.c0 IN ())))==(((NOT (vt1.c0)), ((vt1.c0)>>(vt1.c0)), TRIM(vt1.c0, vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)&(0.08443779081709935))  WHEN (vt0.c0 IN (vt0.c1, vt0.c1, vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) ELSE CAST(vt0.c1 AS REAL) END) ORDER BY json_insert((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, 0.5082149031172322)) AND ((vt0.c0, vt0.c1))), (+ (vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), CAST(vt0.c1 AS INTEGER), TRIM(vt0.c0));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)&(0.08443779081709935))  WHEN (vt0.c0 IN (vt0.c1, vt0.c1, vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) ELSE CAST(vt0.c1 AS REAL) END) ORDER BY ((json_extract(vt0.c0, vt0.c1)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) NOT NULL))) ASC, (((+ (vt0.c0)))>(x'')) ASC INTERSECT SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS BLOB)) ORDER BY ((json_extract(vt0.c0, vt0.c1)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) NOT NULL))) ASC, (((+ (vt0.c0)))>(x'')) ASC;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) ORDER BY ((vt0.c1 COLLATE NOCASE) IS TRUE);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) ORDER BY ((vt0.c1 COLLATE NOCASE) IS TRUE);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) ORDER BY ((vt0.c1 COLLATE NOCASE) IS TRUE);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) ORDER BY ((vt0.c1 COLLATE NOCASE) IS TRUE);
SELECT * FROM vt0, vt1 WHERE ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN '-630848260' THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c1 END IN ((((vt0.c1))!=((vt0.c1)))))) ORDER BY (+ (((vt0.c0) ISNULL))) DESC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN '-630848260' THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c1 END IN ((((vt0.c1))>((vt0.c1))))))AND(CAST(((434657884)>(NULL)) AS REAL)))) ORDER BY (+ (((vt0.c0) ISNULL))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE ((~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (+ (((vt0.c0) ISNULL))) DESC  NULLS LAST LIMIT 0;
SELECT * FROM vt0, vt1 WHERE ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN '-630848260' THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c1 END IN ((((vt0.c1))!=((vt0.c1)))))) ORDER BY (+ (((vt0.c0) ISNULL))) DESC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN '-630848260' THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c1 END IN ((((vt0.c1))>((vt0.c1))))))AND(CAST(((434657884)>(NULL)) AS REAL)))) ORDER BY (+ (((vt0.c0) ISNULL))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE ((~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (+ (((vt0.c0) ISNULL))) DESC  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)GLOB((vt0.c1 IN ())))) ORDER BY ((((vt0.c1)IS NOT(vt0.c1)))OR((('[')|(vt0.c0))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)GLOB((vt0.c1 IN ())))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)&(((vt0.c0)&(vt0.c1)))) ASC, '' LIMIT 2;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY CASE ((vt1.c0)&(vt1.c0))  WHEN vt1.c0 THEN 'Infinityy' END  NULLS FIRST;
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))AND(((TRIM(vt1.c0))<<((('') IS FALSE)))))) ORDER BY CASE ((vt1.c0)&(vt1.c0))  WHEN vt1.c0 THEN 'Infinityy' END  NULLS FIRST LIMIT 0X0;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN vt1.c0 ELSE x'14' END);
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((CASE WHEN CAST(vt1.c0 AS REAL) THEN vt1.c0 ELSE x'14' END)AND(((0xcbe49c9) NOT BETWEEN (vt1.c0) AND (((vt1.c0)||(vt1.c0))))))) INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((CAST('0.6614166504041828' AS BLOB)) IS FALSE));
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (NULLIF(COALESCE(vt1.c0, vt1.c0, vt1.c0), vt1.c0)) ORDER BY ((vt1.c0) BETWEEN (IFNULL(DISTINCT vt1.c0, vt1.c0)) AND (NULL))  NULLS LAST, ((x'c7')%((- (vt1.c0))))  NULLS LAST;
SELECT MAX(vt1.c0) FROM vt1 WHERE (((NULLIF(COALESCE(vt1.c0, vt1.c0, vt1.c0), vt1.c0))AND(((((((x'7e')OR(CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(TIME(vt1.c0, vt1.c0, vt1.c0))))OR((((vt1.c0, x'2fd9')) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))))))) ORDER BY ((vt1.c0) BETWEEN (IFNULL(DISTINCT vt1.c0, vt1.c0)) AND (NULL))  NULLS LAST, ((x'c7')%((- (vt1.c0))))  NULLS LAST INTERSECT SELECT MAX(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY ((vt1.c0) BETWEEN (IFNULL(DISTINCT vt1.c0, vt1.c0)) AND (NULL))  NULLS LAST, ((x'c7')%((- (vt1.c0))))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))LIKE(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, UNLIKELY(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c0 COLLATE RTRIM AS INTEGER))AND(((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 END)|(vt1.c0 COLLATE NOCASE))))) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS TEXT) ASC, CAST(CAST(vt0.c0 AS TEXT) AS INTEGER) DESC INTERSECT SELECT * FROM vt0, vt1 WHERE (CASE '	|y-'  WHEN (vt0.c0 IN (vt0.c1)) THEN CAST(vt0.c1 AS INTEGER) END) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS TEXT) ASC, CAST(CAST(vt0.c0 AS TEXT) AS INTEGER) DESC;
SELECT * FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))LIKE(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, UNLIKELY(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c0 COLLATE RTRIM AS INTEGER))AND(((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 END)|(vt1.c0 COLLATE NOCASE))))) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS TEXT) ASC, CAST(CAST(vt0.c0 AS TEXT) AS INTEGER) DESC INTERSECT SELECT * FROM vt0, vt1 WHERE (CASE '	|y-'  WHEN (vt0.c0 IN (vt0.c1)) THEN CAST(vt0.c1 AS INTEGER) END) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS TEXT) ASC, CAST(CAST(vt0.c0 AS TEXT) AS INTEGER) DESC;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0))) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (((vt1.c0) NOT BETWEEN (x'39') AND ('686262591')))) WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0))) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (((vt1.c0) NOT BETWEEN (x'39') AND ('686262591')))) WHERE (((((CAST(vt0.c0 AS TEXT)) IS FALSE))AND(((vt0.c1 COLLATE NOCASE) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (CASE vt1.c0  WHEN vt1.c0 THEN -423690826 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END))))) LIMIT 0x2;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0))) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (((vt1.c0) NOT BETWEEN (x'39') AND ('686262591')))) WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0))) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (((vt1.c0) NOT BETWEEN (x'39') AND ('686262591')))) WHERE (((((CAST(vt0.c0 AS TEXT)) IS FALSE))AND(((vt0.c1 COLLATE NOCASE) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (CASE vt1.c0  WHEN vt1.c0 THEN -423690826 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END))))) LIMIT 0x2;
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)-(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0)/(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0) IS TRUE) WHEN 'W' THEN vt1.c0 WHEN LIKELY(DISTINCT x'') THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY vt1.c0  NULLS FIRST, ((UNLIKELY(vt1.c0))%('{ﮘrC4'))  NULLS LAST, (((((vt1.c0))<>((vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT * FROM vt1 WHERE (((CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)-(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0)/(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0) IS TRUE) WHEN 'W' THEN vt1.c0 WHEN LIKELY(DISTINCT x'') THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END)AND((- ((vt1.c0 IN (vt1.c0))))))) ORDER BY vt1.c0  NULLS FIRST, ((UNLIKELY(vt1.c0))%('{ﮘrC4'))  NULLS LAST, (((((vt1.c0))!=((vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC INTERSECT SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY vt1.c0  NULLS FIRST, ((UNLIKELY(vt1.c0))%('{ﮘrC4'))  NULLS LAST, (((((vt1.c0))<>((vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)-(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0)/(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0) IS TRUE) WHEN 'W' THEN vt1.c0 WHEN LIKELY(DISTINCT x'') THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY vt1.c0  NULLS FIRST, ((UNLIKELY(vt1.c0))%('{ﮘrC4'))  NULLS LAST, (((((vt1.c0))<>((vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT * FROM vt1 WHERE (((CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)-(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0)/(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0) IS TRUE) WHEN 'W' THEN vt1.c0 WHEN LIKELY(DISTINCT x'') THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END)AND((- ((vt1.c0 IN (vt1.c0))))))) ORDER BY vt1.c0  NULLS FIRST, ((UNLIKELY(vt1.c0))%('{ﮘrC4'))  NULLS LAST, (((((vt1.c0))!=((vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC INTERSECT SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY vt1.c0  NULLS FIRST, ((UNLIKELY(vt1.c0))%('{ﮘrC4'))  NULLS LAST, (((((vt1.c0))<>((vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT * FROM vt0 WHERE (CHAR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)LIKE(vt0.c1)), rtreenode(vt0.c0, vt0.c1))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS REAL)  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE x'' END) ISNULL) ASC;
SELECT * FROM vt0 WHERE (((CHAR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)LIKE(vt0.c1)), rtreenode(vt0.c0, vt0.c1)))AND(vt0.c1))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS REAL)  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE x'' END) ISNULL) ASC LIMIT 1;
SELECT * FROM vt0 WHERE (CHAR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)LIKE(vt0.c1)), rtreenode(vt0.c0, vt0.c1))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS REAL)  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE x'' END) ISNULL) ASC;
SELECT * FROM vt0 WHERE (((CHAR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)LIKE(vt0.c1)), rtreenode(vt0.c0, vt0.c1)))AND(vt0.c1))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS REAL)  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE x'' END) ISNULL) ASC LIMIT 1;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))>((vt1.c0 COLLATE NOCASE, CASE WHEN '*' THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY CAST((vt1.c0 IN ()) AS INTEGER)  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((((vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))>((vt1.c0 COLLATE NOCASE, CASE WHEN '*' THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY ((+ (vt1.c0)) IN (((vt1.c0) NOT NULL), vt1.c0))  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) ORDER BY ((+ (vt1.c0)) IN (((vt1.c0) NOT NULL), vt1.c0))  NULLS LAST LIMIT 1;
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT))>=(((vt1.c0) BETWEEN (vt0.c1) AND (0.5644982286679928))))) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST, CASE WHEN ((vt0.c1) NOT NULL) THEN PRINTF(vt0.c0, '', vt1.c0, vt0.c0) ELSE ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)) END  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT))>=(((vt1.c0) BETWEEN (vt0.c1) AND (0.5644982286679928))))) ORDER BY UPPER(CAST(vt0.c0 AS BLOB))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'db') AND (vt0.c0))) NOT BETWEEN ((('c7	Etf')>(vt0.c1))) AND (vt1.c0 COLLATE RTRIM))) ORDER BY UPPER(CAST(vt0.c0 AS BLOB))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT))>=(((vt1.c0) BETWEEN (vt0.c1) AND (0.5644982286679928))))) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST, CASE WHEN ((vt0.c1) NOT NULL) THEN PRINTF(vt0.c0, '', vt1.c0, vt0.c0) ELSE ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)) END  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT))>=(((vt1.c0) BETWEEN (vt0.c1) AND (0.5644982286679928))))) ORDER BY UPPER(CAST(vt0.c0 AS BLOB))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'db') AND (vt0.c0))) NOT BETWEEN ((('c7	Etf')>(vt0.c1))) AND (vt1.c0 COLLATE RTRIM))) ORDER BY UPPER(CAST(vt0.c0 AS BLOB))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0 IN ()) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), 0.0075527239610586605))) ORDER BY ((((((((((((((vt0.c0)GLOB(x'16')))AND(((vt1.c0)&(vt0.c1)))))OR(((((((((((((-1.943074248E9)OR(vt0.c1)))OR('-669325256')))OR(vt1.c0)))AND('-100881499')))OR(vt0.c1)))OR(vt0.c1)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)>>(vt1.c0)))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt1.c0 IN ()) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), 0.0075527239610586605))) ORDER BY ((((((((((((((vt0.c0)GLOB(x'16')))AND(((vt1.c0)&(vt0.c1)))))OR(((((((((((((-1.943074248E9)OR(vt0.c1)))OR('-669325256')))OR(vt1.c0)))AND('-100881499')))OR(vt0.c1)))OR(vt0.c1)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)>>(vt1.c0)))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0 IN ()) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), 0.0075527239610586605))) ORDER BY ((((((((((((((vt0.c0)GLOB(x'16')))AND(((vt1.c0)&(vt0.c1)))))OR(((((((((((((-1.943074248E9)OR(vt0.c1)))OR('-669325256')))OR(vt1.c0)))AND('-100881499')))OR(vt0.c1)))OR(vt0.c1)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)>>(vt1.c0)))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt1.c0 IN ()) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), 0.0075527239610586605))) ORDER BY ((((((((((((((vt0.c0)GLOB(x'16')))AND(((vt1.c0)&(vt0.c1)))))OR(((((((((((((-1.943074248E9)OR(vt0.c1)))OR('-669325256')))OR(vt1.c0)))AND('-100881499')))OR(vt0.c1)))OR(vt0.c1)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)>>(vt1.c0)))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0)OR(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND((vt1.c0 IN ()))))OR(vt0.c1 COLLATE RTRIM))) ORDER BY ((((vt1.c0)IS NOT(vt0.c1)))!=((+ (-734681191)))) DESC  NULLS LAST, CAST('Uu哼I8?eꞐ' AS NUMERIC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0)OR(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND((vt1.c0 IN ()))))OR(vt0.c1 COLLATE RTRIM))) ORDER BY ((CAST(vt1.c0 AS TEXT)) ISNULL) DESC LIMIT 0X2 INTERSECT SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) IS FALSE) COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS TEXT)) ISNULL) DESC LIMIT 0x2;
SELECT * FROM vt0, vt1 WHERE ((~ (x'')));
SELECT ALL * FROM vt0, vt1 WHERE ((((~ (x'')))AND(((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))GLOB(CAST(vt1.c0 AS NUMERIC)))))) LIMIT 0x0 INTERSECT SELECT * FROM vt0, vt1 WHERE (vt0.c1) LIMIT 0x0;
SELECT * FROM vt0, vt1 WHERE ((~ (x'')));
SELECT ALL * FROM vt0, vt1 WHERE ((((~ (x'')))AND(((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))GLOB(CAST(vt1.c0 AS NUMERIC)))))) LIMIT 0x0 INTERSECT SELECT * FROM vt0, vt1 WHERE (vt0.c1) LIMIT 0x0;
SELECT * FROM vt0, vt1 WHERE (NULL COLLATE RTRIM COLLATE BINARY);
SELECT DISTINCT * FROM vt0, vt1 WHERE (NULL COLLATE RTRIM COLLATE BINARY) ORDER BY HEX(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt0.c1, vt0.c1, vt1.c0))==((vt0.c1, vt1.c0, vt0.c1))))IS NOT(((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))OR(vt1.c0))))) ORDER BY HEX(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) ASC LIMIT 0X0;
SELECT * FROM vt0, vt1 WHERE (NULL COLLATE RTRIM COLLATE BINARY);
SELECT DISTINCT * FROM vt0, vt1 WHERE (NULL COLLATE RTRIM COLLATE BINARY) ORDER BY HEX(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt0.c1, vt0.c1, vt1.c0))==((vt0.c1, vt1.c0, vt0.c1))))IS NOT(((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))OR(vt1.c0))))) ORDER BY HEX(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) ASC LIMIT 0X0;
SELECT ALL * FROM vt0, vt1 WHERE (((COALESCE(vt0.c1, vt0.c1))/(CAST(vt0.c1 AS TEXT))));
SELECT * FROM vt0, vt1 WHERE (((COALESCE(vt0.c1, vt0.c1))/(CAST(vt0.c1 AS TEXT)))) LIMIT 0x1;
SELECT ALL * FROM vt0, vt1 WHERE (((COALESCE(vt0.c1, vt0.c1))/(CAST(vt0.c1 AS TEXT))));
SELECT * FROM vt0, vt1 WHERE (((COALESCE(vt0.c1, vt0.c1))/(CAST(vt0.c1 AS TEXT)))) LIMIT 0x1;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))==((vt0.c1 IN (vt0.c1))))))) ORDER BY vt0.c0 COLLATE NOCASE COLLATE BINARY DESC, (+ (CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS LAST, (((((vt0.c0, vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c0)))) IS TRUE)  NULLS LAST LIMIT 0X5;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))==((vt0.c1 IN (vt0.c1))))))) ORDER BY vt0.c0 COLLATE NOCASE COLLATE BINARY DESC, (+ (CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS LAST, (((((vt0.c0, vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c0)))) IS TRUE)  NULLS LAST LIMIT 0X5;
SELECT COUNT(*) FROM vt1 WHERE (((((((((x'' COLLATE BINARY)OR(CAST(vt1.c0 AS INTEGER))))AND(CAST('-1307813814' AS BLOB))))OR((+ (vt1.c0)))))AND(((vt1.c0) IS TRUE))));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((((((((x'' COLLATE BINARY)OR(CAST(vt1.c0 AS INTEGER))))AND(CAST('-1307813814' AS BLOB))))OR((+ (vt1.c0)))))AND(((vt1.c0) IS TRUE)))) LIMIT 0x1;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))>(((vt1.c0)OR(vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))>(((vt1.c0)OR(vt1.c0)))))AND(((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((vt0.c1)GLOB(vt1.c0)))) DESC LIMIT 0x0 INTERSECT SELECT * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((vt0.c1)GLOB(vt1.c0)))) DESC LIMIT 0X0;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))>(((vt1.c0)OR(vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))>(((vt1.c0)OR(vt1.c0)))))AND(((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((vt0.c1)GLOB(vt1.c0)))) DESC LIMIT 0x0 INTERSECT SELECT * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((vt0.c1)GLOB(vt1.c0)))) DESC LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN NULL END, (- (vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE, (((vt0.c0, -1e500)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1))))))) ORDER BY CAST((vt0.c0 IN ()) AS BLOB);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN NULL END, (- (vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE, (((vt0.c0, -1e500)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1)))))))AND((((rtreenode(vt0.c1, vt0.c0), CAST(vt0.c1 AS REAL)))==((((vt0.c1) IS FALSE), (vt0.c1 IN (vt0.c0, vt0.c0)))))))) ORDER BY CAST((vt0.c0 IN ()) AS BLOB) INTERSECT SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c1))!=((vt0.c1)))))) ORDER BY CAST((vt0.c0 IN ()) AS BLOB);
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE (CASE WHEN NULL THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END);
SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE (CASE WHEN NULL THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END) ORDER BY ((((((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))AND(((NULL)>>(vt0.c1)))))AND((- (vt0.c0)))))OR(CAST(vt0.c0 AS TEXT))))AND(x'9a9b'))  NULLS LAST, (((CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt0.c1 END, CAST(vt1.c0 AS REAL), vt0.c1, ((vt0.c1) ISNULL)))>((vt0.c0, ((vt0.c1)>=(vt0.c1)), (vt0.c1 IN ()), (NOT (vt1.c0))))) DESC, CASE WHEN (vt0.c0 IN ('-1420023627')) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 THEN (NOT (x'25')) END ASC LIMIT 0X3;
SELECT * FROM vt1 INNER JOIN vt0 ON (((((vt0.c1, vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0, vt1.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) WHERE (HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN x'a62c' END));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((((vt0.c1, vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0, vt1.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) WHERE (HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN x'a62c' END)) ORDER BY LIKELIHOOD(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END, vt0.c0) DESC  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) NOTNULL) ASC, vt0.c1, CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) ASC LIMIT 3;
SELECT * FROM vt1 INNER JOIN vt0 ON (((((vt0.c1, vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0, vt1.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) WHERE (HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN x'a62c' END));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((((vt0.c1, vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0, vt1.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) WHERE (HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN x'a62c' END)) ORDER BY LIKELIHOOD(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END, vt0.c0) DESC  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) NOTNULL) ASC, vt0.c1, CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) ASC LIMIT 3;
SELECT COUNT(*) FROM vt1 WHERE (((SUBSTR(vt1.c0, x'589eb4'))!=((((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 'qv', vt1.c0, ' ')) AND ((vt1.c0, vt1.c0, 0Xffffffffd38b84c0, vt1.c0))))));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((((SUBSTR(vt1.c0, x'589eb4'))<((((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 'qv', vt1.c0, ' ')) AND ((vt1.c0, vt1.c0, 0Xffffffffd38b84c0, vt1.c0))))))AND(((vt1.c0) NOT BETWEEN (0.39849220579624356) AND (vt1.c0)) COLLATE RTRIM COLLATE RTRIM))) ORDER BY (~ (CAST(vt1.c0 AS INTEGER)))  NULLS FIRST, ((((((vt1.c0)OR('0.21046504447610692')))AND(vt1.c0)))>=(((vt1.c0)/(vt1.c0)))) DESC  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM COLLATE BINARY  NULLS LAST, CAST(vt1.c0 AS REAL) COLLATE BINARY ASC  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM vt0 WHERE ((((x'', 0.3110011320475896, vt0.c0)) BETWEEN ((0.8617019709182995, ((((((vt0.c0)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)), vt0.c1)) AND ((((vt0.c0)!=(vt0.c1)), CASE NULL  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0)+(vt0.c1))))));
SELECT DISTINCT * FROM vt0 WHERE ((((((x'', 0.3110011320475896, vt0.c0)) BETWEEN ((0.8617019709182995, ((((((vt0.c0)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)), vt0.c1)) AND ((((vt0.c0)<>(vt0.c1)), CASE NULL  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0)+(vt0.c1))))))AND(((vt0.c0 COLLATE BINARY)GLOB((+ (vt0.c1))))))) ORDER BY (((((('-206925103')OR(IFNULL(DISTINCT vt0.c0, vt0.c1))))OR(x'')))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN ('0.37404806540162816') AND ((+ (vt0.c1))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt0 WHERE ((((x'', 0.3110011320475896, vt0.c0)) BETWEEN ((0.8617019709182995, ((((((vt0.c0)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)), vt0.c1)) AND ((((vt0.c0)!=(vt0.c1)), CASE NULL  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0)+(vt0.c1))))));
SELECT DISTINCT * FROM vt0 WHERE ((((((x'', 0.3110011320475896, vt0.c0)) BETWEEN ((0.8617019709182995, ((((((vt0.c0)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)), vt0.c1)) AND ((((vt0.c0)<>(vt0.c1)), CASE NULL  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0)+(vt0.c1))))))AND(((vt0.c0 COLLATE BINARY)GLOB((+ (vt0.c1))))))) ORDER BY (((((('-206925103')OR(IFNULL(DISTINCT vt0.c0, vt0.c1))))OR(x'')))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN ('0.37404806540162816') AND ((+ (vt0.c1))))  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY)+(((vt0.c1)IS NOT(vt0.c1))))) ORDER BY NULL ASC  NULLS LAST, CASE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(-734681191))  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c1 WHEN ROUND(vt1.c0, vt1.c0) THEN 0.4487091589095483 ELSE (vt0.c1 IN ()) END;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY)+(((vt0.c1)IS NOT(vt0.c1))))) ORDER BY NULL ASC  NULLS LAST, CASE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(-734681191))  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c1 WHEN ROUND(vt1.c0, vt1.c0) THEN 0.4487091589095483 ELSE (vt0.c1 IN ()) END LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((NULL)AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0))) IS FALSE)) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ABS(vt0.c1) END ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((NULL)AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0))) IS FALSE)) ORDER BY (('+⥑剏') NOTNULL)  NULLS FIRST, UNLIKELY((vt0.c1 IN (vt1.c0))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((NULL)AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0))) IS FALSE)) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ABS(vt0.c1) END ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((NULL)AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0))) IS FALSE)) ORDER BY (('+⥑剏') NOTNULL)  NULLS FIRST, UNLIKELY((vt0.c1 IN (vt1.c0))) DESC;
SELECT ALL MAX(vt0.c0) FROM vt0 CROSS JOIN vt1 ON ((((0.8953898786683685 IN (vt0.c1))))<((LIKELIHOOD(vt0.c0, vt0.c1)))) WHERE (((((vt0.c1)&(vt0.c1)))%(vt0.c0))) ORDER BY CASE vt1.c0 COLLATE RTRIM  WHEN UPPER(vt0.c1) THEN (((vt0.c1))<((vt0.c1))) WHEN (+ (vt1.c0)) THEN (((vt1.c0, '1254715249', vt0.c0))>=((vt1.c0, x'0e60f1', vt1.c0))) END  NULLS FIRST, vt0.c1;
SELECT DISTINCT MAX(vt0.c0) FROM vt0 CROSS JOIN vt1 ON ((((0.8953898786683685 IN (vt0.c1))))<((LIKELIHOOD(vt0.c0, vt0.c1)))) WHERE (((((((vt0.c1)&(vt0.c1)))%(vt0.c0)))AND(0.08050456952225327))) ORDER BY CASE vt1.c0 COLLATE RTRIM  WHEN UPPER(vt0.c1) THEN (((vt0.c1))<((vt0.c1))) WHEN (+ (vt1.c0)) THEN (((vt1.c0, '1254715249', vt0.c0))>=((vt1.c0, x'0e60f1', vt1.c0))) END  NULLS FIRST, vt0.c1 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 CROSS JOIN vt1 ON ((((0.8953898786683685 IN (vt0.c1))))<((LIKELIHOOD(vt0.c0, vt0.c1)))) WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)>(((vt0.c1)<>(vt1.c0))))) ORDER BY CASE vt1.c0 COLLATE RTRIM  WHEN UPPER(vt0.c1) THEN (((vt0.c1))<((vt0.c1))) WHEN (+ (vt1.c0)) THEN (((vt1.c0, '1254715249', vt0.c0))>=((vt1.c0, x'0e60f1', vt1.c0))) END  NULLS FIRST, vt0.c1;
SELECT * FROM vt1 WHERE ((((((('Ya)#^a3J') IS TRUE))OR((NOT (vt1.c0)))))AND(0.6591732610643154))) ORDER BY (((('aE槞W')LIKE(vt1.c0))) NOT NULL) ASC  NULLS FIRST, LIKE(json_remove('', vt1.c0, vt1.c0, vt1.c0), DATETIME(vt1.c0, vt1.c0, vt1.c0), '-'), (vt1.c0 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt1 WHERE ((((((('Ya)#^a3J') IS TRUE))OR((NOT (vt1.c0)))))AND(0.6591732610643154))) ORDER BY (((('aE槞W')LIKE(vt1.c0))) NOT NULL) ASC  NULLS FIRST, LIKE(json_remove('', vt1.c0, vt1.c0, vt1.c0), DATETIME(vt1.c0, vt1.c0, vt1.c0), '-'), (vt1.c0 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt1 WHERE ((((((('Ya)#^a3J') IS TRUE))OR((NOT (vt1.c0)))))AND(0.6591732610643154))) ORDER BY (((('aE槞W')LIKE(vt1.c0))) NOT NULL) ASC  NULLS FIRST, LIKE(json_remove('', vt1.c0, vt1.c0, vt1.c0), DATETIME(vt1.c0, vt1.c0, vt1.c0), '-'), (vt1.c0 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN vt0 ON HEX(DISTINCT vt1.c0) WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER)) ORDER BY (('6F1_L줶')==((vt0.c1 IN ()))) DESC  NULLS LAST, ((((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c1))) BETWEEN (((vt1.c0) NOT NULL)) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))))  NULLS LAST, (vt0.c0 COLLATE BINARY IN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))), ((NULL)OR(vt0.c1))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON HEX(DISTINCT vt1.c0) WHERE (((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER))AND((~ (vt0.c1 COLLATE RTRIM))))) ORDER BY ((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((((((((((((vt0.c1)AND(x'')))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))) AND (0.04337888142353474))  NULLS FIRST INTERSECT SELECT ALL * FROM vt1 CROSS JOIN vt0 ON HEX(DISTINCT vt1.c0) WHERE (NULLIF((+ (vt0.c0)), ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))) ORDER BY ((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((((((((((((vt0.c1)AND(x'')))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))) AND (0.04337888142353474))  NULLS FIRST;
SELECT * FROM vt1 CROSS JOIN vt0 ON HEX(DISTINCT vt1.c0) WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER)) ORDER BY (('6F1_L줶')==((vt0.c1 IN ()))) DESC  NULLS LAST, ((((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c1))) BETWEEN (((vt1.c0) NOT NULL)) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))))  NULLS LAST, (vt0.c0 COLLATE BINARY IN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))), ((NULL)OR(vt0.c1))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON HEX(DISTINCT vt1.c0) WHERE (((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER))AND((~ (vt0.c1 COLLATE RTRIM))))) ORDER BY ((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((((((((((((vt0.c1)AND(x'')))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))) AND (0.04337888142353474))  NULLS FIRST INTERSECT SELECT ALL * FROM vt1 CROSS JOIN vt0 ON HEX(DISTINCT vt1.c0) WHERE (NULLIF((+ (vt0.c0)), ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))) ORDER BY ((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((((((((((((vt0.c1)AND(x'')))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))) AND (0.04337888142353474))  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT NULL) WHERE (((NULL) NOTNULL));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT NULL) WHERE (((((NULL) NOTNULL))AND(((((x'')/(vt0.c1)))>>(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))))) ORDER BY ((((vt1.c0)+(vt1.c0)))>>(CASE WHEN vt0.c0 THEN vt1.c0 END))  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM vt0 INNER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT NULL) WHERE (vt0.c1) ORDER BY ((((vt1.c0)+(vt1.c0)))>>(CASE WHEN vt0.c0 THEN vt1.c0 END))  NULLS LAST LIMIT 1;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT NULL) WHERE (((NULL) NOTNULL));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT NULL) WHERE (((((NULL) NOTNULL))AND(((((x'')/(vt0.c1)))>>(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))))) ORDER BY ((((vt1.c0)+(vt1.c0)))>>(CASE WHEN vt0.c0 THEN vt1.c0 END))  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM vt0 INNER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT NULL) WHERE (vt0.c1) ORDER BY ((((vt1.c0)+(vt1.c0)))>>(CASE WHEN vt0.c0 THEN vt1.c0 END))  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE (((((IFNULL(vt0.c1, vt0.c0))OR(TRIM(vt0.c1))))AND(((vt0.c0) ISNULL)))) ORDER BY ((0.0272194163825058 COLLATE BINARY) BETWEEN (TIME(vt0.c1, vt1.c0, vt0.c0, '*<v*', vt1.c0)) AND (((vt0.c0) IS TRUE)))  NULLS LAST, NULL  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((((IFNULL(vt0.c1, vt0.c0))OR(TRIM(vt0.c1))))AND(((vt0.c0) ISNULL))))AND(0xffffffffc75c32d6))) ORDER BY CASE (- ('B?t./x'))  WHEN CASE WHEN vt0.c0 THEN vt0.c1 END THEN (vt0.c1 IN (vt0.c0, vt1.c0)) WHEN ((vt0.c1)!=(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE BINARY THEN (((0X1d32ebd9, vt0.c0))>=((vt0.c1, vt0.c0))) WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN 'J' END END;
SELECT ALL * FROM vt1, vt0 WHERE (((((IFNULL(vt0.c1, vt0.c0))OR(TRIM(vt0.c1))))AND(((vt0.c0) ISNULL)))) ORDER BY ((0.0272194163825058 COLLATE BINARY) BETWEEN (TIME(vt0.c1, vt1.c0, vt0.c0, '*<v*', vt1.c0)) AND (((vt0.c0) IS TRUE)))  NULLS LAST, NULL  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((((IFNULL(vt0.c1, vt0.c0))OR(TRIM(vt0.c1))))AND(((vt0.c0) ISNULL))))AND(0xffffffffc75c32d6))) ORDER BY CASE (- ('B?t./x'))  WHEN CASE WHEN vt0.c0 THEN vt0.c1 END THEN (vt0.c1 IN (vt0.c0, vt1.c0)) WHEN ((vt0.c1)!=(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE BINARY THEN (((0X1d32ebd9, vt0.c0))>=((vt0.c1, vt0.c0))) WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN 'J' END END;
SELECT MIN(vt0.c0) FROM vt0 WHERE (NULL);
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (NULL) LIMIT 1;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))!=((((vt0.c1)AND(vt0.c1))))), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (UPPER(vt0.c1)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL))AND(CAST(CAST(vt0.c0 AS REAL) AS BLOB)))) ORDER BY (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))<>((((vt0.c1)AND(vt0.c1))))), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (UPPER(vt0.c1)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))!=((((vt0.c1)AND(vt0.c1))))), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (UPPER(vt0.c1)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL))AND(CAST(CAST(vt0.c0 AS REAL) AS BLOB)))) ORDER BY (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))<>((((vt0.c1)AND(vt0.c1))))), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (UPPER(vt0.c1)))  NULLS FIRST;
SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE (CASE WHEN vt0.c0 THEN 489374913 END COLLATE BINARY) ORDER BY CASE ((vt0.c1) NOTNULL)  WHEN (- (x'')) THEN NULL WHEN (vt0.c0 IN (vt1.c0, vt1.c0)) THEN CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt0.c1 END WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt0.c1)-(vt0.c0)) THEN ((vt0.c1)=(vt1.c0)) END  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c0) FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN 489374913 END COLLATE BINARY)AND(CAST((((vt0.c0, vt0.c1))!=((vt1.c0, vt0.c1))) AS NUMERIC)))) ORDER BY CASE ((vt0.c1) NOTNULL)  WHEN (- (x'')) THEN NULL WHEN (vt0.c0 IN (vt1.c0, vt1.c0)) THEN CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt0.c1 END WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt0.c1)-(vt0.c0)) THEN ((vt0.c1)=(vt1.c0)) END  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt1, vt0 WHERE ((((((~ (vt0.c1)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (NULL)))))OR(vt0.c0 COLLATE NOCASE))) ORDER BY CASE ((vt0.c1) NOTNULL)  WHEN (- (x'')) THEN NULL WHEN (vt0.c0 IN (vt1.c0, vt1.c0)) THEN CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt0.c1 END WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt0.c1)-(vt0.c0)) THEN ((vt0.c1)=(vt1.c0)) END  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE));
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)) LIMIT 2;
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE));
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)) LIMIT 2;
SELECT ALL * FROM vt1, vt0 WHERE ((((- (vt0.c0)))IS NOT(((vt1.c0)OR(vt1.c0))))) ORDER BY vt0.c0 DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((- (vt0.c0)))IS NOT(((vt1.c0)OR(vt1.c0)))))AND(NULL))) ORDER BY vt0.c0  NULLS LAST, (('652935900')>(vt1.c0)) COLLATE RTRIM  NULLS LAST, CAST(vt1.c0 AS INTEGER) COLLATE RTRIM DESC, json_quote(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE 0xffffffff97e1f9e1 END) INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0)<(vt0.c1)) COLLATE RTRIM) ORDER BY vt0.c0  NULLS LAST, (('652935900')>(vt1.c0)) COLLATE RTRIM  NULLS LAST, CAST(vt1.c0 AS INTEGER) COLLATE RTRIM DESC, json_quote(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE 0xffffffff97e1f9e1 END);
SELECT ALL * FROM vt1, vt0 WHERE ((((- (vt0.c0)))IS NOT(((vt1.c0)OR(vt1.c0))))) ORDER BY vt0.c0 DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((- (vt0.c0)))IS NOT(((vt1.c0)OR(vt1.c0)))))AND(NULL))) ORDER BY vt0.c0  NULLS LAST, (('652935900')>(vt1.c0)) COLLATE RTRIM  NULLS LAST, CAST(vt1.c0 AS INTEGER) COLLATE RTRIM DESC, json_quote(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE 0xffffffff97e1f9e1 END) INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0)<(vt0.c1)) COLLATE RTRIM) ORDER BY vt0.c0  NULLS LAST, (('652935900')>(vt1.c0)) COLLATE RTRIM  NULLS LAST, CAST(vt1.c0 AS INTEGER) COLLATE RTRIM DESC, json_quote(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE 0xffffffff97e1f9e1 END);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, vt1.c0)) AND ((((vt1.c0) NOT NULL), NULL)))) ORDER BY ((vt1.c0)+((vt1.c0 IN (vt1.c0))));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, vt1.c0)) AND ((((vt1.c0) NOT NULL), NULL))))AND(0.7157266306769183))) ORDER BY ((((x'79f28a5a04') NOT BETWEEN ('<') AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))  NULLS FIRST LIMIT 0X3 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((+ (vt1.c0))) ORDER BY ((((x'79f28a5a04') NOT BETWEEN ('<') AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))  NULLS FIRST LIMIT 3;
SELECT ALL * FROM vt0 WHERE ((('	|y-') NOT NULL) COLLATE RTRIM);
SELECT DISTINCT * FROM vt0 WHERE ((('	|y-') NOT NULL) COLLATE RTRIM) ORDER BY (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)+(vt0.c0))))!=((NULL, LOWER(vt0.c1)))) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((CHANGES() IN ())) ORDER BY (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)+(vt0.c0))))!=((NULL, LOWER(vt0.c1)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 WHERE ((('	|y-') NOT NULL) COLLATE RTRIM);
SELECT DISTINCT * FROM vt0 WHERE ((('	|y-') NOT NULL) COLLATE RTRIM) ORDER BY (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)+(vt0.c0))))!=((NULL, LOWER(vt0.c1)))) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((CHANGES() IN ())) ORDER BY (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)+(vt0.c0))))!=((NULL, LOWER(vt0.c1)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (((CASE x'9c4e98'  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)==((+ (vt0.c0))))) ORDER BY CAST(((vt0.c0)GLOB(vt0.c1)) AS NUMERIC) DESC, ((('')) BETWEEN ((0.23205643869743842)) AND ((CAST(vt0.c1 AS TEXT))))  NULLS LAST, (((((+ ('V##9%')))OR(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))AND((vt1.c0 IN ()))) ASC  NULLS LAST;
SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE (((CASE x'9c4e98'  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)==((+ (vt0.c0))))) ORDER BY LOWER(DISTINCT ((vt1.c0)<(vt0.c1))) LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE ((((((vt0.c0, vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0, x'')))) NOTNULL)) ORDER BY LOWER(DISTINCT ((vt1.c0)<(vt0.c1))) LIMIT 0x0;
SELECT * FROM vt0, vt1 WHERE (CAST(((((0.7023971077435303)OR(vt0.c1)))OR(0.6235065713349728)) AS TEXT));
SELECT * FROM vt0, vt1 WHERE (((CAST(((((0.7023971077435303)OR(vt0.c1)))OR(0.6235065713349728)) AS TEXT))AND((- (CAST(vt0.c1 AS NUMERIC)))))) ORDER BY ABS((vt1.c0 IN ()))  NULLS LAST LIMIT 0x3;
SELECT * FROM vt0, vt1 WHERE (CAST(((((0.7023971077435303)OR(vt0.c1)))OR(0.6235065713349728)) AS TEXT));
SELECT * FROM vt0, vt1 WHERE (((CAST(((((0.7023971077435303)OR(vt0.c1)))OR(0.6235065713349728)) AS TEXT))AND((- (CAST(vt0.c1 AS NUMERIC)))))) ORDER BY ABS((vt1.c0 IN ()))  NULLS LAST LIMIT 0x3;
SELECT ALL MIN(vt1.c0) FROM vt0, vt1 WHERE ((+ (((vt1.c0) NOTNULL))));
SELECT ALL MIN(vt1.c0) FROM vt0, vt1 WHERE ((((+ (((vt1.c0) NOTNULL))))AND(((((((((((vt0.c0)OR(vt0.c0)))AND(((vt0.c1)OR(vt0.c0)))))OR((vt0.c0 IN (vt1.c0, vt0.c0)))))AND(((vt0.c1) IS TRUE))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))))) ORDER BY CASE STRFTIME(vt0.c1, vt1.c0, '1696562798', vt0.c0, vt1.c0)  WHEN 1700772375 THEN ((vt0.c0)GLOB(vt1.c0)) WHEN (((vt1.c0))<=((vt0.c1))) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) WHEN ((x'') IS TRUE) THEN CAST(vt0.c1 AS REAL) END INTERSECT SELECT ALL MIN(vt1.c0) FROM vt0, vt1 WHERE (((NULL)>(vt0.c1)) COLLATE NOCASE) ORDER BY CASE STRFTIME(vt0.c1, vt1.c0, '1696562798', vt0.c0, vt1.c0)  WHEN 1700772375 THEN ((vt0.c0)GLOB(vt1.c0)) WHEN (((vt1.c0))<=((vt0.c1))) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) WHEN ((x'') IS TRUE) THEN CAST(vt0.c1 AS REAL) END;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ('300746964');
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ('300746964') ORDER BY CAST(x'36' AS INTEGER) ASC, ((x'2c')GLOB(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC LIMIT 2 INTERSECT SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL)) ORDER BY CAST(x'36' AS INTEGER) ASC, ((x'2c')GLOB(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC LIMIT 0x2;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ('300746964');
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ('300746964') ORDER BY CAST(x'36' AS INTEGER) ASC, ((x'2c')GLOB(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC LIMIT 2 INTERSECT SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL)) ORDER BY CAST(x'36' AS INTEGER) ASC, ((x'2c')GLOB(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC LIMIT 0x2;
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)<=(vt1.c0)))AND(((((0X4b3f3fa6)OR(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0)OR(vt1.c0)))))AND(0.03617990457422937 COLLATE RTRIM)))OR(vt1.c0)));
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)==(vt1.c0)))AND(((((0x4b3f3fa6)OR(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0)OR(vt1.c0)))))AND(0.03617990457422937 COLLATE RTRIM)))OR(vt1.c0))) INTERSECT SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)<=(vt1.c0)))AND(((((0X4b3f3fa6)OR(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0)OR(vt1.c0)))))AND(0.03617990457422937 COLLATE RTRIM)))OR(vt1.c0)));
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)==(vt1.c0)))AND(((((0x4b3f3fa6)OR(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0)OR(vt1.c0)))))AND(0.03617990457422937 COLLATE RTRIM)))OR(vt1.c0))) INTERSECT SELECT * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0) NOTNULL) IN ()) DESC;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM WHERE (((NOT (vt0.c1)) IN (((((0.3243020145492097)OR(vt1.c0)))AND(vt0.c1)))));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM WHERE (((NOT (vt0.c1)) IN (((((0.3243020145492097)OR(vt1.c0)))AND(vt0.c1))))) ORDER BY vt1.c0 DESC  NULLS FIRST, ((((x'') BETWEEN (vt0.c1) AND (vt0.c0)))||((vt0.c1 IN (vt0.c1)))), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))LIKE(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM WHERE ((('-1420023627') ISNULL)) ORDER BY vt1.c0 DESC  NULLS FIRST, ((((x'') BETWEEN (vt0.c1) AND (vt0.c0)))||((vt0.c1 IN (vt0.c1)))), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))LIKE(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM WHERE (((NOT (vt0.c1)) IN (((((0.3243020145492097)OR(vt1.c0)))AND(vt0.c1)))));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM WHERE (((NOT (vt0.c1)) IN (((((0.3243020145492097)OR(vt1.c0)))AND(vt0.c1))))) ORDER BY vt1.c0 DESC  NULLS FIRST, ((((x'') BETWEEN (vt0.c1) AND (vt0.c0)))||((vt0.c1 IN (vt0.c1)))), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))LIKE(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM WHERE ((('-1420023627') ISNULL)) ORDER BY vt1.c0 DESC  NULLS FIRST, ((((x'') BETWEEN (vt0.c1) AND (vt0.c0)))||((vt0.c1 IN (vt0.c1)))), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))LIKE(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ('-517599695');
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE ('-517599695') ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE x'0d'  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST, ((((((vt1.c0))>=((vt1.c0)))))<>(((NOT (vt1.c0)))))  NULLS FIRST, ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) IN (((vt1.c0)%(vt1.c0)))) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (CASE WHEN 0.6674905507924325 THEN x'' WHEN (((vt1.c0, vt1.c0))>((vt1.c0, vt1.c0))) THEN vt1.c0 COLLATE BINARY END) ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE x'0d'  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST, ((((((vt1.c0))>=((vt1.c0)))))!=(((NOT (vt1.c0)))))  NULLS FIRST, ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) IN (((vt1.c0)%(vt1.c0)))) DESC LIMIT 0x0;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))) IS FALSE)) ORDER BY ('2109847487' IN (CAST(vt0.c1 AS INTEGER)))  NULLS LAST, vt0.c0 ASC;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))) IS FALSE)) ORDER BY (NOT (((vt0.c1) NOTNULL))) ASC;
SELECT * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY NULLIF(((((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)), ((vt0.c0)<<(vt1.c0))), ((((+ (vt1.c0))))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))))  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt0.c1)AND(((vt1.c0 COLLATE BINARY)*(vt0.c1 COLLATE RTRIM))))) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST LIMIT 0x0;
SELECT * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY NULLIF(((((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)), ((vt0.c0)<<(vt1.c0))), ((((+ (vt1.c0))))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))))  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt0.c1)AND(((vt1.c0 COLLATE BINARY)*(vt0.c1 COLLATE RTRIM))))) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST LIMIT 0x0;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT));
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))AND(CAST('6z\r>*' AS BLOB)))) ORDER BY ((((vt1.c0)<('~_#'))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))  NULLS FIRST, (vt1.c0 COLLATE NOCASE IN (1517556072))  NULLS FIRST;
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS TEXT))+(TRIM(vt0.c1))));
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (((((CAST(vt0.c1 AS TEXT))+(TRIM(vt0.c1))))AND(vt0.c1))) ORDER BY ((((vt0.c1)OR(vt1.c0))) NOT NULL) DESC, CAST((NOT (NULL)) AS TEXT) DESC LIMIT 0X0;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((json_quote(vt1.c0))IS NOT(((vt1.c0)<>(vt1.c0))))) ORDER BY UNLIKELY(((vt1.c0)OR(vt1.c0))) ASC  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)>=((+ (vt1.c0))))  NULLS LAST, SQLITE_SOURCE_ID() ASC  NULLS FIRST, (NOT (CAST(vt1.c0 AS TEXT)))  NULLS LAST;
SELECT MIN(vt1.c0) FROM vt1 WHERE (((((json_quote(vt1.c0))IS NOT(((vt1.c0)>(vt1.c0)))))AND(COALESCE(x'de', '-1257828529', 0.2879219218478474, ((vt1.c0)%('sZ_')), ((vt1.c0)>(vt1.c0)))))) ORDER BY UNLIKELY(((vt1.c0)OR(vt1.c0))) ASC  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)>=((+ (vt1.c0))))  NULLS LAST, SQLITE_SOURCE_ID() ASC  NULLS FIRST, (NOT (CAST(vt1.c0 AS TEXT)))  NULLS LAST INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (COALESCE(((vt1.c0)>=(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ORDER BY UNLIKELY(((vt1.c0)OR(vt1.c0))) ASC  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)>=((+ (vt1.c0))))  NULLS LAST, SQLITE_SOURCE_ID() ASC  NULLS FIRST, (NOT (CAST(vt1.c0 AS TEXT)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE x'f5c0ade5'  WHEN 0.15741316206645894 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY  NULLS LAST, UNICODE(TYPEOF(DISTINCT vt0.c1))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(((CAST(vt0.c1 AS REAL))<<(((((((((x'cb')OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))))))) ORDER BY vt0.c1 ASC, vt0.c0  NULLS FIRST INTERSECT SELECT COUNT(*) FROM vt0 WHERE (CAST(((((((vt0.c0)AND(x'')))AND(vt0.c1)))OR(x'45')) AS NUMERIC)) ORDER BY vt0.c1 ASC, vt0.c0  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))) ISNULL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))IS(json_valid(vt0.c0))), ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))GLOB(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))) ISNULL))AND('-1307813814'))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))IS(json_valid(vt0.c0))), ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))GLOB(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))) ISNULL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))IS(json_valid(vt0.c0))), ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))GLOB(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))) ISNULL))AND('-1307813814'))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))IS(json_valid(vt0.c0))), ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))GLOB(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END IN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE '1696562798' END)) WHERE (LOWER((((''))>=((vt1.c0)))));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END IN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE '1696562798' END)) WHERE (LOWER((((''))>=((vt1.c0))))) ORDER BY ((((vt0.c1)OR(vt0.c1)))||(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) LIMIT 0x0;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END IN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE '1696562798' END)) WHERE (LOWER((((''))>=((vt1.c0)))));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END IN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE '1696562798' END)) WHERE (LOWER((((''))>=((vt1.c0))))) ORDER BY ((((vt0.c1)OR(vt0.c1)))||(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) LIMIT 0x0;
SELECT * FROM vt0 CROSS JOIN vt1 ON ((x'45c5')%(LOWER(vt0.c1))) WHERE (UNLIKELY(TOTAL_CHANGES()));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((x'45c5')%(LOWER(vt0.c1))) WHERE (((UNLIKELY(TOTAL_CHANGES()))AND((+ (((((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0))))))) LIMIT 0X0;
SELECT * FROM vt0 CROSS JOIN vt1 ON ((x'45c5')%(LOWER(vt0.c1))) WHERE (UNLIKELY(TOTAL_CHANGES()));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((x'45c5')%(LOWER(vt0.c1))) WHERE (((UNLIKELY(TOTAL_CHANGES()))AND((+ (((((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0))))))) LIMIT 0X0;
SELECT * FROM vt1, vt0 WHERE (((~ (vt1.c0)) IN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))));
SELECT * FROM vt1, vt0 WHERE (((((~ (vt1.c0)) IN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))))AND(GLOB(((vt0.c0) IS TRUE), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN 0.8086136764661435 THEN x'd0' WHEN vt0.c1 THEN vt1.c0 END))));
SELECT * FROM vt1, vt0 WHERE (((~ (vt1.c0)) IN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))));
SELECT * FROM vt1, vt0 WHERE (((((~ (vt1.c0)) IN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))))AND(GLOB(((vt0.c0) IS TRUE), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN 0.8086136764661435 THEN x'd0' WHEN vt0.c1 THEN vt1.c0 END))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY('1461806257') WHERE (CAST((vt0.c1 IN ()) AS BLOB)) ORDER BY CASE ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0))  WHEN vt1.c0 THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN ((vt0.c1) IS TRUE) ELSE ((vt1.c0)%(vt0.c0)) END DESC, ((vt0.c1)|(((vt1.c0) IS FALSE))) DESC  NULLS FIRST, (~ (vt1.c0 COLLATE RTRIM)) ASC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY('1461806257') WHERE (((CAST((vt0.c1 IN ()) AS BLOB))AND(((CAST(vt1.c0 AS NUMERIC))OR((vt0.c0 IN (vt0.c0, vt0.c0))))))) ORDER BY ((LTRIM(vt1.c0)) BETWEEN (CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))), ((CAST(vt0.c0 AS NUMERIC))&(((vt0.c1)AND(vt0.c0))))  NULLS FIRST, (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN (((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)), ((vt1.c0)+(vt0.c0)))) ASC LIMIT 0x0 INTERSECT SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY('1461806257') WHERE ((NOT (((vt0.c1)+(vt1.c0))))) ORDER BY ((LTRIM(vt1.c0)) BETWEEN (CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))), ((CAST(vt0.c0 AS NUMERIC))&(((vt0.c1)AND(vt0.c0))))  NULLS FIRST, (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN (((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)), ((vt1.c0)+(vt0.c0)))) ASC LIMIT 0;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY('1461806257') WHERE (CAST((vt0.c1 IN ()) AS BLOB)) ORDER BY CASE ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0))  WHEN vt1.c0 THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN ((vt0.c1) IS TRUE) ELSE ((vt1.c0)%(vt0.c0)) END DESC, ((vt0.c1)|(((vt1.c0) IS FALSE))) DESC  NULLS FIRST, (~ (vt1.c0 COLLATE RTRIM)) ASC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY('1461806257') WHERE (((CAST((vt0.c1 IN ()) AS BLOB))AND(((CAST(vt1.c0 AS NUMERIC))OR((vt0.c0 IN (vt0.c0, vt0.c0))))))) ORDER BY ((LTRIM(vt1.c0)) BETWEEN (CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))), ((CAST(vt0.c0 AS NUMERIC))&(((vt0.c1)AND(vt0.c0))))  NULLS FIRST, (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN (((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)), ((vt1.c0)+(vt0.c0)))) ASC LIMIT 0x0 INTERSECT SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY('1461806257') WHERE ((NOT (((vt0.c1)+(vt1.c0))))) ORDER BY ((LTRIM(vt1.c0)) BETWEEN (CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))), ((CAST(vt0.c0 AS NUMERIC))&(((vt0.c1)AND(vt0.c0))))  NULLS FIRST, (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN (((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)), ((vt1.c0)+(vt0.c0)))) ASC LIMIT 0;
SELECT * FROM vt0 WHERE ((((QUOTE(vt0.c1)))<>((((NULL)<<(vt0.c1))))));
SELECT DISTINCT * FROM vt0 WHERE ((((((QUOTE(vt0.c1)))<((((NULL)<<(vt0.c1))))))AND(((vt0.c0 COLLATE BINARY) NOT BETWEEN ((vt0.c1 IN (vt0.c0))) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL))))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) IS FALSE))%(((vt0.c1)AND(vt0.c1))))) LIMIT 1;
SELECT * FROM vt0 WHERE ((((QUOTE(vt0.c1)))<>((((NULL)<<(vt0.c1))))));
SELECT DISTINCT * FROM vt0 WHERE ((((((QUOTE(vt0.c1)))<((((NULL)<<(vt0.c1))))))AND(((vt0.c0 COLLATE BINARY) NOT BETWEEN ((vt0.c1 IN (vt0.c0))) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL))))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) IS FALSE))%(((vt0.c1)AND(vt0.c1))))) LIMIT 1;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((vt0.c1)%(vt0.c1)) COLLATE NOCASE) ORDER BY ((655700416 COLLATE BINARY)LIKE((- (vt0.c1))))  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((vt0.c1)%(vt0.c1)) COLLATE NOCASE) ORDER BY ((HEX(vt0.c0)) ISNULL)  NULLS FIRST LIMIT 1;
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN (0.42107601579011145))) ORDER BY CAST(((vt1.c0)GLOB(vt0.c0)) AS INTEGER) ASC  NULLS FIRST, (vt0.c1 IN (vt1.c0)) COLLATE RTRIM;
SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN (0.42107601579011145))) ORDER BY CAST(((vt1.c0)GLOB(vt0.c0)) AS INTEGER) ASC  NULLS FIRST, (vt0.c1 IN (vt1.c0)) COLLATE RTRIM;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((- (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-1555868435' END)));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((- (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-1555868435' END))) ORDER BY ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))GLOB((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((0.9937993707119036, vt0.c0, vt0.c1)))))  NULLS LAST, (vt0.c1 IN ()) COLLATE BINARY ASC  NULLS LAST LIMIT 0X0;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((~ ('!q')));
SELECT MIN(vt0.c1) FROM vt0 WHERE ((~ ('!q'))) ORDER BY COALESCE(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (vt0.c1 IN (vt0.c0, NULL)), CASE WHEN vt0.c1 THEN vt0.c0 END, CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) INTERSECT SELECT MIN(vt0.c1) FROM vt0 WHERE ('-2022459642' COLLATE BINARY) ORDER BY COALESCE(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (vt0.c1 IN (vt0.c0, NULL)), CASE WHEN vt0.c1 THEN vt0.c0 END, CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END);
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (CASE WHEN ((((((((0.8554490150621754)OR(vt0.c1)))OR(-2.05017214E9)))AND(vt0.c1)))AND(vt1.c0)) THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)) WHEN (NOT (vt1.c0)) THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN TRIM(DISTINCT vt1.c0) THEN 0x43ec2f33 END);
SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE (CASE WHEN ((((((((0.8554490150621754)OR(vt0.c1)))OR(-2.05017214E9)))AND(vt0.c1)))AND(vt1.c0)) THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)) WHEN (NOT (vt1.c0)) THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN TRIM(DISTINCT vt1.c0) THEN 1139552051 END) LIMIT 0x3;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE ((+ ((((vt0.c0, vt0.c0))!=((vt1.c0, vt1.c0))))));
SELECT DISTINCT MAX(vt0.c0) FROM vt0, vt1 WHERE ((((+ ((((vt0.c0, vt0.c0))!=((vt1.c0, vt1.c0))))))AND(NULL COLLATE RTRIM))) ORDER BY (((vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE), vt1.c0, ((vt0.c0) NOTNULL))) AND ((0.615831041845181, ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)), ((vt0.c1) IS TRUE))))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0, vt1 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((((((((((vt1.c0)AND(vt1.c0)))OR('+')))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))))) ORDER BY (((vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE), vt1.c0, ((vt0.c0) NOTNULL))) AND ((0.615831041845181, ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)), ((vt0.c1) IS TRUE))))  NULLS FIRST LIMIT 0x1;
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND('*<v*'))) ORDER BY UPPER(DISTINCT '-1686332408') COLLATE NOCASE;
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE (json_type(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN '434657884' THEN vt1.c0 END));
SELECT DISTINCT MAX(vt1.c0) FROM vt1, vt0 WHERE (json_type(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN '434657884' THEN vt1.c0 END)) INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1, vt0 WHERE (((((((((((x'') ISNULL))OR(((vt0.c0)&(vt0.c0)))))OR(((vt0.c1)>(vt1.c0)))))AND(vt0.c1 COLLATE RTRIM)))AND(vt0.c1)));
SELECT * FROM vt0 WHERE (-1.943074248E9);
SELECT ALL * FROM vt0 WHERE (((-1.943074248E9)AND(((vt0.c0 COLLATE NOCASE)*(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))))) ORDER BY CAST(LOWER(vt0.c0) AS BLOB) ASC, NULL LIMIT 0x1;
SELECT * FROM vt0 WHERE (-1.943074248E9);
SELECT ALL * FROM vt0 WHERE (((-1.943074248E9)AND(((vt0.c0 COLLATE NOCASE)*(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))))) ORDER BY CAST(LOWER(vt0.c0) AS BLOB) ASC, NULL LIMIT 0x1;
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE (((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (x'7f')));
SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE (((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (x'7f'))) ORDER BY SQLITE_COMPILEOPTION_USED((vt0.c0 IN ('/'))) ASC LIMIT 0X2 INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE ('K+餏') ORDER BY SQLITE_COMPILEOPTION_USED((vt0.c0 IN ('/'))) ASC LIMIT 0X2;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) ORDER BY DATE(CAST(x'' AS BLOB), ((NULL) NOT BETWEEN (-136740434) AND (vt0.c0)), CAST(vt0.c0 AS REAL), vt0.c1 COLLATE NOCASE), vt0.c1;
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE ((((((vt1.c0) BETWEEN (0x11ed08d4) AND (vt0.c1)), vt0.c0))=(((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c0))), ((vt0.c0) IS FALSE))))) ORDER BY vt0.c0  NULLS LAST, TRIM(DISTINCT vt0.c0)  NULLS FIRST;
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE ((((((((vt1.c0) BETWEEN (300746964) AND (vt0.c1)), vt0.c0))=(((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c0))), ((vt0.c0) IS FALSE)))))AND((((((((vt0.c0))>((vt1.c0))))AND(((vt0.c0)||(vt1.c0)))))AND(LIKELY(vt0.c0)))))) ORDER BY ABS(((vt0.c0) IS FALSE)), CASE vt1.c0 COLLATE BINARY  WHEN ((0.014091669125693707)||(vt0.c0)) THEN (NOT (vt1.c0)) WHEN ((((vt0.c1)OR(vt1.c0)))OR(9.05496803E8)) THEN ((((((vt0.c0)AND('&+')))OR(vt0.c0)))OR(vt0.c1)) WHEN ((vt0.c1)AND(vt1.c0)) THEN CASE WHEN 0.02695273888830041 THEN vt1.c0 WHEN '!' THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END WHEN ((vt0.c0)/(vt0.c1)) THEN CASE vt0.c1  WHEN 'm' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'46' WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END ELSE json_array(vt0.c0, vt0.c0, vt0.c0) END INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (((((vt0.c1)||(vt0.c0))) IS TRUE)) ORDER BY ABS(((vt0.c0) IS FALSE)), CASE vt1.c0 COLLATE BINARY  WHEN ((0.014091669125693707)||(vt0.c0)) THEN (NOT (vt1.c0)) WHEN ((((vt0.c1)OR(vt1.c0)))OR(9.05496803E8)) THEN ((((((vt0.c0)AND('&+')))OR(vt0.c0)))OR(vt0.c1)) WHEN ((vt0.c1)AND(vt1.c0)) THEN CASE WHEN 0.02695273888830041 THEN vt1.c0 WHEN '!' THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END WHEN ((vt0.c0)/(vt0.c1)) THEN CASE vt0.c1  WHEN 'm' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'46' WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END ELSE json_array(vt0.c0, vt0.c0, vt0.c0) END;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((- (vt0.c1)));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((((- (vt0.c1)))AND(CASE (NOT (vt0.c1))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(0.06364580930239094)) WHEN ((vt0.c1)IS(vt0.c1)) THEN vt0.c1 COLLATE BINARY ELSE LIKELIHOOD(DISTINCT vt0.c1, vt0.c1) END))) ORDER BY (((NOT (vt0.c1))) IS FALSE)  NULLS LAST, (((vt0.c1)<(vt0.c0)) IN ()) LIMIT 3 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (INSTR((vt0.c1 IN (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY (((NOT (vt0.c1))) IS FALSE)  NULLS LAST, (((vt0.c1)<(vt0.c0)) IN ()) LIMIT 3;
SELECT MAX(vt0.c1) FROM vt0 WHERE (CASE WHEN ((vt0.c1)<(vt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE x'86' END);
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((CASE WHEN ((vt0.c1)<(vt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE x'86' END)AND(CASE WHEN vt0.c0 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN vt0.c1 THEN (((vt0.c1))<>((vt0.c1))) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN '-1096545910' THEN (NOT (vt0.c0)) ELSE ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END))) ORDER BY (((x'de')<=(vt0.c1)) IN (vt0.c0)) ASC LIMIT 0x3;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)GLOB(vt0.c0))) IS TRUE) ASC, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END COLLATE RTRIM ASC  NULLS LAST, ((vt0.c1 COLLATE RTRIM) IS TRUE);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN x'' ELSE (- (vt0.c0)) END DESC, ((((vt0.c1, x'', vt0.c0))<>((vt0.c1, vt0.c0, '\h'))) IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)GLOB(vt0.c0))) IS TRUE) ASC, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END COLLATE RTRIM ASC  NULLS LAST, ((vt0.c1 COLLATE RTRIM) IS TRUE);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN x'' ELSE (- (vt0.c0)) END DESC, ((((vt0.c1, x'', vt0.c0))<>((vt0.c1, vt0.c0, '\h'))) IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY vt0.c1 LIMIT 0X0 INTERSECT SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY vt0.c1 LIMIT 0;
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY vt0.c1 LIMIT 0X0 INTERSECT SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY vt0.c1 LIMIT 0;
SELECT * FROM vt0 WHERE ('0.6386073490585216');
SELECT * FROM vt0 WHERE ('0.6386073490585216') ORDER BY vt0.c0  NULLS LAST INTERSECT SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)LIKE(vt0.c1))))) ORDER BY vt0.c0  NULLS LAST;
SELECT * FROM vt0 WHERE ('0.6386073490585216');
SELECT * FROM vt0 WHERE ('0.6386073490585216') ORDER BY vt0.c0  NULLS LAST INTERSECT SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)LIKE(vt0.c1))))) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)) COLLATE BINARY WHERE (((((vt1.c0)<>(vt0.c0)))IS(vt1.c0 COLLATE BINARY))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((((vt1.c0)OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) WHEN ((vt1.c0)<(vt0.c1)) THEN ((vt0.c1)GLOB('-844438941')) WHEN (('T䯍0e''랿Td')>=(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END ASC, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))<=((- (vt0.c1))))  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)) COLLATE BINARY WHERE (((((vt1.c0)<(vt0.c0)))IS(vt1.c0 COLLATE BINARY))) ORDER BY ((((((((((vt1.c0)AND(NULL)))OR(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))))OR(0.41916462345417693)))OR((vt0.c0 IN ()))))AND((((vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1)) AND ((x'', NULL))))), ((NULL) BETWEEN (HEX(vt0.c0)) AND (CAST('휳' AS REAL)))  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) ORDER BY TRIM(DISTINCT (+ (vt0.c0)), vt0.c1) DESC, (('<') IS FALSE) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY)AND(DATETIME((((vt0.c0))>=((vt0.c0))), GLOB(vt0.c1, vt0.c0), ABS(DISTINCT vt0.c0))))) ORDER BY TRIM(DISTINCT (+ (vt0.c0)), vt0.c1) DESC, (('<') IS FALSE) ASC INTERSECT SELECT ALL * FROM vt0 WHERE (((('1917719584', (((0.32939984335328854, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0))), CAST(vt0.c1 AS INTEGER)))!=(((~ (vt0.c1)), (~ (vt0.c1)), CAST(vt0.c0 AS BLOB))))) ORDER BY TRIM(DISTINCT (+ (vt0.c0)), vt0.c1) DESC, (('<') IS FALSE) ASC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) ORDER BY TRIM(DISTINCT (+ (vt0.c0)), vt0.c1) DESC, (('<') IS FALSE) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY)AND(DATETIME((((vt0.c0))>=((vt0.c0))), GLOB(vt0.c1, vt0.c0), ABS(DISTINCT vt0.c0))))) ORDER BY TRIM(DISTINCT (+ (vt0.c0)), vt0.c1) DESC, (('<') IS FALSE) ASC INTERSECT SELECT ALL * FROM vt0 WHERE (((('1917719584', (((0.32939984335328854, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0))), CAST(vt0.c1 AS INTEGER)))!=(((~ (vt0.c1)), (~ (vt0.c1)), CAST(vt0.c0 AS BLOB))))) ORDER BY TRIM(DISTINCT (+ (vt0.c0)), vt0.c1) DESC, (('<') IS FALSE) ASC;
SELECT * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS NUMERIC)) ORDER BY ((((((CAST(vt1.c0 AS BLOB))OR(STRFTIME(vt1.c0, vt1.c0, vt1.c0))))OR(NULL COLLATE BINARY)))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))), NULL ASC, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, HEX(((vt1.c0)LIKE(vt1.c0))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS NUMERIC)) ORDER BY ((((((CAST(vt1.c0 AS BLOB))OR(STRFTIME(vt1.c0, vt1.c0, vt1.c0))))OR(NULL COLLATE BINARY)))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))), NULL ASC, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, HEX(((vt1.c0)LIKE(vt1.c0))) DESC  NULLS LAST INTERSECT SELECT * FROM vt1 WHERE ('!') ORDER BY ((((((CAST(vt1.c0 AS BLOB))OR(STRFTIME(vt1.c0, vt1.c0, vt1.c0))))OR(NULL COLLATE BINARY)))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))), NULL ASC, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, HEX(((vt1.c0)LIKE(vt1.c0))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS NUMERIC)) ORDER BY ((((((CAST(vt1.c0 AS BLOB))OR(STRFTIME(vt1.c0, vt1.c0, vt1.c0))))OR(NULL COLLATE BINARY)))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))), NULL ASC, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, HEX(((vt1.c0)LIKE(vt1.c0))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS NUMERIC)) ORDER BY ((((((CAST(vt1.c0 AS BLOB))OR(STRFTIME(vt1.c0, vt1.c0, vt1.c0))))OR(NULL COLLATE BINARY)))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))), NULL ASC, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, HEX(((vt1.c0)LIKE(vt1.c0))) DESC  NULLS LAST INTERSECT SELECT * FROM vt1 WHERE ('!') ORDER BY ((((((CAST(vt1.c0 AS BLOB))OR(STRFTIME(vt1.c0, vt1.c0, vt1.c0))))OR(NULL COLLATE BINARY)))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))), NULL ASC, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, HEX(((vt1.c0)LIKE(vt1.c0))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) ORDER BY ((((((((0.5921625525649123)OR(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(NULL)))AND(CASE WHEN vt0.c0 THEN NULL WHEN 0.2618691619166992 THEN vt1.c0 ELSE vt0.c1 END)))OR(vt1.c0))  NULLS LAST, ((((0.20560807807622272) NOT BETWEEN (vt0.c1) AND (vt1.c0)))||((vt0.c0 IN (vt0.c1, vt0.c0, vt0.c0)))) ASC, (((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN (((vt1.c0)==(vt1.c0)), ((vt0.c1)<=(vt0.c0))));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) ORDER BY ((((vt1.c0) IS FALSE)) NOT NULL)  NULLS FIRST, (((((vt0.c1))<=((vt0.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(0Xffffffff83cbe765)))) DESC  NULLS FIRST, ((CASE WHEN vt0.c1 THEN vt1.c0 WHEN NULL THEN vt1.c0 END) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (CAST(vt0.c0 AS BLOB))) LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (0.8793161265486631) ORDER BY ((((vt1.c0) IS FALSE)) NOT NULL)  NULLS FIRST, (((((vt0.c1))<=((vt0.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(-2083788955)))) DESC  NULLS FIRST, ((CASE WHEN vt0.c1 THEN vt1.c0 WHEN NULL THEN vt1.c0 END) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (CAST(vt0.c0 AS BLOB))) LIMIT 0;
SELECT * FROM vt1 WHERE (ABS((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))));
SELECT * FROM vt1 WHERE (((ABS((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))))AND(((((vt1.c0)IS(vt1.c0))) ISNULL)))) LIMIT 0x1;
SELECT * FROM vt1 WHERE (ABS((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))));
SELECT * FROM vt1 WHERE (((ABS((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))))AND(((((vt1.c0)IS(vt1.c0))) ISNULL)))) LIMIT 0x1;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))-(CASE WHEN vt0.c1 THEN '衎.sqs%' ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))-(CASE WHEN vt0.c1 THEN '衎.sqs%' ELSE vt0.c0 END))) LIMIT 1 INTERSECT SELECT ALL * FROM vt0 WHERE (vt0.c1) LIMIT 0x1;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))-(CASE WHEN vt0.c1 THEN '衎.sqs%' ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))-(CASE WHEN vt0.c1 THEN '衎.sqs%' ELSE vt0.c0 END))) LIMIT 1 INTERSECT SELECT ALL * FROM vt0 WHERE (vt0.c1) LIMIT 0x1;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOTNULL) COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOTNULL) COLLATE RTRIM);
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOTNULL)) LIMIT 1;
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOTNULL)) LIMIT 1;
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (CASE WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN vt0.c1 THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c1) NOTNULL) END);
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (CASE WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN vt0.c1 THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c1) NOTNULL) END) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))/(((((((vt0.c0)OR(NULL)))OR(vt0.c1)))OR(vt0.c0)))) DESC, (vt0.c0 IN ()) COLLATE RTRIM  NULLS FIRST INTERSECT SELECT MIN(vt0.c1) FROM vt1, vt0 WHERE ((((x'5acc7f'))==((((vt1.c0)GLOB(vt0.c0)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))/(((((((vt0.c0)OR(NULL)))OR(vt0.c1)))OR(vt0.c0)))) DESC, (vt0.c0 IN ()) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0) NOT NULL)))) ORDER BY (((vt1.c0 IN (vt1.c0))) ISNULL)  NULLS FIRST, ((CAST(vt1.c0 AS BLOB))<<(vt1.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0) NOT NULL)))) ORDER BY 0.40872194926768113  NULLS LAST, CAST(vt1.c0 AS NUMERIC) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN ((+ (vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY 0.40872194926768113  NULLS LAST, CAST(vt1.c0 AS NUMERIC) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0) NOT NULL)))) ORDER BY (((vt1.c0 IN (vt1.c0))) ISNULL)  NULLS FIRST, ((CAST(vt1.c0 AS BLOB))<<(vt1.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0) NOT NULL)))) ORDER BY 0.40872194926768113  NULLS LAST, CAST(vt1.c0 AS NUMERIC) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN ((+ (vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY 0.40872194926768113  NULLS LAST, CAST(vt1.c0 AS NUMERIC) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS BLOB))!=(((vt0.c1) IS FALSE))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS BLOB))!=(((vt0.c1) IS FALSE)))) ORDER BY CASE WHEN ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (0xffffffffb5e0b377)) END ASC LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt1.c0))<=((vt0.c0))))<<(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))))) ORDER BY CASE WHEN ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (0xffffffffb5e0b377)) END ASC LIMIT 0X3;
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS BLOB))!=(((vt0.c1) IS FALSE))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS BLOB))!=(((vt0.c1) IS FALSE)))) ORDER BY CASE WHEN ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (0xffffffffb5e0b377)) END ASC LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt1.c0))<=((vt0.c0))))<<(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))))) ORDER BY CASE WHEN ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (0xffffffffb5e0b377)) END ASC LIMIT 0X3;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS TEXT))));
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((((NOT (CAST(vt0.c1 AS TEXT))))AND(GLOB(COALESCE(vt0.c1, vt0.c1, vt0.c1), (((vt0.c0))>=((vt0.c1))))))) ORDER BY CAST(json_remove(vt0.c1, vt0.c1, vt0.c1, vt0.c1) AS NUMERIC) INTERSECT SELECT MIN(vt0.c0) FROM vt0 WHERE (PRINTF(NULL, 'D<1Y?', ((vt0.c1)>>(vt0.c0)))) ORDER BY CAST(json_remove(vt0.c1, vt0.c1, vt0.c1, vt0.c1) AS NUMERIC);
SELECT MAX(vt1.c0) FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) ISNULL))) WHERE (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))>=(((vt1.c0) ISNULL))));
SELECT MAX(vt1.c0) FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) ISNULL))) WHERE (((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))>(((vt1.c0) ISNULL))))AND((((((vt0.c1, vt0.c0, x'e3275c')) NOT BETWEEN ((vt1.c0, vt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0)))) ISNULL)))) INTERSECT SELECT ALL MAX(vt1.c0) FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) ISNULL))) WHERE (((((((((0.37302438060044363)AND((vt0.c0 IN (vt0.c1, vt0.c1, vt1.c0)))))AND((- (x'')))))AND(CAST(vt1.c0 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE ((NOT ((vt0.c1 IN (vt0.c0))))) ORDER BY 0.7023971077435303 ASC  NULLS FIRST, (+ ((vt0.c0 IN (vt0.c0))));
SELECT ALL * FROM vt0 WHERE ((NOT ((vt0.c1 IN (vt0.c0))))) ORDER BY 0.7023971077435303 ASC  NULLS FIRST, (+ ((vt0.c0 IN (vt0.c0)))) LIMIT 1;
SELECT * FROM vt0 WHERE ((NOT ((vt0.c1 IN (vt0.c0))))) ORDER BY 0.7023971077435303 ASC  NULLS FIRST, (+ ((vt0.c0 IN (vt0.c0))));
SELECT ALL * FROM vt0 WHERE ((NOT ((vt0.c1 IN (vt0.c0))))) ORDER BY 0.7023971077435303 ASC  NULLS FIRST, (+ ((vt0.c0 IN (vt0.c0)))) LIMIT 1;
SELECT MIN(vt0.c0) FROM vt0 WHERE (((vt0.c1) BETWEEN (((vt0.c1) IS FALSE)) AND (((vt0.c1)<=(vt0.c0))))) ORDER BY ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))<=((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))))) DESC  NULLS LAST;
SELECT MIN(vt0.c0) FROM vt0 WHERE (((vt0.c1) BETWEEN (((vt0.c1) IS FALSE)) AND (((vt0.c1)=(vt0.c0))))) ORDER BY ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))<=((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))))) DESC  NULLS LAST;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN ((vt0.c1)IS(vt0.c1)) THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN vt0.c0 COLLATE NOCASE ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND ((+ (vt0.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN ((vt0.c1)IS(vt0.c1)) THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN vt0.c0 COLLATE NOCASE ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) ORDER BY (((NULL))<=(((vt0.c0 IN ())))) DESC LIMIT 1;
SELECT MIN(vt0.c1) FROM vt1, vt0 WHERE (UNLIKELY('')) ORDER BY ((CAST(vt0.c0 AS TEXT))=((((vt0.c1))>((vt1.c0)))))  NULLS FIRST, (((vt1.c0, vt0.c1)) BETWEEN ((vt0.c1 COLLATE RTRIM, TRIM(vt0.c0, vt0.c0))) AND ((vt1.c0 COLLATE NOCASE, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 NOT INDEXED WHERE (UNLIKELY('')) ORDER BY x'43b5' DESC;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((((CASE NULL  WHEN vt0.c1 THEN vt0.c0 END)OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c0)||(vt0.c0)))))OR(CAST(vt0.c1 AS REAL)))) ORDER BY IFNULL(((vt0.c1) IS TRUE), (((x'6186f9'))<=((vt0.c1)))) DESC, (((vt0.c1 IN ()))>=(((vt0.c0) IS TRUE)))  NULLS FIRST, CASE (((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1)) AND ((0.2685946496160809, vt0.c0, vt0.c1, vt0.c0, vt0.c1)))  WHEN 0xffffffff9b23cbc5 THEN CAST(vt0.c1 AS BLOB) WHEN (NOT (vt0.c1)) THEN x'' ELSE ABS(vt0.c0) END DESC  NULLS LAST, ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c1)) IS TRUE) ASC;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((((((CASE NULL  WHEN vt0.c1 THEN vt0.c0 END)OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c0)||(vt0.c0)))))OR(CAST(vt0.c1 AS REAL))))AND(((((((vt0.c0) NOTNULL))AND(((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))))AND(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))))) ORDER BY vt0.c1 ASC  NULLS LAST, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) ISNULL) DESC  NULLS FIRST LIMIT 0;
SELECT MAX(vt1.c0) FROM vt1 WHERE (((vt1.c0 IN ()) IN (2109847487))) ORDER BY vt1.c0  NULLS LAST, json_quote(CAST(vt1.c0 AS NUMERIC)), ((((((((CAST(vt1.c0 AS TEXT))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)%(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(CAST(vt1.c0 AS REAL))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0 IN ()) IN (2109847487)))AND((NOT (0.3382094776155816))))) ORDER BY vt1.c0  NULLS LAST, json_quote(CAST(vt1.c0 AS NUMERIC)), ((((((((CAST(vt1.c0 AS TEXT))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)%(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(CAST(vt1.c0 AS REAL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))<(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN ' 뜴1Uj盦g' END)) ASC;
SELECT DISTINCT * FROM vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY (+ (CASE NULL  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((- (vt1.c0)) IN (((((((vt1.c0)OR('2058009091')))AND(vt0.c0)))AND(x'a349'))))) ORDER BY (+ (CASE NULL  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC LIMIT 0X1;
SELECT ALL * FROM vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))<(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN ' 뜴1Uj盦g' END)) ASC;
SELECT DISTINCT * FROM vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY (+ (CASE NULL  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((- (vt1.c0)) IN (((((((vt1.c0)OR('2058009091')))AND(vt0.c0)))AND(x'a349'))))) ORDER BY (+ (CASE NULL  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC LIMIT 0X1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0)))LIKE(TRIM(DISTINCT vt1.c0)))) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'86' END)) DESC, (((vt1.c0)AND(vt1.c0)) IN (vt1.c0, ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))  NULLS FIRST, (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ()) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((((vt1.c0)=(vt1.c0)))LIKE(TRIM(DISTINCT vt1.c0))))AND((((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, 0.24038807583886057)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))), (NOT (vt1.c0)), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((vt1.c0 COLLATE RTRIM, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.06890934839515817)), vt1.c0, vt1.c0)))))) ORDER BY ((((vt1.c0)>=(vt1.c0)))IS NOT(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST, ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))IS(((vt1.c0)<>(vt1.c0)))) LIMIT 0x0;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0)))LIKE(TRIM(DISTINCT vt1.c0)))) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'86' END)) DESC, (((vt1.c0)AND(vt1.c0)) IN (vt1.c0, ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))  NULLS FIRST, (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0)<('1043883576')) COLLATE BINARY);
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)<('1043883576')) COLLATE BINARY)AND(((((vt1.c0)/(vt1.c0))) NOTNULL))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0)<('1043883576')) COLLATE BINARY);
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)<('1043883576')) COLLATE BINARY)AND(((((vt1.c0)/(vt1.c0))) NOTNULL))));
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE ((((vt0.c0))>=((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))) ORDER BY (- (CAST(vt0.c1 AS BLOB)));
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE ((((((vt0.c0))=((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))))AND((- (CASE '>	'  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) ORDER BY ((((vt1.c0)<=(vt0.c1)))+(((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) LIMIT 0X1 INTERSECT SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE (x'' COLLATE RTRIM) ORDER BY ((((vt1.c0)<=(vt0.c1)))+(((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) LIMIT 1;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((QUOTE(vt0.c1))IS NOT((vt0.c1 IN ()))));
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((((QUOTE(vt0.c1))IS NOT((vt0.c1 IN ()))))AND((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))>(vt0.c0))))) LIMIT 3 INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) LIMIT 0X3;
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'ea' THEN vt1.c0 END)) AND ((vt1.c0))));
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'ea' THEN vt1.c0 END)) AND ((vt1.c0))))AND((((((vt1.c0) ISNULL)))<=(((((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, 0X5433d8b8)) AND ((vt1.c0, vt1.c0))))))))) INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))LIKE(CASE vt1.c0  WHEN 0X19e85a5c THEN vt1.c0 ELSE vt1.c0 END)));
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'ea' THEN vt1.c0 END)) AND ((vt1.c0))));
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'ea' THEN vt1.c0 END)) AND ((vt1.c0))))AND((((((vt1.c0) ISNULL)))<=(((((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, 0X5433d8b8)) AND ((vt1.c0, vt1.c0))))))))) INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))LIKE(CASE vt1.c0  WHEN 0X19e85a5c THEN vt1.c0 ELSE vt1.c0 END)));
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0)))||(vt1.c0))) ORDER BY TOTAL_CHANGES() ASC  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))||(vt1.c0)))AND((((((vt1.c0) IS TRUE), ((vt1.c0)<>(vt1.c0))))<=(((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0, vt1.c0))), ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))))) ORDER BY TOTAL_CHANGES() ASC  NULLS LAST LIMIT 0X0;
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0)))||(vt1.c0))) ORDER BY TOTAL_CHANGES() ASC  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))||(vt1.c0)))AND((((((vt1.c0) IS TRUE), ((vt1.c0)<>(vt1.c0))))<=(((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0, vt1.c0))), ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))))) ORDER BY TOTAL_CHANGES() ASC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE ('-4860928');
SELECT ALL * FROM vt0 WHERE ((('-4860928')AND((+ (vt0.c1)) COLLATE NOCASE))) LIMIT 3;
SELECT ALL * FROM vt0 WHERE ('-4860928');
SELECT ALL * FROM vt0 WHERE ((('-4860928')AND((+ (vt0.c1)) COLLATE NOCASE))) LIMIT 3;
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE ((- (vt0.c1 COLLATE BINARY))) ORDER BY LIKELIHOOD(vt0.c1 COLLATE NOCASE, CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'c3' ELSE vt0.c0 END COLLATE NOCASE  NULLS FIRST, ((((vt0.c1) IS TRUE))=(CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST;
SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE ((((- (vt0.c1 COLLATE BINARY)))AND(((((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'776833')))-(CAST(vt1.c0 AS INTEGER)))))) ORDER BY (((vt0.c0))>=((((((((NULL)AND(vt1.c0)))AND(vt0.c1)))AND(vt1.c0))))) ASC, ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))|(CAST(vt0.c1 AS INTEGER))) INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (COALESCE(((vt0.c1)<<(vt0.c1)), CAST(vt0.c1 AS INTEGER))) ORDER BY (((vt0.c0))>=((((((((NULL)AND(vt1.c0)))AND(vt0.c1)))AND(vt1.c0))))) ASC, ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))|(CAST(vt0.c1 AS INTEGER)));
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0)!=(vt1.c0))) ISNULL));
SELECT MAX(vt1.c0) FROM vt1 WHERE (((((((vt1.c0)<(vt1.c0))) ISNULL))AND((((((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))))<=(((vt1.c0)<<(vt1.c0)))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_array(vt0.c1, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))), (((vt0.c1, vt0.c1, vt0.c0))==((NULL, vt0.c0, vt0.c0))), (NOT (vt0.c0)))) ORDER BY json_extract((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c0, vt0.c0, vt0.c0))), CAST(vt0.c0 AS TEXT)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (json_array(vt0.c1, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))), (((vt0.c1, vt0.c1, vt0.c0))=((NULL, vt0.c0, vt0.c0))), (NOT (vt0.c0)))) ORDER BY json_extract((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c0, vt0.c0, vt0.c0))), CAST(vt0.c0 AS TEXT)) DESC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((vt0.c1, vt0.c1)) NOT BETWEEN ((((573310531) BETWEEN (vt0.c0) AND (vt0.c0)), (vt1.c0 IN (0.9952413993629456)))) AND ((0.24996785710070357, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END))) WHERE (highlight(0.782920398801565, MAX(NULL, vt1.c0, vt1.c0, vt0.c1), vt0.c1, vt1.c0));
SELECT DISTINCT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((vt0.c1, vt0.c1)) NOT BETWEEN ((((0X222c0643) BETWEEN (vt0.c0) AND (vt0.c0)), (vt1.c0 IN (0.9952413993629456)))) AND ((0.24996785710070357, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END))) WHERE (((highlight(0.782920398801565, MAX(NULL, vt1.c0, vt1.c0, vt0.c1), vt0.c1, vt1.c0))AND((vt0.c1 IN ()) COLLATE BINARY))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((vt0.c1, vt0.c1)) NOT BETWEEN ((((573310531) BETWEEN (vt0.c0) AND (vt0.c0)), (vt1.c0 IN (0.9952413993629456)))) AND ((0.24996785710070357, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END))) WHERE (((('-1624196834', vt0.c0, vt0.c1, vt1.c0)) BETWEEN ((CAST(vt0.c1 AS REAL), (vt0.c1 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, LIKELY(vt1.c0))) AND ((CAST(vt0.c1 AS REAL), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN 'ZU' THEN '4F' WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, (- (vt0.c1)), ((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))))) LIMIT 0;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON '6p,' WHERE (((NULL) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (UPPER(vt1.c0)))) ORDER BY ((((((vt0.c1)IS(vt0.c1)))AND(vt1.c0)))OR(1031127186))  NULLS LAST;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON '6p,' WHERE (((NULL) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (UPPER(vt1.c0)))) ORDER BY ((((((vt0.c1)IS(vt0.c1)))AND(vt1.c0)))OR(0x3d75c092))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON '6p,' WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt0.c1 END) IS FALSE)) ORDER BY ((((((vt0.c1)IS(vt0.c1)))AND(vt1.c0)))OR(0x3d75c092))  NULLS LAST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON '6p,' WHERE (((NULL) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (UPPER(vt1.c0)))) ORDER BY ((((((vt0.c1)IS(vt0.c1)))AND(vt1.c0)))OR(1031127186))  NULLS LAST;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON '6p,' WHERE (((NULL) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (UPPER(vt1.c0)))) ORDER BY ((((((vt0.c1)IS(vt0.c1)))AND(vt1.c0)))OR(0x3d75c092))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON '6p,' WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt0.c1 END) IS FALSE)) ORDER BY ((((((vt0.c1)IS(vt0.c1)))AND(vt1.c0)))OR(0x3d75c092))  NULLS LAST;
SELECT MAX(vt0.c0) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c1)) NOT BETWEEN (('l>', vt0.c1)) AND ((vt0.c1, vt0.c0))) COLLATE NOCASE, (+ (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) DESC, ((((((('0.3600785158629738' IN (vt0.c1)))OR(((vt0.c0)*(vt0.c0)))))AND(vt0.c1)))AND((((vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c1)) NOT BETWEEN (('l>', vt0.c1)) AND ((vt0.c1, vt0.c0))) COLLATE NOCASE, (+ (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) DESC, ((((((('0.3600785158629738' IN (vt0.c1)))OR(((vt0.c0)*(vt0.c0)))))AND(vt0.c1)))AND((((vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0))))) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND(json_type(vt0.c0))))AND(x'971e')))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))))AND(vt0.c1)))OR(x'c1275a7c' COLLATE RTRIM))) ORDER BY (((vt0.c0, vt0.c1)) NOT BETWEEN (('l>', vt0.c1)) AND ((vt0.c1, vt0.c0))) COLLATE NOCASE, (+ (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) DESC, ((((((('0.3600785158629738' IN (vt0.c1)))OR(((vt0.c0)*(vt0.c0)))))AND(vt0.c1)))AND((((vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0))))) ASC  NULLS LAST LIMIT 0X0;
SELECT * FROM vt1, vt0 WHERE (CAST(CAST(vt0.c1 AS REAL) AS REAL));
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(CAST(vt0.c1 AS REAL) AS REAL)) ORDER BY ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST, 0.863430580413621 COLLATE NOCASE  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((((((((vt0.c0 IN (0.8795648975519511)))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))))AND(CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0.3110011320475896 THEN vt0.c0 ELSE vt0.c1 END)))OR((((vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((1.489150588E9, vt1.c0))))))AND((((vt1.c0, vt0.c1))>((vt1.c0, vt0.c1))))))AND(((vt0.c0) NOT NULL))))AND((((('+⥑剏')OR(vt0.c1)))AND(vt1.c0))))) ORDER BY ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST, 0.863430580413621 COLLATE NOCASE  NULLS FIRST LIMIT 0x0;
SELECT * FROM vt1, vt0 WHERE (CAST(CAST(vt0.c1 AS REAL) AS REAL));
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(CAST(vt0.c1 AS REAL) AS REAL)) ORDER BY ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST, 0.863430580413621 COLLATE NOCASE  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((((((((vt0.c0 IN (0.8795648975519511)))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))))AND(CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0.3110011320475896 THEN vt0.c0 ELSE vt0.c1 END)))OR((((vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((1.489150588E9, vt1.c0))))))AND((((vt1.c0, vt0.c1))>((vt1.c0, vt0.c1))))))AND(((vt0.c0) NOT NULL))))AND((((('+⥑剏')OR(vt0.c1)))AND(vt1.c0))))) ORDER BY ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST, 0.863430580413621 COLLATE NOCASE  NULLS FIRST LIMIT 0x0;
SELECT * FROM vt0 WHERE (((x'14cfc572') NOT BETWEEN ((- (vt0.c0))) AND (0.19905626026408818))) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0, vt0.c1)) THEN (((vt0.c0, vt0.c0, vt0.c0, 0Xfffffffffefe8660))>((vt0.c1, vt0.c1, vt0.c0, vt0.c1))) END DESC  NULLS FIRST, ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))-(((vt0.c0) NOT NULL)))  NULLS LAST, (((vt0.c0)>=(0.883956279415503)) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((x'14cfc572') NOT BETWEEN ((- (vt0.c0))) AND (0.19905626026408818)))AND(((CAST(vt0.c0 AS TEXT))+(vt0.c0 COLLATE BINARY))))) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0, vt0.c1)) THEN (((vt0.c0, vt0.c0, vt0.c0, -16873888))>((vt0.c1, vt0.c1, vt0.c0, vt0.c1))) END DESC  NULLS FIRST, ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))-(((vt0.c0) NOT NULL)))  NULLS LAST, (((vt0.c0)>=(0.883956279415503)) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((x'14cfc572') NOT BETWEEN ((- (vt0.c0))) AND (0.19905626026408818))) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0, vt0.c1)) THEN (((vt0.c0, vt0.c0, vt0.c0, 0Xfffffffffefe8660))>((vt0.c1, vt0.c1, vt0.c0, vt0.c1))) END DESC  NULLS FIRST, ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))-(((vt0.c0) NOT NULL)))  NULLS LAST, (((vt0.c0)>=(0.883956279415503)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC));
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC))AND(CAST(NULL COLLATE BINARY AS INTEGER)))) INTERSECT SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (DATETIME(vt1.c0, vt1.c0, vt0.c1)) AND ((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC));
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC))AND(CAST(NULL COLLATE BINARY AS INTEGER)))) INTERSECT SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (DATETIME(vt1.c0, vt1.c0, vt0.c1)) AND ((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE ((~ (((0.4534043679547741) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN (((~ (vt0.c1)))) AND (((((vt0.c1))==(('&e')))))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((~ (((0.4534043679547741) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY (((vt1.c0 IN ())) NOT NULL)  NULLS FIRST, (NOT (((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((~ (((0.4534043679547741) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN (((~ (vt0.c1)))) AND (((((vt0.c1))==(('&e')))))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((~ (((0.4534043679547741) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY (((vt1.c0 IN ())) NOT NULL)  NULLS FIRST, (NOT (((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))) DESC;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((((((vt0.c1) NOT NULL)))==((HEX(vt0.c1))))) ORDER BY '';
SELECT DISTINCT MAX(vt0.c0) FROM vt0 NOT INDEXED WHERE ((((((vt0.c1) NOT NULL)))==((HEX(vt0.c1))))) ORDER BY (+ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) AS TEXT) DESC  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((vt0.c1)OR(vt0.c0)))AND(46522376)), ((vt0.c1) IS TRUE)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS BLOB)))));
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((((((((vt0.c1)OR(vt0.c0)))AND(46522376)), ((vt0.c1) IS TRUE)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS BLOB))))) ORDER BY CASE WHEN vt0.c0 THEN (((vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0))) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) END ASC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN LOWER(vt0.c1) THEN (vt1.c0 IN (vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt1.c0) NOT NULL) WHEN LIKELY(vt0.c1) THEN vt0.c0 WHEN vt0.c0 THEN x'' END) ORDER BY CASE WHEN vt0.c0 THEN (((vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0))) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)) IN ()));
SELECT DISTINCT * FROM vt0 WHERE ((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)) IN ()))AND((((0Xffffffffa34354ed IN ()))%(((vt0.c1) IS FALSE)))))) LIMIT 0;
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)) IN ()));
SELECT DISTINCT * FROM vt0 WHERE ((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)) IN ()))AND((((0Xffffffffa34354ed IN ()))%(((vt0.c1) IS FALSE)))))) LIMIT 0;
SELECT ALL * FROM vt0 WHERE ('1031127186') ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY ASC  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))&(((vt0.c0) NOT NULL))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ('1031127186') ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY ASC  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))&(((vt0.c0) NOT NULL))) DESC  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 END)&((NOT (vt0.c1))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY ASC  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))&(((vt0.c0) NOT NULL))) DESC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM vt0 WHERE ('1031127186') ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY ASC  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))&(((vt0.c0) NOT NULL))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ('1031127186') ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY ASC  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))&(((vt0.c0) NOT NULL))) DESC  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 END)&((NOT (vt0.c1))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY ASC  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))&(((vt0.c0) NOT NULL))) DESC  NULLS LAST LIMIT 0X1;
SELECT * FROM vt0 WHERE (LIKE(((vt0.c0) BETWEEN (0.6369684515230377) AND (vt0.c1)), CAST(vt0.c0 AS INTEGER)));
SELECT * FROM vt0 WHERE (((LIKE(((vt0.c0) BETWEEN (0.6369684515230377) AND (vt0.c1)), CAST(vt0.c0 AS INTEGER)))AND(((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND ('1885379869'))) AND ((vt0.c1 IN ()))))));
SELECT * FROM vt0 WHERE (LIKE(((vt0.c0) BETWEEN (0.6369684515230377) AND (vt0.c1)), CAST(vt0.c0 AS INTEGER)));
SELECT * FROM vt0 WHERE (((LIKE(((vt0.c0) BETWEEN (0.6369684515230377) AND (vt0.c1)), CAST(vt0.c0 AS INTEGER)))AND(((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND ('1885379869'))) AND ((vt0.c1 IN ()))))));
SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE (((((vt0.c1) NOTNULL)) ISNULL));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1) NOTNULL)) ISNULL)) ORDER BY ((((vt0.c1)<=(vt0.c0)))GLOB(((vt0.c1)==(vt0.c1)))) DESC;
SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE (((((vt0.c1) NOTNULL)) ISNULL));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1) NOTNULL)) ISNULL)) ORDER BY ((((vt0.c1)<=(vt0.c0)))GLOB(((vt0.c1)==(vt0.c1)))) DESC;
SELECT * FROM vt1, vt0 WHERE (((MAX(vt0.c0, vt0.c1))%((~ (vt0.c0))))) ORDER BY ((CAST(vt0.c1 AS INTEGER))%(COALESCE(vt0.c0, vt1.c0))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((MAX(vt0.c0, vt0.c1))%((~ (vt0.c0)))))AND(PRINTF(CAST(0Xffffffffc3e9da1f AS INTEGER), (((vt1.c0, '%	Gq')) BETWEEN ((vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0))))))) ORDER BY (vt1.c0 COLLATE NOCASE IN (0.5921625525649123, (((vt0.c0))>=((vt1.c0))))) DESC, ((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC, ((((vt1.c0) NOTNULL))*('''q')) DESC, (((vt0.c1, vt0.c0, vt1.c0)) BETWEEN (((vt0.c0 IN (vt1.c0)), UNLIKELY('a['), NULL)) AND (((- (vt1.c0)), vt0.c0 COLLATE RTRIM, CAST(vt1.c0 AS BLOB))))  NULLS LAST LIMIT 0;
SELECT * FROM vt1, vt0 WHERE (((MAX(vt0.c0, vt0.c1))%((~ (vt0.c0))))) ORDER BY ((CAST(vt0.c1 AS INTEGER))%(COALESCE(vt0.c0, vt1.c0))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((MAX(vt0.c0, vt0.c1))%((~ (vt0.c0)))))AND(PRINTF(CAST(0Xffffffffc3e9da1f AS INTEGER), (((vt1.c0, '%	Gq')) BETWEEN ((vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0))))))) ORDER BY (vt1.c0 COLLATE NOCASE IN (0.5921625525649123, (((vt0.c0))>=((vt1.c0))))) DESC, ((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC, ((((vt1.c0) NOTNULL))*('''q')) DESC, (((vt0.c1, vt0.c0, vt1.c0)) BETWEEN (((vt0.c0 IN (vt1.c0)), UNLIKELY('a['), NULL)) AND (((- (vt1.c0)), vt0.c0 COLLATE RTRIM, CAST(vt1.c0 AS BLOB))))  NULLS LAST LIMIT 0;
SELECT * FROM vt1 WHERE ((((((((((('-35870832')OR(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))))OR(vt1.c0)))OR(((vt1.c0)/(vt1.c0)))))OR(TRIM(DISTINCT vt1.c0))))OR((NOT (0.12935475182346645))))) ORDER BY ((((vt1.c0) ISNULL)) IS TRUE), ((((vt1.c0)*(vt1.c0)))|(((vt1.c0) IS TRUE))) DESC;
SELECT DISTINCT * FROM vt1 WHERE ((((((((((('-35870832')OR(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))))OR(vt1.c0)))OR(((vt1.c0)/(vt1.c0)))))OR(TRIM(DISTINCT vt1.c0))))OR((NOT (0.12935475182346645))))) ORDER BY ((((vt1.c0) ISNULL)) IS TRUE), ((((vt1.c0)*(vt1.c0)))|(((vt1.c0) IS TRUE))) DESC INTERSECT SELECT DISTINCT * FROM vt1 WHERE ('') ORDER BY ((((vt1.c0) ISNULL)) IS TRUE), ((((vt1.c0)*(vt1.c0)))|(((vt1.c0) IS TRUE))) DESC;
SELECT * FROM vt1 WHERE ((((((((((('-35870832')OR(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))))OR(vt1.c0)))OR(((vt1.c0)/(vt1.c0)))))OR(TRIM(DISTINCT vt1.c0))))OR((NOT (0.12935475182346645))))) ORDER BY ((((vt1.c0) ISNULL)) IS TRUE), ((((vt1.c0)*(vt1.c0)))|(((vt1.c0) IS TRUE))) DESC;
SELECT DISTINCT * FROM vt1 WHERE ((((((((((('-35870832')OR(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))))OR(vt1.c0)))OR(((vt1.c0)/(vt1.c0)))))OR(TRIM(DISTINCT vt1.c0))))OR((NOT (0.12935475182346645))))) ORDER BY ((((vt1.c0) ISNULL)) IS TRUE), ((((vt1.c0)*(vt1.c0)))|(((vt1.c0) IS TRUE))) DESC INTERSECT SELECT DISTINCT * FROM vt1 WHERE ('') ORDER BY ((((vt1.c0) ISNULL)) IS TRUE), ((((vt1.c0)*(vt1.c0)))|(((vt1.c0) IS TRUE))) DESC;
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) ORDER BY CASE UPPER(vt0.c1)  WHEN ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) THEN CASE WHEN vt0.c1 THEN '738629008' ELSE vt0.c1 END WHEN vt0.c0 THEN (((vt1.c0)) BETWEEN ((x'')) AND ((vt0.c1))) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN TRIM(vt0.c1, vt1.c0) WHEN (vt0.c1 IN ()) THEN LIKELIHOOD(x'91', vt0.c0) END DESC  NULLS LAST, ((CAST(vt0.c0 AS REAL))>>(((vt0.c0)&(vt1.c0)))) ASC;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) ORDER BY 0.6752761910162903 DESC  NULLS LAST, ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((~ (vt1.c0)))) DESC LIMIT 0;
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) ORDER BY CASE UPPER(vt0.c1)  WHEN ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) THEN CASE WHEN vt0.c1 THEN '738629008' ELSE vt0.c1 END WHEN vt0.c0 THEN (((vt1.c0)) BETWEEN ((x'')) AND ((vt0.c1))) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN TRIM(vt0.c1, vt1.c0) WHEN (vt0.c1 IN ()) THEN LIKELIHOOD(x'91', vt0.c0) END DESC  NULLS LAST, ((CAST(vt0.c0 AS REAL))>>(((vt0.c0)&(vt1.c0)))) ASC;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (- (((vt0.c1) IS FALSE))) WHERE (((((vt0.c0)>=(vt1.c0)))<>((((vt1.c0, vt0.c0))>((vt0.c0, vt1.c0))))));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (- (((vt0.c1) IS FALSE))) WHERE (((((((vt0.c0)>=(vt1.c0)))<>((((vt1.c0, vt0.c0))>((vt0.c0, vt1.c0))))))AND(((ABS(vt1.c0)) BETWEEN ((vt0.c1 IN (vt0.c0, 0.12957760001381846, vt0.c1))) AND ((vt0.c1 IN (vt0.c0))))))) ORDER BY vt0.c1 ASC, (~ (((vt1.c0)||(vt0.c1)))) DESC INTERSECT SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (- (((vt0.c1) IS FALSE))) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) AND ((vt0.c0 IN ())))) ORDER BY vt0.c1 ASC, (~ (((vt1.c0)||(vt0.c1)))) DESC;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (- (((vt0.c1) IS FALSE))) WHERE (((((vt0.c0)>=(vt1.c0)))<>((((vt1.c0, vt0.c0))>((vt0.c0, vt1.c0))))));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (- (((vt0.c1) IS FALSE))) WHERE (((((((vt0.c0)>=(vt1.c0)))<>((((vt1.c0, vt0.c0))>((vt0.c0, vt1.c0))))))AND(((ABS(vt1.c0)) BETWEEN ((vt0.c1 IN (vt0.c0, 0.12957760001381846, vt0.c1))) AND ((vt0.c1 IN (vt0.c0))))))) ORDER BY vt0.c1 ASC, (~ (((vt1.c0)||(vt0.c1)))) DESC INTERSECT SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (- (((vt0.c1) IS FALSE))) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) AND ((vt0.c0 IN ())))) ORDER BY vt0.c1 ASC, (~ (((vt1.c0)||(vt0.c1)))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)) WHEN (('2[')>>(vt0.c0)) THEN ((vt1.c0)IS(vt0.c0)) END);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)) WHEN (('2[')>>(vt0.c0)) THEN ((vt1.c0)IS(vt0.c0)) END)AND(((CASE WHEN x'75' THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (vt1.c0) AND (NULL))))) INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)), CAST(vt1.c0 AS NUMERIC), ((((((vt0.c0)OR(vt0.c1)))OR(NULL)))AND(vt0.c1)))) AND (((vt0.c0 IN (vt1.c0)), vt0.c0 COLLATE BINARY, (vt0.c0 IN ())))));
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)) WHEN (('2[')>>(vt0.c0)) THEN ((vt1.c0)IS(vt0.c0)) END);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)) WHEN (('2[')>>(vt0.c0)) THEN ((vt1.c0)IS(vt0.c0)) END)AND(((CASE WHEN x'75' THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (vt1.c0) AND (NULL))))) INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)), CAST(vt1.c0 AS NUMERIC), ((((((vt0.c0)OR(vt0.c1)))OR(NULL)))AND(vt0.c1)))) AND (((vt0.c0 IN (vt1.c0)), vt0.c0 COLLATE BINARY, (vt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (CAST(1696562798 AS BLOB)))) ORDER BY ((-517599695)<(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))  NULLS LAST, CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB) ASC;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((((- (CAST(1696562798 AS BLOB))))AND((((vt1.c0) NOTNULL) IN (((vt1.c0)OR(NULL))))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))IS(vt0.c1 COLLATE BINARY)), vt1.c0 ASC  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)IS NOT(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN CASE '*dY T(nXE'  WHEN vt1.c0 THEN vt0.c0 END WHEN (('-947017812') BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN TYPEOF(vt1.c0) THEN vt0.c1 COLLATE RTRIM WHEN ((vt1.c0)>=(vt0.c1)) THEN UNLIKELY(vt0.c0) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN (vt0.c1 IN ()) ELSE ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND('')))OR(vt0.c0)))OR(vt0.c1)) END) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))IS(vt0.c1 COLLATE BINARY)), vt1.c0 ASC  NULLS LAST LIMIT 1;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0 COLLATE BINARY)!=(vt0.c0 COLLATE RTRIM))) ORDER BY ((IFNULL(vt0.c1, 0.9858775724950023))>>(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL END));
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0 COLLATE BINARY)>(vt0.c0 COLLATE RTRIM)))AND(vt0.c1))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS TEXT) DESC LIMIT 0;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0 COLLATE BINARY)!=(vt0.c0 COLLATE RTRIM))) ORDER BY ((IFNULL(vt0.c1, 0.9858775724950023))>>(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL END));
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0 COLLATE BINARY)>(vt0.c0 COLLATE RTRIM)))AND(vt0.c1))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS TEXT) DESC LIMIT 0;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.c0)<>(vt0.c1)) IN (0.6715342330676093))) ORDER BY NULL, (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt1.c0 COLLATE RTRIM, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt1.c0)LIKE(vt0.c1)))) AND (((vt0.c1 IN ()), (vt0.c1 IN ()), vt1.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.c0)<>(vt0.c1)) IN (0.6715342330676093))) ORDER BY ABS(DISTINCT ((vt0.c0)>>(0.4754831440943993))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((((((((NULL)&(vt0.c0)))OR((((vt0.c1))>((vt0.c1))))))OR(vt0.c1)))OR(((vt1.c0) NOT NULL)))) ORDER BY ABS(DISTINCT ((vt0.c0)>>(0.4754831440943993))) ASC  NULLS LAST;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.c0)<>(vt0.c1)) IN (0.6715342330676093))) ORDER BY NULL, (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt1.c0 COLLATE RTRIM, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt1.c0)LIKE(vt0.c1)))) AND (((vt0.c1 IN ()), (vt0.c1 IN ()), vt1.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.c0)<>(vt0.c1)) IN (0.6715342330676093))) ORDER BY ABS(DISTINCT ((vt0.c0)>>(0.4754831440943993))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((((((((NULL)&(vt0.c0)))OR((((vt0.c1))>((vt0.c1))))))OR(vt0.c1)))OR(((vt1.c0) NOT NULL)))) ORDER BY ABS(DISTINCT ((vt0.c0)>>(0.4754831440943993))) ASC  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt0, vt1 WHERE ('&#Zd+
X') ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN 0.6090905797431583 THEN vt0.c0 WHEN vt0.c1 THEN -1789332337 END) BETWEEN (((vt0.c0)<=(vt0.c1))) AND ((((vt1.c0, vt0.c0))>=((vt0.c0, vt0.c1))))), vt0.c1  NULLS FIRST, ((NOT (vt0.c1)) IN (CAST(NULL AS INTEGER), (vt0.c0 IN (vt0.c0, vt1.c0))));
SELECT DISTINCT MIN(vt0.c0) FROM vt0, vt1 WHERE ((('&#Zd+
X')AND(RTRIM(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 END  WHEN (~ (vt0.c0)) THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 END THEN (('-1943074248')<=(vt0.c1)) ELSE ((vt0.c1) BETWEEN (0Xfffffffffcbec66c) AND (vt0.c0)) END ASC LIMIT 4;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (- (((((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))OR('E eOh?A^')))OR(vt1.c0)))OR(vt1.c0)))) WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (- (((((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))OR('E eOh?A^')))OR(vt1.c0)))OR(vt1.c0)))) WHERE (vt1.c0) LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c1 AS REAL))AND(CAST(vt0.c0 AS TEXT))))AND((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c1))))))OR(UNLIKELY(DISTINCT vt0.c1))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((CAST(vt0.c1 AS REAL))AND(CAST(vt0.c0 AS TEXT))))AND((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, vt0.c1))))))OR(UNLIKELY(DISTINCT vt0.c1))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))AND(CAST(((vt0.c1)AND(vt0.c0)) AS TEXT)))) LIMIT 0x0;
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT DISTINCT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1))))  NULLS LAST, ((((vt0.c1) IS FALSE))>>(((vt1.c0) NOT NULL))) ASC LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c1) IS FALSE))LIKE(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END))) ORDER BY (NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1))))  NULLS LAST, ((((vt0.c1) IS FALSE))>>(((vt1.c0) NOT NULL))) ASC LIMIT 0X3;
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT DISTINCT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1))))  NULLS LAST, ((((vt0.c1) IS FALSE))>>(((vt1.c0) NOT NULL))) ASC LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c1) IS FALSE))LIKE(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END))) ORDER BY (NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1))))  NULLS LAST, ((((vt0.c1) IS FALSE))>>(((vt1.c0) NOT NULL))) ASC LIMIT 0X3;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (+ (vt0.c1)) WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 END) NOTNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (+ (vt0.c1)) WHERE (((((CASE WHEN vt0.c0 THEN vt1.c0 END) NOTNULL))AND(((- (vt1.c0)) IN ())))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))) ISNULL), ((((- ('/'))))>((CAST(vt1.c0 AS BLOB))))  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (+ (vt0.c1)) WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 END) NOTNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (+ (vt0.c1)) WHERE (((((CASE WHEN vt0.c0 THEN vt1.c0 END) NOTNULL))AND(((- (vt1.c0)) IN ())))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))) ISNULL), ((((- ('/'))))>((CAST(vt1.c0 AS BLOB))))  NULLS LAST;
SELECT ALL MIN(vt1.c0) FROM vt0, vt1 NOT INDEXED WHERE ((((((((((((vt0.c0 IN (vt1.c0)))OR(vt0.c0)))AND(((525888705)<=(vt1.c0)))))OR((((0.8060425909944664, vt1.c0, vt1.c0))<((vt0.c0, 0.46547977391282, vt1.c0))))))AND(CAST(vt1.c0 AS NUMERIC))))AND((vt1.c0 IN (vt1.c0))))) ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0))))  NULLS LAST;
SELECT ALL MIN(vt1.c0) FROM vt0, vt1 WHERE ((((((((((((((vt0.c0 IN (vt1.c0)))OR(vt0.c0)))AND(((525888705)<=(vt1.c0)))))OR((((0.8060425909944664, vt1.c0, vt1.c0))<((vt0.c0, 0.46547977391282, vt1.c0))))))AND(CAST(vt1.c0 AS NUMERIC))))AND((vt1.c0 IN (vt1.c0)))))AND((vt0.c1 COLLATE RTRIM IN ())))) ORDER BY (- (CAST(NULL AS TEXT)))  NULLS LAST LIMIT 0 INTERSECT SELECT MIN(vt1.c0) FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c1)&(vt0.c1)) THEN ((vt0.c0) IS TRUE) WHEN IFNULL(vt0.c1, vt0.c0) THEN ((vt0.c0)<=(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN x'7557b9' END THEN (((vt1.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c0, vt1.c0, vt0.c1)) AND ((vt0.c1, vt1.c0, vt1.c0, vt1.c0, vt0.c0))) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0.13147408819067263 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 ELSE '-1251982591' END ELSE ((vt0.c1)|(vt0.c0)) END) ORDER BY (- (CAST(NULL AS TEXT)))  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY ((vt1.c0)-(vt1.c0)) COLLATE RTRIM, NULL DESC;
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY ((vt1.c0)-(vt1.c0)) COLLATE RTRIM, NULL DESC LIMIT 1;
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY ((vt1.c0)-(vt1.c0)) COLLATE RTRIM, NULL DESC;
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY ((vt1.c0)-(vt1.c0)) COLLATE RTRIM, NULL DESC LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt1.c0 IN (vt0.c0)))AND(((vt1.c0) NOT NULL))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) ORDER BY ((((vt1.c0)IS(vt1.c0)))=(vt0.c0))  NULLS LAST, -5.87666667E8, (((((((((((- (vt0.c1)))OR(0.6715342330676093)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0)=(vt0.c1)))))AND((('0.08050456952225327')>(vt1.c0)))))OR(((('1e500', vt0.c1, vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, 0x773e5d34, vt0.c0, vt0.c1)))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((((((vt1.c0 IN (vt0.c0)))AND(((vt1.c0) NOT NULL))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(((CASE vt0.c1  WHEN '0.24038807583886057' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (vt0.c1) AND (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))))) ORDER BY ((((vt1.c0)IS(vt1.c0)))=(vt0.c0))  NULLS LAST, -5.87666667E8, (((((((((((- (vt0.c1)))OR(0.6715342330676093)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0)=(vt0.c1)))))AND((('0.08050456952225327')>(vt1.c0)))))OR(((('1e500', vt0.c1, vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, 2000575796, vt0.c0, vt0.c1)))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))|(vt0.c0))) ORDER BY ((((vt1.c0)IS(vt1.c0)))=(vt0.c0))  NULLS LAST, -5.87666667E8, (((((((((((- (vt0.c1)))OR(0.6715342330676093)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0)==(vt0.c1)))))AND((('0.08050456952225327')>(vt1.c0)))))OR(((('1e500', vt0.c1, vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, 0x773e5d34, vt0.c0, vt0.c1)))))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt1.c0 IN (vt0.c0)))AND(((vt1.c0) NOT NULL))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) ORDER BY ((((vt1.c0)IS(vt1.c0)))=(vt0.c0))  NULLS LAST, -5.87666667E8, (((((((((((- (vt0.c1)))OR(0.6715342330676093)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0)=(vt0.c1)))))AND((('0.08050456952225327')>(vt1.c0)))))OR(((('1e500', vt0.c1, vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, 0x773e5d34, vt0.c0, vt0.c1)))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((((((vt1.c0 IN (vt0.c0)))AND(((vt1.c0) NOT NULL))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(((CASE vt0.c1  WHEN '0.24038807583886057' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (vt0.c1) AND (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))))) ORDER BY ((((vt1.c0)IS(vt1.c0)))=(vt0.c0))  NULLS LAST, -5.87666667E8, (((((((((((- (vt0.c1)))OR(0.6715342330676093)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0)=(vt0.c1)))))AND((('0.08050456952225327')>(vt1.c0)))))OR(((('1e500', vt0.c1, vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, 2000575796, vt0.c0, vt0.c1)))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))|(vt0.c0))) ORDER BY ((((vt1.c0)IS(vt1.c0)))=(vt0.c0))  NULLS LAST, -5.87666667E8, (((((((((((- (vt0.c1)))OR(0.6715342330676093)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0)==(vt0.c1)))))AND((('0.08050456952225327')>(vt1.c0)))))OR(((('1e500', vt0.c1, vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, 0x773e5d34, vt0.c0, vt0.c1)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END, (~ (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END, (~ (vt0.c0)))))AND((((vt0.c0, vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((vt0.c1 IN ()), (vt0.c0 IN (vt0.c1)), ((vt0.c1) ISNULL), ((vt0.c1) IS TRUE))) AND ((CAST(vt0.c1 AS BLOB), CAST(vt0.c0 AS TEXT), ((vt0.c0)=(vt0.c1)), vt0.c0 COLLATE RTRIM)))))) LIMIT 1 INTERSECT SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((+ (vt0.c1)) AS BLOB)) LIMIT 0X1;
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0) NOTNULL))AND(vt0.c0 COLLATE NOCASE)))OR(((vt1.c0) IS TRUE))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt0.c0) NOTNULL))AND(vt0.c0 COLLATE NOCASE)))OR(((vt1.c0) IS TRUE)))) LIMIT 0X1;
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0) NOTNULL))AND(vt0.c0 COLLATE NOCASE)))OR(((vt1.c0) IS TRUE))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt0.c0) NOTNULL))AND(vt0.c0 COLLATE NOCASE)))OR(((vt1.c0) IS TRUE)))) LIMIT 0X1;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY TRIM(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))), (((vt0.c1, vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) AND ((TOTAL_CHANGES(), (~ (vt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY (((((vt0.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0)))) NOT BETWEEN (((vt0.c1)-(vt0.c0))) AND (vt0.c1)) INTERSECT SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1)<=(vt0.c0)) ELSE ((vt0.c0)AND(vt0.c1)) END) ORDER BY (((((vt0.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0)))) NOT BETWEEN (((vt0.c1)-(vt0.c0))) AND (vt0.c1));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY TRIM(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))), (((vt0.c1, vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) AND ((TOTAL_CHANGES(), (~ (vt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY (((((vt0.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0)))) NOT BETWEEN (((vt0.c1)-(vt0.c0))) AND (vt0.c1)) INTERSECT SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1)<=(vt0.c0)) ELSE ((vt0.c0)AND(vt0.c1)) END) ORDER BY (((((vt0.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0)))) NOT BETWEEN (((vt0.c1)-(vt0.c0))) AND (vt0.c1));
SELECT ALL * FROM vt0 WHERE ((- (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE ((((- (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(CAST((((vt0.c0, vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))) AS INTEGER)))) ORDER BY (NOT (0.7910493810503637)) DESC;
SELECT ALL * FROM vt0 WHERE ((- (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE ((((- (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(CAST((((vt0.c0, vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))) AS INTEGER)))) ORDER BY (NOT (0.7910493810503637)) DESC;
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (((((((((((x'')AND((vt0.c0 IN (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE '-1035025036' END)))OR(vt0.c0 COLLATE RTRIM)))AND((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c1))))))AND((vt0.c0 IN ()))));
SELECT MIN(vt0.c1) FROM vt1, vt0 WHERE (((((((((((((x'')AND((vt0.c0 IN (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE '-1035025036' END)))OR(vt0.c0 COLLATE RTRIM)))AND((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c1))))))AND((vt0.c0 IN ()))))AND((((NOT (vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c0))) AND (((vt1.c0)|(vt1.c0))))))) ORDER BY ((vt0.c1 COLLATE RTRIM)IS NOT((((NULL, -5.29809639E8))<((vt0.c0, vt0.c0)))))  NULLS LAST, (NOT (((0Xffffffffe39a8513) NOT NULL)))  NULLS LAST INTERSECT SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (CASE WHEN (((vt0.c1))>((vt1.c0))) THEN (x'c8c8' IN (vt1.c0, vt0.c0)) ELSE ((vt0.c1)||(NULL)) END) ORDER BY ((vt0.c1 COLLATE RTRIM)IS NOT((((NULL, -5.29809639E8))<((vt0.c0, vt0.c0)))))  NULLS LAST, (NOT (((0xffffffffe39a8513) NOT NULL)))  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((-2.4960678E7))));
SELECT DISTINCT MAX(vt0.c0) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((-2.4960678E7)))) ORDER BY CAST(((vt1.c0) IS TRUE) AS TEXT)  NULLS FIRST, (((vt0.c1)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((((vt0.c0)>(vt0.c1)))));
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))OR('1031127186'))) NOT BETWEEN (((vt0.c1)<=(vt0.c1))) AND (((((-1650035654)AND(vt0.c0)))OR(vt1.c0))))) ORDER BY LIKELY((vt0.c1 IN ())) DESC, vt0.c0;
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))OR('1031127186'))) NOT BETWEEN (((vt0.c1)<=(vt0.c1))) AND (((((0xffffffff9da6743a)AND(vt0.c0)))OR(vt1.c0))))) ORDER BY LIKELY((vt0.c1 IN ())) DESC, vt0.c0 LIMIT 2 INTERSECT SELECT * FROM vt1, vt0 WHERE ((((('Dkr.PoR7D')|(vt0.c0))) IS TRUE)) ORDER BY LIKELY((vt0.c1 IN ())) DESC, vt0.c0 LIMIT 0x2;
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))OR('1031127186'))) NOT BETWEEN (((vt0.c1)<=(vt0.c1))) AND (((((-1650035654)AND(vt0.c0)))OR(vt1.c0))))) ORDER BY LIKELY((vt0.c1 IN ())) DESC, vt0.c0;
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))OR('1031127186'))) NOT BETWEEN (((vt0.c1)<=(vt0.c1))) AND (((((0xffffffff9da6743a)AND(vt0.c0)))OR(vt1.c0))))) ORDER BY LIKELY((vt0.c1 IN ())) DESC, vt0.c0 LIMIT 2 INTERSECT SELECT * FROM vt1, vt0 WHERE ((((('Dkr.PoR7D')|(vt0.c0))) IS TRUE)) ORDER BY LIKELY((vt0.c1 IN ())) DESC, vt0.c0 LIMIT 0x2;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) ORDER BY CASE WHEN (((vt1.c0, vt0.c0, vt1.c0))<>((vt1.c0, x'f4', vt1.c0))) THEN vt0.c0 WHEN NULL THEN ((vt0.c1) NOTNULL) WHEN (vt0.c1 IN (vt1.c0)) THEN (((vt0.c0, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0, vt1.c0))) WHEN (- (vt1.c0)) THEN vt0.c1 ELSE ((vt0.c1) IS FALSE) END DESC  NULLS LAST, CAST(vt0.c1 AS NUMERIC) DESC, CASE vt0.c1  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) THEN (((vt1.c0, vt0.c0, vt0.c0, 0.5482912806139655)) BETWEEN ((vt0.c0, x'', vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt0.c1))) WHEN ((NULL)||(vt0.c1)) THEN (vt1.c0 IN ()) ELSE CAST(vt0.c0 AS TEXT) END DESC  NULLS FIRST LIMIT 0X2;
SELECT MIN(vt0.c0) FROM vt0, vt1 WHERE (((((vt1.c0))<((vt1.c0))) IN ((((vt1.c0))>((vt0.c0))))));
SELECT DISTINCT MIN(vt0.c0) FROM vt0, vt1 WHERE (((((vt1.c0))<((vt1.c0))) IN ((((vt1.c0))>((vt0.c0)))))) ORDER BY HEX(DISTINCT (((vt0.c1))>=((vt0.c1))))  NULLS LAST;
SELECT MAX(vt1.c0) FROM vt1 CROSS JOIN vt0 ON rtreenode(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt0.c1 AS NUMERIC)) WHERE (((CAST(vt0.c1 AS BLOB))GLOB((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY (((+ (vt0.c1)))|(((vt0.c1)>=(vt0.c1)))), 1.258981454E9 ASC  NULLS FIRST, CASE WHEN ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)) WHEN (vt0.c1 IN (vt0.c0)) THEN (vt0.c1 IN ()) WHEN ((vt1.c0)+(vt0.c0)) THEN ((((((((vt1.c0)OR(vt0.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)) END ASC;
SELECT ALL MAX(vt1.c0) FROM vt1 CROSS JOIN vt0 ON rtreenode(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt0.c1 AS NUMERIC)) WHERE (((((CAST(vt0.c1 AS BLOB))GLOB((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND(CAST((- (vt1.c0)) AS INTEGER)))) ORDER BY CASE (NOT (vt1.c0))  WHEN (+ (0.0019792445062253305)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN '+Z*ivPX''' THEN vt1.c0 WHEN '-1310833953' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END END, ((((vt0.c1) ISNULL))>(((vt0.c1)GLOB(vt0.c1)))) LIMIT 2;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN '-1981557354' THEN ((vt0.c0) ISNULL) END ASC  NULLS FIRST, ((((((((((vt0.c1)AND('1554083572')))OR(vt0.c1)))OR(vt0.c1)))OR(0.07932097799528448)))OR(TYPEOF(DISTINCT vt0.c1))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN '-1981557354' THEN ((vt0.c0) ISNULL) END ASC  NULLS FIRST, ((((((((((vt0.c1)AND('1554083572')))OR(vt0.c1)))OR(vt0.c1)))OR(0.07932097799528448)))OR(TYPEOF(DISTINCT vt0.c1))) DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM vt1, vt0 WHERE (CASE ((vt1.c0)>(vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS TRUE) WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0)-(vt0.c0)) END) ORDER BY vt1.c0 ASC  NULLS LAST, (((('-1055391114')&(x''))) BETWEEN (((((((vt0.c1)AND(vt0.c1)))OR('-2022459642')))AND(vt1.c0))) AND ((~ (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((CASE ((vt1.c0)>(vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS TRUE) WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0)-(vt0.c0)) END)AND(CAST((((((((('-2053371204')AND('h')))AND('-1537193139')))AND(vt0.c1)))OR(vt0.c0)) AS TEXT)))) ORDER BY vt1.c0 ASC  NULLS LAST, (((('-1055391114')&(x''))) BETWEEN (((((((vt0.c1)AND(vt0.c1)))OR('-2022459642')))AND(vt1.c0))) AND ((~ (vt1.c0))))  NULLS FIRST INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0)<=(vt0.c0)) COLLATE RTRIM) ORDER BY vt1.c0 ASC  NULLS LAST, (((('-1055391114')&(x''))) BETWEEN (((((((vt0.c1)AND(vt0.c1)))OR('-2022459642')))AND(vt1.c0))) AND ((~ (vt1.c0))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (CASE ((vt1.c0)>(vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS TRUE) WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0)-(vt0.c0)) END) ORDER BY vt1.c0 ASC  NULLS LAST, (((('-1055391114')&(x''))) BETWEEN (((((((vt0.c1)AND(vt0.c1)))OR('-2022459642')))AND(vt1.c0))) AND ((~ (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((CASE ((vt1.c0)>(vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS TRUE) WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0)-(vt0.c0)) END)AND(CAST((((((((('-2053371204')AND('h')))AND('-1537193139')))AND(vt0.c1)))OR(vt0.c0)) AS TEXT)))) ORDER BY vt1.c0 ASC  NULLS LAST, (((('-1055391114')&(x''))) BETWEEN (((((((vt0.c1)AND(vt0.c1)))OR('-2022459642')))AND(vt1.c0))) AND ((~ (vt1.c0))))  NULLS FIRST INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0)<=(vt0.c0)) COLLATE RTRIM) ORDER BY vt1.c0 ASC  NULLS LAST, (((('-1055391114')&(x''))) BETWEEN (((((((vt0.c1)AND(vt0.c1)))OR('-2022459642')))AND(vt1.c0))) AND ((~ (vt1.c0))))  NULLS FIRST;
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) WHEN ((((vt0.c0)OR(1517556072)))AND(vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c1)>(vt1.c0)) ELSE (+ (vt1.c0)) END) ORDER BY CASE WHEN vt0.c1 COLLATE NOCASE THEN NULL WHEN ((vt1.c0)>=(x'bc6e61')) THEN (vt0.c1 IN (vt0.c1)) WHEN (NOT (vt0.c0)) THEN UNLIKELY(vt0.c0) ELSE ((vt1.c0) NOTNULL) END;
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) WHEN ((((vt0.c0)OR(1517556072)))AND(vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c1)>(vt1.c0)) ELSE (+ (vt1.c0)) END) ORDER BY (((vt0.c0, vt1.c0, vt0.c0))>((vt0.c1, vt1.c0, vt0.c1))) COLLATE RTRIM ASC  NULLS LAST, (((vt0.c0 IN (vt0.c1)))>=(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))  NULLS LAST, vt1.c0 DESC LIMIT 0x0 INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE NOCASE) ORDER BY (((vt0.c0, vt1.c0, vt0.c0))>((vt0.c1, vt1.c0, vt0.c1))) COLLATE RTRIM ASC  NULLS LAST, (((vt0.c0 IN (vt0.c1)))>=(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))  NULLS LAST, vt1.c0 DESC LIMIT 0X0;
SELECT ALL * FROM vt0, vt1 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((+ ((~ (vt0.c1))))) LIMIT 0x0;
SELECT ALL * FROM vt0, vt1 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((+ ((~ (vt0.c1))))) LIMIT 0x0;
SELECT MAX(vt0.c0) FROM vt0 WHERE (vt0.c1);
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (vt0.c1) ORDER BY NULL DESC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER)) ORDER BY ((COALESCE(DISTINCT vt0.c1, vt0.c1, vt0.c0))<(TRIM(vt0.c0, NULL)));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER)) ORDER BY ((+ (vt0.c0)) IN ((((((('-1035025036')OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))) ASC  NULLS FIRST LIMIT 0X3;
SELECT MIN(vt0.c1) FROM vt0 WHERE (((0.24706613961538493) ISNULL));
SELECT MIN(vt0.c1) FROM vt0 WHERE (((0.24706613961538493) ISNULL)) LIMIT 0;
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS BLOB)) ISNULL));
SELECT DISTINCT MIN(vt0.c0) FROM vt1, vt0 WHERE (((((CAST(vt0.c1 AS BLOB)) ISNULL))AND((((('?')>>(vt0.c1))) BETWEEN (TRIM(vt1.c0, vt1.c0)) AND (LIKELY(vt1.c0)))))) LIMIT 0;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS FALSE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) ASC, (((vt0.c0)) NOT BETWEEN ((CASE '1043883576'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 'RW\1si*4' THEN vt0.c0 ELSE vt0.c1 END)) AND ((vt0.c1)))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE ((((NOT (vt1.c0))) NOT NULL));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((NOT (vt1.c0))) NOT NULL));
SELECT ALL * FROM vt1, vt0 WHERE ((((NOT (vt1.c0))) NOT NULL));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((NOT (vt1.c0))) NOT NULL));
SELECT ALL * FROM vt1, vt0 WHERE ((+ (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE ((((+ (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))))AND((((vt1.c0 IN (vt1.c0)))-((vt0.c0 IN (vt0.c0))))))) LIMIT 0x2;
SELECT ALL * FROM vt1, vt0 WHERE ((+ (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE ((((+ (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))))AND((((vt1.c0 IN (vt1.c0)))-((vt0.c0 IN (vt0.c0))))))) LIMIT 0x2;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)>=(vt1.c0)))AND((vt0.c1 IN (vt1.c0)))))AND(vt0.c1)));
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt1.c0)>=(vt1.c0)))AND((vt0.c1 IN (vt1.c0)))))AND(vt0.c1)))AND(0X131e5fa5))) ORDER BY (((vt1.c0)) BETWEEN (((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, x'4b5da8', vt1.c0, vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1, vt1.c0, vt0.c1, vt1.c0))))) AND ((((((((((((((vt0.c1)AND(vt0.c0)))AND('1071450513')))OR(vt0.c0)))AND(0.0010294982188797652)))OR(vt0.c0)))AND(vt0.c1))))) ASC  NULLS FIRST, ((TRIM(DISTINCT vt1.c0, vt0.c1)) IS FALSE)  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0, vt1 WHERE ('-1911675236');
SELECT DISTINCT * FROM vt0, vt1 WHERE ((('-1911675236')AND(CAST(vt0.c0 AS TEXT) COLLATE RTRIM))) LIMIT 0x2;
SELECT ALL * FROM vt0, vt1 WHERE ('-1911675236');
SELECT DISTINCT * FROM vt0, vt1 WHERE ((('-1911675236')AND(CAST(vt0.c0 AS TEXT) COLLATE RTRIM))) LIMIT 0x2;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL)) IS FALSE));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL)) IS FALSE)) LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) ORDER BY ((vt0.c0)<<(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN '' THEN vt0.c1 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()))AND(((((((CAST(vt0.c1 AS INTEGER))OR((((vt0.c1, vt0.c0, vt1.c0))>((vt0.c1, vt0.c0, ''))))))AND((((vt0.c1, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c0))))))OR((((vt0.c1))<>((vt1.c0)))))))) ORDER BY ((((((((vt0.c1)OR(vt0.c0)))AND(1947454245)))AND(vt1.c0))) NOT BETWEEN ((- (vt0.c0))) AND ((NOT (''))))  NULLS LAST, '133883935' DESC  NULLS LAST, vt1.c0  NULLS FIRST LIMIT 2 INTERSECT SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((vt1.c0)))) ORDER BY ((((((((vt0.c1)OR(vt0.c0)))AND(1947454245)))AND(vt1.c0))) NOT BETWEEN ((- (vt0.c0))) AND ((NOT (''))))  NULLS LAST, '133883935' DESC  NULLS LAST, vt1.c0  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) ORDER BY ((vt0.c0)<<(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN '' THEN vt0.c1 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()))AND(((((((CAST(vt0.c1 AS INTEGER))OR((((vt0.c1, vt0.c0, vt1.c0))>((vt0.c1, vt0.c0, ''))))))AND((((vt0.c1, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c0))))))OR((((vt0.c1))<>((vt1.c0)))))))) ORDER BY ((((((((vt0.c1)OR(vt0.c0)))AND(1947454245)))AND(vt1.c0))) NOT BETWEEN ((- (vt0.c0))) AND ((NOT (''))))  NULLS LAST, '133883935' DESC  NULLS LAST, vt1.c0  NULLS FIRST LIMIT 2 INTERSECT SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((vt1.c0)))) ORDER BY ((((((((vt0.c1)OR(vt0.c0)))AND(1947454245)))AND(vt1.c0))) NOT BETWEEN ((- (vt0.c0))) AND ((NOT (''))))  NULLS LAST, '133883935' DESC  NULLS LAST, vt1.c0  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM vt1, vt0 WHERE (COALESCE(((vt1.c0) NOT BETWEEN ('R]rV!	R') AND (vt0.c1)), ((vt0.c1) IS FALSE))) ORDER BY ((~ (vt1.c0)) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.4544545371941363)))AND(vt0.c1)))AND(vt1.c0)))), ((((vt0.c1)+(vt0.c1)))OR((vt1.c0 IN (vt0.c0))));
SELECT * FROM vt1, vt0 WHERE (COALESCE(((vt1.c0) NOT BETWEEN ('R]rV!	R') AND (vt0.c1)), ((vt0.c1) IS FALSE))) ORDER BY (((((((((((((vt0.c1))>((vt0.c1))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c0) BETWEEN (vt0.c1) AND (x'')))))AND(CASE vt1.c0  WHEN 0.7361552485194938 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)))OR((vt0.c1 IN (vt1.c0)))))AND(TYPEOF(DISTINCT vt0.c0))) ASC, (NOT (vt0.c1)) COLLATE RTRIM  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt1.c0 END) NOT BETWEEN (COALESCE(vt0.c0, vt0.c0)) AND (CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY (((((((((((((vt0.c1))>((vt0.c1))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c0) BETWEEN (vt0.c1) AND (x'')))))AND(CASE vt1.c0  WHEN 0.7361552485194938 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)))OR((vt0.c1 IN (vt1.c0)))))AND(TYPEOF(DISTINCT vt0.c0))) ASC, (NOT (vt0.c1)) COLLATE RTRIM  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE (COALESCE(((vt1.c0) NOT BETWEEN ('R]rV!	R') AND (vt0.c1)), ((vt0.c1) IS FALSE))) ORDER BY ((~ (vt1.c0)) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.4544545371941363)))AND(vt0.c1)))AND(vt1.c0)))), ((((vt0.c1)+(vt0.c1)))OR((vt1.c0 IN (vt0.c0))));
SELECT * FROM vt1, vt0 WHERE (COALESCE(((vt1.c0) NOT BETWEEN ('R]rV!	R') AND (vt0.c1)), ((vt0.c1) IS FALSE))) ORDER BY (((((((((((((vt0.c1))>((vt0.c1))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c0) BETWEEN (vt0.c1) AND (x'')))))AND(CASE vt1.c0  WHEN 0.7361552485194938 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)))OR((vt0.c1 IN (vt1.c0)))))AND(TYPEOF(DISTINCT vt0.c0))) ASC, (NOT (vt0.c1)) COLLATE RTRIM  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt1.c0 END) NOT BETWEEN (COALESCE(vt0.c0, vt0.c0)) AND (CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY (((((((((((((vt0.c1))>((vt0.c1))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c0) BETWEEN (vt0.c1) AND (x'')))))AND(CASE vt1.c0  WHEN 0.7361552485194938 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)))OR((vt0.c1 IN (vt1.c0)))))AND(TYPEOF(DISTINCT vt0.c0))) ASC, (NOT (vt0.c1)) COLLATE RTRIM  NULLS LAST LIMIT 1;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ((((CAST(x'' AS NUMERIC), vt1.c0 COLLATE NOCASE))==((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(x'1ef16f')))OR(vt1.c0)), ((vt1.c0)*(vt1.c0))))));
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE ((((CAST(x'' AS NUMERIC), vt1.c0 COLLATE NOCASE))==((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(x'1ef16f')))OR(vt1.c0)), ((vt1.c0)*(vt1.c0)))))) INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (TRIM(DISTINCT (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))), (+ (vt1.c0))));
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((NULL)) AND ((NULL))))IS(CAST(vt1.c0 AS NUMERIC))));
SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN ((NULL)) AND ((NULL))))IS(CAST(vt1.c0 AS NUMERIC))))AND(vt1.c0))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN LOWER(vt1.c0) THEN (((((('n^')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END) LIMIT 0x1;
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((NULL)) AND ((NULL))))IS(CAST(vt1.c0 AS NUMERIC))));
SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN ((NULL)) AND ((NULL))))IS(CAST(vt1.c0 AS NUMERIC))))AND(vt1.c0))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN LOWER(vt1.c0) THEN (((((('n^')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END) LIMIT 0x1;
SELECT * FROM vt0 CROSS JOIN vt1 ON COALESCE(vt1.c0 COLLATE BINARY, (vt1.c0 IN (vt0.c1)), '#', ((vt0.c1)<=(vt1.c0))) WHERE ((~ (vt0.c0))) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((((((vt1.c0)OR('-2088111712')))AND(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c1)|(vt1.c0)) THEN (vt1.c0 IN (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (0.8018744272955827)) THEN ((vt1.c0) NOT BETWEEN (2.018407589E9) AND (vt0.c1)) END, x'4f8a' DESC, (CASE vt0.c0  WHEN '0.7023971077435303' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END IN (vt1.c0 COLLATE RTRIM)) ASC;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON COALESCE(vt1.c0 COLLATE BINARY, (vt1.c0 IN (vt0.c1)), '#', ((vt0.c1)<=(vt1.c0))) WHERE ((((~ (vt0.c0)))AND(CAST((+ (vt1.c0)) AS INTEGER)))) ORDER BY CAST(CASE vt0.c1  WHEN vt1.c0 THEN '1217535724' END AS INTEGER) DESC, (NOT (vt0.c1)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST, vt0.c1 DESC  NULLS LAST LIMIT 0X6;
SELECT * FROM vt0 CROSS JOIN vt1 ON COALESCE(vt1.c0 COLLATE BINARY, (vt1.c0 IN (vt0.c1)), '#', ((vt0.c1)<=(vt1.c0))) WHERE ((~ (vt0.c0))) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((((((vt1.c0)OR('-2088111712')))AND(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c1)|(vt1.c0)) THEN (vt1.c0 IN (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (0.8018744272955827)) THEN ((vt1.c0) NOT BETWEEN (2.018407589E9) AND (vt0.c1)) END, x'4f8a' DESC, (CASE vt0.c0  WHEN '0.7023971077435303' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END IN (vt1.c0 COLLATE RTRIM)) ASC;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON COALESCE(vt1.c0 COLLATE BINARY, (vt1.c0 IN (vt0.c1)), '#', ((vt0.c1)<=(vt1.c0))) WHERE ((((~ (vt0.c0)))AND(CAST((+ (vt1.c0)) AS INTEGER)))) ORDER BY CAST(CASE vt0.c1  WHEN vt1.c0 THEN '1217535724' END AS INTEGER) DESC, (NOT (vt0.c1)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST, vt0.c1 DESC  NULLS LAST LIMIT 0X6;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((((NOT (vt0.c1)), vt0.c1))>((vt0.c0, NULL)))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE  NULLS LAST;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((((NOT (vt0.c1)), vt0.c1))>((vt0.c0, NULL)))) ORDER BY ((vt0.c1 IN (vt0.c0, vt0.c0)) IN (((vt0.c0) IS TRUE), ((vt0.c1) ISNULL))) ASC LIMIT 2 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c1 THEN vt0.c0 END ELSE (- ('-1243565193')) END) ORDER BY ((vt0.c1 IN (vt0.c0, vt0.c0)) IN (((vt0.c0) IS TRUE), ((vt0.c1) ISNULL))) ASC LIMIT 2;
SELECT * FROM vt1, vt0 WHERE ((vt1.c0 IN (vt0.c0)) COLLATE BINARY) ORDER BY ((- (vt1.c0)) IN (((vt0.c1) NOT NULL), ((vt0.c0) NOT NULL), ((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt1.c0 IN (vt0.c0)) COLLATE BINARY)AND(((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)))) ORDER BY CASE x''  WHEN ((vt0.c0) NOT BETWEEN (0.6125185580947499) AND (vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN x'4a' THEN (((vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1))) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (vt0.c1 IN ()) ELSE 0.7926210419023076 END  NULLS FIRST LIMIT 2;
SELECT * FROM vt1, vt0 WHERE ((vt1.c0 IN (vt0.c0)) COLLATE BINARY) ORDER BY ((- (vt1.c0)) IN (((vt0.c1) NOT NULL), ((vt0.c0) NOT NULL), ((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt1.c0 IN (vt0.c0)) COLLATE BINARY)AND(((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)))) ORDER BY CASE x''  WHEN ((vt0.c0) NOT BETWEEN (0.6125185580947499) AND (vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN x'4a' THEN (((vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1))) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (vt0.c1 IN ()) ELSE 0.7926210419023076 END  NULLS FIRST LIMIT 2;
SELECT * FROM vt0 WHERE ((((vt0.c0))<((vt0.c0)))) ORDER BY ((((vt0.c0)OR(SQLITE_COMPILEOPTION_USED(vt0.c0))))OR(CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST, (+ (((vt0.c0)&(vt0.c0)))), vt0.c1;
SELECT * FROM vt0 WHERE ((((vt0.c0))<((vt0.c0)))) ORDER BY ((((vt0.c0)OR(SQLITE_COMPILEOPTION_USED(vt0.c0))))OR(CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST, (+ (((vt0.c0)&(vt0.c0)))), vt0.c1 INTERSECT SELECT * FROM vt0 WHERE (((((((vt0.c1, vt0.c1, vt0.c1))>((0x11ffd15f, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1)IS NOT(vt0.c0))))<=((((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(0.4203463990444263)))AND(vt0.c1)), (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c1)), vt0.c0 COLLATE BINARY)))) ORDER BY ((((vt0.c0)OR(SQLITE_COMPILEOPTION_USED(vt0.c0))))OR(CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST, (+ (((vt0.c0)&(vt0.c0)))), vt0.c1;
SELECT * FROM vt0 WHERE ((((vt0.c0))<((vt0.c0)))) ORDER BY ((((vt0.c0)OR(SQLITE_COMPILEOPTION_USED(vt0.c0))))OR(CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST, (+ (((vt0.c0)&(vt0.c0)))), vt0.c1;
SELECT * FROM vt0 WHERE ((((vt0.c0))<((vt0.c0)))) ORDER BY ((((vt0.c0)OR(SQLITE_COMPILEOPTION_USED(vt0.c0))))OR(CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST, (+ (((vt0.c0)&(vt0.c0)))), vt0.c1 INTERSECT SELECT * FROM vt0 WHERE (((((((vt0.c1, vt0.c1, vt0.c1))>((0x11ffd15f, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1)IS NOT(vt0.c0))))<=((((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(0.4203463990444263)))AND(vt0.c1)), (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c1)), vt0.c0 COLLATE BINARY)))) ORDER BY ((((vt0.c0)OR(SQLITE_COMPILEOPTION_USED(vt0.c0))))OR(CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST, (+ (((vt0.c0)&(vt0.c0)))), vt0.c1;
SELECT MAX(vt0.c0) FROM vt1, vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)AND((('H!b5<EkJ') NOT BETWEEN ('p0') AND (vt0.c1)))))AND(((vt0.c0) BETWEEN (0.798450859063774) AND (vt0.c1)))))AND(vt1.c0)))AND(vt1.c0 COLLATE RTRIM))) ORDER BY ((x'') NOT BETWEEN ('-1693198541') AND (vt0.c0))  NULLS FIRST, (((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))OR('
^m,>	%}')))AND(((vt0.c1)|(vt0.c0)))) ASC  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND (('', vt0.c1, vt0.c0))) COLLATE NOCASE;
SELECT MAX(vt0.c0) FROM vt1, vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)AND((('H!b5<EkJ') NOT BETWEEN ('p0') AND (vt0.c1)))))AND(((vt0.c0) BETWEEN (0.798450859063774) AND (vt0.c1)))))AND(vt1.c0)))AND(vt1.c0 COLLATE RTRIM))) ORDER BY ((x'') NOT BETWEEN ('-1693198541') AND (vt0.c0))  NULLS FIRST, (((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))OR('
^m,>	%}')))AND(((vt0.c1)|(vt0.c0)))) ASC  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND (('', vt0.c1, vt0.c0))) COLLATE NOCASE LIMIT 0X2 INTERSECT SELECT MAX(vt0.c0) FROM vt1, vt0 WHERE ((((~ (vt0.c1)))||(0.856721995631548))) ORDER BY ((x'') NOT BETWEEN ('-1693198541') AND (vt0.c0))  NULLS FIRST, (((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))OR('
^m,>	%}')))AND(((vt0.c1)|(vt0.c0)))) ASC  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND (('', vt0.c1, vt0.c0))) COLLATE NOCASE LIMIT 0X2;
SELECT * FROM vt0 INNER JOIN vt1 ON ((((((vt0.c0, vt0.c0))<((vt1.c0, vt0.c1))), vt0.c1))>=((LOWER(DISTINCT vt0.c0), 0.310211915931208))) WHERE (((vt0.c0)>(((vt1.c0)<<(vt1.c0)))));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((vt0.c0, vt0.c0))<((vt1.c0, vt0.c1))), vt0.c1))>=((LOWER(DISTINCT vt0.c0), 0.310211915931208))) WHERE (((((vt0.c0)>(((vt1.c0)<<(vt1.c0)))))AND((NOT (ROUND(vt0.c1, vt1.c0)))))) ORDER BY (- (TRIM(vt0.c1))) ASC  NULLS FIRST, '1418033500' ASC, ((((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))OR(((vt1.c0) NOT BETWEEN ('Rt hz<q') AND (vt1.c0)))))OR((~ (vt1.c0)))))AND(vt0.c0 COLLATE BINARY)))OR((+ (vt0.c1)))) ASC  NULLS LAST;
SELECT * FROM vt0 INNER JOIN vt1 ON ((((((vt0.c0, vt0.c0))<((vt1.c0, vt0.c1))), vt0.c1))>=((LOWER(DISTINCT vt0.c0), 0.310211915931208))) WHERE (((vt0.c0)>(((vt1.c0)<<(vt1.c0)))));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((vt0.c0, vt0.c0))<((vt1.c0, vt0.c1))), vt0.c1))>=((LOWER(DISTINCT vt0.c0), 0.310211915931208))) WHERE (((((vt0.c0)>(((vt1.c0)<<(vt1.c0)))))AND((NOT (ROUND(vt0.c1, vt1.c0)))))) ORDER BY (- (TRIM(vt0.c1))) ASC  NULLS FIRST, '1418033500' ASC, ((((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))OR(((vt1.c0) NOT BETWEEN ('Rt hz<q') AND (vt1.c0)))))OR((~ (vt1.c0)))))AND(vt0.c0 COLLATE BINARY)))OR((+ (vt0.c1)))) ASC  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('1917719584')))OR(CAST(vt1.c0 AS BLOB))))OR(LIKELY(vt1.c0))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CASE CAST(vt1.c0 AS TEXT)  WHEN LIKELIHOOD(DISTINCT vt1.c0, vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END  NULLS LAST, ((((x'8e6a327d'))==((vt1.c0))) IN (((vt1.c0)<=(vt1.c0))))  NULLS FIRST, vt1.c0 DESC  NULLS LAST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('1917719584')))OR(CAST(vt1.c0 AS BLOB))))OR(LIKELY(vt1.c0))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(vt1.c0))) ORDER BY json_insert(vt1.c0, ((vt1.c0) IS TRUE), vt1.c0 COLLATE NOCASE, vt1.c0);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)!=(vt0.c1)))IS(((vt1.c0)LIKE(vt0.c0)))) WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)!=(vt0.c1)))IS(((vt1.c0)LIKE(vt0.c0)))) WHERE (vt0.c0) ORDER BY (+ (UPPER(DISTINCT vt0.c0)))  NULLS LAST, CAST((- (vt0.c1)) AS BLOB)  NULLS LAST, UPPER(((vt0.c0)<(vt0.c1))) DESC  NULLS FIRST;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE (CASE ((NULL)<>(vt1.c0))  WHEN ((vt0.c1)-(vt0.c0)) THEN (+ (vt0.c1)) END);
SELECT DISTINCT MAX(vt0.c0) FROM vt1, vt0 WHERE (CASE ((NULL)<(vt1.c0))  WHEN ((vt0.c1)-(vt0.c0)) THEN (+ (vt0.c1)) END) LIMIT 1 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt1, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))==(((((vt0.c0)OR(0xffffffffb5070f4f)))OR(x'f5'))))) LIMIT 1;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt0.c0)))>>(((('', vt0.c0, vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c0, 'ꉼF 톮')) AND ((vt1.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))))));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((((((~ (vt0.c0)))>>(((('', vt0.c0, vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c0, 'ꉼF 톮')) AND ((vt1.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))))))AND((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END) AND ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c1)))))))) ORDER BY ((((vt0.c0)GLOB(vt0.c1))) IS FALSE);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, '-1243565193', vt1.c0, x'10bc11')))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)|(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, '-1243565193', vt1.c0, x'10bc11')))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)|(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ((((NOT (vt0.c1))) ISNULL));
SELECT * FROM vt0, vt1 WHERE ((((((NOT (vt0.c1))) ISNULL))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0))) NOT NULL)))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END IN ()) DESC, ((((vt0.c1)IS NOT(vt1.c0)))/(PRINTF(vt0.c1, vt1.c0, vt1.c0))) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE ((((NOT (vt0.c1))) ISNULL));
SELECT * FROM vt0, vt1 WHERE ((((((NOT (vt0.c1))) ISNULL))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0))) NOT NULL)))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END IN ()) DESC, ((((vt0.c1)IS NOT(vt1.c0)))/(PRINTF(vt0.c1, vt1.c0, vt1.c0))) DESC  NULLS LAST LIMIT 1;
SELECT ALL MIN(vt0.c1) FROM vt1 CROSS JOIN vt0 ON (+ ((((vt0.c0))>=((vt0.c0))))) WHERE (CAST(0.4140976175234674 AS REAL)) ORDER BY (((+ (vt0.c0)))<=(((vt0.c1)*(vt0.c1)))) DESC  NULLS FIRST, CASE (+ (vt0.c0))  WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) THEN (((vt0.c0, vt0.c1, vt0.c1))==((vt0.c1, vt0.c0, vt0.c1))) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END  NULLS LAST;
SELECT DISTINCT MIN(vt0.c1) FROM vt1 CROSS JOIN vt0 ON (+ ((((vt0.c0))>=((vt0.c0))))) WHERE (CAST(0.4140976175234674 AS REAL)) ORDER BY (((+ (vt0.c0)))<=(((vt0.c1)*(vt0.c1)))) DESC  NULLS FIRST, CASE (+ (vt0.c0))  WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) THEN (((vt0.c0, vt0.c1, vt0.c1))=((vt0.c1, vt0.c0, vt0.c1))) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END  NULLS LAST LIMIT 0x1;
SELECT * FROM vt1 WHERE ((((((((vt1.c0 IN (vt1.c0, vt1.c0)))OR(CASE vt1.c0  WHEN 0.5068517604161733 THEN NULL END)))OR(vt1.c0 COLLATE RTRIM)))AND(CAST(vt1.c0 AS BLOB)))) ORDER BY vt1.c0;
SELECT DISTINCT * FROM vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0)))OR(CASE vt1.c0  WHEN 0.5068517604161733 THEN NULL END)))OR(vt1.c0 COLLATE RTRIM)))AND(CAST(vt1.c0 AS BLOB))))AND(((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR('<5')))AND('905496803')))AND(((vt1.c0)IS(vt1.c0)))))AND(ABS(DISTINCT vt1.c0))))OR(((vt1.c0)+('Hvb5<EkJ'))))))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) ISNULL) ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) ISNULL) ASC  NULLS LAST LIMIT 0X2;
SELECT * FROM vt1 WHERE ((((((((vt1.c0 IN (vt1.c0, vt1.c0)))OR(CASE vt1.c0  WHEN 0.5068517604161733 THEN NULL END)))OR(vt1.c0 COLLATE RTRIM)))AND(CAST(vt1.c0 AS BLOB)))) ORDER BY vt1.c0;
SELECT DISTINCT * FROM vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0)))OR(CASE vt1.c0  WHEN 0.5068517604161733 THEN NULL END)))OR(vt1.c0 COLLATE RTRIM)))AND(CAST(vt1.c0 AS BLOB))))AND(((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR('<5')))AND('905496803')))AND(((vt1.c0)IS(vt1.c0)))))AND(ABS(DISTINCT vt1.c0))))OR(((vt1.c0)+('Hvb5<EkJ'))))))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) ISNULL) ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) ISNULL) ASC  NULLS LAST LIMIT 0X2;
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE (((('''ux*r', x'0d4e0d'))<((CAST(vt0.c1 AS REAL), IFNULL(DISTINCT vt1.c0, vt0.c1)))));
SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (((((('''ux*r', x'0d4e0d'))<((CAST(vt0.c1 AS REAL), IFNULL(DISTINCT vt1.c0, vt0.c1)))))AND(CASE WHEN (~ (vt1.c0)) THEN ((vt0.c1)*(vt0.c0)) ELSE ((vt1.c0)IS NOT(0.37396138065704565)) END))) ORDER BY vt0.c1 LIMIT 0x3 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE ((- (vt1.c0 COLLATE NOCASE))) ORDER BY vt0.c1 LIMIT 3;
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))||(((vt0.c0) NOT NULL)))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|((((vt0.c0, vt0.c1))!=((vt0.c1, vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))||(((vt0.c0) NOT NULL))))AND((('0.7689912317045176') IS FALSE)))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|((((vt0.c0, vt0.c1))!=((vt0.c1, vt0.c0)))))  NULLS LAST LIMIT 0x3;
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))||(((vt0.c0) NOT NULL)))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|((((vt0.c0, vt0.c1))!=((vt0.c1, vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))||(((vt0.c0) NOT NULL))))AND((('0.7689912317045176') IS FALSE)))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|((((vt0.c0, vt0.c1))!=((vt0.c1, vt0.c0)))))  NULLS LAST LIMIT 0x3;
SELECT ALL * FROM vt0 WHERE (((((NULL)<<(vt0.c0)))<((NOT (vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE (((((NULL)<<(vt0.c0)))<((NOT (vt0.c1))))) ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) DESC  NULLS LAST, ((((NULL)OR(vt0.c0))) IS FALSE), vt0.c0 ASC  NULLS FIRST LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (0.5913309396412324) ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) DESC  NULLS LAST, ((((NULL)OR(vt0.c0))) IS FALSE), vt0.c0 ASC  NULLS FIRST LIMIT 0x3;
SELECT ALL * FROM vt0 WHERE (((((NULL)<<(vt0.c0)))<((NOT (vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE (((((NULL)<<(vt0.c0)))<((NOT (vt0.c1))))) ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) DESC  NULLS LAST, ((((NULL)OR(vt0.c0))) IS FALSE), vt0.c0 ASC  NULLS FIRST LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (0.5913309396412324) ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) DESC  NULLS LAST, ((((NULL)OR(vt0.c0))) IS FALSE), vt0.c0 ASC  NULLS FIRST LIMIT 0x3;
SELECT * FROM vt0 WHERE ((- (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.40170170731299526)))));
SELECT DISTINCT * FROM vt0 WHERE ((- (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.40170170731299526))))) ORDER BY ((((((((vt0.c1)OR((+ (vt0.c0)))))AND(vt0.c1)))AND(((vt0.c0)<(vt0.c1)))))AND(((vt0.c1)<>(vt0.c0))))  NULLS FIRST, CASE json_patch(vt0.c1, vt0.c1)  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c1 END END DESC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (x'') ORDER BY ((((((((vt0.c1)OR((+ (vt0.c0)))))AND(vt0.c1)))AND(((vt0.c0)<(vt0.c1)))))AND(((vt0.c1)<>(vt0.c0))))  NULLS FIRST, CASE json_patch(vt0.c1, vt0.c1)  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c1 END END DESC  NULLS LAST LIMIT 1;
SELECT * FROM vt0 WHERE ((- (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.40170170731299526)))));
SELECT DISTINCT * FROM vt0 WHERE ((- (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.40170170731299526))))) ORDER BY ((((((((vt0.c1)OR((+ (vt0.c0)))))AND(vt0.c1)))AND(((vt0.c0)<(vt0.c1)))))AND(((vt0.c1)<>(vt0.c0))))  NULLS FIRST, CASE json_patch(vt0.c1, vt0.c1)  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c1 END END DESC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (x'') ORDER BY ((((((((vt0.c1)OR((+ (vt0.c0)))))AND(vt0.c1)))AND(((vt0.c0)<(vt0.c1)))))AND(((vt0.c1)<>(vt0.c0))))  NULLS FIRST, CASE json_patch(vt0.c1, vt0.c1)  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c1 END END DESC  NULLS LAST LIMIT 1;
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))IS NOT(TRIM(DISTINCT vt0.c1)))) ORDER BY ((CHAR(vt0.c0, 0.14092088770213074, vt0.c1, vt0.c0, vt0.c1))+(((vt0.c0)<(vt0.c0)))) DESC  NULLS FIRST, ((((((((0.3803360672169722)OR(((vt0.c1)IS(vt0.c1)))))AND(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS BLOB))))AND(((((x'd6')OR(vt0.c1)))OR(NULL)))) DESC, ((((vt0.c0)>>(vt0.c1))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))IS NOT(TRIM(DISTINCT vt0.c1)))) ORDER BY ((CHAR(vt0.c0, 0.14092088770213074, vt0.c1, vt0.c0, vt0.c1))+(((vt0.c0)<(vt0.c0)))) DESC  NULLS FIRST, ((((((((0.3803360672169722)OR(((vt0.c1)IS(vt0.c1)))))AND(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS BLOB))))AND(((((x'd6')OR(vt0.c1)))OR(NULL)))) DESC, ((((vt0.c0)>>(vt0.c1))) IS FALSE)  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(0X6f2f638 AS INTEGER))))OR(((vt0.c0)<>(vt0.c1)))))AND((((0.014091669125693707, vt0.c0, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c0))))))OR(NULL))) ORDER BY ((CHAR(vt0.c0, 0.14092088770213074, vt0.c1, vt0.c0, vt0.c1))+(((vt0.c0)<(vt0.c0)))) DESC  NULLS FIRST, ((((((((0.3803360672169722)OR(((vt0.c1)IS(vt0.c1)))))AND(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS BLOB))))AND(((((x'd6')OR(vt0.c1)))OR(NULL)))) DESC, ((((vt0.c0)>>(vt0.c1))) IS FALSE)  NULLS LAST;
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))IS NOT(TRIM(DISTINCT vt0.c1)))) ORDER BY ((CHAR(vt0.c0, 0.14092088770213074, vt0.c1, vt0.c0, vt0.c1))+(((vt0.c0)<(vt0.c0)))) DESC  NULLS FIRST, ((((((((0.3803360672169722)OR(((vt0.c1)IS(vt0.c1)))))AND(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS BLOB))))AND(((((x'd6')OR(vt0.c1)))OR(NULL)))) DESC, ((((vt0.c0)>>(vt0.c1))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))IS NOT(TRIM(DISTINCT vt0.c1)))) ORDER BY ((CHAR(vt0.c0, 0.14092088770213074, vt0.c1, vt0.c0, vt0.c1))+(((vt0.c0)<(vt0.c0)))) DESC  NULLS FIRST, ((((((((0.3803360672169722)OR(((vt0.c1)IS(vt0.c1)))))AND(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS BLOB))))AND(((((x'd6')OR(vt0.c1)))OR(NULL)))) DESC, ((((vt0.c0)>>(vt0.c1))) IS FALSE)  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(0X6f2f638 AS INTEGER))))OR(((vt0.c0)<>(vt0.c1)))))AND((((0.014091669125693707, vt0.c0, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c0))))))OR(NULL))) ORDER BY ((CHAR(vt0.c0, 0.14092088770213074, vt0.c1, vt0.c0, vt0.c1))+(((vt0.c0)<(vt0.c0)))) DESC  NULLS FIRST, ((((((((0.3803360672169722)OR(((vt0.c1)IS(vt0.c1)))))AND(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS BLOB))))AND(((((x'd6')OR(vt0.c1)))OR(NULL)))) DESC, ((((vt0.c0)>>(vt0.c1))) IS FALSE)  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY, ((((LIKELIHOOD(vt0.c1, 1815640843))OR(load_extension(0.36644153896686116, vt1.c0))))AND(vt1.c0 COLLATE BINARY)), ((NULL)*(0.06364580930239094)) COLLATE NOCASE LIMIT 3 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ((~ (((vt0.c0)<=(vt0.c1))))) ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY, ((((LIKELIHOOD(vt0.c1, 1815640843))OR(load_extension(0.36644153896686116, vt1.c0))))AND(vt1.c0 COLLATE BINARY)), ((NULL)*(0.06364580930239094)) COLLATE NOCASE LIMIT 0X3;
SELECT * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY, ((((LIKELIHOOD(vt0.c1, 1815640843))OR(load_extension(0.36644153896686116, vt1.c0))))AND(vt1.c0 COLLATE BINARY)), ((NULL)*(0.06364580930239094)) COLLATE NOCASE LIMIT 3 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ((~ (((vt0.c0)<=(vt0.c1))))) ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY, ((((LIKELIHOOD(vt0.c1, 1815640843))OR(load_extension(0.36644153896686116, vt1.c0))))AND(vt1.c0 COLLATE BINARY)), ((NULL)*(0.06364580930239094)) COLLATE NOCASE LIMIT 0X3;
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) ORDER BY ((((((((highlight(vt1.c0, 0Xffffffffb497521f, vt1.c0, vt1.c0))OR(CAST(vt1.c0 AS NUMERIC))))OR(((vt1.c0)IS NOT(vt1.c0)))))AND((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(0.3055269643144888))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()) COLLATE NOCASE)AND((((vt1.c0, vt1.c0, '婜')) NOT BETWEEN ((((vt1.c0) NOT BETWEEN ('-587666667') AND (vt1.c0)), ((vt1.c0)>>(vt1.c0)), ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt1.c0)*(vt1.c0)), ((x'2cdba092f9')|(vt1.c0)), vt1.c0)))))) ORDER BY '652935900', CAST(((vt1.c0) IS TRUE) AS REAL) DESC, ((((((vt1.c0)AND(CAST(vt1.c0 AS INTEGER))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0)>(vt1.c0))))  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((- (CAST(vt1.c0 AS TEXT)))) ORDER BY '652935900', CAST(((vt1.c0) IS TRUE) AS REAL) DESC, ((((((vt1.c0)AND(CAST(vt1.c0 AS INTEGER))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0)>(vt1.c0))))  NULLS FIRST LIMIT 2;
SELECT ALL * FROM vt0 WHERE (6.86262591E8) ORDER BY ((((vt0.c1)<<(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((+ (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((6.86262591E8)AND(((((((((((((0.18672580477563916)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR('804941229'))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND ((vt0.c0 IN ())))))) ORDER BY ((((vt0.c1)<<(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((+ (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (6.86262591E8) ORDER BY ((((vt0.c1)<<(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((+ (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((6.86262591E8)AND(((((((((((((0.18672580477563916)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR('804941229'))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND ((vt0.c0 IN ())))))) ORDER BY ((((vt0.c1)<<(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((+ (vt0.c0))))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((NOT (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((NOT (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))))AND((NOT (vt0.c0)) COLLATE BINARY)));
SELECT * FROM vt0, vt1 WHERE ((NOT (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((NOT (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))))AND((NOT (vt0.c0)) COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1)IS(vt1.c0)) IN ((0.0010294982188797652 IN (vt0.c1))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END) NOT NULL), (((((vt1.c0, vt0.c1))>((vt0.c1, vt0.c1))))%(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1)IS(vt1.c0)) IN ((0.0010294982188797652 IN (vt0.c1)))))AND((((((vt0.c0)||(vt0.c1)), ((vt0.c0)/(vt0.c1))))>=((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END, ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END) NOT NULL), (((((vt1.c0, vt0.c1))>((vt0.c1, vt0.c1))))%(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0))) IS TRUE)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END) NOT NULL), (((((vt1.c0, vt0.c1))>((vt0.c1, vt0.c1))))%(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) LIMIT 1;
SELECT MAX(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0)<=(vt1.c0))  WHEN CASE '-140583714'  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6883606483579756 THEN vt1.c0 END THEN TRIM(DISTINCT vt1.c0) WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) IS FALSE) END, ((vt1.c0)<<((- (NULL)))) ASC;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0)<=(vt1.c0))  WHEN CASE '-140583714'  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6883606483579756 THEN vt1.c0 END THEN TRIM(DISTINCT vt1.c0) WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) IS FALSE) END, ((vt1.c0)<<((- (NULL)))) ASC INTERSECT SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((((CAST(0Xffffffff91197173 AS BLOB)))==((CAST(vt1.c0 AS REAL))))) ORDER BY CASE ((vt1.c0)<=(vt1.c0))  WHEN CASE '-140583714'  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6883606483579756 THEN vt1.c0 END THEN TRIM(DISTINCT vt1.c0) WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) IS FALSE) END, ((vt1.c0)<<((- (NULL)))) ASC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ABS(vt1.c0 COLLATE NOCASE) WHERE (((((+ (vt0.c1))))>=(((vt1.c0 IN ())))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ABS(vt1.c0 COLLATE NOCASE) WHERE (((((((+ (vt0.c1))))>(((vt1.c0 IN ())))))AND(json_remove(CAST(vt1.c0 AS TEXT), vt0.c1, (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c1))), vt0.c0 COLLATE NOCASE, (0.0272194163825058 IN (vt1.c0)), vt0.c1 COLLATE NOCASE)))) ORDER BY ((SQLITE_COMPILEOPTION_USED(vt0.c0)) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM, (((((vt1.c0))<((vt1.c0))))<((vt1.c0 IN (vt0.c1))))  NULLS LAST INTERSECT SELECT * FROM vt0 INNER JOIN vt1 ON ABS(vt1.c0 COLLATE NOCASE) WHERE (vt0.c1) ORDER BY ((SQLITE_COMPILEOPTION_USED(vt0.c0)) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM, (((((vt1.c0))<((vt1.c0))))<((vt1.c0 IN (vt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ABS(vt1.c0 COLLATE NOCASE) WHERE (((((+ (vt0.c1))))>=(((vt1.c0 IN ())))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ABS(vt1.c0 COLLATE NOCASE) WHERE (((((((+ (vt0.c1))))>(((vt1.c0 IN ())))))AND(json_remove(CAST(vt1.c0 AS TEXT), vt0.c1, (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c1))), vt0.c0 COLLATE NOCASE, (0.0272194163825058 IN (vt1.c0)), vt0.c1 COLLATE NOCASE)))) ORDER BY ((SQLITE_COMPILEOPTION_USED(vt0.c0)) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM, (((((vt1.c0))<((vt1.c0))))<((vt1.c0 IN (vt0.c1))))  NULLS LAST INTERSECT SELECT * FROM vt0 INNER JOIN vt1 ON ABS(vt1.c0 COLLATE NOCASE) WHERE (vt0.c1) ORDER BY ((SQLITE_COMPILEOPTION_USED(vt0.c0)) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM, (((((vt1.c0))<((vt1.c0))))<((vt1.c0 IN (vt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE);
SELECT DISTINCT * FROM vt0, vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c1) IS FALSE)) NOT NULL)) LIMIT 0x0;
SELECT ALL * FROM vt0, vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE);
SELECT DISTINCT * FROM vt0, vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c1) IS FALSE)) NOT NULL)) LIMIT 0x0;
SELECT * FROM vt0, vt1 WHERE ((~ (0Xffffffffb5070f4f)) COLLATE BINARY);
SELECT ALL * FROM vt0, vt1 WHERE ((((~ (-1257828529)) COLLATE BINARY)AND(vt0.c1))) LIMIT 0x2 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (TIME(((vt1.c0) NOTNULL), ((vt0.c0) IS FALSE), 'e')) LIMIT 2;
SELECT * FROM vt0, vt1 WHERE ((~ (0Xffffffffb5070f4f)) COLLATE BINARY);
SELECT ALL * FROM vt0, vt1 WHERE ((((~ (-1257828529)) COLLATE BINARY)AND(vt0.c1))) LIMIT 0x2 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (TIME(((vt1.c0) NOTNULL), ((vt0.c0) IS FALSE), 'e')) LIMIT 2;
SELECT MIN(vt0.c0) FROM vt0, vt1 WHERE ((vt0.c0 IN ()));
SELECT DISTINCT MIN(vt0.c0) FROM vt0, vt1 WHERE ((vt0.c0 IN ())) ORDER BY CAST((- (vt0.c1)) AS BLOB), ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))*(vt0.c1)) DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0, vt1 WHERE ((((vt0.c0 IN (x'd1', vt0.c1, vt1.c0))) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) AND ((((vt0.c1, vt0.c1)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0)))))) ORDER BY CAST((- (vt0.c1)) AS BLOB), ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))*(vt0.c1)) DESC  NULLS FIRST LIMIT 2;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)AND(vt0.c1))) ORDER BY x'' INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((0.515126674709234)) AND ((NULL)))) ORDER BY x'';
SELECT * FROM vt0, vt1 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ((CAST(vt0.c0 AS TEXT))+(vt0.c0)) DESC  NULLS FIRST, CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END THEN ((vt0.c1)<=(vt0.c0)) ELSE json_array(vt1.c0, vt0.c1, vt1.c0, vt0.c1) END ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 COLLATE RTRIM AS TEXT))AND(CASE ((vt0.c1)==(vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END THEN vt0.c0 END))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, (('dpD⅚a|
z,') NOTNULL), ((vt1.c0)||(vt0.c0)), CAST(vt1.c0 AS BLOB))) AND ((((vt0.c1)>(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1)<>('1058576553')), ((vt0.c0) IS TRUE)))) ASC, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0))) COLLATE NOCASE) ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, (('dpD⅚a|
z,') NOTNULL), ((vt1.c0)||(vt0.c0)), CAST(vt1.c0 AS BLOB))) AND ((((vt0.c1)>(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1)!=('1058576553')), ((vt0.c0) IS TRUE)))) ASC, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ((CAST(vt0.c0 AS TEXT))+(vt0.c0)) DESC  NULLS FIRST, CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END THEN ((vt0.c1)<=(vt0.c0)) ELSE json_array(vt1.c0, vt0.c1, vt1.c0, vt0.c1) END ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 COLLATE RTRIM AS TEXT))AND(CASE ((vt0.c1)==(vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END THEN vt0.c0 END))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, (('dpD⅚a|
z,') NOTNULL), ((vt1.c0)||(vt0.c0)), CAST(vt1.c0 AS BLOB))) AND ((((vt0.c1)>(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1)<>('1058576553')), ((vt0.c0) IS TRUE)))) ASC, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0))) COLLATE NOCASE) ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, (('dpD⅚a|
z,') NOTNULL), ((vt1.c0)||(vt0.c0)), CAST(vt1.c0 AS BLOB))) AND ((((vt0.c1)>(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1)!=('1058576553')), ((vt0.c0) IS TRUE)))) ASC, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT MIN(vt1.c0) FROM vt1 WHERE (vt1.c0);
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL), ((((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))) AND ((((vt0.c0)>=(vt1.c0)), ((0.7603792470194533) ISNULL)))));
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL), ((((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))) AND ((((vt0.c0)>(vt1.c0)), ((0.7603792470194533) ISNULL)))))AND((UPPER(vt0.c1) IN (vt0.c0))))) ORDER BY NULL DESC;
SELECT ALL MIN(vt0.c0) FROM vt0 CROSS JOIN vt1 ON (((((((((((~ (vt1.c0)))AND(((vt0.c0) NOTNULL))))AND((vt1.c0 IN ()))))OR(((vt0.c1) NOTNULL))))AND((((1703944981, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))))OR(((vt0.c0) IS FALSE))) WHERE (x'');
SELECT ALL MIN(vt0.c0) FROM vt0 CROSS JOIN vt1 ON (((((((((((~ (vt1.c0)))AND(((vt0.c0) NOTNULL))))AND((vt1.c0 IN ()))))OR(((vt0.c1) NOTNULL))))AND((((1703944981, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))))OR(((vt0.c0) IS FALSE))) WHERE (x'') ORDER BY CAST(((0.9610029459658351)OR(vt0.c1)) AS NUMERIC)  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON CAST(HEX(DISTINCT vt0.c1) AS REAL) WHERE (((vt1.c0) NOT NULL));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON CAST(HEX(DISTINCT vt0.c1) AS REAL) WHERE (((((vt1.c0) NOT NULL))AND((json_array_length(vt0.c0) IN ())))) ORDER BY vt1.c0  NULLS LAST, (ABS(vt1.c0) IN ((vt0.c1 IN (vt0.c1, vt1.c0))))  NULLS LAST LIMIT 2;
SELECT * FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c1)<(vt0.c0)))) ORDER BY CAST(vt0.c1 COLLATE RTRIM AS NUMERIC) ASC, ((highlight(vt0.c1, vt0.c0, vt0.c1, vt0.c0)) BETWEEN (((vt0.c0)OR(vt0.c0))) AND ((vt0.c1 IN ()))) DESC  NULLS LAST, vt0.c0 DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((UPPER(DISTINCT ((vt0.c1)<(vt0.c0))))AND(0.6262001042188738))) ORDER BY CAST(((vt0.c1)/(vt0.c1)) AS BLOB), ((((vt0.c0)>=(NULL))) IS FALSE)  NULLS FIRST;
SELECT * FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c1)<(vt0.c0)))) ORDER BY CAST(vt0.c1 COLLATE RTRIM AS NUMERIC) ASC, ((highlight(vt0.c1, vt0.c0, vt0.c1, vt0.c0)) BETWEEN (((vt0.c0)OR(vt0.c0))) AND ((vt0.c1 IN ()))) DESC  NULLS LAST, vt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)IS NOT(vt0.c0)) IN ()));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt1.c0)IS NOT(vt0.c0)) IN ()));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)IS NOT(vt0.c0)) IN ()));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt1.c0)IS NOT(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))OR(CASE WHEN '-1657046256' THEN vt0.c0 END)))OR(0xffffffffd207df2a)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))OR(CASE WHEN '-1657046256' THEN vt0.c0 END)))OR(0xffffffffd207df2a))) LIMIT 0X3 INTERSECT SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, (((0.8284381565121612, vt0.c0, 1188632116))=((vt0.c1, vt0.c1, vt0.c1))), (NOT ('2109847487')), ((vt0.c1)<<(vt0.c0))))>((((('', vt0.c0))<>((vt0.c1, vt0.c1))), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)=(vt0.c0)), (vt0.c0 IN (vt0.c0)))))) LIMIT 0X3;
SELECT * FROM vt1 WHERE ((((vt1.c0)GLOB(vt1.c0)) IN (((vt1.c0)<>('-2029932043')))));
SELECT * FROM vt1 WHERE ((((((vt1.c0)GLOB(vt1.c0)) IN (((vt1.c0)<>('-2029932043')))))AND(((((((((((CAST(vt1.c0 AS INTEGER))AND(((vt1.c0)>(vt1.c0)))))OR(((vt1.c0) BETWEEN (x'f02d') AND (vt1.c0)))))AND(vt1.c0 COLLATE BINARY)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(vt1.c0)))));
SELECT * FROM vt1 WHERE ((((vt1.c0)GLOB(vt1.c0)) IN (((vt1.c0)<>('-2029932043')))));
SELECT * FROM vt1 WHERE ((((((vt1.c0)GLOB(vt1.c0)) IN (((vt1.c0)<>('-2029932043')))))AND(((((((((((CAST(vt1.c0 AS INTEGER))AND(((vt1.c0)>(vt1.c0)))))OR(((vt1.c0) BETWEEN (x'f02d') AND (vt1.c0)))))AND(vt1.c0 COLLATE BINARY)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(vt1.c0)))));
SELECT MIN(vt0.c1) FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (((((vt1.c0, vt0.c0)) BETWEEN ((NULL, vt1.c0)) AND ((vt1.c0, vt0.c0))) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.9318357569891358)), TYPEOF(DISTINCT vt0.c0)))) ORDER BY (((vt0.c0, vt0.c0)) NOT BETWEEN ((0.5649207466545763, (vt1.c0 IN (vt0.c1)))) AND ((((vt1.c0)<=(vt0.c0)), '1633278354'))) ASC;
SELECT ALL MIN(vt0.c1) FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (((((vt1.c0, vt0.c0)) BETWEEN ((NULL, vt1.c0)) AND ((vt1.c0, vt0.c0))) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.9318357569891358)), TYPEOF(DISTINCT vt0.c0)))) ORDER BY (((vt0.c0, vt0.c0)) NOT BETWEEN ((0.5649207466545763, (vt1.c0 IN (vt0.c1)))) AND ((((vt1.c0)<=(vt0.c0)), '1633278354'))) ASC LIMIT 0;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE));
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE)) ORDER BY vt1.c0 ASC, ((x'' COLLATE NOCASE)-(x'e78c9f')), (vt1.c0 IN ())  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE));
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE)) ORDER BY vt1.c0 ASC, ((x'' COLLATE NOCASE)-(x'e78c9f')), (vt1.c0 IN ())  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY ABS(((vt0.c1) ISNULL))  NULLS FIRST, (((vt0.c0)) BETWEEN (((+ (vt1.c0)))) AND (((vt0.c0 IN ())))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1)AND(CAST(((vt0.c0)AND(x'')) AS NUMERIC)))) ORDER BY ((((((vt0.c0) NOT NULL))OR(((((vt0.c1)AND(',%N&z')))OR(vt0.c0)))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)) DESC, vt0.c0 LIMIT 0X0;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY ABS(((vt0.c1) ISNULL))  NULLS FIRST, (((vt0.c0)) BETWEEN (((+ (vt1.c0)))) AND (((vt0.c0 IN ())))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1)AND(CAST(((vt0.c0)AND(x'')) AS NUMERIC)))) ORDER BY ((((((vt0.c0) NOT NULL))OR(((((vt0.c1)AND(',%N&z')))OR(vt0.c0)))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)) DESC, vt0.c0 LIMIT 0X0;
SELECT * FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0))) NOT NULL)) ORDER BY CAST(680314813 AS INTEGER) ASC;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0))) NOT NULL)) ORDER BY CAST(680314813 AS INTEGER) ASC INTERSECT SELECT ALL * FROM vt1 WHERE (CAST(x'4a6f04' AS BLOB)) ORDER BY CAST(0x288cc7bd AS INTEGER) ASC;
SELECT * FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0))) NOT NULL)) ORDER BY CAST(680314813 AS INTEGER) ASC;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0))) NOT NULL)) ORDER BY CAST(680314813 AS INTEGER) ASC INTERSECT SELECT ALL * FROM vt1 WHERE (CAST(x'4a6f04' AS BLOB)) ORDER BY CAST(0x288cc7bd AS INTEGER) ASC;
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (CASE vt0.c1 COLLATE BINARY  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)>=(vt1.c0)) THEN vt0.c1 END) ORDER BY '', (((((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c0 THEN x'a07ac7' WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, NULL DESC;
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (((CASE vt0.c1 COLLATE BINARY  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)>(vt1.c0)) THEN vt0.c1 END)AND(vt0.c1))) ORDER BY '', (((((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c0 THEN x'a07ac7' WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, NULL DESC LIMIT 1 INTERSECT SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (((((vt0.c0)AND(vt1.c0)))LIKE((((vt0.c1))>=((NULL)))))) ORDER BY '', (((((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c0 THEN x'a07ac7' WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, NULL DESC LIMIT 0X1;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE (vt0.c0 IN (vt0.c1))  WHEN (-1358457415 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END WHERE (CAST((((vt1.c0))>((vt0.c0))) AS BLOB));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE (vt0.c0 IN (vt0.c1))  WHEN (-1358457415 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END WHERE (CAST((((vt1.c0))>((vt0.c0))) AS BLOB)) INTERSECT SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE (vt0.c0 IN (vt0.c1))  WHEN (0Xffffffffaf0795b9 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END WHERE (0X67747ff1);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE (vt0.c0 IN (vt0.c1))  WHEN (-1358457415 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END WHERE (CAST((((vt1.c0))>((vt0.c0))) AS BLOB));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE (vt0.c0 IN (vt0.c1))  WHEN (-1358457415 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END WHERE (CAST((((vt1.c0))>((vt0.c0))) AS BLOB)) INTERSECT SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE (vt0.c0 IN (vt0.c1))  WHEN (0Xffffffffaf0795b9 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END WHERE (0X67747ff1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'46' END) BETWEEN (JULIANDAY(0.6645514264370384, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'46' END) BETWEEN (JULIANDAY(0.6645514264370384, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) INTERSECT SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0))) NOT NULL)) ORDER BY (('4hᖛἚgG~(') NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1)<=(vt0.c1))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0))) NOT NULL))AND(((NULL) IS TRUE)))) ORDER BY (('4hᖛἚgG~(') NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1)<=(vt0.c1)))) LIMIT 2 INTERSECT SELECT * FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)<=(((((((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1))))) ORDER BY (('4hᖛἚgG~(') NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1)<=(vt0.c1)))) LIMIT 0x2;
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0))) NOT NULL)) ORDER BY (('4hᖛἚgG~(') NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1)<=(vt0.c1))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0))) NOT NULL))AND(((NULL) IS TRUE)))) ORDER BY (('4hᖛἚgG~(') NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1)<=(vt0.c1)))) LIMIT 2 INTERSECT SELECT * FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)<=(((((((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1))))) ORDER BY (('4hᖛἚgG~(') NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1)<=(vt0.c1)))) LIMIT 0x2;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (NULL);
SELECT MAX(vt0.c1) FROM vt0 WHERE (((NULL)AND(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CASE ((vt0.c0)IS(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c1) ISNULL) ELSE CAST(vt0.c0 AS REAL) END, x'43fa'  NULLS FIRST LIMIT 1;
SELECT * FROM vt1 WHERE (((vt1.c0) IS FALSE));
SELECT * FROM vt1 WHERE (((vt1.c0) IS FALSE)) INTERSECT SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))IS(TRIM(x''))));
SELECT * FROM vt1 WHERE (((vt1.c0) IS FALSE));
SELECT * FROM vt1 WHERE (((vt1.c0) IS FALSE)) INTERSECT SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))IS(TRIM(x''))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE NOCASE COLLATE NOCASE COLLATE BINARY) ORDER BY ((CAST(vt0.c0 AS TEXT))<=(((vt0.c0) ISNULL)))  NULLS LAST, (((('nkI#>V') NOT BETWEEN (vt0.c1) AND (vt0.c1)))|(-423690826)) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE NOCASE COLLATE NOCASE COLLATE BINARY) ORDER BY ((CAST(vt0.c0 AS TEXT))<=(((vt0.c0) ISNULL)))  NULLS LAST, (((('nkI#>V') NOT BETWEEN (vt0.c1) AND (vt0.c1)))|(-423690826)) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((x'' IN (vt0.c0, vt0.c1)))OR(((x'') BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((CAST(vt0.c0 AS TEXT))<=(((vt0.c0) ISNULL)))  NULLS LAST, (((('nkI#>V') NOT BETWEEN (vt0.c1) AND (vt0.c1)))|(-423690826)) ASC  NULLS LAST LIMIT 0;
SELECT * FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(CASE vt1.c0  WHEN '0.04337888142353474' THEN vt0.c1 WHEN vt1.c0 THEN 0.20776104467898227 END)))AND(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY 0.3196501427731676  NULLS LAST, LOWER(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN NULL WHEN (vt0.c1 IN ()) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt1.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(CASE vt1.c0  WHEN '0.04337888142353474' THEN vt0.c1 WHEN vt1.c0 THEN 0.20776104467898227 END)))AND(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY 0.3196501427731676  NULLS LAST, LOWER(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN NULL WHEN (vt0.c1 IN ()) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt1.c0 COLLATE NOCASE END DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM vt0, vt1 WHERE (((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt0.c1 IN ()))))AND(vt0.c0)))AND(CASE '-2011903462'  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY 0.3196501427731676  NULLS LAST, LOWER(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN NULL WHEN (vt0.c1 IN ()) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt1.c0 COLLATE NOCASE END DESC  NULLS FIRST LIMIT 1;
SELECT * FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(CASE vt1.c0  WHEN '0.04337888142353474' THEN vt0.c1 WHEN vt1.c0 THEN 0.20776104467898227 END)))AND(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY 0.3196501427731676  NULLS LAST, LOWER(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN NULL WHEN (vt0.c1 IN ()) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt1.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(CASE vt1.c0  WHEN '0.04337888142353474' THEN vt0.c1 WHEN vt1.c0 THEN 0.20776104467898227 END)))AND(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY 0.3196501427731676  NULLS LAST, LOWER(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN NULL WHEN (vt0.c1 IN ()) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt1.c0 COLLATE NOCASE END DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM vt0, vt1 WHERE (((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt0.c1 IN ()))))AND(vt0.c0)))AND(CASE '-2011903462'  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY 0.3196501427731676  NULLS LAST, LOWER(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN NULL WHEN (vt0.c1 IN ()) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt1.c0 COLLATE NOCASE END DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c1)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c1)) AS INTEGER)) ORDER BY '-1317246308', CASE CAST(vt0.c1 AS TEXT)  WHEN (NOT (NULL)) THEN 'jG' ELSE 0.4928230332592678 END, ((vt0.c1)>(vt0.c1)) COLLATE BINARY  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS TRUE)) BETWEEN (x'') AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY '-1317246308', CASE CAST(vt0.c1 AS TEXT)  WHEN (NOT (NULL)) THEN 'jG' ELSE 0.4928230332592678 END, ((vt0.c1)>(vt0.c1)) COLLATE BINARY  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c1)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c1)) AS INTEGER)) ORDER BY '-1317246308', CASE CAST(vt0.c1 AS TEXT)  WHEN (NOT (NULL)) THEN 'jG' ELSE 0.4928230332592678 END, ((vt0.c1)>(vt0.c1)) COLLATE BINARY  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS TRUE)) BETWEEN (x'') AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY '-1317246308', CASE CAST(vt0.c1 AS TEXT)  WHEN (NOT (NULL)) THEN 'jG' ELSE 0.4928230332592678 END, ((vt0.c1)>(vt0.c1)) COLLATE BINARY  NULLS FIRST LIMIT 1;
SELECT MIN(vt1.c0) FROM vt1 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c1 END) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (((vt0.c1)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY CAST(((vt1.c0) NOT BETWEEN ('V''''') AND (vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT ALL MIN(vt1.c0) FROM vt1 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c1 END) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (((((vt0.c1)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND((((((vt1.c0)AND(vt0.c0)))AND(0xffffffff921aa7a0)) IN ())))) ORDER BY CAST(((vt1.c0) NOT BETWEEN ('V''''') AND (vt0.c0)) AS INTEGER)  NULLS LAST LIMIT 5;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)%(0.46780157799974165)) IN ())) ORDER BY (((- (vt1.c0)))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)=((((vt1.c0, vt1.c0, x'18', vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, ((HEX(vt1.c0))IS NOT(((vt1.c0)<(vt1.c0))));
SELECT * FROM vt1 WHERE ((((vt1.c0)%(0.46780157799974165)) IN ())) ORDER BY (((- (vt1.c0)))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)==((((vt1.c0, vt1.c0, x'18', vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, ((HEX(vt1.c0))IS NOT(((vt1.c0)<(vt1.c0))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)%(0.46780157799974165)) IN ())) ORDER BY (((- (vt1.c0)))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)=((((vt1.c0, vt1.c0, x'18', vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, ((HEX(vt1.c0))IS NOT(((vt1.c0)<(vt1.c0))));
SELECT * FROM vt1 WHERE ((((vt1.c0)%(0.46780157799974165)) IN ())) ORDER BY (((- (vt1.c0)))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)==((((vt1.c0, vt1.c0, x'18', vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST, ((HEX(vt1.c0))IS NOT(((vt1.c0)<(vt1.c0))));
SELECT MAX(vt0.c0) FROM vt1 INNER JOIN vt0 ON ((CASE WHEN '-809015615' THEN vt0.c0 END)IS(((vt1.c0)%(vt0.c1)))) WHERE ((((vt1.c0))>((vt0.c1))) COLLATE NOCASE);
SELECT MAX(vt0.c0) FROM vt1 INNER JOIN vt0 ON ((CASE WHEN '-809015615' THEN vt0.c0 END)IS(((vt1.c0)%(vt0.c1)))) WHERE ((((((vt1.c0))>((vt0.c1))) COLLATE NOCASE)AND(CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER)))) LIMIT 0x2;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) ISNULL)) ORDER BY UPPER('-100881499') DESC  NULLS LAST, CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC) ASC, ((((-1.624196834E9) BETWEEN (vt1.c0) AND (vt1.c0)))<(((vt1.c0)|(vt1.c0)))) ASC, '0.9592457715033358'  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY) ISNULL))AND(((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN (vt1.c0, vt1.c0))))))) ORDER BY CASE WHEN (+ (vt1.c0)) THEN vt1.c0 END ASC  NULLS FIRST LIMIT 0;
SELECT MAX(vt1.c0) FROM vt1 WHERE (x'd9') ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL) ASC  NULLS LAST, CASE 0.8170656925643763  WHEN (- (vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) ELSE CASE NULL  WHEN vt1.c0 THEN vt1.c0 END END DESC, ((((vt1.c0)+(vt1.c0)))-((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))))  NULLS LAST;
SELECT MAX(vt1.c0) FROM vt1 WHERE (((x'd9')AND((((NOT (x'')))*(CAST(vt1.c0 AS TEXT)))))) ORDER BY ((((vt1.c0 IN ()), (- (vt1.c0)), 0.644474341365546, (((0.9571614549430517)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), '-734681191'))<=((((vt1.c0)-(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), (+ (vt1.c0)), ROUND(vt1.c0, NULL), ((((((0xffffffffe6befdb6)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((0Xffffffff84cd6efa)<<(vt1.c0))))) DESC, CAST(vt1.c0 AS NUMERIC) COLLATE BINARY DESC LIMIT 2 INTERSECT SELECT MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((((vt1.c0 IN ()), (- (vt1.c0)), 0.644474341365546, (((0.9571614549430517)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), '-734681191'))<=((((vt1.c0)-(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), (+ (vt1.c0)), ROUND(vt1.c0, NULL), ((((((0xffffffffe6befdb6)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((0xffffffff84cd6efa)<<(vt1.c0))))) DESC, CAST(vt1.c0 AS NUMERIC) COLLATE BINARY DESC LIMIT 2;
SELECT MAX(vt1.c0) FROM vt1 WHERE (CASE (NOT (vt1.c0))  WHEN ((vt1.c0)>=('-1693198541')) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY json_insert(((vt1.c0)<<(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), '1-500000YUv', ((vt1.c0)<(vt1.c0))), (((CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS TEXT), ((('10180611', vt1.c0, vt1.c0, x'86')) BETWEEN ((vt1.c0, vt1.c0, NULL, 'X(Z闣jFW.t')) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))!=((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), ((((-1.606587938E9)AND(vt1.c0)))OR(vt1.c0)), CASE WHEN 0.2879219218478474 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))  NULLS FIRST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (CASE (NOT (vt1.c0))  WHEN ((vt1.c0)>=('-1693198541')) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY json_insert(((vt1.c0)<<(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), '1-500000YUv', ((vt1.c0)<(vt1.c0))), (((CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS TEXT), ((('10180611', vt1.c0, vt1.c0, x'86')) BETWEEN ((vt1.c0, vt1.c0, NULL, 'X(Z闣jFW.t')) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))!=((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), ((((-1.606587938E9)AND(vt1.c0)))OR(vt1.c0)), CASE WHEN 0.2879219218478474 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))  NULLS FIRST;
SELECT MIN(vt1.c0) FROM vt1 WHERE (-181539799) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (-2.130026726E9)) IN ()) ASC  NULLS LAST, (vt1.c0 COLLATE RTRIM IN (NULL));
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (0Xfffffffff52dec29) ORDER BY ((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST, ((x'c993') NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN NULL THEN vt1.c0 END) AND (vt1.c0))  NULLS FIRST INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (LIKELY(vt1.c0 COLLATE RTRIM)) ORDER BY ((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST, ((x'c993') NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN NULL THEN vt1.c0 END) AND (vt1.c0))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE));
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL)) LIMIT 2;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE));
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL)) LIMIT 2;
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END) NOTNULL));
SELECT ALL * FROM vt0, vt1 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 END) NOTNULL))AND(((((0.9952413993629456)<>(vt0.c0)))<=(NULLIF(vt1.c0, vt1.c0))))));
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END) NOTNULL));
SELECT ALL * FROM vt0, vt1 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 END) NOTNULL))AND(((((0.9952413993629456)<>(vt0.c0)))<=(NULLIF(vt1.c0, vt1.c0))))));
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)==(0.6004767689790539)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)==(0.6004767689790539))))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (LIKELY(vt0.c1))));
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (LIKELY(vt0.c1))))AND(0.1219590931513358))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOTNULL)  NULLS LAST LIMIT 0x2;
SELECT * FROM vt0, vt1 WHERE (LIKE(CAST(x'0f' AS NUMERIC), UPPER(DISTINCT 'J1Zq蓀_5'))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt0.c1) ISNULL))) ASC;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((LIKE(CAST(x'0f' AS NUMERIC), UPPER(DISTINCT 'J1Zq蓀_5')))AND(CASE WHEN CAST(vt1.c0 AS TEXT) THEN (vt1.c0 IN (vt0.c1)) WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c1 END))) ORDER BY (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt1.c0)>>(vt0.c1)))) ASC, (NOT (((vt0.c0)-(vt0.c1))))  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((+ (vt0.c1))) IS FALSE)) ORDER BY (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt1.c0)>>(vt0.c1)))) ASC, (NOT (((vt0.c0)-(vt0.c1))))  NULLS LAST LIMIT 0;
SELECT * FROM vt0, vt1 WHERE (LIKE(CAST(x'0f' AS NUMERIC), UPPER(DISTINCT 'J1Zq蓀_5'))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt0.c1) ISNULL))) ASC;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((LIKE(CAST(x'0f' AS NUMERIC), UPPER(DISTINCT 'J1Zq蓀_5')))AND(CASE WHEN CAST(vt1.c0 AS TEXT) THEN (vt1.c0 IN (vt0.c1)) WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c1 END))) ORDER BY (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt1.c0)>>(vt0.c1)))) ASC, (NOT (((vt0.c0)-(vt0.c1))))  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((+ (vt0.c1))) IS FALSE)) ORDER BY (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt1.c0)>>(vt0.c1)))) ASC, (NOT (((vt0.c0)-(vt0.c1))))  NULLS LAST LIMIT 0;
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>(((vt1.c0)-(vt0.c1)))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>(((vt1.c0)-(vt0.c1)))));
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>(((vt1.c0)-(vt0.c1)))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>(((vt1.c0)-(vt0.c1)))));
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)OR(((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(NULL)))AND(vt0.c0)))))AND(SQLITE_SOURCE_ID())));
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)OR(((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(NULL)))AND(vt0.c0)))))AND(SQLITE_SOURCE_ID())))AND((((((((((vt0.c0)AND(NULL)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) IN (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOTNULL)) ORDER BY (((((vt0.c1)/(vt0.c0))))>((vt0.c0 COLLATE NOCASE)))  NULLS LAST, (- (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((vt0.c1 COLLATE RTRIM) NOTNULL))AND(vt0.c1))) ORDER BY ((((vt0.c1)>=(vt0.c1)))>=(((vt0.c0)>(vt0.c1)))) DESC LIMIT 0x3 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c1 IN (vt0.c1)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) IS TRUE) END) ORDER BY ((((vt0.c1)>=(vt0.c1)))>=(((vt0.c0)>(vt0.c1)))) DESC LIMIT 3;
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY)LIKE(vt1.c0)));
SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY)LIKE(vt1.c0))) INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0);
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0);
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE (vt0.c1);
SELECT DISTINCT MIN(vt0.c0) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY NULL  NULLS FIRST INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt1, vt0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) ORDER BY NULL  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((((vt1.c0) IS TRUE), SQLITE_COMPILEOPTION_USED(vt1.c0), ((vt1.c0)<>(vt1.c0)), NULL))!=(((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)>>('-584846185')), ((vt1.c0)%(vt1.c0)))))) ORDER BY vt1.c0 ASC, vt1.c0 DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0) IS TRUE), SQLITE_COMPILEOPTION_USED(vt1.c0), ((vt1.c0)<(vt1.c0)), NULL))<(((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)>>('-584846185')), ((vt1.c0)%(vt1.c0))))))AND(x''))) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) NOT BETWEEN (x'6e') AND (x'9ad8665a')))) DESC  NULLS FIRST, (((vt1.c0, vt1.c0))>((vt1.c0, vt1.c0))) COLLATE RTRIM LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN vt1.c0 COLLATE BINARY THEN 0.41048562688688495 END) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) NOT BETWEEN (x'6e') AND (x'9ad8665a')))) DESC  NULLS FIRST, (((vt1.c0, vt1.c0))>((vt1.c0, vt1.c0))) COLLATE RTRIM LIMIT 0x0;
SELECT * FROM vt1 WHERE ((((((vt1.c0) IS TRUE), SQLITE_COMPILEOPTION_USED(vt1.c0), ((vt1.c0)<>(vt1.c0)), NULL))!=(((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)>>('-584846185')), ((vt1.c0)%(vt1.c0)))))) ORDER BY vt1.c0 ASC, vt1.c0 DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0) IS TRUE), SQLITE_COMPILEOPTION_USED(vt1.c0), ((vt1.c0)<(vt1.c0)), NULL))<(((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)>>('-584846185')), ((vt1.c0)%(vt1.c0))))))AND(x''))) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) NOT BETWEEN (x'6e') AND (x'9ad8665a')))) DESC  NULLS FIRST, (((vt1.c0, vt1.c0))>((vt1.c0, vt1.c0))) COLLATE RTRIM LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN vt1.c0 COLLATE BINARY THEN 0.41048562688688495 END) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) NOT BETWEEN (x'6e') AND (x'9ad8665a')))) DESC  NULLS FIRST, (((vt1.c0, vt1.c0))>((vt1.c0, vt1.c0))) COLLATE RTRIM LIMIT 0x0;
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (((NOT (vt0.c0)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) LIMIT 1;
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (((NOT (vt0.c0)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) LIMIT 1;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS TEXT))IS NOT(((((((((vt1.c0)AND(NULL)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt0.c1 WHEN ((('벊6-K u', vt0.c1, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, NULL, vt1.c0, vt0.c0))) THEN (((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) ELSE ((vt0.c0)<(vt1.c0)) END;
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((((CAST(vt0.c0 AS TEXT))IS NOT(((((((((vt1.c0)AND(NULL)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))))AND((((((vt0.c1, vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((NULL, 0.12957760001381846, vt0.c1, vt1.c0)) AND ((vt0.c0, x'', vt0.c1, vt1.c0))))+(((vt0.c0)OR(vt0.c0))))))) ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0)LIKE(vt0.c0)), TRIM(vt0.c1), (x'682a' IN (vt1.c0)))), ((((('-2011903462', vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, 4.89374913E8, vt1.c0)) AND ((vt0.c0, vt0.c1, vt0.c0)))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN vt1.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY UPPER((vt1.c0 IN (vt1.c0, vt1.c0))) DESC  NULLS LAST, ((- (vt1.c0)) IN (vt1.c0)) ASC;
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN vt1.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY vt1.c0 COLLATE NOCASE, ((CAST(vt1.c0 AS TEXT))>(UNLIKELY(DISTINCT vt1.c0))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE)) ORDER BY CAST(((vt0.c1)<>(vt0.c0)) AS INTEGER), CASE ((vt0.c1) IS TRUE)  WHEN vt0.c0 THEN vt0.c1 COLLATE RTRIM ELSE CAST(vt1.c0 AS INTEGER) END;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c1 COLLATE BINARY) IS FALSE))AND(((((CAST(vt1.c0 AS REAL))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(((vt0.c0) NOTNULL)))))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE  NULLS LAST, (((vt0.c1)>=(vt0.c0)) IN ((((vt1.c0))<((''))))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (0.7820324999287686) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE  NULLS LAST, (((vt0.c1)>=(vt0.c0)) IN ((((vt1.c0))<((''))))) ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE)) ORDER BY CAST(((vt0.c1)<>(vt0.c0)) AS INTEGER), CASE ((vt0.c1) IS TRUE)  WHEN vt0.c0 THEN vt0.c1 COLLATE RTRIM ELSE CAST(vt1.c0 AS INTEGER) END;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c1 COLLATE BINARY) IS FALSE))AND(((((CAST(vt1.c0 AS REAL))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(((vt0.c0) NOTNULL)))))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE  NULLS LAST, (((vt0.c1)>=(vt0.c0)) IN ((((vt1.c0))<((''))))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (0.7820324999287686) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE  NULLS LAST, (((vt0.c1)>=(vt0.c0)) IN ((((vt1.c0))<((''))))) ASC  NULLS FIRST;
SELECT MAX(vt1.c0) FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt0.c1)AND(x'')))OR(vt1.c0))) ISNULL)) ORDER BY CASE WHEN (+ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END WHEN (vt0.c0 IN (vt1.c0)) THEN (((vt0.c1, x''))==(('-136740434', vt1.c0))) WHEN NULL THEN CAST(vt0.c1 AS BLOB) END  NULLS LAST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt0.c1)AND(x'')))OR(vt1.c0))) ISNULL)) ORDER BY CASE WHEN (+ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END WHEN (vt0.c0 IN (vt1.c0)) THEN (((vt0.c1, x''))=(('-136740434', vt1.c0))) WHEN NULL THEN CAST(vt0.c1 AS BLOB) END  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (NOT (vt0.c0)) END) ORDER BY CASE WHEN (+ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END WHEN (vt0.c0 IN (vt1.c0)) THEN (((vt0.c1, x''))=(('-136740434', vt1.c0))) WHEN NULL THEN CAST(vt0.c1 AS BLOB) END  NULLS LAST LIMIT 0X0;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((- (vt0.c1)) COLLATE NOCASE) ORDER BY ((vt0.c1) NOT NULL) ASC  NULLS FIRST;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((((- (vt0.c1)) COLLATE NOCASE)AND(CASE ((vt0.c0)IS NOT(vt0.c1))  WHEN ((-2011903462)*(vt0.c1)) THEN SQLITE_COMPILEOPTION_GET(vt0.c0) WHEN (- (vt0.c0)) THEN vt0.c1 END))) ORDER BY ((vt0.c1) NOT NULL) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT MIN(vt0.c0) FROM vt0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 ELSE ((((((((((vt0.c1)AND('3E0vkocS')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) END) ORDER BY ((vt0.c1) NOT NULL) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt1 WHERE ('-1861525317') ORDER BY ((vt1.c0)GLOB((NOT (vt1.c0)))) DESC, ABS(vt1.c0) COLLATE NOCASE;
SELECT DISTINCT * FROM vt1 WHERE ('-1861525317') ORDER BY ((vt1.c0)GLOB((NOT (vt1.c0)))) DESC, ABS(vt1.c0) COLLATE NOCASE LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 'p<q
' END COLLATE BINARY) ORDER BY ((vt1.c0)GLOB((NOT (vt1.c0)))) DESC, ABS(vt1.c0) COLLATE NOCASE LIMIT 0x3;
SELECT ALL * FROM vt1 WHERE ('-1861525317') ORDER BY ((vt1.c0)GLOB((NOT (vt1.c0)))) DESC, ABS(vt1.c0) COLLATE NOCASE;
SELECT DISTINCT * FROM vt1 WHERE ('-1861525317') ORDER BY ((vt1.c0)GLOB((NOT (vt1.c0)))) DESC, ABS(vt1.c0) COLLATE NOCASE LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 'p<q
' END COLLATE BINARY) ORDER BY ((vt1.c0)GLOB((NOT (vt1.c0)))) DESC, ABS(vt1.c0) COLLATE NOCASE LIMIT 0x3;
SELECT * FROM vt0, vt1 WHERE ((vt0.c1 COLLATE NOCASE IN ()));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)=(vt1.c0 COLLATE RTRIM))  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((('wJs', vt0.c1, vt1.c0))!=((vt1.c0, vt0.c1, vt0.c0))))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)=(vt1.c0 COLLATE RTRIM))  NULLS LAST LIMIT 2;
SELECT * FROM vt0, vt1 WHERE ((vt0.c1 COLLATE NOCASE IN ()));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)=(vt1.c0 COLLATE RTRIM))  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((('wJs', vt0.c1, vt1.c0))!=((vt1.c0, vt0.c1, vt0.c0))))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)=(vt1.c0 COLLATE RTRIM))  NULLS LAST LIMIT 2;
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN 0x6a41e675 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)=(((((NULL)OR(vt1.c0)))OR(vt1.c0)))));
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN 0X6a41e675 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)=(((((NULL)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY CAST(0.02817857540779667 AS TEXT), ((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1))) AND ((vt1.c0 IN (vt0.c1)))) ASC, (((vt1.c0))<=((vt0.c1))) COLLATE BINARY DESC LIMIT 0X3;
SELECT * FROM vt0, vt1 WHERE (((((((((((x'c836')OR(vt0.c1)))AND(vt1.c0)))AND(0.8981311707057964)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt0.c0)=(vt1.c0)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((((x'c836')OR(vt0.c1)))AND(vt1.c0)))AND(0.8981311707057964)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt0.c0)>=(vt1.c0)))))AND((((vt0.c1 IN ()))LIKE(((((((((((((vt0.c0)AND(0.7934751872240151)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR('ZHE4 c9>2')))AND(vt0.c1))))))) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((((((((((vt1.c0)AND(x'')))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) ELSE vt1.c0 END);
SELECT * FROM vt0, vt1 WHERE (((((((((((x'c836')OR(vt0.c1)))AND(vt1.c0)))AND(0.8981311707057964)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt0.c0)=(vt1.c0)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((((x'c836')OR(vt0.c1)))AND(vt1.c0)))AND(0.8981311707057964)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt0.c0)>=(vt1.c0)))))AND((((vt0.c1 IN ()))LIKE(((((((((((((vt0.c0)AND(0.7934751872240151)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR('ZHE4 c9>2')))AND(vt0.c1))))))) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((((((((((vt1.c0)AND(x'')))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) ELSE vt1.c0 END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((((((vt0.c1)AND(((vt0.c1) NOTNULL))))OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE WHEN 0.6994229358907139 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)))AND(((vt0.c0)=(vt0.c0)))) WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END COLLATE BINARY);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((((((vt0.c1)AND(((vt0.c1) NOTNULL))))OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE WHEN 0.6994229358907139 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)))AND(((vt0.c0)=(vt0.c0)))) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END COLLATE BINARY)AND(((vt1.c0) ISNULL) COLLATE BINARY)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((((((vt0.c1)AND(((vt0.c1) NOTNULL))))OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE WHEN 0.6994229358907139 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)))AND(((vt0.c0)=(vt0.c0)))) WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END COLLATE BINARY);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((((((vt0.c1)AND(((vt0.c1) NOTNULL))))OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE WHEN 0.6994229358907139 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)))AND(((vt0.c0)=(vt0.c0)))) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END COLLATE BINARY)AND(((vt1.c0) ISNULL) COLLATE BINARY)));
SELECT ALL MAX(vt1.c0) FROM vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))=(((vt0.c1)OR(vt1.c0)))) WHERE ((((((vt1.c0))<((vt0.c0)))) NOT NULL));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 NOT INDEXED INNER JOIN vt0 ON ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))=(((vt0.c1)OR(vt1.c0)))) WHERE ((((((((vt1.c0))<((vt0.c0)))) NOT NULL))AND(((((vt0.c1)IS(vt0.c0))) NOTNULL)))) ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'8f')), (((vt0.c0, vt1.c0))<=((vt1.c0, vt0.c0))), (vt1.c0 IN (vt0.c0))))==((((vt1.c0)LIKE(vt1.c0)), vt0.c1, CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))  NULLS LAST, 0Xffffffff960db477 LIMIT 3;
SELECT ALL MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))>=(((((((x'9917')AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))) WHERE ('0!') ORDER BY vt0.c1, ((('%+w-w{i', vt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN x'fb6eb2' ELSE vt0.c1 END, ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))) AND ((((vt1.c0) NOT NULL), ((vt1.c0)AND(vt1.c0))))) ASC;
SELECT ALL MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))>=(((((((x'9917')AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))) WHERE ('0!') ORDER BY ((x'') NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND (CAST(vt0.c0 AS BLOB))) DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL) WHERE ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))))<=((((vt0.c1) BETWEEN ('0.14087406893072174') AND (vt0.c0))))));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL) WHERE ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))))<((((vt0.c1) BETWEEN ('0.14087406893072174') AND (vt0.c0)))))) INTERSECT SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL) WHERE (vt0.c0);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL) WHERE ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))))<=((((vt0.c1) BETWEEN ('0.14087406893072174') AND (vt0.c0))))));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL) WHERE ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))))<((((vt0.c1) BETWEEN ('0.14087406893072174') AND (vt0.c0)))))) INTERSECT SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL) WHERE (vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY 0.9031882890677928  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (((vt1.c0, vt0.c0)) BETWEEN ((((vt1.c0)GLOB(vt0.c0)), ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) AND ((vt0.c0 COLLATE NOCASE, (((vt1.c0))<=((vt0.c0))))))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM vt0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt1.c0))) AND (((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c0))))) ORDER BY (((vt1.c0, vt0.c0)) BETWEEN ((((vt1.c0)GLOB(vt0.c0)), ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) AND ((vt0.c0 COLLATE NOCASE, (((vt1.c0))<=((vt0.c0))))))  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY 0.9031882890677928  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (((vt1.c0, vt0.c0)) BETWEEN ((((vt1.c0)GLOB(vt0.c0)), ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) AND ((vt0.c0 COLLATE NOCASE, (((vt1.c0))<=((vt0.c0))))))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM vt0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt1.c0))) AND (((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c0))))) ORDER BY (((vt1.c0, vt0.c0)) BETWEEN ((((vt1.c0)GLOB(vt0.c0)), ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) AND ((vt0.c0 COLLATE NOCASE, (((vt1.c0))<=((vt0.c0))))))  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))>>(vt1.c0 COLLATE RTRIM))) ORDER BY CAST((NOT (vt1.c0)) AS NUMERIC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))>>(vt1.c0 COLLATE RTRIM))) ORDER BY CAST((NOT (vt1.c0)) AS NUMERIC) LIMIT 0X0;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))>>(vt1.c0 COLLATE RTRIM))) ORDER BY CAST((NOT (vt1.c0)) AS NUMERIC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))>>(vt1.c0 COLLATE RTRIM))) ORDER BY CAST((NOT (vt1.c0)) AS NUMERIC) LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((TYPEOF(vt0.c0))>>((vt0.c1 IN ()))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY CASE (vt0.c1 IN ())  WHEN (vt0.c1 IN ()) THEN ((vt0.c0) NOTNULL) WHEN 'Z*' THEN (vt0.c1 IN ()) WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END  NULLS FIRST, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (NULL))) AND (HEX(vt0.c1)))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((TYPEOF(vt0.c0))>>((vt0.c1 IN ()))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY CASE (vt0.c1 IN ())  WHEN (vt0.c1 IN ()) THEN ((vt0.c0) NOTNULL) WHEN 'Z*' THEN (vt0.c1 IN ()) WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END  NULLS FIRST, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (NULL))) AND (HEX(vt0.c1)))  NULLS FIRST LIMIT 0;
SELECT * FROM vt1, vt0 WHERE (LIKE(CASE '?'  WHEN vt0.c1 THEN vt1.c0 END, CASE WHEN vt0.c1 THEN vt0.c1 END, 'l')) ORDER BY (((~ (vt0.c1))) NOTNULL), (((vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((((vt0.c1) IS TRUE), vt0.c1 COLLATE NOCASE, ((vt0.c0) IS TRUE))) AND (((((vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0))), ((vt0.c0)<(vt0.c0)), ((NULL)/(vt1.c0))))) ASC;
SELECT ALL * FROM vt1, vt0 WHERE (LIKE(CASE '?'  WHEN vt0.c1 THEN vt1.c0 END, CASE WHEN vt0.c1 THEN vt0.c1 END, 'l')) ORDER BY vt0.c0  NULLS LAST, ((vt0.c1) BETWEEN (((vt0.c1)&(vt0.c1))) AND (((vt0.c1)>(vt0.c0)))) DESC  NULLS LAST, NULL LIMIT 1;
SELECT * FROM vt1, vt0 WHERE (LIKE(CASE '?'  WHEN vt0.c1 THEN vt1.c0 END, CASE WHEN vt0.c1 THEN vt0.c1 END, 'l')) ORDER BY (((~ (vt0.c1))) NOTNULL), (((vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((((vt0.c1) IS TRUE), vt0.c1 COLLATE NOCASE, ((vt0.c0) IS TRUE))) AND (((((vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0))), ((vt0.c0)<(vt0.c0)), ((NULL)/(vt1.c0))))) ASC;
SELECT ALL * FROM vt1, vt0 WHERE (LIKE(CASE '?'  WHEN vt0.c1 THEN vt1.c0 END, CASE WHEN vt0.c1 THEN vt0.c1 END, 'l')) ORDER BY vt0.c0  NULLS LAST, ((vt0.c1) BETWEEN (((vt0.c1)&(vt0.c1))) AND (((vt0.c1)>(vt0.c0)))) DESC  NULLS LAST, NULL LIMIT 1;
SELECT MIN(vt0.c0) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))) AND (CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)) WHERE ((CAST(vt0.c0 AS BLOB) IN ((NOT (vt0.c0)), 0.23672162638526062)));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 INNER JOIN vt1 ON ((((vt1.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))) AND (CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)) WHERE ((((CAST(vt0.c0 AS BLOB) IN ((NOT (vt0.c0)), 0.23672162638526062)))AND(NULL))) ORDER BY ABS(vt0.c0)  NULLS FIRST INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 INNER JOIN vt1 ON ((((vt1.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))) AND (CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)) WHERE ((((((((- (vt0.c0)))AND(((vt1.c0)>(vt1.c0)))))OR((('6F1_L줶')IS(vt1.c0)))))OR(SQLITE_SOURCE_ID()))) ORDER BY ABS(vt0.c0)  NULLS FIRST;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (0.6764411744903679) AND (vt0.c1)) WHERE ((- (((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))));
SELECT * FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (0.6764411744903679) AND (vt0.c1)) WHERE ((- (((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))))) LIMIT 0x0;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (0.6764411744903679) AND (vt0.c1)) WHERE ((- (((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))));
SELECT * FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (0.6764411744903679) AND (vt0.c1)) WHERE ((- (((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))))) LIMIT 0x0;
SELECT MIN(vt1.c0) FROM vt1 WHERE (((HEX(vt1.c0)) NOTNULL)) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND (('-1096818435'))), ABS(((vt1.c0)IS(x'19'))) DESC, CAST(((vt1.c0)-(vt1.c0)) AS REAL) ASC  NULLS LAST;
SELECT MIN(vt1.c0) FROM vt1 WHERE (((HEX(vt1.c0)) NOTNULL)) ORDER BY (NOT (vt1.c0)) COLLATE NOCASE ASC  NULLS LAST INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((LIKELIHOOD(vt1.c0, vt1.c0)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE RTRIM))) ORDER BY (NOT (vt1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((0.9299467230100918)<=(vt1.c0)) WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN ((vt0.c1) BETWEEN (0.7212185611762276) AND (vt1.c0)) END) ORDER BY (~ (vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, CASE -1101534162  WHEN (NOT (vt1.c0)) THEN vt0.c1 COLLATE BINARY WHEN ABS(vt1.c0) THEN CAST(vt0.c1 AS TEXT) WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE NULL END THEN CAST(vt0.c0 AS TEXT) END, ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) IN (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((0.9299467230100918)=(vt1.c0)) WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN ((vt0.c1) BETWEEN (0.7212185611762276) AND (vt1.c0)) END) ORDER BY (~ (vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, CASE 0xffffffffbe57ec2e  WHEN (NOT (vt1.c0)) THEN vt0.c1 COLLATE BINARY WHEN ABS(vt1.c0) THEN CAST(vt0.c1 AS TEXT) WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE NULL END THEN CAST(vt0.c0 AS TEXT) END, ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) IN (vt0.c0 COLLATE BINARY))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (~ (vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, CASE -1101534162  WHEN (NOT (vt1.c0)) THEN vt0.c1 COLLATE BINARY WHEN ABS(vt1.c0) THEN CAST(vt0.c1 AS TEXT) WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE NULL END THEN CAST(vt0.c0 AS TEXT) END, ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) IN (vt0.c0 COLLATE BINARY))  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((0.9299467230100918)<=(vt1.c0)) WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN ((vt0.c1) BETWEEN (0.7212185611762276) AND (vt1.c0)) END) ORDER BY (~ (vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, CASE -1101534162  WHEN (NOT (vt1.c0)) THEN vt0.c1 COLLATE BINARY WHEN ABS(vt1.c0) THEN CAST(vt0.c1 AS TEXT) WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE NULL END THEN CAST(vt0.c0 AS TEXT) END, ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) IN (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((0.9299467230100918)=(vt1.c0)) WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN ((vt0.c1) BETWEEN (0.7212185611762276) AND (vt1.c0)) END) ORDER BY (~ (vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, CASE 0xffffffffbe57ec2e  WHEN (NOT (vt1.c0)) THEN vt0.c1 COLLATE BINARY WHEN ABS(vt1.c0) THEN CAST(vt0.c1 AS TEXT) WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE NULL END THEN CAST(vt0.c0 AS TEXT) END, ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) IN (vt0.c0 COLLATE BINARY))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (~ (vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, CASE -1101534162  WHEN (NOT (vt1.c0)) THEN vt0.c1 COLLATE BINARY WHEN ABS(vt1.c0) THEN CAST(vt0.c1 AS TEXT) WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE NULL END THEN CAST(vt0.c0 AS TEXT) END, ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) IN (vt0.c0 COLLATE BINARY))  NULLS FIRST LIMIT 0X1;
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)>>(vt0.c1))  WHEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0))) THEN vt0.c0 END) ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT)  NULLS LAST, ((655700416)<(((vt0.c1)>=(vt0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)>>(vt0.c1))  WHEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0))) THEN vt0.c0 END) ORDER BY ((vt0.c0) BETWEEN (((vt0.c1)IS(vt0.c1))) AND ((~ (vt0.c1)))) DESC  NULLS LAST, ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))*(NULL)) ASC LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CASE WHEN (- (vt0.c1)) THEN CAST(vt0.c1 AS INTEGER) END) ORDER BY ((vt0.c0) BETWEEN (((vt0.c1)IS(vt0.c1))) AND ((~ (vt0.c1)))) DESC  NULLS LAST, ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))*(NULL)) ASC LIMIT 0;
SELECT * FROM vt1 WHERE (((((((((((vt1.c0) NOT NULL))AND(CAST(vt1.c0 AS TEXT))))AND((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0) IS FALSE))))OR((vt1.c0 IN (vt1.c0))))) ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)<(vt1.c0))))  NULLS FIRST, ((((vt1.c0)IS(vt1.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (((vt1.c0) IS TRUE)))  NULLS FIRST, JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE;
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((vt1.c0) NOT NULL))AND(CAST(vt1.c0 AS TEXT))))AND((vt1.c0 IN (vt1.c0)))))OR(((vt1.c0) IS FALSE))))OR((vt1.c0 IN (vt1.c0)))))AND(((- (vt1.c0)) IN ())))) ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)<(vt1.c0))))  NULLS FIRST, ((((vt1.c0)IS(vt1.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (((vt1.c0) IS TRUE)))  NULLS FIRST, JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE LIMIT 1;
SELECT * FROM vt1 WHERE (((((((((((vt1.c0) NOT NULL))AND(CAST(vt1.c0 AS TEXT))))AND((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0) IS FALSE))))OR((vt1.c0 IN (vt1.c0))))) ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)<(vt1.c0))))  NULLS FIRST, ((((vt1.c0)IS(vt1.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (((vt1.c0) IS TRUE)))  NULLS FIRST, JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE;
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((vt1.c0) NOT NULL))AND(CAST(vt1.c0 AS TEXT))))AND((vt1.c0 IN (vt1.c0)))))OR(((vt1.c0) IS FALSE))))OR((vt1.c0 IN (vt1.c0)))))AND(((- (vt1.c0)) IN ())))) ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)<(vt1.c0))))  NULLS FIRST, ((((vt1.c0)IS(vt1.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (((vt1.c0) IS TRUE)))  NULLS FIRST, JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE LIMIT 1;
SELECT MIN(vt1.c0) FROM vt1 CROSS JOIN vt0 ON '0.4487091589095483' WHERE (((((((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))=((vt0.c1 IN (vt0.c1)))));
SELECT MIN(vt1.c0) FROM vt1 CROSS JOIN vt0 ON '0.4487091589095483' WHERE (((((((((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))==((vt0.c1 IN (vt0.c1)))))AND(((vt0.c0 IN ()) IN ())))) LIMIT 1;
SELECT * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY NULL ASC  NULLS FIRST, vt0.c1 DESC, HEX(DISTINCT ((vt0.c1)*(vt1.c0))) ASC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY NULL ASC  NULLS FIRST, vt0.c1 DESC, HEX(DISTINCT ((vt0.c1)*(vt1.c0))) ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(UNLIKELY(vt1.c0) AS BLOB)) ORDER BY NULL ASC  NULLS FIRST, vt0.c1 DESC, HEX(DISTINCT ((vt0.c1)*(vt1.c0))) ASC LIMIT 0X0;
SELECT * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY NULL ASC  NULLS FIRST, vt0.c1 DESC, HEX(DISTINCT ((vt0.c1)*(vt1.c0))) ASC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY NULL ASC  NULLS FIRST, vt0.c1 DESC, HEX(DISTINCT ((vt0.c1)*(vt1.c0))) ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(UNLIKELY(vt1.c0) AS BLOB)) ORDER BY NULL ASC  NULLS FIRST, vt0.c1 DESC, HEX(DISTINCT ((vt0.c1)*(vt1.c0))) ASC LIMIT 0X0;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (('>Wy-mKOm')) AND ((vt1.c0))))%(0.9383773036413476)));
SELECT MAX(vt1.c0) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (('>Wy-mKOm')) AND ((vt1.c0))))%(0.9383773036413476))) ORDER BY CAST(((vt1.c0)||(vt1.c0)) AS INTEGER) DESC  NULLS FIRST INTERSECT SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((TYPEOF(DISTINCT vt1.c0)) IS FALSE)) ORDER BY CAST(((vt1.c0)||(vt1.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT MAX(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0))>>((((vt1.c0))<((vt1.c0))))) DESC  NULLS FIRST;
SELECT MAX(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0))>>((((vt1.c0))<((vt1.c0))))) DESC  NULLS FIRST INTERSECT SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (0.7831646522758499) ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0))>>((((vt1.c0))<((vt1.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (CAST((((vt1.c0, vt0.c1))==(('u2?', vt1.c0))) AS INTEGER)) ORDER BY ((vt1.c0 COLLATE RTRIM)IS NOT((+ (vt1.c0))))  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST((((vt1.c0, vt0.c1))==(('u2?', vt1.c0))) AS INTEGER)) ORDER BY TRIM(DISTINCT ((vt0.c1)IS NOT(vt1.c0)), (- (vt0.c1))), CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS FIRST, (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)) IN ()) ASC  NULLS LAST, CAST(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE (CAST((((vt1.c0, vt0.c1))==(('u2?', vt1.c0))) AS INTEGER)) ORDER BY ((vt1.c0 COLLATE RTRIM)IS NOT((+ (vt1.c0))))  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST((((vt1.c0, vt0.c1))==(('u2?', vt1.c0))) AS INTEGER)) ORDER BY TRIM(DISTINCT ((vt0.c1)IS NOT(vt1.c0)), (- (vt0.c1))), CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS FIRST, (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)) IN ()) ASC  NULLS LAST, CAST(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT NULL)  WHEN (NOT (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN 0.19907598249266867 ELSE NULL END END) ORDER BY CAST(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) AS REAL)  NULLS FIRST, (((((vt0.c1)+(vt0.c1))))==((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))) ASC, (((((('1917719584', vt0.c1))<((vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, vt0.c1, vt0.c1, NULL)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, 0.767642353761802, vt0.c0))), vt0.c1))<=(((~ (vt0.c1)), (- (vt0.c1)), ((vt0.c1)IS(vt0.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT NULL)  WHEN (NOT (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN 0.19907598249266867 ELSE NULL END END) ORDER BY CAST(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) AS REAL)  NULLS FIRST, (((((vt0.c1)+(vt0.c1))))==((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))) ASC, (((((('1917719584', vt0.c1))<((vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, vt0.c1, vt0.c1, NULL)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, 0.767642353761802, vt0.c0))), vt0.c1))<=(((~ (vt0.c1)), (- (vt0.c1)), ((vt0.c1)IS(vt0.c1))))) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT NULL)  WHEN (NOT (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN 0.19907598249266867 ELSE NULL END END) ORDER BY CAST(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) AS REAL)  NULLS FIRST, (((((vt0.c1)+(vt0.c1))))==((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))) ASC, (((((('1917719584', vt0.c1))<((vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, vt0.c1, vt0.c1, NULL)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, 0.767642353761802, vt0.c0))), vt0.c1))<=(((~ (vt0.c1)), (- (vt0.c1)), ((vt0.c1)IS(vt0.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT NULL)  WHEN (NOT (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN 0.19907598249266867 ELSE NULL END END) ORDER BY CAST(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) AS REAL)  NULLS FIRST, (((((vt0.c1)+(vt0.c1))))==((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))) ASC, (((((('1917719584', vt0.c1))<((vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, vt0.c1, vt0.c1, NULL)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, 0.767642353761802, vt0.c0))), vt0.c1))<=(((~ (vt0.c1)), (- (vt0.c1)), ((vt0.c1)IS(vt0.c1))))) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (CASE WHEN ((NULL)+(vt0.c0)) THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0) ISNULL) THEN (('~') BETWEEN (vt0.c1) AND (vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((CASE WHEN ((NULL)+(vt0.c0)) THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0) ISNULL) THEN (('~') BETWEEN (vt0.c1) AND (vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END)AND((((vt0.c0)OR(vt0.c0)) IN ((((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1, x'', vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1)))))))) INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE ((NOT (NULLIF(DISTINCT vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (TRIM(CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS INTEGER)));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (TRIM(CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS INTEGER)));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'd012' END COLLATE BINARY);
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'd012' END COLLATE BINARY) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((- ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))))) LIMIT 0x0;
SELECT COUNT(*) FROM vt0 WHERE (((((((CAST(vt0.c0 AS INTEGER))OR(vt0.c1)))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))))AND((~ (vt0.c1)))));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))OR(vt0.c1)))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))))AND((~ (vt0.c1)))))AND((- ((- ('-35870832')))))));
SELECT * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (vt1.c0 IN ()) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<((('h') BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (vt1.c0 IN ()) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END)AND(CAST(((19376948) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)))) ORDER BY (('-2076826632')IS NOT((- (vt1.c0)))) ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN 0.5869586636678538 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'870a' ELSE vt1.c0 END)-((((vt1.c0))==((vt1.c0))))) ASC  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY (('-2076826632')IS NOT((- (vt1.c0)))) ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN 0.5869586636678538 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'870a' ELSE vt1.c0 END)-((((vt1.c0))==((vt1.c0))))) ASC  NULLS LAST LIMIT 2;
SELECT * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (vt1.c0 IN ()) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<((('h') BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (vt1.c0 IN ()) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END)AND(CAST(((19376948) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)))) ORDER BY (('-2076826632')IS NOT((- (vt1.c0)))) ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN 0.5869586636678538 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'870a' ELSE vt1.c0 END)-((((vt1.c0))==((vt1.c0))))) ASC  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY (('-2076826632')IS NOT((- (vt1.c0)))) ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN 0.5869586636678538 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'870a' ELSE vt1.c0 END)-((((vt1.c0))==((vt1.c0))))) ASC  NULLS LAST LIMIT 2;
SELECT MAX(vt1.c0) FROM vt1, vt0 WHERE ((((((vt0.c1))>=((vt0.c1))))/(vt0.c0)));
SELECT DISTINCT MAX(vt1.c0) FROM vt1, vt0 WHERE ((((((((vt0.c1))>((vt0.c1))))/(vt0.c0)))AND(((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) IS TRUE)))) LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CHANGES()) ORDER BY vt0.c0 ASC  NULLS LAST, ((((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)))%((vt0.c0 IN (vt0.c0)))) DESC  NULLS FIRST, CASE WHEN ((vt0.c1)<(vt0.c1)) THEN json_patch(vt0.c1, 961685841) ELSE vt0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (CHANGES()) ORDER BY CASE ((((((0.14082895662949868)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))  WHEN (vt0.c0 IN (vt0.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((((((x'ab')AND(0.16125733572124812)))OR('w')))AND(vt0.c0)) THEN (- (vt0.c0)) WHEN (vt0.c1 IN (vt0.c0)) THEN IFNULL(x'7547', vt0.c0) ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END ASC  NULLS FIRST, ((((vt1.c0) IS FALSE)) ISNULL) ASC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN (((('-2066065728') NOTNULL))) AND ((((vt0.c1)&(vt1.c0)))))) ORDER BY CASE ((((((0.14082895662949868)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))  WHEN (vt0.c0 IN (vt0.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((((((x'ab')AND(0.16125733572124812)))OR('w')))AND(vt0.c0)) THEN (- (vt0.c0)) WHEN (vt0.c1 IN (vt0.c0)) THEN IFNULL(x'7547', vt0.c0) ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END ASC  NULLS FIRST, ((((vt1.c0) IS FALSE)) ISNULL) ASC  NULLS FIRST;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|('0.3110011320475896')));
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|('0.3110011320475896')))AND(((CAST(vt1.c0 AS REAL)) IS TRUE)))) ORDER BY (((- (vt1.c0))) ISNULL)  NULLS LAST LIMIT 3 INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE ((((vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((ABS(DISTINCT vt1.c0), (+ (vt1.c0)))))) ORDER BY (((- (vt1.c0))) ISNULL)  NULLS LAST LIMIT 3;
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt1.c0)<=(vt0.c0))))) ORDER BY CASE WHEN ((0xffffffffcdaae263) NOTNULL) THEN LIKE(vt0.c1, vt1.c0, '1') END DESC, (((x'f6' IN (vt0.c1))) IS TRUE) ASC;
SELECT ALL * FROM vt1, vt0 WHERE ((((NOT (((vt1.c0)<=(vt0.c0)))))AND(((((((((CAST(vt0.c1 AS TEXT))AND((- (vt1.c0)))))AND(vt0.c1 COLLATE RTRIM)))AND(((vt1.c0)>=(x'')))))OR((- (vt1.c0))))))) ORDER BY CASE WHEN ((-844438941) NOTNULL) THEN LIKE(vt0.c1, vt1.c0, '1') END DESC, (((x'f6' IN (vt0.c1))) IS TRUE) ASC LIMIT 0 INTERSECT SELECT * FROM vt1, vt0 WHERE (((CASE 0X3d1b3790  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY CASE WHEN ((0Xffffffffcdaae263) NOTNULL) THEN LIKE(vt0.c1, vt1.c0, '1') END DESC, (((x'f6' IN (vt0.c1))) IS TRUE) ASC LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt1.c0)<=(vt0.c0))))) ORDER BY CASE WHEN ((0xffffffffcdaae263) NOTNULL) THEN LIKE(vt0.c1, vt1.c0, '1') END DESC, (((x'f6' IN (vt0.c1))) IS TRUE) ASC;
SELECT ALL * FROM vt1, vt0 WHERE ((((NOT (((vt1.c0)<=(vt0.c0)))))AND(((((((((CAST(vt0.c1 AS TEXT))AND((- (vt1.c0)))))AND(vt0.c1 COLLATE RTRIM)))AND(((vt1.c0)>=(x'')))))OR((- (vt1.c0))))))) ORDER BY CASE WHEN ((-844438941) NOTNULL) THEN LIKE(vt0.c1, vt1.c0, '1') END DESC, (((x'f6' IN (vt0.c1))) IS TRUE) ASC LIMIT 0 INTERSECT SELECT * FROM vt1, vt0 WHERE (((CASE 0X3d1b3790  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY CASE WHEN ((0Xffffffffcdaae263) NOTNULL) THEN LIKE(vt0.c1, vt1.c0, '1') END DESC, (((x'f6' IN (vt0.c1))) IS TRUE) ASC LIMIT 0;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)/(vt1.c0)) AS INTEGER)) ORDER BY CAST(((vt1.c0)<=(vt1.c0)) AS REAL) DESC;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)/(vt1.c0)) AS INTEGER)) ORDER BY (((NOT (vt1.c0))) NOT NULL) ASC, CASE CAST(vt1.c0 AS TEXT)  WHEN ((vt1.c0)<(vt1.c0)) THEN vt1.c0 WHEN TRIM(DISTINCT 0xffffffffe8e2b2a6, vt1.c0) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END  NULLS LAST, vt1.c0 COLLATE BINARY  NULLS LAST LIMIT 2;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (vt1.c0);
SELECT MIN(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0)==(vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ('o'))  NULLS FIRST, (((vt1.c0)) BETWEEN (((- (vt1.c0)))) AND ((x'63cc9e4d'))) DESC LIMIT 0 INTERSECT SELECT MIN(vt1.c0) FROM vt1 WHERE ((vt1.c0 IN ('-683267613')) COLLATE RTRIM) ORDER BY ((((vt1.c0)=(vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ('o'))  NULLS FIRST, (((vt1.c0)) BETWEEN (((- (vt1.c0)))) AND ((x'63cc9e4d'))) DESC LIMIT 0x0;
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (HEX(vt0.c0))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((NOT (HEX(vt0.c0))))AND(CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (vt0.c1 IN (vt0.c1)) THEN LIKELIHOOD(DISTINCT vt0.c0, vt0.c1) ELSE ((vt0.c1)-(vt1.c0)) END)));
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (HEX(vt0.c0))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((NOT (HEX(vt0.c0))))AND(CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (vt0.c1 IN (vt0.c1)) THEN LIKELIHOOD(DISTINCT vt0.c0, vt0.c1) ELSE ((vt0.c1)-(vt1.c0)) END)));
SELECT MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (x'2c'))) ISNULL));
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (x'2c'))) ISNULL)) ORDER BY vt1.c0, (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())  NULLS FIRST LIMIT 0;
SELECT * FROM vt1 WHERE ((+ ((~ (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((+ (vt1.c0)), (~ (vt1.c0)), vt1.c0 COLLATE BINARY)) AND ((CAST(vt1.c0 AS BLOB), vt1.c0, (+ (vt1.c0)))))  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE ((((+ ((~ (vt1.c0)))))AND((((0.10091534141641856, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (vt1.c0 IN (vt1.c0)))) AND (((~ (vt1.c0)), LIKELY(vt1.c0), ((vt1.c0)<(vt1.c0)))))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((+ (vt1.c0)), (~ (vt1.c0)), vt1.c0 COLLATE BINARY)) AND ((CAST(vt1.c0 AS BLOB), vt1.c0, (+ (vt1.c0)))))  NULLS LAST LIMIT 0X6 INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((0.660968332440312))>(((((vt1.c0))!=((vt1.c0))))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((+ (vt1.c0)), (~ (vt1.c0)), vt1.c0 COLLATE BINARY)) AND ((CAST(vt1.c0 AS BLOB), vt1.c0, (+ (vt1.c0)))))  NULLS LAST LIMIT 6;
SELECT * FROM vt1 WHERE ((+ ((~ (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((+ (vt1.c0)), (~ (vt1.c0)), vt1.c0 COLLATE BINARY)) AND ((CAST(vt1.c0 AS BLOB), vt1.c0, (+ (vt1.c0)))))  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE ((((+ ((~ (vt1.c0)))))AND((((0.10091534141641856, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (vt1.c0 IN (vt1.c0)))) AND (((~ (vt1.c0)), LIKELY(vt1.c0), ((vt1.c0)<(vt1.c0)))))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((+ (vt1.c0)), (~ (vt1.c0)), vt1.c0 COLLATE BINARY)) AND ((CAST(vt1.c0 AS BLOB), vt1.c0, (+ (vt1.c0)))))  NULLS LAST LIMIT 0X6 INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((0.660968332440312))>(((((vt1.c0))!=((vt1.c0))))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((+ (vt1.c0)), (~ (vt1.c0)), vt1.c0 COLLATE BINARY)) AND ((CAST(vt1.c0 AS BLOB), vt1.c0, (+ (vt1.c0)))))  NULLS LAST LIMIT 6;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt0.c1 WHERE (vt0.c1);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt0.c1 WHERE (vt0.c1) LIMIT 0X0 INTERSECT SELECT * FROM vt1 INNER JOIN vt0 ON vt0.c1 WHERE (((((NOT (vt1.c0)), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))>=((((((((((vt0.c1)AND('')))OR(vt0.c0)))OR(vt0.c1)))OR(405855460)), vt0.c0 COLLATE BINARY)))) LIMIT 0x0;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt0.c1 WHERE (vt0.c1);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt0.c1 WHERE (vt0.c1) LIMIT 0X0 INTERSECT SELECT * FROM vt1 INNER JOIN vt0 ON vt0.c1 WHERE (((((NOT (vt1.c0)), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))>=((((((((((vt0.c1)AND('')))OR(vt0.c0)))OR(vt0.c1)))OR(405855460)), vt0.c0 COLLATE BINARY)))) LIMIT 0x0;
SELECT ALL MIN(vt1.c0) FROM vt0, vt1 WHERE (CASE json_object(vt0.c0, vt1.c0, vt0.c0, vt0.c1)  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END WHEN ((vt1.c0)>=(vt0.c0)) THEN vt0.c1 WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE ((vt1.c0)|(vt0.c0)) END) ORDER BY UPPER(DISTINCT ((((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c1))), ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (vt0.c0) AND ((((vt0.c0, vt1.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt1.c0))))), (((vt0.c1 IN ()))>=(((vt0.c1) BETWEEN (x'') AND (vt0.c1)))) ASC;
SELECT DISTINCT MIN(vt1.c0) FROM vt0, vt1 WHERE (CASE json_object(vt0.c0, vt1.c0, vt0.c0, vt0.c1)  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END WHEN ((vt1.c0)>=(vt0.c0)) THEN vt0.c1 WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE ((vt1.c0)|(vt0.c0)) END) ORDER BY (((vt0.c1)&(vt0.c1)) IN (TRIM(vt1.c0, vt0.c0))), ((((vt0.c1)AND(((vt0.c0) ISNULL))))OR(vt0.c0)) INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (((vt0.c1)&(vt0.c1)) IN (TRIM(vt1.c0, vt0.c0))), ((((vt0.c1)AND(((vt0.c0) ISNULL))))OR(vt0.c0));
SELECT * FROM vt1 WHERE (QUOTE(vt1.c0));
SELECT DISTINCT * FROM vt1 WHERE (((QUOTE(vt1.c0))AND((((vt1.c0, vt1.c0, vt1.c0, x'', vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)), vt1.c0, ((vt1.c0) NOTNULL), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((vt1.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)), NULL, (((vt1.c0, vt1.c0))==((vt1.c0, vt1.c0))), (vt1.c0 IN (vt1.c0)))))))) ORDER BY (+ ((vt1.c0 IN (vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (QUOTE(vt1.c0));
SELECT DISTINCT * FROM vt1 WHERE (((QUOTE(vt1.c0))AND((((vt1.c0, vt1.c0, vt1.c0, x'', vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)), vt1.c0, ((vt1.c0) NOTNULL), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((vt1.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)), NULL, (((vt1.c0, vt1.c0))==((vt1.c0, vt1.c0))), (vt1.c0 IN (vt1.c0)))))))) ORDER BY (+ ((vt1.c0 IN (vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (NULL);
SELECT * FROM vt1 WHERE (NULL) ORDER BY vt1.c0  NULLS LAST;
SELECT * FROM vt1 WHERE (NULL);
SELECT * FROM vt1 WHERE (NULL) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (json_type(vt0.c0) COLLATE RTRIM);
SELECT MIN(vt0.c1) FROM vt1, vt0 WHERE (json_type(vt0.c0) COLLATE RTRIM);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT NULL))%(CAST('46522376' AS NUMERIC)))) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL), ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT NULL);
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) NOT NULL))%(CAST('46522376' AS NUMERIC))))AND(896651637 COLLATE RTRIM))) ORDER BY ((0Xffffffff8814ca1a) NOT NULL)  NULLS FIRST, (0X277d94fc IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC LIMIT 0X2;
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT NULL))%(CAST('46522376' AS NUMERIC)))) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL), ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT NULL);
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) NOT NULL))%(CAST('46522376' AS NUMERIC))))AND(896651637 COLLATE RTRIM))) ORDER BY ((0Xffffffff8814ca1a) NOT NULL)  NULLS FIRST, (0X277d94fc IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC LIMIT 0X2;
SELECT * FROM vt1 WHERE (highlight(NULL, (((vt1.c0, '216720536')) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))), ((vt1.c0) NOT NULL), (- (vt1.c0))));
SELECT DISTINCT * FROM vt1 WHERE (highlight(NULL, (((vt1.c0, '216720536')) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))), ((vt1.c0) NOT NULL), (- (vt1.c0)))) ORDER BY vt1.c0 COLLATE BINARY ASC INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS INTEGER)))) ORDER BY vt1.c0 COLLATE BINARY ASC;
SELECT * FROM vt1 WHERE (highlight(NULL, (((vt1.c0, '216720536')) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))), ((vt1.c0) NOT NULL), (- (vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN (vt0.c0))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))+(((vt1.c0)OR(vt0.c0))))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN (vt0.c0))) ORDER BY (((~ (vt0.c1))) BETWEEN (((vt1.c0)!=(vt0.c1))) AND (((vt0.c1)%(vt0.c1)))) INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c1)) NOT BETWEEN ((((vt1.c0)+(vt0.c1)), ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))) AND (((- (vt1.c0)), ((vt0.c1) NOT NULL))))) ORDER BY (((~ (vt0.c1))) BETWEEN (((vt1.c0)<>(vt0.c1))) AND (((vt0.c1)%(vt0.c1))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN ('?m') AND (vt0.c0)))IS((NOT (vt0.c1))))) ORDER BY (((((vt1.c0) IS TRUE), CASE WHEN vt0.c1 THEN vt1.c0 WHEN 0.9630867149415058 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))!=((((vt0.c1) IS TRUE), (vt0.c1 IN ())))), (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))|(((vt0.c1) BETWEEN (vt0.c0) AND (0.8535082007983443)))) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0) BETWEEN ('?m') AND (vt0.c0)))IS((NOT (vt0.c1)))))AND(CASE CASE WHEN vt0.c1 THEN 0.9615248988886698 WHEN vt0.c1 THEN '㢲(_ZG0f' WHEN vt0.c1 THEN vt1.c0 END  WHEN CASE WHEN vt1.c0 THEN vt0.c1 END THEN (+ (NULL)) WHEN (((vt0.c1, NULL)) BETWEEN ((vt0.c0, vt1.c0)) AND ((vt0.c0, x'f472d404'))) THEN NULL END))) ORDER BY (~ (((vt0.c0) NOT NULL))) DESC, QUOTE((+ (vt0.c0))) ASC LIMIT 0;
SELECT ALL MIN(vt0.c0) FROM vt0, vt1 WHERE (((COALESCE(0.7342894829125536, vt0.c0, 0.8381764835439557, vt0.c0)) NOTNULL));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 NOT INDEXED, vt1 WHERE (((COALESCE(0.7342894829125536, vt0.c0, 0.8381764835439557, vt0.c0)) NOTNULL)) LIMIT 0;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) ORDER BY CASE WHEN ((vt0.c0)=(vt0.c1)) THEN (vt0.c1 IN (vt0.c1, vt0.c1)) WHEN NULL THEN ((vt0.c0)==(vt0.c1)) WHEN vt0.c1 THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('-662701801')))AND(vt0.c1)) END ASC;
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) ORDER BY ROUND(vt0.c0, vt0.c0 COLLATE BINARY) ASC  NULLS FIRST;
SELECT MIN(vt0.c1) FROM vt1 INNER JOIN vt0 ON NULL WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN ((vt0.c1)&(vt0.c0)) THEN (NOT (vt0.c0)) END);
SELECT DISTINCT MIN(vt0.c1) FROM vt1 INNER JOIN vt0 ON NULL WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN ((vt0.c1)&(vt0.c0)) THEN (NOT (vt0.c0)) END) LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt1 INNER JOIN vt0 ON NULL WHERE (((0.3600785158629738)IS NOT(vt0.c0))) LIMIT 0x0;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END) AND (((vt1.c0) IS FALSE)))) ORDER BY ((NULL)||(vt1.c0)) COLLATE RTRIM, vt0.c1;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END) AND (((vt1.c0) IS FALSE)))) ORDER BY ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (((vt0.c1) NOTNULL)) AND ((vt0.c0 IN (vt1.c0)))) ASC, (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)/(vt1.c0))))) ASC  NULLS FIRST, ((CASE 0.7917606507008284  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN -1.035025036E9 THEN vt0.c0 WHEN vt0.c1 THEN 0.6075412658742781 WHEN vt0.c0 THEN 0.03617990457422937 ELSE vt1.c0 END) AND (CAST(vt0.c0 AS BLOB))) LIMIT 0X2;
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((((NULL, vt1.c0, vt0.c1, vt1.c0, vt1.c0, 'YE')) BETWEEN ((NULL, vt1.c0, vt1.c0, vt0.c1, vt0.c1, vt0.c1)) AND ((0.5492310945968875, vt0.c1, vt0.c0, x'0fe0', vt1.c0, vt1.c0))))>((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((((((NULL, vt1.c0, vt0.c1, vt1.c0, vt1.c0, 'YE')) BETWEEN ((NULL, vt1.c0, vt1.c0, vt0.c1, vt0.c1, vt0.c1)) AND ((0.5492310945968875, vt0.c1, vt0.c0, x'0fe0', vt1.c0, vt1.c0))))>((vt0.c1 IN ()))))AND(489876441))) LIMIT 2 INTERSECT SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ('-397295716') LIMIT 2;
SELECT MAX(vt1.c0) FROM vt1 WHERE (CAST(CAST(0.4594654645110463 AS TEXT) AS REAL));
SELECT MAX(vt1.c0) FROM vt1 WHERE (((CAST(CAST(0.4594654645110463 AS TEXT) AS REAL))AND((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((((((((('-13933748')AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), NULL))))) ORDER BY ((vt1.c0) NOT BETWEEN (0.6938061958757714) AND ((x'' IN ()))) ASC  NULLS FIRST, (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))<=(((vt1.c0 IN (vt1.c0)), CAST(vt1.c0 AS REAL)))) DESC LIMIT 0X2 INTERSECT SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT)) ORDER BY ((vt1.c0) NOT BETWEEN (0.6938061958757714) AND ((x'' IN ()))) ASC  NULLS FIRST, (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))<=(((vt1.c0 IN (vt1.c0)), CAST(vt1.c0 AS REAL)))) DESC LIMIT 0x2;
SELECT COUNT(*) FROM vt1 WHERE (ABS((~ ('Zjꈽ<?R鰸'))));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((ABS((~ ('Zjꈽ<?R鰸'))))AND(CASE WHEN (((vt1.c0))==((vt1.c0))) THEN ((vt1.c0)&(vt1.c0)) WHEN ((vt1.c0)IS(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END))) ORDER BY ((((vt1.c0) IS FALSE))>(CAST(vt1.c0 AS BLOB))) DESC INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((- (vt1.c0)) COLLATE NOCASE) ORDER BY ((((vt1.c0) IS FALSE))>(CAST(vt1.c0 AS BLOB))) DESC;
SELECT * FROM vt0 WHERE (('l>0쨚H' IN (vt0.c0, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT * FROM vt0 WHERE (((('l>0쨚H' IN (vt0.c0, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))AND((NOT (LOWER(vt0.c0)))))) ORDER BY ((((vt0.c0) ISNULL))LIKE((x'857703d8' IN (x'')))) DESC  NULLS LAST LIMIT 2;
SELECT * FROM vt0 WHERE (('l>0쨚H' IN (vt0.c0, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT * FROM vt0 WHERE (((('l>0쨚H' IN (vt0.c0, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))AND((NOT (LOWER(vt0.c0)))))) ORDER BY ((((vt0.c0) ISNULL))LIKE((x'857703d8' IN (x'')))) DESC  NULLS LAST LIMIT 2;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)LIKE(vt0.c0))) ISNULL)) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)LIKE(vt0.c0))) ISNULL)) ORDER BY vt0.c1 DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)<<(vt0.c0)) AS INTEGER));
SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c1)<<(vt0.c0)) AS INTEGER)) ORDER BY vt0.c0 LIMIT 0x1;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)<<(vt0.c0)) AS INTEGER));
SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c1)<<(vt0.c0)) AS INTEGER)) ORDER BY vt0.c0 LIMIT 0x1;
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY vt1.c0, ((((vt1.c0)&(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) DESC;
SELECT DISTINCT * FROM vt1 WHERE (((CAST((vt1.c0 IN ()) AS TEXT))AND(((((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0) ISNULL))))AND(x'a3'))))) ORDER BY vt1.c0, ((((vt1.c0)&(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) DESC LIMIT 0x3;
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY vt1.c0, ((((vt1.c0)&(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) DESC;
SELECT DISTINCT * FROM vt1 WHERE (((CAST((vt1.c0 IN ()) AS TEXT))AND(((((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0) ISNULL))))AND(x'a3'))))) ORDER BY vt1.c0, ((((vt1.c0)&(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) DESC LIMIT 0x3;
SELECT * FROM vt0, vt1 WHERE ((((~ (vt1.c0)))GLOB(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((~ (vt1.c0)))GLOB(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt0.c1 AS TEXT)))) LIMIT 0x2;
SELECT * FROM vt0, vt1 WHERE ((((~ (vt1.c0)))GLOB(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((~ (vt1.c0)))GLOB(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt0.c1 AS TEXT)))) LIMIT 0x2;
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) AS BLOB));
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) AS BLOB))AND((NOT (NULLIF(DISTINCT vt0.c1, vt0.c1)))))) ORDER BY x'43', ((((vt1.c0)-(vt1.c0)))!=(((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c1)))) ASC INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (((((-6.3084826E8)GLOB(vt1.c0)))+(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY x'43', ((((vt1.c0)-(vt1.c0)))!=(((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c1)))) ASC;
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) AS BLOB));
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) AS BLOB))AND((NOT (NULLIF(DISTINCT vt0.c1, vt0.c1)))))) ORDER BY x'43', ((((vt1.c0)-(vt1.c0)))!=(((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c1)))) ASC INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (((((-6.3084826E8)GLOB(vt1.c0)))+(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY x'43', ((((vt1.c0)-(vt1.c0)))!=(((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c1)))) ASC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)!=(vt0.c1)) COLLATE BINARY) ORDER BY ((((((vt0.c1 COLLATE RTRIM)AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c1) IS FALSE))))OR(NULL)) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c1)) COLLATE BINARY)AND(((((vt0.c1)LIKE(vt0.c0)))+(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) ORDER BY ((((((vt0.c1 COLLATE RTRIM)AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c1) IS FALSE))))OR(NULL)) ASC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)!=(vt0.c1)) COLLATE BINARY) ORDER BY ((((((vt0.c1 COLLATE RTRIM)AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c1) IS FALSE))))OR(NULL)) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c1)) COLLATE BINARY)AND(((((vt0.c1)LIKE(vt0.c0)))+(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) ORDER BY ((((((vt0.c1 COLLATE RTRIM)AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c1) IS FALSE))))OR(NULL)) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))))) ORDER BY (- (((vt1.c0)|(vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))))) ORDER BY (- (((vt1.c0)|(vt1.c0)))) INTERSECT SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (- (((vt1.c0)|(vt1.c0))));
SELECT MIN(vt1.c0) FROM vt1 WHERE ((((vt1.c0)<<(vt1.c0)) IN ((- (vt1.c0)), ((vt1.c0) NOTNULL), ((((((((vt1.c0)AND(66952730)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CASE NULL  WHEN (((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) THEN ((vt1.c0) NOT BETWEEN (0x7db981cc) AND (vt1.c0)) WHEN (((vt1.c0))=((vt1.c0))) THEN CAST(vt1.c0 AS REAL) WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END ELSE (('-1273267315')/(vt1.c0)) END ASC  NULLS LAST, (NOT (CAST(vt1.c0 AS TEXT)))  NULLS LAST, IFNULL(CHANGES(), vt1.c0) DESC;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ((((vt1.c0)<<(vt1.c0)) IN ((- (vt1.c0)), ((vt1.c0) NOTNULL), ((((((((vt1.c0)AND(0x3fd9e1a)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CASE NULL  WHEN (((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) THEN ((vt1.c0) NOT BETWEEN (0X7db981cc) AND (vt1.c0)) WHEN (((vt1.c0))==((vt1.c0))) THEN CAST(vt1.c0 AS REAL) WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END ELSE (('-1273267315')/(vt1.c0)) END ASC  NULLS LAST, (NOT (CAST(vt1.c0 AS TEXT)))  NULLS LAST, IFNULL(CHANGES(), vt1.c0) DESC;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS REAL)) ISNULL)) ORDER BY ((vt0.c0) IS TRUE) DESC  NULLS LAST, vt1.c0, (~ (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt1.c0 END)) ASC;
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((((CAST(vt1.c0 AS REAL)) ISNULL))AND(CAST(NULL AS REAL)))) ORDER BY CASE WHEN NULL THEN ((vt0.c0)GLOB(vt0.c1)) WHEN ((vt1.c0) NOTNULL) THEN CAST(vt0.c1 AS TEXT) ELSE ((vt0.c1)==(vt0.c0)) END LIMIT 0;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS REAL)) ISNULL)) ORDER BY ((vt0.c0) IS TRUE) DESC  NULLS LAST, vt1.c0, (~ (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt1.c0 END)) ASC;
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((((CAST(vt1.c0 AS REAL)) ISNULL))AND(CAST(NULL AS REAL)))) ORDER BY CASE WHEN NULL THEN ((vt0.c0)GLOB(vt0.c1)) WHEN ((vt1.c0) NOTNULL) THEN CAST(vt0.c1 AS TEXT) ELSE ((vt0.c1)==(vt0.c0)) END LIMIT 0;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER) ASC, vt0.c0 ASC  NULLS LAST, (((LIKE(vt0.c0, vt0.c1, '0'), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'1e', vt0.c0, '淬a/d'))), ((vt0.c0) NOT NULL)))=((vt0.c0, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c1)LIKE(vt0.c0))))) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(((((vt0.c1) NOTNULL)) BETWEEN ((+ (vt0.c1))) AND (UNICODE(vt0.c0)))))) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER) ASC, vt0.c0 ASC  NULLS LAST, (((LIKE(vt0.c0, vt0.c1, '0'), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'1e', vt0.c0, '淬a/d'))), ((vt0.c0) NOT NULL)))==((vt0.c0, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c1)LIKE(vt0.c0))))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1)IS(vt0.c0))))<>((UNLIKELY(DISTINCT vt0.c0), vt0.c1 COLLATE NOCASE)))) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER) ASC, vt0.c0 ASC  NULLS LAST, (((LIKE(vt0.c0, vt0.c1, '0'), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'1e', vt0.c0, '淬a/d'))), ((vt0.c0) NOT NULL)))=((vt0.c0, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c1)LIKE(vt0.c0))))) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL MAX(vt1.c0) FROM vt0 NATURAL JOIN vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY (NOT (UNLIKELY(vt1.c0)))  NULLS FIRST, (((+ (vt0.c0)))*((NOT (vt0.c1))));
SELECT DISTINCT MAX(vt1.c0) FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE RTRIM)AND(((UPPER(vt1.c0)) BETWEEN (((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0))) AND ((0Xfffffffff3aa92d1 IN ())))))) ORDER BY vt0.c0 DESC  NULLS FIRST, '-745831232' INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c1 AS BLOB))) AND ((((vt0.c0)>(vt1.c0)))))) ORDER BY vt0.c0 DESC  NULLS FIRST, '-745831232';
SELECT COUNT(*) FROM vt0 WHERE (0.8953898786683685);
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((0.8953898786683685)AND(((INSTR(vt0.c1, 'ML
{Iral')) IS FALSE)))) LIMIT 0X2 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN ((vt0.c1) ISNULL) THEN vt0.c1 WHEN CASE WHEN vt0.c1 THEN -2121417847 ELSE vt0.c1 END THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((-1555868435))) WHEN ((NULL)|(vt0.c0)) THEN x'' WHEN (vt0.c0 IN (vt0.c1)) THEN ABS(DISTINCT vt0.c1) ELSE vt0.c1 COLLATE NOCASE END) LIMIT 2;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (- (((vt1.c0) BETWEEN (0.9427371058946863) AND (vt1.c0)))) ASC, ((CAST(vt1.c0 AS INTEGER))||(vt1.c0));
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE) NOTNULL))AND((((vt1.c0) NOT NULL) IN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))))) ORDER BY vt1.c0  NULLS FIRST, (((vt1.c0)<>(vt1.c0)) IN (vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (0.9380310740022398)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (- (((vt1.c0) BETWEEN (0.9427371058946863) AND (vt1.c0)))) ASC, ((CAST(vt1.c0 AS INTEGER))||(vt1.c0));
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE) NOTNULL))AND((((vt1.c0) NOT NULL) IN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))))) ORDER BY vt1.c0  NULLS FIRST, (((vt1.c0)<>(vt1.c0)) IN (vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (0.9380310740022398)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (LIKELY(((vt0.c0)LIKE(0.18157250727613505)))) ORDER BY ((((vt0.c1)|(vt0.c1))) BETWEEN (0.9415285132504856 COLLATE RTRIM) AND ((((vt0.c0)) NOT BETWEEN ((0.7326423626057829)) AND (('2051747104'))))) ASC;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (LIKELY(((vt0.c0)LIKE(0.18157250727613505)))) ORDER BY ((((vt0.c1)|(vt0.c1))) BETWEEN (0.9415285132504856 COLLATE RTRIM) AND ((((vt0.c0)) NOT BETWEEN ((0.7326423626057829)) AND (('2051747104'))))) ASC INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((~ ((vt0.c0 IN (vt0.c1, vt0.c1))))) ORDER BY ((((vt0.c1)|(vt0.c1))) BETWEEN (0.9415285132504856 COLLATE RTRIM) AND ((((vt0.c0)) NOT BETWEEN ((0.7326423626057829)) AND (('2051747104'))))) ASC;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ((- (CASE vt1.c0  WHEN x'' THEN 0.03760970430820065 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE ((((- (CASE vt1.c0  WHEN x'' THEN 0.03760970430820065 WHEN vt1.c0 THEN vt1.c0 END)))AND((NOT (vt1.c0)) COLLATE RTRIM))) ORDER BY TYPEOF(MAX(vt1.c0, vt1.c0))  NULLS FIRST, TRIM(DISTINCT '1|') ASC, ((((x'41')AND((vt1.c0 IN ()))))OR((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))  NULLS LAST INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (CASE ((vt1.c0)<(vt1.c0))  WHEN (((x'36'))<=((vt1.c0))) THEN (((vt1.c0, NULL)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END END) ORDER BY TYPEOF(MAX(vt1.c0, vt1.c0))  NULLS FIRST, TRIM(DISTINCT '1|') ASC, ((((x'41')AND((vt1.c0 IN ()))))OR((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c1 DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ('499733756') ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c1 DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ('499733756') ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE (((ABS(DISTINCT vt0.c0))&(0.36687958462317016 COLLATE NOCASE))) ORDER BY ((((vt1.c0) IS TRUE))LIKE((vt0.c1 IN (vt1.c0, vt0.c0)))) ASC  NULLS LAST, 0.3075481578950434 ASC  NULLS FIRST, CASE -1.464712341E9  WHEN (~ (vt1.c0)) THEN ((vt1.c0) IS TRUE) WHEN (('-587666667')GLOB(vt0.c0)) THEN (vt1.c0 IN (vt1.c0, vt0.c0, vt0.c0)) WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c1)) WHEN vt0.c0 THEN vt1.c0 END DESC;
SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (((ABS(DISTINCT vt0.c0))&(0.36687958462317016 COLLATE NOCASE))) ORDER BY ((((vt1.c0) IS TRUE))LIKE((vt0.c1 IN (vt1.c0, vt0.c0)))) ASC  NULLS LAST, 0.3075481578950434 ASC  NULLS FIRST, CASE -1.464712341E9  WHEN (~ (vt1.c0)) THEN ((vt1.c0) IS TRUE) WHEN (('-587666667')GLOB(vt0.c0)) THEN (vt1.c0 IN (vt1.c0, vt0.c0, vt0.c0)) WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c1)) WHEN vt0.c0 THEN vt1.c0 END DESC LIMIT 1;
SELECT MAX(vt1.c0) FROM vt1 WHERE (vt1.c0);
SELECT MAX(vt1.c0) FROM vt1 WHERE (((vt1.c0)AND(TIME(0Xffffffffcda94343, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((4.99733756E8)%(vt1.c0)), ((vt1.c0)<=(0.9407838534435002)), ((vt1.c0) ISNULL), vt1.c0 COLLATE BINARY, ((vt1.c0)>>(vt1.c0)))))) LIMIT 0 INTERSECT SELECT MAX(vt1.c0) FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))<>((((vt1.c0)IS(vt1.c0)))))) LIMIT 0x0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON 0.7846836892075002 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON 0.7846836892075002 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB)) ORDER BY 1.461806257E9 DESC  NULLS FIRST LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON 0.7846836892075002 WHERE (QUOTE(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)) ORDER BY 1.461806257E9 DESC  NULLS FIRST LIMIT 3;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON 0.7846836892075002 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON 0.7846836892075002 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB)) ORDER BY 1.461806257E9 DESC  NULLS FIRST LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON 0.7846836892075002 WHERE (QUOTE(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)) ORDER BY 1.461806257E9 DESC  NULLS FIRST LIMIT 3;
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)) IN ((~ (vt0.c1)), (((vt0.c0, vt1.c0)) NOT BETWEEN ((NULL, vt1.c0)) AND ((vt0.c1, vt0.c0))), CASE WHEN x'9070289f' THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (- ('v1l1{rd&}j}'))  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)) IN ((~ (vt0.c1)), (((vt0.c0, vt1.c0)) NOT BETWEEN ((NULL, vt1.c0)) AND ((vt0.c1, vt0.c0))), CASE WHEN x'9070289f' THEN vt0.c1 ELSE vt0.c1 END)))AND(rtreenode((- (vt0.c0)), ((vt1.c0) IS TRUE))))) ORDER BY ((0.2873351322418065) ISNULL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (LIKELY(((vt1.c0)GLOB(vt0.c1)))) ORDER BY (NOT ((NOT (vt0.c1))))  NULLS FIRST, vt0.c1;
SELECT ALL * FROM vt0, vt1 WHERE (((LIKELY(((vt1.c0)GLOB(vt0.c1))))AND((((vt0.c0, vt0.c1)) NOT BETWEEN (((+ (vt0.c1)), ((vt1.c0)OR(vt0.c1)))) AND ((((vt0.c1)==(vt0.c0)), (NOT (vt1.c0)))))))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) ASC  NULLS FIRST, (((vt0.c1)) BETWEEN ((ROUND(vt1.c0, vt1.c0))) AND (((vt0.c1 IN (vt0.c1))))) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) ASC  NULLS FIRST, (((vt0.c1)) BETWEEN ((ROUND(vt1.c0, vt1.c0))) AND (((vt0.c1 IN (vt0.c1))))) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0, vt1 WHERE (LIKELY(((vt1.c0)GLOB(vt0.c1)))) ORDER BY (NOT ((NOT (vt0.c1))))  NULLS FIRST, vt0.c1;
SELECT ALL * FROM vt0, vt1 WHERE (((LIKELY(((vt1.c0)GLOB(vt0.c1))))AND((((vt0.c0, vt0.c1)) NOT BETWEEN (((+ (vt0.c1)), ((vt1.c0)OR(vt0.c1)))) AND ((((vt0.c1)==(vt0.c0)), (NOT (vt1.c0)))))))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) ASC  NULLS FIRST, (((vt0.c1)) BETWEEN ((ROUND(vt1.c0, vt1.c0))) AND (((vt0.c1 IN (vt0.c1))))) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) ASC  NULLS FIRST, (((vt0.c1)) BETWEEN ((ROUND(vt1.c0, vt1.c0))) AND (((vt0.c1 IN (vt0.c1))))) DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM vt0 WHERE (((((((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c1)+(vt0.c1)))))OR((vt0.c1 IN (vt0.c0)))))AND(x'68'))) ORDER BY '[' ASC  NULLS FIRST, (((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))))/(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((((((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c1)+(vt0.c1)))))OR((vt0.c1 IN (vt0.c0)))))AND(x'68')))AND(CAST(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) AS BLOB)))) ORDER BY '[' ASC  NULLS FIRST, (((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))))/(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) LIMIT 0x0 INTERSECT SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN (vt0.c1 IN ()) THEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END) ORDER BY '[' ASC  NULLS FIRST, (((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))))/(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) LIMIT 0;
SELECT * FROM vt0 WHERE (((((((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c1)+(vt0.c1)))))OR((vt0.c1 IN (vt0.c0)))))AND(x'68'))) ORDER BY '[' ASC  NULLS FIRST, (((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))))/(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((((((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c1)+(vt0.c1)))))OR((vt0.c1 IN (vt0.c0)))))AND(x'68')))AND(CAST(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) AS BLOB)))) ORDER BY '[' ASC  NULLS FIRST, (((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))))/(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) LIMIT 0x0 INTERSECT SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN (vt0.c1 IN ()) THEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END) ORDER BY '[' ASC  NULLS FIRST, (((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))))/(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)-(NULL)) IN ()));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt1.c0)-(NULL)) IN ()))AND(((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(NULL))))))) ORDER BY NULLIF(x'bfca', ABS(vt1.c0)), ((vt0.c1) IS TRUE)  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY NULLIF(x'bfca', ABS(vt1.c0)), ((vt0.c1) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)-(NULL)) IN ()));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt1.c0)-(NULL)) IN ()))AND(((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(NULL))))))) ORDER BY NULLIF(x'bfca', ABS(vt1.c0)), ((vt0.c1) IS TRUE)  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY NULLIF(x'bfca', ABS(vt1.c0)), ((vt0.c1) IS TRUE)  NULLS FIRST;
SELECT MAX(vt1.c0) FROM vt1, vt0 WHERE ((((((((((((+ (vt0.c0)))AND(vt0.c1 COLLATE RTRIM)))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))OR(((vt0.c0)/(vt0.c1)))))AND((+ (vt0.c0))))) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END, (('#8')<=(vt1.c0))))>((((((vt0.c1)AND(-2.06925103E8)))AND(vt1.c0)), (vt1.c0 IN (vt0.c1, vt1.c0)))))  NULLS LAST, ('*<v*' IN (vt1.c0 COLLATE BINARY, CAST(vt0.c1 AS NUMERIC)));
SELECT DISTINCT MAX(vt1.c0) FROM vt1, vt0 WHERE ((((((((((((+ (vt0.c0)))AND(vt0.c1 COLLATE RTRIM)))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))OR(((vt0.c0)/(vt0.c1)))))AND((+ (vt0.c0))))) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END, (('#8')<=(vt1.c0))))>((((((vt0.c1)AND(-2.06925103E8)))AND(vt1.c0)), (vt1.c0 IN (vt0.c1, vt1.c0)))))  NULLS LAST, ('*<v*' IN (vt1.c0 COLLATE BINARY, CAST(vt0.c1 AS NUMERIC))) LIMIT 0X1;
SELECT * FROM vt0, vt1 WHERE (vt0.c1 COLLATE BINARY) ORDER BY 0.7258545498621932 DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c1 COLLATE BINARY)AND(((((vt0.c1, vt0.c1))==((vt1.c0, vt0.c1))) IN ())))) ORDER BY vt1.c0  NULLS LAST, ((((((vt0.c0) BETWEEN ('0.8793161265486631') AND (vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR((((x'', vt0.c0))>=((vt0.c1, vt0.c1))))), 0.9679556189657339, (((vt0.c1)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE))) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM vt0, vt1 WHERE ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END))<((vt0.c0)))) ORDER BY vt1.c0  NULLS LAST, ((((((vt0.c0) BETWEEN ('0.8793161265486631') AND (vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR((((x'', vt0.c0))>=((vt0.c1, vt0.c1))))), 0.9679556189657339, (((vt0.c1)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE))) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (vt0.c1 COLLATE BINARY) ORDER BY 0.7258545498621932 DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c1 COLLATE BINARY)AND(((((vt0.c1, vt0.c1))==((vt1.c0, vt0.c1))) IN ())))) ORDER BY vt1.c0  NULLS LAST, ((((((vt0.c0) BETWEEN ('0.8793161265486631') AND (vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR((((x'', vt0.c0))>=((vt0.c1, vt0.c1))))), 0.9679556189657339, (((vt0.c1)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE))) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM vt0, vt1 WHERE ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END))<((vt0.c0)))) ORDER BY vt1.c0  NULLS LAST, ((((((vt0.c0) BETWEEN ('0.8793161265486631') AND (vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR((((x'', vt0.c0))>=((vt0.c1, vt0.c1))))), 0.9679556189657339, (((vt0.c1)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0, '>%>')) BETWEEN ((((vt0.c1)*(vt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) NOTNULL), vt0.c1 COLLATE RTRIM))));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, '>%>')) BETWEEN ((((vt0.c1)*(vt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) NOTNULL), vt0.c1 COLLATE RTRIM)))) ORDER BY (((((vt0.c1)>>(''))))<>((CAST(vt0.c0 AS REAL))))  NULLS LAST, ((((vt0.c1)IS(vt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS FIRST, ((((vt0.c1)<=(vt0.c0))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT * FROM vt0 WHERE ((((vt0.c0, '>%>')) BETWEEN ((((vt0.c1)*(vt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) NOTNULL), vt0.c1 COLLATE RTRIM))));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, '>%>')) BETWEEN ((((vt0.c1)*(vt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) NOTNULL), vt0.c1 COLLATE RTRIM)))) ORDER BY (((((vt0.c1)>>(''))))<>((CAST(vt0.c0 AS REAL))))  NULLS LAST, ((((vt0.c1)IS(vt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS FIRST, ((((vt0.c1)<=(vt0.c0))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ('-1725872725');
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((('-1725872725')AND(((((vt0.c1)IS(vt0.c0))) BETWEEN ((- (''))) AND (vt0.c1 COLLATE RTRIM))))) ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END IN ()) INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((((vt0.c1) NOTNULL)) NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c1)LIKE(vt0.c0))))) ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END IN ());
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 IN (vt0.c0, vt0.c0)) IN ((NOT (x''))))) ORDER BY (((- (vt0.c0)))!=(INSTR(NULL, vt0.c0)));
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0 IN (vt0.c0, vt0.c0)) IN ((NOT (x'')))))AND(((CAST(vt0.c1 AS TEXT))<<(vt0.c1))))) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 IN (vt0.c0, vt0.c0)) IN ((NOT (x''))))) ORDER BY (((- (vt0.c0)))!=(INSTR(NULL, vt0.c0)));
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0 IN (vt0.c0, vt0.c0)) IN ((NOT (x'')))))AND(((CAST(vt0.c1 AS TEXT))<<(vt0.c1))))) ORDER BY x''  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((((((vt0.c0) NOT NULL)))>=(((NOT (vt0.c1)))))) ORDER BY vt0.c1 ASC, ((~ (vt0.c0)) IN ()) ASC;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((((((((vt0.c0) NOT NULL)))>(((NOT (vt0.c1))))))AND(-521204902))) ORDER BY vt0.c1 ASC, ((~ (vt0.c0)) IN ()) ASC;
SELECT * FROM vt1 WHERE (((ROUND(vt1.c0, vt1.c0))*((vt1.c0 IN (0.2165590122301665, vt1.c0, vt1.c0))))) ORDER BY ((((vt1.c0)<=(vt1.c0))) ISNULL) ASC;
SELECT DISTINCT * FROM vt1 WHERE (((ROUND(vt1.c0, vt1.c0))*((vt1.c0 IN (0.2165590122301665, vt1.c0, vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER), (((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))), ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) AND ((MAX(vt1.c0, '-920362703', vt1.c0), NULL, (+ (vt1.c0))))) DESC;
SELECT * FROM vt1 WHERE (((ROUND(vt1.c0, vt1.c0))*((vt1.c0 IN (0.2165590122301665, vt1.c0, vt1.c0))))) ORDER BY ((((vt1.c0)<=(vt1.c0))) ISNULL) ASC;
SELECT DISTINCT * FROM vt1 WHERE (((ROUND(vt1.c0, vt1.c0))*((vt1.c0 IN (0.2165590122301665, vt1.c0, vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER), (((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))), ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) AND ((MAX(vt1.c0, '-920362703', vt1.c0), NULL, (+ (vt1.c0))))) DESC;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN (((vt1.c0))<((vt0.c1))) ELSE NULL END);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN (((vt1.c0))<((vt0.c1))) ELSE NULL END)AND(LIKELIHOOD(DISTINCT ABS(DISTINCT vt0.c1), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, CASE WHEN vt0.c1 THEN vt1.c0 WHEN '\2' THEN vt0.c0 ELSE vt1.c0 END, (+ (vt1.c0)))) AND (((((vt1.c0, 0.7697744092903743))<((vt1.c0, NULL))), ((vt0.c0)<=(vt1.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC  NULLS FIRST, CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0) NOTNULL) ELSE x'59ca61c2' END ASC LIMIT 0 INTERSECT SELECT * FROM vt1, vt0 WHERE (COALESCE(vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE BINARY) ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, CASE WHEN vt0.c1 THEN vt1.c0 WHEN '\2' THEN vt0.c0 ELSE vt1.c0 END, (+ (vt1.c0)))) AND (((((vt1.c0, 0.7697744092903743))<((vt1.c0, NULL))), ((vt0.c0)<=(vt1.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC  NULLS FIRST, CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0) NOTNULL) ELSE x'59ca61c2' END ASC LIMIT 0;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN (((vt1.c0))<((vt0.c1))) ELSE NULL END);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN (((vt1.c0))<((vt0.c1))) ELSE NULL END)AND(LIKELIHOOD(DISTINCT ABS(DISTINCT vt0.c1), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, CASE WHEN vt0.c1 THEN vt1.c0 WHEN '\2' THEN vt0.c0 ELSE vt1.c0 END, (+ (vt1.c0)))) AND (((((vt1.c0, 0.7697744092903743))<((vt1.c0, NULL))), ((vt0.c0)<=(vt1.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC  NULLS FIRST, CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0) NOTNULL) ELSE x'59ca61c2' END ASC LIMIT 0 INTERSECT SELECT * FROM vt1, vt0 WHERE (COALESCE(vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE BINARY) ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, CASE WHEN vt0.c1 THEN vt1.c0 WHEN '\2' THEN vt0.c0 ELSE vt1.c0 END, (+ (vt1.c0)))) AND (((((vt1.c0, 0.7697744092903743))<((vt1.c0, NULL))), ((vt0.c0)<=(vt1.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC  NULLS FIRST, CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0) NOTNULL) ELSE x'59ca61c2' END ASC LIMIT 0;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt1.c0 WHERE (((CAST(vt0.c0 AS REAL))&(json_patch(vt0.c1, vt0.c0)))) ORDER BY (~ (((vt1.c0)>=(vt0.c1)))) DESC, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((vt1.c0 IN (vt0.c1, vt0.c0)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0.6752533271751281 END, (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (- (x'6e27')), ((vt0.c1)>=(vt0.c1))))) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt1.c0 WHERE (((CAST(vt0.c0 AS REAL))&(json_patch(vt0.c1, vt0.c0)))) ORDER BY ((vt1.c0)%(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)) IN ()) DESC LIMIT 0;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))IS(((vt0.c1) IS TRUE)))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((vt0.c1)%(vt0.c0))) AND (((((((vt0.c1)OR(0.0866033529600222)))OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (((LIKELY(vt0.c1), ((vt0.c0)<(vt0.c0)), (vt0.c0 IN (0.3333750041028619, vt0.c0))))<>((((vt0.c1)IS NOT(vt0.c0)), LIKELY(DISTINCT vt0.c0), ((vt0.c0)IS(vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))IS(((vt0.c1) IS TRUE))))AND(vt0.c1))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((vt0.c1)%(vt0.c0))) AND (((((((vt0.c1)OR(0.0866033529600222)))OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (((LIKELY(vt0.c1), ((vt0.c0)<(vt0.c0)), (vt0.c0 IN (0.3333750041028619, vt0.c0))))!=((((vt0.c1)IS NOT(vt0.c0)), LIKELY(DISTINCT vt0.c0), ((vt0.c0)IS(vt0.c0)))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))IS(((vt0.c1) IS TRUE)))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((vt0.c1)%(vt0.c0))) AND (((((((vt0.c1)OR(0.0866033529600222)))OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (((LIKELY(vt0.c1), ((vt0.c0)<(vt0.c0)), (vt0.c0 IN (0.3333750041028619, vt0.c0))))<>((((vt0.c1)IS NOT(vt0.c0)), LIKELY(DISTINCT vt0.c0), ((vt0.c0)IS(vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))IS(((vt0.c1) IS TRUE))))AND(vt0.c1))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((vt0.c1)%(vt0.c0))) AND (((((((vt0.c1)OR(0.0866033529600222)))OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (((LIKELY(vt0.c1), ((vt0.c0)<(vt0.c0)), (vt0.c0 IN (0.3333750041028619, vt0.c0))))!=((((vt0.c1)IS NOT(vt0.c0)), LIKELY(DISTINCT vt0.c0), ((vt0.c0)IS(vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN json_patch(vt1.c0, 0.5378200515598797) THEN ((vt1.c0)>=(vt1.c0)) END) ORDER BY ((((((((((NULL) ISNULL))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))))OR((('-2130026726') BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((0x71fbc07) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN json_patch(vt1.c0, 0.5378200515598797) THEN ((vt1.c0)>=(vt1.c0)) END) ORDER BY ((((((((((NULL) ISNULL))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))))OR((('-2130026726') BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((0x71fbc07) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM vt1 WHERE (CASE WHEN json_patch(vt1.c0, 0.5378200515598797) THEN ((vt1.c0)>=(vt1.c0)) END) ORDER BY ((((((((((NULL) ISNULL))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))))OR((('-2130026726') BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((0x71fbc07) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((((TRIM(DISTINCT vt1.c0, vt1.c0))OR(vt1.c0)))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((((vt1.c0)OR('-1736929261')))OR(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((TRIM(DISTINCT vt1.c0, vt1.c0))OR(vt1.c0)))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((((vt1.c0)OR('-1736929261')))OR(vt1.c0)))))AND(((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE))) ORDER BY NULL  NULLS LAST, ((vt1.c0 COLLATE NOCASE)<>(((vt1.c0) IS FALSE)))  NULLS LAST, ((((vt1.c0) NOTNULL))<<((((((('-1525311217')AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST, vt1.c0;
SELECT ALL * FROM vt1 WHERE (((((((TRIM(DISTINCT vt1.c0, vt1.c0))OR(vt1.c0)))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((((vt1.c0)OR('-1736929261')))OR(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((TRIM(DISTINCT vt1.c0, vt1.c0))OR(vt1.c0)))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((((vt1.c0)OR('-1736929261')))OR(vt1.c0)))))AND(((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE))) ORDER BY NULL  NULLS LAST, ((vt1.c0 COLLATE NOCASE)<>(((vt1.c0) IS FALSE)))  NULLS LAST, ((((vt1.c0) NOTNULL))<<((((((('-1525311217')AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST, vt1.c0;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0))) IN ())) ORDER BY ((vt0.c0) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c1)IS NOT(vt1.c0)))) DESC, ((vt0.c0)OR(((vt0.c0)<(vt1.c0))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0))) IN ())) ORDER BY LTRIM(((NULL) IS TRUE)) ASC  NULLS LAST, (- ((~ (vt0.c1)))) ASC LIMIT 1 INTERSECT SELECT * FROM vt1, vt0 WHERE (((((((NULL)OR(vt1.c0)))OR(vt0.c0)))+(((vt0.c1) NOTNULL)))) ORDER BY LTRIM(((NULL) IS TRUE)) ASC  NULLS LAST, (- ((~ (vt0.c1)))) ASC LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0))) IN ())) ORDER BY ((vt0.c0) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c1)IS NOT(vt1.c0)))) DESC, ((vt0.c0)OR(((vt0.c0)<(vt1.c0))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0))) IN ())) ORDER BY LTRIM(((NULL) IS TRUE)) ASC  NULLS LAST, (- ((~ (vt0.c1)))) ASC LIMIT 1 INTERSECT SELECT * FROM vt1, vt0 WHERE (((((((NULL)OR(vt1.c0)))OR(vt0.c0)))+(((vt0.c1) NOTNULL)))) ORDER BY LTRIM(((NULL) IS TRUE)) ASC  NULLS LAST, (- ((~ (vt0.c1)))) ASC LIMIT 1;
SELECT MIN(vt0.c0) FROM vt0 WHERE (vt0.c1) ORDER BY CAST(LIKELIHOOD(vt0.c0, vt0.c1) AS NUMERIC)  NULLS LAST;
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((vt0.c1)AND(SUBSTR((((vt0.c1))<((vt0.c1))), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)))) ORDER BY CAST(LIKELIHOOD(vt0.c0, vt0.c1) AS NUMERIC)  NULLS LAST INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB)) ORDER BY CAST(LIKELIHOOD(vt0.c0, vt0.c1) AS NUMERIC)  NULLS LAST;
SELECT MIN(vt0.c1) FROM vt0 WHERE (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) LIMIT 4;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY vt0.c1  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT)) IS FALSE))AND((+ (load_extension(vt0.c1)))))) ORDER BY vt0.c1  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (-291868995) ORDER BY vt0.c1  NULLS FIRST LIMIT 3;
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (vt0.c1);
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (((vt0.c1)AND('K^|'))) ORDER BY (NOT (((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)))), ((((vt0.c0)+(vt0.c0)))%(CASE WHEN vt0.c1 THEN '79509112' WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((vt0.c1 IN ()) COLLATE NOCASE);
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((vt0.c1 IN ()) COLLATE NOCASE) LIMIT 0X0;
SELECT * FROM vt0, vt1 WHERE ((vt0.c1 IN ()) COLLATE NOCASE);
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((vt0.c1 IN ()) COLLATE NOCASE) LIMIT 0X0;
SELECT ALL * FROM vt1, vt0 WHERE (((~ (vt0.c1)) IN (((vt0.c0) NOT NULL))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((~ (vt0.c1)) IN (((vt0.c0) NOT NULL)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)))) AND (((((vt0.c0))<((vt1.c0))))))) LIMIT 0X1;
SELECT ALL * FROM vt1, vt0 WHERE (((~ (vt0.c1)) IN (((vt0.c0) NOT NULL))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((~ (vt0.c1)) IN (((vt0.c0) NOT NULL)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)))) AND (((((vt0.c0))<((vt1.c0))))))) LIMIT 0X1;
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (((((vt1.c0)<=(NULL)))<<(vt0.c0 COLLATE BINARY)));
SELECT DISTINCT MIN(vt0.c1) FROM vt0, vt1 WHERE (((((((vt1.c0)<(NULL)))<<(vt0.c0 COLLATE BINARY)))AND(NULL)));
SELECT * FROM vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(vt1.c0)) ORDER BY ((((vt1.c0) NOT NULL)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((('?', vt1.c0))<=((vt0.c0, vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(vt1.c0)) ORDER BY ((0.8617019709182995)<>(((vt0.c1) IS FALSE))) DESC  NULLS FIRST, ((((((((vt0.c0) NOTNULL))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END)))OR(((vt1.c0)>>(vt0.c1)))))AND(((vt0.c0)<>(vt1.c0))))  NULLS LAST INTERSECT SELECT * FROM vt0, vt1 WHERE (((0.1562437701585092 COLLATE RTRIM)+(' ?Mﶲ䩪6W.ⅴ' COLLATE RTRIM))) ORDER BY ((0.8617019709182995)!=(((vt0.c1) IS FALSE))) DESC  NULLS FIRST, ((((((((vt0.c0) NOTNULL))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END)))OR(((vt1.c0)>>(vt0.c1)))))AND(((vt0.c0)!=(vt1.c0))))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(vt1.c0)) ORDER BY ((((vt1.c0) NOT NULL)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((('?', vt1.c0))<=((vt0.c0, vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(vt1.c0)) ORDER BY ((0.8617019709182995)<>(((vt0.c1) IS FALSE))) DESC  NULLS FIRST, ((((((((vt0.c0) NOTNULL))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END)))OR(((vt1.c0)>>(vt0.c1)))))AND(((vt0.c0)<>(vt1.c0))))  NULLS LAST INTERSECT SELECT * FROM vt0, vt1 WHERE (((0.1562437701585092 COLLATE RTRIM)+(' ?Mﶲ䩪6W.ⅴ' COLLATE RTRIM))) ORDER BY ((0.8617019709182995)!=(((vt0.c1) IS FALSE))) DESC  NULLS FIRST, ((((((((vt0.c0) NOTNULL))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END)))OR(((vt1.c0)>>(vt0.c1)))))AND(((vt0.c0)!=(vt1.c0))))  NULLS LAST;
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE (CASE ((vt1.c0)<>(vt0.c1))  WHEN vt0.c1 COLLATE BINARY THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN vt0.c0 COLLATE NOCASE THEN '' WHEN x'' COLLATE RTRIM THEN vt0.c0 COLLATE NOCASE WHEN (vt1.c0 IN (vt0.c0)) THEN ((vt0.c0)*(vt0.c1)) WHEN ((x'b9')>=(vt1.c0)) THEN (vt0.c1 IN (vt0.c0, vt0.c0)) WHEN ((NULL)+(vt0.c1)) THEN (NOT (vt0.c0)) ELSE ((((vt0.c1)AND(vt0.c0)))AND('볿ἃ0')) END) ORDER BY ((((vt0.c0) NOT NULL))AND(vt1.c0)) DESC, (((vt0.c1 IN (vt0.c1)))<(vt0.c1)) DESC, CAST(((vt0.c0)IS NOT(vt0.c1)) AS NUMERIC)  NULLS FIRST, ((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c1)) COLLATE BINARY;
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE (((CASE ((vt1.c0)!=(vt0.c1))  WHEN vt0.c1 COLLATE BINARY THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN vt0.c0 COLLATE NOCASE THEN '' WHEN x'' COLLATE RTRIM THEN vt0.c0 COLLATE NOCASE WHEN (vt1.c0 IN (vt0.c0)) THEN ((vt0.c0)*(vt0.c1)) WHEN ((x'b9')>=(vt1.c0)) THEN (vt0.c1 IN (vt0.c0, vt0.c0)) WHEN ((NULL)+(vt0.c1)) THEN (NOT (vt0.c0)) ELSE ((((vt0.c1)AND(vt0.c0)))AND('볿ἃ0')) END)AND((((UPPER(vt0.c0)))<=((vt0.c0 COLLATE NOCASE)))))) ORDER BY ((((vt0.c0) NOT NULL))AND(vt1.c0)) DESC, (((vt0.c1 IN (vt0.c1)))<(vt0.c1)) DESC, CAST(((vt0.c0)IS NOT(vt0.c1)) AS NUMERIC)  NULLS FIRST, ((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c1)) COLLATE BINARY LIMIT 0x2 INTERSECT SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE (((((((((((((((vt1.c0)>(vt0.c0)))AND(0.49552732214992046)))AND(((vt0.c0)<<(vt1.c0)))))AND(TIME(vt0.c1, vt0.c0, vt0.c0))))OR((- (vt0.c1)))))AND(((vt1.c0)>=(vt0.c1)))))AND(((vt0.c0)-(vt1.c0))))) ORDER BY ((((vt0.c0) NOT NULL))AND(vt1.c0)) DESC, (((vt0.c1 IN (vt0.c1)))<(vt0.c1)) DESC, CAST(((vt0.c0)IS NOT(vt0.c1)) AS NUMERIC)  NULLS FIRST, ((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c1)) COLLATE BINARY LIMIT 2;
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE ((CAST(vt0.c1 AS TEXT) IN ((+ (vt0.c0))))) ORDER BY ('-1525311217' IN (vt0.c1 COLLATE RTRIM, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE ((((CAST(vt0.c1 AS TEXT) IN ((+ (vt0.c0)))))AND((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END IN ((vt0.c1 IN ())))))) ORDER BY TYPEOF(DISTINCT HEX(vt0.c1)) DESC, (+ (TRIM(vt0.c0))) ASC  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)<=((vt0.c0 IN ('줶v'))))) ORDER BY ((((((((((vt0.c0)OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)-(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('0.615831041845181')))))OR(vt0.c1)) ASC, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c1)))) AND (((vt0.c1 IN (vt0.c0))))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)<=((vt0.c0 IN ('줶v'))))) ORDER BY ((((vt0.c0) NOT NULL))>>(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' ELSE vt0.c1 END)), CAST(((vt0.c1) IS FALSE) AS REAL)  NULLS FIRST LIMIT 0X0 INTERSECT SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.08416694109774536 WHEN vt1.c0 THEN '-72294278' WHEN vt0.c0 THEN 0Xffffffffd435a799 WHEN vt1.c0 THEN vt0.c1 END) NOT BETWEEN (((vt0.c0)|(vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c0) NOT NULL))>>(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' ELSE vt0.c1 END)), CAST(((vt0.c1) IS FALSE) AS REAL)  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)<=((vt0.c0 IN ('줶v'))))) ORDER BY ((((((((((vt0.c0)OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)-(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('0.615831041845181')))))OR(vt0.c1)) ASC, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c1)))) AND (((vt0.c1 IN (vt0.c0))))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)<=((vt0.c0 IN ('줶v'))))) ORDER BY ((((vt0.c0) NOT NULL))>>(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' ELSE vt0.c1 END)), CAST(((vt0.c1) IS FALSE) AS REAL)  NULLS FIRST LIMIT 0X0 INTERSECT SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.08416694109774536 WHEN vt1.c0 THEN '-72294278' WHEN vt0.c0 THEN 0Xffffffffd435a799 WHEN vt1.c0 THEN vt0.c1 END) NOT BETWEEN (((vt0.c0)|(vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c0) NOT NULL))>>(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' ELSE vt0.c1 END)), CAST(((vt0.c1) IS FALSE) AS REAL)  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1))) NOTNULL)) ORDER BY ((NULL) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (NULL)) ASC, CAST((~ (vt0.c1)) AS BLOB)  NULLS FIRST, ((CAST(vt1.c0 AS REAL))/(((vt1.c0)GLOB(vt0.c0)))) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1))) NOTNULL))AND(vt1.c0))) ORDER BY ((NULL) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (NULL)) ASC, CAST((~ (vt0.c1)) AS BLOB)  NULLS FIRST, ((CAST(vt1.c0 AS REAL))/(((vt1.c0)GLOB(vt0.c0)))) ASC  NULLS LAST LIMIT 0x1;
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS TEXT))<(NULLIF(vt1.c0, vt0.c1))));
SELECT DISTINCT MAX(vt0.c1) FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS TEXT))<(NULLIF(vt1.c0, vt0.c1)))) LIMIT 0X4;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (0.1394154530856765))))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (vt1.c0) AND ((- (vt1.c0)))) ASC  NULLS LAST, ((vt1.c0 IN (vt1.c0)) IN ()) DESC  NULLS FIRST, MIN(((vt1.c0) NOTNULL), -137271880, ((vt1.c0)OR(vt1.c0)), vt1.c0 COLLATE BINARY);
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (0.1394154530856765))))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (vt1.c0) AND ((- (vt1.c0)))) ASC  NULLS LAST, ((vt1.c0 IN (vt1.c0)) IN ()) DESC  NULLS FIRST, MIN(((vt1.c0) NOTNULL), -137271880, ((vt1.c0)OR(vt1.c0)), vt1.c0 COLLATE BINARY);
SELECT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND ('-1984276445')) IN (((vt0.c0) IS FALSE))));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND ('-1984276445')) IN (((vt0.c0) IS FALSE)))) ORDER BY (((NULL, CASE 0.33483578186462937  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1693198541' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))<((CAST(vt0.c1 AS INTEGER), (+ (vt0.c1))))) ASC  NULLS LAST, (((vt0.c0 COLLATE BINARY, (((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((1900605923, vt0.c1, -9.47041331E8, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))<=((NULL, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0)OR(NULL))))) ORDER BY (((NULL, CASE 0.33483578186462937  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1693198541' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))<((CAST(vt0.c1 AS INTEGER), (+ (vt0.c1))))) ASC  NULLS LAST, (((vt0.c0 COLLATE BINARY, (((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((0x7148f1e3, vt0.c1, -9.47041331E8, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))<=((NULL, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND ('-1984276445')) IN (((vt0.c0) IS FALSE))));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND ('-1984276445')) IN (((vt0.c0) IS FALSE)))) ORDER BY (((NULL, CASE 0.33483578186462937  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1693198541' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))<((CAST(vt0.c1 AS INTEGER), (+ (vt0.c1))))) ASC  NULLS LAST, (((vt0.c0 COLLATE BINARY, (((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((1900605923, vt0.c1, -9.47041331E8, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))<=((NULL, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0)OR(NULL))))) ORDER BY (((NULL, CASE 0.33483578186462937  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1693198541' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))<((CAST(vt0.c1 AS INTEGER), (+ (vt0.c1))))) ASC  NULLS LAST, (((vt0.c0 COLLATE BINARY, (((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((0x7148f1e3, vt0.c1, -9.47041331E8, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))<=((NULL, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)AND((((-765879084 IN (vt1.c0, vt0.c1))) BETWEEN ((((vt0.c0, vt0.c0))>=((vt1.c0, vt0.c1)))) AND ((- (vt0.c1)))))));
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)AND((((-765879084 IN (vt1.c0, vt0.c1))) BETWEEN ((((vt0.c0, vt0.c0))>=((vt1.c0, vt0.c1)))) AND ((- (vt0.c1)))))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((~ (vt1.c0))) NOTNULL) WHERE (((((0.7854799747832952)AND(CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))OR(vt1.c0))) ORDER BY ((LIKELY(vt0.c0))==('' COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((~ (vt1.c0))) NOTNULL) WHERE (((((0.7854799747832952)AND(CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))OR(vt1.c0))) ORDER BY ((((LIKELY(DISTINCT NULL))OR(((NULL)>>(vt1.c0)))))AND((- (vt0.c1)))) DESC, (((+ (vt1.c0))) NOT BETWEEN ((~ (vt0.c1))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) NOTNULL)  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN ((NULL)|(vt0.c1)) THEN ((vt0.c1)*(vt0.c0)) WHEN ((x'')&(vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE ((6.55700416E8) BETWEEN (vt0.c1) AND (vt1.c0)) END) ORDER BY (NOT ((((vt0.c0))=((x'ab90'))))) DESC  NULLS FIRST, NULL COLLATE NOCASE;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((CASE WHEN ((NULL)|(vt0.c1)) THEN ((vt0.c1)*(vt0.c0)) WHEN ((x'')&(vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE ((6.55700416E8) BETWEEN (vt0.c1) AND (vt1.c0)) END)AND(MIN((~ (vt1.c0)), CAST('圷' AS NUMERIC), ((vt0.c0)GLOB(vt0.c0)))))) ORDER BY (NOT ((((vt0.c0))==((x'ab90'))))) DESC  NULLS FIRST, NULL COLLATE NOCASE LIMIT 1;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN ((NULL)|(vt0.c1)) THEN ((vt0.c1)*(vt0.c0)) WHEN ((x'')&(vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE ((6.55700416E8) BETWEEN (vt0.c1) AND (vt1.c0)) END) ORDER BY (NOT ((((vt0.c0))=((x'ab90'))))) DESC  NULLS FIRST, NULL COLLATE NOCASE;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((CASE WHEN ((NULL)|(vt0.c1)) THEN ((vt0.c1)*(vt0.c0)) WHEN ((x'')&(vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE ((6.55700416E8) BETWEEN (vt0.c1) AND (vt1.c0)) END)AND(MIN((~ (vt1.c0)), CAST('圷' AS NUMERIC), ((vt0.c0)GLOB(vt0.c0)))))) ORDER BY (NOT ((((vt0.c0))==((x'ab90'))))) DESC  NULLS FIRST, NULL COLLATE NOCASE LIMIT 1;
SELECT * FROM vt0 WHERE (ABS(0.24523175084791426)) ORDER BY ((((vt0.c0) NOT NULL))<<((vt0.c0 IN (vt0.c1, vt0.c0))));
SELECT DISTINCT * FROM vt0 WHERE (ABS(0.24523175084791426)) ORDER BY (((((- (vt0.c0)))AND((vt0.c1 IN (vt0.c0, vt0.c1)))))OR(0.3034493501898149)) LIMIT 0X3;
SELECT * FROM vt0 WHERE (ABS(0.24523175084791426)) ORDER BY ((((vt0.c0) NOT NULL))<<((vt0.c0 IN (vt0.c1, vt0.c0))));
SELECT DISTINCT * FROM vt0 WHERE (ABS(0.24523175084791426)) ORDER BY (((((- (vt0.c0)))AND((vt0.c1 IN (vt0.c0, vt0.c1)))))OR(0.3034493501898149)) LIMIT 0X3;
SELECT ALL * FROM vt0, vt1 WHERE (json_array_length(vt1.c0));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((json_array_length(vt1.c0))AND(((CAST(0.4867737955486332 AS TEXT)) BETWEEN (((vt0.c1) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))));
SELECT ALL * FROM vt0, vt1 WHERE (json_array_length(vt1.c0));
SELECT ALL * FROM vt1, vt0 WHERE (-9.50258986E8) ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END)>=(vt0.c1 COLLATE RTRIM)) DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (-9.50258986E8) ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END)>=(vt0.c1 COLLATE RTRIM)) DESC LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE (-9.50258986E8) ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END)>=(vt0.c1 COLLATE RTRIM)) DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (-9.50258986E8) ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END)>=(vt0.c1 COLLATE RTRIM)) DESC LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)))>(vt0.c0))  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((NULL)AND(((((((((((((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c1)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE '0.344683209230246' END)))AND(NULL)))OR((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(((vt0.c0) NOT NULL))))AND(((vt0.c0)>=('Ӽ^e|fCK?')))))OR(vt1.c0))))) ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)))>(vt0.c0))  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((~ (vt1.c0))) BETWEEN (((((vt1.c0)AND(vt0.c0)))OR(vt0.c1))) AND ((- (NULL))))) ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)))>(vt0.c0))  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)))>(vt0.c0))  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((NULL)AND(((((((((((((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c1)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE '0.344683209230246' END)))AND(NULL)))OR((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(((vt0.c0) NOT NULL))))AND(((vt0.c0)>=('Ӽ^e|fCK?')))))OR(vt1.c0))))) ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)))>(vt0.c0))  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((~ (vt1.c0))) BETWEEN (((((vt1.c0)AND(vt0.c0)))OR(vt0.c1))) AND ((- (NULL))))) ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)))>(vt0.c0))  NULLS LAST LIMIT 0X1;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('?a	h') IS TRUE)) IS FALSE)) ORDER BY ((NULL)<>(((-1.786790141E9) NOTNULL)));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((((((('?a	h') IS TRUE)) IS FALSE))AND(IFNULL(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, LIKELY(DISTINCT vt1.c0))))) ORDER BY ((NULL)!=(((-1.786790141E9) NOTNULL))) LIMIT 0x3;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0))<((vt1.c0))))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)), vt0.c0 COLLATE RTRIM)))) ORDER BY CAST((((vt1.c0, vt0.c1, vt0.c0)) BETWEEN (('-1464712341', vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c1))) AS TEXT)  NULLS LAST, LOWER(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c1, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0))<>((vt1.c0))))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)), vt0.c0 COLLATE RTRIM)))) ORDER BY CAST((((vt1.c0, vt0.c1, vt0.c0)) BETWEEN (('-1464712341', vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c1))) AS TEXT)  NULLS LAST, LOWER(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0)/(vt1.c0))) BETWEEN (((vt0.c1) IS FALSE)) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 END))) ORDER BY CAST((((vt1.c0, vt0.c1, vt0.c0)) BETWEEN (('-1464712341', vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c1))) AS TEXT)  NULLS LAST, LOWER(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0))<((vt1.c0))))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)), vt0.c0 COLLATE RTRIM)))) ORDER BY CAST((((vt1.c0, vt0.c1, vt0.c0)) BETWEEN (('-1464712341', vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c1))) AS TEXT)  NULLS LAST, LOWER(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c1, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0))<>((vt1.c0))))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)), vt0.c0 COLLATE RTRIM)))) ORDER BY CAST((((vt1.c0, vt0.c1, vt0.c0)) BETWEEN (('-1464712341', vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c1))) AS TEXT)  NULLS LAST, LOWER(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0)/(vt1.c0))) BETWEEN (((vt0.c1) IS FALSE)) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 END))) ORDER BY CAST((((vt1.c0, vt0.c1, vt0.c0)) BETWEEN (('-1464712341', vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c1))) AS TEXT)  NULLS LAST, LOWER(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt1 WHERE ((((((((((('1774586069')OR((vt1.c0 IN (vt1.c0)))))AND((+ (vt1.c0)))))AND(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) ISNULL)))) ORDER BY vt1.c0 ASC  NULLS LAST, ((((((((vt1.c0 COLLATE NOCASE)OR(vt1.c0 COLLATE RTRIM)))OR(x'')))OR(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0)|(vt1.c0))));
SELECT * FROM vt1 WHERE ((((((((((((('1774586069')OR((vt1.c0 IN (vt1.c0)))))AND((+ (vt1.c0)))))AND(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) ISNULL))))AND(CASE (vt1.c0 IN ())  WHEN ((vt1.c0)>>(vt1.c0)) THEN (((vt1.c0, 0.6258798985569902)) BETWEEN ((vt1.c0, vt1.c0)) AND ((NULL, vt1.c0))) WHEN vt1.c0 THEN vt1.c0 COLLATE BINARY END))) ORDER BY CAST(((vt1.c0) ISNULL) AS NUMERIC) DESC, ((vt1.c0)OR(vt1.c0)) COLLATE BINARY;
SELECT ALL * FROM vt1 WHERE ((((((((((('1774586069')OR((vt1.c0 IN (vt1.c0)))))AND((+ (vt1.c0)))))AND(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) ISNULL)))) ORDER BY vt1.c0 ASC  NULLS LAST, ((((((((vt1.c0 COLLATE NOCASE)OR(vt1.c0 COLLATE RTRIM)))OR(x'')))OR(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0)|(vt1.c0))));
SELECT * FROM vt1 WHERE ((((((((((((('1774586069')OR((vt1.c0 IN (vt1.c0)))))AND((+ (vt1.c0)))))AND(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) ISNULL))))AND(CASE (vt1.c0 IN ())  WHEN ((vt1.c0)>>(vt1.c0)) THEN (((vt1.c0, 0.6258798985569902)) BETWEEN ((vt1.c0, vt1.c0)) AND ((NULL, vt1.c0))) WHEN vt1.c0 THEN vt1.c0 COLLATE BINARY END))) ORDER BY CAST(((vt1.c0) ISNULL) AS NUMERIC) DESC, ((vt1.c0)OR(vt1.c0)) COLLATE BINARY;
SELECT * FROM vt1 WHERE (((((0X6dbc9b52)>=(vt1.c0)))||(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((1841077074)==(vt1.c0)))||(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY '1972896027' COLLATE NOCASE, ((vt1.c0 COLLATE NOCASE)IS NOT((((vt1.c0, '-2083788955', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) ASC, LOWER(LOWER(vt1.c0));
SELECT * FROM vt1 WHERE (((((0X6dbc9b52)>=(vt1.c0)))||(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((1841077074)==(vt1.c0)))||(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY '1972896027' COLLATE NOCASE, ((vt1.c0 COLLATE NOCASE)IS NOT((((vt1.c0, '-2083788955', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) ASC, LOWER(LOWER(vt1.c0));
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (((((((((vt1.c0)OR('}y齃')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ORDER BY x'7007', (((('655700416')/(vt1.c0))) NOT BETWEEN ((+ (NULL))) AND (((vt1.c0) IS FALSE))) DESC, vt1.c0 COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (((((((((vt1.c0)OR('}y齃')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))AND(((((vt1.c0))==((vt1.c0))) IN (LTRIM(vt1.c0), (NOT (vt1.c0))))))) ORDER BY x'7007', (((('655700416')/(vt1.c0))) NOT BETWEEN ((+ (NULL))) AND (((vt1.c0) IS FALSE))) DESC, vt1.c0 COLLATE RTRIM DESC  NULLS FIRST INTERSECT SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY x'7007', (((('655700416')/(vt1.c0))) NOT BETWEEN ((+ (NULL))) AND (((vt1.c0) IS FALSE))) DESC, vt1.c0 COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (((((((((vt1.c0)OR('}y齃')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ORDER BY x'7007', (((('655700416')/(vt1.c0))) NOT BETWEEN ((+ (NULL))) AND (((vt1.c0) IS FALSE))) DESC, vt1.c0 COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (((((((((vt1.c0)OR('}y齃')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))AND(((((vt1.c0))==((vt1.c0))) IN (LTRIM(vt1.c0), (NOT (vt1.c0))))))) ORDER BY x'7007', (((('655700416')/(vt1.c0))) NOT BETWEEN ((+ (NULL))) AND (((vt1.c0) IS FALSE))) DESC, vt1.c0 COLLATE RTRIM DESC  NULLS FIRST INTERSECT SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY x'7007', (((('655700416')/(vt1.c0))) NOT BETWEEN ((+ (NULL))) AND (((vt1.c0) IS FALSE))) DESC, vt1.c0 COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD(DISTINCT TYPEOF(DISTINCT vt1.c0), load_extension(vt1.c0)));
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD(DISTINCT TYPEOF(DISTINCT vt1.c0), load_extension(vt1.c0))) LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE (((((('wA')) BETWEEN ((vt0.c1)) AND ((vt0.c1))))<(((vt0.c1)>(vt1.c0))))) ORDER BY (NULL IN ()) COLLATE BINARY;
SELECT ALL * FROM vt1, vt0 WHERE (((((('wA')) BETWEEN ((vt0.c1)) AND ((vt0.c1))))<(((vt0.c1)>(vt1.c0))))) ORDER BY (NULL IN ()) COLLATE BINARY INTERSECT SELECT * FROM vt1, vt0 WHERE (((((+ (vt1.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))==((((vt0.c1)IS(vt0.c0)), ((vt0.c0) ISNULL), STRFTIME(vt1.c0, x'', vt1.c0, vt0.c0, vt0.c1))))) ORDER BY (NULL IN ()) COLLATE BINARY;
SELECT ALL * FROM vt1, vt0 WHERE (((((('wA')) BETWEEN ((vt0.c1)) AND ((vt0.c1))))<(((vt0.c1)>(vt1.c0))))) ORDER BY (NULL IN ()) COLLATE BINARY;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY vt0.c0;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY vt0.c0 LIMIT 0 INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE ((NOT (((('&8P')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY vt0.c0 LIMIT 0;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)<('[')) IN (((vt1.c0)OR(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)<('[')) IN (((vt1.c0)OR(vt1.c0))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) LIMIT 0;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)<('[')) IN (((vt1.c0)OR(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)<('[')) IN (((vt1.c0)OR(vt1.c0))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) LIMIT 0;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY ((vt1.c0) NOTNULL), ((CAST(vt1.c0 AS NUMERIC)) NOTNULL)  NULLS LAST, vt1.c0  NULLS FIRST;
SELECT MAX(vt1.c0) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'5e15d9d8' THEN vt1.c0 WHEN vt1.c0 THEN NULL END IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC, 0.49722456880689203, (((vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), (NOT (vt1.c0)))) AND ((CAST(vt1.c0 AS REAL), 0Xffffffffbd9d98bb)))  NULLS LAST LIMIT 0X3;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((((CAST(vt0.c1 AS BLOB))AND(CAST(vt0.c1 AS BLOB))))OR((+ (vt0.c0)))));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((((((CAST(vt0.c1 AS BLOB))AND(CAST(vt0.c1 AS BLOB))))OR((+ (vt0.c0)))))AND((((vt0.c1, ((vt0.c1)>=(vt0.c0)), vt0.c1 COLLATE RTRIM, (~ (vt0.c0))))>=((NULL, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)IS NOT(vt0.c0)), (vt0.c1 IN ()))))))) INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (CASE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))  WHEN ((vt0.c1) NOT NULL) THEN (vt0.c1 IN (vt0.c1)) WHEN vt0.c1 THEN ((vt0.c1)>(vt0.c1)) WHEN x'ba' COLLATE RTRIM THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN vt0.c1 COLLATE BINARY THEN vt0.c0 END);
SELECT ALL * FROM vt1, vt0 WHERE ('1927666220');
SELECT * FROM vt1, vt0 WHERE ((('1927666220')AND(CAST(TOTAL_CHANGES() AS REAL)))) LIMIT 0x0;
SELECT ALL * FROM vt1, vt0 WHERE ('1927666220');
SELECT * FROM vt1, vt0 WHERE ((('1927666220')AND(CAST(TOTAL_CHANGES() AS REAL)))) LIMIT 0x0;
SELECT ALL * FROM vt0, vt1 WHERE ((((0X4b2e87f2, ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))))!=((((vt0.c0)*(vt0.c0)), CAST(vt1.c0 AS BLOB)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((0x4b2e87f2, ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))))<((((vt0.c0)*(vt0.c0)), CAST(vt1.c0 AS BLOB)))))AND(CAST((vt0.c1 IN (vt1.c0)) AS BLOB)))) LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE ((((0X4b2e87f2, ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))))!=((((vt0.c0)*(vt0.c0)), CAST(vt1.c0 AS BLOB)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((0x4b2e87f2, ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))))<((((vt0.c0)*(vt0.c0)), CAST(vt1.c0 AS BLOB)))))AND(CAST((vt0.c1 IN (vt1.c0)) AS BLOB)))) LIMIT 1;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (NULL))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY x'1c' ASC, (('686262591') BETWEEN ((+ (2.109847487E9))) AND (((vt1.c0)>=(vt1.c0)))) ASC, 0.1951761959612247 ASC  NULLS LAST, (NOT (((vt1.c0)<(0Xffffffffc78da7ac)))) DESC  NULLS FIRST, vt1.c0;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (NULL))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY x'1c' ASC, (('686262591') BETWEEN ((+ (2.109847487E9))) AND (((vt1.c0)>=(vt1.c0)))) ASC, 0.1951761959612247 ASC  NULLS LAST, (NOT (((vt1.c0)<(0Xffffffffc78da7ac)))) DESC  NULLS FIRST, vt1.c0 LIMIT 2;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT)) ORDER BY CAST(((((x'42ef')AND(x'')))AND(vt1.c0)) AS NUMERIC) ASC;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT))AND((((((vt1.c0))<((vt1.c0))))/(''))))) ORDER BY CAST(((((x'42ef')AND(x'')))AND(vt1.c0)) AS NUMERIC) ASC LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)!=(((((((vt1.c0)AND(vt1.c0)))AND('N')))OR(vt1.c0))))) ORDER BY CAST(((((x'42ef')AND(x'')))AND(vt1.c0)) AS NUMERIC) ASC LIMIT 1;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)AND(vt1.c0)) IN (vt0.c1 COLLATE NOCASE)));
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)AND(vt1.c0)) IN (vt0.c1 COLLATE NOCASE))) ORDER BY (((vt1.c0, '0.4427175247759766', vt0.c1, vt1.c0)) BETWEEN (((('0.32939984335328854')IS(vt0.c0)), (vt0.c0 IN (x'ce', vt1.c0)), (vt1.c0 IN ()), (((vt1.c0))<=((0xffffffffe6befdb6))))) AND ((CAST(vt0.c1 AS NUMERIC), ((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)), (- (vt0.c1)), -1858005385)))  NULLS LAST, 0.5675414914063993 DESC LIMIT 2;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((((((vt0.c0, vt0.c1))!=((vt0.c1, vt0.c0)))) BETWEEN (NULL) AND (CASE '0.04337888142353474'  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY vt0.c1 ASC  NULLS LAST, ((NULL)<<(CASE vt0.c0  WHEN x'' THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((((((((vt0.c0, vt0.c1))<((vt0.c1, vt0.c0)))) BETWEEN (NULL) AND (CASE '0.04337888142353474'  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c1))) ORDER BY vt0.c1 ASC  NULLS LAST, ((NULL)<<(CASE vt0.c0  WHEN x'' THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'07af')))AND(vt0.c1)) AS TEXT));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'07af')))AND(vt0.c1)) AS TEXT))AND(json_patch((~ (vt0.c0)), ((vt1.c0) NOT NULL))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOTNULL)  NULLS LAST, ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))&(vt1.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((- (((vt0.c1)&(vt0.c0))))) ORDER BY (((NOT (vt0.c1)))LIKE(((vt1.c0)||(vt1.c0))))  NULLS LAST, ((((vt0.c0) ISNULL))>=(UPPER(DISTINCT vt0.c0)));
SELECT * FROM vt1, vt0 WHERE ((((- (((vt0.c1)&(vt0.c0)))))AND(json(vt0.c0)))) ORDER BY (((NOT (vt0.c1)))LIKE(((vt1.c0)||(vt1.c0))))  NULLS LAST, ((((vt0.c0) ISNULL))>=(UPPER(DISTINCT vt0.c0))) LIMIT 0x0 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((((vt0.c0)OR(vt0.c0)))AND(666762685)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))<(TIME(vt0.c0, vt0.c1, vt0.c0)))) ORDER BY (((NOT (vt0.c1)))LIKE(((vt1.c0)||(vt1.c0))))  NULLS LAST, ((((vt0.c0) ISNULL))>=(UPPER(DISTINCT vt0.c0))) LIMIT 0;
SELECT * FROM vt1, vt0 WHERE ((- (((vt0.c1)&(vt0.c0))))) ORDER BY (((NOT (vt0.c1)))LIKE(((vt1.c0)||(vt1.c0))))  NULLS LAST, ((((vt0.c0) ISNULL))>=(UPPER(DISTINCT vt0.c0)));
SELECT * FROM vt1, vt0 WHERE ((((- (((vt0.c1)&(vt0.c0)))))AND(json(vt0.c0)))) ORDER BY (((NOT (vt0.c1)))LIKE(((vt1.c0)||(vt1.c0))))  NULLS LAST, ((((vt0.c0) ISNULL))>=(UPPER(DISTINCT vt0.c0))) LIMIT 0x0 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((((vt0.c0)OR(vt0.c0)))AND(666762685)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))<(TIME(vt0.c0, vt0.c1, vt0.c0)))) ORDER BY (((NOT (vt0.c1)))LIKE(((vt1.c0)||(vt1.c0))))  NULLS LAST, ((((vt0.c0) ISNULL))>=(UPPER(DISTINCT vt0.c0))) LIMIT 0;
SELECT ALL * FROM vt1 WHERE ('') ORDER BY vt1.c0  NULLS LAST, CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)  NULLS LAST, ((json_array_length(vt1.c0))>(((vt1.c0)-(vt1.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE ('') ORDER BY CAST(((vt1.c0)>>(vt1.c0)) AS BLOB)  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((1.700772375E9)>>(((vt1.c0) NOTNULL)))) ORDER BY CAST(((vt1.c0)>>(vt1.c0)) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ('') ORDER BY vt1.c0  NULLS LAST, CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)  NULLS LAST, ((json_array_length(vt1.c0))>(((vt1.c0)-(vt1.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE ('') ORDER BY CAST(((vt1.c0)>>(vt1.c0)) AS BLOB)  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((1.700772375E9)>>(((vt1.c0) NOTNULL)))) ORDER BY CAST(((vt1.c0)>>(vt1.c0)) AS BLOB)  NULLS FIRST;
SELECT MAX(vt1.c0) FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN '0.23205643869743842' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()), CAST((NOT (vt1.c0)) AS BLOB)  NULLS FIRST, ((vt1.c0) IS FALSE) COLLATE BINARY DESC  NULLS FIRST;
SELECT MAX(vt1.c0) FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(vt1.c0 COLLATE NOCASE)) LIMIT 0X2 INTERSECT SELECT MAX(vt1.c0) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))<((('+b5')GLOB(vt1.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(vt1.c0 COLLATE NOCASE)) LIMIT 2;
SELECT ALL * FROM vt1 WHERE (QUOTE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (((((((((((vt1.c0)OR(x'')))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN (vt1.c0)) DESC;
SELECT DISTINCT * FROM vt1 WHERE (QUOTE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (9.05496803E8) AND (vt1.c0)), (- (json(vt1.c0))) DESC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))==(vt1.c0 COLLATE RTRIM))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM vt1 WHERE (QUOTE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (((((((((((vt1.c0)OR(x'')))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN (vt1.c0)) DESC;
SELECT DISTINCT * FROM vt1 WHERE (QUOTE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (9.05496803E8) AND (vt1.c0)), (- (json(vt1.c0))) DESC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))==(vt1.c0 COLLATE RTRIM))  NULLS FIRST LIMIT 0X0;
SELECT MAX(vt0.c1) FROM vt0 WHERE (x'');
SELECT MAX(vt0.c1) FROM vt0 WHERE (((x'')AND((((+ (vt0.c0)))*(0.925209643151217))))) ORDER BY (((vt0.c1, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0))) COLLATE RTRIM, '' DESC, (((((vt0.c0, vt0.c1, vt0.c0, vt0.c1))<=((-1555868435, vt0.c0, NULL, vt0.c1)))) NOT BETWEEN (vt0.c1) AND ((((vt0.c0, vt0.c1, NULL))>((vt0.c1, vt0.c0, vt0.c0)))))  NULLS FIRST INTERSECT SELECT MAX(vt0.c1) FROM vt0 WHERE (UNLIKELY(DISTINCT vt0.c1) COLLATE BINARY COLLATE NOCASE) ORDER BY (((vt0.c1, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0))) COLLATE RTRIM, '' DESC, (((((vt0.c0, vt0.c1, vt0.c0, vt0.c1))<=((-1555868435, vt0.c0, NULL, vt0.c1)))) NOT BETWEEN (vt0.c1) AND ((((vt0.c0, vt0.c1, NULL))>((vt0.c1, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT MIN(vt1.c0) FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt1.c0)&(vt1.c0)) WHEN '' THEN vt1.c0 COLLATE RTRIM WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(-1420023627)))OR(NULL)))AND(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt1.c0)&(vt1.c0)) WHEN '' THEN vt1.c0 COLLATE RTRIM WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(0xffffffffab5c28b5)))OR(NULL)))AND(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY CASE WHEN NULL THEN CAST(NULL AS REAL) END;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE (JULIANDAY(CAST(vt0.c0 AS TEXT), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))), ((vt0.c1)IS(vt0.c1)))) ORDER BY TYPEOF(x'582f' COLLATE BINARY)  NULLS FIRST, ((vt1.c0)<>((((vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0))))) ASC;
SELECT DISTINCT MAX(vt0.c0) FROM vt0, vt1 WHERE (JULIANDAY(CAST(vt0.c0 AS TEXT), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))), ((vt0.c1)IS(vt0.c1)))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((vt0.c0)<=(vt0.c0)), (((vt1.c0)) NOT BETWEEN (('-633882828')) AND ((vt0.c1))), (~ (vt0.c0)))) AND ((((vt0.c0)%(vt1.c0)), ((vt0.c1)<(vt1.c0)), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END)))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT MAX(vt0.c0) FROM vt0 INNER JOIN vt1 ON (((((vt0.c0, vt1.c0))<=((vt1.c0, vt1.c0))))>=(((vt0.c1)<(vt0.c1)))) WHERE (CASE ((vt1.c0) NOTNULL)  WHEN (('-1651365675') BETWEEN (vt0.c1) AND (vt0.c0)) THEN (+ (vt0.c1)) WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt1.c0 AS BLOB) ELSE (~ (vt0.c0)) END);
SELECT MAX(vt0.c0) FROM vt0 INNER JOIN vt1 ON (((((vt0.c0, vt1.c0))<=((vt1.c0, vt1.c0))))>=(((vt0.c1)<(vt0.c1)))) WHERE (CASE ((vt1.c0) NOTNULL)  WHEN (('-1651365675') BETWEEN (vt0.c1) AND (vt0.c0)) THEN (+ (vt0.c1)) WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt1.c0 AS BLOB) ELSE (~ (vt0.c0)) END) ORDER BY vt0.c1  NULLS FIRST LIMIT 0X0 INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0 INNER JOIN vt1 ON (((((vt0.c0, vt1.c0))<=((vt1.c0, vt1.c0))))>=(((vt0.c1)<(vt0.c1)))) WHERE (((((vt0.c1)-(vt0.c0)))<>(0xffffffffca93230e COLLATE RTRIM))) ORDER BY vt0.c1  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN (((vt0.c0)<=(vt0.c1)))) WHERE (json_object((vt1.c0 IN (vt0.c1, vt1.c0)), vt1.c0)) ORDER BY ((((vt1.c0 IN (vt0.c0, vt0.c0)), ((vt0.c1) NOT NULL)))<>((COALESCE(vt0.c0, vt1.c0, vt0.c1), UNLIKELY(DISTINCT vt0.c1)))) ASC, ((CAST(vt0.c1 AS TEXT))>((vt1.c0 IN (vt0.c1))))  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN (((vt0.c0)<=(vt0.c1)))) WHERE (json_object((vt1.c0 IN (vt0.c1, vt1.c0)), vt1.c0)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))) NOT NULL)  NULLS LAST INTERSECT SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN (((vt0.c0)<=(vt0.c1)))) WHERE (((vt1.c0)LIKE((+ (vt0.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))) NOT NULL)  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN (((vt0.c0)<=(vt0.c1)))) WHERE (json_object((vt1.c0 IN (vt0.c1, vt1.c0)), vt1.c0)) ORDER BY ((((vt1.c0 IN (vt0.c0, vt0.c0)), ((vt0.c1) NOT NULL)))<>((COALESCE(vt0.c0, vt1.c0, vt0.c1), UNLIKELY(DISTINCT vt0.c1)))) ASC, ((CAST(vt0.c1 AS TEXT))>((vt1.c0 IN (vt0.c1))))  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((((((('')OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE);
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((((((('')OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((vt1.c0 IN ((~ (vt1.c0))))) LIMIT 0;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c0)||(vt0.c0)) THEN ((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) WHEN CAST(vt0.c1 AS REAL) THEN ((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN RTRIM(vt0.c0) END);
SELECT DISTINCT MAX(vt0.c0) FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c0)||(vt0.c0)) THEN ((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) WHEN CAST(vt0.c1 AS REAL) THEN ((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN RTRIM(vt0.c0) END) LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0, vt1 WHERE ((((((vt1.c0, vt0.c0))!=((vt0.c0, 0.9136240663467331))))IS NOT((((vt0.c1))=((vt0.c1)))))) LIMIT 1;
SELECT ALL * FROM vt0 WHERE (((((-684916307)OR(vt0.c1 COLLATE BINARY)))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY (('213797321' COLLATE NOCASE) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (x''))) AND (((vt0.c0)==(vt0.c0))));
SELECT DISTINCT * FROM vt0 WHERE (((((-684916307)OR(vt0.c1 COLLATE BINARY)))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY (('213797321' COLLATE NOCASE) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (x''))) AND (((vt0.c0)==(vt0.c0)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((+ (vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0, vt0.c1))>((NULL, vt0.c0)))))) ORDER BY (('213797321' COLLATE NOCASE) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (x''))) AND (((vt0.c0)==(vt0.c0)))) LIMIT 0;
SELECT ALL * FROM vt0 WHERE (((((-684916307)OR(vt0.c1 COLLATE BINARY)))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY (('213797321' COLLATE NOCASE) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (x''))) AND (((vt0.c0)==(vt0.c0))));
SELECT DISTINCT * FROM vt0 WHERE (((((-684916307)OR(vt0.c1 COLLATE BINARY)))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY (('213797321' COLLATE NOCASE) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (x''))) AND (((vt0.c0)==(vt0.c0)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((+ (vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0, vt0.c1))>((NULL, vt0.c0)))))) ORDER BY (('213797321' COLLATE NOCASE) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (x''))) AND (((vt0.c0)==(vt0.c0)))) LIMIT 0;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ((((((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND((('-0.0') NOTNULL))))AND(vt1.c0 COLLATE NOCASE)));
SELECT MIN(vt1.c0) FROM vt1 WHERE ((((((((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND((('-0.0') NOTNULL))))AND(vt1.c0 COLLATE NOCASE)))AND(CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN SQLITE_COMPILEOPTION_GET(vt1.c0) END))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)IS(vt1.c0 COLLATE RTRIM)) ASC INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((((vt1.c0) NOT NULL))>(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL END))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)IS(vt1.c0 COLLATE RTRIM)) ASC;
SELECT * FROM vt0 WHERE (CASE ((x'91beab')>=(vt0.c1))  WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (~ (vt0.c1)) END);
SELECT ALL * FROM vt0 WHERE (CASE ((x'91beab')>=(vt0.c1))  WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (~ (vt0.c1)) END) INTERSECT SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS REAL)) ISNULL));
SELECT * FROM vt0 WHERE (CASE ((x'91beab')>=(vt0.c1))  WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (~ (vt0.c1)) END);
SELECT ALL * FROM vt0 WHERE (CASE ((x'91beab')>=(vt0.c1))  WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (~ (vt0.c1)) END) INTERSECT SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS REAL)) ISNULL));
SELECT * FROM vt0 INNER JOIN vt1 ON (-950258986 IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), (vt1.c0 IN (vt0.c0, vt1.c0)))) WHERE ((((0xffffffff83cbe765, vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, ((((((vt1.c0)OR(vt0.c1)))AND(NULL)))OR(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0.08745346279639021 THEN vt0.c0 END, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END)) AND ((((0.7334696462121405)+(vt0.c0)), ((((((((((vt1.c0)OR(x'')))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)), CAST('O' AS TEXT), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)))) ORDER BY LIKELIHOOD(((vt0.c0)-(vt1.c0)), ((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))  NULLS FIRST, CAST(vt1.c0 AS BLOB) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (0xffffffffc75c32d6 IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), (vt1.c0 IN (vt0.c0, vt1.c0)))) WHERE ((((-2083788955, vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, ((((((vt1.c0)OR(vt0.c1)))AND(NULL)))OR(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0.08745346279639021 THEN vt0.c0 END, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END)) AND ((((0.7334696462121405)+(vt0.c0)), ((((((((((vt1.c0)OR(x'')))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)), CAST('O' AS TEXT), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)))) ORDER BY vt1.c0  NULLS LAST;
SELECT * FROM vt0 INNER JOIN vt1 ON (-950258986 IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), (vt1.c0 IN (vt0.c0, vt1.c0)))) WHERE ((((0xffffffff83cbe765, vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, ((((((vt1.c0)OR(vt0.c1)))AND(NULL)))OR(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0.08745346279639021 THEN vt0.c0 END, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END)) AND ((((0.7334696462121405)+(vt0.c0)), ((((((((((vt1.c0)OR(x'')))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)), CAST('O' AS TEXT), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)))) ORDER BY LIKELIHOOD(((vt0.c0)-(vt1.c0)), ((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))  NULLS FIRST, CAST(vt1.c0 AS BLOB) DESC  NULLS LAST;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((((x'' IN (vt0.c1))) NOT NULL));
SELECT MIN(vt0.c0) FROM vt0 WHERE ((((x'' IN (vt0.c1))) NOT NULL)) ORDER BY (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END IN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))) ASC, (((vt0.c1, vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c1, vt0.c1)), ((vt0.c0)+(vt0.c0)))) AND (((NOT (vt0.c1)), NULL))) ASC  NULLS FIRST, ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((NULL, vt0.c0, vt0.c1))) IN ()) ASC  NULLS LAST LIMIT 0;
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END AS TEXT)) ORDER BY (((((x'96', vt0.c0, '-1283341491', vt1.c0))<=((vt1.c0, vt1.c0, vt0.c1, vt0.c0))))IS(((vt0.c1)IS(vt0.c1))))  NULLS FIRST;
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END AS TEXT)) ORDER BY ((NULL)LIKE((NULL IN ()))) DESC, x'0e'  NULLS LAST LIMIT 0X2 INTERSECT SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (((((0.6820896185835107)LIKE(vt0.c0))) IS FALSE)) ORDER BY ((NULL)LIKE((NULL IN ()))) DESC, x'0e'  NULLS LAST LIMIT 2;
SELECT MAX(vt0.c1) FROM vt0, vt1 WHERE ((~ (((vt0.c0) IS TRUE)))) ORDER BY (((CAST(vt0.c0 AS BLOB), COALESCE(DISTINCT 0.20560807807622272, vt1.c0)))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0)>(vt1.c0)))))  NULLS LAST;
SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE ((((~ (((vt0.c0) IS TRUE))))AND((((((vt0.c0 IN ()))AND(((vt0.c1)>=(vt1.c0)))))AND(vt0.c1))))) ORDER BY (((CAST(vt0.c0 AS BLOB), COALESCE(DISTINCT 0.20560807807622272, vt1.c0)))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0)>(vt1.c0)))))  NULLS LAST LIMIT 0X2;
SELECT ALL COUNT(*) FROM vt1 WHERE (x'16') ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE ASC, x'6c', (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (x'16') ORDER BY (((vt1.c0)) NOT BETWEEN (((-2.011903462E9 IN (vt1.c0, vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))), ((((vt1.c0)+(vt1.c0)))*((((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))) DESC LIMIT 1;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN NULL THEN vt0.c1 WHEN 0.24038807583886057 THEN vt0.c1 ELSE vt0.c1 END) BETWEEN ((NOT (vt0.c0))) AND ((vt0.c1 IN ()))));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN NULL THEN vt0.c1 WHEN 0.24038807583886057 THEN vt0.c1 ELSE vt0.c1 END) BETWEEN ((NOT (vt0.c0))) AND ((vt0.c1 IN ())))) LIMIT 0X0 INTERSECT SELECT ALL * FROM vt0 WHERE (GLOB(((vt0.c0)IS NOT(vt0.c0)), vt0.c1)) LIMIT 0;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN NULL THEN vt0.c1 WHEN 0.24038807583886057 THEN vt0.c1 ELSE vt0.c1 END) BETWEEN ((NOT (vt0.c0))) AND ((vt0.c1 IN ()))));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN NULL THEN vt0.c1 WHEN 0.24038807583886057 THEN vt0.c1 ELSE vt0.c1 END) BETWEEN ((NOT (vt0.c0))) AND ((vt0.c1 IN ())))) LIMIT 0X0 INTERSECT SELECT ALL * FROM vt0 WHERE (GLOB(((vt0.c0)IS NOT(vt0.c0)), vt0.c1)) LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN (((-399246772, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) WHEN ((vt0.c0)>>(vt1.c0)) THEN 0.7169814362244616 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c1 WHEN LOWER(vt1.c0) THEN ((vt1.c0) NOTNULL) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(x'')) THEN vt0.c0 END);
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN (((-399246772, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) WHEN ((vt0.c0)>>(vt1.c0)) THEN 0.7169814362244616 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c1 WHEN LOWER(vt1.c0) THEN ((vt1.c0) NOTNULL) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(x'')) THEN vt0.c0 END) LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((- (((vt0.c1) NOT BETWEEN ('') AND (vt0.c1))))) LIMIT 3;
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN (((-399246772, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) WHEN ((vt0.c0)>>(vt1.c0)) THEN 0.7169814362244616 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c1 WHEN LOWER(vt1.c0) THEN ((vt1.c0) NOTNULL) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(x'')) THEN vt0.c0 END);
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN (((-399246772, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) WHEN ((vt0.c0)>>(vt1.c0)) THEN 0.7169814362244616 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c1 WHEN LOWER(vt1.c0) THEN ((vt1.c0) NOTNULL) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(x'')) THEN vt0.c0 END) LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((- (((vt0.c1) NOT BETWEEN ('') AND (vt0.c1))))) LIMIT 3;
SELECT * FROM vt1 WHERE ((NOT ((- (0.9529529039078812))))) ORDER BY 0Xffffffffa0d10599  NULLS LAST;
SELECT * FROM vt1 WHERE ((NOT ((- (0.9529529039078812))))) ORDER BY -1596914279  NULLS LAST;
SELECT * FROM vt1 WHERE ((NOT ((- (0.9529529039078812))))) ORDER BY 0Xffffffffa0d10599  NULLS LAST;
SELECT * FROM vt1 WHERE ((NOT ((- (0.9529529039078812))))) ORDER BY -1596914279  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((((NOT (vt0.c0))) ISNULL)) ORDER BY CAST((((vt1.c0, NULL))<>((vt0.c1, vt0.c0))) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((((NOT (vt0.c0))) ISNULL)) ORDER BY ((((vt1.c0)AND('70417627')))AND(vt0.c1)) ASC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('-793148928')))<<(vt0.c0 COLLATE BINARY)), CAST((((vt0.c1))<>((vt0.c0))) AS NUMERIC) DESC  NULLS FIRST INTERSECT SELECT * FROM vt0, vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))OR((((vt1.c0))<((vt1.c0))))))OR(CAST(vt0.c1 AS BLOB)))) ORDER BY ((((vt1.c0)AND('70417627')))AND(vt0.c1)) ASC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('-793148928')))<<(vt0.c0 COLLATE BINARY)), CAST((((vt0.c1))!=((vt0.c0))) AS NUMERIC) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((((NOT (vt0.c0))) ISNULL)) ORDER BY CAST((((vt1.c0, NULL))<>((vt0.c1, vt0.c0))) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((((NOT (vt0.c0))) ISNULL)) ORDER BY ((((vt1.c0)AND('70417627')))AND(vt0.c1)) ASC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('-793148928')))<<(vt0.c0 COLLATE BINARY)), CAST((((vt0.c1))<>((vt0.c0))) AS NUMERIC) DESC  NULLS FIRST INTERSECT SELECT * FROM vt0, vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))OR((((vt1.c0))<((vt1.c0))))))OR(CAST(vt0.c1 AS BLOB)))) ORDER BY ((((vt1.c0)AND('70417627')))AND(vt0.c1)) ASC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('-793148928')))<<(vt0.c0 COLLATE BINARY)), CAST((((vt0.c1))!=((vt0.c0))) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ((((vt1.c0))=((vt1.c0))) COLLATE BINARY) ORDER BY ABS(rtreenode(vt1.c0, vt1.c0)), CAST('ur' AS INTEGER);
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE ((((((vt1.c0))==((vt1.c0))) COLLATE BINARY)AND(vt1.c0))) ORDER BY CAST(vt1.c0 AS REAL) COLLATE RTRIM LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((((vt1.c0) IS TRUE))<=(IFNULL('Q芷\ ', vt1.c0)))) ORDER BY CAST(vt1.c0 AS REAL) COLLATE RTRIM LIMIT 1;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<(vt0.c0)))/(HEX(vt0.c1)))) ORDER BY ABS(DISTINCT TRIM(vt0.c1, vt0.c1));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<(vt0.c0)))/(HEX(vt0.c1)))) ORDER BY ABS(DISTINCT TRIM(vt0.c1, vt0.c1)) LIMIT 0 INTERSECT SELECT * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))||((~ (vt0.c1))))) ORDER BY ABS(DISTINCT TRIM(vt0.c1, vt0.c1)) LIMIT 0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<(vt0.c0)))/(HEX(vt0.c1)))) ORDER BY ABS(DISTINCT TRIM(vt0.c1, vt0.c1));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<(vt0.c0)))/(HEX(vt0.c1)))) ORDER BY ABS(DISTINCT TRIM(vt0.c1, vt0.c1)) LIMIT 0 INTERSECT SELECT * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))||((~ (vt0.c1))))) ORDER BY ABS(DISTINCT TRIM(vt0.c1, vt0.c1)) LIMIT 0;
SELECT * FROM vt0 WHERE (NULL);
SELECT DISTINCT * FROM vt0 WHERE (((NULL)AND(CAST((vt0.c0 IN ()) AS BLOB)))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c1, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c1)||(x'')))));
SELECT * FROM vt0 WHERE (NULL);
SELECT DISTINCT * FROM vt0 WHERE (((NULL)AND(CAST((vt0.c0 IN ()) AS BLOB)))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c1, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c1)||(x'')))));
SELECT ALL * FROM vt1 WHERE ((('yPX{yan' COLLATE NOCASE)>=((('1031127186')LIKE(vt1.c0))))) ORDER BY (((vt1.c0, ((vt1.c0)LIKE(vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ASC, ((((((((vt1.c0)<(vt1.c0)))OR((((vt1.c0, vt1.c0))>((vt1.c0, NULL))))))OR((vt1.c0 IN (vt1.c0)))))OR(SQLITE_COMPILEOPTION_GET(NULL))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((('yPX{yan' COLLATE NOCASE)>=((('1031127186')LIKE(vt1.c0))))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) IS FALSE) WHEN CAST(vt1.c0 AS BLOB) THEN '' ELSE ((vt1.c0)+(vt1.c0)) END DESC, ((TIME(vt1.c0, vt1.c0, vt1.c0)) IS FALSE) DESC  NULLS FIRST, CASE ((((0x2c5e008)AND(vt1.c0)))AND(vt1.c0))  WHEN vt1.c0 COLLATE RTRIM THEN '-16873888' ELSE 0.8997586190913799 END  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((('yPX{yan' COLLATE NOCASE)>=((('1031127186')LIKE(vt1.c0))))) ORDER BY (((vt1.c0, ((vt1.c0)LIKE(vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ASC, ((((((((vt1.c0)<(vt1.c0)))OR((((vt1.c0, vt1.c0))>((vt1.c0, NULL))))))OR((vt1.c0 IN (vt1.c0)))))OR(SQLITE_COMPILEOPTION_GET(NULL))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((('yPX{yan' COLLATE NOCASE)>=((('1031127186')LIKE(vt1.c0))))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) IS FALSE) WHEN CAST(vt1.c0 AS BLOB) THEN '' ELSE ((vt1.c0)+(vt1.c0)) END DESC, ((TIME(vt1.c0, vt1.c0, vt1.c0)) IS FALSE) DESC  NULLS FIRST, CASE ((((0x2c5e008)AND(vt1.c0)))AND(vt1.c0))  WHEN vt1.c0 COLLATE RTRIM THEN '-16873888' ELSE 0.8997586190913799 END  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt0 LEFT OUTER JOIN vt1 ON NULL WHERE (((TIME(vt0.c0, x'25', vt0.c1))GLOB(ABS(vt0.c1)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN 0.8177413384263565 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT NULL)  NULLS FIRST, ((0Xffffffffff2bd62e) BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))) AND (((vt0.c0)<=(vt0.c0)))) ASC;
SELECT ALL MIN(vt0.c0) FROM vt0 INNER JOIN vt1 ON NULL WHERE (((TIME(vt0.c0, x'25', vt0.c1))GLOB(ABS(vt0.c1)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN 0.8177413384263565 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT NULL)  NULLS FIRST, ((-13904338) BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))) AND (((vt0.c0)<=(vt0.c0)))) ASC LIMIT 0x1 INTERSECT SELECT ALL MIN(vt0.c0) FROM vt0 INNER JOIN vt1 ON NULL WHERE ((((vt0.c0, vt0.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt0.c1, '', vt0.c1))) COLLATE NOCASE) ORDER BY ((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN 0.8177413384263565 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT NULL)  NULLS FIRST, ((0Xffffffffff2bd62e) BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))) AND (((vt0.c0)<=(vt0.c0)))) ASC LIMIT 1;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE ((((((((NULL IN (vt1.c0)))AND((((vt1.c0, vt1.c0, vt0.c1, vt0.c1))<((vt1.c0, vt0.c1, vt0.c0, vt1.c0))))))AND(CAST(NULL AS BLOB))))AND(((NULL)|(vt0.c0))))) ORDER BY CAST(((vt0.c0)*(vt1.c0)) AS REAL) ASC;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE ((((((((NULL IN (vt1.c0)))AND((((vt1.c0, vt1.c0, vt0.c1, vt0.c1))<((vt1.c0, vt0.c1, vt0.c0, vt1.c0))))))AND(CAST(NULL AS BLOB))))AND(((NULL)|(vt0.c0))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)&(vt1.c0)), (((vt1.c0, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, 0.24749611942602512, vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0))))) ASC, TYPEOF(x'') ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULL)AND((NOT ((((vt0.c0, vt0.c1, vt1.c0))<((vt0.c0, vt0.c1, vt0.c1)))))))) LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(0.005112041214257568)))AND(vt1.c0)))AND(vt1.c0)))||(vt1.c0 COLLATE RTRIM))) ORDER BY ((COALESCE(vt1.c0, vt1.c0, vt1.c0)) IS TRUE) ASC, ((INSTR(0.546264546500774, vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END) AND ((('')IS NOT(vt1.c0))));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(0.005112041214257568)))AND(vt1.c0)))AND(vt1.c0)))||(vt1.c0 COLLATE RTRIM)))AND(((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)))) ORDER BY ((COALESCE(vt1.c0, vt1.c0, vt1.c0)) IS TRUE) ASC, ((INSTR(0.546264546500774, vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END) AND ((('')IS NOT(vt1.c0)))) INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (ROUND(vt1.c0, vt1.c0) COLLATE NOCASE) ORDER BY ((COALESCE(vt1.c0, vt1.c0, vt1.c0)) IS TRUE) ASC, ((INSTR(0.546264546500774, vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END) AND ((('')IS NOT(vt1.c0))));
SELECT * FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))||(((vt1.c0) NOT NULL)))) ORDER BY ((((vt1.c0)OR(')t'))) NOTNULL) DESC  NULLS FIRST, (- (CASE WHEN x'6070' THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0 COLLATE RTRIM));
SELECT * FROM vt1 WHERE (((((((vt1.c0)%(vt1.c0)))||(((vt1.c0) NOT NULL))))AND(((vt1.c0) BETWEEN (vt1.c0) AND ((vt1.c0 IN ())))))) ORDER BY ((((vt1.c0)OR(')t'))) NOTNULL) DESC  NULLS FIRST, (- (CASE WHEN x'6070' THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0 COLLATE RTRIM)) LIMIT 0X1;
SELECT * FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))||(((vt1.c0) NOT NULL)))) ORDER BY ((((vt1.c0)OR(')t'))) NOTNULL) DESC  NULLS FIRST, (- (CASE WHEN x'6070' THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0 COLLATE RTRIM));
SELECT * FROM vt1 WHERE (((((((vt1.c0)%(vt1.c0)))||(((vt1.c0) NOT NULL))))AND(((vt1.c0) BETWEEN (vt1.c0) AND ((vt1.c0 IN ())))))) ORDER BY ((((vt1.c0)OR(')t'))) NOTNULL) DESC  NULLS FIRST, (- (CASE WHEN x'6070' THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0 COLLATE RTRIM)) LIMIT 0X1;
SELECT ALL * FROM vt1 WHERE (LOWER(vt1.c0)) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND ((((vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0))))) ASC  NULLS FIRST, ((((CASE WHEN vt1.c0 THEN vt1.c0 END)OR(((vt1.c0) IS FALSE))))AND(((vt1.c0) IS TRUE))), '(C' DESC;
SELECT * FROM vt1 WHERE (((LOWER(vt1.c0))AND(((((vt1.c0) IS FALSE)) IS FALSE)))) ORDER BY vt1.c0 DESC, CAST(((vt1.c0) IS FALSE) AS REAL) ASC  NULLS FIRST INTERSECT SELECT * FROM vt1 WHERE ((+ ((vt1.c0 IN ('870776970'))))) ORDER BY vt1.c0 DESC, CAST(((vt1.c0) IS FALSE) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (LOWER(vt1.c0)) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND ((((vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0))))) ASC  NULLS FIRST, ((((CASE WHEN vt1.c0 THEN vt1.c0 END)OR(((vt1.c0) IS FALSE))))AND(((vt1.c0) IS TRUE))), '(C' DESC;
SELECT * FROM vt1 WHERE (((LOWER(vt1.c0))AND(((((vt1.c0) IS FALSE)) IS FALSE)))) ORDER BY vt1.c0 DESC, CAST(((vt1.c0) IS FALSE) AS REAL) ASC  NULLS FIRST INTERSECT SELECT * FROM vt1 WHERE ((+ ((vt1.c0 IN ('870776970'))))) ORDER BY vt1.c0 DESC, CAST(((vt1.c0) IS FALSE) AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)||(vt0.c0)))IS(x'4f'))) ORDER BY CHANGES(), (NULL IN (CASE vt0.c1  WHEN vt0.c0 THEN x'' END)) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((vt0.c1)||(vt0.c0)))IS(x'4f'))) ORDER BY CHANGES(), (NULL IN (CASE vt0.c1  WHEN vt0.c0 THEN x'' END)) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS REAL));
SELECT DISTINCT * FROM vt0 WHERE (((CAST(((vt0.c1) NOTNULL) AS REAL))AND(((((vt0.c1) NOTNULL)) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)<(vt0.c1))))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((((((vt0.c1, vt0.c1, vt0.c1))<((vt0.c1, vt0.c0, vt0.c1)))) NOTNULL)) LIMIT 0x0;
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS REAL));
SELECT DISTINCT * FROM vt0 WHERE (((CAST(((vt0.c1) NOTNULL) AS REAL))AND(((((vt0.c1) NOTNULL)) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)<(vt0.c1))))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((((((vt0.c1, vt0.c1, vt0.c1))<((vt0.c1, vt0.c0, vt0.c1)))) NOTNULL)) LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((((((0.0272194163825058)OR(vt1.c0)))AND(vt0.c1)))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)))) ORDER BY (((vt0.c1)>(vt1.c0)) IN (JULIANDAY(vt1.c0, vt0.c1, vt0.c0, vt0.c0, vt1.c0)))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((((((0.0272194163825058)OR(vt1.c0)))AND(vt0.c1)))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END))))AND((((vt0.c1)&(vt0.c0)) IN ((vt0.c0 IN ()), (NOT (vt0.c0))))))) ORDER BY CAST(((((((vt0.c0)AND(0.5243428139513661)))AND(vt1.c0)))AND(vt0.c1)) AS INTEGER)  NULLS FIRST, UNLIKELY(DISTINCT ((vt1.c0)<=(x'dbde17'))) DESC  NULLS FIRST, x'45' DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((~ (vt0.c1)) IN (((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)), CAST(vt0.c1 AS TEXT)))) ORDER BY CAST(((((((vt0.c0)AND(0.5243428139513661)))AND(vt1.c0)))AND(vt0.c1)) AS INTEGER)  NULLS FIRST, UNLIKELY(DISTINCT ((vt1.c0)<=(x'dbde17'))) DESC  NULLS FIRST, x'45' DESC  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM vt1, vt0 WHERE (rtreenode(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY)) ORDER BY (NULL COLLATE RTRIM IN (((vt0.c0)IS NOT(vt0.c1)), CAST(vt0.c1 AS REAL)))  NULLS FIRST, CAST(((vt0.c1)>>(vt0.c1)) AS NUMERIC) ASC  NULLS LAST, ((vt0.c0) NOT BETWEEN (0.7361552485194938) AND (0.7358554411832954 COLLATE RTRIM));
SELECT COUNT(*) FROM vt1, vt0 WHERE (rtreenode(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY)) ORDER BY ((vt0.c0 COLLATE RTRIM) BETWEEN ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0Xffffffffdfb84eb5, vt0.c0, vt0.c1)))) AND (((x'9f')>=(-4.23690826E8))))  NULLS LAST, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE)  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM vt0 INNER JOIN vt1 ON (((('-423690826') NOT BETWEEN (vt0.c0) AND (vt0.c1)))!=(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)) WHERE (((CAST(vt0.c0 AS NUMERIC))OR(vt1.c0 COLLATE BINARY))) ORDER BY ((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN (((vt1.c0)-(vt0.c0))) AND (((vt0.c1)IS(vt0.c0)))), vt1.c0 DESC  NULLS FIRST;
SELECT MAX(vt0.c0) FROM vt0 INNER JOIN vt1 ON (((('-423690826') NOT BETWEEN (vt0.c0) AND (vt0.c1)))!=(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)) WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND((((((((1923675001 IN ()))OR(0.09500128611015879)))OR(((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))))AND(((vt0.c0)>=(vt0.c1))))))) ORDER BY ((CAST(vt0.c1 AS NUMERIC))%(((vt0.c0) IS TRUE))) ASC  NULLS LAST INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0 INNER JOIN vt1 ON (((('-423690826') NOT BETWEEN (vt0.c0) AND (vt0.c1)))!=(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)) WHERE (CAST(((((vt0.c1)AND(vt0.c0)))OR(NULL)) AS INTEGER)) ORDER BY ((CAST(vt0.c1 AS NUMERIC))%(((vt0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((+ (vt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((+ (vt0.c1))) ISNULL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (x'') AND ((+ (vt0.c0)))) ASC LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE BINARY) NOTNULL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (x'') AND ((+ (vt0.c0)))) ASC LIMIT 0x3;
SELECT ALL * FROM vt1, vt0 WHERE ((((+ (vt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((+ (vt0.c1))) ISNULL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (x'') AND ((+ (vt0.c0)))) ASC LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE BINARY) NOTNULL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (x'') AND ((+ (vt0.c0)))) ASC LIMIT 0x3;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY (((vt1.c0 IN (vt1.c0)))/(0.01873733391152055)) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY (((vt1.c0 IN (vt1.c0)))/(0.01873733391152055)) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY (((vt1.c0 IN (vt1.c0)))/(0.01873733391152055)) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY (((vt1.c0 IN (vt1.c0)))/(0.01873733391152055)) ASC  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE (TYPEOF(x'd020f3'));
SELECT DISTINCT MAX(vt0.c0) FROM vt1, vt0 WHERE (TYPEOF(x'd020f3')) ORDER BY vt0.c1 ASC  NULLS FIRST, CASE x'25'  WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN (((((((('')OR(NULL)))AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)) ELSE ((NULL)||(vt0.c0)) END  NULLS LAST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY ((((vt0.c0) BETWEEN (x'816e') AND ('')))>>(vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST, vt0.c1  NULLS LAST, (((vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((((((vt0.c1)OR('b|%bk')))OR(0xffffffff84791f1d)))AND(vt0.c0)))AND(0.23547872286150673)), ((vt0.c0) NOT NULL))))  NULLS LAST;
SELECT * FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY ((((vt0.c0) BETWEEN (x'816e') AND ('')))>>(vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST, vt0.c1  NULLS LAST, (((vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((((((vt0.c1)OR('b|%bk')))OR(-2072436963)))AND(vt0.c0)))AND(0.23547872286150673)), ((vt0.c0) NOT NULL))))  NULLS LAST LIMIT 0x3;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY ((((vt0.c0) BETWEEN (x'816e') AND ('')))>>(vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST, vt0.c1  NULLS LAST, (((vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((((((vt0.c1)OR('b|%bk')))OR(0xffffffff84791f1d)))AND(vt0.c0)))AND(0.23547872286150673)), ((vt0.c0) NOT NULL))))  NULLS LAST;
SELECT * FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY ((((vt0.c0) BETWEEN (x'816e') AND ('')))>>(vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST, vt0.c1  NULLS LAST, (((vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((((((vt0.c1)OR('b|%bk')))OR(-2072436963)))AND(vt0.c0)))AND(0.23547872286150673)), ((vt0.c0) NOT NULL))))  NULLS LAST LIMIT 0x3;
SELECT ALL * FROM vt0, vt1 WHERE (LIKE((+ (vt1.c0)), CASE WHEN vt0.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN '702621066' THEN vt0.c1 ELSE vt0.c0 END, 'B'));
SELECT * FROM vt0, vt1 WHERE (((LIKE((+ (vt1.c0)), CASE WHEN vt0.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN '702621066' THEN vt0.c1 ELSE vt0.c0 END, 'B'))AND(((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(0Xffffffffbc39e6e7))) NOT BETWEEN (x'') AND (((vt0.c1)OR(0X2654c5e0))))))) ORDER BY (((vt0.c1)) BETWEEN (((vt1.c0 IN ()))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))  NULLS FIRST, 0Xfffffffffe83215a, vt0.c1  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (LIKE((+ (vt1.c0)), CASE WHEN vt0.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN '702621066' THEN vt0.c1 ELSE vt0.c0 END, 'B'));
SELECT * FROM vt0, vt1 WHERE (((LIKE((+ (vt1.c0)), CASE WHEN vt0.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN '702621066' THEN vt0.c1 ELSE vt0.c0 END, 'B'))AND(((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(0Xffffffffbc39e6e7))) NOT BETWEEN (x'') AND (((vt0.c1)OR(0X2654c5e0))))))) ORDER BY (((vt0.c1)) BETWEEN (((vt1.c0 IN ()))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))  NULLS FIRST, 0Xfffffffffe83215a, vt0.c1  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (NULL) ORDER BY NULL, ((vt1.c0 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c1))) AND (CAST(x'b2' AS TEXT))) DESC, 'RW\1si*4' DESC, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1))))) ASC;
SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE (NULL) ORDER BY HEX(DISTINCT (~ (vt0.c1))) ASC, (((- (vt0.c0))) IS FALSE), (((((((NOT (vt0.c0)))OR(UPPER(DISTINCT vt0.c1))))AND(((vt0.c1)IS NOT(vt0.c1)))))AND(load_extension(vt1.c0, vt1.c0))) DESC  NULLS LAST INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS TEXT)) NOT BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY HEX(DISTINCT (~ (vt0.c1))) ASC, (((- (vt0.c0))) IS FALSE), (((((((NOT (vt0.c0)))OR(UPPER(DISTINCT vt0.c1))))AND(((vt0.c1)IS NOT(vt0.c1)))))AND(load_extension(vt1.c0, vt1.c0))) DESC  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (vt1.c0);
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((IFNULL(vt1.c0, vt1.c0))AND(x'1c62')))OR(vt1.c0)))OR(((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(x'')))OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (x'') ORDER BY ((((((IFNULL(vt1.c0, vt1.c0))AND(x'1c62')))OR(vt1.c0)))OR(((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(x'')))OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST LIMIT 1;
SELECT MAX(vt1.c0) FROM vt1 WHERE ('S,}HZBYz0') ORDER BY ((((NULL)<(vt1.c0)))>=(((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC, (((ABS(vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))>(((vt1.c0 IN (vt1.c0)), ((((((((NULL)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))  NULLS FIRST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ('S,}HZBYz0') ORDER BY -4860928.0 ASC  NULLS FIRST, (((vt1.c0 IN (vt1.c0)))>(((vt1.c0) IS TRUE))) DESC INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (CASE WHEN (vt1.c0 IN (NULL)) THEN 'y' WHEN LOWER(DISTINCT vt1.c0) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (vt1.c0 IN (vt1.c0, -950258986)) ELSE ((0.18608442311284334) NOTNULL) END) ORDER BY -4860928.0 ASC  NULLS FIRST, (((vt1.c0 IN (vt1.c0)))>(((vt1.c0) IS TRUE))) DESC;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0) NOT NULL) IN (((((vt0.c0)AND(vt1.c0)))OR(NULL)))) WHERE ((json_remove(vt0.c0, vt0.c1, vt1.c0, 0.7955393205553389) IN ())) ORDER BY CAST(vt0.c0 AS TEXT)  NULLS LAST, ((vt1.c0 COLLATE RTRIM) IS FALSE) ASC;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((vt1.c0) NOT NULL) IN (((((vt0.c0)AND(vt1.c0)))OR(NULL)))) WHERE ((((json_remove(vt0.c0, vt0.c1, vt1.c0, 0.7955393205553389) IN ()))AND(CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB)))) ORDER BY CAST(((vt1.c0)>=(vt0.c1)) AS TEXT) DESC, TRIM(DISTINCT ((((((((0.9204545667444529)OR(vt0.c1)))OR(vt0.c1)))AND(x'b6')))AND(vt0.c0)), (- (vt0.c0))) DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((vt1.c0) NOT NULL) IN (((((vt0.c0)AND(vt1.c0)))OR(NULL)))) WHERE (((vt0.c1) IS TRUE) COLLATE RTRIM) ORDER BY CAST(((vt1.c0)>=(vt0.c1)) AS TEXT) DESC, TRIM(DISTINCT ((((((((0.9204545667444529)OR(vt0.c1)))OR(vt0.c1)))AND(x'b6')))AND(vt0.c0)), (- (vt0.c0))) DESC LIMIT 0;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0) NOT NULL) IN (((((vt0.c0)AND(vt1.c0)))OR(NULL)))) WHERE ((json_remove(vt0.c0, vt0.c1, vt1.c0, 0.7955393205553389) IN ())) ORDER BY CAST(vt0.c0 AS TEXT)  NULLS LAST, ((vt1.c0 COLLATE RTRIM) IS FALSE) ASC;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((vt1.c0) NOT NULL) IN (((((vt0.c0)AND(vt1.c0)))OR(NULL)))) WHERE ((((json_remove(vt0.c0, vt0.c1, vt1.c0, 0.7955393205553389) IN ()))AND(CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB)))) ORDER BY CAST(((vt1.c0)>=(vt0.c1)) AS TEXT) DESC, TRIM(DISTINCT ((((((((0.9204545667444529)OR(vt0.c1)))OR(vt0.c1)))AND(x'b6')))AND(vt0.c0)), (- (vt0.c0))) DESC LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((vt1.c0) NOT NULL) IN (((((vt0.c0)AND(vt1.c0)))OR(NULL)))) WHERE (((vt0.c1) IS TRUE) COLLATE RTRIM) ORDER BY CAST(((vt1.c0)>=(vt0.c1)) AS TEXT) DESC, TRIM(DISTINCT ((((((((0.9204545667444529)OR(vt0.c1)))OR(vt0.c1)))AND(x'b6')))AND(vt0.c0)), (- (vt0.c0))) DESC LIMIT 0;
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER));
SELECT * FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER))AND(((((vt1.c0)<<(vt1.c0))) BETWEEN (((vt1.c0) NOTNULL)) AND (vt1.c0))))) LIMIT 4;
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER));
SELECT * FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER))AND(((((vt1.c0)<<(vt1.c0))) BETWEEN (((vt1.c0) NOTNULL)) AND (vt1.c0))))) LIMIT 4;
SELECT MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0) NOT NULL)) IS FALSE)) ORDER BY ((((((((vt1.c0)=(vt1.c0)))OR((vt1.c0 IN ()))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0, vt1.c0)))));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0) NOT NULL)) IS FALSE)) ORDER BY ((((((vt1.c0) IS TRUE))OR(((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(0.7761462743364473)))))AND(((vt1.c0)OR(vt1.c0)))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((- (((vt1.c0) IS TRUE)))) ORDER BY ((((((vt1.c0) IS TRUE))OR(((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(0.7761462743364473)))))AND(((vt1.c0)OR(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CAST(vt0.c0 AS REAL))&((vt0.c0 IN ()))) WHERE ((((vt1.c0)<<(vt1.c0)) IN ()));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((CAST(vt0.c0 AS REAL))&((vt0.c0 IN ()))) WHERE ((((vt1.c0)<<(vt1.c0)) IN ()));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CAST(vt0.c0 AS REAL))&((vt0.c0 IN ()))) WHERE ((((vt1.c0)<<(vt1.c0)) IN ()));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((CAST(vt0.c0 AS REAL))&((vt0.c0 IN ()))) WHERE ((((vt1.c0)<<(vt1.c0)) IN ()));
SELECT * FROM vt1, vt0 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0 COLLATE RTRIM))) ORDER BY ((vt1.c0)||(vt0.c1)), vt1.c0 COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0 COLLATE RTRIM))) ORDER BY ((vt1.c0)||(vt0.c1)), vt1.c0 COLLATE NOCASE ASC  NULLS LAST LIMIT 0X2;
SELECT * FROM vt1, vt0 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0 COLLATE RTRIM))) ORDER BY ((vt1.c0)||(vt0.c1)), vt1.c0 COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0 COLLATE RTRIM))) ORDER BY ((vt1.c0)||(vt0.c1)), vt1.c0 COLLATE NOCASE ASC  NULLS LAST LIMIT 0X2;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1, x'66'))) NOTNULL));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1, x'66'))) NOTNULL)) LIMIT 0x0;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1, x'66'))) NOTNULL));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1, x'66'))) NOTNULL)) LIMIT 0x0;
SELECT MIN(vt1.c0) FROM vt1 WHERE (((LTRIM(vt1.c0)) NOT BETWEEN (x'1c') AND ('GJ-')));
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((((LTRIM(vt1.c0)) NOT BETWEEN (x'1c') AND ('GJ-')))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(0.17211720297155264))) ISNULL)))) INTERSECT SELECT MIN(vt1.c0) FROM vt1 WHERE ((((104544181 IN (vt1.c0))) NOT BETWEEN ((((vt1.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0)) AND ((x'dd253dc566', vt1.c0)))) AND (0Xfffffffffa3c41ec)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((NOT (vt0.c1)))<(CAST(vt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((NOT (vt0.c1)))<(CAST(vt0.c1 AS REAL)))) ORDER BY ((ABS(vt1.c0)) NOT BETWEEN (vt0.c0) AND (((0.4879512721726472)==(vt0.c1))))  NULLS FIRST, vt0.c1, (('1936078041' COLLATE RTRIM) NOTNULL) LIMIT 0X1 INTERSECT SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((ABS(vt1.c0)) NOT BETWEEN (vt0.c0) AND (((0.4879512721726472)==(vt0.c1))))  NULLS FIRST, vt0.c1, (('1936078041' COLLATE RTRIM) NOTNULL) LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE ((((+ (vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND ((('	*	5D.') IS TRUE)))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ((((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))  NULLS LAST, (((('2140682792')AND((~ (vt0.c0)))))AND(((vt1.c0)>=(vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((((+ (vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND ((('	*	5D.') IS TRUE)))) ORDER BY (((- (vt0.c1)))<(vt0.c0 COLLATE RTRIM)), (vt0.c1 IN (vt0.c0, NULL)) COLLATE NOCASE  NULLS LAST, (~ ('609786814')) LIMIT 0X2;
SELECT ALL * FROM vt0, vt1 WHERE ((((+ (vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND ((('	*	5D.') IS TRUE)))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ((((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))  NULLS LAST, (((('2140682792')AND((~ (vt0.c0)))))AND(((vt1.c0)>=(vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((((+ (vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND ((('	*	5D.') IS TRUE)))) ORDER BY (((- (vt0.c1)))<(vt0.c0 COLLATE RTRIM)), (vt0.c1 IN (vt0.c0, NULL)) COLLATE NOCASE  NULLS LAST, (~ ('609786814')) LIMIT 0X2;
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((((vt0.c0)IS(vt1.c0)) IN (((vt1.c0)-(vt0.c0)), 0.9551355413841127)));
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0)IS(vt1.c0)) IN (((vt1.c0)-(vt0.c0)), 0.9551355413841127))) LIMIT 0x0;
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((((vt0.c0)IS(vt1.c0)) IN (((vt1.c0)-(vt0.c0)), 0.9551355413841127)));
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0)IS(vt1.c0)) IN (((vt1.c0)-(vt0.c0)), 0.9551355413841127))) LIMIT 0x0;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0))) NOT NULL)) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))==((UNLIKELY(DISTINCT vt1.c0)))) DESC;
SELECT * FROM vt1 WHERE (((((((vt1.c0)==(vt1.c0))) NOT NULL))AND(0xffffffffc5d3dbd7))) ORDER BY (((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(x'86'))))<=((CAST(vt1.c0 AS NUMERIC), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) DESC, ((((NOT (vt1.c0))))==((vt1.c0)));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0))) NOT NULL)) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))==((UNLIKELY(DISTINCT vt1.c0)))) DESC;
SELECT * FROM vt1 WHERE (((((((vt1.c0)==(vt1.c0))) NOT NULL))AND(0xffffffffc5d3dbd7))) ORDER BY (((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(x'86'))))<=((CAST(vt1.c0 AS NUMERIC), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) DESC, ((((NOT (vt1.c0))))==((vt1.c0)));
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) BETWEEN (TRIM(vt1.c0, vt0.c1)) AND (CAST(vt0.c1 AS NUMERIC))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((CAST(vt0.c1 AS INTEGER)) BETWEEN (TRIM(vt1.c0, vt0.c1)) AND (CAST(vt0.c1 AS NUMERIC))))AND((((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) AND ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))))))) ORDER BY (((vt0.c1, vt0.c0)) NOT BETWEEN (((- (-2.094347978E9)), (((NULL))<=((vt1.c0))))) AND (((('-576805150') BETWEEN (vt0.c1) AND (vt1.c0)), ((vt0.c0)LIKE(vt0.c1))))) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))>((CAST(vt0.c1 AS TEXT)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((((((vt0.c0)-(vt0.c0)))AND(NULL)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)))AND((((vt0.c0))<=((vt1.c0))))))AND(((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)))))AND(((vt0.c1) NOTNULL)))) ORDER BY (((vt0.c1, vt0.c0)) NOT BETWEEN (((- (-2.094347978E9)), (((NULL))<=((vt1.c0))))) AND (((('-576805150') BETWEEN (vt0.c1) AND (vt1.c0)), ((vt0.c0)LIKE(vt0.c1))))) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))>((CAST(vt0.c1 AS TEXT)))) LIMIT 0X0;
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) BETWEEN (TRIM(vt1.c0, vt0.c1)) AND (CAST(vt0.c1 AS NUMERIC))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((CAST(vt0.c1 AS INTEGER)) BETWEEN (TRIM(vt1.c0, vt0.c1)) AND (CAST(vt0.c1 AS NUMERIC))))AND((((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) AND ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))))))) ORDER BY (((vt0.c1, vt0.c0)) NOT BETWEEN (((- (-2.094347978E9)), (((NULL))<=((vt1.c0))))) AND (((('-576805150') BETWEEN (vt0.c1) AND (vt1.c0)), ((vt0.c0)LIKE(vt0.c1))))) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))>((CAST(vt0.c1 AS TEXT)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((((((vt0.c0)-(vt0.c0)))AND(NULL)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)))AND((((vt0.c0))<=((vt1.c0))))))AND(((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)))))AND(((vt0.c1) NOTNULL)))) ORDER BY (((vt0.c1, vt0.c0)) NOT BETWEEN (((- (-2.094347978E9)), (((NULL))<=((vt1.c0))))) AND (((('-576805150') BETWEEN (vt0.c1) AND (vt1.c0)), ((vt0.c0)LIKE(vt0.c1))))) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))>((CAST(vt0.c1 AS TEXT)))) LIMIT 0X0;
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS REAL)) ORDER BY (~ (CAST(vt1.c0 AS TEXT))), (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS REAL) AS REAL))AND(TYPEOF(vt1.c0) COLLATE BINARY))) ORDER BY (~ (CAST(vt1.c0 AS TEXT))), (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ()) ASC LIMIT 0 INTERSECT SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (~ (CAST(vt1.c0 AS TEXT))), (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ()) ASC LIMIT 0x0;
SELECT MIN(vt1.c0) FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS REAL)) ORDER BY '-904258388' ASC, (((NOT (vt1.c0)))*(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC, vt1.c0 ASC;
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS REAL))AND(vt1.c0))) ORDER BY (- (vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c1)) COLLATE BINARY) ORDER BY vt0.c1 DESC;
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c1)) COLLATE BINARY)AND(CASE WHEN (+ (vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE ((vt0.c0)<('1696562798')) END))) ORDER BY vt0.c1 DESC LIMIT 0;
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c1)) COLLATE BINARY) ORDER BY vt0.c1 DESC;
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c1)) COLLATE BINARY)AND(CASE WHEN (+ (vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE ((vt0.c0)<('1696562798')) END))) ORDER BY vt0.c1 DESC LIMIT 0;
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)LIKE(vt1.c0))) IS FALSE) WHERE (((vt0.c1 IN ()) IN ('0.19388439680507563')));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)LIKE(vt1.c0))) IS FALSE) WHERE (((vt0.c1 IN ()) IN ('0.19388439680507563'))) LIMIT 2 INTERSECT SELECT * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)LIKE(vt1.c0))) IS FALSE) WHERE (QUOTE((vt0.c1 IN (vt0.c1)))) LIMIT 2;
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)LIKE(vt1.c0))) IS FALSE) WHERE (((vt0.c1 IN ()) IN ('0.19388439680507563')));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)LIKE(vt1.c0))) IS FALSE) WHERE (((vt0.c1 IN ()) IN ('0.19388439680507563'))) LIMIT 2 INTERSECT SELECT * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)LIKE(vt1.c0))) IS FALSE) WHERE (QUOTE((vt0.c1 IN (vt0.c1)))) LIMIT 2;
SELECT ALL * FROM vt1, vt0 WHERE (CAST((+ (vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt1, vt0 WHERE (((CAST((+ (vt1.c0)) AS INTEGER))AND((vt0.c0 IN ((+ (vt0.c1))))))) ORDER BY ((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, ((0.9858775724950023) NOT BETWEEN (CAST(1.917719584E9 AS BLOB)) AND (((vt0.c1)AND(NULL)))) DESC, CAST(CASE vt0.c1  WHEN NULL THEN vt1.c0 END AS REAL) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE (CAST((+ (vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt1, vt0 WHERE (((CAST((+ (vt1.c0)) AS INTEGER))AND((vt0.c0 IN ((+ (vt0.c1))))))) ORDER BY ((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, ((0.9858775724950023) NOT BETWEEN (CAST(1.917719584E9 AS BLOB)) AND (((vt0.c1)AND(NULL)))) DESC, CAST(CASE vt0.c1  WHEN NULL THEN vt1.c0 END AS REAL) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((vt1.c0 IN ())))) ORDER BY vt1.c0 COLLATE BINARY DESC, vt1.c0, ((vt1.c0)>((vt1.c0 IN (vt1.c0)))) ASC;
SELECT DISTINCT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((vt1.c0 IN ())))) ORDER BY vt1.c0 COLLATE BINARY DESC, vt1.c0, ((vt1.c0)>((vt1.c0 IN (vt1.c0)))) ASC LIMIT 0x2;
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((vt1.c0 IN ())))) ORDER BY vt1.c0 COLLATE BINARY DESC, vt1.c0, ((vt1.c0)>((vt1.c0 IN (vt1.c0)))) ASC;
SELECT DISTINCT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((vt1.c0 IN ())))) ORDER BY vt1.c0 COLLATE BINARY DESC, vt1.c0, ((vt1.c0)>((vt1.c0 IN (vt1.c0)))) ASC LIMIT 0x2;
SELECT * FROM vt1 WHERE (NULLIF(((vt1.c0)&(vt1.c0)), ((vt1.c0) NOT NULL)));
SELECT ALL * FROM vt1 WHERE (NULLIF(((vt1.c0)&(vt1.c0)), ((vt1.c0) NOT NULL))) ORDER BY ((((vt1.c0)<=(vt1.c0))) NOT NULL) ASC  NULLS FIRST, ((0.8213979501024045) IS FALSE) COLLATE BINARY  NULLS LAST, ((((vt1.c0)GLOB(vt1.c0)))||(CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)) LIMIT 0x0 INTERSECT SELECT ALL * FROM vt1 WHERE (CASE ((((((((vt1.c0)OR(vt1.c0)))OR(x'6b9cde56')))OR(vt1.c0)))OR(vt1.c0))  WHEN (+ (vt1.c0)) THEN ((vt1.c0) BETWEEN (0.41831203868102895) AND (vt1.c0)) WHEN ((vt1.c0)<=(vt1.c0)) THEN vt1.c0 WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((((((((((((vt1.c0)AND(0Xffffffff8814ca1a)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 0.20180901668601126, vt1.c0))) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((((vt1.c0)<=(vt1.c0))) NOT NULL) ASC  NULLS FIRST, ((0.8213979501024045) IS FALSE) COLLATE BINARY  NULLS LAST, ((((vt1.c0)GLOB(vt1.c0)))||(CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)) LIMIT 0;
SELECT * FROM vt1 WHERE (NULLIF(((vt1.c0)&(vt1.c0)), ((vt1.c0) NOT NULL)));
SELECT ALL * FROM vt1 WHERE (NULLIF(((vt1.c0)&(vt1.c0)), ((vt1.c0) NOT NULL))) ORDER BY ((((vt1.c0)<=(vt1.c0))) NOT NULL) ASC  NULLS FIRST, ((0.8213979501024045) IS FALSE) COLLATE BINARY  NULLS LAST, ((((vt1.c0)GLOB(vt1.c0)))||(CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)) LIMIT 0x0 INTERSECT SELECT ALL * FROM vt1 WHERE (CASE ((((((((vt1.c0)OR(vt1.c0)))OR(x'6b9cde56')))OR(vt1.c0)))OR(vt1.c0))  WHEN (+ (vt1.c0)) THEN ((vt1.c0) BETWEEN (0.41831203868102895) AND (vt1.c0)) WHEN ((vt1.c0)<=(vt1.c0)) THEN vt1.c0 WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((((((((((((vt1.c0)AND(0Xffffffff8814ca1a)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 0.20180901668601126, vt1.c0))) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((((vt1.c0)<=(vt1.c0))) NOT NULL) ASC  NULLS FIRST, ((0.8213979501024045) IS FALSE) COLLATE BINARY  NULLS LAST, ((((vt1.c0)GLOB(vt1.c0)))||(CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)) LIMIT 0;
SELECT * FROM vt0 WHERE ((((((vt0.c1)<=(vt0.c0))))<=((((vt0.c1)||(vt0.c0)))))) ORDER BY ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c1)<=(vt0.c0))))<=((((vt0.c1)||(vt0.c0)))))) ORDER BY ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()) DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0))>((NULL, vt0.c1)))))) ORDER BY ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM vt0 WHERE ((((((vt0.c1)<=(vt0.c0))))<=((((vt0.c1)||(vt0.c0)))))) ORDER BY ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1) ISNULL))));
SELECT DISTINCT * FROM vt0 WHERE ((- (((vt0.c1) ISNULL)))) ORDER BY PRINTF(((vt0.c0)&(vt0.c1)), (((vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0))), ((vt0.c0)>>(vt0.c1))), ((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1)%(vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(TRIM(vt0.c0))))AND((~ (vt0.c1)))) DESC, ((UNICODE(vt0.c0)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c1)) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((- (((vt0.c0) NOTNULL)))) ORDER BY PRINTF(((vt0.c0)&(vt0.c1)), (((vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0))), ((vt0.c0)>>(vt0.c1))), ((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1)%(vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(TRIM(vt0.c0))))AND((~ (vt0.c1)))) DESC, ((UNICODE(vt0.c0)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c1));
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1) ISNULL))));
SELECT DISTINCT * FROM vt0 WHERE ((- (((vt0.c1) ISNULL)))) ORDER BY PRINTF(((vt0.c0)&(vt0.c1)), (((vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0))), ((vt0.c0)>>(vt0.c1))), ((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1)%(vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(TRIM(vt0.c0))))AND((~ (vt0.c1)))) DESC, ((UNICODE(vt0.c0)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c1)) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((- (((vt0.c0) NOTNULL)))) ORDER BY PRINTF(((vt0.c0)&(vt0.c1)), (((vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0))), ((vt0.c0)>>(vt0.c1))), ((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1)%(vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(TRIM(vt0.c0))))AND((~ (vt0.c1)))) DESC, ((UNICODE(vt0.c0)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c1));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0)AND((((vt1.c0 IN (vt1.c0))) IS TRUE)))) ORDER BY ((((vt1.c0)AND(vt1.c0)))<<(CAST(vt1.c0 AS TEXT))), vt1.c0  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) ORDER BY ((((vt1.c0)AND(vt1.c0)))<<(CAST(vt1.c0 AS TEXT))), vt1.c0  NULLS LAST LIMIT 0x0;
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0)AND((((vt1.c0 IN (vt1.c0))) IS TRUE)))) ORDER BY ((((vt1.c0)AND(vt1.c0)))<<(CAST(vt1.c0 AS TEXT))), vt1.c0  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) ORDER BY ((((vt1.c0)AND(vt1.c0)))<<(CAST(vt1.c0 AS TEXT))), vt1.c0  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (0.7519218757094571);
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((0.7519218757094571)AND(NULL))) LIMIT 0x2 INTERSECT SELECT ALL MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c0)-(vt0.c0)) IN ())) LIMIT 0x2;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((((((NULL)>=(NULL)))OR((vt0.c0 IN ()))))OR(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)))OR((vt0.c0 IN ()))) WHERE (((((vt1.c0)IS(vt0.c1))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c1)LIKE(vt0.c0))))) ORDER BY (((vt0.c0 COLLATE RTRIM, (NOT (vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))>((vt0.c1, (((vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt1.c0))), ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0))))), ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))) AND (729584752));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON ((((((((NULL)>=(NULL)))OR((vt0.c0 IN ()))))OR(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)))OR((vt0.c0 IN ()))) WHERE (((((((vt1.c0)IS(vt0.c1))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c1)LIKE(vt0.c0)))))AND(((((vt0.c1)<=(vt1.c0)))LIKE((((vt1.c0, vt1.c0))=((vt0.c1, vt0.c1)))))))) ORDER BY (((~ (vt0.c0)))<(((vt0.c1)!=(vt0.c1)))) ASC, ((CAST(vt0.c1 AS INTEGER))LIKE(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), vt0.c0 COLLATE RTRIM DESC LIMIT 0X0;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((((((NULL)>=(NULL)))OR((vt0.c0 IN ()))))OR(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)))OR((vt0.c0 IN ()))) WHERE (((((vt1.c0)IS(vt0.c1))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c1)LIKE(vt0.c0))))) ORDER BY (((vt0.c0 COLLATE RTRIM, (NOT (vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))>((vt0.c1, (((vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt1.c0))), ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0))))), ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))) AND (729584752));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON ((((((((NULL)>=(NULL)))OR((vt0.c0 IN ()))))OR(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)))OR((vt0.c0 IN ()))) WHERE (((((((vt1.c0)IS(vt0.c1))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c1)LIKE(vt0.c0)))))AND(((((vt0.c1)<=(vt1.c0)))LIKE((((vt1.c0, vt1.c0))=((vt0.c1, vt0.c1)))))))) ORDER BY (((~ (vt0.c0)))<(((vt0.c1)!=(vt0.c1)))) ASC, ((CAST(vt0.c1 AS INTEGER))LIKE(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), vt0.c0 COLLATE RTRIM DESC LIMIT 0X0;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, ((vt0.c0)>=(vt0.c1)), (((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))))) AND ((DATETIME(vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.c0 AS BLOB)))));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, ((vt0.c0)>=(vt0.c1)), (((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))))) AND ((DATETIME(vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.c0 AS BLOB)))))AND((CAST(vt0.c0 AS NUMERIC) IN ()))));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)AND(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt1.c0)AND(vt0.c0))) ISNULL)) ORDER BY (~ (vt0.c0)) ASC LIMIT 2;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)AND(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt1.c0)AND(vt0.c0))) ISNULL)) ORDER BY (~ (vt0.c0)) ASC LIMIT 2;
SELECT * FROM vt0 INNER JOIN vt1 ON ((((((((((((((vt0.c0)IS NOT(vt1.c0)))AND(((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))))OR(load_extension(vt0.c0))))AND(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(NULL)))OR(UNLIKELY(vt0.c0))) WHERE (((vt0.c1) BETWEEN (((vt0.c1) NOTNULL)) AND (vt0.c0)));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((((vt0.c0)IS NOT(vt1.c0)))AND(((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))))OR(load_extension(vt0.c0))))AND(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(NULL)))OR(UNLIKELY(vt0.c0))) WHERE (((vt0.c1) BETWEEN (((vt0.c1) NOTNULL)) AND (vt0.c0))) INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((((vt0.c0)IS NOT(vt1.c0)))AND(((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))))OR(load_extension(vt0.c0))))AND(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(NULL)))OR(UNLIKELY(vt0.c0))) WHERE ((+ (vt1.c0)));
SELECT * FROM vt0 INNER JOIN vt1 ON ((((((((((((((vt0.c0)IS NOT(vt1.c0)))AND(((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))))OR(load_extension(vt0.c0))))AND(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(NULL)))OR(UNLIKELY(vt0.c0))) WHERE (((vt0.c1) BETWEEN (((vt0.c1) NOTNULL)) AND (vt0.c0)));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((((vt0.c0)IS NOT(vt1.c0)))AND(((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))))OR(load_extension(vt0.c0))))AND(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(NULL)))OR(UNLIKELY(vt0.c0))) WHERE (((vt0.c1) BETWEEN (((vt0.c1) NOTNULL)) AND (vt0.c0))) INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((((vt0.c0)IS NOT(vt1.c0)))AND(((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))))OR(load_extension(vt0.c0))))AND(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(NULL)))OR(UNLIKELY(vt0.c0))) WHERE ((+ (vt1.c0)));
SELECT * FROM vt1 WHERE (IFNULL(DISTINCT vt1.c0 COLLATE BINARY, x'7c')) ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1967188352' END) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), ((((((((((((SQLITE_VERSION())OR(vt1.c0)))OR(NULL)))OR(((vt1.c0)>(-1.464712341E9)))))AND('XqH' COLLATE RTRIM)))AND(CAST(vt1.c0 AS INTEGER))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS LAST, (((((vt1.c0, 0.9511946527997096))>=((vt1.c0, vt1.c0)))) NOTNULL) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE (IFNULL(DISTINCT vt1.c0 COLLATE BINARY, x'7c')) ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1967188352' END) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), ((((((((((((SQLITE_VERSION())OR(vt1.c0)))OR(NULL)))OR(((vt1.c0)>(-1.464712341E9)))))AND('XqH' COLLATE RTRIM)))AND(CAST(vt1.c0 AS INTEGER))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS LAST, (((((vt1.c0, 0.9511946527997096))>=((vt1.c0, vt1.c0)))) NOTNULL) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))*(((vt1.c0)<>(vt1.c0))))) ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1967188352' END) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), ((((((((((((SQLITE_VERSION())OR(vt1.c0)))OR(NULL)))OR(((vt1.c0)>(-1.464712341E9)))))AND('XqH' COLLATE RTRIM)))AND(CAST(vt1.c0 AS INTEGER))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS LAST, (((((vt1.c0, 0.9511946527997096))>=((vt1.c0, vt1.c0)))) NOTNULL) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (IFNULL(DISTINCT vt1.c0 COLLATE BINARY, x'7c')) ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1967188352' END) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), ((((((((((((SQLITE_VERSION())OR(vt1.c0)))OR(NULL)))OR(((vt1.c0)>(-1.464712341E9)))))AND('XqH' COLLATE RTRIM)))AND(CAST(vt1.c0 AS INTEGER))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS LAST, (((((vt1.c0, 0.9511946527997096))>=((vt1.c0, vt1.c0)))) NOTNULL) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE (IFNULL(DISTINCT vt1.c0 COLLATE BINARY, x'7c')) ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1967188352' END) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), ((((((((((((SQLITE_VERSION())OR(vt1.c0)))OR(NULL)))OR(((vt1.c0)>(-1.464712341E9)))))AND('XqH' COLLATE RTRIM)))AND(CAST(vt1.c0 AS INTEGER))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS LAST, (((((vt1.c0, 0.9511946527997096))>=((vt1.c0, vt1.c0)))) NOTNULL) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))*(((vt1.c0)<>(vt1.c0))))) ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1967188352' END) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), ((((((((((((SQLITE_VERSION())OR(vt1.c0)))OR(NULL)))OR(((vt1.c0)>(-1.464712341E9)))))AND('XqH' COLLATE RTRIM)))AND(CAST(vt1.c0 AS INTEGER))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS LAST, (((((vt1.c0, 0.9511946527997096))>=((vt1.c0, vt1.c0)))) NOTNULL) ASC  NULLS LAST;
SELECT MIN(vt0.c1) FROM vt0 WHERE ((~ ((((vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0)))))) ORDER BY LIKE((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, NULL)) AND ((vt0.c1, vt0.c0, '-734681191'))), vt0.c0, '0');
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((((~ ((((vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0))))))AND(vt0.c0))) ORDER BY LIKE((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, NULL)) AND ((vt0.c1, vt0.c0, '-734681191'))), vt0.c0, '0') LIMIT 0;
SELECT MIN(vt1.c0) FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN (CAST('-727383472' AS BLOB)))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((NOT (vt1.c0))))==((vt1.c0))) DESC;
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN (CAST('-727383472' AS BLOB)))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((NOT (vt1.c0))))==((vt1.c0))) DESC LIMIT 2;
SELECT * FROM vt1, vt0 WHERE (json_insert((vt0.c0 IN (vt0.c1, vt0.c1)), (vt0.c0 IN (vt0.c1, vt0.c1)), (~ (vt0.c0)), CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END));
SELECT DISTINCT * FROM vt1, vt0 WHERE (json_insert((vt0.c0 IN (vt0.c1, vt0.c1)), (vt0.c0 IN (vt0.c1, vt0.c1)), (~ (vt0.c0)), CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) ORDER BY ((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)), CAST((((vt0.c1, 0.21107374450278005, '46522376')) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) AS REAL) LIMIT 0x0;
SELECT * FROM vt1, vt0 WHERE (json_insert((vt0.c0 IN (vt0.c1, vt0.c1)), (vt0.c0 IN (vt0.c1, vt0.c1)), (~ (vt0.c0)), CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END));
SELECT MIN(vt1.c0) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOTNULL)) ORDER BY TYPEOF(vt1.c0) COLLATE NOCASE, DATE(NULL, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) ASC;
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOTNULL)) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT NULL) ASC  NULLS FIRST, vt1.c0 COLLATE NOCASE INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (x'') ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT NULL) ASC  NULLS FIRST, vt1.c0 COLLATE NOCASE;
SELECT ALL * FROM vt0, vt1 WHERE ('-1633730208') ORDER BY ((((((((CAST(vt0.c1 AS REAL))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN '-1096545910' ELSE vt1.c0 END)))AND(1e500)))AND(NULL)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ('-1633730208') ORDER BY (- (CASE vt1.c0  WHEN vt0.c1 THEN 0.08443779081709935 ELSE vt0.c1 END)) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ('-1633730208') ORDER BY ((((((((CAST(vt0.c1 AS REAL))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN '-1096545910' ELSE vt1.c0 END)))AND(1e500)))AND(NULL)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ('-1633730208') ORDER BY (- (CASE vt1.c0  WHEN vt0.c1 THEN 0.08443779081709935 ELSE vt0.c1 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((9.61685841E8)||(vt0.c1)) COLLATE RTRIM) ORDER BY vt0.c1;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((9.61685841E8)||(vt0.c1)) COLLATE RTRIM)AND(CAST(json_object(vt0.c1, vt0.c0, vt0.c1, -1277611189) AS BLOB)))) ORDER BY vt0.c1 LIMIT 2;
SELECT * FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))==((((((((1262436262)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)), ((vt1.c0)AND('-1420023627')))))) ORDER BY (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST, ((vt1.c0)||('1086688798')) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))==((((((((0X4b3f3fa6)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)), ((vt1.c0)AND('-1420023627')))))) ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR((~ (0xfffffffff7d981ae)))))AND(((vt1.c0) NOTNULL)))  NULLS LAST, ((GLOB(vt1.c0, vt1.c0))IS(((vt1.c0) IS TRUE))) ASC  NULLS LAST LIMIT 0x2 INTERSECT SELECT ALL * FROM vt1 WHERE ('q') ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR((~ (-136740434)))))AND(((vt1.c0) NOTNULL)))  NULLS LAST, ((GLOB(vt1.c0, vt1.c0))IS(((vt1.c0) IS TRUE))) ASC  NULLS LAST LIMIT 0x2;
SELECT * FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))==((((((((1262436262)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)), ((vt1.c0)AND('-1420023627')))))) ORDER BY (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST, ((vt1.c0)||('1086688798')) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))==((((((((0X4b3f3fa6)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)), ((vt1.c0)AND('-1420023627')))))) ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR((~ (0xfffffffff7d981ae)))))AND(((vt1.c0) NOTNULL)))  NULLS LAST, ((GLOB(vt1.c0, vt1.c0))IS(((vt1.c0) IS TRUE))) ASC  NULLS LAST LIMIT 0x2 INTERSECT SELECT ALL * FROM vt1 WHERE ('q') ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR((~ (-136740434)))))AND(((vt1.c0) NOTNULL)))  NULLS LAST, ((GLOB(vt1.c0, vt1.c0))IS(((vt1.c0) IS TRUE))) ASC  NULLS LAST LIMIT 0x2;
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ('d?'))) ORDER BY (('1367056162') NOT NULL) COLLATE NOCASE DESC, IFNULL(DISTINCT vt1.c0 COLLATE RTRIM, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ('d?'))) ORDER BY ((vt1.c0 COLLATE RTRIM)||(((vt1.c0)<=(vt1.c0))));
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (0.13698283077727613);
SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE (0.13698283077727613) ORDER BY CAST(CASE NULL  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN '' ELSE vt0.c0 END AS BLOB) ASC, UPPER(vt0.c1) COLLATE NOCASE  NULLS LAST;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (CASE (((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))  WHEN ((vt1.c0)||(vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT MIN(vt1.c0) FROM vt1 WHERE (((CASE (((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))  WHEN ((vt1.c0)||(vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END)AND((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) LIMIT 3 INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (vt1.c0) LIMIT 0x3;
SELECT * FROM vt0 WHERE (((NULL)+((('1934281787') IS TRUE)))) ORDER BY (((vt0.c0 IN ()))%((((vt0.c1, vt0.c1))==((vt0.c0, vt0.c0)))))  NULLS FIRST, (((vt0.c1, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c0))>=((vt0.c0, NULL))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC;
SELECT DISTINCT * FROM vt0 WHERE (((NULL)+((('1934281787') IS TRUE)))) ORDER BY ((((0.021593151793837806) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL), (- (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(0Xffffffffb317cf31 COLLATE NOCASE AS NUMERIC)) ORDER BY ((((0.021593151793837806) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL), (- (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) LIMIT 0;
SELECT * FROM vt0 WHERE (((NULL)+((('1934281787') IS TRUE)))) ORDER BY (((vt0.c0 IN ()))%((((vt0.c1, vt0.c1))==((vt0.c0, vt0.c0)))))  NULLS FIRST, (((vt0.c1, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c0))>=((vt0.c0, NULL))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC;
SELECT DISTINCT * FROM vt0 WHERE (((NULL)+((('1934281787') IS TRUE)))) ORDER BY ((((0.021593151793837806) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL), (- (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(0Xffffffffb317cf31 COLLATE NOCASE AS NUMERIC)) ORDER BY ((((0.021593151793837806) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL), (- (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) LIMIT 0;
SELECT * FROM vt1, vt0 WHERE ((((TIME(vt0.c0, vt0.c1, vt0.c0, vt0.c0)))>((((vt0.c0)%(0.815121726062482))))));
SELECT * FROM vt1, vt0 WHERE ((((TIME(vt0.c0, vt0.c1, vt0.c0, vt0.c0)))>((((vt0.c0)%(0.815121726062482)))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN (NULL) AND (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN '/>)fs~P M' END)) INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (CASE (((vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt0.c1)) AND ((vt1.c0, vt1.c0, vt1.c0)))  WHEN vt1.c0 THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0)==(vt0.c0)) END) ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN (NULL) AND (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN '/>)fs~P M' END));
SELECT * FROM vt1, vt0 WHERE ((((TIME(vt0.c0, vt0.c1, vt0.c0, vt0.c0)))>((((vt0.c0)%(0.815121726062482))))));
SELECT * FROM vt1, vt0 WHERE ((((TIME(vt0.c0, vt0.c1, vt0.c0, vt0.c0)))>((((vt0.c0)%(0.815121726062482)))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN (NULL) AND (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN '/>)fs~P M' END)) INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (CASE (((vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt0.c1)) AND ((vt1.c0, vt1.c0, vt1.c0)))  WHEN vt1.c0 THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0)==(vt0.c0)) END) ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN (NULL) AND (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN '/>)fs~P M' END));
SELECT MIN(vt1.c0) FROM vt1 WHERE ((((((((vt1.c0, vt1.c0))<((vt1.c0, vt1.c0))))OR(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0)&(vt1.c0)))));
SELECT MIN(vt1.c0) FROM vt1 WHERE ((((((((((vt1.c0, vt1.c0))<((vt1.c0, vt1.c0))))OR(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0)&(vt1.c0)))))AND(vt1.c0)));
SELECT ALL MIN(vt0.c0) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c1 IN ()))-(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((((((vt0.c0)/(vt0.c1)))OR(((vt1.c0)>=(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)))))OR('yh'))  NULLS LAST;
SELECT MIN(vt0.c0) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c1 IN ()))-(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((vt0.c1, vt0.c0, 0X82471a0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN x'1a' ELSE vt0.c1 END, CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END, '<2r^')) AND ((vt0.c0 COLLATE NOCASE, ((vt0.c1) NOT BETWEEN ('') AND (NULL)), vt1.c0 COLLATE BINARY))) ASC, TYPEOF(((vt0.c0)GLOB(vt0.c1))), ((((vt0.c0) IS TRUE))%((- (vt0.c0))))  NULLS FIRST LIMIT 4;
SELECT COUNT(*) FROM vt0 WHERE (-2072122954);
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (-2072122954) ORDER BY (~ (vt0.c1)) COLLATE BINARY DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1))>=((vt1.c0))) IN ((+ (vt0.c1)))) WHERE ((((vt0.c0 IN ())) BETWEEN (((x'') NOT NULL)) AND (x'')));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1))>=((vt1.c0))) IN ((+ (vt0.c1)))) WHERE ((((vt0.c0 IN ())) BETWEEN (((x'') NOT NULL)) AND (x'')));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1))>=((vt1.c0))) IN ((+ (vt0.c1)))) WHERE ((((vt0.c0 IN ())) BETWEEN (((x'') NOT NULL)) AND (x'')));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1))>=((vt1.c0))) IN ((+ (vt0.c1)))) WHERE ((((vt0.c0 IN ())) BETWEEN (((x'') NOT NULL)) AND (x'')));
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))LIKE(CAST(vt0.c1 AS NUMERIC)))) ORDER BY 'J~7 ^^ᾀ', vt0.c0 COLLATE RTRIM;
SELECT MIN(vt0.c1) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))LIKE(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE) ASC  NULLS FIRST, (((NOT (vt0.c0)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (0.2800496889687778))))  NULLS LAST, (((vt0.c1) NOTNULL) IN ()) DESC;
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE ((((+ (vt0.c0)))%(NULL))) ORDER BY ('-' IN ()) DESC  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE ((((((+ (vt0.c0)))%(NULL)))AND((NOT (vt0.c1 COLLATE NOCASE))))) ORDER BY vt1.c0 DESC, (((((vt1.c0))!=((vt0.c0)))) NOT BETWEEN (('!^\㢲' IN (vt0.c1))) AND (((vt0.c1) NOT BETWEEN (x'f5') AND (vt0.c0)))) DESC  NULLS LAST, ((('')) BETWEEN ((((vt0.c0) ISNULL))) AND ((CAST(vt1.c0 AS INTEGER)))) ASC, (((x'' IN (vt0.c1))) NOT BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c1))) AND (vt1.c0 COLLATE NOCASE)) LIMIT 0x1 INTERSECT SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY COLLATE BINARY) ORDER BY vt1.c0 DESC, (((((vt1.c0))<>((vt0.c0)))) NOT BETWEEN (('!^\㢲' IN (vt0.c1))) AND (((vt0.c1) NOT BETWEEN (x'f5') AND (vt0.c0)))) DESC  NULLS LAST, ((('')) BETWEEN ((((vt0.c0) ISNULL))) AND ((CAST(vt1.c0 AS INTEGER)))) ASC, (((x'' IN (vt0.c1))) NOT BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c1))) AND (vt1.c0 COLLATE NOCASE)) LIMIT 0x1;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (+ ((((((('m3')AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) WHERE ((((((vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.8109505122504467)) AND ((vt0.c1, vt1.c0))))>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE) ASC  NULLS LAST;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (+ ((((((('m3')AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) WHERE ((((((vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.8109505122504467)) AND ((vt0.c1, vt1.c0))))>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM vt1 CROSS JOIN vt0 ON (+ ((((((('m3')AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS BLOB)) ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (+ ((((((('m3')AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) WHERE ((((((vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.8109505122504467)) AND ((vt0.c1, vt1.c0))))>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE) ASC  NULLS LAST;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (+ ((((((('m3')AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) WHERE ((((((vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.8109505122504467)) AND ((vt0.c1, vt1.c0))))>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM vt1 CROSS JOIN vt0 ON (+ ((((((('m3')AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS BLOB)) ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE) ASC  NULLS LAST LIMIT 0;
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (((((((CASE WHEN vt0.c0 THEN 'lU' ELSE vt0.c0 END)OR((~ (vt1.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(CAST(vt1.c0 AS NUMERIC))));
SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN 'lU' ELSE vt0.c0 END)OR((~ (vt1.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(CAST(vt1.c0 AS NUMERIC))))AND(((vt0.c0) NOT NULL) COLLATE RTRIM))) ORDER BY ((vt0.c1) NOT NULL), (((~ (vt1.c0)))<(((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(vt1.c0)))) LIMIT 1;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)%(NULL)))+((- (vt0.c0))))) ORDER BY (DATE(vt0.c0, vt0.c0, vt0.c1) IN ((-840985315 IN ())))  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)%(NULL)))+((- (vt0.c0))))) ORDER BY (((((((((x'5e6770ef' IN (vt0.c1)))AND(((vt0.c0)GLOB(vt0.c0)))))AND(((x'1c')GLOB(vt0.c1)))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND((vt0.c0 IN ())))  NULLS FIRST, (((((((((NOT (vt0.c0)))AND((vt0.c1 IN (vt0.c1, vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c1)))))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) NOTNULL)))  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))*(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((((((x'5e6770ef' IN (vt0.c1)))AND(((vt0.c0)GLOB(vt0.c0)))))AND(((x'1c')GLOB(vt0.c1)))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND((vt0.c0 IN ())))  NULLS FIRST, (((((((((NOT (vt0.c0)))AND((vt0.c1 IN (vt0.c1, vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c1)))))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)%(NULL)))+((- (vt0.c0))))) ORDER BY (DATE(vt0.c0, vt0.c0, vt0.c1) IN ((-840985315 IN ())))  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)%(NULL)))+((- (vt0.c0))))) ORDER BY (((((((((x'5e6770ef' IN (vt0.c1)))AND(((vt0.c0)GLOB(vt0.c0)))))AND(((x'1c')GLOB(vt0.c1)))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND((vt0.c0 IN ())))  NULLS FIRST, (((((((((NOT (vt0.c0)))AND((vt0.c1 IN (vt0.c1, vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c1)))))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) NOTNULL)))  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))*(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((((((x'5e6770ef' IN (vt0.c1)))AND(((vt0.c0)GLOB(vt0.c0)))))AND(((x'1c')GLOB(vt0.c1)))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND((vt0.c0 IN ())))  NULLS FIRST, (((((((((NOT (vt0.c0)))AND((vt0.c1 IN (vt0.c1, vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c1)))))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt0.c0)) BETWEEN ((CASE x''  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) AND ((((vt1.c0) IS TRUE), CASE x''  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN NULL ELSE vt0.c0 END))));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt0.c0)) BETWEEN ((CASE x''  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) AND ((((vt1.c0) IS TRUE), CASE x''  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN NULL ELSE vt0.c0 END)))) INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0 COLLATE NOCASE)AND(((vt0.c1)*(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0)))) IS TRUE)) ORDER BY (((((((((- (vt0.c0)))AND(((vt0.c1)/(vt0.c1)))))OR((+ (vt0.c0)))))AND(((vt0.c0)-(vt0.c1)))))AND((vt0.c0 IN (vt0.c1, vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0)))) IS TRUE)) ORDER BY ((((vt0.c0) NOTNULL))-('LdO{8'))  NULLS FIRST LIMIT 0x2;
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL)) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL))AND(CASE WHEN vt1.c0 THEN CAST(vt1.c0 AS NUMERIC) END))) ORDER BY x''  NULLS LAST;
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL)) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL))AND(CASE WHEN vt1.c0 THEN CAST(vt1.c0 AS NUMERIC) END))) ORDER BY x''  NULLS LAST;
SELECT MAX(vt1.c0) FROM vt1 WHERE ((NOT (((vt1.c0)+(''))))) ORDER BY ((((((((vt1.c0)AND(((vt1.c0) ISNULL))))OR(TRIM(vt1.c0, vt1.c0))))OR(((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR((((vt1.c0, vt1.c0))<=((0.12957760001381846, vt1.c0))))) ASC  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((NOT (((vt1.c0)+(''))))) ORDER BY (NOT ('负瀩聤')) DESC;
SELECT * FROM vt0, vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN 9.81740771E8 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER));
SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN 9.81740771E8 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER)) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c1)+(vt1.c0)))))OR((vt1.c0 IN ()))))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(vt0.c1 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt1.c0))))));
SELECT * FROM vt0, vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN 9.81740771E8 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER));
SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN 9.81740771E8 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER)) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c1)+(vt1.c0)))))OR((vt1.c0 IN ()))))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(vt0.c1 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt1.c0))))));
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE (((((vt1.c0) IS FALSE)) NOT BETWEEN (NULL) AND ((('-1933451997') NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY ((~ (vt0.c1)) IN ((((vt0.c0))>=(('-2038889059'))), vt1.c0 COLLATE NOCASE)) ASC  NULLS LAST, (((vt0.c0 IN ())) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c1) NOTNULL))), ((vt0.c1 COLLATE NOCASE)|(vt0.c0))  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c1) FROM vt0, vt1 WHERE (((((((vt1.c0) IS FALSE)) NOT BETWEEN (NULL) AND ((('-1933451997') NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(CASE WHEN 0.07186213131168506 THEN (vt0.c1 IN (vt0.c1, vt0.c0)) WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE (vt1.c0 IN (vt0.c1, vt0.c0)) END))) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE NOCASE  NULLS FIRST, (NOT (((vt1.c0)<(vt0.c1))))  NULLS FIRST INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0, vt1 WHERE (CAST((+ (vt0.c1)) AS TEXT)) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE NOCASE  NULLS FIRST, (NOT (((vt1.c0)<(vt0.c1))))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((((((NULL)OR(NULL)))AND(vt1.c0)))OR(HEX(DISTINCT vt1.c0)))) ORDER BY ((vt1.c0)<=(NULL)) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN ((((vt0.c0))!=((vt0.c1)))) AND ((NOT (vt0.c1)))) ASC;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((NULL)OR(NULL)))AND(vt1.c0)))OR(HEX(DISTINCT vt1.c0))))AND(CASE x'7c'  WHEN ((vt0.c0)>=('33020592')) THEN (vt0.c1 IN (vt1.c0)) WHEN (vt0.c0 IN (vt1.c0, vt0.c1)) THEN ((vt1.c0)+(vt0.c1)) WHEN (+ (x'36')) THEN (((vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, NULL, vt0.c1, vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c1, vt0.c0))) WHEN MIN(vt0.c1, vt1.c0) THEN CAST(vt0.c1 AS BLOB) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN x'' WHEN ((vt0.c0)>>(vt0.c1)) THEN vt0.c0 COLLATE BINARY ELSE vt0.c0 END))) ORDER BY ((((vt1.c0)<(vt0.c0))) ISNULL)  NULLS LAST, ((((vt1.c0) NOT NULL)) ISNULL) ASC  NULLS FIRST, ((((vt1.c0) NOTNULL)) IS FALSE) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN '' THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END IN ((NOT (vt0.c1))))) ORDER BY ((((vt1.c0)<(vt0.c0))) ISNULL)  NULLS LAST, ((((vt1.c0) NOT NULL)) ISNULL) ASC  NULLS FIRST, ((((vt1.c0) NOTNULL)) IS FALSE);
SELECT * FROM vt0, vt1 WHERE (((((((NULL)OR(NULL)))AND(vt1.c0)))OR(HEX(DISTINCT vt1.c0)))) ORDER BY ((vt1.c0)<=(NULL)) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN ((((vt0.c0))!=((vt0.c1)))) AND ((NOT (vt0.c1)))) ASC;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((NULL)OR(NULL)))AND(vt1.c0)))OR(HEX(DISTINCT vt1.c0))))AND(CASE x'7c'  WHEN ((vt0.c0)>=('33020592')) THEN (vt0.c1 IN (vt1.c0)) WHEN (vt0.c0 IN (vt1.c0, vt0.c1)) THEN ((vt1.c0)+(vt0.c1)) WHEN (+ (x'36')) THEN (((vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, NULL, vt0.c1, vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c1, vt0.c0))) WHEN MIN(vt0.c1, vt1.c0) THEN CAST(vt0.c1 AS BLOB) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN x'' WHEN ((vt0.c0)>>(vt0.c1)) THEN vt0.c0 COLLATE BINARY ELSE vt0.c0 END))) ORDER BY ((((vt1.c0)<(vt0.c0))) ISNULL)  NULLS LAST, ((((vt1.c0) NOT NULL)) ISNULL) ASC  NULLS FIRST, ((((vt1.c0) NOTNULL)) IS FALSE) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN '' THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END IN ((NOT (vt0.c1))))) ORDER BY ((((vt1.c0)<(vt0.c0))) ISNULL)  NULLS LAST, ((((vt1.c0) NOT NULL)) ISNULL) ASC  NULLS FIRST, ((((vt1.c0) NOTNULL)) IS FALSE);
SELECT * FROM vt0 WHERE (UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT DISTINCT * FROM vt0 WHERE (((UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))AND(load_extension(CASE WHEN vt0.c0 THEN vt0.c1 WHEN '-1477517454' THEN vt0.c1 ELSE vt0.c0 END, (- (NULL)))))) ORDER BY ((vt0.c1 COLLATE NOCASE)%(x''))  NULLS LAST, CASE '1262217373'  WHEN vt0.c1 THEN vt0.c0 COLLATE RTRIM END DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1)/(vt0.c1))) NOT NULL)) ORDER BY ((vt0.c1 COLLATE NOCASE)%(x''))  NULLS LAST, CASE '1262217373'  WHEN vt0.c1 THEN vt0.c0 COLLATE RTRIM END DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT DISTINCT * FROM vt0 WHERE (((UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))AND(load_extension(CASE WHEN vt0.c0 THEN vt0.c1 WHEN '-1477517454' THEN vt0.c1 ELSE vt0.c0 END, (- (NULL)))))) ORDER BY ((vt0.c1 COLLATE NOCASE)%(x''))  NULLS LAST, CASE '1262217373'  WHEN vt0.c1 THEN vt0.c0 COLLATE RTRIM END DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1)/(vt0.c1))) NOT NULL)) ORDER BY ((vt0.c1 COLLATE NOCASE)%(x''))  NULLS LAST, CASE '1262217373'  WHEN vt0.c1 THEN vt0.c0 COLLATE RTRIM END DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) AS BLOB)) ORDER BY CAST((((vt1.c0, vt0.c0, vt1.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AS BLOB) ASC  NULLS FIRST, highlight(((((vt0.c1)AND('0.9299467230100918')))AND(vt0.c1)), json_array_length(vt1.c0), 0X26eb02dc COLLATE BINARY, LIKE(vt1.c0, vt1.c0, '}'))  NULLS FIRST, NULL COLLATE RTRIM;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) AS BLOB))AND(((x'') NOT BETWEEN (x'') AND (((((((0X6d4b0c2c)AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))))) ORDER BY CAST(((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) AS REAL) DESC LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) AS BLOB)) ORDER BY CAST((((vt1.c0, vt0.c0, vt1.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AS BLOB) ASC  NULLS FIRST, highlight(((((vt0.c1)AND('0.9299467230100918')))AND(vt0.c1)), json_array_length(vt1.c0), 0X26eb02dc COLLATE BINARY, LIKE(vt1.c0, vt1.c0, '}'))  NULLS FIRST, NULL COLLATE RTRIM;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE NOCASE) ORDER BY CASE (((vt0.c1, vt0.c0, vt0.c1, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c1, vt0.c0)))  WHEN vt0.c1 THEN vt0.c1 COLLATE RTRIM ELSE (((vt0.c1, vt0.c1, vt0.c0, vt0.c0))<((vt0.c1, vt0.c0, vt0.c1, vt0.c0))) END  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE NOCASE) ORDER BY (((vt0.c1)GLOB(vt0.c1)) IN (CASE WHEN vt0.c1 THEN vt0.c0 END)), (((vt0.c0) NOTNULL) IN ())  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM vt0 WHERE (((((x'825eec3250')<>(x'9ec7'))) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND ((- ('#2(mq00[䱫'))))) ORDER BY (((vt0.c1)GLOB(vt0.c1)) IN (CASE WHEN vt0.c1 THEN vt0.c0 END)), (((vt0.c0) NOTNULL) IN ())  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE NOCASE) ORDER BY CASE (((vt0.c1, vt0.c0, vt0.c1, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c1, vt0.c0)))  WHEN vt0.c1 THEN vt0.c1 COLLATE RTRIM ELSE (((vt0.c1, vt0.c1, vt0.c0, vt0.c0))<((vt0.c1, vt0.c0, vt0.c1, vt0.c0))) END  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE NOCASE) ORDER BY (((vt0.c1)GLOB(vt0.c1)) IN (CASE WHEN vt0.c1 THEN vt0.c0 END)), (((vt0.c0) NOTNULL) IN ())  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM vt0 WHERE (((((x'825eec3250')<>(x'9ec7'))) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND ((- ('#2(mq00[䱫'))))) ORDER BY (((vt0.c1)GLOB(vt0.c1)) IN (CASE WHEN vt0.c1 THEN vt0.c0 END)), (((vt0.c0) NOTNULL) IN ())  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0)OR(vt1.c0)))AND(x'91a0')))AND(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY NULL DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE ((((((((((vt1.c0)OR(vt1.c0)))AND(x'91a0')))AND(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY NULL DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0)OR(vt1.c0)))AND(x'91a0')))AND(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY NULL DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE ((((((((((vt1.c0)OR(vt1.c0)))AND(x'91a0')))AND(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY NULL DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c1 COLLATE NOCASE);
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c1 COLLATE NOCASE)AND(((((vt0.c1)/(vt0.c0)))<=(CASE 'dldvWO\'  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END))))) LIMIT 0;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c1 COLLATE NOCASE);
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c1 COLLATE NOCASE)AND(((((vt0.c1)/(vt0.c0)))<=(CASE 'dldvWO\'  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END))))) LIMIT 0;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(LOWER(vt0.c1) AS REAL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(LOWER(vt0.c1) AS REAL)) LIMIT 0;
SELECT * FROM vt1 WHERE (CASE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY ((vt1.c0)>(((vt1.c0) IS FALSE))) DESC, CASE WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0, vt1.c0))<(('1519580750', NULL))) WHEN (((vt1.c0)) NOT BETWEEN (('''nPp')) AND ((vt1.c0))) THEN ((vt1.c0)=(vt1.c0)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST, x'57' DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE (((CASE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END)AND(((((vt1.c0)==(vt1.c0))) IS TRUE)))) ORDER BY CASE WHEN ((vt1.c0) IS TRUE) THEN 0.3740090523455969 ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC  NULLS LAST, ABS(vt1.c0) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c0)>>(vt1.c0)) AS REAL)) ORDER BY CASE WHEN ((vt1.c0) IS TRUE) THEN 0.3740090523455969 ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC  NULLS LAST, ABS(vt1.c0) LIMIT 1;
SELECT * FROM vt1 WHERE (CASE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY ((vt1.c0)>(((vt1.c0) IS FALSE))) DESC, CASE WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0, vt1.c0))<(('1519580750', NULL))) WHEN (((vt1.c0)) NOT BETWEEN (('''nPp')) AND ((vt1.c0))) THEN ((vt1.c0)=(vt1.c0)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST, x'57' DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE (((CASE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END)AND(((((vt1.c0)==(vt1.c0))) IS TRUE)))) ORDER BY CASE WHEN ((vt1.c0) IS TRUE) THEN 0.3740090523455969 ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC  NULLS LAST, ABS(vt1.c0) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c0)>>(vt1.c0)) AS REAL)) ORDER BY CASE WHEN ((vt1.c0) IS TRUE) THEN 0.3740090523455969 ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC  NULLS LAST, ABS(vt1.c0) LIMIT 1;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL)) ORDER BY (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END IN (((vt0.c1)!=(vt0.c1)))) DESC  NULLS LAST, ((((vt1.c0)>(vt1.c0)))>(CAST(vt1.c0 AS BLOB))) DESC;
SELECT DISTINCT MAX(vt0.c0) FROM vt1, vt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL)) ORDER BY (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END IN (((vt0.c1)<>(vt0.c1)))) DESC  NULLS LAST, ((((vt1.c0)>(vt1.c0)))>(CAST(vt1.c0 AS BLOB))) DESC LIMIT 1;
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE (CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN HEX(DISTINCT vt0.c0) WHEN (vt0.c1 IN (vt0.c1, vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) WHEN ((NULL)/(vt1.c0)) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)-(vt1.c0)) END) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS TEXT), NULL COLLATE RTRIM ASC;
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE (((CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN HEX(DISTINCT vt0.c0) WHEN (vt0.c1 IN (vt0.c1, vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) WHEN ((NULL)/(vt1.c0)) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0)-(vt1.c0)) END)AND(((-1863589967)*(((vt1.c0)*(vt0.c1))))))) ORDER BY (((vt0.c1)%(vt0.c0)) IN ((((vt1.c0, vt1.c0))>((vt0.c0, '#V'))))) ASC  NULLS LAST, ((((vt0.c0) NOTNULL))|(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC INTERSECT SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE ('0.7023971077435303') ORDER BY (((vt0.c1)%(vt0.c0)) IN ((((vt1.c0, vt1.c0))>((vt0.c0, '#V'))))) ASC  NULLS LAST, ((((vt0.c0) NOTNULL))|(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) ORDER BY ((vt0.c0 COLLATE BINARY)>>(''))  NULLS FIRST, ((vt0.c1 COLLATE NOCASE) BETWEEN ((vt0.c1 IN ())) AND (((x'94') BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST, (((1971598826)AND(vt0.c1)) IN ()) ASC  NULLS LAST, ((vt0.c1 COLLATE RTRIM)!=(vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) ORDER BY 0xfffffffff0adbf54 ASC, ((((vt1.c0) IS TRUE))<(vt0.c0 COLLATE BINARY))  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0) NOTNULL))OR(load_extension(vt0.c1))))AND(((vt0.c1)GLOB(vt0.c0))))) ORDER BY -257048748 ASC, ((((vt1.c0) IS TRUE))<(vt0.c0 COLLATE BINARY))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) ORDER BY ((vt0.c0 COLLATE BINARY)>>(''))  NULLS FIRST, ((vt0.c1 COLLATE NOCASE) BETWEEN ((vt0.c1 IN ())) AND (((x'94') BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST, (((1971598826)AND(vt0.c1)) IN ()) ASC  NULLS LAST, ((vt0.c1 COLLATE RTRIM)!=(vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)&(vt0.c1)) COLLATE RTRIM) ORDER BY ((((vt0.c0) IS FALSE))OR(((vt0.c1) ISNULL))) DESC;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)&(vt0.c1)) COLLATE RTRIM)AND(((vt0.c1 COLLATE NOCASE)!=(((vt0.c1) NOT NULL)))))) ORDER BY x'97a1' DESC  NULLS LAST, (NOT (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) DESC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((('P㑡') ISNULL)) ORDER BY x'97a1' DESC  NULLS LAST, (NOT (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)&(vt0.c1)) COLLATE RTRIM) ORDER BY ((((vt0.c0) IS FALSE))OR(((vt0.c1) ISNULL))) DESC;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)&(vt0.c1)) COLLATE RTRIM)AND(((vt0.c1 COLLATE NOCASE)!=(((vt0.c1) NOT NULL)))))) ORDER BY x'97a1' DESC  NULLS LAST, (NOT (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) DESC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((('P㑡') ISNULL)) ORDER BY x'97a1' DESC  NULLS LAST, (NOT (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) DESC  NULLS LAST LIMIT 1;
SELECT MAX(vt0.c0) FROM vt0 CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS INTEGER) AS BLOB) WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT ALL MAX(vt0.c0) FROM vt0 CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS INTEGER) AS BLOB) WHERE ((+ (vt1.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND(vt0.c0 COLLATE NOCASE)), LOWER(DISTINCT CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN '	r妙 QrsS' WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) DESC, ((((((((((((((0.051192794589587476)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(NULL)))AND('828215244')))>(x'')) DESC LIMIT 0X0 INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0 CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS INTEGER) AS BLOB) WHERE ((((vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt1.c0)) AND ((vt1.c0, vt0.c0))) COLLATE BINARY) ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND(vt0.c0 COLLATE NOCASE)), LOWER(DISTINCT CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN '	r妙 QrsS' WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) DESC, ((((((((((((((0.051192794589587476)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(NULL)))AND('828215244')))>(x'')) DESC LIMIT 0;
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY TYPEOF(CAST(vt0.c1 AS NUMERIC)) DESC, ((vt0.c1)LIKE(vt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (load_extension(vt0.c0, vt0.c0)) AND ((vt0.c1 IN ()))) DESC;
SELECT * FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY HEX(((vt0.c1)-(vt0.c0)))  NULLS LAST, ((NULLIF(DISTINCT vt0.c0, vt0.c1))<<((vt0.c0 IN (vt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY TYPEOF(CAST(vt0.c1 AS NUMERIC)) DESC, ((vt0.c1)LIKE(vt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (load_extension(vt0.c0, vt0.c0)) AND ((vt0.c1 IN ()))) DESC;
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0)))OR((((vt1.c0))<((vt1.c0))))));
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0)))OR((((vt1.c0))<((vt1.c0)))))) LIMIT 0x0 INTERSECT SELECT * FROM vt1 WHERE (UNICODE(UPPER(DISTINCT vt1.c0))) LIMIT 0x0;
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0)))OR((((vt1.c0))<((vt1.c0))))));
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0)))OR((((vt1.c0))<((vt1.c0)))))) LIMIT 0x0 INTERSECT SELECT * FROM vt1 WHERE (UNICODE(UPPER(DISTINCT vt1.c0))) LIMIT 0x0;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (vt1.c0) AND ((((vt1.c0))>((vt1.c0))))));
SELECT MAX(vt1.c0) FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (vt1.c0) AND ((((vt1.c0))>((vt1.c0))))))AND(((((((((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(vt1.c0)))OR(((vt1.c0)IS(vt1.c0)))))OR(LTRIM(vt1.c0, vt1.c0))))OR(CAST(vt1.c0 AS BLOB))))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 0.5305901528374672, vt1.c0)))))))) LIMIT 0x1 INTERSECT SELECT MAX(vt1.c0) FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))IS(((vt1.c0)<=(vt1.c0))))) LIMIT 0x1;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON '洎aiR' WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END) NOTNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON '洎aiR' WHERE (((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END) NOTNULL))AND(((LOWER(vt0.c1))<=(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON '洎aiR' WHERE (((((vt0.c1)>(vt0.c1))) IS TRUE)) LIMIT 0x1;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON '洎aiR' WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END) NOTNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON '洎aiR' WHERE (((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END) NOTNULL))AND(((LOWER(vt0.c1))<=(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON '洎aiR' WHERE (((((vt0.c1)>(vt0.c1))) IS TRUE)) LIMIT 0x1;
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND((((((vt1.c0)AND(NULL)))OR(vt0.c0)) IN ())))) ORDER BY (((~ (NULL)))LIKE(json_array_length(vt0.c1, vt1.c0))) INTERSECT SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (((((((((((((CAST(vt0.c1 AS REAL))OR((~ (vt0.c0)))))AND(vt0.c1)))OR(LIKELY(DISTINCT 'nA&zb''RBv'))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(vt0.c0)))AND((((vt1.c0, vt0.c1))>=((vt0.c0, vt1.c0)))))) ORDER BY (((~ (NULL)))LIKE(json_array_length(vt0.c1, vt1.c0)));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (vt0.c1 COLLATE RTRIM IN ()) WHERE ((((vt1.c0, NULL)) BETWEEN (((((vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))), x'3ea38a')) AND ((x'033aed', CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON (vt0.c1 COLLATE RTRIM IN ()) WHERE ((((vt1.c0, NULL)) BETWEEN (((((vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))), x'3ea38a')) AND ((x'033aed', CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY (((((vt0.c1) NOT BETWEEN (x'd0') AND (vt1.c0)), NULL, (vt0.c1 IN ()), ((((vt1.c0)AND(vt0.c1)))AND(vt0.c1))))>=(((vt1.c0 IN (vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt1.c0)OR(vt0.c1)))AND(vt0.c1))))) LIMIT 0X3;
SELECT MIN(vt0.c0) FROM vt0 WHERE (((vt0.c1)LIKE(((vt0.c0)+(vt0.c0)))));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((vt0.c1)LIKE(((vt0.c0)+(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST((vt0.c1 IN (vt0.c1, vt0.c0)) AS BLOB) ASC, ((((((CAST(vt0.c1 AS INTEGER))OR((((vt0.c0, '-1243565193', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, NULL, vt0.c0, vt0.c1))))))AND(LIKELY(DISTINCT vt0.c0))))OR(((x'')-(vt0.c1)))) ASC, vt0.c1  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((vt0.c0)AND((vt0.c1 COLLATE BINARY IN (((vt0.c1)*(vt0.c0))))))) ORDER BY CAST(((('-278272736', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1))) AS REAL) ASC, (((((('1616486428')OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR((+ (vt0.c1)))))AND(0.18191610960148363)) INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (x'') ORDER BY CAST(((('-278272736', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1))) AS REAL) ASC, (((((('1616486428')OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR((+ (vt0.c1)))))AND(0.18191610960148363));
SELECT * FROM vt1 WHERE (LTRIM((+ (vt1.c0))));
SELECT ALL * FROM vt1 WHERE (((LTRIM((+ (vt1.c0))))AND(CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC)))) LIMIT 3 INTERSECT SELECT * FROM vt1 WHERE ((~ (((vt1.c0) ISNULL)))) LIMIT 0X3;
SELECT * FROM vt1 WHERE (LTRIM((+ (vt1.c0))));
SELECT ALL * FROM vt1 WHERE (((LTRIM((+ (vt1.c0))))AND(CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC)))) LIMIT 3 INTERSECT SELECT * FROM vt1 WHERE ((~ (((vt1.c0) ISNULL)))) LIMIT 0X3;
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (NULLIF(DISTINCT vt1.c0, vt1.c0) IN ((~ (vt1.c0)), vt1.c0 COLLATE NOCASE))  NULLS LAST INTERSECT SELECT ALL * FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY))<=((((vt1.c0)>(vt1.c0)))))) ORDER BY (NULLIF(DISTINCT vt1.c0, vt1.c0) IN ((~ (vt1.c0)), vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (NULLIF(DISTINCT vt1.c0, vt1.c0) IN ((~ (vt1.c0)), vt1.c0 COLLATE NOCASE))  NULLS LAST INTERSECT SELECT ALL * FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY))<=((((vt1.c0)>(vt1.c0)))))) ORDER BY (NULLIF(DISTINCT vt1.c0, vt1.c0) IN ((~ (vt1.c0)), vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOTNULL));
SELECT DISTINCT MAX(vt0.c1) FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOTNULL)) ORDER BY ((CAST(vt1.c0 AS NUMERIC))=(CAST('QuD	a
o態O' AS REAL))) ASC  NULLS FIRST, (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)), CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END, (- (vt0.c0)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)>=(vt0.c1))))), (((vt0.c1)*(vt1.c0)) IN (NULLIF(vt1.c0, -7.34681191E8))), CAST(json(vt1.c0) AS TEXT) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt1, vt0 WHERE (((vt0.c1) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND (((vt0.c1) ISNULL)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))==(CAST('QuD	a
o態O' AS REAL))) ASC  NULLS FIRST, (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)), CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END, (- (vt0.c0)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)>=(vt0.c1))))), (((vt0.c1)*(vt1.c0)) IN (NULLIF(vt1.c0, -7.34681191E8))), CAST(json(vt1.c0) AS TEXT) ASC  NULLS FIRST LIMIT 0x1;
SELECT * FROM vt1, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN 2045496364 ELSE vt0.c0 END IN ())) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE;
SELECT * FROM vt1, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN 2045496364 ELSE vt0.c0 END IN ())) ORDER BY (((vt1.c0, (vt0.c0 IN ())))<((CAST(vt0.c0 AS REAL), ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((vt1.c0, (vt0.c0 IN ())))<((CAST(vt0.c0 AS REAL), ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))))  NULLS FIRST LIMIT 0;
SELECT * FROM vt1, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN 2045496364 ELSE vt0.c0 END IN ())) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE;
SELECT * FROM vt1, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN 2045496364 ELSE vt0.c0 END IN ())) ORDER BY (((vt1.c0, (vt0.c0 IN ())))<((CAST(vt0.c0 AS REAL), ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((vt1.c0, (vt0.c0 IN ())))<((CAST(vt0.c0 AS REAL), ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))))  NULLS FIRST LIMIT 0;
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (CAST(((vt1.c0)+(vt1.c0)) AS REAL)) ORDER BY HEX(x'')  NULLS LAST;
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE (CAST(((vt1.c0)+(vt1.c0)) AS REAL)) ORDER BY (((((0.533773296607107)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) BETWEEN (((vt1.c0)>>('/'))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) DESC, (((0.5015620545538608) IS TRUE) IN (((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))) ASC;
SELECT MIN(vt1.c0) FROM vt0 NATURAL JOIN vt1 WHERE (vt0.c1);
SELECT MIN(vt1.c0) FROM vt0 NATURAL JOIN vt1 WHERE (vt0.c1) ORDER BY x'' ASC  NULLS FIRST, ((((vt0.c0) NOT NULL)) ISNULL) DESC  NULLS LAST, CAST(((vt0.c1) NOTNULL) AS TEXT) ASC, vt0.c1 DESC LIMIT 0;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)IS NOT(NULL)))))AND(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))) ORDER BY CAST(vt0.c1 AS TEXT);
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)IS NOT(NULL)))))AND(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(LOWER((~ (vt0.c0)))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c0) IS TRUE), (((vt0.c1, vt0.c1, vt0.c0, x'70b4')) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c0))), ((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) AND ((NULL, CAST(-4.23690826E8 AS REAL), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)IS NOT(NULL)))))AND(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))) ORDER BY CAST(vt0.c1 AS TEXT);
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)IS NOT(NULL)))))AND(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(LOWER((~ (vt0.c0)))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c0) IS TRUE), (((vt0.c1, vt0.c1, vt0.c0, x'70b4')) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c0))), ((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) AND ((NULL, CAST(-4.23690826E8 AS REAL), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) ASC  NULLS LAST LIMIT 0x0;
SELECT MAX(vt1.c0) FROM vt1 WHERE (CASE WHEN 0.0919189485519728 THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE (- (vt1.c0)) END) ORDER BY ((vt1.c0 COLLATE NOCASE)*((vt1.c0 IN (vt1.c0)))) DESC;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((CASE WHEN 0.0919189485519728 THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE (- (vt1.c0)) END)AND(GLOB(vt1.c0 COLLATE BINARY, (((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((0X7b1d524f, vt1.c0))))))) ORDER BY ((vt1.c0 COLLATE NOCASE)*((vt1.c0 IN (vt1.c0)))) DESC LIMIT 0X1;
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE (((((vt0.c1) NOT BETWEEN (0.5644982286679928) AND (vt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt1.c0)%(vt0.c0)))));
SELECT DISTINCT MAX(vt0.c1) FROM vt1, vt0 WHERE (((((((vt0.c1) NOT BETWEEN (0.5644982286679928) AND (vt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt1.c0)%(vt0.c0)))))AND(NULL))) ORDER BY (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN (json_type(vt0.c0))) DESC, CAST(vt0.c1 AS REAL) COLLATE NOCASE  NULLS LAST, vt0.c0 ASC LIMIT 0x0;
SELECT ALL * FROM vt0 WHERE (COALESCE((((vt0.c0))>=((vt0.c1))), (('-1425226113') NOT NULL)));
SELECT ALL * FROM vt0 WHERE (COALESCE((((vt0.c0))>=((vt0.c1))), (('-1425226113') NOT NULL))) ORDER BY JULIANDAY(vt0.c0 COLLATE BINARY, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, vt0.c0) ASC INTERSECT SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM) ORDER BY JULIANDAY(vt0.c0 COLLATE BINARY, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, vt0.c0) ASC;
SELECT ALL * FROM vt0 WHERE (COALESCE((((vt0.c0))>=((vt0.c1))), (('-1425226113') NOT NULL)));
SELECT ALL * FROM vt0 WHERE (COALESCE((((vt0.c0))>=((vt0.c1))), (('-1425226113') NOT NULL))) ORDER BY JULIANDAY(vt0.c0 COLLATE BINARY, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, vt0.c0) ASC INTERSECT SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM) ORDER BY JULIANDAY(vt0.c0 COLLATE BINARY, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, vt0.c0) ASC;
SELECT ALL MIN(vt1.c0) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0, vt1.c0, vt0.c1, vt0.c1))<>((vt0.c1, vt0.c0, vt1.c0, vt0.c0))) IN ((((vt1.c0, 0.5049844373928064, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((0.8167894295750988, vt0.c1, vt0.c1))))) WHERE (((((((((vt0.c0 COLLATE RTRIM)OR((((0.32514629333840916))<((vt1.c0))))))AND((vt1.c0 IN ()))))OR(CASE WHEN vt1.c0 THEN vt0.c0 END)))OR('1540790054' COLLATE RTRIM)));
SELECT DISTINCT MIN(vt1.c0) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0, vt1.c0, vt0.c1, vt0.c1))<>((vt0.c1, vt0.c0, vt1.c0, vt0.c0))) IN ((((vt1.c0, 0.5049844373928064, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((0.8167894295750988, vt0.c1, vt0.c1))))) WHERE (((((((((((vt0.c0 COLLATE RTRIM)OR((((0.32514629333840916))<((vt1.c0))))))AND((vt1.c0 IN ()))))OR(CASE WHEN vt1.c0 THEN vt0.c0 END)))OR('1540790054' COLLATE RTRIM)))AND(LOWER(((0xffffffffb20c584a) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) ORDER BY ((vt0.c0)>(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS REAL) THEN vt1.c0 COLLATE NOCASE WHEN 0.16779579196675798 THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN vt1.c0 THEN ((vt0.c1) NOT NULL) WHEN CAST(vt1.c0 AS REAL) THEN vt1.c0 COLLATE RTRIM END ASC  NULLS LAST INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0, vt1.c0, vt0.c1, vt0.c1))!=((vt0.c1, vt0.c0, vt1.c0, vt0.c0))) IN ((((vt1.c0, 0.5049844373928064, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((0.8167894295750988, vt0.c1, vt0.c1))))) WHERE (((vt0.c1)||((- (vt0.c1))))) ORDER BY ((vt0.c0)>(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS REAL) THEN vt1.c0 COLLATE NOCASE WHEN 0.16779579196675798 THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN vt1.c0 THEN ((vt0.c1) NOT NULL) WHEN CAST(vt1.c0 AS REAL) THEN vt1.c0 COLLATE RTRIM END ASC  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (vt0.c1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c1)AND((~ (DATETIME(vt1.c0, vt0.c0, vt0.c0, 0x39522951, vt0.c1, vt1.c0, vt0.c0, vt0.c1, NULL)))))) ORDER BY TRIM(NULL) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (vt0.c1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c1)AND((~ (DATETIME(vt1.c0, vt0.c0, vt0.c0, 0x39522951, vt0.c1, vt1.c0, vt0.c0, vt0.c1, NULL)))))) ORDER BY TRIM(NULL) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOTNULL)) ORDER BY ((((((vt0.c0)!=(vt0.c0)))AND(x'')))AND(rtreenode(NULL, '5^P2&?'))) DESC, ((((vt0.c0) ISNULL)) BETWEEN ((- (vt0.c1))) AND (((vt0.c1) IS FALSE))), (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c1)), SQLITE_COMPILEOPTION_USED(vt0.c1), ((((((((((NULL)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))) AND (((('ZU') NOT BETWEEN (vt0.c1) AND (vt0.c1)), (('2c皅(') BETWEEN (vt0.c0) AND (vt0.c0)), NULL))), (+ ((-1746798111 IN ())));
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL)) NOTNULL))AND(((((CAST(vt0.c0 AS TEXT))OR(IFNULL(DISTINCT vt0.c1, vt0.c1))))AND(vt0.c1))))) ORDER BY COALESCE(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)), vt0.c1) DESC  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))) AND (((vt0.c0) NOT BETWEEN ('9223372036854775807') AND (vt0.c1)))) DESC, (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c1, vt0.c1, vt0.c0))=((vt0.c1, vt0.c0, vt0.c0))), CAST(vt0.c0 AS TEXT)))>((CAST(vt0.c1 AS TEXT), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))))) DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) ORDER BY COALESCE(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)), vt0.c1) DESC  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))) AND (((vt0.c0) NOT BETWEEN ('9223372036854775807') AND (vt0.c1)))) DESC, (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c1, vt0.c1, vt0.c0))=((vt0.c1, vt0.c0, vt0.c0))), CAST(vt0.c0 AS TEXT)))>((CAST(vt0.c1 AS TEXT), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))))) DESC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOTNULL)) ORDER BY ((((((vt0.c0)!=(vt0.c0)))AND(x'')))AND(rtreenode(NULL, '5^P2&?'))) DESC, ((((vt0.c0) ISNULL)) BETWEEN ((- (vt0.c1))) AND (((vt0.c1) IS FALSE))), (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c1)), SQLITE_COMPILEOPTION_USED(vt0.c1), ((((((((((NULL)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))) AND (((('ZU') NOT BETWEEN (vt0.c1) AND (vt0.c1)), (('2c皅(') BETWEEN (vt0.c0) AND (vt0.c0)), NULL))), (+ ((-1746798111 IN ())));
SELECT * FROM vt0 WHERE (x'');
SELECT * FROM vt0 WHERE (x'') ORDER BY CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS REAL)  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))) DESC LIMIT 0x0 INTERSECT SELECT * FROM vt0 WHERE ('''<') ORDER BY CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS REAL)  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))) DESC LIMIT 0;
SELECT * FROM vt0 WHERE (x'');
SELECT * FROM vt0 WHERE (x'') ORDER BY CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS REAL)  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))) DESC LIMIT 0x0 INTERSECT SELECT * FROM vt0 WHERE ('''<') ORDER BY CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS REAL)  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))) DESC LIMIT 0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULL WHERE (CASE ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN IFNULL(DISTINCT vt0.c0, vt1.c0) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN vt0.c1 COLLATE NOCASE WHEN (((x'4c'))!=((vt0.c1))) THEN ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))OR(0.0272194163825058)) END);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON NULL WHERE (((CASE ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN IFNULL(DISTINCT vt0.c0, vt1.c0) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN vt0.c1 COLLATE NOCASE WHEN (((x'4c'))<>((vt0.c1))) THEN ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))OR(0.0272194163825058)) END)AND((((vt1.c0, vt0.c1, vt1.c0, '槞Jf虠n')) NOT BETWEEN (((~ (vt0.c0)), ((x'') NOT BETWEEN (vt0.c1) AND (vt0.c1)), (+ (vt1.c0)), (((vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0))))) AND (((vt0.c0 IN (vt0.c1)), ((((((((vt1.c0)OR(x'')))AND(vt0.c1)))OR(vt0.c0)))OR('|D')), x'24ad2fdb78d6', DATE(vt1.c0, vt0.c1, vt0.c1))))))) INTERSECT SELECT ALL * FROM vt0 INNER JOIN vt1 ON NULL WHERE (((((((((((((vt0.c0)IS NOT(vt0.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END)))AND(((((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))))OR(((vt1.c0)<=(vt0.c1)))))OR(((vt0.c1)-(vt1.c0)))))OR((- (vt0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULL WHERE (CASE ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN IFNULL(DISTINCT vt0.c0, vt1.c0) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN vt0.c1 COLLATE NOCASE WHEN (((x'4c'))!=((vt0.c1))) THEN ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))OR(0.0272194163825058)) END);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON NULL WHERE (((CASE ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN IFNULL(DISTINCT vt0.c0, vt1.c0) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN vt0.c1 COLLATE NOCASE WHEN (((x'4c'))<>((vt0.c1))) THEN ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))OR(0.0272194163825058)) END)AND((((vt1.c0, vt0.c1, vt1.c0, '槞Jf虠n')) NOT BETWEEN (((~ (vt0.c0)), ((x'') NOT BETWEEN (vt0.c1) AND (vt0.c1)), (+ (vt1.c0)), (((vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0))))) AND (((vt0.c0 IN (vt0.c1)), ((((((((vt1.c0)OR(x'')))AND(vt0.c1)))OR(vt0.c0)))OR('|D')), x'24ad2fdb78d6', DATE(vt1.c0, vt0.c1, vt0.c1))))))) INTERSECT SELECT ALL * FROM vt0 INNER JOIN vt1 ON NULL WHERE (((((((((((((vt0.c0)IS NOT(vt0.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END)))AND(((((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))))OR(((vt1.c0)<=(vt0.c1)))))OR(((vt0.c1)-(vt1.c0)))))OR((- (vt0.c0)))));
SELECT MIN(vt0.c0) FROM vt0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN '' WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS BLOB));
SELECT DISTINCT MIN(vt0.c0) FROM vt0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN '' WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS BLOB)) INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0, vt1 WHERE ((((vt1.c0 IN (vt0.c0)))>>(((vt0.c0)LIKE(vt1.c0)))));
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (UPPER((- (vt0.c0)))) ORDER BY vt1.c0, CASE CASE 0xffffffffbb32aafd  WHEN vt0.c0 THEN vt0.c1 END  WHEN ((vt0.c0) IS TRUE) THEN ((vt1.c0)AND(vt0.c1)) WHEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN json_remove(vt1.c0, vt0.c0, vt0.c1) WHEN ((vt1.c0)&('N8')) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE RTRIM THEN ((vt0.c1)!=(vt0.c1)) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '-1693198541' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END;
SELECT DISTINCT MAX(vt0.c1) FROM vt1, vt0 WHERE (UPPER((- (vt0.c0)))) ORDER BY vt1.c0, CASE CASE 0Xffffffffbb32aafd  WHEN vt0.c0 THEN vt0.c1 END  WHEN ((vt0.c0) IS TRUE) THEN ((vt1.c0)AND(vt0.c1)) WHEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN json_remove(vt1.c0, vt0.c0, vt0.c1) WHEN ((vt1.c0)&('N8')) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE RTRIM THEN ((vt0.c1)<>(vt0.c1)) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '-1693198541' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt1, vt0 WHERE (((((((((((vt0.c1) IS FALSE))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)))))AND(-6.69325256E8)))AND(TYPEOF(vt0.c1))))AND(LTRIM(vt0.c1, NULL)))) ORDER BY vt1.c0, CASE CASE 0xffffffffbb32aafd  WHEN vt0.c0 THEN vt0.c1 END  WHEN ((vt0.c0) IS TRUE) THEN ((vt1.c0)AND(vt0.c1)) WHEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN json_remove(vt1.c0, vt0.c0, vt0.c1) WHEN ((vt1.c0)&('N8')) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE RTRIM THEN ((vt0.c1)!=(vt0.c1)) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '-1693198541' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END;
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE ((((vt0.c1) IS FALSE) IN (-2108991592, ((vt1.c0) ISNULL))));
SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE ((((((vt0.c1) IS FALSE) IN (0Xffffffff824b5798, ((vt1.c0) ISNULL))))AND(CASE WHEN (((vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0))) THEN vt0.c1 WHEN ((vt1.c0) NOTNULL) THEN ((vt0.c0) ISNULL) WHEN ((x'a9') IS FALSE) THEN (((vt0.c1))==((vt1.c0))) WHEN '1412683960' THEN (- (vt1.c0)) END))) ORDER BY CAST(((vt1.c0)GLOB(vt0.c1)) AS INTEGER) ASC  NULLS FIRST LIMIT 2;
SELECT * FROM vt0, vt1 WHERE ((0.40590581393151914 IN ()));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((0.40590581393151914 IN ()))AND((((NOT (NULL)))AND(x'09e29e'))))) ORDER BY vt0.c1 DESC, json_object(LTRIM(vt1.c0, vt0.c1), LIKELIHOOD(DISTINCT vt0.c1, vt1.c0)) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((- (((((vt1.c0)AND(vt0.c1)))OR(vt1.c0))))) ORDER BY vt0.c1 DESC, json_object(LTRIM(vt1.c0, vt0.c1), LIKELIHOOD(DISTINCT vt0.c1, vt1.c0));
SELECT * FROM vt0, vt1 WHERE ((0.40590581393151914 IN ()));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((0.40590581393151914 IN ()))AND((((NOT (NULL)))AND(x'09e29e'))))) ORDER BY vt0.c1 DESC, json_object(LTRIM(vt1.c0, vt0.c1), LIKELIHOOD(DISTINCT vt0.c1, vt1.c0)) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((- (((((vt1.c0)AND(vt0.c1)))OR(vt1.c0))))) ORDER BY vt0.c1 DESC, json_object(LTRIM(vt1.c0, vt0.c1), LIKELIHOOD(DISTINCT vt0.c1, vt1.c0));
SELECT * FROM vt0, vt1 WHERE ((((+ (vt1.c0))) BETWEEN (((vt0.c1)&(vt0.c0))) AND (((vt1.c0)IS(vt1.c0)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((+ (vt1.c0))) BETWEEN (((vt0.c1)&(vt0.c0))) AND (((vt1.c0)IS(vt1.c0)))))AND(((((vt0.c0) IS FALSE))>(x'6c'))))) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt0.c0 IN (vt0.c0)))OR(((vt1.c0)<<(vt0.c1)))))AND((vt0.c1 IN ()))));
SELECT * FROM vt0, vt1 WHERE ((((+ (vt1.c0))) BETWEEN (((vt0.c1)&(vt0.c0))) AND (((vt1.c0)IS(vt1.c0)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((+ (vt1.c0))) BETWEEN (((vt0.c1)&(vt0.c0))) AND (((vt1.c0)IS(vt1.c0)))))AND(((((vt0.c0) IS FALSE))>(x'6c'))))) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt0.c0 IN (vt0.c0)))OR(((vt1.c0)<<(vt0.c1)))))AND((vt0.c1 IN ()))));
SELECT * FROM vt0, vt1 WHERE ((~ ('c7	Etf' COLLATE RTRIM))) ORDER BY (((vt0.c0 IN ()))<>(CAST(vt0.c0 AS INTEGER)));
SELECT ALL * FROM vt0, vt1 WHERE ((~ ('c7	Etf' COLLATE RTRIM))) ORDER BY ((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR((('')*('start of dayM')))))OR(CAST(vt1.c0 AS TEXT))) ASC  NULLS LAST, STRFTIME(215324751, ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), TRIM(vt1.c0, vt0.c0)) ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt1.c0)))AND('oHq)U?2s')))) AND (((~ (vt0.c1))))) LIMIT 1;
SELECT * FROM vt0, vt1 WHERE ((~ ('c7	Etf' COLLATE RTRIM))) ORDER BY (((vt0.c0 IN ()))<>(CAST(vt0.c0 AS INTEGER)));
SELECT ALL * FROM vt0, vt1 WHERE ((~ ('c7	Etf' COLLATE RTRIM))) ORDER BY ((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR((('')*('start of dayM')))))OR(CAST(vt1.c0 AS TEXT))) ASC  NULLS LAST, STRFTIME(215324751, ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), TRIM(vt1.c0, vt0.c0)) ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt1.c0)))AND('oHq)U?2s')))) AND (((~ (vt0.c1))))) LIMIT 1;
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c1, x'b14b2b', vt0.c1))) AS BLOB)) ORDER BY (((NULL)>(vt0.c0)) IN ());
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c1, x'b14b2b', vt0.c1))) AS BLOB)) ORDER BY (((NULL)>(vt0.c0)) IN ()) INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((vt0.c1)GLOB(vt0.c0)) IN (((vt0.c0) NOTNULL)))) ORDER BY (((NULL)>(vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE ((+ (CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE ((+ (CAST(vt1.c0 AS TEXT)))) ORDER BY (((vt0.c0, vt0.c1)) NOT BETWEEN ((((x'6447')IS(vt1.c0)), ((vt0.c0)!=(vt0.c1)))) AND (((((vt1.c0, vt0.c1, 0.002755395279785189))<>((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c0)<>(vt0.c1))))), vt0.c0, vt0.c1 ASC;
SELECT MAX(vt1.c0) FROM vt1 WHERE ((+ (CAST(vt1.c0 AS INTEGER)))) ORDER BY (((((vt1.c0, vt1.c0, '-139439375'))<=((NULL, vt1.c0, vt1.c0)))) NOT NULL), ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ());
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((+ (CAST(vt1.c0 AS INTEGER)))) ORDER BY (((((vt1.c0, vt1.c0, '-139439375'))<=((NULL, vt1.c0, vt1.c0)))) NOT NULL), ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) LIMIT 0x0;
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE (((vt0.c0 COLLATE BINARY)AND(((CHANGES())>>((NULL IN (vt0.c1)))))));
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0, vt0.c0))<=((vt0.c1, vt1.c0))))<((((vt1.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, vt0.c0))))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((vt0.c0, vt0.c0))<=((vt0.c1, vt1.c0))))<((((vt1.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, vt0.c0))))))AND(CASE WHEN (((vt1.c0))!=((vt1.c0))) THEN 'D' WHEN ((vt0.c1) ISNULL) THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) END))) ORDER BY (NOT ((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0)!=(vt0.c0))) BETWEEN ((('Oq')>=(vt0.c0))) AND (UNLIKELY(DISTINCT vt1.c0))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c1)IS(vt0.c0))) NOT NULL)) ORDER BY (NOT ((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0)!=(vt0.c0))) BETWEEN ((('Oq')>=(vt0.c0))) AND (UNLIKELY(DISTINCT vt1.c0))) ASC LIMIT 0;
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0, vt0.c0))<=((vt0.c1, vt1.c0))))<((((vt1.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, vt0.c0))))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((vt0.c0, vt0.c0))<=((vt0.c1, vt1.c0))))<((((vt1.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, vt0.c0))))))AND(CASE WHEN (((vt1.c0))!=((vt1.c0))) THEN 'D' WHEN ((vt0.c1) ISNULL) THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))) END))) ORDER BY (NOT ((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0)!=(vt0.c0))) BETWEEN ((('Oq')>=(vt0.c0))) AND (UNLIKELY(DISTINCT vt1.c0))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c1)IS(vt0.c0))) NOT NULL)) ORDER BY (NOT ((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0)!=(vt0.c0))) BETWEEN ((('Oq')>=(vt0.c0))) AND (UNLIKELY(DISTINCT vt1.c0))) ASC LIMIT 0;
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((vt1.c0))!=((vt0.c1))) END WHERE (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) IS FALSE));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((vt1.c0))<>((vt0.c1))) END WHERE (((((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) IS FALSE))AND(x'cb6f6bc9')));
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((vt1.c0))!=((vt0.c1))) END WHERE (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) IS FALSE));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((vt1.c0))<>((vt0.c1))) END WHERE (((((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) IS FALSE))AND(x'cb6f6bc9')));
SELECT * FROM vt0, vt1 WHERE ('Y' COLLATE BINARY) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), x'', '-844438941')) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c1)>=(vt0.c0)), CAST(vt0.c0 AS REAL)))), ((((vt1.c0)OR(vt0.c0)))>(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) ASC, CASE (((vt0.c0, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c0, '1^V[昸', vt0.c0, vt0.c1)))  WHEN CAST(x'18' AS REAL) THEN vt0.c0 WHEN 0.22914718992942062 THEN TYPEOF(vt0.c0) WHEN (((vt0.c1, vt1.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0))) THEN CASE 1507232029  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) BETWEEN ('v0UdmMC''') AND (vt1.c0)) END  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((('Y' COLLATE BINARY)AND(CASE 0.47170960156145825  WHEN 'D<1Y?' THEN CASE WHEN vt0.c0 THEN 0.6235065713349728 ELSE vt1.c0 END WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN x'14' THEN CAST(vt0.c1 AS REAL) ELSE (((vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c1)) AND ((0x2979cfcf, vt0.c1))) END))) ORDER BY (((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)>(vt1.c0))) AND (((vt1.c0)>>(vt0.c0)))) ASC  NULLS LAST, ((((((((NULL)AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)))IS NOT(((vt1.c0)-(vt0.c1))));
SELECT * FROM vt0, vt1 WHERE ('Y' COLLATE BINARY) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), x'', '-844438941')) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c1)>=(vt0.c0)), CAST(vt0.c0 AS REAL)))), ((((vt1.c0)OR(vt0.c0)))>(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) ASC, CASE (((vt0.c0, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c0, '1^V[昸', vt0.c0, vt0.c1)))  WHEN CAST(x'18' AS REAL) THEN vt0.c0 WHEN 0.22914718992942062 THEN TYPEOF(vt0.c0) WHEN (((vt0.c1, vt1.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0))) THEN CASE 1507232029  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) BETWEEN ('v0UdmMC''') AND (vt1.c0)) END  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((('Y' COLLATE BINARY)AND(CASE 0.47170960156145825  WHEN 'D<1Y?' THEN CASE WHEN vt0.c0 THEN 0.6235065713349728 ELSE vt1.c0 END WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN x'14' THEN CAST(vt0.c1 AS REAL) ELSE (((vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c1)) AND ((0x2979cfcf, vt0.c1))) END))) ORDER BY (((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)>(vt1.c0))) AND (((vt1.c0)>>(vt0.c0)))) ASC  NULLS LAST, ((((((((NULL)AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)))IS NOT(((vt1.c0)-(vt0.c1))));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((+ (vt1.c0))) AND ('휳'))) ORDER BY (+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'f5' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) IS FALSE), (- (vt1.c0 COLLATE NOCASE));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((+ (vt1.c0))) AND ('휳')))AND(CASE WHEN CAST(vt1.c0 AS BLOB) THEN (((vt1.c0))<((vt1.c0))) WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN ((vt1.c0) IS TRUE) WHEN ((((((((((vt1.c0)OR(vt1.c0)))AND('[I7-NVdq')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (''))) NOT BETWEEN (((0X655fba17) NOT BETWEEN (0.008135618822715185) AND (vt1.c0))) AND (('Ḭ塊' IN ()))) DESC INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (''))) NOT BETWEEN (((1700772375) NOT BETWEEN (0.008135618822715185) AND (vt1.c0))) AND (('Ḭ塊' IN ()))) DESC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE (((((vt1.c0)||(vt0.c0)))<=(TRIM(vt0.c1, vt1.c0)))) ORDER BY (((vt0.c1) NOT NULL) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON vt1.c0 WHERE (((((vt1.c0)||(vt0.c0)))<(TRIM(vt0.c1, vt1.c0)))) ORDER BY CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c1)<(vt1.c0)) END ASC, LOWER(CAST(vt0.c0 AS BLOB)) LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt1.c0 END)AND(vt1.c0)))OR((((vt0.c1, vt0.c1)) BETWEEN ((vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0)))))) ORDER BY (((vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((((vt0.c1) IS TRUE), (- (vt0.c1)), CHAR(vt1.c0, vt0.c0))) AND ((CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN '茿' END, CASE WHEN vt1.c0 THEN x'99' WHEN vt1.c0 THEN vt0.c0 ELSE x'c5' END, CASE WHEN vt0.c0 THEN '-1460875119' WHEN vt0.c0 THEN vt1.c0 END))) ASC, ((NULL) ISNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt1.c0 END)AND(vt1.c0)))OR((((vt0.c1, vt0.c1)) BETWEEN ((vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0)))))) ORDER BY CAST(vt1.c0 AS INTEGER), ((((vt1.c0)IS NOT(vt0.c0)))/(((vt0.c1) NOT NULL)))  NULLS LAST, CAST(vt0.c0 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.c0) NOTNULL) IN (((vt1.c0)/(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 2129365585 END, ((vt1.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.c0) NOTNULL) IN (((vt1.c0)/(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0X7eeb8a51 END, ((vt1.c0) NOTNULL))) ASC  NULLS FIRST LIMIT 0X1;
SELECT MAX(vt1.c0) FROM vt1 WHERE (CASE WHEN UPPER(vt1.c0) THEN vt1.c0 COLLATE NOCASE ELSE (vt1.c0 IN ('-600200793')) END) ORDER BY (~ (((vt1.c0) NOTNULL))), vt1.c0 ASC  NULLS LAST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 NOT INDEXED WHERE (((CASE WHEN UPPER(vt1.c0) THEN vt1.c0 COLLATE NOCASE ELSE (vt1.c0 IN ('-600200793')) END)AND(((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) ISNULL)))) ORDER BY (~ (((vt1.c0) NOTNULL))), vt1.c0 ASC  NULLS LAST INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((- ((~ (vt1.c0))))) ORDER BY (~ (((vt1.c0) NOTNULL))), vt1.c0 ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (CAST(CAST(vt0.c0 AS REAL) AS TEXT));
SELECT * FROM vt0, vt1 WHERE (CAST(CAST(vt0.c0 AS REAL) AS TEXT)) LIMIT 0X1 INTERSECT SELECT * FROM vt0, vt1 WHERE (((((CASE vt0.c1  WHEN vt1.c0 THEN '' WHEN 0.5925265689994862 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt1.c0)>=(vt0.c0)))))OR(vt0.c1))) LIMIT 0X1;
SELECT * FROM vt0, vt1 WHERE (CAST(CAST(vt0.c0 AS REAL) AS TEXT));
SELECT * FROM vt0, vt1 WHERE (CAST(CAST(vt0.c0 AS REAL) AS TEXT)) LIMIT 0X1 INTERSECT SELECT * FROM vt0, vt1 WHERE (((((CASE vt0.c1  WHEN vt1.c0 THEN '' WHEN 0.5925265689994862 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt1.c0)>=(vt0.c0)))))OR(vt0.c1))) LIMIT 0X1;
SELECT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN (((vt1.c0)<>(vt1.c0))))) ORDER BY NULL DESC, ((vt1.c0) NOT NULL) DESC;
SELECT * FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END IN (((vt1.c0)>(vt1.c0)))))AND(CASE CAST(vt1.c0 AS BLOB)  WHEN (~ (x'47')) THEN (vt1.c0 IN ()) WHEN CASE WHEN 0.18909317683762528 THEN vt1.c0 END THEN (((vt1.c0))<((vt1.c0))) END))) ORDER BY NULL DESC, ((vt1.c0) NOT NULL) DESC;
SELECT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN (((vt1.c0)<>(vt1.c0))))) ORDER BY NULL DESC, ((vt1.c0) NOT NULL) DESC;
SELECT * FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END IN (((vt1.c0)>(vt1.c0)))))AND(CASE CAST(vt1.c0 AS BLOB)  WHEN (~ (x'47')) THEN (vt1.c0 IN ()) WHEN CASE WHEN 0.18909317683762528 THEN vt1.c0 END THEN (((vt1.c0))<((vt1.c0))) END))) ORDER BY NULL DESC, ((vt1.c0) NOT NULL) DESC;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY CAST(CAST(vt0.c1 AS TEXT) AS BLOB) ASC;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOTNULL))AND(((vt0.c0)*(vt0.c0)) COLLATE RTRIM))) ORDER BY ((((vt0.c0 IN (vt0.c0)), (('365792862') BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c1 AS INTEGER)))==(((((3.65792862E8)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0, vt0.c1)) NOT BETWEEN ((0.6369684515230377, vt0.c1)) AND ((vt0.c1, x'15'))), CAST(vt0.c1 AS NUMERIC)))), (- (((vt0.c1)>=(x'')))), '-1686332408' COLLATE BINARY  NULLS FIRST, ((((vt0.c0 IN ()), (vt0.c0 IN ()), vt0.c0, (vt0.c0 IN (vt0.c1)), CAST(vt0.c1 AS NUMERIC)))!=((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE 2070174603 END, (vt0.c0 IN (vt0.c1)), ((vt0.c0)GLOB(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), '0.14087406893072174')));
SELECT MIN(vt1.c0) FROM vt1 WHERE (((((((((TRIM(DISTINCT vt1.c0, vt1.c0))AND(TYPEOF(vt1.c0))))OR(((vt1.c0)>=(vt1.c0)))))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (+ (((vt1.c0)&(vt1.c0))));
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((((((((TRIM(DISTINCT vt1.c0, vt1.c0))AND(TYPEOF(vt1.c0))))OR(((vt1.c0)>=(vt1.c0)))))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (+ (((vt1.c0)&(vt1.c0))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((((- (vt1.c0)))OR((vt0.c0 IN (vt0.c1)))))AND(((NULL) IS TRUE))) WHERE (((((('1e500' IN (vt0.c0, '|[')))OR(vt1.c0 COLLATE RTRIM)))AND(((vt0.c0)/(vt0.c1)))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((((- (vt1.c0)))OR((vt0.c0 IN (vt0.c1)))))AND(((NULL) IS TRUE))) WHERE (((((((('1e500' IN (vt0.c0, '|[')))OR(vt1.c0 COLLATE RTRIM)))AND(((vt0.c0)/(vt0.c1)))))AND(CAST((vt0.c1 IN ()) AS BLOB)))) LIMIT 0x0 INTERSECT SELECT * FROM vt1 CROSS JOIN vt0 ON (((((- (vt1.c0)))OR((vt0.c0 IN (vt0.c1)))))AND(((NULL) IS TRUE))) WHERE (CASE TRIM(DISTINCT vt0.c1, vt0.c0)  WHEN (((vt0.c0))>((vt0.c1))) THEN COALESCE(vt0.c1, vt1.c0, 'GIC|', vt1.c0, vt0.c0) WHEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0)<>(vt0.c1)) END) LIMIT 0X0;
SELECT * FROM vt1 CROSS JOIN vt0 ON (((((- (vt1.c0)))OR((vt0.c0 IN (vt0.c1)))))AND(((NULL) IS TRUE))) WHERE (((((('1e500' IN (vt0.c0, '|[')))OR(vt1.c0 COLLATE RTRIM)))AND(((vt0.c0)/(vt0.c1)))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((((- (vt1.c0)))OR((vt0.c0 IN (vt0.c1)))))AND(((NULL) IS TRUE))) WHERE (((((((('1e500' IN (vt0.c0, '|[')))OR(vt1.c0 COLLATE RTRIM)))AND(((vt0.c0)/(vt0.c1)))))AND(CAST((vt0.c1 IN ()) AS BLOB)))) LIMIT 0x0 INTERSECT SELECT * FROM vt1 CROSS JOIN vt0 ON (((((- (vt1.c0)))OR((vt0.c0 IN (vt0.c1)))))AND(((NULL) IS TRUE))) WHERE (CASE TRIM(DISTINCT vt0.c1, vt0.c0)  WHEN (((vt0.c0))>((vt0.c1))) THEN COALESCE(vt0.c1, vt1.c0, 'GIC|', vt1.c0, vt0.c0) WHEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0)<>(vt0.c1)) END) LIMIT 0X0;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))<>(((vt1.c0)>>(vt1.c0))))) ORDER BY CASE ((vt0.c1)<(vt0.c0))  WHEN (NOT (vt0.c0)) THEN (- (vt0.c0)) WHEN ((vt0.c0)>>('1461806257')) THEN (vt0.c0 IN (vt1.c0, vt0.c1)) WHEN ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)) THEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) WHEN (vt0.c1 IN ()) THEN CAST(vt1.c0 AS BLOB) END DESC;
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))!=(((vt1.c0)>>(vt1.c0)))))AND((((~ (vt0.c1)))|(((('浘', vt1.c0, '+I'))<=((vt0.c0, vt1.c0, vt0.c1)))))))) ORDER BY (((((vt0.c0))==((vt0.c1))))<(LIKELY(vt1.c0))), ((((vt1.c0) IS FALSE))%(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))<>(((vt1.c0)>>(vt1.c0))))) ORDER BY CASE ((vt0.c1)<(vt0.c0))  WHEN (NOT (vt0.c0)) THEN (- (vt0.c0)) WHEN ((vt0.c0)>>('1461806257')) THEN (vt0.c0 IN (vt1.c0, vt0.c1)) WHEN ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)) THEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) WHEN (vt0.c1 IN ()) THEN CAST(vt1.c0 AS BLOB) END DESC;
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))!=(((vt1.c0)>>(vt1.c0)))))AND((((~ (vt0.c1)))|(((('浘', vt1.c0, '+I'))<=((vt0.c0, vt1.c0, vt0.c1)))))))) ORDER BY (((((vt0.c0))==((vt0.c1))))<(LIKELY(vt1.c0))), ((((vt1.c0) IS FALSE))%(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))  NULLS LAST LIMIT 0x1;
SELECT * FROM vt1 WHERE (CASE WHEN '-529809639' THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<=(CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE WHEN '-529809639' THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<=(CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE WHEN '-529809639' THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<=(CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE WHEN '-529809639' THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<=(CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE (((UPPER(vt0.c1))GLOB(vt1.c0))) ORDER BY (CAST(vt1.c0 AS REAL) IN ())  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((UPPER(vt0.c1))GLOB(vt1.c0)))AND(((((vt1.c0) BETWEEN (vt1.c0) AND ('1461806257')))||(((vt0.c0) NOT NULL)))))) ORDER BY CAST('' AS NUMERIC) DESC  NULLS LAST, ((vt1.c0 COLLATE BINARY) NOTNULL) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c0)), '', UNLIKELY(vt0.c1))) AND ((vt0.c0 COLLATE RTRIM, TRIM(DISTINCT vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) ORDER BY CAST('' AS NUMERIC) DESC  NULLS LAST, ((vt1.c0 COLLATE BINARY) NOTNULL) LIMIT 0X1;
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE (((UPPER(vt0.c1))GLOB(vt1.c0))) ORDER BY (CAST(vt1.c0 AS REAL) IN ())  NULLS FIRST;
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE (0.23514224673900486) ORDER BY vt0.c0 DESC  NULLS LAST, (((vt0.c0 IN ()))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE (((0.23514224673900486)AND((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN x'5f' THEN vt0.c0 WHEN '-1555891073' THEN vt1.c0 END IN ())))) ORDER BY vt0.c0 DESC  NULLS LAST, (((vt0.c0 IN ()))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) LIMIT 3;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((+ (((((((vt0.c1)AND(vt0.c0)))OR(NULL)))AND(vt0.c0))))) ORDER BY ((((((((NULLIF(DISTINCT vt0.c0, vt0.c0))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND(((vt0.c0)IS(vt0.c0)))))OR(x'5a89')))AND((vt0.c0 IN ())));
SELECT MIN(vt0.c0) FROM vt0 WHERE ((+ (((((((vt0.c1)AND(vt0.c0)))OR(NULL)))AND(vt0.c0))))) ORDER BY ((((((((NULLIF(DISTINCT vt0.c0, vt0.c0))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND(((vt0.c0)IS(vt0.c0)))))OR(x'5a89')))AND((vt0.c0 IN ()))) INTERSECT SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (json_patch((((vt0.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0))), (- (vt0.c0)))) ORDER BY ((((((((NULLIF(DISTINCT vt0.c0, vt0.c0))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND(((vt0.c0)IS(vt0.c0)))))OR(x'5a89')))AND((vt0.c0 IN ())));
SELECT MIN(vt1.c0) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)<=(IFNULL(DISTINCT vt1.c0, vt1.c0)))) ORDER BY (((((vt1.c0, vt1.c0)) BETWEEN (('1245353166', vt1.c0)) AND ((0.6665812672966115, vt1.c0)))) BETWEEN (vt1.c0 COLLATE BINARY) AND (TRIM(vt1.c0, vt1.c0)));
SELECT MIN(vt1.c0) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)==(IFNULL(DISTINCT vt1.c0, vt1.c0)))) ORDER BY LIKELIHOOD(DISTINCT x'25', vt1.c0) LIMIT 0 INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (391877162) ORDER BY LIKELIHOOD(DISTINCT x'25', vt1.c0) LIMIT 0X0;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((((((0.0016899972646078343)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) NOTNULL)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ASC, ((((((CAST(0.3243432537730546 AS BLOB))OR((NOT (vt1.c0)))))OR(((vt1.c0)%(vt1.c0)))))AND(((vt1.c0) NOTNULL))) DESC;
SELECT MAX(vt1.c0) FROM vt1 WHERE (((((((((0.0016899972646078343)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) NOTNULL)) ORDER BY ((((vt1.c0) IS FALSE))%(CAST(vt1.c0 AS TEXT))) ASC  NULLS FIRST, (vt1.c0 IN (((vt1.c0) IS TRUE))) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((~ (CASE '-206925103'  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((~ (CASE '-206925103'  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (LIKELY(LIKELY(DISTINCT vt1.c0))) LIMIT 0X2;
SELECT * FROM vt0, vt1 WHERE ((~ (CASE '-206925103'  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((~ (CASE '-206925103'  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (LIKELY(LIKELY(DISTINCT vt1.c0))) LIMIT 0X2;
SELECT * FROM vt0, vt1 WHERE (NULLIF(((vt0.c1)-(NULL)), ((((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (NULLIF(((vt0.c1)-(NULL)), ((((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))) ORDER BY ((vt0.c0 COLLATE NOCASE)>=(((vt0.c0)>=(vt1.c0)))) DESC, ((~ (vt1.c0)) IN (((((vt0.c1)AND(vt0.c1)))AND(-7.45831232E8)))) DESC LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c0))<((vt0.c1)))))<=((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)))) ORDER BY ((vt0.c0 COLLATE NOCASE)>=(((vt0.c0)>=(vt1.c0)))) DESC, ((~ (vt1.c0)) IN (((((vt0.c1)AND(vt0.c1)))AND(-7.45831232E8)))) DESC LIMIT 1;
SELECT * FROM vt0, vt1 WHERE (NULLIF(((vt0.c1)-(NULL)), ((((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (NULLIF(((vt0.c1)-(NULL)), ((((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))) ORDER BY ((vt0.c0 COLLATE NOCASE)>=(((vt0.c0)>=(vt1.c0)))) DESC, ((~ (vt1.c0)) IN (((((vt0.c1)AND(vt0.c1)))AND(-7.45831232E8)))) DESC LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c0))<((vt0.c1)))))<=((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)))) ORDER BY ((vt0.c0 COLLATE NOCASE)>=(((vt0.c0)>=(vt1.c0)))) DESC, ((~ (vt1.c0)) IN (((((vt0.c1)AND(vt0.c1)))AND(-7.45831232E8)))) DESC LIMIT 1;
SELECT * FROM vt0, vt1 WHERE ((- (((vt1.c0)LIKE(vt1.c0))))) ORDER BY 0.7953309464811457 DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((- (((vt1.c0)LIKE(vt1.c0))))) ORDER BY 0.7953309464811457 DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((((((((((3.65792862E8)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) THEN ABS(DISTINCT vt0.c1) END) ORDER BY 0.7953309464811457 DESC  NULLS FIRST LIMIT 0;
SELECT * FROM vt0, vt1 WHERE ((- (((vt1.c0)LIKE(vt1.c0))))) ORDER BY 0.7953309464811457 DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((- (((vt1.c0)LIKE(vt1.c0))))) ORDER BY 0.7953309464811457 DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((((((((((3.65792862E8)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) THEN ABS(DISTINCT vt0.c1) END) ORDER BY 0.7953309464811457 DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) AND (vt0.c1)) WHERE (vt0.c0);
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) AND (vt0.c1)) WHERE (((vt0.c0)AND(((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))) BETWEEN ((+ (vt0.c1))) AND (((vt1.c0)<<(vt0.c0))))))) INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) AND (vt0.c1)) WHERE (((NULL) NOTNULL));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) AND (vt0.c1)) WHERE (vt0.c0);
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) AND (vt0.c1)) WHERE (((vt0.c0)AND(((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))) BETWEEN ((+ (vt0.c1))) AND (((vt1.c0)<<(vt0.c0))))))) INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) AND (vt0.c1)) WHERE (((NULL) NOTNULL));
SELECT MIN(vt0.c1) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS FALSE));
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER)) IS FALSE))AND((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)), vt0.c0 COLLATE RTRIM, CASE WHEN 1.700772375E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0xffffffff85ccdb14 ELSE vt0.c0 END))<=(((NOT (vt0.c0)), (((vt0.c1, vt0.c0, vt0.c1))<>((vt0.c0, vt0.c1, vt0.c0))), CASE vt0.c1  WHEN vt0.c0 THEN '-2022459642' WHEN vt0.c1 THEN 0.4760656641529958 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))))) ORDER BY ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) NOT NULL)  NULLS LAST INTERSECT SELECT MIN(vt0.c1) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)) ORDER BY ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) NOT NULL)  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0, 'd', vt0.c0)) NOT BETWEEN (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))), LIKELIHOOD(vt1.c0, vt1.c0), (((vt0.c1))>=((vt1.c0))))) AND (((vt1.c0 IN ()), ((vt1.c0)LIKE(vt0.c0)), ((vt1.c0)<>(vt1.c0))))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0, 'd', vt0.c0)) NOT BETWEEN (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))), LIKELIHOOD(vt1.c0, vt1.c0), (((vt0.c1))>=((vt1.c0))))) AND (((vt1.c0 IN ()), ((vt1.c0)LIKE(vt0.c0)), ((vt1.c0)!=(vt1.c0)))))) ORDER BY (((((vt0.c0, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c0, -432501604)) AND ((vt1.c0, vt0.c0, vt0.c0, vt0.c1)))) IS TRUE) ASC  NULLS LAST, ((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC, x''  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE ((+ ((vt0.c0 IN ())))) ORDER BY (((((vt0.c0, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c0, -432501604)) AND ((vt1.c0, vt0.c0, vt0.c0, vt0.c1)))) IS TRUE) ASC  NULLS LAST, ((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC, x''  NULLS LAST LIMIT 0X1;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0, 'd', vt0.c0)) NOT BETWEEN (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))), LIKELIHOOD(vt1.c0, vt1.c0), (((vt0.c1))>=((vt1.c0))))) AND (((vt1.c0 IN ()), ((vt1.c0)LIKE(vt0.c0)), ((vt1.c0)<>(vt1.c0))))));
SELECT * FROM vt0 WHERE (((((vt0.c1) IS FALSE))LIKE(((vt0.c1)|(vt0.c1))))) ORDER BY vt0.c0  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) IS FALSE))LIKE(((vt0.c1)|(vt0.c1))))) ORDER BY vt0.c0  NULLS LAST LIMIT 0;
SELECT * FROM vt0 WHERE (((((vt0.c1) IS FALSE))LIKE(((vt0.c1)|(vt0.c1))))) ORDER BY vt0.c0  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) IS FALSE))LIKE(((vt0.c1)|(vt0.c1))))) ORDER BY vt0.c0  NULLS LAST LIMIT 0;
SELECT MIN(vt1.c0) FROM vt1 WHERE (UPPER((~ (x'')))) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) ASC  NULLS LAST, (((NOT (vt1.c0))) NOT NULL) DESC;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (UPPER((~ (x'')))) ORDER BY vt1.c0  NULLS FIRST INTERSECT SELECT MIN(vt1.c0) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))%((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY vt1.c0  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((~ (('' IN (vt0.c0, vt0.c1))))) ORDER BY (((vt0.c1, (NOT (vt0.c0)), CAST(vt0.c1 AS TEXT)))>((CAST(vt0.c0 AS BLOB), (0.4534043679547741 IN (vt0.c0)), ((vt0.c0)-(vt0.c1))))) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((~ (('' IN (vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY vt0.c0 ASC  NULLS LAST LIMIT 0;
SELECT * FROM vt0, vt1 WHERE ((~ (('' IN (vt0.c0, vt0.c1))))) ORDER BY (((vt0.c1, (NOT (vt0.c0)), CAST(vt0.c1 AS TEXT)))>((CAST(vt0.c0 AS BLOB), (0.4534043679547741 IN (vt0.c0)), ((vt0.c0)-(vt0.c1))))) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((~ (('' IN (vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY vt0.c0 ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE (UNLIKELY(CAST(NULL AS INTEGER))) ORDER BY (((vt0.c1)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND (((vt0.c0 IN (vt0.c1))))) ASC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (UNLIKELY(CAST(NULL AS INTEGER))) ORDER BY ((LIKE(vt0.c1, vt0.c1, '3'))||(NULL)) DESC  NULLS LAST, ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (CASE WHEN vt0.c0 THEN vt1.c0 END)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((((vt1.c0) NOT NULL))))) ORDER BY ((LIKE(vt0.c1, vt0.c1, '3'))||(NULL)) DESC  NULLS LAST, ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (CASE WHEN vt0.c0 THEN vt1.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (UNLIKELY(CAST(NULL AS INTEGER))) ORDER BY (((vt0.c1)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND (((vt0.c0 IN (vt0.c1))))) ASC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (UNLIKELY(CAST(NULL AS INTEGER))) ORDER BY ((LIKE(vt0.c1, vt0.c1, '3'))||(NULL)) DESC  NULLS LAST, ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (CASE WHEN vt0.c0 THEN vt1.c0 END)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((((vt1.c0) NOT NULL))))) ORDER BY ((LIKE(vt0.c1, vt0.c1, '3'))||(NULL)) DESC  NULLS LAST, ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (CASE WHEN vt0.c0 THEN vt1.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (((((vt1.c0)OR(vt0.c1)))AND(x''))) AND ((vt1.c0 IN ())))) ORDER BY (((~ (vt0.c1)))IS NOT((- (vt0.c0)))) DESC, CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))  WHEN NULLIF(vt1.c0, 'OUmp') THEN COALESCE(vt1.c0, vt1.c0, vt0.c0, vt1.c0) WHEN vt0.c1 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END WHEN (('314351243')>>(vt0.c0)) THEN ROUND(vt1.c0, vt1.c0) WHEN (NOT (vt0.c1)) THEN CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END END;
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (((((vt1.c0)OR(vt0.c1)))AND(x''))) AND ((vt1.c0 IN ()))))AND((((vt1.c0))==((vt0.c1))) COLLATE BINARY))) ORDER BY (((~ (vt0.c1)))IS NOT((- (vt0.c0)))) DESC, CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))  WHEN NULLIF(vt1.c0, 'OUmp') THEN COALESCE(vt1.c0, vt1.c0, vt0.c0, vt1.c0) WHEN vt0.c1 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END WHEN (('314351243')>>(vt0.c0)) THEN ROUND(vt1.c0, vt1.c0) WHEN (NOT (vt0.c1)) THEN CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END END;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (((((vt1.c0)OR(vt0.c1)))AND(x''))) AND ((vt1.c0 IN ())))) ORDER BY (((~ (vt0.c1)))IS NOT((- (vt0.c0)))) DESC, CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))  WHEN NULLIF(vt1.c0, 'OUmp') THEN COALESCE(vt1.c0, vt1.c0, vt0.c0, vt1.c0) WHEN vt0.c1 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END WHEN (('314351243')>>(vt0.c0)) THEN ROUND(vt1.c0, vt1.c0) WHEN (NOT (vt0.c1)) THEN CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END END;
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (((((vt1.c0)OR(vt0.c1)))AND(x''))) AND ((vt1.c0 IN ()))))AND((((vt1.c0))==((vt0.c1))) COLLATE BINARY))) ORDER BY (((~ (vt0.c1)))IS NOT((- (vt0.c0)))) DESC, CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))  WHEN NULLIF(vt1.c0, 'OUmp') THEN COALESCE(vt1.c0, vt1.c0, vt0.c0, vt1.c0) WHEN vt0.c1 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END WHEN (('314351243')>>(vt0.c0)) THEN ROUND(vt1.c0, vt1.c0) WHEN (NOT (vt0.c1)) THEN CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END END;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt0.c1)AND(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))))OR((NOT (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(JULIANDAY(vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c0))))AND((((NULL, vt1.c0, vt0.c0))<=((vt0.c0, vt1.c0, vt0.c0))))))OR(CAST(vt1.c0 AS NUMERIC)))) ORDER BY vt0.c1 DESC  NULLS FIRST, 0.926855163435624 ASC, ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN -1.95396873E8 THEN vt0.c0 END)+(1.934281787E9));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt0.c1)AND(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))))OR((NOT (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(JULIANDAY(vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c0))))AND((((NULL, vt1.c0, vt0.c0))<=((vt0.c0, vt1.c0, vt0.c0))))))OR(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (((vt0.c0) IS TRUE) IN ()), ((vt0.c1 COLLATE RTRIM)<(vt0.c0)) INTERSECT SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c0)%(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (+ (vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN CAST(vt1.c0 AS INTEGER) END) ORDER BY (((vt0.c0) IS TRUE) IN ()), ((vt0.c1 COLLATE RTRIM)<(vt0.c0));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) NOT NULL)) ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN vt0.c0 THEN INSTR(vt0.c1, NULL) ELSE vt1.c0 END ASC;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) NOT NULL))AND((((((NOT (vt0.c0)))AND(vt0.c0)))OR((+ (vt0.c1))))))) ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN vt0.c0 THEN INSTR(vt0.c1, NULL) ELSE vt1.c0 END ASC LIMIT 0x1 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END IN ())) ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN vt0.c0 THEN INSTR(vt0.c1, NULL) ELSE vt1.c0 END ASC LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) NOT NULL)) ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN vt0.c0 THEN INSTR(vt0.c1, NULL) ELSE vt1.c0 END ASC;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) NOT NULL))AND((((((NOT (vt0.c0)))AND(vt0.c0)))OR((+ (vt0.c1))))))) ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN vt0.c0 THEN INSTR(vt0.c1, NULL) ELSE vt1.c0 END ASC LIMIT 0x1 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END IN ())) ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN vt0.c0 THEN INSTR(vt0.c1, NULL) ELSE vt1.c0 END ASC LIMIT 1;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON '6F1_L줶' WHERE ((((~ (vt0.c0))) NOT BETWEEN (((NULL)/(vt1.c0))) AND (((vt0.c0)>(vt0.c1)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON '6F1_L줶' WHERE ((((~ (vt0.c0))) NOT BETWEEN (((NULL)/(vt1.c0))) AND (((vt0.c0)>=(vt0.c1))))) LIMIT 3;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON '6F1_L줶' WHERE ((((~ (vt0.c0))) NOT BETWEEN (((NULL)/(vt1.c0))) AND (((vt0.c0)>(vt0.c1)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON '6F1_L줶' WHERE ((((~ (vt0.c0))) NOT BETWEEN (((NULL)/(vt1.c0))) AND (((vt0.c0)>=(vt0.c1))))) LIMIT 3;
SELECT MIN(vt1.c0) FROM vt0, vt1 WHERE (((((vt0.c1)IS(vt0.c0))) IS FALSE)) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN (x'4e') AND (UNICODE(vt1.c0))) ASC  NULLS LAST;
SELECT MIN(vt1.c0) FROM vt0, vt1 WHERE (((((vt0.c1)IS(vt0.c0))) IS FALSE)) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN (x'4e') AND (UNICODE(vt1.c0))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)GLOB(vt0.c1)) IN ())) ORDER BY (+ (LIKELY(DISTINCT NULL))) ASC, vt0.c0, (~ ((~ (NULL))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)GLOB(vt0.c1)) IN ()))AND(CAST(CAST(vt0.c1 AS TEXT) AS REAL)))) ORDER BY (+ (LIKELY(DISTINCT NULL))) ASC, vt0.c0, (~ ((~ (NULL))))  NULLS LAST INTERSECT SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(NULL)))OR(vt0.c0 COLLATE NOCASE))) ORDER BY (+ (LIKELY(DISTINCT NULL))) ASC, vt0.c0, (~ ((~ (NULL))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)GLOB(vt0.c1)) IN ())) ORDER BY (+ (LIKELY(DISTINCT NULL))) ASC, vt0.c0, (~ ((~ (NULL))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)GLOB(vt0.c1)) IN ()))AND(CAST(CAST(vt0.c1 AS TEXT) AS REAL)))) ORDER BY (+ (LIKELY(DISTINCT NULL))) ASC, vt0.c0, (~ ((~ (NULL))))  NULLS LAST INTERSECT SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(NULL)))OR(vt0.c0 COLLATE NOCASE))) ORDER BY (+ (LIKELY(DISTINCT NULL))) ASC, vt0.c0, (~ ((~ (NULL))))  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0, '-1786790141')) NOT BETWEEN ((json_array_length(vt1.c0, vt1.c0), ((vt1.c0) NOT NULL))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))))) ORDER BY ((((((((vt1.c0)GLOB(vt1.c0)))AND(((vt1.c0)%(vt1.c0)))))AND((vt1.c0 IN (NULL)))))AND((((('*-^Hi랿S')OR(vt1.c0)))AND(x'51'))));
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, '-1786790141')) NOT BETWEEN ((json_array_length(vt1.c0, vt1.c0), ((vt1.c0) NOT NULL))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))))))AND((((((((vt1.c0)OR(vt1.c0)))OR(NULL)), (vt1.c0 IN (vt1.c0))))<=((((((x'c8')AND(vt1.c0)))OR(vt1.c0)), CASE WHEN '0.4754831440943993' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))))) ORDER BY ((((((((vt1.c0)GLOB(vt1.c0)))AND(((vt1.c0)%(vt1.c0)))))AND((vt1.c0 IN (NULL)))))AND((((('*-^Hi랿S')OR(vt1.c0)))AND(x'51')))) INTERSECT SELECT DISTINCT * FROM vt1 WHERE (0.3243020145492097) ORDER BY ((((((((vt1.c0)GLOB(vt1.c0)))AND(((vt1.c0)%(vt1.c0)))))AND((vt1.c0 IN (NULL)))))AND((((('*-^Hi랿S')OR(vt1.c0)))AND(x'51'))));
SELECT * FROM vt1 WHERE ((((vt1.c0, '-1786790141')) NOT BETWEEN ((json_array_length(vt1.c0, vt1.c0), ((vt1.c0) NOT NULL))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))))) ORDER BY ((((((((vt1.c0)GLOB(vt1.c0)))AND(((vt1.c0)%(vt1.c0)))))AND((vt1.c0 IN (NULL)))))AND((((('*-^Hi랿S')OR(vt1.c0)))AND(x'51'))));
SELECT ALL * FROM vt0 WHERE (((CAST('-1' AS BLOB))/(((vt0.c0)==(vt0.c0))))) ORDER BY TRIM(((vt0.c1)LIKE(vt0.c1)), '-2130026726') DESC, ((((vt0.c0) NOT NULL)) NOTNULL) DESC;
SELECT * FROM vt0 WHERE (((CAST('-1' AS BLOB))/(((vt0.c0)==(vt0.c0))))) ORDER BY ((vt0.c0)|(((((((((vt0.c1)OR(vt0.c1)))OR(NULL)))OR(vt0.c1)))OR(vt0.c1))))  NULLS FIRST, ((CAST(vt0.c1 AS TEXT))||(vt0.c0)) DESC;
SELECT ALL * FROM vt0 WHERE (((CAST('-1' AS BLOB))/(((vt0.c0)==(vt0.c0))))) ORDER BY TRIM(((vt0.c1)LIKE(vt0.c1)), '-2130026726') DESC, ((((vt0.c0) NOT NULL)) NOTNULL) DESC;
SELECT * FROM vt0 WHERE (((CAST('-1' AS BLOB))/(((vt0.c0)==(vt0.c0))))) ORDER BY ((vt0.c0)|(((((((((vt0.c1)OR(vt0.c1)))OR(NULL)))OR(vt0.c1)))OR(vt0.c1))))  NULLS FIRST, ((CAST(vt0.c1 AS TEXT))||(vt0.c0)) DESC;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((-1296849065)-(vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY (((-1228917404, '0.5305901528374672'))==((COALESCE(vt1.c0, vt1.c0), json_valid(vt1.c0)))) DESC, (~ (vt1.c0)) DESC, CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) ASC;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((((0xffffffffb2b3a757)-(vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))))AND((+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) ORDER BY (((0xffffffffb6c03564, '0.5305901528374672'))=((COALESCE(vt1.c0, vt1.c0), json_valid(vt1.c0)))) DESC, (~ (vt1.c0)) DESC, CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) ASC;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON NULL COLLATE RTRIM WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ((vt0.c0)IS(vt1.c0)) THEN ((vt1.c0)%(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END);
SELECT * FROM vt0 INNER JOIN vt1 ON NULL COLLATE RTRIM WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ((vt0.c0)IS(vt1.c0)) THEN ((vt1.c0)%(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON NULL COLLATE RTRIM WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ((vt0.c0)IS(vt1.c0)) THEN ((vt1.c0)%(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END);
SELECT * FROM vt0 INNER JOIN vt1 ON NULL COLLATE RTRIM WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ((vt0.c0)IS(vt1.c0)) THEN ((vt1.c0)%(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END);
SELECT * FROM vt1, vt0 WHERE (((x'') BETWEEN (vt0.c1) AND (0.18615033934537795))) ORDER BY ((json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0))<>((- ('0.8953898786683685'))))  NULLS FIRST, vt1.c0 ASC;
SELECT * FROM vt1, vt0 WHERE (((((x'') BETWEEN (vt0.c1) AND (0.18615033934537795)))AND(((((vt0.c0)>=(vt0.c1)))<(CASE WHEN '1803013943' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END))))) ORDER BY ((json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0))!=((- ('0.8953898786683685'))))  NULLS FIRST, vt1.c0 ASC LIMIT 0x0;
SELECT * FROM vt1, vt0 WHERE (((x'') BETWEEN (vt0.c1) AND (0.18615033934537795))) ORDER BY ((json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0))<>((- ('0.8953898786683685'))))  NULLS FIRST, vt1.c0 ASC;
SELECT * FROM vt1, vt0 WHERE (((((x'') BETWEEN (vt0.c1) AND (0.18615033934537795)))AND(((((vt0.c0)>=(vt0.c1)))<(CASE WHEN '1803013943' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END))))) ORDER BY ((json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0))!=((- ('0.8953898786683685'))))  NULLS FIRST, vt1.c0 ASC LIMIT 0x0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c1)), (vt0.c1 IN ()))) AND ((vt0.c1 COLLATE NOCASE, ((vt0.c0)%(vt0.c1)))))) ORDER BY vt0.c1  NULLS LAST, (((NOT (vt0.c1))) BETWEEN ('1760756148') AND (CAST(vt0.c0 AS BLOB)))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c1)), (vt0.c1 IN ()))) AND ((vt0.c1 COLLATE NOCASE, ((vt0.c0)%(vt0.c1)))))) ORDER BY (+ (NULL)) LIMIT 0x4;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c1)), (vt0.c1 IN ()))) AND ((vt0.c1 COLLATE NOCASE, ((vt0.c0)%(vt0.c1)))))) ORDER BY vt0.c1  NULLS LAST, (((NOT (vt0.c1))) BETWEEN ('1760756148') AND (CAST(vt0.c0 AS BLOB)))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c1)), (vt0.c1 IN ()))) AND ((vt0.c1 COLLATE NOCASE, ((vt0.c0)%(vt0.c1)))))) ORDER BY (+ (NULL)) LIMIT 0x4;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((((0.21849376656015496))<>((vt0.c1)))) AND ((((vt0.c0, vt0.c0, vt1.c0, vt0.c1, vt0.c0))<>((vt1.c0, vt0.c1, vt0.c0, vt0.c0, vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((((0.21849376656015496))!=((vt0.c1)))) AND ((((vt0.c0, vt0.c0, vt1.c0, vt0.c1, vt0.c0))!=((vt1.c0, vt0.c1, vt0.c0, vt0.c0, vt1.c0))))))AND(CAST((- (833243890)) AS TEXT)))) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '-1878440600' THEN vt1.c0 ELSE vt1.c0 END) ISNULL));
SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '-1878440600' THEN vt1.c0 ELSE vt1.c0 END) ISNULL))AND((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (vt1.c0 COLLATE NOCASE, ((vt1.c0) IS FALSE)))))) ORDER BY ABS((vt1.c0 IN (vt1.c0))), (~ (vt1.c0 COLLATE NOCASE)), (((NOT ('-179095374'))) IS FALSE)  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) ORDER BY ABS((vt1.c0 IN (vt1.c0))), (~ (vt1.c0 COLLATE NOCASE)), (((NOT ('-179095374'))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '-1878440600' THEN vt1.c0 ELSE vt1.c0 END) ISNULL));
SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '-1878440600' THEN vt1.c0 ELSE vt1.c0 END) ISNULL))AND((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (vt1.c0 COLLATE NOCASE, ((vt1.c0) IS FALSE)))))) ORDER BY ABS((vt1.c0 IN (vt1.c0))), (~ (vt1.c0 COLLATE NOCASE)), (((NOT ('-179095374'))) IS FALSE)  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) ORDER BY ABS((vt1.c0 IN (vt1.c0))), (~ (vt1.c0 COLLATE NOCASE)), (((NOT ('-179095374'))) IS FALSE)  NULLS LAST;
SELECT MAX(vt0.c0) FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((vt1.c0)OR(NULL)))OR(vt0.c1)))OR(vt0.c0)), LOWER(vt0.c0), ((vt0.c1) ISNULL)))<>(((+ (vt1.c0)), ((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND('w)6W볐')), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) WHERE (((((NULL)AND(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(x'')));
SELECT MAX(vt0.c0) FROM vt1 INNER JOIN vt0 ON (((((((((vt1.c0)OR(NULL)))OR(vt0.c1)))OR(vt0.c0)), LOWER(vt0.c0), ((vt0.c1) ISNULL)))<>(((+ (vt1.c0)), ((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND('w)6W볐')), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) WHERE (((((((NULL)AND(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(x'')))AND((((((((('摾U?AVV')%('-244010617')))OR(((0.16157274119674114) NOT NULL))))OR(CASE WHEN 0.018633778035659354 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)))OR(CAST(vt0.c0 AS INTEGER)))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (TRIM(vt0.c0))) LIMIT 0X2 INTERSECT SELECT MAX(vt0.c0) FROM vt1 INNER JOIN vt0 ON (((((((((vt1.c0)OR(NULL)))OR(vt0.c1)))OR(vt0.c0)), LOWER(vt0.c0), ((vt0.c1) ISNULL)))<>(((+ (vt1.c0)), ((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND('w)6W볐')), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) WHERE (LIKE((vt0.c1 IN ()), ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ',')) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (TRIM(vt0.c0))) LIMIT 2;
SELECT MAX(vt0.c1) FROM vt0, vt1 WHERE (((((vt0.c0)==(vt0.c1))) BETWEEN ((vt0.c0 IN (vt1.c0))) AND ((((vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0)))))) ORDER BY ((+ (vt0.c0)) IN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), 0.10374213464292625))  NULLS FIRST, (((~ (vt1.c0))) IS TRUE) ASC, ((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (CASE WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END) AND (((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE (((((((vt0.c0)==(vt0.c1))) BETWEEN ((vt0.c0 IN (vt1.c0))) AND ((((vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0))))))AND((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1)))OR(vt1.c0)) IN (((vt0.c1) NOT BETWEEN (0xffffffffcdaae263) AND (vt1.c0)), ((vt0.c1)<=(vt0.c1))))))) ORDER BY ((+ (vt0.c0)) IN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), 0.10374213464292625))  NULLS FIRST, (((~ (vt1.c0))) IS TRUE) ASC, ((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (CASE WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END) AND (((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC LIMIT 2;
SELECT ALL * FROM vt0 WHERE ('' COLLATE NOCASE);
SELECT DISTINCT * FROM vt0 WHERE ('' COLLATE NOCASE) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB) ASC, vt0.c1;
SELECT ALL * FROM vt0 WHERE ('' COLLATE NOCASE);
SELECT DISTINCT * FROM vt0 WHERE ('' COLLATE NOCASE) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB) ASC, vt0.c1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((x'303e')>=(vt1.c0))) AND (TYPEOF(vt1.c0))));
SELECT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((x'303e')>=(vt1.c0))) AND (TYPEOF(vt1.c0)))) ORDER BY vt1.c0 COLLATE RTRIM  NULLS LAST, (((NOT (vt1.c0)))*(TRIM(vt1.c0, vt1.c0)))  NULLS FIRST LIMIT 0x4 INTERSECT SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (('-2011903462' IN (vt1.c0, vt1.c0))))) ORDER BY vt1.c0 COLLATE RTRIM  NULLS LAST, (((NOT (vt1.c0)))*(TRIM(vt1.c0, vt1.c0)))  NULLS FIRST LIMIT 0X4;
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((x'303e')>=(vt1.c0))) AND (TYPEOF(vt1.c0))));
SELECT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((x'303e')>=(vt1.c0))) AND (TYPEOF(vt1.c0)))) ORDER BY vt1.c0 COLLATE RTRIM  NULLS LAST, (((NOT (vt1.c0)))*(TRIM(vt1.c0, vt1.c0)))  NULLS FIRST LIMIT 0x4 INTERSECT SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (('-2011903462' IN (vt1.c0, vt1.c0))))) ORDER BY vt1.c0 COLLATE RTRIM  NULLS LAST, (((NOT (vt1.c0)))*(TRIM(vt1.c0, vt1.c0)))  NULLS FIRST LIMIT 0X4;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ('&w%f', vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '
UQi^鄜v' WHEN vt0.c1 THEN vt0.c0 END END) ORDER BY json_type(((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))  NULLS LAST, x'39', CAST(((vt0.c0) IS TRUE) AS BLOB) ASC  NULLS FIRST;
SELECT MIN(vt0.c0) FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ('&w%f', vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '
UQi^鄜v' WHEN vt0.c1 THEN vt0.c0 END END) ORDER BY x'8b7c'  NULLS FIRST, SQLITE_VERSION() ASC  NULLS FIRST, '|-b{_d('  NULLS FIRST LIMIT 0x2;
SELECT COUNT(*) FROM vt0 WHERE (((x'a14b') BETWEEN ((('903735205')IS NOT(vt0.c1))) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'a14b') BETWEEN ((('903735205')IS NOT(vt0.c1))) AND (vt0.c0)))AND((((vt0.c1) BETWEEN (vt0.c1) AND (NULL)) IN ((- (vt0.c1)), CAST(vt0.c0 AS TEXT)))))) ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)  NULLS FIRST, ((vt0.c1)<=(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ASC, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((- (vt0.c1))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1))>((vt0.c1))) AS REAL)) ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)  NULLS FIRST, ((vt0.c1)<=(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ASC, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((- (vt0.c1))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c1)/(vt0.c0)) THEN ((vt1.c0)&(vt0.c1)) ELSE UNLIKELY(vt0.c0) END WHERE (json_array_length(x'', ((vt0.c1)>>(vt0.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c1)/(vt0.c0)) THEN ((vt1.c0)&(vt0.c1)) ELSE UNLIKELY(vt0.c0) END WHERE (json_array_length(x'', ((vt0.c1)>>(vt0.c0)))) ORDER BY ((((x'')IS(vt0.c1))) NOTNULL) ASC  NULLS FIRST, (NOT ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c1)/(vt0.c0)) THEN ((vt1.c0)&(vt0.c1)) ELSE UNLIKELY(vt0.c0) END WHERE (((((CAST(vt0.c0 AS TEXT))AND(((x'')>(vt0.c0)))))AND((vt0.c0 IN ())))) ORDER BY ((((x'')IS(vt0.c1))) NOTNULL) ASC  NULLS FIRST, (NOT ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c1)/(vt0.c0)) THEN ((vt1.c0)&(vt0.c1)) ELSE UNLIKELY(vt0.c0) END WHERE (json_array_length(x'', ((vt0.c1)>>(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (((vt0.c0)*(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (((vt0.c0)*(vt0.c1)))))AND(CAST(((vt0.c0)<(vt0.c0)) AS TEXT)))) ORDER BY (((((((+ (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(ABS(vt0.c1))))AND(((vt0.c1)AND(vt0.c1)))), CASE ((vt0.c0)LIKE(vt0.c1))  WHEN ((vt0.c0) IS FALSE) THEN CAST(vt0.c0 AS BLOB) ELSE LIKELIHOOD(DISTINCT NULL, vt0.c0) END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (((vt0.c0)*(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (((vt0.c0)*(vt0.c1)))))AND(CAST(((vt0.c0)<(vt0.c0)) AS TEXT)))) ORDER BY (((((((+ (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(ABS(vt0.c1))))AND(((vt0.c1)AND(vt0.c1)))), CASE ((vt0.c0)LIKE(vt0.c1))  WHEN ((vt0.c0) IS FALSE) THEN CAST(vt0.c0 AS BLOB) ELSE LIKELIHOOD(DISTINCT NULL, vt0.c0) END  NULLS LAST;
SELECT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (NULL))) ORDER BY CASE (('-1420023627') NOTNULL)  WHEN ((vt0.c1)GLOB(0.6593991814525583)) THEN vt0.c1 END DESC  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (NULL)))AND(CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (~ (vt0.c1)) THEN (vt0.c1 IN (vt0.c1, vt0.c0)) END))) ORDER BY (((vt0.c0 IN ()))<=(((vt0.c1)<(vt0.c1))))  NULLS LAST, (((((vt0.c1 IN ()))OR(vt0.c0)))OR('d' COLLATE RTRIM)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0 IN ()))<=(((vt0.c1)<(vt0.c1))))  NULLS LAST, (((((vt0.c1 IN ()))OR(vt0.c0)))OR('d' COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN (((vt0.c1, vt0.c1))>((vt0.c0, vt0.c1))) THEN ']' ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) END) ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS FIRST, (NOT ((vt0.c1 IN ())))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (((vt0.c1, vt0.c1))>((vt0.c0, vt0.c1))) THEN ']' ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) END) ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS FIRST, (NOT ((vt0.c1 IN ())))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN (((vt0.c1, vt0.c1))>((vt0.c0, vt0.c1))) THEN ']' ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) END) ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS FIRST, (NOT ((vt0.c1 IN ())))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (((vt0.c1, vt0.c1))>((vt0.c0, vt0.c1))) THEN ']' ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) END) ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS FIRST, (NOT ((vt0.c1 IN ())))  NULLS FIRST LIMIT 0;
SELECT MAX(vt0.c0) FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c1)AND((((((((((((vt0.c0, vt0.c1, vt0.c1))>((vt0.c1, vt0.c0, vt0.c0))))OR((- (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE x'' END)))AND(((vt0.c0)LIKE(vt0.c1)))))AND((NOT (vt0.c0))))))) ORDER BY CASE (- (vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN IFNULL(DISTINCT vt0.c1, vt0.c0) THEN vt0.c0 COLLATE RTRIM ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END END;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (((vt1.c0)|(vt0.c1))) AND ((- (vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (((vt1.c0)|(vt0.c1))) AND ((- (vt1.c0)))))AND(vt0.c0))) ORDER BY CASE UPPER(DISTINCT vt1.c0)  WHEN (vt1.c0 IN ()) THEN x'de85800df3' WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN ()) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END END ASC, NULL ASC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (((vt1.c0)|(vt0.c1))) AND ((- (vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (((vt1.c0)|(vt0.c1))) AND ((- (vt1.c0)))))AND(vt0.c0))) ORDER BY CASE UPPER(DISTINCT vt1.c0)  WHEN (vt1.c0 IN ()) THEN x'de85800df3' WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN ()) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END END ASC, NULL ASC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM vt1 WHERE ('-1656493811');
SELECT * FROM vt1 WHERE ((('-1656493811')AND(('wn.' IN ((((vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0)))))))) ORDER BY ((1.139552051E9)>>(vt1.c0)) COLLATE NOCASE  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM vt1 WHERE ((((((((((((vt1.c0))<>((vt1.c0))))AND(vt1.c0)))OR(((vt1.c0) IS TRUE))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))OR((NOT (vt1.c0))))) ORDER BY ((1.139552051E9)>>(vt1.c0)) COLLATE NOCASE  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt1 WHERE ('-1656493811');
SELECT * FROM vt1 WHERE ((('-1656493811')AND(('wn.' IN ((((vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0)))))))) ORDER BY ((1.139552051E9)>>(vt1.c0)) COLLATE NOCASE  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM vt1 WHERE ((((((((((((vt1.c0))<>((vt1.c0))))AND(vt1.c0)))OR(((vt1.c0) IS TRUE))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))OR((NOT (vt1.c0))))) ORDER BY ((1.139552051E9)>>(vt1.c0)) COLLATE NOCASE  NULLS LAST LIMIT 1;
SELECT * FROM vt0 WHERE ((('') NOT BETWEEN (-8.44438941E8) AND (vt0.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM vt0 WHERE ((('') NOT BETWEEN (-8.44438941E8) AND (vt0.c1 COLLATE RTRIM))) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN 'l-g|' THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c0 WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) THEN ((']Wq')<<(vt0.c1)) ELSE vt0.c1 END  NULLS LAST, (((vt0.c1 IN (vt0.c1))) ISNULL)  NULLS FIRST, (((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, ''))) COLLATE RTRIM  NULLS LAST LIMIT 0x0;
SELECT * FROM vt0 WHERE ((('') NOT BETWEEN (-8.44438941E8) AND (vt0.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM vt0 WHERE ((('') NOT BETWEEN (-8.44438941E8) AND (vt0.c1 COLLATE RTRIM))) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN 'l-g|' THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c0 WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) THEN ((']Wq')<<(vt0.c1)) ELSE vt0.c1 END  NULLS LAST, (((vt0.c1 IN (vt0.c1))) ISNULL)  NULLS FIRST, (((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, ''))) COLLATE RTRIM  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(TRIM(CAST(vt0.c1 AS NUMERIC), ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c1)))OR(x'')))OR(vt0.c1)))AND(CAST(vt0.c1 AS BLOB))))OR(LIKE(vt0.c1, vt0.c1))))OR(((vt0.c0)!=(vt0.c1)))) ASC  NULLS FIRST, (CAST(vt0.c1 AS NUMERIC) IN ()) ASC  NULLS FIRST, IFNULL(vt0.c1 COLLATE NOCASE, LTRIM(vt0.c1)) INTERSECT SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((((((((((vt0.c0)OR(vt0.c1)))OR(x'')))OR(vt0.c1)))AND(CAST(vt0.c1 AS BLOB))))OR(LIKE(vt0.c1, vt0.c1))))OR(((vt0.c0)!=(vt0.c1)))) ASC  NULLS FIRST, (CAST(vt0.c1 AS NUMERIC) IN ()) ASC  NULLS FIRST, IFNULL(vt0.c1 COLLATE NOCASE, LTRIM(vt0.c1));
SELECT * FROM vt0, vt1 WHERE ((NOT (vt0.c0)) COLLATE BINARY);
SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (vt0.c0)) COLLATE BINARY) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ('-55952781');
SELECT * FROM vt0, vt1 WHERE ((NOT (vt0.c0)) COLLATE BINARY);
SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (vt0.c0)) COLLATE BINARY) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ('-55952781');
SELECT * FROM vt0 INNER JOIN vt1 ON ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt1.c0) BETWEEN (vt0.c1) AND (0Xffffffffdb6575a6)))))AND((+ (vt1.c0)))))OR(vt0.c0)) WHERE ((vt0.c1 IN ())) ORDER BY 1.139552051E9, UPPER(DISTINCT (~ (vt0.c1))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt1.c0) BETWEEN (vt0.c1) AND (0xffffffffdb6575a6)))))AND((+ (vt1.c0)))))OR(vt0.c0)) WHERE ((((vt0.c1 IN ()))AND((((vt0.c0, vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((vt1.c0 COLLATE BINARY, ((vt0.c1) BETWEEN (x'') AND (vt1.c0)), '-195396873', x'58')) AND (('922665447', ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(x'0e')), vt0.c1 COLLATE RTRIM, vt1.c0)))))) ORDER BY 1.139552051E9, UPPER(DISTINCT (~ (vt0.c1))) DESC  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN vt1 ON ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt1.c0) BETWEEN (vt0.c1) AND (0Xffffffffdb6575a6)))))AND((+ (vt1.c0)))))OR(vt0.c0)) WHERE ((vt0.c1 IN ())) ORDER BY 1.139552051E9, UPPER(DISTINCT (~ (vt0.c1))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt1.c0) BETWEEN (vt0.c1) AND (0xffffffffdb6575a6)))))AND((+ (vt1.c0)))))OR(vt0.c0)) WHERE ((((vt0.c1 IN ()))AND((((vt0.c0, vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((vt1.c0 COLLATE BINARY, ((vt0.c1) BETWEEN (x'') AND (vt1.c0)), '-195396873', x'58')) AND (('922665447', ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(x'0e')), vt0.c1 COLLATE RTRIM, vt1.c0)))))) ORDER BY 1.139552051E9, UPPER(DISTINCT (~ (vt0.c1))) DESC  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (TRIM(DISTINCT (('')!=(vt0.c0)), CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END));
SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE (TRIM(DISTINCT (('')<>(vt0.c0)), CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE ASC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS REAL))-((NULL IN ())))) ORDER BY CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT MIN(vt1.c0) FROM vt1 WHERE (0x6b4a952b);
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((0X6b4a952b)AND(CASE WHEN ((vt1.c0)*(vt1.c0)) THEN x'c889' WHEN (vt1.c0 IN (vt1.c0)) THEN ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) ELSE ((NULL) NOT NULL) END)));
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (x'3866eb4c')))))OR(((vt1.c0)>(vt0.c1))))) ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS TEXT) WHEN TIME(vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt1.c0) THEN '0.10374213464292625' ELSE UPPER(vt1.c0) END DESC;
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (x'3866eb4c')))))OR(((vt1.c0)>(vt0.c1))))) ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS TEXT) WHEN TIME(vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt1.c0) THEN '0.10374213464292625' ELSE UPPER(vt1.c0) END DESC;
SELECT MAX(vt0.c0) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1))) IS TRUE)) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0)=(vt0.c1))))) DESC, NULL DESC  NULLS FIRST;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1))) IS TRUE)) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0)==(vt0.c1))))) DESC, NULL DESC  NULLS FIRST;
SELECT MIN(vt0.c0) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c1, vt0.c1)) BETWEEN ((CAST(vt0.c1 AS REAL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c1)+(vt0.c1)), ((vt0.c0)-(vt0.c1)))));
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)AND((+ (vt0.c0)))))OR((~ (vt0.c0))))  NULLS LAST LIMIT 0;
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE));
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE (((((vt0.c0 COLLATE NOCASE) IS FALSE))AND(vt0.c1))) INTERSECT SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE (((vt0.c0)<=(vt0.c1)) COLLATE BINARY);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL))!=('')));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL))>(''))) LIMIT 0x0 INTERSECT SELECT ALL * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) NOTNULL)) LIMIT 0X0;
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL))!=('')));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL))>(''))) LIMIT 0x0 INTERSECT SELECT ALL * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) NOTNULL)) LIMIT 0X0;
SELECT MIN(vt0.c0) FROM vt0 LEFT OUTER JOIN vt1 ON (~ (vt0.c0)) WHERE (((+ (vt0.c1)) IN (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CAST((- (vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT MIN(vt0.c0) FROM vt0 INNER JOIN vt1 ON (~ (vt0.c0)) WHERE (((+ (vt0.c1)) IN (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CAST((- (vt0.c0)) AS TEXT)  NULLS FIRST INTERSECT SELECT ALL MIN(vt0.c0) FROM vt0 INNER JOIN vt1 ON (~ (vt0.c0)) WHERE (vt1.c0) ORDER BY CAST((- (vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT ALL MAX(vt0.c0) FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0 IN (vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))>((((vt0.c1) IS TRUE), CAST(vt0.c0 AS TEXT)))) WHERE ((TYPEOF(DISTINCT vt0.c1) IN (UNLIKELY(DISTINCT vt0.c1)))) ORDER BY ((((vt1.c0) IS FALSE)) NOT BETWEEN (vt1.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))  NULLS LAST, SQLITE_COMPILEOPTION_GET((((x'7323', NULL)) BETWEEN ((vt1.c0, vt0.c1)) AND ((vt0.c1, vt0.c1)))) ASC  NULLS LAST;
SELECT MAX(vt0.c0) FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0 IN (vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))>((((vt0.c1) IS TRUE), CAST(vt0.c0 AS TEXT)))) WHERE ((((TYPEOF(DISTINCT vt0.c1) IN (UNLIKELY(DISTINCT vt0.c1))))AND((((vt0.c0, vt1.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((vt0.c0) ISNULL), ((vt0.c1)<(vt0.c0)))))))) ORDER BY LIKELY(DISTINCT (vt0.c1 IN (vt0.c0, vt0.c0))) LIMIT 3;
SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND((('213797321') BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND((('213797321') BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(x'd6'))) ORDER BY LOWER((vt1.c0 IN ()))  NULLS FIRST, ((((CAST(vt1.c0 AS NUMERIC))AND(x'c028dcf503')))OR(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR('sop')))OR(vt1.c0))))  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM vt1 WHERE (((((((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR('819097732')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0)<=(vt1.c0)))))AND(((vt1.c0)|(vt1.c0)))))OR(vt1.c0)))AND(((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) ORDER BY LOWER((vt1.c0 IN ()))  NULLS FIRST, ((((CAST(vt1.c0 AS NUMERIC))AND(x'c028dcf503')))OR(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR('sop')))OR(vt1.c0))))  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND((('213797321') BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND((('213797321') BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(x'd6'))) ORDER BY LOWER((vt1.c0 IN ()))  NULLS FIRST, ((((CAST(vt1.c0 AS NUMERIC))AND(x'c028dcf503')))OR(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR('sop')))OR(vt1.c0))))  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM vt1 WHERE (((((((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR('819097732')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0)<=(vt1.c0)))))AND(((vt1.c0)|(vt1.c0)))))OR(vt1.c0)))AND(((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) ORDER BY LOWER((vt1.c0 IN ()))  NULLS FIRST, ((((CAST(vt1.c0 AS NUMERIC))AND(x'c028dcf503')))OR(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR('sop')))OR(vt1.c0))))  NULLS LAST LIMIT 0X0;
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))<((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT DISTINCT * FROM vt1 WHERE ((((- (vt1.c0)))<((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) ISNULL)) BETWEEN ((~ (vt1.c0))) AND (-1154337014)));
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))<((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT DISTINCT * FROM vt1 WHERE ((((- (vt1.c0)))<((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) ISNULL)) BETWEEN ((~ (vt1.c0))) AND (-1154337014)));
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c0)) IN (((vt0.c0)IS(vt1.c0))))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c0)) IN (((vt0.c0)IS(vt1.c0))))) ORDER BY vt0.c1 DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (COALESCE(DISTINCT CAST(vt1.c0 AS TEXT), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c0)) IN (((vt0.c0)IS(vt1.c0))))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c0)) IN (((vt0.c0)IS(vt1.c0))))) ORDER BY vt0.c1 DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (COALESCE(DISTINCT CAST(vt1.c0 AS TEXT), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((vt0.c1 COLLATE RTRIM)==(x'')));
SELECT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE RTRIM)=(x''))) ORDER BY ((((vt1.c0) NOT NULL)) NOTNULL)  NULLS LAST;
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((vt0.c1 COLLATE RTRIM)==(x'')));
SELECT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE RTRIM)=(x''))) ORDER BY ((((vt1.c0) NOT NULL)) NOTNULL)  NULLS LAST;
SELECT * FROM vt1 WHERE ((((((((vt1.c0, '1847574459')) NOT BETWEEN ((vt1.c0, vt1.c0)) AND (('-99318962', vt1.c0))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.06535454100724614 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)LIKE((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) ASC;
SELECT ALL * FROM vt1 WHERE ((((((((vt1.c0, '1847574459')) NOT BETWEEN ((vt1.c0, vt1.c0)) AND (('-99318962', vt1.c0))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS INTEGER)  NULLS LAST LIMIT 0x0;
SELECT * FROM vt1 WHERE ((((((((vt1.c0, '1847574459')) NOT BETWEEN ((vt1.c0, vt1.c0)) AND (('-99318962', vt1.c0))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.06535454100724614 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)LIKE((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) ASC;
SELECT ALL * FROM vt1 WHERE ((((((((vt1.c0, '1847574459')) NOT BETWEEN ((vt1.c0, vt1.c0)) AND (('-99318962', vt1.c0))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS INTEGER)  NULLS LAST LIMIT 0x0;
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (ABS(DISTINCT vt0.c0)) AND (((vt0.c1)>(vt0.c0))))) ORDER BY ((vt0.c1 COLLATE NOCASE) ISNULL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (ABS(DISTINCT vt0.c0)) AND (((vt0.c1)>(vt0.c0))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) NOT NULL)  NULLS FIRST, (((((vt0.c0, '-1606587938')) NOT BETWEEN (('-748629760', vt0.c0)) AND ((vt0.c0, vt0.c0)))) ISNULL) DESC INTERSECT SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))>>((vt0.c1 IN (vt0.c0))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) NOT NULL)  NULLS FIRST, (((((vt0.c0, '-1606587938')) NOT BETWEEN (('-748629760', vt0.c0)) AND ((vt0.c0, vt0.c0)))) ISNULL) DESC;
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (ABS(DISTINCT vt0.c0)) AND (((vt0.c1)>(vt0.c0))))) ORDER BY ((vt0.c1 COLLATE NOCASE) ISNULL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (ABS(DISTINCT vt0.c0)) AND (((vt0.c1)>(vt0.c0))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) NOT NULL)  NULLS FIRST, (((((vt0.c0, '-1606587938')) NOT BETWEEN (('-748629760', vt0.c0)) AND ((vt0.c0, vt0.c0)))) ISNULL) DESC INTERSECT SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))>>((vt0.c1 IN (vt0.c0))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) NOT NULL)  NULLS FIRST, (((((vt0.c0, '-1606587938')) NOT BETWEEN (('-748629760', vt0.c0)) AND ((vt0.c0, vt0.c0)))) ISNULL) DESC;
SELECT * FROM vt1, vt0 WHERE (((0.4487091589095483) NOT BETWEEN (vt0.c0) AND (0.2328842808416165)) COLLATE NOCASE);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((0.4487091589095483) NOT BETWEEN (vt0.c0) AND (0.2328842808416165)) COLLATE NOCASE)AND((vt1.c0 IN ()))));
SELECT * FROM vt1, vt0 WHERE (((0.4487091589095483) NOT BETWEEN (vt0.c0) AND (0.2328842808416165)) COLLATE NOCASE);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((0.4487091589095483) NOT BETWEEN (vt0.c0) AND (0.2328842808416165)) COLLATE NOCASE)AND((vt1.c0 IN ()))));
SELECT MIN(vt0.c1) FROM vt0 CROSS JOIN vt1 ON 1917719584 WHERE (('-336141716' COLLATE NOCASE IN ((((vt0.c1, vt0.c1)) NOT BETWEEN (('d', vt0.c0)) AND ((vt0.c0, vt0.c0))), -2.05017214E9)));
SELECT MIN(vt0.c1) FROM vt0 CROSS JOIN vt1 ON 0X724e1420 WHERE (((('-336141716' COLLATE NOCASE IN ((((vt0.c1, vt0.c1)) NOT BETWEEN (('d', vt0.c0)) AND ((vt0.c0, vt0.c0))), -2.05017214E9)))AND(x'1a'))) LIMIT 2;
SELECT * FROM vt1, vt0 WHERE ((~ (((vt1.c0)&(vt1.c0)))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((~ (((vt1.c0)&(vt1.c0)))))AND(CASE WHEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN ((vt1.c0) IS FALSE) WHEN vt0.c0 COLLATE RTRIM THEN IFNULL(vt0.c0, vt0.c0) ELSE (((('')OR(vt0.c0)))AND(vt0.c1)) END))) LIMIT 0X0;
SELECT * FROM vt1, vt0 WHERE ((~ (((vt1.c0)&(vt1.c0)))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((~ (((vt1.c0)&(vt1.c0)))))AND(CASE WHEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN ((vt1.c0) IS FALSE) WHEN vt0.c0 COLLATE RTRIM THEN IFNULL(vt0.c0, vt0.c0) ELSE (((('')OR(vt0.c0)))AND(vt0.c1)) END))) LIMIT 0X0;
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY ((((vt0.c0) NOT NULL))>=(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))  NULLS FIRST, (('-715702115') NOTNULL)  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((NULL)AND(((vt1.c0 COLLATE NOCASE)>(((vt0.c1) NOT NULL)))))) ORDER BY (((((((((((vt1.c0)OR(x'a3')))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY ((((vt0.c0) NOT NULL))>=(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))  NULLS FIRST, (('-715702115') NOTNULL)  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((NULL)AND(((vt1.c0 COLLATE NOCASE)>(((vt0.c1) NOT NULL)))))) ORDER BY (((((((((((vt1.c0)OR(x'a3')))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (((vt0.c0)|(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c1  NULLS FIRST, CASE vt1.c0  WHEN ((vt0.c1) NOT NULL) THEN SQLITE_COMPILEOPTION_USED(vt1.c0) ELSE IFNULL(DISTINCT vt1.c0, '1192670238') END  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0)|(vt0.c0)) COLLATE RTRIM) ORDER BY LIKELIHOOD(((vt1.c0)*(vt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC  NULLS FIRST, ((((vt0.c0)+(vt1.c0))) BETWEEN ((NOT (vt1.c0))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST, ((((((((((((vt1.c0)<=(vt1.c0)))OR((- (vt0.c1)))))AND(vt1.c0)))AND(((vt1.c0)IS NOT(vt0.c1)))))AND(((vt0.c1) NOT NULL))))AND(((vt1.c0) NOTNULL)))  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM vt0, vt1 WHERE (CASE WHEN 0.43617846879491673 THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END ELSE (NOT (vt0.c1)) END) ORDER BY LIKELIHOOD(((vt1.c0)*(vt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC  NULLS FIRST, ((((vt0.c0)+(vt1.c0))) BETWEEN ((NOT (vt1.c0))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST, ((((((((((((vt1.c0)<=(vt1.c0)))OR((- (vt0.c1)))))AND(vt1.c0)))AND(((vt1.c0)IS NOT(vt0.c1)))))AND(((vt0.c1) NOT NULL))))AND(((vt1.c0) NOTNULL)))  NULLS LAST LIMIT 0X1;
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (((vt0.c0)|(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c1  NULLS FIRST, CASE vt1.c0  WHEN ((vt0.c1) NOT NULL) THEN SQLITE_COMPILEOPTION_USED(vt1.c0) ELSE IFNULL(DISTINCT vt1.c0, '1192670238') END  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0)|(vt0.c0)) COLLATE RTRIM) ORDER BY LIKELIHOOD(((vt1.c0)*(vt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC  NULLS FIRST, ((((vt0.c0)+(vt1.c0))) BETWEEN ((NOT (vt1.c0))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST, ((((((((((((vt1.c0)<=(vt1.c0)))OR((- (vt0.c1)))))AND(vt1.c0)))AND(((vt1.c0)IS NOT(vt0.c1)))))AND(((vt0.c1) NOT NULL))))AND(((vt1.c0) NOTNULL)))  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM vt0, vt1 WHERE (CASE WHEN 0.43617846879491673 THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END ELSE (NOT (vt0.c1)) END) ORDER BY LIKELIHOOD(((vt1.c0)*(vt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC  NULLS FIRST, ((((vt0.c0)+(vt1.c0))) BETWEEN ((NOT (vt1.c0))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST, ((((((((((((vt1.c0)<=(vt1.c0)))OR((- (vt0.c1)))))AND(vt1.c0)))AND(((vt1.c0)IS NOT(vt0.c1)))))AND(((vt0.c1) NOT NULL))))AND(((vt1.c0) NOTNULL)))  NULLS LAST LIMIT 0X1;
SELECT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)>('1086688798'))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))) AND (((((vt0.c1, NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, x'5d', '/wd},[ঊhV', vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c1)))))) DESC, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (0.8032350305199757)) ASC  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)>('1086688798')))AND(x''))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))) AND (((((vt0.c1, NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, x'5d', '/wd},[ঊhV', vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c1)))))) DESC, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (0.8032350305199757)) ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (json(TOTAL_CHANGES())) ORDER BY (((vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))) AND (((((vt0.c1, NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, x'5d', '/wd},[ঊhV', vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c1)))))) DESC, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (0.8032350305199757)) ASC  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM vt1 WHERE (0.605247429190107);
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (0.605247429190107) ORDER BY 0X16465b4e DESC, (('-1933451997')>>(vt1.c0 COLLATE NOCASE))  NULLS FIRST, ((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0)=(vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((vt1.c0)>(vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (STRFTIME(((vt1.c0)||(vt1.c0)), ((vt1.c0)+(vt1.c0)), 0.9638771134812758, (+ (vt1.c0)))) ORDER BY 0x16465b4e DESC, (('-1933451997')>>(vt1.c0 COLLATE NOCASE))  NULLS FIRST, ((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0)==(vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((vt1.c0)>(vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT MIN(vt1.c0) FROM vt0, vt1 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((0.6413452413792171))))<>(((vt1.c0)LIKE(vt0.c1))))) ORDER BY SQLITE_COMPILEOPTION_GET(((((((vt1.c0)AND(vt0.c1)))OR(0.365125139218791)))OR(NULL))) ASC;
SELECT DISTINCT MIN(vt1.c0) FROM vt0, vt1 WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((0.6413452413792171))))!=(((vt1.c0)LIKE(vt0.c1)))))AND(CASE WHEN 0.4240616046643413 THEN vt1.c0 WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) THEN LIKELY('2106553081') ELSE ((vt1.c0)<(vt0.c1)) END))) ORDER BY SQLITE_COMPILEOPTION_GET(((((((vt1.c0)AND(vt0.c1)))OR(0.365125139218791)))OR(NULL))) ASC INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt0, vt1 WHERE ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END IN (vt0.c0, vt0.c1 COLLATE BINARY))) ORDER BY SQLITE_COMPILEOPTION_GET(((((((vt1.c0)AND(vt0.c1)))OR(0.365125139218791)))OR(NULL))) ASC;
SELECT * FROM vt0 WHERE (-2.05017214E9) ORDER BY ((((('-206925103', vt0.c1)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1)))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((vt0.c1) IS FALSE), '' ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((-2.05017214E9)AND((~ (vt0.c1))))) ORDER BY ((((('-206925103', vt0.c1)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1)))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((vt0.c1) IS FALSE), '' ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (-2.05017214E9) ORDER BY ((((('-206925103', vt0.c1)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1)))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((vt0.c1) IS FALSE), '' ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((-2.05017214E9)AND((~ (vt0.c1))))) ORDER BY ((((('-206925103', vt0.c1)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1)))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((vt0.c1) IS FALSE), '' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN (vt1.c0))) ISNULL));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN (vt1.c0))) ISNULL)) LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((NULLIF(DISTINCT vt1.c0, vt0.c1))|(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) LIMIT 2;
SELECT * FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS TEXT)) BETWEEN ((NOT (vt1.c0))) AND (vt1.c0 COLLATE BINARY));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)AND(((NULL)LIKE((+ (vt1.c0))))))) ORDER BY ((CAST(vt1.c0 AS TEXT)) BETWEEN ((NOT (vt1.c0))) AND (vt1.c0 COLLATE BINARY)) INTERSECT SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL))||(CAST(vt1.c0 AS TEXT)))) ORDER BY ((CAST(vt1.c0 AS TEXT)) BETWEEN ((NOT (vt1.c0))) AND (vt1.c0 COLLATE BINARY));
SELECT * FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS TEXT)) BETWEEN ((NOT (vt1.c0))) AND (vt1.c0 COLLATE BINARY));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)AND(((NULL)LIKE((+ (vt1.c0))))))) ORDER BY ((CAST(vt1.c0 AS TEXT)) BETWEEN ((NOT (vt1.c0))) AND (vt1.c0 COLLATE BINARY)) INTERSECT SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL))||(CAST(vt1.c0 AS TEXT)))) ORDER BY ((CAST(vt1.c0 AS TEXT)) BETWEEN ((NOT (vt1.c0))) AND (vt1.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LOWER(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)) ORDER BY CAST(((vt0.c0)>>(vt0.c1)) AS INTEGER);
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((LOWER(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END))AND(0.1648422895085232))) ORDER BY CAST(((vt0.c1) IS TRUE) AS BLOB) DESC LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((vt0.c1 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, (vt0.c1 IN (vt0.c1))))) ORDER BY CAST(((vt0.c1) IS TRUE) AS BLOB) DESC LIMIT 1;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (((vt0.c1)-(vt0.c1))))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c1)))LIKE(((((vt1.c0)AND(vt0.c0)))OR(x''))))  NULLS LAST, (~ (((vt0.c0)IS(vt0.c0)))) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((~ (((vt0.c1)-(vt0.c1))))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c1)))LIKE(((((vt1.c0)AND(vt0.c0)))OR(x''))))  NULLS LAST, (~ (((vt0.c0)IS(vt0.c0)))) DESC  NULLS LAST LIMIT 2;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY CASE CAST(x'' AS REAL)  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)) THEN '' END  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY (((vt0.c0 IN ()))/(LTRIM(']}'))), ((STRFTIME(vt0.c0, vt1.c0, vt0.c0, vt0.c0)) NOT NULL) LIMIT 0x0;
SELECT * FROM vt0 CROSS JOIN vt1 ON x'' WHERE (LIKE(CAST(vt1.c0 AS TEXT), vt1.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON x'' WHERE (((LIKE(CAST(vt1.c0 AS TEXT), vt1.c0 COLLATE RTRIM))AND(((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR('655700416')))OR(vt0.c1))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 0.6073560579487475 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END) AND (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))))) LIMIT 1 INTERSECT SELECT * FROM vt0 CROSS JOIN vt1 ON x'' WHERE (((((vt0.c0 IN ()), vt0.c0 COLLATE BINARY, CAST('0.09482646582543619' AS BLOB)))<>((((vt1.c0) NOTNULL), vt0.c0, (NOT (vt0.c0)))))) LIMIT 0X1;
SELECT * FROM vt0 CROSS JOIN vt1 ON x'' WHERE (LIKE(CAST(vt1.c0 AS TEXT), vt1.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON x'' WHERE (((LIKE(CAST(vt1.c0 AS TEXT), vt1.c0 COLLATE RTRIM))AND(((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR('655700416')))OR(vt0.c1))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 0.6073560579487475 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END) AND (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))))) LIMIT 1 INTERSECT SELECT * FROM vt0 CROSS JOIN vt1 ON x'' WHERE (((((vt0.c0 IN ()), vt0.c0 COLLATE BINARY, CAST('0.09482646582543619' AS BLOB)))<>((((vt1.c0) NOTNULL), vt0.c0, (NOT (vt0.c0)))))) LIMIT 0X1;
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE ((((x'')) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) AND ((((vt1.c0) NOT NULL))))) ORDER BY ((((((CAST(x'62' AS TEXT))OR(LOWER(DISTINCT vt1.c0))))AND((((vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0))))))AND(((vt1.c0) IS TRUE))), (vt1.c0 IN (NULL)) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE ((((((x'')) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) AND ((((vt1.c0) NOT NULL)))))AND(vt1.c0))) ORDER BY ((((((CAST(x'62' AS TEXT))OR(LOWER(DISTINCT vt1.c0))))AND((((vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0))))))AND(((vt1.c0) IS TRUE))), (vt1.c0 IN (NULL)) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (0.18806587254177187) ORDER BY ((((((CAST(x'62' AS TEXT))OR(LOWER(DISTINCT vt1.c0))))AND((((vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0))))))AND(((vt1.c0) IS TRUE))), (vt1.c0 IN (NULL)) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((x'')) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) AND ((((vt1.c0) NOT NULL))))) ORDER BY ((((((CAST(x'62' AS TEXT))OR(LOWER(DISTINCT vt1.c0))))AND((((vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0))))))AND(((vt1.c0) IS TRUE))), (vt1.c0 IN (NULL)) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE ((((((x'')) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) AND ((((vt1.c0) NOT NULL)))))AND(vt1.c0))) ORDER BY ((((((CAST(x'62' AS TEXT))OR(LOWER(DISTINCT vt1.c0))))AND((((vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0))))))AND(((vt1.c0) IS TRUE))), (vt1.c0 IN (NULL)) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (0.18806587254177187) ORDER BY ((((((CAST(x'62' AS TEXT))OR(LOWER(DISTINCT vt1.c0))))AND((((vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0))))))AND(((vt1.c0) IS TRUE))), (vt1.c0 IN (NULL)) DESC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY (((((vt1.c0))>=((vt0.c0))))&('434657884')) DESC, vt0.c0 DESC;
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)AND(vt1.c0))) ORDER BY (((((vt1.c0))>=((vt0.c0))))&('434657884')) DESC, vt0.c0 DESC INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ((+ (vt0.c1 COLLATE BINARY))) ORDER BY (((((vt1.c0))>=((vt0.c0))))&('434657884')) DESC, vt0.c0 DESC;
SELECT * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY (((((vt1.c0))>=((vt0.c0))))&('434657884')) DESC, vt0.c0 DESC;
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)AND(vt1.c0))) ORDER BY (((((vt1.c0))>=((vt0.c0))))&('434657884')) DESC, vt0.c0 DESC INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ((+ (vt0.c1 COLLATE BINARY))) ORDER BY (((((vt1.c0))>=((vt0.c0))))&('434657884')) DESC, vt0.c0 DESC;
SELECT ALL * FROM vt0, vt1 WHERE (CASE NULL  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY);
SELECT * FROM vt0, vt1 WHERE (CASE NULL  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY) ORDER BY CASE (~ (vt0.c1))  WHEN ((x'4aeb')|(vt0.c0)) THEN json_insert(vt1.c0, '-1096545910', vt0.c0, vt1.c0) WHEN (0.5647838794786197 IN (vt0.c1)) THEN (~ (vt1.c0)) END DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0, vt1 WHERE (CASE NULL  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY);
SELECT * FROM vt0, vt1 WHERE (CASE NULL  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY) ORDER BY CASE (~ (vt0.c1))  WHEN ((x'4aeb')|(vt0.c0)) THEN json_insert(vt1.c0, '-1096545910', vt0.c0, vt1.c0) WHEN (0.5647838794786197 IN (vt0.c1)) THEN (~ (vt1.c0)) END DESC  NULLS LAST LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((1110172621)AND(((vt1.c0)<=(vt1.c0)))))OR(vt1.c0 COLLATE NOCASE))) ORDER BY (~ ((((vt1.c0, vt1.c0, 0.19905626026408818, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0, vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((0X422be3cd)AND(((vt1.c0)<=(vt1.c0)))))OR(vt1.c0 COLLATE NOCASE)))AND(vt1.c0))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))%(CAST(vt1.c0 AS REAL))) DESC, ((((((((((LIKELY(vt1.c0))OR(((vt1.c0) NOT NULL))))AND(((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))AND(vt1.c0)))))OR(((('t4%	먃f')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((NOT (vt1.c0)))))AND((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST, ((((((vt1.c0, vt1.c0))=((vt1.c0, 0X6868941f))), UNICODE(vt1.c0)))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, vt1.c0 COLLATE BINARY))) ASC  NULLS LAST, (((((vt1.c0, vt1.c0))=((vt1.c0, 0.32854067148103505)))) IS TRUE) DESC LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))%(CAST(vt1.c0 AS REAL))) DESC, ((((((((((LIKELY(vt1.c0))OR(((vt1.c0) NOT NULL))))AND(((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))AND(vt1.c0)))))OR(((('t4%	먃f')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((NOT (vt1.c0)))))AND((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST, ((((((vt1.c0, vt1.c0))=((vt1.c0, 0x6868941f))), UNICODE(vt1.c0)))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, vt1.c0 COLLATE BINARY))) ASC  NULLS LAST, (((((vt1.c0, vt1.c0))=((vt1.c0, 0.32854067148103505)))) IS TRUE) DESC LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1) IS TRUE)) BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN 0.241127433855164 THEN vt1.c0 END))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((CAST(vt0.c1 AS NUMERIC)))), (((+ (vt0.c1)))IS NOT(vt1.c0 COLLATE RTRIM));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1) IS TRUE)) BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN 0.241127433855164 THEN vt1.c0 END))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((CAST(vt0.c1 AS NUMERIC)))), (((+ (vt0.c1)))IS NOT(vt1.c0 COLLATE RTRIM)) INTERSECT SELECT * FROM vt1, vt0 WHERE ((~ ((x'fd' IN ())))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((CAST(vt0.c1 AS NUMERIC)))), (((+ (vt0.c1)))IS NOT(vt1.c0 COLLATE RTRIM));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1) IS TRUE)) BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN 0.241127433855164 THEN vt1.c0 END))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((CAST(vt0.c1 AS NUMERIC)))), (((+ (vt0.c1)))IS NOT(vt1.c0 COLLATE RTRIM));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1) IS TRUE)) BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN 0.241127433855164 THEN vt1.c0 END))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((CAST(vt0.c1 AS NUMERIC)))), (((+ (vt0.c1)))IS NOT(vt1.c0 COLLATE RTRIM)) INTERSECT SELECT * FROM vt1, vt0 WHERE ((~ ((x'fd' IN ())))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((CAST(vt0.c1 AS NUMERIC)))), (((+ (vt0.c1)))IS NOT(vt1.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1)GLOB(vt0.c1)) IN (((vt1.c0) IS TRUE)))) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN (+ (vt0.c1)) ELSE (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c1))) END ASC  NULLS LAST, CASE vt1.c0  WHEN 0X5330e53d THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c1)GLOB(vt0.c1)) IN (((vt1.c0) IS TRUE))))AND(GLOB(((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt1.c0, vt0.c1))))))) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN (+ (vt0.c1)) ELSE (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c1))) END ASC  NULLS LAST, CASE vt1.c0  WHEN 0X5330e53d THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM  NULLS LAST LIMIT 0X1 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN (+ (vt0.c1)) ELSE (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c1))) END ASC  NULLS LAST, CASE vt1.c0  WHEN 1395713341 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1)GLOB(vt0.c1)) IN (((vt1.c0) IS TRUE)))) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN (+ (vt0.c1)) ELSE (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c1))) END ASC  NULLS LAST, CASE vt1.c0  WHEN 0X5330e53d THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c1)GLOB(vt0.c1)) IN (((vt1.c0) IS TRUE))))AND(GLOB(((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt1.c0, vt0.c1))))))) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN (+ (vt0.c1)) ELSE (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c1))) END ASC  NULLS LAST, CASE vt1.c0  WHEN 0X5330e53d THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM  NULLS LAST LIMIT 0X1 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN (+ (vt0.c1)) ELSE (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c1))) END ASC  NULLS LAST, CASE vt1.c0  WHEN 1395713341 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM  NULLS LAST LIMIT 0X1;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(NULL)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY (~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS LAST, x'88' DESC;
SELECT MIN(vt0.c0) FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(NULL)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY (~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS LAST, x'88' DESC;
SELECT MIN(vt0.c0) FROM vt0 WHERE (CASE ((((((((x'1a')OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN CAST(vt0.c1 AS TEXT) WHEN ((vt0.c1)<=(vt0.c0)) THEN x'53' WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE RTRIM END);
SELECT MIN(vt0.c0) FROM vt0 WHERE (((CASE ((((((((x'1a')OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN CAST(vt0.c1 AS TEXT) WHEN ((vt0.c1)<(vt0.c0)) THEN x'53' WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE RTRIM END)AND(((((vt0.c0, vt0.c1, vt0.c0))<((vt0.c0, vt0.c1, 'sZ_'))) IN (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))))))) LIMIT 0 INTERSECT SELECT MIN(vt0.c0) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) LIMIT 0x0;
SELECT * FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ORDER BY (((vt0.c1)IS NOT(vt0.c0)) IN ()) DESC, ((((vt0.c0)LIKE(vt0.c1))) IS FALSE) DESC;
SELECT * FROM vt0 WHERE ((((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))AND(((((((((((vt0.c0) NOTNULL))AND(CAST(vt0.c1 AS REAL))))AND(vt0.c0)))OR((vt0.c0 IN ()))))AND((((vt0.c1))>((vt0.c1)))))))) ORDER BY (((vt0.c1)IS NOT(vt0.c0)) IN ()) DESC, ((((vt0.c0)LIKE(vt0.c1))) IS FALSE) DESC;
SELECT * FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ORDER BY (((vt0.c1)IS NOT(vt0.c0)) IN ()) DESC, ((((vt0.c0)LIKE(vt0.c1))) IS FALSE) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt0.c1))) ISNULL));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt0.c1))) ISNULL)) ORDER BY ((((vt0.c0)IS(vt1.c0)))IS NOT(((((((((x'f4a0')OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt1.c0))))  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1) IS FALSE))AND(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((1.41268396E9)<(vt1.c0))))) ORDER BY ((((vt0.c0)IS(vt1.c0)))IS NOT(((((((((x'f4a0')OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt1.c0))))  NULLS LAST LIMIT 2;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, vt0.c0)) BETWEEN (UNLIKELY(vt0.c1)) AND (NULL)));
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((((LIKELIHOOD(DISTINCT vt0.c0, vt0.c0)) BETWEEN (UNLIKELY(vt0.c1)) AND (NULL)))AND(((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.6018460411226147 ELSE vt0.c1 END)OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(LIKELIHOOD(vt0.c0, vt0.c0)))))) LIMIT 2;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((((((((vt0.c0)>>(vt0.c0)))AND(TYPEOF(DISTINCT NULL))))OR(((vt0.c0) IS TRUE))))OR(LIKELY(DISTINCT vt0.c1))));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((((((((((vt0.c0)>>(vt0.c0)))AND(TYPEOF(DISTINCT NULL))))OR(((vt0.c0) IS TRUE))))OR(LIKELY(DISTINCT vt0.c1))))AND(((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((((x'ae1c37', vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1)) AND (('', 0xffffffffbea8ecc9, vt0.c0, vt0.c1, vt0.c1, vt0.c0)))) AND (vt0.c1 COLLATE RTRIM))))) LIMIT 0x2;
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY CASE WHEN ((vt1.c0)|(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END, vt1.c0 COLLATE NOCASE COLLATE NOCASE;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((NULL)AND(CASE WHEN json_insert(vt1.c0, vt1.c0, vt1.c0) THEN ((vt1.c0)>>(vt1.c0)) ELSE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END))) ORDER BY CASE WHEN ((vt1.c0)|(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END, vt1.c0 COLLATE NOCASE COLLATE NOCASE LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS TEXT)) ORDER BY CASE WHEN ((vt1.c0)|(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END, vt1.c0 COLLATE NOCASE COLLATE NOCASE LIMIT 0X2;
SELECT MAX(vt0.c1) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS REAL) WHERE (vt0.c1) ORDER BY CAST((vt0.c1 IN (vt0.c0, vt1.c0, vt0.c1)) AS REAL) ASC  NULLS LAST, '4F';
SELECT DISTINCT MAX(vt0.c1) FROM vt1 INNER JOIN vt0 ON CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS REAL) WHERE (((vt0.c1)AND(CAST(CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)))) ORDER BY CAST(0xffffffffa03d69de AS NUMERIC), ABS(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) ASC INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt1 INNER JOIN vt0 ON CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS REAL) WHERE (((vt0.c1) BETWEEN ('k') AND (vt1.c0 COLLATE BINARY))) ORDER BY CAST(0xffffffffa03d69de AS NUMERIC), ABS(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) ASC;
SELECT MIN(vt0.c0) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)IS(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c1)-(vt0.c1)), vt0.c1, CAST(vt0.c1 AS REAL))) AND (((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))), json_array(vt0.c1, vt0.c1, vt0.c1), ABS(DISTINCT vt0.c1)))), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN (((vt0.c0)<<(vt0.c1)), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))) ASC  NULLS FIRST, (((vt0.c1, vt0.c0)) NOT BETWEEN ((((NULL) BETWEEN (vt0.c0) AND (vt0.c1)), IFNULL(vt0.c0, vt0.c0))) AND (((vt0.c1 IN ()), ((vt0.c0) ISNULL)))) ASC  NULLS LAST, CASE ((vt0.c0) NOTNULL)  WHEN (vt0.c1 IN (vt0.c1)) THEN ((vt0.c0)&(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0) ISNULL) END  NULLS LAST, CAST((((vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0))) AS REAL) ASC  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((((vt0.c1 COLLATE RTRIM)IS(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(CAST(((vt0.c0)*(vt0.c1)) AS REAL)))) ORDER BY (((~ (vt0.c0)))>(vt0.c1))  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (NULL COLLATE NOCASE);
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((NULL COLLATE NOCASE)AND(CASE vt0.c1 COLLATE NOCASE  WHEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END THEN TYPEOF(DISTINCT vt0.c0) WHEN 0.615831041845181 THEN ((vt0.c1)*(vt0.c0)) END))) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (+ (vt0.c0)) WHEN (vt0.c1 IN ()) THEN ((vt1.c0)-(vt1.c0)) WHEN ((vt0.c1) NOT BETWEEN ('L)䇝') AND (vt0.c0)) THEN (NOT (vt1.c0)) ELSE (vt0.c0 IN ()) END DESC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (+ (vt0.c0)) WHEN (vt0.c1 IN ()) THEN ((vt1.c0)-(vt1.c0)) WHEN ((vt0.c1) NOT BETWEEN ('L)䇝') AND (vt0.c0)) THEN (NOT (vt1.c0)) ELSE (vt0.c0 IN ()) END DESC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (NULL COLLATE NOCASE);
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((NULL COLLATE NOCASE)AND(CASE vt0.c1 COLLATE NOCASE  WHEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END THEN TYPEOF(DISTINCT vt0.c0) WHEN 0.615831041845181 THEN ((vt0.c1)*(vt0.c0)) END))) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (+ (vt0.c0)) WHEN (vt0.c1 IN ()) THEN ((vt1.c0)-(vt1.c0)) WHEN ((vt0.c1) NOT BETWEEN ('L)䇝') AND (vt0.c0)) THEN (NOT (vt1.c0)) ELSE (vt0.c0 IN ()) END DESC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (+ (vt0.c0)) WHEN (vt0.c1 IN ()) THEN ((vt1.c0)-(vt1.c0)) WHEN ((vt0.c1) NOT BETWEEN ('L)䇝') AND (vt0.c0)) THEN (NOT (vt1.c0)) ELSE (vt0.c0 IN ()) END DESC  NULLS LAST LIMIT 0X1;
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (((0.17108504728980123)||(((vt1.c0)||(vt1.c0)))));
SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE (((0.17108504728980123)||(((vt1.c0)||(vt1.c0))))) LIMIT 0x0;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(x'9dec78f5'))) IS TRUE)) ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER)  NULLS LAST, SQLITE_COMPILEOPTION_USED(vt0.c1) COLLATE NOCASE ASC  NULLS FIRST, ((vt0.c1 COLLATE RTRIM)<>(((vt0.c0)*(vt0.c0))))  NULLS FIRST;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(x'9dec78f5'))) IS TRUE)) ORDER BY CASE WHEN (((vt0.c1, x'6b', vt0.c1))>((vt0.c0, vt0.c0, vt0.c0))) THEN '0' END, (- (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC;
SELECT * FROM vt1, vt0 WHERE (((CASE x'1dc2'  WHEN vt0.c1 THEN vt0.c0 END) NOTNULL)) ORDER BY ((vt0.c1 COLLATE BINARY) NOT NULL)  NULLS LAST, ((vt1.c0) NOTNULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((CASE x'1dc2'  WHEN vt0.c1 THEN vt0.c0 END) NOTNULL))AND(x'b1'))) ORDER BY ((vt0.c1 COLLATE BINARY) NOT NULL)  NULLS LAST, ((vt1.c0) NOTNULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((CASE x'1dc2'  WHEN vt0.c1 THEN vt0.c0 END) NOTNULL)) ORDER BY ((vt0.c1 COLLATE BINARY) NOT NULL)  NULLS LAST, ((vt1.c0) NOTNULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((CASE x'1dc2'  WHEN vt0.c1 THEN vt0.c0 END) NOTNULL))AND(x'b1'))) ORDER BY ((vt0.c1 COLLATE BINARY) NOT NULL)  NULLS LAST, ((vt1.c0) NOTNULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c1) NOTNULL) AS REAL) WHERE (((vt1.c0 COLLATE BINARY)=((('1422155737') BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c1) NOTNULL) AS REAL) WHERE (((vt1.c0 COLLATE BINARY)==((('1422155737') BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY CAST((((NULL, vt1.c0, NULL, x'e9')) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1, vt1.c0)) AND ((vt0.c1, vt1.c0, vt1.c0, vt0.c0))) AS NUMERIC) INTERSECT SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c1) NOTNULL) AS REAL) WHERE ((((vt0.c1)) NOT BETWEEN ((0.5220916976589115)) AND ((((0.09482646582543619) BETWEEN (vt1.c0) AND (vt0.c1)))))) ORDER BY CAST((((NULL, vt1.c0, NULL, x'e9')) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1, vt1.c0)) AND ((vt0.c1, vt1.c0, vt1.c0, vt0.c0))) AS NUMERIC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((x'a0d1')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS NUMERIC), (((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))) AND ((((vt1.c0)<>(vt1.c0)), ((NULL)GLOB(vt1.c0)), vt1.c0 COLLATE BINARY)))) ORDER BY (((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (((vt1.c0)>(vt1.c0))) AND ((- (vt1.c0)))) DESC, ((((vt1.c0)%(vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((vt1.c0 IN (vt1.c0))))  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((x'a0d1')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS NUMERIC), (((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))) AND ((((vt1.c0)<>(vt1.c0)), ((NULL)GLOB(vt1.c0)), vt1.c0 COLLATE BINARY)))) ORDER BY (((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (((vt1.c0)>(vt1.c0))) AND ((- (vt1.c0)))) DESC, ((((vt1.c0)%(vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((vt1.c0 IN (vt1.c0))))  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)/(((((((vt1.c0)OR('0.6235065713349728')))OR(vt1.c0)))OR(vt1.c0))))) ORDER BY (((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (((vt1.c0)>(vt1.c0))) AND ((- (vt1.c0)))) DESC, ((((vt1.c0)%(vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((vt1.c0 IN (vt1.c0))))  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((x'a0d1')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS NUMERIC), (((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))) AND ((((vt1.c0)<>(vt1.c0)), ((NULL)GLOB(vt1.c0)), vt1.c0 COLLATE BINARY)))) ORDER BY (((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (((vt1.c0)>(vt1.c0))) AND ((- (vt1.c0)))) DESC, ((((vt1.c0)%(vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((vt1.c0 IN (vt1.c0))))  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((x'a0d1')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS NUMERIC), (((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))) AND ((((vt1.c0)<>(vt1.c0)), ((NULL)GLOB(vt1.c0)), vt1.c0 COLLATE BINARY)))) ORDER BY (((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (((vt1.c0)>(vt1.c0))) AND ((- (vt1.c0)))) DESC, ((((vt1.c0)%(vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((vt1.c0 IN (vt1.c0))))  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)/(((((((vt1.c0)OR('0.6235065713349728')))OR(vt1.c0)))OR(vt1.c0))))) ORDER BY (((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (((vt1.c0)>(vt1.c0))) AND ((- (vt1.c0)))) DESC, ((((vt1.c0)%(vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((vt1.c0 IN (vt1.c0))))  NULLS LAST LIMIT 1;
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0))=((vt0.c1, vt0.c1, vt0.c1))))IS(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c1, vt0.c1, vt0.c0))=((vt0.c1, vt0.c1, vt0.c1))))IS(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), '0')))) LIMIT 0X1;
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0))=((vt0.c1, vt0.c1, vt0.c1))))IS(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c1, vt0.c1, vt0.c0))=((vt0.c1, vt0.c1, vt0.c1))))IS(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), '0')))) LIMIT 0X1;
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT DISTINCT MIN(vt0.c0) FROM vt1, vt0 WHERE (vt0.c1 COLLATE RTRIM) INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt1 NOT INDEXED, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS REAL));
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((~ (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(vt1.c0 COLLATE NOCASE)));
SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((~ (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(vt1.c0 COLLATE NOCASE))) ORDER BY (- (((vt1.c0) IS FALSE)))  NULLS LAST, ((vt1.c0 COLLATE RTRIM) NOTNULL) DESC, ((((vt1.c0, vt1.c0))>((vt1.c0, vt1.c0))) IN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOT NULL))), CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (-9.47041331E8)) AS INTEGER)  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((~ (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(vt1.c0 COLLATE NOCASE)));
SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((~ (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(vt1.c0 COLLATE NOCASE))) ORDER BY (- (((vt1.c0) IS FALSE)))  NULLS LAST, ((vt1.c0 COLLATE RTRIM) NOTNULL) DESC, ((((vt1.c0, vt1.c0))>((vt1.c0, vt1.c0))) IN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOT NULL))), CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (-9.47041331E8)) AS INTEGER)  NULLS FIRST LIMIT 0x1;
SELECT * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c0  NULLS LAST, ((vt0.c1) BETWEEN (vt0.c0) AND (LIKE(vt0.c1, vt0.c0, 'R'))), x''  NULLS FIRST, (((vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) NOT NULL), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((vt0.c0, (+ (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS REAL)))) ORDER BY (NOT (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))) ASC  NULLS FIRST, TRIM(((vt0.c0)OR(vt0.c0)), (~ (vt0.c0))), (((vt0.c0 IN (vt0.c0)))>(vt0.c0 COLLATE BINARY))  NULLS LAST LIMIT 0X3 INTERSECT SELECT * FROM vt0 WHERE ((- (x''))) ORDER BY (NOT (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))) ASC  NULLS FIRST, TRIM(((vt0.c0)OR(vt0.c0)), (~ (vt0.c0))), (((vt0.c0 IN (vt0.c0)))>(vt0.c0 COLLATE BINARY))  NULLS LAST LIMIT 3;
SELECT * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c0  NULLS LAST, ((vt0.c1) BETWEEN (vt0.c0) AND (LIKE(vt0.c1, vt0.c0, 'R'))), x''  NULLS FIRST, (((vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) NOT NULL), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((vt0.c0, (+ (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS REAL)))) ORDER BY (NOT (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))) ASC  NULLS FIRST, TRIM(((vt0.c0)OR(vt0.c0)), (~ (vt0.c0))), (((vt0.c0 IN (vt0.c0)))>(vt0.c0 COLLATE BINARY))  NULLS LAST LIMIT 0X3 INTERSECT SELECT * FROM vt0 WHERE ((- (x''))) ORDER BY (NOT (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))) ASC  NULLS FIRST, TRIM(((vt0.c0)OR(vt0.c0)), (~ (vt0.c0))), (((vt0.c0 IN (vt0.c0)))>(vt0.c0 COLLATE BINARY))  NULLS LAST LIMIT 3;
SELECT MAX(vt0.c0) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1 IN (vt0.c0, vt0.c0))))=((x'b6')))  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE NULL END) BETWEEN (CASE WHEN vt0.c1 THEN 'n' ELSE vt0.c1 END) AND (NULLIF(vt0.c1, 0Xffffffffd92ea710))) ASC  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()) ASC;
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1 IN (vt0.c0, vt0.c0))))==((x'b6')))  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE NULL END) BETWEEN (CASE WHEN vt0.c1 THEN 'n' ELSE vt0.c1 END) AND (NULLIF(vt0.c1, 0xffffffffd92ea710))) ASC  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (LIKELY(vt0.c1)))) ORDER BY (((((vt0.c1)>(NULL)), ((vt1.c0) BETWEEN (vt1.c0) AND (0.799298166433025)), CAST(vt1.c0 AS INTEGER)))>((x'', IFNULL(DISTINCT vt0.c1, vt1.c0), (vt0.c1 IN (vt0.c1, vt1.c0)))))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((+ (LIKELY(vt0.c1)))) ORDER BY NULL  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (0.8795648975519511) ORDER BY NULL  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))<>(json_array(vt0.c1, vt0.c0, '-559526234', vt0.c1)))  NULLS FIRST, CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND ((vt0.c0 IN ())))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))!=(json_array(vt0.c1, vt0.c0, '-559526234', vt0.c1)))  NULLS FIRST, CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))<>(json_array(vt0.c1, vt0.c0, '-559526234', vt0.c1)))  NULLS FIRST, CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND ((vt0.c0 IN ())))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))!=(json_array(vt0.c1, vt0.c0, '-559526234', vt0.c1)))  NULLS FIRST, CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY) ORDER BY (((((((((((('a[')OR(vt0.c1)))AND('KwdlT')))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND((((vt0.c1))<>((vt0.c1))))) ASC;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)) COLLATE BINARY)AND((((((vt0.c1)&(vt0.c0)), (vt0.c1 IN (vt0.c1, vt0.c1)), ((vt0.c0) IS FALSE)))==((vt0.c0, LTRIM(vt0.c0), CAST(vt0.c0 AS REAL))))))) ORDER BY (((((((((((('a[')OR(vt0.c1)))AND('KwdlT')))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND((((vt0.c1))<>((vt0.c1))))) ASC LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS BLOB) IN ())) ORDER BY (((((((((((('a[')OR(vt0.c1)))AND('KwdlT')))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND((((vt0.c1))<>((vt0.c1))))) ASC LIMIT 0X1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY (vt1.c0 IN (UNLIKELY(vt1.c0))) DESC, NULL  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE) ISNULL))AND(0x7f682857))) ORDER BY ((NULL) BETWEEN (x'623f') AND (((vt1.c0)LIKE(vt1.c0)))) LIMIT 0 INTERSECT SELECT ALL * FROM vt1 WHERE (((TYPEOF(vt1.c0))>>(vt1.c0))) ORDER BY ((NULL) BETWEEN (x'623f') AND (((vt1.c0)LIKE(vt1.c0)))) LIMIT 0X0;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY (vt1.c0 IN (UNLIKELY(vt1.c0))) DESC, NULL  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE) ISNULL))AND(0x7f682857))) ORDER BY ((NULL) BETWEEN (x'623f') AND (((vt1.c0)LIKE(vt1.c0)))) LIMIT 0 INTERSECT SELECT ALL * FROM vt1 WHERE (((TYPEOF(vt1.c0))>>(vt1.c0))) ORDER BY ((NULL) BETWEEN (x'623f') AND (((vt1.c0)LIKE(vt1.c0)))) LIMIT 0X0;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) NOT NULL));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((((((vt0.c0)||(vt0.c0))) NOT NULL))AND(0.6204285349340914))) INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((((vt0.c1)==(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.c0)LIKE(vt0.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)<=(((vt1.c0)LIKE(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)==(((vt1.c0)LIKE(vt1.c0))))) INTERSECT SELECT COUNT(*) FROM vt1 WHERE (((((((-1.420023627E9)OR(vt1.c0)))AND(vt1.c0)))IS(CAST(vt1.c0 AS REAL))));
SELECT * FROM vt1, vt0 WHERE (((x'')%((- (vt0.c1)))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((x'')%((- (vt0.c1)))))AND(json_type(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))))) LIMIT 0X0;
SELECT * FROM vt1, vt0 WHERE (((x'')%((- (vt0.c1)))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((x'')%((- (vt0.c1)))))AND(json_type(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))))) LIMIT 0X0;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)<>(vt0.c1)) THEN (~ (vt0.c1)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN x'' THEN CAST(vt1.c0 AS INTEGER) WHEN (((vt1.c0, vt0.c0, '-0.0')) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND (('1107752604', vt1.c0, vt0.c0))) THEN (NOT (vt1.c0)) WHEN COALESCE(vt1.c0, vt0.c0) THEN CAST(vt1.c0 AS INTEGER) ELSE CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN 0xffffffffb5070f4f THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END);
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)>(vt0.c1)) THEN (~ (vt0.c1)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN x'' THEN CAST(vt1.c0 AS INTEGER) WHEN (((vt1.c0, vt0.c0, '-0.0')) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND (('1107752604', vt1.c0, vt0.c0))) THEN (NOT (vt1.c0)) WHEN COALESCE(vt1.c0, vt0.c0) THEN CAST(vt1.c0 AS INTEGER) ELSE CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN 0Xffffffffb5070f4f THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY (((x'')) NOT BETWEEN (((((-1700310130, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))))) AND ((((vt0.c0) IS TRUE))))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (load_extension(((vt0.c1)!=(vt1.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (((x'')) NOT BETWEEN (((((0xffffffff9aa7538e, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))))) AND ((((vt0.c0) IS TRUE))))  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)<>(vt0.c1)) THEN (~ (vt0.c1)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN x'' THEN CAST(vt1.c0 AS INTEGER) WHEN (((vt1.c0, vt0.c0, '-0.0')) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND (('1107752604', vt1.c0, vt0.c0))) THEN (NOT (vt1.c0)) WHEN COALESCE(vt1.c0, vt0.c0) THEN CAST(vt1.c0 AS INTEGER) ELSE CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN 0xffffffffb5070f4f THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END);
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)>(vt0.c1)) THEN (~ (vt0.c1)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN x'' THEN CAST(vt1.c0 AS INTEGER) WHEN (((vt1.c0, vt0.c0, '-0.0')) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND (('1107752604', vt1.c0, vt0.c0))) THEN (NOT (vt1.c0)) WHEN COALESCE(vt1.c0, vt0.c0) THEN CAST(vt1.c0 AS INTEGER) ELSE CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN 0Xffffffffb5070f4f THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY (((x'')) NOT BETWEEN (((((-1700310130, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))))) AND ((((vt0.c0) IS TRUE))))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (load_extension(((vt0.c1)!=(vt1.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (((x'')) NOT BETWEEN (((((0xffffffff9aa7538e, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))))) AND ((((vt0.c0) IS TRUE))))  NULLS FIRST LIMIT 0X0;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((~ ((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('}3m1~ld'))))));
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE ((~ ((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('}3m1~ld')))))) LIMIT 0X0;
SELECT MAX(vt0.c0) FROM vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS REAL));
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS REAL)) INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (vt0.c1);
SELECT * FROM vt0, vt1 WHERE ((((-1464712341, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOTNULL), x'4299', vt0.c1)) AND (('1031127186', (('1519580750')GLOB(vt1.c0)), vt0.c1)))) ORDER BY ((((vt1.c0)IS NOT(vt0.c1))) IS TRUE) ASC  NULLS LAST, ((vt1.c0) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((-1464712341, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOTNULL), x'4299', vt0.c1)) AND (('1031127186', (('1519580750')GLOB(vt1.c0)), vt0.c1))))AND(NULLIF(vt0.c0 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (0.34735997997638857) AND (vt1.c0)))))) ORDER BY ((((vt1.c0)IS NOT(vt0.c1))) IS TRUE) ASC  NULLS LAST, ((vt1.c0) NOT NULL)  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0, vt1 WHERE ((((-1464712341, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOTNULL), x'4299', vt0.c1)) AND (('1031127186', (('1519580750')GLOB(vt1.c0)), vt0.c1)))) ORDER BY ((((vt1.c0)IS NOT(vt0.c1))) IS TRUE) ASC  NULLS LAST, ((vt1.c0) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((-1464712341, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOTNULL), x'4299', vt0.c1)) AND (('1031127186', (('1519580750')GLOB(vt1.c0)), vt0.c1))))AND(NULLIF(vt0.c0 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (0.34735997997638857) AND (vt1.c0)))))) ORDER BY ((((vt1.c0)IS NOT(vt0.c1))) IS TRUE) ASC  NULLS LAST, ((vt1.c0) NOT NULL)  NULLS FIRST LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0))!=((0.7270635438303892))) IN ())) ORDER BY CASE ((vt1.c0)*(vt0.c1))  WHEN ((vt0.c0)||(vt0.c1)) THEN CAST(vt0.c0 AS REAL) WHEN (vt0.c0 IN (vt0.c1)) THEN '-1307813814' END ASC;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0))>((0.7270635438303892))) IN ()))AND(((((((((((vt1.c0)AND('-41416736')))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))) NOT NULL)))) ORDER BY CASE ((vt1.c0)*(vt0.c1))  WHEN ((vt0.c0)||(vt0.c1)) THEN CAST(vt0.c0 AS REAL) WHEN (vt0.c0 IN (vt0.c1)) THEN '-1307813814' END ASC LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((((((x'', vt0.c0))<>((vt0.c0, 0.9793635072761183)))) IS TRUE)) ORDER BY CASE ((vt1.c0)*(vt0.c1))  WHEN ((vt0.c0)||(vt0.c1)) THEN CAST(vt0.c0 AS REAL) WHEN (vt0.c0 IN (vt0.c1)) THEN '-1307813814' END ASC LIMIT 0x1;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c1 COLLATE BINARY IN ()) ASC, CASE ((vt0.c0) ISNULL)  WHEN vt0.c0 THEN vt0.c1 COLLATE RTRIM WHEN (vt0.c1 IN (vt0.c1)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)) ELSE (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, x'3d')) AND ((vt0.c1, NULL, vt0.c0))) END, (- (((vt0.c0)/(vt0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)AND(CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) NOTNULL) END))) ORDER BY (vt0.c1 COLLATE BINARY IN ()) ASC, CASE ((vt0.c0) ISNULL)  WHEN vt0.c0 THEN vt0.c1 COLLATE RTRIM WHEN (vt0.c1 IN (vt0.c1)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)) ELSE (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, x'3d')) AND ((vt0.c1, NULL, vt0.c0))) END, (- (((vt0.c0)/(vt0.c1))))  NULLS LAST LIMIT 0x0;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c1 COLLATE BINARY IN ()) ASC, CASE ((vt0.c0) ISNULL)  WHEN vt0.c0 THEN vt0.c1 COLLATE RTRIM WHEN (vt0.c1 IN (vt0.c1)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)) ELSE (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, x'3d')) AND ((vt0.c1, NULL, vt0.c0))) END, (- (((vt0.c0)/(vt0.c1))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((((((((((vt0.c1, vt0.c1, '', vt0.c1))>((vt0.c1, vt0.c1, vt0.c0, vt0.c0))))OR((((((('-1164965198')OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))))OR((- (vt0.c0)))))AND(((vt0.c0)OR(vt0.c1))))) ORDER BY 'c';
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((((vt0.c1, vt0.c1, '', vt0.c1))>((vt0.c1, vt0.c1, vt0.c0, vt0.c0))))OR((((((('-1164965198')OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))))OR((- (vt0.c0)))))AND(((vt0.c0)OR(vt0.c1))))) ORDER BY (- ((- (vt1.c0)))), ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))=((- (vt1.c0)))), (((x'5f', ((vt1.c0)GLOB(vt1.c0)), ((vt0.c1)OR(vt0.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), vt1.c0 COLLATE BINARY, NULL))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt1.c0))>((vt1.c0))))IS NOT(((x'e652')GLOB(vt0.c0))))) ORDER BY (- ((- (vt1.c0)))), ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))==((- (vt1.c0)))), (((x'5f', ((vt1.c0)GLOB(vt1.c0)), ((vt0.c1)OR(vt0.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), vt1.c0 COLLATE BINARY, NULL))) LIMIT 1;
SELECT * FROM vt1, vt0 WHERE ((((((((((vt0.c1, vt0.c1, '', vt0.c1))>((vt0.c1, vt0.c1, vt0.c0, vt0.c0))))OR((((((('-1164965198')OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))))OR((- (vt0.c0)))))AND(((vt0.c0)OR(vt0.c1))))) ORDER BY 'c';
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((((vt0.c1, vt0.c1, '', vt0.c1))>((vt0.c1, vt0.c1, vt0.c0, vt0.c0))))OR((((((('-1164965198')OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))))OR((- (vt0.c0)))))AND(((vt0.c0)OR(vt0.c1))))) ORDER BY (- ((- (vt1.c0)))), ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))=((- (vt1.c0)))), (((x'5f', ((vt1.c0)GLOB(vt1.c0)), ((vt0.c1)OR(vt0.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), vt1.c0 COLLATE BINARY, NULL))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt1.c0))>((vt1.c0))))IS NOT(((x'e652')GLOB(vt0.c0))))) ORDER BY (- ((- (vt1.c0)))), ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))==((- (vt1.c0)))), (((x'5f', ((vt1.c0)GLOB(vt1.c0)), ((vt0.c1)OR(vt0.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), vt1.c0 COLLATE BINARY, NULL))) LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE ((((0x5c55ced2 IN (x'de4200', 0xffffffff9b7c9c08)))IS NOT(vt0.c1 COLLATE NOCASE))) ORDER BY ((((((((((0.8793161265486631)AND(CAST(vt0.c1 AS INTEGER))))OR((vt1.c0 IN (vt1.c0, vt0.c1)))))OR(((vt0.c0)IS(vt0.c0)))))OR((~ (vt0.c0)))))OR(vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, ((NULL) NOT NULL)  NULLS FIRST, ((((x'1056') BETWEEN (vt0.c1) AND (NULL))) IS FALSE)  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((0x5c55ced2 IN (x'de4200', -1686332408)))IS NOT(vt0.c1 COLLATE NOCASE))) ORDER BY CASE ((((vt0.c1)OR(vt1.c0)))OR('-1936733417'))  WHEN vt0.c1 COLLATE NOCASE THEN (((vt1.c0, vt0.c0, vt0.c1, vt0.c0))<((vt1.c0, vt1.c0, vt0.c1, vt0.c0))) WHEN (((vt0.c1, NULL, vt1.c0, vt1.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt1.c0)) AND ((vt0.c0, NULL, vt0.c0, vt1.c0))) THEN ((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) WHEN ((vt0.c0)>=(vt0.c1)) THEN ((vt0.c0)<(vt0.c0)) ELSE vt0.c1 COLLATE BINARY END DESC, (((~ (vt0.c1)))|(TYPEOF(DISTINCT '1931935542')))  NULLS FIRST, ((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))) NOTNULL) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE ((((0x5c55ced2 IN (x'de4200', 0xffffffff9b7c9c08)))IS NOT(vt0.c1 COLLATE NOCASE))) ORDER BY ((((((((((0.8793161265486631)AND(CAST(vt0.c1 AS INTEGER))))OR((vt1.c0 IN (vt1.c0, vt0.c1)))))OR(((vt0.c0)IS(vt0.c0)))))OR((~ (vt0.c0)))))OR(vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, ((NULL) NOT NULL)  NULLS FIRST, ((((x'1056') BETWEEN (vt0.c1) AND (NULL))) IS FALSE)  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((0x5c55ced2 IN (x'de4200', -1686332408)))IS NOT(vt0.c1 COLLATE NOCASE))) ORDER BY CASE ((((vt0.c1)OR(vt1.c0)))OR('-1936733417'))  WHEN vt0.c1 COLLATE NOCASE THEN (((vt1.c0, vt0.c0, vt0.c1, vt0.c0))<((vt1.c0, vt1.c0, vt0.c1, vt0.c0))) WHEN (((vt0.c1, NULL, vt1.c0, vt1.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt1.c0)) AND ((vt0.c0, NULL, vt0.c0, vt1.c0))) THEN ((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) WHEN ((vt0.c0)>=(vt0.c1)) THEN ((vt0.c0)<(vt0.c0)) ELSE vt0.c1 COLLATE BINARY END DESC, (((~ (vt0.c1)))|(TYPEOF(DISTINCT '1931935542')))  NULLS FIRST, ((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))) NOTNULL) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (LOWER(DISTINCT (vt0.c1 IN ())));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((LOWER(DISTINCT (vt0.c1 IN ())))AND((((vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), vt1.c0 COLLATE NOCASE, (((vt0.c1, vt1.c0, vt0.c1, vt0.c0))>=((vt0.c1, vt1.c0, vt0.c0, vt0.c0))))) AND (((NOT (vt1.c0)), (vt1.c0 IN (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))))) ORDER BY CASE WHEN '0.2879219218478474' THEN ((vt0.c0)==(vt0.c1)) WHEN 0Xffffffff9d8f1d93 THEN CAST(vt0.c0 AS BLOB) WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN (vt0.c1 IN (vt1.c0)) THEN ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) END  NULLS LAST, IFNULL(((vt0.c1)AND(vt0.c1)), ((vt0.c0) NOT NULL)), ((vt1.c0)AND(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (LOWER(DISTINCT (vt0.c1 IN ())));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((LOWER(DISTINCT (vt0.c1 IN ())))AND((((vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), vt1.c0 COLLATE NOCASE, (((vt0.c1, vt1.c0, vt0.c1, vt0.c0))>=((vt0.c1, vt1.c0, vt0.c0, vt0.c0))))) AND (((NOT (vt1.c0)), (vt1.c0 IN (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))))) ORDER BY CASE WHEN '0.2879219218478474' THEN ((vt0.c0)==(vt0.c1)) WHEN 0Xffffffff9d8f1d93 THEN CAST(vt0.c0 AS BLOB) WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN (vt0.c1 IN (vt1.c0)) THEN ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) END  NULLS LAST, IFNULL(((vt0.c1)AND(vt0.c1)), ((vt0.c0) NOT NULL)), ((vt1.c0)AND(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (0.848685693593387);
SELECT * FROM vt1, vt0 WHERE (((0.848685693593387)AND((((vt1.c0, vt1.c0)) BETWEEN ((NULL, ((vt0.c0)>>(vt1.c0)))) AND ((((vt0.c0) NOT NULL), NULL)))))) ORDER BY (vt0.c0 IN (vt0.c1)) COLLATE RTRIM  NULLS FIRST, (((((((((((vt0.c1)AND(vt1.c0)))AND(-100881499)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)) IN ()) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (0.848685693593387);
SELECT * FROM vt1, vt0 WHERE (((0.848685693593387)AND((((vt1.c0, vt1.c0)) BETWEEN ((NULL, ((vt0.c0)>>(vt1.c0)))) AND ((((vt0.c0) NOT NULL), NULL)))))) ORDER BY (vt0.c0 IN (vt0.c1)) COLLATE RTRIM  NULLS FIRST, (((((((((((vt0.c1)AND(vt1.c0)))AND(-100881499)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)) IN ()) DESC;
SELECT * FROM vt1, vt0 WHERE (((vt0.c0)<<(vt1.c0)) COLLATE RTRIM);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c0)<<(vt1.c0)) COLLATE RTRIM)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END COLLATE RTRIM))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (vt1.c0) LIMIT 0X2;
SELECT * FROM vt1, vt0 WHERE (((vt0.c0)<<(vt1.c0)) COLLATE RTRIM);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c0)<<(vt1.c0)) COLLATE RTRIM)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END COLLATE RTRIM))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (vt1.c0) LIMIT 0X2;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((+ ('
r#
d)r'))) ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END  WHEN ((vt1.c0) NOTNULL) THEN vt0.c1 END  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((+ ('
r#
d)r')))AND(((((vt0.c1, vt0.c1))>((vt0.c0, vt0.c0))) IN ())))) ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END  WHEN ((vt1.c0) NOTNULL) THEN vt0.c1 END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((LAST_INSERT_ROWID())AND(((vt0.c1)<=(vt0.c1)))))AND(vt0.c1 COLLATE BINARY))) ORDER BY (((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR((NOT (vt0.c0)))))OR(IFNULL(DISTINCT vt0.c1, vt0.c0))))OR(((vt0.c0)%(NULL)))))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((((((LAST_INSERT_ROWID())AND(((vt0.c1)<(vt0.c1)))))AND(vt0.c1 COLLATE BINARY)))AND((((+ (vt0.c1)))/(CASE -9428508  WHEN '
*' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))))) ORDER BY (((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR((NOT (vt0.c0)))))OR(IFNULL(DISTINCT vt0.c1, vt0.c0))))OR(((vt0.c0)%(NULL)))))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((LAST_INSERT_ROWID())AND(((vt0.c1)<=(vt0.c1)))))AND(vt0.c1 COLLATE BINARY))) ORDER BY (((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR((NOT (vt0.c0)))))OR(IFNULL(DISTINCT vt0.c1, vt0.c0))))OR(((vt0.c0)%(NULL)))))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((((((LAST_INSERT_ROWID())AND(((vt0.c1)<(vt0.c1)))))AND(vt0.c1 COLLATE BINARY)))AND((((+ (vt0.c1)))/(CASE -9428508  WHEN '
*' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))))) ORDER BY (((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR((NOT (vt0.c0)))))OR(IFNULL(DISTINCT vt0.c1, vt0.c0))))OR(((vt0.c0)%(NULL)))))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END WHEN (~ (0.7197565379988501)) THEN ((vt1.c0)LIKE(vt0.c0)) WHEN UPPER(vt0.c0) THEN (NOT (vt0.c1)) ELSE ((vt1.c0)<<(vt1.c0)) END) ORDER BY CASE x''  WHEN (+ (vt0.c0)) THEN CASE WHEN vt1.c0 THEN '-633882828' WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END WHEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, 0.3522092483167918, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c0, vt1.c0, vt1.c0))!=((vt0.c1, vt1.c0, vt0.c1))) END ASC, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY DESC;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END WHEN (~ (0.7197565379988501)) THEN ((vt1.c0)LIKE(vt0.c0)) WHEN UPPER(vt0.c0) THEN (NOT (vt0.c1)) ELSE ((vt1.c0)<<(vt1.c0)) END) ORDER BY CASE x''  WHEN (+ (vt0.c0)) THEN CASE WHEN vt1.c0 THEN '-633882828' WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END WHEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, 0.3522092483167918, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c0, vt1.c0, vt1.c0))!=((vt0.c1, vt1.c0, vt0.c1))) END ASC, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY DESC INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (NULL) ORDER BY CASE x''  WHEN (+ (vt0.c0)) THEN CASE WHEN vt1.c0 THEN '-633882828' WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END WHEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, 0.3522092483167918, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c0, vt1.c0, vt1.c0))!=((vt0.c1, vt1.c0, vt0.c1))) END ASC, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY DESC;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END WHEN (~ (0.7197565379988501)) THEN ((vt1.c0)LIKE(vt0.c0)) WHEN UPPER(vt0.c0) THEN (NOT (vt0.c1)) ELSE ((vt1.c0)<<(vt1.c0)) END) ORDER BY CASE x''  WHEN (+ (vt0.c0)) THEN CASE WHEN vt1.c0 THEN '-633882828' WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END WHEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, 0.3522092483167918, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c0, vt1.c0, vt1.c0))!=((vt0.c1, vt1.c0, vt0.c1))) END ASC, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY DESC;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END WHEN (~ (0.7197565379988501)) THEN ((vt1.c0)LIKE(vt0.c0)) WHEN UPPER(vt0.c0) THEN (NOT (vt0.c1)) ELSE ((vt1.c0)<<(vt1.c0)) END) ORDER BY CASE x''  WHEN (+ (vt0.c0)) THEN CASE WHEN vt1.c0 THEN '-633882828' WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END WHEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, 0.3522092483167918, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c0, vt1.c0, vt1.c0))!=((vt0.c1, vt1.c0, vt0.c1))) END ASC, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY DESC INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (NULL) ORDER BY CASE x''  WHEN (+ (vt0.c0)) THEN CASE WHEN vt1.c0 THEN '-633882828' WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END WHEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, 0.3522092483167918, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c0, vt1.c0, vt1.c0))!=((vt0.c1, vt1.c0, vt0.c1))) END ASC, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY DESC;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE RTRIM)AND((+ (((vt1.c0)<<(vt1.c0)))))));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE RTRIM)AND((+ (((vt1.c0)<<(vt1.c0)))))));
SELECT MAX(vt1.c0) FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) IN ()) WHERE (((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(LIKELIHOOD(vt0.c1, vt0.c0))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c1 END)))AND(vt0.c1 COLLATE RTRIM)));
SELECT DISTINCT MAX(vt1.c0) FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) IN ()) WHERE (((((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(LIKELIHOOD(vt0.c1, vt0.c0))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c1 END)))AND(vt0.c1 COLLATE RTRIM)))AND(((((((((((((vt0.c0)<<(0.9208878446459051)))AND((+ (vt0.c1)))))OR((vt0.c1 IN ()))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((vt1.c0 IN (vt0.c1, NULL)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'3d' ELSE vt1.c0 END))))) ORDER BY NULL COLLATE RTRIM COLLATE RTRIM ASC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) IN ()) WHERE ((((((vt0.c0)<<(vt0.c0)), (NOT (vt0.c1))))<>((CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c1, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, NULL, vt1.c0))))))) ORDER BY NULL COLLATE RTRIM COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)*(vt0.c1)))-((vt0.c1 IN (vt0.c1, vt0.c1))))) ORDER BY (vt0.c1 IN ()) DESC  NULLS FIRST, (((- (vt0.c0)))/(((vt0.c0) IS FALSE)));
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1)*(vt0.c1)))-((vt0.c1 IN (vt0.c1)))))AND(vt0.c0))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END)*(((vt0.c0) NOTNULL))) ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)*(vt0.c1)))-((vt0.c1 IN (vt0.c1, vt0.c1))))) ORDER BY (vt0.c1 IN ()) DESC  NULLS FIRST, (((- (vt0.c0)))/(((vt0.c0) IS FALSE)));
SELECT * FROM vt1 WHERE ('y{}ka');
SELECT DISTINCT * FROM vt1 WHERE ('y{}ka') ORDER BY (((vt1.c0, vt1.c0)) BETWEEN ((0.21046504447610692, vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (vt1.c0)), (vt1.c0 IN (vt1.c0))))) ASC LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((((((0.4427175247759766)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) ORDER BY (((vt1.c0, vt1.c0)) BETWEEN ((0.21046504447610692, vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (vt1.c0)), (vt1.c0 IN (vt1.c0))))) ASC LIMIT 0X2;
SELECT * FROM vt1 WHERE ('y{}ka');
SELECT DISTINCT * FROM vt1 WHERE ('y{}ka') ORDER BY (((vt1.c0, vt1.c0)) BETWEEN ((0.21046504447610692, vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (vt1.c0)), (vt1.c0 IN (vt1.c0))))) ASC LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((((((0.4427175247759766)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) ORDER BY (((vt1.c0, vt1.c0)) BETWEEN ((0.21046504447610692, vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (vt1.c0)), (vt1.c0 IN (vt1.c0))))) ASC LIMIT 0X2;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN '-1786790141' END);
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((CASE WHEN (- (vt1.c0)) THEN '-1786790141' END)AND(((vt1.c0 COLLATE BINARY) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'2035')))))))) LIMIT 1;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((('573310531')*(vt1.c0)))>=((- (vt0.c0))))) ORDER BY vt1.c0;
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((('573310531')*(vt1.c0)))>((- (vt0.c0))))) ORDER BY (((vt1.c0 IN (vt1.c0)))%(CAST(vt0.c1 AS REAL))), load_extension(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)), (vt1.c0 IN ())) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM vt1 WHERE (CASE ((']')+(0.6347772247008127))  WHEN (((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) THEN LIKELY(vt1.c0) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE ((((((((vt1.c0)OR('1517556072')))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END) ORDER BY (((vt1.c0) IS FALSE) IN ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))) ASC;
SELECT ALL * FROM vt1 WHERE (CASE ((']')+(0.6347772247008127))  WHEN (((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) THEN LIKELY(vt1.c0) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE ((((((((vt1.c0)OR('1517556072')))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END) ORDER BY (((vt1.c0) IS FALSE) IN ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))) ASC INTERSECT SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0)))%(((vt1.c0)LIKE(vt1.c0))))) ORDER BY (((vt1.c0) IS FALSE) IN ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))) ASC;
SELECT ALL * FROM vt1 WHERE (CASE ((']')+(0.6347772247008127))  WHEN (((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) THEN LIKELY(vt1.c0) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE ((((((((vt1.c0)OR('1517556072')))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END) ORDER BY (((vt1.c0) IS FALSE) IN ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))) ASC;
SELECT ALL * FROM vt1 WHERE (CASE ((']')+(0.6347772247008127))  WHEN (((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) THEN LIKELY(vt1.c0) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE ((((((((vt1.c0)OR('1517556072')))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END) ORDER BY (((vt1.c0) IS FALSE) IN ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))) ASC INTERSECT SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0)))%(((vt1.c0)LIKE(vt1.c0))))) ORDER BY (((vt1.c0) IS FALSE) IN ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))) ASC;
SELECT * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c1)OR(vt0.c1)))AND(((vt0.c1)/(vt1.c0)))))AND(((0Xffffffffc24ec574)||(0.3999051788528952)))))OR(((vt0.c0)LIKE('1111966814')))) WHERE ((CAST(vt0.c0 AS TEXT) IN (CAST(vt1.c0 AS INTEGER)))) ORDER BY vt0.c1 DESC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c1)OR(vt0.c1)))AND(((vt0.c1)/(vt1.c0)))))AND(((-1035025036)||(0.3999051788528952)))))OR(((vt0.c0)LIKE('1111966814')))) WHERE ((((CAST(vt0.c0 AS TEXT) IN (CAST(vt1.c0 AS INTEGER))))AND(((vt0.c0) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt1.c0 END) AND (CAST(vt0.c1 AS TEXT)))))) ORDER BY vt0.c1 DESC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c1)OR(vt0.c1)))AND(((vt0.c1)/(vt1.c0)))))AND(((0Xffffffffc24ec574)||(0.3999051788528952)))))OR(((vt0.c0)LIKE('1111966814')))) WHERE ((CAST(vt0.c0 AS TEXT) IN (CAST(vt1.c0 AS INTEGER)))) ORDER BY vt0.c1 DESC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c1)OR(vt0.c1)))AND(((vt0.c1)/(vt1.c0)))))AND(((-1035025036)||(0.3999051788528952)))))OR(((vt0.c0)LIKE('1111966814')))) WHERE ((((CAST(vt0.c0 AS TEXT) IN (CAST(vt1.c0 AS INTEGER))))AND(((vt0.c0) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt1.c0 END) AND (CAST(vt0.c1 AS TEXT)))))) ORDER BY vt0.c1 DESC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT * FROM vt1 WHERE (CASE ((NULL)IS(vt1.c0))  WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE (((CASE ((NULL)IS(vt1.c0))  WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END)AND((NOT (((NULL) IS FALSE)))))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS REAL) DESC, CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '''(m69jZ{c' END AS NUMERIC);
SELECT * FROM vt1 WHERE (CASE ((NULL)IS(vt1.c0))  WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE (((CASE ((NULL)IS(vt1.c0))  WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END)AND((NOT (((NULL) IS FALSE)))))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS REAL) DESC, CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '''(m69jZ{c' END AS NUMERIC);
SELECT MIN(vt0.c1) FROM vt1 LEFT OUTER JOIN vt0 ON ((((NULL)AND(vt0.c0)))OR(((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)))) WHERE (((vt0.c1 COLLATE NOCASE)IS(CAST(vt0.c0 AS BLOB))));
SELECT MIN(vt0.c1) FROM vt1 INNER JOIN vt0 ON ((((NULL)AND(vt0.c0)))OR(((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)))) WHERE (((((vt0.c1 COLLATE NOCASE)IS(CAST(vt0.c0 AS BLOB))))AND(x'21'))) LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT));
SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT)) ORDER BY ((((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(CAST(vt0.c1 AS TEXT))))AND(CAST(vt0.c0 AS INTEGER))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC  NULLS FIRST, ((((((vt0.c0) IS FALSE))AND(CAST(vt1.c0 AS NUMERIC))))OR(((vt1.c0) NOTNULL))) LIMIT 0x2;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT));
SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT)) ORDER BY ((((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(CAST(vt0.c1 AS TEXT))))AND(CAST(vt0.c0 AS INTEGER))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC  NULLS FIRST, ((((((vt0.c0) IS FALSE))AND(CAST(vt1.c0 AS NUMERIC))))OR(((vt1.c0) NOTNULL))) LIMIT 0x2;
SELECT ALL MAX(vt0.c0) FROM vt1 NATURAL JOIN vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN ('-1494238595') AND (vt1.c0)))AND(CAST(vt0.c1 AS NUMERIC))))AND(((((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))))OR(CAST(vt1.c0 AS NUMERIC))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL MAX(vt0.c0) FROM vt1 NATURAL JOIN vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN ('-1494238595') AND (vt1.c0)))AND(CAST(vt0.c1 AS NUMERIC))))AND(((((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))))OR(CAST(vt1.c0 AS NUMERIC))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN '' END);
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN '' END) ORDER BY vt1.c0 LIMIT 2 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((((((((((((CAST(x'' AS TEXT))AND(vt1.c0 COLLATE BINARY)))OR(vt1.c0 COLLATE NOCASE)))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)&(vt1.c0)))))AND(LIKELIHOOD(vt1.c0, vt1.c0))))OR(((vt1.c0) IS FALSE)))) ORDER BY vt1.c0 LIMIT 0X2;
SELECT ALL * FROM vt1 WHERE ((- ((vt1.c0 IN ()))));
SELECT * FROM vt1 WHERE ((((- ((vt1.c0 IN ()))))AND(((((vt1.c0) NOTNULL)) BETWEEN (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0)<=(vt1.c0))))))) INTERSECT SELECT * FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ()));
SELECT ALL * FROM vt1 WHERE ((- ((vt1.c0 IN ()))));
SELECT * FROM vt1 WHERE ((((- ((vt1.c0 IN ()))))AND(((((vt1.c0) NOTNULL)) BETWEEN (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0)<=(vt1.c0))))))) INTERSECT SELECT * FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((json_extract('vk*jC', vt1.c0))LIKE(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((json_extract('vk*jC', vt1.c0))LIKE(CAST(vt1.c0 AS NUMERIC))))AND((((vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), (NOT (vt0.c1)))) AND ((x'', (((0.9533167409212008))<>((vt1.c0))))))))) INTERSECT SELECT COUNT(*) FROM vt1, vt0 WHERE (x'');
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)*(vt1.c0))))) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)*(vt1.c0))))) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)*(vt1.c0))))) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)*(vt1.c0))))) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0)))LIKE(x'')));
SELECT DISTINCT * FROM vt1 WHERE ((((NOT (vt1.c0)))LIKE(x''))) ORDER BY (((((vt1.c0)GLOB(vt1.c0)), (((('1')AND(788226523)))AND(vt1.c0)), (vt1.c0 IN (x'5a31b6'))))==(((~ (0.5425083797530682)), NULL, vt1.c0 COLLATE NOCASE))), (((NOT (vt1.c0))) BETWEEN ((NOT (vt1.c0))) AND (((vt1.c0)==(vt1.c0)))) LIMIT 1;
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0)))LIKE(x'')));
SELECT DISTINCT * FROM vt1 WHERE ((((NOT (vt1.c0)))LIKE(x''))) ORDER BY (((((vt1.c0)GLOB(vt1.c0)), (((('1')AND(788226523)))AND(vt1.c0)), (vt1.c0 IN (x'5a31b6'))))==(((~ (0.5425083797530682)), NULL, vt1.c0 COLLATE NOCASE))), (((NOT (vt1.c0))) BETWEEN ((NOT (vt1.c0))) AND (((vt1.c0)==(vt1.c0)))) LIMIT 1;
SELECT MIN(vt0.c0) FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c1 THEN (((vt0.c1, vt0.c1))=(('', vt0.c1))) END);
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c1 THEN (((vt0.c1, vt0.c1))==(('', vt0.c1))) END) ORDER BY (((+ (vt0.c1))) IS FALSE) ASC LIMIT 1;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (0.23038269224913488)) ELSE ((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)) END WHERE (((SUBSTR(vt0.c1, vt0.c0))&(''))) ORDER BY (((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) IN (((vt0.c1)||(0X2c952b2f)))) DESC, ((x'') NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))))), NULL ASC;
SELECT DISTINCT COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (0.23038269224913488)) ELSE ((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)) END WHERE (((((SUBSTR(vt0.c1, vt0.c0))&('')))AND(CAST(((vt0.c1) NOT NULL) AS BLOB)))) ORDER BY (((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) IN (((vt0.c1)||(747973423)))) DESC, ((x'') NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))))), NULL ASC INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (0.23038269224913488)) ELSE ((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)) END WHERE (CASE CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END  WHEN ('^k' IN (vt1.c0)) THEN ((vt1.c0)<=(vt0.c1)) END) ORDER BY (((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) IN (((vt0.c1)||(0x2c952b2f)))) DESC, ((x'') NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))))), NULL ASC;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((vt0.c1, vt0.c0, vt0.c1, x'87'))>((vt0.c0, '-2078399819', vt0.c1, vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((vt0.c1, vt0.c0, vt0.c1, x'87'))<>((vt0.c0, '-2078399819', vt0.c1, vt0.c0))))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) COLLATE BINARY))) LIMIT 0X5 INTERSECT SELECT ALL * FROM vt0 WHERE (vt0.c1) LIMIT 0X5;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((vt0.c1, vt0.c0, vt0.c1, x'87'))>((vt0.c0, '-2078399819', vt0.c1, vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((vt0.c1, vt0.c0, vt0.c1, x'87'))<>((vt0.c0, '-2078399819', vt0.c1, vt0.c0))))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) COLLATE BINARY))) LIMIT 0X5 INTERSECT SELECT ALL * FROM vt0 WHERE (vt0.c1) LIMIT 0X5;
SELECT * FROM vt1, vt0 WHERE ((~ (((vt1.c0)=(vt0.c0)))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((~ (((vt1.c0)==(vt0.c0)))))AND((((vt1.c0 IN (vt0.c1))) BETWEEN (((vt0.c1)<(vt0.c1))) AND ((vt0.c0 IN (vt1.c0))))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (x'96') LIMIT 0;
SELECT * FROM vt1, vt0 WHERE ((~ (((vt1.c0)=(vt0.c0)))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((~ (((vt1.c0)==(vt0.c0)))))AND((((vt1.c0 IN (vt0.c1))) BETWEEN (((vt0.c1)<(vt0.c1))) AND ((vt0.c0 IN (vt1.c0))))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (x'96') LIMIT 0;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (QUOTE(((vt1.c0)&(-656599538))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (QUOTE(((vt1.c0)&(-656599538)))) ORDER BY ((CASE WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN 0.8134426419548006 END)>>(((vt0.c1)IS(vt0.c1)))), (((vt1.c0)) BETWEEN (((((vt0.c1, vt0.c1, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))) AND ((highlight(vt0.c1, vt0.c1, vt1.c0, NULL)))) DESC LIMIT 0X1;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (QUOTE(((vt1.c0)&(-656599538))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (QUOTE(((vt1.c0)&(-656599538)))) ORDER BY ((CASE WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN 0.8134426419548006 END)>>(((vt0.c1)IS(vt0.c1)))), (((vt1.c0)) BETWEEN (((((vt0.c1, vt0.c1, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))) AND ((highlight(vt0.c1, vt0.c1, vt1.c0, NULL)))) DESC LIMIT 0X1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)/(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0)))));
SELECT * FROM vt1 WHERE (((((vt1.c0)/(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0))))) LIMIT 0X0 INTERSECT SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(NULL)))AND(((vt1.c0) NOTNULL))))AND(((vt1.c0)LIKE(0.5804317250033704)))))OR(CAST(vt1.c0 AS REAL)))) LIMIT 0;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)/(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0)))));
SELECT * FROM vt1 WHERE (((((vt1.c0)/(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0))))) LIMIT 0X0 INTERSECT SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(NULL)))AND(((vt1.c0) NOTNULL))))AND(((vt1.c0)LIKE(0.5804317250033704)))))OR(CAST(vt1.c0 AS REAL)))) LIMIT 0;
SELECT MIN(vt0.c1) FROM vt0 NOT INDEXED, vt1 WHERE (((vt0.c1 COLLATE NOCASE) NOT NULL)) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0))))) ASC, ((vt1.c0 IN ()) IN (LOWER(vt1.c0)))  NULLS LAST, CASE 0.02831077018061634  WHEN vt1.c0 THEN vt0.c1 END COLLATE RTRIM ASC;
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (((vt0.c1 COLLATE NOCASE) NOT NULL)) ORDER BY vt1.c0 DESC LIMIT 0x0;
SELECT ALL * FROM vt0, vt1 WHERE ((~ ((+ (vt0.c0))))) ORDER BY ((vt0.c0)||(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT * FROM vt0, vt1 WHERE ((((~ ((+ (vt0.c0)))))AND(((((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)) COLLATE RTRIM))) ORDER BY (('gැ_yq{Y' COLLATE NOCASE)LIKE(((vt1.c0)<(vt1.c0)))) ASC  NULLS FIRST, 0.5832975302933574 ASC  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (((((NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END))>=((((x'') IS FALSE), (((vt0.c0, vt0.c1, vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((0.047239469331700645, vt0.c0, vt0.c0, 1721688447, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c0, vt1.c0, vt0.c1))))))) ORDER BY (('gැ_yq{Y' COLLATE NOCASE)LIKE(((vt1.c0)<(vt1.c0)))) ASC  NULLS FIRST, 0.5832975302933574 ASC  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM vt0, vt1 WHERE ((~ ((+ (vt0.c0))))) ORDER BY ((vt0.c0)||(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT * FROM vt0, vt1 WHERE ((((~ ((+ (vt0.c0)))))AND(((((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)) COLLATE RTRIM))) ORDER BY (('gැ_yq{Y' COLLATE NOCASE)LIKE(((vt1.c0)<(vt1.c0)))) ASC  NULLS FIRST, 0.5832975302933574 ASC  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (((((NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END))>=((((x'') IS FALSE), (((vt0.c0, vt0.c1, vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((0.047239469331700645, vt0.c0, vt0.c0, 1721688447, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c0, vt1.c0, vt0.c1))))))) ORDER BY (('gැ_yq{Y' COLLATE NOCASE)LIKE(((vt1.c0)<(vt1.c0)))) ASC  NULLS FIRST, 0.5832975302933574 ASC  NULLS LAST LIMIT 0x1;
SELECT MIN(vt1.c0) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)))) ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END THEN vt0.c1 END, (((vt0.c1, 0.022590638153745957, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, LOWER(vt0.c0), ((((((1370962029)AND(NULL)))OR(vt1.c0)))AND(vt0.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN x'fb' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END, NULL, '*1', (((vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, x'', vt0.c0)))))) DESC;
SELECT DISTINCT MIN(vt1.c0) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)))) ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END THEN vt0.c1 END, (((vt0.c1, 0.022590638153745957, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, LOWER(vt0.c0), ((((((0x51b7386d)AND(NULL)))OR(vt1.c0)))AND(vt0.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN x'fb' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END, NULL, '*1', (((vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, x'', vt0.c0)))))) DESC LIMIT 0;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) IS TRUE));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) IS TRUE)) ORDER BY (((~ (vt0.c0)))LIKE((vt0.c1 IN (vt0.c0, vt0.c1)))) ASC  NULLS FIRST, (- (((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))) ASC;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) IS TRUE));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) IS TRUE)) ORDER BY (((~ (vt0.c0)))LIKE((vt0.c1 IN (vt0.c0, vt0.c1)))) ASC  NULLS FIRST, (- (((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))) ASC;
SELECT * FROM vt0 WHERE ((~ (LENGTH(vt0.c0)))) ORDER BY CAST(-1686332408 AS BLOB)  NULLS FIRST, x'' DESC;
SELECT * FROM vt0 WHERE ((~ (LENGTH(vt0.c0)))) ORDER BY ABS(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) LIMIT 0X1;
SELECT * FROM vt0 WHERE ((~ (LENGTH(vt0.c0)))) ORDER BY CAST(-1686332408 AS BLOB)  NULLS FIRST, x'' DESC;
SELECT * FROM vt0 WHERE ((~ (LENGTH(vt0.c0)))) ORDER BY ABS(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) LIMIT 0X1;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((6.86262591E8)%(vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c0) NOTNULL) END);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((6.86262591E8)%(vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c0) NOTNULL) END);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT NULL) COLLATE BINARY COLLATE NOCASE) ORDER BY (NOT (NULL)) DESC  NULLS FIRST, CASE TYPEOF(vt1.c0)  WHEN CAST(vt1.c0 AS INTEGER) THEN x'' WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN (('-1726776581') NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN ((0.9474095088195896) ISNULL) END  NULLS LAST, CASE WHEN vt1.c0 THEN ((vt1.c0)>>(vt1.c0)) WHEN ((vt1.c0)&('a鏷q')) THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END DESC;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) NOT NULL) COLLATE BINARY COLLATE NOCASE) ORDER BY (NOT (NULL)) DESC  NULLS FIRST, CASE TYPEOF(vt1.c0)  WHEN CAST(vt1.c0 AS INTEGER) THEN x'' WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN (('-1726776581') NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN ((0.9474095088195896) ISNULL) END  NULLS LAST, CASE WHEN vt1.c0 THEN ((vt1.c0)>>(vt1.c0)) WHEN ((vt1.c0)&('a鏷q')) THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END DESC;
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT NULL) COLLATE BINARY COLLATE NOCASE) ORDER BY (NOT (NULL)) DESC  NULLS FIRST, CASE TYPEOF(vt1.c0)  WHEN CAST(vt1.c0 AS INTEGER) THEN x'' WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN (('-1726776581') NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN ((0.9474095088195896) ISNULL) END  NULLS LAST, CASE WHEN vt1.c0 THEN ((vt1.c0)>>(vt1.c0)) WHEN ((vt1.c0)&('a鏷q')) THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END DESC;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) NOT NULL) COLLATE BINARY COLLATE NOCASE) ORDER BY (NOT (NULL)) DESC  NULLS FIRST, CASE TYPEOF(vt1.c0)  WHEN CAST(vt1.c0 AS INTEGER) THEN x'' WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN (('-1726776581') NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN ((0.9474095088195896) ISNULL) END  NULLS LAST, CASE WHEN vt1.c0 THEN ((vt1.c0)>>(vt1.c0)) WHEN ((vt1.c0)&('a鏷q')) THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END DESC;
SELECT * FROM vt1, vt0 WHERE (0x734acc3b);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((0X734acc3b)AND((NOT (((((vt1.c0)OR('FALSE')))OR(vt0.c1))))))) LIMIT 0;
SELECT * FROM vt1, vt0 WHERE (0x734acc3b);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((0X734acc3b)AND((NOT (((((vt1.c0)OR('FALSE')))OR(vt0.c1))))))) LIMIT 0;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (vt0.c1) LIMIT 0 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (vt0.c0) LIMIT 0X0;
SELECT * FROM vt0 WHERE ((- (LTRIM(vt0.c1, vt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((- (LTRIM(vt0.c1, vt0.c1))))AND((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ())))) ORDER BY vt0.c0 ASC  NULLS LAST, CASE WHEN 0.1570365597696648 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c1 IN (0.4487091589095483, vt0.c0)) ELSE x'78' END ASC;
SELECT * FROM vt0 WHERE ((- (LTRIM(vt0.c1, vt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((- (LTRIM(vt0.c1, vt0.c1))))AND((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ())))) ORDER BY vt0.c0 ASC  NULLS LAST, CASE WHEN 0.1570365597696648 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c1 IN (0.4487091589095483, vt0.c0)) ELSE x'78' END ASC;
SELECT * FROM vt0 WHERE ('0.7831646522758499');
SELECT DISTINCT * FROM vt0 WHERE ('0.7831646522758499');
SELECT * FROM vt0 WHERE ('0.7831646522758499');
SELECT DISTINCT * FROM vt0 WHERE ('0.7831646522758499');
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)>=(vt1.c0))) NOT BETWEEN (vt0.c1) AND (((NULL)>(vt0.c0)))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c0)>=(vt1.c0))) NOT BETWEEN (vt0.c1) AND (((NULL)>(vt0.c0))))) INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)OR(vt1.c0)))AND(vt0.c1 COLLATE NOCASE)))AND(((vt0.c0)<=(vt0.c0)))))AND(((vt0.c0)+(vt0.c1)))));
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)>=(vt1.c0))) NOT BETWEEN (vt0.c1) AND (((NULL)>(vt0.c0)))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c0)>=(vt1.c0))) NOT BETWEEN (vt0.c1) AND (((NULL)>(vt0.c0))))) INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)OR(vt1.c0)))AND(vt0.c1 COLLATE NOCASE)))AND(((vt0.c0)<=(vt0.c0)))))AND(((vt0.c0)+(vt0.c1)))));
SELECT ALL * FROM vt1 WHERE (CAST(0.33680115300381164 AS BLOB)) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CAST(0.33680115300381164 AS BLOB)) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM))) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt1 WHERE (CAST(0.33680115300381164 AS BLOB)) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CAST(0.33680115300381164 AS BLOB)) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM))) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY DESC  NULLS LAST LIMIT 0;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM) ORDER BY ((CASE WHEN x'40b5' THEN vt0.c1 ELSE vt0.c0 END)<=(x'' COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM) ORDER BY (((LIKE(vt0.c0, vt0.c1), '506619542', ((vt0.c1)<<(vt0.c1)), vt0.c0))>=(((~ (vt0.c0)), TRIM(DISTINCT vt0.c0, vt0.c1), COALESCE(DISTINCT vt0.c0, vt0.c1, vt0.c0), ((vt0.c1)<('-541430653'))))) ASC  NULLS LAST, (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))>((vt0.c0))) DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT MIN(vt0.c0) FROM vt0 WHERE (CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN TRIM(vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (x'35') AND (vt0.c1)) END) ORDER BY (((LIKE(vt0.c0, vt0.c1), '506619542', ((vt0.c1)<<(vt0.c1)), vt0.c0))>=(((~ (vt0.c0)), TRIM(DISTINCT vt0.c0, vt0.c1), COALESCE(DISTINCT vt0.c0, vt0.c1, vt0.c0), ((vt0.c1)<('-541430653'))))) ASC  NULLS LAST, (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))>((vt0.c0))) DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM vt0 WHERE (x'360ff1');
SELECT * FROM vt0 WHERE (((x'360ff1')AND(vt0.c1))) ORDER BY vt0.c0, NULL DESC, vt0.c0 ASC  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (-489693833) ORDER BY vt0.c0, NULL DESC, vt0.c0 ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (x'360ff1');
SELECT * FROM vt0 WHERE (((x'360ff1')AND(vt0.c1))) ORDER BY vt0.c0, NULL DESC, vt0.c0 ASC  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (-489693833) ORDER BY vt0.c0, NULL DESC, vt0.c0 ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((+ (x'a1')) COLLATE BINARY);
SELECT * FROM vt0, vt1 WHERE ((((+ (x'a1')) COLLATE BINARY)AND(((((vt0.c0)IS(vt0.c1))) ISNULL)))) INTERSECT SELECT * FROM vt0, vt1 WHERE (json_remove(MAX(vt0.c0, vt1.c0, vt0.c1, vt0.c1), (vt1.c0 IN (vt0.c0)), CAST(vt1.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE, (~ (vt0.c1))));
SELECT * FROM vt0, vt1 WHERE ((+ (x'a1')) COLLATE BINARY);
SELECT * FROM vt0, vt1 WHERE ((((+ (x'a1')) COLLATE BINARY)AND(((((vt0.c0)IS(vt0.c1))) ISNULL)))) INTERSECT SELECT * FROM vt0, vt1 WHERE (json_remove(MAX(vt0.c0, vt1.c0, vt0.c1, vt0.c1), (vt1.c0 IN (vt0.c0)), CAST(vt1.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE, (~ (vt0.c1))));
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (((((((((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(0.06364580930239094)))OR(vt0.c1)))>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC, json_insert((~ (vt0.c1)), (((vt1.c0))<>((vt1.c0))), ((vt0.c1) ISNULL), ((((vt0.c0)OR(vt1.c0)))OR('')), LIKELIHOOD(vt0.c1, '-605516468'));
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE (((((((((((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(0.06364580930239094)))OR(vt0.c1)))>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(vt0.c1))) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC, json_insert((~ (vt0.c1)), (((vt1.c0))<>((vt1.c0))), ((vt0.c1) ISNULL), ((((vt0.c0)OR(vt1.c0)))OR('')), LIKELIHOOD(vt0.c1, '-605516468'));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0) NOTNULL) COLLATE BINARY COLLATE RTRIM);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0) NOTNULL) COLLATE BINARY COLLATE RTRIM)AND(CAST(((vt0.c0) ISNULL) AS BLOB))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0) NOTNULL) COLLATE BINARY COLLATE RTRIM);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0) NOTNULL) COLLATE BINARY COLLATE RTRIM)AND(CAST(((vt0.c0) ISNULL) AS BLOB))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((+ (vt1.c0)))&(((NULL) NOTNULL))) WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (+ (vt0.c1)) THEN ((vt0.c1)*(vt0.c0)) WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0)OR(vt0.c0)) END);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((+ (vt1.c0)))&(((NULL) NOTNULL))) WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (+ (vt0.c1)) THEN ((vt0.c1)*(vt0.c0)) WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0)OR(vt0.c0)) END) LIMIT 2;
SELECT * FROM vt1 CROSS JOIN vt0 ON (((+ (vt1.c0)))&(((NULL) NOTNULL))) WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (+ (vt0.c1)) THEN ((vt0.c1)*(vt0.c0)) WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0)OR(vt0.c0)) END);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((+ (vt1.c0)))&(((NULL) NOTNULL))) WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (+ (vt0.c1)) THEN ((vt0.c1)*(vt0.c0)) WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0)OR(vt0.c0)) END) LIMIT 2;
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)!=(vt0.c0))) AND ((+ (vt0.c0))))) ORDER BY (((((((((vt0.c1 IN (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(CAST('*' AS TEXT))))OR((+ (0xffffffffa0b3da16)))))OR(CAST(vt0.c1 AS NUMERIC))) ASC, (+ ('')) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)<>(vt0.c0))) AND ((+ (vt0.c0)))))AND(CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN x'c7' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END WHEN (vt0.c0 IN ()) THEN ((vt0.c1)!=(vt0.c1)) END))) ORDER BY ((((vt0.c1)/(vt0.c0)))/(vt0.c0))  NULLS FIRST, 0.7169738640917971 DESC, ((((NULLIF(DISTINCT vt0.c0, vt0.c1))OR(UPPER(DISTINCT vt0.c0))))OR(ABS(vt0.c0))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (INSTR(UNLIKELY(vt0.c0), vt0.c0)) ORDER BY ((((vt0.c1)/(vt0.c0)))/(vt0.c0))  NULLS FIRST, 0.7169738640917971 DESC, ((((NULLIF(DISTINCT vt0.c0, vt0.c1))OR(UPPER(DISTINCT vt0.c0))))OR(ABS(vt0.c0)));
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)!=(vt0.c0))) AND ((+ (vt0.c0))))) ORDER BY (((((((((vt0.c1 IN (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(CAST('*' AS TEXT))))OR((+ (0xffffffffa0b3da16)))))OR(CAST(vt0.c1 AS NUMERIC))) ASC, (+ ('')) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1 IN (vt0.c0))) NOT BETWEEN (((vt0.c0)<>(vt0.c0))) AND ((+ (vt0.c0)))))AND(CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN x'c7' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END WHEN (vt0.c0 IN ()) THEN ((vt0.c1)!=(vt0.c1)) END))) ORDER BY ((((vt0.c1)/(vt0.c0)))/(vt0.c0))  NULLS FIRST, 0.7169738640917971 DESC, ((((NULLIF(DISTINCT vt0.c0, vt0.c1))OR(UPPER(DISTINCT vt0.c0))))OR(ABS(vt0.c0))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (INSTR(UNLIKELY(vt0.c0), vt0.c0)) ORDER BY ((((vt0.c1)/(vt0.c0)))/(vt0.c0))  NULLS FIRST, 0.7169738640917971 DESC, ((((NULLIF(DISTINCT vt0.c0, vt0.c1))OR(UPPER(DISTINCT vt0.c0))))OR(ABS(vt0.c0)));
SELECT ALL MAX(vt0.c1) FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c0 IN (x'23', vt1.c0)) IN ((vt0.c0 IN ()), CAST(vt0.c1 AS REAL))));
SELECT DISTINCT MAX(vt0.c1) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c0 IN (x'23', vt1.c0)) IN ((vt0.c0 IN ()), CAST(vt0.c1 AS REAL))))AND(((((((((vt0.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1))) BETWEEN ('40464989') AND (((vt0.c0) NOT NULL)))))) INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.c0 IN ())) IS FALSE));
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (CAST(TRIM(vt0.c0, 'm৮_') AS INTEGER));
SELECT MAX(vt0.c1) FROM vt0 WHERE (((CAST(TRIM(vt0.c0, 'm৮_') AS INTEGER))AND(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN CAST(vt0.c0 AS TEXT) THEN 0.8569211928136294 WHEN vt0.c1 COLLATE RTRIM THEN (((vt0.c0, vt0.c0))=((vt0.c1, vt0.c1))) ELSE CAST(vt0.c0 AS BLOB) END INTERSECT SELECT MAX(vt0.c1) FROM vt0 WHERE (((((((((NULL)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))) ISNULL)) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN CAST(vt0.c0 AS TEXT) THEN 0.8569211928136294 WHEN vt0.c1 COLLATE RTRIM THEN (((vt0.c0, vt0.c0))=((vt0.c1, vt0.c1))) ELSE CAST(vt0.c0 AS BLOB) END;
SELECT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0) NOT NULL))))AND('-S')));
SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0) NOT NULL))))AND('-S'))) ORDER BY (((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))IS(CAST(vt1.c0 AS TEXT)))  NULLS LAST, ((NULL)GLOB((((vt1.c0))<=((vt1.c0))))) ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((x'c7260c', vt1.c0)))) BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0) NOT NULL)))) ORDER BY (((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))IS(CAST(vt1.c0 AS TEXT)))  NULLS LAST, ((NULL)GLOB((((vt1.c0))<=((vt1.c0))))) ASC LIMIT 0;
SELECT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0) NOT NULL))))AND('-S')));
SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0) NOT NULL))))AND('-S'))) ORDER BY (((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))IS(CAST(vt1.c0 AS TEXT)))  NULLS LAST, ((NULL)GLOB((((vt1.c0))<=((vt1.c0))))) ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((x'c7260c', vt1.c0)))) BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0) NOT NULL)))) ORDER BY (((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))IS(CAST(vt1.c0 AS TEXT)))  NULLS LAST, ((NULL)GLOB((((vt1.c0))<=((vt1.c0))))) ASC LIMIT 0;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN '(qoঊk{}' THEN vt1.c0 COLLATE NOCASE END) ORDER BY LOWER(vt1.c0) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN '(qoঊk{}' THEN vt1.c0 COLLATE NOCASE END) ORDER BY LOWER(vt1.c0) COLLATE BINARY  NULLS LAST LIMIT 0x0;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN '(qoঊk{}' THEN vt1.c0 COLLATE NOCASE END) ORDER BY LOWER(vt1.c0) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN '(qoঊk{}' THEN vt1.c0 COLLATE NOCASE END) ORDER BY LOWER(vt1.c0) COLLATE BINARY  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE ((((((vt0.c1, vt1.c0, vt0.c0, vt0.c0))=((vt0.c1, vt1.c0, vt1.c0, vt1.c0))))||(NULL COLLATE NOCASE))) ORDER BY ''  NULLS FIRST;
SELECT MAX(vt1.c0) FROM vt1, vt0 WHERE ((((((((vt0.c1, vt1.c0, vt0.c0, vt0.c0))=((vt0.c1, vt1.c0, vt1.c0, vt1.c0))))||(NULL COLLATE NOCASE)))AND((((('-587666667')IS NOT(vt1.c0))) IS FALSE)))) ORDER BY ''  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE (0.91712404437448) ORDER BY ''  NULLS FIRST LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((((((vt0.c1)AND(0.5249687254440588)))OR(vt0.c0)))OR(vt0.c1))))) ORDER BY (+ (((vt0.c0)+(vt1.c0)))) DESC  NULLS FIRST, CAST(((0.8157324874851654)||(vt0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((((((vt0.c1)AND(0.5249687254440588)))OR(vt0.c0)))OR(vt0.c1))))) ORDER BY (NOT (vt1.c0 COLLATE RTRIM))  NULLS LAST, ((- (vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT MIN(vt1.c0) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY);
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY) LIMIT 1 INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((vt1.c0)+(vt1.c0)) COLLATE RTRIM) LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) AS BLOB));
SELECT * FROM vt0, vt1 WHERE (((CAST(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) AS BLOB))AND(((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))||(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))))) ORDER BY vt1.c0 DESC  NULLS LAST INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (CASE ((vt0.c1)<=(vt0.c1))  WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN ()) END) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) AS BLOB));
SELECT * FROM vt0, vt1 WHERE (((CAST(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) AS BLOB))AND(((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))||(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))))) ORDER BY vt1.c0 DESC  NULLS LAST INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (CASE ((vt0.c1)<=(vt0.c1))  WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN ()) END) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((((vt1.c0)=(vt1.c0))) BETWEEN (((vt1.c0)<=(vt1.c0))) AND (((vt1.c0)%(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)=(vt1.c0))) BETWEEN (((vt1.c0)<=(vt1.c0))) AND (((vt1.c0)%(vt1.c0)))))AND(('-1471692082' IN ('	>!1', CAST(vt1.c0 AS INTEGER)))))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((HEX(DISTINCT vt1.c0), ((vt1.c0) ISNULL), (vt1.c0 IN (vt1.c0)))) AND ((CAST(vt1.c0 AS INTEGER), ((vt1.c0)IS NOT(vt1.c0)), (((vt1.c0, '-174602210'))!=((vt1.c0, vt1.c0))))))) LIMIT 2;
SELECT * FROM vt1 WHERE (((((vt1.c0)=(vt1.c0))) BETWEEN (((vt1.c0)<=(vt1.c0))) AND (((vt1.c0)%(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)=(vt1.c0))) BETWEEN (((vt1.c0)<=(vt1.c0))) AND (((vt1.c0)%(vt1.c0)))))AND(('-1471692082' IN ('	>!1', CAST(vt1.c0 AS INTEGER)))))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((HEX(DISTINCT vt1.c0), ((vt1.c0) ISNULL), (vt1.c0 IN (vt1.c0)))) AND ((CAST(vt1.c0 AS INTEGER), ((vt1.c0)IS NOT(vt1.c0)), (((vt1.c0, '-174602210'))!=((vt1.c0, vt1.c0))))))) LIMIT 2;
SELECT COUNT(*) FROM vt0 WHERE (((((((((x'30')<=(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))OR((((vt0.c0))>((vt0.c1))))))AND(vt0.c1 COLLATE RTRIM))) ORDER BY NULL  NULLS LAST, vt0.c1;
SELECT COUNT(*) FROM vt0 WHERE (((((((((x'30')<(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))))OR((((vt0.c0))>((vt0.c1))))))AND(vt0.c1 COLLATE RTRIM))) ORDER BY NULL  NULLS LAST, vt0.c1 LIMIT 0X3 INTERSECT SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY NULL  NULLS LAST, vt0.c1 LIMIT 0X3;
SELECT COUNT(*) FROM vt0 WHERE (CAST(INSTR(vt0.c1, vt0.c0) AS INTEGER)) ORDER BY LIKELY(DISTINCT CAST(vt0.c1 AS TEXT));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CAST(INSTR(vt0.c1, vt0.c0) AS INTEGER)) ORDER BY (vt0.c0 IN ()) ASC;
SELECT MIN(vt0.c1) FROM vt0 WHERE (CAST(((vt0.c1)LIKE(vt0.c0)) AS BLOB));
SELECT MIN(vt0.c1) FROM vt0 WHERE (((CAST(((vt0.c1)LIKE(vt0.c0)) AS BLOB))AND((((~ (vt0.c0))) ISNULL)))) LIMIT 0x0 INTERSECT SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ('-900083122') LIMIT 0;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((((vt1.c0) NOT NULL))AND(vt1.c0 COLLATE NOCASE)))OR(INSTR(vt1.c0, x'382d16')))) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS TEXT) ASC  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((((vt1.c0) NOT NULL))AND(vt1.c0 COLLATE NOCASE)))OR(INSTR(vt1.c0, x'382d16')))) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS TEXT) ASC  NULLS FIRST LIMIT 5 INTERSECT SELECT MAX(vt1.c0) FROM vt1 WHERE ('E3P)g') ORDER BY CAST(CAST(vt1.c0 AS REAL) AS TEXT) ASC  NULLS FIRST LIMIT 0X5;
SELECT ALL * FROM vt0, vt1 WHERE (CAST((((vt0.c0, vt1.c0))<>((vt0.c1, vt1.c0))) AS INTEGER));
SELECT ALL * FROM vt0, vt1 WHERE (((CAST((((vt0.c0, vt1.c0))>((vt0.c1, vt1.c0))) AS INTEGER))AND((vt0.c0 IN (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE ((vt0.c1 COLLATE NOCASE IN (vt0.c1 COLLATE NOCASE))) LIMIT 0X1;
SELECT ALL * FROM vt0, vt1 WHERE (CAST((((vt0.c0, vt1.c0))<>((vt0.c1, vt1.c0))) AS INTEGER));
SELECT ALL * FROM vt0, vt1 WHERE (((CAST((((vt0.c0, vt1.c0))>((vt0.c1, vt1.c0))) AS INTEGER))AND((vt0.c0 IN (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE ((vt0.c1 COLLATE NOCASE IN (vt0.c1 COLLATE NOCASE))) LIMIT 0X1;
SELECT MAX(vt1.c0) FROM vt0 INNER JOIN vt1 ON (vt0.c0 COLLATE RTRIM IN ((- (vt1.c0)))) WHERE (CASE x''  WHEN ((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (-1.656493811E9)) WHEN LIKELY(vt1.c0) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN 'R' COLLATE BINARY THEN ((vt0.c1) NOT NULL) ELSE (((vt1.c0, vt0.c1, 'E')) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c1))) END);
SELECT ALL MAX(vt1.c0) FROM vt0 INNER JOIN vt1 ON (vt0.c0 COLLATE RTRIM IN ((- (vt1.c0)))) WHERE (CASE x''  WHEN ((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (-1.656493811E9)) WHEN LIKELY(vt1.c0) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN 'R' COLLATE BINARY THEN ((vt0.c1) NOT NULL) ELSE (((vt1.c0, vt0.c1, 'E')) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c1))) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1 COLLATE NOCASE)AND(CAST(vt0.c1 AS REAL))))AND(0.3865843824536713))  NULLS LAST, (CAST(vt0.c0 AS NUMERIC) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)AND(((vt0.c1)/(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))))) ORDER BY ((((vt0.c1 COLLATE NOCASE)AND(CAST(vt0.c1 AS REAL))))AND(0.3865843824536713))  NULLS LAST, (CAST(vt0.c0 AS NUMERIC) IN ()) DESC  NULLS LAST LIMIT 0x1;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (json_valid(vt0.c0)) AND (((((vt0.c0)AND(NULL)))AND(vt0.c1))))) ORDER BY INSTR((vt0.c0 IN (vt0.c1)), json_quote(vt0.c1)) DESC, (((vt0.c1)-(vt0.c0)) IN ());
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (json_valid(vt0.c0)) AND (((((vt0.c0)AND(NULL)))AND(vt0.c1))))) ORDER BY 0.6564063938704683, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0))))) ASC LIMIT 3;
SELECT ALL * FROM vt1 WHERE (0.7193032235461908) ORDER BY CASE (- (vt1.c0))  WHEN ((vt1.c0)<=(vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN (NULL IN (0x7aaaba03)) THEN (((((((('0.8166922048681287')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 THEN vt1.c0 WHEN ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN ((NULL)==(vt1.c0)) THEN '1736832800' END ASC, ((((((vt1.c0) NOTNULL))AND(((x'')GLOB(vt1.c0)))))OR(CAST('G>f
f+q{' AS REAL))), (((vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0, vt1.c0))<=((vt1.c0, x''))), x'42a0cc' COLLATE RTRIM)) AND (((vt1.c0 IN (vt1.c0)), TYPEOF(DISTINCT vt1.c0)))) DESC, NULL  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE (0.7193032235461908) ORDER BY ((0.8795648975519511 COLLATE RTRIM) NOT NULL), ((vt1.c0) IS FALSE) COLLATE RTRIM, ROUND(vt1.c0, ((vt1.c0)||(vt1.c0)))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt1 WHERE (0.7193032235461908) ORDER BY CASE (- (vt1.c0))  WHEN ((vt1.c0)<=(vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN (NULL IN (0x7aaaba03)) THEN (((((((('0.8166922048681287')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 THEN vt1.c0 WHEN ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN ((NULL)==(vt1.c0)) THEN '1736832800' END ASC, ((((((vt1.c0) NOTNULL))AND(((x'')GLOB(vt1.c0)))))OR(CAST('G>f
f+q{' AS REAL))), (((vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0, vt1.c0))<=((vt1.c0, x''))), x'42a0cc' COLLATE RTRIM)) AND (((vt1.c0 IN (vt1.c0)), TYPEOF(DISTINCT vt1.c0)))) DESC, NULL  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE (0.7193032235461908) ORDER BY ((0.8795648975519511 COLLATE RTRIM) NOT NULL), ((vt1.c0) IS FALSE) COLLATE RTRIM, ROUND(vt1.c0, ((vt1.c0)||(vt1.c0)))  NULLS FIRST LIMIT 1;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c1) NOT NULL)) NOT NULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE (((((vt0.c1) NOT NULL)) NOT NULL)) LIMIT 2;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c1) NOT NULL)) NOT NULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE (((((vt0.c1) NOT NULL)) NOT NULL)) LIMIT 2;
SELECT * FROM vt0 WHERE (((((((((vt0.c1)AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(TIME(-603928111, 0.525488352136747, x''))))OR((NULL IN (vt0.c0)))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c1)AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(TIME(-603928111, 0.525488352136747, x''))))OR((NULL IN (vt0.c0)))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((((((NULL)OR((~ (vt0.c1)))))AND((vt0.c1 IN (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(vt0.c0)) ASC, CAST(((0.3215590258588549) ISNULL) AS TEXT)  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((((((((((NULL)OR((~ (vt0.c1)))))AND((vt0.c1 IN (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(vt0.c0)) ASC, CAST(((0.3215590258588549) ISNULL) AS TEXT)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((vt0.c1)AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(TIME(-603928111, 0.525488352136747, x''))))OR((NULL IN (vt0.c0)))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c1)AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(TIME(-603928111, 0.525488352136747, x''))))OR((NULL IN (vt0.c0)))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((((((NULL)OR((~ (vt0.c1)))))AND((vt0.c1 IN (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(vt0.c0)) ASC, CAST(((0.3215590258588549) ISNULL) AS TEXT)  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((((((((((NULL)OR((~ (vt0.c1)))))AND((vt0.c1 IN (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(vt0.c0)) ASC, CAST(((0.3215590258588549) ISNULL) AS TEXT)  NULLS FIRST;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (vt0.c0) ORDER BY (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(vt0.c0)))OR(QUOTE(x'06ec')))  NULLS FIRST, (((((vt0.c0)AND(vt0.c0)), CAST(vt0.c1 AS TEXT)))<((vt0.c1 COLLATE BINARY, CAST(vt0.c1 AS REAL)))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((vt0.c0)AND(((vt0.c1)&(((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'd1'))))))) ORDER BY CAST((vt0.c1 IN ()) AS BLOB) DESC, HEX(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))), x'17' DESC INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((LIKE(vt0.c1, vt0.c0, '0')) IS TRUE)) ORDER BY CAST((vt0.c1 IN ()) AS BLOB) DESC, HEX(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))), x'17' DESC;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ((('ZG*^Q	<6')IS NOT((+ (vt1.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(vt1.c0 COLLATE NOCASE)), (((((((((((vt1.c0)) NOT BETWEEN (('tWn')) AND ((vt1.c0))))OR(((vt1.c0) IS FALSE))))OR(UNLIKELY(DISTINCT vt1.c0))))AND(CAST(vt1.c0 AS TEXT))))AND(UNLIKELY(DISTINCT vt1.c0))) ASC;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ((((('ZG*^Q	<6')IS NOT((+ (vt1.c0)))))AND((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())))) ORDER BY (((- ('-331435292')))|(CAST(vt1.c0 AS BLOB))), (((vt1.c0, vt1.c0)) BETWEEN ((((1979604771)*(vt1.c0)), (~ (vt1.c0)))) AND (((vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ASC  NULLS LAST INTERSECT SELECT MIN(vt1.c0) FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('-469058079', vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))OR(vt1.c0)))AND('-1624196834'))) ORDER BY (((- ('-331435292')))|(CAST(vt1.c0 AS BLOB))), (((vt1.c0, vt1.c0)) BETWEEN ((((0X75fe5f23)*(vt1.c0)), (~ (vt1.c0)))) AND (((vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ASC  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) NOTNULL) THEN CAST(vt1.c0 AS REAL) WHEN (vt1.c0 IN (vt1.c0)) THEN NULL WHEN (~ (vt1.c0)) THEN 0.8948085910058595 WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)&(vt1.c0)) END) ORDER BY ((((vt1.c0)>(NULL)))&(((vt1.c0)&(vt1.c0)))) ASC  NULLS FIRST, ((CAST(vt1.c0 AS BLOB)) BETWEEN (vt1.c0) AND (((vt1.c0)>(vt1.c0))));
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) NOTNULL) THEN CAST(vt1.c0 AS REAL) WHEN (vt1.c0 IN (vt1.c0)) THEN NULL WHEN (~ (vt1.c0)) THEN 0.8948085910058595 WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)&(vt1.c0)) END) ORDER BY ((((vt1.c0)>(NULL)))&(((vt1.c0)&(vt1.c0)))) ASC  NULLS FIRST, ((CAST(vt1.c0 AS BLOB)) BETWEEN (vt1.c0) AND (((vt1.c0)>(vt1.c0)))) LIMIT 0;
SELECT * FROM vt0 WHERE (LIKELIHOOD(NULL, ((x'')%(1385726106)))) ORDER BY (vt0.c0 IN (vt0.c1)) COLLATE RTRIM ASC, TOTAL_CHANGES() DESC;
SELECT DISTINCT * FROM vt0 WHERE (((LIKELIHOOD(NULL, ((x'')%(1385726106))))AND(((((((((((vt0.c0)==(vt0.c0)))OR((+ (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS REAL))))AND((- (vt0.c0))))))) ORDER BY x'', '-250245457' ASC  NULLS FIRST LIMIT 0;
SELECT * FROM vt0 WHERE (LIKELIHOOD(NULL, ((x'')%(1385726106)))) ORDER BY (vt0.c0 IN (vt0.c1)) COLLATE RTRIM ASC, TOTAL_CHANGES() DESC;
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST((((vt0.c0))==((vt0.c1))) AS NUMERIC) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST((((vt0.c0))==((vt0.c1))) AS NUMERIC) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((vt0.c1 IN (CAST(vt0.c1 AS BLOB), (vt0.c1 IN ()), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY CAST((((vt0.c0))==((vt0.c1))) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST((((vt0.c0))==((vt0.c1))) AS NUMERIC) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST((((vt0.c0))==((vt0.c1))) AS NUMERIC) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((vt0.c1 IN (CAST(vt0.c1 AS BLOB), (vt0.c1 IN ()), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY CAST((((vt0.c0))==((vt0.c1))) AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)>=(CASE WHEN vt0.c1 THEN NULL END)) ASC, (((vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1)-(vt0.c0)), (((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))))) AND ((-2.130026726E9, CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, (((((vt0.c1, vt0.c1))>((vt0.c0, vt0.c0)))) IS TRUE) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOTNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)>=(CASE WHEN vt0.c1 THEN NULL END)) ASC, (((vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1)-(vt0.c0)), (((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))))) AND ((-2.130026726E9, CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, (((((vt0.c1, vt0.c1))>((vt0.c0, vt0.c0)))) IS TRUE) DESC LIMIT 0x2;
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)>=(CASE WHEN vt0.c1 THEN NULL END)) ASC, (((vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1)-(vt0.c0)), (((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))))) AND ((-2.130026726E9, CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, (((((vt0.c1, vt0.c1))>((vt0.c0, vt0.c0)))) IS TRUE) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOTNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)>=(CASE WHEN vt0.c1 THEN NULL END)) ASC, (((vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1)-(vt0.c0)), (((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))))) AND ((-2.130026726E9, CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, (((((vt0.c1, vt0.c1))>((vt0.c0, vt0.c0)))) IS TRUE) DESC LIMIT 0x2;
SELECT * FROM vt0 WHERE (((((vt0.c1, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((0Xffffffff803b9e20, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c1))) IN ((('-950258986') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)<>(vt0.c1)))) ASC, 'K#az%4' ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c1, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((-2143576544, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c1))) IN ((('-950258986') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)!=(vt0.c1)))) ASC, 'K#az%4' ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c1, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((0Xffffffff803b9e20, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c1))) IN ((('-950258986') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)<>(vt0.c1)))) ASC, 'K#az%4' ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c1, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((-2143576544, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c1))) IN ((('-950258986') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)!=(vt0.c1)))) ASC, 'K#az%4' ASC  NULLS LAST;
SELECT MAX(vt0.c0) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 'X?C6Dj
,' END)<(((vt0.c0)-(vt0.c1)))));
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 'X?C6Dj
,' END)<(((vt0.c0)-(vt0.c1))))) INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM vt1 WHERE (LAST_INSERT_ROWID());
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((LAST_INSERT_ROWID())AND((- (vt1.c0)) COLLATE BINARY))) LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT NULL)) LIMIT 0x1;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN (((vt0.c0) NOTNULL))));
SELECT MAX(vt0.c0) FROM vt0 WHERE ((((((vt0.c0)>(vt0.c0)) IN (((vt0.c0) NOTNULL))))AND((+ (CAST('' AS BLOB)))))) LIMIT 0x2 INTERSECT SELECT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c0)<(((vt0.c1) ISNULL)))) LIMIT 0X2;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)AND((((((((((vt1.c0 IN ()))OR((+ (6.529359E8)))))OR(((vt1.c0)<(vt1.c0)))))AND(LOWER(vt1.c0))))AND(((((((0Xffffffffe35b6cf5)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))))) ORDER BY CAST(x'37f6' AS TEXT)  NULLS FIRST LIMIT 2 INTERSECT SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)>>((- (0xcbe49c9))))) ORDER BY CAST(x'37f6' AS TEXT)  NULLS FIRST LIMIT 0X2;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((COALESCE(DISTINCT vt0.c0, vt1.c0, vt0.c1)) IS FALSE));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((((COALESCE(DISTINCT vt0.c0, vt1.c0, vt0.c1)) IS FALSE))AND((((vt1.c0, vt1.c0))>=((vt1.c0, vt0.c0))) COLLATE BINARY))) LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt0.c1 THEN x'17ec5d' WHEN RTRIM(vt0.c1) THEN ('961685841' IN (vt0.c1)) WHEN ('-1700778253' IN (vt0.c1)) THEN vt0.c1 COLLATE NOCASE END) LIMIT 0X0;
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.31285842003320163 END)>=(TRIM(vt1.c0, vt1.c0))));
SELECT ALL * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.31285842003320163 END)>=(TRIM(vt1.c0, vt1.c0))))AND(((vt1.c0)IS(vt1.c0)) COLLATE NOCASE))) ORDER BY ((((vt1.c0)!=(NULL))) ISNULL)  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) ORDER BY ((((vt1.c0)!=(NULL))) ISNULL)  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.31285842003320163 END)>=(TRIM(vt1.c0, vt1.c0))));
SELECT ALL * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.31285842003320163 END)>=(TRIM(vt1.c0, vt1.c0))))AND(((vt1.c0)IS(vt1.c0)) COLLATE NOCASE))) ORDER BY ((((vt1.c0)!=(NULL))) ISNULL)  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) ORDER BY ((((vt1.c0)!=(NULL))) ISNULL)  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS REAL))+(((vt1.c0)|(vt0.c0)))) WHERE (-6.48768732E8) ORDER BY CAST(((((vt0.c0)AND(vt1.c0)))AND(vt0.c1)) AS TEXT) DESC, CAST((((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) AS REAL);
SELECT * FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS REAL))+(((vt1.c0)|(vt0.c0)))) WHERE (-6.48768732E8) ORDER BY (+ (((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS REAL))+(((vt1.c0)|(vt0.c0)))) WHERE (-6.48768732E8) ORDER BY CAST(((((vt0.c0)AND(vt1.c0)))AND(vt0.c1)) AS TEXT) DESC, CAST((((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) AS REAL);
SELECT * FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS REAL))+(((vt1.c0)|(vt0.c0)))) WHERE (-6.48768732E8) ORDER BY (+ (((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY LOWER(((vt1.c0)+(NULL))), ((vt1.c0 COLLATE NOCASE) BETWEEN (((NULL)AND(vt1.c0))) AND ((- (vt1.c0))))  NULLS LAST, (+ (CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(((vt1.c0)%(vt1.c0)) AS REAL)))) ORDER BY LOWER(((vt1.c0)+(NULL))), ((vt1.c0 COLLATE NOCASE) BETWEEN (((NULL)AND(vt1.c0))) AND ((- (vt1.c0))))  NULLS LAST, (+ (CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST LIMIT 0x1;
SELECT * FROM vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY LOWER(((vt1.c0)+(NULL))), ((vt1.c0 COLLATE NOCASE) BETWEEN (((NULL)AND(vt1.c0))) AND ((- (vt1.c0))))  NULLS LAST, (+ (CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(((vt1.c0)%(vt1.c0)) AS REAL)))) ORDER BY LOWER(((vt1.c0)+(NULL))), ((vt1.c0 COLLATE NOCASE) BETWEEN (((NULL)AND(vt1.c0))) AND ((- (vt1.c0))))  NULLS LAST, (+ (CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST LIMIT 0x1;
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (NULL) AND ((vt1.c0 IN ())))) ORDER BY CAST(((x'') ISNULL) AS INTEGER)  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c1) FROM vt0, vt1 WHERE (((((vt1.c0 COLLATE BINARY) NOT BETWEEN (NULL) AND ((vt1.c0 IN ()))))AND(x'a9'))) ORDER BY ((((((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))) NOT BETWEEN ((vt0.c0 IN (vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt0.c1) AND ('1139552051')))) ASC, (- (((((vt0.c1)AND(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (0.04606715824616292) AND (((0.2720532409054419) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (0.04606715824616292) AND (((0.2720532409054419) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY NULL DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt1 WHERE ((+ ((((vt1.c0, '-1606587938', vt1.c0))>((vt1.c0, vt1.c0, x''))))));
SELECT * FROM vt1 WHERE ((((+ ((((vt1.c0, '-1606587938', vt1.c0))>((vt1.c0, vt1.c0, x''))))))AND(((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(x'')))AND(vt1.c0))) IS TRUE))));
SELECT * FROM vt1 WHERE ((+ ((((vt1.c0, '-1606587938', vt1.c0))>((vt1.c0, vt1.c0, x''))))));
SELECT * FROM vt1 WHERE ((((+ ((((vt1.c0, '-1606587938', vt1.c0))>((vt1.c0, vt1.c0, x''))))))AND(((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(x'')))AND(vt1.c0))) IS TRUE))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))IS NOT((~ (vt1.c0))))) ORDER BY 0.6266402129749624 DESC, ((((((CAST(vt1.c0 AS TEXT))AND(((vt0.c0)=(vt1.c0)))))AND(MIN(vt0.c1, vt0.c1))))AND(((vt0.c1)OR(vt0.c0)))) DESC, (- ((NOT (vt1.c0))))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))IS NOT((~ (vt1.c0))))) ORDER BY 0.6266402129749624 DESC, ((((((CAST(vt1.c0 AS TEXT))AND(((vt0.c0)=(vt1.c0)))))AND(MIN(vt0.c1, vt0.c1))))AND(((vt0.c1)OR(vt0.c0)))) DESC, (- ((NOT (vt1.c0))))  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE ((((+ (0.0075527239610586605)))>(((vt1.c0)IS NOT(vt0.c0))))) ORDER BY 0.6266402129749624 DESC, ((((((CAST(vt1.c0 AS TEXT))AND(((vt0.c0)=(vt1.c0)))))AND(MIN(vt0.c1, vt0.c1))))AND(((vt0.c1)OR(vt0.c0)))) DESC, (- ((NOT (vt1.c0))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))IS NOT((~ (vt1.c0))))) ORDER BY 0.6266402129749624 DESC, ((((((CAST(vt1.c0 AS TEXT))AND(((vt0.c0)=(vt1.c0)))))AND(MIN(vt0.c1, vt0.c1))))AND(((vt0.c1)OR(vt0.c0)))) DESC, (- ((NOT (vt1.c0))))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))IS NOT((~ (vt1.c0))))) ORDER BY 0.6266402129749624 DESC, ((((((CAST(vt1.c0 AS TEXT))AND(((vt0.c0)=(vt1.c0)))))AND(MIN(vt0.c1, vt0.c1))))AND(((vt0.c1)OR(vt0.c0)))) DESC, (- ((NOT (vt1.c0))))  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE ((((+ (0.0075527239610586605)))>(((vt1.c0)IS NOT(vt0.c0))))) ORDER BY 0.6266402129749624 DESC, ((((((CAST(vt1.c0 AS TEXT))AND(((vt0.c0)=(vt1.c0)))))AND(MIN(vt0.c1, vt0.c1))))AND(((vt0.c1)OR(vt0.c0)))) DESC, (- ((NOT (vt1.c0))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE (0.04408045272755168);
SELECT ALL * FROM vt1, vt0 WHERE (((0.04408045272755168)AND((- (((vt0.c1) NOT NULL)))))) LIMIT 0 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (NULL) LIMIT 0X0;
SELECT ALL * FROM vt1, vt0 WHERE (0.04408045272755168);
SELECT ALL * FROM vt1, vt0 WHERE (((0.04408045272755168)AND((- (((vt0.c1) NOT NULL)))))) LIMIT 0 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (NULL) LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1 COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1 COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM) ORDER BY (((vt0.c0, vt0.c1)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)))) AND ((((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)), '-1656493811')))  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((SQLITE_COMPILEOPTION_GET(vt0.c1) IN (vt0.c0 COLLATE RTRIM))) ORDER BY (((vt0.c0, vt0.c1)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)))) AND ((((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)), '-1656493811')))  NULLS FIRST;
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN (~ (vt0.c0)) THEN (('-1420023627') NOT NULL) WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN (~ (vt0.c0)) WHEN (((vt1.c0))!=((vt1.c0))) THEN ((vt0.c0) NOT NULL) ELSE CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END END);
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (((CASE ((vt0.c0) NOTNULL)  WHEN (~ (vt0.c0)) THEN (('-1420023627') NOT NULL) WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN (~ (vt0.c0)) WHEN (((vt1.c0))!=((vt1.c0))) THEN ((vt0.c0) NOT NULL) ELSE CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END END)AND(((((((((vt1.c0)AND(vt1.c0)))OR((((vt1.c0, vt0.c1, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, NULL, vt0.c0))))))OR(CAST(vt1.c0 AS TEXT))))AND(vt1.c0 COLLATE NOCASE))))) INTERSECT SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE ((vt0.c0 IN ()));
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE (((((((rtreenode(vt0.c1, vt0.c1))AND(((vt0.c0) BETWEEN (vt1.c0) AND (x'')))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (x'528e')))))OR((((vt1.c0, vt0.c1, vt0.c0))!=((-2.44010617E8, vt1.c0, vt0.c0))))));
SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE (((((((rtreenode(vt0.c1, vt0.c1))AND(((vt0.c0) BETWEEN (vt1.c0) AND (x'')))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (x'528e')))))OR((((vt1.c0, vt0.c1, vt0.c0))<>((-2.44010617E8, vt1.c0, vt0.c0)))))) ORDER BY 0.47721779608936776, CASE ((vt0.c1)<('0.19388439680507563'))  WHEN vt1.c0 THEN ((vt1.c0) IS FALSE) ELSE (0.3977384911823134 IN (vt0.c1)) END  NULLS LAST, (((vt0.c1, vt1.c0)) BETWEEN ((((vt1.c0)+(vt1.c0)), vt1.c0)) AND ((LOWER(vt1.c0), ((vt1.c0) NOT BETWEEN (0.3124901427017963) AND (vt1.c0))))) DESC LIMIT 3;
SELECT MIN(vt1.c0) FROM vt1 WHERE (NULLIF(x'b5', ((vt1.c0) IS FALSE))) ORDER BY vt1.c0  NULLS FIRST, (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-648768732' WHEN vt1.c0 THEN '' ELSE 'RT HZ<Q' END IN (CAST(NULL AS INTEGER), CASE WHEN vt1.c0 THEN vt1.c0 END));
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (NULLIF(x'b5', ((vt1.c0) IS FALSE))) ORDER BY vt1.c0  NULLS FIRST, (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-648768732' WHEN vt1.c0 THEN '' ELSE 'RT HZ<Q' END IN (CAST(NULL AS INTEGER), CASE WHEN vt1.c0 THEN vt1.c0 END)) LIMIT 0X0 INTERSECT SELECT MIN(vt1.c0) FROM vt1 WHERE ('391877162') ORDER BY vt1.c0  NULLS FIRST, (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-648768732' WHEN vt1.c0 THEN '' ELSE 'RT HZ<Q' END IN (CAST(NULL AS INTEGER), CASE WHEN vt1.c0 THEN vt1.c0 END)) LIMIT 0X0;
SELECT ALL * FROM vt1, vt0 WHERE (2.065519183E9) ORDER BY (+ (vt1.c0)) ASC  NULLS FIRST, (((vt1.c0)-(vt0.c1)) IN ())  NULLS LAST, (TIME(vt0.c0, vt0.c1, '-16873888') IN (vt0.c0));
SELECT * FROM vt1, vt0 WHERE (((2.065519183E9)AND(vt0.c1))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) BETWEEN ('6Mx.	1O') AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT ALL * FROM vt1, vt0 WHERE (2.065519183E9) ORDER BY (+ (vt1.c0)) ASC  NULLS FIRST, (((vt1.c0)-(vt0.c1)) IN ())  NULLS LAST, (TIME(vt0.c0, vt0.c1, '-16873888') IN (vt0.c0));
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((+ (vt1.c0))) ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END  NULLS LAST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((((+ (vt1.c0)))AND((((vt1.c0)<>(vt1.c0)) IN (NULL))))) ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END  NULLS LAST INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c1)||(vt0.c1)) IN ()));
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1)||(vt0.c1)) IN ()))AND((((((((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, 'z縇r*l&!2ꗲ')) AND ((vt0.c1, x'ebd384'))))OR(ABS(vt0.c0))))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c1 COLLATE BINARY))))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ('㢲(_ZG0f');
SELECT * FROM vt0 WHERE ((((vt0.c1)||(vt0.c1)) IN ()));
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1)||(vt0.c1)) IN ()))AND((((((((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, 'z縇r*l&!2ꗲ')) AND ((vt0.c1, x'ebd384'))))OR(ABS(vt0.c0))))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c1 COLLATE BINARY))))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ('㢲(_ZG0f');
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) ISNULL)) ORDER BY CAST(CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN '0' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '?M' WHEN vt1.c0 THEN vt1.c0 END AS REAL), CASE (- (vt1.c0))  WHEN (((0.639753910978386, -3.5870832E7))>((vt1.c0, vt1.c0))) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE x'' END ASC;
SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) ISNULL))AND(((LOWER(DISTINCT vt1.c0))&(((vt1.c0)&(NULL))))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN '0' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '?M' WHEN vt1.c0 THEN vt1.c0 END AS REAL), CASE (- (vt1.c0))  WHEN (((0.639753910978386, -3.5870832E7))>((vt1.c0, vt1.c0))) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE x'' END ASC INTERSECT SELECT ALL * FROM vt1 WHERE (((COALESCE(vt1.c0, vt1.c0, vt1.c0))%((('1')%(vt1.c0))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN '0' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '?M' WHEN vt1.c0 THEN vt1.c0 END AS REAL), CASE (- (vt1.c0))  WHEN (((0.639753910978386, -3.5870832E7))>((vt1.c0, vt1.c0))) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE x'' END ASC;
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) ISNULL)) ORDER BY CAST(CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN '0' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '?M' WHEN vt1.c0 THEN vt1.c0 END AS REAL), CASE (- (vt1.c0))  WHEN (((0.639753910978386, -3.5870832E7))>((vt1.c0, vt1.c0))) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE x'' END ASC;
SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) ISNULL))AND(((LOWER(DISTINCT vt1.c0))&(((vt1.c0)&(NULL))))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN '0' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '?M' WHEN vt1.c0 THEN vt1.c0 END AS REAL), CASE (- (vt1.c0))  WHEN (((0.639753910978386, -3.5870832E7))>((vt1.c0, vt1.c0))) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE x'' END ASC INTERSECT SELECT ALL * FROM vt1 WHERE (((COALESCE(vt1.c0, vt1.c0, vt1.c0))%((('1')%(vt1.c0))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN '0' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '?M' WHEN vt1.c0 THEN vt1.c0 END AS REAL), CASE (- (vt1.c0))  WHEN (((0.639753910978386, -3.5870832E7))>((vt1.c0, vt1.c0))) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE x'' END ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE (vt0.c1) LIMIT 0;
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE (vt0.c1) LIMIT 0;
SELECT * FROM vt0, vt1 WHERE (-1640830793);
SELECT DISTINCT * FROM vt0, vt1 WHERE (-1640830793) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))<=((vt0.c1)))) AND (((vt1.c0) ISNULL))));
SELECT * FROM vt0, vt1 WHERE (-1640830793);
SELECT DISTINCT * FROM vt0, vt1 WHERE (-1640830793) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))<=((vt0.c1)))) AND (((vt1.c0) ISNULL))));
SELECT ALL MIN(vt0.c1) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)+('-1639596333'))) NOTNULL) WHERE (((((((((CASE vt1.c0  WHEN vt0.c1 THEN x'731f' END)AND(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt1.c0 IN (vt1.c0)))))OR((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON ((((vt1.c0)+('-1639596333'))) NOTNULL) WHERE (((((((((CASE vt1.c0  WHEN vt0.c1 THEN x'731f' END)AND(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt1.c0 IN (vt1.c0)))))OR((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0)))))) ORDER BY x'ae' ASC  NULLS LAST, (NULL IN (((vt1.c0)<(vt0.c0)), ((vt0.c1) ISNULL), ((vt1.c0)>>(vt0.c1)))) ASC, CASE ((((x'bc')OR(vt0.c1)))AND(vt0.c0))  WHEN ((((((vt1.c0)AND(0.16842522958776485)))AND(vt0.c1)))AND(vt0.c0)) THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)) WHEN ((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END WHEN ((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN SQLITE_VERSION() THEN CAST(vt1.c0 AS REAL) ELSE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((x'b4')+(0.8212494687396943)));
SELECT ALL * FROM vt1, vt0 WHERE (((x'b4')+(0.8212494687396943)));
SELECT * FROM vt1, vt0 WHERE (((x'b4')+(0.8212494687396943)));
SELECT ALL * FROM vt1, vt0 WHERE (((x'b4')+(0.8212494687396943)));
SELECT MIN(vt0.c1) FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c1) NOTNULL) COLLATE RTRIM WHERE (((((((((((vt0.c0)/(vt0.c0)))OR((((vt0.c0))<=((vt0.c1))))))OR(vt0.c1 COLLATE NOCASE)))OR(LIKE(vt0.c0, -517599695, 'D'))))AND(NULLIF(DISTINCT vt0.c0, vt0.c1))));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c1) NOTNULL) COLLATE RTRIM WHERE (((((((((((vt0.c0)/(vt0.c0)))OR((((vt0.c0))<=((vt0.c1))))))OR(vt0.c1 COLLATE NOCASE)))OR(LIKE(vt0.c0, 0Xffffffffe1260e31, 'D'))))AND(NULLIF(DISTINCT vt0.c0, vt0.c1)))) LIMIT 0;
SELECT MAX(vt1.c0) FROM vt1 WHERE (((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)GLOB(vt1.c0)))))OR(CASE WHEN NULL THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN -1809388683 THEN 0.4621420561487223 ELSE vt1.c0 END)))OR(LOWER(vt1.c0)))) ORDER BY ((x'15') IS FALSE)  NULLS LAST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)GLOB(vt1.c0)))))OR(CASE WHEN NULL THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN -1809388683 THEN 0.4621420561487223 ELSE vt1.c0 END)))OR(LOWER(vt1.c0))))AND(((vt1.c0 COLLATE RTRIM) NOT NULL)))) ORDER BY ((x'15') IS FALSE)  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (x'') ORDER BY ((x'15') IS FALSE)  NULLS LAST LIMIT 0X2;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((((((vt0.c0, vt0.c0))==((vt0.c0, vt0.c0))))=(((vt0.c0)<<(vt0.c1))))) ORDER BY ((json_array(vt0.c1, vt0.c0)) NOTNULL) ASC;
SELECT MAX(vt0.c0) FROM vt0 WHERE ((((((vt0.c0, vt0.c0))==((vt0.c0, vt0.c0))))=(((vt0.c0)<<(vt0.c1))))) ORDER BY ((json_array(vt0.c1, vt0.c0)) NOTNULL) ASC INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (CASE ''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE) ORDER BY ((json_array(vt0.c1, vt0.c0)) NOTNULL) ASC;
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE ((((vt0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c1) NOT NULL), vt0.c1)) AND ((CAST(vt1.c0 AS INTEGER), CASE vt1.c0  WHEN vt0.c1 THEN x'' WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY (((((NULL)!=(vt1.c0))))<(((((vt1.c0, vt0.c1))>((vt0.c1, vt0.c1)))))) DESC  NULLS LAST, ((((((((vt0.c1)AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c1 COLLATE NOCASE)))OR(x'6e')) DESC, (((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, '2048189065')) AND ((vt0.c1, vt0.c0))) COLLATE BINARY DESC  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c1) FROM vt0, vt1 WHERE ((((vt0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c1) NOT NULL), vt0.c1)) AND ((CAST(vt1.c0 AS INTEGER), CASE vt1.c0  WHEN vt0.c1 THEN x'' WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY vt0.c1, CAST(((vt1.c0)AND(vt1.c0)) AS INTEGER)  NULLS FIRST, (((vt1.c0, vt0.c1)) BETWEEN ((SQLITE_COMPILEOPTION_USED(vt0.c1), (((NULL, vt0.c1, vt1.c0)) BETWEEN ((NULL, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))) AND ((CAST(vt0.c0 AS REAL), LIKELY('381424421'))))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0, vt1 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR(vt0.c1 COLLATE RTRIM)))AND(((vt0.c1)<=(vt1.c0))))) ORDER BY vt0.c1, CAST(((vt1.c0)AND(vt1.c0)) AS INTEGER)  NULLS FIRST, (((vt1.c0, vt0.c1)) BETWEEN ((SQLITE_COMPILEOPTION_USED(vt0.c1), (((NULL, vt0.c1, vt1.c0)) BETWEEN ((NULL, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))) AND ((CAST(vt0.c0 AS REAL), LIKELY('381424421'))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (NULL);
SELECT * FROM vt0, vt1 WHERE (((NULL)AND((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))))) LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (NULL);
SELECT * FROM vt0, vt1 WHERE (((NULL)AND((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))))) LIMIT 0;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (((((vt1.c0))<((vt0.c1)))) NOTNULL) WHERE ((((NULLIF(DISTINCT vt0.c1, vt0.c0), ((vt0.c0)IS NOT(vt0.c1))))>((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END, json_insert(vt0.c1, vt0.c0, vt1.c0, vt1.c0)))));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((((vt1.c0))<((vt0.c1)))) NOTNULL) WHERE ((((((NULLIF(DISTINCT vt0.c1, vt0.c0), ((vt0.c0)IS NOT(vt0.c1))))>((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END, json_insert(vt0.c1, vt0.c0, vt1.c0, vt1.c0)))))AND(((((CAST(vt0.c1 AS BLOB))AND((NOT ('-1e500')))))AND(CAST(vt0.c0 AS TEXT)))))) INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((((vt1.c0))<((vt0.c1)))) NOTNULL) WHERE ((NOT (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN '46522376' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '' END)));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (((((vt1.c0))<((vt0.c1)))) NOTNULL) WHERE ((((NULLIF(DISTINCT vt0.c1, vt0.c0), ((vt0.c0)IS NOT(vt0.c1))))>((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END, json_insert(vt0.c1, vt0.c0, vt1.c0, vt1.c0)))));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((((vt1.c0))<((vt0.c1)))) NOTNULL) WHERE ((((((NULLIF(DISTINCT vt0.c1, vt0.c0), ((vt0.c0)IS NOT(vt0.c1))))>((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END, json_insert(vt0.c1, vt0.c0, vt1.c0, vt1.c0)))))AND(((((CAST(vt0.c1 AS BLOB))AND((NOT ('-1e500')))))AND(CAST(vt0.c0 AS TEXT)))))) INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((((vt1.c0))<((vt0.c1)))) NOTNULL) WHERE ((NOT (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN '46522376' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '' END)));
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY LOWER(DISTINCT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c0))) DESC, ((((((((((vt0.c1)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))>>(LOWER(vt0.c1)))  NULLS LAST, ((((vt1.c0) IS TRUE)) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((((vt0.c1)AND(0.6892785173759045)))OR(vt0.c0))))  NULLS FIRST;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE (((vt1.c0)AND(((((((vt0.c0)>(vt0.c1)))OR((+ (vt0.c0)))))AND((~ (vt1.c0))))))) ORDER BY LOWER(DISTINCT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c0))) DESC, ((((((((((vt0.c1)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))>>(LOWER(vt0.c1)))  NULLS LAST, ((((vt1.c0) IS TRUE)) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((((vt0.c1)AND(0.6892785173759045)))OR(vt0.c0))))  NULLS FIRST LIMIT 4;
SELECT * FROM vt1 WHERE (CASE (vt1.c0 IN ())  WHEN ((vt1.c0) IS TRUE) THEN UNLIKELY(DISTINCT vt1.c0) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (NOT (vt1.c0)) ELSE x'72' END) ORDER BY (((vt1.c0 IN ()))<<(x'8b'));
SELECT DISTINCT * FROM vt1 WHERE (CASE (vt1.c0 IN ())  WHEN ((vt1.c0) IS TRUE) THEN UNLIKELY(DISTINCT vt1.c0) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (NOT (vt1.c0)) ELSE x'72' END) ORDER BY CAST(x'a8dc94' AS BLOB);
SELECT * FROM vt1 WHERE (CASE (vt1.c0 IN ())  WHEN ((vt1.c0) IS TRUE) THEN UNLIKELY(DISTINCT vt1.c0) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (NOT (vt1.c0)) ELSE x'72' END) ORDER BY (((vt1.c0 IN ()))<<(x'8b'));
SELECT DISTINCT * FROM vt1 WHERE (CASE (vt1.c0 IN ())  WHEN ((vt1.c0) IS TRUE) THEN UNLIKELY(DISTINCT vt1.c0) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (NOT (vt1.c0)) ELSE x'72' END) ORDER BY CAST(x'a8dc94' AS BLOB);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)|(vt1.c0)) COLLATE BINARY) ORDER BY (NOT (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) ASC  NULLS FIRST, x'643f' DESC, CAST((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS REAL) ASC;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0)|(vt1.c0)) COLLATE BINARY) ORDER BY PRINTF((((vt1.c0, vt0.c0))>((vt0.c0, vt0.c0))))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT NULL) DESC, (((LOWER(DISTINCT vt1.c0)))>(((- (vt0.c0)))))  NULLS LAST, vt1.c0  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)|(vt1.c0)) COLLATE BINARY) ORDER BY (NOT (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) ASC  NULLS FIRST, x'643f' DESC, CAST((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS REAL) ASC;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0)|(vt1.c0)) COLLATE BINARY) ORDER BY PRINTF((((vt1.c0, vt0.c0))>((vt0.c0, vt0.c0))))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT NULL) DESC, (((LOWER(DISTINCT vt1.c0)))>(((- (vt0.c0)))))  NULLS LAST, vt1.c0  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'4e')))AND(vt1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((((vt0.c1)LIKE(vt0.c0)), ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)), CAST(vt1.c0 AS TEXT)))=((NULL, ((0.4380416880462362)<<(0.8473434115260056)), ((vt1.c0) IS TRUE)))) DESC  NULLS FIRST, ((vt0.c1) NOTNULL)  NULLS FIRST, (((CAST(vt0.c1 AS INTEGER), ((vt0.c0)=(x'bb'))))<((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE x'0272' END, (((vt1.c0, vt0.c1, vt0.c0)) BETWEEN (('-576682769', vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'4e')))AND(vt1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))  WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'c5' THEN vt1.c0 WHEN NULL THEN vt0.c0 END THEN 'b' ELSE NULL END  NULLS FIRST, (((((((((('46522376')AND(CAST(vt1.c0 AS BLOB))))AND(0.7361552485194938)))AND((vt1.c0 IN ()))))OR(vt0.c1)))AND(CAST(0.23335642077941532 AS INTEGER))), ((((((((0.12935475182346645)OR(LIKELIHOOD(vt1.c0, vt0.c0))))OR(((vt0.c1)AND(vt0.c0)))))OR('-221136044')))OR(vt0.c0 COLLATE NOCASE)) ASC LIMIT 1 INTERSECT SELECT * FROM vt1, vt0 WHERE ((((((NULL, vt1.c0))>((vt0.c0, vt1.c0))))||((vt0.c1 IN ())))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))  WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'c5' THEN vt1.c0 WHEN NULL THEN vt0.c0 END THEN 'b' ELSE NULL END  NULLS FIRST, (((((((((('46522376')AND(CAST(vt1.c0 AS BLOB))))AND(0.7361552485194938)))AND((vt1.c0 IN ()))))OR(vt0.c1)))AND(CAST(0.23335642077941532 AS INTEGER))), ((((((((0.12935475182346645)OR(LIKELIHOOD(vt1.c0, vt0.c0))))OR(((vt0.c1)AND(vt0.c0)))))OR('-221136044')))OR(vt0.c0 COLLATE NOCASE)) ASC LIMIT 1;
SELECT * FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'4e')))AND(vt1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((((vt0.c1)LIKE(vt0.c0)), ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)), CAST(vt1.c0 AS TEXT)))=((NULL, ((0.4380416880462362)<<(0.8473434115260056)), ((vt1.c0) IS TRUE)))) DESC  NULLS FIRST, ((vt0.c1) NOTNULL)  NULLS FIRST, (((CAST(vt0.c1 AS INTEGER), ((vt0.c0)=(x'bb'))))<((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE x'0272' END, (((vt1.c0, vt0.c1, vt0.c0)) BETWEEN (('-576682769', vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'4e')))AND(vt1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))  WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'c5' THEN vt1.c0 WHEN NULL THEN vt0.c0 END THEN 'b' ELSE NULL END  NULLS FIRST, (((((((((('46522376')AND(CAST(vt1.c0 AS BLOB))))AND(0.7361552485194938)))AND((vt1.c0 IN ()))))OR(vt0.c1)))AND(CAST(0.23335642077941532 AS INTEGER))), ((((((((0.12935475182346645)OR(LIKELIHOOD(vt1.c0, vt0.c0))))OR(((vt0.c1)AND(vt0.c0)))))OR('-221136044')))OR(vt0.c0 COLLATE NOCASE)) ASC LIMIT 1 INTERSECT SELECT * FROM vt1, vt0 WHERE ((((((NULL, vt1.c0))>((vt0.c0, vt1.c0))))||((vt0.c1 IN ())))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))  WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'c5' THEN vt1.c0 WHEN NULL THEN vt0.c0 END THEN 'b' ELSE NULL END  NULLS FIRST, (((((((((('46522376')AND(CAST(vt1.c0 AS BLOB))))AND(0.7361552485194938)))AND((vt1.c0 IN ()))))OR(vt0.c1)))AND(CAST(0.23335642077941532 AS INTEGER))), ((((((((0.12935475182346645)OR(LIKELIHOOD(vt1.c0, vt0.c0))))OR(((vt0.c1)AND(vt0.c0)))))OR('-221136044')))OR(vt0.c0 COLLATE NOCASE)) ASC LIMIT 1;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))<<((((vt0.c0))==((vt0.c1)))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (((0x724e1420)=(vt0.c1))) AND ((((vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0))))) DESC, ((((((((((CAST(vt0.c1 AS REAL))AND(vt0.c0)))OR(vt0.c1)))AND(((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))))AND(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))))AND(((vt0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))<<((((vt0.c0))==((vt0.c1)))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (((0x724e1420)==(vt0.c1))) AND ((((vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0))))) DESC, ((((((((((CAST(vt0.c1 AS REAL))AND(vt0.c0)))OR(vt0.c1)))AND(((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))))AND(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))))AND(((vt0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))<<((((vt0.c0))==((vt0.c1)))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (((0x724e1420)=(vt0.c1))) AND ((((vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0))))) DESC, ((((((((((CAST(vt0.c1 AS REAL))AND(vt0.c0)))OR(vt0.c1)))AND(((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))))AND(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))))AND(((vt0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))<<((((vt0.c0))==((vt0.c1)))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (((0x724e1420)==(vt0.c1))) AND ((((vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0))))) DESC, ((((((((((CAST(vt0.c1 AS REAL))AND(vt0.c0)))OR(vt0.c1)))AND(((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))))AND(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))))AND(((vt0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c1 COLLATE RTRIM)==(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) WHERE ((((vt1.c0 IN (vt1.c0))) NOT BETWEEN (NULL) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY (('-950258986') ISNULL) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((vt0.c1 COLLATE RTRIM)==(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) WHERE ((((vt1.c0 IN (vt1.c0))) NOT BETWEEN (NULL) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS NUMERIC), json_valid((- (vt0.c1))) DESC  NULLS LAST, UPPER(DISTINCT ((vt1.c0) NOT NULL)) ASC INTERSECT SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((vt0.c1 COLLATE RTRIM)==(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) WHERE (CHANGES()) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS NUMERIC), json_valid((- (vt0.c1))) DESC  NULLS LAST, UPPER(DISTINCT ((vt1.c0) NOT NULL)) ASC;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c1 COLLATE RTRIM)==(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) WHERE ((((vt1.c0 IN (vt1.c0))) NOT BETWEEN (NULL) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY (('-950258986') ISNULL) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((vt0.c1 COLLATE RTRIM)==(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) WHERE ((((vt1.c0 IN (vt1.c0))) NOT BETWEEN (NULL) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS NUMERIC), json_valid((- (vt0.c1))) DESC  NULLS LAST, UPPER(DISTINCT ((vt1.c0) NOT NULL)) ASC INTERSECT SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((vt0.c1 COLLATE RTRIM)==(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) WHERE (CHANGES()) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS NUMERIC), json_valid((- (vt0.c1))) DESC  NULLS LAST, UPPER(DISTINCT ((vt1.c0) NOT NULL)) ASC;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE (CASE (vt1.c0 IN (vt0.c0, vt1.c0))  WHEN ((vt1.c0)>=(vt1.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN (~ (vt1.c0)) THEN json_insert(vt1.c0, vt1.c0, vt0.c1) ELSE ((vt1.c0)IS NOT(vt0.c0)) END);
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE (((CASE (vt1.c0 IN (vt0.c0, vt1.c0))  WHEN ((vt1.c0)>(vt1.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN (~ (vt1.c0)) THEN json_insert(vt1.c0, vt1.c0, vt0.c1) ELSE ((vt1.c0)IS NOT(vt0.c0)) END)AND(vt1.c0))) ORDER BY ((vt0.c1) ISNULL) COLLATE BINARY ASC LIMIT 0x0;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c1)*(vt0.c1)) AS BLOB));
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(((vt0.c1)*(vt0.c1)) AS BLOB))AND((('-2083788955') BETWEEN (((vt0.c1)>=(x''))) AND (CAST(vt1.c0 AS TEXT)))))) ORDER BY ((((((vt0.c0)+(vt0.c1)))AND(((vt0.c0)-(vt0.c1)))))OR(x'57ce'))  NULLS FIRST, ((((((((((((((((((vt0.c0) NOTNULL))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))AND(((vt0.c1)<(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN -621930537 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(TYPEOF(vt0.c1))))OR(-1525311217)))OR((((vt1.c0, vt1.c0, NULL, vt0.c0))>=((vt1.c0, vt1.c0, vt0.c0, vt1.c0))))))AND((((vt0.c1))!=((vt1.c0))))))AND((NOT (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c1)*(vt0.c1)) AS BLOB));
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(((vt0.c1)*(vt0.c1)) AS BLOB))AND((('-2083788955') BETWEEN (((vt0.c1)>=(x''))) AND (CAST(vt1.c0 AS TEXT)))))) ORDER BY ((((((vt0.c0)+(vt0.c1)))AND(((vt0.c0)-(vt0.c1)))))OR(x'57ce'))  NULLS FIRST, ((((((((((((((((((vt0.c0) NOTNULL))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))AND(((vt0.c1)<(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN -621930537 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(TYPEOF(vt0.c1))))OR(-1525311217)))OR((((vt1.c0, vt1.c0, NULL, vt0.c0))>=((vt1.c0, vt1.c0, vt0.c0, vt1.c0))))))AND((((vt0.c1))!=((vt1.c0))))))AND((NOT (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST(vt0.c0 AS BLOB) WHERE (((~ (vt0.c1)) IN (((vt1.c0)AND(vt1.c0))))) ORDER BY (~ (((vt1.c0)>(vt1.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST(vt0.c0 AS BLOB) WHERE (((~ (vt0.c1)) IN (((vt1.c0)AND(vt1.c0))))) ORDER BY (x'353870' IN ()) LIMIT 0x0;
SELECT ALL MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON ABS(CAST(vt0.c0 AS INTEGER)) WHERE (CAST(((vt1.c0) IS FALSE) AS TEXT)) ORDER BY (0.45037652956420937 COLLATE BINARY IN (((vt1.c0)IS(vt0.c0)))) DESC  NULLS FIRST, CAST(((vt1.c0) IS FALSE) AS TEXT) DESC  NULLS FIRST;
SELECT MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON ABS(CAST(vt0.c0 AS INTEGER)) WHERE (CAST(((vt1.c0) IS FALSE) AS TEXT)) ORDER BY CAST(((vt0.c1) NOTNULL) AS REAL)  NULLS FIRST LIMIT 1;
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE (STRFTIME(vt0.c0, vt0.c1, vt0.c1, vt0.c0) COLLATE NOCASE);
SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (STRFTIME(vt0.c0, vt0.c1, vt0.c1, vt0.c0) COLLATE NOCASE) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((- (vt0.c0))) AND (LIKELIHOOD(x'75', vt0.c0))) DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (NULL) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((- (vt0.c0))) AND (LIKELIHOOD(x'75', vt0.c0))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM vt1 INNER JOIN vt0 ON (((('R') NOT NULL))GLOB(((vt1.c0) NOTNULL))) WHERE ('tཏ%');
SELECT * FROM vt1 INNER JOIN vt0 ON (((('R') NOT NULL))GLOB(((vt1.c0) NOTNULL))) WHERE ('tཏ%') ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, (((vt0.c1, vt0.c0, vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)>=(vt1.c0)), 0.9742845885725898, ((x'')=(vt1.c0)), CAST(vt1.c0 AS TEXT))) AND ((CAST(vt0.c0 AS BLOB), STRFTIME(vt1.c0, vt0.c1, vt0.c1), (((vt1.c0, vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt1.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE NOCASE, ((vt1.c0)OR(vt0.c1))))) DESC INTERSECT SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((('R') NOT NULL))GLOB(((vt1.c0) NOTNULL))) WHERE (CAST(vt1.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, (((vt0.c1, vt0.c0, vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)>=(vt1.c0)), 0.9742845885725898, ((x'')=(vt1.c0)), CAST(vt1.c0 AS TEXT))) AND ((CAST(vt0.c0 AS BLOB), STRFTIME(vt1.c0, vt0.c1, vt0.c1), (((vt1.c0, vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt1.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE NOCASE, ((vt1.c0)OR(vt0.c1))))) DESC;
SELECT * FROM vt1 INNER JOIN vt0 ON (((('R') NOT NULL))GLOB(((vt1.c0) NOTNULL))) WHERE ('tཏ%');
SELECT * FROM vt1 INNER JOIN vt0 ON (((('R') NOT NULL))GLOB(((vt1.c0) NOTNULL))) WHERE ('tཏ%') ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, (((vt0.c1, vt0.c0, vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)>=(vt1.c0)), 0.9742845885725898, ((x'')=(vt1.c0)), CAST(vt1.c0 AS TEXT))) AND ((CAST(vt0.c0 AS BLOB), STRFTIME(vt1.c0, vt0.c1, vt0.c1), (((vt1.c0, vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt1.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE NOCASE, ((vt1.c0)OR(vt0.c1))))) DESC INTERSECT SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((('R') NOT NULL))GLOB(((vt1.c0) NOTNULL))) WHERE (CAST(vt1.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, (((vt0.c1, vt0.c0, vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)>=(vt1.c0)), 0.9742845885725898, ((x'')=(vt1.c0)), CAST(vt1.c0 AS TEXT))) AND ((CAST(vt0.c0 AS BLOB), STRFTIME(vt1.c0, vt0.c1, vt0.c1), (((vt1.c0, vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt1.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE NOCASE, ((vt1.c0)OR(vt0.c1))))) DESC;
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE (((STRFTIME(vt1.c0, vt0.c0, vt0.c1))GLOB((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) ORDER BY ((((vt1.c0)OR(vt0.c0)))OR('1043883576')) COLLATE RTRIM  NULLS LAST, ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) COLLATE BINARY DESC;
SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (((STRFTIME(vt1.c0, vt0.c0, vt0.c1))GLOB((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) ORDER BY ((TYPEOF(vt0.c1)) NOTNULL), CASE ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))  WHEN ((vt1.c0)<<(vt1.c0)) THEN (((vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1)) AND ((vt1.c0, vt0.c0))) ELSE vt0.c1 END  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((TYPEOF(vt0.c1)) NOTNULL), CASE ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))  WHEN ((vt1.c0)<<(vt1.c0)) THEN (((vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1)) AND ((vt1.c0, vt0.c0))) ELSE vt0.c1 END  NULLS FIRST LIMIT 0;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) NOT NULL)) ORDER BY LIKELY(DISTINCT (vt0.c1 IN (vt0.c0))) ASC;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) NOT NULL)) ORDER BY LIKELY(DISTINCT (vt0.c1 IN (vt0.c0))) ASC LIMIT 0X1 INTERSECT SELECT MAX(vt0.c1) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))IS NOT(ABS(DISTINCT vt0.c0)))) ORDER BY LIKELY(DISTINCT (vt0.c1 IN (vt0.c0))) ASC LIMIT 1;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN (((vt0.c1) IS TRUE))));
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN (((vt0.c1) IS TRUE))))AND((- (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))));
SELECT * FROM vt1 WHERE ((~ (((-1.656493811E9)IS(vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, CASE WHEN (- (vt1.c0)) THEN '-136740434' WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 COLLATE NOCASE ELSE (vt1.c0 IN ()) END DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((~ (((-1.656493811E9)IS(vt1.c0))))) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST, vt1.c0  NULLS LAST;
SELECT * FROM vt1 WHERE ((~ (((-1.656493811E9)IS(vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, CASE WHEN (- (vt1.c0)) THEN '-136740434' WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 COLLATE NOCASE ELSE (vt1.c0 IN ()) END DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((~ (((-1.656493811E9)IS(vt1.c0))))) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST, vt1.c0  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((((((+ (vt0.c1)))AND((~ (vt0.c1)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((+ (vt0.c1)))AND((~ (vt0.c1)))))AND(vt0.c0 COLLATE RTRIM)))AND(((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))-(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))))) ORDER BY (((CAST(NULL AS NUMERIC), HEX(DISTINCT vt1.c0)))<((((vt1.c0) NOTNULL), CAST(vt0.c0 AS NUMERIC)))), (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))GLOB((vt1.c0 IN (vt0.c1)))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0) ISNULL) IN ())) ORDER BY (((CAST(NULL AS NUMERIC), HEX(DISTINCT vt1.c0)))<((((vt1.c0) NOTNULL), CAST(vt0.c0 AS NUMERIC)))), (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))GLOB((vt1.c0 IN (vt0.c1)))) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM vt1, vt0 WHERE ((((((+ (vt0.c1)))AND((~ (vt0.c1)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((+ (vt0.c1)))AND((~ (vt0.c1)))))AND(vt0.c0 COLLATE RTRIM)))AND(((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))-(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))))) ORDER BY (((CAST(NULL AS NUMERIC), HEX(DISTINCT vt1.c0)))<((((vt1.c0) NOTNULL), CAST(vt0.c0 AS NUMERIC)))), (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))GLOB((vt1.c0 IN (vt0.c1)))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0) ISNULL) IN ())) ORDER BY (((CAST(NULL AS NUMERIC), HEX(DISTINCT vt1.c0)))<((((vt1.c0) NOTNULL), CAST(vt0.c0 AS NUMERIC)))), (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))GLOB((vt1.c0 IN (vt0.c1)))) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((x'') NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((((vt0.c0) NOTNULL), CAST(vt0.c1 AS REAL))))) ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c0)))|(NULL)), (((CASE WHEN NULL THEN vt0.c1 ELSE vt1.c0 END, CAST(vt0.c1 AS INTEGER), ((vt1.c0) NOT BETWEEN ('-2130026726') AND (vt0.c1))))<>((0.8750620943707796, ((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)), ((vt1.c0)>>(vt1.c0))))) DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((x'') NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((((vt0.c0) NOTNULL), CAST(vt0.c1 AS REAL))))) ORDER BY ((1229842873)>(((vt1.c0)>=(vt0.c1)))) DESC, (vt0.c1 IN ((((vt0.c1))==((vt0.c1)))));
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((x'') NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((((vt0.c0) NOTNULL), CAST(vt0.c1 AS REAL))))) ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c0)))|(NULL)), (((CASE WHEN NULL THEN vt0.c1 ELSE vt1.c0 END, CAST(vt0.c1 AS INTEGER), ((vt1.c0) NOT BETWEEN ('-2130026726') AND (vt0.c1))))<>((0.8750620943707796, ((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)), ((vt1.c0)>>(vt1.c0))))) DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((x'') NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((((vt0.c0) NOTNULL), CAST(vt0.c1 AS REAL))))) ORDER BY ((1229842873)>(((vt1.c0)>=(vt0.c1)))) DESC, (vt0.c1 IN ((((vt0.c1))==((vt0.c1)))));
SELECT * FROM vt1 WHERE (((((vt1.c0)-(x''))) BETWEEN (vt1.c0) AND (((vt1.c0)OR(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)-(x''))) BETWEEN (vt1.c0) AND (((vt1.c0)OR(vt1.c0))))) ORDER BY (((vt1.c0))>((vt1.c0))) COLLATE NOCASE DESC, ((CAST(vt1.c0 AS BLOB))<=(NULL)) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c0) IS TRUE) AS BLOB)) ORDER BY (((vt1.c0))>((vt1.c0))) COLLATE NOCASE DESC, ((CAST(vt1.c0 AS BLOB))<=(NULL)) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (((((vt1.c0)-(x''))) BETWEEN (vt1.c0) AND (((vt1.c0)OR(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)-(x''))) BETWEEN (vt1.c0) AND (((vt1.c0)OR(vt1.c0))))) ORDER BY (((vt1.c0))>((vt1.c0))) COLLATE NOCASE DESC, ((CAST(vt1.c0 AS BLOB))<=(NULL)) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c0) IS TRUE) AS BLOB)) ORDER BY (((vt1.c0))>((vt1.c0))) COLLATE NOCASE DESC, ((CAST(vt1.c0 AS BLOB))<=(NULL)) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT DISTINCT * FROM vt1 WHERE (((NULL)AND((((+ (']7T+丆'))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0) IS TRUE)))))) INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))>>(((((((((vt1.c0)OR(vt1.c0)))AND(42826612)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT DISTINCT * FROM vt1 WHERE (((NULL)AND((((+ (']7T+丆'))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0) IS TRUE)))))) INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))>>(((((((((vt1.c0)OR(vt1.c0)))AND(42826612)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT * FROM vt0 WHERE ((((('')AND(vt0.c0)))AND('10#f b')) COLLATE RTRIM) ORDER BY CASE WHEN ((vt0.c0)==(vt0.c1)) THEN vt0.c0 WHEN ((vt0.c0)=(vt0.c1)) THEN x'' END, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, (((((vt0.c0))<>((vt0.c1))))IS((vt0.c1 IN (vt0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((((('')AND(vt0.c0)))AND('10#f b')) COLLATE RTRIM)AND(((x'26') IS TRUE)))) ORDER BY vt0.c1  NULLS LAST;
SELECT * FROM vt0 WHERE ((((('')AND(vt0.c0)))AND('10#f b')) COLLATE RTRIM) ORDER BY CASE WHEN ((vt0.c0)==(vt0.c1)) THEN vt0.c0 WHEN ((vt0.c0)=(vt0.c1)) THEN x'' END, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, (((((vt0.c0))<>((vt0.c1))))IS((vt0.c1 IN (vt0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((((('')AND(vt0.c0)))AND('10#f b')) COLLATE RTRIM)AND(((x'26') IS TRUE)))) ORDER BY vt0.c1  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ((((vt1.c0, vt0.c0))=((vt0.c1, vt0.c1))))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ((((vt1.c0, vt0.c0))==((vt0.c1, vt0.c1)))))) ORDER BY ((CHANGES())LIKE((((vt0.c0, vt0.c0, 138274711, vt0.c1, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c1, vt1.c0)))))  NULLS FIRST, '1046298223' COLLATE NOCASE, (('6z\r>*')-(vt0.c1)) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((CHANGES())LIKE((((vt0.c0, vt0.c0, 0x83de797, vt0.c1, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c1, vt1.c0)))))  NULLS FIRST, '1046298223' COLLATE NOCASE, (('6z\r>*')-(vt0.c1)) LIMIT 0X0;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ((((vt1.c0, vt0.c0))=((vt0.c1, vt0.c1))))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ((((vt1.c0, vt0.c0))==((vt0.c1, vt0.c1)))))) ORDER BY ((CHANGES())LIKE((((vt0.c0, vt0.c0, 138274711, vt0.c1, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c1, vt1.c0)))))  NULLS FIRST, '1046298223' COLLATE NOCASE, (('6z\r>*')-(vt0.c1)) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((CHANGES())LIKE((((vt0.c0, vt0.c0, 0x83de797, vt0.c1, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0, vt0.c1, vt1.c0)))))  NULLS FIRST, '1046298223' COLLATE NOCASE, (('6z\r>*')-(vt0.c1)) LIMIT 0X0;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE ((((vt0.c0 IN ()))||(((((0X7f73880a)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((((vt0.c1)==(vt1.c0)))-((- (vt0.c1))))  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE ((((((vt0.c0 IN ()))||(((((2138277898)OR(vt1.c0)))OR(vt1.c0)))))AND((((- (vt1.c0)))IS NOT(((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))))))) ORDER BY ((vt0.c1)AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST, (((((vt1.c0, vt0.c0))>((vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt1.c0)IS(vt0.c1))))  NULLS FIRST, (((vt0.c1 IN (vt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT MIN(vt0.c1) FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((vt0.c1)AND(x''))) ORDER BY ((vt0.c0)<=((vt0.c1 IN (vt0.c1)))) DESC INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((NOT (((vt0.c0)AND(vt0.c1))))) ORDER BY ((vt0.c0)<=((vt0.c1 IN (vt0.c1)))) DESC;
SELECT * FROM vt0 WHERE ((('-734681191') NOTNULL));
SELECT * FROM vt0 WHERE ((('-734681191') NOTNULL)) LIMIT 5;
SELECT * FROM vt0 WHERE ((('-734681191') NOTNULL));
SELECT * FROM vt0 WHERE ((('-734681191') NOTNULL)) LIMIT 5;
SELECT * FROM vt1 WHERE ((((((vt1.c0)LIKE(vt1.c0))))<>((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))));
SELECT * FROM vt1 WHERE ((((((vt1.c0)LIKE(vt1.c0))))!=((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))) ORDER BY x'', ((GLOB(vt1.c0, '-2110638117')) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST LIMIT 0x1;
SELECT * FROM vt1 WHERE ((((((vt1.c0)LIKE(vt1.c0))))<>((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))));
SELECT * FROM vt1 WHERE ((((((vt1.c0)LIKE(vt1.c0))))!=((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))) ORDER BY x'', ((GLOB(vt1.c0, '-2110638117')) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST LIMIT 0x1;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((- (TRIM(DISTINCT vt0.c1, vt0.c0))));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((- (TRIM(DISTINCT vt0.c1, vt0.c0))))AND(((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) AND (((vt0.c0) NOTNULL)))))) ORDER BY ((((UNLIKELY(DISTINCT vt0.c1))AND(((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))))AND(((vt0.c1)AND(vt0.c1)))) DESC  NULLS FIRST, ((0.0010294982188797652)GLOB(((vt1.c0)>(vt1.c0))))  NULLS LAST LIMIT 2;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((- (TRIM(DISTINCT vt0.c1, vt0.c0))));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((- (TRIM(DISTINCT vt0.c1, vt0.c0))))AND(((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) AND (((vt0.c0) NOTNULL)))))) ORDER BY ((((UNLIKELY(DISTINCT vt0.c1))AND(((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))))AND(((vt0.c1)AND(vt0.c1)))) DESC  NULLS FIRST, ((0.0010294982188797652)GLOB(((vt1.c0)>(vt1.c0))))  NULLS LAST LIMIT 2;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt1.c0))>=(('750997174'))))||(vt1.c0))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END)+(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE ((((((((vt1.c0))>=(('750997174'))))||(vt1.c0)))AND(((CAST(vt0.c1 AS INTEGER))<>(CASE WHEN NULL THEN vt1.c0 END))))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END)+(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt1.c0))>=(('750997174'))))||(vt1.c0))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END)+(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE ((((((((vt1.c0))>=(('750997174'))))||(vt1.c0)))AND(((CAST(vt0.c1 AS INTEGER))<>(CASE WHEN NULL THEN vt1.c0 END))))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END)+(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0)))%(vt1.c0 COLLATE BINARY)) DESC;
SELECT DISTINCT * FROM vt1 WHERE ((((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND((((~ (NULL)))OR(((vt1.c0)<=(vt1.c0))))))) ORDER BY (((0.5132980283672961, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c0)GLOB(vt1.c0)), COALESCE(x'd4', vt1.c0, NULL, vt1.c0), CAST(vt1.c0 AS REAL))))  NULLS FIRST, vt1.c0 ASC LIMIT 1;
SELECT ALL * FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0)))%(vt1.c0 COLLATE BINARY)) DESC;
SELECT DISTINCT * FROM vt1 WHERE ((((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND((((~ (NULL)))OR(((vt1.c0)<=(vt1.c0))))))) ORDER BY (((0.5132980283672961, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c0)GLOB(vt1.c0)), COALESCE(x'd4', vt1.c0, NULL, vt1.c0), CAST(vt1.c0 AS REAL))))  NULLS FIRST, vt1.c0 ASC LIMIT 1;
SELECT * FROM vt1 WHERE ((+ ('187731294' COLLATE BINARY)));
SELECT * FROM vt1 WHERE ((((+ ('187731294' COLLATE BINARY)))AND(CASE LIKELY(vt1.c0)  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN SUBSTR(vt1.c0, vt1.c0) WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)!=(vt1.c0)) WHEN (vt1.c0 IN ()) THEN '-1383599493' COLLATE NOCASE END))) LIMIT 0 INTERSECT SELECT * FROM vt1 WHERE (((NULL) IS TRUE)) LIMIT 0X0;
SELECT * FROM vt1 WHERE ((+ ('187731294' COLLATE BINARY)));
SELECT * FROM vt1 WHERE ((((+ ('187731294' COLLATE BINARY)))AND(CASE LIKELY(vt1.c0)  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN SUBSTR(vt1.c0, vt1.c0) WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)!=(vt1.c0)) WHEN (vt1.c0 IN ()) THEN '-1383599493' COLLATE NOCASE END))) LIMIT 0 INTERSECT SELECT * FROM vt1 WHERE (((NULL) IS TRUE)) LIMIT 0X0;
SELECT ALL MAX(vt0.c1) FROM vt0, vt1 WHERE ((((vt0.c0, NULL)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), x'e1a397cf00')) AND ((CASE vt0.c1  WHEN vt1.c0 THEN x'60' WHEN vt0.c1 THEN vt1.c0 END, ((vt1.c0) BETWEEN (NULL) AND (vt0.c0))))));
SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE ((((vt0.c0, NULL)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), x'e1a397cf00')) AND ((CASE vt0.c1  WHEN vt1.c0 THEN x'60' WHEN vt0.c1 THEN vt1.c0 END, ((vt1.c0) BETWEEN (NULL) AND (vt0.c0)))))) INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((((vt1.c0)<(vt0.c0))))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0)|(((vt1.c0)||(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0)|(((vt1.c0)||(vt1.c0))))) INTERSECT SELECT ALL * FROM vt1 WHERE ((((NULL, vt1.c0))>=((((vt1.c0)%(vt1.c0)), ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0)|(((vt1.c0)||(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0)|(((vt1.c0)||(vt1.c0))))) INTERSECT SELECT ALL * FROM vt1 WHERE ((((NULL, vt1.c0))>=((((vt1.c0)%(vt1.c0)), ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (vt0.c1);
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON (~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (((vt0.c1)AND(0.7766033540984951)));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (vt0.c1);
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON (~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (((vt0.c1)AND(0.7766033540984951)));
SELECT * FROM vt0 WHERE ((~ (UNLIKELY(DISTINCT -423690826))));
SELECT DISTINCT * FROM vt0 WHERE ((((~ (UNLIKELY(DISTINCT 0Xffffffffe6befdb6))))AND((((vt0.c1 COLLATE BINARY, NULL))<((((((((((((((vt0.c0)OR(vt0.c0)))AND('-1933451997')))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR('k')), vt0.c0 COLLATE NOCASE))))));
SELECT * FROM vt0 WHERE ((~ (UNLIKELY(DISTINCT -423690826))));
SELECT DISTINCT * FROM vt0 WHERE ((((~ (UNLIKELY(DISTINCT 0Xffffffffe6befdb6))))AND((((vt0.c1 COLLATE BINARY, NULL))<((((((((((((((vt0.c0)OR(vt0.c0)))AND('-1933451997')))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR('k')), vt0.c0 COLLATE NOCASE))))));
SELECT MAX(vt1.c0) FROM vt1 WHERE ((((vt1.c0 IN ()))+(vt1.c0 COLLATE BINARY)));
SELECT MAX(vt1.c0) FROM vt1 WHERE ((((((vt1.c0 IN ()))+(vt1.c0 COLLATE BINARY)))AND(((((vt1.c0)IS NOT(vt1.c0)))LIKE(CAST(vt1.c0 AS NUMERIC))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt0.c0 IN (((vt0.c0) NOTNULL))));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0 IN (((vt0.c0) NOTNULL))))AND(((((vt1.c0 COLLATE BINARY)OR(0Xffffffffbd5b01b2)))OR(((vt1.c0)+(vt0.c0))))))) INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (LOWER(DISTINCT x'8604ed'));
SELECT ALL * FROM vt1 WHERE ((+ (LOWER(vt1.c0)))) ORDER BY (((('n|R''‹,')<(vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) ISNULL))) ASC, LIKELY(DISTINCT -1.00881499E8 COLLATE RTRIM)  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE ((((+ (LOWER(vt1.c0))))AND((((vt1.c0) NOTNULL) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.5661961094188064))))))) ORDER BY (((('n|R''‹,')<(vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) ISNULL))) ASC, LIKELY(DISTINCT -1.00881499E8 COLLATE RTRIM)  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((+ (LOWER(vt1.c0)))) ORDER BY (((('n|R''‹,')<(vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) ISNULL))) ASC, LIKELY(DISTINCT -1.00881499E8 COLLATE RTRIM)  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE ((((+ (LOWER(vt1.c0))))AND((((vt1.c0) NOTNULL) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.5661961094188064))))))) ORDER BY (((('n|R''‹,')<(vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) ISNULL))) ASC, LIKELY(DISTINCT -1.00881499E8 COLLATE RTRIM)  NULLS FIRST;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (RTRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((RTRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))AND(CASE ((vt0.c0)GLOB(vt1.c0))  WHEN ((vt0.c0)OR(vt0.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END WHEN ((vt0.c0)==(vt1.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END))) ORDER BY CASE WHEN x'42cfed44' THEN vt0.c0 ELSE vt0.c1 END COLLATE BINARY, vt0.c0 ASC;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (RTRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((RTRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))AND(CASE ((vt0.c0)GLOB(vt1.c0))  WHEN ((vt0.c0)OR(vt0.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END WHEN ((vt0.c0)==(vt1.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END))) ORDER BY CASE WHEN x'42cfed44' THEN vt0.c0 ELSE vt0.c1 END COLLATE BINARY, vt0.c0 ASC;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((((((((- (vt0.c0)))OR((vt1.c0 IN (vt0.c0)))))AND((vt1.c0 IN ()))))AND(((vt1.c0)<<(vt0.c0)))))AND(((vt1.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((((((((((- (vt0.c0)))OR((vt1.c0 IN (vt0.c0)))))AND((vt1.c0 IN ()))))AND(((vt1.c0)<<(vt0.c0)))))AND(((vt1.c0) ISNULL))))AND(CAST(((vt0.c1) IS TRUE) AS INTEGER)))) ORDER BY '1412683960'  NULLS LAST LIMIT 1;
SELECT * FROM vt0 WHERE ((- (INSTR(vt0.c0, vt0.c1))));
SELECT * FROM vt0 WHERE ((- (INSTR(vt0.c0, vt0.c1)))) ORDER BY (('﹌') NOT NULL)  NULLS LAST INTERSECT SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN (COALESCE(vt0.c0, '졨^')))) ORDER BY (('﹌') NOT NULL)  NULLS LAST;
SELECT * FROM vt0 WHERE ((- (INSTR(vt0.c0, vt0.c1))));
SELECT * FROM vt0 WHERE ((- (INSTR(vt0.c0, vt0.c1)))) ORDER BY (('﹌') NOT NULL)  NULLS LAST INTERSECT SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN (COALESCE(vt0.c0, '졨^')))) ORDER BY (('﹌') NOT NULL)  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE ((~ ((((vt0.c1, vt0.c1, '<5')) BETWEEN ((vt0.c1, 0.1901236792470381, vt1.c0)) AND ((vt1.c0, vt0.c1, vt0.c0)))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) ASC;
SELECT DISTINCT MIN(vt0.c0) FROM vt1, vt0 WHERE ((((~ ((((vt0.c1, vt0.c1, '<5')) BETWEEN ((vt0.c1, 0.1901236792470381, vt1.c0)) AND ((vt1.c0, vt0.c1, vt0.c0))))))AND(((((((((((vt0.c1)>(vt0.c0)))OR((vt1.c0 IN (vt0.c1)))))OR((+ (vt0.c1)))))OR(((vt1.c0)IS NOT(vt1.c0)))))OR(((vt0.c1) IS FALSE)))))) ORDER BY (((((0X7c395d12) IS TRUE), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)), ((vt0.c0) ISNULL), (+ (vt0.c1))))==((vt0.c1, ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL), ((vt1.c0) IS FALSE)))) ASC LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((((vt0.c1))>=((vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt1.c0) NOT NULL))), (~ (((vt0.c0) BETWEEN (vt0.c1) AND (NULL)))) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((((vt0.c1))>=((vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt1.c0) NOT NULL))), (~ (((vt0.c0) BETWEEN (vt0.c1) AND (NULL)))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0))>((vt0.c1))))|(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((((vt0.c1))>=((vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt1.c0) NOT NULL))), (~ (((vt0.c0) BETWEEN (vt0.c1) AND (NULL)))) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((((vt0.c1))>=((vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt1.c0) NOT NULL))), (~ (((vt0.c0) BETWEEN (vt0.c1) AND (NULL)))) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((((vt0.c1))>=((vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt1.c0) NOT NULL))), (~ (((vt0.c0) BETWEEN (vt0.c1) AND (NULL)))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0))>((vt0.c1))))|(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((((vt0.c1))>=((vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt1.c0) NOT NULL))), (~ (((vt0.c0) BETWEEN (vt0.c1) AND (NULL)))) DESC  NULLS FIRST LIMIT 0x0;
SELECT COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'16')))))) ORDER BY CASE WHEN ((NULL) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (vt0.c1 IN ()) WHEN (((vt0.c0, vt0.c1))<=((vt0.c0, vt0.c1))) THEN TRIM(DISTINCT vt0.c0) END, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((IFNULL(DISTINCT vt0.c1, vt0.c0), ((((((((NULL)OR(vt0.c0)))AND(NULL)))AND(vt0.c0)))AND(vt0.c1)), (((vt0.c1))!=((vt0.c1))))) AND ((((vt0.c0)/(vt0.c1)), ((((((vt0.c1)AND(0.4556401320561386)))AND('iZ<F3#')))OR(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'16'))))))AND(((((((((vt0.c1)OR(x'8d1e')))OR(vt0.c1)))OR(vt0.c0))) IS TRUE)))) ORDER BY ((((((((((vt0.c0)>(vt0.c0)))OR(CAST(vt0.c1 AS NUMERIC))))AND((((vt0.c1, vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c1))))))OR(((((((NULL)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))))AND(HEX(DISTINCT NULL))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((((vt0.c0)>(vt0.c0)))OR(CAST(vt0.c1 AS NUMERIC))))AND((((vt0.c1, vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c1))))))OR(((((((NULL)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))))AND(HEX(DISTINCT NULL))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN ())) ORDER BY ((((((vt0.c1))<((vt0.c0)))))!=((((((0X4b3be89d)OR(vt0.c1)))OR(vt1.c0))))) ASC, (- (((vt0.c0) NOTNULL))) ASC;
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN ())) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))), CASE (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)GLOB(vt0.c1)) WHEN ('\d' IN (vt1.c0)) THEN JULIANDAY(vt1.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt1.c0, vt0.c1) WHEN (((vt1.c0))!=((0.42412210607234047))) THEN CAST(vt1.c0 AS BLOB) END  NULLS FIRST LIMIT 1;
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN ())) ORDER BY ((((((vt0.c1))<((vt0.c0)))))!=((((((0X4b3be89d)OR(vt0.c1)))OR(vt1.c0))))) ASC, (- (((vt0.c0) NOTNULL))) ASC;
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN ())) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))), CASE (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)GLOB(vt0.c1)) WHEN ('\d' IN (vt1.c0)) THEN JULIANDAY(vt1.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt1.c0, vt0.c1) WHEN (((vt1.c0))!=((0.42412210607234047))) THEN CAST(vt1.c0 AS BLOB) END  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN ((((vt1.c0))>=((vt0.c1)))) AND (((vt1.c0) IS FALSE)))) ORDER BY vt0.c0 DESC  NULLS FIRST, ((vt0.c1 COLLATE BINARY) BETWEEN (((vt0.c1)||(vt0.c1))) AND (((vt0.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN ((((vt1.c0))>=((vt0.c1)))) AND (((vt1.c0) IS FALSE)))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))>>(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN ((((vt1.c0))>=((vt0.c1)))) AND (((vt1.c0) IS FALSE)))) ORDER BY vt0.c0 DESC  NULLS FIRST, ((vt0.c1 COLLATE BINARY) BETWEEN (((vt0.c1)||(vt0.c1))) AND (((vt0.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN ((((vt1.c0))>=((vt0.c1)))) AND (((vt1.c0) IS FALSE)))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))>>(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL)) ORDER BY CASE ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN vt1.c0 WHEN 0.06364580930239094 THEN ((vt1.c0)>(vt1.c0)) END DESC;
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL)) ORDER BY CASE ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN vt1.c0 WHEN 0.06364580930239094 THEN ((vt1.c0)>(vt1.c0)) END DESC;
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL)) ORDER BY CASE ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN vt1.c0 WHEN 0.06364580930239094 THEN ((vt1.c0)>(vt1.c0)) END DESC;
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL)) ORDER BY CASE ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN vt1.c0 WHEN 0.06364580930239094 THEN ((vt1.c0)>(vt1.c0)) END DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((((0xffffffff945bcaf3)&(vt0.c0))) BETWEEN (((vt0.c0)&(vt1.c0))) AND (LIKELIHOOD(vt0.c1, ''))));
SELECT ALL * FROM vt1, vt0 WHERE (((((-1805923597)&(vt0.c0))) BETWEEN (((vt0.c0)&(vt1.c0))) AND (LIKELIHOOD(vt0.c1, '')))) ORDER BY CASE (vt0.c1 IN (vt1.c0))  WHEN LIKELY(vt0.c0) THEN (vt1.c0 IN ()) WHEN (vt1.c0 IN ()) THEN ((vt0.c1)+(vt0.c0)) WHEN ((vt0.c1)>=(vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) ELSE SQLITE_SOURCE_ID() END DESC LIMIT 3;
SELECT ALL * FROM vt1, vt0 WHERE (((((0xffffffff945bcaf3)&(vt0.c0))) BETWEEN (((vt0.c0)&(vt1.c0))) AND (LIKELIHOOD(vt0.c1, ''))));
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE ((((+ (vt0.c0)))<=(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE ((((((+ (vt0.c0)))<=(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))))AND(((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)OR(TRIM(vt0.c1, vt0.c0))))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS NUMERIC) ASC  NULLS LAST, ((((((vt1.c0)OR(vt1.c0)))AND(-615019482))) NOTNULL) LIMIT 0X1 INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END)||(vt0.c0))) ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS NUMERIC) ASC  NULLS LAST, ((((((vt1.c0)OR(vt1.c0)))AND(0Xffffffffdb578c26))) NOTNULL) LIMIT 0x1;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((vt1.c0)&(vt0.c1)))OR(vt0.c0)))AND(NULL)))OR(vt0.c1))) ORDER BY vt1.c0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((((vt1.c0)&(vt0.c1)))OR(vt0.c0)))AND(NULL)))OR(vt0.c1)))AND((NOT (((vt0.c0) IS FALSE)))))) ORDER BY vt1.c0 LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY)<<(CAST(NULL AS NUMERIC)))) ORDER BY vt1.c0 LIMIT 0X0;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((vt1.c0)&(vt0.c1)))OR(vt0.c0)))AND(NULL)))OR(vt0.c1))) ORDER BY vt1.c0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((((vt1.c0)&(vt0.c1)))OR(vt0.c0)))AND(NULL)))OR(vt0.c1)))AND((NOT (((vt0.c0) IS FALSE)))))) ORDER BY vt1.c0 LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY)<<(CAST(NULL AS NUMERIC)))) ORDER BY vt1.c0 LIMIT 0X0;
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT (vt0.c1 IN (vt0.c1))));
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(DISTINCT (vt0.c1 IN (vt0.c1))))AND(GLOB(vt0.c1, vt0.c1) COLLATE BINARY))) ORDER BY x'35'  NULLS FIRST LIMIT 0X1 INTERSECT SELECT * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN (((vt0.c0) IS TRUE)))) ORDER BY x'35'  NULLS FIRST LIMIT 0X1;
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT (vt0.c1 IN (vt0.c1))));
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(DISTINCT (vt0.c1 IN (vt0.c1))))AND(GLOB(vt0.c1, vt0.c1) COLLATE BINARY))) ORDER BY x'35'  NULLS FIRST LIMIT 0X1 INTERSECT SELECT * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN (((vt0.c0) IS TRUE)))) ORDER BY x'35'  NULLS FIRST LIMIT 0X1;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))*(((vt1.c0)AND(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((((NOT (vt1.c0)))*(((vt1.c0)AND(vt1.c0)))))AND(((((0.9248808366316517)OR(((((((vt1.c0)AND(vt1.c0)))AND('V%W''H7F')))OR(vt1.c0)))))AND(((vt1.c0) ISNULL))))));
SELECT MIN(vt1.c0) FROM vt0, vt1 WHERE ((((vt1.c0 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN '-1686572584' ELSE vt0.c1 END))<>((((vt0.c0)+(vt0.c0)), '5G I-'))));
SELECT DISTINCT MIN(vt1.c0) FROM vt0, vt1 WHERE ((((((vt1.c0 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN '-1686572584' ELSE vt0.c1 END))!=((((vt0.c0)+(vt0.c0)), '5G I-'))))AND(((CAST(vt0.c1 AS BLOB)) NOT NULL)))) ORDER BY (NOT ((+ ('1262217373')))), ((((vt0.c1) NOT NULL)) NOTNULL) DESC  NULLS LAST INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt0, vt1 WHERE (ABS(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY (NOT ((+ ('1262217373')))), ((((vt0.c1) NOT NULL)) NOTNULL) DESC  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (CAST(((0xffffffffec95e9db) BETWEEN (vt0.c0) AND (x'90')) AS REAL));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((CAST(((-325719589) BETWEEN (vt0.c0) AND (x'90')) AS REAL))AND(((vt0.c0)|(((vt0.c1) IS TRUE)))))) LIMIT 1 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((((((((vt0.c0) NOTNULL))AND(vt0.c0 COLLATE BINARY)))OR(vt0.c0 COLLATE NOCASE)))OR(LIKELY(vt0.c1)))) LIMIT 0x1;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((((((((('-648768732')AND(CAST(vt1.c0 AS TEXT))))AND((- (vt1.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(json_extract(vt0.c1, vt0.c1)))) ORDER BY ((((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c1)))AND(0Xfffffffff1a53a8e)))AND(vt1.c0)))OR('-1686332408')))AND(vt1.c0)) COLLATE BINARY COLLATE NOCASE, ((LIKELIHOOD(DISTINCT vt0.c1, vt1.c0)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((- (vt0.c1)))) ASC;
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE ((((((((((('-648768732')AND(CAST(vt1.c0 AS TEXT))))AND((- (vt1.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(json_extract(vt0.c1, vt0.c1))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY))) ORDER BY ((((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c1)))AND(-240829810)))AND(vt1.c0)))OR('-1686332408')))AND(vt1.c0)) COLLATE BINARY COLLATE NOCASE, ((LIKELIHOOD(DISTINCT vt0.c1, vt1.c0)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((- (vt0.c1)))) ASC;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((((((((('-648768732')AND(CAST(vt1.c0 AS TEXT))))AND((- (vt1.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(json_extract(vt0.c1, vt0.c1)))) ORDER BY ((((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c1)))AND(0Xfffffffff1a53a8e)))AND(vt1.c0)))OR('-1686332408')))AND(vt1.c0)) COLLATE BINARY COLLATE NOCASE, ((LIKELIHOOD(DISTINCT vt0.c1, vt1.c0)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((- (vt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN ((- (vt1.c0)))));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((((((vt1.c0) IS FALSE) IN ((- (vt1.c0)))))AND(((((((((((vt1.c0)-(vt1.c0)))AND(((vt1.c0) ISNULL))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN (vt1.c0)))))OR(IFNULL(vt1.c0, x'7ace')))))) ORDER BY CASE WHEN ((vt1.c0)*(vt1.c0)) THEN '9g랿?pO ' END ASC, '-527736366', CASE WHEN vt1.c0 COLLATE RTRIM THEN (((((((('?RNL%X')OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) ELSE (~ ('0.03617990457422937')) END LIMIT 1;
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE (((((vt1.c0) NOT NULL))GLOB(CAST(0.18511872058691092 AS NUMERIC))));
SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (((((vt1.c0) NOT NULL))GLOB(CAST(0.18511872058691092 AS NUMERIC)))) ORDER BY (((x'27d45aef'))<((COALESCE(vt0.c0, vt0.c0)))) DESC INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (((TYPEOF(vt0.c1)) NOT BETWEEN ((vt0.c1 IN (vt0.c0))) AND ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (((x'27d45aef'))<((COALESCE(vt0.c0, vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(x'1ef4' AS BLOB))IS NOT(vt1.c0))) ORDER BY vt0.c1 ASC  NULLS FIRST, (((CASE WHEN x'' THEN vt0.c0 WHEN 0.12957760001381846 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END))<>(((((vt0.c0, vt1.c0, vt0.c1, vt1.c0))<((vt0.c1, vt0.c0, vt0.c1, NULL)))))), (((vt0.c0)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((CAST(x'1ef4' AS BLOB))IS NOT(vt1.c0)))AND(((CAST(vt0.c1 AS INTEGER)) IS TRUE)))) ORDER BY vt0.c1 ASC  NULLS FIRST, (((CASE WHEN x'' THEN vt0.c0 WHEN 0.12957760001381846 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END))<>(((((vt0.c0, vt1.c0, vt0.c1, vt1.c0))<((vt0.c1, vt0.c0, vt0.c1, NULL)))))), (((vt0.c0)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) WHEN (+ (vt0.c0)) THEN (~ (vt0.c1)) END) ORDER BY ((((((((((vt0.c1)GLOB(vt0.c1)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND((+ (vt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c1) NOT NULL))) ASC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) WHEN (+ (vt0.c0)) THEN (~ (vt0.c1)) END) ORDER BY (json(vt0.c1) IN ()) ASC  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS NOT((- (vt0.c1))))) ORDER BY (json(vt0.c1) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) WHEN (+ (vt0.c0)) THEN (~ (vt0.c1)) END) ORDER BY ((((((((((vt0.c1)GLOB(vt0.c1)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND((+ (vt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c1) NOT NULL))) ASC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) WHEN (+ (vt0.c0)) THEN (~ (vt0.c1)) END) ORDER BY (json(vt0.c1) IN ()) ASC  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS NOT((- (vt0.c1))))) ORDER BY (json(vt0.c1) IN ()) ASC  NULLS LAST;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC));
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY IFNULL(DISTINCT ((vt0.c0)>(vt0.c0)), (- (vt0.c0))), (((vt0.c1) ISNULL) IN (((vt0.c1) NOT NULL), ((vt0.c1)/(vt0.c1)))) ASC LIMIT 1;
SELECT MIN(vt0.c0) FROM vt0 WHERE (vt0.c0);
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (vt0.c0) LIMIT 0X0 INTERSECT SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ('') LIMIT 0X0;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (vt0.c1) AND ('>Yux' COLLATE NOCASE))) ORDER BY (((((vt0.c1, vt0.c1))==((vt0.c1, vt0.c1)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (TRIM(vt0.c0, vt0.c0))) DESC, ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND((vt0.c0 IN (vt0.c1, vt0.c1)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (((x'')GLOB(vt0.c1)) IN ()) DESC;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (vt0.c1) AND ('>Yux' COLLATE NOCASE))) ORDER BY (((((vt0.c1, vt0.c1))==((vt0.c1, vt0.c1)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (TRIM(vt0.c0, vt0.c0))) DESC, ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND((vt0.c0 IN (vt0.c1, vt0.c1)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (((x'')GLOB(vt0.c1)) IN ()) DESC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY) ORDER BY (((((vt0.c1, vt0.c1))==((vt0.c1, vt0.c1)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (TRIM(vt0.c0, vt0.c0))) DESC, ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND((vt0.c0 IN (vt0.c1, vt0.c1)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (((x'')GLOB(vt0.c1)) IN ()) DESC LIMIT 0;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (vt0.c1) AND ('>Yux' COLLATE NOCASE))) ORDER BY (((((vt0.c1, vt0.c1))==((vt0.c1, vt0.c1)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (TRIM(vt0.c0, vt0.c0))) DESC, ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND((vt0.c0 IN (vt0.c1, vt0.c1)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (((x'')GLOB(vt0.c1)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))) AND (TOTAL_CHANGES())), CAST(vt0.c1 COLLATE BINARY AS BLOB) ASC;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(vt0.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))) AND (TOTAL_CHANGES())), CAST(vt0.c1 COLLATE BINARY AS BLOB) ASC INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (1489150588) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))) AND (TOTAL_CHANGES())), CAST(vt0.c1 COLLATE BINARY AS BLOB) ASC;
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE ((~ (vt1.c0))) ORDER BY (~ ((~ (vt0.c1)))) ASC  NULLS LAST, vt0.c0 COLLATE BINARY;
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE ((((~ (vt1.c0)))AND(CASE WHEN ((0.9952413993629456)|(vt0.c1)) THEN (((NULL))>=((vt1.c0))) WHEN (- (vt0.c1)) THEN ((vt0.c1) BETWEEN (x'') AND (vt0.c1)) WHEN ((vt1.c0) NOT NULL) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) END))) ORDER BY (~ ((~ (vt0.c1)))) ASC  NULLS LAST, vt0.c0 COLLATE BINARY LIMIT 0x1;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST((('0.5462267792585872') ISNULL) AS INTEGER));
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((CAST((('0.5462267792585872') ISNULL) AS INTEGER))AND((((+ (vt1.c0))) BETWEEN (((vt1.c0)OR(NULL))) AND ((vt0.c1 IN (0.10623146735360356))))))) ORDER BY '8_~o#'  NULLS FIRST, vt0.c0 ASC, ((((vt0.c1)!=(vt0.c0)))=((~ (vt0.c0)))) LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS BLOB)) ORDER BY '8_~o#'  NULLS FIRST, vt0.c0 ASC, ((((vt0.c1)!=(vt0.c0)))==((~ (vt0.c0)))) LIMIT 0x1;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE ((((NOT (vt0.c1)))>=(CAST(vt0.c0 AS TEXT)))) ORDER BY CAST(((vt1.c0)<=('##塊R
Q')) AS NUMERIC);
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE ((((NOT (vt0.c1)))==(CAST(vt0.c0 AS TEXT)))) ORDER BY CAST(((vt1.c0)<=('##塊R
Q')) AS NUMERIC) LIMIT 0 INTERSECT SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE (TYPEOF(DISTINCT (((vt0.c1, '', vt0.c0)) NOT BETWEEN ((vt1.c0, '1885379869', vt0.c1)) AND ((vt0.c1, vt1.c0, vt1.c0))))) ORDER BY CAST(((vt1.c0)<=('##塊R
Q')) AS NUMERIC) LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY CASE (((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))  WHEN (NOT (vt1.c0)) THEN CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0)>=(vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((((vt1.c0)AND(vt1.c0)))AND(')G')) THEN ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(0.41728057057123524)))OR(vt1.c0)) WHEN ((vt1.c0)-(vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE 0.5305901528374672  WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END ASC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(vt1.c0) DESC, (- (((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY CASE (((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))  WHEN (NOT (vt1.c0)) THEN CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0)>=(vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((((vt1.c0)AND(vt1.c0)))AND(')G')) THEN ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(0.41728057057123524)))OR(vt1.c0)) WHEN ((vt1.c0)-(vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE 0.5305901528374672  WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END ASC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(vt1.c0) DESC, (- (((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) ORDER BY ((QUOTE(vt1.c0))*((vt0.c1 IN (vt0.c0, vt1.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE)AND((- (((vt1.c0) NOTNULL)))))) ORDER BY ((x'c90b') BETWEEN ((vt0.c1 IN (0.7884268820491895, vt0.c0, vt0.c1))) AND ((vt0.c1 IN (vt0.c1, vt1.c0)))) DESC  NULLS FIRST, ((vt0.c1)IS((vt0.c0 IN (vt0.c0)))) ASC, (((vt0.c1, vt1.c0)) BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c0))) COLLATE RTRIM DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((x'c90b') BETWEEN ((vt0.c1 IN (0.7884268820491895, vt0.c0, vt0.c1))) AND ((vt0.c1 IN (vt0.c1, vt1.c0)))) DESC  NULLS FIRST, ((vt0.c1)IS((vt0.c0 IN (vt0.c0)))) ASC, (((vt0.c1, vt1.c0)) BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c0))) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0X2;
SELECT * FROM vt1, vt0 WHERE (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) ORDER BY ((QUOTE(vt1.c0))*((vt0.c1 IN (vt0.c0, vt1.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE)AND((- (((vt1.c0) NOTNULL)))))) ORDER BY ((x'c90b') BETWEEN ((vt0.c1 IN (0.7884268820491895, vt0.c0, vt0.c1))) AND ((vt0.c1 IN (vt0.c1, vt1.c0)))) DESC  NULLS FIRST, ((vt0.c1)IS((vt0.c0 IN (vt0.c0)))) ASC, (((vt0.c1, vt1.c0)) BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c0))) COLLATE RTRIM DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((x'c90b') BETWEEN ((vt0.c1 IN (0.7884268820491895, vt0.c0, vt0.c1))) AND ((vt0.c1 IN (vt0.c1, vt1.c0)))) DESC  NULLS FIRST, ((vt0.c1)IS((vt0.c0 IN (vt0.c0)))) ASC, (((vt0.c1, vt1.c0)) BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c0))) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0X2;
SELECT MIN(vt1.c0) FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))>((((NULL)<(vt0.c0))))) WHERE (NULL) ORDER BY ((json_array_length(vt1.c0, vt0.c1))<((vt0.c0 IN (vt0.c1))));
SELECT DISTINCT MIN(vt1.c0) FROM vt0 INNER JOIN vt1 ON (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))>((((NULL)<(vt0.c0))))) WHERE (((NULL)AND(((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN (LAST_INSERT_ROWID()) AND (vt0.c0))))) ORDER BY ((json_array_length(vt1.c0, vt0.c1))<((vt0.c0 IN (vt0.c1)))) INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt0 INNER JOIN vt1 ON (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))>((((NULL)<(vt0.c0))))) WHERE (((vt0.c0)%(vt0.c0)) COLLATE BINARY) ORDER BY ((json_array_length(vt1.c0, vt0.c1))<((vt0.c0 IN (vt0.c1))));
SELECT ALL * FROM vt1 WHERE ((((((((((NOT (vt1.c0)))OR(((vt1.c0)&(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN '1000946180' THEN vt1.c0 END)))OR('')))AND(0.04337888142353474))) ORDER BY UNLIKELY(vt1.c0), (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST('-2145904511' AS INTEGER)))) DESC;
SELECT * FROM vt1 WHERE ((((((((((((NOT (vt1.c0)))OR(((vt1.c0)&(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN '1000946180' THEN vt1.c0 END)))OR('')))AND(0.04337888142353474)))AND('e{{GOa?b'))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS TEXT)  NULLS LAST, (((((vt1.c0) BETWEEN (vt1.c0) AND (NULL))))>((((NULL)<(vt1.c0)))))  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(NULL)))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST INTERSECT SELECT * FROM vt1 WHERE ((0.5202140110888708 IN ())) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS TEXT)  NULLS LAST, (((((vt1.c0) BETWEEN (vt1.c0) AND (NULL))))>((((NULL)<(vt1.c0)))))  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(NULL)))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((((((NOT (vt1.c0)))OR(((vt1.c0)&(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN '1000946180' THEN vt1.c0 END)))OR('')))AND(0.04337888142353474))) ORDER BY UNLIKELY(vt1.c0), (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST('-2145904511' AS INTEGER)))) DESC;
SELECT * FROM vt1 WHERE ((((((((((((NOT (vt1.c0)))OR(((vt1.c0)&(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN '1000946180' THEN vt1.c0 END)))OR('')))AND(0.04337888142353474)))AND('e{{GOa?b'))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS TEXT)  NULLS LAST, (((((vt1.c0) BETWEEN (vt1.c0) AND (NULL))))>((((NULL)<(vt1.c0)))))  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(NULL)))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST INTERSECT SELECT * FROM vt1 WHERE ((0.5202140110888708 IN ())) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS TEXT)  NULLS LAST, (((((vt1.c0) BETWEEN (vt1.c0) AND (NULL))))>((((NULL)<(vt1.c0)))))  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(NULL)))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST;
SELECT ALL MAX(vt0.c1) FROM vt0, vt1 WHERE (NULL) ORDER BY ((vt0.c1) ISNULL) COLLATE BINARY  NULLS LAST, CAST(vt0.c0 AS BLOB);
SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE (NULL) ORDER BY ((vt0.c1) ISNULL) COLLATE BINARY  NULLS LAST, CAST(vt0.c0 AS BLOB) LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE (CASE IFNULL(DISTINCT vt0.c0, vt1.c0)  WHEN CAST('1356617961' AS INTEGER) THEN CAST(vt0.c1 AS BLOB) WHEN vt1.c0 THEN ((vt0.c0)>=(vt0.c1)) WHEN ((vt0.c0)+(vt1.c0)) THEN CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 END WHEN (NOT ('0.13580659175708854')) THEN ((vt1.c0) ISNULL) END) ORDER BY ((vt0.c1) ISNULL) COLLATE BINARY  NULLS LAST, CAST(vt0.c0 AS BLOB) LIMIT 1;
SELECT MIN(vt0.c0) FROM vt0 WHERE (CAST(vt0.c1 AS BLOB));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (CAST(vt0.c1 AS BLOB)) INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((((((((vt0.c1, 0Xfffffffff5482ee3, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0)))OR(((vt0.c1) NOT NULL))));
SELECT MAX(vt0.c1) FROM vt0, vt1 WHERE ((((NOT (vt0.c0))) BETWEEN (((((vt1.c0)OR(vt0.c1)))AND(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)));
SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE ((((((NOT (vt0.c0))) BETWEEN (((((vt1.c0)OR(vt0.c1)))AND(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)))AND(CAST((+ (vt1.c0)) AS INTEGER)))) ORDER BY ((((vt0.c1)>(vt1.c0))) BETWEEN ((- (vt0.c0))) AND (((vt1.c0) ISNULL))) DESC LIMIT 0X3 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE (((((vt1.c0)%(vt0.c1))) NOT BETWEEN (COALESCE(DISTINCT vt0.c1, vt0.c1, vt0.c0, vt1.c0)) AND (((vt0.c0)>(vt0.c1))))) ORDER BY ((((vt0.c1)>(vt1.c0))) BETWEEN ((- (vt0.c0))) AND (((vt1.c0) ISNULL))) DESC LIMIT 3;
SELECT MIN(vt1.c0) FROM vt1 WHERE (((ROUND('-1274347669', vt1.c0)) ISNULL));
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((ROUND('-1274347669', vt1.c0)) ISNULL)) ORDER BY ((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((0.028988878484513148, vt1.c0))))))AND(CASE vt1.c0  WHEN 1849357025 THEN vt1.c0 END)))OR(HEX(DISTINCT vt1.c0))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS LAST, CAST(vt1.c0 AS BLOB) ASC  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c1)) BETWEEN ((x'4528', ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) AND (((('1917719584') NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((0.19272803804220928)<<(vt0.c1))))));
SELECT DISTINCT MAX(vt0.c0) FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c1)) BETWEEN ((x'4528', ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) AND (((('1917719584') NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((0.19272803804220928)<<(vt0.c1)))))) LIMIT 0x4;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0 IN ()))>((vt0.c1 IN (vt0.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0 IN ()))>((vt0.c1 IN (vt0.c0))))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((CASE vt0.c1  WHEN vt1.c0 THEN NULL WHEN 0.5854498052197484 THEN vt0.c1 END) ISNULL)) ORDER BY (((vt0.c0 IN ()))>((vt0.c1 IN (vt0.c0))))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0 IN ()))>((vt0.c1 IN (vt0.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0 IN ()))>((vt0.c1 IN (vt0.c0))))  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((CASE vt0.c1  WHEN vt1.c0 THEN NULL WHEN 0.5854498052197484 THEN vt0.c1 END) ISNULL)) ORDER BY (((vt0.c0 IN ()))>((vt0.c1 IN (vt0.c0))))  NULLS FIRST LIMIT 0;
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE ((((vt1.c0)<=(vt1.c0)) IN ())) ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c0))) NOTNULL) ASC, ((((vt1.c0) ISNULL))!=(((x'51')<>(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE ((((((vt1.c0)==(vt1.c0)) IN ()))AND(((CAST(vt0.c1 AS INTEGER)) ISNULL)))) ORDER BY (- (0.5677905668825889))  NULLS LAST, x'54' ASC, (vt1.c0 IN ()) DESC  NULLS FIRST;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ((((vt1.c0, vt1.c0, '-1431237506'))>((vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM) ORDER BY 0.5656029764436464 COLLATE RTRIM  NULLS FIRST, (~ (vt1.c0)) DESC;
SELECT MIN(vt1.c0) FROM vt1 WHERE ((((vt1.c0, vt1.c0, '-1431237506'))>((vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM) ORDER BY '-1686332408'  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)+(vt1.c0))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))+(((vt1.c0) IS TRUE)))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((((+ (((vt1.c0)+(vt1.c0)))))AND(CASE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN '' ELSE x'0a' END THEN TRIM(DISTINCT vt1.c0) WHEN x'42e9' THEN vt1.c0 END))) ORDER BY CASE WHEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(x'')) THEN ((vt1.c0)AND(vt1.c0)) WHEN ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) END ASC, (+ (vt1.c0)) COLLATE BINARY ASC INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0))) BETWEEN (0.014091669125693707) AND (((x'69')<=(vt1.c0))))) ORDER BY CASE WHEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(x'')) THEN ((vt1.c0)AND(vt1.c0)) WHEN ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) END ASC, (+ (vt1.c0)) COLLATE BINARY ASC;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0 IN (vt1.c0))) NOT BETWEEN ('-1217305312') AND (((vt0.c0) BETWEEN (vt1.c0) AND (x''))))) ORDER BY ((((((((((((vt1.c0)/(vt1.c0)))OR(((vt0.c1) NOTNULL))))OR((vt0.c0 IN ('3o')))))AND(IFNULL(vt1.c0, vt0.c0))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((vt0.c1) IS TRUE)))  NULLS LAST, CAST(vt0.c1 COLLATE BINARY AS REAL)  NULLS FIRST, TRIM(((vt0.c0)%(vt0.c0)), '1e500');
SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE ((((vt1.c0 IN (vt1.c0))) NOT BETWEEN ('-1217305312') AND (((vt0.c0) BETWEEN (vt1.c0) AND (x''))))) ORDER BY (((vt1.c0)+(vt1.c0)) IN ((- (vt0.c0)), ((((((((NULL)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (LOWER(DISTINCT vt1.c0 COLLATE BINARY)) ORDER BY (((vt1.c0)+(vt1.c0)) IN ((- (vt0.c0)), ((((((((NULL)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) LIMIT 0X3;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0 IN (vt1.c0))) NOT BETWEEN ('-1217305312') AND (((vt0.c0) BETWEEN (vt1.c0) AND (x''))))) ORDER BY ((((((((((((vt1.c0)/(vt1.c0)))OR(((vt0.c1) NOTNULL))))OR((vt0.c0 IN ('3o')))))AND(IFNULL(vt1.c0, vt0.c0))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((vt0.c1) IS TRUE)))  NULLS LAST, CAST(vt0.c1 COLLATE BINARY AS REAL)  NULLS FIRST, TRIM(((vt0.c0)%(vt0.c0)), '1e500');
SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE ((((vt1.c0 IN (vt1.c0))) NOT BETWEEN ('-1217305312') AND (((vt0.c0) BETWEEN (vt1.c0) AND (x''))))) ORDER BY (((vt1.c0)+(vt1.c0)) IN ((- (vt0.c0)), ((((((((NULL)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (LOWER(DISTINCT vt1.c0 COLLATE BINARY)) ORDER BY (((vt1.c0)+(vt1.c0)) IN ((- (vt0.c0)), ((((((((NULL)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) LIMIT 0X3;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) IS FALSE))))OR(CAST(vt1.c0 AS TEXT)));
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) IS FALSE))))OR(CAST(vt1.c0 AS TEXT))) INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CAST(vt1.c0 AS REAL)) ORDER BY ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) IS FALSE))))OR(CAST(vt1.c0 AS TEXT)));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) IS FALSE))))OR(CAST(vt1.c0 AS TEXT)));
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) IS FALSE))))OR(CAST(vt1.c0 AS TEXT))) INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CAST(vt1.c0 AS REAL)) ORDER BY ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) IS FALSE))))OR(CAST(vt1.c0 AS TEXT)));
SELECT COUNT(*) FROM vt1 WHERE (((UNLIKELY(DISTINCT vt1.c0)) BETWEEN (vt1.c0) AND (UPPER(vt1.c0)))) ORDER BY ((0.5009842603109109 IN (vt1.c0)) IN (vt1.c0 COLLATE NOCASE, -844438941 COLLATE RTRIM));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((UNLIKELY(DISTINCT vt1.c0)) BETWEEN (vt1.c0) AND (UPPER(vt1.c0)))) ORDER BY ((0.5009842603109109 IN (vt1.c0)) IN (vt1.c0 COLLATE NOCASE, -844438941 COLLATE RTRIM)) LIMIT 4;
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE ((NOT (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))))) ORDER BY (((((((vt1.c0 IN (vt0.c1)))AND((((vt1.c0, vt0.c1))==((x'17', vt0.c0))))))OR(TRIM(DISTINCT vt0.c0, vt0.c1))))AND((vt0.c0 IN ())))  NULLS FIRST, (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'' END, json_array_length(vt1.c0)))=((((vt0.c0) IS TRUE), ((vt1.c0)>>(vt0.c1))))) ASC  NULLS FIRST;
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE ((((NOT (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))AND((- (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))))) ORDER BY (((((((vt1.c0 IN (vt0.c1)))AND((((vt1.c0, vt0.c1))==((x'17', vt0.c0))))))OR(TRIM(DISTINCT vt0.c0, vt0.c1))))AND((vt0.c0 IN ())))  NULLS FIRST, (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'' END, json_array_length(vt1.c0)))==((((vt0.c0) IS TRUE), ((vt1.c0)>>(vt0.c1))))) ASC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN CASE 'd[,
J,2+뢣'  WHEN NULL THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE NULL END) ORDER BY ((CAST(vt1.c0 AS BLOB))GLOB((((vt1.c0))>=((vt1.c0))))) DESC  NULLS LAST, (((vt1.c0, x'c7')) NOT BETWEEN ((json_array_length(vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.06856499016502704 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((vt1.c0 COLLATE NOCASE, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))  NULLS LAST, ((CAST(x'4e' AS TEXT))>(CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN CASE 'd[,
J,2+뢣'  WHEN NULL THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE NULL END) ORDER BY (((vt1.c0, x'2bc7fb', vt1.c0, NULL)) BETWEEN (((vt1.c0 IN ('1693756632')), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), vt1.c0 COLLATE BINARY, ((((((((vt1.c0)AND(vt1.c0)))OR('-136740434')))OR(vt1.c0)))AND(vt1.c0)))) AND ((DATETIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, 0xffffffff9db0f44e), ((vt1.c0)/(vt1.c0)), CAST(vt1.c0 AS BLOB), vt1.c0))) ASC  NULLS FIRST, ((vt1.c0 COLLATE BINARY) IS TRUE), CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS TEXT)  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN ())) ORDER BY (((vt1.c0, x'2bc7fb', vt1.c0, NULL)) BETWEEN (((vt1.c0 IN ('1693756632')), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), vt1.c0 COLLATE BINARY, ((((((((vt1.c0)AND(vt1.c0)))OR('-136740434')))OR(vt1.c0)))AND(vt1.c0)))) AND ((DATETIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, -1649347506), ((vt1.c0)/(vt1.c0)), CAST(vt1.c0 AS BLOB), vt1.c0))) ASC  NULLS FIRST, ((vt1.c0 COLLATE BINARY) IS TRUE), CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS TEXT)  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN CASE 'd[,
J,2+뢣'  WHEN NULL THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE NULL END) ORDER BY ((CAST(vt1.c0 AS BLOB))GLOB((((vt1.c0))>=((vt1.c0))))) DESC  NULLS LAST, (((vt1.c0, x'c7')) NOT BETWEEN ((json_array_length(vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.06856499016502704 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((vt1.c0 COLLATE NOCASE, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))  NULLS LAST, ((CAST(x'4e' AS TEXT))>(CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN CASE 'd[,
J,2+뢣'  WHEN NULL THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE NULL END) ORDER BY (((vt1.c0, x'2bc7fb', vt1.c0, NULL)) BETWEEN (((vt1.c0 IN ('1693756632')), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), vt1.c0 COLLATE BINARY, ((((((((vt1.c0)AND(vt1.c0)))OR('-136740434')))OR(vt1.c0)))AND(vt1.c0)))) AND ((DATETIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, 0xffffffff9db0f44e), ((vt1.c0)/(vt1.c0)), CAST(vt1.c0 AS BLOB), vt1.c0))) ASC  NULLS FIRST, ((vt1.c0 COLLATE BINARY) IS TRUE), CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS TEXT)  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN ())) ORDER BY (((vt1.c0, x'2bc7fb', vt1.c0, NULL)) BETWEEN (((vt1.c0 IN ('1693756632')), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), vt1.c0 COLLATE BINARY, ((((((((vt1.c0)AND(vt1.c0)))OR('-136740434')))OR(vt1.c0)))AND(vt1.c0)))) AND ((DATETIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, -1649347506), ((vt1.c0)/(vt1.c0)), CAST(vt1.c0 AS BLOB), vt1.c0))) ASC  NULLS FIRST, ((vt1.c0 COLLATE BINARY) IS TRUE), CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((QUOTE(vt1.c0)) ISNULL)) ORDER BY json_array_length((vt0.c0 IN ()))  NULLS LAST, ((x'e80f' COLLATE RTRIM) IS FALSE);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((QUOTE(vt1.c0)) ISNULL)) ORDER BY ((vt1.c0)+(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((NULL)IS(vt0.c0)))<(NULL))) ORDER BY (+ (vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((NULL)IS(vt0.c0)))<(NULL))) ORDER BY (((((((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0))))OR(0.2358497262456528)))AND((((vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1)) AND ((vt1.c0, vt1.c0))))))AND(((vt0.c1) NOTNULL))) DESC, vt0.c1 LIMIT 0X1;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((NULL)IS(vt0.c0)))<(NULL))) ORDER BY (+ (vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((NULL)IS(vt0.c0)))<(NULL))) ORDER BY (((((((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0))))OR(0.2358497262456528)))AND((((vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1)) AND ((vt1.c0, vt1.c0))))))AND(((vt0.c1) NOTNULL))) DESC, vt0.c1 LIMIT 0X1;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE ((((vt0.c0)GLOB(vt0.c0)) IN ()));
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE ((((vt0.c0)GLOB(vt0.c0)) IN ())) ORDER BY SUBSTR(((vt0.c1) NOT NULL), ((x'4369')+(x'')))  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (x'') ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c1)/(vt0.c1)))) AND ((CAST(NULL AS INTEGER)))) DESC  NULLS FIRST, json_patch((((vt0.c0, vt0.c1, '-745831232', vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0))), vt0.c1)  NULLS LAST;
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (x'') ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c1)/(vt0.c1)))) AND ((CAST(NULL AS INTEGER)))) DESC  NULLS FIRST, json_patch((((vt0.c0, vt0.c1, '-745831232', vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0))), vt0.c1)  NULLS LAST INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((((((((((NOT (vt0.c1)))AND(((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND((~ (vt0.c0)))))OR((~ (vt0.c1)))))AND(((vt0.c0)+(vt0.c1))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c1)/(vt0.c1)))) AND ((CAST(NULL AS INTEGER)))) DESC  NULLS FIRST, json_patch((((vt0.c0, vt0.c1, '-745831232', vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0))), vt0.c1)  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON (NOT (vt0.c0)) COLLATE NOCASE WHERE (CAST(CAST(x'aa17' AS REAL) AS INTEGER));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON (NOT (vt0.c0)) COLLATE NOCASE WHERE (CAST(CAST(x'aa17' AS REAL) AS INTEGER)) INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON (NOT (vt0.c0)) COLLATE NOCASE WHERE (CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(0.2616560092543654)))AND(vt0.c1)) THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)) WHEN CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN vt1.c0 END);
SELECT * FROM vt1, vt0 WHERE ((((('')<(vt0.c0)))>(CAST('' AS NUMERIC))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((('')<(vt0.c0)))>(CAST('' AS NUMERIC)))) ORDER BY (((((vt0.c1, vt1.c0))<((vt0.c1, vt0.c0)))) NOTNULL), (~ (CAST(vt1.c0 AS TEXT))) DESC LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1) NOT BETWEEN (((((vt0.c0)AND(0.21046504447610692)))AND(vt0.c1))) AND ((NULL IN (vt1.c0, vt1.c0))))) ORDER BY (((((vt0.c1, vt1.c0))<((vt0.c1, vt0.c0)))) NOTNULL), (~ (CAST(vt1.c0 AS TEXT))) DESC LIMIT 0x2;
SELECT * FROM vt1, vt0 WHERE ((((('')<(vt0.c0)))>(CAST('' AS NUMERIC))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((('')<(vt0.c0)))>(CAST('' AS NUMERIC)))) ORDER BY (((((vt0.c1, vt1.c0))<((vt0.c1, vt0.c0)))) NOTNULL), (~ (CAST(vt1.c0 AS TEXT))) DESC LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1) NOT BETWEEN (((((vt0.c0)AND(0.21046504447610692)))AND(vt0.c1))) AND ((NULL IN (vt1.c0, vt1.c0))))) ORDER BY (((((vt0.c1, vt1.c0))<((vt0.c1, vt0.c0)))) NOTNULL), (~ (CAST(vt1.c0 AS TEXT))) DESC LIMIT 0x2;
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE RTRIM)==(((vt0.c1) IS TRUE))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c1 COLLATE RTRIM)==(((vt0.c1) IS TRUE))))AND((NOT (vt1.c0 COLLATE NOCASE)))));
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE RTRIM)==(((vt0.c1) IS TRUE))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c1 COLLATE RTRIM)==(((vt0.c1) IS TRUE))))AND((NOT (vt1.c0 COLLATE NOCASE)))));
SELECT MAX(vt0.c0) FROM vt0 WHERE (NULL);
SELECT MAX(vt0.c0) FROM vt0 WHERE (((NULL)AND(((((GLOB(vt0.c0, vt0.c1))OR(((vt0.c1)%(vt0.c1)))))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))IS NOT(vt1.c0))) ORDER BY ((UNLIKELY('-947017812'))=((vt1.c0 IN (vt1.c0, vt1.c0)))) DESC  NULLS LAST, '4P';
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))IS NOT(vt1.c0))) ORDER BY ((UNLIKELY('-947017812'))==((vt1.c0 IN (vt1.c0, vt1.c0)))) DESC  NULLS LAST, '4P' LIMIT 0 INTERSECT SELECT COUNT(*) FROM vt1 WHERE (((((((((((-1.541700801E9) BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC))))OR(((vt1.c0)==(vt1.c0)))))OR(CAST(vt1.c0 AS TEXT))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((UNLIKELY('-947017812'))==((vt1.c0 IN (vt1.c0, vt1.c0)))) DESC  NULLS LAST, '4P' LIMIT 0;
SELECT * FROM vt1 WHERE (((('1438037955')) NOT BETWEEN ((((vt1.c0) ISNULL))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))));
SELECT DISTINCT * FROM vt1 WHERE (((('1438037955')) NOT BETWEEN ((((vt1.c0) ISNULL))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))) ORDER BY CAST(NULL AS NUMERIC)  NULLS LAST, (NOT (((vt1.c0) IS TRUE))) DESC LIMIT 0;
SELECT * FROM vt1 WHERE (((('1438037955')) NOT BETWEEN ((((vt1.c0) ISNULL))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))));
SELECT DISTINCT * FROM vt1 WHERE (((('1438037955')) NOT BETWEEN ((((vt1.c0) ISNULL))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))) ORDER BY CAST(NULL AS NUMERIC)  NULLS LAST, (NOT (((vt1.c0) IS TRUE))) DESC LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((vt0.c1)+(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST, CASE ((vt0.c1) NOT NULL)  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN (- (vt0.c1)) THEN x'd831' WHEN ((vt1.c0)*(vt1.c0)) THEN ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) END;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0)AND((((((((- (vt0.c1)))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)))))AND(vt0.c1))))) ORDER BY ((vt0.c1)+(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST, CASE ((vt0.c1) NOT NULL)  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN (- (vt0.c1)) THEN x'd831' WHEN ((vt1.c0)*(vt1.c0)) THEN ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) END INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)IS(vt0.c0)))IS(((vt1.c0) NOTNULL)))) ORDER BY ((vt0.c1)+(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST, CASE ((vt0.c1) NOT NULL)  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN (- (vt0.c1)) THEN x'd831' WHEN ((vt1.c0)*(vt1.c0)) THEN ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) END;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((vt0.c1)+(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST, CASE ((vt0.c1) NOT NULL)  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN (- (vt0.c1)) THEN x'd831' WHEN ((vt1.c0)*(vt1.c0)) THEN ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) END;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0)AND((((((((- (vt0.c1)))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)))))AND(vt0.c1))))) ORDER BY ((vt0.c1)+(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST, CASE ((vt0.c1) NOT NULL)  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN (- (vt0.c1)) THEN x'd831' WHEN ((vt1.c0)*(vt1.c0)) THEN ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) END INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)IS(vt0.c0)))IS(((vt1.c0) NOTNULL)))) ORDER BY ((vt0.c1)+(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST, CASE ((vt0.c1) NOT NULL)  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN (- (vt0.c1)) THEN x'd831' WHEN ((vt1.c0)*(vt1.c0)) THEN ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) END;
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))-(vt1.c0)));
SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))-(vt1.c0)));
SELECT ALL * FROM vt0 WHERE (CAST('*zO꯯''2s-' AS TEXT)) ORDER BY vt0.c1  NULLS LAST, CASE ROUND(vt0.c0, vt0.c1)  WHEN (((vt0.c0, vt0.c1, vt0.c1, vt0.c1, x'e0')) BETWEEN ((vt0.c0, vt0.c1, vt0.c0, 0.851512994400726, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((CAST('*zO꯯''2s-' AS TEXT))AND(PRINTF(vt0.c0 COLLATE RTRIM)))) ORDER BY vt0.c1  NULLS LAST, CASE ROUND(vt0.c0, vt0.c1)  WHEN (((vt0.c0, vt0.c1, vt0.c1, vt0.c1, x'e0')) BETWEEN ((vt0.c0, vt0.c1, vt0.c0, 0.851512994400726, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((- (((x'')>(vt0.c1))))) ORDER BY vt0.c1  NULLS LAST, CASE ROUND(vt0.c0, vt0.c1)  WHEN (((vt0.c0, vt0.c1, vt0.c1, vt0.c1, x'e0')) BETWEEN ((vt0.c0, vt0.c1, vt0.c0, 0.851512994400726, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST('*zO꯯''2s-' AS TEXT)) ORDER BY vt0.c1  NULLS LAST, CASE ROUND(vt0.c0, vt0.c1)  WHEN (((vt0.c0, vt0.c1, vt0.c1, vt0.c1, x'e0')) BETWEEN ((vt0.c0, vt0.c1, vt0.c0, 0.851512994400726, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((CAST('*zO꯯''2s-' AS TEXT))AND(PRINTF(vt0.c0 COLLATE RTRIM)))) ORDER BY vt0.c1  NULLS LAST, CASE ROUND(vt0.c0, vt0.c1)  WHEN (((vt0.c0, vt0.c1, vt0.c1, vt0.c1, x'e0')) BETWEEN ((vt0.c0, vt0.c1, vt0.c0, 0.851512994400726, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((- (((x'')>(vt0.c1))))) ORDER BY vt0.c1  NULLS LAST, CASE ROUND(vt0.c0, vt0.c1)  WHEN (((vt0.c0, vt0.c1, vt0.c1, vt0.c1, x'e0')) BETWEEN ((vt0.c0, vt0.c1, vt0.c0, 0.851512994400726, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT DISTINCT MAX(vt1.c0) FROM vt1, vt0 WHERE ((((CAST(vt1.c0 AS INTEGER) IN ()))AND(x'')));
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS TEXT))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY ((vt0.c1) NOT NULL) COLLATE NOCASE DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((CAST(vt1.c0 AS TEXT))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS BLOB))))AND(CHANGES()))) ORDER BY ((vt0.c1) NOT NULL) COLLATE NOCASE DESC LIMIT 1;
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS TEXT))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY ((vt0.c1) NOT NULL) COLLATE NOCASE DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((CAST(vt1.c0 AS TEXT))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS BLOB))))AND(CHANGES()))) ORDER BY ((vt0.c1) NOT NULL) COLLATE NOCASE DESC LIMIT 1;
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((((((vt1.c0)AND(vt0.c1)))AND(x'')))OR(vt0.c1)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((((((vt1.c0)AND(vt0.c1)))AND(x'')))OR(vt0.c1)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)))AND((((NOT (vt0.c0)))AND(TRIM(DISTINCT vt1.c0)))))) LIMIT 0X2 INTERSECT SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) LIMIT 0X2;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN ((vt1.c0) NOTNULL) THEN UPPER(vt1.c0) ELSE vt1.c0 END) ORDER BY ((vt1.c0 COLLATE BINARY)IS(SQLITE_COMPILEOPTION_USED(vt1.c0))), vt1.c0 DESC  NULLS FIRST, LIKE(((vt1.c0) NOT NULL), LIKELIHOOD(vt1.c0, vt1.c0));
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((CASE vt1.c0 COLLATE RTRIM  WHEN ((vt1.c0) NOTNULL) THEN UPPER(vt1.c0) ELSE vt1.c0 END)AND(rtreenode((~ (vt1.c0)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) ORDER BY LIKELIHOOD(CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS REAL)) DESC  NULLS LAST LIMIT 1 INTERSECT SELECT MIN(vt1.c0) FROM vt1 WHERE ((((+ (vt1.c0))) IS TRUE)) ORDER BY LIKELIHOOD(CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS REAL)) DESC  NULLS LAST LIMIT 1;
SELECT MIN(vt0.c0) FROM vt0, vt1 WHERE (((((vt0.c1)|(vt0.c0))) IS FALSE)) ORDER BY (((((((((vt0.c1 IN ()))AND(-2.4960678E7)))OR(vt0.c0 COLLATE RTRIM)))OR(x'' COLLATE BINARY)))OR((~ (vt1.c0)))), (((((((vt1.c0, vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0, vt0.c1))))OR(vt0.c0 COLLATE NOCASE)))AND(((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))))  NULLS LAST, TYPEOF(vt0.c0) DESC;
SELECT MIN(vt0.c0) FROM vt0, vt1 WHERE (((((vt0.c1)|(vt0.c0))) IS FALSE)) ORDER BY (((((((((vt0.c1 IN ()))AND(-2.4960678E7)))OR(vt0.c0 COLLATE RTRIM)))OR(x'' COLLATE BINARY)))OR((~ (vt1.c0)))), (((((((vt1.c0, vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0, vt0.c1))))OR(vt0.c0 COLLATE NOCASE)))AND(((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))))  NULLS LAST, TYPEOF(vt0.c0) DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE BINARY IN (((((((((((((vt1.c0)AND(vt0.c1)))AND(x'73')))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(1646768730))))) ORDER BY NULL;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE BINARY IN (((((((((((((vt1.c0)AND(vt0.c1)))AND(x'73')))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(0X6227b25a))))) ORDER BY (- (vt1.c0))  NULLS FIRST, ((vt0.c0)GLOB(vt1.c0)) COLLATE RTRIM  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) ISNULL)) ORDER BY (- (vt1.c0))  NULLS FIRST, ((vt0.c0)GLOB(vt1.c0)) COLLATE RTRIM  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE BINARY IN (((((((((((((vt1.c0)AND(vt0.c1)))AND(x'73')))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(1646768730))))) ORDER BY NULL;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE BINARY IN (((((((((((((vt1.c0)AND(vt0.c1)))AND(x'73')))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(0X6227b25a))))) ORDER BY (- (vt1.c0))  NULLS FIRST, ((vt0.c0)GLOB(vt1.c0)) COLLATE RTRIM  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) ISNULL)) ORDER BY (- (vt1.c0))  NULLS FIRST, ((vt0.c0)GLOB(vt1.c0)) COLLATE RTRIM  NULLS FIRST LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((((NOT (vt0.c0)))OR(((vt0.c1)>=(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))))AND(((vt0.c0)IS(vt0.c1)))))OR(0.7386848824076875))) ORDER BY x'12' ASC, (+ (CAST(vt0.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((((((((((((NOT (vt0.c0)))OR(((vt0.c1)>=(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))))AND(((vt0.c0)IS(vt0.c1)))))OR(0.7386848824076875)))AND(CASE (vt0.c0 IN ())  WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c1, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, ''))) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c1)%(vt0.c0)) ELSE ((0.012568367878980857)>=(vt0.c1)) END))) ORDER BY x'12' ASC, (+ (CAST(vt0.c1 AS TEXT))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((((0.38495564362324075) NOT NULL))OR(vt1.c0))) ORDER BY x'12' ASC, (+ (CAST(vt0.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (- (SQLITE_COMPILEOPTION_GET(vt1.c0))) WHERE (UNICODE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) ORDER BY MAX(CASE WHEN vt0.c1 THEN vt0.c1 END, CAST(vt1.c0 AS NUMERIC)) DESC  NULLS FIRST, CASE WHEN ((((x'f998')AND(vt1.c0)))OR(vt1.c0)) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c1)) ELSE CAST(vt0.c1 AS INTEGER) END;
SELECT * FROM vt0 INNER JOIN vt1 ON (- (SQLITE_COMPILEOPTION_GET(vt1.c0))) WHERE (((UNICODE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))AND(((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))||((('|~')>(vt0.c0))))))) ORDER BY MAX(CASE WHEN vt0.c1 THEN vt0.c1 END, CAST(vt1.c0 AS NUMERIC)) DESC  NULLS FIRST, CASE WHEN ((((x'f998')AND(vt1.c0)))OR(vt1.c0)) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c1)) ELSE CAST(vt0.c1 AS INTEGER) END;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (- (SQLITE_COMPILEOPTION_GET(vt1.c0))) WHERE (UNICODE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) ORDER BY MAX(CASE WHEN vt0.c1 THEN vt0.c1 END, CAST(vt1.c0 AS NUMERIC)) DESC  NULLS FIRST, CASE WHEN ((((x'f998')AND(vt1.c0)))OR(vt1.c0)) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c1)) ELSE CAST(vt0.c1 AS INTEGER) END;
SELECT * FROM vt0 INNER JOIN vt1 ON (- (SQLITE_COMPILEOPTION_GET(vt1.c0))) WHERE (((UNICODE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))AND(((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))||((('|~')>(vt0.c0))))))) ORDER BY MAX(CASE WHEN vt0.c1 THEN vt0.c1 END, CAST(vt1.c0 AS NUMERIC)) DESC  NULLS FIRST, CASE WHEN ((((x'f998')AND(vt1.c0)))OR(vt1.c0)) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c1)) ELSE CAST(vt0.c1 AS INTEGER) END;
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0))) COLLATE RTRIM ASC  NULLS LAST, ((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)AND(PRINTF(vt1.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c0))))AND(((vt1.c0)<=(NULL)))))OR((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, x''))))) DESC;
SELECT DISTINCT MAX(vt0.c1) FROM vt1, vt0 WHERE (((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(CAST(vt0.c0 AS REAL))))AND(CAST((vt1.c0 IN (vt0.c0, vt0.c0)) AS REAL)))) ORDER BY CASE WHEN DATE(vt0.c1, '', vt0.c0, vt1.c0) THEN ((vt0.c1)IS(vt0.c0)) WHEN COALESCE(DISTINCT vt1.c0, vt0.c1, vt0.c0) THEN (NOT (vt0.c1)) WHEN load_extension(x'') THEN CAST(vt0.c0 AS NUMERIC) END ASC;
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0) NOT BETWEEN (0.692221455198149) AND (vt0.c0)) IN ()));
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0) NOT BETWEEN (0.692221455198149) AND (vt0.c0)) IN ()))AND((NOT (((vt0.c1)>(vt0.c0))))))) ORDER BY (((CAST(vt1.c0 AS INTEGER)))==((vt1.c0))) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((x'37')) AND ((((((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(1.258981454E9)))))) ORDER BY (((CAST(vt1.c0 AS INTEGER)))==((vt1.c0))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0) NOT BETWEEN (0.692221455198149) AND (vt0.c0)) IN ()));
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0) NOT BETWEEN (0.692221455198149) AND (vt0.c0)) IN ()))AND((NOT (((vt0.c1)>(vt0.c0))))))) ORDER BY (((CAST(vt1.c0 AS INTEGER)))==((vt1.c0))) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((x'37')) AND ((((((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(1.258981454E9)))))) ORDER BY (((CAST(vt1.c0 AS INTEGER)))==((vt1.c0))) DESC  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)IS NOT(x'a1cc'))) ORDER BY vt1.c0 COLLATE RTRIM  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))GLOB(((vt0.c0)>>(vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)IS NOT(x'a1cc')))AND((((NULL, (((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt1.c0))), (((x'', vt0.c0, NULL))>=((vt1.c0, vt1.c0, vt1.c0))), LIKELIHOOD(DISTINCT vt0.c1, vt0.c0)))=((((vt0.c0) IS TRUE), vt0.c0, ((vt0.c0)IS NOT('-470739370')), vt1.c0)))))) ORDER BY vt1.c0 COLLATE RTRIM  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))GLOB(((vt0.c0)>>(vt0.c0)))) ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY vt1.c0 COLLATE RTRIM  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))GLOB(((vt0.c0)>>(vt0.c0)))) ASC  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0 WHERE ((+ (PRINTF(vt0.c0, vt0.c0)))) ORDER BY ((DATE('1043942930', vt0.c0, vt0.c1, vt0.c1, vt0.c1))/(TRIM(DISTINCT vt0.c1, 0X4364ae35))) ASC, (((CASE vt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0.6235065713349728 ELSE vt0.c1 END, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))=((((vt0.c0)=(vt0.c0)), ((vt0.c1)-(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((((+ (PRINTF(vt0.c0, vt0.c0))))AND(vt0.c1))) ORDER BY ((DATE('1043942930', vt0.c0, vt0.c1, vt0.c1, vt0.c1))/(TRIM(DISTINCT vt0.c1, 0x4364ae35))) ASC, (((CASE vt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0.6235065713349728 ELSE vt0.c1 END, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))=((((vt0.c0)=(vt0.c0)), ((vt0.c1)-(vt0.c1))))) LIMIT 4;
SELECT * FROM vt0 WHERE ((+ (PRINTF(vt0.c0, vt0.c0)))) ORDER BY ((DATE('1043942930', vt0.c0, vt0.c1, vt0.c1, vt0.c1))/(TRIM(DISTINCT vt0.c1, 0X4364ae35))) ASC, (((CASE vt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0.6235065713349728 ELSE vt0.c1 END, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))=((((vt0.c0)=(vt0.c0)), ((vt0.c1)-(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((((+ (PRINTF(vt0.c0, vt0.c0))))AND(vt0.c1))) ORDER BY ((DATE('1043942930', vt0.c0, vt0.c1, vt0.c1, vt0.c1))/(TRIM(DISTINCT vt0.c1, 0x4364ae35))) ASC, (((CASE vt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0.6235065713349728 ELSE vt0.c1 END, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))=((((vt0.c0)=(vt0.c0)), ((vt0.c1)-(vt0.c1))))) LIMIT 4;
SELECT * FROM vt1, vt0 WHERE ((~ (((0.8276168406964959)IS NOT('0.03617990457422937')))));
SELECT * FROM vt1, vt0 WHERE ((~ (((0.8276168406964959)IS NOT('0.03617990457422937'))))) LIMIT 1;
SELECT * FROM vt1, vt0 WHERE ((~ (((0.8276168406964959)IS NOT('0.03617990457422937')))));
SELECT * FROM vt1, vt0 WHERE ((~ (((0.8276168406964959)IS NOT('0.03617990457422937'))))) LIMIT 1;
SELECT * FROM vt0 WHERE ((vt0.c1 IN (STRFTIME(vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1), CAST(vt0.c0 AS BLOB)))) ORDER BY CAST((((vt0.c0, x'049182')) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))) AS REAL) ASC, ((((vt0.c1) BETWEEN ('-296494888') AND (vt0.c0)))|((((vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((0x5e62e44b, vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN (STRFTIME(vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1), CAST(vt0.c0 AS BLOB))))AND(CASE WHEN (x'' IN (vt0.c1)) THEN (vt0.c0 IN (vt0.c1)) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0)-(vt0.c0)) WHEN '1412683960' THEN vt0.c1 WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)|(vt0.c1)) WHEN TOTAL_CHANGES() THEN (('-101758097')IS(vt0.c1)) END))) ORDER BY vt0.c1 COLLATE RTRIM DESC  NULLS LAST, ((vt0.c0) BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ()))), (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((TRIM(vt0.c0), ((x'') IS TRUE), vt0.c0)) AND ((vt0.c1, vt0.c1 COLLATE BINARY, (-4860928.0 IN (vt0.c1, 0x3cb950f4, 'Dkr.PoR7D'))))) ASC  NULLS FIRST LIMIT 0X2 INTERSECT SELECT * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS BLOB)) ORDER BY vt0.c1 COLLATE RTRIM DESC  NULLS LAST, ((vt0.c0) BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ()))), (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((TRIM(vt0.c0), ((x'') IS TRUE), vt0.c0)) AND ((vt0.c1, vt0.c1 COLLATE BINARY, (-4860928.0 IN (vt0.c1, 1018777844, 'Dkr.PoR7D'))))) ASC  NULLS FIRST LIMIT 2;
SELECT * FROM vt0 WHERE ((vt0.c1 IN (STRFTIME(vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1), CAST(vt0.c0 AS BLOB)))) ORDER BY CAST((((vt0.c0, x'049182')) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0))) AS REAL) ASC, ((((vt0.c1) BETWEEN ('-296494888') AND (vt0.c0)))|((((vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((0x5e62e44b, vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN (STRFTIME(vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1), CAST(vt0.c0 AS BLOB))))AND(CASE WHEN (x'' IN (vt0.c1)) THEN (vt0.c0 IN (vt0.c1)) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0)-(vt0.c0)) WHEN '1412683960' THEN vt0.c1 WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)|(vt0.c1)) WHEN TOTAL_CHANGES() THEN (('-101758097')IS(vt0.c1)) END))) ORDER BY vt0.c1 COLLATE RTRIM DESC  NULLS LAST, ((vt0.c0) BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ()))), (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((TRIM(vt0.c0), ((x'') IS TRUE), vt0.c0)) AND ((vt0.c1, vt0.c1 COLLATE BINARY, (-4860928.0 IN (vt0.c1, 0x3cb950f4, 'Dkr.PoR7D'))))) ASC  NULLS FIRST LIMIT 0X2 INTERSECT SELECT * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS BLOB)) ORDER BY vt0.c1 COLLATE RTRIM DESC  NULLS LAST, ((vt0.c0) BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ()))), (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((TRIM(vt0.c0), ((x'') IS TRUE), vt0.c0)) AND ((vt0.c1, vt0.c1 COLLATE BINARY, (-4860928.0 IN (vt0.c1, 1018777844, 'Dkr.PoR7D'))))) ASC  NULLS FIRST LIMIT 2;
SELECT COUNT(*) FROM vt0, vt1 WHERE (0.6105461235846295);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((0.6105461235846295)AND((((- (vt0.c1)))*(json_patch(vt0.c0, vt0.c0)))))) ORDER BY ABS(((((vt1.c0)AND(vt0.c0)))OR('653750665'))) DESC INTERSECT SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY ABS(((((vt1.c0)AND(vt0.c0)))OR('653750665'))) DESC;
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0)<(((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0)<(((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c0))))) ORDER BY (((vt0.c0 IN (vt0.c1))) IS TRUE) DESC  NULLS FIRST, NULL ASC  NULLS LAST, NULL ASC LIMIT 0x2;
SELECT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE RTRIM)LIKE(vt0.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE RTRIM)LIKE(vt0.c1 COLLATE RTRIM))) ORDER BY ((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))<=((vt0.c1 IN (vt0.c1, vt0.c0)))), CASE (NOT (vt1.c0))  WHEN (vt1.c0 IN (vt0.c0, vt1.c0)) THEN ((x'aa') NOT BETWEEN (vt1.c0) AND (vt0.c1)) ELSE vt1.c0 COLLATE RTRIM END ASC INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((NULL) BETWEEN (vt1.c0) AND (vt0.c1)) IN ())) ORDER BY ((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))<=((vt0.c1 IN (vt0.c1, vt0.c0)))), CASE (NOT (vt1.c0))  WHEN (vt1.c0 IN (vt0.c0, vt1.c0)) THEN ((x'aa') NOT BETWEEN (vt1.c0) AND (vt0.c1)) ELSE vt1.c0 COLLATE RTRIM END ASC;
SELECT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE RTRIM)LIKE(vt0.c1 COLLATE RTRIM)));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE RTRIM)LIKE(vt0.c1 COLLATE RTRIM))) ORDER BY ((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))<=((vt0.c1 IN (vt0.c1, vt0.c0)))), CASE (NOT (vt1.c0))  WHEN (vt1.c0 IN (vt0.c0, vt1.c0)) THEN ((x'aa') NOT BETWEEN (vt1.c0) AND (vt0.c1)) ELSE vt1.c0 COLLATE RTRIM END ASC INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((NULL) BETWEEN (vt1.c0) AND (vt0.c1)) IN ())) ORDER BY ((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))<=((vt0.c1 IN (vt0.c1, vt0.c0)))), CASE (NOT (vt1.c0))  WHEN (vt1.c0 IN (vt0.c0, vt1.c0)) THEN ((x'aa') NOT BETWEEN (vt1.c0) AND (vt0.c1)) ELSE vt1.c0 COLLATE RTRIM END ASC;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM) ORDER BY vt1.c0;
SELECT MIN(vt1.c0) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM) ORDER BY vt1.c0, (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))IS('㦪X')) LIMIT 0X1;
SELECT ALL * FROM vt1, vt0 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.4965711214024854 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END THEN DATE(vt0.c1, vt1.c0, x'', vt0.c0) WHEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN (vt0.c1 IN ()) END) ORDER BY (((- (vt0.c0)))%(LIKELIHOOD(vt0.c1, '537211722')))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.4965711214024854 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END THEN DATE(vt0.c1, vt1.c0, x'', vt0.c0) WHEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN (vt0.c1 IN ()) END) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)+(vt0.c1)) THEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END ASC, (((((((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)) IN ((- (vt0.c0)), UNLIKELY(DISTINCT vt0.c1))) LIMIT 0 INTERSECT SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)+(vt0.c1)) THEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END ASC, (((((((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)) IN ((- (vt0.c0)), UNLIKELY(DISTINCT vt0.c1))) LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.4965711214024854 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END THEN DATE(vt0.c1, vt1.c0, x'', vt0.c0) WHEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN (vt0.c1 IN ()) END) ORDER BY (((- (vt0.c0)))%(LIKELIHOOD(vt0.c1, '537211722')))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE (((NULL)<=(NULL))) ORDER BY (vt1.c0 COLLATE BINARY IN ())  NULLS LAST, LIKELIHOOD(((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)), LOWER(vt0.c0)) DESC;
SELECT DISTINCT COUNT(*) FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE (((((NULL)<(NULL)))AND(CAST(vt0.c0 AS TEXT) COLLATE RTRIM))) ORDER BY (vt1.c0 COLLATE BINARY IN ())  NULLS LAST, LIKELIHOOD(((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)), LOWER(vt0.c0)) DESC;
SELECT MIN(vt0.c1) FROM vt1 CROSS JOIN vt0 ON (((vt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)/(vt1.c0)), (vt1.c0 IN (0.5644982286679928)), (((vt0.c0, vt0.c1))>=((vt0.c0, NULL))))) AND (((- (vt0.c0)), ((((((vt0.c1)OR(vt1.c0)))AND('a.z~')))OR(vt0.c0)), vt0.c0))) WHERE (((vt1.c0)IS((+ (vt1.c0)))));
SELECT DISTINCT MIN(vt0.c1) FROM vt1 CROSS JOIN vt0 ON (((vt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)/(vt1.c0)), (vt1.c0 IN (0.5644982286679928)), (((vt0.c0, vt0.c1))>=((vt0.c0, NULL))))) AND (((- (vt0.c0)), ((((((vt0.c1)OR(vt1.c0)))AND('a.z~')))OR(vt0.c0)), vt0.c0))) WHERE (((vt1.c0)IS((+ (vt1.c0))))) ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN -1.624196834E9 END THEN CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN NULL THEN ((vt0.c1)AND(vt0.c1)) ELSE (((vt1.c0, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c1, 0.7157266306769183)) AND ((vt0.c1, vt1.c0, vt0.c1, vt0.c1))) END ASC, ((~ (NULL)) IN ()), (((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c1))!=((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c1))))AND(((vt1.c0)||(vt1.c0)))) DESC, ((((126028629) IS FALSE))!=((vt0.c1 IN (vt0.c0, vt0.c1))))  NULLS FIRST;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON CASE (- (vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x'96'))) END WHERE (((((((((((((((0x724e1420)IS(vt0.c1)))AND((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(((vt1.c0)||(vt0.c1)))))AND(((((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR(((vt0.c0) ISNULL))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND(TIME(0xffffffff846ac012, vt1.c0, vt1.c0, vt1.c0, vt0.c0)))) ORDER BY ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1))) ISNULL) DESC  NULLS FIRST, ((CAST(vt0.c1 AS REAL))<=(json_object(vt0.c0, vt0.c0, vt0.c1)))  NULLS LAST, (((vt1.c0 IN (vt1.c0, vt1.c0)))AND(vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON CASE (- (vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x'96'))) END WHERE (((((((((((((((1917719584)IS(vt0.c1)))AND((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(((vt1.c0)||(vt0.c1)))))AND(((((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR(((vt0.c0) ISNULL))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND(TIME(-2073378798, vt1.c0, vt1.c0, vt1.c0, vt0.c0)))) ORDER BY (~ (vt1.c0)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST LIMIT 0X1;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON CASE (- (vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x'96'))) END WHERE (((((((((((((((0x724e1420)IS(vt0.c1)))AND((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(((vt1.c0)||(vt0.c1)))))AND(((((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR(((vt0.c0) ISNULL))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND(TIME(0xffffffff846ac012, vt1.c0, vt1.c0, vt1.c0, vt0.c0)))) ORDER BY ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1))) ISNULL) DESC  NULLS FIRST, ((CAST(vt0.c1 AS REAL))<=(json_object(vt0.c0, vt0.c0, vt0.c1)))  NULLS LAST, (((vt1.c0 IN (vt1.c0, vt1.c0)))AND(vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON CASE (- (vt0.c1))  WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x'96'))) END WHERE (((((((((((((((1917719584)IS(vt0.c1)))AND((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(((vt1.c0)||(vt0.c1)))))AND(((((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR(((vt0.c0) ISNULL))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND(TIME(-2073378798, vt1.c0, vt1.c0, vt1.c0, vt0.c0)))) ORDER BY (~ (vt1.c0)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE (((((((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END)OR(vt1.c0)))AND(CASE WHEN vt0.c1 THEN '46522376' END)))OR((((vt0.c1, NULL, vt0.c1))=((vt0.c1, vt1.c0, vt0.c1))))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER)  NULLS LAST;
SELECT * FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE (((((((((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END)OR(vt1.c0)))AND(CASE WHEN vt0.c1 THEN '46522376' END)))OR((((vt0.c1, NULL, vt0.c1))=((vt0.c1, vt1.c0, vt0.c1))))))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt0.c1 AS TEXT)))) ORDER BY NULLIF(DISTINCT (vt0.c0 IN ('-1977593805')), ((((vt0.c0)OR(vt1.c0)))OR('<')))  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE (((x'f247') ISNULL)) ORDER BY NULLIF(DISTINCT (vt0.c0 IN ('-1977593805')), ((((vt0.c0)OR(vt1.c0)))OR('<')))  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE (((((((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END)OR(vt1.c0)))AND(CASE WHEN vt0.c1 THEN '46522376' END)))OR((((vt0.c1, NULL, vt0.c1))=((vt0.c1, vt1.c0, vt0.c1))))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER)  NULLS LAST;
SELECT * FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE (((((((((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END)OR(vt1.c0)))AND(CASE WHEN vt0.c1 THEN '46522376' END)))OR((((vt0.c1, NULL, vt0.c1))=((vt0.c1, vt1.c0, vt0.c1))))))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt0.c1 AS TEXT)))) ORDER BY NULLIF(DISTINCT (vt0.c0 IN ('-1977593805')), ((((vt0.c0)OR(vt1.c0)))OR('<')))  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE (((x'f247') ISNULL)) ORDER BY NULLIF(DISTINCT (vt0.c0 IN ('-1977593805')), ((((vt0.c0)OR(vt1.c0)))OR('<')))  NULLS LAST LIMIT 0;
SELECT MIN(vt0.c1) FROM vt0 WHERE (CASE WHEN ((((((((((((vt0.c1)AND(vt0.c0)))OR(x'')))OR(0.2821464436460427)))AND(vt0.c0)))OR(vt0.c0)))OR(0.5015620545538608)) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c1)>(vt0.c1)) THEN (((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c1, vt0.c1, vt0.c0))) END) ORDER BY vt0.c1 DESC  NULLS LAST, ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (((vt0.c1)<<(vt0.c1))) AND ((+ (vt0.c1))));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (CASE WHEN ((((((((((((vt0.c1)AND(vt0.c0)))OR(x'')))OR(0.2821464436460427)))AND(vt0.c0)))OR(vt0.c0)))OR(0.5015620545538608)) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c1)>(vt0.c1)) THEN (((vt0.c1, vt0.c0, vt0.c0))<((vt0.c1, vt0.c1, vt0.c0))) END) ORDER BY ((((vt0.c0) NOTNULL))IS(((vt0.c0)<(vt0.c0)))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (CAST(((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)) AS INTEGER)) ORDER BY ((((vt0.c0) NOTNULL))IS(((vt0.c0)<(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((COALESCE(vt0.c0, vt0.c1, vt0.c1, vt0.c0) IN ()));
SELECT MIN(vt0.c0) FROM vt0 WHERE ((((COALESCE(vt0.c0, vt0.c1, vt0.c1, vt0.c0) IN ()))AND(((vt0.c0)<>(vt0.c1)) COLLATE NOCASE))) ORDER BY ((UPPER(vt0.c1))||('Y1C㡧%v' COLLATE NOCASE))  NULLS FIRST LIMIT 0X2;
SELECT * FROM vt0 WHERE (0x6b41eb6) ORDER BY json_array_length(vt0.c0 COLLATE BINARY, (~ (vt0.c0))), CASE WHEN x'e5' THEN x'' WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c0 ELSE ((vt0.c1)IS NOT(vt0.c0)) END ASC;
SELECT ALL * FROM vt0 WHERE (112467638) ORDER BY ((((((ABS(DISTINCT vt0.c0))AND(((vt0.c1)+(vt0.c1)))))OR(((vt0.c1) ISNULL))))OR((~ (vt0.c0))))  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0))) BETWEEN (((vt0.c0)&(0.6499458429043982))) AND ((~ (vt0.c1))))) ORDER BY ((((((ABS(DISTINCT vt0.c0))AND(((vt0.c1)+(vt0.c1)))))OR(((vt0.c1) ISNULL))))OR((~ (vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE (0x6b41eb6) ORDER BY json_array_length(vt0.c0 COLLATE BINARY, (~ (vt0.c0))), CASE WHEN x'e5' THEN x'' WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c0 ELSE ((vt0.c1)IS NOT(vt0.c0)) END ASC;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0)) NOT BETWEEN (('T䯍0e''랿Td', vt1.c0)) AND ((vt1.c0, vt1.c0)))) BETWEEN (x'3e') AND (((vt1.c0)!=(vt1.c0)))));
SELECT * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0)) NOT BETWEEN (('T䯍0e''랿Td', vt1.c0)) AND ((vt1.c0, vt1.c0)))) BETWEEN (x'3e') AND (((vt1.c0)<>(vt1.c0)))))AND((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))==(((((0.5272137023255364, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))))))) ORDER BY ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))|(((vt1.c0) IS TRUE))) DESC  NULLS LAST, (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '1258981454' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))!=(((((vt1.c0))<>((0.6428434565447221)))))) ASC  NULLS LAST, CASE WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN '1185785581' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST INTERSECT SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN '-512060078' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY) ORDER BY ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))|(((vt1.c0) IS TRUE))) DESC  NULLS LAST, (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '1258981454' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))<>(((((vt1.c0))<>((0.6428434565447221)))))) ASC  NULLS LAST, CASE WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN '1185785581' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0)) NOT BETWEEN (('T䯍0e''랿Td', vt1.c0)) AND ((vt1.c0, vt1.c0)))) BETWEEN (x'3e') AND (((vt1.c0)!=(vt1.c0)))));
SELECT * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0)) NOT BETWEEN (('T䯍0e''랿Td', vt1.c0)) AND ((vt1.c0, vt1.c0)))) BETWEEN (x'3e') AND (((vt1.c0)<>(vt1.c0)))))AND((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))==(((((0.5272137023255364, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))))))) ORDER BY ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))|(((vt1.c0) IS TRUE))) DESC  NULLS LAST, (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '1258981454' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))!=(((((vt1.c0))<>((0.6428434565447221)))))) ASC  NULLS LAST, CASE WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN '1185785581' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST INTERSECT SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN '-512060078' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY) ORDER BY ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))|(((vt1.c0) IS TRUE))) DESC  NULLS LAST, (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '1258981454' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))<>(((((vt1.c0))<>((0.6428434565447221)))))) ASC  NULLS LAST, CASE WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN '1185785581' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt0 CROSS JOIN vt1 ON ((((((((((((((((((vt0.c1) ISNULL))OR(((vt1.c0) NOTNULL))))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c1 AS INTEGER))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))))AND(vt0.c0)))AND((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)) WHERE (((vt0.c1)>(((vt1.c0) NOTNULL)))) ORDER BY HEX(DISTINCT ((vt0.c1) NOTNULL))  NULLS LAST, ((((((('1883429547')AND(vt1.c0)))AND(vt0.c0)), CAST(vt0.c0 AS NUMERIC)))>((x'ed', ((vt0.c0) NOT BETWEEN (x'3b') AND (vt0.c0)))))  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt0 CROSS JOIN vt1 ON ((((((((((((((((((vt0.c1) ISNULL))OR(((vt1.c0) NOTNULL))))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c1 AS INTEGER))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))))AND(vt0.c0)))AND((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)) WHERE (((((vt0.c1)>(((vt1.c0) NOTNULL))))AND(((vt1.c0) NOT BETWEEN ((vt0.c1 IN ())) AND (x'6c'))))) ORDER BY HEX(DISTINCT ((vt0.c1) NOTNULL))  NULLS LAST, ((((((('1883429547')AND(vt1.c0)))AND(vt0.c0)), CAST(vt0.c0 AS NUMERIC)))>((x'ed', ((vt0.c0) NOT BETWEEN (x'3b') AND (vt0.c0)))))  NULLS LAST INTERSECT SELECT ALL MIN(vt0.c0) FROM vt0 CROSS JOIN vt1 ON ((((((((((((((((((vt0.c1) ISNULL))OR(((vt1.c0) NOTNULL))))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c1 AS INTEGER))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))))AND(vt0.c0)))AND((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)) WHERE (((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c1)))<<(((vt0.c0)LIKE(vt0.c0))))) ORDER BY HEX(DISTINCT ((vt0.c1) NOTNULL))  NULLS LAST, ((((((('1883429547')AND(vt1.c0)))AND(vt0.c0)), CAST(vt0.c0 AS NUMERIC)))>((x'ed', ((vt0.c0) NOT BETWEEN (x'3b') AND (vt0.c0)))))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN (((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS REAL))%(CAST(vt1.c0 AS INTEGER))), (+ (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)) DESC, CAST(LIKELIHOOD(DISTINCT vt0.c0, vt0.c0) AS BLOB)  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 NOT INDEXED WHERE ((((vt1.c0 IN (((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))))AND((((0.32239078032216717)<>(vt1.c0)) IN (vt1.c0 COLLATE NOCASE))))) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (((vt1.c0)>(vt1.c0)))) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((LIKE(vt0.c1, vt1.c0))))) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (((vt1.c0)>(vt1.c0))));
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN (((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS REAL))%(CAST(vt1.c0 AS INTEGER))), (+ (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)) DESC, CAST(LIKELIHOOD(DISTINCT vt0.c0, vt0.c0) AS BLOB)  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (0.16904676211991065);
SELECT * FROM vt0, vt1 WHERE (((0.16904676211991065)AND(((vt0.c0) BETWEEN ((((vt0.c1))>((vt1.c0)))) AND (7.38629008E8))))) LIMIT 0X1;
SELECT ALL * FROM vt0, vt1 WHERE (0.16904676211991065);
SELECT * FROM vt0, vt1 WHERE (((0.16904676211991065)AND(((vt0.c0) BETWEEN ((((vt0.c1))>((vt1.c0)))) AND (7.38629008E8))))) LIMIT 0X1;
SELECT * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE));
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE))AND((((((vt1.c0, NULL, vt1.c0))>=((vt1.c0, x'', vt1.c0))))*(vt1.c0))))) ORDER BY ((((((((((((((vt1.c0)AND(0.634949344733043)))OR(vt1.c0)))AND('Z')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) IS FALSE) LIMIT 2;
SELECT * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE));
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE))AND((((((vt1.c0, NULL, vt1.c0))>=((vt1.c0, x'', vt1.c0))))*(vt1.c0))))) ORDER BY ((((((((((((((vt1.c0)AND(0.634949344733043)))OR(vt1.c0)))AND('Z')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) IS FALSE) LIMIT 2;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) IS FALSE)) ORDER BY ((((((((((vt1.c0)<>(vt1.c0)))OR(('391877162' IN (vt1.c0)))))AND(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND('.庑_')) ASC, (((((vt1.c0))<=((vt1.c0)))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE WHEN vt1.c0 THEN vt1.c0 END)) ASC;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) IS FALSE)) ORDER BY (+ ((+ (vt1.c0)))), vt1.c0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)%(((vt1.c0)OR(vt1.c0))))) ORDER BY (+ ((+ (vt1.c0)))), vt1.c0;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((((((((vt1.c0)IS(vt1.c0)))OR(((vt1.c0)>=(0.3177024487885194)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((((((((((vt1.c0)IS(vt1.c0)))OR(((vt1.c0)>(0.3177024487885194)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((((vt1.c0)/(vt1.c0)))*(NULL)))));
SELECT * FROM vt1, vt0 WHERE ((~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))))AND(highlight(((vt0.c1)%(vt0.c0)), json_extract(vt0.c0, vt0.c1, vt0.c0), (((vt0.c1))>=((vt0.c1))), ((vt0.c0)>(vt0.c1)))))) ORDER BY (IFNULL(DISTINCT vt0.c0, vt1.c0) IN ()) ASC  NULLS FIRST, CASE CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END  WHEN (((vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0))) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN vt0.c1 THEN ((vt0.c1)>=(0.6748749466729572)) WHEN ((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN (((0.24038807583886057)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((x'')||(vt1.c0)) END  NULLS FIRST, (~ ((+ (vt0.c1)))) ASC LIMIT 0x2;
SELECT * FROM vt1, vt0 WHERE ((~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))))AND(highlight(((vt0.c1)%(vt0.c0)), json_extract(vt0.c0, vt0.c1, vt0.c0), (((vt0.c1))>=((vt0.c1))), ((vt0.c0)>(vt0.c1)))))) ORDER BY (IFNULL(DISTINCT vt0.c0, vt1.c0) IN ()) ASC  NULLS FIRST, CASE CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END  WHEN (((vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0))) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN vt0.c1 THEN ((vt0.c1)>=(0.6748749466729572)) WHEN ((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN (((0.24038807583886057)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((x'')||(vt1.c0)) END  NULLS FIRST, (~ ((+ (vt0.c1)))) ASC LIMIT 0x2;
SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(vt1.c0 COLLATE RTRIM)))AND((('1696562798')/(vt1.c0))))) ORDER BY CASE WHEN vt1.c0 THEN (NOT (vt1.c0)) WHEN vt1.c0 THEN x'c0b1' WHEN vt1.c0 THEN vt1.c0 WHEN (~ (vt1.c0)) THEN (+ (vt1.c0)) ELSE (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)) END;
SELECT ALL * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(vt1.c0 COLLATE RTRIM)))AND((('1696562798')/(vt1.c0))))) ORDER BY CASE WHEN vt1.c0 THEN (NOT (vt1.c0)) WHEN vt1.c0 THEN x'c0b1' WHEN vt1.c0 THEN vt1.c0 WHEN (~ (vt1.c0)) THEN (+ (vt1.c0)) ELSE (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)) END LIMIT 0x2;
SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(vt1.c0 COLLATE RTRIM)))AND((('1696562798')/(vt1.c0))))) ORDER BY CASE WHEN vt1.c0 THEN (NOT (vt1.c0)) WHEN vt1.c0 THEN x'c0b1' WHEN vt1.c0 THEN vt1.c0 WHEN (~ (vt1.c0)) THEN (+ (vt1.c0)) ELSE (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)) END;
SELECT ALL * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(vt1.c0 COLLATE RTRIM)))AND((('1696562798')/(vt1.c0))))) ORDER BY CASE WHEN vt1.c0 THEN (NOT (vt1.c0)) WHEN vt1.c0 THEN x'c0b1' WHEN vt1.c0 THEN vt1.c0 WHEN (~ (vt1.c0)) THEN (+ (vt1.c0)) ELSE (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)) END LIMIT 0x2;
SELECT MAX(vt1.c0) FROM vt0 LEFT OUTER JOIN vt1 ON (vt0.c0 IN ((vt1.c0 IN ()))) WHERE (((((((((((CAST(vt0.c0 AS BLOB))AND((((vt1.c0))=((vt0.c1))))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)))OR(LENGTH(vt1.c0))))AND(((NULL)>=(vt0.c1)))))OR(((vt0.c1)*(x'aaf9'))))) ORDER BY (NOT ((NOT (vt0.c1)))) ASC, ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((vt0.c1)OR(vt0.c1 COLLATE RTRIM));
SELECT DISTINCT MAX(vt1.c0) FROM vt0 INNER JOIN vt1 ON (vt0.c0 IN ((vt1.c0 IN ()))) WHERE (((((((((((((CAST(vt0.c0 AS BLOB))AND((((vt1.c0))=((vt0.c1))))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)))OR(LENGTH(vt1.c0))))AND(((NULL)>=(vt0.c1)))))OR(((vt0.c1)*(x'aaf9')))))AND(((((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)>>(vt1.c0)))))AND(((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))AND(((x'') IS TRUE)))))) ORDER BY ((vt0.c0 IN (vt1.c0, vt0.c1)) IN (((vt1.c0) NOT NULL))) DESC, vt0.c1 DESC;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) LIMIT 1;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (CASE ((vt1.c0)&(0.09482646582543619))  WHEN (vt1.c0 IN (vt1.c0)) THEN (((x'', vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))) WHEN NULL THEN TRIM(vt0.c0) WHEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt1.c0) NOT NULL) WHEN vt1.c0 COLLATE BINARY THEN COALESCE(vt1.c0, NULL, vt0.c0, vt0.c1, vt0.c1) END);
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((CASE ((vt1.c0)&(0.09482646582543619))  WHEN (vt1.c0 IN (vt1.c0)) THEN (((x'', vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))) WHEN NULL THEN TRIM(vt0.c0) WHEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt1.c0) NOT NULL) WHEN vt1.c0 COLLATE BINARY THEN COALESCE(vt1.c0, NULL, vt0.c0, vt0.c1, vt0.c1) END)AND(UPPER(NULL))));
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (CASE ((vt1.c0)&(0.09482646582543619))  WHEN (vt1.c0 IN (vt1.c0)) THEN (((x'', vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))) WHEN NULL THEN TRIM(vt0.c0) WHEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt1.c0) NOT NULL) WHEN vt1.c0 COLLATE BINARY THEN COALESCE(vt1.c0, NULL, vt0.c0, vt0.c1, vt0.c1) END);
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((CASE ((vt1.c0)&(0.09482646582543619))  WHEN (vt1.c0 IN (vt1.c0)) THEN (((x'', vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))) WHEN NULL THEN TRIM(vt0.c0) WHEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt1.c0) NOT NULL) WHEN vt1.c0 COLLATE BINARY THEN COALESCE(vt1.c0, NULL, vt0.c0, vt0.c1, vt0.c1) END)AND(UPPER(NULL))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ((vt0.c0 IN (vt1.c0, vt0.c0)), ((vt0.c1) NOT NULL)))) ORDER BY ''  NULLS LAST, ((((vt1.c0)-(vt0.c1))) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ((vt0.c0 IN (vt1.c0, vt0.c0))))) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE CAST(vt0.c1 AS NUMERIC) END, (vt0.c0 IN (vt0.c0, vt1.c0, vt1.c0)) COLLATE RTRIM  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1))) NOTNULL)) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE CAST(vt0.c1 AS NUMERIC) END, (vt0.c0 IN (vt0.c0, vt1.c0, vt1.c0)) COLLATE RTRIM  NULLS FIRST LIMIT 0;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<<(vt0.c1)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)<<(vt0.c1)))AND(((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL))))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))IS NOT(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<<(vt0.c1)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)<<(vt0.c1)))AND(((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL))))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))IS NOT(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))>>(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))>>(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (- ((NOT (vt1.c0)))), CASE (~ (vt1.c0))  WHEN ((vt1.c0) NOTNULL) THEN '-2083788955' END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1 IN ()) IN ())) ORDER BY CASE WHEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'c7	Etf' ELSE x'' END THEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(0.655737598673577)) ELSE ((vt0.c1) NOTNULL) END  NULLS LAST, vt0.c1 COLLATE RTRIM;
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1 IN ()) IN ())) ORDER BY (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))<((((vt1.c0)!=(vt0.c0))))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (TYPEOF(DISTINCT vt0.c0 COLLATE NOCASE)) ORDER BY (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))<((((vt1.c0)!=(vt0.c0))))) ASC LIMIT 0;
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE ((((((vt0.c1))<=((vt0.c1))))>(((((vt1.c0)AND(x'c1')))OR(vt0.c1)))));
SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE ((((((((vt0.c1))<=((vt0.c1))))>(((((vt1.c0)AND(x'c1')))OR(vt0.c1)))))AND((((((vt1.c0)OR(vt0.c1)))OR(vt1.c0)) IN ())))) ORDER BY vt1.c0 DESC, ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN x'33' ELSE vt0.c1 END)IS(((vt1.c0)LIKE(vt0.c0)))) DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE (CASE WHEN TIME(vt0.c0, vt0.c0, vt0.c1) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN ((vt0.c1)GLOB(vt0.c1)) ELSE ((vt0.c1) NOTNULL) END) ORDER BY vt1.c0 DESC, ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN x'33' ELSE vt0.c1 END)IS(((vt1.c0)LIKE(vt0.c0)))) DESC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (HEX((NOT (vt0.c1))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (HEX((NOT (vt0.c1)))) LIMIT 0;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (HEX((NOT (vt0.c1))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (HEX((NOT (vt0.c1)))) LIMIT 0;
SELECT MAX(vt1.c0) FROM vt1 WHERE ((~ (CAST(vt1.c0 AS TEXT)))) ORDER BY vt1.c0, CAST(((vt1.c0)GLOB(vt1.c0)) AS BLOB) ASC  NULLS FIRST, (((((vt1.c0)=(vt1.c0)), vt1.c0 COLLATE RTRIM, vt1.c0))<((0.6093867667854639 COLLATE BINARY, '-968710924', ((vt1.c0) ISNULL))));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((((~ (CAST(vt1.c0 AS TEXT))))AND((('-1209351572' COLLATE BINARY) NOTNULL)))) ORDER BY vt1.c0, ((((NULL) IS FALSE)) NOT BETWEEN (((((((559712966)AND(vt1.c0)))OR(vt1.c0)))AND(x''))) AND (((vt1.c0)||(vt1.c0)))) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (0X671265b5) ORDER BY vt1.c0, ((((NULL) IS FALSE)) NOT BETWEEN (((((((559712966)AND(vt1.c0)))OR(vt1.c0)))AND(x''))) AND (((vt1.c0)||(vt1.c0)))) DESC  NULLS FIRST LIMIT 1;
SELECT MIN(vt1.c0) FROM vt1 WHERE (vt1.c0);
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((vt1.c0)AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0) NOT NULL))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) LIMIT 0X3;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)+(vt1.c0))) NOT BETWEEN (((('-832874688', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))) AND ('1220071825'))) ORDER BY ((((((((vt1.c0)IS('f-.(甯GxvD')))AND(CHAR(vt1.c0, vt1.c0, vt1.c0, vt1.c0, '1252878248', vt1.c0))))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR((NOT (vt1.c0)))) ASC;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)+(vt1.c0))) NOT BETWEEN (((('-832874688', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))) AND ('1220071825')))AND((((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND (((vt1.c0 IN ()))))))) ORDER BY ((vt1.c0)GLOB(((vt1.c0)/(vt1.c0)))) ASC  NULLS LAST, ((((((vt1.c0)AND(x'5ce5')))OR(vt1.c0)))<>((NOT (vt1.c0)))) INTERSECT SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ORDER BY ((vt1.c0)GLOB(((vt1.c0)/(vt1.c0)))) ASC  NULLS LAST, ((((((vt1.c0)AND(x'5ce5')))OR(vt1.c0)))<>((NOT (vt1.c0))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)+(vt1.c0))) NOT BETWEEN (((('-832874688', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))) AND ('1220071825'))) ORDER BY ((((((((vt1.c0)IS('f-.(甯GxvD')))AND(CHAR(vt1.c0, vt1.c0, vt1.c0, vt1.c0, '1252878248', vt1.c0))))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR((NOT (vt1.c0)))) ASC;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)+(vt1.c0))) NOT BETWEEN (((('-832874688', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))) AND ('1220071825')))AND((((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND (((vt1.c0 IN ()))))))) ORDER BY ((vt1.c0)GLOB(((vt1.c0)/(vt1.c0)))) ASC  NULLS LAST, ((((((vt1.c0)AND(x'5ce5')))OR(vt1.c0)))<>((NOT (vt1.c0)))) INTERSECT SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ORDER BY ((vt1.c0)GLOB(((vt1.c0)/(vt1.c0)))) ASC  NULLS LAST, ((((((vt1.c0)AND(x'5ce5')))OR(vt1.c0)))<>((NOT (vt1.c0))));
SELECT * FROM vt0 WHERE ((SQLITE_SOURCE_ID() IN ())) ORDER BY UPPER(DISTINCT CAST(vt0.c0 AS INTEGER))  NULLS FIRST, ((CAST(NULL AS BLOB))>=(0X288de12d)) DESC;
SELECT ALL * FROM vt0 WHERE ((SQLITE_SOURCE_ID() IN ())) ORDER BY UPPER(DISTINCT CAST(vt0.c0 AS INTEGER))  NULLS FIRST, ((CAST(NULL AS BLOB))>=(680386861)) DESC INTERSECT SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))) NOT NULL)) ORDER BY UPPER(DISTINCT CAST(vt0.c0 AS INTEGER))  NULLS FIRST, ((CAST(NULL AS BLOB))>=(680386861)) DESC;
SELECT * FROM vt0 WHERE ((SQLITE_SOURCE_ID() IN ())) ORDER BY UPPER(DISTINCT CAST(vt0.c0 AS INTEGER))  NULLS FIRST, ((CAST(NULL AS BLOB))>=(0X288de12d)) DESC;
SELECT ALL * FROM vt0 WHERE ((SQLITE_SOURCE_ID() IN ())) ORDER BY UPPER(DISTINCT CAST(vt0.c0 AS INTEGER))  NULLS FIRST, ((CAST(NULL AS BLOB))>=(680386861)) DESC INTERSECT SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))) NOT NULL)) ORDER BY UPPER(DISTINCT CAST(vt0.c0 AS INTEGER))  NULLS FIRST, ((CAST(NULL AS BLOB))>=(680386861)) DESC;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt1.c0) NOTNULL)) BETWEEN (vt0.c1) AND (CAST(vt0.c1 AS NUMERIC))) WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT));
SELECT DISTINCT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt1.c0) NOTNULL)) BETWEEN (vt0.c1) AND (CAST(vt0.c1 AS NUMERIC))) WHERE (((CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT))AND(LAST_INSERT_ROWID()))) ORDER BY CASE vt1.c0  WHEN ((vt0.c1) ISNULL) THEN ((vt1.c0)<>(vt0.c1)) ELSE CAST(vt0.c0 AS TEXT) END, ((vt0.c1 COLLATE BINARY)%(((vt0.c0) NOT NULL))) ASC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt1.c0) NOTNULL)) BETWEEN (vt0.c1) AND (CAST(vt0.c1 AS NUMERIC))) WHERE (CAST(((-366362267)-(vt1.c0)) AS TEXT)) ORDER BY CASE vt1.c0  WHEN ((vt0.c1) ISNULL) THEN ((vt1.c0)!=(vt0.c1)) ELSE CAST(vt0.c0 AS TEXT) END, ((vt0.c1 COLLATE BINARY)%(((vt0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((NOT ((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0, vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE ((((NOT ((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))AND((((CAST(vt1.c0 AS NUMERIC)))>(((vt1.c0 IN ())))))));
SELECT ALL * FROM vt1 WHERE ((NOT ((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0, vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE ((((NOT ((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))AND((((CAST(vt1.c0 AS NUMERIC)))>(((vt1.c0 IN ())))))));
SELECT MIN(vt1.c0) FROM vt1 WHERE ((((CASE vt1.c0  WHEN '-2072573567' THEN vt1.c0 ELSE vt1.c0 END))!=((LIKELIHOOD(vt1.c0, vt1.c0)))));
SELECT MIN(vt1.c0) FROM vt1 WHERE ((((((CASE vt1.c0  WHEN '-2072573567' THEN vt1.c0 ELSE vt1.c0 END))>((LIKELIHOOD(vt1.c0, vt1.c0)))))AND(CAST(vt1.c0 AS REAL) COLLATE RTRIM))) LIMIT 1;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((x'6c') BETWEEN (vt1.c0) AND (vt0.c1)) THEN NULL END) ORDER BY ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS LAST, CASE WHEN ((0x52a0694) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (+ (vt1.c0)) END;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((x'6c') BETWEEN (vt1.c0) AND (vt0.c1)) THEN NULL END) ORDER BY ((highlight(vt1.c0, vt0.c0, vt0.c0, vt1.c0))||(LIKELY(vt0.c0))) DESC  NULLS FIRST INTERSECT SELECT * FROM vt0, vt1 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))OR(0.8745966914438076))  WHEN ((-1307813814) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN CAST(NULL AS INTEGER) THEN '1254715249' WHEN vt0.c0 COLLATE NOCASE THEN ((((x'24')OR(vt1.c0)))OR(vt1.c0)) ELSE UNLIKELY(vt0.c0) END) ORDER BY ((highlight(vt1.c0, vt0.c0, vt0.c0, vt1.c0))||(LIKELY(vt0.c0))) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((x'6c') BETWEEN (vt1.c0) AND (vt0.c1)) THEN NULL END) ORDER BY ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS LAST, CASE WHEN ((0x52a0694) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (+ (vt1.c0)) END;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((x'6c') BETWEEN (vt1.c0) AND (vt0.c1)) THEN NULL END) ORDER BY ((highlight(vt1.c0, vt0.c0, vt0.c0, vt1.c0))||(LIKELY(vt0.c0))) DESC  NULLS FIRST INTERSECT SELECT * FROM vt0, vt1 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))OR(0.8745966914438076))  WHEN ((-1307813814) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN CAST(NULL AS INTEGER) THEN '1254715249' WHEN vt0.c0 COLLATE NOCASE THEN ((((x'24')OR(vt1.c0)))OR(vt1.c0)) ELSE UNLIKELY(vt0.c0) END) ORDER BY ((highlight(vt1.c0, vt0.c0, vt0.c0, vt1.c0))||(LIKELY(vt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((((((- (vt1.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(''))) ORDER BY (x'4264' IN ((((vt1.c0, vt1.c0))<((vt1.c0, vt1.c0)))))  NULLS LAST, NULLIF(DISTINCT ((vt1.c0) IS TRUE), (vt1.c0 IN ()))  NULLS FIRST, vt1.c0 ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE ((((((((- (vt1.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(''))) ORDER BY (x'4264' IN ((((vt1.c0, vt1.c0))<((vt1.c0, vt1.c0)))))  NULLS LAST, NULLIF(DISTINCT ((vt1.c0) IS TRUE), (vt1.c0 IN ()))  NULLS FIRST, vt1.c0 ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c0)GLOB(vt1.c0)) AS INTEGER)) ORDER BY (x'4264' IN ((((vt1.c0, vt1.c0))<((vt1.c0, vt1.c0)))))  NULLS LAST, NULLIF(DISTINCT ((vt1.c0) IS TRUE), (vt1.c0 IN ()))  NULLS FIRST, vt1.c0 ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt1 WHERE ((((((((- (vt1.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(''))) ORDER BY (x'4264' IN ((((vt1.c0, vt1.c0))<((vt1.c0, vt1.c0)))))  NULLS LAST, NULLIF(DISTINCT ((vt1.c0) IS TRUE), (vt1.c0 IN ()))  NULLS FIRST, vt1.c0 ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 WHERE ((((((((- (vt1.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(''))) ORDER BY (x'4264' IN ((((vt1.c0, vt1.c0))<((vt1.c0, vt1.c0)))))  NULLS LAST, NULLIF(DISTINCT ((vt1.c0) IS TRUE), (vt1.c0 IN ()))  NULLS FIRST, vt1.c0 ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c0)GLOB(vt1.c0)) AS INTEGER)) ORDER BY (x'4264' IN ((((vt1.c0, vt1.c0))<((vt1.c0, vt1.c0)))))  NULLS LAST, NULLIF(DISTINCT ((vt1.c0) IS TRUE), (vt1.c0 IN ()))  NULLS FIRST, vt1.c0 ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c1)OR((vt0.c0 IN (vt0.c1)))))AND((vt0.c0 IN ()))))OR(vt0.c0))) ORDER BY vt1.c0 ASC, (((vt0.c1)) NOT BETWEEN ((json_type(vt1.c0))) AND (((+ (vt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c1)OR((vt0.c0 IN (vt0.c1)))))AND((vt0.c0 IN ()))))OR(vt0.c0))) ORDER BY (- ((((NULL)) BETWEEN ((-1257828529)) AND ((vt0.c1))))) DESC, ((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))AND(CASE vt1.c0  WHEN x'703d' THEN vt1.c0 ELSE -1546425339 END)))OR(vt0.c1)))AND(((((vt0.c1)OR(x'f06bcf')))OR(vt0.c1)))))OR(((vt0.c1)LIKE(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))OR(1075599456)))) DESC INTERSECT SELECT * FROM vt0, vt1 WHERE (x'') ORDER BY (- ((((NULL)) BETWEEN ((0Xffffffffb5070f4f)) AND ((vt0.c1))))) DESC, ((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))AND(CASE vt1.c0  WHEN x'703d' THEN vt1.c0 ELSE 0Xffffffffa3d36c05 END)))OR(vt0.c1)))AND(((((vt0.c1)OR(x'f06bcf')))OR(vt0.c1)))))OR(((vt0.c1)LIKE(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))OR(0X401c5860)))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c1)OR((vt0.c0 IN (vt0.c1)))))AND((vt0.c0 IN ()))))OR(vt0.c0))) ORDER BY vt1.c0 ASC, (((vt0.c1)) NOT BETWEEN ((json_type(vt1.c0))) AND (((+ (vt0.c0)))))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c1, 0.034762183442703876)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1))) COLLATE RTRIM);
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, 0.034762183442703876)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1))) COLLATE RTRIM)AND(((CAST(vt0.c1 AS BLOB)) BETWEEN (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))) AND (vt0.c1))))) ORDER BY (((vt0.c0, ((vt0.c0) IS TRUE), TYPEOF(vt0.c1)))<=((CASE WHEN vt0.c0 THEN 1846920456 WHEN vt0.c1 THEN vt0.c0 END, (+ (vt0.c1)), (NOT (vt0.c1))))) ASC, '-1155846499' COLLATE RTRIM COLLATE BINARY ASC LIMIT 0;
SELECT * FROM vt0 WHERE ((((vt0.c1, 0.034762183442703876)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1))) COLLATE RTRIM);
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, 0.034762183442703876)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1))) COLLATE RTRIM)AND(((CAST(vt0.c1 AS BLOB)) BETWEEN (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))) AND (vt0.c1))))) ORDER BY (((vt0.c0, ((vt0.c0) IS TRUE), TYPEOF(vt0.c1)))<=((CASE WHEN vt0.c0 THEN 1846920456 WHEN vt0.c1 THEN vt0.c0 END, (+ (vt0.c1)), (NOT (vt0.c1))))) ASC, '-1155846499' COLLATE RTRIM COLLATE BINARY ASC LIMIT 0;
SELECT MIN(vt0.c0) FROM vt0 WHERE (((((vt0.c0)-(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND ((~ (vt0.c1)))));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((((((vt0.c0)-(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND ((~ (vt0.c1)))))AND(CASE WHEN ((vt0.c0)>(vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END)));
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (vt0.c0);
SELECT MIN(vt0.c0) FROM vt0 WHERE (vt0.c0);
SELECT MIN(vt0.c1) FROM vt1, vt0 NOT INDEXED WHERE (json((- (NULL)))) ORDER BY ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)OR(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(((vt1.c0)/(vt0.c1)))), ((UPPER(vt0.c1))||(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS LAST;
SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE (((json((- (NULL))))AND((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))>=((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))))) ORDER BY ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)OR(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(((vt1.c0)/(vt0.c1)))), ((UPPER(vt0.c1))||(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS LAST LIMIT 2;
SELECT * FROM vt0 WHERE (HEX(json_type(vt0.c0)));
SELECT DISTINCT * FROM vt0 WHERE (((HEX(json_type(vt0.c0)))AND((((('*')OR(NULLIF(vt0.c1, vt0.c1))))OR('87956405'))))) ORDER BY rtreenode(x'', (+ (vt0.c1))), (((vt0.c1 IN ())) BETWEEN (vt0.c1 COLLATE BINARY) AND (json_type(vt0.c1)))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((vt0.c1 IN (((vt0.c1)||(vt0.c0)), SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY rtreenode(x'', (+ (vt0.c1))), (((vt0.c1 IN ())) BETWEEN (vt0.c1 COLLATE BINARY) AND (json_type(vt0.c1)))  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0 WHERE (HEX(json_type(vt0.c0)));
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((vt0.c1 IN (-168174432))) ORDER BY ((x'50' COLLATE NOCASE)GLOB(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS LAST, -1.20311225E9, ((x'') NOT BETWEEN (CHANGES()) AND (0xffffffffbcf1c6c3))  NULLS LAST;
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((((vt0.c1 IN (-168174432)))AND('3'))) ORDER BY vt0.c1  NULLS LAST, ((0.07100941702311514)IS NOT(0.7766885272814313))  NULLS FIRST LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (((vt1.c0) NOTNULL)) AND (vt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY (((- (vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN 'zJ7eDw' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND ((~ (vt0.c1))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY (((- (vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN 'zJ7eDw' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND ((~ (vt0.c1))))  NULLS FIRST LIMIT 2;
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY (((- (vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN 'zJ7eDw' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND ((~ (vt0.c1))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY (((- (vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN 'zJ7eDw' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND ((~ (vt0.c1))))  NULLS FIRST LIMIT 2;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST((((vt1.c0, vt0.c1, '-1257828529')) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) AS INTEGER));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST((((vt1.c0, vt0.c1, '-1257828529')) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) AS INTEGER))AND(CASE ((vt1.c0)||(vt0.c1))  WHEN ABS(vt0.c1) THEN (((vt1.c0, vt1.c0, vt0.c1))<((vt0.c1, vt1.c0, vt1.c0))) END))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (0xffffffffb5e0b377) AND (vt0.c1)) AS BLOB) INTERSECT SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY CAST(((vt0.c0) NOT BETWEEN (-1243565193) AND (vt0.c1)) AS BLOB);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)*(vt0.c1)))IS(rtreenode(vt0.c0, vt0.c0))) WHERE (CAST(((NULL) NOTNULL) AS NUMERIC));
SELECT DISTINCT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)*(vt0.c1)))IS(rtreenode(vt0.c0, vt0.c0))) WHERE (CAST(((NULL) NOTNULL) AS NUMERIC));
SELECT MIN(vt1.c0) FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN (vt1.c0 IN ()) THEN vt1.c0 ELSE ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END) ORDER BY CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN vt1.c0 ELSE vt1.c0 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN (vt1.c0 IN ()) THEN vt1.c0 ELSE ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END)AND('-1557303444'))) ORDER BY (((vt1.c0)-(vt1.c0)) IN (CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c0 COLLATE RTRIM)) DESC  NULLS LAST, (((vt1.c0, COALESCE(DISTINCT vt1.c0, vt1.c0)))<((CAST(vt1.c0 AS REAL), ((vt1.c0)AND(NULL))))) DESC LIMIT 2;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((-1.95396873E8, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((-1.95396873E8, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0))))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (~ (vt0.c1))))=((((vt0.c1)+(vt0.c0)), vt0.c0))) DESC  NULLS FIRST, (((((((~ (vt0.c1)))AND(vt0.c1)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN 0x4ddfdcc ELSE vt0.c1 END)) DESC, (((- (vt0.c1)))&(((vt0.c0)|(vt0.c1))))  NULLS LAST LIMIT 3;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((-1.95396873E8, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((-1.95396873E8, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0))))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (~ (vt0.c1))))=((((vt0.c1)+(vt0.c0)), vt0.c0))) DESC  NULLS FIRST, (((((((~ (vt0.c1)))AND(vt0.c1)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN 0x4ddfdcc ELSE vt0.c1 END)) DESC, (((- (vt0.c1)))&(((vt0.c0)|(vt0.c1))))  NULLS LAST LIMIT 3;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt1.c0, 0.43858026505005243))), CAST(vt0.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE))>((CAST(1.262217373E9 AS INTEGER), (+ (vt0.c1)), ((vt0.c1)+(vt1.c0)))))) ORDER BY (- (vt1.c0))  NULLS LAST, ((+ (vt1.c0)) IN (vt0.c0)) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((((((((vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt1.c0, 0.43858026505005243))), CAST(vt0.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE))>((CAST(1.262217373E9 AS INTEGER), (+ (vt0.c1)), ((vt0.c1)+(vt1.c0))))))AND(((vt0.c1 COLLATE NOCASE) IS TRUE)))) ORDER BY (- (vt1.c0))  NULLS LAST, ((+ (vt1.c0)) IN (vt0.c0)) ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((NULL) IS TRUE)) ORDER BY (- (vt1.c0))  NULLS LAST, ((+ (vt1.c0)) IN (vt0.c0)) ASC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM vt0 WHERE ((((((((('㶢&<Y') IS TRUE))AND((NULL IN (vt0.c0, vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(vt0.c0))) ORDER BY (~ (vt0.c0))  NULLS LAST, 0.782920398801565 ASC  NULLS LAST, ((((((((((x'') NOT NULL))OR(CASE vt0.c0  WHEN vt0.c0 THEN '1043883576' END)))OR(((vt0.c0)GLOB(x'')))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)))))AND(vt0.c1 COLLATE BINARY)), ((((vt0.c1)==(vt0.c1)))>((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((((((('㶢&<Y') IS TRUE))AND((NULL IN (vt0.c0, vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(vt0.c0))) ORDER BY (~ (vt0.c0))  NULLS LAST, 0.782920398801565 ASC  NULLS LAST, ((((((((((x'') NOT NULL))OR(CASE vt0.c0  WHEN vt0.c0 THEN '1043883576' END)))OR(((vt0.c0)GLOB(x'')))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)))))AND(vt0.c1 COLLATE BINARY)), ((((vt0.c1)==(vt0.c1)))>((+ (vt0.c1)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY (~ (vt0.c0))  NULLS LAST, 0.782920398801565 ASC  NULLS LAST, ((((((((((x'') NOT NULL))OR(CASE vt0.c0  WHEN vt0.c0 THEN '1043883576' END)))OR(((vt0.c0)GLOB(x'')))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)))))AND(vt0.c1 COLLATE BINARY)), ((((vt0.c1)=(vt0.c1)))>((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((((('㶢&<Y') IS TRUE))AND((NULL IN (vt0.c0, vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(vt0.c0))) ORDER BY (~ (vt0.c0))  NULLS LAST, 0.782920398801565 ASC  NULLS LAST, ((((((((((x'') NOT NULL))OR(CASE vt0.c0  WHEN vt0.c0 THEN '1043883576' END)))OR(((vt0.c0)GLOB(x'')))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)))))AND(vt0.c1 COLLATE BINARY)), ((((vt0.c1)==(vt0.c1)))>((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((((((('㶢&<Y') IS TRUE))AND((NULL IN (vt0.c0, vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(vt0.c0))) ORDER BY (~ (vt0.c0))  NULLS LAST, 0.782920398801565 ASC  NULLS LAST, ((((((((((x'') NOT NULL))OR(CASE vt0.c0  WHEN vt0.c0 THEN '1043883576' END)))OR(((vt0.c0)GLOB(x'')))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)))))AND(vt0.c1 COLLATE BINARY)), ((((vt0.c1)==(vt0.c1)))>((+ (vt0.c1)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY (~ (vt0.c0))  NULLS LAST, 0.782920398801565 ASC  NULLS LAST, ((((((((((x'') NOT NULL))OR(CASE vt0.c0  WHEN vt0.c0 THEN '1043883576' END)))OR(((vt0.c0)GLOB(x'')))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)))))AND(vt0.c1 COLLATE BINARY)), ((((vt0.c1)=(vt0.c1)))>((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((vt1.c0))<((vt1.c0))) COLLATE NOCASE) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN '-2075781505' THEN ((vt1.c0)IS(vt1.c0)) ELSE (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) END, -2.130026726E9  NULLS LAST, (((((0.37125719755651576) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0 COLLATE NOCASE, CASE '-844438941'  WHEN vt1.c0 THEN vt1.c0 END))=((NULL, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR('[M竷'))))) ASC;
SELECT * FROM vt1 WHERE ((((vt1.c0))<((vt1.c0))) COLLATE NOCASE) ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c0) IS FALSE)) AND ((('K.??')*(vt1.c0)))) ASC, UNLIKELY(CAST(vt1.c0 AS REAL))  NULLS LAST INTERSECT SELECT * FROM vt1 WHERE ((((vt1.c0 IN (-494344437))) IS FALSE)) ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c0) IS FALSE)) AND ((('K.??')*(vt1.c0)))) ASC, UNLIKELY(CAST(vt1.c0 AS REAL))  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0))<((vt1.c0))) COLLATE NOCASE) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN '-2075781505' THEN ((vt1.c0)IS(vt1.c0)) ELSE (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) END, -2.130026726E9  NULLS LAST, (((((0.37125719755651576) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0 COLLATE NOCASE, CASE '-844438941'  WHEN vt1.c0 THEN vt1.c0 END))=((NULL, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR('[M竷'))))) ASC;
SELECT * FROM vt1 WHERE ((((vt1.c0))<((vt1.c0))) COLLATE NOCASE) ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c0) IS FALSE)) AND ((('K.??')*(vt1.c0)))) ASC, UNLIKELY(CAST(vt1.c0 AS REAL))  NULLS LAST INTERSECT SELECT * FROM vt1 WHERE ((((vt1.c0 IN (-494344437))) IS FALSE)) ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c0) IS FALSE)) AND ((('K.??')*(vt1.c0)))) ASC, UNLIKELY(CAST(vt1.c0 AS REAL))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (0.03557536947941331);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.03557536947941331)AND(CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC)))) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 END))==(((((vt1.c0))!=(('-669325256')))))) DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CAST(vt0.c0 AS REAL)  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c1)AND((+ (0.26353840265464423))))) ORDER BY ((0.4916775605163831) IS TRUE) ASC, x''  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CAST(vt0.c0 AS REAL)  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c1)AND((+ (0.26353840265464423))))) ORDER BY ((0.4916775605163831) IS TRUE) ASC, x''  NULLS LAST;
SELECT * FROM vt0 NOT INDEXED INNER JOIN vt1 ON x'' WHERE ((((vt0.c0)|(vt0.c1)) IN ()));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON x'' WHERE ((((vt0.c0)|(vt0.c1)) IN ()));
SELECT * FROM vt0 NOT INDEXED INNER JOIN vt1 ON x'' WHERE ((((vt0.c0)|(vt0.c1)) IN ()));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON x'' WHERE ((((vt0.c0)|(vt0.c1)) IN ()));
SELECT * FROM vt1 WHERE (((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (+ ((vt1.c0 IN (vt1.c0)))), (CAST(vt1.c0 AS INTEGER) IN (vt1.c0)) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE (((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (+ ((vt1.c0 IN (vt1.c0)))), (CAST(vt1.c0 AS INTEGER) IN (vt1.c0)) DESC  NULLS LAST LIMIT 1;
SELECT * FROM vt1 WHERE (((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (+ ((vt1.c0 IN (vt1.c0)))), (CAST(vt1.c0 AS INTEGER) IN (vt1.c0)) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE (((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (+ ((vt1.c0 IN (vt1.c0)))), (CAST(vt1.c0 AS INTEGER) IN (vt1.c0)) DESC  NULLS LAST LIMIT 1;
SELECT * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()))AND(CASE x'f2b4'  WHEN ((vt1.c0)AND(vt1.c0)) THEN ((vt1.c0)OR(vt1.c0)) WHEN ('6' IN ()) THEN ((vt1.c0) NOTNULL) END))) ORDER BY ((CAST(vt1.c0 AS REAL)) IS FALSE), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))>(CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()))AND(CASE x'f2b4'  WHEN ((vt1.c0)AND(vt1.c0)) THEN ((vt1.c0)OR(vt1.c0)) WHEN ('6' IN ()) THEN ((vt1.c0) NOTNULL) END))) ORDER BY ((CAST(vt1.c0 AS REAL)) IS FALSE), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))>(CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)AND(CASE WHEN ((vt0.c0) NOTNULL) THEN CASE vt0.c1  WHEN vt0.c1 THEN '' END WHEN vt0.c1 COLLATE BINARY THEN (~ (vt0.c0)) ELSE CAST(vt0.c1 AS NUMERIC) END))) ORDER BY (((vt0.c0 IN ()))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN -1139000363 THEN '1139552051' ELSE vt0.c0 END)), CAST(NULL AS INTEGER) COLLATE BINARY ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ('1115687700') AND (LIKELIHOOD(DISTINCT vt0.c1, vt0.c1))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)AND(CASE WHEN ((vt0.c0) NOTNULL) THEN CASE vt0.c1  WHEN vt0.c1 THEN '' END WHEN vt0.c1 COLLATE BINARY THEN (~ (vt0.c0)) ELSE CAST(vt0.c1 AS NUMERIC) END))) ORDER BY (((vt0.c0 IN ()))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN -1139000363 THEN '1139552051' ELSE vt0.c0 END)), CAST(NULL AS INTEGER) COLLATE BINARY ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ('1115687700') AND (LIKELIHOOD(DISTINCT vt0.c1, vt0.c1))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(x''))) ORDER BY (json_insert(vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1) IN (0.6386073490585216, vt0.c1)) DESC;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(x'')))AND(((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) AND ((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c0)) AND ((vt0.c1, vt1.c0, NULL)))))))) ORDER BY (json_insert(vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1) IN (0.6386073490585216, vt0.c1)) DESC INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (UNLIKELY((+ (vt1.c0)))) ORDER BY (json_insert(vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1) IN (0.6386073490585216, vt0.c1)) DESC;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (CAST('3Lc李Khf.8' AS REAL) COLLATE BINARY) ORDER BY CASE WHEN '-1634785421' THEN ('' IN (vt0.c1)) WHEN ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('v,n}')) WHEN '-338958845' THEN CAST(vt0.c1 AS INTEGER) WHEN 0.7859371895965469 THEN (vt0.c1 IN (vt0.c0, vt0.c1, vt0.c0)) END DESC, ((CAST(NULL AS REAL)) NOT BETWEEN (vt0.c1) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))))  NULLS FIRST;
SELECT MAX(vt0.c0) FROM vt0 WHERE (CAST('3Lc李Khf.8' AS REAL) COLLATE BINARY) ORDER BY CASE WHEN '-1634785421' THEN ('' IN (vt0.c1)) WHEN ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('v,n}')) WHEN '-338958845' THEN CAST(vt0.c1 AS INTEGER) WHEN 0.7859371895965469 THEN (vt0.c1 IN (vt0.c0, vt0.c1, vt0.c0)) END DESC, ((CAST(NULL AS REAL)) NOT BETWEEN (vt0.c1) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))))  NULLS FIRST;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)) ORDER BY (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()), ((vt1.c0 COLLATE NOCASE) ISNULL)  NULLS LAST;
SELECT MIN(vt1.c0) FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL))AND(((CASE WHEN 0Xffffffff9f30b91e THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (0X3e386638) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0.5700634961481648 END))))) ORDER BY (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()), ((vt1.c0 COLLATE NOCASE) ISNULL)  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((((vt1.c0)AND('1917719584')))OR(vt1.c0)), '_]z' COLLATE NOCASE))!=((((vt1.c0)||(vt1.c0)), ((vt1.c0)<<(vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))OR(0.11352091349937454)))AND(-1.656493811E9)))AND(vt1.c0)))))) ORDER BY vt1.c0 ASC  NULLS FIRST, ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))GLOB(vt1.c0)) ASC;
SELECT * FROM vt1 WHERE ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((((vt1.c0)AND('1917719584')))OR(vt1.c0)), '_]z' COLLATE NOCASE))>((((vt1.c0)||(vt1.c0)), ((vt1.c0)<<(vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))OR(0.11352091349937454)))AND(-1.656493811E9)))AND(vt1.c0))))))AND(1055491992))) ORDER BY (((vt1.c0, vt1.c0)) NOT BETWEEN ((TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0), ((vt1.c0)IS(NULL)))) AND (((vt1.c0 IN (vt1.c0, x'')), (((vt1.c0))==((vt1.c0)))))) DESC  NULLS LAST, (((vt1.c0)) BETWEEN ((((((((((x'a418')AND(vt1.c0)))OR(NULL)))AND(vt1.c0)))AND(vt1.c0)))) AND ((vt1.c0))) DESC;
SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((((vt1.c0)AND('1917719584')))OR(vt1.c0)), '_]z' COLLATE NOCASE))!=((((vt1.c0)||(vt1.c0)), ((vt1.c0)<<(vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))OR(0.11352091349937454)))AND(-1.656493811E9)))AND(vt1.c0)))))) ORDER BY vt1.c0 ASC  NULLS FIRST, ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))GLOB(vt1.c0)) ASC;
SELECT * FROM vt1 WHERE ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((((vt1.c0)AND('1917719584')))OR(vt1.c0)), '_]z' COLLATE NOCASE))>((((vt1.c0)||(vt1.c0)), ((vt1.c0)<<(vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))OR(0.11352091349937454)))AND(-1.656493811E9)))AND(vt1.c0))))))AND(1055491992))) ORDER BY (((vt1.c0, vt1.c0)) NOT BETWEEN ((TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0), ((vt1.c0)IS(NULL)))) AND (((vt1.c0 IN (vt1.c0, x'')), (((vt1.c0))==((vt1.c0)))))) DESC  NULLS LAST, (((vt1.c0)) BETWEEN ((((((((((x'a418')AND(vt1.c0)))OR(NULL)))AND(vt1.c0)))AND(vt1.c0)))) AND ((vt1.c0))) DESC;
SELECT * FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (NULL COLLATE NOCASE) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN '3陇H' THEN vt0.c1 ELSE vt0.c0 END)) WHERE (vt1.c0);
SELECT * FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (NULL COLLATE NOCASE) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN '3陇H' THEN vt0.c1 ELSE vt0.c0 END)) WHERE (((vt1.c0)AND((((vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CASE WHEN '-2050172140' THEN vt0.c0 WHEN '-2022459642' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, x'')))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (NULL COLLATE NOCASE) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN '3陇H' THEN vt0.c1 ELSE vt0.c0 END)) WHERE (((CAST(vt0.c0 AS TEXT))<=(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) LIMIT 0x1;
SELECT * FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (NULL COLLATE NOCASE) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN '3陇H' THEN vt0.c1 ELSE vt0.c0 END)) WHERE (vt1.c0);
SELECT * FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (NULL COLLATE NOCASE) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN '3陇H' THEN vt0.c1 ELSE vt0.c0 END)) WHERE (((vt1.c0)AND((((vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CASE WHEN '-2050172140' THEN vt0.c0 WHEN '-2022459642' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, x'')))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (NULL COLLATE NOCASE) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN '3陇H' THEN vt0.c1 ELSE vt0.c0 END)) WHERE (((CAST(vt0.c0 AS TEXT))<=(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) LIMIT 0x1;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((('-1096545910') NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (((vt0.c0)*(vt0.c0)))));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((((('-1096545910') NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (((vt0.c0)*(vt0.c0)))))AND(((vt0.c1) ISNULL) COLLATE BINARY)));
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY NULL DESC  NULLS LAST, TRIM(((vt0.c1)OR(vt0.c0)), ((((((((vt1.c0)AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)));
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE (((vt1.c0)AND((+ (CAST(vt0.c0 AS REAL)))))) ORDER BY (((NOT (vt0.c1))) NOT BETWEEN ((((vt0.c1, vt0.c1))==((0.5910837518497871, vt1.c0)))) AND (((vt0.c1)LIKE(vt0.c1)))), ((vt0.c0) NOTNULL) COLLATE RTRIM, (((((vt0.c0)&(vt0.c0))))=(((vt0.c0 IN (vt0.c1)))))  NULLS LAST LIMIT 0X1 INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS REAL) THEN NULLIF(DISTINCT vt0.c0, vt0.c0) END) ORDER BY (((NOT (vt0.c1))) NOT BETWEEN ((((vt0.c1, vt0.c1))=((0.5910837518497871, vt1.c0)))) AND (((vt0.c1)LIKE(vt0.c1)))), ((vt0.c0) NOTNULL) COLLATE RTRIM, (((((vt0.c0)&(vt0.c0))))=(((vt0.c0 IN (vt0.c1)))))  NULLS LAST LIMIT 0x1;
SELECT * FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND((vt1.c0 IN (vt1.c0, vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((((CAST(vt1.c0 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND((vt1.c0 IN (vt1.c0)))))AND(((((((((((vt1.c0)<(vt1.c0)))OR(vt1.c0)))OR('I')))OR(('
}ZSoh%' IN (vt1.c0)))))AND((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) INTERSECT SELECT ALL * FROM vt1 WHERE (('衎.sqs%' IN ()));
SELECT * FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND((vt1.c0 IN (vt1.c0, vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((((CAST(vt1.c0 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND((vt1.c0 IN (vt1.c0)))))AND(((((((((((vt1.c0)<(vt1.c0)))OR(vt1.c0)))OR('I')))OR(('
}ZSoh%' IN (vt1.c0)))))AND((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) INTERSECT SELECT ALL * FROM vt1 WHERE (('衎.sqs%' IN ()));
SELECT MIN(vt0.c1) FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c1) IS TRUE) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT MIN(vt0.c1) FROM vt1, vt0 WHERE (((CASE WHEN ((vt0.c1) IS TRUE) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END)AND(CASE CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN x'69ec' THEN vt0.c1 WHEN x'a7294e50ac' THEN vt0.c0 ELSE vt0.c1 END  WHEN CAST(NULL AS TEXT) THEN ((vt0.c1)OR(vt0.c1)) END))) LIMIT 0 INTERSECT SELECT MIN(vt0.c1) FROM vt1, vt0 WHERE (LIKELY(((vt0.c0) NOT NULL))) LIMIT 0;
SELECT MIN(vt1.c0) FROM vt1 WHERE ('-1136764639') ORDER BY (((((0.9569688092851321) IS TRUE), vt1.c0 COLLATE NOCASE))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS TRUE))));
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ((('-1136764639')AND(CASE WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END))) ORDER BY (((((0.9569688092851321) IS TRUE), vt1.c0 COLLATE NOCASE))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS TRUE)))) LIMIT 0 INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (CASE CAST(vt1.c0 AS TEXT)  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN (NOT (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE (vt1.c0 IN ()) END) ORDER BY (((((0.9569688092851321) IS TRUE), vt1.c0 COLLATE NOCASE))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS TRUE)))) LIMIT 0X0;
SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE (vt0.c1 COLLATE NOCASE);
SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE (vt0.c1 COLLATE NOCASE);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (((vt0.c0)AND(x''))) ORDER BY x'11f089'  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (((vt0.c0)AND(x''))) ORDER BY x'11f089'  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (+ ((((vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c0))))) WHERE ((CAST(vt0.c0 AS REAL) IN ((vt0.c0 IN (vt0.c1))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL) ASC, CAST('[]' AS REAL) DESC, ((((x'')||(vt1.c0))) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (+ ((((vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c0))))) WHERE ((((CAST(vt0.c0 AS REAL) IN ((vt0.c0 IN (vt0.c1)))))AND((((((vt0.c0, vt0.c1))!=((NULL, vt0.c1))))+(((vt0.c1)=(vt0.c1))))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL) ASC, CAST('[]' AS REAL) DESC, ((((x'')||(vt1.c0))) ISNULL)  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (+ ((((vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c0))))) WHERE ((ABS(vt0.c0) IN (json_valid(vt0.c1)))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL) ASC, CAST('[]' AS REAL) DESC, ((((x'')||(vt1.c0))) ISNULL)  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE COLLATE NOCASE WHERE (CAST(CHAR(vt0.c0, vt0.c0) AS REAL)) ORDER BY vt0.c1, CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt0.c0 WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) THEN (((1550879886, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((-1792888573, vt0.c0))) END;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE COLLATE NOCASE WHERE (CAST(CHAR(vt0.c0, vt0.c0) AS REAL)) ORDER BY vt0.c1, CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt0.c0 WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) THEN (((1550879886, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((0Xffffffff9522b103, vt0.c0))) END LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE COLLATE NOCASE WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS REAL)) ORDER BY vt0.c1, CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt0.c0 WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) THEN (((0X5c708c8e, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((-1792888573, vt0.c0))) END LIMIT 1;
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE COLLATE NOCASE WHERE (CAST(CHAR(vt0.c0, vt0.c0) AS REAL)) ORDER BY vt0.c1, CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt0.c0 WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) THEN (((1550879886, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((-1792888573, vt0.c0))) END;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE COLLATE NOCASE WHERE (CAST(CHAR(vt0.c0, vt0.c0) AS REAL)) ORDER BY vt0.c1, CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt0.c0 WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) THEN (((1550879886, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((0Xffffffff9522b103, vt0.c0))) END LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE COLLATE NOCASE WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS REAL)) ORDER BY vt0.c1, CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt0.c0 WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) THEN (((0X5c708c8e, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((-1792888573, vt0.c0))) END LIMIT 1;
SELECT MIN(vt1.c0) FROM vt0, vt1 WHERE (((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) ORDER BY CASE WHEN (('1-500000')&(vt1.c0)) THEN ((vt0.c0)|(vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN ((vt1.c0)>(vt1.c0)) WHEN CAST(vt0.c0 AS REAL) THEN '-325490015' END ASC  NULLS FIRST, (((((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, 'k')) AND ((vt0.c0, vt0.c1))))OR((((vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, 0.8953898786683685, vt1.c0)) AND ((vt0.c0, x'faa3bc', vt0.c1))))) ASC;
SELECT DISTINCT MIN(vt1.c0) FROM vt0, vt1 WHERE (((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) ORDER BY (CAST(vt0.c0 AS TEXT) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS FIRST, ((CAST(vt0.c1 AS INTEGER)) NOT NULL) DESC  NULLS LAST, vt0.c1  NULLS LAST INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt0, vt1 WHERE ((((vt0.c0 IN ()))>>(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN 1086688798 WHEN vt0.c1 THEN vt0.c1 WHEN 0.9572336032656616 THEN '' ELSE vt0.c0 END))) ORDER BY (CAST(vt0.c0 AS TEXT) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS FIRST, ((CAST(vt0.c1 AS INTEGER)) NOT NULL) DESC  NULLS LAST, vt0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0))<>((vt0.c1, x'2a5c2bc3'))) COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0))!=((vt0.c1, x'2a5c2bc3'))) COLLATE RTRIM) ORDER BY (((((vt0.c0))<((vt0.c0)))) NOTNULL) LIMIT 5;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt0.c0)))/(((((vt0.c1)AND(vt1.c0)))AND(vt0.c0))))) ORDER BY ((vt1.c0)-(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt0.c0)))/(((((vt0.c1)AND(vt1.c0)))AND(vt0.c0))))) ORDER BY ((vt1.c0)-(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt1.c0)<(vt0.c0))))) ORDER BY ((vt1.c0)-(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt0.c0)))/(((((vt0.c1)AND(vt1.c0)))AND(vt0.c0))))) ORDER BY ((vt1.c0)-(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt0.c0)))/(((((vt0.c1)AND(vt1.c0)))AND(vt0.c0))))) ORDER BY ((vt1.c0)-(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt1.c0)<(vt0.c0))))) ORDER BY ((vt1.c0)-(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN x'' THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS REAL) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END);
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN x'' THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS REAL) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END) LIMIT 0X4 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ())) LIMIT 0X4;
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN x'' THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS REAL) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END);
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN x'' THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS REAL) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END) LIMIT 0X4 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ())) LIMIT 0X4;
SELECT MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON (((vt0.c1, vt0.c1)) BETWEEN (((vt0.c1 IN (vt1.c0)), GLOB(vt0.c1, vt1.c0))) AND ((((vt0.c1) IS FALSE), TYPEOF(DISTINCT vt1.c0)))) WHERE (NULL COLLATE BINARY);
SELECT MIN(vt0.c1) FROM vt0 NOT INDEXED INNER JOIN vt1 ON (((vt0.c1, vt0.c1)) BETWEEN (((vt0.c1 IN (vt1.c0)), GLOB(vt0.c1, vt1.c0))) AND ((((vt0.c1) IS FALSE), TYPEOF(DISTINCT vt1.c0)))) WHERE (((NULL COLLATE BINARY)AND(0.18532188852226505))) LIMIT 0 INTERSECT SELECT ALL MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON (((vt0.c1, vt0.c1)) BETWEEN (((vt0.c1 IN (vt1.c0)), GLOB(vt0.c1, vt1.c0))) AND ((((vt0.c1) IS FALSE), TYPEOF(DISTINCT vt1.c0)))) WHERE ((((vt0.c0, ((vt0.c1) ISNULL), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c1, vt0.c1, vt0.c0, 'FA', vt0.c0))<=((vt0.c0, vt1.c0, vt0.c1, vt0.c1, vt1.c0))), ((vt0.c1)GLOB(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))>((vt1.c0 COLLATE RTRIM, ((vt1.c0)IS(vt1.c0)), (~ (vt1.c0)), (vt1.c0 IN (vt1.c0)), ((vt1.c0) IS TRUE), vt0.c0)))) LIMIT 0;
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE (UNLIKELY(DISTINCT ((vt0.c1)>=(vt0.c0))));
SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (UNLIKELY(DISTINCT ((vt0.c1)>=(vt0.c0)))) ORDER BY CAST(((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)) AS BLOB)  NULLS LAST LIMIT 0x1;
SELECT ALL MAX(vt0.c1) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS TEXT))IS((vt0.c1 IN ())))) ORDER BY CAST(0.4470791964515195 AS BLOB) COLLATE RTRIM, ((0xffffffffa41b833f)AND(((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT MAX(vt0.c1) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS TEXT))IS((vt0.c1 IN ())))) ORDER BY ((((CAST(vt0.c1 AS TEXT))AND(vt1.c0)))OR(((vt1.c0) NOT NULL))), (((((vt0.c0, vt0.c1, vt0.c1))!=((vt0.c0, vt0.c1, vt0.c1))))*(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)) DESC  NULLS FIRST, RTRIM(CAST(vt1.c0 AS REAL)) DESC  NULLS LAST LIMIT 1 INTERSECT SELECT MAX(vt0.c1) FROM vt0, vt1 WHERE ((((vt0.c0)OR(vt1.c0)) IN ())) ORDER BY ((((CAST(vt0.c1 AS TEXT))AND(vt1.c0)))OR(((vt1.c0) NOT NULL))), (((((vt0.c0, vt0.c1, vt0.c1))<>((vt0.c0, vt0.c1, vt0.c1))))*(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)) DESC  NULLS FIRST, RTRIM(CAST(vt1.c0 AS REAL)) DESC  NULLS LAST LIMIT 1;
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c1)) NOT BETWEEN ((((vt0.c1)&(x'93')))) AND (((0X51ca917c IN (vt1.c0))))) WHERE (TRIM((- (vt1.c0)))) ORDER BY CASE WHEN ((vt0.c1)LIKE(vt1.c0)) THEN 'bWhv_衎' WHEN vt0.c1 THEN ((vt1.c0) IS FALSE) ELSE ((vt0.c0) IS TRUE) END DESC  NULLS FIRST, vt1.c0;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((vt0.c1)) NOT BETWEEN ((((vt0.c1)&(x'93')))) AND (((0X51ca917c IN (vt1.c0))))) WHERE (((TRIM((- (vt1.c0))))AND(0.441402266374763))) ORDER BY CASE WHEN ((vt0.c1)LIKE(vt1.c0)) THEN 'bWhv_衎' WHEN vt0.c1 THEN ((vt1.c0) IS FALSE) ELSE ((vt0.c0) IS TRUE) END DESC  NULLS FIRST, vt1.c0 LIMIT 1;
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c1)) NOT BETWEEN ((((vt0.c1)&(x'93')))) AND (((0X51ca917c IN (vt1.c0))))) WHERE (TRIM((- (vt1.c0)))) ORDER BY CASE WHEN ((vt0.c1)LIKE(vt1.c0)) THEN 'bWhv_衎' WHEN vt0.c1 THEN ((vt1.c0) IS FALSE) ELSE ((vt0.c0) IS TRUE) END DESC  NULLS FIRST, vt1.c0;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((vt0.c1)) NOT BETWEEN ((((vt0.c1)&(x'93')))) AND (((0X51ca917c IN (vt1.c0))))) WHERE (((TRIM((- (vt1.c0))))AND(0.441402266374763))) ORDER BY CASE WHEN ((vt0.c1)LIKE(vt1.c0)) THEN 'bWhv_衎' WHEN vt0.c1 THEN ((vt1.c0) IS FALSE) ELSE ((vt0.c0) IS TRUE) END DESC  NULLS FIRST, vt1.c0 LIMIT 1;
SELECT ALL MIN(vt0.c1) FROM vt1 CROSS JOIN vt0 ON '0.04337888142353474' WHERE (vt0.c1) ORDER BY CASE WHEN NULL THEN ((vt1.c0)<=(vt1.c0)) END;
SELECT ALL MIN(vt0.c1) FROM vt1 CROSS JOIN vt0 ON '0.04337888142353474' WHERE (((vt0.c1)AND((((CAST(vt1.c0 AS NUMERIC), vt0.c0 COLLATE NOCASE, ((NULL) NOTNULL)))>=((((vt0.c0)%(vt1.c0)), (vt0.c1 IN (NULL)), CAST(vt0.c1 AS BLOB))))))) ORDER BY ((((vt0.c1)AND(vt0.c1)))<(((vt1.c0) NOTNULL))) INTERSECT SELECT ALL MIN(vt0.c1) FROM vt1 CROSS JOIN vt0 ON '0.04337888142353474' WHERE ((+ (((vt0.c1) NOT NULL)))) ORDER BY ((((vt0.c1)AND(vt0.c1)))<(((vt1.c0) NOTNULL)));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c1) NOT BETWEEN (((x'') IS FALSE)) AND ((+ (vt0.c0)))) DESC  NULLS LAST, CAST((vt0.c0 IN ()) AS REAL)  NULLS LAST, ((vt0.c1)-(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)AND(CAST(vt0.c1 AS TEXT) COLLATE NOCASE))) ORDER BY ((vt0.c1) NOT BETWEEN (((x'') IS FALSE)) AND ((+ (vt0.c0)))) DESC  NULLS LAST, CAST((vt0.c0 IN ()) AS REAL)  NULLS LAST, ((vt0.c1)-(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (COALESCE(DISTINCT ((vt0.c1)>>(vt0.c1)), MIN(vt0.c0, vt0.c0, x'ad06'), CAST(vt0.c1 AS NUMERIC), vt0.c0, vt0.c0 COLLATE NOCASE, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ORDER BY ((vt0.c1) NOT BETWEEN (((x'') IS FALSE)) AND ((+ (vt0.c0)))) DESC  NULLS LAST, CAST((vt0.c0 IN ()) AS REAL)  NULLS LAST, ((vt0.c1)-(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c1) NOT BETWEEN (((x'') IS FALSE)) AND ((+ (vt0.c0)))) DESC  NULLS LAST, CAST((vt0.c0 IN ()) AS REAL)  NULLS LAST, ((vt0.c1)-(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)AND(CAST(vt0.c1 AS TEXT) COLLATE NOCASE))) ORDER BY ((vt0.c1) NOT BETWEEN (((x'') IS FALSE)) AND ((+ (vt0.c0)))) DESC  NULLS LAST, CAST((vt0.c0 IN ()) AS REAL)  NULLS LAST, ((vt0.c1)-(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (COALESCE(DISTINCT ((vt0.c1)>>(vt0.c1)), MIN(vt0.c0, vt0.c0, x'ad06'), CAST(vt0.c1 AS NUMERIC), vt0.c0, vt0.c0 COLLATE NOCASE, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ORDER BY ((vt0.c1) NOT BETWEEN (((x'') IS FALSE)) AND ((+ (vt0.c0)))) DESC  NULLS LAST, CAST((vt0.c0 IN ()) AS REAL)  NULLS LAST, ((vt0.c1)-(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST LIMIT 0;
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE (((vt1.c0)%(((vt0.c0)||(vt0.c1))))) ORDER BY vt0.c1 DESC;
SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (((((vt1.c0)%(((vt0.c0)||(vt0.c1)))))AND((~ ((NOT (vt0.c0))))))) ORDER BY (+ (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((vt0.c1)) NOT BETWEEN (('2070862138')) AND ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(x'd107')))OR(x''))))) ASC, ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND('-9223372036854775808')))OR(vt1.c0)) COLLATE BINARY COLLATE NOCASE LIMIT 2;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)IS NOT(((vt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)IS NOT(((vt0.c1) NOT NULL)))) INTERSECT SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)|(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)));
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE (((vt0.c1) NOT NULL) COLLATE RTRIM);
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE (((vt0.c1) NOT NULL) COLLATE RTRIM) ORDER BY ((((vt1.c0)%(x'50aa80')))+(vt1.c0))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)AND(0.8925573636839392)));
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)AND(0.8925573636839392)));
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND((NOT (vt0.c0)))))AND(vt0.c0)))AND(TRIM(vt0.c1)))) ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))<((~ (vt0.c0)))) ASC;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND((NOT (vt0.c0)))))AND(vt0.c0)))AND(TRIM(vt0.c1))))AND(((((vt0.c1)GLOB(vt0.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))<((~ (vt0.c0)))) ASC LIMIT 2 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((((((load_extension(vt0.c0))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)))OR(((vt0.c1) IS TRUE)))) ORDER BY ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))<((~ (vt0.c0)))) ASC LIMIT 2;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0)IS(vt0.c1)) THEN (((vt1.c0)) BETWEEN (('찻w')) AND ((vt0.c0))) WHEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (vt0.c1 IN (vt1.c0)) ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE WHEN ((vt1.c0)IS(vt0.c1)) THEN (((vt1.c0)) BETWEEN (('찻w')) AND ((vt0.c0))) WHEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (vt0.c1 IN (vt1.c0)) ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END)AND(LIKELY(((vt1.c0)<=(vt1.c0)))))) LIMIT 0X1;
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE ((((vt1.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM, (vt0.c1 IN ()), (vt0.c0 IN ()), ((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)), '1385209139', vt0.c0)) AND ((((vt0.c1)=(vt1.c0)), ((vt0.c0) NOT NULL), (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt1.c0, vt0.c1))), ((vt1.c0)LIKE(NULL)), (('-423690826') NOT BETWEEN (vt0.c1) AND (vt1.c0)), x'')))) ORDER BY (((~ (vt1.c0))) ISNULL) ASC, CAST(((vt0.c0)-(vt0.c1)) AS BLOB) DESC  NULLS LAST;
SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE ((((vt1.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM, (vt0.c1 IN ()), (vt0.c0 IN ()), ((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)), '1385209139', vt0.c0)) AND ((((vt0.c1)==(vt1.c0)), ((vt0.c0) NOT NULL), (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt1.c0, vt0.c1))), ((vt1.c0)LIKE(NULL)), (('-423690826') NOT BETWEEN (vt0.c1) AND (vt1.c0)), x'')))) ORDER BY (((~ (vt1.c0))) ISNULL) ASC, CAST(((vt0.c0)-(vt0.c1)) AS BLOB) DESC  NULLS LAST LIMIT 0;
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)AND((((vt0.c0)*(vt1.c0)) IN ((NOT (vt0.c0)), ((')EC&#R#)')/(vt0.c0))))))) LIMIT 0X0 INTERSECT SELECT * FROM vt1, vt0 WHERE (NULL) LIMIT 0;
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)AND((((vt0.c0)*(vt1.c0)) IN ((NOT (vt0.c0)), ((')EC&#R#)')/(vt0.c0))))))) LIMIT 0X0 INTERSECT SELECT * FROM vt1, vt0 WHERE (NULL) LIMIT 0;
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<=((((vt0.c1)<<(vt0.c1)))))) ORDER BY ((vt0.c1) NOT BETWEEN (x'a1') AND (vt0.c1 COLLATE BINARY)) DESC, (((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((' 뜴1Uj盦g', (vt0.c1 IN (vt1.c0)), ((0.8375875185505575) IS TRUE))) AND ((((vt0.c0)IS(vt0.c1)), x'', CAST(vt0.c1 AS INTEGER)))) ASC;
SELECT MAX(vt1.c0) FROM vt1, vt0 WHERE ((((vt0.c0 COLLATE NOCASE))==((((vt0.c1)<<(vt0.c1)))))) ORDER BY (+ (CASE '1304450394'  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))  NULLS LAST, ((((((((CAST(vt1.c0 AS INTEGER))OR((((vt1.c0, vt0.c0, vt0.c1, NULL))!=((vt1.c0, vt0.c0, vt1.c0, vt1.c0))))))OR(CAST(vt0.c0 AS NUMERIC))))OR(NULL)))AND((((vt1.c0, -385722784)) NOT BETWEEN ((vt1.c0, vt0.c1)) AND ((vt1.c0, vt0.c0))))) ASC  NULLS LAST, ((vt0.c1)%(vt0.c0)) COLLATE BINARY ASC LIMIT 0 INTERSECT SELECT MAX(vt1.c0) FROM vt1, vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND('9223372036854775807')))<=((vt1.c0 IN (vt1.c0))))) ORDER BY (+ (CASE '1304450394'  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))  NULLS LAST, ((((((((CAST(vt1.c0 AS INTEGER))OR((((vt1.c0, vt0.c0, vt0.c1, NULL))<>((vt1.c0, vt0.c0, vt1.c0, vt1.c0))))))OR(CAST(vt0.c0 AS NUMERIC))))OR(NULL)))AND((((vt1.c0, -385722784)) NOT BETWEEN ((vt1.c0, vt0.c1)) AND ((vt1.c0, vt0.c0))))) ASC  NULLS LAST, ((vt0.c1)%(vt0.c0)) COLLATE BINARY ASC LIMIT 0x0;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), CAST(vt1.c0 AS TEXT), (vt0.c0 IN ('<5')))) AND ((CAST(vt0.c0 AS REAL), '1655912785', '5d?gI#R')))) ORDER BY (~ ((vt0.c1 IN (x'd380'))))  NULLS LAST, NULLIF(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), CAST(vt1.c0 AS TEXT), (vt0.c0 IN ('<5')))) AND ((CAST(vt0.c0 AS REAL), '1655912785', '5d?gI#R')))) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND (('vX-\\>u'))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), CAST(vt1.c0 AS TEXT), (vt0.c0 IN ('<5')))) AND ((CAST(vt0.c0 AS REAL), '1655912785', '5d?gI#R')))) ORDER BY (~ ((vt0.c1 IN (x'd380'))))  NULLS LAST, NULLIF(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), CAST(vt1.c0 AS TEXT), (vt0.c0 IN ('<5')))) AND ((CAST(vt0.c0 AS REAL), '1655912785', '5d?gI#R')))) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND (('vX-\\>u'))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (((((((SQLITE_COMPILEOPTION_USED(vt0.c0))OR(')v8	')))AND(((vt0.c1) NOT NULL))))OR((+ (vt0.c1))))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY;
SELECT DISTINCT COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (((((((SQLITE_COMPILEOPTION_USED(vt0.c0))OR(')v8	')))AND(((vt0.c1) NOT NULL))))OR((+ (vt0.c1))))) ORDER BY ((vt1.c0)>(((NULL) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC, (((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((((vt0.c1)IS(vt1.c0)), UNLIKELY(vt0.c0), ((vt0.c1)/(vt0.c1)))) AND ((vt0.c0, CASE vt1.c0  WHEN vt1.c0 THEN x'3c' WHEN vt0.c0 THEN NULL END, vt1.c0 COLLATE NOCASE)))  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END) ISNULL) LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (((vt0.c0) IS TRUE)) ORDER BY ((vt1.c0)>(((NULL) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC, (((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((((vt0.c1)IS(vt1.c0)), UNLIKELY(vt0.c0), ((vt0.c1)/(vt0.c1)))) AND ((vt0.c0, CASE vt1.c0  WHEN vt1.c0 THEN x'3c' WHEN vt0.c0 THEN NULL END, vt1.c0 COLLATE NOCASE)))  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END) ISNULL) LIMIT 1;
SELECT ALL * FROM vt1 WHERE (((LIKELIHOOD(vt1.c0, vt1.c0))+(((vt1.c0)LIKE(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((LIKELIHOOD(vt1.c0, vt1.c0))+(((vt1.c0)LIKE(vt1.c0)))))AND(CASE WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN vt1.c0 ELSE MAX(vt1.c0, vt1.c0) END))) ORDER BY vt1.c0 DESC  NULLS FIRST, UPPER(vt1.c0)  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM vt1 WHERE (((LIKELIHOOD(vt1.c0, vt1.c0))+(((vt1.c0)LIKE(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)*(vt1.c0))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((vt1.c0 IN (vt1.c0))))) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN '-1307813814' THEN (vt1.c0 IN ()) ELSE UNLIKELY(vt1.c0) END DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c0)*(vt1.c0))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((vt1.c0 IN (vt1.c0))))) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN '-1307813814' THEN (vt1.c0 IN ()) ELSE UNLIKELY(vt1.c0) END DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)*(vt1.c0))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((vt1.c0 IN (vt1.c0))))) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN '-1307813814' THEN (vt1.c0 IN ()) ELSE UNLIKELY(vt1.c0) END DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c0)*(vt1.c0))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((vt1.c0 IN (vt1.c0))))) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN '-1307813814' THEN (vt1.c0 IN ()) ELSE UNLIKELY(vt1.c0) END DESC  NULLS FIRST;
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c0)) BETWEEN ((((('-1692152891'))==((vt0.c1))), CAST(vt0.c0 AS TEXT))) AND ((((vt1.c0)IS(vt0.c0)), vt0.c0)))) ORDER BY ((((0.14216753774959512) IS TRUE))>((((vt0.c0))==((vt0.c0)))))  NULLS LAST, (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))||(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN -869873510 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))  NULLS LAST, TYPEOF(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))  NULLS LAST;
SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c0)) BETWEEN ((((('-1692152891'))==((vt0.c1))), CAST(vt0.c0 AS TEXT))) AND ((((vt1.c0)IS(vt0.c0)), vt0.c0)))) ORDER BY ((((0.14216753774959512) IS TRUE))>((((vt0.c0))=((vt0.c0)))))  NULLS LAST, (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))||(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN -869873510 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))  NULLS LAST, TYPEOF(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))  NULLS LAST INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE (CASE (+ (vt1.c0))  WHEN NULL THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN CAST(vt0.c1 AS INTEGER) THEN ((((vt0.c1)AND('td4Iav)')))OR(vt0.c1)) END) ORDER BY ((((0.14216753774959512) IS TRUE))>((((vt0.c0))=((vt0.c0)))))  NULLS LAST, (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))||(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN -869873510 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))  NULLS LAST, TYPEOF(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))  NULLS LAST;
SELECT MAX(vt0.c1) FROM vt0 WHERE ((((DATETIME(vt0.c1, vt0.c1, vt0.c0, vt0.c0), vt0.c1 COLLATE BINARY))>=((CAST(vt0.c0 AS INTEGER), ((vt0.c1)*(vt0.c1))))));
SELECT MAX(vt0.c1) FROM vt0 WHERE ((((((DATETIME(vt0.c1, vt0.c1, vt0.c0, vt0.c0), vt0.c1 COLLATE BINARY))>((CAST(vt0.c0 AS INTEGER), ((vt0.c1)*(vt0.c1))))))AND((vt0.c1 IN (vt0.c0)) COLLATE NOCASE))) LIMIT 1;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (- (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN 0.41778357087918916 WHEN vt0.c0 THEN vt0.c0 END WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(893536578)) ELSE NULL END) ORDER BY ((load_extension(vt0.c0, vt0.c1)) IS FALSE)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((CASE WHEN (- (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN 0.41778357087918916 WHEN vt0.c0 THEN vt0.c0 END WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(893536578)) ELSE NULL END)AND(vt0.c0))) ORDER BY CASE (vt0.c0 IN (vt0.c1))  WHEN (((((((('PULwV')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(NULL)) THEN CASE WHEN vt0.c1 THEN vt0.c1 END ELSE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) END, (((((vt0.c0, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0))))/(x'7a')) ASC;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) ISNULL)) ORDER BY (((vt0.c0 IN (vt0.c1)))<<((NOT (vt0.c0))))  NULLS FIRST, vt0.c1  NULLS FIRST;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY) ISNULL))AND(CAST(vt0.c1 AS BLOB) COLLATE BINARY))) ORDER BY (((vt0.c0 IN (vt0.c1)))<<((NOT (vt0.c0))))  NULLS FIRST, vt0.c1  NULLS FIRST LIMIT 0X0 INTERSECT SELECT MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, (vt0.c0 IN ()))) AND ((((vt0.c1) IS FALSE), '655700416')))) ORDER BY (((vt0.c0 IN (vt0.c1)))<<((NOT (vt0.c0))))  NULLS FIRST, vt0.c1  NULLS FIRST LIMIT 0;
SELECT MIN(vt1.c0) FROM vt0, vt1 WHERE (((vt0.c0)>=((NOT (vt0.c0))))) ORDER BY CASE json_insert(vt0.c0, NULL, vt0.c0)  WHEN load_extension(vt0.c1) THEN 0.9752016556185681 WHEN (((vt0.c1))=((vt0.c0))) THEN ((vt0.c1)IS NOT(vt1.c0)) WHEN CAST(0Xffffffff80f5b896 AS REAL) THEN CAST(vt1.c0 AS NUMERIC) WHEN (0.6741901950667872 IN (vt1.c0)) THEN (((vt0.c1, vt1.c0, vt0.c0, 'N')) BETWEEN ((vt0.c1, vt0.c1, NULL, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c1, vt1.c0))) ELSE vt0.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT MIN(vt1.c0) FROM vt0, vt1 WHERE (((((vt0.c0)>((NOT (vt0.c0)))))AND(MAX(vt1.c0, vt0.c1, vt0.c1, vt0.c0) COLLATE NOCASE))) ORDER BY CASE json_insert(vt0.c0, NULL, vt0.c0)  WHEN load_extension(vt0.c1) THEN 0.9752016556185681 WHEN (((vt0.c1))==((vt0.c0))) THEN ((vt0.c1)IS NOT(vt1.c0)) WHEN CAST(-2131380074 AS REAL) THEN CAST(vt1.c0 AS NUMERIC) WHEN (0.6741901950667872 IN (vt1.c0)) THEN (((vt0.c1, vt1.c0, vt0.c0, 'N')) BETWEEN ((vt0.c1, vt0.c1, NULL, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c1, vt1.c0))) ELSE vt0.c0 COLLATE NOCASE END  NULLS FIRST LIMIT 1;
SELECT * FROM vt1, vt0 WHERE (((-499438150)-((((NULL, vt0.c0))>=((vt0.c1, vt0.c0))))));
SELECT * FROM vt1, vt0 WHERE (((0xffffffffe23b2dba)-((((NULL, vt0.c0))>=((vt0.c1, vt0.c0)))))) LIMIT 0X3;
SELECT * FROM vt1, vt0 WHERE (((-499438150)-((((NULL, vt0.c0))>=((vt0.c1, vt0.c0))))));
SELECT * FROM vt1, vt0 WHERE (((0xffffffffe23b2dba)-((((NULL, vt0.c0))>=((vt0.c1, vt0.c0)))))) LIMIT 0X3;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN LENGTH(vt0.c0) THEN (((vt0.c1, NULL)) NOT BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c1, '>	'))) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt1.c0)AND(x'83')) WHEN ((vt1.c0)>=(vt0.c0)) THEN json_valid(vt0.c1) END);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN LENGTH(vt0.c0) THEN (((vt0.c1, NULL)) NOT BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c1, '>	'))) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt1.c0)AND(x'83')) WHEN ((vt1.c0)>(vt0.c0)) THEN json_valid(vt0.c1) END) LIMIT 0X0;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN LENGTH(vt0.c0) THEN (((vt0.c1, NULL)) NOT BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c1, '>	'))) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt1.c0)AND(x'83')) WHEN ((vt1.c0)>=(vt0.c0)) THEN json_valid(vt0.c1) END);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN LENGTH(vt0.c0) THEN (((vt0.c1, NULL)) NOT BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c1, '>	'))) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt1.c0)AND(x'83')) WHEN ((vt1.c0)>(vt0.c0)) THEN json_valid(vt0.c1) END) LIMIT 0X0;
SELECT ALL * FROM vt1, vt0 WHERE ((((x'' IN (vt0.c1)))LIKE(((vt0.c0) IS FALSE)))) ORDER BY (((CAST(vt0.c0 AS NUMERIC), load_extension('1969873509', vt1.c0), ((vt0.c0) IS TRUE), HEX('1700772375'), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.6752761910162903, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0)))))<>((vt0.c1 COLLATE BINARY, (~ (0.9512322031563921)), vt1.c0 COLLATE NOCASE, (- (x'')), LIKE(vt1.c0, vt1.c0, 't')))) DESC  NULLS LAST, (vt0.c0 IN ()) DESC, ((((0.3885999845346182)IS NOT(vt1.c0))) BETWEEN ((((vt0.c0, vt0.c0))<((vt1.c0, vt0.c1)))) AND (CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 END)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((x'' IN (vt0.c1)))LIKE(((vt0.c0) IS FALSE))))AND(COALESCE((((vt0.c1, vt1.c0))<((vt0.c1, vt0.c0))), ((NULL)OR(vt1.c0)), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN '-121435159' THEN vt1.c0 END)))) ORDER BY (((CAST(vt0.c0 AS NUMERIC), load_extension('1969873509', vt1.c0), ((vt0.c0) IS TRUE), HEX('1700772375'), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.6752761910162903, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0)))))!=((vt0.c1 COLLATE BINARY, (~ (0.9512322031563921)), vt1.c0 COLLATE NOCASE, (- (x'')), LIKE(vt1.c0, vt1.c0, 't')))) DESC  NULLS LAST, (vt0.c0 IN ()) DESC, ((((0.3885999845346182)IS NOT(vt1.c0))) BETWEEN ((((vt0.c0, vt0.c0))<((vt1.c0, vt0.c1)))) AND (CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 END)) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((x'' IN (vt0.c1)))LIKE(((vt0.c0) IS FALSE)))) ORDER BY (((CAST(vt0.c0 AS NUMERIC), load_extension('1969873509', vt1.c0), ((vt0.c0) IS TRUE), HEX('1700772375'), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.6752761910162903, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0)))))<>((vt0.c1 COLLATE BINARY, (~ (0.9512322031563921)), vt1.c0 COLLATE NOCASE, (- (x'')), LIKE(vt1.c0, vt1.c0, 't')))) DESC  NULLS LAST, (vt0.c0 IN ()) DESC, ((((0.3885999845346182)IS NOT(vt1.c0))) BETWEEN ((((vt0.c0, vt0.c0))<((vt1.c0, vt0.c1)))) AND (CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 END)) ASC  NULLS FIRST;
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE ((- ((+ (vt0.c1))))) ORDER BY (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END IN ()) DESC, CASE ((vt0.c1) NOTNULL)  WHEN CAST(vt0.c0 AS REAL) THEN vt1.c0 END ASC;
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE ((- ((+ (vt0.c1))))) ORDER BY (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END IN ()) DESC, CASE ((vt0.c1) NOTNULL)  WHEN CAST(vt0.c0 AS REAL) THEN vt1.c0 END ASC LIMIT 3 INTERSECT SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) BETWEEN ((((vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0)) AND ((-2.44010617E8, vt0.c0)))) AND ((((vt0.c0, -1.00881499E8, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, -1.95396873E8)))))) ORDER BY (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END IN ()) DESC, CASE ((vt0.c1) NOTNULL)  WHEN CAST(vt0.c0 AS REAL) THEN vt1.c0 END ASC LIMIT 0X3;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS INTEGER) WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt1.c0)>(vt1.c0)) ELSE CAST(x'cda6' AS REAL) END) ORDER BY CASE WHEN vt1.c0 COLLATE NOCASE THEN (((vt1.c0, vt1.c0))!=((vt1.c0, NULL))) WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0)<=(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN CAST(vt1.c0 AS REAL) ELSE (vt1.c0 IN ()) END ASC;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS INTEGER) WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt1.c0)>(vt1.c0)) ELSE CAST(x'cda6' AS REAL) END)AND(CAST(LOWER(DISTINCT vt1.c0) AS NUMERIC)))) ORDER BY CASE WHEN vt1.c0 COLLATE NOCASE THEN (((vt1.c0, vt1.c0))!=((vt1.c0, NULL))) WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0)<=(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN CAST(vt1.c0 AS REAL) ELSE (vt1.c0 IN ()) END ASC;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (-2.06925103E8)) COLLATE RTRIM);
SELECT DISTINCT * FROM vt1 WHERE ((vt1.c0 IN (-2.06925103E8)) COLLATE RTRIM) ORDER BY vt1.c0  NULLS FIRST, ABS(DISTINCT 'xW') COLLATE NOCASE, vt1.c0 ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)<(vt1.c0))) IS FALSE)) ORDER BY vt1.c0  NULLS FIRST, ABS(DISTINCT 'xW') COLLATE NOCASE, vt1.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (-2.06925103E8)) COLLATE RTRIM);
SELECT DISTINCT * FROM vt1 WHERE ((vt1.c0 IN (-2.06925103E8)) COLLATE RTRIM) ORDER BY vt1.c0  NULLS FIRST, ABS(DISTINCT 'xW') COLLATE NOCASE, vt1.c0 ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)<(vt1.c0))) IS FALSE)) ORDER BY vt1.c0  NULLS FIRST, ABS(DISTINCT 'xW') COLLATE NOCASE, vt1.c0 ASC  NULLS LAST;
SELECT MAX(vt0.c0) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ORDER BY (((0x53ba06d3, vt0.c1, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0))), CASE vt0.c1  WHEN '0.8617019709182995' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, NULL)) AND ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (- (vt0.c1)), vt0.c1 COLLATE NOCASE)))  NULLS LAST, CASE ((x'') BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c0)||(vt0.c1)) THEN CAST(vt0.c1 AS REAL) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (((vt0.c0, '-609651636', vt0.c0)) NOT BETWEEN ((vt0.c1, x'', vt0.c0)) AND ((0.3243020145492097, vt0.c1, vt0.c1))) WHEN ((vt0.c1)>=(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) ELSE ((vt0.c0)<<(vt0.c1)) END  NULLS FIRST, CAST(x'1ebf' AS REAL)  NULLS LAST, CAST(((vt0.c1) IS TRUE) AS INTEGER) DESC;
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ORDER BY (((0X53ba06d3, vt0.c1, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0))), CASE vt0.c1  WHEN '0.8617019709182995' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, NULL)) AND ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (- (vt0.c1)), vt0.c1 COLLATE NOCASE)))  NULLS LAST, CASE ((x'') BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c0)||(vt0.c1)) THEN CAST(vt0.c1 AS REAL) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (((vt0.c0, '-609651636', vt0.c0)) NOT BETWEEN ((vt0.c1, x'', vt0.c0)) AND ((0.3243020145492097, vt0.c1, vt0.c1))) WHEN ((vt0.c1)>=(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) ELSE ((vt0.c0)<<(vt0.c1)) END  NULLS FIRST, CAST(x'1ebf' AS REAL)  NULLS LAST, CAST(((vt0.c1) IS TRUE) AS INTEGER) DESC INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE)))) ORDER BY (((0x53ba06d3, vt0.c1, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0))), CASE vt0.c1  WHEN '0.8617019709182995' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, NULL)) AND ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (- (vt0.c1)), vt0.c1 COLLATE NOCASE)))  NULLS LAST, CASE ((x'') BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c0)||(vt0.c1)) THEN CAST(vt0.c1 AS REAL) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (((vt0.c0, '-609651636', vt0.c0)) NOT BETWEEN ((vt0.c1, x'', vt0.c0)) AND ((0.3243020145492097, vt0.c1, vt0.c1))) WHEN ((vt0.c1)>=(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) ELSE ((vt0.c0)<<(vt0.c1)) END  NULLS FIRST, CAST(x'1ebf' AS REAL)  NULLS LAST, CAST(((vt0.c1) IS TRUE) AS INTEGER) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(',#^y' AS INTEGER))==(vt0.c0 COLLATE BINARY)));
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((((CAST(',#^y' AS INTEGER))==(vt0.c0 COLLATE BINARY)))AND(((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((vt0.c1)AND(vt0.c0))) AND ((~ (vt1.c0))))))) LIMIT 2;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0) ISNULL))%(vt1.c0 COLLATE RTRIM))) ORDER BY json_type(CAST(vt1.c0 AS BLOB))  NULLS FIRST, ((((vt1.c0) IS TRUE)) NOT BETWEEN ('365792862') AND (json_patch(vt1.c0, vt1.c0))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((((((vt1.c0) ISNULL))%(vt1.c0 COLLATE RTRIM)))AND(((((((vt1.c0) NOTNULL))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, 0.7238520605761588, vt1.c0, vt1.c0, NULL, vt1.c0))))))OR(LOWER(vt1.c0)))))) ORDER BY (((0Xffffffffc8733b6c))<=((((vt1.c0) IS TRUE)))) INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (rtreenode(vt1.c0, vt1.c0) COLLATE RTRIM) ORDER BY (((-931972244))<=((((vt1.c0) IS TRUE))));
SELECT ALL * FROM vt0 WHERE ((((((0.9782594421401064, vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0))))%((NOT (vt0.c1))))) ORDER BY CASE WHEN vt0.c1 COLLATE NOCASE THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END;
SELECT ALL * FROM vt0 WHERE ((((((((0.9782594421401064, vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0))=((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0))))%((NOT (vt0.c1)))))AND(((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))) AND (vt0.c0))))) ORDER BY ((((((vt0.c0)LIKE(0.10946321578039953)))AND(UNICODE(vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST, ((((vt0.c1) NOT NULL)) IS FALSE)  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 WHERE ((((((0.9782594421401064, vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0))))%((NOT (vt0.c1))))) ORDER BY CASE WHEN vt0.c1 COLLATE NOCASE THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END;
SELECT ALL * FROM vt0 WHERE ((((((((0.9782594421401064, vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0))=((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0))))%((NOT (vt0.c1)))))AND(((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))) AND (vt0.c0))))) ORDER BY ((((((vt0.c0)LIKE(0.10946321578039953)))AND(UNICODE(vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST, ((((vt0.c1) NOT NULL)) IS FALSE)  NULLS FIRST LIMIT 0;
SELECT MIN(vt0.c0) FROM vt0 WHERE (CAST(-1541700801 AS INTEGER));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((CAST(-1541700801 AS INTEGER))AND((~ ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))))) ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt0.c1)))) AND (((+ (vt0.c0))))) DESC LIMIT 0x0;
SELECT MIN(vt1.c0) FROM vt1 WHERE (ROUND((~ (vt1.c0)), vt1.c0 COLLATE NOCASE));
SELECT MIN(vt1.c0) FROM vt1 WHERE (ROUND((~ (vt1.c0)), vt1.c0 COLLATE NOCASE)) ORDER BY ((SQLITE_COMPILEOPTION_USED(vt1.c0)) IS TRUE)  NULLS FIRST, ((NULL)-(vt1.c0)) COLLATE BINARY  NULLS FIRST LIMIT 3;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0) NOTNULL)) BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt1.c0))) ORDER BY ABS((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt1.c0) NOTNULL)) BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt1.c0)))AND(CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)))) ORDER BY (NOT (CASE WHEN vt0.c1 THEN vt1.c0 END)) ASC  NULLS FIRST, vt0.c1  NULLS FIRST, 0X14d7e7b3 COLLATE RTRIM DESC;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0) NOTNULL)) BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt1.c0))) ORDER BY ABS((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt1.c0) NOTNULL)) BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt1.c0)))AND(CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)))) ORDER BY (NOT (CASE WHEN vt0.c1 THEN vt1.c0 END)) ASC  NULLS FIRST, vt0.c1  NULLS FIRST, 0X14d7e7b3 COLLATE RTRIM DESC;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))))AND((vt1.c0 IN ('-1', vt1.c0))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(x'e1'))  NULLS LAST, ((CASE vt1.c0  WHEN vt1.c0 THEN x'45' ELSE vt1.c0 END) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (NULL))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))))AND((vt1.c0 IN ('-1', vt1.c0)))))AND(CAST(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) AS BLOB)))) ORDER BY vt1.c0 DESC;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))))AND((vt1.c0 IN ('-1', vt1.c0))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(x'e1'))  NULLS LAST, ((CASE vt1.c0  WHEN vt1.c0 THEN x'45' ELSE vt1.c0 END) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (NULL))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))))AND((vt1.c0 IN ('-1', vt1.c0)))))AND(CAST(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) AS BLOB)))) ORDER BY vt1.c0 DESC;
SELECT * FROM vt0 WHERE ((((((((NOT (vt0.c0)))OR((~ ('1262217373')))))AND(((vt0.c1)<<(vt0.c1)))))OR(((((vt0.c1)OR(0.5401877624565233)))AND(vt0.c1)))));
SELECT * FROM vt0 WHERE ((((((((NOT (vt0.c0)))OR((~ ('1262217373')))))AND(((vt0.c1)<<(vt0.c1)))))OR(((((vt0.c1)OR(0.5401877624565233)))AND(vt0.c1))))) ORDER BY (NOT ('.C')), HEX((((vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1))))  NULLS FIRST, (+ (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))) DESC LIMIT 0x0 INTERSECT SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) IS FALSE)) ORDER BY (NOT ('.C')), HEX((((vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1))))  NULLS FIRST, (+ (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))) DESC LIMIT 0;
SELECT * FROM vt0 WHERE ((((((((NOT (vt0.c0)))OR((~ ('1262217373')))))AND(((vt0.c1)<<(vt0.c1)))))OR(((((vt0.c1)OR(0.5401877624565233)))AND(vt0.c1)))));
SELECT * FROM vt0 WHERE ((((((((NOT (vt0.c0)))OR((~ ('1262217373')))))AND(((vt0.c1)<<(vt0.c1)))))OR(((((vt0.c1)OR(0.5401877624565233)))AND(vt0.c1))))) ORDER BY (NOT ('.C')), HEX((((vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1))))  NULLS FIRST, (+ (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))) DESC LIMIT 0x0 INTERSECT SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) IS FALSE)) ORDER BY (NOT ('.C')), HEX((((vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1))))  NULLS FIRST, (+ (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))) DESC LIMIT 0;
SELECT * FROM vt1 WHERE (((LOWER(DISTINCT vt1.c0))AND(vt1.c0 COLLATE RTRIM))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE);
SELECT * FROM vt1 WHERE (((LOWER(DISTINCT vt1.c0))AND(vt1.c0 COLLATE RTRIM))) ORDER BY ((((vt1.c0)AND(vt1.c0 COLLATE BINARY)))AND((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST LIMIT 0X2;
SELECT * FROM vt1 WHERE (((LOWER(DISTINCT vt1.c0))AND(vt1.c0 COLLATE RTRIM))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE);
SELECT * FROM vt1 WHERE (((LOWER(DISTINCT vt1.c0))AND(vt1.c0 COLLATE RTRIM))) ORDER BY ((((vt1.c0)AND(vt1.c0 COLLATE BINARY)))AND((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST LIMIT 0X2;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((((NULL)OR(x'd5f4')))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS TRUE) DESC;
SELECT MIN(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((((NULL)OR(x'd5f4')))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS TRUE) DESC INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((((((vt1.c0)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt1.c0) NOT NULL))))AND(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((((((((NULL)OR(x'd5f4')))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS TRUE) DESC;
SELECT MAX(vt0.c1) FROM vt1 CROSS JOIN vt0 ON (vt0.c0 COLLATE BINARY IN (((vt0.c1)=(x'')))) WHERE ((NOT (((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))OR(NULL)))));
SELECT DISTINCT MAX(vt0.c1) FROM vt1 CROSS JOIN vt0 ON (vt0.c0 COLLATE BINARY IN (((vt0.c1)=(x'')))) WHERE ((((NOT (((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))OR(NULL)))))AND(((((vt0.c1 IN (vt1.c0)), x'de85', vt0.c0 COLLATE NOCASE, ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c1))==((CASE WHEN '-423690826' THEN '-1035025036' END, ((vt0.c1)>(vt1.c0)), ((vt1.c0) NOT BETWEEN ('X.') AND (vt0.c0)), ((vt1.c0)/(vt0.c1)), vt1.c0)))))) ORDER BY CASE SQLITE_COMPILEOPTION_USED(vt0.c0)  WHEN (x'' IN (vt1.c0)) THEN ((vt1.c0)*(vt0.c0)) WHEN (NOT (vt0.c1)) THEN (((-1447689659, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, '13'))) END, ((((((CAST(vt0.c0 AS NUMERIC))OR(vt0.c0 COLLATE BINARY)))AND(LOWER(DISTINCT vt0.c0))))AND((vt0.c1 IN (x'9f'))))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)|(CAST(vt0.c0 AS BLOB)))) ORDER BY -562383610 ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)|(CAST(vt0.c0 AS BLOB)))) ORDER BY -562383610 ASC  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))-(((vt0.c1)IS NOT(vt0.c1))))) ORDER BY -562383610 ASC  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)|(CAST(vt0.c0 AS BLOB)))) ORDER BY -562383610 ASC  NULLS FIRST;
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE (vt0.c1);
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (((vt0.c1)AND(((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '1353143342' END) AND ((NOT (vt0.c1))))))) LIMIT 1;
SELECT MIN(vt0.c0) FROM vt0, vt1 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT DISTINCT MIN(vt0.c0) FROM vt0, vt1 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY (+ (0.298797791775258))  NULLS FIRST, CASE NULL  WHEN vt1.c0 THEN (NOT (vt1.c0)) WHEN ((((((0.8191379807530763)OR(vt0.c1)))AND('499733756')))AND(vt0.c1)) THEN (vt1.c0 IN (vt1.c0)) WHEN (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, '2138322423')) AND ((vt1.c0, vt0.c1))) THEN (((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt1.c0, vt1.c0))) END ASC, TYPEOF(DISTINCT CAST(vt1.c0 AS NUMERIC)) DESC LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0, vt1 WHERE (((NULL) IS TRUE)) ORDER BY (+ (0.298797791775258))  NULLS FIRST, CASE NULL  WHEN vt1.c0 THEN (NOT (vt1.c0)) WHEN ((((((0.8191379807530763)OR(vt0.c1)))AND('499733756')))AND(vt0.c1)) THEN (vt1.c0 IN (vt1.c0)) WHEN (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, '2138322423')) AND ((vt1.c0, vt0.c1))) THEN (((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt1.c0, vt1.c0))) END ASC, TYPEOF(DISTINCT CAST(vt1.c0 AS NUMERIC)) DESC LIMIT 0X1;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (0Xfffffffff7d981ae)))-((+ (vt0.c1)))));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (0Xfffffffff7d981ae)))-((+ (vt0.c1))))) ORDER BY ((((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c1 AS TEXT))))AND(CAST(vt0.c1 AS REAL))))OR((vt0.c0 IN (vt0.c1)))), (vt0.c0 IN ())  NULLS FIRST, ((((vt0.c0)&(vt0.c1))) BETWEEN (SQLITE_VERSION()) AND (((((((((((vt0.c0)OR(vt0.c0)))AND(NULL)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))) LIMIT 0;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((((vt0.c1)LIKE(x'')))GLOB(vt0.c1))) ORDER BY ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT MAX(vt0.c0) FROM vt0 WHERE (((((((vt0.c1)LIKE(x'')))GLOB(vt0.c1)))AND(STRFTIME((vt0.c1 IN (vt0.c1)), vt0.c0 COLLATE NOCASE, 0xffffffff957fbf03, CAST(vt0.c1 AS INTEGER), 0.7218234866670199, ABS(vt0.c1))))) ORDER BY ((x'f3')LIKE(((vt0.c0) IS TRUE))) LIMIT 0 INTERSECT SELECT MAX(vt0.c0) FROM vt0 WHERE (vt0.c0) ORDER BY ((x'f3')LIKE(((vt0.c0) IS TRUE))) LIMIT 0x0;
SELECT MAX(vt0.c1) FROM vt0, vt1 WHERE (((LTRIM(vt0.c1, vt0.c1))-(CAST(NULL AS NUMERIC))));
SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE (((((LTRIM(vt0.c1, vt0.c1))-(CAST(NULL AS NUMERIC))))AND(TRIM(DISTINCT vt1.c0 COLLATE BINARY, ((vt0.c0)-('-754249862')))))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE (CASE ((vt1.c0) NOTNULL)  WHEN '1565943536' THEN ((vt1.c0) IS FALSE) ELSE CAST(vt1.c0 AS BLOB) END) LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0)))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1)OR(NULL)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)<=(vt0.c0)))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1)OR(NULL)))))AND(((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)IS NOT((vt0.c1 IN ()))))));
SELECT MIN(vt0.c0) FROM vt1, vt0 NOT INDEXED WHERE (x'c6927daaf0');
SELECT DISTINCT MIN(vt0.c0) FROM vt1, vt0 WHERE (x'c6927daaf0') LIMIT 0x2 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt1, vt0 WHERE ((((vt1.c0 IN (vt1.c0))) NOT NULL)) LIMIT 0X2;
SELECT MAX(vt0.c1) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC));
SELECT MAX(vt0.c1) FROM vt0 WHERE (((CAST((vt0.c0 IN ()) AS NUMERIC))AND(vt0.c1))) LIMIT 0X0 INTERSECT SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (CASE WHEN CAST(vt0.c1 AS INTEGER) THEN ((vt0.c1) IS FALSE) WHEN vt0.c1 COLLATE RTRIM THEN 0.5021345023957758 ELSE CAST(vt0.c0 AS BLOB) END) LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (CAST('a廞I%' AS TEXT)) ORDER BY ((vt0.c1) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (vt0.c0)), vt0.c1 DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (CAST('a廞I%' AS TEXT)) ORDER BY ((vt0.c1) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (vt0.c0)), vt0.c1 DESC  NULLS FIRST INTERSECT SELECT * FROM vt0, vt1 WHERE ((((x'cf9c')) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((((vt0.c0)<=(vt0.c0)))))) ORDER BY ((vt0.c1) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (vt0.c0)), vt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST('a廞I%' AS TEXT)) ORDER BY ((vt0.c1) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (vt0.c0)), vt0.c1 DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (CAST('a廞I%' AS TEXT)) ORDER BY ((vt0.c1) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (vt0.c0)), vt0.c1 DESC  NULLS FIRST INTERSECT SELECT * FROM vt0, vt1 WHERE ((((x'cf9c')) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((((vt0.c0)<=(vt0.c0)))))) ORDER BY ((vt0.c1) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (vt0.c0)), vt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0, 0.7662262317168039))<>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))AND(((vt1.c0)<(vt1.c0)))))OR(vt1.c0))) ORDER BY vt1.c0 COLLATE RTRIM COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((((((((vt1.c0, vt1.c0, vt1.c0, 0.7662262317168039))<>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))AND(((vt1.c0)<(vt1.c0)))))OR(vt1.c0)))AND(NULL))) ORDER BY vt1.c0 COLLATE RTRIM COLLATE BINARY COLLATE RTRIM  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0, 0.7662262317168039))<>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))AND(((vt1.c0)<(vt1.c0)))))OR(vt1.c0))) ORDER BY vt1.c0 COLLATE RTRIM COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((((((((vt1.c0, vt1.c0, vt1.c0, 0.7662262317168039))<>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))AND(((vt1.c0)<(vt1.c0)))))OR(vt1.c0)))AND(NULL))) ORDER BY vt1.c0 COLLATE RTRIM COLLATE BINARY COLLATE RTRIM  NULLS FIRST LIMIT 0X1;
SELECT * FROM vt0 WHERE (((((((((((vt0.c1)OR(0.4141279042197159)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))=((~ (vt0.c1))))) ORDER BY (((((((('-1035025036') NOT NULL))AND(0Xffffffffb1168eec)))OR('0.0')))AND(vt0.c0 COLLATE BINARY)), ((CAST(vt0.c0 AS NUMERIC))>>(((vt0.c0)-(vt0.c1)))) DESC;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c1)OR(0.4141279042197159)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))==((~ (vt0.c1))))) ORDER BY (vt0.c1 IN ()), CASE json_extract(vt0.c0, vt0.c0)  WHEN ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) THEN ((((((vt0.c0)OR(x'ed')))AND(vt0.c1)))AND(vt0.c1)) END;
SELECT * FROM vt0 WHERE (((((((((((vt0.c1)OR(0.4141279042197159)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))=((~ (vt0.c1))))) ORDER BY (((((((('-1035025036') NOT NULL))AND(0Xffffffffb1168eec)))OR('0.0')))AND(vt0.c0 COLLATE BINARY)), ((CAST(vt0.c0 AS NUMERIC))>>(((vt0.c0)-(vt0.c1)))) DESC;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c1)OR(0.4141279042197159)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))==((~ (vt0.c1))))) ORDER BY (vt0.c1 IN ()), CASE json_extract(vt0.c0, vt0.c0)  WHEN ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) THEN ((((((vt0.c0)OR(x'ed')))AND(vt0.c1)))AND(vt0.c1)) END;
SELECT MIN(vt0.c1) FROM vt1 LEFT OUTER JOIN vt0 ON ((((((((LOWER(vt0.c0))OR(((vt0.c1)&(vt0.c1)))))AND(json_remove(vt0.c1, vt0.c0, vt0.c0))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))))AND(((vt0.c1) ISNULL))) WHERE (0.8326069196527686);
SELECT MIN(vt0.c1) FROM vt1 LEFT OUTER JOIN vt0 ON ((((((((LOWER(vt0.c0))OR(((vt0.c1)&(vt0.c1)))))AND(json_remove(vt0.c1, vt0.c0, vt0.c0))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))))AND(((vt0.c1) ISNULL))) WHERE (((0.8326069196527686)AND((- (((vt0.c1) BETWEEN (0.804968696891811) AND (vt0.c1))))))) ORDER BY ((vt0.c0)=(((vt1.c0)!=(vt0.c1)))) LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0) BETWEEN ((+ (vt0.c1))) AND ((~ (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0) BETWEEN ((+ (vt0.c1))) AND ((~ (vt0.c1)))));
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN x'8584' WHEN vt0.c1 THEN vt0.c1 WHEN x'159c' THEN vt0.c0 ELSE vt0.c1 END)-(((vt0.c1)IS NOT(vt0.c1))))) ORDER BY CAST(ABS(vt0.c0) AS BLOB)  NULLS FIRST, CAST(vt1.c0 AS INTEGER) COLLATE NOCASE, (((((((+ (-459009343)))AND(UNLIKELY(DISTINCT vt0.c1))))AND(vt0.c1 COLLATE RTRIM)))AND(((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN x'8584' WHEN vt0.c1 THEN vt0.c1 WHEN x'159c' THEN vt0.c0 ELSE vt0.c1 END)-(((vt0.c1)IS NOT(vt0.c1)))))AND((((((((((((vt1.c0 IN (vt0.c0)))OR('-1537408677')))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt1.c0)LIKE(vt1.c0)))))OR(vt0.c1)))AND(((((vt1.c0)AND(vt1.c0)))AND(vt0.c1))))))) ORDER BY CAST(ABS(vt0.c0) AS BLOB)  NULLS FIRST, CAST(vt1.c0 AS INTEGER) COLLATE NOCASE, (((((((+ (-459009343)))AND(UNLIKELY(DISTINCT vt0.c1))))AND(vt0.c1 COLLATE RTRIM)))AND(((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN x'8584' WHEN vt0.c1 THEN vt0.c1 WHEN x'159c' THEN vt0.c0 ELSE vt0.c1 END)-(((vt0.c1)IS NOT(vt0.c1))))) ORDER BY CAST(ABS(vt0.c0) AS BLOB)  NULLS FIRST, CAST(vt1.c0 AS INTEGER) COLLATE NOCASE, (((((((+ (-459009343)))AND(UNLIKELY(DISTINCT vt0.c1))))AND(vt0.c1 COLLATE RTRIM)))AND(((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN x'8584' WHEN vt0.c1 THEN vt0.c1 WHEN x'159c' THEN vt0.c0 ELSE vt0.c1 END)-(((vt0.c1)IS NOT(vt0.c1)))))AND((((((((((((vt1.c0 IN (vt0.c0)))OR('-1537408677')))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt1.c0)LIKE(vt1.c0)))))OR(vt0.c1)))AND(((((vt1.c0)AND(vt1.c0)))AND(vt0.c1))))))) ORDER BY CAST(ABS(vt0.c0) AS BLOB)  NULLS FIRST, CAST(vt1.c0 AS INTEGER) COLLATE NOCASE, (((((((+ (-459009343)))AND(UNLIKELY(DISTINCT vt0.c1))))AND(vt0.c1 COLLATE RTRIM)))AND(((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0))));
SELECT MIN(vt0.c0) FROM vt1 INNER JOIN vt0 ON TRIM((((vt0.c1, vt0.c0))>((vt1.c0, x'175c15')))) WHERE (((x'')IS NOT(((vt1.c0)=(vt0.c1)))));
SELECT MIN(vt0.c0) FROM vt1 INNER JOIN vt0 ON TRIM((((vt0.c1, vt0.c0))>((vt1.c0, x'175c15')))) WHERE (((((x'')IS NOT(((vt1.c0)==(vt0.c1)))))AND(CAST(((vt0.c0)<=(vt1.c0)) AS REAL)))) ORDER BY COALESCE(DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ('0.9031882890677928' IN (vt0.c0)), vt0.c0 COLLATE BINARY) DESC, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN ((((vt0.c1))!=((vt0.c1)))) AND ((('⩬ud''Tn')IS NOT(vt0.c1))))  NULLS LAST INTERSECT SELECT MIN(vt0.c0) FROM vt1 INNER JOIN vt0 ON TRIM((((vt0.c1, vt0.c0))>((vt1.c0, x'175c15')))) WHERE (vt0.c0) ORDER BY COALESCE(DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ('0.9031882890677928' IN (vt0.c0)), vt0.c0 COLLATE BINARY) DESC, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN ((((vt0.c1))!=((vt0.c1)))) AND ((('⩬ud''Tn')IS NOT(vt0.c1))))  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT))AND(vt1.c0))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0)||(vt1.c0)))IS NOT(0.9538260614984593))) LIMIT 0;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS INTEGER))>=('-.x|x/')) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0)AND(CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) AS TEXT)))) ORDER BY (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC LIMIT 0X1 INTERSECT SELECT * FROM vt1 WHERE (0.06567279011831328) ORDER BY (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC LIMIT 1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS INTEGER))>=('-.x|x/')) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0)AND(CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) AS TEXT)))) ORDER BY (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC LIMIT 0X1 INTERSECT SELECT * FROM vt1 WHERE (0.06567279011831328) ORDER BY (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC LIMIT 1;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0 IN (vt0.c1))) AND (1.760756148E9 COLLATE NOCASE)) WHERE (((vt0.c1)>>(x'd47b65')) COLLATE NOCASE) ORDER BY CASE WHEN 'u' THEN ((((((vt0.c0)AND(0xffffffffebcbe603)))AND(vt0.c0)))AND(vt0.c0)) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) END;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0 IN (vt0.c1))) AND (1.760756148E9 COLLATE NOCASE)) WHERE (((vt0.c1)>>(x'd47b65')) COLLATE NOCASE) ORDER BY vt0.c1  NULLS FIRST, (((((((((((vt1.c0 IN (vt1.c0)))AND(((vt0.c1)<(vt1.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(vt0.c1)))AND(((vt1.c0)<=(vt0.c0)))))AND(TOTAL_CHANGES())) DESC INTERSECT SELECT * FROM vt1 INNER JOIN vt0 ON ((STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0 IN (vt0.c1))) AND (1.760756148E9 COLLATE NOCASE)) WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY vt0.c1  NULLS FIRST, (((((((((((vt1.c0 IN (vt1.c0)))AND(((vt0.c1)<(vt1.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(vt0.c1)))AND(((vt1.c0)<=(vt0.c0)))))AND(TOTAL_CHANGES())) DESC;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0 IN (vt0.c1))) AND (1.760756148E9 COLLATE NOCASE)) WHERE (((vt0.c1)>>(x'd47b65')) COLLATE NOCASE) ORDER BY CASE WHEN 'u' THEN ((((((vt0.c0)AND(0xffffffffebcbe603)))AND(vt0.c0)))AND(vt0.c0)) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) END;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0 IN (vt0.c1))) AND (1.760756148E9 COLLATE NOCASE)) WHERE (((vt0.c1)>>(x'd47b65')) COLLATE NOCASE) ORDER BY vt0.c1  NULLS FIRST, (((((((((((vt1.c0 IN (vt1.c0)))AND(((vt0.c1)<(vt1.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(vt0.c1)))AND(((vt1.c0)<=(vt0.c0)))))AND(TOTAL_CHANGES())) DESC INTERSECT SELECT * FROM vt1 INNER JOIN vt0 ON ((STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0 IN (vt0.c1))) AND (1.760756148E9 COLLATE NOCASE)) WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY vt0.c1  NULLS FIRST, (((((((((((vt1.c0 IN (vt1.c0)))AND(((vt0.c1)<(vt1.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(vt0.c1)))AND(((vt1.c0)<=(vt0.c0)))))AND(TOTAL_CHANGES())) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1)<(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN load_extension(vt0.c1, vt0.c1) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END WHEN (((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND (('', vt0.c0))) THEN CAST(vt0.c1 AS REAL) ELSE (~ (0.4925355298929417)) END) ORDER BY ((vt0.c0) BETWEEN (((((vt0.c1)AND('D')))OR(vt0.c1))) AND (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1)<(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN load_extension(vt0.c1, vt0.c1) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END WHEN (((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND (('', vt0.c0))) THEN CAST(vt0.c1 AS REAL) ELSE (~ (0.4925355298929417)) END) ORDER BY ABS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)));
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL)  NULLS LAST, vt0.c1 DESC, CASE (+ (vt0.c0))  WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0) ISNULL) WHEN (vt0.c1 IN ()) THEN ((vt0.c0) IS FALSE) ELSE CAST(vt0.c0 AS INTEGER) END  NULLS LAST;
SELECT * FROM vt0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE NOCASE, (((vt0.c1)) NOT BETWEEN ((x'32f628')) AND (((((vt0.c1))==((vt0.c0)))))), ((((((((((x'')IS(vt0.c1)))OR(vt0.c0 COLLATE NOCASE)))OR((NOT (vt0.c1)))))OR(((975810311)>=(vt0.c1)))))OR(vt0.c1)) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND((vt0.c1 IN (vt0.c0))))) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE NOCASE, (((vt0.c1)) NOT BETWEEN ((x'32f628')) AND (((((vt0.c1))==((vt0.c0)))))), ((((((((((x'')IS(vt0.c1)))OR(vt0.c0 COLLATE NOCASE)))OR((NOT (vt0.c1)))))OR(((975810311)>=(vt0.c1)))))OR(vt0.c1)) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL)  NULLS LAST, vt0.c1 DESC, CASE (+ (vt0.c0))  WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0) ISNULL) WHEN (vt0.c1 IN ()) THEN ((vt0.c0) IS FALSE) ELSE CAST(vt0.c0 AS INTEGER) END  NULLS LAST;
SELECT * FROM vt0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE NOCASE, (((vt0.c1)) NOT BETWEEN ((x'32f628')) AND (((((vt0.c1))==((vt0.c0)))))), ((((((((((x'')IS(vt0.c1)))OR(vt0.c0 COLLATE NOCASE)))OR((NOT (vt0.c1)))))OR(((975810311)>=(vt0.c1)))))OR(vt0.c1)) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND((vt0.c1 IN (vt0.c0))))) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE NOCASE, (((vt0.c1)) NOT BETWEEN ((x'32f628')) AND (((((vt0.c1))==((vt0.c0)))))), ((((((((((x'')IS(vt0.c1)))OR(vt0.c0 COLLATE NOCASE)))OR((NOT (vt0.c1)))))OR(((975810311)>=(vt0.c1)))))OR(vt0.c1)) DESC  NULLS FIRST LIMIT 0;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE (-884633971);
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE (((-884633971)AND((((vt0.c0, '-244010617', vt1.c0)) NOT BETWEEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)), vt0.c1 COLLATE RTRIM, (vt0.c1 IN (vt0.c0)))) AND ((((vt0.c0)AND(vt1.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (x'08')), UNLIKELY(DISTINCT vt0.c0))))))) ORDER BY CAST((- (-1.525311217E9)) AS TEXT) DESC  NULLS LAST LIMIT 1 INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)), '-136664999')) AND ((((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)), ((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)))))) ORDER BY CAST((- (-1.525311217E9)) AS TEXT) DESC  NULLS LAST LIMIT 0X1;
SELECT MIN(vt0.c1) FROM vt1, vt0 WHERE (CAST((((vt0.c1))==((vt1.c0))) AS REAL));
SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE (CAST((((vt0.c1))==((vt1.c0))) AS REAL)) LIMIT 1;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((LIKELIHOOD(vt0.c0, 0.37302438060044363))OR(CAST(vt0.c0 AS REAL))))AND(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))))OR(x'')));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((((LIKELIHOOD(vt0.c0, 0.37302438060044363))OR(CAST(vt0.c0 AS REAL))))AND(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))))OR(x''))) ORDER BY (((COALESCE(DISTINCT vt0.c0, vt0.c1, '1686196784', vt0.c1)))<(((vt0.c0 IN (vt0.c0))))) INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1 COLLATE RTRIM, NULL, (('v딊jq') NOT NULL))) AND ((NULL, (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c1) NOT BETWEEN (0xfffffffffda79f89) AND (vt0.c1)))))) ORDER BY (((COALESCE(DISTINCT vt0.c0, vt0.c1, '1686196784', vt0.c1)))<(((vt0.c0 IN (vt0.c0)))));
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (TRIM(((vt0.c1)OR(vt0.c1)))) ORDER BY (((vt1.c0, vt0.c1, '-221686042', vt0.c1)) NOT BETWEEN ((LTRIM(vt0.c0), vt0.c0, CASE vt1.c0  WHEN NULL THEN vt0.c1 END, x'')) AND ((((vt1.c0) ISNULL), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c1)), (NOT (vt0.c1))))) DESC;
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (TRIM(((vt0.c1)OR(vt0.c1)))) ORDER BY (((vt1.c0, vt0.c1, '-221686042', vt0.c1)) NOT BETWEEN ((LTRIM(vt0.c0), vt0.c0, CASE vt1.c0  WHEN NULL THEN vt0.c1 END, x'')) AND ((((vt1.c0) ISNULL), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c1)), (NOT (vt0.c1))))) DESC LIMIT 0 INTERSECT SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE (CAST(LOWER(vt0.c0) AS TEXT)) ORDER BY (((vt1.c0, vt0.c1, '-221686042', vt0.c1)) NOT BETWEEN ((LTRIM(vt0.c0), vt0.c0, CASE vt1.c0  WHEN NULL THEN vt0.c1 END, x'')) AND ((((vt1.c0) ISNULL), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c1)), (NOT (vt0.c1))))) DESC LIMIT 0;
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0, ((vt0.c1)AND('290139597'))))>=((CASE WHEN vt1.c0 THEN x'69' END, ((((vt0.c1)OR(vt1.c0)))OR(vt1.c0)))))) ORDER BY CASE vt0.c0  WHEN ((vt1.c0) IS FALSE) THEN x'' WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 COLLATE RTRIM WHEN x'6ed0' THEN (~ (vt1.c0)) END  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c0, ((vt0.c1)AND('290139597'))))>=((CASE WHEN vt1.c0 THEN x'69' END, ((((vt0.c1)OR(vt1.c0)))OR(vt1.c0)))))) ORDER BY x'c0cb0f' DESC  NULLS FIRST, (((vt0.c1)) NOT BETWEEN (((+ (vt0.c1)))) AND ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0, ((vt0.c1)AND('290139597'))))>=((CASE WHEN vt1.c0 THEN x'69' END, ((((vt0.c1)OR(vt1.c0)))OR(vt1.c0)))))) ORDER BY CASE vt0.c0  WHEN ((vt1.c0) IS FALSE) THEN x'' WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 COLLATE RTRIM WHEN x'6ed0' THEN (~ (vt1.c0)) END  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c0, ((vt0.c1)AND('290139597'))))>=((CASE WHEN vt1.c0 THEN x'69' END, ((((vt0.c1)OR(vt1.c0)))OR(vt1.c0)))))) ORDER BY x'c0cb0f' DESC  NULLS FIRST, (((vt0.c1)) NOT BETWEEN (((+ (vt0.c1)))) AND ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE (((((vt0.c0)+(0.1707834080402436)))/(((vt0.c1) ISNULL)))) ORDER BY ((vt1.c0)|(vt1.c0)) COLLATE RTRIM;
SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (((((((vt0.c0)+(0.1707834080402436)))/(((vt0.c1) ISNULL))))AND((((((vt0.c0)) BETWEEN (('')) AND ((vt1.c0)))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END) AND ((((vt1.c0))>=((vt0.c0)))))))) ORDER BY ((vt1.c0)|(vt1.c0)) COLLATE RTRIM;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE (((CASE 'v1'  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)>(((vt0.c0)OR(vt0.c1)))));
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE (((((CASE 'v1'  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)>(((vt0.c0)OR(vt0.c1)))))AND((((((vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c0)))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND ((vt0.c1 IN ())))))) ORDER BY ((x'' COLLATE BINARY) BETWEEN (((vt1.c0)>>(vt0.c0))) AND ((vt0.c1 IN ()))) ASC  NULLS FIRST INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE (((NOT (vt0.c0)) IN (vt0.c1 COLLATE BINARY))) ORDER BY ((x'' COLLATE BINARY) BETWEEN (((vt1.c0)>>(vt0.c0))) AND ((vt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c1 COLLATE BINARY)+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN x'e9' WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN x'e9' WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) LIMIT 0x1 INTERSECT SELECT ALL * FROM vt0 WHERE (((((NULL) NOT BETWEEN (x'f6') AND (vt0.c0))) BETWEEN ((NOT (vt0.c1))) AND (((vt0.c0) ISNULL)))) LIMIT 0x1;
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c1 COLLATE BINARY)+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN x'e9' WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN x'e9' WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) LIMIT 0x1 INTERSECT SELECT ALL * FROM vt0 WHERE (((((NULL) NOT BETWEEN (x'f6') AND (vt0.c0))) BETWEEN ((NOT (vt0.c1))) AND (((vt0.c0) ISNULL)))) LIMIT 0x1;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)IS(vt0.c1))) BETWEEN ((vt0.c1 IN (vt0.c1, vt0.c0))) AND (((vt0.c1)<(vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1)IS(vt0.c1))) BETWEEN ((vt0.c1 IN (vt0.c1, vt0.c0))) AND (((vt0.c1)<(vt0.c0)))))AND(((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CASE IFNULL(DISTINCT vt0.c1, vt0.c1)  WHEN (vt0.c1 IN (vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((vt0.c0) NOT NULL) THEN (vt0.c1 IN (vt0.c0)) WHEN 0.23043145240569074 THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)IS(vt0.c1))) BETWEEN ((vt0.c1 IN (vt0.c1, vt0.c0))) AND (((vt0.c1)<(vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1)IS(vt0.c1))) BETWEEN ((vt0.c1 IN (vt0.c1, vt0.c0))) AND (((vt0.c1)<(vt0.c0)))))AND(((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CASE IFNULL(DISTINCT vt0.c1, vt0.c1)  WHEN (vt0.c1 IN (vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((vt0.c0) NOT NULL) THEN (vt0.c1 IN (vt0.c0)) WHEN 0.23043145240569074 THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END);
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()))AND(((((((vt1.c0) NOTNULL))OR(CAST(vt1.c0 AS TEXT))))OR(0.5921625525649123))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (((vt1.c0) ISNULL)) AND (CAST(vt1.c0 AS INTEGER))) DESC  NULLS LAST, STRFTIME((vt1.c0 IN (vt1.c0)), ((vt1.c0)<=(vt1.c0)), ((vt1.c0) NOTNULL)) ASC  NULLS LAST, ((CASE WHEN -5.87666667E8 THEN vt1.c0 END) IS TRUE) DESC LIMIT 2;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE (~ (vt0.c0))  WHEN ((vt0.c1)<=(vt1.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END ELSE vt0.c0 END) ORDER BY -1943074248  NULLS FIRST, (~ (((vt1.c0) NOT NULL)))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (CASE (~ (vt0.c0))  WHEN ((vt0.c1)<(vt1.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END ELSE vt0.c0 END) ORDER BY 0Xffffffff8c2f0a38  NULLS FIRST, (~ (((vt1.c0) NOT NULL)))  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS TEXT)) ORDER BY 0Xffffffff8c2f0a38  NULLS FIRST, (~ (((vt1.c0) NOT NULL)))  NULLS LAST LIMIT 2;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE (vt1.c0 IN ())  WHEN LTRIM(vt1.c0) THEN (((x'', vt0.c1, 0.4427175247759766, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c1, 1.043883576E9, vt1.c0, vt0.c0))) ELSE CAST(vt0.c1 AS TEXT) END) ORDER BY LOWER(DISTINCT vt1.c0) ASC  NULLS FIRST, (((((((('-669325256')AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c1)))))OR((+ (vt0.c1)))))OR(((vt1.c0)%(vt0.c0)))))AND((vt0.c1 IN (vt0.c1)))) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE (vt1.c0 IN ())  WHEN LTRIM(vt1.c0) THEN (((x'', vt0.c1, 0.4427175247759766, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c1, 1.043883576E9, vt1.c0, vt0.c0))) ELSE CAST(vt0.c1 AS TEXT) END) ORDER BY ((json_extract(0.7244552385887274, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt1.c0)) IS TRUE)  NULLS LAST LIMIT 0X4;
SELECT * FROM vt0 WHERE (NULLIF(CAST(vt0.c0 AS INTEGER), ((-1555868435)/(vt0.c0))));
SELECT * FROM vt0 WHERE (((NULLIF(CAST(vt0.c0 AS INTEGER), ((-1555868435)/(vt0.c0))))AND(((CAST(vt0.c0 AS INTEGER)) IS TRUE)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))) ASC, NULLIF(vt0.c1, json_patch(vt0.c0, vt0.c1)) DESC;
SELECT * FROM vt0 WHERE (NULLIF(CAST(vt0.c0 AS INTEGER), ((-1555868435)/(vt0.c0))));
SELECT * FROM vt0 WHERE (((NULLIF(CAST(vt0.c0 AS INTEGER), ((-1555868435)/(vt0.c0))))AND(((CAST(vt0.c0 AS INTEGER)) IS TRUE)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))) ASC, NULLIF(vt0.c1, json_patch(vt0.c0, vt0.c1)) DESC;
SELECT MIN(vt0.c1) FROM vt1, vt0 WHERE ((((NULL))<=((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))));
SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE ((((NULL))=((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)))) ORDER BY ((((vt0.c0) IS FALSE)) ISNULL), ((((vt0.c0)==(vt0.c0)))>=(TIME(vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))), ((((0.13814802085250988)OR((('fb')IS NOT(vt0.c0)))))AND(-529809639)) ASC LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt1, vt0 WHERE ((+ ((('R]rV!	R')<<(vt1.c0))))) ORDER BY ((((vt0.c0) IS FALSE)) ISNULL), ((((vt0.c0)==(vt0.c0)))>=(TIME(vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))), ((((0.13814802085250988)OR((('fb')IS NOT(vt0.c0)))))AND(-529809639)) ASC LIMIT 0x1;
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE (CAST((('-1882551361')/(vt0.c1)) AS BLOB));
SELECT DISTINCT MAX(vt0.c1) FROM vt1, vt0 WHERE (((CAST((('-1882551361')/(vt0.c1)) AS BLOB))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM))) INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt1, vt0 WHERE (((vt0.c0)>(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt1 CROSS JOIN vt0 ON x'' WHERE (1740064686);
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON x'' WHERE (((0X67b747ae)AND((((vt0.c0)*(vt0.c1)) IN (((((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)), ((vt0.c1)|(vt0.c1))))))) LIMIT 3;
SELECT * FROM vt1 CROSS JOIN vt0 ON x'' WHERE (1740064686);
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON x'' WHERE (((0X67b747ae)AND((((vt0.c0)*(vt0.c1)) IN (((((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)), ((vt0.c1)|(vt0.c1))))))) LIMIT 3;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST((- (vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST((- (vt0.c0)) AS NUMERIC))AND(CASE CAST(vt0.c0 AS NUMERIC)  WHEN vt0.c1 COLLATE NOCASE THEN (vt1.c0 IN (vt0.c1, 1.262436262E9)) ELSE CASE WHEN vt1.c0 THEN -1.79095374E8 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END END))) ORDER BY ((((vt0.c1)=(vt1.c0)))IS((~ (vt0.c1)))) LIMIT 4;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) ORDER BY (((((']r1') BETWEEN (vt1.c0) AND (vt1.c0))))<>((((vt1.c0)=(vt1.c0))))), (((vt1.c0, 0x74d293a4, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB), (((vt1.c0, vt1.c0))>((vt1.c0, vt1.c0))), x'46a9')) AND (((NOT (vt1.c0)), '1920392684', ((((((0x670de806)OR(NULL)))AND(vt1.c0)))OR(vt1.c0))))) ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((x'2c')*(((vt1.c0)<>(vt1.c0))))) ORDER BY (((((']r1') BETWEEN (vt1.c0) AND (vt1.c0))))<>((((vt1.c0)=(vt1.c0))))), (((vt1.c0, 0X74d293a4, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB), (((vt1.c0, vt1.c0))>((vt1.c0, vt1.c0))), x'46a9')) AND (((NOT (vt1.c0)), '1920392684', ((((((1728964614)OR(NULL)))AND(vt1.c0)))OR(vt1.c0))))) ASC LIMIT 0;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) ORDER BY (((((']r1') BETWEEN (vt1.c0) AND (vt1.c0))))<>((((vt1.c0)=(vt1.c0))))), (((vt1.c0, 0x74d293a4, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB), (((vt1.c0, vt1.c0))>((vt1.c0, vt1.c0))), x'46a9')) AND (((NOT (vt1.c0)), '1920392684', ((((((0x670de806)OR(NULL)))AND(vt1.c0)))OR(vt1.c0))))) ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((x'2c')*(((vt1.c0)<>(vt1.c0))))) ORDER BY (((((']r1') BETWEEN (vt1.c0) AND (vt1.c0))))<>((((vt1.c0)=(vt1.c0))))), (((vt1.c0, 0X74d293a4, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB), (((vt1.c0, vt1.c0))>((vt1.c0, vt1.c0))), x'46a9')) AND (((NOT (vt1.c0)), '1920392684', ((((((1728964614)OR(NULL)))AND(vt1.c0)))OR(vt1.c0))))) ASC LIMIT 0;
SELECT * FROM vt0, vt1 WHERE ((('365792862') ISNULL)) ORDER BY (((vt0.c0 IN (vt1.c0, vt0.c0))) IS TRUE) ASC, CASE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN '-517599695' THEN NULL COLLATE RTRIM WHEN (vt1.c0 IN (vt0.c0)) THEN CAST(vt0.c1 AS INTEGER) ELSE ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) END DESC, (vt0.c0 IN ()) ASC;
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((((('365792862') ISNULL))AND(UPPER(DISTINCT (vt0.c1 IN ()))))) ORDER BY UPPER(DISTINCT ((vt0.c1)*(vt1.c0))) ASC, ((x'1c0761')|(vt0.c1)) LIMIT 1 INTERSECT SELECT * FROM vt0, vt1 WHERE (NULLIF(CAST(vt0.c0 AS TEXT), vt0.c0)) ORDER BY UPPER(DISTINCT ((vt0.c1)*(vt1.c0))) ASC, ((x'1c0761')|(vt0.c1)) LIMIT 1;
SELECT * FROM vt0, vt1 WHERE ((('365792862') ISNULL)) ORDER BY (((vt0.c0 IN (vt1.c0, vt0.c0))) IS TRUE) ASC, CASE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN '-517599695' THEN NULL COLLATE RTRIM WHEN (vt1.c0 IN (vt0.c0)) THEN CAST(vt0.c1 AS INTEGER) ELSE ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) END DESC, (vt0.c0 IN ()) ASC;
SELECT MIN(vt0.c0) FROM vt0 INNER JOIN vt1 ON '*dY T(nXE' WHERE (STRFTIME(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (vt1.c0 IN ()), COALESCE(DISTINCT vt1.c0, vt0.c0)));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 INNER JOIN vt1 ON '*dY T(nXE' WHERE (((STRFTIME(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (vt1.c0 IN ()), COALESCE(DISTINCT vt1.c0, vt0.c0)))AND(((((x'')AND((- (vt0.c1)))))OR((- (vt0.c0))))))) LIMIT 1 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 INNER JOIN vt1 ON '*dY T(nXE' WHERE (((((vt0.c1)<>(vt0.c1)))+((((vt0.c0))<=((vt0.c0)))))) LIMIT 0x1;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ((((0.3259869728743773)LIKE(vt1.c0)) IN ((vt1.c0 IN (vt1.c0)))));
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ((((0.3259869728743773)LIKE(vt1.c0)) IN ((vt1.c0 IN (vt1.c0))))) LIMIT 0X1 INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (0.31513118894200964) LIMIT 1;
SELECT ALL * FROM vt1 WHERE (TYPEOF(DISTINCT vt1.c0 COLLATE BINARY));
SELECT DISTINCT * FROM vt1 WHERE (TYPEOF(DISTINCT vt1.c0 COLLATE BINARY));
SELECT ALL * FROM vt1 WHERE (TYPEOF(DISTINCT vt1.c0 COLLATE BINARY));
SELECT DISTINCT * FROM vt1 WHERE (TYPEOF(DISTINCT vt1.c0 COLLATE BINARY));
SELECT MAX(vt0.c0) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR('1262436262')))OR(((vt0.c1)-(vt0.c1))))) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)OR(((vt0.c1) NOT NULL))))AND((~ (vt0.c1)))) ASC, 0Xffffffff9b13d733, x'67275b';
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR('1262436262')))OR(((vt0.c1)-(vt0.c1))))) ORDER BY (('0.782920398801565') BETWEEN (((0.8533998045027953)||(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c0, x'', 0.7691494037826953))))), CAST(((vt0.c0) NOT NULL) AS REAL) DESC  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY 0.30601508555627055 DESC, (((x'cb'))>((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt1.c0 IN ()) COLLATE RTRIM)AND(CASE WHEN ROUND(vt0.c0, vt0.c1) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE LOWER(DISTINCT vt0.c0) END))) ORDER BY ((vt0.c1 COLLATE BINARY)>=(vt0.c1)) DESC  NULLS LAST, vt1.c0 DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1))>=((vt0.c1)))) ORDER BY (vt0.c0 IN (vt0.c0)) ASC, CASE vt0.c0  WHEN CASE vt0.c1  WHEN vt0.c0 THEN -1779623279 ELSE vt0.c1 END THEN vt0.c1 COLLATE NOCASE WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN ((vt0.c1) BETWEEN ('0.40872194926768113') AND (vt0.c0)) WHEN ((vt0.c0)>('0pꞬecV/Z')) THEN (vt0.c1 IN (vt0.c0)) END DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1))=((vt0.c1))))AND((((vt0.c0)) NOT BETWEEN ((('' IN (vt0.c1)))) AND ((CAST(vt0.c0 AS BLOB))))))) ORDER BY (vt0.c0 IN (vt0.c0)) ASC, CASE vt0.c0  WHEN CASE vt0.c1  WHEN vt0.c0 THEN 0xffffffff95ed1a91 ELSE vt0.c1 END THEN vt0.c1 COLLATE NOCASE WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN ((vt0.c1) BETWEEN ('0.40872194926768113') AND (vt0.c0)) WHEN ((vt0.c0)>('0pꞬecV/Z')) THEN (vt0.c1 IN (vt0.c0)) END DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1))>=((vt0.c1)))) ORDER BY (vt0.c0 IN (vt0.c0)) ASC, CASE vt0.c0  WHEN CASE vt0.c1  WHEN vt0.c0 THEN -1779623279 ELSE vt0.c1 END THEN vt0.c1 COLLATE NOCASE WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN ((vt0.c1) BETWEEN ('0.40872194926768113') AND (vt0.c0)) WHEN ((vt0.c0)>('0pꞬecV/Z')) THEN (vt0.c1 IN (vt0.c0)) END DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1))=((vt0.c1))))AND((((vt0.c0)) NOT BETWEEN ((('' IN (vt0.c1)))) AND ((CAST(vt0.c0 AS BLOB))))))) ORDER BY (vt0.c0 IN (vt0.c0)) ASC, CASE vt0.c0  WHEN CASE vt0.c1  WHEN vt0.c0 THEN 0xffffffff95ed1a91 ELSE vt0.c1 END THEN vt0.c1 COLLATE NOCASE WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN ((vt0.c1) BETWEEN ('0.40872194926768113') AND (vt0.c0)) WHEN ((vt0.c0)>('0pꞬecV/Z')) THEN (vt0.c1 IN (vt0.c0)) END DESC  NULLS LAST LIMIT 1;
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)GLOB(vt1.c0))) ORDER BY ((vt1.c0 COLLATE RTRIM)>>(((vt0.c1) IS TRUE))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)GLOB(vt1.c0)))AND(((((NULL)>>(vt0.c1))) BETWEEN (((0.025816069331061176) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt1.c0)%(vt1.c0))))))) ORDER BY ((vt1.c0 COLLATE RTRIM)>>(((vt0.c1) IS TRUE))) ASC  NULLS LAST INTERSECT SELECT * FROM vt1, vt0 WHERE (((LOWER(DISTINCT vt0.c0))&((NOT (vt0.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM)>>(((vt0.c1) IS TRUE))) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)GLOB(vt1.c0))) ORDER BY ((vt1.c0 COLLATE RTRIM)>>(((vt0.c1) IS TRUE))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)GLOB(vt1.c0)))AND(((((NULL)>>(vt0.c1))) BETWEEN (((0.025816069331061176) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt1.c0)%(vt1.c0))))))) ORDER BY ((vt1.c0 COLLATE RTRIM)>>(((vt0.c1) IS TRUE))) ASC  NULLS LAST INTERSECT SELECT * FROM vt1, vt0 WHERE (((LOWER(DISTINCT vt0.c0))&((NOT (vt0.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM)>>(((vt0.c1) IS TRUE))) ASC  NULLS LAST;
SELECT MIN(vt1.c0) FROM vt0, vt1 WHERE ((vt1.c0 IN ())) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT DISTINCT MIN(vt1.c0) FROM vt0, vt1 WHERE ((vt1.c0 IN ())) ORDER BY vt0.c0 ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE ((vt1.c0 COLLATE BINARY IN (vt1.c0 COLLATE NOCASE))) ORDER BY json_array_length(vt1.c0 COLLATE BINARY, ((vt0.c0)=(vt0.c0))) DESC, (((((((('0.0')AND((vt0.c1 IN ()))))AND(LAST_INSERT_ROWID())))AND(vt1.c0 COLLATE RTRIM)))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0 COLLATE BINARY IN (vt1.c0 COLLATE NOCASE)))AND((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) IN (((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) NOT NULL)))))) ORDER BY CASE WHEN (NOT (vt1.c0)) THEN vt1.c0 WHEN (((((((((('-1682216345')AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) WHEN 0.9528273026202319 THEN 4.6522376E7 END;
SELECT ALL * FROM vt0, vt1 WHERE ((vt1.c0 COLLATE BINARY IN (vt1.c0 COLLATE NOCASE))) ORDER BY json_array_length(vt1.c0 COLLATE BINARY, ((vt0.c0)=(vt0.c0))) DESC, (((((((('0.0')AND((vt0.c1 IN ()))))AND(LAST_INSERT_ROWID())))AND(vt1.c0 COLLATE RTRIM)))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))));
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE ((((vt0.c1)<(vt1.c0)) IN (LIKELY(vt0.c0)))) ORDER BY ((x'd03e') BETWEEN ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0)) AND ((vt0.c0, 0Xffffffff85ccdb14)))) AND (((vt1.c0)<=(vt0.c0)))) DESC  NULLS LAST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)||((- (vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE ((((vt0.c1)<(vt1.c0)) IN (LIKELY(vt0.c0)))) ORDER BY CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1) IS TRUE) ELSE ((vt0.c0)<=(vt0.c1)) END, CAST((- ('-1471845458')) AS NUMERIC) ASC, ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) ASC  NULLS LAST LIMIT 0X1 INTERSECT SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1) IS TRUE) ELSE ((vt0.c0)<=(vt0.c1)) END, CAST((- ('-1471845458')) AS NUMERIC) ASC, ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) ASC  NULLS LAST LIMIT 0X1;
SELECT * FROM vt0 WHERE (((((vt0.c1) NOTNULL))LIKE((vt0.c1 IN (vt0.c0))))) ORDER BY vt0.c1 COLLATE BINARY  NULLS LAST, (((NULL IN (vt0.c1))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOTNULL))LIKE((vt0.c1 IN (vt0.c0))))) ORDER BY vt0.c1 COLLATE BINARY  NULLS LAST, (((NULL IN (vt0.c1))) NOT NULL)  NULLS FIRST LIMIT 0;
SELECT * FROM vt0 WHERE (((((vt0.c1) NOTNULL))LIKE((vt0.c1 IN (vt0.c0))))) ORDER BY vt0.c1 COLLATE BINARY  NULLS LAST, (((NULL IN (vt0.c1))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOTNULL))LIKE((vt0.c1 IN (vt0.c0))))) ORDER BY vt0.c1 COLLATE BINARY  NULLS LAST, (((NULL IN (vt0.c1))) NOT NULL)  NULLS FIRST LIMIT 0;
SELECT * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY vt1.c0 ASC  NULLS LAST, ((vt0.c1)=(2.018407589E9)) COLLATE BINARY DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1)AND((((vt1.c0, '1e500')) NOT BETWEEN ((vt0.c1, ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))) AND ((vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)))))) ORDER BY (((((vt0.c1, vt1.c0, vt0.c0))<(('-2083788955', vt1.c0, vt0.c1)))) BETWEEN ((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c1))<((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c1)))) AND (((vt0.c1)<=(vt0.c0)))) ASC INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) ORDER BY (((((vt0.c1, vt1.c0, vt0.c0))<(('-2083788955', vt1.c0, vt0.c1)))) BETWEEN ((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c1))<((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c1)))) AND (((vt0.c1)<=(vt0.c0)))) ASC;
SELECT * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY vt1.c0 ASC  NULLS LAST, ((vt0.c1)=(2.018407589E9)) COLLATE BINARY DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1)AND((((vt1.c0, '1e500')) NOT BETWEEN ((vt0.c1, ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))) AND ((vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)))))) ORDER BY (((((vt0.c1, vt1.c0, vt0.c0))<(('-2083788955', vt1.c0, vt0.c1)))) BETWEEN ((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c1))<((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c1)))) AND (((vt0.c1)<=(vt0.c0)))) ASC INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) ORDER BY (((((vt0.c1, vt1.c0, vt0.c0))<(('-2083788955', vt1.c0, vt0.c1)))) BETWEEN ((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c1))<((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c1)))) AND (((vt0.c1)<=(vt0.c0)))) ASC;
SELECT ALL MIN(vt0.c0) FROM vt0, vt1 WHERE ((('180344412') BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))));
SELECT DISTINCT MIN(vt0.c0) FROM vt0, vt1 WHERE ((('180344412') BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0))))) INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0, vt1 WHERE ((((('-1656493811')/(vt1.c0)))*(CAST(vt0.c1 AS BLOB))));
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN (NOT (vt1.c0)) THEN x'f7' WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c1)) WHEN ((vt1.c0) ISNULL) THEN (- (vt0.c1)) END) ORDER BY (('-136740434') NOTNULL) DESC  NULLS LAST, (((((vt1.c0)<(vt0.c0)), (+ (vt0.c1)), (vt1.c0 IN (vt1.c0))))!=((DATETIME(vt0.c1, vt0.c1, vt0.c0), ('\?N' IN ()), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE WHEN (NOT (vt1.c0)) THEN x'f7' WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c1)) WHEN ((vt1.c0) ISNULL) THEN (- (vt0.c1)) END) ORDER BY (('-136740434') NOTNULL) DESC  NULLS LAST, (((((vt1.c0)<(vt0.c0)), (+ (vt0.c1)), (vt1.c0 IN (vt1.c0))))<>((DATETIME(vt0.c1, vt0.c1, vt0.c0), ('\?N' IN ()), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN (NOT (vt1.c0)) THEN x'f7' WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c1)) WHEN ((vt1.c0) ISNULL) THEN (- (vt0.c1)) END) ORDER BY (('-136740434') NOTNULL) DESC  NULLS LAST, (((((vt1.c0)<(vt0.c0)), (+ (vt0.c1)), (vt1.c0 IN (vt1.c0))))!=((DATETIME(vt0.c1, vt0.c1, vt0.c0), ('\?N' IN ()), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE WHEN (NOT (vt1.c0)) THEN x'f7' WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c1)) WHEN ((vt1.c0) ISNULL) THEN (- (vt0.c1)) END) ORDER BY (('-136740434') NOTNULL) DESC  NULLS LAST, (((((vt1.c0)<(vt0.c0)), (+ (vt0.c1)), (vt1.c0 IN (vt1.c0))))<>((DATETIME(vt0.c1, vt0.c1, vt0.c0), ('\?N' IN ()), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) DESC  NULLS FIRST;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE, NULL, (((((((('g''7uﮘ')AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))) AND ((((vt0.c0)OR(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1915024502' WHEN vt0.c1 THEN x'' WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c1)>>(vt0.c0)))))) ORDER BY ((TRIM(DISTINCT vt0.c0)) NOT BETWEEN (CASE 0.04337888142353474  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c1 AS BLOB))) DESC, (((((0.863430580413621)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))>>((~ (0.21046504447610692)))) ASC  NULLS FIRST;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE, NULL, (((((((('g''7uﮘ')AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))) AND ((((vt0.c0)OR(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1915024502' WHEN vt0.c1 THEN x'' WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c1)>>(vt0.c0))))))AND(((vt0.c0)GLOB(0.9996117356394317)) COLLATE RTRIM))) ORDER BY ((TRIM(DISTINCT vt0.c0)) NOT BETWEEN (CASE 0.04337888142353474  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c1 AS BLOB))) DESC, (((((0.863430580413621)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))>>((~ (0.21046504447610692)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND('1722939111')))+(MIN(x'', -1.427404429E9, vt1.c0, vt1.c0)))) ORDER BY (~ ((NOT (vt1.c0))))  NULLS LAST, vt1.c0 COLLATE RTRIM ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))AND('1722939111')))+(MIN(x'', -1.427404429E9, vt1.c0, vt1.c0))))AND(CAST('-1236113770' AS BLOB)))) ORDER BY (~ ((NOT (vt1.c0))))  NULLS LAST, vt1.c0 COLLATE RTRIM ASC  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM vt1 WHERE ((NOT (json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) ORDER BY ((INSTR(vt1.c0, vt1.c0)) IS FALSE)  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((NOT (json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) ORDER BY ((INSTR(vt1.c0, vt1.c0)) IS FALSE)  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (CASE CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((vt1.c0))>=((vt1.c0))) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((INSTR(vt1.c0, vt1.c0)) IS FALSE)  NULLS FIRST LIMIT 0;
SELECT * FROM vt1 WHERE (((x'13c967' COLLATE BINARY) NOTNULL));
SELECT ALL * FROM vt1 WHERE (((x'13c967' COLLATE BINARY) NOTNULL)) LIMIT 0x2;
SELECT * FROM vt1 WHERE (((x'13c967' COLLATE BINARY) NOTNULL));
SELECT ALL * FROM vt1 WHERE (((x'13c967' COLLATE BINARY) NOTNULL)) LIMIT 0x2;
SELECT ALL * FROM vt1, vt0 WHERE (LIKELY(TRIM(vt0.c0, vt0.c0))) ORDER BY ((((((vt0.c1) NOTNULL))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND((vt1.c0 IN ()))) DESC, CASE WHEN 0.1709641187558646 THEN ((vt0.c1)>=(vt0.c0)) WHEN (~ ('Z
[/g')) THEN (('-423690826')|(vt0.c1)) END;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((LIKELY(TRIM(vt0.c0, vt0.c0)))AND(vt0.c0))) ORDER BY TRIM(DISTINCT ((((vt1.c0)AND(x'')))OR(vt0.c0)), vt0.c1) INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)-(CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY TRIM(DISTINCT ((((vt1.c0)AND(x'')))OR(vt0.c0)), vt0.c1);
SELECT ALL * FROM vt1, vt0 WHERE (LIKELY(TRIM(vt0.c0, vt0.c0))) ORDER BY ((((((vt0.c1) NOTNULL))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND((vt1.c0 IN ()))) DESC, CASE WHEN 0.1709641187558646 THEN ((vt0.c1)>=(vt0.c0)) WHEN (~ ('Z
[/g')) THEN (('-423690826')|(vt0.c1)) END;
SELECT MIN(vt0.c0) FROM vt0 NATURAL JOIN vt1 WHERE ((((((vt1.c0))<((vt0.c1)))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c1)%(vt0.c1))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL) ASC, vt0.c0 DESC, (NOT (vt0.c0)) COLLATE RTRIM DESC;
SELECT MIN(vt0.c0) FROM vt0 NATURAL JOIN vt1 WHERE ((((((((vt1.c0))<((vt0.c1)))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c1)%(vt0.c1)))))AND(((((vt0.c1 IN (vt1.c0, vt1.c0)), ((vt1.c0)LIKE(vt0.c0))))<=((((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)), TYPEOF(DISTINCT vt0.c1))))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL) ASC, vt0.c0 DESC, (NOT (vt0.c0)) COLLATE RTRIM DESC;
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))/(vt1.c0 COLLATE BINARY))) ORDER BY CAST(vt1.c0 AS INTEGER)  NULLS LAST, vt1.c0;
SELECT * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))/(vt1.c0 COLLATE BINARY)))AND((- (TRIM(vt1.c0)))))) ORDER BY ((vt1.c0)%((('1955211388') BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, ((((vt1.c0)IS(vt1.c0)))<=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC INTERSECT SELECT ALL * FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) ORDER BY ((vt1.c0)%((('1955211388') BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, ((((vt1.c0)IS(vt1.c0)))<=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))/(vt1.c0 COLLATE BINARY))) ORDER BY CAST(vt1.c0 AS INTEGER)  NULLS LAST, vt1.c0;
SELECT * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))/(vt1.c0 COLLATE BINARY)))AND((- (TRIM(vt1.c0)))))) ORDER BY ((vt1.c0)%((('1955211388') BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, ((((vt1.c0)IS(vt1.c0)))<=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC INTERSECT SELECT ALL * FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) ORDER BY ((vt1.c0)%((('1955211388') BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, ((((vt1.c0)IS(vt1.c0)))<=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT ALL * FROM vt1, vt0 WHERE (x'21');
SELECT * FROM vt1, vt0 WHERE (((x'21')AND((((x'')<>(vt0.c0)) IN ())))) ORDER BY (((((vt0.c1, vt1.c0, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt0.c0, vt1.c0)))) IS TRUE) DESC  NULLS FIRST, vt0.c0 COLLATE BINARY;
SELECT ALL * FROM vt1, vt0 WHERE (x'21');
SELECT * FROM vt1, vt0 WHERE (((x'21')AND((((x'')<>(vt0.c0)) IN ())))) ORDER BY (((((vt0.c1, vt1.c0, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt0.c0, vt1.c0)))) IS TRUE) DESC  NULLS FIRST, vt0.c0 COLLATE BINARY;
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE ('1569361358') ORDER BY (((((vt1.c0 IN (vt1.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND(((('휳', vt1.c0, vt0.c1))<=((vt0.c0, vt0.c0, '-1802069377')))))  NULLS LAST, CASE (~ (vt1.c0))  WHEN ((vt0.c1)!=(vt0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c0)<(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN ('1519580750') AND (vt0.c1)) WHEN (('3f马')=(vt0.c0)) THEN vt0.c1 END ASC  NULLS FIRST;
SELECT MIN(vt0.c1) FROM vt1, vt0 WHERE ('1569361358') ORDER BY (((((vt1.c0 IN (vt1.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND(((('휳', vt1.c0, vt0.c1))<=((vt0.c0, vt0.c0, '-1802069377')))))  NULLS LAST, CASE (~ (vt1.c0))  WHEN ((vt0.c1)!=(vt0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c0)<(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN ('1519580750') AND (vt0.c1)) WHEN (('3f马')==(vt0.c0)) THEN vt0.c1 END ASC  NULLS FIRST INTERSECT SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE ((vt0.c1 IN ()) COLLATE BINARY) ORDER BY (((((vt1.c0 IN (vt1.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND(((('휳', vt1.c0, vt0.c1))<=((vt0.c0, vt0.c0, '-1802069377')))))  NULLS LAST, CASE (~ (vt1.c0))  WHEN ((vt0.c1)<>(vt0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c0)<(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN ('1519580750') AND (vt0.c1)) WHEN (('3f马')==(vt0.c0)) THEN vt0.c1 END ASC  NULLS FIRST;
SELECT MAX(vt0.c0) FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c1)AND(((((vt0.c1, '', NULL))>=((vt0.c1, vt0.c0, vt0.c0))) IN (((vt0.c0) NOT NULL)))))) INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (CAST(CASE 0.35452676959840745  WHEN vt0.c1 THEN vt0.c0 END AS TEXT));
SELECT ALL * FROM vt0 WHERE ((((((((- (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))AND('v')))OR((-2.094347978E9 IN ()))));
SELECT ALL * FROM vt0 WHERE ((((((((((- (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))AND('v')))OR((-2.094347978E9 IN ()))))AND(((vt0.c0) IS TRUE) COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE ((((((((- (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))AND('v')))OR((-2.094347978E9 IN ()))));
SELECT ALL * FROM vt0 WHERE ((((((((((- (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))AND('v')))OR((-2.094347978E9 IN ()))))AND(((vt0.c0) IS TRUE) COLLATE RTRIM)));
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(NULL AS REAL))GLOB(vt0.c1)));
SELECT * FROM vt0, vt1 WHERE (((((CAST(NULL AS REAL))GLOB(vt0.c1)))AND('836359195'))) INTERSECT SELECT * FROM vt0, vt1 WHERE (CASE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))  WHEN (vt0.c0 IN (vt0.c1)) THEN vt0.c0 COLLATE BINARY WHEN vt0.c1 COLLATE RTRIM THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c1)LIKE(vt0.c1)) THEN ((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)) ELSE CAST(vt1.c0 AS BLOB) END);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(NULL AS REAL))GLOB(vt0.c1)));
SELECT * FROM vt0, vt1 WHERE (((((CAST(NULL AS REAL))GLOB(vt0.c1)))AND('836359195'))) INTERSECT SELECT * FROM vt0, vt1 WHERE (CASE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))  WHEN (vt0.c0 IN (vt0.c1)) THEN vt0.c0 COLLATE BINARY WHEN vt0.c1 COLLATE RTRIM THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c1)LIKE(vt0.c1)) THEN ((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)) ELSE CAST(vt1.c0 AS BLOB) END);
SELECT MAX(vt1.c0) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS INTEGER)) ORDER BY ((vt1.c0 COLLATE RTRIM) IS TRUE)  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS INTEGER)) ORDER BY (+ (vt1.c0 COLLATE NOCASE)) ASC, (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE  NULLS LAST LIMIT 1 INTERSECT SELECT MAX(vt1.c0) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN (~ (vt1.c0)) END) ORDER BY (+ (vt1.c0 COLLATE NOCASE)) ASC, (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE  NULLS LAST LIMIT 0X1;
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c1)>>(vt0.c0)))+((('Q''') IS FALSE))), CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS REAL) DESC, (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((DATETIME(vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1)))) LIMIT 0;
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c1)>>(vt0.c0)))+((('Q''') IS FALSE))), CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS REAL) DESC, (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((DATETIME(vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1)))) LIMIT 0;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((vt1.c0)<=(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (vt1.c0 COLLATE BINARY IN (vt1.c0)), ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('RkbA&E(!O', vt1.c0, vt1.c0))), (((x'09')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))>((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(NULL AS NUMERIC))))  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0)<=(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((((vt1.c0)|(vt1.c0))) BETWEEN (json(vt1.c0)) AND (((vt1.c0)IS(vt1.c0))))))) ORDER BY ((((0x3e386638)=(vt1.c0)))GLOB(0.3976144883812005))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (LTRIM((- (vt1.c0)), (x'' IN (0.6745454788603809)))) ORDER BY ((((1043883576)==(vt1.c0)))GLOB(0.3976144883812005))  NULLS FIRST LIMIT 0x1;
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))!=((+ (vt1.c0))))) ORDER BY vt1.c0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))<((+ (vt1.c0)))))AND((~ (x'c6'))))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN ((NOT (vt1.c0))) AND (LOWER(DISTINCT vt0.c0)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c0 IN ()))||(vt1.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN ((NOT (vt1.c0))) AND (LOWER(DISTINCT vt0.c0)))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))!=((+ (vt1.c0))))) ORDER BY vt1.c0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))<((+ (vt1.c0)))))AND((~ (x'c6'))))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN ((NOT (vt1.c0))) AND (LOWER(DISTINCT vt0.c0)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c0 IN ()))||(vt1.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN ((NOT (vt1.c0))) AND (LOWER(DISTINCT vt0.c0)))  NULLS LAST;
SELECT MIN(vt0.c1) FROM vt0 WHERE (CAST(LIKELY(DISTINCT vt0.c0) AS REAL));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((CAST(LIKELY(DISTINCT vt0.c0) AS REAL))AND(CASE WHEN vt0.c1 COLLATE NOCASE THEN CAST('[(' AS NUMERIC) ELSE (vt0.c0 IN (vt0.c0)) END))) ORDER BY (((vt0.c1))<>(((((vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, '4j		B')))))), ((((x'3b30' IN ()), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, vt0.c1))<=((((vt0.c0)-('sz_')), ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((((NULL)AND(vt0.c1)))AND(vt0.c0))))) ASC, ((ABS(vt0.c1))-(((((((-2.4960678E7)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST, (NOT ('-179095374' COLLATE RTRIM)) LIMIT 0;
SELECT MAX(vt1.c0) FROM vt1 WHERE (0.9558328387502524) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (vt1.c0 COLLATE BINARY, (+ (vt1.c0)))), CASE 0Xffffffffd847090d  WHEN ((vt1.c0)>=(0.9794823885458052)) THEN 0X784e74a5 WHEN (((vt1.c0, vt1.c0))<((vt1.c0, vt1.c0))) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END  NULLS LAST, vt1.c0 ASC  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (0.9558328387502524) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (vt1.c0 COLLATE BINARY, (+ (vt1.c0)))), CASE -666433267  WHEN ((vt1.c0)>=(0.9794823885458052)) THEN 0x784e74a5 WHEN (((vt1.c0, vt1.c0))<((vt1.c0, vt1.c0))) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END  NULLS LAST, vt1.c0 ASC  NULLS LAST LIMIT 1;
SELECT ALL MAX(vt0.c1) FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (x'07') AND (vt1.c0)))<(json(vt0.c0)))) ORDER BY TRIM(DISTINCT ((vt0.c0)-(vt1.c0))), (((vt1.c0 IN ()))-((vt0.c1 IN (vt1.c0, vt0.c0)))) DESC;
SELECT MAX(vt0.c1) FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (x'07') AND (vt1.c0)))<(json(vt0.c0)))) ORDER BY TRIM(DISTINCT ((vt0.c0)-(vt1.c0))), (((vt1.c0 IN ()))-((vt0.c1 IN (vt1.c0, vt0.c0)))) DESC LIMIT 3 INTERSECT SELECT ALL MAX(vt0.c1) FROM vt0, vt1 WHERE (COALESCE(DISTINCT ((vt0.c1) IS TRUE), ((vt1.c0)>>(NULL)))) ORDER BY TRIM(DISTINCT ((vt0.c0)-(vt1.c0))), (((vt1.c0 IN ()))-((vt0.c1 IN (vt1.c0, vt0.c0)))) DESC LIMIT 0X3;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt0.c1) NOTNULL) AS INTEGER) WHERE (((vt0.c0)OR((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt0.c1) NOTNULL) AS INTEGER) WHERE (((((vt0.c0)OR((NOT (vt0.c0)))))AND(-1110240153))) ORDER BY 0X58c2a27c  NULLS LAST, (((((((((((+ (vt0.c1)))OR((((NULL, vt0.c1, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c1))))))AND(((vt1.c0) NOT NULL))))AND(vt0.c1 COLLATE RTRIM)))OR(TYPEOF(vt0.c1))))AND((- (vt0.c1)))) DESC, ((vt1.c0 COLLATE RTRIM) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt1.c0))  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0 WHERE (((((((vt0.c0, 223018368, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), (((vt0.c0))>=((vt0.c1)))))!=((vt0.c0, ((vt0.c1) NOTNULL)))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0, 223018368, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), (((vt0.c0))>=((vt0.c1)))))!=((vt0.c0, ((vt0.c1) NOTNULL)))))AND(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))) IS FALSE)))) LIMIT 1 INTERSECT SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))>=(((NOT (vt0.c1)))))) LIMIT 1;
SELECT * FROM vt0 WHERE (((((((vt0.c0, 223018368, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), (((vt0.c0))>=((vt0.c1)))))!=((vt0.c0, ((vt0.c1) NOTNULL)))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0, 223018368, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), (((vt0.c0))>=((vt0.c1)))))!=((vt0.c0, ((vt0.c1) NOTNULL)))))AND(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))) IS FALSE)))) LIMIT 1 INTERSECT SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))>=(((NOT (vt0.c1)))))) LIMIT 1;
SELECT ALL * FROM vt0 WHERE (((((((((LOWER(vt0.c1))OR(TRIM(DISTINCT x'c77c1c'))))OR(((vt0.c1)*(vt0.c0)))))OR((((vt0.c1))=((vt0.c1))))))OR(((2010883230)AND(vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE (((((((((LOWER(vt0.c1))OR(TRIM(DISTINCT x'c77c1c'))))OR(((vt0.c1)*(vt0.c0)))))OR((((vt0.c1))==((vt0.c1))))))OR(((0X77dba49e)AND(vt0.c0))))) ORDER BY (((((vt0.c1)&(vt0.c1)), (((vt0.c1, vt0.c1))<((vt0.c0, vt0.c0)))))>((x'', vt0.c1 COLLATE NOCASE))) DESC, ((INSTR(vt0.c0, vt0.c0))/(((vt0.c0)<('~j)_&')))), ((UNLIKELY(vt0.c1)) NOT BETWEEN (((vt0.c1)GLOB(x'8b5bdb'))) AND ((~ (vt0.c1)))) DESC INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((CAST(-1464712341 AS REAL)) BETWEEN (((vt0.c1) NOTNULL)) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((((vt0.c1)&(vt0.c1)), (((vt0.c1, vt0.c1))<((vt0.c0, vt0.c0)))))>((x'', vt0.c1 COLLATE NOCASE))) DESC, ((INSTR(vt0.c0, vt0.c0))/(((vt0.c0)<('~j)_&')))), ((UNLIKELY(vt0.c1)) NOT BETWEEN (((vt0.c1)GLOB(x'8b5bdb'))) AND ((~ (vt0.c1)))) DESC;
SELECT ALL * FROM vt0 WHERE (((((((((LOWER(vt0.c1))OR(TRIM(DISTINCT x'c77c1c'))))OR(((vt0.c1)*(vt0.c0)))))OR((((vt0.c1))=((vt0.c1))))))OR(((2010883230)AND(vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE (((((((((LOWER(vt0.c1))OR(TRIM(DISTINCT x'c77c1c'))))OR(((vt0.c1)*(vt0.c0)))))OR((((vt0.c1))==((vt0.c1))))))OR(((0X77dba49e)AND(vt0.c0))))) ORDER BY (((((vt0.c1)&(vt0.c1)), (((vt0.c1, vt0.c1))<((vt0.c0, vt0.c0)))))>((x'', vt0.c1 COLLATE NOCASE))) DESC, ((INSTR(vt0.c0, vt0.c0))/(((vt0.c0)<('~j)_&')))), ((UNLIKELY(vt0.c1)) NOT BETWEEN (((vt0.c1)GLOB(x'8b5bdb'))) AND ((~ (vt0.c1)))) DESC INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((CAST(-1464712341 AS REAL)) BETWEEN (((vt0.c1) NOTNULL)) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((((vt0.c1)&(vt0.c1)), (((vt0.c1, vt0.c1))<((vt0.c0, vt0.c0)))))>((x'', vt0.c1 COLLATE NOCASE))) DESC, ((INSTR(vt0.c0, vt0.c0))/(((vt0.c0)<('~j)_&')))), ((UNLIKELY(vt0.c1)) NOT BETWEEN (((vt0.c1)GLOB(x'8b5bdb'))) AND ((~ (vt0.c1)))) DESC;
SELECT ALL * FROM vt0 WHERE (((((NULL)AND(((vt0.c0)OR(vt0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE (((((NULL)AND(((vt0.c0)OR(vt0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) DESC  NULLS FIRST, vt0.c1 DESC  NULLS LAST, UPPER(vt0.c1 COLLATE NOCASE) DESC;
SELECT ALL * FROM vt0 WHERE (((((NULL)AND(((vt0.c0)OR(vt0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE (((((NULL)AND(((vt0.c0)OR(vt0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) DESC  NULLS FIRST, vt0.c1 DESC  NULLS LAST, UPPER(vt0.c1 COLLATE NOCASE) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)LIKE(vt1.c0)) IN (((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)LIKE(vt1.c0)) IN (((vt1.c0) NOTNULL)))) ORDER BY ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE RTRIM)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)) DESC  NULLS LAST, CAST(vt1.c0 AS REAL)  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND (('0.2618691619166992'))));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND (('0.2618691619166992'))))AND((((((vt0.c1) NOTNULL), ((vt0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))<=(('nel%4b', ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), (- (vt0.c0)))))))) ORDER BY ((CASE 'ꉼ'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)<<((~ (vt0.c0)))) DESC LIMIT 0x1;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (- (vt1.c0))  WHEN ((NULL)IS NOT(vt1.c0)) THEN (((x'9ccf9b', vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0, vt1.c0))) WHEN (vt1.c0 IN (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY load_extension((vt1.c0 IN ()), ((vt1.c0) IS FALSE)) DESC, 0.3914412731594962;
SELECT COUNT(*) FROM vt1 WHERE (CASE (- (vt1.c0))  WHEN ((NULL)IS NOT(vt1.c0)) THEN (((x'9ccf9b', vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0, vt1.c0))) WHEN (vt1.c0 IN (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY load_extension((vt1.c0 IN ()), ((vt1.c0) IS FALSE)) DESC, 0.3914412731594962 INTERSECT SELECT COUNT(*) FROM vt1 WHERE (TIME(vt1.c0, x'', ((vt1.c0)GLOB(vt1.c0)))) ORDER BY load_extension((vt1.c0 IN ()), ((vt1.c0) IS FALSE)) DESC, 0.3914412731594962;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS TEXT));
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((CAST(((vt1.c0) ISNULL) AS TEXT))AND(CASE (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))  WHEN (((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 1634786106)) AND (('0.7157266306769183', vt1.c0))) THEN CAST(vt1.c0 AS REAL) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE 0.10437762696953323 END))) LIMIT 0;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0, vt0.c1, NULL, vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c0))))<>(((vt1.c0)-(vt0.c0)))));
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0, vt0.c1, NULL, vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c0))))<>(((vt1.c0)-(vt0.c0))))) ORDER BY CAST((((NULL, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c0))) AS REAL), CAST(((((((x'd713058956')AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)) AS REAL), ((((NOT (vt0.c1)), vt0.c1))>=((((((vt0.c1)OR(vt0.c1)))OR('')), vt0.c1))) DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END))) ORDER BY CAST((((NULL, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c0))) AS REAL), CAST(((((((x'd713058956')AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)) AS REAL), ((((NOT (vt0.c1)), vt0.c1))>=((((((vt0.c1)OR(vt0.c1)))OR('')), vt0.c1))) DESC  NULLS FIRST LIMIT 2;
SELECT MIN(vt0.c1) FROM vt0 WHERE (((vt0.c0) IS TRUE));
SELECT MIN(vt0.c1) FROM vt0 WHERE (((((vt0.c0) IS TRUE))AND((((((((~ (vt0.c0)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(((x'07') ISNULL))))OR(0.4935533806433231))))) ORDER BY 1628525598 ASC  NULLS LAST, ((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(0.7041097884814647)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))>>(0.6517699149948626))  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ('M') ORDER BY 0x6111541e ASC  NULLS LAST, ((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(0.7041097884814647)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))>>(0.6517699149948626))  NULLS LAST LIMIT 0;
SELECT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE RTRIM)==((NOT (vt0.c0))))) ORDER BY CAST(vt1.c0 COLLATE BINARY AS INTEGER), (((vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0) ISNULL), TRIM(vt0.c0))) AND (((NOT (vt1.c0)), CAST(vt0.c0 AS REAL)))) DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c1 COLLATE RTRIM)=((NOT (vt0.c0)))))AND((((+ (vt0.c0)))&(((((vt1.c0)AND(vt0.c0)))OR(vt0.c1))))))) ORDER BY CAST(vt1.c0 COLLATE BINARY AS INTEGER), (((vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0) ISNULL), TRIM(vt0.c0))) AND (((NOT (vt1.c0)), CAST(vt0.c0 AS REAL)))) DESC INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))) AND (0.6136265182000986))) ORDER BY CAST(vt1.c0 COLLATE BINARY AS INTEGER), (((vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0) ISNULL), TRIM(vt0.c0))) AND (((NOT (vt1.c0)), CAST(vt0.c0 AS REAL)))) DESC;
SELECT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE RTRIM)==((NOT (vt0.c0))))) ORDER BY CAST(vt1.c0 COLLATE BINARY AS INTEGER), (((vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0) ISNULL), TRIM(vt0.c0))) AND (((NOT (vt1.c0)), CAST(vt0.c0 AS REAL)))) DESC;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c1 COLLATE RTRIM)=((NOT (vt0.c0)))))AND((((+ (vt0.c0)))&(((((vt1.c0)AND(vt0.c0)))OR(vt0.c1))))))) ORDER BY CAST(vt1.c0 COLLATE BINARY AS INTEGER), (((vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0) ISNULL), TRIM(vt0.c0))) AND (((NOT (vt1.c0)), CAST(vt0.c0 AS REAL)))) DESC INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))) AND (0.6136265182000986))) ORDER BY CAST(vt1.c0 COLLATE BINARY AS INTEGER), (((vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0) ISNULL), TRIM(vt0.c0))) AND (((NOT (vt1.c0)), CAST(vt0.c0 AS REAL)))) DESC;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))>>(((vt0.c0) NOT NULL)))) ORDER BY (((vt0.c1 IN (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c1 COLLATE NOCASE));
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))>>(((vt0.c0) NOT NULL)))) ORDER BY (((vt0.c1 IN (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c1 COLLATE NOCASE)) LIMIT 0X0;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (0X27827414);
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((0X27827414)AND(CAST(((vt1.c0)>(vt1.c0)) AS INTEGER)))) ORDER BY (((((vt1.c0)LIKE(vt1.c0)), (vt1.c0 IN ()), '-479701952'))<=((vt1.c0 COLLATE BINARY, ((((((((((((vt1.c0)AND(x'f2')))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(NULL)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))), ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC LIMIT 2;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0) IS TRUE) END) ORDER BY x'' DESC;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0) IS TRUE) END) ORDER BY (((x'd60798')) NOT BETWEEN ((CAST(vt1.c0 AS BLOB))) AND (((NOT (vt1.c0))))), (vt1.c0 IN (NULL)) COLLATE NOCASE  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))OR(NULL))) ORDER BY (((x'd60798')) NOT BETWEEN ((CAST(vt1.c0 AS BLOB))) AND (((NOT (vt1.c0))))), (vt1.c0 IN (NULL)) COLLATE NOCASE  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0) IS TRUE) END) ORDER BY x'' DESC;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0) IS TRUE) END) ORDER BY (((x'd60798')) NOT BETWEEN ((CAST(vt1.c0 AS BLOB))) AND (((NOT (vt1.c0))))), (vt1.c0 IN (NULL)) COLLATE NOCASE  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))OR(NULL))) ORDER BY (((x'd60798')) NOT BETWEEN ((CAST(vt1.c0 AS BLOB))) AND (((NOT (vt1.c0))))), (vt1.c0 IN (NULL)) COLLATE NOCASE  NULLS FIRST LIMIT 1;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (CAST(0.9842808856285115 AS NUMERIC));
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((CAST(0.9842808856285115 AS NUMERIC))AND((+ (((vt1.c0)&(vt1.c0)))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1) NOT NULL) COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1) NOT NULL) COLLATE RTRIM)AND(((((vt1.c0)>(vt1.c0)))/(((vt0.c0)||(vt0.c1))))))) LIMIT 0X0;
SELECT * FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0)) BETWEEN (SUBSTR(vt1.c0, vt1.c0)) AND (vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt1 WHERE (((((IFNULL(DISTINCT vt1.c0, vt1.c0)) BETWEEN (SUBSTR(vt1.c0, vt1.c0)) AND (vt1.c0 COLLATE NOCASE)))AND(((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOTNULL)))) LIMIT 1;
SELECT * FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0)) BETWEEN (SUBSTR(vt1.c0, vt1.c0)) AND (vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt1 WHERE (((((IFNULL(DISTINCT vt1.c0, vt1.c0)) BETWEEN (SUBSTR(vt1.c0, vt1.c0)) AND (vt1.c0 COLLATE NOCASE)))AND(((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOTNULL)))) LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((vt0.c1)||(vt1.c0)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((NOT (((vt0.c1)||(vt1.c0)))))AND((((vt1.c0 IN (vt0.c0))) NOT NULL)))) ORDER BY NULLIF(DISTINCT ((vt0.c1) IS TRUE), (x'4313fc3e' IN (0.6715342330676093))) DESC, ((~ ('')) IN ()) DESC  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((vt0.c1)||(vt1.c0)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((NOT (((vt0.c1)||(vt1.c0)))))AND((((vt1.c0 IN (vt0.c0))) NOT NULL)))) ORDER BY NULLIF(DISTINCT ((vt0.c1) IS TRUE), (x'4313fc3e' IN (0.6715342330676093))) DESC, ((~ ('')) IN ()) DESC  NULLS LAST LIMIT 0X2;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE ((((json_extract(vt0.c1, vt0.c0, vt0.c0), (- (vt0.c0))))<((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)), (vt0.c0 IN ())))));
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE ((((json_extract(vt0.c1, vt0.c0, vt0.c0), (- (vt0.c0))))<((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)), (vt0.c0 IN ())))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN CASE WHEN x'b0' THEN vt0.c1 WHEN vt0.c1 THEN '' ELSE vt0.c1 END END);
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN CASE WHEN x'b0' THEN vt0.c1 WHEN vt0.c1 THEN '' ELSE vt0.c1 END END)AND((+ (((((((((((((((vt0.c1)AND(x'')))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) IS TRUE)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((((vt0.c0))!=((vt0.c1))))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN CASE WHEN x'b0' THEN vt0.c1 WHEN vt0.c1 THEN '' ELSE vt0.c1 END END);
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN CASE WHEN x'b0' THEN vt0.c1 WHEN vt0.c1 THEN '' ELSE vt0.c1 END END)AND((+ (((((((((((((((vt0.c1)AND(x'')))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) IS TRUE)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((((vt0.c0))!=((vt0.c1))))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) LIMIT 0;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) LIMIT 0;
SELECT ALL * FROM vt0 WHERE (((NULL) BETWEEN (vt0.c0) AND ('-1912800126')) COLLATE BINARY);
SELECT DISTINCT * FROM vt0 WHERE (((NULL) BETWEEN (vt0.c0) AND ('-1912800126')) COLLATE BINARY) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0, vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)), CASE vt0.c1  WHEN 0.1660222080962953 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'G1' WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0)%(vt0.c0)), (~ (vt0.c0)))) AND ((COALESCE(vt0.c0, vt0.c0, vt0.c0), vt0.c1 COLLATE BINARY, ((vt0.c1)&(vt0.c1)), TRIM(vt0.c1, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((NULL) BETWEEN (vt0.c0) AND ('-1912800126')) COLLATE BINARY);
SELECT DISTINCT * FROM vt0 WHERE (((NULL) BETWEEN (vt0.c0) AND ('-1912800126')) COLLATE BINARY) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0, vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)), CASE vt0.c1  WHEN 0.1660222080962953 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'G1' WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0)%(vt0.c0)), (~ (vt0.c0)))) AND ((COALESCE(vt0.c0, vt0.c0, vt0.c0), vt0.c1 COLLATE BINARY, ((vt0.c1)&(vt0.c1)), TRIM(vt0.c1, vt0.c0)))));
SELECT ALL MIN(vt1.c0) FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS TEXT)) ISNULL));
SELECT ALL MIN(vt1.c0) FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS TEXT)) ISNULL)) ORDER BY CASE (- (vt0.c0))  WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1) BETWEEN (vt1.c0) AND (x'bb5306')) WHEN ((x'388e') IS TRUE) THEN ((vt0.c1)<(vt0.c1)) END  NULLS FIRST, vt0.c1 DESC  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((((((vt0.c1 COLLATE NOCASE)AND(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))AND(CAST(vt0.c0 AS INTEGER))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))OR(json_quote(vt0.c0))))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) WHERE ((vt1.c0 IN (vt0.c0)) COLLATE RTRIM) ORDER BY TRIM(DISTINCT (('655700416') NOT BETWEEN (vt1.c0) AND (vt0.c0)), NULL) DESC, x'a5', (CASE vt0.c1  WHEN '' THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END IN ()) DESC;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((((((vt0.c1 COLLATE NOCASE)AND(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))AND(CAST(vt0.c0 AS INTEGER))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))OR(json_quote(vt0.c0))))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) WHERE ((((vt1.c0 IN (vt0.c0)) COLLATE RTRIM)AND((((vt1.c0)) BETWEEN ((((vt0.c1)<<('#L')))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)))))) ORDER BY TRIM(DISTINCT (('655700416') NOT BETWEEN (vt1.c0) AND (vt0.c0)), NULL) DESC, x'a5', (CASE vt0.c1  WHEN '' THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END IN ()) DESC INTERSECT SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((((((vt0.c1 COLLATE NOCASE)AND(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))AND(CAST(vt0.c0 AS INTEGER))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))OR(json_quote(vt0.c0))))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) WHERE (vt1.c0) ORDER BY TRIM(DISTINCT (('655700416') NOT BETWEEN (vt1.c0) AND (vt0.c0)), NULL) DESC, x'a5', (CASE vt0.c1  WHEN '' THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END IN ()) DESC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND ((- (vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1) NOT NULL)) NOT BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND ((- (vt0.c1)))))AND(((((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c0)==(vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))))) LIMIT 1;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND ((- (vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1) NOT NULL)) NOT BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND ((- (vt0.c1)))))AND(((((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c0)==(vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))))) LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE ((('-1693198541')<<(vt1.c0)));
SELECT * FROM vt0, vt1 WHERE ((((('-1693198541')<<(vt1.c0)))AND(((CAST(vt0.c0 AS REAL))>=(((vt0.c0)!=(vt0.c1)))))));
SELECT ALL * FROM vt0, vt1 WHERE ((('-1693198541')<<(vt1.c0)));
SELECT * FROM vt0, vt1 WHERE ((((('-1693198541')<<(vt1.c0)))AND(((CAST(vt0.c0 AS REAL))>=(((vt0.c0)!=(vt0.c1)))))));
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (x'9bcc20') ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((x'9bcc20')AND(LIKELY((- (0Xffffffffd7a41738)))))) ORDER BY vt0.c1 ASC  NULLS FIRST LIMIT 4;
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 NOT INDEXED WHERE (vt1.c0) ORDER BY CAST(((((((0.39017882356290867)OR(NULL)))OR(vt0.c0)))AND(vt0.c1)) AS BLOB) DESC  NULLS LAST, CAST(((vt1.c0) IS FALSE) AS NUMERIC) DESC;
SELECT DISTINCT MAX(vt1.c0) FROM vt1, vt0 WHERE (((vt1.c0)AND(json_insert((~ (vt0.c1)), (((vt1.c0, vt0.c0, vt0.c1))==((vt1.c0, vt0.c0, vt1.c0))), NULLIF(DISTINCT vt0.c0, vt0.c0), vt0.c0)))) ORDER BY vt1.c0  NULLS FIRST, (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt1.c0)))  NULLS FIRST LIMIT 2;
SELECT * FROM vt1 WHERE (((((((NULLIF(vt1.c0, vt1.c0))OR(((vt1.c0) IS TRUE))))AND(3.91877162E8)))AND(((vt1.c0)AND(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((NULLIF(vt1.c0, vt1.c0))OR(((vt1.c0) IS TRUE))))AND(3.91877162E8)))AND(((vt1.c0)AND(vt1.c0)))))AND(((((vt1.c0)OR(vt1.c0)))<<(NULL)))));
SELECT * FROM vt1 WHERE (((((((NULLIF(vt1.c0, vt1.c0))OR(((vt1.c0) IS TRUE))))AND(3.91877162E8)))AND(((vt1.c0)AND(vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((NULLIF(vt1.c0, vt1.c0))OR(((vt1.c0) IS TRUE))))AND(3.91877162E8)))AND(((vt1.c0)AND(vt1.c0)))))AND(((((vt1.c0)OR(vt1.c0)))<<(NULL)))));
SELECT MAX(vt0.c1) FROM vt0, vt1 WHERE (INSTR(vt0.c1, (((vt0.c0))<((vt0.c0))))) ORDER BY ((((((vt0.c1) ISNULL))AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c1) IS TRUE)));
SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE (INSTR(vt0.c1, (((vt0.c0))<((vt0.c0))))) ORDER BY (+ (((vt0.c0) IS TRUE))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0, vt1 WHERE ((((vt0.c0, CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END))>((((vt0.c0)>(2132554685)), ((vt1.c0)>(vt1.c0)))))) ORDER BY (+ (((vt0.c0) IS TRUE))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM vt0, vt1 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1))OR(((vt0.c1) BETWEEN (0.7164743646815945) AND (vt1.c0))))) ORDER BY ((((vt0.c1, NULL)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1))) IN ())  NULLS LAST, (((vt1.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN x'' END)) AND (((NOT (vt1.c0)))))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1))OR(((vt0.c1) BETWEEN (0.7164743646815945) AND (vt1.c0))))) ORDER BY ((((vt0.c1, NULL)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1))) IN ())  NULLS LAST, (((vt1.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN x'' END)) AND (((NOT (vt1.c0)))))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1))OR(((vt0.c1) BETWEEN (0.7164743646815945) AND (vt1.c0))))) ORDER BY ((((vt0.c1, NULL)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1))) IN ())  NULLS LAST, (((vt1.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN x'' END)) AND (((NOT (vt1.c0)))))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((('5') NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY UNLIKELY(((vt1.c0)IS(vt1.c0)))  NULLS LAST;
SELECT * FROM vt1 WHERE ((((('5') NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(CASE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(2109847487))  WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 COLLATE NOCASE WHEN TRIM(DISTINCT vt1.c0) THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) END))) ORDER BY UNLIKELY(((vt1.c0)IS(vt1.c0)))  NULLS LAST LIMIT 0x2;
SELECT * FROM vt1 WHERE ((('5') NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY UNLIKELY(((vt1.c0)IS(vt1.c0)))  NULLS LAST;
SELECT * FROM vt1 WHERE ((((('5') NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(CASE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(2109847487))  WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 COLLATE NOCASE WHEN TRIM(DISTINCT vt1.c0) THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) END))) ORDER BY UNLIKELY(((vt1.c0)IS(vt1.c0)))  NULLS LAST LIMIT 0x2;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON IFNULL(x'48', IFNULL(vt1.c0, vt1.c0)) WHERE (((0.1152481424445505 COLLATE BINARY)OR(((vt1.c0) NOT NULL))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON IFNULL(x'48', IFNULL(vt1.c0, vt1.c0)) WHERE (((((0.1152481424445505 COLLATE BINARY)OR(((vt1.c0) NOT NULL))))AND(((((vt0.c1)AND(CASE WHEN vt0.c0 THEN 0.3057071453404486 END)))AND(CAST(vt0.c1 AS BLOB)))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOTNULL) ASC  NULLS FIRST, (((vt0.c0 IN (0.9583155630514704)))>=(HEX(vt0.c0)));
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE (((((vt0.c0)+(vt0.c1))) BETWEEN (((vt1.c0)%(vt1.c0))) AND (((vt1.c0)/(vt0.c1))))) ORDER BY ((vt1.c0)IS NOT(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), vt0.c0 COLLATE NOCASE  NULLS FIRST;
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE (((((vt0.c0)+(vt0.c1))) BETWEEN (((vt1.c0)%(vt1.c0))) AND (((vt1.c0)/(vt0.c1))))) ORDER BY ((vt1.c0)IS NOT(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), vt0.c0 COLLATE NOCASE  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY)>(LIKELY(vt0.c1)))) ORDER BY ((vt1.c0)IS NOT(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), vt0.c0 COLLATE NOCASE  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS NUMERIC))%(vt0.c1))) ORDER BY (~ (581925021)) COLLATE NOCASE ASC;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS NUMERIC))%(vt0.c1))) ORDER BY (~ (0X22af789d)) COLLATE NOCASE ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS NUMERIC))%(vt0.c1))) ORDER BY (~ (581925021)) COLLATE NOCASE ASC;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS NUMERIC))%(vt0.c1))) ORDER BY (~ (0X22af789d)) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (vt1.c0)) COLLATE BINARY);
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0)) COLLATE BINARY)AND(((((((((((((((((((vt1.c0)OR(vt1.c0)))AND(517605941)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(NULL)))))AND(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0)))OR(vt1.c0))))) LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(0xffffffff8846d602)))AND(vt1.c0)) COLLATE NOCASE) LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) IS TRUE) IN (TYPEOF(vt0.c0)))) ORDER BY (((x'b6' IN (vt0.c0)))IS((vt0.c1 IN (vt0.c0, vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1) IS TRUE) IN (TYPEOF(vt0.c0))))AND((INSTR(vt0.c1, vt0.c0) IN ())))) ORDER BY (((x'b6' IN (vt0.c0)))IS((vt0.c1 IN (vt0.c0, vt0.c1))))  NULLS FIRST INTERSECT SELECT ALL * FROM vt0 WHERE (((((((((UPPER(DISTINCT vt0.c0))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(IFNULL(vt0.c0, vt0.c0))))OR((((vt0.c1, vt0.c0, '1517556072'))<((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY (((x'b6' IN (vt0.c0)))IS((vt0.c1 IN (vt0.c0, vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) IS TRUE) IN (TYPEOF(vt0.c0)))) ORDER BY (((x'b6' IN (vt0.c0)))IS((vt0.c1 IN (vt0.c0, vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1) IS TRUE) IN (TYPEOF(vt0.c0))))AND((INSTR(vt0.c1, vt0.c0) IN ())))) ORDER BY (((x'b6' IN (vt0.c0)))IS((vt0.c1 IN (vt0.c0, vt0.c1))))  NULLS FIRST INTERSECT SELECT ALL * FROM vt0 WHERE (((((((((UPPER(DISTINCT vt0.c0))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(IFNULL(vt0.c0, vt0.c0))))OR((((vt0.c1, vt0.c0, '1517556072'))<((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY (((x'b6' IN (vt0.c0)))IS((vt0.c1 IN (vt0.c0, vt0.c1))))  NULLS FIRST;
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE (((vt1.c0)*(CAST(vt1.c0 AS BLOB))));
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (((((vt1.c0)*(CAST(vt1.c0 AS BLOB))))AND(((((((-296494888)OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)<<(vt0.c1)))))AND(((vt0.c1) IS FALSE)))))) LIMIT 0x1 INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE ((('-1943074248')<(vt0.c1))) LIMIT 1;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS NUMERIC)) LIMIT 0 INTERSECT SELECT COUNT(*) FROM vt1, vt0 WHERE (x'') LIMIT 0x0;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((~ (vt1.c0 COLLATE NOCASE))) ORDER BY '-232520711' ASC, ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(CAST(vt1.c0 AS REAL)))  NULLS LAST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((~ (vt1.c0 COLLATE NOCASE))) ORDER BY '-232520711' ASC, ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(CAST(vt1.c0 AS REAL)))  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((CASE 0.8856220077531952  WHEN 0.6176619530515886 THEN vt1.c0 END) NOT NULL)) ORDER BY '-232520711' ASC, ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(CAST(vt1.c0 AS REAL)))  NULLS LAST LIMIT 0x1;
SELECT MIN(vt1.c0) FROM vt1 INNER JOIN vt0 ON NULL WHERE (((((vt0.c1)>=(vt1.c0)))%(((vt1.c0)+(vt0.c0))))) ORDER BY (((((0xffffffffa93eadae)GLOB(vt0.c1))))>((((vt0.c0) NOT BETWEEN (x'daf2') AND (vt0.c1))))), (IFNULL(DISTINCT vt0.c0, vt1.c0) IN ((NOT (vt1.c0)))) ASC;
SELECT MIN(vt1.c0) FROM vt1 INNER JOIN vt0 ON NULL WHERE (((((((vt0.c1)>=(vt1.c0)))%(((vt1.c0)+(vt0.c0)))))AND(((((vt0.c1)>(vt0.c1)))<=(CAST(vt1.c0 AS BLOB)))))) ORDER BY UNICODE((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) DESC  NULLS FIRST, ((vt0.c1 COLLATE RTRIM)-(((((((vt0.c1)AND(x'67')))AND(vt1.c0)))OR(vt0.c0)))) DESC  NULLS LAST INTERSECT SELECT MIN(vt1.c0) FROM vt1 INNER JOIN vt0 ON NULL WHERE (NULLIF(DISTINCT (NOT (vt0.c1)), DATETIME(vt1.c0, vt1.c0, vt1.c0))) ORDER BY UNICODE((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) DESC  NULLS FIRST, ((vt0.c1 COLLATE RTRIM)-(((((((vt0.c1)AND(x'67')))AND(vt1.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (NULL) ORDER BY (vt1.c0 IN (vt0.c1)) COLLATE NOCASE ASC  NULLS FIRST, (((((((((((- (vt1.c0)))AND(vt0.c1)))AND(((vt1.c0)LIKE(vt0.c0)))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND ('A')))))AND('' COLLATE BINARY)))OR(x'167e'))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((NULL)AND(((((vt0.c0)IS NOT(vt0.c0)))||(vt0.c0 COLLATE NOCASE))))) ORDER BY (vt1.c0 IN (vt0.c1)) COLLATE NOCASE ASC  NULLS FIRST, (((((((((((- (vt1.c0)))AND(vt0.c1)))AND(((vt1.c0)LIKE(vt0.c0)))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND ('A')))))AND('' COLLATE BINARY)))OR(x'167e'))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (NULL) ORDER BY (vt1.c0 IN (vt0.c1)) COLLATE NOCASE ASC  NULLS FIRST, (((((((((((- (vt1.c0)))AND(vt0.c1)))AND(((vt1.c0)LIKE(vt0.c0)))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND ('A')))))AND('' COLLATE BINARY)))OR(x'167e'))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((NULL)AND(((((vt0.c0)IS NOT(vt0.c0)))||(vt0.c0 COLLATE NOCASE))))) ORDER BY (vt1.c0 IN (vt0.c1)) COLLATE NOCASE ASC  NULLS FIRST, (((((((((((- (vt1.c0)))AND(vt0.c1)))AND(((vt1.c0)LIKE(vt0.c0)))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND ('A')))))AND('' COLLATE BINARY)))OR(x'167e'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY TYPEOF(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.2779600763765049 WHEN vt1.c0 THEN vt1.c0 END) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY CAST(((vt1.c0)LIKE(vt1.c0)) AS BLOB), (~ (vt1.c0)) LIMIT 0x1;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c1)>(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) WHERE (TRIM(DISTINCT (vt0.c1 IN (vt0.c1)))) ORDER BY ((((vt1.c0)AND(vt1.c0))) NOT BETWEEN (vt0.c1) AND ((- ('j')))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE BINARY;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c1)>(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) WHERE (TRIM(DISTINCT (vt0.c1 IN (vt0.c1)))) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(0.831198083000101 AS TEXT)) AND (vt0.c0))  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c1)>(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) WHERE (TRIM(DISTINCT (vt0.c1 IN (vt0.c1)))) ORDER BY ((((vt1.c0)AND(vt1.c0))) NOT BETWEEN (vt0.c1) AND ((- ('j')))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE BINARY;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c1)>(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) WHERE (TRIM(DISTINCT (vt0.c1 IN (vt0.c1)))) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(0.831198083000101 AS TEXT)) AND (vt0.c0))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (COALESCE(vt0.c0, vt0.c0, vt0.c1) COLLATE RTRIM) ORDER BY ((vt1.c0 IN (vt0.c1)) IN ()) DESC  NULLS FIRST, ((TYPEOF(vt0.c0)) ISNULL)  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (COALESCE(vt0.c0, vt0.c0, vt0.c1) COLLATE RTRIM) ORDER BY LOWER(DISTINCT (+ (vt0.c1))) ASC  NULLS FIRST, (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END IN (((vt0.c1)IS NOT(vt0.c0)))) ASC LIMIT 2 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ('-696040969') ORDER BY LOWER(DISTINCT (+ (vt0.c1))) ASC  NULLS FIRST, (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END IN (((vt0.c1)IS NOT(vt0.c0)))) ASC LIMIT 0X2;
SELECT * FROM vt1, vt0 WHERE (COALESCE(vt0.c0, vt0.c0, vt0.c1) COLLATE RTRIM) ORDER BY ((vt1.c0 IN (vt0.c1)) IN ()) DESC  NULLS FIRST, ((TYPEOF(vt0.c0)) ISNULL)  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c1, vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0, vt1.c0)) AND (('0.344683209230246', vt0.c1, vt0.c0, vt1.c0)))) IS TRUE));
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c1, vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0, vt1.c0)) AND (('0.344683209230246', vt0.c1, vt0.c0, vt1.c0)))) IS TRUE)) ORDER BY ((vt1.c0) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (COALESCE(DISTINCT vt0.c1, vt0.c0)))  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt1.c0)-(vt1.c0))) AND (CAST(vt0.c1 AS TEXT))) ASC LIMIT 0x2 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0, vt1.c0, vt0.c0))<((vt0.c1, vt1.c0, vt0.c1))), ((vt1.c0)IS NOT(NULL)))) AND (((vt0.c1 IN ()), '0.5305901528374672')))) ORDER BY ((vt1.c0) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (COALESCE(DISTINCT vt0.c1, vt0.c0)))  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt1.c0)-(vt1.c0))) AND (CAST(vt0.c1 AS TEXT))) ASC LIMIT 0x2;
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c1, vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0, vt1.c0)) AND (('0.344683209230246', vt0.c1, vt0.c0, vt1.c0)))) IS TRUE));
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c1, vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0, vt1.c0)) AND (('0.344683209230246', vt0.c1, vt0.c0, vt1.c0)))) IS TRUE)) ORDER BY ((vt1.c0) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (COALESCE(DISTINCT vt0.c1, vt0.c0)))  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt1.c0)-(vt1.c0))) AND (CAST(vt0.c1 AS TEXT))) ASC LIMIT 0x2 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0, vt1.c0, vt0.c0))<((vt0.c1, vt1.c0, vt0.c1))), ((vt1.c0)IS NOT(NULL)))) AND (((vt0.c1 IN ()), '0.5305901528374672')))) ORDER BY ((vt1.c0) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (COALESCE(DISTINCT vt0.c1, vt0.c0)))  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt1.c0)-(vt1.c0))) AND (CAST(vt0.c1 AS TEXT))) ASC LIMIT 0x2;
SELECT MIN(vt1.c0) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((((vt1.c0)||(vt1.c0)))))) ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE), ((+ (vt1.c0)) IN ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))) ASC  NULLS LAST;
SELECT MIN(vt1.c0) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((((vt1.c0)||(vt1.c0)))))) ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE), ((+ (vt1.c0)) IN ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))) ASC  NULLS LAST INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE), ((+ (vt1.c0)) IN ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1)+(vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0) IS TRUE))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1)+(vt0.c0)))))AND(((0Xffffffffd62f032b) NOT NULL)))) ORDER BY (- (((vt0.c1) IS FALSE))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ('2056506278') ORDER BY (- (((vt0.c1) IS FALSE)));
SELECT * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1)+(vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0) IS TRUE))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1)+(vt0.c0)))))AND(((0Xffffffffd62f032b) NOT NULL)))) ORDER BY (- (((vt0.c1) IS FALSE))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ('2056506278') ORDER BY (- (((vt0.c1) IS FALSE)));
SELECT ALL * FROM vt1 WHERE ((((((0.5662362658896445) NOTNULL), '209020755', ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)IS NOT(vt1.c0))))>=((((vt1.c0)LIKE(vt1.c0)), vt1.c0, ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), CAST(vt1.c0 AS INTEGER))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT NULL)  NULLS FIRST, CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN LOWER(vt1.c0) THEN ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(x'')) END DESC;
SELECT * FROM vt1 WHERE ((((((0.5662362658896445) NOTNULL), '209020755', ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)IS NOT(vt1.c0))))>=((((vt1.c0)LIKE(vt1.c0)), vt1.c0, ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), CAST(vt1.c0 AS INTEGER))))) ORDER BY x'' COLLATE NOCASE LIMIT 0;
SELECT ALL * FROM vt1 WHERE ((((((0.5662362658896445) NOTNULL), '209020755', ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)IS NOT(vt1.c0))))>=((((vt1.c0)LIKE(vt1.c0)), vt1.c0, ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), CAST(vt1.c0 AS INTEGER))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT NULL)  NULLS FIRST, CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN LOWER(vt1.c0) THEN ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(x'')) END DESC;
SELECT * FROM vt1 WHERE ((((((0.5662362658896445) NOTNULL), '209020755', ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)IS NOT(vt1.c0))))>=((((vt1.c0)LIKE(vt1.c0)), vt1.c0, ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), CAST(vt1.c0 AS INTEGER))))) ORDER BY x'' COLLATE NOCASE LIMIT 0;
SELECT ALL * FROM vt1 WHERE (((vt1.c0)==((- (vt1.c0))))) ORDER BY (~ ((~ (0.344683209230246)))) ASC  NULLS LAST, CASE (((vt1.c0))>((vt1.c0)))  WHEN (- (vt1.c0)) THEN (- (NULL)) ELSE vt1.c0 END ASC;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)==((- (vt1.c0)))))AND((+ (((vt1.c0) IS FALSE)))))) ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN vt1.c0 WHEN (vt1.c0 IN (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) ELSE '-24960678' END, (((((vt1.c0)<(vt1.c0)), ((vt1.c0) IS FALSE)))>((((vt1.c0)<=(vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0)==((- (vt1.c0))))) ORDER BY (~ ((~ (0.344683209230246)))) ASC  NULLS LAST, CASE (((vt1.c0))>((vt1.c0)))  WHEN (- (vt1.c0)) THEN (- (NULL)) ELSE vt1.c0 END ASC;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)==((- (vt1.c0)))))AND((+ (((vt1.c0) IS FALSE)))))) ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN vt1.c0 WHEN (vt1.c0 IN (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) ELSE '-24960678' END, (((((vt1.c0)<(vt1.c0)), ((vt1.c0) IS FALSE)))>((((vt1.c0)<=(vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((vt1.c0)<<(vt1.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), CAST(vt0.c1 AS REAL))) AND ((((vt1.c0) ISNULL), vt1.c0, ((vt0.c1)!=(vt0.c1))))) WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY vt0.c1 COLLATE BINARY, MIN(vt0.c0, vt0.c0) COLLATE BINARY ASC, vt1.c0, rtreenode(LIKELIHOOD(DISTINCT vt1.c0, vt1.c0), ((vt1.c0) ISNULL)) DESC;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((vt1.c0)<<(vt1.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), CAST(vt0.c1 AS REAL))) AND ((((vt1.c0) ISNULL), vt1.c0, ((vt0.c1)!=(vt0.c1))))) WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY vt0.c1 COLLATE BINARY, MIN(vt0.c0, vt0.c0) COLLATE BINARY ASC, vt1.c0, rtreenode(LIKELIHOOD(DISTINCT vt1.c0, vt1.c0), ((vt1.c0) ISNULL)) DESC INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((vt1.c0)<<(vt1.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), CAST(vt0.c1 AS REAL))) AND ((((vt1.c0) ISNULL), vt1.c0, ((vt0.c1)<>(vt0.c1))))) WHERE (CAST(((((((vt1.c0)OR(vt1.c0)))OR('')))OR(vt1.c0)) AS REAL)) ORDER BY vt0.c1 COLLATE BINARY, MIN(vt0.c0, vt0.c0) COLLATE BINARY ASC, vt1.c0, rtreenode(LIKELIHOOD(DISTINCT vt1.c0, vt1.c0), ((vt1.c0) ISNULL)) DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((vt1.c0)<<(vt1.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), CAST(vt0.c1 AS REAL))) AND ((((vt1.c0) ISNULL), vt1.c0, ((vt0.c1)!=(vt0.c1))))) WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY vt0.c1 COLLATE BINARY, MIN(vt0.c0, vt0.c0) COLLATE BINARY ASC, vt1.c0, rtreenode(LIKELIHOOD(DISTINCT vt1.c0, vt1.c0), ((vt1.c0) ISNULL)) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)!=(vt1.c0)));
SELECT ALL * FROM vt1, vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)!=(vt1.c0)))AND(((((vt0.c1) NOT NULL)) ISNULL)))) LIMIT 2;
SELECT ALL * FROM vt1, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)!=(vt1.c0)));
SELECT ALL * FROM vt1, vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)!=(vt1.c0)))AND(((((vt0.c1) NOT NULL)) ISNULL)))) LIMIT 2;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((((((((('l>')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND((vt1.c0 IN ()))))AND(((vt1.c0)AND(vt1.c0))))) ORDER BY ((((vt1.c0) ISNULL)) IS FALSE) DESC, ((UPPER(DISTINCT vt1.c0)) IS TRUE) ASC, json_insert((vt1.c0 IN (vt1.c0, vt1.c0)), vt1.c0 COLLATE RTRIM, '0.6386073490585216', CAST(vt1.c0 AS TEXT))  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((((((((('l>')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND((vt1.c0 IN ()))))AND(((vt1.c0)AND(vt1.c0))))) ORDER BY ((((vt1.c0) ISNULL)) IS FALSE) DESC, ((UPPER(DISTINCT vt1.c0)) IS TRUE) ASC, json_insert((vt1.c0 IN (vt1.c0, vt1.c0)), vt1.c0 COLLATE RTRIM, '0.6386073490585216', CAST(vt1.c0 AS TEXT))  NULLS FIRST INTERSECT SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) ISNULL)) IS FALSE) DESC, ((UPPER(DISTINCT vt1.c0)) IS TRUE) ASC, json_insert((vt1.c0 IN (vt1.c0, vt1.c0)), vt1.c0 COLLATE RTRIM, '0.6386073490585216', CAST(vt1.c0 AS TEXT))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY UPPER(((vt1.c0) IS FALSE)) ASC, COALESCE((~ (vt1.c0)), CAST(vt0.c0 AS INTEGER)), CAST(((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(x'fa')))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)) AS REAL);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST(x'' AS NUMERIC))AND((((((vt0.c0))<=((vt1.c0)))) NOT NULL)))) ORDER BY ((json_patch(vt1.c0, vt0.c0)) IS FALSE) DESC, ((vt0.c0)=((((vt0.c0, vt1.c0))>((vt0.c0, NULL))))) LIMIT 0x1;
SELECT * FROM vt1, vt0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY UPPER(((vt1.c0) IS FALSE)) ASC, COALESCE((~ (vt1.c0)), CAST(vt0.c0 AS INTEGER)), CAST(((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(x'fa')))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)) AS REAL);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST(x'' AS NUMERIC))AND((((((vt0.c0))<=((vt1.c0)))) NOT NULL)))) ORDER BY ((json_patch(vt1.c0, vt0.c0)) IS FALSE) DESC, ((vt0.c0)=((((vt0.c0, vt1.c0))>((vt0.c0, NULL))))) LIMIT 0x1;
SELECT ALL * FROM vt0 WHERE (x'');
SELECT ALL * FROM vt0 WHERE (x'');
SELECT ALL * FROM vt0 WHERE (x'');
SELECT ALL * FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))<(((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))<(((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))))AND(vt0.c1))) ORDER BY ((((vt0.c1)%(486546923))) NOT BETWEEN (1.489150588E9) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL END)) DESC  NULLS LAST, ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))<>((NOT (vt0.c0)))) DESC  NULLS LAST LIMIT 0X0;
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c0)&(vt0.c1))) NOTNULL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))IS NOT(((vt0.c0)IS NOT(vt0.c1))))  NULLS FIRST, ((0.5391244879534954) IS TRUE) DESC, ((vt0.c1) BETWEEN (CASE WHEN vt1.c0 THEN 'vx-\\>u' WHEN vt1.c0 THEN x'03d1' WHEN 0Xffffffffc6842eab THEN vt0.c0 ELSE vt1.c0 END) AND (vt0.c1));
SELECT DISTINCT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt0.c0)&(vt0.c1))) NOTNULL))AND(((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)<=((+ (vt0.c0))))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))IS NOT(((vt0.c0)IS NOT(vt0.c1))))  NULLS FIRST, ((0.5391244879534954) IS TRUE) DESC, ((vt0.c1) BETWEEN (CASE WHEN vt1.c0 THEN 'vx-\\>u' WHEN vt1.c0 THEN x'03d1' WHEN 0Xffffffffc6842eab THEN vt0.c0 ELSE vt1.c0 END) AND (vt0.c1)) INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 NOT INDEXED NATURAL JOIN vt0 WHERE (CASE (((('/0')OR(vt1.c0)))AND(vt0.c0))  WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c1)<=(vt1.c0)) WHEN (vt0.c1 IN (vt1.c0)) THEN x'' WHEN (((vt1.c0, vt0.c1, vt0.c1, vt1.c0))>=((vt0.c1, vt1.c0, vt0.c1, 0x24edd4c2))) THEN 0.19388439680507563 COLLATE BINARY WHEN vt0.c0 COLLATE RTRIM THEN vt1.c0 COLLATE NOCASE ELSE (- (NULL)) END) ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))IS NOT(((vt0.c0)IS NOT(vt0.c1))))  NULLS FIRST, ((0.5391244879534954) IS TRUE) DESC, ((vt0.c1) BETWEEN (CASE WHEN vt1.c0 THEN 'vx-\\>u' WHEN vt1.c0 THEN x'03d1' WHEN 0Xffffffffc6842eab THEN vt0.c0 ELSE vt1.c0 END) AND (vt0.c1));
SELECT * FROM vt0 WHERE ('y
1+k\');
SELECT DISTINCT * FROM vt0 WHERE ('y
1+k\') LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((- (vt0.c0)))))OR(NULL)))OR((+ (0.4974369144830122)))))OR(vt0.c1 COLLATE RTRIM))) LIMIT 0X1;
SELECT * FROM vt0 WHERE ('y
1+k\');
SELECT DISTINCT * FROM vt0 WHERE ('y
1+k\') LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((- (vt0.c0)))))OR(NULL)))OR((+ (0.4974369144830122)))))OR(vt0.c1 COLLATE RTRIM))) LIMIT 0X1;
SELECT * FROM vt1 WHERE ((NOT ((('-206925103')IS NOT(0.863430580413621)))));
SELECT ALL * FROM vt1 WHERE ((NOT ((('-206925103')IS NOT(0.863430580413621))))) LIMIT 0x2 INTERSECT SELECT ALL * FROM vt1 WHERE (CAST(0.6006001502399108 AS REAL)) LIMIT 2;
SELECT * FROM vt1 WHERE ((NOT ((('-206925103')IS NOT(0.863430580413621)))));
SELECT ALL * FROM vt1 WHERE ((NOT ((('-206925103')IS NOT(0.863430580413621))))) LIMIT 0x2 INTERSECT SELECT ALL * FROM vt1 WHERE (CAST(0.6006001502399108 AS REAL)) LIMIT 2;
SELECT * FROM vt1 WHERE ((~ (((vt1.c0)LIKE(vt1.c0))))) ORDER BY (NOT (((vt1.c0)*(vt1.c0))))  NULLS LAST, LIKELY(CAST(vt1.c0 AS INTEGER));
SELECT DISTINCT * FROM vt1 WHERE ((((~ (((vt1.c0)LIKE(vt1.c0)))))AND('e'))) ORDER BY ((((((vt1.c0)*(vt1.c0)))AND(((vt1.c0)IS NOT(vt1.c0)))))OR(((vt1.c0)!=(vt1.c0)))) ASC, (((NOT (vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0) IS FALSE)));
SELECT * FROM vt1 WHERE ((~ (((vt1.c0)LIKE(vt1.c0))))) ORDER BY (NOT (((vt1.c0)*(vt1.c0))))  NULLS LAST, LIKELY(CAST(vt1.c0 AS INTEGER));
SELECT DISTINCT * FROM vt1 WHERE ((((~ (((vt1.c0)LIKE(vt1.c0)))))AND('e'))) ORDER BY ((((((vt1.c0)*(vt1.c0)))AND(((vt1.c0)IS NOT(vt1.c0)))))OR(((vt1.c0)!=(vt1.c0)))) ASC, (((NOT (vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0) IS FALSE)));
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((vt0.c1)>>(vt0.c0)) COLLATE NOCASE) ORDER BY ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<>(((vt0.c1) ISNULL))) ASC, CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE '	N,''' END THEN (NOT (0Xffffffff9b7c9c08)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c1) ISNULL) WHEN (('1167594841') IS TRUE) THEN json_patch(0.9326122820018876, vt0.c0) WHEN (~ (vt0.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.c0) ISNULL) END  NULLS LAST;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((vt0.c1)>>(vt0.c0)) COLLATE NOCASE) ORDER BY ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<>(((vt0.c1) ISNULL))) ASC, CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE '	N,''' END THEN (NOT (-1686332408)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c1) ISNULL) WHEN (('1167594841') IS TRUE) THEN json_patch(0.9326122820018876, vt0.c0) WHEN (~ (vt0.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.c0) ISNULL) END  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL MAX(vt0.c1) FROM vt0 WHERE ((- (vt0.c1 COLLATE RTRIM))) ORDER BY ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)))!=(((vt0.c1) ISNULL))) ASC, CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE '	N,''' END THEN (NOT (-1686332408)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c1) ISNULL) WHEN (('1167594841') IS TRUE) THEN json_patch(0.9326122820018876, vt0.c0) WHEN (~ (vt0.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.c0) ISNULL) END  NULLS LAST LIMIT 0;
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))GLOB((NOT (vt0.c0))))) ORDER BY ((NOT (vt0.c0)) IN ((+ (vt0.c0)))), ((((((vt0.c1)) BETWEEN ((x'af18')) AND ((vt0.c0))), ((vt0.c0)>=(vt0.c0))))>=((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, (vt0.c1 IN ())))) DESC  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))GLOB((NOT (vt0.c0)))))AND(((NULL) ISNULL)))) ORDER BY ((SUBSTR(vt0.c0, vt0.c0))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) LIMIT 0X1 INTERSECT SELECT ALL MIN(vt0.c1) FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0)>(vt0.c1)) THEN NULLIF(DISTINCT vt0.c1, vt0.c1) WHEN ((vt0.c1)==(vt0.c0)) THEN ((vt0.c1)&(vt0.c0)) WHEN NULL THEN (((-121318534)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) ORDER BY ((SUBSTR(vt0.c0, vt0.c0))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) LIMIT 0X1;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((vt1.c0 IN (vt1.c0, vt1.c0)) IN (vt1.c0)));
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0 IN (vt1.c0, vt1.c0)) IN (vt1.c0)))AND(CAST(((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) AS REAL)))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER) DESC  NULLS FIRST, ((-5.17599695E8)GLOB(UPPER(vt1.c0))) ASC  NULLS FIRST, (('2058009091' COLLATE NOCASE)+(vt1.c0))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) LIMIT 0X1;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) LIMIT 0X1;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)) ORDER BY x'e58558' DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS REAL) DESC, (((vt1.c0) NOTNULL) IN (((vt1.c0)IS NOT(x'')), CASE vt1.c0  WHEN vt1.c0 THEN '<K()' ELSE vt1.c0 END)) DESC  NULLS FIRST INTERSECT SELECT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ((((vt1.c0))>=((vt1.c0)))))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS REAL) DESC, (((vt1.c0) NOTNULL) IN (((vt1.c0)IS NOT(x'')), CASE vt1.c0  WHEN vt1.c0 THEN '<K()' ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)) ORDER BY x'e58558' DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS REAL) DESC, (((vt1.c0) NOTNULL) IN (((vt1.c0)IS NOT(x'')), CASE vt1.c0  WHEN vt1.c0 THEN '<K()' ELSE vt1.c0 END)) DESC  NULLS FIRST INTERSECT SELECT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ((((vt1.c0))>=((vt1.c0)))))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS REAL) DESC, (((vt1.c0) NOTNULL) IN (((vt1.c0)IS NOT(x'')), CASE vt1.c0  WHEN vt1.c0 THEN '<K()' ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT * FROM vt1 INNER JOIN vt0 ON (((NULL IN ())) IS TRUE) WHERE (((((vt0.c0)IS(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC)))) ORDER BY ((vt1.c0)%((- (vt0.c1)))) DESC  NULLS FIRST, (('3O') NOT BETWEEN (((vt0.c0)>>(vt0.c1))) AND ((vt0.c0 IN ())))  NULLS LAST;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (((NULL IN ())) IS TRUE) WHERE (((((((vt0.c0)IS(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC))))AND('1031127186'))) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOT NULL) ASC, ((vt0.c0)!=(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c1, vt0.c1))) COLLATE BINARY INTERSECT SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (((NULL IN ())) IS TRUE) WHERE ((((((((((vt0.c1)OR(vt0.c1)))OR(x'')))AND(vt1.c0)))OR(vt0.c1)) IN ())) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOT NULL) ASC, ((vt0.c0)!=(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c1, vt0.c1))) COLLATE BINARY;
SELECT * FROM vt1 INNER JOIN vt0 ON (((NULL IN ())) IS TRUE) WHERE (((((vt0.c0)IS(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC)))) ORDER BY ((vt1.c0)%((- (vt0.c1)))) DESC  NULLS FIRST, (('3O') NOT BETWEEN (((vt0.c0)>>(vt0.c1))) AND ((vt0.c0 IN ())))  NULLS LAST;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (((NULL IN ())) IS TRUE) WHERE (((((((vt0.c0)IS(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC))))AND('1031127186'))) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOT NULL) ASC, ((vt0.c0)!=(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c1, vt0.c1))) COLLATE BINARY INTERSECT SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (((NULL IN ())) IS TRUE) WHERE ((((((((((vt0.c1)OR(vt0.c1)))OR(x'')))AND(vt1.c0)))OR(vt0.c1)) IN ())) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOT NULL) ASC, ((vt0.c0)!=(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c1, vt0.c1))) COLLATE BINARY;
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS BLOB))>>(vt1.c0 COLLATE NOCASE))) ORDER BY IFNULL(DISTINCT ((vt0.c1) ISNULL), CAST(vt0.c1 AS NUMERIC))  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS BLOB))>>(vt1.c0 COLLATE NOCASE)))AND('u<'))) ORDER BY (((vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, vt1.c0))<=((vt0.c0, vt0.c1, vt1.c0))), (((vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0))), (- (NULL)))) AND ((((1.031127186E9)>=(vt0.c0)), (('1822378536') ISNULL), CAST(vt0.c1 AS REAL)))) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS BLOB))>>(vt1.c0 COLLATE NOCASE))) ORDER BY IFNULL(DISTINCT ((vt0.c1) ISNULL), CAST(vt0.c1 AS NUMERIC))  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS BLOB))>>(vt1.c0 COLLATE NOCASE)))AND('u<'))) ORDER BY (((vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, vt1.c0))<=((vt0.c0, vt0.c1, vt1.c0))), (((vt1.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0))), (- (NULL)))) AND ((((1.031127186E9)>=(vt0.c0)), (('1822378536') ISNULL), CAST(vt0.c1 AS REAL)))) ASC  NULLS LAST;
SELECT MIN(vt0.c1) FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))GLOB(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((vt1.c0) IS FALSE))>=(((vt0.c0)&(vt0.c1)))) DESC  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt1 NATURAL JOIN vt0 WHERE (((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))GLOB(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND('365792862' COLLATE BINARY))) ORDER BY '
bY[', ((SQLITE_SOURCE_ID()) BETWEEN (((vt0.c0)GLOB(vt1.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE 0xffffffffba2cf5bd END)) DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT MIN(vt0.c1) FROM vt1 NATURAL JOIN vt0 WHERE ((((- (vt1.c0)))<(0Xfffffffffbc0f3e0 COLLATE BINARY))) ORDER BY '
bY[', ((SQLITE_SOURCE_ID()) BETWEEN (((vt0.c0)GLOB(vt1.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE -1171458627 END)) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, 0.11935656031948705)) AND (((((vt1.c0, vt1.c0, vt0.c0, vt0.c1))>=((vt1.c0, vt0.c0, vt0.c0, vt1.c0))), ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)))AND(0.9120085872459288)))))) ORDER BY 0.64543943308059 ASC  NULLS LAST, IFNULL(((vt0.c0)IS(vt0.c1)), RTRIM(vt1.c0));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, 0.11935656031948705)) AND (((((vt1.c0, vt1.c0, vt0.c0, vt0.c1))>=((vt1.c0, vt0.c0, vt0.c0, vt1.c0))), ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)))AND(0.9120085872459288)))))) ORDER BY 0.64543943308059 ASC  NULLS LAST, IFNULL(((vt0.c0)IS(vt0.c1)), RTRIM(vt1.c0));
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, 0.11935656031948705)) AND (((((vt1.c0, vt1.c0, vt0.c0, vt0.c1))>=((vt1.c0, vt0.c0, vt0.c0, vt1.c0))), ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)))AND(0.9120085872459288)))))) ORDER BY 0.64543943308059 ASC  NULLS LAST, IFNULL(((vt0.c0)IS(vt0.c1)), RTRIM(vt1.c0));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, 0.11935656031948705)) AND (((((vt1.c0, vt1.c0, vt0.c0, vt0.c1))>=((vt1.c0, vt0.c0, vt0.c0, vt1.c0))), ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c1)))AND(0.9120085872459288)))))) ORDER BY 0.64543943308059 ASC  NULLS LAST, IFNULL(((vt0.c0)IS(vt0.c1)), RTRIM(vt1.c0));
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE ((- (vt0.c1 COLLATE NOCASE))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND('-947017812')))&(0.6674905507924325)) ASC, ((vt0.c1 IN (vt0.c0)) IN ());
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE ((- (vt0.c1 COLLATE NOCASE))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND('-947017812')))&(0.6674905507924325)) ASC, ((vt0.c1 IN (vt0.c0)) IN ()) LIMIT 0x0;
SELECT * FROM vt1, vt0 WHERE (x'' COLLATE RTRIM) ORDER BY (HEX(vt1.c0) IN (((vt0.c0)>(vt0.c1)))) DESC  NULLS LAST, ((vt0.c1)>((vt0.c1 IN ()))) ASC  NULLS FIRST, CASE WHEN vt0.c0 THEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)) WHEN vt1.c0 THEN ((vt0.c1)<<(vt1.c0)) WHEN ((vt0.c0)>=(vt1.c0)) THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c1 AS TEXT) END DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((x'' COLLATE RTRIM)AND(((((vt0.c0) IS FALSE))-(((vt1.c0) NOT BETWEEN ('z') AND (NULL))))))) ORDER BY (((vt0.c1 IN (vt0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (x'' COLLATE RTRIM) ORDER BY (HEX(vt1.c0) IN (((vt0.c0)>(vt0.c1)))) DESC  NULLS LAST, ((vt0.c1)>((vt0.c1 IN ()))) ASC  NULLS FIRST, CASE WHEN vt0.c0 THEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)) WHEN vt1.c0 THEN ((vt0.c1)<<(vt1.c0)) WHEN ((vt0.c0)>=(vt1.c0)) THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c1 AS TEXT) END DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((x'' COLLATE RTRIM)AND(((((vt0.c0) IS FALSE))-(((vt1.c0) NOT BETWEEN ('z') AND (NULL))))))) ORDER BY (((vt0.c1 IN (vt0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT MIN(vt1.c0) FROM vt0, vt1 WHERE ((NOT (TRIM(vt0.c1)))) ORDER BY TRIM(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))), ((((vt0.c1) NOT BETWEEN ('-)5Uyg4') AND (vt0.c1))) BETWEEN (((vt1.c0)!=(vt0.c0))) AND (((vt0.c1) NOTNULL))) DESC;
SELECT DISTINCT MIN(vt1.c0) FROM vt0, vt1 WHERE ((NOT (TRIM(vt0.c1)))) ORDER BY TRIM(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))), ((((vt0.c1) NOT BETWEEN ('-)5Uyg4') AND (vt0.c1))) BETWEEN (((vt1.c0)<>(vt0.c0))) AND (((vt0.c1) NOTNULL))) DESC INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY TRIM(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))), ((((vt0.c1) NOT BETWEEN ('-)5Uyg4') AND (vt0.c1))) BETWEEN (((vt1.c0)!=(vt0.c0))) AND (((vt0.c1) NOTNULL))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE ('-296494888');
SELECT DISTINCT * FROM vt0, vt1 WHERE ((('-296494888')AND(((vt0.c0) IS FALSE))));
SELECT ALL * FROM vt0, vt1 WHERE ('-296494888');
SELECT DISTINCT * FROM vt0, vt1 WHERE ((('-296494888')AND(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0 WHERE ((((((+ (0.9594264507663449)))AND(CAST(vt0.c0 AS NUMERIC))))OR(((vt0.c0)==(vt0.c1))))) ORDER BY ((CASE WHEN vt0.c0 THEN '-1775143728' WHEN vt0.c1 THEN vt0.c0 ELSE 0.4491015114418123 END)<>(((vt0.c0) NOT BETWEEN ('6P,') AND (vt0.c0))))  NULLS FIRST, CASE ((((((((vt0.c1)AND('뫅')))OR(vt0.c0)))AND(0Xffffffffef69e520)))AND(0.014091669125693707))  WHEN ((vt0.c1) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN INSTR(vt0.c1, vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN 'L' THEN ((0.3564825244232739)<(vt0.c0)) END  NULLS LAST, 0.6955997771193166  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 END)LIKE(((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((+ (0.9594264507663449)))AND(CAST(vt0.c0 AS NUMERIC))))OR(((vt0.c0)=(vt0.c1)))))AND((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN (((0.15347431115232257)&(vt0.c1))))))) ORDER BY ((CASE WHEN vt0.c0 THEN '-1775143728' WHEN vt0.c1 THEN vt0.c0 ELSE 0.4491015114418123 END)<>(((vt0.c0) NOT BETWEEN ('6P,') AND (vt0.c0))))  NULLS FIRST, CASE ((((((((vt0.c1)AND('뫅')))OR(vt0.c0)))AND(0Xffffffffef69e520)))AND(0.014091669125693707))  WHEN ((vt0.c1) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN INSTR(vt0.c1, vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN 'L' THEN ((0.3564825244232739)<(vt0.c0)) END  NULLS LAST, 0.6955997771193166  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 END)LIKE(((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))) DESC LIMIT 0;
SELECT COUNT(*) FROM vt0 WHERE (CAST((+ (vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE (CAST((+ (vt0.c0)) AS NUMERIC)) INTERSECT SELECT COUNT(*) FROM vt0 WHERE (x'13b7' COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS BLOB)) ORDER BY (((((vt0.c0)OR(vt0.c1)), ((((vt0.c0)OR(-244010617)))AND(vt0.c1)), ((vt1.c0)*(vt1.c0))))<(((((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((x'1a', vt1.c0, vt0.c0))), ((vt0.c1)>>(vt0.c1)), vt0.c1))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(CAST(vt0.c1 AS NUMERIC) AS BLOB))AND(vt0.c0))) ORDER BY ((((((((((((((((vt0.c1)AND(vt1.c0)))OR('lMf')))AND(vt0.c1)))AND('686262591')))AND(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS NUMERIC))))AND(vt0.c1 COLLATE BINARY)))OR((~ (vt1.c0))))  NULLS LAST, (((((((vt0.c1, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, NULL, vt0.c0, vt0.c0))))OR(vt0.c1)))AND(vt0.c1 COLLATE BINARY)) LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS BLOB)) ORDER BY (((((vt0.c0)OR(vt0.c1)), ((((vt0.c0)OR(-244010617)))AND(vt0.c1)), ((vt1.c0)*(vt1.c0))))<(((((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((x'1a', vt1.c0, vt0.c0))), ((vt0.c1)>>(vt0.c1)), vt0.c1))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(CAST(vt0.c1 AS NUMERIC) AS BLOB))AND(vt0.c0))) ORDER BY ((((((((((((((((vt0.c1)AND(vt1.c0)))OR('lMf')))AND(vt0.c1)))AND('686262591')))AND(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS NUMERIC))))AND(vt0.c1 COLLATE BINARY)))OR((~ (vt1.c0))))  NULLS LAST, (((((((vt0.c1, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, NULL, vt0.c0, vt0.c0))))OR(vt0.c1)))AND(vt0.c1 COLLATE BINARY)) LIMIT 1;
SELECT ALL * FROM vt1 WHERE ((((((((- (vt1.c0)))OR(((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, NULL))))));
SELECT ALL * FROM vt1 WHERE ((((((((- (vt1.c0)))OR(((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, NULL)))))) LIMIT 0x3 INTERSECT SELECT ALL * FROM vt1 WHERE (((0.20837674223834834 COLLATE BINARY)<=(((vt1.c0) NOTNULL)))) LIMIT 3;
SELECT ALL * FROM vt1 WHERE ((((((((- (vt1.c0)))OR(((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, NULL))))));
SELECT ALL * FROM vt1 WHERE ((((((((- (vt1.c0)))OR(((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, NULL)))))) LIMIT 0x3 INTERSECT SELECT ALL * FROM vt1 WHERE (((0.20837674223834834 COLLATE BINARY)<=(((vt1.c0) NOTNULL)))) LIMIT 3;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((x'739cf1')IS(vt0.c1))) NOT BETWEEN (((0.3382094776155816) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((0.7850252719024235) NOT NULL)))) ORDER BY CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN ()) THEN (+ (vt0.c0)) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1419213546' END END ASC  NULLS LAST, x'e95572' DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'739cf1')IS(vt0.c1))) NOT BETWEEN (((0.3382094776155816) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((0.7850252719024235) NOT NULL)))) ORDER BY ((((vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0))) IN ((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS LAST, ((vt0.c1 COLLATE BINARY)/(((vt1.c0) NOTNULL))) ASC LIMIT 0x2;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c0)) BETWEEN ((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR('')), (+ (vt0.c1)))) AND ((NULL, LIKELIHOOD(DISTINCT vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0, vt0.c0)) BETWEEN ((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR('')), (+ (vt0.c1)))) AND ((NULL, LIKELIHOOD(DISTINCT vt0.c0, vt0.c0)))))AND(((LENGTH(vt0.c1))=(vt0.c0 COLLATE RTRIM))))) ORDER BY vt0.c1, CAST((+ (vt0.c1)) AS BLOB) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c0)) BETWEEN ((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR('')), (+ (vt0.c1)))) AND ((NULL, LIKELIHOOD(DISTINCT vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)))>=(x'e6')));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)))>=(x'e6'))) LIMIT 0X2;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)))>=(x'e6')));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)))>=(x'e6'))) LIMIT 0X2;
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY DATETIME(0.8086136764661435, TYPEOF(DISTINCT vt0.c0), (- (vt1.c0)))  NULLS LAST, json_insert(vt1.c0 COLLATE BINARY, NULL, (vt0.c1 IN ()))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY DATETIME(0.8086136764661435, TYPEOF(DISTINCT vt0.c0), (- (vt1.c0)))  NULLS LAST, json_insert(vt1.c0 COLLATE BINARY, NULL, (vt0.c1 IN ()))  NULLS LAST INTERSECT SELECT * FROM vt0, vt1 WHERE (((vt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY DATETIME(0.8086136764661435, TYPEOF(DISTINCT vt0.c0), (- (vt1.c0)))  NULLS LAST, json_insert(vt1.c0 COLLATE BINARY, NULL, (vt0.c1 IN ()))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY DATETIME(0.8086136764661435, TYPEOF(DISTINCT vt0.c0), (- (vt1.c0)))  NULLS LAST, json_insert(vt1.c0 COLLATE BINARY, NULL, (vt0.c1 IN ()))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY DATETIME(0.8086136764661435, TYPEOF(DISTINCT vt0.c0), (- (vt1.c0)))  NULLS LAST, json_insert(vt1.c0 COLLATE BINARY, NULL, (vt0.c1 IN ()))  NULLS LAST INTERSECT SELECT * FROM vt0, vt1 WHERE (((vt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY DATETIME(0.8086136764661435, TYPEOF(DISTINCT vt0.c0), (- (vt1.c0)))  NULLS LAST, json_insert(vt1.c0 COLLATE BINARY, NULL, (vt0.c1 IN ()))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (((vt1.c0)AND((((vt1.c0) NOTNULL) IN ())))) ORDER BY ((((vt1.c0)IS(vt1.c0))) IS FALSE)  NULLS LAST, (~ (((vt1.c0)<=(vt1.c0))))  NULLS LAST INTERSECT SELECT * FROM vt1 WHERE (LIKELIHOOD(DISTINCT (~ (vt1.c0)), vt1.c0)) ORDER BY ((((vt1.c0)IS(vt1.c0))) IS FALSE)  NULLS LAST, (~ (((vt1.c0)<=(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (((vt1.c0)AND((((vt1.c0) NOTNULL) IN ())))) ORDER BY ((((vt1.c0)IS(vt1.c0))) IS FALSE)  NULLS LAST, (~ (((vt1.c0)<=(vt1.c0))))  NULLS LAST INTERSECT SELECT * FROM vt1 WHERE (LIKELIHOOD(DISTINCT (~ (vt1.c0)), vt1.c0)) ORDER BY ((((vt1.c0)IS(vt1.c0))) IS FALSE)  NULLS LAST, (~ (((vt1.c0)<=(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CASE WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS REAL) END ASC  NULLS FIRST, vt1.c0 DESC  NULLS LAST, (NOT (((vt1.c0)/(vt1.c0)))) ASC  NULLS LAST LIMIT 2;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CASE WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS REAL) END ASC  NULLS FIRST, vt1.c0 DESC  NULLS LAST, (NOT (((vt1.c0)/(vt1.c0)))) ASC  NULLS LAST LIMIT 2;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY (~ (vt0.c0)) DESC  NULLS FIRST, 0xfffffffffd851ba3 ASC, vt0.c0;
SELECT ALL * FROM vt1, vt0 WHERE ('%5哤o') ORDER BY ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((('%5哤o')AND(0X724e1420))) ORDER BY ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((0.13764010356732503)OR(vt0.c1 COLLATE RTRIM)))OR((vt0.c0 IN ())))) ORDER BY ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ('%5哤o') ORDER BY ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((('%5哤o')AND(0X724e1420))) ORDER BY ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((0.13764010356732503)OR(vt0.c1 COLLATE RTRIM)))OR((vt0.c0 IN ())))) ORDER BY ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (highlight(((vt1.c0)IS(vt1.c0)), CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)+(vt1.c0)))) ORDER BY (+ (((vt1.c0) NOTNULL))) DESC, ' '  NULLS FIRST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((highlight(((vt1.c0)IS(vt1.c0)), CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)+(vt1.c0))))AND((((((vt1.c0)LIKE(x'80a65c'))))=((vt1.c0)))))) ORDER BY (+ (((vt1.c0) NOTNULL))) DESC, ' '  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((- ((('806581990') BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((((- ((('806581990') BETWEEN (vt1.c0) AND (vt1.c0)))))AND(UPPER(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY ((vt1.c0 COLLATE RTRIM)<(((vt1.c0) IS FALSE))) ASC, ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)  NULLS FIRST INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((TYPEOF(vt1.c0) IN (((vt1.c0)/(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM)<(((vt1.c0) IS FALSE))) ASC, ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)  NULLS FIRST;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE ((+ ((+ (vt0.c0))))) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c0) FROM vt1, vt0 WHERE ((((+ ((+ (vt0.c0)))))AND(LAST_INSERT_ROWID()))) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt1, vt0 WHERE (0.013664327751375271 COLLATE RTRIM) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM  NULLS FIRST LIMIT 0X2;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((vt0.c1)/(vt0.c1)) COLLATE RTRIM) ORDER BY json_array_length(((vt0.c1)|(0xffffffff85ccdb14)), ((vt0.c1) ISNULL)) ASC  NULLS FIRST, ((((vt0.c1, vt0.c0, '-529809639', vt0.c1)) NOT BETWEEN ((vt0.c0, '-1714981634', NULL, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0))) IN ((- (vt0.c1)), ((vt0.c0)LIKE(vt0.c1)), '1420409245')) ASC;
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((((vt0.c1)/(vt0.c1)) COLLATE RTRIM)AND((((x'bf')) NOT BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))))) ORDER BY ((vt0.c1) BETWEEN (NULL) AND (((vt0.c0)*(vt0.c0)))) DESC, ((('-16873888', vt0.c1 COLLATE BINARY, (((vt0.c1, vt0.c1, vt0.c1))<((vt0.c1, vt0.c1, vt0.c1)))))>(((~ (NULL)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c1) ISNULL)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((vt0.c1) NOTNULL)) AND ((- (NULL))))) ORDER BY ((vt0.c1) BETWEEN (NULL) AND (((vt0.c0)*(vt0.c0)))) DESC, ((('-16873888', vt0.c1 COLLATE BINARY, (((vt0.c1, vt0.c1, vt0.c1))<((vt0.c1, vt0.c1, vt0.c1)))))>(((~ (NULL)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c1) ISNULL)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT NULL) WHERE (vt0.c0) ORDER BY vt1.c0 ASC  NULLS LAST, (((((((((((((((((vt0.c0, ''))>=((NULL, vt0.c0))))OR((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0))))))AND((vt1.c0 IN (vt0.c0)))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR((vt0.c1 IN (vt0.c1)))))AND(vt0.c0)))OR(((vt1.c0)/(vt1.c0)))))AND(((vt1.c0) IS FALSE))) DESC;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT NULL) WHERE (((vt0.c0)AND(vt1.c0 COLLATE NOCASE))) ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN ('''q') AND (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT NULL) WHERE (vt0.c0) ORDER BY vt1.c0 ASC  NULLS LAST, (((((((((((((((((vt0.c0, ''))>=((NULL, vt0.c0))))OR((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0))))))AND((vt1.c0 IN (vt0.c0)))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR((vt0.c1 IN (vt0.c1)))))AND(vt0.c0)))OR(((vt1.c0)/(vt1.c0)))))AND(((vt1.c0) IS FALSE))) DESC;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT NULL) WHERE (((vt0.c0)AND(vt1.c0 COLLATE NOCASE))) ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN ('''q') AND (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST LIMIT 0;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END  WHEN 0.6289793888237688 THEN ((vt0.c0) NOT NULL) WHEN ',ậUNgR%' THEN vt0.c1 END WHERE (vt0.c1 COLLATE NOCASE) ORDER BY ((((vt0.c1) ISNULL))AND(NULL))  NULLS LAST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END  WHEN 0.6289793888237688 THEN ((vt0.c0) NOT NULL) WHEN ',ậUNgR%' THEN vt0.c1 END WHERE (vt0.c1 COLLATE NOCASE) ORDER BY x''  NULLS LAST LIMIT 0X4;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (+ (vt1.c0)) THEN 0.4624042878738436 WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) ELSE NULL END) ORDER BY ''  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN (+ (vt1.c0)) THEN 0.4624042878738436 WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) ELSE NULL END)AND('227627008'))) ORDER BY ''  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (+ (vt1.c0)) THEN 0.4624042878738436 WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) ELSE NULL END) ORDER BY ''  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN (+ (vt1.c0)) THEN 0.4624042878738436 WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) ELSE NULL END)AND('227627008'))) ORDER BY ''  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1)AND(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0))) NOTNULL)))) ORDER BY ((vt1.c0 COLLATE BINARY)<>(vt0.c0)) ASC  NULLS LAST, ((((~ (vt0.c1)), ((vt1.c0) ISNULL), CASE vt0.c0  WHEN 'PT kJzx儠f' THEN vt1.c0 END))>=((vt0.c0, ((vt1.c0) NOT NULL), ((vt1.c0) IS FALSE)))) ASC  NULLS FIRST, ((CASE WHEN '3' THEN vt1.c0 END) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0)&('-35870832'))))  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((vt1.c0 COLLATE BINARY)<>(vt0.c0)) ASC  NULLS LAST, ((((~ (vt0.c1)), ((vt1.c0) ISNULL), CASE vt0.c0  WHEN 'PT kJzx儠f' THEN vt1.c0 END))>=((vt0.c0, ((vt1.c0) NOT NULL), ((vt1.c0) IS FALSE)))) ASC  NULLS FIRST, ((CASE WHEN '3' THEN vt1.c0 END) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0)&('-35870832'))))  NULLS LAST;
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)OR(((vt0.c1)*(vt0.c0)))))OR((NOT (vt0.c1)))))AND(vt0.c1)))AND(((((((((((0.452788068634838)AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt1.c0)/(vt0.c0)))) AND ((STRFTIME(vt0.c0, vt0.c1, vt0.c0, vt0.c1))))  NULLS FIRST, vt1.c0 DESC  NULLS LAST, 0.4435661564307881 ASC  NULLS LAST;
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)OR(((vt0.c1)*(vt0.c0)))))OR((NOT (vt0.c1)))))AND(vt0.c1)))AND(((((((((((0.452788068634838)AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt1.c0)/(vt0.c0)))) AND ((STRFTIME(vt0.c0, vt0.c1, vt0.c0, vt0.c1))))  NULLS FIRST, vt1.c0 DESC  NULLS LAST, 0.4435661564307881 ASC  NULLS LAST LIMIT 0x2 INTERSECT SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt1.c0)/(vt0.c0)))) AND ((STRFTIME(vt0.c0, vt0.c1, vt0.c0, vt0.c1))))  NULLS FIRST, vt1.c0 DESC  NULLS LAST, 0.4435661564307881 ASC  NULLS LAST LIMIT 0x2;
SELECT MAX(vt0.c1) FROM vt0 INNER JOIN vt1 ON (((vt1.c0)<<(vt0.c1)) IN ()) WHERE (((((vt1.c0)>>(vt0.c0))) NOT NULL));
SELECT DISTINCT MAX(vt0.c1) FROM vt0 INNER JOIN vt1 ON (((vt1.c0)<<(vt0.c1)) IN ()) WHERE (((((vt1.c0)>>(vt0.c0))) NOT NULL)) ORDER BY ((CAST(vt0.c0 AS REAL)) IS FALSE) INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 INNER JOIN vt1 ON (((vt1.c0)<<(vt0.c1)) IN ()) WHERE (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS REAL)) IS FALSE);
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c1)AND((((((NULL) BETWEEN (vt0.c0) AND (vt0.c1))))>=(((vt0.c1 IN ()))))))) ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((NOT ((~ (vt0.c1))))) ORDER BY ((((vt0.c0, '1031127186')) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))) IN ((((vt0.c1))<=((vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE ((NOT ((~ (vt0.c1))))) ORDER BY ((((vt0.c0, '1031127186')) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))) IN ((((vt0.c1))<=((vt0.c1))))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((0.4584687223117231 IN ()))IS(vt0.c1 COLLATE RTRIM))) ORDER BY ((((vt0.c0, '1031127186')) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))) IN ((((vt0.c1))<=((vt0.c1)))));
SELECT * FROM vt0 WHERE ((NOT ((~ (vt0.c1))))) ORDER BY ((((vt0.c0, '1031127186')) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))) IN ((((vt0.c1))<=((vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE ((NOT ((~ (vt0.c1))))) ORDER BY ((((vt0.c0, '1031127186')) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))) IN ((((vt0.c1))<=((vt0.c1))))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((0.4584687223117231 IN ()))IS(vt0.c1 COLLATE RTRIM))) ORDER BY ((((vt0.c0, '1031127186')) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1))) IN ((((vt0.c1))<=((vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0)))))) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c1 IN (vt0.c0)) ELSE 'Rj' END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0))))))AND(((((vt0.c0) IS FALSE))&(vt0.c0 COLLATE RTRIM))))) ORDER BY ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, 'Z' ASC, (vt0.c0 COLLATE NOCASE IN (IFNULL(DISTINCT vt0.c1, vt0.c1), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) LIMIT 0X1 INTERSECT SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((('Y')>>(vt0.c1)))) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))) ORDER BY ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, 'Z' ASC, (vt0.c0 COLLATE NOCASE IN (IFNULL(DISTINCT vt0.c1, vt0.c1), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) LIMIT 0X1;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0)))))) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c1 IN (vt0.c0)) ELSE 'Rj' END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0))))))AND(((((vt0.c0) IS FALSE))&(vt0.c0 COLLATE RTRIM))))) ORDER BY ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, 'Z' ASC, (vt0.c0 COLLATE NOCASE IN (IFNULL(DISTINCT vt0.c1, vt0.c1), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) LIMIT 0X1 INTERSECT SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((('Y')>>(vt0.c1)))) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))) ORDER BY ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, 'Z' ASC, (vt0.c0 COLLATE NOCASE IN (IFNULL(DISTINCT vt0.c1, vt0.c1), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) LIMIT 0X1;
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE (-1.692152891E9);
SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (((-1.692152891E9)AND(((0.4631774099008845 IN (vt0.c0, vt0.c0)) IN (CASE 0.32432968556100317  WHEN vt0.c1 THEN vt1.c0 END))))) ORDER BY (NOT (NULL)) COLLATE NOCASE DESC  NULLS LAST, (- (vt0.c1)) ASC  NULLS LAST INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (((CASE 0x79db261b  WHEN vt0.c0 THEN vt0.c1 END)GLOB(vt0.c0 COLLATE NOCASE))) ORDER BY (NOT (NULL)) COLLATE NOCASE DESC  NULLS LAST, (- (vt0.c1)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c1, vt0.c1))>((vt0.c1, vt0.c1))))));
SELECT * FROM vt0 WHERE ((- ((((vt0.c1, vt0.c1))>((vt0.c1, vt0.c1)))))) LIMIT 1;
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c1, vt0.c1))>((vt0.c1, vt0.c1))))));
SELECT * FROM vt0 WHERE ((- ((((vt0.c1, vt0.c1))>((vt0.c1, vt0.c1)))))) LIMIT 1;
SELECT COUNT(*) FROM vt1 WHERE ((~ (0.18170487084531461)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((~ (0.18170487084531461)))AND(vt1.c0))) ORDER BY (~ (TRIM(vt1.c0, vt1.c0)))  NULLS FIRST, ((((((((NULL)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(HEX(DISTINCT 0.4351825348290299))) ASC, ((x'2062' COLLATE BINARY)<>(((vt1.c0) NOTNULL))) LIMIT 1;
SELECT MAX(vt1.c0) FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))) AND ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY ((vt1.c0)%(((vt0.c0) NOT NULL))) ASC;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))) AND ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY ((vt1.c0)%(((vt0.c0) NOT NULL))) ASC;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)<=((((vt1.c0))>=((vt1.c0))))));
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)<=((((vt1.c0))>((vt1.c0)))))) ORDER BY (((CASE WHEN x'89' THEN vt1.c0 END))>((((vt1.c0)LIKE(vt1.c0))))), (~ (vt1.c0)) DESC;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)<=((((vt1.c0))>=((vt1.c0))))));
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)<=((((vt1.c0))>((vt1.c0)))))) ORDER BY (((CASE WHEN x'89' THEN vt1.c0 END))>((((vt1.c0)LIKE(vt1.c0))))), (~ (vt1.c0)) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((('') NOTNULL)) ORDER BY vt0.c0 ASC, CAST((vt0.c1 IN ()) AS INTEGER), CAST((((vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0))) AS TEXT)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((('') NOTNULL))AND(vt0.c1))) ORDER BY vt0.c0 ASC, CAST((vt0.c1 IN ()) AS INTEGER), CAST((((vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0))) AS TEXT)  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1, '1901721135', vt0.c0))<=((vt0.c1, vt0.c1, vt0.c1))) AS INTEGER)) ORDER BY vt0.c0 ASC, CAST((vt0.c1 IN ()) AS INTEGER), CAST((((vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0))) AS TEXT)  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (TIME(ABS(DISTINCT vt0.c0), vt0.c0, ((vt1.c0) IS FALSE)));
SELECT DISTINCT * FROM vt0, vt1 WHERE (TIME(ABS(DISTINCT vt0.c0), vt0.c0, ((vt1.c0) IS FALSE))) ORDER BY (((('iLS') NOT BETWEEN (vt0.c1) AND (NULL))) NOTNULL), ((((((((vt1.c0)=(vt0.c0)))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE x'' END)))OR((- (vt0.c1)))))AND((+ (NULL))))  NULLS LAST LIMIT 0x0;
SELECT * FROM vt0, vt1 WHERE (TIME(ABS(DISTINCT vt0.c0), vt0.c0, ((vt1.c0) IS FALSE)));
SELECT DISTINCT * FROM vt0, vt1 WHERE (TIME(ABS(DISTINCT vt0.c0), vt0.c0, ((vt1.c0) IS FALSE))) ORDER BY (((('iLS') NOT BETWEEN (vt0.c1) AND (NULL))) NOTNULL), ((((((((vt1.c0)=(vt0.c0)))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE x'' END)))OR((- (vt0.c1)))))AND((+ (NULL))))  NULLS LAST LIMIT 0x0;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS REAL));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS REAL));
SELECT * FROM vt1 WHERE (TYPEOF(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, vt1.c0))) ORDER BY '먧QUu-h\'  NULLS FIRST, 0.16412848166477034 DESC, CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC)  NULLS LAST;
SELECT * FROM vt1 WHERE (TYPEOF(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, vt1.c0))) ORDER BY ((((vt1.c0)/(vt1.c0)))&(((vt1.c0)!=(vt1.c0)))), (+ ((((vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0))))) LIMIT 0X1;
SELECT * FROM vt1 WHERE (TYPEOF(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, vt1.c0))) ORDER BY '먧QUu-h\'  NULLS FIRST, 0.16412848166477034 DESC, CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC)  NULLS LAST;
SELECT * FROM vt0 WHERE ('1416783903');
SELECT ALL * FROM vt0 WHERE ((('1416783903')AND((((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))));
SELECT * FROM vt0 WHERE ('1416783903');
SELECT ALL * FROM vt0 WHERE ((('1416783903')AND((((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))));
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE ((((((vt0.c0) NOT NULL)))<((TRIM(-5.87666667E8))))) ORDER BY (NOT (CAST(vt1.c0 AS INTEGER))), ((ABS(vt0.c1)) NOTNULL) DESC;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE ((((((vt0.c0) NOT NULL)))<((TRIM(-5.87666667E8))))) ORDER BY (NOT (CAST(vt1.c0 AS INTEGER))), ((ABS(vt0.c1)) NOTNULL) DESC;
SELECT * FROM vt1 WHERE (((((((vt1.c0) ISNULL))AND((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt1.c0)IS(0.8795648975519511)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE -587666667 END END ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (((((((vt1.c0) ISNULL))AND((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)  NULLS FIRST, vt1.c0 DESC LIMIT 1;
SELECT * FROM vt1 WHERE (((((((vt1.c0) ISNULL))AND((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt1.c0)IS(0.8795648975519511)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE -587666667 END END ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (((((((vt1.c0) ISNULL))AND((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)  NULLS FIRST, vt1.c0 DESC LIMIT 1;
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1 COLLATE RTRIM))<((((vt0.c1)GLOB(vt0.c0))))));
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c1 COLLATE RTRIM))<((((vt0.c1)GLOB(vt0.c0))))))AND((((- (vt0.c1)))*(((vt0.c1)>=(vt0.c1))))))) LIMIT 1 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) IS FALSE)) LIMIT 0X1;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1 COLLATE RTRIM))<((((vt0.c1)GLOB(vt0.c0))))));
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c1 COLLATE RTRIM))<((((vt0.c1)GLOB(vt0.c0))))))AND((((- (vt0.c1)))*(((vt0.c1)>=(vt0.c1))))))) LIMIT 1 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) IS FALSE)) LIMIT 0X1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) ISNULL))>((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (((((((((('1290000377')AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE  NULLS FIRST, (vt1.c0 COLLATE RTRIM IN ());
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) ISNULL))>((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (((((((((('1290000377')AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE  NULLS FIRST, (vt1.c0 COLLATE RTRIM IN ()) INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0)>(vt1.c0)) COLLATE NOCASE) ORDER BY (((((((((('1290000377')AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE  NULLS FIRST, (vt1.c0 COLLATE RTRIM IN ());
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) ISNULL))>((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (((((((((('1290000377')AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE  NULLS FIRST, (vt1.c0 COLLATE RTRIM IN ());
SELECT ALL * FROM vt1 WHERE (CASE LAST_INSERT_ROWID()  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)>(vt1.c0)) WHEN vt1.c0 THEN vt1.c0 END);
SELECT DISTINCT * FROM vt1 WHERE (((CASE LAST_INSERT_ROWID()  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)>(vt1.c0)) WHEN vt1.c0 THEN vt1.c0 END)AND((((vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)), vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL)  NULLS LAST LIMIT 0x4;
SELECT ALL * FROM vt1 WHERE (CASE LAST_INSERT_ROWID()  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)>(vt1.c0)) WHEN vt1.c0 THEN vt1.c0 END);
SELECT DISTINCT * FROM vt1 WHERE (((CASE LAST_INSERT_ROWID()  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)>(vt1.c0)) WHEN vt1.c0 THEN vt1.c0 END)AND((((vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)), vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL)  NULLS LAST LIMIT 0x4;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0) IS TRUE) IN ()));
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY NULL DESC  NULLS LAST, (((0.42920897145441983, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt1.c0, vt0.c0))) COLLATE BINARY  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY NULL DESC  NULLS LAST, (((0.42920897145441983, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt1.c0, vt0.c0))) COLLATE BINARY  NULLS LAST LIMIT 0x0;
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE ((((vt0.c0 COLLATE NOCASE, (('-1528608902')IS(x''))))>((CAST(vt0.c1 AS NUMERIC), ((vt1.c0)||(vt0.c1))))));
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE ((((((vt0.c0 COLLATE NOCASE, (('-1528608902')IS(x''))))>((CAST(vt0.c1 AS NUMERIC), ((vt1.c0)||(vt0.c1))))))AND((- (vt0.c1)) COLLATE RTRIM))) ORDER BY ((((((((((0.03808741176236763)OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))<((NOT (vt1.c0))))  NULLS LAST LIMIT 3;
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt1.c0, '-1943074248'))) AND (((((vt1.c0)OR(',')))AND(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt1.c0, '-1943074248'))) AND (((((vt1.c0)OR(',')))AND(vt1.c0))))) ORDER BY LOWER(DISTINCT vt1.c0) COLLATE RTRIM DESC  NULLS LAST, vt1.c0 ASC, (- (vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt1.c0, '-1943074248'))) AND (((((vt1.c0)OR(',')))AND(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt1.c0, '-1943074248'))) AND (((((vt1.c0)OR(',')))AND(vt1.c0))))) ORDER BY LOWER(DISTINCT vt1.c0) COLLATE RTRIM DESC  NULLS LAST, vt1.c0 ASC, (- (vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)+(0.5553912992159268)))!=(CASE WHEN vt1.c0 THEN vt0.c0 END)));
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)+(0.5553912992159268)))<(CASE WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY ((((vt1.c0)!=(vt0.c0))) IS FALSE)  NULLS LAST, (((((vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1)) AND ((vt1.c0, vt0.c1))))<>((vt0.c0 IN (vt1.c0)))) DESC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS NUMERIC))>(vt0.c1 COLLATE RTRIM))) ORDER BY ((((vt1.c0)<>(vt0.c0))) IS FALSE)  NULLS LAST, (((((vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1)) AND ((vt1.c0, vt0.c1))))<>((vt0.c0 IN (vt1.c0)))) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt1 WHERE (0Xffffffff880aea26) ORDER BY CAST((((vt1.c0))<>((vt1.c0))) AS REAL) ASC;
SELECT * FROM vt1 WHERE (((-2012550618)AND(((CAST(vt1.c0 AS TEXT)) IS FALSE)))) ORDER BY CAST((((vt1.c0))!=((vt1.c0))) AS REAL) ASC;
SELECT ALL * FROM vt1 WHERE (0Xffffffff880aea26) ORDER BY CAST((((vt1.c0))<>((vt1.c0))) AS REAL) ASC;
SELECT * FROM vt1 WHERE (((-2012550618)AND(((CAST(vt1.c0 AS TEXT)) IS FALSE)))) ORDER BY CAST((((vt1.c0))!=((vt1.c0))) AS REAL) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN (x''))) ORDER BY (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))=((UNLIKELY(vt1.c0), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND('-389712618')))AND(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '311380172' END)))  NULLS LAST, ((((vt1.c0) IS FALSE))<(0x1581b63d));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0) NOTNULL) IN (x'')))AND(((vt1.c0)<=(((((((vt1.c0)AND(vt1.c0)))OR(NULL)))AND('eLC1'))))))) ORDER BY HEX(0.8860472225418781) ASC, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS FIRST LIMIT 0x1 INTERSECT SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) ORDER BY HEX(0.8860472225418781) ASC, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY x'58ad'  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (x'') ORDER BY x'58ad'  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY x'58ad'  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (x'') ORDER BY x'58ad'  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((((((((((((TRIM(vt1.c0))OR(((('63666834', vt1.c0))>=((vt1.c0, vt1.c0))))))OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) NOTNULL))))AND((+ (vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS NUMERIC))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((((TRIM(vt1.c0))OR(((('63666834', vt1.c0))>=((vt1.c0, vt1.c0))))))OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) NOTNULL))))AND((+ (vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS NUMERIC))));
SELECT * FROM vt1 WHERE (((((((((((((((TRIM(vt1.c0))OR(((('63666834', vt1.c0))>=((vt1.c0, vt1.c0))))))OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) NOTNULL))))AND((+ (vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS NUMERIC))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((((TRIM(vt1.c0))OR(((('63666834', vt1.c0))>=((vt1.c0, vt1.c0))))))OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) NOTNULL))))AND((+ (vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL MIN(vt0.c0) FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c1 AS BLOB) WHERE (json_array_length(LAST_INSERT_ROWID(), (+ (vt0.c0))));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c1 AS BLOB) WHERE (json_array_length(LAST_INSERT_ROWID(), (+ (vt0.c0)))) LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c1 AS BLOB) WHERE ((~ (vt0.c1)) COLLATE NOCASE) LIMIT 0x0;
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'2a' END)&(('1031127186' IN (vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'2a' END)&(('1031127186' IN (vt1.c0))))) ORDER BY (+ (0.29586500754706857 COLLATE NOCASE)), x''  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((+ (vt1.c0))) ORDER BY (+ (0.29586500754706857 COLLATE NOCASE)), x''  NULLS LAST LIMIT 0x1;
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'2a' END)&(('1031127186' IN (vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'2a' END)&(('1031127186' IN (vt1.c0))))) ORDER BY (+ (0.29586500754706857 COLLATE NOCASE)), x''  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((+ (vt1.c0))) ORDER BY (+ (0.29586500754706857 COLLATE NOCASE)), x''  NULLS LAST LIMIT 0x1;
SELECT * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS TRUE)) ORDER BY ((vt0.c0)==(vt0.c0)) COLLATE RTRIM, ((NULL) BETWEEN (vt0.c1 COLLATE BINARY) AND ((vt0.c1 IN (vt0.c1)))), (~ ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS TRUE))AND((((vt0.c0 IN ()))<((+ (vt0.c1))))))) ORDER BY (((vt0.c1 IN ()))<=(CAST(vt0.c1 AS REAL)))  NULLS LAST, ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))|(x'4613bf'))  NULLS FIRST LIMIT 1;
SELECT * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS TRUE)) ORDER BY ((vt0.c0)==(vt0.c0)) COLLATE RTRIM, ((NULL) BETWEEN (vt0.c1 COLLATE BINARY) AND ((vt0.c1 IN (vt0.c1)))), (~ ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS TRUE))AND((((vt0.c0 IN ()))<((+ (vt0.c1))))))) ORDER BY (((vt0.c1 IN ()))<=(CAST(vt0.c1 AS REAL)))  NULLS LAST, ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))|(x'4613bf'))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) ORDER BY ((((((0.2516896780247646)AND(vt1.c0)))OR(vt1.c0)))<<(((vt1.c0)OR(vt1.c0)))), (((vt1.c0, vt1.c0)) NOT BETWEEN ((((x'ab')%(vt1.c0)), ((vt1.c0)IS(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)), ((vt1.c0)GLOB(vt1.c0))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL))AND(MAX(CAST(x'' AS BLOB), vt1.c0)))) ORDER BY ((((((0.2516896780247646)AND(vt1.c0)))OR(vt1.c0)))<<(((vt1.c0)OR(vt1.c0)))), (((vt1.c0, vt1.c0)) NOT BETWEEN ((((x'ab')%(vt1.c0)), ((vt1.c0)IS(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)), ((vt1.c0)GLOB(vt1.c0))))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 IN ())) IS TRUE)) ORDER BY ((((((0.2516896780247646)AND(vt1.c0)))OR(vt1.c0)))<<(((vt1.c0)OR(vt1.c0)))), (((vt1.c0, vt1.c0)) NOT BETWEEN ((((x'ab')%(vt1.c0)), ((vt1.c0)IS(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)), ((vt1.c0)GLOB(vt1.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) ORDER BY ((((((0.2516896780247646)AND(vt1.c0)))OR(vt1.c0)))<<(((vt1.c0)OR(vt1.c0)))), (((vt1.c0, vt1.c0)) NOT BETWEEN ((((x'ab')%(vt1.c0)), ((vt1.c0)IS(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)), ((vt1.c0)GLOB(vt1.c0))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL))AND(MAX(CAST(x'' AS BLOB), vt1.c0)))) ORDER BY ((((((0.2516896780247646)AND(vt1.c0)))OR(vt1.c0)))<<(((vt1.c0)OR(vt1.c0)))), (((vt1.c0, vt1.c0)) NOT BETWEEN ((((x'ab')%(vt1.c0)), ((vt1.c0)IS(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)), ((vt1.c0)GLOB(vt1.c0))))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 IN ())) IS TRUE)) ORDER BY ((((((0.2516896780247646)AND(vt1.c0)))OR(vt1.c0)))<<(((vt1.c0)OR(vt1.c0)))), (((vt1.c0, vt1.c0)) NOT BETWEEN ((((x'ab')%(vt1.c0)), ((vt1.c0)IS(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)), ((vt1.c0)GLOB(vt1.c0))))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((((vt1.c0)AND(((vt1.c0)-(vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(((vt1.c0)-(vt1.c0)))))OR((vt1.c0 IN (vt1.c0))))) INTERSECT SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE NOCASE);
SELECT * FROM vt1 WHERE (((((vt1.c0)AND(((vt1.c0)-(vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(((vt1.c0)-(vt1.c0)))))OR((vt1.c0 IN (vt1.c0))))) INTERSECT SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE NOCASE);
SELECT MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1)=(vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((((vt0.c1)*(x'')), (((x'11b40d', vt0.c1, vt0.c0, NULL))>=((0.7423965720344543, vt0.c1, x'', vt0.c0))), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1)==(vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((((vt0.c1)*(x'')), (((x'11b40d', vt0.c1, vt0.c0, NULL))>=((0.7423965720344543, vt0.c1, x'', vt0.c0))), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY vt0.c0 DESC  NULLS LAST INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((+ (vt0.c0)))OR(CAST(vt0.c1 AS BLOB))))OR(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))) ORDER BY (((- (vt0.c0))) NOT NULL);
SELECT DISTINCT * FROM vt0 WHERE ((((((((+ (vt0.c0)))OR(CAST(vt0.c1 AS BLOB))))OR(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))))AND((- (((vt0.c0)*(vt0.c1))))))) ORDER BY (((- (vt0.c0))) NOT NULL) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (x'79') AND (vt0.c1)) AS TEXT)) ORDER BY (((- (vt0.c0))) NOT NULL) LIMIT 0;
SELECT * FROM vt0 WHERE ((((((+ (vt0.c0)))OR(CAST(vt0.c1 AS BLOB))))OR(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))) ORDER BY (((- (vt0.c0))) NOT NULL);
SELECT DISTINCT * FROM vt0 WHERE ((((((((+ (vt0.c0)))OR(CAST(vt0.c1 AS BLOB))))OR(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))))AND((- (((vt0.c0)*(vt0.c1))))))) ORDER BY (((- (vt0.c0))) NOT NULL) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (x'79') AND (vt0.c1)) AS TEXT)) ORDER BY (((- (vt0.c0))) NOT NULL) LIMIT 0;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (GLOB(CASE WHEN 0.373412988114591 THEN vt0.c0 END, ((vt0.c0) IS TRUE)));
SELECT DISTINCT COUNT(*) FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE (((GLOB(CASE WHEN 0.373412988114591 THEN vt0.c0 END, ((vt0.c0) IS TRUE)))AND(1950523410 COLLATE NOCASE))) INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE (((json_type(vt0.c1))||('(U)()')));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))/(vt1.c0))) ORDER BY ((vt1.c0) NOT BETWEEN ((vt1.c0 IN ())) AND (CAST(vt1.c0 AS REAL))) DESC, ((((CAST(vt1.c0 AS NUMERIC))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))/(vt1.c0)))AND(0.7666433917836637))) ORDER BY CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN 0.7794918853056628 THEN ((vt1.c0) NOTNULL) END DESC, ((x'6af768') ISNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, 0.4839198471789513, vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS BLOB), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c0) IS TRUE), json_quote(vt1.c0), (vt1.c0 IN (vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, 0.4839198471789513, vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS BLOB), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c0) IS TRUE), json_quote(vt1.c0), (vt1.c0 IN (vt1.c0)))))) LIMIT 3;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c1)>('1258981454')) THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c0) IS TRUE) END);
SELECT DISTINCT * FROM vt0 WHERE (((CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c1)>('1258981454')) THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c0) IS TRUE) END)AND(vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1)/(vt0.c0)), ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(0.5548116950632626)))OR(vt0.c1)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE BINARY, vt0.c0, vt0.c0))) ASC, CASE WHEN ((((((((vt0.c0)OR(0.9391897627295943)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) THEN rtreenode(vt0.c0, vt0.c1) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c1 AS TEXT) WHEN NULL THEN NULLIF(DISTINCT vt0.c1, vt0.c0) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOT NULL) END INTERSECT SELECT DISTINCT * FROM vt0 WHERE (x'54b1') ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1)/(vt0.c0)), ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(0.5548116950632626)))OR(vt0.c1)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE BINARY, vt0.c0, vt0.c0))) ASC, CASE WHEN ((((((((vt0.c0)OR(0.9391897627295943)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) THEN rtreenode(vt0.c0, vt0.c1) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c1 AS TEXT) WHEN NULL THEN NULLIF(DISTINCT vt0.c1, vt0.c0) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOT NULL) END;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c1)>('1258981454')) THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c0) IS TRUE) END);
SELECT DISTINCT * FROM vt0 WHERE (((CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c1)>('1258981454')) THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c0) IS TRUE) END)AND(vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1)/(vt0.c0)), ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(0.5548116950632626)))OR(vt0.c1)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE BINARY, vt0.c0, vt0.c0))) ASC, CASE WHEN ((((((((vt0.c0)OR(0.9391897627295943)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) THEN rtreenode(vt0.c0, vt0.c1) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c1 AS TEXT) WHEN NULL THEN NULLIF(DISTINCT vt0.c1, vt0.c0) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOT NULL) END INTERSECT SELECT DISTINCT * FROM vt0 WHERE (x'54b1') ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1)/(vt0.c0)), ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(0.5548116950632626)))OR(vt0.c1)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE BINARY, vt0.c0, vt0.c0))) ASC, CASE WHEN ((((((((vt0.c0)OR(0.9391897627295943)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) THEN rtreenode(vt0.c0, vt0.c1) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c1 AS TEXT) WHEN NULL THEN NULLIF(DISTINCT vt0.c1, vt0.c0) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOT NULL) END;
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE ((CAST(vt0.c0 AS REAL) IN (((vt0.c0)-(vt0.c0))))) ORDER BY '
巩[/' DESC  NULLS FIRST, ((- (vt0.c0)) IN (((0.6549450423695943)+('686262591')), (NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE ((CAST(vt0.c0 AS REAL) IN (((vt0.c0)-(vt0.c0))))) ORDER BY '
巩[/' DESC  NULLS FIRST, ((- (vt0.c0)) IN (((0.6549450423695943)+('686262591')), (NOT (vt0.c0)))) ASC  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (vt1.c0) AND (((vt0.c1) IS FALSE))) WHERE (((((((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR('.+	F7')))OR(CAST(vt0.c0 AS BLOB))))AND(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0))))) ORDER BY ((vt0.c1) IS FALSE) COLLATE NOCASE ASC  NULLS FIRST, LIKELY(NULL COLLATE BINARY) ASC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT NULL))) AND (('1693756632')));
SELECT DISTINCT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (vt1.c0) AND (((vt0.c1) IS FALSE))) WHERE (((((((((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR('.+	F7')))OR(CAST(vt0.c0 AS BLOB))))AND(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))))AND((+ (((vt0.c0)<>(vt1.c0))))))) ORDER BY ((vt0.c1) IS FALSE) COLLATE NOCASE ASC  NULLS FIRST, LIKELY(NULL COLLATE BINARY) ASC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT NULL))) AND (('1693756632')));
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE ((vt1.c0 IN (vt0.c1, vt1.c0)) COLLATE RTRIM) ORDER BY IFNULL(((vt1.c0)%(vt0.c1)), ('Ay(ZjF' IN (vt1.c0)))  NULLS FIRST, (((((NOT (vt0.c1)))OR(UNLIKELY(DISTINCT vt1.c0))))AND(((vt1.c0) ISNULL)));
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE ((((vt1.c0 IN (vt0.c1, vt1.c0)) COLLATE RTRIM)AND(CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0)/(vt0.c0)) THEN ((vt1.c0) NOTNULL) WHEN highlight(vt0.c0, vt1.c0, vt0.c1, vt1.c0) THEN ((((((((x'')AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) ELSE (((vt1.c0, vt1.c0, -3.5870832E7, vt1.c0))>((vt1.c0, vt0.c0, vt1.c0, vt0.c1))) END))) ORDER BY IFNULL(((vt1.c0)%(vt0.c1)), ('Ay(ZjF' IN (vt1.c0)))  NULLS FIRST, (((((NOT (vt0.c1)))OR(UNLIKELY(DISTINCT vt1.c0))))AND(((vt1.c0) ISNULL)));
SELECT ALL MAX(vt0.c1) FROM vt0, vt1 WHERE (UPPER(UNICODE(NULL))) ORDER BY (((vt0.c1) NOT BETWEEN (vt1.c0) AND (x'676542')) IN (((vt0.c0)>>(vt1.c0)))) DESC  NULLS FIRST;
SELECT MAX(vt0.c1) FROM vt0, vt1 WHERE (UPPER(UNICODE(NULL))) ORDER BY (((vt0.c1) NOT BETWEEN (vt1.c0) AND (x'676542')) IN (((vt0.c0)>>(vt1.c0)))) DESC  NULLS FIRST INTERSECT SELECT ALL MAX(vt0.c1) FROM vt0, vt1 WHERE (((((vt1.c0) ISNULL))<(json_patch(vt0.c1, vt0.c1)))) ORDER BY (((vt0.c1) NOT BETWEEN (vt1.c0) AND (x'676542')) IN (((vt0.c0)>>(vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE ('981740771') ORDER BY ((vt1.c0)-(vt0.c1)) COLLATE BINARY, ((((((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(0.4304039304566676)))AND(x'37')))AND(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE;
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE ('981740771') ORDER BY ((vt1.c0)==(vt0.c0)) COLLATE BINARY  NULLS LAST, (vt0.c1 IN (vt1.c0, vt1.c0)) COLLATE BINARY  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0)))<((('
AiCHn^*') NOTNULL)))) ORDER BY ((((vt1.c0)+(vt1.c0))) NOT NULL), (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((1489150588)-(2058009091))) BETWEEN (vt1.c0) AND (((vt1.c0)&(vt1.c0))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0)))<((('
AiCHn^*') NOTNULL)))) ORDER BY CAST((NOT (vt1.c0)) AS NUMERIC) ASC  NULLS LAST, NULL  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0)))<((('
AiCHn^*') NOTNULL)))) ORDER BY ((((vt1.c0)+(vt1.c0))) NOT NULL), (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((1489150588)-(2058009091))) BETWEEN (vt1.c0) AND (((vt1.c0)&(vt1.c0))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0)))<((('
AiCHn^*') NOTNULL)))) ORDER BY CAST((NOT (vt1.c0)) AS NUMERIC) ASC  NULLS LAST, NULL  NULLS FIRST LIMIT 0X1;
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0) NOT NULL)))<=((((vt0.c0)>=(vt1.c0))))));
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0) NOT NULL)))==((((vt0.c0)==(vt1.c0)))))) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, ((((vt0.c0)<(vt1.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (x'c5e5d5') AND (vt1.c0))) AND (((vt0.c1)-(vt0.c1))))  NULLS FIRST INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (CASE ABS(vt0.c1)  WHEN LIKE(vt0.c1, vt1.c0, 'T') THEN ((vt1.c0) NOT NULL) END) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, ((((vt0.c0)<(vt1.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (x'c5e5d5') AND (vt1.c0))) AND (((vt0.c1)-(vt0.c1))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0) NOT NULL)))<=((((vt0.c0)>=(vt1.c0))))));
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0) NOT NULL)))==((((vt0.c0)==(vt1.c0)))))) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, ((((vt0.c0)<(vt1.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (x'c5e5d5') AND (vt1.c0))) AND (((vt0.c1)-(vt0.c1))))  NULLS FIRST INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (CASE ABS(vt0.c1)  WHEN LIKE(vt0.c1, vt1.c0, 'T') THEN ((vt1.c0) NOT NULL) END) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, ((((vt0.c0)<(vt1.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (x'c5e5d5') AND (vt1.c0))) AND (((vt0.c1)-(vt0.c1))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (NULL) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (NULL) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY (vt0.c0 IN (((vt0.c0)|(vt0.c1))))  NULLS LAST, ((vt0.c0)|((((vt0.c0, vt0.c0, vt0.c0))==((NULL, vt0.c0, vt0.c1))))) ASC LIMIT 1;
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (NULL) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (NULL) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY (vt0.c0 IN (((vt0.c0)|(vt0.c1))))  NULLS LAST, ((vt0.c0)|((((vt0.c0, vt0.c0, vt0.c0))==((NULL, vt0.c0, vt0.c1))))) ASC LIMIT 1;
SELECT MAX(vt1.c0) FROM vt1 WHERE (PRINTF(CASE vt1.c0  WHEN '櫕铨' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) ORDER BY (((((vt1.c0)<>(NULL)), vt1.c0 COLLATE BINARY, (NOT (vt1.c0))))<>((0Xffffffff8d457f2d, ((((((((((-2.96494888E8)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), vt1.c0))) ASC, (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((('RV뜴?eIlO') NOT NULL)))) ASC  NULLS FIRST, ABS(DISTINCT (~ (vt1.c0))) ASC;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (PRINTF(CASE vt1.c0  WHEN '櫕铨' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))+(((0Xffffffffbeda4014) NOT NULL))) ASC, ((((vt1.c0)*(vt1.c0)))LIKE(((vt1.c0)GLOB(vt1.c0)))) LIMIT 3 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))+(((-1092993004) NOT NULL))) ASC, ((((vt1.c0)*(vt1.c0)))LIKE(((vt1.c0)GLOB(vt1.c0)))) LIMIT 0X3;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(json_patch(vt0.c1, vt0.c0) AS INTEGER));
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(json_patch(vt0.c1, vt0.c0) AS INTEGER)) ORDER BY CASE vt0.c0  WHEN TYPEOF(DISTINCT vt0.c0) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN TYPEOF(DISTINCT x'27') THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END ELSE ((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)) END  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 END)AND(((vt0.c1)-(vt1.c0)))))OR(((vt1.c0)>(vt1.c0))))) ORDER BY CASE vt0.c0  WHEN TYPEOF(DISTINCT vt0.c0) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN TYPEOF(DISTINCT x'27') THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END ELSE ((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(json_patch(vt0.c1, vt0.c0) AS INTEGER));
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (NULL)) THEN TRIM(DISTINCT vt1.c0) WHEN CASE -682791036  WHEN vt1.c0 THEN vt1.c0 WHEN 0Xffffffff8aac46eb THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)>>(vt1.c0)) ELSE (~ (vt1.c0)) END);
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN (- (NULL)) THEN TRIM(DISTINCT vt1.c0) WHEN CASE -682791036  WHEN vt1.c0 THEN vt1.c0 WHEN 0Xffffffff8aac46eb THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)>>(vt1.c0)) ELSE (~ (vt1.c0)) END) ORDER BY ((((LIKE('', vt1.c0, '-'))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)*(vt1.c0))))  NULLS FIRST, (+ (vt1.c0)) COLLATE BINARY DESC INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((((('-648768732')AND(vt1.c0)))OR(vt1.c0)))=(((vt1.c0)||(vt1.c0))))) ORDER BY ((((LIKE('', vt1.c0, '-'))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)*(vt1.c0))))  NULLS FIRST, (+ (vt1.c0)) COLLATE BINARY DESC;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (NULL)) THEN TRIM(DISTINCT vt1.c0) WHEN CASE -682791036  WHEN vt1.c0 THEN vt1.c0 WHEN 0Xffffffff8aac46eb THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)>>(vt1.c0)) ELSE (~ (vt1.c0)) END);
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN (- (NULL)) THEN TRIM(DISTINCT vt1.c0) WHEN CASE -682791036  WHEN vt1.c0 THEN vt1.c0 WHEN 0Xffffffff8aac46eb THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)>>(vt1.c0)) ELSE (~ (vt1.c0)) END) ORDER BY ((((LIKE('', vt1.c0, '-'))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)*(vt1.c0))))  NULLS FIRST, (+ (vt1.c0)) COLLATE BINARY DESC INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((((('-648768732')AND(vt1.c0)))OR(vt1.c0)))=(((vt1.c0)||(vt1.c0))))) ORDER BY ((((LIKE('', vt1.c0, '-'))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)*(vt1.c0))))  NULLS FIRST, (+ (vt1.c0)) COLLATE BINARY DESC;
SELECT * FROM vt1 CROSS JOIN vt0 ON CHANGES() WHERE (CAST(vt1.c0 AS INTEGER) COLLATE RTRIM);
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON CHANGES() WHERE (((CAST(vt1.c0 AS INTEGER) COLLATE RTRIM)AND(CAST(((vt0.c0)AND(vt1.c0)) AS REAL)))) ORDER BY (((vt1.c0) IS FALSE) IN ((vt1.c0 IN (vt0.c0, vt1.c0)))) ASC, CASE vt1.c0 COLLATE RTRIM  WHEN (vt1.c0 IN ()) THEN NULLIF(vt0.c0, vt1.c0) ELSE CASE WHEN vt0.c1 THEN vt0.c1 END END DESC LIMIT 0;
SELECT * FROM vt1 CROSS JOIN vt0 ON CHANGES() WHERE (CAST(vt1.c0 AS INTEGER) COLLATE RTRIM);
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON CHANGES() WHERE (((CAST(vt1.c0 AS INTEGER) COLLATE RTRIM)AND(CAST(((vt0.c0)AND(vt1.c0)) AS REAL)))) ORDER BY (((vt1.c0) IS FALSE) IN ((vt1.c0 IN (vt0.c0, vt1.c0)))) ASC, CASE vt1.c0 COLLATE RTRIM  WHEN (vt1.c0 IN ()) THEN NULLIF(vt0.c0, vt1.c0) ELSE CASE WHEN vt0.c1 THEN vt0.c1 END END DESC LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (json_quote((vt0.c1 IN ())));
SELECT DISTINCT * FROM vt0, vt1 WHERE (json_quote((vt0.c1 IN ())));
SELECT ALL * FROM vt0, vt1 WHERE (json_quote((vt0.c1 IN ())));
SELECT DISTINCT * FROM vt0, vt1 WHERE (json_quote((vt0.c1 IN ())));
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))) IS FALSE)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL) ASC;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))) IS FALSE)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL) ASC INTERSECT SELECT DISTINCT * FROM vt0 WHERE (TRIM(JULIANDAY(vt0.c0, vt0.c0, vt0.c0, '1763742329'))) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL) ASC;
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))) IS FALSE)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL) ASC;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))) IS FALSE)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL) ASC INTERSECT SELECT DISTINCT * FROM vt0 WHERE (TRIM(JULIANDAY(vt0.c0, vt0.c0, vt0.c0, '1763742329'))) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL) ASC;
SELECT ALL * FROM vt1 WHERE (TIME(((vt1.c0) NOTNULL), vt1.c0, x'55')) ORDER BY vt1.c0;
SELECT DISTINCT * FROM vt1 WHERE (((TIME(((vt1.c0) NOTNULL), vt1.c0, x'55'))AND(((CASE vt1.c0  WHEN NULL THEN x'f9' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(((((vt1.c0)AND(vt1.c0)))OR(x'80'))))))) ORDER BY ((CAST(vt1.c0 AS INTEGER))<(((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)-(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST, CASE (vt1.c0 IN (vt1.c0))  WHEN (NOT (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE vt1.c0 END  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CASE (((vt1.c0))==((vt1.c0)))  WHEN vt1.c0 THEN vt1.c0 WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)) ELSE (vt1.c0 IN (vt1.c0)) END) ORDER BY ((CAST(vt1.c0 AS INTEGER))<(((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)-(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST, CASE (vt1.c0 IN (vt1.c0))  WHEN (NOT (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE vt1.c0 END  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (TIME(((vt1.c0) NOTNULL), vt1.c0, x'55')) ORDER BY vt1.c0;
SELECT DISTINCT * FROM vt1 WHERE (((TIME(((vt1.c0) NOTNULL), vt1.c0, x'55'))AND(((CASE vt1.c0  WHEN NULL THEN x'f9' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)-(((((vt1.c0)AND(vt1.c0)))OR(x'80'))))))) ORDER BY ((CAST(vt1.c0 AS INTEGER))<(((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)-(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST, CASE (vt1.c0 IN (vt1.c0))  WHEN (NOT (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE vt1.c0 END  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (CASE (((vt1.c0))==((vt1.c0)))  WHEN vt1.c0 THEN vt1.c0 WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)) ELSE (vt1.c0 IN (vt1.c0)) END) ORDER BY ((CAST(vt1.c0 AS INTEGER))<(((vt1.c0)LIKE(vt1.c0))))  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)-(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST, CASE (vt1.c0 IN (vt1.c0))  WHEN (NOT (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE vt1.c0 END  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((+ (vt1.c0)))>>((((vt1.c0))<((vt1.c0))))));
SELECT ALL * FROM vt1 WHERE ((((((+ (vt1.c0)))>>((((vt1.c0))<((vt1.c0))))))AND((vt1.c0 COLLATE RTRIM IN (NULL))))) LIMIT 0X0;
SELECT ALL * FROM vt1 WHERE ((((+ (vt1.c0)))>>((((vt1.c0))<((vt1.c0))))));
SELECT ALL * FROM vt1 WHERE ((((((+ (vt1.c0)))>>((((vt1.c0))<((vt1.c0))))))AND((vt1.c0 COLLATE RTRIM IN (NULL))))) LIMIT 0X0;
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON x'b414' WHERE (((+ (1.043883576E9)) IN ())) ORDER BY CAST(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END AS NUMERIC) DESC;
SELECT DISTINCT COUNT(*) FROM vt0 CROSS JOIN vt1 ON x'b414' WHERE (((((+ (1.043883576E9)) IN ()))AND(NULL))) ORDER BY CAST(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END AS NUMERIC) DESC;
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END) AND ((+ (vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE ((((((NOT (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END) AND ((+ (vt1.c0)))))AND(((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((0.17706406076299852)OR(vt1.c0)))AND(vt1.c0)))))AND(((vt1.c0)IS(vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))));
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END) AND ((+ (vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE ((((((NOT (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END) AND ((+ (vt1.c0)))))AND(((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((0.17706406076299852)OR(vt1.c0)))AND(vt1.c0)))))AND(((vt1.c0)IS(vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))));
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c1) NOT BETWEEN (((0.6020549084987782) IS TRUE)) AND (((vt0.c1) ISNULL))));
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt0.c1) NOT BETWEEN (((0.6020549084987782) IS TRUE)) AND (((vt0.c1) ISNULL))))AND((((vt0.c0, NULL, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), vt1.c0 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt1.c0 ELSE '499733756' END)) AND ((x'4e60af', CAST(vt0.c1 AS NUMERIC), ((vt0.c1) NOT BETWEEN (vt1.c0) AND ('1419213546')))))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE ((('dpD⅚a|
z,') BETWEEN (x'ec') AND (vt0.c1))) LIMIT 1;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c1) NOT BETWEEN (((0.6020549084987782) IS TRUE)) AND (((vt0.c1) ISNULL))));
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt0.c1) NOT BETWEEN (((0.6020549084987782) IS TRUE)) AND (((vt0.c1) ISNULL))))AND((((vt0.c0, NULL, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), vt1.c0 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt1.c0 ELSE '499733756' END)) AND ((x'4e60af', CAST(vt0.c1 AS NUMERIC), ((vt0.c1) NOT BETWEEN (vt1.c0) AND ('1419213546')))))))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE ((('dpD⅚a|
z,') BETWEEN (x'ec') AND (vt0.c1))) LIMIT 1;
SELECT ALL * FROM vt1 WHERE (((((((((((CAST(vt1.c0 AS TEXT))AND(((vt1.c0) IS FALSE))))AND(((vt1.c0)AND(vt1.c0)))))AND(((929248988)<(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(' 뜴1Ujog')));
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((CAST(vt1.c0 AS TEXT))AND(((vt1.c0) IS FALSE))))AND(((vt1.c0)AND(vt1.c0)))))AND(((929248988)<(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(' 뜴1Ujog')))AND(vt1.c0))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS TEXT) INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((CAST(x'' AS INTEGER)) ISNULL)) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS TEXT);
SELECT ALL * FROM vt1 WHERE (((((((((((CAST(vt1.c0 AS TEXT))AND(((vt1.c0) IS FALSE))))AND(((vt1.c0)AND(vt1.c0)))))AND(((929248988)<(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(' 뜴1Ujog')));
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((CAST(vt1.c0 AS TEXT))AND(((vt1.c0) IS FALSE))))AND(((vt1.c0)AND(vt1.c0)))))AND(((929248988)<(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(' 뜴1Ujog')))AND(vt1.c0))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS TEXT) INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((CAST(x'' AS INTEGER)) ISNULL)) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS TEXT);
SELECT ALL * FROM vt1, vt0 WHERE (CAST((((x'', vt0.c0))<=((vt1.c0, vt0.c1))) AS NUMERIC));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST((((x'', vt0.c0))<=((vt1.c0, vt0.c1))) AS NUMERIC))AND((- ((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))))) LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE (CAST((((x'', vt0.c0))<=((vt1.c0, vt0.c1))) AS NUMERIC));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST((((x'', vt0.c0))<=((vt1.c0, vt0.c1))) AS NUMERIC))AND((- ((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))))) LIMIT 1;
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (LIKELY(DISTINCT ((vt0.c1) IS TRUE)));
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (((LIKELY(DISTINCT ((vt0.c1) IS TRUE)))AND(((vt1.c0)&(TRIM(vt1.c0, vt1.c0)))))) INTERSECT SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE ((~ (((vt0.c0)||(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(x'f564' COLLATE BINARY AS BLOB)) ORDER BY (CAST(vt0.c0 AS BLOB) IN ((NOT (vt0.c0)))), (x'b167c4' IN (highlight(vt0.c1, vt0.c0, vt0.c0, vt0.c1))) ASC, ((CASE -7.34681191E8  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)<<(((vt0.c1)*(vt0.c0)))) DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CAST(x'f564' COLLATE BINARY AS BLOB)) ORDER BY (((vt0.c0) IS TRUE) IN ((((NULL, vt0.c0))<((5.73310531E8, x'1dd733d3'))), ((((vt0.c0)OR(x'')))AND(vt0.c0)))) DESC, ((TRIM(DISTINCT vt0.c1, vt0.c0)) IS TRUE)  NULLS FIRST, (~ (vt0.c0)) COLLATE RTRIM ASC, ((NULL COLLATE BINARY)GLOB(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0) IS TRUE) IN ((((NULL, vt0.c0))<((5.73310531E8, x'1dd733d3'))), ((((vt0.c0)OR(x'')))AND(vt0.c0)))) DESC, ((TRIM(DISTINCT vt0.c1, vt0.c0)) IS TRUE)  NULLS FIRST, (~ (vt0.c0)) COLLATE RTRIM ASC, ((NULL COLLATE BINARY)GLOB(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) LIMIT 1;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE ((~ (((vt0.c1) IS TRUE)))) ORDER BY (+ (NULL))  NULLS FIRST, (((((vt0.c0, vt1.c0, vt1.c0))=((vt0.c1, vt1.c0, vt0.c1)))) NOTNULL)  NULLS FIRST;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE ((~ (((vt0.c1) IS TRUE)))) ORDER BY (+ (NULL))  NULLS FIRST, (((((vt0.c0, vt1.c0, vt1.c0))=((vt0.c1, vt1.c0, vt0.c1)))) NOTNULL)  NULLS FIRST LIMIT 1 INTERSECT SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE (((((((((vt0.c1)==(vt0.c1)))AND(((vt0.c1)IS NOT(vt0.c1)))))AND(vt0.c1)))OR(738629008))) ORDER BY (+ (NULL))  NULLS FIRST, (((((vt0.c0, vt1.c0, vt1.c0))=((vt0.c1, vt1.c0, vt0.c1)))) NOTNULL)  NULLS FIRST LIMIT 0X1;
SELECT MIN(vt0.c1) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) IS FALSE)) ORDER BY 0.24851619218072207 COLLATE BINARY DESC, '-1021496946';
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c1))) IS FALSE))AND(((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1))) IN (MIN(vt0.c1, vt0.c1, vt0.c1)))))) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE NOCASE ASC  NULLS LAST, ((LOWER(DISTINCT vt0.c1)) BETWEEN (vt0.c1) AND (((x'dc') NOT BETWEEN (vt0.c0) AND ('7'))))  NULLS FIRST;
SELECT ALL MIN(vt1.c0) FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c1 COLLATE NOCASE)*(((vt0.c1) BETWEEN (vt1.c0) AND (0.7024941342303408)))) WHERE (((((((((((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(x'7e4cf8ca')))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) COLLATE NOCASE);
SELECT DISTINCT MIN(vt1.c0) FROM vt0 INNER JOIN vt1 ON ((vt0.c1 COLLATE NOCASE)*(((vt0.c1) BETWEEN (vt1.c0) AND (0.7024941342303408)))) WHERE (((((((((((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(x'7e4cf8ca')))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) COLLATE NOCASE) LIMIT 0x1;
SELECT MIN(vt0.c0) FROM vt0 INNER JOIN vt1 ON ROUND(((vt0.c0)%(vt1.c0)), CAST(vt0.c1 AS NUMERIC)) WHERE (((TYPEOF(vt0.c1))>>(((vt0.c0)%(vt0.c1)))));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 INNER JOIN vt1 ON ROUND(((vt0.c0)%(vt1.c0)), CAST(vt0.c1 AS NUMERIC)) WHERE (((((TYPEOF(vt0.c1))>>(((vt0.c0)%(vt0.c1)))))AND(vt0.c1))) LIMIT 0x1;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)=(vt0.c0)))LIKE((+ (0.3110011320475896)))) DESC, (((- ('0.782920398801565')))LIKE((((vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0)))))  NULLS FIRST, 'L/
HX鞓E8' COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)AND(((UPPER(vt0.c1))+(((((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(-1.943074248E9)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1))))))) ORDER BY ((+ ('-1786790141')) IN ()) INTERSECT SELECT ALL COUNT(*) FROM vt0 WHERE ('0.40872194926768113') ORDER BY ((+ ('-1786790141')) IN ());
SELECT ALL * FROM vt1 WHERE (((((json(0.6235065713349728))AND(SQLITE_SOURCE_ID())))OR((+ (vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0)&(vt1.c0)) COLLATE NOCASE, CASE NULL  WHEN '0.7689912317045176' THEN CAST(vt1.c0 AS BLOB) WHEN rtreenode(vt1.c0, vt1.c0) THEN 0.24996785710070357 COLLATE BINARY END;
SELECT * FROM vt1 WHERE (((((((json(0.6235065713349728))AND(SQLITE_SOURCE_ID())))OR((+ (vt1.c0)))))AND(((((((((x'')IS NOT(vt1.c0)))AND(NULL)))AND(TRIM(vt1.c0))))OR((vt1.c0 IN (vt1.c0))))))) ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.5972793538223127 THEN vt1.c0 WHEN 0.8880651684760021 THEN vt1.c0 END THEN vt1.c0 WHEN LIKELY(vt1.c0) THEN ((vt1.c0)IS NOT(vt1.c0)) END  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)GLOB(vt1.c0)) AS NUMERIC)) ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.5972793538223127 THEN vt1.c0 WHEN 0.8880651684760021 THEN vt1.c0 END THEN vt1.c0 WHEN LIKELY(vt1.c0) THEN ((vt1.c0)IS NOT(vt1.c0)) END  NULLS LAST LIMIT 2;
SELECT ALL * FROM vt1 WHERE (((((json(0.6235065713349728))AND(SQLITE_SOURCE_ID())))OR((+ (vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0)&(vt1.c0)) COLLATE NOCASE, CASE NULL  WHEN '0.7689912317045176' THEN CAST(vt1.c0 AS BLOB) WHEN rtreenode(vt1.c0, vt1.c0) THEN 0.24996785710070357 COLLATE BINARY END;
SELECT * FROM vt1 WHERE (((((((json(0.6235065713349728))AND(SQLITE_SOURCE_ID())))OR((+ (vt1.c0)))))AND(((((((((x'')IS NOT(vt1.c0)))AND(NULL)))AND(TRIM(vt1.c0))))OR((vt1.c0 IN (vt1.c0))))))) ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.5972793538223127 THEN vt1.c0 WHEN 0.8880651684760021 THEN vt1.c0 END THEN vt1.c0 WHEN LIKELY(vt1.c0) THEN ((vt1.c0)IS NOT(vt1.c0)) END  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)GLOB(vt1.c0)) AS NUMERIC)) ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.5972793538223127 THEN vt1.c0 WHEN 0.8880651684760021 THEN vt1.c0 END THEN vt1.c0 WHEN LIKELY(vt1.c0) THEN ((vt1.c0)IS NOT(vt1.c0)) END  NULLS LAST LIMIT 2;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)AND(((0.03663404161994843)<<(json_patch(vt0.c1, vt0.c1)))))) ORDER BY CASE WHEN ABS(vt1.c0) THEN TIME(vt0.c1, vt0.c1, vt0.c0, vt0.c0) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('}')) THEN ((vt0.c0) NOTNULL) WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) IS TRUE) WHEN ((vt0.c1) NOTNULL) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END WHEN LIKELY(DISTINCT vt1.c0) THEN (((x'c076'))<((vt0.c0))) END ASC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c0 THEN TRIM(vt0.c0) ELSE vt1.c0 END) ORDER BY CASE WHEN ABS(vt1.c0) THEN TIME(vt0.c1, vt0.c1, vt0.c0, vt0.c0) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('}')) THEN ((vt0.c0) NOTNULL) WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) IS TRUE) WHEN ((vt0.c1) NOTNULL) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END WHEN LIKELY(DISTINCT vt1.c0) THEN (((x'c076'))<((vt0.c0))) END ASC  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (((vt0.c0)/(vt1.c0)) COLLATE RTRIM);
SELECT DISTINCT MIN(vt0.c1) FROM vt0, vt1 WHERE (((((vt0.c0)/(vt1.c0)) COLLATE RTRIM)AND(CAST((vt1.c0 IN ()) AS REAL)))) ORDER BY (((vt0.c1, vt0.c1)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (0.19905626026408818)), LIKELY(DISTINCT vt1.c0))) AND ((((vt0.c0)IS(vt0.c1)), vt0.c0))) ASC, CASE WHEN (~ (vt1.c0)) THEN '0' WHEN ((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)) THEN json_valid(vt0.c1) END  NULLS FIRST LIMIT 5;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)AND(((NOT (vt0.c0)) IN ((((x'', vt0.c0)) NOT BETWEEN ((vt0.c0, x'')) AND ((vt0.c0, vt0.c0)))))))) LIMIT 1 INTERSECT SELECT COUNT(*) FROM vt0 WHERE (((((MAX(vt0.c1, vt0.c1))AND(HEX(vt0.c1))))AND((((vt0.c1, 0.15143476405683187)) NOT BETWEEN ((vt0.c1, NULL)) AND ((NULL, vt0.c1)))))) LIMIT 0X1;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)=(vt0.c0)))LIKE(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))))) ORDER BY (NOT (x'36cb8d')) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1)=(vt0.c0)))LIKE(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))))AND((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END IN ())))) ORDER BY (NOT (x'36cb8d')) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY (NOT (x'36cb8d')) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)=(vt0.c0)))LIKE(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))))) ORDER BY (NOT (x'36cb8d')) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1)=(vt0.c0)))LIKE(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))))AND((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END IN ())))) ORDER BY (NOT (x'36cb8d')) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY (NOT (x'36cb8d')) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY CAST((('-100881499')<=(x'efae')) AS INTEGER)  NULLS LAST, CAST((+ (vt0.c1)) AS TEXT)  NULLS FIRST, ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt1.c0, vt0.c0, vt1.c0))<((vt0.c1, vt0.c1, vt0.c1)))) AND ((vt0.c0 IN (vt0.c0, vt0.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END IN ((vt0.c1 IN (vt0.c0, vt1.c0))))  NULLS FIRST, ((((((((vt0.c0)&(vt0.c1)))AND(NULL)))AND(((vt0.c0) IS TRUE))))AND(((vt1.c0) IS TRUE)));
SELECT * FROM vt0 WHERE ((~ (((vt0.c1) NOT NULL)))) ORDER BY ((vt0.c0 IN ()) IN ('-1e500')), ((((vt0.c1) NOTNULL)) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((~ (((vt0.c1) NOT NULL)))) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS INTEGER) DESC LIMIT 0;
SELECT * FROM vt0 WHERE ((~ (((vt0.c1) NOT NULL)))) ORDER BY ((vt0.c0 IN ()) IN ('-1e500')), ((((vt0.c1) NOTNULL)) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((~ (((vt0.c1) NOT NULL)))) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS INTEGER) DESC LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE BINARY IN ((~ (vt1.c0)))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE BINARY IN ((~ (vt1.c0))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED WHERE (CAST(vt0.c1 AS REAL)) LIMIT 0X0;
SELECT ALL * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE BINARY IN ((~ (vt1.c0)))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((vt0.c0 COLLATE BINARY IN ((~ (vt1.c0))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED WHERE (CAST(vt0.c1 AS REAL)) LIMIT 0X0;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((NOT (vt0.c1)) COLLATE NOCASE) ORDER BY ((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) NOT NULL))))OR(x'd7e866' COLLATE RTRIM)))OR((vt0.c1 IN (vt0.c1)))))AND((vt0.c0 IN (vt0.c1)))) ASC  NULLS FIRST, ((vt0.c1 COLLATE NOCASE)IS(((vt0.c0)IS(vt0.c0)))) DESC;
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((NOT (vt0.c1)) COLLATE NOCASE) ORDER BY (((vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((vt0.c0) NOTNULL))))  NULLS LAST, (+ ((vt0.c0 IN (vt0.c1, vt0.c0, vt0.c0))))  NULLS FIRST LIMIT 0X1;
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c0)&(vt0.c1)))AND((vt1.c0 IN (0.16640078570863448)))))AND(((vt1.c0)GLOB(vt0.c1)))))OR(((x'58')>(vt0.c0))))) ORDER BY ((((vt0.c0)<(vt1.c0)))IS NOT((- (0.19388439680507563)))) DESC  NULLS LAST, ((((((vt0.c0, vt1.c0, 0.8280261912694166, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c0, vt1.c0, vt1.c0, vt0.c1)))))<((UNLIKELY(vt0.c0)))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((vt0.c0)&(vt0.c1)))AND((vt1.c0 IN (0.16640078570863448)))))AND(((vt1.c0)GLOB(vt0.c1)))))OR(((x'58')>(vt0.c0))))) ORDER BY ((((vt0.c0)<(vt1.c0)))IS NOT((- (0.19388439680507563)))) DESC  NULLS LAST, ((((((vt0.c0, vt1.c0, 0.8280261912694166, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c0, vt1.c0, vt1.c0, vt0.c1)))))<((UNLIKELY(vt0.c0)))) DESC;
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c0)&(vt0.c1)))AND((vt1.c0 IN (0.16640078570863448)))))AND(((vt1.c0)GLOB(vt0.c1)))))OR(((x'58')>(vt0.c0))))) ORDER BY ((((vt0.c0)<(vt1.c0)))IS NOT((- (0.19388439680507563)))) DESC  NULLS LAST, ((((((vt0.c0, vt1.c0, 0.8280261912694166, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c0, vt1.c0, vt1.c0, vt0.c1)))))<((UNLIKELY(vt0.c0)))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((vt0.c0)&(vt0.c1)))AND((vt1.c0 IN (0.16640078570863448)))))AND(((vt1.c0)GLOB(vt0.c1)))))OR(((x'58')>(vt0.c0))))) ORDER BY ((((vt0.c0)<(vt1.c0)))IS NOT((- (0.19388439680507563)))) DESC  NULLS LAST, ((((((vt0.c0, vt1.c0, 0.8280261912694166, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c0, vt1.c0, vt1.c0, vt0.c1)))))<((UNLIKELY(vt0.c0)))) DESC;
SELECT MIN(vt0.c0) FROM vt0 WHERE (0.3059583585796435);
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((0.3059583585796435)AND(CAST((+ (vt0.c0)) AS INTEGER))));
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER));
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER)) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN ((vt0.c1 IN ())) AND (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))), (((NOT (vt0.c1)))IS((vt0.c1 IN (vt0.c1)))) ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN ((vt0.c1 IN ())) AND (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))), (((NOT (vt0.c1)))IS((vt0.c1 IN (vt0.c1)))) ASC LIMIT 0X0;
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER));
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER)) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN ((vt0.c1 IN ())) AND (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))), (((NOT (vt0.c1)))IS((vt0.c1 IN (vt0.c1)))) ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN ((vt0.c1 IN ())) AND (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))), (((NOT (vt0.c1)))IS((vt0.c1 IN (vt0.c1)))) ASC LIMIT 0X0;
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE ('1840216643') ORDER BY (((NOT (vt0.c1))) IS FALSE), ((vt1.c0) NOT BETWEEN (x'b6af') AND ((((vt1.c0, x'')) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0)))))  NULLS LAST;
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE ((('1840216643')AND(((((((vt0.c1, vt0.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))))>=((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))))) ORDER BY (((NOT (vt0.c1))) IS FALSE), ((vt1.c0) NOT BETWEEN (x'b6af') AND ((((vt1.c0, x'')) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0)))))  NULLS LAST INTERSECT SELECT MAX(vt0.c1) FROM vt1 NOT INDEXED, vt0 WHERE ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c1)))AND('A''')))AND(vt0.c1)))OR('98411651')) IN ())) ORDER BY (((NOT (vt0.c1))) IS FALSE), ((vt1.c0) NOT BETWEEN (x'b6af') AND ((((vt1.c0, x'')) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0)))))  NULLS LAST;
SELECT MIN(vt0.c0) FROM vt0, vt1 WHERE (x'');
SELECT ALL MIN(vt0.c0) FROM vt0, vt1 WHERE (x'') ORDER BY ((vt1.c0)<=(((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC, ((((json(vt0.c1))OR((((vt0.c0))<=((vt0.c1))))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST, CAST(((vt0.c0)||(vt1.c0)) AS TEXT) LIMIT 0x3 INTERSECT SELECT MIN(vt0.c0) FROM vt0, vt1 WHERE (CAST(0.8667916987131911 AS TEXT) COLLATE BINARY) ORDER BY ((vt1.c0)<=(((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC, ((((json(vt0.c1))OR((((vt0.c0))<=((vt0.c1))))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST, CAST(((vt0.c0)||(vt1.c0)) AS TEXT) LIMIT 0x3;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE ((((vt0.c1 IN (vt1.c0)))GLOB(((((((((((((vt0.c1)OR(x'39')))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((x'')<(vt1.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))AND('J먃	')))) DESC;
SELECT MAX(vt0.c0) FROM vt1, vt0 WHERE ((((((vt0.c1 IN (vt1.c0)))GLOB(((((((((((((vt0.c1)OR(x'39')))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND((vt1.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY COLLATE RTRIM))) ORDER BY ((((x'')<(vt1.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))AND('J먃	')))) DESC LIMIT 0x1;
SELECT * FROM vt0, vt1 WHERE ((((+ (vt0.c1))) ISNULL));
SELECT ALL * FROM vt0, vt1 WHERE ((((((+ (vt0.c1))) ISNULL))AND((((- (vt0.c1))) IS TRUE)))) INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (((~ (vt1.c0)) IN ()));
SELECT * FROM vt0, vt1 WHERE ((((+ (vt0.c1))) ISNULL));
SELECT ALL * FROM vt0, vt1 WHERE ((((((+ (vt0.c1))) ISNULL))AND((((- (vt0.c1))) IS TRUE)))) INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (((~ (vt1.c0)) IN ()));
SELECT ALL MAX(vt0.c1) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0, 'd<1y?')) BETWEEN ((((vt0.c1) NOTNULL), (vt0.c1 IN (vt0.c1)))) AND ((NULL, ((vt1.c0) NOT NULL)))) WHERE (((((((((vt0.c1)/(vt0.c1)))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR(((vt0.c0) NOTNULL))))OR(x''))) ORDER BY ((((vt0.c1 COLLATE NOCASE)OR((vt1.c0 IN (vt0.c0)))))AND(TRIM(vt1.c0))) DESC  NULLS FIRST;
SELECT MAX(vt0.c1) FROM vt0 INNER JOIN vt1 ON (((vt1.c0, 'd<1y?')) BETWEEN ((((vt0.c1) NOTNULL), (vt0.c1 IN (vt0.c1)))) AND ((NULL, ((vt1.c0) NOT NULL)))) WHERE (((((((((vt0.c1)/(vt0.c1)))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR(((vt0.c0) NOTNULL))))OR(x''))) ORDER BY ((((vt0.c1 COLLATE NOCASE)OR((vt1.c0 IN (vt0.c0)))))AND(TRIM(vt1.c0))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) NOTNULL)))) ORDER BY (((NOT (0.5973932663764046)))AND(0.3273786531813947));
SELECT DISTINCT * FROM vt0 WHERE ((((+ (((vt0.c0) NOTNULL))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((NOT (0.5973932663764046)))AND(0.3273786531813947));
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) NOTNULL)))) ORDER BY (((NOT (0.5973932663764046)))AND(0.3273786531813947));
SELECT DISTINCT * FROM vt0 WHERE ((((+ (((vt0.c0) NOTNULL))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((NOT (0.5973932663764046)))AND(0.3273786531813947));
SELECT MAX(vt1.c0) FROM vt1 WHERE (CAST('~x^d~ E' AS NUMERIC));
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CAST('~x^d~ E' AS NUMERIC)) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'') ORDER BY (COALESCE(vt0.c1, vt0.c0) IN ())  NULLS FIRST, IFNULL(DISTINCT vt0.c1, vt1.c0) ASC  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1 IN (vt1.c0))) IS TRUE)) ORDER BY (COALESCE(vt0.c1, vt0.c0) IN ())  NULLS FIRST, IFNULL(DISTINCT vt0.c1, vt1.c0) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (((((- (vt0.c1))))>(((+ (vt0.c1))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((- (vt0.c1))))>(((+ (vt0.c1)))))) ORDER BY load_extension(x'', ((vt0.c1)|(vt0.c0))), vt0.c0 ASC LIMIT 0x2;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((NULL)AND(((vt0.c1)<('')))))AND(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR(((vt0.c1)*(vt0.c0)))));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((((NULL)AND(((vt0.c1)<('')))))AND(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR(((vt0.c1)*(vt0.c0))))) LIMIT 0x1;
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1))))IS NOT(LIKELIHOOD(DISTINCT vt0.c1, vt0.c0)))) ORDER BY ((((((((vt1.c0)>>(0.3475750296636795)))AND(((vt1.c0)%(-1692152891)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE NOCASE)), ((vt0.c1) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) AND ((((vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0)))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1))))IS NOT(LIKELIHOOD(DISTINCT vt0.c1, vt0.c0))))AND((((((((((vt0.c1)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, ((vt1.c0)<=(vt0.c1))))))) ORDER BY LOWER(x'4f') ASC LIMIT 3;
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c1))))IS NOT(LIKELIHOOD(DISTINCT vt0.c1, vt0.c0)))) ORDER BY ((((((((vt1.c0)>>(0.3475750296636795)))AND(((vt1.c0)%(-1692152891)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE NOCASE)), ((vt0.c1) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) AND ((((vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0)))))  NULLS FIRST;
SELECT ALL MIN(vt1.c0) FROM vt0 CROSS JOIN vt1 ON (((vt1.c0 IN (vt0.c0, vt1.c0)))OR((((vt1.c0, vt1.c0, vt0.c1, vt0.c0))<=((vt1.c0, vt0.c0, vt1.c0, vt0.c0))))) WHERE ((('-16873888')<(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY (((vt0.c0 IN (vt0.c0)))!=(CASE vt0.c1  WHEN '<,L' THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN 0.15468014125400376 ELSE vt0.c0 END)) DESC  NULLS FIRST, (0.4422425217902374 IN (vt0.c1, 0xffffffff8e251ece))  NULLS FIRST;
SELECT MIN(vt1.c0) FROM vt0 CROSS JOIN vt1 ON (((vt1.c0 IN (vt0.c0, vt1.c0)))OR((((vt1.c0, vt1.c0, vt0.c1, vt0.c0))<=((vt1.c0, vt0.c0, vt1.c0, vt0.c0))))) WHERE ((('-16873888')<(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY (((vt0.c0 IN (vt0.c0)))!=(CASE vt0.c1  WHEN '<,L' THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN 0.15468014125400376 ELSE vt0.c0 END)) DESC  NULLS FIRST, (0.4422425217902374 IN (vt0.c1, 0xffffffff8e251ece))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT vt0.c1) COLLATE NOCASE) ORDER BY ((0.1654066088492413) NOT NULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c1) COLLATE NOCASE)AND(CAST('p˜C' AS REAL) COLLATE BINARY))) ORDER BY ((((((((vt0.c0)/(vt0.c0)))AND(CAST(0.5644982286679928 AS BLOB))))AND(((vt0.c1) ISNULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM vt0 WHERE ('') ORDER BY ((((((((vt0.c0)/(vt0.c0)))AND(CAST(0.5644982286679928 AS BLOB))))AND(((vt0.c1) ISNULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT vt0.c1) COLLATE NOCASE) ORDER BY ((0.1654066088492413) NOT NULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c1) COLLATE NOCASE)AND(CAST('p˜C' AS REAL) COLLATE BINARY))) ORDER BY ((((((((vt0.c0)/(vt0.c0)))AND(CAST(0.5644982286679928 AS BLOB))))AND(((vt0.c1) ISNULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM vt0 WHERE ('') ORDER BY ((((((((vt0.c0)/(vt0.c0)))AND(CAST(0.5644982286679928 AS BLOB))))AND(((vt0.c1) ISNULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST LIMIT 1;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)AND(0.6090905797431583 COLLATE BINARY))) INTERSECT SELECT * FROM vt0 WHERE (0x52b013ee);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)AND(0.6090905797431583 COLLATE BINARY))) INTERSECT SELECT * FROM vt0 WHERE (0x52b013ee);
SELECT * FROM vt0, vt1 WHERE (LOWER((+ (vt1.c0)))) ORDER BY CASE WHEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(0.011956481684450071)) THEN ((((vt1.c0)OR(vt0.c1)))OR(vt1.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) THEN vt0.c1 COLLATE NOCASE END  NULLS LAST, (~ (CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END)), ((x'') NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM DESC;
SELECT DISTINCT * FROM vt0, vt1 WHERE (LOWER((+ (vt1.c0)))) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT NULL) ASC  NULLS FIRST, (- (LIKE(vt0.c1, vt0.c1, '0')))  NULLS LAST, LAST_INSERT_ROWID()  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (json_array_length(NULL)) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT NULL) ASC  NULLS FIRST, (- (LIKE(vt0.c1, vt0.c1, '0')))  NULLS LAST, LAST_INSERT_ROWID()  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0, vt1 WHERE (LOWER((+ (vt1.c0)))) ORDER BY CASE WHEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(0.011956481684450071)) THEN ((((vt1.c0)OR(vt0.c1)))OR(vt1.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) THEN vt0.c1 COLLATE NOCASE END  NULLS LAST, (~ (CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END)), ((x'') NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM DESC;
SELECT DISTINCT * FROM vt0, vt1 WHERE (LOWER((+ (vt1.c0)))) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT NULL) ASC  NULLS FIRST, (- (LIKE(vt0.c1, vt0.c1, '0')))  NULLS LAST, LAST_INSERT_ROWID()  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (json_array_length(NULL)) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT NULL) ASC  NULLS FIRST, (- (LIKE(vt0.c1, vt0.c1, '0')))  NULLS LAST, LAST_INSERT_ROWID()  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ((vt0.c1 IN ()), ((((vt0.c0)AND(vt0.c1)))OR(x'b6')))));
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ((vt0.c1 IN ()), ((((vt0.c0)AND(vt0.c1)))OR(x'b6'))))) ORDER BY ((vt0.c1 COLLATE BINARY)OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0)), vt0.c1 COLLATE RTRIM, (((vt0.c0))<>((vt0.c1))), vt0.c1 COLLATE RTRIM, DATE(vt0.c0, vt0.c0, vt0.c0, vt0.c1, x'')))>=(((vt0.c1 IN (vt0.c0)), ((vt0.c0)+(vt0.c1)), 0.9380680650748491, ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>>(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (-732147807))))) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM vt0 WHERE (x'b0') ORDER BY ((vt0.c1 COLLATE BINARY)OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0)), vt0.c1 COLLATE RTRIM, (((vt0.c0))<>((vt0.c1))), vt0.c1 COLLATE RTRIM, DATE(vt0.c0, vt0.c0, vt0.c0, vt0.c1, x'')))>=(((vt0.c1 IN (vt0.c0)), ((vt0.c0)+(vt0.c1)), 0.9380680650748491, ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>>(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (0xffffffffd45c4fa1))))) ASC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ((vt0.c1 IN ()), ((((vt0.c0)AND(vt0.c1)))OR(x'b6')))));
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ((vt0.c1 IN ()), ((((vt0.c0)AND(vt0.c1)))OR(x'b6'))))) ORDER BY ((vt0.c1 COLLATE BINARY)OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0)), vt0.c1 COLLATE RTRIM, (((vt0.c0))<>((vt0.c1))), vt0.c1 COLLATE RTRIM, DATE(vt0.c0, vt0.c0, vt0.c0, vt0.c1, x'')))>=(((vt0.c1 IN (vt0.c0)), ((vt0.c0)+(vt0.c1)), 0.9380680650748491, ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>>(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (-732147807))))) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM vt0 WHERE (x'b0') ORDER BY ((vt0.c1 COLLATE BINARY)OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0)), vt0.c1 COLLATE RTRIM, (((vt0.c0))<>((vt0.c1))), vt0.c1 COLLATE RTRIM, DATE(vt0.c0, vt0.c0, vt0.c0, vt0.c1, x'')))>=(((vt0.c1 IN (vt0.c0)), ((vt0.c0)+(vt0.c1)), 0.9380680650748491, ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>>(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (0xffffffffd45c4fa1))))) ASC  NULLS LAST LIMIT 0X1;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE (TRIM(vt0.c0 COLLATE RTRIM));
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE (((TRIM(vt0.c0 COLLATE RTRIM))AND(((((vt1.c0) NOT NULL))<(((vt0.c0)IS NOT(vt0.c0))))))) LIMIT 0x0 INTERSECT SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((NULL)AND('[PD')))) AND ((CAST(vt0.c0 AS REAL))))) LIMIT 0x0;
SELECT * FROM vt0, vt1 WHERE (((((((((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END)AND(TYPEOF(vt0.c0))))OR(((0.856526365439025)>(vt0.c0)))))AND(ABS(vt0.c0))))OR(((((((((((((vt0.c0)AND('v#ัf
''sz')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))))OR(((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0))))) ORDER BY (((((0.698885369117718, vt0.c0, vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0, vt1.c0, vt0.c1)))) IS FALSE) ASC  NULLS LAST, (vt1.c0 IN (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(NULL)))AND(vt0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END)AND(TYPEOF(vt0.c0))))OR(((0.856526365439025)>(vt0.c0)))))AND(ABS(vt0.c0))))OR(((((((((((((vt0.c0)AND('v#ัf
''sz')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))))OR(((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0))))) ORDER BY ((((((((((x'cf')-(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))AND(0.5921625525649123)))OR((vt0.c1 IN ()))))OR(vt0.c0)) ASC, (~ (vt0.c1 COLLATE RTRIM))  NULLS LAST LIMIT 4;
SELECT * FROM vt0, vt1 WHERE (((((((((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END)AND(TYPEOF(vt0.c0))))OR(((0.856526365439025)>(vt0.c0)))))AND(ABS(vt0.c0))))OR(((((((((((((vt0.c0)AND('v#ัf
''sz')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))))OR(((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0))))) ORDER BY (((((0.698885369117718, vt0.c0, vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0, vt1.c0, vt0.c1)))) IS FALSE) ASC  NULLS LAST, (vt1.c0 IN (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(NULL)))AND(vt0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END)AND(TYPEOF(vt0.c0))))OR(((0.856526365439025)>(vt0.c0)))))AND(ABS(vt0.c0))))OR(((((((((((((vt0.c0)AND('v#ัf
''sz')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))))OR(((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0))))) ORDER BY ((((((((((x'cf')-(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))AND(0.5921625525649123)))OR((vt0.c1 IN ()))))OR(vt0.c0)) ASC, (~ (vt0.c1 COLLATE RTRIM))  NULLS LAST LIMIT 4;
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((vt0.c0)&(vt0.c1))))) ORDER BY (((vt0.c1)||(vt1.c0)) IN (((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, ((x'b3' COLLATE RTRIM)+((~ (x'')))) DESC, vt0.c0  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((+ (((vt0.c0)&(vt0.c1)))))AND((NOT (((vt1.c0) IS FALSE)))))) ORDER BY (((vt0.c1)||(vt1.c0)) IN (((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, ((x'b3' COLLATE RTRIM)+((~ (x'')))) DESC, vt0.c0  NULLS LAST LIMIT 4;
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((vt0.c0)&(vt0.c1))))) ORDER BY (((vt0.c1)||(vt1.c0)) IN (((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, ((x'b3' COLLATE RTRIM)+((~ (x'')))) DESC, vt0.c0  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((+ (((vt0.c0)&(vt0.c1)))))AND((NOT (((vt1.c0) IS FALSE)))))) ORDER BY (((vt0.c1)||(vt1.c0)) IN (((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, ((x'b3' COLLATE RTRIM)+((~ (x'')))) DESC, vt0.c0  NULLS LAST LIMIT 4;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((1737951361)>=(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((0x67970881)>=(vt0.c0)) COLLATE RTRIM)AND(((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(vt0.c0))))) INTERSECT SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE vt0.c1 COLLATE RTRIM  WHEN NULL THEN vt0.c1 COLLATE RTRIM ELSE CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END END);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((NULL)AND(((vt0.c1)&('hI')))) WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END) BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN x'335c' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) ORDER BY ((((2019138783) IS TRUE))+(((vt0.c1)>(1885379869)))) DESC  NULLS LAST, (((NOT (vt0.c1)))-(vt0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((NULL)AND(((vt0.c1)&('hI')))) WHERE (((((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END) BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN x'335c' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)))AND(x'14e0'))) ORDER BY ((((0X78599cdf) IS TRUE))+(((vt0.c1)>(0X70609d1d)))) DESC  NULLS LAST, (((NOT (vt0.c1)))-(vt0.c1 COLLATE RTRIM))  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((NULL)AND(((vt0.c1)&('hI')))) WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)) ORDER BY ((((0x78599cdf) IS TRUE))+(((vt0.c1)>(1885379869)))) DESC  NULLS LAST, (((NOT (vt0.c1)))-(vt0.c1 COLLATE RTRIM))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((NULL)AND(((vt0.c1)&('hI')))) WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END) BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN x'335c' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) ORDER BY ((((2019138783) IS TRUE))+(((vt0.c1)>(1885379869)))) DESC  NULLS LAST, (((NOT (vt0.c1)))-(vt0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((NULL)AND(((vt0.c1)&('hI')))) WHERE (((((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END) BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN x'335c' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)))AND(x'14e0'))) ORDER BY ((((0X78599cdf) IS TRUE))+(((vt0.c1)>(0X70609d1d)))) DESC  NULLS LAST, (((NOT (vt0.c1)))-(vt0.c1 COLLATE RTRIM))  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((NULL)AND(((vt0.c1)&('hI')))) WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)) ORDER BY ((((0x78599cdf) IS TRUE))+(((vt0.c1)>(1885379869)))) DESC  NULLS LAST, (((NOT (vt0.c1)))-(vt0.c1 COLLATE RTRIM))  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) INTERSECT SELECT * FROM vt0 WHERE (((NULL COLLATE NOCASE)*(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) INTERSECT SELECT * FROM vt0 WHERE (((NULL COLLATE NOCASE)*(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT * FROM vt1 WHERE (TRIM(DISTINCT LOWER(''))) ORDER BY CAST(((vt1.c0) IS TRUE) AS NUMERIC)  NULLS LAST, (((~ (vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))) ASC;
SELECT DISTINCT * FROM vt1 WHERE (TRIM(DISTINCT LOWER(''))) ORDER BY ((vt1.c0)!=(vt1.c0)) COLLATE RTRIM;
SELECT * FROM vt1 WHERE (TRIM(DISTINCT LOWER(''))) ORDER BY CAST(((vt1.c0) IS TRUE) AS NUMERIC)  NULLS LAST, (((~ (vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))) ASC;
SELECT DISTINCT * FROM vt1 WHERE (TRIM(DISTINCT LOWER(''))) ORDER BY ((vt1.c0)!=(vt1.c0)) COLLATE RTRIM;
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((vt1.c0)<(vt0.c1))) IS TRUE) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST, ((vt1.c0 COLLATE BINARY) IS TRUE)  NULLS LAST INTERSECT SELECT * FROM vt1, vt0 WHERE ((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(x''))))!=((CAST(vt1.c0 AS INTEGER))))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST, ((vt1.c0 COLLATE BINARY) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((vt1.c0)<(vt0.c1))) IS TRUE) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST, ((vt1.c0 COLLATE BINARY) IS TRUE)  NULLS LAST INTERSECT SELECT * FROM vt1, vt0 WHERE ((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(x''))))!=((CAST(vt1.c0 AS INTEGER))))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST, ((vt1.c0 COLLATE BINARY) IS TRUE)  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)AND(((CAST(vt0.c0 AS TEXT))<<(vt0.c1))))) INTERSECT SELECT * FROM vt1, vt0 WHERE (-1.686332408E9);
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)AND(((CAST(vt0.c0 AS TEXT))<<(vt0.c1))))) INTERSECT SELECT * FROM vt1, vt0 WHERE (-1.686332408E9);
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)||(vt0.c0)) IN ((vt0.c0 IN ()), vt0.c1 COLLATE RTRIM)) WHERE ((((((vt0.c0))=((x'08')))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1)||(0Xffffffffb08cf9eb))))) ORDER BY vt1.c0 DESC  NULLS LAST, x''  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)||(vt0.c0)) IN ((vt0.c0 IN ()), vt0.c1 COLLATE RTRIM)) WHERE ((((((vt0.c0))==((x'08')))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1)||(-1332938261))))) ORDER BY vt1.c0 DESC  NULLS LAST, x''  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)||(vt0.c0)) IN ((vt0.c0 IN ()), vt0.c1 COLLATE RTRIM)) WHERE ((((((vt0.c0))=((x'08')))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1)||(0Xffffffffb08cf9eb))))) ORDER BY vt1.c0 DESC  NULLS LAST, x''  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)||(vt0.c0)) IN ((vt0.c0 IN ()), vt0.c1 COLLATE RTRIM)) WHERE ((((((vt0.c0))==((x'08')))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1)||(-1332938261))))) ORDER BY vt1.c0 DESC  NULLS LAST, x''  NULLS FIRST;
SELECT MIN(vt1.c0) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c1) NOTNULL)) NOT BETWEEN ((('1700772375') BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c1) ISNULL)))) ORDER BY (((0.6219261761329324)) BETWEEN ((((vt1.c0)-(vt0.c0)))) AND ((NULL))), ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) NOT NULL)  NULLS LAST;
SELECT ALL MIN(vt1.c0) FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt0.c1) NOTNULL)) NOT BETWEEN ((('1700772375') BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c1) ISNULL))))AND((NOT (vt1.c0))))) ORDER BY (((0.6219261761329324)) BETWEEN ((((vt1.c0)-(vt0.c0)))) AND ((NULL))), ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) NOT NULL)  NULLS LAST LIMIT 0x1 INTERSECT SELECT MIN(vt1.c0) FROM vt1 NATURAL JOIN vt0 WHERE (CAST((vt0.c1 IN (vt1.c0)) AS INTEGER)) ORDER BY (((0.6219261761329324)) BETWEEN ((((vt1.c0)-(vt0.c0)))) AND ((NULL))), ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) NOT NULL)  NULLS LAST LIMIT 0X1;
SELECT COUNT(*) FROM vt0 WHERE ('0.7603792470194533') ORDER BY ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0 COLLATE NOCASE)) ASC, ((((vt0.c1)|(vt0.c1))) IS FALSE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((('0.7603792470194533')AND(NULL COLLATE NOCASE))) ORDER BY ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0 COLLATE NOCASE)) ASC, ((((vt0.c1)|(vt0.c1))) IS FALSE) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)=(vt0.c1)) AS NUMERIC)) ORDER BY ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0 COLLATE NOCASE)) ASC, ((((vt0.c1)|(vt0.c1))) IS FALSE) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'a43c9a62' THEN vt1.c0 END) NOTNULL) DESC  NULLS LAST, CASE ((vt1.c0)<<('-669325256'))  WHEN x'' THEN DATE(vt1.c0, vt1.c0, vt1.c0) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) WHEN (vt1.c0 IN ()) THEN (((0.5921625525649123)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN LIKELIHOOD(DISTINCT vt1.c0, vt1.c0) THEN (((vt1.c0, vt1.c0))=((vt1.c0, vt1.c0))) WHEN highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0) THEN 0.8307455197891692 ELSE (('弚0Ed]>''^') BETWEEN (vt1.c0) AND (vt1.c0)) END ASC LIMIT 0X1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'a43c9a62' THEN vt1.c0 END) NOTNULL) DESC  NULLS LAST, CASE ((vt1.c0)<<('-669325256'))  WHEN x'' THEN DATE(vt1.c0, vt1.c0, vt1.c0) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) WHEN (vt1.c0 IN ()) THEN (((0.5921625525649123)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN LIKELIHOOD(DISTINCT vt1.c0, vt1.c0) THEN (((vt1.c0, vt1.c0))=((vt1.c0, vt1.c0))) WHEN highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0) THEN 0.8307455197891692 ELSE (('弚0Ed]>''^') BETWEEN (vt1.c0) AND (vt1.c0)) END ASC LIMIT 0X1;
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE (COALESCE(vt0.c1, ((vt1.c0)/(vt1.c0)), (~ (vt1.c0)))) ORDER BY (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))))  NULLS FIRST, CASE WHEN (vt0.c0 IN ()) THEN ABS(vt1.c0) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN (+ (vt0.c0)) THEN ((vt0.c0)>=(vt0.c1)) END;
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 WHERE (((COALESCE(vt0.c1, ((vt1.c0)/(vt1.c0)), (~ (vt1.c0))))AND(((COALESCE(vt1.c0, vt1.c0, vt0.c1))LIKE(UPPER(DISTINCT vt0.c0)))))) ORDER BY (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))))  NULLS FIRST, CASE WHEN (vt0.c0 IN ()) THEN ABS(vt1.c0) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN (+ (vt0.c0)) THEN ((vt0.c0)>=(vt0.c1)) END;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT NULL))=((((vt0.c1))<=((vt0.c0))))));
SELECT * FROM vt0 WHERE (((((((vt0.c1) NOT NULL))==((((vt0.c1))<=((vt0.c0))))))AND((((vt0.c1) NOTNULL) IN ())))) ORDER BY CASE WHEN (((NULL, vt0.c0))<=((vt0.c0, vt0.c0))) THEN 0.6440139258552643 END DESC  NULLS FIRST, CAST(((x'') BETWEEN (vt0.c1) AND (vt0.c0)) AS REAL);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT NULL))=((((vt0.c1))<=((vt0.c0))))));
SELECT * FROM vt0 WHERE (((((((vt0.c1) NOT NULL))==((((vt0.c1))<=((vt0.c0))))))AND((((vt0.c1) NOTNULL) IN ())))) ORDER BY CASE WHEN (((NULL, vt0.c0))<=((vt0.c0, vt0.c0))) THEN 0.6440139258552643 END DESC  NULLS FIRST, CAST(((x'') BETWEEN (vt0.c1) AND (vt0.c0)) AS REAL);
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (HEX(DISTINCT vt1.c0) COLLATE BINARY);
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (HEX(DISTINCT vt1.c0) COLLATE BINARY) ORDER BY json_array_length((((vt1.c0, x'f5b0', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS NUMERIC))  NULLS LAST INTERSECT SELECT MAX(vt1.c0) FROM vt1 WHERE (json_array(TRIM(vt1.c0), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY json_array_length((((vt1.c0, x'f5b0', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS NUMERIC))  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CASE vt1.c0  WHEN TRIM(vt1.c0) THEN vt1.c0 COLLATE NOCASE END);
SELECT MAX(vt1.c0) FROM vt1 WHERE (CASE vt1.c0  WHEN TRIM(vt1.c0) THEN vt1.c0 COLLATE NOCASE END);
SELECT ALL * FROM vt0 WHERE ('6-');
SELECT DISTINCT * FROM vt0 WHERE ('6-') LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1)*(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) LIMIT 3;
SELECT ALL * FROM vt0 WHERE ('6-');
SELECT DISTINCT * FROM vt0 WHERE ('6-') LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1)*(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) LIMIT 3;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ('-1096545910');
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ('-1096545910') ORDER BY ((vt0.c1 COLLATE RTRIM)AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST, (((- (vt0.c0))) BETWEEN (x'') AND (((((((((((((((vt0.c1)AND('-529809639')))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))>=(vt0.c1))) ORDER BY ((vt0.c1 COLLATE RTRIM)AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST, (((- (vt0.c0))) BETWEEN (x'') AND (((((((((((((((vt0.c1)AND('-529809639')))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN vt0 ON (+ (vt1.c0)) COLLATE BINARY WHERE (CASE 0.6549450423695943  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END COLLATE BINARY) ORDER BY ((((vt0.c0 IN ())))>((vt0.c1 COLLATE NOCASE)))  NULLS FIRST, (vt1.c0 IN ());
SELECT * FROM vt1 CROSS JOIN vt0 ON (+ (vt1.c0)) COLLATE BINARY WHERE (((CASE 0.6549450423695943  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END COLLATE BINARY)AND(NULL))) ORDER BY ((((vt0.c0 IN ())))>((vt0.c1 COLLATE NOCASE)))  NULLS FIRST, (vt1.c0 IN ()) LIMIT 0X3;
SELECT * FROM vt1 CROSS JOIN vt0 ON (+ (vt1.c0)) COLLATE BINARY WHERE (CASE 0.6549450423695943  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END COLLATE BINARY) ORDER BY ((((vt0.c0 IN ())))>((vt0.c1 COLLATE NOCASE)))  NULLS FIRST, (vt1.c0 IN ());
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) IS TRUE))));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((((~ (((vt1.c0) IS TRUE))))AND((((LENGTH(vt1.c0), (+ (vt1.c0)), 0.19905626026408818))<>((((vt1.c0)AND(vt1.c0)), vt1.c0 COLLATE NOCASE, ((vt1.c0)+(vt1.c0)))))))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((json_valid(vt1.c0))==((NOT (vt1.c0))))) LIMIT 0X0;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CAST(NULL AS REAL)) ORDER BY ((NULL)/(((((0.6419836691582796)AND(vt1.c0)))AND(vt1.c0)))) DESC  NULLS LAST, ((CAST(vt1.c0 AS INTEGER)) NOTNULL) DESC;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CAST(NULL AS REAL)) ORDER BY ((NULL)/(((((0.6419836691582796)AND(vt1.c0)))AND(vt1.c0)))) DESC  NULLS LAST, ((CAST(vt1.c0 AS INTEGER)) NOTNULL) DESC LIMIT 3 INTERSECT SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((((((vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0))))GLOB((((vt1.c0))>=((NULL)))))) ORDER BY ((NULL)/(((((0.6419836691582796)AND(vt1.c0)))AND(vt1.c0)))) DESC  NULLS LAST, ((CAST(vt1.c0 AS INTEGER)) NOTNULL) DESC LIMIT 0x3;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c0)AND(vt0.c1)))AND(NULL)))OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((vt1.c0)|(vt0.c1)) COLLATE BINARY  NULLS LAST;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c0)AND(vt0.c1)))AND(NULL)))OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((((vt0.c1)GLOB(vt0.c1)))GLOB(((vt0.c1)IS(vt0.c0)))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c0)AND(vt0.c1)))AND(NULL)))OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM WHERE ((((vt0.c0, 0.2587280568103655, NULL, vt1.c0)) NOT BETWEEN ((vt0.c0, x'a08d', vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0, vt1.c0))) COLLATE BINARY) ORDER BY ((((vt0.c1)GLOB(vt0.c1)))GLOB(((vt0.c1)IS(vt0.c0)))) LIMIT 0X0;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c0)AND(vt0.c1)))AND(NULL)))OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((vt1.c0)|(vt0.c1)) COLLATE BINARY  NULLS LAST;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c0)AND(vt0.c1)))AND(NULL)))OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((((vt0.c1)GLOB(vt0.c1)))GLOB(((vt0.c1)IS(vt0.c0)))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c0)AND(vt0.c1)))AND(NULL)))OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM WHERE ((((vt0.c0, 0.2587280568103655, NULL, vt1.c0)) NOT BETWEEN ((vt0.c0, x'a08d', vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0, vt1.c0))) COLLATE BINARY) ORDER BY ((((vt0.c1)GLOB(vt0.c1)))GLOB(((vt0.c1)IS(vt0.c0)))) LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(0.7412819312063617 AS TEXT)) ORDER BY ((((vt0.c0)AND(vt0.c0)))>=(((x'')LIKE(vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(0.7412819312063617 AS TEXT)) ORDER BY ((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))LIKE(((vt0.c1) BETWEEN ('1585767186') AND (vt1.c0)))), vt0.c1 LIMIT 2;
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE (((vt1.c0)||(((vt0.c0)||(vt0.c1)))));
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (((vt1.c0)||(((vt0.c0)||(vt0.c1))))) LIMIT 0;
SELECT ALL * FROM vt0 WHERE ((- ((x'78' IN (vt0.c0, vt0.c0)))));
SELECT * FROM vt0 WHERE ((((- ((x'78' IN (vt0.c0, vt0.c0)))))AND(CAST(vt0.c1 AS INTEGER) COLLATE NOCASE))) ORDER BY vt0.c0 ASC, 'G<3UgX' ASC, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<>(((vt0.c1) ISNULL)))  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((vt0.c1) NOT NULL) WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) THEN (('ಧI5~,''r')&(vt0.c0)) END) ORDER BY vt0.c0 ASC, 'G<3UgX' ASC, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<>(((vt0.c1) ISNULL)))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE ((- ((x'78' IN (vt0.c0, vt0.c0)))));
SELECT * FROM vt0 WHERE ((((- ((x'78' IN (vt0.c0, vt0.c0)))))AND(CAST(vt0.c1 AS INTEGER) COLLATE NOCASE))) ORDER BY vt0.c0 ASC, 'G<3UgX' ASC, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<>(((vt0.c1) ISNULL)))  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((vt0.c1) NOT NULL) WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) THEN (('ಧI5~,''r')&(vt0.c0)) END) ORDER BY vt0.c0 ASC, 'G<3UgX' ASC, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<>(((vt0.c1) ISNULL)))  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0 CROSS JOIN vt1 ON vt1.c0 WHERE (((((((highlight(vt0.c1, vt0.c0, vt0.c0, vt1.c0))OR((~ (vt0.c0)))))AND(((vt1.c0)==(vt0.c0)))))AND(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt1.c0 COLLATE NOCASE DESC  NULLS FIRST, ((((0.5503675498991649)||(vt0.c1)))==(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)) ASC  NULLS FIRST, vt0.c0 DESC;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON vt1.c0 WHERE (((((((highlight(vt0.c1, vt0.c0, vt0.c0, vt1.c0))OR((~ (vt0.c0)))))AND(((vt1.c0)=(vt0.c0)))))AND(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (('(HX꟡') BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE BINARY, ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (LTRIM(vt0.c0)) AND ((~ (vt0.c1)))) DESC LIMIT 0x1;
SELECT * FROM vt0 CROSS JOIN vt1 ON vt1.c0 WHERE (((((((highlight(vt0.c1, vt0.c0, vt0.c0, vt1.c0))OR((~ (vt0.c0)))))AND(((vt1.c0)==(vt0.c0)))))AND(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt1.c0 COLLATE NOCASE DESC  NULLS FIRST, ((((0.5503675498991649)||(vt0.c1)))==(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)) ASC  NULLS FIRST, vt0.c0 DESC;
SELECT * FROM vt1 WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT ALL * FROM vt1 WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT * FROM vt1 WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT ALL * FROM vt1 WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (0.21979706028571222) AND (((vt1.c0) NOTNULL)))) ORDER BY CAST(vt1.c0 AS TEXT)  NULLS FIRST, CASE ((0.0024974586684113342) NOT BETWEEN (vt1.c0) AND (NULL))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN CASE WHEN vt1.c0 THEN '%M-HOURS2' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END ELSE (~ (vt1.c0)) END, (+ ((+ (vt1.c0))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (0.21979706028571222) AND (((vt1.c0) NOTNULL)))) ORDER BY ((((vt1.c0)<=(x'6d')))<>((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))))  NULLS LAST, CAST(vt1.c0 AS INTEGER) COLLATE NOCASE  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)/(vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0)%(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CAST(vt1.c0 AS INTEGER) END) ORDER BY ((((vt1.c0)<=(x'6d')))<>((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))))  NULLS LAST, CAST(vt1.c0 AS INTEGER) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (TYPEOF(DISTINCT vt1.c0))), (((~ (vt0.c0)))||(CAST(vt0.c1 AS BLOB))), (((+ (vt0.c1)))IS(((vt1.c0)>=(vt0.c0)))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY MAX(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)), (('0.06364580930239094')<=(vt0.c0)))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (TYPEOF(DISTINCT vt1.c0))), (((~ (vt0.c0)))||(CAST(vt0.c1 AS BLOB))), (((+ (vt0.c1)))IS(((vt1.c0)>=(vt0.c0)))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY MAX(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)), (('0.06364580930239094')<=(vt0.c0)))  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (vt0.c1);
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((vt0.c1)AND(CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((((((('P*5?')AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) THEN (+ (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))=((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0))) WHEN ((vt0.c0)/(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c0) NOTNULL) ELSE vt0.c1 COLLATE RTRIM END))) ORDER BY vt0.c0, ((((vt0.c0) NOTNULL))>>(((vt0.c0)*(vt0.c0)))) DESC  NULLS FIRST, ((((NULL COLLATE NOCASE)AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))AND(vt0.c1));
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE (STRFTIME(ABS(vt1.c0), json_type(vt0.c1), ((((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c0))));
SELECT MAX(vt0.c0) FROM vt1, vt0 WHERE (STRFTIME(ABS(vt1.c0), json_type(vt0.c1), ((((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c0)))) LIMIT 4;
SELECT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY)||(vt1.c0))) ORDER BY CASE (((vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c0)))  WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN 'T' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN ((vt0.c1) IS TRUE) THEN ((vt0.c1)>=(vt1.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c1 AS TEXT) WHEN vt0.c1 COLLATE RTRIM THEN ((vt1.c0) NOTNULL) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt1.c0, vt1.c0))>((vt0.c0, vt1.c0))) END DESC  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY)||(vt1.c0))) ORDER BY CASE (((vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c0)))  WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN 'T' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN ((vt0.c1) IS TRUE) THEN ((vt0.c1)>=(vt1.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c1 AS TEXT) WHEN vt0.c1 COLLATE RTRIM THEN ((vt1.c0) NOTNULL) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt1.c0, vt1.c0))>((vt0.c0, vt1.c0))) END DESC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY)||(vt1.c0))) ORDER BY CASE (((vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c0)))  WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN 'T' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN ((vt0.c1) IS TRUE) THEN ((vt0.c1)>=(vt1.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c1 AS TEXT) WHEN vt0.c1 COLLATE RTRIM THEN ((vt1.c0) NOTNULL) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt1.c0, vt1.c0))>((vt0.c0, vt1.c0))) END DESC  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY)||(vt1.c0))) ORDER BY CASE (((vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c0)))  WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN 'T' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN ((vt0.c1) IS TRUE) THEN ((vt0.c1)>=(vt1.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c1 AS TEXT) WHEN vt0.c1 COLLATE RTRIM THEN ((vt1.c0) NOTNULL) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt1.c0, vt1.c0))>((vt0.c0, vt1.c0))) END DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (LIKELY(DISTINCT ((vt0.c1)>>(vt1.c0)))) ORDER BY NULL  NULLS LAST, CAST(NULL AS INTEGER) COLLATE RTRIM DESC  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (LIKELY(DISTINCT ((vt0.c1)>>(vt1.c0)))) ORDER BY NULL  NULLS LAST, CAST(NULL AS INTEGER) COLLATE RTRIM DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt1.c0)||(vt0.c0)))<<(((vt1.c0)||(NULL))))) ORDER BY NULL  NULLS LAST, CAST(NULL AS INTEGER) COLLATE RTRIM DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt1, vt0 WHERE (LIKELY(DISTINCT ((vt0.c1)>>(vt1.c0)))) ORDER BY NULL  NULLS LAST, CAST(NULL AS INTEGER) COLLATE RTRIM DESC  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (LIKELY(DISTINCT ((vt0.c1)>>(vt1.c0)))) ORDER BY NULL  NULLS LAST, CAST(NULL AS INTEGER) COLLATE RTRIM DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt1.c0)||(vt0.c0)))<<(((vt1.c0)||(NULL))))) ORDER BY NULL  NULLS LAST, CAST(NULL AS INTEGER) COLLATE RTRIM DESC  NULLS LAST LIMIT 0X0;
SELECT MAX(vt1.c0) FROM vt1 INNER JOIN vt0 ON (((+ (vt0.c0)))=(((vt1.c0)&(0xffffffff85f69d56)))) WHERE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt0.c1) NOT BETWEEN ('B') AND ('r')), vt0.c1, (((vt0.c0, x'5429')) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1))), (vt0.c0 IN (vt0.c0))))>(((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), vt0.c0, CAST(vt0.c1 AS REAL), CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)==(vt1.c0))))));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 INNER JOIN vt0 ON (((+ (vt0.c0)))==(((vt1.c0)&(-2047435434)))) WHERE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt0.c1) NOT BETWEEN ('B') AND ('r')), vt0.c1, (((vt0.c0, x'5429')) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1))), (vt0.c0 IN (vt0.c0))))>(((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), vt0.c0, CAST(vt0.c1 AS REAL), CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)=(vt1.c0))))));
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((vt0.c1)AND(SQLITE_COMPILEOPTION_USED((vt0.c1 IN (vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))*((NOT (vt0.c1)))) WHERE (CAST(vt1.c0 AS REAL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED CROSS JOIN vt1 ON ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))*((NOT (vt0.c1)))) WHERE (CAST(vt1.c0 AS REAL) COLLATE BINARY) LIMIT 0x1;
SELECT ALL MAX(vt0.c0) FROM vt1 LEFT OUTER JOIN vt0 ON (+ ((vt0.c0 IN ()))) WHERE ((CAST(vt0.c1 AS REAL) IN (((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)), ((vt0.c1) NOTNULL)))) ORDER BY x'03' DESC;
SELECT DISTINCT MAX(vt0.c0) FROM vt1 LEFT OUTER JOIN vt0 ON (+ ((vt0.c0 IN ()))) WHERE ((((CAST(vt0.c1 AS REAL) IN (((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)), ((vt0.c1) NOTNULL))))AND(NULL))) ORDER BY x'03' DESC INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt1 LEFT OUTER JOIN vt0 ON (+ ((vt0.c0 IN ()))) WHERE (vt0.c0) ORDER BY x'03' DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN LIKE(vt0.c1, '?', '3') THEN ((vt0.c0)AND(vt0.c0)) WHEN (vt0.c1 IN ()) THEN (~ (vt0.c0)) WHEN (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END) ORDER BY TYPEOF(((vt1.c0)>(vt0.c1))) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN LIKE(vt0.c1, '?', '3') THEN ((vt0.c0)AND(vt0.c0)) WHEN (vt0.c1 IN ()) THEN (~ (vt0.c0)) WHEN (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END) ORDER BY TYPEOF(((vt1.c0)>(vt0.c1))) DESC LIMIT 0X3;
SELECT ALL * FROM vt1, vt0 WHERE ('
먗~OCo8I~');
SELECT DISTINCT * FROM vt1, vt0 WHERE ((('
먗~OCo8I~')AND((+ (CAST(vt0.c1 AS TEXT))))));
SELECT ALL * FROM vt1, vt0 WHERE ('
먗~OCo8I~');
SELECT DISTINCT * FROM vt1, vt0 WHERE ((('
먗~OCo8I~')AND((+ (CAST(vt0.c1 AS TEXT))))));
SELECT MIN(vt0.c0) FROM vt1 NATURAL JOIN vt0 WHERE (CAST(((vt0.c1)GLOB(vt0.c1)) AS INTEGER));
SELECT DISTINCT MIN(vt0.c0) FROM vt1 NATURAL JOIN vt0 WHERE (CAST(((vt0.c1)GLOB(vt0.c1)) AS INTEGER)) ORDER BY '499733756' DESC LIMIT 0;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY TIME((('0.8617019709182995') IS TRUE), ((vt1.c0)!=(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))), ((NULL) NOTNULL) COLLATE BINARY;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((((NULL)AND(CAST(vt1.c0 AS NUMERIC))))OR(((vt1.c0)>=(vt1.c0)))))AND(NULL)))AND(COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0))))OR(vt1.c0)) DESC INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (json_quote((- (vt1.c0)))) ORDER BY ((((((((((NULL)AND(CAST(vt1.c0 AS NUMERIC))))OR(((vt1.c0)>=(vt1.c0)))))AND(NULL)))AND(COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0))))OR(vt1.c0)) DESC;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (CAST(((vt1.c0)<(vt1.c0)) AS INTEGER)) ORDER BY ((UPPER(vt1.c0))*(((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL) DESC  NULLS LAST;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((CAST(((vt1.c0)<(vt1.c0)) AS INTEGER))AND((((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0 COLLATE NOCASE)) AND (((+ (vt1.c0)), '')))))) ORDER BY (- (vt1.c0)) COLLATE BINARY ASC  NULLS LAST LIMIT 1 INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1 WHERE ((((vt1.c0, vt1.c0)) BETWEEN ((x'8d', (- (1262217373)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0 COLLATE NOCASE)))) ORDER BY (- (vt1.c0)) COLLATE BINARY ASC  NULLS LAST LIMIT 0X1;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)>(vt0.c1))) IS TRUE)) ORDER BY ((((vt1.c0)*(vt0.c0)))IS NOT(((0.12545725151083575) IS FALSE))) ASC, (((~ (vt0.c0)))LIKE((((vt0.c1))<>((vt0.c0))))) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0)>(vt0.c1))) IS TRUE))AND(NULL))) ORDER BY ((((vt1.c0)*(vt0.c0)))IS NOT(((0.12545725151083575) IS FALSE))) ASC, (((~ (vt0.c0)))LIKE((((vt0.c1))<>((vt0.c0))))) ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((NULL IN ())) ORDER BY ((((vt1.c0)*(vt0.c0)))IS NOT(((0.12545725151083575) IS FALSE))) ASC, (((~ (vt0.c0)))LIKE((((vt0.c1))!=((vt0.c0))))) ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM vt0, vt1 WHERE ((vt0.c0 IN (NULL)) COLLATE BINARY);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0 IN (NULL)) COLLATE BINARY)AND(CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)))) LIMIT 2;
SELECT ALL * FROM vt0, vt1 WHERE ((vt0.c0 IN (NULL)) COLLATE BINARY);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0 IN (NULL)) COLLATE BINARY)AND(CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)))) LIMIT 2;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LOWER(DISTINCT ((((((((vt1.c0)OR(vt0.c1)))OR(0.5763732994158528)))OR(vt0.c1)))AND(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((LOWER(DISTINCT ((((((((vt1.c0)OR(vt0.c1)))OR(0.5763732994158528)))OR(vt0.c1)))AND(vt1.c0))))AND((vt0.c1 IN (json_array(vt0.c1, vt1.c0, vt0.c1), CAST(vt0.c1 AS TEXT))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((((((((((((NULL)AND(vt0.c1)))AND(vt0.c0)))AND(x'8c')))OR(vt0.c0)))OR(vt0.c1)))AND('P!U3K 4'))  WHEN (((vt0.c1))<=((vt0.c0))) THEN '137702083' WHEN (((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1))) THEN 0X39522951 WHEN (0X75fe5f23 IN (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) ORDER BY (((vt0.c1, vt0.c1, vt0.c0, vt0.c1)) BETWEEN (('-788586773', vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'f726', -1933451997))) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE ((((((((((((NULL)AND(vt0.c1)))AND(vt0.c0)))AND(x'8c')))OR(vt0.c0)))OR(vt0.c1)))AND('P!U3K 4'))  WHEN (((vt0.c1))<=((vt0.c0))) THEN '137702083' WHEN (((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1))) THEN 0x39522951 WHEN (0x75fe5f23 IN (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) ORDER BY vt0.c1 ASC, ((vt0.c0 COLLATE NOCASE) ISNULL)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)GLOB('}ml~O')))AND((+ (vt0.c1))))) ORDER BY (((((vt0.c0)%(vt0.c1))))==((CAST(vt0.c1 AS BLOB)))) DESC, ((NULL) NOTNULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((vt0.c1)GLOB('}ml~O')))AND((+ (vt0.c1)))))AND(CASE ((NULL)<(vt0.c1))  WHEN ((0x5b15cce4) BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c1 COLLATE NOCASE WHEN (vt0.c1 IN ()) THEN (((((('')AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)%(NULL)) END))) ORDER BY 0.3060034680699638  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (((vt0.c1) BETWEEN (((vt0.c0)<(vt0.c0))) AND (LIKELIHOOD(DISTINCT vt0.c0, vt0.c1)))) ORDER BY 0.3060034680699638  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)GLOB('}ml~O')))AND((+ (vt0.c1))))) ORDER BY (((((vt0.c0)%(vt0.c1))))==((CAST(vt0.c1 AS BLOB)))) DESC, ((NULL) NOTNULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((vt0.c1)GLOB('}ml~O')))AND((+ (vt0.c1)))))AND(CASE ((NULL)<(vt0.c1))  WHEN ((0x5b15cce4) BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c1 COLLATE NOCASE WHEN (vt0.c1 IN ()) THEN (((((('')AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)%(NULL)) END))) ORDER BY 0.3060034680699638  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (((vt0.c1) BETWEEN (((vt0.c0)<(vt0.c0))) AND (LIKELIHOOD(DISTINCT vt0.c0, vt0.c1)))) ORDER BY 0.3060034680699638  NULLS LAST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CAST(((vt1.c0)>(vt1.c0)) AS REAL)) ORDER BY ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)LIKE(vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((CAST(((vt1.c0)>(vt1.c0)) AS REAL))AND(CASE 603025122  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 ELSE ((((((vt1.c0)AND(vt1.c0)))OR(-386688626)))AND(vt1.c0)) END))) ORDER BY ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)LIKE(vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))) ASC  NULLS FIRST LIMIT 0x3;
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))IS(vt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))IS(vt0.c1 COLLATE NOCASE))) LIMIT 0x0;
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))IS(vt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))IS(vt0.c1 COLLATE NOCASE))) LIMIT 0x0;
SELECT * FROM vt1, vt0 WHERE ((+ (COALESCE(vt0.c0, vt1.c0, vt0.c0, vt0.c1))));
SELECT * FROM vt1, vt0 WHERE ((+ (COALESCE(vt0.c0, vt1.c0, vt0.c0, vt0.c1)))) INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ((+ (((vt1.c0)OR(vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE ((+ (COALESCE(vt0.c0, vt1.c0, vt0.c0, vt0.c1))));
SELECT * FROM vt1, vt0 WHERE ((+ (COALESCE(vt0.c0, vt1.c0, vt0.c0, vt0.c1)))) INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ((+ (((vt1.c0)OR(vt1.c0)))));
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (vt1.c0);
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((vt1.c0)AND((- (((vt1.c0) ISNULL)))))) ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (0xffffffff957fbf03))  WHEN (- (vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN CASE '1423983451'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 WHEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN json_remove(vt1.c0, vt1.c0) END ASC, CAST(((NULL) NOTNULL) AS NUMERIC) DESC LIMIT 0x3 INTERSECT SELECT MAX(vt1.c0) FROM vt1 WHERE (-1.943074248E9) ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (-1786790141))  WHEN (- (vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN CASE '1423983451'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 WHEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN json_remove(vt1.c0, vt1.c0) END ASC, CAST(((NULL) NOTNULL) AS NUMERIC) DESC LIMIT 3;
SELECT MIN(vt1.c0) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)%(x'')))>((- (vt1.c0)))) WHERE (((((((((((vt0.c0) NOT NULL))OR(NULL)))AND((~ (vt1.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0)|(vt0.c0)))));
SELECT MIN(vt1.c0) FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)%(x'')))>((- (vt1.c0)))) WHERE (((((((((((vt0.c0) NOT NULL))OR(NULL)))AND((~ (vt1.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0)|(vt0.c0))))) ORDER BY json_remove(vt0.c1, vt1.c0) COLLATE BINARY  NULLS LAST, LIKE(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((x'') BETWEEN (0.6105609853430481) AND (vt1.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((NULLIF(vt0.c0, vt1.c0))IS((vt0.c1 IN (vt0.c0)))) WHERE ((((((((vt1.c0 IN ()))AND(((vt0.c0)<(vt1.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(CAST(vt1.c0 AS NUMERIC))));
SELECT DISTINCT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((NULLIF(vt0.c0, vt1.c0))IS((vt0.c1 IN (vt0.c0)))) WHERE ((((((((vt1.c0 IN ()))AND(((vt0.c0)<(vt1.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 WHERE (3.65792862E8);
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((3.65792862E8)AND((((~ (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))))) ORDER BY (~ ((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, x'09')) AND ((vt0.c1, vt0.c0))))) ASC INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((('1602474098')AND(TYPEOF(vt0.c0)))) ORDER BY (~ ((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, x'09')) AND ((vt0.c1, vt0.c0))))) ASC;
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (+ (vt1.c0))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0)AND(((json_type(vt1.c0)) BETWEEN ((((vt1.c0, '111420691', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '{', vt1.c0)))) AND ((- (vt1.c0))))))) ORDER BY (+ (vt1.c0))  NULLS LAST INTERSECT SELECT ALL * FROM vt1 WHERE (((('O}\?鈎첅'))=((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))) ORDER BY (+ (vt1.c0))  NULLS LAST;
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (+ (vt1.c0))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0)AND(((json_type(vt1.c0)) BETWEEN ((((vt1.c0, '111420691', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '{', vt1.c0)))) AND ((- (vt1.c0))))))) ORDER BY (+ (vt1.c0))  NULLS LAST INTERSECT SELECT ALL * FROM vt1 WHERE (((('O}\?鈎첅'))=((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))) ORDER BY (+ (vt1.c0))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((('')IS(vt0.c0)), ((x'')>(NULL)), (('-20816539') NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND (((((vt0.c1, vt0.c1, vt0.c0, vt0.c1, '1934281787', vt0.c1))=((vt1.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0))), ('-35870832' IN ()), (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, vt1.c0, vt0.c0))))))) ORDER BY ((vt0.c1) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE WHEN '489374913' THEN vt0.c1 END));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((('')IS(vt0.c0)), ((x'')>(NULL)), (('-20816539') NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND (((((vt0.c1, vt0.c1, vt0.c0, vt0.c1, '1934281787', vt0.c1))=((vt1.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0))), ('-35870832' IN ()), (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, vt1.c0, vt0.c0)))))))AND((((((vt0.c0))>=((vt0.c0)))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.39529774305954857)))))))) ORDER BY ((vt1.c0)LIKE(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY ((vt1.c0)LIKE(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((('')IS(vt0.c0)), ((x'')>(NULL)), (('-20816539') NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND (((((vt0.c1, vt0.c1, vt0.c0, vt0.c1, '1934281787', vt0.c1))=((vt1.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0))), ('-35870832' IN ()), (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, vt1.c0, vt0.c0))))))) ORDER BY ((vt0.c1) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE WHEN '489374913' THEN vt0.c1 END));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((('')IS(vt0.c0)), ((x'')>(NULL)), (('-20816539') NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND (((((vt0.c1, vt0.c1, vt0.c0, vt0.c1, '1934281787', vt0.c1))=((vt1.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0))), ('-35870832' IN ()), (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, vt1.c0, vt0.c0)))))))AND((((((vt0.c0))>=((vt0.c0)))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.39529774305954857)))))))) ORDER BY ((vt1.c0)LIKE(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY ((vt1.c0)LIKE(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)+(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))));
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)+(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))));
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)+(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))));
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)+(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))));
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT * FROM vt0, vt1 NOT INDEXED WHERE (((((vt0.c0) NOT NULL) COLLATE NOCASE)AND(CASE CASE WHEN vt1.c0 THEN vt0.c0 WHEN '-26781531' THEN vt0.c1 END  WHEN ((vt0.c1)AND(vt0.c0)) THEN ((vt1.c0) IS FALSE) WHEN vt1.c0 THEN ((((((((vt1.c0)AND(vt1.c0)))OR(0.767642353761802)))AND(vt0.c1)))OR(x'')) WHEN ((vt1.c0) NOTNULL) THEN ((vt0.c1) NOT NULL) END))) ORDER BY ((((vt0.c1)/(vt0.c1)))>(NULL))  NULLS FIRST, (((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((UPPER(vt1.c0), (((vt0.c1, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1))), (((vt1.c0, '-1132179664')) BETWEEN ((vt0.c1, x'')) AND (('-1118996378', '2018407589'))))) AND ((vt0.c0 COLLATE BINARY, ((vt0.c0)==(vt1.c0)), CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS FIRST INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c1)%(vt1.c0)) THEN vt0.c0 COLLATE NOCASE WHEN COALESCE(1.086688798E9, vt1.c0, vt1.c0) THEN ((vt0.c1) IS TRUE) WHEN UNICODE(vt0.c1) THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) WHEN ((vt1.c0)LIKE(NULL)) THEN json_remove(0xffffffffc66bb1cb, vt0.c1) ELSE SUBSTR(vt0.c0, vt0.c1) END) ORDER BY ((((vt0.c1)/(vt0.c1)))>(NULL))  NULLS FIRST, (((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((UPPER(vt1.c0), (((vt0.c1, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1))), (((vt1.c0, '-1132179664')) BETWEEN ((vt0.c1, x'')) AND (('-1118996378', '2018407589'))))) AND ((vt0.c0 COLLATE BINARY, ((vt0.c0)=(vt1.c0)), CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT * FROM vt0, vt1 NOT INDEXED WHERE (((((vt0.c0) NOT NULL) COLLATE NOCASE)AND(CASE CASE WHEN vt1.c0 THEN vt0.c0 WHEN '-26781531' THEN vt0.c1 END  WHEN ((vt0.c1)AND(vt0.c0)) THEN ((vt1.c0) IS FALSE) WHEN vt1.c0 THEN ((((((((vt1.c0)AND(vt1.c0)))OR(0.767642353761802)))AND(vt0.c1)))OR(x'')) WHEN ((vt1.c0) NOTNULL) THEN ((vt0.c1) NOT NULL) END))) ORDER BY ((((vt0.c1)/(vt0.c1)))>(NULL))  NULLS FIRST, (((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((UPPER(vt1.c0), (((vt0.c1, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1))), (((vt1.c0, '-1132179664')) BETWEEN ((vt0.c1, x'')) AND (('-1118996378', '2018407589'))))) AND ((vt0.c0 COLLATE BINARY, ((vt0.c0)==(vt1.c0)), CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS FIRST INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c1)%(vt1.c0)) THEN vt0.c0 COLLATE NOCASE WHEN COALESCE(1.086688798E9, vt1.c0, vt1.c0) THEN ((vt0.c1) IS TRUE) WHEN UNICODE(vt0.c1) THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) WHEN ((vt1.c0)LIKE(NULL)) THEN json_remove(0xffffffffc66bb1cb, vt0.c1) ELSE SUBSTR(vt0.c0, vt0.c1) END) ORDER BY ((((vt0.c1)/(vt0.c1)))>(NULL))  NULLS FIRST, (((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((UPPER(vt1.c0), (((vt0.c1, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1))), (((vt1.c0, '-1132179664')) BETWEEN ((vt0.c1, x'')) AND (('-1118996378', '2018407589'))))) AND ((vt0.c0 COLLATE BINARY, ((vt0.c0)=(vt1.c0)), CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS FIRST;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN '{]sa{/>t' THEN vt0.c0 END IN ()));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN '{]sa{/>t' THEN vt0.c0 END IN ())) LIMIT 0X1;
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE (x'04') ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c1)<<(vt0.c1))) AND (vt0.c1))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (((x'04')AND((~ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE x'76' END))))) ORDER BY ABS(vt1.c0)  NULLS LAST, CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS TEXT) DESC  NULLS FIRST, CAST(vt0.c0 AS REAL) DESC  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0, vt0.c0) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, vt0.c0) COLLATE BINARY)AND((((vt0.c1, vt0.c1, vt0.c0, vt0.c1, 0.47612352475259))<((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM))) ORDER BY (+ (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))), (CAST(vt0.c0 AS REAL) IN (vt0.c0 COLLATE RTRIM, CAST(0Xffffffffbea4098a AS BLOB))), CASE ((vt0.c0)<<(vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END END DESC  NULLS FIRST INTERSECT SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS BLOB)) ORDER BY (+ (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))), (CAST(vt0.c0 AS REAL) IN (vt0.c0 COLLATE RTRIM, CAST(-1096545910 AS BLOB))), CASE ((vt0.c0)<<(vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (NULLIF(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (NULLIF(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))));
SELECT MAX(vt1.c0) FROM vt1 WHERE ((((vt1.c0))<>((vt1.c0))) COLLATE NOCASE) ORDER BY CASE (NOT (vt1.c0))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, x'')) BETWEEN ((vt1.c0, vt1.c0, '740240026', vt1.c0, 0.70299745493256)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, x''))) WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) END ASC  NULLS LAST, ((vt1.c0) IS TRUE) COLLATE NOCASE  NULLS FIRST;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0))) COLLATE NOCASE)AND((((vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt1.c0)OR(vt1.c0)), NULL)))))) ORDER BY LIKELIHOOD(vt1.c0, vt1.c0) COLLATE BINARY DESC  NULLS LAST, (((x'' IN ())) NOT NULL) DESC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY LIKELIHOOD(vt1.c0, vt1.c0) COLLATE BINARY DESC  NULLS LAST, (((x'' IN ())) NOT NULL) DESC  NULLS FIRST LIMIT 0x1;
SELECT MAX(vt1.c0) FROM vt1 WHERE ((((~ (vt1.c0))) NOTNULL));
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((((((~ (vt1.c0))) NOTNULL))AND((+ (((('213797321', vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), CAST('7|' AS BLOB), ((((vt1.c0)OR(x'70')))AND('>{')))) AND (((NOT (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ()))))  NULLS LAST, (((((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))*(vt1.c0 COLLATE NOCASE)) DESC INTERSECT SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (vt1.c0) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), CAST('7|' AS BLOB), ((((vt1.c0)OR(x'70')))AND('>{')))) AND (((NOT (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ()))))  NULLS LAST, (((((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))))*(vt1.c0 COLLATE NOCASE)) DESC;
SELECT MIN(vt0.c0) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0, x'bddc', vt0.c0, NULL, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))) COLLATE NOCASE DESC  NULLS LAST, CAST((((NULL, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN (('gSR}''OJ', vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.3930655880968644, x''))) AS INTEGER)  NULLS LAST;
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((vt0.c1)AND(((((((((((vt0.c1) ISNULL))AND((vt0.c0 IN (vt0.c0, vt0.c1)))))AND(vt0.c0 COLLATE RTRIM)))OR(TRIM(vt0.c0, vt0.c0))))AND(CAST('-2130026726' AS REAL)))))) ORDER BY (((vt0.c1 IN (vt0.c1)))>>(CAST(vt0.c1 AS TEXT)))  NULLS LAST, ((((((vt0.c0)OR(((0.486600287281594)IS(vt0.c1)))))OR(CAST(vt0.c1 AS TEXT))))AND(vt0.c1)) DESC LIMIT 0 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0) NOT NULL), SQLITE_SOURCE_ID())) AND (((((vt0.c1))>((vt0.c0))), ((vt0.c1)>=(vt0.c1)), (NOT (vt0.c1)), ((NULL)<=(vt0.c0)))))) ORDER BY (((vt0.c1 IN (vt0.c1)))>>(CAST(vt0.c1 AS TEXT)))  NULLS LAST, ((((((vt0.c0)OR(((0.486600287281594)IS(vt0.c1)))))OR(CAST(vt0.c1 AS TEXT))))AND(vt0.c1)) DESC LIMIT 0;
SELECT ALL * FROM vt1 WHERE (((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOTNULL)) ORDER BY (- ((vt1.c0 IN (x'8f85'))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOTNULL))AND((~ (((vt1.c0)||(vt1.c0))))))) ORDER BY ((vt1.c0) NOT NULL) COLLATE NOCASE ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY ((vt1.c0) NOT NULL) COLLATE NOCASE ASC LIMIT 0x1;
SELECT ALL * FROM vt1 WHERE (((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOTNULL)) ORDER BY (- ((vt1.c0 IN (x'8f85'))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOTNULL))AND((~ (((vt1.c0)||(vt1.c0))))))) ORDER BY ((vt1.c0) NOT NULL) COLLATE NOCASE ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY ((vt1.c0) NOT NULL) COLLATE NOCASE ASC LIMIT 0x1;
SELECT * FROM vt1, vt0 WHERE (ABS(DISTINCT vt0.c0 COLLATE BINARY));
SELECT ALL * FROM vt1, vt0 WHERE (ABS(DISTINCT vt0.c0 COLLATE BINARY)) LIMIT 0x0 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ('䝜X''m&U&뼙') LIMIT 0x0;
SELECT * FROM vt1, vt0 WHERE (ABS(DISTINCT vt0.c0 COLLATE BINARY));
SELECT ALL * FROM vt1, vt0 WHERE (ABS(DISTINCT vt0.c0 COLLATE BINARY)) LIMIT 0x0 INTERSECT SELECT ALL * FROM vt1, vt0 WHERE ('䝜X''m&U&뼙') LIMIT 0x0;
SELECT * FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY))<=(((vt1.c0 IN (0.012096685711577626, vt1.c0)))))) ORDER BY (((NOT (vt1.c0))) IS FALSE), ((((vt1.c0)=(vt1.c0))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)||(vt1.c0)))) ASC, ((TRIM(vt1.c0, vt1.c0))>=(0.2879219218478474)) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY))=(((vt1.c0 IN (0.012096685711577626, vt1.c0)))))) ORDER BY (((NOT (vt1.c0))) IS FALSE), ((((vt1.c0)==(vt1.c0))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)||(vt1.c0)))) ASC, ((TRIM(vt1.c0, vt1.c0))>=(0.2879219218478474)) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY))<=(((vt1.c0 IN (0.012096685711577626, vt1.c0)))))) ORDER BY (((NOT (vt1.c0))) IS FALSE), ((((vt1.c0)=(vt1.c0))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)||(vt1.c0)))) ASC, ((TRIM(vt1.c0, vt1.c0))>=(0.2879219218478474)) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY))=(((vt1.c0 IN (0.012096685711577626, vt1.c0)))))) ORDER BY (((NOT (vt1.c0))) IS FALSE), ((((vt1.c0)==(vt1.c0))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)||(vt1.c0)))) ASC, ((TRIM(vt1.c0, vt1.c0))>=(0.2879219218478474)) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ('-35870832');
SELECT * FROM vt0, vt1 WHERE ('-35870832');
SELECT ALL * FROM vt0, vt1 WHERE ('-35870832');
SELECT * FROM vt0, vt1 WHERE ('-35870832');
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c1)IS NOT(vt1.c0)))))OR(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))))OR(CAST(vt1.c0 AS NUMERIC))))OR(CAST(vt0.c1 AS TEXT))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c1)IS NOT(vt1.c0)))))OR(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))))OR(CAST(vt1.c0 AS NUMERIC))))OR(CAST(vt0.c1 AS TEXT)))) ORDER BY ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)-(load_extension(vt1.c0)))  NULLS LAST, (+ (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) DESC, ((((((((vt1.c0 COLLATE BINARY)OR(((vt1.c0) ISNULL))))OR(((vt1.c0)<>(vt1.c0)))))OR(CAST(vt1.c0 AS BLOB))))AND((((vt1.c0, vt0.c1, vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c1)) AND ((vt1.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c1))))) ASC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c1)IS NOT(vt1.c0)))))OR(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))))OR(CAST(vt1.c0 AS NUMERIC))))OR(CAST(vt0.c1 AS TEXT))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c1)IS NOT(vt1.c0)))))OR(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))))OR(CAST(vt1.c0 AS NUMERIC))))OR(CAST(vt0.c1 AS TEXT)))) ORDER BY ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)-(load_extension(vt1.c0)))  NULLS LAST, (+ (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) DESC, ((((((((vt1.c0 COLLATE BINARY)OR(((vt1.c0) ISNULL))))OR(((vt1.c0)<>(vt1.c0)))))OR(CAST(vt1.c0 AS BLOB))))AND((((vt1.c0, vt0.c1, vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c1)) AND ((vt1.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c1))))) ASC  NULLS FIRST LIMIT 0X1;
SELECT * FROM vt1 WHERE (json_patch(((vt1.c0)||(vt1.c0)), MAX(vt1.c0, NULL))) ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ((vt1.c0 IN (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), CASE WHEN ((((((((x'a0')OR(x'e680')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) IS FALSE) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((json_patch(((vt1.c0)||(vt1.c0)), MAX(vt1.c0, NULL)))AND((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE, ((vt1.c0)OR(vt1.c0)))) AND ((CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS TEXT))))))) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 WHEN '-1501175671' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ()) ASC, ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) ISNULL)  NULLS LAST, json_patch(vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC, CASE vt1.c0  WHEN NULL THEN ((x'') ISNULL) ELSE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL * FROM vt1 WHERE ((+ (UPPER(vt1.c0)))) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 WHEN '-1501175671' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ()) ASC, ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) ISNULL)  NULLS LAST, json_patch(vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC, CASE vt1.c0  WHEN NULL THEN ((x'') ISNULL) ELSE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END  NULLS LAST LIMIT 1;
SELECT * FROM vt1 WHERE (json_patch(((vt1.c0)||(vt1.c0)), MAX(vt1.c0, NULL))) ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ((vt1.c0 IN (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), CASE WHEN ((((((((x'a0')OR(x'e680')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) IS FALSE) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0Xffffffff9f863191 END) NOT NULL));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0Xffffffff9f863191 END) NOT NULL))AND(((((vt0.c1)<=(vt0.c0))) IS TRUE)))) LIMIT 3 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE RTRIM, 0.2041568123684635, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))>=(((vt0.c0 IN (vt0.c1)), vt0.c1, ((vt0.c1)LIKE(vt0.c0)))))) LIMIT 3;
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0)||(vt0.c0)) WHEN (vt1.c0 IN (vt0.c0, vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0.0457003047103679 THEN vt0.c0 END WHEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END THEN CAST(vt1.c0 AS BLOB) WHEN vt0.c0 THEN ((vt0.c1)%(vt1.c0)) ELSE NULLIF(vt0.c1, vt0.c0) END);
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE (((CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0)||(vt0.c0)) WHEN (vt1.c0 IN (vt0.c0, vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0.0457003047103679 THEN vt0.c0 END WHEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END THEN CAST(vt1.c0 AS BLOB) WHEN vt0.c0 THEN ((vt0.c1)%(vt1.c0)) ELSE NULLIF(vt0.c1, vt0.c0) END)AND(CAST(((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) AS REAL))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(x'4b8bec361c')))AND(vt1.c0)))AND(1641868820))) NOT BETWEEN (((vt1.c0)&(vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM)IS NOT(((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(x'4b8bec361c')))AND(vt1.c0)))AND(1641868820))) NOT BETWEEN (((vt1.c0)&(vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT NULL) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) ISNULL)) ORDER BY vt1.c0 ASC, ((((vt1.c0)*(434657884))) NOT BETWEEN ((((vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0)))) AND ((vt1.c0 IN (vt1.c0, vt1.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY) ISNULL))AND(UPPER((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) ORDER BY vt1.c0 ASC, ((((vt1.c0)*(434657884))) NOT BETWEEN ((((vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0)))) AND ((vt1.c0 IN (vt1.c0, vt1.c0)))) DESC  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((((((NULL)AND(vt1.c0)))OR(vt1.c0)))-(IFNULL(vt1.c0, vt1.c0)))) ORDER BY vt1.c0 ASC, ((((vt1.c0)*(434657884))) NOT BETWEEN ((((vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0)))) AND ((vt1.c0 IN (vt1.c0, vt1.c0)))) DESC  NULLS FIRST LIMIT 3;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN 'B?SQ>
bu' ELSE ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) END) ORDER BY ((TOTAL_CHANGES()) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c1))  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN 'B?SQ>
bu' ELSE ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) END)AND(LIKELY(DISTINCT (~ (vt0.c1)))))) ORDER BY ((TOTAL_CHANGES()) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c1))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN 'B?SQ>
bu' ELSE ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) END) ORDER BY ((TOTAL_CHANGES()) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c1))  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN 'B?SQ>
bu' ELSE ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) END)AND(LIKELY(DISTINCT (~ (vt0.c1)))))) ORDER BY ((TOTAL_CHANGES()) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c1))  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1)-(vt0.c0)))>=(((vt0.c1)IS(vt0.c0)))), GLOB(((vt0.c1)LIKE(vt0.c1)), ((vt0.c0)>=(vt0.c0)))  NULLS LAST;
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1)-(vt0.c0)))>=(((vt0.c1)IS(vt0.c0)))), GLOB(((vt0.c1)LIKE(vt0.c1)), ((vt0.c0)>=(vt0.c0)))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY ((((vt0.c1)-(vt0.c0)))>=(((vt0.c1)IS(vt0.c0)))), GLOB(((vt0.c1)LIKE(vt0.c1)), ((vt0.c0)>=(vt0.c0)))  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (((JULIANDAY(vt0.c0, vt0.c1, vt0.c0, vt0.c1)) NOT NULL)) ORDER BY (((NOT (vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) AND (vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, ((vt0.c0)<>(((0Xffffffffdadcda8c)<(vt0.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE (((JULIANDAY(vt0.c0, vt0.c1, vt0.c0, vt0.c1)) NOT NULL)) ORDER BY (((NOT (vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) AND (vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, ((vt0.c0)!=(((0xffffffffdadcda8c)<(vt0.c0)))) DESC INTERSECT SELECT * FROM vt0 WHERE ((+ (((vt0.c1)>(vt0.c0))))) ORDER BY (((NOT (vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) AND (vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, ((vt0.c0)!=(((-623060340)<(vt0.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE (((JULIANDAY(vt0.c0, vt0.c1, vt0.c0, vt0.c1)) NOT NULL)) ORDER BY (((NOT (vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) AND (vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, ((vt0.c0)<>(((0Xffffffffdadcda8c)<(vt0.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE (((JULIANDAY(vt0.c0, vt0.c1, vt0.c0, vt0.c1)) NOT NULL)) ORDER BY (((NOT (vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) AND (vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, ((vt0.c0)!=(((0xffffffffdadcda8c)<(vt0.c0)))) DESC INTERSECT SELECT * FROM vt0 WHERE ((+ (((vt0.c1)>(vt0.c0))))) ORDER BY (((NOT (vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) AND (vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, ((vt0.c0)!=(((-623060340)<(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END IN (-1702481014, vt0.c1 COLLATE BINARY))) ORDER BY CAST(CASE WHEN vt1.c0 THEN x'7038' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END AS BLOB) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END IN (0xffffffff9a86338a)))AND(CAST(((vt1.c0) IS TRUE) AS BLOB)))) ORDER BY CAST(CASE WHEN vt1.c0 THEN x'7038' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END AS BLOB) ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ())) ORDER BY CAST(CASE WHEN vt1.c0 THEN x'7038' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END AS BLOB) ASC  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(LIKELY(vt1.c0))))AND(((vt1.c0)IS(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(LIKELY(vt1.c0))))AND(((vt1.c0)IS(vt1.c0)))))AND((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '499733756' END IN (((vt1.c0)GLOB(vt1.c0))))))) ORDER BY (('''*{	pq') ISNULL) DESC  NULLS LAST LIMIT 0X2 INTERSECT SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL))|('NEl%4b'))) ORDER BY (('''*{	pq') ISNULL) DESC  NULLS LAST LIMIT 2;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0)|(vt1.c0)))>(((vt1.c0)<(vt1.c0)))));
SELECT MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0)|(vt1.c0)))>(((vt1.c0)<(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((NULL) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN LIKELY(vt0.c0) THEN MAX(vt0.c1, vt0.c0, vt1.c0, vt0.c0) WHEN vt0.c1 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) WHEN ((vt0.c1) NOT NULL) THEN vt0.c0 WHEN ((vt1.c0)-(vt0.c0)) THEN NULL COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END);
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE ((NULL) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN LIKELY(vt0.c0) THEN MAX(vt0.c1, vt0.c0, vt1.c0, vt0.c0) WHEN vt0.c1 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) WHEN ((vt0.c1) NOT NULL) THEN vt0.c0 WHEN ((vt1.c0)-(vt0.c0)) THEN NULL COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END)AND(vt0.c0))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)) THEN ((((((((((((vt1.c0)AND('-972729704')))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))OR('~蹞C')))AND(vt0.c1)) WHEN COALESCE(DISTINCT vt0.c1, vt1.c0, vt1.c0) THEN ((vt1.c0)GLOB(vt0.c0)) WHEN (+ (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) ELSE CAST(vt1.c0 AS NUMERIC) END  NULLS LAST, ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)AND(CASE 0.7181700955221174  WHEN NULL THEN x'01' WHEN vt0.c1 THEN vt0.c0 WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END)))OR(((vt0.c1)>(vt0.c0)))))AND(((((((((((vt0.c0)AND('0.41916462345417693')))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))) ASC, ((((vt1.c0) NOTNULL)) NOTNULL) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))) AND ((((vt0.c1)>(vt0.c0)))))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)) THEN ((((((((((((vt1.c0)AND('-972729704')))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))OR('~蹞C')))AND(vt0.c1)) WHEN COALESCE(DISTINCT vt0.c1, vt1.c0, vt1.c0) THEN ((vt1.c0)GLOB(vt0.c0)) WHEN (+ (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) ELSE CAST(vt1.c0 AS NUMERIC) END  NULLS LAST, ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)AND(CASE 0.7181700955221174  WHEN NULL THEN x'01' WHEN vt0.c1 THEN vt0.c0 WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END)))OR(((vt0.c1)>(vt0.c0)))))AND(((((((((((vt0.c0)AND('0.41916462345417693')))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))) ASC, ((((vt1.c0) NOTNULL)) NOTNULL);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((NULL) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN LIKELY(vt0.c0) THEN MAX(vt0.c1, vt0.c0, vt1.c0, vt0.c0) WHEN vt0.c1 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) WHEN ((vt0.c1) NOT NULL) THEN vt0.c0 WHEN ((vt1.c0)-(vt0.c0)) THEN NULL COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END);
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE ((NULL) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN LIKELY(vt0.c0) THEN MAX(vt0.c1, vt0.c0, vt1.c0, vt0.c0) WHEN vt0.c1 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) WHEN ((vt0.c1) NOT NULL) THEN vt0.c0 WHEN ((vt1.c0)-(vt0.c0)) THEN NULL COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END)AND(vt0.c0))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)) THEN ((((((((((((vt1.c0)AND('-972729704')))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))OR('~蹞C')))AND(vt0.c1)) WHEN COALESCE(DISTINCT vt0.c1, vt1.c0, vt1.c0) THEN ((vt1.c0)GLOB(vt0.c0)) WHEN (+ (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) ELSE CAST(vt1.c0 AS NUMERIC) END  NULLS LAST, ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)AND(CASE 0.7181700955221174  WHEN NULL THEN x'01' WHEN vt0.c1 THEN vt0.c0 WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END)))OR(((vt0.c1)>(vt0.c0)))))AND(((((((((((vt0.c0)AND('0.41916462345417693')))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))) ASC, ((((vt1.c0) NOTNULL)) NOTNULL) INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))) AND ((((vt0.c1)>(vt0.c0)))))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)) THEN ((((((((((((vt1.c0)AND('-972729704')))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))OR('~蹞C')))AND(vt0.c1)) WHEN COALESCE(DISTINCT vt0.c1, vt1.c0, vt1.c0) THEN ((vt1.c0)GLOB(vt0.c0)) WHEN (+ (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) ELSE CAST(vt1.c0 AS NUMERIC) END  NULLS LAST, ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)AND(CASE 0.7181700955221174  WHEN NULL THEN x'01' WHEN vt0.c1 THEN vt0.c0 WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END)))OR(((vt0.c1)>(vt0.c0)))))AND(((((((((((vt0.c0)AND('0.41916462345417693')))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))) ASC, ((((vt1.c0) NOTNULL)) NOTNULL);
SELECT * FROM vt0 INNER JOIN vt1 ON CASE (~ (vt0.c0))  WHEN CAST(1819311882 AS NUMERIC) THEN (vt0.c1 IN (vt1.c0, vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN SQLITE_VERSION() WHEN NULL THEN (~ (vt0.c0)) END WHERE (TYPEOF(((vt0.c1) NOT NULL))) ORDER BY (((vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1) ISNULL), CAST(vt0.c0 AS TEXT))) AND (((8.0658199E8 IN ()), (~ (-2050172140)))));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CASE (~ (vt0.c0))  WHEN CAST(1819311882 AS NUMERIC) THEN (vt0.c1 IN (vt1.c0, vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN SQLITE_VERSION() WHEN NULL THEN (~ (vt0.c0)) END WHERE (TYPEOF(((vt0.c1) NOT NULL))) ORDER BY (((vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1) ISNULL), CAST(vt0.c0 AS TEXT))) AND (((8.0658199E8 IN ()), (~ (-2050172140))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CASE (~ (vt0.c0))  WHEN CAST(1819311882 AS NUMERIC) THEN (vt0.c1 IN (vt1.c0, vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN SQLITE_VERSION() WHEN NULL THEN (~ (vt0.c0)) END WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1) ISNULL), CAST(vt0.c0 AS TEXT))) AND (((8.0658199E8 IN ()), (~ (-2050172140))))) LIMIT 1;
SELECT * FROM vt0 INNER JOIN vt1 ON CASE (~ (vt0.c0))  WHEN CAST(1819311882 AS NUMERIC) THEN (vt0.c1 IN (vt1.c0, vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN SQLITE_VERSION() WHEN NULL THEN (~ (vt0.c0)) END WHERE (TYPEOF(((vt0.c1) NOT NULL))) ORDER BY (((vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1) ISNULL), CAST(vt0.c0 AS TEXT))) AND (((8.0658199E8 IN ()), (~ (-2050172140)))));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CASE (~ (vt0.c0))  WHEN CAST(1819311882 AS NUMERIC) THEN (vt0.c1 IN (vt1.c0, vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN SQLITE_VERSION() WHEN NULL THEN (~ (vt0.c0)) END WHERE (TYPEOF(((vt0.c1) NOT NULL))) ORDER BY (((vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1) ISNULL), CAST(vt0.c0 AS TEXT))) AND (((8.0658199E8 IN ()), (~ (-2050172140))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CASE (~ (vt0.c0))  WHEN CAST(1819311882 AS NUMERIC) THEN (vt0.c1 IN (vt1.c0, vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN SQLITE_VERSION() WHEN NULL THEN (~ (vt0.c0)) END WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1) ISNULL), CAST(vt0.c0 AS TEXT))) AND (((8.0658199E8 IN ()), (~ (-2050172140))))) LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt0.c1) LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((NULL)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)) IN ())) LIMIT 2;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt0.c1) LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((NULL)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)) IN ())) LIMIT 2;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))>(((vt0.c0)*(vt0.c0))))) ORDER BY NULL ASC  NULLS LAST, (vt0.c1 IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))>(((vt0.c0)*(vt0.c0))))) ORDER BY CASE ((vt0.c1) ISNULL)  WHEN vt0.c1 COLLATE NOCASE THEN ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) ELSE ((vt0.c1)GLOB(vt0.c0)) END DESC;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))>(((vt0.c0)*(vt0.c0))))) ORDER BY NULL ASC  NULLS LAST, (vt0.c1 IN ())  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT NULL))<(vt1.c0 COLLATE BINARY))) ORDER BY ((vt1.c0) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS REAL))), CASE WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0)/(vt1.c0)) WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS BLOB) END DESC, vt1.c0 DESC  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOT NULL))<(vt1.c0 COLLATE BINARY))) ORDER BY ((((((((vt1.c0)!=(vt1.c0)))OR(((((((((NULL)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((vt1.c0) IS TRUE))) DESC, x''  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) BETWEEN ((vt1.c0 IN ())) AND ((('-1786790141')IS NOT(vt1.c0))))) ORDER BY ((((((((vt1.c0)<>(vt1.c0)))OR(((((((((NULL)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((vt1.c0) IS TRUE))) DESC, x''  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT NULL))<(vt1.c0 COLLATE BINARY))) ORDER BY ((vt1.c0) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS REAL))), CASE WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0)/(vt1.c0)) WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS BLOB) END DESC, vt1.c0 DESC  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOT NULL))<(vt1.c0 COLLATE BINARY))) ORDER BY ((((((((vt1.c0)!=(vt1.c0)))OR(((((((((NULL)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((vt1.c0) IS TRUE))) DESC, x''  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) BETWEEN ((vt1.c0 IN ())) AND ((('-1786790141')IS NOT(vt1.c0))))) ORDER BY ((((((((vt1.c0)<>(vt1.c0)))OR(((((((((NULL)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((vt1.c0) IS TRUE))) DESC, x''  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM vt1 WHERE ('-1315614378');
SELECT DISTINCT * FROM vt1 WHERE ('-1315614378');
SELECT ALL * FROM vt1 WHERE ('-1315614378');
SELECT DISTINCT * FROM vt1 WHERE ('-1315614378');
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) LIMIT 0X2 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) LIMIT 2;
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) LIMIT 0X2 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) LIMIT 2;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON COALESCE(DISTINCT ((vt0.c0)||(x'cb030a')), vt1.c0) WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt1.c0) NOT BETWEEN (0Xffffffff957fbf03) AND (vt1.c0))))) ORDER BY ((vt1.c0)||(vt0.c0)) ASC  NULLS LAST, vt0.c0  NULLS LAST, (NOT (CAST(vt0.c0 AS INTEGER)));
SELECT DISTINCT COUNT(*) FROM vt1 CROSS JOIN vt0 ON COALESCE(DISTINCT ((vt0.c0)||(x'cb030a')), vt1.c0) WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt1.c0) NOT BETWEEN (-1786790141) AND (vt1.c0))))) ORDER BY CASE (+ (''))  WHEN ((vt1.c0)*(vt0.c1)) THEN ((vt0.c0)IS(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)) THEN ((vt1.c0) ISNULL) ELSE ((NULL)!=(vt1.c0)) END LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 CROSS JOIN vt0 ON COALESCE(DISTINCT ((vt0.c0)||(x'cb030a')), vt1.c0) WHERE (((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE) ORDER BY CASE (+ (''))  WHEN ((vt1.c0)*(vt0.c1)) THEN ((vt0.c0)IS(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)) THEN ((vt1.c0) ISNULL) ELSE ((NULL)<>(vt1.c0)) END LIMIT 0X0;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (NOT (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END))  NULLS FIRST, ((0.289749023254972)<(vt0.c0)), ((vt0.c0)LIKE(vt1.c0 COLLATE RTRIM));
SELECT * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (NOT (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END))  NULLS FIRST, ((0.289749023254972)<(vt0.c0)), ((vt0.c0)LIKE(vt1.c0 COLLATE RTRIM)) LIMIT 0x0;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (NOT (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END))  NULLS FIRST, ((0.289749023254972)<(vt0.c0)), ((vt0.c0)LIKE(vt1.c0 COLLATE RTRIM));
SELECT * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (NOT (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END))  NULLS FIRST, ((0.289749023254972)<(vt0.c0)), ((vt0.c0)LIKE(vt1.c0 COLLATE RTRIM)) LIMIT 0x0;
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((((((((vt0.c1)!=(vt1.c0)))OR(COALESCE(DISTINCT vt1.c0, vt0.c0))))OR(((vt0.c0) NOTNULL))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 END)) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY TRIM(DISTINCT ((vt1.c0) IS FALSE), CAST(vt0.c1 AS TEXT)), ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((((((((vt0.c1)!=(vt1.c0)))OR(COALESCE(DISTINCT vt1.c0, vt0.c0))))OR(((vt0.c0) NOTNULL))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 END)) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY TRIM(DISTINCT ((vt1.c0) IS FALSE), CAST(vt0.c1 AS TEXT)), ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), DATE(vt0.c1, 0.7033422277151318, vt0.c1, vt0.c0)))>=((((vt0.c0)IS(vt0.c0)), (vt0.c0 IN ()))))) ORDER BY ((COALESCE(vt0.c0, vt0.c1, vt0.c1))IS(((vt0.c1) NOT NULL))) DESC, ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)>=((((vt0.c0, vt0.c1))=((vt0.c1, vt0.c1))))) DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(x'1389')))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), DATE(vt0.c1, 0.7033422277151318, vt0.c1, vt0.c0)))>=((((vt0.c0)IS(vt0.c0)), (vt0.c0 IN ()))))) ORDER BY ((COALESCE(vt0.c0, vt0.c1, vt0.c1))IS(((vt0.c1) NOT NULL))) DESC, ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)>=((((vt0.c0, vt0.c1))==((vt0.c1, vt0.c1))))) DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(x'1389')))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC;
SELECT ALL MIN(vt1.c0) FROM vt0, vt1 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) AS INTEGER));
SELECT DISTINCT MIN(vt1.c0) FROM vt0, vt1 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) AS INTEGER)) ORDER BY (x'4f' IN ()) COLLATE NOCASE  NULLS LAST, CASE WHEN UNLIKELY(DISTINCT vt1.c0) THEN (~ (vt0.c1)) END;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1))))) ORDER BY ((((((((((((vt0.c0) ISNULL))AND(((x'58') NOT NULL))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))))AND(((vt1.c0)||(vt0.c1)))))OR(((NULL)%(vt0.c1))))  NULLS LAST;
SELECT DISTINCT MAX(vt0.c0) FROM vt1, vt0 WHERE ((((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)))))AND(((TRIM(vt0.c1))+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))))) ORDER BY ((((((((((((vt0.c0) ISNULL))AND(((x'58') NOT NULL))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))))AND(((vt1.c0)||(vt0.c1)))))OR(((NULL)%(vt0.c1))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (NULL) ORDER BY (- (COALESCE(vt0.c0, vt0.c0)));
SELECT DISTINCT * FROM vt1, vt0 WHERE (NULL) ORDER BY CAST(((x'7832') NOT NULL) AS BLOB)  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (((vt0.c1)>=(vt0.c1))) AND (CASE vt0.c0  WHEN '-1484504180' THEN vt1.c0 END)) DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt1, vt0 WHERE (NULL) ORDER BY (- (COALESCE(vt0.c0, vt0.c0)));
SELECT DISTINCT * FROM vt1, vt0 WHERE (NULL) ORDER BY CAST(((x'7832') NOT NULL) AS BLOB)  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (((vt0.c1)>=(vt0.c1))) AND (CASE vt0.c0  WHEN '-1484504180' THEN vt1.c0 END)) DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt1 WHERE ((((- (vt1.c0))) NOT NULL)) ORDER BY ((((0.19388439680507563)|(vt1.c0))) BETWEEN (vt1.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c0))) NOT NULL)) ORDER BY ((((0.19388439680507563)|(vt1.c0))) BETWEEN (vt1.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) INTERSECT SELECT ALL * FROM vt1 WHERE (((ABS(DISTINCT vt1.c0))IS(CAST(vt1.c0 AS REAL)))) ORDER BY ((((0.19388439680507563)|(vt1.c0))) BETWEEN (vt1.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT * FROM vt1 WHERE ((((- (vt1.c0))) NOT NULL)) ORDER BY ((((0.19388439680507563)|(vt1.c0))) BETWEEN (vt1.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c0))) NOT NULL)) ORDER BY ((((0.19388439680507563)|(vt1.c0))) BETWEEN (vt1.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) INTERSECT SELECT ALL * FROM vt1 WHERE (((ABS(DISTINCT vt1.c0))IS(CAST(vt1.c0 AS REAL)))) ORDER BY ((((0.19388439680507563)|(vt1.c0))) BETWEEN (vt1.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT * FROM vt1, vt0 WHERE (json_type(vt1.c0) COLLATE BINARY);
SELECT DISTINCT * FROM vt1, vt0 WHERE (json_type(vt1.c0) COLLATE BINARY) INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (vt0.c1 COLLATE RTRIM)));
SELECT * FROM vt1, vt0 WHERE (json_type(vt1.c0) COLLATE BINARY);
SELECT * FROM vt1 WHERE ((((vt1.c0)-(vt1.c0)) IN ())) ORDER BY HEX((~ (vt1.c0))) DESC, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))/('1924832768'))  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)-(vt1.c0)) IN ()))AND(''))) ORDER BY CAST((((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) AS BLOB) ASC, (((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))AND(((((0.666449953545296)OR(vt1.c0)))OR(vt1.c0)))), ((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))))OR((- (vt1.c0)))))OR(((vt1.c0) NOT NULL))) DESC  NULLS FIRST LIMIT 1;
SELECT * FROM vt1 WHERE ((((vt1.c0)-(vt1.c0)) IN ())) ORDER BY HEX((~ (vt1.c0))) DESC, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))/('1924832768'))  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)-(vt1.c0)) IN ()))AND(''))) ORDER BY CAST((((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) AS BLOB) ASC, (((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))AND(((((0.666449953545296)OR(vt1.c0)))OR(vt1.c0)))), ((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))))OR((- (vt1.c0)))))OR(((vt1.c0) NOT NULL))) DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt0 WHERE ((((0xfffffffff47370ea, vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c1)))AND(0.9829071223512063)), (- (vt0.c0)))) AND ((vt0.c1 COLLATE RTRIM, vt0.c1 COLLATE RTRIM))));
SELECT DISTINCT * FROM vt0 WHERE ((((-193761046, vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c1)))AND(0.9829071223512063)), (- (vt0.c0)))) AND ((vt0.c1 COLLATE RTRIM, vt0.c1 COLLATE RTRIM))));
SELECT ALL * FROM vt0 WHERE ((((0xfffffffff47370ea, vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c1)))AND(0.9829071223512063)), (- (vt0.c0)))) AND ((vt0.c1 COLLATE RTRIM, vt0.c1 COLLATE RTRIM))));
SELECT DISTINCT * FROM vt0 WHERE ((((-193761046, vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c1)))AND(0.9829071223512063)), (- (vt0.c0)))) AND ((vt0.c1 COLLATE RTRIM, vt0.c1 COLLATE RTRIM))));
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0);
SELECT DISTINCT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CASE ((vt0.c1)LIKE(vt0.c1))  WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN (((1.262217373E9, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0)) AND (('', vt0.c0))) WHEN ((vt1.c0) IS TRUE) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END END, HEX(CASE WHEN vt1.c0 THEN 469789080 ELSE vt1.c0 END) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0);
SELECT DISTINCT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CASE ((vt0.c1)LIKE(vt0.c1))  WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN (((1.262217373E9, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0)) AND (('', vt0.c0))) WHEN ((vt1.c0) IS TRUE) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END END, HEX(CASE WHEN vt1.c0 THEN 469789080 ELSE vt1.c0 END) DESC  NULLS FIRST LIMIT 0;
SELECT ALL MAX(vt0.c1) FROM vt0 CROSS JOIN vt1 ON (((((vt1.c0, vt0.c0, vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1, NULL, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))+(CAST(vt0.c0 AS TEXT))) WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN ('1139552051') AND (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END))) ORDER BY x'' DESC;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 CROSS JOIN vt1 ON (((((vt1.c0, vt0.c0, vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1, NULL, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))+(CAST(vt0.c0 AS TEXT))) WHERE (((((vt1.c0 COLLATE RTRIM) BETWEEN ('1139552051') AND (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)))AND(((vt0.c1) BETWEEN (((vt1.c0) ISNULL)) AND ('P7Di#WI'))))) ORDER BY (NOT (((vt1.c0) ISNULL))) DESC  NULLS FIRST, (('9')%(LIKELIHOOD(vt0.c1, vt0.c0))) DESC  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 CROSS JOIN vt1 ON (((((vt1.c0, vt0.c0, vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1, NULL, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))+(CAST(vt0.c0 AS TEXT))) WHERE ((((vt0.c1 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))<=(((~ (vt0.c0)), 0.863430580413621)))) ORDER BY (NOT (((vt1.c0) ISNULL))) DESC  NULLS FIRST, (('9')%(LIKELIHOOD(vt0.c1, vt0.c0))) DESC  NULLS LAST LIMIT 2;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN NULL THEN LIKELY(DISTINCT vt0.c1) WHEN (vt0.c1 IN (vt1.c0)) THEN ((vt1.c0)&(vt1.c0)) WHEN (NOT (vt0.c0)) THEN (vt0.c1 IN ()) WHEN ((vt0.c0)IS(vt0.c0)) THEN (~ (vt0.c1)) END);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN NULL THEN LIKELY(DISTINCT vt0.c1) WHEN (vt0.c1 IN (vt1.c0)) THEN ((vt1.c0)&(vt1.c0)) WHEN (NOT (vt0.c0)) THEN (vt0.c1 IN ()) WHEN ((vt0.c0)IS(vt0.c0)) THEN (~ (vt0.c1)) END)AND(CAST(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN 'F*5df젉E*)' THEN vt0.c0 ELSE vt1.c0 END AS INTEGER)))) LIMIT 0X1 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (x'') AND (vt0.c1)))<(vt0.c0 COLLATE NOCASE))) LIMIT 1;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN NULL THEN LIKELY(DISTINCT vt0.c1) WHEN (vt0.c1 IN (vt1.c0)) THEN ((vt1.c0)&(vt1.c0)) WHEN (NOT (vt0.c0)) THEN (vt0.c1 IN ()) WHEN ((vt0.c0)IS(vt0.c0)) THEN (~ (vt0.c1)) END);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN NULL THEN LIKELY(DISTINCT vt0.c1) WHEN (vt0.c1 IN (vt1.c0)) THEN ((vt1.c0)&(vt1.c0)) WHEN (NOT (vt0.c0)) THEN (vt0.c1 IN ()) WHEN ((vt0.c0)IS(vt0.c0)) THEN (~ (vt0.c1)) END)AND(CAST(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN 'F*5df젉E*)' THEN vt0.c0 ELSE vt1.c0 END AS INTEGER)))) LIMIT 0X1 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (x'') AND (vt0.c1)))<(vt0.c0 COLLATE NOCASE))) LIMIT 1;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (CASE ((vt1.c0)=(vt0.c1))  WHEN ((vt1.c0)||(vt0.c1)) THEN ((vt0.c0)<(vt1.c0)) END) ORDER BY (- ((((vt0.c0, vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((NULL, vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt1.c0, vt1.c0, vt1.c0))))) ASC  NULLS FIRST, vt0.c0;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((CASE ((vt1.c0)==(vt0.c1))  WHEN ((vt1.c0)||(vt0.c1)) THEN ((vt0.c0)<(vt1.c0)) END)AND(CASE CAST(vt0.c1 AS INTEGER)  WHEN (('') IS FALSE) THEN ((vt0.c1)*(vt0.c1)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END WHEN ((vt0.c1)+(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (vt0.c1 IN ()) THEN (x'' IN ()) WHEN CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END THEN 0.18208138756271408 END))) ORDER BY (UNLIKELY(vt1.c0) IN (((vt0.c0)>>(vt0.c0)), CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN (vt1.c0, vt1.c0))) ISNULL)) ORDER BY (UNLIKELY(vt1.c0) IN (((vt0.c0)>>(vt0.c0)), CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (CASE ((vt1.c0)=(vt0.c1))  WHEN ((vt1.c0)||(vt0.c1)) THEN ((vt0.c0)<(vt1.c0)) END) ORDER BY (- ((((vt0.c0, vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((NULL, vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt1.c0, vt1.c0, vt1.c0))))) ASC  NULLS FIRST, vt0.c0;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((CASE ((vt1.c0)==(vt0.c1))  WHEN ((vt1.c0)||(vt0.c1)) THEN ((vt0.c0)<(vt1.c0)) END)AND(CASE CAST(vt0.c1 AS INTEGER)  WHEN (('') IS FALSE) THEN ((vt0.c1)*(vt0.c1)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END WHEN ((vt0.c1)+(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (vt0.c1 IN ()) THEN (x'' IN ()) WHEN CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END THEN 0.18208138756271408 END))) ORDER BY (UNLIKELY(vt1.c0) IN (((vt0.c0)>>(vt0.c0)), CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN (vt1.c0, vt1.c0))) ISNULL)) ORDER BY (UNLIKELY(vt1.c0) IN (((vt0.c0)>>(vt0.c0)), CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY (((((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1))))OR((('Dh[t')LIKE(vt0.c1)))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL)))));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))AND((('-1303566439') NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c1))))) ORDER BY ((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((vt0.c1, vt0.c1, NULL, vt0.c0))==((1321461482, vt0.c1, vt0.c0, vt0.c1))))))AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) NOTNULL))))OR(vt0.c0)) DESC  NULLS LAST, (((vt0.c0)) BETWEEN ((x'386e332a84')) AND (((vt0.c0 IN ()))));
SELECT * FROM vt0, vt1 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0xffffffff9b13d733 THEN vt0.c1 ELSE 0X35f8c8e3 END)AND(((vt1.c0) ISNULL))))AND(vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0, vt1 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN -1693198541 THEN vt0.c1 ELSE 905496803 END)AND(((vt1.c0) ISNULL))))AND(vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0, vt1 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0xffffffff9b13d733 THEN vt0.c1 ELSE 0X35f8c8e3 END)AND(((vt1.c0) ISNULL))))AND(vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0, vt1 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN -1693198541 THEN vt0.c1 ELSE 905496803 END)AND(((vt1.c0) ISNULL))))AND(vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE ((((vt0.c0)>=(vt0.c0)) IN ())) ORDER BY vt0.c1  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ())) ORDER BY (- (vt0.c0 COLLATE RTRIM))  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(((vt0.c0)-(vt0.c0))))) ORDER BY (- (vt0.c0 COLLATE RTRIM))  NULLS LAST LIMIT 0X0;
SELECT * FROM vt0 WHERE ((((vt0.c0)>=(vt0.c0)) IN ())) ORDER BY vt0.c1  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ())) ORDER BY (- (vt0.c0 COLLATE RTRIM))  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(((vt0.c0)-(vt0.c0))))) ORDER BY (- (vt0.c0 COLLATE RTRIM))  NULLS LAST LIMIT 0X0;
SELECT * FROM vt0, vt1 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY (+ (vt0.c1 COLLATE BINARY)) DESC, (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c0))) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c1 COLLATE NOCASE IN ()))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE NOCASE))) ORDER BY (+ (vt0.c1 COLLATE BINARY)) DESC, (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c0))) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY (+ (vt0.c1 COLLATE BINARY)) DESC, (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c0))) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c1 COLLATE NOCASE IN ()))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE NOCASE))) ORDER BY (+ (vt0.c1 COLLATE BINARY)) DESC, (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c0))) COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))<(CAST(vt0.c1 AS NUMERIC))) WHERE (vt1.c0) ORDER BY NULL DESC  NULLS FIRST, (((((vt0.c0))=((vt0.c0))))||(CAST(vt0.c1 AS REAL))) ASC, CAST((vt1.c0 IN (vt0.c0)) AS INTEGER) ASC, vt0.c0;
SELECT ALL MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))<(CAST(vt0.c1 AS NUMERIC))) WHERE (vt1.c0) ORDER BY NULL DESC  NULLS FIRST, (((((vt0.c0))==((vt0.c0))))||(CAST(vt0.c1 AS REAL))) ASC, CAST((vt1.c0 IN (vt0.c0)) AS INTEGER) ASC, vt0.c0 LIMIT 0x2 INTERSECT SELECT MIN(vt0.c1) FROM vt0 INNER JOIN vt1 ON ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))<(CAST(vt0.c1 AS NUMERIC))) WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY NULL DESC  NULLS FIRST, (((((vt0.c0))=((vt0.c0))))||(CAST(vt0.c1 AS REAL))) ASC, CAST((vt1.c0 IN (vt0.c0)) AS INTEGER) ASC, vt0.c0 LIMIT 0X2;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (HEX(DISTINCT (- (vt0.c1)))) ORDER BY (((vt0.c1, vt1.c0, vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, (((0.3657919156518088))==((vt0.c0))), COALESCE(DISTINCT '-35870832', vt0.c1, vt0.c0, vt1.c0), (vt0.c1 IN (vt1.c0)), (((vt0.c0, vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, '1760756148', vt0.c0)) AND ((vt0.c1, vt1.c0, vt0.c1, vt0.c1))))) AND ((((((((vt0.c1)OR(x'37')))AND(vt0.c1)))AND(vt0.c0)), ((x'') IS FALSE), CASE NULL  WHEN vt1.c0 THEN vt0.c1 END, CASE WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((((((vt0.c1)AND(vt0.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((HEX(DISTINCT (- (vt0.c1))))AND(((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))<(vt0.c0 COLLATE BINARY))))) ORDER BY (((vt0.c1, vt1.c0, vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, (((0.3657919156518088))==((vt0.c0))), COALESCE(DISTINCT '-35870832', vt0.c1, vt0.c0, vt1.c0), (vt0.c1 IN (vt1.c0)), (((vt0.c0, vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, '1760756148', vt0.c0)) AND ((vt0.c1, vt1.c0, vt0.c1, vt0.c1))))) AND ((((((((vt0.c1)OR(x'37')))AND(vt0.c1)))AND(vt0.c0)), ((x'') IS FALSE), CASE NULL  WHEN vt1.c0 THEN vt0.c1 END, CASE WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((((((vt0.c1)AND(vt0.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0))))) ASC  NULLS LAST LIMIT 0X3;
SELECT ALL * FROM vt0 WHERE ((- (LENGTH(vt0.c0)))) ORDER BY ((vt0.c0 IN ()) IN (0.5957718396678341));
SELECT * FROM vt0 WHERE ((((- (LENGTH(vt0.c0))))AND(0.9276444021517755))) ORDER BY ((vt0.c0 IN ()) IN (0.5957718396678341)) LIMIT 0;
SELECT ALL * FROM vt0 WHERE ((- (LENGTH(vt0.c0)))) ORDER BY ((vt0.c0 IN ()) IN (0.5957718396678341));
SELECT * FROM vt0 WHERE ((((- (LENGTH(vt0.c0))))AND(0.9276444021517755))) ORDER BY ((vt0.c0 IN ()) IN (0.5957718396678341)) LIMIT 0;
SELECT ALL * FROM vt1 WHERE (ABS(CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END));
SELECT * FROM vt1 WHERE (((ABS(CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END))AND('-2112278117'))) ORDER BY CAST('' AS NUMERIC)  NULLS FIRST, (+ ((+ (vt1.c0)))), ((NULL) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)<>(vt1.c0))))  NULLS FIRST INTERSECT SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN '-296494888' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0 COLLATE RTRIM))) ORDER BY CAST('' AS NUMERIC)  NULLS FIRST, (+ ((+ (vt1.c0)))), ((NULL) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)<>(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (ABS(CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END));
SELECT * FROM vt1 WHERE (((ABS(CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END))AND('-2112278117'))) ORDER BY CAST('' AS NUMERIC)  NULLS FIRST, (+ ((+ (vt1.c0)))), ((NULL) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)<>(vt1.c0))))  NULLS FIRST INTERSECT SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN '-296494888' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0 COLLATE RTRIM))) ORDER BY CAST('' AS NUMERIC)  NULLS FIRST, (+ ((+ (vt1.c0)))), ((NULL) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)<>(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (vt1.c0 IN ()), (+ (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((((NOT (vt0.c0)) IN ()))AND(((vt1.c0 COLLATE NOCASE)OR(IFNULL(vt1.c0, x'069b7e')))))) ORDER BY (vt1.c0 IN ()), (+ (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0))<=((vt1.c0, vt0.c0))) COLLATE BINARY) ORDER BY (vt1.c0 IN ()), (+ (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM vt1, vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (vt1.c0 IN ()), (+ (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))OR((vt0.c0 IN (vt1.c0)))))OR(vt0.c0)));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))OR((vt0.c0 IN (vt1.c0)))))OR(vt0.c0)))AND(((CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)LIKE((NOT (vt0.c1))))))) LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(((vt0.c0) BETWEEN (0.20825198152679514) AND (vt0.c1))))) LIMIT 2;
SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))OR((vt0.c0 IN (vt1.c0)))))OR(vt0.c0)));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))OR((vt0.c0 IN (vt1.c0)))))OR(vt0.c0)))AND(((CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)LIKE((NOT (vt0.c1))))))) LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(((vt0.c0) BETWEEN (0.20825198152679514) AND (vt0.c1))))) LIMIT 2;
SELECT ALL MAX(vt1.c0) FROM vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1)))<<((vt1.c0 IN (vt1.c0)))) WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))>(('' IN (vt1.c0)))));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1)))<<((vt1.c0 IN (vt1.c0)))) WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))>(('' IN (vt1.c0)))))AND(CAST(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)))) ORDER BY ((HEX(DISTINCT vt0.c0))!=(CAST(x'22264904' AS NUMERIC))) DESC, ((vt0.c0)|(((vt1.c0)|(x''))))  NULLS LAST INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1)))<<((vt1.c0 IN (vt1.c0)))) WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))OR(NULL)) COLLATE BINARY) ORDER BY ((HEX(DISTINCT vt0.c0))<>(CAST(x'22264904' AS NUMERIC))) DESC, ((vt0.c0)|(((vt1.c0)|(x''))))  NULLS LAST;
SELECT * FROM vt1 NOT INDEXED WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ('738629008')));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ('738629008'))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC;
SELECT * FROM vt1 NOT INDEXED WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ('738629008')));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ('738629008'))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC;
SELECT * FROM vt0, vt1 WHERE ((((0x7b1d524f IN (vt0.c0))) NOT NULL));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((2065519183 IN (vt0.c0))) NOT NULL))AND(CAST((vt1.c0 IN ()) AS INTEGER)))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c0, 0x271531c0))>((x'', -1779152081))) WHEN (- (vt1.c0)) THEN json_type(vt1.c0) WHEN ((vt0.c1) IS TRUE) THEN (+ (vt0.c1)) WHEN vt1.c0 THEN vt0.c1 COLLATE NOCASE END) LIMIT 1;
SELECT * FROM vt0, vt1 WHERE ((((0x7b1d524f IN (vt0.c0))) NOT NULL));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((2065519183 IN (vt0.c0))) NOT NULL))AND(CAST((vt1.c0 IN ()) AS INTEGER)))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c0, 0x271531c0))>((x'', -1779152081))) WHEN (- (vt1.c0)) THEN json_type(vt1.c0) WHEN ((vt0.c1) IS TRUE) THEN (+ (vt0.c1)) WHEN vt1.c0 THEN vt0.c1 COLLATE NOCASE END) LIMIT 1;
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt1.c0)IS(vt0.c1)) IN (LAST_INSERT_ROWID()))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS NUMERIC) ASC  NULLS LAST, CAST(SQLITE_SOURCE_ID() AS TEXT) ASC  NULLS FIRST, 0.4612464278615023 COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt1.c0)IS(vt0.c1)) IN (LAST_INSERT_ROWID()))) ORDER BY (((vt0.c0, NULL)) BETWEEN (((((vt0.c1, 905496803))==((vt0.c1, vt0.c1))), LIKELIHOOD(DISTINCT vt1.c0, vt0.c0))) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.5444666964797761)))  NULLS LAST, ((((vt1.c0) BETWEEN (0.791413916228345) AND (vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (CAST(vt0.c0 AS INTEGER)))  NULLS LAST LIMIT 2 INTERSECT SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY (((vt0.c0, NULL)) BETWEEN (((((vt0.c1, 905496803))=((vt0.c1, vt0.c1))), LIKELIHOOD(DISTINCT vt1.c0, vt0.c0))) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.5444666964797761)))  NULLS LAST, ((((vt1.c0) BETWEEN (0.791413916228345) AND (vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (CAST(vt0.c0 AS INTEGER)))  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM vt1 WHERE (IFNULL(((vt1.c0) IS TRUE), (('0_Zkm7듚')==(vt1.c0))));
SELECT * FROM vt1 WHERE (IFNULL(((vt1.c0) IS TRUE), (('0_Zkm7듚')=(vt1.c0)))) LIMIT 0X0 INTERSECT SELECT * FROM vt1 WHERE (IFNULL(((((((vt1.c0)OR(x'da')))AND(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS REAL))) LIMIT 0;
SELECT ALL * FROM vt1 WHERE (IFNULL(((vt1.c0) IS TRUE), (('0_Zkm7듚')==(vt1.c0))));
SELECT * FROM vt1 WHERE (IFNULL(((vt1.c0) IS TRUE), (('0_Zkm7듚')=(vt1.c0)))) LIMIT 0X0 INTERSECT SELECT * FROM vt1 WHERE (IFNULL(((((((vt1.c0)OR(x'da')))AND(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS REAL))) LIMIT 0;
SELECT MAX(vt0.c0) FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0))<>((vt0.c0))))<((~ (vt0.c0)))) WHERE (LTRIM(((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)), UNLIKELY(vt0.c0))) ORDER BY (((-587666667)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))))) ASC, vt0.c1  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=(vt1.c0)) DESC;
SELECT MAX(vt0.c0) FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0))!=((vt0.c0))))<((~ (vt0.c0)))) WHERE (((LTRIM(((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)), UNLIKELY(vt0.c0)))AND((((vt0.c0)*(NULL)) IN (vt0.c0 COLLATE BINARY, vt0.c1 COLLATE NOCASE, ((((((vt1.c0)OR(vt0.c1)))AND(1511254581)))AND(vt0.c0))))))) ORDER BY (((0Xffffffffdcf8eb15)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))))) ASC, vt0.c1  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=(vt1.c0)) DESC;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c1))<>((vt0.c1))) COLLATE RTRIM DESC  NULLS FIRST, (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'6e' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))==((LTRIM(vt0.c0, vt0.c0)))) DESC;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((vt0.c0)AND(vt0.c0))) ORDER BY (((vt0.c1))!=((vt0.c1))) COLLATE RTRIM DESC  NULLS FIRST, (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'6e' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))==((LTRIM(vt0.c0, vt0.c0)))) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1)))!=((~ (vt0.c1))))) ORDER BY (((vt0.c1))<>((vt0.c1))) COLLATE RTRIM DESC  NULLS FIRST, (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'6e' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))=((LTRIM(vt0.c0, vt0.c0)))) DESC LIMIT 1;
SELECT MIN(vt1.c0) FROM vt1, vt0 WHERE (CAST('''ux*r' AS NUMERIC)) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (CAST('''ux*r' AS NUMERIC)) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN (- (vt0.c1)) END, ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL)  NULLS LAST LIMIT 1 INTERSECT SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (((CASE '1043883576'  WHEN vt0.c0 THEN 'O+' END) IS TRUE)) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN (- (vt0.c1)) END, ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL)  NULLS LAST LIMIT 1;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (ABS((~ (vt0.c1))));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((ABS((~ (vt0.c1))))AND(((CASE WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)-(((vt0.c1)GLOB(vt1.c0))))))) ORDER BY TYPEOF(DISTINCT ((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0))) DESC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (LIKELIHOOD(CAST(vt1.c0 AS REAL), ((vt1.c0)!=(vt0.c0)))) ORDER BY TYPEOF(DISTINCT ((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0))) DESC  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((+ ('')) COLLATE BINARY);
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((+ ('')) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((vt0.c1)-(vt0.c1)) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST LIMIT 1;
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (CAST(vt0.c0 COLLATE BINARY AS REAL)) ORDER BY (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)) IN (((vt0.c1) ISNULL), vt0.c1)) ASC;
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (((CAST(vt0.c0 COLLATE BINARY AS REAL))AND(((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (('?' IN ())) AND (((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c1))))))) ORDER BY ((((x'') ISNULL)) BETWEEN (vt0.c1 COLLATE RTRIM) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)) DESC LIMIT 2;
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE (NULL);
SELECT ALL MAX(vt0.c1) FROM vt1, vt0 WHERE (((NULL)AND((((((+ (vt1.c0)))OR(((((((((((vt0.c1)OR(0.25128592324549326)))AND(vt1.c0)))OR(vt0.c1)))AND('857173009')))AND(vt0.c1)))))OR(vt0.c0 COLLATE RTRIM))))) ORDER BY ((((((((vt0.c0 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))OR(vt1.c0)))AND(vt0.c1 COLLATE NOCASE)))AND(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)) ASC  NULLS LAST INTERSECT SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY) ORDER BY ((((((((vt0.c0 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))OR(vt1.c0)))AND(vt0.c1 COLLATE NOCASE)))AND(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)) ASC  NULLS LAST;
SELECT MAX(vt1.c0) FROM vt1 WHERE (vt1.c0);
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (((vt1.c0)AND(((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY))) INTERSECT SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS REAL));
SELECT MAX(vt1.c0) FROM vt1 WHERE ((+ (((vt1.c0) NOTNULL))));
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((((+ (((vt1.c0) NOTNULL))))AND(((0Xffffffffa34354ed)<(((vt1.c0)||(vt1.c0))))))) INTERSECT SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((+ ((- (vt1.c0)))));
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((x'5e' COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1) ISNULL))) AND ((NULL, 'R6%้䧉K', CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c1 ELSE vt0.c1 END))));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((x'5e' COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1) ISNULL))) AND ((NULL, 'R6%้䧉K', CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c1 ELSE vt0.c1 END))))AND(ABS(vt0.c1)))) LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (CAST(0.8061018266376335 AS NUMERIC)) LIMIT 1;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS INTEGER))));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((((NOT (CAST(vt1.c0 AS INTEGER))))AND((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN (((vt1.c0)IS(vt1.c0)), vt1.c0, ((vt1.c0) BETWEEN (0.7892092104674873) AND (vt1.c0)))))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((((vt0.c1)+(vt0.c0)))))) ORDER BY (vt0.c0 IN (vt0.c1)) COLLATE NOCASE COLLATE BINARY DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((((vt0.c1)+(vt0.c0)))))) ORDER BY (vt0.c0 IN (vt0.c1)) COLLATE NOCASE COLLATE BINARY DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((((vt0.c1)+(vt0.c0)))))) ORDER BY (vt0.c0 IN (vt0.c1)) COLLATE NOCASE COLLATE BINARY DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((((vt0.c1)+(vt0.c0)))))) ORDER BY (vt0.c0 IN (vt0.c1)) COLLATE NOCASE COLLATE BINARY DESC;
SELECT * FROM vt0 WHERE (((((0.525109500589448)%(vt0.c1))) NOT NULL));
SELECT DISTINCT * FROM vt0 WHERE (((((0.525109500589448)%(vt0.c1))) NOT NULL)) ORDER BY CAST(((vt0.c1)+(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 IN ()) IN (vt0.c1))) ORDER BY CAST(((vt0.c1)+(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((0.525109500589448)%(vt0.c1))) NOT NULL));
SELECT DISTINCT * FROM vt0 WHERE (((((0.525109500589448)%(vt0.c1))) NOT NULL)) ORDER BY CAST(((vt0.c1)+(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 IN ()) IN (vt0.c1))) ORDER BY CAST(((vt0.c1)+(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE (+ (vt0.c0))  WHEN (- (vt0.c1)) THEN CAST(vt0.c1 AS INTEGER) WHEN vt0.c1 COLLATE NOCASE THEN (NOT (vt0.c1)) END);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE (+ (vt0.c0))  WHEN (- (vt0.c1)) THEN CAST(vt0.c1 AS INTEGER) WHEN vt0.c1 COLLATE NOCASE THEN (NOT (vt0.c1)) END)AND(vt0.c0))) ORDER BY (((vt0.c0 IN ()))+(vt1.c0)), (+ (((vt0.c1) ISNULL))) DESC, ((((((vt0.c1) ISNULL))OR(((vt0.c1) NOT NULL))))OR(((((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(0.0010294982188797652)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c1)))) DESC  NULLS LAST LIMIT 0x3 INTERSECT SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (((vt0.c0, vt0.c1, '235961911', vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt1.c0, vt0.c0, vt1.c0)))  WHEN CAST(vt0.c1 AS REAL) THEN ((0.8263896310909347) NOTNULL) WHEN ((vt1.c0)GLOB(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) ISNULL) END) ORDER BY (((vt0.c0 IN ()))+(vt1.c0)), (+ (((vt0.c1) ISNULL))) DESC, ((((((vt0.c1) ISNULL))OR(((vt0.c1) NOT NULL))))OR(((((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(0.0010294982188797652)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c1)))) DESC  NULLS LAST LIMIT 3;
SELECT * FROM vt1 WHERE (((NULL COLLATE RTRIM) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))))) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((NULL)>(((vt1.c0)<(vt1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((NULL COLLATE RTRIM) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))))) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((NULL)>(((vt1.c0)<(vt1.c0)))) DESC  NULLS LAST INTERSECT SELECT * FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN UNLIKELY(DISTINCT vt1.c0) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN ABS(DISTINCT vt1.c0) THEN ((vt1.c0)IS(vt1.c0)) ELSE ((vt1.c0)<=(vt1.c0)) END) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((NULL)>(((vt1.c0)<(vt1.c0)))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((NULL COLLATE RTRIM) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))))) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((NULL)>(((vt1.c0)<(vt1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((NULL COLLATE RTRIM) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0)))))) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((NULL)>(((vt1.c0)<(vt1.c0)))) DESC  NULLS LAST INTERSECT SELECT * FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN UNLIKELY(DISTINCT vt1.c0) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN ABS(DISTINCT vt1.c0) THEN ((vt1.c0)IS(vt1.c0)) ELSE ((vt1.c0)<=(vt1.c0)) END) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((NULL)>(((vt1.c0)<(vt1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))&(CAST(vt1.c0 AS INTEGER))) WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOT NULL)) ORDER BY CAST(((vt1.c0)&(vt0.c1)) AS INTEGER) ASC  NULLS FIRST, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))&(vt0.c1)) ASC  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))&(CAST(vt1.c0 AS INTEGER))) WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOT NULL))AND(((((0.9592457715033358)%(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c1))) AND (((vt0.c0) NOT NULL)))))) ORDER BY vt1.c0, (((vt0.c0)==(vt1.c0)) IN ()), ((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))) ISNULL) ASC;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))&(CAST(vt1.c0 AS INTEGER))) WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOT NULL)) ORDER BY CAST(((vt1.c0)&(vt0.c1)) AS INTEGER) ASC  NULLS FIRST, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))&(vt0.c1)) ASC  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))&(CAST(vt1.c0 AS INTEGER))) WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOT NULL))AND(((((0.9592457715033358)%(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c1))) AND (((vt0.c0) NOT NULL)))))) ORDER BY vt1.c0, (((vt0.c0)==(vt1.c0)) IN ()), ((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))) ISNULL) ASC;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY DATETIME(CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0)>(vt1.c0)), '-633882828', 0.05525809846547425) DESC;
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY DATETIME(CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0)>(vt1.c0)), '-633882828', 0.05525809846547425) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((vt1.c0)<(((vt1.c0) ISNULL)))) ORDER BY DATETIME(CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0)>(vt1.c0)), '-633882828', 0.05525809846547425) DESC LIMIT 0x1;
SELECT ALL * FROM vt1, vt0 WHERE ((('')*((vt0.c0 IN (vt1.c0))))) ORDER BY (((vt0.c1 IN (NULL, vt1.c0))) IS FALSE) DESC, TRIM((~ (vt1.c0)), CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END), (~ (((vt0.c0)|(vt1.c0)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((('')*((vt0.c0 IN (vt1.c0)))))AND(CASE (((vt1.c0, vt1.c0, vt0.c1, vt0.c1, vt1.c0))<=((vt1.c0, vt0.c0, vt1.c0, vt0.c1, vt0.c0)))  WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt0.c1 IN (x'', vt0.c1)) WHEN CAST(vt0.c0 AS BLOB) THEN (((vt1.c0, vt0.c1, vt1.c0))<=((-4860928.0, vt0.c0, vt0.c1))) WHEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN 's6P駲' ELSE vt0.c0 END))) ORDER BY (((vt0.c1 IN (NULL, vt1.c0))) IS FALSE) DESC, TRIM((~ (vt1.c0)), CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END), (~ (((vt0.c0)|(vt1.c0)))) ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE WHEN '489374913' THEN x'31' ELSE CAST(vt0.c0 AS REAL) END) ORDER BY (((vt0.c1 IN (NULL, vt1.c0))) IS FALSE) DESC, TRIM((~ (vt1.c0)), CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END), (~ (((vt0.c0)|(vt1.c0)))) ASC  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM vt1, vt0 WHERE ((('')*((vt0.c0 IN (vt1.c0))))) ORDER BY (((vt0.c1 IN (NULL, vt1.c0))) IS FALSE) DESC, TRIM((~ (vt1.c0)), CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END), (~ (((vt0.c0)|(vt1.c0)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((('')*((vt0.c0 IN (vt1.c0)))))AND(CASE (((vt1.c0, vt1.c0, vt0.c1, vt0.c1, vt1.c0))<=((vt1.c0, vt0.c0, vt1.c0, vt0.c1, vt0.c0)))  WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt0.c1 IN (x'', vt0.c1)) WHEN CAST(vt0.c0 AS BLOB) THEN (((vt1.c0, vt0.c1, vt1.c0))<=((-4860928.0, vt0.c0, vt0.c1))) WHEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN 's6P駲' ELSE vt0.c0 END))) ORDER BY (((vt0.c1 IN (NULL, vt1.c0))) IS FALSE) DESC, TRIM((~ (vt1.c0)), CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END), (~ (((vt0.c0)|(vt1.c0)))) ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE WHEN '489374913' THEN x'31' ELSE CAST(vt0.c0 AS REAL) END) ORDER BY (((vt0.c1 IN (NULL, vt1.c0))) IS FALSE) DESC, TRIM((~ (vt1.c0)), CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END), (~ (((vt0.c0)|(vt1.c0)))) ASC  NULLS LAST LIMIT 0X2;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)=(vt0.c1)) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(((vt0.c0)=(vt0.c1)) AS TEXT))AND(((((((((TOTAL_CHANGES())OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c1)=(vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))))) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST, ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(x''))) ISNULL) ASC;
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), (+ (vt0.c0)))) AND (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY vt0.c0 DESC;
SELECT DISTINCT MAX(vt1.c0) FROM vt1, vt0 WHERE ((((vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), (+ (vt0.c0)))) AND (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY (((CAST(vt1.c0 AS TEXT), (~ (vt0.c1)), ((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)), ((0.16305163234884568) NOT BETWEEN (vt0.c1) AND (vt0.c0))))=((((vt0.c0)LIKE(vt0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (NULL)), CASE '-844162262'  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, LIKELY(DISTINCT vt0.c1)))), NULL  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(vt1.c0 COLLATE BINARY)))AND(CASE WHEN vt1.c0 THEN x'64' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT DISTINCT * FROM vt1 WHERE (((((((CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(vt1.c0 COLLATE BINARY)))AND(CASE WHEN vt1.c0 THEN x'64' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(NULL))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS BLOB), ((- (vt1.c0)) IN (((vt1.c0)>=(vt1.c0)), load_extension(vt1.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(vt1.c0 COLLATE BINARY)))AND(CASE WHEN vt1.c0 THEN x'64' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT DISTINCT * FROM vt1 WHERE (((((((CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(vt1.c0 COLLATE BINARY)))AND(CASE WHEN vt1.c0 THEN x'64' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(NULL))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS BLOB), ((- (vt1.c0)) IN (((vt1.c0)>=(vt1.c0)), load_extension(vt1.c0))) DESC  NULLS FIRST;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((((NOT (vt1.c0)))OR(((vt1.c0)+(vt1.c0))))) ORDER BY CASE WHEN vt1.c0 THEN ((vt1.c0) ISNULL) ELSE CASE WHEN vt1.c0 THEN x'' END END ASC  NULLS LAST, (((vt1.c0) IS TRUE) IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT MAX(vt1.c0) FROM vt1 WHERE ((((((NOT (vt1.c0)))OR(((vt1.c0)+(vt1.c0)))))AND((((vt1.c0 IN (vt1.c0, NULL)))<<(TIME(x'', vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY CASE WHEN vt1.c0 THEN ((vt1.c0) ISNULL) ELSE CASE WHEN vt1.c0 THEN x'' END END ASC  NULLS LAST, (((vt1.c0) IS TRUE) IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT MIN(vt0.c0) FROM vt0 WHERE ('.') ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((('.')AND((((NOT (vt0.c1)))||(((vt0.c1)+(vt0.c0))))))) ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (+ ('-1746798111')) THEN (+ (vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) ELSE NULL END) ORDER BY 0.4004084494653515 ASC, CASE WHEN (((vt1.c0))=((vt1.c0))) THEN CAST(vt1.c0 AS NUMERIC) WHEN CAST(vt1.c0 AS TEXT) THEN '^R' WHEN ((vt1.c0)%(vt1.c0)) THEN ((vt1.c0) ISNULL) ELSE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(x'08')))OR(vt1.c0)) END, x'1ff69f'  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0 COLLATE RTRIM  WHEN (+ ('-1746798111')) THEN (+ (vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) ELSE NULL END)AND(((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)GLOB(((vt1.c0) NOT NULL)))))) ORDER BY vt1.c0 ASC  NULLS LAST, CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN vt1.c0 THEN CASE WHEN NULL THEN vt1.c0 END ELSE (vt1.c0 IN ()) END DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (+ ('-1746798111')) THEN (+ (vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) ELSE NULL END) ORDER BY 0.4004084494653515 ASC, CASE WHEN (((vt1.c0))=((vt1.c0))) THEN CAST(vt1.c0 AS NUMERIC) WHEN CAST(vt1.c0 AS TEXT) THEN '^R' WHEN ((vt1.c0)%(vt1.c0)) THEN ((vt1.c0) ISNULL) ELSE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(x'08')))OR(vt1.c0)) END, x'1ff69f'  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0 COLLATE RTRIM  WHEN (+ ('-1746798111')) THEN (+ (vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) ELSE NULL END)AND(((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)GLOB(((vt1.c0) NOT NULL)))))) ORDER BY vt1.c0 ASC  NULLS LAST, CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN vt1.c0 THEN CASE WHEN NULL THEN vt1.c0 END ELSE (vt1.c0 IN ()) END DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM vt1, vt0 WHERE (RTRIM(CAST(vt0.c0 AS NUMERIC)));
SELECT DISTINCT * FROM vt1, vt0 WHERE (RTRIM(CAST(vt0.c0 AS NUMERIC))) ORDER BY CASE WHEN vt0.c0 THEN (vt0.c1 IN (vt1.c0)) WHEN ((vt0.c1) IS FALSE) THEN ((vt1.c0)<>(vt0.c1)) ELSE ((vt0.c1)>>(vt0.c1)) END INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 END) NOTNULL)) ORDER BY CASE WHEN vt0.c0 THEN (vt0.c1 IN (vt1.c0)) WHEN ((vt0.c1) IS FALSE) THEN ((vt1.c0)!=(vt0.c1)) ELSE ((vt0.c1)>>(vt0.c1)) END;
SELECT * FROM vt1, vt0 WHERE (RTRIM(CAST(vt0.c0 AS NUMERIC)));
SELECT DISTINCT * FROM vt1, vt0 WHERE (RTRIM(CAST(vt0.c0 AS NUMERIC))) ORDER BY CASE WHEN vt0.c0 THEN (vt0.c1 IN (vt1.c0)) WHEN ((vt0.c1) IS FALSE) THEN ((vt1.c0)<>(vt0.c1)) ELSE ((vt0.c1)>>(vt0.c1)) END INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 END) NOTNULL)) ORDER BY CASE WHEN vt0.c0 THEN (vt0.c1 IN (vt1.c0)) WHEN ((vt0.c1) IS FALSE) THEN ((vt1.c0)!=(vt0.c1)) ELSE ((vt0.c1)>>(vt0.c1)) END;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (vt1.c0 IN ()) WHERE (((x'b3')AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((((-2.022459642E9) NOTNULL))>=(vt1.c0)) ASC  NULLS FIRST, ((CAST(vt0.c1 AS REAL))|(vt0.c0 COLLATE NOCASE));
SELECT * FROM vt0 CROSS JOIN vt1 ON (vt1.c0 IN ()) WHERE (((x'b3')AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((vt0.c0) BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c0)) AND (vt0.c0 COLLATE NOCASE)) ASC, ((((((((((((vt0.c0)>(vt0.c0)))AND((- (vt1.c0)))))OR(((vt0.c1)<>(0X36b2efb1)))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'e0')))))OR(((vt1.c0)*(vt0.c1)))))OR(((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))), CASE '0.2618691619166992'  WHEN (NOT (vt1.c0)) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0))>=((vt1.c0))) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) THEN 6.86262591E8 END ASC INTERSECT SELECT * FROM vt0 CROSS JOIN vt1 ON (vt1.c0 IN ()) WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND ((vt0.c1 IN ())))) ORDER BY ((vt0.c0) BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c0)) AND (vt0.c0 COLLATE NOCASE)) ASC, ((((((((((((vt0.c0)>(vt0.c0)))AND((- (vt1.c0)))))OR(((vt0.c1)!=(917696433)))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'e0')))))OR(((vt1.c0)*(vt0.c1)))))OR(((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))), CASE '0.2618691619166992'  WHEN (NOT (vt1.c0)) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0))>=((vt1.c0))) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) THEN 6.86262591E8 END ASC;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (vt1.c0 IN ()) WHERE (((x'b3')AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((((-2.022459642E9) NOTNULL))>=(vt1.c0)) ASC  NULLS FIRST, ((CAST(vt0.c1 AS REAL))|(vt0.c0 COLLATE NOCASE));
SELECT * FROM vt0 CROSS JOIN vt1 ON (vt1.c0 IN ()) WHERE (((x'b3')AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((vt0.c0) BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c0)) AND (vt0.c0 COLLATE NOCASE)) ASC, ((((((((((((vt0.c0)>(vt0.c0)))AND((- (vt1.c0)))))OR(((vt0.c1)<>(0X36b2efb1)))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'e0')))))OR(((vt1.c0)*(vt0.c1)))))OR(((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))), CASE '0.2618691619166992'  WHEN (NOT (vt1.c0)) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0))>=((vt1.c0))) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) THEN 6.86262591E8 END ASC INTERSECT SELECT * FROM vt0 CROSS JOIN vt1 ON (vt1.c0 IN ()) WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND ((vt0.c1 IN ())))) ORDER BY ((vt0.c0) BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c0)) AND (vt0.c0 COLLATE NOCASE)) ASC, ((((((((((((vt0.c0)>(vt0.c0)))AND((- (vt1.c0)))))OR(((vt0.c1)!=(917696433)))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'e0')))))OR(((vt1.c0)*(vt0.c1)))))OR(((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))), CASE '0.2618691619166992'  WHEN (NOT (vt1.c0)) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0))>=((vt1.c0))) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) THEN 6.86262591E8 END ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM) ORDER BY ((json_type(vt0.c0))OR((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c1, vt0.c0)))));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM) ORDER BY ((json_type(vt0.c0))OR((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c1, vt0.c0))))) LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE (CAST((~ (x'1aa0')) AS BLOB)) ORDER BY (vt0.c1 IN (vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS LAST, x'3eef'  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST((~ (x'1aa0')) AS BLOB)) ORDER BY (vt0.c1 IN (vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS LAST, x'3eef'  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (CAST((~ (x'1aa0')) AS BLOB)) ORDER BY (vt0.c1 IN (vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS LAST, x'3eef'  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST((~ (x'1aa0')) AS BLOB)) ORDER BY (vt0.c1 IN (vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS LAST, x'3eef'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((rtreenode(-734681191, vt0.c1) IN (NULLIF(x'', vt0.c1)))) ORDER BY (((- (vt0.c1))) IS TRUE) ASC  NULLS LAST, (CAST(vt0.c0 AS TEXT) IN ((vt0.c0 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((rtreenode(0xffffffffd435a799, vt0.c1) IN (NULLIF(x'', vt0.c1))))AND(((LOWER(vt0.c1))&(((vt0.c1)%(vt0.c1))))))) ORDER BY 0.7509201838864082 LIMIT 0X0;
SELECT * FROM vt0 WHERE ((((vt0.c1)==(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)=(vt0.c0)) IN ())) LIMIT 0 INTERSECT SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>(CAST(vt0.c0 AS NUMERIC)))) LIMIT 0;
SELECT * FROM vt0 WHERE ((((vt0.c1)==(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)=(vt0.c0)) IN ())) LIMIT 0 INTERSECT SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>(CAST(vt0.c0 AS NUMERIC)))) LIMIT 0;
SELECT ALL MAX(vt1.c0) FROM vt1 WHERE ((~ (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE ((((~ (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))AND((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0) IN (((vt1.c0)AND(-2.011903462E9))))))) LIMIT 0;
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (LOWER(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (((LOWER(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))AND(((((vt0.c1)AND((NOT (vt1.c0)))))AND(vt0.c0))))) LIMIT 0x1 INTERSECT SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (vt1.c0) LIMIT 0x1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS BLOB))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0)/(vt1.c0))))));
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS BLOB))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0)/(vt1.c0))))))AND(SQLITE_COMPILEOPTION_USED(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)>(vt1.c0)) IN (((vt1.c0) ISNULL)))) LIMIT 1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS BLOB))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0)/(vt1.c0))))));
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS BLOB))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0)/(vt1.c0))))))AND(SQLITE_COMPILEOPTION_USED(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)>(vt1.c0)) IN (((vt1.c0) ISNULL)))) LIMIT 1;
SELECT * FROM vt0 CROSS JOIN vt1 ON vt0.c0 COLLATE RTRIM WHERE ((((NOT (vt0.c1))) IS FALSE));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt0.c0 COLLATE RTRIM WHERE ((((((NOT (vt0.c1))) IS FALSE))AND(vt0.c0))) ORDER BY (((vt1.c0 IN ())) NOT NULL)  NULLS LAST, CASE (vt0.c0 IN (vt0.c0))  WHEN (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN (((1693756632))>((vt0.c1))) WHEN ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END INTERSECT SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt0.c0 COLLATE RTRIM WHERE (CASE WHEN rtreenode(vt0.c0, 0x4f0e50f6) THEN (vt1.c0 IN (x'17', vt1.c0)) WHEN UNLIKELY(-1444771918) THEN (((vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, NULL)) AND ((vt0.c1, vt1.c0))) WHEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0)/(vt1.c0)) THEN (vt0.c0 IN ()) ELSE ((('-517599695', vt0.c1)) BETWEEN ((vt0.c0, vt1.c0)) AND (('x', vt0.c1))) END) ORDER BY (((vt1.c0 IN ())) NOT NULL)  NULLS LAST, CASE (vt0.c0 IN (vt0.c0))  WHEN (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN (((0X64f4acd8))>((vt0.c1))) WHEN ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END;
SELECT * FROM vt0 CROSS JOIN vt1 ON vt0.c0 COLLATE RTRIM WHERE ((((NOT (vt0.c1))) IS FALSE));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt0.c0 COLLATE RTRIM WHERE ((((((NOT (vt0.c1))) IS FALSE))AND(vt0.c0))) ORDER BY (((vt1.c0 IN ())) NOT NULL)  NULLS LAST, CASE (vt0.c0 IN (vt0.c0))  WHEN (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN (((1693756632))>((vt0.c1))) WHEN ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END INTERSECT SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt0.c0 COLLATE RTRIM WHERE (CASE WHEN rtreenode(vt0.c0, 0x4f0e50f6) THEN (vt1.c0 IN (x'17', vt1.c0)) WHEN UNLIKELY(-1444771918) THEN (((vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, NULL)) AND ((vt0.c1, vt1.c0))) WHEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0)/(vt1.c0)) THEN (vt0.c0 IN ()) ELSE ((('-517599695', vt0.c1)) BETWEEN ((vt0.c0, vt1.c0)) AND (('x', vt0.c1))) END) ORDER BY (((vt1.c0 IN ())) NOT NULL)  NULLS LAST, CASE (vt0.c0 IN (vt0.c0))  WHEN (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN (((0X64f4acd8))>((vt0.c1))) WHEN ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END;
SELECT MAX(vt0.c0) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (x'7f'))) NOT BETWEEN (((vt0.c1)<<(vt0.c0))) AND (((vt0.c1)|('哼OW43'))));
SELECT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c1)AND(''))) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM))>=((CAST(vt0.c0 AS INTEGER), 0.8317632309334879)))  NULLS LAST, (((vt0.c1, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c1, 0.6773965950865544)), vt0.c1 COLLATE NOCASE, (vt0.c1 IN (vt0.c0)), (~ (vt0.c1)))) AND (((vt0.c0 IN ()), ROUND(vt0.c1, '1489150588'), ((vt0.c0)IS(vt0.c0)), (NULL IN (vt0.c0, vt0.c0, vt0.c1))))), vt0.c0 DESC LIMIT 0;
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON 0Xffffffffebcbe603 WHERE ((+ (CAST(vt0.c0 AS NUMERIC))));
SELECT DISTINCT COUNT(*) FROM vt0 CROSS JOIN vt1 ON -338958845 WHERE ((+ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((- (vt0.c1)) IN (vt1.c0 COLLATE RTRIM)) ASC LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 CROSS JOIN vt1 ON 0xffffffffebcbe603 WHERE (CAST((~ (vt1.c0)) AS NUMERIC)) ORDER BY ((- (vt0.c1)) IN (vt1.c0 COLLATE RTRIM)) ASC LIMIT 0x0;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((CAST(0.18445353608451565 AS BLOB))AND(NULLIF(DISTINCT vt1.c0, vt0.c1))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) WHERE ((- (((vt0.c1)IS(vt0.c0))))) ORDER BY LIKELIHOOD(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, (+ (vt0.c0))), ((vt1.c0 COLLATE BINARY)&(NULLIF(DISTINCT vt0.c0, vt1.c0))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((CAST(0.18445353608451565 AS BLOB))AND(NULLIF(DISTINCT vt1.c0, vt0.c1))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) WHERE ((((- (((vt0.c1)IS(vt0.c0)))))AND((((json_patch(vt1.c0, vt0.c1)))<=((CASE WHEN vt1.c0 THEN vt0.c0 END)))))) ORDER BY x'3e' DESC, (((((NULL)OR(vt1.c0)), CAST(vt0.c1 AS REAL)))>=((((vt0.c1) ISNULL), (vt0.c0 IN (vt0.c1, vt1.c0))))) INTERSECT SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((CAST(0.18445353608451565 AS BLOB))AND(NULLIF(DISTINCT vt1.c0, vt0.c1))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) WHERE (CAST((vt0.c1 IN ()) AS INTEGER)) ORDER BY x'3e' DESC, (((((NULL)OR(vt1.c0)), CAST(vt0.c1 AS REAL)))>=((((vt0.c1) ISNULL), (vt0.c0 IN (vt0.c1, vt1.c0)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((CAST(0.18445353608451565 AS BLOB))AND(NULLIF(DISTINCT vt1.c0, vt0.c1))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) WHERE ((- (((vt0.c1)IS(vt0.c0))))) ORDER BY LIKELIHOOD(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, (+ (vt0.c0))), ((vt1.c0 COLLATE BINARY)&(NULLIF(DISTINCT vt0.c0, vt1.c0))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0) IS FALSE))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(vt0.c1)))AND((((('-1403372158')OR(vt0.c1)))AND(vt0.c0)))))OR(json_array(vt0.c1, vt0.c0, '&-/P\G+', vt0.c1, vt0.c1))))OR((vt0.c1 IN (vt0.c0, vt0.c1)))));
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0) IS FALSE))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(vt0.c1)))AND((((('-1403372158')OR(vt0.c1)))AND(vt0.c0)))))OR(json_array(vt0.c1, vt0.c0, '&-/P\G+', vt0.c1, vt0.c1))))OR((vt0.c1 IN (vt0.c0, vt0.c1)))))AND(((vt0.c0 IN (vt0.c0)) IN (((vt0.c0) IS FALSE), HEX(vt0.c1)))))) ORDER BY ((((vt0.c1)*(vt0.c0)))==(COALESCE(DISTINCT vt0.c0, NULL))), CASE WHEN (((vt0.c1, vt0.c1, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c1, vt0.c1))) THEN ((vt0.c0)&(vt0.c1)) ELSE 0x7f9a9cce END  NULLS LAST LIMIT 0;
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0) IS FALSE))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(vt0.c1)))AND((((('-1403372158')OR(vt0.c1)))AND(vt0.c0)))))OR(json_array(vt0.c1, vt0.c0, '&-/P\G+', vt0.c1, vt0.c1))))OR((vt0.c1 IN (vt0.c0, vt0.c1)))));
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, (vt1.c0 IN (vt1.c0))));
SELECT DISTINCT MAX(vt0.c1) FROM vt1, vt0 WHERE (NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, (vt1.c0 IN (vt1.c0)))) ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 END)) AND ((vt0.c1)))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (json_extract(((vt0.c0) IS FALSE), ''));
SELECT DISTINCT * FROM vt0, vt1 WHERE (json_extract(((vt0.c0) IS FALSE), '')) LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE (json_extract(((vt0.c0) IS FALSE), ''));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END) NOT NULL));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END) NOT NULL)) LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((((- (vt1.c0))) IS TRUE)) LIMIT 0;
SELECT * FROM vt1 INNER JOIN vt0 ON (((vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0) IS FALSE), vt0.c1)) AND ((((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)))OR(x'')))AND(vt0.c0)), vt0.c1))) WHERE ((((('1838477661') NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOTNULL)) ORDER BY ((((((vt1.c0) NOT NULL))OR(((((((((((((NULL)OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(0.8447476149270756)))OR(vt0.c0)))))AND((vt1.c0 IN ()))), vt0.c1 ASC, vt0.c1  NULLS FIRST;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (((vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0) IS FALSE), vt0.c1)) AND ((((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)))OR(x'')))AND(vt0.c0)), vt0.c1))) WHERE ((((('1838477661') NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOTNULL)) ORDER BY x'28d6' DESC, CAST(CAST(vt0.c0 AS INTEGER) AS TEXT) ASC  NULLS LAST;
SELECT * FROM vt1 INNER JOIN vt0 ON (((vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0) IS FALSE), vt0.c1)) AND ((((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)))OR(x'')))AND(vt0.c0)), vt0.c1))) WHERE ((((('1838477661') NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOTNULL)) ORDER BY ((((((vt1.c0) NOT NULL))OR(((((((((((((NULL)OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(0.8447476149270756)))OR(vt0.c0)))))AND((vt1.c0 IN ()))), vt0.c1 ASC, vt0.c1  NULLS FIRST;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE (x'e7') ORDER BY json_extract(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((((((vt0.c1)AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))  NULLS LAST, (((((((((((vt0.c0)AND(-292595475)))OR(NULL)))AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c1)) IN (CAST(vt1.c0 AS BLOB)))  NULLS FIRST;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE (((x'e7')AND(((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt1.c0))))) ORDER BY (- (((vt1.c0) NOTNULL))) DESC  NULLS LAST LIMIT 2;
SELECT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE RTRIM) ORDER BY vt0.c0  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE RTRIM) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)OR(((((((vt0.c1)OR(vt0.c1)))AND('0.883956279415503')))AND('-1096545910')))))AND('哼'))  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (NULL) ORDER BY (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (NULL) ORDER BY (~ (UNICODE(vt0.c0))) ASC, (- (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((x'bbc7' COLLATE NOCASE) BETWEEN (0.06890934839515817) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (~ (UNICODE(vt0.c0))) ASC, (- (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST LIMIT 1;
SELECT ALL MIN(vt0.c0) FROM vt1 CROSS JOIN vt0 ON vt0.c1 WHERE ((((vt0.c1)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0))))));
SELECT DISTINCT MIN(vt0.c0) FROM vt1 CROSS JOIN vt0 ON vt0.c1 WHERE ((((vt0.c1)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0)))))) LIMIT 0 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt1 CROSS JOIN vt0 ON vt0.c1 WHERE ((((vt0.c1 IN ()))>>(((vt1.c0)%(vt0.c1))))) LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE (((((0.3076701394477728)OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND(vt1.c0)));
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((((((0.3076701394477728)OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND(vt1.c0)))AND((((('踞+}aj1
|u')OR(CAST(vt1.c0 AS NUMERIC))))AND((vt0.c0 IN ())))))) ORDER BY ((((vt0.c0)LIKE(vt1.c0))) NOT BETWEEN (((((((((((vt1.c0)OR(vt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(1450261904))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))), vt0.c1  NULLS FIRST INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (0.9611473190740197) ORDER BY ((((vt0.c0)LIKE(vt1.c0))) NOT BETWEEN (((((((((((vt1.c0)OR(vt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(1450261904))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))), vt0.c1  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((((0.3076701394477728)OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND(vt1.c0)));
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((((((0.3076701394477728)OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND(vt1.c0)))AND((((('踞+}aj1
|u')OR(CAST(vt1.c0 AS NUMERIC))))AND((vt0.c0 IN ())))))) ORDER BY ((((vt0.c0)LIKE(vt1.c0))) NOT BETWEEN (((((((((((vt1.c0)OR(vt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(1450261904))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))), vt0.c1  NULLS FIRST INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (0.9611473190740197) ORDER BY ((((vt0.c0)LIKE(vt1.c0))) NOT BETWEEN (((((((((((vt1.c0)OR(vt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(1450261904))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))), vt0.c1  NULLS FIRST;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE (((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)AND(LIKELY(vt1.c0))))AND(IFNULL(vt1.c0, vt1.c0))));
SELECT DISTINCT MAX(vt0.c0) FROM vt1, vt0 WHERE (((((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)AND(LIKELY(vt1.c0))))AND(IFNULL(vt1.c0, vt1.c0))))AND(CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt1.c0)GLOB(vt0.c1)) WHEN ((vt0.c0)>(vt0.c0)) THEN LENGTH(vt1.c0) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)IS(vt0.c0)) ELSE ((vt0.c0)IS NOT(vt0.c1)) END))) ORDER BY TIME(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END, (0.8667133396980002 IN (vt0.c0)), CAST(vt1.c0 AS BLOB)) INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt1, vt0 WHERE (-1868400459) ORDER BY TIME(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END, (0.8667133396980002 IN (vt0.c0)), CAST(vt1.c0 AS BLOB));
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0)||(vt1.c0)))));
SELECT * FROM vt1 WHERE ((NOT (((vt1.c0)||(vt1.c0))))) ORDER BY CAST(vt1.c0 AS INTEGER);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0)||(vt1.c0)))));
SELECT * FROM vt1 WHERE ((NOT (((vt1.c0)||(vt1.c0))))) ORDER BY CAST(vt1.c0 AS INTEGER);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)+(NULL)))|((vt1.c0 IN ())))) ORDER BY (((vt1.c0 IN (vt1.c0)))/(((vt1.c0)&(vt1.c0))))  NULLS FIRST, UNICODE(NULL), ((((vt1.c0) NOT NULL)) IS TRUE) DESC  NULLS FIRST, (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0.18038803052662833) AND (vt1.c0))) AND (CAST(vt1.c0 AS TEXT))) DESC;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)+(NULL)))|((vt1.c0 IN ()))))AND((vt1.c0 IN ()) COLLATE RTRIM))) ORDER BY (((vt1.c0 IN (vt1.c0)))/(((vt1.c0)&(vt1.c0))))  NULLS FIRST, UNICODE(NULL), ((((vt1.c0) NOT NULL)) IS TRUE) DESC  NULLS FIRST, (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0.18038803052662833) AND (vt1.c0))) AND (CAST(vt1.c0 AS TEXT))) DESC LIMIT 0X1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)+(NULL)))|((vt1.c0 IN ())))) ORDER BY (((vt1.c0 IN (vt1.c0)))/(((vt1.c0)&(vt1.c0))))  NULLS FIRST, UNICODE(NULL), ((((vt1.c0) NOT NULL)) IS TRUE) DESC  NULLS FIRST, (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0.18038803052662833) AND (vt1.c0))) AND (CAST(vt1.c0 AS TEXT))) DESC;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)+(NULL)))|((vt1.c0 IN ()))))AND((vt1.c0 IN ()) COLLATE RTRIM))) ORDER BY (((vt1.c0 IN (vt1.c0)))/(((vt1.c0)&(vt1.c0))))  NULLS FIRST, UNICODE(NULL), ((((vt1.c0) NOT NULL)) IS TRUE) DESC  NULLS FIRST, (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0.18038803052662833) AND (vt1.c0))) AND (CAST(vt1.c0 AS TEXT))) DESC LIMIT 0X1;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((((vt1.c0 IN ()))AND(vt1.c0)))OR(CASE '2082220442'  WHEN vt0.c1 THEN vt0.c0 END)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)))AND(vt0.c1))) ORDER BY LIKELY(DISTINCT 0.17905642966861002)  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((((((((((vt1.c0 IN ()))AND(vt1.c0)))OR(CASE '2082220442'  WHEN vt0.c1 THEN vt0.c0 END)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)))AND(vt0.c1))) ORDER BY (((((vt0.c0, 662687204, NULL, vt0.c1))<((vt1.c0, vt1.c0, vt0.c1, vt0.c0)))) NOTNULL) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1) NOT BETWEEN (((NULL)>(vt0.c0))) AND (CAST(NULL AS INTEGER)))) ORDER BY (((vt1.c0 IN (vt0.c1))) IS TRUE) ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1) NOT BETWEEN (((NULL)>(vt0.c0))) AND (CAST(NULL AS INTEGER)))) ORDER BY (((((vt0.c1, vt0.c1)) NOT BETWEEN ((x'335cd7', vt1.c0)) AND ((vt0.c0, ',7'))))+(vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END) AND (((('', vt1.c0, vt0.c1, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt0.c0, x'', vt1.c0)))))  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (((x'7c')<((('.	ᵫ}E|~9')OR(vt0.c0))))) ORDER BY (((((vt0.c1, vt0.c1)) NOT BETWEEN ((x'335cd7', vt1.c0)) AND ((vt0.c0, ',7'))))+(vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END) AND (((('', vt1.c0, vt0.c1, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt0.c0, x'', vt1.c0)))))  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM vt1 WHERE (CHAR(CAST(vt1.c0 AS TEXT))) ORDER BY (((vt1.c0) ISNULL) IN ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))), ((vt1.c0)|(vt1.c0)))), vt1.c0 ASC;
SELECT DISTINCT * FROM vt1 WHERE (((CHAR(CAST(vt1.c0 AS TEXT)))AND(CAST(vt1.c0 COLLATE BINARY AS NUMERIC)))) ORDER BY (NOT (((vt1.c0)>>('716118947'))))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt1 WHERE (CHAR(CAST(vt1.c0 AS TEXT))) ORDER BY (((vt1.c0) ISNULL) IN ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))), ((vt1.c0)|(vt1.c0)))), vt1.c0 ASC;
SELECT DISTINCT * FROM vt1 WHERE (((CHAR(CAST(vt1.c0 AS TEXT)))AND(CAST(vt1.c0 COLLATE BINARY AS NUMERIC)))) ORDER BY (NOT (((vt1.c0)>>('716118947'))))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c1 COLLATE NOCASE)AND(CHANGES())));
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c1 COLLATE NOCASE)AND(CHANGES())))AND(vt0.c1))) LIMIT 0x1;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c1 COLLATE NOCASE)AND(CHANGES())));
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c1 COLLATE NOCASE)AND(CHANGES())))AND(vt0.c1))) LIMIT 0x1;
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, '')) NOT BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ('' IN ()), (vt1.c0 IN ()))) AND ((CAST(vt1.c0 AS BLOB), CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS NUMERIC))))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ((vt1.c0 IN ()))) ASC  NULLS FIRST, ((((vt1.c0)<(vt1.c0))) BETWEEN ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, 'u')))) AND (NULL)) DESC;
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, '')) NOT BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ('' IN ()), (vt1.c0 IN ()))) AND ((CAST(vt1.c0 AS BLOB), CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS NUMERIC))))) ORDER BY ((((vt1.c0) IS TRUE))+(vt1.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END ASC  NULLS LAST, NULL  NULLS FIRST INTERSECT SELECT ALL * FROM vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR('0.14087406893072174')))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) NOT BETWEEN ('J') AND (vt1.c0))))) ORDER BY ((((vt1.c0) IS TRUE))+(vt1.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END ASC  NULLS LAST, NULL  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, '')) NOT BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ('' IN ()), (vt1.c0 IN ()))) AND ((CAST(vt1.c0 AS BLOB), CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS NUMERIC))))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ((vt1.c0 IN ()))) ASC  NULLS FIRST, ((((vt1.c0)<(vt1.c0))) BETWEEN ((((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, 'u')))) AND (NULL)) DESC;
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, '')) NOT BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ('' IN ()), (vt1.c0 IN ()))) AND ((CAST(vt1.c0 AS BLOB), CAST(vt1.c0 AS TEXT), CAST(vt1.c0 AS NUMERIC))))) ORDER BY ((((vt1.c0) IS TRUE))+(vt1.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END ASC  NULLS LAST, NULL  NULLS FIRST INTERSECT SELECT ALL * FROM vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR('0.14087406893072174')))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) NOT BETWEEN ('J') AND (vt1.c0))))) ORDER BY ((((vt1.c0) IS TRUE))+(vt1.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END ASC  NULLS LAST, NULL  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN x'' THEN vt1.c0 END)|((vt0.c0 IN ()))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((CASE WHEN x'' THEN vt1.c0 END)|((vt0.c0 IN ()))))AND((vt1.c0 COLLATE NOCASE IN ((vt0.c0 IN (vt0.c0))))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN (CASE NULL  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (x'2a'))  NULLS LAST, vt0.c1;
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN x'' THEN vt1.c0 END)|((vt0.c0 IN ()))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((CASE WHEN x'' THEN vt1.c0 END)|((vt0.c0 IN ()))))AND((vt1.c0 COLLATE NOCASE IN ((vt0.c0 IN (vt0.c0))))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN (CASE NULL  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (x'2a'))  NULLS LAST, vt0.c1;
SELECT * FROM vt0 WHERE ((- ((vt0.c1 IN (vt0.c0, vt0.c1, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((- ((vt0.c1 IN (vt0.c0, vt0.c1, vt0.c0)))));
SELECT * FROM vt0 WHERE ((- ((vt0.c1 IN (vt0.c0, vt0.c1, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((- ((vt0.c1 IN (vt0.c0, vt0.c1, vt0.c0)))));
SELECT * FROM vt1 INNER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) WHERE (CAST(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END AS TEXT));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) WHERE (CAST(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END AS TEXT)) ORDER BY (vt0.c1 IN ()) COLLATE RTRIM, (((vt1.c0 IN (vt1.c0)))GLOB(CAST(vt0.c1 AS BLOB))) DESC, ((TRIM(vt0.c0, 146247365))%(UPPER(vt0.c1))) DESC  NULLS LAST LIMIT 0X2;
SELECT * FROM vt1 INNER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) WHERE (CAST(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END AS TEXT));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) WHERE (CAST(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END AS TEXT)) ORDER BY (vt0.c1 IN ()) COLLATE RTRIM, (((vt1.c0 IN (vt1.c0)))GLOB(CAST(vt0.c1 AS BLOB))) DESC, ((TRIM(vt0.c0, 146247365))%(UPPER(vt0.c1))) DESC  NULLS LAST LIMIT 0X2;
SELECT MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0))<((vt1.c0))) IN (((vt1.c0)IS NOT(vt1.c0)))));
SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (((((vt1.c0))<((vt1.c0))) IN (((vt1.c0)IS NOT(vt1.c0))))) ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0)%(vt1.c0)) WHEN ((((((NULL)OR(x'daee03')))AND(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END DESC INTERSECT SELECT DISTINCT MAX(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0)%(vt1.c0)) WHEN ((((((NULL)OR(x'daee03')))AND(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1, vt0.c0)))<((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((ROUND(vt0.c0, vt0.c0))!=(CAST(vt0.c0 AS NUMERIC)));
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1 IN (vt0.c1, vt0.c0)))<((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0)>>(vt0.c0)) COLLATE BINARY))) ORDER BY ((COALESCE(DISTINCT vt0.c1, vt0.c1)) ISNULL), x'' DESC  NULLS FIRST, '-1982104426'  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (x'') ORDER BY ((COALESCE(DISTINCT vt0.c1, vt0.c1)) ISNULL), x'' DESC  NULLS FIRST, '-1982104426'  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1, vt0.c0)))<((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((ROUND(vt0.c0, vt0.c0))!=(CAST(vt0.c0 AS NUMERIC)));
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1 IN (vt0.c1, vt0.c0)))<((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0)>>(vt0.c0)) COLLATE BINARY))) ORDER BY ((COALESCE(DISTINCT vt0.c1, vt0.c1)) ISNULL), x'' DESC  NULLS FIRST, '-1982104426'  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (x'') ORDER BY ((COALESCE(DISTINCT vt0.c1, vt0.c1)) ISNULL), x'' DESC  NULLS FIRST, '-1982104426'  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (IFNULL(DISTINCT vt1.c0, NULL)))) ORDER BY ((LOWER(vt1.c0)) NOT NULL) ASC, vt1.c0 ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (IFNULL(DISTINCT vt1.c0, NULL)))) ORDER BY ((LOWER(vt1.c0)) NOT NULL) ASC, vt1.c0 ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (IFNULL(DISTINCT vt1.c0, NULL)))) ORDER BY ((LOWER(vt1.c0)) NOT NULL) ASC, vt1.c0 ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (IFNULL(DISTINCT vt1.c0, NULL)))) ORDER BY ((LOWER(vt1.c0)) NOT NULL) ASC, vt1.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (NULLIF(DISTINCT vt1.c0, vt0.c0) COLLATE BINARY COLLATE NOCASE);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((NULLIF(DISTINCT vt1.c0, vt0.c0) COLLATE BINARY COLLATE NOCASE)AND(vt1.c0 COLLATE NOCASE))) ORDER BY (((vt0.c1, vt0.c0)) BETWEEN (((+ (vt1.c0)), vt0.c1 COLLATE BINARY)) AND ((CAST(vt0.c1 AS INTEGER), ((vt1.c0) NOTNULL)))), (((- (vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND ('S8'))) AND ((+ (vt0.c1)))) ASC;
SELECT ALL * FROM vt1, vt0 WHERE (NULLIF(DISTINCT vt1.c0, vt0.c0) COLLATE BINARY COLLATE NOCASE);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((NULLIF(DISTINCT vt1.c0, vt0.c0) COLLATE BINARY COLLATE NOCASE)AND(vt1.c0 COLLATE NOCASE))) ORDER BY (((vt0.c1, vt0.c0)) BETWEEN (((+ (vt1.c0)), vt0.c1 COLLATE BINARY)) AND ((CAST(vt0.c1 AS INTEGER), ((vt1.c0) NOTNULL)))), (((- (vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND ('S8'))) AND ((+ (vt0.c1)))) ASC;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN -4860928 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY TYPEOF(((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)));
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN -4860928 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((((((vt1.c0, vt0.c0, vt1.c0, vt0.c0))<((vt1.c0, vt1.c0, vt1.c0, vt0.c1)))))==((CAST(vt1.c0 AS TEXT))))))) ORDER BY TYPEOF(((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1))) LIMIT 0 INTERSECT SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE (CASE WHEN LOWER(vt1.c0) THEN json_array(0.4534043679547741, vt0.c1, vt0.c0) WHEN vt1.c0 THEN (vt0.c0 IN (vt0.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY TYPEOF(((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1))) LIMIT 0X0;
SELECT ALL MIN(vt0.c0) FROM vt0, vt1 WHERE (CAST(((vt0.c1)-(vt0.c0)) AS NUMERIC)) ORDER BY ((((vt1.c0)OR(vt0.c1))) NOT NULL), (CASE vt0.c0  WHEN vt0.c0 THEN '-1257828529' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END IN (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END));
SELECT ALL MIN(vt0.c0) FROM vt0, vt1 WHERE (((CAST(((vt0.c1)-(vt0.c0)) AS NUMERIC))AND(((((((vt0.c0)AND(vt0.c0)))OR(x'2836'))) IS TRUE)))) ORDER BY ((((vt1.c0)OR(vt0.c1))) NOT NULL), (CASE vt0.c0  WHEN vt0.c0 THEN '-1257828529' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END IN (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END)) INTERSECT SELECT MIN(vt0.c0) FROM vt0, vt1 WHERE (INSTR(LIKE(vt0.c1, vt0.c1), ((vt0.c1) NOTNULL))) ORDER BY ((((vt1.c0)OR(vt0.c1))) NOT NULL), (CASE vt0.c0  WHEN vt0.c0 THEN '-1257828529' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END IN (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END));
SELECT * FROM vt1 WHERE (((((vt1.c0) IS TRUE))IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY, (NOT (vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)), (vt1.c0 IN (vt1.c0))))) ASC, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM ASC;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) IS TRUE))IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY IFNULL((~ (vt1.c0)), -1378822560);
SELECT * FROM vt1 WHERE (((((vt1.c0) IS TRUE))IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY, (NOT (vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)), (vt1.c0 IN (vt1.c0))))) ASC, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM ASC;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) IS TRUE))IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY IFNULL((~ (vt1.c0)), -1378822560);
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE ((((((vt1.c0, vt0.c1, x'c8', vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND (('-1818626169', vt0.c1, vt1.c0, vt0.c1)))) BETWEEN (((vt0.c1)|(vt0.c1))) AND (((vt1.c0) IS TRUE))));
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE ((((((((vt1.c0, vt0.c1, x'c8', vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND (('-1818626169', vt0.c1, vt1.c0, vt0.c1)))) BETWEEN (((vt0.c1)|(vt0.c1))) AND (((vt1.c0) IS TRUE))))AND(CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (vt0.c0 IN ()) WHEN ((vt0.c1)||(x'41')) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.3316542910255512))) WHEN (vt0.c1 IN ()) THEN vt1.c0 COLLATE BINARY ELSE ((vt1.c0)GLOB(vt0.c0)) END))) ORDER BY (((((vt0.c0))>((vt0.c0)))) IS TRUE);
SELECT MIN(vt0.c1) FROM vt0 WHERE ((((NOT (vt0.c0)))OR(CAST(vt0.c1 AS REAL))));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(CAST(vt0.c1 AS REAL))))AND((+ (((vt0.c1)LIKE(vt0.c0))))))) LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c1)))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))))OR(((vt0.c0)||(vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) LIMIT 0;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)>>(vt0.c0 COLLATE BINARY))) ORDER BY vt0.c1, json_quote(((vt0.c0)LIKE(0X496f630d))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)>>(vt0.c0 COLLATE BINARY)))AND(((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))IS(CAST(vt0.c0 AS INTEGER)))))) ORDER BY CASE vt0.c1  WHEN (vt0.c1 IN ()) THEN vt0.c1 WHEN NULL THEN ((vt0.c1)*(vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN '-136740434' END  NULLS FIRST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST LIMIT 0;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)>>(vt0.c0 COLLATE BINARY))) ORDER BY vt0.c1, json_quote(((vt0.c0)LIKE(0X496f630d))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)>>(vt0.c0 COLLATE BINARY)))AND(((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))IS(CAST(vt0.c0 AS INTEGER)))))) ORDER BY CASE vt0.c1  WHEN (vt0.c1 IN ()) THEN vt0.c1 WHEN NULL THEN ((vt0.c1)*(vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN '-136740434' END  NULLS FIRST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST LIMIT 0;
SELECT * FROM vt1 WHERE (CAST(((0X22585e15) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB));
SELECT * FROM vt1 WHERE (CAST(((576216597) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) ORDER BY '-1307813814'  NULLS LAST LIMIT 4 INTERSECT SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY '-1307813814'  NULLS LAST LIMIT 0x4;
SELECT * FROM vt1 WHERE (CAST(((0X22585e15) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB));
SELECT * FROM vt1 WHERE (CAST(((576216597) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) ORDER BY '-1307813814'  NULLS LAST LIMIT 4 INTERSECT SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY '-1307813814'  NULLS LAST LIMIT 0x4;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((- (vt0.c1))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (CAST(vt0.c0 AS INTEGER))) WHERE (CAST((((vt0.c1, vt0.c1, vt0.c0, vt0.c0))<((vt1.c0, vt0.c1, vt0.c1, vt0.c0))) AS TEXT)) ORDER BY ((((vt1.c0)>=(vt0.c0)))GLOB(((vt0.c0)LIKE(vt0.c0)))) ASC, ((vt0.c0)/(vt0.c0)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((- (vt0.c1))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (CAST(vt0.c0 AS INTEGER))) WHERE (((CAST((((vt0.c1, vt0.c1, vt0.c0, vt0.c0))<((vt1.c0, vt0.c1, vt0.c1, vt0.c0))) AS TEXT))AND(((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))IS NOT(((((vt1.c0)OR(vt0.c1)))AND(NULL))))))) ORDER BY ((((vt1.c0)>=(vt0.c0)))GLOB(((vt0.c0)LIKE(vt0.c0)))) ASC, ((vt0.c0)/(vt0.c0)) COLLATE RTRIM DESC INTERSECT SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((- (vt0.c1))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (CAST(vt0.c0 AS INTEGER))) WHERE (((vt0.c1 COLLATE BINARY)IS NOT(((vt1.c0)LIKE(vt0.c0))))) ORDER BY ((((vt1.c0)>=(vt0.c0)))GLOB(((vt0.c0)LIKE(vt0.c0)))) ASC, ((vt0.c0)/(vt0.c0)) COLLATE RTRIM DESC;
SELECT * FROM vt0 WHERE (((vt0.c1)>=(vt0.c0)) COLLATE NOCASE) ORDER BY x'7e' ASC;
SELECT * FROM vt0 WHERE (((vt0.c1)>=(vt0.c0)) COLLATE NOCASE) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM DESC, (UNLIKELY(vt0.c1) IN (((vt0.c0)>(vt0.c1)))) ASC, (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM DESC, (UNLIKELY(vt0.c1) IN (((vt0.c0)>(vt0.c1)))) ASC, (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0x1;
SELECT * FROM vt0 WHERE (((vt0.c1)>=(vt0.c0)) COLLATE NOCASE) ORDER BY x'7e' ASC;
SELECT * FROM vt0 WHERE (((vt0.c1)>=(vt0.c0)) COLLATE NOCASE) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM DESC, (UNLIKELY(vt0.c1) IN (((vt0.c0)>(vt0.c1)))) ASC, (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM DESC, (UNLIKELY(vt0.c1) IN (((vt0.c0)>(vt0.c1)))) ASC, (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0x1;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((('汅', NULL)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), ((((vt1.c0)AND(vt1.c0)))AND('7J-U0S')))) AND ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))))  NULLS LAST, vt0.c1 ASC, CASE WHEN (~ (vt0.c0)) THEN ((vt1.c0)!=(vt1.c0)) WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN (0X341b76f2) AND (vt1.c0)) END  NULLS FIRST;
SELECT ALL MAX(vt0.c0) FROM vt1, vt0 WHERE (((((vt1.c0 COLLATE BINARY) IS TRUE))AND(((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0))) NOTNULL)))) ORDER BY ((('汅', NULL)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), ((((vt1.c0)AND(vt1.c0)))AND('7J-U0S')))) AND ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))))  NULLS LAST, vt0.c1 ASC, CASE WHEN (~ (vt0.c0)) THEN ((vt1.c0)<>(vt1.c0)) WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN (874215154) AND (vt1.c0)) END  NULLS FIRST INTERSECT SELECT MAX(vt0.c0) FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1)>=(vt0.c0)) THEN ((vt1.c0) IS TRUE) WHEN STRFTIME(vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0) THEN CAST('1979604771' AS INTEGER) END) ORDER BY ((('汅', NULL)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), ((((vt1.c0)AND(vt1.c0)))AND('7J-U0S')))) AND ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))))  NULLS LAST, vt0.c1 ASC, CASE WHEN (~ (vt0.c0)) THEN ((vt1.c0)<>(vt1.c0)) WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN (874215154) AND (vt1.c0)) END  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(vt0.c1)));
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(vt0.c1)))AND(((((((((((((((vt0.c0)>(vt0.c0)))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN 1304158405 THEN vt0.c0 END)))AND(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)GLOB('1517556072')))))OR(0.7603792470194533 COLLATE NOCASE)))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN '' THEN vt0.c1 ELSE vt0.c1 END))))) ORDER BY '-342274143' DESC, ((((NULL)IS(vt0.c0))) BETWEEN (vt0.c1) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) LIMIT 0x2;
SELECT * FROM vt1, vt0 WHERE ((((('M_W흂m(fJo') NOTNULL)) NOT BETWEEN (UNLIKELY(vt1.c0)) AND ((NOT (vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE ((((('M_W흂m(fJo') NOTNULL)) NOT BETWEEN (UNLIKELY(vt1.c0)) AND ((NOT (vt0.c0))))) LIMIT 0x1 INTERSECT SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)/(vt0.c0)))OR((vt1.c0 IN (0x45169dd, vt0.c0))))) LIMIT 1;
SELECT * FROM vt1, vt0 WHERE ((((('M_W흂m(fJo') NOTNULL)) NOT BETWEEN (UNLIKELY(vt1.c0)) AND ((NOT (vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE ((((('M_W흂m(fJo') NOTNULL)) NOT BETWEEN (UNLIKELY(vt1.c0)) AND ((NOT (vt0.c0))))) LIMIT 0x1 INTERSECT SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)/(vt0.c0)))OR((vt1.c0 IN (0x45169dd, vt0.c0))))) LIMIT 1;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1)AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR(json_type(vt1.c0))));
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt0.c1)AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR(json_type(vt1.c0))))AND((((vt1.c0 COLLATE RTRIM, COALESCE(vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0), ((vt1.c0) IS FALSE)))<((vt1.c0, ((vt1.c0)/(vt1.c0)), ((((((((((0.9684354525621999)AND(vt0.c1)))OR(vt0.c1)))AND(1983476950)))AND(vt0.c1)))AND(vt0.c1)))))))) ORDER BY (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)), vt1.c0 COLLATE RTRIM, (NOT (vt1.c0)), ((vt0.c0)<('738629008'))))=((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END, (((NULL))==((vt1.c0))), ((vt0.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (-3.38958845E8) AND (vt0.c1))))) ASC  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt1.c0)<(vt0.c1)))OR(NULL)))AND(0.7576886754551171))) ORDER BY (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)), vt1.c0 COLLATE RTRIM, (NOT (vt1.c0)), ((vt0.c0)<('738629008'))))==((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END, (((NULL))=((vt1.c0))), ((vt0.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (-3.38958845E8) AND (vt0.c1))))) ASC  NULLS LAST LIMIT 0x1;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1)AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR(json_type(vt1.c0))));
SELECT * FROM vt0 WHERE (x'');
SELECT * FROM vt0 WHERE (((x'')AND(vt0.c0))) ORDER BY x'' DESC  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (load_extension('')) AND (vt0.c0))) ORDER BY x'' DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (x'');
SELECT * FROM vt0 WHERE (((x'')AND(vt0.c0))) ORDER BY x'' DESC  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (load_extension('')) AND (vt0.c0))) ORDER BY x'' DESC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)-(vt1.c0)))=((NOT (NULL))))) ORDER BY CASE (((vt0.c0, vt1.c0))>=((vt1.c0, vt0.c0)))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN CAST(0.20560807807622272 AS NUMERIC) THEN x'fce07410' END, 'c}E逆\Qᛉ,' ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt1.c0)-(vt1.c0)))=((NOT (NULL)))))AND(((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)OR(vt0.c1))) AND ((vt1.c0 IN (vt0.c1))))))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ASC  NULLS FIRST, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE LIMIT 0x0;
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)-(vt1.c0)))=((NOT (NULL))))) ORDER BY CASE (((vt0.c0, vt1.c0))>=((vt1.c0, vt0.c0)))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN CAST(0.20560807807622272 AS NUMERIC) THEN x'fce07410' END, 'c}E逆\Qᛉ,' ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt1.c0)-(vt1.c0)))=((NOT (NULL)))))AND(((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)OR(vt0.c1))) AND ((vt1.c0 IN (vt0.c1))))))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ASC  NULLS FIRST, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE LIMIT 0x0;
SELECT * FROM vt0, vt1 WHERE ((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN (((vt0.c1 IN ()), ((('')) NOT BETWEEN ((vt0.c1)) AND ((NULL))), vt1.c0)) AND ((((NULL) BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt1.c0 AS BLOB), ((vt0.c0)IS(vt1.c0))))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN (((vt0.c1 IN ()), ((('')) NOT BETWEEN ((vt0.c1)) AND ((NULL))), vt1.c0)) AND ((((NULL) BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt1.c0 AS BLOB), ((vt0.c0)IS(vt1.c0)))))) ORDER BY (((vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt0.c1)OR('>	XF')))OR(vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0Xffffffffffb5d400 THEN x'f8' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)) AND ((((vt0.c0) NOT NULL), vt0.c1 COLLATE BINARY))) DESC, SQLITE_COMPILEOPTION_USED(vt0.c0) COLLATE RTRIM DESC, TRIM((((vt0.c0, vt0.c1, x''))>=((vt1.c0, vt0.c0, vt0.c0)))) ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST(CASE WHEN NULL THEN vt1.c0 END AS NUMERIC)) ORDER BY (((vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt0.c1)OR('>	XF')))OR(vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN -4860928 THEN x'f8' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)) AND ((((vt0.c0) NOT NULL), vt0.c1 COLLATE BINARY))) DESC, SQLITE_COMPILEOPTION_USED(vt0.c0) COLLATE RTRIM DESC, TRIM((((vt0.c0, vt0.c1, x''))>=((vt1.c0, vt0.c0, vt0.c0)))) ASC  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0, vt1 WHERE ((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN (((vt0.c1 IN ()), ((('')) NOT BETWEEN ((vt0.c1)) AND ((NULL))), vt1.c0)) AND ((((NULL) BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt1.c0 AS BLOB), ((vt0.c0)IS(vt1.c0))))));
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN (((vt0.c1 IN ()), ((('')) NOT BETWEEN ((vt0.c1)) AND ((NULL))), vt1.c0)) AND ((((NULL) BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt1.c0 AS BLOB), ((vt0.c0)IS(vt1.c0)))))) ORDER BY (((vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt0.c1)OR('>	XF')))OR(vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0Xffffffffffb5d400 THEN x'f8' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)) AND ((((vt0.c0) NOT NULL), vt0.c1 COLLATE BINARY))) DESC, SQLITE_COMPILEOPTION_USED(vt0.c0) COLLATE RTRIM DESC, TRIM((((vt0.c0, vt0.c1, x''))>=((vt1.c0, vt0.c0, vt0.c0)))) ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST(CASE WHEN NULL THEN vt1.c0 END AS NUMERIC)) ORDER BY (((vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt0.c1)OR('>	XF')))OR(vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN -4860928 THEN x'f8' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)) AND ((((vt0.c0) NOT NULL), vt0.c1 COLLATE BINARY))) DESC, SQLITE_COMPILEOPTION_USED(vt0.c0) COLLATE RTRIM DESC, TRIM((((vt0.c0, vt0.c1, x''))>=((vt1.c0, vt0.c0, vt0.c0)))) ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ('>') ORDER BY '-KZ??(t-' DESC, (~ (((vt0.c0)/(vt0.c0))))  NULLS FIRST, HEX(vt0.c1) COLLATE NOCASE  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ('>') ORDER BY json_valid(((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-349827581'))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(COALESCE(vt0.c1, vt0.c1, vt0.c0)))) ORDER BY json_valid(((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-349827581'))) ASC  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((vt0.c1)>=(vt0.c1)) COLLATE RTRIM);
SELECT MIN(vt0.c1) FROM vt0 WHERE (((vt0.c1)>=(vt0.c1)) COLLATE RTRIM) INTERSECT SELECT MIN(vt0.c1) FROM vt0 WHERE ('p96');
SELECT * FROM vt0 INNER JOIN vt1 ON UNLIKELY((((NULL, vt1.c0, vt1.c0, x'', vt0.c1))==((vt1.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)))) WHERE (CAST(vt0.c1 AS TEXT)) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (0.2879921914408896 COLLATE BINARY) AND (LIKELIHOOD(vt0.c1, vt1.c0))) DESC, (~ (json_array_length(vt1.c0))) DESC  NULLS FIRST, LOWER(CASE vt0.c1  WHEN 0.3949866466940224 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 END) DESC  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON UNLIKELY((((NULL, vt1.c0, vt1.c0, x'', vt0.c1))=((vt1.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)))) WHERE (((CAST(vt0.c1 AS TEXT))AND(((((vt0.c1) NOT BETWEEN ('KKE') AND (vt0.c1)))<>(vt1.c0 COLLATE RTRIM))))) ORDER BY (((vt0.c0, vt0.c1)) NOT BETWEEN (((vt0.c0 IN (vt1.c0)), ((vt0.c1)+(vt0.c0)))) AND (((vt0.c0 IN ()), vt0.c1))) DESC, (((vt1.c0)<(vt1.c0)) IN (vt0.c1 COLLATE NOCASE)) DESC, ((((vt1.c0)>=(vt1.c0))) IS TRUE) LIMIT 1 INTERSECT SELECT * FROM vt0 INNER JOIN vt1 ON UNLIKELY((((NULL, vt1.c0, vt1.c0, x'', vt0.c1))==((vt1.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)))) WHERE (((((vt1.c0)>=(NULL)))<<(((vt0.c0) IS TRUE)))) ORDER BY (((vt0.c0, vt0.c1)) NOT BETWEEN (((vt0.c0 IN (vt1.c0)), ((vt0.c1)+(vt0.c0)))) AND (((vt0.c0 IN ()), vt0.c1))) DESC, (((vt1.c0)<(vt1.c0)) IN (vt0.c1 COLLATE NOCASE)) DESC, ((((vt1.c0)>=(vt1.c0))) IS TRUE) LIMIT 1;
SELECT * FROM vt0 INNER JOIN vt1 ON UNLIKELY((((NULL, vt1.c0, vt1.c0, x'', vt0.c1))==((vt1.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)))) WHERE (CAST(vt0.c1 AS TEXT)) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (0.2879921914408896 COLLATE BINARY) AND (LIKELIHOOD(vt0.c1, vt1.c0))) DESC, (~ (json_array_length(vt1.c0))) DESC  NULLS FIRST, LOWER(CASE vt0.c1  WHEN 0.3949866466940224 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 END) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE RTRIM DESC, ((vt0.c0)%(vt0.c0)) COLLATE NOCASE DESC, ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) ASC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0.3722163716234327 END AS REAL)))) ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE RTRIM DESC, ((vt0.c0)%(vt0.c0)) COLLATE NOCASE DESC, ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) ASC INTERSECT SELECT ALL * FROM vt0 WHERE ((((- (vt0.c1))) ISNULL)) ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE RTRIM DESC, ((vt0.c0)%(vt0.c0)) COLLATE NOCASE DESC, ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) ASC;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE RTRIM DESC, ((vt0.c0)%(vt0.c0)) COLLATE NOCASE DESC, ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) ASC;
SELECT MIN(vt1.c0) FROM vt1 WHERE (vt1.c0);
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0)%(vt1.c0)) IN ()), CASE WHEN (((vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0))) THEN (NOT (vt1.c0)) END DESC, ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, x'5f')) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))>=((LTRIM(vt1.c0, vt1.c0))));
SELECT ALL MIN(vt0.c1) FROM vt0, vt1 WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL), (((NOT (vt0.c1))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((0.6235065713349728)IS(vt1.c0))));
SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL), (((NOT (vt0.c1))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((0.6235065713349728)IS(vt1.c0)))) LIMIT 0x0 INTERSECT SELECT MIN(vt0.c1) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL), (((NOT (vt0.c1))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((0.6235065713349728)IS(vt1.c0)))) LIMIT 0X0;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE (((((((((((((((((UPPER(DISTINCT vt0.c1))OR(((vt1.c0) IS FALSE))))AND((- (vt0.c1)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN '' THEN vt0.c1 ELSE vt0.c0 END)))OR(ABS(vt1.c0))))OR(((vt0.c1) ISNULL))))AND(json_array(vt0.c0, vt0.c0))))AND((vt0.c1 IN (vt1.c0)))))AND(TRIM(DISTINCT vt1.c0)))) ORDER BY (((vt0.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), (+ (vt1.c0)))) AND (((((vt0.c1, vt0.c1)) NOT BETWEEN ((NULL, vt1.c0)) AND ((vt0.c1, '-1307813814'))), CAST(NULL AS BLOB)))) DESC, vt0.c0, ((((vt0.c0)LIKE(vt0.c0)))LIKE((+ ('0kYU
o*')))) ASC  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE (((((((((((((((((UPPER(DISTINCT vt0.c1))OR(((vt1.c0) IS FALSE))))AND((- (vt0.c1)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN '' THEN vt0.c1 ELSE vt0.c0 END)))OR(ABS(vt1.c0))))OR(((vt0.c1) ISNULL))))AND(json_array(vt0.c0, vt0.c0))))AND((vt0.c1 IN (vt1.c0)))))AND(TRIM(DISTINCT vt1.c0)))) ORDER BY (((vt0.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), (+ (vt1.c0)))) AND (((((vt0.c1, vt0.c1)) NOT BETWEEN ((NULL, vt1.c0)) AND ((vt0.c1, '-1307813814'))), CAST(NULL AS BLOB)))) DESC, vt0.c0, ((((vt0.c0)LIKE(vt0.c0)))LIKE((+ ('0kYU
o*')))) ASC  NULLS LAST INTERSECT SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE (CAST(TYPEOF(vt1.c0) AS TEXT)) ORDER BY (((vt0.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), (+ (vt1.c0)))) AND (((((vt0.c1, vt0.c1)) NOT BETWEEN ((NULL, vt1.c0)) AND ((vt0.c1, '-1307813814'))), CAST(NULL AS BLOB)))) DESC, vt0.c0, ((((vt0.c0)LIKE(vt0.c0)))LIKE((+ ('0kYU
o*')))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c0 IN ('-1257828529', vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, ((((((((((((vt0.c0)AND((NOT (vt0.c0)))))AND(((vt0.c0)<<(vt0.c1)))))AND((- (0.9302098484369257)))))OR(vt0.c0 COLLATE BINARY)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))))OR(((vt0.c0)IS(vt0.c1))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ('F') ORDER BY (vt0.c0 IN ('-1257828529', vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, ((((((((((((vt0.c0)AND((NOT (vt0.c0)))))AND(((vt0.c0)<<(vt0.c1)))))AND((- (0.9302098484369257)))))OR(vt0.c0 COLLATE BINARY)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))))OR(((vt0.c0)IS(vt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c0 IN ('-1257828529', vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, ((((((((((((vt0.c0)AND((NOT (vt0.c0)))))AND(((vt0.c0)<<(vt0.c1)))))AND((- (0.9302098484369257)))))OR(vt0.c0 COLLATE BINARY)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))))OR(((vt0.c0)IS(vt0.c1))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ('F') ORDER BY (vt0.c0 IN ('-1257828529', vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, ((((((((((((vt0.c0)AND((NOT (vt0.c0)))))AND(((vt0.c0)<<(vt0.c1)))))AND((- (0.9302098484369257)))))OR(vt0.c0 COLLATE BINARY)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))))OR(((vt0.c0)IS(vt0.c1))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((((((('5+Z(O', vt1.c0, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c1, vt0.c0))), ((vt0.c0)&(vt0.c0)), CAST(vt1.c0 AS REAL), vt0.c1 COLLATE NOCASE))<=((CAST(vt0.c0 AS REAL), ((vt0.c0)>>(vt0.c1)), vt0.c1 COLLATE NOCASE, ((vt0.c0)IS(vt1.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((('5+Z(O', vt1.c0, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c1, vt0.c0))), ((vt0.c0)&(vt0.c0)), CAST(vt1.c0 AS REAL), vt0.c1 COLLATE NOCASE))<=((CAST(vt0.c0 AS REAL), ((vt0.c0)>>(vt0.c1)), vt0.c1 COLLATE NOCASE, ((vt0.c0)IS(vt1.c0))))))AND((((CASE vt1.c0  WHEN vt0.c1 THEN '2091959049' END, ((vt0.c1)IS(vt1.c0)), vt1.c0))>=((((vt1.c0) ISNULL), (vt0.c0 IN ()), vt1.c0 COLLATE BINARY)))))) LIMIT 0x2;
SELECT * FROM vt1, vt0 WHERE ((((((('5+Z(O', vt1.c0, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c1, vt0.c0))), ((vt0.c0)&(vt0.c0)), CAST(vt1.c0 AS REAL), vt0.c1 COLLATE NOCASE))<=((CAST(vt0.c0 AS REAL), ((vt0.c0)>>(vt0.c1)), vt0.c1 COLLATE NOCASE, ((vt0.c0)IS(vt1.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((('5+Z(O', vt1.c0, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c1, vt0.c0))), ((vt0.c0)&(vt0.c0)), CAST(vt1.c0 AS REAL), vt0.c1 COLLATE NOCASE))<=((CAST(vt0.c0 AS REAL), ((vt0.c0)>>(vt0.c1)), vt0.c1 COLLATE NOCASE, ((vt0.c0)IS(vt1.c0))))))AND((((CASE vt1.c0  WHEN vt0.c1 THEN '2091959049' END, ((vt0.c1)IS(vt1.c0)), vt1.c0))>=((((vt1.c0) ISNULL), (vt0.c0 IN ()), vt1.c0 COLLATE BINARY)))))) LIMIT 0x2;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE (((((vt0.c0)GLOB(vt1.c0))) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (LOWER(DISTINCT vt0.c0)))) ORDER BY (+ (((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE (((((vt0.c0)GLOB(vt1.c0))) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (LOWER(DISTINCT vt0.c0)))) ORDER BY (+ (((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))) DESC  NULLS LAST LIMIT 0x2 INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)))) AND ((CAST('0.9858775724950023' AS INTEGER))))) ORDER BY (+ (((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))) DESC  NULLS LAST LIMIT 2;
SELECT * FROM vt0, vt1 WHERE (CASE (+ (vt1.c0))  WHEN (((vt0.c1, vt0.c0, vt0.c0))==((vt1.c0, vt0.c0, '735156444'))) THEN ('1\!dD.' IN (vt1.c0)) ELSE ((vt0.c1) NOT NULL) END) ORDER BY ((((((((((((((vt1.c0)<=(vt1.c0)))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)))AND(CAST(vt0.c0 AS REAL))))OR((('-1203112250')==(vt0.c1)))))OR(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(((vt0.c0)/(vt0.c0)))), CAST((('CW}韷E.H')OR(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST, (((~ (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (x'cf') AND (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE (+ (vt1.c0))  WHEN (((vt0.c1, vt0.c0, vt0.c0))==((vt1.c0, vt0.c0, '735156444'))) THEN ('1\!dD.' IN (vt1.c0)) ELSE ((vt0.c1) NOT NULL) END)AND(((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)GLOB((~ (vt1.c0))))))) ORDER BY ((((((((((((((vt1.c0)<=(vt1.c0)))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)))AND(CAST(vt0.c0 AS REAL))))OR((('-1203112250')=(vt0.c1)))))OR(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(((vt0.c0)/(vt0.c0)))), CAST((('CW}韷E.H')OR(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST, (((~ (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (x'cf') AND (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))))  NULLS FIRST LIMIT 0x2;
SELECT * FROM vt0, vt1 WHERE (CASE (+ (vt1.c0))  WHEN (((vt0.c1, vt0.c0, vt0.c0))==((vt1.c0, vt0.c0, '735156444'))) THEN ('1\!dD.' IN (vt1.c0)) ELSE ((vt0.c1) NOT NULL) END) ORDER BY ((((((((((((((vt1.c0)<=(vt1.c0)))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)))AND(CAST(vt0.c0 AS REAL))))OR((('-1203112250')==(vt0.c1)))))OR(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(((vt0.c0)/(vt0.c0)))), CAST((('CW}韷E.H')OR(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST, (((~ (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (x'cf') AND (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE (+ (vt1.c0))  WHEN (((vt0.c1, vt0.c0, vt0.c0))==((vt1.c0, vt0.c0, '735156444'))) THEN ('1\!dD.' IN (vt1.c0)) ELSE ((vt0.c1) NOT NULL) END)AND(((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)GLOB((~ (vt1.c0))))))) ORDER BY ((((((((((((((vt1.c0)<=(vt1.c0)))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)))AND(CAST(vt0.c0 AS REAL))))OR((('-1203112250')=(vt0.c1)))))OR(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(((vt0.c0)/(vt0.c0)))), CAST((('CW}韷E.H')OR(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST, (((~ (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (x'cf') AND (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))))  NULLS FIRST LIMIT 0x2;
SELECT COUNT(*) FROM vt0 WHERE (LOWER((vt0.c1 IN (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((LOWER((vt0.c1 IN (vt0.c0))))AND(((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))>((((vt0.c1))>=((vt0.c1)))))))) ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN (NOT (vt0.c0)) WHEN ((vt0.c0)OR(vt0.c1)) THEN LOWER(DISTINCT NULL) WHEN ((vt0.c0)-('y!')) THEN (((((((('')OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c1) NOTNULL) END DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)>=(vt0.c1)) DESC  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN (NOT (vt0.c0)) END) ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN (NOT (vt0.c0)) WHEN ((vt0.c0)OR(vt0.c1)) THEN LOWER(DISTINCT NULL) WHEN ((vt0.c0)-('y!')) THEN (((((((('')OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c1) NOTNULL) END DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)>=(vt0.c1)) DESC  NULLS FIRST;
SELECT MAX(vt0.c0) FROM vt0 WHERE ((((((vt0.c1 IN ()))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(vt0.c1))) ORDER BY vt0.c0  NULLS FIRST, (((((vt0.c1, vt0.c0, vt0.c1))==((vt0.c1, vt0.c0, vt0.c1))))<<((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))) ASC  NULLS FIRST;
SELECT MAX(vt0.c0) FROM vt0 WHERE ((((((vt0.c1 IN ()))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(vt0.c1))) ORDER BY vt0.c0  NULLS FIRST, (((((vt0.c1, vt0.c0, vt0.c1))=((vt0.c1, vt0.c0, vt0.c1))))<<((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR('')))OR(vt0.c0)) IN (((NULL)IS NOT(vt0.c1)), NULL)));
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)OR('')))OR(vt0.c0)) IN (((NULL)IS NOT(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR('')))OR(vt0.c0)) IN (((NULL)IS NOT(vt0.c1)), NULL)));
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)OR('')))OR(vt0.c0)) IN (((NULL)IS NOT(vt0.c1)))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((x'a9cced')AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(vt1.c0)))OR((vt0.c0 IN ()))))OR(((vt1.c0) NOTNULL)))) ORDER BY ((((vt0.c0)<(vt0.c1))) IS TRUE);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((((x'a9cced')AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(vt1.c0)))OR((vt0.c0 IN ()))))OR(((vt1.c0) NOTNULL))))AND(((CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END) NOT NULL)))) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END  WHEN ((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)) THEN json_quote(vt0.c1) WHEN ((vt0.c0)<<(vt0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END ELSE (vt1.c0 IN ()) END LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(((vt1.c0) NOTNULL) AS INTEGER)) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END  WHEN ((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)) THEN json_quote(vt0.c1) WHEN ((vt0.c0)<<(vt0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END ELSE (vt1.c0 IN ()) END LIMIT 0X1;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((x'a9cced')AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(vt1.c0)))OR((vt0.c0 IN ()))))OR(((vt1.c0) NOTNULL)))) ORDER BY ((((vt0.c0)<(vt0.c1))) IS TRUE);
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((((x'a9cced')AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(vt1.c0)))OR((vt0.c0 IN ()))))OR(((vt1.c0) NOTNULL))))AND(((CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END) NOT NULL)))) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END  WHEN ((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)) THEN json_quote(vt0.c1) WHEN ((vt0.c0)<<(vt0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END ELSE (vt1.c0 IN ()) END LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(((vt1.c0) NOTNULL) AS INTEGER)) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END  WHEN ((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)) THEN json_quote(vt0.c1) WHEN ((vt0.c0)<<(vt0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END ELSE (vt1.c0 IN ()) END LIMIT 0X1;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0)<=(((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0)=(((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))))AND(CAST(vt0.c0 AS REAL) COLLATE BINARY))) ORDER BY (~ (((vt1.c0)<(vt0.c1)))) DESC;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0)<=(((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0)=(((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))))AND(CAST(vt0.c0 AS REAL) COLLATE BINARY))) ORDER BY (~ (((vt1.c0)<(vt0.c1)))) DESC;
SELECT * FROM vt1 WHERE ('_*待Ait%3C') ORDER BY ((((vt1.c0)>=(vt1.c0))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))), (((((vt1.c0)<<(vt1.c0))))>(((vt1.c0 IN (vt1.c0, vt1.c0)))))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((('_*待Ait%3C')AND(((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))>((('JB~pJZ!')/(vt1.c0))))))) ORDER BY ((((vt1.c0)>=(vt1.c0))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))), (((((vt1.c0)<<(vt1.c0))))>(((vt1.c0 IN (vt1.c0, vt1.c0)))))  NULLS FIRST;
SELECT * FROM vt1 WHERE ('_*待Ait%3C') ORDER BY ((((vt1.c0)>=(vt1.c0))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))), (((((vt1.c0)<<(vt1.c0))))>(((vt1.c0 IN (vt1.c0, vt1.c0)))))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((('_*待Ait%3C')AND(((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))>((('JB~pJZ!')/(vt1.c0))))))) ORDER BY ((((vt1.c0)>=(vt1.c0))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))), (((((vt1.c0)<<(vt1.c0))))>(((vt1.c0 IN (vt1.c0, vt1.c0)))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST('?E' AS NUMERIC));
SELECT DISTINCT * FROM vt0 WHERE (((CAST('?E' AS NUMERIC))AND(((((vt0.c1)OR(vt0.c0))) IS TRUE)))) ORDER BY TRIM(DISTINCT (((vt0.c0, vt0.c0, vt0.c1, 0.1475247052277573)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1))), CAST(vt0.c1 AS TEXT))  NULLS FIRST, CAST((NULL IN (vt0.c1, vt0.c0)) AS REAL)  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((0.5495800012391907 IN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY TRIM(DISTINCT (((vt0.c0, vt0.c0, vt0.c1, 0.1475247052277573)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1))), CAST(vt0.c1 AS TEXT))  NULLS FIRST, CAST((NULL IN (vt0.c1, vt0.c0)) AS REAL)  NULLS FIRST LIMIT 0x2;
SELECT * FROM vt0 WHERE (CAST('?E' AS NUMERIC));
SELECT DISTINCT * FROM vt0 WHERE (((CAST('?E' AS NUMERIC))AND(((((vt0.c1)OR(vt0.c0))) IS TRUE)))) ORDER BY TRIM(DISTINCT (((vt0.c0, vt0.c0, vt0.c1, 0.1475247052277573)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1))), CAST(vt0.c1 AS TEXT))  NULLS FIRST, CAST((NULL IN (vt0.c1, vt0.c0)) AS REAL)  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((0.5495800012391907 IN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY TRIM(DISTINCT (((vt0.c0, vt0.c0, vt0.c1, 0.1475247052277573)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1))), CAST(vt0.c1 AS TEXT))  NULLS FIRST, CAST((NULL IN (vt0.c1, vt0.c0)) AS REAL)  NULLS FIRST LIMIT 0x2;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE (- (vt0.c0))  WHEN ((vt0.c1)<<('2^z[뜴b[')) THEN (((vt0.c0, vt0.c0))>=((vt0.c1, vt1.c0))) WHEN (((0.36596182347705253))<>((vt0.c1))) THEN ((vt1.c0) ISNULL) WHEN 0.8293065872098918 THEN vt0.c0 WHEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN 0.5462267792585872 ELSE ((vt1.c0) IS TRUE) END) ORDER BY x'' ASC, ((((vt0.c1)=(NULL))) IS FALSE) DESC;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (CASE (- (vt0.c0))  WHEN ((vt0.c1)<<('2^z[뜴b[')) THEN (((vt0.c0, vt0.c0))>=((vt0.c1, vt1.c0))) WHEN (((0.36596182347705253))<((vt0.c1))) THEN ((vt1.c0) ISNULL) WHEN 0.8293065872098918 THEN vt0.c0 WHEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN 0.5462267792585872 ELSE ((vt1.c0) IS TRUE) END) ORDER BY ((+ (vt1.c0)) IN ((((vt0.c0, vt1.c0, vt1.c0, vt0.c1, -1.786790141E9, vt0.c0))<=((vt0.c1, vt1.c0, vt0.c1, vt1.c0, vt0.c0, 0x734acc3b))))) DESC LIMIT 2;
SELECT * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) LIMIT 0X1;
SELECT * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) LIMIT 0X1;
SELECT ALL COUNT(*) FROM vt0 WHERE (((-1.79095374E8) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY (- ((vt0.c0 IN (vt0.c1)))), CASE WHEN ((vt0.c0) NOTNULL) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) WHEN x'7cea' THEN vt0.c1 COLLATE NOCASE ELSE (vt0.c1 IN (vt0.c1, '434657884')) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((-1.79095374E8) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND((vt0.c1 IN (vt0.c1)) COLLATE BINARY))) ORDER BY (- ((vt0.c0 IN (vt0.c1)))), CASE WHEN ((vt0.c0) NOTNULL) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) WHEN x'7cea' THEN vt0.c1 COLLATE NOCASE ELSE (vt0.c1 IN (vt0.c1, '434657884')) END ASC  NULLS FIRST LIMIT 0x3;
SELECT ALL MIN(vt1.c0) FROM vt1, vt0 WHERE (((((vt0.c0) IS FALSE)) NOT NULL));
SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE (((((((vt0.c0) IS FALSE)) NOT NULL))AND((('qv')-(((vt1.c0)-(vt0.c1))))))) INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt1.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS INTEGER)) ORDER BY UPPER(DISTINCT CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN 0X11ed08d4 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS INTEGER)) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS INTEGER)) ORDER BY UPPER(DISTINCT CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN 0X11ed08d4 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS INTEGER)) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((- (((vt0.c1)/(vt0.c0)))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((- (((vt0.c1)/(vt0.c0)))))AND(((((((((((((((((((vt0.c0)>(0.7743100388421339)))AND((vt1.c0 IN (vt0.c0, vt0.c0, vt1.c0)))))AND((vt1.c0 IN (vt1.c0, vt1.c0)))))AND(((vt0.c1) NOT NULL))))OR(LIKELY(vt1.c0))))OR((~ (vt0.c0)))))OR(((vt1.c0) NOT BETWEEN (x'4a') AND (vt0.c1)))))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE BINARY))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (LOWER(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) LIMIT 0;
SELECT ALL * FROM vt1, vt0 WHERE ((- (((vt0.c1)/(vt0.c0)))));
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((- (((vt0.c1)/(vt0.c0)))))AND(((((((((((((((((((vt0.c0)>(0.7743100388421339)))AND((vt1.c0 IN (vt0.c0, vt0.c0, vt1.c0)))))AND((vt1.c0 IN (vt1.c0, vt1.c0)))))AND(((vt0.c1) NOT NULL))))OR(LIKELY(vt1.c0))))OR((~ (vt0.c0)))))OR(((vt1.c0) NOT BETWEEN (x'4a') AND (vt0.c1)))))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE BINARY))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (LOWER(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) LIMIT 0;
SELECT * FROM vt0, vt1 WHERE (json_object((NOT (vt0.c1)), json_extract(vt0.c1, vt0.c1), (((vt0.c1))>(('981740771')))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (json_object((NOT (vt0.c1)), json_extract(vt0.c1, vt0.c1), (((vt0.c1))>(('981740771')))));
SELECT * FROM vt0, vt1 WHERE (json_object((NOT (vt0.c1)), json_extract(vt0.c1, vt0.c1), (((vt0.c1))>(('981740771')))));
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((('-1877605998' IN ()))) AND ((7.38629008E8)))) ORDER BY (+ (((vt0.c1)%(vt0.c1)))) ASC  NULLS LAST;
SELECT MIN(vt0.c1) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((('-1877605998' IN ()))) AND ((7.38629008E8))))AND((+ (vt0.c1))))) ORDER BY (+ (((vt0.c1)%(vt0.c1)))) ASC  NULLS LAST INTERSECT SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS BLOB)) ORDER BY (+ (((vt0.c1)%(vt0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)AND(vt0.c0))) NOT NULL)) ORDER BY LIKELY('꽵') ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt0.c0))) NOT NULL))AND(vt0.c0))) ORDER BY LIKELY('꽵') ASC  NULLS FIRST INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY LIKELY('꽵') ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)AND(vt0.c0))) NOT NULL)) ORDER BY LIKELY('꽵') ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt0.c0))) NOT NULL))AND(vt0.c0))) ORDER BY LIKELY('꽵') ASC  NULLS FIRST INTERSECT SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY LIKELY('꽵') ASC  NULLS FIRST;
SELECT MAX(vt0.c1) FROM vt1, vt0 WHERE (((((((((((-207223362)AND('-1578410656')))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))OR(x'')))OR(NULL)))AND(vt1.c0 COLLATE RTRIM)));
SELECT DISTINCT MAX(vt0.c1) FROM vt1, vt0 WHERE (((((((((((((-207223362)AND('-1578410656')))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))OR(x'')))OR(NULL)))AND(vt1.c0 COLLATE RTRIM)))AND(NULLIF(DISTINCT CAST(271375176 AS NUMERIC), ((vt0.c0) NOT NULL)))));
SELECT ALL * FROM vt1 WHERE (('''H+]㚓/৊g' COLLATE NOCASE IN (vt1.c0 COLLATE NOCASE))) ORDER BY CHAR(((vt1.c0)OR(vt1.c0))) ASC, (((vt1.c0)) NOT BETWEEN (((((0.8682279914994141)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((CAST(vt1.c0 AS BLOB)))), ((TRIM(DISTINCT vt1.c0))LIKE((- (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((('''H+]㚓/৊g' COLLATE NOCASE IN (vt1.c0 COLLATE NOCASE)))AND(((vt1.c0 COLLATE RTRIM)<=((vt1.c0 IN ())))))) ORDER BY ((vt1.c0)>=(vt1.c0)) COLLATE NOCASE DESC, ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))-(vt1.c0 COLLATE RTRIM)) ASC LIMIT 0x0 INTERSECT SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((vt1.c0)>=(vt1.c0)) COLLATE NOCASE DESC, ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))-(vt1.c0 COLLATE RTRIM)) ASC LIMIT 0;
SELECT ALL * FROM vt1 WHERE (('''H+]㚓/৊g' COLLATE NOCASE IN (vt1.c0 COLLATE NOCASE))) ORDER BY CHAR(((vt1.c0)OR(vt1.c0))) ASC, (((vt1.c0)) NOT BETWEEN (((((0.8682279914994141)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((CAST(vt1.c0 AS BLOB)))), ((TRIM(DISTINCT vt1.c0))LIKE((- (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((('''H+]㚓/৊g' COLLATE NOCASE IN (vt1.c0 COLLATE NOCASE)))AND(((vt1.c0 COLLATE RTRIM)<=((vt1.c0 IN ())))))) ORDER BY ((vt1.c0)>=(vt1.c0)) COLLATE NOCASE DESC, ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))-(vt1.c0 COLLATE RTRIM)) ASC LIMIT 0x0 INTERSECT SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((vt1.c0)>=(vt1.c0)) COLLATE NOCASE DESC, ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))-(vt1.c0 COLLATE RTRIM)) ASC LIMIT 0;
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)>>(RTRIM(vt1.c0))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)>>(RTRIM(vt1.c0)))) ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(2.018407589E9)))OR(vt0.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (vt0.c1)) DESC, ((vt0.c1) NOT NULL) COLLATE NOCASE  NULLS FIRST, LIKELY(((vt0.c0) NOT NULL)) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)>>(RTRIM(vt1.c0))));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)>>(RTRIM(vt1.c0)))) ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(2.018407589E9)))OR(vt0.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (vt0.c1)) DESC, ((vt0.c1) NOT NULL) COLLATE NOCASE  NULLS FIRST, LIKELY(((vt0.c0) NOT NULL)) DESC  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM vt1 WHERE (1330203686);
SELECT ALL COUNT(*) FROM vt1 WHERE (1330203686) ORDER BY 0.42107601579011145 ASC, (((((vt1.c0)AND(vt1.c0)), ''))=(((vt1.c0 IN (vt1.c0)), (((vt1.c0))<((vt1.c0))))))  NULLS LAST, ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS TRUE) ASC;
SELECT ALL * FROM vt1, vt0 WHERE (((QUOTE(vt0.c1)) ISNULL));
SELECT * FROM vt1, vt0 WHERE (((QUOTE(vt0.c1)) ISNULL)) LIMIT 1;
SELECT ALL * FROM vt1, vt0 WHERE (((QUOTE(vt0.c1)) ISNULL));
SELECT * FROM vt1, vt0 WHERE (((QUOTE(vt0.c1)) ISNULL)) LIMIT 1;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) COLLATE BINARY);
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) COLLATE BINARY) ORDER BY ((NOT (vt0.c1)) IN ()) DESC, (((((vt0.c1, vt0.c0, vt0.c0, vt0.c0, 1.139552051E9))=((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))))<(NULL)) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS NUMERIC), ((vt1.c0)&(vt0.c1))))!=(((vt0.c0 IN (vt1.c0)), ((((((((x'1d')OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))));
SELECT * FROM vt0, vt1 WHERE ((((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS NUMERIC), ((vt1.c0)&(vt0.c1))))<>(((vt0.c0 IN (vt1.c0)), ((((((((x'1d')OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(((vt1.c0) ISNULL))))OR((('OKOo ')IS(vt0.c0)))) DESC  NULLS FIRST LIMIT 3 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (1.043883576E9 COLLATE RTRIM) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(((vt1.c0) ISNULL))))OR((('OKOo ')IS(vt0.c0)))) DESC  NULLS FIRST LIMIT 3;
SELECT * FROM vt0, vt1 WHERE ((((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS NUMERIC), ((vt1.c0)&(vt0.c1))))!=(((vt0.c0 IN (vt1.c0)), ((((((((x'1d')OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))));
SELECT * FROM vt0, vt1 WHERE ((((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS NUMERIC), ((vt1.c0)&(vt0.c1))))<>(((vt0.c0 IN (vt1.c0)), ((((((((x'1d')OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(((vt1.c0) ISNULL))))OR((('OKOo ')IS(vt0.c0)))) DESC  NULLS FIRST LIMIT 3 INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (1.043883576E9 COLLATE RTRIM) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE NOCASE ASC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(((vt1.c0) ISNULL))))OR((('OKOo ')IS(vt0.c0)))) DESC  NULLS FIRST LIMIT 3;
SELECT ALL MIN(vt0.c0) FROM vt0, vt1 WHERE (CASE WHEN ABS(vt1.c0) THEN (NOT ('-')) WHEN UPPER(vt1.c0) THEN (vt0.c1 IN ()) WHEN json_extract(vt1.c0, vt1.c0) THEN ((vt0.c0)&(vt0.c1)) ELSE ((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)) END);
SELECT MIN(vt0.c0) FROM vt0, vt1 WHERE (((CASE WHEN ABS(vt1.c0) THEN (NOT ('-')) WHEN UPPER(vt1.c0) THEN (vt0.c1 IN ()) WHEN json_extract(vt1.c0, vt1.c0) THEN ((vt0.c0)&(vt0.c1)) ELSE ((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)) END)AND(((((vt0.c0)>=(vt1.c0)))<(ABS(vt0.c1)))))) LIMIT 0x1;
SELECT MIN(vt1.c0) FROM vt0 NATURAL JOIN vt1 WHERE (((CASE WHEN 0.27599985837669494 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END) NOTNULL)) ORDER BY vt0.c0 DESC, (+ (CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT DISTINCT MIN(vt1.c0) FROM vt0 NATURAL JOIN vt1 WHERE (((((CASE WHEN 0.27599985837669494 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END) NOTNULL))AND(((((vt1.c0) NOTNULL))+(((vt0.c1)+(vt0.c1))))))) ORDER BY ((vt1.c0) BETWEEN ((vt1.c0 IN ())) AND (((x'')|(vt0.c0)))), (((((((- (vt1.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt1.c0 COLLATE RTRIM)) INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt0 NATURAL JOIN vt1 WHERE (DATE((NULL IN (vt1.c0, vt0.c1)), vt1.c0 COLLATE NOCASE, vt0.c1 COLLATE NOCASE, (- (vt1.c0)))) ORDER BY ((vt1.c0) BETWEEN ((vt1.c0 IN ())) AND (((x'')|(vt0.c0)))), (((((((- (vt1.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt1.c0 COLLATE RTRIM));
SELECT * FROM vt0 INNER JOIN vt1 ON CAST(((vt0.c0)-(vt1.c0)) AS BLOB) WHERE (-4.23690826E8) ORDER BY ((vt1.c0 IN (vt0.c1, vt1.c0)) IN (((vt0.c1)IS(vt0.c1))))  NULLS FIRST, (('-111489219') ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON CAST(((vt0.c0)-(vt1.c0)) AS BLOB) WHERE (-4.23690826E8) ORDER BY ((vt1.c0 IN (vt0.c1, vt1.c0)) IN (((vt0.c1)IS(vt0.c1))))  NULLS FIRST, (('-111489219') ISNULL)  NULLS FIRST LIMIT 0;
SELECT * FROM vt0 INNER JOIN vt1 ON CAST(((vt0.c0)-(vt1.c0)) AS BLOB) WHERE (-4.23690826E8) ORDER BY ((vt1.c0 IN (vt0.c1, vt1.c0)) IN (((vt0.c1)IS(vt0.c1))))  NULLS FIRST, (('-111489219') ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON CAST(((vt0.c0)-(vt1.c0)) AS BLOB) WHERE (-4.23690826E8) ORDER BY ((vt1.c0 IN (vt0.c1, vt1.c0)) IN (((vt0.c1)IS(vt0.c1))))  NULLS FIRST, (('-111489219') ISNULL)  NULLS FIRST LIMIT 0;
SELECT MIN(vt1.c0) FROM vt1 WHERE (((((((((CAST(vt1.c0 AS INTEGER))AND((((vt1.c0, vt1.c0, NULL))<((vt1.c0, vt1.c0, vt1.c0))))))AND((vt1.c0 IN (vt1.c0)))))AND(vt1.c0)))AND(json(vt1.c0)))) ORDER BY vt1.c0 DESC  NULLS LAST, (NOT (vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((((((((((CAST(vt1.c0 AS INTEGER))AND((((vt1.c0, vt1.c0, NULL))<((vt1.c0, vt1.c0, vt1.c0))))))AND((vt1.c0 IN (vt1.c0)))))AND(vt1.c0)))AND(json(vt1.c0))))AND((NOT ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))))))) ORDER BY vt1.c0 DESC  NULLS LAST, (NOT (vt1.c0)) COLLATE BINARY  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt1 WHERE (((0.8678985556911557)=(vt1.c0)) COLLATE RTRIM) ORDER BY CASE (((vt1.c0, vt1.c0, vt1.c0))=((NULL, vt1.c0, vt1.c0)))  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (+ (vt1.c0)) WHEN CASE vt1.c0  WHEN 0.2781344672238565 THEN vt1.c0 END THEN ((vt1.c0)<>(vt1.c0)) END DESC, ((((vt1.c0)-(vt1.c0)))&(-1.79095374E8));
SELECT ALL * FROM vt1 WHERE (((0.8678985556911557)=(vt1.c0)) COLLATE RTRIM) ORDER BY CASE (((vt1.c0, vt1.c0, vt1.c0))=((NULL, vt1.c0, vt1.c0)))  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (+ (vt1.c0)) WHEN CASE vt1.c0  WHEN 0.2781344672238565 THEN vt1.c0 END THEN ((vt1.c0)!=(vt1.c0)) END DESC, ((((vt1.c0)-(vt1.c0)))&(-1.79095374E8)) LIMIT 0X2;
SELECT ALL * FROM vt1 WHERE (((0.8678985556911557)=(vt1.c0)) COLLATE RTRIM) ORDER BY CASE (((vt1.c0, vt1.c0, vt1.c0))=((NULL, vt1.c0, vt1.c0)))  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (+ (vt1.c0)) WHEN CASE vt1.c0  WHEN 0.2781344672238565 THEN vt1.c0 END THEN ((vt1.c0)<>(vt1.c0)) END DESC, ((((vt1.c0)-(vt1.c0)))&(-1.79095374E8));
SELECT ALL * FROM vt1 WHERE (((0.8678985556911557)=(vt1.c0)) COLLATE RTRIM) ORDER BY CASE (((vt1.c0, vt1.c0, vt1.c0))=((NULL, vt1.c0, vt1.c0)))  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (+ (vt1.c0)) WHEN CASE vt1.c0  WHEN 0.2781344672238565 THEN vt1.c0 END THEN ((vt1.c0)!=(vt1.c0)) END DESC, ((((vt1.c0)-(vt1.c0)))&(-1.79095374E8)) LIMIT 0X2;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOTNULL));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOTNULL)) LIMIT 3;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOTNULL));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOTNULL)) LIMIT 3;
SELECT MAX(vt0.c0) FROM vt0, vt1 WHERE ('*');
SELECT DISTINCT MAX(vt0.c0) FROM vt0, vt1 WHERE ('*') LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0, vt1 WHERE (CAST(load_extension(vt0.c0, vt0.c0) AS NUMERIC)) LIMIT 1;
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE (((((vt0.c1) ISNULL))!=(((vt1.c0) ISNULL)))) ORDER BY ((-1.00881499E8) NOT NULL)  NULLS FIRST;
SELECT DISTINCT MAX(vt1.c0) FROM vt0, vt1 WHERE (((((vt0.c1) ISNULL))<(((vt1.c0) ISNULL)))) ORDER BY ((-1.00881499E8) NOT NULL)  NULLS FIRST LIMIT 0X1;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((x'ea', vt1.c0, vt1.c0, vt1.c0))) AS INTEGER));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((CAST((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((x'ea', vt1.c0, vt1.c0, vt1.c0))) AS INTEGER))AND(((((((((('-629670281')AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) IN (vt1.c0, ((vt1.c0)!=(vt1.c0)), ((vt1.c0)&(vt1.c0))))))) ORDER BY (((vt1.c0)<(vt1.c0)) IN ()) ASC  NULLS LAST LIMIT 0X2;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)>(vt0.c0)))=(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END))) ORDER BY (+ ((vt0.c1 IN (vt0.c0))))  NULLS FIRST, (+ (LOWER(DISTINCT vt0.c0))) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0)>(vt0.c0)))==(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)))AND(vt0.c0))) ORDER BY (+ ((vt0.c1 IN (vt0.c0))))  NULLS FIRST, (+ (LOWER(DISTINCT vt0.c0))) DESC;
SELECT ALL * FROM vt1 WHERE (-1.541700801E9 COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (-1.541700801E9 COLLATE BINARY) ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS FALSE) ASC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM vt1 WHERE (-1.541700801E9 COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (-1.541700801E9 COLLATE BINARY) ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS FALSE) ASC  NULLS FIRST LIMIT 2;
SELECT ALL * FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (('1547475481')||(vt0.c0)) ELSE '-38*ꏟ' END) ORDER BY (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0, vt0.c0))!=((vt0.c1, vt0.c1))), (('-1649082913')>(vt0.c0)), '0.8381764835439557' COLLATE NOCASE, vt0.c0 COLLATE NOCASE))!=((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)), (~ (vt0.c1)), vt0.c1, CAST(vt0.c1 AS INTEGER), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '-24960678' THEN vt0.c1 END))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (('1547475481')||(vt0.c0)) ELSE '-38*ꏟ' END) ORDER BY (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0, vt0.c0))!=((vt0.c1, vt0.c1))), (('-1649082913')>(vt0.c0)), '0.8381764835439557' COLLATE NOCASE, vt0.c0 COLLATE NOCASE))!=((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)), (~ (vt0.c1)), vt0.c1, CAST(vt0.c1 AS INTEGER), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '-24960678' THEN vt0.c1 END))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ('K') ORDER BY (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0, vt0.c0))!=((vt0.c1, vt0.c1))), (('-1649082913')>(vt0.c0)), '0.8381764835439557' COLLATE NOCASE, vt0.c0 COLLATE NOCASE))!=((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)), (~ (vt0.c1)), vt0.c1, CAST(vt0.c1 AS INTEGER), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '-24960678' THEN vt0.c1 END))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (('1547475481')||(vt0.c0)) ELSE '-38*ꏟ' END) ORDER BY (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0, vt0.c0))!=((vt0.c1, vt0.c1))), (('-1649082913')>(vt0.c0)), '0.8381764835439557' COLLATE NOCASE, vt0.c0 COLLATE NOCASE))!=((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)), (~ (vt0.c1)), vt0.c1, CAST(vt0.c1 AS INTEGER), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '-24960678' THEN vt0.c1 END))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (('1547475481')||(vt0.c0)) ELSE '-38*ꏟ' END) ORDER BY (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0, vt0.c0))!=((vt0.c1, vt0.c1))), (('-1649082913')>(vt0.c0)), '0.8381764835439557' COLLATE NOCASE, vt0.c0 COLLATE NOCASE))!=((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)), (~ (vt0.c1)), vt0.c1, CAST(vt0.c1 AS INTEGER), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '-24960678' THEN vt0.c1 END))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 WHERE ('K') ORDER BY (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0, vt0.c0))!=((vt0.c1, vt0.c1))), (('-1649082913')>(vt0.c0)), '0.8381764835439557' COLLATE NOCASE, vt0.c0 COLLATE NOCASE))!=((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)), (~ (vt0.c1)), vt0.c1, CAST(vt0.c1 AS INTEGER), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '-24960678' THEN vt0.c1 END))) ASC  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE (CAST(((((0.7934751872240151)AND(vt0.c1)))AND(vt1.c0)) AS INTEGER));
SELECT MIN(vt0.c0) FROM vt1, vt0 WHERE (((CAST(((((0.7934751872240151)AND(vt0.c1)))AND(vt1.c0)) AS INTEGER))AND((((vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt1.c0 WHEN -1533880141 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE 0.0321567743104989 END))=(((vt1.c0 IN (vt0.c1)), vt0.c0)))))) ORDER BY CASE WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)) THEN (~ (vt1.c0)) END, (+ (vt0.c0 COLLATE RTRIM)), ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))&(CAST(vt0.c1 AS REAL))) DESC INTERSECT SELECT ALL MIN(vt0.c0) FROM vt1, vt0 WHERE (((vt0.c0)!=(vt1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)) THEN (~ (vt1.c0)) END, (+ (vt0.c0 COLLATE RTRIM)), ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))&(CAST(vt0.c1 AS REAL))) DESC;
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>((+ (vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>((+ (vt1.c0))))) ORDER BY PRINTF(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, vt1.c0 COLLATE RTRIM), ((vt1.c0) IS TRUE) ASC  NULLS LAST, (((vt1.c0 IN (vt1.c0)))||(vt1.c0)) DESC LIMIT 0X0;
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>((+ (vt1.c0)))));
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>((+ (vt1.c0))))) ORDER BY PRINTF(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, vt1.c0 COLLATE RTRIM), ((vt1.c0) IS TRUE) ASC  NULLS LAST, (((vt1.c0 IN (vt1.c0)))||(vt1.c0)) DESC LIMIT 0X0;
SELECT MIN(vt1.c0) FROM vt1 WHERE (x'26cd') ORDER BY x'' COLLATE BINARY  NULLS FIRST, ((highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0))!=(DATE(vt1.c0, vt1.c0, 0.48905328418313654))) ASC, ((0.2743376980372927) ISNULL) COLLATE NOCASE  NULLS LAST, ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)LIKE(vt1.c0 COLLATE NOCASE)) DESC;
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (x'26cd') ORDER BY (~ ('/')) ASC  NULLS FIRST, COALESCE(IFNULL(vt1.c0, '-35870832'), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0), (((vt1.c0))>((vt1.c0))), (vt1.c0 IN ()), (((vt1.c0, NULL))>=((vt1.c0, vt1.c0)))) ASC LIMIT 1;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((+ (((vt0.c1)>=(0.8554490150621754)))));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((+ (((vt0.c1)>(0.8554490150621754))))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)%(LIKE(-1310634074, vt0.c0, 'Z'))) ASC  NULLS LAST INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)%(LIKE(-1310634074, vt0.c0, 'Z'))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (0.16079689665551244);
SELECT DISTINCT * FROM vt0 WHERE (((0.16079689665551244)AND(DATETIME(((vt0.c0)<<(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))));
SELECT * FROM vt0 WHERE (0.16079689665551244);
SELECT DISTINCT * FROM vt0 WHERE (((0.16079689665551244)AND(DATETIME(((vt0.c0)<<(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))));
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), ((('1782418069', vt1.c0, vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, '0.8795648975519511', vt1.c0)) AND ((-296494888, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), '-1656493811')) AND ((((((((vt1.c0)AND('655700416')))AND(vt1.c0)))OR(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS NUMERIC)))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), ((('1782418069', vt1.c0, vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, '0.8795648975519511', vt1.c0)) AND ((-296494888, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), '-1656493811')) AND ((((((((vt1.c0)AND('655700416')))AND(vt1.c0)))OR(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS NUMERIC))))) ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))OR(CAST(vt1.c0 AS TEXT))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, '-887284153' DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0)|(vt1.c0))))) ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))OR(CAST(vt1.c0 AS TEXT))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, '-887284153' DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), ((('1782418069', vt1.c0, vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, '0.8795648975519511', vt1.c0)) AND ((-296494888, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), '-1656493811')) AND ((((((((vt1.c0)AND('655700416')))AND(vt1.c0)))OR(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS NUMERIC)))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), ((('1782418069', vt1.c0, vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, '0.8795648975519511', vt1.c0)) AND ((-296494888, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), '-1656493811')) AND ((((((((vt1.c0)AND('655700416')))AND(vt1.c0)))OR(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS NUMERIC))))) ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))OR(CAST(vt1.c0 AS TEXT))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, '-887284153' DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0)|(vt1.c0))))) ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0))))OR(CAST(vt1.c0 AS TEXT))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, '-887284153' DESC  NULLS LAST LIMIT 0X0;
SELECT MAX(vt0.c1) FROM vt0 NOT INDEXED, vt1 WHERE (((vt0.c1 COLLATE BINARY)>((+ (vt1.c0)))));
SELECT MAX(vt0.c1) FROM vt0, vt1 WHERE (((((vt0.c1 COLLATE BINARY)>((+ (vt1.c0)))))AND(CASE SQLITE_SOURCE_ID()  WHEN ((vt0.c1) IS TRUE) THEN ((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)) WHEN (vt1.c0 IN (vt0.c1, vt0.c1, vt0.c0)) THEN ((vt0.c1)<=(vt1.c0)) WHEN ((vt0.c1) NOTNULL) THEN (~ (vt0.c1)) WHEN ((vt1.c0)LIKE(vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((vt0.c0)%(vt1.c0)) END)));
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (vt0.c1) ORDER BY TRIM(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)<>(vt0.c0))) DESC  NULLS FIRST, CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN (((vt0.c1, vt0.c0))>((vt0.c1, vt0.c0))) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1)<<(vt0.c1)) WHEN ((vt0.c0)+(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE '806581990' END, ((((vt0.c1) NOTNULL))<('')) ASC  NULLS LAST;
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN ((vt0.c1)/(vt0.c0)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)AND(vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN (vt0.c1 IN (vt0.c1)) WHEN 0.6833233698264762 THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c0)) AND (('ě8䭛''dxQ []', vt0.c1, '-1018605791', vt0.c1))) THEN NULL END DESC  NULLS LAST, 'ms]sPk' ASC LIMIT 0X1;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CAST(((vt0.c1) ISNULL) AS REAL));
SELECT DISTINCT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((CAST(((vt0.c1) ISNULL) AS REAL))AND(CAST('-423690826' AS REAL)))) ORDER BY vt0.c1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (-673315157) ORDER BY vt0.c1;
SELECT ALL MIN(vt0.c0) FROM vt0, vt1 WHERE ((((vt1.c0)GLOB(vt0.c0)) IN (CAST(vt0.c0 AS REAL))));
SELECT ALL MIN(vt0.c0) FROM vt0, vt1 WHERE ((((((vt1.c0)GLOB(vt0.c0)) IN (CAST(vt0.c0 AS REAL))))AND(((((vt0.c0)<>(vt0.c1)))>>(((vt0.c1)-(vt0.c0))))))) ORDER BY (+ (CAST('kZM~' AS TEXT)))  NULLS FIRST LIMIT 1 INTERSECT SELECT MIN(vt0.c0) FROM vt0, vt1 WHERE (((((((json_quote(vt0.c1))AND(CAST('' AS BLOB))))AND(((vt0.c1) IS TRUE))))OR(((((vt1.c0)AND(NULL)))OR(vt0.c1))))) ORDER BY (+ (CAST('kZM~' AS TEXT)))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((NULL IN (vt1.c0)))&(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((vt1.c0)AND(LAST_INSERT_ROWID() COLLATE BINARY))) ORDER BY (((NULL IN (vt1.c0)))&(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((NULL IN (vt1.c0)))&(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((vt1.c0)AND(LAST_INSERT_ROWID() COLLATE BINARY))) ORDER BY (((NULL IN (vt1.c0)))&(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS LAST LIMIT 2;
SELECT * FROM vt1, vt0 WHERE (((vt0.c1)|((((0.23205643869743842)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))))) ORDER BY (((0.6333685258399065)!=(vt1.c0)) IN (((vt0.c1)|(vt1.c0)))) ASC  NULLS LAST, ((CAST(vt1.c0 AS INTEGER)) NOT NULL)  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1)|((((0.23205643869743842)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))))) ORDER BY (((0.6333685258399065)<>(vt1.c0)) IN (((vt0.c1)|(vt1.c0)))) ASC  NULLS LAST, ((CAST(vt1.c0 AS INTEGER)) NOT NULL)  NULLS LAST LIMIT 0;
SELECT * FROM vt1, vt0 WHERE (((vt0.c1)|((((0.23205643869743842)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))))) ORDER BY (((0.6333685258399065)!=(vt1.c0)) IN (((vt0.c1)|(vt1.c0)))) ASC  NULLS LAST, ((CAST(vt1.c0 AS INTEGER)) NOT NULL)  NULLS LAST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1)|((((0.23205643869743842)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))))) ORDER BY (((0.6333685258399065)<>(vt1.c0)) IN (((vt0.c1)|(vt1.c0)))) ASC  NULLS LAST, ((CAST(vt1.c0 AS INTEGER)) NOT NULL)  NULLS LAST LIMIT 0;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (vt0.c1);
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1, vt0.c0)) NOT BETWEEN ((CAST(NULL AS NUMERIC), (((vt0.c0))<((vt0.c1))))) AND ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), 0.8571012372399163))) ASC, ((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))LIKE(CAST(vt0.c1 AS REAL))) INTERSECT SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((((((vt0.c1)+(vt0.c1)))AND(((vt0.c0)=(vt0.c1)))))OR(vt0.c0))) ORDER BY (((vt0.c1, vt0.c0)) NOT BETWEEN ((CAST(NULL AS NUMERIC), (((vt0.c0))<((vt0.c1))))) AND ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), 0.8571012372399163))) ASC, ((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))LIKE(CAST(vt0.c1 AS REAL)));
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (((((((CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) BETWEEN (vt1.c0) AND ('-500764932')))))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE)));
SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((((((((CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) BETWEEN (vt1.c0) AND ('-500764932')))))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE)))AND(CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)))) LIMIT 1 INTERSECT SELECT DISTINCT MIN(vt1.c0) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))&(((((0X15cd8e5e)OR(vt1.c0)))AND(vt1.c0))))) LIMIT 1;
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)AND(CAST(vt1.c0 AS REAL) COLLATE BINARY))) INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (TRIM(DISTINCT (vt1.c0 IN ()), (((vt1.c0))>=((0X572164b1)))));
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)AND(CAST(vt1.c0 AS REAL) COLLATE BINARY))) INTERSECT SELECT ALL * FROM vt0, vt1 WHERE (TRIM(DISTINCT (vt1.c0 IN ()), (((vt1.c0))>=((0X572164b1)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS BLOB) WHERE (((CAST(vt0.c0 AS REAL))-((vt0.c1 IN ()))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS BLOB) WHERE (((CAST(vt0.c0 AS REAL))-((vt0.c1 IN ()))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS BLOB) WHERE (((CAST(vt0.c0 AS REAL))-((vt0.c1 IN ()))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS BLOB) WHERE (((CAST(vt0.c0 AS REAL))-((vt0.c1 IN ()))));
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (((((vt1.c0)/(vt1.c0))))<(((- (vt0.c1)))))  NULLS FIRST, (~ ((vt1.c0 IN (vt0.c0)))) DESC;
SELECT MAX(vt1.c0) FROM vt0, vt1 WHERE ((((((vt0.c0) NOTNULL) IN ()))AND((+ (((vt0.c0)&(vt0.c1))))))) ORDER BY (((((vt1.c0)/(vt1.c0))))<(((- (vt0.c1)))))  NULLS FIRST, (~ ((vt1.c0 IN (vt0.c0)))) DESC LIMIT 0x2;
SELECT ALL * FROM vt0, vt1 WHERE (STRFTIME('659701067', CAST(vt0.c0 AS INTEGER), (vt0.c1 IN ()), vt1.c0, (- (vt0.c0)), ((vt0.c1)-(vt0.c1)))) ORDER BY (~ (CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '213797321' END)), CAST(CAST(vt0.c0 AS TEXT) AS BLOB) DESC;
SELECT DISTINCT * FROM vt0, vt1 WHERE (STRFTIME('659701067', CAST(vt0.c0 AS INTEGER), (vt0.c1 IN ()), vt1.c0, (- (vt0.c0)), ((vt0.c1)-(vt0.c1)))) ORDER BY (~ (CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '213797321' END)), CAST(CAST(vt0.c0 AS TEXT) AS BLOB) DESC INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (~ (CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '213797321' END)), CAST(CAST(vt0.c0 AS TEXT) AS BLOB) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (STRFTIME('659701067', CAST(vt0.c0 AS INTEGER), (vt0.c1 IN ()), vt1.c0, (- (vt0.c0)), ((vt0.c1)-(vt0.c1)))) ORDER BY (~ (CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '213797321' END)), CAST(CAST(vt0.c0 AS TEXT) AS BLOB) DESC;
SELECT DISTINCT * FROM vt0, vt1 WHERE (STRFTIME('659701067', CAST(vt0.c0 AS INTEGER), (vt0.c1 IN ()), vt1.c0, (- (vt0.c0)), ((vt0.c1)-(vt0.c1)))) ORDER BY (~ (CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '213797321' END)), CAST(CAST(vt0.c0 AS TEXT) AS BLOB) DESC INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (~ (CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '213797321' END)), CAST(CAST(vt0.c0 AS TEXT) AS BLOB) DESC;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)%(vt1.c0)) THEN ((vt1.c0)&(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS REAL) ELSE 0.6778816381003281 END) ORDER BY (x'0dc303' IN (vt1.c0)) COLLATE BINARY;
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)%(vt1.c0)) THEN ((vt1.c0)&(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS REAL) ELSE 0.6778816381003281 END) ORDER BY (((((vt1.c0)/(vt1.c0)), (+ (NULL))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((0.7764942881636796) NOT NULL)))), (((vt1.c0)) NOT BETWEEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((vt1.c0 COLLATE BINARY)))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)%(vt1.c0)) THEN ((vt1.c0)&(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS REAL) ELSE 0.6778816381003281 END) ORDER BY (x'0dc303' IN (vt1.c0)) COLLATE BINARY;
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)%(vt1.c0)) THEN ((vt1.c0)&(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS REAL) ELSE 0.6778816381003281 END) ORDER BY (((((vt1.c0)/(vt1.c0)), (+ (NULL))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((0.7764942881636796) NOT NULL)))), (((vt1.c0)) NOT BETWEEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((vt1.c0 COLLATE BINARY)))  NULLS FIRST LIMIT 0;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((x'd9')IS((((('-1933451997')OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))IS NOT((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))  NULLS LAST, ((((x'') NOT NULL))LIKE(vt0.c1 COLLATE RTRIM)) ASC;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((((x'd9')IS((((('-1933451997')OR(vt0.c0)))AND(vt0.c0)))))AND(((CAST(vt0.c1 AS REAL)) BETWEEN (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))))) ORDER BY vt0.c0 DESC, (((((((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND (('0.8981311707057964', vt0.c1))))OR(RTRIM(vt0.c0))))OR('675104088')))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC LIMIT 1 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (CASE SQLITE_SOURCE_ID()  WHEN ((vt0.c1)/(vt0.c1)) THEN (- (vt0.c1)) ELSE ((vt0.c1) NOT NULL) END) ORDER BY vt0.c0 DESC, (((((((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND (('0.8981311707057964', vt0.c1))))OR(RTRIM(vt0.c0))))OR('675104088')))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC LIMIT 1;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c1  WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c1)) END);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c1)) END) LIMIT 2 INTERSECT SELECT * FROM vt0 WHERE ((+ (vt0.c0))) LIMIT 0X2;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c1  WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c1)) END);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c1)) END) LIMIT 2 INTERSECT SELECT * FROM vt0 WHERE ((+ (vt0.c0))) LIMIT 0X2;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0, vt1.c0, vt0.c0))<=(('1922753872', vt1.c0, NULL))) COLLATE NOCASE) ORDER BY CASE WHEN IFNULL(vt0.c1, vt0.c1) THEN vt0.c1 WHEN (vt1.c0 IN (vt1.c0, vt0.c0)) THEN NULL ELSE ((vt1.c0) IS TRUE) END DESC  NULLS FIRST, (- (vt0.c0 COLLATE BINARY)), ((vt0.c1 COLLATE BINARY) BETWEEN (LTRIM(vt0.c1)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt1.c0, vt1.c0, vt0.c0))<=(('1922753872', vt1.c0, NULL))) COLLATE NOCASE)AND(CAST(((0xffffffffc2eaf606)IS('^BN|4')) AS INTEGER)))) ORDER BY (LOWER(DISTINCT vt0.c0) IN ()) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST((~ (vt0.c0)) AS TEXT)) ORDER BY (LOWER(DISTINCT vt0.c0) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0, vt1.c0, vt0.c0))<=(('1922753872', vt1.c0, NULL))) COLLATE NOCASE) ORDER BY CASE WHEN IFNULL(vt0.c1, vt0.c1) THEN vt0.c1 WHEN (vt1.c0 IN (vt1.c0, vt0.c0)) THEN NULL ELSE ((vt1.c0) IS TRUE) END DESC  NULLS FIRST, (- (vt0.c0 COLLATE BINARY)), ((vt0.c1 COLLATE BINARY) BETWEEN (LTRIM(vt0.c1)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt1.c0, vt1.c0, vt0.c0))<=(('1922753872', vt1.c0, NULL))) COLLATE NOCASE)AND(CAST(((0xffffffffc2eaf606)IS('^BN|4')) AS INTEGER)))) ORDER BY (LOWER(DISTINCT vt0.c0) IN ()) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST((~ (vt0.c0)) AS TEXT)) ORDER BY (LOWER(DISTINCT vt0.c0) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY TIME(vt0.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN 'k13CE␀' WHEN x'' THEN x'1b' ELSE vt1.c0 END, ((vt1.c0) ISNULL)), UPPER(IFNULL(DISTINCT vt0.c0, vt1.c0));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((NULL)AND(((0.2685946496160809)<<(vt0.c0))))) ORDER BY 'ZI' LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((~ ((vt0.c0 IN (vt0.c0, vt1.c0))))) ORDER BY 'ZI' LIMIT 0x0;
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY TIME(vt0.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN 'k13CE␀' WHEN x'' THEN x'1b' ELSE vt1.c0 END, ((vt1.c0) ISNULL)), UPPER(IFNULL(DISTINCT vt0.c0, vt1.c0));
SELECT DISTINCT * FROM vt0, vt1 WHERE (((NULL)AND(((0.2685946496160809)<<(vt0.c0))))) ORDER BY 'ZI' LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, vt1 WHERE ((~ ((vt0.c0 IN (vt0.c0, vt1.c0))))) ORDER BY 'ZI' LIMIT 0x0;
SELECT ALL MAX(vt1.c0) FROM vt1, vt0 WHERE (CASE ((NULL)LIKE(vt1.c0))  WHEN ((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)) THEN ((((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) WHEN ((vt1.c0) NOTNULL) THEN (NOT (vt0.c1)) WHEN vt1.c0 COLLATE RTRIM THEN CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END ELSE (vt0.c0 IN (vt1.c0)) END);
SELECT DISTINCT MAX(vt1.c0) FROM vt1, vt0 WHERE (CASE ((NULL)LIKE(vt1.c0))  WHEN ((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)) THEN ((((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) WHEN ((vt1.c0) NOTNULL) THEN (NOT (vt0.c1)) WHEN vt1.c0 COLLATE RTRIM THEN CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END ELSE (vt0.c0 IN (vt1.c0)) END) ORDER BY ((((vt0.c1) NOTNULL)) IS FALSE), (- (vt0.c0 COLLATE RTRIM))  NULLS LAST, (((vt1.c0 IN ())) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt0.c1)>=(vt1.c0))));
SELECT * FROM vt0 WHERE (((TRIM(DISTINCT NULL))*(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY vt0.c0 ASC  NULLS FIRST, ((vt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR('X\''TmT]')))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((TRIM(DISTINCT NULL))*(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))>>(((vt0.c1) NOTNULL)))))) ORDER BY vt0.c0 ASC  NULLS FIRST, ((vt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR('X\''TmT]')))) DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) WHEN (~ (vt0.c0)) THEN (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, 0.8675570717243279, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))) WHEN CASE WHEN vt0.c1 THEN 'yilV7_	6' ELSE 'N/찻ue\8Fj' END THEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((x'', vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN CASE WHEN x'bf14' THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c1 AS INTEGER) WHEN (((x'', vt0.c0))>=((vt0.c1, vt0.c1))) THEN ABS(vt0.c0) END) ORDER BY vt0.c0 ASC  NULLS FIRST, ((vt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR('X\''TmT]')))) DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0 WHERE (((TRIM(DISTINCT NULL))*(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY vt0.c0 ASC  NULLS FIRST, ((vt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR('X\''TmT]')))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((TRIM(DISTINCT NULL))*(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))>>(((vt0.c1) NOTNULL)))))) ORDER BY vt0.c0 ASC  NULLS FIRST, ((vt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR('X\''TmT]')))) DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) WHEN (~ (vt0.c0)) THEN (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, 0.8675570717243279, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))) WHEN CASE WHEN vt0.c1 THEN 'yilV7_	6' ELSE 'N/찻ue\8Fj' END THEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((x'', vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN CASE WHEN x'bf14' THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c1 AS INTEGER) WHEN (((x'', vt0.c0))>=((vt0.c1, vt0.c1))) THEN ABS(vt0.c0) END) ORDER BY vt0.c0 ASC  NULLS FIRST, ((vt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR('X\''TmT]')))) DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN x'8f' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((NULL)*(vt1.c0)) IN (((0.7436765375386061)<(vt1.c0)))), (((((((vt1.c0, vt1.c0)) NOT BETWEEN (('-426441783', vt1.c0)) AND ((vt1.c0, 0.1798502328003143))))OR((vt1.c0 IN (vt1.c0, NULL)))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN x'8f' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((NULL)*(vt1.c0)) IN (((0.7436765375386061)<(vt1.c0)))), (((((((vt1.c0, vt1.c0)) NOT BETWEEN (('-426441783', vt1.c0)) AND ((vt1.c0, 0.1798502328003143))))OR((vt1.c0 IN (vt1.c0, NULL)))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)||(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ('860595648'))) ORDER BY (((NULL)*(vt1.c0)) IN (((0.7436765375386061)<(vt1.c0)))), (((((((vt1.c0, vt1.c0)) NOT BETWEEN (('-426441783', vt1.c0)) AND ((vt1.c0, 0.1798502328003143))))OR((vt1.c0 IN (vt1.c0, NULL)))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN x'8f' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((NULL)*(vt1.c0)) IN (((0.7436765375386061)<(vt1.c0)))), (((((((vt1.c0, vt1.c0)) NOT BETWEEN (('-426441783', vt1.c0)) AND ((vt1.c0, 0.1798502328003143))))OR((vt1.c0 IN (vt1.c0, NULL)))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT DISTINCT * FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN x'8f' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((NULL)*(vt1.c0)) IN (((0.7436765375386061)<(vt1.c0)))), (((((((vt1.c0, vt1.c0)) NOT BETWEEN (('-426441783', vt1.c0)) AND ((vt1.c0, 0.1798502328003143))))OR((vt1.c0 IN (vt1.c0, NULL)))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)||(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ('860595648'))) ORDER BY (((NULL)*(vt1.c0)) IN (((0.7436765375386061)<(vt1.c0)))), (((((((vt1.c0, vt1.c0)) NOT BETWEEN (('-426441783', vt1.c0)) AND ((vt1.c0, 0.1798502328003143))))OR((vt1.c0 IN (vt1.c0, NULL)))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0))%(x'5f3e60')));
SELECT DISTINCT COUNT(*) FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0))%(x'5f3e60'))) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOTNULL)  NULLS FIRST LIMIT 2;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt0.c0, vt1.c0))<=((vt0.c0, vt1.c0))))<=(SQLITE_VERSION())) WHERE (((((((CAST(vt0.c0 AS REAL))AND(((']Z') IS TRUE))))OR(((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))))OR(vt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c1)OR(((NULL) NOTNULL))))AND(HEX(vt1.c0)))  NULLS LAST, vt1.c0 DESC;
SELECT DISTINCT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt0.c0, vt1.c0))<=((vt0.c0, vt1.c0))))<=(SQLITE_VERSION())) WHERE (((((((CAST(vt0.c0 AS REAL))AND(((']Z') IS TRUE))))OR(((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))))OR(vt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c1)OR(((NULL) NOTNULL))))AND(HEX(vt1.c0)))  NULLS LAST, vt1.c0 DESC LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt0.c0, vt1.c0))<=((vt0.c0, vt1.c0))))<=(SQLITE_VERSION())) WHERE ((((+ (0.31753129055662466)))GLOB(x''))) ORDER BY ((((vt0.c1)OR(((NULL) NOTNULL))))AND(HEX(vt1.c0)))  NULLS LAST, vt1.c0 DESC LIMIT 0X1;
SELECT * FROM vt1, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(((0xfffffffff174b187) NOT BETWEEN (vt0.c1) AND (vt1.c0)))))AND(vt0.c1)))AND('7\MWe{'))) ORDER BY (((vt0.c1 IN ()))OR((('2109847487')>=(vt1.c0)))) DESC, ((((vt0.c0)<=(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) AND (((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(((-244010617) NOT BETWEEN (vt0.c1) AND (vt1.c0)))))AND(vt0.c1)))AND('7\MWe{')))AND(CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)))) ORDER BY ''  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((0.9836631198075362)IS NOT((- (vt0.c1))))) ORDER BY ''  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(((0xfffffffff174b187) NOT BETWEEN (vt0.c1) AND (vt1.c0)))))AND(vt0.c1)))AND('7\MWe{'))) ORDER BY (((vt0.c1 IN ()))OR((('2109847487')>=(vt1.c0)))) DESC, ((((vt0.c0)<=(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) AND (((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(((-244010617) NOT BETWEEN (vt0.c1) AND (vt1.c0)))))AND(vt0.c1)))AND('7\MWe{')))AND(CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)))) ORDER BY ''  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt1, vt0 WHERE (((0.9836631198075362)IS NOT((- (vt0.c1))))) ORDER BY ''  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((vt0.c1))>((x'a5d42ae8'))) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (((x'c8e1a32d46', x''))<((vt0.c1, NULL))) ELSE (- (vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((vt0.c1))>((x'a5d42ae8'))) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (((x'c8e1a32d46', x''))<((vt0.c1, NULL))) ELSE (- (vt0.c0)) END) ORDER BY ((vt0.c1 COLLATE BINARY) BETWEEN (((vt0.c0)/(NULL))) AND (json_type(vt0.c1))) ASC INTERSECT SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE 0X656440fb END WHEN ((vt0.c0)<=(vt0.c0)) THEN CASE WHEN '-1464712341' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN (- (vt0.c0)) THEN vt0.c0 WHEN (NOT (vt0.c0)) THEN (vt0.c0 IN (vt0.c1)) ELSE CAST(0.5193454173584257 AS INTEGER) END) ORDER BY ((vt0.c1 COLLATE BINARY) BETWEEN (((vt0.c0)/(NULL))) AND (json_type(vt0.c1))) ASC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((vt0.c1))>((x'a5d42ae8'))) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (((x'c8e1a32d46', x''))<((vt0.c1, NULL))) ELSE (- (vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((vt0.c1))>((x'a5d42ae8'))) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (((x'c8e1a32d46', x''))<((vt0.c1, NULL))) ELSE (- (vt0.c0)) END) ORDER BY ((vt0.c1 COLLATE BINARY) BETWEEN (((vt0.c0)/(NULL))) AND (json_type(vt0.c1))) ASC INTERSECT SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE 0X656440fb END WHEN ((vt0.c0)<=(vt0.c0)) THEN CASE WHEN '-1464712341' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN (- (vt0.c0)) THEN vt0.c0 WHEN (NOT (vt0.c0)) THEN (vt0.c0 IN (vt0.c1)) ELSE CAST(0.5193454173584257 AS INTEGER) END) ORDER BY ((vt0.c1 COLLATE BINARY) BETWEEN (((vt0.c0)/(NULL))) AND (json_type(vt0.c1))) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN 0.29412651016323776 WHEN vt0.c0 THEN vt0.c0 END THEN ('' IN (vt0.c1, vt0.c1, vt0.c1)) END ASC  NULLS LAST, (+ (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY JULIANDAY(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), ((vt0.c1)||(vt0.c0)), vt0.c1 COLLATE RTRIM, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) DESC  NULLS LAST, ((((vt0.c1, vt0.c0, vt0.c0, NULL))=((vt0.c0, vt0.c1, vt0.c1, vt0.c0))) IN (TYPEOF(vt0.c1))) DESC;
SELECT * FROM vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN 0.29412651016323776 WHEN vt0.c0 THEN vt0.c0 END THEN ('' IN (vt0.c1, vt0.c1, vt0.c1)) END ASC  NULLS LAST, (+ (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY JULIANDAY(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), ((vt0.c1)||(vt0.c0)), vt0.c1 COLLATE RTRIM, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) DESC  NULLS LAST, ((((vt0.c1, vt0.c0, vt0.c0, NULL))=((vt0.c0, vt0.c1, vt0.c1, vt0.c0))) IN (TYPEOF(vt0.c1))) DESC;
SELECT * FROM vt1, vt0 WHERE (1.517556072E9);
SELECT DISTINCT * FROM vt1, vt0 WHERE (1.517556072E9);
SELECT * FROM vt1, vt0 WHERE (1.517556072E9);
SELECT DISTINCT * FROM vt1, vt0 WHERE (1.517556072E9);
SELECT MAX(vt1.c0) FROM vt1 WHERE ((((~ (vt1.c0)))-(vt1.c0))) ORDER BY (- ((((vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0)))))  NULLS LAST, vt1.c0 DESC  NULLS LAST;
SELECT MAX(vt1.c0) FROM vt1 WHERE ((((~ (vt1.c0)))-(vt1.c0))) ORDER BY (- ((((vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0)))))  NULLS LAST, vt1.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((NULL, ((vt1.c0)AND(vt1.c0))))=((CAST(vt0.c1 AS REAL), vt1.c0 COLLATE RTRIM))));
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((((NULL, ((vt1.c0)AND(vt1.c0))))=((CAST(vt0.c1 AS REAL), vt1.c0 COLLATE RTRIM)))) INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ('1258981454');
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN (vt0.c0)));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN (vt0.c0))) ORDER BY (~ ((((vt0.c1, vt0.c1))!=((vt0.c0, vt1.c0))))) ASC INTERSECT SELECT * FROM vt1, vt0 WHERE (((vt1.c0 COLLATE RTRIM)<(JULIANDAY(vt0.c1, -1624196834, vt0.c1, vt1.c0, vt0.c0)))) ORDER BY (~ ((((vt0.c1, vt0.c1))!=((vt0.c0, vt1.c0))))) ASC;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN (vt0.c0)));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN (vt0.c0))) ORDER BY (~ ((((vt0.c1, vt0.c1))!=((vt0.c0, vt1.c0))))) ASC INTERSECT SELECT * FROM vt1, vt0 WHERE (((vt1.c0 COLLATE RTRIM)<(JULIANDAY(vt0.c1, -1624196834, vt0.c1, vt1.c0, vt0.c0)))) ORDER BY (~ ((((vt0.c1, vt0.c1))!=((vt0.c0, vt1.c0))))) ASC;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((x'', vt0.c0, NULL))==((vt0.c1, vt0.c1, vt0.c1))))) WHERE (vt0.c1) ORDER BY NULL  NULLS LAST, (((NULL)+(vt1.c0)) IN ((~ (vt0.c0)))) DESC;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((x'', vt0.c0, NULL))=((vt0.c1, vt0.c1, vt0.c1))))) WHERE (((vt0.c1)AND((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)*(vt1.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END) AND (0.863430580413621)) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((x'', vt0.c0, NULL))==((vt0.c1, vt0.c1, vt0.c1))))) WHERE (LIKELIHOOD(DISTINCT CAST(vt0.c0 AS TEXT), (((vt0.c0, vt0.c0)) NOT BETWEEN ((0.05995094978792581, vt0.c1)) AND ((vt0.c0, vt0.c1))))) ORDER BY ((((vt0.c0)*(vt1.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END) AND (0.863430580413621)) ASC  NULLS LAST;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((x'', vt0.c0, NULL))==((vt0.c1, vt0.c1, vt0.c1))))) WHERE (vt0.c1) ORDER BY NULL  NULLS LAST, (((NULL)+(vt1.c0)) IN ((~ (vt0.c0)))) DESC;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((x'', vt0.c0, NULL))=((vt0.c1, vt0.c1, vt0.c1))))) WHERE (((vt0.c1)AND((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)*(vt1.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END) AND (0.863430580413621)) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((x'', vt0.c0, NULL))==((vt0.c1, vt0.c1, vt0.c1))))) WHERE (LIKELIHOOD(DISTINCT CAST(vt0.c0 AS TEXT), (((vt0.c0, vt0.c0)) NOT BETWEEN ((0.05995094978792581, vt0.c1)) AND ((vt0.c0, vt0.c1))))) ORDER BY ((((vt0.c0)*(vt1.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END) AND (0.863430580413621)) ASC  NULLS LAST;
SELECT MIN(vt0.c1) FROM vt1, vt0 WHERE (0.1274825467516839);
SELECT MIN(vt0.c1) FROM vt1, vt0 WHERE (0.1274825467516839);
SELECT MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, vt0.c1 COLLATE NOCASE, ((x'17') IS FALSE)))<>((vt0.c0, ((vt0.c0)>>(0x448b21a)), UPPER(DISTINCT vt0.c1))))) ORDER BY vt0.c1 DESC, ((vt0.c0 COLLATE NOCASE)>(((vt0.c1)<=(0.04981140473941126)))) ASC;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, vt0.c1 COLLATE NOCASE, ((x'17') IS FALSE)))>((vt0.c0, ((vt0.c0)>>(71873050)), UPPER(DISTINCT vt0.c1))))) ORDER BY TRIM(HEX(vt0.c0), COALESCE(DISTINCT vt0.c1, vt0.c1))  NULLS LAST, CASE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END  WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((0.1545940735389335)IS NOT(vt0.c0)) ELSE ((vt0.c0)+(vt0.c1)) END LIMIT 2;
