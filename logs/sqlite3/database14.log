--java.lang.AssertionError: -1444920123 0
--	at sqlancer.sqlite3.oracle.SQLite3SubsetOracle.checkSubsetQuery(SQLite3SubsetOracle.java:229)
--	at sqlancer.sqlite3.oracle.SQLite3SubsetOracle.check(SQLite3SubsetOracle.java:109)
--	at sqlancer.ProviderAdapter.generateAndTestDatabase(ProviderAdapter.java:49)
--	at sqlancer.Main$DBMSExecutor.run(Main.java:323)
--	at sqlancer.Main$2.run(Main.java:507)
--	at sqlancer.Main$2.runThread(Main.java:485)
--	at sqlancer.Main$2.run(Main.java:475)
--	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
--	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
--	at java.base/java.lang.Thread.run(Thread.java:831)
---- Time: 2021/05/19 01:09:36
-- Database: database14
-- Database version: 3.34.0
-- seed value: 1621357771658
PRAGMA cache_size = 50000;
PRAGMA temp_store=MEMORY;
PRAGMA synchronous=off;
PRAGMA case_sensitive_like=ON;
PRAGMA encoding = 'UTF-16le';
CREATE VIRTUAL TABLE vt0 USING fts5(c0, detail=none);
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41549');
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(x'48', x'', '*c^TEEj\L');
UPDATE OR ABORT vt0 SET (c0, c0)=(NULL, 'A');
INSERT OR IGNORE INTO vt0 VALUES (0.5339742860243515);
BEGIN  TRANSACTION;
PRAGMA soft_heap_limit = 0;
INSERT OR IGNORE INTO vt0(c0) VALUES ('');
ROLLBACK TRANSACTION;
INSERT INTO vt0(vt0) VALUES('integrity-check');
UPDATE OR ROLLBACK vt0 SET (c0, c0, c0)=(NULL, NULL, NULL) WHERE (vt0.c0 IN (vt0.c0));
UPDATE OR IGNORE vt0 SET (c0)=(0.5339742860243515) WHERE ((((vt0.c0)OR(vt0.c0 COLLATE RTRIM)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
INSERT OR ROLLBACK INTO vt0 VALUES (0.6933831892915757);
UPDATE vt0 SET (c0, c0, c0)=(NULL, x'f8', 0.2518738960616732);
UPDATE OR IGNORE vt0 SET c0 = '-1218720995';
UPDATE OR ABORT vt0 SET c0 = NULL;
UPDATE vt0 SET (c0, c0, c0)=('-782111931', 0.6268602880686501, '-1444920123');
PRAGMA locking_mode;
INSERT OR IGNORE INTO vt0 VALUES (NULL), ((('')>>((('-782111931') IS TRUE))));
ANALYZE;
INSERT INTO vt0(vt0) VALUES('integrity-check');
COMMIT TRANSACTION;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (x'2767');
COMMIT;
VACUUM;
VACUUM;
VACUUM temp;
BEGIN DEFERRED TRANSACTION;
PRAGMA main.defer_foreign_keys = false;
BEGIN  TRANSACTION;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL), (0.7900370681198032);
REINDEX;
BEGIN IMMEDIATE TRANSACTION;
UPDATE vt0 SET c0 = -1444920123 WHERE COALESCE(DISTINCT CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'e329' WHEN 0.885009959196702 THEN x'76' END, x'', ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ('-891092119', vt0.c0)));
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11);
UPDATE OR IGNORE vt0 SET c0 = x'', c0 = x'f8', c0 = x'', c0 = NULL;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.7380873575539836);
INSERT INTO vt0(vt0) VALUES('optimize');
INSERT OR IGNORE INTO vt0(c0) VALUES (''), (NULL);
UPDATE OR IGNORE vt0 SET (c0, c0, c0, c0, c0)=(-7.82111931E8, -891092119, NULL, 0.8821440409868511, 0.3767653768468987);
UPDATE vt0 SET (c0)=('0.3767653768468987');
UPDATE OR IGNORE vt0 SET c0 = 0.6482213718609312, c0 = x'42', c0 = x'' WHERE CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC);
UPDATE OR FAIL vt0 SET c0 = NULL, c0 = '', c0 = 'P,3+&' WHERE (~ ('-891092119'));
ROLLBACK TRANSACTION;
BEGIN IMMEDIATE TRANSACTION;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'bf6f'), (NULL);
INSERT OR FAIL INTO vt0(c0) VALUES (NULL), (-1.444920123E9), ('');
END TRANSACTION;
INSERT INTO vt0(vt0) VALUES('integrity-check');
UPDATE OR IGNORE vt0 SET c0 = -7.82111931E8, c0 = x'', c0 = 0.2518738960616732 WHERE ((NULL)||(vt0.c0));
INSERT OR REPLACE INTO vt0(c0) VALUES ('-782111931'), ('䓅'), (NULL), (x'3973');
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)');
INSERT OR IGNORE INTO vt0 VALUES ('-2131322945');
INSERT OR ABORT INTO vt0 VALUES (-2.131322945E9);
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6);
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12);
END;
PRAGMA wal_checkpoint(TRUNCATE);
DELETE FROM sqlite_stat1 WHERE (((((NULL))<=(('-J'))))!=((+ (x''))));
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '27907');
INSERT OR REPLACE INTO vt0 VALUES (NULL), (''), (NULL);
INSERT OR IGNORE INTO vt0(c0) VALUES (x'0b'), (x'b75a');
INSERT INTO vt0(vt0) VALUES('optimize');
INSERT INTO vt0(vt0) VALUES('rebuild');
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(0.5580742716751879, x'808a', '-891092119');
UPDATE OR ROLLBACK vt0 SET c0 = 'sc(n)yT', c0 = NULL;
REINDEX NOCASE;
PRAGMA main.secure_delete;
UPDATE OR FAIL vt0 SET c0 = 0.10164869247271391, c0 = '1997071318', c0 = '-6츮%O';
VACUUM;
VACUUM temp;
INSERT INTO vt0(vt0) VALUES('optimize');
UPDATE OR IGNORE vt0 SET c0 = '1176690957', c0 = 0.1495838266302365;
INSERT OR ABORT INTO vt0 VALUES ((('-891092119')|(NULL)) COLLATE NOCASE), ('0.10164869247271391');
INSERT OR REPLACE INTO vt0(c0) VALUES (x'40'), (NULL), (NULL), ('-1218720995');
END;
INSERT OR ABORT INTO vt0 VALUES (NULL), (-1.444920123E9), (x'a3449565'), (x'1d'), (1191086497);
ANALYZE vt0;
UPDATE OR IGNORE vt0 SET (c0, c0)=('-1636193769', 0.8810538041314094);
UPDATE OR IGNORE vt0 SET c0 = -2131322945, c0 = '-1455372447' WHERE CAST((+ (vt0.c0)) AS TEXT);
INSERT OR FAIL INTO vt0(c0) VALUES (NULL);
UPDATE OR IGNORE vt0 SET (c0, c0)=('-2131322945', 1191086497) WHERE ((vt0.c0 COLLATE RTRIM) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
INSERT OR REPLACE INTO vt0(c0) VALUES (0.9976485771527109);
INSERT OR FAIL INTO vt0 VALUES (x'e0b6');
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62704');
INSERT OR FAIL INTO vt0 VALUES (0x61518fa5), (x'0e');
PRAGMA temp.foreign_keys;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (0.5580742716751879);
UPDATE OR IGNORE vt0 SET c0 = 0.7900370681198032, c0 = 0.5158824038226537, c0 = '' WHERE ((NULLIF(vt0.c0, vt0.c0))>>(vt0.c0));
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (0.8144601375785926);
INSERT OR IGNORE INTO vt0(c0) VALUES ('D'), (x'8c43'), ('-1695028892'), (0Xffffffff80f697bf), (0.2625676921362122), ('0.7380873575539836');
PRAGMA temp.checkpoint_fullfsync;
INSERT OR IGNORE INTO vt0 VALUES ('0.5158824038226537'), (x'71');
ANALYZE;
UPDATE vt0 SET (c0)=(NULL);
UPDATE OR IGNORE vt0 SET (c0, c0)=(NULL, 0.16683332449000687) WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0)<=(vt0.c0))));
ROLLBACK TRANSACTION;
ROLLBACK TRANSACTION;
DELETE FROM sqlite_stat1;
ANALYZE sqlite_master;
END TRANSACTION;
UPDATE OR IGNORE vt0 SET (c0)=('-1636193769') WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>(((vt0.c0)GLOB(vt0.c0))));
INSERT OR REPLACE INTO vt0(c0) VALUES (1.41189483E9), (0.2542662175552818), ('(ᦏuqJ+*');
COMMIT;
ROLLBACK TRANSACTION;
--SUBSET BUG!
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND (('a5-hI&o' COLLATE NOCASE))))AND(CAST(vt0.c0 COLLATE BINARY AS REAL)))) LIMIT 1;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND (('a5-hI&o' COLLATE NOCASE))));
