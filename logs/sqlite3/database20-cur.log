-- Time: 2021/05/19 01:09:38
-- Database: database20
-- Database version: 3.34.0
-- seed value: 1621357771664
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, tokenize=unicode61); -- 0ms;
CREATE TABLE t1 (c0 REAL , c1 INTEGER , c2 REAL ); -- 1ms;
UPDATE OR IGNORE vt0 SET (c1, c0, c0)=('115292246', NULL, '115292246') WHERE ((((vt0.c1) IS FALSE))>>((NOT (vt0.c0)))); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, c0) VALUES (x'', 'C\q
7	#'), (NULL, NULL), ('CN4', 'F\}*'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 544714661); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA cache_spill = 991215038143402788; -- 0ms;
CREATE TEMP VIEW v0(c0, c1, c2) AS SELECT DISTINCT ((((((t1.c1 COLLATE RTRIM)AND(((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c1)))))OR(((t1.c0)==(vt0.c0)))))AND(((((((((t1.c0)OR(vt0.c0)))AND(t1.c2)))AND(vt0.c0)))OR(t1.c1)))), (((((t1.c0, t1.c1, vt0.c1, t1.c2)) NOT BETWEEN ((t1.c0, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1, t1.c1))))GLOB(((t1.c0) NOT BETWEEN ('1147263217') AND (t1.c0)))), ((~ (t1.c1)) IN ()) FROM vt0, t1 WHERE ((+ ((- (0X3dffa412))))); -- 1ms;
INSERT OR FAIL INTO t1(c1, c2) VALUES (0.749521060044862, 0.026515464598603544); -- 1ms;
REINDEX; -- 1ms;
PRAGMA secure_delete = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, c1) VALUES (0xffffffffebf456b9, x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT OR IGNORE INTO t1(c1) VALUES (x''), (0.749521060044862); -- 0ms;
REINDEX  vt0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (0.14103367742007866), ('#'), (0.9351864775769649); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '16857'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.9369942315316403), (NULL); -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
UPDATE t1 SET c1 = x'47', c2 = NULL WHERE ((((((((((t1.c0)OR(t1.c1)))AND(t1.c2)))AND(t1.c2)))AND(t1.c2))) NOT BETWEEN (CASE t1.c1  WHEN t1.c2 THEN t1.c2 ELSE t1.c2 END) AND ((NOT (t1.c2)))); -- 1ms;
UPDATE OR ABORT vt0 SET (c1, c1)=('T4 J-m?', x'a7'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=('n|?r4ං') WHERE (0.3084594309206635 IN (vt0.c1)); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 115292246);
; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1094150099,10');
; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c2) VALUES (1040163858); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t1 SET c1 = x'a1'; -- 0ms;
INSERT OR FAIL INTO t1(c2, c1, c0) VALUES (0.6985923557111237, '', x''); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35876'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered'); -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
UPDATE OR IGNORE t1 SET (c0, c0)=('-336308551', '*') WHERE ((((((t1.c0)+(t1.c2)))AND(GLOB(0.14103367742007866, t1.c1))))AND(((t1.c1)-(t1.c0)))); -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c1) VALUES ('1709102821'), (x''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO t1(c1) VALUES (x'9e'), (0.7657422968599975); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE vt0 SET c0 = NULL, c1 = x'' WHERE json_object(vt0.c1, vt0.c1 COLLATE BINARY, ((vt0.c0) ISNULL), ((vt0.c0)>=(vt0.c1))); -- 1ms;
UPDATE vt0 SET c0 = NULL, c1 = 1.147263217E9; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
PRAGMA secure_delete = FAST; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64386'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41669'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1329581092);
; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 1ms;
INSERT OR ABORT INTO t1(c1, c0) VALUES (0.7825621314239689, x'0e99c5'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (0Xffffffffdc106324, x'e3'), (0.5262929764240647, NULL), ('0.9351864775769649', ''), (NULL, '228315338'); -- 0ms;
PRAGMA busy_timeout = 2348737145450503387; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, '}g+h'), (0X431652a, -1015592478), (NULL, 0.026515464598603544); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 679001250); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA main.cache_size; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 115292246);
; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1796606004); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0 = 0.7825621314239689, c1 = NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE t1 SET c1 = -1329581092; -- 0ms;
PRAGMA main.mmap_size = 4156611569504717131; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=108102891,11');
; -- 0ms;
UPDATE OR IGNORE t1 SET c2 = 1.08102891E8, c2 = '-1083689078'; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1015592478,12');
; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -499593648);
; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1144587071); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('g*GC'), (0.9964050107015158), (''), (NULL); -- 0ms;
REINDEX  vt0; -- 0ms;
PRAGMA main.recursive_triggers = true; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38578'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0 = 0.12660962818335064, c0 = 0x5df1bdf7; -- 1ms;
UPDATE OR FAIL t1 SET c1 = x'', c1 = x'bcd342fc' WHERE (((t1.c2) ISNULL) IN (NULL)); -- 0ms;
INSERT OR IGNORE INTO t1(c2, c0) VALUES (x'8e', 2.28315338E8), (0.6831539244855179, x'4c'), (471276848, 0Xffffffffac99e204); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
PRAGMA temp.auto_vacuum = INCREMENTAL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 797515448); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62028'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO t1(c1) VALUES (NULL), ('0.9351864775769649'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-841927177 unordered'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62043'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=132882391,6');
; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'060ecb'), (NULL), (x'fe34d8'), (''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.secure_delete = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=128282561,11');
; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-841927177 3 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL, '㜆E(T''&', x'86'), (NULL, 0Xffffffffb23dc153, '-1329581092'); -- 0ms;
PRAGMA short_column_names; -- 0ms;
UPDATE OR ABORT vt0 SET c0 = '', c1 = 0.5208842837866051; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=(0x8120442, 'S1'); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT MAX(v0.c0) FROM v0, vt0 WHERE ((- ((NOT (v0.c2)))));
SELECT DISTINCT MAX(v0.c0) FROM v0, vt0 WHERE ((- ((NOT (v0.c2))))) INTERSECT SELECT DISTINCT MAX(v0.c0) FROM v0, vt0 WHERE (((((vt0.c1)IS(v0.c0))) NOT NULL));
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))-(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (~ (vt0.c0)) COLLATE RTRIM, ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE -1.083689078E9 END) ISNULL);
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c1 AS TEXT))-(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (~ (vt0.c0)) COLLATE RTRIM, ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE -1.083689078E9 END) ISNULL) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))>=('1661887489' COLLATE BINARY))) ORDER BY (~ (vt0.c0)) COLLATE RTRIM, ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE -1.083689078E9 END) ISNULL) LIMIT 2;
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))-(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (~ (vt0.c0)) COLLATE RTRIM, ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE -1.083689078E9 END) ISNULL);
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c1 AS TEXT))-(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (~ (vt0.c0)) COLLATE RTRIM, ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE -1.083689078E9 END) ISNULL) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))>=('1661887489' COLLATE BINARY))) ORDER BY (~ (vt0.c0)) COLLATE RTRIM, ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE -1.083689078E9 END) ISNULL) LIMIT 2;
SELECT ALL MIN(v0.c0) FROM v0 WHERE ((NULL IN (((((v0.c0)AND(v0.c1)))OR(v0.c1))))) ORDER BY v0.c1 ASC, ((((((JULIANDAY(v0.c1, v0.c1, v0.c0))OR(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))))AND(((v0.c0) NOTNULL))))OR((v0.c2 IN (v0.c2)))) DESC  NULLS FIRST;
SELECT MIN(v0.c0) FROM v0 WHERE ((((NULL IN (((((v0.c0)AND(v0.c1)))OR(v0.c1)))))AND(CASE WHEN x'' THEN v0.c0 COLLATE NOCASE ELSE ((v0.c1) BETWEEN (0x65ded6e5) AND (']FyrංX')) END))) ORDER BY v0.c1 ASC, ((((((JULIANDAY(v0.c1, v0.c1, v0.c0))OR(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))))AND(((v0.c0) NOTNULL))))OR((v0.c2 IN (v0.c2)))) DESC  NULLS FIRST INTERSECT SELECT MIN(v0.c0) FROM v0 WHERE (((((v0.c2)/(v0.c0))) ISNULL)) ORDER BY v0.c1 ASC, ((((((JULIANDAY(v0.c1, v0.c1, v0.c0))OR(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))))AND(((v0.c0) NOTNULL))))OR((v0.c2 IN (v0.c2)))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (NULL) AND ('-1329581092')));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (NULL) AND ('-1329581092'))) ORDER BY CASE WHEN LIKE(vt0.c1, NULL) THEN vt0.c1 COLLATE NOCASE WHEN TRIM(vt0.c1, NULL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END END ASC, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (NULLIF(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c1)OR(vt0.c0)))AND(0Xaffd4e7)))) ORDER BY CASE WHEN LIKE(vt0.c1, NULL) THEN vt0.c1 COLLATE NOCASE WHEN TRIM(vt0.c1, NULL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END END ASC, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (NULL) AND ('-1329581092')));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (NULL) AND ('-1329581092'))) ORDER BY CASE WHEN LIKE(vt0.c1, NULL) THEN vt0.c1 COLLATE NOCASE WHEN TRIM(vt0.c1, NULL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END END ASC, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (NULLIF(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c1)OR(vt0.c0)))AND(0Xaffd4e7)))) ORDER BY CASE WHEN LIKE(vt0.c1, NULL) THEN vt0.c1 COLLATE NOCASE WHEN TRIM(vt0.c1, NULL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END END ASC, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT MAX(vt0.c1) FROM vt0 LEFT OUTER JOIN t1 ON COALESCE(DISTINCT ((t1.c0)==(vt0.c1)), TOTAL_CHANGES()) WHERE ((~ (0.7112285859638923)) COLLATE RTRIM) ORDER BY ABS(DISTINCT ((t1.c0) IS TRUE)) ASC  NULLS LAST;
SELECT MAX(vt0.c1) FROM vt0 LEFT OUTER JOIN t1 ON COALESCE(DISTINCT ((t1.c0)==(vt0.c1)), TOTAL_CHANGES()) WHERE ((~ (0.7112285859638923)) COLLATE RTRIM) ORDER BY ABS(DISTINCT ((t1.c0) IS TRUE)) ASC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL MAX(vt0.c1) FROM vt0 LEFT OUTER JOIN t1 ON COALESCE(DISTINCT ((t1.c0)=(vt0.c1)), TOTAL_CHANGES()) WHERE (((x'') NOT BETWEEN ((((t1.c0, t1.c1, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c1, NULL, vt0.c0, t1.c0, t1.c0)) AND ((vt0.c0, t1.c1, vt0.c1, vt0.c1, NULL)))) AND (((vt0.c1) NOT BETWEEN (t1.c1) AND (vt0.c0))))) ORDER BY ABS(DISTINCT ((t1.c0) IS TRUE)) ASC  NULLS LAST LIMIT 0;
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c1)>=((((t1.c2, t1.c0))<((NULL, t1.c0)))))) ORDER BY ((((t1.c0)>=(t1.c1))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((t1.c2)OR(t1.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)>=((((t1.c2, t1.c0))<((NULL, t1.c0))))))AND((t1.c1 COLLATE BINARY IN (((t1.c2)|(t1.c1)), CAST(t1.c1 AS NUMERIC)))))) ORDER BY ((((t1.c0)>=(t1.c1))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((t1.c2)OR(t1.c2))))  NULLS LAST LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE NOCASE)<=(t1.c1 COLLATE NOCASE))) ORDER BY ((((t1.c0)>=(t1.c1))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((t1.c2)OR(t1.c2))))  NULLS LAST LIMIT 0;
SELECT ALL MAX(v0.c1) FROM t1, v0 WHERE (((t1.c1) NOT NULL)) ORDER BY ((((v0.c1)AND(v0.c1)))AND(v0.c0)) COLLATE NOCASE;
SELECT DISTINCT MAX(v0.c1) FROM t1, v0 WHERE (((((t1.c1) NOT NULL))AND(((t1.c1) NOT NULL)))) ORDER BY x'';
SELECT * FROM t1 WHERE ((('>')=(CAST(t1.c2 AS REAL))));
SELECT DISTINCT * FROM t1 WHERE ((((('>')==(CAST(t1.c2 AS REAL))))AND(x''))) LIMIT 0X2;
SELECT * FROM t1 WHERE ((('>')=(CAST(t1.c2 AS REAL))));
SELECT DISTINCT * FROM t1 WHERE ((((('>')==(CAST(t1.c2 AS REAL))))AND(x''))) LIMIT 0X2;
SELECT MAX(t1.c2) FROM t1, v0 WHERE ((((v0.c0) BETWEEN (t1.c0) AND (t1.c0)) IN ()));
SELECT DISTINCT MAX(t1.c2) FROM t1, v0 WHERE ((((v0.c0) BETWEEN (t1.c0) AND (t1.c0)) IN ())) INTERSECT SELECT DISTINCT MAX(t1.c2) FROM t1, v0 WHERE (((v0.c1) BETWEEN (t1.c1 COLLATE BINARY) AND (((v0.c0)&(t1.c0)))));
SELECT ALL * FROM t1 INNER JOIN vt0 ON ((0.1474318409030484)|(((t1.c2)+(vt0.c0)))) WHERE (((((((((((((t1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c1)))))AND(CASE t1.c2  WHEN t1.c2 THEN vt0.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t1.c1 END)))OR('nT0V*!a')))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))))AND(x'' COLLATE RTRIM))) ORDER BY NULLIF((~ (t1.c1)), UNICODE(t1.c2))  NULLS FIRST, (+ (((vt0.c0)<>(t1.c2)))) DESC;
SELECT ALL * FROM t1 INNER JOIN vt0 ON ((0.1474318409030484)|(((t1.c2)+(vt0.c0)))) WHERE (((((((((((((((t1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c1)))))AND(CASE t1.c2  WHEN t1.c2 THEN vt0.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t1.c1 END)))OR('nT0V*!a')))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))))AND(x'' COLLATE RTRIM)))AND(CAST(((t1.c0) NOT NULL) AS INTEGER)))) ORDER BY ((((t1.c2) BETWEEN (vt0.c0) AND (t1.c1)))>>(CAST(vt0.c1 AS REAL)))  NULLS FIRST, CASE ((((t1.c0)OR('0.749521060044862')))OR(vt0.c1))  WHEN (t1.c0 IN ()) THEN vt0.c1 WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN t1.c1 WHEN ((((vt0.c0)AND(vt0.c0)))AND(t1.c0)) THEN ((((((((t1.c1)AND(t1.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(t1.c2)) END  NULLS LAST, ((((t1.c1)) BETWEEN ((vt0.c0)) AND ((t1.c1))) IN ()) DESC LIMIT 0X1 INTERSECT SELECT * FROM t1 INNER JOIN vt0 ON ((0.1474318409030484)|(((t1.c2)+(vt0.c0)))) WHERE (((t1.c0) NOT BETWEEN ('') AND (t1.c1)) COLLATE BINARY) ORDER BY ((((t1.c2) BETWEEN (vt0.c0) AND (t1.c1)))>>(CAST(vt0.c1 AS REAL)))  NULLS FIRST, CASE ((((t1.c0)OR('0.749521060044862')))OR(vt0.c1))  WHEN (t1.c0 IN ()) THEN vt0.c1 WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN t1.c1 WHEN ((((vt0.c0)AND(vt0.c0)))AND(t1.c0)) THEN ((((((((t1.c1)AND(t1.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(t1.c2)) END  NULLS LAST, ((((t1.c1)) BETWEEN ((vt0.c0)) AND ((t1.c1))) IN ()) DESC LIMIT 0x1;
SELECT ALL * FROM t1 INNER JOIN vt0 ON ((0.1474318409030484)|(((t1.c2)+(vt0.c0)))) WHERE (((((((((((((t1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c1)))))AND(CASE t1.c2  WHEN t1.c2 THEN vt0.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t1.c1 END)))OR('nT0V*!a')))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))))AND(x'' COLLATE RTRIM))) ORDER BY NULLIF((~ (t1.c1)), UNICODE(t1.c2))  NULLS FIRST, (+ (((vt0.c0)<>(t1.c2)))) DESC;
SELECT ALL * FROM t1 INNER JOIN vt0 ON ((0.1474318409030484)|(((t1.c2)+(vt0.c0)))) WHERE (((((((((((((((t1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c1)))))AND(CASE t1.c2  WHEN t1.c2 THEN vt0.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t1.c1 END)))OR('nT0V*!a')))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))))AND(x'' COLLATE RTRIM)))AND(CAST(((t1.c0) NOT NULL) AS INTEGER)))) ORDER BY ((((t1.c2) BETWEEN (vt0.c0) AND (t1.c1)))>>(CAST(vt0.c1 AS REAL)))  NULLS FIRST, CASE ((((t1.c0)OR('0.749521060044862')))OR(vt0.c1))  WHEN (t1.c0 IN ()) THEN vt0.c1 WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN t1.c1 WHEN ((((vt0.c0)AND(vt0.c0)))AND(t1.c0)) THEN ((((((((t1.c1)AND(t1.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(t1.c2)) END  NULLS LAST, ((((t1.c1)) BETWEEN ((vt0.c0)) AND ((t1.c1))) IN ()) DESC LIMIT 0X1 INTERSECT SELECT * FROM t1 INNER JOIN vt0 ON ((0.1474318409030484)|(((t1.c2)+(vt0.c0)))) WHERE (((t1.c0) NOT BETWEEN ('') AND (t1.c1)) COLLATE BINARY) ORDER BY ((((t1.c2) BETWEEN (vt0.c0) AND (t1.c1)))>>(CAST(vt0.c1 AS REAL)))  NULLS FIRST, CASE ((((t1.c0)OR('0.749521060044862')))OR(vt0.c1))  WHEN (t1.c0 IN ()) THEN vt0.c1 WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN t1.c1 WHEN ((((vt0.c0)AND(vt0.c0)))AND(t1.c0)) THEN ((((((((t1.c1)AND(t1.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(t1.c2)) END  NULLS LAST, ((((t1.c1)) BETWEEN ((vt0.c0)) AND ((t1.c1))) IN ()) DESC LIMIT 0x1;
SELECT ALL * FROM t1 WHERE ((NOT (((((((((((t1.c2)AND(t1.c0)))AND(t1.c2)))OR(NULL)))AND(t1.c2)))OR(t1.c1))))) ORDER BY ((((((((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c2) IS FALSE))))OR(NULL)))OR(((t1.c1)<(t1.c2)))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE ((NOT (((((((((((t1.c2)AND(t1.c0)))AND(t1.c2)))OR(NULL)))AND(t1.c2)))OR(t1.c1))))) ORDER BY CASE (+ (t1.c1))  WHEN (~ (t1.c1)) THEN t1.c1 ELSE (+ (t1.c0)) END ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((NOT (((((((((((t1.c2)AND(t1.c0)))AND(t1.c2)))OR(NULL)))AND(t1.c2)))OR(t1.c1))))) ORDER BY ((((((((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c2) IS FALSE))))OR(NULL)))OR(((t1.c1)<(t1.c2)))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE ((NOT (((((((((((t1.c2)AND(t1.c0)))AND(t1.c2)))OR(NULL)))AND(t1.c2)))OR(t1.c1))))) ORDER BY CASE (+ (t1.c1))  WHEN (~ (t1.c1)) THEN t1.c1 ELSE (+ (t1.c0)) END ASC  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((((((((((v0.c1)AND(v0.c0)))AND(vt0.c0)))AND(v0.c2)))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(v0.c2)))OR(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))AND((((x'8d'))==((v0.c1)))))) ORDER BY ((CAST(v0.c0 AS TEXT))OR((v0.c2 IN ())));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((((((((((((v0.c1)AND(v0.c0)))AND(vt0.c0)))AND(v0.c2)))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(v0.c2)))OR(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))AND((((x'8d'))=((v0.c1))))))AND(vt0.c0))) ORDER BY ((CAST(v0.c0 AS TEXT))OR((v0.c2 IN ()))) INTERSECT SELECT COUNT(*) FROM vt0, v0 WHERE (CASE vt0.c1  WHEN json_valid(vt0.c0) THEN TRIM(v0.c1) WHEN json_array_length(x'6c979c') THEN ((v0.c0) BETWEEN (v0.c1) AND (vt0.c0)) WHEN NULLIF(v0.c0, v0.c2) THEN ((((((vt0.c0)OR('}g+h')))OR(v0.c2)))AND(v0.c1)) WHEN ((v0.c0) IS TRUE) THEN (NOT (v0.c2)) END) ORDER BY ((CAST(v0.c0 AS TEXT))OR((v0.c2 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)+(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN x'9a612f' ELSE vt0.c0 END) AND ((vt0.c1 IN ())))) ORDER BY 0Xffffffffacd80a58  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)+(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN x'9a612f' ELSE vt0.c0 END) AND ((vt0.c1 IN ()))))AND(CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<=(((('qg')>=(vt0.c0)))))  NULLS FIRST, CAST(CAST(vt0.c0 AS REAL) AS REAL) ASC  NULLS FIRST;
SELECT ALL MIN(v0.c2) FROM v0 INNER JOIN vt0 ON vt0.c1 COLLATE NOCASE WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)))/(v0.c2 COLLATE NOCASE))) ORDER BY COALESCE(CAST(v0.c0 AS BLOB), ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)), CASE WHEN 'N|?R4ං' THEN v0.c2 END) DESC, ((((v0.c2)IS(v0.c0))) BETWEEN ((((v0.c1))<>((vt0.c1)))) AND ((v0.c1 IN (v0.c2)))) ASC, (((vt0.c0 IN ()))|(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))  NULLS LAST, NULL  NULLS FIRST;
SELECT ALL MIN(v0.c2) FROM v0 INNER JOIN vt0 ON vt0.c1 COLLATE NOCASE WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)))/(v0.c2 COLLATE NOCASE))) ORDER BY COALESCE(CAST(v0.c0 AS BLOB), ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)), CASE WHEN 'N|?R4ං' THEN v0.c2 END) DESC, ((((v0.c2)IS(v0.c0))) BETWEEN ((((v0.c1))<>((vt0.c1)))) AND ((v0.c1 IN (v0.c2)))) ASC, (((vt0.c0 IN ()))|(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))  NULLS LAST, NULL  NULLS FIRST INTERSECT SELECT MIN(v0.c2) FROM v0 INNER JOIN vt0 ON vt0.c1 COLLATE NOCASE WHERE (((('N|?R4ං' IN ())) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END) AND (((v0.c2) NOTNULL)))) ORDER BY COALESCE(CAST(v0.c0 AS BLOB), ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)), CASE WHEN 'N|?R4ං' THEN v0.c2 END) DESC, ((((v0.c2)IS(v0.c0))) BETWEEN ((((v0.c1))<>((vt0.c1)))) AND ((v0.c1 IN (v0.c2)))) ASC, (((vt0.c0 IN ()))|(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))  NULLS LAST, NULL  NULLS FIRST;
SELECT MIN(v0.c1) FROM v0 WHERE (ABS(x'5f')) ORDER BY CAST(v0.c0 AS INTEGER) COLLATE BINARY DESC, ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) COLLATE NOCASE ASC;
SELECT MIN(v0.c1) FROM v0 WHERE (ABS(x'5f')) ORDER BY CAST(0x7a56fc1 AS BLOB) ASC  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0, t1.c2, t1.c2))<=((t1.c0, NULL, t1.c2)))) IS TRUE)) ORDER BY (((((0.677347689806339)AND(0.37939170576943737)))AND(t1.c0)) IN ()) DESC, t1.c1 ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((((t1.c0, t1.c2, t1.c2))<=((t1.c0, NULL, t1.c2)))) IS TRUE))AND((- ((- (t1.c0))))))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (CAST(t1.c2 AS NUMERIC)) AND (((t1.c0) NOTNULL))), (((t1.c2) BETWEEN (t1.c2) AND (t1.c2)) IN ())  NULLS LAST, ((((((((t1.c2)OR(t1.c1)))AND(t1.c2)))AND('PR'))) NOT BETWEEN (((t1.c2) NOTNULL)) AND (((t1.c2)<(t1.c2))))  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((t1.c1 IN ())) BETWEEN (((t1.c2) IS TRUE)) AND (DATETIME(t1.c1, t1.c1, t1.c1)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (CAST(t1.c2 AS NUMERIC)) AND (((t1.c0) NOTNULL))), (((t1.c2) BETWEEN (t1.c2) AND (t1.c2)) IN ())  NULLS LAST, ((((((((t1.c2)OR(t1.c1)))AND(t1.c2)))AND('PR'))) NOT BETWEEN (((t1.c2) NOTNULL)) AND (((t1.c2)<(t1.c2))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c1)LIKE(t1.c1)))OR(COALESCE(DISTINCT t1.c2, t1.c1, t1.c0))));
SELECT ALL * FROM t1 WHERE (((((((t1.c1)LIKE(t1.c1)))OR(COALESCE(DISTINCT t1.c2, t1.c1, t1.c0))))AND((1.995388678E9 IN (t1.c0)) COLLATE BINARY))) LIMIT 1;
SELECT ALL * FROM t1 WHERE (((((t1.c1)LIKE(t1.c1)))OR(COALESCE(DISTINCT t1.c2, t1.c1, t1.c0))));
SELECT ALL * FROM t1 WHERE (((((((t1.c1)LIKE(t1.c1)))OR(COALESCE(DISTINCT t1.c2, t1.c1, t1.c0))))AND((1.995388678E9 IN (t1.c0)) COLLATE BINARY))) LIMIT 1;
SELECT ALL MIN(t1.c1) FROM v0, t1 WHERE (((v0.c2)>>(((t1.c1) BETWEEN (t1.c2) AND (t1.c0))))) ORDER BY x'fa'  NULLS FIRST, CASE WHEN UPPER(DISTINCT t1.c2) THEN NULL WHEN TIME(v0.c2, v0.c1, v0.c0) THEN ((t1.c0) ISNULL) END  NULLS LAST;
SELECT DISTINCT MIN(t1.c1) FROM v0, t1 WHERE (((((v0.c2)>>(((t1.c1) BETWEEN (t1.c2) AND (t1.c0)))))AND((((v0.c0, v0.c1, t1.c2)) NOT BETWEEN ((CASE t1.c2  WHEN t1.c0 THEN t1.c2 ELSE t1.c0 END, ((((((((((v0.c0)OR(v0.c2)))OR(v0.c1)))AND(v0.c0)))OR(t1.c2)))OR(v0.c2)), CAST(v0.c1 AS REAL))) AND ((t1.c1, ((t1.c1) IS TRUE), t1.c1 COLLATE RTRIM)))))) ORDER BY CASE ((((v0.c1)OR(v0.c2)))AND(t1.c2))  WHEN '1661887489' THEN t1.c1 COLLATE NOCASE END LIMIT 0x2;
SELECT * FROM t1, vt0 WHERE ((~ ((vt0.c0 IN ()))));
SELECT ALL * FROM t1, vt0 WHERE ((((~ ((vt0.c0 IN ()))))AND((CASE t1.c2  WHEN vt0.c0 THEN vt0.c1 WHEN t1.c1 THEN t1.c2 WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END IN (((vt0.c1) NOT BETWEEN (x'e42a') AND (vt0.c0)), t1.c1 COLLATE NOCASE))))) ORDER BY (((vt0.c0) NOT NULL) IN (((t1.c0)>=(vt0.c0))))  NULLS FIRST, (((+ (x'5a61')))>=(LIKELY(t1.c2))) DESC INTERSECT SELECT ALL * FROM t1, vt0 WHERE (CASE t1.c1  WHEN t1.c2 THEN 0.6080637593689103 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE BINARY) ORDER BY (((vt0.c0) NOT NULL) IN (((t1.c0)>=(vt0.c0))))  NULLS FIRST, (((+ (x'5a61')))>=(LIKELY(t1.c2))) DESC;
SELECT * FROM t1, vt0 WHERE ((~ ((vt0.c0 IN ()))));
SELECT ALL * FROM t1, vt0 WHERE ((((~ ((vt0.c0 IN ()))))AND((CASE t1.c2  WHEN vt0.c0 THEN vt0.c1 WHEN t1.c1 THEN t1.c2 WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END IN (((vt0.c1) NOT BETWEEN (x'e42a') AND (vt0.c0)), t1.c1 COLLATE NOCASE))))) ORDER BY (((vt0.c0) NOT NULL) IN (((t1.c0)>=(vt0.c0))))  NULLS FIRST, (((+ (x'5a61')))>=(LIKELY(t1.c2))) DESC INTERSECT SELECT ALL * FROM t1, vt0 WHERE (CASE t1.c1  WHEN t1.c2 THEN 0.6080637593689103 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE BINARY) ORDER BY (((vt0.c0) NOT NULL) IN (((t1.c0)>=(vt0.c0))))  NULLS FIRST, (((+ (x'5a61')))>=(LIKELY(t1.c2))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))<((vt0.c0))) THEN vt0.c0 COLLATE NOCASE WHEN NULL THEN ((vt0.c0) NOT NULL) END) ORDER BY vt0.c1 ASC  NULLS LAST, CAST((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, x'')) AND ((vt0.c1, vt0.c1, vt0.c1))) AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))<((vt0.c0))) THEN vt0.c0 COLLATE NOCASE WHEN NULL THEN ((vt0.c0) NOT NULL) END) ORDER BY vt0.c1 ASC  NULLS LAST, CAST((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, x'')) AND ((vt0.c1, vt0.c1, vt0.c1))) AS BLOB) ASC  NULLS LAST LIMIT 0;
SELECT ALL MIN(t1.c1) FROM vt0, t1 NATURAL JOIN v0 WHERE (CAST(v0.c1 AS REAL)) ORDER BY (- (CAST(t1.c1 AS TEXT)))  NULLS LAST, ((((t1.c0) IS FALSE)) IS FALSE);
SELECT DISTINCT MIN(t1.c1) FROM vt0, t1 NATURAL JOIN v0 WHERE (CAST(v0.c1 AS REAL)) ORDER BY CAST(CAST(v0.c2 AS NUMERIC) AS REAL) DESC  NULLS LAST INTERSECT SELECT DISTINCT MIN(t1.c1) FROM vt0, t1 NATURAL JOIN v0 WHERE (((((t1.c1)GLOB(vt0.c1)))IS NOT(LIKELIHOOD(t1.c1, NULL)))) ORDER BY CAST(CAST(v0.c2 AS NUMERIC) AS REAL) DESC  NULLS LAST;
SELECT MIN(vt0.c0) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT));
SELECT MIN(vt0.c0) FROM vt0 WHERE (((CAST((~ (vt0.c0)) AS TEXT))AND(LOWER(x'52defbd3'))));
SELECT COUNT(*) FROM vt0, t1 WHERE ((((((vt0.c0, vt0.c0))<=((vt0.c1, '4')))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((((((vt0.c0, vt0.c0))<=((vt0.c1, '4')))) IS TRUE))AND(CAST((t1.c0 IN ()) AS NUMERIC))));
SELECT ALL * FROM vt0, t1, v0 WHERE (((((v0.c2) BETWEEN (vt0.c0) AND (v0.c1))) ISNULL));
SELECT DISTINCT * FROM vt0, t1, v0 WHERE (((((((v0.c2) BETWEEN (vt0.c0) AND (v0.c1))) ISNULL))AND(((((((((v0.c1)OR(NULL)))OR(vt0.c1)))OR(x'60')))/(x'4782'))))) ORDER BY (((+ (t1.c1)))>((t1.c1 IN (v0.c2)))) ASC LIMIT 0;
SELECT ALL * FROM vt0, t1, v0 WHERE (((((v0.c2) BETWEEN (vt0.c0) AND (v0.c1))) ISNULL));
SELECT DISTINCT * FROM vt0, t1, v0 WHERE (((((((v0.c2) BETWEEN (vt0.c0) AND (v0.c1))) ISNULL))AND(((((((((v0.c1)OR(NULL)))OR(vt0.c1)))OR(x'60')))/(x'4782'))))) ORDER BY (((+ (t1.c1)))>((t1.c1 IN (v0.c2)))) ASC LIMIT 0;
SELECT ALL MIN(t1.c0) FROM t1, v0 WHERE (TYPEOF(DISTINCT CAST(v0.c2 AS BLOB))) ORDER BY ((((t1.c0) IS FALSE)) NOT BETWEEN ('1147263217' COLLATE NOCASE) AND (t1.c0 COLLATE BINARY)) ASC;
SELECT DISTINCT MIN(t1.c0) FROM t1, v0 WHERE (TYPEOF(DISTINCT CAST(v0.c2 AS BLOB))) ORDER BY ((((t1.c0) IS FALSE)) NOT BETWEEN ('1147263217' COLLATE NOCASE) AND (t1.c0 COLLATE BINARY)) ASC;
SELECT ALL MIN(v0.c0) FROM v0 WHERE (CAST(((((v0.c1)AND(v0.c0)))OR(v0.c1)) AS INTEGER));
SELECT DISTINCT MIN(v0.c0) FROM v0 WHERE (((CAST(((((v0.c1)AND(v0.c0)))OR(v0.c1)) AS INTEGER))AND(CAST(NULLIF(DISTINCT v0.c0, v0.c2) AS NUMERIC)))) ORDER BY ((v0.c1)OR(x'84')) COLLATE RTRIM  NULLS FIRST, (NOT ('l\YslN\ny')), ((v0.c2)+(((v0.c0)*(v0.c0))))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(v0.c0) FROM v0 WHERE ((- ((NOT (v0.c1))))) ORDER BY ((v0.c1)OR(x'84')) COLLATE RTRIM  NULLS FIRST, (NOT ('l\YslN\ny')), ((v0.c2)+(((v0.c0)*(v0.c0))))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1, v0, vt0 WHERE ((((NOT (v0.c2)))AND(((v0.c1)GLOB(v0.c0)))));
SELECT ALL * FROM t1, v0, vt0 WHERE ((((NOT (v0.c2)))AND(((v0.c1)GLOB(v0.c0)))));
SELECT ALL * FROM t1, v0, vt0 WHERE ((((NOT (v0.c2)))AND(((v0.c1)GLOB(v0.c0)))));
SELECT ALL * FROM t1, v0, vt0 WHERE ((((NOT (v0.c2)))AND(((v0.c1)GLOB(v0.c0)))));
SELECT MIN(t1.c0) FROM t1 NATURAL JOIN v0 WHERE ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2))))<>(((((t1.c1, v0.c1))<=((v0.c0, t1.c1))))))) ORDER BY 0.37939170576943737  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 NATURAL JOIN v0 WHERE ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2))))>(((((t1.c1, v0.c1))==((v0.c0, t1.c1))))))) ORDER BY ((((~ (t1.c0)), (t1.c0 IN (v0.c1, t1.c0))))<((((((((((v0.c1)AND(v0.c1)))AND(t1.c1)))AND(t1.c0)))AND(t1.c2)), t1.c1 COLLATE NOCASE)))  NULLS FIRST LIMIT 2;
SELECT * FROM v0 WHERE (CASE ((v0.c2)||(0.5146461067045068))  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN (v0.c2)) WHEN ((135398466) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN CAST(v0.c0 AS REAL) ELSE (((v0.c0, v0.c2)) NOT BETWEEN ((v0.c2, v0.c1)) AND (('0.677347689806339', v0.c0))) END) ORDER BY (- (NULL));
SELECT DISTINCT * FROM v0 WHERE (((CASE ((v0.c2)||(0.5146461067045068))  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN (v0.c2)) WHEN ((0X8120442) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN CAST(v0.c0 AS REAL) ELSE (((v0.c0, v0.c2)) NOT BETWEEN ((v0.c2, v0.c1)) AND (('0.677347689806339', v0.c0))) END)AND(CAST((v0.c0 IN (v0.c0)) AS NUMERIC)))) ORDER BY (- (NULL));
SELECT * FROM v0 WHERE (CASE ((v0.c2)||(0.5146461067045068))  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN (v0.c2)) WHEN ((135398466) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN CAST(v0.c0 AS REAL) ELSE (((v0.c0, v0.c2)) NOT BETWEEN ((v0.c2, v0.c1)) AND (('0.677347689806339', v0.c0))) END) ORDER BY (- (NULL));
SELECT DISTINCT * FROM v0 WHERE (((CASE ((v0.c2)||(0.5146461067045068))  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN (v0.c2)) WHEN ((0X8120442) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN CAST(v0.c0 AS REAL) ELSE (((v0.c0, v0.c2)) NOT BETWEEN ((v0.c2, v0.c1)) AND (('0.677347689806339', v0.c0))) END)AND(CAST((v0.c0 IN (v0.c0)) AS NUMERIC)))) ORDER BY (- (NULL));
SELECT * FROM vt0, v0, t1 WHERE ((CASE vt0.c1  WHEN v0.c1 THEN t1.c2 ELSE v0.c0 END IN (((v0.c2)AND(vt0.c0)), 'Z㜆'))) ORDER BY ((((t1.c0)>(v0.c2)))-(((vt0.c0)AND(t1.c0)))) DESC, '1040163858' ASC;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((CASE vt0.c1  WHEN v0.c1 THEN t1.c2 ELSE v0.c0 END IN (((v0.c2)AND(vt0.c0))))) ORDER BY CASE ((((((((x'37')AND(v0.c1)))OR(t1.c1)))OR(v0.c1)))OR(v0.c1))  WHEN ((t1.c0)-(t1.c2)) THEN load_extension(v0.c0) ELSE ((((((((v0.c2)AND(v0.c0)))OR(vt0.c0)))AND(v0.c1)))OR(v0.c1)) END DESC;
SELECT * FROM vt0, v0, t1 WHERE ((CASE vt0.c1  WHEN v0.c1 THEN t1.c2 ELSE v0.c0 END IN (((v0.c2)AND(vt0.c0)), 'Z㜆'))) ORDER BY ((((t1.c0)>(v0.c2)))-(((vt0.c0)AND(t1.c0)))) DESC, '1040163858' ASC;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((CASE vt0.c1  WHEN v0.c1 THEN t1.c2 ELSE v0.c0 END IN (((v0.c2)AND(vt0.c0))))) ORDER BY CASE ((((((((x'37')AND(v0.c1)))OR(t1.c1)))OR(v0.c1)))OR(v0.c1))  WHEN ((t1.c0)-(t1.c2)) THEN load_extension(v0.c0) ELSE ((((((((v0.c2)AND(v0.c0)))OR(vt0.c0)))AND(v0.c1)))OR(v0.c1)) END DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((MIN(vt0.c0, vt0.c1)))>=(((NOT (vt0.c1)))))) ORDER BY 'f'  NULLS LAST, vt0.c1 DESC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) COLLATE RTRIM ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((MIN(vt0.c0, vt0.c1)))>=(((NOT (vt0.c1)))))) ORDER BY 'f'  NULLS LAST, vt0.c1 DESC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) COLLATE RTRIM ASC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((((((vt0.c1 IN (vt0.c0, 1250186722)))OR(vt0.c1 COLLATE NOCASE)))AND(((vt0.c1)=(vt0.c1)))))AND(vt0.c1 COLLATE BINARY))) ORDER BY 'f'  NULLS LAST, vt0.c1 DESC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM vt0, t1, v0 WHERE ((((((((((- (vt0.c1)))AND(CAST(vt0.c1 AS TEXT))))OR(((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))AND(v0.c1)))OR(vt0.c0)))))OR((NOT (-1.083689078E9)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((((((((((((- (vt0.c1)))AND(CAST(vt0.c1 AS TEXT))))OR(((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))AND(v0.c1)))OR(vt0.c0)))))OR((NOT (-1.083689078E9)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND((((t1.c2 IN ()))>=(((t1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) INTERSECT SELECT DISTINCT * FROM vt0, t1, v0 WHERE (((t1.c2 COLLATE RTRIM)-(COALESCE(DISTINCT t1.c0, t1.c2))));
SELECT * FROM vt0, t1, v0 WHERE ((((((((((- (vt0.c1)))AND(CAST(vt0.c1 AS TEXT))))OR(((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))AND(v0.c1)))OR(vt0.c0)))))OR((NOT (-1.083689078E9)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((((((((((((- (vt0.c1)))AND(CAST(vt0.c1 AS TEXT))))OR(((((((((((t1.c0)AND(t1.c1)))OR(t1.c0)))OR(t1.c0)))AND(v0.c1)))OR(vt0.c0)))))OR((NOT (-1.083689078E9)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND((((t1.c2 IN ()))>=(((t1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) INTERSECT SELECT DISTINCT * FROM vt0, t1, v0 WHERE (((t1.c2 COLLATE RTRIM)-(COALESCE(DISTINCT t1.c0, t1.c2))));
SELECT ALL MAX(v0.c0) FROM vt0, t1, v0 WHERE ('0.14103367742007866') ORDER BY ((x'')>((v0.c0 IN (v0.c2, v0.c0, v0.c0))));
SELECT DISTINCT MAX(v0.c0) FROM vt0, t1, v0 WHERE ('0.14103367742007866') ORDER BY ((x'')>((v0.c0 IN (v0.c2, v0.c0, v0.c0))));
SELECT ALL * FROM vt0, v0, t1 WHERE (t1.c2 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE);
SELECT * FROM vt0, v0, t1 WHERE (((t1.c2 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE)AND(v0.c0)));
SELECT ALL * FROM vt0, v0, t1 WHERE (t1.c2 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE);
SELECT * FROM vt0, v0, t1 WHERE (((t1.c2 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE)AND(v0.c0)));
SELECT ALL MAX(vt0.c1) FROM v0, t1, vt0 WHERE (TRIM(v0.c0 COLLATE NOCASE, (('X(tN!')&(x'ff'))));
SELECT ALL MAX(vt0.c1) FROM v0, t1, vt0 WHERE (((TRIM(v0.c0 COLLATE NOCASE, (('X(tN!')&(x'ff'))))AND(((((v0.c0) BETWEEN (v0.c1) AND (t1.c0)))AND(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN t1.c1 WHEN vt0.c0 THEN t1.c2 WHEN v0.c0 THEN 'GVHu9O	3' ELSE t1.c1 END))))) LIMIT 0x0 INTERSECT SELECT ALL MAX(vt0.c1) FROM v0, t1, vt0 WHERE (CASE WHEN (('<濁뼉紕^') NOT NULL) THEN (((v0.c1, t1.c2)) BETWEEN ((v0.c0, v0.c0)) AND ((t1.c1, vt0.c1))) WHEN x'' THEN CASE v0.c1  WHEN v0.c1 THEN t1.c2 WHEN 0.05022199038651931 THEN t1.c0 WHEN 0.299182091808748 THEN vt0.c0 ELSE t1.c2 END ELSE (NOT (t1.c1)) END) LIMIT 0;
SELECT ALL * FROM t1, v0, vt0 WHERE (((((((v0.c0)<=(v0.c0)))OR((((v0.c1, v0.c0)) NOT BETWEEN ((t1.c2, t1.c2)) AND ((t1.c2, vt0.c0))))))OR(((((((t1.c0)OR(v0.c0)))AND(t1.c1)))AND(v0.c0)))));
SELECT * FROM t1, v0, vt0 WHERE (((((((((v0.c0)<=(v0.c0)))OR((((v0.c1, v0.c0)) NOT BETWEEN ((t1.c2, t1.c2)) AND ((t1.c2, vt0.c0))))))OR(((((((t1.c0)OR(v0.c0)))AND(t1.c1)))AND(v0.c0)))))AND(t1.c2))) LIMIT 0 INTERSECT SELECT * FROM t1, v0, vt0 WHERE ((~ (v0.c0 COLLATE RTRIM))) LIMIT 0;
SELECT ALL * FROM t1, v0, vt0 WHERE (((((((v0.c0)<=(v0.c0)))OR((((v0.c1, v0.c0)) NOT BETWEEN ((t1.c2, t1.c2)) AND ((t1.c2, vt0.c0))))))OR(((((((t1.c0)OR(v0.c0)))AND(t1.c1)))AND(v0.c0)))));
SELECT * FROM t1, v0, vt0 WHERE (((((((((v0.c0)<=(v0.c0)))OR((((v0.c1, v0.c0)) NOT BETWEEN ((t1.c2, t1.c2)) AND ((t1.c2, vt0.c0))))))OR(((((((t1.c0)OR(v0.c0)))AND(t1.c1)))AND(v0.c0)))))AND(t1.c2))) LIMIT 0 INTERSECT SELECT * FROM t1, v0, vt0 WHERE ((~ (v0.c0 COLLATE RTRIM))) LIMIT 0;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) IS TRUE)) ORDER BY (((((vt0.c0)==(vt0.c0)), CAST(vt0.c1 AS TEXT), TRIM(vt0.c1, vt0.c0)))==(((((vt0.c0, vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c0, vt0.c1, vt0.c0))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) DESC  NULLS FIRST, (~ (NULL)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE) IS TRUE))AND(((vt0.c0 COLLATE RTRIM)<(((vt0.c0)AND(vt0.c0))))))) ORDER BY (((((vt0.c0)==(vt0.c0)), CAST(vt0.c1 AS TEXT), TRIM(vt0.c1, vt0.c0)))==(((((vt0.c0, vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c0, vt0.c1, vt0.c0))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) DESC  NULLS FIRST, (~ (NULL)) ASC  NULLS LAST INTERSECT SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) IS FALSE))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(vt0.c0))) ORDER BY (((((vt0.c0)=(vt0.c0)), CAST(vt0.c1 AS TEXT), TRIM(vt0.c1, vt0.c0)))=(((((vt0.c0, vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c0, vt0.c1, vt0.c0))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) DESC  NULLS FIRST, (~ (NULL)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) IS TRUE)) ORDER BY (((((vt0.c0)==(vt0.c0)), CAST(vt0.c1 AS TEXT), TRIM(vt0.c1, vt0.c0)))==(((((vt0.c0, vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c0, vt0.c1, vt0.c0))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) DESC  NULLS FIRST, (~ (NULL)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE) IS TRUE))AND(((vt0.c0 COLLATE RTRIM)<(((vt0.c0)AND(vt0.c0))))))) ORDER BY (((((vt0.c0)==(vt0.c0)), CAST(vt0.c1 AS TEXT), TRIM(vt0.c1, vt0.c0)))==(((((vt0.c0, vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c0, vt0.c1, vt0.c0))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) DESC  NULLS FIRST, (~ (NULL)) ASC  NULLS LAST INTERSECT SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) IS FALSE))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(vt0.c0))) ORDER BY (((((vt0.c0)=(vt0.c0)), CAST(vt0.c1 AS TEXT), TRIM(vt0.c1, vt0.c0)))=(((((vt0.c0, vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c0, vt0.c1, vt0.c0))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) DESC  NULLS FIRST, (~ (NULL)) ASC  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1, vt0, v0 WHERE (LIKE(((v0.c2)>>(v0.c1)), ABS(t1.c2), '4'));
SELECT ALL MIN(t1.c1) FROM t1, vt0, v0 WHERE (LIKE(((v0.c2)>>(v0.c1)), ABS(t1.c2), '4')) LIMIT 0X1 INTERSECT SELECT MIN(t1.c1) FROM t1, vt0, v0 WHERE ((+ (((vt0.c0) NOT BETWEEN (v0.c1) AND (t1.c2))))) LIMIT 1;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE RTRIM);
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY CAST((NOT (vt0.c0)) AS TEXT) LIMIT 0;
SELECT ALL MIN(v0.c1) FROM v0 CROSS JOIN t1 ON CASE 0.4009677301748732  WHEN v0.c1 THEN t1.c0 END COLLATE BINARY WHERE (CAST(((t1.c0)LIKE(v0.c1)) AS TEXT)) ORDER BY (- ((NOT (NULL))))  NULLS LAST, ((t1.c2) IS TRUE);
SELECT ALL MIN(v0.c1) FROM v0 CROSS JOIN t1 ON CASE 0.4009677301748732  WHEN v0.c1 THEN t1.c0 END COLLATE BINARY WHERE (((CAST(((t1.c0)LIKE(v0.c1)) AS TEXT))AND(NULL))) ORDER BY HEX(DISTINCT ((t1.c0) IS TRUE)) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL MIN(v0.c1) FROM v0 CROSS JOIN t1 ON CASE 0.4009677301748732  WHEN v0.c1 THEN t1.c0 END COLLATE BINARY WHERE (CAST((v0.c0 IN (0.5939194056089225)) AS TEXT)) ORDER BY HEX(DISTINCT ((t1.c0) IS TRUE)) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM v0 WHERE ((- ((~ (v0.c2)))));
SELECT DISTINCT * FROM v0 WHERE ((- ((~ (v0.c2))))) LIMIT 0x1;
SELECT ALL * FROM v0 WHERE ((- ((~ (v0.c2)))));
SELECT DISTINCT * FROM v0 WHERE ((- ((~ (v0.c2))))) LIMIT 0x1;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON (((t1.c1 IN (vt0.c0, v0.c2))) BETWEEN (CASE v0.c0  WHEN t1.c1 THEN v0.c2 WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN t1.c2 ELSE v0.c0 END) AND ((+ (vt0.c1)))) INNER JOIN vt0 ON (((NOT (v0.c0))) BETWEEN (v0.c2 COLLATE BINARY) AND (t1.c2)) WHERE (((((((((v0.c0)AND(CAST(v0.c1 AS INTEGER))))OR(CAST(v0.c0 AS NUMERIC))))OR(CASE 1200319629  WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 END)))AND((- (t1.c2))))) ORDER BY 0.9594471581869118 ASC  NULLS LAST, (((vt0.c0)OR(vt0.c0)) IN ())  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON (((t1.c1 IN (vt0.c0, v0.c2))) BETWEEN (CASE v0.c0  WHEN t1.c1 THEN v0.c2 WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN t1.c2 ELSE v0.c0 END) AND ((+ (vt0.c1)))) INNER JOIN vt0 ON (((NOT (v0.c0))) BETWEEN (v0.c2 COLLATE BINARY) AND (t1.c2)) WHERE (((((((((v0.c0)AND(CAST(v0.c1 AS INTEGER))))OR(CAST(v0.c0 AS NUMERIC))))OR(CASE 1200319629  WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 END)))AND((- (t1.c2))))) ORDER BY ((((((CAST(v0.c1 AS INTEGER))OR(x'' COLLATE BINARY)))AND(x'ee')))OR((((0.18148599789884967, vt0.c0))>=((x'9adef2', vt0.c1)))))  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (((v0.c0)AND(v0.c0))))  NULLS FIRST, CASE WHEN ((v0.c2)<<(vt0.c0)) THEN vt0.c0 END ASC LIMIT 3;
SELECT ALL MIN(vt0.c0) FROM vt0 NATURAL JOIN t1 WHERE (((vt0.c1 COLLATE NOCASE) IS TRUE));
SELECT MIN(vt0.c0) FROM vt0 NATURAL JOIN t1 WHERE (((vt0.c1 COLLATE NOCASE) IS TRUE)) INTERSECT SELECT MIN(vt0.c0) FROM vt0 NATURAL JOIN t1 WHERE ((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c2 END))>=((((t1.c2) NOTNULL)))));
SELECT ALL MIN(v0.c2) FROM v0 WHERE ('') ORDER BY (CAST(v0.c2 AS BLOB) IN (x'ee8724c847')) ASC, ((('%QUg>')) BETWEEN ((CAST(v0.c1 AS BLOB))) AND ((((v0.c0) BETWEEN (v0.c1) AND (v0.c0))))) DESC  NULLS FIRST, CAST(HEX(v0.c0) AS INTEGER)  NULLS LAST;
SELECT ALL MIN(v0.c2) FROM v0 WHERE ('') ORDER BY CASE WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c2)LIKE(v0.c0)) WHEN ((v0.c2)>=(v0.c0)) THEN ((((((v0.c1)AND(v0.c2)))OR(v0.c0)))OR(v0.c0)) ELSE (NOT ('}g+h')) END  NULLS FIRST, (((((v0.c0, v0.c1, v0.c2))>=((v0.c0, 0.5146461067045068, v0.c0)))) NOT BETWEEN (((v0.c2)+(v0.c1))) AND ((- (v0.c0)))) DESC, ((CAST('n5Y3' AS TEXT))+(CASE WHEN v0.c2 THEN x'7ba763' END)) LIMIT 0X0 INTERSECT SELECT MIN(v0.c2) FROM v0 WHERE ((((v0.c2 IN (v0.c2))) NOTNULL)) ORDER BY CASE WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c2)LIKE(v0.c0)) WHEN ((v0.c2)>=(v0.c0)) THEN ((((((v0.c1)AND(v0.c2)))OR(v0.c0)))OR(v0.c0)) ELSE (NOT ('}g+h')) END  NULLS FIRST, (((((v0.c0, v0.c1, v0.c2))>=((v0.c0, 0.5146461067045068, v0.c0)))) NOT BETWEEN (((v0.c2)+(v0.c1))) AND ((- (v0.c0)))) DESC, ((CAST('n5Y3' AS TEXT))+(CASE WHEN v0.c2 THEN x'7ba763' END)) LIMIT 0;
SELECT MIN(vt0.c0) FROM vt0, v0 WHERE (((v0.c1) BETWEEN (x'b5' COLLATE BINARY) AND (((vt0.c0) NOT BETWEEN (v0.c0) AND ('1328373436')))));
SELECT DISTINCT MIN(vt0.c0) FROM vt0, v0 WHERE (((v0.c1) BETWEEN (x'b5' COLLATE BINARY) AND (((vt0.c0) NOT BETWEEN (v0.c0) AND ('1328373436'))))) LIMIT 2;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY (((((v0.c0, v0.c1)) NOT BETWEEN ((v0.c2, v0.c2)) AND ((v0.c2, v0.c2))))<=(((v0.c1)IS(0.05715855482887422))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2)AND(CASE WHEN (- (v0.c0)) THEN '-1650154887' WHEN x'b24c' THEN (v0.c1 IN (v0.c1)) END))) ORDER BY (((((v0.c0, v0.c1)) NOT BETWEEN ((v0.c2, v0.c2)) AND ((v0.c2, v0.c2))))<=(((v0.c1)IS(0.05715855482887422))))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 WHERE (DATE(CAST(vt0.c1 AS BLOB), ((vt0.c1)/(vt0.c1)), ((vt0.c0)==(vt0.c1)), CAST(vt0.c0 AS INTEGER), vt0.c1));
SELECT ALL * FROM vt0 NOT INDEXED WHERE (DATE(CAST(vt0.c1 AS BLOB), ((vt0.c1)/(vt0.c1)), ((vt0.c0)=(vt0.c1)), CAST(vt0.c0 AS INTEGER), vt0.c1)) ORDER BY vt0.c0 ASC LIMIT 0;
SELECT ALL * FROM vt0 WHERE (DATE(CAST(vt0.c1 AS BLOB), ((vt0.c1)/(vt0.c1)), ((vt0.c0)==(vt0.c1)), CAST(vt0.c0 AS INTEGER), vt0.c1));
SELECT ALL * FROM vt0 NOT INDEXED WHERE (DATE(CAST(vt0.c1 AS BLOB), ((vt0.c1)/(vt0.c1)), ((vt0.c0)=(vt0.c1)), CAST(vt0.c0 AS INTEGER), vt0.c1)) ORDER BY vt0.c0 ASC LIMIT 0;
SELECT ALL * FROM v0 WHERE (CASE WHEN (('G*GC')<>(v0.c0)) THEN (v0.c0 IN (v0.c1)) END);
SELECT ALL * FROM v0 WHERE (CASE WHEN (('G*GC')!=(v0.c0)) THEN (v0.c0 IN (v0.c1)) END) ORDER BY ((((v0.c2)IS(NULL))) BETWEEN (v0.c1) AND (UPPER(v0.c1))), 1.661887489E9 ASC  NULLS LAST, ((((((((((('腄*H' IN (v0.c1)))OR(((((x'')AND(v0.c2)))AND(v0.c1)))))OR(v0.c2)))OR(v0.c1)))OR((+ (v0.c1)))))AND(((v0.c2)<=(v0.c2)))) LIMIT 1;
SELECT ALL * FROM v0 WHERE (CASE WHEN (('G*GC')<>(v0.c0)) THEN (v0.c0 IN (v0.c1)) END);
SELECT ALL * FROM v0 WHERE (CASE WHEN (('G*GC')!=(v0.c0)) THEN (v0.c0 IN (v0.c1)) END) ORDER BY ((((v0.c2)IS(NULL))) BETWEEN (v0.c1) AND (UPPER(v0.c1))), 1.661887489E9 ASC  NULLS LAST, ((((((((((('腄*H' IN (v0.c1)))OR(((((x'')AND(v0.c2)))AND(v0.c1)))))OR(v0.c2)))OR(v0.c1)))OR((+ (v0.c1)))))AND(((v0.c2)<=(v0.c2)))) LIMIT 1;
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON ((vt0.c1)||(((t1.c0) IS FALSE))) WHERE (((TRIM(t1.c1))>=(CAST(t1.c0 AS INTEGER)))) ORDER BY CAST(t1.c1 AS REAL), CAST(((t1.c1) NOT BETWEEN (t1.c2) AND (vt0.c1)) AS NUMERIC) ASC  NULLS FIRST, (((vt0.c0) NOT NULL) IN (((t1.c2) IS FALSE))) ASC  NULLS LAST, (((t1.c2, t1.c0)) BETWEEN ((t1.c0, vt0.c0)) AND ((x'', vt0.c0))) COLLATE RTRIM DESC;
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON ((vt0.c1)||(((t1.c0) IS FALSE))) WHERE (((TRIM(t1.c1))==(CAST(t1.c0 AS INTEGER)))) ORDER BY CAST(t1.c1 AS REAL), CAST(((t1.c1) NOT BETWEEN (t1.c2) AND (vt0.c1)) AS NUMERIC) ASC  NULLS FIRST, (((vt0.c0) NOT NULL) IN (((t1.c2) IS FALSE))) ASC  NULLS LAST, (((t1.c2, t1.c0)) BETWEEN ((t1.c0, vt0.c0)) AND ((x'', vt0.c0))) COLLATE RTRIM DESC;
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON ((vt0.c1)||(((t1.c0) IS FALSE))) WHERE (((TRIM(t1.c1))>=(CAST(t1.c0 AS INTEGER)))) ORDER BY CAST(t1.c1 AS REAL), CAST(((t1.c1) NOT BETWEEN (t1.c2) AND (vt0.c1)) AS NUMERIC) ASC  NULLS FIRST, (((vt0.c0) NOT NULL) IN (((t1.c2) IS FALSE))) ASC  NULLS LAST, (((t1.c2, t1.c0)) BETWEEN ((t1.c0, vt0.c0)) AND ((x'', vt0.c0))) COLLATE RTRIM DESC;
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON ((vt0.c1)||(((t1.c0) IS FALSE))) WHERE (((TRIM(t1.c1))==(CAST(t1.c0 AS INTEGER)))) ORDER BY CAST(t1.c1 AS REAL), CAST(((t1.c1) NOT BETWEEN (t1.c2) AND (vt0.c1)) AS NUMERIC) ASC  NULLS FIRST, (((vt0.c0) NOT NULL) IN (((t1.c2) IS FALSE))) ASC  NULLS LAST, (((t1.c2, t1.c0)) BETWEEN ((t1.c0, vt0.c0)) AND ((x'', vt0.c0))) COLLATE RTRIM DESC;
SELECT * FROM v0 WHERE ((((0.29809173476160566)&(v0.c1)) IN (CAST(v0.c2 AS REAL)))) ORDER BY CHAR(v0.c0) COLLATE NOCASE ASC  NULLS LAST, IFNULL((v0.c0 IN (v0.c0, v0.c2)), ((((v0.c1)OR(v0.c0)))OR(v0.c2)));
SELECT * FROM v0 WHERE ((((0.29809173476160566)&(v0.c1)) IN (CAST(v0.c2 AS REAL)))) ORDER BY v0.c2 COLLATE BINARY  NULLS LAST, ((((v0.c0) IS FALSE)) BETWEEN (((v0.c1)+(v0.c2))) AND (0.5882058172208857)) ASC  NULLS LAST, (((v0.c2) IS TRUE) IN (((((((v0.c0)OR(v0.c2)))OR(v0.c0)))OR(v0.c1))))  NULLS FIRST LIMIT 1;
SELECT * FROM v0 WHERE ((((0.29809173476160566)&(v0.c1)) IN (CAST(v0.c2 AS REAL)))) ORDER BY CHAR(v0.c0) COLLATE NOCASE ASC  NULLS LAST, IFNULL((v0.c0 IN (v0.c0, v0.c2)), ((((v0.c1)OR(v0.c0)))OR(v0.c2)));
SELECT * FROM v0 WHERE ((((0.29809173476160566)&(v0.c1)) IN (CAST(v0.c2 AS REAL)))) ORDER BY v0.c2 COLLATE BINARY  NULLS LAST, ((((v0.c0) IS FALSE)) BETWEEN (((v0.c1)+(v0.c2))) AND (0.5882058172208857)) ASC  NULLS LAST, (((v0.c2) IS TRUE) IN (((((((v0.c0)OR(v0.c2)))OR(v0.c0)))OR(v0.c1))))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1, v0 WHERE (((CASE WHEN t1.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END)|(t1.c1 COLLATE RTRIM)));
SELECT * FROM t1, v0 WHERE (((CASE WHEN t1.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END)|(t1.c1 COLLATE RTRIM))) INTERSECT SELECT * FROM t1, v0 WHERE (NULL);
SELECT ALL * FROM t1, v0 WHERE (((CASE WHEN t1.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END)|(t1.c1 COLLATE RTRIM)));
SELECT * FROM t1, v0 WHERE (((CASE WHEN t1.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END)|(t1.c1 COLLATE RTRIM))) INTERSECT SELECT * FROM t1, v0 WHERE (NULL);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c1) NOTNULL) THEN vt0.c1 COLLATE NOCASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN json_patch(vt0.c0, vt0.c1) THEN (vt0.c1 IN (vt0.c1)) END);
SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c1  WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c1) NOTNULL) THEN vt0.c1 COLLATE NOCASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN json_patch(vt0.c0, vt0.c1) THEN (vt0.c1 IN (vt0.c1)) END)AND(vt0.c1)));
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c1) NOTNULL) THEN vt0.c1 COLLATE NOCASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN json_patch(vt0.c0, vt0.c1) THEN (vt0.c1 IN (vt0.c1)) END);
SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c1  WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c1) NOTNULL) THEN vt0.c1 COLLATE NOCASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN json_patch(vt0.c0, vt0.c1) THEN (vt0.c1 IN (vt0.c1)) END)AND(vt0.c1)));
SELECT ALL MAX(vt0.c1) FROM t1, vt0, v0 WHERE (TYPEOF(DISTINCT ((v0.c0) NOT BETWEEN (t1.c1) AND (v0.c2))));
SELECT MAX(vt0.c1) FROM t1, vt0, v0 WHERE (TYPEOF(DISTINCT ((v0.c0) NOT BETWEEN (t1.c1) AND (v0.c2)))) ORDER BY ((((v0.c2) NOT BETWEEN (t1.c2) AND (v0.c0)))LIKE(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, ((0.6831539244855179 IN ()) IN ())  NULLS LAST INTERSECT SELECT MAX(vt0.c1) FROM t1, vt0, v0 WHERE (((((NOT (v0.c2)), CASE WHEN v0.c2 THEN vt0.c1 END, 0.5623369063823449, (((vt0.c1))<=((0.9417323762917162))), ((vt0.c1) BETWEEN (v0.c2) AND (t1.c1))))<((((t1.c2)>=(t1.c2)), ((((v0.c0)OR(t1.c0)))OR(v0.c2)), x'bd', HEX(v0.c0), 0.13518372379117283)))) ORDER BY ((((v0.c2) NOT BETWEEN (t1.c2) AND (v0.c0)))LIKE(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, ((0.6831539244855179 IN ()) IN ())  NULLS LAST;
SELECT ALL * FROM vt0, t1, v0 WHERE (((((t1.c2)LIKE(v0.c0)))<(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0, t1, v0 WHERE (((((t1.c2)LIKE(v0.c0)))<(CAST(vt0.c0 AS REAL)))) ORDER BY ((IFNULL(t1.c2, t1.c2)) NOT BETWEEN (((vt0.c0)LIKE(t1.c0))) AND (((((((((((vt0.c0)OR(t1.c0)))AND(v0.c2)))AND(v0.c0)))OR(NULL)))AND(v0.c1))))  NULLS LAST, CAST((t1.c1 IN ('0.9369942315316403')) AS NUMERIC) DESC, (((v0.c2 IN (vt0.c1)))>>(v0.c0));
SELECT ALL * FROM vt0, t1, v0 WHERE (((((t1.c2)LIKE(v0.c0)))<(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0, t1, v0 WHERE (((((t1.c2)LIKE(v0.c0)))<(CAST(vt0.c0 AS REAL)))) ORDER BY ((IFNULL(t1.c2, t1.c2)) NOT BETWEEN (((vt0.c0)LIKE(t1.c0))) AND (((((((((((vt0.c0)OR(t1.c0)))AND(v0.c2)))AND(v0.c0)))OR(NULL)))AND(v0.c1))))  NULLS LAST, CAST((t1.c1 IN ('0.9369942315316403')) AS NUMERIC) DESC, (((v0.c2 IN (vt0.c1)))>>(v0.c0));
SELECT * FROM v0 CROSS JOIN vt0 ON HEX(DISTINCT (((vt0.c0))<((v0.c2)))) LEFT OUTER JOIN t1 ON LIKELY(t1.c2) COLLATE RTRIM WHERE (RTRIM(v0.c0));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON HEX(DISTINCT (((vt0.c0))<((v0.c2)))) LEFT OUTER JOIN t1 ON LIKELY(t1.c2) COLLATE RTRIM WHERE (((RTRIM(v0.c0))AND((~ (load_extension(t1.c1, v0.c1)))))) LIMIT 0;
SELECT * FROM v0 CROSS JOIN vt0 ON HEX(DISTINCT (((vt0.c0))<((v0.c2)))) LEFT OUTER JOIN t1 ON LIKELY(t1.c2) COLLATE RTRIM WHERE (RTRIM(v0.c0));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON HEX(DISTINCT (((vt0.c0))<((v0.c2)))) LEFT OUTER JOIN t1 ON LIKELY(t1.c2) COLLATE RTRIM WHERE (((RTRIM(v0.c0))AND((~ (load_extension(t1.c1, v0.c1)))))) LIMIT 0;
SELECT * FROM v0, vt0, t1 WHERE (CAST(((((v0.c1)OR(t1.c1)))AND(t1.c1)) AS NUMERIC));
SELECT * FROM v0, vt0, t1 WHERE (((CAST(((((v0.c1)OR(t1.c1)))AND(t1.c1)) AS NUMERIC))AND(v0.c2)));
SELECT * FROM v0, vt0, t1 WHERE (CAST(((((v0.c1)OR(t1.c1)))AND(t1.c1)) AS NUMERIC));
SELECT * FROM v0, vt0, t1 WHERE (((CAST(((((v0.c1)OR(t1.c1)))AND(t1.c1)) AS NUMERIC))AND(v0.c2)));
SELECT ALL * FROM v0, t1 WHERE (x'9cf161db');
SELECT * FROM v0, t1 WHERE (((x'9cf161db')AND(((0.587922248410826)AND(((('')) NOT BETWEEN ((NULL)) AND ((v0.c2)))))))) ORDER BY ((CAST(v0.c2 AS INTEGER))!=(((((v0.c2)OR(t1.c2)))AND(v0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM v0, t1 WHERE (x'9cf161db');
SELECT * FROM v0, t1 WHERE (((x'9cf161db')AND(((0.587922248410826)AND(((('')) NOT BETWEEN ((NULL)) AND ((v0.c2)))))))) ORDER BY ((CAST(v0.c2 AS INTEGER))!=(((((v0.c2)OR(t1.c2)))AND(v0.c1)))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c0 COLLATE NOCASE)AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c2)))))OR(((t1.c1) NOT NULL)))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))LIKE(CASE t1.c2  WHEN t1.c1 THEN t1.c1 END)) DESC, ((x'') NOT NULL) ASC  NULLS FIRST, ((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR('')) COLLATE RTRIM DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0 COLLATE NOCASE)AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c2)))))OR(((t1.c1) NOT NULL))))AND(t1.c1))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))LIKE(CASE t1.c2  WHEN t1.c1 THEN t1.c1 END)) DESC, ((x'') NOT NULL) ASC  NULLS FIRST, ((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR('')) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (0x2fe17a26) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))LIKE(CASE t1.c2  WHEN t1.c1 THEN t1.c1 END)) DESC, ((x'') NOT NULL) ASC  NULLS FIRST, ((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR('')) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 WHERE (((((t1.c0 COLLATE NOCASE)AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c2)))))OR(((t1.c1) NOT NULL)))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))LIKE(CASE t1.c2  WHEN t1.c1 THEN t1.c1 END)) DESC, ((x'') NOT NULL) ASC  NULLS FIRST, ((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR('')) COLLATE RTRIM DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0 COLLATE NOCASE)AND(((t1.c0) BETWEEN (t1.c1) AND (t1.c2)))))OR(((t1.c1) NOT NULL))))AND(t1.c1))) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))LIKE(CASE t1.c2  WHEN t1.c1 THEN t1.c1 END)) DESC, ((x'') NOT NULL) ASC  NULLS FIRST, ((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR('')) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (0x2fe17a26) ORDER BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))LIKE(CASE t1.c2  WHEN t1.c1 THEN t1.c1 END)) DESC, ((x'') NOT NULL) ASC  NULLS FIRST, ((((((((t1.c0)AND(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR('')) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0X0;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN ((((v0.c1))<((v0.c2)))) AND (json_array_length(v0.c1, v0.c2))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN ((((v0.c1))<>((v0.c2)))) AND (json_array_length(v0.c1, v0.c2))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((((((- (v0.c2)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(NULL)) WHERE ((CASE vt0.c0  WHEN v0.c2 THEN vt0.c0 END IN ())) ORDER BY TRIM(DISTINCT 0X411f71cb, v0.c2) COLLATE RTRIM  NULLS FIRST, (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END))>((vt0.c1))) DESC  NULLS LAST, (((~ (vt0.c0)))<=((x'58' IN (v0.c0))))  NULLS LAST;
SELECT * FROM v0 INNER JOIN vt0 ON (((((((- (v0.c2)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(NULL)) WHERE ((((CASE vt0.c0  WHEN v0.c2 THEN vt0.c0 END IN ()))AND((((vt0.c0, v0.c1, vt0.c1, vt0.c0)) BETWEEN ((((v0.c1) ISNULL), ((((vt0.c1)AND(0.7474755188509272)))OR(vt0.c1)), NULLIF(v0.c0, NULL), vt0.c1)) AND (((- (v0.c2)), x'df70', v0.c0, CASE WHEN vt0.c0 THEN vt0.c1 WHEN v0.c1 THEN v0.c2 END)))))) ORDER BY TRIM(DISTINCT 0X411f71cb, v0.c2) COLLATE RTRIM  NULLS FIRST, (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END))>((vt0.c1))) DESC  NULLS LAST, (((~ (vt0.c0)))<=((x'58' IN (v0.c0))))  NULLS LAST INTERSECT SELECT ALL * FROM v0 INNER JOIN vt0 ON (((((((- (v0.c2)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(NULL)) WHERE ((x'42d4a2' IN ((v0.c0 IN ())))) ORDER BY TRIM(DISTINCT 0x411f71cb, v0.c2) COLLATE RTRIM  NULLS FIRST, (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END))>((vt0.c1))) DESC  NULLS LAST, (((~ (vt0.c0)))<=((x'58' IN (v0.c0))))  NULLS LAST;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((((((- (v0.c2)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(NULL)) WHERE ((CASE vt0.c0  WHEN v0.c2 THEN vt0.c0 END IN ())) ORDER BY TRIM(DISTINCT 0X411f71cb, v0.c2) COLLATE RTRIM  NULLS FIRST, (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END))>((vt0.c1))) DESC  NULLS LAST, (((~ (vt0.c0)))<=((x'58' IN (v0.c0))))  NULLS LAST;
SELECT * FROM v0 INNER JOIN vt0 ON (((((((- (v0.c2)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(NULL)) WHERE ((((CASE vt0.c0  WHEN v0.c2 THEN vt0.c0 END IN ()))AND((((vt0.c0, v0.c1, vt0.c1, vt0.c0)) BETWEEN ((((v0.c1) ISNULL), ((((vt0.c1)AND(0.7474755188509272)))OR(vt0.c1)), NULLIF(v0.c0, NULL), vt0.c1)) AND (((- (v0.c2)), x'df70', v0.c0, CASE WHEN vt0.c0 THEN vt0.c1 WHEN v0.c1 THEN v0.c2 END)))))) ORDER BY TRIM(DISTINCT 0X411f71cb, v0.c2) COLLATE RTRIM  NULLS FIRST, (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END))>((vt0.c1))) DESC  NULLS LAST, (((~ (vt0.c0)))<=((x'58' IN (v0.c0))))  NULLS LAST INTERSECT SELECT ALL * FROM v0 INNER JOIN vt0 ON (((((((- (v0.c2)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(NULL)) WHERE ((x'42d4a2' IN ((v0.c0 IN ())))) ORDER BY TRIM(DISTINCT 0x411f71cb, v0.c2) COLLATE RTRIM  NULLS FIRST, (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END))>((vt0.c1))) DESC  NULLS LAST, (((~ (vt0.c0)))<=((x'58' IN (v0.c0))))  NULLS LAST;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c0)+(vt0.c0)) IN ())) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN (NULL, vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT MAX(vt0.c1) FROM vt0 WHERE ((((((vt0.c0)+(vt0.c0)) IN ()))AND(((IFNULL(DISTINCT vt0.c1, x'')) IS FALSE)))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM v0, t1, vt0 WHERE ((v0.c0 IN (v0.c2, v0.c2)) COLLATE RTRIM) ORDER BY (NULL IN ((x'e8' IN (0.10496673429038905, vt0.c1)), ((v0.c1) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM v0, t1, vt0 WHERE ((((v0.c0 IN (v0.c2, v0.c2)) COLLATE RTRIM)AND(((((x'4d')IS(x'89fcc6')))|((vt0.c1 IN ())))))) ORDER BY (NULL IN ((x'e8' IN (0.10496673429038905, vt0.c1)), ((v0.c1) IS TRUE)))  NULLS LAST LIMIT 0X3;
SELECT * FROM v0, t1, vt0 WHERE ((v0.c0 IN (v0.c2, v0.c2)) COLLATE RTRIM) ORDER BY (NULL IN ((x'e8' IN (0.10496673429038905, vt0.c1)), ((v0.c1) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM v0, t1, vt0 WHERE ((((v0.c0 IN (v0.c2, v0.c2)) COLLATE RTRIM)AND(((((x'4d')IS(x'89fcc6')))|((vt0.c1 IN ())))))) ORDER BY (NULL IN ((x'e8' IN (0.10496673429038905, vt0.c1)), ((v0.c1) IS TRUE)))  NULLS LAST LIMIT 0X3;
SELECT ALL * FROM t1 LEFT OUTER JOIN v0 ON GLOB(CAST(t1.c2 AS BLOB), '-1635930072') WHERE (CAST(TRIM(t1.c1) AS REAL)) ORDER BY ((t1.c1)LIKE(CAST(v0.c0 AS TEXT))) DESC  NULLS FIRST, ((1.200319629E9) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM t1 LEFT OUTER JOIN v0 ON GLOB(CAST(t1.c2 AS BLOB), '-1635930072') WHERE (((CAST(TRIM(t1.c1) AS REAL))AND(7.0346026E7))) ORDER BY ((t1.c1)LIKE(CAST(v0.c0 AS TEXT))) DESC  NULLS FIRST, ((1.200319629E9) NOT NULL) DESC  NULLS FIRST INTERSECT SELECT * FROM t1 LEFT OUTER JOIN v0 ON GLOB(CAST(t1.c2 AS BLOB), '-1635930072') WHERE ((v0.c2 IN (HEX(DISTINCT v0.c2), v0.c2))) ORDER BY ((t1.c1)LIKE(CAST(v0.c0 AS TEXT))) DESC  NULLS FIRST, ((1.200319629E9) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM t1 LEFT OUTER JOIN v0 ON GLOB(CAST(t1.c2 AS BLOB), '-1635930072') WHERE (CAST(TRIM(t1.c1) AS REAL)) ORDER BY ((t1.c1)LIKE(CAST(v0.c0 AS TEXT))) DESC  NULLS FIRST, ((1.200319629E9) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM t1 LEFT OUTER JOIN v0 ON GLOB(CAST(t1.c2 AS BLOB), '-1635930072') WHERE (((CAST(TRIM(t1.c1) AS REAL))AND(7.0346026E7))) ORDER BY ((t1.c1)LIKE(CAST(v0.c0 AS TEXT))) DESC  NULLS FIRST, ((1.200319629E9) NOT NULL) DESC  NULLS FIRST INTERSECT SELECT * FROM t1 LEFT OUTER JOIN v0 ON GLOB(CAST(t1.c2 AS BLOB), '-1635930072') WHERE ((v0.c2 IN (HEX(DISTINCT v0.c2), v0.c2))) ORDER BY ((t1.c1)LIKE(CAST(v0.c0 AS TEXT))) DESC  NULLS FIRST, ((1.200319629E9) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM v0, t1 CROSS JOIN vt0 ON t1.c1 WHERE (CAST((- (t1.c0)) AS INTEGER));
SELECT * FROM v0, t1 CROSS JOIN vt0 ON t1.c1 WHERE (CAST((- (t1.c0)) AS INTEGER)) LIMIT 0X3;
SELECT ALL * FROM v0, t1 CROSS JOIN vt0 ON t1.c1 WHERE (CAST((- (t1.c0)) AS INTEGER));
SELECT * FROM v0, t1 CROSS JOIN vt0 ON t1.c1 WHERE (CAST((- (t1.c0)) AS INTEGER)) LIMIT 0X3;
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))>=(vt0.c1 COLLATE RTRIM))) ORDER BY ((COALESCE(vt0.c0, vt0.c0, vt0.c1, vt0.c0))!=(CAST(vt0.c1 AS BLOB))), CASE WHEN NULL THEN vt0.c1 WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c1)>(vt0.c1)) END ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((- (vt0.c0)))=(vt0.c1 COLLATE RTRIM))) ORDER BY json_array_length(x'ac') DESC, (CASE WHEN vt0.c0 THEN vt0.c1 WHEN 1832410938 THEN 'n5Y3' WHEN vt0.c0 THEN vt0.c1 END IN ((vt0.c0 IN ()), '脏' COLLATE RTRIM, ((vt0.c1)=(vt0.c0)))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0))) IN ())) ORDER BY json_array_length(x'ac') DESC, (CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0x6d385f3a THEN 'n5Y3' WHEN vt0.c0 THEN vt0.c1 END IN ((vt0.c0 IN ()), '脏' COLLATE RTRIM, ((vt0.c1)==(vt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))>=(vt0.c1 COLLATE RTRIM))) ORDER BY ((COALESCE(vt0.c0, vt0.c0, vt0.c1, vt0.c0))!=(CAST(vt0.c1 AS BLOB))), CASE WHEN NULL THEN vt0.c1 WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c1)>(vt0.c1)) END ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((- (vt0.c0)))=(vt0.c1 COLLATE RTRIM))) ORDER BY json_array_length(x'ac') DESC, (CASE WHEN vt0.c0 THEN vt0.c1 WHEN 1832410938 THEN 'n5Y3' WHEN vt0.c0 THEN vt0.c1 END IN ((vt0.c0 IN ()), '脏' COLLATE RTRIM, ((vt0.c1)=(vt0.c0)))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0))) IN ())) ORDER BY json_array_length(x'ac') DESC, (CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0x6d385f3a THEN 'n5Y3' WHEN vt0.c0 THEN vt0.c1 END IN ((vt0.c0 IN ()), '脏' COLLATE RTRIM, ((vt0.c1)==(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL MIN(v0.c0) FROM v0, vt0 WHERE ((- ((NOT (v0.c2))))) ORDER BY ((CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 ELSE vt0.c1 END) NOT NULL) ASC  NULLS FIRST;
SELECT DISTINCT MIN(v0.c0) FROM v0, vt0 WHERE ((((- ((NOT (v0.c2)))))AND('228315338'))) ORDER BY ((CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 ELSE vt0.c1 END) NOT NULL) ASC  NULLS FIRST LIMIT 2;
SELECT ALL MAX(t1.c1) FROM v0, t1 WHERE ((((v0.c0)) NOT BETWEEN ((t1.c0)) AND ((v0.c0))) COLLATE BINARY) ORDER BY ((CAST(v0.c2 AS REAL))|(((v0.c2) BETWEEN (x'543a') AND (v0.c2)))) DESC  NULLS LAST, ((CAST(t1.c2 AS INTEGER)) BETWEEN ((t1.c2 IN (v0.c0))) AND ((- (v0.c1)))) ASC;
SELECT DISTINCT MAX(t1.c1) FROM v0, t1 WHERE ((((((v0.c0)) NOT BETWEEN ((t1.c0)) AND ((v0.c0))) COLLATE BINARY)AND(((JULIANDAY(t1.c1, t1.c1, t1.c1)) NOT BETWEEN (((v0.c1)GLOB(t1.c1))) AND (((((((((((v0.c1)AND(t1.c2)))OR(v0.c0)))OR(v0.c2)))AND(t1.c2)))OR(t1.c1))))))) ORDER BY ((CAST(v0.c2 AS REAL))|(((v0.c2) BETWEEN (x'543a') AND (v0.c2)))) DESC  NULLS LAST, ((CAST(t1.c2 AS INTEGER)) BETWEEN ((t1.c2 IN (v0.c0))) AND ((- (v0.c1)))) ASC LIMIT 0x2 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM v0, t1 WHERE ((((((t1.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))>>(MIN(t1.c1, v0.c1, v0.c2)))) ORDER BY ((CAST(v0.c2 AS REAL))|(((v0.c2) BETWEEN (x'543a') AND (v0.c2)))) DESC  NULLS LAST, ((CAST(t1.c2 AS INTEGER)) BETWEEN ((t1.c2 IN (v0.c0))) AND ((- (v0.c1)))) ASC LIMIT 2;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0) NOT NULL)) NOT NULL) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1)AND((- ((- (vt0.c1))))))) ORDER BY CAST((((vt0.c0, vt0.c1)) NOT BETWEEN ((0.4403047577460034, vt0.c0)) AND ((vt0.c0, vt0.c1))) AS BLOB) ASC  NULLS FIRST, (~ (1092579787)) ASC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS TEXT) AS TEXT)) ORDER BY CAST((((vt0.c0, vt0.c1)) NOT BETWEEN ((0.4403047577460034, vt0.c0)) AND ((vt0.c0, vt0.c1))) AS BLOB) ASC  NULLS FIRST, (~ (1092579787)) ASC LIMIT 0X1;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0) NOT NULL)) NOT NULL) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1)AND((- ((- (vt0.c1))))))) ORDER BY CAST((((vt0.c0, vt0.c1)) NOT BETWEEN ((0.4403047577460034, vt0.c0)) AND ((vt0.c0, vt0.c1))) AS BLOB) ASC  NULLS FIRST, (~ (1092579787)) ASC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS TEXT) AS TEXT)) ORDER BY CAST((((vt0.c0, vt0.c1)) NOT BETWEEN ((0.4403047577460034, vt0.c0)) AND ((vt0.c0, vt0.c1))) AS BLOB) ASC  NULLS FIRST, (~ (1092579787)) ASC LIMIT 0X1;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) IS TRUE))AND(((vt0.c1) IS TRUE))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((COALESCE(vt0.c1, x'3773', vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, '-459511557')) AND ((vt0.c0, vt0.c1)))) AND (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))), CASE NULL  WHEN (((vt0.c1, vt0.c0))>((vt0.c1, vt0.c1))) THEN ((vt0.c0)<>('1709102821')) WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN 'B./dr' ELSE vt0.c1 END THEN COALESCE(vt0.c0, '1891954482', '-2080115895', vt0.c1, vt0.c1, vt0.c1) WHEN vt0.c0 THEN vt0.c0 WHEN INSTR(vt0.c0, vt0.c0) THEN (vt0.c1 IN ()) ELSE ((vt0.c1) NOTNULL) END ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (((((((vt0.c1) IS TRUE))AND(((vt0.c1) IS TRUE))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0) IS FALSE))LIKE('70346026')) ASC  NULLS FIRST, (((vt0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB), (vt0.c1 IN ()))) AND ((HEX(vt0.c1), vt0.c1))) DESC  NULLS FIRST, CAST(vt0.c0 AS TEXT)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) IS TRUE))AND(((vt0.c1) IS TRUE))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((COALESCE(vt0.c1, x'3773', vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, '-459511557')) AND ((vt0.c0, vt0.c1)))) AND (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))), CASE NULL  WHEN (((vt0.c1, vt0.c0))>((vt0.c1, vt0.c1))) THEN ((vt0.c0)<>('1709102821')) WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN 'B./dr' ELSE vt0.c1 END THEN COALESCE(vt0.c0, '1891954482', '-2080115895', vt0.c1, vt0.c1, vt0.c1) WHEN vt0.c0 THEN vt0.c0 WHEN INSTR(vt0.c0, vt0.c0) THEN (vt0.c1 IN ()) ELSE ((vt0.c1) NOTNULL) END ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (((((((vt0.c1) IS TRUE))AND(((vt0.c1) IS TRUE))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0) IS FALSE))LIKE('70346026')) ASC  NULLS FIRST, (((vt0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB), (vt0.c1 IN ()))) AND ((HEX(vt0.c1), vt0.c1))) DESC  NULLS FIRST, CAST(vt0.c0 AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (0.4638239374258897);
SELECT DISTINCT COUNT(*) FROM vt0, v0 WHERE (0.4638239374258897) INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, v0 WHERE (((('-499593648')!=(vt0.c1)) IN ('685232261', x'96f0', (0.40034195088324054 IN (v0.c1, x'af')))));
SELECT ALL MIN(t1.c0) FROM vt0, v0, t1 WHERE (CAST(t1.c2 AS REAL)) ORDER BY (~ ((vt0.c0 IN ()))) DESC;
SELECT ALL MIN(t1.c0) FROM vt0, v0, t1 WHERE (((CAST(t1.c2 AS REAL))AND(((TRIM(DISTINCT vt0.c0, v0.c0)) BETWEEN (((((t1.c2)OR(t1.c2)))AND(vt0.c1))) AND ((v0.c2 IN (v0.c2))))))) ORDER BY (~ ((vt0.c0 IN ()))) DESC;
SELECT MAX(vt0.c1) FROM t1, v0 INNER JOIN vt0 ON UPPER(CASE v0.c1  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END) WHERE (CASE WHEN CASE vt0.c0  WHEN t1.c2 THEN vt0.c1 WHEN t1.c0 THEN v0.c1 WHEN vt0.c1 THEN t1.c1 END THEN ((vt0.c1) NOT NULL) END);
SELECT DISTINCT MAX(vt0.c1) FROM t1, v0 INNER JOIN vt0 ON UPPER(CASE v0.c1  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END) WHERE (CASE WHEN CASE vt0.c0  WHEN t1.c2 THEN vt0.c1 WHEN t1.c0 THEN v0.c1 WHEN vt0.c1 THEN t1.c1 END THEN ((vt0.c1) NOT NULL) END) ORDER BY ((0.22504538999462975) IS FALSE) DESC  NULLS LAST, ((((vt0.c0)+(v0.c1)))||(((('1076981978'))<((v0.c0))))) LIMIT 1 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM t1, v0 INNER JOIN vt0 ON UPPER(CASE v0.c1  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END) WHERE (((t1.c0) BETWEEN (v0.c1) AND (CAST(t1.c0 AS NUMERIC)))) ORDER BY ((0.22504538999462975) IS FALSE) DESC  NULLS LAST, ((((vt0.c0)+(v0.c1)))||(((('1076981978'))<((v0.c0))))) LIMIT 0x1;
SELECT * FROM v0 WHERE (NULL) ORDER BY (((((v0.c0)|(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))))<>((((v0.c1)GLOB(v0.c2)), ((((((v0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c2)))))  NULLS LAST;
SELECT DISTINCT * FROM v0 WHERE (((NULL)AND(v0.c1))) ORDER BY (((((v0.c0)|(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))))<>((((v0.c1)GLOB(v0.c2)), ((((((v0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c2)))))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM v0 WHERE ((((x'c7' IN (v0.c1)))<=((v0.c1 IN ())))) ORDER BY (((((v0.c0)|(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))))!=((((v0.c1)GLOB(v0.c2)), ((((((v0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c2)))))  NULLS LAST LIMIT 0;
SELECT * FROM v0 WHERE (NULL) ORDER BY (((((v0.c0)|(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))))<>((((v0.c1)GLOB(v0.c2)), ((((((v0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c2)))))  NULLS LAST;
SELECT DISTINCT * FROM v0 WHERE (((NULL)AND(v0.c1))) ORDER BY (((((v0.c0)|(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))))<>((((v0.c1)GLOB(v0.c2)), ((((((v0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c2)))))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM v0 WHERE ((((x'c7' IN (v0.c1)))<=((v0.c1 IN ())))) ORDER BY (((((v0.c0)|(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))))!=((((v0.c1)GLOB(v0.c2)), ((((((v0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c2)))))  NULLS LAST LIMIT 0;
SELECT * FROM v0, vt0, t1 WHERE ((- (((t1.c1) ISNULL))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((((- (((t1.c1) ISNULL))))AND(((v0.c2)IS NOT(v0.c1)) COLLATE RTRIM))) INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE (t1.c2);
SELECT * FROM v0, vt0, t1 WHERE ((- (((t1.c1) ISNULL))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((((- (((t1.c1) ISNULL))))AND(((v0.c2)IS NOT(v0.c1)) COLLATE RTRIM))) INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE (t1.c2);
SELECT MIN(v0.c2) FROM v0 WHERE (((x'' COLLATE NOCASE)IS((((v0.c2))>=((v0.c1)))))) ORDER BY (((v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c2 COLLATE RTRIM)) AND ((((0.05821364295936704)AND(v0.c0)), v0.c0)))  NULLS LAST, CAST(v0.c2 AS REAL);
SELECT MIN(v0.c2) FROM v0 WHERE (((((x'' COLLATE NOCASE)IS((((v0.c2))>((v0.c1))))))AND(((LOWER(DISTINCT v0.c2)) IS TRUE)))) ORDER BY (((v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c2 COLLATE RTRIM)) AND ((((0.05821364295936704)AND(v0.c0)), v0.c0)))  NULLS LAST, CAST(v0.c2 AS REAL) LIMIT 1;
SELECT * FROM v0 NATURAL JOIN t1 LEFT OUTER JOIN vt0 ON ((((((((((((((v0.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(vt0.c1)))OR(v0.c0)))AND(CAST(v0.c1 AS TEXT))))AND(((v0.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))) WHERE (((((t1.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(203799364)));
SELECT ALL * FROM v0 NATURAL JOIN t1 INNER JOIN vt0 ON ((((((((((((((v0.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(vt0.c1)))OR(v0.c0)))AND(CAST(v0.c1 AS TEXT))))AND(((v0.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))) WHERE (((((((t1.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(0xc25bb44)))AND(CASE WHEN '' THEN x'91c3' WHEN LIKELIHOOD(DISTINCT v0.c2, NULL) THEN LENGTH(v0.c2) ELSE CAST(v0.c0 AS REAL) END))) LIMIT 0x0;
SELECT * FROM v0 NATURAL JOIN t1 LEFT OUTER JOIN vt0 ON ((((((((((((((v0.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(vt0.c1)))OR(v0.c0)))AND(CAST(v0.c1 AS TEXT))))AND(((v0.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))) WHERE (((((t1.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(203799364)));
SELECT ALL * FROM v0 NATURAL JOIN t1 INNER JOIN vt0 ON ((((((((((((((v0.c0)AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(vt0.c1)))OR(v0.c0)))AND(CAST(v0.c1 AS TEXT))))AND(((v0.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))) WHERE (((((((t1.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(0xc25bb44)))AND(CASE WHEN '' THEN x'91c3' WHEN LIKELIHOOD(DISTINCT v0.c2, NULL) THEN LENGTH(v0.c2) ELSE CAST(v0.c0 AS REAL) END))) LIMIT 0x0;
SELECT ALL MIN(vt0.c0) FROM vt0, t1 CROSS JOIN v0 ON (((t1.c0, v0.c2, v0.c2, t1.c1, t1.c2, v0.c1)) NOT BETWEEN ((((t1.c0)||(vt0.c0)), (0X19b06048 IN ()), CAST(t1.c2 AS REAL), ((v0.c2)==(t1.c2)), CASE vt0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END, v0.c0 COLLATE RTRIM)) AND (((v0.c1 IN ()), ((((t1.c2)OR(vt0.c1)))OR(t1.c0)), CASE vt0.c0  WHEN t1.c1 THEN v0.c1 WHEN v0.c1 THEN t1.c1 WHEN t1.c2 THEN v0.c0 ELSE vt0.c1 END, CAST(t1.c1 AS REAL), TRIM(v0.c1, v0.c0), ((t1.c0) NOT NULL)))) WHERE ((((x'a9', x''))<>((CAST(v0.c2 AS TEXT), (((t1.c2, v0.c0, t1.c2, NULL)) BETWEEN ((v0.c1, NULL, t1.c1, v0.c0)) AND ((t1.c1, vt0.c1, v0.c1, v0.c2))))))) ORDER BY x'';
SELECT MIN(vt0.c0) FROM vt0, t1 CROSS JOIN v0 ON (((t1.c0, v0.c2, v0.c2, t1.c1, t1.c2, v0.c1)) NOT BETWEEN ((((t1.c0)||(vt0.c0)), (430989384 IN ()), CAST(t1.c2 AS REAL), ((v0.c2)=(t1.c2)), CASE vt0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END, v0.c0 COLLATE RTRIM)) AND (((v0.c1 IN ()), ((((t1.c2)OR(vt0.c1)))OR(t1.c0)), CASE vt0.c0  WHEN t1.c1 THEN v0.c1 WHEN v0.c1 THEN t1.c1 WHEN t1.c2 THEN v0.c0 ELSE vt0.c1 END, CAST(t1.c1 AS REAL), TRIM(v0.c1, v0.c0), ((t1.c0) NOT NULL)))) WHERE ((((x'a9', x''))!=((CAST(v0.c2 AS TEXT), (((t1.c2, v0.c0, t1.c2, NULL)) BETWEEN ((v0.c1, NULL, t1.c1, v0.c0)) AND ((t1.c1, vt0.c1, v0.c1, v0.c2))))))) ORDER BY x'' INTERSECT SELECT ALL MIN(vt0.c0) FROM vt0, t1 CROSS JOIN v0 ON (((t1.c0, v0.c2, v0.c2, t1.c1, t1.c2, v0.c1)) NOT BETWEEN ((((t1.c0)||(vt0.c0)), (0x19b06048 IN ()), CAST(t1.c2 AS REAL), ((v0.c2)==(t1.c2)), CASE vt0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END, v0.c0 COLLATE RTRIM)) AND (((v0.c1 IN ()), ((((t1.c2)OR(vt0.c1)))OR(t1.c0)), CASE vt0.c0  WHEN t1.c1 THEN v0.c1 WHEN v0.c1 THEN t1.c1 WHEN t1.c2 THEN v0.c0 ELSE vt0.c1 END, CAST(t1.c1 AS REAL), TRIM(v0.c1, v0.c0), ((t1.c0) NOT NULL)))) WHERE ((((vt0.c0)<<(vt0.c0)) IN (((vt0.c1)=(vt0.c0))))) ORDER BY x'';
SELECT * FROM t1 WHERE (CAST(((t1.c0) IS FALSE) AS NUMERIC));
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c0) IS FALSE) AS NUMERIC)) INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1)IS(t1.c0)) AS NUMERIC));
SELECT * FROM t1 WHERE (CAST(((t1.c0) IS FALSE) AS NUMERIC));
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c0) IS FALSE) AS NUMERIC)) INTERSECT SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1)IS(t1.c0)) AS NUMERIC));
SELECT * FROM v0, vt0 WHERE (TYPEOF(CAST(vt0.c0 AS TEXT)));
SELECT * FROM v0, vt0 WHERE (((TYPEOF(CAST(vt0.c0 AS TEXT)))AND(((CAST(NULL AS TEXT)) IS TRUE)))) ORDER BY vt0.c0, CASE (('1803558881')GLOB(vt0.c1))  WHEN ((vt0.c1)GLOB(vt0.c1)) THEN ((v0.c0) ISNULL) WHEN x'e9' THEN '9g' WHEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c2)) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((0.228609219319156))) WHEN (v0.c2 IN (vt0.c1)) THEN TRIM(DISTINCT v0.c2) WHEN UNLIKELY(DISTINCT v0.c1) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 ELSE '*F(C' END WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE x'c4' END THEN CASE v0.c0  WHEN 0.8448115361401342 THEN v0.c0 ELSE v0.c1 END ELSE ((v0.c2) NOTNULL) END DESC  NULLS FIRST, TRIM(DISTINCT NULL) DESC LIMIT 2 INTERSECT SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS(((v0.c2) BETWEEN (v0.c2) AND (v0.c1))))) ORDER BY vt0.c0, CASE (('1803558881')GLOB(vt0.c1))  WHEN ((vt0.c1)GLOB(vt0.c1)) THEN ((v0.c0) ISNULL) WHEN x'e9' THEN '9g' WHEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c2)) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((0.228609219319156))) WHEN (v0.c2 IN (vt0.c1)) THEN TRIM(DISTINCT v0.c2) WHEN UNLIKELY(DISTINCT v0.c1) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 ELSE '*F(C' END WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE x'c4' END THEN CASE v0.c0  WHEN 0.8448115361401342 THEN v0.c0 ELSE v0.c1 END ELSE ((v0.c2) NOTNULL) END DESC  NULLS FIRST, TRIM(DISTINCT NULL) DESC LIMIT 0x2;
SELECT * FROM v0, vt0 WHERE (TYPEOF(CAST(vt0.c0 AS TEXT)));
SELECT * FROM v0, vt0 WHERE (((TYPEOF(CAST(vt0.c0 AS TEXT)))AND(((CAST(NULL AS TEXT)) IS TRUE)))) ORDER BY vt0.c0, CASE (('1803558881')GLOB(vt0.c1))  WHEN ((vt0.c1)GLOB(vt0.c1)) THEN ((v0.c0) ISNULL) WHEN x'e9' THEN '9g' WHEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c2)) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((0.228609219319156))) WHEN (v0.c2 IN (vt0.c1)) THEN TRIM(DISTINCT v0.c2) WHEN UNLIKELY(DISTINCT v0.c1) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 ELSE '*F(C' END WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE x'c4' END THEN CASE v0.c0  WHEN 0.8448115361401342 THEN v0.c0 ELSE v0.c1 END ELSE ((v0.c2) NOTNULL) END DESC  NULLS FIRST, TRIM(DISTINCT NULL) DESC LIMIT 2 INTERSECT SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS(((v0.c2) BETWEEN (v0.c2) AND (v0.c1))))) ORDER BY vt0.c0, CASE (('1803558881')GLOB(vt0.c1))  WHEN ((vt0.c1)GLOB(vt0.c1)) THEN ((v0.c0) ISNULL) WHEN x'e9' THEN '9g' WHEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c2)) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((0.228609219319156))) WHEN (v0.c2 IN (vt0.c1)) THEN TRIM(DISTINCT v0.c2) WHEN UNLIKELY(DISTINCT v0.c1) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 ELSE '*F(C' END WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE x'c4' END THEN CASE v0.c0  WHEN 0.8448115361401342 THEN v0.c0 ELSE v0.c1 END ELSE ((v0.c2) NOTNULL) END DESC  NULLS FIRST, TRIM(DISTINCT NULL) DESC LIMIT 0x2;
SELECT * FROM t1 WHERE ((((t1.c2 IN ()))=(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END))) ORDER BY (t1.c1 IN ()) ASC  NULLS LAST, (((t1.c1 COLLATE RTRIM, CASE t1.c0  WHEN '' THEN t1.c2 WHEN t1.c1 THEN t1.c0 END, ((((t1.c0)AND(t1.c1)))OR(t1.c1)), (t1.c1 IN ()), ((t1.c2)>=(t1.c2)), ((((((t1.c2)OR(t1.c1)))AND(t1.c1)))OR(t1.c0)), (t1.c0 IN (t1.c2))))>((LIKE(t1.c1, t1.c2, 'k'), CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN NULL WHEN t1.c2 THEN t1.c1 END, UPPER(t1.c1), (((t1.c2, t1.c2, t1.c0)) NOT BETWEEN ((t1.c2, t1.c1, t1.c0)) AND ((t1.c2, t1.c2, t1.c1))), (~ (t1.c1)), (~ (t1.c1)), CAST(t1.c2 AS BLOB)))), (t1.c2 IN ()) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((t1.c2 IN ()))=(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END)))AND(t1.c0 COLLATE RTRIM))) ORDER BY ((t1.c2)/(t1.c1)) COLLATE BINARY LIMIT 1 INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c2, t1.c0)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c2) AND (t1.c1)), (- (t1.c1)))) AND ((t1.c2, ((0.6135776601337125)<>(t1.c2)))))) ORDER BY ((t1.c2)/(t1.c1)) COLLATE BINARY LIMIT 1;
SELECT * FROM t1 WHERE ((((t1.c2 IN ()))=(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END))) ORDER BY (t1.c1 IN ()) ASC  NULLS LAST, (((t1.c1 COLLATE RTRIM, CASE t1.c0  WHEN '' THEN t1.c2 WHEN t1.c1 THEN t1.c0 END, ((((t1.c0)AND(t1.c1)))OR(t1.c1)), (t1.c1 IN ()), ((t1.c2)>=(t1.c2)), ((((((t1.c2)OR(t1.c1)))AND(t1.c1)))OR(t1.c0)), (t1.c0 IN (t1.c2))))>((LIKE(t1.c1, t1.c2, 'k'), CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN NULL WHEN t1.c2 THEN t1.c1 END, UPPER(t1.c1), (((t1.c2, t1.c2, t1.c0)) NOT BETWEEN ((t1.c2, t1.c1, t1.c0)) AND ((t1.c2, t1.c2, t1.c1))), (~ (t1.c1)), (~ (t1.c1)), CAST(t1.c2 AS BLOB)))), (t1.c2 IN ()) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt0, v0, t1 WHERE (((((((((0.7971248963455178)AND(((v0.c0) IS FALSE))))AND(CASE WHEN 0X7a56fc1 THEN v0.c0 END)))OR(((0x2720d82)>(vt0.c0)))))OR(CAST(v0.c1 AS INTEGER))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((((((((0.7971248963455178)AND(((v0.c0) IS FALSE))))AND(CASE WHEN 0X7a56fc1 THEN v0.c0 END)))OR(((41028994)>(vt0.c0)))))OR(CAST(v0.c1 AS INTEGER))))AND(v0.c1)));
SELECT ALL * FROM vt0, v0, t1 WHERE (((((((((0.7971248963455178)AND(((v0.c0) IS FALSE))))AND(CASE WHEN 0X7a56fc1 THEN v0.c0 END)))OR(((0x2720d82)>(vt0.c0)))))OR(CAST(v0.c1 AS INTEGER))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((((((((0.7971248963455178)AND(((v0.c0) IS FALSE))))AND(CASE WHEN 0X7a56fc1 THEN v0.c0 END)))OR(((41028994)>(vt0.c0)))))OR(CAST(v0.c1 AS INTEGER))))AND(v0.c1)));
SELECT ALL MAX(t1.c2) FROM t1 WHERE ((((0.14019992864274156)) NOT BETWEEN (((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))))) AND ((CASE t1.c2  WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END)))) ORDER BY x'50'  NULLS FIRST;
SELECT MAX(t1.c2) FROM t1 WHERE ((((((0.14019992864274156)) NOT BETWEEN (((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))))) AND ((CASE t1.c2  WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END))))AND((((((t1.c1, t1.c1)) BETWEEN ((t1.c0, x'77')) AND ((t1.c1, 0.06744620616027563))))!=('>'))))) ORDER BY x'50'  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0 WHERE ((((+ (vt0.c1))) NOTNULL)) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM  NULLS LAST, ((((((((NULL)GLOB(vt0.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))OR(((vt0.c0) IS FALSE))))AND('-1304575661')) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((((+ (vt0.c1))) NOTNULL))AND((((vt0.c0, vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN (((((vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0))), ((((vt0.c1)OR(vt0.c1)))OR('-1135898470')), ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)), (~ (vt0.c1)))) AND ((vt0.c0, NULLIF(DISTINCT vt0.c0, vt0.c0), ((vt0.c0)&('-459511557')), ((vt0.c0) IS TRUE))))))) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((((vt0.c1))<=((vt0.c0)))) AND (((vt0.c1) NOT NULL))) DESC  NULLS FIRST, NULL  NULLS LAST;
SELECT * FROM vt0 WHERE ((((+ (vt0.c1))) NOTNULL)) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM  NULLS LAST, ((((((((NULL)GLOB(vt0.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))OR(((vt0.c0) IS FALSE))))AND('-1304575661')) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE ((((((+ (vt0.c1))) NOTNULL))AND((((vt0.c0, vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN (((((vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0))), ((((vt0.c1)OR(vt0.c1)))OR('-1135898470')), ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)), (~ (vt0.c1)))) AND ((vt0.c0, NULLIF(DISTINCT vt0.c0, vt0.c0), ((vt0.c0)&('-459511557')), ((vt0.c0) IS TRUE))))))) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((((vt0.c1))<=((vt0.c0)))) AND (((vt0.c1) NOT NULL))) DESC  NULLS FIRST, NULL  NULLS LAST;
SELECT ALL * FROM v0, t1, vt0 WHERE (((v0.c1 COLLATE NOCASE) ISNULL)) ORDER BY (((0Xffffffffacf50fe3, LIKELY(v0.c2)))<((CAST(v0.c1 AS TEXT), NULL COLLATE RTRIM)))  NULLS FIRST, ((((vt0.c0)|(v0.c1)))>=((((v0.c0, v0.c2, v0.c1))>((t1.c0, vt0.c0, v0.c2))))) ASC  NULLS LAST;
SELECT ALL * FROM v0, t1, vt0 WHERE (((((v0.c1 COLLATE NOCASE) ISNULL))AND(CASE WHEN (((t1.c1, v0.c0, 1226535833, 0.6397446942912896))>=((v0.c0, 0xffffffffe49c68fb, t1.c2, vt0.c1))) THEN v0.c0 WHEN t1.c0 THEN ((vt0.c0)IS NOT(t1.c0)) END))) ORDER BY (((-1393225757, LIKELY(v0.c2)))<((CAST(v0.c1 AS TEXT), NULL COLLATE RTRIM)))  NULLS FIRST, ((((vt0.c0)|(v0.c1)))>=((((v0.c0, v0.c2, v0.c1))>((t1.c0, vt0.c0, v0.c2))))) ASC  NULLS LAST INTERSECT SELECT ALL * FROM v0, t1, vt0 WHERE (((((((((((((v0.c2 COLLATE NOCASE)AND(((t1.c1) NOT NULL))))AND((((v0.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0))))))AND(UNLIKELY(DISTINCT v0.c0))))OR(((vt0.c0)||(t1.c2)))))AND(NULLIF(v0.c1, v0.c0))))AND(t1.c0 COLLATE RTRIM))) ORDER BY (((0xffffffffacf50fe3, LIKELY(v0.c2)))<((CAST(v0.c1 AS TEXT), NULL COLLATE RTRIM)))  NULLS FIRST, ((((vt0.c0)|(v0.c1)))>=((((v0.c0, v0.c2, v0.c1))>((t1.c0, vt0.c0, v0.c2))))) ASC  NULLS LAST;
SELECT ALL * FROM v0, t1, vt0 WHERE (((v0.c1 COLLATE NOCASE) ISNULL)) ORDER BY (((0Xffffffffacf50fe3, LIKELY(v0.c2)))<((CAST(v0.c1 AS TEXT), NULL COLLATE RTRIM)))  NULLS FIRST, ((((vt0.c0)|(v0.c1)))>=((((v0.c0, v0.c2, v0.c1))>((t1.c0, vt0.c0, v0.c2))))) ASC  NULLS LAST;
SELECT ALL * FROM v0, t1, vt0 WHERE (((((v0.c1 COLLATE NOCASE) ISNULL))AND(CASE WHEN (((t1.c1, v0.c0, 1226535833, 0.6397446942912896))>=((v0.c0, 0xffffffffe49c68fb, t1.c2, vt0.c1))) THEN v0.c0 WHEN t1.c0 THEN ((vt0.c0)IS NOT(t1.c0)) END))) ORDER BY (((-1393225757, LIKELY(v0.c2)))<((CAST(v0.c1 AS TEXT), NULL COLLATE RTRIM)))  NULLS FIRST, ((((vt0.c0)|(v0.c1)))>=((((v0.c0, v0.c2, v0.c1))>((t1.c0, vt0.c0, v0.c2))))) ASC  NULLS LAST INTERSECT SELECT ALL * FROM v0, t1, vt0 WHERE (((((((((((((v0.c2 COLLATE NOCASE)AND(((t1.c1) NOT NULL))))AND((((v0.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0))))))AND(UNLIKELY(DISTINCT v0.c0))))OR(((vt0.c0)||(t1.c2)))))AND(NULLIF(v0.c1, v0.c0))))AND(t1.c0 COLLATE RTRIM))) ORDER BY (((0xffffffffacf50fe3, LIKELY(v0.c2)))<((CAST(v0.c1 AS TEXT), NULL COLLATE RTRIM)))  NULLS FIRST, ((((vt0.c0)|(v0.c1)))>=((((v0.c0, v0.c2, v0.c1))>((t1.c0, vt0.c0, v0.c2))))) ASC  NULLS LAST;
SELECT MAX(v0.c0) FROM vt0, v0 NATURAL JOIN t1 WHERE ((((v0.c2, NULL)) NOT BETWEEN ((x'6965', ((t1.c0)>=(NULL)))) AND ((((((((t1.c2)AND(vt0.c0)))AND(t1.c1)))OR(v0.c0)), ((vt0.c1)>=(t1.c2))))));
SELECT DISTINCT MAX(v0.c0) FROM vt0, v0 NATURAL JOIN t1 WHERE ((((v0.c2, NULL)) NOT BETWEEN ((x'6965', ((t1.c0)>=(NULL)))) AND ((((((((t1.c2)AND(vt0.c0)))AND(t1.c1)))OR(v0.c0)), ((vt0.c1)>=(t1.c2)))))) INTERSECT SELECT DISTINCT MAX(v0.c0) FROM vt0, v0 NATURAL JOIN t1 WHERE ((((v0.c2 IN (t1.c1, v0.c2)))OR(((vt0.c1) IS TRUE))));
SELECT MAX(t1.c2) FROM t1, v0 WHERE (ABS(DISTINCT ((t1.c1) BETWEEN (v0.c1) AND (0.7747561948773806))));
SELECT DISTINCT MAX(t1.c2) FROM t1, v0 WHERE (ABS(DISTINCT ((t1.c1) BETWEEN (v0.c1) AND (0.7747561948773806))));
SELECT MIN(v0.c1) FROM v0 INNER JOIN vt0 ON CASE 0.27797247289921023 COLLATE BINARY  WHEN (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, v0.c1)) AND ((v0.c1, v0.c0, v0.c0))) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)) ELSE CAST(v0.c2 AS REAL) END WHERE ((((((vt0.c0)|(v0.c2)), '135398466', ((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c2)), NULL COLLATE BINARY, ((v0.c0)<(vt0.c1))))>((CASE x''  WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE v0.c1 END, vt0.c1 COLLATE NOCASE, CAST(vt0.c0 AS TEXT), (vt0.c0 IN (v0.c1, 0.9588017674386324)), ((((((((vt0.c0)AND(vt0.c1)))AND(v0.c2)))AND(vt0.c0)))OR(vt0.c1)))))) ORDER BY ((('70346026', CAST(v0.c2 AS INTEGER)))>=((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c2)), v0.c2))) DESC, ((CAST(vt0.c1 AS TEXT))+((~ (v0.c0)))) ASC;
SELECT MIN(v0.c1) FROM v0 INNER JOIN vt0 ON CASE 0.27797247289921023 COLLATE BINARY  WHEN (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, v0.c1)) AND ((v0.c1, v0.c0, v0.c0))) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)) ELSE CAST(v0.c2 AS REAL) END WHERE ((((((vt0.c0)|(v0.c2)), '135398466', ((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c2)), NULL COLLATE BINARY, ((v0.c0)<(vt0.c1))))>((CASE x''  WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE v0.c1 END, vt0.c1 COLLATE NOCASE, CAST(vt0.c0 AS TEXT), (vt0.c0 IN (v0.c1, 0.9588017674386324)), ((((((((vt0.c0)AND(vt0.c1)))AND(v0.c2)))AND(vt0.c0)))OR(vt0.c1)))))) ORDER BY ((('70346026', CAST(v0.c2 AS INTEGER)))>=((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c2)), v0.c2))) DESC, ((CAST(vt0.c1 AS TEXT))+((~ (v0.c0)))) ASC LIMIT 1 INTERSECT SELECT ALL MIN(v0.c1) FROM v0 INNER JOIN vt0 ON CASE 0.27797247289921023 COLLATE BINARY  WHEN (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, v0.c1)) AND ((v0.c1, v0.c0, v0.c0))) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)) ELSE CAST(v0.c2 AS REAL) END WHERE (x'') ORDER BY ((('70346026', CAST(v0.c2 AS INTEGER)))>=((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c2)), v0.c2))) DESC, ((CAST(vt0.c1 AS TEXT))+((~ (v0.c0)))) ASC LIMIT 1;
SELECT MIN(v0.c0) FROM v0 WHERE (CASE WHEN ((v0.c0)%(v0.c1)) THEN ((v0.c1)GLOB(v0.c1)) WHEN (v0.c2 IN (v0.c1)) THEN CASE WHEN v0.c0 THEN '471276848' WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END THEN (((v0.c0, v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((v0.c2, v0.c0, v0.c2, v0.c0)) AND ((v0.c0, v0.c0, v0.c2, v0.c0))) ELSE (((v0.c0))>(('-336308551'))) END);
SELECT ALL MIN(v0.c0) FROM v0 WHERE (((CASE WHEN ((v0.c0)%(v0.c1)) THEN ((v0.c1)GLOB(v0.c1)) WHEN (v0.c2 IN (v0.c1)) THEN CASE WHEN v0.c0 THEN '471276848' WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END THEN (((v0.c0, v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((v0.c2, v0.c0, v0.c2, v0.c0)) AND ((v0.c0, v0.c0, v0.c2, v0.c0))) ELSE (((v0.c0))>(('-336308551'))) END)AND((v0.c0 COLLATE NOCASE IN ())))) LIMIT 1;
SELECT MAX(vt0.c1) FROM t1, v0, vt0 WHERE (CASE (((vt0.c0, v0.c2, ''))>=((t1.c0, x'50ff', vt0.c0)))  WHEN (((v0.c2)) BETWEEN ((t1.c0)) AND ((t1.c1))) THEN (((v0.c2, x'01', t1.c2)) BETWEEN ((t1.c1, t1.c1, v0.c1)) AND ((t1.c2, '([gpH5m', t1.c1))) WHEN v0.c2 THEN ((v0.c0)>=(NULL)) END) ORDER BY (((v0.c2)) NOT BETWEEN (((((((('-428941558')AND(vt0.c1)))AND(t1.c2)))AND(x'0e')))) AND ((CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE t1.c0 END))), ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (UPPER(DISTINCT v0.c2)) AND (((t1.c1) NOT NULL))) DESC;
SELECT DISTINCT MAX(vt0.c1) FROM t1, v0, vt0 WHERE (CASE (((vt0.c0, v0.c2, ''))>((t1.c0, x'50ff', vt0.c0)))  WHEN (((v0.c2)) BETWEEN ((t1.c0)) AND ((t1.c1))) THEN (((v0.c2, x'01', t1.c2)) BETWEEN ((t1.c1, t1.c1, v0.c1)) AND ((t1.c2, '([gpH5m', t1.c1))) WHEN v0.c2 THEN ((v0.c0)==(NULL)) END) ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (((v0.c2)*(v0.c0)))) DESC LIMIT 0x3;
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((((((+ (v0.c2)))AND('Li')))OR((NULL IN (v0.c0)))));
SELECT DISTINCT COUNT(*) FROM v0, t1 WHERE ((((((+ (v0.c2)))AND('Li')))OR((NULL IN (v0.c0))))) INTERSECT SELECT DISTINCT COUNT(*) FROM v0, t1 WHERE (IFNULL(DISTINCT t1.c1 COLLATE BINARY, ((t1.c1) BETWEEN (v0.c2) AND (t1.c1))));
SELECT MIN(vt0.c1) FROM vt0 WHERE ('f') ORDER BY (((vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE), (- (vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, vt0.c0))) ASC  NULLS FIRST, vt0.c1, (('') NOTNULL) ASC;
SELECT MIN(vt0.c1) FROM vt0 WHERE ((('f')AND((vt0.c1 IN (CAST(vt0.c0 AS TEXT), (NOT (vt0.c0))))))) ORDER BY NULL DESC  NULLS LAST, LAST_INSERT_ROWID() ASC INTERSECT SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((((((vt0.c1)=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END, CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 END))=((((vt0.c1)LIKE(vt0.c1)), CAST(vt0.c1 AS REAL), TYPEOF(vt0.c1))))) ORDER BY NULL DESC  NULLS LAST, LAST_INSERT_ROWID() ASC;
SELECT MAX(vt0.c1) FROM vt0 INNER JOIN t1 ON (((((t1.c0)OR(t1.c2)))OR(x'')) IN ((((vt0.c1, vt0.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c2, vt0.c0, t1.c2))), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))) WHERE (t1.c0 COLLATE NOCASE);
SELECT DISTINCT MAX(vt0.c1) FROM vt0 INNER JOIN t1 ON (((((t1.c0)OR(t1.c2)))OR(x'')) IN ((((vt0.c1, vt0.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c2, vt0.c0, t1.c2))), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))) WHERE (((t1.c0 COLLATE NOCASE)AND(LIKELIHOOD((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c2))), (- (x'18')))))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 INNER JOIN t1 ON (((((t1.c0)OR(t1.c2)))OR(x'')) IN ((((vt0.c1, vt0.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c2, vt0.c0, t1.c2))), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))) WHERE (CASE UNLIKELY(vt0.c0)  WHEN CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 END THEN ((((((vt0.c1)OR(t1.c0)))OR(vt0.c0)))OR(NULL)) WHEN (((vt0.c1, vt0.c0, vt0.c0, t1.c2))<=((vt0.c1, t1.c0, 0.5422397432676856, t1.c1))) THEN vt0.c0 COLLATE BINARY WHEN ((((((vt0.c1)OR(t1.c1)))OR(t1.c0)))OR(vt0.c1)) THEN NULLIF(DISTINCT vt0.c0, t1.c0) WHEN ((t1.c0)+(vt0.c0)) THEN ((t1.c1)&(t1.c1)) END) LIMIT 0;
SELECT ALL MAX(t1.c0) FROM v0, t1, vt0 WHERE (CASE CASE t1.c1  WHEN t1.c1 THEN 0.14019992864274156 WHEN x'' THEN t1.c0 END  WHEN ((v0.c2) NOT BETWEEN (vt0.c1) AND (v0.c1)) THEN CASE v0.c2  WHEN t1.c0 THEN t1.c0 ELSE vt0.c1 END WHEN ((t1.c0) NOT BETWEEN ('N&') AND (v0.c1)) THEN t1.c2 COLLATE RTRIM ELSE CAST(t1.c2 AS REAL) END);
SELECT DISTINCT MAX(t1.c0) FROM v0, t1, vt0 WHERE (CASE CASE t1.c1  WHEN t1.c1 THEN 0.14019992864274156 WHEN x'' THEN t1.c0 END  WHEN ((v0.c2) NOT BETWEEN (vt0.c1) AND (v0.c1)) THEN CASE v0.c2  WHEN t1.c0 THEN t1.c0 ELSE vt0.c1 END WHEN ((t1.c0) NOT BETWEEN ('N&') AND (v0.c1)) THEN t1.c2 COLLATE RTRIM ELSE CAST(t1.c2 AS REAL) END) LIMIT 0X2 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM v0, t1, vt0 WHERE ((x'' IN ())) LIMIT 0X2;
SELECT ALL * FROM t1, vt0, v0 WHERE (((((((t1.c2)AND(t1.c1)))AND(t1.c1)))*(v0.c2 COLLATE BINARY)));
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((((t1.c2)AND(t1.c1)))AND(t1.c1)))*(v0.c2 COLLATE BINARY))) ORDER BY ((((NOT (v0.c0))))<=(((((vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1, v0.c1)) AND ((t1.c0, v0.c0)))))) DESC LIMIT 0X2;
SELECT ALL * FROM t1, vt0, v0 WHERE (((((((t1.c2)AND(t1.c1)))AND(t1.c1)))*(v0.c2 COLLATE BINARY)));
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((((t1.c2)AND(t1.c1)))AND(t1.c1)))*(v0.c2 COLLATE BINARY))) ORDER BY ((((NOT (v0.c0))))<=(((((vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1, v0.c1)) AND ((t1.c0, v0.c0)))))) DESC LIMIT 0X2;
SELECT * FROM v0 WHERE (((v0.c0)-(v0.c1)) COLLATE NOCASE);
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)-(v0.c1)) COLLATE NOCASE)AND(('-1083689078' IN (((((((((v0.c2)OR(v0.c0)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2))))))) INTERSECT SELECT DISTINCT * FROM v0 WHERE ((((((((((- (v0.c0)))AND(((v0.c1)GLOB(v0.c2)))))AND(((v0.c0) BETWEEN (v0.c2) AND (v0.c1)))))AND(((x'') NOTNULL))))OR(((v0.c2)<<(v0.c1)))));
SELECT * FROM v0 WHERE (((v0.c0)-(v0.c1)) COLLATE NOCASE);
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)-(v0.c1)) COLLATE NOCASE)AND(('-1083689078' IN (((((((((v0.c2)OR(v0.c0)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2))))))) INTERSECT SELECT DISTINCT * FROM v0 WHERE ((((((((((- (v0.c0)))AND(((v0.c1)GLOB(v0.c2)))))AND(((v0.c0) BETWEEN (v0.c2) AND (v0.c1)))))AND(((x'') NOTNULL))))OR(((v0.c2)<<(v0.c1)))));
SELECT * FROM t1, v0, vt0 WHERE (vt0.c0) ORDER BY ((t1.c2) IS FALSE) COLLATE BINARY DESC  NULLS FIRST, ((((v0.c0)&(v0.c0))) NOT BETWEEN (IFNULL(DISTINCT t1.c2, t1.c2)) AND (((v0.c0)<>(v0.c2))));
SELECT ALL * FROM t1, v0, vt0 WHERE (vt0.c0) ORDER BY ((t1.c2) IS FALSE) COLLATE BINARY DESC  NULLS FIRST, ((((v0.c0)&(v0.c0))) NOT BETWEEN (IFNULL(DISTINCT t1.c2, t1.c2)) AND (((v0.c0)!=(v0.c2)))) INTERSECT SELECT * FROM t1, v0, vt0 WHERE (((((((((vt0.c0)OR(t1.c2)))AND(vt0.c1)))OR(t1.c1)))GLOB(((v0.c1)OR(t1.c2))))) ORDER BY ((t1.c2) IS FALSE) COLLATE BINARY DESC  NULLS FIRST, ((((v0.c0)&(v0.c0))) NOT BETWEEN (IFNULL(DISTINCT t1.c2, t1.c2)) AND (((v0.c0)<>(v0.c2))));
SELECT * FROM t1, v0, vt0 WHERE (vt0.c0) ORDER BY ((t1.c2) IS FALSE) COLLATE BINARY DESC  NULLS FIRST, ((((v0.c0)&(v0.c0))) NOT BETWEEN (IFNULL(DISTINCT t1.c2, t1.c2)) AND (((v0.c0)<>(v0.c2))));
SELECT ALL * FROM t1, v0, vt0 WHERE (vt0.c0) ORDER BY ((t1.c2) IS FALSE) COLLATE BINARY DESC  NULLS FIRST, ((((v0.c0)&(v0.c0))) NOT BETWEEN (IFNULL(DISTINCT t1.c2, t1.c2)) AND (((v0.c0)!=(v0.c2)))) INTERSECT SELECT * FROM t1, v0, vt0 WHERE (((((((((vt0.c0)OR(t1.c2)))AND(vt0.c1)))OR(t1.c1)))GLOB(((v0.c1)OR(t1.c2))))) ORDER BY ((t1.c2) IS FALSE) COLLATE BINARY DESC  NULLS FIRST, ((((v0.c0)&(v0.c0))) NOT BETWEEN (IFNULL(DISTINCT t1.c2, t1.c2)) AND (((v0.c0)<>(v0.c2))));
SELECT ALL MIN(v0.c0) FROM vt0, v0 WHERE (((((((CASE v0.c0  WHEN '1744414291' THEN vt0.c1 ELSE vt0.c1 END)OR(((v0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(v0.c1)))AND(v0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c1, v0.c1)) AND ((v0.c1, 'eE', v0.c1))) COLLATE RTRIM  NULLS LAST, CAST(v0.c2 COLLATE BINARY AS INTEGER) DESC  NULLS FIRST;
SELECT DISTINCT MIN(v0.c0) FROM vt0, v0 WHERE (((((((((CASE v0.c0  WHEN '1744414291' THEN vt0.c1 ELSE vt0.c1 END)OR(((v0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(v0.c1)))AND(v0.c0 COLLATE NOCASE)))AND(((((((((((v0.c2)AND('-1393225757')))OR(v0.c0)))AND(vt0.c1)))AND(vt0.c0)))&(TOTAL_CHANGES()))))) ORDER BY (((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c1, v0.c1)) AND ((v0.c1, 'eE', v0.c1))) COLLATE RTRIM  NULLS LAST, CAST(v0.c2 COLLATE BINARY AS INTEGER) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(v0.c0) FROM vt0, v0 WHERE ((((v0.c0 IN (v0.c0)))|((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))))) ORDER BY (((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c1, v0.c1)) AND ((v0.c1, 'eE', v0.c1))) COLLATE RTRIM  NULLS LAST, CAST(v0.c2 COLLATE BINARY AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM v0, vt0, t1 WHERE (UPPER(((((t1.c2)OR(v0.c2)))AND(vt0.c1))));
SELECT ALL * FROM v0, vt0, t1 WHERE (UPPER(((((t1.c2)OR(v0.c2)))AND(vt0.c1))));
SELECT * FROM v0, vt0, t1 WHERE (UPPER(((((t1.c2)OR(v0.c2)))AND(vt0.c1))));
SELECT ALL * FROM v0, vt0, t1 WHERE (UPPER(((((t1.c2)OR(v0.c2)))AND(vt0.c1))));
SELECT * FROM v0, t1 WHERE ((+ (((((((v0.c2)AND(v0.c2)))AND(t1.c1)))AND(t1.c1))))) ORDER BY (((t1.c2) NOT NULL) IN ((+ (v0.c0))))  NULLS LAST;
SELECT ALL * FROM v0, t1 WHERE ((+ (((((((v0.c2)AND(v0.c2)))AND(t1.c1)))AND(t1.c1))))) ORDER BY (((v0.c1 COLLATE BINARY, v0.c2 COLLATE RTRIM))=((t1.c2 COLLATE NOCASE, ((t1.c2)||(t1.c1))))), CAST(((((v0.c0)OR(t1.c2)))OR(v0.c0)) AS REAL) DESC LIMIT 0x2 INTERSECT SELECT ALL * FROM v0, t1 WHERE (((CASE v0.c2  WHEN v0.c0 THEN v0.c2 END) IS TRUE)) ORDER BY (((v0.c1 COLLATE BINARY, v0.c2 COLLATE RTRIM))=((t1.c2 COLLATE NOCASE, ((t1.c2)||(t1.c1))))), CAST(((((v0.c0)OR(t1.c2)))OR(v0.c0)) AS REAL) DESC LIMIT 0x2;
SELECT * FROM v0, t1 WHERE ((+ (((((((v0.c2)AND(v0.c2)))AND(t1.c1)))AND(t1.c1))))) ORDER BY (((t1.c2) NOT NULL) IN ((+ (v0.c0))))  NULLS LAST;
SELECT ALL * FROM v0, t1 WHERE ((+ (((((((v0.c2)AND(v0.c2)))AND(t1.c1)))AND(t1.c1))))) ORDER BY (((v0.c1 COLLATE BINARY, v0.c2 COLLATE RTRIM))=((t1.c2 COLLATE NOCASE, ((t1.c2)||(t1.c1))))), CAST(((((v0.c0)OR(t1.c2)))OR(v0.c0)) AS REAL) DESC LIMIT 0x2 INTERSECT SELECT ALL * FROM v0, t1 WHERE (((CASE v0.c2  WHEN v0.c0 THEN v0.c2 END) IS TRUE)) ORDER BY (((v0.c1 COLLATE BINARY, v0.c2 COLLATE RTRIM))=((t1.c2 COLLATE NOCASE, ((t1.c2)||(t1.c1))))), CAST(((((v0.c0)OR(t1.c2)))OR(v0.c0)) AS REAL) DESC LIMIT 0x2;
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (((CASE WHEN t1.c2 THEN t1.c0 WHEN v0.c2 THEN v0.c2 WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END) NOT BETWEEN ((- (vt0.c1))) AND (((v0.c2) NOTNULL))));
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (((((CASE WHEN t1.c2 THEN t1.c0 WHEN v0.c2 THEN v0.c2 WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END) NOT BETWEEN ((- (vt0.c1))) AND (((v0.c2) NOTNULL))))AND(((t1.c0 IN (vt0.c1)) IN ())))) ORDER BY (((v0.c2 IN (t1.c0))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND ((v0.c0 IN (v0.c1)))), x'' DESC  NULLS FIRST INTERSECT SELECT COUNT(*) FROM v0, vt0, t1 WHERE (((((((CASE WHEN v0.c1 THEN t1.c1 ELSE v0.c1 END)OR(((t1.c0)-(t1.c2)))))AND(((vt0.c0)/(0.5468094506122495)))))OR(t1.c2))) ORDER BY (((v0.c2 IN (t1.c0))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND ((v0.c0 IN (v0.c1)))), x'' DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL)  NULLS LAST, ((CAST(vt0.c0 AS TEXT))||(vt0.c1 COLLATE NOCASE)) ASC;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL)  NULLS LAST, ((CAST(vt0.c0 AS TEXT))||(vt0.c1 COLLATE NOCASE)) ASC INTERSECT SELECT ALL * FROM vt0 WHERE ((('1211546960') NOT NULL)) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL)  NULLS LAST, ((CAST(vt0.c0 AS TEXT))||(vt0.c1 COLLATE NOCASE)) ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL)  NULLS LAST, ((CAST(vt0.c0 AS TEXT))||(vt0.c1 COLLATE NOCASE)) ASC;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL)  NULLS LAST, ((CAST(vt0.c0 AS TEXT))||(vt0.c1 COLLATE NOCASE)) ASC INTERSECT SELECT ALL * FROM vt0 WHERE ((('1211546960') NOT NULL)) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL)  NULLS LAST, ((CAST(vt0.c0 AS TEXT))||(vt0.c1 COLLATE NOCASE)) ASC;
SELECT ALL MIN(vt0.c0) FROM v0, vt0 WHERE (v0.c2 COLLATE BINARY) ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (((v0.c2)AND(v0.c1))) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST, vt0.c0, 0.056044665094190815  NULLS LAST;
SELECT DISTINCT MIN(vt0.c0) FROM v0, vt0 WHERE (((v0.c2 COLLATE BINARY)AND((NOT (((v0.c0)IS(vt0.c0))))))) ORDER BY ((0.3141732734618913) NOT BETWEEN ((('#>QivF') BETWEEN (v0.c2) AND (v0.c0))) AND (((v0.c1)!=(v0.c0)))) ASC;
SELECT MAX(v0.c0) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c1)))AND(x'07b115')))AND(v0.c0)))OR(v0.c0))) BETWEEN (((v0.c1)==(v0.c1))) AND ('-1480560719')));
SELECT MAX(v0.c0) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c1)))AND(x'07b115')))AND(v0.c0)))OR(v0.c0))) BETWEEN (((v0.c1)==(v0.c1))) AND ('-1480560719'))) LIMIT 0X0;
SELECT * FROM t1, v0 WHERE (((t1.c2) IS FALSE) COLLATE NOCASE) ORDER BY CASE WHEN (x'287f' IN (t1.c2)) THEN ((v0.c1) NOT BETWEEN (t1.c0) AND (v0.c0)) WHEN NULL THEN '-0.0' END, (((((((((+ (v0.c0)))AND(((v0.c0) BETWEEN (t1.c1) AND (v0.c0)))))OR(((v0.c1)>(v0.c2)))))AND(TRIM(DISTINCT t1.c2, t1.c2))))AND(((v0.c2)GLOB(x'c4'))));
SELECT ALL * FROM t1, v0 WHERE (((((t1.c2) IS FALSE) COLLATE NOCASE)AND((((v0.c2 IN ())) BETWEEN ((~ (v0.c2))) AND (v0.c1 COLLATE RTRIM))))) ORDER BY (((- (v0.c1))) IS TRUE) ASC, CAST(CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END AS NUMERIC) ASC LIMIT 1 INTERSECT SELECT * FROM t1, v0 WHERE ((CAST(t1.c0 AS BLOB) IN (((v0.c1)OR(v0.c1)), CAST(v0.c1 AS NUMERIC), ((v0.c1)*(v0.c2))))) ORDER BY (((- (v0.c1))) IS TRUE) ASC, CAST(CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END AS NUMERIC) ASC LIMIT 0X1;
SELECT * FROM t1, v0 WHERE (((t1.c2) IS FALSE) COLLATE NOCASE) ORDER BY CASE WHEN (x'287f' IN (t1.c2)) THEN ((v0.c1) NOT BETWEEN (t1.c0) AND (v0.c0)) WHEN NULL THEN '-0.0' END, (((((((((+ (v0.c0)))AND(((v0.c0) BETWEEN (t1.c1) AND (v0.c0)))))OR(((v0.c1)>(v0.c2)))))AND(TRIM(DISTINCT t1.c2, t1.c2))))AND(((v0.c2)GLOB(x'c4'))));
SELECT ALL * FROM t1, v0 WHERE (((((t1.c2) IS FALSE) COLLATE NOCASE)AND((((v0.c2 IN ())) BETWEEN ((~ (v0.c2))) AND (v0.c1 COLLATE RTRIM))))) ORDER BY (((- (v0.c1))) IS TRUE) ASC, CAST(CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END AS NUMERIC) ASC LIMIT 1 INTERSECT SELECT * FROM t1, v0 WHERE ((CAST(t1.c0 AS BLOB) IN (((v0.c1)OR(v0.c1)), CAST(v0.c1 AS NUMERIC), ((v0.c1)*(v0.c2))))) ORDER BY (((- (v0.c1))) IS TRUE) ASC, CAST(CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END AS NUMERIC) ASC LIMIT 0X1;
SELECT MIN(t1.c1) FROM t1, vt0, v0 WHERE (IFNULL(t1.c1, v0.c2) COLLATE BINARY);
SELECT ALL MIN(t1.c1) FROM t1, vt0, v0 WHERE (IFNULL(t1.c1, v0.c2) COLLATE BINARY) LIMIT 0x0;
SELECT MIN(v0.c0) FROM v0, t1, vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS REAL));
SELECT DISTINCT MIN(v0.c0) FROM v0, t1, vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS REAL)) ORDER BY (((+ (vt0.c0)))OR(((t1.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST, CASE WHEN vt0.c0 THEN t1.c1 WHEN t1.c1 THEN v0.c2 WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (((UPPER(DISTINCT v0.c2))==((v0.c0 IN (v0.c0, v0.c1))))) ORDER BY ((CAST(v0.c0 AS BLOB))<<(v0.c2)) ASC;
SELECT * FROM v0 NOT INDEXED, vt0 WHERE (((((UPPER(DISTINCT v0.c2))=((v0.c0 IN (v0.c0, v0.c1)))))AND(CASE WHEN ((0Xffffffffd0a5a5e6) ISNULL) THEN INSTR(v0.c0, vt0.c0) WHEN ((((v0.c2)AND(v0.c1)))OR(v0.c2)) THEN vt0.c0 COLLATE RTRIM WHEN v0.c0 THEN ((v0.c2)GLOB(v0.c2)) END))) ORDER BY ((CAST(v0.c0 AS BLOB))<<(v0.c2)) ASC LIMIT 0x1;
SELECT ALL * FROM v0, vt0 WHERE (((UPPER(DISTINCT v0.c2))==((v0.c0 IN (v0.c0, v0.c1))))) ORDER BY ((CAST(v0.c0 AS BLOB))<<(v0.c2)) ASC;
SELECT * FROM v0 NOT INDEXED, vt0 WHERE (((((UPPER(DISTINCT v0.c2))=((v0.c0 IN (v0.c0, v0.c1)))))AND(CASE WHEN ((0Xffffffffd0a5a5e6) ISNULL) THEN INSTR(v0.c0, vt0.c0) WHEN ((((v0.c2)AND(v0.c1)))OR(v0.c2)) THEN vt0.c0 COLLATE RTRIM WHEN v0.c0 THEN ((v0.c2)GLOB(v0.c2)) END))) ORDER BY ((CAST(v0.c0 AS BLOB))<<(v0.c2)) ASC LIMIT 0x1;
SELECT * FROM t1 WHERE (x'') ORDER BY ((((t1.c2)GLOB(t1.c2))) BETWEEN (((((((((t1.c2)OR(t1.c1)))OR(t1.c0)))OR(x'3b')))AND(t1.c2))) AND (((t1.c0)!=('1909464343'))));
SELECT DISTINCT * FROM t1 WHERE (x'') ORDER BY NULL ASC  NULLS FIRST, ((((t1.c1) BETWEEN (t1.c1) AND (115292246))) BETWEEN (LIKELY(t1.c1)) AND (((t1.c2) NOTNULL))) DESC, (((((((t1.c2)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)) IN (((((((((t1.c0)AND(x'98')))AND(t1.c2)))OR(t1.c0)))AND(t1.c0))));
SELECT * FROM t1 WHERE (x'') ORDER BY ((((t1.c2)GLOB(t1.c2))) BETWEEN (((((((((t1.c2)OR(t1.c1)))OR(t1.c0)))OR(x'3b')))AND(t1.c2))) AND (((t1.c0)!=('1909464343'))));
SELECT DISTINCT * FROM t1 WHERE (x'') ORDER BY NULL ASC  NULLS FIRST, ((((t1.c1) BETWEEN (t1.c1) AND (115292246))) BETWEEN (LIKELY(t1.c1)) AND (((t1.c2) NOTNULL))) DESC, (((((((t1.c2)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)) IN (((((((((t1.c0)AND(x'98')))AND(t1.c2)))OR(t1.c0)))AND(t1.c0))));
SELECT ALL * FROM vt0, t1, v0 WHERE (((((v0.c2)/(v0.c0)))|(v0.c1 COLLATE NOCASE))) ORDER BY CAST(((vt0.c1)OR(v0.c2)) AS TEXT) DESC;
SELECT * FROM vt0, t1, v0 WHERE (((((v0.c2)/(v0.c0)))|(v0.c1 COLLATE NOCASE))) ORDER BY CAST(CASE WHEN vt0.c0 THEN t1.c2 WHEN vt0.c0 THEN t1.c0 ELSE t1.c2 END AS NUMERIC)  NULLS LAST, (- (((v0.c2)%(t1.c2)))) DESC LIMIT 1 INTERSECT SELECT * FROM vt0 NOT INDEXED, t1, v0 WHERE ((((((v0.c1, vt0.c0)) NOT BETWEEN ((NULL, v0.c1)) AND ((v0.c1, v0.c1)))) IS FALSE)) ORDER BY CAST(CASE WHEN vt0.c0 THEN t1.c2 WHEN vt0.c0 THEN t1.c0 ELSE t1.c2 END AS NUMERIC)  NULLS LAST, (- (((v0.c2)%(t1.c2)))) DESC LIMIT 0x1;
SELECT ALL * FROM vt0, t1, v0 WHERE (((((v0.c2)/(v0.c0)))|(v0.c1 COLLATE NOCASE))) ORDER BY CAST(((vt0.c1)OR(v0.c2)) AS TEXT) DESC;
SELECT * FROM vt0, t1, v0 WHERE (((((v0.c2)/(v0.c0)))|(v0.c1 COLLATE NOCASE))) ORDER BY CAST(CASE WHEN vt0.c0 THEN t1.c2 WHEN vt0.c0 THEN t1.c0 ELSE t1.c2 END AS NUMERIC)  NULLS LAST, (- (((v0.c2)%(t1.c2)))) DESC LIMIT 1 INTERSECT SELECT * FROM vt0 NOT INDEXED, t1, v0 WHERE ((((((v0.c1, vt0.c0)) NOT BETWEEN ((NULL, v0.c1)) AND ((v0.c1, v0.c1)))) IS FALSE)) ORDER BY CAST(CASE WHEN vt0.c0 THEN t1.c2 WHEN vt0.c0 THEN t1.c0 ELSE t1.c2 END AS NUMERIC)  NULLS LAST, (- (((v0.c2)%(t1.c2)))) DESC LIMIT 0x1;
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (((v0.c2) BETWEEN (v0.c1) AND (t1.c1)) COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM v0, vt0, t1 WHERE (((v0.c2) BETWEEN (v0.c1) AND (t1.c1)) COLLATE RTRIM) LIMIT 0;
SELECT ALL MIN(v0.c1) FROM v0 WHERE (((v0.c0)AND(v0.c0 COLLATE BINARY))) ORDER BY (((v0.c1 IN ())) IS TRUE), ((((v0.c1) BETWEEN (v0.c2) AND (v0.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT DISTINCT MIN(v0.c1) FROM v0 WHERE (((((v0.c0)AND(v0.c0 COLLATE BINARY)))AND((((v0.c2)) NOT BETWEEN ((((v0.c0)IS(v0.c1)))) AND ((v0.c0 COLLATE BINARY)))))) ORDER BY CAST(((v0.c0)IS NOT(v0.c2)) AS NUMERIC) ASC, CASE WHEN CAST(v0.c2 AS BLOB) THEN (v0.c2 IN (v0.c2)) WHEN ((NULL) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN '' END LIMIT 0 INTERSECT SELECT DISTINCT MIN(v0.c1) FROM v0 WHERE (((((v0.c1 IN (v0.c1, v0.c1)), CASE WHEN v0.c0 THEN v0.c1 END))<((((v0.c1) NOTNULL), TRIM(v0.c2, v0.c1))))) ORDER BY CAST(((v0.c0)IS NOT(v0.c2)) AS NUMERIC) ASC, CASE WHEN CAST(v0.c2 AS BLOB) THEN (v0.c2 IN (v0.c2)) WHEN ((NULL) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN '' END LIMIT 0x0;
SELECT ALL * FROM vt0, t1 CROSS JOIN v0 ON ((((v0.c1)OR(t1.c1)))OR((((t1.c1, v0.c0, v0.c2, v0.c1))<((v0.c0, v0.c0, vt0.c1, vt0.c0))))) WHERE (v0.c2 COLLATE BINARY);
SELECT ALL * FROM vt0, t1 CROSS JOIN v0 ON ((((v0.c1)OR(t1.c1)))OR((((t1.c1, v0.c0, v0.c2, v0.c1))<((v0.c0, v0.c0, vt0.c1, vt0.c0))))) WHERE (v0.c2 COLLATE BINARY) ORDER BY ((LIKELIHOOD(v0.c0, v0.c0)) NOT BETWEEN (CASE t1.c2  WHEN v0.c2 THEN v0.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN '808120973' THEN v0.c0 ELSE vt0.c0 END) AND (((vt0.c0)<>(v0.c1)))) DESC  NULLS FIRST, CAST((((t1.c0, v0.c0, v0.c2, v0.c1))<=((vt0.c1, t1.c0, v0.c0, v0.c2))) AS REAL) ASC  NULLS FIRST LIMIT 4 INTERSECT SELECT ALL * FROM vt0, t1 CROSS JOIN v0 ON ((((v0.c1)OR(t1.c1)))OR((((t1.c1, v0.c0, v0.c2, v0.c1))<((v0.c0, v0.c0, vt0.c1, vt0.c0))))) WHERE ((((v0.c1, v0.c1)) BETWEEN ((((((((v0.c0)AND(v0.c2)))AND(v0.c0)))AND(t1.c2)), v0.c2 COLLATE NOCASE)) AND ((((v0.c1)%(t1.c1)), '1579820152')))) ORDER BY ((LIKELIHOOD(v0.c0, v0.c0)) NOT BETWEEN (CASE t1.c2  WHEN v0.c2 THEN v0.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN '808120973' THEN v0.c0 ELSE vt0.c0 END) AND (((vt0.c0)<>(v0.c1)))) DESC  NULLS FIRST, CAST((((t1.c0, v0.c0, v0.c2, v0.c1))<=((vt0.c1, t1.c0, v0.c0, v0.c2))) AS REAL) ASC  NULLS FIRST LIMIT 4;
SELECT ALL * FROM vt0, t1 CROSS JOIN v0 ON ((((v0.c1)OR(t1.c1)))OR((((t1.c1, v0.c0, v0.c2, v0.c1))<((v0.c0, v0.c0, vt0.c1, vt0.c0))))) WHERE (v0.c2 COLLATE BINARY);
SELECT ALL * FROM vt0, t1 CROSS JOIN v0 ON ((((v0.c1)OR(t1.c1)))OR((((t1.c1, v0.c0, v0.c2, v0.c1))<((v0.c0, v0.c0, vt0.c1, vt0.c0))))) WHERE (v0.c2 COLLATE BINARY) ORDER BY ((LIKELIHOOD(v0.c0, v0.c0)) NOT BETWEEN (CASE t1.c2  WHEN v0.c2 THEN v0.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN '808120973' THEN v0.c0 ELSE vt0.c0 END) AND (((vt0.c0)<>(v0.c1)))) DESC  NULLS FIRST, CAST((((t1.c0, v0.c0, v0.c2, v0.c1))<=((vt0.c1, t1.c0, v0.c0, v0.c2))) AS REAL) ASC  NULLS FIRST LIMIT 4 INTERSECT SELECT ALL * FROM vt0, t1 CROSS JOIN v0 ON ((((v0.c1)OR(t1.c1)))OR((((t1.c1, v0.c0, v0.c2, v0.c1))<((v0.c0, v0.c0, vt0.c1, vt0.c0))))) WHERE ((((v0.c1, v0.c1)) BETWEEN ((((((((v0.c0)AND(v0.c2)))AND(v0.c0)))AND(t1.c2)), v0.c2 COLLATE NOCASE)) AND ((((v0.c1)%(t1.c1)), '1579820152')))) ORDER BY ((LIKELIHOOD(v0.c0, v0.c0)) NOT BETWEEN (CASE t1.c2  WHEN v0.c2 THEN v0.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN '808120973' THEN v0.c0 ELSE vt0.c0 END) AND (((vt0.c0)<>(v0.c1)))) DESC  NULLS FIRST, CAST((((t1.c0, v0.c0, v0.c2, v0.c1))<=((vt0.c1, t1.c0, v0.c0, v0.c2))) AS REAL) ASC  NULLS FIRST LIMIT 4;
SELECT * FROM t1, v0 WHERE ((((v0.c1, t1.c2, v0.c2)) NOT BETWEEN (((('''t{w05}#H') NOT BETWEEN (v0.c2) AND (v0.c2)), (- (v0.c1)), SQLITE_COMPILEOPTION_USED(t1.c0))) AND (((~ (t1.c2)), ((v0.c0)>=(t1.c0)), ((v0.c0) BETWEEN (t1.c1) AND (v0.c1)))))) ORDER BY ((json(t1.c0))|(v0.c1)), ((x'9c')-(0.863170157130883)) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1, v0 WHERE ((((v0.c1, t1.c2, v0.c2)) NOT BETWEEN (((('''t{w05}#H') NOT BETWEEN (v0.c2) AND (v0.c2)), (- (v0.c1)), SQLITE_COMPILEOPTION_USED(t1.c0))) AND (((~ (t1.c2)), ((v0.c0)>=(t1.c0)), ((v0.c0) BETWEEN (t1.c1) AND (v0.c1)))))) ORDER BY ((json(t1.c0))|(v0.c1)), ((x'9c')-(0.863170157130883)) DESC  NULLS LAST LIMIT 1;
SELECT * FROM t1, v0 WHERE ((((v0.c1, t1.c2, v0.c2)) NOT BETWEEN (((('''t{w05}#H') NOT BETWEEN (v0.c2) AND (v0.c2)), (- (v0.c1)), SQLITE_COMPILEOPTION_USED(t1.c0))) AND (((~ (t1.c2)), ((v0.c0)>=(t1.c0)), ((v0.c0) BETWEEN (t1.c1) AND (v0.c1)))))) ORDER BY ((json(t1.c0))|(v0.c1)), ((x'9c')-(0.863170157130883)) DESC  NULLS LAST;
SELECT MIN(t1.c0) FROM t1 WHERE (((((t1.c2)|(t1.c2))) BETWEEN ((t1.c1 IN (t1.c2, t1.c2))) AND (0.9964050107015158))) ORDER BY (~ (((t1.c0)==(t1.c2)))) ASC, UPPER(0x38ad52bb)  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((t1.c2)|(t1.c2))) BETWEEN ((t1.c1 IN (t1.c2, t1.c2))) AND (0.9964050107015158)))AND(t1.c2))) ORDER BY (- (t1.c1)) COLLATE RTRIM;
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON CAST((((vt0.c1, vt0.c0, v0.c2)) BETWEEN ((v0.c1, vt0.c1, v0.c0)) AND ((vt0.c1, vt0.c0, v0.c2))) AS BLOB) WHERE (load_extension(x'19322ea4' COLLATE BINARY, vt0.c0)) ORDER BY ((((0.07092453200230664)AND(v0.c1 COLLATE RTRIM)))OR('QI\c떳I'))  NULLS FIRST, (((vt0.c1)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((v0.c1) IS FALSE))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON CAST((((vt0.c1, vt0.c0, v0.c2)) BETWEEN ((v0.c1, vt0.c1, v0.c0)) AND ((vt0.c1, vt0.c0, v0.c2))) AS BLOB) WHERE (((load_extension(x'19322ea4' COLLATE BINARY, vt0.c0))AND(((v0.c0) NOT BETWEEN (v0.c2) AND (vt0.c0)) COLLATE RTRIM))) ORDER BY ((NULL)&(CASE 950883003  WHEN 'Wzk' THEN v0.c2 WHEN vt0.c0 THEN vt0.c1 END))  NULLS FIRST, TRIM(CAST(v0.c0 AS REAL)) DESC INTERSECT SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON CAST((((vt0.c1, vt0.c0, v0.c2)) BETWEEN ((v0.c1, vt0.c1, v0.c0)) AND ((vt0.c1, vt0.c0, v0.c2))) AS BLOB) WHERE (LIKELY(ROUND(vt0.c1, v0.c2))) ORDER BY ((NULL)&(CASE 950883003  WHEN 'Wzk' THEN v0.c2 WHEN vt0.c0 THEN vt0.c1 END))  NULLS FIRST, TRIM(CAST(v0.c0 AS REAL)) DESC;
SELECT * FROM v0, vt0 WHERE (((v0.c2)<>(vt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2)<(vt0.c1)) COLLATE NOCASE)AND(((((((v0.c0)AND(vt0.c0)))OR(x'7ce6d64e'))) IS TRUE)))) ORDER BY vt0.c1 ASC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM v0, vt0 WHERE (CAST(((((((((v0.c1)OR(v0.c2)))AND(v0.c2)))AND(v0.c0)))AND(v0.c2)) AS INTEGER)) ORDER BY vt0.c1 ASC  NULLS LAST LIMIT 0;
SELECT * FROM v0, vt0 WHERE (((v0.c2)<>(vt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2)<(vt0.c1)) COLLATE NOCASE)AND(((((((v0.c0)AND(vt0.c0)))OR(x'7ce6d64e'))) IS TRUE)))) ORDER BY vt0.c1 ASC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM v0, vt0 WHERE (CAST(((((((((v0.c1)OR(v0.c2)))AND(v0.c2)))AND(v0.c0)))AND(v0.c2)) AS INTEGER)) ORDER BY vt0.c1 ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 INNER JOIN v0 ON (~ (((((vt0.c1)AND(t1.c2)))OR(x'6e4c')))) INNER JOIN vt0 ON (((- (v0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (((t1.c0)IS(vt0.c1)))) WHERE (((t1.c0) NOT NULL) COLLATE RTRIM) ORDER BY CAST(vt0.c1 AS BLOB), CAST(t1.c1 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST, t1.c1  NULLS LAST;
SELECT DISTINCT * FROM t1 INNER JOIN v0 ON (~ (((((vt0.c1)AND(t1.c2)))OR(x'6e4c')))) INNER JOIN vt0 ON (((- (v0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (((t1.c0)IS(vt0.c1)))) WHERE (((t1.c0) NOT NULL) COLLATE RTRIM) ORDER BY CAST(vt0.c1 AS BLOB), CAST(t1.c1 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST, t1.c1  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 INNER JOIN v0 ON (~ (((((vt0.c1)AND(t1.c2)))OR(x'6e4c')))) INNER JOIN vt0 ON (((- (v0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (((t1.c0)IS(vt0.c1)))) WHERE (((v0.c2)/(vt0.c1)) COLLATE RTRIM) ORDER BY CAST(vt0.c1 AS BLOB), CAST(t1.c1 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST, t1.c1  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 INNER JOIN v0 ON (~ (((((vt0.c1)AND(t1.c2)))OR(x'6e4c')))) INNER JOIN vt0 ON (((- (v0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (((t1.c0)IS(vt0.c1)))) WHERE (((t1.c0) NOT NULL) COLLATE RTRIM) ORDER BY CAST(vt0.c1 AS BLOB), CAST(t1.c1 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST, t1.c1  NULLS LAST;
SELECT DISTINCT * FROM t1 INNER JOIN v0 ON (~ (((((vt0.c1)AND(t1.c2)))OR(x'6e4c')))) INNER JOIN vt0 ON (((- (v0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (((t1.c0)IS(vt0.c1)))) WHERE (((t1.c0) NOT NULL) COLLATE RTRIM) ORDER BY CAST(vt0.c1 AS BLOB), CAST(t1.c1 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST, t1.c1  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 INNER JOIN v0 ON (~ (((((vt0.c1)AND(t1.c2)))OR(x'6e4c')))) INNER JOIN vt0 ON (((- (v0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (((t1.c0)IS(vt0.c1)))) WHERE (((v0.c2)/(vt0.c1)) COLLATE RTRIM) ORDER BY CAST(vt0.c1 AS BLOB), CAST(t1.c1 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST, t1.c1  NULLS LAST LIMIT 0x0;
SELECT * FROM t1, vt0 WHERE ((- (((t1.c1)%(t1.c1))))) ORDER BY ((((((((x'd4')AND(json(vt0.c1))))AND((- (t1.c2)))))AND(t1.c0 COLLATE NOCASE)))OR((- (t1.c0))))  NULLS FIRST, vt0.c0 DESC;
SELECT DISTINCT * FROM t1, vt0 WHERE ((- (((t1.c1)%(t1.c1))))) ORDER BY t1.c0  NULLS FIRST, ((vt0.c0) BETWEEN (((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c0))) AND ((~ (t1.c2))))  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (((vt0.c0 IN (t1.c0)) IN ())) ORDER BY t1.c0  NULLS FIRST, ((vt0.c0) BETWEEN (((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c0))) AND ((~ (t1.c2))))  NULLS LAST LIMIT 0x0;
SELECT * FROM t1, vt0 WHERE ((- (((t1.c1)%(t1.c1))))) ORDER BY ((((((((x'd4')AND(json(vt0.c1))))AND((- (t1.c2)))))AND(t1.c0 COLLATE NOCASE)))OR((- (t1.c0))))  NULLS FIRST, vt0.c0 DESC;
SELECT DISTINCT * FROM t1, vt0 WHERE ((- (((t1.c1)%(t1.c1))))) ORDER BY t1.c0  NULLS FIRST, ((vt0.c0) BETWEEN (((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c0))) AND ((~ (t1.c2))))  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (((vt0.c0 IN (t1.c0)) IN ())) ORDER BY t1.c0  NULLS FIRST, ((vt0.c0) BETWEEN (((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c0))) AND ((~ (t1.c2))))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1, vt0, v0 WHERE (t1.c1);
SELECT ALL * FROM t1, vt0, v0 WHERE (t1.c1) ORDER BY (((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((v0.c0 IN (v0.c0, v0.c1, v0.c1))))) DESC  NULLS FIRST INTERSECT SELECT * FROM t1, vt0, v0 WHERE (((CAST(0xffffffffebf456b9 AS NUMERIC)) IS TRUE)) ORDER BY (((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((v0.c0 IN (v0.c0, v0.c1, v0.c1))))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, vt0, v0 WHERE (t1.c1);
SELECT ALL * FROM t1, vt0, v0 WHERE (t1.c1) ORDER BY (((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((v0.c0 IN (v0.c0, v0.c1, v0.c1))))) DESC  NULLS FIRST INTERSECT SELECT * FROM t1, vt0, v0 WHERE (((CAST(0xffffffffebf456b9 AS NUMERIC)) IS TRUE)) ORDER BY (((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((v0.c0 IN (v0.c0, v0.c1, v0.c1))))) DESC  NULLS FIRST;
SELECT MIN(v0.c2) FROM vt0 INNER JOIN v0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((((((('')AND(v0.c2)))AND(vt0.c1)))OR(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))) WHERE (0.559032630005835 COLLATE RTRIM) ORDER BY (((NULL, ((vt0.c0) NOT NULL), CASE vt0.c0  WHEN vt0.c1 THEN v0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE v0.c2 END, CAST(v0.c2 AS BLOB)))!=((((v0.c0)>=(v0.c1)), CAST(v0.c0 AS NUMERIC), COALESCE(v0.c1, vt0.c1, vt0.c0, v0.c2, v0.c2), ((v0.c1)>(1576123895))))) ASC, ((((vt0.c1 IN ()), ((((x'1d')AND(v0.c2)))OR(v0.c2)), 'f\}*'))!=((CAST(vt0.c0 AS TEXT), ((v0.c2)<<(vt0.c0)), CASE v0.c0  WHEN vt0.c1 THEN v0.c1 END)));
SELECT DISTINCT MIN(v0.c2) FROM vt0 INNER JOIN v0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((((((('')AND(v0.c2)))AND(vt0.c1)))OR(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))) WHERE (((0.559032630005835 COLLATE RTRIM)AND(v0.c1))) ORDER BY (((NULL, ((vt0.c0) NOT NULL), CASE vt0.c0  WHEN vt0.c1 THEN v0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE v0.c2 END, CAST(v0.c2 AS BLOB)))!=((((v0.c0)>=(v0.c1)), CAST(v0.c0 AS NUMERIC), COALESCE(v0.c1, vt0.c1, vt0.c0, v0.c2, v0.c2), ((v0.c1)>(0X5df1bdf7))))) ASC, ((((vt0.c1 IN ()), ((((x'1d')AND(v0.c2)))OR(v0.c2)), 'f\}*'))<>((CAST(vt0.c0 AS TEXT), ((v0.c2)<<(vt0.c0)), CASE v0.c0  WHEN vt0.c1 THEN v0.c1 END))) LIMIT 0X0;
SELECT * FROM t1 WHERE (((((((0.445386604260368)OR(CAST(t1.c2 AS TEXT))))OR((((t1.c0, t1.c1)) BETWEEN ((t1.c2, t1.c0)) AND ((t1.c1, t1.c0))))))AND((((t1.c1, t1.c0, t1.c1))=((x'', t1.c1, t1.c0)))))) ORDER BY (~ ((+ (t1.c1)))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((0.445386604260368)OR(CAST(t1.c2 AS TEXT))))OR((((t1.c0, t1.c1)) BETWEEN ((t1.c2, t1.c0)) AND ((t1.c1, t1.c0))))))AND((((t1.c1, t1.c0, t1.c1))=((x'', t1.c1, t1.c0)))))) ORDER BY ((((+ (t1.c1))))>((((t1.c2) NOTNULL)))) ASC  NULLS FIRST, t1.c0 DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((0.445386604260368)OR(CAST(t1.c2 AS TEXT))))OR((((t1.c0, t1.c1)) BETWEEN ((t1.c2, t1.c0)) AND ((t1.c1, t1.c0))))))AND((((t1.c1, t1.c0, t1.c1))=((x'', t1.c1, t1.c0)))))) ORDER BY (~ ((+ (t1.c1)))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((0.445386604260368)OR(CAST(t1.c2 AS TEXT))))OR((((t1.c0, t1.c1)) BETWEEN ((t1.c2, t1.c0)) AND ((t1.c1, t1.c0))))))AND((((t1.c1, t1.c0, t1.c1))=((x'', t1.c1, t1.c0)))))) ORDER BY ((((+ (t1.c1))))>((((t1.c2) NOTNULL)))) ASC  NULLS FIRST, t1.c0 DESC  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY);
SELECT DISTINCT * FROM t1, vt0 WHERE (((((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY)AND((- ((((t1.c2))<=((vt0.c0))))))));
SELECT ALL * FROM t1, vt0 WHERE (((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY);
SELECT DISTINCT * FROM t1, vt0 WHERE (((((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY)AND((- ((((t1.c2))<=((vt0.c0))))))));
SELECT COUNT(*) FROM v0 WHERE (LOWER(DISTINCT v0.c1) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (((LOWER(DISTINCT v0.c1) COLLATE BINARY)AND(((((v0.c1) BETWEEN (v0.c0) AND (NULL))) NOT BETWEEN (0.5093920250379461) AND (CAST(v0.c1 AS BLOB)))))) ORDER BY v0.c1 ASC  NULLS LAST, CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 END COLLATE BINARY ASC, (NOT ('-128168833')) ASC LIMIT 0X5;
SELECT * FROM v0 CROSS JOIN vt0 ON (((v0.c1, vt0.c1)) NOT BETWEEN (((v0.c1 IN ()), ((((((vt0.c1)OR(v0.c0)))OR(vt0.c0)))OR(v0.c1)))) AND ((CAST(v0.c0 AS NUMERIC), ((v0.c2) BETWEEN (vt0.c1) AND (v0.c2))))) WHERE (((CAST(vt0.c0 AS NUMERIC))-(TYPEOF(v0.c1))));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (((v0.c1, vt0.c1)) NOT BETWEEN (((v0.c1 IN ()), ((((((vt0.c1)OR(v0.c0)))OR(vt0.c0)))OR(v0.c1)))) AND ((CAST(v0.c0 AS NUMERIC), ((v0.c2) BETWEEN (vt0.c1) AND (v0.c2))))) WHERE (((((CAST(vt0.c0 AS NUMERIC))-(TYPEOF(v0.c1))))AND((((v0.c2)<<(NULL)) IN ())))) INTERSECT SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (((v0.c1, vt0.c1)) NOT BETWEEN (((v0.c1 IN ()), ((((((vt0.c1)OR(v0.c0)))OR(vt0.c0)))OR(v0.c1)))) AND ((CAST(v0.c0 AS NUMERIC), ((v0.c2) BETWEEN (vt0.c1) AND (v0.c2))))) WHERE (((((((((TRIM(DISTINCT vt0.c1, vt0.c1))OR(CAST(v0.c0 AS TEXT))))AND(LIKELY(DISTINCT vt0.c1))))AND((v0.c0 IN (v0.c2)))))OR(((((((((((v0.c1)OR(v0.c1)))AND(vt0.c0)))AND(x'')))AND(v0.c1)))AND(v0.c1)))));
SELECT * FROM v0 CROSS JOIN vt0 ON (((v0.c1, vt0.c1)) NOT BETWEEN (((v0.c1 IN ()), ((((((vt0.c1)OR(v0.c0)))OR(vt0.c0)))OR(v0.c1)))) AND ((CAST(v0.c0 AS NUMERIC), ((v0.c2) BETWEEN (vt0.c1) AND (v0.c2))))) WHERE (((CAST(vt0.c0 AS NUMERIC))-(TYPEOF(v0.c1))));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (((v0.c1, vt0.c1)) NOT BETWEEN (((v0.c1 IN ()), ((((((vt0.c1)OR(v0.c0)))OR(vt0.c0)))OR(v0.c1)))) AND ((CAST(v0.c0 AS NUMERIC), ((v0.c2) BETWEEN (vt0.c1) AND (v0.c2))))) WHERE (((((CAST(vt0.c0 AS NUMERIC))-(TYPEOF(v0.c1))))AND((((v0.c2)<<(NULL)) IN ())))) INTERSECT SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (((v0.c1, vt0.c1)) NOT BETWEEN (((v0.c1 IN ()), ((((((vt0.c1)OR(v0.c0)))OR(vt0.c0)))OR(v0.c1)))) AND ((CAST(v0.c0 AS NUMERIC), ((v0.c2) BETWEEN (vt0.c1) AND (v0.c2))))) WHERE (((((((((TRIM(DISTINCT vt0.c1, vt0.c1))OR(CAST(v0.c0 AS TEXT))))AND(LIKELY(DISTINCT vt0.c1))))AND((v0.c0 IN (v0.c2)))))OR(((((((((((v0.c1)OR(v0.c1)))AND(vt0.c0)))AND(x'')))AND(v0.c1)))AND(v0.c1)))));
SELECT MIN(t1.c1) FROM t1, vt0, v0 WHERE (LIKELIHOOD(DISTINCT v0.c0, ((NULL)AND(v0.c0)))) ORDER BY v0.c0 DESC  NULLS FIRST, ((((v0.c0)<>(t1.c0)))OR(CASE WHEN x'2a' THEN t1.c0 WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END)) DESC  NULLS LAST, 'g';
SELECT DISTINCT MIN(t1.c1) FROM t1, vt0, v0 WHERE (LIKELIHOOD(DISTINCT v0.c0, ((NULL)AND(v0.c0)))) ORDER BY v0.c0 DESC  NULLS FIRST, ((((v0.c0)<>(t1.c0)))OR(CASE WHEN x'2a' THEN t1.c0 WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END)) DESC  NULLS LAST, 'g' INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1, vt0, v0 WHERE ((((v0.c2) NOTNULL) IN (0xffffffffcf1d12cb))) ORDER BY v0.c0 DESC  NULLS FIRST, ((((v0.c0)!=(t1.c0)))OR(CASE WHEN x'2a' THEN t1.c0 WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END)) DESC  NULLS LAST, 'g';
SELECT MAX(t1.c2) FROM t1 WHERE (CAST(((t1.c2)=(t1.c0)) AS TEXT));
SELECT ALL MAX(t1.c2) FROM t1 WHERE (((CAST(((t1.c2)=(t1.c0)) AS TEXT))AND(((((((472236244)OR(t1.c1)))OR(t1.c0))) BETWEEN (((t1.c2)&(t1.c1))) AND (((((((t1.c0)OR(t1.c1)))AND(t1.c1)))OR(0.5023244049517531))))))) ORDER BY ((((t1.c2)<=(t1.c0))) ISNULL) DESC  NULLS FIRST, CAST(((t1.c0) ISNULL) AS NUMERIC), CAST(t1.c0 AS REAL) COLLATE BINARY ASC  NULLS FIRST, ((CASE WHEN x'' THEN t1.c0 END)GLOB(((t1.c1)*(t1.c0))))  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL MAX(t1.c2) FROM t1 WHERE (LOWER(DISTINCT CAST(t1.c1 AS REAL))) ORDER BY ((((t1.c2)<=(t1.c0))) ISNULL) DESC  NULLS FIRST, CAST(((t1.c0) ISNULL) AS NUMERIC), CAST(t1.c0 AS REAL) COLLATE BINARY ASC  NULLS FIRST, ((CASE WHEN x'' THEN t1.c0 END)GLOB(((t1.c1)*(t1.c0))))  NULLS LAST LIMIT 1;
SELECT MIN(v0.c2) FROM vt0 INNER JOIN v0 ON (NOT (HEX(v0.c1))) WHERE ((((+ (v0.c1)))/(CAST(v0.c1 AS TEXT)))) ORDER BY vt0.c1  NULLS LAST;
SELECT DISTINCT MIN(v0.c2) FROM vt0 INNER JOIN v0 ON (NOT (HEX(v0.c1))) WHERE ((((((+ (v0.c1)))/(CAST(v0.c1 AS TEXT))))AND(((CAST(vt0.c1 AS BLOB))/(CAST(-1.015592478E9 AS BLOB)))))) ORDER BY ((v0.c2)|(vt0.c1)) COLLATE NOCASE DESC, CASE vt0.c1 COLLATE BINARY  WHEN v0.c2 COLLATE RTRIM THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c1) NOT NULL) END LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(v0.c2) FROM vt0 INNER JOIN v0 ON (NOT (HEX(v0.c1))) WHERE ((((('2138575335') IS FALSE)) NOT BETWEEN ((0.21097172371536999 IN ())) AND (((v0.c1) BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY ((v0.c2)|(vt0.c1)) COLLATE NOCASE DESC, CASE vt0.c1 COLLATE BINARY  WHEN v0.c2 COLLATE RTRIM THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c1) NOT NULL) END LIMIT 0X1;
SELECT ALL MAX(v0.c1) FROM v0 WHERE (LENGTH(v0.c0 COLLATE NOCASE)) ORDER BY v0.c2 ASC;
SELECT MAX(v0.c1) FROM v0 WHERE (((LENGTH(v0.c0 COLLATE NOCASE))AND(CASE v0.c2  WHEN (((v0.c2, v0.c2, v0.c1, x'', v0.c0))>((v0.c1, v0.c1, v0.c1, v0.c0, v0.c2))) THEN TRIM(v0.c1) WHEN ((v0.c1) BETWEEN (v0.c2) AND ('-111518474')) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)) WHEN ((((((((((v0.c2)OR(v0.c2)))AND(v0.c2)))OR(v0.c2)))OR(v0.c2)))OR(v0.c1)) THEN ((v0.c2) NOTNULL) WHEN ((((((v0.c0)OR(v0.c1)))OR(v0.c1)))OR(v0.c2)) THEN ((v0.c1)LIKE(v0.c2)) END))) ORDER BY v0.c2 ASC LIMIT 0X1 INTERSECT SELECT MAX(v0.c1) FROM v0 WHERE ((((+ (v0.c0)))%(CAST(0x6b801fe1 AS BLOB)))) ORDER BY v0.c2 ASC LIMIT 0x1;
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (((((v0.c1)+(0.6282224466575264)))&(((((t1.c0)AND(v0.c2)))AND(t1.c0)))));
SELECT DISTINCT COUNT(*) FROM v0, vt0, t1 WHERE (((((v0.c1)+(0.6282224466575264)))&(((((t1.c0)AND(v0.c2)))AND(t1.c0))))) ORDER BY CASE WHEN vt0.c0 THEN v0.c2 END COLLATE NOCASE;
SELECT ALL MIN(t1.c0) FROM v0, t1 WHERE ((((((t1.c2) BETWEEN (v0.c0) AND (v0.c2))))>=(((((v0.c1, NULL, t1.c0)) NOT BETWEEN ((t1.c1, t1.c2, NULL)) AND ((v0.c1, t1.c1, v0.c2))))))) ORDER BY CASE HEX(v0.c2)  WHEN (((t1.c2, NULL))<>((1.092579787E9, v0.c1))) THEN (t1.c1 IN ()) WHEN ((((v0.c2)AND(t1.c0)))OR(v0.c1)) THEN IFNULL(DISTINCT v0.c1, v0.c0) WHEN ((t1.c1)<=(v0.c0)) THEN (((t1.c2, t1.c1))>=((v0.c1, v0.c0))) END  NULLS LAST, (((t1.c2, v0.c2)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c1) AND (t1.c2)), ((((v0.c0)OR(t1.c1)))AND(t1.c0)))) AND (((v0.c1 IN (t1.c1)), '41028994')))  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM v0, t1 WHERE ((((((t1.c2) BETWEEN (v0.c0) AND (v0.c2))))>=(((((v0.c1, NULL, t1.c0)) NOT BETWEEN ((t1.c1, t1.c2, NULL)) AND ((v0.c1, t1.c1, v0.c2))))))) ORDER BY CASE WHEN ((t1.c1)>(v0.c2)) THEN 0.39136151917807493 END, ((((0.5035986536868896)==(v0.c0)))+(((((((v0.c1)OR(0.7061208012178406)))OR('-188391506')))OR(''))))  NULLS FIRST, CAST(((v0.c0)OR(t1.c1)) AS NUMERIC);
SELECT ALL * FROM vt0, t1 NATURAL JOIN v0 WHERE (LOWER(DISTINCT ((t1.c1)OR(v0.c2)))) ORDER BY t1.c1, (NULLIF(DISTINCT t1.c0, v0.c0) IN ((~ (v0.c2))));
SELECT DISTINCT * FROM vt0, t1 NATURAL JOIN v0 WHERE (LOWER(DISTINCT ((t1.c1)OR(v0.c2)))) ORDER BY t1.c1, (NULLIF(DISTINCT t1.c0, v0.c0) IN ((~ (v0.c2)))) LIMIT 0;
SELECT ALL * FROM vt0, t1 NATURAL JOIN v0 WHERE (LOWER(DISTINCT ((t1.c1)OR(v0.c2)))) ORDER BY t1.c1, (NULLIF(DISTINCT t1.c0, v0.c0) IN ((~ (v0.c2))));
SELECT DISTINCT * FROM vt0, t1 NATURAL JOIN v0 WHERE (LOWER(DISTINCT ((t1.c1)OR(v0.c2)))) ORDER BY t1.c1, (NULLIF(DISTINCT t1.c0, v0.c0) IN ((~ (v0.c2)))) LIMIT 0;
SELECT COUNT(*) FROM t1, vt0, v0 WHERE ((((~ (t1.c2))) IS FALSE)) ORDER BY CASE HEX(v0.c1)  WHEN ((((((((((vt0.c1)OR(v0.c0)))AND(v0.c2)))AND(t1.c1)))OR(v0.c0)))AND(v0.c2)) THEN CAST(vt0.c0 AS BLOB) WHEN v0.c1 THEN ((t1.c0)/(t1.c2)) WHEN (((v0.c0, t1.c1))>=((vt0.c0, vt0.c1))) THEN ((t1.c1) BETWEEN (v0.c0) AND (v0.c1)) END, CAST((vt0.c0 IN ()) AS REAL);
SELECT COUNT(*) FROM t1, vt0, v0 WHERE ((((((~ (t1.c2))) IS FALSE))AND((NOT (CAST(v0.c2 AS BLOB)))))) ORDER BY CASE WHEN (v0.c1 IN ()) THEN ((t1.c1)!=(v0.c1)) END DESC LIMIT 0;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<(((NULL) NOT NULL))));
SELECT MIN(vt0.c0) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<(((NULL) NOT NULL)))) ORDER BY vt0.c0 ASC LIMIT 0x1 INTERSECT SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (CASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c1 IN (vt0.c0)) WHEN LIKELY(0.23945185986769146) THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c1, vt0.c0))==((vt0.c1, vt0.c0))) THEN ((vt0.c1) NOT NULL) END) ORDER BY vt0.c0 ASC LIMIT 1;
SELECT * FROM t1, vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c2 THEN vt0.c0 WHEN 0.2641981130313594 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN 0.44548958324190213 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE x'06' END)/((~ (x'')))) WHERE ((~ ('0.40034195088324054'))) ORDER BY (((('gKk)')*(v0.c2)))IS((- (v0.c2))))  NULLS LAST;
SELECT ALL * FROM t1, vt0 INNER JOIN v0 ON ((CASE WHEN v0.c2 THEN vt0.c0 WHEN 0.2641981130313594 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN 0.44548958324190213 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE x'06' END)/((~ (x'')))) WHERE ((~ ('0.40034195088324054'))) ORDER BY ((((t1.c0)<<(v0.c1))) NOTNULL) ASC LIMIT 0X1 INTERSECT SELECT ALL * FROM t1, vt0 INNER JOIN v0 ON ((CASE WHEN v0.c2 THEN vt0.c0 WHEN 0.2641981130313594 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN 0.44548958324190213 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE x'06' END)/((~ (x'')))) WHERE ((((v0.c2, t1.c0, t1.c0, t1.c2)) BETWEEN ((CASE WHEN NULL THEN v0.c1 ELSE v0.c1 END, load_extension(vt0.c1), CASE v0.c1  WHEN t1.c1 THEN v0.c1 ELSE vt0.c0 END, ((((((((vt0.c0)AND(NULL)))AND(t1.c1)))OR(v0.c1)))OR(v0.c2)))) AND ((vt0.c0, (0.20921173888960787 IN ()), vt0.c0 COLLATE RTRIM, ((vt0.c0)<>(t1.c0)))))) ORDER BY ((((t1.c0)<<(v0.c1))) NOTNULL) ASC LIMIT 1;
SELECT * FROM t1, vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c2 THEN vt0.c0 WHEN 0.2641981130313594 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN 0.44548958324190213 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE x'06' END)/((~ (x'')))) WHERE ((~ ('0.40034195088324054'))) ORDER BY (((('gKk)')*(v0.c2)))IS((- (v0.c2))))  NULLS LAST;
SELECT ALL * FROM t1, vt0 INNER JOIN v0 ON ((CASE WHEN v0.c2 THEN vt0.c0 WHEN 0.2641981130313594 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN 0.44548958324190213 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE x'06' END)/((~ (x'')))) WHERE ((~ ('0.40034195088324054'))) ORDER BY ((((t1.c0)<<(v0.c1))) NOTNULL) ASC LIMIT 0X1 INTERSECT SELECT ALL * FROM t1, vt0 INNER JOIN v0 ON ((CASE WHEN v0.c2 THEN vt0.c0 WHEN 0.2641981130313594 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN 0.44548958324190213 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE x'06' END)/((~ (x'')))) WHERE ((((v0.c2, t1.c0, t1.c0, t1.c2)) BETWEEN ((CASE WHEN NULL THEN v0.c1 ELSE v0.c1 END, load_extension(vt0.c1), CASE v0.c1  WHEN t1.c1 THEN v0.c1 ELSE vt0.c0 END, ((((((((vt0.c0)AND(NULL)))AND(t1.c1)))OR(v0.c1)))OR(v0.c2)))) AND ((vt0.c0, (0.20921173888960787 IN ()), vt0.c0 COLLATE RTRIM, ((vt0.c0)<>(t1.c0)))))) ORDER BY ((((t1.c0)<<(v0.c1))) NOTNULL) ASC LIMIT 1;
SELECT MIN(t1.c0) FROM t1 WHERE (((((((t1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c1)) COLLATE BINARY);
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((((t1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c1)) COLLATE BINARY)AND((((((t1.c1, t1.c2))<=((t1.c2, t1.c1))))!=((0.18500206242933415 IN (t1.c2))))))) LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((t1.c1)LIKE(t1.c2))) BETWEEN ((t1.c1 IN ())) AND (((t1.c2) BETWEEN (t1.c2) AND (t1.c0))))) LIMIT 0X0;
SELECT ALL * FROM t1, vt0, v0 WHERE (((((t1.c1))==((NULL))) IN ())) ORDER BY (((((vt0.c1))<=((v0.c1)))) ISNULL) ASC, t1.c0  NULLS LAST, (((v0.c0, t1.c0)) NOT BETWEEN ((load_extension(t1.c1), ((((t1.c1)AND(t1.c0)))OR(t1.c1)))) AND ((TRIM(t1.c2, v0.c0), 0Xfffffffff95a5cf6)))  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((((t1.c1))=((NULL))) IN ()))AND((((t1.c1)) NOT BETWEEN ((NULL)) AND ((v0.c0))) COLLATE BINARY))) ORDER BY (((((vt0.c1))<=((v0.c1)))) ISNULL) ASC, t1.c0  NULLS LAST, (((v0.c0, t1.c0)) NOT BETWEEN ((load_extension(t1.c1), ((((t1.c1)AND(t1.c0)))OR(t1.c1)))) AND ((TRIM(t1.c2, v0.c0), 0xfffffffff95a5cf6)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 NOT INDEXED, vt0, v0 WHERE (json_array_length(CASE WHEN v0.c1 THEN t1.c1 ELSE vt0.c1 END)) ORDER BY (((((vt0.c1))<=((v0.c1)))) ISNULL) ASC, t1.c0  NULLS LAST, (((v0.c0, t1.c0)) NOT BETWEEN ((load_extension(t1.c1), ((((t1.c1)AND(t1.c0)))OR(t1.c1)))) AND ((TRIM(t1.c2, v0.c0), -111518474)))  NULLS FIRST;
SELECT ALL * FROM t1, vt0, v0 WHERE (((((t1.c1))==((NULL))) IN ())) ORDER BY (((((vt0.c1))<=((v0.c1)))) ISNULL) ASC, t1.c0  NULLS LAST, (((v0.c0, t1.c0)) NOT BETWEEN ((load_extension(t1.c1), ((((t1.c1)AND(t1.c0)))OR(t1.c1)))) AND ((TRIM(t1.c2, v0.c0), 0Xfffffffff95a5cf6)))  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((((t1.c1))=((NULL))) IN ()))AND((((t1.c1)) NOT BETWEEN ((NULL)) AND ((v0.c0))) COLLATE BINARY))) ORDER BY (((((vt0.c1))<=((v0.c1)))) ISNULL) ASC, t1.c0  NULLS LAST, (((v0.c0, t1.c0)) NOT BETWEEN ((load_extension(t1.c1), ((((t1.c1)AND(t1.c0)))OR(t1.c1)))) AND ((TRIM(t1.c2, v0.c0), 0xfffffffff95a5cf6)))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 NOT INDEXED, vt0, v0 WHERE (json_array_length(CASE WHEN v0.c1 THEN t1.c1 ELSE vt0.c1 END)) ORDER BY (((((vt0.c1))<=((v0.c1)))) ISNULL) ASC, t1.c0  NULLS LAST, (((v0.c0, t1.c0)) NOT BETWEEN ((load_extension(t1.c1), ((((t1.c1)AND(t1.c0)))OR(t1.c1)))) AND ((TRIM(t1.c2, v0.c0), -111518474)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (CASE 0.18148599789884967  WHEN CASE v0.c2  WHEN v0.c1 THEN t1.c1 WHEN t1.c0 THEN v0.c0 END THEN ((vt0.c1)*(vt0.c1)) ELSE (((vt0.c0, t1.c0, v0.c2))<=((vt0.c1, vt0.c1, vt0.c1))) END);
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (((CASE 0.18148599789884967  WHEN CASE v0.c2  WHEN v0.c1 THEN t1.c1 WHEN t1.c0 THEN v0.c0 END THEN ((vt0.c1)*(vt0.c1)) ELSE (((vt0.c0, t1.c0, v0.c2))<=((vt0.c1, vt0.c1, vt0.c1))) END)AND((((0.8448115361401342)-(v0.c2)) IN ())))) ORDER BY t1.c2  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL COUNT(*) FROM v0, vt0, t1 WHERE ('370490061') ORDER BY t1.c2  NULLS LAST LIMIT 0;
SELECT * FROM vt0, v0, t1 WHERE (NULL) ORDER BY t1.c1 COLLATE NOCASE  NULLS LAST, (json_extract(t1.c1, v0.c1) IN (((t1.c0)OR(v0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, t1 WHERE (((NULL)AND(((CASE t1.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 END) BETWEEN (v0.c2) AND (((t1.c1) BETWEEN (t1.c2) AND (t1.c0))))))) ORDER BY ((((((CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END)OR(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))))AND(((v0.c2) NOT BETWEEN (vt0.c1) AND ('dt')))))OR((NOT (t1.c1)))) DESC, IFNULL(CASE t1.c0  WHEN v0.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c1 WHEN v0.c2 THEN t1.c2 WHEN t1.c0 THEN v0.c2 WHEN vt0.c1 THEN v0.c2 END, (vt0.c1 IN ()));
SELECT * FROM vt0, v0, t1 WHERE (NULL) ORDER BY t1.c1 COLLATE NOCASE  NULLS LAST, (json_extract(t1.c1, v0.c1) IN (((t1.c0)OR(v0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, t1 WHERE (((NULL)AND(((CASE t1.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 END) BETWEEN (v0.c2) AND (((t1.c1) BETWEEN (t1.c2) AND (t1.c0))))))) ORDER BY ((((((CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END)OR(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))))AND(((v0.c2) NOT BETWEEN (vt0.c1) AND ('dt')))))OR((NOT (t1.c1)))) DESC, IFNULL(CASE t1.c0  WHEN v0.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c1 WHEN v0.c2 THEN t1.c2 WHEN t1.c0 THEN v0.c2 WHEN vt0.c1 THEN v0.c2 END, (vt0.c1 IN ()));
SELECT ALL MAX(t1.c2) FROM vt0, t1 WHERE ((((~ (t1.c2)))<>(LTRIM(vt0.c0, t1.c2))));
SELECT DISTINCT MAX(t1.c2) FROM vt0, t1 WHERE ((((~ (t1.c2)))<>(LTRIM(vt0.c0, t1.c2)))) ORDER BY ((x'')|((t1.c2 IN ()))) LIMIT 0X2 INTERSECT SELECT DISTINCT MAX(t1.c2) FROM vt0, t1 WHERE (((t1.c1) BETWEEN (vt0.c1) AND (t1.c2)) COLLATE RTRIM) ORDER BY ((x'')|((t1.c2 IN ()))) LIMIT 0X2;
SELECT ALL * FROM v0, t1 WHERE ((((((((t1.c1 IN ()))AND(v0.c1)))OR(CASE WHEN t1.c0 THEN v0.c1 ELSE 4.71276848E8 END)))OR(CAST(t1.c1 AS BLOB)))) ORDER BY (((((v0.c0) BETWEEN (t1.c2) AND (v0.c0))))<((CAST(t1.c2 AS NUMERIC)))) DESC, CASE v0.c1  WHEN v0.c1 THEN t1.c1 END COLLATE NOCASE COLLATE RTRIM, ((((((((CAST(v0.c0 AS NUMERIC))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((((NULL))>=((t1.c2))))))OR(((t1.c2) IS TRUE))))OR(LOWER(v0.c0))) DESC;
SELECT DISTINCT * FROM v0, t1 WHERE ((((((((((t1.c1 IN ()))AND(v0.c1)))OR(CASE WHEN t1.c0 THEN v0.c1 ELSE 4.71276848E8 END)))OR(CAST(t1.c1 AS BLOB))))AND((((NOT (t1.c1)))|(t1.c0))))) ORDER BY (+ (CAST(v0.c1 AS BLOB)))  NULLS FIRST, ((CAST(v0.c2 AS REAL))IS(CAST(v0.c1 AS BLOB))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE ((v0.c0 COLLATE RTRIM IN (v0.c1 COLLATE NOCASE))) ORDER BY (+ (CAST(v0.c1 AS BLOB)))  NULLS FIRST, ((CAST(v0.c2 AS REAL))IS(CAST(v0.c1 AS BLOB))) ASC LIMIT 0;
SELECT ALL * FROM v0, t1 WHERE ((((((((t1.c1 IN ()))AND(v0.c1)))OR(CASE WHEN t1.c0 THEN v0.c1 ELSE 4.71276848E8 END)))OR(CAST(t1.c1 AS BLOB)))) ORDER BY (((((v0.c0) BETWEEN (t1.c2) AND (v0.c0))))<((CAST(t1.c2 AS NUMERIC)))) DESC, CASE v0.c1  WHEN v0.c1 THEN t1.c1 END COLLATE NOCASE COLLATE RTRIM, ((((((((CAST(v0.c0 AS NUMERIC))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((((NULL))>=((t1.c2))))))OR(((t1.c2) IS TRUE))))OR(LOWER(v0.c0))) DESC;
SELECT DISTINCT * FROM v0, t1 WHERE ((((((((((t1.c1 IN ()))AND(v0.c1)))OR(CASE WHEN t1.c0 THEN v0.c1 ELSE 4.71276848E8 END)))OR(CAST(t1.c1 AS BLOB))))AND((((NOT (t1.c1)))|(t1.c0))))) ORDER BY (+ (CAST(v0.c1 AS BLOB)))  NULLS FIRST, ((CAST(v0.c2 AS REAL))IS(CAST(v0.c1 AS BLOB))) ASC LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE ((v0.c0 COLLATE RTRIM IN (v0.c1 COLLATE NOCASE))) ORDER BY (+ (CAST(v0.c1 AS BLOB)))  NULLS FIRST, ((CAST(v0.c2 AS REAL))IS(CAST(v0.c1 AS BLOB))) ASC LIMIT 0;
SELECT ALL COUNT(*) FROM vt0, t1 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT ((v0.c2)>=(t1.c1)), -1015592478) WHERE (0.009749833220359605 COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM vt0, t1 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT ((v0.c2)>=(t1.c1)), 0xffffffffc37749e2) WHERE (0.009749833220359605 COLLATE RTRIM) ORDER BY (((((v0.c0, vt0.c1))!=((v0.c1, v0.c0))))&(load_extension(t1.c2, t1.c2))), COALESCE(((t1.c1) NOT BETWEEN (']\\''?-制') AND (t1.c1)), ((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)), ((((((v0.c0)OR(v0.c2)))AND(t1.c1)))AND(v0.c0)))  NULLS FIRST, ((((v0.c0)&(v0.c2))) NOT BETWEEN (((t1.c1) ISNULL)) AND ((((v0.c1, v0.c1, t1.c2)) BETWEEN ((0.05022199038651931, vt0.c0, v0.c2)) AND ((v0.c2, v0.c2, v0.c2))))) DESC, CASE '-1520699329'  WHEN ((v0.c0)AND(t1.c1)) THEN (vt0.c1 IN ()) ELSE (((t1.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END ASC LIMIT 0x1;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((CAST(t1.c2 AS REAL)) NOT BETWEEN (t1.c0) AND (x''))) ORDER BY t1.c1 DESC  NULLS LAST, ((NULL)|(((((((((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))AND(t1.c2)))AND(t1.c2)))OR(0.45233999123177093)))AND(t1.c1)))AND(0.3608507751790049))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((CAST(t1.c2 AS REAL)) NOT BETWEEN (t1.c0) AND (x'')))AND((((+ (t1.c0)))!=(((t1.c2)OR(t1.c0))))))) ORDER BY ((((((t1.c1)AND(t1.c0)))OR(NULL))) NOT BETWEEN (t1.c1) AND ((+ (t1.c2)))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((('0.6080637593689103')==(t1.c2))) ORDER BY ((((((t1.c1)AND(t1.c0)))OR(NULL))) NOT BETWEEN (t1.c1) AND ((+ (t1.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((((+ (v0.c1)))OR(v0.c1)))AND(CAST(v0.c0 AS INTEGER)))) ORDER BY ((((v0.c1)IS(v0.c2)))>>((- (v0.c0)))) ASC, (NOT (((v0.c2)<(v0.c2)))) ASC  NULLS FIRST, NULLIF(DISTINCT CASE WHEN v0.c2 THEN v0.c0 END, ((v0.c2) ISNULL))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM v0 WHERE ((((((+ (v0.c1)))OR(v0.c1)))AND(CAST(v0.c0 AS INTEGER)))) ORDER BY ((((v0.c1)IS(v0.c2)))>>((- (v0.c0)))) ASC, (NOT (((v0.c2)<(v0.c2)))) ASC  NULLS FIRST, NULLIF(DISTINCT CASE WHEN v0.c2 THEN v0.c0 END, ((v0.c2) ISNULL))  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM v0 WHERE ((- (((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c2))))) ORDER BY ((((v0.c1)IS(v0.c2)))>>((- (v0.c0)))) ASC, (NOT (((v0.c2)<(v0.c2)))) ASC  NULLS FIRST, NULLIF(DISTINCT CASE WHEN v0.c2 THEN v0.c0 END, ((v0.c2) ISNULL))  NULLS FIRST;
SELECT * FROM v0, t1, vt0 WHERE (((x'09' COLLATE RTRIM) BETWEEN ((t1.c1 IN ())) AND (((v0.c1)||(v0.c1))))) ORDER BY 0X1bf7d0e0;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((x'09' COLLATE RTRIM) BETWEEN ((t1.c1 IN ())) AND (((v0.c1)||(v0.c1))))) ORDER BY 469225696 LIMIT 0;
SELECT * FROM v0, t1, vt0 WHERE (((x'09' COLLATE RTRIM) BETWEEN ((t1.c1 IN ())) AND (((v0.c1)||(v0.c1))))) ORDER BY 0X1bf7d0e0;
SELECT ALL MAX(t1.c0) FROM t1, vt0 WHERE ((((NULL, vt0.c1)) BETWEEN ((t1.c2, '115292246')) AND ((SUBSTR(t1.c1, t1.c1), vt0.c0 COLLATE RTRIM)))) ORDER BY ((((((((((((ABS(t1.c1))AND(CAST(vt0.c1 AS INTEGER))))OR((((vt0.c1))==((vt0.c0))))))OR(t1.c1)))OR(((((((t1.c2)OR(t1.c2)))AND(vt0.c0)))AND('.Qa>r|f')))))AND(((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c1)))))OR(((t1.c0)OR(vt0.c1)))) ASC  NULLS LAST;
SELECT DISTINCT MAX(t1.c0) FROM t1, vt0 WHERE ((((((NULL, vt0.c1)) BETWEEN ((t1.c2, '115292246')) AND ((SUBSTR(t1.c1, t1.c1), vt0.c0 COLLATE RTRIM))))AND(t1.c0 COLLATE RTRIM))) ORDER BY NULL DESC LIMIT 0X2 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1, vt0 WHERE (((vt0.c0)LIKE(t1.c1)) COLLATE BINARY) ORDER BY NULL DESC LIMIT 2;
SELECT ALL * FROM t1 WHERE (((ABS(DISTINCT t1.c1))<=(((t1.c2)*(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((ABS(DISTINCT t1.c1))<=(((t1.c2)*(t1.c1))))) ORDER BY TRIM(DISTINCT ((((t1.c0)OR(t1.c2)))OR(t1.c0)), (NOT (t1.c2))) DESC  NULLS LAST, (((t1.c1)>>(t1.c1)) IN (load_extension(t1.c2, t1.c2), CAST(t1.c1 AS INTEGER))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((ABS(DISTINCT t1.c1))<=(((t1.c2)*(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((ABS(DISTINCT t1.c1))<=(((t1.c2)*(t1.c1))))) ORDER BY TRIM(DISTINCT ((((t1.c0)OR(t1.c2)))OR(t1.c0)), (NOT (t1.c2))) DESC  NULLS LAST, (((t1.c1)>>(t1.c1)) IN (load_extension(t1.c2, t1.c2), CAST(t1.c1 AS INTEGER))) LIMIT 0;
SELECT ALL MAX(v0.c2) FROM v0, t1 WHERE ((((((t1.c2))>=((t1.c1)))) ISNULL)) ORDER BY (((((((((((((v0.c1, t1.c1))>=((t1.c0, v0.c2))))OR(((v0.c1) NOT BETWEEN (v0.c0) AND (t1.c1)))))AND((x'dcc1' IN (t1.c0)))))OR(v0.c0 COLLATE BINARY)))OR(json(v0.c0))))OR(((t1.c0) BETWEEN (t1.c2) AND (v0.c0))))  NULLS LAST, (((((t1.c0)) BETWEEN ((v0.c0)) AND ((-1675189967))))GLOB(CAST(t1.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT DISTINCT MAX(v0.c2) FROM v0, t1 WHERE ((((((((t1.c2))=((t1.c1)))) ISNULL))AND(t1.c1))) ORDER BY (((- (v0.c0)))<<((x'' IN (t1.c2)))) DESC, ((((((((((((((v0.c1)AND(t1.c1)))OR(v0.c2)))AND(x'')))AND(t1.c1)))AND(v0.c2)))AND(v0.c1))) NOTNULL);
SELECT ALL * FROM t1, vt0, v0 WHERE (ABS(CAST(vt0.c0 AS INTEGER)));
SELECT ALL * FROM t1, vt0, v0 WHERE (((ABS(CAST(vt0.c0 AS INTEGER)))AND(CAST((((vt0.c1, t1.c1))!=((vt0.c1, t1.c2))) AS REAL)))) LIMIT 0;
SELECT ALL * FROM t1, vt0, v0 WHERE (ABS(CAST(vt0.c0 AS INTEGER)));
SELECT ALL * FROM t1, vt0, v0 WHERE (((ABS(CAST(vt0.c0 AS INTEGER)))AND(CAST((((vt0.c1, t1.c1))!=((vt0.c1, t1.c2))) AS REAL)))) LIMIT 0;
SELECT ALL COUNT(*) FROM t1, vt0 NOT INDEXED WHERE (CAST(NULL AS REAL)) ORDER BY (((vt0.c1) BETWEEN (t1.c2) AND (t1.c2)) IN (vt0.c1 COLLATE RTRIM)), t1.c1 DESC  NULLS LAST, CAST(NULL AS INTEGER)  NULLS LAST, 0.5782924896472604;
SELECT COUNT(*) FROM t1, vt0 WHERE (((CAST(NULL AS REAL))AND(CASE WHEN vt0.c0 THEN ((0Xffffffffef90ac44) BETWEEN (vt0.c1) AND (t1.c0)) WHEN CAST(t1.c2 AS TEXT) THEN ((t1.c0) NOTNULL) WHEN t1.c0 THEN LTRIM(t1.c1) END))) ORDER BY ((((t1.c1)%(x'0790'))) IS TRUE), CAST(((t1.c1)OR(vt0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT MAX(vt0.c1) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END END);
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((CASE WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END END)AND(CAST(vt0.c1 COLLATE NOCASE AS TEXT)))) ORDER BY (+ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))), (- (CAST(vt0.c1 AS BLOB)))  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM v0, vt0 WHERE ((~ (CASE v0.c0  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END))) ORDER BY CHAR(v0.c2, v0.c2, vt0.c0, vt0.c1) COLLATE RTRIM DESC  NULLS FIRST, ((((v0.c0)AND(v0.c0)))>>(CASE WHEN v0.c2 THEN 0.9854198822688387 WHEN v0.c1 THEN NULL END)) ASC;
SELECT ALL MIN(vt0.c1) FROM v0, vt0 WHERE ((~ (CASE v0.c0  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END))) ORDER BY CHAR(v0.c2, v0.c2, vt0.c0, vt0.c1) COLLATE RTRIM DESC  NULLS FIRST, ((((v0.c0)AND(v0.c0)))>>(CASE WHEN v0.c2 THEN 0.9854198822688387 WHEN v0.c1 THEN NULL END)) ASC LIMIT 0x2;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (vt0.c0);
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC) ASC, CAST(((vt0.c1)IS NOT(vt0.c0)) AS BLOB) DESC  NULLS FIRST, ((((((vt0.c1)AND(CAST(vt0.c0 AS TEXT))))AND(vt0.c0)))OR(LIKELIHOOD(vt0.c0, vt0.c1)));
SELECT ALL * FROM v0 WHERE (((((v0.c1)>>(v0.c0))) IS TRUE));
SELECT * FROM v0 WHERE (((((((v0.c1)>>(v0.c0))) IS TRUE))AND(((((((v0.c0, v0.c2)) BETWEEN ((v0.c0, v0.c2)) AND ((v0.c1, v0.c1)))))==((load_extension(v0.c1, v0.c1))))))) ORDER BY ((CAST(x'4c1f' AS NUMERIC))AND(((v0.c2) IS TRUE)))  NULLS LAST, ((NULL COLLATE RTRIM) NOT NULL) ASC;
SELECT ALL * FROM v0 WHERE (((((v0.c1)>>(v0.c0))) IS TRUE));
SELECT * FROM v0 WHERE (((((((v0.c1)>>(v0.c0))) IS TRUE))AND(((((((v0.c0, v0.c2)) BETWEEN ((v0.c0, v0.c2)) AND ((v0.c1, v0.c1)))))==((load_extension(v0.c1, v0.c1))))))) ORDER BY ((CAST(x'4c1f' AS NUMERIC))AND(((v0.c2) IS TRUE)))  NULLS LAST, ((NULL COLLATE RTRIM) NOT NULL) ASC;
SELECT COUNT(*) FROM vt0, v0, t1 WHERE (((((((CAST(t1.c0 AS TEXT))AND((NOT (t1.c2)))))OR((t1.c1 IN (v0.c1, t1.c1)))))AND((((v0.c0, NULL))==((v0.c2, t1.c1))))));
SELECT DISTINCT COUNT(*) FROM vt0, v0, t1 WHERE (((((((((CAST(t1.c0 AS TEXT))AND((NOT (t1.c2)))))OR((t1.c1 IN (v0.c1)))))AND((((v0.c0, NULL))==((v0.c2, t1.c1))))))AND(CAST(NULL AS INTEGER)))) LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, v0, t1 WHERE ((((((((((((vt0.c0)OR(-1.13589847E9)))AND(v0.c2)))AND(0X2b284766)))AND(v0.c2)))AND(v0.c0)) IN ())) LIMIT 0X1;
SELECT * FROM v0 WHERE (((((v0.c2)+(v0.c1))) NOT BETWEEN (0xfffffffffc409992) AND (LIKELIHOOD(v0.c1, v0.c2))));
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c2)+(v0.c1))) NOT BETWEEN (0Xfffffffffc409992) AND (LIKELIHOOD(v0.c1, v0.c2))))AND(((((((((((((((v0.c2)AND(v0.c1)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2 COLLATE RTRIM)))OR(((v0.c0)<<(0Xffffffffb009e061)))))OR(x'7c')))OR(CAST('' AS REAL)))))) ORDER BY (((CASE v0.c2  WHEN v0.c2 THEN v0.c0 END))<=(((v0.c1 IN ())))) ASC, CAST(((v0.c1) NOT NULL) AS REAL) ASC;
SELECT * FROM v0 WHERE (((((v0.c2)+(v0.c1))) NOT BETWEEN (0xfffffffffc409992) AND (LIKELIHOOD(v0.c1, v0.c2))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (CASE vt0.c0  WHEN v0.c0 THEN '-1287748498' WHEN v0.c1 THEN v0.c1 END IN (vt0.c0)) WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((v0.c0) IS TRUE))<>('469225696')) DESC;
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (CASE vt0.c0  WHEN v0.c0 THEN '-1287748498' WHEN v0.c1 THEN v0.c1 END IN (vt0.c0)) WHERE (((vt0.c0 COLLATE NOCASE)AND((((+ (vt0.c0))) NOT BETWEEN (((vt0.c0)>(v0.c2))) AND (CASE WHEN v0.c2 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END))))) ORDER BY CAST((NOT ('-1196239477')) AS INTEGER) ASC INTERSECT SELECT * FROM vt0 CROSS JOIN v0 ON (CASE vt0.c0  WHEN v0.c0 THEN '-1287748498' WHEN v0.c1 THEN v0.c1 END IN (vt0.c0)) WHERE (CAST((+ (v0.c1)) AS NUMERIC)) ORDER BY CAST((NOT ('-1196239477')) AS INTEGER) ASC;
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (CASE vt0.c0  WHEN v0.c0 THEN '-1287748498' WHEN v0.c1 THEN v0.c1 END IN (vt0.c0)) WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((v0.c0) IS TRUE))<>('469225696')) DESC;
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (CASE vt0.c0  WHEN v0.c0 THEN '-1287748498' WHEN v0.c1 THEN v0.c1 END IN (vt0.c0)) WHERE (((vt0.c0 COLLATE NOCASE)AND((((+ (vt0.c0))) NOT BETWEEN (((vt0.c0)>(v0.c2))) AND (CASE WHEN v0.c2 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END))))) ORDER BY CAST((NOT ('-1196239477')) AS INTEGER) ASC INTERSECT SELECT * FROM vt0 CROSS JOIN v0 ON (CASE vt0.c0  WHEN v0.c0 THEN '-1287748498' WHEN v0.c1 THEN v0.c1 END IN (vt0.c0)) WHERE (CAST((+ (v0.c1)) AS NUMERIC)) ORDER BY CAST((NOT ('-1196239477')) AS INTEGER) ASC;
SELECT ALL MAX(v0.c1) FROM vt0 LEFT OUTER JOIN v0 ON (('1662360983') NOT BETWEEN (((v0.c1)<>(v0.c1))) AND (x'')) WHERE ((((v0.c2 IN (v0.c0)))==(CAST(vt0.c1 AS INTEGER))));
SELECT DISTINCT MAX(v0.c1) FROM vt0 LEFT OUTER JOIN v0 ON (('1662360983') NOT BETWEEN (((v0.c1)!=(v0.c1))) AND (x'')) WHERE ((((((v0.c2 IN (v0.c0)))==(CAST(vt0.c1 AS INTEGER))))AND(((((v0.c0)<=(vt0.c1))) NOTNULL)))) LIMIT 0X4 INTERSECT SELECT DISTINCT MAX(v0.c1) FROM vt0 LEFT OUTER JOIN v0 ON (('1662360983') NOT BETWEEN (((v0.c1)<>(v0.c1))) AND (x'')) WHERE (((v0.c0 COLLATE RTRIM)LIKE(((((vt0.c0)OR(v0.c2)))AND(v0.c1))))) LIMIT 4;
SELECT * FROM v0, vt0 WHERE (((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(vt0.c1)) COLLATE BINARY) ORDER BY CASE WHEN v0.c2 THEN CAST(v0.c2 AS NUMERIC) WHEN (- (v0.c1)) THEN ((((((v0.c2)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c1)) WHEN ((v0.c0)>=(vt0.c0)) THEN '1076981978' WHEN '337239948' THEN LAST_INSERT_ROWID() ELSE vt0.c1 COLLATE RTRIM END ASC;
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(vt0.c1)) COLLATE BINARY) ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))OR((v0.c0 IN (v0.c0)))))OR(((vt0.c1) ISNULL)))  NULLS FIRST, ((CAST(v0.c1 AS INTEGER)) BETWEEN (0x67184eb) AND (((vt0.c1)<>(vt0.c1)))) ASC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(vt0.c1)) COLLATE BINARY) ORDER BY CASE WHEN v0.c2 THEN CAST(v0.c2 AS NUMERIC) WHEN (- (v0.c1)) THEN ((((((v0.c2)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c1)) WHEN ((v0.c0)>=(vt0.c0)) THEN '1076981978' WHEN '337239948' THEN LAST_INSERT_ROWID() ELSE vt0.c1 COLLATE RTRIM END ASC;
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(vt0.c1)) COLLATE BINARY) ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))OR((v0.c0 IN (v0.c0)))))OR(((vt0.c1) ISNULL)))  NULLS FIRST, ((CAST(v0.c1 AS INTEGER)) BETWEEN (0x67184eb) AND (((vt0.c1)<>(vt0.c1)))) ASC  NULLS LAST;
SELECT MIN(vt0.c1) FROM vt0 WHERE ('Av)');
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((('Av)')AND(vt0.c0))) ORDER BY (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, x'0bb6')) AND (('9G', vt0.c1))) COLLATE NOCASE, ((((vt0.c0)AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c1)-('1301929007'))))  NULLS LAST LIMIT 3;
SELECT ALL * FROM vt0, v0 WHERE (v0.c0 COLLATE BINARY COLLATE BINARY);
SELECT DISTINCT * FROM vt0, v0 WHERE (((v0.c0 COLLATE BINARY COLLATE BINARY)AND(((NULL)GLOB(x'8b'))))) ORDER BY ((CAST(v0.c0 AS BLOB))GLOB(v0.c0)) ASC, ((CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END)*(((vt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))) ASC  NULLS FIRST, (((~ (v0.c0))) BETWEEN ((v0.c0 IN ('0.299182091808748'))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) INTERSECT SELECT DISTINCT * FROM vt0, v0 WHERE ((((((v0.c1) NOTNULL)))>=((((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))))) ORDER BY ((CAST(v0.c0 AS BLOB))GLOB(v0.c0)) ASC, ((CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END)*(((vt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))) ASC  NULLS FIRST, (((~ (v0.c0))) BETWEEN ((v0.c0 IN ('0.299182091808748'))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0, v0 WHERE (v0.c0 COLLATE BINARY COLLATE BINARY);
SELECT DISTINCT * FROM vt0, v0 WHERE (((v0.c0 COLLATE BINARY COLLATE BINARY)AND(((NULL)GLOB(x'8b'))))) ORDER BY ((CAST(v0.c0 AS BLOB))GLOB(v0.c0)) ASC, ((CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END)*(((vt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))) ASC  NULLS FIRST, (((~ (v0.c0))) BETWEEN ((v0.c0 IN ('0.299182091808748'))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) INTERSECT SELECT DISTINCT * FROM vt0, v0 WHERE ((((((v0.c1) NOTNULL)))>=((((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))))) ORDER BY ((CAST(v0.c0 AS BLOB))GLOB(v0.c0)) ASC, ((CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END)*(((vt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))) ASC  NULLS FIRST, (((~ (v0.c0))) BETWEEN ((v0.c0 IN ('0.299182091808748'))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT MIN(v0.c2) FROM v0 WHERE ((- (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))));
SELECT MIN(v0.c2) FROM v0 WHERE ((- (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2))))) ORDER BY ((v0.c0)<(0.23945185986769146)) COLLATE BINARY DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT ALL MIN(v0.c2) FROM v0 WHERE (((v0.c2 COLLATE RTRIM) NOT BETWEEN ('-1052937140') AND (((v0.c0)|(x''))))) ORDER BY ((v0.c0)<(0.23945185986769146)) COLLATE BINARY DESC  NULLS FIRST LIMIT 0;
SELECT MIN(t1.c1) FROM vt0, t1, v0 WHERE ((((t1.c0)/(t1.c1)) IN (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE v0.c1 END)));
SELECT DISTINCT MIN(t1.c1) FROM vt0, t1, v0 WHERE ((((t1.c0)/(t1.c1)) IN (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE v0.c1 END))) ORDER BY ((('-111518474' IN (vt0.c1, vt0.c1)))&(v0.c0))  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE (((((t1.c2) BETWEEN (t1.c0) AND ('469225696')))*(x'')));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((t1.c2) BETWEEN (t1.c0) AND ('469225696')))*(x''))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((HEX(DISTINCT vt0.c1)) BETWEEN (((0.777834240710284) IS TRUE)) AND (((t1.c2) BETWEEN (t1.c0) AND (x''))))) LIMIT 1;
SELECT * FROM vt0, t1 WHERE (((((t1.c2) BETWEEN (t1.c0) AND ('469225696')))*(x'')));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((t1.c2) BETWEEN (t1.c0) AND ('469225696')))*(x''))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((HEX(DISTINCT vt0.c1)) BETWEEN (((0.777834240710284) IS TRUE)) AND (((t1.c2) BETWEEN (t1.c0) AND (x''))))) LIMIT 1;
SELECT * FROM t1 WHERE ((((~ (t1.c1))) NOTNULL));
SELECT * FROM t1 WHERE ((((((~ (t1.c1))) NOTNULL))AND((((+ ('y/')))|('r')))));
SELECT * FROM t1 WHERE ((((~ (t1.c1))) NOTNULL));
SELECT * FROM t1 WHERE ((((((~ (t1.c1))) NOTNULL))AND((((+ ('y/')))|('r')))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((NULL)AND(vt0.c0)))*(v0.c2)) WHERE (CASE WHEN CASE vt0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c1) NOTNULL) WHEN ((NULL) BETWEEN (vt0.c1) AND (x'2b17')) THEN UPPER(v0.c0) WHEN (v0.c0 IN ()) THEN CAST(vt0.c1 AS NUMERIC) WHEN GLOB(v0.c2, vt0.c1) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END) ORDER BY (((v0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(v0.c0 AS TEXT)))) ASC  NULLS LAST, (('1215819737') NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1)))) AND (CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN vt0.c0 THEN '-291337799' WHEN vt0.c0 THEN v0.c0 END)), ((json_patch(vt0.c1, v0.c0))GLOB(ABS(DISTINCT v0.c0)));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((NULL)AND(vt0.c0)))*(v0.c2)) WHERE (((CASE WHEN CASE vt0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c1) NOTNULL) WHEN ((NULL) BETWEEN (vt0.c1) AND (x'2b17')) THEN UPPER(v0.c0) WHEN (v0.c0 IN ()) THEN CAST(vt0.c1 AS NUMERIC) WHEN GLOB(v0.c2, vt0.c1) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END)AND('1539342956'))) ORDER BY (((v0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(v0.c0 AS TEXT)))) ASC  NULLS LAST, (('1215819737') NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1)))) AND (CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN vt0.c0 THEN '-291337799' WHEN vt0.c0 THEN v0.c0 END)), ((json_patch(vt0.c1, v0.c0))GLOB(ABS(DISTINCT v0.c0))) INTERSECT SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((NULL)AND(vt0.c0)))*(v0.c2)) WHERE ((((vt0.c1 IN (0.8570811825764604, vt0.c0))) NOT NULL)) ORDER BY (((v0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(v0.c0 AS TEXT)))) ASC  NULLS LAST, (('1215819737') NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1)))) AND (CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN vt0.c0 THEN '-291337799' WHEN vt0.c0 THEN v0.c0 END)), ((json_patch(vt0.c1, v0.c0))GLOB(ABS(DISTINCT v0.c0)));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((NULL)AND(vt0.c0)))*(v0.c2)) WHERE (CASE WHEN CASE vt0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c1) NOTNULL) WHEN ((NULL) BETWEEN (vt0.c1) AND (x'2b17')) THEN UPPER(v0.c0) WHEN (v0.c0 IN ()) THEN CAST(vt0.c1 AS NUMERIC) WHEN GLOB(v0.c2, vt0.c1) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END) ORDER BY (((v0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(v0.c0 AS TEXT)))) ASC  NULLS LAST, (('1215819737') NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1)))) AND (CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN vt0.c0 THEN '-291337799' WHEN vt0.c0 THEN v0.c0 END)), ((json_patch(vt0.c1, v0.c0))GLOB(ABS(DISTINCT v0.c0)));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((NULL)AND(vt0.c0)))*(v0.c2)) WHERE (((CASE WHEN CASE vt0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c1) NOTNULL) WHEN ((NULL) BETWEEN (vt0.c1) AND (x'2b17')) THEN UPPER(v0.c0) WHEN (v0.c0 IN ()) THEN CAST(vt0.c1 AS NUMERIC) WHEN GLOB(v0.c2, vt0.c1) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END)AND('1539342956'))) ORDER BY (((v0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(v0.c0 AS TEXT)))) ASC  NULLS LAST, (('1215819737') NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1)))) AND (CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN vt0.c0 THEN '-291337799' WHEN vt0.c0 THEN v0.c0 END)), ((json_patch(vt0.c1, v0.c0))GLOB(ABS(DISTINCT v0.c0))) INTERSECT SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((NULL)AND(vt0.c0)))*(v0.c2)) WHERE ((((vt0.c1 IN (0.8570811825764604, vt0.c0))) NOT NULL)) ORDER BY (((v0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(v0.c0 AS TEXT)))) ASC  NULLS LAST, (('1215819737') NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1)))) AND (CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN vt0.c0 THEN '-291337799' WHEN vt0.c0 THEN v0.c0 END)), ((json_patch(vt0.c1, v0.c0))GLOB(ABS(DISTINCT v0.c0)));
SELECT ALL * FROM t1, v0, vt0 WHERE ((((((v0.c1)IS(vt0.c0)), ((t1.c0)<=(t1.c1)), ((((((((v0.c0)OR(v0.c1)))OR(t1.c0)))OR(t1.c1)))AND(v0.c1))))=(((NOT (vt0.c1)), -1.287748498E9, ((x'')<(t1.c1)))))) ORDER BY (((v0.c0 IN ()))==(((t1.c2) IS FALSE))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1, v0, vt0 WHERE ((((((v0.c1)IS(vt0.c0)), ((t1.c0)<(t1.c1)), ((((((((v0.c0)OR(v0.c1)))OR(t1.c0)))OR(t1.c1)))AND(v0.c1))))=(((NOT (vt0.c1)), -1.287748498E9, ((x'')<(t1.c1)))))) ORDER BY (((v0.c0 IN ()))==(((t1.c2) IS FALSE))) ASC  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM t1, v0, vt0 WHERE ((((((v0.c1)IS(vt0.c0)), ((t1.c0)<=(t1.c1)), ((((((((v0.c0)OR(v0.c1)))OR(t1.c0)))OR(t1.c1)))AND(v0.c1))))=(((NOT (vt0.c1)), -1.287748498E9, ((x'')<(t1.c1)))))) ORDER BY (((v0.c0 IN ()))==(((t1.c2) IS FALSE))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1, v0, vt0 WHERE ((((((v0.c1)IS(vt0.c0)), ((t1.c0)<(t1.c1)), ((((((((v0.c0)OR(v0.c1)))OR(t1.c0)))OR(t1.c1)))AND(v0.c1))))=(((NOT (vt0.c1)), -1.287748498E9, ((x'')<(t1.c1)))))) ORDER BY (((v0.c0 IN ()))==(((t1.c2) IS FALSE))) ASC  NULLS LAST LIMIT 0X2;
SELECT MAX(t1.c2) FROM t1 CROSS JOIN vt0 ON ((((NULL) NOT BETWEEN (vt0.c1) AND (t1.c1)))LIKE(((t1.c1) NOT NULL))) WHERE ((((- (t1.c0))) IS TRUE)) ORDER BY (((~ (t1.c0))) BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c1)/(t1.c0)))) DESC;
SELECT ALL MAX(t1.c2) FROM t1 CROSS JOIN vt0 ON ((((NULL) NOT BETWEEN (vt0.c1) AND (t1.c1)))LIKE(((t1.c1) NOT NULL))) WHERE ((((((- (t1.c0))) IS TRUE))AND((((t1.c2, vt0.c1, vt0.c0)) BETWEEN ((CASE WHEN t1.c0 THEN '{z.' ELSE vt0.c1 END, x'', ((t1.c0)AND('f')))) AND ((CASE WHEN 0.07092453200230664 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c2 THEN t1.c2 END, ((t1.c2) BETWEEN ('-1805692362') AND (vt0.c1)), ((vt0.c0)&(t1.c2)))))))) ORDER BY (((~ (t1.c0))) BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c1)/(t1.c0)))) DESC LIMIT 0X1;
SELECT ALL * FROM t1, v0 WHERE (3.03808265E8) ORDER BY ((((x'95d4')||(-2079834761))) NOT BETWEEN ((v0.c2 IN (t1.c1))) AND ('xn')) ASC, (((t1.c2 IN ())) NOT BETWEEN ((~ (v0.c0))) AND (((v0.c1)|(t1.c1))))  NULLS FIRST;
SELECT DISTINCT * FROM t1, v0 WHERE (((3.03808265E8)AND((((v0.c2))==((v0.c2))) COLLATE NOCASE))) ORDER BY ((((x'95d4')||(0xffffffff84083d77))) NOT BETWEEN ((v0.c2 IN (t1.c1))) AND ('xn')) ASC, (((t1.c2 IN ())) NOT BETWEEN ((~ (v0.c0))) AND (((v0.c1)|(t1.c1))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE ((((((t1.c1, t1.c2, v0.c1))<>((v0.c1, v0.c1, t1.c1)))) NOT BETWEEN (v0.c0) AND (((t1.c1)%(v0.c2))))) ORDER BY ((((x'95d4')||(-2079834761))) NOT BETWEEN ((v0.c2 IN (t1.c1))) AND ('xn')) ASC, (((t1.c2 IN ())) NOT BETWEEN ((~ (v0.c0))) AND (((v0.c1)|(t1.c1))))  NULLS FIRST;
SELECT ALL * FROM t1, v0 WHERE (3.03808265E8) ORDER BY ((((x'95d4')||(-2079834761))) NOT BETWEEN ((v0.c2 IN (t1.c1))) AND ('xn')) ASC, (((t1.c2 IN ())) NOT BETWEEN ((~ (v0.c0))) AND (((v0.c1)|(t1.c1))))  NULLS FIRST;
SELECT DISTINCT * FROM t1, v0 WHERE (((3.03808265E8)AND((((v0.c2))==((v0.c2))) COLLATE NOCASE))) ORDER BY ((((x'95d4')||(0xffffffff84083d77))) NOT BETWEEN ((v0.c2 IN (t1.c1))) AND ('xn')) ASC, (((t1.c2 IN ())) NOT BETWEEN ((~ (v0.c0))) AND (((v0.c1)|(t1.c1))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE ((((((t1.c1, t1.c2, v0.c1))<>((v0.c1, v0.c1, t1.c1)))) NOT BETWEEN (v0.c0) AND (((t1.c1)%(v0.c2))))) ORDER BY ((((x'95d4')||(-2079834761))) NOT BETWEEN ((v0.c2 IN (t1.c1))) AND ('xn')) ASC, (((t1.c2 IN ())) NOT BETWEEN ((~ (v0.c0))) AND (((v0.c1)|(t1.c1))))  NULLS FIRST;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (CASE (((vt0.c0, vt0.c1))==((vt0.c1, vt0.c1)))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN (~ (vt0.c1)) WHEN (~ (vt0.c0)) THEN CASE 0x6d704525  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE vt0.c0 COLLATE RTRIM END) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST, 0.3903627172384331;
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((CASE (((vt0.c0, vt0.c1))=((vt0.c1, vt0.c1)))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN (~ (vt0.c1)) WHEN (~ (vt0.c0)) THEN CASE 1836074277  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE vt0.c0 COLLATE RTRIM END)AND(LTRIM(vt0.c0) COLLATE NOCASE))) ORDER BY CAST(((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS REAL) DESC, rtreenode(((((vt0.c1)AND(vt0.c0)))AND('1836074277')), vt0.c1) DESC  NULLS LAST LIMIT 0x1;
SELECT * FROM vt0, t1, v0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c2 END)OR(((((((((v0.c0)OR(vt0.c0)))OR(t1.c1)))AND(x'1d')))AND(t1.c0)))));
SELECT ALL * FROM vt0, t1, v0 WHERE (((((CASE v0.c0  WHEN v0.c2 THEN v0.c2 END)OR(((((((((v0.c0)OR(vt0.c0)))OR(t1.c1)))AND(x'1d')))AND(t1.c0)))))AND(0.7657422968599975))) ORDER BY (CAST(t1.c0 AS BLOB) IN ()), ((t1.c0 COLLATE BINARY)<=(((((((v0.c1)OR(t1.c1)))OR(vt0.c0)))OR(t1.c0)))) ASC LIMIT 1 INTERSECT SELECT ALL * FROM vt0, t1, v0 WHERE ((NOT (((v0.c1) ISNULL)))) ORDER BY (CAST(t1.c0 AS BLOB) IN ()), ((t1.c0 COLLATE BINARY)<=(((((((v0.c1)OR(t1.c1)))OR(vt0.c0)))OR(t1.c0)))) ASC LIMIT 0X1;
SELECT * FROM vt0, t1, v0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c2 END)OR(((((((((v0.c0)OR(vt0.c0)))OR(t1.c1)))AND(x'1d')))AND(t1.c0)))));
SELECT ALL * FROM vt0, t1, v0 WHERE (((((CASE v0.c0  WHEN v0.c2 THEN v0.c2 END)OR(((((((((v0.c0)OR(vt0.c0)))OR(t1.c1)))AND(x'1d')))AND(t1.c0)))))AND(0.7657422968599975))) ORDER BY (CAST(t1.c0 AS BLOB) IN ()), ((t1.c0 COLLATE BINARY)<=(((((((v0.c1)OR(t1.c1)))OR(vt0.c0)))OR(t1.c0)))) ASC LIMIT 1 INTERSECT SELECT ALL * FROM vt0, t1, v0 WHERE ((NOT (((v0.c1) ISNULL)))) ORDER BY (CAST(t1.c0 AS BLOB) IN ()), ((t1.c0 COLLATE BINARY)<=(((((((v0.c1)OR(t1.c1)))OR(vt0.c0)))OR(t1.c0)))) ASC LIMIT 0X1;
SELECT ALL * FROM v0 WHERE (((rtreenode(v0.c1, v0.c0))AND(CASE WHEN v0.c1 THEN v0.c0 END))) ORDER BY (- (CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)) DESC  NULLS FIRST, ((v0.c1 IN (NULL, v0.c0)) IN ()) ASC, CAST(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC);
SELECT ALL * FROM v0 WHERE (((rtreenode(v0.c1, v0.c0))AND(CASE WHEN v0.c1 THEN v0.c0 END))) ORDER BY (- (CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)) DESC  NULLS FIRST, ((v0.c1 IN (NULL, v0.c0)) IN ()) ASC, CAST(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC) INTERSECT SELECT ALL * FROM v0 WHERE ('1785187513' COLLATE BINARY) ORDER BY (- (CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)) DESC  NULLS FIRST, ((v0.c1 IN (NULL, v0.c0)) IN ()) ASC, CAST(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC);
SELECT ALL * FROM v0 WHERE (((rtreenode(v0.c1, v0.c0))AND(CASE WHEN v0.c1 THEN v0.c0 END))) ORDER BY (- (CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)) DESC  NULLS FIRST, ((v0.c1 IN (NULL, v0.c0)) IN ()) ASC, CAST(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC);
SELECT * FROM v0 WHERE ((v0.c1 IN (((v0.c1)LIKE(NULL))))) ORDER BY ((((v0.c1)>(v0.c1))) NOT BETWEEN (CASE v0.c2  WHEN 'gp_' THEN v0.c0 END) AND (((v0.c0) ISNULL)))  NULLS LAST, ((((x'')!=(v0.c1))) NOTNULL)  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c1 IN (((v0.c1)LIKE(NULL)))))AND(CAST(((v0.c1)IS(0.23945185986769146)) AS REAL)))) ORDER BY ((((v0.c1)>(v0.c1))) NOT BETWEEN (CASE v0.c2  WHEN 'gp_' THEN v0.c0 END) AND (((v0.c0) ISNULL)))  NULLS LAST, ((((x'')!=(v0.c1))) NOTNULL)  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT * FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))))) ORDER BY ((((v0.c1)>(v0.c1))) NOT BETWEEN (CASE v0.c2  WHEN 'gp_' THEN v0.c0 END) AND (((v0.c0) ISNULL)))  NULLS LAST, ((((x'')<>(v0.c1))) NOTNULL)  NULLS FIRST LIMIT 0x3;
SELECT * FROM v0 WHERE ((v0.c1 IN (((v0.c1)LIKE(NULL))))) ORDER BY ((((v0.c1)>(v0.c1))) NOT BETWEEN (CASE v0.c2  WHEN 'gp_' THEN v0.c0 END) AND (((v0.c0) ISNULL)))  NULLS LAST, ((((x'')!=(v0.c1))) NOTNULL)  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c1 IN (((v0.c1)LIKE(NULL)))))AND(CAST(((v0.c1)IS(0.23945185986769146)) AS REAL)))) ORDER BY ((((v0.c1)>(v0.c1))) NOT BETWEEN (CASE v0.c2  WHEN 'gp_' THEN v0.c0 END) AND (((v0.c0) ISNULL)))  NULLS LAST, ((((x'')!=(v0.c1))) NOTNULL)  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT * FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))))) ORDER BY ((((v0.c1)>(v0.c1))) NOT BETWEEN (CASE v0.c2  WHEN 'gp_' THEN v0.c0 END) AND (((v0.c0) ISNULL)))  NULLS LAST, ((((x'')<>(v0.c1))) NOTNULL)  NULLS FIRST LIMIT 0x3;
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE WHEN (((vt0.c1, t1.c2, t1.c0)) BETWEEN ((t1.c0, vt0.c0, vt0.c1)) AND ((x'', t1.c2, t1.c2))) THEN CAST(t1.c1 AS INTEGER) WHEN t1.c0 THEN (vt0.c0 IN (t1.c2)) ELSE ((NULL)|(t1.c0)) END);
SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE (((CASE WHEN (((vt0.c1, t1.c2, t1.c0)) BETWEEN ((t1.c0, vt0.c0, vt0.c1)) AND ((x'', t1.c2, t1.c2))) THEN CAST(t1.c1 AS INTEGER) WHEN t1.c0 THEN (vt0.c0 IN (t1.c2)) ELSE ((NULL)|(t1.c0)) END)AND((((NOT (t1.c0)))<<((t1.c0 IN ())))))) LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE (((vt0.c0)<<(vt0.c1)) COLLATE BINARY) LIMIT 1;
SELECT MAX(v0.c2) FROM v0 NATURAL JOIN t1 WHERE ((('vDr''q[셓') BETWEEN ((((v0.c1))=((v0.c0)))) AND (t1.c1 COLLATE NOCASE)));
SELECT DISTINCT MAX(v0.c2) FROM v0 NATURAL JOIN t1 WHERE ((((('vDr''q[셓') BETWEEN ((((v0.c1))=((v0.c0)))) AND (t1.c1 COLLATE NOCASE)))AND(((v0.c1)=(v0.c2)) COLLATE NOCASE))) LIMIT 0X3;
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((t1.c0)AND(t1.c1)))AND(vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((((t1.c0)AND(t1.c1)))AND(vt0.c0))) ISNULL))AND((((((t1.c1, vt0.c1, t1.c2)) BETWEEN ((t1.c1, vt0.c0, t1.c2)) AND ((t1.c0, 0X1bc35475, t1.c2))))/(((((((t1.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))))) ORDER BY CASE WHEN ((vt0.c0)>=(t1.c0)) THEN x'f93f' WHEN (((t1.c1, vt0.c1, t1.c2))!=((t1.c2, t1.c2, t1.c2))) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, t1.c0) THEN (('-1196239477') NOTNULL) END, ((CAST(t1.c0 AS NUMERIC)) ISNULL)  NULLS LAST LIMIT 0 INTERSECT SELECT COUNT(*) FROM t1, vt0 WHERE (((LIKELIHOOD(0.2121778017281012, vt0.c1)) BETWEEN (((t1.c0) NOT BETWEEN (NULL) AND (vt0.c0))) AND (((vt0.c1) BETWEEN (t1.c1) AND (t1.c2))))) ORDER BY CASE WHEN ((vt0.c0)>=(t1.c0)) THEN x'f93f' WHEN (((t1.c1, vt0.c1, t1.c2))<>((t1.c2, t1.c2, t1.c2))) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, t1.c0) THEN (('-1196239477') NOTNULL) END, ((CAST(t1.c0 AS NUMERIC)) ISNULL)  NULLS LAST LIMIT 0x0;
SELECT MIN(t1.c0) FROM v0 CROSS JOIN vt0 ON CAST(((t1.c2) IS TRUE) AS TEXT) LEFT OUTER JOIN t1 ON ((((((v0.c0)OR(vt0.c1)))AND(t1.c1))) IS TRUE) WHERE (CASE CAST(v0.c1 AS TEXT)  WHEN ((vt0.c1) IS TRUE) THEN (v0.c2 IN (t1.c0)) WHEN ((vt0.c1) BETWEEN (v0.c1) AND (3.70490061E8)) THEN ((((v0.c0)OR(vt0.c0)))OR(v0.c1)) ELSE CAST('f脏q1' AS NUMERIC) END);
SELECT DISTINCT MIN(t1.c0) FROM v0 CROSS JOIN vt0 ON CAST(((t1.c2) IS TRUE) AS TEXT) INNER JOIN t1 ON ((((((v0.c0)OR(vt0.c1)))AND(t1.c1))) IS TRUE) WHERE (CASE CAST(v0.c1 AS TEXT)  WHEN ((vt0.c1) IS TRUE) THEN (v0.c2 IN (t1.c0)) WHEN ((vt0.c1) BETWEEN (v0.c1) AND (3.70490061E8)) THEN ((((v0.c0)OR(vt0.c0)))OR(v0.c1)) ELSE CAST('f脏q1' AS NUMERIC) END) INTERSECT SELECT DISTINCT MIN(t1.c0) FROM v0 CROSS JOIN vt0 ON CAST(((t1.c2) IS TRUE) AS TEXT) INNER JOIN t1 ON ((((((v0.c0)OR(vt0.c1)))AND(t1.c1))) IS TRUE) WHERE (TYPEOF(vt0.c0));
SELECT * FROM v0 WHERE (v0.c1) ORDER BY (NOT (((v0.c0)==(v0.c2)))), ((((((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(CAST(1038010726 AS INTEGER))))AND((NOT (v0.c0))))  NULLS LAST, (NOT (NULL)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE (v0.c1) ORDER BY (NOT (((v0.c0)=(v0.c2)))), ((((((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(CAST(0X3ddec966 AS INTEGER))))AND((NOT (v0.c0))))  NULLS LAST, (NOT (NULL)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c2 AS TEXT))<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END))) ORDER BY (NOT (((v0.c0)=(v0.c2)))), ((((((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(CAST(1038010726 AS INTEGER))))AND((NOT (v0.c0))))  NULLS LAST, (NOT (NULL)) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (v0.c1) ORDER BY (NOT (((v0.c0)==(v0.c2)))), ((((((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(CAST(1038010726 AS INTEGER))))AND((NOT (v0.c0))))  NULLS LAST, (NOT (NULL)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE (v0.c1) ORDER BY (NOT (((v0.c0)=(v0.c2)))), ((((((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(CAST(0X3ddec966 AS INTEGER))))AND((NOT (v0.c0))))  NULLS LAST, (NOT (NULL)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c2 AS TEXT))<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END))) ORDER BY (NOT (((v0.c0)=(v0.c2)))), ((((((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(CAST(1038010726 AS INTEGER))))AND((NOT (v0.c0))))  NULLS LAST, (NOT (NULL)) DESC  NULLS FIRST;
SELECT ALL * FROM t1, v0 WHERE ((((((t1.c1))>((t1.c2))))GLOB((v0.c0 IN (t1.c1, t1.c0))))) ORDER BY (NOT (t1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT DISTINCT * FROM t1, v0 WHERE ((((((((t1.c1))>((t1.c2))))GLOB((v0.c0 IN (t1.c1)))))AND(0Xffffffffdb473de1))) ORDER BY ((t1.c1 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (t1.c0) ORDER BY ((t1.c1 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM t1, v0 WHERE ((((((t1.c1))>((t1.c2))))GLOB((v0.c0 IN (t1.c1, t1.c0))))) ORDER BY (NOT (t1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT DISTINCT * FROM t1, v0 WHERE ((((((((t1.c1))>((t1.c2))))GLOB((v0.c0 IN (t1.c1)))))AND(0Xffffffffdb473de1))) ORDER BY ((t1.c1 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (t1.c0) ORDER BY ((t1.c1 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((0.31636427486005403) IS FALSE) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) ORDER BY COALESCE(DISTINCT ((vt0.c0)+(vt0.c0)), (NOT (vt0.c0)))  NULLS FIRST, ((CASE WHEN 0.536812455685967 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c1) NOT NULL))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((UNICODE(vt0.c0))&(vt0.c1 COLLATE RTRIM))) ORDER BY COALESCE(DISTINCT ((vt0.c0)+(vt0.c0)), (NOT (vt0.c0)))  NULLS FIRST, ((CASE WHEN 0.536812455685967 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c1) NOT NULL))) LIMIT 0x1;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((0.31636427486005403) IS FALSE) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) ORDER BY COALESCE(DISTINCT ((vt0.c0)+(vt0.c0)), (NOT (vt0.c0)))  NULLS FIRST, ((CASE WHEN 0.536812455685967 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c1) NOT NULL))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((UNICODE(vt0.c0))&(vt0.c1 COLLATE RTRIM))) ORDER BY COALESCE(DISTINCT ((vt0.c0)+(vt0.c0)), (NOT (vt0.c0)))  NULLS FIRST, ((CASE WHEN 0.536812455685967 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c1) NOT NULL))) LIMIT 0x1;
SELECT ALL * FROM vt0, v0, t1 WHERE (((((v0.c1)IS(v0.c0)))-(STRFTIME(v0.c0, v0.c0, vt0.c0, v0.c0)))) ORDER BY (((vt0.c0 IN ())) NOT NULL);
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((((v0.c1)IS(v0.c0)))-(STRFTIME(v0.c0, v0.c0, vt0.c0, v0.c0))))AND((~ (((t1.c2)&(v0.c2))))))) ORDER BY 0.6048092849383176 COLLATE NOCASE DESC, ((((v0.c1) IS TRUE)) NOT BETWEEN (((v0.c2)>=(t1.c0))) AND (((vt0.c0) NOTNULL))) LIMIT 0x2;
SELECT ALL * FROM vt0, v0, t1 WHERE (((((v0.c1)IS(v0.c0)))-(STRFTIME(v0.c0, v0.c0, vt0.c0, v0.c0)))) ORDER BY (((vt0.c0 IN ())) NOT NULL);
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((((v0.c1)IS(v0.c0)))-(STRFTIME(v0.c0, v0.c0, vt0.c0, v0.c0))))AND((~ (((t1.c2)&(v0.c2))))))) ORDER BY 0.6048092849383176 COLLATE NOCASE DESC, ((((v0.c1) IS TRUE)) NOT BETWEEN (((v0.c2)>=(t1.c0))) AND (((vt0.c0) NOTNULL))) LIMIT 0x2;
SELECT COUNT(*) FROM t1, v0 WHERE ((((t1.c1)) NOT BETWEEN ((highlight(t1.c0, v0.c1, t1.c0, v0.c1))) AND ((t1.c1 COLLATE BINARY))));
SELECT COUNT(*) FROM t1, v0 WHERE ((((((t1.c1)) NOT BETWEEN ((highlight(t1.c0, v0.c1, t1.c0, v0.c1))) AND ((t1.c1 COLLATE BINARY))))AND(CASE v0.c2  WHEN ((t1.c1)>=(v0.c2)) THEN v0.c1 END))) LIMIT 2;
SELECT * FROM vt0, v0, t1 WHERE (v0.c1) ORDER BY CASE ((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((v0.c2)||(t1.c0)) THEN ((v0.c0)LIKE(t1.c2)) ELSE ((t1.c2) IS TRUE) END ASC  NULLS FIRST, CASE 0Xc764242 COLLATE NOCASE  WHEN ((x'') IS TRUE) THEN CASE vt0.c1  WHEN t1.c2 THEN '*oc!(!藸' ELSE v0.c1 END END, ((((v0.c1) IS FALSE))+((~ (t1.c1))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (v0.c1) ORDER BY CASE ((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((v0.c2)||(t1.c0)) THEN ((v0.c0)LIKE(t1.c2)) ELSE ((t1.c2) IS TRUE) END ASC  NULLS FIRST, CASE 209076802 COLLATE NOCASE  WHEN ((x'') IS TRUE) THEN CASE vt0.c1  WHEN t1.c2 THEN '*oc!(!藸' ELSE v0.c1 END END, ((((v0.c1) IS FALSE))+((~ (t1.c1)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((((((t1.c2)OR(t1.c0)))AND(NULL)))OR(t1.c2))) NOT NULL)) ORDER BY CASE ((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((v0.c2)||(t1.c0)) THEN ((v0.c0)LIKE(t1.c2)) ELSE ((t1.c2) IS TRUE) END ASC  NULLS FIRST, CASE 209076802 COLLATE NOCASE  WHEN ((x'') IS TRUE) THEN CASE vt0.c1  WHEN t1.c2 THEN '*oc!(!藸' ELSE v0.c1 END END, ((((v0.c1) IS FALSE))+((~ (t1.c1)))) LIMIT 0x1;
SELECT * FROM vt0, v0, t1 WHERE (v0.c1) ORDER BY CASE ((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((v0.c2)||(t1.c0)) THEN ((v0.c0)LIKE(t1.c2)) ELSE ((t1.c2) IS TRUE) END ASC  NULLS FIRST, CASE 0Xc764242 COLLATE NOCASE  WHEN ((x'') IS TRUE) THEN CASE vt0.c1  WHEN t1.c2 THEN '*oc!(!藸' ELSE v0.c1 END END, ((((v0.c1) IS FALSE))+((~ (t1.c1))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (v0.c1) ORDER BY CASE ((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((v0.c2)||(t1.c0)) THEN ((v0.c0)LIKE(t1.c2)) ELSE ((t1.c2) IS TRUE) END ASC  NULLS FIRST, CASE 209076802 COLLATE NOCASE  WHEN ((x'') IS TRUE) THEN CASE vt0.c1  WHEN t1.c2 THEN '*oc!(!藸' ELSE v0.c1 END END, ((((v0.c1) IS FALSE))+((~ (t1.c1)))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((((((t1.c2)OR(t1.c0)))AND(NULL)))OR(t1.c2))) NOT NULL)) ORDER BY CASE ((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((v0.c2)||(t1.c0)) THEN ((v0.c0)LIKE(t1.c2)) ELSE ((t1.c2) IS TRUE) END ASC  NULLS FIRST, CASE 209076802 COLLATE NOCASE  WHEN ((x'') IS TRUE) THEN CASE vt0.c1  WHEN t1.c2 THEN '*oc!(!藸' ELSE v0.c1 END END, ((((v0.c1) IS FALSE))+((~ (t1.c1)))) LIMIT 0x1;
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (CAST(((t1.c1)<(t1.c0)) AS REAL));
SELECT DISTINCT COUNT(*) FROM v0, vt0, t1 WHERE (((CAST(((t1.c1)<(t1.c0)) AS REAL))AND(((((((v0.c2)AND(t1.c0)))AND(t1.c1)))>>(CAST(NULL AS TEXT)))))) ORDER BY ((((t1.c2)<<(t1.c2)))<>((t1.c0 IN (vt0.c1, vt0.c0, vt0.c1))))  NULLS LAST, ((((vt0.c0) IS TRUE)) IS TRUE)  NULLS LAST LIMIT 0X3;
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN v0 WHERE (((t1.c1 COLLATE RTRIM)>=(v0.c0)));
SELECT DISTINCT COUNT(*) FROM t1 NATURAL JOIN v0 WHERE (((t1.c1 COLLATE RTRIM)=(v0.c0))) ORDER BY CASE ((v0.c2) IS TRUE)  WHEN t1.c2 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (NULL) AND (t1.c1)) WHEN '8Rt9{Ju{' THEN t1.c0 COLLATE NOCASE WHEN 0.8197347745257832 THEN v0.c1 WHEN CAST(v0.c0 AS BLOB) THEN IFNULL(DISTINCT t1.c1, v0.c0) END  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t1 NATURAL JOIN v0 WHERE (((CAST(v0.c1 AS REAL))||(v0.c2))) ORDER BY CASE ((v0.c2) IS TRUE)  WHEN t1.c2 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (NULL) AND (t1.c1)) WHEN '8Rt9{Ju{' THEN t1.c0 COLLATE NOCASE WHEN 0.8197347745257832 THEN v0.c1 WHEN CAST(v0.c0 AS BLOB) THEN IFNULL(DISTINCT t1.c1, v0.c0) END  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))=(((((vt0.c0)AND(NULL)))AND(vt0.c1))))) ORDER BY ((((vt0.c0)OR(vt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))==(((((vt0.c0)AND(NULL)))AND(vt0.c1))))) ORDER BY (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST, ((vt0.c1 COLLATE NOCASE)%((((vt0.c1, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '-1635930072', NULL, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))))) ASC  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST, ((vt0.c1 COLLATE NOCASE)%((((vt0.c1, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '-1635930072', NULL, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))=(((((vt0.c0)AND(NULL)))AND(vt0.c1))))) ORDER BY ((((vt0.c0)OR(vt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))==(((((vt0.c0)AND(NULL)))AND(vt0.c1))))) ORDER BY (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST, ((vt0.c1 COLLATE NOCASE)%((((vt0.c1, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '-1635930072', NULL, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))))) ASC  NULLS LAST INTERSECT SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST, ((vt0.c1 COLLATE NOCASE)%((((vt0.c1, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '-1635930072', NULL, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((+ (t1.c1)) IN (CASE WHEN t1.c2 THEN t1.c2 END, t1.c1))) ORDER BY ((((((((((t1.c2) NOTNULL))OR(((t1.c1) IS TRUE))))OR(((t1.c2) NOT NULL))))AND(UPPER(DISTINCT t1.c1))))AND(JULIANDAY(t1.c1, t1.c0, x'd1', t1.c1))) ASC, (- (HEX(t1.c1)))  NULLS LAST;
SELECT * FROM t1 WHERE (((+ (t1.c1)) IN (CASE WHEN t1.c2 THEN t1.c2 END, t1.c1))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END)IS NOT((- (t1.c2)))) ASC, CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c1 END COLLATE NOCASE ASC LIMIT 0X3;
SELECT * FROM t1 WHERE (((+ (t1.c1)) IN (CASE WHEN t1.c2 THEN t1.c2 END, t1.c1))) ORDER BY ((((((((((t1.c2) NOTNULL))OR(((t1.c1) IS TRUE))))OR(((t1.c2) NOT NULL))))AND(UPPER(DISTINCT t1.c1))))AND(JULIANDAY(t1.c1, t1.c0, x'd1', t1.c1))) ASC, (- (HEX(t1.c1)))  NULLS LAST;
SELECT * FROM t1 WHERE (((+ (t1.c1)) IN (CASE WHEN t1.c2 THEN t1.c2 END, t1.c1))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END)IS NOT((- (t1.c2)))) ASC, CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c1 END COLLATE NOCASE ASC LIMIT 0X3;
SELECT MAX(v0.c2) FROM t1 INNER JOIN v0 ON (((v0.c1 IN (v0.c1)))>>(((t1.c2)>(v0.c1)))) WHERE (((((((((COALESCE(v0.c2, t1.c0))AND(((v0.c1)IS NOT(t1.c1)))))AND(((v0.c1)LIKE(NULL)))))OR(ROUND(v0.c2, v0.c2))))OR(v0.c2)));
SELECT ALL MAX(v0.c2) FROM t1 INNER JOIN v0 ON (((v0.c1 IN (v0.c1)))>>(((t1.c2)>(v0.c1)))) WHERE (((((((((((COALESCE(v0.c2, t1.c0))AND(((v0.c1)IS NOT(t1.c1)))))AND(((v0.c1)LIKE(NULL)))))OR(ROUND(v0.c2, v0.c2))))OR(v0.c2)))AND(((v0.c0) NOT BETWEEN (CASE WHEN v0.c1 THEN t1.c0 END) AND (((t1.c1)<<(v0.c2))))))) ORDER BY ABS(DISTINCT '2038044141') DESC  NULLS FIRST, v0.c2 DESC  NULLS LAST, (~ (((v0.c0) BETWEEN (v0.c1) AND (t1.c2))));
SELECT ALL MAX(v0.c1) FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))AND(((v0.c2) BETWEEN (vt0.c1) AND (v0.c1)))));
SELECT ALL MAX(v0.c1) FROM v0 NATURAL JOIN vt0 WHERE (((((((vt0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))AND(((v0.c2) BETWEEN (vt0.c1) AND (v0.c1)))))AND(CAST(((vt0.c1)LIKE(NULL)) AS NUMERIC)))) LIMIT 0x0 INTERSECT SELECT ALL MAX(v0.c1) FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0)||(vt0.c1))) BETWEEN ('-1764809039') AND ((v0.c2 IN (vt0.c0))))) LIMIT 0x0;
SELECT * FROM vt0, v0 NOT INDEXED, t1 WHERE (((((vt0.c1)%(v0.c0))) NOTNULL)) ORDER BY 0x5a49faef COLLATE NOCASE ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((((vt0.c1)%(v0.c0))) NOTNULL))AND(((v0.c1 IN (vt0.c1)) IN (((((((t1.c2)OR(vt0.c0)))OR(t1.c2)))AND(x'79'))))))) ORDER BY 0x5a49faef COLLATE NOCASE ASC  NULLS LAST LIMIT 0X1;
SELECT * FROM vt0, v0 NOT INDEXED, t1 WHERE (((((vt0.c1)%(v0.c0))) NOTNULL)) ORDER BY 0x5a49faef COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN t1.c0 COLLATE BINARY THEN ((((t1.c0)AND(x'ae')))OR(t1.c2)) END) ORDER BY CAST(t1.c0 AS BLOB) DESC, t1.c0 COLLATE NOCASE;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN t1.c0 COLLATE BINARY THEN ((((t1.c0)AND(x'ae')))OR(t1.c2)) END) ORDER BY CAST(t1.c0 AS BLOB) DESC, t1.c0 COLLATE NOCASE LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (((((t1.c2)==(t1.c1))) NOT BETWEEN (((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))OR(x'8c1b'))) AND (CAST(t1.c0 AS NUMERIC)))) ORDER BY CAST(t1.c0 AS BLOB) DESC, t1.c0 COLLATE NOCASE LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN t1.c0 COLLATE BINARY THEN ((((t1.c0)AND(x'ae')))OR(t1.c2)) END) ORDER BY CAST(t1.c0 AS BLOB) DESC, t1.c0 COLLATE NOCASE;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN t1.c0 COLLATE BINARY THEN ((((t1.c0)AND(x'ae')))OR(t1.c2)) END) ORDER BY CAST(t1.c0 AS BLOB) DESC, t1.c0 COLLATE NOCASE LIMIT 0x0 INTERSECT SELECT * FROM t1 WHERE (((((t1.c2)==(t1.c1))) NOT BETWEEN (((((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(t1.c1)))OR(x'8c1b'))) AND (CAST(t1.c0 AS NUMERIC)))) ORDER BY CAST(t1.c0 AS BLOB) DESC, t1.c0 COLLATE NOCASE LIMIT 0x0;
SELECT ALL MAX(t1.c2) FROM t1 WHERE ((- (t1.c0 COLLATE NOCASE)));
SELECT DISTINCT MAX(t1.c2) FROM t1 WHERE ((- (t1.c0 COLLATE NOCASE))) INTERSECT SELECT DISTINCT MAX(t1.c2) FROM t1 WHERE (t1.c2);
SELECT MIN(vt0.c0) FROM vt0, t1 WHERE (((((0.5208842837866051) NOT NULL))>>(CAST(t1.c0 AS INTEGER)))) ORDER BY ((CAST(x'4b8b32' AS INTEGER))IS(((t1.c2)>(vt0.c0)))) ASC;
SELECT DISTINCT MIN(vt0.c0) FROM vt0, t1 WHERE (((((((0.5208842837866051) NOT NULL))>>(CAST(t1.c0 AS INTEGER))))AND('-+y炮+Dx'))) ORDER BY ((json_quote(vt0.c0))GLOB((t1.c0 IN ()))) LIMIT 1;
SELECT * FROM v0, vt0, t1 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY CAST(((('	>\'''))==((vt0.c0))) AS BLOB) DESC  NULLS FIRST, CASE ((t1.c2)AND(t1.c2))  WHEN (v0.c0 IN (v0.c1)) THEN (NOT (v0.c1)) END DESC  NULLS FIRST, ((CASE WHEN t1.c1 THEN v0.c0 WHEN v0.c2 THEN t1.c2 WHEN v0.c1 THEN v0.c2 ELSE t1.c0 END)OR(CASE vt0.c1  WHEN t1.c1 THEN v0.c2 WHEN vt0.c0 THEN v0.c1 WHEN vt0.c1 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY (CASE WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN t1.c1 WHEN v0.c2 THEN v0.c0 END IN ()), x'5d1235'  NULLS FIRST LIMIT 0;
SELECT * FROM v0, vt0, t1 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY CAST(((('	>\'''))==((vt0.c0))) AS BLOB) DESC  NULLS FIRST, CASE ((t1.c2)AND(t1.c2))  WHEN (v0.c0 IN (v0.c1)) THEN (NOT (v0.c1)) END DESC  NULLS FIRST, ((CASE WHEN t1.c1 THEN v0.c0 WHEN v0.c2 THEN t1.c2 WHEN v0.c1 THEN v0.c2 ELSE t1.c0 END)OR(CASE vt0.c1  WHEN t1.c1 THEN v0.c2 WHEN vt0.c0 THEN v0.c1 WHEN vt0.c1 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY (CASE WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN t1.c1 WHEN v0.c2 THEN v0.c0 END IN ()), x'5d1235'  NULLS FIRST LIMIT 0;
SELECT MAX(vt0.c1) FROM vt0 WHERE (LIKELY(DISTINCT (+ (x'3c94')))) ORDER BY (~ ((+ (vt0.c1)))) ASC, TRIM(DISTINCT CASE vt0.c1  WHEN '-794450458' THEN '1200319629' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 1.08102891E8 WHEN vt0.c1 THEN vt0.c1 END, CAST(vt0.c0 AS NUMERIC))  NULLS FIRST, (~ (vt0.c1)) COLLATE RTRIM, ((0.18763301260569543) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((LIKELY(DISTINCT (+ (x'3c94'))))AND(((((vt0.c0) NOTNULL)) NOT BETWEEN (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))) AND (((vt0.c1) NOT NULL)))))) ORDER BY (~ ((+ (vt0.c1)))) ASC, TRIM(DISTINCT CASE vt0.c1  WHEN '-794450458' THEN '1200319629' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 1.08102891E8 WHEN vt0.c1 THEN vt0.c1 END, CAST(vt0.c0 AS NUMERIC))  NULLS FIRST, (~ (vt0.c1)) COLLATE RTRIM, ((0.18763301260569543) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((((CAST(t1.c2 AS TEXT))AND('430989384')))AND(t1.c1)))OR(CAST(t1.c1 AS REAL))))OR(t1.c2)));
SELECT ALL * FROM t1 WHERE (((((((((CAST(t1.c2 AS TEXT))AND('430989384')))AND(t1.c1)))OR(CAST(t1.c1 AS REAL))))OR(t1.c2))) LIMIT 0;
SELECT * FROM t1 WHERE (((((((((CAST(t1.c2 AS TEXT))AND('430989384')))AND(t1.c1)))OR(CAST(t1.c1 AS REAL))))OR(t1.c2)));
SELECT ALL * FROM t1 WHERE (((((((((CAST(t1.c2 AS TEXT))AND('430989384')))AND(t1.c1)))OR(CAST(t1.c1 AS REAL))))OR(t1.c2))) LIMIT 0;
SELECT * FROM t1, v0, vt0 WHERE (((t1.c1 COLLATE RTRIM)IS(((((t1.c1)OR(t1.c1)))OR(t1.c1))))) ORDER BY ((vt0.c0)AND(((((((vt0.c0)AND(vt0.c0)))AND(0.5355825174657631)))OR(v0.c2)))) DESC  NULLS LAST;
SELECT * FROM t1, v0, vt0 WHERE (((((t1.c1 COLLATE RTRIM)IS(((((t1.c1)OR(t1.c1)))OR(t1.c1)))))AND((((((0.21097172371536999, vt0.c1, v0.c2))<=((0.9793038464858203, v0.c1, v0.c2)))) BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (LIKELY(v0.c2)))))) ORDER BY (((NOT (v0.c1)))|(((t1.c1)*(t1.c1)))), x'ac' INTERSECT SELECT * FROM t1, v0, vt0 WHERE (CASE ((v0.c1) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN ((t1.c0)<(v0.c2)) THEN CASE t1.c0  WHEN vt0.c0 THEN vt0.c1 END ELSE ((vt0.c1) NOT BETWEEN (t1.c1) AND ('128282561')) END) ORDER BY (((NOT (v0.c1)))|(((t1.c1)*(t1.c1)))), x'ac';
SELECT * FROM t1, v0, vt0 WHERE (((t1.c1 COLLATE RTRIM)IS(((((t1.c1)OR(t1.c1)))OR(t1.c1))))) ORDER BY ((vt0.c0)AND(((((((vt0.c0)AND(vt0.c0)))AND(0.5355825174657631)))OR(v0.c2)))) DESC  NULLS LAST;
SELECT * FROM t1, v0, vt0 WHERE (((((t1.c1 COLLATE RTRIM)IS(((((t1.c1)OR(t1.c1)))OR(t1.c1)))))AND((((((0.21097172371536999, vt0.c1, v0.c2))<=((0.9793038464858203, v0.c1, v0.c2)))) BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (LIKELY(v0.c2)))))) ORDER BY (((NOT (v0.c1)))|(((t1.c1)*(t1.c1)))), x'ac' INTERSECT SELECT * FROM t1, v0, vt0 WHERE (CASE ((v0.c1) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN ((t1.c0)<(v0.c2)) THEN CASE t1.c0  WHEN vt0.c0 THEN vt0.c1 END ELSE ((vt0.c1) NOT BETWEEN (t1.c1) AND ('128282561')) END) ORDER BY (((NOT (v0.c1)))|(((t1.c1)*(t1.c1)))), x'ac';
SELECT COUNT(*) FROM v0 WHERE ('D<Cg') ORDER BY ((((v0.c2) IS FALSE)) NOTNULL);
SELECT DISTINCT COUNT(*) FROM v0 WHERE ('D<Cg') ORDER BY ((((v0.c2) IS FALSE)) NOTNULL) LIMIT 3;
SELECT COUNT(*) FROM vt0, v0, t1 WHERE (x'db59aabe') ORDER BY TRIM(DISTINCT 0.5953621989363957, (NOT (v0.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, t1 WHERE (x'db59aabe') ORDER BY TRIM(DISTINCT 0.5953621989363957, (NOT (v0.c1)))  NULLS FIRST INTERSECT SELECT COUNT(*) FROM vt0, v0, t1 WHERE (((vt0.c0 COLLATE BINARY)||(1.215819737E9))) ORDER BY TRIM(DISTINCT 0.5953621989363957, (NOT (v0.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE ((((v0.c1 IN (v0.c2))) NOT BETWEEN ((t1.c2 IN ())) AND ('' COLLATE BINARY)));
SELECT DISTINCT COUNT(*) FROM t1, vt0, v0 NOT INDEXED WHERE ((((((v0.c1 IN (v0.c2))) NOT BETWEEN ((t1.c2 IN ())) AND ('' COLLATE BINARY)))AND(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2)) COLLATE BINARY))) ORDER BY '' COLLATE NOCASE ASC  NULLS LAST, ((((v0.c1) NOT NULL)) NOT NULL) DESC  NULLS LAST, HEX(CAST(v0.c1 AS NUMERIC))  NULLS FIRST LIMIT 0X2;
SELECT * FROM v0, vt0 WHERE ((NOT ((v0.c2 IN ())))) ORDER BY ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((0.5012391313742609)LIKE(vt0.c0))) AND (CASE v0.c2  WHEN v0.c1 THEN -944288557 WHEN vt0.c1 THEN v0.c0 END))  NULLS FIRST, (((((((((((((((v0.c1, v0.c2, v0.c2, v0.c2))<>((v0.c2, vt0.c0, vt0.c0, v0.c1))))OR(((vt0.c1)IS NOT(v0.c1)))))AND(((v0.c1)>=(v0.c2)))))OR((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))))AND((('3(''b')||(vt0.c1)))))OR(CAST(v0.c1 AS TEXT))))AND(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST, (((v0.c2, NULL, 'A', x'ac9233', v0.c0)) NOT BETWEEN ((0.14358609107381082, ((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c1)), v0.c0, v0.c1 COLLATE BINARY, ((v0.c1) IS TRUE))) AND ((vt0.c0 COLLATE BINARY, ABS(v0.c2), ((((((((((vt0.c0)AND(v0.c0)))AND(v0.c1)))AND(v0.c0)))AND(vt0.c0)))AND(1.200319629E9)), ((v0.c2)AND(v0.c0)), CAST(v0.c2 AS REAL)))), (((v0.c2 IN ('1891954482', v0.c2)))||(CASE WHEN v0.c2 THEN vt0.c1 ELSE vt0.c0 END));
SELECT ALL * FROM v0, vt0 WHERE ((((NOT ((v0.c2 IN ()))))AND(vt0.c0))) ORDER BY UNICODE((~ (v0.c1))) ASC  NULLS LAST LIMIT 0;
SELECT * FROM v0, vt0 WHERE ((NOT ((v0.c2 IN ())))) ORDER BY ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((0.5012391313742609)LIKE(vt0.c0))) AND (CASE v0.c2  WHEN v0.c1 THEN -944288557 WHEN vt0.c1 THEN v0.c0 END))  NULLS FIRST, (((((((((((((((v0.c1, v0.c2, v0.c2, v0.c2))<>((v0.c2, vt0.c0, vt0.c0, v0.c1))))OR(((vt0.c1)IS NOT(v0.c1)))))AND(((v0.c1)>=(v0.c2)))))OR((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))))AND((('3(''b')||(vt0.c1)))))OR(CAST(v0.c1 AS TEXT))))AND(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST, (((v0.c2, NULL, 'A', x'ac9233', v0.c0)) NOT BETWEEN ((0.14358609107381082, ((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c1)), v0.c0, v0.c1 COLLATE BINARY, ((v0.c1) IS TRUE))) AND ((vt0.c0 COLLATE BINARY, ABS(v0.c2), ((((((((((vt0.c0)AND(v0.c0)))AND(v0.c1)))AND(v0.c0)))AND(vt0.c0)))AND(1.200319629E9)), ((v0.c2)AND(v0.c0)), CAST(v0.c2 AS REAL)))), (((v0.c2 IN ('1891954482', v0.c2)))||(CASE WHEN v0.c2 THEN vt0.c1 ELSE vt0.c0 END));
SELECT ALL * FROM v0, vt0 WHERE ((((NOT ((v0.c2 IN ()))))AND(vt0.c0))) ORDER BY UNICODE((~ (v0.c1))) ASC  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c1 AS NUMERIC)) ORDER BY ((((vt0.c1) IS TRUE))/((vt0.c0 IN (vt0.c0, vt0.c0)))) ASC;
SELECT DISTINCT COUNT(*) FROM vt0, v0 WHERE (((CAST(v0.c1 AS NUMERIC))AND(((((vt0.c0) ISNULL)) NOT NULL)))) ORDER BY ((((vt0.c1) IS TRUE))/((vt0.c0 IN (vt0.c0, vt0.c0)))) ASC;
SELECT * FROM vt0, v0, t1 WHERE ('.+');
SELECT * FROM vt0, v0, t1 WHERE ('.+') ORDER BY (~ (((t1.c0)=(v0.c0)))) DESC  NULLS FIRST LIMIT 1;
SELECT * FROM vt0, v0, t1 WHERE ('.+');
SELECT * FROM vt0, v0, t1 WHERE ('.+') ORDER BY (~ (((t1.c0)=(v0.c0)))) DESC  NULLS FIRST LIMIT 1;
SELECT * FROM vt0, t1 WHERE (((((t1.c2) NOT NULL))<>((vt0.c0 IN ()))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((t1.c2) NOT NULL))<((vt0.c0 IN ())))) ORDER BY (((((0.7310912821084514)>=(t1.c1))))<((t1.c0))) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (t1.c1) ORDER BY (((((0.7310912821084514)>=(t1.c1))))<((t1.c0))) ASC  NULLS LAST LIMIT 0x0;
SELECT * FROM vt0, t1 WHERE (((((t1.c2) NOT NULL))<>((vt0.c0 IN ()))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((t1.c2) NOT NULL))<((vt0.c0 IN ())))) ORDER BY (((((0.7310912821084514)>=(t1.c1))))<((t1.c0))) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (t1.c1) ORDER BY (((((0.7310912821084514)>=(t1.c1))))<((t1.c0))) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER) COLLATE RTRIM)AND(vt0.c0))) ORDER BY ((TIME(vt0.c1, vt0.c0, '-842354312', vt0.c1, vt0.c1))OR(vt0.c1)) DESC, (((((vt0.c0, vt0.c1, vt0.c1))=((vt0.c1, vt0.c0, vt0.c1))))>(0.5623369063823449)) DESC, (- (vt0.c1)) COLLATE BINARY ASC  NULLS FIRST LIMIT 0x4 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND ((((vt0.c1) ISNULL))))) ORDER BY ((TIME(vt0.c1, vt0.c0, '-842354312', vt0.c1, vt0.c1))OR(vt0.c1)) DESC, (((((vt0.c0, vt0.c1, vt0.c1))==((vt0.c1, vt0.c0, vt0.c1))))>(0.5623369063823449)) DESC, (- (vt0.c1)) COLLATE BINARY ASC  NULLS FIRST LIMIT 0X4;
SELECT ALL * FROM v0 WHERE (((v0.c1)%(((v0.c0)>=(0.9369942315316403)))));
SELECT DISTINCT * FROM v0 WHERE (((((v0.c1)%(((v0.c0)>=(0.9369942315316403)))))AND((- (CAST(v0.c1 AS TEXT)))))) ORDER BY (((((((~ (v0.c0)))AND((v0.c0 IN ()))))AND(v0.c0)))AND(ABS(DISTINCT v0.c1))) ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM v0 WHERE ((v0.c2 IN (0.6006759226743825, (v0.c1 IN (0.4118288865167157))))) ORDER BY (((((((~ (v0.c0)))AND((v0.c0 IN ()))))AND(v0.c0)))AND(ABS(DISTINCT v0.c1))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM v0 WHERE (((v0.c1)%(((v0.c0)>=(0.9369942315316403)))));
SELECT DISTINCT * FROM v0 WHERE (((((v0.c1)%(((v0.c0)>=(0.9369942315316403)))))AND((- (CAST(v0.c1 AS TEXT)))))) ORDER BY (((((((~ (v0.c0)))AND((v0.c0 IN ()))))AND(v0.c0)))AND(ABS(DISTINCT v0.c1))) ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM v0 WHERE ((v0.c2 IN (0.6006759226743825, (v0.c1 IN (0.4118288865167157))))) ORDER BY (((((((~ (v0.c0)))AND((v0.c0 IN ()))))AND(v0.c0)))AND(ABS(DISTINCT v0.c1))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM v0, vt0 WHERE (GLOB(v0.c0, ((v0.c0)IS(vt0.c1))));
SELECT DISTINCT * FROM v0, vt0 WHERE (((GLOB(v0.c0, ((v0.c0)IS(vt0.c1))))AND((((vt0.c1)|(vt0.c0)) IN ())))) ORDER BY CASE x'' COLLATE RTRIM  WHEN (vt0.c0 IN (v0.c2)) THEN TRIM(DISTINCT v0.c2) WHEN ((((NULL)AND(v0.c0)))OR(vt0.c0)) THEN CAST(v0.c2 AS BLOB) END, ((((((vt0.c1)>(vt0.c0)))OR(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c1 AS REAL)));
SELECT ALL * FROM v0, vt0 WHERE (GLOB(v0.c0, ((v0.c0)IS(vt0.c1))));
SELECT DISTINCT * FROM v0, vt0 WHERE (((GLOB(v0.c0, ((v0.c0)IS(vt0.c1))))AND((((vt0.c1)|(vt0.c0)) IN ())))) ORDER BY CASE x'' COLLATE RTRIM  WHEN (vt0.c0 IN (v0.c2)) THEN TRIM(DISTINCT v0.c2) WHEN ((((NULL)AND(v0.c0)))OR(vt0.c0)) THEN CAST(v0.c2 AS BLOB) END, ((((((vt0.c1)>(vt0.c0)))OR(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c1 AS REAL)));
SELECT * FROM t1, vt0 WHERE (((t1.c2 COLLATE NOCASE) NOT BETWEEN (vt0.c1) AND ((((((('11570472')AND(t1.c0)))OR(t1.c1)))OR(vt0.c1)))));
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c2 COLLATE NOCASE) NOT BETWEEN (vt0.c1) AND ((((((('11570472')AND(t1.c0)))OR(t1.c1)))OR(vt0.c1)))))AND('')));
SELECT * FROM t1, vt0 WHERE (((t1.c2 COLLATE NOCASE) NOT BETWEEN (vt0.c1) AND ((((((('11570472')AND(t1.c0)))OR(t1.c1)))OR(vt0.c1)))));
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c2 COLLATE NOCASE) NOT BETWEEN (vt0.c1) AND ((((((('11570472')AND(t1.c0)))OR(t1.c1)))OR(vt0.c1)))))AND('')));
SELECT MAX(v0.c0) FROM v0, t1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c1)))&(CASE WHEN vt0.c1 THEN t1.c1 END)));
SELECT ALL MAX(v0.c0) FROM v0, t1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c1)))&(CASE WHEN vt0.c1 THEN t1.c1 END)))AND(((CASE t1.c2  WHEN t1.c1 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN t1.c1 THEN t1.c0 END) IS FALSE)))) ORDER BY (+ (NULL)) ASC  NULLS LAST;
SELECT * FROM v0, t1 INNER JOIN vt0 ON t1.c1 WHERE (CAST((t1.c2 IN (NULL)) AS INTEGER)) ORDER BY v0.c0 ASC  NULLS FIRST, (((v0.c1)) NOT BETWEEN ((x'42')) AND ((NULL)))  NULLS LAST;
SELECT ALL * FROM v0, t1 INNER JOIN vt0 ON t1.c1 WHERE (((CAST((t1.c2 IN (NULL)) AS INTEGER))AND(((vt0.c0 IN ()) IN ())))) ORDER BY (((((v0.c0) NOT NULL), (- (t1.c1)), t1.c1))=((CAST(t1.c2 AS TEXT), ((v0.c0)>=(v0.c1)), CAST(v0.c0 AS NUMERIC)))) ASC, ((((v0.c0)AND(v0.c1)))/(((vt0.c1)=(t1.c2))))  NULLS LAST LIMIT 0x0;
SELECT * FROM v0, t1 INNER JOIN vt0 ON t1.c1 WHERE (CAST((t1.c2 IN (NULL)) AS INTEGER)) ORDER BY v0.c0 ASC  NULLS FIRST, (((v0.c1)) NOT BETWEEN ((x'42')) AND ((NULL)))  NULLS LAST;
SELECT ALL * FROM v0, t1 INNER JOIN vt0 ON t1.c1 WHERE (((CAST((t1.c2 IN (NULL)) AS INTEGER))AND(((vt0.c0 IN ()) IN ())))) ORDER BY (((((v0.c0) NOT NULL), (- (t1.c1)), t1.c1))=((CAST(t1.c2 AS TEXT), ((v0.c0)>=(v0.c1)), CAST(v0.c0 AS NUMERIC)))) ASC, ((((v0.c0)AND(v0.c1)))/(((vt0.c1)=(t1.c2))))  NULLS LAST LIMIT 0x0;
SELECT * FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON CAST(((0.4135398949241078) NOT NULL) AS TEXT) WHERE (UNLIKELY(((vt0.c0)%(vt0.c1))));
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON CAST(((0.4135398949241078) NOT NULL) AS TEXT) WHERE (UNLIKELY(((vt0.c0)%(vt0.c1)))) ORDER BY ((((t1.c2) ISNULL)) BETWEEN ((~ (x'ee'))) AND (((((t1.c1)AND(v0.c0)))OR(t1.c2))))  NULLS LAST LIMIT 0X0;
SELECT * FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON CAST(((0.4135398949241078) NOT NULL) AS TEXT) WHERE (UNLIKELY(((vt0.c0)%(vt0.c1))));
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON CAST(((0.4135398949241078) NOT NULL) AS TEXT) WHERE (UNLIKELY(((vt0.c0)%(vt0.c1)))) ORDER BY ((((t1.c2) ISNULL)) BETWEEN ((~ (x'ee'))) AND (((((t1.c1)AND(v0.c0)))OR(t1.c2))))  NULLS LAST LIMIT 0X0;
SELECT ALL MAX(t1.c2) FROM v0, t1 WHERE (CASE CAST(v0.c1 AS BLOB)  WHEN -1341530015 THEN ((v0.c2) NOTNULL) END) ORDER BY (CAST(t1.c2 AS NUMERIC) IN (t1.c1 COLLATE NOCASE, (t1.c1 IN ())));
SELECT DISTINCT MAX(t1.c2) FROM v0, t1 WHERE (CASE CAST(v0.c1 AS BLOB)  WHEN 0Xffffffffb009e061 THEN ((v0.c2) NOTNULL) END) ORDER BY (CAST(t1.c2 AS NUMERIC) IN (t1.c1 COLLATE NOCASE, (t1.c1 IN ()))) LIMIT 4;
SELECT * FROM t1, v0, vt0 WHERE (t1.c2);
SELECT ALL * FROM t1, v0, vt0 WHERE (((t1.c2)AND((+ (t1.c1))))) ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN ((+ ('1250186722'))) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, (+ (((0.3950821988419697)GLOB(t1.c0)))) ASC  NULLS FIRST, (((CAST(t1.c0 AS BLOB), ((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), ((t1.c2) IS TRUE)))<>((vt0.c1 COLLATE BINARY, t1.c1, ((v0.c2) NOT NULL)))) ASC LIMIT 0X2;
SELECT * FROM t1, v0, vt0 WHERE (t1.c2);
SELECT ALL * FROM t1, v0, vt0 WHERE (((t1.c2)AND((+ (t1.c1))))) ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN ((+ ('1250186722'))) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, (+ (((0.3950821988419697)GLOB(t1.c0)))) ASC  NULLS FIRST, (((CAST(t1.c0 AS BLOB), ((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c1)), ((t1.c2) IS TRUE)))<>((vt0.c1 COLLATE BINARY, t1.c1, ((v0.c2) NOT NULL)))) ASC LIMIT 0X2;
SELECT MIN(t1.c1) FROM t1 NATURAL JOIN v0 WHERE (CAST(CAST(v0.c1 AS BLOB) AS BLOB)) ORDER BY '724060006' DESC  NULLS FIRST, CASE WHEN (v0.c1 IN (v0.c1)) THEN ((t1.c0) BETWEEN (v0.c0) AND (NULL)) WHEN v0.c2 THEN ((v0.c2) NOT BETWEEN (x'6b') AND (1.803558881E9)) WHEN (((v0.c0))=((v0.c1))) THEN ((-0.0) IS FALSE) END;
SELECT DISTINCT MIN(t1.c1) FROM t1 NATURAL JOIN v0 WHERE (((CAST(CAST(v0.c1 AS BLOB) AS BLOB))AND(((CASE WHEN t1.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 ELSE t1.c0 END)||(((t1.c2)=(t1.c1))))))) ORDER BY '724060006' DESC  NULLS FIRST, CASE WHEN (v0.c1 IN (v0.c1)) THEN ((t1.c0) BETWEEN (v0.c0) AND (NULL)) WHEN v0.c2 THEN ((v0.c2) NOT BETWEEN (x'6b') AND (1.803558881E9)) WHEN (((v0.c0))=((v0.c1))) THEN ((-0.0) IS FALSE) END LIMIT 0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST((~ (vt0.c0)) AS TEXT);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)>=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER))))AND((NOT (((((((vt0.c1)OR(x'')))AND(vt0.c1)))OR(vt0.c1))))))) ORDER BY x'b4ca' DESC, (((vt0.c1)||(vt0.c0)) IN ()), (((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c1))))>=(((vt0.c1) IS FALSE))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST((~ (vt0.c0)) AS TEXT);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)>=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER))))AND((NOT (((((((vt0.c1)OR(x'')))AND(vt0.c1)))OR(vt0.c1))))))) ORDER BY x'b4ca' DESC, (((vt0.c1)||(vt0.c0)) IN ()), (((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c1))))>=(((vt0.c1) IS FALSE))) ASC  NULLS FIRST;
SELECT ALL * FROM t1, v0 WHERE ((((~ (t1.c0))) NOT NULL));
SELECT DISTINCT * FROM t1, v0 WHERE ((((~ (t1.c0))) NOT NULL)) LIMIT 1;
SELECT ALL * FROM t1, v0 WHERE ((((~ (t1.c0))) NOT NULL));
SELECT DISTINCT * FROM t1, v0 WHERE ((((~ (t1.c0))) NOT NULL)) LIMIT 1;
SELECT ALL MIN(v0.c2) FROM v0, t1 WHERE (CASE (NOT (t1.c1))  WHEN ((t1.c1)&(t1.c0)) THEN (+ (t1.c2)) END);
SELECT ALL MIN(v0.c2) FROM v0, t1 WHERE (CASE (NOT (t1.c1))  WHEN ((t1.c1)&(t1.c0)) THEN (+ (t1.c2)) END) LIMIT 0X1;
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((((((v0.c0)|(vt0.c0)))AND(((v0.c0)>=(t1.c2)))))AND(((t1.c2) NOT BETWEEN (vt0.c0) AND (NULL)))) NATURAL JOIN v0 WHERE (((((((((v0.c1)AND(v0.c0)))OR(t1.c0)))AND(t1.c0))) IS FALSE));
SELECT * FROM t1 INNER JOIN vt0 ON ((((((v0.c0)|(vt0.c0)))AND(((v0.c0)>=(t1.c2)))))AND(((t1.c2) NOT BETWEEN (vt0.c0) AND (NULL)))) NATURAL JOIN v0 WHERE (((((((((v0.c1)AND(v0.c0)))OR(t1.c0)))AND(t1.c0))) IS FALSE)) LIMIT 2;
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((((((v0.c0)|(vt0.c0)))AND(((v0.c0)>=(t1.c2)))))AND(((t1.c2) NOT BETWEEN (vt0.c0) AND (NULL)))) NATURAL JOIN v0 WHERE (((((((((v0.c1)AND(v0.c0)))OR(t1.c0)))AND(t1.c0))) IS FALSE));
SELECT ALL * FROM vt0, v0, t1 WHERE (((vt0.c0) NOTNULL));
SELECT * FROM vt0, v0, t1 WHERE (((vt0.c0) NOTNULL));
SELECT ALL * FROM vt0, v0, t1 WHERE (((vt0.c0) NOTNULL));
SELECT * FROM vt0, v0, t1 WHERE (((vt0.c0) NOTNULL));
SELECT * FROM vt0, t1 WHERE (((t1.c2) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) AND (vt0.c1))) ORDER BY ((((vt0.c0)IS(vt0.c0)))||(vt0.c0)) DESC  NULLS FIRST, ((((vt0.c0)|(t1.c2)))LIKE(((vt0.c0)IS(t1.c1)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 WHERE (((((t1.c2) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) AND (vt0.c1)))AND(((LOWER(DISTINCT t1.c1))<((+ (vt0.c0))))))) ORDER BY HEX(((t1.c2) BETWEEN (t1.c2) AND (t1.c2)))  NULLS LAST, ((CAST(t1.c1 AS TEXT))<<(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (LIKELIHOOD(DISTINCT NULL, (~ (vt0.c1)))) ORDER BY HEX(((t1.c2) BETWEEN (t1.c2) AND (t1.c2)))  NULLS LAST, ((CAST(t1.c1 AS TEXT))<<(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT * FROM vt0, t1 WHERE (((t1.c2) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) AND (vt0.c1))) ORDER BY ((((vt0.c0)IS(vt0.c0)))||(vt0.c0)) DESC  NULLS FIRST, ((((vt0.c0)|(t1.c2)))LIKE(((vt0.c0)IS(t1.c1)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 WHERE (((((t1.c2) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) AND (vt0.c1)))AND(((LOWER(DISTINCT t1.c1))<((+ (vt0.c0))))))) ORDER BY HEX(((t1.c2) BETWEEN (t1.c2) AND (t1.c2)))  NULLS LAST, ((CAST(t1.c1 AS TEXT))<<(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (LIKELIHOOD(DISTINCT NULL, (~ (vt0.c1)))) ORDER BY HEX(((t1.c2) BETWEEN (t1.c2) AND (t1.c2)))  NULLS LAST, ((CAST(t1.c1 AS TEXT))<<(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT * FROM v0, vt0 CROSS JOIN t1 ON CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER) WHERE (NULL);
SELECT DISTINCT * FROM v0, vt0 CROSS JOIN t1 ON CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER) WHERE (((NULL)AND(((((vt0.c0)AND((t1.c0 IN (t1.c0)))))OR(LOWER(DISTINCT x'0f')))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM v0, vt0 CROSS JOIN t1 ON CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER) WHERE (((COALESCE(v0.c0, vt0.c1)) NOTNULL)) LIMIT 0X0;
SELECT * FROM v0, vt0 CROSS JOIN t1 ON CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER) WHERE (NULL);
SELECT DISTINCT * FROM v0, vt0 CROSS JOIN t1 ON CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER) WHERE (((NULL)AND(((((vt0.c0)AND((t1.c0 IN (t1.c0)))))OR(LOWER(DISTINCT x'0f')))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM v0, vt0 CROSS JOIN t1 ON CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER) WHERE (((COALESCE(v0.c0, vt0.c1)) NOTNULL)) LIMIT 0X0;
SELECT * FROM t1 NATURAL JOIN v0 WHERE ('-965110499' COLLATE NOCASE);
SELECT ALL * FROM t1 NOT INDEXED NATURAL JOIN v0 WHERE ('-965110499' COLLATE NOCASE);
SELECT * FROM t1 NATURAL JOIN v0 WHERE ('-965110499' COLLATE NOCASE);
SELECT ALL * FROM t1 NOT INDEXED NATURAL JOIN v0 WHERE ('-965110499' COLLATE NOCASE);
SELECT * FROM vt0, v0, t1 WHERE (((((((v0.c1)OR(t1.c2)))AND(0.1512014887894454)))OR(NULL)) COLLATE NOCASE) ORDER BY (((vt0.c1 IN ('-0.0', t1.c1))) NOTNULL) ASC, ((t1.c1 COLLATE BINARY)<(t1.c1))  NULLS LAST, t1.c1 DESC;
SELECT ALL * FROM vt0, v0, t1 WHERE (((((((v0.c1)OR(t1.c2)))AND(0.1512014887894454)))OR(NULL)) COLLATE NOCASE) ORDER BY CASE t1.c2  WHEN t1.c1 THEN vt0.c1 WHEN t1.c1 THEN t1.c1 END COLLATE BINARY DESC INTERSECT SELECT ALL * FROM vt0, v0, t1 WHERE ((((+ (vt0.c1)))-(((v0.c0)GLOB(t1.c2))))) ORDER BY CASE t1.c2  WHEN t1.c1 THEN vt0.c1 WHEN t1.c1 THEN t1.c1 END COLLATE BINARY DESC;
SELECT * FROM vt0, v0, t1 WHERE (((((((v0.c1)OR(t1.c2)))AND(0.1512014887894454)))OR(NULL)) COLLATE NOCASE) ORDER BY (((vt0.c1 IN ('-0.0', t1.c1))) NOTNULL) ASC, ((t1.c1 COLLATE BINARY)<(t1.c1))  NULLS LAST, t1.c1 DESC;
SELECT ALL * FROM vt0, v0, t1 WHERE (((((((v0.c1)OR(t1.c2)))AND(0.1512014887894454)))OR(NULL)) COLLATE NOCASE) ORDER BY CASE t1.c2  WHEN t1.c1 THEN vt0.c1 WHEN t1.c1 THEN t1.c1 END COLLATE BINARY DESC INTERSECT SELECT ALL * FROM vt0, v0, t1 WHERE ((((+ (vt0.c1)))-(((v0.c0)GLOB(t1.c2))))) ORDER BY CASE t1.c2  WHEN t1.c1 THEN vt0.c1 WHEN t1.c1 THEN t1.c1 END COLLATE BINARY DESC;
SELECT ALL MAX(t1.c0) FROM v0, t1 WHERE (CAST(x'8ac30103' AS TEXT));
SELECT MAX(t1.c0) FROM v0, t1 WHERE (CAST(x'8ac30103' AS TEXT)) ORDER BY CASE WHEN ((0.559032630005835) IS FALSE) THEN ((t1.c1)=('.Cc')) END DESC, (('1974788299') IS FALSE)  NULLS LAST, CASE WHEN CAST(t1.c2 AS BLOB) THEN v0.c1 WHEN (((v0.c0))>=((0X6fbeb9e7))) THEN ((t1.c0) NOTNULL) WHEN CAST(t1.c2 AS TEXT) THEN ABS(DISTINCT v0.c1) WHEN (((v0.c1))==((v0.c0))) THEN (((v0.c2, t1.c2, t1.c0))>=((t1.c2, t1.c2, '-622895903'))) ELSE v0.c0 COLLATE BINARY END ASC INTERSECT SELECT ALL MAX(t1.c0) FROM v0, t1 WHERE (v0.c2) ORDER BY CASE WHEN ((0.559032630005835) IS FALSE) THEN ((t1.c1)=('.Cc')) END DESC, (('1974788299') IS FALSE)  NULLS LAST, CASE WHEN CAST(t1.c2 AS BLOB) THEN v0.c1 WHEN (((v0.c0))>=((1874770407))) THEN ((t1.c0) NOTNULL) WHEN CAST(t1.c2 AS TEXT) THEN ABS(DISTINCT v0.c1) WHEN (((v0.c1))=((v0.c0))) THEN (((v0.c2, t1.c2, t1.c0))>=((t1.c2, t1.c2, '-622895903'))) ELSE v0.c0 COLLATE BINARY END ASC;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ('c(.') ORDER BY ((((((vt0.c1) ISNULL))OR(((vt0.c0) NOT NULL))))AND(CASE WHEN vt0.c0 THEN t1.c1 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c2 WHEN vt0.c1 THEN vt0.c1 WHEN t1.c1 THEN vt0.c0 END))  NULLS FIRST, MIN(((t1.c2)<(t1.c0)), CAST(t1.c1 AS NUMERIC), ((t1.c0)+(t1.c0)), ((((((((((vt0.c1)AND(t1.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(t1.c0)))AND(t1.c2))) ASC, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN (((t1.c0)<=(t1.c1)), ((0.7310912821084514)LIKE(t1.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 WHERE ('c(.') ORDER BY ((((((vt0.c1) ISNULL))OR(((vt0.c0) NOT NULL))))AND(CASE WHEN vt0.c0 THEN t1.c1 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c2 WHEN vt0.c1 THEN vt0.c1 WHEN t1.c1 THEN vt0.c0 END))  NULLS FIRST, MIN(((t1.c2)<(t1.c0)), CAST(t1.c1 AS NUMERIC), ((t1.c0)+(t1.c0)), ((((((((((vt0.c1)AND(t1.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(t1.c0)))AND(t1.c2))) ASC, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN (((t1.c0)<=(t1.c1)), ((0.7310912821084514)LIKE(t1.c0)))) DESC  NULLS LAST LIMIT 0x2 INTERSECT SELECT COUNT(*) FROM t1, vt0 WHERE ((~ (((((((t1.c1)OR(t1.c2)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((vt0.c1) ISNULL))OR(((vt0.c0) NOT NULL))))AND(CASE WHEN vt0.c0 THEN t1.c1 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c2 WHEN vt0.c1 THEN vt0.c1 WHEN t1.c1 THEN vt0.c0 END))  NULLS FIRST, MIN(((t1.c2)<(t1.c0)), CAST(t1.c1 AS NUMERIC), ((t1.c0)+(t1.c0)), ((((((((((vt0.c1)AND(t1.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(t1.c0)))AND(t1.c2))) ASC, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN (((t1.c0)<=(t1.c1)), ((0.7310912821084514)LIKE(t1.c0)))) DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON t1.c0 WHERE (ABS(DISTINCT (t1.c2 IN ())));
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON t1.c0 WHERE (ABS(DISTINCT (t1.c2 IN ()))) ORDER BY ((((((t1.c1)AND(t1.c2)))AND(t1.c0))) BETWEEN (((vt0.c0) ISNULL)) AND (UPPER(DISTINCT '])玙'))) DESC, CAST(((t1.c1)<(t1.c2)) AS TEXT)  NULLS FIRST, ((+ ('-1052937140')) IN ((- (vt0.c1))))  NULLS FIRST, (((((vt0.c0, vt0.c1, '-1480560719'))>((vt0.c1, t1.c1, t1.c2)))) BETWEEN ((t1.c1 IN (vt0.c1, NULL))) AND (t1.c2 COLLATE BINARY))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON t1.c0 WHERE (HEX(((t1.c0)-(vt0.c0)))) ORDER BY ((((((t1.c1)AND(t1.c2)))AND(t1.c0))) BETWEEN (((vt0.c0) ISNULL)) AND (UPPER(DISTINCT '])玙'))) DESC, CAST(((t1.c1)<(t1.c2)) AS TEXT)  NULLS FIRST, ((+ ('-1052937140')) IN ((- (vt0.c1))))  NULLS FIRST, (((((vt0.c0, vt0.c1, '-1480560719'))>((vt0.c1, t1.c1, t1.c2)))) BETWEEN ((t1.c1 IN (vt0.c1, NULL))) AND (t1.c2 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON t1.c0 WHERE (ABS(DISTINCT (t1.c2 IN ())));
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON t1.c0 WHERE (ABS(DISTINCT (t1.c2 IN ()))) ORDER BY ((((((t1.c1)AND(t1.c2)))AND(t1.c0))) BETWEEN (((vt0.c0) ISNULL)) AND (UPPER(DISTINCT '])玙'))) DESC, CAST(((t1.c1)<(t1.c2)) AS TEXT)  NULLS FIRST, ((+ ('-1052937140')) IN ((- (vt0.c1))))  NULLS FIRST, (((((vt0.c0, vt0.c1, '-1480560719'))>((vt0.c1, t1.c1, t1.c2)))) BETWEEN ((t1.c1 IN (vt0.c1, NULL))) AND (t1.c2 COLLATE BINARY))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON t1.c0 WHERE (HEX(((t1.c0)-(vt0.c0)))) ORDER BY ((((((t1.c1)AND(t1.c2)))AND(t1.c0))) BETWEEN (((vt0.c0) ISNULL)) AND (UPPER(DISTINCT '])玙'))) DESC, CAST(((t1.c1)<(t1.c2)) AS TEXT)  NULLS FIRST, ((+ ('-1052937140')) IN ((- (vt0.c1))))  NULLS FIRST, (((((vt0.c0, vt0.c1, '-1480560719'))>((vt0.c1, t1.c1, t1.c2)))) BETWEEN ((t1.c1 IN (vt0.c1, NULL))) AND (t1.c2 COLLATE BINARY))  NULLS LAST;
SELECT MIN(t1.c2) FROM t1 WHERE (NULL COLLATE BINARY);
SELECT DISTINCT MIN(t1.c2) FROM t1 WHERE (((NULL COLLATE BINARY)AND(((- (t1.c2)) IN (((t1.c2) IS FALSE), (- (t1.c1))))))) ORDER BY (NOT (((t1.c1)LIKE(t1.c0)))) DESC  NULLS LAST INTERSECT SELECT DISTINCT MIN(t1.c2) FROM t1 WHERE (((((t1.c0)GLOB(t1.c0)))>=(t1.c1))) ORDER BY (NOT (((t1.c1)LIKE(t1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((x'94c0b468' COLLATE BINARY) NOT BETWEEN ('') AND (CAST(t1.c1 AS BLOB))) WHERE (((((((((((((((t1.c2)OR(t1.c2)))OR(t1.c2)))AND(t1.c0)))OR(t1.c0)))OR(vt0.c1)))AND(t1.c2))) ISNULL));
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON ((x'94c0b468' COLLATE BINARY) NOT BETWEEN ('') AND (CAST(t1.c1 AS BLOB))) WHERE (((((((((((((((t1.c2)OR(t1.c2)))OR(t1.c2)))AND(t1.c0)))OR(t1.c0)))OR(vt0.c1)))AND(t1.c2))) ISNULL)) ORDER BY IFNULL(DISTINCT -666793184 COLLATE RTRIM, ((t1.c1)%(vt0.c0)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON ((x'94c0b468' COLLATE BINARY) NOT BETWEEN ('') AND (CAST(t1.c1 AS BLOB))) WHERE (((CAST(vt0.c1 AS NUMERIC))LIKE((vt0.c1 IN ())))) ORDER BY IFNULL(DISTINCT 0xffffffffd8418b20 COLLATE RTRIM, ((t1.c1)%(vt0.c0)))  NULLS LAST;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((x'94c0b468' COLLATE BINARY) NOT BETWEEN ('') AND (CAST(t1.c1 AS BLOB))) WHERE (((((((((((((((t1.c2)OR(t1.c2)))OR(t1.c2)))AND(t1.c0)))OR(t1.c0)))OR(vt0.c1)))AND(t1.c2))) ISNULL));
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON ((x'94c0b468' COLLATE BINARY) NOT BETWEEN ('') AND (CAST(t1.c1 AS BLOB))) WHERE (((((((((((((((t1.c2)OR(t1.c2)))OR(t1.c2)))AND(t1.c0)))OR(t1.c0)))OR(vt0.c1)))AND(t1.c2))) ISNULL)) ORDER BY IFNULL(DISTINCT -666793184 COLLATE RTRIM, ((t1.c1)%(vt0.c0)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON ((x'94c0b468' COLLATE BINARY) NOT BETWEEN ('') AND (CAST(t1.c1 AS BLOB))) WHERE (((CAST(vt0.c1 AS NUMERIC))LIKE((vt0.c1 IN ())))) ORDER BY IFNULL(DISTINCT 0xffffffffd8418b20 COLLATE RTRIM, ((t1.c1)%(vt0.c0)))  NULLS LAST;
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(CASE v0.c0  WHEN '-1399201276' THEN NULL WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END AS BLOB) WHERE ((((NULL)<<(v0.c0)) IN (((((((((((x'73')OR(vt0.c0)))OR(v0.c0)))OR(v0.c1)))OR(vt0.c0)))AND(vt0.c1)))));
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(CASE v0.c0  WHEN '-1399201276' THEN NULL WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END AS BLOB) WHERE ((((NULL)<<(v0.c0)) IN (((((((((((x'73')OR(vt0.c0)))OR(v0.c0)))OR(v0.c1)))OR(vt0.c0)))AND(vt0.c1)))));
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(CASE v0.c0  WHEN '-1399201276' THEN NULL WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END AS BLOB) WHERE ((((NULL)<<(v0.c0)) IN (((((((((((x'73')OR(vt0.c0)))OR(v0.c0)))OR(v0.c1)))OR(vt0.c0)))AND(vt0.c1)))));
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(CASE v0.c0  WHEN '-1399201276' THEN NULL WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END AS BLOB) WHERE ((((NULL)<<(v0.c0)) IN (((((((((((x'73')OR(vt0.c0)))OR(v0.c0)))OR(v0.c1)))OR(vt0.c0)))AND(vt0.c1)))));
SELECT MAX(vt0.c1) FROM vt0 WHERE ((((((((vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0))))AND(((vt0.c1)GLOB(vt0.c0)))))AND(load_extension(vt0.c1))));
SELECT MAX(vt0.c1) FROM vt0 WHERE ((((((((((vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0))))AND(((vt0.c1)GLOB(vt0.c0)))))AND(load_extension(vt0.c1))))AND(((((((vt0.c1, vt0.c1)) BETWEEN ((x'dc6d1f', vt0.c0)) AND ((vt0.c0, vt0.c1))), vt0.c0, ((vt0.c1)-(vt0.c1))))<((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), ((vt0.c0) NOTNULL))))))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM DESC, (((NOT (vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) AND ((((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, '')) AND ((vt0.c1, vt0.c1))))) DESC LIMIT 0x0 INTERSECT SELECT MAX(vt0.c1) FROM vt0 WHERE (CASE vt0.c0  WHEN (((vt0.c1, vt0.c1))>=((vt0.c0, vt0.c1))) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END END) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM DESC, (((NOT (vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) AND ((((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, '')) AND ((vt0.c1, vt0.c1))))) DESC LIMIT 0;
SELECT ALL MIN(vt0.c0) FROM vt0, v0, t1 WHERE ('-1849189505');
SELECT MIN(vt0.c0) FROM vt0, v0, t1 WHERE ((('-1849189505')AND(((CAST(t1.c0 AS BLOB)) IS TRUE)))) ORDER BY (((x'82ca7b' IN (t1.c1))) NOT BETWEEN ((+ (v0.c0))) AND ((((t1.c1, vt0.c1, vt0.c1)) BETWEEN ((v0.c0, '707542662', vt0.c0)) AND ((v0.c2, t1.c0, vt0.c1))))) ASC, ((((t1.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))) ISNULL) ASC  NULLS LAST INTERSECT SELECT ALL MIN(vt0.c0) FROM vt0, v0, t1 WHERE (0x5bc0826c) ORDER BY (((x'82ca7b' IN (t1.c1))) NOT BETWEEN ((+ (v0.c0))) AND ((((t1.c1, vt0.c1, vt0.c1)) BETWEEN ((v0.c0, '707542662', vt0.c0)) AND ((v0.c2, t1.c0, vt0.c1))))) ASC, ((((t1.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))) ISNULL) ASC  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c1))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((t1.c0)/(0.49829640008409926)))));
SELECT MIN(t1.c1) FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c1))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((t1.c0)/(0.49829640008409926)))))AND(NULL))) ORDER BY CASE WHEN (- (t1.c2)) THEN (t1.c0 IN ()) END ASC, (((t1.c1)) NOT BETWEEN (((((t1.c1, t1.c2, t1.c1, x'ddae', t1.c0))!=((t1.c2, t1.c1, t1.c0, t1.c2, t1.c0))))) AND ((t1.c1))) DESC  NULLS LAST, (((((t1.c1)AND('')))AND(t1.c2)) IN (((t1.c1)*(x'')))) DESC  NULLS FIRST LIMIT 0x3;
SELECT * FROM v0, t1, vt0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (t1.c1)))*(CASE WHEN 'c' THEN v0.c0 WHEN t1.c1 THEN t1.c2 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN NULL END))) ORDER BY ((v0.c2)<=((~ (vt0.c1)))) DESC  NULLS FIRST, 'Z'  NULLS FIRST;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((((v0.c1) NOT BETWEEN (v0.c2) AND (t1.c1)))*(CASE WHEN 'c' THEN v0.c0 WHEN t1.c1 THEN t1.c2 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN NULL END)))AND(((((((t1.c0 COLLATE BINARY)OR(((((((x'')AND(t1.c0)))OR(v0.c0)))OR(v0.c0)))))AND(CAST(t1.c2 AS INTEGER))))OR(CAST(v0.c1 AS BLOB)))))) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c1) BETWEEN (x'e38f') AND (vt0.c0))) AND ((((t1.c0))>((v0.c1))))), ((CAST(t1.c1 AS INTEGER)) NOTNULL) ASC  NULLS LAST;
SELECT * FROM v0, t1, vt0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (t1.c1)))*(CASE WHEN 'c' THEN v0.c0 WHEN t1.c1 THEN t1.c2 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN NULL END))) ORDER BY ((v0.c2)<=((~ (vt0.c1)))) DESC  NULLS FIRST, 'Z'  NULLS FIRST;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((((v0.c1) NOT BETWEEN (v0.c2) AND (t1.c1)))*(CASE WHEN 'c' THEN v0.c0 WHEN t1.c1 THEN t1.c2 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN NULL END)))AND(((((((t1.c0 COLLATE BINARY)OR(((((((x'')AND(t1.c0)))OR(v0.c0)))OR(v0.c0)))))AND(CAST(t1.c2 AS INTEGER))))OR(CAST(v0.c1 AS BLOB)))))) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c1) BETWEEN (x'e38f') AND (vt0.c0))) AND ((((t1.c0))>((v0.c1))))), ((CAST(t1.c1 AS INTEGER)) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LOWER((vt0.c1 IN (v0.c1))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LOWER((vt0.c1 IN (v0.c1)))) ORDER BY ((v0.c1 COLLATE BINARY) IS TRUE) ASC, (+ ('1123743160')) DESC  NULLS FIRST, ((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(1.076981978E9))) NOT BETWEEN (v0.c2) AND ((vt0.c1 IN (v0.c1, vt0.c1)))) LIMIT 0X0;
SELECT ALL MAX(t1.c1) FROM t1, vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))LIKE(((t1.c2)<(t1.c1)))));
SELECT ALL MAX(t1.c1) FROM t1, vt0 WHERE ((((((((vt0.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))LIKE(((t1.c2)<(t1.c1)))))AND(((((((((((((t1.c1)AND(vt0.c0)))OR(t1.c1)))OR(vt0.c0)))AND(t1.c0)))AND(t1.c1)))+(vt0.c0))))) ORDER BY ((((t1.c1 IN (t1.c0))))>=(('0.07092453200230664'))), 'T4 J-m?' LIMIT 0 INTERSECT SELECT MAX(t1.c1) FROM t1, vt0 WHERE (((((((((t1.c0) NOT BETWEEN ('135398466') AND (vt0.c0)))OR((~ (t1.c0)))))OR(SQLITE_VERSION())))OR(((t1.c1) ISNULL)))) ORDER BY ((((t1.c1 IN (t1.c0))))>=(('0.07092453200230664'))), 'T4 J-m?' LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (IFNULL(((vt0.c1)/(v0.c0)), '-1860802594')) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c1 END AS TEXT) ASC  NULLS FIRST, ((((v0.c2)AND(v0.c2)))AND(v0.c2)) COLLATE NOCASE;
SELECT DISTINCT COUNT(*) FROM vt0, v0 WHERE (((IFNULL(((vt0.c1)/(v0.c0)), '-1860802594'))AND(CAST('506959709' AS NUMERIC)))) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c1 END AS TEXT) ASC  NULLS FIRST, ((((v0.c2)AND(v0.c2)))AND(v0.c2)) COLLATE NOCASE INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, v0 WHERE (CASE ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(v0.c0))  WHEN v0.c0 THEN ((v0.c1)<>('FTY2Zf]')) END) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c1 END AS TEXT) ASC  NULLS FIRST, ((((v0.c2)AND(v0.c2)))AND(v0.c2)) COLLATE NOCASE;
SELECT * FROM t1 INNER JOIN v0 ON CAST(0.17733561690584876 AS NUMERIC) WHERE (((((((t1.c2) BETWEEN (x'') AND (v0.c1)))OR(t1.c2)))OR((v0.c1 IN ()))));
SELECT DISTINCT * FROM t1 INNER JOIN v0 ON CAST(0.17733561690584876 AS NUMERIC) WHERE (((((((((t1.c2) BETWEEN (x'') AND (v0.c1)))OR(t1.c2)))OR((v0.c1 IN ()))))AND(((x'')>>((((v0.c1))=((v0.c1)))))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 INNER JOIN v0 ON CAST(0.17733561690584876 AS NUMERIC) WHERE (CASE WHEN CAST(v0.c2 AS REAL) THEN (NOT (t1.c2)) ELSE CASE v0.c0  WHEN x'ba' THEN v0.c0 WHEN v0.c0 THEN t1.c1 WHEN t1.c0 THEN v0.c0 END END) LIMIT 0;
SELECT * FROM t1 INNER JOIN v0 ON CAST(0.17733561690584876 AS NUMERIC) WHERE (((((((t1.c2) BETWEEN (x'') AND (v0.c1)))OR(t1.c2)))OR((v0.c1 IN ()))));
SELECT DISTINCT * FROM t1 INNER JOIN v0 ON CAST(0.17733561690584876 AS NUMERIC) WHERE (((((((((t1.c2) BETWEEN (x'') AND (v0.c1)))OR(t1.c2)))OR((v0.c1 IN ()))))AND(((x'')>>((((v0.c1))=((v0.c1)))))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 INNER JOIN v0 ON CAST(0.17733561690584876 AS NUMERIC) WHERE (CASE WHEN CAST(v0.c2 AS REAL) THEN (NOT (t1.c2)) ELSE CASE v0.c0  WHEN x'ba' THEN v0.c0 WHEN v0.c0 THEN t1.c1 WHEN t1.c0 THEN v0.c0 END END) LIMIT 0;
SELECT ALL * FROM vt0 WHERE ('0.31636427486005403') ORDER BY (((vt0.c1 IN (vt0.c1)))|(((vt0.c0) IS TRUE))) ASC  NULLS FIRST, (((vt0.c0, vt0.c0)) BETWEEN (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)<=(vt0.c1)))) AND ((vt0.c0, vt0.c0 COLLATE BINARY))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((('0.31636427486005403')AND(CAST(CAST(vt0.c1 AS BLOB) AS TEXT)))) ORDER BY (((- (vt0.c1)))IS(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0xffffffffecaeef66 END)) ASC, ((vt0.c1)GLOB(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, (((vt0.c0, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((CAST(0.13173013954964807 AS INTEGER), '.Cc' COLLATE BINARY, ((vt0.c1) NOTNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (vt0.c1 IN (vt0.c0)), HEX(vt0.c0), vt0.c1 COLLATE RTRIM))) ASC INTERSECT SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)%(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((- (vt0.c1)))IS(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0Xffffffffecaeef66 END)) ASC, ((vt0.c1)GLOB(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, (((vt0.c0, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((CAST(0.13173013954964807 AS INTEGER), '.Cc' COLLATE BINARY, ((vt0.c1) NOTNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (vt0.c1 IN (vt0.c0)), HEX(vt0.c0), vt0.c1 COLLATE RTRIM))) ASC;
SELECT ALL * FROM vt0 WHERE ('0.31636427486005403') ORDER BY (((vt0.c1 IN (vt0.c1)))|(((vt0.c0) IS TRUE))) ASC  NULLS FIRST, (((vt0.c0, vt0.c0)) BETWEEN (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)<=(vt0.c1)))) AND ((vt0.c0, vt0.c0 COLLATE BINARY))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((('0.31636427486005403')AND(CAST(CAST(vt0.c1 AS BLOB) AS TEXT)))) ORDER BY (((- (vt0.c1)))IS(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0xffffffffecaeef66 END)) ASC, ((vt0.c1)GLOB(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, (((vt0.c0, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((CAST(0.13173013954964807 AS INTEGER), '.Cc' COLLATE BINARY, ((vt0.c1) NOTNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (vt0.c1 IN (vt0.c0)), HEX(vt0.c0), vt0.c1 COLLATE RTRIM))) ASC INTERSECT SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)%(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((- (vt0.c1)))IS(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0Xffffffffecaeef66 END)) ASC, ((vt0.c1)GLOB(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, (((vt0.c0, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((CAST(0.13173013954964807 AS INTEGER), '.Cc' COLLATE BINARY, ((vt0.c1) NOTNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (vt0.c1 IN (vt0.c0)), HEX(vt0.c0), vt0.c1 COLLATE RTRIM))) ASC;
SELECT MAX(t1.c0) FROM t1, v0, vt0 WHERE (((CAST(x'd668' AS INTEGER)) ISNULL));
SELECT ALL MAX(t1.c0) FROM t1, v0, vt0 WHERE (((((CAST(x'd668' AS INTEGER)) ISNULL))AND(((((v0.c0)OR(t1.c0)))OR(vt0.c1)) COLLATE RTRIM))) ORDER BY -1941594687  NULLS FIRST, LAST_INSERT_ROWID() DESC  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t1, v0, vt0 WHERE (CAST('' AS REAL));
SELECT * FROM t1, v0, vt0 WHERE (((CAST('' AS REAL))AND((('312748648') NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((v0.c1)|(v0.c0))))))) ORDER BY ((((vt0.c0) NOT BETWEEN (t1.c0) AND (v0.c1)))==('c')) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t1, v0, vt0 WHERE (((0Xfffffffff0e0c2c7)*(NULL))) ORDER BY ((((vt0.c0) NOT BETWEEN (t1.c0) AND (v0.c1)))=('c')) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t1, v0, vt0 WHERE (CAST('' AS REAL));
SELECT * FROM t1, v0, vt0 WHERE (((CAST('' AS REAL))AND((('312748648') NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((v0.c1)|(v0.c0))))))) ORDER BY ((((vt0.c0) NOT BETWEEN (t1.c0) AND (v0.c1)))==('c')) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM t1, v0, vt0 WHERE (((0Xfffffffff0e0c2c7)*(NULL))) ORDER BY ((((vt0.c0) NOT BETWEEN (t1.c0) AND (v0.c1)))=('c')) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM vt0 WHERE (((0.8327800773748388)+(vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c0 DESC  NULLS LAST, CAST(vt0.c0 COLLATE RTRIM AS BLOB) DESC;
SELECT ALL * FROM vt0 WHERE (((0.8327800773748388)+(vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c0 DESC, (+ (((NULL)-(vt0.c0)))) ASC, vt0.c0 ASC  NULLS LAST INTERSECT SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c1 AS REAL)))>(((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((0.7112285859638923))))))) ORDER BY vt0.c0 DESC, (+ (((NULL)-(vt0.c0)))) ASC, vt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((0.8327800773748388)+(vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c0 DESC  NULLS LAST, CAST(vt0.c0 COLLATE RTRIM AS BLOB) DESC;
SELECT ALL * FROM vt0 WHERE (((0.8327800773748388)+(vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c0 DESC, (+ (((NULL)-(vt0.c0)))) ASC, vt0.c0 ASC  NULLS LAST INTERSECT SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c1 AS REAL)))>(((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((0.7112285859638923))))))) ORDER BY vt0.c0 DESC, (+ (((NULL)-(vt0.c0)))) ASC, vt0.c0 ASC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((~ (t1.c0)) IN ()));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((~ (t1.c0)) IN ()))AND(((CASE t1.c0  WHEN x'' THEN t1.c0 END) IS TRUE))));
SELECT MAX(vt0.c1) FROM vt0, t1 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR((vt0.c0 IN (t1.c0)))))AND((((vt0.c0, vt0.c1))>=((t1.c0, vt0.c0))))));
SELECT ALL MAX(vt0.c1) FROM vt0, t1 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR((vt0.c0 IN (t1.c0)))))AND((((vt0.c0, vt0.c1))>=((t1.c0, vt0.c0))))));
SELECT * FROM vt0, v0 WHERE ('') ORDER BY CAST(((v0.c1) BETWEEN (v0.c1) AND (vt0.c1)) AS BLOB), CASE ((vt0.c0)*(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)&(vt0.c0)) WHEN 0x4461d8f1 THEN v0.c2 END;
SELECT * FROM vt0, v0 WHERE ((('')AND((+ (CAST(vt0.c1 AS REAL)))))) ORDER BY UNLIKELY(DISTINCT CAST(v0.c2 AS REAL))  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM vt0, v0 WHERE ((((((+ (v0.c0)))OR(v0.c0 COLLATE BINARY)))OR(vt0.c0 COLLATE NOCASE))) ORDER BY UNLIKELY(DISTINCT CAST(v0.c2 AS REAL))  NULLS LAST LIMIT 0x0;
SELECT * FROM vt0, v0 WHERE ('') ORDER BY CAST(((v0.c1) BETWEEN (v0.c1) AND (vt0.c1)) AS BLOB), CASE ((vt0.c0)*(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)&(vt0.c0)) WHEN 0x4461d8f1 THEN v0.c2 END;
SELECT * FROM vt0, v0 WHERE ((('')AND((+ (CAST(vt0.c1 AS REAL)))))) ORDER BY UNLIKELY(DISTINCT CAST(v0.c2 AS REAL))  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM vt0, v0 WHERE ((((((+ (v0.c0)))OR(v0.c0 COLLATE BINARY)))OR(vt0.c0 COLLATE NOCASE))) ORDER BY UNLIKELY(DISTINCT CAST(v0.c2 AS REAL))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM v0, t1 WHERE ('0.6397446942912896');
SELECT DISTINCT * FROM v0, t1 WHERE ('0.6397446942912896');
SELECT ALL * FROM v0, t1 WHERE ('0.6397446942912896');
SELECT DISTINCT * FROM v0, t1 WHERE ('0.6397446942912896');
SELECT * FROM v0, vt0, t1 WHERE (((((v0.c2)<(v0.c1)))=((vt0.c1 IN (vt0.c1, t1.c2, vt0.c0)))));
SELECT * FROM v0, vt0, t1 WHERE (((((v0.c2)<(v0.c1)))=((vt0.c1 IN (vt0.c1, t1.c2, vt0.c0)))));
SELECT * FROM v0, vt0, t1 WHERE (((((v0.c2)<(v0.c1)))=((vt0.c1 IN (vt0.c1, t1.c2, vt0.c0)))));
SELECT * FROM v0, vt0, t1 WHERE (((((v0.c2)<(v0.c1)))=((vt0.c1 IN (vt0.c1, t1.c2, vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE('c\q
7	#')) COLLATE BINARY COLLATE BINARY);
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE('c\q
7	#')) COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE ((((+ ('-336308551')))*(t1.c0))) ORDER BY CAST(v0.c2 AS REAL) COLLATE NOCASE  NULLS FIRST, (+ (((((((vt0.c1)OR(t1.c0)))AND(t1.c1)))OR(vt0.c0))))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1, vt0, v0 WHERE ((((((+ ('-336308551')))*(t1.c0)))AND((((((((t1.c0, v0.c1, t1.c1, v0.c1))>((7.24060006E8, v0.c0, t1.c0, v0.c2))))OR(((vt0.c1)||(v0.c2)))))OR(''))))) ORDER BY CAST(v0.c2 AS REAL) COLLATE NOCASE  NULLS FIRST, (+ (((((((vt0.c1)OR(t1.c0)))AND(t1.c1)))OR(vt0.c0))))  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM t1, vt0, v0 WHERE (vt0.c1) ORDER BY CAST(v0.c2 AS REAL) COLLATE NOCASE  NULLS FIRST, (+ (((((((vt0.c1)OR(t1.c0)))AND(t1.c1)))OR(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (CAST(((t1.c1) BETWEEN (v0.c1) AND (v0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (CAST(((t1.c1) BETWEEN (v0.c1) AND (v0.c1)) AS TEXT)) INTERSECT SELECT COUNT(*) FROM v0, t1, vt0 WHERE (((((((t1.c2)OR(v0.c1)))OR(vt0.c0))) IS FALSE));
SELECT * FROM v0, t1 LEFT OUTER JOIN vt0 ON COALESCE(HEX(t1.c2), t1.c2 COLLATE RTRIM, CASE WHEN t1.c0 THEN x'13a891' WHEN t1.c0 THEN '1590131830' END) WHERE (((0.6070631610749199) ISNULL)) ORDER BY v0.c1 ASC  NULLS LAST;
SELECT DISTINCT * FROM v0, t1 INNER JOIN vt0 ON COALESCE(HEX(t1.c2), t1.c2 COLLATE RTRIM, CASE WHEN t1.c0 THEN x'13a891' WHEN t1.c0 THEN '1590131830' END) WHERE (((0.6070631610749199) ISNULL)) ORDER BY v0.c0 ASC LIMIT 0x1;
SELECT * FROM v0, t1 LEFT OUTER JOIN vt0 ON COALESCE(HEX(t1.c2), t1.c2 COLLATE RTRIM, CASE WHEN t1.c0 THEN x'13a891' WHEN t1.c0 THEN '1590131830' END) WHERE (((0.6070631610749199) ISNULL)) ORDER BY v0.c1 ASC  NULLS LAST;
SELECT DISTINCT * FROM v0, t1 INNER JOIN vt0 ON COALESCE(HEX(t1.c2), t1.c2 COLLATE RTRIM, CASE WHEN t1.c0 THEN x'13a891' WHEN t1.c0 THEN '1590131830' END) WHERE (((0.6070631610749199) ISNULL)) ORDER BY v0.c0 ASC LIMIT 0x1;
SELECT MIN(v0.c2) FROM v0 LEFT OUTER JOIN t1 ON ((vt0.c0) NOT NULL) CROSS JOIN vt0 ON (+ ((((vt0.c1, v0.c2))!=((t1.c2, v0.c0))))) WHERE (LOWER(((v0.c1)IS(vt0.c0))));
SELECT DISTINCT MIN(v0.c2) FROM v0 INNER JOIN t1 ON ((vt0.c0) NOT NULL) CROSS JOIN vt0 ON (+ ((((vt0.c1, v0.c2))<>((t1.c2, v0.c0))))) WHERE (((LOWER(((v0.c1)IS(vt0.c0))))AND(v0.c1))) ORDER BY ((CASE vt0.c1  WHEN 0X7a56fc1 THEN v0.c0 WHEN t1.c0 THEN v0.c1 WHEN v0.c2 THEN t1.c1 WHEN vt0.c1 THEN t1.c2 END) NOT BETWEEN (CASE v0.c1  WHEN t1.c0 THEN v0.c0 WHEN t1.c1 THEN v0.c2 END) AND (((t1.c0) NOT BETWEEN (t1.c2) AND ('0.5953621989363957')))) DESC, (NOT ((((vt0.c0))=((v0.c2))))) INTERSECT SELECT DISTINCT MIN(v0.c2) FROM v0 INNER JOIN t1 ON ((vt0.c0) NOT NULL) CROSS JOIN vt0 ON (+ ((((vt0.c1, v0.c2))!=((t1.c2, v0.c0))))) WHERE (CAST(((t1.c1) IS FALSE) AS BLOB)) ORDER BY ((CASE vt0.c1  WHEN 128282561 THEN v0.c0 WHEN t1.c0 THEN v0.c1 WHEN v0.c2 THEN t1.c1 WHEN vt0.c1 THEN t1.c2 END) NOT BETWEEN (CASE v0.c1  WHEN t1.c0 THEN v0.c0 WHEN t1.c1 THEN v0.c2 END) AND (((t1.c0) NOT BETWEEN (t1.c2) AND ('0.5953621989363957')))) DESC, (NOT ((((vt0.c0))=((v0.c2)))));
SELECT ALL * FROM v0 WHERE ((((v0.c1)+(v0.c1)) IN ())) ORDER BY CASE WHEN ((v0.c0)+(0.7705805785770041)) THEN (v0.c2 IN ()) WHEN (- (NULL)) THEN CAST(v0.c0 AS TEXT) WHEN ((NULL)IS NOT(v0.c2)) THEN ((v0.c0)OR(v0.c0)) END  NULLS LAST;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c1)+(v0.c1)) IN ()))AND(v0.c0))) ORDER BY CASE WHEN ((v0.c0)+(0.7705805785770041)) THEN (v0.c2 IN ()) WHEN (- (NULL)) THEN CAST(v0.c0 AS TEXT) WHEN ((NULL)IS NOT(v0.c2)) THEN ((v0.c0)OR(v0.c0)) END  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((v0.c1)+(v0.c1)) IN ())) ORDER BY CASE WHEN ((v0.c0)+(0.7705805785770041)) THEN (v0.c2 IN ()) WHEN (- (NULL)) THEN CAST(v0.c0 AS TEXT) WHEN ((NULL)IS NOT(v0.c2)) THEN ((v0.c0)OR(v0.c0)) END  NULLS LAST;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c1)+(v0.c1)) IN ()))AND(v0.c0))) ORDER BY CASE WHEN ((v0.c0)+(0.7705805785770041)) THEN (v0.c2 IN ()) WHEN (- (NULL)) THEN CAST(v0.c0 AS TEXT) WHEN ((NULL)IS NOT(v0.c2)) THEN ((v0.c0)OR(v0.c0)) END  NULLS LAST;
SELECT MAX(vt0.c0) FROM t1, v0 NATURAL JOIN vt0 WHERE (0.04045493555783841) ORDER BY ((CAST(v0.c1 AS BLOB)) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (0xffffffff8562b836)) ASC;
SELECT ALL MAX(vt0.c0) FROM t1, v0 NATURAL JOIN vt0 WHERE (((0.04045493555783841)AND(((((((CASE WHEN v0.c2 THEN v0.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN vt0.c1 WHEN vt0.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c1 ELSE vt0.c1 END)AND(((v0.c0) ISNULL))))AND(CAST(x'' AS NUMERIC))))AND(((vt0.c0)OR(t1.c2))))))) ORDER BY ((CAST(v0.c1 AS BLOB)) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (0xffffffff8562b836)) ASC;
SELECT * FROM t1 INNER JOIN v0 ON ((t1.c1) ISNULL) COLLATE NOCASE COLLATE RTRIM WHERE ((- (((v0.c2) IS FALSE)))) ORDER BY x'98' ASC  NULLS FIRST;
SELECT ALL * FROM t1 INNER JOIN v0 ON ((t1.c1) ISNULL) COLLATE NOCASE COLLATE RTRIM WHERE ((((- (((v0.c2) IS FALSE))))AND(TYPEOF(DISTINCT (((-4.59511557E8)) BETWEEN ((t1.c1)) AND ((t1.c1))))))) ORDER BY x'' COLLATE RTRIM ASC, CASE v0.c1  WHEN t1.c0 THEN t1.c2 ELSE t1.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM t1 INNER JOIN v0 ON ((t1.c1) ISNULL) COLLATE NOCASE COLLATE RTRIM WHERE ((- (((v0.c2) IS FALSE)))) ORDER BY x'98' ASC  NULLS FIRST;
SELECT ALL * FROM t1 INNER JOIN v0 ON ((t1.c1) ISNULL) COLLATE NOCASE COLLATE RTRIM WHERE ((((- (((v0.c2) IS FALSE))))AND(TYPEOF(DISTINCT (((-4.59511557E8)) BETWEEN ((t1.c1)) AND ((t1.c1))))))) ORDER BY x'' COLLATE RTRIM ASC, CASE v0.c1  WHEN t1.c0 THEN t1.c2 ELSE t1.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM v0 CROSS JOIN t1 ON TRIM(0.27797247289921023) CROSS JOIN vt0 ON ((((t1.c0) NOT BETWEEN ('875811606') AND (v0.c1))) ISNULL) WHERE (((((vt0.c0)GLOB(v0.c1)))-(vt0.c0 COLLATE RTRIM)));
SELECT DISTINCT * FROM v0 CROSS JOIN t1 ON TRIM(0.27797247289921023) CROSS JOIN vt0 ON ((((t1.c0) NOT BETWEEN ('875811606') AND (v0.c1))) ISNULL) WHERE (((((vt0.c0)GLOB(v0.c1)))-(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0) NOT BETWEEN (t1.c2) AND ('T,x9pup2d')) COLLATE RTRIM DESC  NULLS FIRST, (((0.6795195646515952)) BETWEEN ((CASE 's1'  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 ELSE t1.c1 END)) AND ((COALESCE(v0.c2, t1.c1, v0.c0, v0.c2)))) DESC  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM v0 CROSS JOIN t1 ON TRIM(0.27797247289921023) CROSS JOIN vt0 ON ((((t1.c0) NOT BETWEEN ('875811606') AND (v0.c1))) ISNULL) WHERE (((((vt0.c0)GLOB(v0.c1)))-(vt0.c0 COLLATE RTRIM)));
SELECT DISTINCT * FROM v0 CROSS JOIN t1 ON TRIM(0.27797247289921023) CROSS JOIN vt0 ON ((((t1.c0) NOT BETWEEN ('875811606') AND (v0.c1))) ISNULL) WHERE (((((vt0.c0)GLOB(v0.c1)))-(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0) NOT BETWEEN (t1.c2) AND ('T,x9pup2d')) COLLATE RTRIM DESC  NULLS FIRST, (((0.6795195646515952)) BETWEEN ((CASE 's1'  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 ELSE t1.c1 END)) AND ((COALESCE(v0.c2, t1.c1, v0.c0, v0.c2)))) DESC  NULLS FIRST LIMIT 0X2;
SELECT MAX(t1.c2) FROM vt0, t1, v0 WHERE ((((((((((v0.c1, v0.c1))>((x'', t1.c0))))AND(vt0.c1)))OR(((v0.c2)==(vt0.c1)))))AND(((v0.c2) NOT NULL)))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0)IS NOT(v0.c1))) AND ((~ (vt0.c1))))  NULLS FIRST;
SELECT DISTINCT MAX(t1.c2) FROM vt0, t1, v0 WHERE ((((((((((((v0.c1, v0.c1))>((x'', t1.c0))))AND(vt0.c1)))OR(((v0.c2)=(vt0.c1)))))AND(((v0.c2) NOT NULL))))AND(((((vt0.c1 IN (t1.c2)), LIKE(v0.c1, t1.c2), '-1'))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)), (v0.c0 IN (vt0.c0)), ((v0.c2)<>('-1015592478')))))))) ORDER BY (('6nv#NsLR')LIKE(v0.c0)) COLLATE BINARY, (((~ (t1.c1))) NOT BETWEEN (((t1.c0)>>(v0.c1))) AND (CAST(vt0.c1 AS TEXT))) ASC, (((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))))-(((vt0.c0) NOT BETWEEN (v0.c0) AND (t1.c1))))  NULLS LAST, (~ (COALESCE(DISTINCT -1.675189967E9, 0.5592559315598296, t1.c2, t1.c2, t1.c0)));
SELECT * FROM t1, v0, vt0 WHERE (NULL) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM t1, v0, vt0 WHERE (NULL) ORDER BY NULL DESC  NULLS FIRST INTERSECT SELECT ALL * FROM t1, v0, vt0 WHERE ((((v0.c0)+(t1.c1)) IN ())) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM t1, v0, vt0 WHERE (NULL) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM t1, v0, vt0 WHERE (NULL) ORDER BY NULL DESC  NULLS FIRST INTERSECT SELECT ALL * FROM t1, v0, vt0 WHERE ((((v0.c0)+(t1.c1)) IN ())) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((vt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c1)) COLLATE NOCASE CROSS JOIN t1 ON (((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((v0.c2)))) NOT BETWEEN (((((((((((v0.c0)OR(t1.c2)))OR('Z')))OR(v0.c2)))OR(t1.c0)))OR(vt0.c1))) AND (t1.c0 COLLATE NOCASE)) WHERE (((((t1.c2, vt0.c0)) NOT BETWEEN ((v0.c2, v0.c0)) AND ((v0.c1, t1.c0))) IN ())) ORDER BY CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) WHEN v0.c1 THEN 0xffffffffade4f405 WHEN ((t1.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)) THEN t1.c1 WHEN -756498158 THEN (((vt0.c1, v0.c1, vt0.c0, v0.c2, vt0.c1, t1.c1))>((vt0.c1, 0xffffffffeb99963f, t1.c2, t1.c1, t1.c1, v0.c1))) WHEN CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 END THEN (((t1.c2, v0.c2, vt0.c0, t1.c2, t1.c1)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c1, t1.c0, vt0.c1)) AND ((t1.c2, vt0.c1, vt0.c0, v0.c2, t1.c1))) WHEN CASE vt0.c0  WHEN -8.41927177E8 THEN t1.c0 END THEN ((v0.c2)-(t1.c1)) ELSE CAST(t1.c1 AS TEXT) END, ((CASE WHEN t1.c2 THEN v0.c2 ELSE t1.c2 END) ISNULL) ASC;
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((vt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c1)) COLLATE NOCASE CROSS JOIN t1 ON (((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((v0.c2)))) NOT BETWEEN (((((((((((v0.c0)OR(t1.c2)))OR('Z')))OR(v0.c2)))OR(t1.c0)))OR(vt0.c1))) AND (t1.c0 COLLATE NOCASE)) WHERE (((((((t1.c2, vt0.c0)) NOT BETWEEN ((v0.c2, v0.c0)) AND ((v0.c1, t1.c0))) IN ()))AND((NOT (highlight(v0.c2, '184538343', t1.c2, t1.c2)))))) ORDER BY CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) WHEN v0.c1 THEN -1377504251 WHEN ((t1.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)) THEN t1.c1 WHEN 0xffffffffd2e8c112 THEN (((vt0.c1, v0.c1, vt0.c0, v0.c2, vt0.c1, t1.c1))>((vt0.c1, 0xffffffffeb99963f, t1.c2, t1.c1, t1.c1, v0.c1))) WHEN CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 END THEN (((t1.c2, v0.c2, vt0.c0, t1.c2, t1.c1)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c1, t1.c0, vt0.c1)) AND ((t1.c2, vt0.c1, vt0.c0, v0.c2, t1.c1))) WHEN CASE vt0.c0  WHEN -8.41927177E8 THEN t1.c0 END THEN ((v0.c2)-(t1.c1)) ELSE CAST(t1.c1 AS TEXT) END, ((CASE WHEN t1.c2 THEN v0.c2 ELSE t1.c2 END) ISNULL) ASC INTERSECT SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((vt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c1)) COLLATE NOCASE CROSS JOIN t1 ON (((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((v0.c2)))) NOT BETWEEN (((((((((((v0.c0)OR(t1.c2)))OR('Z')))OR(v0.c2)))OR(t1.c0)))OR(vt0.c1))) AND (t1.c0 COLLATE NOCASE)) WHERE (t1.c2) ORDER BY CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) WHEN v0.c1 THEN -1377504251 WHEN ((t1.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)) THEN t1.c1 WHEN -756498158 THEN (((vt0.c1, v0.c1, vt0.c0, v0.c2, vt0.c1, t1.c1))>((vt0.c1, 0xffffffffeb99963f, t1.c2, t1.c1, t1.c1, v0.c1))) WHEN CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 END THEN (((t1.c2, v0.c2, vt0.c0, t1.c2, t1.c1)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c1, t1.c0, vt0.c1)) AND ((t1.c2, vt0.c1, vt0.c0, v0.c2, t1.c1))) WHEN CASE vt0.c0  WHEN -8.41927177E8 THEN t1.c0 END THEN ((v0.c2)-(t1.c1)) ELSE CAST(t1.c1 AS TEXT) END, ((CASE WHEN t1.c2 THEN v0.c2 ELSE t1.c2 END) ISNULL) ASC;
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((vt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c1)) COLLATE NOCASE CROSS JOIN t1 ON (((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((v0.c2)))) NOT BETWEEN (((((((((((v0.c0)OR(t1.c2)))OR('Z')))OR(v0.c2)))OR(t1.c0)))OR(vt0.c1))) AND (t1.c0 COLLATE NOCASE)) WHERE (((((t1.c2, vt0.c0)) NOT BETWEEN ((v0.c2, v0.c0)) AND ((v0.c1, t1.c0))) IN ())) ORDER BY CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) WHEN v0.c1 THEN 0xffffffffade4f405 WHEN ((t1.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)) THEN t1.c1 WHEN -756498158 THEN (((vt0.c1, v0.c1, vt0.c0, v0.c2, vt0.c1, t1.c1))>((vt0.c1, 0xffffffffeb99963f, t1.c2, t1.c1, t1.c1, v0.c1))) WHEN CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 END THEN (((t1.c2, v0.c2, vt0.c0, t1.c2, t1.c1)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c1, t1.c0, vt0.c1)) AND ((t1.c2, vt0.c1, vt0.c0, v0.c2, t1.c1))) WHEN CASE vt0.c0  WHEN -8.41927177E8 THEN t1.c0 END THEN ((v0.c2)-(t1.c1)) ELSE CAST(t1.c1 AS TEXT) END, ((CASE WHEN t1.c2 THEN v0.c2 ELSE t1.c2 END) ISNULL) ASC;
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((vt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c1)) COLLATE NOCASE CROSS JOIN t1 ON (((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((v0.c2)))) NOT BETWEEN (((((((((((v0.c0)OR(t1.c2)))OR('Z')))OR(v0.c2)))OR(t1.c0)))OR(vt0.c1))) AND (t1.c0 COLLATE NOCASE)) WHERE (((((((t1.c2, vt0.c0)) NOT BETWEEN ((v0.c2, v0.c0)) AND ((v0.c1, t1.c0))) IN ()))AND((NOT (highlight(v0.c2, '184538343', t1.c2, t1.c2)))))) ORDER BY CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) WHEN v0.c1 THEN -1377504251 WHEN ((t1.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)) THEN t1.c1 WHEN 0xffffffffd2e8c112 THEN (((vt0.c1, v0.c1, vt0.c0, v0.c2, vt0.c1, t1.c1))>((vt0.c1, 0xffffffffeb99963f, t1.c2, t1.c1, t1.c1, v0.c1))) WHEN CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 END THEN (((t1.c2, v0.c2, vt0.c0, t1.c2, t1.c1)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c1, t1.c0, vt0.c1)) AND ((t1.c2, vt0.c1, vt0.c0, v0.c2, t1.c1))) WHEN CASE vt0.c0  WHEN -8.41927177E8 THEN t1.c0 END THEN ((v0.c2)-(t1.c1)) ELSE CAST(t1.c1 AS TEXT) END, ((CASE WHEN t1.c2 THEN v0.c2 ELSE t1.c2 END) ISNULL) ASC INTERSECT SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((vt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c1)) COLLATE NOCASE CROSS JOIN t1 ON (((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((v0.c2)))) NOT BETWEEN (((((((((((v0.c0)OR(t1.c2)))OR('Z')))OR(v0.c2)))OR(t1.c0)))OR(vt0.c1))) AND (t1.c0 COLLATE NOCASE)) WHERE (t1.c2) ORDER BY CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) WHEN v0.c1 THEN -1377504251 WHEN ((t1.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)) THEN t1.c1 WHEN -756498158 THEN (((vt0.c1, v0.c1, vt0.c0, v0.c2, vt0.c1, t1.c1))>((vt0.c1, 0xffffffffeb99963f, t1.c2, t1.c1, t1.c1, v0.c1))) WHEN CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 END THEN (((t1.c2, v0.c2, vt0.c0, t1.c2, t1.c1)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c1, t1.c0, vt0.c1)) AND ((t1.c2, vt0.c1, vt0.c0, v0.c2, t1.c1))) WHEN CASE vt0.c0  WHEN -8.41927177E8 THEN t1.c0 END THEN ((v0.c2)-(t1.c1)) ELSE CAST(t1.c1 AS TEXT) END, ((CASE WHEN t1.c2 THEN v0.c2 ELSE t1.c2 END) ISNULL) ASC;
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE ((((((((((((NOT (t1.c0)))AND(x'')))OR(((((t1.c1)AND(vt0.c1)))AND(vt0.c0)))))AND(CASE WHEN v0.c2 THEN t1.c2 ELSE vt0.c0 END)))AND(('1315138535' IN (vt0.c1)))))AND((NOT (t1.c2))))) ORDER BY (((t1.c1, vt0.c1, v0.c0)) BETWEEN ((((((((v0.c2)OR(v0.c0)))AND(t1.c0)))AND(v0.c2)), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.26944932804159605)), CAST(vt0.c1 AS NUMERIC))) AND ((((((((((((((t1.c0)OR(v0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(vt0.c1)))AND(t1.c0)), vt0.c1, ((t1.c1) BETWEEN (vt0.c0) AND (t1.c1))))), ((vt0.c1) ISNULL) COLLATE RTRIM ASC  NULLS FIRST, (- (json_object(t1.c1, v0.c0)));
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE ((((((((((((((NOT (t1.c0)))AND(x'')))OR(((((t1.c1)AND(vt0.c1)))AND(vt0.c0)))))AND(CASE WHEN v0.c2 THEN t1.c2 ELSE vt0.c0 END)))AND(('1315138535' IN (vt0.c1)))))AND((NOT (t1.c2)))))AND((CASE v0.c2  WHEN v0.c2 THEN vt0.c1 END IN (CASE WHEN v0.c1 THEN v0.c1 WHEN vt0.c0 THEN t1.c2 WHEN t1.c1 THEN 184538343 WHEN t1.c2 THEN v0.c1 WHEN t1.c1 THEN t1.c2 END, TYPEOF(DISTINCT v0.c1)))))) ORDER BY (x'' IN ()) DESC  NULLS FIRST;
SELECT ALL MAX(v0.c0) FROM vt0, t1, v0 WHERE ((((t1.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((CASE v0.c2  WHEN t1.c2 THEN vt0.c1 WHEN v0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c2 END, t1.c1, QUOTE(t1.c2))) AND ((MAX(vt0.c0, v0.c0, t1.c1, vt0.c1), ((vt0.c0) BETWEEN (0.7800762796824692) AND (v0.c2)), (((t1.c1, vt0.c0)) NOT BETWEEN ((t1.c2, t1.c1)) AND ((v0.c2, vt0.c0))))))) ORDER BY (((+ (v0.c2)))&(((v0.c1)>>(v0.c1))))  NULLS LAST;
SELECT MAX(v0.c0) FROM vt0, t1, v0 WHERE ((((t1.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((CASE v0.c2  WHEN t1.c2 THEN vt0.c1 WHEN v0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c2 END, t1.c1, QUOTE(t1.c2))) AND ((MAX(vt0.c0, v0.c0, t1.c1, vt0.c1), ((vt0.c0) BETWEEN (0.7800762796824692) AND (v0.c2)), (((t1.c1, vt0.c0)) NOT BETWEEN ((t1.c2, t1.c1)) AND ((v0.c2, vt0.c0))))))) ORDER BY (((+ (v0.c2)))&(((v0.c1)>>(v0.c1))))  NULLS LAST INTERSECT SELECT ALL MAX(v0.c0) FROM vt0, t1, v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CASE vt0.c1  WHEN '184538343' THEN v0.c2 ELSE vt0.c0 END END) ORDER BY (((+ (v0.c2)))&(((v0.c1)>>(v0.c1))))  NULLS LAST;
SELECT * FROM v0, t1, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1))) NOT BETWEEN (x'8e') AND (NULLIF(DISTINCT v0.c2, v0.c1)))) ORDER BY NULL, ((((((((((v0.c2)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(v0.c0)))&(TRIM(v0.c2)))  NULLS FIRST, CASE WHEN (~ (vt0.c0)) THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE t1.c1 COLLATE NOCASE END  NULLS LAST;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1))) NOT BETWEEN (x'8e') AND (NULLIF(DISTINCT v0.c2, v0.c1)))) ORDER BY (NOT (((((v0.c1)OR(v0.c0)))OR(v0.c1)))) INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE (1305126053) ORDER BY (NOT (((((v0.c1)OR(v0.c0)))OR(v0.c1))));
SELECT * FROM v0, t1, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1))) NOT BETWEEN (x'8e') AND (NULLIF(DISTINCT v0.c2, v0.c1)))) ORDER BY NULL, ((((((((((v0.c2)OR(t1.c0)))OR(t1.c1)))AND(t1.c0)))OR(v0.c0)))&(TRIM(v0.c2)))  NULLS FIRST, CASE WHEN (~ (vt0.c0)) THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE t1.c1 COLLATE NOCASE END  NULLS LAST;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1))) NOT BETWEEN (x'8e') AND (NULLIF(DISTINCT v0.c2, v0.c1)))) ORDER BY (NOT (((((v0.c1)OR(v0.c0)))OR(v0.c1)))) INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE (1305126053) ORDER BY (NOT (((((v0.c1)OR(v0.c0)))OR(v0.c1))));
SELECT * FROM t1 WHERE ((((t1.c2 IN (NULL))) IS FALSE));
SELECT * FROM t1 WHERE ((((((t1.c2 IN (NULL))) IS FALSE))AND(x''))) ORDER BY t1.c0, 0Xffffffff99c1cba5 ASC LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_GET(((t1.c0)-(t1.c1)))) ORDER BY t1.c0, 0xffffffff99c1cba5 ASC LIMIT 0X0;
SELECT * FROM t1 WHERE ((((t1.c2 IN (NULL))) IS FALSE));
SELECT * FROM t1 WHERE ((((((t1.c2 IN (NULL))) IS FALSE))AND(x''))) ORDER BY t1.c0, 0Xffffffff99c1cba5 ASC LIMIT 0X0 INTERSECT SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_GET(((t1.c0)-(t1.c1)))) ORDER BY t1.c0, 0xffffffff99c1cba5 ASC LIMIT 0X0;
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0)AND(t1.c2 COLLATE BINARY))) INTERSECT SELECT COUNT(*) FROM t1 WHERE (((((((((t1.c1)&(t1.c0)))AND(((t1.c0)<=(t1.c2)))))OR(CAST(t1.c2 AS BLOB))))OR('0.0')));
SELECT ALL MIN(vt0.c1) FROM t1, v0, vt0 WHERE (CASE '-778596116'  WHEN ((((((v0.c2)AND(vt0.c1)))AND(vt0.c1)))OR(t1.c2)) THEN NULL WHEN CASE WHEN t1.c0 THEN vt0.c1 WHEN t1.c2 THEN v0.c0 END THEN (vt0.c0 IN (vt0.c0)) ELSE ((((((((((((((((v0.c2)AND('-430116177')))AND(vt0.c0)))AND(v0.c2)))OR(v0.c0)))OR(0.009749833220359605)))OR(v0.c1)))AND(x'64')))OR(v0.c1)) END) ORDER BY CAST(v0.c2 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM t1, v0, vt0 WHERE (CASE '-778596116'  WHEN ((((((v0.c2)AND(vt0.c1)))AND(vt0.c1)))OR(t1.c2)) THEN NULL WHEN CASE WHEN t1.c0 THEN vt0.c1 WHEN t1.c2 THEN v0.c0 END THEN (vt0.c0 IN (vt0.c0)) ELSE ((((((((((((((((v0.c2)AND('-430116177')))AND(vt0.c0)))AND(v0.c2)))OR(v0.c0)))OR(0.009749833220359605)))OR(v0.c1)))AND(x'64')))OR(v0.c1)) END) ORDER BY CASE WHEN NULLIF(DISTINCT v0.c1, v0.c0) THEN ((v0.c2) NOT NULL) END LIMIT 0;
SELECT ALL MIN(t1.c1) FROM vt0, t1, v0 WHERE ((((-1688397108 IN ()))&(x'9ad230f1'))) ORDER BY ((t1.c2) BETWEEN (t1.c0) AND (t1.c1)) COLLATE BINARY  NULLS LAST, '崞AZ' DESC, ((CAST(vt0.c1 AS TEXT))>>((- (v0.c1))))  NULLS FIRST;
SELECT MIN(t1.c1) FROM vt0, t1, v0 WHERE ((((0xffffffff9b5d1acc IN ()))&(x'9ad230f1'))) ORDER BY (- (((NULL) IS TRUE))) DESC  NULLS FIRST, (CAST(vt0.c0 AS BLOB) IN ((~ (v0.c0)), ((v0.c1)>=(t1.c0))))  NULLS FIRST, CASE WHEN (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))) THEN ((v0.c1)/('')) WHEN t1.c1 THEN CAST(vt0.c1 AS BLOB) ELSE (((t1.c0, t1.c2)) NOT BETWEEN ((v0.c1, v0.c1)) AND (('1576123895', v0.c0))) END  NULLS LAST LIMIT 0;
SELECT * FROM t1, vt0 WHERE (UPPER(DISTINCT LIKELIHOOD(DISTINCT t1.c0, t1.c2)));
SELECT DISTINCT * FROM t1, vt0 WHERE (((UPPER(DISTINCT LIKELIHOOD(DISTINCT t1.c0, t1.c2)))AND(TRIM(CASE WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN t1.c0 ELSE NULL END))));
SELECT * FROM t1, vt0 WHERE (UPPER(DISTINCT LIKELIHOOD(DISTINCT t1.c0, t1.c2)));
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (CAST(LOWER(v0.c1) AS INTEGER)) ORDER BY (- (((v0.c2) ISNULL))) ASC, CAST(x'f9' AS BLOB), ((((((((((((((((((v0.c0)OR(v0.c0)))AND('')))OR(t1.c1)))OR(v0.c2)))OR(v0.c2)))OR(NULL)))AND(((v0.c0)<<(t1.c1)))))AND(((v0.c0) BETWEEN (0.9887230932169968) AND (0.6287964824313488)))))OR(((v0.c1) IS TRUE))) ASC;
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (((CAST(LOWER(v0.c1) AS INTEGER))AND(CAST(((t1.c0)|(vt0.c1)) AS REAL)))) ORDER BY (- (((v0.c2) ISNULL))) ASC, CAST(x'f9' AS BLOB), ((((((((((((((((((v0.c0)OR(v0.c0)))AND('')))OR(t1.c1)))OR(v0.c2)))OR(v0.c2)))OR(NULL)))AND(((v0.c0)<<(t1.c1)))))AND(((v0.c0) BETWEEN (0.9887230932169968) AND (0.6287964824313488)))))OR(((v0.c1) IS TRUE))) ASC INTERSECT SELECT COUNT(*) FROM v0, vt0, t1 WHERE (CAST(((vt0.c1) BETWEEN (v0.c1) AND (vt0.c1)) AS TEXT)) ORDER BY (- (((v0.c2) ISNULL))) ASC, CAST(x'f9' AS BLOB), ((((((((((((((((((v0.c0)OR(v0.c0)))AND('')))OR(t1.c1)))OR(v0.c2)))OR(v0.c2)))OR(NULL)))AND(((v0.c0)<<(t1.c1)))))AND(((v0.c0) BETWEEN (0.9887230932169968) AND (0.6287964824313488)))))OR(((v0.c1) IS TRUE))) ASC;
SELECT * FROM vt0, t1 WHERE (('Ua e' COLLATE NOCASE IN ())) ORDER BY (((vt0.c0 IN ()))<(((vt0.c1)AND(t1.c2))))  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (('Ua e' COLLATE NOCASE IN ())) ORDER BY (((vt0.c0 IN ()))<(((vt0.c1)AND(t1.c2))))  NULLS LAST LIMIT 1;
SELECT * FROM vt0, t1 WHERE (('Ua e' COLLATE NOCASE IN ())) ORDER BY (((vt0.c0 IN ()))<(((vt0.c1)AND(t1.c2))))  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (('Ua e' COLLATE NOCASE IN ())) ORDER BY (((vt0.c0 IN ()))<(((vt0.c1)AND(t1.c2))))  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1, vt0, v0 WHERE (((((NOT (v0.c0)), (+ (v0.c1))))!=(((('-1486702432') IS TRUE), ((t1.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))))) ORDER BY (((((t1.c2) BETWEEN (v0.c0) AND (t1.c0)), ((v0.c1) NOT BETWEEN (t1.c1) AND (x'4a'))))=((((vt0.c0) IS FALSE), ((v0.c0)AND(t1.c2))))) ASC;
SELECT ALL * FROM t1, vt0, v0 WHERE (((((((NOT (v0.c0)), (+ (v0.c1))))<(((('-1486702432') IS TRUE), ((t1.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))))AND((((v0.c1, t1.c2, t1.c0)) BETWEEN ((((v0.c2)GLOB(v0.c1)), CASE 0.7052119295082898  WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN t1.c2 WHEN t1.c2 THEN v0.c1 ELSE t1.c0 END, x'3d1e')) AND ((((t1.c2) NOT NULL), v0.c2 COLLATE RTRIM, HEX('430989384'))))))) ORDER BY (((v0.c1))!=((vt0.c1))) COLLATE RTRIM ASC, ((t1.c0)>>(CASE t1.c2  WHEN v0.c0 THEN t1.c2 ELSE t1.c1 END)) DESC LIMIT 1;
SELECT ALL * FROM t1, vt0, v0 WHERE (((((NOT (v0.c0)), (+ (v0.c1))))!=(((('-1486702432') IS TRUE), ((t1.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))))) ORDER BY (((((t1.c2) BETWEEN (v0.c0) AND (t1.c0)), ((v0.c1) NOT BETWEEN (t1.c1) AND (x'4a'))))=((((vt0.c0) IS FALSE), ((v0.c0)AND(t1.c2))))) ASC;
SELECT ALL * FROM t1, vt0, v0 WHERE (((((((NOT (v0.c0)), (+ (v0.c1))))<(((('-1486702432') IS TRUE), ((t1.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))))AND((((v0.c1, t1.c2, t1.c0)) BETWEEN ((((v0.c2)GLOB(v0.c1)), CASE 0.7052119295082898  WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN t1.c2 WHEN t1.c2 THEN v0.c1 ELSE t1.c0 END, x'3d1e')) AND ((((t1.c2) NOT NULL), v0.c2 COLLATE RTRIM, HEX('430989384'))))))) ORDER BY (((v0.c1))!=((vt0.c1))) COLLATE RTRIM ASC, ((t1.c0)>>(CASE t1.c2  WHEN v0.c0 THEN t1.c2 ELSE t1.c1 END)) DESC LIMIT 1;
SELECT MAX(t1.c0) FROM v0, vt0, t1 WHERE ((v0.c0 IN (t1.c1 COLLATE NOCASE, (- (v0.c0)), CAST(t1.c0 AS TEXT))));
SELECT DISTINCT MAX(t1.c0) FROM v0, vt0, t1 WHERE ((((v0.c0 IN (t1.c1 COLLATE NOCASE, (- (v0.c0)), CAST(t1.c0 AS TEXT))))AND(CAST(CASE t1.c1  WHEN t1.c0 THEN v0.c1 END AS REAL)))) ORDER BY ((CASE WHEN v0.c1 THEN t1.c1 END)LIKE(((NULL) BETWEEN (t1.c2) AND (v0.c0)))), HEX((((v0.c1, t1.c1, t1.c2, vt0.c1)) BETWEEN (('1382790579', t1.c2, vt0.c1, vt0.c0)) AND ((v0.c2, v0.c1, vt0.c0, vt0.c1))))  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t1.c0) FROM v0, vt0, t1 WHERE ((((x'63', v0.c1)) NOT BETWEEN (('1394723807', t1.c0)) AND ((CASE WHEN v0.c1 THEN v0.c1 WHEN t1.c0 THEN t1.c2 END, (vt0.c1 IN ()))))) ORDER BY ((CASE WHEN v0.c1 THEN t1.c1 END)LIKE(((NULL) BETWEEN (t1.c2) AND (v0.c0)))), HEX((((v0.c1, t1.c1, t1.c2, vt0.c1)) BETWEEN (('1382790579', t1.c2, vt0.c1, vt0.c0)) AND ((v0.c2, v0.c1, vt0.c0, vt0.c1))))  NULLS FIRST;
SELECT MIN(v0.c0) FROM v0 CROSS JOIN t1 ON ((TYPEOF(DISTINCT v0.c2)) NOT BETWEEN ((v0.c2 IN (NULL, v0.c1))) AND ((((v0.c0))<((0.6278765304751464))))) WHERE ((((((v0.c0)GLOB(t1.c0)), (v0.c2 IN (t1.c0, t1.c1)), (v0.c1 IN (t1.c2)), ((t1.c0)AND(t1.c2)), ((((((((((((t1.c1)OR(v0.c1)))AND(t1.c2)))AND(t1.c1)))AND(t1.c2)))AND(v0.c1)))AND(t1.c0))))<((((((((v0.c0)AND(v0.c0)))OR(x'efb6cc')))OR(0.5035986536868896)), v0.c2 COLLATE RTRIM, (v0.c2 IN (t1.c0)), CAST(t1.c2 AS BLOB), ((v0.c2) BETWEEN (v0.c1) AND (t1.c1)))))) ORDER BY ((((((((((0Xffffffff98fce726)OR((0.7971248963455178 IN (t1.c2)))))OR(json_object(v0.c1, t1.c1))))AND((v0.c1 IN (t1.c0)))))AND(((v0.c1) NOTNULL))))AND(CASE WHEN t1.c1 THEN v0.c1 ELSE 'P%,' END))  NULLS FIRST, (((((t1.c2) ISNULL)))!=((((t1.c0) BETWEEN (v0.c0) AND (v0.c2))))) DESC;
SELECT DISTINCT MIN(v0.c0) FROM v0 CROSS JOIN t1 ON ((TYPEOF(DISTINCT v0.c2)) NOT BETWEEN ((v0.c2 IN (NULL, v0.c1))) AND ((((v0.c0))<((0.6278765304751464))))) WHERE ((((((v0.c0)GLOB(t1.c0)), (v0.c2 IN (t1.c0, t1.c1)), (v0.c1 IN (t1.c2)), ((t1.c0)AND(t1.c2)), ((((((((((((t1.c1)OR(v0.c1)))AND(t1.c2)))AND(t1.c1)))AND(t1.c2)))AND(v0.c1)))AND(t1.c0))))<((((((((v0.c0)AND(v0.c0)))OR(x'efb6cc')))OR(0.5035986536868896)), v0.c2 COLLATE RTRIM, (v0.c2 IN (t1.c0)), CAST(t1.c2 AS BLOB), ((v0.c2) BETWEEN (v0.c1) AND (t1.c1)))))) ORDER BY ((((((((((0xffffffff98fce726)OR((0.7971248963455178 IN (t1.c2)))))OR(json_object(v0.c1, t1.c1))))AND((v0.c1 IN (t1.c0)))))AND(((v0.c1) NOTNULL))))AND(CASE WHEN t1.c1 THEN v0.c1 ELSE 'P%,' END))  NULLS FIRST, (((((t1.c2) ISNULL)))<>((((t1.c0) BETWEEN (v0.c0) AND (v0.c2))))) DESC LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(v0.c0) FROM v0 CROSS JOIN t1 ON ((TYPEOF(DISTINCT v0.c2)) NOT BETWEEN ((v0.c2 IN (NULL, v0.c1))) AND ((((v0.c0))<((0.6278765304751464))))) WHERE (v0.c2) ORDER BY ((((((((((-1728256218)OR((0.7971248963455178 IN (t1.c2)))))OR(json_object(v0.c1, t1.c1))))AND((v0.c1 IN (t1.c0)))))AND(((v0.c1) NOTNULL))))AND(CASE WHEN t1.c1 THEN v0.c1 ELSE 'P%,' END))  NULLS FIRST, (((((t1.c2) ISNULL)))!=((((t1.c0) BETWEEN (v0.c0) AND (v0.c2))))) DESC LIMIT 1;
SELECT MIN(v0.c2) FROM vt0 NATURAL JOIN v0 WHERE (CASE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END  WHEN ((vt0.c0)-(vt0.c1)) THEN ((vt0.c1)LIKE(vt0.c1)) END);
SELECT ALL MIN(v0.c2) FROM vt0 NATURAL JOIN v0 WHERE (((CASE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END  WHEN ((vt0.c0)-(vt0.c1)) THEN ((vt0.c1)LIKE(vt0.c1)) END)AND(((((((v0.c0)OR(((v0.c1) NOT NULL))))OR(((v0.c1)GLOB(v0.c1)))))OR(vt0.c0))))) ORDER BY ((('~q[qKn*恻')) NOT BETWEEN ((CASE vt0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END)) AND (((NOT (v0.c0)))))  NULLS LAST, (NOT (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), ((((((v0.c0)OR(v0.c1)))AND(NULL)))AND(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c2)))) DESC INTERSECT SELECT ALL MIN(v0.c2) FROM vt0 NATURAL JOIN v0 WHERE (v0.c2) ORDER BY ((('~q[qKn*恻')) NOT BETWEEN ((CASE vt0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END)) AND (((NOT (v0.c0)))))  NULLS LAST, (NOT (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), ((((((v0.c0)OR(v0.c1)))AND(NULL)))AND(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c2)))) DESC;
SELECT MAX(v0.c1) FROM v0, vt0 INNER JOIN t1 ON CASE ((vt0.c0) ISNULL)  WHEN TRIM(DISTINCT t1.c2, v0.c2) THEN (v0.c1 IN ()) WHEN ((t1.c2) NOTNULL) THEN (- (v0.c1)) WHEN ((((((t1.c1)AND('{')))AND(v0.c1)))AND(v0.c2)) THEN vt0.c0 WHEN QUOTE(0.9602681948076324) THEN ((v0.c1) NOTNULL) WHEN (t1.c0 IN ()) THEN NULL COLLATE RTRIM WHEN '1266793928' COLLATE RTRIM THEN ((t1.c2) NOT BETWEEN (t1.c0) AND (v0.c2)) WHEN CAST(t1.c2 AS TEXT) THEN t1.c2 COLLATE RTRIM END WHERE (((((v0.c2)OR(((vt0.c1) BETWEEN (t1.c1) AND (v0.c1)))))OR(vt0.c1 COLLATE NOCASE)));
SELECT DISTINCT MAX(v0.c1) FROM v0, vt0 INNER JOIN t1 ON CASE ((vt0.c0) ISNULL)  WHEN TRIM(DISTINCT t1.c2, v0.c2) THEN (v0.c1 IN ()) WHEN ((t1.c2) NOTNULL) THEN (- (v0.c1)) WHEN ((((((t1.c1)AND('{')))AND(v0.c1)))AND(v0.c2)) THEN vt0.c0 WHEN QUOTE(0.9602681948076324) THEN ((v0.c1) NOTNULL) WHEN (t1.c0 IN ()) THEN NULL COLLATE RTRIM WHEN '1266793928' COLLATE RTRIM THEN ((t1.c2) NOT BETWEEN (t1.c0) AND (v0.c2)) WHEN CAST(t1.c2 AS TEXT) THEN t1.c2 COLLATE RTRIM END WHERE (((((v0.c2)OR(((vt0.c1) BETWEEN (t1.c1) AND (v0.c1)))))OR(vt0.c1 COLLATE NOCASE))) LIMIT 2;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON t1.c0 WHERE (((((((((((t1.c1)AND(vt0.c0)))OR(t1.c0)))AND(vt0.c0)))AND(t1.c1)))OR(((vt0.c1) NOT BETWEEN (NULL) AND (t1.c1)))));
SELECT DISTINCT COUNT(*) FROM vt0 INNER JOIN t1 ON t1.c0 WHERE (((((((((((t1.c1)AND(vt0.c0)))OR(t1.c0)))AND(vt0.c0)))AND(t1.c1)))OR(((vt0.c1) NOT BETWEEN (NULL) AND (t1.c1))))) LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 INNER JOIN t1 ON t1.c0 WHERE ((vt0.c0 IN (t1.c1)) COLLATE NOCASE) LIMIT 0X0;
SELECT MAX(t1.c2) FROM t1, v0, vt0 WHERE ((~ (vt0.c0)) COLLATE RTRIM);
SELECT MAX(t1.c2) FROM t1, v0, vt0 WHERE ((~ (vt0.c0)) COLLATE RTRIM) ORDER BY (((vt0.c1)) NOT BETWEEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(v0.c2)))) AND ((((((((((((vt0.c0)AND(t1.c2)))OR(NULL)))AND(t1.c0)))AND(NULL)))AND(x''))))) ASC, ((((((((((t1.c1)OR(v0.c1)))AND(v0.c0)))OR('')))AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(t1.c1)))OR(t1.c0))) AND (((t1.c2) ISNULL))) DESC, (NOT (CASE 0.9681927677793806  WHEN 'O' THEN x'' WHEN v0.c0 THEN v0.c2 WHEN t1.c1 THEN t1.c1 WHEN vt0.c1 THEN v0.c1 END)), (~ (((t1.c2) BETWEEN (t1.c1) AND (0.9510175163160882)))) ASC  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL MAX(t1.c2) FROM t1, v0, vt0 WHERE (STRFTIME((~ (t1.c0)), CASE v0.c0  WHEN NULL THEN t1.c1 WHEN t1.c0 THEN 0.7021952569512547 WHEN x'' THEN vt0.c0 WHEN vt0.c1 THEN v0.c2 ELSE vt0.c0 END, ((t1.c1)IS(t1.c1)), NULL)) ORDER BY (((vt0.c1)) NOT BETWEEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(v0.c2)))) AND ((((((((((((vt0.c0)AND(t1.c2)))OR(NULL)))AND(t1.c0)))AND(NULL)))AND(x''))))) ASC, ((((((((((t1.c1)OR(v0.c1)))AND(v0.c0)))OR('')))AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(t1.c1)))OR(t1.c0))) AND (((t1.c2) ISNULL))) DESC, (NOT (CASE 0.9681927677793806  WHEN 'O' THEN x'' WHEN v0.c0 THEN v0.c2 WHEN t1.c1 THEN t1.c1 WHEN vt0.c1 THEN v0.c1 END)), (~ (((t1.c2) BETWEEN (t1.c1) AND (0.9510175163160882)))) ASC  NULLS LAST LIMIT 1;
SELECT * FROM vt0, t1 WHERE ((((((t1.c2)|(vt0.c1)), (+ (vt0.c0)), (((((('-1980992003')OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))<=((t1.c0 COLLATE NOCASE, t1.c1, t1.c1 COLLATE RTRIM)))) ORDER BY CASE 'NdU'  WHEN ((vt0.c1)>=(t1.c2)) THEN '465785973' ELSE t1.c2 END, (((vt0.c1, t1.c2)) BETWEEN ((LIKELY(DISTINCT vt0.c0), ('' IN (t1.c2)))) AND ((vt0.c1 COLLATE NOCASE, LIKELY(DISTINCT x'')))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((((t1.c2)|(vt0.c1)), (+ (vt0.c0)), (((((('-1980992003')OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))<=((t1.c0 COLLATE NOCASE, t1.c1, t1.c1 COLLATE RTRIM))))AND((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt0.c1 THEN t1.c2 ELSE t1.c2 END IN (1.328373436E9))))) ORDER BY (((vt0.c1)<=(vt0.c1)) IN ((~ (0.791529420086299)))) ASC  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE ((((((t1.c2)|(vt0.c1)), (+ (vt0.c0)), (((((('-1980992003')OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))<=((t1.c0 COLLATE NOCASE, t1.c1, t1.c1 COLLATE RTRIM)))) ORDER BY CASE 'NdU'  WHEN ((vt0.c1)>=(t1.c2)) THEN '465785973' ELSE t1.c2 END, (((vt0.c1, t1.c2)) BETWEEN ((LIKELY(DISTINCT vt0.c0), ('' IN (t1.c2)))) AND ((vt0.c1 COLLATE NOCASE, LIKELY(DISTINCT x'')))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((((t1.c2)|(vt0.c1)), (+ (vt0.c0)), (((((('-1980992003')OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))<=((t1.c0 COLLATE NOCASE, t1.c1, t1.c1 COLLATE RTRIM))))AND((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt0.c1 THEN t1.c2 ELSE t1.c2 END IN (1.328373436E9))))) ORDER BY (((vt0.c1)<=(vt0.c1)) IN ((~ (0.791529420086299)))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1)AND(vt0.c0))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((x'')IS NOT(vt0.c1)) THEN (((vt0.c1))<=((vt0.c0))) ELSE (vt0.c1 IN (vt0.c0)) END) LIMIT 1;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1)AND(vt0.c0))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((x'')IS NOT(vt0.c1)) THEN (((vt0.c1))<=((vt0.c0))) ELSE (vt0.c1 IN (vt0.c0)) END) LIMIT 1;
SELECT ALL MAX(v0.c2) FROM t1, vt0, v0 WHERE (CASE LOWER(DISTINCT t1.c0)  WHEN ((v0.c2)IS(t1.c1)) THEN (v0.c0 IN (v0.c0, t1.c0)) WHEN vt0.c1 COLLATE RTRIM THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) ELSE ((((((vt0.c0)OR(t1.c0)))OR(vt0.c0)))OR(vt0.c0)) END) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (t1.c1))) NOTNULL);
SELECT MAX(v0.c2) FROM t1, vt0, v0 WHERE (((CASE LOWER(DISTINCT t1.c0)  WHEN ((v0.c2)IS(t1.c1)) THEN (v0.c0 IN (v0.c0, t1.c0)) WHEN vt0.c1 COLLATE RTRIM THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) ELSE ((((((vt0.c0)OR(t1.c0)))OR(vt0.c0)))OR(vt0.c0)) END)AND((((((((((vt0.c0)AND(t1.c2)))OR(v0.c2)))AND(t1.c0)))OR(vt0.c0)) IN (v0.c2 COLLATE RTRIM))))) ORDER BY (vt0.c0 IN (((vt0.c0) BETWEEN (t1.c1) AND (vt0.c1)), ((vt0.c0)<>(t1.c2))))  NULLS FIRST, (((vt0.c1)AND(0.8626401152755621)) IN (((t1.c1) NOTNULL), (~ (t1.c1)), ((v0.c2)/(v0.c0))))  NULLS LAST INTERSECT SELECT ALL MAX(v0.c2) FROM t1, vt0, v0 WHERE ((+ (COALESCE(t1.c2, v0.c1)))) ORDER BY (vt0.c0 IN (((vt0.c0) BETWEEN (t1.c1) AND (vt0.c1)), ((vt0.c0)<>(t1.c2))))  NULLS FIRST, (((vt0.c1)AND(0.8626401152755621)) IN (((t1.c1) NOTNULL), (~ (t1.c1)), ((v0.c2)/(v0.c0))))  NULLS LAST;
SELECT * FROM t1, v0, vt0 WHERE (((((((t1.c1 COLLATE NOCASE)AND(CASE vt0.c1  WHEN t1.c2 THEN vt0.c0 END)))AND(CAST(vt0.c1 AS REAL))))OR(7.24060006E8)));
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((((((t1.c1 COLLATE NOCASE)AND(CASE vt0.c1  WHEN t1.c2 THEN vt0.c0 END)))AND(CAST(vt0.c1 AS REAL))))OR(7.24060006E8))) ORDER BY (((vt0.c0, v0.c1, 0.23710477023925136, vt0.c0)) BETWEEN ((t1.c0, v0.c2, v0.c1 COLLATE RTRIM, (vt0.c1 IN (v0.c2, v0.c2)))) AND ((((t1.c2)AND(t1.c0)), ((((((((t1.c0)AND(v0.c2)))AND(t1.c0)))OR(t1.c0)))AND(v0.c0)), CAST(t1.c2 AS INTEGER), t1.c1 COLLATE NOCASE))) ASC, vt0.c0  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((((((((CAST(t1.c1 AS NUMERIC))OR(vt0.c1)))AND(CAST(v0.c0 AS INTEGER))))OR(((t1.c0) NOT BETWEEN (v0.c2) AND (vt0.c0)))))AND(((t1.c1)-(v0.c0))))) ORDER BY (((vt0.c0, v0.c1, 0.23710477023925136, vt0.c0)) BETWEEN ((t1.c0, v0.c2, v0.c1 COLLATE RTRIM, (vt0.c1 IN (v0.c2, v0.c2)))) AND ((((t1.c2)AND(t1.c0)), ((((((((t1.c0)AND(v0.c2)))AND(t1.c0)))OR(t1.c0)))AND(v0.c0)), CAST(t1.c2 AS INTEGER), t1.c1 COLLATE NOCASE))) ASC, vt0.c0  NULLS FIRST LIMIT 3;
SELECT * FROM t1, v0, vt0 WHERE (((((((t1.c1 COLLATE NOCASE)AND(CASE vt0.c1  WHEN t1.c2 THEN vt0.c0 END)))AND(CAST(vt0.c1 AS REAL))))OR(7.24060006E8)));
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((((((t1.c1 COLLATE NOCASE)AND(CASE vt0.c1  WHEN t1.c2 THEN vt0.c0 END)))AND(CAST(vt0.c1 AS REAL))))OR(7.24060006E8))) ORDER BY (((vt0.c0, v0.c1, 0.23710477023925136, vt0.c0)) BETWEEN ((t1.c0, v0.c2, v0.c1 COLLATE RTRIM, (vt0.c1 IN (v0.c2, v0.c2)))) AND ((((t1.c2)AND(t1.c0)), ((((((((t1.c0)AND(v0.c2)))AND(t1.c0)))OR(t1.c0)))AND(v0.c0)), CAST(t1.c2 AS INTEGER), t1.c1 COLLATE NOCASE))) ASC, vt0.c0  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((((((((CAST(t1.c1 AS NUMERIC))OR(vt0.c1)))AND(CAST(v0.c0 AS INTEGER))))OR(((t1.c0) NOT BETWEEN (v0.c2) AND (vt0.c0)))))AND(((t1.c1)-(v0.c0))))) ORDER BY (((vt0.c0, v0.c1, 0.23710477023925136, vt0.c0)) BETWEEN ((t1.c0, v0.c2, v0.c1 COLLATE RTRIM, (vt0.c1 IN (v0.c2, v0.c2)))) AND ((((t1.c2)AND(t1.c0)), ((((((((t1.c0)AND(v0.c2)))AND(t1.c0)))OR(t1.c0)))AND(v0.c0)), CAST(t1.c2 AS INTEGER), t1.c1 COLLATE NOCASE))) ASC, vt0.c0  NULLS FIRST LIMIT 3;
SELECT * FROM t1, vt0 WHERE (((((((vt0.c0)AND(t1.c2)))AND(x'')))AND(t1.c0)) COLLATE RTRIM) ORDER BY ((t1.c0 COLLATE RTRIM) NOT BETWEEN ((((t1.c1, vt0.c0, t1.c2)) BETWEEN ((vt0.c1, t1.c2, t1.c1)) AND ((t1.c1, t1.c2, t1.c1)))) AND (((((t1.c0)OR(t1.c2)))OR(vt0.c0))))  NULLS FIRST, ((((t1.c1)||(t1.c2))) BETWEEN (9.50883003E8) AND ((~ (x'f0383d'))));
SELECT ALL * FROM t1, vt0 WHERE (((((((((vt0.c0)AND(t1.c2)))AND(x'')))AND(t1.c0)) COLLATE RTRIM)AND(CAST(CAST(t1.c2 AS INTEGER) AS TEXT)))) ORDER BY ((CAST(t1.c2 AS INTEGER)) BETWEEN (SUBSTR(t1.c1, t1.c0)) AND ((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1)))))  NULLS FIRST INTERSECT SELECT * FROM t1, vt0 WHERE (((((vt0.c1)GLOB(t1.c2)))>=((('-1393225757')>>(vt0.c1))))) ORDER BY ((CAST(t1.c2 AS INTEGER)) BETWEEN (SUBSTR(t1.c1, t1.c0)) AND ((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1)))))  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE (((((((vt0.c0)AND(t1.c2)))AND(x'')))AND(t1.c0)) COLLATE RTRIM) ORDER BY ((t1.c0 COLLATE RTRIM) NOT BETWEEN ((((t1.c1, vt0.c0, t1.c2)) BETWEEN ((vt0.c1, t1.c2, t1.c1)) AND ((t1.c1, t1.c2, t1.c1)))) AND (((((t1.c0)OR(t1.c2)))OR(vt0.c0))))  NULLS FIRST, ((((t1.c1)||(t1.c2))) BETWEEN (9.50883003E8) AND ((~ (x'f0383d'))));
SELECT ALL * FROM t1, vt0 WHERE (((((((((vt0.c0)AND(t1.c2)))AND(x'')))AND(t1.c0)) COLLATE RTRIM)AND(CAST(CAST(t1.c2 AS INTEGER) AS TEXT)))) ORDER BY ((CAST(t1.c2 AS INTEGER)) BETWEEN (SUBSTR(t1.c1, t1.c0)) AND ((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1)))))  NULLS FIRST INTERSECT SELECT * FROM t1, vt0 WHERE (((((vt0.c1)GLOB(t1.c2)))>=((('-1393225757')>>(vt0.c1))))) ORDER BY ((CAST(t1.c2 AS INTEGER)) BETWEEN (SUBSTR(t1.c1, t1.c0)) AND ((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1)))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((SQLITE_COMPILEOPTION_USED(t1.c0)) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((((SQLITE_COMPILEOPTION_USED(t1.c0)) ISNULL))AND(((((((t1.c2)GLOB(t1.c0)))AND(t1.c2)))AND(((t1.c2) BETWEEN (0.7647410767020622) AND (t1.c0))))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)>>(t1.c2))) BETWEEN (t1.c0 COLLATE NOCASE) AND (((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c1))))) LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (((SQLITE_COMPILEOPTION_USED(t1.c0)) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((((SQLITE_COMPILEOPTION_USED(t1.c0)) ISNULL))AND(((((((t1.c2)GLOB(t1.c0)))AND(t1.c2)))AND(((t1.c2) BETWEEN (0.7647410767020622) AND (t1.c0))))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)>>(t1.c2))) BETWEEN (t1.c0 COLLATE NOCASE) AND (((((((t1.c1)AND(t1.c0)))AND(t1.c1)))OR(t1.c1))))) LIMIT 0X1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c1)<>((t1.c1 IN (t1.c1)))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((t1.c1)<((t1.c1 IN (t1.c1))))) LIMIT 0x0;
SELECT MAX(v0.c2) FROM vt0, t1, v0 WHERE ((((+ (v0.c0))) IS FALSE));
SELECT DISTINCT MAX(v0.c2) FROM vt0, t1, v0 WHERE ((((((+ (v0.c0))) IS FALSE))AND((((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) IN (((v0.c2)+(v0.c2))))))) ORDER BY (+ (((t1.c1)LIKE(v0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, v0 WHERE (CASE ((((((((v0.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c2)))AND(v0.c2))  WHEN CAST(v0.c0 AS INTEGER) THEN '108102891' END) ORDER BY t1.c2 ASC  NULLS FIRST;
SELECT * FROM t1, v0 WHERE (((CASE ((((((((v0.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c2)))AND(v0.c2))  WHEN CAST(v0.c0 AS INTEGER) THEN '108102891' END)AND(UPPER(DISTINCT t1.c0) COLLATE BINARY))) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM t1, v0 WHERE (CASE ((((((((v0.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c2)))AND(v0.c2))  WHEN CAST(v0.c0 AS INTEGER) THEN '108102891' END) ORDER BY t1.c2 ASC  NULLS FIRST;
SELECT * FROM t1, v0 WHERE (((CASE ((((((((v0.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c2)))AND(v0.c2))  WHEN CAST(v0.c0 AS INTEGER) THEN '108102891' END)AND(UPPER(DISTINCT t1.c0) COLLATE BINARY))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((((((((((((t1.c0)OR(t1.c0)))AND(t1.c2)))AND(t1.c2)))AND(t1.c1)))AND(0.8611125997835306)))AND((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c2)))AND(t1.c2)))AND(t1.c1)))AND(0.8611125997835306)))AND((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))))AND((- ('-820178229')))));
SELECT MIN(v0.c0) FROM t1, v0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c1 AS INTEGER))<((((v0.c2, t1.c0))>=((vt0.c0, vt0.c0)))))) ORDER BY ((CAST(t1.c1 AS TEXT)) NOT BETWEEN ((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c0)))) AND (((((((t1.c0)OR(v0.c2)))OR(v0.c0)))OR(v0.c2))));
SELECT ALL MIN(v0.c0) FROM t1, v0 NATURAL JOIN vt0 WHERE (((((CAST(vt0.c1 AS INTEGER))<((((v0.c2, t1.c0))>((vt0.c0, vt0.c0))))))AND((((((v0.c1, v0.c1)) NOT BETWEEN ((vt0.c0, t1.c2)) AND ((vt0.c0, t1.c2))))<(((v0.c2)&(t1.c2))))))) ORDER BY ((CAST(t1.c1 AS TEXT)) NOT BETWEEN ((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c0)))) AND (((((((t1.c0)OR(v0.c2)))OR(v0.c0)))OR(v0.c2)))) LIMIT 0x0 INTERSECT SELECT ALL MIN(v0.c0) FROM t1, v0 NATURAL JOIN vt0 WHERE (((CASE WHEN v0.c2 THEN vt0.c0 END)<(CAST(t1.c1 AS REAL)))) ORDER BY ((CAST(t1.c1 AS TEXT)) NOT BETWEEN ((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c0)))) AND (((((((t1.c0)OR(v0.c2)))OR(v0.c0)))OR(v0.c2)))) LIMIT 0X0;
SELECT COUNT(*) FROM t1, vt0, v0 WHERE (((t1.c1)+(t1.c1)) COLLATE BINARY) ORDER BY '' ASC  NULLS LAST, ((UNLIKELY(1.21154696E9)) IS FALSE), ((('0Q'))<((t1.c0))) DESC;
SELECT DISTINCT COUNT(*) FROM t1, vt0, v0 WHERE (((t1.c1)+(t1.c1)) COLLATE BINARY) ORDER BY ((t1.c0)||(((vt0.c1) BETWEEN (t1.c2) AND (vt0.c0)))) DESC, ((v0.c0)|((t1.c2 IN (v0.c2))))  NULLS LAST LIMIT 0x1;
SELECT * FROM vt0, v0 WHERE (((((((v0.c1)AND(vt0.c1)))AND(v0.c2))) NOT BETWEEN (CASE WHEN v0.c1 THEN vt0.c0 ELSE '125199111' END) AND ((v0.c2 IN (v0.c1, v0.c1, vt0.c1))))) ORDER BY CASE WHEN '걐^fE(!E' THEN CASE WHEN '370490061' THEN vt0.c1 WHEN v0.c2 THEN x'c1cc49e4' END ELSE ((vt0.c0)/(v0.c0)) END DESC, CAST(NULL AS INTEGER) COLLATE RTRIM  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((((v0.c1)AND(vt0.c1)))AND(v0.c2))) NOT BETWEEN (CASE WHEN v0.c1 THEN vt0.c0 ELSE '125199111' END) AND ((v0.c2 IN (v0.c1, v0.c1, vt0.c1))))) ORDER BY ((v0.c2) BETWEEN (((((v0.c0)OR(vt0.c0)))OR(v0.c0))) AND (vt0.c1))  NULLS FIRST LIMIT 0x2;
SELECT * FROM vt0, v0 WHERE (((((((v0.c1)AND(vt0.c1)))AND(v0.c2))) NOT BETWEEN (CASE WHEN v0.c1 THEN vt0.c0 ELSE '125199111' END) AND ((v0.c2 IN (v0.c1, v0.c1, vt0.c1))))) ORDER BY CASE WHEN '걐^fE(!E' THEN CASE WHEN '370490061' THEN vt0.c1 WHEN v0.c2 THEN x'c1cc49e4' END ELSE ((vt0.c0)/(v0.c0)) END DESC, CAST(NULL AS INTEGER) COLLATE RTRIM  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((((v0.c1)AND(vt0.c1)))AND(v0.c2))) NOT BETWEEN (CASE WHEN v0.c1 THEN vt0.c0 ELSE '125199111' END) AND ((v0.c2 IN (v0.c1, v0.c1, vt0.c1))))) ORDER BY ((v0.c2) BETWEEN (((((v0.c0)OR(vt0.c0)))OR(v0.c0))) AND (vt0.c1))  NULLS FIRST LIMIT 0x2;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c1) NOT NULL) IN ((((vt0.c1, vt0.c0, 0.9504329400785267))>((vt0.c0, x'', vt0.c0)))))) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, vt0.c1) AS INTEGER) DESC  NULLS LAST, (('-1015592478' COLLATE NOCASE) BETWEEN ((((vt0.c1))=((vt0.c1)))) AND (((vt0.c0)OR(vt0.c1))))  NULLS LAST;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE ((((((vt0.c1) NOT NULL) IN ((((vt0.c1, vt0.c0, 0.9504329400785267))>((vt0.c0, x'', vt0.c0))))))AND(vt0.c1))) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, vt0.c1) AS INTEGER) DESC  NULLS LAST, (('-1015592478' COLLATE NOCASE) BETWEEN ((((vt0.c1))=((vt0.c1)))) AND (((vt0.c0)OR(vt0.c1))))  NULLS LAST INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (CAST(LOWER(vt0.c1) AS BLOB)) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, vt0.c1) AS INTEGER) DESC  NULLS LAST, (('-1015592478' COLLATE NOCASE) BETWEEN ((((vt0.c1))==((vt0.c1)))) AND (((vt0.c0)OR(vt0.c1))))  NULLS LAST;
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((CASE WHEN t1.c2 THEN t1.c1 WHEN v0.c0 THEN v0.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN v0.c0 END) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (TOTAL_CHANGES())));
SELECT DISTINCT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((((CASE WHEN t1.c2 THEN t1.c1 WHEN v0.c0 THEN v0.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN v0.c0 END) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (TOTAL_CHANGES())))AND(CAST((- (t1.c2)) AS BLOB)))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c1 ELSE t1.c0 END)+(((v0.c2) IS FALSE))) DESC  NULLS FIRST, CASE CASE WHEN v0.c1 THEN v0.c2 END  WHEN ((v0.c2) NOTNULL) THEN ((v0.c0)AND(t1.c0)) WHEN v0.c1 COLLATE NOCASE THEN (x'35' IN ()) WHEN ((v0.c2) ISNULL) THEN NULLIF(1.215819737E9, t1.c0) WHEN load_extension(v0.c0) THEN (NOT (vt0.c0)) END ASC;
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((CASE WHEN t1.c2 THEN t1.c1 WHEN v0.c0 THEN v0.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN v0.c0 END) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (TOTAL_CHANGES())));
SELECT DISTINCT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((((CASE WHEN t1.c2 THEN t1.c1 WHEN v0.c0 THEN v0.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN v0.c0 END) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (TOTAL_CHANGES())))AND(CAST((- (t1.c2)) AS BLOB)))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c1 ELSE t1.c0 END)+(((v0.c2) IS FALSE))) DESC  NULLS FIRST, CASE CASE WHEN v0.c1 THEN v0.c2 END  WHEN ((v0.c2) NOTNULL) THEN ((v0.c0)AND(t1.c0)) WHEN v0.c1 COLLATE NOCASE THEN (x'35' IN ()) WHEN ((v0.c2) ISNULL) THEN NULLIF(1.215819737E9, t1.c0) WHEN load_extension(v0.c0) THEN (NOT (vt0.c0)) END ASC;
SELECT MIN(v0.c2) FROM t1 CROSS JOIN v0 ON CAST(CASE t1.c0  WHEN vt0.c1 THEN t1.c1 WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END AS INTEGER) NATURAL JOIN vt0 WHERE (((t1.c0 COLLATE NOCASE)/(((vt0.c1) BETWEEN (v0.c0) AND (t1.c2))))) ORDER BY (((NOT ('-168355278')))+(((t1.c0)>>(v0.c1))))  NULLS LAST, CASE WHEN ((v0.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN ((((v0.c1)OR(v0.c1)))OR(t1.c1)) WHEN ((((vt0.c0)AND(v0.c0)))OR(t1.c2)) THEN CAST(t1.c2 AS TEXT) END  NULLS LAST, ((t1.c1)*(t1.c1)) COLLATE RTRIM ASC  NULLS LAST;
SELECT MIN(v0.c2) FROM t1 CROSS JOIN v0 ON CAST(CASE t1.c0  WHEN vt0.c1 THEN t1.c1 WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END AS INTEGER) NATURAL JOIN vt0 WHERE (((((t1.c0 COLLATE NOCASE)/(((vt0.c1) BETWEEN (v0.c0) AND (t1.c2)))))AND(HEX(json_patch(vt0.c1, vt0.c1))))) ORDER BY (((NOT ('-168355278')))+(((t1.c0)>>(v0.c1))))  NULLS LAST, CASE WHEN ((v0.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) THEN ((((v0.c1)OR(v0.c1)))OR(t1.c1)) WHEN ((((vt0.c0)AND(v0.c0)))OR(t1.c2)) THEN CAST(t1.c2 AS TEXT) END  NULLS LAST, ((t1.c1)*(t1.c1)) COLLATE RTRIM ASC  NULLS LAST LIMIT 0X3;
SELECT * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (t1.c1) LIMIT 0x2;
SELECT * FROM t1 WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (t1.c1) LIMIT 0x2;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END IN ()));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END IN ())) LIMIT 1;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t1 ON v0.c2 WHERE (((((((v0.c2) IS TRUE))AND(((t1.c1)*(t1.c0)))))OR(CAST(v0.c0 AS TEXT))));
SELECT DISTINCT COUNT(*) FROM v0 CROSS JOIN t1 ON v0.c2 WHERE (((((((((v0.c2) IS TRUE))AND(((t1.c1)*(t1.c0)))))OR(CAST(v0.c0 AS TEXT))))AND(CAST('2104059381' AS TEXT)))) INTERSECT SELECT DISTINCT COUNT(*) FROM v0 CROSS JOIN t1 ON v0.c2 WHERE ((~ (TYPEOF(DISTINCT v0.c0))));
SELECT * FROM v0, t1 WHERE (UNICODE(((((((v0.c2)AND(v0.c0)))OR(v0.c2)))OR(v0.c2))));
SELECT DISTINCT * FROM v0, t1 WHERE (UNICODE(((((((v0.c2)AND(v0.c0)))OR(v0.c2)))OR(v0.c2)))) ORDER BY HEX(('>덢
' IN ()))  NULLS LAST, (~ (t1.c1)) ASC  NULLS LAST LIMIT 0X1;
SELECT * FROM v0, t1 WHERE (UNICODE(((((((v0.c2)AND(v0.c0)))OR(v0.c2)))OR(v0.c2))));
SELECT DISTINCT * FROM v0, t1 WHERE (UNICODE(((((((v0.c2)AND(v0.c0)))OR(v0.c2)))OR(v0.c2)))) ORDER BY HEX(('>덢
' IN ()))  NULLS LAST, (~ (t1.c1)) ASC  NULLS LAST LIMIT 0X1;
SELECT ALL MAX(vt0.c1) FROM vt0, t1 WHERE ((((('1909464343') BETWEEN (vt0.c1) AND (t1.c0)))*((t1.c2 IN (t1.c1)))));
SELECT DISTINCT MAX(vt0.c1) FROM vt0, t1 WHERE ((((((('1909464343') BETWEEN (vt0.c1) AND (t1.c0)))*((t1.c2 IN (t1.c1)))))AND(((t1.c2) NOT BETWEEN (((t1.c2)IS(t1.c1))) AND (((t1.c2)&(t1.c0))))))) LIMIT 2;
SELECT MAX(t1.c1) FROM vt0, v0 NATURAL JOIN t1 WHERE (((vt0.c1 COLLATE RTRIM)%(CASE WHEN vt0.c0 THEN x'' WHEN v0.c0 THEN vt0.c1 WHEN t1.c1 THEN v0.c1 ELSE vt0.c0 END))) ORDER BY '-1071037402' DESC  NULLS FIRST, ((((t1.c1) BETWEEN (t1.c2) AND (vt0.c0)))<<(((v0.c2) ISNULL))), CAST(t1.c1 AS REAL) COLLATE RTRIM;
SELECT DISTINCT MAX(t1.c1) FROM vt0, v0 NATURAL JOIN t1 WHERE (((((vt0.c1 COLLATE RTRIM)%(CASE WHEN vt0.c0 THEN x'' WHEN v0.c0 THEN vt0.c1 WHEN t1.c1 THEN v0.c1 ELSE vt0.c0 END)))AND((((t1.c2)/(t1.c1)) IN (((t1.c1) BETWEEN (t1.c1) AND (v0.c0))))))) ORDER BY '-1071037402' DESC  NULLS FIRST, ((((t1.c1) BETWEEN (t1.c2) AND (vt0.c0)))<<(((v0.c2) ISNULL))), CAST(t1.c1 AS REAL) COLLATE RTRIM LIMIT 0 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM vt0, v0 NATURAL JOIN t1 WHERE (((((((((((t1.c2)OR(-1650154887)))OR(vt0.c1)))AND(t1.c2)))OR(vt0.c0))) BETWEEN ((((v0.c2, t1.c1))==((v0.c2, vt0.c1)))) AND (-1764809039))) ORDER BY '-1071037402' DESC  NULLS FIRST, ((((t1.c1) BETWEEN (t1.c2) AND (vt0.c0)))<<(((v0.c2) ISNULL))), CAST(t1.c1 AS REAL) COLLATE RTRIM LIMIT 0x0;
SELECT * FROM v0 WHERE (CAST(v0.c1 AS NUMERIC) COLLATE NOCASE);
SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c1 AS NUMERIC) COLLATE NOCASE)AND((((v0.c1, v0.c1, v0.c2)) BETWEEN (((NOT (v0.c1)), v0.c0, (v0.c0 IN ()))) AND ((('**>FrU' IN (0.3434231553951913)), (~ (v0.c0)), v0.c0 COLLATE NOCASE)))))) LIMIT 0X4 INTERSECT SELECT DISTINCT * FROM v0 WHERE (-1635930072) LIMIT 4;
SELECT * FROM v0 WHERE (CAST(v0.c1 AS NUMERIC) COLLATE NOCASE);
SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c1 AS NUMERIC) COLLATE NOCASE)AND((((v0.c1, v0.c1, v0.c2)) BETWEEN (((NOT (v0.c1)), v0.c0, (v0.c0 IN ()))) AND ((('**>FrU' IN (0.3434231553951913)), (~ (v0.c0)), v0.c0 COLLATE NOCASE)))))) LIMIT 0X4 INTERSECT SELECT DISTINCT * FROM v0 WHERE (-1635930072) LIMIT 4;
SELECT * FROM vt0 WHERE ('
~6h/y');
SELECT * FROM vt0 WHERE ('
~6h/y') LIMIT 0X1;
SELECT * FROM vt0 WHERE ('
~6h/y');
SELECT * FROM vt0 WHERE ('
~6h/y') LIMIT 0X1;
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))))LIKE((('-1399201276')<<(vt0.c0))))) ORDER BY ((((vt0.c0)|(vt0.c1)))-(CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST, CAST(NULLIF(vt0.c1, vt0.c0) AS BLOB) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))))LIKE((('-1399201276')<<(vt0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((((((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)AND(('113103293' IN (vt0.c1, vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS FALSE))))AND(((vt0.c0)IS(vt0.c0)))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (LTRIM(vt0.c1) COLLATE BINARY) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((((((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)AND(('113103293' IN (vt0.c1, vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS FALSE))))AND(((vt0.c0)IS(vt0.c0))));
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))))LIKE((('-1399201276')<<(vt0.c0))))) ORDER BY ((((vt0.c0)|(vt0.c1)))-(CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST, CAST(NULLIF(vt0.c1, vt0.c0) AS BLOB) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))))LIKE((('-1399201276')<<(vt0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((((((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)AND(('113103293' IN (vt0.c1, vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS FALSE))))AND(((vt0.c0)IS(vt0.c0)))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (LTRIM(vt0.c1) COLLATE BINARY) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((((((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)AND(('113103293' IN (vt0.c1, vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS FALSE))))AND(((vt0.c0)IS(vt0.c0))));
SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN ('P^') AND (vt0.c1)) THEN CAST(v0.c1 AS REAL) END) ORDER BY (((((8.08120973E8, v0.c2)) BETWEEN ((NULL, v0.c2)) AND ((v0.c1, v0.c2))))>(CASE v0.c1  WHEN v0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '' THEN v0.c0 END)), ((((vt0.c1) IS TRUE)) NOT NULL) ASC  NULLS LAST, ((((v0.c0)) BETWEEN ((x'37')) AND ((v0.c0))) IN ()) DESC  NULLS FIRST;
SELECT DISTINCT * FROM v0, vt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN ('P^') AND (vt0.c1)) THEN CAST(v0.c1 AS REAL) END) ORDER BY (((((8.08120973E8, v0.c2)) BETWEEN ((NULL, v0.c2)) AND ((v0.c1, v0.c2))))>(CASE v0.c1  WHEN v0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '' THEN v0.c0 END)), ((((vt0.c1) IS TRUE)) NOT NULL) ASC  NULLS LAST, ((((v0.c0)) BETWEEN ((x'37')) AND ((v0.c0))) IN ()) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM v0, vt0 WHERE (IFNULL(DISTINCT COALESCE(DISTINCT v0.c0, vt0.c0, v0.c1), CASE WHEN vt0.c1 THEN v0.c2 END)) ORDER BY (((((8.08120973E8, v0.c2)) BETWEEN ((NULL, v0.c2)) AND ((v0.c1, v0.c2))))>(CASE v0.c1  WHEN v0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '' THEN v0.c0 END)), ((((vt0.c1) IS TRUE)) NOT NULL) ASC  NULLS LAST, ((((v0.c0)) BETWEEN ((x'37')) AND ((v0.c0))) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN ('P^') AND (vt0.c1)) THEN CAST(v0.c1 AS REAL) END) ORDER BY (((((8.08120973E8, v0.c2)) BETWEEN ((NULL, v0.c2)) AND ((v0.c1, v0.c2))))>(CASE v0.c1  WHEN v0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '' THEN v0.c0 END)), ((((vt0.c1) IS TRUE)) NOT NULL) ASC  NULLS LAST, ((((v0.c0)) BETWEEN ((x'37')) AND ((v0.c0))) IN ()) DESC  NULLS FIRST;
SELECT MIN(vt0.c1) FROM vt0 WHERE ((((vt0.c1, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0))), ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (+ (vt0.c1)))))) ORDER BY ((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))) NOTNULL), ((((vt0.c1) NOT NULL))LIKE(((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))));
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((((((vt0.c1, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0))), ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (+ (vt0.c1))))))AND(((vt0.c0 IN (vt0.c0, vt0.c0)) IN ())))) ORDER BY CAST(vt0.c0 AS NUMERIC) LIMIT 0x0;
SELECT * FROM vt0 INNER JOIN t1 ON CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) THEN vt0.c1 WHEN ((vt0.c0)IS NOT(t1.c1)) THEN ((vt0.c0) BETWEEN (t1.c0) AND (vt0.c1)) END WHERE ((t1.c1 IN (t1.c0)) COLLATE BINARY);
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) THEN vt0.c1 WHEN ((vt0.c0)IS NOT(t1.c1)) THEN ((vt0.c0) BETWEEN (t1.c0) AND (vt0.c1)) END WHERE ((((t1.c1 IN (t1.c0)) COLLATE BINARY)AND(CASE WHEN (('0.536812455685967') BETWEEN (x'65') AND ('')) THEN (('67093693')IS NOT(t1.c0)) END))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) THEN vt0.c1 WHEN ((vt0.c0)IS NOT(t1.c1)) THEN ((vt0.c0) BETWEEN (t1.c0) AND (vt0.c1)) END WHERE (((((vt0.c1)==(t1.c2)))<=(TYPEOF(vt0.c1)))) LIMIT 0x1;
SELECT * FROM vt0 INNER JOIN t1 ON CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) THEN vt0.c1 WHEN ((vt0.c0)IS NOT(t1.c1)) THEN ((vt0.c0) BETWEEN (t1.c0) AND (vt0.c1)) END WHERE ((t1.c1 IN (t1.c0)) COLLATE BINARY);
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) THEN vt0.c1 WHEN ((vt0.c0)IS NOT(t1.c1)) THEN ((vt0.c0) BETWEEN (t1.c0) AND (vt0.c1)) END WHERE ((((t1.c1 IN (t1.c0)) COLLATE BINARY)AND(CASE WHEN (('0.536812455685967') BETWEEN (x'65') AND ('')) THEN (('67093693')IS NOT(t1.c0)) END))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) THEN vt0.c1 WHEN ((vt0.c0)IS NOT(t1.c1)) THEN ((vt0.c0) BETWEEN (t1.c0) AND (vt0.c1)) END WHERE (((((vt0.c1)==(t1.c2)))<=(TYPEOF(vt0.c1)))) LIMIT 0x1;
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (((vt0.c0)<=((v0.c2 IN (vt0.c1))))) ORDER BY CAST(((((((t1.c1)OR(v0.c0)))OR(NULL)))AND(t1.c1)) AS BLOB), ((((t1.c0)>(1147263217))) IS TRUE) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (((((vt0.c0)<=((v0.c2 IN (vt0.c1)))))AND(t1.c2))) ORDER BY (((v0.c0) BETWEEN (t1.c2) AND (t1.c1)) IN ()) ASC  NULLS FIRST, ((((t1.c2) NOT BETWEEN (t1.c2) AND (v0.c1))) ISNULL) LIMIT 1;
SELECT * FROM t1, vt0 CROSS JOIN v0 ON TYPEOF(DISTINCT (+ (t1.c0))) WHERE (((((v0.c0) BETWEEN (vt0.c0) AND ('⦳y'))) BETWEEN ((- (v0.c0))) AND (((NULL)=(t1.c2)))));
SELECT ALL * FROM t1, vt0 CROSS JOIN v0 ON TYPEOF(DISTINCT (+ (t1.c0))) WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND ('⦳y'))) BETWEEN ((- (v0.c0))) AND (((NULL)==(t1.c2)))))AND(((((v0.c0) NOT BETWEEN (v0.c2) AND (0.445386604260368)))==(((v0.c2) NOT NULL)))))) ORDER BY '-1538649950' ASC, ((json_patch(t1.c0, vt0.c1))!=((t1.c0 IN (v0.c0, vt0.c0, v0.c0))));
SELECT * FROM t1, vt0 CROSS JOIN v0 ON TYPEOF(DISTINCT (+ (t1.c0))) WHERE (((((v0.c0) BETWEEN (vt0.c0) AND ('⦳y'))) BETWEEN ((- (v0.c0))) AND (((NULL)=(t1.c2)))));
SELECT ALL * FROM t1, vt0 CROSS JOIN v0 ON TYPEOF(DISTINCT (+ (t1.c0))) WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND ('⦳y'))) BETWEEN ((- (v0.c0))) AND (((NULL)==(t1.c2)))))AND(((((v0.c0) NOT BETWEEN (v0.c2) AND (0.445386604260368)))==(((v0.c2) NOT NULL)))))) ORDER BY '-1538649950' ASC, ((json_patch(t1.c0, vt0.c1))!=((t1.c0 IN (v0.c0, vt0.c0, v0.c0))));
SELECT MAX(v0.c2) FROM t1, vt0, v0 WHERE (0.3742681974426666) ORDER BY v0.c0, ((CASE WHEN vt0.c1 THEN t1.c1 WHEN '-602905820' THEN t1.c1 END)>=(((v0.c1)AND(x'42')))) DESC  NULLS FIRST;
SELECT DISTINCT MAX(v0.c2) FROM t1, vt0, v0 WHERE (0.3742681974426666) ORDER BY CASE WHEN CAST(v0.c0 AS NUMERIC) THEN (v0.c0 IN ()) ELSE (((vt0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) END DESC  NULLS LAST, CAST('1709102821' AS INTEGER) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MAX(v0.c2) FROM t1, vt0, v0 WHERE ((+ (v0.c1 COLLATE NOCASE))) ORDER BY CASE WHEN CAST(v0.c0 AS NUMERIC) THEN (v0.c0 IN ()) ELSE (((vt0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) END DESC  NULLS LAST, CAST('1709102821' AS INTEGER) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM vt0, v0, t1 WHERE ((+ (t1.c1 COLLATE RTRIM))) ORDER BY (((vt0.c1 IN (vt0.c0))) BETWEEN (CASE WHEN t1.c1 THEN t1.c0 END) AND (v0.c2 COLLATE RTRIM));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((+ (t1.c1 COLLATE RTRIM))) ORDER BY (((vt0.c1 IN (vt0.c0))) BETWEEN (CASE WHEN t1.c1 THEN t1.c0 END) AND (v0.c2 COLLATE RTRIM)) LIMIT 0x1;
SELECT * FROM vt0, v0, t1 WHERE ((+ (t1.c1 COLLATE RTRIM))) ORDER BY (((vt0.c1 IN (vt0.c0))) BETWEEN (CASE WHEN t1.c1 THEN t1.c0 END) AND (v0.c2 COLLATE RTRIM));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((+ (t1.c1 COLLATE RTRIM))) ORDER BY (((vt0.c1 IN (vt0.c0))) BETWEEN (CASE WHEN t1.c1 THEN t1.c0 END) AND (v0.c2 COLLATE RTRIM)) LIMIT 0x1;
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c2)OR(t1.c0)))OR(t1.c2))) ISNULL));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((t1.c2)OR(t1.c0)))OR(t1.c2))) ISNULL))AND(NULL))) ORDER BY CAST(((NULL)IS(t1.c0)) AS REAL);
SELECT * FROM vt0, v0 WHERE ((- (TYPEOF(DISTINCT vt0.c1)))) ORDER BY ((((v0.c1)AND(vt0.c1)))OR(v0.c1)) COLLATE BINARY;
SELECT DISTINCT * FROM vt0, v0 WHERE ((- (TYPEOF(DISTINCT vt0.c1)))) ORDER BY ((((v0.c1)AND(vt0.c1)))OR(v0.c1)) COLLATE BINARY LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 NOT INDEXED, v0 WHERE (QUOTE(json_type(vt0.c0))) ORDER BY ((((v0.c1)AND(vt0.c1)))OR(v0.c1)) COLLATE BINARY LIMIT 1;
SELECT * FROM vt0, v0 WHERE ((- (TYPEOF(DISTINCT vt0.c1)))) ORDER BY ((((v0.c1)AND(vt0.c1)))OR(v0.c1)) COLLATE BINARY;
SELECT DISTINCT * FROM vt0, v0 WHERE ((- (TYPEOF(DISTINCT vt0.c1)))) ORDER BY ((((v0.c1)AND(vt0.c1)))OR(v0.c1)) COLLATE BINARY LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 NOT INDEXED, v0 WHERE (QUOTE(json_type(vt0.c0))) ORDER BY ((((v0.c1)AND(vt0.c1)))OR(v0.c1)) COLLATE BINARY LIMIT 1;
SELECT ALL MAX(v0.c2) FROM v0 WHERE (((((v0.c1)*(v0.c2))) BETWEEN ((- (v0.c0))) AND (COALESCE(v0.c0, v0.c1, v0.c2, '-814383329')))) ORDER BY ((((v0.c2) ISNULL)) BETWEEN (v0.c1 COLLATE BINARY) AND ((NOT (v0.c0))))  NULLS LAST;
SELECT ALL MAX(v0.c2) FROM v0 WHERE (((((((v0.c1)*(v0.c2))) BETWEEN ((- (v0.c0))) AND (COALESCE(v0.c0, v0.c1, v0.c2, '-814383329'))))AND(x''))) ORDER BY ((((v0.c2) ISNULL)) BETWEEN (v0.c1 COLLATE BINARY) AND ((NOT (v0.c0))))  NULLS LAST LIMIT 2;
SELECT * FROM t1, v0, vt0 WHERE (vt0.c0) ORDER BY CAST(x'9d' AS TEXT);
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (vt0.c0) ORDER BY ((t1.c0) IS FALSE) INTERSECT SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((((((t1.c0)AND((((v0.c0, vt0.c1, v0.c1, t1.c0, vt0.c0))>=((t1.c2, v0.c1, vt0.c1, t1.c2, v0.c1))))))AND(CAST(v0.c2 AS REAL))))AND(((vt0.c1)>>(t1.c0))))) ORDER BY ((t1.c0) IS FALSE);
SELECT * FROM t1, v0, vt0 WHERE (vt0.c0) ORDER BY CAST(x'9d' AS TEXT);
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (vt0.c0) ORDER BY ((t1.c0) IS FALSE) INTERSECT SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((((((t1.c0)AND((((v0.c0, vt0.c1, v0.c1, t1.c0, vt0.c0))>=((t1.c2, v0.c1, vt0.c1, t1.c2, v0.c1))))))AND(CAST(v0.c2 AS REAL))))AND(((vt0.c1)>>(t1.c0))))) ORDER BY ((t1.c0) IS FALSE);
SELECT ALL MAX(v0.c2) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((v0.c0) IS FALSE))));
SELECT MAX(v0.c2) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((v0.c0) IS FALSE)))) ORDER BY (((((v0.c1, v0.c1))=((v0.c0, v0.c0)))) IS TRUE) ASC  NULLS FIRST, ((((CAST(v0.c2 AS INTEGER))OR(NULL)))AND(((v0.c1)==(v0.c0)))) DESC  NULLS FIRST LIMIT 4;
SELECT COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT CAST(vt0.c1 AS REAL))) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c2)GLOB(vt0.c1)))) AND ((v0.c2 COLLATE NOCASE))) ASC  NULLS LAST, LIKELIHOOD(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c1)), v0.c1) ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT CAST(vt0.c1 AS REAL))) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c2)GLOB(vt0.c1)))) AND ((v0.c2 COLLATE NOCASE))) ASC  NULLS LAST, LIKELIHOOD(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c1)), v0.c1) ASC INTERSECT SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((+ (vt0.c1)))/((vt0.c0 IN ())))) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c2)GLOB(vt0.c1)))) AND ((v0.c2 COLLATE NOCASE))) ASC  NULLS LAST, LIKELIHOOD(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c1)), v0.c1) ASC;
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON vt0.c1 COLLATE NOCASE INNER JOIN v0 ON (- (CAST(vt0.c1 AS TEXT))) WHERE (TYPEOF(v0.c1));
SELECT * FROM vt0 INNER JOIN t1 ON vt0.c1 COLLATE NOCASE INNER JOIN v0 ON (- (CAST(vt0.c1 AS TEXT))) WHERE (TYPEOF(v0.c1)) LIMIT 0x0 INTERSECT SELECT ALL * FROM vt0 INNER JOIN t1 ON vt0.c1 COLLATE NOCASE INNER JOIN v0 ON (- (CAST(vt0.c1 AS TEXT))) WHERE ((NOT ((vt0.c0 IN (t1.c1))))) LIMIT 0X0;
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON vt0.c1 COLLATE NOCASE INNER JOIN v0 ON (- (CAST(vt0.c1 AS TEXT))) WHERE (TYPEOF(v0.c1));
SELECT * FROM vt0 INNER JOIN t1 ON vt0.c1 COLLATE NOCASE INNER JOIN v0 ON (- (CAST(vt0.c1 AS TEXT))) WHERE (TYPEOF(v0.c1)) LIMIT 0x0 INTERSECT SELECT ALL * FROM vt0 INNER JOIN t1 ON vt0.c1 COLLATE NOCASE INNER JOIN v0 ON (- (CAST(vt0.c1 AS TEXT))) WHERE ((NOT ((vt0.c0 IN (t1.c1))))) LIMIT 0X0;
SELECT ALL MIN(vt0.c0) FROM v0, t1, vt0 WHERE ((+ (((((((((((((((((((NULL)OR(x'8c')))AND(v0.c0)))OR(t1.c0)))AND(t1.c2)))OR(vt0.c0)))OR(t1.c0)))AND(v0.c2)))OR(vt0.c0)))OR(v0.c1)))));
SELECT DISTINCT MIN(vt0.c0) FROM v0, t1, vt0 WHERE ((+ (((((((((((((((((((NULL)OR(x'8c')))AND(v0.c0)))OR(t1.c0)))AND(t1.c2)))OR(vt0.c0)))OR(t1.c0)))AND(v0.c2)))OR(vt0.c0)))OR(v0.c1))))) INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM v0, t1, vt0 WHERE ((((0.9478990667434146, v0.c2, t1.c1, NULL)) NOT BETWEEN ((vt0.c0, v0.c0, x'', NULL)) AND ((v0.c2, t1.c1, v0.c0, x'3aad6b'))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN ()));
SELECT DISTINCT COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM IN ()))AND((NOT (v0.c1)) COLLATE NOCASE))) LIMIT 0;
SELECT * FROM t1 WHERE (((CAST(t1.c2 AS TEXT))IS NOT((t1.c0 IN (t1.c2)))));
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c2 AS TEXT))IS NOT((t1.c0 IN (t1.c2)))))AND(((CASE WHEN t1.c0 THEN t1.c0 WHEN -1077659058 THEN t1.c1 WHEN x'' THEN 0xffffffffacd80a58 END)*(CASE WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))))) INTERSECT SELECT * FROM t1 WHERE ((((((t1.c0, t1.c1, t1.c2, t1.c1, t1.c2)) NOT BETWEEN ((t1.c2, t1.c1, t1.c2, t1.c2, t1.c2)) AND ((t1.c1, t1.c2, t1.c2, t1.c1, t1.c0)))) NOT BETWEEN (((t1.c0)>(t1.c1))) AND ((t1.c1 IN (t1.c1)))));
SELECT * FROM t1 WHERE (((CAST(t1.c2 AS TEXT))IS NOT((t1.c0 IN (t1.c2)))));
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c2 AS TEXT))IS NOT((t1.c0 IN (t1.c2)))))AND(((CASE WHEN t1.c0 THEN t1.c0 WHEN -1077659058 THEN t1.c1 WHEN x'' THEN 0xffffffffacd80a58 END)*(CASE WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))))) INTERSECT SELECT * FROM t1 WHERE ((((((t1.c0, t1.c1, t1.c2, t1.c1, t1.c2)) NOT BETWEEN ((t1.c2, t1.c1, t1.c2, t1.c2, t1.c2)) AND ((t1.c1, t1.c2, t1.c2, t1.c1, t1.c0)))) NOT BETWEEN (((t1.c0)>(t1.c1))) AND ((t1.c1 IN (t1.c1)))));
SELECT COUNT(*) FROM v0 WHERE (((((((0.23860681548607698)OR(v0.c0)))OR(v0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((0.23860681548607698)OR(v0.c0)))OR(v0.c2))) IS TRUE)) ORDER BY (~ ((+ (v0.c0))))  NULLS LAST;
SELECT MIN(vt0.c1) FROM vt0 WHERE (CASE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))  WHEN (- (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN CAST(vt0.c1 AS NUMERIC) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0.7934975188870886 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c1 IN (vt0.c0)) WHEN '-95058440' THEN ((vt0.c0)&(vt0.c1)) END) ORDER BY (+ (CAST(vt0.c0 AS REAL)))  NULLS FIRST, (- (vt0.c1)) COLLATE RTRIM  NULLS LAST, LOWER((vt0.c0 IN (vt0.c0, vt0.c1)))  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)<>(vt0.c1)))) DESC  NULLS LAST;
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((CASE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))  WHEN (- (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN CAST(vt0.c1 AS NUMERIC) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0.7934975188870886 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c1 IN (vt0.c0)) WHEN '-95058440' THEN ((vt0.c0)&(vt0.c1)) END)AND((((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND (x'0196'))))) ORDER BY (+ (CAST(vt0.c0 AS REAL)))  NULLS FIRST, (- (vt0.c1)) COLLATE RTRIM  NULLS LAST, LOWER((vt0.c0 IN (vt0.c0, vt0.c1)))  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)<>(vt0.c1)))) DESC  NULLS LAST LIMIT 0X3 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY (+ (CAST(vt0.c0 AS REAL)))  NULLS FIRST, (- (vt0.c1)) COLLATE RTRIM  NULLS LAST, LOWER((vt0.c0 IN (vt0.c0, vt0.c1)))  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)<>(vt0.c1)))) DESC  NULLS LAST LIMIT 0x3;
SELECT ALL * FROM vt0, t1 WHERE ((((t1.c0, t1.c1, t1.c2, t1.c1)) BETWEEN ((TIME(t1.c1, t1.c0, vt0.c0, vt0.c0), ((((((t1.c2)OR(t1.c0)))AND(t1.c2)))AND(t1.c0)), (t1.c0 IN (vt0.c1)), (- (t1.c1)))) AND ((((((((t1.c1)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)), ((vt0.c1) NOT NULL), 1.803558881E9, ((t1.c2)!=(t1.c2)))))) ORDER BY x'92'  NULLS LAST, (NOT (t1.c1)) COLLATE BINARY;
SELECT * FROM vt0, t1 WHERE ((((((t1.c0, t1.c1, t1.c2, t1.c1)) BETWEEN ((TIME(t1.c1, t1.c0, vt0.c0, vt0.c0), ((((((t1.c2)OR(t1.c0)))AND(t1.c2)))AND(t1.c0)), (t1.c0 IN (vt0.c1)), (- (t1.c1)))) AND ((((((((t1.c1)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)), ((vt0.c1) NOT NULL), 1.803558881E9, ((t1.c2)!=(t1.c2))))))AND(CAST(t1.c1 COLLATE RTRIM AS INTEGER)))) ORDER BY x'92'  NULLS LAST, (NOT (t1.c1)) COLLATE BINARY INTERSECT SELECT * FROM vt0, t1 WHERE (CAST(t1.c2 AS NUMERIC) COLLATE NOCASE) ORDER BY x'92'  NULLS LAST, (NOT (t1.c1)) COLLATE BINARY;
SELECT ALL * FROM vt0, t1 WHERE ((((t1.c0, t1.c1, t1.c2, t1.c1)) BETWEEN ((TIME(t1.c1, t1.c0, vt0.c0, vt0.c0), ((((((t1.c2)OR(t1.c0)))AND(t1.c2)))AND(t1.c0)), (t1.c0 IN (vt0.c1)), (- (t1.c1)))) AND ((((((((t1.c1)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)), ((vt0.c1) NOT NULL), 1.803558881E9, ((t1.c2)!=(t1.c2)))))) ORDER BY x'92'  NULLS LAST, (NOT (t1.c1)) COLLATE BINARY;
SELECT * FROM vt0, t1 WHERE ((((((t1.c0, t1.c1, t1.c2, t1.c1)) BETWEEN ((TIME(t1.c1, t1.c0, vt0.c0, vt0.c0), ((((((t1.c2)OR(t1.c0)))AND(t1.c2)))AND(t1.c0)), (t1.c0 IN (vt0.c1)), (- (t1.c1)))) AND ((((((((t1.c1)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)), ((vt0.c1) NOT NULL), 1.803558881E9, ((t1.c2)!=(t1.c2))))))AND(CAST(t1.c1 COLLATE RTRIM AS INTEGER)))) ORDER BY x'92'  NULLS LAST, (NOT (t1.c1)) COLLATE BINARY INTERSECT SELECT * FROM vt0, t1 WHERE (CAST(t1.c2 AS NUMERIC) COLLATE NOCASE) ORDER BY x'92'  NULLS LAST, (NOT (t1.c1)) COLLATE BINARY;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (0.19247703005125638) ORDER BY ((NULL)!=(v0.c1)) DESC  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((0.19247703005125638)AND((MAX(v0.c0, vt0.c1, v0.c2) IN ())))) ORDER BY ((NULL)<>(v0.c1)) DESC  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (0.19247703005125638) ORDER BY ((NULL)!=(v0.c1)) DESC  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((0.19247703005125638)AND((MAX(v0.c0, vt0.c1, v0.c2) IN ())))) ORDER BY ((NULL)<>(v0.c1)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (t1.c0);
SELECT COUNT(*) FROM v0, t1, vt0 WHERE (t1.c0) ORDER BY t1.c2;
SELECT COUNT(*) FROM v0 WHERE (((v0.c1 IN ()) IN ())) ORDER BY (((+ (v0.c0))) NOT BETWEEN (v0.c2) AND (v0.c2 COLLATE NOCASE)) DESC, rtreenode(x'bc92', CASE WHEN v0.c1 THEN v0.c2 END)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM v0 WHERE (((((v0.c1 IN ()) IN ()))AND(((v0.c0)>=(v0.c0)) COLLATE NOCASE))) ORDER BY (((+ (v0.c0))) NOT BETWEEN (v0.c2) AND (v0.c2 COLLATE NOCASE)) DESC, rtreenode(x'bc92', CASE WHEN v0.c1 THEN v0.c2 END)  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM v0, vt0 CROSS JOIN t1 ON (vt0.c0 COLLATE NOCASE IN (((v0.c0) IS FALSE))) WHERE (CASE WHEN (t1.c0 IN (v0.c1, v0.c1)) THEN ((t1.c0)<(v0.c0)) WHEN ('XFmf' IN (v0.c1)) THEN (((t1.c1)) BETWEEN ((vt0.c1)) AND ((t1.c1))) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN CASE t1.c2  WHEN 0.20921173888960787 THEN v0.c2 WHEN t1.c0 THEN t1.c0 END END) ORDER BY CAST(json_object(v0.c0, t1.c0, vt0.c1) AS REAL) ASC, ((((((((v0.c1)OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)))>=('H>C'))  NULLS LAST, ((x'cd') BETWEEN ((v0.c0 IN (t1.c1))) AND ((t1.c0 IN (v0.c1)))) DESC;
SELECT DISTINCT MIN(t1.c1) FROM v0, vt0 CROSS JOIN t1 ON (vt0.c0 COLLATE NOCASE IN (((v0.c0) IS FALSE))) WHERE (((CASE WHEN (t1.c0 IN (v0.c1, v0.c1)) THEN ((t1.c0)<(v0.c0)) WHEN ('XFmf' IN (v0.c1)) THEN (((t1.c1)) BETWEEN ((vt0.c1)) AND ((t1.c1))) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN CASE t1.c2  WHEN 0.20921173888960787 THEN v0.c2 WHEN t1.c0 THEN t1.c0 END END)AND((NOT (NULL)) COLLATE NOCASE))) ORDER BY (((t1.c0 IN (t1.c0))) BETWEEN (t1.c2) AND (((t1.c2) NOT NULL)))  NULLS FIRST, CAST(((((vt0.c1)AND(v0.c1)))AND(vt0.c0)) AS BLOB) LIMIT 0;
SELECT ALL * FROM vt0 WHERE (((((NULLIF(vt0.c0, vt0.c0))OR((vt0.c1 IN (0Xffffffffc006f462, vt0.c0)))))OR(((vt0.c1)<(vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE (((((((NULLIF(vt0.c0, vt0.c0))OR((vt0.c1 IN (0xffffffffc006f462, vt0.c0)))))OR(((vt0.c1)<(vt0.c0)))))AND(HEX(vt0.c0) COLLATE NOCASE))) ORDER BY NULL  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (x'ef') ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((NULLIF(vt0.c0, vt0.c0))OR((vt0.c1 IN (0Xffffffffc006f462, vt0.c0)))))OR(((vt0.c1)<(vt0.c0)))));
SELECT DISTINCT * FROM vt0 WHERE (((((((NULLIF(vt0.c0, vt0.c0))OR((vt0.c1 IN (0xffffffffc006f462, vt0.c0)))))OR(((vt0.c1)<(vt0.c0)))))AND(HEX(vt0.c0) COLLATE NOCASE))) ORDER BY NULL  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 WHERE (x'ef') ORDER BY NULL  NULLS LAST;
SELECT MAX(v0.c0) FROM v0 WHERE (((v0.c1 COLLATE RTRIM)GLOB(0xffffffffe51d7326)));
SELECT MAX(v0.c0) FROM v0 WHERE (((v0.c1 COLLATE RTRIM)GLOB(-451054810)));
SELECT * FROM t1, v0 WHERE (CAST(((t1.c2)&(t1.c0)) AS BLOB)) ORDER BY ((v0.c2 IN ()) IN (CAST(t1.c1 AS INTEGER), t1.c0 COLLATE BINARY, ((((((v0.c0)OR(t1.c0)))OR(t1.c0)))OR(v0.c1))))  NULLS LAST, CAST(CASE v0.c0  WHEN '^p' THEN v0.c1 WHEN t1.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN t1.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN t1.c2 WHEN v0.c2 THEN t1.c1 END AS NUMERIC) DESC, x'e9' DESC;
SELECT DISTINCT * FROM t1, v0 WHERE (CAST(((t1.c2)&(t1.c0)) AS BLOB)) ORDER BY ((((v0.c2) BETWEEN (t1.c1) AND (v0.c0))) NOT NULL)  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (((78031468) BETWEEN ((v0.c1 IN (t1.c2))) AND (((v0.c1) BETWEEN (v0.c1) AND (t1.c1))))) ORDER BY ((((v0.c2) BETWEEN (t1.c1) AND (v0.c0))) NOT NULL)  NULLS LAST;
SELECT * FROM t1, v0 WHERE (CAST(((t1.c2)&(t1.c0)) AS BLOB)) ORDER BY ((v0.c2 IN ()) IN (CAST(t1.c1 AS INTEGER), t1.c0 COLLATE BINARY, ((((((v0.c0)OR(t1.c0)))OR(t1.c0)))OR(v0.c1))))  NULLS LAST, CAST(CASE v0.c0  WHEN '^p' THEN v0.c1 WHEN t1.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN t1.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN t1.c2 WHEN v0.c2 THEN t1.c1 END AS NUMERIC) DESC, x'e9' DESC;
SELECT DISTINCT * FROM t1, v0 WHERE (CAST(((t1.c2)&(t1.c0)) AS BLOB)) ORDER BY ((((v0.c2) BETWEEN (t1.c1) AND (v0.c0))) NOT NULL)  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (((78031468) BETWEEN ((v0.c1 IN (t1.c2))) AND (((v0.c1) BETWEEN (v0.c1) AND (t1.c1))))) ORDER BY ((((v0.c2) BETWEEN (t1.c1) AND (v0.c0))) NOT NULL)  NULLS LAST;
SELECT * FROM vt0, v0, t1 WHERE (CASE (NOT (vt0.c0))  WHEN '1572404649' COLLATE RTRIM THEN v0.c1 WHEN '-2000660482' THEN (v0.c2 IN (t1.c0)) WHEN CASE WHEN vt0.c0 THEN v0.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN vt0.c0 END THEN ((t1.c0)OR('-48124086')) END) ORDER BY (((((vt0.c1)IS(v0.c0)), LTRIM(t1.c1)))=((load_extension(t1.c1), CAST(v0.c1 AS NUMERIC)))) DESC  NULLS LAST, (((((t1.c2, t1.c0, vt0.c0))<((vt0.c1, v0.c0, t1.c2)))) ISNULL) DESC  NULLS FIRST, (((+ (t1.c2)))OR(((t1.c1)||(t1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0, t1 WHERE (((CASE (NOT (vt0.c0))  WHEN '1572404649' COLLATE RTRIM THEN v0.c1 WHEN '-2000660482' THEN (v0.c2 IN (t1.c0)) WHEN CASE WHEN vt0.c0 THEN v0.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN vt0.c0 END THEN ((t1.c0)OR('-48124086')) END)AND(CASE ((v0.c0)>(vt0.c1))  WHEN IFNULL(t1.c0, t1.c0) THEN (((vt0.c0, v0.c0, v0.c2))<((v0.c1, t1.c0, v0.c2))) WHEN ((((((t1.c0)OR(vt0.c1)))OR(t1.c1)))AND(t1.c2)) THEN ((t1.c2)OR(v0.c2)) END))) ORDER BY v0.c0 DESC  NULLS FIRST, ((CASE t1.c0  WHEN t1.c2 THEN 0.918844271007416 END)<>(((t1.c1) IS TRUE))), CASE WHEN CASE WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 END THEN ((vt0.c0) IS TRUE) WHEN UPPER(DISTINCT t1.c1) THEN CAST(v0.c1 AS NUMERIC) WHEN ((v0.c0)-(vt0.c1)) THEN TRIM(v0.c1, v0.c2) ELSE ((v0.c1) IS TRUE) END ASC  NULLS FIRST, (((((((((((t1.c0, t1.c2))>((v0.c1, vt0.c0))))OR(TYPEOF(DISTINCT v0.c0))))AND(((((t1.c2)AND(vt0.c0)))AND(t1.c0)))))OR(((vt0.c0)>=(v0.c2)))))OR(vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM vt0, v0, t1 WHERE (CASE (NOT (vt0.c0))  WHEN '1572404649' COLLATE RTRIM THEN v0.c1 WHEN '-2000660482' THEN (v0.c2 IN (t1.c0)) WHEN CASE WHEN vt0.c0 THEN v0.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN vt0.c0 END THEN ((t1.c0)OR('-48124086')) END) ORDER BY (((((vt0.c1)IS(v0.c0)), LTRIM(t1.c1)))=((load_extension(t1.c1), CAST(v0.c1 AS NUMERIC)))) DESC  NULLS LAST, (((((t1.c2, t1.c0, vt0.c0))<((vt0.c1, v0.c0, t1.c2)))) ISNULL) DESC  NULLS FIRST, (((+ (t1.c2)))OR(((t1.c1)||(t1.c0)))) ASC  NULLS LAST;
SELECT ALL MAX(v0.c1) FROM v0 WHERE ((((((((((((((v0.c2)AND(v0.c2)))AND(v0.c2)))OR(0.7058822596342722)))AND(v0.c0)))AND(v0.c1))))>=((CASE WHEN x'' THEN v0.c1 WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END))));
SELECT MAX(v0.c1) FROM v0 WHERE ((((((((((((((((v0.c2)AND(v0.c2)))AND(v0.c2)))OR(0.7058822596342722)))AND(v0.c0)))AND(v0.c1))))==((CASE WHEN x'' THEN v0.c1 WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END))))AND(v0.c1)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON IFNULL(DISTINCT CASE WHEN t1.c2 THEN t1.c2 END, (('W<?ETm	}P')GLOB(t1.c0))) WHERE (((('FL')|(vt0.c1)) IN (((NULL)/(vt0.c0)), t1.c0))) ORDER BY ((SQLITE_SOURCE_ID()) NOTNULL) ASC;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t1 ON IFNULL(DISTINCT CASE WHEN t1.c2 THEN t1.c2 END, (('W<?ETm	}P')GLOB(t1.c0))) WHERE (((((('FL')|(vt0.c1)) IN (((NULL)/(vt0.c0)), t1.c0)))AND(((vt0.c0)LIKE(2071949021))))) ORDER BY ((SQLITE_SOURCE_ID()) NOTNULL) ASC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON IFNULL(DISTINCT CASE WHEN t1.c2 THEN t1.c2 END, (('W<?ETm	}P')GLOB(t1.c0))) WHERE (((('FL')|(vt0.c1)) IN (((NULL)/(vt0.c0)), t1.c0))) ORDER BY ((SQLITE_SOURCE_ID()) NOTNULL) ASC;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t1 ON IFNULL(DISTINCT CASE WHEN t1.c2 THEN t1.c2 END, (('W<?ETm	}P')GLOB(t1.c0))) WHERE (((((('FL')|(vt0.c1)) IN (((NULL)/(vt0.c0)), t1.c0)))AND(((vt0.c0)LIKE(2071949021))))) ORDER BY ((SQLITE_SOURCE_ID()) NOTNULL) ASC;
SELECT MIN(v0.c1) FROM v0, t1 WHERE ((((NOT (v0.c2)))>>(t1.c1 COLLATE RTRIM)));
SELECT ALL MIN(v0.c1) FROM v0, t1 WHERE ((((NOT (v0.c2)))>>(t1.c1 COLLATE RTRIM))) INTERSECT SELECT MIN(v0.c1) FROM v0, t1 WHERE ((((t1.c0)) NOT BETWEEN ((((((t1.c1)OR('FXh}i')))AND(v0.c1)))) AND ((UPPER(DISTINCT v0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN CASE WHEN 0.8697635989967913 THEN t1.c2 END THEN (x'' IN ()) WHEN 0xffffffffa9155026 THEN CAST(t1.c2 AS REAL) ELSE ((vt0.c1) NOTNULL) END WHERE (CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN t1.c1 COLLATE BINARY END) ORDER BY ((CASE WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END)*((vt0.c1 IN (t1.c1)))) ASC  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (t1.c1) AND (vt0.c0)))LIKE(((vt0.c1)%(t1.c0)))), UNLIKELY(x'7205') DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN CASE WHEN 0.8697635989967913 THEN t1.c2 END THEN (x'' IN ()) WHEN -1458221018 THEN CAST(t1.c2 AS REAL) ELSE ((vt0.c1) NOTNULL) END WHERE (CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN t1.c1 COLLATE BINARY END) ORDER BY ((CASE WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END)*((vt0.c1 IN (t1.c1)))) ASC  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (t1.c1) AND (vt0.c0)))LIKE(((vt0.c1)%(t1.c0)))), UNLIKELY(x'7205') DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1, v0 WHERE (IFNULL(((v0.c1)GLOB(v0.c1)), CAST(t1.c1 AS REAL)));
SELECT DISTINCT * FROM t1, v0 WHERE (((IFNULL(((v0.c1)GLOB(v0.c1)), CAST(t1.c1 AS REAL)))AND(t1.c1))) INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE ((((NOT (t1.c2))) ISNULL));
SELECT ALL * FROM t1, v0 WHERE (IFNULL(((v0.c1)GLOB(v0.c1)), CAST(t1.c1 AS REAL)));
SELECT DISTINCT * FROM t1, v0 WHERE (((IFNULL(((v0.c1)GLOB(v0.c1)), CAST(t1.c1 AS REAL)))AND(t1.c1))) INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE ((((NOT (t1.c2))) ISNULL));
SELECT ALL * FROM v0, t1 WHERE ((t1.c1 IN ()) COLLATE RTRIM) ORDER BY (((t1.c0 IN ()))LIKE(((((((((v0.c2)OR(v0.c0)))OR(v0.c0)))OR(v0.c2)))AND(v0.c1)))), t1.c0  NULLS FIRST, ((((((v0.c2)AND(0.2737086729906584)))OR(v0.c2)))<>(((v0.c2)AND(t1.c0))))  NULLS FIRST;
SELECT ALL * FROM v0, t1 WHERE ((((t1.c1 IN ()) COLLATE RTRIM)AND(((((((((v0.c2)OR(v0.c0)))AND(v0.c0)))OR(t1.c0)))>=((+ (v0.c2))))))) ORDER BY (((t1.c0 IN ()))LIKE(((((((((v0.c2)OR(v0.c0)))OR(v0.c0)))OR(v0.c2)))AND(v0.c1)))), t1.c0  NULLS FIRST, ((((((v0.c2)AND(0.2737086729906584)))OR(v0.c2)))!=(((v0.c2)AND(t1.c0))))  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM v0, t1 WHERE ((t1.c1 IN ()) COLLATE RTRIM) ORDER BY (((t1.c0 IN ()))LIKE(((((((((v0.c2)OR(v0.c0)))OR(v0.c0)))OR(v0.c2)))AND(v0.c1)))), t1.c0  NULLS FIRST, ((((((v0.c2)AND(0.2737086729906584)))OR(v0.c2)))<>(((v0.c2)AND(t1.c0))))  NULLS FIRST;
SELECT ALL * FROM v0, t1 WHERE ((((t1.c1 IN ()) COLLATE RTRIM)AND(((((((((v0.c2)OR(v0.c0)))AND(v0.c0)))OR(t1.c0)))>=((+ (v0.c2))))))) ORDER BY (((t1.c0 IN ()))LIKE(((((((((v0.c2)OR(v0.c0)))OR(v0.c0)))OR(v0.c2)))AND(v0.c1)))), t1.c0  NULLS FIRST, ((((((v0.c2)AND(0.2737086729906584)))OR(v0.c2)))!=(((v0.c2)AND(t1.c0))))  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM vt0, v0, t1 WHERE (x'');
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (x'') LIMIT 0x2;
SELECT ALL * FROM vt0, v0, t1 WHERE (x'');
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (x'') LIMIT 0x2;
SELECT ALL * FROM v0, vt0, t1 WHERE (CASE WHEN NULL THEN CAST(v0.c2 AS TEXT) END);
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (CASE WHEN NULL THEN CAST(v0.c2 AS TEXT) END) ORDER BY ((t1.c1 COLLATE NOCASE)IS(CAST(t1.c2 AS TEXT))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((v0.c0) IS TRUE)) ORDER BY ((t1.c1 COLLATE NOCASE)IS(CAST(t1.c2 AS TEXT))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM v0, vt0, t1 WHERE (CASE WHEN NULL THEN CAST(v0.c2 AS TEXT) END);
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (CASE WHEN NULL THEN CAST(v0.c2 AS TEXT) END) ORDER BY ((t1.c1 COLLATE NOCASE)IS(CAST(t1.c2 AS TEXT))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((v0.c0) IS TRUE)) ORDER BY ((t1.c1 COLLATE NOCASE)IS(CAST(t1.c2 AS TEXT))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM v0, vt0 WHERE ((+ (COALESCE(v0.c0, 0Xffffffffdde00b8d))));
SELECT ALL * FROM v0, vt0 WHERE ((+ (COALESCE(v0.c0, -572519539)))) INTERSECT SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN ((vt0.c1) IS TRUE) THEN json_object(x'', v0.c1, v0.c2, v0.c1) WHEN ((x'edcbdc') ISNULL) THEN x'df' WHEN (((v0.c1, v0.c1)) NOT BETWEEN ((v0.c0, v0.c2)) AND ((v0.c0, vt0.c1))) THEN CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN CAST(v0.c2 AS INTEGER) THEN NULL END);
SELECT * FROM v0, vt0 WHERE ((+ (COALESCE(v0.c0, 0Xffffffffdde00b8d))));
SELECT ALL * FROM v0, vt0 WHERE ((+ (COALESCE(v0.c0, -572519539)))) INTERSECT SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN ((vt0.c1) IS TRUE) THEN json_object(x'', v0.c1, v0.c2, v0.c1) WHEN ((x'edcbdc') ISNULL) THEN x'df' WHEN (((v0.c1, v0.c1)) NOT BETWEEN ((v0.c0, v0.c2)) AND ((v0.c0, vt0.c1))) THEN CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN CAST(v0.c2 AS INTEGER) THEN NULL END);
SELECT ALL MAX(v0.c2) FROM v0 WHERE (((v0.c1) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END) AND (((NULL)>=(v0.c0)))));
SELECT DISTINCT MAX(v0.c2) FROM v0 WHERE (((((v0.c1) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END) AND (((NULL)>=(v0.c0)))))AND(CASE WHEN ((v0.c1)LIKE(v0.c1)) THEN ((v0.c0)IS(0.48259572057042066)) WHEN ((v0.c1)+(v0.c0)) THEN ((v0.c0)/(v0.c0)) WHEN CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END THEN v0.c1 COLLATE NOCASE ELSE v0.c1 END)));
SELECT * FROM v0 WHERE (((((v0.c0)<<(v0.c1)))IS NOT(((v0.c2)<<(v0.c1)))));
SELECT * FROM v0 WHERE (((((((v0.c0)<<(v0.c1)))IS NOT(((v0.c2)<<(v0.c1)))))AND(CAST(0.6023002373012759 AS REAL)))) ORDER BY GLOB(((v0.c0) IS TRUE), ((v0.c0)>(v0.c2)))  NULLS FIRST, CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS REAL) INTERSECT SELECT ALL * FROM v0 WHERE ((((v0.c0, 1716943745)) BETWEEN ((CAST('1200319629' AS BLOB), v0.c2 COLLATE RTRIM)) AND ((((v0.c2)<<(v0.c1)), ((((v0.c1)OR(v0.c1)))AND('0.27797247289921023')))))) ORDER BY GLOB(((v0.c0) IS TRUE), ((v0.c0)>(v0.c2)))  NULLS FIRST, CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS REAL);
SELECT * FROM v0 WHERE (((((v0.c0)<<(v0.c1)))IS NOT(((v0.c2)<<(v0.c1)))));
SELECT * FROM v0 WHERE (((((((v0.c0)<<(v0.c1)))IS NOT(((v0.c2)<<(v0.c1)))))AND(CAST(0.6023002373012759 AS REAL)))) ORDER BY GLOB(((v0.c0) IS TRUE), ((v0.c0)>(v0.c2)))  NULLS FIRST, CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS REAL) INTERSECT SELECT ALL * FROM v0 WHERE ((((v0.c0, 1716943745)) BETWEEN ((CAST('1200319629' AS BLOB), v0.c2 COLLATE RTRIM)) AND ((((v0.c2)<<(v0.c1)), ((((v0.c1)OR(v0.c1)))AND('0.27797247289921023')))))) ORDER BY GLOB(((v0.c0) IS TRUE), ((v0.c0)>(v0.c2)))  NULLS FIRST, CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS REAL);
SELECT * FROM v0, vt0, t1 WHERE (((vt0.c1 COLLATE RTRIM)%(((t1.c2)<>(t1.c2)))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((vt0.c1 COLLATE RTRIM)%(((t1.c2)>(t1.c2))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((x'6a') NOTNULL))/(((v0.c1) BETWEEN (t1.c0) AND (v0.c0))))) LIMIT 0X0;
SELECT * FROM v0, vt0, t1 WHERE (((vt0.c1 COLLATE RTRIM)%(((t1.c2)<>(t1.c2)))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((vt0.c1 COLLATE RTRIM)%(((t1.c2)>(t1.c2))))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((x'6a') NOTNULL))/(((v0.c1) BETWEEN (t1.c0) AND (v0.c0))))) LIMIT 0X0;
SELECT ALL MAX(vt0.c1) FROM v0, vt0 WHERE ((~ (((v0.c1) NOTNULL))));
SELECT DISTINCT MAX(vt0.c1) FROM v0, vt0 WHERE ((((~ (((v0.c1) NOTNULL))))AND(CAST(vt0.c1 AS REAL)))) LIMIT 1 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM v0, vt0 WHERE (((+ (vt0.c1)) IN ())) LIMIT 1;
SELECT * FROM vt0, t1 WHERE (((~ (vt0.c1)) IN (t1.c0))) ORDER BY x'' ASC  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE (((((~ (vt0.c1)) IN (t1.c0)))AND(t1.c1))) ORDER BY x'' ASC  NULLS LAST INTERSECT SELECT * FROM vt0, t1 WHERE (vt0.c0) ORDER BY x'' ASC  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (((~ (vt0.c1)) IN (t1.c0))) ORDER BY x'' ASC  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE (((((~ (vt0.c1)) IN (t1.c0)))AND(t1.c1))) ORDER BY x'' ASC  NULLS LAST INTERSECT SELECT * FROM vt0, t1 WHERE (vt0.c0) ORDER BY x'' ASC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (LTRIM(v0.c1 COLLATE NOCASE));
SELECT DISTINCT * FROM v0, vt0 WHERE (LTRIM(v0.c1 COLLATE NOCASE)) LIMIT 2 INTERSECT SELECT DISTINCT * FROM v0, vt0 WHERE (((TRIM(DISTINCT vt0.c0)) BETWEEN ((0.9954121397115996 IN (vt0.c0))) AND ((NOT (v0.c1))))) LIMIT 2;
SELECT ALL * FROM v0, vt0 WHERE (LTRIM(v0.c1 COLLATE NOCASE));
SELECT DISTINCT * FROM v0, vt0 WHERE (LTRIM(v0.c1 COLLATE NOCASE)) LIMIT 2 INTERSECT SELECT DISTINCT * FROM v0, vt0 WHERE (((TRIM(DISTINCT vt0.c0)) BETWEEN ((0.9954121397115996 IN (vt0.c0))) AND ((NOT (v0.c1))))) LIMIT 2;
SELECT * FROM v0 WHERE ((~ (((v0.c2)==(v0.c1))))) ORDER BY ((CASE v0.c0  WHEN v0.c2 THEN 0.3534312647318425 WHEN 0.9289772747115149 THEN v0.c0 END) BETWEEN (((v0.c0)>=(v0.c0))) AND (((v0.c2) IS FALSE)))  NULLS LAST;
SELECT DISTINCT * FROM v0 WHERE ((~ (((v0.c2)==(v0.c1))))) ORDER BY v0.c1 ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM v0 WHERE (CASE (((v0.c1))<((v0.c1)))  WHEN v0.c0 COLLATE NOCASE THEN TRIM(DISTINCT v0.c1, v0.c2) WHEN (v0.c2 IN ()) THEN ((v0.c1) NOT NULL) WHEN (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) THEN ((((((v0.c1)AND(v0.c2)))OR(v0.c0)))OR(v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) ORDER BY v0.c1 ASC LIMIT 0x0;
SELECT * FROM v0 WHERE ((~ (((v0.c2)==(v0.c1))))) ORDER BY ((CASE v0.c0  WHEN v0.c2 THEN 0.3534312647318425 WHEN 0.9289772747115149 THEN v0.c0 END) BETWEEN (((v0.c0)>=(v0.c0))) AND (((v0.c2) IS FALSE)))  NULLS LAST;
SELECT DISTINCT * FROM v0 WHERE ((~ (((v0.c2)==(v0.c1))))) ORDER BY v0.c1 ASC LIMIT 0 INTERSECT SELECT DISTINCT * FROM v0 WHERE (CASE (((v0.c1))<((v0.c1)))  WHEN v0.c0 COLLATE NOCASE THEN TRIM(DISTINCT v0.c1, v0.c2) WHEN (v0.c2 IN ()) THEN ((v0.c1) NOT NULL) WHEN (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) THEN ((((((v0.c1)AND(v0.c2)))OR(v0.c0)))OR(v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) ORDER BY v0.c1 ASC LIMIT 0x0;
SELECT * FROM v0, vt0 WHERE (((((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))AND(v0.c0)))OR(v0.c2)) COLLATE NOCASE);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))AND(v0.c0)))OR(v0.c2)) COLLATE NOCASE)AND(CASE CASE WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN x'' END  WHEN (NOT (v0.c1)) THEN (v0.c0 IN ()) ELSE v0.c0 END))) LIMIT 1 INTERSECT SELECT * FROM v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)=(v0.c1))) LIMIT 1;
SELECT * FROM v0, vt0 WHERE (((((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))AND(v0.c0)))OR(v0.c2)) COLLATE NOCASE);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))AND(v0.c0)))OR(v0.c2)) COLLATE NOCASE)AND(CASE CASE WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN x'' END  WHEN (NOT (v0.c1)) THEN (v0.c0 IN ()) ELSE v0.c0 END))) LIMIT 1 INTERSECT SELECT * FROM v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)=(v0.c1))) LIMIT 1;
SELECT ALL MAX(v0.c0) FROM t1, v0 WHERE ((('躞3t') NOT BETWEEN (((t1.c2) NOT BETWEEN (v0.c1) AND (v0.c1))) AND (((v0.c0)GLOB(t1.c1))))) ORDER BY x'66f6', CASE WHEN NULLIF(v0.c2, t1.c0) THEN CASE WHEN v0.c1 THEN v0.c0 END END ASC, ((0.1474318409030484)<=(((NULL) NOTNULL))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(v0.c0) FROM t1, v0 WHERE ((((('躞3t') NOT BETWEEN (((t1.c2) NOT BETWEEN (v0.c1) AND (v0.c1))) AND (((v0.c0)GLOB(t1.c1)))))AND(CAST(((v0.c0) NOTNULL) AS REAL)))) ORDER BY x'66f6', CASE WHEN NULLIF(v0.c2, t1.c0) THEN CASE WHEN v0.c1 THEN v0.c0 END END ASC, ((0.1474318409030484)<=(((NULL) NOTNULL))) ASC  NULLS FIRST LIMIT 0X3;
SELECT * FROM vt0, t1 WHERE (((t1.c1)-((((vt0.c1)) NOT BETWEEN ((t1.c1)) AND ((0.21466078040942949)))))) ORDER BY t1.c1 DESC, NULL, ((x'')%(((((((((t1.c0)AND(t1.c1)))OR(vt0.c1)))AND(t1.c2)))OR(t1.c0))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((t1.c1)-((((vt0.c1)) NOT BETWEEN ((t1.c1)) AND ((0.21466078040942949)))))) ORDER BY t1.c1 DESC, NULL, ((x'')%(((((((((t1.c0)AND(t1.c1)))OR(vt0.c1)))AND(t1.c2)))OR(t1.c0)))) LIMIT 3;
SELECT * FROM vt0, t1 WHERE (((t1.c1)-((((vt0.c1)) NOT BETWEEN ((t1.c1)) AND ((0.21466078040942949)))))) ORDER BY t1.c1 DESC, NULL, ((x'')%(((((((((t1.c0)AND(t1.c1)))OR(vt0.c1)))AND(t1.c2)))OR(t1.c0))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((t1.c1)-((((vt0.c1)) NOT BETWEEN ((t1.c1)) AND ((0.21466078040942949)))))) ORDER BY t1.c1 DESC, NULL, ((x'')%(((((((((t1.c0)AND(t1.c1)))OR(vt0.c1)))AND(t1.c2)))OR(t1.c0)))) LIMIT 3;
SELECT ALL * FROM t1 WHERE ((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))) COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE ((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))) COLLATE BINARY) ORDER BY (~ (((t1.c0) BETWEEN (t1.c2) AND (0x411f71cb))))  NULLS LAST, CAST(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END AS INTEGER);
SELECT ALL * FROM t1 WHERE ((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))) COLLATE BINARY);
SELECT DISTINCT * FROM t1 WHERE ((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))) COLLATE BINARY) ORDER BY (~ (((t1.c0) BETWEEN (t1.c2) AND (0x411f71cb))))  NULLS LAST, CAST(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END AS INTEGER);
SELECT * FROM t1, vt0, v0 WHERE ((((t1.c1)>=(v0.c1)) IN ())) ORDER BY x'' ASC;
SELECT * FROM t1, vt0, v0 WHERE ((((t1.c1)>=(v0.c1)) IN ())) ORDER BY x'' ASC;
SELECT * FROM t1, vt0, v0 WHERE ((((t1.c1)>=(v0.c1)) IN ())) ORDER BY x'' ASC;
SELECT * FROM t1, vt0, v0 WHERE ((((t1.c1)>=(v0.c1)) IN ())) ORDER BY x'' ASC;
SELECT * FROM v0 WHERE (LIKELY(DISTINCT v0.c0)) ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE BINARY  NULLS FIRST, json_quote(v0.c1 COLLATE NOCASE) ASC;
SELECT * FROM v0 WHERE (LIKELY(DISTINCT v0.c0)) ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE BINARY  NULLS FIRST, json_quote(v0.c1 COLLATE NOCASE) ASC;
SELECT * FROM v0 WHERE (LIKELY(DISTINCT v0.c0)) ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE BINARY  NULLS FIRST, json_quote(v0.c1 COLLATE NOCASE) ASC;
SELECT * FROM v0 WHERE (LIKELY(DISTINCT v0.c0)) ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE BINARY  NULLS FIRST, json_quote(v0.c1 COLLATE NOCASE) ASC;
SELECT * FROM v0, t1 WHERE (((v0.c1 COLLATE RTRIM) BETWEEN (((((((((v0.c1)AND(t1.c2)))OR(t1.c0)))AND(t1.c2)))AND(t1.c1))) AND ((((x'')) NOT BETWEEN ((x'0093')) AND ((t1.c0))))));
SELECT DISTINCT * FROM v0, t1 WHERE (((v0.c1 COLLATE RTRIM) BETWEEN (((((((((v0.c1)AND(t1.c2)))OR(t1.c0)))AND(t1.c2)))AND(t1.c1))) AND ((((x'')) NOT BETWEEN ((x'0093')) AND ((t1.c0)))))) LIMIT 1;
SELECT * FROM v0, t1 WHERE (((v0.c1 COLLATE RTRIM) BETWEEN (((((((((v0.c1)AND(t1.c2)))OR(t1.c0)))AND(t1.c2)))AND(t1.c1))) AND ((((x'')) NOT BETWEEN ((x'0093')) AND ((t1.c0))))));
SELECT DISTINCT * FROM v0, t1 WHERE (((v0.c1 COLLATE RTRIM) BETWEEN (((((((((v0.c1)AND(t1.c2)))OR(t1.c0)))AND(t1.c2)))AND(t1.c1))) AND ((((x'')) NOT BETWEEN ((x'0093')) AND ((t1.c0)))))) LIMIT 1;
SELECT * FROM v0, vt0, t1 WHERE ((- (((v0.c2)<>(v0.c1)))));
SELECT * FROM v0 NOT INDEXED, vt0, t1 WHERE ((((- (((v0.c2)>(v0.c1)))))AND((((((((v0.c2, v0.c1, vt0.c1))>((t1.c0, t1.c0, v0.c1))))OR(NULLIF(DISTINCT t1.c1, v0.c2))))AND((t1.c0 IN ())))))) INTERSECT SELECT * FROM v0, vt0, t1 WHERE (((LIKELIHOOD(DISTINCT v0.c2, v0.c2))OR((((t1.c1, t1.c2, v0.c0)) BETWEEN ((v0.c2, vt0.c0, vt0.c0)) AND ((t1.c0, t1.c0, v0.c1))))));
SELECT * FROM v0, vt0, t1 WHERE ((- (((v0.c2)<>(v0.c1)))));
SELECT * FROM v0 NOT INDEXED, vt0, t1 WHERE ((((- (((v0.c2)>(v0.c1)))))AND((((((((v0.c2, v0.c1, vt0.c1))>((t1.c0, t1.c0, v0.c1))))OR(NULLIF(DISTINCT t1.c1, v0.c2))))AND((t1.c0 IN ())))))) INTERSECT SELECT * FROM v0, vt0, t1 WHERE (((LIKELIHOOD(DISTINCT v0.c2, v0.c2))OR((((t1.c1, t1.c2, v0.c0)) BETWEEN ((v0.c2, vt0.c0, vt0.c0)) AND ((t1.c0, t1.c0, v0.c1))))));
SELECT * FROM t1, v0, vt0 WHERE (((((t1.c1)OR(json_patch(v0.c2, vt0.c0))))OR((- (vt0.c0))))) ORDER BY ((JULIANDAY(v0.c2, v0.c0, vt0.c0, vt0.c0))LIKE(v0.c0 COLLATE RTRIM)) DESC, vt0.c1 ASC  NULLS LAST;
SELECT * FROM t1, v0, vt0 WHERE (((((((t1.c1)OR(json_patch(v0.c2, vt0.c0))))OR((- (vt0.c0)))))AND(((CAST(v0.c2 AS NUMERIC)) NOT BETWEEN (((vt0.c0)OR(vt0.c1))) AND (((((((((t1.c0)AND(t1.c0)))AND(v0.c1)))OR('2146548914')))AND(t1.c1))))))) ORDER BY ((JULIANDAY(v0.c2, v0.c0, vt0.c0, vt0.c0))LIKE(v0.c0 COLLATE RTRIM)) DESC, vt0.c1 ASC  NULLS LAST LIMIT 0X0;
SELECT * FROM t1, v0, vt0 WHERE (((((t1.c1)OR(json_patch(v0.c2, vt0.c0))))OR((- (vt0.c0))))) ORDER BY ((JULIANDAY(v0.c2, v0.c0, vt0.c0, vt0.c0))LIKE(v0.c0 COLLATE RTRIM)) DESC, vt0.c1 ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c2)))OR(CAST(t1.c1 AS BLOB))))AND((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))))));
SELECT ALL * FROM t1 WHERE (((((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c2)))OR(CAST(t1.c1 AS BLOB))))AND((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))))))AND(((((t1.c1)<(t1.c2)))>(((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0))))))) ORDER BY ((t1.c1)<(t1.c2 COLLATE NOCASE)) DESC;
SELECT * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c2)))OR(CAST(t1.c1 AS BLOB))))AND((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))))));
SELECT ALL * FROM t1 WHERE (((((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c2)))OR(CAST(t1.c1 AS BLOB))))AND((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))))))AND(((((t1.c1)<(t1.c2)))>(((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0))))))) ORDER BY ((t1.c1)<(t1.c2 COLLATE NOCASE)) DESC;
SELECT * FROM vt0 WHERE (((vt0.c0)>=(((vt0.c0)>(vt0.c1))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (vt0.c1)))))AND(vt0.c1)) ASC  NULLS FIRST, CAST((((vt0.c0, NULL)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1))) AS INTEGER);
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)>(((vt0.c0)>(vt0.c1)))))AND(CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c1)==(-1.393225757E9)) WHEN CAST(vt0.c1 AS TEXT) THEN ((NULL)+(vt0.c1)) END))) ORDER BY ((vt0.c0 IN (vt0.c0)) IN (((vt0.c1)*(vt0.c1)))) DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (LTRIM(vt0.c1, '-1820995746')) ORDER BY ((vt0.c0 IN (vt0.c0)) IN (((vt0.c1)*(vt0.c1)))) DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM vt0 WHERE (((vt0.c0)>=(((vt0.c0)>(vt0.c1))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (vt0.c1)))))AND(vt0.c1)) ASC  NULLS FIRST, CAST((((vt0.c0, NULL)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1))) AS INTEGER);
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)>(((vt0.c0)>(vt0.c1)))))AND(CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c1)==(-1.393225757E9)) WHEN CAST(vt0.c1 AS TEXT) THEN ((NULL)+(vt0.c1)) END))) ORDER BY ((vt0.c0 IN (vt0.c0)) IN (((vt0.c1)*(vt0.c1)))) DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (LTRIM(vt0.c1, '-1820995746')) ORDER BY ((vt0.c0 IN (vt0.c0)) IN (((vt0.c1)*(vt0.c1)))) DESC  NULLS LAST LIMIT 0X0;
SELECT MIN(v0.c0) FROM v0, t1, vt0 WHERE (((NULL COLLATE NOCASE) NOT NULL)) ORDER BY json_valid('i%38'), ((t1.c0) ISNULL)  NULLS FIRST;
SELECT DISTINCT MIN(v0.c0) FROM v0, t1, vt0 WHERE (((NULL COLLATE NOCASE) NOT NULL)) ORDER BY json_valid('i%38'), ((t1.c0) ISNULL)  NULLS FIRST LIMIT 1;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((((((t1.c2)OR(t1.c0)))OR(t1.c1)))OR(vt0.c0)) IN (((t1.c2) NOT NULL))));
SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE ((((((((t1.c2)OR(t1.c0)))OR(t1.c1)))OR(vt0.c0)) IN (((t1.c2) NOT NULL)))) ORDER BY (t1.c0 IN (((vt0.c0)-(0.8629186318740595)), ((t1.c2) NOT NULL))) DESC  NULLS LAST, ((((((t1.c2)AND(vt0.c1)))AND(t1.c2)))AND(vt0.c1)) COLLATE BINARY  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE ((((((((((t1.c2 IN (t1.c0)))AND(1736353746)))AND(((t1.c1) ISNULL))))AND(((t1.c2)=(vt0.c0)))))AND(((vt0.c0)IS NOT(vt0.c1))))) ORDER BY (t1.c0 IN (((vt0.c0)-(0.8629186318740595)), ((t1.c2) NOT NULL))) DESC  NULLS LAST, ((((((t1.c2)AND(vt0.c1)))AND(t1.c2)))AND(vt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((+ (TRIM(DISTINCT t1.c1, t1.c0))));
SELECT DISTINCT * FROM t1 WHERE ((((+ (TRIM(DISTINCT t1.c1, t1.c0))))AND(NULL)));
SELECT ALL * FROM t1 WHERE ((+ (TRIM(DISTINCT t1.c1, t1.c0))));
SELECT DISTINCT * FROM t1 WHERE ((((+ (TRIM(DISTINCT t1.c1, t1.c0))))AND(NULL)));
SELECT MAX(v0.c1) FROM vt0, t1 NATURAL JOIN v0 WHERE (((t1.c2)/(t1.c0)) COLLATE NOCASE);
SELECT DISTINCT MAX(v0.c1) FROM vt0, t1 NATURAL JOIN v0 WHERE (((((t1.c2)/(t1.c0)) COLLATE NOCASE)AND(v0.c2))) LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(v0.c1) FROM vt0, t1 NATURAL JOIN v0 WHERE ((~ (json_extract(t1.c0, NULL, NULL)))) LIMIT 0X1;
SELECT ALL COUNT(*) FROM t1 WHERE (COALESCE(((((t1.c0)OR(t1.c1)))OR(t1.c0)), t1.c2, (- (t1.c0)), (- (t1.c1)), ((t1.c1)IS(t1.c0))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (COALESCE(((((t1.c0)OR(t1.c1)))OR(t1.c0)), t1.c2, (- (t1.c0)), (- (t1.c1)), ((t1.c1)IS(t1.c0))));
SELECT ALL * FROM vt0, v0, t1 WHERE ((((t1.c1)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((TYPEOF(v0.c1)))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((((t1.c1)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((TYPEOF(v0.c1)))))AND(((((((v0.c1)OR(vt0.c1)))AND(v0.c2))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CAST(vt0.c1 AS TEXT)))))) ORDER BY (+ (((t1.c0)%(vt0.c0)))) DESC  NULLS FIRST, (((t1.c2)) NOT BETWEEN ((vt0.c0)) AND ((((t1.c0) NOT NULL)))) LIMIT 0X0;
SELECT ALL * FROM vt0, v0, t1 WHERE ((((t1.c1)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((TYPEOF(v0.c1)))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((((t1.c1)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((TYPEOF(v0.c1)))))AND(((((((v0.c1)OR(vt0.c1)))AND(v0.c2))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CAST(vt0.c1 AS TEXT)))))) ORDER BY (+ (((t1.c0)%(vt0.c0)))) DESC  NULLS FIRST, (((t1.c2)) NOT BETWEEN ((vt0.c0)) AND ((((t1.c0) NOT NULL)))) LIMIT 0X0;
SELECT * FROM t1, v0, vt0 WHERE ((CASE v0.c1  WHEN t1.c2 THEN v0.c2 ELSE t1.c1 END IN ()));
SELECT ALL * FROM t1, v0, vt0 WHERE ((CASE v0.c1  WHEN t1.c2 THEN v0.c2 ELSE t1.c1 END IN ())) LIMIT 0 INTERSECT SELECT ALL * FROM t1, v0, vt0 WHERE (((vt0.c1 COLLATE BINARY) ISNULL)) LIMIT 0;
SELECT * FROM t1, v0, vt0 WHERE ((CASE v0.c1  WHEN t1.c2 THEN v0.c2 ELSE t1.c1 END IN ()));
SELECT ALL * FROM t1, v0, vt0 WHERE ((CASE v0.c1  WHEN t1.c2 THEN v0.c2 ELSE t1.c1 END IN ())) LIMIT 0 INTERSECT SELECT ALL * FROM t1, v0, vt0 WHERE (((vt0.c1 COLLATE BINARY) ISNULL)) LIMIT 0;
SELECT ALL * FROM vt0, v0, t1 WHERE (CAST(CAST(t1.c0 AS TEXT) AS NUMERIC)) ORDER BY (+ (((((((v0.c0)OR(v0.c0)))OR(t1.c0)))OR(v0.c1))))  NULLS FIRST;
SELECT * FROM vt0, v0, t1 WHERE (CAST(CAST(t1.c0 AS TEXT) AS NUMERIC)) ORDER BY (+ (((((((v0.c0)OR(v0.c0)))OR(t1.c0)))OR(v0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0, v0, t1 WHERE (CAST(CAST(t1.c0 AS TEXT) AS NUMERIC)) ORDER BY (+ (((((((v0.c0)OR(v0.c0)))OR(t1.c0)))OR(v0.c1))))  NULLS FIRST;
SELECT * FROM vt0, v0, t1 WHERE (CAST(CAST(t1.c0 AS TEXT) AS NUMERIC)) ORDER BY (+ (((((((v0.c0)OR(v0.c0)))OR(t1.c0)))OR(v0.c1))))  NULLS FIRST;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE)AND(((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE ((((((vt0.c1))!=((x'f9b64b68'))))|(0X737831ce))) LIMIT 0x0;
SELECT ALL * FROM v0 WHERE (((((v0.c1)/(v0.c1))) NOT BETWEEN ((NOT (v0.c0))) AND (v0.c1 COLLATE BINARY))) ORDER BY ((((v0.c0)IS NOT(v0.c2)))>>((((v0.c2, v0.c2))=((v0.c2, v0.c1))))) DESC, ((((((((((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))AND(v0.c0)))OR(((v0.c0)<<(x'af072196f8')))))OR(((v0.c1) ISNULL))))AND((+ (v0.c0)))))OR(((v0.c1)||(v0.c0)))), (((CASE NULL  WHEN v0.c2 THEN v0.c2 ELSE NULL END, CAST(v0.c2 AS TEXT)))<((((v0.c1)IS NOT(v0.c2)), CASE WHEN '([gpH5m' THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END))) DESC;
SELECT * FROM v0 WHERE (((((v0.c1)/(v0.c1))) NOT BETWEEN ((NOT (v0.c0))) AND (v0.c1 COLLATE BINARY))) ORDER BY ((((v0.c0)IS NOT(v0.c2)))>>((((v0.c2, v0.c2))==((v0.c2, v0.c1))))) DESC, ((((((((((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))AND(v0.c0)))OR(((v0.c0)<<(x'af072196f8')))))OR(((v0.c1) ISNULL))))AND((+ (v0.c0)))))OR(((v0.c1)||(v0.c0)))), (((CASE NULL  WHEN v0.c2 THEN v0.c2 ELSE NULL END, CAST(v0.c2 AS TEXT)))<((((v0.c1)IS NOT(v0.c2)), CASE WHEN '([gpH5m' THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END))) DESC LIMIT 3 INTERSECT SELECT ALL * FROM v0 NOT INDEXED WHERE ((((((('7')OR((((0xffffffffbbf22314, 'E[6箫*K'))>((v0.c2, v0.c0))))))OR((x'' IN (v0.c2, NULL)))))OR(((((v0.c0)AND(v0.c2)))AND(v0.c0))))) ORDER BY ((((v0.c0)IS NOT(v0.c2)))>>((((v0.c2, v0.c2))=((v0.c2, v0.c1))))) DESC, ((((((((((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))AND(v0.c0)))OR(((v0.c0)<<(x'af072196f8')))))OR(((v0.c1) ISNULL))))AND((+ (v0.c0)))))OR(((v0.c1)||(v0.c0)))), (((CASE NULL  WHEN v0.c2 THEN v0.c2 ELSE NULL END, CAST(v0.c2 AS TEXT)))<((((v0.c1)IS NOT(v0.c2)), CASE WHEN '([gpH5m' THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END))) DESC LIMIT 0x3;
SELECT ALL * FROM v0 WHERE (((((v0.c1)/(v0.c1))) NOT BETWEEN ((NOT (v0.c0))) AND (v0.c1 COLLATE BINARY))) ORDER BY ((((v0.c0)IS NOT(v0.c2)))>>((((v0.c2, v0.c2))=((v0.c2, v0.c1))))) DESC, ((((((((((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))AND(v0.c0)))OR(((v0.c0)<<(x'af072196f8')))))OR(((v0.c1) ISNULL))))AND((+ (v0.c0)))))OR(((v0.c1)||(v0.c0)))), (((CASE NULL  WHEN v0.c2 THEN v0.c2 ELSE NULL END, CAST(v0.c2 AS TEXT)))<((((v0.c1)IS NOT(v0.c2)), CASE WHEN '([gpH5m' THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END))) DESC;
SELECT * FROM v0 WHERE (((((v0.c1)/(v0.c1))) NOT BETWEEN ((NOT (v0.c0))) AND (v0.c1 COLLATE BINARY))) ORDER BY ((((v0.c0)IS NOT(v0.c2)))>>((((v0.c2, v0.c2))==((v0.c2, v0.c1))))) DESC, ((((((((((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))AND(v0.c0)))OR(((v0.c0)<<(x'af072196f8')))))OR(((v0.c1) ISNULL))))AND((+ (v0.c0)))))OR(((v0.c1)||(v0.c0)))), (((CASE NULL  WHEN v0.c2 THEN v0.c2 ELSE NULL END, CAST(v0.c2 AS TEXT)))<((((v0.c1)IS NOT(v0.c2)), CASE WHEN '([gpH5m' THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END))) DESC LIMIT 3 INTERSECT SELECT ALL * FROM v0 NOT INDEXED WHERE ((((((('7')OR((((0xffffffffbbf22314, 'E[6箫*K'))>((v0.c2, v0.c0))))))OR((x'' IN (v0.c2, NULL)))))OR(((((v0.c0)AND(v0.c2)))AND(v0.c0))))) ORDER BY ((((v0.c0)IS NOT(v0.c2)))>>((((v0.c2, v0.c2))=((v0.c2, v0.c1))))) DESC, ((((((((((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))AND(v0.c0)))OR(((v0.c0)<<(x'af072196f8')))))OR(((v0.c1) ISNULL))))AND((+ (v0.c0)))))OR(((v0.c1)||(v0.c0)))), (((CASE NULL  WHEN v0.c2 THEN v0.c2 ELSE NULL END, CAST(v0.c2 AS TEXT)))<((((v0.c1)IS NOT(v0.c2)), CASE WHEN '([gpH5m' THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END))) DESC LIMIT 0x3;
SELECT COUNT(*) FROM v0 WHERE (v0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1)AND(((((v0.c2)-(v0.c2)))<=(v0.c0 COLLATE RTRIM))))) ORDER BY (((CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END, (((v0.c1, v0.c1, 0.6781964238847266, NULL))<=((v0.c1, v0.c2, v0.c2, v0.c1))), x''))<=(((0.5703084115030977 IN (v0.c2)), COALESCE(DISTINCT v0.c0, v0.c1, v0.c0), (((v0.c0, v0.c1)) BETWEEN ((v0.c2, v0.c0)) AND ((v0.c1, 2012129984))))))  NULLS FIRST LIMIT 0x3 INTERSECT SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((((v0.c0)IS(v0.c0)))) AND ((v0.c1 COLLATE NOCASE)))) ORDER BY (((CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END, (((v0.c1, v0.c1, 0.6781964238847266, NULL))<=((v0.c1, v0.c2, v0.c2, v0.c1))), x''))<=(((0.5703084115030977 IN (v0.c2)), COALESCE(DISTINCT v0.c0, v0.c1, v0.c0), (((v0.c0, v0.c1)) BETWEEN ((v0.c2, v0.c0)) AND ((v0.c1, 0X77eeaac0))))))  NULLS FIRST LIMIT 0x3;
SELECT ALL * FROM vt0, v0, t1 WHERE (((x'a1')!=(((vt0.c0)%(t1.c0)))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((x'a1')<>(((vt0.c0)%(t1.c0)))))AND(HEX(CASE t1.c2  WHEN v0.c1 THEN v0.c1 WHEN t1.c2 THEN vt0.c0 ELSE x'' END)))) ORDER BY ((((- (v0.c1))))<=(((vt0.c0 IN ('-712405234'))))) DESC  NULLS FIRST, 'H'  NULLS LAST, HEX(((v0.c1) IS TRUE))  NULLS LAST;
SELECT ALL * FROM vt0, v0, t1 WHERE (((x'a1')!=(((vt0.c0)%(t1.c0)))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((x'a1')<>(((vt0.c0)%(t1.c0)))))AND(HEX(CASE t1.c2  WHEN v0.c1 THEN v0.c1 WHEN t1.c2 THEN vt0.c0 ELSE x'' END)))) ORDER BY ((((- (v0.c1))))<=(((vt0.c0 IN ('-712405234'))))) DESC  NULLS FIRST, 'H'  NULLS LAST, HEX(((v0.c1) IS TRUE))  NULLS LAST;
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE ((NOT ((((vt0.c1))>=((vt0.c0))))));
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE ((NOT ((((vt0.c1))>=((vt0.c0)))))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE ((NOT ((((vt0.c1))>=((vt0.c0))))));
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE ((NOT ((((vt0.c1))>=((vt0.c0)))))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c2)IS(0.445386604260368)))AND(CAST(t1.c0 AS REAL))))AND((NOT (t1.c2)))))AND(t1.c2 COLLATE RTRIM)))AND(((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY ((INSTR(t1.c0, t1.c1)) BETWEEN ((+ (t1.c0))) AND ((((t1.c1, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c2, x'')) AND ((NULL, t1.c0, t1.c2)))));
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c2)IS(0.445386604260368)))AND(CAST(t1.c0 AS REAL))))AND((NOT (t1.c2)))))AND(t1.c2 COLLATE RTRIM)))AND(((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(t1.c2))) ORDER BY ((INSTR(t1.c0, t1.c1)) BETWEEN ((+ (t1.c0))) AND ((((t1.c1, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c2, x'')) AND ((NULL, t1.c0, t1.c2))))) INTERSECT SELECT * FROM t1 WHERE ((((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN x'39243d' WHEN 0.22053723301792338 THEN t1.c0 ELSE NULL END, TYPEOF(t1.c0), t1.c1))>((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0)), HEX(t1.c0), t1.c2 COLLATE NOCASE)))) ORDER BY ((INSTR(t1.c0, t1.c1)) BETWEEN ((+ (t1.c0))) AND ((((t1.c1, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c2, x'')) AND ((NULL, t1.c0, t1.c2)))));
SELECT ALL * FROM t1 WHERE (((((((((((t1.c2)IS(0.445386604260368)))AND(CAST(t1.c0 AS REAL))))AND((NOT (t1.c2)))))AND(t1.c2 COLLATE RTRIM)))AND(((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY ((INSTR(t1.c0, t1.c1)) BETWEEN ((+ (t1.c0))) AND ((((t1.c1, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c2, x'')) AND ((NULL, t1.c0, t1.c2)))));
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c2)IS(0.445386604260368)))AND(CAST(t1.c0 AS REAL))))AND((NOT (t1.c2)))))AND(t1.c2 COLLATE RTRIM)))AND(((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(t1.c2))) ORDER BY ((INSTR(t1.c0, t1.c1)) BETWEEN ((+ (t1.c0))) AND ((((t1.c1, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c2, x'')) AND ((NULL, t1.c0, t1.c2))))) INTERSECT SELECT * FROM t1 WHERE ((((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN x'39243d' WHEN 0.22053723301792338 THEN t1.c0 ELSE NULL END, TYPEOF(t1.c0), t1.c1))>((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0)), HEX(t1.c0), t1.c2 COLLATE NOCASE)))) ORDER BY ((INSTR(t1.c0, t1.c1)) BETWEEN ((+ (t1.c0))) AND ((((t1.c1, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c2, x'')) AND ((NULL, t1.c0, t1.c2)))));
SELECT * FROM vt0, t1 WHERE (vt0.c1);
SELECT * FROM vt0, t1 WHERE (vt0.c1) LIMIT 2;
SELECT * FROM vt0, t1 WHERE (vt0.c1);
SELECT * FROM vt0, t1 WHERE (vt0.c1) LIMIT 2;
SELECT ALL * FROM v0, t1, vt0 WHERE (((((((((v0.c2) IS FALSE))OR(v0.c2)))OR(((v0.c1)<(vt0.c0)))))OR(((vt0.c1)<=(vt0.c1)))));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((((((((v0.c2) IS FALSE))OR(v0.c2)))OR(((v0.c1)<(vt0.c0)))))OR(((vt0.c1)<=(vt0.c1)))))AND(CAST((((v0.c0, v0.c0, NULL)) NOT BETWEEN ((vt0.c0, v0.c1, vt0.c0)) AND ((v0.c2, '脏~', vt0.c1))) AS REAL)))) LIMIT 0x1;
SELECT ALL * FROM v0, t1, vt0 WHERE (((((((((v0.c2) IS FALSE))OR(v0.c2)))OR(((v0.c1)<(vt0.c0)))))OR(((vt0.c1)<=(vt0.c1)))));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((((((((v0.c2) IS FALSE))OR(v0.c2)))OR(((v0.c1)<(vt0.c0)))))OR(((vt0.c1)<=(vt0.c1)))))AND(CAST((((v0.c0, v0.c0, NULL)) NOT BETWEEN ((vt0.c0, v0.c1, vt0.c0)) AND ((v0.c2, '脏~', vt0.c1))) AS REAL)))) LIMIT 0x1;
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (LTRIM(CASE WHEN vt0.c0 THEN t1.c1 WHEN t1.c1 THEN 0.5164509070111961 WHEN t1.c1 THEN t1.c0 WHEN NULL THEN t1.c2 WHEN t1.c2 THEN vt0.c0 END)) ORDER BY (('603500227') NOT NULL)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM v0, t1, vt0 WHERE (LTRIM(CASE WHEN vt0.c0 THEN t1.c1 WHEN t1.c1 THEN 0.5164509070111961 WHEN t1.c1 THEN t1.c0 WHEN NULL THEN t1.c2 WHEN t1.c2 THEN vt0.c0 END)) ORDER BY (('603500227') NOT NULL)  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY ((((0.9964285435093524)AND(NULL)))AND(vt0.c0))  NULLS LAST, ((((vt0.c0) NOT NULL)) IS FALSE) DESC  NULLS LAST;
SELECT MIN(vt0.c1) FROM vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY ((((0.9964285435093524)AND(NULL)))AND(vt0.c0))  NULLS LAST, ((((vt0.c0) NOT NULL)) IS FALSE) DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((vt0.c1)!=(303808265 COLLATE NOCASE))) ORDER BY ((((0.9964285435093524)AND(NULL)))AND(vt0.c0))  NULLS LAST, ((((vt0.c0) NOT NULL)) IS FALSE) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1, v0 WHERE ((+ (CAST(v0.c1 AS INTEGER))));
SELECT DISTINCT * FROM t1, v0 WHERE ((((+ (CAST(v0.c1 AS INTEGER))))AND((CASE WHEN t1.c0 THEN v0.c1 END IN ((((v0.c0, v0.c2, t1.c0)) NOT BETWEEN ((-2.079834761E9, v0.c2, t1.c0)) AND ((v0.c1, t1.c0, v0.c2)))))))) ORDER BY CAST(v0.c2 AS REAL) COLLATE BINARY, CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((v0.c1)AND(v0.c2)))OR(t1.c0)) END DESC  NULLS LAST, ((NULL) NOTNULL) ASC INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (((((((((((v0.c0)|(v0.c2)))OR(((t1.c2)<<(t1.c2)))))AND('0.559032630005835')))AND(((t1.c1)>>(v0.c0)))))AND(CASE WHEN t1.c1 THEN v0.c0 WHEN t1.c0 THEN v0.c0 END))) ORDER BY CAST(v0.c2 AS REAL) COLLATE BINARY, CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((v0.c1)AND(v0.c2)))OR(t1.c0)) END DESC  NULLS LAST, ((NULL) NOTNULL) ASC;
SELECT ALL * FROM t1, v0 WHERE ((+ (CAST(v0.c1 AS INTEGER))));
SELECT DISTINCT * FROM t1, v0 WHERE ((((+ (CAST(v0.c1 AS INTEGER))))AND((CASE WHEN t1.c0 THEN v0.c1 END IN ((((v0.c0, v0.c2, t1.c0)) NOT BETWEEN ((-2.079834761E9, v0.c2, t1.c0)) AND ((v0.c1, t1.c0, v0.c2)))))))) ORDER BY CAST(v0.c2 AS REAL) COLLATE BINARY, CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((v0.c1)AND(v0.c2)))OR(t1.c0)) END DESC  NULLS LAST, ((NULL) NOTNULL) ASC INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (((((((((((v0.c0)|(v0.c2)))OR(((t1.c2)<<(t1.c2)))))AND('0.559032630005835')))AND(((t1.c1)>>(v0.c0)))))AND(CASE WHEN t1.c1 THEN v0.c0 WHEN t1.c0 THEN v0.c0 END))) ORDER BY CAST(v0.c2 AS REAL) COLLATE BINARY, CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((v0.c1)AND(v0.c2)))OR(t1.c0)) END DESC  NULLS LAST, ((NULL) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM v0, t1 CROSS JOIN vt0 ON TRIM(DISTINCT v0.c0, t1.c2) COLLATE NOCASE WHERE (((((((v0.c1) IS FALSE))OR(((t1.c2)%(vt0.c1)))))AND((+ (vt0.c0))))) ORDER BY ((CAST(v0.c0 AS TEXT))>=(TRIM(DISTINCT t1.c2, t1.c1))) DESC  NULLS FIRST, ((((vt0.c1) ISNULL))||(CASE '称?{b땜u'  WHEN t1.c1 THEN vt0.c1 WHEN t1.c0 THEN t1.c2 WHEN t1.c1 THEN v0.c2 WHEN t1.c2 THEN v0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST, (((vt0.c1 IN (v0.c2, v0.c2))) ISNULL);
SELECT ALL COUNT(*) FROM v0, t1 CROSS JOIN vt0 ON TRIM(DISTINCT v0.c0, t1.c2) COLLATE NOCASE WHERE (((((((((v0.c1) IS FALSE))OR(((t1.c2)%(vt0.c1)))))AND((+ (vt0.c0)))))AND((((v0.c1, vt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END, IFNULL(DISTINCT x'20', t1.c1))) AND ((((v0.c0)!=(NULL)), ((t1.c0) NOT BETWEEN (v0.c1) AND (t1.c2)))))))) ORDER BY ((CAST(v0.c0 AS TEXT))>=(TRIM(DISTINCT t1.c2, t1.c1))) DESC  NULLS FIRST, ((((vt0.c1) ISNULL))||(CASE '称?{b땜u'  WHEN t1.c1 THEN vt0.c1 WHEN t1.c0 THEN t1.c2 WHEN t1.c1 THEN v0.c2 WHEN t1.c2 THEN v0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST, (((vt0.c1 IN (v0.c2, v0.c2))) ISNULL) LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM v0, t1 CROSS JOIN vt0 ON TRIM(DISTINCT v0.c0, t1.c2) COLLATE NOCASE WHERE (CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN IFNULL(DISTINCT vt0.c0, v0.c0) END) ORDER BY ((CAST(v0.c0 AS TEXT))>=(TRIM(DISTINCT t1.c2, t1.c1))) DESC  NULLS FIRST, ((((vt0.c1) ISNULL))||(CASE '称?{b땜u'  WHEN t1.c1 THEN vt0.c1 WHEN t1.c0 THEN t1.c2 WHEN t1.c1 THEN v0.c2 WHEN t1.c2 THEN v0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST, (((vt0.c1 IN (v0.c2, v0.c2))) ISNULL) LIMIT 0X0;
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0)>=(v0.c0)) THEN (~ (v0.c2)) WHEN (vt0.c0 IN ()) THEN CASE v0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c1) IS FALSE) THEN CASE WHEN v0.c2 THEN vt0.c0 END ELSE ((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)) END) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (HEX(DISTINCT v0.c2))), (~ (((v0.c2) BETWEEN (v0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0)>=(v0.c0)) THEN (~ (v0.c2)) WHEN (vt0.c0 IN ()) THEN CASE v0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c1) IS FALSE) THEN CASE WHEN v0.c2 THEN vt0.c0 END ELSE ((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)) END) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (HEX(DISTINCT v0.c2))), (~ (((v0.c2) BETWEEN (v0.c1) AND (vt0.c1))))  NULLS LAST LIMIT 0x4 INTERSECT SELECT * FROM v0, vt0 WHERE (UNLIKELY(DISTINCT CASE v0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN x'b9e1' THEN v0.c0 END)) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (HEX(DISTINCT v0.c2))), (~ (((v0.c2) BETWEEN (v0.c1) AND (vt0.c1))))  NULLS LAST LIMIT 4;
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0)>=(v0.c0)) THEN (~ (v0.c2)) WHEN (vt0.c0 IN ()) THEN CASE v0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c1) IS FALSE) THEN CASE WHEN v0.c2 THEN vt0.c0 END ELSE ((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)) END) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (HEX(DISTINCT v0.c2))), (~ (((v0.c2) BETWEEN (v0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0)>=(v0.c0)) THEN (~ (v0.c2)) WHEN (vt0.c0 IN ()) THEN CASE v0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c1) IS FALSE) THEN CASE WHEN v0.c2 THEN vt0.c0 END ELSE ((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)) END) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (HEX(DISTINCT v0.c2))), (~ (((v0.c2) BETWEEN (v0.c1) AND (vt0.c1))))  NULLS LAST LIMIT 0x4 INTERSECT SELECT * FROM v0, vt0 WHERE (UNLIKELY(DISTINCT CASE v0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN x'b9e1' THEN v0.c0 END)) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (HEX(DISTINCT v0.c2))), (~ (((v0.c2) BETWEEN (v0.c1) AND (vt0.c1))))  NULLS LAST LIMIT 4;
SELECT MAX(vt0.c0) FROM vt0, v0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c1 ELSE NULL END) ISNULL));
SELECT MAX(vt0.c0) FROM vt0, v0 WHERE (((((CASE v0.c0  WHEN v0.c2 THEN v0.c1 ELSE NULL END) ISNULL))AND(((CASE vt0.c0  WHEN NULL THEN vt0.c1 END) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c1)))))));
SELECT ALL * FROM t1, v0 WHERE (CASE t1.c0 COLLATE BINARY  WHEN CAST(x'768921403a64' AS NUMERIC) THEN ((v0.c0)<=(v0.c0)) WHEN t1.c0 COLLATE RTRIM THEN t1.c0 COLLATE BINARY WHEN ((t1.c2)>(v0.c0)) THEN (- (v0.c1)) WHEN CASE t1.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END THEN (((NULL))>=((v0.c1))) ELSE rtreenode(t1.c1, v0.c0) END);
SELECT * FROM t1, v0 WHERE (CASE t1.c0 COLLATE BINARY  WHEN CAST(x'768921403a64' AS NUMERIC) THEN ((v0.c0)<(v0.c0)) WHEN t1.c0 COLLATE RTRIM THEN t1.c0 COLLATE BINARY WHEN ((t1.c2)>(v0.c0)) THEN (- (v0.c1)) WHEN CASE t1.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END THEN (((NULL))>((v0.c1))) ELSE rtreenode(t1.c1, v0.c0) END) LIMIT 3 INTERSECT SELECT ALL * FROM t1, v0 WHERE (((((t1.c1)>>('-291559531')))/((+ (x'0e'))))) LIMIT 0x3;
SELECT ALL * FROM t1, v0 WHERE (CASE t1.c0 COLLATE BINARY  WHEN CAST(x'768921403a64' AS NUMERIC) THEN ((v0.c0)<=(v0.c0)) WHEN t1.c0 COLLATE RTRIM THEN t1.c0 COLLATE BINARY WHEN ((t1.c2)>(v0.c0)) THEN (- (v0.c1)) WHEN CASE t1.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END THEN (((NULL))>=((v0.c1))) ELSE rtreenode(t1.c1, v0.c0) END);
SELECT * FROM t1, v0 WHERE (CASE t1.c0 COLLATE BINARY  WHEN CAST(x'768921403a64' AS NUMERIC) THEN ((v0.c0)<(v0.c0)) WHEN t1.c0 COLLATE RTRIM THEN t1.c0 COLLATE BINARY WHEN ((t1.c2)>(v0.c0)) THEN (- (v0.c1)) WHEN CASE t1.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END THEN (((NULL))>((v0.c1))) ELSE rtreenode(t1.c1, v0.c0) END) LIMIT 3 INTERSECT SELECT ALL * FROM t1, v0 WHERE (((((t1.c1)>>('-291559531')))/((+ (x'0e'))))) LIMIT 0x3;
SELECT * FROM v0 WHERE ((~ (highlight(v0.c2, v0.c0, v0.c0, v0.c2))));
SELECT DISTINCT * FROM v0 WHERE ((((~ (highlight(v0.c2, v0.c0, v0.c0, v0.c2))))AND((+ (((v0.c1) IS TRUE)))))) LIMIT 1;
SELECT * FROM v0 WHERE ((~ (highlight(v0.c2, v0.c0, v0.c0, v0.c2))));
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (CASE WHEN NULL THEN ((vt0.c1)>=(vt0.c1)) ELSE load_extension(vt0.c0) END);
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (CASE WHEN NULL THEN ((vt0.c1)==(vt0.c1)) ELSE load_extension(vt0.c0) END) INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (x'') AND (IFNULL(DISTINCT vt0.c0, vt0.c0))));
SELECT ALL * FROM t1, vt0 WHERE (UPPER(((t1.c1)<(t1.c1))));
SELECT DISTINCT * FROM t1, vt0 WHERE (UPPER(((t1.c1)<(t1.c1)))) ORDER BY (+ ((vt0.c1 IN ()))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE ((~ (((t1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (+ ((vt0.c1 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (UPPER(((t1.c1)<(t1.c1))));
SELECT DISTINCT * FROM t1, vt0 WHERE (UPPER(((t1.c1)<(t1.c1)))) ORDER BY (+ ((vt0.c1 IN ()))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE ((~ (((t1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (+ ((vt0.c1 IN ()))) ASC  NULLS LAST;
SELECT * FROM vt0 INNER JOIN v0 ON (((v0.c0 IN (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))) AND (vt0.c0 COLLATE NOCASE)) WHERE ((((((0.7536525808803692)GLOB(v0.c2))))==((((v0.c2) NOT NULL))))) ORDER BY CAST(((v0.c0)&(vt0.c1)) AS INTEGER) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((v0.c0 IN (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))) AND (vt0.c0 COLLATE NOCASE)) WHERE ((((((((0.7536525808803692)GLOB(v0.c2))))=((((v0.c2) NOT NULL)))))AND(((((('0绅')) BETWEEN ((vt0.c1)) AND ((v0.c1))))/(((v0.c0) NOTNULL)))))) ORDER BY CAST(((v0.c0)&(vt0.c1)) AS INTEGER) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((v0.c0 IN (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))) AND (vt0.c0 COLLATE NOCASE)) WHERE (((CAST(vt0.c1 AS BLOB))-(0.9888234187490961))) ORDER BY CAST(((v0.c0)&(vt0.c1)) AS INTEGER) DESC  NULLS LAST;
SELECT * FROM vt0 INNER JOIN v0 ON (((v0.c0 IN (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))) AND (vt0.c0 COLLATE NOCASE)) WHERE ((((((0.7536525808803692)GLOB(v0.c2))))==((((v0.c2) NOT NULL))))) ORDER BY CAST(((v0.c0)&(vt0.c1)) AS INTEGER) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((v0.c0 IN (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))) AND (vt0.c0 COLLATE NOCASE)) WHERE ((((((((0.7536525808803692)GLOB(v0.c2))))=((((v0.c2) NOT NULL)))))AND(((((('0绅')) BETWEEN ((vt0.c1)) AND ((v0.c1))))/(((v0.c0) NOTNULL)))))) ORDER BY CAST(((v0.c0)&(vt0.c1)) AS INTEGER) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((v0.c0 IN (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))) AND (vt0.c0 COLLATE NOCASE)) WHERE (((CAST(vt0.c1 AS BLOB))-(0.9888234187490961))) ORDER BY CAST(((v0.c0)&(vt0.c1)) AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, v0, vt0 WHERE (((((((((((CAST(v0.c0 AS TEXT))OR(('-62875246' IN ()))))OR(CASE WHEN vt0.c1 THEN t1.c2 WHEN vt0.c1 THEN t1.c0 END)))OR(((((v0.c2)AND(t1.c2)))AND(t1.c2)))))AND((v0.c1 IN ()))))OR(((vt0.c1)LIKE(vt0.c0)))));
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (((((((((((((CAST(v0.c0 AS TEXT))OR(('-62875246' IN ()))))OR(CASE WHEN vt0.c1 THEN t1.c2 WHEN vt0.c1 THEN t1.c0 END)))OR(((((v0.c2)AND(t1.c2)))AND(t1.c2)))))AND((v0.c1 IN ()))))OR(((vt0.c1)LIKE(vt0.c0)))))AND((((t1.c2, t1.c2, t1.c2)) BETWEEN ((((vt0.c1) NOT NULL), ((v0.c1)GLOB(vt0.c1)), ((v0.c1)=(v0.c2)))) AND ((CASE WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN v0.c1 WHEN t1.c0 THEN vt0.c1 WHEN v0.c1 THEN t1.c2 WHEN vt0.c1 THEN t1.c0 WHEN t1.c1 THEN v0.c0 ELSE t1.c1 END, ((((((((1301929007)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))AND(v0.c2)), LIKE(v0.c2, t1.c2))))))) LIMIT 2;
SELECT MIN(v0.c1) FROM v0 WHERE ('-1399201276');
SELECT DISTINCT MIN(v0.c1) FROM v0 WHERE ('-1399201276') ORDER BY ((CAST(v0.c0 AS TEXT))+(((v0.c0)=(v0.c2)))) ASC, CASE WHEN 0x6d385f3a THEN v0.c1 COLLATE NOCASE WHEN v0.c0 THEN 0x3c62bfba ELSE IFNULL(v0.c1, v0.c2) END ASC LIMIT 0X2;
SELECT * FROM t1, v0 WHERE (((v0.c1) BETWEEN (((((0.6844779979957352)OR(v0.c2)))AND(v0.c1))) AND (CASE WHEN t1.c2 THEN v0.c2 ELSE t1.c0 END))) ORDER BY CAST((t1.c2 IN (t1.c0)) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM t1, v0 WHERE (((((v0.c1) BETWEEN (((((0.6844779979957352)OR(v0.c2)))AND(v0.c1))) AND (CASE WHEN t1.c2 THEN v0.c2 ELSE t1.c0 END)))AND(CAST(CAST(v0.c1 AS INTEGER) AS BLOB)))) ORDER BY t1.c0 DESC INTERSECT SELECT * FROM t1, v0 WHERE (((((t1.c0)IS NOT(t1.c0)))|(((t1.c2) NOT BETWEEN (t1.c1) AND (0.5365965666490048))))) ORDER BY t1.c0 DESC;
SELECT * FROM t1, v0 WHERE (((v0.c1) BETWEEN (((((0.6844779979957352)OR(v0.c2)))AND(v0.c1))) AND (CASE WHEN t1.c2 THEN v0.c2 ELSE t1.c0 END))) ORDER BY CAST((t1.c2 IN (t1.c0)) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM t1, v0 WHERE (((((v0.c1) BETWEEN (((((0.6844779979957352)OR(v0.c2)))AND(v0.c1))) AND (CASE WHEN t1.c2 THEN v0.c2 ELSE t1.c0 END)))AND(CAST(CAST(v0.c1 AS INTEGER) AS BLOB)))) ORDER BY t1.c0 DESC INTERSECT SELECT * FROM t1, v0 WHERE (((((t1.c0)IS NOT(t1.c0)))|(((t1.c2) NOT BETWEEN (t1.c1) AND (0.5365965666490048))))) ORDER BY t1.c0 DESC;
SELECT ALL MIN(v0.c2) FROM vt0 LEFT OUTER JOIN v0 ON 0.8074238025693946 WHERE (('' IN ()));
SELECT ALL MIN(v0.c2) FROM vt0 INNER JOIN v0 ON 0.8074238025693946 WHERE (((('' IN ()))AND(NULL))) LIMIT 3;
SELECT MAX(t1.c1) FROM t1, vt0 WHERE (CASE WHEN ((t1.c0) BETWEEN (t1.c2) AND (t1.c1)) THEN ((t1.c1)%(t1.c1)) WHEN (((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0))) THEN t1.c1 END) ORDER BY (((((((((2098833601)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))))AND(((((t1.c2)OR(vt0.c1)))OR(vt0.c0)))))OR(((t1.c1) IS TRUE))))AND(t1.c2)) ASC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c1) FROM t1, vt0 WHERE (CASE WHEN ((t1.c0) BETWEEN (t1.c2) AND (t1.c1)) THEN ((t1.c1)%(t1.c1)) WHEN (((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0))) THEN t1.c1 END) ORDER BY (((t1.c1 IN ()))<>(t1.c1)) DESC  NULLS FIRST;
SELECT * FROM t1 NATURAL JOIN vt0 WHERE ((((t1.c2 IN (t1.c1, t1.c0))) IS TRUE));
SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE ((((((t1.c2 IN (t1.c1, t1.c0))) IS TRUE))AND((((vt0.c0)OR(t1.c1)) IN ())))) ORDER BY (((+ (vt0.c1))) IS FALSE) DESC, ((((t1.c1) NOT NULL))>=(((t1.c2) NOTNULL))) LIMIT 0X1;
SELECT * FROM t1 NATURAL JOIN vt0 WHERE ((((t1.c2 IN (t1.c1, t1.c0))) IS TRUE));
SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE ((((((t1.c2 IN (t1.c1, t1.c0))) IS TRUE))AND((((vt0.c0)OR(t1.c1)) IN ())))) ORDER BY (((+ (vt0.c1))) IS FALSE) DESC, ((((t1.c1) NOT NULL))>=(((t1.c2) NOTNULL))) LIMIT 0X1;
SELECT MIN(v0.c2) FROM t1 NOT INDEXED NATURAL JOIN v0 WHERE (CAST(TYPEOF(DISTINCT t1.c1) AS BLOB)) ORDER BY 0.5645351689879007;
SELECT DISTINCT MIN(v0.c2) FROM t1 NATURAL JOIN v0 WHERE (((CAST(TYPEOF(DISTINCT t1.c1) AS BLOB))AND((NOT (((t1.c0)<(t1.c1))))))) ORDER BY ((t1.c1) NOTNULL), ((((t1.c2)<(t1.c1))) BETWEEN (t1.c2) AND (((v0.c1) NOT BETWEEN (v0.c0) AND (t1.c1)))) ASC, ((((v0.c0)=(v0.c0)))*(((t1.c2) ISNULL)))  NULLS LAST INTERSECT SELECT DISTINCT MIN(v0.c2) FROM t1 NATURAL JOIN v0 WHERE (CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END COLLATE NOCASE) ORDER BY ((t1.c1) NOTNULL), ((((t1.c2)<(t1.c1))) BETWEEN (t1.c2) AND (((v0.c1) NOT BETWEEN (v0.c0) AND (t1.c1)))) ASC, ((((v0.c0)=(v0.c0)))*(((t1.c2) ISNULL)))  NULLS LAST;
SELECT MIN(vt0.c1) FROM vt0 WHERE (((((TRIM(DISTINCT vt0.c0, vt0.c0))AND(((vt0.c0)<=(vt0.c1)))))AND(NULL)));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((((((TRIM(DISTINCT vt0.c0, vt0.c0))AND(((vt0.c0)<(vt0.c1)))))AND(NULL)))AND(LIKELIHOOD(DISTINCT ((vt0.c0)>>(x'')), NULL)))) LIMIT 0x2 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((((vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (vt0.c1 IN (vt0.c1, vt0.c0)))) AND (((vt0.c0 IN ()), TOTAL_CHANGES())))) LIMIT 0X2;
SELECT * FROM t1 INNER JOIN v0 ON ((((((((((t1.c0)OR(t1.c2)))AND(v0.c0)))OR(v0.c0)))AND(t1.c0))) NOT BETWEEN ((t1.c2 IN ())) AND (v0.c2)) WHERE (UPPER(DISTINCT ((((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1))));
SELECT ALL * FROM t1 INNER JOIN v0 ON ((((((((((t1.c0)OR(t1.c2)))AND(v0.c0)))OR(v0.c0)))AND(t1.c0))) NOT BETWEEN ((t1.c2 IN ())) AND (v0.c2)) WHERE (UPPER(DISTINCT ((((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))) ORDER BY (('P)䟵?')GLOB(((v0.c1)GLOB(t1.c0)))) DESC  NULLS FIRST, -3.36308551E8 DESC  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM t1 INNER JOIN v0 ON ((((((((((t1.c0)OR(t1.c2)))AND(v0.c0)))OR(v0.c0)))AND(t1.c0))) NOT BETWEEN ((t1.c2 IN ())) AND (v0.c2)) WHERE (IFNULL(v0.c1, t1.c0) COLLATE NOCASE) ORDER BY (('P)䟵?')GLOB(((v0.c1)GLOB(t1.c0)))) DESC  NULLS FIRST, -3.36308551E8 DESC  NULLS LAST LIMIT 0x1;
SELECT * FROM t1 INNER JOIN v0 ON ((((((((((t1.c0)OR(t1.c2)))AND(v0.c0)))OR(v0.c0)))AND(t1.c0))) NOT BETWEEN ((t1.c2 IN ())) AND (v0.c2)) WHERE (UPPER(DISTINCT ((((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1))));
SELECT ALL * FROM t1 INNER JOIN v0 ON ((((((((((t1.c0)OR(t1.c2)))AND(v0.c0)))OR(v0.c0)))AND(t1.c0))) NOT BETWEEN ((t1.c2 IN ())) AND (v0.c2)) WHERE (UPPER(DISTINCT ((((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1)))) ORDER BY (('P)䟵?')GLOB(((v0.c1)GLOB(t1.c0)))) DESC  NULLS FIRST, -3.36308551E8 DESC  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM t1 INNER JOIN v0 ON ((((((((((t1.c0)OR(t1.c2)))AND(v0.c0)))OR(v0.c0)))AND(t1.c0))) NOT BETWEEN ((t1.c2 IN ())) AND (v0.c2)) WHERE (IFNULL(v0.c1, t1.c0) COLLATE NOCASE) ORDER BY (('P)䟵?')GLOB(((v0.c1)GLOB(t1.c0)))) DESC  NULLS FIRST, -3.36308551E8 DESC  NULLS LAST LIMIT 0x1;
SELECT MAX(v0.c0) FROM vt0 NATURAL JOIN v0 NATURAL JOIN t1 WHERE (((t1.c2) BETWEEN (v0.c2) AND (t1.c1)) COLLATE BINARY) ORDER BY (((((v0.c1) IS FALSE)))<=((NULL COLLATE RTRIM)))  NULLS LAST;
SELECT MAX(v0.c0) FROM vt0 NATURAL JOIN v0 NATURAL JOIN t1 WHERE (((((t1.c2) BETWEEN (v0.c2) AND (t1.c1)) COLLATE BINARY)AND(0.23312599416994928))) ORDER BY (((((v0.c1) IS FALSE)))<=((NULL COLLATE RTRIM)))  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM v0, vt0, t1 WHERE (((CAST(t1.c1 AS INTEGER)) NOT NULL));
SELECT DISTINCT MAX(vt0.c0) FROM v0, vt0, t1 WHERE (((CAST(t1.c1 AS INTEGER)) NOT NULL)) INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM v0, vt0, t1 WHERE ((((((v0.c1, vt0.c1, t1.c1, t1.c1, t1.c0)) BETWEEN ((t1.c2, x'5c', vt0.c0, t1.c1, t1.c0)) AND ((vt0.c0, t1.c0, t1.c0, vt0.c1, t1.c0)))) IS TRUE));
SELECT ALL MAX(vt0.c1) FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((TRIM(v0.c2, vt0.c1))) AND (((((((((((('1829071009')OR(vt0.c1)))AND(vt0.c0)))OR(v0.c0)))AND(v0.c1)))AND(v0.c2))))));
SELECT MAX(vt0.c1) FROM v0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((TRIM(v0.c2, vt0.c1))) AND (((((((((((('1829071009')OR(vt0.c1)))AND(vt0.c0)))OR(v0.c0)))AND(v0.c1)))AND(v0.c2))))))AND((+ (((v0.c1)<=(v0.c0))))))) LIMIT 0 INTERSECT SELECT ALL MAX(vt0.c1) FROM v0, vt0 WHERE (x'') LIMIT 0x0;
SELECT MIN(vt0.c0) FROM t1 INNER JOIN vt0 ON ((((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c0)))<=(CASE t1.c1  WHEN t1.c1 THEN vt0.c1 WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c1 WHEN vt0.c0 THEN vt0.c1 END)) WHERE (ABS(0.9964050107015158 COLLATE BINARY));
SELECT ALL MIN(vt0.c0) FROM t1 INNER JOIN vt0 ON ((((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c0)))<=(CASE t1.c1  WHEN t1.c1 THEN vt0.c1 WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c1 WHEN vt0.c0 THEN vt0.c1 END)) WHERE (((ABS(0.9964050107015158 COLLATE BINARY))AND((vt0.c0 IN ()) COLLATE BINARY))) ORDER BY ((CASE t1.c1  WHEN t1.c2 THEN vt0.c1 WHEN vt0.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE t1.c2 END)LIKE(t1.c1)) DESC, UPPER(NULL), ((((t1.c2)AND(t1.c0)))OR(t1.c0)) COLLATE BINARY  NULLS LAST INTERSECT SELECT ALL MIN(vt0.c0) FROM t1 INNER JOIN vt0 ON ((((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c0)))<=(CASE t1.c1  WHEN t1.c1 THEN vt0.c1 WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c1 WHEN vt0.c0 THEN vt0.c1 END)) WHERE (NULL) ORDER BY ((CASE t1.c1  WHEN t1.c2 THEN vt0.c1 WHEN vt0.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE t1.c2 END)LIKE(t1.c1)) DESC, UPPER(NULL), ((((t1.c2)AND(t1.c0)))OR(t1.c0)) COLLATE BINARY  NULLS LAST;
SELECT MIN(t1.c1) FROM v0 INNER JOIN vt0 ON (((t1.c2 IN ()))||(((vt0.c1) NOT NULL))) LEFT OUTER JOIN t1 ON '' WHERE ((((vt0.c0)<>(t1.c2)) IN ((- (vt0.c0)), CASE WHEN vt0.c0 THEN v0.c2 END)));
SELECT MIN(t1.c1) FROM v0 INNER JOIN vt0 ON (((t1.c2 IN ()))||(((vt0.c1) NOT NULL))) LEFT OUTER JOIN t1 ON '' WHERE ((((((vt0.c0)<>(t1.c2)) IN ((- (vt0.c0)), CASE WHEN vt0.c0 THEN v0.c2 END)))AND(((((t1.c1 IN ())))==((((((((((((t1.c2)AND(t1.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(t1.c1)))AND(t1.c0)))))))) ORDER BY ((4.69225696E8)AND((+ (vt0.c0)))) DESC  NULLS LAST, ABS(DISTINCT (((t1.c1, NULL))>=((v0.c2, 0.41278585256324873)))) DESC, (vt0.c0 IN (v0.c2 COLLATE NOCASE)) LIMIT 0X0 INTERSECT SELECT MIN(t1.c1) FROM v0 INNER JOIN vt0 ON (((t1.c2 IN ()))||(((vt0.c1) NOT NULL))) LEFT OUTER JOIN t1 ON '' WHERE ((((vt0.c0) IS FALSE) IN ())) ORDER BY ((4.69225696E8)AND((+ (vt0.c0)))) DESC  NULLS LAST, ABS(DISTINCT (((t1.c1, NULL))>=((v0.c2, 0.41278585256324873)))) DESC, (vt0.c0 IN (v0.c2 COLLATE NOCASE)) LIMIT 0X0;
SELECT ALL MAX(t1.c2) FROM t1, vt0 WHERE (CASE (vt0.c1 IN (t1.c0))  WHEN ((vt0.c0) ISNULL) THEN (- (vt0.c1)) ELSE ((((((t1.c2)AND(t1.c0)))OR(x'')))AND(t1.c1)) END);
SELECT MAX(t1.c2) FROM t1, vt0 WHERE (CASE (vt0.c1 IN (t1.c0))  WHEN ((vt0.c0) ISNULL) THEN (- (vt0.c1)) ELSE ((((((t1.c2)AND(t1.c0)))OR(x'')))AND(t1.c1)) END) ORDER BY vt0.c1  NULLS LAST, (NOT (t1.c1 COLLATE BINARY)) LIMIT 0x1 INTERSECT SELECT MAX(t1.c2) FROM t1, vt0 WHERE (NULL) ORDER BY vt0.c1  NULLS LAST, (NOT (t1.c1 COLLATE BINARY)) LIMIT 0x1;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (t1.c0 IN (t1.c0)) THEN ((t1.c2)+(t1.c1)) WHEN t1.c1 THEN (NULL IN (t1.c1)) WHEN (t1.c1 IN (t1.c2)) THEN TRIM(DISTINCT t1.c1, t1.c0) WHEN ((((((t1.c1)OR(x'e7')))AND(t1.c0)))AND(t1.c2)) THEN ((t1.c1)<(t1.c2)) ELSE ((t1.c2) NOT BETWEEN (t1.c2) AND (0.46802525625995395)) END);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE WHEN (t1.c0 IN (t1.c0)) THEN ((t1.c2)+(t1.c1)) WHEN t1.c1 THEN (NULL IN (t1.c1)) WHEN (t1.c1 IN (t1.c2)) THEN TRIM(DISTINCT t1.c1, t1.c0) WHEN ((((((t1.c1)OR(x'e7')))AND(t1.c0)))AND(t1.c2)) THEN ((t1.c1)<(t1.c2)) ELSE ((t1.c2) NOT BETWEEN (t1.c2) AND (0.46802525625995395)) END)AND(((IFNULL(DISTINCT t1.c2, t1.c1))OR(((t1.c1) NOT BETWEEN (0.5499688086437984) AND (t1.c1))))))) LIMIT 0;
SELECT MAX(vt0.c0) FROM vt0 WHERE ((((((('-602905820')AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE COLLATE BINARY);
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE ((((((('-602905820')AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE COLLATE BINARY) INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) COLLATE RTRIM);
SELECT MIN(v0.c0) FROM v0, t1 INNER JOIN vt0 ON v0.c0 WHERE ((((vt0.c0 IN ())) IS TRUE)) ORDER BY ((((t1.c1) BETWEEN (vt0.c1) AND (t1.c2))) NOT NULL)  NULLS FIRST;
SELECT ALL MIN(v0.c0) FROM v0, t1 INNER JOIN vt0 ON v0.c0 WHERE ((((((vt0.c0 IN ())) IS TRUE))AND(((((((t1.c0)==(v0.c2)))OR((NOT (v0.c0)))))AND(CASE v0.c2  WHEN x'' THEN '-1444763474' WHEN vt0.c0 THEN NULL END))))) ORDER BY (((t1.c2)AND(v0.c1)) IN (((v0.c0) NOTNULL)))  NULLS FIRST, ((CAST(NULL AS TEXT))-(CAST(0.7439245722140745 AS REAL)))  NULLS FIRST, (((((v0.c2, t1.c2)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c2))))&((+ (1113487052)))) DESC  NULLS LAST, (((vt0.c0 IN (v0.c0))) BETWEEN (TRIM(DISTINCT t1.c1)) AND (((t1.c1)>>('&CZpn7R5')))) INTERSECT SELECT MIN(v0.c0) FROM v0, t1 INNER JOIN vt0 ON v0.c0 WHERE ((((((v0.c2) NOT BETWEEN (t1.c1) AND (v0.c0))))<=((CASE WHEN t1.c0 THEN vt0.c1 WHEN 1.215819737E9 THEN vt0.c1 ELSE t1.c1 END)))) ORDER BY (((t1.c2)AND(v0.c1)) IN (((v0.c0) NOTNULL)))  NULLS FIRST, ((CAST(NULL AS TEXT))-(CAST(0.7439245722140745 AS REAL)))  NULLS FIRST, (((((v0.c2, t1.c2)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c1, t1.c2))))&((+ (1113487052)))) DESC  NULLS LAST, (((vt0.c0 IN (v0.c0))) BETWEEN (TRIM(DISTINCT t1.c1)) AND (((t1.c1)>>('&CZpn7R5'))));
SELECT ALL * FROM t1 CROSS JOIN v0 ON ((CAST(t1.c1 AS REAL))==(((t1.c2) BETWEEN (v0.c1) AND (t1.c2)))) WHERE (((((((v0.c0)AND(t1.c2)))OR((((v0.c1, t1.c2, t1.c1, t1.c0))!=((v0.c2, v0.c0, v0.c1, t1.c1))))))AND(((((0X5d13e3eb)AND(v0.c1)))OR(t1.c2))))) ORDER BY t1.c2  NULLS LAST, (((((t1.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c1, t1.c1, v0.c0)) AND ((v0.c2, v0.c0, t1.c1))))&(CAST(v0.c1 AS REAL))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON ((CAST(t1.c1 AS REAL))==(((t1.c2) BETWEEN (v0.c1) AND (t1.c2)))) WHERE (((((((((v0.c0)AND(t1.c2)))OR((((v0.c1, t1.c2, t1.c1, t1.c0))>((v0.c2, v0.c0, v0.c1, t1.c1))))))AND(((((0x5d13e3eb)AND(v0.c1)))OR(t1.c2)))))AND((- (((v0.c0)LIKE(v0.c1))))))) ORDER BY t1.c2  NULLS LAST, (((((t1.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c1, t1.c1, v0.c0)) AND ((v0.c2, v0.c0, t1.c1))))&(CAST(v0.c1 AS REAL))) ASC  NULLS LAST;
SELECT ALL * FROM t1 CROSS JOIN v0 ON ((CAST(t1.c1 AS REAL))==(((t1.c2) BETWEEN (v0.c1) AND (t1.c2)))) WHERE (((((((v0.c0)AND(t1.c2)))OR((((v0.c1, t1.c2, t1.c1, t1.c0))!=((v0.c2, v0.c0, v0.c1, t1.c1))))))AND(((((0X5d13e3eb)AND(v0.c1)))OR(t1.c2))))) ORDER BY t1.c2  NULLS LAST, (((((t1.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c1, t1.c1, v0.c0)) AND ((v0.c2, v0.c0, t1.c1))))&(CAST(v0.c1 AS REAL))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON ((CAST(t1.c1 AS REAL))==(((t1.c2) BETWEEN (v0.c1) AND (t1.c2)))) WHERE (((((((((v0.c0)AND(t1.c2)))OR((((v0.c1, t1.c2, t1.c1, t1.c0))>((v0.c2, v0.c0, v0.c1, t1.c1))))))AND(((((0x5d13e3eb)AND(v0.c1)))OR(t1.c2)))))AND((- (((v0.c0)LIKE(v0.c1))))))) ORDER BY t1.c2  NULLS LAST, (((((t1.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c1, t1.c1, v0.c0)) AND ((v0.c2, v0.c0, t1.c1))))&(CAST(v0.c1 AS REAL))) ASC  NULLS LAST;
SELECT MAX(t1.c2) FROM t1, vt0 WHERE (((((((((t1.c0)AND(t1.c1 COLLATE BINARY)))AND(((-686358828) NOT BETWEEN (t1.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (t1.c2) AND (vt0.c0)))))OR(CASE NULL  WHEN t1.c2 THEN vt0.c0 ELSE 0x6ed2050d END))) ORDER BY CASE WHEN (NOT (t1.c1)) THEN ((t1.c0)*(t1.c0)) WHEN COALESCE(DISTINCT t1.c2, t1.c1, t1.c0) THEN ((((vt0.c1)AND(vt0.c0)))AND(t1.c1)) ELSE ((vt0.c0) NOTNULL) END DESC  NULLS FIRST;
SELECT MAX(t1.c2) FROM t1, vt0 WHERE (((((((((t1.c0)AND(t1.c1 COLLATE BINARY)))AND(((-686358828) NOT BETWEEN (t1.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (t1.c2) AND (vt0.c0)))))OR(CASE NULL  WHEN t1.c2 THEN vt0.c0 ELSE 0X6ed2050d END))) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN t1.c0 ELSE vt0.c0 END THEN ((((((vt0.c0)OR(vt0.c1)))AND(t1.c1)))OR(x'a3')) WHEN ((vt0.c0)OR(vt0.c1)) THEN NULLIF(DISTINCT t1.c1, t1.c2) WHEN (~ (t1.c0)) THEN (~ (t1.c0)) ELSE ((NULL)/(vt0.c1)) END  NULLS LAST LIMIT 0x1 INTERSECT SELECT MAX(t1.c2) FROM t1, vt0 WHERE (((IFNULL(t1.c0, t1.c0)) BETWEEN (((((((((t1.c1)AND(vt0.c0)))AND(vt0.c1)))OR(t1.c2)))OR(vt0.c1))) AND ('1215819737'))) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN t1.c0 ELSE vt0.c0 END THEN ((((((vt0.c0)OR(vt0.c1)))AND(t1.c1)))OR(x'a3')) WHEN ((vt0.c0)OR(vt0.c1)) THEN NULLIF(DISTINCT t1.c1, t1.c2) WHEN (~ (t1.c0)) THEN (~ (t1.c0)) ELSE ((NULL)/(vt0.c1)) END  NULLS LAST LIMIT 0x1;
SELECT * FROM vt0, v0 WHERE (CASE v0.c0  WHEN v0.c2 THEN v0.c1 END COLLATE RTRIM);
SELECT DISTINCT * FROM vt0, v0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END COLLATE RTRIM)AND(CAST((~ (vt0.c1)) AS REAL)))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)||(vt0.c0))) AND (UPPER(vt0.c1))) ASC  NULLS LAST LIMIT 0;
SELECT * FROM vt0, v0 WHERE (CASE v0.c0  WHEN v0.c2 THEN v0.c1 END COLLATE RTRIM);
SELECT DISTINCT * FROM vt0, v0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END COLLATE RTRIM)AND(CAST((~ (vt0.c1)) AS REAL)))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)||(vt0.c0))) AND (UPPER(vt0.c1))) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM v0, t1, vt0 WHERE (0.6708771200155522 COLLATE RTRIM);
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (0.6708771200155522 COLLATE RTRIM);
SELECT ALL * FROM v0, t1, vt0 WHERE (0.6708771200155522 COLLATE RTRIM);
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (0.6708771200155522 COLLATE RTRIM);
SELECT ALL MIN(v0.c1) FROM v0, vt0 WHERE (((NULL)>>(((v0.c1)>(vt0.c1)))));
SELECT MIN(v0.c1) FROM v0, vt0 WHERE (((NULL)>>(((v0.c1)>(vt0.c1))))) LIMIT 2;
SELECT ALL * FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON ((((((((((v0.c1)|(v0.c1)))AND(CASE t1.c2  WHEN t1.c2 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN t1.c1 WHEN v0.c0 THEN v0.c2 ELSE vt0.c1 END)))AND(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))))OR(t1.c1 COLLATE RTRIM)))AND(((((((t1.c1)OR(v0.c1)))AND(t1.c1)))AND(vt0.c0)))) WHERE (((((((vt0.c1)OR('oHP')))OR(v0.c1)))<=(CAST(x'dc' AS REAL))));
SELECT * FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON ((((((((((v0.c1)|(v0.c1)))AND(CASE t1.c2  WHEN t1.c2 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN t1.c1 WHEN v0.c0 THEN v0.c2 ELSE vt0.c1 END)))AND(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))))OR(t1.c1 COLLATE RTRIM)))AND(((((((t1.c1)OR(v0.c1)))AND(t1.c1)))AND(vt0.c0)))) WHERE (((((((((vt0.c1)OR('oHP')))OR(v0.c1)))<=(CAST(x'dc' AS REAL))))AND((((vt0.c0 IN (v0.c1))) BETWEEN ((((vt0.c0, v0.c0, vt0.c1, v0.c0))<((t1.c2, v0.c2, t1.c2, v0.c1)))) AND (COALESCE(DISTINCT vt0.c0, t1.c0, t1.c1, vt0.c1)))))) ORDER BY ((((('0.14019992864274156' IN ()))AND(((v0.c0)&(t1.c1)))))OR((((v0.c1, vt0.c0, v0.c1))>((v0.c2, t1.c0, t1.c0))))) DESC, (((NOT (-913941678))) NOT BETWEEN ((((t1.c1, vt0.c1)) NOT BETWEEN ((0.3833590693222495, v0.c0)) AND ((t1.c2, vt0.c0)))) AND (v0.c2 COLLATE NOCASE));
SELECT ALL * FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON ((((((((((v0.c1)|(v0.c1)))AND(CASE t1.c2  WHEN t1.c2 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN t1.c1 WHEN v0.c0 THEN v0.c2 ELSE vt0.c1 END)))AND(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))))OR(t1.c1 COLLATE RTRIM)))AND(((((((t1.c1)OR(v0.c1)))AND(t1.c1)))AND(vt0.c0)))) WHERE (((((((vt0.c1)OR('oHP')))OR(v0.c1)))<=(CAST(x'dc' AS REAL))));
SELECT * FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON ((((((((((v0.c1)|(v0.c1)))AND(CASE t1.c2  WHEN t1.c2 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN t1.c1 WHEN v0.c0 THEN v0.c2 ELSE vt0.c1 END)))AND(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))))OR(t1.c1 COLLATE RTRIM)))AND(((((((t1.c1)OR(v0.c1)))AND(t1.c1)))AND(vt0.c0)))) WHERE (((((((((vt0.c1)OR('oHP')))OR(v0.c1)))<=(CAST(x'dc' AS REAL))))AND((((vt0.c0 IN (v0.c1))) BETWEEN ((((vt0.c0, v0.c0, vt0.c1, v0.c0))<((t1.c2, v0.c2, t1.c2, v0.c1)))) AND (COALESCE(DISTINCT vt0.c0, t1.c0, t1.c1, vt0.c1)))))) ORDER BY ((((('0.14019992864274156' IN ()))AND(((v0.c0)&(t1.c1)))))OR((((v0.c1, vt0.c0, v0.c1))>((v0.c2, t1.c0, t1.c0))))) DESC, (((NOT (-913941678))) NOT BETWEEN ((((t1.c1, vt0.c1)) NOT BETWEEN ((0.3833590693222495, v0.c0)) AND ((t1.c2, vt0.c0)))) AND (v0.c2 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (((((((((x'ec')AND('')))AND((((t1.c2, t1.c1)) BETWEEN ((t1.c2, v0.c2)) AND ((v0.c1, t1.c2))))))AND('950883003')))AND(((vt0.c1) BETWEEN (t1.c0) AND (v0.c2)))));
SELECT DISTINCT COUNT(*) FROM v0, t1, vt0 WHERE (((((((((x'ec')AND('')))AND((((t1.c2, t1.c1)) BETWEEN ((t1.c2, v0.c2)) AND ((v0.c1, t1.c2))))))AND('950883003')))AND(((vt0.c1) BETWEEN (t1.c0) AND (v0.c2))))) ORDER BY ((((((t1.c1) NOTNULL))AND(t1.c0)))OR(((vt0.c1)=(t1.c1)))), -1.393225757E9 DESC  NULLS LAST, (((((vt0.c0, t1.c2)) BETWEEN ((v0.c0, 0.6080637593689103)) AND ((v0.c1, t1.c1))))*(((vt0.c0)=(t1.c1)))) ASC;
SELECT MIN(t1.c0) FROM t1, v0 WHERE (((v0.c1) BETWEEN (((v0.c0)&(t1.c0))) AND (((v0.c2) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY v0.c1 ASC  NULLS FIRST, x'' DESC, (((t1.c0))<>((t1.c0))) COLLATE BINARY COLLATE NOCASE  NULLS LAST;
SELECT MIN(t1.c0) FROM t1, v0 WHERE (((((v0.c1) BETWEEN (((v0.c0)&(t1.c0))) AND (((v0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((((t1.c1 IN (t1.c0, 1.891954482E9)))AND(((v0.c1) IS FALSE)))))) ORDER BY t1.c0 DESC;
SELECT ALL MIN(vt0.c0) FROM vt0, v0 WHERE ((~ (((v0.c2) NOTNULL))));
SELECT DISTINCT MIN(vt0.c0) FROM vt0, v0 WHERE ((((~ (((v0.c2) NOTNULL))))AND(((v0.c1) IS FALSE) COLLATE BINARY))) ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (vt0.c1))) IS FALSE)  NULLS LAST, ((((v0.c2) ISNULL))LIKE((v0.c2 IN ()))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 INNER JOIN vt0 ON CASE WHEN (((v0.c0, -1.764809039E9, 'n|K먡Xj*')) NOT BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((vt0.c0, vt0.c1, v0.c0))) THEN 0.8570811825764604 COLLATE BINARY WHEN ((((((1020506302)OR(v0.c2)))AND(vt0.c0)))AND(v0.c1)) THEN CASE WHEN v0.c2 THEN vt0.c0 END END WHERE ((((((vt0.c1)AND(v0.c0)))OR(v0.c1)) IN ()));
SELECT * FROM v0 INNER JOIN vt0 ON CASE WHEN (((v0.c0, -1.764809039E9, 'n|K먡Xj*')) NOT BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((vt0.c0, vt0.c1, v0.c0))) THEN 0.8570811825764604 COLLATE BINARY WHEN ((((((0X3cd3b0be)OR(v0.c2)))AND(vt0.c0)))AND(v0.c1)) THEN CASE WHEN v0.c2 THEN vt0.c0 END END WHERE ((((((vt0.c1)AND(v0.c0)))OR(v0.c1)) IN ()));
SELECT ALL * FROM v0 INNER JOIN vt0 ON CASE WHEN (((v0.c0, -1.764809039E9, 'n|K먡Xj*')) NOT BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((vt0.c0, vt0.c1, v0.c0))) THEN 0.8570811825764604 COLLATE BINARY WHEN ((((((1020506302)OR(v0.c2)))AND(vt0.c0)))AND(v0.c1)) THEN CASE WHEN v0.c2 THEN vt0.c0 END END WHERE ((((((vt0.c1)AND(v0.c0)))OR(v0.c1)) IN ()));
SELECT * FROM v0 INNER JOIN vt0 ON CASE WHEN (((v0.c0, -1.764809039E9, 'n|K먡Xj*')) NOT BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((vt0.c0, vt0.c1, v0.c0))) THEN 0.8570811825764604 COLLATE BINARY WHEN ((((((0X3cd3b0be)OR(v0.c2)))AND(vt0.c0)))AND(v0.c1)) THEN CASE WHEN v0.c2 THEN vt0.c0 END END WHERE ((((((vt0.c1)AND(v0.c0)))OR(v0.c1)) IN ()));
SELECT ALL * FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0)IS(vt0.c0))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))<=(((vt0.c0) IS TRUE)))  NULLS LAST, (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) IN (vt0.c1 COLLATE BINARY, ((vt0.c1) NOT NULL))) DESC LIMIT 0X1;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0)IS(vt0.c0))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))<=(((vt0.c0) IS TRUE)))  NULLS LAST, (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) IN (vt0.c1 COLLATE BINARY, ((vt0.c1) NOT NULL))) DESC LIMIT 0X1;
SELECT ALL * FROM vt0, t1 WHERE (((CASE t1.c0  WHEN t1.c2 THEN t1.c0 END)OR((vt0.c1 IN (vt0.c1))))) ORDER BY (NOT (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN vt0.c1 ELSE vt0.c1 END)) ASC;
SELECT DISTINCT * FROM vt0, t1 WHERE (((CASE t1.c0  WHEN t1.c2 THEN t1.c0 END)OR((vt0.c1 IN (vt0.c1))))) ORDER BY (((t1.c1)) BETWEEN ((CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c1 THEN vt0.c1 WHEN t1.c2 THEN vt0.c0 WHEN t1.c1 THEN t1.c1 ELSE vt0.c1 END)) AND ((((t1.c0)||(vt0.c0))))) ASC  NULLS FIRST, ((CASE vt0.c0  WHEN t1.c1 THEN 1987992813 WHEN vt0.c1 THEN vt0.c0 ELSE t1.c0 END) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c1, t1.c0, t1.c1)) BETWEEN ((vt0.c0, vt0.c0, t1.c1)) AND ((vt0.c1, vt0.c0, t1.c0)))));
SELECT ALL * FROM vt0, t1 WHERE (((CASE t1.c0  WHEN t1.c2 THEN t1.c0 END)OR((vt0.c1 IN (vt0.c1))))) ORDER BY (NOT (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN vt0.c1 ELSE vt0.c1 END)) ASC;
SELECT DISTINCT * FROM vt0, t1 WHERE (((CASE t1.c0  WHEN t1.c2 THEN t1.c0 END)OR((vt0.c1 IN (vt0.c1))))) ORDER BY (((t1.c1)) BETWEEN ((CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c1 THEN vt0.c1 WHEN t1.c2 THEN vt0.c0 WHEN t1.c1 THEN t1.c1 ELSE vt0.c1 END)) AND ((((t1.c0)||(vt0.c0))))) ASC  NULLS FIRST, ((CASE vt0.c0  WHEN t1.c1 THEN 1987992813 WHEN vt0.c1 THEN vt0.c0 ELSE t1.c0 END) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c1, t1.c0, t1.c1)) BETWEEN ((vt0.c0, vt0.c0, t1.c1)) AND ((vt0.c1, vt0.c0, t1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE RTRIM, NULL, LIKELY(vt0.c1)))!=((NULL, vt0.c1, ((vt0.c0)!=(vt0.c0)))))) ORDER BY vt0.c0, (CAST(vt0.c0 AS NUMERIC) IN ()) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 COLLATE RTRIM, NULL, LIKELY(vt0.c1)))!=((NULL, vt0.c1, ((vt0.c0)!=(vt0.c0))))))AND(x'0002'))) ORDER BY vt0.c0, (CAST(vt0.c0 AS NUMERIC) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM v0, t1 WHERE ((~ (CASE WHEN t1.c0 THEN v0.c1 WHEN v0.c0 THEN t1.c2 END))) ORDER BY (((t1.c1) ISNULL) IN ()), (CAST(v0.c2 AS BLOB) IN ((+ (v0.c2)))) ASC;
SELECT DISTINCT * FROM v0, t1 WHERE ((~ (CASE WHEN t1.c0 THEN v0.c1 WHEN v0.c0 THEN t1.c2 END))) ORDER BY (((t1.c1) ISNULL) IN ()), (CAST(v0.c2 AS BLOB) IN ((+ (v0.c2)))) ASC LIMIT 4;
SELECT ALL * FROM v0, t1 WHERE ((~ (CASE WHEN t1.c0 THEN v0.c1 WHEN v0.c0 THEN t1.c2 END))) ORDER BY (((t1.c1) ISNULL) IN ()), (CAST(v0.c2 AS BLOB) IN ((+ (v0.c2)))) ASC;
SELECT COUNT(*) FROM t1, vt0 WHERE (0.2718326716650131);
SELECT COUNT(*) FROM t1, vt0 WHERE (((0.2718326716650131)AND(CAST(((((vt0.c1)AND(vt0.c1)))AND(t1.c2)) AS BLOB))));
SELECT * FROM vt0 WHERE (((vt0.c0)GLOB(LIKELY(vt0.c1))));
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)GLOB(LIKELY(vt0.c1)))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1, vt0.c1))) NOT BETWEEN (((vt0.c1)>>(vt0.c0))) AND (((vt0.c0) IS FALSE))));
SELECT * FROM vt0 WHERE (((vt0.c0)GLOB(LIKELY(vt0.c1))));
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)GLOB(LIKELY(vt0.c1)))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1, vt0.c1))) NOT BETWEEN (((vt0.c1)>>(vt0.c0))) AND (((vt0.c0) IS FALSE))));
SELECT MAX(vt0.c1) FROM vt0, t1 WHERE ((- ((((t1.c1, vt0.c0)) NOT BETWEEN ((t1.c0, vt0.c0)) AND ((t1.c0, vt0.c1))))));
SELECT DISTINCT MAX(vt0.c1) FROM vt0, t1 WHERE ((((- ((((t1.c1, vt0.c0)) NOT BETWEEN ((t1.c0, vt0.c0)) AND ((t1.c0, vt0.c1))))))AND((CAST(vt0.c0 AS INTEGER) IN ())))) ORDER BY (CAST(t1.c1 AS BLOB) IN (CAST(vt0.c1 AS REAL))) INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0, t1 WHERE (json_array(((t1.c0)/(vt0.c0)), x'c737')) ORDER BY (CAST(t1.c1 AS BLOB) IN (CAST(vt0.c1 AS REAL)));
SELECT * FROM t1, v0 INNER JOIN vt0 ON CASE ((vt0.c1)GLOB(vt0.c1))  WHEN CASE v0.c0  WHEN t1.c2 THEN vt0.c0 ELSE v0.c0 END THEN (- (t1.c1)) WHEN NULL THEN (((t1.c1, v0.c1, v0.c2))<((NULL, vt0.c1, vt0.c1))) END WHERE ((((t1.c1) IS TRUE) IN (CASE WHEN v0.c1 THEN t1.c1 ELSE v0.c1 END, CASE t1.c2  WHEN t1.c1 THEN vt0.c0 END))) ORDER BY ((((((((((v0.c0)OR(x'')))OR(t1.c2)))AND(v0.c2)))OR(t1.c1))) ISNULL)  NULLS FIRST, t1.c2 ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1, v0 INNER JOIN vt0 ON CASE ((vt0.c1)GLOB(vt0.c1))  WHEN CASE v0.c0  WHEN t1.c2 THEN vt0.c0 ELSE v0.c0 END THEN (- (t1.c1)) WHEN NULL THEN (((t1.c1, v0.c1, v0.c2))<((NULL, vt0.c1, vt0.c1))) END WHERE ((((((t1.c1) IS TRUE) IN (CASE WHEN v0.c1 THEN t1.c1 ELSE v0.c1 END, CASE t1.c2  WHEN t1.c1 THEN vt0.c0 END)))AND(CASE WHEN ((v0.c1) IS TRUE) THEN ((vt0.c0) NOTNULL) WHEN ((t1.c1) BETWEEN (v0.c2) AND (t1.c2)) THEN CASE WHEN vt0.c0 THEN NULL ELSE t1.c0 END WHEN ((NULL) BETWEEN (t1.c2) AND (v0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((v0.c2) BETWEEN (t1.c1) AND (t1.c0)) THEN CASE WHEN t1.c2 THEN t1.c0 END ELSE (v0.c0 IN (t1.c0, t1.c1)) END))) ORDER BY ((((((((((v0.c0)OR(x'')))OR(t1.c2)))AND(v0.c2)))OR(t1.c1))) ISNULL)  NULLS FIRST, t1.c2 ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1, v0 INNER JOIN vt0 ON CASE ((vt0.c1)GLOB(vt0.c1))  WHEN CASE v0.c0  WHEN t1.c2 THEN vt0.c0 ELSE v0.c0 END THEN (- (t1.c1)) WHEN NULL THEN (((t1.c1, v0.c1, v0.c2))<((NULL, vt0.c1, vt0.c1))) END WHERE ((- (NULLIF(v0.c1, t1.c2)))) ORDER BY ((((((((((v0.c0)OR(x'')))OR(t1.c2)))AND(v0.c2)))OR(t1.c1))) ISNULL)  NULLS FIRST, t1.c2 ASC  NULLS FIRST LIMIT 0x1;
SELECT * FROM t1, v0 INNER JOIN vt0 ON CASE ((vt0.c1)GLOB(vt0.c1))  WHEN CASE v0.c0  WHEN t1.c2 THEN vt0.c0 ELSE v0.c0 END THEN (- (t1.c1)) WHEN NULL THEN (((t1.c1, v0.c1, v0.c2))<((NULL, vt0.c1, vt0.c1))) END WHERE ((((t1.c1) IS TRUE) IN (CASE WHEN v0.c1 THEN t1.c1 ELSE v0.c1 END, CASE t1.c2  WHEN t1.c1 THEN vt0.c0 END))) ORDER BY ((((((((((v0.c0)OR(x'')))OR(t1.c2)))AND(v0.c2)))OR(t1.c1))) ISNULL)  NULLS FIRST, t1.c2 ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1, v0 INNER JOIN vt0 ON CASE ((vt0.c1)GLOB(vt0.c1))  WHEN CASE v0.c0  WHEN t1.c2 THEN vt0.c0 ELSE v0.c0 END THEN (- (t1.c1)) WHEN NULL THEN (((t1.c1, v0.c1, v0.c2))<((NULL, vt0.c1, vt0.c1))) END WHERE ((((((t1.c1) IS TRUE) IN (CASE WHEN v0.c1 THEN t1.c1 ELSE v0.c1 END, CASE t1.c2  WHEN t1.c1 THEN vt0.c0 END)))AND(CASE WHEN ((v0.c1) IS TRUE) THEN ((vt0.c0) NOTNULL) WHEN ((t1.c1) BETWEEN (v0.c2) AND (t1.c2)) THEN CASE WHEN vt0.c0 THEN NULL ELSE t1.c0 END WHEN ((NULL) BETWEEN (t1.c2) AND (v0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((v0.c2) BETWEEN (t1.c1) AND (t1.c0)) THEN CASE WHEN t1.c2 THEN t1.c0 END ELSE (v0.c0 IN (t1.c0, t1.c1)) END))) ORDER BY ((((((((((v0.c0)OR(x'')))OR(t1.c2)))AND(v0.c2)))OR(t1.c1))) ISNULL)  NULLS FIRST, t1.c2 ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1, v0 INNER JOIN vt0 ON CASE ((vt0.c1)GLOB(vt0.c1))  WHEN CASE v0.c0  WHEN t1.c2 THEN vt0.c0 ELSE v0.c0 END THEN (- (t1.c1)) WHEN NULL THEN (((t1.c1, v0.c1, v0.c2))<((NULL, vt0.c1, vt0.c1))) END WHERE ((- (NULLIF(v0.c1, t1.c2)))) ORDER BY ((((((((((v0.c0)OR(x'')))OR(t1.c2)))AND(v0.c2)))OR(t1.c1))) ISNULL)  NULLS FIRST, t1.c2 ASC  NULLS FIRST LIMIT 0x1;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CAST(t1.c0 AS INTEGER)) ORDER BY CASE WHEN -757340521 THEN ((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(t1.c2)))AND(t1.c1)) END, '1092579787' ASC  NULLS LAST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (CAST(t1.c0 AS INTEGER)) ORDER BY CASE WHEN -757340521 THEN ((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))OR(t1.c2)))AND(t1.c1)) END, '1092579787' ASC  NULLS LAST LIMIT 1;
SELECT ALL MAX(v0.c1) FROM v0 WHERE (((((((((((v0.c2)IS(v0.c2)))OR(CAST(v0.c2 AS NUMERIC))))OR(LIKELIHOOD(v0.c1, v0.c0))))AND(((v0.c0)&(v0.c1)))))OR((((v0.c2, '[W#,''', v0.c1)) NOT BETWEEN ((x'c1', v0.c1, v0.c1)) AND ((v0.c2, v0.c2, v0.c1)))))) ORDER BY 'y)xs'  NULLS FIRST, (((((((((~ (v0.c0)))OR('I,EHB')))OR((0X70c4ef32 IN ()))))AND(v0.c2)))AND(CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END))  NULLS LAST;
SELECT DISTINCT MAX(v0.c1) FROM v0 WHERE (((((((((((v0.c2)IS(v0.c2)))OR(CAST(v0.c2 AS NUMERIC))))OR(LIKELIHOOD(v0.c1, v0.c0))))AND(((v0.c0)&(v0.c1)))))OR((((v0.c2, '[W#,''', v0.c1)) NOT BETWEEN ((x'c1', v0.c1, v0.c1)) AND ((v0.c2, v0.c2, v0.c1)))))) ORDER BY TYPEOF('') COLLATE NOCASE DESC, (((v0.c2) BETWEEN (v0.c2) AND (v0.c0)) IN (((((((((v0.c2)AND(v0.c2)))AND(v0.c1)))AND(v0.c2)))AND(v0.c2))))  NULLS FIRST INTERSECT SELECT DISTINCT MAX(v0.c1) FROM v0 WHERE ('') ORDER BY TYPEOF('') COLLATE NOCASE DESC, (((v0.c2) BETWEEN (v0.c2) AND (v0.c0)) IN (((((((((v0.c2)AND(v0.c2)))AND(v0.c1)))AND(v0.c2)))AND(v0.c2))))  NULLS FIRST;
SELECT * FROM v0 WHERE (((((v0.c2)%(x'86b89c'))) NOT BETWEEN (LOWER(v0.c0)) AND (((v0.c1)*(v0.c1))))) ORDER BY (((v0.c1 IN ()))IS(((v0.c1)-(v0.c0)))) DESC  NULLS FIRST, ((((((v0.c0)OR(v0.c1)))AND(v0.c0)))AND(v0.c2)) COLLATE NOCASE ASC, ((((v0.c2) ISNULL)) NOTNULL) DESC  NULLS LAST, CASE WHEN (NOT (v0.c1)) THEN CHAR(v0.c1) END ASC  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c2)%(x'86b89c'))) NOT BETWEEN (LOWER(v0.c0)) AND (((v0.c1)*(v0.c1)))))AND(CAST(ROUND(0.9242949549473783, v0.c2) AS TEXT)))) ORDER BY ((((((((v0.c2)AND(v0.c1)))AND(-1675189967)))AND(v0.c1)))<=((v0.c0 IN ()))) ASC  NULLS FIRST, CASE CAST(v0.c2 AS BLOB)  WHEN ((v0.c1)<=(v0.c1)) THEN ((v0.c2)IS(v0.c0)) WHEN (+ (v0.c0)) THEN v0.c1 ELSE NULL END, (v0.c1 COLLATE BINARY IN (((((v0.c1)AND(v0.c2)))OR(v0.c0)), v0.c0)) INTERSECT SELECT DISTINCT * FROM v0 WHERE (x'') ORDER BY ((((((((v0.c2)AND(v0.c1)))AND(0Xffffffff9c26a131)))AND(v0.c1)))<=((v0.c0 IN ()))) ASC  NULLS FIRST, CASE CAST(v0.c2 AS BLOB)  WHEN ((v0.c1)<=(v0.c1)) THEN ((v0.c2)IS(v0.c0)) WHEN (+ (v0.c0)) THEN v0.c1 ELSE NULL END, (v0.c1 COLLATE BINARY IN (((((v0.c1)AND(v0.c2)))OR(v0.c0)), v0.c0));
SELECT * FROM v0 WHERE (((((v0.c2)%(x'86b89c'))) NOT BETWEEN (LOWER(v0.c0)) AND (((v0.c1)*(v0.c1))))) ORDER BY (((v0.c1 IN ()))IS(((v0.c1)-(v0.c0)))) DESC  NULLS FIRST, ((((((v0.c0)OR(v0.c1)))AND(v0.c0)))AND(v0.c2)) COLLATE NOCASE ASC, ((((v0.c2) ISNULL)) NOTNULL) DESC  NULLS LAST, CASE WHEN (NOT (v0.c1)) THEN CHAR(v0.c1) END ASC  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c2)%(x'86b89c'))) NOT BETWEEN (LOWER(v0.c0)) AND (((v0.c1)*(v0.c1)))))AND(CAST(ROUND(0.9242949549473783, v0.c2) AS TEXT)))) ORDER BY ((((((((v0.c2)AND(v0.c1)))AND(-1675189967)))AND(v0.c1)))<=((v0.c0 IN ()))) ASC  NULLS FIRST, CASE CAST(v0.c2 AS BLOB)  WHEN ((v0.c1)<=(v0.c1)) THEN ((v0.c2)IS(v0.c0)) WHEN (+ (v0.c0)) THEN v0.c1 ELSE NULL END, (v0.c1 COLLATE BINARY IN (((((v0.c1)AND(v0.c2)))OR(v0.c0)), v0.c0)) INTERSECT SELECT DISTINCT * FROM v0 WHERE (x'') ORDER BY ((((((((v0.c2)AND(v0.c1)))AND(0Xffffffff9c26a131)))AND(v0.c1)))<=((v0.c0 IN ()))) ASC  NULLS FIRST, CASE CAST(v0.c2 AS BLOB)  WHEN ((v0.c1)<=(v0.c1)) THEN ((v0.c2)IS(v0.c0)) WHEN (+ (v0.c0)) THEN v0.c1 ELSE NULL END, (v0.c1 COLLATE BINARY IN (((((v0.c1)AND(v0.c2)))OR(v0.c0)), v0.c0));
SELECT MAX(v0.c2) FROM v0 WHERE (((((v0.c0) ISNULL))>=(((v0.c2)==(v0.c1))))) ORDER BY (((- (v0.c0)))||(((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(v0.c2))))  NULLS LAST, LIKELIHOOD(((v0.c0)+(v0.c2)), (NOT (v0.c1))) DESC;
SELECT MAX(v0.c2) FROM v0 WHERE (((((((v0.c0) ISNULL))>=(((v0.c2)==(v0.c1)))))AND(((v0.c1) NOT BETWEEN (((v0.c2)<>(v0.c1))) AND (NULL))))) ORDER BY (((- (v0.c0)))||(((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(v0.c2))))  NULLS LAST, LIKELIHOOD(((v0.c0)+(v0.c2)), (NOT (v0.c1))) DESC;
SELECT MIN(v0.c0) FROM v0 WHERE (SQLITE_COMPILEOPTION_GET(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))));
SELECT ALL MIN(v0.c0) FROM v0 WHERE (SQLITE_COMPILEOPTION_GET(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))) ORDER BY (((v0.c0)) NOT BETWEEN (('0.5468094506122495')) AND ((CAST(v0.c1 AS BLOB)))), ((v0.c0)||(v0.c0)) COLLATE BINARY LIMIT 0x1;
SELECT ALL * FROM v0, vt0 INNER JOIN t1 ON CAST(v0.c0 AS TEXT) COLLATE BINARY WHERE (((((x'') IS FALSE))>>(((t1.c1) BETWEEN (x'') AND (t1.c2))))) ORDER BY x'' ASC;
SELECT DISTINCT * FROM v0, vt0 INNER JOIN t1 ON CAST(v0.c0 AS TEXT) COLLATE BINARY WHERE (((((((x'') IS FALSE))>>(((t1.c1) BETWEEN (x'') AND (t1.c2)))))AND(v0.c2))) ORDER BY x'' ASC INTERSECT SELECT DISTINCT * FROM v0, vt0 INNER JOIN t1 ON CAST(v0.c0 AS TEXT) COLLATE BINARY WHERE (((((((v0.c1)AND(t1.c0)))OR(t1.c2))) BETWEEN (v0.c2 COLLATE RTRIM) AND ((v0.c1 IN ())))) ORDER BY x'' ASC;
SELECT ALL * FROM v0, vt0 INNER JOIN t1 ON CAST(v0.c0 AS TEXT) COLLATE BINARY WHERE (((((x'') IS FALSE))>>(((t1.c1) BETWEEN (x'') AND (t1.c2))))) ORDER BY x'' ASC;
SELECT DISTINCT * FROM v0, vt0 INNER JOIN t1 ON CAST(v0.c0 AS TEXT) COLLATE BINARY WHERE (((((((x'') IS FALSE))>>(((t1.c1) BETWEEN (x'') AND (t1.c2)))))AND(v0.c2))) ORDER BY x'' ASC INTERSECT SELECT DISTINCT * FROM v0, vt0 INNER JOIN t1 ON CAST(v0.c0 AS TEXT) COLLATE BINARY WHERE (((((((v0.c1)AND(t1.c0)))OR(t1.c2))) BETWEEN (v0.c2 COLLATE RTRIM) AND ((v0.c1 IN ())))) ORDER BY x'' ASC;
SELECT ALL MIN(t1.c0) FROM v0, vt0 CROSS JOIN t1 ON CAST(x'438e4291' AS NUMERIC) WHERE ((((((t1.c2, v0.c0))>=((t1.c1, t1.c2)))) NOT BETWEEN ((- (t1.c2))) AND (CAST(t1.c1 AS REAL))));
SELECT ALL MIN(t1.c0) FROM v0, vt0 CROSS JOIN t1 ON CAST(x'438e4291' AS NUMERIC) WHERE ((((((t1.c2, v0.c0))>=((t1.c1, t1.c2)))) NOT BETWEEN ((- (t1.c2))) AND (CAST(t1.c1 AS REAL))));
SELECT MAX(v0.c2) FROM v0 WHERE ((((((v0.c0) IS TRUE), CASE v0.c2  WHEN v0.c2 THEN x'72e4' END))<>((((((v0.c0)AND(0.7040850884391869)))OR(v0.c0)), COALESCE(v0.c0, v0.c1, v0.c2))))) ORDER BY ((- (v0.c2)) IN (((v0.c2)OR(0.9372995575676366)))) ASC  NULLS LAST;
SELECT ALL MAX(v0.c2) FROM v0 WHERE ((((((v0.c0) IS TRUE), CASE v0.c2  WHEN v0.c2 THEN x'72e4' END))<>((((((v0.c0)AND(0.7040850884391869)))OR(v0.c0)), COALESCE(v0.c0, v0.c1, v0.c2))))) ORDER BY CASE WHEN (((v0.c1, v0.c1, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, v0.c1, v0.c1, v0.c0, v0.c0)) AND ((v0.c1, v0.c2, v0.c0, v0.c1, v0.c2))) THEN (- (v0.c2)) END, ((v0.c1)-(((v0.c1) NOTNULL))) DESC  NULLS FIRST, '1834263594'  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (((((t1.c2)<=(vt0.c1))) IS FALSE));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((t1.c2)<(vt0.c1))) IS FALSE));
SELECT ALL * FROM vt0, t1 WHERE (((((t1.c2)<=(vt0.c1))) IS FALSE));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((t1.c2)<(vt0.c1))) IS FALSE));
SELECT COUNT(*) FROM vt0, v0, t1 WHERE (CAST(((v0.c1)|(v0.c2)) AS BLOB)) ORDER BY ((vt0.c1 COLLATE RTRIM) ISNULL) ASC, ((((vt0.c0)-(t1.c0)))<((((vt0.c1, vt0.c1, v0.c1)) BETWEEN ((t1.c0, v0.c1, t1.c2)) AND ((v0.c1, vt0.c1, vt0.c1))))) DESC;
SELECT DISTINCT COUNT(*) FROM vt0, v0, t1 WHERE (((CAST(((v0.c1)|(v0.c2)) AS BLOB))AND(((((((UPPER(v0.c1))OR(LIKELIHOOD(DISTINCT t1.c0, t1.c1))))OR(((v0.c1)%(v0.c0)))))OR(LTRIM(t1.c2)))))) ORDER BY t1.c0 ASC, json_array(STRFTIME(vt0.c0, vt0.c0, v0.c0), vt0.c1 COLLATE RTRIM, RTRIM(vt0.c0), ((((((vt0.c0)AND(v0.c1)))OR(t1.c1)))OR(t1.c2))) DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE ((+ (((((t1.c0)OR(t1.c1)))OR(t1.c1))))) ORDER BY ((t1.c1)*(((t1.c0) NOT NULL))), ((CAST(t1.c0 AS REAL))/(((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((+ (((((t1.c0)OR(t1.c1)))OR(t1.c1)))))AND(NULL))) ORDER BY 0.4124690825832057  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (((t1.c1 IN (t1.c1)) IN ((((t1.c1, t1.c2, x'811c', NULL, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c2, t1.c2)) AND ((0.008830360026655826, t1.c0, t1.c0, t1.c0, t1.c2)))))) ORDER BY 0.4124690825832057  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((+ (((((t1.c0)OR(t1.c1)))OR(t1.c1))))) ORDER BY ((t1.c1)*(((t1.c0) NOT NULL))), ((CAST(t1.c0 AS REAL))/(((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((+ (((((t1.c0)OR(t1.c1)))OR(t1.c1)))))AND(NULL))) ORDER BY 0.4124690825832057  NULLS LAST INTERSECT SELECT ALL * FROM t1 WHERE (((t1.c1 IN (t1.c1)) IN ((((t1.c1, t1.c2, x'811c', NULL, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1, t1.c2, t1.c2)) AND ((0.008830360026655826, t1.c0, t1.c0, t1.c0, t1.c2)))))) ORDER BY 0.4124690825832057  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((+ (((v0.c1)<=(NULL)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((+ (((v0.c1)==(NULL))))) LIMIT 0x0 INTERSECT SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((((v0.c2) IS TRUE)) NOTNULL)) LIMIT 0x0;
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (CASE t1.c0  WHEN (v0.c1 IN ()) THEN (((('#i*娑2嚹K<.')AND(vt0.c0)))OR(t1.c0)) END);
SELECT DISTINCT COUNT(*) FROM t1, v0, vt0 WHERE (((CASE t1.c0  WHEN (v0.c1 IN ()) THEN (((('#i*娑2嚹K<.')AND(vt0.c0)))OR(t1.c0)) END)AND(CAST(json_type(t1.c2) AS NUMERIC)))) ORDER BY 'w' DESC  NULLS LAST, ((0.3801187578068156)>(json_array_length(vt0.c0, t1.c2)))  NULLS LAST;
SELECT ALL MIN(v0.c0) FROM v0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c1 END AS BLOB)) ORDER BY CASE WHEN (((vt0.c0))<((v0.c0))) THEN v0.c0 COLLATE NOCASE END, CASE vt0.c1  WHEN TRIM(DISTINCT v0.c1) THEN ((x'68')|(v0.c0)) WHEN ((v0.c1)>(v0.c1)) THEN vt0.c1 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT DISTINCT MIN(v0.c0) FROM v0, vt0 WHERE (((CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c1 END AS BLOB))AND(vt0.c1))) ORDER BY ((((vt0.c1) ISNULL)) NOT BETWEEN ((+ (vt0.c0))) AND ((NOT (vt0.c0))))  NULLS FIRST, ((((((((vt0.c1)OR(v0.c0)))AND(v0.c2)))OR(v0.c0)))>((v0.c1 IN (v0.c0)))) ASC LIMIT 0X0;
SELECT MAX(vt0.c0) FROM vt0, v0 WHERE ((((vt0.c1, v0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c1, v0.c1)) AND ((v0.c2, v0.c2, '919126795'))) COLLATE RTRIM) ORDER BY (('-417928862') BETWEEN (((v0.c2)OR(vt0.c0))) AND (((((vt0.c1)AND(v0.c1)))OR(v0.c2)))) ASC  NULLS LAST, v0.c1 DESC;
SELECT DISTINCT MAX(vt0.c0) FROM vt0, v0 WHERE ((((vt0.c1, v0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c1, v0.c1)) AND ((v0.c2, v0.c2, '919126795'))) COLLATE RTRIM) ORDER BY ((((v0.c0)=(v0.c2)))==((+ (v0.c0)))) DESC, x'' LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((v0.c0)==(v0.c2)))==((+ (v0.c0)))) DESC, x'' LIMIT 1;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((((t1.c0) BETWEEN (vt0.c1) AND (t1.c1)))AND((((vt0.c1, t1.c2)) NOT BETWEEN ((vt0.c0, t1.c0)) AND ((t1.c2, t1.c2))))))AND(((t1.c0)>(t1.c1)))));
SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE (((((((t1.c0) BETWEEN (vt0.c1) AND (t1.c1)))AND((((vt0.c1, t1.c2)) NOT BETWEEN ((vt0.c0, t1.c0)) AND ((t1.c2, t1.c2))))))AND(((t1.c0)>(t1.c1))))) ORDER BY '5V.' DESC  NULLS LAST, ((((t1.c2)/(t1.c0))) NOT BETWEEN (((x'a7c735') IS FALSE)) AND ((- (0Xffffffffda2ed46d)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE ((((((t1.c1))!=((vt0.c1)))) NOT BETWEEN ((+ (vt0.c1))) AND (((((t1.c0)AND(t1.c2)))OR(t1.c2))))) ORDER BY '5V.' DESC  NULLS LAST, ((((t1.c2)/(t1.c0))) NOT BETWEEN (((x'a7c735') IS FALSE)) AND ((- (0Xffffffffda2ed46d)))) DESC  NULLS FIRST;
SELECT MAX(t1.c0) FROM t1, vt0, v0 WHERE (((((v0.c1)AND((((v0.c0))<((vt0.c0))))))AND((((v0.c2, x'')) BETWEEN ((v0.c0, vt0.c0)) AND ((v0.c2, t1.c1))))));
SELECT DISTINCT MAX(t1.c0) FROM t1, vt0, v0 WHERE (((((v0.c1)AND((((v0.c0))<((vt0.c0))))))AND((((v0.c2, x'')) BETWEEN ((v0.c0, vt0.c0)) AND ((v0.c2, t1.c1)))))) LIMIT 0X3 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1, vt0, v0 WHERE (((v0.c0)OR((((v0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, t1.c2)) AND ((vt0.c0, vt0.c1)))))) LIMIT 0x3;
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c2)GLOB(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c2)GLOB(v0.c0))))) ORDER BY (((((v0.c1, 1200319629, v0.c2))<=((NULL, v0.c0, v0.c2))))>=(((NULL)*(NULL))))  NULLS FIRST, CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c2 END AS TEXT) DESC  NULLS LAST, CAST(x'' AS INTEGER) COLLATE NOCASE, ((v0.c0 COLLATE RTRIM)+(v0.c2 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT * FROM t1 INNER JOIN vt0 ON ((((((vt0.c1)OR(t1.c1)))AND(vt0.c1))) IS TRUE) WHERE ((((((t1.c0, x'3ec6'))==((vt0.c1, vt0.c1))))<(((t1.c2) IS FALSE)))) ORDER BY ((t1.c2 COLLATE BINARY) NOT BETWEEN (vt0.c1) AND (((vt0.c0)IS(t1.c2))));
SELECT ALL * FROM t1 INNER JOIN vt0 ON ((((((vt0.c1)OR(t1.c1)))AND(vt0.c1))) IS TRUE) WHERE ((((((((t1.c0, x'3ec6'))=((vt0.c1, vt0.c1))))<(((t1.c2) IS FALSE))))AND(t1.c0))) ORDER BY ((t1.c2 COLLATE BINARY) NOT BETWEEN (vt0.c1) AND (((vt0.c0)IS(t1.c2)))) LIMIT 0X0 INTERSECT SELECT * FROM t1 INNER JOIN vt0 ON ((((((vt0.c1)OR(t1.c1)))AND(vt0.c1))) IS TRUE) WHERE ((((((t1.c1, vt0.c0, vt0.c0))<>((vt0.c0, t1.c2, t1.c0))))IS((- (t1.c1))))) ORDER BY ((t1.c2 COLLATE BINARY) NOT BETWEEN (vt0.c1) AND (((vt0.c0)IS(t1.c2)))) LIMIT 0X0;
SELECT * FROM t1 INNER JOIN vt0 ON ((((((vt0.c1)OR(t1.c1)))AND(vt0.c1))) IS TRUE) WHERE ((((((t1.c0, x'3ec6'))==((vt0.c1, vt0.c1))))<(((t1.c2) IS FALSE)))) ORDER BY ((t1.c2 COLLATE BINARY) NOT BETWEEN (vt0.c1) AND (((vt0.c0)IS(t1.c2))));
SELECT ALL * FROM t1 INNER JOIN vt0 ON ((((((vt0.c1)OR(t1.c1)))AND(vt0.c1))) IS TRUE) WHERE ((((((((t1.c0, x'3ec6'))=((vt0.c1, vt0.c1))))<(((t1.c2) IS FALSE))))AND(t1.c0))) ORDER BY ((t1.c2 COLLATE BINARY) NOT BETWEEN (vt0.c1) AND (((vt0.c0)IS(t1.c2)))) LIMIT 0X0 INTERSECT SELECT * FROM t1 INNER JOIN vt0 ON ((((((vt0.c1)OR(t1.c1)))AND(vt0.c1))) IS TRUE) WHERE ((((((t1.c1, vt0.c0, vt0.c0))<>((vt0.c0, t1.c2, t1.c0))))IS((- (t1.c1))))) ORDER BY ((t1.c2 COLLATE BINARY) NOT BETWEEN (vt0.c1) AND (((vt0.c0)IS(t1.c2)))) LIMIT 0X0;
SELECT * FROM t1 WHERE (((NULL)GLOB((- (NULL)))));
SELECT * FROM t1 WHERE (((((NULL)GLOB((- (NULL)))))AND(t1.c0))) ORDER BY CHANGES() ASC  NULLS LAST LIMIT 0X3 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c0) IS TRUE)) ISNULL)) ORDER BY CHANGES() ASC  NULLS LAST LIMIT 0x3;
SELECT * FROM t1 WHERE (((NULL)GLOB((- (NULL)))));
SELECT * FROM t1 WHERE (((((NULL)GLOB((- (NULL)))))AND(t1.c0))) ORDER BY CHANGES() ASC  NULLS LAST LIMIT 0X3 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c0) IS TRUE)) ISNULL)) ORDER BY CHANGES() ASC  NULLS LAST LIMIT 0x3;
SELECT ALL * FROM t1 NOT INDEXED, v0 WHERE (CASE WHEN ((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c1)) THEN '-336804978' COLLATE RTRIM ELSE ((((v0.c0)OR(t1.c1)))AND(v0.c2)) END) ORDER BY (((((~ (v0.c0)))AND((t1.c1 IN (NULL)))))AND(UPPER(DISTINCT t1.c1))), (((+ (t1.c0)))+(((v0.c1) NOT BETWEEN (t1.c2) AND (''))))  NULLS FIRST;
SELECT * FROM t1, v0 WHERE (((CASE WHEN ((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c1)) THEN '-336804978' COLLATE RTRIM ELSE ((((v0.c0)OR(t1.c1)))AND(v0.c2)) END)AND((((+ (t1.c0))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (t1.c1 COLLATE RTRIM))))) ORDER BY '0.6831539244855179' COLLATE RTRIM  NULLS LAST, (((t1.c2 IN (v0.c1, v0.c1, t1.c0))) BETWEEN (((t1.c2)OR(v0.c0))) AND (((t1.c0)IS(t1.c0)))) INTERSECT SELECT ALL * FROM t1, v0 WHERE ((((((t1.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))*((t1.c2 IN (t1.c1))))) ORDER BY '0.6831539244855179' COLLATE RTRIM  NULLS LAST, (((t1.c2 IN (v0.c1, v0.c1, t1.c0))) BETWEEN (((t1.c2)OR(v0.c0))) AND (((t1.c0)IS(t1.c0))));
SELECT ALL * FROM t1 NOT INDEXED, v0 WHERE (CASE WHEN ((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c1)) THEN '-336804978' COLLATE RTRIM ELSE ((((v0.c0)OR(t1.c1)))AND(v0.c2)) END) ORDER BY (((((~ (v0.c0)))AND((t1.c1 IN (NULL)))))AND(UPPER(DISTINCT t1.c1))), (((+ (t1.c0)))+(((v0.c1) NOT BETWEEN (t1.c2) AND (''))))  NULLS FIRST;
SELECT * FROM t1, v0 WHERE (((CASE WHEN ((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c1)) THEN '-336804978' COLLATE RTRIM ELSE ((((v0.c0)OR(t1.c1)))AND(v0.c2)) END)AND((((+ (t1.c0))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (t1.c1 COLLATE RTRIM))))) ORDER BY '0.6831539244855179' COLLATE RTRIM  NULLS LAST, (((t1.c2 IN (v0.c1, v0.c1, t1.c0))) BETWEEN (((t1.c2)OR(v0.c0))) AND (((t1.c0)IS(t1.c0)))) INTERSECT SELECT ALL * FROM t1, v0 WHERE ((((((t1.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))*((t1.c2 IN (t1.c1))))) ORDER BY '0.6831539244855179' COLLATE RTRIM  NULLS LAST, (((t1.c2 IN (v0.c1, v0.c1, t1.c0))) BETWEEN (((t1.c2)OR(v0.c0))) AND (((t1.c0)IS(t1.c0))));
SELECT ALL MIN(v0.c0) FROM vt0, v0 NOT INDEXED WHERE (((CAST(v0.c1 AS REAL))AND(((v0.c2)*(vt0.c0)))));
SELECT MIN(v0.c0) FROM vt0, v0 WHERE (((CAST(v0.c1 AS REAL))AND(((v0.c2)*(vt0.c0))))) ORDER BY (((vt0.c1, v0.c2)) NOT BETWEEN ((((v0.c2) NOT NULL), ((v0.c0) NOTNULL))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN v0.c2 THEN '1753659790' ELSE v0.c2 END, ((v0.c1)IS NOT(vt0.c1))))) ASC  NULLS LAST, (((v0.c1, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN 0.053481221290409664 WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 END, ((((vt0.c0)OR(v0.c1)))OR(v0.c1)))) AND ((((((v0.c2)AND(v0.c1)))AND(v0.c0)), vt0.c0))) ASC;
SELECT ALL MIN(v0.c2) FROM vt0, v0, t1 NOT INDEXED WHERE (vt0.c0) ORDER BY (v0.c0 COLLATE RTRIM IN ());
SELECT DISTINCT MIN(v0.c2) FROM vt0, v0, t1 WHERE (((vt0.c0)AND(((CASE WHEN t1.c2 THEN v0.c1 END)*(x'bf91'))))) ORDER BY (v0.c0 COLLATE RTRIM IN ()) LIMIT 1 INTERSECT SELECT DISTINCT MIN(v0.c2) FROM vt0, v0, t1 WHERE ((((((- (v0.c0)))OR(((v0.c0)<=(t1.c0)))))OR(('195705935' IN ())))) ORDER BY (v0.c0 COLLATE RTRIM IN ()) LIMIT 1;
SELECT ALL * FROM vt0 NOT INDEXED, t1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) BETWEEN ((('964154287') BETWEEN (t1.c1) AND ('-177924526'))) AND (((t1.c2)|(t1.c2))))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((((t1.c2, t1.c0))<((t1.c0, t1.c0)))) AND (vt0.c1));
SELECT * FROM vt0, t1 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) BETWEEN ((('964154287') BETWEEN (t1.c1) AND ('-177924526'))) AND (((t1.c2)|(t1.c2)))))AND(vt0.c0))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((((t1.c2, t1.c0))<((t1.c0, t1.c0)))) AND (vt0.c1)) LIMIT 0x1 INTERSECT SELECT * FROM vt0, t1 WHERE ((('41028994')IS NOT(t1.c2))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((((t1.c2, t1.c0))<((t1.c0, t1.c0)))) AND (vt0.c1)) LIMIT 1;
SELECT ALL * FROM vt0 NOT INDEXED, t1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) BETWEEN ((('964154287') BETWEEN (t1.c1) AND ('-177924526'))) AND (((t1.c2)|(t1.c2))))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((((t1.c2, t1.c0))<((t1.c0, t1.c0)))) AND (vt0.c1));
SELECT * FROM vt0, t1 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) BETWEEN ((('964154287') BETWEEN (t1.c1) AND ('-177924526'))) AND (((t1.c2)|(t1.c2)))))AND(vt0.c0))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((((t1.c2, t1.c0))<((t1.c0, t1.c0)))) AND (vt0.c1)) LIMIT 0x1 INTERSECT SELECT * FROM vt0, t1 WHERE ((('41028994')IS NOT(t1.c2))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((((t1.c2, t1.c0))<((t1.c0, t1.c0)))) AND (vt0.c1)) LIMIT 1;
SELECT ALL MAX(v0.c0) FROM vt0, v0 WHERE (v0.c1) ORDER BY TYPEOF('0.9369942315316403');
SELECT DISTINCT MAX(v0.c0) FROM vt0, v0 WHERE (v0.c1) ORDER BY TYPEOF('0.9369942315316403') LIMIT 0;
SELECT COUNT(*) FROM vt0, t1 WHERE ((((((vt0.c0) NOT BETWEEN (0.6540787196527705) AND (vt0.c0)), (('933424624') ISNULL), (vt0.c0 IN ()), ((t1.c0) NOTNULL), CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c0 END))==((((NULL)>(t1.c2)), (t1.c2 IN (t1.c0)), ((((vt0.c0)OR(t1.c0)))OR(vt0.c1)), ((((((((((((vt0.c0)AND(t1.c1)))OR(vt0.c0)))AND(vt0.c1)))OR('')))OR(0.23945185986769146)))AND(vt0.c0)), CASE ''  WHEN '-1764809039' THEN vt0.c1 WHEN t1.c2 THEN t1.c2 ELSE vt0.c0 END))));
SELECT COUNT(*) FROM vt0, t1 WHERE ((((((((vt0.c0) NOT BETWEEN (0.6540787196527705) AND (vt0.c0)), (('933424624') ISNULL), (vt0.c0 IN ()), ((t1.c0) NOTNULL), CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c0 END))=((((NULL)>(t1.c2)), (t1.c2 IN (t1.c0)), ((((vt0.c0)OR(t1.c0)))OR(vt0.c1)), ((((((((((((vt0.c0)AND(t1.c1)))OR(vt0.c0)))AND(vt0.c1)))OR('')))OR(0.23945185986769146)))AND(vt0.c0)), CASE ''  WHEN '-1764809039' THEN vt0.c1 WHEN t1.c2 THEN t1.c2 ELSE vt0.c0 END))))AND((('465785973')%('ᡉ'))))) LIMIT 2;
SELECT ALL MIN(vt0.c1) FROM vt0, t1, v0 WHERE (('1684629843' IN (((vt0.c0) NOT BETWEEN (3.37239948E8) AND (v0.c0))))) ORDER BY NULL;
SELECT ALL MIN(vt0.c1) FROM vt0, t1, v0 WHERE (('1684629843' IN (((vt0.c0) NOT BETWEEN (3.37239948E8) AND (v0.c0))))) ORDER BY ((CASE vt0.c1  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 END) NOT BETWEEN (CAST(t1.c2 AS REAL)) AND (CAST('-1290764403' AS NUMERIC))) DESC LIMIT 2 INTERSECT SELECT ALL MIN(vt0.c1) FROM vt0, t1, v0 WHERE ((+ ((v0.c2 IN ())))) ORDER BY ((CASE vt0.c1  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 END) NOT BETWEEN (CAST(t1.c2 AS REAL)) AND (CAST('-1290764403' AS NUMERIC))) DESC LIMIT 0X2;
SELECT ALL COUNT(*) FROM vt0, t1 NOT INDEXED, v0 WHERE (v0.c0);
SELECT DISTINCT COUNT(*) FROM vt0, t1, v0 WHERE (((v0.c0)AND(0X48e67ddb))) ORDER BY ((((((vt0.c1) IS FALSE))OR(x'24')))OR(((vt0.c0)<<(vt0.c1))))  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, t1, v0 WHERE ((CAST(t1.c1 AS TEXT) IN (CASE vt0.c1  WHEN v0.c1 THEN vt0.c0 WHEN t1.c1 THEN t1.c1 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c1) IS FALSE))OR(x'24')))OR(((vt0.c0)<<(vt0.c1))))  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) IN ())) ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC, (((NOT (vt0.c1))) BETWEEN (json_quote(vt0.c0)) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))) ASC  NULLS LAST;
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) IN ()))AND(((((vt0.c0) NOTNULL)) IS FALSE)))) ORDER BY (((vt0.c1 IN ()))=(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))  NULLS FIRST, LIKELIHOOD(x'' COLLATE RTRIM, vt0.c0), (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) IN ()), ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c1 COLLATE NOCASE)) LIMIT 0 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((((((vt0.c1 IN (vt0.c0)))AND(vt0.c0)))OR(UNLIKELY(DISTINCT vt0.c0)))) ORDER BY (((vt0.c1 IN ()))=(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))  NULLS FIRST, LIKELIHOOD(x'' COLLATE RTRIM, vt0.c0), (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) IN ()), ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c1 COLLATE NOCASE)) LIMIT 0;
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT DISTINCT COUNT(*) FROM v0 WHERE (NULL) INTERSECT SELECT DISTINCT COUNT(*) FROM v0 WHERE (0x6d704525);
SELECT MIN(t1.c1) FROM t1 WHERE (CASE WHEN 0xffffffff9c26a131 THEN CAST(NULL AS NUMERIC) ELSE ((0.12398556639317282)IS(t1.c1)) END);
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((CASE WHEN -1675189967 THEN CAST(NULL AS NUMERIC) ELSE ((0.12398556639317282)IS(t1.c1)) END)AND(t1.c0))) INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (t1.c1);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((((((((t1.c2)OR(t1.c0)))OR(vt0.c0)))AND(t1.c1)))AND(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<>((JULIANDAY(t1.c2, t1.c2, t1.c2, t1.c1), ((('1995388678')) NOT BETWEEN ((vt0.c1)) AND ((t1.c2)))))));
SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE ((((((((((((t1.c2)OR(t1.c0)))OR(vt0.c0)))AND(t1.c1)))AND(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((JULIANDAY(t1.c2, t1.c2, t1.c2, t1.c1), ((('1995388678')) NOT BETWEEN ((vt0.c1)) AND ((t1.c2)))))));
SELECT * FROM t1, vt0, v0 WHERE (CASE t1.c1  WHEN vt0.c1 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 ELSE v0.c0 END COLLATE NOCASE) ORDER BY vt0.c0 DESC  NULLS LAST, NULL DESC;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (CASE t1.c1  WHEN vt0.c1 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 ELSE v0.c0 END COLLATE NOCASE) ORDER BY ((0.4082694899203797)%(t1.c2 COLLATE NOCASE)), ((((((v0.c2, vt0.c1, vt0.c0))>=((v0.c1, vt0.c1, vt0.c0)))))<=(((- (vt0.c0)))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1, vt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((t1.c2))) COLLATE RTRIM) ORDER BY ((0.4082694899203797)%(t1.c2 COLLATE NOCASE)), ((((((v0.c2, vt0.c1, vt0.c0))>=((v0.c1, vt0.c1, vt0.c0)))))<=(((- (vt0.c0)))))  NULLS FIRST;
SELECT * FROM t1, vt0, v0 WHERE (CASE t1.c1  WHEN vt0.c1 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 ELSE v0.c0 END COLLATE NOCASE) ORDER BY vt0.c0 DESC  NULLS LAST, NULL DESC;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (CASE t1.c1  WHEN vt0.c1 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 ELSE v0.c0 END COLLATE NOCASE) ORDER BY ((0.4082694899203797)%(t1.c2 COLLATE NOCASE)), ((((((v0.c2, vt0.c1, vt0.c0))>=((v0.c1, vt0.c1, vt0.c0)))))<=(((- (vt0.c0)))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1, vt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((t1.c2))) COLLATE RTRIM) ORDER BY ((0.4082694899203797)%(t1.c2 COLLATE NOCASE)), ((((((v0.c2, vt0.c1, vt0.c0))>=((v0.c1, vt0.c1, vt0.c0)))))<=(((- (vt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1))));
SELECT DISTINCT * FROM t1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1))))AND(LIKELY(DISTINCT ((((vt0.c1)OR(vt0.c1)))AND(t1.c0)))))) INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (((vt0.c0) BETWEEN (t1.c2) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1))));
SELECT DISTINCT * FROM t1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1))))AND(LIKELY(DISTINCT ((((vt0.c1)OR(vt0.c1)))AND(t1.c0)))))) INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (((vt0.c0) BETWEEN (t1.c2) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (vt0.c1)) COLLATE RTRIM);
SELECT DISTINCT COUNT(*) FROM v0, vt0 WHERE ((((~ (vt0.c1)) COLLATE RTRIM)AND(v0.c1))) ORDER BY (NOT ((NOT (v0.c1)))) ASC  NULLS LAST, (((v0.c1 IN ()))>(((v0.c1)|(v0.c2)))), ((v0.c1 COLLATE NOCASE)>>(0xfffffffffa5585f8));
SELECT MAX(t1.c2) FROM vt0, v0, t1 WHERE (((vt0.c0 IN (v0.c1, v0.c1)) IN (((t1.c2) BETWEEN (t1.c2) AND (vt0.c0))))) ORDER BY (~ ((((t1.c1, v0.c1)) NOT BETWEEN ((v0.c1, 1.382790579E9)) AND ((vt0.c0, NULL))))), CASE WHEN ((v0.c1)*(vt0.c1)) THEN t1.c1 COLLATE BINARY WHEN ((t1.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN CASE WHEN t1.c2 THEN 0.7310912821084514 END ELSE (NOT (v0.c1)) END  NULLS FIRST;
SELECT ALL MAX(t1.c2) FROM vt0, v0, t1 WHERE (((((vt0.c0 IN (v0.c1)) IN (((t1.c2) BETWEEN (t1.c2) AND (vt0.c0)))))AND('0.445386604260368'))) ORDER BY (~ ((((t1.c1, v0.c1)) NOT BETWEEN ((v0.c1, 1.382790579E9)) AND ((vt0.c0, NULL))))), CASE WHEN ((v0.c1)*(vt0.c1)) THEN t1.c1 COLLATE BINARY WHEN ((t1.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN CASE WHEN t1.c2 THEN 0.7310912821084514 END ELSE (NOT (v0.c1)) END  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (json_array(0.7709020837052921, x'', (t1.c2 IN (t1.c0)), t1.c1, t1.c1 COLLATE NOCASE)) ORDER BY (~ (0x50ee8da4))  NULLS FIRST, (((t1.c0, (((t1.c1))<=((t1.c2)))))<((json_array(t1.c1, t1.c2, t1.c0, t1.c1), 0.5012391313742609))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (json_array(0.7709020837052921, x'', (t1.c2 IN (t1.c0)), t1.c1, t1.c1 COLLATE NOCASE)) ORDER BY (~ (1357811108))  NULLS FIRST, (((t1.c0, (((t1.c1))<=((t1.c2)))))<((json_array(t1.c1, t1.c2, t1.c0, t1.c1), 0.5012391313742609))) ASC  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (json_array(0.7709020837052921, x'', (t1.c2 IN (t1.c0)), t1.c1, t1.c1 COLLATE NOCASE)) ORDER BY (~ (0x50ee8da4))  NULLS FIRST, (((t1.c0, (((t1.c1))<=((t1.c2)))))<((json_array(t1.c1, t1.c2, t1.c0, t1.c1), 0.5012391313742609))) ASC  NULLS FIRST;
SELECT MIN(t1.c2) FROM t1 WHERE (((((((CAST(t1.c0 AS BLOB))OR(((t1.c0)AND(t1.c2)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c2)))))AND((((t1.c1, x'', t1.c1, t1.c1))==((t1.c0, t1.c0, t1.c2, t1.c0))))));
SELECT ALL MIN(t1.c2) FROM t1 WHERE (((((((((CAST(t1.c0 AS BLOB))OR(((t1.c0)AND(t1.c2)))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c2)))))AND((((t1.c1, x'', t1.c1, t1.c1))=((t1.c0, t1.c0, t1.c2, t1.c0))))))AND(((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))%(((t1.c0) IS TRUE))))));
SELECT ALL MIN(v0.c2) FROM vt0, t1, v0 WHERE (((v0.c0 IN ()) IN (((NULL) BETWEEN (v0.c1) AND (t1.c0)))));
SELECT MIN(v0.c2) FROM vt0, t1, v0 WHERE (((v0.c0 IN ()) IN (((NULL) BETWEEN (v0.c1) AND (t1.c0))))) ORDER BY UNLIKELY(DISTINCT (- (vt0.c1))) ASC, CASE ((v0.c1)>=(v0.c2))  WHEN (((t1.c0, vt0.c0, v0.c1, vt0.c1))=((vt0.c0, vt0.c0, vt0.c0, v0.c0))) THEN (((t1.c1, vt0.c1, v0.c0, v0.c1, t1.c1)) BETWEEN ((vt0.c1, t1.c1, t1.c1, v0.c0, v0.c2)) AND ((t1.c0, vt0.c0, v0.c0, v0.c1, vt0.c1))) END ASC  NULLS LAST;
SELECT ALL * FROM v0, t1, vt0 WHERE (((((v0.c2) BETWEEN (t1.c1) AND (t1.c0)))&((NOT (v0.c0))))) ORDER BY ((((((((t1.c2 COLLATE RTRIM)AND(((x'1a73e4') IS TRUE))))OR(((t1.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND(((v0.c1) NOT NULL))))AND(LIKELIHOOD(v0.c0, v0.c1)))  NULLS LAST, LIKELY((((v0.c2, t1.c1)) NOT BETWEEN (('1038010726', t1.c0)) AND ((t1.c0, v0.c0)))) ASC  NULLS FIRST;
SELECT * FROM v0, t1, vt0 WHERE (((((v0.c2) BETWEEN (t1.c1) AND (t1.c0)))&((NOT (v0.c0))))) ORDER BY ((((vt0.c0)=(vt0.c1))) ISNULL) ASC  NULLS FIRST, v0.c0  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM v0, t1, vt0 WHERE (((((v0.c2) BETWEEN (t1.c1) AND (t1.c0)))&((NOT (v0.c0))))) ORDER BY ((((((((t1.c2 COLLATE RTRIM)AND(((x'1a73e4') IS TRUE))))OR(((t1.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND(((v0.c1) NOT NULL))))AND(LIKELIHOOD(v0.c0, v0.c1)))  NULLS LAST, LIKELY((((v0.c2, t1.c1)) NOT BETWEEN (('1038010726', t1.c0)) AND ((t1.c0, v0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN t1 INNER JOIN v0 ON CAST(t1.c0 AS INTEGER) WHERE (((((((vt0.c1)GLOB(v0.c2)))AND(TYPEOF('䧢'))))OR(CAST(v0.c1 AS BLOB)))) ORDER BY (((CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN v0.c2 THEN t1.c1 WHEN t1.c1 THEN vt0.c1 ELSE vt0.c0 END))=(((((t1.c0, v0.c0, t1.c2))>=((v0.c1, vt0.c1, t1.c0)))))) ASC  NULLS LAST, ((((v0.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) ISNULL)  NULLS FIRST;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 INNER JOIN v0 ON CAST(t1.c0 AS INTEGER) WHERE (((((((((vt0.c1)GLOB(v0.c2)))AND(TYPEOF('䧢'))))OR(CAST(v0.c1 AS BLOB))))AND('0.20921173888960787'))) ORDER BY ((((vt0.c1 IN ()), vt0.c0 COLLATE RTRIM, (t1.c1 IN (NULL)), (- (t1.c2))))<((((((v0.c0)OR(v0.c2)))OR(vt0.c1)), (('0.0')==(v0.c1)), ((t1.c1)/(vt0.c1)), vt0.c1 COLLATE NOCASE))) ASC, 1.28282561E8  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN t1 INNER JOIN v0 ON CAST(t1.c0 AS INTEGER) WHERE (((((((vt0.c1)GLOB(v0.c2)))AND(TYPEOF('䧢'))))OR(CAST(v0.c1 AS BLOB)))) ORDER BY (((CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN v0.c2 THEN t1.c1 WHEN t1.c1 THEN vt0.c1 ELSE vt0.c0 END))=(((((t1.c0, v0.c0, t1.c2))>=((v0.c1, vt0.c1, t1.c0)))))) ASC  NULLS LAST, ((((v0.c1) NOT BETWEEN (t1.c0) AND (t1.c0))) ISNULL)  NULLS FIRST;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t1 INNER JOIN v0 ON CAST(t1.c0 AS INTEGER) WHERE (((((((((vt0.c1)GLOB(v0.c2)))AND(TYPEOF('䧢'))))OR(CAST(v0.c1 AS BLOB))))AND('0.20921173888960787'))) ORDER BY ((((vt0.c1 IN ()), vt0.c0 COLLATE RTRIM, (t1.c1 IN (NULL)), (- (t1.c2))))<((((((v0.c0)OR(v0.c2)))OR(vt0.c1)), (('0.0')==(v0.c1)), ((t1.c1)/(vt0.c1)), vt0.c1 COLLATE NOCASE))) ASC, 1.28282561E8  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c2 COLLATE NOCASE))<=(((v0.c2 IN (v0.c2))))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c2 COLLATE NOCASE))<=(((v0.c2 IN (v0.c2))))))AND((('41028994') NOT BETWEEN (((vt0.c0)-(v0.c1))) AND ((vt0.c1 IN (v0.c0))))))) LIMIT 1;
SELECT * FROM v0, vt0 WHERE (((((((((('u<6tO')AND(vt0.c0)))AND(v0.c0)))OR(0.48989342620039233)))AND(v0.c1)) IN (((vt0.c0)IS(v0.c2)))));
SELECT ALL * FROM v0, vt0 WHERE (((((((((('u<6tO')AND(vt0.c0)))AND(v0.c0)))OR(0.48989342620039233)))AND(v0.c1)) IN (((vt0.c0)IS(v0.c2))))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((((v0.c0)AND(v0.c0)))AND(vt0.c0))) AND (CAST(NULL AS BLOB))) ASC INTERSECT SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((((v0.c0)AND(v0.c0)))AND(vt0.c0))) AND (CAST(NULL AS BLOB))) ASC;
SELECT * FROM v0, vt0 WHERE (((((((((('u<6tO')AND(vt0.c0)))AND(v0.c0)))OR(0.48989342620039233)))AND(v0.c1)) IN (((vt0.c0)IS(v0.c2)))));
SELECT ALL * FROM v0, vt0 WHERE (((((((((('u<6tO')AND(vt0.c0)))AND(v0.c0)))OR(0.48989342620039233)))AND(v0.c1)) IN (((vt0.c0)IS(v0.c2))))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((((v0.c0)AND(v0.c0)))AND(vt0.c0))) AND (CAST(NULL AS BLOB))) ASC INTERSECT SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((((v0.c0)AND(v0.c0)))AND(vt0.c0))) AND (CAST(NULL AS BLOB))) ASC;
SELECT MAX(t1.c1) FROM v0, t1 WHERE (((t1.c1) BETWEEN (CASE t1.c1  WHEN v0.c1 THEN v0.c1 ELSE t1.c0 END) AND (CAST(v0.c2 AS REAL))));
SELECT DISTINCT MAX(t1.c1) FROM v0, t1 WHERE (((((t1.c1) BETWEEN (CASE t1.c1  WHEN v0.c1 THEN v0.c1 ELSE t1.c0 END) AND (CAST(v0.c2 AS REAL))))AND((((v0.c1) IS FALSE) IN ((((v0.c1, v0.c1))=((v0.c0, t1.c1))), ((((((t1.c1)OR(t1.c1)))OR(v0.c0)))OR(v0.c0))))))) ORDER BY (((((((NULL, v0.c2, v0.c1, t1.c0, v0.c0)) BETWEEN ((t1.c0, v0.c0, t1.c0, v0.c1, t1.c0)) AND ((v0.c2, v0.c0, v0.c2, v0.c2, v0.c1))))AND(v0.c1 COLLATE BINARY)))OR(((((((v0.c0)AND(t1.c1)))OR(v0.c1)))OR(v0.c0)))), ((((((((v0.c1)OR('?VylG]')))AND(v0.c1)))AND(t1.c2))) BETWEEN (x'207a') AND ((((t1.c2, v0.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((v0.c0, t1.c0))))) ASC LIMIT 2;
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((NULL)>>(v0.c1))))) ORDER BY x'ee' ASC, TYPEOF((v0.c2 IN (v0.c1))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (((NULL)>>(v0.c1)))))AND(((- (v0.c1)) IN (((v0.c1)<=(v0.c0))))))) ORDER BY ((CAST(v0.c1 AS REAL)) BETWEEN (TRIM(v0.c1)) AND (((v0.c0)>>(v0.c1))))  NULLS FIRST, CASE ((((((v0.c2)AND(v0.c1)))OR(v0.c2)))AND(v0.c1))  WHEN (((v0.c2, v0.c1)) NOT BETWEEN ((v0.c1, v0.c2)) AND ((v0.c0, v0.c2))) THEN v0.c0 WHEN (v0.c1 IN (v0.c2)) THEN TYPEOF(v0.c2) END  NULLS LAST, CASE v0.c2  WHEN ((v0.c0)<(v0.c0)) THEN ((v0.c2)|(NULL)) WHEN ((((v0.c1)OR(v0.c1)))OR(v0.c2)) THEN ((v0.c1) ISNULL) ELSE (~ (v0.c0)) END DESC LIMIT 1;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON x'5bcbacb350' INNER JOIN t1 ON (- (vt0.c1)) WHERE (((t1.c0) ISNULL)) ORDER BY SQLITE_VERSION() ASC;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON x'5bcbacb350' INNER JOIN t1 ON (- (vt0.c1)) WHERE (((t1.c0) ISNULL)) ORDER BY (((v0.c1, vt0.c1, t1.c0)) BETWEEN ((((vt0.c1) NOT NULL), CASE 'V6{PABoz'  WHEN v0.c0 THEN t1.c1 END, '')) AND ((t1.c2 COLLATE RTRIM, ((t1.c1)<(v0.c0)), (((vt0.c0, v0.c1))<((t1.c2, t1.c2)))))) ASC;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON x'5bcbacb350' INNER JOIN t1 ON (- (vt0.c1)) WHERE (((t1.c0) ISNULL)) ORDER BY SQLITE_VERSION() ASC;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON x'5bcbacb350' INNER JOIN t1 ON (- (vt0.c1)) WHERE (((t1.c0) ISNULL)) ORDER BY (((v0.c1, vt0.c1, t1.c0)) BETWEEN ((((vt0.c1) NOT NULL), CASE 'V6{PABoz'  WHEN v0.c0 THEN t1.c1 END, '')) AND ((t1.c2 COLLATE RTRIM, ((t1.c1)<(v0.c0)), (((vt0.c0, v0.c1))<((t1.c2, t1.c2)))))) ASC;
SELECT * FROM vt0, t1 LEFT OUTER JOIN v0 ON ((((((1.040163858E9)AND(vt0.c0)))AND(CAST(t1.c0 AS BLOB))))AND(((vt0.c1)+(t1.c1)))) WHERE (CAST((v0.c0 IN (t1.c0)) AS NUMERIC)) ORDER BY (((t1.c2)) BETWEEN ((((vt0.c1) IS TRUE))) AND ((((t1.c2)IS NOT(t1.c1))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 INNER JOIN v0 ON ((((((1.040163858E9)AND(vt0.c0)))AND(CAST(t1.c0 AS BLOB))))AND(((vt0.c1)+(t1.c1)))) WHERE (((CAST((v0.c0 IN (t1.c0)) AS NUMERIC))AND(((((((((t1.c2)<<(t1.c2)))AND(CAST(NULL AS BLOB))))AND(0.45535748734721326)))OR(((v0.c2) IS TRUE)))))) ORDER BY TRIM(DISTINCT (('1211546960')<=(v0.c2)), CAST(vt0.c1 AS BLOB)) ASC, CASE v0.c0  WHEN (((t1.c1, t1.c2, '])玙', v0.c2, v0.c2)) BETWEEN ((t1.c1, t1.c1, v0.c2, v0.c2, v0.c1)) AND ((v0.c2, vt0.c1, NULL, t1.c2, t1.c2))) THEN t1.c2 COLLATE NOCASE END DESC  NULLS FIRST, t1.c1 COLLATE NOCASE  NULLS FIRST LIMIT 0;
SELECT * FROM vt0, t1 LEFT OUTER JOIN v0 ON ((((((1.040163858E9)AND(vt0.c0)))AND(CAST(t1.c0 AS BLOB))))AND(((vt0.c1)+(t1.c1)))) WHERE (CAST((v0.c0 IN (t1.c0)) AS NUMERIC)) ORDER BY (((t1.c2)) BETWEEN ((((vt0.c1) IS TRUE))) AND ((((t1.c2)IS NOT(t1.c1))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 INNER JOIN v0 ON ((((((1.040163858E9)AND(vt0.c0)))AND(CAST(t1.c0 AS BLOB))))AND(((vt0.c1)+(t1.c1)))) WHERE (((CAST((v0.c0 IN (t1.c0)) AS NUMERIC))AND(((((((((t1.c2)<<(t1.c2)))AND(CAST(NULL AS BLOB))))AND(0.45535748734721326)))OR(((v0.c2) IS TRUE)))))) ORDER BY TRIM(DISTINCT (('1211546960')<=(v0.c2)), CAST(vt0.c1 AS BLOB)) ASC, CASE v0.c0  WHEN (((t1.c1, t1.c2, '])玙', v0.c2, v0.c2)) BETWEEN ((t1.c1, t1.c1, v0.c2, v0.c2, v0.c1)) AND ((v0.c2, vt0.c1, NULL, t1.c2, t1.c2))) THEN t1.c2 COLLATE NOCASE END DESC  NULLS FIRST, t1.c1 COLLATE NOCASE  NULLS FIRST LIMIT 0;
SELECT * FROM t1 CROSS JOIN v0 ON t1.c1 COLLATE BINARY LEFT OUTER JOIN vt0 ON ((t1.c1)GLOB(((v0.c0) ISNULL))) WHERE ((NOT (v0.c0))) ORDER BY ((((((((vt0.c1)OR('X')))OR(t1.c0)))OR(t1.c2)))OR(vt0.c0)) COLLATE BINARY  NULLS LAST, (((((x'')) BETWEEN ((t1.c2)) AND ((v0.c1)))) NOTNULL) DESC  NULLS LAST, 'xn' COLLATE RTRIM;
SELECT ALL * FROM t1 CROSS JOIN v0 ON t1.c1 COLLATE BINARY LEFT OUTER JOIN vt0 ON ((t1.c1)GLOB(((v0.c0) ISNULL))) WHERE ((((NOT (v0.c0)))AND(LIKELIHOOD((t1.c0 IN ()), (- (v0.c0)))))) ORDER BY ((((((((vt0.c1)OR('X')))OR(t1.c0)))OR(t1.c2)))OR(vt0.c0)) COLLATE BINARY  NULLS LAST, (((((x'')) BETWEEN ((t1.c2)) AND ((v0.c1)))) NOTNULL) DESC  NULLS LAST, 'xn' COLLATE RTRIM;
SELECT * FROM t1 CROSS JOIN v0 ON t1.c1 COLLATE BINARY LEFT OUTER JOIN vt0 ON ((t1.c1)GLOB(((v0.c0) ISNULL))) WHERE ((NOT (v0.c0))) ORDER BY ((((((((vt0.c1)OR('X')))OR(t1.c0)))OR(t1.c2)))OR(vt0.c0)) COLLATE BINARY  NULLS LAST, (((((x'')) BETWEEN ((t1.c2)) AND ((v0.c1)))) NOTNULL) DESC  NULLS LAST, 'xn' COLLATE RTRIM;
SELECT ALL * FROM t1 CROSS JOIN v0 ON t1.c1 COLLATE BINARY LEFT OUTER JOIN vt0 ON ((t1.c1)GLOB(((v0.c0) ISNULL))) WHERE ((((NOT (v0.c0)))AND(LIKELIHOOD((t1.c0 IN ()), (- (v0.c0)))))) ORDER BY ((((((((vt0.c1)OR('X')))OR(t1.c0)))OR(t1.c2)))OR(vt0.c0)) COLLATE BINARY  NULLS LAST, (((((x'')) BETWEEN ((t1.c2)) AND ((v0.c1)))) NOTNULL) DESC  NULLS LAST, 'xn' COLLATE RTRIM;
SELECT * FROM vt0 CROSS JOIN t1 ON (~ (((((((((((((((((((t1.c0)OR(v0.c1)))OR(v0.c1)))OR(t1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(t1.c0)))AND(t1.c1)))AND(vt0.c1)))OR(vt0.c0)))) INNER JOIN v0 ON (((t1.c1) NOT NULL) IN (((vt0.c1) IS TRUE))) WHERE ('-1573843736');
SELECT DISTINCT * FROM vt0 CROSS JOIN t1 ON (~ (((((((((((((((((((t1.c0)OR(v0.c1)))OR(v0.c1)))OR(t1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(t1.c0)))AND(t1.c1)))AND(vt0.c1)))OR(vt0.c0)))) INNER JOIN v0 ON (((t1.c1) NOT NULL) IN (((vt0.c1) IS TRUE))) WHERE ((('-1573843736')AND((((((((('1226535833')OR(((-188391506)>(t1.c1)))))OR(((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CASE v0.c2  WHEN vt0.c0 THEN v0.c2 ELSE vt0.c0 END)))OR('544758943'))))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0 CROSS JOIN t1 ON (~ (((((((((((((((((((t1.c0)OR(v0.c1)))OR(v0.c1)))OR(t1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(t1.c0)))AND(t1.c1)))AND(vt0.c1)))OR(vt0.c0)))) INNER JOIN v0 ON (((t1.c1) NOT NULL) IN (((vt0.c1) IS TRUE))) WHERE (vt0.c0) LIMIT 0X3;
SELECT * FROM vt0 CROSS JOIN t1 ON (~ (((((((((((((((((((t1.c0)OR(v0.c1)))OR(v0.c1)))OR(t1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(t1.c0)))AND(t1.c1)))AND(vt0.c1)))OR(vt0.c0)))) INNER JOIN v0 ON (((t1.c1) NOT NULL) IN (((vt0.c1) IS TRUE))) WHERE ('-1573843736');
SELECT DISTINCT * FROM vt0 CROSS JOIN t1 ON (~ (((((((((((((((((((t1.c0)OR(v0.c1)))OR(v0.c1)))OR(t1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(t1.c0)))AND(t1.c1)))AND(vt0.c1)))OR(vt0.c0)))) INNER JOIN v0 ON (((t1.c1) NOT NULL) IN (((vt0.c1) IS TRUE))) WHERE ((('-1573843736')AND((((((((('1226535833')OR(((-188391506)>(t1.c1)))))OR(((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CASE v0.c2  WHEN vt0.c0 THEN v0.c2 ELSE vt0.c0 END)))OR('544758943'))))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0 CROSS JOIN t1 ON (~ (((((((((((((((((((t1.c0)OR(v0.c1)))OR(v0.c1)))OR(t1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(t1.c0)))AND(t1.c1)))AND(vt0.c1)))OR(vt0.c0)))) INNER JOIN v0 ON (((t1.c1) NOT NULL) IN (((vt0.c1) IS TRUE))) WHERE (vt0.c0) LIMIT 0X3;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((IFNULL(vt0.c1, '1709102821')) BETWEEN (((vt0.c1)<<(vt0.c0))) AND (0xffffffffe45f74e6)));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((((IFNULL(vt0.c1, '1709102821')) BETWEEN (((vt0.c1)<<(vt0.c0))) AND (0Xffffffffe45f74e6)))AND('816173710'))) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM, UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE) ASC  NULLS LAST INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (CASE (+ (vt0.c1))  WHEN 0.9269629457049134 THEN (((((('k')OR(vt0.c1)))AND(x'f00b1451')))OR(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN vt0.c0 COLLATE BINARY END) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM, UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON (((0x4877efd9)) BETWEEN ((CASE t1.c0  WHEN t1.c2 THEN vt0.c1 ELSE vt0.c0 END)) AND ((vt0.c0))) WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c1)=(vt0.c0)))) AND ((((t1.c0) NOT BETWEEN (NULL) AND (t1.c0)))))) ORDER BY (((((vt0.c1)<(vt0.c0)), vt0.c0 COLLATE BINARY))<((t1.c2 COLLATE BINARY, CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END))) DESC, (- (CAST(t1.c1 AS BLOB)))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1 INNER JOIN vt0 ON (((0X4877efd9)) BETWEEN ((CASE t1.c0  WHEN t1.c2 THEN vt0.c1 ELSE vt0.c0 END)) AND ((vt0.c0))) WHERE ((((t1.c1)) NOT BETWEEN ((((t1.c1)<=(vt0.c0)))) AND ((((t1.c0) NOT BETWEEN (NULL) AND (t1.c0)))))) ORDER BY (((((vt0.c1)<(vt0.c0)), vt0.c0 COLLATE BINARY))<((t1.c2 COLLATE BINARY, CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END))) DESC, (- (CAST(t1.c1 AS BLOB)))  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM t1 INNER JOIN vt0 ON (((1215819737)) BETWEEN ((CASE t1.c0  WHEN t1.c2 THEN vt0.c1 ELSE vt0.c0 END)) AND ((vt0.c0))) WHERE (CAST(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c2)))OR(t1.c0)) AS BLOB)) ORDER BY (((((vt0.c1)<(vt0.c0)), vt0.c0 COLLATE BINARY))<((t1.c2 COLLATE BINARY, CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END))) DESC, (- (CAST(t1.c1 AS BLOB)))  NULLS LAST;
SELECT ALL MIN(v0.c2) FROM v0, vt0 WHERE (CAST(((v0.c1) BETWEEN (vt0.c1) AND (v0.c2)) AS REAL)) ORDER BY (((NOT (vt0.c1))) BETWEEN ((((v0.c0, v0.c1, v0.c1)) BETWEEN ((1.785187513E9, vt0.c1, v0.c1)) AND (('1328373436', vt0.c1, 0.5167874371160494)))) AND ((+ (v0.c0)))) DESC, ((CAST(vt0.c1 AS REAL))IS(0.04374595958760508));
SELECT DISTINCT MIN(v0.c2) FROM v0, vt0 WHERE (CAST(((v0.c1) BETWEEN (vt0.c1) AND (v0.c2)) AS REAL)) ORDER BY (((NOT (vt0.c1))) BETWEEN ((((v0.c0, v0.c1, v0.c1)) BETWEEN ((1.785187513E9, vt0.c1, v0.c1)) AND (('1328373436', vt0.c1, 0.5167874371160494)))) AND ((+ (v0.c0)))) DESC, ((CAST(vt0.c1 AS REAL))IS(0.04374595958760508)) INTERSECT SELECT DISTINCT MIN(v0.c2) FROM v0, vt0 WHERE (v0.c2) ORDER BY (((NOT (vt0.c1))) BETWEEN ((((v0.c0, v0.c1, v0.c1)) BETWEEN ((1.785187513E9, vt0.c1, v0.c1)) AND (('1328373436', vt0.c1, 0.5167874371160494)))) AND ((+ (v0.c0)))) DESC, ((CAST(vt0.c1 AS REAL))IS(0.04374595958760508));
SELECT ALL * FROM vt0 INNER JOIN t1 ON NULL WHERE ('0.10496673429038905') ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON NULL WHERE ('0.10496673429038905') ORDER BY t1.c0  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON NULL WHERE (((ABS(DISTINCT t1.c1))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c2))))) ORDER BY t1.c0  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN t1 ON NULL WHERE ('0.10496673429038905') ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON NULL WHERE ('0.10496673429038905') ORDER BY t1.c0  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON NULL WHERE (((ABS(DISTINCT t1.c1))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c2))))) ORDER BY t1.c0  NULLS LAST;
SELECT MAX(v0.c2) FROM v0, t1, vt0 WHERE (TYPEOF(DISTINCT (((t1.c1, v0.c2)) NOT BETWEEN ((t1.c1, vt0.c0)) AND ((t1.c0, v0.c1)))));
SELECT MAX(v0.c2) FROM v0, t1, vt0 WHERE (((TYPEOF(DISTINCT (((t1.c1, v0.c2)) NOT BETWEEN ((t1.c1, vt0.c0)) AND ((t1.c0, v0.c1)))))AND(CAST(((vt0.c0) BETWEEN (t1.c0) AND (vt0.c1)) AS NUMERIC)))) ORDER BY vt0.c0, t1.c2  NULLS FIRST INTERSECT SELECT ALL MAX(v0.c2) FROM v0, t1, vt0 WHERE (CAST(CASE t1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t1.c0 END AS REAL)) ORDER BY vt0.c0, t1.c2  NULLS FIRST;
SELECT MIN(vt0.c1) FROM t1, vt0 WHERE (rtreenode(CAST(t1.c2 AS BLOB), CASE WHEN NULL THEN t1.c2 WHEN t1.c2 THEN t1.c0 ELSE t1.c1 END)) ORDER BY ((t1.c1 IN (vt0.c1)) IN (((vt0.c0)>>(t1.c1)))) DESC  NULLS LAST, LIKELY(((t1.c2) NOT NULL));
SELECT MIN(vt0.c1) FROM t1, vt0 WHERE (rtreenode(CAST(t1.c2 AS BLOB), CASE WHEN NULL THEN t1.c2 WHEN t1.c2 THEN t1.c0 ELSE t1.c1 END)) ORDER BY CASE x'ba1c'  WHEN t1.c1 COLLATE BINARY THEN ((NULL)&(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END ASC;
SELECT ALL MIN(v0.c0) FROM v0 WHERE (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END COLLATE BINARY) ORDER BY '-745046801' DESC, (((((((((((v0.c2))<((v0.c2))))OR(((v0.c2) IS TRUE))))OR('d	c<v36')))OR(x'e9')))AND(((v0.c0) BETWEEN (v0.c1) AND (v0.c2)))) ASC;
SELECT ALL MIN(v0.c0) FROM v0 WHERE (((CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END COLLATE BINARY)AND(((v0.c1 COLLATE RTRIM) NOT BETWEEN ((((v0.c0))=((v0.c0)))) AND (v0.c1))))) ORDER BY '-745046801' DESC, (((((((((((v0.c2))<((v0.c2))))OR(((v0.c2) IS TRUE))))OR('d	c<v36')))OR(x'e9')))AND(((v0.c0) BETWEEN (v0.c1) AND (v0.c2)))) ASC;
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (((((((((v0.c0)==(t1.c2)))OR(0.7681875254723884)))OR(((vt0.c1)%(t1.c0)))))OR(((x'')<>(v0.c2)))));
SELECT DISTINCT COUNT(*) FROM vt0, t1, v0 WHERE (((((((((((v0.c0)==(t1.c2)))OR(0.7681875254723884)))OR(((vt0.c1)%(t1.c0)))))OR(((x'')<(v0.c2)))))AND((~ (v0.c0)) COLLATE RTRIM))) ORDER BY (((((t1.c1)) BETWEEN ((x'f74a')) AND ((v0.c1))))>=(t1.c2)), ((((((((IFNULL(DISTINCT vt0.c0, t1.c2))AND(CAST(v0.c2 AS BLOB))))AND(vt0.c0)))OR(CAST(v0.c0 AS REAL))))AND(TIME(vt0.c0, 0Xffffffffdb7fc14d, vt0.c0))) ASC  NULLS FIRST, (((((NULL IN (t1.c2)))OR(CAST(t1.c0 AS REAL))))OR(((vt0.c0) ISNULL))), ((t1.c1 COLLATE NOCASE)IS((x'ef42' IN (t1.c1)))) DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0)+(vt0.c1)))*((~ (vt0.c0))))) ORDER BY '%,-*thy''''' DESC, HEX(DISTINCT MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)+(vt0.c1)))*((~ (vt0.c0))))) ORDER BY '%,-*thy''''' DESC, HEX(DISTINCT MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0)+(vt0.c1)))*((~ (vt0.c0))))) ORDER BY '%,-*thy''''' DESC, HEX(DISTINCT MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)+(vt0.c1)))*((~ (vt0.c0))))) ORDER BY '%,-*thy''''' DESC, HEX(DISTINCT MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0))  NULLS FIRST;
SELECT MIN(v0.c2) FROM v0 WHERE (CAST(v0.c1 COLLATE NOCASE AS INTEGER));
SELECT DISTINCT MIN(v0.c2) FROM v0 WHERE (((CAST(v0.c1 COLLATE NOCASE AS INTEGER))AND(-1196239477))) ORDER BY ((v0.c0) IS TRUE) ASC  NULLS LAST LIMIT 0x1;
SELECT * FROM t1 WHERE ((((((t1.c1, t1.c1))>((t1.c0, t1.c1)))) IS FALSE));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c1))>((t1.c0, t1.c1)))) IS FALSE));
SELECT * FROM t1 WHERE ((((((t1.c1, t1.c1))>((t1.c0, t1.c1)))) IS FALSE));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, t1.c1))>((t1.c0, t1.c1)))) IS FALSE));
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c2)) AND ((t1.c1, t1.c0)))) NOT NULL)) ORDER BY CASE t1.c1  WHEN COALESCE(t1.c0, t1.c1, t1.c2) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0) BETWEEN (t1.c2) AND (t1.c2)) THEN ((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) WHEN (NOT (t1.c2)) THEN ((t1.c1)IS NOT(t1.c2)) WHEN ((t1.c2)LIKE(t1.c1)) THEN t1.c0 ELSE t1.c1 END  NULLS LAST, CASE (+ (t1.c0))  WHEN ((t1.c2)<<(t1.c2)) THEN ((t1.c2)==(t1.c0)) WHEN ((t1.c2)/(t1.c2)) THEN ((t1.c1)-(t1.c2)) WHEN CAST(t1.c1 AS NUMERIC) THEN '0.3903627172384331' WHEN t1.c0 THEN ((((((((t1.c0)AND(t1.c2)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)) ELSE t1.c2 END ASC  NULLS FIRST, (((- (t1.c0)))>=(((t1.c0)<<(t1.c0))))  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((((((t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c2)) AND ((t1.c1, t1.c0)))) NOT NULL))AND(((((((t1.c0 COLLATE NOCASE)OR((~ (x'')))))OR((0.9417323762917162 IN ()))))OR(((((t1.c0)AND(t1.c0)))AND(t1.c0))))))) ORDER BY (- ((((t1.c0)) BETWEEN ((t1.c0)) AND (('-2137142598')))))  NULLS FIRST, (((ABS(t1.c0)))<((t1.c2)))  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (CAST(0.5422397432676856 AS INTEGER));
SELECT * FROM vt0, t1 WHERE (((CAST(0.5422397432676856 AS INTEGER))AND((((t1.c0)) NOT BETWEEN ((RTRIM(vt0.c1))) AND ((((t1.c1) NOT BETWEEN ('B./dr') AND (t1.c0)))))))) LIMIT 0x0 INTERSECT SELECT * FROM vt0, t1 WHERE ((((((vt0.c1)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))<>((~ (t1.c1))))) LIMIT 0;
SELECT * FROM vt0, t1 WHERE (CAST(0.5422397432676856 AS INTEGER));
SELECT * FROM vt0, t1 WHERE (((CAST(0.5422397432676856 AS INTEGER))AND((((t1.c0)) NOT BETWEEN ((RTRIM(vt0.c1))) AND ((((t1.c1) NOT BETWEEN ('B./dr') AND (t1.c0)))))))) LIMIT 0x0 INTERSECT SELECT * FROM vt0, t1 WHERE ((((((vt0.c1)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))<>((~ (t1.c1))))) LIMIT 0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0)) AND ((vt0.c0, vt0.c0))), (((vt0.c0))>((vt0.c0))), ((vt0.c0)|(vt0.c1)), ((-1836003402) IS FALSE), CASE WHEN '617744541' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND ((((vt0.c1)>(vt0.c1)), 0.30819996886917367, vt0.c1, ((vt0.c1) NOTNULL), ((((((((((((x'')AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))))) ORDER BY NULL DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0)) AND ((vt0.c0, vt0.c0))), (((vt0.c0))>((vt0.c0))), ((vt0.c0)|(vt0.c1)), ((-1836003402) IS FALSE), CASE WHEN '617744541' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND ((((vt0.c1)>(vt0.c1)), 0.30819996886917367, vt0.c1, ((vt0.c1) NOTNULL), ((((((((((((x'')AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))))) ORDER BY NULL DESC LIMIT 0X1;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0)) AND ((vt0.c0, vt0.c0))), (((vt0.c0))>((vt0.c0))), ((vt0.c0)|(vt0.c1)), ((-1836003402) IS FALSE), CASE WHEN '617744541' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND ((((vt0.c1)>(vt0.c1)), 0.30819996886917367, vt0.c1, ((vt0.c1) NOTNULL), ((((((((((((x'')AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))))) ORDER BY NULL DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0)) AND ((vt0.c0, vt0.c0))), (((vt0.c0))>((vt0.c0))), ((vt0.c0)|(vt0.c1)), ((-1836003402) IS FALSE), CASE WHEN '617744541' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND ((((vt0.c1)>(vt0.c1)), 0.30819996886917367, vt0.c1, ((vt0.c1) NOTNULL), ((((((((((((x'')AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))))) ORDER BY NULL DESC LIMIT 0X1;
SELECT * FROM v0 NATURAL JOIN t1 WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (ABS(t1.c1)) AND (((t1.c0)!=(t1.c0)))));
SELECT ALL * FROM v0 NATURAL JOIN t1 WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (ABS(t1.c1)) AND (((t1.c0)>(t1.c0))))) LIMIT 0;
SELECT * FROM v0 NATURAL JOIN t1 WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (ABS(t1.c1)) AND (((t1.c0)!=(t1.c0)))));
SELECT ALL * FROM v0 NATURAL JOIN t1 WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (ABS(t1.c1)) AND (((t1.c0)>(t1.c0))))) LIMIT 0;
SELECT ALL * FROM t1, v0, vt0 WHERE (x'fa');
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((x'fa')AND(((t1.c2)-(1.15292246E8))))) LIMIT 0x1;
SELECT ALL * FROM t1, v0, vt0 WHERE (x'fa');
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((x'fa')AND(((t1.c2)-(1.15292246E8))))) LIMIT 0x1;
SELECT ALL MAX(v0.c1) FROM vt0, v0 CROSS JOIN t1 ON TRIM(vt0.c0 COLLATE BINARY) WHERE ((NOT (vt0.c0)));
SELECT DISTINCT MAX(v0.c1) FROM vt0, v0 CROSS JOIN t1 ON TRIM(vt0.c0 COLLATE BINARY) WHERE ((((NOT (vt0.c0)))AND((((0.34419375245572614)IS(v0.c0)) IN (((70772944)<(t1.c0)), t1.c2 COLLATE BINARY))))) LIMIT 2;
SELECT ALL * FROM vt0, v0, t1 WHERE ((~ (vt0.c0)) COLLATE RTRIM) ORDER BY (NOT (((NULL) ISNULL))), CAST((- (v0.c1)) AS TEXT) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((~ (vt0.c0)) COLLATE RTRIM)AND(vt0.c1))) ORDER BY (((t1.c2, v0.c0)) BETWEEN ((((vt0.c1)==(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))) AND ((v0.c2 COLLATE BINARY, (((vt0.c0, 0.4496789914927378))<((v0.c1, t1.c2)))))) INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE (NULLIF(v0.c0, vt0.c1) COLLATE BINARY) ORDER BY (((t1.c2, v0.c0)) BETWEEN ((((vt0.c1)=(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))) AND ((v0.c2 COLLATE BINARY, (((vt0.c0, 0.4496789914927378))<((v0.c1, t1.c2))))));
SELECT ALL * FROM vt0, v0, t1 WHERE ((~ (vt0.c0)) COLLATE RTRIM) ORDER BY (NOT (((NULL) ISNULL))), CAST((- (v0.c1)) AS TEXT) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((~ (vt0.c0)) COLLATE RTRIM)AND(vt0.c1))) ORDER BY (((t1.c2, v0.c0)) BETWEEN ((((vt0.c1)==(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))) AND ((v0.c2 COLLATE BINARY, (((vt0.c0, 0.4496789914927378))<((v0.c1, t1.c2)))))) INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE (NULLIF(v0.c0, vt0.c1) COLLATE BINARY) ORDER BY (((t1.c2, v0.c0)) BETWEEN ((((vt0.c1)=(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))) AND ((v0.c2 COLLATE BINARY, (((vt0.c0, 0.4496789914927378))<((v0.c1, t1.c2))))));
SELECT MIN(t1.c2) FROM t1, vt0 WHERE (((NULL)<=(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY t1.c0  NULLS FIRST, ((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c2 THEN vt0.c0 END) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c2) AND (vt0.c0))) AND ((((('f?1佃m?l-')OR(t1.c2)))OR(t1.c1))))  NULLS LAST;
SELECT DISTINCT MIN(t1.c2) FROM t1, vt0 WHERE (((NULL)<=(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY t1.c0  NULLS FIRST, ((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c2 THEN vt0.c0 END) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c2) AND (vt0.c0))) AND ((((('f?1佃m?l-')OR(t1.c2)))OR(t1.c1))))  NULLS LAST LIMIT 2;
SELECT ALL * FROM t1 WHERE ((((((t1.c1)AND(t1.c1)))AND(t1.c0)) IN (((t1.c0) NOT BETWEEN (t1.c1) AND (x'3dcd34')), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)AND(t1.c1)))AND(t1.c0)) IN (((t1.c0) NOT BETWEEN (t1.c1) AND (x'3dcd34')), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))))) LIMIT 0x3;
SELECT ALL * FROM t1 WHERE ((((((t1.c1)AND(t1.c1)))AND(t1.c0)) IN (((t1.c0) NOT BETWEEN (t1.c1) AND (x'3dcd34')), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)AND(t1.c1)))AND(t1.c0)) IN (((t1.c0) NOT BETWEEN (t1.c1) AND (x'3dcd34')), (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1)))))) LIMIT 0x3;
SELECT ALL * FROM vt0, t1 NOT INDEXED WHERE (((UPPER(t1.c1))+(((vt0.c0)/(NULL))))) ORDER BY ((t1.c0) NOT NULL)  NULLS FIRST, (((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c0))))+(((vt0.c1)AND(vt0.c1))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((UPPER(t1.c1))+(((vt0.c0)/(NULL))))) ORDER BY ((t1.c0) NOT NULL)  NULLS FIRST, (((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c0))))+(((vt0.c1)AND(vt0.c1))));
SELECT ALL * FROM vt0, t1 NOT INDEXED WHERE (((UPPER(t1.c1))+(((vt0.c0)/(NULL))))) ORDER BY ((t1.c0) NOT NULL)  NULLS FIRST, (((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c0))))+(((vt0.c1)AND(vt0.c1))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((UPPER(t1.c1))+(((vt0.c0)/(NULL))))) ORDER BY ((t1.c0) NOT NULL)  NULLS FIRST, (((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c0))))+(((vt0.c1)AND(vt0.c1))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c1))) ISNULL))AND('836351456'))) LIMIT 1;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c1))) ISNULL))AND('836351456'))) LIMIT 1;
SELECT ALL COUNT(*) FROM t1, v0 WHERE ((~ ('3-<g')));
SELECT DISTINCT COUNT(*) FROM t1, v0 WHERE ((((~ ('3-<g')))AND((NOT (((t1.c0)+(v0.c1))))))) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT * FROM t1 LEFT OUTER JOIN v0 ON COALESCE(DISTINCT v0.c2, (NOT (v0.c1)), (((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((v0.c2))), 0x42b6d6f6 COLLATE RTRIM, ((v0.c1)<<(t1.c0))) WHERE (((((t1.c0)-(v0.c0)))>=(((v0.c1) NOT BETWEEN (v0.c0) AND (t1.c2)))));
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN v0 ON COALESCE(DISTINCT v0.c2, (NOT (v0.c1)), (((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((v0.c2))), 0x42b6d6f6 COLLATE RTRIM, ((v0.c1)<<(t1.c0))) WHERE (((((((t1.c0)-(v0.c0)))=(((v0.c1) NOT BETWEEN (v0.c0) AND (t1.c2)))))AND(((((((((v0.c2)OR(v0.c1)))AND(t1.c2)))OR(t1.c2)))/(CAST(v0.c0 AS BLOB)))))) ORDER BY CASE (v0.c1 IN (t1.c1))  WHEN NULLIF(v0.c2, t1.c0) THEN CASE v0.c1  WHEN 1.35398466E8 THEN t1.c1 WHEN t1.c0 THEN x'' ELSE v0.c0 END WHEN 0.051306194040241504 THEN ((t1.c2) BETWEEN (v0.c1) AND (v0.c2)) WHEN CAST(t1.c2 AS TEXT) THEN CAST(t1.c1 AS INTEGER) ELSE (~ (1.439138116E9)) END DESC  NULLS FIRST, CAST(((v0.c0)>>(v0.c1)) AS TEXT)  NULLS LAST;
SELECT * FROM t1 LEFT OUTER JOIN v0 ON COALESCE(DISTINCT v0.c2, (NOT (v0.c1)), (((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((v0.c2))), 0x42b6d6f6 COLLATE RTRIM, ((v0.c1)<<(t1.c0))) WHERE (((((t1.c0)-(v0.c0)))>=(((v0.c1) NOT BETWEEN (v0.c0) AND (t1.c2)))));
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN v0 ON COALESCE(DISTINCT v0.c2, (NOT (v0.c1)), (((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((v0.c2))), 0x42b6d6f6 COLLATE RTRIM, ((v0.c1)<<(t1.c0))) WHERE (((((((t1.c0)-(v0.c0)))=(((v0.c1) NOT BETWEEN (v0.c0) AND (t1.c2)))))AND(((((((((v0.c2)OR(v0.c1)))AND(t1.c2)))OR(t1.c2)))/(CAST(v0.c0 AS BLOB)))))) ORDER BY CASE (v0.c1 IN (t1.c1))  WHEN NULLIF(v0.c2, t1.c0) THEN CASE v0.c1  WHEN 1.35398466E8 THEN t1.c1 WHEN t1.c0 THEN x'' ELSE v0.c0 END WHEN 0.051306194040241504 THEN ((t1.c2) BETWEEN (v0.c1) AND (v0.c2)) WHEN CAST(t1.c2 AS TEXT) THEN CAST(t1.c1 AS INTEGER) ELSE (~ (1.439138116E9)) END DESC  NULLS FIRST, CAST(((v0.c0)>>(v0.c1)) AS TEXT)  NULLS LAST;
SELECT MAX(v0.c2) FROM t1, vt0 INNER JOIN v0 ON (((t1.c2, v0.c1))!=((vt0.c0, t1.c1))) COLLATE BINARY WHERE (((((((((((((t1.c1)AND(v0.c2)))OR(v0.c2)))OR(((v0.c2) ISNULL))))AND(((v0.c1) IS FALSE))))OR((NOT (v0.c1)))))OR(CAST(vt0.c0 AS TEXT))));
SELECT ALL MAX(v0.c2) FROM t1, vt0 INNER JOIN v0 ON (((t1.c2, v0.c1))<>((vt0.c0, t1.c1))) COLLATE BINARY WHERE (((((((((((((((t1.c1)AND(v0.c2)))OR(v0.c2)))OR(((v0.c2) ISNULL))))AND(((v0.c1) IS FALSE))))OR((NOT (v0.c1)))))OR(CAST(vt0.c0 AS TEXT))))AND(((((((v0.c1) NOT BETWEEN (t1.c2) AND (t1.c2)))AND(CASE WHEN '-1128725056' THEN vt0.c1 WHEN v0.c1 THEN t1.c0 ELSE t1.c1 END)))OR(((((((((t1.c0)OR(t1.c2)))AND(v0.c0)))OR(v0.c2)))OR(t1.c1)))))));
SELECT ALL MIN(t1.c1) FROM t1 LEFT OUTER JOIN v0 ON RTRIM(NULL) WHERE (CAST(PRINTF(t1.c2, v0.c2, t1.c0) AS TEXT));
SELECT ALL MIN(t1.c1) FROM t1 LEFT OUTER JOIN v0 ON RTRIM(NULL) WHERE (CAST(PRINTF(t1.c2, v0.c2, t1.c0) AS TEXT)) ORDER BY (((((t1.c1)<=(t1.c0))))<=(('|' COLLATE NOCASE)))  NULLS FIRST, ((((((NULL COLLATE BINARY)AND(-1.341530015E9)))AND(CAST(v0.c1 AS REAL))))OR(t1.c2)) ASC  NULLS FIRST, CAST((((v0.c1, t1.c0))<((t1.c1, 'ṳ(*'))) AS TEXT) DESC;
SELECT MAX(v0.c2) FROM vt0, t1, v0 WHERE (CASE WHEN ((((((vt0.c1)AND(v0.c1)))OR(v0.c1)))OR(vt0.c0)) THEN t1.c2 WHEN (((v0.c1, t1.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, v0.c2))) THEN json_quote(v0.c1) ELSE LIKELY(vt0.c1) END) ORDER BY CASE (t1.c0 IN ())  WHEN LOWER(vt0.c0) THEN (~ (v0.c1)) END;
SELECT ALL MAX(v0.c2) FROM vt0, t1, v0 WHERE (CASE WHEN ((((((vt0.c1)AND(v0.c1)))OR(v0.c1)))OR(vt0.c0)) THEN t1.c2 WHEN (((v0.c1, t1.c0)) BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, v0.c2))) THEN json_quote(v0.c1) ELSE LIKELY(vt0.c1) END) ORDER BY CAST((t1.c1 IN (vt0.c0)) AS TEXT) DESC, (((t1.c2) ISNULL) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE ((((vt0.c1, vt0.c0)) NOT BETWEEN ((t1.c2, vt0.c0)) AND ((t1.c0, t1.c2))) COLLATE NOCASE);
SELECT DISTINCT COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE ((((vt0.c1, vt0.c0)) NOT BETWEEN ((t1.c2, vt0.c0)) AND ((t1.c0, t1.c2))) COLLATE NOCASE) LIMIT 0X2;
SELECT MIN(v0.c0) FROM t1, vt0, v0 WHERE (vt0.c0);
SELECT ALL MIN(v0.c0) FROM t1, vt0, v0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)GLOB(v0.c0))) NOT BETWEEN (((((((((v0.c2)AND(x'962a')))OR(v0.c2)))OR(v0.c2)))OR(v0.c0))) AND (RTRIM(v0.c2))));
SELECT DISTINCT COUNT(*) FROM v0 WHERE (((((((v0.c1)GLOB(v0.c0))) NOT BETWEEN (((((((((v0.c2)AND(x'962a')))OR(v0.c2)))OR(v0.c2)))OR(v0.c0))) AND (RTRIM(v0.c2))))AND((((((v0.c0) BETWEEN (v0.c2) AND (v0.c0)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1))))>=(((((v0.c1, v0.c2, v0.c2, v0.c0, v0.c1))<((v0.c0, v0.c0, v0.c0, v0.c2, v0.c0))), ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))))))) LIMIT 1;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c1) IS TRUE))OR(CAST(v0.c1 AS INTEGER))))OR(CASE WHEN v0.c0 THEN x'35cd' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)))OR(CASE WHEN v0.c2 THEN v0.c1 END)))AND(CASE WHEN v0.c1 THEN 0.3084594309206635 END)));
SELECT * FROM v0 WHERE (((((((((((((v0.c1) IS TRUE))OR(CAST(v0.c1 AS INTEGER))))OR(CASE WHEN v0.c0 THEN x'35cd' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)))OR(CASE WHEN v0.c2 THEN v0.c1 END)))AND(CASE WHEN v0.c1 THEN 0.3084594309206635 END)))AND((- (v0.c2)) COLLATE NOCASE))) ORDER BY 'cl', x'20' ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c1) IS TRUE))OR(CAST(v0.c1 AS INTEGER))))OR(CASE WHEN v0.c0 THEN x'35cd' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)))OR(CASE WHEN v0.c2 THEN v0.c1 END)))AND(CASE WHEN v0.c1 THEN 0.3084594309206635 END)));
SELECT * FROM v0 WHERE (((((((((((((v0.c1) IS TRUE))OR(CAST(v0.c1 AS INTEGER))))OR(CASE WHEN v0.c0 THEN x'35cd' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)))OR(CASE WHEN v0.c2 THEN v0.c1 END)))AND(CASE WHEN v0.c1 THEN 0.3084594309206635 END)))AND((- (v0.c2)) COLLATE NOCASE))) ORDER BY 'cl', x'20' ASC  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM vt0, t1, v0 WHERE (IFNULL(CASE WHEN t1.c1 THEN vt0.c1 WHEN t1.c0 THEN v0.c1 WHEN t1.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 END, '(D
'));
SELECT DISTINCT MIN(t1.c0) FROM vt0, t1, v0 WHERE (((IFNULL(CASE WHEN t1.c1 THEN vt0.c1 WHEN t1.c0 THEN v0.c1 WHEN t1.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 END, '(D
'))AND((((CASE t1.c2  WHEN t1.c1 THEN t1.c2 ELSE v0.c1 END, CAST(vt0.c1 AS REAL)))!=(('C', vt0.c0)))))) ORDER BY ((CASE WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END) ISNULL) DESC  NULLS FIRST, ((NULL)IS(((((vt0.c0)AND(v0.c1)))OR(v0.c1)))) DESC  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM vt0, t1, v0 WHERE ((((((((vt0.c0 IN ()))OR(((t1.c0)LIKE(vt0.c0)))))AND('517438636')))AND(((v0.c2) IS TRUE)))) ORDER BY ((CASE WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END) ISNULL) DESC  NULLS FIRST, ((NULL)IS(((((vt0.c0)AND(v0.c1)))OR(v0.c1)))) DESC  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c1)<>(t1.c0)))-((t1.c0 IN (vt0.c0)))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((vt0.c1)<(t1.c0)))-((t1.c0 IN (vt0.c0))))) ORDER BY UPPER((NOT (vt0.c1))) DESC INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((((((((((t1.c0) IS TRUE))OR(vt0.c1 COLLATE RTRIM)))AND('-62875246')))AND(((((t1.c1)AND(vt0.c0)))AND(vt0.c1)))))AND(0.4274281280567863))) ORDER BY UPPER((NOT (vt0.c1))) DESC;
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c1)<>(t1.c0)))-((t1.c0 IN (vt0.c0)))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((vt0.c1)<(t1.c0)))-((t1.c0 IN (vt0.c0))))) ORDER BY UPPER((NOT (vt0.c1))) DESC INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((((((((((t1.c0) IS TRUE))OR(vt0.c1 COLLATE RTRIM)))AND('-62875246')))AND(((((t1.c1)AND(vt0.c0)))AND(vt0.c1)))))AND(0.4274281280567863))) ORDER BY UPPER((NOT (vt0.c1))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))IS((NOT (-2080115895))))) ORDER BY LIKE((((vt0.c1))<=((vt0.c1))), (~ (vt0.c1)), 'F')  NULLS LAST, TRIM(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))IS((NOT (0Xffffffff8403f349))))) ORDER BY vt0.c0 ASC, ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (CASE x''  WHEN vt0.c0 THEN vt0.c0 END) AND ((- (x'ce')))) LIMIT 1 INTERSECT SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)GLOB(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((vt0.c0) IS TRUE) END) ORDER BY vt0.c0 ASC, ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (CASE x''  WHEN vt0.c0 THEN vt0.c0 END) AND ((- (x'ce')))) LIMIT 1;
SELECT MIN(v0.c1) FROM v0 WHERE ((((v0.c1 IN (v0.c2, v0.c2))) BETWEEN (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (UPPER(v0.c2)))) ORDER BY v0.c0  NULLS LAST, (~ ((((v0.c0))<>((v0.c1))))), v0.c0  NULLS FIRST;
SELECT MIN(v0.c1) FROM v0 WHERE ((((((v0.c1 IN (v0.c2))) BETWEEN (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (UPPER(v0.c2))))AND(x''))) ORDER BY v0.c0  NULLS LAST, (~ ((((v0.c0))!=((v0.c1))))), v0.c0  NULLS FIRST LIMIT 0;
SELECT * FROM t1, v0 INNER JOIN vt0 ON CHAR(((v0.c0)%(vt0.c1)), CASE WHEN v0.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 END) WHERE (CASE WHEN v0.c0 THEN ((vt0.c1) BETWEEN (v0.c1) AND (t1.c2)) END);
SELECT DISTINCT * FROM t1, v0 INNER JOIN vt0 ON CHAR(((v0.c0)%(vt0.c1)), CASE WHEN v0.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 END) WHERE (((CASE WHEN v0.c0 THEN ((vt0.c1) BETWEEN (v0.c1) AND (t1.c2)) END)AND(((((x'') NOTNULL)) BETWEEN (v0.c1 COLLATE NOCASE) AND ((((t1.c2, v0.c2, vt0.c1, t1.c1, v0.c1))>=((v0.c0, vt0.c0, t1.c2, t1.c2, t1.c2)))))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1, v0 INNER JOIN vt0 ON CHAR(((v0.c0)%(vt0.c1)), CASE WHEN v0.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 END) WHERE (((((vt0.c1 IN ())))=(('87442466' COLLATE RTRIM)))) LIMIT 0x1;
SELECT * FROM t1, v0 INNER JOIN vt0 ON CHAR(((v0.c0)%(vt0.c1)), CASE WHEN v0.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 END) WHERE (CASE WHEN v0.c0 THEN ((vt0.c1) BETWEEN (v0.c1) AND (t1.c2)) END);
SELECT DISTINCT * FROM t1, v0 INNER JOIN vt0 ON CHAR(((v0.c0)%(vt0.c1)), CASE WHEN v0.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 END) WHERE (((CASE WHEN v0.c0 THEN ((vt0.c1) BETWEEN (v0.c1) AND (t1.c2)) END)AND(((((x'') NOTNULL)) BETWEEN (v0.c1 COLLATE NOCASE) AND ((((t1.c2, v0.c2, vt0.c1, t1.c1, v0.c1))>=((v0.c0, vt0.c0, t1.c2, t1.c2, t1.c2)))))))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1, v0 INNER JOIN vt0 ON CHAR(((v0.c0)%(vt0.c1)), CASE WHEN v0.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 END) WHERE (((((vt0.c1 IN ())))=(('87442466' COLLATE RTRIM)))) LIMIT 0x1;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c2 AS NUMERIC) AS REAL)) ORDER BY NULL ASC, t1.c0  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CAST(CAST(t1.c2 AS NUMERIC) AS REAL))AND(((0X27ba73bc COLLATE NOCASE) IS FALSE)))) ORDER BY CASE WHEN t1.c1 COLLATE BINARY THEN t1.c0 WHEN CAST('' AS REAL) THEN ((t1.c1) ISNULL) END  NULLS FIRST, DATE(COALESCE(t1.c2, t1.c2, t1.c0, t1.c1), ((t1.c2) BETWEEN (t1.c1) AND (t1.c0)), IFNULL(t1.c2, t1.c1), CASE WHEN t1.c1 THEN 0.5291803058694498 ELSE t1.c2 END, ((t1.c2)*(t1.c1))) ASC  NULLS FIRST, (+ (rtreenode(t1.c0, t1.c2))) ASC;
SELECT ALL * FROM t1, vt0 INNER JOIN v0 ON CASE ((v0.c1) NOT BETWEEN (t1.c2) AND (v0.c2))  WHEN ((t1.c0)IS NOT(v0.c1)) THEN ((vt0.c0) IS TRUE) END WHERE ((((((((((((((v0.c0))==((t1.c2))))OR(vt0.c1)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (t1.c2)))))OR(CASE v0.c1  WHEN t1.c0 THEN vt0.c0 ELSE v0.c1 END)))AND((- (v0.c2)))))AND(LIKE(t1.c0, v0.c1)))) ORDER BY CASE WHEN ((t1.c1) BETWEEN (t1.c0) AND (v0.c0)) THEN ((t1.c1)!=(t1.c1)) ELSE vt0.c1 END ASC  NULLS FIRST, ((((2.106321545E9 COLLATE RTRIM)OR((~ (v0.c2)))))AND((+ (t1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt0 INNER JOIN v0 ON CASE ((v0.c1) NOT BETWEEN (t1.c2) AND (v0.c2))  WHEN ((t1.c0)IS NOT(v0.c1)) THEN ((vt0.c0) IS TRUE) END WHERE ((((((((((((((v0.c0))=((t1.c2))))OR(vt0.c1)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (t1.c2)))))OR(CASE v0.c1  WHEN t1.c0 THEN vt0.c0 ELSE v0.c1 END)))AND((- (v0.c2)))))AND(LIKE(t1.c0, v0.c1)))) ORDER BY CASE WHEN ((t1.c1) BETWEEN (t1.c0) AND (v0.c0)) THEN ((t1.c1)!=(t1.c1)) ELSE vt0.c1 END ASC  NULLS FIRST, ((((2.106321545E9 COLLATE RTRIM)OR((~ (v0.c2)))))AND((+ (t1.c0)))) ASC  NULLS LAST LIMIT 0X5;
SELECT ALL * FROM t1, vt0 INNER JOIN v0 ON CASE ((v0.c1) NOT BETWEEN (t1.c2) AND (v0.c2))  WHEN ((t1.c0)IS NOT(v0.c1)) THEN ((vt0.c0) IS TRUE) END WHERE ((((((((((((((v0.c0))==((t1.c2))))OR(vt0.c1)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (t1.c2)))))OR(CASE v0.c1  WHEN t1.c0 THEN vt0.c0 ELSE v0.c1 END)))AND((- (v0.c2)))))AND(LIKE(t1.c0, v0.c1)))) ORDER BY CASE WHEN ((t1.c1) BETWEEN (t1.c0) AND (v0.c0)) THEN ((t1.c1)!=(t1.c1)) ELSE vt0.c1 END ASC  NULLS FIRST, ((((2.106321545E9 COLLATE RTRIM)OR((~ (v0.c2)))))AND((+ (t1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt0 INNER JOIN v0 ON CASE ((v0.c1) NOT BETWEEN (t1.c2) AND (v0.c2))  WHEN ((t1.c0)IS NOT(v0.c1)) THEN ((vt0.c0) IS TRUE) END WHERE ((((((((((((((v0.c0))=((t1.c2))))OR(vt0.c1)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (t1.c2)))))OR(CASE v0.c1  WHEN t1.c0 THEN vt0.c0 ELSE v0.c1 END)))AND((- (v0.c2)))))AND(LIKE(t1.c0, v0.c1)))) ORDER BY CASE WHEN ((t1.c1) BETWEEN (t1.c0) AND (v0.c0)) THEN ((t1.c1)!=(t1.c1)) ELSE vt0.c1 END ASC  NULLS FIRST, ((((2.106321545E9 COLLATE RTRIM)OR((~ (v0.c2)))))AND((+ (t1.c0)))) ASC  NULLS LAST LIMIT 0X5;
SELECT * FROM t1, vt0, v0 WHERE ((((((v0.c2) NOT NULL)))>((v0.c2)))) ORDER BY x'' DESC  NULLS FIRST;
SELECT * FROM t1, vt0, v0 WHERE ((((((((v0.c2) NOT NULL)))>((v0.c2))))AND((((((((v0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((v0.c1, t1.c1, t1.c2)) AND ((t1.c0, v0.c1, t1.c2))))OR('-418641831')))AND((('0.7825621314239689') NOT BETWEEN (v0.c2) AND (v0.c1))))))) ORDER BY (t1.c2 IN (v0.c0)) COLLATE RTRIM  NULLS FIRST LIMIT 0;
SELECT * FROM t1, vt0, v0 WHERE ((((((v0.c2) NOT NULL)))>((v0.c2)))) ORDER BY x'' DESC  NULLS FIRST;
SELECT * FROM t1, vt0, v0 WHERE ((((((((v0.c2) NOT NULL)))>((v0.c2))))AND((((((((v0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((v0.c1, t1.c1, t1.c2)) AND ((t1.c0, v0.c1, t1.c2))))OR('-418641831')))AND((('0.7825621314239689') NOT BETWEEN (v0.c2) AND (v0.c1))))))) ORDER BY (t1.c2 IN (v0.c0)) COLLATE RTRIM  NULLS FIRST LIMIT 0;
SELECT ALL * FROM v0, t1, vt0 WHERE (vt0.c1) ORDER BY CASE WHEN vt0.c0 THEN v0.c1 WHEN CAST(0Xffffffffb2f885e2 AS BLOB) THEN ((vt0.c0)||(t1.c2)) ELSE ((((t1.c2)OR(x'4375')))OR(v0.c2)) END  NULLS LAST, LIKELIHOOD(DISTINCT vt0.c1, x'5c') ASC, CASE ((t1.c0) BETWEEN (v0.c0) AND (v0.c2))  WHEN ((v0.c1)<(vt0.c0)) THEN ((NULL)LIKE(t1.c2)) WHEN (('1068564337') NOT BETWEEN (t1.c0) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE (((x'', v0.c1)) NOT BETWEEN ((vt0.c0, x'')) AND ((t1.c2, t1.c0))) END  NULLS FIRST;
SELECT * FROM v0, t1, vt0 WHERE (((vt0.c1)AND('184538343'))) ORDER BY t1.c2  NULLS FIRST, (((((vt0.c0, t1.c0)) BETWEEN ((t1.c2, t1.c2)) AND ((v0.c1, t1.c0))))/(LOWER(DISTINCT vt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, t1, vt0 WHERE (vt0.c1) ORDER BY CASE WHEN vt0.c0 THEN v0.c1 WHEN CAST(0Xffffffffb2f885e2 AS BLOB) THEN ((vt0.c0)||(t1.c2)) ELSE ((((t1.c2)OR(x'4375')))OR(v0.c2)) END  NULLS LAST, LIKELIHOOD(DISTINCT vt0.c1, x'5c') ASC, CASE ((t1.c0) BETWEEN (v0.c0) AND (v0.c2))  WHEN ((v0.c1)<(vt0.c0)) THEN ((NULL)LIKE(t1.c2)) WHEN (('1068564337') NOT BETWEEN (t1.c0) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE (((x'', v0.c1)) NOT BETWEEN ((vt0.c0, x'')) AND ((t1.c2, t1.c0))) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((v0.c1)>>(v0.c0)) IN (vt0.c1 COLLATE BINARY)));
SELECT DISTINCT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((v0.c1)>>(v0.c0)) IN (vt0.c1 COLLATE BINARY))) ORDER BY ((('70346026')) NOT BETWEEN (((((v0.c0, v0.c1)) NOT BETWEEN ((v0.c1, vt0.c0)) AND ((v0.c0, v0.c1))))) AND (((v0.c2 IN (vt0.c1))))) ASC, ((vt0.c1 IN (vt0.c0, v0.c1, v0.c0)) IN (RTRIM(v0.c2))), ((((v0.c0) NOT BETWEEN (vt0.c1) AND ('I'))) ISNULL) DESC  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (v0.c1) ORDER BY ((('70346026')) NOT BETWEEN (((((v0.c0, v0.c1)) NOT BETWEEN ((v0.c1, vt0.c0)) AND ((v0.c0, v0.c1))))) AND (((v0.c2 IN (vt0.c1))))) ASC, ((vt0.c1 IN (vt0.c0, v0.c1, v0.c0)) IN (RTRIM(v0.c2))), ((((v0.c0) NOT BETWEEN (vt0.c1) AND ('I'))) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c0) ORDER BY (((vt0.c1 IN (vt0.c0))) IS TRUE), ((+ (t1.c0)) IN ());
SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE (((vt0.c0)AND(((((((((t1.c0)AND(vt0.c1)))OR(t1.c2)))AND(vt0.c0)))OR(t1.c0)) COLLATE NOCASE))) ORDER BY (((vt0.c1 IN (vt0.c0))) IS TRUE), ((+ (t1.c0)) IN ()) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE (CASE t1.c1 COLLATE NOCASE  WHEN (((vt0.c1))<>((t1.c0))) THEN ((t1.c1)IS(vt0.c1)) WHEN ((t1.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0)OR(vt0.c0)) WHEN t1.c2 COLLATE NOCASE THEN LIKELIHOOD(DISTINCT t1.c1, vt0.c1) ELSE ((t1.c1)>(t1.c1)) END) ORDER BY (((vt0.c1 IN (vt0.c0))) IS TRUE), ((+ (t1.c0)) IN ()) LIMIT 0x0;
SELECT MIN(t1.c1) FROM v0, vt0, t1 WHERE (load_extension(((('-579728555', t1.c2)) NOT BETWEEN ((vt0.c1, t1.c1)) AND ((t1.c0, vt0.c0)))));
SELECT ALL MIN(t1.c1) FROM v0, vt0, t1 WHERE (load_extension(((('-579728555', t1.c2)) NOT BETWEEN ((vt0.c1, t1.c1)) AND ((t1.c0, vt0.c0))))) ORDER BY (((+ (vt0.c0))) IS FALSE), ('A 4<Y' IN ()) COLLATE RTRIM INTERSECT SELECT ALL MIN(t1.c1) FROM v0, vt0, t1 WHERE (NULL) ORDER BY (((+ (vt0.c0))) IS FALSE), ('A 4<Y' IN ()) COLLATE RTRIM;
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0)%(v0.c1)) COLLATE BINARY);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0)%(v0.c1)) COLLATE BINARY)AND(CASE WHEN v0.c2 THEN v0.c1 COLLATE RTRIM WHEN ((vt0.c0)<<(v0.c0)) THEN json_extract(v0.c2, vt0.c1, v0.c0) ELSE ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)) END))) ORDER BY v0.c0, ((CASE NULL  WHEN 685232261 THEN NULL ELSE v0.c1 END)==(((v0.c1) BETWEEN (vt0.c1) AND (x'40'))))  NULLS FIRST, ((((CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)AND(((v0.c0) NOTNULL))))OR(vt0.c1)) DESC  NULLS LAST INTERSECT SELECT * FROM vt0, v0 WHERE (((((((v0.c0 COLLATE NOCASE)OR(vt0.c1 COLLATE NOCASE)))OR(CAST(vt0.c1 AS INTEGER))))AND(((((((((v0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(v0.c1))))) ORDER BY v0.c0, ((CASE NULL  WHEN 0x28d7d085 THEN NULL ELSE v0.c1 END)==(((v0.c1) BETWEEN (vt0.c1) AND (x'40'))))  NULLS FIRST, ((((CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)AND(((v0.c0) NOTNULL))))OR(vt0.c1)) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0)%(v0.c1)) COLLATE BINARY);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0)%(v0.c1)) COLLATE BINARY)AND(CASE WHEN v0.c2 THEN v0.c1 COLLATE RTRIM WHEN ((vt0.c0)<<(v0.c0)) THEN json_extract(v0.c2, vt0.c1, v0.c0) ELSE ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)) END))) ORDER BY v0.c0, ((CASE NULL  WHEN 685232261 THEN NULL ELSE v0.c1 END)==(((v0.c1) BETWEEN (vt0.c1) AND (x'40'))))  NULLS FIRST, ((((CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)AND(((v0.c0) NOTNULL))))OR(vt0.c1)) DESC  NULLS LAST INTERSECT SELECT * FROM vt0, v0 WHERE (((((((v0.c0 COLLATE NOCASE)OR(vt0.c1 COLLATE NOCASE)))OR(CAST(vt0.c1 AS INTEGER))))AND(((((((((v0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(v0.c1))))) ORDER BY v0.c0, ((CASE NULL  WHEN 0x28d7d085 THEN NULL ELSE v0.c1 END)==(((v0.c1) BETWEEN (vt0.c1) AND (x'40'))))  NULLS FIRST, ((((CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)AND(((v0.c0) NOTNULL))))OR(vt0.c1)) DESC  NULLS LAST;
SELECT ALL MAX(v0.c1) FROM vt0 CROSS JOIN v0 ON (((vt0.c1 IN ())) BETWEEN (NULLIF(v0.c1, vt0.c1)) AND ((- (v0.c2)))) WHERE ((- ((((v0.c0, v0.c1, vt0.c1))==((v0.c1, v0.c0, v0.c1)))))) ORDER BY vt0.c0 ASC, CAST(((vt0.c0)||(v0.c2)) AS NUMERIC) DESC, ((TYPEOF(DISTINCT x''))||(v0.c0 COLLATE BINARY)) ASC;
SELECT DISTINCT MAX(v0.c1) FROM vt0 CROSS JOIN v0 ON (((vt0.c1 IN ())) BETWEEN (NULLIF(v0.c1, vt0.c1)) AND ((- (v0.c2)))) WHERE ((- ((((v0.c0, v0.c1, vt0.c1))==((v0.c1, v0.c0, v0.c1)))))) ORDER BY vt0.c0 ASC, CAST(((vt0.c0)||(v0.c2)) AS NUMERIC) DESC, ((TYPEOF(DISTINCT x''))||(v0.c0 COLLATE BINARY)) ASC LIMIT 0X2;
SELECT * FROM t1 WHERE (CAST(((t1.c0)==(t1.c2)) AS REAL));
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c0)==(t1.c2)) AS REAL)) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END WHEN ((t1.c2)|(t1.c2)) THEN ((t1.c0)%(t1.c2)) END, (((((NULL)<=('n恈_ꇪ')), ((t1.c2)*(t1.c2))))>=((((t1.c1) BETWEEN (t1.c0) AND (t1.c2)), (t1.c2 IN (t1.c1))))) ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c2 AS REAL)) NOTNULL)) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END WHEN ((t1.c2)|(t1.c2)) THEN ((t1.c0)%(t1.c2)) END, (((((NULL)<=('n恈_ꇪ')), ((t1.c2)*(t1.c2))))>=((((t1.c1) BETWEEN (t1.c0) AND (t1.c2)), (t1.c2 IN (t1.c1))))) ASC LIMIT 0x0;
SELECT * FROM t1 WHERE (CAST(((t1.c0)==(t1.c2)) AS REAL));
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c0)==(t1.c2)) AS REAL)) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END WHEN ((t1.c2)|(t1.c2)) THEN ((t1.c0)%(t1.c2)) END, (((((NULL)<=('n恈_ꇪ')), ((t1.c2)*(t1.c2))))>=((((t1.c1) BETWEEN (t1.c0) AND (t1.c2)), (t1.c2 IN (t1.c1))))) ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c2 AS REAL)) NOTNULL)) ORDER BY CASE WHEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END WHEN ((t1.c2)|(t1.c2)) THEN ((t1.c0)%(t1.c2)) END, (((((NULL)<=('n恈_ꇪ')), ((t1.c2)*(t1.c2))))>=((((t1.c1) BETWEEN (t1.c0) AND (t1.c2)), (t1.c2 IN (t1.c1))))) ASC LIMIT 0x0;
SELECT ALL COUNT(*) FROM t1, v0 WHERE (((x'') NOTNULL)) ORDER BY t1.c1 ASC;
SELECT DISTINCT COUNT(*) FROM t1, v0 WHERE (((x'') NOTNULL)) ORDER BY t1.c1 ASC LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1, v0 WHERE ((((((t1.c2, v0.c0))>((t1.c2, t1.c2)))) ISNULL)) ORDER BY t1.c1 ASC LIMIT 0;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((v0.c1)OR(v0.c2)))AND(v0.c1)))AND((- (vt0.c0)))))AND((+ (x'52')))))AND(LOWER(v0.c2))) WHERE ((((((('X|') NOTNULL))OR((NOT (v0.c0)))))AND(((((((v0.c1)OR('-1957560102')))AND(vt0.c1)))OR(v0.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((v0.c1)OR(v0.c2)))AND(v0.c1)))AND((- (vt0.c0)))))AND((+ (x'52')))))AND(LOWER(v0.c2))) WHERE ((((((('X|') NOTNULL))OR((NOT (v0.c0)))))AND(((((((v0.c1)OR('-1957560102')))AND(vt0.c1)))OR(v0.c1))))) ORDER BY NULL ASC  NULLS FIRST, 0.27797247289921023;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((v0.c1)OR(v0.c2)))AND(v0.c1)))AND((- (vt0.c0)))))AND((+ (x'52')))))AND(LOWER(v0.c2))) WHERE ((((((('X|') NOTNULL))OR((NOT (v0.c0)))))AND(((((((v0.c1)OR('-1957560102')))AND(vt0.c1)))OR(v0.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((v0.c1)OR(v0.c2)))AND(v0.c1)))AND((- (vt0.c0)))))AND((+ (x'52')))))AND(LOWER(v0.c2))) WHERE ((((((('X|') NOTNULL))OR((NOT (v0.c0)))))AND(((((((v0.c1)OR('-1957560102')))AND(vt0.c1)))OR(v0.c1))))) ORDER BY NULL ASC  NULLS FIRST, 0.27797247289921023;
SELECT ALL MAX(vt0.c1) FROM v0, vt0 WHERE (0.9369942315316403);
SELECT DISTINCT MAX(vt0.c1) FROM v0, vt0 WHERE (((0.9369942315316403)AND((((CAST(v0.c0 AS BLOB), ((vt0.c0)||(v0.c0))))!=(((((0.49829640008409926, v0.c1, v0.c0, '-1341530015'))<((vt0.c0, v0.c1, vt0.c1, ''))), ((v0.c1)IS NOT(v0.c2)))))))) ORDER BY LIKELY((v0.c2 IN (v0.c1, vt0.c0))) ASC  NULLS LAST, v0.c2  NULLS FIRST, ((((v0.c0) NOTNULL)) BETWEEN ((+ (v0.c2))) AND (json_insert(v0.c1, vt0.c0, vt0.c0, v0.c1, v0.c2, vt0.c0)))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM v0, vt0 WHERE (((CASE WHEN vt0.c1 THEN v0.c2 END) BETWEEN (vt0.c0) AND (((v0.c1)LIKE(vt0.c1))))) ORDER BY LIKELY((v0.c2 IN (v0.c1, vt0.c0))) ASC  NULLS LAST, v0.c2  NULLS FIRST, ((((v0.c0) NOTNULL)) BETWEEN ((+ (v0.c2))) AND (json_insert(v0.c1, vt0.c0, vt0.c0, v0.c1, v0.c2, vt0.c0)))  NULLS FIRST LIMIT 0x0;
SELECT ALL MAX(t1.c2) FROM t1, v0, vt0 WHERE (2114172377) ORDER BY (((v0.c1, v0.c0)) BETWEEN ((NULL, CASE WHEN v0.c0 THEN v0.c0 END)) AND (((NOT (NULL)), CASE WHEN t1.c2 THEN v0.c0 END)));
SELECT MAX(t1.c2) FROM t1, v0, vt0 WHERE (((0X7e03b5d9)AND(v0.c1))) ORDER BY (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c1, vt0.c1, v0.c0)) AND ((v0.c2, v0.c2, t1.c2))) COLLATE RTRIM  NULLS LAST;
SELECT ALL MIN(v0.c0) FROM t1 NATURAL JOIN v0 INNER JOIN vt0 ON (((- (vt0.c0)))>=(((((vt0.c0)OR(v0.c1)))AND(v0.c2)))) WHERE (((((vt0.c1)LIKE(vt0.c0)))<=(CAST(t1.c1 AS REAL))));
SELECT MIN(v0.c0) FROM t1 NATURAL JOIN v0 INNER JOIN vt0 ON (((- (vt0.c0)))>=(((((vt0.c0)OR(v0.c1)))AND(v0.c2)))) WHERE (((((vt0.c1)LIKE(vt0.c0)))<(CAST(t1.c1 AS REAL)))) ORDER BY (((((((((((((((((v0.c2)AND(t1.c2)))OR(v0.c0)))OR(t1.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(t1.c0)), ((((((0.13299293703060378)OR(t1.c1)))OR(t1.c0)))OR(vt0.c1))))!=(((+ (vt0.c1)), v0.c2))) DESC LIMIT 2 INTERSECT SELECT MIN(v0.c0) FROM t1 NATURAL JOIN v0 INNER JOIN vt0 ON (((- (vt0.c0)))>=(((((vt0.c0)OR(v0.c1)))AND(v0.c2)))) WHERE (CAST(NULL AS NUMERIC)) ORDER BY (((((((((((((((((v0.c2)AND(t1.c2)))OR(v0.c0)))OR(t1.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(t1.c0)), ((((((0.13299293703060378)OR(t1.c1)))OR(t1.c0)))OR(vt0.c1))))<>(((+ (vt0.c1)), v0.c2))) DESC LIMIT 2;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (0.6476563636064093) AND (vt0.c0)))) AND ((((vt0.c1)<=(vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (0.6476563636064093) AND (vt0.c0)))) AND ((((vt0.c1)=(vt0.c1)))))) LIMIT 0X0 INTERSECT SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOTNULL)))!=((((0x9fdff28)LIKE(vt0.c0)))))) LIMIT 0;
SELECT * FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, x'07251c')))))) ORDER BY rtreenode((((vt0.c0, vt0.c0))<>((vt0.c0, vt0.c1))), NULL);
SELECT DISTINCT * FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, x'07251c')))))) ORDER BY ((NULL COLLATE BINARY)GLOB(((vt0.c1) IS TRUE)))  NULLS FIRST, (- (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) LIMIT 0;
SELECT * FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, x'07251c')))))) ORDER BY rtreenode((((vt0.c0, vt0.c0))<>((vt0.c0, vt0.c1))), NULL);
SELECT DISTINCT * FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, x'07251c')))))) ORDER BY ((NULL COLLATE BINARY)GLOB(((vt0.c1) IS TRUE)))  NULLS FIRST, (- (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) LIMIT 0;
SELECT MIN(vt0.c1) FROM t1, vt0, v0 WHERE (SQLITE_VERSION());
SELECT ALL MIN(vt0.c1) FROM t1, vt0, v0 WHERE (SQLITE_VERSION()) ORDER BY ((((t1.c0) BETWEEN (vt0.c0) AND (t1.c1)))/(((v0.c2) IS TRUE))) DESC;
SELECT * FROM v0, vt0, t1 WHERE (((((((((v0.c2)OR(vt0.c0)))AND(t1.c2)))AND(t1.c1)))|(((((((((t1.c0)OR(v0.c2)))AND(t1.c0)))OR(v0.c2)))OR(vt0.c0)))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((((((((v0.c2)OR(vt0.c0)))AND(t1.c2)))AND(t1.c1)))|(((((((((t1.c0)OR(v0.c2)))AND(t1.c0)))OR(v0.c2)))OR(vt0.c0)))))AND((NOT ((((vt0.c0, v0.c0, v0.c0, t1.c0))<((t1.c2, v0.c1, t1.c0, t1.c2)))))))) ORDER BY ((((((((((((t1.c1 COLLATE BINARY)OR(((vt0.c1)|(t1.c2)))))AND(CASE v0.c1  WHEN v0.c0 THEN vt0.c0 ELSE t1.c1 END)))AND(CASE WHEN v0.c0 THEN t1.c2 WHEN 'r' THEN t1.c2 ELSE t1.c1 END)))AND(((v0.c0)>=(v0.c2)))))AND(t1.c0)))AND((- (NULL))))  NULLS FIRST, CAST(((t1.c0)IS(x'f6')) AS REAL)  NULLS LAST;
SELECT * FROM v0, vt0, t1 WHERE (((((((((v0.c2)OR(vt0.c0)))AND(t1.c2)))AND(t1.c1)))|(((((((((t1.c0)OR(v0.c2)))AND(t1.c0)))OR(v0.c2)))OR(vt0.c0)))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((((((((v0.c2)OR(vt0.c0)))AND(t1.c2)))AND(t1.c1)))|(((((((((t1.c0)OR(v0.c2)))AND(t1.c0)))OR(v0.c2)))OR(vt0.c0)))))AND((NOT ((((vt0.c0, v0.c0, v0.c0, t1.c0))<((t1.c2, v0.c1, t1.c0, t1.c2)))))))) ORDER BY ((((((((((((t1.c1 COLLATE BINARY)OR(((vt0.c1)|(t1.c2)))))AND(CASE v0.c1  WHEN v0.c0 THEN vt0.c0 ELSE t1.c1 END)))AND(CASE WHEN v0.c0 THEN t1.c2 WHEN 'r' THEN t1.c2 ELSE t1.c1 END)))AND(((v0.c0)>=(v0.c2)))))AND(t1.c0)))AND((- (NULL))))  NULLS FIRST, CAST(((t1.c0)IS(x'f6')) AS REAL)  NULLS LAST;
SELECT * FROM vt0, v0, t1 WHERE ((('~b%')GLOB(((t1.c0)*(v0.c0)))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((('~b%')GLOB(((t1.c0)*(v0.c0)))))AND(((((((((((((v0.c2)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(t1.c2)))OR(vt0.c0)))>(((((((v0.c1)OR('n|?r4ං')))AND(v0.c1)))AND('*m'))))))) ORDER BY (((v0.c0, vt0.c0)) NOT BETWEEN ((0.3277852148923853, t1.c1)) AND ((t1.c0, vt0.c1))) COLLATE BINARY DESC, ABS(DISTINCT ((v0.c0)*(t1.c2))) DESC, CAST((+ (v0.c0)) AS TEXT) DESC  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((((((t1.c0) IS TRUE))OR(((((((((((((((t1.c2)AND(t1.c2)))AND('')))OR(v0.c0)))AND(t1.c0)))AND(v0.c0)))OR(x'5a')))OR(0.23945185986769146)))))AND(((v0.c1)|(v0.c0)))))AND(((vt0.c1)LIKE(t1.c0))))) ORDER BY (((v0.c0, vt0.c0)) NOT BETWEEN ((0.3277852148923853, t1.c1)) AND ((t1.c0, vt0.c1))) COLLATE BINARY DESC, ABS(DISTINCT ((v0.c0)*(t1.c2))) DESC, CAST((+ (v0.c0)) AS TEXT) DESC  NULLS LAST LIMIT 0x2;
SELECT * FROM vt0, v0, t1 WHERE ((('~b%')GLOB(((t1.c0)*(v0.c0)))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((('~b%')GLOB(((t1.c0)*(v0.c0)))))AND(((((((((((((v0.c2)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(t1.c2)))OR(vt0.c0)))>(((((((v0.c1)OR('n|?r4ං')))AND(v0.c1)))AND('*m'))))))) ORDER BY (((v0.c0, vt0.c0)) NOT BETWEEN ((0.3277852148923853, t1.c1)) AND ((t1.c0, vt0.c1))) COLLATE BINARY DESC, ABS(DISTINCT ((v0.c0)*(t1.c2))) DESC, CAST((+ (v0.c0)) AS TEXT) DESC  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((((((t1.c0) IS TRUE))OR(((((((((((((((t1.c2)AND(t1.c2)))AND('')))OR(v0.c0)))AND(t1.c0)))AND(v0.c0)))OR(x'5a')))OR(0.23945185986769146)))))AND(((v0.c1)|(v0.c0)))))AND(((vt0.c1)LIKE(t1.c0))))) ORDER BY (((v0.c0, vt0.c0)) NOT BETWEEN ((0.3277852148923853, t1.c1)) AND ((t1.c0, vt0.c1))) COLLATE BINARY DESC, ABS(DISTINCT ((v0.c0)*(t1.c2))) DESC, CAST((+ (v0.c0)) AS TEXT) DESC  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c2)) AS REAL));
SELECT * FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c2)) AS REAL)) INTERSECT SELECT * FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS NUMERIC));
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c2)) AS REAL));
SELECT * FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c2)) AS REAL)) INTERSECT SELECT * FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS NUMERIC));
SELECT ALL MIN(v0.c1) FROM v0, t1 NATURAL JOIN vt0 WHERE (((((((((((((vt0.c1)OR(v0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))OR((~ (v0.c2)))))OR(((v0.c0)<=(t1.c1)))));
SELECT MIN(v0.c1) FROM v0, t1 NATURAL JOIN vt0 WHERE (((((((((((((((vt0.c1)OR(v0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))OR((~ (v0.c2)))))OR(((v0.c0)=(t1.c1)))))AND(CAST(v0.c1 AS NUMERIC) COLLATE BINARY))) LIMIT 0X0 INTERSECT SELECT ALL MIN(v0.c1) FROM v0, t1 NATURAL JOIN vt0 WHERE (highlight(t1.c0 COLLATE NOCASE, (((((((((('CWnIa
0')AND('0.18780441133825265')))AND(v0.c0)))OR(v0.c1)))AND(t1.c0)))OR(NULL)), 0.8852455539008482, (vt0.c0 IN ()))) LIMIT 0x0;
SELECT ALL MAX(v0.c0) FROM t1, vt0 NATURAL JOIN v0 WHERE (((((vt0.c1)IS(t1.c0)))OR(t1.c1))) ORDER BY ((((((v0.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0))), NULLIF(t1.c1, vt0.c1)))=((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)), ((0X66b31a6) BETWEEN (t1.c2) AND (v0.c1))))) ASC  NULLS LAST;
SELECT DISTINCT MAX(v0.c0) FROM t1, vt0 NATURAL JOIN v0 WHERE (((((vt0.c1)IS(t1.c0)))OR(t1.c1))) ORDER BY NULL DESC  NULLS LAST, (- (vt0.c0 COLLATE BINARY)) LIMIT 2;
SELECT MAX(vt0.c0) FROM t1 NATURAL JOIN vt0 WHERE ((((t1.c1 IN (t1.c2, vt0.c0)))*(0.7787482811786421 COLLATE RTRIM)));
SELECT DISTINCT MAX(vt0.c0) FROM t1 NATURAL JOIN vt0 WHERE ((((t1.c1 IN (t1.c2, vt0.c0)))*(0.7787482811786421 COLLATE RTRIM))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC LIMIT 0x0;
SELECT ALL * FROM v0 WHERE (((((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))AND(CAST(v0.c0 AS INTEGER))))AND(v0.c2)));
SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))AND(CAST(v0.c0 AS INTEGER))))AND(v0.c2)))AND(NULL))) LIMIT 0;
SELECT ALL * FROM v0 WHERE (((((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))AND(CAST(v0.c0 AS INTEGER))))AND(v0.c2)));
SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))AND(CAST(v0.c0 AS INTEGER))))AND(v0.c2)))AND(NULL))) LIMIT 0;
SELECT ALL MIN(v0.c2) FROM vt0, v0, t1 WHERE (((('	6', 0x6707af8a, vt0.c1)) NOT BETWEEN ((((t1.c0)AND(vt0.c1)), (('-616088095')/(0.7474755188509272)), CASE WHEN vt0.c1 THEN t1.c1 END)) AND ((((vt0.c0) NOTNULL), CAST(v0.c0 AS NUMERIC), (~ (v0.c1))))));
SELECT DISTINCT MIN(v0.c2) FROM vt0, v0, t1 WHERE (((('	6', 0x6707af8a, vt0.c1)) NOT BETWEEN ((((t1.c0)AND(vt0.c1)), (('-616088095')/(0.7474755188509272)), CASE WHEN vt0.c1 THEN t1.c1 END)) AND ((((vt0.c0) NOTNULL), CAST(v0.c0 AS NUMERIC), (~ (v0.c1)))))) INTERSECT SELECT DISTINCT MIN(v0.c2) FROM vt0, v0, t1 WHERE (json_valid((((vt0.c0))>=((t1.c1)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON ((CASE t1.c1  WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-111518474' END)<(((v0.c0)||(')&rK?^W,-')))) LEFT OUTER JOIN v0 ON CAST(((((((v0.c2)AND(v0.c1)))AND(t1.c0)))AND(v0.c2)) AS REAL) WHERE (((((t1.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))LIKE(v0.c2 COLLATE RTRIM)));
SELECT DISTINCT COUNT(*) FROM vt0 INNER JOIN t1 ON ((CASE t1.c1  WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-111518474' END)<(((v0.c0)||(')&rK?^W,-')))) LEFT OUTER JOIN v0 ON CAST(((((((v0.c2)AND(v0.c1)))AND(t1.c0)))AND(v0.c2)) AS REAL) WHERE (((((((t1.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))LIKE(v0.c2 COLLATE RTRIM)))AND((1709102821 IN (CASE v0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c2 THEN vt0.c1 END))))) ORDER BY (((v0.c2 IN (t1.c1, t1.c1)))%((+ (v0.c2)))), (~ (t1.c2)) LIMIT 1;
SELECT ALL * FROM v0, t1, vt0 WHERE ((((((t1.c2, t1.c2, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((v0.c2, vt0.c0, t1.c2)))) NOT BETWEEN (((t1.c2) NOT BETWEEN (t1.c2) AND (vt0.c0))) AND (CAST(t1.c0 AS REAL)))) ORDER BY IFNULL(DISTINCT CAST(v0.c2 AS NUMERIC), t1.c0)  NULLS FIRST, ((t1.c2 COLLATE RTRIM)|((~ (v0.c1))));
SELECT DISTINCT * FROM v0, t1, vt0 NOT INDEXED WHERE ((((((t1.c2, t1.c2, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((v0.c2, vt0.c0, t1.c2)))) NOT BETWEEN (((t1.c2) NOT BETWEEN (t1.c2) AND (vt0.c0))) AND (CAST(t1.c0 AS REAL)))) ORDER BY IFNULL(DISTINCT CAST(v0.c2 AS NUMERIC), t1.c0)  NULLS FIRST, ((t1.c2 COLLATE RTRIM)|((~ (v0.c1)))) LIMIT 0x2;
SELECT ALL * FROM v0, t1, vt0 WHERE ((((((t1.c2, t1.c2, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((v0.c2, vt0.c0, t1.c2)))) NOT BETWEEN (((t1.c2) NOT BETWEEN (t1.c2) AND (vt0.c0))) AND (CAST(t1.c0 AS REAL)))) ORDER BY IFNULL(DISTINCT CAST(v0.c2 AS NUMERIC), t1.c0)  NULLS FIRST, ((t1.c2 COLLATE RTRIM)|((~ (v0.c1))));
SELECT DISTINCT * FROM v0, t1, vt0 NOT INDEXED WHERE ((((((t1.c2, t1.c2, t1.c1)) BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((v0.c2, vt0.c0, t1.c2)))) NOT BETWEEN (((t1.c2) NOT BETWEEN (t1.c2) AND (vt0.c0))) AND (CAST(t1.c0 AS REAL)))) ORDER BY IFNULL(DISTINCT CAST(v0.c2 AS NUMERIC), t1.c0)  NULLS FIRST, ((t1.c2 COLLATE RTRIM)|((~ (v0.c1)))) LIMIT 0x2;
SELECT ALL * FROM t1, vt0, v0 WHERE (((((-1647168437 IN ()), (t1.c0 IN (vt0.c0, t1.c2))))!=((((t1.c2)>=(t1.c1)), (((t1.c2, t1.c2))<>((vt0.c0, vt0.c1)))))));
SELECT ALL * FROM t1, vt0, v0 WHERE (((((-1647168437 IN ()), (t1.c0 IN (vt0.c0, t1.c2))))>((((t1.c2)>=(t1.c1)), (((t1.c2, t1.c2))<((vt0.c0, vt0.c1))))))) ORDER BY ((((((((((((((t1.c2)OR(v0.c1)))AND(t1.c2)))OR(v0.c2)))AND((((t1.c2))==((v0.c2))))))OR(((v0.c0) BETWEEN (v0.c2) AND (vt0.c0)))))OR((((t1.c0)) BETWEEN ((v0.c1)) AND ((t1.c1))))))OR((vt0.c1 IN ()))), LIKELY(DISTINCT t1.c0) COLLATE BINARY, x'' DESC LIMIT 0x4;
SELECT ALL * FROM t1, vt0, v0 WHERE (((((-1647168437 IN ()), (t1.c0 IN (vt0.c0, t1.c2))))!=((((t1.c2)>=(t1.c1)), (((t1.c2, t1.c2))<>((vt0.c0, vt0.c1)))))));
SELECT ALL * FROM t1, vt0, v0 WHERE (((((-1647168437 IN ()), (t1.c0 IN (vt0.c0, t1.c2))))>((((t1.c2)>=(t1.c1)), (((t1.c2, t1.c2))<((vt0.c0, vt0.c1))))))) ORDER BY ((((((((((((((t1.c2)OR(v0.c1)))AND(t1.c2)))OR(v0.c2)))AND((((t1.c2))==((v0.c2))))))OR(((v0.c0) BETWEEN (v0.c2) AND (vt0.c0)))))OR((((t1.c0)) BETWEEN ((v0.c1)) AND ((t1.c1))))))OR((vt0.c1 IN ()))), LIKELY(DISTINCT t1.c0) COLLATE BINARY, x'' DESC LIMIT 0x4;
SELECT * FROM v0 WHERE ((((- (v0.c2))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (LIKELY(DISTINCT v0.c1))));
SELECT DISTINCT * FROM v0 WHERE ((((- (v0.c2))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (LIKELY(DISTINCT v0.c1)))) ORDER BY ((((((((NULL)OR(((-1.635930072E9) NOT BETWEEN (v0.c1) AND (v0.c1)))))AND(((v0.c0)IS NOT(v0.c1)))))AND(x'08d0a62f90')))OR(v0.c2 COLLATE RTRIM))  NULLS LAST, (- (v0.c1 COLLATE RTRIM))  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM v0 WHERE (((LIKELIHOOD(x'49', v0.c2))LIKE((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))))) ORDER BY ((((((((NULL)OR(((-1.635930072E9) NOT BETWEEN (v0.c1) AND (v0.c1)))))AND(((v0.c0)IS NOT(v0.c1)))))AND(x'08d0a62f90')))OR(v0.c2 COLLATE RTRIM))  NULLS LAST, (- (v0.c1 COLLATE RTRIM))  NULLS LAST LIMIT 0X0;
SELECT * FROM v0 WHERE ((((- (v0.c2))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (LIKELY(DISTINCT v0.c1))));
SELECT DISTINCT * FROM v0 WHERE ((((- (v0.c2))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (LIKELY(DISTINCT v0.c1)))) ORDER BY ((((((((NULL)OR(((-1.635930072E9) NOT BETWEEN (v0.c1) AND (v0.c1)))))AND(((v0.c0)IS NOT(v0.c1)))))AND(x'08d0a62f90')))OR(v0.c2 COLLATE RTRIM))  NULLS LAST, (- (v0.c1 COLLATE RTRIM))  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM v0 WHERE (((LIKELIHOOD(x'49', v0.c2))LIKE((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))))) ORDER BY ((((((((NULL)OR(((-1.635930072E9) NOT BETWEEN (v0.c1) AND (v0.c1)))))AND(((v0.c0)IS NOT(v0.c1)))))AND(x'08d0a62f90')))OR(v0.c2 COLLATE RTRIM))  NULLS LAST, (- (v0.c1 COLLATE RTRIM))  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (LIKELIHOOD(((t1.c2) BETWEEN (t1.c0) AND (t1.c0)), (~ (t1.c0)))) ORDER BY COALESCE(0.6221270509743937, 0.761586764398567) COLLATE BINARY;
SELECT ALL * FROM t1 WHERE (LIKELIHOOD(((t1.c2) BETWEEN (t1.c0) AND (t1.c0)), (~ (t1.c0)))) ORDER BY CHANGES() DESC  NULLS LAST, (UNLIKELY(t1.c0) IN (t1.c0)) DESC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL * FROM t1 WHERE (TRIM(((t1.c0)OR(t1.c1)))) ORDER BY CHANGES() DESC  NULLS LAST, (UNLIKELY(t1.c0) IN (t1.c0)) DESC  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (LIKELIHOOD(((t1.c2) BETWEEN (t1.c0) AND (t1.c0)), (~ (t1.c0)))) ORDER BY COALESCE(0.6221270509743937, 0.761586764398567) COLLATE BINARY;
SELECT * FROM vt0, t1 WHERE (CASE WHEN ((t1.c1)==(t1.c0)) THEN ((0.7896357562933323)>(t1.c2)) END);
SELECT DISTINCT * FROM vt0, t1 WHERE (CASE WHEN ((t1.c1)=(t1.c0)) THEN ((0.7896357562933323)>(t1.c2)) END) ORDER BY vt0.c0 ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE ((((t1.c0)>=(t1.c1)) IN (0.33759976888644316))) ORDER BY vt0.c0 ASC  NULLS FIRST LIMIT 1;
SELECT * FROM vt0, t1 WHERE (CASE WHEN ((t1.c1)==(t1.c0)) THEN ((0.7896357562933323)>(t1.c2)) END);
SELECT DISTINCT * FROM vt0, t1 WHERE (CASE WHEN ((t1.c1)=(t1.c0)) THEN ((0.7896357562933323)>(t1.c2)) END) ORDER BY vt0.c0 ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE ((((t1.c0)>=(t1.c1)) IN (0.33759976888644316))) ORDER BY vt0.c0 ASC  NULLS FIRST LIMIT 1;
SELECT MIN(v0.c0) FROM v0 LEFT OUTER JOIN vt0 ON (((NOT ('i㗷/''ℐ!?'))) NOTNULL) WHERE (CAST(((vt0.c0) NOT NULL) AS INTEGER));
SELECT ALL MIN(v0.c0) FROM v0 INNER JOIN vt0 ON (((NOT ('i㗷/''ℐ!?'))) NOTNULL) WHERE (((CAST(((vt0.c0) NOT NULL) AS INTEGER))AND('5^'))) INTERSECT SELECT ALL MIN(v0.c0) FROM v0 INNER JOIN vt0 ON (((NOT ('i㗷/''ℐ!?'))) NOTNULL) WHERE (((CAST(v0.c1 AS NUMERIC)) IS FALSE));
SELECT * FROM v0 WHERE (CASE WHEN v0.c2 COLLATE RTRIM THEN ((v0.c1)>=(v0.c2)) WHEN v0.c2 THEN v0.c1 COLLATE NOCASE END) ORDER BY NULL DESC;
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c2 COLLATE RTRIM THEN ((v0.c1)==(v0.c2)) WHEN v0.c2 THEN v0.c1 COLLATE NOCASE END)AND((~ (((v0.c1)>>(v0.c1))))))) ORDER BY NULL DESC;
SELECT * FROM v0 WHERE (CASE WHEN v0.c2 COLLATE RTRIM THEN ((v0.c1)>=(v0.c2)) WHEN v0.c2 THEN v0.c1 COLLATE NOCASE END) ORDER BY NULL DESC;
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c2 COLLATE RTRIM THEN ((v0.c1)==(v0.c2)) WHEN v0.c2 THEN v0.c1 COLLATE NOCASE END)AND((~ (((v0.c1)>>(v0.c1))))))) ORDER BY NULL DESC;
SELECT * FROM v0, vt0 WHERE (x'') ORDER BY (((v0.c1 IN ())) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0))) AND (UPPER(v0.c2))) DESC  NULLS LAST, (1.661887489E9 COLLATE BINARY IN (ABS(DISTINCT vt0.c1))), ((vt0.c0) NOT BETWEEN (x'23c2') AND (((v0.c1)/(v0.c2))));
SELECT * FROM v0, vt0 WHERE (((x'')AND(vt0.c1))) ORDER BY (((v0.c1 IN ())) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0))) AND (UPPER(v0.c2))) DESC  NULLS LAST, (1.661887489E9 COLLATE BINARY IN (ABS(DISTINCT vt0.c1))), ((vt0.c0) NOT BETWEEN (x'23c2') AND (((v0.c1)/(v0.c2)))) LIMIT 2 INTERSECT SELECT * FROM v0, vt0 WHERE ((((('p+')>>(vt0.c1))) ISNULL)) ORDER BY (((v0.c1 IN ())) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0))) AND (UPPER(v0.c2))) DESC  NULLS LAST, (1.661887489E9 COLLATE BINARY IN (ABS(DISTINCT vt0.c1))), ((vt0.c0) NOT BETWEEN (x'23c2') AND (((v0.c1)/(v0.c2)))) LIMIT 0x2;
SELECT * FROM v0, vt0 WHERE (x'') ORDER BY (((v0.c1 IN ())) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0))) AND (UPPER(v0.c2))) DESC  NULLS LAST, (1.661887489E9 COLLATE BINARY IN (ABS(DISTINCT vt0.c1))), ((vt0.c0) NOT BETWEEN (x'23c2') AND (((v0.c1)/(v0.c2))));
SELECT * FROM v0, vt0 WHERE (((x'')AND(vt0.c1))) ORDER BY (((v0.c1 IN ())) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0))) AND (UPPER(v0.c2))) DESC  NULLS LAST, (1.661887489E9 COLLATE BINARY IN (ABS(DISTINCT vt0.c1))), ((vt0.c0) NOT BETWEEN (x'23c2') AND (((v0.c1)/(v0.c2)))) LIMIT 2 INTERSECT SELECT * FROM v0, vt0 WHERE ((((('p+')>>(vt0.c1))) ISNULL)) ORDER BY (((v0.c1 IN ())) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0))) AND (UPPER(v0.c2))) DESC  NULLS LAST, (1.661887489E9 COLLATE BINARY IN (ABS(DISTINCT vt0.c1))), ((vt0.c0) NOT BETWEEN (x'23c2') AND (((v0.c1)/(v0.c2)))) LIMIT 0x2;
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN t1 ON v0.c1 WHERE ((((- (vt0.c0)))<=(((t1.c0)&(vt0.c0)))));
SELECT * FROM vt0, v0 INNER JOIN t1 ON v0.c1 WHERE ((((((- (vt0.c0)))<=(((t1.c0)&(vt0.c0)))))AND(CASE t1.c2  WHEN t1.c0 THEN 0.7064116520212196 WHEN t1.c1 THEN v0.c1 ELSE TYPEOF(v0.c2) END))) ORDER BY ((UNLIKELY(v0.c0)) ISNULL) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM vt0, v0 INNER JOIN t1 ON v0.c1 WHERE (((t1.c0)%(t1.c0))) ORDER BY ((UNLIKELY(v0.c0)) ISNULL) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN t1 ON v0.c1 WHERE ((((- (vt0.c0)))<=(((t1.c0)&(vt0.c0)))));
SELECT * FROM vt0, v0 INNER JOIN t1 ON v0.c1 WHERE ((((((- (vt0.c0)))<=(((t1.c0)&(vt0.c0)))))AND(CASE t1.c2  WHEN t1.c0 THEN 0.7064116520212196 WHEN t1.c1 THEN v0.c1 ELSE TYPEOF(v0.c2) END))) ORDER BY ((UNLIKELY(v0.c0)) ISNULL) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM vt0, v0 INNER JOIN t1 ON v0.c1 WHERE (((t1.c0)%(t1.c0))) ORDER BY ((UNLIKELY(v0.c0)) ISNULL) DESC  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c2, t1.c1))==((x'edbf', 1794878002)))) NOT NULL)) ORDER BY CAST(t1.c0 AS INTEGER) COLLATE RTRIM, ((((t1.c0)OR(t1.c2)))AND(t1.c1)) COLLATE NOCASE  NULLS LAST, ((((t1.c1) ISNULL))<=(NULLIF(DISTINCT t1.c0, t1.c0))) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((((t1.c2, t1.c1))=((x'edbf', 0X6afbaa32)))) NOT NULL))AND(((((((((NULL)OR(((t1.c0) IS FALSE))))AND(x'23fb')))AND(CASE t1.c2  WHEN t1.c1 THEN t1.c1 WHEN 0.23407149769447821 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c2 END)))AND((- (t1.c0))))))) ORDER BY CAST(t1.c0 AS INTEGER) COLLATE RTRIM, ((((t1.c0)OR(t1.c2)))AND(t1.c1)) COLLATE NOCASE  NULLS LAST, ((((t1.c1) ISNULL))<=(NULLIF(DISTINCT t1.c0, t1.c0))) DESC  NULLS FIRST;
SELECT ALL MIN(v0.c2) FROM v0 LEFT OUTER JOIN vt0 ON (((0.6823196399396524, CAST(v0.c2 AS NUMERIC), ((v0.c1)IS NOT(vt0.c1))))==((('1673995579' IN (v0.c1, v0.c2)), ((v0.c2)=('-1776986811')), (v0.c2 IN (v0.c1))))) WHERE ((((IFNULL(vt0.c1, 0.984163660427119), ((v0.c1)LIKE(v0.c2))))!=((CAST(vt0.c0 AS REAL), NULL))));
SELECT DISTINCT MIN(v0.c2) FROM v0 LEFT OUTER JOIN vt0 ON (((0.6823196399396524, CAST(v0.c2 AS NUMERIC), ((v0.c1)IS NOT(vt0.c1))))=((('1673995579' IN (v0.c1, v0.c2)), ((v0.c2)==('-1776986811')), (v0.c2 IN (v0.c1))))) WHERE ((((IFNULL(vt0.c1, 0.984163660427119), ((v0.c1)LIKE(v0.c2))))<((CAST(vt0.c0 AS REAL), NULL))));
SELECT ALL MIN(t1.c1) FROM t1, v0 CROSS JOIN vt0 ON CAST((- (v0.c2)) AS NUMERIC) WHERE ((NOT (((t1.c1)>=(NULL)))));
SELECT DISTINCT MIN(t1.c1) FROM t1, v0 CROSS JOIN vt0 ON CAST((- (v0.c2)) AS NUMERIC) WHERE ((((NOT (((t1.c1)>=(NULL)))))AND((~ (((t1.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))))));
SELECT MAX(v0.c1) FROM v0 WHERE ((+ (v0.c2 COLLATE NOCASE))) ORDER BY ((v0.c2)<=(v0.c2)) COLLATE BINARY ASC;
SELECT ALL MAX(v0.c1) FROM v0 WHERE ((+ (v0.c2 COLLATE NOCASE))) ORDER BY ((v0.c1) NOTNULL) DESC  NULLS FIRST, ((((((((((v0.c1)AND(v0.c2)))AND(v0.c2)))AND(v0.c1)))AND(v0.c0))) NOTNULL)  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c1)))GLOB(CAST(vt0.c1 AS TEXT))));
SELECT DISTINCT * FROM vt0 WHERE ((((((~ (vt0.c1)))GLOB(CAST(vt0.c1 AS TEXT))))AND(((vt0.c1) IS TRUE) COLLATE NOCASE))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((((((((((vt0.c0)OR(1250186722)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))>>((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c1)))GLOB(CAST(vt0.c1 AS TEXT))));
SELECT DISTINCT * FROM vt0 WHERE ((((((~ (vt0.c1)))GLOB(CAST(vt0.c1 AS TEXT))))AND(((vt0.c1) IS TRUE) COLLATE NOCASE))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((((((((((vt0.c0)OR(1250186722)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))>>((vt0.c0 IN ()))));
SELECT ALL * FROM t1, vt0 WHERE (ABS(DISTINCT 0.3109014614209895)) ORDER BY x'f5' DESC, (((ABS(vt0.c0)))<>((((t1.c0) BETWEEN (t1.c0) AND (vt0.c1))))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE (((ABS(DISTINCT 0.3109014614209895))AND((((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, t1.c2))))<(CAST(x'' AS TEXT)))))) ORDER BY ((((('-1094150099'))>((t1.c0)))) NOT BETWEEN (vt0.c0) AND (COALESCE(DISTINCT NULL, vt0.c0, vt0.c1, vt0.c0))) ASC, (((((('-438211528') NOT NULL))AND((((t1.c1, vt0.c1, vt0.c0, vt0.c1))>=((t1.c0, t1.c0, t1.c2, t1.c0))))))AND(((((((((t1.c1)AND(t1.c0)))AND(x'1a0e')))OR(t1.c1)))AND(t1.c1)))) ASC INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (t1.c2) ORDER BY ((((('-1094150099'))>((t1.c0)))) NOT BETWEEN (vt0.c0) AND (COALESCE(DISTINCT NULL, vt0.c0, vt0.c1, vt0.c0))) ASC, (((((('-438211528') NOT NULL))AND((((t1.c1, vt0.c1, vt0.c0, vt0.c1))>=((t1.c0, t1.c0, t1.c2, t1.c0))))))AND(((((((((t1.c1)AND(t1.c0)))AND(x'1a0e')))OR(t1.c1)))AND(t1.c1)))) ASC;
SELECT ALL * FROM t1, vt0 WHERE (ABS(DISTINCT 0.3109014614209895)) ORDER BY x'f5' DESC, (((ABS(vt0.c0)))<>((((t1.c0) BETWEEN (t1.c0) AND (vt0.c1))))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE (((ABS(DISTINCT 0.3109014614209895))AND((((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1)) AND ((vt0.c0, t1.c2))))<(CAST(x'' AS TEXT)))))) ORDER BY ((((('-1094150099'))>((t1.c0)))) NOT BETWEEN (vt0.c0) AND (COALESCE(DISTINCT NULL, vt0.c0, vt0.c1, vt0.c0))) ASC, (((((('-438211528') NOT NULL))AND((((t1.c1, vt0.c1, vt0.c0, vt0.c1))>=((t1.c0, t1.c0, t1.c2, t1.c0))))))AND(((((((((t1.c1)AND(t1.c0)))AND(x'1a0e')))OR(t1.c1)))AND(t1.c1)))) ASC INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (t1.c2) ORDER BY ((((('-1094150099'))>((t1.c0)))) NOT BETWEEN (vt0.c0) AND (COALESCE(DISTINCT NULL, vt0.c0, vt0.c1, vt0.c0))) ASC, (((((('-438211528') NOT NULL))AND((((t1.c1, vt0.c1, vt0.c0, vt0.c1))>=((t1.c0, t1.c0, t1.c2, t1.c0))))))AND(((((((((t1.c1)AND(t1.c0)))AND(x'1a0e')))OR(t1.c1)))AND(t1.c1)))) ASC;
SELECT ALL * FROM vt0 CROSS JOIN t1 ON 0.9351864775769649 LEFT OUTER JOIN v0 ON ((((vt0.c0))!=((t1.c1))) IN (((t1.c2) ISNULL), (((t1.c0, v0.c1, vt0.c1, t1.c1, v0.c2))>=((v0.c1, t1.c1, v0.c0, v0.c1, 0.960433466362526))))) WHERE ((((+ (t1.c0))) NOT NULL)) ORDER BY CAST(t1.c2 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN t1 ON 0.9351864775769649 INNER JOIN v0 ON ((((vt0.c0))<>((t1.c1))) IN (((t1.c2) ISNULL), (((t1.c0, v0.c1, vt0.c1, t1.c1, v0.c2))>=((v0.c1, t1.c1, v0.c0, v0.c1, 0.960433466362526))))) WHERE ((((((+ (t1.c0))) NOT NULL))AND(((t1.c2 COLLATE NOCASE)IS NOT(NULL))))) ORDER BY vt0.c0 DESC  NULLS FIRST, LAST_INSERT_ROWID()  NULLS FIRST LIMIT 4;
SELECT ALL * FROM vt0 CROSS JOIN t1 ON 0.9351864775769649 LEFT OUTER JOIN v0 ON ((((vt0.c0))!=((t1.c1))) IN (((t1.c2) ISNULL), (((t1.c0, v0.c1, vt0.c1, t1.c1, v0.c2))>=((v0.c1, t1.c1, v0.c0, v0.c1, 0.960433466362526))))) WHERE ((((+ (t1.c0))) NOT NULL)) ORDER BY CAST(t1.c2 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN t1 ON 0.9351864775769649 INNER JOIN v0 ON ((((vt0.c0))<>((t1.c1))) IN (((t1.c2) ISNULL), (((t1.c0, v0.c1, vt0.c1, t1.c1, v0.c2))>=((v0.c1, t1.c1, v0.c0, v0.c1, 0.960433466362526))))) WHERE ((((((+ (t1.c0))) NOT NULL))AND(((t1.c2 COLLATE NOCASE)IS NOT(NULL))))) ORDER BY vt0.c0 DESC  NULLS FIRST, LAST_INSERT_ROWID()  NULLS FIRST LIMIT 4;
SELECT * FROM v0, vt0 WHERE (CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 END COLLATE BINARY) ORDER BY (- ((- (0.9588017674386324)))) DESC  NULLS FIRST, (((((v0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE(((v0.c1) IS TRUE)))  NULLS LAST;
SELECT DISTINCT * FROM v0, vt0 WHERE (CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 END COLLATE BINARY) ORDER BY (- ((- (0.9588017674386324)))) DESC  NULLS FIRST, (((((v0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE(((v0.c1) IS TRUE)))  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 END COLLATE BINARY) ORDER BY (- ((- (0.9588017674386324)))) DESC  NULLS FIRST, (((((v0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE(((v0.c1) IS TRUE)))  NULLS LAST;
SELECT DISTINCT * FROM v0, vt0 WHERE (CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 END COLLATE BINARY) ORDER BY (- ((- (0.9588017674386324)))) DESC  NULLS FIRST, (((((v0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE(((v0.c1) IS TRUE)))  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (((CAST(t1.c1 AS BLOB))||((((vt0.c0, t1.c2))>((t1.c2, vt0.c1)))))) ORDER BY CASE (((t1.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0)))  WHEN ((((((((vt0.c1)OR(t1.c1)))AND(t1.c0)))OR(vt0.c1)))AND(t1.c1)) THEN vt0.c0 COLLATE NOCASE WHEN (t1.c2 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c2)) ELSE ((vt0.c0) BETWEEN (x'') AND (t1.c1)) END ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (((CAST(t1.c1 AS BLOB))||((((vt0.c0, t1.c2))>((t1.c2, vt0.c1)))))) ORDER BY (((vt0.c0) NOT BETWEEN ('1') AND (vt0.c1)) IN ())  NULLS LAST LIMIT 0X1;
SELECT * FROM vt0, t1 WHERE (((CAST(t1.c1 AS BLOB))||((((vt0.c0, t1.c2))>((t1.c2, vt0.c1)))))) ORDER BY CASE (((t1.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0)))  WHEN ((((((((vt0.c1)OR(t1.c1)))AND(t1.c0)))OR(vt0.c1)))AND(t1.c1)) THEN vt0.c0 COLLATE NOCASE WHEN (t1.c2 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c2)) ELSE ((vt0.c0) BETWEEN (x'') AND (t1.c1)) END ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (((CAST(t1.c1 AS BLOB))||((((vt0.c0, t1.c2))>((t1.c2, vt0.c1)))))) ORDER BY (((vt0.c0) NOT BETWEEN ('1') AND (vt0.c1)) IN ())  NULLS LAST LIMIT 0X1;
SELECT * FROM vt0 INNER JOIN t1 ON CASE (((t1.c1)) BETWEEN ((vt0.c1)) AND ((t1.c2)))  WHEN ((x'b46e5f50') IS TRUE) THEN 0.3903627172384331 WHEN ((((((((t1.c2)OR(vt0.c0)))OR(1e500)))OR(vt0.c0)))AND(0.2848227738815793)) THEN ((t1.c0) BETWEEN (vt0.c1) AND (t1.c0)) WHEN CASE WHEN vt0.c0 THEN t1.c2 WHEN t1.c1 THEN t1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c1)*(t1.c2)) END WHERE (CAST(t1.c0 AS TEXT));
SELECT ALL * FROM vt0 INNER JOIN t1 ON CASE (((t1.c1)) BETWEEN ((vt0.c1)) AND ((t1.c2)))  WHEN ((x'b46e5f50') IS TRUE) THEN 0.3903627172384331 WHEN ((((((((t1.c2)OR(vt0.c0)))OR(1e500)))OR(vt0.c0)))AND(0.2848227738815793)) THEN ((t1.c0) BETWEEN (vt0.c1) AND (t1.c0)) WHEN CASE WHEN vt0.c0 THEN t1.c2 WHEN t1.c1 THEN t1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c1)*(t1.c2)) END WHERE (((CAST(t1.c0 AS TEXT))AND(((((t1.c2) NOT NULL)) BETWEEN (((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c0)<<(vt0.c0))))))) ORDER BY (((t1.c2 IN ()))==(1331791281)) DESC  NULLS FIRST INTERSECT SELECT ALL * FROM vt0 INNER JOIN t1 ON CASE (((t1.c1)) BETWEEN ((vt0.c1)) AND ((t1.c2)))  WHEN ((x'b46e5f50') IS TRUE) THEN 0.3903627172384331 WHEN ((((((((t1.c2)OR(vt0.c0)))OR(1e500)))OR(vt0.c0)))AND(0.2848227738815793)) THEN ((t1.c0) BETWEEN (vt0.c1) AND (t1.c0)) WHEN CASE WHEN vt0.c0 THEN t1.c2 WHEN t1.c1 THEN t1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c1)*(t1.c2)) END WHERE ((- (((t1.c0) BETWEEN (t1.c2) AND (vt0.c0))))) ORDER BY (((t1.c2 IN ()))=(0X4f6185b1)) DESC  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN t1 ON CASE (((t1.c1)) BETWEEN ((vt0.c1)) AND ((t1.c2)))  WHEN ((x'b46e5f50') IS TRUE) THEN 0.3903627172384331 WHEN ((((((((t1.c2)OR(vt0.c0)))OR(1e500)))OR(vt0.c0)))AND(0.2848227738815793)) THEN ((t1.c0) BETWEEN (vt0.c1) AND (t1.c0)) WHEN CASE WHEN vt0.c0 THEN t1.c2 WHEN t1.c1 THEN t1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c1)*(t1.c2)) END WHERE (CAST(t1.c0 AS TEXT));
SELECT ALL * FROM vt0 INNER JOIN t1 ON CASE (((t1.c1)) BETWEEN ((vt0.c1)) AND ((t1.c2)))  WHEN ((x'b46e5f50') IS TRUE) THEN 0.3903627172384331 WHEN ((((((((t1.c2)OR(vt0.c0)))OR(1e500)))OR(vt0.c0)))AND(0.2848227738815793)) THEN ((t1.c0) BETWEEN (vt0.c1) AND (t1.c0)) WHEN CASE WHEN vt0.c0 THEN t1.c2 WHEN t1.c1 THEN t1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c1)*(t1.c2)) END WHERE (((CAST(t1.c0 AS TEXT))AND(((((t1.c2) NOT NULL)) BETWEEN (((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c0)<<(vt0.c0))))))) ORDER BY (((t1.c2 IN ()))==(1331791281)) DESC  NULLS FIRST INTERSECT SELECT ALL * FROM vt0 INNER JOIN t1 ON CASE (((t1.c1)) BETWEEN ((vt0.c1)) AND ((t1.c2)))  WHEN ((x'b46e5f50') IS TRUE) THEN 0.3903627172384331 WHEN ((((((((t1.c2)OR(vt0.c0)))OR(1e500)))OR(vt0.c0)))AND(0.2848227738815793)) THEN ((t1.c0) BETWEEN (vt0.c1) AND (t1.c0)) WHEN CASE WHEN vt0.c0 THEN t1.c2 WHEN t1.c1 THEN t1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c1)*(t1.c2)) END WHERE ((- (((t1.c0) BETWEEN (t1.c2) AND (vt0.c0))))) ORDER BY (((t1.c2 IN ()))=(0X4f6185b1)) DESC  NULLS FIRST;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c1)==(vt0.c0)) THEN CAST(vt0.c1 AS REAL) WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1)+(NULL)) END) ORDER BY (((json_valid(vt0.c1), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, (x'82' IN (vt0.c0, vt0.c1))))<=((((vt0.c1)|(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c0)))  NULLS LAST;
SELECT MAX(vt0.c0) FROM vt0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c1)==(vt0.c0)) THEN CAST(vt0.c1 AS REAL) WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1)+(NULL)) END) ORDER BY (((json_valid(vt0.c1), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, (x'82' IN (vt0.c0, vt0.c1))))<=((((vt0.c1)|(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c0)))  NULLS LAST LIMIT 0x0 INTERSECT SELECT MAX(vt0.c0) FROM vt0 WHERE ((NOT ((((vt0.c1))==((vt0.c0)))))) ORDER BY (((json_valid(vt0.c1), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, (x'82' IN (vt0.c0, vt0.c1))))<=((((vt0.c1)|(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c0)))  NULLS LAST LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))<((((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))<((((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))))AND((~ (t1.c0 COLLATE RTRIM))))) ORDER BY NULL DESC  NULLS FIRST, ((0.07308856834306654)|(t1.c2 COLLATE BINARY)) DESC  NULLS LAST LIMIT 0;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)) IN (vt0.c1 COLLATE NOCASE, CAST(vt0.c1 AS INTEGER)))) ORDER BY ((('t5', vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c1 AS REAL), COALESCE(vt0.c1, vt0.c0, vt0.c0, vt0.c0), (~ ('')))) AND ((((vt0.c1)*(vt0.c1)), ((((x'')OR(vt0.c1)))OR(vt0.c0)), (vt0.c0 IN ()), ((vt0.c1) NOTNULL)))) DESC  NULLS LAST, (vt0.c1 COLLATE RTRIM IN (((vt0.c1)OR(vt0.c1)))) DESC  NULLS LAST;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)) IN (vt0.c1 COLLATE NOCASE)))AND(CASE WHEN 0.1682393861111422 COLLATE NOCASE THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN vt0.c1 END))) ORDER BY ((('t5', vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c1 AS REAL), COALESCE(vt0.c1, vt0.c0, vt0.c0, vt0.c0), (~ ('')))) AND ((((vt0.c1)*(vt0.c1)), ((((x'')OR(vt0.c1)))OR(vt0.c0)), (vt0.c0 IN ()), ((vt0.c1) NOTNULL)))) DESC  NULLS LAST, (vt0.c1 COLLATE RTRIM IN (((vt0.c1)OR(vt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (TIME(CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c2 END, ((vt0.c0)IS(vt0.c0)), NULL, ((((((((((((vt0.c0)AND(0.9348785741420763)))AND(v0.c0)))OR(v0.c2)))OR(v0.c1)))AND(0.6175086510734416)))AND(NULL))));
SELECT DISTINCT * FROM v0, vt0 WHERE (((TIME(CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c2 END, ((vt0.c0)IS(vt0.c0)), NULL, ((((((((((((vt0.c0)AND(0.9348785741420763)))AND(v0.c0)))OR(v0.c2)))OR(v0.c1)))AND(0.6175086510734416)))AND(NULL))))AND((((+ (v0.c0)))OR(((v0.c1)%(v0.c1))))))) ORDER BY LIKELIHOOD(DISTINCT (((vt0.c0, 0.07092453200230664, v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((vt0.c0, v0.c2, vt0.c0))), CAST(vt0.c1 AS REAL)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM v0, vt0 WHERE ((((vt0.c1, v0.c1, v0.c2)) BETWEEN ((((v0.c0) NOTNULL), ((v0.c2)<<(vt0.c1)), ((v0.c0)<=(v0.c0)))) AND ((NULL, ((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)), CAST(vt0.c0 AS REAL))))) ORDER BY LIKELIHOOD(DISTINCT (((vt0.c0, 0.07092453200230664, v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((vt0.c0, v0.c2, vt0.c0))), CAST(vt0.c1 AS REAL)) DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (TIME(CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c2 END, ((vt0.c0)IS(vt0.c0)), NULL, ((((((((((((vt0.c0)AND(0.9348785741420763)))AND(v0.c0)))OR(v0.c2)))OR(v0.c1)))AND(0.6175086510734416)))AND(NULL))));
SELECT DISTINCT * FROM v0, vt0 WHERE (((TIME(CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c2 END, ((vt0.c0)IS(vt0.c0)), NULL, ((((((((((((vt0.c0)AND(0.9348785741420763)))AND(v0.c0)))OR(v0.c2)))OR(v0.c1)))AND(0.6175086510734416)))AND(NULL))))AND((((+ (v0.c0)))OR(((v0.c1)%(v0.c1))))))) ORDER BY LIKELIHOOD(DISTINCT (((vt0.c0, 0.07092453200230664, v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((vt0.c0, v0.c2, vt0.c0))), CAST(vt0.c1 AS REAL)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM v0, vt0 WHERE ((((vt0.c1, v0.c1, v0.c2)) BETWEEN ((((v0.c0) NOTNULL), ((v0.c2)<<(vt0.c1)), ((v0.c0)<=(v0.c0)))) AND ((NULL, ((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)), CAST(vt0.c0 AS REAL))))) ORDER BY LIKELIHOOD(DISTINCT (((vt0.c0, 0.07092453200230664, v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((vt0.c0, v0.c2, vt0.c0))), CAST(vt0.c1 AS REAL)) DESC  NULLS FIRST;
SELECT MAX(v0.c0) FROM vt0, v0, t1 WHERE (((STRFTIME(v0.c1, 0.37828939154788266, v0.c2, v0.c2)) NOT NULL)) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN vt0.c0 COLLATE NOCASE THEN CASE 1715878128  WHEN t1.c1 THEN v0.c1 END WHEN (v0.c2 IN (t1.c1)) THEN ((vt0.c0) ISNULL) WHEN CAST(-499593648 AS REAL) THEN CASE t1.c2  WHEN v0.c1 THEN t1.c2 ELSE 'j맏WX}蟼k' END END ASC;
SELECT DISTINCT MAX(v0.c0) FROM vt0, v0, t1 WHERE (((STRFTIME(v0.c1, 0.37828939154788266, v0.c2, v0.c2)) NOT NULL)) ORDER BY (((((t1.c1, 0.4569377558321398, v0.c2, t1.c1, t1.c2))<>((v0.c2, vt0.c0, vt0.c0, t1.c1, v0.c0)))) NOT BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (((vt0.c1)/(v0.c0)))) ASC  NULLS FIRST, (((TYPEOF(v0.c0)))>((t1.c2))), (- (((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))) DESC, CAST('-1386814678' AS TEXT) LIMIT 2;
SELECT ALL MAX(v0.c0) FROM v0 WHERE (((- (v0.c1)) IN (CASE WHEN v0.c1 THEN v0.c0 WHEN x'5e7f' THEN v0.c0 WHEN x'40' THEN v0.c0 ELSE v0.c0 END))) ORDER BY LIKELY(CAST(v0.c1 AS INTEGER)) ASC;
SELECT DISTINCT MAX(v0.c0) FROM v0 WHERE (((- (v0.c1)) IN (CASE WHEN v0.c1 THEN v0.c0 WHEN x'5e7f' THEN v0.c0 WHEN x'40' THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c2)<<(v0.c2)))>>(v0.c2 COLLATE RTRIM)) DESC  NULLS LAST INTERSECT SELECT DISTINCT MAX(v0.c0) FROM v0 WHERE ((((('g1')AND(CASE v0.c0  WHEN 0.36999116346960015 THEN v0.c1 WHEN v0.c2 THEN v0.c2 END)))AND((+ (0Xffffffff83aae2a7))))) ORDER BY ((((v0.c2)<<(v0.c2)))>>(v0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT MAX(vt0.c0) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL)) ORDER BY ((vt0.c1 COLLATE BINARY) NOT BETWEEN ((+ (vt0.c0))) AND (HEX(DISTINCT vt0.c1)));
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL))AND((~ ((- ('-1675189967'))))))) ORDER BY ((vt0.c1 COLLATE BINARY) NOT BETWEEN ((+ (vt0.c0))) AND (HEX(DISTINCT vt0.c1))) LIMIT 1 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c0)<=(vt0.c1)) COLLATE NOCASE) ORDER BY ((vt0.c1 COLLATE BINARY) NOT BETWEEN ((+ (vt0.c0))) AND (HEX(DISTINCT vt0.c1))) LIMIT 1;
SELECT ALL MAX(v0.c2) FROM vt0, v0 INNER JOIN t1 ON ((COALESCE(t1.c2, '1250186722', v0.c1))%((((v0.c1, v0.c2, v0.c2)) BETWEEN ((v0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, v0.c0))))) WHERE (CASE WHEN CAST(t1.c2 AS NUMERIC) THEN (NULL IN ()) WHEN CAST(vt0.c0 AS INTEGER) THEN ((((t1.c1)OR(v0.c1)))AND(v0.c0)) WHEN CAST(v0.c2 AS REAL) THEN (+ ('FXh}i')) WHEN NULLIF(t1.c1, v0.c0) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) WHEN ((((((t1.c1)OR(t1.c0)))AND(t1.c2)))OR(vt0.c0)) THEN ((v0.c1)IS NOT(t1.c0)) ELSE v0.c2 END) ORDER BY (((+ (t1.c1))) BETWEEN (CAST(v0.c1 AS REAL)) AND (((((t1.c1)OR(t1.c0)))OR(v0.c2)))) DESC  NULLS LAST, CASE (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((x'e4')))  WHEN ((v0.c0) NOTNULL) THEN ((t1.c2) NOT BETWEEN (t1.c2) AND (vt0.c0)) ELSE x'b3e4' END DESC  NULLS FIRST;
SELECT ALL MAX(v0.c2) FROM vt0, v0 INNER JOIN t1 ON ((COALESCE(t1.c2, '1250186722', v0.c1))%((((v0.c1, v0.c2, v0.c2)) BETWEEN ((v0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, v0.c0))))) WHERE (((CASE WHEN CAST(t1.c2 AS NUMERIC) THEN (NULL IN ()) WHEN CAST(vt0.c0 AS INTEGER) THEN ((((t1.c1)OR(v0.c1)))AND(v0.c0)) WHEN CAST(v0.c2 AS REAL) THEN (+ ('FXh}i')) WHEN NULLIF(t1.c1, v0.c0) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) WHEN ((((((t1.c1)OR(t1.c0)))AND(t1.c2)))OR(vt0.c0)) THEN ((v0.c1)IS NOT(t1.c0)) ELSE v0.c2 END)AND(((v0.c0)/(x'')) COLLATE RTRIM))) ORDER BY (((+ (t1.c1))) BETWEEN (CAST(v0.c1 AS REAL)) AND (((((t1.c1)OR(t1.c0)))OR(v0.c2)))) DESC  NULLS LAST, CASE (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((x'e4')))  WHEN ((v0.c0) NOTNULL) THEN ((t1.c2) NOT BETWEEN (t1.c2) AND (vt0.c0)) ELSE x'b3e4' END DESC  NULLS FIRST INTERSECT SELECT MAX(v0.c2) FROM vt0, v0 INNER JOIN t1 ON ((COALESCE(t1.c2, '1250186722', v0.c1))%((((v0.c1, v0.c2, v0.c2)) BETWEEN ((v0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, v0.c0))))) WHERE ((+ (((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((+ (t1.c1))) BETWEEN (CAST(v0.c1 AS REAL)) AND (((((t1.c1)OR(t1.c0)))OR(v0.c2)))) DESC  NULLS LAST, CASE (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((x'e4')))  WHEN ((v0.c0) NOTNULL) THEN ((t1.c2) NOT BETWEEN (t1.c2) AND (vt0.c0)) ELSE x'b3e4' END DESC  NULLS FIRST;
SELECT MAX(v0.c1) FROM v0, vt0 WHERE (TRIM(((v0.c1) NOTNULL)));
SELECT DISTINCT MAX(v0.c1) FROM v0, vt0 WHERE (((TRIM(((v0.c1) NOTNULL)))AND(CASE ((v0.c2)|(v0.c1))  WHEN CAST(v0.c2 AS BLOB) THEN (((vt0.c1, v0.c0)) BETWEEN ((v0.c0, vt0.c0)) AND ((vt0.c1, v0.c2))) WHEN CAST(v0.c2 AS INTEGER) THEN v0.c1 COLLATE RTRIM WHEN -1341530015 THEN json_array(vt0.c1, x'145f', v0.c1, v0.c2, vt0.c1, v0.c1) WHEN (NOT (v0.c0)) THEN CAST(vt0.c1 AS INTEGER) ELSE ((vt0.c0) ISNULL) END))) LIMIT 0;
SELECT MIN(v0.c0) FROM vt0, v0 WHERE ((~ ((vt0.c1 IN (v0.c0))))) ORDER BY (~ (((v0.c1)|(v0.c0)))) ASC  NULLS FIRST, json_remove(x'', (vt0.c0 IN ()), ((v0.c0)IS NOT(v0.c2)));
SELECT DISTINCT MIN(v0.c0) FROM vt0, v0 WHERE ((((~ ((vt0.c1 IN (v0.c0)))))AND((('')|(NULL COLLATE NOCASE))))) ORDER BY (~ (((v0.c1)|(v0.c0)))) ASC  NULLS FIRST, json_remove(x'', (vt0.c0 IN ()), ((v0.c0)IS NOT(v0.c2))) LIMIT 3 INTERSECT SELECT DISTINCT MIN(v0.c0) FROM vt0, v0 WHERE (((((v0.c2)OR(v0.c0))) NOT NULL)) ORDER BY (~ (((v0.c1)|(v0.c0)))) ASC  NULLS FIRST, json_remove(x'', (vt0.c0 IN ()), ((v0.c0)IS NOT(v0.c2))) LIMIT 3;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((vt0.c0)<(v0.c0))  WHEN v0.c2 COLLATE BINARY THEN ((v0.c2) ISNULL) ELSE ((v0.c0) BETWEEN (v0.c1) AND (1301648509)) END) ORDER BY (((~ (v0.c1))) NOT BETWEEN (-1667855259) AND (((vt0.c1) BETWEEN (v0.c1) AND (vt0.c1)))) DESC;
SELECT DISTINCT COUNT(*) FROM v0, vt0 WHERE (CASE ((vt0.c0)<(v0.c0))  WHEN v0.c2 COLLATE BINARY THEN ((v0.c2) ISNULL) ELSE ((v0.c0) BETWEEN (v0.c1) AND (0X4d95947d)) END) ORDER BY (((~ (v0.c1))) NOT BETWEEN (-1667855259) AND (((vt0.c1) BETWEEN (v0.c1) AND (vt0.c1)))) DESC LIMIT 2;
SELECT COUNT(*) FROM v0, t1 WHERE (((((v0.c1) IS TRUE)) IS TRUE)) ORDER BY ((CAST(v0.c2 AS NUMERIC)) NOT BETWEEN ('-1082597624') AND ((NOT (t1.c1)))) ASC  NULLS LAST, CASE WHEN ((v0.c0) IS TRUE) THEN (((v0.c1)) NOT BETWEEN ((v0.c0)) AND (('-184435331'))) ELSE ((((((v0.c1)AND(t1.c0)))AND(t1.c1)))OR(v0.c0)) END;
SELECT DISTINCT COUNT(*) FROM v0, t1 WHERE (((((v0.c1) IS TRUE)) IS TRUE)) ORDER BY CAST(t1.c2 AS NUMERIC) COLLATE RTRIM DESC INTERSECT SELECT DISTINCT COUNT(*) FROM v0, t1 WHERE ((((v0.c1)) NOT BETWEEN ((((t1.c1) NOTNULL))) AND (('0.9369942315316403')))) ORDER BY CAST(t1.c2 AS NUMERIC) COLLATE RTRIM DESC;
SELECT ALL MIN(v0.c2) FROM t1, v0 WHERE (((TRIM(t1.c0))GLOB(((v0.c2)||(t1.c2))))) ORDER BY ((t1.c1)<<(v0.c0)) COLLATE BINARY ASC  NULLS LAST, v0.c1 ASC  NULLS FIRST;
SELECT MIN(v0.c2) FROM t1, v0 WHERE (((TRIM(t1.c0))GLOB(((v0.c2)||(t1.c2))))) ORDER BY ((t1.c1)<<(v0.c0)) COLLATE BINARY ASC  NULLS LAST, v0.c1 ASC  NULLS FIRST INTERSECT SELECT MIN(v0.c2) FROM t1, v0 WHERE (HEX(DISTINCT ((v0.c2) NOT BETWEEN (t1.c1) AND (v0.c0)))) ORDER BY ((t1.c1)<<(v0.c0)) COLLATE BINARY ASC  NULLS LAST, v0.c1 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 NOT INDEXED WHERE (json_array_length((+ (vt0.c0)), ((((t1.c2)AND(t1.c1)))AND(t1.c0))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((json_array_length((+ (vt0.c0)), ((((t1.c2)AND(t1.c1)))AND(t1.c0))))AND((((t1.c2 IN (t1.c0)))<(((((((t1.c0)OR(vt0.c0)))AND(NULL)))AND(vt0.c0))))))) ORDER BY ((t1.c1) BETWEEN (t1.c1) AND (vt0.c0)) COLLATE BINARY  NULLS FIRST, (((t1.c0))=((((t1.c1)<=(t1.c0))))) ASC;
SELECT ALL * FROM vt0, t1 NOT INDEXED WHERE (json_array_length((+ (vt0.c0)), ((((t1.c2)AND(t1.c1)))AND(t1.c0))));
SELECT MAX(t1.c1) FROM vt0, v0, t1 WHERE (((vt0.c0)LIKE(((((0.5146461067045068)AND(vt0.c0)))AND(vt0.c1))))) ORDER BY CAST(((x'76') BETWEEN (t1.c0) AND (t1.c2)) AS BLOB);
SELECT ALL MAX(t1.c1) FROM vt0, v0, t1 WHERE (((vt0.c0)LIKE(((((0.5146461067045068)AND(vt0.c0)))AND(vt0.c1))))) ORDER BY CAST(((x'76') BETWEEN (t1.c0) AND (t1.c2)) AS BLOB) INTERSECT SELECT MAX(t1.c1) FROM vt0, v0, t1 WHERE (((((((((((CAST(v0.c2 AS NUMERIC))AND(((((((v0.c2)AND(v0.c2)))OR(t1.c1)))AND(vt0.c0)))))OR(((v0.c0) BETWEEN (t1.c1) AND (v0.c1)))))AND(((v0.c0) BETWEEN (vt0.c1) AND (v0.c2)))))AND((((NULL, v0.c1, v0.c0)) NOT BETWEEN ((v0.c1, t1.c1, v0.c2)) AND ((t1.c1, v0.c0, v0.c1))))))AND((((vt0.c1, t1.c1, v0.c0))!=((t1.c1, t1.c1, t1.c1)))))) ORDER BY CAST(((x'76') BETWEEN (t1.c0) AND (t1.c2)) AS BLOB);
SELECT * FROM v0, t1, vt0 WHERE ((((((t1.c0, 'oꉹ', v0.c2))<>((v0.c2, t1.c2, v0.c0))))!=(LIKELY(t1.c0)))) ORDER BY CAST((((t1.c2, vt0.c1)) BETWEEN ((t1.c0, v0.c1)) AND ((v0.c2, t1.c2))) AS TEXT) ASC, ((t1.c0) IS TRUE)  NULLS FIRST, ((((((((t1.c2)AND(v0.c0)))AND(NULL)))AND(vt0.c0))) IS TRUE) ASC;
SELECT * FROM v0, t1, vt0 WHERE ((((((((t1.c0, 'oꉹ', v0.c2))>((v0.c2, t1.c2, v0.c0))))>(LIKELY(t1.c0))))AND(((v0.c2) BETWEEN (vt0.c0) AND (t1.c1)) COLLATE RTRIM))) ORDER BY CAST((((t1.c2, vt0.c1)) BETWEEN ((t1.c0, v0.c1)) AND ((v0.c2, t1.c2))) AS TEXT) ASC, ((t1.c0) IS TRUE)  NULLS FIRST, ((((((((t1.c2)AND(v0.c0)))AND(NULL)))AND(vt0.c0))) IS TRUE) ASC LIMIT 0x1 INTERSECT SELECT * FROM v0, t1, vt0 WHERE ((((v0.c1 IN (v0.c1)))LIKE(CASE 0.2641981130313594  WHEN vt0.c1 THEN t1.c2 END))) ORDER BY CAST((((t1.c2, vt0.c1)) BETWEEN ((t1.c0, v0.c1)) AND ((v0.c2, t1.c2))) AS TEXT) ASC, ((t1.c0) IS TRUE)  NULLS FIRST, ((((((((t1.c2)AND(v0.c0)))AND(NULL)))AND(vt0.c0))) IS TRUE) ASC LIMIT 0X1;
SELECT * FROM v0, t1, vt0 WHERE ((((((t1.c0, 'oꉹ', v0.c2))<>((v0.c2, t1.c2, v0.c0))))!=(LIKELY(t1.c0)))) ORDER BY CAST((((t1.c2, vt0.c1)) BETWEEN ((t1.c0, v0.c1)) AND ((v0.c2, t1.c2))) AS TEXT) ASC, ((t1.c0) IS TRUE)  NULLS FIRST, ((((((((t1.c2)AND(v0.c0)))AND(NULL)))AND(vt0.c0))) IS TRUE) ASC;
SELECT * FROM v0, t1, vt0 WHERE ((((((((t1.c0, 'oꉹ', v0.c2))>((v0.c2, t1.c2, v0.c0))))>(LIKELY(t1.c0))))AND(((v0.c2) BETWEEN (vt0.c0) AND (t1.c1)) COLLATE RTRIM))) ORDER BY CAST((((t1.c2, vt0.c1)) BETWEEN ((t1.c0, v0.c1)) AND ((v0.c2, t1.c2))) AS TEXT) ASC, ((t1.c0) IS TRUE)  NULLS FIRST, ((((((((t1.c2)AND(v0.c0)))AND(NULL)))AND(vt0.c0))) IS TRUE) ASC LIMIT 0x1 INTERSECT SELECT * FROM v0, t1, vt0 WHERE ((((v0.c1 IN (v0.c1)))LIKE(CASE 0.2641981130313594  WHEN vt0.c1 THEN t1.c2 END))) ORDER BY CAST((((t1.c2, vt0.c1)) BETWEEN ((t1.c0, v0.c1)) AND ((v0.c2, t1.c2))) AS TEXT) ASC, ((t1.c0) IS TRUE)  NULLS FIRST, ((((((((t1.c2)AND(v0.c0)))AND(NULL)))AND(vt0.c0))) IS TRUE) ASC LIMIT 0X1;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY t1.c1 ASC  NULLS LAST, (NOT ((~ (t1.c0)))) DESC  NULLS FIRST, ((t1.c0) IS FALSE) ASC  NULLS LAST, CASE ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c2))  WHEN t1.c2 THEN CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-509451018' ELSE t1.c2 END WHEN ((0.20599738994321204)IS NOT(t1.c0)) THEN ((t1.c0)>(t1.c1)) WHEN CAST(t1.c2 AS TEXT) THEN CASE t1.c2  WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c0)*('7?')) WHEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c1)) THEN x'' END  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c1)AND(NULL COLLATE NOCASE))) ORDER BY t1.c1 ASC  NULLS LAST, (NOT ((~ (t1.c0)))) DESC  NULLS FIRST, ((t1.c0) IS FALSE) ASC  NULLS LAST, CASE ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c2))  WHEN t1.c2 THEN CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-509451018' ELSE t1.c2 END WHEN ((0.20599738994321204)IS NOT(t1.c0)) THEN ((t1.c0)>(t1.c1)) WHEN CAST(t1.c2 AS TEXT) THEN CASE t1.c2  WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c0)*('7?')) WHEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c1)) THEN x'' END  NULLS FIRST LIMIT 3;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY t1.c1 ASC  NULLS LAST, (NOT ((~ (t1.c0)))) DESC  NULLS FIRST, ((t1.c0) IS FALSE) ASC  NULLS LAST, CASE ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c2))  WHEN t1.c2 THEN CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-509451018' ELSE t1.c2 END WHEN ((0.20599738994321204)IS NOT(t1.c0)) THEN ((t1.c0)>(t1.c1)) WHEN CAST(t1.c2 AS TEXT) THEN CASE t1.c2  WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c0)*('7?')) WHEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c1)) THEN x'' END  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c1)AND(NULL COLLATE NOCASE))) ORDER BY t1.c1 ASC  NULLS LAST, (NOT ((~ (t1.c0)))) DESC  NULLS FIRST, ((t1.c0) IS FALSE) ASC  NULLS LAST, CASE ((((((t1.c0)AND(t1.c0)))AND(t1.c1)))AND(t1.c2))  WHEN t1.c2 THEN CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN '-509451018' ELSE t1.c2 END WHEN ((0.20599738994321204)IS NOT(t1.c0)) THEN ((t1.c0)>(t1.c1)) WHEN CAST(t1.c2 AS TEXT) THEN CASE t1.c2  WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c0)) THEN ((t1.c0)*('7?')) WHEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c1)) THEN x'' END  NULLS FIRST LIMIT 3;
SELECT ALL * FROM v0 WHERE ((~ (x'df55' COLLATE BINARY))) ORDER BY (NULLIF(v0.c0, v0.c1) IN ()), ((v0.c2)AND(((v0.c2) IS TRUE))) DESC;
SELECT DISTINCT * FROM v0 WHERE ((~ (x'df55' COLLATE BINARY))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN '460976450' ELSE v0.c1 END)>(x'd9')), CASE CAST(v0.c1 AS TEXT)  WHEN (v0.c2 IN (v0.c1)) THEN v0.c1 END DESC, ((((('8[') NOTNULL), v0.c2 COLLATE BINARY, ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0))))>((v0.c1, ((((v0.c1)OR(v0.c2)))AND(v0.c0)), CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END))) DESC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM v0 WHERE ((~ (x'df55' COLLATE BINARY))) ORDER BY (NULLIF(v0.c0, v0.c1) IN ()), ((v0.c2)AND(((v0.c2) IS TRUE))) DESC;
SELECT ALL MIN(t1.c2) FROM t1 WHERE (((NULL) NOT NULL));
SELECT DISTINCT MIN(t1.c2) FROM t1 WHERE (((((NULL) NOT NULL))AND(TYPEOF(((t1.c0) BETWEEN (t1.c2) AND (t1.c2))))));
SELECT * FROM t1 WHERE (TRIM((t1.c1 IN ()), 'K衘')) ORDER BY (((t1.c2 IN (t1.c0)))<=(((t1.c1)IS('0.8197347745257832'))))  NULLS LAST, (((((t1.c1, t1.c0, x'0b', t1.c0))<((t1.c1, t1.c0, t1.c1, t1.c2))))<>((((t1.c2, t1.c2, t1.c0))>((t1.c2, x'', t1.c2))))) ASC;
SELECT DISTINCT * FROM t1 WHERE (TRIM((t1.c1 IN ()), 'K衘')) ORDER BY CAST(((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c1)) AS INTEGER) DESC  NULLS FIRST, t1.c2  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c0)), 0.7041228134663056 COLLATE RTRIM, CASE t1.c0  WHEN t1.c1 THEN t1.c2 END, ((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2))))<((t1.c0, ((t1.c1)>(t1.c2)), ((t1.c1)!=(t1.c1)), (t1.c0 IN (t1.c1)))))) ORDER BY CAST(((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c1)) AS INTEGER) DESC  NULLS FIRST, t1.c2  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE (TRIM((t1.c1 IN ()), 'K衘')) ORDER BY (((t1.c2 IN (t1.c0)))<=(((t1.c1)IS('0.8197347745257832'))))  NULLS LAST, (((((t1.c1, t1.c0, x'0b', t1.c0))<((t1.c1, t1.c0, t1.c1, t1.c2))))<>((((t1.c2, t1.c2, t1.c0))>((t1.c2, x'', t1.c2))))) ASC;
SELECT DISTINCT * FROM t1 WHERE (TRIM((t1.c1 IN ()), 'K衘')) ORDER BY CAST(((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c1)) AS INTEGER) DESC  NULLS FIRST, t1.c2  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c0)), 0.7041228134663056 COLLATE RTRIM, CASE t1.c0  WHEN t1.c1 THEN t1.c2 END, ((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2))))<((t1.c0, ((t1.c1)>(t1.c2)), ((t1.c1)!=(t1.c1)), (t1.c0 IN (t1.c1)))))) ORDER BY CAST(((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c1)) AS INTEGER) DESC  NULLS FIRST, t1.c2  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1, v0, vt0 WHERE (t1.c1);
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((t1.c1)AND(-1096316653))) ORDER BY LIKELIHOOD(((t1.c2)>(t1.c1)), ((vt0.c0)<(t1.c1)))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t1, v0, vt0 WHERE (t1.c1);
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((t1.c1)AND(-1096316653))) ORDER BY LIKELIHOOD(((t1.c2)>(t1.c1)), ((vt0.c0)<(t1.c1)))  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1, vt0, v0 WHERE (((((((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR((((t1.c0))<=((t1.c1))))))OR(t1.c1))) ORDER BY (((((((v0.c1)AND(vt0.c0)))OR(v0.c1)), (NOT (v0.c2))))<>((((((0.4059072687854868)OR(t1.c1)))OR(t1.c1)), (v0.c0 IN ())))) ASC  NULLS FIRST, ((t1.c2 COLLATE BINARY) BETWEEN (((((((((vt0.c0)AND(t1.c1)))OR(vt0.c0)))AND(t1.c2)))OR(v0.c0))) AND (((v0.c0)|(v0.c0)))) DESC  NULLS LAST, (((((+ (214245425)))OR((v0.c0 IN ()))))OR(((vt0.c0) BETWEEN (v0.c1) AND (t1.c0)))) ASC  NULLS FIRST;
SELECT * FROM t1, vt0, v0 WHERE (((((((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR((((t1.c0))<=((t1.c1))))))OR(t1.c1))) ORDER BY (((((((v0.c1)AND(vt0.c0)))OR(v0.c1)), (NOT (v0.c2))))<>((((((0.4059072687854868)OR(t1.c1)))OR(t1.c1)), (v0.c0 IN ())))) ASC  NULLS FIRST, ((t1.c2 COLLATE BINARY) BETWEEN (((((((((vt0.c0)AND(t1.c1)))OR(vt0.c0)))AND(t1.c2)))OR(v0.c0))) AND (((v0.c0)|(v0.c0)))) DESC  NULLS LAST, (((((+ (214245425)))OR((v0.c0 IN ()))))OR(((vt0.c0) BETWEEN (v0.c1) AND (t1.c0)))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t1, vt0, v0 WHERE (((((((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR((((t1.c0))<=((t1.c1))))))OR(t1.c1))) ORDER BY (((((((v0.c1)AND(vt0.c0)))OR(v0.c1)), (NOT (v0.c2))))<>((((((0.4059072687854868)OR(t1.c1)))OR(t1.c1)), (v0.c0 IN ())))) ASC  NULLS FIRST, ((t1.c2 COLLATE BINARY) BETWEEN (((((((((vt0.c0)AND(t1.c1)))OR(vt0.c0)))AND(t1.c2)))OR(v0.c0))) AND (((v0.c0)|(v0.c0)))) DESC  NULLS LAST, (((((+ (214245425)))OR((v0.c0 IN ()))))OR(((vt0.c0) BETWEEN (v0.c1) AND (t1.c0)))) ASC  NULLS FIRST;
SELECT * FROM t1, vt0, v0 WHERE (((((((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR((((t1.c0))<=((t1.c1))))))OR(t1.c1))) ORDER BY (((((((v0.c1)AND(vt0.c0)))OR(v0.c1)), (NOT (v0.c2))))<>((((((0.4059072687854868)OR(t1.c1)))OR(t1.c1)), (v0.c0 IN ())))) ASC  NULLS FIRST, ((t1.c2 COLLATE BINARY) BETWEEN (((((((((vt0.c0)AND(t1.c1)))OR(vt0.c0)))AND(t1.c2)))OR(v0.c0))) AND (((v0.c0)|(v0.c0)))) DESC  NULLS LAST, (((((+ (214245425)))OR((v0.c0 IN ()))))OR(((vt0.c0) BETWEEN (v0.c1) AND (t1.c0)))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END IN (vt0.c1 COLLATE BINARY)));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END IN (vt0.c1 COLLATE BINARY)))AND(((((vt0.c1)GLOB(vt0.c0))) IS FALSE)))) ORDER BY ((vt0.c1)IS NOT((('1661887489') NOTNULL))) DESC  NULLS LAST, vt0.c1 DESC  NULLS FIRST, (((vt0.c0 IN (vt0.c1)))LIKE(((vt0.c1)>=(vt0.c0)))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (CASE LENGTH(vt0.c0)  WHEN (((vt0.c1, 'B./dr', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, 'f0a', vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0))) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS TEXT) END) ORDER BY ((vt0.c1)IS NOT((('1661887489') NOTNULL))) DESC  NULLS LAST, vt0.c1 DESC  NULLS FIRST, (((vt0.c0 IN (vt0.c1)))LIKE(((vt0.c1)>=(vt0.c0)))) DESC  NULLS FIRST LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1, v0, vt0 WHERE (CAST(CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN NULL END AS NUMERIC)) ORDER BY (+ ((~ (t1.c1)))) ASC  NULLS LAST;
SELECT MAX(t1.c1) FROM t1, v0, vt0 WHERE (((CAST(CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN NULL END AS NUMERIC))AND((((v0.c1, t1.c0)) BETWEEN ((vt0.c0, vt0.c1)) AND ((t1.c2, v0.c1))) COLLATE RTRIM))) ORDER BY (+ ((~ (t1.c1)))) ASC  NULLS LAST;
SELECT * FROM vt0, v0, t1 WHERE (((((t1.c1)%(vt0.c1)))>=(CASE WHEN vt0.c1 THEN t1.c0 WHEN t1.c2 THEN -1.635930072E9 WHEN t1.c2 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)));
SELECT ALL * FROM vt0, v0, t1 WHERE (((((t1.c1)%(vt0.c1)))=(CASE WHEN vt0.c1 THEN t1.c0 WHEN t1.c2 THEN -1.635930072E9 WHEN t1.c2 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END))) ORDER BY (((t1.c2) IS FALSE) IN ((vt0.c0 IN ()))) ASC, t1.c2 ASC  NULLS LAST;
SELECT * FROM vt0, v0, t1 WHERE (((((t1.c1)%(vt0.c1)))>=(CASE WHEN vt0.c1 THEN t1.c0 WHEN t1.c2 THEN -1.635930072E9 WHEN t1.c2 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)));
SELECT ALL * FROM vt0, v0, t1 WHERE (((((t1.c1)%(vt0.c1)))=(CASE WHEN vt0.c1 THEN t1.c0 WHEN t1.c2 THEN -1.635930072E9 WHEN t1.c2 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END))) ORDER BY (((t1.c2) IS FALSE) IN ((vt0.c0 IN ()))) ASC, t1.c2 ASC  NULLS LAST;
SELECT ALL * FROM v0, t1 WHERE (((TYPEOF(t1.c0)) NOTNULL)) ORDER BY (((TRIM('1211546960', t1.c0), ((v0.c2) IS TRUE), ((v0.c2) IS FALSE)))<=(((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), NULL COLLATE BINARY, (v0.c0 IN ()))));
SELECT ALL * FROM v0, t1 WHERE (((((TYPEOF(t1.c0)) NOTNULL))AND(((CAST(v0.c0 AS BLOB))<(CASE WHEN t1.c2 THEN v0.c2 WHEN '464331602' THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 END))))) ORDER BY (((TRIM('1211546960', t1.c0), ((v0.c2) IS TRUE), ((v0.c2) IS FALSE)))<=(((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), NULL COLLATE BINARY, (v0.c0 IN ()))));
SELECT ALL * FROM v0, t1 WHERE (((TYPEOF(t1.c0)) NOTNULL)) ORDER BY (((TRIM('1211546960', t1.c0), ((v0.c2) IS TRUE), ((v0.c2) IS FALSE)))<=(((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), NULL COLLATE BINARY, (v0.c0 IN ()))));
SELECT ALL * FROM v0, t1 WHERE (((((TYPEOF(t1.c0)) NOTNULL))AND(((CAST(v0.c0 AS BLOB))<(CASE WHEN t1.c2 THEN v0.c2 WHEN '464331602' THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 END))))) ORDER BY (((TRIM('1211546960', t1.c0), ((v0.c2) IS TRUE), ((v0.c2) IS FALSE)))<=(((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), NULL COLLATE BINARY, (v0.c0 IN ()))));
SELECT * FROM vt0, v0, t1 WHERE (((((v0.c0)==(v0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))) AND (CAST(t1.c1 AS INTEGER))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((v0.c0)>=(v0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))) AND (CAST(t1.c1 AS INTEGER)))) LIMIT 3;
SELECT * FROM vt0, v0, t1 WHERE (((((v0.c0)==(v0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))) AND (CAST(t1.c1 AS INTEGER))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((v0.c0)>=(v0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))) AND (CAST(t1.c1 AS INTEGER)))) LIMIT 3;
SELECT MIN(vt0.c0) FROM vt0 WHERE (x'09');
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (x'09') ORDER BY (vt0.c0 IN ()) DESC, '/M4' INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 NOT INDEXED WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))<(((vt0.c1)>(vt0.c0))))) ORDER BY (vt0.c0 IN ()) DESC, '/M4';
SELECT * FROM vt0, v0, t1 WHERE (json_valid(((t1.c2) IS TRUE))) ORDER BY (((- (vt0.c0))) ISNULL), (((v0.c1)==(t1.c1)) IN (((((((((vt0.c1)OR(t1.c1)))AND(v0.c0)))AND(v0.c2)))OR(v0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (json_valid(((t1.c2) IS TRUE))) ORDER BY (((- (vt0.c0))) ISNULL), (((v0.c1)==(t1.c1)) IN (((((((((vt0.c1)OR(t1.c1)))AND(v0.c0)))AND(v0.c2)))OR(v0.c0))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((NOT (vt0.c0))) ORDER BY (((- (vt0.c0))) ISNULL), (((v0.c1)==(t1.c1)) IN (((((((((vt0.c1)OR(t1.c1)))AND(v0.c0)))AND(v0.c2)))OR(v0.c0))))  NULLS LAST;
SELECT * FROM vt0, v0, t1 WHERE (json_valid(((t1.c2) IS TRUE))) ORDER BY (((- (vt0.c0))) ISNULL), (((v0.c1)==(t1.c1)) IN (((((((((vt0.c1)OR(t1.c1)))AND(v0.c0)))AND(v0.c2)))OR(v0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (json_valid(((t1.c2) IS TRUE))) ORDER BY (((- (vt0.c0))) ISNULL), (((v0.c1)==(t1.c1)) IN (((((((((vt0.c1)OR(t1.c1)))AND(v0.c0)))AND(v0.c2)))OR(v0.c0))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((NOT (vt0.c0))) ORDER BY (((- (vt0.c0))) ISNULL), (((v0.c1)==(t1.c1)) IN (((((((((vt0.c1)OR(t1.c1)))AND(v0.c0)))AND(v0.c2)))OR(v0.c0))))  NULLS LAST;
SELECT MIN(v0.c1) FROM v0, vt0 WHERE (((CHANGES())LIKE(vt0.c0 COLLATE BINARY)));
SELECT MIN(v0.c1) FROM v0, vt0 WHERE (((((CHANGES())LIKE(vt0.c0 COLLATE BINARY)))AND(HEX((vt0.c1 IN (vt0.c1))))));
SELECT MAX(v0.c1) FROM v0 LEFT OUTER JOIN t1 ON (((vt0.c1 IN (v0.c1, v0.c0)))<=(((((((((vt0.c0)OR(v0.c0)))AND(t1.c1)))OR(0.13201281985879598)))AND(t1.c1)))) INNER JOIN vt0 ON TRIM(DISTINCT UNLIKELY(DISTINCT 'Li')) WHERE ((((v0.c2 IN (v0.c0, t1.c0)))!=(CAST(v0.c2 AS INTEGER)))) ORDER BY vt0.c1 ASC  NULLS FIRST, v0.c1 ASC;
SELECT ALL MAX(v0.c1) FROM v0 LEFT OUTER JOIN t1 ON (((vt0.c1 IN (v0.c1, v0.c0)))<=(((((((((vt0.c0)OR(v0.c0)))AND(t1.c1)))OR(0.13201281985879598)))AND(t1.c1)))) INNER JOIN vt0 ON TRIM(DISTINCT UNLIKELY(DISTINCT 'Li')) WHERE ((((((v0.c2 IN (v0.c0, t1.c0)))!=(CAST(v0.c2 AS INTEGER))))AND(CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)))) ORDER BY (CASE v0.c0  WHEN vt0.c1 THEN t1.c2 WHEN t1.c2 THEN v0.c0 WHEN v0.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c2 WHEN vt0.c1 THEN v0.c0 END IN (((v0.c1)IS(v0.c0)), ((v0.c0) BETWEEN (v0.c2) AND (v0.c2)), ((t1.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))) DESC  NULLS LAST, (((v0.c0 IN (t1.c1, t1.c0)))<<(((vt0.c0) NOT BETWEEN (x'') AND (t1.c0))))  NULLS LAST, ((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))), v0.c1 COLLATE BINARY, (((t1.c0, t1.c0)) NOT BETWEEN ((v0.c0, t1.c0)) AND ((v0.c0, v0.c1))), ((vt0.c0) ISNULL)))!=((TYPEOF(DISTINCT t1.c2), ((v0.c2)LIKE(v0.c0)), ((v0.c0)LIKE(NULL)), 0.09845714668671834))) DESC LIMIT 1;
SELECT * FROM t1, v0 WHERE ((((t1.c1, CASE v0.c0  WHEN v0.c0 THEN '-1287748498' WHEN t1.c2 THEN v0.c1 WHEN t1.c0 THEN v0.c1 ELSE t1.c1 END, ((x'') NOT BETWEEN (t1.c2) AND (v0.c0))))!=((v0.c1 COLLATE BINARY, ((((((((((v0.c1)AND(v0.c1)))OR(v0.c1)))AND(NULL)))OR(t1.c0)))AND(t1.c0)), ((v0.c0) IS TRUE))))) ORDER BY ((((t1.c2 IN (t1.c0)), (+ (v0.c0)), ((v0.c1) BETWEEN (v0.c1) AND (v0.c2))))=(((NOT (t1.c0)), (t1.c2 IN (t1.c1)), (NOT (x''))))) DESC, CAST(t1.c2 AS NUMERIC)  NULLS FIRST;
SELECT DISTINCT * FROM t1, v0 WHERE ((((t1.c1, CASE v0.c0  WHEN v0.c0 THEN '-1287748498' WHEN t1.c2 THEN v0.c1 WHEN t1.c0 THEN v0.c1 ELSE t1.c1 END, ((x'') NOT BETWEEN (t1.c2) AND (v0.c0))))<>((v0.c1 COLLATE BINARY, ((((((((((v0.c1)AND(v0.c1)))OR(v0.c1)))AND(NULL)))OR(t1.c0)))AND(t1.c0)), ((v0.c0) IS TRUE))))) ORDER BY v0.c0  NULLS LAST, COALESCE(DISTINCT CASE v0.c1  WHEN t1.c1 THEN t1.c2 ELSE v0.c0 END, (t1.c0 IN ('Fn')), ((v0.c1)%(t1.c2)), NULL) LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (((CAST(t1.c2 AS REAL))-(x'71b9'))) ORDER BY v0.c0  NULLS LAST, COALESCE(DISTINCT CASE v0.c1  WHEN t1.c1 THEN t1.c2 ELSE v0.c0 END, (t1.c0 IN ('Fn')), ((v0.c1)%(t1.c2)), NULL) LIMIT 3;
SELECT * FROM t1, v0 WHERE ((((t1.c1, CASE v0.c0  WHEN v0.c0 THEN '-1287748498' WHEN t1.c2 THEN v0.c1 WHEN t1.c0 THEN v0.c1 ELSE t1.c1 END, ((x'') NOT BETWEEN (t1.c2) AND (v0.c0))))!=((v0.c1 COLLATE BINARY, ((((((((((v0.c1)AND(v0.c1)))OR(v0.c1)))AND(NULL)))OR(t1.c0)))AND(t1.c0)), ((v0.c0) IS TRUE))))) ORDER BY ((((t1.c2 IN (t1.c0)), (+ (v0.c0)), ((v0.c1) BETWEEN (v0.c1) AND (v0.c2))))=(((NOT (t1.c0)), (t1.c2 IN (t1.c1)), (NOT (x''))))) DESC, CAST(t1.c2 AS NUMERIC)  NULLS FIRST;
SELECT DISTINCT * FROM t1, v0 WHERE ((((t1.c1, CASE v0.c0  WHEN v0.c0 THEN '-1287748498' WHEN t1.c2 THEN v0.c1 WHEN t1.c0 THEN v0.c1 ELSE t1.c1 END, ((x'') NOT BETWEEN (t1.c2) AND (v0.c0))))<>((v0.c1 COLLATE BINARY, ((((((((((v0.c1)AND(v0.c1)))OR(v0.c1)))AND(NULL)))OR(t1.c0)))AND(t1.c0)), ((v0.c0) IS TRUE))))) ORDER BY v0.c0  NULLS LAST, COALESCE(DISTINCT CASE v0.c1  WHEN t1.c1 THEN t1.c2 ELSE v0.c0 END, (t1.c0 IN ('Fn')), ((v0.c1)%(t1.c2)), NULL) LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (((CAST(t1.c2 AS REAL))-(x'71b9'))) ORDER BY v0.c0  NULLS LAST, COALESCE(DISTINCT CASE v0.c1  WHEN t1.c1 THEN t1.c2 ELSE v0.c0 END, (t1.c0 IN ('Fn')), ((v0.c1)%(t1.c2)), NULL) LIMIT 3;
SELECT MIN(v0.c1) FROM t1 NATURAL JOIN v0 WHERE (((((NULL)|(t1.c0)))<>('GP_')));
SELECT DISTINCT MIN(v0.c1) FROM t1 NATURAL JOIN v0 WHERE (((((((NULL)|(t1.c0)))!=('GP_')))AND(((((CAST(NULL AS BLOB))AND(t1.c2 COLLATE RTRIM)))OR(CAST(t1.c2 AS REAL)))))) ORDER BY (((((t1.c1))>((v0.c0))))%(NULL)), ((((((t1.c1)AND(v0.c2)))OR(0.256223784662318)))>>((t1.c1 IN (t1.c0, NULL))))  NULLS LAST, ((json_insert(v0.c0, v0.c0, v0.c0, v0.c0)) IS TRUE)  NULLS LAST LIMIT 0x3 INTERSECT SELECT DISTINCT MIN(v0.c1) FROM t1 NATURAL JOIN v0 WHERE (((((((((((t1.c2)OR(v0.c1)))AND(v0.c1)))OR(v0.c0)))AND(t1.c1))) ISNULL)) ORDER BY (((((t1.c1))>((v0.c0))))%(NULL)), ((((((t1.c1)AND(v0.c2)))OR(0.256223784662318)))>>((t1.c1 IN (t1.c0, NULL))))  NULLS LAST, ((json_insert(v0.c0, v0.c0, v0.c0, v0.c0)) IS TRUE)  NULLS LAST LIMIT 3;
SELECT ALL MAX(v0.c2) FROM vt0, v0, t1 WHERE (((NOT (t1.c2)) IN ())) ORDER BY ((((v0.c2) IS TRUE))>(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST, ((v0.c2) NOT BETWEEN (CAST('115292246' AS INTEGER)) AND (CASE WHEN v0.c2 THEN t1.c1 WHEN vt0.c1 THEN v0.c1 WHEN vt0.c0 THEN t1.c1 END))  NULLS LAST, ((CASE WHEN vt0.c0 THEN t1.c2 WHEN t1.c1 THEN vt0.c0 ELSE vt0.c1 END)&(((t1.c2) NOT BETWEEN (v0.c2) AND (vt0.c0)))) ASC;
SELECT DISTINCT MAX(v0.c2) FROM vt0, v0, t1 WHERE (((NOT (t1.c2)) IN ())) ORDER BY ((((v0.c2) IS TRUE))>(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST, ((v0.c2) NOT BETWEEN (CAST('115292246' AS INTEGER)) AND (CASE WHEN v0.c2 THEN t1.c1 WHEN vt0.c1 THEN v0.c1 WHEN vt0.c0 THEN t1.c1 END))  NULLS LAST, ((CASE WHEN vt0.c0 THEN t1.c2 WHEN t1.c1 THEN vt0.c0 ELSE vt0.c1 END)&(((t1.c2) NOT BETWEEN (v0.c2) AND (vt0.c0)))) ASC INTERSECT SELECT DISTINCT MAX(v0.c2) FROM vt0, v0, t1 WHERE (((((((x'')==(t1.c1)))AND(((((t1.c2)AND(t1.c2)))OR(v0.c2)))))AND((((t1.c2, v0.c1, v0.c2)) BETWEEN ((t1.c0, vt0.c1, t1.c2)) AND ((t1.c2, t1.c1, v0.c2)))))) ORDER BY ((((v0.c2) IS TRUE))>(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST, ((v0.c2) NOT BETWEEN (CAST('115292246' AS INTEGER)) AND (CASE WHEN v0.c2 THEN t1.c1 WHEN vt0.c1 THEN v0.c1 WHEN vt0.c0 THEN t1.c1 END))  NULLS LAST, ((CASE WHEN vt0.c0 THEN t1.c2 WHEN t1.c1 THEN vt0.c0 ELSE vt0.c1 END)&(((t1.c2) NOT BETWEEN (v0.c2) AND (vt0.c0)))) ASC;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((',D')OR(t1.c0)))OR(v0.c1))) IS FALSE)) ORDER BY '-1568884639' COLLATE RTRIM DESC, (+ (vt0.c0)) DESC;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((',D')OR(t1.c0)))OR(v0.c1))) IS FALSE)) ORDER BY '-1568884639' COLLATE RTRIM DESC, (+ (vt0.c0)) DESC LIMIT 0x0;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((',D')OR(t1.c0)))OR(v0.c1))) IS FALSE)) ORDER BY '-1568884639' COLLATE RTRIM DESC, (+ (vt0.c0)) DESC;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((',D')OR(t1.c0)))OR(v0.c1))) IS FALSE)) ORDER BY '-1568884639' COLLATE RTRIM DESC, (+ (vt0.c0)) DESC LIMIT 0x0;
SELECT ALL MIN(v0.c2) FROM v0, vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c2)) IN (((((v0.c0)AND(v0.c2)))OR(v0.c1)))));
SELECT DISTINCT MIN(v0.c2) FROM v0, vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c2)) IN (((((v0.c0)AND(v0.c2)))OR(v0.c1))))) INTERSECT SELECT DISTINCT MIN(v0.c2) FROM v0, vt0 WHERE (x'ec' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c1)/(v0.c1)) IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c1)/(v0.c1)) IN ()))AND(((((((((((CASE v0.c1  WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 END)AND((((v0.c2, vt0.c1, 'i1f|y?s', vt0.c0, vt0.c0))=((vt0.c0, v0.c2, v0.c1, v0.c2, v0.c1))))))OR((x'' IN ()))))OR((((v0.c2))<((v0.c2))))))OR(CAST(vt0.c1 AS BLOB))))AND(((v0.c0) ISNULL)))))) LIMIT 1 INTERSECT SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((((vt0.c1))<=((v0.c2))) AS NUMERIC)) LIMIT 1;
SELECT * FROM vt0, v0 WHERE ((((- (v0.c0))) IS TRUE)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (DATE(v0.c0, vt0.c1, v0.c1, vt0.c0))), (((((((NOT (vt0.c0)))AND(CAST(1.709102821E9 AS REAL))))AND(((v0.c1) NOT BETWEEN ('-624616263') AND (v0.c2)))))OR((~ (v0.c0)))) DESC;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((- (v0.c0))) IS TRUE)) ORDER BY ((((v0.c2) NOT NULL)) ISNULL);
SELECT * FROM vt0, v0 WHERE ((((- (v0.c0))) IS TRUE)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (DATE(v0.c0, vt0.c1, v0.c1, vt0.c0))), (((((((NOT (vt0.c0)))AND(CAST(1.709102821E9 AS REAL))))AND(((v0.c1) NOT BETWEEN ('-624616263') AND (v0.c2)))))OR((~ (v0.c0)))) DESC;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((- (v0.c0))) IS TRUE)) ORDER BY ((((v0.c2) NOT NULL)) ISNULL);
SELECT * FROM t1 NATURAL JOIN v0 WHERE (0.6648623108275233);
SELECT ALL * FROM t1 NATURAL JOIN v0 WHERE (0.6648623108275233) ORDER BY ((((((((v0.c1)!=(v0.c0)))AND(CAST(t1.c2 AS INTEGER))))AND(((v0.c1) IS TRUE))))OR(CAST(v0.c1 AS REAL))), t1.c0  NULLS FIRST;
SELECT * FROM t1 NATURAL JOIN v0 WHERE (0.6648623108275233);
SELECT ALL * FROM t1 NATURAL JOIN v0 WHERE (0.6648623108275233) ORDER BY ((((((((v0.c1)!=(v0.c0)))AND(CAST(t1.c2 AS INTEGER))))AND(((v0.c1) IS TRUE))))OR(CAST(v0.c1 AS REAL))), t1.c0  NULLS FIRST;
SELECT * FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (v0.c2) AND (x'48')))IS NOT((+ (v0.c2)))) WHERE (v0.c1) ORDER BY NULL  NULLS LAST, CAST(CASE t1.c2  WHEN vt0.c1 THEN t1.c2 WHEN v0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c1 END AS INTEGER) ASC  NULLS FIRST;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (v0.c2) AND (x'48')))IS NOT((+ (v0.c2)))) WHERE (v0.c1) ORDER BY NULL  NULLS LAST, CAST(CASE t1.c2  WHEN vt0.c1 THEN t1.c2 WHEN v0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c1 END AS INTEGER) ASC  NULLS FIRST;
SELECT * FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (v0.c2) AND (x'48')))IS NOT((+ (v0.c2)))) WHERE (v0.c1) ORDER BY NULL  NULLS LAST, CAST(CASE t1.c2  WHEN vt0.c1 THEN t1.c2 WHEN v0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c1 END AS INTEGER) ASC  NULLS FIRST;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (v0.c2) AND (x'48')))IS NOT((+ (v0.c2)))) WHERE (v0.c1) ORDER BY NULL  NULLS LAST, CAST(CASE t1.c2  WHEN vt0.c1 THEN t1.c2 WHEN v0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c1 END AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)) COLLATE BINARY);
SELECT DISTINCT COUNT(*) FROM v0, vt0 WHERE (((((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)) COLLATE BINARY)AND(((CASE vt0.c0  WHEN vt0.c1 THEN v0.c1 ELSE vt0.c1 END)>=(0.16157798331137274))))) LIMIT 2;
SELECT * FROM vt0 WHERE (((((0.2954818389842123)OR(LIKELY(DISTINCT vt0.c0))))OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT DISTINCT * FROM vt0 WHERE (((((0.2954818389842123)OR(LIKELY(DISTINCT vt0.c0))))OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))==(((vt0.c0) IS FALSE))) DESC  NULLS FIRST, ((((((((-1.393225757E9)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT NULL) DESC  NULLS FIRST, CASE WHEN ((vt0.c1) ISNULL) THEN (((('1038010726')AND(vt0.c0)))OR(vt0.c0)) WHEN CAST(0.7681702377088321 AS INTEGER) THEN ((vt0.c0)|(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN 'K柨' ELSE vt0.c1 END THEN CAST(vt0.c1 AS NUMERIC) WHEN x'58' THEN ((vt0.c1) ISNULL) ELSE LIKELY(vt0.c1) END DESC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)OR(-0.0))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))=(((vt0.c0) IS FALSE))) DESC  NULLS FIRST, ((((((((-1.393225757E9)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT NULL) DESC  NULLS FIRST, CASE WHEN ((vt0.c1) ISNULL) THEN (((('1038010726')AND(vt0.c0)))OR(vt0.c0)) WHEN CAST(0.7681702377088321 AS INTEGER) THEN ((vt0.c0)|(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN 'K柨' ELSE vt0.c1 END THEN CAST(vt0.c1 AS NUMERIC) WHEN x'58' THEN ((vt0.c1) ISNULL) ELSE LIKELY(vt0.c1) END DESC LIMIT 0x1;
SELECT * FROM vt0 WHERE (((((0.2954818389842123)OR(LIKELY(DISTINCT vt0.c0))))OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT DISTINCT * FROM vt0 WHERE (((((0.2954818389842123)OR(LIKELY(DISTINCT vt0.c0))))OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))==(((vt0.c0) IS FALSE))) DESC  NULLS FIRST, ((((((((-1.393225757E9)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT NULL) DESC  NULLS FIRST, CASE WHEN ((vt0.c1) ISNULL) THEN (((('1038010726')AND(vt0.c0)))OR(vt0.c0)) WHEN CAST(0.7681702377088321 AS INTEGER) THEN ((vt0.c0)|(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN 'K柨' ELSE vt0.c1 END THEN CAST(vt0.c1 AS NUMERIC) WHEN x'58' THEN ((vt0.c1) ISNULL) ELSE LIKELY(vt0.c1) END DESC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)OR(-0.0))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))=(((vt0.c0) IS FALSE))) DESC  NULLS FIRST, ((((((((-1.393225757E9)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT NULL) DESC  NULLS FIRST, CASE WHEN ((vt0.c1) ISNULL) THEN (((('1038010726')AND(vt0.c0)))OR(vt0.c0)) WHEN CAST(0.7681702377088321 AS INTEGER) THEN ((vt0.c0)|(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN 'K柨' ELSE vt0.c1 END THEN CAST(vt0.c1 AS NUMERIC) WHEN x'58' THEN ((vt0.c1) ISNULL) ELSE LIKELY(vt0.c1) END DESC LIMIT 0x1;
SELECT ALL * FROM t1 WHERE (CASE (- (t1.c0))  WHEN (((t1.c1, t1.c1))<=((t1.c0, t1.c2))) THEN ((t1.c2)%(t1.c1)) WHEN (t1.c2 IN (t1.c2)) THEN JULIANDAY(x'd2', t1.c0, NULL, t1.c0, t1.c2) WHEN (~ (t1.c2)) THEN ((t1.c2) NOTNULL) WHEN LOWER(t1.c1) THEN (((t1.c2, t1.c1))<=((t1.c1, t1.c2))) ELSE t1.c2 COLLATE NOCASE END) ORDER BY CAST(t1.c2 AS INTEGER) COLLATE NOCASE DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (CASE (- (t1.c0))  WHEN (((t1.c1, t1.c1))<=((t1.c0, t1.c2))) THEN ((t1.c2)%(t1.c1)) WHEN (t1.c2 IN (t1.c2)) THEN JULIANDAY(x'd2', t1.c0, NULL, t1.c0, t1.c2) WHEN (~ (t1.c2)) THEN ((t1.c2) NOTNULL) WHEN LOWER(t1.c1) THEN (((t1.c2, t1.c1))<=((t1.c1, t1.c2))) ELSE t1.c2 COLLATE NOCASE END) ORDER BY IFNULL(NULL, t1.c2)  NULLS LAST, CAST(((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c2)) AS BLOB) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE ((+ ((((((('900738422')AND(t1.c1)))AND(t1.c1)))AND(t1.c0))))) ORDER BY IFNULL(NULL, t1.c2)  NULLS LAST, CAST(((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c2)) AS BLOB) ASC;
SELECT ALL * FROM t1 WHERE (CASE (- (t1.c0))  WHEN (((t1.c1, t1.c1))<=((t1.c0, t1.c2))) THEN ((t1.c2)%(t1.c1)) WHEN (t1.c2 IN (t1.c2)) THEN JULIANDAY(x'd2', t1.c0, NULL, t1.c0, t1.c2) WHEN (~ (t1.c2)) THEN ((t1.c2) NOTNULL) WHEN LOWER(t1.c1) THEN (((t1.c2, t1.c1))<=((t1.c1, t1.c2))) ELSE t1.c2 COLLATE NOCASE END) ORDER BY CAST(t1.c2 AS INTEGER) COLLATE NOCASE DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (CASE (- (t1.c0))  WHEN (((t1.c1, t1.c1))<=((t1.c0, t1.c2))) THEN ((t1.c2)%(t1.c1)) WHEN (t1.c2 IN (t1.c2)) THEN JULIANDAY(x'd2', t1.c0, NULL, t1.c0, t1.c2) WHEN (~ (t1.c2)) THEN ((t1.c2) NOTNULL) WHEN LOWER(t1.c1) THEN (((t1.c2, t1.c1))<=((t1.c1, t1.c2))) ELSE t1.c2 COLLATE NOCASE END) ORDER BY IFNULL(NULL, t1.c2)  NULLS LAST, CAST(((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c2)) AS BLOB) ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE ((+ ((((((('900738422')AND(t1.c1)))AND(t1.c1)))AND(t1.c0))))) ORDER BY IFNULL(NULL, t1.c2)  NULLS LAST, CAST(((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c2)) AS BLOB) ASC;
SELECT ALL * FROM v0 WHERE ((((((((v0.c2, v0.c1)) BETWEEN ((v0.c1, v0.c1)) AND ((v0.c1, x'51'))))AND(v0.c1)))OR(((v0.c0) ISNULL)))) ORDER BY ('' IN (v0.c0)) COLLATE BINARY, (0.4630752211119069 IN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))  NULLS FIRST, CAST(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) AS TEXT);
SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c2, v0.c1)) BETWEEN ((v0.c1, v0.c1)) AND ((v0.c1, x'51'))))AND(v0.c1)))OR(((v0.c0) ISNULL)))) ORDER BY ((TYPEOF(v0.c0))&((+ (v0.c0)))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM v0 WHERE (CASE WHEN ABS(DISTINCT v0.c1) THEN v0.c2 WHEN (v0.c0 IN (v0.c1)) THEN v0.c2 ELSE LENGTH(v0.c2) END) ORDER BY ((TYPEOF(v0.c0))&((+ (v0.c0)))) LIMIT 0x2;
SELECT ALL * FROM v0 WHERE ((((((((v0.c2, v0.c1)) BETWEEN ((v0.c1, v0.c1)) AND ((v0.c1, x'51'))))AND(v0.c1)))OR(((v0.c0) ISNULL)))) ORDER BY ('' IN (v0.c0)) COLLATE BINARY, (0.4630752211119069 IN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))  NULLS FIRST, CAST(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) AS TEXT);
SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c2, v0.c1)) BETWEEN ((v0.c1, v0.c1)) AND ((v0.c1, x'51'))))AND(v0.c1)))OR(((v0.c0) ISNULL)))) ORDER BY ((TYPEOF(v0.c0))&((+ (v0.c0)))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM v0 WHERE (CASE WHEN ABS(DISTINCT v0.c1) THEN v0.c2 WHEN (v0.c0 IN (v0.c1)) THEN v0.c2 ELSE LENGTH(v0.c2) END) ORDER BY ((TYPEOF(v0.c0))&((+ (v0.c0)))) LIMIT 0x2;
SELECT ALL MAX(v0.c0) FROM v0 WHERE (v0.c2);
SELECT DISTINCT MAX(v0.c0) FROM v0 WHERE (((v0.c2)AND(((LIKELY(v0.c0))+(UPPER(DISTINCT v0.c2)))))) ORDER BY (((((((v0.c0)OR(v0.c0)))OR(v0.c1)))OR(v0.c1)) IN (((v0.c0) IS TRUE), (v0.c2 IN (v0.c1)))) ASC, (NOT ((((v0.c2, v0.c1))<((v0.c2, v0.c2))))) ASC INTERSECT SELECT DISTINCT MAX(v0.c0) FROM v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (((((((v0.c0)OR(v0.c0)))OR(v0.c1)))OR(v0.c1)) IN (((v0.c0) IS TRUE), (v0.c2 IN (v0.c1)))) ASC, (NOT ((((v0.c2, v0.c1))<((v0.c2, v0.c2))))) ASC;
SELECT * FROM vt0, v0 LEFT OUTER JOIN t1 ON v0.c1 WHERE (x'2e') ORDER BY CAST(((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c2)) AS INTEGER) ASC, ((((t1.c2)IS NOT(vt0.c0)))>>(TYPEOF(DISTINCT t1.c2))) ASC, ((LOWER(t1.c1)) NOT BETWEEN (((v0.c1)<=(v0.c0))) AND (((((v0.c0)OR(t1.c1)))AND(t1.c2))));
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN t1 ON v0.c1 WHERE (x'2e') ORDER BY ((t1.c1 COLLATE BINARY) NOT NULL), ((TRIM(v0.c2))%(((((((((t1.c1)OR(vt0.c0)))AND(v0.c1)))AND(vt0.c1)))OR(t1.c1)))) DESC INTERSECT SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN t1 ON v0.c1 WHERE ((vt0.c1 COLLATE BINARY IN ())) ORDER BY ((t1.c1 COLLATE BINARY) NOT NULL), ((TRIM(v0.c2))%(((((((((t1.c1)OR(vt0.c0)))AND(v0.c1)))AND(vt0.c1)))OR(t1.c1)))) DESC;
SELECT * FROM vt0, v0 LEFT OUTER JOIN t1 ON v0.c1 WHERE (x'2e') ORDER BY CAST(((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c2)) AS INTEGER) ASC, ((((t1.c2)IS NOT(vt0.c0)))>>(TYPEOF(DISTINCT t1.c2))) ASC, ((LOWER(t1.c1)) NOT BETWEEN (((v0.c1)<=(v0.c0))) AND (((((v0.c0)OR(t1.c1)))AND(t1.c2))));
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN t1 ON v0.c1 WHERE (x'2e') ORDER BY ((t1.c1 COLLATE BINARY) NOT NULL), ((TRIM(v0.c2))%(((((((((t1.c1)OR(vt0.c0)))AND(v0.c1)))AND(vt0.c1)))OR(t1.c1)))) DESC INTERSECT SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN t1 ON v0.c1 WHERE ((vt0.c1 COLLATE BINARY IN ())) ORDER BY ((t1.c1 COLLATE BINARY) NOT NULL), ((TRIM(v0.c2))%(((((((((t1.c1)OR(vt0.c0)))AND(v0.c1)))AND(vt0.c1)))OR(t1.c1)))) DESC;
SELECT ALL COUNT(*) FROM t1, v0 WHERE (CASE WHEN ((((((((((t1.c2)OR(v0.c1)))AND(t1.c1)))AND(v0.c2)))OR(v0.c2)))OR(v0.c1)) THEN ((v0.c0)<=(t1.c1)) WHEN ((((v0.c1)OR(v0.c1)))OR(t1.c0)) THEN (v0.c0 IN ()) WHEN v0.c1 THEN ((t1.c0)%(NULL)) WHEN CASE WHEN t1.c2 THEN t1.c1 END THEN CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END END) ORDER BY ((((v0.c0)|(t1.c1))) IS FALSE);
SELECT DISTINCT COUNT(*) FROM t1, v0 WHERE (((CASE WHEN ((((((((((t1.c2)OR(v0.c1)))AND(t1.c1)))AND(v0.c2)))OR(v0.c2)))OR(v0.c1)) THEN ((v0.c0)<(t1.c1)) WHEN ((((v0.c1)OR(v0.c1)))OR(t1.c0)) THEN (v0.c0 IN ()) WHEN v0.c1 THEN ((t1.c0)%(NULL)) WHEN CASE WHEN t1.c2 THEN t1.c1 END THEN CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END END)AND((((+ (v0.c1)))&((+ (0.7781919942566822))))))) ORDER BY ((t1.c2 COLLATE NOCASE)+((v0.c0 IN ()))) DESC  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM t1, v0, vt0 WHERE ((((CASE t1.c2  WHEN vt0.c1 THEN v0.c2 WHEN t1.c2 THEN t1.c1 END, ((v0.c0) NOT BETWEEN (t1.c0) AND (v0.c2))))<((((v0.c1)-(v0.c0)), LOWER('*_')))));
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE ((((((CASE t1.c2  WHEN vt0.c1 THEN v0.c2 WHEN t1.c2 THEN t1.c1 END, ((v0.c0) NOT BETWEEN (t1.c0) AND (v0.c2))))<((((v0.c1)-(v0.c0)), LOWER('*_')))))AND(t1.c2))) ORDER BY NULL  NULLS FIRST, (((((vt0.c0))<((t1.c1)))) NOT BETWEEN ((((t1.c2))!=((v0.c1)))) AND (((((((t1.c0)OR(t1.c2)))OR(v0.c1)))AND(t1.c1))));
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS INTEGER));
SELECT ALL * FROM v0 WHERE (((CAST(CAST(v0.c0 AS REAL) AS INTEGER))AND(((CAST(v0.c2 AS TEXT))+(((v0.c0) NOTNULL)))))) ORDER BY (~ (((((v0.c0)AND(v0.c0)))AND(v0.c1)))) ASC, TRIM(DISTINCT (~ (v0.c1)));
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS INTEGER));
SELECT ALL * FROM v0 WHERE (((CAST(CAST(v0.c0 AS REAL) AS INTEGER))AND(((CAST(v0.c2 AS TEXT))+(((v0.c0) NOTNULL)))))) ORDER BY (~ (((((v0.c0)AND(v0.c0)))AND(v0.c1)))) ASC, TRIM(DISTINCT (~ (v0.c1)));
SELECT MIN(vt0.c1) FROM vt0 WHERE ((~ (((vt0.c0)IS NOT(vt0.c0)))));
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((~ (((vt0.c0)IS NOT(vt0.c0))))) ORDER BY (NOT (((NULL)%(vt0.c1)))), vt0.c0 ASC, (((vt0.c0, 'QI\c떳I')) BETWEEN ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)), vt0.c1)) AND ((((vt0.c0)==(vt0.c1)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN '' THEN vt0.c0 END))) DESC  NULLS LAST;
SELECT * FROM t1, vt0 WHERE ((CAST(0.7253639414973234 AS TEXT) IN (CAST(t1.c2 AS NUMERIC)))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN LOWER(t1.c0) ELSE ((((((t1.c0)AND(vt0.c0)))OR(t1.c1)))OR(t1.c2)) END ASC, ((((t1.c2)>(t1.c1)))GLOB(vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((CAST(0.7253639414973234 AS TEXT) IN (CAST(t1.c2 AS NUMERIC))))AND(CASE WHEN (- (vt0.c1)) THEN LIKELIHOOD(DISTINCT t1.c2, t1.c1) WHEN ((vt0.c0)=(vt0.c1)) THEN t1.c2 COLLATE RTRIM WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, t1.c0, t1.c2)) AND ((vt0.c0, vt0.c1, vt0.c1))) THEN vt0.c1 WHEN CAST(vt0.c1 AS REAL) THEN ((vt0.c0)IS NOT(t1.c0)) END))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN LOWER(t1.c0) ELSE ((((((t1.c0)AND(vt0.c0)))OR(t1.c1)))OR(t1.c2)) END ASC, ((((t1.c2)>(t1.c1)))GLOB(vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE ((((t1.c1)/(t1.c0)) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN LOWER(t1.c0) ELSE ((((((t1.c0)AND(vt0.c0)))OR(t1.c1)))OR(t1.c2)) END ASC, ((((t1.c2)>(t1.c1)))GLOB(vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST LIMIT 1;
SELECT * FROM t1, vt0 WHERE ((CAST(0.7253639414973234 AS TEXT) IN (CAST(t1.c2 AS NUMERIC)))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN LOWER(t1.c0) ELSE ((((((t1.c0)AND(vt0.c0)))OR(t1.c1)))OR(t1.c2)) END ASC, ((((t1.c2)>(t1.c1)))GLOB(vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((CAST(0.7253639414973234 AS TEXT) IN (CAST(t1.c2 AS NUMERIC))))AND(CASE WHEN (- (vt0.c1)) THEN LIKELIHOOD(DISTINCT t1.c2, t1.c1) WHEN ((vt0.c0)=(vt0.c1)) THEN t1.c2 COLLATE RTRIM WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, t1.c0, t1.c2)) AND ((vt0.c0, vt0.c1, vt0.c1))) THEN vt0.c1 WHEN CAST(vt0.c1 AS REAL) THEN ((vt0.c0)IS NOT(t1.c0)) END))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN LOWER(t1.c0) ELSE ((((((t1.c0)AND(vt0.c0)))OR(t1.c1)))OR(t1.c2)) END ASC, ((((t1.c2)>(t1.c1)))GLOB(vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE ((((t1.c1)/(t1.c0)) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN LOWER(t1.c0) ELSE ((((((t1.c0)AND(vt0.c0)))OR(t1.c1)))OR(t1.c2)) END ASC, ((((t1.c2)>(t1.c1)))GLOB(vt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST LIMIT 1;
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY vt0.c1 COLLATE BINARY  NULLS FIRST, TYPEOF((~ (vt0.c0))) ASC, ((CAST(vt0.c0 AS REAL))OR(CAST(vt0.c0 AS INTEGER)));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((vt0.c1)IS(vt0.c0)) COLLATE NOCASE  NULLS LAST LIMIT 0x0;
SELECT * FROM vt0 WHERE (TIME(HEX(0xffffffff9b2b197c), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), 0.35140704349181495, ((vt0.c0) NOTNULL), (+ (vt0.c1)))) ORDER BY NULLIF(DISTINCT vt0.c0 COLLATE NOCASE, ((vt0.c0)<>(vt0.c1)))  NULLS FIRST, vt0.c0  NULLS FIRST, vt0.c0;
SELECT DISTINCT * FROM vt0 WHERE (((TIME(HEX(-1691674244), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), 0.35140704349181495, ((vt0.c0) NOTNULL), (+ (vt0.c1))))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY NULLIF(DISTINCT vt0.c0 COLLATE NOCASE, ((vt0.c0)<>(vt0.c1)))  NULLS FIRST, vt0.c0  NULLS FIRST, vt0.c0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c1))<=((0.8188919257458961, -1e500)))))) ORDER BY NULLIF(DISTINCT vt0.c0 COLLATE NOCASE, ((vt0.c0)!=(vt0.c1)))  NULLS FIRST, vt0.c0  NULLS FIRST, vt0.c0;
SELECT * FROM vt0 WHERE (TIME(HEX(0xffffffff9b2b197c), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), 0.35140704349181495, ((vt0.c0) NOTNULL), (+ (vt0.c1)))) ORDER BY NULLIF(DISTINCT vt0.c0 COLLATE NOCASE, ((vt0.c0)<>(vt0.c1)))  NULLS FIRST, vt0.c0  NULLS FIRST, vt0.c0;
SELECT DISTINCT * FROM vt0 WHERE (((TIME(HEX(-1691674244), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), 0.35140704349181495, ((vt0.c0) NOTNULL), (+ (vt0.c1))))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY NULLIF(DISTINCT vt0.c0 COLLATE NOCASE, ((vt0.c0)<>(vt0.c1)))  NULLS FIRST, vt0.c0  NULLS FIRST, vt0.c0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c1))<=((0.8188919257458961, -1e500)))))) ORDER BY NULLIF(DISTINCT vt0.c0 COLLATE NOCASE, ((vt0.c0)!=(vt0.c1)))  NULLS FIRST, vt0.c0  NULLS FIRST, vt0.c0;
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (v0.c1);
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (((v0.c1)AND(((((((((vt0.c0) NOTNULL))AND(CAST(v0.c0 AS TEXT))))OR(((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c1)))))AND(vt0.c0 COLLATE NOCASE))))) LIMIT 3;
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (v0.c1);
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (((v0.c1)AND(((((((((vt0.c0) NOTNULL))AND(CAST(v0.c0 AS TEXT))))OR(((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c1)))))AND(vt0.c0 COLLATE NOCASE))))) LIMIT 3;
SELECT ALL * FROM v0, t1 WHERE (CAST(v0.c2 AS NUMERIC) COLLATE NOCASE);
SELECT DISTINCT * FROM v0, t1 WHERE (((CAST(v0.c2 AS NUMERIC) COLLATE NOCASE)AND(t1.c2))) ORDER BY CASE t1.c1 COLLATE BINARY  WHEN ((t1.c0)&(t1.c1)) THEN CASE v0.c2  WHEN t1.c2 THEN NULL ELSE v0.c1 END END ASC, (NOT (v0.c1)) COLLATE RTRIM  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE (CAST((('1909464343')<<(v0.c0)) AS NUMERIC)) ORDER BY CASE t1.c1 COLLATE BINARY  WHEN ((t1.c0)&(t1.c1)) THEN CASE v0.c2  WHEN t1.c2 THEN NULL ELSE v0.c1 END END ASC, (NOT (v0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM v0, t1 WHERE (CAST(v0.c2 AS NUMERIC) COLLATE NOCASE);
SELECT DISTINCT * FROM v0, t1 WHERE (((CAST(v0.c2 AS NUMERIC) COLLATE NOCASE)AND(t1.c2))) ORDER BY CASE t1.c1 COLLATE BINARY  WHEN ((t1.c0)&(t1.c1)) THEN CASE v0.c2  WHEN t1.c2 THEN NULL ELSE v0.c1 END END ASC, (NOT (v0.c1)) COLLATE RTRIM  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE (CAST((('1909464343')<<(v0.c0)) AS NUMERIC)) ORDER BY CASE t1.c1 COLLATE BINARY  WHEN ((t1.c0)&(t1.c1)) THEN CASE v0.c2  WHEN t1.c2 THEN NULL ELSE v0.c1 END END ASC, (NOT (v0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c2) BETWEEN (t1.c2 COLLATE NOCASE) AND (SQLITE_VERSION()))) ORDER BY ((((NULL)OR(((t1.c1)<<(t1.c1)))))AND((- (t1.c1)))), CAST(((t1.c0)OR(t1.c2)) AS TEXT) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((t1.c2) BETWEEN (t1.c2 COLLATE NOCASE) AND (SQLITE_VERSION()))) ORDER BY ((((NULL)OR(((t1.c1)<<(t1.c1)))))AND((- (t1.c1)))), CAST(((t1.c0)OR(t1.c2)) AS TEXT) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((((t1.c1)OR(t1.c0)))%(CAST(t1.c2 AS NUMERIC)))) ORDER BY ((((NULL)OR(((t1.c1)<<(t1.c1)))))AND((- (t1.c1)))), CAST(((t1.c0)OR(t1.c2)) AS TEXT) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((t1.c2) BETWEEN (t1.c2 COLLATE NOCASE) AND (SQLITE_VERSION()))) ORDER BY ((((NULL)OR(((t1.c1)<<(t1.c1)))))AND((- (t1.c1)))), CAST(((t1.c0)OR(t1.c2)) AS TEXT) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((t1.c2) BETWEEN (t1.c2 COLLATE NOCASE) AND (SQLITE_VERSION()))) ORDER BY ((((NULL)OR(((t1.c1)<<(t1.c1)))))AND((- (t1.c1)))), CAST(((t1.c0)OR(t1.c2)) AS TEXT) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((((t1.c1)OR(t1.c0)))%(CAST(t1.c2 AS NUMERIC)))) ORDER BY ((((NULL)OR(((t1.c1)<<(t1.c1)))))AND((- (t1.c1)))), CAST(((t1.c0)OR(t1.c2)) AS TEXT) ASC  NULLS LAST LIMIT 0;
SELECT ALL MAX(v0.c1) FROM v0 NATURAL JOIN vt0 CROSS JOIN t1 ON ((((t1.c0)>>(t1.c1))) BETWEEN ((~ (v0.c2))) AND (((t1.c1)AND(t1.c2)))) WHERE (((((((((CAST(t1.c2 AS BLOB))OR(v0.c2 COLLATE NOCASE)))OR(t1.c0)))OR(((v0.c1) NOT NULL))))AND(((v0.c2)<=(t1.c1))))) ORDER BY ((CAST(0.31636427486005403 AS INTEGER)) BETWEEN (((v0.c0)/(v0.c2))) AND (v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT MAX(v0.c1) FROM v0 NATURAL JOIN vt0 CROSS JOIN t1 ON ((((t1.c0)>>(t1.c1))) BETWEEN ((~ (v0.c2))) AND (((t1.c1)AND(t1.c2)))) WHERE (((((((((CAST(t1.c2 AS BLOB))OR(v0.c2 COLLATE NOCASE)))OR(t1.c0)))OR(((v0.c1) NOT NULL))))AND(((v0.c2)<=(t1.c1))))) ORDER BY ((CAST(0.31636427486005403 AS INTEGER)) BETWEEN (((v0.c0)/(v0.c2))) AND (v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c1 IN ()))>(t1.c2 COLLATE NOCASE)) WHERE (((((((CAST(t1.c0 AS INTEGER))OR((((t1.c0, vt0.c0)) BETWEEN ((vt0.c0, t1.c2)) AND ((vt0.c1, t1.c0))))))AND((t1.c0 IN (vt0.c1)))))AND(((t1.c0) BETWEEN (t1.c2) AND (t1.c0)))));
SELECT DISTINCT MIN(vt0.c1) FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c1 IN ()))>(t1.c2 COLLATE NOCASE)) WHERE (((((((((CAST(t1.c0 AS INTEGER))OR((((t1.c0, vt0.c0)) BETWEEN ((vt0.c0, t1.c2)) AND ((vt0.c1, t1.c0))))))AND((t1.c0 IN (vt0.c1)))))AND(((t1.c0) BETWEEN (t1.c2) AND (t1.c0)))))AND(CAST(((((((vt0.c1)AND(x'')))OR(t1.c2)))OR(t1.c0)) AS INTEGER))));
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt0, v0 WHERE ((x'5f' IN ()) COLLATE NOCASE) ORDER BY CAST(IFNULL(v0.c1, v0.c2) AS TEXT)  NULLS FIRST, ((CHANGES()) NOT BETWEEN (((t1.c2)>(t1.c2))) AND (CAST(t1.c1 AS BLOB))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE ((((x'5f' IN ()) COLLATE NOCASE)AND(CAST(((t1.c1)>=(v0.c1)) AS INTEGER)))) ORDER BY 0.12955600002747758 DESC;
SELECT * FROM vt0 WHERE (((((vt0.c1)<<(vt0.c0)))<>(NULLIF(vt0.c0, vt0.c1))));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1)<<(vt0.c0)))<>(NULLIF(vt0.c0, vt0.c1)))) ORDER BY HEX(DISTINCT ((vt0.c1)=(vt0.c0))), json_insert((- (0.04489307597841108)), ((vt0.c0)<<(vt0.c0)), ((vt0.c1)*(vt0.c1)), ((vt0.c0) NOT NULL), CAST(NULL AS REAL)) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c1)<<(vt0.c0)))<>(NULLIF(vt0.c0, vt0.c1))));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1)<<(vt0.c0)))<>(NULLIF(vt0.c0, vt0.c1)))) ORDER BY HEX(DISTINCT ((vt0.c1)=(vt0.c0))), json_insert((- (0.04489307597841108)), ((vt0.c0)<<(vt0.c0)), ((vt0.c1)*(vt0.c1)), ((vt0.c0) NOT NULL), CAST(NULL AS REAL)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN v0 LEFT OUTER JOIN vt0 ON (((t1.c2 COLLATE RTRIM, v0.c1))<=((vt0.c0, ''))) WHERE (((((NULL) BETWEEN (v0.c1) AND (t1.c0)))OR((((t1.c0, t1.c1, t1.c0))<=((v0.c1, t1.c0, v0.c2))))));
SELECT DISTINCT COUNT(*) FROM t1 NATURAL JOIN v0 INNER JOIN vt0 ON (((t1.c2 COLLATE RTRIM, v0.c1))<=((vt0.c0, ''))) WHERE (((((((NULL) BETWEEN (v0.c1) AND (t1.c0)))OR((((t1.c0, t1.c1, t1.c0))<=((v0.c1, t1.c0, v0.c2))))))AND(CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 NATURAL JOIN v0 INNER JOIN vt0 ON (((t1.c2 COLLATE RTRIM, v0.c1))<=((vt0.c0, ''))) WHERE (CAST(((t1.c1)OR(v0.c1)) AS BLOB)) LIMIT 0x0;
SELECT ALL MAX(v0.c0) FROM t1, v0 WHERE (LIKELY(t1.c0 COLLATE NOCASE)) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))>>(((v0.c0)<(x'14')))), ((((v0.c1)*(v0.c2))) NOT NULL) DESC  NULLS FIRST, ((((v0.c2)IS(t1.c0)))*(x'57'));
SELECT DISTINCT MAX(v0.c0) FROM t1, v0 WHERE (LIKELY(t1.c0 COLLATE NOCASE)) ORDER BY (((t1.c1) BETWEEN (v0.c2) AND (v0.c1)) IN (((t1.c0) NOTNULL))), IFNULL(DISTINCT (t1.c2 IN (t1.c2)), CASE v0.c2  WHEN t1.c2 THEN 'E馒qu\z' WHEN v0.c0 THEN t1.c0 WHEN t1.c1 THEN v0.c1 END)  NULLS LAST, (((v0.c1 IN ()))*(((v0.c2)|(v0.c0)))), CAST(COALESCE(t1.c0, t1.c2) AS NUMERIC)  NULLS LAST, (+ (((t1.c1)&(v0.c0))))  NULLS FIRST INTERSECT SELECT DISTINCT MAX(v0.c0) FROM t1, v0 WHERE (json((((t1.c2, t1.c0)) BETWEEN ((v0.c1, v0.c1)) AND ((v0.c2, t1.c0))))) ORDER BY (((t1.c1) BETWEEN (v0.c2) AND (v0.c1)) IN (((t1.c0) NOTNULL))), IFNULL(DISTINCT (t1.c2 IN (t1.c2)), CASE v0.c2  WHEN t1.c2 THEN 'E馒qu\z' WHEN v0.c0 THEN t1.c0 WHEN t1.c1 THEN v0.c1 END)  NULLS LAST, (((v0.c1 IN ()))*(((v0.c2)|(v0.c0)))), CAST(COALESCE(t1.c0, t1.c2) AS NUMERIC)  NULLS LAST, (+ (((t1.c1)&(v0.c0))))  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM vt0 NATURAL JOIN t1 WHERE (vt0.c1) ORDER BY ((vt0.c0 COLLATE RTRIM)<(((t1.c2) BETWEEN (t1.c0) AND (t1.c0)))) ASC, (- ('0.5262929764240647'))  NULLS LAST, (((vt0.c1) ISNULL) IN ()) ASC  NULLS LAST;
SELECT MIN(vt0.c1) FROM vt0 NATURAL JOIN t1 WHERE (((vt0.c1)AND(NULL))) ORDER BY ((vt0.c0 COLLATE RTRIM)<(((t1.c2) BETWEEN (t1.c0) AND (t1.c0)))) ASC, (- ('0.5262929764240647'))  NULLS LAST, (((vt0.c1) ISNULL) IN ()) ASC  NULLS LAST INTERSECT SELECT ALL MIN(vt0.c1) FROM vt0 NATURAL JOIN t1 WHERE ((- (HEX(DISTINCT vt0.c1)))) ORDER BY ((vt0.c0 COLLATE RTRIM)<(((t1.c2) BETWEEN (t1.c0) AND (t1.c0)))) ASC, (- ('0.5262929764240647'))  NULLS LAST, (((vt0.c1) ISNULL) IN ()) ASC  NULLS LAST;
SELECT MIN(t1.c1) FROM v0, t1, vt0 WHERE (((CASE t1.c0  WHEN t1.c2 THEN v0.c0 WHEN NULL THEN v0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN 0.5623369063823449 THEN t1.c0 END) BETWEEN (((((((((((((((((t1.c1)OR(t1.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c1)))OR(t1.c1)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c1))) AND (((t1.c1)+(vt0.c0))))) ORDER BY CAST(((v0.c1) BETWEEN (t1.c0) AND (t1.c1)) AS NUMERIC);
SELECT DISTINCT MIN(t1.c1) FROM v0, t1, vt0 WHERE (((CASE t1.c0  WHEN t1.c2 THEN v0.c0 WHEN NULL THEN v0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN 0.5623369063823449 THEN t1.c0 END) BETWEEN (((((((((((((((((t1.c1)OR(t1.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c1)))OR(t1.c1)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c1))) AND (((t1.c1)+(vt0.c0))))) ORDER BY CAST(t1.c0 AS NUMERIC) ASC, (+ (((v0.c0) BETWEEN (v0.c0) AND (vt0.c1))));
SELECT * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (t1.c0) LIMIT 0X4;
SELECT * FROM t1 WHERE (t1.c0);
SELECT DISTINCT * FROM t1 WHERE (t1.c0) LIMIT 0X4;
SELECT ALL * FROM v0 WHERE (((((v0.c0) ISNULL))OR((v0.c2 IN (v0.c1)))));
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL))OR((v0.c2 IN (v0.c1))))) ORDER BY ((((((((((((((v0.c0) ISNULL))OR(((v0.c1)<<(v0.c0)))))AND(((v0.c0) NOT NULL))))AND(((v0.c0)<(v0.c0)))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END)))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))AND(v0.c0 COLLATE RTRIM)), ABS((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))) ASC  NULLS LAST INTERSECT SELECT * FROM v0 WHERE (((((((((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))OR(((v0.c1)IS(v0.c1)))))OR((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c2))))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))))) ORDER BY ((((((((((((((v0.c0) ISNULL))OR(((v0.c1)<<(v0.c0)))))AND(((v0.c0) NOT NULL))))AND(((v0.c0)<(v0.c0)))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END)))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))AND(v0.c0 COLLATE RTRIM)), ABS((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((v0.c0) ISNULL))OR((v0.c2 IN (v0.c1)))));
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL))OR((v0.c2 IN (v0.c1))))) ORDER BY ((((((((((((((v0.c0) ISNULL))OR(((v0.c1)<<(v0.c0)))))AND(((v0.c0) NOT NULL))))AND(((v0.c0)<(v0.c0)))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END)))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))AND(v0.c0 COLLATE RTRIM)), ABS((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))) ASC  NULLS LAST INTERSECT SELECT * FROM v0 WHERE (((((((((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))OR(((v0.c1)IS(v0.c1)))))OR((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c2))))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))))) ORDER BY ((((((((((((((v0.c0) ISNULL))OR(((v0.c1)<<(v0.c0)))))AND(((v0.c0) NOT NULL))))AND(((v0.c0)<(v0.c0)))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END)))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))AND(v0.c0 COLLATE RTRIM)), ABS((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c1)) IN ((((x''))!=((vt0.c0)))))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE 0.30543803066005804 END IN ()) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((NOT (vt0.c1)) IN ((((x''))>((vt0.c0)))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE ASC  NULLS FIRST, ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)>=(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c1)) IN ((((x''))!=((vt0.c0)))))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE 0.30543803066005804 END IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (((((((((((((((t1.c0)AND(v0.c1)))AND(vt0.c1)))OR(v0.c0)))AND(0.6799639012996175)))AND(((vt0.c1) IS FALSE))))AND((NOT (v0.c0)))))OR(CAST(v0.c0 AS NUMERIC)))) ORDER BY ((((t1.c2, t1.c0, '-95058440'))<((vt0.c0, vt0.c1, vt0.c0))) IN ('-1592568787')) DESC;
SELECT DISTINCT COUNT(*) FROM vt0, t1, v0 WHERE (((((((((((((((((t1.c0)AND(v0.c1)))AND(vt0.c1)))OR(v0.c0)))AND(0.6799639012996175)))AND(((vt0.c1) IS FALSE))))AND((NOT (v0.c0)))))OR(CAST(v0.c0 AS NUMERIC))))AND((((v0.c0, v0.c1, v0.c2, v0.c1)) BETWEEN (((((vt0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))), CAST(t1.c1 AS REAL), RTRIM(t1.c1), ((t1.c1) IS FALSE))) AND ((CASE vt0.c0  WHEN vt0.c1 THEN v0.c1 ELSE v0.c0 END, ((t1.c0) BETWEEN (v0.c0) AND (v0.c1)), ((t1.c1) NOT BETWEEN (t1.c0) AND (v0.c0)), ((((t1.c2)OR(vt0.c1)))AND(vt0.c0)))))))) ORDER BY (((NOT (vt0.c0)))GLOB(CASE WHEN v0.c2 THEN v0.c2 ELSE t1.c0 END)) ASC, (((HEX(DISTINCT NULL), ((t1.c0)<(vt0.c0)), ((vt0.c0)|(v0.c0))))>(((vt0.c1 IN ()), UPPER(DISTINCT vt0.c0), NULL)))  NULLS LAST, TYPEOF(CAST(t1.c1 AS TEXT))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, t1, v0 WHERE (((CASE WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 END)<<(x'b4d6'))) ORDER BY (((NOT (vt0.c0)))GLOB(CASE WHEN v0.c2 THEN v0.c2 ELSE t1.c0 END)) ASC, (((HEX(DISTINCT NULL), ((t1.c0)<(vt0.c0)), ((vt0.c0)|(v0.c0))))>(((vt0.c1 IN ()), UPPER(DISTINCT vt0.c0), NULL)))  NULLS LAST, TYPEOF(CAST(t1.c1 AS TEXT))  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t1 WHERE (CASE t1.c2  WHEN t1.c0 THEN t1.c1 END COLLATE BINARY) ORDER BY t1.c1  NULLS LAST, CAST(t1.c1 AS INTEGER) ASC  NULLS LAST, ((((((((((t1.c2) ISNULL))OR(t1.c1 COLLATE RTRIM)))AND(((t1.c2) BETWEEN (t1.c0) AND (t1.c0)))))OR(((x'9bc48f') BETWEEN (x'') AND (t1.c0)))))OR(t1.c2 COLLATE RTRIM))  NULLS FIRST, CAST((~ (t1.c0)) AS BLOB) DESC;
SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c2  WHEN t1.c0 THEN t1.c1 END COLLATE BINARY)AND(t1.c1))) ORDER BY ((((((x'') NOT NULL))AND(CASE t1.c2  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))AND(((t1.c1) IS TRUE))) DESC, ((((((((((t1.c0)AND(t1.c1)))OR(NULL)))AND(t1.c2)))AND(t1.c2))) BETWEEN (((t1.c2)OR(t1.c1))) AND (((t1.c1) IS TRUE))), t1.c0 ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c2 AS BLOB)) NOTNULL)) ORDER BY ((((((x'') NOT NULL))AND(CASE t1.c2  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))AND(((t1.c1) IS TRUE))) DESC, ((((((((((t1.c0)AND(t1.c1)))OR(NULL)))AND(t1.c2)))AND(t1.c2))) BETWEEN (((t1.c2)OR(t1.c1))) AND (((t1.c1) IS TRUE))), t1.c0 ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (CASE t1.c2  WHEN t1.c0 THEN t1.c1 END COLLATE BINARY) ORDER BY t1.c1  NULLS LAST, CAST(t1.c1 AS INTEGER) ASC  NULLS LAST, ((((((((((t1.c2) ISNULL))OR(t1.c1 COLLATE RTRIM)))AND(((t1.c2) BETWEEN (t1.c0) AND (t1.c0)))))OR(((x'9bc48f') BETWEEN (x'') AND (t1.c0)))))OR(t1.c2 COLLATE RTRIM))  NULLS FIRST, CAST((~ (t1.c0)) AS BLOB) DESC;
SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c2  WHEN t1.c0 THEN t1.c1 END COLLATE BINARY)AND(t1.c1))) ORDER BY ((((((x'') NOT NULL))AND(CASE t1.c2  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))AND(((t1.c1) IS TRUE))) DESC, ((((((((((t1.c0)AND(t1.c1)))OR(NULL)))AND(t1.c2)))AND(t1.c2))) BETWEEN (((t1.c2)OR(t1.c1))) AND (((t1.c1) IS TRUE))), t1.c0 ASC  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c2 AS BLOB)) NOTNULL)) ORDER BY ((((((x'') NOT NULL))AND(CASE t1.c2  WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END)))AND(((t1.c1) IS TRUE))) DESC, ((((((((((t1.c0)AND(t1.c1)))OR(NULL)))AND(t1.c2)))AND(t1.c2))) BETWEEN (((t1.c2)OR(t1.c1))) AND (((t1.c1) IS TRUE))), t1.c0 ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE ((+ (((v0.c1) ISNULL))));
SELECT DISTINCT COUNT(*) FROM t1, vt0, v0 WHERE ((((+ (((v0.c1) ISNULL))))AND((((((t1.c2) IS TRUE), t1.c1, v0.c2 COLLATE BINARY))!=(((v0.c2 IN (v0.c1, t1.c1)), ((t1.c1)*(v0.c1)), ((t1.c2) NOT BETWEEN (t1.c2) AND (v0.c0)))))))) ORDER BY (((v0.c2, v0.c1)) BETWEEN (((- (t1.c2)), (vt0.c0 IN (0.05268437091120126)))) AND (((t1.c2 IN ()), NULL)))  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(CASE 0.33201386139731004  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) ORDER BY (+ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), (((vt0.c0, (((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))), ((vt0.c1) NOT NULL)))==((vt0.c0, IFNULL(x'6d', vt0.c1), (vt0.c1 IN ()))));
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(CASE 0.33201386139731004  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))AND('>'))) ORDER BY (((vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c1)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))) AND ((ABS(DISTINCT '0.05715855482887422'), ((vt0.c0) ISNULL)))) DESC LIMIT 0x3 INTERSECT SELECT * FROM vt0 WHERE (STRFTIME(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), NULL, (NOT (vt0.c1)), CAST(vt0.c1 AS REAL))) ORDER BY (((vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c1)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))) AND ((ABS(DISTINCT '0.05715855482887422'), ((vt0.c0) ISNULL)))) DESC LIMIT 3;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(CASE 0.33201386139731004  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) ORDER BY (+ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), (((vt0.c0, (((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))), ((vt0.c1) NOT NULL)))==((vt0.c0, IFNULL(x'6d', vt0.c1), (vt0.c1 IN ()))));
SELECT ALL * FROM t1 CROSS JOIN v0 ON ((~ (t1.c0)) IN ()) WHERE ((- (CASE v0.c1  WHEN v0.c1 THEN v0.c1 WHEN t1.c0 THEN v0.c2 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN -1520699329 THEN v0.c0 ELSE v0.c1 END))) ORDER BY SQLITE_COMPILEOPTION_GET(0.5882058172208857) DESC, (CAST('U^*q>O3' AS TEXT) IN ()) DESC;
SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON ((~ (t1.c0)) IN ()) WHERE ((- (CASE v0.c1  WHEN v0.c1 THEN v0.c1 WHEN t1.c0 THEN v0.c2 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN 0Xffffffffa55bf83f THEN v0.c0 ELSE v0.c1 END))) ORDER BY SQLITE_COMPILEOPTION_GET(0.5882058172208857) DESC, (CAST('U^*q>O3' AS TEXT) IN ()) DESC LIMIT 0x1;
SELECT ALL * FROM t1 CROSS JOIN v0 ON ((~ (t1.c0)) IN ()) WHERE ((- (CASE v0.c1  WHEN v0.c1 THEN v0.c1 WHEN t1.c0 THEN v0.c2 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN -1520699329 THEN v0.c0 ELSE v0.c1 END))) ORDER BY SQLITE_COMPILEOPTION_GET(0.5882058172208857) DESC, (CAST('U^*q>O3' AS TEXT) IN ()) DESC;
SELECT ALL * FROM t1, v0 WHERE (((CASE WHEN v0.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN v0.c1 THEN 0X4451f038 ELSE t1.c1 END) IS FALSE)) ORDER BY NULLIF(DISTINCT CAST(t1.c2 AS BLOB), (v0.c1 IN (t1.c1)))  NULLS FIRST, LIKELIHOOD((((t1.c0)) BETWEEN ((v0.c1)) AND ((t1.c1))), (v0.c1 IN ()));
SELECT ALL * FROM t1, v0 WHERE (((CASE WHEN v0.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN v0.c1 THEN 0x4451f038 ELSE t1.c1 END) IS FALSE)) ORDER BY NULLIF(DISTINCT CAST(t1.c2 AS BLOB), (v0.c1 IN (t1.c1)))  NULLS FIRST, LIKELIHOOD((((t1.c0)) BETWEEN ((v0.c1)) AND ((t1.c1))), (v0.c1 IN ())) LIMIT 0 INTERSECT SELECT * FROM t1, v0 WHERE ((NOT (((t1.c0)OR(t1.c0))))) ORDER BY NULLIF(DISTINCT CAST(t1.c2 AS BLOB), (v0.c1 IN (t1.c1)))  NULLS FIRST, LIKELIHOOD((((t1.c0)) BETWEEN ((v0.c1)) AND ((t1.c1))), (v0.c1 IN ())) LIMIT 0;
SELECT ALL * FROM t1, v0 WHERE (((CASE WHEN v0.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN v0.c1 THEN 0X4451f038 ELSE t1.c1 END) IS FALSE)) ORDER BY NULLIF(DISTINCT CAST(t1.c2 AS BLOB), (v0.c1 IN (t1.c1)))  NULLS FIRST, LIKELIHOOD((((t1.c0)) BETWEEN ((v0.c1)) AND ((t1.c1))), (v0.c1 IN ()));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))<=((((vt0.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0))))));
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE (((((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))<((((vt0.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0))))))AND(((((v0.c2) NOT NULL)) BETWEEN (((v0.c2) ISNULL)) AND (v0.c2)))));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))<=((((vt0.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0))))));
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE (((((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))<((((vt0.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0))))))AND(((((v0.c2) NOT NULL)) BETWEEN (((v0.c2) ISNULL)) AND (v0.c2)))));
SELECT COUNT(*) FROM vt0, t1 WHERE ((json_insert(vt0.c0, t1.c1, t1.c2, t1.c1, t1.c2) IN (((vt0.c1) NOT NULL)))) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (t1.c0) AND (t1.c2))) AND (COALESCE(DISTINCT t1.c2, vt0.c0))) ASC;
SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE ((json_insert(vt0.c0, t1.c1, t1.c2, t1.c1, t1.c2) IN (((vt0.c1) NOT NULL)))) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (t1.c0) AND (t1.c2))) AND (COALESCE(DISTINCT t1.c2, vt0.c0))) ASC LIMIT 0X2;
SELECT MAX(v0.c2) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN (((v0.c1) NOT NULL)) AND (((v0.c1)<=(v0.c2))))) ORDER BY ((((((v0.c1)OR(v0.c2)))AND(v0.c0))) NOT NULL);
SELECT MAX(v0.c2) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN (((v0.c1) NOT NULL)) AND (((v0.c1)<=(v0.c2))))) ORDER BY ((((v0.c1)+(v0.c0))) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 END) AND (CAST(v0.c1 AS NUMERIC)))  NULLS LAST, (((v0.c0, v0.c1, v0.c0, v0.c0, 0.6728618584461604, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN '-42862420' WHEN '4' THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END, ((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2)), ((((((v0.c2)AND('-1015592478')))OR(v0.c0)))OR(v0.c0)), NULL, ((((((((v0.c0)AND(NULL)))OR(v0.c2)))OR(v0.c1)))OR(v0.c2)), v0.c0, ((v0.c0)|(v0.c2)))) AND ((COALESCE(DISTINCT v0.c2, v0.c0, v0.c2, v0.c0), ((v0.c1)-(v0.c1)), ((v0.c1)&(v0.c1)), ((v0.c1) IS TRUE), ((NULL)IS NOT(v0.c1)), ((((((v0.c0)OR(v0.c1)))OR(v0.c1)))AND(v0.c1)), v0.c2 COLLATE BINARY))) DESC  NULLS FIRST, (('qj0')IS NOT(((v0.c2) BETWEEN (v0.c0) AND (v0.c2))))  NULLS LAST INTERSECT SELECT ALL MAX(v0.c2) FROM v0 WHERE ('DB\') ORDER BY ((((v0.c1)+(v0.c0))) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 END) AND (CAST(v0.c1 AS NUMERIC)))  NULLS LAST, (((v0.c0, v0.c1, v0.c0, v0.c0, 0.6728618584461604, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN '-42862420' WHEN '4' THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END, ((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2)), ((((((v0.c2)AND('-1015592478')))OR(v0.c0)))OR(v0.c0)), NULL, ((((((((v0.c0)AND(NULL)))OR(v0.c2)))OR(v0.c1)))OR(v0.c2)), v0.c0, ((v0.c0)|(v0.c2)))) AND ((COALESCE(DISTINCT v0.c2, v0.c0, v0.c2, v0.c0), ((v0.c1)-(v0.c1)), ((v0.c1)&(v0.c1)), ((v0.c1) IS TRUE), ((NULL)IS NOT(v0.c1)), ((((((v0.c0)OR(v0.c1)))OR(v0.c1)))AND(v0.c1)), v0.c2 COLLATE BINARY))) DESC  NULLS FIRST, (('qj0')IS NOT(((v0.c2) BETWEEN (v0.c0) AND (v0.c2))))  NULLS LAST;
SELECT ALL MIN(v0.c1) FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))  WHEN (v0.c1 IN ()) THEN v0.c2 WHEN json_remove(v0.c0, v0.c1, v0.c1, v0.c0) THEN ((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(v0.c2)) WHEN (+ (v0.c0)) THEN ((((((v0.c2)OR(v0.c2)))OR(v0.c1)))AND(v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c2)) THEN CASE WHEN v0.c0 THEN NULL WHEN NULL THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END WHEN LENGTH('-512988163') THEN v0.c2 END) ORDER BY v0.c2 ASC;
SELECT DISTINCT MIN(v0.c1) FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))  WHEN (v0.c1 IN ()) THEN v0.c2 WHEN json_remove(v0.c0, v0.c1, v0.c1, v0.c0) THEN ((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(v0.c2)) WHEN (+ (v0.c0)) THEN ((((((v0.c2)OR(v0.c2)))OR(v0.c1)))AND(v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c2)) THEN CASE WHEN v0.c0 THEN NULL WHEN NULL THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END WHEN LENGTH('-512988163') THEN v0.c2 END) ORDER BY 1752835633  NULLS FIRST, ((((v0.c0) NOT NULL))LIKE((((v0.c0, v0.c0)) NOT BETWEEN ((NULL, v0.c0)) AND ((v0.c0, v0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((((((((t1.c0))>=((vt0.c0))))AND(t1.c0)))AND(t1.c1 COLLATE NOCASE)))AND(t1.c2)));
SELECT DISTINCT COUNT(*) FROM vt0, t1 WHERE ((((((((((t1.c0))>=((vt0.c0))))AND(t1.c0)))AND(t1.c1 COLLATE NOCASE)))AND(t1.c2))) ORDER BY ((((((t1.c0)>(vt0.c0)))AND(((t1.c0)<>(t1.c0)))))AND(NULLIF(DISTINCT t1.c2, t1.c0))), ((('f', vt0.c1 COLLATE RTRIM, (((t1.c1, t1.c2)) NOT BETWEEN ((t1.c2, t1.c2)) AND ((t1.c2, t1.c0))), ((t1.c2)OR(t1.c1)), ((((((t1.c1)AND(vt0.c1)))AND(vt0.c0)))OR(0xffffffff975e4d33))))>(((((t1.c1, t1.c2, vt0.c0))>((t1.c2, t1.c0, 0xffffffffbc4a401a))), t1.c2 COLLATE RTRIM, ((((0X4d21a270)AND(t1.c2)))OR(t1.c2)), (- (t1.c1)), ((((t1.c2)OR(t1.c1)))OR(vt0.c1))))) LIMIT 0X1;
SELECT * FROM v0 NATURAL JOIN vt0 LEFT OUTER JOIN t1 ON v0.c1 WHERE (t1.c1) ORDER BY CAST((t1.c1 IN (vt0.c1)) AS INTEGER), (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')) IN (IFNULL(t1.c1, t1.c0), vt0.c1, (~ (v0.c1)))) DESC, ((((t1.c0) IS TRUE))<<((((t1.c0, t1.c1)) BETWEEN ((v0.c2, vt0.c0)) AND ((v0.c2, t1.c1))))) ASC  NULLS LAST;
SELECT * FROM v0 NATURAL JOIN vt0 LEFT OUTER JOIN t1 ON v0.c1 WHERE (t1.c1) ORDER BY CAST((t1.c1 IN (vt0.c1)) AS INTEGER), (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')) IN (IFNULL(t1.c1, t1.c0), vt0.c1, (~ (v0.c1)))) DESC, ((((t1.c0) IS TRUE))<<((((t1.c0, t1.c1)) BETWEEN ((v0.c2, vt0.c0)) AND ((v0.c2, t1.c1))))) ASC  NULLS LAST LIMIT 0x1;
SELECT * FROM v0 NATURAL JOIN vt0 LEFT OUTER JOIN t1 ON v0.c1 WHERE (t1.c1) ORDER BY CAST((t1.c1 IN (vt0.c1)) AS INTEGER), (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')) IN (IFNULL(t1.c1, t1.c0), vt0.c1, (~ (v0.c1)))) DESC, ((((t1.c0) IS TRUE))<<((((t1.c0, t1.c1)) BETWEEN ((v0.c2, vt0.c0)) AND ((v0.c2, t1.c1))))) ASC  NULLS LAST;
SELECT * FROM v0 NATURAL JOIN vt0 LEFT OUTER JOIN t1 ON v0.c1 WHERE (t1.c1) ORDER BY CAST((t1.c1 IN (vt0.c1)) AS INTEGER), (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')) IN (IFNULL(t1.c1, t1.c0), vt0.c1, (~ (v0.c1)))) DESC, ((((t1.c0) IS TRUE))<<((((t1.c0, t1.c1)) BETWEEN ((v0.c2, vt0.c0)) AND ((v0.c2, t1.c1))))) ASC  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)%((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY ((vt0.c1)-(vt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, (((((((((vt0.c1 IN ()))OR(((vt0.c1)>=(vt0.c0)))))OR((NOT (vt0.c0)))))AND((((vt0.c0, vt0.c0))<((vt0.c1, vt0.c1))))))AND(((vt0.c1) IS FALSE)));
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)%((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY ((vt0.c1)-(vt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, (((((((((vt0.c1 IN ()))OR(((vt0.c1)>=(vt0.c0)))))OR((NOT (vt0.c0)))))AND((((vt0.c0, vt0.c0))<((vt0.c1, vt0.c1))))))AND(((vt0.c1) IS FALSE)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0)%((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY ((vt0.c1)-(vt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, (((((((((vt0.c1 IN ()))OR(((vt0.c1)>=(vt0.c0)))))OR((NOT (vt0.c0)))))AND((((vt0.c0, vt0.c0))<((vt0.c1, vt0.c1))))))AND(((vt0.c1) IS FALSE)));
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)%((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY ((vt0.c1)-(vt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, (((((((((vt0.c1 IN ()))OR(((vt0.c1)>=(vt0.c0)))))OR((NOT (vt0.c0)))))AND((((vt0.c0, vt0.c0))<((vt0.c1, vt0.c1))))))AND(((vt0.c1) IS FALSE)));
SELECT MIN(t1.c1) FROM t1 WHERE (((((((((t1.c2)AND(x'c8')))OR(t1.c2)))OR(t1.c1)))>=(((t1.c2)/(t1.c2))))) ORDER BY t1.c1 COLLATE RTRIM ASC;
SELECT MIN(t1.c1) FROM t1 WHERE (((((((((((t1.c2)AND(x'c8')))OR(t1.c2)))OR(t1.c1)))>=(((t1.c2)/(t1.c2)))))AND(CASE SQLITE_COMPILEOPTION_GET(t1.c2)  WHEN ((((((t1.c0)OR(t1.c2)))AND(t1.c0)))AND(t1.c2)) THEN (~ (t1.c1)) WHEN ((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(t1.c1)) THEN 1.514797807E9 WHEN t1.c0 THEN '1836074277' ELSE t1.c1 END))) ORDER BY ((((((t1.c2)OR(t1.c0)))AND(t1.c0))) BETWEEN (t1.c0) AND (((t1.c2)<<(t1.c2)))) DESC, ((((t1.c1)AND(x''))) NOT BETWEEN (UPPER(DISTINCT t1.c1)) AND (t1.c1)) INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE (CAST(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c2 END AS NUMERIC)) ORDER BY ((((((t1.c2)OR(t1.c0)))AND(t1.c0))) BETWEEN (t1.c0) AND (((t1.c2)<<(t1.c2)))) DESC, ((((t1.c1)AND(x''))) NOT BETWEEN (UPPER(DISTINCT t1.c1)) AND (t1.c1));
SELECT ALL MAX(v0.c2) FROM v0 LEFT OUTER JOIN vt0 ON ((CAST(v0.c1 AS BLOB)) NOT BETWEEN (((((v0.c2)AND(0.11254964050999738)))OR(vt0.c0))) AND ('1003873185')) WHERE ((NOT (v0.c1)));
SELECT DISTINCT MAX(v0.c2) FROM v0 LEFT OUTER JOIN vt0 ON ((CAST(v0.c1 AS BLOB)) NOT BETWEEN (((((v0.c2)AND(0.11254964050999738)))OR(vt0.c0))) AND ('1003873185')) WHERE ((NOT (v0.c1))) LIMIT 0X2;
SELECT ALL * FROM t1 WHERE ((t1.c0 IN (t1.c2)) COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0 IN (t1.c2)) COLLATE RTRIM)AND((((t1.c2)>=(t1.c2)) IN (((t1.c0)||(x''))))))) ORDER BY (NOT (t1.c0)) COLLATE RTRIM  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c2, t1.c2, t1.c0)) NOT BETWEEN (((((t1.c0, t1.c1, 0.05715855482887422))>((t1.c2, t1.c0, NULL))), CASE WHEN t1.c1 THEN t1.c0 ELSE x'' END, '749086963')) AND ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c2)), (((t1.c0, t1.c0)) BETWEEN ((t1.c2, t1.c2)) AND ((t1.c1, t1.c2))), ((t1.c0)OR(t1.c1)))))) ORDER BY (NOT (t1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((t1.c0 IN (t1.c2)) COLLATE RTRIM);
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0 IN (t1.c2)) COLLATE RTRIM)AND((((t1.c2)>=(t1.c2)) IN (((t1.c0)||(x''))))))) ORDER BY (NOT (t1.c0)) COLLATE RTRIM  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c2, t1.c2, t1.c0)) NOT BETWEEN (((((t1.c0, t1.c1, 0.05715855482887422))>((t1.c2, t1.c0, NULL))), CASE WHEN t1.c1 THEN t1.c0 ELSE x'' END, '749086963')) AND ((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c2)), (((t1.c0, t1.c0)) BETWEEN ((t1.c2, t1.c2)) AND ((t1.c1, t1.c2))), ((t1.c0)OR(t1.c1)))))) ORDER BY (NOT (t1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((~ (v0.c2))) BETWEEN (MAX(v0.c1, v0.c2)) AND (v0.c0))) ORDER BY (((((v0.c2 IN ()))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c1 WHEN 'BT' THEN v0.c2 END)))AND(CAST(v0.c1 AS REAL))) DESC  NULLS LAST, CAST(CAST(v0.c2 AS REAL) AS NUMERIC) DESC, v0.c1  NULLS LAST;
SELECT * FROM v0 WHERE ((((~ (v0.c2))) BETWEEN (MAX(v0.c1, v0.c2)) AND (v0.c0))) ORDER BY ((((((((((((v0.c1)OR(v0.c0)))AND(v0.c0)))OR(v0.c2)))AND(((((((((v0.c0)AND(v0.c1)))OR(v0.c1)))AND(v0.c2)))OR(v0.c0)))))OR(((v0.c0) ISNULL))))OR((NOT (v0.c0))))  NULLS LAST INTERSECT SELECT ALL * FROM v0 WHERE (((v0.c1) NOTNULL) COLLATE RTRIM) ORDER BY ((((((((((((v0.c1)OR(v0.c0)))AND(v0.c0)))OR(v0.c2)))AND(((((((((v0.c0)AND(v0.c1)))OR(v0.c1)))AND(v0.c2)))OR(v0.c0)))))OR(((v0.c0) ISNULL))))OR((NOT (v0.c0))))  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((~ (v0.c2))) BETWEEN (MAX(v0.c1, v0.c2)) AND (v0.c0))) ORDER BY (((((v0.c2 IN ()))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c1 WHEN 'BT' THEN v0.c2 END)))AND(CAST(v0.c1 AS REAL))) DESC  NULLS LAST, CAST(CAST(v0.c2 AS REAL) AS NUMERIC) DESC, v0.c1  NULLS LAST;
SELECT * FROM t1, vt0 WHERE ((t1.c0 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE '-1112635147'  WHEN ((x'13')>>(vt0.c1)) THEN ((0.3084293233873493) IS FALSE) WHEN ((-8.20178229E8)/(t1.c2)) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (108102891)) WHEN DATETIME(t1.c0, vt0.c0, vt0.c0, t1.c0) THEN ((((vt0.c1)AND('-1940195654')))AND(t1.c0)) ELSE SQLITE_COMPILEOPTION_USED(t1.c2) END  NULLS FIRST, ((((+ (vt0.c1))))>((CAST(t1.c2 AS BLOB))));
SELECT ALL * FROM t1, vt0 WHERE ((t1.c0 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE NULL  WHEN (((vt0.c0, t1.c0, t1.c1, t1.c1))!=((t1.c0, vt0.c1, vt0.c0, t1.c1))) THEN CAST(t1.c2 AS TEXT) WHEN vt0.c1 THEN 0.014762186410973599 END ASC  NULLS LAST, CASE WHEN x'48e9ff' THEN ((t1.c2)==(vt0.c0)) ELSE (+ (t1.c2)) END DESC  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE ((t1.c0 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE '-1112635147'  WHEN ((x'13')>>(vt0.c1)) THEN ((0.3084293233873493) IS FALSE) WHEN ((-8.20178229E8)/(t1.c2)) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (108102891)) WHEN DATETIME(t1.c0, vt0.c0, vt0.c0, t1.c0) THEN ((((vt0.c1)AND('-1940195654')))AND(t1.c0)) ELSE SQLITE_COMPILEOPTION_USED(t1.c2) END  NULLS FIRST, ((((+ (vt0.c1))))>((CAST(t1.c2 AS BLOB))));
SELECT ALL * FROM t1, vt0 WHERE ((t1.c0 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE NULL  WHEN (((vt0.c0, t1.c0, t1.c1, t1.c1))!=((t1.c0, vt0.c1, vt0.c0, t1.c1))) THEN CAST(t1.c2 AS TEXT) WHEN vt0.c1 THEN 0.014762186410973599 END ASC  NULLS LAST, CASE WHEN x'48e9ff' THEN ((t1.c2)==(vt0.c0)) ELSE (+ (t1.c2)) END DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c1) NOTNULL) COLLATE RTRIM COLLATE NOCASE) ORDER BY (+ (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS TEXT) DESC, ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c1) NOTNULL) COLLATE RTRIM COLLATE NOCASE)AND(CASE WHEN CAST(vt0.c1 AS INTEGER) THEN vt0.c0 ELSE ((vt0.c1) ISNULL) END))) ORDER BY CAST(((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)) AS NUMERIC) DESC  NULLS LAST, (((vt0.c0 COLLATE NOCASE))<((((vt0.c0)+('0.3903627172384331'))))) LIMIT 0 INTERSECT SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1))) COLLATE RTRIM) ORDER BY CAST(((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)) AS NUMERIC) DESC  NULLS LAST, (((vt0.c0 COLLATE NOCASE))<((((vt0.c0)+('0.3903627172384331'))))) LIMIT 0x0;
SELECT * FROM vt0 WHERE (((vt0.c1) NOTNULL) COLLATE RTRIM COLLATE NOCASE) ORDER BY (+ (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS TEXT) DESC, ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c1) NOTNULL) COLLATE RTRIM COLLATE NOCASE)AND(CASE WHEN CAST(vt0.c1 AS INTEGER) THEN vt0.c0 ELSE ((vt0.c1) ISNULL) END))) ORDER BY CAST(((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)) AS NUMERIC) DESC  NULLS LAST, (((vt0.c0 COLLATE NOCASE))<((((vt0.c0)+('0.3903627172384331'))))) LIMIT 0 INTERSECT SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1))) COLLATE RTRIM) ORDER BY CAST(((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)) AS NUMERIC) DESC  NULLS LAST, (((vt0.c0 COLLATE NOCASE))<((((vt0.c0)+('0.3903627172384331'))))) LIMIT 0x0;
SELECT ALL * FROM t1 INNER JOIN vt0 ON CASE LTRIM(t1.c2)  WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c1)>=(vt0.c1)) WHEN CASE t1.c0  WHEN 0.9446625242035639 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END THEN CAST(t1.c0 AS REAL) WHEN ((t1.c2) IS TRUE) THEN ((vt0.c1)|(vt0.c0)) END WHERE (json_array(((vt0.c0) NOT BETWEEN (1.040163858E9) AND (t1.c1)), CAST(vt0.c0 AS INTEGER), t1.c0 COLLATE BINARY, ((t1.c0)*(t1.c1)), (- (vt0.c1)))) ORDER BY (- (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, (((((t1.c1) IS TRUE), (((t1.c0))>((x''))), ((t1.c0) ISNULL), CAST(t1.c2 AS TEXT), vt0.c0, ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(vt0.c1)))OR(vt0.c1))))<(((vt0.c1 IN (vt0.c0, '-333047721')), vt0.c0, NULL, ((t1.c0) IS FALSE), ((t1.c2)LIKE(t1.c2)), t1.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON CASE LTRIM(t1.c2)  WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c1)>=(vt0.c1)) WHEN CASE t1.c0  WHEN 0.9446625242035639 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END THEN CAST(t1.c0 AS REAL) WHEN ((t1.c2) IS TRUE) THEN ((vt0.c1)|(vt0.c0)) END WHERE (json_array(((vt0.c0) NOT BETWEEN (1.040163858E9) AND (t1.c1)), CAST(vt0.c0 AS INTEGER), t1.c0 COLLATE BINARY, ((t1.c0)*(t1.c1)), (- (vt0.c1)))) ORDER BY (- (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, (((((t1.c1) IS TRUE), (((t1.c0))>((x''))), ((t1.c0) ISNULL), CAST(t1.c2 AS TEXT), vt0.c0, ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(vt0.c1)))OR(vt0.c1))))<(((vt0.c1 IN (vt0.c0, '-333047721')), vt0.c0, NULL, ((t1.c0) IS FALSE), ((t1.c2)LIKE(t1.c2)), t1.c0 COLLATE RTRIM))) ASC  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t1 INNER JOIN vt0 ON CASE LTRIM(t1.c2)  WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c1)>=(vt0.c1)) WHEN CASE t1.c0  WHEN 0.9446625242035639 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END THEN CAST(t1.c0 AS REAL) WHEN ((t1.c2) IS TRUE) THEN ((vt0.c1)|(vt0.c0)) END WHERE (json_array(((vt0.c0) NOT BETWEEN (1.040163858E9) AND (t1.c1)), CAST(vt0.c0 AS INTEGER), t1.c0 COLLATE BINARY, ((t1.c0)*(t1.c1)), (- (vt0.c1)))) ORDER BY (- (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, (((((t1.c1) IS TRUE), (((t1.c0))>((x''))), ((t1.c0) ISNULL), CAST(t1.c2 AS TEXT), vt0.c0, ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))AND(vt0.c1)))OR(vt0.c1))))<(((vt0.c1 IN (vt0.c0, '-333047721')), vt0.c0, NULL, ((t1.c0) IS FALSE), ((t1.c2)LIKE(t1.c2)), t1.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT * FROM v0 CROSS JOIN vt0 ON (json_valid(v0.c1) IN (((v0.c2)-(vt0.c1)), (((vt0.c0, vt0.c0))>((v0.c1, vt0.c1))), ((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)))) WHERE (((vt0.c1 COLLATE RTRIM) NOT NULL));
SELECT * FROM v0 CROSS JOIN vt0 ON (json_valid(v0.c1) IN (((v0.c2)-(vt0.c1)), (((vt0.c0, vt0.c0))>((v0.c1, vt0.c1))), ((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)))) WHERE (((vt0.c1 COLLATE RTRIM) NOT NULL)) INTERSECT SELECT ALL * FROM v0 CROSS JOIN vt0 ON (json_valid(v0.c1) IN (((v0.c2)-(vt0.c1)), (((vt0.c0, vt0.c0))>((v0.c1, vt0.c1))), ((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)))) WHERE (((((((vt0.c0)AND(vt0.c1)))OR(v0.c2)))AND(v0.c1)) COLLATE RTRIM);
SELECT * FROM v0 CROSS JOIN vt0 ON (json_valid(v0.c1) IN (((v0.c2)-(vt0.c1)), (((vt0.c0, vt0.c0))>((v0.c1, vt0.c1))), ((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)))) WHERE (((vt0.c1 COLLATE RTRIM) NOT NULL));
SELECT * FROM v0 CROSS JOIN vt0 ON (json_valid(v0.c1) IN (((v0.c2)-(vt0.c1)), (((vt0.c0, vt0.c0))>((v0.c1, vt0.c1))), ((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)))) WHERE (((vt0.c1 COLLATE RTRIM) NOT NULL)) INTERSECT SELECT ALL * FROM v0 CROSS JOIN vt0 ON (json_valid(v0.c1) IN (((v0.c2)-(vt0.c1)), (((vt0.c0, vt0.c0))>((v0.c1, vt0.c1))), ((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)))) WHERE (((((((vt0.c0)AND(vt0.c1)))OR(v0.c2)))AND(v0.c1)) COLLATE RTRIM);
SELECT * FROM v0 NATURAL JOIN t1 NATURAL JOIN vt0 WHERE ((((t1.c1 IN ()))<(((v0.c2)OR(vt0.c1))))) ORDER BY (((((((((((((vt0.c1)AND(v0.c2)))AND(0X302af28d)))OR('203799364')))OR(t1.c2)))AND(1514797807))))==((TRIM(v0.c2)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM v0 NATURAL JOIN t1 NATURAL JOIN vt0 WHERE ((((t1.c1 IN ()))<(((v0.c2)OR(vt0.c1))))) ORDER BY (((((v0.c0)+(vt0.c1)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(t1.c2)))OR(t1.c0)), ((vt0.c0) NOTNULL), CAST(v0.c0 AS NUMERIC), ((v0.c2) BETWEEN (v0.c2) AND (v0.c0))))<>((((vt0.c0)!=(v0.c2)), CAST(NULL AS INTEGER), (((t1.c0)) NOT BETWEEN ((x'0bcaad')) AND ((v0.c0))), CAST(vt0.c0 AS TEXT), 0.749521060044862))) DESC, (((NOT (vt0.c0)))AND(((((((vt0.c1)OR('M|?')))OR(vt0.c0)))OR(vt0.c0)))) LIMIT 0x3;
SELECT * FROM v0 NATURAL JOIN t1 NATURAL JOIN vt0 WHERE ((((t1.c1 IN ()))<(((v0.c2)OR(vt0.c1))))) ORDER BY (((((((((((((vt0.c1)AND(v0.c2)))AND(0X302af28d)))OR('203799364')))OR(t1.c2)))AND(1514797807))))==((TRIM(v0.c2)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM v0 NATURAL JOIN t1 NATURAL JOIN vt0 WHERE ((((t1.c1 IN ()))<(((v0.c2)OR(vt0.c1))))) ORDER BY (((((v0.c0)+(vt0.c1)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(t1.c2)))OR(t1.c0)), ((vt0.c0) NOTNULL), CAST(v0.c0 AS NUMERIC), ((v0.c2) BETWEEN (v0.c2) AND (v0.c0))))<>((((vt0.c0)!=(v0.c2)), CAST(NULL AS INTEGER), (((t1.c0)) NOT BETWEEN ((x'0bcaad')) AND ((v0.c0))), CAST(vt0.c0 AS TEXT), 0.749521060044862))) DESC, (((NOT (vt0.c0)))AND(((((((vt0.c1)OR('M|?')))OR(vt0.c0)))OR(vt0.c0)))) LIMIT 0x3;
SELECT * FROM t1, v0 WHERE (((0Xffffffffa262cd13)%(v0.c1)));
SELECT ALL * FROM t1, v0 WHERE (((-1570583277)%(v0.c1))) ORDER BY ((((t1.c2) NOT NULL))IS(CAST(t1.c2 AS BLOB))), (NOT (t1.c0 COLLATE BINARY)) DESC  NULLS FIRST, (((- (v0.c2))) NOT NULL)  NULLS FIRST LIMIT 0x2 INTERSECT SELECT * FROM t1, v0 WHERE ((- (v0.c2))) ORDER BY ((((t1.c2) NOT NULL))IS(CAST(t1.c2 AS BLOB))), (NOT (t1.c0 COLLATE BINARY)) DESC  NULLS FIRST, (((- (v0.c2))) NOT NULL)  NULLS FIRST LIMIT 0x2;
SELECT * FROM t1, v0 WHERE (((0Xffffffffa262cd13)%(v0.c1)));
SELECT ALL * FROM t1, v0 WHERE (((-1570583277)%(v0.c1))) ORDER BY ((((t1.c2) NOT NULL))IS(CAST(t1.c2 AS BLOB))), (NOT (t1.c0 COLLATE BINARY)) DESC  NULLS FIRST, (((- (v0.c2))) NOT NULL)  NULLS FIRST LIMIT 0x2 INTERSECT SELECT * FROM t1, v0 WHERE ((- (v0.c2))) ORDER BY ((((t1.c2) NOT NULL))IS(CAST(t1.c2 AS BLOB))), (NOT (t1.c0 COLLATE BINARY)) DESC  NULLS FIRST, (((- (v0.c2))) NOT NULL)  NULLS FIRST LIMIT 0x2;
SELECT * FROM vt0, v0, t1 WHERE ((v0.c1 IN ())) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0, v0, t1 WHERE ((v0.c1 IN ())) ORDER BY (- ((~ (vt0.c0)))) DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM vt0, v0, t1 WHERE ((v0.c1 IN ())) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0, v0, t1 WHERE ((v0.c1 IN ())) ORDER BY (- ((~ (vt0.c0)))) DESC  NULLS FIRST LIMIT 0x0;
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c0) ISNULL))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c2)))))OR(json_quote(t1.c0)))) ORDER BY ((-1805692362) NOTNULL);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c0) ISNULL))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c2)))))OR(json_quote(t1.c0)))) ORDER BY ((-1805692362) NOTNULL) LIMIT 0X5;
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS TEXT));
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS TEXT)) ORDER BY x''  NULLS LAST, vt0.c0  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS TEXT));
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS TEXT)) ORDER BY x''  NULLS LAST, vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON x'' CROSS JOIN v0 ON v0.c0 WHERE (((((v0.c1) NOT BETWEEN (t1.c2) AND (t1.c1)))>(((t1.c2) NOT BETWEEN (v0.c2) AND (t1.c0)))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON x'' CROSS JOIN v0 ON v0.c0 WHERE (((((v0.c1) NOT BETWEEN (t1.c2) AND (t1.c1)))>(((t1.c2) NOT BETWEEN (v0.c2) AND (t1.c0))))) INTERSECT SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON x'' CROSS JOIN v0 ON v0.c0 WHERE (((((((v0.c1)&(t1.c2)))OR(((vt0.c1)>>(t1.c1)))))OR(x'01c5')));
SELECT * FROM t1, vt0, v0 WHERE (0.19779849341288058) ORDER BY (((v0.c2)) BETWEEN ((CAST(v0.c1 AS TEXT))) AND ((x'c644f5'))) DESC, 0.042299841566940444  NULLS LAST, CASE ((((((((v0.c0)OR(t1.c2)))AND(0x75d17adc)))OR(NULL)))OR(t1.c0))  WHEN CAST(v0.c2 AS INTEGER) THEN t1.c1 WHEN ((vt0.c1) NOT NULL) THEN ABS(DISTINCT vt0.c1) WHEN v0.c2 THEN ((((((((vt0.c1)OR(vt0.c0)))OR(v0.c2)))OR(v0.c0)))AND(t1.c2)) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (+ (vt0.c0)) WHEN ((t1.c1)+(v0.c2)) THEN ((t1.c1) ISNULL) ELSE t1.c1 END DESC;
SELECT ALL * FROM t1, vt0, v0 WHERE (0.19779849341288058) ORDER BY (vt0.c1 IN ()) INTERSECT SELECT * FROM t1, vt0, v0 WHERE (v0.c2) ORDER BY (vt0.c1 IN ());
SELECT * FROM t1, vt0, v0 WHERE (0.19779849341288058) ORDER BY (((v0.c2)) BETWEEN ((CAST(v0.c1 AS TEXT))) AND ((x'c644f5'))) DESC, 0.042299841566940444  NULLS LAST, CASE ((((((((v0.c0)OR(t1.c2)))AND(0x75d17adc)))OR(NULL)))OR(t1.c0))  WHEN CAST(v0.c2 AS INTEGER) THEN t1.c1 WHEN ((vt0.c1) NOT NULL) THEN ABS(DISTINCT vt0.c1) WHEN v0.c2 THEN ((((((((vt0.c1)OR(vt0.c0)))OR(v0.c2)))OR(v0.c0)))AND(t1.c2)) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (+ (vt0.c0)) WHEN ((t1.c1)+(v0.c2)) THEN ((t1.c1) ISNULL) ELSE t1.c1 END DESC;
SELECT ALL * FROM t1, vt0, v0 WHERE (0.19779849341288058) ORDER BY (vt0.c1 IN ()) INTERSECT SELECT * FROM t1, vt0, v0 WHERE (v0.c2) ORDER BY (vt0.c1 IN ());
SELECT * FROM t1, vt0, v0 WHERE (CAST(v0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY t1.c2 DESC;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (CAST(v0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY t1.c2 DESC LIMIT 0X0;
SELECT * FROM t1, vt0, v0 WHERE (CAST(v0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY t1.c2 DESC;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (CAST(v0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY t1.c2 DESC LIMIT 0X0;
SELECT * FROM t1 WHERE (((((t1.c2)|(t1.c2)))IS((~ (t1.c1))))) ORDER BY ((((((t1.c0 COLLATE RTRIM)AND((((t1.c1))>((t1.c1))))))OR(((t1.c2)<<(NULL)))))OR(-1980387583))  NULLS LAST, CAST(((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c2)))AND(t1.c2)))OR(t1.c1)) AS BLOB) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((t1.c2)|(t1.c2)))IS((~ (t1.c1)))))AND((((~ (8.08120973E8))) NOT NULL)))) ORDER BY (t1.c0 IN (t1.c1)) COLLATE NOCASE DESC  NULLS LAST, CASE WHEN '-1399201276' THEN x'' WHEN CAST(t1.c1 AS INTEGER) THEN ((t1.c0) NOT BETWEEN (NULL) AND (t1.c0)) WHEN COALESCE(DISTINCT x'77', t1.c1, t1.c2) THEN ((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) ELSE (((('dW')AND(t1.c1)))AND(0Xffffffff84083d77)) END DESC  NULLS FIRST, ((((t1.c1)==(t1.c2))) BETWEEN (((t1.c2) NOTNULL)) AND (((t1.c2)+(t1.c2)))) LIMIT 0x0;
SELECT * FROM t1 WHERE (((((t1.c2)|(t1.c2)))IS((~ (t1.c1))))) ORDER BY ((((((t1.c0 COLLATE RTRIM)AND((((t1.c1))>((t1.c1))))))OR(((t1.c2)<<(NULL)))))OR(-1980387583))  NULLS LAST, CAST(((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c2)))AND(t1.c2)))OR(t1.c1)) AS BLOB) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((t1.c2)|(t1.c2)))IS((~ (t1.c1)))))AND((((~ (8.08120973E8))) NOT NULL)))) ORDER BY (t1.c0 IN (t1.c1)) COLLATE NOCASE DESC  NULLS LAST, CASE WHEN '-1399201276' THEN x'' WHEN CAST(t1.c1 AS INTEGER) THEN ((t1.c0) NOT BETWEEN (NULL) AND (t1.c0)) WHEN COALESCE(DISTINCT x'77', t1.c1, t1.c2) THEN ((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) ELSE (((('dW')AND(t1.c1)))AND(0Xffffffff84083d77)) END DESC  NULLS FIRST, ((((t1.c1)==(t1.c2))) BETWEEN (((t1.c2) NOTNULL)) AND (((t1.c2)+(t1.c2)))) LIMIT 0x0;
SELECT ALL MIN(vt0.c1) FROM t1, vt0 WHERE (((TIME(t1.c2, t1.c1, t1.c1, vt0.c0)) IS TRUE));
SELECT DISTINCT MIN(vt0.c1) FROM t1, vt0 WHERE (((TIME(t1.c2, t1.c1, t1.c1, vt0.c0)) IS TRUE)) ORDER BY (((- (vt0.c0)))LIKE((+ (0.05821364295936704)))), t1.c1  NULLS FIRST;
SELECT ALL MAX(v0.c0) FROM v0, vt0, t1 WHERE (((CASE WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN v0.c0 WHEN vt0.c1 THEN t1.c1 ELSE v0.c2 END)AND((((v0.c1, t1.c1))<=((vt0.c1, x''))))));
SELECT ALL MAX(v0.c0) FROM v0, vt0, t1 WHERE (((CASE WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN v0.c0 WHEN vt0.c1 THEN t1.c1 ELSE v0.c2 END)AND((((v0.c1, t1.c1))<=((vt0.c1, x'')))))) ORDER BY (NOT (t1.c1))  NULLS FIRST;
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN t1 ON x'' WHERE ((~ ((((vt0.c0))=((v0.c0)))))) ORDER BY ((((v0.c1) BETWEEN (0.04515081393576914) AND (t1.c2)))*((((vt0.c0, vt0.c0, v0.c2)) BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((t1.c1, vt0.c1, t1.c1)))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN t1 ON x'' WHERE ((~ ((((vt0.c0))=((v0.c0)))))) ORDER BY (((((t1.c0, vt0.c0, vt0.c0))<=((v0.c1, vt0.c1, v0.c2))))GLOB((((v0.c2))!=((0.2389937032936541)))))  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN t1 ON x'' WHERE ((((+ (v0.c2))) NOT BETWEEN (((t1.c1) BETWEEN (t1.c2) AND (vt0.c1))) AND (((t1.c0)<<(v0.c1))))) ORDER BY (((((t1.c0, vt0.c0, vt0.c0))<=((v0.c1, vt0.c1, v0.c2))))GLOB((((v0.c2))<>((0.2389937032936541)))))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN t1 ON x'' WHERE ((~ ((((vt0.c0))=((v0.c0)))))) ORDER BY ((((v0.c1) BETWEEN (0.04515081393576914) AND (t1.c2)))*((((vt0.c0, vt0.c0, v0.c2)) BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((t1.c1, vt0.c1, t1.c1)))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN t1 ON x'' WHERE ((~ ((((vt0.c0))=((v0.c0)))))) ORDER BY (((((t1.c0, vt0.c0, vt0.c0))<=((v0.c1, vt0.c1, v0.c2))))GLOB((((v0.c2))!=((0.2389937032936541)))))  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN t1 ON x'' WHERE ((((+ (v0.c2))) NOT BETWEEN (((t1.c1) BETWEEN (t1.c2) AND (vt0.c1))) AND (((t1.c0)<<(v0.c1))))) ORDER BY (((((t1.c0, vt0.c0, vt0.c0))<=((v0.c1, vt0.c1, v0.c2))))GLOB((((v0.c2))<>((0.2389937032936541)))))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((((v0.c0) NOT NULL))<>(COALESCE(DISTINCT v0.c1, v0.c1, v0.c1))) WHERE ((CAST(1.84538343E8 AS INTEGER) IN ())) ORDER BY ((CAST(v0.c0 AS BLOB)) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((((v0.c0) NOT NULL))!=(COALESCE(DISTINCT v0.c1, v0.c1, v0.c1))) WHERE ((CAST(1.84538343E8 AS INTEGER) IN ())) ORDER BY ((CAST(v0.c0 AS BLOB)) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((((v0.c0) NOT NULL))<>(COALESCE(DISTINCT v0.c1, v0.c1, v0.c1))) WHERE ((CAST(1.84538343E8 AS INTEGER) IN ())) ORDER BY ((CAST(v0.c0 AS BLOB)) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((((v0.c0) NOT NULL))!=(COALESCE(DISTINCT v0.c1, v0.c1, v0.c1))) WHERE ((CAST(1.84538343E8 AS INTEGER) IN ())) ORDER BY ((CAST(v0.c0 AS BLOB)) NOT NULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (vt0.c1 IN ()) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c1)AND((((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, 1226535833, vt0.c1))))OR(1.038010726E9 COLLATE NOCASE))))) ORDER BY (vt0.c1 IN ()) ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (vt0.c1 IN ()) ASC  NULLS FIRST LIMIT 0X1;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (vt0.c1 IN ()) ASC  NULLS FIRST;
SELECT MAX(v0.c0) FROM v0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY (+ ((((v0.c0))<((v0.c0))))) ASC, (+ (v0.c2))  NULLS LAST;
SELECT DISTINCT MAX(v0.c0) FROM v0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (((v0.c0)<(v0.c1))) AND (v0.c1 COLLATE RTRIM)) DESC  NULLS LAST, (((0.7230368865659901, v0.c2)) NOT BETWEEN (((- (v0.c2)), v0.c2 COLLATE RTRIM)) AND ((((v0.c1) ISNULL), x''))) DESC  NULLS LAST, ((~ (v0.c1)) IN (CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c2 END)) ASC  NULLS FIRST, DATE(((v0.c0)||(v0.c2)), CAST(v0.c2 AS BLOB), v0.c0 COLLATE NOCASE, ((v0.c0)GLOB(v0.c1)))  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1, vt0 WHERE (STRFTIME(CAST(vt0.c1 AS BLOB), t1.c2 COLLATE BINARY, ((t1.c0)+(t1.c1)), (- (t1.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN 0.05715855482887422 WHEN vt0.c1 THEN vt0.c0 ELSE t1.c2 END) NOT BETWEEN (t1.c1) AND (((t1.c0)GLOB(0.7310912821084514)))), vt0.c1 DESC, (((t1.c1 IN ())) NOTNULL) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE (STRFTIME(CAST(vt0.c1 AS BLOB), t1.c2 COLLATE BINARY, ((t1.c0)+(t1.c1)), (- (t1.c1)))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC) DESC INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (((((vt0.c1)<=(t1.c1)))-((vt0.c0 IN (t1.c0))))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC) DESC;
SELECT ALL * FROM t1, vt0 WHERE (STRFTIME(CAST(vt0.c1 AS BLOB), t1.c2 COLLATE BINARY, ((t1.c0)+(t1.c1)), (- (t1.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN 0.05715855482887422 WHEN vt0.c1 THEN vt0.c0 ELSE t1.c2 END) NOT BETWEEN (t1.c1) AND (((t1.c0)GLOB(0.7310912821084514)))), vt0.c1 DESC, (((t1.c1 IN ())) NOTNULL) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE (STRFTIME(CAST(vt0.c1 AS BLOB), t1.c2 COLLATE BINARY, ((t1.c0)+(t1.c1)), (- (t1.c1)))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC) DESC INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (((((vt0.c1)<=(t1.c1)))-((vt0.c0 IN (t1.c0))))) ORDER BY CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC) DESC;
SELECT ALL * FROM t1 INNER JOIN v0 ON (((((((t1.c1)AND(v0.c0)))AND(t1.c0)))OR(v0.c2)) IN ()) WHERE (((RTRIM(x'99a6a9')) IS FALSE));
SELECT DISTINCT * FROM t1 NOT INDEXED INNER JOIN v0 ON (((((((t1.c1)AND(v0.c0)))AND(t1.c0)))OR(v0.c2)) IN ()) WHERE (((((RTRIM(x'99a6a9')) IS FALSE))AND(((CAST(v0.c2 AS TEXT)) BETWEEN (((v0.c1) IS FALSE)) AND (v0.c2))))) ORDER BY ROUND((((t1.c2, t1.c1, t1.c1, v0.c2, v0.c2)) BETWEEN ((v0.c2, t1.c1, t1.c1, t1.c2, v0.c2)) AND ((t1.c0, v0.c1, '-2080115895', v0.c0, t1.c1))), CASE WHEN t1.c2 THEN 'r' WHEN t1.c2 THEN v0.c0 WHEN v0.c2 THEN t1.c0 WHEN t1.c2 THEN v0.c0 END) ASC  NULLS LAST, v0.c0  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 INNER JOIN v0 ON (((((((t1.c1)AND(v0.c0)))AND(t1.c0)))OR(v0.c2)) IN ()) WHERE ((((((t1.c2) IS FALSE)))<=((((((t1.c1)AND(v0.c2)))AND(t1.c0)))))) ORDER BY ROUND((((t1.c2, t1.c1, t1.c1, v0.c2, v0.c2)) BETWEEN ((v0.c2, t1.c1, t1.c1, t1.c2, v0.c2)) AND ((t1.c0, v0.c1, '-2080115895', v0.c0, t1.c1))), CASE WHEN t1.c2 THEN 'r' WHEN t1.c2 THEN v0.c0 WHEN v0.c2 THEN t1.c0 WHEN t1.c2 THEN v0.c0 END) ASC  NULLS LAST, v0.c0  NULLS FIRST;
SELECT ALL * FROM t1 INNER JOIN v0 ON (((((((t1.c1)AND(v0.c0)))AND(t1.c0)))OR(v0.c2)) IN ()) WHERE (((RTRIM(x'99a6a9')) IS FALSE));
SELECT DISTINCT * FROM t1 NOT INDEXED INNER JOIN v0 ON (((((((t1.c1)AND(v0.c0)))AND(t1.c0)))OR(v0.c2)) IN ()) WHERE (((((RTRIM(x'99a6a9')) IS FALSE))AND(((CAST(v0.c2 AS TEXT)) BETWEEN (((v0.c1) IS FALSE)) AND (v0.c2))))) ORDER BY ROUND((((t1.c2, t1.c1, t1.c1, v0.c2, v0.c2)) BETWEEN ((v0.c2, t1.c1, t1.c1, t1.c2, v0.c2)) AND ((t1.c0, v0.c1, '-2080115895', v0.c0, t1.c1))), CASE WHEN t1.c2 THEN 'r' WHEN t1.c2 THEN v0.c0 WHEN v0.c2 THEN t1.c0 WHEN t1.c2 THEN v0.c0 END) ASC  NULLS LAST, v0.c0  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 INNER JOIN v0 ON (((((((t1.c1)AND(v0.c0)))AND(t1.c0)))OR(v0.c2)) IN ()) WHERE ((((((t1.c2) IS FALSE)))<=((((((t1.c1)AND(v0.c2)))AND(t1.c0)))))) ORDER BY ROUND((((t1.c2, t1.c1, t1.c1, v0.c2, v0.c2)) BETWEEN ((v0.c2, t1.c1, t1.c1, t1.c2, v0.c2)) AND ((t1.c0, v0.c1, '-2080115895', v0.c0, t1.c1))), CASE WHEN t1.c2 THEN 'r' WHEN t1.c2 THEN v0.c0 WHEN v0.c2 THEN t1.c0 WHEN t1.c2 THEN v0.c0 END) ASC  NULLS LAST, v0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (CASE WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c1) IS TRUE))));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (CASE WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c1) IS TRUE)))) LIMIT 1;
SELECT COUNT(*) FROM t1, vt0, v0 WHERE ((- (((vt0.c1)IS NOT(vt0.c1)))));
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE ((((- (((vt0.c1)IS NOT(vt0.c1)))))AND(NULL)));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((0.021618381925051722) NOT BETWEEN (v0.c1) AND (v0.c0)) IN (v0.c0)));
SELECT DISTINCT COUNT(*) FROM v0, vt0 WHERE ((((((0.021618381925051722) NOT BETWEEN (v0.c1) AND (v0.c0)) IN (v0.c0)))AND(((((((((((((v0.c1 COLLATE RTRIM)AND((~ (v0.c0)))))AND((((v0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND('115292246')))AND((((v0.c1, v0.c1, vt0.c0)) BETWEEN ((x'', v0.c1, v0.c2)) AND ((NULL, vt0.c1, v0.c1))))))AND(CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE vt0.c1 END)))AND(-1218322112))))) INTERSECT SELECT DISTINCT COUNT(*) FROM v0, vt0 WHERE (((x'')-(((v0.c1) NOTNULL))));
SELECT ALL * FROM vt0, t1 WHERE (NULLIF(DISTINCT t1.c0 COLLATE BINARY, LIKELIHOOD(vt0.c1, t1.c2)));
SELECT DISTINCT * FROM vt0, t1 WHERE (NULLIF(DISTINCT t1.c0 COLLATE BINARY, LIKELIHOOD(vt0.c1, t1.c2))) LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (CASE ((vt0.c1) ISNULL)  WHEN ((vt0.c0)!=(t1.c0)) THEN ((((((((t1.c2)AND(t1.c2)))AND(x'')))AND(vt0.c1)))OR(vt0.c1)) WHEN (+ ('0.5355825174657631')) THEN LIKELY(t1.c0) END) LIMIT 0x1;
SELECT ALL * FROM vt0, t1 WHERE (NULLIF(DISTINCT t1.c0 COLLATE BINARY, LIKELIHOOD(vt0.c1, t1.c2)));
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((8.08120973E8) ISNULL)) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((((8.08120973E8) ISNULL))AND(vt0.c1))) ORDER BY vt0.c1 DESC  NULLS FIRST INTERSECT SELECT MIN(vt0.c1) FROM vt0 WHERE ((- (((vt0.c1)>(vt0.c0))))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 NATURAL JOIN v0 WHERE (x'bfb8d08554' COLLATE NOCASE);
SELECT * FROM vt0, t1 NATURAL JOIN v0 WHERE (((x'bfb8d08554' COLLATE NOCASE)AND((~ ('2\cud䮍CQ'))))) INTERSECT SELECT ALL * FROM vt0, t1 NATURAL JOIN v0 WHERE ((~ (v0.c1)) COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM vt0, t1 NATURAL JOIN v0 WHERE (x'bfb8d08554' COLLATE NOCASE);
SELECT * FROM vt0, t1 NATURAL JOIN v0 WHERE (((x'bfb8d08554' COLLATE NOCASE)AND((~ ('2\cud䮍CQ'))))) INTERSECT SELECT ALL * FROM vt0, t1 NATURAL JOIN v0 WHERE ((~ (v0.c1)) COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM v0, vt0, t1 WHERE (((t1.c0)||(((t1.c2) NOT NULL)))) ORDER BY CASE WHEN CAST(v0.c2 AS TEXT) THEN (+ (t1.c2)) ELSE t1.c2 COLLATE NOCASE END DESC, ((v0.c0 COLLATE NOCASE) IS TRUE)  NULLS FIRST;
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((t1.c0)||(((t1.c2) NOT NULL))))AND(CAST((((t1.c2, t1.c2, v0.c1)) NOT BETWEEN ((v0.c1, v0.c2, t1.c0)) AND ((vt0.c0, v0.c0, v0.c0))) AS REAL)))) ORDER BY CASE WHEN CAST(v0.c2 AS TEXT) THEN (+ (t1.c2)) ELSE t1.c2 COLLATE NOCASE END DESC, ((v0.c0 COLLATE NOCASE) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM v0, vt0, t1 WHERE (((t1.c0)||(((t1.c2) NOT NULL)))) ORDER BY CASE WHEN CAST(v0.c2 AS TEXT) THEN (+ (t1.c2)) ELSE t1.c2 COLLATE NOCASE END DESC, ((v0.c0 COLLATE NOCASE) IS TRUE)  NULLS FIRST;
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((t1.c0)||(((t1.c2) NOT NULL))))AND(CAST((((t1.c2, t1.c2, v0.c1)) NOT BETWEEN ((v0.c1, v0.c2, t1.c0)) AND ((vt0.c0, v0.c0, v0.c0))) AS REAL)))) ORDER BY CASE WHEN CAST(v0.c2 AS TEXT) THEN (+ (t1.c2)) ELSE t1.c2 COLLATE NOCASE END DESC, ((v0.c0 COLLATE NOCASE) IS TRUE)  NULLS FIRST;
SELECT MAX(vt0.c1) FROM t1, vt0, v0 WHERE (((load_extension(t1.c1, vt0.c0)) IS FALSE));
SELECT ALL MAX(vt0.c1) FROM t1, vt0 NOT INDEXED, v0 WHERE (((((load_extension(t1.c1, vt0.c0)) IS FALSE))AND(UNLIKELY((+ (t1.c2)))))) ORDER BY CASE IFNULL(DISTINCT v0.c0, v0.c1)  WHEN ((v0.c0)IS(t1.c0)) THEN (x'874a' IN (vt0.c1)) WHEN ((((t1.c2)OR(vt0.c1)))OR(t1.c0)) THEN '' END DESC, CASE WHEN NULLIF(DISTINCT v0.c0, vt0.c1) THEN NULL WHEN ((t1.c0) NOTNULL) THEN CAST(t1.c0 AS REAL) WHEN (((t1.c2, v0.c1, t1.c2, t1.c0)) BETWEEN ((t1.c1, vt0.c1, v0.c0, v0.c1)) AND ((vt0.c1, v0.c1, t1.c2, t1.c0))) THEN (vt0.c0 IN ()) ELSE v0.c2 COLLATE RTRIM END  NULLS FIRST LIMIT 1;
SELECT ALL MIN(vt0.c1) FROM vt0, v0 WHERE ((((v0.c0))==((0.05978056218413774))) COLLATE RTRIM);
SELECT DISTINCT MIN(vt0.c1) FROM vt0, v0 WHERE ((((((v0.c0))=((0.05978056218413774))) COLLATE RTRIM)AND(((((0.9621006261159323)>=(vt0.c1)))>(((0.9700543590899922)=(0.7061208012178406))))))) ORDER BY (((vt0.c0 IN (v0.c0)))+(((x'')>>(v0.c2)))), v0.c1  NULLS FIRST, ((CAST(0.7268168133366202 AS INTEGER)) ISNULL) ASC LIMIT 1;
SELECT ALL * FROM vt0, t1, v0 WHERE ((((((((((((vt0.c1))>((t1.c2))))OR((+ (t1.c0)))))OR((((v0.c0, v0.c2, v0.c0, t1.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, t1.c2, v0.c0)) AND ((v0.c0, vt0.c0, v0.c2, t1.c2))))))AND(CAST(t1.c2 AS TEXT))))AND(TYPEOF(DISTINCT vt0.c1)))) ORDER BY ((((((((t1.c2)GLOB(t1.c2)))AND((v0.c0 IN (t1.c2)))))OR(json_extract(v0.c0, t1.c2))))OR(HEX(DISTINCT t1.c1))) ASC  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((((((((((((((vt0.c1))>((t1.c2))))OR((+ (t1.c0)))))OR((((v0.c0, v0.c2, v0.c0, t1.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, t1.c2, v0.c0)) AND ((v0.c0, vt0.c0, v0.c2, t1.c2))))))AND(CAST(t1.c2 AS TEXT))))AND(TYPEOF(DISTINCT vt0.c1))))AND(((CAST('-658426672' AS BLOB))!=(vt0.c1 COLLATE BINARY))))) ORDER BY ((((((((t1.c2)GLOB(t1.c2)))AND((v0.c0 IN (t1.c2)))))OR(json_extract(v0.c0, t1.c2))))OR(HEX(DISTINCT t1.c1))) ASC  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) ASC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0, t1, v0 WHERE ((((((((((((vt0.c1))>((t1.c2))))OR((+ (t1.c0)))))OR((((v0.c0, v0.c2, v0.c0, t1.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, t1.c2, v0.c0)) AND ((v0.c0, vt0.c0, v0.c2, t1.c2))))))AND(CAST(t1.c2 AS TEXT))))AND(TYPEOF(DISTINCT vt0.c1)))) ORDER BY ((((((((t1.c2)GLOB(t1.c2)))AND((v0.c0 IN (t1.c2)))))OR(json_extract(v0.c0, t1.c2))))OR(HEX(DISTINCT t1.c1))) ASC  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((((((((((((((vt0.c1))>((t1.c2))))OR((+ (t1.c0)))))OR((((v0.c0, v0.c2, v0.c0, t1.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, t1.c2, v0.c0)) AND ((v0.c0, vt0.c0, v0.c2, t1.c2))))))AND(CAST(t1.c2 AS TEXT))))AND(TYPEOF(DISTINCT vt0.c1))))AND(((CAST('-658426672' AS BLOB))!=(vt0.c1 COLLATE BINARY))))) ORDER BY ((((((((t1.c2)GLOB(t1.c2)))AND((v0.c0 IN (t1.c2)))))OR(json_extract(v0.c0, t1.c2))))OR(HEX(DISTINCT t1.c1))) ASC  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) ASC  NULLS LAST LIMIT 0X0;
SELECT * FROM vt0, t1, v0 WHERE ((((NOT (''))) ISNULL));
SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((((((NOT (''))) ISNULL))AND((~ (((t1.c0) ISNULL)))))) INTERSECT SELECT DISTINCT * FROM vt0, t1, v0 WHERE (ABS(vt0.c1) COLLATE RTRIM);
SELECT * FROM vt0, t1, v0 WHERE ((((NOT (''))) ISNULL));
SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((((((NOT (''))) ISNULL))AND((~ (((t1.c0) ISNULL)))))) INTERSECT SELECT DISTINCT * FROM vt0, t1, v0 WHERE (ABS(vt0.c1) COLLATE RTRIM);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END) NOT BETWEEN (((x'')|(v0.c2))) AND (((v0.c1) BETWEEN (v0.c0) AND ('?!*微Lt37'))))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))!=((((NULL)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))) ASC, (((+ (v0.c2))) IS FALSE)  NULLS FIRST, (((- (v0.c2))) BETWEEN (DATE(v0.c0, v0.c0, v0.c2, v0.c0)) AND (((v0.c2) IS FALSE))) DESC;
SELECT DISTINCT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END) NOT BETWEEN (((x'')|(v0.c2))) AND (((v0.c1) BETWEEN (v0.c0) AND ('?!*微Lt37')))))AND((((v0.c1)+(x'')) IN (v0.c2 COLLATE NOCASE))))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))!=((((NULL)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))) ASC, (((+ (v0.c2))) IS FALSE)  NULLS FIRST, (((- (v0.c2))) BETWEEN (DATE(v0.c0, v0.c0, v0.c2, v0.c0)) AND (((v0.c2) IS FALSE))) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c2)OR(v0.c0)))AND(CASE x'8043'  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END)))AND(CAST('-2109974580' AS REAL))))OR(((0Xc25bb44)>(v0.c0))))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))<>((((NULL)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))) ASC, (((+ (v0.c2))) IS FALSE)  NULLS FIRST, (((- (v0.c2))) BETWEEN (DATE(v0.c0, v0.c0, v0.c2, v0.c0)) AND (((v0.c2) IS FALSE))) DESC LIMIT 0x1;
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END) NOT BETWEEN (((x'')|(v0.c2))) AND (((v0.c1) BETWEEN (v0.c0) AND ('?!*微Lt37'))))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))!=((((NULL)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))) ASC, (((+ (v0.c2))) IS FALSE)  NULLS FIRST, (((- (v0.c2))) BETWEEN (DATE(v0.c0, v0.c0, v0.c2, v0.c0)) AND (((v0.c2) IS FALSE))) DESC;
SELECT DISTINCT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END) NOT BETWEEN (((x'')|(v0.c2))) AND (((v0.c1) BETWEEN (v0.c0) AND ('?!*微Lt37')))))AND((((v0.c1)+(x'')) IN (v0.c2 COLLATE NOCASE))))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))!=((((NULL)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))) ASC, (((+ (v0.c2))) IS FALSE)  NULLS FIRST, (((- (v0.c2))) BETWEEN (DATE(v0.c0, v0.c0, v0.c2, v0.c0)) AND (((v0.c2) IS FALSE))) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c2)OR(v0.c0)))AND(CASE x'8043'  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END)))AND(CAST('-2109974580' AS REAL))))OR(((0Xc25bb44)>(v0.c0))))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))<>((((NULL)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))) ASC, (((+ (v0.c2))) IS FALSE)  NULLS FIRST, (((- (v0.c2))) BETWEEN (DATE(v0.c0, v0.c0, v0.c2, v0.c0)) AND (((v0.c2) IS FALSE))) DESC LIMIT 0x1;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN json_array(vt0.c0, vt0.c0) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (+ (vt0.c1)) END);
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((CASE WHEN ((vt0.c0) NOT NULL) THEN json_array(vt0.c0, vt0.c0) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (+ (vt0.c1)) END)AND(((CAST(vt0.c1 AS TEXT)) BETWEEN ((+ (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))))) LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (JULIANDAY(((vt0.c1) BETWEEN (vt0.c1) AND ('')), ((((((((vt0.c1)OR(0.25058086560340764)))AND(vt0.c0)))AND(0x67184eb)))AND(vt0.c0)), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)), (- (vt0.c0)))) LIMIT 0x0;
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (t1.c1)) COLLATE RTRIM);
SELECT DISTINCT * FROM t1, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (t1.c1)) COLLATE RTRIM) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (t1.c1) LIMIT 1;
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (t1.c1)) COLLATE RTRIM);
SELECT DISTINCT * FROM t1, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (t1.c1)) COLLATE RTRIM) LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (t1.c1) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE RTRIM) BETWEEN (t1.c1 COLLATE NOCASE) AND ('-1931791710'))) ORDER BY (((((t1.c2))<=((t1.c1)))) NOT BETWEEN (((t1.c2)-(x''))) AND (CASE t1.c1  WHEN t1.c1 THEN NULL WHEN t1.c2 THEN t1.c2 END)) ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE RTRIM) BETWEEN (t1.c1 COLLATE NOCASE) AND ('-1931791710'))) ORDER BY (((((t1.c2))<=((t1.c1)))) NOT BETWEEN (((t1.c2)-(x''))) AND (CASE t1.c1  WHEN t1.c1 THEN NULL WHEN t1.c2 THEN t1.c2 END)) ASC INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((- (t1.c2))) BETWEEN (0.9351864775769649) AND (((0x28d7d085) NOT NULL)))) ORDER BY (((((t1.c2))<=((t1.c1)))) NOT BETWEEN (((t1.c2)-(x''))) AND (CASE t1.c1  WHEN t1.c1 THEN NULL WHEN t1.c2 THEN t1.c2 END)) ASC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN TRIM(vt0.c0) THEN ((vt0.c1) IS TRUE) WHEN ((vt0.c1)+(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN 0Xffffffffce421dca WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END ELSE CAST(vt0.c0 AS BLOB) END) ORDER BY (((vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, x'', (vt0.c0 IN (0X60b05421, vt0.c1)))) AND (('430989384', IFNULL(vt0.c1, vt0.c0), (- (vt0.c1)), ((vt0.c0)>(vt0.c0))))), 'T.' ASC, (vt0.c1 COLLATE BINARY IN (TYPEOF(vt0.c1), 0.5023244049517531));
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN TRIM(vt0.c0) THEN ((vt0.c1) IS TRUE) WHEN ((vt0.c1)+(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN -834527798 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END ELSE CAST(vt0.c0 AS BLOB) END) ORDER BY (((vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, x'', (vt0.c0 IN (1622168609, vt0.c1)))) AND (('430989384', IFNULL(vt0.c1, vt0.c0), (- (vt0.c1)), ((vt0.c0)>(vt0.c0))))), 'T.' ASC, (vt0.c1 COLLATE BINARY IN (TYPEOF(vt0.c1), 0.5023244049517531));
SELECT ALL * FROM vt0 WHERE (CASE WHEN TRIM(vt0.c0) THEN ((vt0.c1) IS TRUE) WHEN ((vt0.c1)+(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN 0Xffffffffce421dca WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END ELSE CAST(vt0.c0 AS BLOB) END) ORDER BY (((vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, x'', (vt0.c0 IN (0X60b05421, vt0.c1)))) AND (('430989384', IFNULL(vt0.c1, vt0.c0), (- (vt0.c1)), ((vt0.c0)>(vt0.c0))))), 'T.' ASC, (vt0.c1 COLLATE BINARY IN (TYPEOF(vt0.c1), 0.5023244049517531));
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN TRIM(vt0.c0) THEN ((vt0.c1) IS TRUE) WHEN ((vt0.c1)+(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN -834527798 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END ELSE CAST(vt0.c0 AS BLOB) END) ORDER BY (((vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, x'', (vt0.c0 IN (1622168609, vt0.c1)))) AND (('430989384', IFNULL(vt0.c1, vt0.c0), (- (vt0.c1)), ((vt0.c0)>(vt0.c0))))), 'T.' ASC, (vt0.c1 COLLATE BINARY IN (TYPEOF(vt0.c1), 0.5023244049517531));
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END IN (0.301199381231104 COLLATE NOCASE, ((vt0.c0) BETWEEN (vt0.c1) AND (0xffffffffbf68378a)), ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))));
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END IN (0.301199381231104 COLLATE NOCASE, ((vt0.c0) BETWEEN (vt0.c1) AND (0xffffffffbf68378a)), ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY)));
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((((((((('') NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c0)))))OR(((((vt0.c1)AND('1576123895')))OR(vt0.c1)))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY vt0.c1 COLLATE RTRIM  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE) DESC;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE ((((((((((('') NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c0)))))OR(((((vt0.c1)AND('1576123895')))OR(vt0.c1)))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))))AND((((vt0.c0)||(vt0.c0)) IN (vt0.c0 COLLATE NOCASE))))) ORDER BY vt0.c1 COLLATE RTRIM  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE) DESC INTERSECT SELECT MIN(vt0.c1) FROM vt0 WHERE (NULL) ORDER BY vt0.c1 COLLATE RTRIM  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE) DESC;
SELECT * FROM t1 WHERE ((((((t1.c0)IS(t1.c2))))>((x'89'))));
SELECT ALL * FROM t1 WHERE ((((((((t1.c0)IS(t1.c2))))>((x'89'))))AND((((~ (t1.c2)))*(((t1.c1)<(t1.c2))))))) ORDER BY (~ (t1.c1)) COLLATE BINARY ASC, CASE WHEN ((t1.c2) BETWEEN (t1.c2) AND (0.6809423453611678)) THEN (((t1.c1, t1.c1)) NOT BETWEEN ((t1.c2, t1.c0)) AND ((t1.c2, t1.c2))) WHEN UNLIKELY(DISTINCT t1.c0) THEN ((0.7971248963455178)>(t1.c0)) END ASC;
SELECT * FROM t1 WHERE ((((((t1.c0)IS(t1.c2))))>((x'89'))));
SELECT ALL * FROM t1 WHERE ((((((((t1.c0)IS(t1.c2))))>((x'89'))))AND((((~ (t1.c2)))*(((t1.c1)<(t1.c2))))))) ORDER BY (~ (t1.c1)) COLLATE BINARY ASC, CASE WHEN ((t1.c2) BETWEEN (t1.c2) AND (0.6809423453611678)) THEN (((t1.c1, t1.c1)) NOT BETWEEN ((t1.c2, t1.c0)) AND ((t1.c2, t1.c2))) WHEN UNLIKELY(DISTINCT t1.c0) THEN ((0.7971248963455178)>(t1.c0)) END ASC;
SELECT * FROM v0, vt0 WHERE (((((((NULL)AND(SQLITE_COMPILEOPTION_USED(v0.c1))))OR((vt0.c1 IN ()))))AND((NOT (v0.c0)))));
SELECT DISTINCT * FROM v0, vt0 WHERE (((((((NULL)AND(SQLITE_COMPILEOPTION_USED(v0.c1))))OR((vt0.c1 IN ()))))AND((NOT (v0.c0))))) ORDER BY (((v0.c0, vt0.c0, vt0.c0, v0.c2)) BETWEEN ((v0.c1 COLLATE NOCASE, LTRIM(v0.c1), ((v0.c1)AND(v0.c1)), ((((((vt0.c1)OR(vt0.c1)))OR(v0.c1)))AND(vt0.c1)))) AND ((CAST(vt0.c0 AS REAL), ((v0.c2) BETWEEN (v0.c2) AND (vt0.c0)), ((((((((vt0.c1)OR(v0.c0)))OR(v0.c1)))AND(vt0.c1)))OR(v0.c2)), (- (v0.c0))))) ASC  NULLS FIRST, (- (((v0.c2) BETWEEN (v0.c1) AND (vt0.c1)))), (+ (CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT * FROM v0, vt0 WHERE (((((((NULL)AND(SQLITE_COMPILEOPTION_USED(v0.c1))))OR((vt0.c1 IN ()))))AND((NOT (v0.c0)))));
SELECT DISTINCT * FROM v0, vt0 WHERE (((((((NULL)AND(SQLITE_COMPILEOPTION_USED(v0.c1))))OR((vt0.c1 IN ()))))AND((NOT (v0.c0))))) ORDER BY (((v0.c0, vt0.c0, vt0.c0, v0.c2)) BETWEEN ((v0.c1 COLLATE NOCASE, LTRIM(v0.c1), ((v0.c1)AND(v0.c1)), ((((((vt0.c1)OR(vt0.c1)))OR(v0.c1)))AND(vt0.c1)))) AND ((CAST(vt0.c0 AS REAL), ((v0.c2) BETWEEN (v0.c2) AND (vt0.c0)), ((((((((vt0.c1)OR(v0.c0)))OR(v0.c1)))AND(vt0.c1)))OR(v0.c2)), (- (v0.c0))))) ASC  NULLS FIRST, (- (((v0.c2) BETWEEN (v0.c1) AND (vt0.c1)))), (+ (CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT * FROM vt0, t1 WHERE ((((((0Xffffffffbef882ed))<((vt0.c1)))) NOT BETWEEN (((((t1.c1)OR(vt0.c1)))AND(vt0.c0))) AND ((((t1.c2, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, t1.c0))))));
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((((0Xffffffffbef882ed))<((vt0.c1)))) NOT BETWEEN (((((t1.c1)OR(vt0.c1)))AND(vt0.c0))) AND ((((t1.c2, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, t1.c0))))))AND(CAST((((t1.c2, t1.c1, vt0.c1)) BETWEEN ((t1.c1, t1.c0, vt0.c1)) AND ((t1.c2, t1.c0, t1.c1))) AS NUMERIC)))) ORDER BY t1.c1  NULLS LAST LIMIT 0x0;
SELECT * FROM vt0, t1 WHERE ((((((0Xffffffffbef882ed))<((vt0.c1)))) NOT BETWEEN (((((t1.c1)OR(vt0.c1)))AND(vt0.c0))) AND ((((t1.c2, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, t1.c0))))));
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((((0Xffffffffbef882ed))<((vt0.c1)))) NOT BETWEEN (((((t1.c1)OR(vt0.c1)))AND(vt0.c0))) AND ((((t1.c2, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0)) AND ((vt0.c0, t1.c0))))))AND(CAST((((t1.c2, t1.c1, vt0.c1)) BETWEEN ((t1.c1, t1.c0, vt0.c1)) AND ((t1.c2, t1.c0, t1.c1))) AS NUMERIC)))) ORDER BY t1.c1  NULLS LAST LIMIT 0x0;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c2, t1.c0, t1.c0)) BETWEEN ((((t1.c0) BETWEEN (t1.c1) AND (0.3912891411238685)), CASE t1.c2  WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 ELSE t1.c1 END, t1.c2)) AND ((((t1.c1) ISNULL), (((t1.c1))==((t1.c1))), (~ ('T'))))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((t1.c2, t1.c0, t1.c0)) BETWEEN ((((t1.c0) BETWEEN (t1.c1) AND (0.3912891411238685)), CASE t1.c2  WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 ELSE t1.c1 END, t1.c2)) AND ((((t1.c1) ISNULL), (((t1.c1))=((t1.c1))), (~ ('T'))))))AND(NULL)));
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c1) BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM) ORDER BY UPPER(0.14509156421974923) DESC, CAST(CAST(vt0.c0 AS TEXT) AS BLOB);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c1) BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM)AND(GLOB(((vt0.c1)+(vt0.c1)), CAST(v0.c0 AS BLOB))))) ORDER BY v0.c2 ASC  NULLS FIRST INTERSECT SELECT ALL * FROM vt0, v0 WHERE (1.215819737E9) ORDER BY v0.c2 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c1) BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM) ORDER BY UPPER(0.14509156421974923) DESC, CAST(CAST(vt0.c0 AS TEXT) AS BLOB);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c1) BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM)AND(GLOB(((vt0.c1)+(vt0.c1)), CAST(v0.c0 AS BLOB))))) ORDER BY v0.c2 ASC  NULLS FIRST INTERSECT SELECT ALL * FROM vt0, v0 WHERE (1.215819737E9) ORDER BY v0.c2 ASC  NULLS FIRST;
SELECT * FROM t1 CROSS JOIN v0 ON ((((((((v0.c2)AND(t1.c0)))AND(t1.c1)))AND(t1.c0))) NOT BETWEEN (((v0.c2) NOTNULL)) AND (CAST(v0.c2 AS BLOB))) WHERE (((((((((v0.c1)OR(((1.995388678E9) NOT BETWEEN (t1.c1) AND (v0.c1)))))AND(CASE v0.c2  WHEN v0.c0 THEN x'c2ca' END)))OR((((t1.c0))<((v0.c1))))))OR(((v0.c1)IS(x'')))));
SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON ((((((((v0.c2)AND(t1.c0)))AND(t1.c1)))AND(t1.c0))) NOT BETWEEN (((v0.c2) NOTNULL)) AND (CAST(v0.c2 AS BLOB))) WHERE (((((((((((v0.c1)OR(((1.995388678E9) NOT BETWEEN (t1.c1) AND (v0.c1)))))AND(CASE v0.c2  WHEN v0.c0 THEN x'c2ca' END)))OR((((t1.c0))<((v0.c1))))))OR(((v0.c1)IS(x'')))))AND(CASE WHEN (- (t1.c1)) THEN ((x'') ISNULL) END))) ORDER BY (((((((~ (v0.c2)))OR(((v0.c0) NOT BETWEEN (t1.c0) AND (NULL)))))OR(((t1.c1) IS TRUE))))AND((NOT (t1.c0)))) INTERSECT SELECT DISTINCT * FROM t1 NOT INDEXED CROSS JOIN v0 ON ((((((((v0.c2)AND(t1.c0)))AND(t1.c1)))AND(t1.c0))) NOT BETWEEN (((v0.c2) NOTNULL)) AND (CAST(v0.c2 AS BLOB))) WHERE (0Xffffffffacd80a58) ORDER BY (((((((~ (v0.c2)))OR(((v0.c0) NOT BETWEEN (t1.c0) AND (NULL)))))OR(((t1.c1) IS TRUE))))AND((NOT (t1.c0))));
SELECT * FROM t1 CROSS JOIN v0 ON ((((((((v0.c2)AND(t1.c0)))AND(t1.c1)))AND(t1.c0))) NOT BETWEEN (((v0.c2) NOTNULL)) AND (CAST(v0.c2 AS BLOB))) WHERE (((((((((v0.c1)OR(((1.995388678E9) NOT BETWEEN (t1.c1) AND (v0.c1)))))AND(CASE v0.c2  WHEN v0.c0 THEN x'c2ca' END)))OR((((t1.c0))<((v0.c1))))))OR(((v0.c1)IS(x'')))));
SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON ((((((((v0.c2)AND(t1.c0)))AND(t1.c1)))AND(t1.c0))) NOT BETWEEN (((v0.c2) NOTNULL)) AND (CAST(v0.c2 AS BLOB))) WHERE (((((((((((v0.c1)OR(((1.995388678E9) NOT BETWEEN (t1.c1) AND (v0.c1)))))AND(CASE v0.c2  WHEN v0.c0 THEN x'c2ca' END)))OR((((t1.c0))<((v0.c1))))))OR(((v0.c1)IS(x'')))))AND(CASE WHEN (- (t1.c1)) THEN ((x'') ISNULL) END))) ORDER BY (((((((~ (v0.c2)))OR(((v0.c0) NOT BETWEEN (t1.c0) AND (NULL)))))OR(((t1.c1) IS TRUE))))AND((NOT (t1.c0)))) INTERSECT SELECT DISTINCT * FROM t1 NOT INDEXED CROSS JOIN v0 ON ((((((((v0.c2)AND(t1.c0)))AND(t1.c1)))AND(t1.c0))) NOT BETWEEN (((v0.c2) NOTNULL)) AND (CAST(v0.c2 AS BLOB))) WHERE (0Xffffffffacd80a58) ORDER BY (((((((~ (v0.c2)))OR(((v0.c0) NOT BETWEEN (t1.c0) AND (NULL)))))OR(((t1.c1) IS TRUE))))AND((NOT (t1.c0))));
SELECT ALL * FROM t1, v0, vt0 WHERE ((((v0.c2, t1.c0))<=((t1.c0, v0.c1))) COLLATE RTRIM);
SELECT * FROM t1, v0, vt0 WHERE ((((((v0.c2, t1.c0))<=((t1.c0, v0.c1))) COLLATE RTRIM)AND(IFNULL(((((t1.c1)AND(t1.c0)))AND(vt0.c0)), ((((v0.c2)OR(t1.c0)))AND(v0.c0)))))) ORDER BY ((v0.c1)<<(v0.c1)) COLLATE NOCASE, (((0.604572008751067))<>((((v0.c0)%(v0.c2))))) INTERSECT SELECT * FROM t1, v0, vt0 WHERE ((CAST(v0.c0 AS BLOB) IN (((v0.c1) NOT NULL)))) ORDER BY ((v0.c1)<<(v0.c1)) COLLATE NOCASE, (((0.604572008751067))<>((((v0.c0)%(v0.c2)))));
SELECT ALL * FROM t1, v0, vt0 WHERE ((((v0.c2, t1.c0))<=((t1.c0, v0.c1))) COLLATE RTRIM);
SELECT * FROM t1, v0, vt0 WHERE ((((((v0.c2, t1.c0))<=((t1.c0, v0.c1))) COLLATE RTRIM)AND(IFNULL(((((t1.c1)AND(t1.c0)))AND(vt0.c0)), ((((v0.c2)OR(t1.c0)))AND(v0.c0)))))) ORDER BY ((v0.c1)<<(v0.c1)) COLLATE NOCASE, (((0.604572008751067))<>((((v0.c0)%(v0.c2))))) INTERSECT SELECT * FROM t1, v0, vt0 WHERE ((CAST(v0.c0 AS BLOB) IN (((v0.c1) NOT NULL)))) ORDER BY ((v0.c1)<<(v0.c1)) COLLATE NOCASE, (((0.604572008751067))<>((((v0.c0)%(v0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t1 CROSS JOIN v0 ON ((((v0.c1) BETWEEN (v0.c2) AND (t1.c1))) NOTNULL) WHERE (((v0.c1) IS TRUE));
SELECT DISTINCT COUNT(*) FROM vt0, t1 CROSS JOIN v0 ON ((((v0.c1) BETWEEN (v0.c2) AND (t1.c1))) NOTNULL) WHERE (((((v0.c1) IS TRUE))AND((NOT (CAST(v0.c2 AS REAL)))))) ORDER BY ((((~ (t1.c2)), ((t1.c0)%(vt0.c0)), (NOT (t1.c0))))>((((t1.c2)+(v0.c1)), v0.c0, ((((((((0x695b0eef)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1, v0 LEFT OUTER JOIN vt0 ON (+ (((v0.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))) WHERE (UNLIKELY(LIKELIHOOD(DISTINCT vt0.c1, vt0.c1))) ORDER BY NULL;
SELECT * FROM t1, v0 INNER JOIN vt0 ON (+ (((v0.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))) WHERE (UNLIKELY(LIKELIHOOD(DISTINCT vt0.c1, vt0.c1))) ORDER BY NULL LIMIT 0X1;
SELECT ALL * FROM t1, v0 LEFT OUTER JOIN vt0 ON (+ (((v0.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))) WHERE (UNLIKELY(LIKELIHOOD(DISTINCT vt0.c1, vt0.c1))) ORDER BY NULL;
SELECT MAX(t1.c1) FROM t1, v0 WHERE (JULIANDAY(x'', (NOT (v0.c2)), t1.c1, json_insert(t1.c2, v0.c2, v0.c1), (((t1.c0, '108102891'))==((v0.c1, t1.c1)))));
SELECT ALL MAX(t1.c1) FROM t1, v0 WHERE (((JULIANDAY(x'', (NOT (v0.c2)), t1.c1, json_insert(t1.c2, v0.c2, v0.c1), (((t1.c0, '108102891'))==((v0.c1, t1.c1)))))AND((((t1.c0 IN (t1.c0)))+((+ (t1.c1))))))) INTERSECT SELECT MAX(t1.c1) FROM t1, v0 WHERE (CAST(x'' AS TEXT));
SELECT ALL MIN(t1.c1) FROM t1 NATURAL JOIN vt0 WHERE ((- (((((((vt0.c0)AND(t1.c2)))OR(vt0.c0)))OR(t1.c1)))));
SELECT MIN(t1.c1) FROM t1 NATURAL JOIN vt0 WHERE ((((- (((((((vt0.c0)AND(t1.c2)))OR(vt0.c0)))OR(t1.c1)))))AND(((((((((((((t1.c0)AND(t1.c1)))OR(t1.c1)))AND(vt0.c0)))AND(vt0.c1)))OR((t1.c2 IN (vt0.c1)))))OR(t1.c0 COLLATE BINARY))))) LIMIT 0;
SELECT * FROM v0, t1, vt0 WHERE (CASE WHEN ((vt0.c1)>(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (x'')) WHEN HEX(DISTINCT v0.c2) THEN TIME(t1.c2, v0.c2, t1.c1, vt0.c1) WHEN IFNULL(v0.c2, v0.c2) THEN ((t1.c1) NOT BETWEEN (t1.c2) AND (v0.c1)) ELSE CASE WHEN t1.c2 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 ELSE t1.c0 END END);
SELECT * FROM v0, t1, vt0 WHERE (((CASE WHEN ((vt0.c1)>(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (x'')) WHEN HEX(DISTINCT v0.c2) THEN TIME(t1.c2, v0.c2, t1.c1, vt0.c1) WHEN IFNULL(v0.c2, v0.c2) THEN ((t1.c1) NOT BETWEEN (t1.c2) AND (v0.c1)) ELSE CASE WHEN t1.c2 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 ELSE t1.c0 END END)AND(((json(vt0.c1)) NOT NULL))));
SELECT * FROM v0, t1, vt0 WHERE (CASE WHEN ((vt0.c1)>(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (x'')) WHEN HEX(DISTINCT v0.c2) THEN TIME(t1.c2, v0.c2, t1.c1, vt0.c1) WHEN IFNULL(v0.c2, v0.c2) THEN ((t1.c1) NOT BETWEEN (t1.c2) AND (v0.c1)) ELSE CASE WHEN t1.c2 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 ELSE t1.c0 END END);
SELECT * FROM v0, t1, vt0 WHERE (((CASE WHEN ((vt0.c1)>(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (x'')) WHEN HEX(DISTINCT v0.c2) THEN TIME(t1.c2, v0.c2, t1.c1, vt0.c1) WHEN IFNULL(v0.c2, v0.c2) THEN ((t1.c1) NOT BETWEEN (t1.c2) AND (v0.c1)) ELSE CASE WHEN t1.c2 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 ELSE t1.c0 END END)AND(((json(vt0.c1)) NOT NULL))));
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN v0 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS BLOB)) ORDER BY ((((((((((((((t1.c0)IS(t1.c0)))AND(((v0.c1)AND(t1.c0)))))OR(CASE v0.c0  WHEN t1.c2 THEN v0.c2 ELSE v0.c1 END)))OR(v0.c2)))AND((NOT (t1.c1)))))OR(((t1.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))))OR(UNICODE(v0.c0)))  NULLS LAST, (CAST(v0.c0 AS INTEGER) IN (v0.c2))  NULLS LAST;
SELECT COUNT(*) FROM t1 NATURAL JOIN v0 WHERE (((CAST(CAST(v0.c0 AS NUMERIC) AS BLOB))AND(t1.c1))) ORDER BY ((((t1.c0)==(t1.c2)))LIKE(((t1.c2) IS TRUE))), CHANGES() ASC  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM vt0, v0, t1 WHERE ((- (((v0.c2) BETWEEN (t1.c0) AND (v0.c1))))) ORDER BY ('-1264970656' IN (json_array_length(vt0.c1))), NULL DESC;
SELECT * FROM vt0, v0, t1 WHERE ((- (((v0.c2) BETWEEN (t1.c0) AND (v0.c1))))) ORDER BY ('-1264970656' IN (json_array_length(vt0.c1))), NULL DESC;
SELECT ALL * FROM vt0, v0, t1 WHERE ((- (((v0.c2) BETWEEN (t1.c0) AND (v0.c1))))) ORDER BY ('-1264970656' IN (json_array_length(vt0.c1))), NULL DESC;
SELECT * FROM vt0, v0, t1 WHERE ((- (((v0.c2) BETWEEN (t1.c0) AND (v0.c1))))) ORDER BY ('-1264970656' IN (json_array_length(vt0.c1))), NULL DESC;
SELECT ALL MIN(t1.c2) FROM t1 WHERE ((t1.c1 IN (t1.c1)) COLLATE NOCASE);
SELECT DISTINCT MIN(t1.c2) FROM t1 WHERE ((((t1.c1 IN (t1.c1)) COLLATE NOCASE)AND(CASE WHEN t1.c0 THEN t1.c2 WHEN 0x11c0697 THEN t1.c1 END COLLATE BINARY)));
SELECT ALL * FROM vt0, t1 WHERE (0.5035986536868896);
SELECT ALL * FROM vt0, t1 WHERE (((0.5035986536868896)AND(((0.2969032779845652)!=(((t1.c0)&(vt0.c1))))))) ORDER BY (((t1.c2 IN (vt0.c1, t1.c0)))||(vt0.c1 COLLATE NOCASE)) ASC  NULLS LAST INTERSECT SELECT * FROM vt0, t1 WHERE (((vt0.c1 IN ()) IN ((((vt0.c0))<((t1.c1))), (((NULL, t1.c1, '_	', vt0.c0, t1.c2, t1.c2))>=((t1.c2, t1.c1, t1.c0, vt0.c0, vt0.c1, t1.c1)))))) ORDER BY (((t1.c2 IN (vt0.c1, t1.c0)))||(vt0.c1 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE (0.5035986536868896);
SELECT ALL * FROM vt0, t1 WHERE (((0.5035986536868896)AND(((0.2969032779845652)!=(((t1.c0)&(vt0.c1))))))) ORDER BY (((t1.c2 IN (vt0.c1, t1.c0)))||(vt0.c1 COLLATE NOCASE)) ASC  NULLS LAST INTERSECT SELECT * FROM vt0, t1 WHERE (((vt0.c1 IN ()) IN ((((vt0.c0))<((t1.c1))), (((NULL, t1.c1, '_	', vt0.c0, t1.c2, t1.c2))>=((t1.c2, t1.c1, t1.c0, vt0.c0, vt0.c1, t1.c1)))))) ORDER BY (((t1.c2 IN (vt0.c1, t1.c0)))||(vt0.c1 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT MAX(vt0.c1) FROM vt0 WHERE (0Xffffffff903bdb70);
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (-1875125392) ORDER BY x'', ((((((((vt0.c0)OR(vt0.c0)))OR(0.09717717207692222)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST, ((vt0.c0 COLLATE NOCASE) NOTNULL)  NULLS LAST LIMIT 0 INTERSECT SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (vt0.c0) ORDER BY x'', ((((((((vt0.c0)OR(vt0.c0)))OR(0.09717717207692222)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST, ((vt0.c0 COLLATE NOCASE) NOTNULL)  NULLS LAST LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (IFNULL(((t1.c2) BETWEEN (t1.c1) AND (t1.c1)), t1.c1)) ORDER BY ((((((vt0.c0, vt0.c0, vt0.c0, t1.c1, t1.c1))==((t1.c0, vt0.c0, vt0.c1, vt0.c0, t1.c1))), x'6226'))=(((((t1.c1, 0.7694055658475882, t1.c2))!=((t1.c0, t1.c0, vt0.c1))), ((vt0.c1) ISNULL)))), ((((vt0.c0)+(t1.c0))) NOT NULL)  NULLS LAST, ((((((((vt0.c1)AND(t1.c1)))OR(t1.c2)))AND(t1.c0)))AND(x'63a9')) COLLATE BINARY  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE (((IFNULL(((t1.c2) BETWEEN (t1.c1) AND (t1.c1)), t1.c1))AND(((((vt0.c0)GLOB(vt0.c0))) BETWEEN (((vt0.c1)IS(vt0.c1))) AND (((vt0.c0) BETWEEN (0.08855221084746645) AND (vt0.c1))))))) ORDER BY (+ (((t1.c0) BETWEEN (t1.c2) AND (vt0.c1))))  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c1) NOTNULL)) NOT BETWEEN (x'') AND (((((((vt0.c1)AND(vt0.c0)))AND(0.983679352129125)))AND(t1.c0))))) ORDER BY (+ (((t1.c0) BETWEEN (t1.c2) AND (vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((CASE v0.c1  WHEN v0.c1 THEN vt0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN vt0.c0 WHEN v0.c0 THEN v0.c2 END IN ())) ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))), (((v0.c0 IN ())) NOTNULL) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0, v0 WHERE ((CASE v0.c1  WHEN v0.c1 THEN vt0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN vt0.c0 WHEN v0.c0 THEN v0.c2 END IN ())) ORDER BY CASE (NOT (v0.c0))  WHEN CASE WHEN v0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END THEN ((vt0.c0)>(v0.c1)) ELSE 'l' END, LAST_INSERT_ROWID() DESC;
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((vt0.c0 COLLATE NOCASE)>>((+ (vt0.c1)))) WHERE (((LIKELIHOOD(DISTINCT v0.c1, vt0.c1)) NOTNULL));
SELECT DISTINCT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((vt0.c0 COLLATE NOCASE)>>((+ (vt0.c1)))) WHERE (((LIKELIHOOD(DISTINCT v0.c1, vt0.c1)) NOTNULL)) ORDER BY ((0.17733561690584876)IS NOT(v0.c0)) DESC;
SELECT ALL * FROM t1, vt0, v0 WHERE (CAST((((vt0.c0, t1.c2, t1.c2)) BETWEEN ((vt0.c0, t1.c0, '-1196239477')) AND ((vt0.c0, vt0.c1, t1.c2))) AS INTEGER));
SELECT * FROM t1, vt0, v0 WHERE (CAST((((vt0.c0, t1.c2, t1.c2)) BETWEEN ((vt0.c0, t1.c0, '-1196239477')) AND ((vt0.c0, vt0.c1, t1.c2))) AS INTEGER)) ORDER BY v0.c0 DESC LIMIT 3 INTERSECT SELECT * FROM t1, vt0, v0 WHERE (json_remove(((vt0.c0)<>(vt0.c1)), v0.c0 COLLATE BINARY, v0.c2 COLLATE NOCASE, 0.7556045483314856, ((v0.c2) NOT NULL))) ORDER BY v0.c0 DESC LIMIT 0X3;
SELECT ALL * FROM t1, vt0, v0 WHERE (CAST((((vt0.c0, t1.c2, t1.c2)) BETWEEN ((vt0.c0, t1.c0, '-1196239477')) AND ((vt0.c0, vt0.c1, t1.c2))) AS INTEGER));
SELECT * FROM t1, vt0, v0 WHERE (CAST((((vt0.c0, t1.c2, t1.c2)) BETWEEN ((vt0.c0, t1.c0, '-1196239477')) AND ((vt0.c0, vt0.c1, t1.c2))) AS INTEGER)) ORDER BY v0.c0 DESC LIMIT 3 INTERSECT SELECT * FROM t1, vt0, v0 WHERE (json_remove(((vt0.c0)<>(vt0.c1)), v0.c0 COLLATE BINARY, v0.c2 COLLATE NOCASE, 0.7556045483314856, ((v0.c2) NOT NULL))) ORDER BY v0.c0 DESC LIMIT 0X3;
SELECT ALL MIN(t1.c2) FROM t1 WHERE ('j*W
Rᕋ~C롁' COLLATE RTRIM);
SELECT DISTINCT MIN(t1.c2) FROM t1 WHERE ((('j*W
Rᕋ~C롁' COLLATE RTRIM)AND(json_object(t1.c1, t1.c1) COLLATE BINARY))) LIMIT 0 INTERSECT SELECT DISTINCT MIN(t1.c2) FROM t1 WHERE ((((((((+ (t1.c2)))OR(((t1.c2) NOT NULL))))OR(t1.c0)))AND(((t1.c1) NOTNULL)))) LIMIT 0x0;
SELECT MAX(v0.c2) FROM t1, v0, vt0 WHERE ((((v0.c2) BETWEEN (vt0.c1) AND (vt0.c1)) IN ((NOT (t1.c0)))));
SELECT MAX(v0.c2) FROM t1, v0, vt0 WHERE ((((v0.c2) BETWEEN (vt0.c1) AND (vt0.c1)) IN ((NOT (t1.c0))))) ORDER BY ((((((t1.c2)AND(v0.c1)))AND(v0.c2))) NOT NULL) ASC;
SELECT ALL MIN(t1.c2) FROM t1, v0 WHERE (((UPPER(v0.c1))&(((0.5093920250379461) NOTNULL)))) ORDER BY 0xffffffffdc106324 ASC;
SELECT DISTINCT MIN(t1.c2) FROM t1, v0 WHERE (((((UPPER(v0.c1))&(((0.5093920250379461) NOTNULL))))AND((((v0.c2, v0.c2)) BETWEEN ((CASE WHEN 0xffffffffe8250e85 THEN t1.c2 WHEN 0.4031118386647521 THEN v0.c1 WHEN t1.c2 THEN v0.c1 WHEN NULL THEN v0.c1 WHEN t1.c1 THEN v0.c2 ELSE v0.c2 END, t1.c2)) AND ((CASE WHEN v0.c1 THEN v0.c2 END, '1092579787')))))) ORDER BY 0xffffffffdc106324 ASC INTERSECT SELECT DISTINCT MIN(t1.c2) FROM t1, v0 WHERE (v0.c1) ORDER BY -602905820 ASC;
SELECT MIN(vt0.c1) FROM t1, v0, vt0 WHERE (((v0.c2 COLLATE NOCASE) NOT NULL)) ORDER BY ((((((((((((((v0.c1)OR(v0.c0)))OR(t1.c0)))OR(t1.c0)))OR(v0.c1)))OR(vt0.c1)))AND(t1.c2)))GLOB(((v0.c2)%(v0.c1)))), TYPEOF((v0.c2 IN ()))  NULLS FIRST, CAST(t1.c1 AS BLOB)  NULLS FIRST;
SELECT MIN(vt0.c1) FROM t1, v0, vt0 WHERE (((((v0.c2 COLLATE NOCASE) NOT NULL))AND(((v0.c2)IS NOT(CAST(v0.c0 AS INTEGER)))))) ORDER BY ((((((((((((((v0.c1)OR(v0.c0)))OR(t1.c0)))OR(t1.c0)))OR(v0.c1)))OR(vt0.c1)))AND(t1.c2)))GLOB(((v0.c2)%(v0.c1)))), TYPEOF((v0.c2 IN ()))  NULLS FIRST, CAST(t1.c1 AS BLOB)  NULLS FIRST LIMIT 0x1;
SELECT MAX(t1.c1) FROM t1 WHERE ((((((((t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1))))AND(((t1.c1) IS TRUE))))OR(((t1.c2)AND(t1.c0)))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE ((((((((t1.c0, t1.c1)) BETWEEN ((t1.c1, t1.c0)) AND ((t1.c1, t1.c1))))AND(((t1.c1) IS TRUE))))OR(((t1.c2)AND(t1.c0)))));
SELECT MIN(t1.c2) FROM t1 WHERE (((((((t1.c1)OR(t1.c2)))AND(t1.c0)))|((t1.c1 IN (t1.c1, t1.c2))))) ORDER BY ((t1.c2 COLLATE RTRIM) NOT BETWEEN (((t1.c0) IS FALSE)) AND (CAST(t1.c2 AS NUMERIC)))  NULLS FIRST;
SELECT DISTINCT MIN(t1.c2) FROM t1 WHERE (((((((t1.c1)OR(t1.c2)))AND(t1.c0)))|((t1.c1 IN (t1.c1, t1.c2))))) ORDER BY ((((t1.c1)LIKE(t1.c2)))IS NOT(CASE WHEN t1.c2 THEN 0.7180238752778422 WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN '' END)), ABS(DISTINCT ((t1.c1)IS NOT(t1.c0)));
SELECT * FROM vt0, v0, t1 WHERE (CASE WHEN ((vt0.c0)!=(t1.c2)) THEN ((((t1.c1)AND(v0.c0)))AND(v0.c1)) ELSE (vt0.c0 IN (v0.c1)) END);
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (CASE WHEN ((vt0.c0)>(t1.c2)) THEN ((((t1.c1)AND(v0.c0)))AND(v0.c1)) ELSE (vt0.c0 IN (v0.c1)) END);
SELECT * FROM vt0, v0, t1 WHERE (CASE WHEN ((vt0.c0)!=(t1.c2)) THEN ((((t1.c1)AND(v0.c0)))AND(v0.c1)) ELSE (vt0.c0 IN (v0.c1)) END);
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (CASE WHEN ((vt0.c0)>(t1.c2)) THEN ((((t1.c1)AND(v0.c0)))AND(v0.c1)) ELSE (vt0.c0 IN (v0.c1)) END);
SELECT MIN(t1.c1) FROM vt0, v0 NATURAL JOIN t1 WHERE (((((v0.c2)LIKE(t1.c1))) NOTNULL)) ORDER BY HEX(DISTINCT ((vt0.c0)+(v0.c2)));
SELECT DISTINCT MIN(t1.c1) FROM vt0, v0 NATURAL JOIN t1 WHERE (((((((v0.c2)LIKE(t1.c1))) NOTNULL))AND((NOT (((t1.c1)/(v0.c1))))))) ORDER BY HEX(DISTINCT ((vt0.c0)+(v0.c2))) LIMIT 1;
SELECT ALL MAX(v0.c1) FROM t1 INNER JOIN v0 ON ((((123613019) IS TRUE)) IS TRUE) CROSS JOIN vt0 ON ((CAST(t1.c1 AS BLOB)) BETWEEN (NULL) AND (t1.c1 COLLATE RTRIM)) WHERE (CAST(((('', v0.c2))=((v0.c0, v0.c0))) AS BLOB)) ORDER BY (~ ((t1.c1 IN (t1.c1)))), ((v0.c2 COLLATE BINARY)AND(((((vt0.c0)OR(vt0.c0)))OR(0x18b83805)))), (((((t1.c1, v0.c0, '-1520699329', v0.c0)) BETWEEN (('%', t1.c0, vt0.c1, t1.c1)) AND ((v0.c1, t1.c1, t1.c2, t1.c1))))IS((('') NOTNULL))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(v0.c1) FROM t1 INNER JOIN v0 ON ((((123613019) IS TRUE)) IS TRUE) CROSS JOIN vt0 ON ((CAST(t1.c1 AS BLOB)) BETWEEN (NULL) AND (t1.c1 COLLATE RTRIM)) WHERE (((CAST(((('', v0.c2))=((v0.c0, v0.c0))) AS BLOB))AND(((-1.675189967E9 IN (v0.c2)) IN ())))) ORDER BY CASE WHEN ((v0.c2) ISNULL) THEN ABS(t1.c1) WHEN (((v0.c0, '#-.', t1.c0, v0.c2))<=((vt0.c1, v0.c1, v0.c2, 0.4593368466223047))) THEN CASE WHEN v0.c0 THEN x'06fc' WHEN v0.c1 THEN vt0.c0 WHEN t1.c1 THEN v0.c2 WHEN v0.c0 THEN t1.c0 WHEN vt0.c0 THEN 'c\q
7	#' ELSE v0.c0 END ELSE ((t1.c0)GLOB(-291337799)) END DESC  NULLS FIRST, CASE WHEN ((831659730) IS FALSE) THEN ((((((v0.c1)OR(v0.c2)))OR(t1.c0)))OR('%Ꭴ')) WHEN ((v0.c0)GLOB(t1.c1)) THEN ((t1.c0)<=(t1.c0)) WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1)!=(vt0.c1)) WHEN (NOT (v0.c0)) THEN ((t1.c2) IS TRUE) WHEN ((t1.c0)IS(vt0.c1)) THEN CASE NULL  WHEN v0.c1 THEN v0.c0 END ELSE ((((t1.c0)OR(t1.c1)))AND(t1.c1)) END  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (+ (CHAR(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC, (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))>=((((vt0.c0)IS NOT(vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1)AND(((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)<=(vt0.c0))))))) ORDER BY (+ (CHAR(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC, (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))>=((((vt0.c0)IS NOT(vt0.c1))))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE NOCASE) ORDER BY (+ (CHAR(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC, (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))>=((((vt0.c0)IS NOT(vt0.c1)))));
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (+ (CHAR(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC, (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))>=((((vt0.c0)IS NOT(vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1)AND(((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)<=(vt0.c0))))))) ORDER BY (+ (CHAR(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC, (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))>=((((vt0.c0)IS NOT(vt0.c1))))) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE NOCASE) ORDER BY (+ (CHAR(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC, (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))>=((((vt0.c0)IS NOT(vt0.c1)))));
SELECT * FROM t1 WHERE (t1.c2);
SELECT ALL * FROM t1 WHERE (((t1.c2)AND((- (CAST(t1.c2 AS BLOB))))));
SELECT * FROM t1 WHERE (t1.c2);
SELECT ALL * FROM t1 WHERE (((t1.c2)AND((- (CAST(t1.c2 AS BLOB))))));
SELECT ALL * FROM v0 WHERE ((NOT ((v0.c2 IN (v0.c2))))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) BETWEEN (TOTAL_CHANGES()) AND ((('*')IS NOT(v0.c1)))) ASC, ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM, v0.c1  NULLS LAST;
SELECT DISTINCT * FROM v0 WHERE ((((NOT ((v0.c2 IN (v0.c2)))))AND(((((((((((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN '}' THEN v0.c0 WHEN v0.c0 THEN v0.c1 ELSE 0Xffffffff9c63a265 END)AND((v0.c1 IN (v0.c2, v0.c0)))))OR(((v0.c1) NOT NULL))))AND(v0.c2 COLLATE RTRIM)))AND(x'3552')))AND(v0.c2 COLLATE BINARY)))AND(json_patch(v0.c1, v0.c1))))AND(((v0.c1)==(v0.c2)))))AND(SQLITE_COMPILEOPTION_USED(v0.c0)))))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) BETWEEN (TOTAL_CHANGES()) AND ((('*')IS NOT(v0.c1)))) ASC, ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM, v0.c1  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0 WHERE ((((v0.c1 COLLATE BINARY))<((CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END)))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) BETWEEN (TOTAL_CHANGES()) AND ((('*')IS NOT(v0.c1)))) ASC, ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM, v0.c1  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((NOT ((v0.c2 IN (v0.c2))))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) BETWEEN (TOTAL_CHANGES()) AND ((('*')IS NOT(v0.c1)))) ASC, ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM, v0.c1  NULLS LAST;
SELECT DISTINCT * FROM v0 WHERE ((((NOT ((v0.c2 IN (v0.c2)))))AND(((((((((((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN '}' THEN v0.c0 WHEN v0.c0 THEN v0.c1 ELSE 0Xffffffff9c63a265 END)AND((v0.c1 IN (v0.c2, v0.c0)))))OR(((v0.c1) NOT NULL))))AND(v0.c2 COLLATE RTRIM)))AND(x'3552')))AND(v0.c2 COLLATE BINARY)))AND(json_patch(v0.c1, v0.c1))))AND(((v0.c1)==(v0.c2)))))AND(SQLITE_COMPILEOPTION_USED(v0.c0)))))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) BETWEEN (TOTAL_CHANGES()) AND ((('*')IS NOT(v0.c1)))) ASC, ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM, v0.c1  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0 WHERE ((((v0.c1 COLLATE BINARY))<((CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END)))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) BETWEEN (TOTAL_CHANGES()) AND ((('*')IS NOT(v0.c1)))) ASC, ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM, v0.c1  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (CAST(CAST(t1.c2 AS TEXT) AS INTEGER)) ORDER BY (+ (((t1.c0)<<(t1.c1))))  NULLS LAST, CAST(CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c0 END AS TEXT) DESC, t1.c1  NULLS LAST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((CAST(CAST(t1.c2 AS TEXT) AS INTEGER))AND(CASE ((t1.c0)*(t1.c2))  WHEN CASE t1.c2  WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c1 ELSE t1.c1 END THEN t1.c2 COLLATE BINARY WHEN ((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(-7.90725355E8)) THEN ((t1.c2)AND(t1.c2)) END))) ORDER BY ((((((((((t1.c2 COLLATE NOCASE)AND(t1.c1)))OR(HEX(DISTINCT t1.c0))))OR(t1.c2)))OR(CAST(0.7287094508110065 AS INTEGER))))AND(LIKE(-1200596157, '1836074277', '0'))) DESC, ((((t1.c0) NOT NULL))==(((((t1.c2)OR(t1.c0)))OR(t1.c1)))) ASC, ((ABS(DISTINCT t1.c0))>>(((t1.c0)<<(t1.c2))));
SELECT * FROM vt0, t1, v0 WHERE ((((((t1.c2, v0.c0))<((vt0.c1, v0.c0)))) BETWEEN (CAST(t1.c0 AS BLOB)) AND (x''))) ORDER BY ((((((((((((vt0.c0) NOT NULL))AND(vt0.c0)))OR(0.06221437653931294)))OR(((t1.c0) IS FALSE))))AND((- (t1.c0)))))OR(((t1.c0) ISNULL)))  NULLS FIRST, (((v0.c1)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((t1.c1)<(vt0.c0))))) ASC  NULLS FIRST;
SELECT * FROM vt0, t1, v0 WHERE ((((((((t1.c2, v0.c0))<((vt0.c1, v0.c0)))) BETWEEN (CAST(t1.c0 AS BLOB)) AND (x'')))AND('-1052937140'))) ORDER BY ((((((((((((vt0.c0) NOT NULL))AND(vt0.c0)))OR(0.06221437653931294)))OR(((t1.c0) IS FALSE))))AND((- (t1.c0)))))OR(((t1.c0) ISNULL)))  NULLS FIRST, (((v0.c1)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((t1.c1)<(vt0.c0))))) ASC  NULLS FIRST INTERSECT SELECT * FROM vt0, t1, v0 WHERE (CASE v0.c2 COLLATE RTRIM  WHEN (v0.c2 IN (v0.c1, v0.c2, 0Xffffffffef90ac44)) THEN v0.c0 COLLATE BINARY ELSE vt0.c1 COLLATE RTRIM END) ORDER BY ((((((((((((vt0.c0) NOT NULL))AND(vt0.c0)))OR(0.06221437653931294)))OR(((t1.c0) IS FALSE))))AND((- (t1.c0)))))OR(((t1.c0) ISNULL)))  NULLS FIRST, (((v0.c1)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((t1.c1)<(vt0.c0))))) ASC  NULLS FIRST;
SELECT * FROM vt0, t1, v0 WHERE ((((((t1.c2, v0.c0))<((vt0.c1, v0.c0)))) BETWEEN (CAST(t1.c0 AS BLOB)) AND (x''))) ORDER BY ((((((((((((vt0.c0) NOT NULL))AND(vt0.c0)))OR(0.06221437653931294)))OR(((t1.c0) IS FALSE))))AND((- (t1.c0)))))OR(((t1.c0) ISNULL)))  NULLS FIRST, (((v0.c1)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((t1.c1)<(vt0.c0))))) ASC  NULLS FIRST;
SELECT * FROM vt0, t1, v0 WHERE ((((((((t1.c2, v0.c0))<((vt0.c1, v0.c0)))) BETWEEN (CAST(t1.c0 AS BLOB)) AND (x'')))AND('-1052937140'))) ORDER BY ((((((((((((vt0.c0) NOT NULL))AND(vt0.c0)))OR(0.06221437653931294)))OR(((t1.c0) IS FALSE))))AND((- (t1.c0)))))OR(((t1.c0) ISNULL)))  NULLS FIRST, (((v0.c1)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((t1.c1)<(vt0.c0))))) ASC  NULLS FIRST INTERSECT SELECT * FROM vt0, t1, v0 WHERE (CASE v0.c2 COLLATE RTRIM  WHEN (v0.c2 IN (v0.c1, v0.c2, 0Xffffffffef90ac44)) THEN v0.c0 COLLATE BINARY ELSE vt0.c1 COLLATE RTRIM END) ORDER BY ((((((((((((vt0.c0) NOT NULL))AND(vt0.c0)))OR(0.06221437653931294)))OR(((t1.c0) IS FALSE))))AND((- (t1.c0)))))OR(((t1.c0) ISNULL)))  NULLS FIRST, (((v0.c1)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((t1.c1)<(vt0.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))AND((((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1))))));
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))AND((((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1)))))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) LIMIT 0x3;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))AND((((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1))))));
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))AND((((vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1)))))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) LIMIT 0x3;
SELECT ALL * FROM v0 WHERE ('崞AZ') ORDER BY CASE WHEN CAST(v0.c1 AS NUMERIC) THEN ((v0.c1)=(v0.c1)) WHEN ((v0.c0) IS FALSE) THEN (v0.c0 IN (v0.c1)) WHEN (v0.c0 IN (v0.c2, v0.c0)) THEN (v0.c0 IN ()) END DESC, (NOT (NULL COLLATE NOCASE))  NULLS LAST, ((('s', '0.4009677301748732')) NOT BETWEEN ((CAST(v0.c1 AS TEXT), (~ (v0.c1)))) AND ((((v0.c1)-(v0.c0)), x'ab')));
SELECT ALL * FROM v0 WHERE ((('崞AZ')AND(((((v0.c1)<(NULL)))>=((NOT (v0.c2))))))) ORDER BY ((((((((((((CAST(v0.c0 AS BLOB))OR(v0.c2)))OR(v0.c1 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END)))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c2)))))OR(v0.c2)))AND((v0.c2 IN ()))), ((((((((v0.c0)AND(v0.c2)))OR(v0.c2)))AND(v0.c0)))AND(v0.c2)) COLLATE BINARY COLLATE NOCASE DESC LIMIT 1 INTERSECT SELECT * FROM v0 WHERE ((((- (v0.c1)))+((NOT (v0.c1))))) ORDER BY ((((((((((((CAST(v0.c0 AS BLOB))OR(v0.c2)))OR(v0.c1 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END)))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c2)))))OR(v0.c2)))AND((v0.c2 IN ()))), ((((((((v0.c0)AND(v0.c2)))OR(v0.c2)))AND(v0.c0)))AND(v0.c2)) COLLATE BINARY COLLATE NOCASE DESC LIMIT 1;
SELECT ALL * FROM v0 WHERE ('崞AZ') ORDER BY CASE WHEN CAST(v0.c1 AS NUMERIC) THEN ((v0.c1)=(v0.c1)) WHEN ((v0.c0) IS FALSE) THEN (v0.c0 IN (v0.c1)) WHEN (v0.c0 IN (v0.c2, v0.c0)) THEN (v0.c0 IN ()) END DESC, (NOT (NULL COLLATE NOCASE))  NULLS LAST, ((('s', '0.4009677301748732')) NOT BETWEEN ((CAST(v0.c1 AS TEXT), (~ (v0.c1)))) AND ((((v0.c1)-(v0.c0)), x'ab')));
SELECT ALL * FROM v0 WHERE ((('崞AZ')AND(((((v0.c1)<(NULL)))>=((NOT (v0.c2))))))) ORDER BY ((((((((((((CAST(v0.c0 AS BLOB))OR(v0.c2)))OR(v0.c1 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END)))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c2)))))OR(v0.c2)))AND((v0.c2 IN ()))), ((((((((v0.c0)AND(v0.c2)))OR(v0.c2)))AND(v0.c0)))AND(v0.c2)) COLLATE BINARY COLLATE NOCASE DESC LIMIT 1 INTERSECT SELECT * FROM v0 WHERE ((((- (v0.c1)))+((NOT (v0.c1))))) ORDER BY ((((((((((((CAST(v0.c0 AS BLOB))OR(v0.c2)))OR(v0.c1 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END)))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c2)))))OR(v0.c2)))AND((v0.c2 IN ()))), ((((((((v0.c0)AND(v0.c2)))OR(v0.c2)))AND(v0.c0)))AND(v0.c2)) COLLATE BINARY COLLATE NOCASE DESC LIMIT 1;
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN ((+ (v0.c1))) AND ((((vt0.c1, v0.c0, v0.c1))!=((v0.c1, NULL, t1.c1)))))) ORDER BY t1.c0 COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (((((CAST(v0.c0 AS REAL)) NOT BETWEEN ((+ (v0.c1))) AND ((((vt0.c1, v0.c0, v0.c1))<>((v0.c1, NULL, t1.c1))))))AND(((((- (vt0.c1))))!=((((v0.c0)>>(t1.c1)))))))) ORDER BY t1.c0 COLLATE NOCASE ASC;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) NOTNULL)) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS REAL);
SELECT MAX(vt0.c1) FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) NOTNULL))AND((LTRIM(vt0.c1, vt0.c0) IN ())))) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS REAL);
SELECT * FROM t1, vt0, v0 WHERE ((+ ((((v0.c0, NULL, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c2)) AND ((t1.c2, v0.c2, t1.c0)))))) ORDER BY v0.c2  NULLS FIRST;
SELECT * FROM t1, vt0, v0 WHERE ((((+ ((((v0.c0, NULL, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c2)) AND ((t1.c2, v0.c2, t1.c0))))))AND(((((((v0.c0)AND(v0.c0)))AND(t1.c0)))AND(vt0.c1)) COLLATE RTRIM))) ORDER BY CAST((+ (t1.c0)) AS REAL)  NULLS LAST, (json_array_length(t1.c2) IN (NULL, CAST(t1.c1 AS BLOB))) DESC  NULLS LAST;
SELECT * FROM t1, vt0, v0 WHERE ((+ ((((v0.c0, NULL, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c2)) AND ((t1.c2, v0.c2, t1.c0)))))) ORDER BY v0.c2  NULLS FIRST;
SELECT * FROM t1, vt0, v0 WHERE ((((+ ((((v0.c0, NULL, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0, t1.c2)) AND ((t1.c2, v0.c2, t1.c0))))))AND(((((((v0.c0)AND(v0.c0)))AND(t1.c0)))AND(vt0.c1)) COLLATE RTRIM))) ORDER BY CAST((+ (t1.c0)) AS REAL)  NULLS LAST, (json_array_length(t1.c2) IN (NULL, CAST(t1.c1 AS BLOB))) DESC  NULLS LAST;
SELECT ALL * FROM t1, vt0, v0 WHERE (NULL) ORDER BY ((((vt0.c0) NOT BETWEEN (t1.c0) AND (v0.c0))) NOTNULL);
SELECT * FROM t1, vt0, v0 WHERE (((NULL)AND((CASE WHEN vt0.c1 THEN t1.c0 ELSE t1.c0 END IN (vt0.c1))))) ORDER BY ((((vt0.c0) NOT BETWEEN (t1.c0) AND (v0.c0))) NOTNULL) LIMIT 0X1 INTERSECT SELECT ALL * FROM t1, vt0, v0 WHERE (((((v0.c2) NOT BETWEEN (t1.c2) AND (x'c354'))) BETWEEN ((~ (t1.c1))) AND (((vt0.c1)||(v0.c2))))) ORDER BY ((((vt0.c0) NOT BETWEEN (t1.c0) AND (v0.c0))) NOTNULL) LIMIT 0x1;
SELECT ALL * FROM t1, vt0, v0 WHERE (NULL) ORDER BY ((((vt0.c0) NOT BETWEEN (t1.c0) AND (v0.c0))) NOTNULL);
SELECT * FROM t1, vt0, v0 WHERE (((NULL)AND((CASE WHEN vt0.c1 THEN t1.c0 ELSE t1.c0 END IN (vt0.c1))))) ORDER BY ((((vt0.c0) NOT BETWEEN (t1.c0) AND (v0.c0))) NOTNULL) LIMIT 0X1 INTERSECT SELECT ALL * FROM t1, vt0, v0 WHERE (((((v0.c2) NOT BETWEEN (t1.c2) AND (x'c354'))) BETWEEN ((~ (t1.c1))) AND (((vt0.c1)||(v0.c2))))) ORDER BY ((((vt0.c0) NOT BETWEEN (t1.c0) AND (v0.c0))) NOTNULL) LIMIT 0x1;
SELECT COUNT(*) FROM v0 WHERE (SQLITE_VERSION() COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE (((SQLITE_VERSION() COLLATE NOCASE)AND(v0.c2))) INTERSECT SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2))) IS FALSE));
SELECT ALL MIN(v0.c1) FROM v0, t1 WHERE (CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (v0.c0)) AS BLOB)) ORDER BY ((LIKELIHOOD(x'4d029879', t1.c2)) BETWEEN ((v0.c2 IN (t1.c2))) AND ((v0.c1 IN (t1.c0, t1.c2))))  NULLS LAST;
SELECT DISTINCT MIN(v0.c1) FROM v0, t1 NOT INDEXED WHERE (((CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (v0.c0)) AS BLOB))AND(t1.c2))) ORDER BY ((x'd7') BETWEEN (t1.c2) AND (((v0.c2)IS NOT(v0.c1)))) ASC;
SELECT ALL MIN(v0.c1) FROM v0, vt0 WHERE (vt0.c1) ORDER BY ((vt0.c1) ISNULL) ASC  NULLS FIRST, CASE WHEN '9G' THEN ((vt0.c1)>(v0.c1)) WHEN (('1092579787')>>(vt0.c1)) THEN ((v0.c0) IS TRUE) END, CASE WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE ((NULL) IS FALSE) END;
SELECT MIN(v0.c1) FROM v0, vt0 WHERE (((vt0.c1)AND((((((((v0.c0))!=((vt0.c1))))AND(CAST(NULL AS NUMERIC))))AND((- (v0.c0))))))) ORDER BY ((+ (v0.c0)) IN ((v0.c0 IN ())))  NULLS LAST;
SELECT ALL MAX(vt0.c1) FROM vt0, v0, t1 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE)) ORDER BY (UNLIKELY(DISTINCT v0.c1) IN ((v0.c2 IN (t1.c2, x'6a')), ((v0.c1)&(t1.c2))));
SELECT ALL MAX(vt0.c1) FROM vt0, v0, t1 WHERE (((((vt0.c1 COLLATE BINARY) IS FALSE))AND(((((vt0.c1)<>(v0.c0)))&(t1.c0 COLLATE BINARY))))) ORDER BY v0.c2 DESC  NULLS LAST, ((((t1.c1)+(vt0.c1)))IS NOT(((((((NULL)OR(vt0.c1)))OR(v0.c1)))AND(t1.c0)))) DESC  NULLS FIRST, (LIKELY(v0.c2) IN ((((t1.c1, v0.c2, v0.c1, v0.c2, vt0.c1))=((v0.c1, t1.c1, v0.c2, vt0.c1, vt0.c0))), CAST(0.8664428603102395 AS INTEGER)))  NULLS FIRST LIMIT 0;
SELECT ALL MIN(vt0.c0) FROM v0, vt0 INNER JOIN t1 ON (((~ (v0.c2))) BETWEEN ('1') AND (((v0.c1)<(1891954482)))) WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0))) COLLATE RTRIM);
SELECT DISTINCT MIN(vt0.c0) FROM v0, vt0 INNER JOIN t1 ON (((~ (v0.c2))) BETWEEN ('1') AND (((v0.c1)<(0x70c4ef32)))) WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0))) COLLATE RTRIM)AND(v0.c2))) INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM v0, vt0 INNER JOIN t1 ON (((~ (v0.c2))) BETWEEN ('1') AND (((v0.c1)<(1891954482)))) WHERE (((((t1.c2))<(('	>\'''))) IN ()));
SELECT ALL * FROM v0, vt0, t1 WHERE (((TOTAL_CHANGES())AND(x'abc889')));
SELECT ALL * FROM v0, vt0, t1 WHERE (((TOTAL_CHANGES())AND(x'abc889'))) ORDER BY (((((v0.c1)IS(t1.c1)), v0.c2 COLLATE NOCASE))>=(((v0.c2 IN ()), (((v0.c1, vt0.c0, t1.c0, t1.c2))<=((t1.c2, v0.c2, t1.c0, vt0.c1)))))) DESC, ((TRIM(DISTINCT t1.c0)) NOT BETWEEN ((((vt0.c0, t1.c0)) BETWEEN ((t1.c1, v0.c2)) AND ((t1.c0, v0.c0)))) AND (t1.c2))  NULLS FIRST LIMIT 2;
SELECT ALL * FROM v0, vt0, t1 WHERE (((TOTAL_CHANGES())AND(x'abc889')));
SELECT ALL * FROM v0, vt0, t1 WHERE (((TOTAL_CHANGES())AND(x'abc889'))) ORDER BY (((((v0.c1)IS(t1.c1)), v0.c2 COLLATE NOCASE))>=(((v0.c2 IN ()), (((v0.c1, vt0.c0, t1.c0, t1.c2))<=((t1.c2, v0.c2, t1.c0, vt0.c1)))))) DESC, ((TRIM(DISTINCT t1.c0)) NOT BETWEEN ((((vt0.c0, t1.c0)) BETWEEN ((t1.c1, v0.c2)) AND ((t1.c0, v0.c0)))) AND (t1.c2))  NULLS FIRST LIMIT 2;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN LTRIM(v0.c2, v0.c2) THEN v0.c0 COLLATE RTRIM ELSE CASE v0.c2  WHEN NULL THEN v0.c2 END END) ORDER BY v0.c1 COLLATE BINARY DESC, CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END COLLATE RTRIM DESC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM v0 WHERE (((CASE WHEN LTRIM(v0.c2, v0.c2) THEN v0.c0 COLLATE RTRIM ELSE CASE v0.c2  WHEN NULL THEN v0.c2 END END)AND(v0.c2 COLLATE BINARY))) ORDER BY CAST(v0.c1 AS NUMERIC), ((v0.c0)IS(((((v0.c0)OR(v0.c1)))AND(v0.c2)))), (+ ((+ (v0.c0)))) ASC INTERSECT SELECT DISTINCT COUNT(*) FROM v0 WHERE (((((v0.c2) IS TRUE))AND(((0xffffffffbe12dcdb) NOT BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY CAST(v0.c1 AS NUMERIC), ((v0.c0)IS(((((v0.c0)OR(v0.c1)))AND(v0.c2)))), (+ ((+ (v0.c0)))) ASC;
SELECT ALL MIN(t1.c1) FROM vt0, v0, t1 WHERE (vt0.c1);
SELECT MIN(t1.c1) FROM vt0, v0, t1 WHERE (((vt0.c1)AND(((((- (vt0.c1)), ((v0.c0) IS FALSE), CAST(t1.c1 AS TEXT)))>=(((t1.c1 IN (t1.c2)), ((((t1.c2)AND(x'')))AND(v0.c1)), v0.c0 COLLATE BINARY)))))) INTERSECT SELECT ALL MIN(t1.c1) FROM vt0, v0, t1 WHERE ((((((((((('-655150429')AND(t1.c2)))AND(NULL)))AND(x'')))AND(v0.c1)))IS NOT(CAST(v0.c0 AS INTEGER))));
SELECT * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))))) ORDER BY CASE WHEN (('xiJ') NOT NULL) THEN vt0.c1 COLLATE RTRIM ELSE CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END  NULLS FIRST INTERSECT SELECT ALL * FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c0))) IS TRUE)) ORDER BY CASE WHEN (('xiJ') NOT NULL) THEN vt0.c1 COLLATE RTRIM ELSE CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END  NULLS FIRST;
SELECT * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))))) ORDER BY CASE WHEN (('xiJ') NOT NULL) THEN vt0.c1 COLLATE RTRIM ELSE CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END  NULLS FIRST INTERSECT SELECT ALL * FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c0))) IS TRUE)) ORDER BY CASE WHEN (('xiJ') NOT NULL) THEN vt0.c1 COLLATE RTRIM ELSE CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (t1.c0) ORDER BY (((((((((((((('1785187513') ISNULL))AND((('^TP') NOT NULL))))OR(CASE -1121136854  WHEN t1.c2 THEN '-651510741' WHEN t1.c1 THEN t1.c2 WHEN NULL THEN t1.c2 WHEN t1.c2 THEN t1.c1 ELSE vt0.c0 END)))OR(((t1.c1) IS FALSE))))AND((-782663409 IN ()))))AND(v0.c0)))AND(x''))  NULLS LAST, v0.c0;
SELECT DISTINCT COUNT(*) FROM v0, vt0, t1 WHERE (t1.c0) ORDER BY x''  NULLS LAST, CASE ((vt0.c1)-(v0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN t1.c2 COLLATE RTRIM WHEN CAST(t1.c0 AS INTEGER) THEN TYPEOF(v0.c2) WHEN (((vt0.c0))<=((t1.c2))) THEN ((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) END INTERSECT SELECT DISTINCT COUNT(*) FROM v0, vt0, t1 WHERE (CAST(((vt0.c0) NOT BETWEEN (t1.c1) AND (v0.c2)) AS NUMERIC)) ORDER BY x''  NULLS LAST, CASE ((vt0.c1)-(v0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN t1.c2 COLLATE RTRIM WHEN CAST(t1.c0 AS INTEGER) THEN TYPEOF(v0.c2) WHEN (((vt0.c0))<=((t1.c2))) THEN ((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) END;
SELECT ALL MIN(v0.c0) FROM vt0 INNER JOIN v0 ON (vt0.c0 IN ()) COLLATE NOCASE WHERE (((((((CASE WHEN vt0.c1 THEN v0.c2 ELSE v0.c1 END)AND(((v0.c0)||(v0.c2)))))AND(CASE WHEN v0.c2 THEN v0.c0 END)))OR(v0.c0 COLLATE RTRIM)));
SELECT MIN(v0.c0) FROM vt0 INNER JOIN v0 ON (vt0.c0 IN ()) COLLATE NOCASE WHERE (((((((CASE WHEN vt0.c1 THEN v0.c2 ELSE v0.c1 END)AND(((v0.c0)||(v0.c2)))))AND(CASE WHEN v0.c2 THEN v0.c0 END)))OR(v0.c0 COLLATE RTRIM))) LIMIT 2;
SELECT MIN(vt0.c1) FROM vt0 WHERE (NULLIF((((vt0.c1, vt0.c0, vt0.c0))==((vt0.c0, x'', vt0.c1))), vt0.c0 COLLATE RTRIM)) ORDER BY CAST(vt0.c1 AS NUMERIC) COLLATE BINARY ASC, ((LAST_INSERT_ROWID())-(((vt0.c1)IS NOT(NULL))))  NULLS LAST, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))|(((((((((((vt0.c1)AND(vt0.c0)))AND(NULL)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT MIN(vt0.c1) FROM vt0 WHERE (((NULLIF((((vt0.c1, vt0.c0, vt0.c0))==((vt0.c0, x'', vt0.c1))), vt0.c0 COLLATE RTRIM))AND(CAST(vt0.c0 AS REAL) COLLATE BINARY))) ORDER BY ((((vt0.c0)<=(NULL)))>>(((vt0.c1) BETWEEN (vt0.c0) AND ('1367218928')))), CAST(vt0.c0 AS TEXT) LIMIT 0x0 INTERSECT SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (x'') ORDER BY ((((vt0.c0)<=(NULL)))>>(((vt0.c1) BETWEEN (vt0.c0) AND ('1367218928')))), CAST(vt0.c0 AS TEXT) LIMIT 0X0;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)*(vt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c1)>(vt0.c0)) COLLATE RTRIM COLLATE BINARY;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)*(vt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c1)>(vt0.c0)) COLLATE RTRIM COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0, t1 CROSS JOIN vt0 ON (((- (v0.c2)))IS NOT((~ (v0.c0)))) WHERE (x'1fbe') ORDER BY ((((((t1.c2)OR(((((vt0.c1)AND(v0.c1)))AND(t1.c0)))))AND(rtreenode(t1.c2, t1.c1))))AND(CAST(v0.c2 AS INTEGER))) ASC, UNLIKELY('W#C')  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t1 CROSS JOIN vt0 ON (((- (v0.c2)))IS NOT((~ (v0.c0)))) WHERE (((x'1fbe')AND(CAST(CAST(t1.c1 AS NUMERIC) AS TEXT)))) ORDER BY (((- (t1.c1)))>>(((v0.c2) ISNULL))) DESC  NULLS FIRST, CASE WHEN ((v0.c1) ISNULL) THEN ((x'36') BETWEEN (vt0.c0) AND (v0.c2)) ELSE (((v0.c2, v0.c2))<>((t1.c2, v0.c0))) END DESC, CASE (+ (v0.c2))  WHEN (v0.c1 IN (v0.c2)) THEN v0.c2 COLLATE NOCASE WHEN ((t1.c1)<<(v0.c1)) THEN ((0.35308833109567384) BETWEEN (t1.c1) AND (vt0.c1)) END;
SELECT * FROM t1 WHERE (((CASE t1.c2  WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c2 END)=(t1.c0 COLLATE BINARY))) ORDER BY t1.c0 ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((CASE t1.c2  WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c2 END)==(t1.c0 COLLATE BINARY)))AND(CASE ((t1.c0) BETWEEN (t1.c1) AND (t1.c2))  WHEN NULL COLLATE BINARY THEN ((t1.c1) IS TRUE) WHEN (((t1.c2, t1.c2, t1.c0))==((t1.c0, t1.c2, t1.c1))) THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END WHEN t1.c2 THEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END WHEN t1.c1 COLLATE RTRIM THEN CASE t1.c1  WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN x'' WHEN t1.c2 THEN '' ELSE t1.c1 END ELSE (~ (t1.c1)) END))) ORDER BY t1.c1 ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((t1.c2, t1.c1, t1.c0, t1.c0, t1.c1, t1.c2)) NOT BETWEEN (('70346026', t1.c1, t1.c1, t1.c2, t1.c0, t1.c2)) AND ((t1.c1, x'', t1.c2, t1.c2, t1.c2, t1.c0)))))>=((((t1.c1) IS TRUE))))) ORDER BY t1.c1 ASC;
SELECT * FROM t1 WHERE (((CASE t1.c2  WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c2 END)=(t1.c0 COLLATE BINARY))) ORDER BY t1.c0 ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((CASE t1.c2  WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c2 END)==(t1.c0 COLLATE BINARY)))AND(CASE ((t1.c0) BETWEEN (t1.c1) AND (t1.c2))  WHEN NULL COLLATE BINARY THEN ((t1.c1) IS TRUE) WHEN (((t1.c2, t1.c2, t1.c0))==((t1.c0, t1.c2, t1.c1))) THEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END WHEN t1.c2 THEN CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END WHEN t1.c1 COLLATE RTRIM THEN CASE t1.c1  WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN x'' WHEN t1.c2 THEN '' ELSE t1.c1 END ELSE (~ (t1.c1)) END))) ORDER BY t1.c1 ASC INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((t1.c2, t1.c1, t1.c0, t1.c0, t1.c1, t1.c2)) NOT BETWEEN (('70346026', t1.c1, t1.c1, t1.c2, t1.c0, t1.c2)) AND ((t1.c1, x'', t1.c2, t1.c2, t1.c2, t1.c0)))))>=((((t1.c1) IS TRUE))))) ORDER BY t1.c1 ASC;
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))<>((((t1.c1, t1.c2))>=((t1.c1, t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))<((((t1.c1, t1.c2))>=((t1.c1, t1.c1)))))) ORDER BY (((((((((((0x1c25c0d4 IN ()))OR(CAST(t1.c2 AS TEXT))))AND(((t1.c2) BETWEEN (t1.c1) AND (t1.c1)))))OR(((t1.c2) BETWEEN (x'b31371') AND (t1.c0)))))OR(x'0118')))AND(CASE 'N-'  WHEN 0.09535373934487423 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE NULL END)) DESC, ((((t1.c1 COLLATE NOCASE)OR(TYPEOF(DISTINCT t1.c0))))OR(CAST(t1.c1 AS REAL))) LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))<>((((t1.c1, t1.c2))>=((t1.c1, t1.c1))))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))<((((t1.c1, t1.c2))>=((t1.c1, t1.c1)))))) ORDER BY (((((((((((0x1c25c0d4 IN ()))OR(CAST(t1.c2 AS TEXT))))AND(((t1.c2) BETWEEN (t1.c1) AND (t1.c1)))))OR(((t1.c2) BETWEEN (x'b31371') AND (t1.c0)))))OR(x'0118')))AND(CASE 'N-'  WHEN 0.09535373934487423 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE NULL END)) DESC, ((((t1.c1 COLLATE NOCASE)OR(TYPEOF(DISTINCT t1.c0))))OR(CAST(t1.c1 AS REAL))) LIMIT 0X0;
SELECT MAX(t1.c1) FROM t1 WHERE (((((((((((((((t1.c2)AND(t1.c2)))AND(t1.c0)))OR(t1.c0)))OR((x'' IN (t1.c1, t1.c1)))))AND(CAST(t1.c0 AS BLOB))))AND(t1.c1 COLLATE BINARY)))OR(((((t1.c1)AND(t1.c1)))AND(t1.c0))))) ORDER BY t1.c2 DESC;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((((((((((t1.c2)AND(t1.c2)))AND(t1.c0)))OR(t1.c0)))OR((x'' IN (t1.c1, t1.c1)))))AND(CAST(t1.c0 AS BLOB))))AND(t1.c1 COLLATE BINARY)))OR(((((t1.c1)AND(t1.c1)))AND(t1.c0))))) ORDER BY t1.c2 DESC;
SELECT * FROM v0 LEFT OUTER JOIN t1 ON ((CASE v0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c1 END)|((NOT (v0.c2)))) LEFT OUTER JOIN vt0 ON (((vt0.c1))<((((vt0.c0) BETWEEN (v0.c2) AND (t1.c1))))) WHERE (CAST((+ (t1.c0)) AS BLOB)) ORDER BY ((((((v0.c1)AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)))AND(t1.c2)))OR(t1.c1 COLLATE NOCASE)) DESC  NULLS LAST, (('b./dr' COLLATE RTRIM)>((((vt0.c1, t1.c1)) BETWEEN ((vt0.c0, 0.05952080958023276)) AND ((vt0.c1, t1.c2))))) ASC  NULLS FIRST;
SELECT * FROM v0 INNER JOIN t1 ON ((CASE v0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c1 END)|((NOT (v0.c2)))) LEFT OUTER JOIN vt0 ON (((vt0.c1))<((((vt0.c0) BETWEEN (v0.c2) AND (t1.c1))))) WHERE (((CAST((+ (t1.c0)) AS BLOB))AND(((t1.c0 COLLATE NOCASE) BETWEEN ((NOT (v0.c1))) AND (((v0.c1) BETWEEN (t1.c1) AND (t1.c1))))))) ORDER BY t1.c2 LIMIT 0x1;
SELECT * FROM v0 LEFT OUTER JOIN t1 ON ((CASE v0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c1 END)|((NOT (v0.c2)))) LEFT OUTER JOIN vt0 ON (((vt0.c1))<((((vt0.c0) BETWEEN (v0.c2) AND (t1.c1))))) WHERE (CAST((+ (t1.c0)) AS BLOB)) ORDER BY ((((((v0.c1)AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)))AND(t1.c2)))OR(t1.c1 COLLATE NOCASE)) DESC  NULLS LAST, (('b./dr' COLLATE RTRIM)>((((vt0.c1, t1.c1)) BETWEEN ((vt0.c0, 0.05952080958023276)) AND ((vt0.c1, t1.c2))))) ASC  NULLS FIRST;
SELECT * FROM v0 INNER JOIN t1 ON ((CASE v0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c1 END)|((NOT (v0.c2)))) LEFT OUTER JOIN vt0 ON (((vt0.c1))<((((vt0.c0) BETWEEN (v0.c2) AND (t1.c1))))) WHERE (((CAST((+ (t1.c0)) AS BLOB))AND(((t1.c0 COLLATE NOCASE) BETWEEN ((NOT (v0.c1))) AND (((v0.c1) BETWEEN (t1.c1) AND (t1.c1))))))) ORDER BY t1.c2 LIMIT 0x1;
SELECT * FROM t1 WHERE ((- ((((x'', t1.c2, 0.26543595073968973)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c2))))));
SELECT * FROM t1 WHERE ((((- ((((x'', t1.c2, 0.26543595073968973)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c2))))))AND(NULL))) ORDER BY CASE t1.c2 COLLATE NOCASE  WHEN (((t1.c2))==((t1.c0))) THEN CHANGES() WHEN 'w9z|' THEN (((t1.c0, t1.c2))<=((t1.c0, t1.c2))) END DESC;
SELECT * FROM t1 WHERE ((- ((((x'', t1.c2, 0.26543595073968973)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c2))))));
SELECT * FROM t1 WHERE ((((- ((((x'', t1.c2, 0.26543595073968973)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c0, t1.c2))))))AND(NULL))) ORDER BY CASE t1.c2 COLLATE NOCASE  WHEN (((t1.c2))==((t1.c0))) THEN CHANGES() WHEN 'w9z|' THEN (((t1.c0, t1.c2))<=((t1.c0, t1.c2))) END DESC;
SELECT MIN(vt0.c1) FROM t1, vt0, v0 WHERE (t1.c0);
SELECT MIN(vt0.c1) FROM t1, vt0, v0 WHERE (t1.c0);
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOT NULL)) ORDER BY 0xffffffffbfa2c8ae DESC;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOT NULL)) ORDER BY -1079850834 DESC LIMIT 2 INTERSECT SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER))OR(((t1.c2) IS TRUE))))OR((t1.c1 IN (t1.c1))))) ORDER BY 0xffffffffbfa2c8ae DESC LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOT NULL)) ORDER BY 0xffffffffbfa2c8ae DESC;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOT NULL)) ORDER BY -1079850834 DESC LIMIT 2 INTERSECT SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER))OR(((t1.c2) IS TRUE))))OR((t1.c1 IN (t1.c1))))) ORDER BY 0xffffffffbfa2c8ae DESC LIMIT 0x2;
SELECT ALL MIN(v0.c1) FROM v0, vt0, t1 WHERE (((NOT (v0.c1)) IN ((+ (vt0.c1))))) ORDER BY NULL  NULLS LAST;
SELECT DISTINCT MIN(v0.c1) FROM v0, vt0, t1 WHERE (((NOT (v0.c1)) IN ((+ (vt0.c1))))) ORDER BY (((~ (v0.c2)))>((v0.c2 IN ()))) ASC  NULLS FIRST, ((CASE WHEN t1.c2 THEN t1.c1 WHEN v0.c0 THEN t1.c0 ELSE 'X(tN!' END)AND((((t1.c1, v0.c2)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((vt0.c1, t1.c2))))) DESC  NULLS LAST LIMIT 0x2;
SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c1)*(vt0.c1)), ((vt0.c0)==(vt0.c1)))) AND ((((vt0.c1)&(vt0.c1)), (vt0.c1 IN ()), ((vt0.c0)|(vt0.c0))))));
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c1)*(vt0.c1)), ((vt0.c0)>=(vt0.c1)))) AND ((((vt0.c1)&(vt0.c1)), (vt0.c1 IN ()), ((vt0.c0)|(vt0.c0))))))AND(CASE WHEN (((vt0.c0, '-2115288607'))>=((vt0.c0, vt0.c1))) THEN ((vt0.c1)IS(vt0.c1)) ELSE vt0.c0 END))) LIMIT 0x2;
SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c1)*(vt0.c1)), ((vt0.c0)==(vt0.c1)))) AND ((((vt0.c1)&(vt0.c1)), (vt0.c1 IN ()), ((vt0.c0)|(vt0.c0))))));
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c1)*(vt0.c1)), ((vt0.c0)>=(vt0.c1)))) AND ((((vt0.c1)&(vt0.c1)), (vt0.c1 IN ()), ((vt0.c0)|(vt0.c0))))))AND(CASE WHEN (((vt0.c0, '-2115288607'))>=((vt0.c0, vt0.c1))) THEN ((vt0.c1)IS(vt0.c1)) ELSE vt0.c0 END))) LIMIT 0x2;
SELECT ALL * FROM v0 WHERE ((((~ (v0.c1))) NOT NULL)) ORDER BY CASE (x'' IN (v0.c2, v0.c0))  WHEN UNLIKELY(NULL) THEN '-1715543069' WHEN CASE WHEN v0.c2 THEN 0X34e41264 WHEN v0.c2 THEN v0.c0 END THEN (v0.c2 IN (v0.c1, v0.c1)) WHEN ((v0.c2) IS FALSE) THEN PRINTF(v0.c0) WHEN CAST(v0.c0 AS TEXT) THEN NULL ELSE CAST(v0.c1 AS INTEGER) END DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((~ (v0.c1))) NOT NULL)) ORDER BY CASE (x'' IN (v0.c2, v0.c0))  WHEN UNLIKELY(NULL) THEN '-1715543069' WHEN CASE WHEN v0.c2 THEN 887362148 WHEN v0.c2 THEN v0.c0 END THEN (v0.c2 IN (v0.c1, v0.c1)) WHEN ((v0.c2) IS FALSE) THEN PRINTF(v0.c0) WHEN CAST(v0.c0 AS TEXT) THEN NULL ELSE CAST(v0.c1 AS INTEGER) END DESC  NULLS FIRST INTERSECT SELECT * FROM v0 WHERE (HEX(CAST(v0.c1 AS REAL))) ORDER BY CASE (x'' IN (v0.c2, v0.c0))  WHEN UNLIKELY(NULL) THEN '-1715543069' WHEN CASE WHEN v0.c2 THEN 0x34e41264 WHEN v0.c2 THEN v0.c0 END THEN (v0.c2 IN (v0.c1, v0.c1)) WHEN ((v0.c2) IS FALSE) THEN PRINTF(v0.c0) WHEN CAST(v0.c0 AS TEXT) THEN NULL ELSE CAST(v0.c1 AS INTEGER) END DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((~ (v0.c1))) NOT NULL)) ORDER BY CASE (x'' IN (v0.c2, v0.c0))  WHEN UNLIKELY(NULL) THEN '-1715543069' WHEN CASE WHEN v0.c2 THEN 0X34e41264 WHEN v0.c2 THEN v0.c0 END THEN (v0.c2 IN (v0.c1, v0.c1)) WHEN ((v0.c2) IS FALSE) THEN PRINTF(v0.c0) WHEN CAST(v0.c0 AS TEXT) THEN NULL ELSE CAST(v0.c1 AS INTEGER) END DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((~ (v0.c1))) NOT NULL)) ORDER BY CASE (x'' IN (v0.c2, v0.c0))  WHEN UNLIKELY(NULL) THEN '-1715543069' WHEN CASE WHEN v0.c2 THEN 887362148 WHEN v0.c2 THEN v0.c0 END THEN (v0.c2 IN (v0.c1, v0.c1)) WHEN ((v0.c2) IS FALSE) THEN PRINTF(v0.c0) WHEN CAST(v0.c0 AS TEXT) THEN NULL ELSE CAST(v0.c1 AS INTEGER) END DESC  NULLS FIRST INTERSECT SELECT * FROM v0 WHERE (HEX(CAST(v0.c1 AS REAL))) ORDER BY CASE (x'' IN (v0.c2, v0.c0))  WHEN UNLIKELY(NULL) THEN '-1715543069' WHEN CASE WHEN v0.c2 THEN 0x34e41264 WHEN v0.c2 THEN v0.c0 END THEN (v0.c2 IN (v0.c1, v0.c1)) WHEN ((v0.c2) IS FALSE) THEN PRINTF(v0.c0) WHEN CAST(v0.c0 AS TEXT) THEN NULL ELSE CAST(v0.c1 AS INTEGER) END DESC  NULLS FIRST;
SELECT ALL * FROM t1 CROSS JOIN v0 ON vt0.c0 INNER JOIN vt0 ON '1187604959' WHERE (((v0.c1 COLLATE BINARY)<(NULL))) ORDER BY CASE CASE WHEN v0.c0 THEN '*7sL_b' WHEN t1.c1 THEN t1.c2 ELSE v0.c0 END  WHEN TRIM(t1.c2) THEN COALESCE(vt0.c1, v0.c0, t1.c0) WHEN ((t1.c0) NOT BETWEEN (v0.c0) AND (t1.c1)) THEN (NOT (v0.c2)) WHEN (((v0.c0, vt0.c0, x'8d'))>=((v0.c1, 0xffffffffbc4b909a, t1.c2))) THEN (((v0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c1))) END DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON vt0.c0 INNER JOIN vt0 ON '1187604959' WHERE (((v0.c1 COLLATE BINARY)<(NULL))) ORDER BY (((v0.c1)) NOT BETWEEN (((v0.c1 IN (v0.c0, vt0.c1)))) AND ((((t1.c2)*(v0.c1))))) ASC, CAST(CASE t1.c1  WHEN v0.c0 THEN vt0.c0 END AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM t1 CROSS JOIN v0 ON vt0.c0 INNER JOIN vt0 ON '1187604959' WHERE (((v0.c1 COLLATE BINARY)<(NULL))) ORDER BY CASE CASE WHEN v0.c0 THEN '*7sL_b' WHEN t1.c1 THEN t1.c2 ELSE v0.c0 END  WHEN TRIM(t1.c2) THEN COALESCE(vt0.c1, v0.c0, t1.c0) WHEN ((t1.c0) NOT BETWEEN (v0.c0) AND (t1.c1)) THEN (NOT (v0.c2)) WHEN (((v0.c0, vt0.c0, x'8d'))>=((v0.c1, 0xffffffffbc4b909a, t1.c2))) THEN (((v0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c1))) END DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON vt0.c0 INNER JOIN vt0 ON '1187604959' WHERE (((v0.c1 COLLATE BINARY)<(NULL))) ORDER BY (((v0.c1)) NOT BETWEEN (((v0.c1 IN (v0.c0, vt0.c1)))) AND ((((t1.c2)*(v0.c1))))) ASC, CAST(CASE t1.c1  WHEN v0.c0 THEN vt0.c0 END AS INTEGER)  NULLS FIRST;
SELECT MIN(vt0.c0) FROM v0, vt0, t1 WHERE (((CAST('-790725355' AS INTEGER)) ISNULL)) ORDER BY CAST(((NULL)<>(t1.c1)) AS BLOB)  NULLS LAST;
SELECT DISTINCT MIN(vt0.c0) FROM v0, vt0, t1 WHERE (((CAST('-790725355' AS INTEGER)) ISNULL)) ORDER BY (((x'')) NOT BETWEEN ((((t1.c0)+(t1.c1)))) AND ((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST LIMIT 1;
SELECT * FROM t1, vt0 WHERE (vt0.c1) ORDER BY (((((((((vt0.c0 IN (vt0.c0, t1.c1)))OR(((t1.c0)|(vt0.c1)))))AND((~ (vt0.c0)))))OR(((t1.c1) IS FALSE))))AND((NOT (vt0.c1)))) ASC;
SELECT * FROM t1, vt0 WHERE (((vt0.c1)AND(''))) ORDER BY (((((((((vt0.c0 IN (vt0.c0, t1.c1)))OR(((t1.c0)|(vt0.c1)))))AND((~ (vt0.c0)))))OR(((t1.c1) IS FALSE))))AND((NOT (vt0.c1)))) ASC LIMIT 2;
SELECT * FROM t1, vt0 WHERE (vt0.c1) ORDER BY (((((((((vt0.c0 IN (vt0.c0, t1.c1)))OR(((t1.c0)|(vt0.c1)))))AND((~ (vt0.c0)))))OR(((t1.c1) IS FALSE))))AND((NOT (vt0.c1)))) ASC;
SELECT * FROM t1, vt0 WHERE (((vt0.c1)AND(''))) ORDER BY (((((((((vt0.c0 IN (vt0.c0, t1.c1)))OR(((t1.c0)|(vt0.c1)))))AND((~ (vt0.c0)))))OR(((t1.c1) IS FALSE))))AND((NOT (vt0.c1)))) ASC LIMIT 2;
SELECT MAX(vt0.c1) FROM vt0 NATURAL JOIN v0 CROSS JOIN t1 ON TYPEOF(DISTINCT ((x'b92c')IS NOT(t1.c0))) WHERE ((CASE v0.c0  WHEN v0.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE t1.c2 END IN ()));
SELECT ALL MAX(vt0.c1) FROM vt0 NATURAL JOIN v0 CROSS JOIN t1 ON TYPEOF(DISTINCT ((x'b92c')IS NOT(t1.c0))) WHERE ((CASE v0.c0  WHEN v0.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE t1.c2 END IN ())) ORDER BY json_valid(((vt0.c1)LIKE(t1.c0)));
SELECT ALL MIN(vt0.c0) FROM vt0, v0 WHERE ((((((((v0.c1)OR(vt0.c0)))OR(vt0.c0)), TRIM(DISTINCT v0.c0, vt0.c0), CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END))>=(((vt0.c1 IN (v0.c1)), ((((((((vt0.c0)OR(v0.c2)))AND(v0.c2)))OR(v0.c1)))AND(vt0.c0)), (NOT ('')))))) ORDER BY 'X' ASC, (vt0.c0 IN ((~ (vt0.c1)), (v0.c2 IN (v0.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c0) FROM vt0, v0 WHERE ((((((((((v0.c1)OR(vt0.c0)))OR(vt0.c0)), TRIM(DISTINCT v0.c0, vt0.c0), CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END))=(((vt0.c1 IN (v0.c1)), ((((((((vt0.c0)OR(v0.c2)))AND(v0.c2)))OR(v0.c1)))AND(vt0.c0)), (NOT (''))))))AND((((v0.c1 IN (v0.c0, vt0.c0)))%(CAST(vt0.c0 AS BLOB)))))) ORDER BY ((CAST(v0.c1 AS INTEGER)) NOT BETWEEN (CAST(v0.c1 AS TEXT)) AND (v0.c0 COLLATE NOCASE))  NULLS FIRST, ((CASE WHEN v0.c1 THEN vt0.c1 ELSE v0.c1 END)*(vt0.c1)) ASC, v0.c1 DESC  NULLS LAST;
SELECT ALL * FROM t1, v0 WHERE (((CASE v0.c0  WHEN t1.c0 THEN v0.c2 WHEN v0.c0 THEN t1.c1 WHEN t1.c2 THEN v0.c0 ELSE v0.c1 END)IS NOT(((v0.c1) BETWEEN (v0.c2) AND (v0.c0))))) ORDER BY (((v0.c1)) BETWEEN (((t1.c0 IN ()))) AND ((((v0.c2) BETWEEN (v0.c1) AND (v0.c2))))) DESC  NULLS FIRST, ((t1.c0) NOT BETWEEN (CAST(v0.c2 AS TEXT)) AND (CASE v0.c2  WHEN v0.c2 THEN t1.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN t1.c0 ELSE v0.c1 END)) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1, v0 WHERE (((CASE v0.c0  WHEN t1.c0 THEN v0.c2 WHEN v0.c0 THEN t1.c1 WHEN t1.c2 THEN v0.c0 ELSE v0.c1 END)IS NOT(((v0.c1) BETWEEN (v0.c2) AND (v0.c0))))) ORDER BY ((CAST(t1.c2 AS BLOB)) NOT BETWEEN (load_extension(v0.c1, v0.c1)) AND (((((t1.c2)OR(t1.c1)))OR(t1.c1)))) ASC  NULLS FIRST LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (x'') ORDER BY ((CAST(t1.c2 AS BLOB)) NOT BETWEEN (load_extension(v0.c1, v0.c1)) AND (((((t1.c2)OR(t1.c1)))OR(t1.c1)))) ASC  NULLS FIRST LIMIT 3;
SELECT ALL * FROM t1, v0 WHERE (((CASE v0.c0  WHEN t1.c0 THEN v0.c2 WHEN v0.c0 THEN t1.c1 WHEN t1.c2 THEN v0.c0 ELSE v0.c1 END)IS NOT(((v0.c1) BETWEEN (v0.c2) AND (v0.c0))))) ORDER BY (((v0.c1)) BETWEEN (((t1.c0 IN ()))) AND ((((v0.c2) BETWEEN (v0.c1) AND (v0.c2))))) DESC  NULLS FIRST, ((t1.c0) NOT BETWEEN (CAST(v0.c2 AS TEXT)) AND (CASE v0.c2  WHEN v0.c2 THEN t1.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN t1.c0 ELSE v0.c1 END)) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1, v0 WHERE (((CASE v0.c0  WHEN t1.c0 THEN v0.c2 WHEN v0.c0 THEN t1.c1 WHEN t1.c2 THEN v0.c0 ELSE v0.c1 END)IS NOT(((v0.c1) BETWEEN (v0.c2) AND (v0.c0))))) ORDER BY ((CAST(t1.c2 AS BLOB)) NOT BETWEEN (load_extension(v0.c1, v0.c1)) AND (((((t1.c2)OR(t1.c1)))OR(t1.c1)))) ASC  NULLS FIRST LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (x'') ORDER BY ((CAST(t1.c2 AS BLOB)) NOT BETWEEN (load_extension(v0.c1, v0.c1)) AND (((((t1.c2)OR(t1.c1)))OR(t1.c1)))) ASC  NULLS FIRST LIMIT 3;
SELECT ALL * FROM vt0, t1 WHERE (CASE WHEN (NOT (t1.c1)) THEN (t1.c1 IN (t1.c2, t1.c2)) WHEN ((vt0.c1) NOT BETWEEN (t1.c0) AND (t1.c2)) THEN ((t1.c2)/(t1.c2)) ELSE ((vt0.c1)>(vt0.c1)) END) ORDER BY (((((vt0.c1, t1.c1, t1.c1, t1.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, t1.c2, t1.c2, t1.c0, t1.c2)) AND ((vt0.c0, t1.c1, t1.c2, t1.c0, t1.c1)))) NOT NULL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (CASE WHEN (NOT (t1.c1)) THEN (t1.c1 IN (t1.c2, t1.c2)) WHEN ((vt0.c1) NOT BETWEEN (t1.c0) AND (t1.c2)) THEN ((t1.c2)/(t1.c2)) ELSE ((vt0.c1)>(vt0.c1)) END) ORDER BY (((((vt0.c1, t1.c1, t1.c1, t1.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, t1.c2, t1.c2, t1.c0, t1.c2)) AND ((vt0.c0, t1.c1, t1.c2, t1.c0, t1.c1)))) NOT NULL) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE ((((vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE, CASE WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c2 THEN t1.c1 WHEN vt0.c0 THEN vt0.c0 END)) AND (((vt0.c0 IN ()), LIKELIHOOD(t1.c2, vt0.c1))))) ORDER BY (((((vt0.c1, t1.c1, t1.c1, t1.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, t1.c2, t1.c2, t1.c0, t1.c2)) AND ((vt0.c0, t1.c1, t1.c2, t1.c0, t1.c1)))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (CASE WHEN (NOT (t1.c1)) THEN (t1.c1 IN (t1.c2, t1.c2)) WHEN ((vt0.c1) NOT BETWEEN (t1.c0) AND (t1.c2)) THEN ((t1.c2)/(t1.c2)) ELSE ((vt0.c1)>(vt0.c1)) END) ORDER BY (((((vt0.c1, t1.c1, t1.c1, t1.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, t1.c2, t1.c2, t1.c0, t1.c2)) AND ((vt0.c0, t1.c1, t1.c2, t1.c0, t1.c1)))) NOT NULL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (CASE WHEN (NOT (t1.c1)) THEN (t1.c1 IN (t1.c2, t1.c2)) WHEN ((vt0.c1) NOT BETWEEN (t1.c0) AND (t1.c2)) THEN ((t1.c2)/(t1.c2)) ELSE ((vt0.c1)>(vt0.c1)) END) ORDER BY (((((vt0.c1, t1.c1, t1.c1, t1.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, t1.c2, t1.c2, t1.c0, t1.c2)) AND ((vt0.c0, t1.c1, t1.c2, t1.c0, t1.c1)))) NOT NULL) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE ((((vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE, CASE WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c2 THEN t1.c1 WHEN vt0.c0 THEN vt0.c0 END)) AND (((vt0.c0 IN ()), LIKELIHOOD(t1.c2, vt0.c1))))) ORDER BY (((((vt0.c1, t1.c1, t1.c1, t1.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, t1.c2, t1.c2, t1.c0, t1.c2)) AND ((vt0.c0, t1.c1, t1.c2, t1.c0, t1.c1)))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM v0 LEFT OUTER JOIN t1 ON (((v0.c0)) NOT BETWEEN ((CAST(t1.c0 AS BLOB))) AND (((NOT (vt0.c0))))) CROSS JOIN vt0 ON (+ (CAST(vt0.c0 AS TEXT))) WHERE ((NOT ((v0.c2 IN (v0.c0))))) ORDER BY ('328639082' IN ((+ (vt0.c0)))) ASC;
SELECT ALL * FROM v0 INNER JOIN t1 ON (((v0.c0)) NOT BETWEEN ((CAST(t1.c0 AS BLOB))) AND (((NOT (vt0.c0))))) CROSS JOIN vt0 ON (+ (CAST(vt0.c0 AS TEXT))) WHERE ((((NOT ((v0.c2 IN (v0.c0)))))AND(CASE IFNULL(t1.c1, x'61')  WHEN UPPER(DISTINCT 0.6679657990597618) THEN COALESCE(DISTINCT t1.c1, v0.c0, vt0.c1, v0.c0, t1.c0) WHEN NULL THEN (+ (vt0.c1)) WHEN ((t1.c1)>(t1.c2)) THEN (v0.c0 IN ()) WHEN ((t1.c2)<>(vt0.c1)) THEN v0.c1 COLLATE NOCASE WHEN LIKELIHOOD(t1.c0, x'') THEN vt0.c1 ELSE CAST(v0.c1 AS NUMERIC) END))) ORDER BY ('328639082' IN ((+ (vt0.c0)))) ASC;
SELECT ALL * FROM v0 LEFT OUTER JOIN t1 ON (((v0.c0)) NOT BETWEEN ((CAST(t1.c0 AS BLOB))) AND (((NOT (vt0.c0))))) CROSS JOIN vt0 ON (+ (CAST(vt0.c0 AS TEXT))) WHERE ((NOT ((v0.c2 IN (v0.c0))))) ORDER BY ('328639082' IN ((+ (vt0.c0)))) ASC;
SELECT * FROM v0 WHERE (((0x2b68ee30) IS FALSE));
SELECT DISTINCT * FROM v0 WHERE (((728297008) IS FALSE)) INTERSECT SELECT DISTINCT * FROM v0 WHERE (((('mk蔐b鎭aX>T' IN ()))||(x'')));
SELECT * FROM v0 WHERE (((0x2b68ee30) IS FALSE));
SELECT DISTINCT * FROM v0 WHERE (((728297008) IS FALSE)) INTERSECT SELECT DISTINCT * FROM v0 WHERE (((('mk蔐b鎭aX>T' IN ()))||(x'')));
SELECT ALL * FROM t1 WHERE (CASE (NOT (t1.c0))  WHEN STRFTIME(t1.c2, t1.c2, t1.c0) THEN ((('-1520699329')) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) WHEN LOWER(DISTINCT t1.c2) THEN QUOTE(t1.c0) ELSE (t1.c2 IN ()) END);
SELECT DISTINCT * FROM t1 WHERE (CASE (NOT (t1.c0))  WHEN STRFTIME(t1.c2, t1.c2, t1.c0) THEN ((('-1520699329')) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) WHEN LOWER(DISTINCT t1.c2) THEN QUOTE(t1.c0) ELSE (t1.c2 IN ()) END) ORDER BY ((((t1.c2) NOT NULL))|(((((((((((t1.c0)OR(t1.c2)))AND(x'')))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))) DESC  NULLS LAST, CAST(CASE WHEN t1.c0 THEN t1.c1 END AS INTEGER) DESC, json_type(CASE t1.c2  WHEN 0.9277454464008991 THEN t1.c1 END) INTERSECT SELECT DISTINCT * FROM t1 WHERE (-180575612) ORDER BY ((((t1.c2) NOT NULL))|(((((((((((t1.c0)OR(t1.c2)))AND(x'')))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))) DESC  NULLS LAST, CAST(CASE WHEN t1.c0 THEN t1.c1 END AS INTEGER) DESC, json_type(CASE t1.c2  WHEN 0.9277454464008991 THEN t1.c1 END);
SELECT ALL * FROM t1 WHERE (CASE (NOT (t1.c0))  WHEN STRFTIME(t1.c2, t1.c2, t1.c0) THEN ((('-1520699329')) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) WHEN LOWER(DISTINCT t1.c2) THEN QUOTE(t1.c0) ELSE (t1.c2 IN ()) END);
SELECT DISTINCT * FROM t1 WHERE (CASE (NOT (t1.c0))  WHEN STRFTIME(t1.c2, t1.c2, t1.c0) THEN ((('-1520699329')) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) WHEN LOWER(DISTINCT t1.c2) THEN QUOTE(t1.c0) ELSE (t1.c2 IN ()) END) ORDER BY ((((t1.c2) NOT NULL))|(((((((((((t1.c0)OR(t1.c2)))AND(x'')))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))) DESC  NULLS LAST, CAST(CASE WHEN t1.c0 THEN t1.c1 END AS INTEGER) DESC, json_type(CASE t1.c2  WHEN 0.9277454464008991 THEN t1.c1 END) INTERSECT SELECT DISTINCT * FROM t1 WHERE (-180575612) ORDER BY ((((t1.c2) NOT NULL))|(((((((((((t1.c0)OR(t1.c2)))AND(x'')))OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))) DESC  NULLS LAST, CAST(CASE WHEN t1.c0 THEN t1.c1 END AS INTEGER) DESC, json_type(CASE t1.c2  WHEN 0.9277454464008991 THEN t1.c1 END);
SELECT ALL * FROM v0 INNER JOIN vt0 ON (vt0.c1 IN ()) COLLATE BINARY WHERE (((((v0.c1)OR(v0.c2)))AND(v0.c1)) COLLATE NOCASE) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((((((vt0.c1)OR(vt0.c1)))AND('NdU')))OR(v0.c1))) AND (CAST(x'6cea' AS NUMERIC))) ASC  NULLS LAST, v0.c0;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (vt0.c1 IN ()) COLLATE BINARY WHERE (((((v0.c1)OR(v0.c2)))AND(v0.c1)) COLLATE NOCASE) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((((((vt0.c1)OR(vt0.c1)))AND('NdU')))OR(v0.c1))) AND (CAST(x'6cea' AS NUMERIC))) ASC  NULLS LAST, v0.c0 LIMIT 0X2 INTERSECT SELECT ALL * FROM v0 INNER JOIN vt0 ON (vt0.c1 IN ()) COLLATE BINARY WHERE ((((((v0.c0)<=(v0.c1)), (~ (vt0.c0))))!=((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c1)||(vt0.c0)))))) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((((((vt0.c1)OR(vt0.c1)))AND('NdU')))OR(v0.c1))) AND (CAST(x'6cea' AS NUMERIC))) ASC  NULLS LAST, v0.c0 LIMIT 2;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (vt0.c1 IN ()) COLLATE BINARY WHERE (((((v0.c1)OR(v0.c2)))AND(v0.c1)) COLLATE NOCASE) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((((((vt0.c1)OR(vt0.c1)))AND('NdU')))OR(v0.c1))) AND (CAST(x'6cea' AS NUMERIC))) ASC  NULLS LAST, v0.c0;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (vt0.c1 IN ()) COLLATE BINARY WHERE (((((v0.c1)OR(v0.c2)))AND(v0.c1)) COLLATE NOCASE) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((((((vt0.c1)OR(vt0.c1)))AND('NdU')))OR(v0.c1))) AND (CAST(x'6cea' AS NUMERIC))) ASC  NULLS LAST, v0.c0 LIMIT 0X2 INTERSECT SELECT ALL * FROM v0 INNER JOIN vt0 ON (vt0.c1 IN ()) COLLATE BINARY WHERE ((((((v0.c0)<=(v0.c1)), (~ (vt0.c0))))!=((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c1)||(vt0.c0)))))) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((((((vt0.c1)OR(vt0.c1)))AND('NdU')))OR(v0.c1))) AND (CAST(x'6cea' AS NUMERIC))) ASC  NULLS LAST, v0.c0 LIMIT 2;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (0.954513880733354)))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN (0.954513880733354)))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (vt0.c1 IN ((vt0.c1 IN ()), CASE vt0.c1  WHEN 'O]g' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)>>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (vt0.c1 IN ((vt0.c1 IN ()), CASE vt0.c1  WHEN 'O]g' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST LIMIT 0X0;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (0.954513880733354)))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN (0.954513880733354)))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (vt0.c1 IN ((vt0.c1 IN ()), CASE vt0.c1  WHEN 'O]g' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)>>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (vt0.c1 IN ((vt0.c1 IN ()), CASE vt0.c1  WHEN 'O]g' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST LIMIT 0X0;
SELECT ALL MAX(t1.c2) FROM v0, vt0, t1 WHERE (((~ (0.4857834387828547)) IN ((+ (v0.c0)))));
SELECT DISTINCT MAX(t1.c2) FROM v0, vt0, t1 WHERE (((~ (0.4857834387828547)) IN ((+ (v0.c0))))) ORDER BY vt0.c1 DESC  NULLS FIRST, ((((((((((v0.c0)OR(((((((((v0.c2)OR(t1.c1)))OR(v0.c2)))AND(t1.c0)))OR(t1.c1)))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (v0.c1)))))OR(vt0.c0 COLLATE RTRIM)))AND(CASE v0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 END)))OR((- (t1.c0)))) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MAX(t1.c2) FROM v0, vt0, t1 WHERE ((((vt0.c1)) NOT BETWEEN ((CASE v0.c1  WHEN 'K' THEN t1.c2 WHEN vt0.c1 THEN t1.c1 WHEN 0.015051702803619449 THEN v0.c2 WHEN v0.c1 THEN v0.c0 END)) AND ((((v0.c1)>(vt0.c1)))))) ORDER BY vt0.c1 DESC  NULLS FIRST, ((((((((((v0.c0)OR(((((((((v0.c2)OR(t1.c1)))OR(v0.c2)))AND(t1.c0)))OR(t1.c1)))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (v0.c1)))))OR(vt0.c0 COLLATE RTRIM)))AND(CASE v0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 END)))OR((- (t1.c0)))) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM vt0 WHERE (CAST(SQLITE_SOURCE_ID() AS TEXT));
SELECT ALL * FROM vt0 WHERE (((CAST(SQLITE_SOURCE_ID() AS TEXT))AND(CAST(vt0.c1 AS REAL)))) ORDER BY (~ (((vt0.c0)%(vt0.c1)))) ASC  NULLS LAST, (- (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(SQLITE_SOURCE_ID() AS TEXT));
SELECT ALL * FROM vt0 WHERE (((CAST(SQLITE_SOURCE_ID() AS TEXT))AND(CAST(vt0.c1 AS REAL)))) ORDER BY (~ (((vt0.c0)%(vt0.c1)))) ASC  NULLS LAST, (- (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((((~ (v0.c0)))OR(vt0.c1 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c1 WHEN 0xffffffffbc4b909a THEN NULL ELSE vt0.c0 END)))AND(((vt0.c0)<<(NULL)))) WHERE ((((vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1)IS NOT(vt0.c0)), ((v0.c0) IS TRUE))) AND ((vt0.c0, vt0.c0 COLLATE NOCASE))));
SELECT * FROM vt0 INNER JOIN v0 ON (((((((~ (v0.c0)))OR(vt0.c1 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c1 WHEN 0Xffffffffbc4b909a THEN NULL ELSE vt0.c0 END)))AND(((vt0.c0)<<(NULL)))) WHERE ((((vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1)IS NOT(vt0.c0)), ((v0.c0) IS TRUE))) AND ((vt0.c0, vt0.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((((~ (v0.c0)))OR(vt0.c1 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c1 WHEN 0xffffffffbc4b909a THEN NULL ELSE vt0.c0 END)))AND(((vt0.c0)<<(NULL)))) WHERE ((((vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1)IS NOT(vt0.c0)), ((v0.c0) IS TRUE))) AND ((vt0.c0, vt0.c0 COLLATE NOCASE))));
SELECT * FROM vt0 INNER JOIN v0 ON (((((((~ (v0.c0)))OR(vt0.c1 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN v0.c1 WHEN 0Xffffffffbc4b909a THEN NULL ELSE vt0.c0 END)))AND(((vt0.c0)<<(NULL)))) WHERE ((((vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1)IS NOT(vt0.c0)), ((v0.c0) IS TRUE))) AND ((vt0.c0, vt0.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt0, v0 WHERE (CAST((((v0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL)) AND ((v0.c1, '1662136293'))) AS BLOB));
SELECT ALL * FROM vt0, v0 WHERE (CAST((((v0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL)) AND ((v0.c1, '1662136293'))) AS BLOB)) ORDER BY (CAST(v0.c0 AS REAL) IN ()) DESC  NULLS FIRST, (((((v0.c0)OR(v0.c0)))OR(v0.c2)) IN (((0.7274419486226006)IS NOT(v0.c0)), vt0.c1)) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (CAST((((v0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL)) AND ((v0.c1, '1662136293'))) AS BLOB));
SELECT ALL * FROM vt0, v0 WHERE (CAST((((v0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL)) AND ((v0.c1, '1662136293'))) AS BLOB)) ORDER BY (CAST(v0.c0 AS REAL) IN ()) DESC  NULLS FIRST, (((((v0.c0)OR(v0.c0)))OR(v0.c2)) IN (((0.7274419486226006)IS NOT(v0.c0)), vt0.c1)) DESC  NULLS LAST;
SELECT MAX(v0.c0) FROM v0 WHERE (CASE WHEN ((v0.c1)GLOB(v0.c0)) THEN ((v0.c2)<<(v0.c2)) WHEN ((v0.c1)LIKE(v0.c2)) THEN (v0.c2 IN ()) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN v0.c2 COLLATE NOCASE WHEN ABS(DISTINCT v0.c0) THEN ((v0.c2) IS TRUE) WHEN ((v0.c1) BETWEEN ('鏄%luOJ^kU') AND (v0.c1)) THEN v0.c1 COLLATE RTRIM END);
SELECT MAX(v0.c0) FROM v0 WHERE (CASE WHEN ((v0.c1)GLOB(v0.c0)) THEN ((v0.c2)<<(v0.c2)) WHEN ((v0.c1)LIKE(v0.c2)) THEN (v0.c2 IN ()) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN v0.c2 COLLATE NOCASE WHEN ABS(DISTINCT v0.c0) THEN ((v0.c2) IS TRUE) WHEN ((v0.c1) BETWEEN ('鏄%luOJ^kU') AND (v0.c1)) THEN v0.c1 COLLATE RTRIM END) ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c2))) NOT BETWEEN (((v0.c0)LIKE(v0.c0))) AND (UPPER(v0.c0))) DESC, (((v0.c1, 0x4f2172a0)) BETWEEN ((v0.c1 COLLATE NOCASE, v0.c0 COLLATE BINARY)) AND (((v0.c2 IN ('{')), (((v0.c0, v0.c1)) BETWEEN ((v0.c1, v0.c2)) AND ((v0.c1, v0.c2))))))  NULLS FIRST, ((((0.8448115361401342) IS TRUE))<>(v0.c2 COLLATE NOCASE))  NULLS FIRST LIMIT 0x0;
SELECT ALL MAX(v0.c2) FROM t1 LEFT OUTER JOIN v0 ON ((((((((((v0.c0)!=(vt0.c0)))OR((((vt0.c0, NULL, vt0.c0, vt0.c1))<((vt0.c0, v0.c1, t1.c1, vt0.c1))))))AND((- (v0.c1)))))AND((((t1.c0, x'')) NOT BETWEEN ((v0.c2, v0.c0)) AND ((v0.c0, t1.c0))))))OR(((t1.c1) BETWEEN (v0.c0) AND (t1.c0)))) NATURAL JOIN vt0 WHERE (CAST(((vt0.c1) NOT NULL) AS BLOB));
SELECT DISTINCT MAX(v0.c2) FROM t1 LEFT OUTER JOIN v0 ON ((((((((((v0.c0)!=(vt0.c0)))OR((((vt0.c0, NULL, vt0.c0, vt0.c1))<((vt0.c0, v0.c1, t1.c1, vt0.c1))))))AND((- (v0.c1)))))AND((((t1.c0, x'')) NOT BETWEEN ((v0.c2, v0.c0)) AND ((v0.c0, t1.c0))))))OR(((t1.c1) BETWEEN (v0.c0) AND (t1.c0)))) NATURAL JOIN vt0 WHERE (CAST(((vt0.c1) NOT NULL) AS BLOB));
SELECT ALL * FROM vt0, t1 WHERE (0.5953621989363957);
SELECT * FROM vt0, t1 WHERE (((0.5953621989363957)AND(t1.c1))) INTERSECT SELECT * FROM vt0, t1 WHERE (LIKELY(((vt0.c0)<=(vt0.c0))));
SELECT ALL * FROM vt0, t1 WHERE (0.5953621989363957);
SELECT * FROM vt0, t1 WHERE (((0.5953621989363957)AND(t1.c1))) INTERSECT SELECT * FROM vt0, t1 WHERE (LIKELY(((vt0.c0)<=(vt0.c0))));
SELECT ALL MIN(t1.c2) FROM t1, v0 NATURAL JOIN vt0 WHERE (CAST(TYPEOF(DISTINCT vt0.c1) AS INTEGER));
SELECT DISTINCT MIN(t1.c2) FROM t1, v0 NATURAL JOIN vt0 WHERE (CAST(TYPEOF(DISTINCT vt0.c1) AS INTEGER)) INTERSECT SELECT DISTINCT MIN(t1.c2) FROM t1, v0 NATURAL JOIN vt0 WHERE ((+ ((((vt0.c0, NULL))==((vt0.c1, t1.c0))))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR((((vt0.c0))>=((vt0.c0))))))OR((((vt0.c0, vt0.c0))<(('', vt0.c0))))));
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0 COLLATE NOCASE)OR((((vt0.c0))>=((vt0.c0))))))OR((((vt0.c0, vt0.c0))<(('', vt0.c0))))))AND(((CAST(vt0.c0 AS NUMERIC)) ISNULL)))) ORDER BY NULL INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY NULL;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR((((vt0.c0))>=((vt0.c0))))))OR((((vt0.c0, vt0.c0))<(('', vt0.c0))))));
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0 COLLATE NOCASE)OR((((vt0.c0))>=((vt0.c0))))))OR((((vt0.c0, vt0.c0))<(('', vt0.c0))))))AND(((CAST(vt0.c0 AS NUMERIC)) ISNULL)))) ORDER BY NULL INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY NULL;
SELECT MIN(t1.c0) FROM t1 WHERE (CAST(CASE WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END AS BLOB));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CAST(CASE WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END AS BLOB)) LIMIT 3 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((CAST(t1.c2 AS BLOB))>(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2))))) LIMIT 3;
SELECT * FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c0) ISNULL))))AND(CAST(vt0.c1 AS REAL))));
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c0) ISNULL))))AND(CAST(vt0.c1 AS REAL))))AND(NULL))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c1)) NOT BETWEEN (((vt0.c1)=(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) LIMIT 2;
SELECT * FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c0) ISNULL))))AND(CAST(vt0.c1 AS REAL))));
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c0) ISNULL))))AND(CAST(vt0.c1 AS REAL))))AND(NULL))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c1)) NOT BETWEEN (((vt0.c1)=(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) LIMIT 2;
SELECT * FROM vt0, t1 WHERE (vt0.c0);
SELECT ALL * FROM vt0, t1 WHERE (vt0.c0) ORDER BY ((CAST(t1.c2 AS BLOB))IS(x'f778f5b9')) DESC, ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c2)GLOB(t1.c1))) AND (t1.c1 COLLATE RTRIM));
SELECT * FROM vt0, t1 WHERE (vt0.c0);
SELECT ALL * FROM vt0, t1 WHERE (vt0.c0) ORDER BY ((CAST(t1.c2 AS BLOB))IS(x'f778f5b9')) DESC, ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c2)GLOB(t1.c1))) AND (t1.c1 COLLATE RTRIM));
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE NOCASE)IS NOT(((t1.c0)GLOB(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0 COLLATE NOCASE)IS NOT(((t1.c0)GLOB(t1.c0)))))AND(CASE WHEN CAST(0.587922248410826 AS BLOB) THEN ((t1.c0) IS FALSE) WHEN json_remove(t1.c0, t1.c2, t1.c2, t1.c2) THEN ((t1.c2)<=(t1.c2)) END))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE NOCASE)IS NOT(((t1.c0)GLOB(t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0 COLLATE NOCASE)IS NOT(((t1.c0)GLOB(t1.c0)))))AND(CASE WHEN CAST(0.587922248410826 AS BLOB) THEN ((t1.c0) IS FALSE) WHEN json_remove(t1.c0, t1.c2, t1.c2, t1.c2) THEN ((t1.c2)<=(t1.c2)) END))) LIMIT 0;
SELECT * FROM t1 CROSS JOIN v0 ON (((t1.c0 IN ())) IS FALSE) WHERE (t1.c1) ORDER BY ((((((((v0.c1)OR(v0.c2)))AND(v0.c2)))AND(v0.c2)))AND(v0.c0)) COLLATE RTRIM, (0.8880395594731332 IN (CAST(v0.c0 AS INTEGER), ((v0.c0)>>(t1.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON (((t1.c0 IN ())) IS FALSE) WHERE (((t1.c1)AND(CASE WHEN IFNULL(DISTINCT 0.49583271320392386, v0.c1) THEN CAST(t1.c0 AS INTEGER) ELSE ((v0.c1) IS TRUE) END))) ORDER BY ((((((((v0.c1)OR(v0.c2)))AND(v0.c2)))AND(v0.c2)))AND(v0.c0)) COLLATE RTRIM, (0.8880395594731332 IN (CAST(v0.c0 AS INTEGER), ((v0.c0)>>(t1.c1)))) DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1 CROSS JOIN v0 ON (((t1.c0 IN ())) IS FALSE) WHERE (t1.c1) ORDER BY ((((((((v0.c1)OR(v0.c2)))AND(v0.c2)))AND(v0.c2)))AND(v0.c0)) COLLATE RTRIM, (0.8880395594731332 IN (CAST(v0.c0 AS INTEGER), ((v0.c0)>>(t1.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON (((t1.c0 IN ())) IS FALSE) WHERE (((t1.c1)AND(CASE WHEN IFNULL(DISTINCT 0.49583271320392386, v0.c1) THEN CAST(t1.c0 AS INTEGER) ELSE ((v0.c1) IS TRUE) END))) ORDER BY ((((((((v0.c1)OR(v0.c2)))AND(v0.c2)))AND(v0.c2)))AND(v0.c0)) COLLATE RTRIM, (0.8880395594731332 IN (CAST(v0.c0 AS INTEGER), ((v0.c0)>>(t1.c1)))) DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL MAX(t1.c1) FROM t1, v0 WHERE (CASE WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (t1.c1)) THEN ((v0.c2)>=(v0.c0)) WHEN v0.c2 COLLATE BINARY THEN ((v0.c2) ISNULL) ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))) END);
SELECT DISTINCT MAX(t1.c1) FROM t1, v0 WHERE (CASE WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (t1.c1)) THEN ((v0.c2)>=(v0.c0)) WHEN v0.c2 COLLATE BINARY THEN ((v0.c2) ISNULL) ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))) END) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1, v0 WHERE (((((((((((((UPPER(t1.c2))AND((t1.c0 IN (v0.c1)))))AND(v0.c0 COLLATE BINARY)))OR(COALESCE(v0.c1, NULL, t1.c0, t1.c1, t1.c1))))OR(((v0.c0) ISNULL))))OR(v0.c1 COLLATE RTRIM)))AND(((v0.c0) IS FALSE))));
SELECT ALL * FROM t1, vt0, v0 WHERE (x'') ORDER BY (v0.c1 COLLATE BINARY IN ()) ASC, (((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2)), CAST(vt0.c0 AS REAL)))<(((((t1.c1))<=((t1.c1))), ((vt0.c1)<<(v0.c2))))) ASC;
SELECT * FROM t1, vt0, v0 WHERE (x'') ORDER BY (v0.c1 COLLATE BINARY IN ()) ASC, (((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2)), CAST(vt0.c0 AS REAL)))<(((((t1.c1))<=((t1.c1))), ((vt0.c1)<<(v0.c2))))) ASC;
SELECT ALL * FROM t1, vt0, v0 WHERE (x'') ORDER BY (v0.c1 COLLATE BINARY IN ()) ASC, (((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2)), CAST(vt0.c0 AS REAL)))<(((((t1.c1))<=((t1.c1))), ((vt0.c1)<<(v0.c2))))) ASC;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0 COLLATE RTRIM)))AND(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(x'')))))AND(((vt0.c1)IS NOT(vt0.c1)))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT MIN(vt0.c1) FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0 COLLATE RTRIM)))AND(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(x'')))))AND(((vt0.c1)IS NOT(vt0.c1)))))AND(CAST(vt0.c0 AS INTEGER)))) LIMIT 0 INTERSECT SELECT MIN(vt0.c1) FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ())) LIMIT 0x0;
SELECT MAX(t1.c1) FROM t1 WHERE (CAST(CAST(t1.c0 AS BLOB) AS NUMERIC)) ORDER BY (((t1.c0)IS(t1.c1)) IN ()) DESC;
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CAST(CAST(t1.c0 AS BLOB) AS NUMERIC))AND(CASE WHEN ((t1.c2) BETWEEN (t1.c1) AND (t1.c1)) THEN ((t1.c2)GLOB(t1.c0)) END))) ORDER BY (((t1.c0)IS(t1.c1)) IN ()) DESC LIMIT 0X1 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((NULLIF(t1.c0, t1.c0))AND(((((((t1.c2)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))))OR(RTRIM(t1.c1))))OR((((x'84'))==((972076590)))))) ORDER BY (((t1.c0)IS(t1.c1)) IN ()) DESC LIMIT 1;
SELECT * FROM vt0 WHERE ((((((((((((((vt0.c1))=((vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1)>>(vt0.c1)))))OR(((vt0.c1)>(vt0.c0)))))AND((((vt0.c0, vt0.c1, vt0.c1, '3nZ*Gx')) NOT BETWEEN ((vt0.c0, x'a222', vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0)))))) ORDER BY (vt0.c1 COLLATE RTRIM IN ()) ASC, (((((0.228609219319156) BETWEEN (vt0.c1) AND (vt0.c1))))<((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(-1.480560719E9))))) ASC;
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c1))=((vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1)>>(vt0.c1)))))OR(((vt0.c1)>(vt0.c0)))))AND((((vt0.c0, vt0.c1, vt0.c1, '3nZ*Gx')) NOT BETWEEN ((vt0.c0, x'a222', vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0)))))) ORDER BY (vt0.c1 COLLATE RTRIM IN ()) ASC, (((((0.228609219319156) BETWEEN (vt0.c1) AND (vt0.c1))))<((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(-1.480560719E9))))) ASC INTERSECT SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY (vt0.c1 COLLATE RTRIM IN ()) ASC, (((((0.228609219319156) BETWEEN (vt0.c1) AND (vt0.c1))))<((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(-1.480560719E9))))) ASC;
SELECT * FROM vt0 WHERE ((((((((((((((vt0.c1))=((vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1)>>(vt0.c1)))))OR(((vt0.c1)>(vt0.c0)))))AND((((vt0.c0, vt0.c1, vt0.c1, '3nZ*Gx')) NOT BETWEEN ((vt0.c0, x'a222', vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0)))))) ORDER BY (vt0.c1 COLLATE RTRIM IN ()) ASC, (((((0.228609219319156) BETWEEN (vt0.c1) AND (vt0.c1))))<((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(-1.480560719E9))))) ASC;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET(vt0.c0))OR((vt0.c1 IN (vt0.c0))))) ORDER BY (+ (CAST(vt0.c1 AS BLOB)))  NULLS LAST;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR((vt0.c1 IN (vt0.c0)))))AND(NULL))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL) INTERSECT SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((((((vt0.c1 COLLATE RTRIM)OR(((vt0.c1)OR(vt0.c0)))))AND(json_array_length(vt0.c0))))OR(CAST(vt0.c1 AS REAL)))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)))))) ORDER BY ((v0.c2 COLLATE RTRIM) IS FALSE), ((((((v0.c2) NOT NULL))OR(CAST(vt0.c1 AS NUMERIC))))AND((((v0.c1))>=((v0.c2))))) DESC, ((((((((v0.c2)IS NOT(vt0.c1)))OR(CASE x'b3'  WHEN v0.c2 THEN vt0.c1 ELSE x'eb05bb' END)))AND((vt0.c0 IN ()))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 WHEN vt0.c1 THEN v0.c1 END))  NULLS LAST;
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)))))) ORDER BY v0.c2 DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE (((((((((vt0.c1)AND((((x'9d'))>((vt0.c0))))))AND(x'4c')))OR((v0.c2 IN (v0.c1)))))AND((('A')!=(vt0.c1))))) ORDER BY v0.c2 DESC  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)))))) ORDER BY ((v0.c2 COLLATE RTRIM) IS FALSE), ((((((v0.c2) NOT NULL))OR(CAST(vt0.c1 AS NUMERIC))))AND((((v0.c1))>=((v0.c2))))) DESC, ((((((((v0.c2)IS NOT(vt0.c1)))OR(CASE x'b3'  WHEN v0.c2 THEN vt0.c1 ELSE x'eb05bb' END)))AND((vt0.c0 IN ()))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 WHEN vt0.c1 THEN v0.c1 END))  NULLS LAST;
SELECT * FROM t1, vt0, v0 WHERE (((((t1.c2)>=(t1.c2)))<=(CASE t1.c2  WHEN t1.c0 THEN v0.c0 WHEN vt0.c0 THEN x'b0' WHEN t1.c1 THEN vt0.c0 ELSE t1.c1 END)));
SELECT * FROM t1, vt0, v0 WHERE (((((((t1.c2)>(t1.c2)))=(CASE t1.c2  WHEN t1.c0 THEN v0.c0 WHEN vt0.c0 THEN x'b0' WHEN t1.c1 THEN vt0.c0 ELSE t1.c1 END)))AND(CAST(HEX(t1.c0) AS REAL)))) INTERSECT SELECT * FROM t1, vt0, v0 WHERE (NULLIF(CAST(vt0.c1 AS NUMERIC), v0.c2));
SELECT * FROM t1, vt0, v0 WHERE (((((t1.c2)>=(t1.c2)))<=(CASE t1.c2  WHEN t1.c0 THEN v0.c0 WHEN vt0.c0 THEN x'b0' WHEN t1.c1 THEN vt0.c0 ELSE t1.c1 END)));
SELECT * FROM t1, vt0, v0 WHERE (((((((t1.c2)>(t1.c2)))=(CASE t1.c2  WHEN t1.c0 THEN v0.c0 WHEN vt0.c0 THEN x'b0' WHEN t1.c1 THEN vt0.c0 ELSE t1.c1 END)))AND(CAST(HEX(t1.c0) AS REAL)))) INTERSECT SELECT * FROM t1, vt0, v0 WHERE (NULLIF(CAST(vt0.c1 AS NUMERIC), v0.c2));
SELECT MAX(vt0.c0) FROM t1 INNER JOIN vt0 ON ((((v0.c1) IS FALSE))||((((((('蓫6gj.\臰8')AND(t1.c2)))OR(vt0.c1)))OR(vt0.c1)))) INNER JOIN v0 ON ((((vt0.c0) IS TRUE))>('X^')) WHERE (((TRIM(NULL))>=(vt0.c1 COLLATE BINARY)));
SELECT MAX(vt0.c0) FROM t1 INNER JOIN vt0 ON ((((v0.c1) IS FALSE))||((((((('蓫6gj.\臰8')AND(t1.c2)))OR(vt0.c1)))OR(vt0.c1)))) INNER JOIN v0 ON ((((vt0.c0) IS TRUE))>('X^')) WHERE (((((TRIM(NULL))>=(vt0.c1 COLLATE BINARY)))AND(CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)))) ORDER BY vt0.c1 ASC  NULLS LAST, ((CAST(v0.c1 AS REAL)) ISNULL) DESC, vt0.c1  NULLS FIRST LIMIT 2;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((vt0.c1) IS TRUE)) ORDER BY CAST((((vt0.c1))<((vt0.c0))) AS INTEGER)  NULLS LAST, ((vt0.c1 IN (vt0.c0)) IN ('-2051319517')) ASC;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((((vt0.c1) IS TRUE))AND((~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))))) ORDER BY ((((((vt0.c0) NOT NULL))OR(HEX(DISTINCT vt0.c0))))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))) LIMIT 0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c2)) BETWEEN ((CAST(t1.c1 AS TEXT))) AND (((t1.c0 IN ())))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((t1.c2)) BETWEEN ((CAST(t1.c1 AS TEXT))) AND (((t1.c0 IN ()))))) LIMIT 0 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((~ (x'66'))) LIMIT 0x0;
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE(LIKELY(DISTINCT t1.c1))));
SELECT * FROM t1, vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE(LIKELY(DISTINCT t1.c1))));
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE(LIKELY(DISTINCT t1.c1))));
SELECT * FROM t1, vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE(LIKELY(DISTINCT t1.c1))));
SELECT * FROM v0 INNER JOIN t1 ON CASE WHEN t1.c0 THEN '1076981978' WHEN t1.c0 THEN vt0.c0 END COLLATE RTRIM CROSS JOIN vt0 ON CASE WHEN (t1.c0 IN (t1.c2)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN TRIM(vt0.c0) THEN (+ (t1.c2)) WHEN ((vt0.c0) ISNULL) THEN 0.44548958324190213 WHEN ((((((((((((vt0.c1)OR(v0.c0)))AND(vt0.c0)))OR(t1.c1)))OR(v0.c1)))OR(v0.c2)))OR(t1.c1)) THEN (NOT (v0.c2)) ELSE v0.c0 END WHERE (((CAST(vt0.c0 AS REAL)) IS FALSE)) ORDER BY (((vt0.c0, v0.c2)) BETWEEN ((((((vt0.c1)OR(vt0.c1)))AND(v0.c2)), ((((v0.c1)OR(v0.c2)))OR(v0.c0)))) AND ((((v0.c2)>=(vt0.c0)), ('1249536355' IN (t1.c0))))) ASC  NULLS FIRST, ((vt0.c1 IN (v0.c2)) IN (((v0.c1) NOT BETWEEN (t1.c2) AND (v0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM v0 INNER JOIN t1 ON CASE WHEN t1.c0 THEN '1076981978' WHEN t1.c0 THEN vt0.c0 END COLLATE RTRIM CROSS JOIN vt0 ON CASE WHEN (t1.c0 IN (t1.c2)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN TRIM(vt0.c0) THEN (+ (t1.c2)) WHEN ((vt0.c0) ISNULL) THEN 0.44548958324190213 WHEN ((((((((((((vt0.c1)OR(v0.c0)))AND(vt0.c0)))OR(t1.c1)))OR(v0.c1)))OR(v0.c2)))OR(t1.c1)) THEN (NOT (v0.c2)) ELSE v0.c0 END WHERE (((((CAST(vt0.c0 AS REAL)) IS FALSE))AND(((((((((((((((t1.c0)OR(t1.c1)))OR(vt0.c1)))OR(t1.c2)))OR(t1.c1)))AND(vt0.c1)))OR(v0.c1))) IS FALSE)))) ORDER BY ((((((((((((vt0.c1)OR(t1.c2)))AND(v0.c1)))OR((v0.c0 IN (v0.c2)))))AND(CAST(x'372e' AS REAL))))AND((NOT (vt0.c0)))))OR(0.37271296441285184)) ASC  NULLS LAST, NULL ASC, (((t1.c1)==(t1.c2)) IN (']?/XE'));
SELECT * FROM v0 INNER JOIN t1 ON CASE WHEN t1.c0 THEN '1076981978' WHEN t1.c0 THEN vt0.c0 END COLLATE RTRIM CROSS JOIN vt0 ON CASE WHEN (t1.c0 IN (t1.c2)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN TRIM(vt0.c0) THEN (+ (t1.c2)) WHEN ((vt0.c0) ISNULL) THEN 0.44548958324190213 WHEN ((((((((((((vt0.c1)OR(v0.c0)))AND(vt0.c0)))OR(t1.c1)))OR(v0.c1)))OR(v0.c2)))OR(t1.c1)) THEN (NOT (v0.c2)) ELSE v0.c0 END WHERE (((CAST(vt0.c0 AS REAL)) IS FALSE)) ORDER BY (((vt0.c0, v0.c2)) BETWEEN ((((((vt0.c1)OR(vt0.c1)))AND(v0.c2)), ((((v0.c1)OR(v0.c2)))OR(v0.c0)))) AND ((((v0.c2)>=(vt0.c0)), ('1249536355' IN (t1.c0))))) ASC  NULLS FIRST, ((vt0.c1 IN (v0.c2)) IN (((v0.c1) NOT BETWEEN (t1.c2) AND (v0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM v0 INNER JOIN t1 ON CASE WHEN t1.c0 THEN '1076981978' WHEN t1.c0 THEN vt0.c0 END COLLATE RTRIM CROSS JOIN vt0 ON CASE WHEN (t1.c0 IN (t1.c2)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN TRIM(vt0.c0) THEN (+ (t1.c2)) WHEN ((vt0.c0) ISNULL) THEN 0.44548958324190213 WHEN ((((((((((((vt0.c1)OR(v0.c0)))AND(vt0.c0)))OR(t1.c1)))OR(v0.c1)))OR(v0.c2)))OR(t1.c1)) THEN (NOT (v0.c2)) ELSE v0.c0 END WHERE (((((CAST(vt0.c0 AS REAL)) IS FALSE))AND(((((((((((((((t1.c0)OR(t1.c1)))OR(vt0.c1)))OR(t1.c2)))OR(t1.c1)))AND(vt0.c1)))OR(v0.c1))) IS FALSE)))) ORDER BY ((((((((((((vt0.c1)OR(t1.c2)))AND(v0.c1)))OR((v0.c0 IN (v0.c2)))))AND(CAST(x'372e' AS REAL))))AND((NOT (vt0.c0)))))OR(0.37271296441285184)) ASC  NULLS LAST, NULL ASC, (((t1.c1)==(t1.c2)) IN (']?/XE'));
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c1, v0.c2, v0.c0)) NOT BETWEEN ((0.734756894278496, ((vt0.c1) ISNULL), v0.c1 COLLATE BINARY)) AND (((((v0.c1))<=((v0.c0))), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c0) AND (vt0.c1))))));
SELECT * FROM vt0, v0 WHERE ((((((vt0.c1, v0.c2, v0.c0)) NOT BETWEEN ((0.734756894278496, ((vt0.c1) ISNULL), v0.c1 COLLATE BINARY)) AND (((((v0.c1))<=((v0.c0))), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c0) AND (vt0.c1))))))AND((((+ (v0.c2))) IS FALSE)))) ORDER BY ((((((((((CASE v0.c1  WHEN vt0.c0 THEN v0.c2 WHEN v0.c2 THEN vt0.c1 END)AND(CAST(vt0.c0 AS TEXT))))AND(CAST(vt0.c0 AS REAL))))AND(ABS(DISTINCT v0.c0))))OR(((vt0.c1) NOTNULL))))AND((vt0.c0 IN ()))) ASC  NULLS FIRST INTERSECT SELECT * FROM vt0, v0 WHERE (NULL COLLATE BINARY) ORDER BY ((((((((((CASE v0.c1  WHEN vt0.c0 THEN v0.c2 WHEN v0.c2 THEN vt0.c1 END)AND(CAST(vt0.c0 AS TEXT))))AND(CAST(vt0.c0 AS REAL))))AND(ABS(DISTINCT v0.c0))))OR(((vt0.c1) NOTNULL))))AND((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c1, v0.c2, v0.c0)) NOT BETWEEN ((0.734756894278496, ((vt0.c1) ISNULL), v0.c1 COLLATE BINARY)) AND (((((v0.c1))<=((v0.c0))), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c0) AND (vt0.c1))))));
SELECT * FROM vt0, v0 WHERE ((((((vt0.c1, v0.c2, v0.c0)) NOT BETWEEN ((0.734756894278496, ((vt0.c1) ISNULL), v0.c1 COLLATE BINARY)) AND (((((v0.c1))<=((v0.c0))), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c0) AND (vt0.c1))))))AND((((+ (v0.c2))) IS FALSE)))) ORDER BY ((((((((((CASE v0.c1  WHEN vt0.c0 THEN v0.c2 WHEN v0.c2 THEN vt0.c1 END)AND(CAST(vt0.c0 AS TEXT))))AND(CAST(vt0.c0 AS REAL))))AND(ABS(DISTINCT v0.c0))))OR(((vt0.c1) NOTNULL))))AND((vt0.c0 IN ()))) ASC  NULLS FIRST INTERSECT SELECT * FROM vt0, v0 WHERE (NULL COLLATE BINARY) ORDER BY ((((((((((CASE v0.c1  WHEN vt0.c0 THEN v0.c2 WHEN v0.c2 THEN vt0.c1 END)AND(CAST(vt0.c0 AS TEXT))))AND(CAST(vt0.c0 AS REAL))))AND(ABS(DISTINCT v0.c0))))OR(((vt0.c1) NOTNULL))))AND((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT MIN(v0.c1) FROM v0, t1 WHERE (CAST('-1838248370' COLLATE BINARY AS REAL));
SELECT ALL MIN(v0.c1) FROM v0, t1 WHERE (((CAST('-1838248370' COLLATE BINARY AS REAL))AND(t1.c1))) LIMIT 0X0 INTERSECT SELECT ALL MIN(v0.c1) FROM v0, t1 WHERE ((((((v0.c1, '-1711740645', v0.c2)) BETWEEN ((t1.c2, t1.c2, v0.c1)) AND ((v0.c1, v0.c1, t1.c1))))OR(CASE t1.c0  WHEN v0.c0 THEN t1.c2 END))) LIMIT 0x0;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (0.14019992864274156) ORDER BY LIKELIHOOD(DISTINCT ((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0)), t1.c1) DESC, (1.200319629E9 IN ())  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (0.14019992864274156) ORDER BY LIKE('D<Cg', ((((((((t1.c0)AND(t1.c2)))OR(t1.c1)))AND(t1.c1)))OR(t1.c1)), 'p') DESC, TRIM(t1.c2) COLLATE BINARY  NULLS LAST;
SELECT MIN(t1.c2) FROM v0, vt0, t1 WHERE (1916915768) ORDER BY (((v0.c1 IN (t1.c1, v0.c1))) BETWEEN (t1.c2 COLLATE RTRIM) AND ((t1.c0 IN (0xffffffffcf1d12cb)))) ASC, ((CASE vt0.c0  WHEN v0.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE vt0.c0 END)|(((vt0.c0) IS TRUE)))  NULLS LAST, ((((((t1.c2)AND(x'45d6857c')))OR(vt0.c0)))>(v0.c1 COLLATE RTRIM));
SELECT MIN(t1.c2) FROM v0, vt0, t1 WHERE (((1916915768)AND((((((((((x'34ff' IN (t1.c2)))AND('ഞl')))AND((v0.c1 IN (vt0.c0)))))AND(((t1.c1)||(vt0.c0)))))AND(CAST(t1.c1 AS INTEGER)))))) ORDER BY (((v0.c1 IN (t1.c1, v0.c1))) BETWEEN (t1.c2 COLLATE RTRIM) AND ((t1.c0 IN (0xffffffffcf1d12cb)))) ASC, ((CASE vt0.c0  WHEN v0.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE vt0.c0 END)|(((vt0.c0) IS TRUE)))  NULLS LAST, ((((((t1.c2)AND(x'45d6857c')))OR(vt0.c0)))>(v0.c1 COLLATE RTRIM)) LIMIT 1 INTERSECT SELECT MIN(t1.c2) FROM v0, vt0, t1 WHERE (((((((((t1.c1)AND(v0.c2)))AND(0.09569903554500503)))OR(t1.c2)))AND(v0.c2)) COLLATE NOCASE) ORDER BY (((v0.c1 IN (t1.c1, v0.c1))) BETWEEN (t1.c2 COLLATE RTRIM) AND ((t1.c0 IN (0Xffffffffcf1d12cb)))) ASC, ((CASE vt0.c0  WHEN v0.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE vt0.c0 END)|(((vt0.c0) IS TRUE)))  NULLS LAST, ((((((t1.c2)AND(x'45d6857c')))OR(vt0.c0)))>(v0.c1 COLLATE RTRIM)) LIMIT 0x1;
SELECT ALL * FROM t1, vt0, v0 WHERE (CAST(t1.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((NULL) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((v0.c2, t1.c2, v0.c0, -7.82663409E8, vt0.c0, v0.c2, NULL))<((t1.c1, v0.c2, t1.c1, v0.c1, v0.c1, t1.c2, t1.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt0, v0 WHERE (CAST(t1.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((NULL) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((v0.c2, t1.c2, v0.c0, -7.82663409E8, vt0.c0, v0.c2, NULL))<((t1.c1, v0.c2, t1.c1, v0.c1, v0.c1, t1.c2, t1.c0))))) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1, vt0, v0 WHERE (((NULL COLLATE NOCASE) NOTNULL)) ORDER BY ((NULL) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((v0.c2, t1.c2, v0.c0, -7.82663409E8, vt0.c0, v0.c2, NULL))<((t1.c1, v0.c2, t1.c1, v0.c1, v0.c1, t1.c2, t1.c0))))) ASC  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1, vt0, v0 WHERE (CAST(t1.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((NULL) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((v0.c2, t1.c2, v0.c0, -7.82663409E8, vt0.c0, v0.c2, NULL))<((t1.c1, v0.c2, t1.c1, v0.c1, v0.c1, t1.c2, t1.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt0, v0 WHERE (CAST(t1.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((NULL) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((v0.c2, t1.c2, v0.c0, -7.82663409E8, vt0.c0, v0.c2, NULL))<((t1.c1, v0.c2, t1.c1, v0.c1, v0.c1, t1.c2, t1.c0))))) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1, vt0, v0 WHERE (((NULL COLLATE NOCASE) NOTNULL)) ORDER BY ((NULL) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((v0.c2, t1.c2, v0.c0, -7.82663409E8, vt0.c0, v0.c2, NULL))<((t1.c1, v0.c2, t1.c1, v0.c1, v0.c1, t1.c2, t1.c0))))) ASC  NULLS LAST LIMIT 0;
SELECT ALL MAX(t1.c2) FROM vt0, v0, t1 WHERE ((((- (v0.c0)))-(((v0.c0)|(v0.c2))))) ORDER BY ((((v0.c0)<<(t1.c1))) NOT NULL) ASC;
SELECT MAX(t1.c2) FROM vt0, v0, t1 WHERE ((((- (v0.c0)))-(((v0.c0)|(v0.c2))))) ORDER BY ((((t1.c2)OR('')))AND(((t1.c2)IS(vt0.c1))))  NULLS FIRST;
SELECT MAX(v0.c1) FROM vt0 INNER JOIN v0 ON (NOT (((v0.c1) BETWEEN (v0.c2) AND (vt0.c1)))) WHERE ((((v0.c1, vt0.c1, vt0.c1)) BETWEEN ((v0.c1, v0.c0, v0.c0)) AND ((vt0.c1, v0.c1, v0.c2))) COLLATE NOCASE);
SELECT ALL MAX(v0.c1) FROM vt0 INNER JOIN v0 ON (NOT (((v0.c1) BETWEEN (v0.c2) AND (vt0.c1)))) WHERE ((((v0.c1, vt0.c1, vt0.c1)) BETWEEN ((v0.c1, v0.c0, v0.c0)) AND ((vt0.c1, v0.c1, v0.c2))) COLLATE NOCASE) ORDER BY (((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) IS FALSE)) AND (x'49'))  NULLS FIRST, (((('1352201322') NOT NULL))<<(vt0.c1)) ASC  NULLS LAST, LAST_INSERT_ROWID() DESC  NULLS FIRST, vt0.c1 ASC LIMIT 0;
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((CASE WHEN t1.c1 THEN t1.c1 END) IS FALSE) WHERE (t1.c2);
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON ((CASE WHEN t1.c1 THEN t1.c1 END) IS FALSE) WHERE (((t1.c2)AND(LOWER(DISTINCT CASE WHEN t1.c1 THEN vt0.c0 WHEN vt0.c1 THEN t1.c2 WHEN t1.c1 THEN vt0.c1 ELSE t1.c2 END))));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((CASE WHEN t1.c1 THEN t1.c1 END) IS FALSE) WHERE (t1.c2);
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON ((CASE WHEN t1.c1 THEN t1.c1 END) IS FALSE) WHERE (((t1.c2)AND(LOWER(DISTINCT CASE WHEN t1.c1 THEN vt0.c0 WHEN vt0.c1 THEN t1.c2 WHEN t1.c1 THEN vt0.c1 ELSE t1.c2 END))));
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c1 AS NUMERIC)  WHEN (((x'e7')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c1)%(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN (((vt0.c1))<=((vt0.c1))) END) ORDER BY (~ ((+ (x'3a4f1a'))))  NULLS LAST, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT ALL * FROM vt0 WHERE (((CASE CAST(vt0.c1 AS NUMERIC)  WHEN (((x'e7')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c1)%(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN (((vt0.c1))<=((vt0.c1))) END)AND(vt0.c0))) ORDER BY (~ ((+ (x'3a4f1a'))))  NULLS LAST, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS INTEGER))) ASC INTERSECT SELECT * FROM vt0 WHERE (CASE ((vt0.c1)!=(vt0.c0))  WHEN LENGTH(vt0.c0) THEN ((x'cf')IS(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0)<(vt0.c0)) END) ORDER BY (~ ((+ (x'3a4f1a'))))  NULLS LAST, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c1 AS NUMERIC)  WHEN (((x'e7')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c1)%(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN (((vt0.c1))<=((vt0.c1))) END) ORDER BY (~ ((+ (x'3a4f1a'))))  NULLS LAST, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT ALL * FROM vt0 WHERE (((CASE CAST(vt0.c1 AS NUMERIC)  WHEN (((x'e7')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c1)%(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN (((vt0.c1))<=((vt0.c1))) END)AND(vt0.c0))) ORDER BY (~ ((+ (x'3a4f1a'))))  NULLS LAST, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS INTEGER))) ASC INTERSECT SELECT * FROM vt0 WHERE (CASE ((vt0.c1)!=(vt0.c0))  WHEN LENGTH(vt0.c0) THEN ((x'cf')IS(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0)<(vt0.c0)) END) ORDER BY (~ ((+ (x'3a4f1a'))))  NULLS LAST, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT * FROM vt0, t1 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, vt0.c1))|(((t1.c1)IS(t1.c0)))));
SELECT ALL * FROM vt0, t1 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, vt0.c1))|(((t1.c1)IS(t1.c0))))) INTERSECT SELECT * FROM vt0, t1 WHERE ((((t1.c2, t1.c2)) BETWEEN ((((((((((((t1.c1)OR(t1.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(t1.c1)), CASE t1.c1  WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN vt0.c0 WHEN vt0.c1 THEN t1.c1 END)) AND (('-42416002', (+ (t1.c2))))));
SELECT * FROM vt0, t1 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, vt0.c1))|(((t1.c1)IS(t1.c0)))));
SELECT MIN(t1.c1) FROM t1, v0 WHERE ((NOT (((t1.c2)<(t1.c2))))) ORDER BY (((((v0.c0)<<(v0.c0)), ((v0.c2) BETWEEN (t1.c1) AND (v0.c0)), ((v0.c0)OR(t1.c2))))>=((x'a8', (('-171360514')%(t1.c1)), ((v0.c2) BETWEEN (t1.c0) AND (v0.c1)))))  NULLS FIRST, (((((t1.c0)OR(v0.c1)))OR('1382790579')) IN ((((t1.c1, t1.c1))>=((v0.c2, v0.c0))), HEX(t1.c2)))  NULLS LAST, ('s' IN (CAST(v0.c1 AS REAL)))  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1, v0 WHERE ((((NOT (((t1.c2)<(t1.c2)))))AND(CASE WHEN (v0.c0 IN (v0.c1)) THEN (((t1.c0))<=((t1.c1))) WHEN (NOT (v0.c0)) THEN t1.c1 END))) ORDER BY (((((v0.c0)<<(v0.c0)), ((v0.c2) BETWEEN (t1.c1) AND (v0.c0)), ((v0.c0)OR(t1.c2))))>=((x'a8', (('-171360514')%(t1.c1)), ((v0.c2) BETWEEN (t1.c0) AND (v0.c1)))))  NULLS FIRST, (((((t1.c0)OR(v0.c1)))OR('1382790579')) IN ((((t1.c1, t1.c1))>=((v0.c2, v0.c0))), HEX(t1.c2)))  NULLS LAST, ('s' IN (CAST(v0.c1 AS REAL)))  NULLS LAST LIMIT 0X4 INTERSECT SELECT ALL MIN(t1.c1) FROM t1, v0 WHERE (((t1.c1) NOT NULL) COLLATE RTRIM) ORDER BY (((((v0.c0)<<(v0.c0)), ((v0.c2) BETWEEN (t1.c1) AND (v0.c0)), ((v0.c0)OR(t1.c2))))>=((x'a8', (('-171360514')%(t1.c1)), ((v0.c2) BETWEEN (t1.c0) AND (v0.c1)))))  NULLS FIRST, (((((t1.c0)OR(v0.c1)))OR('1382790579')) IN ((((t1.c1, t1.c1))>=((v0.c2, v0.c0))), HEX(t1.c2)))  NULLS LAST, ('s' IN (CAST(v0.c1 AS REAL)))  NULLS LAST LIMIT 4;
SELECT ALL MIN(t1.c2) FROM v0 CROSS JOIN t1 ON CASE WHEN ((t1.c1)LIKE(v0.c0)) THEN ((t1.c1)|(t1.c0)) END WHERE ((~ ((t1.c2 IN (t1.c0)))));
SELECT MIN(t1.c2) FROM v0 CROSS JOIN t1 ON CASE WHEN ((t1.c1)LIKE(v0.c0)) THEN ((t1.c1)|(t1.c0)) END WHERE ((((~ ((t1.c2 IN (t1.c0)))))AND(((t1.c0)==(v0.c1)) COLLATE RTRIM))) ORDER BY 0.6294515069686835  NULLS LAST LIMIT 0x1 INTERSECT SELECT ALL MIN(t1.c2) FROM v0 CROSS JOIN t1 ON CASE WHEN ((t1.c1)LIKE(v0.c0)) THEN ((t1.c1)|(t1.c0)) END WHERE (((CASE v0.c1  WHEN t1.c0 THEN v0.c2 END) IS FALSE)) ORDER BY 0.6294515069686835  NULLS LAST LIMIT 1;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (((x'')) NOT BETWEEN ((t1.c0)) AND ((((vt0.c1)<(v0.c0))))) CROSS JOIN v0 ON vt0.c0 WHERE (v0.c1);
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON (((x'')) NOT BETWEEN ((t1.c0)) AND ((((vt0.c1)<(v0.c0))))) CROSS JOIN v0 ON vt0.c0 WHERE (((v0.c1)AND(((((((((((t1.c0)OR(v0.c0)))AND('969729598')))AND(v0.c2)))AND(v0.c2))) NOT BETWEEN (((vt0.c0)&(v0.c2))) AND (((t1.c2)/(NULL))))))) LIMIT 0X1 INTERSECT SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (((x'')) NOT BETWEEN ((t1.c0)) AND ((((vt0.c1)<(v0.c0))))) CROSS JOIN v0 ON vt0.c0 WHERE ((((- (vt0.c1)))<<(CAST(v0.c0 AS INTEGER)))) LIMIT 0x1;
SELECT ALL MIN(vt0.c1) FROM t1, vt0, v0 WHERE ((ABS(t1.c0) IN ()));
SELECT ALL MIN(vt0.c1) FROM t1, vt0, v0 WHERE ((ABS(t1.c0) IN ())) ORDER BY CASE CASE WHEN t1.c1 THEN vt0.c0 WHEN t1.c1 THEN t1.c1 END  WHEN vt0.c1 THEN (- (v0.c1)) WHEN ((t1.c2) BETWEEN (v0.c1) AND (v0.c1)) THEN (~ (v0.c1)) WHEN v0.c2 COLLATE RTRIM THEN (v0.c0 IN (t1.c1)) WHEN ((t1.c1) IS TRUE) THEN '-336308551' WHEN SQLITE_COMPILEOPTION_GET(v0.c1) THEN ((x'5c21') BETWEEN (v0.c2) AND (t1.c2)) ELSE SQLITE_COMPILEOPTION_GET(t1.c2) END ASC  NULLS LAST LIMIT 1;
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (t1.c1);
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (((t1.c1)AND(NULL))) ORDER BY (CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN t1.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END IN (t1.c0 COLLATE BINARY))  NULLS LAST, (((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((v0.c1))))AND(((vt0.c1) NOTNULL))))OR(((((((t1.c1)AND(t1.c0)))AND(x'')))AND(v0.c0)))) DESC  NULLS FIRST, ((((((CAST(t1.c2 AS TEXT))AND(json_remove(v0.c1, v0.c0, v0.c0))))OR(((((0x1d60ba50)AND(t1.c2)))OR(vt0.c0)))))OR(((NULL)LIKE(v0.c0)))) INTERSECT SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (vt0.c1) ORDER BY (CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN t1.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END IN (t1.c0 COLLATE BINARY))  NULLS LAST, (((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((v0.c1))))AND(((vt0.c1) NOTNULL))))OR(((((((t1.c1)AND(t1.c0)))AND(x'')))AND(v0.c0)))) DESC  NULLS FIRST, ((((((CAST(t1.c2 AS TEXT))AND(json_remove(v0.c1, v0.c0, v0.c0))))OR(((((0X1d60ba50)AND(t1.c2)))OR(vt0.c0)))))OR(((NULL)LIKE(v0.c0))));
SELECT * FROM vt0, v0, t1 WHERE (rtreenode(vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))) ORDER BY ',a'  NULLS FIRST, ((((v0.c2)>=(v0.c2)))GLOB(((v0.c2) IS TRUE)))  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (rtreenode(vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))) ORDER BY ((((t1.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))) IN ((vt0.c0 IN ())));
SELECT * FROM vt0, v0, t1 WHERE (rtreenode(vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))) ORDER BY ',a'  NULLS FIRST, ((((v0.c2)>=(v0.c2)))GLOB(((v0.c2) IS TRUE)))  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (rtreenode(vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))) ORDER BY ((((t1.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))) IN ((vt0.c0 IN ())));
SELECT MAX(t1.c1) FROM t1 WHERE (((t1.c0) NOT NULL));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((t1.c0) NOT NULL)) LIMIT 0;
SELECT ALL MIN(v0.c2) FROM t1, v0 WHERE (TRIM(t1.c1) COLLATE RTRIM);
SELECT MIN(v0.c2) FROM t1, v0 WHERE (((TRIM(t1.c1) COLLATE RTRIM)AND(CAST(CASE WHEN t1.c2 THEN v0.c0 WHEN v0.c0 THEN t1.c2 WHEN v0.c2 THEN v0.c1 ELSE t1.c1 END AS NUMERIC)))) LIMIT 0x1;
SELECT MAX(t1.c1) FROM vt0, t1 LEFT OUTER JOIN v0 ON (((((vt0.c1, vt0.c0))<=((v0.c0, v0.c0)))) NOT NULL) WHERE ((((v0.c1)) BETWEEN ((rtreenode(t1.c0, v0.c0))) AND ((((t1.c2) ISNULL))))) ORDER BY (((((vt0.c0) BETWEEN (v0.c1) AND (t1.c0))))!=((CASE WHEN v0.c0 THEN v0.c0 END))) ASC  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM vt0, t1 INNER JOIN v0 ON (((((vt0.c1, vt0.c0))<=((v0.c0, v0.c0)))) NOT NULL) WHERE ((((((v0.c1)) BETWEEN ((rtreenode(t1.c0, v0.c0))) AND ((((t1.c2) ISNULL)))))AND(((((((((v0.c0) NOT BETWEEN (t1.c2) AND (vt0.c0)))OR(((((((((((((v0.c0)OR(t1.c1)))OR(t1.c0)))AND(v0.c0)))OR(vt0.c1)))OR(t1.c2)))AND(v0.c2)))))OR(vt0.c0)))OR(((((t1.c2)AND(vt0.c1)))OR(v0.c0))))))) ORDER BY (((((((('-29862664')AND((((t1.c1, 0xffffffffebf456b9))<=((t1.c1, t1.c0))))))OR((((v0.c2))<((v0.c0))))))OR('969729598')))OR(v0.c2))  NULLS FIRST, (((t1.c2) ISNULL) IN ()) ASC LIMIT 0X2 INTERSECT SELECT ALL MAX(t1.c1) FROM vt0, t1 INNER JOIN v0 ON (((((vt0.c1, vt0.c0))<=((v0.c0, v0.c0)))) NOT NULL) WHERE (((((((((TYPEOF(DISTINCT 0.7061208012178406))OR(((((v0.c0)OR(t1.c0)))OR(v0.c0)))))AND(v0.c2)))AND(((vt0.c1) IS TRUE))))AND((((v0.c1, t1.c0, v0.c1, t1.c2))<(('D੽8މ', v0.c2, v0.c2, t1.c1)))))) ORDER BY (((((((('-29862664')AND((((t1.c1, -336308551))<=((t1.c1, t1.c0))))))OR((((v0.c2))<((v0.c0))))))OR('969729598')))OR(v0.c2))  NULLS FIRST, (((t1.c2) ISNULL) IN ()) ASC LIMIT 2;
SELECT ALL * FROM t1 WHERE (CASE WHEN (((t1.c1, t1.c0))<=((t1.c2, t1.c0))) THEN json_insert(t1.c1, t1.c2, t1.c0) ELSE ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY ((((t1.c2)LIKE(t1.c0))) BETWEEN (CAST(t1.c2 AS BLOB)) AND (CASE t1.c1  WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN (((t1.c1, t1.c0))<=((t1.c2, t1.c0))) THEN json_insert(t1.c1, t1.c2, t1.c0) ELSE ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) END)AND(((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)))) ORDER BY ((((t1.c2)LIKE(t1.c0))) BETWEEN (CAST(t1.c2 AS BLOB)) AND (CASE t1.c1  WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE WHEN (((t1.c1, t1.c0))<=((t1.c2, t1.c0))) THEN json_insert(t1.c1, t1.c2, t1.c0) ELSE ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY ((((t1.c2)LIKE(t1.c0))) BETWEEN (CAST(t1.c2 AS BLOB)) AND (CASE t1.c1  WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN (((t1.c1, t1.c0))<=((t1.c2, t1.c0))) THEN json_insert(t1.c1, t1.c2, t1.c0) ELSE ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)) END)AND(((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)))) ORDER BY ((((t1.c2)LIKE(t1.c0))) BETWEEN (CAST(t1.c2 AS BLOB)) AND (CASE t1.c1  WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)) DESC  NULLS LAST;
SELECT * FROM v0 NATURAL JOIN vt0 LEFT OUTER JOIN t1 ON (NOT (CASE t1.c2  WHEN t1.c1 THEN v0.c2 ELSE vt0.c1 END)) WHERE (8.08120973E8) ORDER BY ((((v0.c2)IS NOT(vt0.c1))) BETWEEN ((v0.c0 IN ())) AND (((v0.c1) IS FALSE)))  NULLS FIRST;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 LEFT OUTER JOIN t1 ON (NOT (CASE t1.c2  WHEN t1.c1 THEN v0.c2 ELSE vt0.c1 END)) WHERE (8.08120973E8) ORDER BY '1038010726' ASC, ((((t1.c0) NOTNULL))GLOB((- (t1.c2)))) DESC  NULLS FIRST, '1033629718', LIKELY(t1.c0)  NULLS LAST LIMIT 0X0;
SELECT * FROM v0 NATURAL JOIN vt0 LEFT OUTER JOIN t1 ON (NOT (CASE t1.c2  WHEN t1.c1 THEN v0.c2 ELSE vt0.c1 END)) WHERE (8.08120973E8) ORDER BY ((((v0.c2)IS NOT(vt0.c1))) BETWEEN ((v0.c0 IN ())) AND (((v0.c1) IS FALSE)))  NULLS FIRST;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 LEFT OUTER JOIN t1 ON (NOT (CASE t1.c2  WHEN t1.c1 THEN v0.c2 ELSE vt0.c1 END)) WHERE (8.08120973E8) ORDER BY '1038010726' ASC, ((((t1.c0) NOTNULL))GLOB((- (t1.c2)))) DESC  NULLS FIRST, '1033629718', LIKELY(t1.c0)  NULLS LAST LIMIT 0X0;
SELECT * FROM v0, vt0, t1 WHERE (CASE vt0.c1  WHEN ((((((t1.c1)OR(v0.c1)))AND(v0.c1)))AND(vt0.c1)) THEN ((((((t1.c2)OR(v0.c0)))AND('22')))AND(vt0.c1)) END) ORDER BY 'WsY'  NULLS FIRST;
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((CASE vt0.c1  WHEN ((((((t1.c1)OR(v0.c1)))AND(v0.c1)))AND(vt0.c1)) THEN ((((((t1.c2)OR(v0.c0)))AND('22')))AND(vt0.c1)) END)AND((v0.c0 COLLATE BINARY IN ())))) ORDER BY 'WsY'  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((('676643428')*((~ (v0.c1))))) ORDER BY 'WsY'  NULLS FIRST LIMIT 0;
SELECT * FROM v0, vt0, t1 WHERE (CASE vt0.c1  WHEN ((((((t1.c1)OR(v0.c1)))AND(v0.c1)))AND(vt0.c1)) THEN ((((((t1.c2)OR(v0.c0)))AND('22')))AND(vt0.c1)) END) ORDER BY 'WsY'  NULLS FIRST;
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((CASE vt0.c1  WHEN ((((((t1.c1)OR(v0.c1)))AND(v0.c1)))AND(vt0.c1)) THEN ((((((t1.c2)OR(v0.c0)))AND('22')))AND(vt0.c1)) END)AND((v0.c0 COLLATE BINARY IN ())))) ORDER BY 'WsY'  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((('676643428')*((~ (v0.c1))))) ORDER BY 'WsY'  NULLS FIRST LIMIT 0;
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))AND((v0.c1 IN ()))));
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))AND((v0.c1 IN ())))) ORDER BY ((CAST(-1.329581092E9 AS REAL)) NOT BETWEEN ((- (v0.c1))) AND (((v0.c2) IS FALSE))), TYPEOF(x'') DESC;
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))AND((v0.c1 IN ()))));
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))AND((v0.c1 IN ())))) ORDER BY ((CAST(-1.329581092E9 AS REAL)) NOT BETWEEN ((- (v0.c1))) AND (((v0.c2) IS FALSE))), TYPEOF(x'') DESC;
SELECT * FROM t1, v0 WHERE (CASE v0.c2 COLLATE BINARY  WHEN ((v0.c2)>>(0xffffffffc6643ff9)) THEN ((t1.c1)-(v0.c2)) WHEN ((t1.c0) NOT NULL) THEN TOTAL_CHANGES() END) ORDER BY ((v0.c2 COLLATE RTRIM)%(((t1.c1)<(t1.c0)))) ASC;
SELECT ALL * FROM t1, v0 WHERE (((CASE v0.c2 COLLATE BINARY  WHEN ((v0.c2)>>(-966508551)) THEN ((t1.c1)-(v0.c2)) WHEN ((t1.c0) NOT NULL) THEN TOTAL_CHANGES() END)AND(((CASE '1475706442'  WHEN v0.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c0 END) BETWEEN ((((t1.c0, t1.c0, v0.c1, t1.c0, v0.c1, v0.c1))<((v0.c0, t1.c0, v0.c2, v0.c1, t1.c1, v0.c2)))) AND (((v0.c0) BETWEEN (NULL) AND (v0.c2))))))) ORDER BY ((0.39136151917807493)=((- (v0.c2)))) ASC  NULLS FIRST, ((((v0.c2)/(t1.c0)))LIKE(x''))  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1, v0 WHERE (CASE v0.c2 COLLATE BINARY  WHEN ((v0.c2)>>(0xffffffffc6643ff9)) THEN ((t1.c1)-(v0.c2)) WHEN ((t1.c0) NOT NULL) THEN TOTAL_CHANGES() END) ORDER BY ((v0.c2 COLLATE RTRIM)%(((t1.c1)<(t1.c0)))) ASC;
SELECT ALL * FROM t1, v0 WHERE (((CASE v0.c2 COLLATE BINARY  WHEN ((v0.c2)>>(-966508551)) THEN ((t1.c1)-(v0.c2)) WHEN ((t1.c0) NOT NULL) THEN TOTAL_CHANGES() END)AND(((CASE '1475706442'  WHEN v0.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c0 END) BETWEEN ((((t1.c0, t1.c0, v0.c1, t1.c0, v0.c1, v0.c1))<((v0.c0, t1.c0, v0.c2, v0.c1, t1.c1, v0.c2)))) AND (((v0.c0) BETWEEN (NULL) AND (v0.c2))))))) ORDER BY ((0.39136151917807493)=((- (v0.c2)))) ASC  NULLS FIRST, ((((v0.c2)/(t1.c0)))LIKE(x''))  NULLS FIRST LIMIT 0X0;
SELECT * FROM v0, vt0, t1 WHERE ((((((((((((t1.c1)OR(t1.c2)))OR(v0.c0)))OR(vt0.c0)))AND(t1.c1)), v0.c2, t1.c0, t1.c0))<=((CASE WHEN vt0.c1 THEN v0.c1 END, ((v0.c0)-(v0.c0)), NULL, (t1.c2 IN (v0.c2, t1.c1)))))) ORDER BY CASE WHEN ((0xfffffffff768be12) NOTNULL) THEN ((((((v0.c1)AND(t1.c1)))AND(t1.c1)))OR(v0.c1)) WHEN v0.c1 COLLATE NOCASE THEN ((t1.c1)/(t1.c2)) WHEN ((t1.c2) ISNULL) THEN t1.c1 WHEN v0.c1 COLLATE BINARY THEN ((vt0.c1)<=(v0.c0)) WHEN (t1.c1 IN (t1.c0)) THEN CASE t1.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 WHEN v0.c2 THEN v0.c0 END END DESC  NULLS LAST, (((+ (vt0.c1)))==(((((((((vt0.c1)OR(vt0.c0)))OR(v0.c1)))OR(t1.c1)))OR(t1.c2)))), (~ (CAST(NULL AS NUMERIC))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0, t1 WHERE ((((((((((((t1.c1)OR(t1.c2)))OR(v0.c0)))OR(vt0.c0)))AND(t1.c1)), v0.c2, t1.c0, t1.c0))<=((CASE WHEN vt0.c1 THEN v0.c1 END, ((v0.c0)-(v0.c0)), NULL, (t1.c2 IN (v0.c2, t1.c1)))))) ORDER BY CASE WHEN ((0Xfffffffff768be12) NOTNULL) THEN ((((((v0.c1)AND(t1.c1)))AND(t1.c1)))OR(v0.c1)) WHEN v0.c1 COLLATE NOCASE THEN ((t1.c1)/(t1.c2)) WHEN ((t1.c2) ISNULL) THEN t1.c1 WHEN v0.c1 COLLATE BINARY THEN ((vt0.c1)<=(v0.c0)) WHEN (t1.c1 IN (t1.c0)) THEN CASE t1.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 WHEN v0.c2 THEN v0.c0 END END DESC  NULLS LAST, (((+ (vt0.c1)))==(((((((((vt0.c1)OR(vt0.c0)))OR(v0.c1)))OR(t1.c1)))OR(t1.c2)))), (~ (CAST(NULL AS NUMERIC))) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM v0, vt0, t1 WHERE ((((((((((((t1.c1)OR(t1.c2)))OR(v0.c0)))OR(vt0.c0)))AND(t1.c1)), v0.c2, t1.c0, t1.c0))<=((CASE WHEN vt0.c1 THEN v0.c1 END, ((v0.c0)-(v0.c0)), NULL, (t1.c2 IN (v0.c2, t1.c1)))))) ORDER BY CASE WHEN ((0xfffffffff768be12) NOTNULL) THEN ((((((v0.c1)AND(t1.c1)))AND(t1.c1)))OR(v0.c1)) WHEN v0.c1 COLLATE NOCASE THEN ((t1.c1)/(t1.c2)) WHEN ((t1.c2) ISNULL) THEN t1.c1 WHEN v0.c1 COLLATE BINARY THEN ((vt0.c1)<=(v0.c0)) WHEN (t1.c1 IN (t1.c0)) THEN CASE t1.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 WHEN v0.c2 THEN v0.c0 END END DESC  NULLS LAST, (((+ (vt0.c1)))==(((((((((vt0.c1)OR(vt0.c0)))OR(v0.c1)))OR(t1.c1)))OR(t1.c2)))), (~ (CAST(NULL AS NUMERIC))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0, t1 WHERE ((((((((((((t1.c1)OR(t1.c2)))OR(v0.c0)))OR(vt0.c0)))AND(t1.c1)), v0.c2, t1.c0, t1.c0))<=((CASE WHEN vt0.c1 THEN v0.c1 END, ((v0.c0)-(v0.c0)), NULL, (t1.c2 IN (v0.c2, t1.c1)))))) ORDER BY CASE WHEN ((0Xfffffffff768be12) NOTNULL) THEN ((((((v0.c1)AND(t1.c1)))AND(t1.c1)))OR(v0.c1)) WHEN v0.c1 COLLATE NOCASE THEN ((t1.c1)/(t1.c2)) WHEN ((t1.c2) ISNULL) THEN t1.c1 WHEN v0.c1 COLLATE BINARY THEN ((vt0.c1)<=(v0.c0)) WHEN (t1.c1 IN (t1.c0)) THEN CASE t1.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 WHEN v0.c2 THEN v0.c0 END END DESC  NULLS LAST, (((+ (vt0.c1)))==(((((((((vt0.c1)OR(vt0.c0)))OR(v0.c1)))OR(t1.c1)))OR(t1.c2)))), (~ (CAST(NULL AS NUMERIC))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ()))>=(((0.2911474869571983)-(t1.c1)))));
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ()))>=(((0.2911474869571983)-(t1.c1))))) INTERSECT SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ()))>=(((0.2911474869571983)-(t1.c1)))));
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ()))>=(((0.2911474869571983)-(t1.c1))))) INTERSECT SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT MIN(v0.c0) FROM t1, vt0, v0 WHERE ((NOT ((((t1.c2, v0.c0)) BETWEEN ((v0.c2, v0.c0)) AND ((t1.c2, vt0.c1))))));
SELECT MIN(v0.c0) FROM t1, vt0, v0 WHERE ((NOT ((((t1.c2, v0.c0)) BETWEEN ((v0.c2, v0.c0)) AND ((t1.c2, vt0.c1)))))) ORDER BY SQLITE_COMPILEOPTION_USED(((v0.c0)/(v0.c1))) DESC, ((((v0.c2)<<(t1.c1)))-(((vt0.c0) IS TRUE))) DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM v0, t1 WHERE (0.38495685792211454);
SELECT DISTINCT * FROM v0, t1 WHERE (0.38495685792211454) ORDER BY ((((((CASE WHEN t1.c2 THEN t1.c1 WHEN v0.c2 THEN '}' WHEN t1.c0 THEN 'jL^' END)OR(((t1.c1)<<(t1.c2)))))AND(t1.c2 COLLATE NOCASE)))OR(((((((((((t1.c2)AND(t1.c0)))AND(t1.c1)))AND(v0.c2)))AND(t1.c0)))OR(t1.c0)))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE (((CAST(v0.c1 AS REAL)) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND ((0.43690776401271825 IN ())))) ORDER BY ((((((CASE WHEN t1.c2 THEN t1.c1 WHEN v0.c2 THEN '}' WHEN t1.c0 THEN 'jL^' END)OR(((t1.c1)<<(t1.c2)))))AND(t1.c2 COLLATE NOCASE)))OR(((((((((((t1.c2)AND(t1.c0)))AND(t1.c1)))AND(v0.c2)))AND(t1.c0)))OR(t1.c0)))) DESC  NULLS LAST;
SELECT * FROM v0, t1 WHERE (0.38495685792211454);
SELECT DISTINCT * FROM v0, t1 WHERE (0.38495685792211454) ORDER BY ((((((CASE WHEN t1.c2 THEN t1.c1 WHEN v0.c2 THEN '}' WHEN t1.c0 THEN 'jL^' END)OR(((t1.c1)<<(t1.c2)))))AND(t1.c2 COLLATE NOCASE)))OR(((((((((((t1.c2)AND(t1.c0)))AND(t1.c1)))AND(v0.c2)))AND(t1.c0)))OR(t1.c0)))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE (((CAST(v0.c1 AS REAL)) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND ((0.43690776401271825 IN ())))) ORDER BY ((((((CASE WHEN t1.c2 THEN t1.c1 WHEN v0.c2 THEN '}' WHEN t1.c0 THEN 'jL^' END)OR(((t1.c1)<<(t1.c2)))))AND(t1.c2 COLLATE NOCASE)))OR(((((((((((t1.c2)AND(t1.c0)))AND(t1.c1)))AND(v0.c2)))AND(t1.c0)))OR(t1.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (TRIM(DISTINCT (~ (v0.c0)), (v0.c2 IN (v0.c2)))) ORDER BY CASE WHEN '543944764' THEN ((((((v0.c1)AND(v0.c0)))OR(v0.c2)))OR('U ')) WHEN ((v0.c1)>(v0.c2)) THEN ((v0.c0)GLOB(v0.c1)) WHEN ((((1.28282561E8)AND(v0.c2)))OR(v0.c0)) THEN ((v0.c2)IS NOT(v0.c0)) ELSE CAST(v0.c0 AS NUMERIC) END ASC, (((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) IN (v0.c0 COLLATE BINARY, v0.c2, ((v0.c2)LIKE(v0.c1))))  NULLS LAST, ((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c1)))OR('-1481228347')))AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))IS(CAST(v0.c1 AS BLOB))) DESC;
SELECT DISTINCT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT (~ (v0.c0)), (v0.c2 IN (v0.c2)))) ORDER BY load_extension(v0.c1) DESC;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((((vt0.c1 IN ()))AND(vt0.c0)))AND((~ (vt0.c0)))))OR(((vt0.c0) NOTNULL)));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((((((vt0.c1 IN ()))AND(vt0.c0)))AND((~ (vt0.c0)))))OR(((vt0.c0) NOTNULL))) LIMIT 0 INTERSECT SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE) ORDER BY (((((((vt0.c1 IN ()))AND(vt0.c0)))AND((~ (vt0.c0)))))OR(((vt0.c0) NOTNULL))) LIMIT 0x0;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((((vt0.c1 IN ()))AND(vt0.c0)))AND((~ (vt0.c0)))))OR(((vt0.c0) NOTNULL)));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((((((vt0.c1 IN ()))AND(vt0.c0)))AND((~ (vt0.c0)))))OR(((vt0.c0) NOTNULL))) LIMIT 0 INTERSECT SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE) ORDER BY (((((((vt0.c1 IN ()))AND(vt0.c0)))AND((~ (vt0.c0)))))OR(((vt0.c0) NOTNULL))) LIMIT 0x0;
SELECT * FROM vt0, v0, t1 WHERE ((((((((vt0.c0)OR(t1.c2)))OR(t1.c2)))AND(vt0.c0)) IN (0.011792981199444497, (v0.c2 IN ()), ((((((((((NULL)OR(t1.c0)))OR(t1.c0)))AND(t1.c2)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((((((((vt0.c0)OR(t1.c2)))OR(t1.c2)))AND(vt0.c0)) IN (0.011792981199444497, (v0.c2 IN ()), ((((((((((NULL)OR(t1.c0)))OR(t1.c0)))AND(t1.c2)))AND(vt0.c1)))OR(vt0.c0)))))AND(4.72236244E8)));
SELECT * FROM vt0, v0, t1 WHERE ((((((((vt0.c0)OR(t1.c2)))OR(t1.c2)))AND(vt0.c0)) IN (0.011792981199444497, (v0.c2 IN ()), ((((((((((NULL)OR(t1.c0)))OR(t1.c0)))AND(t1.c2)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((((((((vt0.c0)OR(t1.c2)))OR(t1.c2)))AND(vt0.c0)) IN (0.011792981199444497, (v0.c2 IN ()), ((((((((((NULL)OR(t1.c0)))OR(t1.c0)))AND(t1.c2)))AND(vt0.c1)))OR(vt0.c0)))))AND(4.72236244E8)));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((- ((vt0.c0 IN ())))) ORDER BY t1.c1 ASC;
SELECT COUNT(*) FROM vt0, t1 WHERE ((- ((vt0.c0 IN ())))) ORDER BY t1.c1, (- ((t1.c0 IN ()))) LIMIT 3;
SELECT MAX(t1.c2) FROM vt0, v0, t1 WHERE (((CAST(t1.c0 AS INTEGER)) ISNULL));
SELECT DISTINCT MAX(t1.c2) FROM vt0, v0, t1 WHERE (((((CAST(t1.c0 AS INTEGER)) ISNULL))AND(((((((t1.c2)IS(v0.c0)))AND(CASE WHEN 0.16631034738115102 THEN v0.c1 ELSE t1.c2 END)))OR(((t1.c2)<(vt0.c1))))))) ORDER BY (((0xffffffff96cf26b1, ((v0.c1) NOT NULL), v0.c2 COLLATE RTRIM, (((t1.c1, t1.c2))<=((v0.c1, vt0.c1)))))<=(((vt0.c1 IN ()), t1.c2, ((vt0.c0)==(v0.c2)), t1.c1 COLLATE NOCASE))) ASC  NULLS FIRST, (((((x'') ISNULL), CAST(vt0.c1 AS INTEGER), (t1.c1 IN (t1.c0))))<=((UNLIKELY(v0.c1), ((t1.c0)/(t1.c2)), v0.c2 COLLATE BINARY)))  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (CAST((NOT (v0.c0)) AS NUMERIC)) ORDER BY ROUND(TRIM(DISTINCT v0.c0), vt0.c1) DESC, (((((((((('6nv#nslr')AND(ABS(DISTINCT v0.c1))))OR(((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))))AND(1.576123895E9)))AND(((((((v0.c2)AND(v0.c0)))OR(vt0.c1)))AND(v0.c1)))))OR((~ (v0.c2))))  NULLS LAST, ((((((v0.c1)AND(vt0.c1)))OR(vt0.c1)))&(((('724060006', v0.c1))=((vt0.c1, vt0.c1))))) ASC;
SELECT ALL * FROM vt0, v0 WHERE (((CAST((NOT (v0.c0)) AS NUMERIC))AND((CASE WHEN v0.c2 THEN v0.c1 ELSE vt0.c1 END IN (((v0.c2) BETWEEN (v0.c0) AND (v0.c0)), ''))))) ORDER BY ROUND(TRIM(DISTINCT v0.c0), vt0.c1) DESC, (((((((((('6nv#nslr')AND(ABS(DISTINCT v0.c1))))OR(((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))))AND(1.576123895E9)))AND(((((((v0.c2)AND(v0.c0)))OR(vt0.c1)))AND(v0.c1)))))OR((~ (v0.c2))))  NULLS LAST, ((((((v0.c1)AND(vt0.c1)))OR(vt0.c1)))&(((('724060006', v0.c1))==((vt0.c1, vt0.c1))))) ASC;
SELECT * FROM vt0, v0 WHERE (CAST((NOT (v0.c0)) AS NUMERIC)) ORDER BY ROUND(TRIM(DISTINCT v0.c0), vt0.c1) DESC, (((((((((('6nv#nslr')AND(ABS(DISTINCT v0.c1))))OR(((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))))AND(1.576123895E9)))AND(((((((v0.c2)AND(v0.c0)))OR(vt0.c1)))AND(v0.c1)))))OR((~ (v0.c2))))  NULLS LAST, ((((((v0.c1)AND(vt0.c1)))OR(vt0.c1)))&(((('724060006', v0.c1))=((vt0.c1, vt0.c1))))) ASC;
SELECT ALL * FROM vt0, v0 WHERE (((CAST((NOT (v0.c0)) AS NUMERIC))AND((CASE WHEN v0.c2 THEN v0.c1 ELSE vt0.c1 END IN (((v0.c2) BETWEEN (v0.c0) AND (v0.c0)), ''))))) ORDER BY ROUND(TRIM(DISTINCT v0.c0), vt0.c1) DESC, (((((((((('6nv#nslr')AND(ABS(DISTINCT v0.c1))))OR(((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))))AND(1.576123895E9)))AND(((((((v0.c2)AND(v0.c0)))OR(vt0.c1)))AND(v0.c1)))))OR((~ (v0.c2))))  NULLS LAST, ((((((v0.c1)AND(vt0.c1)))OR(vt0.c1)))&(((('724060006', v0.c1))==((vt0.c1, vt0.c1))))) ASC;
SELECT MAX(v0.c1) FROM v0, vt0 WHERE ('') ORDER BY vt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM  NULLS LAST, CAST(']FyrංX' AS TEXT) DESC  NULLS LAST;
SELECT MAX(v0.c1) FROM v0, vt0 WHERE ((('')AND((((v0.c2, v0.c2, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, v0.c2, v0.c2, vt0.c1)) AND ((vt0.c1, NULL, v0.c1, v0.c1))) COLLATE BINARY))) ORDER BY vt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM  NULLS LAST, CAST(']FyrංX' AS TEXT) DESC  NULLS LAST;
SELECT ALL MAX(v0.c1) FROM v0 WHERE (json_array(((v0.c1) NOTNULL), ((0x5fc72c51) IS TRUE), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)), ((v0.c0)OR(v0.c0)), (v0.c2 IN ()))) ORDER BY ((((((((((((v0.c2)AND(v0.c1)))OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c2))) BETWEEN ((- (x'06fd'))) AND ((('Js[') BETWEEN (v0.c2) AND (v0.c2))));
SELECT DISTINCT MAX(v0.c1) FROM v0 WHERE (((json_array(((v0.c1) NOTNULL), ((0x5fc72c51) IS TRUE), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)), ((v0.c0)OR(v0.c0)), (v0.c2 IN ())))AND(((((((((v0.c2)OR(v0.c0)))AND(v0.c2)))OR(v0.c2)))OR(0.4778733809542095)) COLLATE RTRIM))) ORDER BY ((((((((((((v0.c2)AND(v0.c1)))OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c2))) BETWEEN ((- (x'06fd'))) AND ((('Js[') BETWEEN (v0.c2) AND (v0.c2)))) LIMIT 0x3;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((((vt0.c1) BETWEEN (0.6958397726128006) AND (vt0.c1))) NOT NULL));
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((((((vt0.c1) BETWEEN (0.6958397726128006) AND (vt0.c1))) NOT NULL))AND(CASE CAST(vt0.c0 AS BLOB)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c1, vt0.c1, vt0.c1, vt0.c0))>((vt0.c0, 0.6104594697990225, 0.3168594412451855, vt0.c1))) END))) ORDER BY CAST(((vt0.c0)>>(vt0.c1)) AS INTEGER) ASC, (- (((((((((((((x'80')OR(0.4130503742341175)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) LIMIT 2;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t1 ON 1662360983 WHERE (CASE WHEN (- (v0.c2)) THEN MAX(v0.c2, v0.c2, t1.c2) ELSE (v0.c2 IN (t1.c0)) END) ORDER BY CASE ((((v0.c2)OR(v0.c1)))OR(v0.c2))  WHEN ((x'') IS FALSE) THEN ((v0.c2) IS FALSE) WHEN (NOT (t1.c2)) THEN CAST(v0.c2 AS BLOB) END  NULLS FIRST, (('132882391') NOT BETWEEN (ABS(DISTINCT v0.c2)) AND (t1.c1 COLLATE BINARY)) DESC;
SELECT COUNT(*) FROM v0 CROSS JOIN t1 ON 1662360983 WHERE (CASE WHEN (- (v0.c2)) THEN MAX(v0.c2, v0.c2, t1.c2) ELSE (v0.c2 IN (t1.c0)) END) ORDER BY CAST((- (t1.c0)) AS TEXT)  NULLS FIRST, CAST((((v0.c2, v0.c0, t1.c1)) BETWEEN ((v0.c0, t1.c0, t1.c2)) AND ((NULL, '969729598', '	'))) AS NUMERIC)  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM v0 CROSS JOIN t1 ON 0X63159d97 WHERE ('') ORDER BY CAST((- (t1.c0)) AS TEXT)  NULLS FIRST, CAST((((v0.c2, v0.c0, t1.c1)) BETWEEN ((v0.c0, t1.c0, t1.c2)) AND ((NULL, '969729598', '	'))) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN x'' ELSE x'83' END) ORDER BY (((- (vt0.c0)))GLOB(vt0.c0 COLLATE NOCASE)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN 0.8135473319076165 THEN vt0.c1 ELSE vt0.c1 END)>(vt0.c1)) DESC;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN x'' ELSE x'83' END) ORDER BY (((- (vt0.c0)))GLOB(vt0.c0 COLLATE NOCASE)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN 0.8135473319076165 THEN vt0.c1 ELSE vt0.c1 END)>(vt0.c1)) DESC LIMIT 0x0;
SELECT MIN(t1.c1) FROM vt0, t1 WHERE ((((t1.c0, t1.c2, vt0.c0)) NOT BETWEEN ((LIKELY(t1.c1), ((t1.c1) IS TRUE), t1.c2 COLLATE RTRIM)) AND ((CASE WHEN t1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t1.c2 END, vt0.c1 COLLATE RTRIM, vt0.c1)))) ORDER BY (((t1.c2 IN (t1.c1)))IS(((vt0.c1) BETWEEN (t1.c0) AND (t1.c0)))), CASE WHEN (NOT ('-1476258452')) THEN '0.13173013954964807' WHEN ((t1.c0)<<(vt0.c1)) THEN ((t1.c2)AND(vt0.c0)) WHEN COALESCE(DISTINCT t1.c1, vt0.c0) THEN ((0.5164994251387323) NOT BETWEEN (vt0.c0) AND (t1.c0)) END ASC  NULLS FIRST;
SELECT MIN(t1.c1) FROM vt0, t1 WHERE ((((t1.c0, t1.c2, vt0.c0)) NOT BETWEEN ((LIKELY(t1.c1), ((t1.c1) IS TRUE), t1.c2 COLLATE RTRIM)) AND ((CASE WHEN t1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t1.c2 END, vt0.c1 COLLATE RTRIM, vt0.c1)))) ORDER BY HEX(DISTINCT UNICODE(vt0.c1)) LIMIT 2;
SELECT MIN(v0.c2) FROM v0, vt0 WHERE (v0.c0);
SELECT MIN(v0.c2) FROM v0, vt0 WHERE (((v0.c0)AND(((ABS(DISTINCT v0.c0))%(((((((v0.c0)OR(v0.c2)))OR(vt0.c0)))OR(v0.c1))))))) LIMIT 0X2 INTERSECT SELECT MIN(v0.c2) FROM v0, vt0 WHERE ((((NOT (v0.c2)))IS NOT(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) LIMIT 2;
SELECT ALL * FROM t1 NOT INDEXED WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(CASE ((t1.c2)LIKE(t1.c2))  WHEN ((t1.c1) IS FALSE) THEN t1.c1 WHEN t1.c2 COLLATE RTRIM THEN ((t1.c0)LIKE(t1.c1)) END))) ORDER BY ((((t1.c0)+(t1.c0))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM t1 NOT INDEXED WHERE (t1.c1);
SELECT DISTINCT * FROM t1 WHERE (((t1.c1)AND(CASE ((t1.c2)LIKE(t1.c2))  WHEN ((t1.c1) IS FALSE) THEN t1.c1 WHEN t1.c2 COLLATE RTRIM THEN ((t1.c0)LIKE(t1.c1)) END))) ORDER BY ((((t1.c0)+(t1.c0))) IS FALSE)  NULLS LAST;
SELECT ALL MAX(t1.c2) FROM v0, t1 WHERE (((((t1.c0)<<(t1.c2)))<=((t1.c1 IN (v0.c2, t1.c2))))) ORDER BY (((v0.c0, v0.c1, v0.c2, v0.c1)) NOT BETWEEN ((v0.c2 COLLATE BINARY, (~ (t1.c0)), CASE t1.c0  WHEN t1.c0 THEN 0.24468620663921103 WHEN v0.c1 THEN v0.c2 WHEN t1.c1 THEN v0.c0 ELSE v0.c2 END, (NOT (t1.c2)))) AND ((t1.c1 COLLATE NOCASE, ((((t1.c0)OR(t1.c0)))AND(0.274502212648428)), ((v0.c1)IS(v0.c1)), ((((t1.c2)AND(t1.c0)))AND(t1.c1))))), (NOT (LIKELIHOOD(DISTINCT t1.c0, t1.c2)))  NULLS FIRST;
SELECT ALL MAX(t1.c2) FROM v0, t1 WHERE (((((((t1.c0)<<(t1.c2)))<((t1.c1 IN (v0.c2, t1.c2)))))AND((+ (0.6886927388199612))))) ORDER BY NULL ASC  NULLS FIRST, ((((v0.c0 IN (t1.c2))))>=((CAST(t1.c0 AS NUMERIC)))) INTERSECT SELECT ALL MAX(t1.c2) FROM v0, t1 WHERE (t1.c1) ORDER BY NULL ASC  NULLS FIRST, ((((v0.c0 IN (t1.c2))))>=((CAST(t1.c0 AS NUMERIC))));
SELECT MIN(v0.c0) FROM vt0 INNER JOIN t1 ON CAST(v0.c2 AS INTEGER) COLLATE RTRIM CROSS JOIN v0 ON (((- (v0.c2)))LIKE((NOT (t1.c2)))) WHERE (0.365527834207267) ORDER BY ABS(DISTINCT vt0.c1), (- (vt0.c0 COLLATE BINARY))  NULLS LAST, (((((t1.c2 IN ('4Wj.Wjp')))AND(NULL COLLATE RTRIM)))OR(((t1.c2) BETWEEN ('o') AND (v0.c0)))) DESC  NULLS FIRST;
SELECT DISTINCT MIN(v0.c0) FROM vt0 INNER JOIN t1 ON CAST(v0.c2 AS INTEGER) COLLATE RTRIM CROSS JOIN v0 ON (((- (v0.c2)))LIKE((NOT (t1.c2)))) WHERE (0.365527834207267) ORDER BY ABS(DISTINCT vt0.c1), (- (vt0.c0 COLLATE BINARY))  NULLS LAST, (((((t1.c2 IN ('4Wj.Wjp')))AND(NULL COLLATE RTRIM)))OR(((t1.c2) BETWEEN ('o') AND (v0.c0)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(v0.c0) FROM vt0 INNER JOIN t1 ON CAST(v0.c2 AS INTEGER) COLLATE RTRIM CROSS JOIN v0 ON (((- (v0.c2)))LIKE((NOT (t1.c2)))) WHERE (((((((vt0.c0)AND(v0.c2)))AND(vt0.c0))) NOTNULL)) ORDER BY ABS(DISTINCT vt0.c1), (- (vt0.c0 COLLATE BINARY))  NULLS LAST, (((((t1.c2 IN ('4Wj.Wjp')))AND(NULL COLLATE RTRIM)))OR(((t1.c2) BETWEEN ('o') AND (v0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON (((v0.c2 IN ())) NOT NULL) CROSS JOIN v0 ON ((((((((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(GLOB(vt0.c1, v0.c1))))OR(CASE vt0.c1  WHEN v0.c1 THEN v0.c1 END)))OR(0xffffffff90af44c1)))AND(((((((t1.c0)OR(t1.c2)))OR(v0.c1)))OR(vt0.c1)))) WHERE ((((v0.c2) NOT BETWEEN (v0.c0) AND (t1.c0)) IN (((((((((vt0.c1)OR(v0.c0)))AND(NULL)))AND(t1.c0)))OR(v0.c0)))));
SELECT DISTINCT COUNT(*) FROM t1 INNER JOIN vt0 ON (((v0.c2 IN ())) NOT NULL) CROSS JOIN v0 ON ((((((((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(GLOB(vt0.c1, v0.c1))))OR(CASE vt0.c1  WHEN v0.c1 THEN v0.c1 END)))OR(0Xffffffff90af44c1)))AND(((((((t1.c0)OR(t1.c2)))OR(v0.c1)))OR(vt0.c1)))) WHERE ((((v0.c2) NOT BETWEEN (v0.c0) AND (t1.c0)) IN (((((((((vt0.c1)OR(v0.c0)))AND(NULL)))AND(t1.c0)))OR(v0.c0))))) ORDER BY ((((t1.c0) NOT BETWEEN (v0.c2) AND (vt0.c0))) NOTNULL) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 INNER JOIN vt0 ON (((v0.c2 IN ())) NOT NULL) CROSS JOIN v0 ON ((((((((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(GLOB(vt0.c1, v0.c1))))OR(CASE vt0.c1  WHEN v0.c1 THEN v0.c1 END)))OR(-1867561791)))AND(((((((t1.c0)OR(t1.c2)))OR(v0.c1)))OR(vt0.c1)))) WHERE (((json(vt0.c0))<<(CASE t1.c2  WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((t1.c0) NOT BETWEEN (v0.c2) AND (vt0.c0))) NOTNULL) DESC LIMIT 0;
SELECT * FROM t1 WHERE (t1.c2) ORDER BY NULLIF(t1.c0, t1.c0 COLLATE RTRIM) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c2)AND((((t1.c1)||(t1.c0)) IN ())))) ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c0)<<(t1.c0)))) AND ((((t1.c0) IS TRUE)))) ASC  NULLS LAST, (((((((((((((((~ (t1.c2)))AND(t1.c2)))OR((t1.c1 IN (t1.c0)))))AND((~ (t1.c1)))))AND(NULL)))AND((t1.c2 IN ()))))AND(CAST(x'f5b25a67' AS NUMERIC))))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c1))))  NULLS FIRST LIMIT 2;
SELECT * FROM t1 WHERE (t1.c2) ORDER BY NULLIF(t1.c0, t1.c0 COLLATE RTRIM) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((t1.c2)AND((((t1.c1)||(t1.c0)) IN ())))) ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c0)<<(t1.c0)))) AND ((((t1.c0) IS TRUE)))) ASC  NULLS LAST, (((((((((((((((~ (t1.c2)))AND(t1.c2)))OR((t1.c1 IN (t1.c0)))))AND((~ (t1.c1)))))AND(NULL)))AND((t1.c2 IN ()))))AND(CAST(x'f5b25a67' AS NUMERIC))))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c1))))  NULLS FIRST LIMIT 2;
SELECT * FROM t1 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c2 THEN NULL END) IS TRUE) WHERE (((NULL COLLATE NOCASE) BETWEEN ((((v0.c1, v0.c1))=((t1.c2, t1.c0)))) AND ((- (t1.c0))))) ORDER BY (((t1.c2, t1.c1, v0.c0)) BETWEEN ((TYPEOF(v0.c0), CASE v0.c0  WHEN t1.c0 THEN v0.c2 ELSE t1.c2 END, (('60642831') IS TRUE))) AND ((0.7275859983933362 COLLATE NOCASE, ((v0.c2) ISNULL), ((('-1341530015', v0.c1, t1.c1, t1.c1, v0.c2)) NOT BETWEEN ((x'', v0.c1, -336308551, t1.c1, t1.c0)) AND ((v0.c0, t1.c2, v0.c1, t1.c0, v0.c1)))))) DESC, (+ (TYPEOF(DISTINCT 0.1428962249228023))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c2 THEN NULL END) IS TRUE) WHERE (((NULL COLLATE NOCASE) BETWEEN ((((v0.c1, v0.c1))==((t1.c2, t1.c0)))) AND ((- (t1.c0))))) ORDER BY (((t1.c2, t1.c1, v0.c0)) BETWEEN ((TYPEOF(v0.c0), CASE v0.c0  WHEN t1.c0 THEN v0.c2 ELSE t1.c2 END, (('60642831') IS TRUE))) AND ((0.7275859983933362 COLLATE NOCASE, ((v0.c2) ISNULL), ((('-1341530015', v0.c1, t1.c1, t1.c1, v0.c2)) NOT BETWEEN ((x'', v0.c1, 0xffffffffebf456b9, t1.c1, t1.c0)) AND ((v0.c0, t1.c2, v0.c1, t1.c0, v0.c1)))))) DESC, (+ (TYPEOF(DISTINCT 0.1428962249228023))) DESC  NULLS LAST LIMIT 0X2;
SELECT * FROM t1 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c2 THEN NULL END) IS TRUE) WHERE (((NULL COLLATE NOCASE) BETWEEN ((((v0.c1, v0.c1))=((t1.c2, t1.c0)))) AND ((- (t1.c0))))) ORDER BY (((t1.c2, t1.c1, v0.c0)) BETWEEN ((TYPEOF(v0.c0), CASE v0.c0  WHEN t1.c0 THEN v0.c2 ELSE t1.c2 END, (('60642831') IS TRUE))) AND ((0.7275859983933362 COLLATE NOCASE, ((v0.c2) ISNULL), ((('-1341530015', v0.c1, t1.c1, t1.c1, v0.c2)) NOT BETWEEN ((x'', v0.c1, -336308551, t1.c1, t1.c0)) AND ((v0.c0, t1.c2, v0.c1, t1.c0, v0.c1)))))) DESC, (+ (TYPEOF(DISTINCT 0.1428962249228023))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c2 THEN NULL END) IS TRUE) WHERE (((NULL COLLATE NOCASE) BETWEEN ((((v0.c1, v0.c1))==((t1.c2, t1.c0)))) AND ((- (t1.c0))))) ORDER BY (((t1.c2, t1.c1, v0.c0)) BETWEEN ((TYPEOF(v0.c0), CASE v0.c0  WHEN t1.c0 THEN v0.c2 ELSE t1.c2 END, (('60642831') IS TRUE))) AND ((0.7275859983933362 COLLATE NOCASE, ((v0.c2) ISNULL), ((('-1341530015', v0.c1, t1.c1, t1.c1, v0.c2)) NOT BETWEEN ((x'', v0.c1, 0xffffffffebf456b9, t1.c1, t1.c0)) AND ((v0.c0, t1.c2, v0.c1, t1.c0, v0.c1)))))) DESC, (+ (TYPEOF(DISTINCT 0.1428962249228023))) DESC  NULLS LAST LIMIT 0X2;
SELECT ALL * FROM vt0, v0, t1 WHERE (CASE v0.c0  WHEN t1.c2 THEN v0.c0 WHEN v0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY CAST(((v0.c0)OR(t1.c2)) AS REAL) ASC, (((v0.c1 IN (v0.c1))) BETWEEN (t1.c1) AND ((vt0.c1 IN ())))  NULLS LAST, x'' ASC  NULLS LAST;
SELECT * FROM vt0, v0, t1 WHERE (CASE v0.c0  WHEN t1.c2 THEN v0.c0 WHEN v0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY ((((NULL)>(v0.c0)))%(v0.c0 COLLATE RTRIM)) ASC INTERSECT SELECT * FROM vt0, v0, t1 WHERE (SQLITE_COMPILEOPTION_GET(t1.c1) COLLATE BINARY) ORDER BY ((((NULL)>(v0.c0)))%(v0.c0 COLLATE RTRIM)) ASC;
SELECT ALL * FROM vt0, v0, t1 WHERE (CASE v0.c0  WHEN t1.c2 THEN v0.c0 WHEN v0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY CAST(((v0.c0)OR(t1.c2)) AS REAL) ASC, (((v0.c1 IN (v0.c1))) BETWEEN (t1.c1) AND ((vt0.c1 IN ())))  NULLS LAST, x'' ASC  NULLS LAST;
SELECT * FROM vt0, v0, t1 WHERE (CASE v0.c0  WHEN t1.c2 THEN v0.c0 WHEN v0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY ((((NULL)>(v0.c0)))%(v0.c0 COLLATE RTRIM)) ASC INTERSECT SELECT * FROM vt0, v0, t1 WHERE (SQLITE_COMPILEOPTION_GET(t1.c1) COLLATE BINARY) ORDER BY ((((NULL)>(v0.c0)))%(v0.c0 COLLATE RTRIM)) ASC;
SELECT ALL * FROM vt0, t1, v0 WHERE (CASE CASE WHEN t1.c0 THEN x'6193' WHEN t1.c2 THEN v0.c0 ELSE v0.c2 END  WHEN ((((0.1438509631774132)AND(vt0.c1)))AND(-1265118681)) THEN CAST(t1.c1 AS NUMERIC) WHEN ((v0.c2)AND(t1.c0)) THEN ((v0.c0) NOT NULL) END) ORDER BY ((CASE v0.c1  WHEN t1.c1 THEN v0.c0 WHEN t1.c0 THEN vt0.c1 END) ISNULL), (vt0.c1 COLLATE BINARY IN (CASE WHEN v0.c0 THEN v0.c1 WHEN '[' THEN t1.c1 END)), ((t1.c0)IS NOT(CAST(v0.c1 AS BLOB)))  NULLS LAST;
SELECT * FROM vt0, t1, v0 WHERE (((CASE CASE WHEN t1.c0 THEN x'6193' WHEN t1.c2 THEN v0.c0 ELSE v0.c2 END  WHEN ((((0.1438509631774132)AND(vt0.c1)))AND(0xffffffffb497d227)) THEN CAST(t1.c1 AS NUMERIC) WHEN ((v0.c2)AND(t1.c0)) THEN ((v0.c0) NOT NULL) END)AND(((v0.c1)*(((v0.c2)>=(t1.c2))))))) ORDER BY ((CASE v0.c1  WHEN t1.c1 THEN v0.c0 WHEN t1.c0 THEN vt0.c1 END) ISNULL), (vt0.c1 COLLATE BINARY IN (CASE WHEN v0.c0 THEN v0.c1 WHEN '[' THEN t1.c1 END)), ((t1.c0)IS NOT(CAST(v0.c1 AS BLOB)))  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt0, t1, v0 WHERE (CASE CASE WHEN t1.c0 THEN x'6193' WHEN t1.c2 THEN v0.c0 ELSE v0.c2 END  WHEN ((((0.1438509631774132)AND(vt0.c1)))AND(-1265118681)) THEN CAST(t1.c1 AS NUMERIC) WHEN ((v0.c2)AND(t1.c0)) THEN ((v0.c0) NOT NULL) END) ORDER BY ((CASE v0.c1  WHEN t1.c1 THEN v0.c0 WHEN t1.c0 THEN vt0.c1 END) ISNULL), (vt0.c1 COLLATE BINARY IN (CASE WHEN v0.c0 THEN v0.c1 WHEN '[' THEN t1.c1 END)), ((t1.c0)IS NOT(CAST(v0.c1 AS BLOB)))  NULLS LAST;
SELECT * FROM vt0, t1, v0 WHERE (((CASE CASE WHEN t1.c0 THEN x'6193' WHEN t1.c2 THEN v0.c0 ELSE v0.c2 END  WHEN ((((0.1438509631774132)AND(vt0.c1)))AND(0xffffffffb497d227)) THEN CAST(t1.c1 AS NUMERIC) WHEN ((v0.c2)AND(t1.c0)) THEN ((v0.c0) NOT NULL) END)AND(((v0.c1)*(((v0.c2)>=(t1.c2))))))) ORDER BY ((CASE v0.c1  WHEN t1.c1 THEN v0.c0 WHEN t1.c0 THEN vt0.c1 END) ISNULL), (vt0.c1 COLLATE BINARY IN (CASE WHEN v0.c0 THEN v0.c1 WHEN '[' THEN t1.c1 END)), ((t1.c0)IS NOT(CAST(v0.c1 AS BLOB)))  NULLS LAST LIMIT 1;
SELECT MAX(vt0.c0) FROM vt0 WHERE (load_extension(x'3e', ((vt0.c0)<>(vt0.c1)))) ORDER BY IFNULL(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), vt0.c0);
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (load_extension(x'3e', ((vt0.c0)!=(vt0.c1)))) ORDER BY ((NULL)<<(vt0.c1 COLLATE BINARY)), ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) NOT NULL), ((((NOT (vt0.c0))))<(((vt0.c1 IN ())))) DESC LIMIT 1;
SELECT * FROM v0, t1, vt0 WHERE ((~ ((- (vt0.c1)))));
SELECT ALL * FROM v0, t1, vt0 WHERE ((~ ((- (vt0.c1))))) LIMIT 0x0 INTERSECT SELECT ALL * FROM v0, t1, vt0 WHERE (t1.c1) LIMIT 0;
SELECT * FROM v0, t1, vt0 WHERE ((~ ((- (vt0.c1)))));
SELECT ALL * FROM v0, t1, vt0 WHERE ((~ ((- (vt0.c1))))) LIMIT 0x0 INTERSECT SELECT ALL * FROM v0, t1, vt0 WHERE (t1.c1) LIMIT 0;
SELECT ALL MAX(v0.c0) FROM v0, t1, vt0 WHERE ((((vt0.c1, t1.c0, vt0.c1, t1.c2)) BETWEEN (((NOT (vt0.c0)), ((v0.c2)>(v0.c0)), CAST(vt0.c0 AS INTEGER), ((t1.c1) NOTNULL))) AND ((CASE '%pt[⚱#_6蛐'  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END, vt0.c0, ((vt0.c1) BETWEEN (t1.c2) AND (vt0.c0)), t1.c0 COLLATE BINARY)))) ORDER BY CAST(((t1.c1)%(t1.c0)) AS NUMERIC) ASC, ((0.38578293327532764)&((+ (v0.c0))))  NULLS LAST;
SELECT DISTINCT MAX(v0.c0) FROM v0, t1, vt0 WHERE ((((vt0.c1, t1.c0, vt0.c1, t1.c2)) BETWEEN (((NOT (vt0.c0)), ((v0.c2)>(v0.c0)), CAST(vt0.c0 AS INTEGER), ((t1.c1) NOTNULL))) AND ((CASE '%pt[⚱#_6蛐'  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END, vt0.c0, ((vt0.c1) BETWEEN (t1.c2) AND (vt0.c0)), t1.c0 COLLATE BINARY)))) ORDER BY CAST(((t1.c1)%(t1.c0)) AS NUMERIC) ASC, ((0.38578293327532764)&((+ (v0.c0))))  NULLS LAST LIMIT 2;
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE ((NOT ((NOT (v0.c1))))) ORDER BY (((((vt0.c0))>((v0.c2))))!=(((((v0.c1)OR(v0.c0)))AND(vt0.c0)))), CASE ((t1.c0)|(t1.c0))  WHEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (NULL)) THEN ((((v0.c1)AND(v0.c2)))AND(v0.c2)) WHEN ((t1.c1)<=(t1.c1)) THEN ((((v0.c0)OR(vt0.c0)))AND(vt0.c1)) WHEN ((((((t1.c2)AND(t1.c2)))AND(v0.c1)))OR(t1.c0)) THEN (~ (t1.c1)) ELSE load_extension(vt0.c1, '-1329581092') END  NULLS FIRST, ((((((((vt0.c1)OR(v0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(t1.c2)) COLLATE BINARY;
SELECT COUNT(*) FROM t1, v0, vt0 WHERE ((((NOT ((NOT (v0.c1)))))AND(CAST((~ (v0.c1)) AS NUMERIC)))) ORDER BY (((((vt0.c0))>((v0.c2))))!=(((((v0.c1)OR(v0.c0)))AND(vt0.c0)))), CASE ((t1.c0)|(t1.c0))  WHEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (NULL)) THEN ((((v0.c1)AND(v0.c2)))AND(v0.c2)) WHEN ((t1.c1)<=(t1.c1)) THEN ((((v0.c0)OR(vt0.c0)))AND(vt0.c1)) WHEN ((((((t1.c2)AND(t1.c2)))AND(v0.c1)))OR(t1.c0)) THEN (~ (t1.c1)) ELSE load_extension(vt0.c1, '-1329581092') END  NULLS FIRST, ((((((((vt0.c1)OR(v0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(t1.c2)) COLLATE BINARY INTERSECT SELECT COUNT(*) FROM t1, v0, vt0 WHERE (CAST(((t1.c0) NOT NULL) AS BLOB)) ORDER BY (((((vt0.c0))>((v0.c2))))!=(((((v0.c1)OR(v0.c0)))AND(vt0.c0)))), CASE ((t1.c0)|(t1.c0))  WHEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (NULL)) THEN ((((v0.c1)AND(v0.c2)))AND(v0.c2)) WHEN ((t1.c1)<=(t1.c1)) THEN ((((v0.c0)OR(vt0.c0)))AND(vt0.c1)) WHEN ((((((t1.c2)AND(t1.c2)))AND(v0.c1)))OR(t1.c0)) THEN (~ (t1.c1)) ELSE load_extension(vt0.c1, '-1329581092') END  NULLS FIRST, ((((((((vt0.c1)OR(v0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(t1.c2)) COLLATE BINARY;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((((((vt0.c1)IS(v0.c2)))OR((((v0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND((NOT (t1.c0)))))AND(((t1.c1)-(vt0.c1)))));
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((((((vt0.c1)IS(v0.c2)))OR((((v0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND((NOT (t1.c0)))))AND(((t1.c1)-(vt0.c1))))) LIMIT 0;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((((((vt0.c1)IS(v0.c2)))OR((((v0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND((NOT (t1.c0)))))AND(((t1.c1)-(vt0.c1)))));
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((((((vt0.c1)IS(v0.c2)))OR((((v0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND((NOT (t1.c0)))))AND(((t1.c1)-(vt0.c1))))) LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c2)OR(t1.c0)))AND(t1.c0))) BETWEEN (((((((((((0.300020439858365)OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))AND(t1.c2)))OR(t1.c0))) AND (CAST(t1.c2 AS REAL))));
SELECT COUNT(*) FROM t1 WHERE (((((((((t1.c2)OR(t1.c0)))AND(t1.c0))) BETWEEN (((((((((((0.300020439858365)OR(t1.c0)))AND(t1.c0)))AND(t1.c1)))AND(t1.c2)))OR(t1.c0))) AND (CAST(t1.c2 AS REAL))))AND(((((t1.c1) NOTNULL)) NOT NULL)))) LIMIT 0X0 INTERSECT SELECT COUNT(*) FROM t1 WHERE (MAX(((t1.c2)/(t1.c1)), t1.c2, ((((t1.c2)AND(t1.c0)))AND(t1.c2)))) LIMIT 0x0;
SELECT * FROM t1, vt0, v0 WHERE (vt0.c0);
SELECT ALL * FROM t1, vt0, v0 WHERE (((vt0.c0)AND((((vt0.c0)) NOT BETWEEN (((t1.c2 IN (t1.c2, v0.c2)))) AND ((((t1.c1)<(vt0.c1)))))))) INTERSECT SELECT * FROM t1, vt0, v0 WHERE (((((((((((((((((((v0.c1)AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(v0.c2)))AND(((vt0.c0)<=(t1.c1)))))AND(((v0.c0)GLOB(vt0.c1)))))AND(((((((((((((t1.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))AND(vt0.c0)))OR(788259297)))))AND(t1.c0 COLLATE NOCASE)))AND((((t1.c1, vt0.c1, v0.c1)) NOT BETWEEN ((t1.c0, vt0.c0, t1.c0)) AND ((v0.c1, t1.c0, v0.c1))))));
SELECT * FROM t1, vt0, v0 WHERE (vt0.c0);
SELECT ALL * FROM t1, vt0, v0 WHERE (((vt0.c0)AND((((vt0.c0)) NOT BETWEEN (((t1.c2 IN (t1.c2, v0.c2)))) AND ((((t1.c1)<(vt0.c1)))))))) INTERSECT SELECT * FROM t1, vt0, v0 WHERE (((((((((((((((((((v0.c1)AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(v0.c2)))AND(((vt0.c0)<=(t1.c1)))))AND(((v0.c0)GLOB(vt0.c1)))))AND(((((((((((((t1.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))AND(vt0.c0)))OR(788259297)))))AND(t1.c0 COLLATE NOCASE)))AND((((t1.c1, vt0.c1, v0.c1)) NOT BETWEEN ((t1.c0, vt0.c0, t1.c0)) AND ((v0.c1, t1.c0, v0.c1))))));
SELECT ALL MAX(v0.c0) FROM v0, vt0 WHERE (((((vt0.c1)OR(v0.c0)))>=((- (v0.c0)))));
SELECT MAX(v0.c0) FROM v0, vt0 WHERE (((((((vt0.c1)OR(v0.c0)))>=((- (v0.c0)))))AND(((0.17733561690584876) NOT NULL)))) ORDER BY UNLIKELY(DISTINCT ((((((v0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))  NULLS LAST, ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2))) BETWEEN (((v0.c0)=(v0.c2))) AND (rtreenode(v0.c2, '')))  NULLS LAST LIMIT 1;
SELECT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN t1 ON CASE WHEN ((t1.c2) ISNULL) THEN (t1.c0 IN (vt0.c0, t1.c2, '472236244')) WHEN ((t1.c0) NOTNULL) THEN (NULL IN ()) WHEN '969729598' THEN ((v0.c1)|(v0.c0)) END WHERE (x'') ORDER BY (((t1.c2, vt0.c0, t1.c0)) BETWEEN (((((vt0.c0, vt0.c0))<((v0.c0, v0.c0))), ((v0.c1) NOT NULL), (NOT (t1.c2)))) AND ((((v0.c1)IS NOT(vt0.c1)), ((((t1.c0)AND(t1.c1)))OR(vt0.c0)), (NOT (t1.c0)))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN t1 ON CASE WHEN ((t1.c2) ISNULL) THEN (t1.c0 IN (vt0.c0, t1.c2, '472236244')) WHEN ((t1.c0) NOTNULL) THEN (NULL IN ()) WHEN '969729598' THEN ((v0.c1)|(v0.c0)) END WHERE (x'') ORDER BY (((t1.c2, vt0.c0, t1.c0)) BETWEEN (((((vt0.c0, vt0.c0))<((v0.c0, v0.c0))), ((v0.c1) NOT NULL), (NOT (t1.c2)))) AND ((((v0.c1)IS NOT(vt0.c1)), ((((t1.c0)AND(t1.c1)))OR(vt0.c0)), (NOT (t1.c0)))))  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN t1 ON CASE WHEN ((t1.c2) ISNULL) THEN (t1.c0 IN (vt0.c0, t1.c2, '472236244')) WHEN ((t1.c0) NOTNULL) THEN (NULL IN ()) WHEN '969729598' THEN ((v0.c1)|(v0.c0)) END WHERE ((NULL IN (v0.c2))) ORDER BY (((t1.c2, vt0.c0, t1.c0)) BETWEEN (((((vt0.c0, vt0.c0))<((v0.c0, v0.c0))), ((v0.c1) NOT NULL), (NOT (t1.c2)))) AND ((((v0.c1)IS NOT(vt0.c1)), ((((t1.c0)AND(t1.c1)))OR(vt0.c0)), (NOT (t1.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1 WHERE ((((CAST(t1.c0 AS TEXT)))=(((t1.c0 IN (t1.c1)))))) ORDER BY CAST(t1.c1 AS NUMERIC) DESC, ((((((((t1.c2)AND((t1.c2 IN (t1.c2, vt0.c1)))))OR(((vt0.c0) NOTNULL))))OR(((0.838609376070058)LIKE(vt0.c0)))))OR(vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((((CAST(t1.c0 AS TEXT)))==(((t1.c0 IN (t1.c1))))))AND((((t1.c2, '<')) BETWEEN ((((t1.c2)>>(vt0.c1)), t1.c2)) AND ((t1.c1 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))))))) ORDER BY CAST(t1.c1 AS NUMERIC) DESC, ((((((((t1.c2)AND((t1.c2 IN (t1.c2, vt0.c1)))))OR(((vt0.c0) NOTNULL))))OR(((0.838609376070058)LIKE(vt0.c0)))))OR(vt0.c0))  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM vt0, t1 WHERE (ABS(((vt0.c0)+(vt0.c0)))) ORDER BY CAST(t1.c1 AS NUMERIC) DESC, ((((((((t1.c2)AND((t1.c2 IN (t1.c2, vt0.c1)))))OR(((vt0.c0) NOTNULL))))OR(((0.838609376070058)LIKE(vt0.c0)))))OR(vt0.c0))  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM t1, v0, vt0 WHERE ((((NOT (v0.c1))) IS TRUE)) ORDER BY (t1.c0 IN ()) COLLATE NOCASE COLLATE RTRIM DESC  NULLS LAST;
SELECT DISTINCT MAX(vt0.c0) FROM t1, v0, vt0 WHERE ((((((NOT (v0.c1))) IS TRUE))AND(LOWER(DISTINCT ((((((((((((((((t1.c2)OR(vt0.c0)))AND(v0.c2)))AND(v0.c0)))OR(v0.c0)))OR(t1.c2)))OR(x'bc5397')))AND(v0.c1)))OR(t1.c0)))))) ORDER BY (t1.c0 IN ()) COLLATE NOCASE COLLATE RTRIM DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM t1, v0, vt0 WHERE ((((((vt0.c1, t1.c0)) BETWEEN ((v0.c2, -1963583395)) AND ((v0.c2, vt0.c1))))AND(((v0.c0)%(vt0.c0))))) ORDER BY (t1.c0 IN ()) COLLATE NOCASE COLLATE RTRIM DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 LEFT OUTER JOIN v0 ON CAST(((((((((((((((t1.c1)OR(t1.c2)))AND(t1.c1)))OR(t1.c2)))OR(v0.c0)))AND(t1.c2)))AND(v0.c2)))OR(t1.c1)) AS BLOB) WHERE (CASE ((v0.c0) ISNULL)  WHEN (t1.c1 IN ()) THEN (v0.c0 IN (v0.c1)) WHEN CAST(t1.c2 AS BLOB) THEN (((v0.c2, v0.c0, t1.c0, t1.c2)) NOT BETWEEN ((v0.c0, v0.c0, t1.c1, t1.c1)) AND ((v0.c2, v0.c2, v0.c0, t1.c2))) WHEN ((0.7887297539523557)<=(t1.c1)) THEN ((NULL)IS(v0.c0)) END) ORDER BY ((((((((((v0.c0)AND(CASE WHEN v0.c1 THEN t1.c1 WHEN t1.c1 THEN v0.c0 END)))AND(((((((v0.c1)OR(v0.c2)))OR(0xffffffffacf50fe3)))AND(t1.c2)))))AND(((t1.c2)>=(v0.c2)))))AND(((t1.c0) NOT BETWEEN (t1.c2) AND (v0.c2)))))AND((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))), (((v0.c0 IN (v0.c1))) NOT BETWEEN (((v0.c1)>=(t1.c0))) AND (t1.c1)) ASC  NULLS LAST, ((((v0.c2) NOT BETWEEN (t1.c2) AND (t1.c2))) BETWEEN (t1.c0 COLLATE NOCASE) AND (((v0.c2)IS(v0.c2)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 INNER JOIN v0 ON CAST(((((((((((((((t1.c1)OR(t1.c2)))AND(t1.c1)))OR(t1.c2)))OR(v0.c0)))AND(t1.c2)))AND(v0.c2)))OR(t1.c1)) AS BLOB) WHERE (CASE ((v0.c0) ISNULL)  WHEN (t1.c1 IN ()) THEN (v0.c0 IN (v0.c1)) WHEN CAST(t1.c2 AS BLOB) THEN (((v0.c2, v0.c0, t1.c0, t1.c2)) NOT BETWEEN ((v0.c0, v0.c0, t1.c1, t1.c1)) AND ((v0.c2, v0.c2, v0.c0, t1.c2))) WHEN ((0.7887297539523557)<=(t1.c1)) THEN ((NULL)IS(v0.c0)) END) ORDER BY ((((((((((v0.c0)AND(CASE WHEN v0.c1 THEN t1.c1 WHEN t1.c1 THEN v0.c0 END)))AND(((((((v0.c1)OR(v0.c2)))OR(0xffffffffacf50fe3)))AND(t1.c2)))))AND(((t1.c2)>=(v0.c2)))))AND(((t1.c0) NOT BETWEEN (t1.c2) AND (v0.c2)))))AND((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))), (((v0.c0 IN (v0.c1))) NOT BETWEEN (((v0.c1)>=(t1.c0))) AND (t1.c1)) ASC  NULLS LAST, ((((v0.c2) NOT BETWEEN (t1.c2) AND (t1.c2))) BETWEEN (t1.c0 COLLATE NOCASE) AND (((v0.c2)IS(v0.c2)))) ASC  NULLS FIRST;
SELECT * FROM t1 LEFT OUTER JOIN v0 ON CAST(((((((((((((((t1.c1)OR(t1.c2)))AND(t1.c1)))OR(t1.c2)))OR(v0.c0)))AND(t1.c2)))AND(v0.c2)))OR(t1.c1)) AS BLOB) WHERE (CASE ((v0.c0) ISNULL)  WHEN (t1.c1 IN ()) THEN (v0.c0 IN (v0.c1)) WHEN CAST(t1.c2 AS BLOB) THEN (((v0.c2, v0.c0, t1.c0, t1.c2)) NOT BETWEEN ((v0.c0, v0.c0, t1.c1, t1.c1)) AND ((v0.c2, v0.c2, v0.c0, t1.c2))) WHEN ((0.7887297539523557)<=(t1.c1)) THEN ((NULL)IS(v0.c0)) END) ORDER BY ((((((((((v0.c0)AND(CASE WHEN v0.c1 THEN t1.c1 WHEN t1.c1 THEN v0.c0 END)))AND(((((((v0.c1)OR(v0.c2)))OR(0xffffffffacf50fe3)))AND(t1.c2)))))AND(((t1.c2)>=(v0.c2)))))AND(((t1.c0) NOT BETWEEN (t1.c2) AND (v0.c2)))))AND((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))), (((v0.c0 IN (v0.c1))) NOT BETWEEN (((v0.c1)>=(t1.c0))) AND (t1.c1)) ASC  NULLS LAST, ((((v0.c2) NOT BETWEEN (t1.c2) AND (t1.c2))) BETWEEN (t1.c0 COLLATE NOCASE) AND (((v0.c2)IS(v0.c2)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 INNER JOIN v0 ON CAST(((((((((((((((t1.c1)OR(t1.c2)))AND(t1.c1)))OR(t1.c2)))OR(v0.c0)))AND(t1.c2)))AND(v0.c2)))OR(t1.c1)) AS BLOB) WHERE (CASE ((v0.c0) ISNULL)  WHEN (t1.c1 IN ()) THEN (v0.c0 IN (v0.c1)) WHEN CAST(t1.c2 AS BLOB) THEN (((v0.c2, v0.c0, t1.c0, t1.c2)) NOT BETWEEN ((v0.c0, v0.c0, t1.c1, t1.c1)) AND ((v0.c2, v0.c2, v0.c0, t1.c2))) WHEN ((0.7887297539523557)<=(t1.c1)) THEN ((NULL)IS(v0.c0)) END) ORDER BY ((((((((((v0.c0)AND(CASE WHEN v0.c1 THEN t1.c1 WHEN t1.c1 THEN v0.c0 END)))AND(((((((v0.c1)OR(v0.c2)))OR(0xffffffffacf50fe3)))AND(t1.c2)))))AND(((t1.c2)>=(v0.c2)))))AND(((t1.c0) NOT BETWEEN (t1.c2) AND (v0.c2)))))AND((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))), (((v0.c0 IN (v0.c1))) NOT BETWEEN (((v0.c1)>=(t1.c0))) AND (t1.c1)) ASC  NULLS LAST, ((((v0.c2) NOT BETWEEN (t1.c2) AND (t1.c2))) BETWEEN (t1.c0 COLLATE NOCASE) AND (((v0.c2)IS(v0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (CAST(((vt0.c1)<=(v0.c2)) AS INTEGER)) ORDER BY json_array(v0.c1, vt0.c0)  NULLS FIRST, (((vt0.c0, vt0.c1, v0.c1, v0.c2)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c2)), CAST(vt0.c1 AS REAL), (((v0.c2, vt0.c0, vt0.c1))<((NULL, v0.c1, v0.c1))), (((v0.c2, v0.c1, vt0.c1, v0.c2, vt0.c1)) BETWEEN ((v0.c0, vt0.c0, vt0.c1, v0.c1, v0.c1)) AND ((v0.c2, v0.c1, vt0.c0, vt0.c1, v0.c2))))) AND ((vt0.c1, ((((x'c3')OR(v0.c1)))OR(v0.c2)), (- (v0.c0)), (NOT (v0.c1)))))  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(((vt0.c1)<(v0.c2)) AS INTEGER)) ORDER BY json_array(v0.c1, vt0.c0)  NULLS FIRST, (((vt0.c0, vt0.c1, v0.c1, v0.c2)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c2)), CAST(vt0.c1 AS REAL), (((v0.c2, vt0.c0, vt0.c1))<((NULL, v0.c1, v0.c1))), (((v0.c2, v0.c1, vt0.c1, v0.c2, vt0.c1)) BETWEEN ((v0.c0, vt0.c0, vt0.c1, v0.c1, v0.c1)) AND ((v0.c2, v0.c1, vt0.c0, vt0.c1, v0.c2))))) AND ((vt0.c1, ((((x'c3')OR(v0.c1)))OR(v0.c2)), (- (v0.c0)), (NOT (v0.c1)))))  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0, v0 WHERE (LOWER(vt0.c0)) ORDER BY json_array(v0.c1, vt0.c0)  NULLS FIRST, (((vt0.c0, vt0.c1, v0.c1, v0.c2)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c2)), CAST(vt0.c1 AS REAL), (((v0.c2, vt0.c0, vt0.c1))<((NULL, v0.c1, v0.c1))), (((v0.c2, v0.c1, vt0.c1, v0.c2, vt0.c1)) BETWEEN ((v0.c0, vt0.c0, vt0.c1, v0.c1, v0.c1)) AND ((v0.c2, v0.c1, vt0.c0, vt0.c1, v0.c2))))) AND ((vt0.c1, ((((x'c3')OR(v0.c1)))OR(v0.c2)), (- (v0.c0)), (NOT (v0.c1)))))  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM vt0, v0 WHERE (CAST(((vt0.c1)<=(v0.c2)) AS INTEGER)) ORDER BY json_array(v0.c1, vt0.c0)  NULLS FIRST, (((vt0.c0, vt0.c1, v0.c1, v0.c2)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c2)), CAST(vt0.c1 AS REAL), (((v0.c2, vt0.c0, vt0.c1))<((NULL, v0.c1, v0.c1))), (((v0.c2, v0.c1, vt0.c1, v0.c2, vt0.c1)) BETWEEN ((v0.c0, vt0.c0, vt0.c1, v0.c1, v0.c1)) AND ((v0.c2, v0.c1, vt0.c0, vt0.c1, v0.c2))))) AND ((vt0.c1, ((((x'c3')OR(v0.c1)))OR(v0.c2)), (- (v0.c0)), (NOT (v0.c1)))))  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(((vt0.c1)<(v0.c2)) AS INTEGER)) ORDER BY json_array(v0.c1, vt0.c0)  NULLS FIRST, (((vt0.c0, vt0.c1, v0.c1, v0.c2)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c2)), CAST(vt0.c1 AS REAL), (((v0.c2, vt0.c0, vt0.c1))<((NULL, v0.c1, v0.c1))), (((v0.c2, v0.c1, vt0.c1, v0.c2, vt0.c1)) BETWEEN ((v0.c0, vt0.c0, vt0.c1, v0.c1, v0.c1)) AND ((v0.c2, v0.c1, vt0.c0, vt0.c1, v0.c2))))) AND ((vt0.c1, ((((x'c3')OR(v0.c1)))OR(v0.c2)), (- (v0.c0)), (NOT (v0.c1)))))  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0, v0 WHERE (LOWER(vt0.c0)) ORDER BY json_array(v0.c1, vt0.c0)  NULLS FIRST, (((vt0.c0, vt0.c1, v0.c1, v0.c2)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c2)), CAST(vt0.c1 AS REAL), (((v0.c2, vt0.c0, vt0.c1))<((NULL, v0.c1, v0.c1))), (((v0.c2, v0.c1, vt0.c1, v0.c2, vt0.c1)) BETWEEN ((v0.c0, vt0.c0, vt0.c1, v0.c1, v0.c1)) AND ((v0.c2, v0.c1, vt0.c0, vt0.c1, v0.c2))))) AND ((vt0.c1, ((((x'c3')OR(v0.c1)))OR(v0.c2)), (- (v0.c0)), (NOT (v0.c1)))))  NULLS LAST LIMIT 0x2;
SELECT * FROM vt0, t1 WHERE (((((t1.c1)<=(t1.c0)))OR(t1.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOT NULL)  NULLS FIRST, CASE WHEN '-1083689078' THEN t1.c2 WHEN t1.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c2 END COLLATE NOCASE ASC, (((CASE WHEN t1.c1 THEN t1.c0 END))>=((((t1.c0)GLOB(t1.c1))))) DESC;
SELECT DISTINCT * FROM vt0, t1 WHERE (((((t1.c1)<(t1.c0)))OR(t1.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOT NULL)  NULLS FIRST, CASE WHEN '-1083689078' THEN t1.c2 WHEN t1.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c2 END COLLATE NOCASE ASC, (((CASE WHEN t1.c1 THEN t1.c0 END))>=((((t1.c0)GLOB(t1.c1))))) DESC LIMIT 0X0;
SELECT * FROM vt0, t1 WHERE (((((t1.c1)<=(t1.c0)))OR(t1.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOT NULL)  NULLS FIRST, CASE WHEN '-1083689078' THEN t1.c2 WHEN t1.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c2 END COLLATE NOCASE ASC, (((CASE WHEN t1.c1 THEN t1.c0 END))>=((((t1.c0)GLOB(t1.c1))))) DESC;
SELECT DISTINCT * FROM vt0, t1 WHERE (((((t1.c1)<(t1.c0)))OR(t1.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOT NULL)  NULLS FIRST, CASE WHEN '-1083689078' THEN t1.c2 WHEN t1.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c2 END COLLATE NOCASE ASC, (((CASE WHEN t1.c1 THEN t1.c0 END))>=((((t1.c0)GLOB(t1.c1))))) DESC LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1 WHERE (COALESCE(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END, (+ (t1.c0)))) ORDER BY CAST((((t1.c1, t1.c1))>=((0.9100088742209923, t1.c1))) AS INTEGER), json_array(((t1.c1) NOTNULL), (t1.c1 IN (NULL, t1.c1)), (- (t1.c0))) DESC, ((0xfffffffff5429c85)OR(NULL))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (COALESCE(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END, (+ (t1.c0)))) ORDER BY CAST((((t1.c1, t1.c1))>=((0.9100088742209923, t1.c1))) AS INTEGER), json_array(((t1.c1) NOTNULL), (t1.c1 IN (NULL, t1.c1)), (- (t1.c0))) DESC, ((-180183931)OR(NULL))  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE ((HEX(t1.c2) IN (((t1.c1)>>(t1.c1)), (t1.c1 IN ())))) ORDER BY ((((((((t1.c1)AND(t1.c1)))OR(x'fd')))OR(t1.c1))) NOT BETWEEN ('><y0''c''¡X') AND (t1.c2 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((HEX(t1.c2) IN (((t1.c1)>>(t1.c1)), (t1.c1 IN ())))) ORDER BY (+ (((t1.c0) NOTNULL))) DESC, TRIM(DISTINCT (t1.c0 IN (NULL, t1.c0)))  NULLS LAST INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((t1.c1 IN ()))IS NOT(((t1.c2)IS NOT(t1.c2))))) ORDER BY (+ (((t1.c0) NOTNULL))) DESC, TRIM(DISTINCT (t1.c0 IN (NULL, t1.c0)))  NULLS LAST;
SELECT COUNT(*) FROM t1, v0, vt0 WHERE ((+ (0.7532165287850653)));
SELECT DISTINCT COUNT(*) FROM t1, v0, vt0 WHERE ((((+ (0.7532165287850653)))AND(NULL))) ORDER BY (vt0.c0 COLLATE BINARY IN ())  NULLS FIRST, v0.c2 DESC  NULLS LAST, CASE WHEN ((t1.c1)>=(t1.c0)) THEN CAST(t1.c1 AS REAL) WHEN t1.c1 COLLATE RTRIM THEN (((t1.c2, 0X5df1bdf7, v0.c0)) BETWEEN ((v0.c1, t1.c0, t1.c2)) AND ((t1.c1, v0.c1, v0.c1))) WHEN (((v0.c2))<=((t1.c0))) THEN CASE v0.c2  WHEN v0.c0 THEN t1.c2 WHEN '-447802941' THEN v0.c2 WHEN '-' THEN t1.c0 ELSE v0.c1 END ELSE ((((((((((t1.c0)AND(v0.c2)))AND(vt0.c1)))AND(t1.c1)))OR(vt0.c0)))AND(v0.c1)) END  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))==((ABS(DISTINCT x''), vt0.c0 COLLATE BINARY)))) ORDER BY ((((((((((vt0.c1)>(vt0.c0)))OR(((vt0.c0)>=(vt0.c1)))))AND(((vt0.c1)>(vt0.c1)))))OR(vt0.c1 COLLATE RTRIM)))AND(CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))==((ABS(DISTINCT x''), vt0.c0 COLLATE BINARY))))AND(CASE WHEN ((((((1.250186722E9)AND(vt0.c0)))AND(NULL)))OR(vt0.c0)) THEN json_object(vt0.c1, vt0.c0, NULL) WHEN ((vt0.c0)>=(vt0.c1)) THEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) ELSE ((vt0.c0) IS TRUE) END))) ORDER BY ((((- (vt0.c1)), vt0.c0 COLLATE BINARY, ((vt0.c1)/(vt0.c1))))>((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)), x'c7ea', ((vt0.c1)IS NOT(vt0.c1)))))  NULLS FIRST, (((vt0.c0, ((vt0.c1) IS FALSE)))>=((((vt0.c1) IS TRUE), (+ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))==((ABS(DISTINCT x''), vt0.c0 COLLATE BINARY)))) ORDER BY ((((((((((vt0.c1)>(vt0.c0)))OR(((vt0.c0)>=(vt0.c1)))))AND(((vt0.c1)>(vt0.c1)))))OR(vt0.c1 COLLATE RTRIM)))AND(CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))==((ABS(DISTINCT x''), vt0.c0 COLLATE BINARY))))AND(CASE WHEN ((((((1.250186722E9)AND(vt0.c0)))AND(NULL)))OR(vt0.c0)) THEN json_object(vt0.c1, vt0.c0, NULL) WHEN ((vt0.c0)>=(vt0.c1)) THEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) ELSE ((vt0.c0) IS TRUE) END))) ORDER BY ((((- (vt0.c1)), vt0.c0 COLLATE BINARY, ((vt0.c1)/(vt0.c1))))>((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)), x'c7ea', ((vt0.c1)IS NOT(vt0.c1)))))  NULLS FIRST, (((vt0.c0, ((vt0.c1) IS FALSE)))>=((((vt0.c1) IS TRUE), (+ (vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0, t1 WHERE ((((t1.c1, v0.c1)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, (- (t1.c0)))) AND ((vt0.c1, ((vt0.c1)AND(vt0.c1))))));
SELECT DISTINCT COUNT(*) FROM v0, vt0, t1 WHERE ((((((t1.c1, v0.c1)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, (- (t1.c0)))) AND ((vt0.c1, ((vt0.c1)AND(vt0.c1))))))AND(rtreenode(((vt0.c0) BETWEEN (0.22004812483916425) AND (t1.c2)), ((((t1.c0)OR(v0.c0)))AND(t1.c1)))))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM v0, vt0, t1 WHERE (TYPEOF(DISTINCT ((v0.c1)!=(v0.c2)))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 END) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 END) ISNULL)) ORDER BY ((HEX(DISTINCT t1.c1)) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (t1.c1 COLLATE NOCASE))  NULLS FIRST, ((((t1.c1)IS NOT(t1.c1))) IS FALSE)  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 END) ISNULL));
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 END) ISNULL)) ORDER BY ((HEX(DISTINCT t1.c1)) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (t1.c1 COLLATE NOCASE))  NULLS FIRST, ((((t1.c1)IS NOT(t1.c1))) IS FALSE)  NULLS FIRST LIMIT 0x0;
SELECT ALL MAX(v0.c1) FROM vt0, v0 NOT INDEXED WHERE ((NOT (x'ec')));
SELECT MAX(v0.c1) FROM vt0, v0 WHERE ((NOT (x'ec'))) INTERSECT SELECT MAX(v0.c1) FROM vt0, v0 WHERE ((((((vt0.c0) NOTNULL)))<(((+ ('i'))))));
SELECT MIN(t1.c1) FROM t1 WHERE ((((t1.c0 IN (t1.c2)))/(UPPER(DISTINCT t1.c2)))) ORDER BY (((t1.c1, t1.c2, t1.c1))!=((t1.c2, t1.c1, t1.c1))) COLLATE BINARY, ((CASE t1.c2  WHEN t1.c2 THEN t1.c1 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c0 END)/(t1.c1 COLLATE RTRIM));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((((t1.c0 IN (t1.c2)))/(UPPER(DISTINCT t1.c2))))AND(CASE t1.c1 COLLATE RTRIM  WHEN ((t1.c0)>(NULL)) THEN ((t1.c2)<(-1053940922)) WHEN t1.c2 COLLATE BINARY THEN MAX(t1.c2, t1.c2, '', t1.c2) WHEN (NOT (t1.c1)) THEN ((t1.c0) IS TRUE) END))) ORDER BY ((((t1.c1) ISNULL)) ISNULL), (((((t1.c1)*(t1.c1))))<((((t1.c2) ISNULL))))  NULLS FIRST LIMIT 2;
SELECT * FROM t1 WHERE (CAST((t1.c0 IN (t1.c1)) AS TEXT)) ORDER BY (+ (0.46283364535726623))  NULLS FIRST, CASE CASE WHEN t1.c2 THEN t1.c1 END  WHEN ((t1.c0)-(t1.c0)) THEN t1.c0 COLLATE NOCASE WHEN (+ (t1.c2)) THEN 1.803558881E9 ELSE (t1.c1 IN (t1.c0)) END DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CAST((t1.c0 IN (t1.c1)) AS TEXT)) ORDER BY (~ (t1.c0)) ASC  NULLS FIRST, CASE 2.09076802E8  WHEN t1.c2 THEN x'd8' ELSE (x'0479' IN (t1.c2, t1.c0)) END DESC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0 IN (t1.c1, t1.c2, t1.c2)))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c2)))))AND(CASE WHEN t1.c2 THEN t1.c1 ELSE 0.7437007110024096 END)))AND(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))) ORDER BY (~ (t1.c0)) ASC  NULLS FIRST, CASE 2.09076802E8  WHEN t1.c2 THEN x'd8' ELSE (x'0479' IN (t1.c2, t1.c0)) END DESC  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE (CAST((t1.c0 IN (t1.c1)) AS TEXT)) ORDER BY (+ (0.46283364535726623))  NULLS FIRST, CASE CASE WHEN t1.c2 THEN t1.c1 END  WHEN ((t1.c0)-(t1.c0)) THEN t1.c0 COLLATE NOCASE WHEN (+ (t1.c2)) THEN 1.803558881E9 ELSE (t1.c1 IN (t1.c0)) END DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CAST((t1.c0 IN (t1.c1)) AS TEXT)) ORDER BY (~ (t1.c0)) ASC  NULLS FIRST, CASE 2.09076802E8  WHEN t1.c2 THEN x'd8' ELSE (x'0479' IN (t1.c2, t1.c0)) END DESC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0 IN (t1.c1, t1.c2, t1.c2)))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c2)))))AND(CASE WHEN t1.c2 THEN t1.c1 ELSE 0.7437007110024096 END)))AND(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))) ORDER BY (~ (t1.c0)) ASC  NULLS FIRST, CASE 2.09076802E8  WHEN t1.c2 THEN x'd8' ELSE (x'0479' IN (t1.c2, t1.c0)) END DESC  NULLS FIRST LIMIT 1;
SELECT COUNT(*) FROM t1 WHERE (((SQLITE_COMPILEOPTION_USED(91288125)) BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (-1.304575661E9)));
SELECT ALL COUNT(*) FROM t1 WHERE (((((SQLITE_COMPILEOPTION_USED(91288125)) BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (-1.304575661E9)))AND(((CHANGES()) NOT BETWEEN (t1.c2) AND (((t1.c1) IS TRUE)))))) LIMIT 0 INTERSECT SELECT COUNT(*) FROM t1 WHERE ((t1.c1 IN ()) COLLATE BINARY) LIMIT 0X0;
SELECT * FROM t1 WHERE (((NULLIF(t1.c2, t1.c1))+(((t1.c1) IS TRUE)))) ORDER BY (((t1.c1 IN (t1.c0)))OR(t1.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((NULLIF(t1.c2, t1.c1))+(((t1.c1) IS TRUE))))AND(((((t1.c0) BETWEEN (t1.c2) AND (t1.c0)))=(CASE t1.c1  WHEN t1.c2 THEN t1.c0 END))))) ORDER BY (((((t1.c2, t1.c1))>((t1.c2, x'68')))) IS FALSE), t1.c0 ASC LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((t1.c1 COLLATE BINARY IN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY (((((t1.c2, t1.c1))>((t1.c2, x'68')))) IS FALSE), t1.c0 ASC LIMIT 2;
SELECT * FROM t1 WHERE (((NULLIF(t1.c2, t1.c1))+(((t1.c1) IS TRUE)))) ORDER BY (((t1.c1 IN (t1.c0)))OR(t1.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((NULLIF(t1.c2, t1.c1))+(((t1.c1) IS TRUE))))AND(((((t1.c0) BETWEEN (t1.c2) AND (t1.c0)))=(CASE t1.c1  WHEN t1.c2 THEN t1.c0 END))))) ORDER BY (((((t1.c2, t1.c1))>((t1.c2, x'68')))) IS FALSE), t1.c0 ASC LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((t1.c1 COLLATE BINARY IN (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY (((((t1.c2, t1.c1))>((t1.c2, x'68')))) IS FALSE), t1.c0 ASC LIMIT 2;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (CAST(465785973 AS TEXT));
SELECT ALL MAX(vt0.c0) FROM vt0 NOT INDEXED WHERE (((CAST(465785973 AS TEXT))AND((((((vt0.c0))=((vt0.c1)))) IS FALSE)))) ORDER BY ((NULL)>(((vt0.c1)||(0.0923323860871399))))  NULLS LAST, '' DESC  NULLS LAST;
SELECT ALL * FROM v0, t1, vt0 WHERE (-2080115895) ORDER BY -1212514209 DESC  NULLS FIRST;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((-2080115895)AND(ABS(DISTINCT (((vt0.c0, vt0.c0))<((v0.c1, v0.c1))))))) ORDER BY 0Xffffffffb7ba805f DESC  NULLS FIRST;
SELECT ALL * FROM v0, t1, vt0 WHERE (-2080115895) ORDER BY -1212514209 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT x'' COLLATE NOCASE, (v0.c1 IN ())) WHERE ((ABS(v0.c1) IN (vt0.c1 COLLATE NOCASE, ((((v0.c1)AND(vt0.c1)))AND(-738658335)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT x'' COLLATE NOCASE, (v0.c1 IN ())) WHERE ((ABS(v0.c1) IN (vt0.c1 COLLATE NOCASE, ((((v0.c1)AND(vt0.c1)))AND(0Xffffffffd3f8f7e1))))) ORDER BY vt0.c0 DESC LIMIT 0x0 INTERSECT SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT x'' COLLATE NOCASE, (v0.c1 IN ())) WHERE ((((((((vt0.c1 IN ()))AND(NULLIF(v0.c2, vt0.c0))))OR(vt0.c1)))AND(QUOTE(v0.c0)))) ORDER BY vt0.c0 DESC LIMIT 0X0;
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (TOTAL_CHANGES());
SELECT DISTINCT COUNT(*) FROM vt0, t1, v0 WHERE (TOTAL_CHANGES()) ORDER BY t1.c2 ASC  NULLS FIRST, (+ (NULL)), CASE WHEN CAST(vt0.c0 AS REAL) THEN CASE vt0.c0  WHEN v0.c1 THEN t1.c2 WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END WHEN (- (t1.c1)) THEN (((v0.c0, t1.c2))==((vt0.c1, v0.c1))) ELSE (NOT (t1.c1)) END LIMIT 0X0;
SELECT ALL MAX(v0.c2) FROM v0 WHERE ((((((v0.c1)=(v0.c2)), CAST(v0.c0 AS TEXT), INSTR(v0.c2, v0.c1)))>=((CAST(v0.c0 AS REAL), ((v0.c2)|(v0.c0)), v0.c2 COLLATE NOCASE))));
SELECT ALL MAX(v0.c2) FROM v0 WHERE ((((((((v0.c1)=(v0.c2)), CAST(v0.c0 AS TEXT), INSTR(v0.c2, v0.c1)))>=((CAST(v0.c0 AS REAL), ((v0.c2)|(v0.c0)), v0.c2 COLLATE NOCASE))))AND(((CASE WHEN v0.c2 THEN NULL END) ISNULL)))) INTERSECT SELECT MAX(v0.c2) FROM v0 WHERE (((((((v0.c0)AND(v0.c1)))OR(v0.c0)))AND(NULL)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0))) NOTNULL));
SELECT DISTINCT COUNT(*) FROM v0 WHERE ((((((v0.c0 IN (v0.c0))) NOTNULL))AND(v0.c1))) ORDER BY SQLITE_VERSION() DESC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM v0 WHERE ('-111518474') ORDER BY SQLITE_VERSION() DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((NULL, vt0.c1))<=((vt0.c1, NULL))) IN (CAST(vt0.c1 AS INTEGER)))) ORDER BY 662712404 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((NULL, vt0.c1))<=((vt0.c1, NULL))) IN (CAST(vt0.c1 AS INTEGER))))AND(IFNULL(DISTINCT vt0.c1 COLLATE NOCASE, ((((vt0.c1)OR('')))OR(vt0.c1)))))) ORDER BY (((((vt0.c0)%(vt0.c1)), ((x'58ee77ab')*(vt0.c1)), 0.6378550692906245, vt0.c0))<(((((vt0.c0))!=((vt0.c0))), vt0.c1, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN 'BJᔍ' THEN vt0.c1 END, CAST(vt0.c0 AS BLOB))))  NULLS LAST, vt0.c0 ASC, SQLITE_SOURCE_ID() DESC;
SELECT ALL * FROM vt0 WHERE (((((NULL, vt0.c1))<=((vt0.c1, NULL))) IN (CAST(vt0.c1 AS INTEGER)))) ORDER BY 662712404 ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c0)))) NOTNULL)) ORDER BY CAST((NOT (t1.c2)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c0)))) NOTNULL)) ORDER BY CAST((NOT (t1.c2)) AS NUMERIC)  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (((((((TYPEOF(t1.c1))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (NULL)))))AND(((t1.c2)GLOB(t1.c0))))) ORDER BY CAST((NOT (t1.c2)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c0)))) NOTNULL)) ORDER BY CAST((NOT (t1.c2)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c0)))) NOTNULL)) ORDER BY CAST((NOT (t1.c2)) AS NUMERIC)  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (((((((TYPEOF(t1.c1))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (NULL)))))AND(((t1.c2)GLOB(t1.c0))))) ORDER BY CAST((NOT (t1.c2)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (HEX(CAST(v0.c2 AS INTEGER))) ORDER BY 0.17583811740715605 DESC  NULLS LAST, ABS(((t1.c2) BETWEEN (x'') AND (v0.c2)))  NULLS LAST;
SELECT COUNT(*) FROM v0, t1, vt0 WHERE (((HEX(CAST(v0.c2 AS INTEGER)))AND(SQLITE_SOURCE_ID()))) ORDER BY 0.17583811740715605 DESC  NULLS LAST, ABS(((t1.c2) BETWEEN (x'') AND (v0.c2)))  NULLS LAST;
SELECT * FROM v0 INNER JOIN t1 ON (NOT (((v0.c2)IS(vt0.c0)))) CROSS JOIN vt0 ON ((NULLIF(t1.c2, t1.c0)) BETWEEN ((((vt0.c0, vt0.c0))=((vt0.c1, v0.c1)))) AND (((v0.c1)LIKE(v0.c2)))) WHERE (((CASE vt0.c1  WHEN t1.c1 THEN 0x61d0bfd1 ELSE vt0.c1 END)<(((vt0.c1) BETWEEN (NULL) AND (vt0.c0))))) ORDER BY (((('184538343') BETWEEN (v0.c2) AND (t1.c2))) IS FALSE) ASC, ((((t1.c2)!=(v0.c1)))<=((((t1.c2)) BETWEEN ((t1.c1)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM v0 INNER JOIN t1 ON (NOT (((v0.c2)IS(vt0.c0)))) CROSS JOIN vt0 ON ((NULLIF(t1.c2, t1.c0)) BETWEEN ((((vt0.c0, vt0.c0))=((vt0.c1, v0.c1)))) AND (((v0.c1)LIKE(v0.c2)))) WHERE (((CASE vt0.c1  WHEN t1.c1 THEN 0x61d0bfd1 ELSE vt0.c1 END)<(((vt0.c1) BETWEEN (NULL) AND (vt0.c0))))) ORDER BY CASE ((NULL)>>(v0.c2))  WHEN ((((((((t1.c2)AND(v0.c2)))OR(vt0.c1)))OR(t1.c0)))OR(t1.c2)) THEN json_array_length(vt0.c1) WHEN t1.c1 THEN ((v0.c1)<=(v0.c0)) END LIMIT 3 INTERSECT SELECT DISTINCT * FROM v0 INNER JOIN t1 ON (NOT (((v0.c2)IS(vt0.c0)))) CROSS JOIN vt0 ON ((NULLIF(t1.c2, t1.c0)) BETWEEN ((((vt0.c0, vt0.c0))=((vt0.c1, v0.c1)))) AND (((v0.c1)LIKE(v0.c2)))) WHERE (CASE WHEN ((v0.c1)>(v0.c0)) THEN (- (v0.c2)) WHEN ((t1.c2) BETWEEN (v0.c2) AND (t1.c2)) THEN v0.c2 WHEN (v0.c2 IN (v0.c2)) THEN 0.6213383087489036 END) ORDER BY CASE ((NULL)>>(v0.c2))  WHEN ((((((((t1.c2)AND(v0.c2)))OR(vt0.c1)))OR(t1.c0)))OR(t1.c2)) THEN json_array_length(vt0.c1) WHEN t1.c1 THEN ((v0.c1)<=(v0.c0)) END LIMIT 3;
SELECT * FROM v0 INNER JOIN t1 ON (NOT (((v0.c2)IS(vt0.c0)))) CROSS JOIN vt0 ON ((NULLIF(t1.c2, t1.c0)) BETWEEN ((((vt0.c0, vt0.c0))=((vt0.c1, v0.c1)))) AND (((v0.c1)LIKE(v0.c2)))) WHERE (((CASE vt0.c1  WHEN t1.c1 THEN 0x61d0bfd1 ELSE vt0.c1 END)<(((vt0.c1) BETWEEN (NULL) AND (vt0.c0))))) ORDER BY (((('184538343') BETWEEN (v0.c2) AND (t1.c2))) IS FALSE) ASC, ((((t1.c2)!=(v0.c1)))<=((((t1.c2)) BETWEEN ((t1.c1)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM v0 INNER JOIN t1 ON (NOT (((v0.c2)IS(vt0.c0)))) CROSS JOIN vt0 ON ((NULLIF(t1.c2, t1.c0)) BETWEEN ((((vt0.c0, vt0.c0))=((vt0.c1, v0.c1)))) AND (((v0.c1)LIKE(v0.c2)))) WHERE (((CASE vt0.c1  WHEN t1.c1 THEN 0x61d0bfd1 ELSE vt0.c1 END)<(((vt0.c1) BETWEEN (NULL) AND (vt0.c0))))) ORDER BY CASE ((NULL)>>(v0.c2))  WHEN ((((((((t1.c2)AND(v0.c2)))OR(vt0.c1)))OR(t1.c0)))OR(t1.c2)) THEN json_array_length(vt0.c1) WHEN t1.c1 THEN ((v0.c1)<=(v0.c0)) END LIMIT 3 INTERSECT SELECT DISTINCT * FROM v0 INNER JOIN t1 ON (NOT (((v0.c2)IS(vt0.c0)))) CROSS JOIN vt0 ON ((NULLIF(t1.c2, t1.c0)) BETWEEN ((((vt0.c0, vt0.c0))=((vt0.c1, v0.c1)))) AND (((v0.c1)LIKE(v0.c2)))) WHERE (CASE WHEN ((v0.c1)>(v0.c0)) THEN (- (v0.c2)) WHEN ((t1.c2) BETWEEN (v0.c2) AND (t1.c2)) THEN v0.c2 WHEN (v0.c2 IN (v0.c2)) THEN 0.6213383087489036 END) ORDER BY CASE ((NULL)>>(v0.c2))  WHEN ((((((((t1.c2)AND(v0.c2)))OR(vt0.c1)))OR(t1.c0)))OR(t1.c2)) THEN json_array_length(vt0.c1) WHEN t1.c1 THEN ((v0.c1)<=(v0.c0)) END LIMIT 3;
SELECT ALL * FROM vt0, v0, t1 WHERE (((((vt0.c1)GLOB(v0.c2))) BETWEEN (NULL) AND (v0.c2)));
SELECT * FROM vt0, v0, t1 WHERE (((((vt0.c1)GLOB(v0.c2))) BETWEEN (NULL) AND (v0.c2))) LIMIT 0x0;
SELECT ALL * FROM vt0, v0, t1 WHERE (((((vt0.c1)GLOB(v0.c2))) BETWEEN (NULL) AND (v0.c2)));
SELECT * FROM vt0, v0, t1 WHERE (((((vt0.c1)GLOB(v0.c2))) BETWEEN (NULL) AND (v0.c2))) LIMIT 0x0;
SELECT MAX(v0.c2) FROM vt0 CROSS JOIN v0 ON (((CAST(v0.c2 AS INTEGER), (v0.c0 IN ())))>=((vt0.c0, ABS(v0.c1)))) WHERE ((((((v0.c0, v0.c1)) NOT BETWEEN ((v0.c0, v0.c2)) AND ((NULL, vt0.c1))))>=(((v0.c1) ISNULL))));
SELECT DISTINCT MAX(v0.c2) FROM vt0 CROSS JOIN v0 ON (((CAST(v0.c2 AS INTEGER), (v0.c0 IN ())))>=((vt0.c0, ABS(v0.c1)))) WHERE ((((((v0.c0, v0.c1)) NOT BETWEEN ((v0.c0, v0.c2)) AND ((NULL, vt0.c1))))==(((v0.c1) ISNULL)))) ORDER BY '2031838780' LIMIT 0X1;
SELECT MAX(t1.c0) FROM t1, v0 WHERE (((((((((((((HEX(v0.c2))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((v0.c0) BETWEEN (t1.c1) AND (t1.c1)))))OR(NULL)))OR(v0.c1)))AND(v0.c0 COLLATE RTRIM)))AND(v0.c1 COLLATE RTRIM)));
SELECT MAX(t1.c0) FROM t1, v0 WHERE (((((((((((((((HEX(v0.c2))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((v0.c0) BETWEEN (t1.c1) AND (t1.c1)))))OR(NULL)))OR(v0.c1)))AND(v0.c0 COLLATE RTRIM)))AND(v0.c1 COLLATE RTRIM)))AND(((((t1.c0) BETWEEN (v0.c0) AND (0.33914026669662256)))<(json_patch(t1.c0, v0.c1)))))) ORDER BY ((v0.c0)!=(((v0.c2) NOT BETWEEN (t1.c2) AND (t1.c1)))), ((CAST(v0.c2 AS NUMERIC))-(CASE v0.c0  WHEN v0.c0 THEN '' END))  NULLS FIRST, ((CASE t1.c2  WHEN t1.c2 THEN '41028994' END) NOT BETWEEN (NULL) AND (t1.c0));
SELECT ALL * FROM t1, v0 WHERE (((CASE WHEN v0.c1 THEN t1.c1 ELSE v0.c1 END) NOT BETWEEN ((((t1.c0, NULL, x'298560', x''))==((v0.c2, v0.c0, v0.c2, t1.c1)))) AND ((t1.c2 IN (t1.c1)))));
SELECT ALL * FROM t1, v0 WHERE (((((CASE WHEN v0.c1 THEN t1.c1 ELSE v0.c1 END) NOT BETWEEN ((((t1.c0, NULL, x'298560', x''))=((v0.c2, v0.c0, v0.c2, t1.c1)))) AND ((t1.c2 IN (t1.c1)))))AND(((((CAST(0.3827475962671346 AS TEXT))AND(json_remove(t1.c2, v0.c1, t1.c2, v0.c2))))AND(((t1.c2) ISNULL)))))) ORDER BY 0.9738960010206673 DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM t1, v0 WHERE ((UPPER(DISTINCT v0.c2) IN ())) ORDER BY 0.9738960010206673 DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1, v0 WHERE (((CASE WHEN v0.c1 THEN t1.c1 ELSE v0.c1 END) NOT BETWEEN ((((t1.c0, NULL, x'298560', x''))==((v0.c2, v0.c0, v0.c2, t1.c1)))) AND ((t1.c2 IN (t1.c1)))));
SELECT ALL * FROM t1, v0 WHERE (((((CASE WHEN v0.c1 THEN t1.c1 ELSE v0.c1 END) NOT BETWEEN ((((t1.c0, NULL, x'298560', x''))=((v0.c2, v0.c0, v0.c2, t1.c1)))) AND ((t1.c2 IN (t1.c1)))))AND(((((CAST(0.3827475962671346 AS TEXT))AND(json_remove(t1.c2, v0.c1, t1.c2, v0.c2))))AND(((t1.c2) ISNULL)))))) ORDER BY 0.9738960010206673 DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT * FROM t1, v0 WHERE ((UPPER(DISTINCT v0.c2) IN ())) ORDER BY 0.9738960010206673 DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM t1 WHERE ((+ (((t1.c1)<=(t1.c0)))));
SELECT DISTINCT * FROM t1 NOT INDEXED WHERE ((((+ (((t1.c1)<(t1.c0)))))AND(CAST(t1.c2 AS NUMERIC)))) ORDER BY CASE ((t1.c0)>=(x''))  WHEN (((t1.c1, t1.c2)) NOT BETWEEN ((-2098610707, t1.c0)) AND ((t1.c1, t1.c0))) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c0)*(t1.c2)) THEN CAST(t1.c1 AS TEXT) ELSE CASE WHEN t1.c2 THEN t1.c2 WHEN 0.9409422165617629 THEN t1.c2 WHEN t1.c1 THEN 0.855651903663136 WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END END DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE NULL  WHEN t1.c0 THEN 0.4227107581463273 WHEN t1.c1 THEN t1.c2 WHEN x'' THEN x'' END) ISNULL)) ORDER BY CASE ((t1.c0)>=(x''))  WHEN (((t1.c1, t1.c2)) NOT BETWEEN ((0Xffffffff82e9bded, t1.c0)) AND ((t1.c1, t1.c0))) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c0)*(t1.c2)) THEN CAST(t1.c1 AS TEXT) ELSE CASE WHEN t1.c2 THEN t1.c2 WHEN 0.9409422165617629 THEN t1.c2 WHEN t1.c1 THEN 0.855651903663136 WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END END DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((+ (((t1.c1)<=(t1.c0)))));
SELECT DISTINCT * FROM t1 NOT INDEXED WHERE ((((+ (((t1.c1)<(t1.c0)))))AND(CAST(t1.c2 AS NUMERIC)))) ORDER BY CASE ((t1.c0)>=(x''))  WHEN (((t1.c1, t1.c2)) NOT BETWEEN ((-2098610707, t1.c0)) AND ((t1.c1, t1.c0))) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c0)*(t1.c2)) THEN CAST(t1.c1 AS TEXT) ELSE CASE WHEN t1.c2 THEN t1.c2 WHEN 0.9409422165617629 THEN t1.c2 WHEN t1.c1 THEN 0.855651903663136 WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END END DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE NULL  WHEN t1.c0 THEN 0.4227107581463273 WHEN t1.c1 THEN t1.c2 WHEN x'' THEN x'' END) ISNULL)) ORDER BY CASE ((t1.c0)>=(x''))  WHEN (((t1.c1, t1.c2)) NOT BETWEEN ((0Xffffffff82e9bded, t1.c0)) AND ((t1.c1, t1.c0))) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c0)*(t1.c2)) THEN CAST(t1.c1 AS TEXT) ELSE CASE WHEN t1.c2 THEN t1.c2 WHEN 0.9409422165617629 THEN t1.c2 WHEN t1.c1 THEN 0.855651903663136 WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 INNER JOIN v0 ON (((- (x'551defafc5'))) BETWEEN (TRIM(DISTINCT v0.c2)) AND ('1514797807')) WHERE (CASE (v0.c0 IN (t1.c1))  WHEN ((v0.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN ((t1.c0)+(v0.c2)) WHEN NULL COLLATE BINARY THEN (v0.c1 IN ()) ELSE (((x'beda')) BETWEEN ((t1.c2)) AND ((v0.c2))) END);
SELECT COUNT(*) FROM t1 INNER JOIN v0 ON (((- (x'551defafc5'))) BETWEEN (TRIM(DISTINCT v0.c2)) AND ('1514797807')) WHERE (((CASE (v0.c0 IN (t1.c1))  WHEN ((v0.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN ((t1.c0)+(v0.c2)) WHEN NULL COLLATE BINARY THEN (v0.c1 IN ()) ELSE (((x'beda')) BETWEEN ((t1.c2)) AND ((v0.c2))) END)AND((~ (t1.c0))))) ORDER BY ((((((t1.c2)AND(v0.c0)))AND(v0.c1)))AND(t1.c0)) COLLATE BINARY ASC, (((NOT (t1.c0)))AND((+ (t1.c0))))  NULLS FIRST LIMIT 1;
SELECT * FROM t1, vt0, v0 WHERE ((((x'' COLLATE RTRIM, ((((((x'df')AND(t1.c1)))OR(t1.c1)))AND(v0.c0)), vt0.c0 COLLATE NOCASE))<=(((v0.c1 IN ()), ((((vt0.c0)OR(t1.c2)))AND(t1.c1)), (+ ('-1805692362'))))));
SELECT * FROM t1, vt0, v0 WHERE ((((x'' COLLATE RTRIM, ((((((x'df')AND(t1.c1)))OR(t1.c1)))AND(v0.c0)), vt0.c0 COLLATE NOCASE))<=(((v0.c1 IN ()), ((((vt0.c0)OR(t1.c2)))AND(t1.c1)), (+ ('-1805692362'))))));
SELECT * FROM t1, vt0, v0 WHERE ((((x'' COLLATE RTRIM, ((((((x'df')AND(t1.c1)))OR(t1.c1)))AND(v0.c0)), vt0.c0 COLLATE NOCASE))<=(((v0.c1 IN ()), ((((vt0.c0)OR(t1.c2)))AND(t1.c1)), (+ ('-1805692362'))))));
SELECT * FROM t1, vt0, v0 WHERE ((((x'' COLLATE RTRIM, ((((((x'df')AND(t1.c1)))OR(t1.c1)))AND(v0.c0)), vt0.c0 COLLATE NOCASE))<=(((v0.c1 IN ()), ((((vt0.c0)OR(t1.c2)))AND(t1.c1)), (+ ('-1805692362'))))));
SELECT ALL * FROM t1 WHERE (((ABS(t1.c2)) BETWEEN ((((t1.c1, t1.c1, t1.c2, NULL, t1.c0))<>((NULL, t1.c2, t1.c2, t1.c2, t1.c2)))) AND ((t1.c2 IN (t1.c2))))) ORDER BY ((((t1.c1, t1.c2))<=((t1.c1, t1.c1))) IN (((t1.c2) ISNULL))), ((NULL) BETWEEN (t1.c1) AND (CAST(t1.c1 AS NUMERIC)));
SELECT DISTINCT * FROM t1 WHERE (((ABS(t1.c2)) BETWEEN ((((t1.c1, t1.c1, t1.c2, NULL, t1.c0))<>((NULL, t1.c2, t1.c2, t1.c2, t1.c2)))) AND ((t1.c2 IN (t1.c2))))) ORDER BY ((((t1.c1, t1.c2))<=((t1.c1, t1.c1))) IN (((t1.c2) ISNULL))), ((NULL) BETWEEN (t1.c1) AND (CAST(t1.c1 AS NUMERIC))) INTERSECT SELECT DISTINCT * FROM t1 NOT INDEXED WHERE ((- ((((t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c2, t1.c2)))))) ORDER BY ((((t1.c1, t1.c2))<=((t1.c1, t1.c1))) IN (((t1.c2) ISNULL))), ((NULL) BETWEEN (t1.c1) AND (CAST(t1.c1 AS NUMERIC)));
SELECT ALL * FROM t1 WHERE (((ABS(t1.c2)) BETWEEN ((((t1.c1, t1.c1, t1.c2, NULL, t1.c0))<>((NULL, t1.c2, t1.c2, t1.c2, t1.c2)))) AND ((t1.c2 IN (t1.c2))))) ORDER BY ((((t1.c1, t1.c2))<=((t1.c1, t1.c1))) IN (((t1.c2) ISNULL))), ((NULL) BETWEEN (t1.c1) AND (CAST(t1.c1 AS NUMERIC)));
SELECT DISTINCT * FROM t1 WHERE (((ABS(t1.c2)) BETWEEN ((((t1.c1, t1.c1, t1.c2, NULL, t1.c0))<>((NULL, t1.c2, t1.c2, t1.c2, t1.c2)))) AND ((t1.c2 IN (t1.c2))))) ORDER BY ((((t1.c1, t1.c2))<=((t1.c1, t1.c1))) IN (((t1.c2) ISNULL))), ((NULL) BETWEEN (t1.c1) AND (CAST(t1.c1 AS NUMERIC))) INTERSECT SELECT DISTINCT * FROM t1 NOT INDEXED WHERE ((- ((((t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c2, t1.c2)))))) ORDER BY ((((t1.c1, t1.c2))<=((t1.c1, t1.c1))) IN (((t1.c2) ISNULL))), ((NULL) BETWEEN (t1.c1) AND (CAST(t1.c1 AS NUMERIC)));
SELECT * FROM t1, vt0 INNER JOIN v0 ON (((((('471276848')AND(x'')))AND(CASE WHEN t1.c1 THEN vt0.c1 END)))OR(((v0.c0) IS TRUE))) WHERE (CAST(((t1.c2)=(t1.c0)) AS REAL));
SELECT ALL * FROM t1, vt0 INNER JOIN v0 ON (((((('471276848')AND(x'')))AND(CASE WHEN t1.c1 THEN vt0.c1 END)))OR(((v0.c0) IS TRUE))) WHERE (((CAST(((t1.c2)==(t1.c0)) AS REAL))AND(CASE (v0.c2 IN (t1.c0, v0.c0))  WHEN NULL THEN t1.c0 COLLATE NOCASE END))) ORDER BY ((- (v0.c0)) IN (TYPEOF(DISTINCT 0.7061208012178406)))  NULLS FIRST;
SELECT * FROM t1, vt0 INNER JOIN v0 ON (((((('471276848')AND(x'')))AND(CASE WHEN t1.c1 THEN vt0.c1 END)))OR(((v0.c0) IS TRUE))) WHERE (CAST(((t1.c2)=(t1.c0)) AS REAL));
SELECT ALL * FROM t1, vt0 INNER JOIN v0 ON (((((('471276848')AND(x'')))AND(CASE WHEN t1.c1 THEN vt0.c1 END)))OR(((v0.c0) IS TRUE))) WHERE (((CAST(((t1.c2)==(t1.c0)) AS REAL))AND(CASE (v0.c2 IN (t1.c0, v0.c0))  WHEN NULL THEN t1.c0 COLLATE NOCASE END))) ORDER BY ((- (v0.c0)) IN (TYPEOF(DISTINCT 0.7061208012178406)))  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM v0, t1 WHERE ((- (t1.c0)) COLLATE NOCASE) ORDER BY CAST(((((((x'')AND(t1.c2)))OR('1092579787')))AND(x'')) AS TEXT) ASC  NULLS FIRST, 0.445213320741928;
SELECT MIN(t1.c0) FROM v0, t1 WHERE ((- (t1.c0)) COLLATE NOCASE) ORDER BY CAST(((((((x'')AND(t1.c2)))OR('1092579787')))AND(x'')) AS TEXT) ASC  NULLS FIRST, 0.445213320741928 LIMIT 1 INTERSECT SELECT MIN(t1.c0) FROM v0, t1 WHERE (((SQLITE_COMPILEOPTION_USED(NULL))|(((t1.c2) BETWEEN (t1.c0) AND (v0.c2))))) ORDER BY CAST(((((((x'')AND(t1.c2)))OR('1092579787')))AND(x'')) AS TEXT) ASC  NULLS FIRST, 0.445213320741928 LIMIT 1;
SELECT * FROM t1, vt0, v0 WHERE ((- ((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1)))))) ORDER BY (((~ (v0.c2)))-(((vt0.c1)|(v0.c0))))  NULLS LAST, vt0.c0, (vt0.c1 IN ())  NULLS FIRST;
SELECT * FROM t1, vt0, v0 WHERE ((((- ((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))))AND(((((((t1.c2 COLLATE BINARY)OR((((v0.c2)) NOT BETWEEN (('jZg]')) AND (('1764798102'))))))AND(((((((x'917d')OR(v0.c0)))AND(vt0.c1)))OR(v0.c1)))))OR((- (vt0.c1))))))) ORDER BY ((CAST(0.7765512012072069 AS NUMERIC)) NOT BETWEEN (((v0.c2) NOT BETWEEN (t1.c1) AND (v0.c2))) AND (((t1.c0)!=(vt0.c1)))), ((((- (v0.c2)), NULLIF(DISTINCT vt0.c1, t1.c2)))==((t1.c1 COLLATE BINARY, (vt0.c1 IN ()))))  NULLS LAST, CASE ((v0.c1) NOTNULL)  WHEN ((t1.c2) ISNULL) THEN '-782663409' WHEN ((t1.c2)>>(t1.c0)) THEN t1.c0 COLLATE NOCASE WHEN CAST(t1.c1 AS INTEGER) THEN (((('gp_')AND('GP*0')))OR(vt0.c1)) WHEN ((v0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN ((((((t1.c2)AND(t1.c2)))OR(t1.c1)))AND(t1.c2)) ELSE vt0.c0 END, ((((((((((t1.c0 COLLATE BINARY)OR(IFNULL(vt0.c0, t1.c0))))AND(CASE v0.c1  WHEN 0.7657422968599975 THEN vt0.c1 ELSE t1.c0 END)))AND(TYPEOF(DISTINCT v0.c0))))OR(CAST(t1.c0 AS INTEGER))))OR(((((((((((v0.c0)AND(v0.c1)))OR(v0.c1)))OR(t1.c2)))OR(vt0.c1)))OR(t1.c1)))) LIMIT 0X1;
SELECT * FROM t1, vt0, v0 WHERE ((- ((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1)))))) ORDER BY (((~ (v0.c2)))-(((vt0.c1)|(v0.c0))))  NULLS LAST, vt0.c0, (vt0.c1 IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (0.7887055343548552) ORDER BY t1.c1 DESC  NULLS LAST, (((((vt0.c1, -275731388)) BETWEEN ((t1.c0, vt0.c1)) AND ((t1.c0, vt0.c1))))<>((+ (t1.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0, v0 WHERE (((0.7887055343548552)AND(((((t1.c0)<(v0.c0))) NOT NULL)))) ORDER BY ((((((((CASE WHEN x'bfa0' THEN '' ELSE t1.c2 END)AND(((v0.c1) NOT NULL))))AND(((('8532496', t1.c1)) BETWEEN ((v0.c0, v0.c0)) AND ((vt0.c1, v0.c0))))))OR(((vt0.c0)AND(v0.c0)))))OR((~ (t1.c2)))) DESC, CASE WHEN t1.c0 THEN ((vt0.c1)OR(t1.c2)) ELSE CASE v0.c1  WHEN vt0.c1 THEN t1.c1 WHEN vt0.c1 THEN v0.c2 ELSE NULL END END ASC LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)<(((vt0.c1) NOT NULL)))) ORDER BY TOTAL_CHANGES() ASC;
SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)<(((vt0.c1) NOT NULL))))AND(NULL))) ORDER BY CAST((((vt0.c1))<=((vt0.c1))) AS INTEGER)  NULLS LAST, vt0.c0;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)<(((vt0.c1) NOT NULL)))) ORDER BY TOTAL_CHANGES() ASC;
SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)<(((vt0.c1) NOT NULL))))AND(NULL))) ORDER BY CAST((((vt0.c1))<=((vt0.c1))) AS INTEGER)  NULLS LAST, vt0.c0;
SELECT ALL MIN(v0.c2) FROM t1, v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE t1.c0  WHEN v0.c2 THEN vt0.c0 WHEN v0.c1 THEN v0.c0 WHEN 'T,x9pup2d' THEN vt0.c1 WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN NULL END)) AND ((((t1.c0)GLOB(t1.c2)))))) ORDER BY (((v0.c2 IN (vt0.c0))) NOT BETWEEN (v0.c2) AND ((NOT (t1.c2)))) DESC, ((((v0.c2) IS FALSE))OR(((((vt0.c0)OR(t1.c1)))OR(v0.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(v0.c2) FROM t1, v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE t1.c0  WHEN v0.c2 THEN vt0.c0 WHEN v0.c1 THEN v0.c0 WHEN 'T,x9pup2d' THEN vt0.c1 WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN NULL END)) AND ((((t1.c0)GLOB(t1.c2)))))) ORDER BY ((((((CASE t1.c0  WHEN v0.c0 THEN v0.c2 WHEN t1.c0 THEN vt0.c0 END)OR((+ (t1.c0)))))OR(CASE t1.c2  WHEN 0.39115883947240004 THEN v0.c1 WHEN t1.c1 THEN v0.c2 END)))AND(v0.c0 COLLATE RTRIM)) DESC  NULLS LAST INTERSECT SELECT DISTINCT MIN(v0.c2) FROM t1, v0, vt0 WHERE ((((v0.c1 IN ())) BETWEEN (((vt0.c0) IS TRUE)) AND (CAST(t1.c1 AS INTEGER)))) ORDER BY ((((((CASE t1.c0  WHEN v0.c0 THEN v0.c2 WHEN t1.c0 THEN vt0.c0 END)OR((+ (t1.c0)))))OR(CASE t1.c2  WHEN 0.39115883947240004 THEN v0.c1 WHEN t1.c1 THEN v0.c2 END)))AND(v0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT * FROM t1, v0 WHERE ((((((((((NOT (v0.c2)))AND(CAST(t1.c1 AS NUMERIC))))AND('-1015592478')))OR((('751167935') BETWEEN (t1.c2) AND (v0.c1)))))OR(((v0.c1) NOTNULL)))) ORDER BY TRIM(DISTINCT CASE t1.c1  WHEN 0.7261698827491095 THEN NULL ELSE x'd3' END, (((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))), ((TRIM(t1.c0, t1.c2)) ISNULL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, v0 WHERE ((((((((((NOT (v0.c2)))AND(CAST(t1.c1 AS NUMERIC))))AND('-1015592478')))OR((('751167935') BETWEEN (t1.c2) AND (v0.c1)))))OR(((v0.c1) NOTNULL)))) ORDER BY TRIM(DISTINCT CASE t1.c1  WHEN 0.7261698827491095 THEN NULL ELSE x'd3' END, (((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))), ((TRIM(t1.c0, t1.c2)) ISNULL) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (CAST((v0.c2 IN (v0.c0, t1.c2)) AS REAL)) ORDER BY TRIM(DISTINCT CASE t1.c1  WHEN 0.7261698827491095 THEN NULL ELSE x'd3' END, (((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))), ((TRIM(t1.c0, t1.c2)) ISNULL) DESC  NULLS FIRST;
SELECT * FROM t1, v0 WHERE ((((((((((NOT (v0.c2)))AND(CAST(t1.c1 AS NUMERIC))))AND('-1015592478')))OR((('751167935') BETWEEN (t1.c2) AND (v0.c1)))))OR(((v0.c1) NOTNULL)))) ORDER BY TRIM(DISTINCT CASE t1.c1  WHEN 0.7261698827491095 THEN NULL ELSE x'd3' END, (((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))), ((TRIM(t1.c0, t1.c2)) ISNULL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, v0 WHERE ((((((((((NOT (v0.c2)))AND(CAST(t1.c1 AS NUMERIC))))AND('-1015592478')))OR((('751167935') BETWEEN (t1.c2) AND (v0.c1)))))OR(((v0.c1) NOTNULL)))) ORDER BY TRIM(DISTINCT CASE t1.c1  WHEN 0.7261698827491095 THEN NULL ELSE x'd3' END, (((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))), ((TRIM(t1.c0, t1.c2)) ISNULL) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (CAST((v0.c2 IN (v0.c0, t1.c2)) AS REAL)) ORDER BY TRIM(DISTINCT CASE t1.c1  WHEN 0.7261698827491095 THEN NULL ELSE x'd3' END, (((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))), ((TRIM(t1.c0, t1.c2)) ISNULL) DESC  NULLS FIRST;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) NOTNULL))));
SELECT MAX(vt0.c1) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) NOTNULL)))) INTERSECT SELECT MAX(vt0.c1) FROM vt0 WHERE (x'ae40');
SELECT ALL MIN(v0.c2) FROM vt0, t1, v0 WHERE (((((((((((((t1.c2)AND(vt0.c1)))AND(t1.c1)))AND(t1.c2)))AND(t1.c0)))AND(v0.c1)))OR(t1.c0)) COLLATE BINARY) ORDER BY ((ABS(DISTINCT vt0.c1)) NOT BETWEEN ((NOT (v0.c1))) AND (((v0.c2)*(t1.c1)))) DESC  NULLS FIRST;
SELECT MIN(v0.c2) FROM vt0, t1, v0 WHERE (((((((((((((((t1.c2)AND(vt0.c1)))AND(t1.c1)))AND(t1.c2)))AND(t1.c0)))AND(v0.c1)))OR(t1.c0)) COLLATE BINARY)AND(((('-137232395') ISNULL) IN ())))) ORDER BY ((ABS(DISTINCT vt0.c1)) NOT BETWEEN ((NOT (v0.c1))) AND (((v0.c2)*(t1.c1)))) DESC  NULLS FIRST LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE ((- (t1.c2))) ORDER BY ((CASE t1.c0  WHEN '^' THEN t1.c0 ELSE t1.c0 END)>>(((t1.c2)||(t1.c2)))) ASC  NULLS FIRST, (- (IFNULL(t1.c0, t1.c1)))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((- (t1.c2))) ORDER BY (((+ (t1.c1)))>(((t1.c0)LIKE(t1.c0))))  NULLS LAST LIMIT 0;
SELECT ALL MIN(v0.c2) FROM v0, vt0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))-(CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)));
SELECT DISTINCT MIN(v0.c2) FROM v0, vt0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))-(CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY (((vt0.c1)OR(v0.c1)) IN ((vt0.c1 IN (v0.c1)))) ASC  NULLS LAST INTERSECT SELECT DISTINCT MIN(v0.c2) FROM v0, vt0 WHERE ((((~ (0.6386069072510604)))<(ABS(DISTINCT v0.c0)))) ORDER BY (((vt0.c1)OR(v0.c1)) IN ((vt0.c1 IN (v0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY CAST((NOT (-1165466729)) AS NUMERIC) ASC, CHAR((~ (v0.c1))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE (((v0.c2)AND(((((v0.c0)*(v0.c1)))AND(((v0.c2) IS FALSE)))))) ORDER BY CAST((NOT (0xffffffffba886397)) AS NUMERIC) ASC, CHAR((~ (v0.c1))) DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY CAST((NOT (-1165466729)) AS NUMERIC) ASC, CHAR((~ (v0.c1))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE (((v0.c2)AND(((((v0.c0)*(v0.c1)))AND(((v0.c2) IS FALSE)))))) ORDER BY CAST((NOT (0xffffffffba886397)) AS NUMERIC) ASC, CHAR((~ (v0.c1))) DESC  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t1, vt0 WHERE (ABS(x''));
SELECT ALL * FROM t1, vt0 WHERE (((ABS(x''))AND(LIKELY(CAST(t1.c0 AS TEXT))))) INTERSECT SELECT * FROM t1, vt0 WHERE (((((t1.c2)=(t1.c2))) NOTNULL));
SELECT ALL * FROM t1, vt0 WHERE (ABS(x''));
SELECT ALL * FROM t1, vt0 WHERE (((ABS(x''))AND(LIKELY(CAST(t1.c0 AS TEXT))))) INTERSECT SELECT * FROM t1, vt0 WHERE (((((t1.c2)=(t1.c2))) NOTNULL));
SELECT MAX(v0.c0) FROM v0 WHERE (NULL);
SELECT DISTINCT MAX(v0.c0) FROM v0 WHERE (NULL) ORDER BY ((((((((LOWER(v0.c2))OR(NULL)))OR(((v0.c0)-('1539342956')))))OR(((v0.c0)||(v0.c1)))))AND(((((((v0.c1)AND(v0.c2)))OR(v0.c2)))OR(x'4f')))) DESC LIMIT 0X2;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((((x'')AND(t1.c2)))AND(t1.c0)) AS BLOB));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CAST(((((x'')AND(t1.c2)))AND(t1.c0)) AS BLOB))AND((t1.c1 IN (t1.c2)) COLLATE NOCASE COLLATE NOCASE))) LIMIT 2;
SELECT MAX(t1.c2) FROM t1, v0, vt0 WHERE (0.4687674305714211);
SELECT DISTINCT MAX(t1.c2) FROM t1, v0, vt0 WHERE (((0.4687674305714211)AND(LIKELY(CAST(0xffffffff8c449e5d AS BLOB))))) LIMIT 2;
SELECT * FROM v0 WHERE (CASE WHEN LIKE(v0.c1, v0.c1, 'v') THEN NULLIF(v0.c2, 0Xffffffffda2605c8) WHEN v0.c1 THEN '0.0' ELSE CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 END END);
SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN LIKE(v0.c1, v0.c1, 'v') THEN NULLIF(v0.c2, -635042360) WHEN v0.c1 THEN '0.0' ELSE CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 END END)AND((((v0.c2)|(v0.c0)) IN ())))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN (((v0.c1)/(v0.c0))) AND (v0.c1))) LIMIT 0;
SELECT * FROM v0 WHERE (CASE WHEN LIKE(v0.c1, v0.c1, 'v') THEN NULLIF(v0.c2, 0Xffffffffda2605c8) WHEN v0.c1 THEN '0.0' ELSE CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 END END);
SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN LIKE(v0.c1, v0.c1, 'v') THEN NULLIF(v0.c2, -635042360) WHEN v0.c1 THEN '0.0' ELSE CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 END END)AND((((v0.c2)|(v0.c0)) IN ())))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN (((v0.c1)/(v0.c0))) AND (v0.c1))) LIMIT 0;
SELECT MAX(v0.c1) FROM v0 WHERE (((((((((v0.c2)>=(v0.c1)))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN NULL END)))OR(v0.c0)))AND((- (v0.c0)))));
SELECT DISTINCT MAX(v0.c1) FROM v0 WHERE (((((((((v0.c2)>=(v0.c1)))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN NULL END)))OR(v0.c0)))AND((- (v0.c0))))) ORDER BY (v0.c2 IN ()) COLLATE NOCASE ASC, (((((((((('0.5939194056089225')|(v0.c1)))AND(json_array(v0.c2, 'c17', v0.c0, v0.c1, v0.c1))))AND(v0.c1)))OR(((v0.c1)IS(v0.c1)))))AND(CAST(v0.c0 AS NUMERIC))) ASC, (((v0.c1 IN ())) NOT BETWEEN (((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(v0.c1))) AND (CAST(v0.c2 AS REAL)));
SELECT ALL MAX(vt0.c0) FROM vt0, t1 NOT INDEXED WHERE (CAST(((t1.c1) BETWEEN (t1.c0) AND (0.49823466711246756)) AS TEXT)) ORDER BY ((CAST(t1.c0 AS NUMERIC))>=(((t1.c2)OR(t1.c1))))  NULLS LAST;
SELECT ALL MAX(vt0.c0) FROM vt0, t1 WHERE (((CAST(((t1.c1) BETWEEN (t1.c0) AND (0.49823466711246756)) AS TEXT))AND(LIKELIHOOD(x'9a38', (NULL IN (vt0.c1)))))) ORDER BY ((CAST(t1.c0 AS NUMERIC))>=(((t1.c2)OR(t1.c1))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((0.5066902280358337))));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((0.5066902280358337)))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((0.39154694265566237) ISNULL))), ((((((((((vt0.c1)&(vt0.c1)))AND(((vt0.c0)GLOB(vt0.c1)))))AND((0.6315492442021501 IN (vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((1132885032) IS FALSE))) DESC  NULLS LAST, CASE WHEN ((vt0.c1) NOT NULL) THEN (('4')+(vt0.c1)) WHEN '-1465361079' THEN ((vt0.c1) BETWEEN (0.44990757965340544) AND ('')) ELSE (0.6499374350880597 IN ()) END DESC INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)<(NULL))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((0.39154694265566237) ISNULL))), ((((((((((vt0.c1)&(vt0.c1)))AND(((vt0.c0)GLOB(vt0.c1)))))AND((0.6315492442021501 IN (vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((1132885032) IS FALSE))) DESC  NULLS LAST, CASE WHEN ((vt0.c1) NOT NULL) THEN (('4')+(vt0.c1)) WHEN '-1465361079' THEN ((vt0.c1) BETWEEN (0.44990757965340544) AND ('')) ELSE (0.6499374350880597 IN ()) END DESC;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((0.5066902280358337))));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((0.5066902280358337)))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((0.39154694265566237) ISNULL))), ((((((((((vt0.c1)&(vt0.c1)))AND(((vt0.c0)GLOB(vt0.c1)))))AND((0.6315492442021501 IN (vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((1132885032) IS FALSE))) DESC  NULLS LAST, CASE WHEN ((vt0.c1) NOT NULL) THEN (('4')+(vt0.c1)) WHEN '-1465361079' THEN ((vt0.c1) BETWEEN (0.44990757965340544) AND ('')) ELSE (0.6499374350880597 IN ()) END DESC INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)<(NULL))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((0.39154694265566237) ISNULL))), ((((((((((vt0.c1)&(vt0.c1)))AND(((vt0.c0)GLOB(vt0.c1)))))AND((0.6315492442021501 IN (vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((1132885032) IS FALSE))) DESC  NULLS LAST, CASE WHEN ((vt0.c1) NOT NULL) THEN (('4')+(vt0.c1)) WHEN '-1465361079' THEN ((vt0.c1) BETWEEN (0.44990757965340544) AND ('')) ELSE (0.6499374350880597 IN ()) END DESC;
SELECT MAX(t1.c1) FROM vt0, v0, t1 WHERE (((vt0.c1)IS NOT(v0.c1)) COLLATE RTRIM) ORDER BY 0.5447698893726052;
SELECT MAX(t1.c1) FROM vt0, v0, t1 WHERE (((((vt0.c1)IS NOT(v0.c1)) COLLATE RTRIM)AND(t1.c2))) ORDER BY 0.5447698893726052 LIMIT 0x3;
SELECT MAX(v0.c2) FROM vt0, v0 WHERE (((- ('398083340')) IN (v0.c0)));
SELECT DISTINCT MAX(v0.c2) FROM vt0, v0 WHERE (((((- ('398083340')) IN (v0.c0)))AND(HEX(DISTINCT v0.c0)))) ORDER BY (((((v0.c0 IN ()))OR('0.5939194056089225')))OR(((v0.c2) NOT NULL))) DESC INTERSECT SELECT DISTINCT MAX(v0.c2) FROM vt0, v0 WHERE (((((((((((v0.c1) NOT NULL))AND('-790725355')))AND(UNICODE(v0.c1))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR(CAST(vt0.c1 AS REAL)))) ORDER BY (((((v0.c0 IN ()))OR('0.5939194056089225')))OR(((v0.c2) NOT NULL))) DESC;
SELECT ALL * FROM t1, v0 WHERE ((NOT (((t1.c1)LIKE(t1.c2))))) ORDER BY (((v0.c2)) BETWEEN ((((((((v0.c2)OR(0.8864389567698686)))AND(v0.c1)))AND(v0.c1)))) AND (((NULL IN (t1.c0, '0.3608507751790049')))));
SELECT DISTINCT * FROM t1, v0 WHERE ((NOT (((t1.c1)LIKE(t1.c2))))) ORDER BY CASE ((v0.c1) NOT NULL)  WHEN v0.c1 COLLATE NOCASE THEN (((t1.c0, t1.c1)) BETWEEN ((t1.c1, v0.c0)) AND ((NULL, v0.c0))) WHEN ((t1.c2)OR(t1.c0)) THEN (- (v0.c1)) ELSE t1.c0 COLLATE NOCASE END DESC  NULLS LAST, (((t1.c1, v0.c2, v0.c0)) NOT BETWEEN ((TRIM(DISTINCT v0.c0, t1.c2), (v0.c1 IN (x'', v0.c0)), v0.c1)) AND ((t1.c1 COLLATE BINARY, ((v0.c1) BETWEEN (t1.c2) AND (x'60')), NULL)))  NULLS FIRST, (((- (t1.c2)))==(((((((((v0.c2)AND(v0.c1)))AND(t1.c2)))AND(v0.c1)))OR(v0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, v0 WHERE ((NOT (((t1.c1)LIKE(t1.c2))))) ORDER BY (((v0.c2)) BETWEEN ((((((((v0.c2)OR(0.8864389567698686)))AND(v0.c1)))AND(v0.c1)))) AND (((NULL IN (t1.c0, '0.3608507751790049')))));
SELECT DISTINCT * FROM t1, v0 WHERE ((NOT (((t1.c1)LIKE(t1.c2))))) ORDER BY CASE ((v0.c1) NOT NULL)  WHEN v0.c1 COLLATE NOCASE THEN (((t1.c0, t1.c1)) BETWEEN ((t1.c1, v0.c0)) AND ((NULL, v0.c0))) WHEN ((t1.c2)OR(t1.c0)) THEN (- (v0.c1)) ELSE t1.c0 COLLATE NOCASE END DESC  NULLS LAST, (((t1.c1, v0.c2, v0.c0)) NOT BETWEEN ((TRIM(DISTINCT v0.c0, t1.c2), (v0.c1 IN (x'', v0.c0)), v0.c1)) AND ((t1.c1 COLLATE BINARY, ((v0.c1) BETWEEN (t1.c2) AND (x'60')), NULL)))  NULLS FIRST, (((- (t1.c2)))==(((((((((v0.c2)AND(v0.c1)))AND(t1.c2)))AND(v0.c1)))OR(v0.c1)))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (0X6e123d36) ORDER BY (((('')/(vt0.c0)))>((vt0.c1 IN (vt0.c0))));
SELECT DISTINCT * FROM vt0 WHERE (((0x6e123d36)AND((- ('0.5422397432676856'))))) ORDER BY MAX(CAST(vt0.c1 AS INTEGER), ((vt0.c1) IS TRUE)) ASC, ((((vt0.c0) BETWEEN (vt0.c1) AND (x'2bc2')))&('1064835468' COLLATE NOCASE)), ((vt0.c1) NOT NULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (0X6e123d36) ORDER BY (((('')/(vt0.c0)))>((vt0.c1 IN (vt0.c0))));
SELECT DISTINCT * FROM vt0 WHERE (((0x6e123d36)AND((- ('0.5422397432676856'))))) ORDER BY MAX(CAST(vt0.c1 AS INTEGER), ((vt0.c1) IS TRUE)) ASC, ((((vt0.c0) BETWEEN (vt0.c1) AND (x'2bc2')))&('1064835468' COLLATE NOCASE)), ((vt0.c1) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((x'38' IN (v0.c0)))*(((((v0.c2)AND(v0.c2)))OR(v0.c0)))) WHERE ('');
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((x'38' IN (v0.c0)))*(((((v0.c2)AND(v0.c2)))OR(v0.c0)))) WHERE ('') ORDER BY (~ (((((vt0.c0)OR(v0.c1)))AND(v0.c2))))  NULLS FIRST, ((((0.8496838661897832)AND(CAST(vt0.c0 AS NUMERIC))))AND(((v0.c0) NOTNULL)))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT * FROM v0 INNER JOIN vt0 ON (((x'38' IN (v0.c0)))*(((((v0.c2)AND(v0.c2)))OR(v0.c0)))) WHERE ((NOT (vt0.c0))) ORDER BY (~ (((((vt0.c0)OR(v0.c1)))AND(v0.c2))))  NULLS FIRST, ((((0.8496838661897832)AND(CAST(vt0.c0 AS NUMERIC))))AND(((v0.c0) NOTNULL)))  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((x'38' IN (v0.c0)))*(((((v0.c2)AND(v0.c2)))OR(v0.c0)))) WHERE ('');
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((x'38' IN (v0.c0)))*(((((v0.c2)AND(v0.c2)))OR(v0.c0)))) WHERE ('') ORDER BY (~ (((((vt0.c0)OR(v0.c1)))AND(v0.c2))))  NULLS FIRST, ((((0.8496838661897832)AND(CAST(vt0.c0 AS NUMERIC))))AND(((v0.c0) NOTNULL)))  NULLS FIRST LIMIT 0x1 INTERSECT SELECT * FROM v0 INNER JOIN vt0 ON (((x'38' IN (v0.c0)))*(((((v0.c2)AND(v0.c2)))OR(v0.c0)))) WHERE ((NOT (vt0.c0))) ORDER BY (~ (((((vt0.c0)OR(v0.c1)))AND(v0.c2))))  NULLS FIRST, ((((0.8496838661897832)AND(CAST(vt0.c0 AS NUMERIC))))AND(((v0.c0) NOTNULL)))  NULLS FIRST LIMIT 0X1;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, '2
')) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), UNLIKELY(DISTINCT vt0.c0))) AND ((vt0.c0, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, '2
')) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), UNLIKELY(DISTINCT vt0.c0))) AND ((vt0.c0, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)))) ORDER BY vt0.c0, ((x'07') NOT BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND ((+ (0.5985329040249153)))), (((vt0.c0)) BETWEEN (((vt0.c1 IN ()))) AND (('')))  NULLS LAST, HEX(vt0.c0) COLLATE BINARY LIMIT 3;
SELECT * FROM vt0 WHERE ('Z_\');
SELECT ALL * FROM vt0 WHERE ('Z_\') ORDER BY CAST((+ (0.7747561948773806)) AS REAL)  NULLS LAST LIMIT 0X2 INTERSECT SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<=(vt0.c0)))<((vt0.c0 IN (vt0.c1))))) ORDER BY CAST((+ (0.7747561948773806)) AS REAL)  NULLS LAST LIMIT 2;
SELECT * FROM vt0 WHERE ('Z_\');
SELECT ALL * FROM vt0 WHERE ('Z_\') ORDER BY CAST((+ (0.7747561948773806)) AS REAL)  NULLS LAST LIMIT 0X2 INTERSECT SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<=(vt0.c0)))<((vt0.c0 IN (vt0.c1))))) ORDER BY CAST((+ (0.7747561948773806)) AS REAL)  NULLS LAST LIMIT 2;
SELECT * FROM t1, vt0 WHERE (((t1.c1)%(t1.c1)) COLLATE NOCASE) ORDER BY x'38c2e0' ASC;
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c1)%(t1.c1)) COLLATE NOCASE)AND((((vt0.c1) ISNULL) IN (((t1.c0) BETWEEN (NULL) AND (vt0.c0))))))) ORDER BY x'38c2e0' ASC;
SELECT * FROM t1, vt0 WHERE (((t1.c1)%(t1.c1)) COLLATE NOCASE) ORDER BY x'38c2e0' ASC;
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c1)%(t1.c1)) COLLATE NOCASE)AND((((vt0.c1) ISNULL) IN (((t1.c0) BETWEEN (NULL) AND (vt0.c0))))))) ORDER BY x'38c2e0' ASC;
SELECT * FROM v0, t1, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((x'967295') BETWEEN (vt0.c0) AND (t1.c1))) AND (((vt0.c0) NOT BETWEEN (t1.c2) AND (t1.c0))))) ORDER BY (((((((((((NULL, v0.c2))<=((vt0.c1, vt0.c1))))OR(0.5742022625870409)))OR(((vt0.c1)<=(t1.c1)))))AND((vt0.c1 IN (v0.c0, vt0.c1)))))AND((((v0.c1, v0.c1, vt0.c1, t1.c1, t1.c1, t1.c0))<((t1.c0, '0.3141732734618913', t1.c0, v0.c1, vt0.c0, v0.c1)))))  NULLS FIRST, CASE WHEN 0.7449507790363504 COLLATE BINARY THEN ((v0.c2) ISNULL) ELSE ((t1.c0) IS TRUE) END DESC;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((x'967295') BETWEEN (vt0.c0) AND (t1.c1))) AND (((vt0.c0) NOT BETWEEN (t1.c2) AND (t1.c0))))) ORDER BY (((((((((((NULL, v0.c2))<=((vt0.c1, vt0.c1))))OR(0.5742022625870409)))OR(((vt0.c1)<=(t1.c1)))))AND((vt0.c1 IN (v0.c0, vt0.c1)))))AND((((v0.c1, v0.c1, vt0.c1, t1.c1, t1.c1, t1.c0))<((t1.c0, '0.3141732734618913', t1.c0, v0.c1, vt0.c0, v0.c1)))))  NULLS FIRST, CASE WHEN 0.7449507790363504 COLLATE BINARY THEN ((v0.c2) ISNULL) ELSE ((t1.c0) IS TRUE) END DESC;
SELECT * FROM v0, t1, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((x'967295') BETWEEN (vt0.c0) AND (t1.c1))) AND (((vt0.c0) NOT BETWEEN (t1.c2) AND (t1.c0))))) ORDER BY (((((((((((NULL, v0.c2))<=((vt0.c1, vt0.c1))))OR(0.5742022625870409)))OR(((vt0.c1)<=(t1.c1)))))AND((vt0.c1 IN (v0.c0, vt0.c1)))))AND((((v0.c1, v0.c1, vt0.c1, t1.c1, t1.c1, t1.c0))<((t1.c0, '0.3141732734618913', t1.c0, v0.c1, vt0.c0, v0.c1)))))  NULLS FIRST, CASE WHEN 0.7449507790363504 COLLATE BINARY THEN ((v0.c2) ISNULL) ELSE ((t1.c0) IS TRUE) END DESC;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((x'967295') BETWEEN (vt0.c0) AND (t1.c1))) AND (((vt0.c0) NOT BETWEEN (t1.c2) AND (t1.c0))))) ORDER BY (((((((((((NULL, v0.c2))<=((vt0.c1, vt0.c1))))OR(0.5742022625870409)))OR(((vt0.c1)<=(t1.c1)))))AND((vt0.c1 IN (v0.c0, vt0.c1)))))AND((((v0.c1, v0.c1, vt0.c1, t1.c1, t1.c1, t1.c0))<((t1.c0, '0.3141732734618913', t1.c0, v0.c1, vt0.c0, v0.c1)))))  NULLS FIRST, CASE WHEN 0.7449507790363504 COLLATE BINARY THEN ((v0.c2) ISNULL) ELSE ((t1.c0) IS TRUE) END DESC;
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) AS TEXT)) ORDER BY (((t1.c2, -283086245)) NOT BETWEEN ((CASE WHEN v0.c2 THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC))) AND ((((((((t1.c1)AND(0.17620509916882832)))OR(vt0.c1)))AND(vt0.c1)), 0.8015470424428771)))  NULLS FIRST, CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c1))  WHEN ((vt0.c0) BETWEEN (v0.c2) AND (t1.c0)) THEN ((v0.c2)>>(0.7740050184397024)) ELSE CASE t1.c0  WHEN vt0.c0 THEN t1.c1 WHEN v0.c0 THEN vt0.c0 WHEN t1.c1 THEN t1.c1 END END ASC, (NOT (((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) AS TEXT)) ORDER BY (((t1.c2, 0xffffffffef20725b)) NOT BETWEEN ((CASE WHEN v0.c2 THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC))) AND ((((((((t1.c1)AND(0.17620509916882832)))OR(vt0.c1)))AND(vt0.c1)), 0.8015470424428771)))  NULLS FIRST, CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c1))  WHEN ((vt0.c0) BETWEEN (v0.c2) AND (t1.c0)) THEN ((v0.c2)>>(0.7740050184397024)) ELSE CASE t1.c0  WHEN vt0.c0 THEN t1.c1 WHEN v0.c0 THEN vt0.c0 WHEN t1.c1 THEN t1.c1 END END ASC, (NOT (((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (((((((((t1.c1)OR(t1.c0)))AND(v0.c0)))AND(NULL)))>((v0.c1 IN (v0.c1, vt0.c1, v0.c2))))) ORDER BY (((t1.c2, 0Xffffffffef20725b)) NOT BETWEEN ((CASE WHEN v0.c2 THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC))) AND ((((((((t1.c1)AND(0.17620509916882832)))OR(vt0.c1)))AND(vt0.c1)), 0.8015470424428771)))  NULLS FIRST, CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c1))  WHEN ((vt0.c0) BETWEEN (v0.c2) AND (t1.c0)) THEN ((v0.c2)>>(0.7740050184397024)) ELSE CASE t1.c0  WHEN vt0.c0 THEN t1.c1 WHEN v0.c0 THEN vt0.c0 WHEN t1.c1 THEN t1.c1 END END ASC, (NOT (((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST;
SELECT MIN(t1.c0) FROM v0 CROSS JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN (LIKELY(DISTINCT x'43'))) NATURAL JOIN t1 WHERE (((((t1.c0)IS NOT(t1.c1)))AND(((t1.c1)*(v0.c2)))));
SELECT DISTINCT MIN(t1.c0) FROM v0 CROSS JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN (LIKELY(DISTINCT x'43'))) NATURAL JOIN t1 WHERE (((((t1.c0)IS NOT(t1.c1)))AND(((t1.c1)*(v0.c2))))) ORDER BY (((((t1.c0)) BETWEEN ((v0.c1)) AND ((t1.c2)))) IS FALSE)  NULLS LAST, ((CAST(v0.c2 AS INTEGER))+(LIKELY(vt0.c1))) LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM v0 CROSS JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN (LIKELY(DISTINCT x'43'))) NATURAL JOIN t1 WHERE (0.5236744656041101) ORDER BY (((((t1.c0)) BETWEEN ((v0.c1)) AND ((t1.c2)))) IS FALSE)  NULLS LAST, ((CAST(v0.c2 AS INTEGER))+(LIKELY(vt0.c1))) LIMIT 0;
SELECT ALL * FROM vt0, v0 WHERE (((v0.c2) NOT NULL));
SELECT DISTINCT * FROM vt0, v0 WHERE (((v0.c2) NOT NULL)) ORDER BY CASE WHEN vt0.c1 THEN ((((((v0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) WHEN CASE vt0.c1  WHEN v0.c2 THEN v0.c1 END THEN ((v0.c1) ISNULL) WHEN (- (vt0.c0)) THEN (((v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, vt0.c0)) AND ((vt0.c1, v0.c1))) WHEN (NOT (v0.c2)) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c0)) WHEN '㠻c' THEN ((vt0.c1)/(vt0.c1)) END  NULLS FIRST, (~ (((v0.c2) ISNULL))) ASC, v0.c0 COLLATE BINARY DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0, v0 WHERE ((((v0.c1, v0.c2, vt0.c0, vt0.c0)) BETWEEN ((((((((vt0.c1)OR(x'33')))AND(v0.c0)))AND(v0.c1)), ((vt0.c0)|(v0.c1)), (~ (v0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 END)) AND ((((0.9102878448041943)IS(vt0.c1)), CAST(v0.c0 AS REAL), v0.c2 COLLATE NOCASE, (((('*&
烚 F~')OR(vt0.c1)))AND('-8580325077043121166 3224451731516461120T-1730650376036709493 1燋{')))))) ORDER BY CASE WHEN vt0.c1 THEN ((((((v0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) WHEN CASE vt0.c1  WHEN v0.c2 THEN v0.c1 END THEN ((v0.c1) ISNULL) WHEN (- (vt0.c0)) THEN (((v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, vt0.c0)) AND ((vt0.c1, v0.c1))) WHEN (NOT (v0.c2)) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c0)) WHEN '㠻c' THEN ((vt0.c1)/(vt0.c1)) END  NULLS FIRST, (~ (((v0.c2) ISNULL))) ASC, v0.c0 COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((v0.c2) NOT NULL));
SELECT DISTINCT * FROM vt0, v0 WHERE (((v0.c2) NOT NULL)) ORDER BY CASE WHEN vt0.c1 THEN ((((((v0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) WHEN CASE vt0.c1  WHEN v0.c2 THEN v0.c1 END THEN ((v0.c1) ISNULL) WHEN (- (vt0.c0)) THEN (((v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, vt0.c0)) AND ((vt0.c1, v0.c1))) WHEN (NOT (v0.c2)) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c0)) WHEN '㠻c' THEN ((vt0.c1)/(vt0.c1)) END  NULLS FIRST, (~ (((v0.c2) ISNULL))) ASC, v0.c0 COLLATE BINARY DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0, v0 WHERE ((((v0.c1, v0.c2, vt0.c0, vt0.c0)) BETWEEN ((((((((vt0.c1)OR(x'33')))AND(v0.c0)))AND(v0.c1)), ((vt0.c0)|(v0.c1)), (~ (v0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 END)) AND ((((0.9102878448041943)IS(vt0.c1)), CAST(v0.c0 AS REAL), v0.c2 COLLATE NOCASE, (((('*&
烚 F~')OR(vt0.c1)))AND('-8580325077043121166 3224451731516461120T-1730650376036709493 1燋{')))))) ORDER BY CASE WHEN vt0.c1 THEN ((((((v0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) WHEN CASE vt0.c1  WHEN v0.c2 THEN v0.c1 END THEN ((v0.c1) ISNULL) WHEN (- (vt0.c0)) THEN (((v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, vt0.c0)) AND ((vt0.c1, v0.c1))) WHEN (NOT (v0.c2)) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c0)) WHEN '㠻c' THEN ((vt0.c1)/(vt0.c1)) END  NULLS FIRST, (~ (((v0.c2) ISNULL))) ASC, v0.c0 COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) LIMIT 0X1;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) LIMIT 0X1;
SELECT ALL * FROM v0, t1 WHERE ((- (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY TRIM(DISTINCT CASE WHEN v0.c2 THEN t1.c1 END, '8煮<')  NULLS LAST, CAST(t1.c2 AS BLOB) ASC  NULLS FIRST, (+ ((- (t1.c0))))  NULLS LAST;
SELECT DISTINCT * FROM v0, t1 WHERE ((- (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY UNLIKELY(DISTINCT (t1.c0 IN (t1.c2, t1.c2))) DESC, CAST(((v0.c2) ISNULL) AS TEXT)  NULLS FIRST LIMIT 0x4 INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE ('465785973') ORDER BY UNLIKELY(DISTINCT (t1.c0 IN (t1.c2, t1.c2))) DESC, CAST(((v0.c2) ISNULL) AS TEXT)  NULLS FIRST LIMIT 4;
SELECT ALL * FROM v0, t1 WHERE ((- (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY TRIM(DISTINCT CASE WHEN v0.c2 THEN t1.c1 END, '8煮<')  NULLS LAST, CAST(t1.c2 AS BLOB) ASC  NULLS FIRST, (+ ((- (t1.c0))))  NULLS LAST;
SELECT DISTINCT * FROM v0, t1 WHERE ((- (((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY UNLIKELY(DISTINCT (t1.c0 IN (t1.c2, t1.c2))) DESC, CAST(((v0.c2) ISNULL) AS TEXT)  NULLS FIRST LIMIT 0x4 INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE ('465785973') ORDER BY UNLIKELY(DISTINCT (t1.c0 IN (t1.c2, t1.c2))) DESC, CAST(((v0.c2) ISNULL) AS TEXT)  NULLS FIRST LIMIT 4;
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c2 AS NUMERIC))|((v0.c2 IN (0.5402392746281206))))) ORDER BY LIKELY(((vt0.c0)>=(v0.c0))) ASC  NULLS FIRST, vt0.c0  NULLS LAST, ((0.11048240314193292)*(CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT DISTINCT * FROM v0, vt0 WHERE (((CAST(v0.c2 AS NUMERIC))|((v0.c2 IN (0.5402392746281206))))) ORDER BY LIKELY(((vt0.c0)>=(v0.c0))) ASC  NULLS FIRST, vt0.c0  NULLS LAST, ((0.11048240314193292)*(CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END)) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((COALESCE(v0.c1, 950883003))OR(x'')))AND(vt0.c1 COLLATE RTRIM)))AND(((x'')!=(v0.c2)))))OR(COALESCE('I08', v0.c0, vt0.c1)))) ORDER BY LIKELY(((vt0.c0)>=(v0.c0))) ASC  NULLS FIRST, vt0.c0  NULLS LAST, ((0.11048240314193292)*(CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END)) ASC  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c2 AS NUMERIC))|((v0.c2 IN (0.5402392746281206))))) ORDER BY LIKELY(((vt0.c0)>=(v0.c0))) ASC  NULLS FIRST, vt0.c0  NULLS LAST, ((0.11048240314193292)*(CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT DISTINCT * FROM v0, vt0 WHERE (((CAST(v0.c2 AS NUMERIC))|((v0.c2 IN (0.5402392746281206))))) ORDER BY LIKELY(((vt0.c0)>=(v0.c0))) ASC  NULLS FIRST, vt0.c0  NULLS LAST, ((0.11048240314193292)*(CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END)) ASC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((COALESCE(v0.c1, 950883003))OR(x'')))AND(vt0.c1 COLLATE RTRIM)))AND(((x'')!=(v0.c2)))))OR(COALESCE('I08', v0.c0, vt0.c1)))) ORDER BY LIKELY(((vt0.c0)>=(v0.c0))) ASC  NULLS FIRST, vt0.c0  NULLS LAST, ((0.11048240314193292)*(CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END)) ASC  NULLS LAST LIMIT 0x1;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (CAST((~ (vt0.c1)) AS BLOB));
SELECT MIN(vt0.c0) FROM vt0 WHERE (CAST((~ (vt0.c1)) AS BLOB)) ORDER BY (((NULL)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c1))>((vt0.c1)))))) LIMIT 0x1 INTERSECT SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (CASE 1076981978  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN TRIM(vt0.c0, vt0.c0) THEN (((vt0.c1)) BETWEEN (('~Q[QKN*恻')) AND ((vt0.c1))) WHEN (((vt0.c0, vt0.c1)) BETWEEN ((0.16320095061678597, NULL)) AND ((vt0.c0, vt0.c0))) THEN vt0.c0 COLLATE NOCASE WHEN json_array_length(x'd803f2', vt0.c0) THEN ((vt0.c0)<=(vt0.c1)) ELSE ((((((vt0.c1)AND('')))OR(vt0.c1)))OR(vt0.c1)) END) ORDER BY (((NULL)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c1))>((vt0.c1)))))) LIMIT 1;
SELECT ALL * FROM vt0, v0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c1 END IN ((v0.c2 IN (v0.c0)), (- (v0.c2))))) ORDER BY COALESCE(DISTINCT (- (v0.c2)), 0.8105230950651646), (((v0.c1, v0.c2)) BETWEEN (((v0.c0 IN ()), TYPEOF(v0.c0))) AND (((- (v0.c0)), (v0.c1 IN (v0.c0, v0.c1)))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, v0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c1 END IN ((v0.c2 IN (v0.c0)), (- (v0.c2))))) ORDER BY v0.c0  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c1 END IN ((v0.c2 IN (v0.c0)), (- (v0.c2))))) ORDER BY COALESCE(DISTINCT (- (v0.c2)), 0.8105230950651646), (((v0.c1, v0.c2)) BETWEEN (((v0.c0 IN ()), TYPEOF(v0.c0))) AND (((- (v0.c0)), (v0.c1 IN (v0.c0, v0.c1)))))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, v0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c1 END IN ((v0.c2 IN (v0.c0)), (- (v0.c2))))) ORDER BY v0.c0  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 END COLLATE NOCASE);
SELECT DISTINCT * FROM vt0, v0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 END COLLATE NOCASE) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, v0 WHERE (((v0.c1 COLLATE NOCASE) BETWEEN (((((((((v0.c1)OR(v0.c1)))AND(v0.c0)))AND(v0.c1)))OR(vt0.c0))) AND (((v0.c0) ISNULL)))) LIMIT 0x0;
SELECT * FROM vt0, v0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 END COLLATE NOCASE);
SELECT DISTINCT * FROM vt0, v0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 END COLLATE NOCASE) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, v0 WHERE (((v0.c1 COLLATE NOCASE) BETWEEN (((((((((v0.c1)OR(v0.c1)))AND(v0.c0)))AND(v0.c1)))OR(vt0.c0))) AND (((v0.c0) ISNULL)))) LIMIT 0x0;
SELECT ALL * FROM v0, vt0, t1 WHERE ((- (t1.c1)));
SELECT DISTINCT * FROM v0, vt0, t1 NOT INDEXED WHERE ((((- (t1.c1)))AND(x'')));
SELECT ALL * FROM v0, vt0, t1 WHERE ((- (t1.c1)));
SELECT DISTINCT * FROM v0, vt0, t1 NOT INDEXED WHERE ((((- (t1.c1)))AND(x'')));
SELECT * FROM t1 WHERE (((((t1.c1)>=(t1.c2))) IS TRUE)) ORDER BY TRIM(DISTINCT IFNULL(DISTINCT t1.c0, t1.c1), ((t1.c1) NOT BETWEEN (NULL) AND (t1.c2))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c1)=(t1.c2))) IS TRUE)) ORDER BY (((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((0.7388713736744574, t1.c0))))>>(('1133038819' IN ()))), CASE ((t1.c0) BETWEEN (t1.c2) AND (t1.c0))  WHEN CASE t1.c1  WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c2 END THEN ((t1.c0)>('1709102821')) WHEN '-296531817' THEN (t1.c2 IN (t1.c2, t1.c2)) ELSE t1.c1 COLLATE BINARY END, LIKELY((((t1.c2, t1.c0))==((t1.c0, t1.c1))))  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 WHERE (((((t1.c1)>=(t1.c2))) IS TRUE)) ORDER BY TRIM(DISTINCT IFNULL(DISTINCT t1.c0, t1.c1), ((t1.c1) NOT BETWEEN (NULL) AND (t1.c2))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c1)=(t1.c2))) IS TRUE)) ORDER BY (((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((0.7388713736744574, t1.c0))))>>(('1133038819' IN ()))), CASE ((t1.c0) BETWEEN (t1.c2) AND (t1.c0))  WHEN CASE t1.c1  WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c2 END THEN ((t1.c0)>('1709102821')) WHEN '-296531817' THEN (t1.c2 IN (t1.c2, t1.c2)) ELSE t1.c1 COLLATE BINARY END, LIKELY((((t1.c2, t1.c0))==((t1.c0, t1.c1))))  NULLS FIRST LIMIT 0x0;
SELECT MIN(t1.c2) FROM t1, v0, vt0 WHERE ((('J1')IS(((v0.c2) IS FALSE))));
SELECT DISTINCT MIN(t1.c2) FROM t1, v0, vt0 WHERE ((((('J1')IS(((v0.c2) IS FALSE))))AND(((((vt0.c0)&(vt0.c0)))|((((0.24049010248394698, vt0.c0))<((v0.c2, vt0.c0)))))))) LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(t1.c2) FROM t1, v0, vt0 WHERE (x'') LIMIT 0;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS REAL))OR((vt0.c1 IN (vt0.c0, vt0.c0)))))OR(vt0.c0)))OR((~ (vt0.c0)))))AND(ABS(DISTINCT vt0.c0))));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((((((((CAST(vt0.c0 AS REAL))OR((vt0.c1 IN (vt0.c0)))))OR(vt0.c0)))OR((~ (vt0.c0)))))AND(ABS(DISTINCT vt0.c0))))AND((((vt0.c0 IN ())) BETWEEN (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))) AND (NULL))))) ORDER BY LIKELY(vt0.c1) COLLATE RTRIM DESC, (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((((NULL) IS FALSE), vt0.c0, ((vt0.c0)<(vt0.c0)), vt0.c1, ((vt0.c1)OR(vt0.c0)), ((vt0.c0) NOT NULL))) AND ((vt0.c1, rtreenode(vt0.c1, vt0.c0), (NOT (vt0.c0)), ((vt0.c1)<(vt0.c0)), vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN 0x478b6c8d THEN vt0.c1 END))), CASE ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1))  WHEN (NOT (vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN (~ (vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c0 THEN ' k>+X-劻
' WHEN x'' THEN vt0.c1 END ELSE LOWER(DISTINCT vt0.c0) END DESC;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((((((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c2))))AND(CAST(vt0.c0 AS BLOB))))OR(((((((t1.c1)AND(t1.c1)))AND(t1.c2)))AND(t1.c0)))))OR(vt0.c0 COLLATE RTRIM)) WHERE (0.018594452656928606) ORDER BY (((load_extension(t1.c2), ABS(t1.c1), vt0.c1, ('1709102821' IN (t1.c2, 0.9793038464858203, t1.c0))))>((CAST(t1.c0 AS NUMERIC), '!', t1.c2 COLLATE BINARY, ((((vt0.c1)AND(t1.c2)))OR(vt0.c0))))), ((((((((((((((t1.c1)AND(vt0.c0)))OR(t1.c0)))AND(t1.c1)))OR(vt0.c0)))AND(CAST(vt0.c1 AS BLOB))))OR(t1.c0 COLLATE NOCASE)))OR(CAST(NULL AS REAL)));
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON (((((((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c2))))AND(CAST(vt0.c0 AS BLOB))))OR(((((((t1.c1)AND(t1.c1)))AND(t1.c2)))AND(t1.c0)))))OR(vt0.c0 COLLATE RTRIM)) WHERE (((0.018594452656928606)AND(((((CAST(vt0.c0 AS REAL))OR((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((t1.c0, t1.c0, t1.c2)) AND ((t1.c0, '1570022773', t1.c1))))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c2))))))) ORDER BY t1.c2  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((((((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c2))))AND(CAST(vt0.c0 AS BLOB))))OR(((((((t1.c1)AND(t1.c1)))AND(t1.c2)))AND(t1.c0)))))OR(vt0.c0 COLLATE RTRIM)) WHERE (0.018594452656928606) ORDER BY (((load_extension(t1.c2), ABS(t1.c1), vt0.c1, ('1709102821' IN (t1.c2, 0.9793038464858203, t1.c0))))>((CAST(t1.c0 AS NUMERIC), '!', t1.c2 COLLATE BINARY, ((((vt0.c1)AND(t1.c2)))OR(vt0.c0))))), ((((((((((((((t1.c1)AND(vt0.c0)))OR(t1.c0)))AND(t1.c1)))OR(vt0.c0)))AND(CAST(vt0.c1 AS BLOB))))OR(t1.c0 COLLATE NOCASE)))OR(CAST(NULL AS REAL)));
SELECT ALL MIN(v0.c1) FROM t1, vt0 LEFT OUTER JOIN v0 ON ((((((((((vt0.c0)>=(t1.c0)))OR(((((((t1.c1)OR(vt0.c1)))AND(t1.c2)))AND(t1.c0)))))AND((((t1.c2, v0.c1)) NOT BETWEEN ((vt0.c1, t1.c2)) AND ((t1.c0, vt0.c1))))))AND(((v0.c2) BETWEEN (t1.c1) AND (vt0.c1)))))OR(((t1.c1)==(v0.c0)))) WHERE (json_object(x'c2' COLLATE NOCASE, '-1345736733', ((((((((v0.c1)AND(vt0.c0)))OR(v0.c2)))OR(t1.c1)))OR(vt0.c1))));
SELECT ALL MIN(v0.c1) FROM t1, vt0 INNER JOIN v0 ON ((((((((((vt0.c0)>=(t1.c0)))OR(((((((t1.c1)OR(vt0.c1)))AND(t1.c2)))AND(t1.c0)))))AND((((t1.c2, v0.c1)) NOT BETWEEN ((vt0.c1, t1.c2)) AND ((t1.c0, vt0.c1))))))AND(((v0.c2) BETWEEN (t1.c1) AND (vt0.c1)))))OR(((t1.c1)=(v0.c0)))) WHERE (json_object(x'c2' COLLATE NOCASE, '-1345736733', ((((((((v0.c1)AND(vt0.c0)))OR(v0.c2)))OR(t1.c1)))OR(vt0.c1)))) LIMIT 0x0;
SELECT MIN(vt0.c0) FROM vt0 WHERE (((((vt0.c1)/(vt0.c0)))>>(NULL)));
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (((((((vt0.c1)/(vt0.c0)))>>(NULL)))AND((NOT ((NOT ('/'))))))) ORDER BY ((((((((vt0.c0) NOT NULL))AND(((((((vt0.c0)AND('k!M)')))AND(vt0.c1)))AND(vt0.c0)))))AND((vt0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM)) ASC, CAST(LIKELIHOOD(DISTINCT vt0.c0, vt0.c0) AS TEXT) DESC  NULLS LAST, vt0.c1 COLLATE NOCASE DESC;
SELECT * FROM v0 WHERE ((+ (((v0.c1) NOTNULL))));
SELECT ALL * FROM v0 WHERE ((+ (((v0.c1) NOTNULL)))) ORDER BY UNLIKELY(((v0.c2)LIKE(v0.c0))), ((CAST(v0.c0 AS TEXT))OR(CAST(v0.c1 AS BLOB)))  NULLS FIRST LIMIT 0x0;
SELECT * FROM v0 WHERE ((+ (((v0.c1) NOTNULL))));
SELECT ALL * FROM v0 WHERE ((+ (((v0.c1) NOTNULL)))) ORDER BY UNLIKELY(((v0.c2)LIKE(v0.c0))), ((CAST(v0.c0 AS TEXT))OR(CAST(v0.c1 AS BLOB)))  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM v0, t1 INNER JOIN vt0 ON v0.c0 WHERE (CASE v0.c1  WHEN (((vt0.c0, vt0.c1, t1.c2)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((t1.c1, t1.c0, t1.c0))) THEN ((v0.c2) IS TRUE) WHEN (+ (v0.c2)) THEN (v0.c2 IN (vt0.c0)) END) ORDER BY (((((((v0.c0)) NOT BETWEEN ((t1.c1)) AND ((v0.c2))))AND(CAST(v0.c1 AS NUMERIC))))OR((v0.c0 IN (v0.c2)))) DESC  NULLS FIRST, ((CAST(t1.c0 AS INTEGER)) ISNULL)  NULLS FIRST;
SELECT * FROM v0, t1 INNER JOIN vt0 ON v0.c0 WHERE (((CASE v0.c1  WHEN (((vt0.c0, vt0.c1, t1.c2)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((t1.c1, t1.c0, t1.c0))) THEN ((v0.c2) IS TRUE) WHEN (+ (v0.c2)) THEN (v0.c2 IN (vt0.c0)) END)AND((CAST(t1.c1 AS NUMERIC) IN ((((v0.c2))=((t1.c1)))))))) ORDER BY LIKELIHOOD(t1.c0 COLLATE RTRIM, (~ (vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM v0, t1 INNER JOIN vt0 ON v0.c0 WHERE (CASE v0.c1  WHEN (((vt0.c0, vt0.c1, t1.c2)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((t1.c1, t1.c0, t1.c0))) THEN ((v0.c2) IS TRUE) WHEN (+ (v0.c2)) THEN (v0.c2 IN (vt0.c0)) END) ORDER BY (((((((v0.c0)) NOT BETWEEN ((t1.c1)) AND ((v0.c2))))AND(CAST(v0.c1 AS NUMERIC))))OR((v0.c0 IN (v0.c2)))) DESC  NULLS FIRST, ((CAST(t1.c0 AS INTEGER)) ISNULL)  NULLS FIRST;
SELECT * FROM v0, t1 INNER JOIN vt0 ON v0.c0 WHERE (((CASE v0.c1  WHEN (((vt0.c0, vt0.c1, t1.c2)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((t1.c1, t1.c0, t1.c0))) THEN ((v0.c2) IS TRUE) WHEN (+ (v0.c2)) THEN (v0.c2 IN (vt0.c0)) END)AND((CAST(t1.c1 AS NUMERIC) IN ((((v0.c2))=((t1.c1)))))))) ORDER BY LIKELIHOOD(t1.c0 COLLATE RTRIM, (~ (vt0.c0)))  NULLS FIRST;
SELECT ALL MIN(vt0.c1) FROM vt0, t1 WHERE (NULL) ORDER BY CASE WHEN CHAR(t1.c1, vt0.c1, vt0.c0, t1.c0) THEN x'' WHEN t1.c0 THEN ((vt0.c0) ISNULL) END, CAST('-1581844415' AS BLOB) ASC;
SELECT DISTINCT MIN(vt0.c1) FROM vt0, t1 WHERE (((NULL)AND((((('-993838801')!=(vt0.c1)))OR(((((((t1.c0)AND(vt0.c0)))AND(NULL)))OR(t1.c1))))))) ORDER BY CAST(((((vt0.c0)AND(vt0.c1)))OR(t1.c2)) AS REAL), ((((((((t1.c0)AND((NOT (t1.c1)))))OR((((t1.c0, t1.c1))>=((t1.c0, t1.c0))))))AND(t1.c2)))OR((vt0.c1 IN (t1.c1)))) ASC  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0, t1 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))>>(NULL))) ORDER BY CAST(((((vt0.c0)AND(vt0.c1)))OR(t1.c2)) AS REAL), ((((((((t1.c0)AND((NOT (t1.c1)))))OR((((t1.c0, t1.c1))>=((t1.c0, t1.c0))))))AND(t1.c2)))OR((vt0.c1 IN (t1.c1)))) ASC  NULLS LAST LIMIT 2;
SELECT MIN(v0.c0) FROM vt0, v0 NATURAL JOIN t1 WHERE (((CASE v0.c2  WHEN t1.c2 THEN vt0.c1 ELSE t1.c0 END)IS NOT((NOT (v0.c2)))));
SELECT MIN(v0.c0) FROM vt0, v0 NATURAL JOIN t1 WHERE (((((CASE v0.c2  WHEN t1.c2 THEN vt0.c1 ELSE t1.c0 END)IS NOT((NOT (v0.c2)))))AND(CASE NULL  WHEN ((vt0.c0)||(v0.c2)) THEN ((((vt0.c1)AND(t1.c0)))AND(v0.c0)) WHEN t1.c2 THEN HEX(DISTINCT t1.c0) ELSE NULL END))) LIMIT 2 INTERSECT SELECT MIN(v0.c0) FROM vt0, v0 NATURAL JOIN t1 WHERE ((((t1.c1 IN ())) NOTNULL)) LIMIT 2;
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE ((~ ('0.37939170576943737')));
SELECT COUNT(*) FROM vt0, t1, v0 WHERE ((((~ ('0.37939170576943737')))AND(CAST((v0.c1 IN (v0.c2, x'', v0.c1)) AS REAL)))) LIMIT 1;
SELECT * FROM v0 WHERE (((v0.c1) ISNULL)) ORDER BY -846802760, CASE WHEN (~ (0.5623369063823449)) THEN ((v0.c2) BETWEEN (v0.c1) AND (v0.c0)) END  NULLS FIRST;
SELECT * FROM v0 WHERE (((((v0.c1) ISNULL))AND(((((((((((((((v0.c2) NOT NULL))OR(((v0.c0)>(v0.c0)))))OR(CAST(v0.c0 AS REAL))))OR(((v0.c1)IS NOT(v0.c2)))))AND(((((v0.c2)AND('1579820152')))AND(0Xffffffff9c26a131)))))OR(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))))OR(v0.c1 COLLATE NOCASE))))) ORDER BY -846802760, CASE WHEN (~ (0.5623369063823449)) THEN ((v0.c2) BETWEEN (v0.c1) AND (v0.c0)) END  NULLS FIRST LIMIT 0X0;
SELECT * FROM v0 WHERE (((v0.c1) ISNULL)) ORDER BY -846802760, CASE WHEN (~ (0.5623369063823449)) THEN ((v0.c2) BETWEEN (v0.c1) AND (v0.c0)) END  NULLS FIRST;
SELECT * FROM t1 NOT INDEXED, vt0, v0 WHERE (((((((((((v0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))AND((v0.c1 IN (t1.c1)))))OR(((NULL)OR(t1.c1)))))OR(((((v0.c2)OR(vt0.c0)))OR(vt0.c1)))))AND((((t1.c1, v0.c0, t1.c1, vt0.c0))<((t1.c1, v0.c2, vt0.c1, vt0.c1))))));
SELECT ALL * FROM t1, vt0, v0 WHERE (((((((((((v0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))AND((v0.c1 IN (t1.c1)))))OR(((NULL)OR(t1.c1)))))OR(((((v0.c2)OR(vt0.c0)))OR(vt0.c1)))))AND((((t1.c1, v0.c0, t1.c1, vt0.c0))<((t1.c1, v0.c2, vt0.c1, vt0.c1)))))) ORDER BY ((0.13518372379117283)OR(t1.c1))  NULLS FIRST, (((t1.c1 IN (t1.c1, -1231759464))) NOTNULL) DESC INTERSECT SELECT ALL * FROM t1, vt0, v0 WHERE (((((t1.c1)IS NOT(v0.c2))) NOT BETWEEN (((t1.c0) IS FALSE)) AND (CASE v0.c1  WHEN vt0.c0 THEN t1.c2 WHEN vt0.c0 THEN v0.c1 END))) ORDER BY ((0.13518372379117283)OR(t1.c1))  NULLS FIRST, (((t1.c1 IN (t1.c1, -1231759464))) NOTNULL) DESC;
SELECT * FROM t1 NOT INDEXED, vt0, v0 WHERE (((((((((((v0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))AND((v0.c1 IN (t1.c1)))))OR(((NULL)OR(t1.c1)))))OR(((((v0.c2)OR(vt0.c0)))OR(vt0.c1)))))AND((((t1.c1, v0.c0, t1.c1, vt0.c0))<((t1.c1, v0.c2, vt0.c1, vt0.c1))))));
SELECT ALL * FROM t1, vt0, v0 WHERE (((((((((((v0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))AND((v0.c1 IN (t1.c1)))))OR(((NULL)OR(t1.c1)))))OR(((((v0.c2)OR(vt0.c0)))OR(vt0.c1)))))AND((((t1.c1, v0.c0, t1.c1, vt0.c0))<((t1.c1, v0.c2, vt0.c1, vt0.c1)))))) ORDER BY ((0.13518372379117283)OR(t1.c1))  NULLS FIRST, (((t1.c1 IN (t1.c1, -1231759464))) NOTNULL) DESC INTERSECT SELECT ALL * FROM t1, vt0, v0 WHERE (((((t1.c1)IS NOT(v0.c2))) NOT BETWEEN (((t1.c0) IS FALSE)) AND (CASE v0.c1  WHEN vt0.c0 THEN t1.c2 WHEN vt0.c0 THEN v0.c1 END))) ORDER BY ((0.13518372379117283)OR(t1.c1))  NULLS FIRST, (((t1.c1 IN (t1.c1, -1231759464))) NOTNULL) DESC;
SELECT ALL * FROM vt0, v0, t1 WHERE ((('')<=(((vt0.c0) BETWEEN (v0.c1) AND (v0.c0))))) ORDER BY ((CASE WHEN t1.c1 THEN v0.c2 ELSE t1.c2 END) BETWEEN (((vt0.c1) NOT NULL)) AND ((v0.c2 IN (v0.c0, v0.c0)))) DESC, (((((v0.c0)IS NOT(vt0.c0))))<=(((t1.c2 IN ())))) DESC, ((v0.c1 COLLATE NOCASE)>=(CAST(v0.c0 AS BLOB)));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((('')<(((vt0.c0) BETWEEN (v0.c1) AND (v0.c0)))))AND((- (CAST(v0.c0 AS TEXT)))))) ORDER BY ((CASE WHEN t1.c1 THEN v0.c2 ELSE t1.c2 END) BETWEEN (((vt0.c1) NOT NULL)) AND ((v0.c2 IN (v0.c0, v0.c0)))) DESC, (((((v0.c0)IS NOT(vt0.c0))))<=(((t1.c2 IN ())))) DESC, ((v0.c1 COLLATE NOCASE)>=(CAST(v0.c0 AS BLOB))) LIMIT 0X3;
SELECT ALL * FROM vt0, v0, t1 WHERE ((('')<=(((vt0.c0) BETWEEN (v0.c1) AND (v0.c0))))) ORDER BY ((CASE WHEN t1.c1 THEN v0.c2 ELSE t1.c2 END) BETWEEN (((vt0.c1) NOT NULL)) AND ((v0.c2 IN (v0.c0, v0.c0)))) DESC, (((((v0.c0)IS NOT(vt0.c0))))<=(((t1.c2 IN ())))) DESC, ((v0.c1 COLLATE NOCASE)>=(CAST(v0.c0 AS BLOB)));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((('')<(((vt0.c0) BETWEEN (v0.c1) AND (v0.c0)))))AND((- (CAST(v0.c0 AS TEXT)))))) ORDER BY ((CASE WHEN t1.c1 THEN v0.c2 ELSE t1.c2 END) BETWEEN (((vt0.c1) NOT NULL)) AND ((v0.c2 IN (v0.c0, v0.c0)))) DESC, (((((v0.c0)IS NOT(vt0.c0))))<=(((t1.c2 IN ())))) DESC, ((v0.c1 COLLATE NOCASE)>=(CAST(v0.c0 AS BLOB))) LIMIT 0X3;
SELECT MIN(v0.c0) FROM t1 CROSS JOIN v0 ON CAST(((((t1.c1)AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC) CROSS JOIN vt0 ON v0.c2 WHERE (CASE v0.c1 COLLATE BINARY  WHEN (+ (v0.c2)) THEN ((v0.c2) ISNULL) WHEN 0.6557328387758509 THEN ((t1.c0) BETWEEN (vt0.c0) AND (t1.c2)) ELSE CAST(vt0.c1 AS BLOB) END);
SELECT ALL MIN(v0.c0) FROM t1 CROSS JOIN v0 ON CAST(((((t1.c1)AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC) CROSS JOIN vt0 ON v0.c2 WHERE (((CASE v0.c1 COLLATE BINARY  WHEN (+ (v0.c2)) THEN ((v0.c2) ISNULL) WHEN 0.6557328387758509 THEN ((t1.c0) BETWEEN (vt0.c0) AND (t1.c2)) ELSE CAST(vt0.c1 AS BLOB) END)AND((((t1.c2 IN (t1.c0, vt0.c0))) BETWEEN (CAST(v0.c1 AS INTEGER)) AND (t1.c1 COLLATE BINARY))))) LIMIT 1 INTERSECT SELECT ALL MIN(v0.c0) FROM t1 CROSS JOIN v0 ON CAST(((((t1.c1)AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC) CROSS JOIN vt0 ON v0.c2 WHERE (((((((((((json_patch(vt0.c0, v0.c1))OR(((v0.c1) IS TRUE))))AND((~ (v0.c1)))))OR(CASE vt0.c0  WHEN t1.c0 THEN t1.c1 ELSE v0.c1 END)))AND((((t1.c1))>=((v0.c2))))))AND(((((((1250186722)OR(vt0.c1)))AND(vt0.c0)))AND(t1.c2))))) LIMIT 0X1;
SELECT MAX(v0.c2) FROM v0, vt0, t1 WHERE (((((t1.c0) NOT BETWEEN (x'fb6a') AND (t1.c1))) NOT BETWEEN (CASE WHEN v0.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN t1.c0 THEN t1.c2 WHEN vt0.c1 THEN t1.c1 END) AND (CASE vt0.c1  WHEN v0.c0 THEN -1520699329 WHEN t1.c2 THEN -1.28168833E8 END)));
SELECT DISTINCT MAX(v0.c2) FROM v0, vt0, t1 WHERE (((((t1.c0) NOT BETWEEN (x'fb6a') AND (t1.c1))) NOT BETWEEN (CASE WHEN v0.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN t1.c0 THEN t1.c2 WHEN vt0.c1 THEN t1.c1 END) AND (CASE vt0.c1  WHEN v0.c0 THEN -1520699329 WHEN t1.c2 THEN -1.28168833E8 END))) ORDER BY t1.c0 DESC  NULLS FIRST, ((((t1.c0)|(v0.c1))) IS FALSE) ASC  NULLS LAST INTERSECT SELECT DISTINCT MAX(v0.c2) FROM v0, vt0, t1 WHERE (CASE ((v0.c2)>(v0.c0))  WHEN (((t1.c1))>=((t1.c1))) THEN CAST(t1.c2 AS TEXT) WHEN (('337239948')*(t1.c1)) THEN ((t1.c1)+(vt0.c0)) WHEN v0.c1 THEN v0.c2 ELSE ((t1.c2)&(vt0.c0)) END) ORDER BY t1.c0 DESC  NULLS FIRST, ((((t1.c0)|(v0.c1))) IS FALSE) ASC  NULLS LAST;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON (((- (vt0.c0)))-(CAST(NULL AS NUMERIC))) WHERE (((vt0.c0) BETWEEN ((- (vt0.c0))) AND ((((t1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c2))))));
SELECT DISTINCT COUNT(*) FROM vt0 INNER JOIN t1 ON (((- (vt0.c0)))-(CAST(NULL AS NUMERIC))) WHERE (((((vt0.c0) BETWEEN ((- (vt0.c0))) AND ((((t1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c2))))))AND((((t1.c0)IS NOT(t1.c1)) IN (t1.c2 COLLATE BINARY, vt0.c1 COLLATE NOCASE))))) ORDER BY ((CAST(t1.c2 AS TEXT))>>(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(t1.c0))))  NULLS FIRST, ((x'bee2')LIKE(((t1.c2) ISNULL)))  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 INNER JOIN t1 ON (((- (vt0.c0)))-(CAST(NULL AS NUMERIC))) WHERE ((((vt0.c1 IN ()))|(((t1.c1)||(t1.c2))))) ORDER BY ((CAST(t1.c2 AS TEXT))>>(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(t1.c0))))  NULLS FIRST, ((x'bee2')LIKE(((t1.c2) ISNULL)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((0.1514678168543352) ISNULL)) ORDER BY NULLIF(DISTINCT ((vt0.c0)|(vt0.c0)), (vt0.c0 IN (vt0.c1, vt0.c0))) DESC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c1 THEN -1669766501 ELSE vt0.c0 END)OR(vt0.c1)) ASC;
SELECT * FROM vt0 WHERE (((((0.1514678168543352) ISNULL))AND(vt0.c0))) ORDER BY NULLIF(DISTINCT ((vt0.c0)|(vt0.c0)), (vt0.c0 IN (vt0.c1, vt0.c0))) DESC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c1 THEN 0xffffffff9c79629b ELSE vt0.c0 END)OR(vt0.c1)) ASC LIMIT 0X0 INTERSECT SELECT * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END IN ())) ORDER BY NULLIF(DISTINCT ((vt0.c0)|(vt0.c0)), (vt0.c0 IN (vt0.c1, vt0.c0))) DESC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c1 THEN 0xffffffff9c79629b ELSE vt0.c0 END)OR(vt0.c1)) ASC LIMIT 0;
SELECT ALL * FROM vt0 WHERE (((0.1514678168543352) ISNULL)) ORDER BY NULLIF(DISTINCT ((vt0.c0)|(vt0.c0)), (vt0.c0 IN (vt0.c1, vt0.c0))) DESC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c1 THEN -1669766501 ELSE vt0.c0 END)OR(vt0.c1)) ASC;
SELECT * FROM vt0 WHERE (((((0.1514678168543352) ISNULL))AND(vt0.c0))) ORDER BY NULLIF(DISTINCT ((vt0.c0)|(vt0.c0)), (vt0.c0 IN (vt0.c1, vt0.c0))) DESC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c1 THEN 0xffffffff9c79629b ELSE vt0.c0 END)OR(vt0.c1)) ASC LIMIT 0X0 INTERSECT SELECT * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END IN ())) ORDER BY NULLIF(DISTINCT ((vt0.c0)|(vt0.c0)), (vt0.c0 IN (vt0.c1, vt0.c0))) DESC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c1 THEN 0xffffffff9c79629b ELSE vt0.c0 END)OR(vt0.c1)) ASC LIMIT 0;
SELECT ALL * FROM v0, vt0 WHERE ((((+ (vt0.c0)))GLOB(CASE WHEN '-111518474' THEN vt0.c1 WHEN v0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY (((((vt0.c1))==((vt0.c0)))) NOT BETWEEN ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2)))) AND (load_extension(v0.c0, vt0.c1)));
SELECT DISTINCT * FROM v0, vt0 WHERE ((((+ (vt0.c0)))GLOB(CASE WHEN '-111518474' THEN vt0.c1 WHEN v0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY (((((vt0.c1))==((vt0.c0)))) NOT BETWEEN ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2)))) AND (load_extension(v0.c0, vt0.c1))) LIMIT 0;
SELECT ALL * FROM v0, vt0 WHERE ((((+ (vt0.c0)))GLOB(CASE WHEN '-111518474' THEN vt0.c1 WHEN v0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY (((((vt0.c1))==((vt0.c0)))) NOT BETWEEN ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2)))) AND (load_extension(v0.c0, vt0.c1)));
SELECT DISTINCT * FROM v0, vt0 WHERE ((((+ (vt0.c0)))GLOB(CASE WHEN '-111518474' THEN vt0.c1 WHEN v0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY (((((vt0.c1))==((vt0.c0)))) NOT BETWEEN ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2)))) AND (load_extension(v0.c0, vt0.c1))) LIMIT 0;
SELECT COUNT(*) FROM vt0 WHERE (UPPER(((0.5023244049517531)%(vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (UPPER(((0.5023244049517531)%(vt0.c1)))) LIMIT 0x5;
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON NULL CROSS JOIN t1 ON t1.c0 WHERE (((((((((((t1.c2) BETWEEN (t1.c0) AND (v0.c1)))OR((+ (vt0.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE vt0.c1 END)))OR(CAST(t1.c0 AS NUMERIC))))AND(((((((t1.c1)AND(vt0.c0)))OR('-1')))AND(v0.c2)))));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON NULL CROSS JOIN t1 ON t1.c0 WHERE (((((((((((t1.c2) BETWEEN (t1.c0) AND (v0.c1)))OR((+ (vt0.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE vt0.c1 END)))OR(CAST(t1.c0 AS NUMERIC))))AND(((((((t1.c1)AND(vt0.c0)))OR('-1')))AND(v0.c2))))) ORDER BY ABS(((v0.c1) IS TRUE))  NULLS LAST, (- (((t1.c2) NOT BETWEEN (t1.c0) AND (v0.c2))))  NULLS LAST, CASE ((v0.c2)&(vt0.c1))  WHEN ((t1.c0)==(x'74')) THEN (((t1.c0, t1.c1, t1.c1)) BETWEEN ((v0.c1, v0.c2, v0.c0)) AND ((v0.c1, v0.c0, t1.c2))) WHEN t1.c0 COLLATE RTRIM THEN ((v0.c1)>(vt0.c0)) WHEN vt0.c0 THEN ((((((((((((v0.c2)AND(v0.c0)))AND(0.44221207002274443)))AND(t1.c1)))AND(v0.c1)))OR(v0.c2)))OR(v0.c0)) ELSE t1.c0 COLLATE NOCASE END  NULLS FIRST, t1.c0 COLLATE BINARY LIMIT 0;
SELECT * FROM t1, vt0, v0 WHERE (x'd04d62') ORDER BY ((((t1.c0)&(vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (x'd04d62') ORDER BY ((((t1.c0)&(vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT * FROM t1, vt0, v0 WHERE (x'd04d62') ORDER BY ((((t1.c0)&(vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (x'd04d62') ORDER BY ((((t1.c0)&(vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT ALL * FROM t1, vt0, v0 WHERE (((CAST(v0.c2 AS TEXT)) IS FALSE));
SELECT ALL * FROM t1, vt0, v0 WHERE (((CAST(v0.c2 AS TEXT)) IS FALSE)) ORDER BY (((((t1.c0)AND(vt0.c0)))OR(t1.c0)) IN (v0.c2 COLLATE NOCASE, (((t1.c0))==((vt0.c1))))), (((((((v0.c1 IN (t1.c2)))OR(((((v0.c1)OR(t1.c0)))AND(t1.c0)))))OR(((vt0.c1) NOT BETWEEN (NULL) AND (t1.c0)))))AND(((t1.c1) BETWEEN (0.842991044979005) AND (t1.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM t1, vt0, v0 WHERE (((CAST(v0.c2 AS TEXT)) IS FALSE));
SELECT ALL * FROM t1, vt0, v0 WHERE (((CAST(v0.c2 AS TEXT)) IS FALSE)) ORDER BY (((((t1.c0)AND(vt0.c0)))OR(t1.c0)) IN (v0.c2 COLLATE NOCASE, (((t1.c0))==((vt0.c1))))), (((((((v0.c1 IN (t1.c2)))OR(((((v0.c1)OR(t1.c0)))AND(t1.c0)))))OR(((vt0.c1) NOT BETWEEN (NULL) AND (t1.c0)))))AND(((t1.c1) BETWEEN (0.842991044979005) AND (t1.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM t1 NATURAL JOIN v0 WHERE (((((v0.c1)<=(3.37239948E8))) NOT NULL));
SELECT ALL * FROM t1 NATURAL JOIN v0 WHERE (((((((v0.c1)=(3.37239948E8))) NOT NULL))AND(((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))/(v0.c2)))));
SELECT ALL * FROM t1 NATURAL JOIN v0 WHERE (((((v0.c1)<=(3.37239948E8))) NOT NULL));
SELECT ALL * FROM t1 NATURAL JOIN v0 WHERE (((((((v0.c1)=(3.37239948E8))) NOT NULL))AND(((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))/(v0.c2)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1)IS NOT('-941946931')) IN (NULL)));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c1)IS NOT('-941946931')) IN (NULL)))AND(((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT NULL)))) ORDER BY ((CAST(v0.c2 AS INTEGER)) BETWEEN (CASE WHEN v0.c2 THEN vt0.c0 END) AND (CASE vt0.c0  WHEN v0.c1 THEN 0xffffffffa0e066f9 END))  NULLS LAST;
SELECT ALL MIN(v0.c1) FROM v0 WHERE (v0.c0) ORDER BY TOTAL_CHANGES(), ((((v0.c1 IN (v0.c0)), ABS(DISTINCT '0')))>((((v0.c2)GLOB(v0.c1)), ((v0.c2) IS FALSE))));
SELECT MIN(v0.c1) FROM v0 WHERE (v0.c0) ORDER BY 0.9021676962134796 ASC LIMIT 2;
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT DISTINCT * FROM vt0 WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((SQLITE_COMPILEOPTION_USED(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)*(vt0.c0))))!=(((vt0.c1 IN (vt0.c0, vt0.c1)), CAST(vt0.c0 AS REAL), ((vt0.c0) NOT NULL)))));
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT DISTINCT * FROM vt0 WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((SQLITE_COMPILEOPTION_USED(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)*(vt0.c0))))!=(((vt0.c1 IN (vt0.c0, vt0.c1)), CAST(vt0.c0 AS REAL), ((vt0.c0) NOT NULL)))));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)!=('7㫍pqAq')));
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)<('7㫍pqAq')))AND(CASE WHEN (+ (vt0.c0)) THEN (NULL IN (0xffffffff84083d77, '5U7 nZ')) WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) ELSE CASE WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END))) ORDER BY (- (((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, (+ (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) ASC, vt0.c0, ((((vt0.c1)<=(vt0.c1)))*((- (vt0.c1)))) ASC  NULLS LAST LIMIT 0x2;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)!=('7㫍pqAq')));
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)<('7㫍pqAq')))AND(CASE WHEN (+ (vt0.c0)) THEN (NULL IN (0xffffffff84083d77, '5U7 nZ')) WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) ELSE CASE WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END))) ORDER BY (- (((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, (+ (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) ASC, vt0.c0, ((((vt0.c1)<=(vt0.c1)))*((- (vt0.c1)))) ASC  NULLS LAST LIMIT 0x2;
SELECT ALL * FROM vt0, t1, v0 WHERE ((((vt0.c0 IN (v0.c2, t1.c2, v0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((-1200110695 IN ()))));
SELECT ALL * FROM vt0, t1, v0 WHERE ((((((vt0.c0 IN (v0.c2, t1.c2, v0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((-1200110695 IN ()))))AND((~ (((v0.c1)&(t1.c2))))))) LIMIT 0 INTERSECT SELECT * FROM vt0, t1, v0 WHERE (CAST(((t1.c1)-(vt0.c1)) AS INTEGER)) LIMIT 0x0;
SELECT ALL * FROM vt0, t1, v0 WHERE ((((vt0.c0 IN (v0.c2, t1.c2, v0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((-1200110695 IN ()))));
SELECT ALL * FROM vt0, t1, v0 WHERE ((((((vt0.c0 IN (v0.c2, t1.c2, v0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((-1200110695 IN ()))))AND((~ (((v0.c1)&(t1.c2))))))) LIMIT 0 INTERSECT SELECT * FROM vt0, t1, v0 WHERE (CAST(((t1.c1)-(vt0.c1)) AS INTEGER)) LIMIT 0x0;
SELECT ALL MIN(v0.c1) FROM v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t1.c2 THEN t1.c0 WHEN t1.c2 THEN t1.c2 WHEN v0.c2 THEN t1.c1 WHEN v0.c2 THEN t1.c2 WHEN v0.c1 THEN t1.c2 WHEN v0.c0 THEN t1.c2 ELSE t1.c2 END)+(CASE v0.c2  WHEN t1.c0 THEN v0.c1 WHEN v0.c1 THEN t1.c0 END)) WHERE (TYPEOF(((v0.c2)IS(t1.c1))));
SELECT MIN(v0.c1) FROM v0 INNER JOIN t1 ON ((CASE WHEN t1.c2 THEN t1.c0 WHEN t1.c2 THEN t1.c2 WHEN v0.c2 THEN t1.c1 WHEN v0.c2 THEN t1.c2 WHEN v0.c1 THEN t1.c2 WHEN v0.c0 THEN t1.c2 ELSE t1.c2 END)+(CASE v0.c2  WHEN t1.c0 THEN v0.c1 WHEN v0.c1 THEN t1.c0 END)) WHERE (TYPEOF(((v0.c2)IS(t1.c1))));
SELECT MIN(t1.c2) FROM vt0 LEFT OUTER JOIN t1 ON ((((((((NULL) NOT BETWEEN (t1.c2) AND (vt0.c0)))AND(((vt0.c1)*(vt0.c1)))))AND(((t1.c0)<=(t1.c2)))))OR(((t1.c2) IS TRUE))) WHERE ((((vt0.c1, vt0.c1, vt0.c1, t1.c1, vt0.c0)) BETWEEN ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, (- (vt0.c0)), (((vt0.c1, 'k&s&I', t1.c0))>=((vt0.c0, NULL, t1.c0))), ((t1.c2)GLOB(t1.c0)), '_tG[u[')) AND ((t1.c1, '崞AZ', (NOT (t1.c1)), t1.c1, ((t1.c1) IS FALSE))))) ORDER BY (NOT (vt0.c1 COLLATE BINARY)), vt0.c1 ASC  NULLS FIRST;
SELECT MIN(t1.c2) FROM vt0 LEFT OUTER JOIN t1 ON ((((((((NULL) NOT BETWEEN (t1.c2) AND (vt0.c0)))AND(((vt0.c1)*(vt0.c1)))))AND(((t1.c0)<=(t1.c2)))))OR(((t1.c2) IS TRUE))) WHERE ((((((vt0.c1, vt0.c1, vt0.c1, t1.c1, vt0.c0)) BETWEEN ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, (- (vt0.c0)), (((vt0.c1, 'k&s&I', t1.c0))>=((vt0.c0, NULL, t1.c0))), ((t1.c2)GLOB(t1.c0)), '_tG[u[')) AND ((t1.c1, '崞AZ', (NOT (t1.c1)), t1.c1, ((t1.c1) IS FALSE)))))AND(((((((((t1.c0)+(vt0.c1)))OR(((((((vt0.c0)OR('k<s	')))OR(t1.c1)))AND(t1.c2)))))AND(ABS(t1.c0))))OR(((t1.c0) BETWEEN (t1.c2) AND (vt0.c1))))))) ORDER BY (NOT (vt0.c1 COLLATE BINARY)), vt0.c1 ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL MIN(t1.c2) FROM vt0 LEFT OUTER JOIN t1 ON ((((((((NULL) NOT BETWEEN (t1.c2) AND (vt0.c0)))AND(((vt0.c1)*(vt0.c1)))))AND(((t1.c0)<=(t1.c2)))))OR(((t1.c2) IS TRUE))) WHERE ((((((((((((t1.c2)OR(t1.c0)))AND(vt0.c1)))AND(t1.c1)))AND(vt0.c0))))<>((((t1.c2) BETWEEN (vt0.c0) AND (vt0.c1)))))) ORDER BY (NOT (vt0.c1 COLLATE BINARY)), vt0.c1 ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0, t1 WHERE ((+ (((t1.c1)>(t1.c0)))));
SELECT DISTINCT * FROM vt0, t1 WHERE ((((+ (((t1.c1)>(t1.c0)))))AND(((CASE WHEN t1.c1 THEN '4<*棻jp
' ELSE t1.c2 END)IS((NOT ('724623702'))))))) INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (vt0.c0);
SELECT ALL * FROM vt0, t1 WHERE ((+ (((t1.c1)>(t1.c0)))));
SELECT DISTINCT * FROM vt0, t1 WHERE ((((+ (((t1.c1)>(t1.c0)))))AND(((CASE WHEN t1.c1 THEN '4<*棻jp
' ELSE t1.c2 END)IS((NOT ('724623702'))))))) INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (vt0.c0);
SELECT * FROM vt0, t1 WHERE ((((t1.c1, t1.c1)) NOT BETWEEN ((vt0.c1, (t1.c2 IN ()))) AND ((((t1.c1)%(t1.c1)), t1.c1))));
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((t1.c1, t1.c1)) NOT BETWEEN ((vt0.c1, (t1.c2 IN ()))) AND ((((t1.c1)%(t1.c1)), t1.c1))))AND(COALESCE(((t1.c0)AND(vt0.c0)), CASE WHEN vt0.c1 THEN t1.c0 ELSE t1.c0 END)))) ORDER BY (((t1.c1, t1.c0)) BETWEEN (((~ (vt0.c0)), ((((((((vt0.c1)AND(NULL)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((t1.c0)IS(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((((vt0.c1 IN ()), (t1.c2 IN ('1576123895')), CASE vt0.c0  WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, CASE t1.c0  WHEN t1.c1 THEN vt0.c1 WHEN 0X3e446028 THEN t1.c2 END))>((((vt0.c1) NOT BETWEEN (NULL) AND (t1.c0)), (((NULL))==((t1.c2))), -516983864, ((t1.c2) IS TRUE))))) ORDER BY (((t1.c1, t1.c0)) BETWEEN (((~ (vt0.c0)), ((((((((vt0.c1)AND(NULL)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((t1.c0)IS(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) DESC LIMIT 1;
SELECT * FROM vt0, t1 WHERE ((((t1.c1, t1.c1)) NOT BETWEEN ((vt0.c1, (t1.c2 IN ()))) AND ((((t1.c1)%(t1.c1)), t1.c1))));
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((t1.c1, t1.c1)) NOT BETWEEN ((vt0.c1, (t1.c2 IN ()))) AND ((((t1.c1)%(t1.c1)), t1.c1))))AND(COALESCE(((t1.c0)AND(vt0.c0)), CASE WHEN vt0.c1 THEN t1.c0 ELSE t1.c0 END)))) ORDER BY (((t1.c1, t1.c0)) BETWEEN (((~ (vt0.c0)), ((((((((vt0.c1)AND(NULL)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((t1.c0)IS(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) DESC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((((vt0.c1 IN ()), (t1.c2 IN ('1576123895')), CASE vt0.c0  WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END, CASE t1.c0  WHEN t1.c1 THEN vt0.c1 WHEN 0X3e446028 THEN t1.c2 END))>((((vt0.c1) NOT BETWEEN (NULL) AND (t1.c0)), (((NULL))==((t1.c2))), -516983864, ((t1.c2) IS TRUE))))) ORDER BY (((t1.c1, t1.c0)) BETWEEN (((~ (vt0.c0)), ((((((((vt0.c1)AND(NULL)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((t1.c0)IS(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) DESC LIMIT 1;
SELECT ALL MAX(t1.c2) FROM v0, t1 WHERE ((((t1.c0)) BETWEEN ((((((((((((t1.c1)AND(NULL)))OR(-241615719)))OR(t1.c0)))OR(v0.c2)))OR(v0.c2)))) AND ((((v0.c0)-(v0.c0)))))) ORDER BY TRIM(DISTINCT CAST(t1.c2 AS REAL), ((v0.c2)<>(v0.c2))) ASC;
SELECT DISTINCT MAX(t1.c2) FROM v0, t1 WHERE ((((((t1.c0)) BETWEEN ((((((((((((t1.c1)AND(NULL)))OR(0xfffffffff1993c99)))OR(t1.c0)))OR(v0.c2)))OR(v0.c2)))) AND ((((v0.c0)-(v0.c0))))))AND(CASE CAST(v0.c0 AS REAL)  WHEN LIKELIHOOD(t1.c1, v0.c0) THEN (t1.c0 IN (v0.c0, v0.c1)) WHEN ((t1.c1) BETWEEN (t1.c0) AND (v0.c1)) THEN ((t1.c0) IS TRUE) END))) ORDER BY TRIM(DISTINCT CAST(t1.c2 AS REAL), ((v0.c2)!=(v0.c2))) ASC LIMIT 1 INTERSECT SELECT DISTINCT MAX(t1.c2) FROM v0, t1 WHERE ('') ORDER BY TRIM(DISTINCT CAST(t1.c2 AS REAL), ((v0.c2)!=(v0.c2))) ASC LIMIT 0X1;
SELECT ALL * FROM t1, v0 WHERE ((+ (0.8383408933879826))) ORDER BY (((t1.c2, v0.c1)) NOT BETWEEN (((((v0.c0)) BETWEEN ((t1.c2)) AND ((v0.c1))), ((v0.c1)IS(t1.c0)))) AND ((t1.c1, 'rA'))) DESC  NULLS LAST, NULL  NULLS LAST;
SELECT DISTINCT * FROM t1, v0 WHERE ((+ (0.8383408933879826))) ORDER BY (((t1.c2, v0.c1)) NOT BETWEEN (((((v0.c0)) BETWEEN ((t1.c2)) AND ((v0.c1))), ((v0.c1)IS(t1.c0)))) AND ((t1.c1, 'rA'))) DESC  NULLS LAST, NULL  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (v0.c2) ORDER BY (((t1.c2, v0.c1)) NOT BETWEEN (((((v0.c0)) BETWEEN ((t1.c2)) AND ((v0.c1))), ((v0.c1)IS(t1.c0)))) AND ((t1.c1, 'rA'))) DESC  NULLS LAST, NULL  NULLS LAST;
SELECT ALL * FROM t1, v0 WHERE ((+ (0.8383408933879826))) ORDER BY (((t1.c2, v0.c1)) NOT BETWEEN (((((v0.c0)) BETWEEN ((t1.c2)) AND ((v0.c1))), ((v0.c1)IS(t1.c0)))) AND ((t1.c1, 'rA'))) DESC  NULLS LAST, NULL  NULLS LAST;
SELECT DISTINCT * FROM t1, v0 WHERE ((+ (0.8383408933879826))) ORDER BY (((t1.c2, v0.c1)) NOT BETWEEN (((((v0.c0)) BETWEEN ((t1.c2)) AND ((v0.c1))), ((v0.c1)IS(t1.c0)))) AND ((t1.c1, 'rA'))) DESC  NULLS LAST, NULL  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (v0.c2) ORDER BY (((t1.c2, v0.c1)) NOT BETWEEN (((((v0.c0)) BETWEEN ((t1.c2)) AND ((v0.c1))), ((v0.c1)IS(t1.c0)))) AND ((t1.c1, 'rA'))) DESC  NULLS LAST, NULL  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((((v0.c1)OR(v0.c2)))AND(v0.c1))) IS TRUE));
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c1)OR(v0.c2)))AND(v0.c1))) IS TRUE));
SELECT ALL * FROM v0 WHERE (((((((v0.c1)OR(v0.c2)))AND(v0.c1))) IS TRUE));
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c1)OR(v0.c2)))AND(v0.c1))) IS TRUE));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (vt0.c1 IN (t1.c1)) COLLATE RTRIM INNER JOIN t1 ON ((t1.c0 COLLATE NOCASE) IS FALSE) WHERE (CASE ((v0.c1)<>(v0.c2))  WHEN ((vt0.c0)<<(v0.c0)) THEN json_valid(t1.c1) WHEN ((0.5932400980739988)OR(vt0.c1)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t1.c1))) WHEN ((((v0.c0)AND(vt0.c0)))OR(t1.c1)) THEN ((vt0.c0)OR(t1.c2)) ELSE ((vt0.c0) BETWEEN (t1.c2) AND (t1.c2)) END) ORDER BY ((CAST(t1.c1 AS TEXT))GLOB((t1.c0 IN (t1.c1)))) DESC, v0.c0  NULLS LAST;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (vt0.c1 IN (t1.c1)) COLLATE RTRIM INNER JOIN t1 ON ((t1.c0 COLLATE NOCASE) IS FALSE) WHERE (((CASE ((v0.c1)<(v0.c2))  WHEN ((vt0.c0)<<(v0.c0)) THEN json_valid(t1.c1) WHEN ((0.5932400980739988)OR(vt0.c1)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t1.c1))) WHEN ((((v0.c0)AND(vt0.c0)))OR(t1.c1)) THEN ((vt0.c0)OR(t1.c2)) ELSE ((vt0.c0) BETWEEN (t1.c2) AND (t1.c2)) END)AND(((v0.c0 COLLATE RTRIM)*((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, t1.c2, vt0.c1)) AND ((vt0.c0, vt0.c0, t1.c0)))))))) ORDER BY ((CAST(t1.c1 AS TEXT))GLOB((t1.c0 IN (t1.c1)))) DESC, v0.c0  NULLS LAST INTERSECT SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (vt0.c1 IN (t1.c1)) COLLATE RTRIM INNER JOIN t1 ON ((t1.c0 COLLATE NOCASE) IS FALSE) WHERE (CAST(v0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY ((CAST(t1.c1 AS TEXT))GLOB((t1.c0 IN (t1.c1)))) DESC, v0.c0  NULLS LAST;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (vt0.c1 IN (t1.c1)) COLLATE RTRIM INNER JOIN t1 ON ((t1.c0 COLLATE NOCASE) IS FALSE) WHERE (CASE ((v0.c1)<>(v0.c2))  WHEN ((vt0.c0)<<(v0.c0)) THEN json_valid(t1.c1) WHEN ((0.5932400980739988)OR(vt0.c1)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t1.c1))) WHEN ((((v0.c0)AND(vt0.c0)))OR(t1.c1)) THEN ((vt0.c0)OR(t1.c2)) ELSE ((vt0.c0) BETWEEN (t1.c2) AND (t1.c2)) END) ORDER BY ((CAST(t1.c1 AS TEXT))GLOB((t1.c0 IN (t1.c1)))) DESC, v0.c0  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))AND((((- (vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (LIKELIHOOD(vt0.c1, 0X75a336a9)))))) LIMIT 0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))AND((((- (vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (LIKELIHOOD(vt0.c1, 0X75a336a9)))))) LIMIT 0;
SELECT ALL MAX(v0.c2) FROM t1, v0 WHERE (CAST(t1.c1 AS REAL) COLLATE RTRIM);
SELECT MAX(v0.c2) FROM t1, v0 WHERE (((CAST(t1.c1 AS REAL) COLLATE RTRIM)AND(CAST(v0.c1 AS NUMERIC) COLLATE BINARY))) ORDER BY ((((t1.c0) BETWEEN (t1.c1) AND (v0.c2))) BETWEEN (v0.c2) AND (CASE v0.c2  WHEN v0.c0 THEN t1.c1 ELSE t1.c0 END))  NULLS LAST, ((((((v0.c1)AND(t1.c1)))OR(t1.c2)))/((v0.c2 IN ()))) ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT MAX(v0.c2) FROM t1, v0 WHERE (v0.c0) ORDER BY ((((t1.c0) BETWEEN (t1.c1) AND (v0.c2))) BETWEEN (v0.c2) AND (CASE v0.c2  WHEN v0.c0 THEN t1.c1 ELSE t1.c0 END))  NULLS LAST, ((((((v0.c1)AND(t1.c1)))OR(t1.c2)))/((v0.c2 IN ()))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1, vt0, v0 WHERE (((((CASE WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN v0.c2 END)AND(((v0.c2)*(t1.c1)))))AND(((t1.c1)||(t1.c2)))));
SELECT * FROM t1, vt0, v0 WHERE (((((CASE WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN v0.c2 END)AND(((v0.c2)*(t1.c1)))))AND(((t1.c1)||(t1.c2))))) ORDER BY (t1.c0 COLLATE NOCASE IN ())  NULLS LAST, (((json_object(t1.c2, vt0.c0, t1.c2)))<((v0.c2 COLLATE RTRIM))) DESC LIMIT 0;
SELECT ALL * FROM t1, vt0, v0 WHERE (((((CASE WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN v0.c2 END)AND(((v0.c2)*(t1.c1)))))AND(((t1.c1)||(t1.c2)))));
SELECT * FROM t1, vt0, v0 WHERE (((((CASE WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN v0.c2 END)AND(((v0.c2)*(t1.c1)))))AND(((t1.c1)||(t1.c2))))) ORDER BY (t1.c0 COLLATE NOCASE IN ())  NULLS LAST, (((json_object(t1.c2, vt0.c0, t1.c2)))<((v0.c2 COLLATE RTRIM))) DESC LIMIT 0;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(NULL))) BETWEEN ((- (vt0.c1))) AND ((+ (NULL)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)LIKE(NULL))) BETWEEN ((- (vt0.c1))) AND ((+ (NULL)))))AND(CAST(((vt0.c0) NOT BETWEEN ('s6/') AND (vt0.c1)) AS REAL)))) ORDER BY ((CASE WHEN vt0.c1 THEN 'sy9*Da*2S' WHEN vt0.c1 THEN vt0.c1 END)||(HEX(vt0.c1)));
SELECT MIN(t1.c0) FROM t1 NOT INDEXED WHERE ((CAST(t1.c2 AS REAL) IN (((t1.c2)/(t1.c1)))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((CAST(t1.c2 AS REAL) IN (((t1.c2)/(t1.c1)))))AND(t1.c2))) ORDER BY CAST(((t1.c1)/(0.45233999123177093)) AS TEXT) LIMIT 0 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (NULL) ORDER BY CAST(((t1.c1)/(0.45233999123177093)) AS TEXT) LIMIT 0;
SELECT ALL * FROM v0 INNER JOIN t1 ON '1744414291' NATURAL JOIN vt0 WHERE (NULL);
SELECT DISTINCT * FROM v0 INNER JOIN t1 ON '1744414291' NATURAL JOIN vt0 WHERE (NULL) ORDER BY ((vt0.c0)<(vt0.c1)) LIMIT 0x0;
SELECT ALL * FROM v0 INNER JOIN t1 ON '1744414291' NATURAL JOIN vt0 WHERE (NULL);
SELECT DISTINCT * FROM v0 INNER JOIN t1 ON '1744414291' NATURAL JOIN vt0 WHERE (NULL) ORDER BY ((vt0.c0)<(vt0.c1)) LIMIT 0x0;
SELECT ALL * FROM vt0, t1 WHERE (((((NULL)AND(vt0.c0)))<=(((t1.c1)%(t1.c2)))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((NULL)AND(vt0.c0)))<=(((t1.c1)%(t1.c2))))) ORDER BY ((CAST(t1.c2 AS NUMERIC))AND(CASE WHEN vt0.c1 THEN t1.c2 WHEN vt0.c1 THEN t1.c1 WHEN 0.6078212880129368 THEN t1.c2 END))  NULLS FIRST, (~ ('')) DESC;
SELECT ALL * FROM vt0, t1 WHERE (((((NULL)AND(vt0.c0)))<=(((t1.c1)%(t1.c2)))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((NULL)AND(vt0.c0)))<=(((t1.c1)%(t1.c2))))) ORDER BY ((CAST(t1.c2 AS NUMERIC))AND(CASE WHEN vt0.c1 THEN t1.c2 WHEN vt0.c1 THEN t1.c1 WHEN 0.6078212880129368 THEN t1.c2 END))  NULLS FIRST, (~ ('')) DESC;
SELECT ALL MAX(vt0.c1) FROM vt0, t1 WHERE (((t1.c2 IN ()) IN (((x'10db72')>>(t1.c1))))) ORDER BY (((((t1.c0, x'', NULL))!=((t1.c0, vt0.c0, t1.c0))))/((((t1.c0, t1.c0, vt0.c0, x'')) BETWEEN ((t1.c0, 0.6021046239369194, t1.c2, t1.c0)) AND ((vt0.c1, vt0.c0, t1.c2, '337239948')))))  NULLS FIRST;
SELECT MAX(vt0.c1) FROM vt0, t1 WHERE (((((t1.c2 IN ()) IN (((x'10db72')>>(t1.c1)))))AND((((+ (t1.c1))) NOTNULL)))) ORDER BY TRIM(DISTINCT vt0.c0, t1.c0) COLLATE NOCASE COLLATE RTRIM  NULLS LAST, CASE WHEN t1.c2 THEN vt0.c0 WHEN t1.c2 THEN t1.c2 ELSE vt0.c0 END COLLATE RTRIM;
SELECT * FROM t1, vt0, v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)), CAST(t1.c1 AS BLOB), ((t1.c0) BETWEEN (0x6aeb00ee) AND (v0.c2))))=((((v0.c1) IS FALSE), vt0.c1, ((v0.c1) BETWEEN ('1215819737') AND (vt0.c0))))));
SELECT * FROM t1, vt0, v0 WHERE ((((((((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)), CAST(t1.c1 AS BLOB), ((t1.c0) BETWEEN (0X6aeb00ee) AND (v0.c2))))=((((v0.c1) IS FALSE), vt0.c1, ((v0.c1) BETWEEN ('1215819737') AND (vt0.c0))))))AND(CAST(CAST(v0.c0 AS TEXT) AS REAL)))) INTERSECT SELECT * FROM t1, vt0, v0 WHERE ((((((v0.c2, vt0.c0)) BETWEEN ((v0.c2, v0.c1)) AND ((v0.c0, t1.c0))))&((- (v0.c2)))));
SELECT * FROM t1, vt0, v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)), CAST(t1.c1 AS BLOB), ((t1.c0) BETWEEN (0x6aeb00ee) AND (v0.c2))))=((((v0.c1) IS FALSE), vt0.c1, ((v0.c1) BETWEEN ('1215819737') AND (vt0.c0))))));
SELECT * FROM t1, vt0, v0 WHERE ((((((((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)), CAST(t1.c1 AS BLOB), ((t1.c0) BETWEEN (0X6aeb00ee) AND (v0.c2))))=((((v0.c1) IS FALSE), vt0.c1, ((v0.c1) BETWEEN ('1215819737') AND (vt0.c0))))))AND(CAST(CAST(v0.c0 AS TEXT) AS REAL)))) INTERSECT SELECT * FROM t1, vt0, v0 WHERE ((((((v0.c2, vt0.c0)) BETWEEN ((v0.c2, v0.c1)) AND ((v0.c0, t1.c0))))&((- (v0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c1 IN (vt0.c0)))OR((vt0.c0 IN (vt0.c1, vt0.c0)))))OR(x'56')))AND(CAST(vt0.c1 AS BLOB)))) ORDER BY '1539342956'  NULLS FIRST, CAST(0Xffffffffe66edf0a AS BLOB) DESC, (~ (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC, (((vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) AND ((((NULL)&(vt0.c1)), (+ (0.9327333412399983)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c1 IN (vt0.c0)))OR((vt0.c0 IN (vt0.c1, vt0.c0)))))OR(x'56')))AND(CAST(vt0.c1 AS BLOB))))AND(((((vt0.c0)<=(vt0.c1))) BETWEEN (((((vt0.c0)AND(0.6474544860627601)))OR(vt0.c1))) AND (NULL))))) ORDER BY CASE WHEN ((((((((vt0.c1)AND(NULL)))AND(vt0.c1)))OR('-38137957')))AND(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY END DESC  NULLS FIRST, ((UNLIKELY(DISTINCT vt0.c0)) NOT BETWEEN (((x'')-(vt0.c1))) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (((QUOTE(NULL)) BETWEEN ((+ (vt0.c0))) AND (((t1.c0)&(t1.c0))))) ORDER BY (((((t1.c2, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c2, t1.c0, vt0.c0))))||((vt0.c0 IN (x'f22f03', vt0.c0, vt0.c1)))), ((((((((((t1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))OR(vt0.c0)))*(((t1.c2) ISNULL)));
SELECT * FROM t1, vt0 WHERE (((QUOTE(NULL)) BETWEEN ((+ (vt0.c0))) AND (((t1.c0)&(t1.c0))))) ORDER BY (((((t1.c2, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c2, t1.c0, vt0.c0))))||((vt0.c0 IN (x'f22f03', vt0.c0, vt0.c1)))), ((((((((((t1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))OR(vt0.c0)))*(((t1.c2) ISNULL))) LIMIT 1;
SELECT ALL * FROM t1, vt0 WHERE (((QUOTE(NULL)) BETWEEN ((+ (vt0.c0))) AND (((t1.c0)&(t1.c0))))) ORDER BY (((((t1.c2, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c2, t1.c0, vt0.c0))))||((vt0.c0 IN (x'f22f03', vt0.c0, vt0.c1)))), ((((((((((t1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))OR(vt0.c0)))*(((t1.c2) ISNULL)));
SELECT * FROM t1, vt0 WHERE (((QUOTE(NULL)) BETWEEN ((+ (vt0.c0))) AND (((t1.c0)&(t1.c0))))) ORDER BY (((((t1.c2, t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c2, t1.c0, vt0.c0))))||((vt0.c0 IN (x'f22f03', vt0.c0, vt0.c1)))), ((((((((((t1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))OR(vt0.c0)))*(((t1.c2) ISNULL))) LIMIT 1;
SELECT MAX(t1.c1) FROM t1, v0, vt0 WHERE ((t1.c1 IN (vt0.c1, v0.c0)) COLLATE NOCASE) ORDER BY UPPER((vt0.c0 IN (vt0.c1)));
SELECT MAX(t1.c1) FROM t1, v0, vt0 WHERE ((((t1.c1 IN (vt0.c1, v0.c0)) COLLATE NOCASE)AND(v0.c2 COLLATE NOCASE))) ORDER BY UPPER((vt0.c0 IN (vt0.c1))) INTERSECT SELECT ALL MAX(t1.c1) FROM t1, v0, vt0 WHERE ('Q') ORDER BY UPPER((vt0.c0 IN (vt0.c1)));
SELECT ALL MAX(v0.c1) FROM v0 WHERE ((((~ (v0.c1)))<<(TYPEOF(v0.c0)))) ORDER BY ((((v0.c0)<<(v0.c2)))IS(((v0.c0)|(v0.c0)))) ASC  NULLS FIRST, CAST(v0.c2 AS INTEGER) DESC;
SELECT DISTINCT MAX(v0.c1) FROM v0 WHERE ((((~ (v0.c1)))<<(TYPEOF(v0.c0)))) ORDER BY ((((v0.c0)<<(v0.c2)))IS(((v0.c0)|(v0.c0)))) ASC  NULLS FIRST, CAST(v0.c2 AS INTEGER) DESC LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(v0.c1) FROM v0 WHERE (((((v0.c1) NOT NULL))==(((v0.c2)OR(v0.c0))))) ORDER BY ((((v0.c0)<<(v0.c2)))IS(((v0.c0)|(v0.c0)))) ASC  NULLS FIRST, CAST(v0.c2 AS INTEGER) DESC LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((((((((t1.c2)OR('9g')))AND(t1.c1)))OR(t1.c2)))AND(t1.c2)))AND(t1.c1))) NOT NULL));
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((((((((t1.c2)OR('9g')))AND(t1.c1)))OR(t1.c2)))AND(t1.c2)))AND(t1.c1))) NOT NULL)) LIMIT 0;
SELECT ALL * FROM t1 WHERE (t1.c2 COLLATE RTRIM COLLATE BINARY COLLATE BINARY) ORDER BY TYPEOF(DISTINCT ((t1.c2) NOTNULL)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (t1.c2 COLLATE RTRIM COLLATE BINARY COLLATE BINARY) ORDER BY TYPEOF(DISTINCT ((t1.c2) NOTNULL)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE ('-784942018') ORDER BY TYPEOF(DISTINCT ((t1.c2) NOTNULL)) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (t1.c2 COLLATE RTRIM COLLATE BINARY COLLATE BINARY) ORDER BY TYPEOF(DISTINCT ((t1.c2) NOTNULL)) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (t1.c2 COLLATE RTRIM COLLATE BINARY COLLATE BINARY) ORDER BY TYPEOF(DISTINCT ((t1.c2) NOTNULL)) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE ('-784942018') ORDER BY TYPEOF(DISTINCT ((t1.c2) NOTNULL)) DESC  NULLS FIRST;
SELECT MIN(vt0.c1) FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(x'0e57')))AND(vt0.c0))) NOT NULL);
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE ((((((vt0.c0) ISNULL) IN ()))AND((((((vt0.c1) IS TRUE), ((vt0.c1)<=(vt0.c1)), vt0.c0 COLLATE RTRIM, ((x'')||(vt0.c1)), UPPER(vt0.c0)))!=(((~ (vt0.c1)), (((0.3861023695771114, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c0, vt0.c1))), rtreenode(vt0.c1, vt0.c0), vt0.c0, ((vt0.c1)>=(vt0.c0)))))))) ORDER BY CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c1))) THEN TIME(vt0.c0, vt0.c0, vt0.c0, vt0.c1) END, (('t') BETWEEN (((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))) AND (0.7412719925556285)), (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0))))=((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c1 AS TEXT)))) ASC INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((x'')!=((((vt0.c0, vt0.c0, 0.9018966449088773)) BETWEEN ((vt0.c0, vt0.c1, 0X431652a)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) ORDER BY CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c1))) THEN TIME(vt0.c0, vt0.c0, vt0.c0, vt0.c1) END, (('t') BETWEEN (((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))) AND (0.7412719925556285)), (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0))))=((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c1 AS TEXT)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL))%(vt0.c0))) ORDER BY CAST(1540581748 AS NUMERIC)  NULLS FIRST, (((vt0.c1, vt0.c1, NULL)) NOT BETWEEN ((vt0.c0, (((vt0.c0))<>((337239948))), (~ (vt0.c1)))) AND ((((vt0.c1)<=(x'e4')), MIN(vt0.c0, x'', vt0.c1, vt0.c0), load_extension(vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOT NULL))%(vt0.c0)))AND(vt0.c1))) ORDER BY CAST(0x5bd36974 AS NUMERIC)  NULLS FIRST, (((vt0.c1, vt0.c1, NULL)) NOT BETWEEN ((vt0.c0, (((vt0.c0))<>((0x1419df8c))), (~ (vt0.c1)))) AND ((((vt0.c1)<=(x'e4')), MIN(vt0.c0, x'', vt0.c1, vt0.c0), load_extension(vt0.c1))));
SELECT * FROM v0, vt0, t1 WHERE ((((v0.c2 IN ()))&((((t1.c2))=((v0.c0))))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((((((v0.c2 IN ()))&((((t1.c2))==((v0.c0))))))AND((((t1.c1, v0.c1)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c0)))AND(v0.c1)))OR(vt0.c1)))OR(t1.c0)), ((((v0.c0)AND(vt0.c1)))AND(t1.c0)))) AND ((vt0.c1 COLLATE BINARY, (('/C') NOT BETWEEN (vt0.c1) AND (vt0.c0)))))))) INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((((('n#{') NOT BETWEEN (t1.c0) AND (v0.c1))) NOTNULL));
SELECT * FROM v0, vt0, t1 WHERE ((((v0.c2 IN ()))&((((t1.c2))=((v0.c0))))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((((((v0.c2 IN ()))&((((t1.c2))==((v0.c0))))))AND((((t1.c1, v0.c1)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c0)))AND(v0.c1)))OR(vt0.c1)))OR(t1.c0)), ((((v0.c0)AND(vt0.c1)))AND(t1.c0)))) AND ((vt0.c1 COLLATE BINARY, (('/C') NOT BETWEEN (vt0.c1) AND (vt0.c0)))))))) INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((((('n#{') NOT BETWEEN (t1.c0) AND (v0.c1))) NOTNULL));
SELECT ALL * FROM v0 WHERE (((UNLIKELY(DISTINCT v0.c2))IS(x'cf'))) ORDER BY '0.7310912821084514' COLLATE BINARY DESC, '-1393225757'  NULLS LAST, ((v0.c2 IN ()) IN (((v0.c1)|(v0.c2)))) ASC, ((((v0.c0)OR(v0.c1)))AND('249746685')) COLLATE NOCASE;
SELECT DISTINCT * FROM v0 WHERE (((UNLIKELY(DISTINCT v0.c2))IS(x'cf'))) ORDER BY v0.c2 COLLATE RTRIM ASC, (((((v0.c0))>((v0.c2))))IS(((v0.c1)IS NOT(v0.c2))));
SELECT ALL * FROM v0 WHERE (((UNLIKELY(DISTINCT v0.c2))IS(x'cf'))) ORDER BY '0.7310912821084514' COLLATE BINARY DESC, '-1393225757'  NULLS LAST, ((v0.c2 IN ()) IN (((v0.c1)|(v0.c2)))) ASC, ((((v0.c0)OR(v0.c1)))AND('249746685')) COLLATE NOCASE;
SELECT DISTINCT * FROM v0 WHERE (((UNLIKELY(DISTINCT v0.c2))IS(x'cf'))) ORDER BY v0.c2 COLLATE RTRIM ASC, (((((v0.c0))>((v0.c2))))IS(((v0.c1)IS NOT(v0.c2))));
SELECT MAX(v0.c0) FROM vt0, v0 WHERE (CAST(((((vt0.c1)AND(NULL)))AND(v0.c0)) AS TEXT)) ORDER BY (((((vt0.c1))>=((vt0.c1))))OR(v0.c1))  NULLS FIRST, (NOT ((vt0.c0 IN (v0.c2)))) DESC;
SELECT DISTINCT MAX(v0.c0) FROM vt0, v0 WHERE (((CAST(((((vt0.c1)AND(NULL)))AND(v0.c0)) AS TEXT))AND(((CASE v0.c1  WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN vt0.c0 END) IS FALSE)))) ORDER BY (((((vt0.c1))>=((vt0.c1))))OR(v0.c1))  NULLS FIRST, (NOT ((vt0.c0 IN (v0.c2)))) DESC LIMIT 0x1;
SELECT * FROM v0, vt0 WHERE (((((v0.c0 IN (v0.c2)), (((vt0.c0)) NOT BETWEEN ((1.32882391E8)) AND ((v0.c0))), (v0.c2 IN (v0.c2, v0.c1))))>((((NULL)LIKE(v0.c0)), ((-1.88391506E8)LIKE(vt0.c0)), TYPEOF(v0.c0)))));
SELECT * FROM v0, vt0 WHERE (((((v0.c0 IN (v0.c2)), (((vt0.c0)) NOT BETWEEN ((1.32882391E8)) AND ((v0.c0))), (v0.c2 IN (v0.c2, v0.c1))))>((((NULL)LIKE(v0.c0)), ((-1.88391506E8)LIKE(vt0.c0)), TYPEOF(v0.c0)))));
SELECT * FROM v0, vt0 WHERE (((((v0.c0 IN (v0.c2)), (((vt0.c0)) NOT BETWEEN ((1.32882391E8)) AND ((v0.c0))), (v0.c2 IN (v0.c2, v0.c1))))>((((NULL)LIKE(v0.c0)), ((-1.88391506E8)LIKE(vt0.c0)), TYPEOF(v0.c0)))));
SELECT * FROM v0, vt0 WHERE (((((v0.c0 IN (v0.c2)), (((vt0.c0)) NOT BETWEEN ((1.32882391E8)) AND ((v0.c0))), (v0.c2 IN (v0.c2, v0.c1))))>((((NULL)LIKE(v0.c0)), ((-1.88391506E8)LIKE(vt0.c0)), TYPEOF(v0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((('1306913842') NOT BETWEEN (v0.c1) AND (vt0.c0))) IS FALSE)) ORDER BY v0.c0  NULLS LAST, vt0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((('1306913842') NOT BETWEEN (v0.c1) AND (vt0.c0))) IS FALSE))AND(CASE LOWER(vt0.c0)  WHEN ((v0.c0) NOT BETWEEN (x'49') AND (vt0.c1)) THEN ((((((vt0.c0)AND(v0.c1)))AND(v0.c1)))OR(v0.c0)) END))) ORDER BY v0.c0  NULLS LAST, vt0.c0 DESC  NULLS LAST LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c1))==((vt0.c1, vt0.c1))) IN ((vt0.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c1)IS(vt0.c1))) IS FALSE)  NULLS FIRST, x'' COLLATE NOCASE COLLATE RTRIM ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c1))==((vt0.c1, vt0.c1))) IN ((vt0.c0 IN (vt0.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((('469225696')+(NULL))) BETWEEN ((vt0.c0 IN ())) AND ((('808120973') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY vt0.c0 DESC  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM vt0, t1, v0 WHERE ((vt0.c1 COLLATE NOCASE IN ()));
SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY t1.c0 LIMIT 0x0;
SELECT ALL * FROM vt0, t1, v0 WHERE ((vt0.c1 COLLATE NOCASE IN ()));
SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY t1.c0 LIMIT 0x0;
SELECT MAX(v0.c1) FROM v0 WHERE (((((((((v0.c0)AND(x'09a442')))OR(v0.c0)))OR(v0.c0)))==(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))));
SELECT DISTINCT MAX(v0.c1) FROM v0 WHERE (((((((((((v0.c0)AND(x'09a442')))OR(v0.c0)))OR(v0.c0)))==(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))))AND(((CASE WHEN v0.c1 THEN v0.c1 WHEN x'ae83953e' THEN v0.c2 ELSE x'' END) BETWEEN (((v0.c0) IS FALSE)) AND (CAST(v0.c2 AS BLOB)))))) ORDER BY ((((v0.c0)OR(((v0.c0) IS FALSE))))OR(((((v0.c0)OR(v0.c1)))OR(v0.c1)))), ((json_extract(v0.c1, v0.c1)) BETWEEN (((v0.c1)>=(v0.c2))) AND (((v0.c2)-(v0.c1)))) DESC  NULLS LAST, x'' LIMIT 0X1;
SELECT ALL * FROM t1, vt0 WHERE (((t1.c1) IS FALSE)) ORDER BY (((t1.c2)>=(t1.c2)) IN (ABS(t1.c1))) ASC;
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c1) IS FALSE))AND((((vt0.c1 IN (t1.c1))) ISNULL)))) ORDER BY (((t1.c2)>=(t1.c2)) IN (ABS(t1.c1))) ASC LIMIT 0x0 INTERSECT SELECT * FROM t1, vt0 WHERE (vt0.c1) ORDER BY (((t1.c2)>=(t1.c2)) IN (ABS(t1.c1))) ASC LIMIT 0;
SELECT ALL * FROM t1, vt0 WHERE (((t1.c1) IS FALSE)) ORDER BY (((t1.c2)>=(t1.c2)) IN (ABS(t1.c1))) ASC;
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c1) IS FALSE))AND((((vt0.c1 IN (t1.c1))) ISNULL)))) ORDER BY (((t1.c2)>=(t1.c2)) IN (ABS(t1.c1))) ASC LIMIT 0x0 INTERSECT SELECT * FROM t1, vt0 WHERE (vt0.c1) ORDER BY (((t1.c2)>=(t1.c2)) IN (ABS(t1.c1))) ASC LIMIT 0;
SELECT MIN(vt0.c1) FROM vt0, v0, t1 WHERE (CAST((vt0.c0 IN (t1.c1)) AS REAL)) ORDER BY ((((NULL)AND((NOT (t1.c0)))))OR((- (v0.c1))));
SELECT ALL MIN(vt0.c1) FROM vt0, v0, t1 WHERE (((CAST((vt0.c0 IN (t1.c1)) AS REAL))AND(x'ebb8b1'))) ORDER BY -7.82663409E8 LIMIT 0X2 INTERSECT SELECT ALL MIN(vt0.c1) FROM vt0, v0, t1 WHERE (((v0.c2 COLLATE BINARY) IS TRUE)) ORDER BY -7.82663409E8 LIMIT 2;
SELECT * FROM t1, v0 WHERE ((v0.c1 COLLATE NOCASE IN ()));
SELECT DISTINCT * FROM t1, v0 WHERE ((v0.c1 COLLATE NOCASE IN ())) ORDER BY (((v0.c0, t1.c0, t1.c0, v0.c1, '1661887489')) NOT BETWEEN ((CASE t1.c1  WHEN v0.c1 THEN t1.c1 ELSE t1.c1 END, ((t1.c2) BETWEEN (v0.c0) AND (v0.c1)), '|8FKHj', x'4c', ((((t1.c1)OR(v0.c2)))AND('DgZ')))) AND (((- (v0.c1)), (+ (t1.c2)), v0.c0, CASE WHEN t1.c2 THEN t1.c2 ELSE t1.c0 END, ((t1.c0)&(v0.c2))))) LIMIT 0x1;
SELECT * FROM t1, v0 WHERE ((v0.c1 COLLATE NOCASE IN ()));
SELECT DISTINCT * FROM t1, v0 WHERE ((v0.c1 COLLATE NOCASE IN ())) ORDER BY (((v0.c0, t1.c0, t1.c0, v0.c1, '1661887489')) NOT BETWEEN ((CASE t1.c1  WHEN v0.c1 THEN t1.c1 ELSE t1.c1 END, ((t1.c2) BETWEEN (v0.c0) AND (v0.c1)), '|8FKHj', x'4c', ((((t1.c1)OR(v0.c2)))AND('DgZ')))) AND (((- (v0.c1)), (+ (t1.c2)), v0.c0, CASE WHEN t1.c2 THEN t1.c2 ELSE t1.c0 END, ((t1.c0)&(v0.c2))))) LIMIT 0x1;
SELECT ALL * FROM v0, vt0, t1 WHERE (((vt0.c1)LIKE((((v0.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))));
SELECT * FROM v0, vt0, t1 WHERE (((((vt0.c1)LIKE((((v0.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))))AND(CASE WHEN ((((((t1.c0)OR(vt0.c0)))AND(t1.c0)))OR(t1.c0)) THEN ((t1.c2) IS FALSE) END))) ORDER BY ((vt0.c1 COLLATE BINARY) NOTNULL) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE (vt0.c1) ORDER BY ((vt0.c1 COLLATE BINARY) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0, t1 WHERE (((vt0.c1)LIKE((((v0.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))));
SELECT * FROM v0, vt0, t1 WHERE (((((vt0.c1)LIKE((((v0.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))))AND(CASE WHEN ((((((t1.c0)OR(vt0.c0)))AND(t1.c0)))OR(t1.c0)) THEN ((t1.c2) IS FALSE) END))) ORDER BY ((vt0.c1 COLLATE BINARY) NOTNULL) ASC  NULLS FIRST INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE (vt0.c1) ORDER BY ((vt0.c1 COLLATE BINARY) NOTNULL) ASC  NULLS FIRST;
SELECT ALL MIN(v0.c0) FROM v0, t1 WHERE (((((((((MIN(x'105e', t1.c1, t1.c0))AND(((t1.c0) NOTNULL))))OR(CASE v0.c2  WHEN v0.c0 THEN v0.c1 END)))OR(((t1.c2)<=(v0.c0)))))OR(v0.c1))) ORDER BY (((NOT (v0.c0)))IS(CASE WHEN v0.c1 THEN x'ac' WHEN v0.c0 THEN v0.c1 WHEN t1.c0 THEN v0.c2 WHEN t1.c0 THEN t1.c0 END));
SELECT DISTINCT MIN(v0.c0) FROM v0, t1 WHERE (((((((((MIN(x'105e', t1.c1, t1.c0))AND(((t1.c0) NOTNULL))))OR(CASE v0.c2  WHEN v0.c0 THEN v0.c1 END)))OR(((t1.c2)<=(v0.c0)))))OR(v0.c1))) ORDER BY (((NOT (v0.c0)))IS(CASE WHEN v0.c1 THEN x'ac' WHEN v0.c0 THEN v0.c1 WHEN t1.c0 THEN v0.c2 WHEN t1.c0 THEN t1.c0 END));
SELECT * FROM t1 CROSS JOIN v0 ON (t1.c1 IN ()) CROSS JOIN vt0 ON (~ (NULL)) WHERE ((~ (((t1.c0) NOT NULL)))) ORDER BY json_array_length(CAST(vt0.c1 AS INTEGER), (((((('x')OR(t1.c0)))AND(t1.c2)))OR(vt0.c1))) ASC  NULLS LAST, CAST(((v0.c1)GLOB(v0.c1)) AS NUMERIC) ASC, ((((ROUND(v0.c0, v0.c0))AND(LIKELY(v0.c2))))OR((((t1.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))));
SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON (t1.c1 IN ()) CROSS JOIN vt0 ON (~ (NULL)) WHERE ((((~ (((t1.c0) NOT NULL))))AND(((((t1.c0)<<(v0.c1))) BETWEEN (((vt0.c0)/(v0.c2))) AND ((+ (v0.c2))))))) ORDER BY CASE WHEN t1.c0 THEN ((t1.c2)||(0Xffffffff8403f349)) END LIMIT 0X1;
SELECT * FROM t1 CROSS JOIN v0 ON (t1.c1 IN ()) CROSS JOIN vt0 ON (~ (NULL)) WHERE ((~ (((t1.c0) NOT NULL)))) ORDER BY json_array_length(CAST(vt0.c1 AS INTEGER), (((((('x')OR(t1.c0)))AND(t1.c2)))OR(vt0.c1))) ASC  NULLS LAST, CAST(((v0.c1)GLOB(v0.c1)) AS NUMERIC) ASC, ((((ROUND(v0.c0, v0.c0))AND(LIKELY(v0.c2))))OR((((t1.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))));
SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON (t1.c1 IN ()) CROSS JOIN vt0 ON (~ (NULL)) WHERE ((((~ (((t1.c0) NOT NULL))))AND(((((t1.c0)<<(v0.c1))) BETWEEN (((vt0.c0)/(v0.c2))) AND ((+ (v0.c2))))))) ORDER BY CASE WHEN t1.c0 THEN ((t1.c2)||(0Xffffffff8403f349)) END LIMIT 0X1;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c1) NOT NULL) IN ()) DESC  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-1287748498'))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)LIKE(TRIM(DISTINCT vt0.c1, NULL))) ASC  NULLS FIRST, MIN(vt0.c0, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1)))OR('1571375270')) IN ((vt0.c1 IN (vt0.c0, 0.48181015637428726))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)LIKE(TRIM(DISTINCT vt0.c1, NULL))) ASC  NULLS FIRST, MIN(vt0.c0, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC LIMIT 0x2;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c1) NOT NULL) IN ()) DESC  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-1287748498'))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, t1 WHERE ((((NOT (t1.c2)))>(((((v0.c0)AND(t1.c2)))AND(t1.c0))))) ORDER BY (~ ('IeOc{c' COLLATE BINARY));
SELECT * FROM v0, t1 WHERE ((((NOT (t1.c2)))>(((((v0.c0)AND(t1.c2)))AND(t1.c0))))) ORDER BY ((CAST(t1.c1 AS TEXT))*((+ (t1.c2)))) ASC, ((((((((((t1.c2)OR(v0.c1)))OR(v0.c2)))OR(t1.c2)))AND(t1.c1)))/((t1.c2 IN (v0.c0, v0.c2)))) LIMIT 0x2;
SELECT ALL * FROM v0, t1 WHERE ((((NOT (t1.c2)))>(((((v0.c0)AND(t1.c2)))AND(t1.c0))))) ORDER BY (~ ('IeOc{c' COLLATE BINARY));
SELECT * FROM v0, t1 WHERE ((((NOT (t1.c2)))>(((((v0.c0)AND(t1.c2)))AND(t1.c0))))) ORDER BY ((CAST(t1.c1 AS TEXT))*((+ (t1.c2)))) ASC, ((((((((((t1.c2)OR(v0.c1)))OR(v0.c2)))OR(t1.c2)))AND(t1.c1)))/((t1.c2 IN (v0.c0, v0.c2)))) LIMIT 0x2;
SELECT * FROM vt0, v0 WHERE (((((((((((((((v0.c0)AND(vt0.c0)))OR(0.8689493809008887)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN ((~ (vt0.c1))) AND (vt0.c0)));
SELECT DISTINCT * FROM vt0, v0 WHERE (((((((((((((((((v0.c0)AND(vt0.c0)))OR(0.8689493809008887)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN ((~ (vt0.c1))) AND (vt0.c0)))AND(((((((((((v0.c1)AND(v0.c2)))OR(v0.c2)))OR(vt0.c0)))AND(v0.c2)))<<((~ (vt0.c0))))))) ORDER BY CASE (NOT (vt0.c0))  WHEN (- (v0.c1)) THEN '-1650154887' ELSE v0.c1 END DESC  NULLS FIRST LIMIT 1;
SELECT * FROM vt0, v0 WHERE (((((((((((((((v0.c0)AND(vt0.c0)))OR(0.8689493809008887)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN ((~ (vt0.c1))) AND (vt0.c0)));
SELECT DISTINCT * FROM vt0, v0 WHERE (((((((((((((((((v0.c0)AND(vt0.c0)))OR(0.8689493809008887)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN ((~ (vt0.c1))) AND (vt0.c0)))AND(((((((((((v0.c1)AND(v0.c2)))OR(v0.c2)))OR(vt0.c0)))AND(v0.c2)))<<((~ (vt0.c0))))))) ORDER BY CASE (NOT (vt0.c0))  WHEN (- (v0.c1)) THEN '-1650154887' ELSE v0.c1 END DESC  NULLS FIRST LIMIT 1;
SELECT ALL MIN(v0.c0) FROM vt0, v0, t1 WHERE ((+ (((t1.c1)<=(vt0.c0))))) ORDER BY ((((v0.c2) ISNULL)) IS FALSE)  NULLS FIRST;
SELECT DISTINCT MIN(v0.c0) FROM vt0, v0, t1 WHERE ((((+ (((t1.c1)<(vt0.c0)))))AND(((((t1.c2)*(v0.c2))) NOT NULL)))) ORDER BY ((vt0.c1 COLLATE BINARY) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<(NULL COLLATE BINARY)));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<(NULL COLLATE BINARY))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))*(((vt0.c1) IS FALSE)))  NULLS LAST, ((UNICODE(vt0.c0)) BETWEEN (NULL) AND (((x'5140c8')!=(vt0.c1))))  NULLS FIRST;
SELECT * FROM t1, v0, vt0 NOT INDEXED WHERE (CASE v0.c2  WHEN SQLITE_SOURCE_ID() THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT * FROM t1, v0, vt0 WHERE (CASE v0.c2  WHEN SQLITE_SOURCE_ID() THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) LIMIT 0;
SELECT * FROM t1, v0, vt0 NOT INDEXED WHERE (CASE v0.c2  WHEN SQLITE_SOURCE_ID() THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT * FROM t1, v0, vt0 WHERE (CASE v0.c2  WHEN SQLITE_SOURCE_ID() THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (NULL) ORDER BY HEX(((t1.c2) NOT BETWEEN (t1.c0) AND (0.5072119842553116)))  NULLS LAST, CASE WHEN (((t1.c2, t1.c0))>=((0X2885ac9a, t1.c2))) THEN ((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c0)) ELSE t1.c1 END  NULLS FIRST, (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))))<(CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN t1.c1 THEN t1.c2 ELSE 'n(7쨹' END));
SELECT MAX(t1.c1) FROM t1 WHERE (((NULL)AND(NULL))) ORDER BY ((SQLITE_VERSION()) NOT BETWEEN ((+ (t1.c1))) AND ('紕')) DESC  NULLS LAST, ((((t1.c2) NOTNULL)) BETWEEN (((x'') NOT BETWEEN (t1.c0) AND (t1.c2))) AND (x'5e')), (((~ (t1.c1)))>>(CAST(t1.c0 AS BLOB))) LIMIT 0X1 INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((t1.c1)/(t1.c1))) NOT BETWEEN ((t1.c0 IN ())) AND (((t1.c0)<=(t1.c1))))) ORDER BY ((SQLITE_VERSION()) NOT BETWEEN ((+ (t1.c1))) AND ('紕')) DESC  NULLS LAST, ((((t1.c2) NOTNULL)) BETWEEN (((x'') NOT BETWEEN (t1.c0) AND (t1.c2))) AND (x'5e')), (((~ (t1.c1)))>>(CAST(t1.c0 AS BLOB))) LIMIT 1;
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON vt0.c0 WHERE (((((vt0.c1) NOT NULL))IS NOT(rtreenode(vt0.c0, x''))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON vt0.c0 WHERE (((((vt0.c1) NOT NULL))IS NOT(rtreenode(vt0.c0, x'')))) LIMIT 1;
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON vt0.c0 WHERE (((((vt0.c1) NOT NULL))IS NOT(rtreenode(vt0.c0, x''))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON vt0.c0 WHERE (((((vt0.c1) NOT NULL))IS NOT(rtreenode(vt0.c0, x'')))) LIMIT 1;
SELECT MAX(vt0.c1) FROM vt0 LEFT OUTER JOIN t1 ON (((vt0.c0, vt0.c1)) BETWEEN ((t1.c2, t1.c0)) AND ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), CASE t1.c0  WHEN t1.c0 THEN t1.c2 END))) WHERE (((((t1.c1)>=(vt0.c1))) NOT BETWEEN (((vt0.c1)AND(t1.c0))) AND ((((0.5958436141528451, t1.c2, t1.c2)) NOT BETWEEN ((vt0.c1, vt0.c0, t1.c0)) AND ((t1.c2, t1.c1, t1.c2)))))) ORDER BY (t1.c1 IN (LOWER(vt0.c0), CAST(vt0.c1 AS NUMERIC)));
SELECT DISTINCT MAX(vt0.c1) FROM vt0 INNER JOIN t1 ON (((vt0.c0, vt0.c1)) BETWEEN ((t1.c2, t1.c0)) AND ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0)), CASE t1.c0  WHEN t1.c0 THEN t1.c2 END))) WHERE (((((t1.c1)>=(vt0.c1))) NOT BETWEEN (((vt0.c1)AND(t1.c0))) AND ((((0.5958436141528451, t1.c2, t1.c2)) NOT BETWEEN ((vt0.c1, vt0.c0, t1.c0)) AND ((t1.c2, t1.c1, t1.c2)))))) ORDER BY ((CAST(t1.c2 AS TEXT))>((((t1.c0, t1.c2))>((t1.c1, t1.c1))))), (((t1.c0)) NOT BETWEEN ((vt0.c1)) AND ((((t1.c2) BETWEEN (x'e62f') AND (t1.c2)))))  NULLS FIRST;
SELECT * FROM v0, t1, vt0 WHERE ((NOT (((((t1.c0)AND(v0.c2)))OR(vt0.c1)))));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE ((((NOT (((((t1.c0)AND(v0.c2)))OR(vt0.c1)))))AND(vt0.c0))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE ((((vt0.c0)GLOB(vt0.c1)) IN (((((t1.c0)AND(v0.c0)))OR(t1.c0))))) LIMIT 0x0;
SELECT * FROM v0, t1, vt0 WHERE ((NOT (((((t1.c0)AND(v0.c2)))OR(vt0.c1)))));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE ((((NOT (((((t1.c0)AND(v0.c2)))OR(vt0.c1)))))AND(vt0.c0))) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE ((((vt0.c0)GLOB(vt0.c1)) IN (((((t1.c0)AND(v0.c0)))OR(t1.c0))))) LIMIT 0x0;
SELECT ALL * FROM vt0, t1, v0 WHERE (v0.c0);
SELECT DISTINCT * FROM vt0, t1, v0 WHERE (((v0.c0)AND(((t1.c0) IS TRUE)))) ORDER BY CAST(((((vt0.c1)OR(t1.c2)))OR(vt0.c1)) AS NUMERIC) DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((((t1.c2 IN ()))%(((vt0.c1)AND(t1.c0))))) ORDER BY CAST(((((vt0.c1)OR(t1.c2)))OR(vt0.c1)) AS NUMERIC) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0, t1, v0 WHERE (v0.c0);
SELECT DISTINCT * FROM vt0, t1, v0 WHERE (((v0.c0)AND(((t1.c0) IS TRUE)))) ORDER BY CAST(((((vt0.c1)OR(t1.c2)))OR(vt0.c1)) AS NUMERIC) DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((((t1.c2 IN ()))%(((vt0.c1)AND(t1.c0))))) ORDER BY CAST(((((vt0.c1)OR(t1.c2)))OR(vt0.c1)) AS NUMERIC) DESC  NULLS LAST LIMIT 0X0;
SELECT MAX(t1.c0) FROM t1, v0, vt0 WHERE ((((- (vt0.c0)))==(((vt0.c0)!=(v0.c2))))) ORDER BY (((vt0.c0)) BETWEEN ((((0.3668464665468124) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CASE v0.c2  WHEN v0.c1 THEN t1.c0 WHEN vt0.c1 THEN v0.c1 ELSE t1.c0 END))), ((CASE WHEN t1.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c1 ELSE t1.c1 END)|((v0.c0 IN ())))  NULLS FIRST;
SELECT DISTINCT MAX(t1.c0) FROM t1, v0, vt0 WHERE ((((- (vt0.c0)))=(((vt0.c0)>(v0.c2))))) ORDER BY (((vt0.c0)) BETWEEN ((((0.3668464665468124) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CASE v0.c2  WHEN v0.c1 THEN t1.c0 WHEN vt0.c1 THEN v0.c1 ELSE t1.c0 END))), ((CASE WHEN t1.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c1 ELSE t1.c1 END)|((v0.c0 IN ())))  NULLS FIRST LIMIT 1;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t1 ON ((((t1.c0)>(v0.c2)))>>(x'd70430')) LEFT OUTER JOIN vt0 ON (NOT (((v0.c1) NOT BETWEEN (t1.c1) AND (vt0.c1)))) WHERE ((((vt0.c1)) NOT BETWEEN ((((x'c14c')/(t1.c0)))) AND ((v0.c1 COLLATE NOCASE)))) ORDER BY NULL DESC, (((t1.c0)-('hM')) IN (CAST(vt0.c1 AS TEXT), ((t1.c2) BETWEEN (vt0.c1) AND (t1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t1 ON ((((t1.c0)>(v0.c2)))>>(x'd70430')) INNER JOIN vt0 ON (NOT (((v0.c1) NOT BETWEEN (t1.c1) AND (vt0.c1)))) WHERE ((((vt0.c1)) NOT BETWEEN ((((x'c14c')/(t1.c0)))) AND ((v0.c1 COLLATE NOCASE)))) ORDER BY ((((vt0.c1) ISNULL))&(UNLIKELY(vt0.c1))) DESC  NULLS FIRST LIMIT 2;
SELECT ALL MAX(vt0.c0) FROM v0, vt0 WHERE ((COALESCE(DISTINCT x'', v0.c2, vt0.c1, vt0.c1, v0.c1) IN (CASE WHEN x'' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END)));
SELECT MAX(vt0.c0) FROM v0, vt0 WHERE ((((COALESCE(DISTINCT x'', v0.c2, vt0.c1, vt0.c1, v0.c1) IN (CASE WHEN x'' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END)))AND(((CASE v0.c1  WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c2 ELSE '2138575335' END)|((~ (0xffffffffcde80023))))))) ORDER BY (((((((0.18660427525104073)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c1 WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END)))OR(HEX(vt0.c0)))  NULLS FIRST, CAST((vt0.c0 IN (v0.c0)) AS BLOB) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT MAX(vt0.c0) FROM v0, vt0 WHERE (0.051213271674273586) ORDER BY (((((((0.18660427525104073)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c1 WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END)))OR(HEX(vt0.c0)))  NULLS FIRST, CAST((vt0.c0 IN (v0.c0)) AS BLOB) DESC  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE ((NOT (((t1.c2)IS NOT(t1.c1)))));
SELECT * FROM t1 WHERE ((((NOT (((t1.c2)IS NOT(t1.c1)))))AND((((x'af' IN (t1.c1))) NOT BETWEEN (-1052937140) AND (t1.c2 COLLATE RTRIM))))) LIMIT 0X0;
SELECT * FROM t1 WHERE ((NOT (((t1.c2)IS NOT(t1.c1)))));
SELECT * FROM t1 WHERE ((((NOT (((t1.c2)IS NOT(t1.c1)))))AND((((x'af' IN (t1.c1))) NOT BETWEEN (-1052937140) AND (t1.c2 COLLATE RTRIM))))) LIMIT 0X0;
SELECT * FROM t1, v0 WHERE (((CASE WHEN v0.c2 THEN v0.c0 ELSE t1.c2 END)>>(((((((v0.c0)AND(t1.c1)))AND(v0.c0)))AND(t1.c1))))) ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(t1.c1 AS REAL)) AND (COALESCE(NULL, t1.c0, v0.c0, t1.c2))) ASC;
SELECT ALL * FROM t1, v0 WHERE (((((CASE WHEN v0.c2 THEN v0.c0 ELSE t1.c2 END)>>(((((((v0.c0)AND(t1.c1)))AND(v0.c0)))AND(t1.c1)))))AND(((((t1.c2) NOT NULL)) NOTNULL)))) ORDER BY (- (LOWER(DISTINCT t1.c1))) DESC, (((((0.35209157895509335, t1.c1, t1.c0, x'04')) BETWEEN ((v0.c1, t1.c0, v0.c1, v0.c2)) AND ((t1.c2, x'54', '-68530683', v0.c0))))<=(((t1.c0)GLOB(t1.c0)))) DESC LIMIT 0x0;
SELECT * FROM t1, v0 WHERE (((CASE WHEN v0.c2 THEN v0.c0 ELSE t1.c2 END)>>(((((((v0.c0)AND(t1.c1)))AND(v0.c0)))AND(t1.c1))))) ORDER BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(t1.c1 AS REAL)) AND (COALESCE(NULL, t1.c0, v0.c0, t1.c2))) ASC;
SELECT ALL * FROM t1, v0 WHERE (((((CASE WHEN v0.c2 THEN v0.c0 ELSE t1.c2 END)>>(((((((v0.c0)AND(t1.c1)))AND(v0.c0)))AND(t1.c1)))))AND(((((t1.c2) NOT NULL)) NOTNULL)))) ORDER BY (- (LOWER(DISTINCT t1.c1))) DESC, (((((0.35209157895509335, t1.c1, t1.c0, x'04')) BETWEEN ((v0.c1, t1.c0, v0.c1, v0.c2)) AND ((t1.c2, x'54', '-68530683', v0.c0))))<=(((t1.c0)GLOB(t1.c0)))) DESC LIMIT 0x0;
SELECT * FROM t1 WHERE ((NOT (0.863170157130883))) ORDER BY ((UPPER(DISTINCT t1.c1))IS((((t1.c0, t1.c1))==((0.5745436603535751, '303808265')))));
SELECT ALL * FROM t1 WHERE ((NOT (0.863170157130883))) ORDER BY ((UPPER(DISTINCT t1.c1))IS((((t1.c0, t1.c1))==((0.5745436603535751, '303808265')))));
SELECT * FROM t1 WHERE ((NOT (0.863170157130883))) ORDER BY ((UPPER(DISTINCT t1.c1))IS((((t1.c0, t1.c1))==((0.5745436603535751, '303808265')))));
SELECT ALL * FROM t1 WHERE ((NOT (0.863170157130883))) ORDER BY ((UPPER(DISTINCT t1.c1))IS((((t1.c0, t1.c1))==((0.5745436603535751, '303808265')))));
SELECT MIN(vt0.c1) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END AS TEXT)) ORDER BY CASE (('g-') NOT NULL)  WHEN (((vt0.c1))>(('-1083689078'))) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN (((vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1))) END DESC  NULLS LAST, (NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))) DESC;
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END AS TEXT))AND(vt0.c1))) ORDER BY ((vt0.c0 COLLATE BINARY)AND((- (vt0.c1)))) ASC, ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1))) IS TRUE) DESC LIMIT 1 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (0.5991573977326865) ORDER BY ((vt0.c0 COLLATE BINARY)AND((- (vt0.c1)))) ASC, ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1))) IS TRUE) DESC LIMIT 1;
SELECT MAX(v0.c0) FROM v0 INNER JOIN vt0 ON ((((vt0.c1)AND(t1.c2))) NOTNULL) CROSS JOIN t1 ON ((json_patch(t1.c1, t1.c2))<((((t1.c0, vt0.c1))<((vt0.c0, v0.c0))))) WHERE (((CAST(vt0.c0 AS REAL))+((~ (v0.c0)))));
SELECT MAX(v0.c0) FROM v0 INNER JOIN vt0 ON ((((vt0.c1)AND(t1.c2))) NOTNULL) CROSS JOIN t1 ON ((json_patch(t1.c1, t1.c2))<((((t1.c0, vt0.c1))<((vt0.c0, v0.c0))))) WHERE (((CAST(vt0.c0 AS REAL))+((~ (v0.c0))))) LIMIT 0x1 INTERSECT SELECT MAX(v0.c0) FROM v0 INNER JOIN vt0 ON ((((vt0.c1)AND(t1.c2))) NOTNULL) CROSS JOIN t1 ON ((json_patch(t1.c1, t1.c2))<((((t1.c0, vt0.c1))<((vt0.c0, v0.c0))))) WHERE (vt0.c1) LIMIT 1;
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY CAST(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC) DESC, UNLIKELY(DISTINCT ((NULL) IS FALSE)), '472236244';
SELECT * FROM vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0) ISNULL)))<((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((0.8749868117140764)>>(vt0.c1)))))  NULLS FIRST, ((vt0.c0 IN (vt0.c0)) IN (((vt0.c1)OR(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY CAST(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC) DESC, UNLIKELY(DISTINCT ((NULL) IS FALSE)), '472236244';
SELECT * FROM vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0) ISNULL)))<((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((0.8749868117140764)>>(vt0.c1)))))  NULLS FIRST, ((vt0.c0 IN (vt0.c0)) IN (((vt0.c1)OR(vt0.c0))))  NULLS LAST;
SELECT * FROM t1, v0 WHERE (((((t1.c1) BETWEEN (v0.c2) AND (t1.c2)))<(((t1.c2)>>(t1.c1)))));
SELECT * FROM t1, v0 WHERE (((((((t1.c1) BETWEEN (v0.c2) AND (t1.c2)))<(((t1.c2)>>(t1.c1)))))AND(((t1.c0 COLLATE NOCASE) NOT BETWEEN (json_patch(t1.c0, 0Xffffffffdcbc21c3)) AND (((t1.c1) BETWEEN (NULL) AND (t1.c0)))))));
SELECT * FROM t1, v0 WHERE (((((t1.c1) BETWEEN (v0.c2) AND (t1.c2)))<(((t1.c2)>>(t1.c1)))));
SELECT * FROM t1, v0 WHERE (((((((t1.c1) BETWEEN (v0.c2) AND (t1.c2)))<(((t1.c2)>>(t1.c1)))))AND(((t1.c0 COLLATE NOCASE) NOT BETWEEN (json_patch(t1.c0, 0Xffffffffdcbc21c3)) AND (((t1.c1) BETWEEN (NULL) AND (t1.c0)))))));
SELECT MAX(vt0.c1) FROM vt0, t1, v0 WHERE (((((((((vt0.c0)AND((~ (t1.c0)))))AND(((v0.c2)|(t1.c0)))))AND(((t1.c0) NOT BETWEEN (v0.c1) AND (t1.c1)))))OR(((v0.c2) NOT NULL))));
SELECT DISTINCT MAX(vt0.c1) FROM vt0, t1, v0 WHERE (((((((((vt0.c0)AND((~ (t1.c0)))))AND(((v0.c2)|(t1.c0)))))AND(((t1.c0) NOT BETWEEN (v0.c1) AND (t1.c1)))))OR(((v0.c2) NOT NULL)))) ORDER BY ((CASE NULL  WHEN t1.c1 THEN t1.c0 WHEN v0.c2 THEN 0x797a15ed WHEN v0.c1 THEN v0.c2 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END)>=(t1.c1)), (+ ((v0.c1 IN (vt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((t1.c2) BETWEEN (vt0.c0) AND (x'96c29e')))AND(((((((v0.c1)AND(x'')))AND(t1.c1)))OR(v0.c1)))))OR(((v0.c1)/(t1.c2)))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((((t1.c2) BETWEEN (vt0.c0) AND (x'96c29e')))AND(((((((v0.c1)AND(x'')))AND(t1.c1)))OR(v0.c1)))))OR(((v0.c1)/(t1.c2)))));
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((t1.c2) BETWEEN (vt0.c0) AND (x'96c29e')))AND(((((((v0.c1)AND(x'')))AND(t1.c1)))OR(v0.c1)))))OR(((v0.c1)/(t1.c2)))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((((t1.c2) BETWEEN (vt0.c0) AND (x'96c29e')))AND(((((((v0.c1)AND(x'')))AND(t1.c1)))OR(v0.c1)))))OR(((v0.c1)/(t1.c2)))));
SELECT * FROM v0, t1, vt0 WHERE (((t1.c0) BETWEEN (x'') AND (v0.c2)) COLLATE RTRIM) ORDER BY ((((((((CAST(v0.c0 AS REAL))AND(((v0.c0)GLOB(vt0.c0)))))OR((((v0.c1, vt0.c0, v0.c2, vt0.c0, vt0.c1))=((t1.c0, vt0.c0, vt0.c0, '^q}3F', v0.c2))))))OR((v0.c0 IN (0.5615385937856651)))))OR((NOT ('EP&䔥WR{'))))  NULLS LAST, CAST(((v0.c1) IS TRUE) AS INTEGER) DESC  NULLS LAST;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((t1.c0) BETWEEN (x'') AND (v0.c2)) COLLATE RTRIM) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)), (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1)) IN (((v0.c2)>=(vt0.c1)), t1.c1 COLLATE BINARY))  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((v0.c0 IN (t1.c2)) IN (t1.c1 COLLATE NOCASE))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)), (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1)) IN (((v0.c2)>=(vt0.c1)), t1.c1 COLLATE BINARY))  NULLS LAST;
SELECT * FROM v0, t1, vt0 WHERE (((t1.c0) BETWEEN (x'') AND (v0.c2)) COLLATE RTRIM) ORDER BY ((((((((CAST(v0.c0 AS REAL))AND(((v0.c0)GLOB(vt0.c0)))))OR((((v0.c1, vt0.c0, v0.c2, vt0.c0, vt0.c1))=((t1.c0, vt0.c0, vt0.c0, '^q}3F', v0.c2))))))OR((v0.c0 IN (0.5615385937856651)))))OR((NOT ('EP&䔥WR{'))))  NULLS LAST, CAST(((v0.c1) IS TRUE) AS INTEGER) DESC  NULLS LAST;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((t1.c0) BETWEEN (x'') AND (v0.c2)) COLLATE RTRIM) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)), (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1)) IN (((v0.c2)>=(vt0.c1)), t1.c1 COLLATE BINARY))  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((v0.c0 IN (t1.c2)) IN (t1.c1 COLLATE NOCASE))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)), (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1)) IN (((v0.c2)>=(vt0.c1)), t1.c1 COLLATE BINARY))  NULLS LAST;
SELECT MAX(t1.c1) FROM t1, vt0, v0 WHERE ((NOT (CAST(v0.c2 AS BLOB)))) ORDER BY '0.6831539244855179' DESC, (((((v0.c2)/(v0.c0))))>((NULL)))  NULLS FIRST, ((((((((0Xffffffff9c26a131)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))!=(((t1.c1)|(v0.c0))));
SELECT DISTINCT MAX(t1.c1) FROM t1, vt0, v0 WHERE ((((NOT (CAST(v0.c2 AS BLOB))))AND(load_extension(((((vt0.c0)AND(t1.c0)))OR('115292246')), CAST(x'd60647' AS INTEGER))))) ORDER BY '0.6831539244855179' DESC, (((((v0.c2)/(v0.c0))))>((NULL)))  NULLS FIRST, ((((((((-1675189967)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))<>(((t1.c1)|(v0.c0)))) LIMIT 1;
SELECT MIN(t1.c0) FROM vt0, t1 WHERE (UNLIKELY(DISTINCT (+ (vt0.c0))));
SELECT DISTINCT MIN(t1.c0) FROM vt0, t1 WHERE (UNLIKELY(DISTINCT (+ (vt0.c0)))) LIMIT 0 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM vt0, t1 WHERE (((((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN t1.c2 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE t1.c0 END)OR(vt0.c0)))AND(TRIM(NULL))))AND(LIKELIHOOD('-390039340', t1.c0)))) LIMIT 0X0;
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0)||(((((vt0.c0)OR(x'1b13fca8')))AND(v0.c2)))));
SELECT * FROM v0, vt0 WHERE (((vt0.c0)||(((((vt0.c0)OR(x'1b13fca8')))AND(v0.c2))))) LIMIT 0x0 INTERSECT SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1 IN (v0.c0))) NOTNULL)) LIMIT 0x0;
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0)||(((((vt0.c0)OR(x'1b13fca8')))AND(v0.c2)))));
SELECT * FROM v0, vt0 WHERE (((vt0.c0)||(((((vt0.c0)OR(x'1b13fca8')))AND(v0.c2))))) LIMIT 0x0 INTERSECT SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1 IN (v0.c0))) NOTNULL)) LIMIT 0x0;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))) AND ((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0))) NOT BETWEEN (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))) AND ((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0))))))AND(vt0.c0))) LIMIT 1 INTERSECT SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, '')) BETWEEN ((vt0.c0, vt0.c0)) AND (('1803558881', vt0.c0))))<((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) LIMIT 1;
SELECT * FROM v0 WHERE ((((v0.c2)<<(v0.c2)) IN ((+ (v0.c2)))));
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c2)<<(v0.c2)) IN ((+ (v0.c2)))))AND(v0.c2))) ORDER BY (((0.9854198822688387)) BETWEEN ((x'26')) AND ((v0.c0 COLLATE NOCASE)))  NULLS LAST, v0.c0 ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE) ORDER BY (((0.9854198822688387)) BETWEEN ((x'26')) AND ((v0.c0 COLLATE NOCASE)))  NULLS LAST, v0.c0 ASC  NULLS FIRST LIMIT 1;
SELECT * FROM v0 WHERE ((((v0.c2)<<(v0.c2)) IN ((+ (v0.c2)))));
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c2)<<(v0.c2)) IN ((+ (v0.c2)))))AND(v0.c2))) ORDER BY (((0.9854198822688387)) BETWEEN ((x'26')) AND ((v0.c0 COLLATE NOCASE)))  NULLS LAST, v0.c0 ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE) ORDER BY (((0.9854198822688387)) BETWEEN ((x'26')) AND ((v0.c0 COLLATE NOCASE)))  NULLS LAST, v0.c0 ASC  NULLS FIRST LIMIT 1;
SELECT * FROM v0, vt0, t1 WHERE ((- ((+ (v0.c0)))));
SELECT * FROM v0, vt0, t1 WHERE ((- ((+ (v0.c0))))) ORDER BY ((((((((((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c2)))OR((- (v0.c1)))))AND(((t1.c2)<(v0.c1)))))AND(CASE t1.c2  WHEN v0.c1 THEN v0.c0 WHEN t1.c2 THEN vt0.c1 WHEN '-409981955' THEN v0.c0 ELSE v0.c1 END)))AND(CASE WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)), ((v0.c0) NOT BETWEEN (((t1.c2)>>('0.6831539244855179'))) AND (((v0.c0) NOTNULL))) ASC INTERSECT SELECT * FROM v0, vt0, t1 WHERE (((NULL) NOTNULL) COLLATE NOCASE) ORDER BY ((((((((((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c2)))OR((- (v0.c1)))))AND(((t1.c2)<(v0.c1)))))AND(CASE t1.c2  WHEN v0.c1 THEN v0.c0 WHEN t1.c2 THEN vt0.c1 WHEN '-409981955' THEN v0.c0 ELSE v0.c1 END)))AND(CASE WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)), ((v0.c0) NOT BETWEEN (((t1.c2)>>('0.6831539244855179'))) AND (((v0.c0) NOTNULL))) ASC;
SELECT * FROM v0, vt0, t1 WHERE ((- ((+ (v0.c0)))));
SELECT * FROM v0, vt0, t1 WHERE ((- ((+ (v0.c0))))) ORDER BY ((((((((((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c2)))OR((- (v0.c1)))))AND(((t1.c2)<(v0.c1)))))AND(CASE t1.c2  WHEN v0.c1 THEN v0.c0 WHEN t1.c2 THEN vt0.c1 WHEN '-409981955' THEN v0.c0 ELSE v0.c1 END)))AND(CASE WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)), ((v0.c0) NOT BETWEEN (((t1.c2)>>('0.6831539244855179'))) AND (((v0.c0) NOTNULL))) ASC INTERSECT SELECT * FROM v0, vt0, t1 WHERE (((NULL) NOTNULL) COLLATE NOCASE) ORDER BY ((((((((((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c2)))OR((- (v0.c1)))))AND(((t1.c2)<(v0.c1)))))AND(CASE t1.c2  WHEN v0.c1 THEN v0.c0 WHEN t1.c2 THEN vt0.c1 WHEN '-409981955' THEN v0.c0 ELSE v0.c1 END)))AND(CASE WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)), ((v0.c0) NOT BETWEEN (((t1.c2)>>('0.6831539244855179'))) AND (((v0.c0) NOTNULL))) ASC;
SELECT * FROM vt0, v0 WHERE ((((((((((((((vt0.c0)OR(v0.c2)))OR(v0.c1)))OR(v0.c2)))OR(vt0.c0)))OR(v0.c1)))AND(v0.c0)) IN ())) ORDER BY rtreenode(v0.c2, v0.c2) COLLATE NOCASE ASC, ((v0.c0) BETWEEN (v0.c2 COLLATE RTRIM) AND (COALESCE(v0.c1, -871489281, vt0.c0, vt0.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((((((((((((((((vt0.c0)OR(v0.c2)))OR(v0.c1)))OR(v0.c2)))OR(vt0.c0)))OR(v0.c1)))AND(v0.c0)) IN ()))AND((((vt0.c1))>=(((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((vt0.c1))))))))) ORDER BY rtreenode(v0.c2, v0.c2) COLLATE NOCASE ASC, ((v0.c0) BETWEEN (v0.c2 COLLATE RTRIM) AND (COALESCE(v0.c1, 0Xffffffffcc0e20ff, vt0.c0, vt0.c1))) DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT * FROM vt0, v0 WHERE (COALESCE(DISTINCT ((v0.c0)OR(v0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c1)), ']\\''?-制')) ORDER BY rtreenode(v0.c2, v0.c2) COLLATE NOCASE ASC, ((v0.c0) BETWEEN (v0.c2 COLLATE RTRIM) AND (COALESCE(v0.c1, 0xffffffffcc0e20ff, vt0.c0, vt0.c1))) DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM vt0, v0 WHERE ((((((((((((((vt0.c0)OR(v0.c2)))OR(v0.c1)))OR(v0.c2)))OR(vt0.c0)))OR(v0.c1)))AND(v0.c0)) IN ())) ORDER BY rtreenode(v0.c2, v0.c2) COLLATE NOCASE ASC, ((v0.c0) BETWEEN (v0.c2 COLLATE RTRIM) AND (COALESCE(v0.c1, -871489281, vt0.c0, vt0.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((((((((((((((((vt0.c0)OR(v0.c2)))OR(v0.c1)))OR(v0.c2)))OR(vt0.c0)))OR(v0.c1)))AND(v0.c0)) IN ()))AND((((vt0.c1))>=(((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((vt0.c1))))))))) ORDER BY rtreenode(v0.c2, v0.c2) COLLATE NOCASE ASC, ((v0.c0) BETWEEN (v0.c2 COLLATE RTRIM) AND (COALESCE(v0.c1, 0Xffffffffcc0e20ff, vt0.c0, vt0.c1))) DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT * FROM vt0, v0 WHERE (COALESCE(DISTINCT ((v0.c0)OR(v0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c1)), ']\\''?-制')) ORDER BY rtreenode(v0.c2, v0.c2) COLLATE NOCASE ASC, ((v0.c0) BETWEEN (v0.c2 COLLATE RTRIM) AND (COALESCE(v0.c1, 0xffffffffcc0e20ff, vt0.c0, vt0.c1))) DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY ((CAST(vt0.c0 AS BLOB)) IS TRUE) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY ((0X775630da) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (json_array_length(vt0.c0, vt0.c1)))  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))%(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY ((0x775630da) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (json_array_length(vt0.c0, vt0.c1)))  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY ((CAST(vt0.c0 AS BLOB)) IS TRUE) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY ((0X775630da) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (json_array_length(vt0.c0, vt0.c1)))  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))%(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY ((0x775630da) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (json_array_length(vt0.c0, vt0.c1)))  NULLS LAST LIMIT 1;
SELECT ALL * FROM v0, t1, vt0 WHERE ((((v0.c2) NOTNULL) IN (((t1.c0) BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY ABS(DISTINCT ((v0.c1)>>(vt0.c1))) ASC  NULLS FIRST, ((((('4')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL) DESC, ((((vt0.c1)) BETWEEN ((v0.c1)) AND ((t1.c0))) IN (((v0.c0)LIKE(vt0.c1)))) DESC, vt0.c1 ASC;
SELECT * FROM v0, t1, vt0 WHERE ((((((v0.c2) NOTNULL) IN (((t1.c0) BETWEEN (v0.c1) AND (v0.c1)))))AND(((((v0.c0)OR(v0.c2 COLLATE NOCASE)))OR(v0.c2))))) ORDER BY ABS(DISTINCT ((v0.c1)>>(vt0.c1))) ASC  NULLS FIRST, ((((('4')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL) DESC, ((((vt0.c1)) BETWEEN ((v0.c1)) AND ((t1.c0))) IN (((v0.c0)LIKE(vt0.c1)))) DESC, vt0.c1 ASC LIMIT 0 INTERSECT SELECT ALL * FROM v0, t1, vt0 WHERE (CASE ((v0.c2) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN (((v0.c2, v0.c2))>=((t1.c0, x'27c9'))) THEN UPPER(DISTINCT t1.c2) ELSE CASE t1.c2  WHEN t1.c0 THEN t1.c2 ELSE v0.c0 END END) ORDER BY ABS(DISTINCT ((v0.c1)>>(vt0.c1))) ASC  NULLS FIRST, ((((('4')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL) DESC, ((((vt0.c1)) BETWEEN ((v0.c1)) AND ((t1.c0))) IN (((v0.c0)LIKE(vt0.c1)))) DESC, vt0.c1 ASC LIMIT 0x0;
SELECT ALL * FROM v0, t1, vt0 WHERE ((((v0.c2) NOTNULL) IN (((t1.c0) BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY ABS(DISTINCT ((v0.c1)>>(vt0.c1))) ASC  NULLS FIRST, ((((('4')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL) DESC, ((((vt0.c1)) BETWEEN ((v0.c1)) AND ((t1.c0))) IN (((v0.c0)LIKE(vt0.c1)))) DESC, vt0.c1 ASC;
SELECT * FROM v0, t1, vt0 WHERE ((((((v0.c2) NOTNULL) IN (((t1.c0) BETWEEN (v0.c1) AND (v0.c1)))))AND(((((v0.c0)OR(v0.c2 COLLATE NOCASE)))OR(v0.c2))))) ORDER BY ABS(DISTINCT ((v0.c1)>>(vt0.c1))) ASC  NULLS FIRST, ((((('4')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL) DESC, ((((vt0.c1)) BETWEEN ((v0.c1)) AND ((t1.c0))) IN (((v0.c0)LIKE(vt0.c1)))) DESC, vt0.c1 ASC LIMIT 0 INTERSECT SELECT ALL * FROM v0, t1, vt0 WHERE (CASE ((v0.c2) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN (((v0.c2, v0.c2))>=((t1.c0, x'27c9'))) THEN UPPER(DISTINCT t1.c2) ELSE CASE t1.c2  WHEN t1.c0 THEN t1.c2 ELSE v0.c0 END END) ORDER BY ABS(DISTINCT ((v0.c1)>>(vt0.c1))) ASC  NULLS FIRST, ((((('4')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL) DESC, ((((vt0.c1)) BETWEEN ((v0.c1)) AND ((t1.c0))) IN (((v0.c0)LIKE(vt0.c1)))) DESC, vt0.c1 ASC LIMIT 0x0;
SELECT ALL MIN(t1.c0) FROM v0 CROSS JOIN vt0 ON ((((CASE vt0.c0  WHEN t1.c2 THEN x'4c' WHEN v0.c0 THEN t1.c1 WHEN v0.c1 THEN t1.c1 WHEN vt0.c0 THEN v0.c1 WHEN vt0.c1 THEN t1.c1 ELSE vt0.c1 END)AND((((vt0.c0)) BETWEEN ((t1.c0)) AND ((vt0.c1))))))AND(t1.c1)) NATURAL JOIN t1 WHERE ((- (SQLITE_VERSION()))) ORDER BY ((((')x')AND(vt0.c0)))|(CASE vt0.c1  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN vt0.c1 THEN vt0.c0 END));
SELECT DISTINCT MIN(t1.c0) FROM v0 CROSS JOIN vt0 ON ((((CASE vt0.c0  WHEN t1.c2 THEN x'4c' WHEN v0.c0 THEN t1.c1 WHEN v0.c1 THEN t1.c1 WHEN vt0.c0 THEN v0.c1 WHEN vt0.c1 THEN t1.c1 ELSE vt0.c1 END)AND((((vt0.c0)) BETWEEN ((t1.c0)) AND ((vt0.c1))))))AND(t1.c1)) NATURAL JOIN t1 WHERE ((- (SQLITE_VERSION()))) ORDER BY (((v0.c2, v0.c2, -1501075272)) NOT BETWEEN ((((v0.c1) NOT NULL), (((v0.c0, v0.c2)) NOT BETWEEN ((t1.c2, vt0.c1)) AND ((vt0.c0, v0.c0))), ((vt0.c0) NOT NULL))) AND ((json_extract(t1.c0, t1.c0, t1.c0), (- (vt0.c0)), vt0.c0 COLLATE BINARY))), (+ ((v0.c2 IN ('')))) ASC INTERSECT SELECT DISTINCT MIN(t1.c0) FROM v0 CROSS JOIN vt0 ON ((((CASE vt0.c0  WHEN t1.c2 THEN x'4c' WHEN v0.c0 THEN t1.c1 WHEN v0.c1 THEN t1.c1 WHEN vt0.c0 THEN v0.c1 WHEN vt0.c1 THEN t1.c1 ELSE vt0.c1 END)AND((((vt0.c0)) BETWEEN ((t1.c0)) AND ((vt0.c1))))))AND(t1.c1)) NATURAL JOIN t1 WHERE (CAST(CAST('0.4135398949241078' AS BLOB) AS NUMERIC)) ORDER BY (((v0.c2, v0.c2, -1501075272)) NOT BETWEEN ((((v0.c1) NOT NULL), (((v0.c0, v0.c2)) NOT BETWEEN ((t1.c2, vt0.c1)) AND ((vt0.c0, v0.c0))), ((vt0.c0) NOT NULL))) AND ((json_extract(t1.c0, t1.c0, t1.c0), (- (vt0.c0)), vt0.c0 COLLATE BINARY))), (+ ((v0.c2 IN ('')))) ASC;
SELECT ALL MAX(vt0.c0) FROM vt0 CROSS JOIN t1 ON ((((t1.c1)>>(t1.c1))) BETWEEN (((vt0.c1) IS TRUE)) AND (((vt0.c1)<=(t1.c0)))) WHERE (((vt0.c1)IS(CAST(vt0.c0 AS INTEGER))));
SELECT DISTINCT MAX(vt0.c0) FROM vt0 CROSS JOIN t1 ON ((((t1.c1)>>(t1.c1))) BETWEEN (((vt0.c1) IS TRUE)) AND (((vt0.c1)<=(t1.c0)))) WHERE (((((vt0.c1)IS(CAST(vt0.c0 AS INTEGER))))AND(CAST(((t1.c0) IS TRUE) AS REAL))));
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (0.9419589412939973);
SELECT DISTINCT COUNT(*) FROM vt0, t1, v0 NOT INDEXED WHERE (0.9419589412939973) ORDER BY ((json_insert(t1.c0, t1.c1, v0.c2, v0.c2)) BETWEEN (((vt0.c0) BETWEEN (t1.c2) AND (vt0.c1))) AND (CASE WHEN vt0.c0 THEN t1.c2 ELSE t1.c0 END)) ASC, (((v0.c1 IN ()))IS(((0xffffffffbbf411ff) IS FALSE)))  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, t1, v0 WHERE (CASE WHEN v0.c1 THEN ((v0.c1) NOT BETWEEN (x'7f46') AND (v0.c1)) ELSE ((v0.c2) ISNULL) END) ORDER BY ((json_insert(t1.c0, t1.c1, v0.c2, v0.c2)) BETWEEN (((vt0.c0) BETWEEN (t1.c2) AND (vt0.c1))) AND (CASE WHEN vt0.c0 THEN t1.c2 ELSE t1.c0 END)) ASC, (((v0.c1 IN ()))IS(((0xffffffffbbf411ff) IS FALSE)))  NULLS FIRST LIMIT 2;
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))<>(0.026515464598603544))) ORDER BY (('Z')<=(CAST(t1.c0 AS INTEGER)));
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))>(0.026515464598603544))) ORDER BY (('Z')<=(CAST(t1.c0 AS INTEGER)));
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))<>(0.026515464598603544))) ORDER BY (('Z')<=(CAST(t1.c0 AS INTEGER)));
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))>(0.026515464598603544))) ORDER BY (('Z')<=(CAST(t1.c0 AS INTEGER)));
SELECT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END) ISNULL)) ORDER BY (((t1.c1, t1.c2))>((t1.c2, t1.c0))) COLLATE RTRIM ASC, t1.c0  NULLS FIRST, 4.1028994E7, CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN '''' WHEN (NOT (t1.c0)) THEN (((t1.c0, t1.c2, t1.c2)) BETWEEN ((0.8109246195122014, t1.c0, NULL)) AND ((t1.c2, t1.c0, t1.c0))) WHEN t1.c1 COLLATE NOCASE THEN (NOT (t1.c1)) END  NULLS LAST, ((t1.c2) BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE ASC;
SELECT * FROM t1 WHERE (((((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END) ISNULL))AND((('1576123895') NOT BETWEEN ((t1.c1 IN ())) AND ('**>FrU' COLLATE NOCASE))))) ORDER BY (((t1.c2))=((t1.c1))) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END) ISNULL)) ORDER BY (((t1.c1, t1.c2))>((t1.c2, t1.c0))) COLLATE RTRIM ASC, t1.c0  NULLS FIRST, 4.1028994E7, CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) THEN '''' WHEN (NOT (t1.c0)) THEN (((t1.c0, t1.c2, t1.c2)) BETWEEN ((0.8109246195122014, t1.c0, NULL)) AND ((t1.c2, t1.c0, t1.c0))) WHEN t1.c1 COLLATE NOCASE THEN (NOT (t1.c1)) END  NULLS LAST, ((t1.c2) BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE ASC;
SELECT * FROM t1 WHERE (((((CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END) ISNULL))AND((('1576123895') NOT BETWEEN ((t1.c1 IN ())) AND ('**>FrU' COLLATE NOCASE))))) ORDER BY (((t1.c2))=((t1.c1))) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM t1, v0, vt0 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND ('-1386814678'))) BETWEEN (NULL) AND (((vt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))))) ORDER BY 0.17366808409776624  NULLS LAST, CASE WHEN ((-1295700729)&('-291337799')) THEN ((((((v0.c0)OR(vt0.c1)))AND(v0.c0)))AND(t1.c2)) WHEN x'' THEN CAST(x'df' AS BLOB) ELSE ((v0.c1)>(t1.c2)) END ASC  NULLS LAST;
SELECT DISTINCT * FROM t1, v0 NOT INDEXED, vt0 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND ('-1386814678'))) BETWEEN (NULL) AND (((vt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))))) ORDER BY 0.17366808409776624  NULLS LAST, CASE WHEN ((0xffffffffb2c52d07)&('-291337799')) THEN ((((((v0.c0)OR(vt0.c1)))AND(v0.c0)))AND(t1.c2)) WHEN x'' THEN CAST(x'df' AS BLOB) ELSE ((v0.c1)>(t1.c2)) END ASC  NULLS LAST;
SELECT * FROM t1, v0, vt0 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND ('-1386814678'))) BETWEEN (NULL) AND (((vt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))))) ORDER BY 0.17366808409776624  NULLS LAST, CASE WHEN ((-1295700729)&('-291337799')) THEN ((((((v0.c0)OR(vt0.c1)))AND(v0.c0)))AND(t1.c2)) WHEN x'' THEN CAST(x'df' AS BLOB) ELSE ((v0.c1)>(t1.c2)) END ASC  NULLS LAST;
SELECT DISTINCT * FROM t1, v0 NOT INDEXED, vt0 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND ('-1386814678'))) BETWEEN (NULL) AND (((vt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))))) ORDER BY 0.17366808409776624  NULLS LAST, CASE WHEN ((0xffffffffb2c52d07)&('-291337799')) THEN ((((((v0.c0)OR(vt0.c1)))AND(v0.c0)))AND(t1.c2)) WHEN x'' THEN CAST(x'df' AS BLOB) ELSE ((v0.c1)>(t1.c2)) END ASC  NULLS LAST;
SELECT ALL * FROM v0, vt0, t1 WHERE (CAST(((v0.c0) NOTNULL) AS BLOB));
SELECT ALL * FROM v0, vt0, t1 WHERE (((CAST(((v0.c0) NOTNULL) AS BLOB))AND(CASE (vt0.c1 IN (vt0.c0))  WHEN ((t1.c1)>=(v0.c2)) THEN CASE x''  WHEN x'86' THEN t1.c2 ELSE v0.c0 END WHEN ((v0.c2) NOTNULL) THEN CAST(vt0.c0 AS INTEGER) ELSE SQLITE_COMPILEOPTION_USED(vt0.c1) END))) ORDER BY (((CASE WHEN v0.c2 THEN x'' WHEN t1.c1 THEN vt0.c1 ELSE v0.c1 END))=(((vt0.c1 IN (t1.c2))))) DESC, vt0.c0 INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE ((~ (CAST(v0.c2 AS NUMERIC)))) ORDER BY (((CASE WHEN v0.c2 THEN x'' WHEN t1.c1 THEN vt0.c1 ELSE v0.c1 END))=(((vt0.c1 IN (t1.c2))))) DESC, vt0.c0;
SELECT ALL * FROM v0, vt0, t1 WHERE (CAST(((v0.c0) NOTNULL) AS BLOB));
SELECT ALL * FROM v0, vt0, t1 WHERE (((CAST(((v0.c0) NOTNULL) AS BLOB))AND(CASE (vt0.c1 IN (vt0.c0))  WHEN ((t1.c1)>=(v0.c2)) THEN CASE x''  WHEN x'86' THEN t1.c2 ELSE v0.c0 END WHEN ((v0.c2) NOTNULL) THEN CAST(vt0.c0 AS INTEGER) ELSE SQLITE_COMPILEOPTION_USED(vt0.c1) END))) ORDER BY (((CASE WHEN v0.c2 THEN x'' WHEN t1.c1 THEN vt0.c1 ELSE v0.c1 END))=(((vt0.c1 IN (t1.c2))))) DESC, vt0.c0 INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE ((~ (CAST(v0.c2 AS NUMERIC)))) ORDER BY (((CASE WHEN v0.c2 THEN x'' WHEN t1.c1 THEN vt0.c1 ELSE v0.c1 END))=(((vt0.c1 IN (t1.c2))))) DESC, vt0.c0;
SELECT ALL * FROM v0, vt0, t1 WHERE (((CASE WHEN t1.c0 THEN v0.c1 WHEN t1.c1 THEN t1.c2 WHEN vt0.c1 THEN NULL WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c0 END) BETWEEN (0.8354985305652898) AND ('724060006'))) ORDER BY t1.c1, ((LIKELIHOOD(t1.c1, '-602905820')) NOT NULL);
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((CASE WHEN t1.c0 THEN v0.c1 WHEN t1.c1 THEN t1.c2 WHEN vt0.c1 THEN NULL WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c0 END) BETWEEN (0.8354985305652898) AND ('724060006')))AND(CASE WHEN (v0.c2 IN ()) THEN CAST(t1.c1 AS REAL) WHEN (((v0.c0)) BETWEEN ((t1.c0)) AND ((x''))) THEN t1.c2 COLLATE NOCASE WHEN (((vt0.c0, vt0.c0))<>((t1.c1, v0.c0))) THEN (NOT (t1.c2)) WHEN json_array(vt0.c1, v0.c1, v0.c1) THEN CAST(t1.c1 AS INTEGER) ELSE ((vt0.c1)%(vt0.c0)) END))) ORDER BY t1.c1, ((LIKELIHOOD(t1.c1, '-602905820')) NOT NULL) LIMIT 0x1;
SELECT ALL * FROM v0, vt0, t1 WHERE (((CASE WHEN t1.c0 THEN v0.c1 WHEN t1.c1 THEN t1.c2 WHEN vt0.c1 THEN NULL WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c0 END) BETWEEN (0.8354985305652898) AND ('724060006'))) ORDER BY t1.c1, ((LIKELIHOOD(t1.c1, '-602905820')) NOT NULL);
SELECT MAX(t1.c0) FROM t1, v0 WHERE (CASE WHEN (('-999224389')>=(v0.c0)) THEN -2125923239 WHEN (- (t1.c1)) THEN CASE WHEN v0.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c0 WHEN '53814720' THEN v0.c0 ELSE t1.c1 END END) ORDER BY ((((((((((((t1.c1) IS TRUE))AND(((v0.c1) IS FALSE))))OR(((v0.c1) ISNULL))))AND(CAST(v0.c0 AS INTEGER))))OR(t1.c1)))AND((v0.c0 IN ()))) DESC, CAST(v0.c2 AS BLOB), ((((v0.c1)+(v0.c0)))>(CASE t1.c2  WHEN t1.c2 THEN v0.c0 WHEN t1.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END))  NULLS FIRST;
SELECT ALL MAX(t1.c0) FROM t1, v0 WHERE (CASE WHEN (('-999224389')>=(v0.c0)) THEN 0xffffffff8148fc59 WHEN (- (t1.c1)) THEN CASE WHEN v0.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c0 WHEN '53814720' THEN v0.c0 ELSE t1.c1 END END) ORDER BY (('''}s+')IS NOT(((t1.c2)%('#')))) DESC, (((v0.c1 IN ())) NOT BETWEEN (CAST(v0.c2 AS NUMERIC)) AND ((((v0.c2)) BETWEEN ((t1.c2)) AND ((t1.c0))))) ASC  NULLS LAST, ((CASE v0.c2  WHEN t1.c2 THEN t1.c2 WHEN v0.c2 THEN t1.c0 WHEN v0.c0 THEN t1.c2 ELSE '0.0' END)OR(CAST(t1.c0 AS TEXT))) DESC  NULLS FIRST INTERSECT SELECT MAX(t1.c0) FROM t1, v0 WHERE (LIKELY(v0.c2) COLLATE RTRIM) ORDER BY (('''}s+')IS NOT(((t1.c2)%('#')))) DESC, (((v0.c1 IN ())) NOT BETWEEN (CAST(v0.c2 AS NUMERIC)) AND ((((v0.c2)) BETWEEN ((t1.c2)) AND ((t1.c0))))) ASC  NULLS LAST, ((CASE v0.c2  WHEN t1.c2 THEN t1.c2 WHEN v0.c2 THEN t1.c0 WHEN v0.c0 THEN t1.c2 ELSE '0.0' END)OR(CAST(t1.c0 AS TEXT))) DESC  NULLS FIRST;
SELECT ALL MIN(t1.c2) FROM v0, vt0, t1 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(t1.c1)))|(((t1.c0) NOT NULL))));
SELECT DISTINCT MIN(t1.c2) FROM v0, vt0, t1 WHERE (((((((((vt0.c0)OR(vt0.c1)))AND(t1.c1)))|(((t1.c0) NOT NULL))))AND(((HEX(vt0.c1))AND(((v0.c0)<=(v0.c2)))))));
SELECT COUNT(*) FROM t1, v0 WHERE (JULIANDAY(highlight(v0.c0, v0.c0, v0.c2, v0.c1), (~ (v0.c0)), CASE v0.c2  WHEN v0.c2 THEN t1.c0 WHEN v0.c0 THEN v0.c1 WHEN NULL THEN t1.c0 END)) ORDER BY (~ (t1.c2 COLLATE BINARY));
SELECT DISTINCT COUNT(*) FROM t1, v0 WHERE (JULIANDAY(highlight(v0.c0, v0.c0, v0.c2, v0.c1), (~ (v0.c0)), CASE v0.c2  WHEN v0.c2 THEN t1.c0 WHEN v0.c0 THEN v0.c1 WHEN NULL THEN t1.c0 END)) ORDER BY (NOT (((((((v0.c2)AND(t1.c2)))AND(v0.c0)))AND(v0.c2)))) ASC LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1, v0 WHERE (((v0.c2)LIKE(CAST(t1.c1 AS TEXT)))) ORDER BY (NOT (((((((v0.c2)AND(t1.c2)))AND(v0.c0)))AND(v0.c2)))) ASC LIMIT 0;
SELECT ALL * FROM t1, vt0 CROSS JOIN v0 ON (+ (CASE WHEN v0.c0 THEN t1.c2 WHEN vt0.c1 THEN v0.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN v0.c0 END)) WHERE ((((((v0.c0)IS NOT(v0.c0))))>=((((((vt0.c0)AND(x'')))AND(t1.c1)))))) ORDER BY ((((((((((v0.c2 COLLATE RTRIM)OR(CAST(vt0.c1 AS NUMERIC))))OR(((vt0.c1) NOTNULL))))OR(UPPER(v0.c1))))OR((vt0.c1 IN ()))))AND((((v0.c2, t1.c2)) NOT BETWEEN ((v0.c0, t1.c2)) AND ((t1.c1, t1.c0))))), (((((('1891954482')||(t1.c0)))OR((- (vt0.c1)))))OR(((v0.c1) NOTNULL))) ASC  NULLS LAST;
SELECT * FROM t1, vt0 CROSS JOIN v0 ON (+ (CASE WHEN v0.c0 THEN t1.c2 WHEN vt0.c1 THEN v0.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN v0.c0 END)) WHERE ((((((((v0.c0)IS NOT(v0.c0))))==((((((vt0.c0)AND(x'')))AND(t1.c1))))))AND(v0.c2))) ORDER BY (((((((vt0.c0))==((t1.c1))))AND((+ (vt0.c0)))))AND(((((((t1.c2)AND('+{ꉹ')))AND(vt0.c0)))OR(v0.c1)))) DESC, CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c2)) AS BLOB)  NULLS LAST, ((((((((CAST(t1.c2 AS BLOB))AND(CAST(t1.c0 AS INTEGER))))AND((v0.c1 IN (v0.c2)))))AND(IFNULL(vt0.c0, t1.c2))))OR(((vt0.c1) BETWEEN (x'f2c3') AND (t1.c1)))) ASC LIMIT 0;
SELECT ALL * FROM t1, vt0 CROSS JOIN v0 ON (+ (CASE WHEN v0.c0 THEN t1.c2 WHEN vt0.c1 THEN v0.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN v0.c0 END)) WHERE ((((((v0.c0)IS NOT(v0.c0))))>=((((((vt0.c0)AND(x'')))AND(t1.c1)))))) ORDER BY ((((((((((v0.c2 COLLATE RTRIM)OR(CAST(vt0.c1 AS NUMERIC))))OR(((vt0.c1) NOTNULL))))OR(UPPER(v0.c1))))OR((vt0.c1 IN ()))))AND((((v0.c2, t1.c2)) NOT BETWEEN ((v0.c0, t1.c2)) AND ((t1.c1, t1.c0))))), (((((('1891954482')||(t1.c0)))OR((- (vt0.c1)))))OR(((v0.c1) NOTNULL))) ASC  NULLS LAST;
SELECT * FROM t1, vt0 CROSS JOIN v0 ON (+ (CASE WHEN v0.c0 THEN t1.c2 WHEN vt0.c1 THEN v0.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN v0.c0 END)) WHERE ((((((((v0.c0)IS NOT(v0.c0))))==((((((vt0.c0)AND(x'')))AND(t1.c1))))))AND(v0.c2))) ORDER BY (((((((vt0.c0))==((t1.c1))))AND((+ (vt0.c0)))))AND(((((((t1.c2)AND('+{ꉹ')))AND(vt0.c0)))OR(v0.c1)))) DESC, CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c2)) AS BLOB)  NULLS LAST, ((((((((CAST(t1.c2 AS BLOB))AND(CAST(t1.c0 AS INTEGER))))AND((v0.c1 IN (v0.c2)))))AND(IFNULL(vt0.c0, t1.c2))))OR(((vt0.c1) BETWEEN (x'f2c3') AND (t1.c1)))) ASC LIMIT 0;
SELECT MIN(t1.c0) FROM vt0, t1 WHERE (((((CASE WHEN '-128168833' THEN vt0.c0 END)OR(vt0.c1 COLLATE BINARY)))AND(t1.c0 COLLATE RTRIM))) ORDER BY (((t1.c0, ((x'')GLOB(NULL))))<>((((t1.c2)<(vt0.c0)), CASE WHEN vt0.c1 THEN t1.c1 ELSE t1.c2 END)))  NULLS LAST, (- (vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM vt0, t1 WHERE (((((((CASE WHEN '-128168833' THEN vt0.c0 END)OR(vt0.c1 COLLATE BINARY)))AND(t1.c0 COLLATE RTRIM)))AND((~ (((((((t1.c2)OR(t1.c0)))AND(t1.c1)))AND(vt0.c1))))))) ORDER BY (('*sWdgk|')LIKE(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(t1.c0)))AND(t1.c0))))  NULLS FIRST, t1.c1  NULLS LAST, (- (((vt0.c1)>>(t1.c0))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c2))>=((v0.c0, v0.c0)))) IS TRUE));
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0, v0.c2))>((v0.c0, v0.c0)))) IS TRUE)) ORDER BY (((v0.c1, v0.c2)) NOT BETWEEN ((((v0.c0) NOTNULL), ((v0.c1) IS FALSE))) AND ((((((v0.c0)OR(v0.c1)))OR(v0.c0)), (NOT (v0.c2))))) LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM v0 WHERE ((+ ((((v0.c2, v0.c2, v0.c0, v0.c1, v0.c0))<((v0.c1, v0.c1, 0.8082478963020788, -321780175, v0.c2)))))) ORDER BY (((v0.c1, v0.c2)) NOT BETWEEN ((((v0.c0) NOTNULL), ((v0.c1) IS FALSE))) AND ((((((v0.c0)OR(v0.c1)))OR(v0.c0)), (NOT (v0.c2))))) LIMIT 0X2;
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c2))>=((v0.c0, v0.c0)))) IS TRUE));
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0, v0.c2))>((v0.c0, v0.c0)))) IS TRUE)) ORDER BY (((v0.c1, v0.c2)) NOT BETWEEN ((((v0.c0) NOTNULL), ((v0.c1) IS FALSE))) AND ((((((v0.c0)OR(v0.c1)))OR(v0.c0)), (NOT (v0.c2))))) LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM v0 WHERE ((+ ((((v0.c2, v0.c2, v0.c0, v0.c1, v0.c0))<((v0.c1, v0.c1, 0.8082478963020788, -321780175, v0.c2)))))) ORDER BY (((v0.c1, v0.c2)) NOT BETWEEN ((((v0.c0) NOTNULL), ((v0.c1) IS FALSE))) AND ((((((v0.c0)OR(v0.c1)))OR(v0.c0)), (NOT (v0.c2))))) LIMIT 0X2;
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON ((CAST(vt0.c0 AS REAL)) IS FALSE) WHERE (((CAST(t1.c1 AS NUMERIC))*(TRIM(t1.c1, vt0.c1)))) ORDER BY CASE WHEN ((vt0.c0)&(vt0.c1)) THEN (NOT (vt0.c0)) ELSE ((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0)) END ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0 CROSS JOIN t1 ON ((CAST(vt0.c0 AS REAL)) IS FALSE) WHERE (((CAST(t1.c1 AS NUMERIC))*(TRIM(t1.c1, vt0.c1)))) ORDER BY CASE WHEN ((vt0.c0)&(vt0.c1)) THEN (NOT (vt0.c0)) ELSE ((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0)) END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (json_array_length(((vt0.c1)&(vt0.c1)), CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END));
SELECT DISTINCT * FROM vt0 WHERE (json_array_length(((vt0.c1)&(vt0.c1)), CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)), vt0.c1)) AND ((COALESCE(DISTINCT vt0.c0, vt0.c0, '316'), vt0.c0 COLLATE RTRIM, ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (json_array_length(((vt0.c1)&(vt0.c1)), CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END));
SELECT MIN(t1.c2) FROM t1, v0 WHERE (((CAST(v0.c0 AS NUMERIC))||(CAST(v0.c0 AS NUMERIC)))) ORDER BY CASE ((t1.c1) IS FALSE)  WHEN ((v0.c1)<(t1.c0)) THEN ((v0.c2)==(v0.c1)) ELSE ((((((((t1.c1)AND(v0.c0)))OR(t1.c1)))OR(v0.c0)))AND(v0.c0)) END  NULLS FIRST;
SELECT DISTINCT MIN(t1.c2) FROM t1, v0 WHERE (((((CAST(v0.c0 AS NUMERIC))||(CAST(v0.c0 AS NUMERIC))))AND((((+ (0.4403047577460034))) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (LOWER(t1.c1)))))) ORDER BY CASE ((t1.c1) IS FALSE)  WHEN ((v0.c1)<(t1.c0)) THEN ((v0.c2)=(v0.c1)) ELSE ((((((((t1.c1)AND(v0.c0)))OR(t1.c1)))OR(v0.c0)))AND(v0.c0)) END  NULLS FIRST;
SELECT ALL * FROM t1, vt0, v0 WHERE (TOTAL_CHANGES()) ORDER BY t1.c0  NULLS LAST, ((((v0.c2)<=(v0.c2))) NOT NULL) ASC;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((TOTAL_CHANGES())AND(-1623982878))) ORDER BY t1.c0  NULLS LAST, ((((v0.c2)<=(v0.c2))) NOT NULL) ASC;
SELECT ALL * FROM t1, vt0, v0 WHERE (TOTAL_CHANGES()) ORDER BY t1.c0  NULLS LAST, ((((v0.c2)<=(v0.c2))) NOT NULL) ASC;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((TOTAL_CHANGES())AND(-1623982878))) ORDER BY t1.c0  NULLS LAST, ((((v0.c2)<=(v0.c2))) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))&((((vt0.c1, vt0.c0))>((vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c1 COLLATE RTRIM)<=(IFNULL(DISTINCT vt0.c0, vt0.c1))) DESC  NULLS LAST, (CAST(vt0.c0 AS NUMERIC) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS REAL))&((((vt0.c1, vt0.c0))>((vt0.c0, vt0.c0))))))AND((~ (vt0.c1 COLLATE RTRIM))))) ORDER BY ((vt0.c1 COLLATE RTRIM)<=(IFNULL(DISTINCT vt0.c0, vt0.c1))) DESC  NULLS LAST, (CAST(vt0.c0 AS NUMERIC) IN ()) INTERSECT SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))))<>(((((('943762790')OR(vt0.c0)))OR(0.5138819659118746)))))) ORDER BY ((vt0.c1 COLLATE RTRIM)<=(IFNULL(DISTINCT vt0.c0, vt0.c1))) DESC  NULLS LAST, (CAST(vt0.c0 AS NUMERIC) IN ());
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((CASE NULL  WHEN t1.c2 THEN t1.c1 WHEN vt0.c1 THEN t1.c2 WHEN t1.c0 THEN t1.c2 END IN (0.2121778017281012, ((vt0.c0)<(t1.c0)), CASE WHEN t1.c2 THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 ELSE t1.c1 END))) ORDER BY (((((vt0.c0, t1.c2)) NOT BETWEEN ((vt0.c0, t1.c2)) AND ((t1.c2, vt0.c1))))*(((((t1.c2)AND(t1.c0)))OR(t1.c1)))) DESC  NULLS FIRST, CASE WHEN ((t1.c2)<<(t1.c0)) THEN CAST(t1.c0 AS REAL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) THEN vt0.c0 COLLATE NOCASE END, CAST(((t1.c1)%(vt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((CASE NULL  WHEN t1.c2 THEN t1.c1 WHEN vt0.c1 THEN t1.c2 WHEN t1.c0 THEN t1.c2 END IN (0.2121778017281012))) ORDER BY (((((vt0.c0, t1.c2)) NOT BETWEEN ((vt0.c0, t1.c2)) AND ((t1.c2, vt0.c1))))*(((((t1.c2)AND(t1.c0)))OR(t1.c1)))) DESC  NULLS FIRST, CASE WHEN ((t1.c2)<<(t1.c0)) THEN CAST(t1.c0 AS REAL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) THEN vt0.c0 COLLATE NOCASE END, CAST(((t1.c1)%(vt0.c1)) AS NUMERIC)  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((vt0.c1)>>(t1.c1)))AND(COALESCE(DISTINCT vt0.c0, vt0.c0, t1.c1, t1.c1)))) ORDER BY (((((vt0.c0, t1.c2)) NOT BETWEEN ((vt0.c0, t1.c2)) AND ((t1.c2, vt0.c1))))*(((((t1.c2)AND(t1.c0)))OR(t1.c1)))) DESC  NULLS FIRST, CASE WHEN ((t1.c2)<<(t1.c0)) THEN CAST(t1.c0 AS REAL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) THEN vt0.c0 COLLATE NOCASE END, CAST(((t1.c1)%(vt0.c1)) AS NUMERIC)  NULLS FIRST LIMIT 0x1;
SELECT MIN(v0.c2) FROM vt0, v0, t1 WHERE (COALESCE((t1.c1 IN (v0.c2)), ((t1.c0) ISNULL), (vt0.c1 IN (v0.c0)), (t1.c2 IN ()), ((t1.c1) ISNULL)));
SELECT DISTINCT MIN(v0.c2) FROM vt0, v0, t1 WHERE (((COALESCE((t1.c1 IN (v0.c2)), ((t1.c0) ISNULL), (vt0.c1 IN (v0.c0)), (t1.c2 IN ()), ((t1.c1) ISNULL)))AND(((-104687820)>(CASE WHEN t1.c1 THEN v0.c0 WHEN NULL THEN t1.c2 WHEN v0.c1 THEN t1.c2 END))))) ORDER BY vt0.c0 ASC  NULLS LAST, DATETIME(((t1.c2) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c2) IS TRUE), CASE v0.c2  WHEN t1.c2 THEN '-841927177' WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END)  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MIN(v0.c2) FROM vt0, v0, t1 WHERE (((LAST_INSERT_ROWID()) NOT NULL)) ORDER BY vt0.c0 ASC  NULLS LAST, DATETIME(((t1.c2) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c2) IS TRUE), CASE v0.c2  WHEN t1.c2 THEN '-841927177' WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END)  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (0.49720271263869475, t1.c2))) NOT NULL)) ORDER BY CASE (t1.c0 IN (t1.c2))  WHEN (NOT (t1.c0)) THEN CAST(t1.c1 AS REAL) END ASC, (((t1.c0 IN ('#|-')))*((('-1859906668') ISNULL)));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0 IN (0.49720271263869475))) NOT NULL)) ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (t1.c2)))GLOB(CASE WHEN t1.c0 THEN t1.c0 END)), TRIM('414666396', ((NULL) ISNULL)) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (DATETIME(((t1.c0)||(NULL)), CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c2 WHEN 0Xffffffffadde709c THEN 'z' ELSE t1.c1 END, ROUND(t1.c1, t1.c0))) ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (t1.c2)))GLOB(CASE WHEN t1.c0 THEN t1.c0 END)), TRIM('414666396', ((NULL) ISNULL)) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (0.49720271263869475, t1.c2))) NOT NULL)) ORDER BY CASE (t1.c0 IN (t1.c2))  WHEN (NOT (t1.c0)) THEN CAST(t1.c1 AS REAL) END ASC, (((t1.c0 IN ('#|-')))*((('-1859906668') ISNULL)));
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0 IN (0.49720271263869475))) NOT NULL)) ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (t1.c2)))GLOB(CASE WHEN t1.c0 THEN t1.c0 END)), TRIM('414666396', ((NULL) ISNULL)) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (DATETIME(((t1.c0)||(NULL)), CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c2 WHEN 0Xffffffffadde709c THEN 'z' ELSE t1.c1 END, ROUND(t1.c1, t1.c0))) ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (t1.c2)))GLOB(CASE WHEN t1.c0 THEN t1.c0 END)), TRIM('414666396', ((NULL) ISNULL)) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c1);
SELECT DISTINCT COUNT(*) FROM v0 WHERE (((v0.c1)AND(CAST(CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN '469225696' END AS REAL)))) ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2))) AS INTEGER)  NULLS FIRST;
SELECT ALL MIN(v0.c0) FROM t1, v0 WHERE (((t1.c0 IN (t1.c2)) IN ('-1399201276'))) ORDER BY IFNULL(DISTINCT CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN v0.c2 END, (t1.c0 IN (v0.c2))) ASC  NULLS LAST, ((((((((v0.c2) NOT BETWEEN (v0.c1) AND (t1.c0)))AND(0.026515464598603544)))AND(NULL)))OR(((t1.c2)IS(t1.c0)))) ASC, ((v0.c0 COLLATE RTRIM)OR(((((((t1.c2)OR(v0.c1)))AND('-1825449316')))AND(t1.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(v0.c0) FROM t1, v0 WHERE (((((t1.c0 IN (t1.c2)) IN ('-1399201276')))AND((+ (((v0.c2) NOTNULL)))))) ORDER BY IFNULL(DISTINCT CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN v0.c2 END, (t1.c0 IN (v0.c2))) ASC  NULLS LAST, ((((((((v0.c2) NOT BETWEEN (v0.c1) AND (t1.c0)))AND(0.026515464598603544)))AND(NULL)))OR(((t1.c2)IS(t1.c0)))) ASC, ((v0.c0 COLLATE RTRIM)OR(((((((t1.c2)OR(v0.c1)))AND('-1825449316')))AND(t1.c0)))) ASC  NULLS FIRST LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(v0.c0) FROM t1, v0 WHERE (CASE WHEN ((t1.c0) NOTNULL) THEN ((t1.c1)GLOB(t1.c0)) WHEN CASE t1.c2  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN 0.10256227382878702 END THEN CAST(t1.c1 AS TEXT) WHEN ((((((((t1.c0)OR(v0.c0)))OR(t1.c2)))AND(t1.c0)))AND(t1.c2)) THEN v0.c2 COLLATE BINARY ELSE t1.c1 END) ORDER BY IFNULL(DISTINCT CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN v0.c2 END, (t1.c0 IN (v0.c2))) ASC  NULLS LAST, ((((((((v0.c2) NOT BETWEEN (v0.c1) AND (t1.c0)))AND(0.026515464598603544)))AND(NULL)))OR(((t1.c2)IS(t1.c0)))) ASC, ((v0.c0 COLLATE RTRIM)OR(((((((t1.c2)OR(v0.c1)))AND('-1825449316')))AND(t1.c0)))) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM vt0, t1 WHERE (((0.9843708606315547)IS('-1e500'))) ORDER BY (t1.c0 IN (CAST(vt0.c1 AS TEXT), 1.328373436E9)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (((0.9843708606315547)IS('-1e500'))) ORDER BY (t1.c0 IN (CAST(vt0.c1 AS TEXT), 1.328373436E9)) ASC  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE (((0.9843708606315547)IS('-1e500'))) ORDER BY (t1.c0 IN (CAST(vt0.c1 AS TEXT), 1.328373436E9)) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (((0.9843708606315547)IS('-1e500'))) ORDER BY (t1.c0 IN (CAST(vt0.c1 AS TEXT), 1.328373436E9)) ASC  NULLS FIRST;
SELECT * FROM v0, t1 WHERE (((((((CAST(v0.c1 AS BLOB))OR(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))))AND(v0.c0)))AND(((((((((((((((v0.c1)OR(v0.c1)))AND(t1.c1)))AND(t1.c2)))OR(t1.c1)))OR(v0.c1)))AND(t1.c2)))OR(v0.c2))))) ORDER BY ((((t1.c2)&(t1.c1))) NOT NULL) DESC  NULLS LAST, (((v0.c0, NULL, t1.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, t1.c1, ((t1.c0) NOTNULL))) AND ((LIKELY(DISTINCT t1.c1), NULLIF(DISTINCT t1.c1, t1.c0), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))) DESC  NULLS LAST;
SELECT DISTINCT * FROM v0, t1 WHERE (((((((CAST(v0.c1 AS BLOB))OR(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))))AND(v0.c0)))AND(((((((((((((((v0.c1)OR(v0.c1)))AND(t1.c1)))AND(t1.c2)))OR(t1.c1)))OR(v0.c1)))AND(t1.c2)))OR(v0.c2))))) ORDER BY CASE UNLIKELY(DISTINCT v0.c2)  WHEN v0.c2 COLLATE BINARY THEN ((t1.c1) BETWEEN (v0.c0) AND (v0.c1)) WHEN CASE t1.c2  WHEN v0.c0 THEN v0.c0 END THEN v0.c2 ELSE CASE x'55'  WHEN v0.c2 THEN t1.c1 ELSE v0.c2 END END DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE ((v0.c1 IN ()) COLLATE NOCASE) ORDER BY CASE UNLIKELY(DISTINCT v0.c2)  WHEN v0.c2 COLLATE BINARY THEN ((t1.c1) BETWEEN (v0.c0) AND (v0.c1)) WHEN CASE t1.c2  WHEN v0.c0 THEN v0.c0 END THEN v0.c2 ELSE CASE x'55'  WHEN v0.c2 THEN t1.c1 ELSE v0.c2 END END DESC  NULLS LAST;
SELECT * FROM v0, t1 WHERE (((((((CAST(v0.c1 AS BLOB))OR(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))))AND(v0.c0)))AND(((((((((((((((v0.c1)OR(v0.c1)))AND(t1.c1)))AND(t1.c2)))OR(t1.c1)))OR(v0.c1)))AND(t1.c2)))OR(v0.c2))))) ORDER BY ((((t1.c2)&(t1.c1))) NOT NULL) DESC  NULLS LAST, (((v0.c0, NULL, t1.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, t1.c1, ((t1.c0) NOTNULL))) AND ((LIKELY(DISTINCT t1.c1), NULLIF(DISTINCT t1.c1, t1.c0), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))) DESC  NULLS LAST;
SELECT DISTINCT * FROM v0, t1 WHERE (((((((CAST(v0.c1 AS BLOB))OR(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))))AND(v0.c0)))AND(((((((((((((((v0.c1)OR(v0.c1)))AND(t1.c1)))AND(t1.c2)))OR(t1.c1)))OR(v0.c1)))AND(t1.c2)))OR(v0.c2))))) ORDER BY CASE UNLIKELY(DISTINCT v0.c2)  WHEN v0.c2 COLLATE BINARY THEN ((t1.c1) BETWEEN (v0.c0) AND (v0.c1)) WHEN CASE t1.c2  WHEN v0.c0 THEN v0.c0 END THEN v0.c2 ELSE CASE x'55'  WHEN v0.c2 THEN t1.c1 ELSE v0.c2 END END DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE ((v0.c1 IN ()) COLLATE NOCASE) ORDER BY CASE UNLIKELY(DISTINCT v0.c2)  WHEN v0.c2 COLLATE BINARY THEN ((t1.c1) BETWEEN (v0.c0) AND (v0.c1)) WHEN CASE t1.c2  WHEN v0.c0 THEN v0.c0 END THEN v0.c2 ELSE CASE x'55'  WHEN v0.c2 THEN t1.c1 ELSE v0.c2 END END DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((((((((1.382790579E9)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))OR(v0.c2)))OR(((v0.c2) ISNULL))))AND((((v0.c2, v0.c0, 'Infinity', v0.c2)) NOT BETWEEN ((v0.c0, v0.c1, v0.c0, v0.c0)) AND ((v0.c0, v0.c1, v0.c0, v0.c1)))))) ORDER BY x''  NULLS LAST, CASE WHEN ((v0.c1)&(v0.c0)) THEN ((((((((((v0.c1)AND(v0.c1)))AND(v0.c0)))AND(v0.c2)))AND(v0.c2)))AND(v0.c1)) ELSE ((v0.c0) NOT NULL) END;
SELECT * FROM v0 WHERE ((((((((((1.382790579E9)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))OR(v0.c2)))OR(((v0.c2) ISNULL))))AND((((v0.c2, v0.c0, 'Infinity', v0.c2)) NOT BETWEEN ((v0.c0, v0.c1, v0.c0, v0.c0)) AND ((v0.c0, v0.c1, v0.c0, v0.c1)))))) ORDER BY ((v0.c1) ISNULL) ASC  NULLS LAST, ((((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))GLOB(((v0.c0)>=(v0.c1)))) ASC, (~ (((((v0.c1)AND(v0.c0)))AND(v0.c0)))) DESC INTERSECT SELECT * FROM v0 WHERE ((((((v0.c0)%(v0.c2)), CAST(v0.c1 AS NUMERIC), v0.c0))<=(((+ (v0.c0)), v0.c2 COLLATE NOCASE, CASE v0.c1  WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 END)))) ORDER BY ((v0.c1) ISNULL) ASC  NULLS LAST, ((((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))GLOB(((v0.c0)>=(v0.c1)))) ASC, (~ (((((v0.c1)AND(v0.c0)))AND(v0.c0)))) DESC;
SELECT ALL * FROM v0 WHERE ((((((((((1.382790579E9)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))OR(v0.c2)))OR(((v0.c2) ISNULL))))AND((((v0.c2, v0.c0, 'Infinity', v0.c2)) NOT BETWEEN ((v0.c0, v0.c1, v0.c0, v0.c0)) AND ((v0.c0, v0.c1, v0.c0, v0.c1)))))) ORDER BY x''  NULLS LAST, CASE WHEN ((v0.c1)&(v0.c0)) THEN ((((((((((v0.c1)AND(v0.c1)))AND(v0.c0)))AND(v0.c2)))AND(v0.c2)))AND(v0.c1)) ELSE ((v0.c0) NOT NULL) END;
SELECT * FROM v0 WHERE ((((((((((1.382790579E9)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))OR(v0.c2)))OR(((v0.c2) ISNULL))))AND((((v0.c2, v0.c0, 'Infinity', v0.c2)) NOT BETWEEN ((v0.c0, v0.c1, v0.c0, v0.c0)) AND ((v0.c0, v0.c1, v0.c0, v0.c1)))))) ORDER BY ((v0.c1) ISNULL) ASC  NULLS LAST, ((((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))GLOB(((v0.c0)>=(v0.c1)))) ASC, (~ (((((v0.c1)AND(v0.c0)))AND(v0.c0)))) DESC INTERSECT SELECT * FROM v0 WHERE ((((((v0.c0)%(v0.c2)), CAST(v0.c1 AS NUMERIC), v0.c0))<=(((+ (v0.c0)), v0.c2 COLLATE NOCASE, CASE v0.c1  WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 END)))) ORDER BY ((v0.c1) ISNULL) ASC  NULLS LAST, ((((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))GLOB(((v0.c0)>=(v0.c1)))) ASC, (~ (((((v0.c1)AND(v0.c0)))AND(v0.c0)))) DESC;
SELECT * FROM vt0 NATURAL JOIN t1 WHERE ((((t1.c0, t1.c2, vt0.c0)) NOT BETWEEN (((((t1.c0, '-809260594', t1.c1))<((t1.c1, t1.c0, t1.c0))), '337239948' COLLATE NOCASE, (t1.c1 IN (t1.c2, vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN vt0.c0 ELSE 0.8263946967390843 END, (NOT (t1.c0)), (((t1.c0))=((t1.c0))))))) ORDER BY CAST(((t1.c2) BETWEEN (NULL) AND (t1.c1)) AS INTEGER) DESC, ((((t1.c1) IS FALSE))+(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c0)))) ASC;
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE ((((t1.c0, t1.c2, vt0.c0)) NOT BETWEEN (((((t1.c0, '-809260594', t1.c1))<((t1.c1, t1.c0, t1.c0))), '337239948' COLLATE NOCASE, (t1.c1 IN (t1.c2, vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN vt0.c0 ELSE 0.8263946967390843 END, (NOT (t1.c0)), (((t1.c0))>=((t1.c0))))))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL) LIMIT 0X1;
SELECT * FROM vt0 NATURAL JOIN t1 WHERE ((((t1.c0, t1.c2, vt0.c0)) NOT BETWEEN (((((t1.c0, '-809260594', t1.c1))<((t1.c1, t1.c0, t1.c0))), '337239948' COLLATE NOCASE, (t1.c1 IN (t1.c2, vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN vt0.c0 ELSE 0.8263946967390843 END, (NOT (t1.c0)), (((t1.c0))=((t1.c0))))))) ORDER BY CAST(((t1.c2) BETWEEN (NULL) AND (t1.c1)) AS INTEGER) DESC, ((((t1.c1) IS FALSE))+(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c0)))) ASC;
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE ((((t1.c0, t1.c2, vt0.c0)) NOT BETWEEN (((((t1.c0, '-809260594', t1.c1))<((t1.c1, t1.c0, t1.c0))), '337239948' COLLATE NOCASE, (t1.c1 IN (t1.c2, vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN t1.c1 WHEN t1.c0 THEN vt0.c0 ELSE 0.8263946967390843 END, (NOT (t1.c0)), (((t1.c0))>=((t1.c0))))))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL) LIMIT 0X1;
SELECT MAX(v0.c2) FROM v0 WHERE ((~ (((v0.c0) ISNULL))));
SELECT DISTINCT MAX(v0.c2) FROM v0 WHERE ((((~ (((v0.c0) ISNULL))))AND(v0.c2))) INTERSECT SELECT DISTINCT MAX(v0.c2) FROM v0 WHERE (v0.c0);
SELECT ALL * FROM vt0, t1 WHERE (0.39041269865531725);
SELECT * FROM vt0, t1 WHERE (((0.39041269865531725)AND(((t1.c0 COLLATE BINARY) BETWEEN (((t1.c0) BETWEEN (t1.c2) AND (t1.c0))) AND (((t1.c2) NOT NULL))))));
SELECT ALL * FROM vt0, t1 WHERE (0.39041269865531725);
SELECT * FROM vt0, t1 WHERE (((0.39041269865531725)AND(((t1.c0 COLLATE BINARY) BETWEEN (((t1.c0) BETWEEN (t1.c2) AND (t1.c0))) AND (((t1.c2) NOT NULL))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)>((v0.c2 IN (v0.c0))))) ORDER BY ((((v0.c2) NOT BETWEEN (x'') AND (v0.c2))) NOT BETWEEN (0.6105365242732299) AND ((v0.c1 IN (v0.c2)))), v0.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((NULL)>((v0.c2 IN (v0.c0))))) ORDER BY ((((v0.c2) NOT BETWEEN (x'') AND (v0.c2))) NOT BETWEEN (0.6105365242732299) AND ((v0.c1 IN (v0.c2)))), v0.c1 DESC  NULLS FIRST LIMIT 1;
SELECT * FROM v0 WHERE ((('O9ᗂmXJwH')>(CAST(v0.c1 AS TEXT)))) ORDER BY (((x'05ade7' IN (v0.c2)))AND((+ (v0.c1)))) ASC  NULLS FIRST, ((v0.c1 COLLATE NOCASE)AND(CAST(v0.c2 AS INTEGER)))  NULLS LAST;
SELECT DISTINCT * FROM v0 WHERE ((('O9ᗂmXJwH')>(CAST(v0.c1 AS TEXT)))) ORDER BY (((x'05ade7' IN (v0.c2)))AND((+ (v0.c1)))) ASC  NULLS FIRST, ((v0.c1 COLLATE NOCASE)AND(CAST(v0.c2 AS INTEGER)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c1 END  WHEN (((v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, v0.c2)) AND ((v0.c1, v0.c1))) THEN (+ (v0.c0)) ELSE v0.c2 COLLATE BINARY END) ORDER BY (((x'05ade7' IN (v0.c2)))AND((+ (v0.c1)))) ASC  NULLS FIRST, ((v0.c1 COLLATE NOCASE)AND(CAST(v0.c2 AS INTEGER)))  NULLS LAST;
SELECT * FROM v0 WHERE ((('O9ᗂmXJwH')>(CAST(v0.c1 AS TEXT)))) ORDER BY (((x'05ade7' IN (v0.c2)))AND((+ (v0.c1)))) ASC  NULLS FIRST, ((v0.c1 COLLATE NOCASE)AND(CAST(v0.c2 AS INTEGER)))  NULLS LAST;
SELECT DISTINCT * FROM v0 WHERE ((('O9ᗂmXJwH')>(CAST(v0.c1 AS TEXT)))) ORDER BY (((x'05ade7' IN (v0.c2)))AND((+ (v0.c1)))) ASC  NULLS FIRST, ((v0.c1 COLLATE NOCASE)AND(CAST(v0.c2 AS INTEGER)))  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c1 END  WHEN (((v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, v0.c2)) AND ((v0.c1, v0.c1))) THEN (+ (v0.c0)) ELSE v0.c2 COLLATE BINARY END) ORDER BY (((x'05ade7' IN (v0.c2)))AND((+ (v0.c1)))) ASC  NULLS FIRST, ((v0.c1 COLLATE NOCASE)AND(CAST(v0.c2 AS INTEGER)))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((v0.c2) NOTNULL))LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END))) ORDER BY ((NULL) NOT BETWEEN (((v0.c1)<=(v0.c2))) AND (LIKELIHOOD(DISTINCT v0.c2, v0.c2)));
SELECT * FROM v0 WHERE (((((v0.c2) NOTNULL))LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END))) ORDER BY ((NULL) NOT BETWEEN (((v0.c1)<=(v0.c2))) AND (LIKELIHOOD(DISTINCT v0.c2, v0.c2))) LIMIT 0X0 INTERSECT SELECT * FROM v0 WHERE (x'') ORDER BY ((NULL) NOT BETWEEN (((v0.c1)<=(v0.c2))) AND (LIKELIHOOD(DISTINCT v0.c2, v0.c2))) LIMIT 0x0;
SELECT ALL * FROM v0 WHERE (((((v0.c2) NOTNULL))LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END))) ORDER BY ((NULL) NOT BETWEEN (((v0.c1)<=(v0.c2))) AND (LIKELIHOOD(DISTINCT v0.c2, v0.c2)));
SELECT * FROM t1, vt0, v0 WHERE (((vt0.c0)IS((~ (t1.c1)))));
SELECT ALL * FROM t1, vt0 NOT INDEXED, v0 WHERE (((((vt0.c0)IS((~ (t1.c1)))))AND('w'))) LIMIT 1;
SELECT * FROM t1, vt0, v0 WHERE (((vt0.c0)IS((~ (t1.c1)))));
SELECT ALL * FROM t1, vt0 NOT INDEXED, v0 WHERE (((((vt0.c0)IS((~ (t1.c1)))))AND('w'))) LIMIT 1;
SELECT COUNT(*) FROM t1 WHERE (t1.c2) ORDER BY CASE WHEN ((t1.c1)LIKE(t1.c0)) THEN (t1.c1 IN ()) WHEN (t1.c2 IN (t1.c2, t1.c2, t1.c1)) THEN ((t1.c2)IS(t1.c2)) WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c0 END THEN 'oVp' WHEN CAST(t1.c0 AS TEXT) THEN (+ (t1.c1)) END, CASE WHEN (((t1.c1, t1.c0, t1.c2)) NOT BETWEEN ((t1.c2, t1.c1, t1.c1)) AND ((t1.c0, t1.c2, t1.c0))) THEN t1.c1 COLLATE BINARY WHEN NULL THEN CASE t1.c2  WHEN t1.c2 THEN 0.7112285859638923 END ELSE NULLIF(DISTINCT t1.c1, t1.c2) END, CASE WHEN ((t1.c1) NOT NULL) THEN (t1.c1 IN (t1.c2)) ELSE CAST(t1.c2 AS INTEGER) END;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2) ORDER BY CASE WHEN ((t1.c1)LIKE(t1.c0)) THEN (t1.c1 IN ()) WHEN (t1.c2 IN (t1.c2, t1.c2, t1.c1)) THEN ((t1.c2)IS(t1.c2)) WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c0 END THEN 'oVp' WHEN CAST(t1.c0 AS TEXT) THEN (+ (t1.c1)) END, CASE WHEN (((t1.c1, t1.c0, t1.c2)) NOT BETWEEN ((t1.c2, t1.c1, t1.c1)) AND ((t1.c0, t1.c2, t1.c0))) THEN t1.c1 COLLATE BINARY WHEN NULL THEN CASE t1.c2  WHEN t1.c2 THEN 0.7112285859638923 END ELSE NULLIF(DISTINCT t1.c1, t1.c2) END, CASE WHEN ((t1.c1) NOT NULL) THEN (t1.c1 IN (t1.c2)) ELSE CAST(t1.c2 AS INTEGER) END LIMIT 3;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS BLOB));
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c1 AS BLOB));
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS BLOB));
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c1 AS BLOB));
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (-1842537292);
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((0Xffffffff922d1cb4)AND(CAST('-1287748498' AS REAL)))) INTERSECT SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE ((CASE WHEN t1.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END IN (((NULL)/(v0.c0)))));
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (-1842537292);
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((0Xffffffff922d1cb4)AND(CAST('-1287748498' AS REAL)))) INTERSECT SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE ((CASE WHEN t1.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END IN (((NULL)/(v0.c0)))));
SELECT COUNT(*) FROM t1 NOT INDEXED, v0 WHERE (((v0.c2)GLOB(((0xffffffffef7b6c27)IS NOT(t1.c2))))) ORDER BY (('-1480560719' COLLATE NOCASE) BETWEEN ((~ (v0.c2))) AND (v0.c1))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1, v0 WHERE (((((v0.c2)GLOB(((0xffffffffef7b6c27)IS NOT(t1.c2)))))AND(CAST(((t1.c2) IS TRUE) AS NUMERIC)))) ORDER BY (((v0.c1)) BETWEEN ((v0.c0)) AND ((((((t1.c1)AND(NULL)))OR(v0.c0))))) LIMIT 1;
SELECT * FROM t1, v0, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (((NULL))<=((((((((((vt0.c1)OR('-780793353')))OR(v0.c1)))AND(t1.c0)))AND(t1.c1))))), (((vt0.c0, t1.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, t1.c2)) NOT BETWEEN ((t1.c0, t1.c2, vt0.c0, v0.c0)) AND ((v0.c0, -111518474, v0.c2, vt0.c0))), (vt0.c1 IN (v0.c0)))) AND ((CAST(v0.c1 AS BLOB), v0.c1))) DESC;
SELECT * FROM t1, v0, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (((NULL))<=((((((((((vt0.c1)OR('-780793353')))OR(v0.c1)))AND(t1.c0)))AND(t1.c1))))), (((vt0.c0, t1.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, t1.c2)) NOT BETWEEN ((t1.c0, t1.c2, vt0.c0, v0.c0)) AND ((v0.c0, -111518474, v0.c2, vt0.c0))), (vt0.c1 IN (v0.c0)))) AND ((CAST(v0.c1 AS BLOB), v0.c1))) DESC LIMIT 0x0 INTERSECT SELECT * FROM t1, v0, vt0 WHERE ((((t1.c1, v0.c2)) BETWEEN ((v0.c2 COLLATE NOCASE, ((('-790725355')) BETWEEN ((t1.c0)) AND ((v0.c1))))) AND ((CASE t1.c0  WHEN t1.c2 THEN x'' WHEN v0.c2 THEN t1.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 ELSE t1.c1 END, (0.05266829365612802 IN (t1.c1)))))) ORDER BY (((NULL))<=((((((((((vt0.c1)OR('-780793353')))OR(v0.c1)))AND(t1.c0)))AND(t1.c1))))), (((vt0.c0, t1.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, t1.c2)) NOT BETWEEN ((t1.c0, t1.c2, vt0.c0, v0.c0)) AND ((v0.c0, -111518474, v0.c2, vt0.c0))), (vt0.c1 IN (v0.c0)))) AND ((CAST(v0.c1 AS BLOB), v0.c1))) DESC LIMIT 0X0;
SELECT * FROM t1, v0, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (((NULL))<=((((((((((vt0.c1)OR('-780793353')))OR(v0.c1)))AND(t1.c0)))AND(t1.c1))))), (((vt0.c0, t1.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, t1.c2)) NOT BETWEEN ((t1.c0, t1.c2, vt0.c0, v0.c0)) AND ((v0.c0, -111518474, v0.c2, vt0.c0))), (vt0.c1 IN (v0.c0)))) AND ((CAST(v0.c1 AS BLOB), v0.c1))) DESC;
SELECT * FROM t1, v0, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (((NULL))<=((((((((((vt0.c1)OR('-780793353')))OR(v0.c1)))AND(t1.c0)))AND(t1.c1))))), (((vt0.c0, t1.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, t1.c2)) NOT BETWEEN ((t1.c0, t1.c2, vt0.c0, v0.c0)) AND ((v0.c0, -111518474, v0.c2, vt0.c0))), (vt0.c1 IN (v0.c0)))) AND ((CAST(v0.c1 AS BLOB), v0.c1))) DESC LIMIT 0x0 INTERSECT SELECT * FROM t1, v0, vt0 WHERE ((((t1.c1, v0.c2)) BETWEEN ((v0.c2 COLLATE NOCASE, ((('-790725355')) BETWEEN ((t1.c0)) AND ((v0.c1))))) AND ((CASE t1.c0  WHEN t1.c2 THEN x'' WHEN v0.c2 THEN t1.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 ELSE t1.c1 END, (0.05266829365612802 IN (t1.c1)))))) ORDER BY (((NULL))<=((((((((((vt0.c1)OR('-780793353')))OR(v0.c1)))AND(t1.c0)))AND(t1.c1))))), (((vt0.c0, t1.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, t1.c2)) NOT BETWEEN ((t1.c0, t1.c2, vt0.c0, v0.c0)) AND ((v0.c0, -111518474, v0.c2, vt0.c0))), (vt0.c1 IN (v0.c0)))) AND ((CAST(v0.c1 AS BLOB), v0.c1))) DESC LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((0.5715232016441354)|((((('-1670783258')OR(t1.c1)))OR(t1.c0))))) ORDER BY ((+ ('286365582')) IN ()) ASC  NULLS LAST, ((((((((((((t1.c1)<>(t1.c2)))AND(228315338)))AND(GLOB(t1.c2, t1.c2))))OR((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))))AND(t1.c1 COLLATE NOCASE)))OR(CAST(t1.c1 AS BLOB)));
SELECT DISTINCT * FROM t1 WHERE (((((0.5715232016441354)|((((('-1670783258')OR(t1.c1)))OR(t1.c0)))))AND(t1.c0))) ORDER BY x'd9cc'  NULLS LAST LIMIT 4 INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE WHEN CASE t1.c1  WHEN 0.9461127627586241 THEN NULL ELSE t1.c1 END THEN (t1.c0 IN ()) WHEN CAST(t1.c1 AS REAL) THEN UNLIKELY(t1.c2) WHEN ((t1.c1)==(t1.c1)) THEN (((NULL, t1.c1, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, -1650509641, t1.c0, t1.c2)) AND ((t1.c1, t1.c1, t1.c2, t1.c1))) END) ORDER BY x'd9cc'  NULLS LAST LIMIT 4;
SELECT ALL * FROM t1 WHERE (((0.5715232016441354)|((((('-1670783258')OR(t1.c1)))OR(t1.c0))))) ORDER BY ((+ ('286365582')) IN ()) ASC  NULLS LAST, ((((((((((((t1.c1)<>(t1.c2)))AND(228315338)))AND(GLOB(t1.c2, t1.c2))))OR((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))))AND(t1.c1 COLLATE NOCASE)))OR(CAST(t1.c1 AS BLOB)));
SELECT MAX(vt0.c0) FROM vt0, t1, v0 WHERE ('A馒aG!U' COLLATE NOCASE);
SELECT MAX(vt0.c0) FROM vt0, t1, v0 WHERE ((('A馒aG!U' COLLATE NOCASE)AND(((0x63159d97) NOT BETWEEN ((~ (t1.c2))) AND (CASE t1.c0  WHEN vt0.c0 THEN t1.c1 END))))) INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0, t1, v0 WHERE (CAST(vt0.c1 AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))>>((((v0.c2, v0.c2, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, '-2080115895')) AND ((v0.c0, v0.c0, v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))>>((((v0.c2, v0.c2, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, '-2080115895')) AND ((v0.c0, v0.c0, v0.c0)))))) LIMIT 0x0;
SELECT ALL MIN(t1.c2) FROM t1 WHERE (((-1830420980 COLLATE BINARY)LIKE(NULLIF(t1.c2, t1.c0)))) ORDER BY (((((t1.c0) ISNULL), '[(E''~T', t1.c1 COLLATE BINARY))>((CASE 0.22806707197019616  WHEN t1.c2 THEN t1.c0 END, CAST(t1.c0 AS INTEGER), CASE t1.c2  WHEN t1.c0 THEN t1.c2 END)));
SELECT DISTINCT MIN(t1.c2) FROM t1 WHERE (((((-1830420980 COLLATE BINARY)LIKE(NULLIF(t1.c2, t1.c0))))AND(t1.c0))) ORDER BY (((+ (t1.c2)))LIKE('Xe')), CASE WHEN CASE WHEN t1.c1 THEN t1.c2 END THEN (((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c2))) WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c2 WHEN t1.c1 THEN ']\\''?-制' END THEN ((((t1.c0)OR('	>\''')))AND(1.28282561E8)) END ASC LIMIT 0X2 INTERSECT SELECT DISTINCT MIN(t1.c2) FROM t1 WHERE (((~ (t1.c2)) IN (t1.c1 COLLATE RTRIM))) ORDER BY (((+ (t1.c2)))LIKE('Xe')), CASE WHEN CASE WHEN t1.c1 THEN t1.c2 END THEN (((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c2))) WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c2 WHEN t1.c1 THEN ']\\''?-制' END THEN ((((t1.c0)OR('	>\''')))AND(1.28282561E8)) END ASC LIMIT 0x2;
SELECT ALL * FROM v0 WHERE ((((v0.c1)) BETWEEN ((TIME(v0.c0, v0.c2, 0.5276482578575615, v0.c0, v0.c2, v0.c0))) AND (((- (v0.c0)))))) ORDER BY NULL  NULLS FIRST, (+ (((NULL) ISNULL))) ASC;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c1)) BETWEEN ((TIME(v0.c0, v0.c2, 0.5276482578575615, v0.c0, v0.c2, v0.c0))) AND (((- (v0.c0)))))) ORDER BY NULL  NULLS FIRST, (+ (((NULL) ISNULL))) ASC LIMIT 0X1;
SELECT ALL * FROM v0 WHERE ((((v0.c1)) BETWEEN ((TIME(v0.c0, v0.c2, 0.5276482578575615, v0.c0, v0.c2, v0.c0))) AND (((- (v0.c0)))))) ORDER BY NULL  NULLS FIRST, (+ (((NULL) ISNULL))) ASC;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c1)) BETWEEN ((TIME(v0.c0, v0.c2, 0.5276482578575615, v0.c0, v0.c2, v0.c0))) AND (((- (v0.c0)))))) ORDER BY NULL  NULLS FIRST, (+ (((NULL) ISNULL))) ASC LIMIT 0X1;
SELECT MAX(t1.c2) FROM t1 WHERE (CASE ((((((((t1.c2)OR(0.12106296057347044)))OR(t1.c2)))OR(t1.c1)))AND(t1.c2))  WHEN (('8#䤎,''al8o') IS FALSE) THEN (((t1.c2, NULL, x'25'))>=((t1.c0, t1.c1, t1.c2))) WHEN (+ (t1.c0)) THEN CASE t1.c2  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c2 END WHEN (+ (t1.c2)) THEN ((t1.c1)IS NOT(t1.c2)) WHEN ((t1.c1)&(t1.c1)) THEN UNLIKELY(t1.c1) WHEN (((0.32954554802870273, t1.c0))=((t1.c1, t1.c2))) THEN ((t1.c1)>(t1.c0)) ELSE '-1399201276' END);
SELECT MAX(t1.c2) FROM t1 WHERE (((CASE ((((((((t1.c2)OR(0.12106296057347044)))OR(t1.c2)))OR(t1.c1)))AND(t1.c2))  WHEN (('8#䤎,''al8o') IS FALSE) THEN (((t1.c2, NULL, x'25'))==((t1.c0, t1.c1, t1.c2))) WHEN (+ (t1.c0)) THEN CASE t1.c2  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c2 END WHEN (+ (t1.c2)) THEN ((t1.c1)IS NOT(t1.c2)) WHEN ((t1.c1)&(t1.c1)) THEN UNLIKELY(t1.c1) WHEN (((0.32954554802870273, t1.c0))=((t1.c1, t1.c2))) THEN ((t1.c1)>(t1.c0)) ELSE '-1399201276' END)AND(CAST(t1.c0 COLLATE RTRIM AS INTEGER)))) ORDER BY MIN(((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2)), ((t1.c0)%(t1.c0)), (-1635930072 IN ()))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM v0 WHERE (CASE ((v0.c2)<=(v0.c1))  WHEN ((((v0.c2)OR(v0.c1)))AND(v0.c1)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) ELSE v0.c1 END);
SELECT ALL * FROM v0 WHERE (((CASE ((v0.c2)==(v0.c1))  WHEN ((((v0.c2)OR(v0.c1)))AND(v0.c1)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) ELSE v0.c1 END)AND((~ (v0.c2)) COLLATE NOCASE))) ORDER BY ((((((v0.c1 COLLATE RTRIM)OR(((v0.c1) NOT NULL))))AND((- (v0.c2)))))AND(((v0.c2)IS(v0.c1)))) DESC  NULLS FIRST, ABS(DISTINCT CAST(v0.c1 AS BLOB)) DESC;
SELECT ALL * FROM v0 WHERE (CASE ((v0.c2)<=(v0.c1))  WHEN ((((v0.c2)OR(v0.c1)))AND(v0.c1)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) ELSE v0.c1 END);
SELECT ALL * FROM v0 WHERE (((CASE ((v0.c2)==(v0.c1))  WHEN ((((v0.c2)OR(v0.c1)))AND(v0.c1)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) ELSE v0.c1 END)AND((~ (v0.c2)) COLLATE NOCASE))) ORDER BY ((((((v0.c1 COLLATE RTRIM)OR(((v0.c1) NOT NULL))))AND((- (v0.c2)))))AND(((v0.c2)IS(v0.c1)))) DESC  NULLS FIRST, ABS(DISTINCT CAST(v0.c1 AS BLOB)) DESC;
SELECT * FROM t1, v0, vt0 WHERE (((((((((vt0.c0)AND(((x'04')>=(t1.c0)))))OR(vt0.c1 COLLATE NOCASE)))AND(v0.c1 COLLATE RTRIM)))AND((t1.c2 IN ())))) ORDER BY CAST((- (v0.c2)) AS BLOB) DESC, ((((vt0.c1)=(t1.c1))) IS TRUE);
SELECT ALL * FROM t1, v0, vt0 WHERE (((((((((vt0.c0)AND(((x'04')>(t1.c0)))))OR(vt0.c1 COLLATE NOCASE)))AND(v0.c1 COLLATE RTRIM)))AND((t1.c2 IN ())))) ORDER BY ((((NULL)*(v0.c1)))=(((v0.c1)<<(v0.c2)))) ASC  NULLS LAST LIMIT 0X0;
SELECT * FROM t1, v0, vt0 WHERE (((((((((vt0.c0)AND(((x'04')>=(t1.c0)))))OR(vt0.c1 COLLATE NOCASE)))AND(v0.c1 COLLATE RTRIM)))AND((t1.c2 IN ())))) ORDER BY CAST((- (v0.c2)) AS BLOB) DESC, ((((vt0.c1)=(t1.c1))) IS TRUE);
SELECT ALL * FROM t1, v0, vt0 WHERE (((((((((vt0.c0)AND(((x'04')>(t1.c0)))))OR(vt0.c1 COLLATE NOCASE)))AND(v0.c1 COLLATE RTRIM)))AND((t1.c2 IN ())))) ORDER BY ((((NULL)*(v0.c1)))=(((v0.c1)<<(v0.c2)))) ASC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0) BETWEEN (t1.c2) AND (t1.c2)))&(((t1.c1)==(1200319629)))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((vt0.c0) BETWEEN (t1.c2) AND (t1.c2)))&(((t1.c1)==(0x478b6c8d))))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE ((((NOT (t1.c2)))/(((t1.c1) NOT BETWEEN (t1.c2) AND (x''))))) LIMIT 0x2;
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0) BETWEEN (t1.c2) AND (t1.c2)))&(((t1.c1)==(1200319629)))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((vt0.c0) BETWEEN (t1.c2) AND (t1.c2)))&(((t1.c1)==(0x478b6c8d))))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE ((((NOT (t1.c2)))/(((t1.c1) NOT BETWEEN (t1.c2) AND (x''))))) LIMIT 0x2;
SELECT ALL MIN(v0.c2) FROM vt0, v0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (v0.c2))) ISNULL)) ORDER BY (((0.41549015860723226))>=((CAST(vt0.c0 AS TEXT)))) DESC  NULLS FIRST, ((((vt0.c0)GLOB(v0.c0))) NOTNULL);
SELECT ALL MIN(v0.c2) FROM vt0, v0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (v0.c2))) ISNULL)) ORDER BY (((0.41549015860723226))>=((CAST(vt0.c0 AS TEXT)))) DESC  NULLS FIRST, ((((vt0.c0)GLOB(v0.c0))) NOTNULL) LIMIT 0X4 INTERSECT SELECT MIN(v0.c2) FROM vt0, v0 WHERE (((((vt0.c0) BETWEEN (0.026515464598603544) AND (vt0.c0)))&(CASE WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END))) ORDER BY (((0.41549015860723226))>=((CAST(vt0.c0 AS TEXT)))) DESC  NULLS FIRST, ((((vt0.c0)GLOB(v0.c0))) NOTNULL) LIMIT 4;
SELECT ALL MAX(t1.c0) FROM vt0 INNER JOIN t1 ON ((CASE WHEN t1.c1 THEN vt0.c0 WHEN x'' THEN t1.c1 ELSE -1 END) BETWEEN (((((((((((((t1.c0)OR(t1.c2)))AND(t1.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(t1.c2)))AND(-2017062750))) AND (((t1.c2)|(t1.c0)))) WHERE ((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1)))) IS FALSE)) ORDER BY (((t1.c0))<=(((NOT (vt0.c0))))) ASC, ((((((((((t1.c0)OR(vt0.c0)))AND(0.5208842837866051)))AND(vt0.c1)))OR(t1.c2)))OR(t1.c0)) COLLATE BINARY COLLATE NOCASE ASC, CAST((t1.c1 IN (vt0.c1, NULL)) AS INTEGER);
SELECT DISTINCT MAX(t1.c0) FROM vt0 INNER JOIN t1 ON ((CASE WHEN t1.c1 THEN vt0.c0 WHEN x'' THEN t1.c1 ELSE 0xffffffffffffffff END) BETWEEN (((((((((((((t1.c0)OR(t1.c2)))AND(t1.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(t1.c2)))AND(0Xffffffff87c610a2))) AND (((t1.c2)|(t1.c0)))) WHERE ((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1)))) IS FALSE)) ORDER BY (((t1.c0))<=(((NOT (vt0.c0))))) ASC, ((((((((((t1.c0)OR(vt0.c0)))AND(0.5208842837866051)))AND(vt0.c1)))OR(t1.c2)))OR(t1.c0)) COLLATE BINARY COLLATE NOCASE ASC, CAST((t1.c1 IN (vt0.c1, NULL)) AS INTEGER) LIMIT 4;
SELECT MAX(t1.c1) FROM t1 WHERE (((((t1.c2)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ((((t1.c1, '&s', t1.c2))!=((t1.c1, 2106321545, t1.c1)))))) ORDER BY ((CAST(0Xe963b79 AS NUMERIC))OR(0.6591822367143173)), ((((((t1.c1)OR(t1.c1)))OR(t1.c0)))GLOB(ABS(DISTINCT t1.c2)));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c2)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ((((t1.c1, '&s', t1.c2))>((t1.c1, 0x7d8bea89, t1.c1)))))) ORDER BY (NOT (t1.c1)) COLLATE RTRIM  NULLS FIRST, (((((t1.c0) IS FALSE)))>(((t1.c0 IN ())))) ASC LIMIT 0X1;
SELECT * FROM v0, vt0 WHERE (((HEX(DISTINCT v0.c0)) NOTNULL));
SELECT DISTINCT * FROM v0, vt0 WHERE (((((HEX(DISTINCT v0.c0)) NOTNULL))AND(CASE ((((((((((((v0.c0)OR(v0.c1)))OR(v0.c1)))AND(vt0.c0)))AND('-1635930072')))OR('1439138116')))AND(v0.c0))  WHEN ((((vt0.c0)AND(vt0.c1)))AND(v0.c2)) THEN '0.0' WHEN ((v0.c2) ISNULL) THEN v0.c2 ELSE CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END END))) INTERSECT SELECT DISTINCT * FROM v0, vt0 WHERE (CAST(((((((0.1742039702320356)AND(v0.c2)))AND(v0.c0)))OR(v0.c1)) AS BLOB));
SELECT * FROM v0, vt0 WHERE (((HEX(DISTINCT v0.c0)) NOTNULL));
SELECT DISTINCT * FROM v0, vt0 WHERE (((((HEX(DISTINCT v0.c0)) NOTNULL))AND(CASE ((((((((((((v0.c0)OR(v0.c1)))OR(v0.c1)))AND(vt0.c0)))AND('-1635930072')))OR('1439138116')))AND(v0.c0))  WHEN ((((vt0.c0)AND(vt0.c1)))AND(v0.c2)) THEN '0.0' WHEN ((v0.c2) ISNULL) THEN v0.c2 ELSE CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END END))) INTERSECT SELECT DISTINCT * FROM v0, vt0 WHERE (CAST(((((((0.1742039702320356)AND(v0.c2)))AND(v0.c0)))OR(v0.c1)) AS BLOB));
SELECT MIN(vt0.c0) FROM vt0, t1 WHERE (CAST(CAST(t1.c0 AS BLOB) AS BLOB));
SELECT ALL MIN(vt0.c0) FROM vt0, t1 WHERE (CAST(CAST(t1.c0 AS BLOB) AS BLOB)) ORDER BY ((((((t1.c2) NOT NULL))OR(t1.c2 COLLATE RTRIM)))AND(((t1.c0)AND(vt0.c1)))) DESC;
SELECT * FROM t1, vt0 WHERE (t1.c1);
SELECT ALL * FROM t1, vt0 WHERE (((t1.c1)AND(LOWER(DISTINCT x'a6')))) LIMIT 0;
SELECT * FROM t1, vt0 WHERE (t1.c1);
SELECT ALL * FROM t1, vt0 WHERE (((t1.c1)AND(LOWER(DISTINCT x'a6')))) LIMIT 0;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c1) ISNULL) INNER JOIN t1 ON UNLIKELY(((t1.c1) IS TRUE)) WHERE ((((v0.c1)) NOT BETWEEN (((+ ('-128168833')))) AND ((((((((((((t1.c2)OR(v0.c0)))OR(vt0.c1)))AND(v0.c2)))OR(t1.c2)))OR(t1.c2))))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c1) ISNULL) INNER JOIN t1 ON UNLIKELY(((t1.c1) IS TRUE)) WHERE ((((((v0.c1)) NOT BETWEEN (((+ ('-128168833')))) AND ((((((((((((t1.c2)OR(v0.c0)))OR(vt0.c1)))AND(v0.c2)))OR(t1.c2)))OR(t1.c2))))))AND(x''))) ORDER BY CAST('' AS BLOB) DESC, (- ((((v0.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))) DESC INTERSECT SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c1) ISNULL) INNER JOIN t1 ON UNLIKELY(((t1.c1) IS TRUE)) WHERE ((((t1.c0 IN ())) BETWEEN (t1.c2 COLLATE RTRIM) AND (((NULL)||(vt0.c0))))) ORDER BY CAST('' AS BLOB) DESC, (- ((((v0.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))) DESC;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c1) ISNULL) INNER JOIN t1 ON UNLIKELY(((t1.c1) IS TRUE)) WHERE ((((v0.c1)) NOT BETWEEN (((+ ('-128168833')))) AND ((((((((((((t1.c2)OR(v0.c0)))OR(vt0.c1)))AND(v0.c2)))OR(t1.c2)))OR(t1.c2))))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c1) ISNULL) INNER JOIN t1 ON UNLIKELY(((t1.c1) IS TRUE)) WHERE ((((((v0.c1)) NOT BETWEEN (((+ ('-128168833')))) AND ((((((((((((t1.c2)OR(v0.c0)))OR(vt0.c1)))AND(v0.c2)))OR(t1.c2)))OR(t1.c2))))))AND(x''))) ORDER BY CAST('' AS BLOB) DESC, (- ((((v0.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))) DESC INTERSECT SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c1) ISNULL) INNER JOIN t1 ON UNLIKELY(((t1.c1) IS TRUE)) WHERE ((((t1.c0 IN ())) BETWEEN (t1.c2 COLLATE RTRIM) AND (((NULL)||(vt0.c0))))) ORDER BY CAST('' AS BLOB) DESC, (- ((((v0.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))) DESC;
SELECT MIN(vt0.c1) FROM vt0 WHERE ((((vt0.c1, vt0.c1)) BETWEEN ((vt0.c1 COLLATE RTRIM, (NULL IN (vt0.c1)))) AND (((vt0.c1 IN ()), vt0.c0))));
SELECT ALL MIN(vt0.c1) FROM vt0 NOT INDEXED WHERE ((((vt0.c1, vt0.c1)) BETWEEN ((vt0.c1 COLLATE RTRIM, (NULL IN (vt0.c1)))) AND (((vt0.c1 IN ()), vt0.c0)))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS TEXT) DESC  NULLS FIRST, (((CASE vt0.c1  WHEN vt0.c1 THEN x'' ELSE 'BE' END, ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))>=((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, '' COLLATE NOCASE)))  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(v0.c2) FROM v0 WHERE (TYPEOF(DISTINCT ((v0.c0)==(v0.c1))));
SELECT ALL MAX(v0.c2) FROM v0 WHERE (TYPEOF(DISTINCT ((v0.c0)==(v0.c1)))) ORDER BY ((v0.c2) IS TRUE)  NULLS FIRST LIMIT 0 INTERSECT SELECT MAX(v0.c2) FROM v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) THEN LIKELY(DISTINCT x'e1') END) ORDER BY ((v0.c2) IS TRUE)  NULLS FIRST LIMIT 0;
SELECT ALL * FROM v0 WHERE ((((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) IN ()));
SELECT DISTINCT * FROM v0 WHERE ((((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) IN ())) INTERSECT SELECT DISTINCT * FROM v0 WHERE (((json_array_length(v0.c0))<('-1052937140')));
SELECT ALL * FROM v0 WHERE ((((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) IN ()));
SELECT DISTINCT * FROM v0 WHERE ((((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) IN ())) INTERSECT SELECT DISTINCT * FROM v0 WHERE (((json_array_length(v0.c0))<('-1052937140')));
SELECT ALL MIN(t1.c2) FROM v0, t1 NOT INDEXED WHERE (((((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))||(((((((v0.c0)AND(t1.c2)))OR(v0.c0)))OR(v0.c2)))));
SELECT DISTINCT MIN(t1.c2) FROM v0, t1 WHERE (((((((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))||(((((((v0.c0)AND(t1.c2)))OR(v0.c0)))OR(v0.c2)))))AND(((((((((((((v0.c0)AND(t1.c2)))OR(v0.c2)))AND(t1.c0)))AND(t1.c2)))OR('679627766')))<<(highlight(v0.c0, t1.c0, t1.c2, t1.c1)))))) ORDER BY (((~ (t1.c0)))+((+ (v0.c1)))) DESC;
SELECT * FROM vt0, v0 WHERE (((TYPEOF(DISTINCT v0.c2))==(((((v0.c0)OR(v0.c2)))AND(v0.c2))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 ELSE v0.c0 END) IS FALSE)  NULLS LAST, (((v0.c0)) BETWEEN ((LOWER(DISTINCT v0.c2))) AND ((((((v0.c1)AND(v0.c0)))AND(vt0.c0))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((TYPEOF(DISTINCT v0.c2))==(((((v0.c0)OR(v0.c2)))AND(v0.c2)))))AND(((((vt0.c0)>(v0.c0)))AND((+ ('8rt9{ju{'))))))) ORDER BY (((IFNULL(DISTINCT v0.c0, 0.7387294024560818), ((v0.c2)>=(vt0.c1)), (vt0.c1 IN (vt0.c0))))>=((((v0.c1) IS TRUE), ((v0.c2) BETWEEN (vt0.c1) AND (v0.c1)), ((v0.c2) IS FALSE)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, v0 WHERE ((~ (((((v0.c1)AND(v0.c0)))OR(NULL))))) ORDER BY (((IFNULL(DISTINCT v0.c0, 0.7387294024560818), ((v0.c2)>=(vt0.c1)), (vt0.c1 IN (vt0.c0))))>=((((v0.c1) IS TRUE), ((v0.c2) BETWEEN (vt0.c1) AND (v0.c1)), ((v0.c2) IS FALSE)))) LIMIT 0;
SELECT * FROM vt0, v0 WHERE (((TYPEOF(DISTINCT v0.c2))==(((((v0.c0)OR(v0.c2)))AND(v0.c2))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 ELSE v0.c0 END) IS FALSE)  NULLS LAST, (((v0.c0)) BETWEEN ((LOWER(DISTINCT v0.c2))) AND ((((((v0.c1)AND(v0.c0)))AND(vt0.c0))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((TYPEOF(DISTINCT v0.c2))==(((((v0.c0)OR(v0.c2)))AND(v0.c2)))))AND(((((vt0.c0)>(v0.c0)))AND((+ ('8rt9{ju{'))))))) ORDER BY (((IFNULL(DISTINCT v0.c0, 0.7387294024560818), ((v0.c2)>=(vt0.c1)), (vt0.c1 IN (vt0.c0))))>=((((v0.c1) IS TRUE), ((v0.c2) BETWEEN (vt0.c1) AND (v0.c1)), ((v0.c2) IS FALSE)))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, v0 WHERE ((~ (((((v0.c1)AND(v0.c0)))OR(NULL))))) ORDER BY (((IFNULL(DISTINCT v0.c0, 0.7387294024560818), ((v0.c2)>=(vt0.c1)), (vt0.c1 IN (vt0.c0))))>=((((v0.c1) IS TRUE), ((v0.c2) BETWEEN (vt0.c1) AND (v0.c1)), ((v0.c2) IS FALSE)))) LIMIT 0;
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON (NOT ((((v0.c0, t1.c0, v0.c0))>=((v0.c2, vt0.c0, v0.c2))))) INNER JOIN vt0 ON ((CASE v0.c2  WHEN t1.c2 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) ISNULL)) AND (v0.c0)) WHERE (t1.c0);
SELECT DISTINCT COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON (NOT ((((v0.c0, t1.c0, v0.c0))>=((v0.c2, vt0.c0, v0.c2))))) INNER JOIN vt0 ON ((CASE v0.c2  WHEN t1.c2 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) ISNULL)) AND (v0.c0)) WHERE (((t1.c0)AND((((NOT (vt0.c0)))>(((((v0.c1)AND(v0.c1)))AND(t1.c1))))))) ORDER BY vt0.c1  NULLS FIRST, (~ (v0.c0 COLLATE NOCASE)) LIMIT 0X1;
SELECT MAX(vt0.c0) FROM v0, vt0 WHERE (((((v0.c1)=(v0.c0)))>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1))))) ORDER BY ((v0.c0 IN ()) IN (NULL))  NULLS LAST;
SELECT DISTINCT MAX(vt0.c0) FROM v0, vt0 WHERE (((((((v0.c1)=(v0.c0)))>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)))))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((SQLITE_COMPILEOPTION_USED(v0.c0))))))) ORDER BY ((v0.c0 IN ()) IN (NULL))  NULLS LAST LIMIT 0x2 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM v0, vt0 WHERE ((('1m䪁tapHP6')GLOB(v0.c1)) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((v0.c0 IN ()) IN (NULL))  NULLS LAST LIMIT 2;
SELECT ALL MIN(t1.c1) FROM t1, vt0 WHERE ('1348876151' COLLATE RTRIM) ORDER BY t1.c2 ASC;
SELECT DISTINCT MIN(t1.c1) FROM t1, vt0 WHERE ((('1348876151' COLLATE RTRIM)AND(CASE ((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))OR(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((x'eabd'))) THEN t1.c0 END))) ORDER BY ((0.038420002195315384) IS TRUE)  NULLS LAST, CASE WHEN 0.29809173476160566 THEN CASE WHEN t1.c2 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN ((((((((((vt0.c1)AND(t1.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) THEN ((((((((t1.c0)AND(t1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t1.c1)) END  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1, vt0 WHERE (CASE WHEN t1.c0 THEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'5ffd')) ELSE (t1.c0 IN ()) END) ORDER BY ((0.038420002195315384) IS TRUE)  NULLS LAST, CASE WHEN 0.29809173476160566 THEN CASE WHEN t1.c2 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN ((((((((((vt0.c1)AND(t1.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) THEN ((((((((t1.c0)AND(t1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t1.c1)) END  NULLS FIRST;
SELECT * FROM v0 WHERE (((CAST(v0.c1 AS BLOB))+((NOT (v0.c2)))));
SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c1 AS BLOB))+((NOT (v0.c2))))) ORDER BY v0.c1 ASC  NULLS FIRST, (((((v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0)) AND ((v0.c2, v0.c2)))) IS TRUE) DESC, (((v0.c1, v0.c0, v0.c0, v0.c2)) BETWEEN ((v0.c2 COLLATE NOCASE, CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN 'months' THEN v0.c2 ELSE v0.c0 END, json_object(v0.c0, v0.c2, v0.c2), (- (v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC), ((v0.c1) IS FALSE), CASE '()G'  WHEN v0.c0 THEN v0.c0 END, ((((((v0.c1)AND('0.20921173888960787')))AND(v0.c1)))OR(v0.c2))))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM v0 WHERE ((~ (v0.c2))) ORDER BY v0.c1 ASC  NULLS FIRST, (((((v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0)) AND ((v0.c2, v0.c2)))) IS TRUE) DESC, (((v0.c1, v0.c0, v0.c0, v0.c2)) BETWEEN ((v0.c2 COLLATE NOCASE, CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN 'months' THEN v0.c2 ELSE v0.c0 END, json_object(v0.c0, v0.c2, v0.c2), (- (v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC), ((v0.c1) IS FALSE), CASE '()G'  WHEN v0.c0 THEN v0.c0 END, ((((((v0.c1)AND('0.20921173888960787')))AND(v0.c1)))OR(v0.c2))))) LIMIT 0X2;
SELECT * FROM v0 WHERE (((CAST(v0.c1 AS BLOB))+((NOT (v0.c2)))));
SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c1 AS BLOB))+((NOT (v0.c2))))) ORDER BY v0.c1 ASC  NULLS FIRST, (((((v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0)) AND ((v0.c2, v0.c2)))) IS TRUE) DESC, (((v0.c1, v0.c0, v0.c0, v0.c2)) BETWEEN ((v0.c2 COLLATE NOCASE, CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN 'months' THEN v0.c2 ELSE v0.c0 END, json_object(v0.c0, v0.c2, v0.c2), (- (v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC), ((v0.c1) IS FALSE), CASE '()G'  WHEN v0.c0 THEN v0.c0 END, ((((((v0.c1)AND('0.20921173888960787')))AND(v0.c1)))OR(v0.c2))))) LIMIT 2 INTERSECT SELECT DISTINCT * FROM v0 WHERE ((~ (v0.c2))) ORDER BY v0.c1 ASC  NULLS FIRST, (((((v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0)) AND ((v0.c2, v0.c2)))) IS TRUE) DESC, (((v0.c1, v0.c0, v0.c0, v0.c2)) BETWEEN ((v0.c2 COLLATE NOCASE, CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN 'months' THEN v0.c2 ELSE v0.c0 END, json_object(v0.c0, v0.c2, v0.c2), (- (v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC), ((v0.c1) IS FALSE), CASE '()G'  WHEN v0.c0 THEN v0.c0 END, ((((((v0.c1)AND('0.20921173888960787')))AND(v0.c1)))OR(v0.c2))))) LIMIT 0X2;
SELECT * FROM vt0, v0 WHERE (((((((((vt0.c1)OR(v0.c2)))AND(vt0.c1)))AND(vt0.c0)))-(((vt0.c1) NOT BETWEEN (NULL) AND (v0.c0)))));
SELECT * FROM vt0, v0 WHERE (((((((((vt0.c1)OR(v0.c2)))AND(vt0.c1)))AND(vt0.c0)))-(((vt0.c1) NOT BETWEEN (NULL) AND (v0.c0))))) ORDER BY ((((v0.c2) IS TRUE)) ISNULL) ASC  NULLS LAST, (((v0.c2, v0.c2)) BETWEEN ((((vt0.c1) NOTNULL), ((((((((((v0.c2)AND(NULL)))OR(v0.c2)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)), (+ (v0.c0)))))  NULLS LAST, CAST(CAST(0.4731717161104815 AS INTEGER) AS BLOB)  NULLS FIRST LIMIT 0X1;
SELECT * FROM vt0, v0 WHERE (((((((((vt0.c1)OR(v0.c2)))AND(vt0.c1)))AND(vt0.c0)))-(((vt0.c1) NOT BETWEEN (NULL) AND (v0.c0)))));
SELECT * FROM vt0, v0 WHERE (((((((((vt0.c1)OR(v0.c2)))AND(vt0.c1)))AND(vt0.c0)))-(((vt0.c1) NOT BETWEEN (NULL) AND (v0.c0))))) ORDER BY ((((v0.c2) IS TRUE)) ISNULL) ASC  NULLS LAST, (((v0.c2, v0.c2)) BETWEEN ((((vt0.c1) NOTNULL), ((((((((((v0.c2)AND(NULL)))OR(v0.c2)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)), (+ (v0.c0)))))  NULLS LAST, CAST(CAST(0.4731717161104815 AS INTEGER) AS BLOB)  NULLS FIRST LIMIT 0X1;
SELECT ALL * FROM t1, v0 NATURAL JOIN vt0 WHERE (((- (v0.c2)) IN (((((vt0.c1)AND(NULL)))OR(v0.c0)))));
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((((- (v0.c2)) IN (((((vt0.c1)AND(NULL)))OR(v0.c0)))))AND(CAST((('-2132890680')>=(v0.c0)) AS REAL))));
SELECT ALL * FROM t1, v0 NATURAL JOIN vt0 WHERE (((- (v0.c2)) IN (((((vt0.c1)AND(NULL)))OR(v0.c0)))));
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((((- (v0.c2)) IN (((((vt0.c1)AND(NULL)))OR(v0.c0)))))AND(CAST((('-2132890680')>=(v0.c0)) AS REAL))));
SELECT * FROM t1, vt0, v0 WHERE (UNLIKELY(((((((((((vt0.c0)AND(t1.c2)))AND(vt0.c1)))OR(NULL)))AND(t1.c1)))OR(vt0.c0))));
SELECT ALL * FROM t1, vt0, v0 WHERE (((UNLIKELY(((((((((((vt0.c0)AND(t1.c2)))AND(vt0.c1)))OR(NULL)))AND(t1.c1)))OR(vt0.c0))))AND(((highlight(v0.c1, t1.c0, t1.c1, v0.c0)) NOT BETWEEN (CASE vt0.c1  WHEN t1.c1 THEN v0.c2 END) AND (((t1.c0)LIKE(vt0.c0))))))) LIMIT 0x0 INTERSECT SELECT * FROM t1, vt0 NOT INDEXED, v0 WHERE ((((UNICODE(vt0.c0), ((v0.c0) IS TRUE)))=((((t1.c0) ISNULL), ((t1.c1) NOT BETWEEN (t1.c0) AND (v0.c1)))))) LIMIT 0x0;
SELECT * FROM t1, vt0, v0 WHERE (UNLIKELY(((((((((((vt0.c0)AND(t1.c2)))AND(vt0.c1)))OR(NULL)))AND(t1.c1)))OR(vt0.c0))));
SELECT ALL * FROM t1, vt0, v0 WHERE (((UNLIKELY(((((((((((vt0.c0)AND(t1.c2)))AND(vt0.c1)))OR(NULL)))AND(t1.c1)))OR(vt0.c0))))AND(((highlight(v0.c1, t1.c0, t1.c1, v0.c0)) NOT BETWEEN (CASE vt0.c1  WHEN t1.c1 THEN v0.c2 END) AND (((t1.c0)LIKE(vt0.c0))))))) LIMIT 0x0 INTERSECT SELECT * FROM t1, vt0 NOT INDEXED, v0 WHERE ((((UNICODE(vt0.c0), ((v0.c0) IS TRUE)))=((((t1.c0) ISNULL), ((t1.c1) NOT BETWEEN (t1.c0) AND (v0.c1)))))) LIMIT 0x0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1)) NOT BETWEEN (((NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((vt0.c1 IN (vt0.c1)), (((vt0.c1, vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c1, vt0.c1, vt0.c0))))))) ORDER BY CAST((+ (vt0.c1)) AS REAL) ASC;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c1)) NOT BETWEEN (((NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((vt0.c1 IN (vt0.c1)), (((vt0.c1, vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c1, vt0.c0)))))))AND((CASE WHEN 210243321 THEN vt0.c1 END IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))))) ORDER BY CAST((+ (vt0.c1)) AS REAL) ASC LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((~ (6.85232261E8))) ORDER BY CAST((+ (vt0.c1)) AS REAL) ASC LIMIT 0X2;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1)) NOT BETWEEN (((NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((vt0.c1 IN (vt0.c1)), (((vt0.c1, vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c1, vt0.c1, vt0.c0))))))) ORDER BY CAST((+ (vt0.c1)) AS REAL) ASC;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c1)) NOT BETWEEN (((NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((vt0.c1 IN (vt0.c1)), (((vt0.c1, vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c1, vt0.c0)))))))AND((CASE WHEN 210243321 THEN vt0.c1 END IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))))) ORDER BY CAST((+ (vt0.c1)) AS REAL) ASC LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((~ (6.85232261E8))) ORDER BY CAST((+ (vt0.c1)) AS REAL) ASC LIMIT 0X2;
SELECT ALL * FROM v0, vt0 WHERE (LIKELY(DISTINCT CASE v0.c0  WHEN vt0.c1 THEN v0.c2 WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 END)) ORDER BY CAST('1995388678' AS REAL) DESC, (((vt0.c1)) NOT BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) AND ((((vt0.c1)!=(0Xfffffffff96297d3)))));
SELECT ALL * FROM v0, vt0 WHERE (((LIKELY(DISTINCT CASE v0.c0  WHEN vt0.c1 THEN v0.c2 WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 END))AND(CASE WHEN ((v0.c1)LIKE(v0.c1)) THEN ((v0.c1) NOT NULL) ELSE vt0.c1 COLLATE RTRIM END))) ORDER BY (((((vt0.c1, '>oX6soQy', vt0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c1)) AND ((v0.c2, vt0.c0, v0.c2))))+(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))) LIMIT 0x0 INTERSECT SELECT * FROM v0, vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), v0.c0 COLLATE BINARY)) ORDER BY (((((vt0.c1, '>oX6soQy', vt0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c1)) AND ((v0.c2, vt0.c0, v0.c2))))+(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))) LIMIT 0;
SELECT ALL * FROM v0, vt0 WHERE (LIKELY(DISTINCT CASE v0.c0  WHEN vt0.c1 THEN v0.c2 WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 END)) ORDER BY CAST('1995388678' AS REAL) DESC, (((vt0.c1)) NOT BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) AND ((((vt0.c1)!=(0Xfffffffff96297d3)))));
SELECT ALL * FROM v0, vt0 WHERE (((LIKELY(DISTINCT CASE v0.c0  WHEN vt0.c1 THEN v0.c2 WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 END))AND(CASE WHEN ((v0.c1)LIKE(v0.c1)) THEN ((v0.c1) NOT NULL) ELSE vt0.c1 COLLATE RTRIM END))) ORDER BY (((((vt0.c1, '>oX6soQy', vt0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c1)) AND ((v0.c2, vt0.c0, v0.c2))))+(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))) LIMIT 0x0 INTERSECT SELECT * FROM v0, vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), v0.c0 COLLATE BINARY)) ORDER BY (((((vt0.c1, '>oX6soQy', vt0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c1)) AND ((v0.c2, vt0.c0, v0.c2))))+(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))) LIMIT 0;
SELECT * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE '0.8197347745257832' END AS INTEGER)) ORDER BY (((vt0.c1, '')) BETWEEN (('-1313823572', (((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c0, 0.37939170576943737, vt0.c1, vt0.c1, 0.5280773225298964))))) AND ((vt0.c0, ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE '0.8197347745257832' END AS INTEGER))AND(MAX(((vt0.c0) ISNULL), ((vt0.c1) BETWEEN (vt0.c1) AND (NULL)), ((vt0.c0)>=(vt0.c0)), (vt0.c1 IN (vt0.c1)), '41028994')))) ORDER BY (((vt0.c1, '')) BETWEEN (('-1313823572', (((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c0, 0.37939170576943737, vt0.c1, vt0.c1, 0.5280773225298964))))) AND ((vt0.c0, ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))))  NULLS LAST LIMIT 1;
SELECT * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE '0.8197347745257832' END AS INTEGER)) ORDER BY (((vt0.c1, '')) BETWEEN (('-1313823572', (((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c0, 0.37939170576943737, vt0.c1, vt0.c1, 0.5280773225298964))))) AND ((vt0.c0, ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE '0.8197347745257832' END AS INTEGER))AND(MAX(((vt0.c0) ISNULL), ((vt0.c1) BETWEEN (vt0.c1) AND (NULL)), ((vt0.c0)>=(vt0.c0)), (vt0.c1 IN (vt0.c1)), '41028994')))) ORDER BY (((vt0.c1, '')) BETWEEN (('-1313823572', (((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c0, 0.37939170576943737, vt0.c1, vt0.c1, 0.5280773225298964))))) AND ((vt0.c0, ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))))  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt0, t1 WHERE (((((((vt0.c0, t1.c1, 0.31013891137003424)) NOT BETWEEN ((vt0.c1, t1.c0, vt0.c1)) AND ((-1, vt0.c0, t1.c0))), CAST(vt0.c0 AS TEXT), CAST(t1.c0 AS TEXT), x''))>=((((vt0.c1) NOT BETWEEN (1514797807) AND (x'40')), (t1.c2 IN ()), ((0.8038136217628027)GLOB(t1.c2)), vt0.c0))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((((((vt0.c0, t1.c1, 0.31013891137003424)) NOT BETWEEN ((vt0.c1, t1.c0, vt0.c1)) AND ((-1, vt0.c0, t1.c0))), CAST(vt0.c0 AS TEXT), CAST(t1.c0 AS TEXT), x''))>=((((vt0.c1) NOT BETWEEN (1514797807) AND (x'40')), (t1.c2 IN ()), ((0.8038136217628027)GLOB(t1.c2)), vt0.c0))))AND(vt0.c0))) INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (LIKELIHOOD((+ (t1.c1)), ((((vt0.c1)OR(t1.c1)))OR(vt0.c1))));
SELECT ALL * FROM vt0, t1 WHERE (((((((vt0.c0, t1.c1, 0.31013891137003424)) NOT BETWEEN ((vt0.c1, t1.c0, vt0.c1)) AND ((-1, vt0.c0, t1.c0))), CAST(vt0.c0 AS TEXT), CAST(t1.c0 AS TEXT), x''))>=((((vt0.c1) NOT BETWEEN (1514797807) AND (x'40')), (t1.c2 IN ()), ((0.8038136217628027)GLOB(t1.c2)), vt0.c0))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((((((vt0.c0, t1.c1, 0.31013891137003424)) NOT BETWEEN ((vt0.c1, t1.c0, vt0.c1)) AND ((-1, vt0.c0, t1.c0))), CAST(vt0.c0 AS TEXT), CAST(t1.c0 AS TEXT), x''))>=((((vt0.c1) NOT BETWEEN (1514797807) AND (x'40')), (t1.c2 IN ()), ((0.8038136217628027)GLOB(t1.c2)), vt0.c0))))AND(vt0.c0))) INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (LIKELIHOOD((+ (t1.c1)), ((((vt0.c1)OR(t1.c1)))OR(vt0.c1))));
SELECT ALL * FROM v0, t1, vt0 WHERE (((((v0.c0) BETWEEN (t1.c2) AND (v0.c2))) ISNULL));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((v0.c0) BETWEEN (t1.c2) AND (v0.c2))) ISNULL)) LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE (0.9468579391627957) LIMIT 1;
SELECT ALL * FROM v0, t1, vt0 WHERE (((((v0.c0) BETWEEN (t1.c2) AND (v0.c2))) ISNULL));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((v0.c0) BETWEEN (t1.c2) AND (v0.c2))) ISNULL)) LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE (0.9468579391627957) LIMIT 1;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB)) ORDER BY highlight(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)), (('-1764809039')>=(vt0.c1)), vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE '' END) ASC;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB)) ORDER BY ((((0.8617557130873932) NOT BETWEEN (vt0.c1) AND (vt0.c0))) IS TRUE)  NULLS FIRST, ((CAST('B' AS INTEGER))<>(vt0.c1 COLLATE BINARY))  NULLS FIRST LIMIT 1;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB)) ORDER BY highlight(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)), (('-1764809039')>=(vt0.c1)), vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE '' END) ASC;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB)) ORDER BY ((((0.8617557130873932) NOT BETWEEN (vt0.c1) AND (vt0.c0))) IS TRUE)  NULLS FIRST, ((CAST('B' AS INTEGER))<>(vt0.c1 COLLATE BINARY))  NULLS FIRST LIMIT 1;
SELECT ALL * FROM vt0, v0 NATURAL JOIN t1 WHERE (LIKELIHOOD(CAST(vt0.c1 AS INTEGER), (((t1.c0))<=((v0.c2))))) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c2 END)&((((vt0.c0)) BETWEEN ((v0.c0)) AND ((t1.c2)))))  NULLS FIRST, ((v0.c2 COLLATE RTRIM)||('-189340322')) ASC, ((LAST_INSERT_ROWID())||(((t1.c2) BETWEEN (t1.c0) AND (t1.c1))))  NULLS LAST, (((v0.c1)) NOT BETWEEN (((~ (t1.c1)))) AND ((x'' COLLATE RTRIM))) DESC;
SELECT DISTINCT * FROM vt0, v0 NATURAL JOIN t1 WHERE (((LIKELIHOOD(CAST(vt0.c1 AS INTEGER), (((t1.c0))<=((v0.c2)))))AND((((((v0.c1)) BETWEEN ((vt0.c1)) AND ((t1.c0)))) NOT BETWEEN ((((v0.c1))<((vt0.c1)))) AND (LTRIM(t1.c1, vt0.c1)))))) ORDER BY load_extension(CAST(v0.c0 AS REAL))  NULLS FIRST, ((NULL) NOT BETWEEN (((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0, vt0.c0)) BETWEEN ((v0.c2, t1.c1)) AND ((t1.c0, x''))))) ASC  NULLS FIRST, (((~ (vt0.c1))) IS TRUE);
SELECT ALL * FROM vt0, v0 NATURAL JOIN t1 WHERE (LIKELIHOOD(CAST(vt0.c1 AS INTEGER), (((t1.c0))<=((v0.c2))))) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c2 END)&((((vt0.c0)) BETWEEN ((v0.c0)) AND ((t1.c2)))))  NULLS FIRST, ((v0.c2 COLLATE RTRIM)||('-189340322')) ASC, ((LAST_INSERT_ROWID())||(((t1.c2) BETWEEN (t1.c0) AND (t1.c1))))  NULLS LAST, (((v0.c1)) NOT BETWEEN (((~ (t1.c1)))) AND ((x'' COLLATE RTRIM))) DESC;
SELECT ALL MAX(v0.c0) FROM v0 WHERE (0xffffffffcd54e8c3) ORDER BY 0.21750767495108603  NULLS LAST, (((NULL))>=((((v0.c0) ISNULL)))) ASC  NULLS FIRST;
SELECT MAX(v0.c0) FROM v0 WHERE (-850073405) ORDER BY 0.21750767495108603  NULLS LAST, (((NULL))>=((((v0.c0) ISNULL)))) ASC  NULLS FIRST LIMIT 0x3;
SELECT ALL MIN(t1.c0) FROM t1 NATURAL JOIN v0 INNER JOIN vt0 ON t1.c0 WHERE (json_extract((((t1.c1, '9]2', -220572527, v0.c0))=((v0.c2, v0.c2, vt0.c0, v0.c2))), ((t1.c1) ISNULL), SQLITE_COMPILEOPTION_GET(t1.c0), ((v0.c2) IS FALSE), (NOT (t1.c1)))) ORDER BY CAST(((vt0.c0)&(v0.c0)) AS NUMERIC)  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1 NATURAL JOIN v0 INNER JOIN vt0 ON t1.c0 WHERE (((json_extract((((t1.c1, '9]2', 0xfffffffff2da5491, v0.c0))=((v0.c2, v0.c2, vt0.c0, v0.c2))), ((t1.c1) ISNULL), SQLITE_COMPILEOPTION_GET(t1.c0), ((v0.c2) IS FALSE), (NOT (t1.c1))))AND(json_object(x'' COLLATE NOCASE, x'' COLLATE NOCASE, ((vt0.c1) ISNULL), (~ (vt0.c0)))))) ORDER BY CAST(((vt0.c0)&(v0.c0)) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((CASE t1.c2  WHEN t1.c2 THEN t1.c0 WHEN -1156819281 THEN t1.c0 END IN (((t1.c1) NOTNULL))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((CASE t1.c2  WHEN t1.c2 THEN t1.c0 WHEN 0Xffffffffbb0c56af THEN t1.c0 END IN (((t1.c1) NOTNULL))))AND((((t1.c1)/(t1.c0)) IN ((((t1.c1, t1.c2, t1.c1, t1.c1, t1.c2))>=((t1.c0, t1.c2, t1.c2, t1.c2, t1.c0)))))))) ORDER BY t1.c0 ASC, (((('0') IS TRUE)) BETWEEN ((((t1.c0, t1.c1, t1.c0, t1.c0))<=((t1.c0, t1.c1, t1.c0, t1.c2)))) AND (((t1.c2)OR(t1.c2)))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (IFNULL(DISTINCT (((0.8958701537373375, t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c2, t1.c1, t1.c1, t1.c2)) AND ((x'', t1.c1, t1.c0, t1.c2))), (((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))) ORDER BY t1.c0 ASC, (((('0') IS TRUE)) BETWEEN ((((t1.c0, t1.c1, t1.c0, t1.c0))<=((t1.c0, t1.c1, t1.c0, t1.c2)))) AND (((t1.c2)OR(t1.c2)))) LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((((t1.c2)OR(t1.c2)))OR(t1.c1)) THEN (- ('241584499')) WHEN ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)) THEN ((t1.c2)/(t1.c2)) WHEN CASE t1.c2  WHEN t1.c2 THEN t1.c1 WHEN NULL THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'a7' ELSE t1.c2 END THEN ((((((t1.c2)OR('')))AND(t1.c0)))AND(t1.c2)) WHEN '4Zg棻jp
' THEN COALESCE(t1.c1, t1.c0, NULL, t1.c0) END);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE WHEN ((((t1.c2)OR(t1.c2)))OR(t1.c1)) THEN (- ('241584499')) WHEN ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)) THEN ((t1.c2)/(t1.c2)) WHEN CASE t1.c2  WHEN t1.c2 THEN t1.c1 WHEN NULL THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN x'a7' ELSE t1.c2 END THEN ((((((t1.c2)OR('')))AND(t1.c0)))AND(t1.c2)) WHEN '4Zg棻jp
' THEN COALESCE(t1.c1, t1.c0, NULL, t1.c0) END)AND(TRIM(DISTINCT ((t1.c0)!=(t1.c1)))))) ORDER BY t1.c0 LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1 WHERE (COALESCE(((t1.c0)*(t1.c0)), ((t1.c0)|(t1.c0)), ((t1.c1)LIKE(t1.c2)), CAST(x'de' AS NUMERIC)));
SELECT ALL COUNT(*) FROM t1 WHERE (COALESCE(((t1.c0)*(t1.c0)), ((t1.c0)|(t1.c0)), ((t1.c1)LIKE(t1.c2)), CAST(x'de' AS NUMERIC))) ORDER BY t1.c1;
SELECT ALL MIN(t1.c0) FROM t1, vt0 WHERE ((((CAST(t1.c1 AS TEXT), vt0.c1))<((CASE t1.c2  WHEN '' THEN t1.c1 WHEN t1.c0 THEN 0.4132284029627804 END, ((t1.c0) NOT NULL)))));
SELECT MIN(t1.c0) FROM t1, vt0 WHERE ((((CAST(t1.c1 AS TEXT), vt0.c1))<((CASE t1.c2  WHEN '' THEN t1.c1 WHEN t1.c0 THEN 0.4132284029627804 END, ((t1.c0) NOT NULL))))) INTERSECT SELECT ALL MIN(t1.c0) FROM t1, vt0 WHERE ('1956211948');
SELECT MIN(v0.c0) FROM v0, t1 WHERE ((((((((((((t1.c1, v0.c2)) NOT BETWEEN ((v0.c2, t1.c2)) AND ((v0.c1, t1.c2))))OR(((((0.1685248674047869)OR(t1.c1)))OR(v0.c2)))))OR((t1.c2 IN (t1.c2)))))AND(((t1.c2)*(t1.c2)))))OR(((((((((t1.c0)OR(x'b1')))OR(t1.c1)))OR(t1.c1)))OR(v0.c0)))));
SELECT DISTINCT MIN(v0.c0) FROM v0, t1 WHERE ((((((((((((((t1.c1, v0.c2)) NOT BETWEEN ((v0.c2, t1.c2)) AND ((v0.c1, t1.c2))))OR(((((0.1685248674047869)OR(t1.c1)))OR(v0.c2)))))OR((t1.c2 IN (t1.c2)))))AND(((t1.c2)*(t1.c2)))))OR(((((((((t1.c0)OR(x'b1')))OR(t1.c1)))OR(t1.c1)))OR(v0.c0)))))AND((t1.c0 IN (((t1.c1)OR(v0.c0))))))) INTERSECT SELECT DISTINCT MIN(v0.c0) FROM v0, t1 WHERE (CASE (((0.6423486276541338, v0.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((v0.c0, v0.c1)))  WHEN CAST(x'' AS INTEGER) THEN v0.c2 WHEN ((((((t1.c1)AND(t1.c2)))OR(v0.c2)))OR(v0.c2)) THEN t1.c1 COLLATE NOCASE WHEN ((t1.c2) IS FALSE) THEN (NOT (t1.c1)) END);
SELECT * FROM v0 WHERE (((('1639634754', v0.c0, v0.c0)) NOT BETWEEN (((NOT (v0.c0)), ((v0.c0)<(v0.c1)), (((v0.c2, v0.c0, v0.c2, v0.c2, v0.c1, v0.c0))<((v0.c2, v0.c2, v0.c2, v0.c0, v0.c0, v0.c0))))) AND ((((v0.c2)<(v0.c1)), SQLITE_VERSION(), ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))))) ORDER BY v0.c0 DESC;
SELECT DISTINCT * FROM v0 WHERE (((((('1639634754', v0.c0, v0.c0)) NOT BETWEEN (((NOT (v0.c0)), ((v0.c0)<(v0.c1)), (((v0.c2, v0.c0, v0.c2, v0.c2, v0.c1, v0.c0))<((v0.c2, v0.c2, v0.c2, v0.c0, v0.c0, v0.c0))))) AND ((((v0.c2)<(v0.c1)), SQLITE_VERSION(), ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0))))))AND(json_patch(((v0.c2)>=(v0.c2)), (~ (v0.c1)))))) ORDER BY v0.c0 DESC INTERSECT SELECT DISTINCT * FROM v0 WHERE ((v0.c2 IN (((v0.c0) IS FALSE), '0.9594471581869118', (NOT (v0.c2))))) ORDER BY v0.c0 DESC;
SELECT * FROM v0 WHERE (((('1639634754', v0.c0, v0.c0)) NOT BETWEEN (((NOT (v0.c0)), ((v0.c0)<(v0.c1)), (((v0.c2, v0.c0, v0.c2, v0.c2, v0.c1, v0.c0))<((v0.c2, v0.c2, v0.c2, v0.c0, v0.c0, v0.c0))))) AND ((((v0.c2)<(v0.c1)), SQLITE_VERSION(), ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))))) ORDER BY v0.c0 DESC;
SELECT DISTINCT * FROM v0 WHERE (((((('1639634754', v0.c0, v0.c0)) NOT BETWEEN (((NOT (v0.c0)), ((v0.c0)<(v0.c1)), (((v0.c2, v0.c0, v0.c2, v0.c2, v0.c1, v0.c0))<((v0.c2, v0.c2, v0.c2, v0.c0, v0.c0, v0.c0))))) AND ((((v0.c2)<(v0.c1)), SQLITE_VERSION(), ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0))))))AND(json_patch(((v0.c2)>=(v0.c2)), (~ (v0.c1)))))) ORDER BY v0.c0 DESC INTERSECT SELECT DISTINCT * FROM v0 WHERE ((v0.c2 IN (((v0.c0) IS FALSE), '0.9594471581869118', (NOT (v0.c2))))) ORDER BY v0.c0 DESC;
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c1) IS TRUE) IN ()) WHERE ((((((vt0.c0, vt0.c1))<=((t1.c2, vt0.c0)))) NOT BETWEEN (CAST(t1.c2 AS NUMERIC)) AND (((vt0.c1)IS NOT(t1.c2)))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON (((vt0.c1) IS TRUE) IN ()) WHERE ((((((vt0.c0, vt0.c1))<=((t1.c2, vt0.c0)))) NOT BETWEEN (CAST(t1.c2 AS NUMERIC)) AND (((vt0.c1)IS NOT(t1.c2))))) ORDER BY x'80'  NULLS LAST, (((((vt0.c0, t1.c0, vt0.c0, vt0.c1))>=(('1200319629', t1.c0, t1.c0, t1.c2))))OR(((((((((vt0.c0)AND(vt0.c1)))OR(t1.c1)))AND(t1.c1)))AND(0.5012391313742609)))) ASC LIMIT 0x2 INTERSECT SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON (((vt0.c1) IS TRUE) IN ()) WHERE ((((- (t1.c1)))=(CASE x'c58b'  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN t1.c2 END))) ORDER BY x'80'  NULLS LAST, (((((vt0.c0, t1.c0, vt0.c0, vt0.c1))>=(('1200319629', t1.c0, t1.c0, t1.c2))))OR(((((((((vt0.c0)AND(vt0.c1)))OR(t1.c1)))AND(t1.c1)))AND(0.5012391313742609)))) ASC LIMIT 0x2;
SELECT MIN(t1.c2) FROM t1 WHERE (((t1.c2) IS TRUE) COLLATE NOCASE) ORDER BY ((LIKELIHOOD(DISTINCT t1.c0, 'M'))IS(CAST(t1.c1 AS REAL)))  NULLS FIRST;
SELECT DISTINCT MIN(t1.c2) FROM t1 WHERE (((t1.c2) IS TRUE) COLLATE NOCASE) ORDER BY ((LIKELIHOOD(DISTINCT t1.c0, 'M'))IS(CAST(t1.c1 AS REAL)))  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t1.c2) FROM t1 WHERE ((~ (t1.c1 COLLATE RTRIM))) ORDER BY ((LIKELIHOOD(DISTINCT t1.c0, 'M'))IS(CAST(t1.c1 AS REAL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE ((vt0.c1)|(t1.c0))  WHEN (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c0, vt0.c1, t1.c2)) AND ((-2.75731388E8, t1.c0, vt0.c1))) THEN CASE WHEN vt0.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c2 WHEN t1.c1 THEN t1.c2 END WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c0)) THEN CASE WHEN 0.2480178941768234 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 END END) ORDER BY ((NULL) BETWEEN (NULL) AND (x'')) ASC;
SELECT COUNT(*) FROM vt0, t1 WHERE (((CASE ((vt0.c1)|(t1.c0))  WHEN (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c0, vt0.c1, t1.c2)) AND ((-2.75731388E8, t1.c0, vt0.c1))) THEN CASE WHEN vt0.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c2 WHEN t1.c1 THEN t1.c2 END WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c0)) THEN CASE WHEN 0.2480178941768234 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 END END)AND(CASE WHEN '1226535833' THEN t1.c0 END COLLATE RTRIM))) ORDER BY ((NULL) BETWEEN (NULL) AND (x'')) ASC;
SELECT ALL MIN(v0.c1) FROM v0 WHERE (((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END)>>(v0.c2 COLLATE BINARY))) ORDER BY ((CASE v0.c1  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END) NOT BETWEEN (json_valid(v0.c2)) AND ((NOT (v0.c1)))) DESC;
SELECT DISTINCT MIN(v0.c1) FROM v0 WHERE (((((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END)>>(v0.c2 COLLATE BINARY)))AND(((CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 END) NOT BETWEEN (((v0.c2) IS TRUE)) AND (((v0.c0) BETWEEN (v0.c1) AND (v0.c2))))))) ORDER BY MAX(((((v0.c1)OR(v0.c1)))AND(v0.c0)), '-1635930072') DESC, v0.c1 ASC LIMIT 0;
SELECT ALL * FROM t1, v0 WHERE ((~ (CASE WHEN t1.c2 THEN v0.c1 WHEN v0.c1 THEN t1.c0 ELSE v0.c1 END))) ORDER BY t1.c0 ASC  NULLS LAST, ((((t1.c0) NOTNULL))IS(SQLITE_COMPILEOPTION_GET(v0.c1)));
SELECT DISTINCT * FROM t1, v0 WHERE ((((~ (CASE WHEN t1.c2 THEN v0.c1 WHEN v0.c1 THEN t1.c0 ELSE v0.c1 END)))AND((((t1.c2, t1.c1)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, ((v0.c0) NOTNULL))) AND ((t1.c1 COLLATE RTRIM, CASE WHEN v0.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN v0.c1 THEN 0xfffffffff4c6c23e END)))))) ORDER BY ((v0.c0 COLLATE RTRIM)*(((t1.c1) NOT BETWEEN (v0.c2) AND (t1.c2)))) ASC INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (CASE 0xffffffffc37749e2  WHEN t1.c1 COLLATE BINARY THEN ((((((v0.c0)AND(v0.c2)))OR(t1.c2)))AND(v0.c1)) WHEN ((t1.c2)LIKE(v0.c0)) THEN ((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) END) ORDER BY ((v0.c0 COLLATE RTRIM)*(((t1.c1) NOT BETWEEN (v0.c2) AND (t1.c2)))) ASC;
SELECT ALL * FROM t1, v0 WHERE ((~ (CASE WHEN t1.c2 THEN v0.c1 WHEN v0.c1 THEN t1.c0 ELSE v0.c1 END))) ORDER BY t1.c0 ASC  NULLS LAST, ((((t1.c0) NOTNULL))IS(SQLITE_COMPILEOPTION_GET(v0.c1)));
SELECT DISTINCT * FROM t1, v0 WHERE ((((~ (CASE WHEN t1.c2 THEN v0.c1 WHEN v0.c1 THEN t1.c0 ELSE v0.c1 END)))AND((((t1.c2, t1.c1)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, ((v0.c0) NOTNULL))) AND ((t1.c1 COLLATE RTRIM, CASE WHEN v0.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN v0.c1 THEN 0xfffffffff4c6c23e END)))))) ORDER BY ((v0.c0 COLLATE RTRIM)*(((t1.c1) NOT BETWEEN (v0.c2) AND (t1.c2)))) ASC INTERSECT SELECT DISTINCT * FROM t1, v0 WHERE (CASE 0xffffffffc37749e2  WHEN t1.c1 COLLATE BINARY THEN ((((((v0.c0)AND(v0.c2)))OR(t1.c2)))AND(v0.c1)) WHEN ((t1.c2)LIKE(v0.c0)) THEN ((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) END) ORDER BY ((v0.c0 COLLATE RTRIM)*(((t1.c1) NOT BETWEEN (v0.c2) AND (t1.c2)))) ASC;
SELECT * FROM vt0, v0 INNER JOIN t1 ON LOWER(DISTINCT ((vt0.c1)||(v0.c0))) WHERE ((NOT (((t1.c2)>>(7.0346026E7))))) ORDER BY v0.c0 ASC;
SELECT ALL * FROM vt0, v0 INNER JOIN t1 ON LOWER(DISTINCT ((vt0.c1)||(v0.c0))) WHERE ((NOT (((t1.c2)>>(7.0346026E7))))) ORDER BY (((0Xffffffffad56e32a, 0.677347689806339, 0.7092057591533952, NULL)) NOT BETWEEN ((((t1.c2) BETWEEN (t1.c0) AND (t1.c2)), ((v0.c2)<(t1.c1)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c2)), (- (0.3726457443772905)))) AND (((((x'', v0.c2))>=((vt0.c1, t1.c1))), CAST(t1.c2 AS BLOB), CAST(0.8713995427234938 AS BLOB), vt0.c0 COLLATE NOCASE))) ASC LIMIT 0;
SELECT * FROM vt0, v0 INNER JOIN t1 ON LOWER(DISTINCT ((vt0.c1)||(v0.c0))) WHERE ((NOT (((t1.c2)>>(7.0346026E7))))) ORDER BY v0.c0 ASC;
SELECT ALL * FROM vt0, v0 INNER JOIN t1 ON LOWER(DISTINCT ((vt0.c1)||(v0.c0))) WHERE ((NOT (((t1.c2)>>(7.0346026E7))))) ORDER BY (((0Xffffffffad56e32a, 0.677347689806339, 0.7092057591533952, NULL)) NOT BETWEEN ((((t1.c2) BETWEEN (t1.c0) AND (t1.c2)), ((v0.c2)<(t1.c1)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c2)), (- (0.3726457443772905)))) AND (((((x'', v0.c2))>=((vt0.c1, t1.c1))), CAST(t1.c2 AS BLOB), CAST(0.8713995427234938 AS BLOB), vt0.c0 COLLATE NOCASE))) ASC LIMIT 0;
SELECT * FROM t1, vt0 WHERE (CAST(HEX(0.8043996442395248) AS NUMERIC)) ORDER BY (NOT (t1.c2)) COLLATE RTRIM;
SELECT DISTINCT * FROM t1, vt0 WHERE (CAST(HEX(0.8043996442395248) AS NUMERIC)) ORDER BY (~ (((((((t1.c2)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))), (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))IS(((vt0.c0) ISNULL))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE ((((t1.c0)) NOT BETWEEN ((CAST(t1.c1 AS TEXT))) AND ((NULL)))) ORDER BY (~ (((((((t1.c2)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))), (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))IS(((vt0.c0) ISNULL))) LIMIT 2;
SELECT * FROM t1, vt0 WHERE (CAST(HEX(0.8043996442395248) AS NUMERIC)) ORDER BY (NOT (t1.c2)) COLLATE RTRIM;
SELECT DISTINCT * FROM t1, vt0 WHERE (CAST(HEX(0.8043996442395248) AS NUMERIC)) ORDER BY (~ (((((((t1.c2)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))), (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))IS(((vt0.c0) ISNULL))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE ((((t1.c0)) NOT BETWEEN ((CAST(t1.c1 AS TEXT))) AND ((NULL)))) ORDER BY (~ (((((((t1.c2)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))), (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))IS(((vt0.c0) ISNULL))) LIMIT 2;
SELECT * FROM v0 WHERE ((((x'1e')<>(v0.c0)) IN (NULLIF(v0.c1, v0.c0), 'A<7WvX')));
SELECT DISTINCT * FROM v0 WHERE ((((((x'1e')<>(v0.c0)) IN (NULLIF(v0.c1, v0.c0), 'A<7WvX')))AND(((((v0.c2) BETWEEN ('1579820152') AND (v0.c2)))==(v0.c2 COLLATE RTRIM))))) ORDER BY ((((v0.c0) NOT NULL)) BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))) AND ((((0.8979479109320111)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))))  NULLS FIRST, x'8ed4d2dad7' ASC, CASE WHEN v0.c2 COLLATE BINARY THEN ((v0.c1)>=(v0.c0)) END  NULLS FIRST, ((v0.c1) NOT BETWEEN (json(v0.c2)) AND ((((v0.c2, v0.c0, v0.c2, v0.c2, v0.c0, v0.c1)) BETWEEN ((x'24', v0.c1, v0.c1, v0.c0, 0.849850779852909, v0.c1)) AND ((v0.c1, v0.c1, v0.c1, v0.c2, NULL, v0.c0)))))  NULLS LAST;
SELECT * FROM v0 WHERE ((((x'1e')<>(v0.c0)) IN (NULLIF(v0.c1, v0.c0), 'A<7WvX')));
SELECT DISTINCT * FROM v0 WHERE ((((((x'1e')<>(v0.c0)) IN (NULLIF(v0.c1, v0.c0), 'A<7WvX')))AND(((((v0.c2) BETWEEN ('1579820152') AND (v0.c2)))==(v0.c2 COLLATE RTRIM))))) ORDER BY ((((v0.c0) NOT NULL)) BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))) AND ((((0.8979479109320111)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))))  NULLS FIRST, x'8ed4d2dad7' ASC, CASE WHEN v0.c2 COLLATE BINARY THEN ((v0.c1)>=(v0.c0)) END  NULLS FIRST, ((v0.c1) NOT BETWEEN (json(v0.c2)) AND ((((v0.c2, v0.c0, v0.c2, v0.c2, v0.c0, v0.c1)) BETWEEN ((x'24', v0.c1, v0.c1, v0.c0, 0.849850779852909, v0.c1)) AND ((v0.c1, v0.c1, v0.c1, v0.c2, NULL, v0.c0)))))  NULLS LAST;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY CAST(load_extension(NULL) AS NUMERIC) DESC  NULLS FIRST, CAST(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC) ASC;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY CAST(load_extension(NULL) AS NUMERIC) DESC  NULLS FIRST, CAST(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC) ASC;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY CAST(load_extension(NULL) AS NUMERIC) DESC  NULLS FIRST, CAST(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC) ASC;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY CAST(load_extension(NULL) AS NUMERIC) DESC  NULLS FIRST, CAST(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM vt0, t1 LEFT OUTER JOIN v0 ON (CAST(vt0.c0 AS TEXT) IN (((((((v0.c2)AND(t1.c1)))AND(v0.c0)))OR(t1.c0)), NULL)) WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN vt0.c1 THEN t1.c2 END)>(v0.c1 COLLATE BINARY))) ORDER BY CAST(((t1.c1)AND(NULL)) AS INTEGER)  NULLS FIRST, (((CASE WHEN v0.c1 THEN v0.c2 END))<=(((v0.c1 IN (v0.c0, 0.8087544937317395)))))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0, t1 LEFT OUTER JOIN v0 ON (CAST(vt0.c0 AS TEXT) IN (((((((v0.c2)AND(t1.c1)))AND(v0.c0)))OR(t1.c0)), NULL)) WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN vt0.c1 THEN t1.c2 END)>(v0.c1 COLLATE BINARY))) ORDER BY ((((((CASE v0.c0  WHEN t1.c1 THEN t1.c0 ELSE vt0.c0 END)AND(t1.c1)))OR(CAST(0.6213791934074556 AS NUMERIC))))OR(((t1.c2) NOT BETWEEN (v0.c0) AND (v0.c1))))  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, t1 LEFT OUTER JOIN v0 ON (CAST(vt0.c0 AS TEXT) IN (((((((v0.c2)AND(t1.c1)))AND(v0.c0)))OR(t1.c0)), NULL)) WHERE (((((v0.c1)<<(v0.c2))) BETWEEN (((t1.c1) NOT BETWEEN (NULL) AND (vt0.c0))) AND ('228315338'))) ORDER BY ((((((CASE v0.c0  WHEN t1.c1 THEN t1.c0 ELSE vt0.c0 END)AND(t1.c1)))OR(CAST(0.6213791934074556 AS NUMERIC))))OR(((t1.c2) NOT BETWEEN (v0.c0) AND (v0.c1))))  NULLS LAST;
SELECT * FROM v0, vt0, t1 WHERE (((((((((((v0.c0)&(t1.c1)))AND(0.15483135464087572)))OR((((-539185683))<>((vt0.c0))))))AND((t1.c0 IN ()))))OR(((NULL) NOT NULL))));
SELECT * FROM v0, vt0, t1 NOT INDEXED WHERE (((((((((((v0.c0)&(t1.c1)))AND(0.15483135464087572)))OR((((0xffffffffdfdcaded))<((vt0.c0))))))AND((t1.c0 IN ()))))OR(((NULL) NOT NULL)))) LIMIT 0X0 INTERSECT SELECT * FROM v0, vt0, t1 WHERE ((((NULL))!=((t1.c2)))) LIMIT 0;
SELECT * FROM v0, vt0, t1 WHERE (((((((((((v0.c0)&(t1.c1)))AND(0.15483135464087572)))OR((((-539185683))<>((vt0.c0))))))AND((t1.c0 IN ()))))OR(((NULL) NOT NULL))));
SELECT * FROM v0, vt0, t1 NOT INDEXED WHERE (((((((((((v0.c0)&(t1.c1)))AND(0.15483135464087572)))OR((((0xffffffffdfdcaded))<((vt0.c0))))))AND((t1.c0 IN ()))))OR(((NULL) NOT NULL)))) LIMIT 0X0 INTERSECT SELECT * FROM v0, vt0, t1 WHERE ((((NULL))!=((t1.c2)))) LIMIT 0;
SELECT MIN(v0.c0) FROM v0, vt0, t1 WHERE (UNLIKELY(vt0.c0 COLLATE BINARY)) ORDER BY ((((t1.c1 IN (v0.c1, t1.c1))))<((vt0.c1 COLLATE RTRIM))) ASC;
SELECT ALL MIN(v0.c0) FROM v0, vt0, t1 WHERE (((UNLIKELY(vt0.c0 COLLATE BINARY))AND(CASE v0.c2  WHEN v0.c2 THEN t1.c0 WHEN t1.c2 THEN vt0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN vt0.c1 ELSE '808120973' END COLLATE RTRIM))) ORDER BY ((((t1.c1 IN (v0.c1, t1.c1))))<((vt0.c1 COLLATE RTRIM))) ASC LIMIT 0x0 INTERSECT SELECT MIN(v0.c0) FROM v0, vt0, t1 WHERE ((+ (vt0.c0))) ORDER BY ((((t1.c1 IN (v0.c1, t1.c1))))<((vt0.c1 COLLATE RTRIM))) ASC LIMIT 0x0;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) IS FALSE) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c0) IS TRUE), vt0.c0, ((vt0.c1)==(vt0.c1)))) AND ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)), ((vt0.c1)IS NOT(vt0.c0)), ((vt0.c1) IS TRUE))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) IS FALSE) LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) IS FALSE) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c0) IS TRUE), vt0.c0, ((vt0.c1)==(vt0.c1)))) AND ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)), ((vt0.c1)IS NOT(vt0.c0)), ((vt0.c1) IS TRUE))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) IS FALSE) LIMIT 0X0;
SELECT ALL MIN(v0.c1) FROM v0, vt0, t1 WHERE (v0.c1) ORDER BY ((((t1.c0)OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY DESC;
SELECT MIN(v0.c1) FROM v0, vt0, t1 WHERE (((v0.c1)AND(NULLIF(((v0.c1)==(v0.c1)), ((vt0.c1) IS FALSE))))) ORDER BY CAST(v0.c2 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, vt0.c0 DESC, ROUND(v0.c1 COLLATE NOCASE, (+ (v0.c0)))  NULLS FIRST;
SELECT MIN(vt0.c1) FROM t1, vt0 WHERE (((CAST(x'15' AS TEXT)) NOTNULL)) ORDER BY ((vt0.c1) NOT BETWEEN (t1.c1) AND (t1.c2)) COLLATE NOCASE;
SELECT DISTINCT MIN(vt0.c1) FROM t1, vt0 WHERE (((CAST(x'15' AS TEXT)) NOTNULL)) ORDER BY ((ABS(DISTINCT t1.c2)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c1, t1.c2))<>((vt0.c0, t1.c2, t1.c0, vt0.c0)))) AND ((((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t1.c2)) AND ((vt0.c1, '1785187513'))))) DESC;
SELECT MIN(v0.c2) FROM vt0 CROSS JOIN v0 ON ((((v0.c2)>=(vt0.c0))) BETWEEN ((v0.c2 IN ())) AND (((v0.c2) NOT NULL))) WHERE (vt0.c0);
SELECT DISTINCT MIN(v0.c2) FROM vt0 CROSS JOIN v0 ON ((((v0.c2)>=(vt0.c0))) BETWEEN ((v0.c2 IN ())) AND (((v0.c2) NOT NULL))) WHERE (((vt0.c0)AND(((((x'929b1b') BETWEEN (v0.c0) AND (v0.c1))) NOT NULL)))) INTERSECT SELECT DISTINCT MIN(v0.c2) FROM vt0 CROSS JOIN v0 ON ((((v0.c2)>=(vt0.c0))) BETWEEN ((v0.c2 IN ())) AND (((v0.c2) NOT NULL))) WHERE (CASE WHEN (+ (v0.c0)) THEN (((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1))) WHEN (x'' IN (vt0.c0)) THEN ((vt0.c1)%(vt0.c1)) WHEN (((v0.c1, v0.c0, vt0.c1, '-1395127720'))<=((vt0.c0, v0.c0, vt0.c1, vt0.c0))) THEN (((((('802150435')AND(v0.c1)))AND(v0.c1)))AND(vt0.c1)) WHEN v0.c0 THEN CAST(0.924206391700389 AS INTEGER) ELSE CAST(v0.c1 AS TEXT) END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c1)<(vt0.c0)))) ASC  NULLS FIRST, json_array(((vt0.c1)<=(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) NOTNULL)) ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN (((vt0.c1))<((vt0.c0))) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (vt0.c0 IN (vt0.c1)) ELSE (~ (vt0.c0)) END DESC, UPPER(UNLIKELY(vt0.c0)) DESC INTERSECT SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB)) ORDER BY CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN (((vt0.c1))<((vt0.c0))) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (vt0.c0 IN (vt0.c1)) ELSE (~ (vt0.c0)) END DESC, UPPER(UNLIKELY(vt0.c0)) DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c1)<(vt0.c0)))) ASC  NULLS FIRST, json_array(((vt0.c1)<=(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) NOTNULL)) ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN (((vt0.c1))<((vt0.c0))) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (vt0.c0 IN (vt0.c1)) ELSE (~ (vt0.c0)) END DESC, UPPER(UNLIKELY(vt0.c0)) DESC INTERSECT SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB)) ORDER BY CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN (((vt0.c1))<((vt0.c0))) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (vt0.c0 IN (vt0.c1)) ELSE (~ (vt0.c0)) END DESC, UPPER(UNLIKELY(vt0.c0)) DESC;
SELECT * FROM t1 WHERE (((0.576960957960315) BETWEEN (((t1.c1)<<(t1.c1))) AND (((x'5757c5')&(t1.c1)))));
SELECT ALL * FROM t1 WHERE (((0.576960957960315) BETWEEN (((t1.c1)<<(t1.c1))) AND (((x'5757c5')&(t1.c1)))));
SELECT * FROM t1 WHERE (((0.576960957960315) BETWEEN (((t1.c1)<<(t1.c1))) AND (((x'5757c5')&(t1.c1)))));
SELECT ALL * FROM t1 WHERE (((0.576960957960315) BETWEEN (((t1.c1)<<(t1.c1))) AND (((x'5757c5')&(t1.c1)))));
SELECT ALL * FROM t1 WHERE (((NULL) BETWEEN (LIKE(t1.c0, t1.c2)) AND ('1514797807' COLLATE NOCASE)));
SELECT DISTINCT * FROM t1 WHERE (((((NULL) BETWEEN (LIKE(t1.c0, t1.c2)) AND ('1514797807' COLLATE NOCASE)))AND(t1.c0))) ORDER BY ((((((MIN(t1.c0, t1.c0))OR(t1.c1)))OR((((t1.c1, t1.c2, t1.c0, t1.c2)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c2)) AND ((t1.c2, t1.c2, t1.c2, t1.c0))))))OR(((t1.c0)==(t1.c0)))) ASC, (1215819737 IN ((t1.c1 IN ()))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((((((t1.c0)AND(t1.c0)))OR(NULL)))OR(t1.c1)))OR(t1.c2)))OR((((t1.c0))<((t1.c2))))))OR(t1.c1))) ORDER BY ((((((MIN(t1.c0, t1.c0))OR(t1.c1)))OR((((t1.c1, t1.c2, t1.c0, t1.c2)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c2)) AND ((t1.c2, t1.c2, t1.c2, t1.c0))))))OR(((t1.c0)==(t1.c0)))) ASC, (1215819737 IN ((t1.c1 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((NULL) BETWEEN (LIKE(t1.c0, t1.c2)) AND ('1514797807' COLLATE NOCASE)));
SELECT DISTINCT * FROM t1 WHERE (((((NULL) BETWEEN (LIKE(t1.c0, t1.c2)) AND ('1514797807' COLLATE NOCASE)))AND(t1.c0))) ORDER BY ((((((MIN(t1.c0, t1.c0))OR(t1.c1)))OR((((t1.c1, t1.c2, t1.c0, t1.c2)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c2)) AND ((t1.c2, t1.c2, t1.c2, t1.c0))))))OR(((t1.c0)==(t1.c0)))) ASC, (1215819737 IN ((t1.c1 IN ()))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((((((((((t1.c0)AND(t1.c0)))OR(NULL)))OR(t1.c1)))OR(t1.c2)))OR((((t1.c0))<((t1.c2))))))OR(t1.c1))) ORDER BY ((((((MIN(t1.c0, t1.c0))OR(t1.c1)))OR((((t1.c1, t1.c2, t1.c0, t1.c2)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c2)) AND ((t1.c2, t1.c2, t1.c2, t1.c0))))))OR(((t1.c0)==(t1.c0)))) ASC, (1215819737 IN ((t1.c1 IN ()))) ASC  NULLS LAST;
SELECT * FROM v0 INNER JOIN t1 ON ((((((((CASE WHEN vt0.c0 THEN t1.c2 WHEN v0.c2 THEN vt0.c0 END)AND(((-430116177) NOT NULL))))OR((((v0.c0))<((v0.c0))))))OR(NULL)))AND(CASE vt0.c0  WHEN v0.c2 THEN vt0.c1 WHEN t1.c1 THEN t1.c2 END)) NATURAL JOIN vt0 WHERE ('{') ORDER BY '/}_紕' ASC, (- (((t1.c0)&(vt0.c0))));
SELECT ALL * FROM v0 INNER JOIN t1 ON ((((((((CASE WHEN vt0.c0 THEN t1.c2 WHEN v0.c2 THEN vt0.c0 END)AND(((-430116177) NOT NULL))))OR((((v0.c0))<((v0.c0))))))OR(NULL)))AND(CASE vt0.c0  WHEN v0.c2 THEN vt0.c1 WHEN t1.c1 THEN t1.c2 END)) NATURAL JOIN vt0 WHERE ((('{')AND(CAST(v0.c2 COLLATE BINARY AS TEXT)))) ORDER BY '/}_紕' ASC, (- (((t1.c0)&(vt0.c0))));
SELECT * FROM v0 INNER JOIN t1 ON ((((((((CASE WHEN vt0.c0 THEN t1.c2 WHEN v0.c2 THEN vt0.c0 END)AND(((-430116177) NOT NULL))))OR((((v0.c0))<((v0.c0))))))OR(NULL)))AND(CASE vt0.c0  WHEN v0.c2 THEN vt0.c1 WHEN t1.c1 THEN t1.c2 END)) NATURAL JOIN vt0 WHERE ('{') ORDER BY '/}_紕' ASC, (- (((t1.c0)&(vt0.c0))));
SELECT ALL * FROM v0 INNER JOIN t1 ON ((((((((CASE WHEN vt0.c0 THEN t1.c2 WHEN v0.c2 THEN vt0.c0 END)AND(((-430116177) NOT NULL))))OR((((v0.c0))<((v0.c0))))))OR(NULL)))AND(CASE vt0.c0  WHEN v0.c2 THEN vt0.c1 WHEN t1.c1 THEN t1.c2 END)) NATURAL JOIN vt0 WHERE ((('{')AND(CAST(v0.c2 COLLATE BINARY AS TEXT)))) ORDER BY '/}_紕' ASC, (- (((t1.c0)&(vt0.c0))));
SELECT MAX(vt0.c1) FROM vt0 WHERE (((vt0.c0)IS((((((((((('b')AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(0.3603351176701367)))));
SELECT MAX(vt0.c1) FROM vt0 WHERE (((((vt0.c0)IS((((((((((('b')AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(0.3603351176701367)))))AND('1832410938'))) LIMIT 2;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((t1.c1)IS(0.9827432485178333)))<=(((t1.c1)IS(t1.c0)))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((t1.c1)IS(0.9827432485178333)))<(((t1.c1)IS(t1.c0)))))AND(TYPEOF(load_extension(t1.c1))))) LIMIT 3;
SELECT * FROM vt0, t1 NATURAL JOIN v0 WHERE (CAST((NOT (t1.c2)) AS INTEGER));
SELECT * FROM vt0, t1 NATURAL JOIN v0 WHERE (CAST((NOT (t1.c2)) AS INTEGER)) LIMIT 1;
SELECT * FROM vt0, t1 NATURAL JOIN v0 WHERE (CAST((NOT (t1.c2)) AS INTEGER));
SELECT * FROM vt0, t1 NATURAL JOIN v0 WHERE (CAST((NOT (t1.c2)) AS INTEGER)) LIMIT 1;
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON ((((t1.c2)OR(v0.c1)))OR((t1.c2 IN (v0.c1)))) LEFT OUTER JOIN v0 ON 0.5721661527944496 WHERE ((((CASE WHEN t1.c0 THEN t1.c0 END))>(((NOT (t1.c1))))));
SELECT DISTINCT COUNT(*) FROM vt0 INNER JOIN t1 ON ((((t1.c2)OR(v0.c1)))OR((t1.c2 IN (v0.c1)))) LEFT OUTER JOIN v0 ON 0.5721661527944496 WHERE ((((((CASE WHEN t1.c0 THEN t1.c0 END))>(((NOT (t1.c1))))))AND(((CASE t1.c2  WHEN t1.c1 THEN t1.c0 WHEN vt0.c0 THEN t1.c2 WHEN v0.c2 THEN t1.c2 WHEN v0.c0 THEN v0.c2 ELSE vt0.c0 END) NOTNULL)))) INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 INNER JOIN t1 ON ((((t1.c2)OR(v0.c1)))OR((t1.c2 IN (v0.c1)))) LEFT OUTER JOIN v0 ON 0.5721661527944496 WHERE ((NOT ((NOT (v0.c1)))));
SELECT ALL MIN(vt0.c1) FROM v0, t1, vt0 WHERE (((((v0.c2) NOT BETWEEN ('-841927177') AND (t1.c0))) IS FALSE));
SELECT MIN(vt0.c1) FROM v0, t1, vt0 WHERE (((((v0.c2) NOT BETWEEN ('-841927177') AND (t1.c0))) IS FALSE)) ORDER BY CASE GLOB(t1.c0, vt0.c0)  WHEN ((vt0.c1) IS TRUE) THEN (((t1.c0, t1.c1)) BETWEEN ((t1.c0, t1.c2)) AND ((t1.c2, vt0.c1))) END ASC  NULLS LAST, t1.c1 DESC  NULLS LAST;
SELECT * FROM v0, t1, vt0 WHERE ((((v0.c2)IS NOT(vt0.c0)) IN ()));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE ((((((v0.c2)IS NOT(vt0.c0)) IN ()))AND(CASE WHEN ((((t1.c1)OR(v0.c0)))AND(v0.c2)) THEN t1.c2 COLLATE RTRIM WHEN CAST(v0.c1 AS INTEGER) THEN CASE vt0.c0  WHEN t1.c2 THEN vt0.c0 WHEN '1709102821' THEN v0.c0 WHEN t1.c1 THEN v0.c2 ELSE v0.c1 END END))) ORDER BY (+ ((((t1.c1, t1.c2))!=((t1.c0, v0.c2))))) DESC  NULLS LAST, (((((((vt0.c0, t1.c0, vt0.c0, t1.c2)) BETWEEN ((v0.c0, v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, t1.c2, vt0.c1, vt0.c1))))OR(((vt0.c1)/(vt0.c1)))))AND(((t1.c2)<=(0.4021709528837356)))), CAST(((t1.c0)IS NOT(t1.c0)) AS INTEGER)  NULLS LAST LIMIT 0x0;
SELECT * FROM v0, t1, vt0 WHERE ((((v0.c2)IS NOT(vt0.c0)) IN ()));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE ((((((v0.c2)IS NOT(vt0.c0)) IN ()))AND(CASE WHEN ((((t1.c1)OR(v0.c0)))AND(v0.c2)) THEN t1.c2 COLLATE RTRIM WHEN CAST(v0.c1 AS INTEGER) THEN CASE vt0.c0  WHEN t1.c2 THEN vt0.c0 WHEN '1709102821' THEN v0.c0 WHEN t1.c1 THEN v0.c2 ELSE v0.c1 END END))) ORDER BY (+ ((((t1.c1, t1.c2))!=((t1.c0, v0.c2))))) DESC  NULLS LAST, (((((((vt0.c0, t1.c0, vt0.c0, t1.c2)) BETWEEN ((v0.c0, v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, t1.c2, vt0.c1, vt0.c1))))OR(((vt0.c1)/(vt0.c1)))))AND(((t1.c2)<=(0.4021709528837356)))), CAST(((t1.c0)IS NOT(t1.c0)) AS INTEGER)  NULLS LAST LIMIT 0x0;
SELECT MIN(t1.c1) FROM t1 WHERE (((((((CAST(t1.c2 AS NUMERIC))AND(((t1.c1)IS(t1.c2)))))OR(CAST(t1.c2 AS BLOB))))AND('Dn/D/z')));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((((((CAST(t1.c2 AS NUMERIC))AND(((t1.c1)IS(t1.c2)))))OR(CAST(t1.c2 AS BLOB))))AND('Dn/D/z')))AND(LIKELY(DISTINCT t1.c2) COLLATE BINARY))) LIMIT 0;
SELECT MIN(vt0.c0) FROM t1, vt0 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)))=(t1.c2))) ORDER BY (('0.14103367742007866') BETWEEN ((('337239948')IS(t1.c2))) AND (TIME('wOS', t1.c0, vt0.c1, t1.c1))) DESC  NULLS FIRST, (((((vt0.c1, t1.c0))==((vt0.c0, t1.c1))))%(((t1.c1) IS TRUE))) ASC;
SELECT DISTINCT MIN(vt0.c0) FROM t1, vt0 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)))=(t1.c2))) ORDER BY (('0.14103367742007866') BETWEEN ((('337239948')IS(t1.c2))) AND (TIME('wOS', t1.c0, vt0.c1, t1.c1))) DESC  NULLS FIRST, (((((vt0.c1, t1.c0))=((vt0.c0, t1.c1))))%(((t1.c1) IS TRUE))) ASC LIMIT 0x1;
SELECT ALL MAX(v0.c1) FROM v0, vt0, t1 WHERE (t1.c2);
SELECT ALL MAX(v0.c1) FROM v0, vt0, t1 WHERE (t1.c2) LIMIT 0X1 INTERSECT SELECT MAX(v0.c1) FROM v0, vt0, t1 WHERE (json_array(v0.c1, ((t1.c2)IS NOT('540106785')))) LIMIT 0X1;
SELECT * FROM vt0 INNER JOIN v0 ON (0.25765986470280344 IN ()) WHERE ((((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))))>(((('')>(vt0.c1)))))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) AS TEXT)  NULLS FIRST, ((((((((v0.c2) IS FALSE))OR(((v0.c0)<<(vt0.c1)))))OR(((v0.c2)==(vt0.c1)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0 INNER JOIN v0 ON (0.25765986470280344 IN ()) WHERE ((((((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))))>(((('')>(vt0.c1))))))AND(((((v0.c0)%(0Xffffffffa2458e6f))) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND ('{'))))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) AS TEXT)  NULLS FIRST, ((((((((v0.c2) IS FALSE))OR(((v0.c0)<<(vt0.c1)))))OR(((v0.c2)=(vt0.c1)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))) ASC  NULLS LAST LIMIT 2;
SELECT * FROM vt0 INNER JOIN v0 ON (0.25765986470280344 IN ()) WHERE ((((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))))>(((('')>(vt0.c1)))))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) AS TEXT)  NULLS FIRST, ((((((((v0.c2) IS FALSE))OR(((v0.c0)<<(vt0.c1)))))OR(((v0.c2)==(vt0.c1)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0 INNER JOIN v0 ON (0.25765986470280344 IN ()) WHERE ((((((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))))>(((('')>(vt0.c1))))))AND(((((v0.c0)%(0Xffffffffa2458e6f))) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND ('{'))))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) AS TEXT)  NULLS FIRST, ((((((((v0.c2) IS FALSE))OR(((v0.c0)<<(vt0.c1)))))OR(((v0.c2)=(vt0.c1)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))) ASC  NULLS LAST LIMIT 2;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE CAST(vt0.c1 AS INTEGER)  WHEN ((vt0.c1) ISNULL) THEN 0Xaffd4e7 WHEN PRINTF(vt0.c0) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END ASC  NULLS LAST, ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))>>(vt0.c0 COLLATE RTRIM)) ASC, (- (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE '1148443958' END));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE CAST(vt0.c1 AS INTEGER)  WHEN ((vt0.c1) ISNULL) THEN 0Xaffd4e7 WHEN PRINTF(vt0.c0) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END ASC  NULLS LAST, ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))>>(vt0.c0 COLLATE RTRIM)) ASC, (- (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE '1148443958' END)) INTERSECT SELECT * FROM vt0 WHERE (x'5d1d') ORDER BY CASE CAST(vt0.c1 AS INTEGER)  WHEN ((vt0.c1) ISNULL) THEN 184538343 WHEN PRINTF(vt0.c0) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END ASC  NULLS LAST, ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))>>(vt0.c0 COLLATE RTRIM)) ASC, (- (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE '1148443958' END));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE CAST(vt0.c1 AS INTEGER)  WHEN ((vt0.c1) ISNULL) THEN 0Xaffd4e7 WHEN PRINTF(vt0.c0) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END ASC  NULLS LAST, ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))>>(vt0.c0 COLLATE RTRIM)) ASC, (- (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE '1148443958' END));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE CAST(vt0.c1 AS INTEGER)  WHEN ((vt0.c1) ISNULL) THEN 0Xaffd4e7 WHEN PRINTF(vt0.c0) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END ASC  NULLS LAST, ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))>>(vt0.c0 COLLATE RTRIM)) ASC, (- (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE '1148443958' END)) INTERSECT SELECT * FROM vt0 WHERE (x'5d1d') ORDER BY CASE CAST(vt0.c1 AS INTEGER)  WHEN ((vt0.c1) ISNULL) THEN 184538343 WHEN PRINTF(vt0.c0) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END ASC  NULLS LAST, ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))>>(vt0.c0 COLLATE RTRIM)) ASC, (- (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE '1148443958' END));
SELECT ALL MIN(t1.c1) FROM t1, v0 WHERE ((((v0.c1, t1.c2, x'89')) BETWEEN ((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN t1.c0 WHEN t1.c0 THEN '\<2' ELSE NULL END, ((((t1.c1)OR(v0.c2)))OR(t1.c2)), t1.c2)) AND ((((v0.c2)=(NULL)), v0.c2, TRIM(v0.c2))))) ORDER BY (((v0.c0, t1.c1, 0.5498409103781211)) NOT BETWEEN ((UNLIKELY(DISTINCT t1.c0), NULL, CAST(t1.c0 AS NUMERIC))) AND ((v0.c0 COLLATE BINARY, CASE WHEN '.qa>r|f' THEN v0.c1 WHEN t1.c2 THEN v0.c0 ELSE t1.c1 END, v0.c0))) DESC;
SELECT DISTINCT MIN(t1.c1) FROM t1, v0 WHERE ((((((v0.c1, t1.c2, x'89')) BETWEEN ((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN t1.c0 WHEN t1.c0 THEN '\<2' ELSE NULL END, ((((t1.c1)OR(v0.c2)))OR(t1.c2)), t1.c2)) AND ((((v0.c2)=(NULL)), v0.c2, TRIM(v0.c2)))))AND(((UNLIKELY(t1.c0)) BETWEEN (t1.c2) AND (((((((((((t1.c0)OR(x'3cf0')))AND(t1.c2)))OR(v0.c2)))AND(t1.c1)))OR(v0.c0))))))) ORDER BY (((v0.c0, t1.c1, 0.5498409103781211)) NOT BETWEEN ((UNLIKELY(DISTINCT t1.c0), NULL, CAST(t1.c0 AS NUMERIC))) AND ((v0.c0 COLLATE BINARY, CASE WHEN '.qa>r|f' THEN v0.c1 WHEN t1.c2 THEN v0.c0 ELSE t1.c1 END, v0.c0))) DESC LIMIT 5;
SELECT MIN(t1.c0) FROM vt0, v0, t1 WHERE ((((t1.c2)) BETWEEN (((~ (vt0.c1)))) AND ((((vt0.c1)=(v0.c1)))))) ORDER BY NULL ASC, (((t1.c0)AND(v0.c1)) IN ()) ASC;
SELECT MIN(t1.c0) FROM vt0, v0, t1 WHERE ((((((t1.c2)) BETWEEN (((~ (vt0.c1)))) AND ((((vt0.c1)=(v0.c1))))))AND(CASE WHEN v0.c2 THEN TYPEOF(DISTINCT vt0.c1) WHEN v0.c1 COLLATE RTRIM THEN 1.092579787E9 WHEN (v0.c2 IN ()) THEN v0.c2 COLLATE RTRIM WHEN ((t1.c2)==(v0.c2)) THEN ((vt0.c0)||(v0.c0)) ELSE (vt0.c1 IN ()) END))) ORDER BY (UPPER(DISTINCT v0.c1) IN ())  NULLS FIRST INTERSECT SELECT ALL MIN(t1.c0) FROM vt0, v0, t1 WHERE (CASE WHEN (t1.c0 IN (t1.c2)) THEN TRIM(x'41043e') WHEN ((((v0.c1)OR(v0.c0)))OR(vt0.c1)) THEN (((t1.c0, t1.c1, vt0.c1))>((t1.c1, v0.c1, v0.c1))) ELSE '-431699517' END) ORDER BY (UPPER(DISTINCT v0.c1) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)));
SELECT * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END))) LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)));
SELECT * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END))) LIMIT 0X0;
SELECT ALL * FROM vt0, v0, t1 WHERE (TYPEOF(((((vt0.c0)AND(t1.c2)))AND(vt0.c0)))) ORDER BY UNLIKELY(t1.c2 COLLATE BINARY) DESC, ((CASE WHEN vt0.c1 THEN v0.c0 ELSE t1.c0 END) NOTNULL), ((((vt0.c0) BETWEEN (NULL) AND (t1.c1)))LIKE((t1.c2 IN ())))  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (TYPEOF(((((vt0.c0)AND(t1.c2)))AND(vt0.c0)))) ORDER BY UNLIKELY(t1.c2 COLLATE BINARY) DESC, ((CASE WHEN vt0.c1 THEN v0.c0 ELSE t1.c0 END) NOTNULL), ((((vt0.c0) BETWEEN (NULL) AND (t1.c1)))LIKE((t1.c2 IN ())))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((- (CAST(t1.c2 AS NUMERIC)))) ORDER BY UNLIKELY(t1.c2 COLLATE BINARY) DESC, ((CASE WHEN vt0.c1 THEN v0.c0 ELSE t1.c0 END) NOTNULL), ((((vt0.c0) BETWEEN (NULL) AND (t1.c1)))LIKE((t1.c2 IN ())))  NULLS LAST;
SELECT ALL * FROM vt0, v0, t1 WHERE (TYPEOF(((((vt0.c0)AND(t1.c2)))AND(vt0.c0)))) ORDER BY UNLIKELY(t1.c2 COLLATE BINARY) DESC, ((CASE WHEN vt0.c1 THEN v0.c0 ELSE t1.c0 END) NOTNULL), ((((vt0.c0) BETWEEN (NULL) AND (t1.c1)))LIKE((t1.c2 IN ())))  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (TYPEOF(((((vt0.c0)AND(t1.c2)))AND(vt0.c0)))) ORDER BY UNLIKELY(t1.c2 COLLATE BINARY) DESC, ((CASE WHEN vt0.c1 THEN v0.c0 ELSE t1.c0 END) NOTNULL), ((((vt0.c0) BETWEEN (NULL) AND (t1.c1)))LIKE((t1.c2 IN ())))  NULLS LAST INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((- (CAST(t1.c2 AS NUMERIC)))) ORDER BY UNLIKELY(t1.c2 COLLATE BINARY) DESC, ((CASE WHEN vt0.c1 THEN v0.c0 ELSE t1.c0 END) NOTNULL), ((((vt0.c0) BETWEEN (NULL) AND (t1.c1)))LIKE((t1.c2 IN ())))  NULLS LAST;
SELECT ALL MAX(v0.c1) FROM v0 WHERE (((((v0.c0) NOT NULL)) BETWEEN ((v0.c1 IN (v0.c1, 0x53585b09, v0.c1))) AND (v0.c0))) ORDER BY v0.c1 COLLATE BINARY  NULLS FIRST, NULL  NULLS FIRST;
SELECT ALL MAX(v0.c1) FROM v0 WHERE (((((((v0.c0) NOT NULL)) BETWEEN ((v0.c1 IN (v0.c1, 1398299401))) AND (v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) COLLATE BINARY))) ORDER BY v0.c1 COLLATE BINARY  NULLS FIRST, NULL  NULLS FIRST;
SELECT * FROM vt0, v0, t1 WHERE (json_type((v0.c0 IN (vt0.c0)))) ORDER BY (~ (t1.c0)) COLLATE RTRIM, CAST(UPPER(t1.c1) AS BLOB) ASC  NULLS LAST, (((((((((((((((vt0.c0, v0.c1)) NOT BETWEEN ((vt0.c0, v0.c2)) AND ((t1.c2, vt0.c0))))OR(0.4302756767260606)))AND(LIKELY(DISTINCT v0.c0))))OR(vt0.c0 COLLATE NOCASE)))AND(((t1.c1) IS TRUE))))OR(((vt0.c0) NOTNULL))))OR((- (t1.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0, t1 WHERE (((json_type((v0.c0 IN (vt0.c0))))AND((((((v0.c1)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0)))) BETWEEN (v0.c1 COLLATE RTRIM) AND (x'0d'))))) ORDER BY (~ (t1.c0)) COLLATE RTRIM, CAST(UPPER(t1.c1) AS BLOB) ASC  NULLS LAST, (((((((((((((((vt0.c0, v0.c1)) NOT BETWEEN ((vt0.c0, v0.c2)) AND ((t1.c2, vt0.c0))))OR(0.4302756767260606)))AND(LIKELY(DISTINCT v0.c0))))OR(vt0.c0 COLLATE NOCASE)))AND(((t1.c1) IS TRUE))))OR(((vt0.c0) NOTNULL))))OR((- (t1.c2)))) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM vt0, v0, t1 WHERE ((((((~ (t1.c2)))AND(v0.c0 COLLATE NOCASE)))AND(((t1.c0) NOTNULL)))) ORDER BY (~ (t1.c0)) COLLATE RTRIM, CAST(UPPER(t1.c1) AS BLOB) ASC  NULLS LAST, (((((((((((((((vt0.c0, v0.c1)) NOT BETWEEN ((vt0.c0, v0.c2)) AND ((t1.c2, vt0.c0))))OR(0.4302756767260606)))AND(LIKELY(DISTINCT v0.c0))))OR(vt0.c0 COLLATE NOCASE)))AND(((t1.c1) IS TRUE))))OR(((vt0.c0) NOTNULL))))OR((- (t1.c2)))) ASC  NULLS LAST LIMIT 0;
SELECT * FROM vt0, v0, t1 WHERE (json_type((v0.c0 IN (vt0.c0)))) ORDER BY (~ (t1.c0)) COLLATE RTRIM, CAST(UPPER(t1.c1) AS BLOB) ASC  NULLS LAST, (((((((((((((((vt0.c0, v0.c1)) NOT BETWEEN ((vt0.c0, v0.c2)) AND ((t1.c2, vt0.c0))))OR(0.4302756767260606)))AND(LIKELY(DISTINCT v0.c0))))OR(vt0.c0 COLLATE NOCASE)))AND(((t1.c1) IS TRUE))))OR(((vt0.c0) NOTNULL))))OR((- (t1.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0, t1 WHERE (((json_type((v0.c0 IN (vt0.c0))))AND((((((v0.c1)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0)))) BETWEEN (v0.c1 COLLATE RTRIM) AND (x'0d'))))) ORDER BY (~ (t1.c0)) COLLATE RTRIM, CAST(UPPER(t1.c1) AS BLOB) ASC  NULLS LAST, (((((((((((((((vt0.c0, v0.c1)) NOT BETWEEN ((vt0.c0, v0.c2)) AND ((t1.c2, vt0.c0))))OR(0.4302756767260606)))AND(LIKELY(DISTINCT v0.c0))))OR(vt0.c0 COLLATE NOCASE)))AND(((t1.c1) IS TRUE))))OR(((vt0.c0) NOTNULL))))OR((- (t1.c2)))) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL * FROM vt0, v0, t1 WHERE ((((((~ (t1.c2)))AND(v0.c0 COLLATE NOCASE)))AND(((t1.c0) NOTNULL)))) ORDER BY (~ (t1.c0)) COLLATE RTRIM, CAST(UPPER(t1.c1) AS BLOB) ASC  NULLS LAST, (((((((((((((((vt0.c0, v0.c1)) NOT BETWEEN ((vt0.c0, v0.c2)) AND ((t1.c2, vt0.c0))))OR(0.4302756767260606)))AND(LIKELY(DISTINCT v0.c0))))OR(vt0.c0 COLLATE NOCASE)))AND(((t1.c1) IS TRUE))))OR(((vt0.c0) NOTNULL))))OR((- (t1.c2)))) ASC  NULLS LAST LIMIT 0;
SELECT ALL COUNT(*) FROM t1, v0 WHERE (HEX(DISTINCT CAST(NULL AS REAL))) ORDER BY (((t1.c0)) BETWEEN (((v0.c1 IN ()))) AND (((v0.c0 IN ()))))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM t1, v0 WHERE (((HEX(DISTINCT CAST(NULL AS REAL)))AND(((((t1.c1 COLLATE RTRIM)OR(((t1.c0)=(t1.c0)))))OR(((t1.c0)+(v0.c2))))))) ORDER BY (((t1.c0)) BETWEEN (((v0.c1 IN ()))) AND (((v0.c0 IN ()))))  NULLS LAST LIMIT 0x2;
SELECT ALL MIN(vt0.c0) FROM v0, vt0 WHERE ((((((((v0.c1 IN ()))AND('')))AND(v0.c1)))OR((+ (vt0.c1))))) ORDER BY (((+ (v0.c0))) BETWEEN ('gp_') AND ((v0.c1 IN (v0.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c0) FROM v0, vt0 WHERE ((((((((((v0.c1 IN ()))AND('')))AND(v0.c1)))OR((+ (vt0.c1)))))AND(NULL))) ORDER BY (((+ (v0.c0))) BETWEEN ('gp_') AND ((v0.c1 IN (v0.c1)))) ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM v0, vt0 WHERE (TRIM(((vt0.c0)<(v0.c2)))) ORDER BY (((+ (v0.c0))) BETWEEN ('gp_') AND ((v0.c1 IN (v0.c1)))) ASC  NULLS FIRST LIMIT 0X0;
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)))=((((v0.c2, v0.c1, vt0.c1, vt0.c1, v0.c1, v0.c0)) NOT BETWEEN (('X', vt0.c1, v0.c2, v0.c0, vt0.c0, v0.c2)) AND ((vt0.c1, vt0.c1, vt0.c0, v0.c2, v0.c0, v0.c1)))))) ORDER BY (((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) BETWEEN (v0.c2) AND (((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)))==((((v0.c2, v0.c1, vt0.c1, vt0.c1, v0.c1, v0.c0)) NOT BETWEEN (('X', vt0.c1, v0.c2, v0.c0, vt0.c0, v0.c2)) AND ((vt0.c1, vt0.c1, vt0.c0, v0.c2, v0.c0, v0.c1))))))AND(0.5425437551315478))) ORDER BY (((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) BETWEEN (v0.c2) AND (((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST LIMIT 3;
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)))=((((v0.c2, v0.c1, vt0.c1, vt0.c1, v0.c1, v0.c0)) NOT BETWEEN (('X', vt0.c1, v0.c2, v0.c0, vt0.c0, v0.c2)) AND ((vt0.c1, vt0.c1, vt0.c0, v0.c2, v0.c0, v0.c1)))))) ORDER BY (((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) BETWEEN (v0.c2) AND (((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)))==((((v0.c2, v0.c1, vt0.c1, vt0.c1, v0.c1, v0.c0)) NOT BETWEEN (('X', vt0.c1, v0.c2, v0.c0, vt0.c0, v0.c2)) AND ((vt0.c1, vt0.c1, vt0.c0, v0.c2, v0.c0, v0.c1))))))AND(0.5425437551315478))) ORDER BY (((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) BETWEEN (v0.c2) AND (((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST LIMIT 3;
SELECT ALL * FROM vt0, t1, v0 WHERE ((CAST(NULL AS INTEGER) IN ((~ (v0.c0)), ((v0.c2)&(vt0.c1))))) ORDER BY ((t1.c1) NOTNULL) COLLATE RTRIM DESC, ((((v0.c2)&(v0.c0))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt0, t1, v0 WHERE ((((CAST(NULL AS INTEGER) IN ((~ (v0.c0)))))AND(COALESCE(v0.c0, v0.c0, t1.c2) COLLATE RTRIM))) ORDER BY ((t1.c1) NOTNULL) COLLATE RTRIM DESC, ((((v0.c2)&(v0.c0))) ISNULL)  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM vt0, t1, v0 WHERE ((- (((vt0.c0) ISNULL)))) ORDER BY ((t1.c1) NOTNULL) COLLATE RTRIM DESC, ((((v0.c2)&(v0.c0))) ISNULL)  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM vt0, t1, v0 WHERE ((CAST(NULL AS INTEGER) IN ((~ (v0.c0)), ((v0.c2)&(vt0.c1))))) ORDER BY ((t1.c1) NOTNULL) COLLATE RTRIM DESC, ((((v0.c2)&(v0.c0))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt0, t1, v0 WHERE ((((CAST(NULL AS INTEGER) IN ((~ (v0.c0)))))AND(COALESCE(v0.c0, v0.c0, t1.c2) COLLATE RTRIM))) ORDER BY ((t1.c1) NOTNULL) COLLATE RTRIM DESC, ((((v0.c2)&(v0.c0))) ISNULL)  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM vt0, t1, v0 WHERE ((- (((vt0.c0) ISNULL)))) ORDER BY ((t1.c1) NOTNULL) COLLATE RTRIM DESC, ((((v0.c2)&(v0.c0))) ISNULL)  NULLS FIRST LIMIT 0X0;
SELECT ALL COUNT(*) FROM vt0, t1 CROSS JOIN v0 ON (((((t1.c1)) NOT BETWEEN ((v0.c0)) AND ((t1.c2)))) NOT NULL) WHERE ((-470592957 IN (((t1.c2)/(t1.c0)))));
SELECT ALL COUNT(*) FROM vt0, t1 CROSS JOIN v0 ON (((((t1.c1)) NOT BETWEEN ((v0.c0)) AND ((t1.c2)))) NOT NULL) WHERE ((0Xffffffffe3f35243 IN (((t1.c2)/(t1.c0))))) LIMIT 0;
SELECT ALL MAX(t1.c0) FROM t1, v0 WHERE ((~ (v0.c1))) ORDER BY (((t1.c0 IN (t1.c2, t1.c1, v0.c2)))>(((t1.c0)IS(NULL)))) DESC  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS NUMERIC))) AND ((((0xffffffff83713624)>(v0.c0)))))  NULLS FIRST;
SELECT ALL MAX(t1.c0) FROM t1, v0 WHERE ((((~ (v0.c1)))AND(CASE WHEN ((((0.006844182603152227)OR(v0.c1)))AND(t1.c1)) THEN (~ (v0.c1)) WHEN CAST(t1.c1 AS INTEGER) THEN 46769362 WHEN ((t1.c2) IS FALSE) THEN ((t1.c2)%(v0.c0)) WHEN load_extension(t1.c0, t1.c2) THEN CASE WHEN NULL THEN v0.c1 END WHEN (((t1.c1, t1.c2)) BETWEEN ((t1.c2, v0.c0)) AND ((t1.c2, t1.c0))) THEN (((t1.c2, t1.c0))!=((v0.c1, t1.c1))) END))) ORDER BY t1.c1 DESC  NULLS LAST INTERSECT SELECT MAX(t1.c0) FROM t1, v0 WHERE ((((t1.c2 IN (v0.c1))) NOT BETWEEN (t1.c2) AND (x''))) ORDER BY t1.c1 DESC  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE ((((t1.c0 IN ())) NOTNULL)) ORDER BY ((((((vt0.c0) NOTNULL))OR(NULL)))OR(CASE t1.c1  WHEN t1.c1 THEN vt0.c0 END))  NULLS LAST, ((0.9878295952822845) NOTNULL) DESC  NULLS FIRST, 'L1(';
SELECT ALL * FROM vt0, t1 WHERE ((((((t1.c0 IN ())) NOTNULL))AND((t1.c2 IN ())))) ORDER BY SQLITE_COMPILEOPTION_USED(TRIM(vt0.c0, '')) DESC INTERSECT SELECT * FROM vt0, t1 WHERE (((vt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY SQLITE_COMPILEOPTION_USED(TRIM(vt0.c0, '')) DESC;
SELECT ALL * FROM vt0, t1 WHERE ((((t1.c0 IN ())) NOTNULL)) ORDER BY ((((((vt0.c0) NOTNULL))OR(NULL)))OR(CASE t1.c1  WHEN t1.c1 THEN vt0.c0 END))  NULLS LAST, ((0.9878295952822845) NOTNULL) DESC  NULLS FIRST, 'L1(';
SELECT ALL * FROM vt0, t1 WHERE ((((((t1.c0 IN ())) NOTNULL))AND((t1.c2 IN ())))) ORDER BY SQLITE_COMPILEOPTION_USED(TRIM(vt0.c0, '')) DESC INTERSECT SELECT * FROM vt0, t1 WHERE (((vt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY SQLITE_COMPILEOPTION_USED(TRIM(vt0.c0, '')) DESC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((((((t1.c2)AND(json_array_length(t1.c2, 0.39136151917807493))))OR(((((((x'7d')OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))))OR('p')))OR(((t1.c1)LIKE(t1.c1)))));
SELECT MAX(t1.c0) FROM t1 WHERE (((((((((t1.c2)AND(json_array_length(t1.c2, 0.39136151917807493))))OR(((((((x'7d')OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))))OR('p')))OR(((t1.c1)LIKE(t1.c1))))) ORDER BY CASE t1.c1  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c1)) THEN NULLIF(t1.c1, t1.c1) END ASC LIMIT 3;
SELECT ALL * FROM vt0 WHERE (CHAR(((((0.8053573199098468)OR(-1071616757)))AND(vt0.c0)))) ORDER BY (((CAST(vt0.c0 AS TEXT)))>=((x''))) ASC  NULLS FIRST, (NOT (vt0.c0)) COLLATE BINARY DESC;
SELECT * FROM vt0 WHERE (CHAR(((((0.8053573199098468)OR(-1071616757)))AND(vt0.c0)))) ORDER BY (((CAST(vt0.c0 AS TEXT)))>=((x''))) ASC  NULLS FIRST, (NOT (vt0.c0)) COLLATE BINARY DESC;
SELECT ALL * FROM vt0 WHERE (CHAR(((((0.8053573199098468)OR(-1071616757)))AND(vt0.c0)))) ORDER BY (((CAST(vt0.c0 AS TEXT)))>=((x''))) ASC  NULLS FIRST, (NOT (vt0.c0)) COLLATE BINARY DESC;
SELECT * FROM vt0 WHERE (CHAR(((((0.8053573199098468)OR(-1071616757)))AND(vt0.c0)))) ORDER BY (((CAST(vt0.c0 AS TEXT)))>=((x''))) ASC  NULLS FIRST, (NOT (vt0.c0)) COLLATE BINARY DESC;
SELECT MIN(t1.c2) FROM v0, vt0 CROSS JOIN t1 ON (TRIM(DISTINCT t1.c2, vt0.c0) IN ()) WHERE (load_extension(((((((((9.69729598E8)AND(vt0.c1)))AND(x'71')))AND('ocyYV]}')))AND(t1.c1)))) ORDER BY x'' ASC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c2) FROM v0, vt0 CROSS JOIN t1 ON (TRIM(DISTINCT t1.c2, vt0.c0) IN ()) WHERE (load_extension(((((((((9.69729598E8)AND(vt0.c1)))AND(x'71')))AND('ocyYV]}')))AND(t1.c1)))) ORDER BY LENGTH(((((t1.c0)OR(t1.c0)))OR(t1.c2))) ASC  NULLS LAST, '' ASC, CAST(t1.c0 AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((((((((((t1.c2)AND(0Xffffffffd4887655)))OR(t1.c0)))AND(vt0.c0)))AND(t1.c1))) NOT NULL) WHERE (((x'9201b7')IS(((((((t1.c0)OR(vt0.c1)))AND(vt0.c1)))AND(x''))))) ORDER BY NULL ASC  NULLS FIRST, NULL DESC;
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON ((((((((((t1.c2)AND(0xffffffffd4887655)))OR(t1.c0)))AND(vt0.c0)))AND(t1.c1))) NOT NULL) WHERE (((((x'9201b7')IS(((((((t1.c0)OR(vt0.c1)))AND(vt0.c1)))AND(x'')))))AND(CAST(CASE vt0.c0  WHEN 0.37576156047762155 THEN vt0.c0 WHEN t1.c2 THEN vt0.c0 ELSE vt0.c1 END AS BLOB)))) ORDER BY NULL ASC  NULLS FIRST, NULL DESC INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON ((((((((((t1.c2)AND(0xffffffffd4887655)))OR(t1.c0)))AND(vt0.c0)))AND(t1.c1))) NOT NULL) WHERE (COALESCE(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (NULL)), ((t1.c0) NOT NULL))) ORDER BY NULL ASC  NULLS FIRST, NULL DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((((((((((t1.c2)AND(0Xffffffffd4887655)))OR(t1.c0)))AND(vt0.c0)))AND(t1.c1))) NOT NULL) WHERE (((x'9201b7')IS(((((((t1.c0)OR(vt0.c1)))AND(vt0.c1)))AND(x''))))) ORDER BY NULL ASC  NULLS FIRST, NULL DESC;
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON ((((((((((t1.c2)AND(0xffffffffd4887655)))OR(t1.c0)))AND(vt0.c0)))AND(t1.c1))) NOT NULL) WHERE (((((x'9201b7')IS(((((((t1.c0)OR(vt0.c1)))AND(vt0.c1)))AND(x'')))))AND(CAST(CASE vt0.c0  WHEN 0.37576156047762155 THEN vt0.c0 WHEN t1.c2 THEN vt0.c0 ELSE vt0.c1 END AS BLOB)))) ORDER BY NULL ASC  NULLS FIRST, NULL DESC INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON ((((((((((t1.c2)AND(0xffffffffd4887655)))OR(t1.c0)))AND(vt0.c0)))AND(t1.c1))) NOT NULL) WHERE (COALESCE(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (NULL)), ((t1.c0) NOT NULL))) ORDER BY NULL ASC  NULLS FIRST, NULL DESC;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((CASE v0.c1  WHEN x'd2' THEN vt0.c1 END)AND(CASE WHEN v0.c0 THEN t1.c1 WHEN v0.c2 THEN 0X3c83390e WHEN t1.c2 THEN x'658a43' END)))AND((+ (t1.c1)))));
SELECT ALL * FROM v0, vt0, t1 WHERE (((((CASE v0.c1  WHEN x'd2' THEN vt0.c1 END)AND(CASE WHEN v0.c0 THEN t1.c1 WHEN v0.c2 THEN 0x3c83390e WHEN t1.c2 THEN x'658a43' END)))AND((+ (t1.c1))))) INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE ((((((vt0.c0) IS FALSE)))<=(((((t1.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))))));
SELECT ALL * FROM v0, vt0, t1 WHERE (((((CASE v0.c1  WHEN x'd2' THEN vt0.c1 END)AND(CASE WHEN v0.c0 THEN t1.c1 WHEN v0.c2 THEN 0X3c83390e WHEN t1.c2 THEN x'658a43' END)))AND((+ (t1.c1)))));
SELECT ALL * FROM v0, vt0, t1 WHERE (((((CASE v0.c1  WHEN x'd2' THEN vt0.c1 END)AND(CASE WHEN v0.c0 THEN t1.c1 WHEN v0.c2 THEN 0x3c83390e WHEN t1.c2 THEN x'658a43' END)))AND((+ (t1.c1))))) INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE ((((((vt0.c0) IS FALSE)))<=(((((t1.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))))));
SELECT COUNT(*) FROM v0, t1, vt0 WHERE (((((((vt0.c0))=((vt0.c0)))))<=((0.7474755188509272)))) ORDER BY (((((v0.c1)<>(t1.c0))))==((CASE vt0.c1  WHEN v0.c2 THEN t1.c1 END)))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM v0, t1, vt0 WHERE (((((((((vt0.c0))==((vt0.c0)))))<((0.7474755188509272))))AND(t1.c0))) ORDER BY ((((((x'd3')AND(v0.c2)))AND(v0.c2)))<(-1439107015)) LIMIT 0x0;
SELECT ALL * FROM v0, t1, vt0 WHERE ((NOT (((t1.c1) BETWEEN (v0.c0) AND (vt0.c1)))));
SELECT * FROM v0, t1, vt0 WHERE ((((NOT (((t1.c1) BETWEEN (v0.c0) AND (vt0.c1)))))AND(((((((vt0.c0)<<(v0.c1)))OR(vt0.c0)))AND((((t1.c2))>((vt0.c0)))))))) ORDER BY CASE WHEN (v0.c2 IN (v0.c1, v0.c2)) THEN vt0.c0 COLLATE RTRIM WHEN x'' THEN t1.c2 COLLATE NOCASE WHEN (((vt0.c0, v0.c0, v0.c0))<=((t1.c1, NULL, vt0.c1))) THEN ((2.03799364E8)%(t1.c1)) ELSE ((0.2410570318688996)IS(vt0.c1)) END LIMIT 0X0;
SELECT ALL * FROM v0, t1, vt0 WHERE ((NOT (((t1.c1) BETWEEN (v0.c0) AND (vt0.c1)))));
SELECT * FROM v0, t1, vt0 WHERE ((((NOT (((t1.c1) BETWEEN (v0.c0) AND (vt0.c1)))))AND(((((((vt0.c0)<<(v0.c1)))OR(vt0.c0)))AND((((t1.c2))>((vt0.c0)))))))) ORDER BY CASE WHEN (v0.c2 IN (v0.c1, v0.c2)) THEN vt0.c0 COLLATE RTRIM WHEN x'' THEN t1.c2 COLLATE NOCASE WHEN (((vt0.c0, v0.c0, v0.c0))<=((t1.c1, NULL, vt0.c1))) THEN ((2.03799364E8)%(t1.c1)) ELSE ((0.2410570318688996)IS(vt0.c1)) END LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0)), ((vt0.c1)/('q'))))>((NULL, ((vt0.c1) IS FALSE))))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0 IN (vt0.c0)), ((vt0.c1)/('q'))))>((NULL, ((vt0.c1) IS FALSE)))))AND(CAST(x'' AS NUMERIC)))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0)), ((vt0.c1)/('q'))))>((NULL, ((vt0.c1) IS FALSE))))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0 IN (vt0.c0)), ((vt0.c1)/('q'))))>((NULL, ((vt0.c1) IS FALSE)))))AND(CAST(x'' AS NUMERIC)))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1, v0 WHERE ((NOT ((- (vt0.c1))))) ORDER BY (t1.c2 IN (v0.c2)) COLLATE BINARY DESC  NULLS FIRST, (((t1.c0 IN ()))>=(t1.c0)) DESC  NULLS LAST, ((CAST(vt0.c0 AS NUMERIC))/((t1.c2 IN ())));
SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((NOT ((- (vt0.c1))))) ORDER BY CASE WHEN CAST(t1.c1 AS INTEGER) THEN (v0.c1 IN ()) WHEN (vt0.c0 IN ()) THEN (v0.c2 IN (t1.c2, vt0.c1)) WHEN t1.c0 THEN vt0.c1 COLLATE BINARY WHEN ((((vt0.c1)AND(v0.c2)))AND(v0.c1)) THEN (+ (t1.c2)) ELSE (((vt0.c0))<=((vt0.c0))) END  NULLS LAST, ((t1.c1) IS TRUE) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0, t1, v0 WHERE (CAST(((v0.c2) IS TRUE) AS BLOB)) ORDER BY CASE WHEN CAST(t1.c1 AS INTEGER) THEN (v0.c1 IN ()) WHEN (vt0.c0 IN ()) THEN (v0.c2 IN (t1.c2, vt0.c1)) WHEN t1.c0 THEN vt0.c1 COLLATE BINARY WHEN ((((vt0.c1)AND(v0.c2)))AND(v0.c1)) THEN (+ (t1.c2)) ELSE (((vt0.c0))<=((vt0.c0))) END  NULLS LAST, ((t1.c1) IS TRUE) LIMIT 0x2;
SELECT ALL * FROM vt0, t1, v0 WHERE ((NOT ((- (vt0.c1))))) ORDER BY (t1.c2 IN (v0.c2)) COLLATE BINARY DESC  NULLS FIRST, (((t1.c0 IN ()))>=(t1.c0)) DESC  NULLS LAST, ((CAST(vt0.c0 AS NUMERIC))/((t1.c2 IN ())));
SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((NOT ((- (vt0.c1))))) ORDER BY CASE WHEN CAST(t1.c1 AS INTEGER) THEN (v0.c1 IN ()) WHEN (vt0.c0 IN ()) THEN (v0.c2 IN (t1.c2, vt0.c1)) WHEN t1.c0 THEN vt0.c1 COLLATE BINARY WHEN ((((vt0.c1)AND(v0.c2)))AND(v0.c1)) THEN (+ (t1.c2)) ELSE (((vt0.c0))<=((vt0.c0))) END  NULLS LAST, ((t1.c1) IS TRUE) LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0, t1, v0 WHERE (CAST(((v0.c2) IS TRUE) AS BLOB)) ORDER BY CASE WHEN CAST(t1.c1 AS INTEGER) THEN (v0.c1 IN ()) WHEN (vt0.c0 IN ()) THEN (v0.c2 IN (t1.c2, vt0.c1)) WHEN t1.c0 THEN vt0.c1 COLLATE BINARY WHEN ((((vt0.c1)AND(v0.c2)))AND(v0.c1)) THEN (+ (t1.c2)) ELSE (((vt0.c0))<=((vt0.c0))) END  NULLS LAST, ((t1.c1) IS TRUE) LIMIT 0x2;
SELECT ALL MAX(v0.c0) FROM v0, t1 WHERE (TYPEOF(t1.c0) COLLATE BINARY);
SELECT MAX(v0.c0) FROM v0, t1 WHERE (TYPEOF(t1.c0) COLLATE BINARY) ORDER BY 1.836074277E9 COLLATE NOCASE DESC, CAST(CASE WHEN v0.c1 THEN t1.c0 ELSE v0.c2 END AS BLOB)  NULLS FIRST, ((((json_array_length(v0.c1, v0.c0))OR(t1.c2)))OR(t1.c0 COLLATE BINARY)) DESC INTERSECT SELECT ALL MAX(v0.c0) FROM v0, t1 WHERE ((((((v0.c1)OR(t1.c2)))AND(t1.c2)) IN (CAST(t1.c1 AS INTEGER), ((t1.c0) NOT NULL)))) ORDER BY 1.836074277E9 COLLATE NOCASE DESC, CAST(CASE WHEN v0.c1 THEN t1.c0 ELSE v0.c2 END AS BLOB)  NULLS FIRST, ((((json_array_length(v0.c1, v0.c0))OR(t1.c2)))OR(t1.c0 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM v0, vt0, t1 WHERE (UNLIKELY(CASE WHEN vt0.c0 THEN vt0.c1 ELSE 0.4118288865167157 END));
SELECT ALL COUNT(*) FROM v0, vt0, t1 WHERE (UNLIKELY(CASE WHEN vt0.c0 THEN vt0.c1 ELSE 0.4118288865167157 END)) LIMIT 0x0;
SELECT ALL * FROM t1, v0 NATURAL JOIN vt0 WHERE ('y?]x6') ORDER BY (NOT (((v0.c2) NOT BETWEEN (vt0.c1) AND (t1.c1))))  NULLS LAST, NULL;
SELECT DISTINCT * FROM t1, v0 NATURAL JOIN vt0 WHERE ((('y?]x6')AND(CASE WHEN CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 WHEN t1.c2 THEN x'2512' ELSE vt0.c0 END THEN ((t1.c0)-(t1.c0)) WHEN json_remove(NULL, v0.c0) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c1)) WHEN (~ (vt0.c1)) THEN CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END WHEN ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c1)))OR('')))AND(v0.c2)) THEN json_extract(vt0.c0, v0.c0) END))) ORDER BY (((((((((((((v0.c1 IN (vt0.c1, vt0.c1)))AND((t1.c1 IN (vt0.c1)))))AND((vt0.c1 IN (v0.c1)))))AND(((t1.c2) NOTNULL))))OR(0.5508886562060205)))OR(((v0.c1) IS TRUE))))OR(((t1.c1)*(t1.c1))));
SELECT ALL * FROM t1, v0 NATURAL JOIN vt0 WHERE ('y?]x6') ORDER BY (NOT (((v0.c2) NOT BETWEEN (vt0.c1) AND (t1.c1))))  NULLS LAST, NULL;
SELECT DISTINCT * FROM t1, v0 NATURAL JOIN vt0 WHERE ((('y?]x6')AND(CASE WHEN CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 WHEN t1.c2 THEN x'2512' ELSE vt0.c0 END THEN ((t1.c0)-(t1.c0)) WHEN json_remove(NULL, v0.c0) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c1)) WHEN (~ (vt0.c1)) THEN CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END WHEN ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c1)))OR('')))AND(v0.c2)) THEN json_extract(vt0.c0, v0.c0) END))) ORDER BY (((((((((((((v0.c1 IN (vt0.c1, vt0.c1)))AND((t1.c1 IN (vt0.c1)))))AND((vt0.c1 IN (v0.c1)))))AND(((t1.c2) NOTNULL))))OR(0.5508886562060205)))OR(((v0.c1) IS TRUE))))OR(((t1.c1)*(t1.c1))));
SELECT ALL * FROM t1, vt0, v0 WHERE (((CAST(vt0.c0 AS TEXT))OR(CASE vt0.c0  WHEN v0.c0 THEN t1.c2 END))) ORDER BY (((NOT (t1.c0)))*((((vt0.c0))>=((t1.c0))))), (((t1.c1) IS TRUE) IN (((((((v0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(t1.c2)), ((t1.c1) NOT NULL))) DESC;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(CASE vt0.c0  WHEN v0.c0 THEN t1.c2 END)))AND((((((0.9311961936550573, t1.c2, v0.c1)) NOT BETWEEN ((t1.c0, vt0.c1, NULL)) AND ((v0.c1, v0.c2, NULL)))) NOTNULL)))) ORDER BY (((NOT (t1.c0)))*((((vt0.c0))>=((t1.c0))))), (((t1.c1) IS TRUE) IN (((((((v0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(t1.c2)), ((t1.c1) NOT NULL))) DESC LIMIT 4;
SELECT ALL * FROM t1, vt0, v0 WHERE (((CAST(vt0.c0 AS TEXT))OR(CASE vt0.c0  WHEN v0.c0 THEN t1.c2 END))) ORDER BY (((NOT (t1.c0)))*((((vt0.c0))>=((t1.c0))))), (((t1.c1) IS TRUE) IN (((((((v0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(t1.c2)), ((t1.c1) NOT NULL))) DESC;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(CASE vt0.c0  WHEN v0.c0 THEN t1.c2 END)))AND((((((0.9311961936550573, t1.c2, v0.c1)) NOT BETWEEN ((t1.c0, vt0.c1, NULL)) AND ((v0.c1, v0.c2, NULL)))) NOTNULL)))) ORDER BY (((NOT (t1.c0)))*((((vt0.c0))>=((t1.c0))))), (((t1.c1) IS TRUE) IN (((((((v0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(t1.c2)), ((t1.c1) NOT NULL))) DESC LIMIT 4;
SELECT * FROM t1 WHERE (CASE ((t1.c1) NOT NULL)  WHEN t1.c1 THEN CAST(t1.c2 AS NUMERIC) WHEN ((t1.c2)==(t1.c2)) THEN ((((t1.c1)AND(t1.c2)))OR(t1.c2)) ELSE ((((((((t1.c0)AND(t1.c1)))OR(t1.c2)))OR(t1.c0)))OR(t1.c2)) END);
SELECT ALL * FROM t1 WHERE (((CASE ((t1.c1) NOT NULL)  WHEN t1.c1 THEN CAST(t1.c2 AS NUMERIC) WHEN ((t1.c2)==(t1.c2)) THEN ((((t1.c1)AND(t1.c2)))OR(t1.c2)) ELSE ((((((((t1.c0)AND(t1.c1)))OR(t1.c2)))OR(t1.c0)))OR(t1.c2)) END)AND((+ (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))))) INTERSECT SELECT ALL * FROM t1 WHERE ((((x'76' IN (t1.c2)))LIKE((((t1.c1))==((t1.c0))))));
SELECT * FROM t1 WHERE (CASE ((t1.c1) NOT NULL)  WHEN t1.c1 THEN CAST(t1.c2 AS NUMERIC) WHEN ((t1.c2)==(t1.c2)) THEN ((((t1.c1)AND(t1.c2)))OR(t1.c2)) ELSE ((((((((t1.c0)AND(t1.c1)))OR(t1.c2)))OR(t1.c0)))OR(t1.c2)) END);
SELECT ALL * FROM t1 WHERE (((CASE ((t1.c1) NOT NULL)  WHEN t1.c1 THEN CAST(t1.c2 AS NUMERIC) WHEN ((t1.c2)==(t1.c2)) THEN ((((t1.c1)AND(t1.c2)))OR(t1.c2)) ELSE ((((((((t1.c0)AND(t1.c1)))OR(t1.c2)))OR(t1.c0)))OR(t1.c2)) END)AND((+ (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END))))) INTERSECT SELECT ALL * FROM t1 WHERE ((((x'76' IN (t1.c2)))LIKE((((t1.c1))==((t1.c0))))));
SELECT ALL MAX(t1.c2) FROM t1 WHERE ((NOT ((NOT (t1.c0)))));
SELECT MAX(t1.c2) FROM t1 WHERE ((((NOT ((NOT (t1.c0)))))AND((LIKELY(t1.c2) IN ())))) ORDER BY LIKELY(CAST(t1.c1 AS NUMERIC)), (((t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND ((CASE WHEN t1.c1 THEN t1.c2 ELSE x'e7b7' END))) DESC, ((t1.c2) BETWEEN ((((t1.c2, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c2, t1.c2, t1.c2)))) AND ((t1.c0 IN ()))), CHANGES() LIMIT 1 INTERSECT SELECT ALL MAX(t1.c2) FROM t1 WHERE (((((t1.c0) NOT NULL))<=(((t1.c1)GLOB(0.931590498600965))))) ORDER BY LIKELY(CAST(t1.c1 AS NUMERIC)), (((t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND ((CASE WHEN t1.c1 THEN t1.c2 ELSE x'e7b7' END))) DESC, ((t1.c2) BETWEEN ((((t1.c2, t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c2, t1.c2, t1.c2)))) AND ((t1.c0 IN ()))), CHANGES() LIMIT 1;
SELECT MAX(v0.c0) FROM v0 CROSS JOIN vt0 ON ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c1 END) NOT BETWEEN (CAST(v0.c2 AS NUMERIC)) AND (((v0.c0) IS TRUE))) WHERE ((NOT ((v0.c1 IN (v0.c0)))));
SELECT DISTINCT MAX(v0.c0) FROM v0 CROSS JOIN vt0 ON ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c1 END) NOT BETWEEN (CAST(v0.c2 AS NUMERIC)) AND (((v0.c0) IS TRUE))) WHERE ((NOT ((v0.c1 IN (v0.c0)))));
SELECT ALL * FROM v0, t1, vt0 WHERE ((- (((v0.c1) NOT BETWEEN (v0.c2) AND (t1.c1)))));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE ((((- (((v0.c1) NOT BETWEEN (v0.c2) AND (t1.c1)))))AND(((v0.c2)>>(v0.c2)) COLLATE NOCASE))) LIMIT 0x2;
SELECT ALL * FROM v0, t1, vt0 WHERE ((- (((v0.c1) NOT BETWEEN (v0.c2) AND (t1.c1)))));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE ((((- (((v0.c1) NOT BETWEEN (v0.c2) AND (t1.c1)))))AND(((v0.c2)>>(v0.c2)) COLLATE NOCASE))) LIMIT 0x2;
SELECT ALL COUNT(*) FROM v0, t1 INNER JOIN vt0 ON MAX(COALESCE(t1.c2, v0.c0, t1.c1), (+ (vt0.c1)), IFNULL(vt0.c1, vt0.c1), ((((((((x'')OR(v0.c0)))OR(v0.c0)))OR(t1.c1)))OR(t1.c0)), CASE t1.c2  WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN x'' ELSE v0.c0 END, v0.c2) WHERE ((((((t1.c1)) BETWEEN ((t1.c0)) AND ((v0.c1))))>(LIKELIHOOD(DISTINCT t1.c0, t1.c2))));
SELECT DISTINCT COUNT(*) FROM v0, t1 INNER JOIN vt0 ON MAX(COALESCE(t1.c2, v0.c0, t1.c1), (+ (vt0.c1)), IFNULL(vt0.c1, vt0.c1), ((((((((x'')OR(v0.c0)))OR(v0.c0)))OR(t1.c1)))OR(t1.c0)), CASE t1.c2  WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN x'' ELSE v0.c0 END, v0.c2) WHERE ((((((t1.c1)) BETWEEN ((t1.c0)) AND ((v0.c1))))>(LIKELIHOOD(DISTINCT t1.c0, t1.c2)))) ORDER BY (NOT (v0.c1 COLLATE BINARY)), ((((((CAST(vt0.c1 AS BLOB))AND((+ (vt0.c0)))))AND((t1.c2 IN ()))))AND(((v0.c0)>(t1.c2)))) ASC, (((((+ (t1.c2)))OR((vt0.c1 IN (v0.c2)))))AND(((t1.c1) BETWEEN (v0.c1) AND (t1.c1)))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM v0, t1 INNER JOIN vt0 ON MAX(COALESCE(t1.c2, v0.c0, t1.c1), (+ (vt0.c1)), IFNULL(vt0.c1, vt0.c1), ((((((((x'')OR(v0.c0)))OR(v0.c0)))OR(t1.c1)))OR(t1.c0)), CASE t1.c2  WHEN v0.c2 THEN vt0.c1 WHEN v0.c1 THEN x'' ELSE v0.c0 END, v0.c2) WHERE (((v0.c1 IN (v0.c2)) IN (((t1.c2)<=(v0.c1))))) ORDER BY (NOT (v0.c1 COLLATE BINARY)), ((((((CAST(vt0.c1 AS BLOB))AND((+ (vt0.c0)))))AND((t1.c2 IN ()))))AND(((v0.c0)>(t1.c2)))) ASC, (((((+ (t1.c2)))OR((vt0.c1 IN (v0.c2)))))AND(((t1.c1) BETWEEN (v0.c1) AND (t1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t1, v0 WHERE ((((((t1.c2)LIKE(vt0.c1)), (+ (vt0.c1))))>=((CAST(v0.c0 AS TEXT), ((t1.c1)<>(t1.c2)))))) ORDER BY ((vt0.c0)>>(t1.c2)) COLLATE BINARY ASC  NULLS FIRST, (((CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END, ((((((((v0.c0)AND(t1.c1)))OR(t1.c0)))OR(v0.c1)))AND(v0.c0)), ((vt0.c0)+(t1.c2)), CASE vt0.c1  WHEN t1.c2 THEN vt0.c1 ELSE v0.c0 END))=(((- (vt0.c1)), x'77', (((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))), ABS(v0.c1)))) DESC  NULLS LAST, NULL;
SELECT ALL * FROM vt0, t1, v0 WHERE ((((((t1.c2)LIKE(vt0.c1)), (+ (vt0.c1))))>((CAST(v0.c0 AS TEXT), ((t1.c1)<(t1.c2)))))) ORDER BY (((NULL, v0.c2, v0.c1)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER), (v0.c1 IN (NULL)), t1.c1)) AND ((((x'd1') NOT NULL), ((v0.c2)OR(-1.304575661E9)), (~ (x''))))) ASC, CASE WHEN ((v0.c1) BETWEEN (t1.c0) AND (v0.c2)) THEN t1.c0 COLLATE NOCASE WHEN ((((((v0.c1)AND(t1.c0)))AND(vt0.c0)))AND(v0.c0)) THEN UPPER(DISTINCT vt0.c1) WHEN (t1.c0 IN (t1.c1)) THEN CAST(vt0.c1 AS NUMERIC) ELSE (((t1.c1)) NOT BETWEEN ((vt0.c1)) AND ((t1.c2))) END LIMIT 0X1;
SELECT ALL * FROM vt0, t1, v0 WHERE ((((((t1.c2)LIKE(vt0.c1)), (+ (vt0.c1))))>=((CAST(v0.c0 AS TEXT), ((t1.c1)<>(t1.c2)))))) ORDER BY ((vt0.c0)>>(t1.c2)) COLLATE BINARY ASC  NULLS FIRST, (((CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END, ((((((((v0.c0)AND(t1.c1)))OR(t1.c0)))OR(v0.c1)))AND(v0.c0)), ((vt0.c0)+(t1.c2)), CASE vt0.c1  WHEN t1.c2 THEN vt0.c1 ELSE v0.c0 END))=(((- (vt0.c1)), x'77', (((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))), ABS(v0.c1)))) DESC  NULLS LAST, NULL;
SELECT ALL * FROM vt0, t1, v0 WHERE ((((((t1.c2)LIKE(vt0.c1)), (+ (vt0.c1))))>((CAST(v0.c0 AS TEXT), ((t1.c1)<(t1.c2)))))) ORDER BY (((NULL, v0.c2, v0.c1)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER), (v0.c1 IN (NULL)), t1.c1)) AND ((((x'd1') NOT NULL), ((v0.c2)OR(-1.304575661E9)), (~ (x''))))) ASC, CASE WHEN ((v0.c1) BETWEEN (t1.c0) AND (v0.c2)) THEN t1.c0 COLLATE NOCASE WHEN ((((((v0.c1)AND(t1.c0)))AND(vt0.c0)))AND(v0.c0)) THEN UPPER(DISTINCT vt0.c1) WHEN (t1.c0 IN (t1.c1)) THEN CAST(vt0.c1 AS NUMERIC) ELSE (((t1.c1)) NOT BETWEEN ((vt0.c1)) AND ((t1.c2))) END LIMIT 0X1;
SELECT * FROM vt0 CROSS JOIN v0 ON ((((((RTRIM(v0.c2))OR((vt0.c0 IN (v0.c1)))))OR(x'4e')))OR(CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 WHEN '1836074277' THEN v0.c0 WHEN vt0.c1 THEN v0.c1 END)) WHERE (((((((v0.c1) NOT BETWEEN (v0.c0) AND (NULL)))OR(v0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN x'' WHEN '1886441339' THEN v0.c0 ELSE v0.c0 END))) ORDER BY (NOT (((v0.c2)-(vt0.c0))));
SELECT * FROM vt0 CROSS JOIN v0 ON ((((((RTRIM(v0.c2))OR((vt0.c0 IN (v0.c1)))))OR(x'4e')))OR(CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 WHEN '1836074277' THEN v0.c0 WHEN vt0.c1 THEN v0.c1 END)) WHERE (((((((v0.c1) NOT BETWEEN (v0.c0) AND (NULL)))OR(v0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN x'' WHEN '1886441339' THEN v0.c0 ELSE v0.c0 END))) ORDER BY (NOT (((v0.c2)-(vt0.c0)))) INTERSECT SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((((RTRIM(v0.c2))OR((vt0.c0 IN (v0.c1)))))OR(x'4e')))OR(CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 WHEN '1836074277' THEN v0.c0 WHEN vt0.c1 THEN v0.c1 END)) WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN vt0.c0 END THEN (((v0.c0, v0.c2, v0.c1))>((vt0.c1, v0.c2, v0.c0))) WHEN ((v0.c2)IS(v0.c1)) THEN CASE WHEN v0.c1 THEN v0.c1 WHEN vt0.c0 THEN v0.c1 ELSE vt0.c0 END WHEN ((v0.c1) ISNULL) THEN '.+' WHEN CAST(v0.c2 AS INTEGER) THEN (((v0.c1, vt0.c0, v0.c0, 1558937502, v0.c1))>((v0.c2, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) WHEN ((vt0.c0) IS FALSE) THEN (((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))) ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 ELSE vt0.c1 END END) ORDER BY (NOT (((v0.c2)-(vt0.c0))));
SELECT * FROM vt0 CROSS JOIN v0 ON ((((((RTRIM(v0.c2))OR((vt0.c0 IN (v0.c1)))))OR(x'4e')))OR(CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 WHEN '1836074277' THEN v0.c0 WHEN vt0.c1 THEN v0.c1 END)) WHERE (((((((v0.c1) NOT BETWEEN (v0.c0) AND (NULL)))OR(v0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN x'' WHEN '1886441339' THEN v0.c0 ELSE v0.c0 END))) ORDER BY (NOT (((v0.c2)-(vt0.c0))));
SELECT * FROM vt0 CROSS JOIN v0 ON ((((((RTRIM(v0.c2))OR((vt0.c0 IN (v0.c1)))))OR(x'4e')))OR(CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 WHEN '1836074277' THEN v0.c0 WHEN vt0.c1 THEN v0.c1 END)) WHERE (((((((v0.c1) NOT BETWEEN (v0.c0) AND (NULL)))OR(v0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN x'' WHEN '1886441339' THEN v0.c0 ELSE v0.c0 END))) ORDER BY (NOT (((v0.c2)-(vt0.c0)))) INTERSECT SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((((RTRIM(v0.c2))OR((vt0.c0 IN (v0.c1)))))OR(x'4e')))OR(CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 WHEN '1836074277' THEN v0.c0 WHEN vt0.c1 THEN v0.c1 END)) WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN vt0.c0 END THEN (((v0.c0, v0.c2, v0.c1))>((vt0.c1, v0.c2, v0.c0))) WHEN ((v0.c2)IS(v0.c1)) THEN CASE WHEN v0.c1 THEN v0.c1 WHEN vt0.c0 THEN v0.c1 ELSE vt0.c0 END WHEN ((v0.c1) ISNULL) THEN '.+' WHEN CAST(v0.c2 AS INTEGER) THEN (((v0.c1, vt0.c0, v0.c0, 1558937502, v0.c1))>((v0.c2, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) WHEN ((vt0.c0) IS FALSE) THEN (((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))) ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c1 WHEN v0.c1 THEN vt0.c1 ELSE vt0.c1 END END) ORDER BY (NOT (((v0.c2)-(vt0.c0))));
SELECT * FROM v0 WHERE (CHAR(((v0.c1) NOT BETWEEN (v0.c2) AND (x'f791e1')), ((v0.c0)LIKE(v0.c2)), ((((((v0.c1)OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))) ORDER BY (v0.c1 IN (v0.c2, x'b3')) COLLATE RTRIM  NULLS LAST, ((((v0.c0) NOTNULL)) IS TRUE) DESC  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE (CHAR(((v0.c1) NOT BETWEEN (v0.c2) AND (x'f791e1')), ((v0.c0)LIKE(v0.c2)), ((((((v0.c1)OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))) ORDER BY (v0.c1 IN (v0.c2, x'b3')) COLLATE RTRIM  NULLS LAST, ((((v0.c0) NOTNULL)) IS TRUE) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM v0 WHERE ((((((NOT (v0.c0)))AND(PRINTF(v0.c0, v0.c2, v0.c1))))OR((((v0.c2, v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c1, v0.c1, v0.c0, v0.c2)))))) ORDER BY (v0.c1 IN (v0.c2, x'b3')) COLLATE RTRIM  NULLS LAST, ((((v0.c0) NOTNULL)) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (CHAR(((v0.c1) NOT BETWEEN (v0.c2) AND (x'f791e1')), ((v0.c0)LIKE(v0.c2)), ((((((v0.c1)OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))) ORDER BY (v0.c1 IN (v0.c2, x'b3')) COLLATE RTRIM  NULLS LAST, ((((v0.c0) NOTNULL)) IS TRUE) DESC  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE (CHAR(((v0.c1) NOT BETWEEN (v0.c2) AND (x'f791e1')), ((v0.c0)LIKE(v0.c2)), ((((((v0.c1)OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))) ORDER BY (v0.c1 IN (v0.c2, x'b3')) COLLATE RTRIM  NULLS LAST, ((((v0.c0) NOTNULL)) IS TRUE) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM v0 WHERE ((((((NOT (v0.c0)))AND(PRINTF(v0.c0, v0.c2, v0.c1))))OR((((v0.c2, v0.c1, v0.c2, v0.c1)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c1, v0.c1, v0.c0, v0.c2)))))) ORDER BY (v0.c1 IN (v0.c2, x'b3')) COLLATE RTRIM  NULLS LAST, ((((v0.c0) NOTNULL)) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((NOT (v0.c0)) COLLATE BINARY) ORDER BY (((''))<>(((- (v0.c1))))) ASC, NULLIF(((v0.c2)AND(v0.c0)), HEX(DISTINCT 0.3091681079198969))  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE ((((NOT (v0.c0)) COLLATE BINARY)AND((((v0.c1, v0.c1, v0.c1, v0.c0))>((v0.c1, v0.c2, v0.c1, 0.6758379943482878))) COLLATE RTRIM))) ORDER BY (((''))<>(((- (v0.c1))))) ASC, NULLIF(((v0.c2)AND(v0.c0)), HEX(DISTINCT 0.3091681079198969))  NULLS FIRST;
SELECT * FROM v0 WHERE ((NOT (v0.c0)) COLLATE BINARY) ORDER BY (((''))<>(((- (v0.c1))))) ASC, NULLIF(((v0.c2)AND(v0.c0)), HEX(DISTINCT 0.3091681079198969))  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE ((((NOT (v0.c0)) COLLATE BINARY)AND((((v0.c1, v0.c1, v0.c1, v0.c0))>((v0.c1, v0.c2, v0.c1, 0.6758379943482878))) COLLATE RTRIM))) ORDER BY (((''))<>(((- (v0.c1))))) ASC, NULLIF(((v0.c2)AND(v0.c0)), HEX(DISTINCT 0.3091681079198969))  NULLS FIRST;
SELECT MAX(t1.c2) FROM t1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) IS TRUE)) ORDER BY CAST((~ (t1.c1)) AS NUMERIC)  NULLS FIRST;
SELECT DISTINCT MAX(t1.c2) FROM t1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1))) IS TRUE))AND(((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c1)))) AND ((((vt0.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c2)))))))) ORDER BY CAST((~ (t1.c1)) AS NUMERIC)  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE WHEN LIKELY(t1.c0) THEN TRIM(DISTINCT t1.c0) WHEN t1.c1 THEN ((t1.c2) ISNULL) WHEN (0.3927992102802289 IN (t1.c1)) THEN CAST('**>FrU' AS REAL) ELSE UPPER(t1.c1) END) ORDER BY LOWER(DISTINCT t1.c2) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((CASE WHEN LIKELY(t1.c0) THEN TRIM(DISTINCT t1.c0) WHEN t1.c1 THEN ((t1.c2) ISNULL) WHEN (0.3927992102802289 IN (t1.c1)) THEN CAST('**>FrU' AS REAL) ELSE UPPER(t1.c1) END)AND((- ((+ (t1.c1))))))) ORDER BY (((t1.c1 IN (t1.c1)))>=(0.6006759226743825)) LIMIT 1 INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE WHEN ((t1.c1)-(t1.c0)) THEN (((t1.c0, t1.c2))<((t1.c1, t1.c2))) END) ORDER BY (((t1.c1 IN (t1.c1)))>=(0.6006759226743825)) LIMIT 1;
SELECT ALL * FROM vt0, v0, t1 WHERE (CASE NULLIF(DISTINCT v0.c2, vt0.c0)  WHEN TOTAL_CHANGES() THEN (vt0.c0 IN (v0.c1, t1.c1)) END) ORDER BY ((((t1.c0) BETWEEN (t1.c1) AND (t1.c2)))<=(NULL)) DESC  NULLS FIRST;
SELECT * FROM vt0, v0, t1 WHERE (CASE NULLIF(DISTINCT v0.c2, vt0.c0)  WHEN TOTAL_CHANGES() THEN (vt0.c0 IN (v0.c1, t1.c1)) END) ORDER BY ((((((v0.c2) NOT BETWEEN (vt0.c1) AND (t1.c1)))AND((~ (vt0.c0)))))AND(((t1.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))) DESC  NULLS FIRST, '722361434', ((((NULL) IS FALSE)) NOTNULL)  NULLS FIRST INTERSECT SELECT ALL * FROM vt0, v0, t1 WHERE (((v0.c1 COLLATE BINARY)IS(((t1.c1) ISNULL)))) ORDER BY ((((((v0.c2) NOT BETWEEN (vt0.c1) AND (t1.c1)))AND((~ (vt0.c0)))))AND(((t1.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))) DESC  NULLS FIRST, '722361434', ((((NULL) IS FALSE)) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM vt0, v0, t1 WHERE (CASE NULLIF(DISTINCT v0.c2, vt0.c0)  WHEN TOTAL_CHANGES() THEN (vt0.c0 IN (v0.c1, t1.c1)) END) ORDER BY ((((t1.c0) BETWEEN (t1.c1) AND (t1.c2)))<=(NULL)) DESC  NULLS FIRST;
SELECT * FROM vt0, v0, t1 WHERE (CASE NULLIF(DISTINCT v0.c2, vt0.c0)  WHEN TOTAL_CHANGES() THEN (vt0.c0 IN (v0.c1, t1.c1)) END) ORDER BY ((((((v0.c2) NOT BETWEEN (vt0.c1) AND (t1.c1)))AND((~ (vt0.c0)))))AND(((t1.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))) DESC  NULLS FIRST, '722361434', ((((NULL) IS FALSE)) NOTNULL)  NULLS FIRST INTERSECT SELECT ALL * FROM vt0, v0, t1 WHERE (((v0.c1 COLLATE BINARY)IS(((t1.c1) ISNULL)))) ORDER BY ((((((v0.c2) NOT BETWEEN (vt0.c1) AND (t1.c1)))AND((~ (vt0.c0)))))AND(((t1.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))) DESC  NULLS FIRST, '722361434', ((((NULL) IS FALSE)) NOTNULL)  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1, vt0 WHERE ((+ (x'')));
SELECT DISTINCT MIN(t1.c1) FROM t1, vt0 WHERE ((+ (x'')));
SELECT * FROM t1 WHERE ((((((+ (t1.c0)))OR((NOT (t1.c1)))))OR((('3(BtQ s') IS TRUE))));
SELECT ALL * FROM t1 WHERE ((((((((+ (t1.c0)))OR((NOT (t1.c1)))))OR((('3(BtQ s') IS TRUE))))AND((((((((t1.c0, t1.c2, t1.c2, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1, t1.c2)) AND ((t1.c1, t1.c2, t1.c1, t1.c2))))OR((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c1))))))AND((NOT (t1.c0))))))) ORDER BY (((((((t1.c1 IN (t1.c0)))AND(CAST(t1.c2 AS NUMERIC))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN -1678509763 ELSE t1.c2 END)))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'' WHEN t1.c2 THEN t1.c1 ELSE 0.5035986536868896 END)) ASC  NULLS LAST, ((t1.c0 IN ()) IN ((((0.33399857729659865)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))), ((x'')-(t1.c2)))), ((t1.c1)&(t1.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (CAST((- (t1.c2)) AS BLOB)) ORDER BY (((((((t1.c1 IN (t1.c0)))AND(CAST(t1.c2 AS NUMERIC))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN 0Xffffffff9bf3f93d ELSE t1.c2 END)))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'' WHEN t1.c2 THEN t1.c1 ELSE 0.5035986536868896 END)) ASC  NULLS LAST, ((t1.c0 IN ()) IN ((((0.33399857729659865)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))), ((x'')-(t1.c2)))), ((t1.c1)&(t1.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((((((+ (t1.c0)))OR((NOT (t1.c1)))))OR((('3(BtQ s') IS TRUE))));
SELECT ALL * FROM t1 WHERE ((((((((+ (t1.c0)))OR((NOT (t1.c1)))))OR((('3(BtQ s') IS TRUE))))AND((((((((t1.c0, t1.c2, t1.c2, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c1, t1.c2)) AND ((t1.c1, t1.c2, t1.c1, t1.c2))))OR((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c1))))))AND((NOT (t1.c0))))))) ORDER BY (((((((t1.c1 IN (t1.c0)))AND(CAST(t1.c2 AS NUMERIC))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN -1678509763 ELSE t1.c2 END)))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'' WHEN t1.c2 THEN t1.c1 ELSE 0.5035986536868896 END)) ASC  NULLS LAST, ((t1.c0 IN ()) IN ((((0.33399857729659865)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))), ((x'')-(t1.c2)))), ((t1.c1)&(t1.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS LAST INTERSECT SELECT * FROM t1 WHERE (CAST((- (t1.c2)) AS BLOB)) ORDER BY (((((((t1.c1 IN (t1.c0)))AND(CAST(t1.c2 AS NUMERIC))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN 0Xffffffff9bf3f93d ELSE t1.c2 END)))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN x'' WHEN t1.c2 THEN t1.c1 ELSE 0.5035986536868896 END)) ASC  NULLS LAST, ((t1.c0 IN ()) IN ((((0.33399857729659865)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))), ((x'')-(t1.c2)))), ((t1.c1)&(t1.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c1)AND(CASE WHEN '1878729150' THEN LIKE(t1.c1, 0.06744620616027563) ELSE 0xffffffffd0a5a5e6 END))) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1)) AS REAL));
SELECT MAX(t1.c2) FROM v0, t1, vt0 WHERE (((((t1.c2)LIKE(vt0.c1))) NOT BETWEEN (((v0.c2) BETWEEN (t1.c0) AND (v0.c1))) AND (((((((v0.c1)OR(v0.c1)))AND(vt0.c0)))AND(v0.c0)))));
SELECT ALL MAX(t1.c2) FROM v0, t1, vt0 WHERE (((((t1.c2)LIKE(vt0.c1))) NOT BETWEEN (((v0.c2) BETWEEN (t1.c0) AND (v0.c1))) AND (((((((v0.c1)OR(v0.c1)))AND(vt0.c0)))AND(v0.c0))))) ORDER BY CASE ((vt0.c1)>=(vt0.c0))  WHEN ((vt0.c0)!=(t1.c0)) THEN (((t1.c2, t1.c1)) BETWEEN ((t1.c1, NULL)) AND ((x'02f80d', t1.c0))) END  NULLS LAST, (((NOT ('_ᗕHIpT'))) ISNULL), CAST(json_remove(t1.c2, v0.c1, v0.c0, vt0.c1, v0.c0) AS NUMERIC) DESC;
SELECT MAX(t1.c0) FROM t1 WHERE ((((t1.c2, t1.c0, t1.c2)) NOT BETWEEN ((LIKELIHOOD(DISTINCT t1.c2, t1.c2), (t1.c1 IN (t1.c0, t1.c0)), t1.c1 COLLATE NOCASE)) AND ((((((((t1.c0)OR(t1.c0)))OR(t1.c2)))AND(t1.c0)), (t1.c1 IN (t1.c2)), CHANGES())))) ORDER BY CAST(t1.c0 AS BLOB) COLLATE BINARY  NULLS FIRST, (((t1.c1, t1.c2, NULL, t1.c1))>=((t1.c0, t1.c0, t1.c1, t1.c0))) COLLATE RTRIM, ((x'56' COLLATE RTRIM) BETWEEN (json_quote(x'')) AND ((((t1.c2, t1.c2, t1.c2, NULL)) NOT BETWEEN ((t1.c2, t1.c1, t1.c2, t1.c1)) AND ((t1.c0, NULL, t1.c2, t1.c2))))), '<p}' ASC  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((((t1.c2, t1.c0, t1.c2)) NOT BETWEEN ((LIKELIHOOD(DISTINCT t1.c2, t1.c2), (t1.c1 IN (t1.c0, t1.c0)), t1.c1 COLLATE NOCASE)) AND ((((((((t1.c0)OR(t1.c0)))OR(t1.c2)))AND(t1.c0)), (t1.c1 IN (t1.c2)), CHANGES()))))AND(t1.c1 COLLATE RTRIM))) ORDER BY ((t1.c2)&(x'ce29e4')) COLLATE RTRIM  NULLS LAST LIMIT 0 INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE (t1.c2) ORDER BY ((t1.c2)&(x'ce29e4')) COLLATE RTRIM  NULLS LAST LIMIT 0;
SELECT * FROM vt0 INNER JOIN t1 ON ((((((((((v0.c1)AND(t1.c1)))OR(vt0.c1)))OR(v0.c2)))OR(''))) ISNULL) LEFT OUTER JOIN v0 ON (((+ (v0.c2))) BETWEEN (NULL) AND ((vt0.c1 IN (vt0.c1)))) WHERE ((((CAST(t1.c1 AS BLOB), CASE t1.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END, '' COLLATE NOCASE))<=((((vt0.c1)AND(v0.c1)), ((vt0.c0)<<('-453080462')), ((v0.c0) NOT NULL)))));
SELECT * FROM vt0 INNER JOIN t1 ON ((((((((((v0.c1)AND(t1.c1)))OR(vt0.c1)))OR(v0.c2)))OR(''))) ISNULL) INNER JOIN v0 ON (((+ (v0.c2))) BETWEEN (NULL) AND ((vt0.c1 IN (vt0.c1)))) WHERE ((((CAST(t1.c1 AS BLOB), CASE t1.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END, '' COLLATE NOCASE))<((((vt0.c1)AND(v0.c1)), ((vt0.c0)<<('-453080462')), ((v0.c0) NOT NULL))))) LIMIT 2 INTERSECT SELECT ALL * FROM vt0 INNER JOIN t1 ON ((((((((((v0.c1)AND(t1.c1)))OR(vt0.c1)))OR(v0.c2)))OR(''))) ISNULL) INNER JOIN v0 ON (((+ (v0.c2))) BETWEEN (NULL) AND ((vt0.c1 IN (vt0.c1)))) WHERE ((((- (v0.c2)))/(((vt0.c0) BETWEEN (NULL) AND (0.5943048545035844))))) LIMIT 0X2;
SELECT * FROM vt0 INNER JOIN t1 ON ((((((((((v0.c1)AND(t1.c1)))OR(vt0.c1)))OR(v0.c2)))OR(''))) ISNULL) LEFT OUTER JOIN v0 ON (((+ (v0.c2))) BETWEEN (NULL) AND ((vt0.c1 IN (vt0.c1)))) WHERE ((((CAST(t1.c1 AS BLOB), CASE t1.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END, '' COLLATE NOCASE))<=((((vt0.c1)AND(v0.c1)), ((vt0.c0)<<('-453080462')), ((v0.c0) NOT NULL)))));
SELECT * FROM vt0 INNER JOIN t1 ON ((((((((((v0.c1)AND(t1.c1)))OR(vt0.c1)))OR(v0.c2)))OR(''))) ISNULL) INNER JOIN v0 ON (((+ (v0.c2))) BETWEEN (NULL) AND ((vt0.c1 IN (vt0.c1)))) WHERE ((((CAST(t1.c1 AS BLOB), CASE t1.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END, '' COLLATE NOCASE))<((((vt0.c1)AND(v0.c1)), ((vt0.c0)<<('-453080462')), ((v0.c0) NOT NULL))))) LIMIT 2 INTERSECT SELECT ALL * FROM vt0 INNER JOIN t1 ON ((((((((((v0.c1)AND(t1.c1)))OR(vt0.c1)))OR(v0.c2)))OR(''))) ISNULL) INNER JOIN v0 ON (((+ (v0.c2))) BETWEEN (NULL) AND ((vt0.c1 IN (vt0.c1)))) WHERE ((((- (v0.c2)))/(((vt0.c0) BETWEEN (NULL) AND (0.5943048545035844))))) LIMIT 0X2;
SELECT ALL MAX(t1.c2) FROM v0 CROSS JOIN t1 ON (((~ (t1.c1))) BETWEEN ((~ (vt0.c0))) AND ('-762292652')) NATURAL JOIN vt0 WHERE ((+ (((v0.c0)IS(v0.c0)))));
SELECT ALL MAX(t1.c2) FROM v0 CROSS JOIN t1 ON (((~ (t1.c1))) BETWEEN ((~ (vt0.c0))) AND ('-762292652')) NATURAL JOIN vt0 WHERE ((((+ (((v0.c0)IS(v0.c0)))))AND(((((((((((vt0.c0)AND(v0.c1)))OR(v0.c0)))AND(t1.c0)))OR(vt0.c1)))<(((vt0.c1) ISNULL)))))) ORDER BY CAST(((((((vt0.c0)AND(v0.c1)))OR(v0.c1)))OR(v0.c1)) AS BLOB) DESC  NULLS FIRST, MAX('-790725355', ((v0.c0) IS TRUE)) DESC;
SELECT * FROM v0, t1 WHERE (CASE WHEN ((((((v0.c1)OR(t1.c2)))OR(t1.c1)))AND(t1.c0)) THEN ((t1.c2) BETWEEN (t1.c2) AND (v0.c2)) ELSE ((v0.c0) IS FALSE) END);
SELECT DISTINCT * FROM v0, t1 WHERE (CASE WHEN ((((((v0.c1)OR(t1.c2)))OR(t1.c1)))AND(t1.c0)) THEN ((t1.c2) BETWEEN (t1.c2) AND (v0.c2)) ELSE ((v0.c0) IS FALSE) END) INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE ((((t1.c1 IN (t1.c0))) NOTNULL));
SELECT * FROM v0, t1 WHERE (CASE WHEN ((((((v0.c1)OR(t1.c2)))OR(t1.c1)))AND(t1.c0)) THEN ((t1.c2) BETWEEN (t1.c2) AND (v0.c2)) ELSE ((v0.c0) IS FALSE) END);
SELECT DISTINCT * FROM v0, t1 WHERE (CASE WHEN ((((((v0.c1)OR(t1.c2)))OR(t1.c1)))AND(t1.c0)) THEN ((t1.c2) BETWEEN (t1.c2) AND (v0.c2)) ELSE ((v0.c0) IS FALSE) END) INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE ((((t1.c1 IN (t1.c0))) NOTNULL));
SELECT MIN(vt0.c0) FROM vt0 WHERE ('(&.,');
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ('(&.,');
SELECT MAX(vt0.c0) FROM vt0, t1 WHERE (((((NOT (vt0.c0)), ((t1.c0)AND(t1.c0))))<=((NULL, ((vt0.c0)>(vt0.c1)))))) ORDER BY NULL DESC, ((((((t1.c0)AND(vt0.c1)))OR(t1.c2)))||(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))) ASC;
SELECT MAX(vt0.c0) FROM vt0, t1 WHERE (((((NOT (vt0.c0)), ((t1.c0)AND(t1.c0))))<=((NULL, ((vt0.c0)>(vt0.c1)))))) ORDER BY NULL DESC, ((((((t1.c0)AND(vt0.c1)))OR(t1.c2)))||(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))) ASC LIMIT 1;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (t1.c1)) WHERE ((((NOT (t1.c0)))IS(CHAR(t1.c0, t1.c0, NULL))));
SELECT ALL * FROM vt0 INNER JOIN t1 ON ((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (t1.c1)) WHERE ((((NOT (t1.c0)))IS(CHAR(t1.c0, t1.c0, NULL)))) ORDER BY ((((((((((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((+ (t1.c2)))))OR(((vt0.c0) IS FALSE))))AND((t1.c1 IN (vt0.c0)))))OR(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST, ((((((((-1853916675)AND(vt0.c1)))OR(t1.c2)))OR(1744414291)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST, ((((((((t1.c0) BETWEEN (vt0.c0) AND (t1.c0)))AND((((vt0.c1, t1.c0))>((t1.c0, t1.c0))))))AND((- (vt0.c1)))))AND(((x'')-(t1.c2))))  NULLS FIRST LIMIT 2;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (t1.c1)) WHERE ((((NOT (t1.c0)))IS(CHAR(t1.c0, t1.c0, NULL))));
SELECT ALL * FROM vt0 INNER JOIN t1 ON ((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (t1.c1)) WHERE ((((NOT (t1.c0)))IS(CHAR(t1.c0, t1.c0, NULL)))) ORDER BY ((((((((((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((+ (t1.c2)))))OR(((vt0.c0) IS FALSE))))AND((t1.c1 IN (vt0.c0)))))OR(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST, ((((((((-1853916675)AND(vt0.c1)))OR(t1.c2)))OR(1744414291)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST, ((((((((t1.c0) BETWEEN (vt0.c0) AND (t1.c0)))AND((((vt0.c1, t1.c0))>((t1.c0, t1.c0))))))AND((- (vt0.c1)))))AND(((x'')-(t1.c2))))  NULLS FIRST LIMIT 2;
SELECT * FROM v0 WHERE ((+ (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY ((CAST(v0.c0 AS REAL))/(((v0.c1) NOTNULL)))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((+ (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND((((((v0.c0, v0.c1))==((v0.c1, v0.c1))))|(CASE v0.c2  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END))))) ORDER BY ((v0.c0 COLLATE NOCASE)|(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))) LIMIT 1;
SELECT * FROM v0 WHERE ((+ (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY ((CAST(v0.c0 AS REAL))/(((v0.c1) NOTNULL)))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((+ (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND((((((v0.c0, v0.c1))==((v0.c1, v0.c1))))|(CASE v0.c2  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END))))) ORDER BY ((v0.c0 COLLATE NOCASE)|(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))) LIMIT 1;
SELECT * FROM v0, t1, vt0 WHERE ((((((vt0.c0, t1.c1, v0.c1)) BETWEEN ((t1.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, v0.c0, t1.c1))))LIKE(((v0.c1) BETWEEN (t1.c2) AND (t1.c1)))));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE ((((((vt0.c0, t1.c1, v0.c1)) BETWEEN ((t1.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, v0.c0, t1.c1))))LIKE(((v0.c1) BETWEEN (t1.c2) AND (t1.c1)))));
SELECT * FROM v0, t1, vt0 WHERE ((((((vt0.c0, t1.c1, v0.c1)) BETWEEN ((t1.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, v0.c0, t1.c1))))LIKE(((v0.c1) BETWEEN (t1.c2) AND (t1.c1)))));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE ((((((vt0.c0, t1.c1, v0.c1)) BETWEEN ((t1.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, v0.c0, t1.c1))))LIKE(((v0.c1) BETWEEN (t1.c2) AND (t1.c1)))));
SELECT MAX(v0.c1) FROM v0 NATURAL JOIN t1 WHERE ((((((((((v0.c1))<=((t1.c2))))OR(((v0.c2)-(v0.c1)))))OR(((((t1.c2)AND(t1.c2)))AND('0q')))))AND((v0.c1 IN ())))) ORDER BY ((t1.c1) IS TRUE)  NULLS FIRST;
SELECT ALL MAX(v0.c1) FROM v0 NATURAL JOIN t1 WHERE ((((((((((v0.c1))<((t1.c2))))OR(((v0.c2)-(v0.c1)))))OR(((((t1.c2)AND(t1.c2)))AND('0q')))))AND((v0.c1 IN ())))) ORDER BY ((((t1.c0)&(x'be')))+(CASE t1.c0  WHEN v0.c2 THEN x'' WHEN v0.c0 THEN v0.c1 END))  NULLS FIRST;
SELECT ALL MAX(vt0.c0) FROM vt0, t1, v0 WHERE (v0.c2);
SELECT ALL MAX(vt0.c0) FROM vt0, t1, v0 WHERE (v0.c2) LIMIT 0X0 INTERSECT SELECT MAX(vt0.c0) FROM vt0, t1, v0 WHERE (((CAST(t1.c2 AS TEXT)) NOT NULL)) LIMIT 0X0;
SELECT ALL MIN(vt0.c1) FROM vt0, v0 WHERE (vt0.c0) ORDER BY CAST((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c1))) AS INTEGER) ASC, (((0.009749833220359605) BETWEEN (v0.c1) AND (v0.c1)) IN ()) ASC  NULLS LAST, (NOT (((v0.c2) BETWEEN (0xffffffffd489f0e9) AND ('-372834161'))));
SELECT MIN(vt0.c1) FROM vt0, v0 WHERE (((vt0.c0)AND(((((((((((CAST(vt0.c1 AS INTEGER))AND(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND((+ (vt0.c1)))))OR((vt0.c0 IN (v0.c1)))))AND((((vt0.c1, v0.c1))<((vt0.c1, v0.c0))))))OR(((v0.c0)>(vt0.c1))))))) ORDER BY ((v0.c2 COLLATE RTRIM)GLOB(((v0.c0)OR(vt0.c0))))  NULLS LAST INTERSECT SELECT MIN(vt0.c1) FROM vt0, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (((vt0.c1)%(0.7600032146326124))) AND (ROUND(v0.c0, v0.c2)))) ORDER BY ((v0.c2 COLLATE RTRIM)GLOB(((v0.c0)OR(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((t1.c0)AND(vt0.c1)))OR(t1.c1))) BETWEEN (NULLIF(t1.c2, v0.c2)) AND (CASE x''  WHEN t1.c2 THEN t1.c1 END))) ORDER BY (('' COLLATE BINARY) BETWEEN (CASE vt0.c1  WHEN t1.c2 THEN 0x15271282 ELSE v0.c0 END) AND (((((((vt0.c0)AND(t1.c0)))OR(vt0.c1)))OR(v0.c1))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((((((t1.c0)AND(vt0.c1)))OR(t1.c1))) BETWEEN (NULLIF(t1.c2, v0.c2)) AND (CASE x''  WHEN t1.c2 THEN t1.c1 END)))AND(UPPER(vt0.c0) COLLATE BINARY))) ORDER BY (('' COLLATE BINARY) BETWEEN (CASE vt0.c1  WHEN t1.c2 THEN 354882178 ELSE v0.c0 END) AND (((((((vt0.c0)AND(t1.c0)))OR(vt0.c1)))OR(v0.c1))));
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((t1.c0)AND(vt0.c1)))OR(t1.c1))) BETWEEN (NULLIF(t1.c2, v0.c2)) AND (CASE x''  WHEN t1.c2 THEN t1.c1 END))) ORDER BY (('' COLLATE BINARY) BETWEEN (CASE vt0.c1  WHEN t1.c2 THEN 0x15271282 ELSE v0.c0 END) AND (((((((vt0.c0)AND(t1.c0)))OR(vt0.c1)))OR(v0.c1))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((((((t1.c0)AND(vt0.c1)))OR(t1.c1))) BETWEEN (NULLIF(t1.c2, v0.c2)) AND (CASE x''  WHEN t1.c2 THEN t1.c1 END)))AND(UPPER(vt0.c0) COLLATE BINARY))) ORDER BY (('' COLLATE BINARY) BETWEEN (CASE vt0.c1  WHEN t1.c2 THEN 354882178 ELSE v0.c0 END) AND (((((((vt0.c0)AND(t1.c0)))OR(vt0.c1)))OR(v0.c1))));
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2)OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE v0.c2 END)))AND((((v0.c0, v0.c2, v0.c2))<((vt0.c0, vt0.c1, vt0.c0))))));
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2)OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE v0.c2 END)))AND((((v0.c0, v0.c2, v0.c2))<((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY CAST(NULL AS BLOB) ASC, CASE WHEN vt0.c0 THEN v0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c1 THEN v0.c1 WHEN vt0.c1 THEN v0.c2 WHEN x'a5b7bc' THEN v0.c1 END COLLATE RTRIM  NULLS LAST, LIKELY(((vt0.c1) ISNULL)) ASC LIMIT 0;
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2)OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE v0.c2 END)))AND((((v0.c0, v0.c2, v0.c2))<((vt0.c0, vt0.c1, vt0.c0))))));
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2)OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE v0.c2 END)))AND((((v0.c0, v0.c2, v0.c2))<((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY CAST(NULL AS BLOB) ASC, CASE WHEN vt0.c0 THEN v0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c1 THEN v0.c1 WHEN vt0.c1 THEN v0.c2 WHEN x'a5b7bc' THEN v0.c1 END COLLATE RTRIM  NULLS LAST, LIKELY(((vt0.c1) ISNULL)) ASC LIMIT 0;
SELECT MAX(vt0.c0) FROM vt0, v0 WHERE ((~ ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))))));
SELECT DISTINCT MAX(vt0.c0) FROM vt0, v0 WHERE ((~ ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((vt0.c0)))))) LIMIT 0x0;
SELECT MIN(v0.c0) FROM vt0, v0 WHERE ((~ (GLOB(v0.c0, v0.c0)))) ORDER BY ((CASE v0.c1  WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 ELSE vt0.c0 END) BETWEEN (x'a3') AND ('-820178229')) ASC  NULLS FIRST;
SELECT DISTINCT MIN(v0.c0) FROM vt0, v0 WHERE ((~ (GLOB(v0.c0, v0.c0)))) ORDER BY CASE CASE WHEN v0.c2 THEN vt0.c0 WHEN v0.c0 THEN v0.c2 END  WHEN CASE vt0.c1  WHEN v0.c1 THEN vt0.c0 ELSE v0.c0 END THEN (v0.c1 IN ()) WHEN vt0.c1 THEN ((NULL)&(v0.c1)) ELSE (((vt0.c0, vt0.c1, v0.c1, vt0.c0, '1744414291')) NOT BETWEEN ((vt0.c1, v0.c2, v0.c2, 'A', v0.c1)) AND ((vt0.c0, vt0.c0, v0.c0, 1040163858, v0.c0))) END, (((v0.c1))>=((((vt0.c0) NOT NULL)))) INTERSECT SELECT DISTINCT MIN(v0.c0) FROM vt0, v0 WHERE ((+ (CAST(v0.c1 AS BLOB)))) ORDER BY CASE CASE WHEN v0.c2 THEN vt0.c0 WHEN v0.c0 THEN v0.c2 END  WHEN CASE vt0.c1  WHEN v0.c1 THEN vt0.c0 ELSE v0.c0 END THEN (v0.c1 IN ()) WHEN vt0.c1 THEN ((NULL)&(v0.c1)) ELSE (((vt0.c0, vt0.c1, v0.c1, vt0.c0, '1744414291')) NOT BETWEEN ((vt0.c1, v0.c2, v0.c2, 'A', v0.c1)) AND ((vt0.c0, vt0.c0, v0.c0, 0X3dffa412, v0.c0))) END, (((v0.c1))>=((((vt0.c0) NOT NULL))));
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL));
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((NULL) NOT NULL)) BETWEEN (t1.c0) AND ((t1.c1 IN ())))) ORDER BY CASE t1.c2  WHEN vt0.c0 THEN vt0.c1 ELSE t1.c0 END COLLATE NOCASE, (t1.c0 COLLATE NOCASE IN ((~ (t1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((NULL) NOT NULL)) BETWEEN (t1.c0) AND ((t1.c1 IN ()))))AND(((((((t1.c2)*(t1.c0)))AND((((t1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c2))))))AND(CAST(t1.c2 AS INTEGER)))))) ORDER BY CASE t1.c2  WHEN vt0.c0 THEN vt0.c1 ELSE t1.c0 END COLLATE NOCASE, (t1.c0 COLLATE NOCASE IN ((~ (t1.c0)))) DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT COUNT(*) FROM t1, vt0 WHERE (x'335a60') ORDER BY CASE t1.c2  WHEN vt0.c0 THEN vt0.c1 ELSE t1.c0 END COLLATE NOCASE, (t1.c0 COLLATE NOCASE IN ((~ (t1.c0)))) DESC  NULLS FIRST LIMIT 0;
SELECT MAX(t1.c2) FROM vt0, t1 WHERE (((CAST('{m}v' AS NUMERIC))&(CASE WHEN t1.c1 THEN NULL WHEN 0.38965977161847043 THEN t1.c1 ELSE t1.c1 END))) ORDER BY t1.c1  NULLS LAST;
SELECT DISTINCT MAX(t1.c2) FROM vt0, t1 WHERE (((((CAST('{m}v' AS NUMERIC))&(CASE WHEN t1.c1 THEN NULL WHEN 0.38965977161847043 THEN t1.c1 ELSE t1.c1 END)))AND((NOT (x'050176' COLLATE RTRIM))))) ORDER BY t1.c1  NULLS LAST LIMIT 0X1;
SELECT MAX(t1.c0) FROM v0, t1 WHERE (((((v0.c1)<<(t1.c1)))LIKE(((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT MAX(t1.c0) FROM v0, t1 WHERE (((((((v0.c1)<<(t1.c1)))LIKE(((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND((((t1.c2)<=(v0.c0)) IN (NULL, DATETIME(v0.c1, t1.c0, v0.c1)))))) LIMIT 1;
SELECT MIN(v0.c2) FROM v0 INNER JOIN t1 ON ((LIKELIHOOD(DISTINCT vt0.c0, t1.c1))|(CAST(v0.c2 AS NUMERIC))) LEFT OUTER JOIN vt0 ON ((((vt0.c0)AND(0.39136151917807493)))AND(x'' COLLATE RTRIM)) WHERE (((t1.c0) BETWEEN (0.6738451884296034) AND (((t1.c1)*(v0.c2)))));
SELECT DISTINCT MIN(v0.c2) FROM v0 INNER JOIN t1 ON ((LIKELIHOOD(DISTINCT vt0.c0, t1.c1))|(CAST(v0.c2 AS NUMERIC))) INNER JOIN vt0 ON ((((vt0.c0)AND(0.39136151917807493)))AND(x'' COLLATE RTRIM)) WHERE (((((t1.c0) BETWEEN (0.6738451884296034) AND (((t1.c1)*(v0.c2)))))AND(vt0.c1))) LIMIT 1;
SELECT * FROM v0, t1 WHERE (CAST(t1.c1 AS REAL) COLLATE RTRIM) ORDER BY (- (0.44691668312427013))  NULLS FIRST, ((t1.c2) ISNULL) ASC, LIKELY(((t1.c1) NOT NULL)) DESC  NULLS LAST;
SELECT DISTINCT * FROM v0, t1 WHERE (((CAST(t1.c1 AS REAL) COLLATE RTRIM)AND(NULLIF(LIKELY(DISTINCT v0.c1), t1.c0)))) ORDER BY (- (0.44691668312427013))  NULLS FIRST, ((t1.c2) ISNULL) ASC, LIKELY(((t1.c1) NOT NULL)) DESC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE ((((((((v0.c2)AND(v0.c2)))AND(v0.c2)))OR(t1.c0)) IN ())) ORDER BY (- (0.44691668312427013))  NULLS FIRST, ((t1.c2) ISNULL) ASC, LIKELY(((t1.c1) NOT NULL)) DESC  NULLS LAST LIMIT 2;
SELECT * FROM v0, t1 WHERE (CAST(t1.c1 AS REAL) COLLATE RTRIM) ORDER BY (- (0.44691668312427013))  NULLS FIRST, ((t1.c2) ISNULL) ASC, LIKELY(((t1.c1) NOT NULL)) DESC  NULLS LAST;
SELECT DISTINCT * FROM v0, t1 WHERE (((CAST(t1.c1 AS REAL) COLLATE RTRIM)AND(NULLIF(LIKELY(DISTINCT v0.c1), t1.c0)))) ORDER BY (- (0.44691668312427013))  NULLS FIRST, ((t1.c2) ISNULL) ASC, LIKELY(((t1.c1) NOT NULL)) DESC  NULLS LAST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE ((((((((v0.c2)AND(v0.c2)))AND(v0.c2)))OR(t1.c0)) IN ())) ORDER BY (- (0.44691668312427013))  NULLS FIRST, ((t1.c2) ISNULL) ASC, LIKELY(((t1.c1) NOT NULL)) DESC  NULLS LAST LIMIT 2;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt0.c0)))) AND ((LENGTH(vt0.c0))))) ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))OR(0.7680047117617212)))OR(vt0.c0)))OR(vt0.c0)))LIKE(vt0.c1));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt0.c0)))) AND ((LENGTH(vt0.c0))))) ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))OR(0.7680047117617212)))OR(vt0.c0)))OR(vt0.c0)))LIKE(vt0.c1)) LIMIT 0X0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((x'' IN ()) COLLATE BINARY) ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))OR(0.7680047117617212)))OR(vt0.c0)))OR(vt0.c0)))LIKE(vt0.c1)) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((t1.c1)*(t1.c0)) COLLATE BINARY) ORDER BY ((((((((t1.c1)LIKE(t1.c1)))OR(((((((((t1.c0)OR(t1.c2)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c2)))))AND((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1)))));
SELECT ALL * FROM t1 WHERE (((((t1.c1)*(t1.c0)) COLLATE BINARY)AND((NOT (((((t1.c2)OR(t1.c2)))OR(t1.c0))))))) ORDER BY ((((((((t1.c1)LIKE(t1.c1)))OR(((((((((t1.c0)OR(t1.c2)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c2)))))AND((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))) INTERSECT SELECT * FROM t1 WHERE (((COALESCE(DISTINCT t1.c1, t1.c1))>(((t1.c1) ISNULL)))) ORDER BY ((((((((t1.c1)LIKE(t1.c1)))OR(((((((((t1.c0)OR(t1.c2)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c2)))))AND((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1)))));
SELECT ALL * FROM t1 WHERE (((t1.c1)*(t1.c0)) COLLATE BINARY) ORDER BY ((((((((t1.c1)LIKE(t1.c1)))OR(((((((((t1.c0)OR(t1.c2)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c2)))))AND((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1)))));
SELECT ALL * FROM t1 WHERE (((((t1.c1)*(t1.c0)) COLLATE BINARY)AND((NOT (((((t1.c2)OR(t1.c2)))OR(t1.c0))))))) ORDER BY ((((((((t1.c1)LIKE(t1.c1)))OR(((((((((t1.c0)OR(t1.c2)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c2)))))AND((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))) INTERSECT SELECT * FROM t1 WHERE (((COALESCE(DISTINCT t1.c1, t1.c1))>(((t1.c1) ISNULL)))) ORDER BY ((((((((t1.c1)LIKE(t1.c1)))OR(((((((((t1.c0)OR(t1.c2)))OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c2)))))AND((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1)))));
SELECT MIN(vt0.c0) FROM v0 CROSS JOIN vt0 ON (((((v0.c0, v0.c2))<=((v0.c0, vt0.c0)))) NOT BETWEEN ((- (vt0.c1))) AND (vt0.c1 COLLATE NOCASE)) WHERE (CAST(CAST(vt0.c1 AS TEXT) AS BLOB));
SELECT ALL MIN(vt0.c0) FROM v0 CROSS JOIN vt0 ON (((((v0.c0, v0.c2))<=((v0.c0, vt0.c0)))) NOT BETWEEN ((- (vt0.c1))) AND (vt0.c1 COLLATE NOCASE)) WHERE (CAST(CAST(vt0.c1 AS TEXT) AS BLOB)) ORDER BY ((x'') NOTNULL) COLLATE RTRIM DESC  NULLS LAST INTERSECT SELECT ALL MIN(vt0.c0) FROM v0 CROSS JOIN vt0 ON (((((v0.c0, v0.c2))<=((v0.c0, vt0.c0)))) NOT BETWEEN ((- (vt0.c1))) AND (vt0.c1 COLLATE NOCASE)) WHERE (vt0.c1) ORDER BY ((x'') NOTNULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL MIN(v0.c2) FROM v0 WHERE ((((0.037893285820464584) NOT BETWEEN (v0.c2) AND (v0.c1)) IN (((v0.c0)>=(v0.c0)), (- (v0.c0)))));
SELECT DISTINCT MIN(v0.c2) FROM v0 WHERE ((((0.037893285820464584) NOT BETWEEN (v0.c2) AND (v0.c1)) IN (((v0.c0)>=(v0.c0)), (- (v0.c0))))) LIMIT 0X0;
SELECT * FROM t1, vt0, v0 WHERE (TIME(((((v0.c2)OR(v0.c0)))OR(t1.c2)), CAST(t1.c1 AS NUMERIC), ((v0.c1) IS FALSE)));
SELECT * FROM t1, vt0, v0 WHERE (((TIME(((((v0.c2)OR(v0.c0)))OR(t1.c2)), CAST(t1.c1 AS NUMERIC), ((v0.c1) IS FALSE)))AND(vt0.c1))) LIMIT 0x4 INTERSECT SELECT ALL * FROM t1, vt0, v0 WHERE (((ABS(DISTINCT v0.c0)) BETWEEN (((t1.c2)*(t1.c0))) AND (CASE ''  WHEN t1.c2 THEN vt0.c0 END))) LIMIT 0x4;
SELECT * FROM t1, vt0, v0 WHERE (TIME(((((v0.c2)OR(v0.c0)))OR(t1.c2)), CAST(t1.c1 AS NUMERIC), ((v0.c1) IS FALSE)));
SELECT * FROM t1, vt0, v0 WHERE (((TIME(((((v0.c2)OR(v0.c0)))OR(t1.c2)), CAST(t1.c1 AS NUMERIC), ((v0.c1) IS FALSE)))AND(vt0.c1))) LIMIT 0x4 INTERSECT SELECT ALL * FROM t1, vt0, v0 WHERE (((ABS(DISTINCT v0.c0)) BETWEEN (((t1.c2)*(t1.c0))) AND (CASE ''  WHEN t1.c2 THEN vt0.c0 END))) LIMIT 0x4;
SELECT * FROM vt0, t1 WHERE (((t1.c0)/((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT ALL * FROM vt0, t1 WHERE (((t1.c0)/((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) LIMIT 0;
SELECT * FROM vt0, t1 WHERE (((t1.c0)/((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT ALL * FROM vt0, t1 WHERE (((t1.c0)/((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) LIMIT 0;
SELECT COUNT(*) FROM v0, vt0, t1 WHERE ((~ (v0.c1)) COLLATE RTRIM) ORDER BY t1.c0  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM v0, vt0, t1 WHERE ((((~ (v0.c1)) COLLATE RTRIM)AND(((((((((((vt0.c1)OR(v0.c2)))OR(x'a8')))OR(((t1.c2) IS TRUE))))AND(((t1.c2)OR(v0.c1)))))OR(t1.c0 COLLATE NOCASE))))) ORDER BY (((0.9816831705489792 IN (v0.c2, t1.c1)))IS(CAST(t1.c0 AS REAL))) ASC, CAST(v0.c1 AS NUMERIC) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END  WHEN v0.c2 COLLATE BINARY THEN CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN '-25471052' ELSE NULL END ELSE (((v0.c0))<((v0.c2))) END);
SELECT ALL * FROM v0 WHERE (((CASE CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END  WHEN v0.c2 COLLATE BINARY THEN CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN '-25471052' ELSE NULL END ELSE (((v0.c0))<((v0.c2))) END)AND(((DATETIME(v0.c2, v0.c2, x'', v0.c0))|((v0.c0 IN (0.8524195393967913, v0.c2, v0.c1))))))) LIMIT 0x0 INTERSECT SELECT * FROM v0 WHERE (v0.c1) LIMIT 0;
SELECT ALL * FROM v0 WHERE (CASE CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END  WHEN v0.c2 COLLATE BINARY THEN CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN '-25471052' ELSE NULL END ELSE (((v0.c0))<((v0.c2))) END);
SELECT ALL * FROM v0 WHERE (((CASE CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END  WHEN v0.c2 COLLATE BINARY THEN CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN '-25471052' ELSE NULL END ELSE (((v0.c0))<((v0.c2))) END)AND(((DATETIME(v0.c2, v0.c2, x'', v0.c0))|((v0.c0 IN (0.8524195393967913, v0.c2, v0.c1))))))) LIMIT 0x0 INTERSECT SELECT * FROM v0 WHERE (v0.c1) LIMIT 0;
SELECT COUNT(*) FROM v0 NATURAL JOIN t1 WHERE ((((v0.c1, v0.c1, v0.c1, t1.c2)) NOT BETWEEN (((NOT (v0.c0)), (v0.c1 IN (t1.c2)), (0.5498297612140136 IN ()), (((v0.c1, v0.c0, t1.c1)) BETWEEN ((t1.c2, t1.c2, t1.c0)) AND ((t1.c0, v0.c1, v0.c2))))) AND ((((v0.c0) ISNULL), ((t1.c0)OR(v0.c2)), (((t1.c1, v0.c1, '-1329299782'))<((v0.c0, x'b9', v0.c2))), (((('w')AND(v0.c2)))AND(v0.c0))))));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t1 WHERE ((((v0.c1, v0.c1, v0.c1, t1.c2)) NOT BETWEEN (((NOT (v0.c0)), (v0.c1 IN (t1.c2)), (0.5498297612140136 IN ()), (((v0.c1, v0.c0, t1.c1)) BETWEEN ((t1.c2, t1.c2, t1.c0)) AND ((t1.c0, v0.c1, v0.c2))))) AND ((((v0.c0) ISNULL), ((t1.c0)OR(v0.c2)), (((t1.c1, v0.c1, '-1329299782'))<((v0.c0, x'b9', v0.c2))), (((('w')AND(v0.c2)))AND(v0.c0)))))) ORDER BY (((v0.c0, 0Xffffffffea2cac19, v0.c1)) NOT BETWEEN ((((v0.c0) ISNULL), x'', t1.c1 COLLATE NOCASE)) AND ((((v0.c2)GLOB(t1.c2)), ((t1.c1)>>(v0.c1)), (((v0.c0, t1.c0)) NOT BETWEEN ((t1.c1, t1.c2)) AND ((t1.c1, v0.c2)))))) ASC  NULLS LAST;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))||(((vt0.c1)GLOB(vt0.c1))))) ORDER BY (((((((((vt0.c0, 0xffffffff9f35ea74, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0, vt0.c1))))AND(x'a7')))OR((- (vt0.c0)))))AND(LOWER(vt0.c1))), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('-602905820'))))>>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS FIRST;
SELECT MAX(vt0.c1) FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))||(((vt0.c1)GLOB(vt0.c1))))) ORDER BY (((((((((vt0.c0, 0Xffffffff9f35ea74, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0, vt0.c1))))AND(x'a7')))OR((- (vt0.c0)))))AND(LOWER(vt0.c1))), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('-602905820'))))>>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS FIRST INTERSECT SELECT MAX(vt0.c1) FROM vt0 WHERE (((((vt0.c1)&(vt0.c0)))+(((vt0.c1) NOTNULL)))) ORDER BY (((((((((vt0.c0, -1623856524, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0, vt0.c1))))AND(x'a7')))OR((- (vt0.c0)))))AND(LOWER(vt0.c1))), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('-602905820'))))>>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (v0.c2) ORDER BY (+ ((+ (v0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM v0, vt0 WHERE (((v0.c2)AND(CAST(((v0.c1) IS TRUE) AS TEXT)))) ORDER BY (+ ((+ (v0.c1))))  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (v0.c2) ORDER BY (+ ((+ (v0.c1))))  NULLS LAST;
SELECT DISTINCT * FROM v0, vt0 WHERE (((v0.c2)AND(CAST(((v0.c1) IS TRUE) AS TEXT)))) ORDER BY (+ ((+ (v0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 WHERE (((CAST(t1.c2 AS INTEGER)) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0))) AND ((vt0.c1 IN (0.49829640008409926)))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((CAST(t1.c2 AS INTEGER)) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0))) AND ((vt0.c1 IN (0.49829640008409926)))))AND(CAST(CAST(t1.c1 AS TEXT) AS NUMERIC)))) ORDER BY (((NULL, ((vt0.c0)>>(vt0.c1)), CAST(vt0.c1 AS TEXT)))<>((CASE WHEN t1.c1 THEN t1.c2 END, GLOB(vt0.c0, t1.c0), ((t1.c1) NOTNULL))))  NULLS LAST LIMIT 0 INTERSECT SELECT COUNT(*) FROM t1, vt0 WHERE (((vt0.c1)<(((((((((t1.c1)OR(vt0.c0)))AND(vt0.c0)))AND('-1701502689')))AND(vt0.c0))))) ORDER BY (((NULL, ((vt0.c0)>>(vt0.c1)), CAST(vt0.c1 AS TEXT)))!=((CASE WHEN t1.c1 THEN t1.c2 END, GLOB(vt0.c0, t1.c0), ((t1.c1) NOTNULL))))  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 WHERE (((((t1.c2) NOT NULL))GLOB(((t1.c1) NOT NULL)))) ORDER BY ((t1.c0 COLLATE NOCASE) IS FALSE) DESC, ((t1.c2 COLLATE NOCASE)||((+ ('1244837631')))) ASC;
SELECT * FROM t1 WHERE (((((t1.c2) NOT NULL))GLOB(((t1.c1) NOT NULL)))) ORDER BY (- (((t1.c2) IS TRUE))), (((t1.c0)) NOT BETWEEN ((json_object(t1.c0, t1.c2, t1.c0, t1.c0, t1.c0))) AND ((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2))))) ASC  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (CASE CAST('-2127066135' AS TEXT)  WHEN NULL THEN ((t1.c0)==(t1.c1)) ELSE t1.c1 END) ORDER BY (- (((t1.c2) IS TRUE))), (((t1.c0)) NOT BETWEEN ((json_object(t1.c0, t1.c2, t1.c0, t1.c0, t1.c0))) AND ((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2))))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c2) NOT NULL))GLOB(((t1.c1) NOT NULL)))) ORDER BY ((t1.c0 COLLATE NOCASE) IS FALSE) DESC, ((t1.c2 COLLATE NOCASE)||((+ ('1244837631')))) ASC;
SELECT * FROM t1 WHERE (((((t1.c2) NOT NULL))GLOB(((t1.c1) NOT NULL)))) ORDER BY (- (((t1.c2) IS TRUE))), (((t1.c0)) NOT BETWEEN ((json_object(t1.c0, t1.c2, t1.c0, t1.c0, t1.c0))) AND ((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2))))) ASC  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (CASE CAST('-2127066135' AS TEXT)  WHEN NULL THEN ((t1.c0)==(t1.c1)) ELSE t1.c1 END) ORDER BY (- (((t1.c2) IS TRUE))), (((t1.c0)) NOT BETWEEN ((json_object(t1.c0, t1.c2, t1.c0, t1.c0, t1.c0))) AND ((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2))))) ASC  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 CROSS JOIN vt0 ON ((CASE WHEN t1.c0 THEN vt0.c0 END)<<(x'036a')) WHERE ((NOT (CASE vt0.c1  WHEN t1.c2 THEN t1.c1 END)));
SELECT DISTINCT MAX(t1.c1) FROM t1 CROSS JOIN vt0 ON ((CASE WHEN t1.c0 THEN vt0.c0 END)<<(x'036a')) WHERE ((NOT (CASE vt0.c1  WHEN t1.c2 THEN t1.c1 END))) LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 CROSS JOIN vt0 ON ((CASE WHEN t1.c0 THEN vt0.c0 END)<<(x'036a')) WHERE (CASE 0.027060727932115114  WHEN CAST(vt0.c1 AS BLOB) THEN x'85' ELSE ((t1.c1) NOT NULL) END) LIMIT 0;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) WHERE (((CASE WHEN v0.c2 THEN vt0.c0 END)/(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c1)))));
SELECT * FROM v0 INNER JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) WHERE (((CASE WHEN v0.c2 THEN vt0.c0 END)/(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c1))))) ORDER BY ((CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c1 END) NOT NULL) DESC  NULLS FIRST, (~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST LIMIT 1;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) WHERE (((CASE WHEN v0.c2 THEN vt0.c0 END)/(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c1)))));
SELECT * FROM v0 INNER JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) WHERE (((CASE WHEN v0.c2 THEN vt0.c0 END)/(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c1))))) ORDER BY ((CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c1 END) NOT NULL) DESC  NULLS FIRST, (~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST LIMIT 1;
SELECT ALL * FROM vt0, v0, t1 WHERE (0x20ca48eb) ORDER BY t1.c2 DESC  NULLS FIRST, (~ (((v0.c2) NOT BETWEEN (vt0.c1) AND (v0.c1)))) DESC;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((550127851)AND(CAST(t1.c2 AS TEXT) COLLATE RTRIM))) ORDER BY t1.c2 DESC  NULLS FIRST, (~ (((v0.c2) NOT BETWEEN (vt0.c1) AND (v0.c1)))) DESC LIMIT 0;
SELECT ALL * FROM vt0, v0, t1 WHERE (0x20ca48eb) ORDER BY t1.c2 DESC  NULLS FIRST, (~ (((v0.c2) NOT BETWEEN (vt0.c1) AND (v0.c1)))) DESC;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((550127851)AND(CAST(t1.c2 AS TEXT) COLLATE RTRIM))) ORDER BY t1.c2 DESC  NULLS FIRST, (~ (((v0.c2) NOT BETWEEN (vt0.c1) AND (v0.c1)))) DESC LIMIT 0;
SELECT * FROM v0 WHERE ((NOT (TRIM(DISTINCT v0.c0))));
SELECT DISTINCT * FROM v0 WHERE ((((NOT (TRIM(DISTINCT v0.c0))))AND(CASE WHEN CHAR(v0.c1) THEN CAST(v0.c1 AS INTEGER) ELSE ((v0.c0) BETWEEN (v0.c2) AND (0.6831539244855179)) END))) ORDER BY ((((x'')IS NOT(v0.c1))) NOT NULL) LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0 WHERE (v0.c2) ORDER BY ((((x'')IS NOT(v0.c1))) NOT NULL) LIMIT 1;
SELECT * FROM v0 WHERE ((NOT (TRIM(DISTINCT v0.c0))));
SELECT DISTINCT * FROM v0 WHERE ((((NOT (TRIM(DISTINCT v0.c0))))AND(CASE WHEN CHAR(v0.c1) THEN CAST(v0.c1 AS INTEGER) ELSE ((v0.c0) BETWEEN (v0.c2) AND (0.6831539244855179)) END))) ORDER BY ((((x'')IS NOT(v0.c1))) NOT NULL) LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0 WHERE (v0.c2) ORDER BY ((((x'')IS NOT(v0.c1))) NOT NULL) LIMIT 1;
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c1)))AND(x'9c')))AND(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) AND (vt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOTNULL) WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((vt0.c1)<<(vt0.c0)) THEN (+ (vt0.c0)) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN ((vt0.c0)&(vt0.c0)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c1)))AND(x'9c')))AND(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) AND (vt0.c1 COLLATE BINARY))) ORDER BY vt0.c1 DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c1 DESC  NULLS FIRST LIMIT 0x2;
SELECT MAX(t1.c1) FROM vt0, t1, v0 WHERE (((((t1.c0, t1.c2)) NOT BETWEEN ((v0.c1, t1.c2)) AND ((vt0.c1, v0.c0))) IN (vt0.c0)));
SELECT MAX(t1.c1) FROM vt0, t1, v0 WHERE (((((((t1.c0, t1.c2)) NOT BETWEEN ((v0.c1, t1.c2)) AND ((vt0.c1, v0.c0))) IN (vt0.c0)))AND(TYPEOF(((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c2)))))) ORDER BY (((t1.c2 IN ()))>>(((vt0.c1)OR(t1.c1)))) ASC;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))>>(CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END))) ORDER BY CASE WHEN t1.c2 THEN (NOT ('135398466')) WHEN SQLITE_COMPILEOPTION_USED(0.3614021151810909) THEN CASE -1.083689078E9  WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c0 END END DESC  NULLS FIRST, (((+ (t1.c0)))<=((~ (t1.c2))))  NULLS LAST, ((((t1.c2)<(t1.c0)))>>((((NULL, t1.c0, t1.c0))=((t1.c0, t1.c1, t1.c1))))) DESC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))>>(CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END))) ORDER BY json_object(((t1.c0) BETWEEN (t1.c0) AND (0.06851695557047943)), '1909464343')  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c1) NOTNULL)) NOT BETWEEN (CASE WHEN t1.c1 THEN t1.c2 END) AND (t1.c2))) ORDER BY json_object(((t1.c0) BETWEEN (t1.c0) AND (0.06851695557047943)), '1909464343')  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))LIKE((vt0.c0 IN ())))) ORDER BY ((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), ((((vt0.c0) IS TRUE)) IS FALSE)  NULLS LAST, ABS(((vt0.c1)>=(vt0.c0)))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))LIKE((vt0.c0 IN ()))))AND(((vt0.c0 IN (vt0.c0, vt0.c1)) IN (vt0.c1 COLLATE NOCASE, vt0.c1 COLLATE BINARY))))) ORDER BY (((((vt0.c1)LIKE(vt0.c1)), (- (vt0.c1)), CASE vt0.c1  WHEN vt0.c1 THEN NULL ELSE vt0.c1 END, (vt0.c1 IN ()), ((vt0.c1) NOTNULL)))>=(((vt0.c0 IN ('3')), (vt0.c0 IN (vt0.c1, vt0.c1, vt0.c0)), vt0.c0, (('228315338')>=(vt0.c1)), (~ (vt0.c1))))) ASC, IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE  NULLS FIRST LIMIT 2;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))LIKE((vt0.c0 IN ())))) ORDER BY ((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), ((((vt0.c0) IS TRUE)) IS FALSE)  NULLS LAST, ABS(((vt0.c1)>=(vt0.c0)))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))LIKE((vt0.c0 IN ()))))AND(((vt0.c0 IN (vt0.c0, vt0.c1)) IN (vt0.c1 COLLATE NOCASE, vt0.c1 COLLATE BINARY))))) ORDER BY (((((vt0.c1)LIKE(vt0.c1)), (- (vt0.c1)), CASE vt0.c1  WHEN vt0.c1 THEN NULL ELSE vt0.c1 END, (vt0.c1 IN ()), ((vt0.c1) NOTNULL)))>=(((vt0.c0 IN ('3')), (vt0.c0 IN (vt0.c1, vt0.c1, vt0.c0)), vt0.c0, (('228315338')>=(vt0.c1)), (~ (vt0.c1))))) ASC, IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE  NULLS FIRST LIMIT 2;
SELECT * FROM v0 WHERE (0.14515385243093581);
SELECT DISTINCT * FROM v0 WHERE (0.14515385243093581) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM v0 WHERE ((((((v0.c1, NULL, v0.c2))>((v0.c2, v0.c0, v0.c2))))|(CAST(v0.c1 AS TEXT)))) LIMIT 0;
SELECT * FROM v0 WHERE (0.14515385243093581);
SELECT DISTINCT * FROM v0 WHERE (0.14515385243093581) LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM v0 WHERE ((((((v0.c1, NULL, v0.c2))>((v0.c2, v0.c0, v0.c2))))|(CAST(v0.c1 AS TEXT)))) LIMIT 0;
SELECT MAX(v0.c1) FROM t1 INNER JOIN v0 ON CASE (((-111518474, v0.c1, v0.c2)) NOT BETWEEN ((t1.c2, t1.c1, v0.c2)) AND ((v0.c2, t1.c1, v0.c0)))  WHEN x'8075' THEN ((v0.c2)>=(t1.c0)) WHEN COALESCE(v0.c1, t1.c0) THEN LOWER(v0.c0) WHEN 0.38850390904286514 COLLATE RTRIM THEN ((t1.c1) ISNULL) WHEN COALESCE(DISTINCT t1.c2, v0.c2) THEN x'36' WHEN (- (t1.c0)) THEN (((v0.c1, v0.c2))<((v0.c2, v0.c0))) END WHERE ((NULL IN (((v0.c0) NOT BETWEEN (v0.c1) AND (t1.c2))))) ORDER BY '1040163858' DESC, ((SQLITE_COMPILEOPTION_USED(v0.c2))IS NOT(NULLIF(v0.c1, t1.c2)))  NULLS LAST, (((((((v0.c1)AND(v0.c0)))OR(v0.c0)))OR(t1.c2)) IN (CASE WHEN t1.c0 THEN v0.c1 END, LIKELY(t1.c1)))  NULLS FIRST;
SELECT DISTINCT MAX(v0.c1) FROM t1 INNER JOIN v0 ON CASE (((-111518474, v0.c1, v0.c2)) NOT BETWEEN ((t1.c2, t1.c1, v0.c2)) AND ((v0.c2, t1.c1, v0.c0)))  WHEN x'8075' THEN ((v0.c2)>=(t1.c0)) WHEN COALESCE(v0.c1, t1.c0) THEN LOWER(v0.c0) WHEN 0.38850390904286514 COLLATE RTRIM THEN ((t1.c1) ISNULL) WHEN COALESCE(DISTINCT t1.c2, v0.c2) THEN x'36' WHEN (- (t1.c0)) THEN (((v0.c1, v0.c2))<((v0.c2, v0.c0))) END WHERE ((((NULL IN (((v0.c0) NOT BETWEEN (v0.c1) AND (t1.c2)))))AND(x'f2'))) ORDER BY ((((((t1.c1)AND(v0.c1)))AND(t1.c2)))=(t1.c0 COLLATE BINARY))  NULLS FIRST, (((v0.c2, v0.c1, t1.c1, t1.c2))>=((v0.c2, v0.c0, t1.c1, v0.c1))) COLLATE NOCASE LIMIT 0x2;
SELECT MIN(v0.c0) FROM v0 WHERE ((- (((v0.c1)IS NOT(v0.c2))))) ORDER BY CASE WHEN ((v0.c0)==(NULL)) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) WHEN LIKE(v0.c1, v0.c2, 'R') THEN STRFTIME(v0.c0, v0.c2, v0.c2) WHEN CAST(v0.c0 AS INTEGER) THEN v0.c2 END ASC  NULLS FIRST;
SELECT DISTINCT MIN(v0.c0) FROM v0 WHERE ((((- (((v0.c1)IS NOT(v0.c2)))))AND(((v0.c0)IS NOT(v0.c1)) COLLATE NOCASE))) ORDER BY CASE WHEN ((v0.c0)=(NULL)) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) WHEN LIKE(v0.c1, v0.c2, 'R') THEN STRFTIME(v0.c0, v0.c2, v0.c2) WHEN CAST(v0.c0 AS INTEGER) THEN v0.c2 END ASC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(v0.c0) FROM v0 WHERE (((CAST(v0.c1 AS BLOB))>=(NULL))) ORDER BY CASE WHEN ((v0.c0)==(NULL)) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) WHEN LIKE(v0.c1, v0.c2, 'R') THEN STRFTIME(v0.c0, v0.c2, v0.c2) WHEN CAST(v0.c0 AS INTEGER) THEN v0.c2 END ASC  NULLS FIRST;
SELECT * FROM t1, vt0, v0 WHERE (0.2185688752622158) ORDER BY (((vt0.c1, vt0.c0)) NOT BETWEEN ((v0.c2 COLLATE RTRIM, ((t1.c0)>>(vt0.c0)))) AND (((v0.c1 IN (v0.c2)), (NOT (v0.c1))))) ASC;
SELECT ALL * FROM t1, vt0, v0 WHERE (0.2185688752622158) ORDER BY ((((v0.c2))<((t1.c2))) IN (LIKELY(t1.c1)))  NULLS FIRST, (~ ((- (vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM t1, vt0, v0 WHERE (0.2185688752622158) ORDER BY (((vt0.c1, vt0.c0)) NOT BETWEEN ((v0.c2 COLLATE RTRIM, ((t1.c0)>>(vt0.c0)))) AND (((v0.c1 IN (v0.c2)), (NOT (v0.c1))))) ASC;
SELECT ALL * FROM t1, vt0, v0 WHERE (0.2185688752622158) ORDER BY ((((v0.c2))<((t1.c2))) IN (LIKELY(t1.c1)))  NULLS FIRST, (~ ((- (vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))AND(v0.c0))) IS FALSE)) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) AND (((v0.c1)<<(v0.c2)))) ASC  NULLS LAST, ((('-1675189967', (('A탠''')%(v0.c0)), ((v0.c0)LIKE(x'8a'))))>=(((v0.c2 IN ()), (NOT (v0.c1)), ((v0.c1) NOTNULL))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))AND(v0.c0))) IS FALSE))AND(TRIM(DISTINCT v0.c2) COLLATE NOCASE))) ORDER BY json_type(CASE v0.c1  WHEN v0.c0 THEN v0.c2 END) DESC, NULL DESC  NULLS FIRST LIMIT 0X2 INTERSECT SELECT ALL * FROM v0 WHERE (LIKELIHOOD(DISTINCT (v0.c0 IN (v0.c0, v0.c2)), (v0.c0 IN ()))) ORDER BY json_type(CASE v0.c1  WHEN v0.c0 THEN v0.c2 END) DESC, NULL DESC  NULLS FIRST LIMIT 0X2;
SELECT * FROM v0 WHERE (((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))AND(v0.c0))) IS FALSE)) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) AND (((v0.c1)<<(v0.c2)))) ASC  NULLS LAST, ((('-1675189967', (('A탠''')%(v0.c0)), ((v0.c0)LIKE(x'8a'))))>=(((v0.c2 IN ()), (NOT (v0.c1)), ((v0.c1) NOTNULL))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))AND(v0.c0))) IS FALSE))AND(TRIM(DISTINCT v0.c2) COLLATE NOCASE))) ORDER BY json_type(CASE v0.c1  WHEN v0.c0 THEN v0.c2 END) DESC, NULL DESC  NULLS FIRST LIMIT 0X2 INTERSECT SELECT ALL * FROM v0 WHERE (LIKELIHOOD(DISTINCT (v0.c0 IN (v0.c0, v0.c2)), (v0.c0 IN ()))) ORDER BY json_type(CASE v0.c1  WHEN v0.c0 THEN v0.c2 END) DESC, NULL DESC  NULLS FIRST LIMIT 0X2;
SELECT MIN(vt0.c1) FROM vt0 NOT INDEXED, t1 WHERE (CASE IFNULL(t1.c0, t1.c2)  WHEN LIKELY(DISTINCT 0Xffffffffe34bf478) THEN CASE t1.c2  WHEN t1.c2 THEN t1.c2 WHEN vt0.c1 THEN t1.c0 END WHEN (vt0.c0 IN (t1.c1, vt0.c1)) THEN t1.c2 COLLATE BINARY WHEN CAST(t1.c1 AS REAL) THEN ((vt0.c1) NOT BETWEEN (t1.c2) AND (vt0.c1)) ELSE ((vt0.c1) IS TRUE) END);
SELECT DISTINCT MIN(vt0.c1) FROM vt0, t1 WHERE (((CASE IFNULL(t1.c0, t1.c2)  WHEN LIKELY(DISTINCT 0xffffffffe34bf478) THEN CASE t1.c2  WHEN t1.c2 THEN t1.c2 WHEN vt0.c1 THEN t1.c0 END WHEN (vt0.c0 IN (t1.c1, vt0.c1)) THEN t1.c2 COLLATE BINARY WHEN CAST(t1.c1 AS REAL) THEN ((vt0.c1) NOT BETWEEN (t1.c2) AND (vt0.c1)) ELSE ((vt0.c1) IS TRUE) END)AND((vt0.c0 IN ()) COLLATE BINARY COLLATE NOCASE))) ORDER BY t1.c0  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((vt0.c0 COLLATE BINARY))) ASC INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0, t1 WHERE ((((((('213429824')OR(((t1.c0)-(t1.c1)))))AND(0x183ba9fa)))AND(((((t1.c2)AND(t1.c1)))OR(t1.c1))))) ORDER BY t1.c0  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((vt0.c0 COLLATE BINARY))) ASC;
SELECT ALL * FROM v0, vt0, t1 WHERE (x'') ORDER BY ((vt0.c0)|(t1.c1)) COLLATE NOCASE ASC, (((((- (NULL)))AND(((v0.c0) NOTNULL))))OR(v0.c1 COLLATE NOCASE));
SELECT ALL * FROM v0, vt0, t1 WHERE (x'') ORDER BY (((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c2)) IN (CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t1.c2 END)) DESC LIMIT 2 INTERSECT SELECT * FROM v0, vt0, t1 WHERE (CAST((((t1.c1, v0.c0)) BETWEEN ((v0.c1, v0.c0)) AND ((t1.c1, v0.c1))) AS TEXT)) ORDER BY (((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c2)) IN (CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t1.c2 END)) DESC LIMIT 0X2;
SELECT ALL * FROM v0, vt0, t1 WHERE (x'') ORDER BY ((vt0.c0)|(t1.c1)) COLLATE NOCASE ASC, (((((- (NULL)))AND(((v0.c0) NOTNULL))))OR(v0.c1 COLLATE NOCASE));
SELECT ALL * FROM v0, vt0, t1 WHERE (x'') ORDER BY (((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c2)) IN (CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t1.c2 END)) DESC LIMIT 2 INTERSECT SELECT * FROM v0, vt0, t1 WHERE (CAST((((t1.c1, v0.c0)) BETWEEN ((v0.c1, v0.c0)) AND ((t1.c1, v0.c1))) AS TEXT)) ORDER BY (((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c2)) IN (CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t1.c2 END)) DESC LIMIT 0X2;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c1))<((((v0.c0) IS FALSE)))) WHERE ((((vt0.c1 IN ()))AND((- (vt0.c1)))));
SELECT * FROM v0 INNER JOIN vt0 ON (((vt0.c1))<((((v0.c0) IS FALSE)))) WHERE ((((vt0.c1 IN ()))AND((- (vt0.c1))))) INTERSECT SELECT ALL * FROM v0 INNER JOIN vt0 ON (((vt0.c1))<((((v0.c0) IS FALSE)))) WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c1) NOTNULL) THEN (((v0.c2, v0.c1)) NOT BETWEEN ((vt0.c0, v0.c1)) AND ((v0.c2, v0.c0))) WHEN (v0.c0 IN (v0.c2, v0.c0)) THEN (((vt0.c0))<((vt0.c0))) ELSE v0.c1 END);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c1))<((((v0.c0) IS FALSE)))) WHERE ((((vt0.c1 IN ()))AND((- (vt0.c1)))));
SELECT * FROM v0 INNER JOIN vt0 ON (((vt0.c1))<((((v0.c0) IS FALSE)))) WHERE ((((vt0.c1 IN ()))AND((- (vt0.c1))))) INTERSECT SELECT ALL * FROM v0 INNER JOIN vt0 ON (((vt0.c1))<((((v0.c0) IS FALSE)))) WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c1) NOTNULL) THEN (((v0.c2, v0.c1)) NOT BETWEEN ((vt0.c0, v0.c1)) AND ((v0.c2, v0.c0))) WHEN (v0.c0 IN (v0.c2, v0.c0)) THEN (((vt0.c0))<((vt0.c0))) ELSE v0.c1 END);
SELECT ALL * FROM v0, t1, vt0 WHERE (((CASE WHEN v0.c1 THEN NULL END) IS TRUE)) ORDER BY vt0.c0 ASC, ((((t1.c0)<<(vt0.c1))) BETWEEN ((NOT (v0.c0))) AND (NULL)) DESC;
SELECT ALL * FROM v0, t1, vt0 WHERE (((CASE WHEN v0.c1 THEN NULL END) IS TRUE)) ORDER BY (((vt0.c1 IN ()))LIKE(TYPEOF(DISTINCT vt0.c1))) ASC LIMIT 0X1;
SELECT ALL * FROM v0, t1, vt0 WHERE (((CASE WHEN v0.c1 THEN NULL END) IS TRUE)) ORDER BY vt0.c0 ASC, ((((t1.c0)<<(vt0.c1))) BETWEEN ((NOT (v0.c0))) AND (NULL)) DESC;
SELECT ALL * FROM v0, t1, vt0 WHERE (((CASE WHEN v0.c1 THEN NULL END) IS TRUE)) ORDER BY (((vt0.c1 IN ()))LIKE(TYPEOF(DISTINCT vt0.c1))) ASC LIMIT 0X1;
SELECT * FROM vt0, v0, t1 WHERE (((((NULL)OR(CASE vt0.c1  WHEN vt0.c0 THEN v0.c1 WHEN t1.c0 THEN '{q(v겆' WHEN x'' THEN t1.c0 END)))OR(((x'75')GLOB(vt0.c1))))) ORDER BY 0.6821811945229131 ASC, (((((t1.c1, vt0.c0))>((vt0.c1, t1.c1))))<>(((v0.c2) BETWEEN (v0.c1) AND (t1.c1)))) DESC  NULLS FIRST;
SELECT * FROM vt0, v0, t1 WHERE (((((NULL)OR(CASE vt0.c1  WHEN vt0.c0 THEN v0.c1 WHEN t1.c0 THEN '{q(v겆' WHEN x'' THEN t1.c0 END)))OR(((x'75')GLOB(vt0.c1))))) ORDER BY ((((((((vt0.c1)AND('b')))OR(v0.c0)))AND(t1.c1)))IS(TRIM(DISTINCT t1.c1))), ((vt0.c1)>>(vt0.c0)) COLLATE RTRIM DESC INTERSECT SELECT * FROM vt0, v0, t1 WHERE (((((CASE WHEN '
%Y膮
>H]' THEN vt0.c1 WHEN t1.c1 THEN v0.c1 ELSE v0.c2 END)AND((vt0.c1 IN (t1.c2)))))OR((~ (t1.c2))))) ORDER BY ((((((((vt0.c1)AND('b')))OR(v0.c0)))AND(t1.c1)))IS(TRIM(DISTINCT t1.c1))), ((vt0.c1)>>(vt0.c0)) COLLATE RTRIM DESC;
SELECT * FROM vt0, v0, t1 WHERE (((((NULL)OR(CASE vt0.c1  WHEN vt0.c0 THEN v0.c1 WHEN t1.c0 THEN '{q(v겆' WHEN x'' THEN t1.c0 END)))OR(((x'75')GLOB(vt0.c1))))) ORDER BY 0.6821811945229131 ASC, (((((t1.c1, vt0.c0))>((vt0.c1, t1.c1))))<>(((v0.c2) BETWEEN (v0.c1) AND (t1.c1)))) DESC  NULLS FIRST;
SELECT * FROM vt0, v0, t1 WHERE (((((NULL)OR(CASE vt0.c1  WHEN vt0.c0 THEN v0.c1 WHEN t1.c0 THEN '{q(v겆' WHEN x'' THEN t1.c0 END)))OR(((x'75')GLOB(vt0.c1))))) ORDER BY ((((((((vt0.c1)AND('b')))OR(v0.c0)))AND(t1.c1)))IS(TRIM(DISTINCT t1.c1))), ((vt0.c1)>>(vt0.c0)) COLLATE RTRIM DESC INTERSECT SELECT * FROM vt0, v0, t1 WHERE (((((CASE WHEN '
%Y膮
>H]' THEN vt0.c1 WHEN t1.c1 THEN v0.c1 ELSE v0.c2 END)AND((vt0.c1 IN (t1.c2)))))OR((~ (t1.c2))))) ORDER BY ((((((((vt0.c1)AND('b')))OR(v0.c0)))AND(t1.c1)))IS(TRIM(DISTINCT t1.c1))), ((vt0.c1)>>(vt0.c0)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) AND ((x'c234', 0.6985923557111237, vt0.c0, vt0.c1))) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY ((((vt0.c0) IS TRUE))<=(((vt0.c1)>(vt0.c1)))) ASC  NULLS FIRST, (+ (((vt0.c1)*(vt0.c0)))) DESC, CAST(highlight(vt0.c1, vt0.c1, vt0.c0, vt0.c1) AS BLOB)  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c1)) AND ((x'c234', 0.6985923557111237, vt0.c0, vt0.c1))) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY ((((vt0.c0) IS TRUE))<=(((vt0.c1)>(vt0.c1)))) ASC  NULLS FIRST, (+ (((vt0.c1)*(vt0.c0)))) DESC, CAST(highlight(vt0.c1, vt0.c1, vt0.c0, vt0.c1) AS BLOB)  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE BINARY COLLATE BINARY) ORDER BY ((((vt0.c0) IS TRUE))<=(((vt0.c1)>(vt0.c1)))) ASC  NULLS FIRST, (+ (((vt0.c1)*(vt0.c0)))) DESC, CAST(highlight(vt0.c1, vt0.c1, vt0.c0, vt0.c1) AS BLOB)  NULLS LAST LIMIT 0;
SELECT ALL MIN(v0.c1) FROM v0, vt0, t1 WHERE ((((CAST(NULL AS INTEGER), ((vt0.c1)==(t1.c2))))==(((- (t1.c0)), '70346026'))));
SELECT DISTINCT MIN(v0.c1) FROM v0, vt0, t1 WHERE ((((CAST(NULL AS INTEGER), ((vt0.c1)=(t1.c2))))==(((- (t1.c0)), '70346026')))) LIMIT 0x2 INTERSECT SELECT DISTINCT MIN(v0.c1) FROM v0, vt0, t1 WHERE (CASE WHEN CAST(v0.c1 AS REAL) THEN UNLIKELY(0.9355163847605418) ELSE t1.c2 COLLATE NOCASE END) LIMIT 2;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON (((t1.c2, v0.c0, v0.c0, v0.c2, v0.c0)) BETWEEN ((UPPER(t1.c2), CAST(v0.c0 AS NUMERIC), ((((((v0.c1)OR(v0.c2)))AND(t1.c2)))OR(v0.c2)), ((((t1.c0)AND(vt0.c1)))AND(t1.c0)), 0.13173013954964807)) AND ((HEX(x'4b33'), vt0.c0 COLLATE BINARY, (((vt0.c1, t1.c0))<=((v0.c1, v0.c0))), (((t1.c0, vt0.c1)) BETWEEN ((v0.c1, vt0.c1)) AND ((t1.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (v0.c2) AND ('41028994'))))) LEFT OUTER JOIN v0 ON ((json_remove(vt0.c1, vt0.c1))>=((t1.c1 IN (v0.c2)))) WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY CASE WHEN vt0.c1 THEN ((((v0.c2)OR(t1.c2)))AND(0.3377793540977456)) ELSE ((((vt0.c0)AND(v0.c0)))AND(t1.c2)) END, CASE WHEN (+ (v0.c1)) THEN (~ (v0.c0)) WHEN (t1.c1 IN (t1.c1, t1.c2)) THEN t1.c2 WHEN (v0.c1 IN ()) THEN CAST(x'' AS NUMERIC) WHEN ((((((vt0.c1)AND(vt0.c0)))OR(t1.c0)))AND(vt0.c1)) THEN (+ (t1.c2)) END DESC;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t1 ON (((t1.c2, v0.c0, v0.c0, v0.c2, v0.c0)) BETWEEN ((UPPER(t1.c2), CAST(v0.c0 AS NUMERIC), ((((((v0.c1)OR(v0.c2)))AND(t1.c2)))OR(v0.c2)), ((((t1.c0)AND(vt0.c1)))AND(t1.c0)), 0.13173013954964807)) AND ((HEX(x'4b33'), vt0.c0 COLLATE BINARY, (((vt0.c1, t1.c0))<=((v0.c1, v0.c0))), (((t1.c0, vt0.c1)) BETWEEN ((v0.c1, vt0.c1)) AND ((t1.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (v0.c2) AND ('41028994'))))) LEFT OUTER JOIN v0 ON ((json_remove(vt0.c1, vt0.c1))>=((t1.c1 IN (v0.c2)))) WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY CASE WHEN vt0.c1 THEN ((((v0.c2)OR(t1.c2)))AND(0.3377793540977456)) ELSE ((((vt0.c0)AND(v0.c0)))AND(t1.c2)) END, CASE WHEN (+ (v0.c1)) THEN (~ (v0.c0)) WHEN (t1.c1 IN (t1.c1, t1.c2)) THEN t1.c2 WHEN (v0.c1 IN ()) THEN CAST(x'' AS NUMERIC) WHEN ((((((vt0.c1)AND(vt0.c0)))OR(t1.c0)))AND(vt0.c1)) THEN (+ (t1.c2)) END DESC LIMIT 3;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON (((t1.c2, v0.c0, v0.c0, v0.c2, v0.c0)) BETWEEN ((UPPER(t1.c2), CAST(v0.c0 AS NUMERIC), ((((((v0.c1)OR(v0.c2)))AND(t1.c2)))OR(v0.c2)), ((((t1.c0)AND(vt0.c1)))AND(t1.c0)), 0.13173013954964807)) AND ((HEX(x'4b33'), vt0.c0 COLLATE BINARY, (((vt0.c1, t1.c0))<=((v0.c1, v0.c0))), (((t1.c0, vt0.c1)) BETWEEN ((v0.c1, vt0.c1)) AND ((t1.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (v0.c2) AND ('41028994'))))) LEFT OUTER JOIN v0 ON ((json_remove(vt0.c1, vt0.c1))>=((t1.c1 IN (v0.c2)))) WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY CASE WHEN vt0.c1 THEN ((((v0.c2)OR(t1.c2)))AND(0.3377793540977456)) ELSE ((((vt0.c0)AND(v0.c0)))AND(t1.c2)) END, CASE WHEN (+ (v0.c1)) THEN (~ (v0.c0)) WHEN (t1.c1 IN (t1.c1, t1.c2)) THEN t1.c2 WHEN (v0.c1 IN ()) THEN CAST(x'' AS NUMERIC) WHEN ((((((vt0.c1)AND(vt0.c0)))OR(t1.c0)))AND(vt0.c1)) THEN (+ (t1.c2)) END DESC;
SELECT MIN(t1.c0) FROM t1, vt0 WHERE (((((((((((t1.c0)AND('1101432281')))OR(vt0.c0)))AND('2')))AND(t1.c1)))<<(((t1.c1) IS TRUE)))) ORDER BY ((((t1.c0 IN ())))>=((((vt0.c0)AND(0.24298332949507184))))) ASC  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1, vt0 WHERE (((((((((((((t1.c0)AND('1101432281')))OR(vt0.c0)))AND('2')))AND(t1.c1)))<<(((t1.c1) IS TRUE))))AND(vt0.c0))) ORDER BY t1.c2 DESC LIMIT 0X0 INTERSECT SELECT MIN(t1.c0) FROM t1, vt0 WHERE ((~ ((((t1.c2))>((vt0.c0)))))) ORDER BY t1.c2 DESC LIMIT 0x0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c1)LIKE(v0.c1))) NOT NULL) WHERE (CAST(v0.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((v0.c1)LIKE(v0.c1))) NOT NULL) WHERE (((CAST(v0.c0 AS INTEGER) COLLATE BINARY)AND(((vt0.c0 IN (v0.c0)) IN (((vt0.c1)%(vt0.c1))))))) ORDER BY CAST((vt0.c0 IN (NULL)) AS INTEGER) ASC  NULLS LAST INTERSECT SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((v0.c1)LIKE(v0.c1))) NOT NULL) WHERE (((((vt0.c0)<(v0.c2))) BETWEEN (((((((vt0.c1)OR(vt0.c1)))OR(0x38bf8843)))OR(v0.c2))) AND (((((((((v0.c0)AND(vt0.c0)))OR(v0.c2)))OR(vt0.c0)))AND(v0.c2))))) ORDER BY CAST((vt0.c0 IN (NULL)) AS INTEGER) ASC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c1)LIKE(v0.c1))) NOT NULL) WHERE (CAST(v0.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((v0.c1)LIKE(v0.c1))) NOT NULL) WHERE (((CAST(v0.c0 AS INTEGER) COLLATE BINARY)AND(((vt0.c0 IN (v0.c0)) IN (((vt0.c1)%(vt0.c1))))))) ORDER BY CAST((vt0.c0 IN (NULL)) AS INTEGER) ASC  NULLS LAST INTERSECT SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((v0.c1)LIKE(v0.c1))) NOT NULL) WHERE (((((vt0.c0)<(v0.c2))) BETWEEN (((((((vt0.c1)OR(vt0.c1)))OR(0x38bf8843)))OR(v0.c2))) AND (((((((((v0.c0)AND(vt0.c0)))OR(v0.c2)))OR(vt0.c0)))AND(v0.c2))))) ORDER BY CAST((vt0.c0 IN (NULL)) AS INTEGER) ASC  NULLS LAST;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM);
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM)AND(LIKELY(((vt0.c0) NOT NULL))))) ORDER BY (((vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, (vt0.c0 IN (vt0.c1)))) AND ((((vt0.c0)IS(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM v0 WHERE (CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) THEN ((((((((v0.c1)OR(v0.c1)))OR(v0.c2)))OR(v0.c1)))OR(v0.c2)) WHEN (((((('xj	')OR(v0.c1)))OR(v0.c2)))AND(v0.c0)) THEN v0.c1 COLLATE BINARY WHEN 'NpPWBP-' COLLATE NOCASE THEN (~ (v0.c2)) WHEN (+ (v0.c1)) THEN UNLIKELY(v0.c2) WHEN '243724183' THEN (((v0.c0, v0.c2, v0.c2, v0.c2, v0.c1))<=((v0.c0, 1369090013, v0.c2, v0.c1, v0.c1))) END);
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) THEN ((((((((v0.c1)OR(v0.c1)))OR(v0.c2)))OR(v0.c1)))OR(v0.c2)) WHEN (((((('xj	')OR(v0.c1)))OR(v0.c2)))AND(v0.c0)) THEN v0.c1 COLLATE BINARY WHEN 'NpPWBP-' COLLATE NOCASE THEN (~ (v0.c2)) WHEN (+ (v0.c1)) THEN UNLIKELY(v0.c2) WHEN '243724183' THEN (((v0.c0, v0.c2, v0.c2, v0.c2, v0.c1))==((v0.c0, 0X519aa7dd, v0.c2, v0.c1, v0.c1))) END) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, ((v0.c1)<=(v0.c1)), v0.c0 COLLATE RTRIM)) AND ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END, ((v0.c0)IS(v0.c1)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c2))))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0 WHERE (((((v0.c2)*(v0.c0))) IS TRUE)) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, ((v0.c1)<=(v0.c1)), v0.c0 COLLATE RTRIM)) AND ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END, ((v0.c0)IS(v0.c1)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c2))))) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) THEN ((((((((v0.c1)OR(v0.c1)))OR(v0.c2)))OR(v0.c1)))OR(v0.c2)) WHEN (((((('xj	')OR(v0.c1)))OR(v0.c2)))AND(v0.c0)) THEN v0.c1 COLLATE BINARY WHEN 'NpPWBP-' COLLATE NOCASE THEN (~ (v0.c2)) WHEN (+ (v0.c1)) THEN UNLIKELY(v0.c2) WHEN '243724183' THEN (((v0.c0, v0.c2, v0.c2, v0.c2, v0.c1))<=((v0.c0, 1369090013, v0.c2, v0.c1, v0.c1))) END);
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) THEN ((((((((v0.c1)OR(v0.c1)))OR(v0.c2)))OR(v0.c1)))OR(v0.c2)) WHEN (((((('xj	')OR(v0.c1)))OR(v0.c2)))AND(v0.c0)) THEN v0.c1 COLLATE BINARY WHEN 'NpPWBP-' COLLATE NOCASE THEN (~ (v0.c2)) WHEN (+ (v0.c1)) THEN UNLIKELY(v0.c2) WHEN '243724183' THEN (((v0.c0, v0.c2, v0.c2, v0.c2, v0.c1))==((v0.c0, 0X519aa7dd, v0.c2, v0.c1, v0.c1))) END) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, ((v0.c1)<=(v0.c1)), v0.c0 COLLATE RTRIM)) AND ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END, ((v0.c0)IS(v0.c1)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c2))))) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0 WHERE (((((v0.c2)*(v0.c0))) IS TRUE)) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, ((v0.c1)<=(v0.c1)), v0.c0 COLLATE RTRIM)) AND ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END, ((v0.c0)IS(v0.c1)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c2))))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ('憻甦
,');
SELECT DISTINCT * FROM t1 WHERE ('憻甦
,');
SELECT ALL * FROM t1 WHERE ('憻甦
,');
SELECT DISTINCT * FROM t1 WHERE ('憻甦
,');
SELECT ALL * FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1)) NOT BETWEEN ((vt0.c0 IN (0.5623369063823449, vt0.c1))) AND (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))) ORDER BY CASE WHEN json_valid(vt0.c0) THEN ((vt0.c0)+(vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN TYPEOF(vt0.c1) WHEN ((((((((vt0.c0)AND(-1393225757)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) ISNULL) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS FIRST, json_array(vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0 WHERE (((((SQLITE_COMPILEOPTION_USED(vt0.c1)) NOT BETWEEN ((vt0.c0 IN (0.5623369063823449, vt0.c1))) AND (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))))AND(((CASE 1099009957  WHEN vt0.c1 THEN 0.6325159937077974 ELSE vt0.c0 END)|(((vt0.c0)GLOB(vt0.c1))))))) ORDER BY CASE WHEN json_valid(vt0.c0) THEN ((vt0.c0)+(vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN TYPEOF(vt0.c1) WHEN ((((((((vt0.c0)AND(0Xffffffffacf50fe3)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) ISNULL) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS FIRST, json_array(vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0) COLLATE NOCASE LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c1)LIKE(vt0.c1)) AS TEXT)) ORDER BY CASE WHEN json_valid(vt0.c0) THEN ((vt0.c0)+(vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN TYPEOF(vt0.c1) WHEN ((((((((vt0.c0)AND(-1393225757)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) ISNULL) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS FIRST, json_array(vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0) COLLATE NOCASE LIMIT 1;
SELECT ALL * FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1)) NOT BETWEEN ((vt0.c0 IN (0.5623369063823449, vt0.c1))) AND (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))) ORDER BY CASE WHEN json_valid(vt0.c0) THEN ((vt0.c0)+(vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN TYPEOF(vt0.c1) WHEN ((((((((vt0.c0)AND(-1393225757)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) ISNULL) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS FIRST, json_array(vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0 WHERE (((((SQLITE_COMPILEOPTION_USED(vt0.c1)) NOT BETWEEN ((vt0.c0 IN (0.5623369063823449, vt0.c1))) AND (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))))AND(((CASE 1099009957  WHEN vt0.c1 THEN 0.6325159937077974 ELSE vt0.c0 END)|(((vt0.c0)GLOB(vt0.c1))))))) ORDER BY CASE WHEN json_valid(vt0.c0) THEN ((vt0.c0)+(vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN TYPEOF(vt0.c1) WHEN ((((((((vt0.c0)AND(0Xffffffffacf50fe3)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) ISNULL) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS FIRST, json_array(vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0) COLLATE NOCASE LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c1)LIKE(vt0.c1)) AS TEXT)) ORDER BY CASE WHEN json_valid(vt0.c0) THEN ((vt0.c0)+(vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN TYPEOF(vt0.c1) WHEN ((((((((vt0.c0)AND(-1393225757)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) ISNULL) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS FIRST, json_array(vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0) COLLATE NOCASE LIMIT 1;
SELECT * FROM t1, vt0 WHERE (CASE WHEN vt0.c1 THEN 'KVpaR/' WHEN t1.c1 THEN t1.c2 ELSE t1.c1 END COLLATE NOCASE) ORDER BY CAST((~ (t1.c2)) AS NUMERIC)  NULLS LAST;
SELECT DISTINCT * FROM t1, vt0 WHERE (((CASE WHEN vt0.c1 THEN 'KVpaR/' WHEN t1.c1 THEN t1.c2 ELSE t1.c1 END COLLATE NOCASE)AND(((((((t1.c1) NOTNULL))OR(((t1.c0)<(x'f1ce')))))AND('-2055219428'))))) ORDER BY ((t1.c2)IS(-1.28168833E8 COLLATE NOCASE)) LIMIT 0;
SELECT * FROM t1, vt0 WHERE (CASE WHEN vt0.c1 THEN 'KVpaR/' WHEN t1.c1 THEN t1.c2 ELSE t1.c1 END COLLATE NOCASE) ORDER BY CAST((~ (t1.c2)) AS NUMERIC)  NULLS LAST;
SELECT DISTINCT * FROM t1, vt0 WHERE (((CASE WHEN vt0.c1 THEN 'KVpaR/' WHEN t1.c1 THEN t1.c2 ELSE t1.c1 END COLLATE NOCASE)AND(((((((t1.c1) NOTNULL))OR(((t1.c0)<(x'f1ce')))))AND('-2055219428'))))) ORDER BY ((t1.c2)IS(-1.28168833E8 COLLATE NOCASE)) LIMIT 0;
SELECT MIN(t1.c0) FROM v0, vt0 NATURAL JOIN t1 WHERE (NULL) ORDER BY 'D/ZRs9+' COLLATE BINARY  NULLS LAST, TYPEOF('1539342956')  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM v0, vt0 NATURAL JOIN t1 WHERE (NULL) ORDER BY ((((((((vt0.c1 COLLATE BINARY)OR((- (vt0.c1)))))AND(CAST(t1.c1 AS TEXT))))AND(0.31406805861940224)))OR(CASE v0.c2  WHEN v0.c1 THEN x'' WHEN v0.c2 THEN t1.c2 END)) DESC, UPPER((~ (vt0.c1))) ASC, ((((('')+(t1.c1)), ((v0.c2) NOT BETWEEN (vt0.c0) AND (t1.c1)), (0xffffffffeea289b9 IN (vt0.c1))))=((CAST(t1.c2 AS NUMERIC), ((((t1.c1)AND(t1.c1)))OR(v0.c1)), v0.c1))) DESC;
SELECT ALL * FROM v0, vt0 NATURAL JOIN t1 WHERE (0.18148599789884967);
SELECT * FROM v0, vt0 NATURAL JOIN t1 WHERE (((0.18148599789884967)AND(((((t1.c1)IS(t1.c1)))|(((v0.c2)|(x''))))))) INTERSECT SELECT * FROM v0, vt0 NATURAL JOIN t1 WHERE (((((v0.c0)!=(t1.c2)))<(CASE t1.c2  WHEN t1.c2 THEN v0.c1 END)));
SELECT ALL * FROM v0, vt0 NATURAL JOIN t1 WHERE (0.18148599789884967);
SELECT * FROM v0, vt0 NATURAL JOIN t1 WHERE (((0.18148599789884967)AND(((((t1.c1)IS(t1.c1)))|(((v0.c2)|(x''))))))) INTERSECT SELECT * FROM v0, vt0 NATURAL JOIN t1 WHERE (((((v0.c0)!=(t1.c2)))<(CASE t1.c2  WHEN t1.c2 THEN v0.c1 END)));
SELECT ALL MIN(t1.c0) FROM t1, vt0, v0 WHERE (((x'5086')IS NOT((((vt0.c1, t1.c1)) NOT BETWEEN ((v0.c2, t1.c1)) AND ((vt0.c0, v0.c1)))))) ORDER BY ABS(CAST(v0.c2 AS NUMERIC)) ASC, ((((t1.c0) NOT BETWEEN (v0.c1) AND (v0.c2))) BETWEEN (v0.c1 COLLATE BINARY) AND (CASE v0.c2  WHEN v0.c2 THEN t1.c1 END))  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1, vt0, v0 WHERE (((x'5086')IS NOT((((vt0.c1, t1.c1)) NOT BETWEEN ((v0.c2, t1.c1)) AND ((vt0.c0, v0.c1)))))) ORDER BY ABS(CAST(v0.c2 AS NUMERIC)) ASC, ((((t1.c0) NOT BETWEEN (v0.c1) AND (v0.c2))) BETWEEN (v0.c1 COLLATE BINARY) AND (CASE v0.c2  WHEN v0.c2 THEN t1.c1 END))  NULLS FIRST LIMIT 2;
SELECT * FROM vt0, t1 WHERE ((((((t1.c2)IS(t1.c1)), t1.c1))=((CAST(vt0.c1 AS TEXT), (('')>=(vt0.c1))))));
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((((t1.c2)IS(t1.c1)), t1.c1))=((CAST(vt0.c1 AS TEXT), (('')=(vt0.c1))))))AND(((CASE WHEN vt0.c0 THEN t1.c0 WHEN t1.c1 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN t1.c2 THEN t1.c0 END)+(((t1.c0)OR(vt0.c0))))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (TRIM(DISTINCT (t1.c0 IN (t1.c2, vt0.c0)), (- (t1.c1)))) LIMIT 0;
SELECT * FROM vt0, t1 WHERE ((((((t1.c2)IS(t1.c1)), t1.c1))=((CAST(vt0.c1 AS TEXT), (('')>=(vt0.c1))))));
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((((t1.c2)IS(t1.c1)), t1.c1))=((CAST(vt0.c1 AS TEXT), (('')=(vt0.c1))))))AND(((CASE WHEN vt0.c0 THEN t1.c0 WHEN t1.c1 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN t1.c2 THEN t1.c0 END)+(((t1.c0)OR(vt0.c0))))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (TRIM(DISTINCT (t1.c0 IN (t1.c2, vt0.c0)), (- (t1.c1)))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (CAST(STRFTIME(t1.c2, t1.c2, '') AS TEXT));
SELECT * FROM t1 WHERE (((CAST(STRFTIME(t1.c2, t1.c2, '') AS TEXT))AND(((((t1.c1 COLLATE NOCASE)AND((t1.c2 IN ()))))OR(t1.c2))))) ORDER BY ((((((((((((((('1836074277', t1.c0)) NOT BETWEEN ((t1.c2, t1.c0)) AND ((t1.c2, t1.c0))))AND(((((((((t1.c1)AND(t1.c1)))AND(t1.c2)))OR(t1.c0)))AND(t1.c1)))))AND((~ (t1.c0)))))AND((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))OR(CHAR(t1.c2, '1328373436'))))OR(t1.c1 COLLATE RTRIM)))AND(((t1.c1) BETWEEN (t1.c2) AND (t1.c1)))) ASC, '_'  NULLS LAST, ((((t1.c1) IS TRUE))&(t1.c2 COLLATE BINARY));
SELECT ALL * FROM t1 WHERE (CAST(STRFTIME(t1.c2, t1.c2, '') AS TEXT));
SELECT * FROM t1 WHERE (((CAST(STRFTIME(t1.c2, t1.c2, '') AS TEXT))AND(((((t1.c1 COLLATE NOCASE)AND((t1.c2 IN ()))))OR(t1.c2))))) ORDER BY ((((((((((((((('1836074277', t1.c0)) NOT BETWEEN ((t1.c2, t1.c0)) AND ((t1.c2, t1.c0))))AND(((((((((t1.c1)AND(t1.c1)))AND(t1.c2)))OR(t1.c0)))AND(t1.c1)))))AND((~ (t1.c0)))))AND((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))OR(CHAR(t1.c2, '1328373436'))))OR(t1.c1 COLLATE RTRIM)))AND(((t1.c1) BETWEEN (t1.c2) AND (t1.c1)))) ASC, '_'  NULLS LAST, ((((t1.c1) IS TRUE))&(t1.c2 COLLATE BINARY));
SELECT ALL * FROM vt0, v0 WHERE (v0.c0) ORDER BY '370490061'  NULLS LAST, ((((((',GL', v0.c0))==((v0.c0, v0.c2))), vt0.c1, (NULL IN ())))=((CAST('' AS INTEGER), '9835325', NULL)));
SELECT * FROM vt0, v0 WHERE (v0.c0) ORDER BY (((NOT (vt0.c0))) BETWEEN (((vt0.c0)GLOB(v0.c2))) AND (v0.c1 COLLATE RTRIM))  NULLS FIRST, CAST(((vt0.c1) IS FALSE) AS NUMERIC)  NULLS LAST, CASE vt0.c0 COLLATE RTRIM  WHEN (('1979916626')+(v0.c0)) THEN (- (v0.c0)) WHEN (((v0.c2, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1)) AND ((v0.c2, vt0.c1))) THEN UPPER(v0.c2) WHEN (v0.c0 IN ()) THEN ((((((v0.c0)OR(v0.c0)))OR(v0.c2)))OR(0.12660962818335064)) WHEN (+ (v0.c2)) THEN CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END ELSE '崞lZ' END ASC LIMIT 0X1;
SELECT ALL * FROM vt0, v0 WHERE (v0.c0) ORDER BY '370490061'  NULLS LAST, ((((((',GL', v0.c0))==((v0.c0, v0.c2))), vt0.c1, (NULL IN ())))=((CAST('' AS INTEGER), '9835325', NULL)));
SELECT * FROM vt0, v0 WHERE (v0.c0) ORDER BY (((NOT (vt0.c0))) BETWEEN (((vt0.c0)GLOB(v0.c2))) AND (v0.c1 COLLATE RTRIM))  NULLS FIRST, CAST(((vt0.c1) IS FALSE) AS NUMERIC)  NULLS LAST, CASE vt0.c0 COLLATE RTRIM  WHEN (('1979916626')+(v0.c0)) THEN (- (v0.c0)) WHEN (((v0.c2, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1)) AND ((v0.c2, vt0.c1))) THEN UPPER(v0.c2) WHEN (v0.c0 IN ()) THEN ((((((v0.c0)OR(v0.c0)))OR(v0.c2)))OR(0.12660962818335064)) WHEN (+ (v0.c2)) THEN CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END ELSE '崞lZ' END ASC LIMIT 0X1;
SELECT COUNT(*) FROM vt0, v0 WHERE (((CASE v0.c0  WHEN vt0.c1 THEN v0.c1 END) NOT NULL));
SELECT DISTINCT COUNT(*) FROM vt0, v0 WHERE (((CASE v0.c0  WHEN vt0.c1 THEN v0.c1 END) NOT NULL));
SELECT * FROM t1, vt0, v0 WHERE (CAST(((t1.c2)-(t1.c0)) AS NUMERIC));
SELECT DISTINCT * FROM t1, vt0, v0 NOT INDEXED WHERE (CAST(((t1.c2)-(t1.c0)) AS NUMERIC));
SELECT * FROM t1, vt0, v0 WHERE (CAST(((t1.c2)-(t1.c0)) AS NUMERIC));
SELECT DISTINCT * FROM t1, vt0, v0 NOT INDEXED WHERE (CAST(((t1.c2)-(t1.c0)) AS NUMERIC));
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ('');
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE ('') LIMIT 0;
SELECT MIN(vt0.c1) FROM v0, vt0 WHERE (v0.c1) ORDER BY CAST(SUBSTR('D!Waw', v0.c1) AS INTEGER)  NULLS LAST, (+ (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(vt0.c1) FROM v0, vt0 WHERE (v0.c1) ORDER BY CAST(SUBSTR('D!Waw', v0.c1) AS INTEGER)  NULLS LAST, (+ (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC  NULLS FIRST LIMIT 0x3 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM v0, vt0 WHERE ('-291337799') ORDER BY CAST(SUBSTR('D!Waw', v0.c1) AS INTEGER)  NULLS LAST, (+ (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC  NULLS FIRST LIMIT 0X3;
SELECT ALL MAX(t1.c1) FROM vt0, t1 WHERE (CASE t1.c2  WHEN ((((((t1.c2)AND(0x3ffc4bd)))AND(0.7493214675359864)))OR(vt0.c1)) THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c2)) WHEN CAST(t1.c0 AS NUMERIC) THEN (NOT (x'b17d')) ELSE ((t1.c2) IS TRUE) END) ORDER BY t1.c0 ASC;
SELECT DISTINCT MAX(t1.c1) FROM vt0, t1 WHERE (((CASE t1.c2  WHEN ((((((t1.c2)AND(0X3ffc4bd)))AND(0.7493214675359864)))OR(vt0.c1)) THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c2)) WHEN CAST(t1.c0 AS NUMERIC) THEN (NOT (x'b17d')) ELSE ((t1.c2) IS TRUE) END)AND((((vt0.c0)!=(t1.c2)) IN ())))) ORDER BY t1.c0 ASC LIMIT 0x5;
SELECT ALL * FROM v0, vt0, t1 WHERE (CAST(((t1.c1) BETWEEN (t1.c2) AND (t1.c1)) AS NUMERIC));
SELECT * FROM v0, vt0, t1 WHERE (CAST(((t1.c1) BETWEEN (t1.c2) AND (t1.c1)) AS NUMERIC)) INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE (((((vt0.c0) NOT NULL))<(((v0.c0) NOT BETWEEN (t1.c2) AND (vt0.c0)))));
SELECT ALL * FROM v0, vt0, t1 WHERE (CAST(((t1.c1) BETWEEN (t1.c2) AND (t1.c1)) AS NUMERIC));
SELECT * FROM v0, vt0, t1 WHERE (CAST(((t1.c1) BETWEEN (t1.c2) AND (t1.c1)) AS NUMERIC)) INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE (((((vt0.c0) NOT NULL))<(((v0.c0) NOT BETWEEN (t1.c2) AND (vt0.c0)))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CAST(((t1.c2)||(t1.c2)) AS TEXT)) ORDER BY ((t1.c2 COLLATE RTRIM)GLOB(((((((t1.c2)OR(t1.c0)))AND(t1.c2)))OR(t1.c1))))  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE (CAST(((t1.c2)||(t1.c2)) AS TEXT)) ORDER BY ((t1.c2 COLLATE RTRIM)GLOB(((((((t1.c2)OR(t1.c0)))AND(t1.c2)))OR(t1.c1))))  NULLS FIRST INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE (((t1.c2) NOT BETWEEN (1.215819737E9) AND (((t1.c0) BETWEEN (x'c1') AND (0X403170da))))) ORDER BY ((t1.c2 COLLATE RTRIM)GLOB(((((((t1.c2)OR(t1.c0)))AND(t1.c2)))OR(t1.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (LAST_INSERT_ROWID() COLLATE NOCASE) ORDER BY CASE vt0.c1 COLLATE NOCASE  WHEN (((t1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, v0.c1)) AND ((v0.c0, vt0.c0))) THEN (+ (v0.c2)) WHEN ABS(t1.c1) THEN (((t1.c1))<=((vt0.c1))) WHEN (((vt0.c0)) NOT BETWEEN ((t1.c1)) AND ((x'5e49db'))) THEN 'jtFkfL' COLLATE BINARY END DESC  NULLS FIRST, (((((v0.c1, t1.c1, v0.c0))>((v0.c2, t1.c2, v0.c2)))) NOT BETWEEN (((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c1))) AND (CAST(t1.c2 AS NUMERIC))) ASC, ((t1.c0) IS FALSE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (((LAST_INSERT_ROWID() COLLATE NOCASE)AND((v0.c1 IN ()) COLLATE BINARY))) ORDER BY CASE vt0.c1 COLLATE NOCASE  WHEN (((t1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, v0.c1)) AND ((v0.c0, vt0.c0))) THEN (+ (v0.c2)) WHEN ABS(t1.c1) THEN (((t1.c1))<=((vt0.c1))) WHEN (((vt0.c0)) NOT BETWEEN ((t1.c1)) AND ((x'5e49db'))) THEN 'jtFkfL' COLLATE BINARY END DESC  NULLS FIRST, (((((v0.c1, t1.c1, v0.c0))>((v0.c2, t1.c2, v0.c2)))) NOT BETWEEN (((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c1))) AND (CAST(t1.c2 AS NUMERIC))) ASC, ((t1.c0) IS FALSE) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT * FROM vt0 WHERE (((vt0.c1)AND(x'2052'))) INTERSECT SELECT * FROM vt0 WHERE (((((((CAST(vt0.c0 AS BLOB))OR(vt0.c0 COLLATE BINARY)))OR(vt0.c1 COLLATE BINARY)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT * FROM vt0 WHERE (((vt0.c1)AND(x'2052'))) INTERSECT SELECT * FROM vt0 WHERE (((((((CAST(vt0.c0 AS BLOB))OR(vt0.c0 COLLATE BINARY)))OR(vt0.c1 COLLATE BINARY)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)<(t1.c0))) NOTNULL));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((t1.c2)<(t1.c0))) NOTNULL))AND((t1.c2 IN (t1.c0)) COLLATE RTRIM))) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((~ (t1.c0))) BETWEEN (t1.c0) AND ((((-1393225757))<=((t1.c2))))));
SELECT * FROM vt0, t1 LEFT OUTER JOIN v0 ON t1.c1 WHERE ((x'' IN (SUBSTR(v0.c1, t1.c2)))) ORDER BY ((((((((((v0.c1) NOT BETWEEN (t1.c2) AND (vt0.c0)))AND(((((t1.c0)AND(t1.c2)))OR(t1.c0)))))OR(t1.c2 COLLATE NOCASE)))OR(((((vt0.c0)OR(vt0.c1)))OR(v0.c2)))))AND(((((((v0.c1)AND(v0.c1)))AND(vt0.c0)))AND(v0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t1 NOT INDEXED LEFT OUTER JOIN v0 ON t1.c1 WHERE ((((x'' IN (SUBSTR(v0.c1, t1.c2))))AND(CAST((((vt0.c0, t1.c1)) BETWEEN ((t1.c0, vt0.c1)) AND ((v0.c2, v0.c1))) AS NUMERIC)))) ORDER BY v0.c1 DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM vt0, t1 LEFT OUTER JOIN v0 ON t1.c1 WHERE (ABS(v0.c2 COLLATE NOCASE)) ORDER BY v0.c1 DESC  NULLS LAST LIMIT 0;
SELECT * FROM vt0, t1 LEFT OUTER JOIN v0 ON t1.c1 WHERE ((x'' IN (SUBSTR(v0.c1, t1.c2)))) ORDER BY ((((((((((v0.c1) NOT BETWEEN (t1.c2) AND (vt0.c0)))AND(((((t1.c0)AND(t1.c2)))OR(t1.c0)))))OR(t1.c2 COLLATE NOCASE)))OR(((((vt0.c0)OR(vt0.c1)))OR(v0.c2)))))AND(((((((v0.c1)AND(v0.c1)))AND(vt0.c0)))AND(v0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t1 NOT INDEXED LEFT OUTER JOIN v0 ON t1.c1 WHERE ((((x'' IN (SUBSTR(v0.c1, t1.c2))))AND(CAST((((vt0.c0, t1.c1)) BETWEEN ((t1.c0, vt0.c1)) AND ((v0.c2, v0.c1))) AS NUMERIC)))) ORDER BY v0.c1 DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM vt0, t1 LEFT OUTER JOIN v0 ON t1.c1 WHERE (ABS(v0.c2 COLLATE NOCASE)) ORDER BY v0.c1 DESC  NULLS LAST LIMIT 0;
SELECT * FROM vt0, v0, t1 WHERE ((('6')<=((v0.c1 IN (t1.c2)))));
SELECT * FROM vt0, v0, t1 WHERE ((('6')<((v0.c1 IN (t1.c2))))) LIMIT 0;
SELECT * FROM vt0, v0, t1 WHERE ((('6')<=((v0.c1 IN (t1.c2)))));
SELECT * FROM vt0, v0, t1 WHERE ((('6')<((v0.c1 IN (t1.c2))))) LIMIT 0;
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c2 AS NUMERIC)) BETWEEN (((vt0.c1) NOTNULL)) AND ((vt0.c0 IN (v0.c1)))));
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c2 AS NUMERIC)) BETWEEN (((vt0.c1) NOTNULL)) AND ((vt0.c0 IN (v0.c1))))) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (v0.c2) AND (v0.c0 COLLATE RTRIM)) DESC LIMIT 0x2 INTERSECT SELECT * FROM vt0, v0 WHERE ((((vt0.c1 IN (v0.c0)))=(CASE WHEN v0.c1 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN vt0.c1 END))) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (v0.c2) AND (v0.c0 COLLATE RTRIM)) DESC LIMIT 0x2;
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c2 AS NUMERIC)) BETWEEN (((vt0.c1) NOTNULL)) AND ((vt0.c0 IN (v0.c1)))));
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c2 AS NUMERIC)) BETWEEN (((vt0.c1) NOTNULL)) AND ((vt0.c0 IN (v0.c1))))) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (v0.c2) AND (v0.c0 COLLATE RTRIM)) DESC LIMIT 0x2 INTERSECT SELECT * FROM vt0, v0 WHERE ((((vt0.c1 IN (v0.c0)))=(CASE WHEN v0.c1 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN vt0.c1 END))) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (v0.c2) AND (v0.c0 COLLATE RTRIM)) DESC LIMIT 0x2;
SELECT ALL COUNT(*) FROM t1 WHERE ((- (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))))) ORDER BY x'674e' ASC  NULLS LAST, CAST((- (t1.c2)) AS BLOB) ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((- (((t1.c1) BETWEEN (t1.c0) AND (t1.c1)))))AND(0.07575463216738931))) ORDER BY x'674e' ASC  NULLS LAST, CAST((- (t1.c2)) AS BLOB) ASC;
SELECT * FROM t1, vt0, v0 WHERE (t1.c0);
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (t1.c0) ORDER BY CAST(HEX(DISTINCT vt0.c1) AS BLOB)  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1, vt0, v0 WHERE ((((+ (v0.c1))) NOTNULL)) ORDER BY CAST(HEX(DISTINCT vt0.c1) AS BLOB)  NULLS LAST;
SELECT * FROM t1, vt0, v0 WHERE (t1.c0);
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (t1.c0) ORDER BY CAST(HEX(DISTINCT vt0.c1) AS BLOB)  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1, vt0, v0 WHERE ((((+ (v0.c1))) NOTNULL)) ORDER BY CAST(HEX(DISTINCT vt0.c1) AS BLOB)  NULLS LAST;
SELECT * FROM v0, vt0, t1 WHERE ((((((v0.c0)IS NOT(t1.c0))))<=((((v0.c2)OR(t1.c2)))))) ORDER BY 0x1d79052b  NULLS LAST, '950883003';
SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((((((v0.c0)IS NOT(t1.c0))))<=((((v0.c2)OR(t1.c2)))))) ORDER BY 494470443  NULLS LAST, '950883003' LIMIT 0X1;
SELECT * FROM v0, vt0, t1 WHERE ((((((v0.c0)IS NOT(t1.c0))))<=((((v0.c2)OR(t1.c2)))))) ORDER BY 0x1d79052b  NULLS LAST, '950883003';
SELECT ALL MIN(t1.c0) FROM t1 WHERE (IFNULL((t1.c0 IN (t1.c2)), t1.c2));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((IFNULL((t1.c0 IN (t1.c2)), t1.c2))AND(((((((((t1.c0)OR(t1.c0)))AND(((t1.c0) BETWEEN (t1.c2) AND (t1.c1)))))OR(CAST(t1.c2 AS NUMERIC))))AND((((t1.c2, t1.c2, t1.c0))>=((t1.c0, t1.c1, t1.c2)))))))) ORDER BY CASE WHEN ((t1.c1)/(t1.c1)) THEN t1.c1 COLLATE RTRIM ELSE ((((t1.c2)OR(t1.c1)))AND(t1.c2)) END ASC, (((CASE t1.c2  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))<=(((((t1.c0, t1.c1))<=((t1.c1, t1.c0)))))) DESC  NULLS LAST, (((t1.c1, t1.c2)) NOT BETWEEN ((((((((((((t1.c0)OR(t1.c1)))OR(t1.c2)))AND(t1.c0)))AND(t1.c2)))AND(t1.c2)), ((t1.c2)==(t1.c1)))) AND ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), 0.8591408281524963 COLLATE NOCASE))) ASC INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (TOTAL_CHANGES()) ORDER BY CASE WHEN ((t1.c1)/(t1.c1)) THEN t1.c1 COLLATE RTRIM ELSE ((((t1.c2)OR(t1.c1)))AND(t1.c2)) END ASC, (((CASE t1.c2  WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))<=(((((t1.c0, t1.c1))<=((t1.c1, t1.c0)))))) DESC  NULLS LAST, (((t1.c1, t1.c2)) NOT BETWEEN ((((((((((((t1.c0)OR(t1.c1)))OR(t1.c2)))AND(t1.c0)))AND(t1.c2)))AND(t1.c2)), ((t1.c2)==(t1.c1)))) AND ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), 0.8591408281524963 COLLATE NOCASE))) ASC;
SELECT ALL MIN(t1.c0) FROM t1, v0 WHERE ((((((0.6475457996588403) BETWEEN (t1.c0) AND (t1.c1)), (t1.c1 IN ())))<=(((((-275731388)) NOT BETWEEN ((t1.c1)) AND ((v0.c2))), '-518601522'))));
SELECT DISTINCT MIN(t1.c0) FROM t1, v0 WHERE ((((((0.6475457996588403) BETWEEN (t1.c0) AND (t1.c1)), (t1.c1 IN ())))<=(((((0xffffffffef90ac44)) NOT BETWEEN ((t1.c1)) AND ((v0.c2))), '-518601522')))) LIMIT 0x0;
SELECT MAX(t1.c2) FROM t1 INNER JOIN v0 ON CASE WHEN (v0.c1 IN ()) THEN CASE t1.c2  WHEN t1.c0 THEN t1.c0 ELSE vt0.c1 END END NATURAL JOIN vt0 WHERE (CASE t1.c2  WHEN (NOT (v0.c2)) THEN CAST(v0.c2 AS NUMERIC) WHEN (('攪*') IS FALSE) THEN (v0.c1 IN (t1.c2)) WHEN vt0.c1 COLLATE BINARY THEN (t1.c2 IN ()) ELSE ((t1.c2)/(v0.c2)) END);
SELECT MAX(t1.c2) FROM t1 INNER JOIN v0 ON CASE WHEN (v0.c1 IN ()) THEN CASE t1.c2  WHEN t1.c0 THEN t1.c0 ELSE vt0.c1 END END NATURAL JOIN vt0 WHERE (((CASE t1.c2  WHEN (NOT (v0.c2)) THEN CAST(v0.c2 AS NUMERIC) WHEN (('攪*') IS FALSE) THEN (v0.c1 IN (t1.c2)) WHEN vt0.c1 COLLATE BINARY THEN (t1.c2 IN ()) ELSE ((t1.c2)/(v0.c2)) END)AND(CASE WHEN ((vt0.c1) NOT BETWEEN (t1.c2) AND (NULL)) THEN CASE WHEN t1.c0 THEN t1.c1 WHEN v0.c0 THEN t1.c2 WHEN vt0.c1 THEN vt0.c1 ELSE 0.615663104946844 END WHEN (- (t1.c2)) THEN LIKELIHOOD(t1.c1, v0.c1) END)));
SELECT ALL * FROM t1 CROSS JOIN v0 ON CASE WHEN ((t1.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN (+ (vt0.c1)) WHEN t1.c1 THEN ((t1.c0) IS FALSE) WHEN (v0.c0 IN ()) THEN (0.6840295080771627 IN ()) WHEN CAST(vt0.c1 AS BLOB) THEN 0.2753557992743203 ELSE load_extension(t1.c0) END NATURAL JOIN vt0 WHERE ((((t1.c0, t1.c2, t1.c0)) BETWEEN ((v0.c2, t1.c0, v0.c0)) AND ((v0.c2, v0.c2, t1.c2))) COLLATE NOCASE) ORDER BY CAST((v0.c2 IN (vt0.c0, t1.c1)) AS NUMERIC)  NULLS LAST, ((((CASE v0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN t1.c2 END)OR((((v0.c1, t1.c2))==((v0.c1, t1.c1))))))OR(((t1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON CASE WHEN ((t1.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN (+ (vt0.c1)) WHEN t1.c1 THEN ((t1.c0) IS FALSE) WHEN (v0.c0 IN ()) THEN (0.6840295080771627 IN ()) WHEN CAST(vt0.c1 AS BLOB) THEN 0.2753557992743203 ELSE load_extension(t1.c0) END NATURAL JOIN vt0 WHERE ((((((t1.c0, t1.c2, t1.c0)) BETWEEN ((v0.c2, t1.c0, v0.c0)) AND ((v0.c2, v0.c2, t1.c2))) COLLATE NOCASE)AND(v0.c1))) ORDER BY CAST((v0.c2 IN (vt0.c0, t1.c1)) AS NUMERIC)  NULLS LAST, ((((CASE v0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN t1.c2 END)OR((((v0.c1, t1.c2))==((v0.c1, t1.c1))))))OR(((t1.c1) NOT NULL))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON CASE WHEN ((t1.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN (+ (vt0.c1)) WHEN t1.c1 THEN ((t1.c0) IS FALSE) WHEN (v0.c0 IN ()) THEN (0.6840295080771627 IN ()) WHEN CAST(vt0.c1 AS BLOB) THEN 0.2753557992743203 ELSE load_extension(t1.c0) END NATURAL JOIN vt0 WHERE (json_array_length(((v0.c0)AND(t1.c1)))) ORDER BY CAST((v0.c2 IN (vt0.c0, t1.c1)) AS NUMERIC)  NULLS LAST, ((((CASE v0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN t1.c2 END)OR((((v0.c1, t1.c2))==((v0.c1, t1.c1))))))OR(((t1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT ALL * FROM t1 CROSS JOIN v0 ON CASE WHEN ((t1.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN (+ (vt0.c1)) WHEN t1.c1 THEN ((t1.c0) IS FALSE) WHEN (v0.c0 IN ()) THEN (0.6840295080771627 IN ()) WHEN CAST(vt0.c1 AS BLOB) THEN 0.2753557992743203 ELSE load_extension(t1.c0) END NATURAL JOIN vt0 WHERE ((((t1.c0, t1.c2, t1.c0)) BETWEEN ((v0.c2, t1.c0, v0.c0)) AND ((v0.c2, v0.c2, t1.c2))) COLLATE NOCASE) ORDER BY CAST((v0.c2 IN (vt0.c0, t1.c1)) AS NUMERIC)  NULLS LAST, ((((CASE v0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN t1.c2 END)OR((((v0.c1, t1.c2))==((v0.c1, t1.c1))))))OR(((t1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON CASE WHEN ((t1.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN (+ (vt0.c1)) WHEN t1.c1 THEN ((t1.c0) IS FALSE) WHEN (v0.c0 IN ()) THEN (0.6840295080771627 IN ()) WHEN CAST(vt0.c1 AS BLOB) THEN 0.2753557992743203 ELSE load_extension(t1.c0) END NATURAL JOIN vt0 WHERE ((((((t1.c0, t1.c2, t1.c0)) BETWEEN ((v0.c2, t1.c0, v0.c0)) AND ((v0.c2, v0.c2, t1.c2))) COLLATE NOCASE)AND(v0.c1))) ORDER BY CAST((v0.c2 IN (vt0.c0, t1.c1)) AS NUMERIC)  NULLS LAST, ((((CASE v0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN t1.c2 END)OR((((v0.c1, t1.c2))==((v0.c1, t1.c1))))))OR(((t1.c1) NOT NULL))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN v0 ON CASE WHEN ((t1.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN (+ (vt0.c1)) WHEN t1.c1 THEN ((t1.c0) IS FALSE) WHEN (v0.c0 IN ()) THEN (0.6840295080771627 IN ()) WHEN CAST(vt0.c1 AS BLOB) THEN 0.2753557992743203 ELSE load_extension(t1.c0) END NATURAL JOIN vt0 WHERE (json_array_length(((v0.c0)AND(t1.c1)))) ORDER BY CAST((v0.c2 IN (vt0.c0, t1.c1)) AS NUMERIC)  NULLS LAST, ((((CASE v0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN t1.c2 END)OR((((v0.c1, t1.c2))==((v0.c1, t1.c1))))))OR(((t1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0, t1 WHERE (0.8406618661326298);
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((0.8406618661326298)AND((- (CASE v0.c0  WHEN vt0.c1 THEN 0.7594467614718218 WHEN t1.c1 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN v0.c2 END))))) ORDER BY (((v0.c0) IS TRUE) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0, t1 WHERE (0.8406618661326298);
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((0.8406618661326298)AND((- (CASE v0.c0  WHEN vt0.c1 THEN 0.7594467614718218 WHEN t1.c1 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN v0.c2 END))))) ORDER BY (((v0.c0) IS TRUE) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((('184538343')OR(v0.c0)))OR(CASE '1186158983'  WHEN v0.c1 THEN v0.c2 END)))OR(v0.c2 COLLATE RTRIM)))AND(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((9.50883003E8 IN ()))))AND(v0.c0 COLLATE BINARY)));
SELECT DISTINCT COUNT(*) FROM v0 WHERE ((((((((((((((('184538343')OR(v0.c0)))OR(CASE '1186158983'  WHEN v0.c1 THEN v0.c2 END)))OR(v0.c2 COLLATE RTRIM)))AND(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((9.50883003E8 IN ()))))AND(v0.c0 COLLATE BINARY)))AND(NULL))) INTERSECT SELECT DISTINCT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c2 AS NUMERIC)  WHEN v0.c2 COLLATE NOCASE THEN ('-509939982' IN (v0.c1)) WHEN ((v0.c0)/(v0.c1)) THEN (((NULL, v0.c1)) NOT BETWEEN ((0.35421782432602267, v0.c0)) AND ((v0.c1, v0.c2))) END);
SELECT MIN(t1.c2) FROM t1 WHERE (((((CAST(t1.c2 AS INTEGER))AND(t1.c0 COLLATE NOCASE)))AND(CASE WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN 'DF' END))) ORDER BY (((json_array_length(t1.c0, t1.c1), json_object(t1.c1, t1.c2, t1.c0, '^Ed')))<>((t1.c1 COLLATE RTRIM, t1.c0 COLLATE BINARY))), ((COALESCE(DISTINCT t1.c1, 0.7033201320480554))>=(t1.c2))  NULLS LAST, (NOT (TOTAL_CHANGES()))  NULLS LAST;
SELECT ALL MIN(t1.c2) FROM t1 WHERE (((((CAST(t1.c2 AS INTEGER))AND(t1.c0 COLLATE NOCASE)))AND(CASE WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN 'DF' END))) ORDER BY 0.5953621989363957  NULLS LAST;
SELECT * FROM vt0, v0, t1 WHERE ((((((((((((((vt0.c0)OR(t1.c0)))AND(t1.c2)))AND(v0.c1)))OR(v0.c0)))AND(t1.c0)))OR(vt0.c1)) IN (v0.c2)));
SELECT * FROM vt0, v0, t1 WHERE ((((((((((((((((vt0.c0)OR(t1.c0)))AND(t1.c2)))AND(v0.c1)))OR(v0.c0)))AND(t1.c0)))OR(vt0.c1)) IN (v0.c2)))AND(((CASE '-1292772600'  WHEN t1.c0 THEN vt0.c1 WHEN v0.c0 THEN t1.c2 ELSE v0.c2 END)<(((((((t1.c0)AND(vt0.c0)))OR(t1.c2)))OR(v0.c2))))))) LIMIT 0;
SELECT * FROM vt0, v0, t1 WHERE ((((((((((((((vt0.c0)OR(t1.c0)))AND(t1.c2)))AND(v0.c1)))OR(v0.c0)))AND(t1.c0)))OR(vt0.c1)) IN (v0.c2)));
SELECT * FROM vt0, v0, t1 WHERE ((((((((((((((((vt0.c0)OR(t1.c0)))AND(t1.c2)))AND(v0.c1)))OR(v0.c0)))AND(t1.c0)))OR(vt0.c1)) IN (v0.c2)))AND(((CASE '-1292772600'  WHEN t1.c0 THEN vt0.c1 WHEN v0.c0 THEN t1.c2 ELSE v0.c2 END)<(((((((t1.c0)AND(vt0.c0)))OR(t1.c2)))OR(v0.c2))))))) LIMIT 0;
SELECT * FROM v0 INNER JOIN t1 ON ((((t1.c0)>(t1.c1))) NOT BETWEEN (((t1.c2)AND('2144567508'))) AND (((NULL)>(t1.c1)))) WHERE ((((NOT (t1.c2))) BETWEEN (CASE v0.c0  WHEN v0.c2 THEN t1.c1 WHEN '1579820152' THEN t1.c2 END) AND (IFNULL(t1.c0, t1.c0))));
SELECT ALL * FROM v0 INNER JOIN t1 ON ((((t1.c0)>(t1.c1))) NOT BETWEEN (((t1.c2)AND('2144567508'))) AND (((NULL)>(t1.c1)))) WHERE ((((((NOT (t1.c2))) BETWEEN (CASE v0.c0  WHEN v0.c2 THEN t1.c1 WHEN '1579820152' THEN t1.c2 END) AND (IFNULL(t1.c0, t1.c0))))AND(((t1.c1) ISNULL) COLLATE RTRIM))) ORDER BY (((((t1.c1, t1.c1))!=((t1.c1, NULL))))IS((((t1.c0, v0.c1, v0.c0, v0.c0, t1.c1))<=((t1.c2, t1.c2, v0.c1, v0.c2, t1.c0))))) DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM v0 INNER JOIN t1 ON ((((t1.c0)>(t1.c1))) NOT BETWEEN (((t1.c2)AND('2144567508'))) AND (((NULL)>(t1.c1)))) WHERE (t1.c2) ORDER BY (((((t1.c1, t1.c1))!=((t1.c1, NULL))))IS((((t1.c0, v0.c1, v0.c0, v0.c0, t1.c1))<=((t1.c2, t1.c2, v0.c1, v0.c2, t1.c0))))) DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM v0 INNER JOIN t1 ON ((((t1.c0)>(t1.c1))) NOT BETWEEN (((t1.c2)AND('2144567508'))) AND (((NULL)>(t1.c1)))) WHERE ((((NOT (t1.c2))) BETWEEN (CASE v0.c0  WHEN v0.c2 THEN t1.c1 WHEN '1579820152' THEN t1.c2 END) AND (IFNULL(t1.c0, t1.c0))));
SELECT ALL * FROM v0 INNER JOIN t1 ON ((((t1.c0)>(t1.c1))) NOT BETWEEN (((t1.c2)AND('2144567508'))) AND (((NULL)>(t1.c1)))) WHERE ((((((NOT (t1.c2))) BETWEEN (CASE v0.c0  WHEN v0.c2 THEN t1.c1 WHEN '1579820152' THEN t1.c2 END) AND (IFNULL(t1.c0, t1.c0))))AND(((t1.c1) ISNULL) COLLATE RTRIM))) ORDER BY (((((t1.c1, t1.c1))!=((t1.c1, NULL))))IS((((t1.c0, v0.c1, v0.c0, v0.c0, t1.c1))<=((t1.c2, t1.c2, v0.c1, v0.c2, t1.c0))))) DESC  NULLS LAST LIMIT 0x0 INTERSECT SELECT * FROM v0 INNER JOIN t1 ON ((((t1.c0)>(t1.c1))) NOT BETWEEN (((t1.c2)AND('2144567508'))) AND (((NULL)>(t1.c1)))) WHERE (t1.c2) ORDER BY (((((t1.c1, t1.c1))!=((t1.c1, NULL))))IS((((t1.c0, v0.c1, v0.c0, v0.c0, t1.c1))<=((t1.c2, t1.c2, v0.c1, v0.c2, t1.c0))))) DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM v0, vt0, t1 WHERE (x'') ORDER BY CAST(t1.c1 AS NUMERIC);
SELECT * FROM v0, vt0, t1 WHERE (x'') ORDER BY t1.c0 DESC LIMIT 0x0 INTERSECT SELECT * FROM v0, vt0, t1 WHERE (((((x'')<(v0.c1)))||(t1.c2 COLLATE BINARY))) ORDER BY t1.c0 DESC LIMIT 0x0;
SELECT * FROM v0, vt0, t1 WHERE (x'') ORDER BY CAST(t1.c1 AS NUMERIC);
SELECT * FROM v0, vt0, t1 WHERE (x'') ORDER BY t1.c0 DESC LIMIT 0x0 INTERSECT SELECT * FROM v0, vt0, t1 WHERE (((((x'')<(v0.c1)))||(t1.c2 COLLATE BINARY))) ORDER BY t1.c0 DESC LIMIT 0x0;
SELECT * FROM t1, vt0 WHERE (((((((((((t1.c0)>(t1.c1)))OR(vt0.c0 COLLATE BINARY)))AND('430989384')))OR(((t1.c1)LIKE(NULL)))))OR((t1.c0 IN (t1.c0, vt0.c0)))));
SELECT ALL * FROM t1, vt0 WHERE (((((((((((t1.c0)>(t1.c1)))OR(vt0.c0 COLLATE BINARY)))AND('430989384')))OR(((t1.c1)LIKE(NULL)))))OR((t1.c0 IN (t1.c0, vt0.c0))))) LIMIT 0 INTERSECT SELECT ALL * FROM t1, vt0 WHERE ('Jd%<	p3z') LIMIT 0;
SELECT * FROM t1, vt0 WHERE (((((((((((t1.c0)>(t1.c1)))OR(vt0.c0 COLLATE BINARY)))AND('430989384')))OR(((t1.c1)LIKE(NULL)))))OR((t1.c0 IN (t1.c0, vt0.c0)))));
SELECT ALL * FROM t1, vt0 WHERE (((((((((((t1.c0)>(t1.c1)))OR(vt0.c0 COLLATE BINARY)))AND('430989384')))OR(((t1.c1)LIKE(NULL)))))OR((t1.c0 IN (t1.c0, vt0.c0))))) LIMIT 0 INTERSECT SELECT ALL * FROM t1, vt0 WHERE ('Jd%<	p3z') LIMIT 0;
SELECT * FROM t1, v0 WHERE (((((t1.c2)%(v0.c1)))GLOB(HEX(DISTINCT v0.c1)))) ORDER BY ((((((((((v0.c1)AND(v0.c2)))OR(t1.c2)))AND('-2139208316')))AND(v0.c2))) ISNULL) ASC;
SELECT ALL * FROM t1, v0 WHERE (((((t1.c2)%(v0.c1)))GLOB(HEX(DISTINCT v0.c1)))) ORDER BY ((t1.c2)LIKE(t1.c2)) COLLATE RTRIM  NULLS FIRST, ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN (((t1.c2) IS FALSE)))  NULLS LAST, COALESCE(DISTINCT ((v0.c2) ISNULL), 0.5953621989363957, CAST(t1.c0 AS BLOB)) INTERSECT SELECT * FROM t1, v0 WHERE (((v0.c2) ISNULL) COLLATE RTRIM) ORDER BY ((t1.c2)LIKE(t1.c2)) COLLATE RTRIM  NULLS FIRST, ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN (((t1.c2) IS FALSE)))  NULLS LAST, COALESCE(DISTINCT ((v0.c2) ISNULL), 0.5953621989363957, CAST(t1.c0 AS BLOB));
SELECT * FROM t1, v0 WHERE (((((t1.c2)%(v0.c1)))GLOB(HEX(DISTINCT v0.c1)))) ORDER BY ((((((((((v0.c1)AND(v0.c2)))OR(t1.c2)))AND('-2139208316')))AND(v0.c2))) ISNULL) ASC;
SELECT ALL * FROM t1, v0 WHERE (((((t1.c2)%(v0.c1)))GLOB(HEX(DISTINCT v0.c1)))) ORDER BY ((t1.c2)LIKE(t1.c2)) COLLATE RTRIM  NULLS FIRST, ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN (((t1.c2) IS FALSE)))  NULLS LAST, COALESCE(DISTINCT ((v0.c2) ISNULL), 0.5953621989363957, CAST(t1.c0 AS BLOB)) INTERSECT SELECT * FROM t1, v0 WHERE (((v0.c2) ISNULL) COLLATE RTRIM) ORDER BY ((t1.c2)LIKE(t1.c2)) COLLATE RTRIM  NULLS FIRST, ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN (((t1.c2) IS FALSE)))  NULLS LAST, COALESCE(DISTINCT ((v0.c2) ISNULL), 0.5953621989363957, CAST(t1.c0 AS BLOB));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)IS(v0.c1))) BETWEEN (v0.c0) AND (v0.c1 COLLATE NOCASE))) ORDER BY ((((((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))OR(((v0.c0)<(v0.c0)))))OR((((v0.c1, v0.c2)) BETWEEN ((v0.c0, NULL)) AND ((v0.c1, v0.c1))))))OR(((v0.c1)/(v0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c1)IS(v0.c1))) BETWEEN (v0.c0) AND (v0.c1 COLLATE NOCASE)))AND(v0.c1))) ORDER BY ((((((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))OR(((v0.c0)<(v0.c0)))))OR((((v0.c1, v0.c2)) BETWEEN ((v0.c0, NULL)) AND ((v0.c1, v0.c1))))))OR(((v0.c1)/(v0.c2))))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND ('-1310047303')) THEN (((v0.c1, v0.c1, v0.c0, 1036274024))==((v0.c0, v0.c1, v0.c2, v0.c1))) WHEN ((v0.c0) NOT NULL) THEN ((v0.c0) ISNULL) ELSE ((x'bb') NOT BETWEEN (v0.c0) AND (v0.c2)) END) ORDER BY ((((((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))OR(((v0.c0)<(v0.c0)))))OR((((v0.c1, v0.c2)) BETWEEN ((v0.c0, NULL)) AND ((v0.c1, v0.c1))))))OR(((v0.c1)/(v0.c2))))  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 WHERE ('411388515');
SELECT DISTINCT * FROM t1 WHERE ('411388515') LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) IS FALSE)) NOT BETWEEN (CAST(x'84f8' AS REAL)) AND (t1.c0 COLLATE BINARY))) LIMIT 0x0;
SELECT * FROM t1 WHERE ('411388515');
SELECT DISTINCT * FROM t1 WHERE ('411388515') LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) IS FALSE)) NOT BETWEEN (CAST(x'84f8' AS REAL)) AND (t1.c0 COLLATE BINARY))) LIMIT 0x0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, vt0.c1))==((vt0.c1, vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c1, vt0.c1))=((vt0.c1, vt0.c1)))) ISNULL))AND((((((~ (vt0.c1)))AND(((vt0.c0) NOTNULL))))OR(((vt0.c0) NOT BETWEEN ('b') AND (vt0.c1))))))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((NULL, vt0.c0, vt0.c1, vt0.c0)) BETWEEN (((+ (vt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0)<>(vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((vt0.c0)<<(vt0.c1)), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), CASE NULL  WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))) LIMIT 0X2;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, vt0.c1))==((vt0.c1, vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c1, vt0.c1))=((vt0.c1, vt0.c1)))) ISNULL))AND((((((~ (vt0.c1)))AND(((vt0.c0) NOTNULL))))OR(((vt0.c0) NOT BETWEEN ('b') AND (vt0.c1))))))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((((NULL, vt0.c0, vt0.c1, vt0.c0)) BETWEEN (((+ (vt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0)<>(vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((vt0.c0)<<(vt0.c1)), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), CASE NULL  WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))) LIMIT 0X2;
SELECT ALL * FROM t1, v0, vt0 WHERE ((((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))) NOT NULL)) ORDER BY CAST(t1.c1 AS NUMERIC), x'' DESC  NULLS FIRST;
SELECT ALL * FROM t1, v0, vt0 WHERE ((((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))) NOT NULL)) ORDER BY CAST(t1.c1 AS NUMERIC), x'' DESC  NULLS FIRST INTERSECT SELECT ALL * FROM t1, v0, vt0 WHERE (((((('OEE')>(t1.c1))))<>(((~ (t1.c1)))))) ORDER BY CAST(t1.c1 AS NUMERIC), x'' DESC  NULLS FIRST;
SELECT ALL * FROM t1, v0, vt0 WHERE ((((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))) NOT NULL)) ORDER BY CAST(t1.c1 AS NUMERIC), x'' DESC  NULLS FIRST;
SELECT ALL * FROM t1, v0, vt0 WHERE ((((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))) NOT NULL)) ORDER BY CAST(t1.c1 AS NUMERIC), x'' DESC  NULLS FIRST INTERSECT SELECT ALL * FROM t1, v0, vt0 WHERE (((((('OEE')>(t1.c1))))<>(((~ (t1.c1)))))) ORDER BY CAST(t1.c1 AS NUMERIC), x'' DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE)) NOTNULL));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE)) NOTNULL)) ORDER BY HEX(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE)) NOTNULL));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE)) NOTNULL)) ORDER BY HEX(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE ((('-2079834761' COLLATE BINARY)<<(vt0.c0 COLLATE NOCASE)));
SELECT * FROM v0, vt0 WHERE ((('-2079834761' COLLATE BINARY)<<(vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM v0, vt0 WHERE ((('-2079834761' COLLATE BINARY)<<(vt0.c0 COLLATE NOCASE)));
SELECT * FROM v0, vt0 WHERE ((('-2079834761' COLLATE BINARY)<<(vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, t1, v0 WHERE (((CASE v0.c0  WHEN t1.c1 THEN vt0.c1 WHEN v0.c1 THEN v0.c2 WHEN x'' THEN v0.c2 WHEN t1.c2 THEN x'cf' ELSE v0.c2 END)||(NULL)));
SELECT DISTINCT * FROM vt0, t1, v0 WHERE (((((CASE v0.c0  WHEN t1.c1 THEN vt0.c1 WHEN v0.c1 THEN v0.c2 WHEN x'' THEN v0.c2 WHEN t1.c2 THEN x'cf' ELSE v0.c2 END)||(NULL)))AND(((CAST(vt0.c1 AS NUMERIC)) NOT NULL))));
SELECT ALL * FROM vt0, t1, v0 WHERE (((CASE v0.c0  WHEN t1.c1 THEN vt0.c1 WHEN v0.c1 THEN v0.c2 WHEN x'' THEN v0.c2 WHEN t1.c2 THEN x'cf' ELSE v0.c2 END)||(NULL)));
SELECT DISTINCT * FROM vt0, t1, v0 WHERE (((((CASE v0.c0  WHEN t1.c1 THEN vt0.c1 WHEN v0.c1 THEN v0.c2 WHEN x'' THEN v0.c2 WHEN t1.c2 THEN x'cf' ELSE v0.c2 END)||(NULL)))AND(((CAST(vt0.c1 AS NUMERIC)) NOT NULL))));
SELECT * FROM vt0, v0, t1 WHERE (TIME(v0.c1, vt0.c1, x'', t1.c1) COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM vt0, v0, t1 WHERE (TIME(v0.c1, vt0.c1, x'', t1.c1) COLLATE BINARY COLLATE RTRIM) ORDER BY UNLIKELY(DISTINCT LIKELIHOOD(v0.c2, t1.c0)), '1127553725' LIMIT 0X2;
SELECT * FROM vt0, v0, t1 WHERE (TIME(v0.c1, vt0.c1, x'', t1.c1) COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM vt0, v0, t1 WHERE (TIME(v0.c1, vt0.c1, x'', t1.c1) COLLATE BINARY COLLATE RTRIM) ORDER BY UNLIKELY(DISTINCT LIKELIHOOD(v0.c2, t1.c0)), '1127553725' LIMIT 0X2;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, v0 WHERE (((NULL)AND(((((v0.c0) NOT NULL)) IS TRUE)))) INTERSECT SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (((vt0.c1)LIKE(v0.c0)))));
SELECT ALL MAX(v0.c0) FROM v0 WHERE (((CASE WHEN NULL THEN v0.c1 ELSE v0.c1 END) BETWEEN (NULL) AND (((v0.c0)>=(v0.c0)))));
SELECT ALL MAX(v0.c0) FROM v0 WHERE (((CASE WHEN NULL THEN v0.c1 ELSE v0.c1 END) BETWEEN (NULL) AND (((v0.c0)>(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'1b8e')) NOT BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((vt0.c1)>(vt0.c1)) DESC  NULLS LAST, ((((vt0.c0) IS FALSE)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (x'2ebc'))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((((x'1b8e')) NOT BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))))AND((+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))))))) ORDER BY ((vt0.c1)>(vt0.c1)) DESC  NULLS LAST, ((((vt0.c0) IS FALSE)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (x'2ebc'))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ ((~ (vt0.c0))))  NULLS LAST, LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC  NULLS LAST, vt0.c1 DESC LIMIT 2;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ ((~ (vt0.c0))))  NULLS LAST, LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC  NULLS LAST, vt0.c1 DESC LIMIT 2;
SELECT * FROM vt0, v0 INNER JOIN t1 ON CAST(v0.c2 AS TEXT) WHERE ((((v0.c2, vt0.c1, vt0.c1, v0.c0))>(('-1480560719', vt0.c0, v0.c2, vt0.c0))) COLLATE BINARY) ORDER BY (((v0.c2, x'80', v0.c2)) NOT BETWEEN ((((v0.c2) NOTNULL), vt0.c0, CAST(t1.c2 AS REAL))) AND ((((0.12800934104487993)||('613989812')), (((v0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c1))), ((v0.c0) NOT BETWEEN (t1.c1) AND (v0.c0)))));
SELECT * FROM vt0, v0 INNER JOIN t1 ON CAST(v0.c2 AS TEXT) WHERE ((((v0.c2, vt0.c1, vt0.c1, v0.c0))>(('-1480560719', vt0.c0, v0.c2, vt0.c0))) COLLATE BINARY) ORDER BY (((v0.c2, x'80', v0.c2)) NOT BETWEEN ((((v0.c2) NOTNULL), vt0.c0, CAST(t1.c2 AS REAL))) AND ((((0.12800934104487993)||('613989812')), (((v0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c1))), ((v0.c0) NOT BETWEEN (t1.c1) AND (v0.c0))))) LIMIT 0x0;
SELECT * FROM vt0, v0 INNER JOIN t1 ON CAST(v0.c2 AS TEXT) WHERE ((((v0.c2, vt0.c1, vt0.c1, v0.c0))>(('-1480560719', vt0.c0, v0.c2, vt0.c0))) COLLATE BINARY) ORDER BY (((v0.c2, x'80', v0.c2)) NOT BETWEEN ((((v0.c2) NOTNULL), vt0.c0, CAST(t1.c2 AS REAL))) AND ((((0.12800934104487993)||('613989812')), (((v0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c1))), ((v0.c0) NOT BETWEEN (t1.c1) AND (v0.c0)))));
SELECT * FROM vt0, v0 INNER JOIN t1 ON CAST(v0.c2 AS TEXT) WHERE ((((v0.c2, vt0.c1, vt0.c1, v0.c0))>(('-1480560719', vt0.c0, v0.c2, vt0.c0))) COLLATE BINARY) ORDER BY (((v0.c2, x'80', v0.c2)) NOT BETWEEN ((((v0.c2) NOTNULL), vt0.c0, CAST(t1.c2 AS REAL))) AND ((((0.12800934104487993)||('613989812')), (((v0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c1))), ((v0.c0) NOT BETWEEN (t1.c1) AND (v0.c0))))) LIMIT 0x0;
SELECT ALL * FROM vt0, t1 WHERE (CASE WHEN (t1.c2 IN ()) THEN ((t1.c0) NOTNULL) ELSE (((vt0.c0, t1.c1, vt0.c1))<((vt0.c1, x'', t1.c2))) END);
SELECT * FROM vt0, t1 WHERE (CASE WHEN (t1.c2 IN ()) THEN ((t1.c0) NOTNULL) ELSE (((vt0.c0, t1.c1, vt0.c1))<((vt0.c1, x'', t1.c2))) END) INTERSECT SELECT * FROM vt0, t1 WHERE (((2.03799364E8)*(((((((((vt0.c1)AND(t1.c0)))OR(t1.c1)))OR(vt0.c1)))AND(t1.c1)))));
SELECT ALL * FROM vt0, t1 WHERE (CASE WHEN (t1.c2 IN ()) THEN ((t1.c0) NOTNULL) ELSE (((vt0.c0, t1.c1, vt0.c1))<((vt0.c1, x'', t1.c2))) END);
SELECT * FROM vt0, t1 WHERE (CASE WHEN (t1.c2 IN ()) THEN ((t1.c0) NOTNULL) ELSE (((vt0.c0, t1.c1, vt0.c1))<((vt0.c1, x'', t1.c2))) END) INTERSECT SELECT * FROM vt0, t1 WHERE (((2.03799364E8)*(((((((((vt0.c1)AND(t1.c0)))OR(t1.c1)))OR(vt0.c1)))AND(t1.c1)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((((((v0.c1, v0.c1, v0.c2, v0.c0)) BETWEEN ((vt0.c1, v0.c0, v0.c2, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1, vt0.c0))))OR(CASE vt0.c1  WHEN v0.c2 THEN vt0.c1 END)))OR(((v0.c1) IS FALSE))) WHERE (CAST(COALESCE(DISTINCT v0.c2, vt0.c0, vt0.c1, '') AS REAL));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON (((((((v0.c1, v0.c1, v0.c2, v0.c0)) BETWEEN ((vt0.c1, v0.c0, v0.c2, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1, vt0.c0))))OR(CASE vt0.c1  WHEN v0.c2 THEN vt0.c1 END)))OR(((v0.c1) IS FALSE))) WHERE (((CAST(COALESCE(DISTINCT v0.c2, vt0.c0, vt0.c1, '') AS REAL))AND(LOWER(ABS(DISTINCT v0.c1))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON (((((((v0.c1, v0.c1, v0.c2, v0.c0)) BETWEEN ((vt0.c1, v0.c0, v0.c2, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1, vt0.c0))))OR(CASE vt0.c1  WHEN v0.c2 THEN vt0.c1 END)))OR(((v0.c1) IS FALSE))) WHERE (LAST_INSERT_ROWID()) LIMIT 0;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((((((v0.c1, v0.c1, v0.c2, v0.c0)) BETWEEN ((vt0.c1, v0.c0, v0.c2, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1, vt0.c0))))OR(CASE vt0.c1  WHEN v0.c2 THEN vt0.c1 END)))OR(((v0.c1) IS FALSE))) WHERE (CAST(COALESCE(DISTINCT v0.c2, vt0.c0, vt0.c1, '') AS REAL));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON (((((((v0.c1, v0.c1, v0.c2, v0.c0)) BETWEEN ((vt0.c1, v0.c0, v0.c2, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1, vt0.c0))))OR(CASE vt0.c1  WHEN v0.c2 THEN vt0.c1 END)))OR(((v0.c1) IS FALSE))) WHERE (((CAST(COALESCE(DISTINCT v0.c2, vt0.c0, vt0.c1, '') AS REAL))AND(LOWER(ABS(DISTINCT v0.c1))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON (((((((v0.c1, v0.c1, v0.c2, v0.c0)) BETWEEN ((vt0.c1, v0.c0, v0.c2, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1, vt0.c0))))OR(CASE vt0.c1  WHEN v0.c2 THEN vt0.c1 END)))OR(((v0.c1) IS FALSE))) WHERE (LAST_INSERT_ROWID()) LIMIT 0;
SELECT MIN(t1.c2) FROM t1, vt0 WHERE ((((((t1.c0))<=((','))))/('2113151855'))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN (((t1.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, (((((- (t1.c0)))AND((vt0.c0 IN ()))))AND((((t1.c2))<((t1.c1))))) DESC, (((- (t1.c1))) NOT BETWEEN (HEX(t1.c0)) AND (((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)))) ASC;
SELECT DISTINCT MIN(t1.c2) FROM t1, vt0 WHERE ((((((((t1.c0))=((','))))/('2113151855')))AND(CASE ((t1.c2) ISNULL)  WHEN (t1.c2 IN (t1.c1, '1409910518')) THEN ((((((((((t1.c2)AND(NULL)))AND(t1.c2)))OR(t1.c1)))AND(vt0.c0)))AND(t1.c0)) ELSE IFNULL(vt0.c0, vt0.c0) END))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN (((t1.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, (((((- (t1.c0)))AND((vt0.c0 IN ()))))AND((((t1.c2))<((t1.c1))))) DESC, (((- (t1.c1))) NOT BETWEEN (HEX(t1.c0)) AND (((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)))) ASC LIMIT 0X2 INTERSECT SELECT DISTINCT MIN(t1.c2) FROM t1, vt0 WHERE ((+ (x'a5'))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN (((t1.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, (((((- (t1.c0)))AND((vt0.c0 IN ()))))AND((((t1.c2))<((t1.c1))))) DESC, (((- (t1.c1))) NOT BETWEEN (HEX(t1.c0)) AND (((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)))) ASC LIMIT 0x2;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOTNULL))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((((((vt0.c1) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'')))))AND((((((('-273681391')AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))))OR(ABS(vt0.c1)))  NULLS LAST, ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c0 END)AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN 'now1H' THEN vt0.c0 ELSE NULL END)))OR(HEX(DISTINCT vt0.c1))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL));
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOTNULL))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((((((vt0.c1) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'')))))AND((((((('-273681391')AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))))OR(ABS(vt0.c1)))  NULLS LAST, ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c0 END)AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN 'now1H' THEN vt0.c0 ELSE NULL END)))OR(HEX(DISTINCT vt0.c1))) DESC  NULLS LAST;
SELECT ALL MAX(vt0.c1) FROM vt0, v0 WHERE (CAST(CASE WHEN v0.c2 THEN v0.c2 END AS INTEGER)) ORDER BY LTRIM(v0.c2 COLLATE BINARY) ASC, ((((((HEX(v0.c2))OR(CAST(v0.c0 AS INTEGER))))AND((- (v0.c2)))))OR(0xffffffffebf456b9)) DESC  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c1) FROM vt0, v0 WHERE (((CAST(CASE WHEN v0.c2 THEN v0.c2 END AS INTEGER))AND(((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOT NULL)))) ORDER BY (((v0.c1) IS FALSE) IN (LOWER(v0.c1), '1730237592')) DESC, CAST(v0.c1 COLLATE RTRIM AS REAL) ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN t1 ON ((((((vt0.c0, vt0.c1)) NOT BETWEEN ((v0.c0, t1.c2)) AND ((t1.c0, vt0.c1))), (+ (v0.c0)), (- (t1.c0)), ((vt0.c1) BETWEEN (t1.c1) AND (vt0.c0)), ((t1.c0)OR(NULL)), ((((((((((((((((v0.c2)OR(t1.c1)))OR(t1.c2)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c1)))AND(0.32258822266496845)))AND(vt0.c0)))AND(vt0.c0)), t1.c1))<(((t1.c0 IN (vt0.c0)), ((t1.c1)==(vt0.c0)), ((((((((t1.c2)AND(vt0.c1)))AND(v0.c0)))OR(t1.c1)))OR(v0.c1)), CAST(t1.c0 AS REAL), CAST(v0.c1 AS NUMERIC), ((v0.c1) ISNULL), ((((t1.c0)AND(vt0.c0)))AND('3挤KU'))))) WHERE (CAST(((t1.c1) NOT NULL) AS NUMERIC)) ORDER BY UPPER(t1.c1 COLLATE RTRIM) ASC;
SELECT DISTINCT COUNT(*) FROM v0, vt0 INNER JOIN t1 ON ((((((vt0.c0, vt0.c1)) NOT BETWEEN ((v0.c0, t1.c2)) AND ((t1.c0, vt0.c1))), (+ (v0.c0)), (- (t1.c0)), ((vt0.c1) BETWEEN (t1.c1) AND (vt0.c0)), ((t1.c0)OR(NULL)), ((((((((((((((((v0.c2)OR(t1.c1)))OR(t1.c2)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c1)))AND(0.32258822266496845)))AND(vt0.c0)))AND(vt0.c0)), t1.c1))<(((t1.c0 IN (vt0.c0)), ((t1.c1)=(vt0.c0)), ((((((((t1.c2)AND(vt0.c1)))AND(v0.c0)))OR(t1.c1)))OR(v0.c1)), CAST(t1.c0 AS REAL), CAST(v0.c1 AS NUMERIC), ((v0.c1) ISNULL), ((((t1.c0)AND(vt0.c0)))AND('3挤KU'))))) WHERE (((CAST(((t1.c1) NOT NULL) AS NUMERIC))AND((((CAST(v0.c0 AS NUMERIC)))!=((CASE t1.c0  WHEN vt0.c0 THEN t1.c1 END)))))) ORDER BY CASE WHEN v0.c1 THEN ((vt0.c1)>(v0.c2)) END ASC, (vt0.c0 IN (((t1.c0)AND(v0.c1))))  NULLS LAST, (CASE t1.c1  WHEN vt0.c0 THEN t1.c2 ELSE t1.c0 END IN (((t1.c2) ISNULL))) LIMIT 0X1 INTERSECT SELECT DISTINCT COUNT(*) FROM v0, vt0 INNER JOIN t1 ON ((((((vt0.c0, vt0.c1)) NOT BETWEEN ((v0.c0, t1.c2)) AND ((t1.c0, vt0.c1))), (+ (v0.c0)), (- (t1.c0)), ((vt0.c1) BETWEEN (t1.c1) AND (vt0.c0)), ((t1.c0)OR(NULL)), ((((((((((((((((v0.c2)OR(t1.c1)))OR(t1.c2)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c1)))AND(0.32258822266496845)))AND(vt0.c0)))AND(vt0.c0)), t1.c1))<(((t1.c0 IN (vt0.c0)), ((t1.c1)==(vt0.c0)), ((((((((t1.c2)AND(vt0.c1)))AND(v0.c0)))OR(t1.c1)))OR(v0.c1)), CAST(t1.c0 AS REAL), CAST(v0.c1 AS NUMERIC), ((v0.c1) ISNULL), ((((t1.c0)AND(vt0.c0)))AND('3挤KU'))))) WHERE (((- (v0.c0)) IN ((v0.c1 IN ())))) ORDER BY CASE WHEN v0.c1 THEN ((vt0.c1)>(v0.c2)) END ASC, (vt0.c0 IN (((t1.c0)AND(v0.c1))))  NULLS LAST, (CASE t1.c1  WHEN vt0.c0 THEN t1.c2 ELSE t1.c0 END IN (((t1.c2) ISNULL))) LIMIT 1;
SELECT * FROM vt0, t1 CROSS JOIN v0 ON CASE ((t1.c2)>=(vt0.c1))  WHEN ((((((((((t1.c1)OR(v0.c1)))OR(t1.c1)))AND(t1.c2)))OR(t1.c0)))AND(v0.c2)) THEN CAST(vt0.c1 AS NUMERIC) ELSE (v0.c1 IN (vt0.c0, vt0.c1)) END WHERE (0.5035986536868896) ORDER BY (((~ (v0.c0))) IS FALSE) DESC;
SELECT DISTINCT * FROM vt0, t1 CROSS JOIN v0 ON CASE ((t1.c2)>=(vt0.c1))  WHEN ((((((((((t1.c1)OR(v0.c1)))OR(t1.c1)))AND(t1.c2)))OR(t1.c0)))AND(v0.c2)) THEN CAST(vt0.c1 AS NUMERIC) ELSE (v0.c1 IN (vt0.c0, vt0.c1)) END WHERE (0.5035986536868896) ORDER BY ((vt0.c1 COLLATE RTRIM) IS TRUE) ASC  NULLS FIRST LIMIT 1;
SELECT * FROM vt0, t1 CROSS JOIN v0 ON CASE ((t1.c2)>=(vt0.c1))  WHEN ((((((((((t1.c1)OR(v0.c1)))OR(t1.c1)))AND(t1.c2)))OR(t1.c0)))AND(v0.c2)) THEN CAST(vt0.c1 AS NUMERIC) ELSE (v0.c1 IN (vt0.c0, vt0.c1)) END WHERE (0.5035986536868896) ORDER BY (((~ (v0.c0))) IS FALSE) DESC;
SELECT DISTINCT * FROM vt0, t1 CROSS JOIN v0 ON CASE ((t1.c2)>=(vt0.c1))  WHEN ((((((((((t1.c1)OR(v0.c1)))OR(t1.c1)))AND(t1.c2)))OR(t1.c0)))AND(v0.c2)) THEN CAST(vt0.c1 AS NUMERIC) ELSE (v0.c1 IN (vt0.c0, vt0.c1)) END WHERE (0.5035986536868896) ORDER BY ((vt0.c1 COLLATE RTRIM) IS TRUE) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c2)*(t1.c1)))))OR((t1.c0 IN ()))))OR(((t1.c2) BETWEEN (t1.c2) AND (t1.c1)))))OR(LIKELY(t1.c0)))) ORDER BY '0.9594471581869118' ASC, CASE CAST(t1.c1 AS NUMERIC)  WHEN (+ (t1.c2)) THEN (((t1.c1, t1.c0, t1.c0))<>((t1.c2, t1.c2, t1.c0))) WHEN ((t1.c1)>>(t1.c1)) THEN ((NULL)!=(t1.c1)) WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c2 END THEN ((x'') BETWEEN (t1.c2) AND (t1.c0)) END DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c2)*(t1.c1)))))OR((t1.c0 IN ()))))OR(((t1.c2) BETWEEN (t1.c2) AND (t1.c1)))))OR(LIKELY(t1.c0))))AND((((((- (NULL)))OR(((t1.c0)OR(t1.c1)))))AND(((t1.c1) BETWEEN (t1.c0) AND ('-457750164'))))))) ORDER BY (~ ((('5SJ')<(t1.c2)))) ASC  NULLS LAST, ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN 0.11366496344987276 ELSE t1.c0 END)IS NOT(-1709863210)) DESC;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c2)*(t1.c1)))))OR((t1.c0 IN ()))))OR(((t1.c2) BETWEEN (t1.c2) AND (t1.c1)))))OR(LIKELY(t1.c0)))) ORDER BY '0.9594471581869118' ASC, CASE CAST(t1.c1 AS NUMERIC)  WHEN (+ (t1.c2)) THEN (((t1.c1, t1.c0, t1.c0))<>((t1.c2, t1.c2, t1.c0))) WHEN ((t1.c1)>>(t1.c1)) THEN ((NULL)!=(t1.c1)) WHEN CASE t1.c1  WHEN t1.c1 THEN t1.c2 END THEN ((x'') BETWEEN (t1.c2) AND (t1.c0)) END DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((((((((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c2)*(t1.c1)))))OR((t1.c0 IN ()))))OR(((t1.c2) BETWEEN (t1.c2) AND (t1.c1)))))OR(LIKELY(t1.c0))))AND((((((- (NULL)))OR(((t1.c0)OR(t1.c1)))))AND(((t1.c1) BETWEEN (t1.c0) AND ('-457750164'))))))) ORDER BY (~ ((('5SJ')<(t1.c2)))) ASC  NULLS LAST, ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN 0.11366496344987276 ELSE t1.c0 END)IS NOT(-1709863210)) DESC;
SELECT ALL * FROM vt0 INNER JOIN v0 ON TRIM(DISTINCT vt0.c1, vt0.c1) COLLATE BINARY NATURAL JOIN t1 WHERE (((+ (t1.c1)) IN (CAST(t1.c0 AS BLOB), ((v0.c0)!=(vt0.c0)))));
SELECT * FROM vt0 INNER JOIN v0 ON TRIM(DISTINCT vt0.c1, vt0.c1) COLLATE BINARY NATURAL JOIN t1 WHERE (((+ (t1.c1)) IN (CAST(t1.c0 AS BLOB), ((v0.c0)<(vt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON TRIM(DISTINCT vt0.c1, vt0.c1) COLLATE BINARY NATURAL JOIN t1 WHERE (((+ (t1.c1)) IN (CAST(t1.c0 AS BLOB), ((v0.c0)!=(vt0.c0)))));
SELECT * FROM vt0 INNER JOIN v0 ON TRIM(DISTINCT vt0.c1, vt0.c1) COLLATE BINARY NATURAL JOIN t1 WHERE (((+ (t1.c1)) IN (CAST(t1.c0 AS BLOB), ((v0.c0)<(vt0.c0)))));
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC))|((((1.695723770099855E-4))=((t1.c1)))))) ORDER BY (NOT (t1.c1))  NULLS LAST, CASE ((t1.c2) BETWEEN (t1.c2) AND (t1.c0))  WHEN (((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))) THEN CAST(t1.c2 AS NUMERIC) WHEN (+ (t1.c1)) THEN t1.c0 WHEN ((t1.c1)<(t1.c2)) THEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c2 END END;
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS NUMERIC))|((((1.695723770099855E-4))==((t1.c1))))))AND((t1.c2 IN (t1.c1)) COLLATE RTRIM))) ORDER BY (NOT (t1.c1))  NULLS LAST, CASE ((t1.c2) BETWEEN (t1.c2) AND (t1.c0))  WHEN (((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))) THEN CAST(t1.c2 AS NUMERIC) WHEN (+ (t1.c1)) THEN t1.c0 WHEN ((t1.c1)<(t1.c2)) THEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c2 END END LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ((((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))))-(CASE WHEN t1.c0 THEN t1.c1 END))) ORDER BY (NOT (t1.c1))  NULLS LAST, CASE ((t1.c2) BETWEEN (t1.c2) AND (t1.c0))  WHEN (((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))) THEN CAST(t1.c2 AS NUMERIC) WHEN (+ (t1.c1)) THEN t1.c0 WHEN ((t1.c1)<(t1.c2)) THEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c2 END END LIMIT 0x0;
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC))|((((1.695723770099855E-4))=((t1.c1)))))) ORDER BY (NOT (t1.c1))  NULLS LAST, CASE ((t1.c2) BETWEEN (t1.c2) AND (t1.c0))  WHEN (((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))) THEN CAST(t1.c2 AS NUMERIC) WHEN (+ (t1.c1)) THEN t1.c0 WHEN ((t1.c1)<(t1.c2)) THEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c2 END END;
SELECT ALL * FROM t1 WHERE (((((CAST(t1.c1 AS NUMERIC))|((((1.695723770099855E-4))==((t1.c1))))))AND((t1.c2 IN (t1.c1)) COLLATE RTRIM))) ORDER BY (NOT (t1.c1))  NULLS LAST, CASE ((t1.c2) BETWEEN (t1.c2) AND (t1.c0))  WHEN (((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))) THEN CAST(t1.c2 AS NUMERIC) WHEN (+ (t1.c1)) THEN t1.c0 WHEN ((t1.c1)<(t1.c2)) THEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c2 END END LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ((((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))))-(CASE WHEN t1.c0 THEN t1.c1 END))) ORDER BY (NOT (t1.c1))  NULLS LAST, CASE ((t1.c2) BETWEEN (t1.c2) AND (t1.c0))  WHEN (((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))) THEN CAST(t1.c2 AS NUMERIC) WHEN (+ (t1.c1)) THEN t1.c0 WHEN ((t1.c1)<(t1.c2)) THEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c2 END END LIMIT 0x0;
SELECT * FROM t1, vt0 INNER JOIN v0 ON (NOT ((((v0.c1, v0.c2))<=((0Xffffffffe66edf0a, v0.c0))))) WHERE (LIKELY(v0.c0 COLLATE BINARY)) ORDER BY 'y绅' ASC  NULLS LAST, (((NOT (t1.c0)))||(((t1.c2)GLOB(t1.c2)))) DESC;
SELECT DISTINCT * FROM t1, vt0 INNER JOIN v0 ON (NOT ((((v0.c1, v0.c2))<=((-428941558, v0.c0))))) WHERE (LIKELY(v0.c0 COLLATE BINARY)) ORDER BY (((((vt0.c1 IN ()))OR((t1.c2 IN ()))))AND(NULL COLLATE BINARY)) DESC  NULLS LAST, (+ (((t1.c1)-(vt0.c0))));
SELECT * FROM t1, vt0 INNER JOIN v0 ON (NOT ((((v0.c1, v0.c2))<=((0Xffffffffe66edf0a, v0.c0))))) WHERE (LIKELY(v0.c0 COLLATE BINARY)) ORDER BY 'y绅' ASC  NULLS LAST, (((NOT (t1.c0)))||(((t1.c2)GLOB(t1.c2)))) DESC;
SELECT DISTINCT * FROM t1, vt0 INNER JOIN v0 ON (NOT ((((v0.c1, v0.c2))<=((-428941558, v0.c0))))) WHERE (LIKELY(v0.c0 COLLATE BINARY)) ORDER BY (((((vt0.c1 IN ()))OR((t1.c2 IN ()))))AND(NULL COLLATE BINARY)) DESC  NULLS LAST, (+ (((t1.c1)-(vt0.c0))));
SELECT ALL * FROM t1, v0, vt0 WHERE (CAST((((t1.c2, v0.c0))>=((0.16222565778868403, vt0.c0))) AS REAL));
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((CAST((((t1.c2, v0.c0))>((0.16222565778868403, vt0.c0))) AS REAL))AND(0.7915856028492325))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1, v0, vt0 WHERE ('-2080115895') LIMIT 1;
SELECT ALL * FROM t1, v0, vt0 WHERE (CAST((((t1.c2, v0.c0))>=((0.16222565778868403, vt0.c0))) AS REAL));
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((CAST((((t1.c2, v0.c0))>((0.16222565778868403, vt0.c0))) AS REAL))AND(0.7915856028492325))) LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1, v0, vt0 WHERE ('-2080115895') LIMIT 1;
SELECT ALL MIN(t1.c0) FROM v0, vt0, t1 WHERE ((~ ((~ (t1.c2)))));
SELECT ALL MIN(t1.c0) FROM v0, vt0, t1 WHERE ((((~ ((~ (t1.c2)))))AND(TRIM((NOT (t1.c0)), (((vt0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))))) ORDER BY ((((vt0.c1)=(v0.c0)))-(((NULL) ISNULL))) DESC, (((t1.c2) NOTNULL) IN (((t1.c2) IS TRUE)));
SELECT ALL MIN(t1.c0) FROM t1, vt0 WHERE (TRIM(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2)), ((((((((t1.c1)OR(t1.c2)))OR(vt0.c1)))AND(t1.c1)))AND(t1.c0))));
SELECT DISTINCT MIN(t1.c0) FROM t1, vt0 WHERE (TRIM(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2)), ((((((((t1.c1)OR(t1.c2)))OR(vt0.c1)))AND(t1.c1)))AND(t1.c0)))) ORDER BY (t1.c0 COLLATE NOCASE IN ()) ASC  NULLS LAST, (((t1.c0)&(vt0.c1)) IN ()) DESC;
SELECT ALL * FROM t1 NATURAL JOIN v0 LEFT OUTER JOIN vt0 ON NULLIF(((t1.c2) BETWEEN (t1.c2) AND (vt0.c1)), ((t1.c1) ISNULL)) WHERE (((((v0.c2) IS FALSE))-((((t1.c2, v0.c1)) BETWEEN ((v0.c2, vt0.c0)) AND ((v0.c2, v0.c2)))))) ORDER BY ((SQLITE_VERSION())<=(t1.c2 COLLATE NOCASE)) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 END)||(((t1.c0) BETWEEN (v0.c1) AND (v0.c0)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 NATURAL JOIN v0 LEFT OUTER JOIN vt0 ON NULLIF(((t1.c2) BETWEEN (t1.c2) AND (vt0.c1)), ((t1.c1) ISNULL)) WHERE (((((((v0.c2) IS FALSE))-((((t1.c2, v0.c1)) BETWEEN ((v0.c2, vt0.c0)) AND ((v0.c2, v0.c2))))))AND(CAST(TOTAL_CHANGES() AS INTEGER)))) ORDER BY '1350323595' ASC, CAST(RTRIM(v0.c1) AS NUMERIC) ASC LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 NATURAL JOIN v0 LEFT OUTER JOIN vt0 ON NULLIF(((t1.c2) BETWEEN (t1.c2) AND (vt0.c1)), ((t1.c1) ISNULL)) WHERE (((CAST(v0.c1 AS REAL))>=((t1.c0 IN (v0.c1))))) ORDER BY '1350323595' ASC, CAST(RTRIM(v0.c1) AS NUMERIC) ASC LIMIT 2;
SELECT ALL * FROM t1 NATURAL JOIN v0 LEFT OUTER JOIN vt0 ON NULLIF(((t1.c2) BETWEEN (t1.c2) AND (vt0.c1)), ((t1.c1) ISNULL)) WHERE (((((v0.c2) IS FALSE))-((((t1.c2, v0.c1)) BETWEEN ((v0.c2, vt0.c0)) AND ((v0.c2, v0.c2)))))) ORDER BY ((SQLITE_VERSION())<=(t1.c2 COLLATE NOCASE)) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 END)||(((t1.c0) BETWEEN (v0.c1) AND (v0.c0)))) ASC  NULLS LAST;
SELECT DISTINCT * FROM t1 NATURAL JOIN v0 LEFT OUTER JOIN vt0 ON NULLIF(((t1.c2) BETWEEN (t1.c2) AND (vt0.c1)), ((t1.c1) ISNULL)) WHERE (((((((v0.c2) IS FALSE))-((((t1.c2, v0.c1)) BETWEEN ((v0.c2, vt0.c0)) AND ((v0.c2, v0.c2))))))AND(CAST(TOTAL_CHANGES() AS INTEGER)))) ORDER BY '1350323595' ASC, CAST(RTRIM(v0.c1) AS NUMERIC) ASC LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 NATURAL JOIN v0 LEFT OUTER JOIN vt0 ON NULLIF(((t1.c2) BETWEEN (t1.c2) AND (vt0.c1)), ((t1.c1) ISNULL)) WHERE (((CAST(v0.c1 AS REAL))>=((t1.c0 IN (v0.c1))))) ORDER BY '1350323595' ASC, CAST(RTRIM(v0.c1) AS NUMERIC) ASC LIMIT 2;
SELECT * FROM t1, v0 WHERE ('-1015592478' COLLATE NOCASE);
SELECT DISTINCT * FROM t1, v0 WHERE ((('-1015592478' COLLATE NOCASE)AND(CAST(v0.c1 AS TEXT) COLLATE BINARY))) ORDER BY rtreenode(v0.c0, v0.c0) COLLATE RTRIM ASC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 NOT INDEXED, v0 WHERE (((t1.c2)+(t1.c1)) COLLATE RTRIM) ORDER BY rtreenode(v0.c0, v0.c0) COLLATE RTRIM ASC LIMIT 0x1;
SELECT * FROM t1, v0 WHERE ('-1015592478' COLLATE NOCASE);
SELECT DISTINCT * FROM t1, v0 WHERE ((('-1015592478' COLLATE NOCASE)AND(CAST(v0.c1 AS TEXT) COLLATE BINARY))) ORDER BY rtreenode(v0.c0, v0.c0) COLLATE RTRIM ASC LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM t1 NOT INDEXED, v0 WHERE (((t1.c2)+(t1.c1)) COLLATE RTRIM) ORDER BY rtreenode(v0.c0, v0.c0) COLLATE RTRIM ASC LIMIT 0x1;
SELECT MIN(t1.c1) FROM v0 NATURAL JOIN t1 WHERE (((v0.c2) IS TRUE));
SELECT DISTINCT MIN(t1.c1) FROM v0 NATURAL JOIN t1 WHERE (((v0.c2) IS TRUE)) LIMIT 1 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM v0 NATURAL JOIN t1 WHERE (((CASE WHEN v0.c2 THEN t1.c2 WHEN t1.c2 THEN v0.c1 WHEN t1.c1 THEN t1.c2 WHEN v0.c2 THEN v0.c1 END) NOT NULL)) LIMIT 1;
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c2 THEN UPPER(v0.c0) WHEN CAST(v0.c2 AS INTEGER) THEN v0.c2 END);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c2 THEN UPPER(v0.c0) WHEN CAST(v0.c2 AS INTEGER) THEN v0.c2 END)AND((((v0.c0, 0x630e6401)) BETWEEN (((NOT (v0.c2)), ((v0.c2) NOT NULL))) AND ((((((((v0.c1)OR('c
.')))AND(v0.c2)))OR(v0.c0)), (v0.c2 IN (v0.c2)))))))) ORDER BY json_patch(CAST(v0.c0 AS REAL), TRIM(DISTINCT v0.c1, v0.c2));
SELECT ALL * FROM t1, v0 WHERE (((((t1.c2) ISNULL)) BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))));
SELECT ALL * FROM t1, v0 WHERE (((((((t1.c2) ISNULL)) BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))))AND(CASE WHEN '1226535833' THEN (((t1.c0, v0.c0, v0.c2)) NOT BETWEEN ((t1.c2, t1.c2, t1.c2)) AND ((v0.c0, v0.c1, v0.c1))) WHEN ((t1.c1) ISNULL) THEN (((v0.c2, v0.c2))>=((1973911339, t1.c2))) ELSE (t1.c2 IN (v0.c2)) END))) ORDER BY (+ (LIKE(v0.c2, x'ca48', 'P'))) ASC;
SELECT ALL * FROM t1, v0 WHERE (((((t1.c2) ISNULL)) BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))));
SELECT ALL * FROM t1, v0 WHERE (((((((t1.c2) ISNULL)) BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))))AND(CASE WHEN '1226535833' THEN (((t1.c0, v0.c0, v0.c2)) NOT BETWEEN ((t1.c2, t1.c2, t1.c2)) AND ((v0.c0, v0.c1, v0.c1))) WHEN ((t1.c1) ISNULL) THEN (((v0.c2, v0.c2))>=((1973911339, t1.c2))) ELSE (t1.c2 IN (v0.c2)) END))) ORDER BY (+ (LIKE(v0.c2, x'ca48', 'P'))) ASC;
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY CAST(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) AS BLOB), CASE WHEN ((1356775893) BETWEEN (NULL) AND (v0.c1)) THEN CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN -2037779001 ELSE v0.c0 END WHEN CAST('-1180109988' AS INTEGER) THEN CASE WHEN v0.c2 THEN v0.c1 WHEN x'44' THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END END DESC  NULLS LAST, v0.c1  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE (NULL) ORDER BY CAST(((v0.c0)LIKE(v0.c0)) AS BLOB)  NULLS FIRST, ((((((((('-98462600')OR(v0.c2)))AND(v0.c0)))AND(v0.c1)), v0.c0, ((v0.c1)>=(v0.c0)), '1001155578'))>(((v0.c2 IN ()), CASE WHEN '-7205998445782257643T142T1545:314 1447397089622763285 9011374535680472534 1442:437T530T' THEN v0.c1 ELSE v0.c2 END, (v0.c1 IN ()), ((0.9133655473784572)<=(v0.c1)))))  NULLS FIRST, (((('1812445526')OR(v0.c2)))=(v0.c1)) ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0 WHERE (CASE WHEN v0.c1 THEN v0.c1 END COLLATE NOCASE) ORDER BY CAST(((v0.c0)LIKE(v0.c0)) AS BLOB)  NULLS FIRST, ((((((((('-98462600')OR(v0.c2)))AND(v0.c0)))AND(v0.c1)), v0.c0, ((v0.c1)>=(v0.c0)), '1001155578'))>(((v0.c2 IN ()), CASE WHEN '-7205998445782257643T142T1545:314 1447397089622763285 9011374535680472534 1442:437T530T' THEN v0.c1 ELSE v0.c2 END, (v0.c1 IN ()), ((0.9133655473784572)<=(v0.c1)))))  NULLS FIRST, (((('1812445526')OR(v0.c2)))==(v0.c1)) ASC LIMIT 0x1;
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY CAST(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) AS BLOB), CASE WHEN ((1356775893) BETWEEN (NULL) AND (v0.c1)) THEN CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN -2037779001 ELSE v0.c0 END WHEN CAST('-1180109988' AS INTEGER) THEN CASE WHEN v0.c2 THEN v0.c1 WHEN x'44' THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END END DESC  NULLS LAST, v0.c1  NULLS FIRST;
SELECT DISTINCT * FROM v0 WHERE (NULL) ORDER BY CAST(((v0.c0)LIKE(v0.c0)) AS BLOB)  NULLS FIRST, ((((((((('-98462600')OR(v0.c2)))AND(v0.c0)))AND(v0.c1)), v0.c0, ((v0.c1)>=(v0.c0)), '1001155578'))>(((v0.c2 IN ()), CASE WHEN '-7205998445782257643T142T1545:314 1447397089622763285 9011374535680472534 1442:437T530T' THEN v0.c1 ELSE v0.c2 END, (v0.c1 IN ()), ((0.9133655473784572)<=(v0.c1)))))  NULLS FIRST, (((('1812445526')OR(v0.c2)))=(v0.c1)) ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0 WHERE (CASE WHEN v0.c1 THEN v0.c1 END COLLATE NOCASE) ORDER BY CAST(((v0.c0)LIKE(v0.c0)) AS BLOB)  NULLS FIRST, ((((((((('-98462600')OR(v0.c2)))AND(v0.c0)))AND(v0.c1)), v0.c0, ((v0.c1)>=(v0.c0)), '1001155578'))>(((v0.c2 IN ()), CASE WHEN '-7205998445782257643T142T1545:314 1447397089622763285 9011374535680472534 1442:437T530T' THEN v0.c1 ELSE v0.c2 END, (v0.c1 IN ()), ((0.9133655473784572)<=(v0.c1)))))  NULLS FIRST, (((('1812445526')OR(v0.c2)))==(v0.c1)) ASC LIMIT 0x1;
SELECT ALL * FROM v0, t1 WHERE ((~ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((x'')))))) ORDER BY ((((t1.c2 COLLATE BINARY)OR(CASE WHEN t1.c2 THEN v0.c2 END)))AND(((v0.c0) NOTNULL))) ASC, '1562198322'  NULLS LAST;
SELECT DISTINCT * FROM v0, t1 WHERE ((((~ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((x''))))))AND((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((((v0.c2)&(v0.c1)), v0.c0, ((v0.c0) NOT BETWEEN (v0.c2) AND (t1.c2)))) AND ((HEX(DISTINCT t1.c2), (+ (NULL)), (t1.c0 IN (v0.c2)))))))) ORDER BY ((((t1.c2 COLLATE BINARY)OR(CASE WHEN t1.c2 THEN v0.c2 END)))AND(((v0.c0) NOTNULL))) ASC, '1562198322'  NULLS LAST LIMIT 1;
SELECT ALL * FROM v0, t1 WHERE ((~ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((x'')))))) ORDER BY ((((t1.c2 COLLATE BINARY)OR(CASE WHEN t1.c2 THEN v0.c2 END)))AND(((v0.c0) NOTNULL))) ASC, '1562198322'  NULLS LAST;
SELECT DISTINCT * FROM v0, t1 WHERE ((((~ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((x''))))))AND((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((((v0.c2)&(v0.c1)), v0.c0, ((v0.c0) NOT BETWEEN (v0.c2) AND (t1.c2)))) AND ((HEX(DISTINCT t1.c2), (+ (NULL)), (t1.c0 IN (v0.c2)))))))) ORDER BY ((((t1.c2 COLLATE BINARY)OR(CASE WHEN t1.c2 THEN v0.c2 END)))AND(((v0.c0) NOTNULL))) ASC, '1562198322'  NULLS LAST LIMIT 1;
SELECT * FROM vt0, v0 WHERE (x'cdd79b');
SELECT * FROM vt0, v0 WHERE (x'cdd79b') LIMIT 2;
SELECT * FROM vt0, v0 WHERE (x'cdd79b');
SELECT * FROM vt0, v0 WHERE (x'cdd79b') LIMIT 2;
SELECT MIN(vt0.c0) FROM vt0, t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (vt0.c0))) IS FALSE)) ORDER BY (((vt0.c0, NULLIF(DISTINCT t1.c1, t1.c1), ((((t1.c0)OR(t1.c0)))OR(vt0.c1))))<=((((t1.c1)IS NOT(vt0.c0)), ((vt0.c1) IS FALSE), LOWER(t1.c1))))  NULLS FIRST, (((((((vt0.c0)) BETWEEN (('1744414291')) AND ((vt0.c0))))OR(CASE vt0.c1  WHEN t1.c2 THEN t1.c1 WHEN t1.c2 THEN NULL WHEN x'' THEN vt0.c1 END)))AND(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c2))))  NULLS LAST, CAST(((t1.c1)<=(t1.c0)) AS NUMERIC);
SELECT DISTINCT MIN(vt0.c0) FROM vt0, t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c0) AND (vt0.c0))) IS FALSE))AND(CAST((+ (t1.c2)) AS REAL)))) ORDER BY ((((t1.c2)%(vt0.c0)))AND(TYPEOF(t1.c0))) DESC LIMIT 0x0;
SELECT * FROM vt0, v0, t1 WHERE ((((((vt0.c1)) NOT BETWEEN (('깴2䋮.制z')) AND ((0.7111229215634541)))) ISNULL)) ORDER BY (+ (v0.c0)) COLLATE NOCASE, ((((v0.c0) BETWEEN (t1.c1) AND (vt0.c1))) NOTNULL)  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((((vt0.c1)) NOT BETWEEN (('깴2䋮.制z')) AND ((0.7111229215634541)))) ISNULL)) ORDER BY ((((vt0.c1) BETWEEN (t1.c0) AND (NULL))) BETWEEN ((- (x'b0b0769bc5b2'))) AND (vt0.c0)) DESC, ((((((v0.c1)AND(CASE WHEN t1.c1 THEN v0.c0 WHEN vt0.c1 THEN 67093693 END)))OR((v0.c0 IN (vt0.c1, vt0.c1)))))AND(v0.c0)) DESC;
SELECT * FROM vt0, v0, t1 WHERE ((((((vt0.c1)) NOT BETWEEN (('깴2䋮.制z')) AND ((0.7111229215634541)))) ISNULL)) ORDER BY (+ (v0.c0)) COLLATE NOCASE, ((((v0.c0) BETWEEN (t1.c1) AND (vt0.c1))) NOTNULL)  NULLS LAST;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((((vt0.c1)) NOT BETWEEN (('깴2䋮.制z')) AND ((0.7111229215634541)))) ISNULL)) ORDER BY ((((vt0.c1) BETWEEN (t1.c0) AND (NULL))) BETWEEN ((- (x'b0b0769bc5b2'))) AND (vt0.c0)) DESC, ((((((v0.c1)AND(CASE WHEN t1.c1 THEN v0.c0 WHEN vt0.c1 THEN 67093693 END)))OR((v0.c0 IN (vt0.c1, vt0.c1)))))AND(v0.c0)) DESC;
SELECT ALL COUNT(*) FROM v0, t1 LEFT OUTER JOIN vt0 ON (CASE WHEN '' THEN vt0.c1 END IN (vt0.c0, (((t1.c2, t1.c0))>=((t1.c0, t1.c1))))) WHERE (((((('-291337799')OR(v0.c0)))OR(vt0.c1)) IN (((((((vt0.c1)AND(t1.c2)))OR(vt0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM v0, t1 INNER JOIN vt0 ON (CASE WHEN '' THEN vt0.c1 END IN (vt0.c0, (((t1.c2, t1.c0))>=((t1.c0, t1.c1))))) WHERE (((((('-291337799')OR(v0.c0)))OR(vt0.c1)) IN (((((((vt0.c1)AND(t1.c2)))OR(vt0.c0)))OR(v0.c0))))) ORDER BY (- (CAST(t1.c2 AS INTEGER)))  NULLS LAST, ((((CAST(vt0.c0 AS REAL))OR(CASE v0.c1  WHEN v0.c2 THEN t1.c1 WHEN vt0.c0 THEN t1.c1 WHEN 0.6657477002288383 THEN t1.c2 END)))OR(((vt0.c1)<=(vt0.c1))))  NULLS LAST LIMIT 1 INTERSECT SELECT ALL COUNT(*) FROM v0, t1 INNER JOIN vt0 ON (CASE WHEN '' THEN vt0.c1 END IN (vt0.c0, (((t1.c2, t1.c0))>=((t1.c0, t1.c1))))) WHERE (((((((((((v0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(t1.c0)))AND(v0.c1))) NOTNULL)) ORDER BY (- (CAST(t1.c2 AS INTEGER)))  NULLS LAST, ((((CAST(vt0.c0 AS REAL))OR(CASE v0.c1  WHEN v0.c2 THEN t1.c1 WHEN vt0.c0 THEN t1.c1 WHEN 0.6657477002288383 THEN t1.c2 END)))OR(((vt0.c1)<=(vt0.c1))))  NULLS LAST LIMIT 0x1;
SELECT * FROM v0 WHERE (CAST(NULL AS INTEGER));
SELECT DISTINCT * FROM v0 WHERE (((CAST(NULL AS INTEGER))AND(IFNULL((((v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((v0.c0, v0.c1, x'')) AND ((v0.c1, v0.c1, v0.c1))), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)))) ORDER BY (((((v0.c0)%(v0.c0))))=((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))))) DESC, ((((v0.c0) BETWEEN (v0.c2) AND (v0.c2)))OR(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))) DESC LIMIT 2 INTERSECT SELECT DISTINCT * FROM v0 WHERE (9223372036854775807) ORDER BY (((((v0.c0)%(v0.c0))))==((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))))) DESC, ((((v0.c0) BETWEEN (v0.c2) AND (v0.c2)))OR(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))) DESC LIMIT 0x2;
SELECT * FROM v0 WHERE (CAST(NULL AS INTEGER));
SELECT DISTINCT * FROM v0 WHERE (((CAST(NULL AS INTEGER))AND(IFNULL((((v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((v0.c0, v0.c1, x'')) AND ((v0.c1, v0.c1, v0.c1))), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)))) ORDER BY (((((v0.c0)%(v0.c0))))=((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))))) DESC, ((((v0.c0) BETWEEN (v0.c2) AND (v0.c2)))OR(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))) DESC LIMIT 2 INTERSECT SELECT DISTINCT * FROM v0 WHERE (9223372036854775807) ORDER BY (((((v0.c0)%(v0.c0))))==((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))))) DESC, ((((v0.c0) BETWEEN (v0.c2) AND (v0.c2)))OR(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))) DESC LIMIT 0x2;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((t1.c0) IS TRUE));
SELECT COUNT(*) FROM vt0, t1 WHERE (((t1.c0) IS TRUE));
SELECT * FROM vt0 WHERE ((((vt0.c1) NOT NULL) IN ())) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) NOT NULL) IN ())) ORDER BY vt0.c0 DESC LIMIT 0X4 INTERSECT SELECT * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('-1478923133')) IN (617396543))) ORDER BY vt0.c0 DESC LIMIT 4;
SELECT * FROM vt0 WHERE ((((vt0.c1) NOT NULL) IN ())) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) NOT NULL) IN ())) ORDER BY vt0.c0 DESC LIMIT 0X4 INTERSECT SELECT * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('-1478923133')) IN (617396543))) ORDER BY vt0.c0 DESC LIMIT 4;
SELECT MAX(t1.c2) FROM t1 WHERE (((NULL) BETWEEN (((t1.c2) BETWEEN (t1.c2) AND (t1.c2))) AND ('-1635930072'))) ORDER BY ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2))) BETWEEN (t1.c2) AND (CASE WHEN t1.c1 THEN t1.c0 END)) ASC  NULLS FIRST;
SELECT DISTINCT MAX(t1.c2) FROM t1 WHERE (((NULL) BETWEEN (((t1.c2) BETWEEN (t1.c2) AND (t1.c2))) AND ('-1635930072'))) ORDER BY 0.4638239374258897 ASC LIMIT 1 INTERSECT SELECT DISTINCT MAX(t1.c2) FROM t1 WHERE (((((t1.c2)IS(t1.c2)))<((((t1.c1))>=((t1.c0)))))) ORDER BY 0.4638239374258897 ASC LIMIT 0x1;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t1 ON (- (((v0.c1)OR(v0.c0)))) WHERE (v0.c1);
SELECT COUNT(*) FROM v0 CROSS JOIN t1 ON (- (((v0.c1)OR(v0.c0)))) WHERE (((v0.c1)AND(CASE CAST(t1.c2 AS REAL)  WHEN 0.8047305373999913 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)) END))) INTERSECT SELECT COUNT(*) FROM v0 CROSS JOIN t1 ON (- (((v0.c1)OR(v0.c0)))) WHERE ((((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((v0.c1))))<((v0.c1 IN (t1.c2)))));
SELECT * FROM v0, t1 WHERE (CAST((NOT (t1.c1)) AS NUMERIC));
SELECT * FROM v0, t1 WHERE (((CAST((NOT (t1.c1)) AS NUMERIC))AND(CASE ((t1.c1) NOT NULL)  WHEN ((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2)) THEN t1.c2 COLLATE NOCASE END))) LIMIT 0;
SELECT * FROM v0, t1 WHERE (CAST((NOT (t1.c1)) AS NUMERIC));
SELECT * FROM v0, t1 WHERE (((CAST((NOT (t1.c1)) AS NUMERIC))AND(CASE ((t1.c1) NOT NULL)  WHEN ((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2)) THEN t1.c2 COLLATE NOCASE END))) LIMIT 0;
SELECT ALL MAX(v0.c0) FROM v0 WHERE (((((v0.c2) NOT NULL))IS NOT(((v0.c2) ISNULL)))) ORDER BY (((((v0.c2)|(v0.c1)), NULL, ((v0.c2) IS FALSE)))>=((v0.c0, (v0.c1 IN (0x49584289, v0.c0)), CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END))) DESC, ((CAST(v0.c0 AS BLOB)) NOT BETWEEN (((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c2))) AND (-1520699329)) DESC;
SELECT DISTINCT MAX(v0.c0) FROM v0 WHERE (((((((v0.c2) NOT NULL))IS NOT(((v0.c2) ISNULL))))AND(COALESCE(DISTINCT v0.c0, CAST(v0.c1 AS TEXT), (('-2028238407') NOT BETWEEN (v0.c1) AND (v0.c0)), ((v0.c0)=(v0.c1)))))) ORDER BY ((((((v0.c1)*(v0.c1)))AND(((v0.c0) NOT NULL))))OR((((v0.c2, v0.c0))==((v0.c1, v0.c1)))))  NULLS FIRST INTERSECT SELECT DISTINCT MAX(v0.c0) FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c1)*(v0.c1)))AND(((v0.c0) NOT NULL))))OR((((v0.c2, v0.c0))==((v0.c1, v0.c1)))))  NULLS FIRST;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (NOT ((vt0.c0 IN (v0.c1, v0.c0)))) WHERE (((((+ (v0.c1)), (v0.c2 IN (vt0.c0)), ((v0.c1)==(v0.c2))))<(((((0.7700976594047959)) BETWEEN ((vt0.c0)) AND ((v0.c1))), vt0.c0 COLLATE NOCASE, ((vt0.c1) IS FALSE)))));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON (NOT ((vt0.c0 IN (v0.c1, v0.c0)))) WHERE (((((((+ (v0.c1)), (v0.c2 IN (vt0.c0)), ((v0.c1)=(v0.c2))))<(((((0.7700976594047959)) BETWEEN ((vt0.c0)) AND ((v0.c1))), vt0.c0 COLLATE NOCASE, ((vt0.c1) IS FALSE)))))AND(((((vt0.c0, vt0.c1, v0.c0))>=((vt0.c0, v0.c1, v0.c0))) IN (ROUND(-175164023, vt0.c0), vt0.c0))))) LIMIT 1;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (NOT ((vt0.c0 IN (v0.c1, v0.c0)))) WHERE (((((+ (v0.c1)), (v0.c2 IN (vt0.c0)), ((v0.c1)==(v0.c2))))<(((((0.7700976594047959)) BETWEEN ((vt0.c0)) AND ((v0.c1))), vt0.c0 COLLATE NOCASE, ((vt0.c1) IS FALSE)))));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON (NOT ((vt0.c0 IN (v0.c1, v0.c0)))) WHERE (((((((+ (v0.c1)), (v0.c2 IN (vt0.c0)), ((v0.c1)=(v0.c2))))<(((((0.7700976594047959)) BETWEEN ((vt0.c0)) AND ((v0.c1))), vt0.c0 COLLATE NOCASE, ((vt0.c1) IS FALSE)))))AND(((((vt0.c0, vt0.c1, v0.c0))>=((vt0.c0, v0.c1, v0.c0))) IN (ROUND(-175164023, vt0.c0), vt0.c0))))) LIMIT 1;
SELECT ALL * FROM t1 INNER JOIN v0 ON (((((NULL)) BETWEEN ((v0.c0)) AND ((vt0.c0))))*(t1.c1 COLLATE BINARY)) NATURAL JOIN vt0 WHERE ((+ (((t1.c1) BETWEEN (t1.c1) AND (v0.c1)))));
SELECT * FROM t1 INNER JOIN v0 ON (((((NULL)) BETWEEN ((v0.c0)) AND ((vt0.c0))))*(t1.c1 COLLATE BINARY)) NATURAL JOIN vt0 WHERE ((((+ (((t1.c1) BETWEEN (t1.c1) AND (v0.c1)))))AND(((CASE WHEN v0.c2 THEN t1.c0 WHEN vt0.c1 THEN v0.c2 WHEN t1.c2 THEN t1.c0 ELSE v0.c1 END)/(v0.c0 COLLATE NOCASE))))) ORDER BY CAST(((('', t1.c1, t1.c0))=((t1.c2, v0.c2, v0.c1))) AS BLOB), ((((v0.c1)!=(v0.c1))) NOT NULL)  NULLS FIRST, CAST((- (v0.c2)) AS TEXT) DESC;
SELECT ALL * FROM t1 INNER JOIN v0 ON (((((NULL)) BETWEEN ((v0.c0)) AND ((vt0.c0))))*(t1.c1 COLLATE BINARY)) NATURAL JOIN vt0 WHERE ((+ (((t1.c1) BETWEEN (t1.c1) AND (v0.c1)))));
SELECT * FROM t1 INNER JOIN v0 ON (((((NULL)) BETWEEN ((v0.c0)) AND ((vt0.c0))))*(t1.c1 COLLATE BINARY)) NATURAL JOIN vt0 WHERE ((((+ (((t1.c1) BETWEEN (t1.c1) AND (v0.c1)))))AND(((CASE WHEN v0.c2 THEN t1.c0 WHEN vt0.c1 THEN v0.c2 WHEN t1.c2 THEN t1.c0 ELSE v0.c1 END)/(v0.c0 COLLATE NOCASE))))) ORDER BY CAST(((('', t1.c1, t1.c0))=((t1.c2, v0.c2, v0.c1))) AS BLOB), ((((v0.c1)!=(v0.c1))) NOT NULL)  NULLS FIRST, CAST((- (v0.c2)) AS TEXT) DESC;
SELECT ALL MIN(vt0.c1) FROM t1, v0, vt0 WHERE (IFNULL(((((((((t1.c0)OR(vt0.c0)))AND(t1.c2)))OR(vt0.c1)))OR(vt0.c0)), t1.c1 COLLATE BINARY));
SELECT DISTINCT MIN(vt0.c1) FROM t1, v0, vt0 WHERE (IFNULL(((((((((t1.c0)OR(vt0.c0)))AND(t1.c2)))OR(vt0.c1)))OR(vt0.c0)), t1.c1 COLLATE BINARY)) LIMIT 0x1;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE ((t1.c1) ISNULL)  WHEN ((t1.c0)*(t1.c0)) THEN ((t1.c2)||(t1.c0)) WHEN x'ba42f836' THEN (t1.c2 IN (t1.c0)) WHEN ((((t1.c0)OR(t1.c0)))AND(t1.c1)) THEN (('B./dr') NOT BETWEEN (t1.c2) AND (t1.c2)) END) ORDER BY (((t1.c2 IN ()))*(((t1.c0)IS(t1.c2)))) ASC, json_extract(((t1.c2)>>(t1.c1)), '7f?Q&w') DESC;
SELECT MAX(t1.c1) FROM t1 WHERE (((CASE ((t1.c1) ISNULL)  WHEN ((t1.c0)*(t1.c0)) THEN ((t1.c2)||(t1.c0)) WHEN x'ba42f836' THEN (t1.c2 IN (t1.c0)) WHEN ((((t1.c0)OR(t1.c0)))AND(t1.c1)) THEN (('B./dr') NOT BETWEEN (t1.c2) AND (t1.c2)) END)AND(MIN(((t1.c0) ISNULL), (t1.c2 IN (t1.c0)))))) ORDER BY (((t1.c2 IN ()))*(((t1.c0)IS(t1.c2)))) ASC, json_extract(((t1.c2)>>(t1.c1)), '7f?Q&w') DESC INTERSECT SELECT MAX(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE RTRIM) NOT BETWEEN ((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c1)))) AND ((x'' IN (t1.c2))))) ORDER BY (((t1.c2 IN ()))*(((t1.c0)IS(t1.c2)))) ASC, json_extract(((t1.c2)>>(t1.c1)), '7f?Q&w') DESC;
SELECT * FROM t1, vt0, v0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE RTRIM));
SELECT ALL * FROM t1, vt0, v0 WHERE (((TRIM(DISTINCT vt0.c0 COLLATE RTRIM))AND((- ((NOT (t1.c1))))))) ORDER BY '-1094150099', ((UPPER(201250908)) IS FALSE) ASC LIMIT 0x0;
SELECT * FROM t1, vt0, v0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE RTRIM));
SELECT ALL * FROM t1, vt0, v0 WHERE (((TRIM(DISTINCT vt0.c0 COLLATE RTRIM))AND((- ((NOT (t1.c1))))))) ORDER BY '-1094150099', ((UPPER(201250908)) IS FALSE) ASC LIMIT 0x0;
SELECT ALL MAX(vt0.c0) FROM vt0 WHERE ((CAST('-600244167' AS REAL) IN (((vt0.c1)-(vt0.c1)))));
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE ((CAST('-600244167' AS REAL) IN (((vt0.c1)-(vt0.c1)))));
SELECT MAX(vt0.c0) FROM vt0, v0, t1 WHERE (t1.c0) ORDER BY ((t1.c0) IS FALSE) COLLATE NOCASE  NULLS LAST, (((((t1.c1))>((v0.c2))))/(((((v0.c2)AND(v0.c0)))AND(v0.c2)))) DESC  NULLS FIRST, SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT MAX(vt0.c0) FROM vt0, v0, t1 WHERE (((t1.c0)AND(json_object(CASE WHEN v0.c2 THEN vt0.c1 END, CASE t1.c2  WHEN v0.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c0 WHEN 0.7947892475181152 THEN t1.c2 WHEN t1.c1 THEN vt0.c1 END, (NOT (t1.c1)))))) ORDER BY ((highlight(v0.c2, vt0.c0, 0X76ad8841, vt0.c1))OR(v0.c1 COLLATE BINARY))  NULLS FIRST, (NULL IN (0.24597292833210727)) LIMIT 0X0;
SELECT * FROM t1 WHERE (((CAST(t1.c2 AS INTEGER))<>(((t1.c0)AND(t1.c2)))));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c2 AS INTEGER))<(((t1.c0)AND(t1.c2)))))AND((((((((((((t1.c0))>=((t1.c2))))OR(t1.c0 COLLATE BINARY)))OR(((NULL) BETWEEN ('1744414291') AND (t1.c0)))))AND((t1.c1 IN (t1.c2)))))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) LIMIT 0;
SELECT * FROM t1 WHERE (((CAST(t1.c2 AS INTEGER))<>(((t1.c0)AND(t1.c2)))));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c2 AS INTEGER))<(((t1.c0)AND(t1.c2)))))AND((((((((((((t1.c0))>=((t1.c2))))OR(t1.c0 COLLATE BINARY)))OR(((NULL) BETWEEN ('1744414291') AND (t1.c0)))))AND((t1.c1 IN (t1.c2)))))OR(((t1.c0) BETWEEN (t1.c1) AND (t1.c0))))))) LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) LIMIT 0;
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE ((((((t1.c1))<=((t1.c0))))>=(v0.c1)));
SELECT DISTINCT COUNT(*) FROM t1, vt0, v0 WHERE ((((((t1.c1))<=((t1.c0))))=(v0.c1))) LIMIT 0x3;
SELECT ALL MIN(t1.c2) FROM t1, v0 WHERE ((((v0.c2)AND(v0.c2)) IN ((((t1.c1))>=((t1.c2))), ((v0.c1) IS TRUE))));
SELECT MIN(t1.c2) FROM t1, v0 WHERE ((((((v0.c2)AND(v0.c2)) IN ((((t1.c1))>=((t1.c2))), ((v0.c1) IS TRUE))))AND(((((t1.c1) ISNULL)) IS TRUE)))) ORDER BY (NOT ((~ (v0.c2)))) ASC, ((t1.c1 COLLATE NOCASE)IS NOT(TRIM(t1.c0, t1.c2))) DESC LIMIT 0X2;
SELECT ALL COUNT(*) FROM vt0 WHERE ('1589537762');
SELECT ALL COUNT(*) FROM vt0 WHERE ('1589537762') ORDER BY (- (vt0.c0)) COLLATE RTRIM DESC, ((CAST(-1395127720 AS REAL))-((((vt0.c0, vt0.c0, '9g', vt0.c0)) BETWEEN (('', vt0.c1, vt0.c1, vt0.c1)) AND (('eE', vt0.c0, vt0.c0, vt0.c1)))))  NULLS LAST, (+ ((~ (vt0.c1)))) DESC, ((UPPER(DISTINCT vt0.c0))<>(x'9c')) DESC;
SELECT * FROM t1 WHERE ((NOT (CASE t1.c2  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END)));
SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE t1.c2  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (UNLIKELY((t1.c0 IN ('<濁뼉紕^')))) LIMIT 2;
SELECT * FROM t1 WHERE ((NOT (CASE t1.c2  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END)));
SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE t1.c2  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 WHERE (UNLIKELY((t1.c0 IN ('<濁뼉紕^')))) LIMIT 2;
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (v0.c1) ORDER BY CASE ((v0.c0)IS(vt0.c0))  WHEN (('-111518474')+(t1.c1)) THEN (0.3608507751790049 IN (vt0.c1)) END  NULLS FIRST, json_array_length(((v0.c2)>=(v0.c0)), CASE 0.269811753748721  WHEN t1.c0 THEN t1.c1 END) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0 NOT INDEXED, v0 WHERE (((v0.c1)AND((((- (t1.c2))) IS FALSE)))) ORDER BY (- ((vt0.c1 IN ()))) INTERSECT SELECT COUNT(*) FROM t1, vt0, v0 WHERE (CASE WHEN (v0.c1 IN ()) THEN ((t1.c0) NOTNULL) ELSE t1.c2 COLLATE RTRIM END) ORDER BY (- ((vt0.c1 IN ())));
SELECT * FROM vt0, v0, t1 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN ((t1.c1 IN (vt0.c0, v0.c2))) AND (((vt0.c1)IS NOT(t1.c1)))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((((v0.c0) IS TRUE)) NOT BETWEEN ((t1.c1 IN (vt0.c0, v0.c2))) AND (((vt0.c1)IS NOT(t1.c1)))))AND(((((((vt0.c1) IS TRUE))AND(v0.c1)))AND('538290660'))))) ORDER BY CASE WHEN ((((((NULL)OR(NULL)))AND(v0.c1)))OR(t1.c0)) THEN (v0.c0 IN (v0.c0, vt0.c1)) WHEN TYPEOF(v0.c1) THEN t1.c2 COLLATE BINARY ELSE LIKE(t1.c2, v0.c0) END, CASE ((-1635930072) BETWEEN (t1.c0) AND (t1.c2))  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN t1.c1 END WHEN ((v0.c0)%(vt0.c1)) THEN v0.c1 COLLATE RTRIM END  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((CAST(t1.c1 AS INTEGER)) BETWEEN ((- (v0.c0))) AND ((t1.c1 IN ())))) ORDER BY CASE WHEN ((((((NULL)OR(NULL)))AND(v0.c1)))OR(t1.c0)) THEN (v0.c0 IN (v0.c0, vt0.c1)) WHEN TYPEOF(v0.c1) THEN t1.c2 COLLATE BINARY ELSE LIKE(t1.c2, v0.c0) END, CASE ((-1635930072) BETWEEN (t1.c0) AND (t1.c2))  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN t1.c1 END WHEN ((v0.c0)%(vt0.c1)) THEN v0.c1 COLLATE RTRIM END  NULLS FIRST LIMIT 0;
SELECT * FROM vt0, v0, t1 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN ((t1.c1 IN (vt0.c0, v0.c2))) AND (((vt0.c1)IS NOT(t1.c1)))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((((((v0.c0) IS TRUE)) NOT BETWEEN ((t1.c1 IN (vt0.c0, v0.c2))) AND (((vt0.c1)IS NOT(t1.c1)))))AND(((((((vt0.c1) IS TRUE))AND(v0.c1)))AND('538290660'))))) ORDER BY CASE WHEN ((((((NULL)OR(NULL)))AND(v0.c1)))OR(t1.c0)) THEN (v0.c0 IN (v0.c0, vt0.c1)) WHEN TYPEOF(v0.c1) THEN t1.c2 COLLATE BINARY ELSE LIKE(t1.c2, v0.c0) END, CASE ((-1635930072) BETWEEN (t1.c0) AND (t1.c2))  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN t1.c1 END WHEN ((v0.c0)%(vt0.c1)) THEN v0.c1 COLLATE RTRIM END  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE (((CAST(t1.c1 AS INTEGER)) BETWEEN ((- (v0.c0))) AND ((t1.c1 IN ())))) ORDER BY CASE WHEN ((((((NULL)OR(NULL)))AND(v0.c1)))OR(t1.c0)) THEN (v0.c0 IN (v0.c0, vt0.c1)) WHEN TYPEOF(v0.c1) THEN t1.c2 COLLATE BINARY ELSE LIKE(t1.c2, v0.c0) END, CASE ((-1635930072) BETWEEN (t1.c0) AND (t1.c2))  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN t1.c1 END WHEN ((v0.c0)%(vt0.c1)) THEN v0.c1 COLLATE RTRIM END  NULLS FIRST LIMIT 0;
SELECT ALL * FROM vt0 WHERE (CAST(x'' AS INTEGER));
SELECT DISTINCT * FROM vt0 WHERE (CAST(x'' AS INTEGER)) ORDER BY ((vt0.c0)||(vt0.c0)) COLLATE BINARY, CASE WHEN (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1)) AND (('c[P', x'd17b04'))) THEN vt0.c1 WHEN ((vt0.c1)*(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END THEN (~ (vt0.c0)) END  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (NULL) ORDER BY ((vt0.c0)||(vt0.c0)) COLLATE BINARY, CASE WHEN (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1)) AND (('c[P', x'd17b04'))) THEN vt0.c1 WHEN ((vt0.c1)*(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END THEN (~ (vt0.c0)) END  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM vt0 WHERE (CAST(x'' AS INTEGER));
SELECT DISTINCT * FROM vt0 WHERE (CAST(x'' AS INTEGER)) ORDER BY ((vt0.c0)||(vt0.c0)) COLLATE BINARY, CASE WHEN (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1)) AND (('c[P', x'd17b04'))) THEN vt0.c1 WHEN ((vt0.c1)*(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END THEN (~ (vt0.c0)) END  NULLS FIRST LIMIT 0X2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (NULL) ORDER BY ((vt0.c0)||(vt0.c0)) COLLATE BINARY, CASE WHEN (((vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1)) AND (('c[P', x'd17b04'))) THEN vt0.c1 WHEN ((vt0.c1)*(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END THEN (~ (vt0.c0)) END  NULLS FIRST LIMIT 0x2;
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c1) AND (vt0.c1))) NOT NULL));
SELECT DISTINCT COUNT(*) FROM v0, t1, vt0 WHERE (((((((vt0.c0) BETWEEN (v0.c1) AND (vt0.c1))) NOT NULL))AND((((((v0.c2, t1.c0))>=((v0.c0, v0.c1))))%(t1.c1 COLLATE NOCASE)))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE (- (t1.c2))  WHEN (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c2))) THEN t1.c0 COLLATE BINARY WHEN t1.c2 THEN t1.c0 ELSE (((t1.c2))<((t1.c2))) END) ORDER BY ((((((((((((((t1.c0)AND(t1.c2)))OR(t1.c2)))OR((- (t1.c1)))))AND(HEX(t1.c2))))AND(((t1.c1) IS FALSE))))OR(t1.c1 COLLATE NOCASE)))AND(((((((t1.c0)AND(t1.c2)))OR(t1.c0)))OR(t1.c0))))  NULLS FIRST, (((((t1.c1)OR(t1.c0)))OR(t1.c2)) IN (SQLITE_VERSION(), t1.c0)) ASC  NULLS LAST, ((CASE t1.c0  WHEN t1.c1 THEN t1.c2 WHEN t1.c0 THEN t1.c2 WHEN t1.c1 THEN 0.17366808409776624 ELSE t1.c0 END) NOTNULL) ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE (- (t1.c2))  WHEN (((t1.c0, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c2))) THEN t1.c0 COLLATE BINARY WHEN t1.c2 THEN t1.c0 ELSE (((t1.c2))<((t1.c2))) END)AND((+ ((t1.c0 IN (t1.c0))))))) ORDER BY x'e2f2' DESC  NULLS FIRST, ((t1.c0) BETWEEN (((t1.c0) BETWEEN (t1.c2) AND (t1.c0))) AND (((((t1.c1)OR(t1.c2)))AND(t1.c1)))) ASC  NULLS FIRST, CASE t1.c0  WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END COLLATE NOCASE ASC  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((- (t1.c2)))/(TRIM(DISTINCT '1891954482', t1.c1)))) ORDER BY x'e2f2' DESC  NULLS FIRST, ((t1.c0) BETWEEN (((t1.c0) BETWEEN (t1.c2) AND (t1.c0))) AND (((((t1.c1)OR(t1.c2)))AND(t1.c1)))) ASC  NULLS FIRST, CASE t1.c0  WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END COLLATE NOCASE ASC  NULLS FIRST LIMIT 0X3;
SELECT * FROM t1 WHERE (CASE WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c2)) THEN ((((((NULL)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)) WHEN (- (t1.c1)) THEN '' END) ORDER BY '1709102821' ASC  NULLS FIRST, (((t1.c2 IN (t1.c0, t1.c2)))IS(((t1.c0) BETWEEN (t1.c2) AND (t1.c0)))) DESC;
SELECT ALL * FROM t1 WHERE (((CASE WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c2)) THEN ((((((NULL)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)) WHEN (- (t1.c1)) THEN '' END)AND((((t1.c0, (~ (t1.c0)), ((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)), t1.c0))>(((((t1.c1, t1.c0, t1.c0))==((t1.c1, t1.c0, t1.c1))), ((t1.c2)||(t1.c2)), CASE t1.c1  WHEN t1.c2 THEN t1.c2 END, (t1.c1 IN ()))))))) ORDER BY 0.4638239374258897 ASC  NULLS LAST, ((t1.c0)AND(t1.c1)) COLLATE NOCASE  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY 0.4638239374258897 ASC  NULLS LAST, ((t1.c0)AND(t1.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c2)) THEN ((((((NULL)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)) WHEN (- (t1.c1)) THEN '' END) ORDER BY '1709102821' ASC  NULLS FIRST, (((t1.c2 IN (t1.c0, t1.c2)))IS(((t1.c0) BETWEEN (t1.c2) AND (t1.c0)))) DESC;
SELECT ALL * FROM t1 WHERE (((CASE WHEN ((((t1.c0)OR(t1.c1)))AND(t1.c2)) THEN ((((((NULL)AND(t1.c0)))AND(t1.c1)))AND(t1.c1)) WHEN (- (t1.c1)) THEN '' END)AND((((t1.c0, (~ (t1.c0)), ((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)), t1.c0))>(((((t1.c1, t1.c0, t1.c0))==((t1.c1, t1.c0, t1.c1))), ((t1.c2)||(t1.c2)), CASE t1.c1  WHEN t1.c2 THEN t1.c2 END, (t1.c1 IN ()))))))) ORDER BY 0.4638239374258897 ASC  NULLS LAST, ((t1.c0)AND(t1.c1)) COLLATE NOCASE  NULLS FIRST INTERSECT SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY 0.4638239374258897 ASC  NULLS LAST, ((t1.c0)AND(t1.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (((json_type(v0.c1))&(v0.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c1)LIKE(v0.c0)))IS(v0.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM vt0, v0 WHERE (((((json_type(v0.c1))&(v0.c0 COLLATE NOCASE)))AND(((((((vt0.c1)AND(v0.c0)))AND(vt0.c1)))AND(v0.c2)) COLLATE NOCASE))) ORDER BY 0.45233999123177093, vt0.c0 LIMIT 1;
SELECT ALL * FROM vt0, v0 WHERE (((json_type(v0.c1))&(v0.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c1)LIKE(v0.c0)))IS(v0.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM vt0, v0 WHERE (((((json_type(v0.c1))&(v0.c0 COLLATE NOCASE)))AND(((((((vt0.c1)AND(v0.c0)))AND(vt0.c1)))AND(v0.c2)) COLLATE NOCASE))) ORDER BY 0.45233999123177093, vt0.c0 LIMIT 1;
SELECT ALL MIN(t1.c2) FROM vt0, v0 CROSS JOIN t1 ON ((((t1.c2)-(vt0.c1)))<=(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))) WHERE (((((t1.c0) BETWEEN (v0.c0) AND ('-1890759136'))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((0Xfffffffff98956e8)%(t1.c0))))) ORDER BY '&i'  NULLS FIRST, x'2c' DESC  NULLS LAST, 0.2551021314898203 ASC, CAST(t1.c0 AS TEXT);
SELECT ALL MIN(t1.c2) FROM vt0, v0 CROSS JOIN t1 ON ((((t1.c2)-(vt0.c1)))<=(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))) WHERE (((((((t1.c0) BETWEEN (v0.c0) AND ('-1890759136'))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((0Xfffffffff98956e8)%(t1.c0)))))AND(TRIM(((((NULL)OR(v0.c1)))AND(t1.c0)))))) ORDER BY '&i'  NULLS FIRST, x'2c' DESC  NULLS LAST, 0.2551021314898203 ASC, CAST(t1.c0 AS TEXT) LIMIT 0 INTERSECT SELECT ALL MIN(t1.c2) FROM vt0, v0 CROSS JOIN t1 ON ((((t1.c2)-(vt0.c1)))<=(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))) WHERE ((UNLIKELY(v0.c1) IN (((t1.c2) IS TRUE)))) ORDER BY '&i'  NULLS FIRST, x'2c' DESC  NULLS LAST, 0.2551021314898203 ASC, CAST(t1.c0 AS TEXT) LIMIT 0X0;
SELECT * FROM v0 WHERE (((((v0.c0)OR(v0.c2))) NOT BETWEEN (NULL) AND (((v0.c0)&(v0.c2))))) ORDER BY ')X+YT1&+臥'  NULLS FIRST, json(((v0.c1)IS NOT(v0.c2))) DESC  NULLS LAST, (((v0.c2 IN ()))IS NOT(((((((((((v0.c0)OR(v0.c2)))AND(v0.c2)))AND(v0.c1)))OR(v0.c0)))AND(v0.c0)))) DESC;
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR(v0.c2))) NOT BETWEEN (NULL) AND (((v0.c0)&(v0.c2))))) ORDER BY TRIM(DISTINCT CASE NULL  WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END, v0.c2 COLLATE RTRIM) ASC  NULLS LAST, (((((((v0.c1 IN ()))AND(x'7f')))AND(337239948)))AND(((NULL)/(v0.c2))))  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c0)OR(v0.c2))) NOT BETWEEN (NULL) AND (((v0.c0)&(v0.c2))))) ORDER BY ')X+YT1&+臥'  NULLS FIRST, json(((v0.c1)IS NOT(v0.c2))) DESC  NULLS LAST, (((v0.c2 IN ()))IS NOT(((((((((((v0.c0)OR(v0.c2)))AND(v0.c2)))AND(v0.c1)))OR(v0.c0)))AND(v0.c0)))) DESC;
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR(v0.c2))) NOT BETWEEN (NULL) AND (((v0.c0)&(v0.c2))))) ORDER BY TRIM(DISTINCT CASE NULL  WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END, v0.c2 COLLATE RTRIM) ASC  NULLS LAST, (((((((v0.c1 IN ()))AND(x'7f')))AND(337239948)))AND(((NULL)/(v0.c2))))  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM vt0, t1 WHERE (CAST(t1.c2 AS TEXT)) ORDER BY ((0X3ffc4bd) NOTNULL) DESC, t1.c1;
SELECT DISTINCT MIN(t1.c1) FROM vt0, t1 WHERE (CAST(t1.c2 AS TEXT)) ORDER BY ((67093693) NOTNULL) DESC, t1.c1;
SELECT ALL * FROM v0, t1 INNER JOIN vt0 ON ((LOWER(DISTINCT t1.c2)) ISNULL) WHERE (((((t1.c0) BETWEEN (v0.c0) AND (v0.c1))) BETWEEN (((v0.c2) BETWEEN (v0.c2) AND (vt0.c1))) AND (highlight(v0.c0, v0.c1, v0.c2, t1.c0))));
SELECT * FROM v0, t1 INNER JOIN vt0 ON ((LOWER(DISTINCT t1.c2)) ISNULL) WHERE (((((((t1.c0) BETWEEN (v0.c0) AND (v0.c1))) BETWEEN (((v0.c2) BETWEEN (v0.c2) AND (vt0.c1))) AND (highlight(v0.c0, v0.c1, v0.c2, t1.c0))))AND((t1.c2 COLLATE NOCASE IN ())))) LIMIT 0x3 INTERSECT SELECT ALL * FROM v0, t1 INNER JOIN vt0 ON ((LOWER(DISTINCT t1.c2)) ISNULL) WHERE ('') LIMIT 3;
SELECT ALL * FROM v0, t1 INNER JOIN vt0 ON ((LOWER(DISTINCT t1.c2)) ISNULL) WHERE (((((t1.c0) BETWEEN (v0.c0) AND (v0.c1))) BETWEEN (((v0.c2) BETWEEN (v0.c2) AND (vt0.c1))) AND (highlight(v0.c0, v0.c1, v0.c2, t1.c0))));
SELECT * FROM v0, t1 INNER JOIN vt0 ON ((LOWER(DISTINCT t1.c2)) ISNULL) WHERE (((((((t1.c0) BETWEEN (v0.c0) AND (v0.c1))) BETWEEN (((v0.c2) BETWEEN (v0.c2) AND (vt0.c1))) AND (highlight(v0.c0, v0.c1, v0.c2, t1.c0))))AND((t1.c2 COLLATE NOCASE IN ())))) LIMIT 0x3 INTERSECT SELECT ALL * FROM v0, t1 INNER JOIN vt0 ON ((LOWER(DISTINCT t1.c2)) ISNULL) WHERE ('') LIMIT 3;
SELECT MIN(vt0.c0) FROM vt0, v0 NOT INDEXED WHERE (vt0.c0) ORDER BY ((((v0.c0) ISNULL)) NOTNULL) ASC;
SELECT ALL MIN(vt0.c0) FROM vt0, v0 WHERE (vt0.c0) ORDER BY ((((-1094150099)AND(((vt0.c0)%(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c1)))) DESC;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (((+ (t1.c1)) IN (CAST(t1.c2 AS BLOB)))) ORDER BY (((((((((~ (t1.c2)))AND((- (t1.c1)))))AND(x'c4')))AND(COALESCE(DISTINCT t1.c1, t1.c0, t1.c2))))OR(((t1.c2) NOT NULL)))  NULLS FIRST, ((((0Xffffffff9f4e2166)*(t1.c1))) NOT NULL) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((+ (t1.c1)) IN (CAST(t1.c2 AS BLOB)))) ORDER BY ((t1.c1 COLLATE BINARY) BETWEEN (CASE t1.c2  WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c2 WHEN 0xffffffff88ab8342 THEN t1.c1 ELSE t1.c2 END) AND (((t1.c2) ISNULL))) LIMIT 0X1;
SELECT MIN(t1.c1) FROM t1, v0, vt0 NOT INDEXED WHERE (((v0.c0 IN (vt0.c1, v0.c1)) IN (CAST(vt0.c0 AS BLOB), ((NULL) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT ALL MIN(t1.c1) FROM t1, v0, vt0 WHERE (((v0.c0 IN (vt0.c1)) IN (CAST(vt0.c0 AS BLOB))));
SELECT * FROM v0, t1, vt0 WHERE (((((((((((t1.c1)AND(v0.c1)))OR(t1.c0)))OR(NULL)))OR(v0.c1))) BETWEEN ((((v0.c0))<=((t1.c2)))) AND (UNLIKELY(vt0.c0))));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((((((((t1.c1)AND(v0.c1)))OR(t1.c0)))OR(NULL)))OR(v0.c1))) BETWEEN ((((v0.c0))<=((t1.c2)))) AND (UNLIKELY(vt0.c0)))) INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE (CAST(((((((((((((t1.c2)OR(v0.c1)))AND(vt0.c1)))OR(t1.c0)))OR(t1.c2)))AND(t1.c2)))OR(vt0.c0)) AS BLOB));
SELECT * FROM v0, t1, vt0 WHERE (((((((((((t1.c1)AND(v0.c1)))OR(t1.c0)))OR(NULL)))OR(v0.c1))) BETWEEN ((((v0.c0))<=((t1.c2)))) AND (UNLIKELY(vt0.c0))));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((((((((t1.c1)AND(v0.c1)))OR(t1.c0)))OR(NULL)))OR(v0.c1))) BETWEEN ((((v0.c0))<=((t1.c2)))) AND (UNLIKELY(vt0.c0)))) INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE (CAST(((((((((((((t1.c2)OR(v0.c1)))AND(vt0.c1)))OR(t1.c0)))OR(t1.c2)))AND(t1.c2)))OR(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (((((t1.c2)*(v0.c2)))<<(((vt0.c1) BETWEEN (NULL) AND (vt0.c1))))) ORDER BY ((((x'')LIKE(t1.c2))) BETWEEN (v0.c0 COLLATE BINARY) AND ((t1.c1 IN (v0.c1, t1.c2)))) ASC, CAST(((v0.c1)%(v0.c1)) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0, v0 WHERE (((((((t1.c2)*(v0.c2)))<<(((vt0.c1) BETWEEN (NULL) AND (vt0.c1)))))AND(t1.c2))) ORDER BY LAST_INSERT_ROWID() ASC, CAST(CAST(t1.c1 AS NUMERIC) AS INTEGER)  NULLS LAST INTERSECT SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (CASE WHEN (((v0.c2, t1.c0, v0.c1))<((v0.c2, vt0.c1, t1.c1))) THEN (7.24060006E8 IN ()) END) ORDER BY LAST_INSERT_ROWID() ASC, CAST(CAST(t1.c1 AS NUMERIC) AS INTEGER)  NULLS LAST;
SELECT * FROM v0, t1 CROSS JOIN vt0 ON (NOT (((vt0.c0) ISNULL))) WHERE (TIME((vt0.c1 IN (vt0.c0, v0.c1)), 0.5417283165562568, ((((((((t1.c1)AND(x'')))OR(0.7375326450272248)))OR('1785187513')))AND(t1.c0)), CASE v0.c1  WHEN t1.c2 THEN t1.c2 WHEN v0.c2 THEN 529976559 WHEN v0.c1 THEN t1.c2 END));
SELECT DISTINCT * FROM v0, t1 NOT INDEXED CROSS JOIN vt0 ON (NOT (((vt0.c0) ISNULL))) WHERE (TIME((vt0.c1 IN (vt0.c0)), 0.5417283165562568, ((((((((t1.c1)AND(x'')))OR(0.7375326450272248)))OR('1785187513')))AND(t1.c0)), CASE v0.c1  WHEN t1.c2 THEN t1.c2 WHEN v0.c2 THEN 0x1f96ccef WHEN v0.c1 THEN t1.c2 END)) LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0, t1 CROSS JOIN vt0 ON (NOT (((vt0.c0) ISNULL))) WHERE (MIN((+ (v0.c0)), t1.c2, t1.c0, ((t1.c0)IS(v0.c1)))) LIMIT 0X1;
SELECT * FROM v0, t1 CROSS JOIN vt0 ON (NOT (((vt0.c0) ISNULL))) WHERE (TIME((vt0.c1 IN (vt0.c0, v0.c1)), 0.5417283165562568, ((((((((t1.c1)AND(x'')))OR(0.7375326450272248)))OR('1785187513')))AND(t1.c0)), CASE v0.c1  WHEN t1.c2 THEN t1.c2 WHEN v0.c2 THEN 529976559 WHEN v0.c1 THEN t1.c2 END));
SELECT DISTINCT * FROM v0, t1 NOT INDEXED CROSS JOIN vt0 ON (NOT (((vt0.c0) ISNULL))) WHERE (TIME((vt0.c1 IN (vt0.c0)), 0.5417283165562568, ((((((((t1.c1)AND(x'')))OR(0.7375326450272248)))OR('1785187513')))AND(t1.c0)), CASE v0.c1  WHEN t1.c2 THEN t1.c2 WHEN v0.c2 THEN 0x1f96ccef WHEN v0.c1 THEN t1.c2 END)) LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0, t1 CROSS JOIN vt0 ON (NOT (((vt0.c0) ISNULL))) WHERE (MIN((+ (v0.c0)), t1.c2, t1.c0, ((t1.c0)IS(v0.c1)))) LIMIT 0X1;
SELECT MAX(v0.c2) FROM v0, vt0, t1 WHERE (((CAST(v0.c1 AS NUMERIC)) NOT BETWEEN (((v0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND ((v0.c2 IN (v0.c2))))) ORDER BY 0Xffffffffe36d01f1 DESC  NULLS FIRST, CAST((- (vt0.c0)) AS BLOB)  NULLS FIRST, ((((t1.c0, t1.c2, t1.c2)) NOT BETWEEN ((v0.c0, v0.c0, t1.c2)) AND ((0x3e95f042, v0.c2, vt0.c1))) IN (((v0.c0) NOTNULL)));
SELECT DISTINCT MAX(v0.c2) FROM v0, vt0, t1 WHERE (((((CAST(v0.c1 AS NUMERIC)) NOT BETWEEN (((v0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND ((v0.c2 IN (v0.c2)))))AND(CASE v0.c2 COLLATE BINARY  WHEN v0.c2 COLLATE NOCASE THEN ((((((((((v0.c2)OR(v0.c1)))AND(vt0.c1)))AND(v0.c2)))OR(v0.c2)))AND(v0.c2)) ELSE ((((((vt0.c0)AND(t1.c0)))AND(vt0.c0)))AND(vt0.c1)) END))) ORDER BY CASE (t1.c1 IN (t1.c1))  WHEN t1.c1 THEN ((vt0.c0)AND(vt0.c0)) END;
SELECT MIN(v0.c2) FROM vt0, t1, v0 WHERE (LTRIM(((vt0.c1) ISNULL), ((t1.c1)>(t1.c0))));
SELECT DISTINCT MIN(v0.c2) FROM vt0, t1, v0 WHERE (((LTRIM(((vt0.c1) ISNULL), ((t1.c1)>(t1.c0))))AND(((v0.c2)||(((('.[v')) NOT BETWEEN ((t1.c1)) AND ((v0.c0)))))))) ORDER BY ((CAST('S1' AS REAL)) ISNULL), ((SQLITE_SOURCE_ID())LIKE(CASE WHEN vt0.c0 THEN t1.c1 WHEN v0.c0 THEN 0.23928981689389694 WHEN t1.c1 THEN vt0.c0 ELSE t1.c0 END))  NULLS LAST, ((x'd5ae' IN (v0.c1)) IN (t1.c2, ((t1.c0)>=(v0.c2))));
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((((((- (v0.c2)))AND(((t1.c2) NOT NULL))))AND((v0.c1 IN (v0.c1, t1.c1))))) ORDER BY (((((((((((v0.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(-8.41927177E8)))OR(v0.c2)) IN ()) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM v0 NOT INDEXED, t1 WHERE ((((((((- (v0.c2)))AND(((t1.c2) NOT NULL))))AND((v0.c1 IN (v0.c1, t1.c1)))))AND(LOWER(json_valid(t1.c1))))) ORDER BY ((t1.c2 COLLATE NOCASE) NOT BETWEEN ((- (v0.c0))) AND (CAST(t1.c2 AS TEXT))) DESC LIMIT 3;
SELECT * FROM t1 WHERE ((t1.c1 IN (t1.c1, t1.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM t1 WHERE ((((t1.c1 IN (t1.c1, t1.c0)) COLLATE BINARY COLLATE NOCASE)AND((NOT (CASE WHEN '-2056527865' THEN t1.c2 WHEN t1.c1 THEN t1.c2 END))))) ORDER BY (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 END IN ((('^p')>>(t1.c0))))  NULLS LAST, (((t1.c1 IN ()))>(((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c1))))  NULLS FIRST;
SELECT * FROM t1 WHERE ((t1.c1 IN (t1.c1, t1.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM t1 WHERE ((((t1.c1 IN (t1.c1, t1.c0)) COLLATE BINARY COLLATE NOCASE)AND((NOT (CASE WHEN '-2056527865' THEN t1.c2 WHEN t1.c1 THEN t1.c2 END))))) ORDER BY (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t1.c0 END IN ((('^p')>>(t1.c0))))  NULLS LAST, (((t1.c1 IN ()))>(((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c1))))  NULLS FIRST;
SELECT * FROM t1, vt0, v0 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END)*(((t1.c2)IS(v0.c2)))));
SELECT ALL * FROM t1, vt0, v0 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END)*(((t1.c2)IS(v0.c2)))))AND(((((((((((((v0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))AND(vt0.c1)))OR(CHAR(t1.c0, vt0.c0))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c1)))))))) LIMIT 0X4 INTERSECT SELECT * FROM t1, vt0, v0 WHERE (((((v0.c1 IN (t1.c0)), ((v0.c2) IS FALSE)))>((((t1.c0)!=(vt0.c0)), (((vt0.c1))>((vt0.c1))))))) LIMIT 4;
SELECT * FROM t1, vt0, v0 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END)*(((t1.c2)IS(v0.c2)))));
SELECT ALL * FROM t1, vt0, v0 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END)*(((t1.c2)IS(v0.c2)))))AND(((((((((((((v0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))AND(vt0.c1)))OR(CHAR(t1.c0, vt0.c0))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c1)))))))) LIMIT 0X4 INTERSECT SELECT * FROM t1, vt0, v0 WHERE (((((v0.c1 IN (t1.c0)), ((v0.c2) IS FALSE)))>((((t1.c0)!=(vt0.c0)), (((vt0.c1))>((vt0.c1))))))) LIMIT 4;
SELECT ALL * FROM v0, t1 WHERE (((x'e2f9ab')/(t1.c0)) COLLATE RTRIM) ORDER BY CASE 0.7835110236213113  WHEN (- (v0.c2)) THEN CASE WHEN t1.c2 THEN v0.c2 END END;
SELECT ALL * FROM v0, t1 WHERE (((((x'e2f9ab')/(t1.c0)) COLLATE RTRIM)AND(v0.c0))) ORDER BY CASE 0.7835110236213113  WHEN (- (v0.c2)) THEN CASE WHEN t1.c2 THEN v0.c2 END END LIMIT 0x2;
SELECT ALL * FROM v0, t1 WHERE (((x'e2f9ab')/(t1.c0)) COLLATE RTRIM) ORDER BY CASE 0.7835110236213113  WHEN (- (v0.c2)) THEN CASE WHEN t1.c2 THEN v0.c2 END END;
SELECT ALL * FROM v0, t1 WHERE (((((x'e2f9ab')/(t1.c0)) COLLATE RTRIM)AND(v0.c0))) ORDER BY CASE 0.7835110236213113  WHEN (- (v0.c2)) THEN CASE WHEN t1.c2 THEN v0.c2 END END LIMIT 0x2;
SELECT * FROM vt0 WHERE ((NOT (((((((((vt0.c0)OR('')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE ((((NOT (((((((((vt0.c0)OR('')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))))AND((CAST(vt0.c0 AS BLOB) IN ())))) ORDER BY ((vt0.c1)<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, 'X' INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) BETWEEN ('448253079') AND (((vt0.c0)IS(vt0.c1))))) ORDER BY ((vt0.c1)<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, 'X';
SELECT * FROM vt0 WHERE ((NOT (((((((((vt0.c0)OR('')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE ((((NOT (((((((((vt0.c0)OR('')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))))AND((CAST(vt0.c0 AS BLOB) IN ())))) ORDER BY ((vt0.c1)<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, 'X' INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) BETWEEN ('448253079') AND (((vt0.c0)IS(vt0.c1))))) ORDER BY ((vt0.c1)<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, 'X';
SELECT ALL * FROM vt0, t1 WHERE (((t1.c0)IS((t1.c0 IN (0.47098279722195047)))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((t1.c0)IS((t1.c0 IN (0.47098279722195047)))))AND((((vt0.c1)) NOT BETWEEN ((CAST(t1.c0 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)))))))) INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT ALL * FROM vt0, t1 WHERE (((t1.c0)IS((t1.c0 IN (0.47098279722195047)))));
SELECT DISTINCT * FROM vt0, t1 WHERE (((((t1.c0)IS((t1.c0 IN (0.47098279722195047)))))AND((((vt0.c1)) NOT BETWEEN ((CAST(t1.c0 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)))))))) INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT * FROM t1, vt0, v0 WHERE (v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY);
SELECT * FROM t1, vt0, v0 WHERE (v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY) ORDER BY IFNULL(x'' COLLATE NOCASE, CASE WHEN vt0.c1 THEN x'' WHEN t1.c1 THEN v0.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN x'' WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END) DESC, CASE CAST(t1.c2 AS REAL)  WHEN (v0.c0 IN ()) THEN CASE t1.c0  WHEN t1.c2 THEN vt0.c0 ELSE vt0.c0 END WHEN t1.c0 COLLATE BINARY THEN ((t1.c2)=(v0.c2)) ELSE -1.28168833E8 END  NULLS FIRST, (((t1.c2, vt0.c1, vt0.c0)) BETWEEN (('Q 䒂1xj ', CAST('1147263217' AS NUMERIC), CAST(t1.c1 AS NUMERIC))) AND ((v0.c1 COLLATE NOCASE, ((t1.c1)|(x'')), ((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))) INTERSECT SELECT * FROM t1, vt0, v0 WHERE (t1.c0) ORDER BY IFNULL(x'' COLLATE NOCASE, CASE WHEN vt0.c1 THEN x'' WHEN t1.c1 THEN v0.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN x'' WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END) DESC, CASE CAST(t1.c2 AS REAL)  WHEN (v0.c0 IN ()) THEN CASE t1.c0  WHEN t1.c2 THEN vt0.c0 ELSE vt0.c0 END WHEN t1.c0 COLLATE BINARY THEN ((t1.c2)=(v0.c2)) ELSE -1.28168833E8 END  NULLS FIRST, (((t1.c2, vt0.c1, vt0.c0)) BETWEEN (('Q 䒂1xj ', CAST('1147263217' AS NUMERIC), CAST(t1.c1 AS NUMERIC))) AND ((v0.c1 COLLATE NOCASE, ((t1.c1)|(x'')), ((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))));
SELECT * FROM t1, vt0, v0 WHERE (v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY);
SELECT * FROM t1, vt0, v0 WHERE (v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY) ORDER BY IFNULL(x'' COLLATE NOCASE, CASE WHEN vt0.c1 THEN x'' WHEN t1.c1 THEN v0.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN x'' WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END) DESC, CASE CAST(t1.c2 AS REAL)  WHEN (v0.c0 IN ()) THEN CASE t1.c0  WHEN t1.c2 THEN vt0.c0 ELSE vt0.c0 END WHEN t1.c0 COLLATE BINARY THEN ((t1.c2)=(v0.c2)) ELSE -1.28168833E8 END  NULLS FIRST, (((t1.c2, vt0.c1, vt0.c0)) BETWEEN (('Q 䒂1xj ', CAST('1147263217' AS NUMERIC), CAST(t1.c1 AS NUMERIC))) AND ((v0.c1 COLLATE NOCASE, ((t1.c1)|(x'')), ((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))) INTERSECT SELECT * FROM t1, vt0, v0 WHERE (t1.c0) ORDER BY IFNULL(x'' COLLATE NOCASE, CASE WHEN vt0.c1 THEN x'' WHEN t1.c1 THEN v0.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN x'' WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END) DESC, CASE CAST(t1.c2 AS REAL)  WHEN (v0.c0 IN ()) THEN CASE t1.c0  WHEN t1.c2 THEN vt0.c0 ELSE vt0.c0 END WHEN t1.c0 COLLATE BINARY THEN ((t1.c2)=(v0.c2)) ELSE -1.28168833E8 END  NULLS FIRST, (((t1.c2, vt0.c1, vt0.c0)) BETWEEN (('Q 䒂1xj ', CAST('1147263217' AS NUMERIC), CAST(t1.c1 AS NUMERIC))) AND ((v0.c1 COLLATE NOCASE, ((t1.c1)|(x'')), ((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))));
SELECT * FROM t1, vt0 WHERE ((((((t1.c2, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, NULL)) AND ((vt0.c1, t1.c1, t1.c2))))<=(((t1.c2) NOT BETWEEN (t1.c1) AND (vt0.c1)))));
SELECT * FROM t1, vt0 WHERE ((((((((t1.c2, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, NULL)) AND ((vt0.c1, t1.c1, t1.c2))))<=(((t1.c2) NOT BETWEEN (t1.c1) AND (vt0.c1)))))AND(((t1.c2)/(t1.c1)) COLLATE NOCASE))) LIMIT 0x0;
SELECT * FROM t1, vt0 WHERE ((((((t1.c2, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, NULL)) AND ((vt0.c1, t1.c1, t1.c2))))<=(((t1.c2) NOT BETWEEN (t1.c1) AND (vt0.c1)))));
SELECT * FROM t1, vt0 WHERE ((((((((t1.c2, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, NULL)) AND ((vt0.c1, t1.c1, t1.c2))))<=(((t1.c2) NOT BETWEEN (t1.c1) AND (vt0.c1)))))AND(((t1.c2)/(t1.c1)) COLLATE NOCASE))) LIMIT 0x0;
SELECT * FROM t1, v0, vt0 WHERE ((((vt0.c0 IN (0.9358669714065458))) BETWEEN ((- (t1.c1))) AND (CAST(t1.c2 AS TEXT)))) ORDER BY (x'c6' IN ((- (v0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t1, v0, vt0 WHERE ((((((vt0.c0 IN (0.9358669714065458))) BETWEEN ((- (t1.c1))) AND (CAST(t1.c2 AS TEXT))))AND(t1.c0))) ORDER BY (x'c6' IN ((- (v0.c0))))  NULLS LAST;
SELECT * FROM t1, v0, vt0 WHERE ((((vt0.c0 IN (0.9358669714065458))) BETWEEN ((- (t1.c1))) AND (CAST(t1.c2 AS TEXT)))) ORDER BY (x'c6' IN ((- (v0.c0))))  NULLS LAST;
SELECT DISTINCT * FROM t1, v0, vt0 WHERE ((((((vt0.c0 IN (0.9358669714065458))) BETWEEN ((- (t1.c1))) AND (CAST(t1.c2 AS TEXT))))AND(t1.c0))) ORDER BY (x'c6' IN ((- (v0.c0))))  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE ((((t1.c2, x'', '.Qa>r|f', vt0.c0, t1.c2)) NOT BETWEEN ((((t1.c1)*(t1.c0)), CAST(t1.c1 AS REAL), ABS(DISTINCT t1.c0), ((t1.c2)IS(NULL)), (vt0.c0 IN (t1.c0, t1.c1)))) AND ((t1.c0, t1.c2, (((t1.c2, t1.c1))>((vt0.c1, t1.c1))), ((t1.c2) IS FALSE), (- (vt0.c1))))));
SELECT ALL * FROM t1, vt0 WHERE ((((((t1.c2, x'', '.Qa>r|f', vt0.c0, t1.c2)) NOT BETWEEN ((((t1.c1)*(t1.c0)), CAST(t1.c1 AS REAL), ABS(DISTINCT t1.c0), ((t1.c2)IS(NULL)), (vt0.c0 IN (t1.c0, t1.c1)))) AND ((t1.c0, t1.c2, (((t1.c2, t1.c1))>=((vt0.c1, t1.c1))), ((t1.c2) IS FALSE), (- (vt0.c1))))))AND(((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c2 END)>(t1.c1 COLLATE NOCASE))))) ORDER BY (((((((('嘿CB?5>')OR(t1.c0)))OR(vt0.c1)))OR(1641886572)))LIKE(NULLIF(DISTINCT vt0.c0, vt0.c1))) ASC, t1.c1  NULLS LAST INTERSECT SELECT * FROM t1, vt0 WHERE ((- ((t1.c1 IN ())))) ORDER BY (((((((('嘿CB?5>')OR(t1.c0)))OR(vt0.c1)))OR(0x61dd336c)))LIKE(NULLIF(DISTINCT vt0.c0, vt0.c1))) ASC, t1.c1  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE ((((t1.c2, x'', '.Qa>r|f', vt0.c0, t1.c2)) NOT BETWEEN ((((t1.c1)*(t1.c0)), CAST(t1.c1 AS REAL), ABS(DISTINCT t1.c0), ((t1.c2)IS(NULL)), (vt0.c0 IN (t1.c0, t1.c1)))) AND ((t1.c0, t1.c2, (((t1.c2, t1.c1))>((vt0.c1, t1.c1))), ((t1.c2) IS FALSE), (- (vt0.c1))))));
SELECT ALL * FROM t1, vt0 WHERE ((((((t1.c2, x'', '.Qa>r|f', vt0.c0, t1.c2)) NOT BETWEEN ((((t1.c1)*(t1.c0)), CAST(t1.c1 AS REAL), ABS(DISTINCT t1.c0), ((t1.c2)IS(NULL)), (vt0.c0 IN (t1.c0, t1.c1)))) AND ((t1.c0, t1.c2, (((t1.c2, t1.c1))>=((vt0.c1, t1.c1))), ((t1.c2) IS FALSE), (- (vt0.c1))))))AND(((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c2 END)>(t1.c1 COLLATE NOCASE))))) ORDER BY (((((((('嘿CB?5>')OR(t1.c0)))OR(vt0.c1)))OR(1641886572)))LIKE(NULLIF(DISTINCT vt0.c0, vt0.c1))) ASC, t1.c1  NULLS LAST INTERSECT SELECT * FROM t1, vt0 WHERE ((- ((t1.c1 IN ())))) ORDER BY (((((((('嘿CB?5>')OR(t1.c0)))OR(vt0.c1)))OR(0x61dd336c)))LIKE(NULLIF(DISTINCT vt0.c0, vt0.c1))) ASC, t1.c1  NULLS LAST;
SELECT * FROM vt0, v0 LEFT OUTER JOIN t1 ON CASE ((t1.c2)!=(vt0.c0))  WHEN v0.c1 THEN CASE WHEN v0.c2 THEN t1.c2 ELSE v0.c1 END END WHERE (NULL COLLATE NOCASE) ORDER BY CAST(((((((v0.c0)OR(t1.c2)))OR(t1.c2)))OR(v0.c1)) AS NUMERIC)  NULLS FIRST, (((((vt0.c0)OR(vt0.c1)))AND('-1329581092')) IN ())  NULLS FIRST;
SELECT * FROM vt0, v0 LEFT OUTER JOIN t1 ON CASE ((t1.c2)<>(vt0.c0))  WHEN v0.c1 THEN CASE WHEN v0.c2 THEN t1.c2 ELSE v0.c1 END END WHERE (NULL COLLATE NOCASE) ORDER BY TRIM(CASE 'daxlR'  WHEN t1.c0 THEN v0.c1 ELSE t1.c2 END, vt0.c1 COLLATE RTRIM) ASC LIMIT 0x0 INTERSECT SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN t1 ON CASE ((t1.c2)!=(vt0.c0))  WHEN v0.c1 THEN CASE WHEN v0.c2 THEN t1.c2 ELSE v0.c1 END END WHERE (vt0.c1) ORDER BY TRIM(CASE 'daxlR'  WHEN t1.c0 THEN v0.c1 ELSE t1.c2 END, vt0.c1 COLLATE RTRIM) ASC LIMIT 0;
SELECT * FROM vt0, v0 LEFT OUTER JOIN t1 ON CASE ((t1.c2)!=(vt0.c0))  WHEN v0.c1 THEN CASE WHEN v0.c2 THEN t1.c2 ELSE v0.c1 END END WHERE (NULL COLLATE NOCASE) ORDER BY CAST(((((((v0.c0)OR(t1.c2)))OR(t1.c2)))OR(v0.c1)) AS NUMERIC)  NULLS FIRST, (((((vt0.c0)OR(vt0.c1)))AND('-1329581092')) IN ())  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END)OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))AND(LIKELY(t1.c0))))AND(x'1b')))AND(t1.c1 COLLATE BINARY)))OR(CASE WHEN t1.c0 THEN 0xffffffffb23dc153 WHEN t1.c0 THEN t1.c0 ELSE t1.c2 END))) ORDER BY ((t1.c0)>>((((t1.c0, t1.c1, t1.c2))<((t1.c0, t1.c0, t1.c0)))))  NULLS LAST;
SELECT * FROM t1 WHERE (((((((((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END)OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))AND(LIKELY(t1.c0))))AND(x'1b')))AND(t1.c1 COLLATE BINARY)))OR(CASE WHEN t1.c0 THEN -1304575661 WHEN t1.c0 THEN t1.c0 ELSE t1.c2 END))) ORDER BY ((t1.c0)>>((((t1.c0, t1.c1, t1.c2))<((t1.c0, t1.c0, t1.c0)))))  NULLS LAST LIMIT 0x1;
SELECT * FROM t1 WHERE (((((((((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END)OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))AND(LIKELY(t1.c0))))AND(x'1b')))AND(t1.c1 COLLATE BINARY)))OR(CASE WHEN t1.c0 THEN 0xffffffffb23dc153 WHEN t1.c0 THEN t1.c0 ELSE t1.c2 END))) ORDER BY ((t1.c0)>>((((t1.c0, t1.c1, t1.c2))<((t1.c0, t1.c0, t1.c0)))))  NULLS LAST;
SELECT * FROM t1 WHERE (((((((((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END)OR(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))))AND(LIKELY(t1.c0))))AND(x'1b')))AND(t1.c1 COLLATE BINARY)))OR(CASE WHEN t1.c0 THEN -1304575661 WHEN t1.c0 THEN t1.c0 ELSE t1.c2 END))) ORDER BY ((t1.c0)>>((((t1.c0, t1.c1, t1.c2))<((t1.c0, t1.c0, t1.c0)))))  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t1, v0 WHERE ((((v0.c2, t1.c0, t1.c0, t1.c2)) BETWEEN ((v0.c2 COLLATE BINARY, (+ (v0.c2)), ((v0.c2) NOT BETWEEN (t1.c1) AND ('n< G^gH')), v0.c1)) AND ((TRIM(v0.c2), ((v0.c0) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1) NOTNULL), t1.c2))));
SELECT ALL * FROM t1, v0 WHERE ((((v0.c2, t1.c0, t1.c0, t1.c2)) BETWEEN ((v0.c2 COLLATE BINARY, (+ (v0.c2)), ((v0.c2) NOT BETWEEN (t1.c1) AND ('n< G^gH')), v0.c1)) AND ((TRIM(v0.c2), ((v0.c0) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1) NOTNULL), t1.c2)))) ORDER BY ((v0.c0) NOT BETWEEN ((v0.c1 IN ())) AND ((('-1805692362') NOT BETWEEN (v0.c2) AND (v0.c1)))) ASC  NULLS FIRST, ((((((t1.c1)AND(v0.c1)))AND(v0.c2))) BETWEEN (((t1.c1) ISNULL)) AND (CASE v0.c0  WHEN t1.c1 THEN v0.c1 ELSE t1.c0 END)) DESC, ((((((((((CAST(t1.c1 AS INTEGER))OR((- (v0.c2)))))OR(CAST(v0.c0 AS NUMERIC))))OR((t1.c1 IN (4.30989384E8)))))OR(((((v0.c0)AND(t1.c2)))AND(t1.c2)))))OR(((v0.c2) BETWEEN (v0.c2) AND (t1.c0)))) ASC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t1, v0 WHERE ((((v0.c2, t1.c0, t1.c0, t1.c2)) BETWEEN ((v0.c2 COLLATE BINARY, (+ (v0.c2)), ((v0.c2) NOT BETWEEN (t1.c1) AND ('n< G^gH')), v0.c1)) AND ((TRIM(v0.c2), ((v0.c0) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1) NOTNULL), t1.c2))));
SELECT ALL * FROM t1, v0 WHERE ((((v0.c2, t1.c0, t1.c0, t1.c2)) BETWEEN ((v0.c2 COLLATE BINARY, (+ (v0.c2)), ((v0.c2) NOT BETWEEN (t1.c1) AND ('n< G^gH')), v0.c1)) AND ((TRIM(v0.c2), ((v0.c0) BETWEEN (t1.c0) AND (t1.c1)), ((t1.c1) NOTNULL), t1.c2)))) ORDER BY ((v0.c0) NOT BETWEEN ((v0.c1 IN ())) AND ((('-1805692362') NOT BETWEEN (v0.c2) AND (v0.c1)))) ASC  NULLS FIRST, ((((((t1.c1)AND(v0.c1)))AND(v0.c2))) BETWEEN (((t1.c1) ISNULL)) AND (CASE v0.c0  WHEN t1.c1 THEN v0.c1 ELSE t1.c0 END)) DESC, ((((((((((CAST(t1.c1 AS INTEGER))OR((- (v0.c2)))))OR(CAST(v0.c0 AS NUMERIC))))OR((t1.c1 IN (4.30989384E8)))))OR(((((v0.c0)AND(t1.c2)))AND(t1.c2)))))OR(((v0.c2) BETWEEN (v0.c2) AND (t1.c0)))) ASC  NULLS LAST LIMIT 2;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c1)))IS NOT((vt0.c0 IN (vt0.c0)))));
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0, vt0.c1)))IS NOT((vt0.c0 IN (vt0.c0)))))AND(1151830167))) INTERSECT SELECT ALL MIN(vt0.c0) FROM vt0 WHERE (x'7405a9');
SELECT ALL * FROM v0 WHERE (((((v0.c1)*(v0.c2)))>(((v0.c2)||(v0.c0)))));
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c1)*(v0.c2)))>(((v0.c2)||(v0.c0)))))AND(((v0.c0 COLLATE BINARY)=(((v0.c0) BETWEEN ('1382790579') AND (v0.c1))))))) ORDER BY CAST(((((((((((v0.c2)OR(v0.c1)))OR(v0.c2)))OR(v0.c0)))OR(v0.c2)))OR(v0.c1)) AS BLOB) DESC;
SELECT ALL * FROM v0 WHERE (((((v0.c1)*(v0.c2)))>(((v0.c2)||(v0.c0)))));
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c1)*(v0.c2)))>(((v0.c2)||(v0.c0)))))AND(((v0.c0 COLLATE BINARY)=(((v0.c0) BETWEEN ('1382790579') AND (v0.c1))))))) ORDER BY CAST(((((((((((v0.c2)OR(v0.c1)))OR(v0.c2)))OR(v0.c0)))OR(v0.c2)))OR(v0.c1)) AS BLOB) DESC;
SELECT ALL * FROM vt0 WHERE (IFNULL(TYPEOF(DISTINCT vt0.c0), ((vt0.c0) IS FALSE))) ORDER BY CAST(COALESCE(vt0.c1, vt0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((IFNULL(TYPEOF(DISTINCT vt0.c0), ((vt0.c0) IS FALSE)))AND(NULL))) ORDER BY ((((((((vt0.c0) NOTNULL))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND((NULL IN (vt0.c1)))))OR(vt0.c0)) DESC  NULLS FIRST, ((((((vt0.c0) NOT NULL))AND(MAX(vt0.c1, vt0.c1, -55907380, vt0.c0))))AND((vt0.c0 IN (vt0.c0)))) DESC LIMIT 0X1;
SELECT ALL * FROM vt0 WHERE (IFNULL(TYPEOF(DISTINCT vt0.c0), ((vt0.c0) IS FALSE))) ORDER BY CAST(COALESCE(vt0.c1, vt0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((IFNULL(TYPEOF(DISTINCT vt0.c0), ((vt0.c0) IS FALSE)))AND(NULL))) ORDER BY ((((((((vt0.c0) NOTNULL))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND((NULL IN (vt0.c1)))))OR(vt0.c0)) DESC  NULLS FIRST, ((((((vt0.c0) NOT NULL))AND(MAX(vt0.c1, vt0.c1, -55907380, vt0.c0))))AND((vt0.c0 IN (vt0.c0)))) DESC LIMIT 0X1;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE BINARY)<<((v0.c0 IN (v0.c0))))) ORDER BY (((((v0.c0)|(v0.c1)), ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)), (+ (v0.c2))))<=((((x'ef') NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c1, v0.c1))=((v0.c0, v0.c2))), v0.c2))), (((v0.c0 IN (NULL, v0.c2))) NOT BETWEEN (((((NULL)OR(v0.c2)))OR(v0.c0))) AND (CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END)) ASC  NULLS LAST;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0 COLLATE BINARY)<<((v0.c0 IN (v0.c0))))) ORDER BY (((((v0.c0)|(v0.c1)), ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)), (+ (v0.c2))))<=((((x'ef') NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c1, v0.c1))=((v0.c0, v0.c2))), v0.c2))), (((v0.c0 IN (NULL, v0.c2))) NOT BETWEEN (((((NULL)OR(v0.c2)))OR(v0.c0))) AND (CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END)) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE BINARY)<<((v0.c0 IN (v0.c0))))) ORDER BY (((((v0.c0)|(v0.c1)), ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)), (+ (v0.c2))))<=((((x'ef') NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c1, v0.c1))=((v0.c0, v0.c2))), v0.c2))), (((v0.c0 IN (NULL, v0.c2))) NOT BETWEEN (((((NULL)OR(v0.c2)))OR(v0.c0))) AND (CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END)) ASC  NULLS LAST;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0 COLLATE BINARY)<<((v0.c0 IN (v0.c0))))) ORDER BY (((((v0.c0)|(v0.c1)), ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)), (+ (v0.c2))))<=((((x'ef') NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c1, v0.c1))=((v0.c0, v0.c2))), v0.c2))), (((v0.c0 IN (NULL, v0.c2))) NOT BETWEEN (((((NULL)OR(v0.c2)))OR(v0.c0))) AND (CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END)) ASC  NULLS LAST LIMIT 0x0;
SELECT MAX(v0.c0) FROM t1, v0 NATURAL JOIN vt0 WHERE (CAST(((t1.c2)!=(vt0.c0)) AS BLOB)) ORDER BY v0.c0;
SELECT MAX(v0.c0) FROM t1, v0 NATURAL JOIN vt0 WHERE (((CAST(((t1.c2)>(vt0.c0)) AS BLOB))AND(v0.c0))) ORDER BY CASE WHEN ((vt0.c0) NOT NULL) THEN ((((((((t1.c0)OR(t1.c2)))OR(vt0.c1)))AND(t1.c0)))AND(vt0.c1)) WHEN (~ (v0.c0)) THEN CAST(t1.c2 AS INTEGER) WHEN (- (v0.c0)) THEN CASE t1.c2  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN v0.c1 ELSE vt0.c0 END WHEN ((((((((vt0.c0)OR(v0.c1)))OR(v0.c2)))OR(t1.c1)))OR(v0.c1)) THEN (vt0.c1 IN ()) END ASC  NULLS FIRST, LIKELIHOOD(t1.c0, NULL) COLLATE NOCASE  NULLS FIRST LIMIT 0x3 INTERSECT SELECT ALL MAX(v0.c0) FROM t1, v0 NATURAL JOIN vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((v0.c2)*(v0.c1)) WHEN t1.c0 THEN CAST(t1.c1 AS NUMERIC) WHEN CAST(vt0.c1 AS REAL) THEN (x'a913' IN (v0.c1, vt0.c1)) ELSE ((v0.c1)&(t1.c2)) END) ORDER BY CASE WHEN ((vt0.c0) NOT NULL) THEN ((((((((t1.c0)OR(t1.c2)))OR(vt0.c1)))AND(t1.c0)))AND(vt0.c1)) WHEN (~ (v0.c0)) THEN CAST(t1.c2 AS INTEGER) WHEN (- (v0.c0)) THEN CASE t1.c2  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN v0.c1 ELSE vt0.c0 END WHEN ((((((((vt0.c0)OR(v0.c1)))OR(v0.c2)))OR(t1.c1)))OR(v0.c1)) THEN (vt0.c1 IN ()) END ASC  NULLS FIRST, LIKELIHOOD(t1.c0, NULL) COLLATE NOCASE  NULLS FIRST LIMIT 0x3;
SELECT ALL * FROM vt0, t1, v0 WHERE ((t1.c1 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt0, t1, v0 WHERE ((t1.c1 COLLATE RTRIM IN ())) ORDER BY CASE WHEN ((((v0.c2)OR(vt0.c0)))AND(t1.c2)) THEN v0.c1 COLLATE NOCASE ELSE CASE v0.c2  WHEN v0.c1 THEN v0.c1 ELSE t1.c2 END END DESC, LIKELY(DISTINCT v0.c0) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1, v0 WHERE ((t1.c1 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt0, t1, v0 WHERE ((t1.c1 COLLATE RTRIM IN ())) ORDER BY CASE WHEN ((((v0.c2)OR(vt0.c0)))AND(t1.c2)) THEN v0.c1 COLLATE NOCASE ELSE CASE v0.c2  WHEN v0.c1 THEN v0.c1 ELSE t1.c2 END END DESC, LIKELY(DISTINCT v0.c0) DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 INNER JOIN t1 ON ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN t1.c0 THEN vt0.c0 ELSE v0.c2 END) BETWEEN (((t1.c2) ISNULL)) AND (v0.c1 COLLATE RTRIM)) WHERE (CAST(((t1.c0)IS NOT(t1.c1)) AS BLOB)) ORDER BY ((((((((t1.c0)OR(v0.c1)))OR(t1.c1)))OR(vt0.c1)))<=(NULL)) ASC  NULLS FIRST, x'60' ASC;
SELECT * FROM v0, vt0 INNER JOIN t1 ON ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN t1.c0 THEN vt0.c0 ELSE v0.c2 END) BETWEEN (((t1.c2) ISNULL)) AND (v0.c1 COLLATE RTRIM)) WHERE (((CAST(((t1.c0)IS NOT(t1.c1)) AS BLOB))AND(CAST(((((((v0.c1)AND(t1.c1)))OR(vt0.c1)))AND(t1.c1)) AS REAL)))) ORDER BY (NOT (t1.c2)) INTERSECT SELECT ALL * FROM v0, vt0 INNER JOIN t1 ON ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN t1.c0 THEN vt0.c0 ELSE v0.c2 END) BETWEEN (((t1.c2) ISNULL)) AND (v0.c1 COLLATE RTRIM)) WHERE (v0.c2) ORDER BY (NOT (t1.c2));
SELECT ALL * FROM v0, vt0 INNER JOIN t1 ON ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN t1.c0 THEN vt0.c0 ELSE v0.c2 END) BETWEEN (((t1.c2) ISNULL)) AND (v0.c1 COLLATE RTRIM)) WHERE (CAST(((t1.c0)IS NOT(t1.c1)) AS BLOB)) ORDER BY ((((((((t1.c0)OR(v0.c1)))OR(t1.c1)))OR(vt0.c1)))<=(NULL)) ASC  NULLS FIRST, x'60' ASC;
SELECT * FROM v0, vt0 INNER JOIN t1 ON ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN t1.c0 THEN vt0.c0 ELSE v0.c2 END) BETWEEN (((t1.c2) ISNULL)) AND (v0.c1 COLLATE RTRIM)) WHERE (((CAST(((t1.c0)IS NOT(t1.c1)) AS BLOB))AND(CAST(((((((v0.c1)AND(t1.c1)))OR(vt0.c1)))AND(t1.c1)) AS REAL)))) ORDER BY (NOT (t1.c2)) INTERSECT SELECT ALL * FROM v0, vt0 INNER JOIN t1 ON ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN t1.c0 THEN vt0.c0 ELSE v0.c2 END) BETWEEN (((t1.c2) ISNULL)) AND (v0.c1 COLLATE RTRIM)) WHERE (v0.c2) ORDER BY (NOT (t1.c2));
SELECT * FROM vt0, t1 INNER JOIN v0 ON '1803558881' WHERE (t1.c1) ORDER BY NULL  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 INNER JOIN v0 ON '1803558881' WHERE (t1.c1) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(t1.c0)))OR('278089108')), (~ (((v0.c1)<(vt0.c1)))) ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0, t1 INNER JOIN v0 ON '1803558881' WHERE ((~ (((vt0.c1) IS TRUE)))) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(t1.c0)))OR('278089108')), (~ (((v0.c1)<(vt0.c1)))) ASC LIMIT 1;
SELECT * FROM vt0, t1 INNER JOIN v0 ON '1803558881' WHERE (t1.c1) ORDER BY NULL  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1 INNER JOIN v0 ON '1803558881' WHERE (t1.c1) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(t1.c0)))OR('278089108')), (~ (((v0.c1)<(vt0.c1)))) ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0, t1 INNER JOIN v0 ON '1803558881' WHERE ((~ (((vt0.c1) IS TRUE)))) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(t1.c0)))OR('278089108')), (~ (((v0.c1)<(vt0.c1)))) ASC LIMIT 1;
SELECT ALL * FROM t1, v0, vt0 WHERE (((NULLIF(t1.c2, vt0.c1))OR(((t1.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST(CASE t1.c0  WHEN t1.c1 THEN v0.c1 END AS NUMERIC), ((IFNULL(DISTINCT v0.c2, v0.c2))>>((t1.c2 IN (t1.c0, v0.c2)))) ASC;
SELECT ALL * FROM t1, v0, vt0 WHERE (((((NULLIF(t1.c2, vt0.c1))OR(((t1.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(CASE WHEN ((t1.c0)/(v0.c1)) THEN vt0.c0 COLLATE NOCASE WHEN ((((((((t1.c2)OR(t1.c0)))AND(v0.c1)))AND(vt0.c0)))AND(0.13396964930230748)) THEN vt0.c0 COLLATE NOCASE END))) ORDER BY ((((v0.c2) NOTNULL)) IS FALSE) ASC, (((+ (vt0.c0)))*(((v0.c1) BETWEEN (vt0.c1) AND ('H|N	B')))) ASC  NULLS LAST;
SELECT ALL * FROM t1, v0, vt0 WHERE (((NULLIF(t1.c2, vt0.c1))OR(((t1.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST(CASE t1.c0  WHEN t1.c1 THEN v0.c1 END AS NUMERIC), ((IFNULL(DISTINCT v0.c2, v0.c2))>>((t1.c2 IN (t1.c0, v0.c2)))) ASC;
SELECT ALL * FROM t1, v0, vt0 WHERE (((((NULLIF(t1.c2, vt0.c1))OR(((t1.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(CASE WHEN ((t1.c0)/(v0.c1)) THEN vt0.c0 COLLATE NOCASE WHEN ((((((((t1.c2)OR(t1.c0)))AND(v0.c1)))AND(vt0.c0)))AND(0.13396964930230748)) THEN vt0.c0 COLLATE NOCASE END))) ORDER BY ((((v0.c2) NOTNULL)) IS FALSE) ASC, (((+ (vt0.c0)))*(((v0.c1) BETWEEN (vt0.c1) AND ('H|N	B')))) ASC  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1, vt0 LEFT OUTER JOIN v0 ON ((((0.05715855482887422) BETWEEN (vt0.c0) AND (v0.c2)))|(0.7542045120325254)) WHERE (((((((CASE WHEN vt0.c0 THEN t1.c2 WHEN v0.c2 THEN v0.c0 END)AND(v0.c0)))AND(((v0.c1) BETWEEN (t1.c1) AND (v0.c1)))))OR(MAX(v0.c2, t1.c2)))) ORDER BY NULLIF(DISTINCT ((((((vt0.c0)OR(t1.c2)))OR(t1.c2)))AND(v0.c0)), (+ (t1.c2))) DESC;
SELECT MIN(t1.c0) FROM t1, vt0 LEFT OUTER JOIN v0 ON ((((0.05715855482887422) BETWEEN (vt0.c0) AND (v0.c2)))|(0.7542045120325254)) WHERE (((((((((CASE WHEN vt0.c0 THEN t1.c2 WHEN v0.c2 THEN v0.c0 END)AND(v0.c0)))AND(((v0.c1) BETWEEN (t1.c1) AND (v0.c1)))))OR(MAX(v0.c2, t1.c2))))AND(((((((((((((((vt0.c0)AND(v0.c2)))AND(t1.c2)))OR(t1.c2)))AND(t1.c1)))AND(v0.c0)))AND(vt0.c1)))OR(t1.c1 COLLATE NOCASE))))) ORDER BY NULLIF(DISTINCT ((((((vt0.c0)OR(t1.c2)))OR(t1.c2)))AND(v0.c0)), (+ (t1.c2))) DESC LIMIT 3;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c1)AND(((((0.4491247607383916)>=(t1.c2)))GLOB(UPPER(4.72236244E8)))))) LIMIT 0x2 INTERSECT SELECT COUNT(*) FROM t1 WHERE (((((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(t1.c1)))-(((t1.c2)<<(t1.c2))))) LIMIT 2;
SELECT ALL MAX(t1.c1) FROM vt0, v0, t1 WHERE (vt0.c0);
SELECT ALL MAX(t1.c1) FROM vt0, v0, t1 WHERE (((vt0.c0)AND(((((CAST(v0.c1 AS INTEGER))AND((v0.c0 IN (t1.c2, x'')))))AND(UPPER(DISTINCT v0.c1)))))) ORDER BY '1583745339' ASC, (((((vt0.c0)) BETWEEN ((NULL)) AND ((v0.c2))))>(NULL)) LIMIT 2 INTERSECT SELECT MAX(t1.c1) FROM vt0, v0, t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 WHEN v0.c1 THEN t1.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c1 THEN vt0.c0 ELSE t1.c2 END)AND(((NULL) ISNULL))))AND(CAST('1712382653' AS NUMERIC)))) ORDER BY '1583745339' ASC, (((((vt0.c0)) BETWEEN ((NULL)) AND ((v0.c2))))>(NULL)) LIMIT 2;
SELECT ALL * FROM v0, t1, vt0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (''))) NOT BETWEEN (((vt0.c0)<(t1.c2))) AND (((t1.c0)&('1744414291')))));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (''))) NOT BETWEEN (((vt0.c0)<(t1.c2))) AND (((t1.c0)&('1744414291'))))) ORDER BY vt0.c0 ASC, (((t1.c2) NOT BETWEEN (t1.c1) AND (v0.c1)) IN (CASE v0.c0  WHEN t1.c1 THEN t1.c2 ELSE t1.c1 END))  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE (NULL) ORDER BY vt0.c0 ASC, (((t1.c2) NOT BETWEEN (t1.c1) AND (v0.c1)) IN (CASE v0.c0  WHEN t1.c1 THEN t1.c2 ELSE t1.c1 END))  NULLS LAST;
SELECT ALL * FROM v0, t1, vt0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (''))) NOT BETWEEN (((vt0.c0)<(t1.c2))) AND (((t1.c0)&('1744414291')))));
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (''))) NOT BETWEEN (((vt0.c0)<(t1.c2))) AND (((t1.c0)&('1744414291'))))) ORDER BY vt0.c0 ASC, (((t1.c2) NOT BETWEEN (t1.c1) AND (v0.c1)) IN (CASE v0.c0  WHEN t1.c1 THEN t1.c2 ELSE t1.c1 END))  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE (NULL) ORDER BY vt0.c0 ASC, (((t1.c2) NOT BETWEEN (t1.c1) AND (v0.c1)) IN (CASE v0.c0  WHEN t1.c1 THEN t1.c2 ELSE t1.c1 END))  NULLS LAST;
SELECT MIN(vt0.c0) FROM vt0 WHERE ((+ ((((0.8339036144497413)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '_Jahk', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))) IN ());
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((+ ((((0.8339036144497413)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY LIMIT 0x2;
SELECT * FROM v0, t1, vt0 WHERE (t1.c2);
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((t1.c2)AND(CAST(LOWER(vt0.c1) AS REAL)))) ORDER BY (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))) DESC LIMIT 0x0;
SELECT * FROM v0, t1, vt0 WHERE (t1.c2);
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((t1.c2)AND(CAST(LOWER(vt0.c1) AS REAL)))) ORDER BY (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))) DESC LIMIT 0x0;
SELECT * FROM vt0 WHERE (((vt0.c1 IN (vt0.c1)) IN ())) ORDER BY ((((('S-2/7葮') ISNULL), (~ (vt0.c0)), vt0.c0, ((vt0.c1)!=(vt0.c1))))<((COALESCE(vt0.c1, vt0.c1, x'', vt0.c0, vt0.c1), vt0.c1, (vt0.c0 IN (vt0.c0)), '1092579787'))), (CAST(vt0.c1 AS BLOB) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c1 IN (vt0.c1)) IN ())) ORDER BY vt0.c1  NULLS LAST LIMIT 0;
SELECT * FROM vt0 WHERE (((vt0.c1 IN (vt0.c1)) IN ())) ORDER BY ((((('S-2/7葮') ISNULL), (~ (vt0.c0)), vt0.c0, ((vt0.c1)!=(vt0.c1))))<((COALESCE(vt0.c1, vt0.c1, x'', vt0.c0, vt0.c1), vt0.c1, (vt0.c0 IN (vt0.c0)), '1092579787'))), (CAST(vt0.c1 AS BLOB) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c1)/(v0.c2)) AS REAL)) ORDER BY ((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(v0.c1)))=(CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c2 END)) DESC;
SELECT COUNT(*) FROM v0 WHERE (((CAST(((v0.c1)/(v0.c2)) AS REAL))AND(((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END) NOT BETWEEN ((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (0.5093920250379461))))) ORDER BY ((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(v0.c1)))==(CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c2 END)) DESC;
SELECT ALL MIN(vt0.c0) FROM vt0 CROSS JOIN v0 ON ((((((vt0.c0)OR(((vt0.c0)>=(v0.c0)))))AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS REAL))) WHERE (((v0.c2)<<(v0.c2)) COLLATE RTRIM);
SELECT DISTINCT MIN(vt0.c0) FROM vt0 CROSS JOIN v0 ON ((((((vt0.c0)OR(((vt0.c0)>=(v0.c0)))))AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS REAL))) WHERE (((v0.c2)<<(v0.c2)) COLLATE RTRIM) LIMIT 0x1;
SELECT ALL MAX(v0.c2) FROM v0, vt0, t1 WHERE ((((((v0.c1)OR(t1.c2)))AND(v0.c0)) IN ()));
SELECT DISTINCT MAX(v0.c2) FROM v0, vt0, t1 WHERE ((((((v0.c1)OR(t1.c2)))AND(v0.c0)) IN ())) ORDER BY 0.4144091543423448 ASC  NULLS LAST, 0X5e2a2478 COLLATE RTRIM LIMIT 0x2 INTERSECT SELECT DISTINCT MAX(v0.c2) FROM v0, vt0, t1 WHERE (((((((v0.c0) NOT BETWEEN ('1832410938') AND (t1.c1)))OR(LIKELIHOOD(v0.c1, t1.c1))))OR(CAST(vt0.c0 AS TEXT)))) ORDER BY 0.4144091543423448 ASC  NULLS LAST, 0X5e2a2478 COLLATE RTRIM LIMIT 2;
SELECT ALL * FROM v0, vt0 WHERE (NULL) ORDER BY '' ASC  NULLS FIRST;
SELECT DISTINCT * FROM v0, vt0 WHERE (NULL) ORDER BY ((((v0.c2)<(vt0.c0)))GLOB(LIKELY(DISTINCT vt0.c0)))  NULLS LAST, vt0.c0 ASC  NULLS LAST, (NOT (v0.c2)) COLLATE RTRIM INTERSECT SELECT DISTINCT * FROM v0, vt0 WHERE ((((vt0.c1)>>(vt0.c0)) IN (CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((((v0.c2)<(vt0.c0)))GLOB(LIKELY(DISTINCT vt0.c0)))  NULLS LAST, vt0.c0 ASC  NULLS LAST, (NOT (v0.c2)) COLLATE RTRIM;
SELECT ALL * FROM v0, vt0 WHERE (NULL) ORDER BY '' ASC  NULLS FIRST;
SELECT DISTINCT * FROM v0, vt0 WHERE (NULL) ORDER BY ((((v0.c2)<(vt0.c0)))GLOB(LIKELY(DISTINCT vt0.c0)))  NULLS LAST, vt0.c0 ASC  NULLS LAST, (NOT (v0.c2)) COLLATE RTRIM INTERSECT SELECT DISTINCT * FROM v0, vt0 WHERE ((((vt0.c1)>>(vt0.c0)) IN (CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((((v0.c2)<(vt0.c0)))GLOB(LIKELY(DISTINCT vt0.c0)))  NULLS LAST, vt0.c0 ASC  NULLS LAST, (NOT (v0.c2)) COLLATE RTRIM;
SELECT * FROM v0 WHERE ((- (((((v0.c1)AND(v0.c1)))AND(v0.c2)))));
SELECT ALL * FROM v0 WHERE ((((- (((((v0.c1)AND(v0.c1)))AND(v0.c2)))))AND(((LTRIM(v0.c1, v0.c0)) IS FALSE)))) ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))-(v0.c0))  NULLS LAST, (((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))AND(0.26113510322151723)), ((v0.c2)<=(v0.c0)), (v0.c2 IN (v0.c0, v0.c1))))<=((NULL, ((((v0.c2)AND(v0.c2)))AND(v0.c0)), ((NULL)<(v0.c0)))))  NULLS FIRST, (NOT (v0.c0)) COLLATE RTRIM LIMIT 0x0 INTERSECT SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))-(v0.c0))  NULLS LAST, (((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))AND(0.26113510322151723)), ((v0.c2)<=(v0.c0)), (v0.c2 IN (v0.c0, v0.c1))))<=((NULL, ((((v0.c2)AND(v0.c2)))AND(v0.c0)), ((NULL)<(v0.c0)))))  NULLS FIRST, (NOT (v0.c0)) COLLATE RTRIM LIMIT 0x0;
SELECT * FROM v0 WHERE ((- (((((v0.c1)AND(v0.c1)))AND(v0.c2)))));
SELECT ALL * FROM v0 WHERE ((((- (((((v0.c1)AND(v0.c1)))AND(v0.c2)))))AND(((LTRIM(v0.c1, v0.c0)) IS FALSE)))) ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))-(v0.c0))  NULLS LAST, (((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))AND(0.26113510322151723)), ((v0.c2)<=(v0.c0)), (v0.c2 IN (v0.c0, v0.c1))))<=((NULL, ((((v0.c2)AND(v0.c2)))AND(v0.c0)), ((NULL)<(v0.c0)))))  NULLS FIRST, (NOT (v0.c0)) COLLATE RTRIM LIMIT 0x0 INTERSECT SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))-(v0.c0))  NULLS LAST, (((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))AND(0.26113510322151723)), ((v0.c2)<=(v0.c0)), (v0.c2 IN (v0.c0, v0.c1))))<=((NULL, ((((v0.c2)AND(v0.c2)))AND(v0.c0)), ((NULL)<(v0.c0)))))  NULLS FIRST, (NOT (v0.c0)) COLLATE RTRIM LIMIT 0x0;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE vt0.c1 END IN ((((vt0.c0))>((0.17366808409776624))), v0.c0 COLLATE RTRIM)) WHERE (((((((v0.c1)AND(v0.c0)))OR(v0.c1)))OR(v0.c0)) COLLATE RTRIM) ORDER BY 0.9594471581869118 DESC, (((v0.c1, v0.c1)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)), (((('1576123895')OR(v0.c2)))OR(vt0.c1)))) AND ((CASE vt0.c0  WHEN '-1393225757' THEN vt0.c0 ELSE v0.c1 END, ((vt0.c0)>>(v0.c2))))) DESC;
SELECT * FROM v0 CROSS JOIN vt0 ON (CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE vt0.c1 END IN ((((vt0.c0))>((0.17366808409776624))), v0.c0 COLLATE RTRIM)) WHERE (((((((((v0.c1)AND(v0.c0)))OR(v0.c1)))OR(v0.c0)) COLLATE RTRIM)AND(('1073277743' IN ())))) ORDER BY 0.9594471581869118 DESC, (((v0.c1, v0.c1)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)), (((('1576123895')OR(v0.c2)))OR(vt0.c1)))) AND ((CASE vt0.c0  WHEN '-1393225757' THEN vt0.c0 ELSE v0.c1 END, ((vt0.c0)>>(v0.c2))))) DESC INTERSECT SELECT ALL * FROM v0 CROSS JOIN vt0 ON (CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE vt0.c1 END IN ((((vt0.c0))>((0.17366808409776624))), v0.c0 COLLATE RTRIM)) WHERE (CASE WHEN v0.c1 COLLATE BINARY THEN ((v0.c1) BETWEEN (v0.c2) AND (vt0.c1)) WHEN 0.7640971780726854 THEN CAST(vt0.c1 AS INTEGER) WHEN ((vt0.c0) NOTNULL) THEN (vt0.c1 IN (x'75')) ELSE v0.c1 COLLATE NOCASE END) ORDER BY 0.9594471581869118 DESC, (((v0.c1, v0.c1)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)), (((('1576123895')OR(v0.c2)))OR(vt0.c1)))) AND ((CASE vt0.c0  WHEN '-1393225757' THEN vt0.c0 ELSE v0.c1 END, ((vt0.c0)>>(v0.c2))))) DESC;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE vt0.c1 END IN ((((vt0.c0))>((0.17366808409776624))), v0.c0 COLLATE RTRIM)) WHERE (((((((v0.c1)AND(v0.c0)))OR(v0.c1)))OR(v0.c0)) COLLATE RTRIM) ORDER BY 0.9594471581869118 DESC, (((v0.c1, v0.c1)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)), (((('1576123895')OR(v0.c2)))OR(vt0.c1)))) AND ((CASE vt0.c0  WHEN '-1393225757' THEN vt0.c0 ELSE v0.c1 END, ((vt0.c0)>>(v0.c2))))) DESC;
SELECT * FROM v0 CROSS JOIN vt0 ON (CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE vt0.c1 END IN ((((vt0.c0))>((0.17366808409776624))), v0.c0 COLLATE RTRIM)) WHERE (((((((((v0.c1)AND(v0.c0)))OR(v0.c1)))OR(v0.c0)) COLLATE RTRIM)AND(('1073277743' IN ())))) ORDER BY 0.9594471581869118 DESC, (((v0.c1, v0.c1)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)), (((('1576123895')OR(v0.c2)))OR(vt0.c1)))) AND ((CASE vt0.c0  WHEN '-1393225757' THEN vt0.c0 ELSE v0.c1 END, ((vt0.c0)>>(v0.c2))))) DESC INTERSECT SELECT ALL * FROM v0 CROSS JOIN vt0 ON (CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE vt0.c1 END IN ((((vt0.c0))>((0.17366808409776624))), v0.c0 COLLATE RTRIM)) WHERE (CASE WHEN v0.c1 COLLATE BINARY THEN ((v0.c1) BETWEEN (v0.c2) AND (vt0.c1)) WHEN 0.7640971780726854 THEN CAST(vt0.c1 AS INTEGER) WHEN ((vt0.c0) NOTNULL) THEN (vt0.c1 IN (x'75')) ELSE v0.c1 COLLATE NOCASE END) ORDER BY 0.9594471581869118 DESC, (((v0.c1, v0.c1)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)), (((('1576123895')OR(v0.c2)))OR(vt0.c1)))) AND ((CASE vt0.c0  WHEN '-1393225757' THEN vt0.c0 ELSE v0.c1 END, ((vt0.c0)>>(v0.c2))))) DESC;
SELECT * FROM vt0 NATURAL JOIN v0 NATURAL JOIN t1 WHERE (1.514797807E9) ORDER BY NULLIF(DISTINCT (((v0.c2))>((v0.c2))), '-1526302077') DESC  NULLS LAST, json_remove(v0.c0 COLLATE BINARY, ((t1.c0) NOT BETWEEN (v0.c1) AND (v0.c2)), (NOT (vt0.c1)), ((v0.c2)AND(v0.c0))) ASC  NULLS LAST, (((NOT (t1.c1))) BETWEEN (((v0.c2) IS FALSE)) AND (vt0.c1)) ASC;
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 NATURAL JOIN t1 WHERE (((1.514797807E9)AND(CASE WHEN CAST(v0.c2 AS INTEGER) THEN json_valid(v0.c1) END))) ORDER BY (((ABS(t1.c2)))==((((((((((((t1.c2)OR(vt0.c0)))OR(t1.c0)))OR(v0.c1)))OR(vt0.c1)))AND(t1.c2))))), ((((CASE WHEN v0.c0 THEN vt0.c0 END)OR(((t1.c2) NOT BETWEEN (x'aa') AND (t1.c2)))))OR(((((((v0.c0)OR(v0.c0)))OR(vt0.c1)))OR(-71902035))))  NULLS FIRST, UNICODE(v0.c2) COLLATE NOCASE COLLATE BINARY  NULLS LAST LIMIT 0;
SELECT * FROM vt0 NATURAL JOIN v0 NATURAL JOIN t1 WHERE (1.514797807E9) ORDER BY NULLIF(DISTINCT (((v0.c2))>((v0.c2))), '-1526302077') DESC  NULLS LAST, json_remove(v0.c0 COLLATE BINARY, ((t1.c0) NOT BETWEEN (v0.c1) AND (v0.c2)), (NOT (vt0.c1)), ((v0.c2)AND(v0.c0))) ASC  NULLS LAST, (((NOT (t1.c1))) BETWEEN (((v0.c2) IS FALSE)) AND (vt0.c1)) ASC;
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 NATURAL JOIN t1 WHERE (((1.514797807E9)AND(CASE WHEN CAST(v0.c2 AS INTEGER) THEN json_valid(v0.c1) END))) ORDER BY (((ABS(t1.c2)))==((((((((((((t1.c2)OR(vt0.c0)))OR(t1.c0)))OR(v0.c1)))OR(vt0.c1)))AND(t1.c2))))), ((((CASE WHEN v0.c0 THEN vt0.c0 END)OR(((t1.c2) NOT BETWEEN (x'aa') AND (t1.c2)))))OR(((((((v0.c0)OR(v0.c0)))OR(vt0.c1)))OR(-71902035))))  NULLS FIRST, UNICODE(v0.c2) COLLATE NOCASE COLLATE BINARY  NULLS LAST LIMIT 0;
SELECT * FROM v0 WHERE (((((v0.c1) IS FALSE))>=(CASE v0.c0  WHEN NULL THEN v0.c1 WHEN v0.c1 THEN v0.c2 END))) ORDER BY (((((v0.c2 IN (v0.c2, v0.c2)))AND(v0.c2 COLLATE NOCASE)))OR(v0.c1)) ASC;
SELECT * FROM v0 WHERE (((((v0.c1) IS FALSE))>(CASE v0.c0  WHEN NULL THEN v0.c1 WHEN v0.c1 THEN v0.c2 END))) ORDER BY ((CAST(v0.c0 AS INTEGER)) NOTNULL)  NULLS LAST, '0.31636427486005403' ASC  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c1) IS FALSE))>=(CASE v0.c0  WHEN NULL THEN v0.c1 WHEN v0.c1 THEN v0.c2 END))) ORDER BY (((((v0.c2 IN (v0.c2, v0.c2)))AND(v0.c2 COLLATE NOCASE)))OR(v0.c1)) ASC;
SELECT * FROM v0 WHERE (((((v0.c1) IS FALSE))>(CASE v0.c0  WHEN NULL THEN v0.c1 WHEN v0.c1 THEN v0.c2 END))) ORDER BY ((CAST(v0.c0 AS INTEGER)) NOTNULL)  NULLS LAST, '0.31636427486005403' ASC  NULLS LAST;
SELECT ALL * FROM v0 CROSS JOIN t1 ON CAST((t1.c0 IN (v0.c2)) AS BLOB) WHERE ('1209751313');
SELECT * FROM v0 CROSS JOIN t1 ON CAST((t1.c0 IN (v0.c2)) AS BLOB) WHERE ((('1209751313')AND(((((t1.c0)IS(t1.c0)))-(((((t1.c1)OR(t1.c1)))OR(v0.c1))))))) ORDER BY 0.03711183914282579 ASC LIMIT 0;
SELECT ALL * FROM v0 CROSS JOIN t1 ON CAST((t1.c0 IN (v0.c2)) AS BLOB) WHERE ('1209751313');
SELECT * FROM v0 CROSS JOIN t1 ON CAST((t1.c0 IN (v0.c2)) AS BLOB) WHERE ((('1209751313')AND(((((t1.c0)IS(t1.c0)))-(((((t1.c1)OR(t1.c1)))OR(v0.c1))))))) ORDER BY 0.03711183914282579 ASC LIMIT 0;
SELECT MAX(vt0.c1) FROM t1, vt0, v0 WHERE (((LIKELY(DISTINCT t1.c0)) NOT BETWEEN ((((v0.c0, 'F')) BETWEEN ((t1.c2, vt0.c1)) AND ((t1.c0, v0.c1)))) AND (((NULL)>>(vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c1)) THEN NULLIF(vt0.c1, t1.c1) WHEN (((vt0.c1, t1.c0, x'276f'))<((t1.c2, t1.c2, v0.c2))) THEN CAST(v0.c1 AS INTEGER) END  NULLS LAST, NULL ASC, INSTR(IFNULL(t1.c1, t1.c2), ((t1.c2) NOTNULL)) ASC, ((t1.c1 COLLATE BINARY)|(((((t1.c0)OR(x'fadb')))AND(t1.c2))))  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c1) FROM t1, vt0, v0 WHERE (((((LIKELY(DISTINCT t1.c0)) NOT BETWEEN ((((v0.c0, 'F')) BETWEEN ((t1.c2, vt0.c1)) AND ((t1.c0, v0.c1)))) AND (((NULL)>>(vt0.c0)))))AND((NOT ((v0.c0 IN ())))))) ORDER BY ((((v0.c1) NOT NULL))IS NOT((((t1.c0, v0.c2, t1.c1))>((v0.c2, vt0.c1, t1.c1))))) INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM t1, vt0, v0 WHERE (((((0.174795672151696) BETWEEN (v0.c1) AND (v0.c2)))/(UNLIKELY(vt0.c1)))) ORDER BY ((((v0.c1) NOT NULL))IS NOT((((t1.c0, v0.c2, t1.c1))>((v0.c2, vt0.c1, t1.c1)))));
SELECT * FROM vt0 WHERE (x'e8a6') ORDER BY vt0.c1 DESC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))), ((((((((((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(CAST(vt0.c1 AS BLOB))))AND(IFNULL(vt0.c1, vt0.c0))))OR(CAST(vt0.c1 AS TEXT))))AND((((vt0.c0, x'c9')) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST, ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((x'e8a6')AND('469225696'))) ORDER BY vt0.c1 DESC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))), ((((((((((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(CAST(vt0.c1 AS BLOB))))AND(IFNULL(vt0.c1, vt0.c0))))OR(CAST(vt0.c1 AS TEXT))))AND((((vt0.c0, x'c9')) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST, ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE BINARY  NULLS FIRST LIMIT 0x0;
SELECT * FROM vt0 WHERE (x'e8a6') ORDER BY vt0.c1 DESC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))), ((((((((((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(CAST(vt0.c1 AS BLOB))))AND(IFNULL(vt0.c1, vt0.c0))))OR(CAST(vt0.c1 AS TEXT))))AND((((vt0.c0, x'c9')) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST, ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT DISTINCT * FROM vt0 WHERE (((x'e8a6')AND('469225696'))) ORDER BY vt0.c1 DESC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))), ((((((((((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(CAST(vt0.c1 AS BLOB))))AND(IFNULL(vt0.c1, vt0.c0))))OR(CAST(vt0.c1 AS TEXT))))AND((((vt0.c0, x'c9')) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST, ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE BINARY  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN ((t1.c2)-(t1.c1)) THEN t1.c2 ELSE (0.5490578874194973 IN ()) END) ORDER BY CAST((t1.c0 IN ()) AS NUMERIC)  NULLS FIRST, ((CAST(t1.c0 AS BLOB))AND(CAST(t1.c2 AS BLOB))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN ((t1.c2)-(t1.c1)) THEN t1.c2 ELSE (0.5490578874194973 IN ()) END) ORDER BY (((((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))!=('0.228609219319156'));
SELECT * FROM t1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN ((t1.c2)-(t1.c1)) THEN t1.c2 ELSE (0.5490578874194973 IN ()) END) ORDER BY CAST((t1.c0 IN ()) AS NUMERIC)  NULLS FIRST, ((CAST(t1.c0 AS BLOB))AND(CAST(t1.c2 AS BLOB))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN ((t1.c2)-(t1.c1)) THEN t1.c2 ELSE (0.5490578874194973 IN ()) END) ORDER BY (((((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))!=('0.228609219319156'));
SELECT * FROM vt0, v0 WHERE ((((v0.c2 IN ())) NOT BETWEEN (((0.2784331620041579) NOTNULL)) AND (((v0.c0)GLOB(v0.c1)))));
SELECT ALL * FROM vt0, v0 WHERE ((((((v0.c2 IN ())) NOT BETWEEN (((0.2784331620041579) NOTNULL)) AND (((v0.c0)GLOB(v0.c1)))))AND(CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN (- (v0.c1)) WHEN vt0.c0 THEN ((((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(v0.c0)) WHEN ((vt0.c1)||(vt0.c1)) THEN 'V' WHEN CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END THEN ((v0.c0)/(vt0.c1)) END))) ORDER BY (((((((~ (v0.c0)))AND((v0.c1 IN ()))))AND(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))))AND((((NULL, NULL))<>((0.863170157130883, vt0.c0))))) DESC  NULLS FIRST, NULL ASC INTERSECT SELECT * FROM vt0, v0 WHERE ((((NULL)) NOT BETWEEN ((v0.c2)) AND (((- (0.6282224466575264)))))) ORDER BY (((((((~ (v0.c0)))AND((v0.c1 IN ()))))AND(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))))AND((((NULL, NULL))<>((0.863170157130883, vt0.c0))))) DESC  NULLS FIRST, NULL ASC;
SELECT * FROM vt0, v0 WHERE ((((v0.c2 IN ())) NOT BETWEEN (((0.2784331620041579) NOTNULL)) AND (((v0.c0)GLOB(v0.c1)))));
SELECT ALL * FROM vt0, v0 WHERE ((((((v0.c2 IN ())) NOT BETWEEN (((0.2784331620041579) NOTNULL)) AND (((v0.c0)GLOB(v0.c1)))))AND(CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN (- (v0.c1)) WHEN vt0.c0 THEN ((((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(v0.c0)) WHEN ((vt0.c1)||(vt0.c1)) THEN 'V' WHEN CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END THEN ((v0.c0)/(vt0.c1)) END))) ORDER BY (((((((~ (v0.c0)))AND((v0.c1 IN ()))))AND(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))))AND((((NULL, NULL))<>((0.863170157130883, vt0.c0))))) DESC  NULLS FIRST, NULL ASC INTERSECT SELECT * FROM vt0, v0 WHERE ((((NULL)) NOT BETWEEN ((v0.c2)) AND (((- (0.6282224466575264)))))) ORDER BY (((((((~ (v0.c0)))AND((v0.c1 IN ()))))AND(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))))AND((((NULL, NULL))<>((0.863170157130883, vt0.c0))))) DESC  NULLS FIRST, NULL ASC;
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c1))<=((v0.c0))))<>(((((((vt0.c0)OR(v0.c2)))OR(v0.c0)))OR(vt0.c0))))) ORDER BY ((+ (vt0.c1)) IN ((((vt0.c1, v0.c2))<((NULL, vt0.c0))), ((vt0.c1) BETWEEN (vt0.c0) AND (0.041637467900181635))))  NULLS FIRST, TRIM(((v0.c2) NOTNULL))  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE ((((((vt0.c1))<=((v0.c0))))<(((((((vt0.c0)OR(v0.c2)))OR(v0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0)LIKE((- (v0.c2)))) ASC  NULLS LAST, CASE WHEN (- (vt0.c0)) THEN (((v0.c2))>((vt0.c1))) WHEN v0.c2 COLLATE RTRIM THEN (v0.c1 IN ()) WHEN ((v0.c0) NOT BETWEEN ('-95058440') AND (v0.c1)) THEN CASE v0.c2  WHEN vt0.c1 THEN vt0.c0 ELSE v0.c1 END END DESC  NULLS LAST, (~ (v0.c2 COLLATE BINARY));
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c1))<=((v0.c0))))<>(((((((vt0.c0)OR(v0.c2)))OR(v0.c0)))OR(vt0.c0))))) ORDER BY ((+ (vt0.c1)) IN ((((vt0.c1, v0.c2))<((NULL, vt0.c0))), ((vt0.c1) BETWEEN (vt0.c0) AND (0.041637467900181635))))  NULLS FIRST, TRIM(((v0.c2) NOTNULL))  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE ((((((vt0.c1))<=((v0.c0))))<(((((((vt0.c0)OR(v0.c2)))OR(v0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0)LIKE((- (v0.c2)))) ASC  NULLS LAST, CASE WHEN (- (vt0.c0)) THEN (((v0.c2))>((vt0.c1))) WHEN v0.c2 COLLATE RTRIM THEN (v0.c1 IN ()) WHEN ((v0.c0) NOT BETWEEN ('-95058440') AND (v0.c1)) THEN CASE v0.c2  WHEN vt0.c1 THEN vt0.c0 ELSE v0.c1 END END DESC  NULLS LAST, (~ (v0.c2 COLLATE BINARY));
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((((((v0.c1)AND(NULL)))OR(NULL)))AND(vt0.c1)) COLLATE NOCASE) ORDER BY CASE vt0.c1 COLLATE NOCASE  WHEN 0.9594471581869118 THEN ((((vt0.c1)OR(vt0.c0)))AND(v0.c2)) WHEN CAST(NULL AS BLOB) THEN 0.19780903230139224 END;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((((((v0.c1)AND(NULL)))OR(NULL)))AND(vt0.c1)) COLLATE NOCASE) ORDER BY CASE vt0.c1 COLLATE NOCASE  WHEN 0.9594471581869118 THEN ((((vt0.c1)OR(vt0.c0)))AND(v0.c2)) WHEN CAST(NULL AS BLOB) THEN 0.19780903230139224 END LIMIT 1;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((((((v0.c1)AND(NULL)))OR(NULL)))AND(vt0.c1)) COLLATE NOCASE) ORDER BY CASE vt0.c1 COLLATE NOCASE  WHEN 0.9594471581869118 THEN ((((vt0.c1)OR(vt0.c0)))AND(v0.c2)) WHEN CAST(NULL AS BLOB) THEN 0.19780903230139224 END;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((((((v0.c1)AND(NULL)))OR(NULL)))AND(vt0.c1)) COLLATE NOCASE) ORDER BY CASE vt0.c1 COLLATE NOCASE  WHEN 0.9594471581869118 THEN ((((vt0.c1)OR(vt0.c0)))AND(v0.c2)) WHEN CAST(NULL AS BLOB) THEN 0.19780903230139224 END LIMIT 1;
SELECT MAX(v0.c2) FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON x'' WHERE ((((((NULL, v0.c0)) NOT BETWEEN ((vt0.c1, NULL)) AND ((v0.c0, v0.c0)))) NOTNULL)) ORDER BY (0.9860898366068676 IN ((+ (v0.c2)), (vt0.c1 IN ()))) ASC, 'HI';
SELECT DISTINCT MAX(v0.c2) FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON x'' WHERE ((((((((NULL, v0.c0)) NOT BETWEEN ((vt0.c1, NULL)) AND ((v0.c0, v0.c0)))) NOTNULL))AND(((((TYPEOF(t1.c2))AND(UPPER(DISTINCT v0.c2))))OR(vt0.c1))))) ORDER BY (0.9860898366068676 IN ((+ (v0.c2)), (vt0.c1 IN ()))) ASC, 'HI' LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(v0.c2) FROM v0 NATURAL JOIN vt0 INNER JOIN t1 ON x'' WHERE ((((t1.c1, '-172821072', t1.c0, v0.c1)) BETWEEN ((STRFTIME(t1.c0, vt0.c1, v0.c1, vt0.c1), (NOT (NULL)), ((((((((vt0.c1)AND(vt0.c0)))OR('724060006')))OR(vt0.c0)))OR(x'')), (((v0.c1))==((v0.c2))))) AND ((((vt0.c0) NOTNULL), (+ (vt0.c1)), (NOT (v0.c1)), CAST(0.2794591779399267 AS NUMERIC))))) ORDER BY (0.9860898366068676 IN ((+ (v0.c2)), (vt0.c1 IN ()))) ASC, 'HI' LIMIT 0x1;
SELECT ALL MAX(v0.c1) FROM v0, t1 WHERE (v0.c0);
SELECT MAX(v0.c1) FROM v0, t1 WHERE (((v0.c0)AND(t1.c1 COLLATE BINARY COLLATE BINARY COLLATE NOCASE))) INTERSECT SELECT ALL MAX(v0.c1) FROM v0, t1 WHERE (((((t1.c2) BETWEEN (v0.c2) AND (t1.c0))) NOT BETWEEN (((((((((v0.c0)AND(v0.c1)))OR(t1.c0)))OR(t1.c0)))AND(v0.c0))) AND (((v0.c1)>=(t1.c0)))));
SELECT * FROM vt0 CROSS JOIN t1 ON CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END COLLATE BINARY WHERE (SQLITE_COMPILEOPTION_USED((((t1.c2, vt0.c0)) NOT BETWEEN ((t1.c1, vt0.c1)) AND ((t1.c2, vt0.c0)))));
SELECT DISTINCT * FROM vt0 CROSS JOIN t1 ON CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END COLLATE BINARY WHERE (SQLITE_COMPILEOPTION_USED((((t1.c2, vt0.c0)) NOT BETWEEN ((t1.c1, vt0.c1)) AND ((t1.c2, vt0.c0)))));
SELECT * FROM vt0 CROSS JOIN t1 ON CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END COLLATE BINARY WHERE (SQLITE_COMPILEOPTION_USED((((t1.c2, vt0.c0)) NOT BETWEEN ((t1.c1, vt0.c1)) AND ((t1.c2, vt0.c0)))));
SELECT DISTINCT * FROM vt0 CROSS JOIN t1 ON CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END COLLATE BINARY WHERE (SQLITE_COMPILEOPTION_USED((((t1.c2, vt0.c0)) NOT BETWEEN ((t1.c1, vt0.c1)) AND ((t1.c2, vt0.c0)))));
SELECT MIN(t1.c1) FROM vt0, v0 LEFT OUTER JOIN t1 ON ((((v0.c2)==(t1.c1))) NOT BETWEEN (((((t1.c2)OR(v0.c2)))AND(t1.c0))) AND (NULL)) WHERE ((+ (((t1.c1)<=(v0.c0))))) ORDER BY (((v0.c2, (vt0.c0 IN ()), ((t1.c2) IS TRUE), (((t1.c0, vt0.c1))>=((vt0.c0, v0.c1))), 0.9585556011552869, CAST(t1.c0 AS INTEGER)))>=((CAST(714160328 AS BLOB), TYPEOF(DISTINCT t1.c0), ((t1.c2) NOT NULL), t1.c2 COLLATE BINARY, ((vt0.c1) NOT NULL), (- (vt0.c0)))))  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM vt0, v0 INNER JOIN t1 ON ((((v0.c2)=(t1.c1))) NOT BETWEEN (((((t1.c2)OR(v0.c2)))AND(t1.c0))) AND (NULL)) WHERE ((((+ (((t1.c1)<=(v0.c0)))))AND(((((TYPEOF(t1.c2))OR(((((((((v0.c1)AND(t1.c0)))AND('k')))OR(NULL)))OR(x'fc')))))AND(CAST(vt0.c0 AS INTEGER)))))) ORDER BY CAST(CAST(v0.c1 AS TEXT) AS BLOB) ASC  NULLS LAST, CASE CAST(v0.c1 AS TEXT)  WHEN (~ (vt0.c1)) THEN ((((((t1.c1)AND(t1.c1)))AND(t1.c1)))AND(t1.c1)) WHEN ((v0.c0)<=(v0.c0)) THEN ((v0.c1) IS TRUE) WHEN ((((t1.c2)OR(vt0.c1)))AND('窡')) THEN (- (t1.c2)) WHEN vt0.c0 COLLATE NOCASE THEN t1.c1 COLLATE RTRIM ELSE t1.c1 COLLATE NOCASE END  NULLS FIRST LIMIT 0X2;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON ((((((((((CASE 0.014807227420185032  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN vt0.c1 THEN v0.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c1)>(t1.c1)))))OR(vt0.c0 COLLATE BINARY)))OR(((t1.c0)<>(t1.c1)))))AND(CAST(t1.c2 AS BLOB))) INNER JOIN v0 ON (((x'' IN (vt0.c1))) IS TRUE) WHERE (CASE WHEN v0.c1 THEN '㱇XJDr' WHEN ((v0.c1)<>(v0.c1)) THEN (+ (v0.c2)) WHEN NULLIF(DISTINCT t1.c0, v0.c1) THEN (((vt0.c0, t1.c2))>=((v0.c2, v0.c1))) END) ORDER BY (((t1.c2, (vt0.c0 IN (v0.c2, vt0.c1)), '', (t1.c2 IN ())))=((json_quote(t1.c0), CASE v0.c1  WHEN v0.c1 THEN vt0.c0 ELSE t1.c1 END, ((v0.c2)<=(vt0.c0)), (('-1520699329') NOT BETWEEN (v0.c0) AND (t1.c0))))) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (t1.c1) AND (v0.c2)))<<((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON ((((((((((CASE 0.014807227420185032  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN vt0.c1 THEN v0.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c1)>(t1.c1)))))OR(vt0.c0 COLLATE BINARY)))OR(((t1.c0)!=(t1.c1)))))AND(CAST(t1.c2 AS BLOB))) INNER JOIN v0 ON (((x'' IN (vt0.c1))) IS TRUE) WHERE (((CASE WHEN v0.c1 THEN '㱇XJDr' WHEN ((v0.c1)!=(v0.c1)) THEN (+ (v0.c2)) WHEN NULLIF(DISTINCT t1.c0, v0.c1) THEN (((vt0.c0, t1.c2))>=((v0.c2, v0.c1))) END)AND(GLOB((((v0.c0, v0.c2)) NOT BETWEEN ((v0.c0, t1.c1)) AND ((vt0.c0, 1.250186722E9))), (+ (t1.c2)))))) ORDER BY (((t1.c2, (vt0.c0 IN (v0.c2, vt0.c1)), '', (t1.c2 IN ())))==((json_quote(t1.c0), CASE v0.c1  WHEN v0.c1 THEN vt0.c0 ELSE t1.c1 END, ((v0.c2)<=(vt0.c0)), (('-1520699329') NOT BETWEEN (v0.c0) AND (t1.c0))))) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (t1.c1) AND (v0.c2)))<<((NOT (vt0.c0)))) ASC  NULLS LAST LIMIT 0 INTERSECT SELECT * FROM t1 LEFT OUTER JOIN vt0 ON ((((((((((CASE 0.014807227420185032  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN vt0.c1 THEN v0.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c1)>(t1.c1)))))OR(vt0.c0 COLLATE BINARY)))OR(((t1.c0)!=(t1.c1)))))AND(CAST(t1.c2 AS BLOB))) INNER JOIN v0 ON (((x'' IN (vt0.c1))) IS TRUE) WHERE (((vt0.c0 COLLATE BINARY)<>((t1.c1 IN ())))) ORDER BY (((t1.c2, (vt0.c0 IN (v0.c2, vt0.c1)), '', (t1.c2 IN ())))==((json_quote(t1.c0), CASE v0.c1  WHEN v0.c1 THEN vt0.c0 ELSE t1.c1 END, ((v0.c2)<=(vt0.c0)), (('-1520699329') NOT BETWEEN (v0.c0) AND (t1.c0))))) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (t1.c1) AND (v0.c2)))<<((NOT (vt0.c0)))) ASC  NULLS LAST LIMIT 0;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON ((((((((((CASE 0.014807227420185032  WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 WHEN vt0.c1 THEN v0.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)OR(CAST(v0.c0 AS INTEGER))))OR(((v0.c1)>(t1.c1)))))OR(vt0.c0 COLLATE BINARY)))OR(((t1.c0)<>(t1.c1)))))AND(CAST(t1.c2 AS BLOB))) INNER JOIN v0 ON (((x'' IN (vt0.c1))) IS TRUE) WHERE (CASE WHEN v0.c1 THEN '㱇XJDr' WHEN ((v0.c1)<>(v0.c1)) THEN (+ (v0.c2)) WHEN NULLIF(DISTINCT t1.c0, v0.c1) THEN (((vt0.c0, t1.c2))>=((v0.c2, v0.c1))) END) ORDER BY (((t1.c2, (vt0.c0 IN (v0.c2, vt0.c1)), '', (t1.c2 IN ())))=((json_quote(t1.c0), CASE v0.c1  WHEN v0.c1 THEN vt0.c0 ELSE t1.c1 END, ((v0.c2)<=(vt0.c0)), (('-1520699329') NOT BETWEEN (v0.c0) AND (t1.c0))))) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (t1.c1) AND (v0.c2)))<<((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN v0 ON (~ (((t1.c0)<>(t1.c1)))) CROSS JOIN t1 ON CAST(((vt0.c1)!=(x'')) AS REAL) WHERE ((((t1.c2, t1.c0)) NOT BETWEEN ((9.50883003E8, ((((((v0.c0)OR(1.21154696E9)))AND(t1.c1)))OR(395141146)))) AND ((CASE v0.c1  WHEN t1.c1 THEN t1.c2 ELSE 0.301428897175689 END, (+ (v0.c2))))));
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (~ (((t1.c0)!=(t1.c1)))) CROSS JOIN t1 ON CAST(((vt0.c1)!=(x'')) AS REAL) WHERE ((((t1.c2, t1.c0)) NOT BETWEEN ((9.50883003E8, ((((((v0.c0)OR(1.21154696E9)))AND(t1.c1)))OR(395141146)))) AND ((CASE v0.c1  WHEN t1.c1 THEN t1.c2 ELSE 0.301428897175689 END, (+ (v0.c2))))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON (~ (((t1.c0)<>(t1.c1)))) CROSS JOIN t1 ON CAST(((vt0.c1)!=(x'')) AS REAL) WHERE ((((t1.c2, t1.c0)) NOT BETWEEN ((9.50883003E8, ((((((v0.c0)OR(1.21154696E9)))AND(t1.c1)))OR(395141146)))) AND ((CASE v0.c1  WHEN t1.c1 THEN t1.c2 ELSE 0.301428897175689 END, (+ (v0.c2))))));
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (~ (((t1.c0)!=(t1.c1)))) CROSS JOIN t1 ON CAST(((vt0.c1)!=(x'')) AS REAL) WHERE ((((t1.c2, t1.c0)) NOT BETWEEN ((9.50883003E8, ((((((v0.c0)OR(1.21154696E9)))AND(t1.c1)))OR(395141146)))) AND ((CASE v0.c1  WHEN t1.c1 THEN t1.c2 ELSE 0.301428897175689 END, (+ (v0.c2))))));
SELECT ALL MIN(vt0.c1) FROM v0, vt0 WHERE ('') ORDER BY (v0.c1 COLLATE BINARY IN ()) ASC, v0.c0  NULLS LAST;
SELECT DISTINCT MIN(vt0.c1) FROM v0, vt0 WHERE ((('')AND(CASE 'w8Qc'  WHEN (v0.c2 IN (v0.c0)) THEN x'' ELSE (vt0.c0 IN (v0.c2, v0.c2, vt0.c0)) END))) ORDER BY (vt0.c0 IN (CASE v0.c0  WHEN vt0.c1 THEN 0.14785406286458946 WHEN '콦' THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN v0.c2 THEN v0.c2 END)) DESC  NULLS LAST LIMIT 1;
SELECT * FROM t1 WHERE (((2.03799364E8)||(((((t1.c2)OR(t1.c0)))OR(t1.c2)))));
SELECT ALL * FROM t1 WHERE (((2.03799364E8)||(((((t1.c2)OR(t1.c0)))OR(t1.c2))))) INTERSECT SELECT ALL * FROM t1 WHERE (ABS(ROUND(t1.c1, x'')));
SELECT * FROM t1 WHERE (((2.03799364E8)||(((((t1.c2)OR(t1.c0)))OR(t1.c2)))));
SELECT ALL * FROM t1 WHERE (((2.03799364E8)||(((((t1.c2)OR(t1.c0)))OR(t1.c2))))) INTERSECT SELECT ALL * FROM t1 WHERE (ABS(ROUND(t1.c1, x'')));
SELECT * FROM v0, vt0, t1 WHERE (((((((((((v0.c2) NOT BETWEEN (vt0.c0) AND (t1.c2)))AND(t1.c0)))OR(NULL)))OR(((((t1.c1)OR(v0.c2)))AND(vt0.c0)))))AND((((vt0.c1, t1.c1))=((t1.c0, vt0.c1)))))) ORDER BY CAST((((t1.c0))<((t1.c0))) AS BLOB), ((CAST(0.032034365827683264 AS REAL))/(v0.c1)) ASC  NULLS LAST;
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((((((((v0.c2) NOT BETWEEN (vt0.c0) AND (t1.c2)))AND(t1.c0)))OR(NULL)))OR(((((t1.c1)OR(v0.c2)))AND(vt0.c0)))))AND((((vt0.c1, t1.c1))=((t1.c0, vt0.c1)))))) ORDER BY CAST((((t1.c0))<((t1.c0))) AS BLOB), ((CAST(0.032034365827683264 AS REAL))/(v0.c1)) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((v0.c0)IS NOT(v0.c0))) NOT NULL)) ORDER BY CAST((((t1.c0))<((t1.c0))) AS BLOB), ((CAST(0.032034365827683264 AS REAL))/(v0.c1)) ASC  NULLS LAST;
SELECT * FROM v0, vt0, t1 WHERE (((((((((((v0.c2) NOT BETWEEN (vt0.c0) AND (t1.c2)))AND(t1.c0)))OR(NULL)))OR(((((t1.c1)OR(v0.c2)))AND(vt0.c0)))))AND((((vt0.c1, t1.c1))=((t1.c0, vt0.c1)))))) ORDER BY CAST((((t1.c0))<((t1.c0))) AS BLOB), ((CAST(0.032034365827683264 AS REAL))/(v0.c1)) ASC  NULLS LAST;
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((((((((v0.c2) NOT BETWEEN (vt0.c0) AND (t1.c2)))AND(t1.c0)))OR(NULL)))OR(((((t1.c1)OR(v0.c2)))AND(vt0.c0)))))AND((((vt0.c1, t1.c1))=((t1.c0, vt0.c1)))))) ORDER BY CAST((((t1.c0))<((t1.c0))) AS BLOB), ((CAST(0.032034365827683264 AS REAL))/(v0.c1)) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((v0.c0)IS NOT(v0.c0))) NOT NULL)) ORDER BY CAST((((t1.c0))<((t1.c0))) AS BLOB), ((CAST(0.032034365827683264 AS REAL))/(v0.c1)) ASC  NULLS LAST;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((v0.c2)%('1539342956')))LIKE(((vt0.c1)+(v0.c1))))) ORDER BY CAST(vt0.c1 COLLATE RTRIM AS TEXT), x'' COLLATE BINARY DESC;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((v0.c2)%('1539342956')))LIKE(((vt0.c1)+(v0.c1)))))AND(COALESCE(CASE t1.c1  WHEN v0.c2 THEN x'' WHEN v0.c2 THEN t1.c1 END, (+ (v0.c2)), (t1.c2 IN (']V')))))) ORDER BY (NOT (v0.c1 COLLATE BINARY)) DESC, ((((t1.c2) NOT BETWEEN (vt0.c1) AND (v0.c2)))>(CASE WHEN v0.c2 THEN v0.c0 WHEN vt0.c1 THEN v0.c1 WHEN t1.c1 THEN t1.c1 ELSE v0.c1 END)) ASC INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE (TRIM(LIKELIHOOD(v0.c1, vt0.c0))) ORDER BY (NOT (v0.c1 COLLATE BINARY)) DESC, ((((t1.c2) NOT BETWEEN (vt0.c1) AND (v0.c2)))>(CASE WHEN v0.c2 THEN v0.c0 WHEN vt0.c1 THEN v0.c1 WHEN t1.c1 THEN t1.c1 ELSE v0.c1 END)) ASC;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((v0.c2)%('1539342956')))LIKE(((vt0.c1)+(v0.c1))))) ORDER BY CAST(vt0.c1 COLLATE RTRIM AS TEXT), x'' COLLATE BINARY DESC;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((v0.c2)%('1539342956')))LIKE(((vt0.c1)+(v0.c1)))))AND(COALESCE(CASE t1.c1  WHEN v0.c2 THEN x'' WHEN v0.c2 THEN t1.c1 END, (+ (v0.c2)), (t1.c2 IN (']V')))))) ORDER BY (NOT (v0.c1 COLLATE BINARY)) DESC, ((((t1.c2) NOT BETWEEN (vt0.c1) AND (v0.c2)))>(CASE WHEN v0.c2 THEN v0.c0 WHEN vt0.c1 THEN v0.c1 WHEN t1.c1 THEN t1.c1 ELSE v0.c1 END)) ASC INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE (TRIM(LIKELIHOOD(v0.c1, vt0.c0))) ORDER BY (NOT (v0.c1 COLLATE BINARY)) DESC, ((((t1.c2) NOT BETWEEN (vt0.c1) AND (v0.c2)))>(CASE WHEN v0.c2 THEN v0.c0 WHEN vt0.c1 THEN v0.c1 WHEN t1.c1 THEN t1.c1 ELSE v0.c1 END)) ASC;
SELECT * FROM t1, vt0 WHERE (LOWER((t1.c1 IN ()))) ORDER BY CASE CASE t1.c1  WHEN vt0.c1 THEN t1.c2 ELSE t1.c2 END  WHEN ((t1.c2) BETWEEN (vt0.c0) AND (t1.c1)) THEN t1.c0 COLLATE BINARY END  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE (LOWER((t1.c1 IN ()))) ORDER BY (NOT (((t1.c1)>>(t1.c0))))  NULLS LAST, CASE ((t1.c2)+(vt0.c1))  WHEN CAST(vt0.c0 AS BLOB) THEN ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(vt0.c1)) ELSE HEX(t1.c0) END ASC, (((t1.c0) BETWEEN (t1.c1) AND (vt0.c0)) IN ()) DESC  NULLS LAST LIMIT 0x0;
SELECT * FROM t1, vt0 WHERE (LOWER((t1.c1 IN ()))) ORDER BY CASE CASE t1.c1  WHEN vt0.c1 THEN t1.c2 ELSE t1.c2 END  WHEN ((t1.c2) BETWEEN (vt0.c0) AND (t1.c1)) THEN t1.c0 COLLATE BINARY END  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0 WHERE (LOWER((t1.c1 IN ()))) ORDER BY (NOT (((t1.c1)>>(t1.c0))))  NULLS LAST, CASE ((t1.c2)+(vt0.c1))  WHEN CAST(vt0.c0 AS BLOB) THEN ((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(vt0.c1)) ELSE HEX(t1.c0) END ASC, (((t1.c0) BETWEEN (t1.c1) AND (vt0.c0)) IN ()) DESC  NULLS LAST LIMIT 0x0;
SELECT MAX(vt0.c1) FROM vt0, t1, v0 WHERE ((((t1.c1, v0.c1))==((vt0.c1, vt0.c1))) COLLATE BINARY) ORDER BY 0.2641981130313594 DESC  NULLS LAST, (NOT (((t1.c0) BETWEEN (t1.c1) AND (vt0.c1)))) DESC, vt0.c0;
SELECT ALL MAX(vt0.c1) FROM vt0, t1, v0 WHERE ((((t1.c1, v0.c1))==((vt0.c1, vt0.c1))) COLLATE BINARY) ORDER BY 0.2641981130313594 DESC  NULLS LAST, (NOT (((t1.c0) BETWEEN (t1.c1) AND (vt0.c1)))) DESC, vt0.c0 LIMIT 1;
SELECT * FROM v0, t1 LEFT OUTER JOIN vt0 ON '-1393225757' WHERE (v0.c2) ORDER BY (NOT ((((vt0.c0, t1.c2, 0.2398592374700429))==((v0.c2, v0.c1, v0.c2))))), LIKELY(DISTINCT ((t1.c1)AND(vt0.c0))) ASC, (- (((v0.c2) ISNULL)));
SELECT DISTINCT * FROM v0, t1 INNER JOIN vt0 ON '-1393225757' WHERE (((v0.c2)AND('67093693' COLLATE BINARY))) ORDER BY (((((v0.c1, t1.c1))==((v0.c0, NULL)))) BETWEEN (((vt0.c0)<>(v0.c1))) AND (t1.c2 COLLATE RTRIM)), vt0.c1 COLLATE BINARY DESC  NULLS LAST, '5w' COLLATE NOCASE DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM v0, t1 LEFT OUTER JOIN vt0 ON '-1393225757' WHERE (v0.c2) ORDER BY (NOT ((((vt0.c0, t1.c2, 0.2398592374700429))==((v0.c2, v0.c1, v0.c2))))), LIKELY(DISTINCT ((t1.c1)AND(vt0.c0))) ASC, (- (((v0.c2) ISNULL)));
SELECT DISTINCT * FROM v0, t1 INNER JOIN vt0 ON '-1393225757' WHERE (((v0.c2)AND('67093693' COLLATE BINARY))) ORDER BY (((((v0.c1, t1.c1))==((v0.c0, NULL)))) BETWEEN (((vt0.c0)<>(v0.c1))) AND (t1.c2 COLLATE RTRIM)), vt0.c1 COLLATE BINARY DESC  NULLS LAST, '5w' COLLATE NOCASE DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM v0, vt0 WHERE (CASE ((v0.c0) IS TRUE)  WHEN 'M,' THEN ((((((v0.c2)AND(vt0.c1)))OR(vt0.c0)))OR(v0.c0)) WHEN '-1506608069' THEN ((NULL)IS NOT(v0.c0)) WHEN 0Xffffffff9b5a5555 THEN ((vt0.c1)>>(-62875246)) END) ORDER BY TYPEOF(((vt0.c0)<=(v0.c0)))  NULLS FIRST, (((NOT (v0.c1)))GLOB((NOT (v0.c1))));
SELECT * FROM v0, vt0 WHERE (((CASE ((v0.c0) IS TRUE)  WHEN 'M,' THEN ((((((v0.c2)AND(vt0.c1)))OR(vt0.c0)))OR(v0.c0)) WHEN '-1506608069' THEN ((NULL)IS NOT(v0.c0)) WHEN -1688578731 THEN ((vt0.c1)>>(-62875246)) END)AND(((((((((vt0.c0) NOT NULL))AND(((0.8732967780265318)<('A')))))AND(((v0.c1) NOT BETWEEN (vt0.c1) AND (v0.c1)))))AND(((vt0.c1) ISNULL)))))) ORDER BY ((v0.c0) IS FALSE) COLLATE NOCASE, (((((vt0.c1 IN ()))AND(((((vt0.c1)AND(vt0.c1)))AND(v0.c2)))))OR(((vt0.c1)==(vt0.c0)))) LIMIT 0X0;
SELECT ALL * FROM v0, vt0 WHERE (CASE ((v0.c0) IS TRUE)  WHEN 'M,' THEN ((((((v0.c2)AND(vt0.c1)))OR(vt0.c0)))OR(v0.c0)) WHEN '-1506608069' THEN ((NULL)IS NOT(v0.c0)) WHEN 0Xffffffff9b5a5555 THEN ((vt0.c1)>>(-62875246)) END) ORDER BY TYPEOF(((vt0.c0)<=(v0.c0)))  NULLS FIRST, (((NOT (v0.c1)))GLOB((NOT (v0.c1))));
SELECT * FROM v0, vt0 WHERE (((CASE ((v0.c0) IS TRUE)  WHEN 'M,' THEN ((((((v0.c2)AND(vt0.c1)))OR(vt0.c0)))OR(v0.c0)) WHEN '-1506608069' THEN ((NULL)IS NOT(v0.c0)) WHEN -1688578731 THEN ((vt0.c1)>>(-62875246)) END)AND(((((((((vt0.c0) NOT NULL))AND(((0.8732967780265318)<('A')))))AND(((v0.c1) NOT BETWEEN (vt0.c1) AND (v0.c1)))))AND(((vt0.c1) ISNULL)))))) ORDER BY ((v0.c0) IS FALSE) COLLATE NOCASE, (((((vt0.c1 IN ()))AND(((((vt0.c1)AND(vt0.c1)))AND(v0.c2)))))OR(((vt0.c1)==(vt0.c0)))) LIMIT 0X0;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((vt0.c1)AND(((((0.863170157130883)<=(vt0.c1))) NOT BETWEEN (x'2e') AND ((vt0.c1 IN ())))))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS TEXT))) DESC LIMIT 0x4 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE NOCASE) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS TEXT))) DESC LIMIT 4;
SELECT MIN(t1.c0) FROM t1 WHERE (CASE WHEN COALESCE(DISTINCT 0.45233999123177093, t1.c0) THEN NULL ELSE ((t1.c0)<>(t1.c2)) END);
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((CASE WHEN COALESCE(DISTINCT 0.45233999123177093, t1.c0) THEN NULL ELSE ((t1.c0)!=(t1.c2)) END)AND(((CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c2 THEN t1.c1 END) IS TRUE)))) ORDER BY (((((((((((((t1.c1 IN ()))AND(0.7092110931840948)))OR(CAST('j칐pIg(c-' AS INTEGER))))AND('')))OR(((t1.c0)==(t1.c0)))))OR(t1.c1 COLLATE BINARY)))AND(t1.c2)) DESC INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((SQLITE_COMPILEOPTION_USED(t1.c0))AND(t1.c2))) ORDER BY (((((((((((((t1.c1 IN ()))AND(0.7092110931840948)))OR(CAST('j칐pIg(c-' AS INTEGER))))AND('')))OR(((t1.c0)==(t1.c0)))))OR(t1.c1 COLLATE BINARY)))AND(t1.c2)) DESC;
SELECT * FROM v0, vt0, t1 WHERE (((((vt0.c1)AND('(KK')))OR(((-1.88391506E8) BETWEEN (t1.c2) AND (v0.c1)))));
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((vt0.c1)AND('(KK')))OR(((-1.88391506E8) BETWEEN (t1.c2) AND (v0.c1)))))AND(0.29809173476160566))) ORDER BY ((CAST(vt0.c0 AS REAL)) IS TRUE) ASC  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))==(CAST(t1.c0 AS NUMERIC))) ASC, (((t1.c1) NOT NULL) IN (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE ((t1.c2 COLLATE NOCASE IN (((((((((((v0.c0)OR('2123096081')))OR(vt0.c0)))OR(x'f603')))AND('916717734')))AND(v0.c0)), (NOT (v0.c1)), t1.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS REAL)) IS TRUE) ASC  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))=(CAST(t1.c0 AS NUMERIC))) ASC, (((t1.c1) NOT NULL) IN (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST LIMIT 2;
SELECT * FROM v0, vt0, t1 WHERE (((((vt0.c1)AND('(KK')))OR(((-1.88391506E8) BETWEEN (t1.c2) AND (v0.c1)))));
SELECT ALL * FROM v0, vt0, t1 WHERE (((((((vt0.c1)AND('(KK')))OR(((-1.88391506E8) BETWEEN (t1.c2) AND (v0.c1)))))AND(0.29809173476160566))) ORDER BY ((CAST(vt0.c0 AS REAL)) IS TRUE) ASC  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))==(CAST(t1.c0 AS NUMERIC))) ASC, (((t1.c1) NOT NULL) IN (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE ((t1.c2 COLLATE NOCASE IN (((((((((((v0.c0)OR('2123096081')))OR(vt0.c0)))OR(x'f603')))AND('916717734')))AND(v0.c0)), (NOT (v0.c1)), t1.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS REAL)) IS TRUE) ASC  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))=(CAST(t1.c0 AS NUMERIC))) ASC, (((t1.c1) NOT NULL) IN (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST LIMIT 2;
SELECT * FROM t1, vt0 WHERE ((((((t1.c1)>>(vt0.c1)), CASE WHEN t1.c2 THEN t1.c0 END, CASE vt0.c1  WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN vt0.c0 ELSE vt0.c1 END, (((t1.c0, '4', x'a0')) NOT BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, t1.c0)))))<((CASE t1.c1  WHEN t1.c0 THEN vt0.c1 END, t1.c2 COLLATE RTRIM, t1.c2, vt0.c0))));
SELECT ALL * FROM t1, vt0 WHERE ((((((t1.c1)>>(vt0.c1)), CASE WHEN t1.c2 THEN t1.c0 END, CASE vt0.c1  WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN vt0.c0 ELSE vt0.c1 END, (((t1.c0, '4', x'a0')) NOT BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, t1.c0)))))<((CASE t1.c1  WHEN t1.c0 THEN vt0.c1 END, t1.c2 COLLATE RTRIM, t1.c2, vt0.c0)))) ORDER BY t1.c2  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1, vt0 WHERE ((((((t1.c1)>>(vt0.c1)), CASE WHEN t1.c2 THEN t1.c0 END, CASE vt0.c1  WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN vt0.c0 ELSE vt0.c1 END, (((t1.c0, '4', x'a0')) NOT BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, t1.c0)))))<((CASE t1.c1  WHEN t1.c0 THEN vt0.c1 END, t1.c2 COLLATE RTRIM, t1.c2, vt0.c0))));
SELECT ALL * FROM t1, vt0 WHERE ((((((t1.c1)>>(vt0.c1)), CASE WHEN t1.c2 THEN t1.c0 END, CASE vt0.c1  WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN vt0.c0 ELSE vt0.c1 END, (((t1.c0, '4', x'a0')) NOT BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, t1.c0)))))<((CASE t1.c1  WHEN t1.c0 THEN vt0.c1 END, t1.c2 COLLATE RTRIM, t1.c2, vt0.c0)))) ORDER BY t1.c2  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1, v0, vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN json_extract(t1.c2, v0.c1, t1.c2) WHEN ((vt0.c1) NOT NULL) THEN (NOT (v0.c2)) ELSE ((t1.c1) IS FALSE) END) ORDER BY vt0.c0 ASC, ((vt0.c1 IN (t1.c1, t1.c0)) IN ())  NULLS LAST;
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((CASE WHEN vt0.c0 COLLATE NOCASE THEN json_extract(t1.c2, v0.c1, t1.c2) WHEN ((vt0.c1) NOT NULL) THEN (NOT (v0.c2)) ELSE ((t1.c1) IS FALSE) END)AND(((CAST(vt0.c1 AS NUMERIC)) IS TRUE)))) ORDER BY t1.c0 ASC, (((x'' IN (t1.c0, vt0.c0)))AND((- (v0.c1))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1, v0, vt0 WHERE ((v0.c0 IN (v0.c2)) COLLATE BINARY) ORDER BY t1.c0 ASC, (((x'' IN (t1.c0, vt0.c0)))AND((- (v0.c1))))  NULLS FIRST;
SELECT * FROM t1, v0, vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN json_extract(t1.c2, v0.c1, t1.c2) WHEN ((vt0.c1) NOT NULL) THEN (NOT (v0.c2)) ELSE ((t1.c1) IS FALSE) END) ORDER BY vt0.c0 ASC, ((vt0.c1 IN (t1.c1, t1.c0)) IN ())  NULLS LAST;
SELECT MAX(v0.c1) FROM v0, vt0, t1 WHERE ((vt0.c1 COLLATE BINARY IN ())) ORDER BY 0xffffffffbec8982d DESC;
SELECT DISTINCT MAX(v0.c1) FROM v0, vt0, t1 WHERE ((((vt0.c1 COLLATE BINARY IN ()))AND(((((v0.c2)=(v0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 END) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2)))))))) ORDER BY (NOT ((((v0.c0, v0.c2, t1.c1, v0.c0)) BETWEEN ((t1.c2, x'425a7d', vt0.c1, v0.c1)) AND ((NULL, NULL, t1.c2, v0.c2))))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(v0.c1) FROM v0, vt0, t1 WHERE (CAST(NULLIF(DISTINCT t1.c2, vt0.c0) AS TEXT)) ORDER BY (NOT ((((v0.c0, v0.c2, t1.c1, v0.c0)) BETWEEN ((t1.c2, x'425a7d', vt0.c1, v0.c1)) AND ((NULL, NULL, t1.c2, v0.c2))))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, v0 WHERE (((v0.c0)*(v0.c1)) COLLATE RTRIM) ORDER BY (((v0.c1, v0.c2)) BETWEEN ((((1.250186722E9) IS TRUE), ((v0.c2)GLOB(NULL)))) AND ((CASE v0.c1  WHEN 'rᄺ' THEN t1.c0 WHEN v0.c2 THEN v0.c0 ELSE t1.c0 END, ((t1.c1) BETWEEN (t1.c0) AND (t1.c2))))), NULL;
SELECT DISTINCT * FROM t1, v0 WHERE (((((v0.c0)*(v0.c1)) COLLATE RTRIM)AND(v0.c1 COLLATE BINARY))) ORDER BY (((v0.c1, v0.c2)) BETWEEN ((((1.250186722E9) IS TRUE), ((v0.c2)GLOB(NULL)))) AND ((CASE v0.c1  WHEN 'rᄺ' THEN t1.c0 WHEN v0.c2 THEN v0.c0 ELSE t1.c0 END, ((t1.c1) BETWEEN (t1.c0) AND (t1.c2))))), NULL LIMIT 1;
SELECT ALL * FROM t1, v0 WHERE (((v0.c0)*(v0.c1)) COLLATE RTRIM) ORDER BY (((v0.c1, v0.c2)) BETWEEN ((((1.250186722E9) IS TRUE), ((v0.c2)GLOB(NULL)))) AND ((CASE v0.c1  WHEN 'rᄺ' THEN t1.c0 WHEN v0.c2 THEN v0.c0 ELSE t1.c0 END, ((t1.c1) BETWEEN (t1.c0) AND (t1.c2))))), NULL;
SELECT DISTINCT * FROM t1, v0 WHERE (((((v0.c0)*(v0.c1)) COLLATE RTRIM)AND(v0.c1 COLLATE BINARY))) ORDER BY (((v0.c1, v0.c2)) BETWEEN ((((1.250186722E9) IS TRUE), ((v0.c2)GLOB(NULL)))) AND ((CASE v0.c1  WHEN 'rᄺ' THEN t1.c0 WHEN v0.c2 THEN v0.c0 ELSE t1.c0 END, ((t1.c1) BETWEEN (t1.c0) AND (t1.c2))))), NULL LIMIT 1;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)/((v0.c2 IN ()))));
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)/((v0.c2 IN ()))))AND((((x'99d9', (+ (v0.c1)), v0.c2 COLLATE NOCASE))=(((v0.c1 IN (v0.c2)), CASE WHEN '969729598' THEN v0.c0 WHEN v0.c1 THEN v0.c2 ELSE NULL END, v0.c2)))))) ORDER BY (((+ (v0.c2))) NOT BETWEEN (v0.c1 COLLATE BINARY) AND (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))), v0.c1  NULLS LAST, ((json_patch(v0.c1, v0.c2)) ISNULL)  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM v0 WHERE (((v0.c1)LIKE(v0.c0)) COLLATE BINARY) ORDER BY (((+ (v0.c2))) NOT BETWEEN (v0.c1 COLLATE BINARY) AND (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))), v0.c1  NULLS LAST, ((json_patch(v0.c1, v0.c2)) ISNULL)  NULLS FIRST LIMIT 0;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)/((v0.c2 IN ()))));
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)/((v0.c2 IN ()))))AND((((x'99d9', (+ (v0.c1)), v0.c2 COLLATE NOCASE))=(((v0.c1 IN (v0.c2)), CASE WHEN '969729598' THEN v0.c0 WHEN v0.c1 THEN v0.c2 ELSE NULL END, v0.c2)))))) ORDER BY (((+ (v0.c2))) NOT BETWEEN (v0.c1 COLLATE BINARY) AND (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))), v0.c1  NULLS LAST, ((json_patch(v0.c1, v0.c2)) ISNULL)  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM v0 WHERE (((v0.c1)LIKE(v0.c0)) COLLATE BINARY) ORDER BY (((+ (v0.c2))) NOT BETWEEN (v0.c1 COLLATE BINARY) AND (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))), v0.c1  NULLS LAST, ((json_patch(v0.c1, v0.c2)) ISNULL)  NULLS FIRST LIMIT 0;
SELECT * FROM vt0, t1 WHERE ((NOT (CAST(t1.c1 AS TEXT))));
SELECT ALL * FROM vt0, t1 WHERE ((((NOT (CAST(t1.c1 AS TEXT))))AND(((CAST(vt0.c0 AS TEXT)) NOTNULL)))) LIMIT 0x1 INTERSECT SELECT * FROM vt0, t1 WHERE (NULL COLLATE NOCASE) LIMIT 1;
SELECT * FROM vt0, t1 WHERE ((NOT (CAST(t1.c1 AS TEXT))));
SELECT ALL * FROM vt0, t1 WHERE ((((NOT (CAST(t1.c1 AS TEXT))))AND(((CAST(vt0.c0 AS TEXT)) NOTNULL)))) LIMIT 0x1 INTERSECT SELECT * FROM vt0, t1 WHERE (NULL COLLATE NOCASE) LIMIT 1;
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON ((((((((((((vt0.c1) BETWEEN (v0.c0) AND (v0.c2)))OR((NOT (v0.c1)))))OR(((t1.c2)>=(t1.c1)))))OR('-665243049')))OR(NULLIF(DISTINCT vt0.c0, v0.c2))))OR(((x'd0')==(t1.c2)))) CROSS JOIN v0 ON t1.c1 WHERE ((((((((((t1.c2))<((t1.c0))))OR((((t1.c0, v0.c2)) NOT BETWEEN ((v0.c2, v0.c1)) AND ((vt0.c0, t1.c1))))))OR(v0.c1 COLLATE BINARY)))OR(CASE v0.c1  WHEN v0.c1 THEN t1.c2 WHEN t1.c1 THEN t1.c1 END))) ORDER BY CAST(v0.c2 COLLATE RTRIM AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON ((((((((((((vt0.c1) BETWEEN (v0.c0) AND (v0.c2)))OR((NOT (v0.c1)))))OR(((t1.c2)>=(t1.c1)))))OR('-665243049')))OR(NULLIF(DISTINCT vt0.c0, v0.c2))))OR(((x'd0')=(t1.c2)))) CROSS JOIN v0 ON t1.c1 WHERE ((((((((((t1.c2))<((t1.c0))))OR((((t1.c0, v0.c2)) NOT BETWEEN ((v0.c2, v0.c1)) AND ((vt0.c0, t1.c1))))))OR(v0.c1 COLLATE BINARY)))OR(CASE v0.c1  WHEN v0.c1 THEN t1.c2 WHEN t1.c1 THEN t1.c1 END))) ORDER BY HEX(NULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM v0, vt0 NATURAL JOIN t1 WHERE (CAST((((t1.c2, v0.c0))!=((t1.c1, '-728534455'))) AS REAL));
SELECT MAX(t1.c1) FROM v0, vt0 NATURAL JOIN t1 WHERE (((CAST((((t1.c2, v0.c0))!=((t1.c1, '-728534455'))) AS REAL))AND(CASE WHEN ABS(DISTINCT v0.c0) THEN v0.c2 COLLATE RTRIM WHEN (((v0.c0, t1.c1)) BETWEEN ((v0.c2, vt0.c0)) AND ((t1.c1, t1.c1))) THEN t1.c1 COLLATE BINARY WHEN CASE WHEN v0.c2 THEN 0.6831539244855179 ELSE x'' END THEN (((t1.c1)) NOT BETWEEN ((v0.c2)) AND ((t1.c0))) END))) LIMIT 0x1;
SELECT MIN(v0.c1) FROM v0, vt0, t1 WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((((((v0.c1)AND(v0.c2)))AND(vt0.c1)))OR(vt0.c1)))OR(t1.c1)) END) ORDER BY CASE WHEN ((vt0.c0)AND(v0.c2)) THEN ((v0.c0)+(v0.c2)) WHEN ((((((((0.5260933257322766)AND(t1.c0)))AND(v0.c2)))OR(0.6135776601337125)))OR(t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (v0.c1)) ELSE ((((((t1.c2)AND(v0.c1)))OR(v0.c2)))AND(t1.c2)) END  NULLS LAST, (CASE WHEN 0.3950821988419697 THEN vt0.c0 WHEN vt0.c0 THEN v0.c1 ELSE t1.c1 END IN ());
SELECT ALL MIN(v0.c1) FROM v0, vt0, t1 WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((((((v0.c1)AND(v0.c2)))AND(vt0.c1)))OR(vt0.c1)))OR(t1.c1)) END) ORDER BY CASE WHEN ((vt0.c0)AND(v0.c2)) THEN ((v0.c0)+(v0.c2)) WHEN ((((((((0.5260933257322766)AND(t1.c0)))AND(v0.c2)))OR(0.6135776601337125)))OR(t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (v0.c1)) ELSE ((((((t1.c2)AND(v0.c1)))OR(v0.c2)))AND(t1.c2)) END  NULLS LAST, (CASE WHEN 0.3950821988419697 THEN vt0.c0 WHEN vt0.c0 THEN v0.c1 ELSE t1.c1 END IN ()) LIMIT 0X1;
SELECT ALL MIN(v0.c0) FROM vt0, v0, t1 WHERE (((((((((t1.c0)OR(v0.c0)))OR(v0.c0)))AND(t1.c0)))&(v0.c0)));
SELECT DISTINCT MIN(v0.c0) FROM vt0, v0, t1 WHERE (((((((((((t1.c0)OR(v0.c0)))OR(v0.c0)))AND(t1.c0)))&(v0.c0)))AND(((((vt0.c0) NOT BETWEEN (vt0.c0) AND (1300078575))) BETWEEN (TRIM(DISTINCT v0.c2, vt0.c1)) AND ((+ (v0.c2))))))) ORDER BY ((v0.c0)>((+ (v0.c2)))) DESC, ((((((((CASE t1.c1  WHEN t1.c1 THEN vt0.c0 WHEN t1.c2 THEN v0.c2 END)OR(0x93bd9fa)))AND(((NULL) NOTNULL))))OR((~ (-1399201276)))))OR(CASE vt0.c1  WHEN t1.c0 THEN vt0.c1 WHEN t1.c1 THEN v0.c0 END)) DESC;
SELECT MAX(v0.c2) FROM v0 WHERE (((((((v0.c1)AND(v0.c1)))AND(CASE 0.5422397432676856  WHEN 0xffffffffeb6d47f1 THEN v0.c1 WHEN v0.c1 THEN NULL WHEN NULL THEN v0.c1 WHEN v0.c2 THEN v0.c2 END)))AND(CAST(v0.c2 AS NUMERIC)))) ORDER BY ((LIKELY(v0.c2)) IS FALSE) ASC  NULLS FIRST;
SELECT MAX(v0.c2) FROM v0 WHERE (((((((v0.c1)AND(v0.c1)))AND(CASE 0.5422397432676856  WHEN -345159695 THEN v0.c1 WHEN v0.c1 THEN NULL WHEN NULL THEN v0.c1 WHEN v0.c2 THEN v0.c2 END)))AND(CAST(v0.c2 AS NUMERIC)))) ORDER BY (((((v0.c0, v0.c1, v0.c1, v0.c0, v0.c1))>((v0.c2, v0.c2, '803306022', v0.c0, v0.c1)))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (v0.c2 COLLATE NOCASE))  NULLS LAST INTERSECT SELECT MAX(v0.c2) FROM v0 WHERE ((((v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, (((v0.c2))<>((v0.c0))))) AND (((((v0.c1, v0.c1)) NOT BETWEEN ((v0.c2, v0.c2)) AND ((v0.c0, v0.c2))), (+ (v0.c1)))))) ORDER BY (((((v0.c0, v0.c1, v0.c1, v0.c0, v0.c1))>((v0.c2, v0.c2, '803306022', v0.c0, v0.c1)))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (v0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT MIN(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY CASE WHEN (x'' IN (x'48', NULL)) THEN (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c2, t1.c0))) ELSE CASE WHEN t1.c1 THEN t1.c2 END END  NULLS FIRST, ((((((((t1.c1)OR('-1403090057')))OR(t1.c2)))OR(t1.c1))) IS TRUE)  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE (t1.c1) ORDER BY CASE WHEN (x'' IN (x'48', NULL)) THEN (((t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((t1.c0, t1.c2, t1.c0))) ELSE CASE WHEN t1.c1 THEN t1.c2 END END  NULLS FIRST, ((((((((t1.c1)OR('-1403090057')))OR(t1.c2)))OR(t1.c1))) IS TRUE)  NULLS FIRST LIMIT 0x0;
SELECT ALL MAX(v0.c2) FROM vt0 CROSS JOIN v0 ON vt0.c0 WHERE (x'2b');
SELECT ALL MAX(v0.c2) FROM vt0 CROSS JOIN v0 ON vt0.c0 WHERE (x'2b');
SELECT ALL MAX(t1.c2) FROM t1 WHERE (((((((((t1.c2)OR(t1.c0)))OR(t1.c0)))AND(t1.c0))) NOT BETWEEN (TYPEOF(DISTINCT t1.c0)) AND (LOWER(DISTINCT t1.c0))));
SELECT DISTINCT MAX(t1.c2) FROM t1 WHERE (((((((((((t1.c2)OR(t1.c0)))OR(t1.c0)))AND(t1.c0))) NOT BETWEEN (TYPEOF(DISTINCT t1.c0)) AND (LOWER(DISTINCT t1.c0))))AND(t1.c1 COLLATE NOCASE COLLATE BINARY))) ORDER BY (((t1.c1, t1.c1, t1.c1, t1.c0)) NOT BETWEEN ((((t1.c1) IS FALSE), (t1.c2 IN (t1.c2, t1.c2)), (x'' IN ('')), ((t1.c0)&(t1.c0)))) AND ((CAST(t1.c0 AS TEXT), IFNULL(DISTINCT t1.c0, t1.c2), ((t1.c0) BETWEEN (t1.c2) AND (t1.c2)), CAST(t1.c1 AS NUMERIC)))) ASC, ((LOWER(DISTINCT '**>F-U'))==('502176025'))  NULLS LAST, x'd778'  NULLS LAST, (((t1.c0 IN ())) NOT BETWEEN ((NOT (t1.c2))) AND (x'dbc0')) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL MIN(v0.c0) FROM vt0, v0 LEFT OUTER JOIN t1 ON (((vt0.c1, vt0.c0, vt0.c1, v0.c2, vt0.c1, v0.c1)) BETWEEN ((((t1.c0) NOT BETWEEN (v0.c1) AND (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c1 END, (NOT (vt0.c1)), CASE 0.559032630005835  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN t1.c0 WHEN v0.c1 THEN t1.c1 END, x'53' COLLATE NOCASE, ((((((((((t1.c2)OR(v0.c1)))AND(t1.c0)))AND(t1.c1)))AND(v0.c1)))OR(v0.c0)))) AND ((((t1.c1) NOT BETWEEN (t1.c0) AND (v0.c2)), (((v0.c2, vt0.c1, v0.c1))<((vt0.c0, 0Xffffffffc8ba08b3, vt0.c0))), (- (v0.c1)), (NOT (t1.c1)), '', CASE t1.c2  WHEN v0.c1 THEN t1.c0 ELSE v0.c2 END))) WHERE ((~ ((vt0.c0 IN ())))) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CASE WHEN v0.c2 THEN t1.c2 END) AND (v0.c2)) DESC;
SELECT DISTINCT MIN(v0.c0) FROM vt0, v0 INNER JOIN t1 ON (((vt0.c1, vt0.c0, vt0.c1, v0.c2, vt0.c1, v0.c1)) BETWEEN ((((t1.c0) NOT BETWEEN (v0.c1) AND (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c1 END, (NOT (vt0.c1)), CASE 0.559032630005835  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN t1.c0 WHEN v0.c1 THEN t1.c1 END, x'53' COLLATE NOCASE, ((((((((((t1.c2)OR(v0.c1)))AND(t1.c0)))AND(t1.c1)))AND(v0.c1)))OR(v0.c0)))) AND ((((t1.c1) NOT BETWEEN (t1.c0) AND (v0.c2)), (((v0.c2, vt0.c1, v0.c1))<((vt0.c0, -927332173, vt0.c0))), (- (v0.c1)), (NOT (t1.c1)), '', CASE t1.c2  WHEN v0.c1 THEN t1.c0 ELSE v0.c2 END))) WHERE ((~ ((vt0.c0 IN ())))) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c2 ELSE vt0.c1 END) NOT BETWEEN (((v0.c2)IS NOT(0.11073861697740517))) AND (t1.c2)) ASC, ((((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c2)))>=((vt0.c1 IN ())))  NULLS LAST LIMIT 2;
SELECT ALL * FROM vt0, t1, v0 WHERE (((((((((v0.c1)OR(v0.c2)))OR(vt0.c0)))AND(t1.c1)))/(((v0.c1)||(vt0.c0))))) ORDER BY t1.c1;
SELECT ALL * FROM vt0, t1, v0 WHERE (((((((((((v0.c1)OR(v0.c2)))OR(vt0.c0)))AND(t1.c1)))/(((v0.c1)||(vt0.c0)))))AND(CAST(((v0.c1) NOT NULL) AS NUMERIC)))) ORDER BY (((((v0.c2, v0.c1)) BETWEEN ((vt0.c1, t1.c1)) AND ((t1.c1, vt0.c0)))) BETWEEN (((0.27649840289221816)>(v0.c2))) AND (((NULL)-(v0.c1)))) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM vt0, t1, v0 WHERE (((((((((v0.c1)OR(v0.c2)))OR(vt0.c0)))AND(t1.c1)))/(((v0.c1)||(vt0.c0))))) ORDER BY t1.c1;
SELECT ALL * FROM vt0, t1, v0 WHERE (((((((((((v0.c1)OR(v0.c2)))OR(vt0.c0)))AND(t1.c1)))/(((v0.c1)||(vt0.c0)))))AND(CAST(((v0.c1) NOT NULL) AS NUMERIC)))) ORDER BY (((((v0.c2, v0.c1)) BETWEEN ((vt0.c1, t1.c1)) AND ((t1.c1, vt0.c0)))) BETWEEN (((0.27649840289221816)>(v0.c2))) AND (((NULL)-(v0.c1)))) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1 CROSS JOIN v0 ON HEX(((v0.c0) NOT BETWEEN (v0.c1) AND (t1.c2))) WHERE (json_insert(((t1.c1) BETWEEN (v0.c0) AND (t1.c0)), t1.c1, (t1.c1 IN ())));
SELECT * FROM t1 CROSS JOIN v0 ON HEX(((v0.c0) NOT BETWEEN (v0.c1) AND (t1.c2))) WHERE (((json_insert(((t1.c1) BETWEEN (v0.c0) AND (t1.c0)), t1.c1, (t1.c1 IN ())))AND((~ (((((((((t1.c0)OR(t1.c2)))AND(t1.c1)))AND(t1.c0)))AND(t1.c1))))))) ORDER BY (((((v0.c1, t1.c2)) BETWEEN ((v0.c0, v0.c2)) AND ((t1.c1, v0.c0)))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND ((v0.c0 IN ()))), ((((((((((('1538706324', v0.c0)) NOT BETWEEN ((v0.c1, v0.c1)) AND ((t1.c2, t1.c0))))OR(((0.30822359741144023) BETWEEN (t1.c1) AND (t1.c0)))))AND(((((t1.c2)AND(0.5892185438242424)))AND(t1.c1)))))AND(v0.c0)))AND(t1.c1)) ASC, ((((((((((((t1.c2) IS FALSE))AND((NOT (t1.c0)))))AND(CAST(t1.c0 AS REAL))))AND(CAST(v0.c1 AS BLOB))))AND(((v0.c1) BETWEEN (t1.c2) AND (t1.c1)))))AND(CAST(v0.c2 AS TEXT))) ASC LIMIT 0X3;
SELECT ALL * FROM t1 CROSS JOIN v0 ON HEX(((v0.c0) NOT BETWEEN (v0.c1) AND (t1.c2))) WHERE (json_insert(((t1.c1) BETWEEN (v0.c0) AND (t1.c0)), t1.c1, (t1.c1 IN ())));
SELECT ALL MIN(t1.c0) FROM t1 WHERE (CASE WHEN (t1.c2 IN ()) THEN ((t1.c2)>>(t1.c1)) ELSE (((((((((('-430116177')OR(t1.c1)))OR(t1.c1)))OR(NULL)))AND(t1.c1)))OR(t1.c1)) END);
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CASE WHEN (t1.c2 IN ()) THEN ((t1.c2)>>(t1.c1)) ELSE (((((((((('-430116177')OR(t1.c1)))OR(t1.c1)))OR(NULL)))AND(t1.c1)))OR(t1.c1)) END) ORDER BY 'H' ASC LIMIT 0X2 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CAST(((((t1.c2)OR(t1.c2)))AND(t1.c2)) AS REAL)) ORDER BY 'H' ASC LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (CAST(('d0N' IN ()) AS REAL));
SELECT * FROM t1 WHERE (CAST(('d0N' IN ()) AS REAL)) ORDER BY (+ (json(t1.c2))) ASC  NULLS LAST, CASE t1.c0  WHEN ((t1.c1)+(t1.c0)) THEN CASE t1.c2  WHEN t1.c2 THEN t1.c0 END WHEN LIKE(t1.c1, t1.c0, 'x') THEN t1.c1 COLLATE BINARY WHEN t1.c2 COLLATE BINARY THEN t1.c1 END  NULLS FIRST, CAST(t1.c0 COLLATE RTRIM AS REAL)  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL * FROM t1 WHERE ('-1393225757') ORDER BY (+ (json(t1.c2))) ASC  NULLS LAST, CASE t1.c0  WHEN ((t1.c1)+(t1.c0)) THEN CASE t1.c2  WHEN t1.c2 THEN t1.c0 END WHEN LIKE(t1.c1, t1.c0, 'x') THEN t1.c1 COLLATE BINARY WHEN t1.c2 COLLATE BINARY THEN t1.c1 END  NULLS FIRST, CAST(t1.c0 COLLATE RTRIM AS REAL)  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (CAST(('d0N' IN ()) AS REAL));
SELECT * FROM t1 WHERE (CAST(('d0N' IN ()) AS REAL)) ORDER BY (+ (json(t1.c2))) ASC  NULLS LAST, CASE t1.c0  WHEN ((t1.c1)+(t1.c0)) THEN CASE t1.c2  WHEN t1.c2 THEN t1.c0 END WHEN LIKE(t1.c1, t1.c0, 'x') THEN t1.c1 COLLATE BINARY WHEN t1.c2 COLLATE BINARY THEN t1.c1 END  NULLS FIRST, CAST(t1.c0 COLLATE RTRIM AS REAL)  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL * FROM t1 WHERE ('-1393225757') ORDER BY (+ (json(t1.c2))) ASC  NULLS LAST, CASE t1.c0  WHEN ((t1.c1)+(t1.c0)) THEN CASE t1.c2  WHEN t1.c2 THEN t1.c0 END WHEN LIKE(t1.c1, t1.c0, 'x') THEN t1.c1 COLLATE BINARY WHEN t1.c2 COLLATE BINARY THEN t1.c1 END  NULLS FIRST, CAST(t1.c0 COLLATE RTRIM AS REAL)  NULLS LAST LIMIT 0;
SELECT ALL MIN(v0.c2) FROM v0 WHERE ((+ (v0.c0)) COLLATE RTRIM) ORDER BY ((v0.c1) NOTNULL) COLLATE RTRIM ASC  NULLS LAST, CHANGES() COLLATE RTRIM, ((((((((CHAR(v0.c2))AND(LOWER(v0.c2))))OR((+ (v0.c1)))))AND(TRIM(DISTINCT v0.c2))))AND(CAST(v0.c1 AS INTEGER)))  NULLS LAST;
SELECT DISTINCT MIN(v0.c2) FROM v0 WHERE ((((+ (v0.c0)) COLLATE RTRIM)AND(((((((CAST(v0.c0 AS REAL))AND(TRIM(v0.c2))))AND((v0.c1 IN (v0.c1)))))AND(CAST(v0.c2 AS NUMERIC)))))) ORDER BY CAST('146561120' AS TEXT)  NULLS LAST, (('523232410' COLLATE NOCASE)-(CAST(v0.c2 AS INTEGER))) DESC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT MIN(v0.c2) FROM v0 WHERE (((((((HEX(DISTINCT v0.c0))OR(((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))))OR(((1579820152) ISNULL))))OR(CAST(v0.c1 AS TEXT)))) ORDER BY CAST('146561120' AS TEXT)  NULLS LAST, (('523232410' COLLATE NOCASE)-(CAST(v0.c2 AS INTEGER))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM v0 CROSS JOIN vt0 ON vt0.c0 WHERE (CAST(((v0.c2)&(v0.c1)) AS NUMERIC));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON vt0.c0 WHERE (((CAST(((v0.c2)&(v0.c1)) AS NUMERIC))AND(NULL))) ORDER BY v0.c2  NULLS FIRST INTERSECT SELECT ALL * FROM v0 CROSS JOIN vt0 ON vt0.c0 WHERE ((+ (HEX(DISTINCT '-1109360100')))) ORDER BY v0.c2  NULLS FIRST;
SELECT * FROM v0 CROSS JOIN vt0 ON vt0.c0 WHERE (CAST(((v0.c2)&(v0.c1)) AS NUMERIC));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON vt0.c0 WHERE (((CAST(((v0.c2)&(v0.c1)) AS NUMERIC))AND(NULL))) ORDER BY v0.c2  NULLS FIRST INTERSECT SELECT ALL * FROM v0 CROSS JOIN vt0 ON vt0.c0 WHERE ((+ (HEX(DISTINCT '-1109360100')))) ORDER BY v0.c2  NULLS FIRST;
SELECT ALL * FROM t1, v0 NATURAL JOIN vt0 WHERE (((0.998077764038698)>>(CAST(t1.c0 AS REAL)))) ORDER BY ((((((((((v0.c0)OR(((t1.c2)<>(v0.c2)))))OR(CAST(x'' AS TEXT))))OR(((('', vt0.c0, v0.c2))>((v0.c0, vt0.c0, v0.c0))))))OR(v0.c0 COLLATE BINARY)))OR(t1.c2))  NULLS FIRST, ((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE) DESC, (((v0.c2, t1.c1)) NOT BETWEEN ((CASE v0.c2  WHEN -1678902741 THEN v0.c0 ELSE v0.c2 END, (+ (vt0.c0)))) AND (((- (vt0.c1)), JULIANDAY(v0.c1, t1.c0, v0.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((0.998077764038698)>>(CAST(t1.c0 AS REAL)))) ORDER BY (((v0.c2 IN ())) BETWEEN (t1.c0 COLLATE BINARY) AND (t1.c1)) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1, v0 NATURAL JOIN vt0 WHERE (CAST(((v0.c2) NOTNULL) AS NUMERIC)) ORDER BY (((v0.c2 IN ())) BETWEEN (t1.c0 COLLATE BINARY) AND (t1.c1)) LIMIT 0X0;
SELECT ALL * FROM t1, v0 NATURAL JOIN vt0 WHERE (((0.998077764038698)>>(CAST(t1.c0 AS REAL)))) ORDER BY ((((((((((v0.c0)OR(((t1.c2)<>(v0.c2)))))OR(CAST(x'' AS TEXT))))OR(((('', vt0.c0, v0.c2))>((v0.c0, vt0.c0, v0.c0))))))OR(v0.c0 COLLATE BINARY)))OR(t1.c2))  NULLS FIRST, ((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE) DESC, (((v0.c2, t1.c1)) NOT BETWEEN ((CASE v0.c2  WHEN -1678902741 THEN v0.c0 ELSE v0.c2 END, (+ (vt0.c0)))) AND (((- (vt0.c1)), JULIANDAY(v0.c1, t1.c0, v0.c0)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((0.998077764038698)>>(CAST(t1.c0 AS REAL)))) ORDER BY (((v0.c2 IN ())) BETWEEN (t1.c0 COLLATE BINARY) AND (t1.c1)) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1, v0 NATURAL JOIN vt0 WHERE (CAST(((v0.c2) NOTNULL) AS NUMERIC)) ORDER BY (((v0.c2 IN ())) BETWEEN (t1.c0 COLLATE BINARY) AND (t1.c1)) LIMIT 0X0;
SELECT ALL MAX(vt0.c1) FROM v0 INNER JOIN vt0 ON (- (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))) WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)))|((NOT (v0.c2)))));
SELECT DISTINCT MAX(vt0.c1) FROM v0 INNER JOIN vt0 ON (- (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))) WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)))|((NOT (v0.c2)))))AND(((((vt0.c1)<<(NULL)))!=((vt0.c1 IN ()))))));
SELECT ALL * FROM vt0 WHERE (TIME(((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(0.9442470025858413)), vt0.c1 COLLATE RTRIM, (~ (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL * FROM vt0 WHERE (((TIME(((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(0.9442470025858413)), vt0.c1 COLLATE RTRIM, (~ (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 END))AND(CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)))) LIMIT 2;
SELECT ALL * FROM vt0 WHERE (TIME(((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(0.9442470025858413)), vt0.c1 COLLATE RTRIM, (~ (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL * FROM vt0 WHERE (((TIME(((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(0.9442470025858413)), vt0.c1 COLLATE RTRIM, (~ (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 END))AND(CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)))) LIMIT 2;
SELECT ALL COUNT(*) FROM t1, v0 WHERE (((TYPEOF(NULL)) NOT BETWEEN ((((t1.c1, v0.c0)) BETWEEN ((t1.c2, v0.c0)) AND ((v0.c2, NULL)))) AND (((((1.040163858E9)OR(t1.c2)))OR(v0.c0)))));
SELECT COUNT(*) FROM t1, v0 WHERE (((TYPEOF(NULL)) NOT BETWEEN ((((t1.c1, v0.c0)) BETWEEN ((t1.c2, v0.c0)) AND ((v0.c2, NULL)))) AND (((((1.040163858E9)OR(t1.c2)))OR(v0.c0))))) ORDER BY ((((v0.c0)>=(v0.c0)))>>(v0.c2 COLLATE RTRIM)), (NOT (NULL)) DESC;
SELECT ALL MAX(vt0.c1) FROM t1, vt0 WHERE (((t1.c1) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (CASE WHEN '	e0' THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN vt0.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END)));
SELECT DISTINCT MAX(vt0.c1) FROM t1, vt0 WHERE (((t1.c1) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (CASE WHEN '	e0' THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN vt0.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))) ORDER BY ((((0.7840278911575583)>=(t1.c2))) NOTNULL) ASC  NULLS FIRST, (((((('506629186')AND(vt0.c1)))AND(((vt0.c0)*(t1.c2)))))AND((((NULL))!=((t1.c2))))) DESC  NULLS FIRST;
SELECT MAX(v0.c2) FROM v0 WHERE ((- (''))) ORDER BY ((((v0.c0)|(v0.c2))) BETWEEN ((x'c1f1' IN (v0.c0))) AND ((- (v0.c2)))) ASC  NULLS LAST, CAST(CASE WHEN v0.c1 THEN x'1e' END AS BLOB);
SELECT ALL MAX(v0.c2) FROM v0 WHERE ((- (''))) ORDER BY ((((v0.c0)|(v0.c2))) BETWEEN ((x'c1f1' IN (v0.c0))) AND ((- (v0.c2)))) ASC  NULLS LAST, CAST(CASE WHEN v0.c1 THEN x'1e' END AS BLOB);
SELECT ALL MIN(vt0.c0) FROM t1, v0, vt0 WHERE (UPPER(DISTINCT ((vt0.c1) BETWEEN (vt0.c1) AND (v0.c1)))) ORDER BY ((t1.c2 COLLATE BINARY)IS(756191038)), '
BJOVp
'  NULLS LAST;
SELECT DISTINCT MIN(vt0.c0) FROM t1, v0, vt0 WHERE (((UPPER(DISTINCT ((vt0.c1) BETWEEN (vt0.c1) AND (v0.c1))))AND(v0.c2))) ORDER BY (((((t1.c2)-(x'de'))))<((((t1.c1) NOT BETWEEN (t1.c2) AND (v0.c2))))) DESC, ((vt0.c1)AND(((v0.c2) BETWEEN (0Xffffffff9e7db028) AND (vt0.c0)))) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM t1, v0, vt0 WHERE (((CAST('& p' AS REAL)) BETWEEN (v0.c0 COLLATE NOCASE) AND ((+ (v0.c2))))) ORDER BY (((((t1.c2)-(x'de'))))<((((t1.c1) NOT BETWEEN (t1.c2) AND (v0.c2))))) DESC, ((vt0.c1)AND(((v0.c2) BETWEEN (0xffffffff9e7db028) AND (vt0.c0)))) ASC  NULLS FIRST LIMIT 0X1;
SELECT * FROM v0 WHERE ((((x'557f')) NOT BETWEEN (((((v0.c2, v0.c0)) NOT BETWEEN ((v0.c0, v0.c1)) AND ((v0.c0, v0.c1))))) AND ((TRIM(v0.c1, x'')))));
SELECT * FROM v0 WHERE ((((x'557f')) NOT BETWEEN (((((v0.c2, v0.c0)) NOT BETWEEN ((v0.c0, v0.c1)) AND ((v0.c0, v0.c1))))) AND ((TRIM(v0.c1, x'')))));
SELECT * FROM v0 WHERE ((((x'557f')) NOT BETWEEN (((((v0.c2, v0.c0)) NOT BETWEEN ((v0.c0, v0.c1)) AND ((v0.c0, v0.c1))))) AND ((TRIM(v0.c1, x'')))));
SELECT * FROM v0 WHERE ((((x'557f')) NOT BETWEEN (((((v0.c2, v0.c0)) NOT BETWEEN ((v0.c0, v0.c1)) AND ((v0.c0, v0.c1))))) AND ((TRIM(v0.c1, x'')))));
SELECT ALL * FROM t1 NOT INDEXED, v0, vt0 WHERE ('-2080115895');
SELECT DISTINCT * FROM t1, v0, vt0 WHERE ('-2080115895');
SELECT ALL * FROM t1 NOT INDEXED, v0, vt0 WHERE ('-2080115895');
SELECT DISTINCT * FROM t1, v0, vt0 WHERE ('-2080115895');
SELECT ALL * FROM vt0, v0, t1 WHERE ((((((((((((v0.c2 IN ()))OR(((NULL)OR(t1.c1)))))AND(((v0.c1)|(vt0.c1)))))OR(((t1.c2) IS TRUE))))OR(((((((((((((t1.c2)OR(0.6747355975601819)))AND(v0.c2)))AND('115292246')))AND(v0.c2)))AND(t1.c2)))AND(v0.c1)))))AND(CASE WHEN vt0.c1 THEN x'a5' WHEN 0Xffffffffb9c9e79e THEN t1.c1 END)));
SELECT * FROM vt0, v0, t1 WHERE ((((((((((((v0.c2 IN ()))OR(((NULL)OR(t1.c1)))))AND(((v0.c1)|(vt0.c1)))))OR(((t1.c2) IS TRUE))))OR(((((((((((((t1.c2)OR(0.6747355975601819)))AND(v0.c2)))AND('115292246')))AND(v0.c2)))AND(t1.c2)))AND(v0.c1)))))AND(CASE WHEN vt0.c1 THEN x'a5' WHEN 0xffffffffb9c9e79e THEN t1.c1 END))) LIMIT 0 INTERSECT SELECT ALL * FROM vt0, v0, t1 WHERE (v0.c1) LIMIT 0X0;
SELECT ALL * FROM vt0, v0, t1 WHERE ((((((((((((v0.c2 IN ()))OR(((NULL)OR(t1.c1)))))AND(((v0.c1)|(vt0.c1)))))OR(((t1.c2) IS TRUE))))OR(((((((((((((t1.c2)OR(0.6747355975601819)))AND(v0.c2)))AND('115292246')))AND(v0.c2)))AND(t1.c2)))AND(v0.c1)))))AND(CASE WHEN vt0.c1 THEN x'a5' WHEN 0Xffffffffb9c9e79e THEN t1.c1 END)));
SELECT * FROM vt0, v0, t1 WHERE ((((((((((((v0.c2 IN ()))OR(((NULL)OR(t1.c1)))))AND(((v0.c1)|(vt0.c1)))))OR(((t1.c2) IS TRUE))))OR(((((((((((((t1.c2)OR(0.6747355975601819)))AND(v0.c2)))AND('115292246')))AND(v0.c2)))AND(t1.c2)))AND(v0.c1)))))AND(CASE WHEN vt0.c1 THEN x'a5' WHEN 0xffffffffb9c9e79e THEN t1.c1 END))) LIMIT 0 INTERSECT SELECT ALL * FROM vt0, v0, t1 WHERE (v0.c1) LIMIT 0X0;
SELECT * FROM vt0 INNER JOIN t1 ON (('y/' COLLATE NOCASE)IS(CASE t1.c2  WHEN v0.c0 THEN vt0.c0 WHEN t1.c0 THEN v0.c2 END)) NATURAL JOIN v0 WHERE (((((v0.c2) NOT BETWEEN (t1.c0) AND (v0.c2))) IS TRUE));
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON (('y/' COLLATE NOCASE)IS(CASE t1.c2  WHEN v0.c0 THEN vt0.c0 WHEN t1.c0 THEN v0.c2 END)) NATURAL JOIN v0 WHERE (((((v0.c2) NOT BETWEEN (t1.c0) AND (v0.c2))) IS TRUE));
SELECT * FROM vt0 INNER JOIN t1 ON (('y/' COLLATE NOCASE)IS(CASE t1.c2  WHEN v0.c0 THEN vt0.c0 WHEN t1.c0 THEN v0.c2 END)) NATURAL JOIN v0 WHERE (((((v0.c2) NOT BETWEEN (t1.c0) AND (v0.c2))) IS TRUE));
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON (('y/' COLLATE NOCASE)IS(CASE t1.c2  WHEN v0.c0 THEN vt0.c0 WHEN t1.c0 THEN v0.c2 END)) NATURAL JOIN v0 WHERE (((((v0.c2) NOT BETWEEN (t1.c0) AND (v0.c2))) IS TRUE));
SELECT * FROM v0, t1 CROSS JOIN vt0 ON (v0.c2 COLLATE BINARY IN ()) WHERE ((('쵔' COLLATE BINARY) NOT BETWEEN (x'1b2409') AND (CAST(v0.c2 AS NUMERIC)))) ORDER BY (NOT (ABS(v0.c1))) ASC, ((((((((((t1.c2)AND(t1.c0)))AND(vt0.c0)))AND(NULL)))AND((t1.c1 IN (v0.c0)))))AND(t1.c2)) ASC;
SELECT DISTINCT * FROM v0, t1 CROSS JOIN vt0 ON (v0.c2 COLLATE BINARY IN ()) WHERE ((((('쵔' COLLATE BINARY) NOT BETWEEN (x'1b2409') AND (CAST(v0.c2 AS NUMERIC))))AND(CAST(((t1.c2)<<(-1610344579)) AS TEXT)))) ORDER BY (((t1.c2) IS FALSE) IN (((vt0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC, CAST(x'1af9' AS INTEGER) ASC  NULLS LAST, ABS(CASE v0.c2  WHEN vt0.c1 THEN v0.c0 WHEN t1.c2 THEN 't?샔i08hUn' END)  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0, t1 NOT INDEXED CROSS JOIN vt0 ON (v0.c2 COLLATE BINARY IN ()) WHERE ((vt0.c1 IN ((((t1.c1, v0.c1))<=((v0.c2, t1.c1)))))) ORDER BY (((t1.c2) IS FALSE) IN (((vt0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC, CAST(x'1af9' AS INTEGER) ASC  NULLS LAST, ABS(CASE v0.c2  WHEN vt0.c1 THEN v0.c0 WHEN t1.c2 THEN 't?샔i08hUn' END)  NULLS FIRST LIMIT 0X1;
SELECT * FROM v0, t1 CROSS JOIN vt0 ON (v0.c2 COLLATE BINARY IN ()) WHERE ((('쵔' COLLATE BINARY) NOT BETWEEN (x'1b2409') AND (CAST(v0.c2 AS NUMERIC)))) ORDER BY (NOT (ABS(v0.c1))) ASC, ((((((((((t1.c2)AND(t1.c0)))AND(vt0.c0)))AND(NULL)))AND((t1.c1 IN (v0.c0)))))AND(t1.c2)) ASC;
SELECT DISTINCT * FROM v0, t1 CROSS JOIN vt0 ON (v0.c2 COLLATE BINARY IN ()) WHERE ((((('쵔' COLLATE BINARY) NOT BETWEEN (x'1b2409') AND (CAST(v0.c2 AS NUMERIC))))AND(CAST(((t1.c2)<<(-1610344579)) AS TEXT)))) ORDER BY (((t1.c2) IS FALSE) IN (((vt0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC, CAST(x'1af9' AS INTEGER) ASC  NULLS LAST, ABS(CASE v0.c2  WHEN vt0.c1 THEN v0.c0 WHEN t1.c2 THEN 't?샔i08hUn' END)  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0, t1 NOT INDEXED CROSS JOIN vt0 ON (v0.c2 COLLATE BINARY IN ()) WHERE ((vt0.c1 IN ((((t1.c1, v0.c1))<=((v0.c2, t1.c1)))))) ORDER BY (((t1.c2) IS FALSE) IN (((vt0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC, CAST(x'1af9' AS INTEGER) ASC  NULLS LAST, ABS(CASE v0.c2  WHEN vt0.c1 THEN v0.c0 WHEN t1.c2 THEN 't?샔i08hUn' END)  NULLS FIRST LIMIT 0X1;
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON (((((vt0.c1))>((t1.c2))))<(((((((((vt0.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c2)))) WHERE (CASE ((((((((1655392907)AND(vt0.c1)))OR(t1.c1)))OR(t1.c2)))AND(vt0.c1))  WHEN x'7d' THEN CASE vt0.c1  WHEN t1.c1 THEN NULL WHEN t1.c2 THEN t1.c0 WHEN t1.c2 THEN vt0.c1 WHEN vt0.c0 THEN NULL END WHEN t1.c0 COLLATE BINARY THEN (vt0.c1 IN (NULL)) ELSE ((t1.c0) NOT NULL) END) ORDER BY (((((((((t1.c2)) BETWEEN ((t1.c0)) AND ((t1.c1))))OR(((t1.c1)>=(t1.c0)))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((((t1.c0, vt0.c0))>=((t1.c1, vt0.c0))))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t1 ON (((((vt0.c1))>((t1.c2))))<(((((((((vt0.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c2)))) WHERE (CASE ((((((((0x62ab4a8b)AND(vt0.c1)))OR(t1.c1)))OR(t1.c2)))AND(vt0.c1))  WHEN x'7d' THEN CASE vt0.c1  WHEN t1.c1 THEN NULL WHEN t1.c2 THEN t1.c0 WHEN t1.c2 THEN vt0.c1 WHEN vt0.c0 THEN NULL END WHEN t1.c0 COLLATE BINARY THEN (vt0.c1 IN (NULL)) ELSE ((t1.c0) NOT NULL) END) ORDER BY (((((((((t1.c2)) BETWEEN ((t1.c0)) AND ((t1.c1))))OR(((t1.c1)>=(t1.c0)))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((((t1.c0, vt0.c0))>=((t1.c1, vt0.c0))))) ASC  NULLS LAST LIMIT 2;
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON (((((vt0.c1))>((t1.c2))))<(((((((((vt0.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c2)))) WHERE (CASE ((((((((1655392907)AND(vt0.c1)))OR(t1.c1)))OR(t1.c2)))AND(vt0.c1))  WHEN x'7d' THEN CASE vt0.c1  WHEN t1.c1 THEN NULL WHEN t1.c2 THEN t1.c0 WHEN t1.c2 THEN vt0.c1 WHEN vt0.c0 THEN NULL END WHEN t1.c0 COLLATE BINARY THEN (vt0.c1 IN (NULL)) ELSE ((t1.c0) NOT NULL) END) ORDER BY (((((((((t1.c2)) BETWEEN ((t1.c0)) AND ((t1.c1))))OR(((t1.c1)>=(t1.c0)))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((((t1.c0, vt0.c0))>=((t1.c1, vt0.c0))))) ASC  NULLS LAST;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t1 ON (((((vt0.c1))>((t1.c2))))<(((((((((vt0.c0)AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c2)))) WHERE (CASE ((((((((0x62ab4a8b)AND(vt0.c1)))OR(t1.c1)))OR(t1.c2)))AND(vt0.c1))  WHEN x'7d' THEN CASE vt0.c1  WHEN t1.c1 THEN NULL WHEN t1.c2 THEN t1.c0 WHEN t1.c2 THEN vt0.c1 WHEN vt0.c0 THEN NULL END WHEN t1.c0 COLLATE BINARY THEN (vt0.c1 IN (NULL)) ELSE ((t1.c0) NOT NULL) END) ORDER BY (((((((((t1.c2)) BETWEEN ((t1.c0)) AND ((t1.c1))))OR(((t1.c1)>=(t1.c0)))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((((t1.c0, vt0.c0))>=((t1.c1, vt0.c0))))) ASC  NULLS LAST LIMIT 2;
SELECT * FROM v0, t1 NATURAL JOIN vt0 WHERE (((t1.c0)IS(((t1.c2) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY (((v0.c2, vt0.c0)) NOT BETWEEN ((0.007809573922834434, 0.03864732177429564)) AND ((CASE WHEN t1.c1 THEN 'R' WHEN t1.c2 THEN t1.c2 WHEN vt0.c1 THEN t1.c0 ELSE v0.c1 END, LIKELY(DISTINCT t1.c1)))), (((v0.c2)+(t1.c0)) IN (((vt0.c0)||(v0.c2)), ((t1.c1) BETWEEN (t1.c1) AND (vt0.c0)))) ASC;
SELECT DISTINCT * FROM v0, t1 NATURAL JOIN vt0 WHERE (((t1.c0)IS(((t1.c2) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY json_insert(t1.c0, ((t1.c2)%(t1.c1)), t1.c0, ((v0.c0) NOT NULL)) ASC  NULLS FIRST LIMIT 0x5;
SELECT * FROM v0, t1 NATURAL JOIN vt0 WHERE (((t1.c0)IS(((t1.c2) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY (((v0.c2, vt0.c0)) NOT BETWEEN ((0.007809573922834434, 0.03864732177429564)) AND ((CASE WHEN t1.c1 THEN 'R' WHEN t1.c2 THEN t1.c2 WHEN vt0.c1 THEN t1.c0 ELSE v0.c1 END, LIKELY(DISTINCT t1.c1)))), (((v0.c2)+(t1.c0)) IN (((vt0.c0)||(v0.c2)), ((t1.c1) BETWEEN (t1.c1) AND (vt0.c0)))) ASC;
SELECT DISTINCT * FROM v0, t1 NATURAL JOIN vt0 WHERE (((t1.c0)IS(((t1.c2) BETWEEN (t1.c1) AND (t1.c0))))) ORDER BY json_insert(t1.c0, ((t1.c2)%(t1.c1)), t1.c0, ((v0.c0) NOT NULL)) ASC  NULLS FIRST LIMIT 0x5;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((((((((((((v0.c1)AND(v0.c0)))OR(v0.c0)))OR(v0.c1)))OR(v0.c1)))OR(v0.c1)))AND(v0.c1)))OR(0Xd9bd0ca)) AS BLOB));
SELECT DISTINCT COUNT(*) FROM v0 WHERE (CAST(((((((((((((((v0.c1)AND(v0.c0)))OR(v0.c0)))OR(v0.c1)))OR(v0.c1)))OR(v0.c1)))AND(v0.c1)))OR(228315338)) AS BLOB)) ORDER BY ((((v0.c1) NOTNULL)) NOT BETWEEN (((v0.c1) BETWEEN (v0.c1) AND (v0.c1))) AND (((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)))) DESC, 0X20f9bef9 DESC LIMIT 1;
SELECT ALL * FROM t1, vt0, v0 WHERE (NULL);
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (NULL) LIMIT 1;
SELECT ALL * FROM t1, vt0, v0 WHERE (NULL);
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (NULL) LIMIT 1;
SELECT * FROM vt0 NATURAL JOIN t1 INNER JOIN v0 ON (NULL IN ((v0.c0 IN (v0.c0)))) WHERE ((((((NOT (NULL)))AND(json_quote(v0.c2))))AND(UNLIKELY(vt0.c1)))) ORDER BY ((((t1.c2)+(v0.c0)))/(((v0.c1) IS FALSE))) ASC  NULLS FIRST, ABS((NOT (v0.c1))) DESC  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN t1 INNER JOIN v0 ON (NULL IN ((v0.c0 IN (v0.c0)))) WHERE ((((((((NOT (NULL)))AND(json_quote(v0.c2))))AND(UNLIKELY(vt0.c1))))AND(((CAST(v0.c0 AS REAL))|(((t1.c0) ISNULL)))))) ORDER BY CAST((vt0.c1 IN ()) AS NUMERIC), ((((t1.c0)<(v0.c1)))!=(((t1.c1) NOT NULL))) ASC INTERSECT SELECT * FROM vt0 NATURAL JOIN t1 INNER JOIN v0 ON (NULL IN ((v0.c0 IN (v0.c0)))) WHERE (CAST((((v0.c1, v0.c0)) BETWEEN ((t1.c1, 0.9161941557564773)) AND ((v0.c0, t1.c2))) AS BLOB)) ORDER BY CAST((vt0.c1 IN ()) AS NUMERIC), ((((t1.c0)<(v0.c1)))!=(((t1.c1) NOT NULL))) ASC;
SELECT * FROM vt0 NATURAL JOIN t1 INNER JOIN v0 ON (NULL IN ((v0.c0 IN (v0.c0)))) WHERE ((((((NOT (NULL)))AND(json_quote(v0.c2))))AND(UNLIKELY(vt0.c1)))) ORDER BY ((((t1.c2)+(v0.c0)))/(((v0.c1) IS FALSE))) ASC  NULLS FIRST, ABS((NOT (v0.c1))) DESC  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN t1 INNER JOIN v0 ON (NULL IN ((v0.c0 IN (v0.c0)))) WHERE ((((((((NOT (NULL)))AND(json_quote(v0.c2))))AND(UNLIKELY(vt0.c1))))AND(((CAST(v0.c0 AS REAL))|(((t1.c0) ISNULL)))))) ORDER BY CAST((vt0.c1 IN ()) AS NUMERIC), ((((t1.c0)<(v0.c1)))!=(((t1.c1) NOT NULL))) ASC INTERSECT SELECT * FROM vt0 NATURAL JOIN t1 INNER JOIN v0 ON (NULL IN ((v0.c0 IN (v0.c0)))) WHERE (CAST((((v0.c1, v0.c0)) BETWEEN ((t1.c1, 0.9161941557564773)) AND ((v0.c0, t1.c2))) AS BLOB)) ORDER BY CAST((vt0.c1 IN ()) AS NUMERIC), ((((t1.c0)<(v0.c1)))!=(((t1.c1) NOT NULL))) ASC;
SELECT ALL MIN(v0.c2) FROM v0 WHERE (((((v0.c0)LIKE(v0.c1)))GLOB(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)))));
SELECT ALL MIN(v0.c2) FROM v0 WHERE (((((v0.c0)LIKE(v0.c1)))GLOB(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1))))) LIMIT 0x3 INTERSECT SELECT ALL MIN(v0.c2) FROM v0 WHERE ((((v0.c2 COLLATE RTRIM))<>((((v0.c2)%(v0.c2)))))) LIMIT 0X3;
SELECT ALL MIN(v0.c2) FROM t1 CROSS JOIN v0 ON (NOT (TRIM(t1.c1, v0.c1))) INNER JOIN vt0 ON ((((((((t1.c2)==(v0.c1)))OR((((v0.c2))!=((v0.c1))))))OR(((572524795)IS(t1.c2)))))AND(((v0.c2) NOT NULL))) WHERE (CASE WHEN ((vt0.c1)GLOB(v0.c0)) THEN (((v0.c2)) BETWEEN ((v0.c1)) AND ((t1.c0))) WHEN ((vt0.c1)>>(v0.c2)) THEN ((v0.c0)OR(v0.c1)) WHEN ((vt0.c1) BETWEEN (t1.c0) AND (v0.c0)) THEN ((t1.c2)&(t1.c1)) END) ORDER BY t1.c1  NULLS FIRST, (((vt0.c0) NOT NULL) IN (t1.c1)) DESC;
SELECT DISTINCT MIN(v0.c2) FROM t1 CROSS JOIN v0 ON (NOT (TRIM(t1.c1, v0.c1))) INNER JOIN vt0 ON ((((((((t1.c2)=(v0.c1)))OR((((v0.c2))<>((v0.c1))))))OR(((0x222008fb)IS(t1.c2)))))AND(((v0.c2) NOT NULL))) WHERE (CASE WHEN ((vt0.c1)GLOB(v0.c0)) THEN (((v0.c2)) BETWEEN ((v0.c1)) AND ((t1.c0))) WHEN ((vt0.c1)>>(v0.c2)) THEN ((v0.c0)OR(v0.c1)) WHEN ((vt0.c1) BETWEEN (t1.c0) AND (v0.c0)) THEN ((t1.c2)&(t1.c1)) END) ORDER BY (((~ (NULL))) BETWEEN (CAST(t1.c1 AS BLOB)) AND (((v0.c1)+(t1.c2))))  NULLS LAST INTERSECT SELECT DISTINCT MIN(v0.c2) FROM t1 CROSS JOIN v0 ON (NOT (TRIM(t1.c1, v0.c1))) INNER JOIN vt0 ON ((((((((t1.c2)==(v0.c1)))OR((((v0.c2))!=((v0.c1))))))OR(((572524795)IS(t1.c2)))))AND(((v0.c2) NOT NULL))) WHERE ((- (vt0.c0))) ORDER BY (((~ (NULL))) BETWEEN (CAST(t1.c1 AS BLOB)) AND (((v0.c1)+(t1.c2))))  NULLS LAST;
SELECT ALL * FROM t1, v0 WHERE (CAST(v0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY ((((((v0.c1) NOT BETWEEN (v0.c2) AND (t1.c0)))AND(CASE WHEN t1.c0 THEN x'b507' WHEN t1.c2 THEN t1.c1 WHEN v0.c2 THEN t1.c2 ELSE v0.c1 END)))AND(((x'6a') BETWEEN (t1.c0) AND (v0.c2))));
SELECT DISTINCT * FROM t1, v0 WHERE (CAST(v0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY CAST((+ (t1.c2)) AS NUMERIC) LIMIT 0x0;
SELECT ALL * FROM t1, v0 WHERE (CAST(v0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY ((((((v0.c1) NOT BETWEEN (v0.c2) AND (t1.c0)))AND(CASE WHEN t1.c0 THEN x'b507' WHEN t1.c2 THEN t1.c1 WHEN v0.c2 THEN t1.c2 ELSE v0.c1 END)))AND(((x'6a') BETWEEN (t1.c0) AND (v0.c2))));
SELECT DISTINCT * FROM t1, v0 WHERE (CAST(v0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY CAST((+ (t1.c2)) AS NUMERIC) LIMIT 0x0;
SELECT ALL MAX(v0.c1) FROM v0 WHERE (x'd0');
SELECT MAX(v0.c1) FROM v0 WHERE (x'd0') LIMIT 0x0;
SELECT ALL MIN(v0.c2) FROM v0 WHERE (CASE WHEN v0.c1 THEN (~ (v0.c2)) WHEN ((1891954482)+(v0.c1)) THEN (+ (v0.c1)) END) ORDER BY (+ (((v0.c2)-(0.5882058172208857))))  NULLS LAST, v0.c1;
SELECT DISTINCT MIN(v0.c2) FROM v0 WHERE (CASE WHEN v0.c1 THEN (~ (v0.c2)) WHEN ((1891954482)+(v0.c1)) THEN (+ (v0.c1)) END) ORDER BY (((((((('1278333549')OR(((v0.c0)<(v0.c1)))))AND(LIKELY(v0.c0))))AND(v0.c2 COLLATE BINARY)))AND(CAST(v0.c1 AS TEXT))), ((v0.c0 COLLATE BINARY) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<>((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0)))))) ORDER BY LIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC))  NULLS FIRST, (((((((vt0.c1, '-1287748498', vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND (('1588786905', vt0.c1, vt0.c0))))OR((vt0.c0 IN ()))))OR(NULL)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)!=((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0))))))AND(TRIM(DISTINCT (~ (vt0.c0)))))) ORDER BY ((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)))-(vt0.c1 COLLATE BINARY)), (((vt0.c1)) NOT BETWEEN (('735340047')) AND ((CAST(vt0.c1 AS TEXT))))  NULLS FIRST INTERSECT SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))+('0.13518372379117283'))) ORDER BY ((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)))-(vt0.c1 COLLATE BINARY)), (((vt0.c1)) NOT BETWEEN (('735340047')) AND ((CAST(vt0.c1 AS TEXT))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<>((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0)))))) ORDER BY LIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC))  NULLS FIRST, (((((((vt0.c1, '-1287748498', vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND (('1588786905', vt0.c1, vt0.c0))))OR((vt0.c0 IN ()))))OR(NULL)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)!=((((vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0))))))AND(TRIM(DISTINCT (~ (vt0.c0)))))) ORDER BY ((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)))-(vt0.c1 COLLATE BINARY)), (((vt0.c1)) NOT BETWEEN (('735340047')) AND ((CAST(vt0.c1 AS TEXT))))  NULLS FIRST INTERSECT SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))+('0.13518372379117283'))) ORDER BY ((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)))-(vt0.c1 COLLATE BINARY)), (((vt0.c1)) NOT BETWEEN (('735340047')) AND ((CAST(vt0.c1 AS TEXT))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t1 INNER JOIN vt0 ON NULL WHERE (((t1.c2)<('-1498826640')) COLLATE BINARY) ORDER BY vt0.c0;
SELECT DISTINCT COUNT(*) FROM v0 NATURAL JOIN t1 INNER JOIN vt0 ON NULL WHERE (((((t1.c2)<('-1498826640')) COLLATE BINARY)AND(highlight('724060006', ((-468219586) IS TRUE), ((v0.c2)>=(t1.c1)), (t1.c2 IN (vt0.c1)))))) ORDER BY vt0.c0 INTERSECT SELECT DISTINCT COUNT(*) FROM v0 NATURAL JOIN t1 INNER JOIN vt0 ON NULL WHERE (CAST(v0.c1 COLLATE NOCASE AS NUMERIC)) ORDER BY vt0.c0;
SELECT * FROM vt0, t1, v0 WHERE (highlight((vt0.c1 IN ()), CAST(t1.c2 AS BLOB), ((v0.c2)GLOB(t1.c1)), (NOT (v0.c2)))) ORDER BY (~ (((vt0.c1)+(vt0.c0)))), rtreenode((((t1.c0, v0.c1, t1.c2, t1.c2)) NOT BETWEEN ((t1.c0, t1.c0, v0.c1, v0.c1)) AND ((t1.c2, v0.c1, t1.c1, vt0.c0))), ((vt0.c0) NOT NULL)) DESC  NULLS LAST, ((((v0.c1) IS TRUE)) NOT NULL)  NULLS LAST;
SELECT DISTINCT * FROM vt0, t1, v0 WHERE (highlight((vt0.c1 IN ()), CAST(t1.c2 AS BLOB), ((v0.c2)GLOB(t1.c1)), (NOT (v0.c2)))) ORDER BY (~ (((vt0.c1)+(vt0.c0)))), rtreenode((((t1.c0, v0.c1, t1.c2, t1.c2)) NOT BETWEEN ((t1.c0, t1.c0, v0.c1, v0.c1)) AND ((t1.c2, v0.c1, t1.c1, vt0.c0))), ((vt0.c0) NOT NULL)) DESC  NULLS LAST, ((((v0.c1) IS TRUE)) NOT NULL)  NULLS LAST LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0, t1, v0 WHERE (597096434) ORDER BY (~ (((vt0.c1)+(vt0.c0)))), rtreenode((((t1.c0, v0.c1, t1.c2, t1.c2)) NOT BETWEEN ((t1.c0, t1.c0, v0.c1, v0.c1)) AND ((t1.c2, v0.c1, t1.c1, vt0.c0))), ((vt0.c0) NOT NULL)) DESC  NULLS LAST, ((((v0.c1) IS TRUE)) NOT NULL)  NULLS LAST LIMIT 0X1;
SELECT * FROM vt0, t1, v0 WHERE (highlight((vt0.c1 IN ()), CAST(t1.c2 AS BLOB), ((v0.c2)GLOB(t1.c1)), (NOT (v0.c2)))) ORDER BY (~ (((vt0.c1)+(vt0.c0)))), rtreenode((((t1.c0, v0.c1, t1.c2, t1.c2)) NOT BETWEEN ((t1.c0, t1.c0, v0.c1, v0.c1)) AND ((t1.c2, v0.c1, t1.c1, vt0.c0))), ((vt0.c0) NOT NULL)) DESC  NULLS LAST, ((((v0.c1) IS TRUE)) NOT NULL)  NULLS LAST;
SELECT MIN(vt0.c0) FROM vt0, v0 WHERE ((((+ (v0.c1)))LIKE((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1)))))) ORDER BY ((- ('-1393225757')) IN ()) ASC  NULLS LAST;
SELECT DISTINCT MIN(vt0.c0) FROM vt0, v0 WHERE ((((((+ (v0.c1)))LIKE((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))))AND(CASE (v0.c1 IN (x''))  WHEN CASE vt0.c1  WHEN v0.c0 THEN v0.c1 END THEN ((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0)/(v0.c1)) THEN ((((((((vt0.c1)OR(vt0.c1)))OR(v0.c1)))AND(vt0.c0)))OR(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN v0.c1 END THEN (- (v0.c0)) ELSE (- (v0.c1)) END))) ORDER BY COALESCE(SQLITE_COMPILEOPTION_USED('g?]Egg2'), v0.c0, ((v0.c0) IS FALSE), ((v0.c2) IS TRUE)) ASC  NULLS FIRST;
SELECT * FROM vt0, v0, t1 WHERE ((- (((t1.c2) IS FALSE)))) ORDER BY vt0.c0 ASC, v0.c2  NULLS FIRST;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((- (((t1.c2) IS FALSE)))) ORDER BY (((0.29809173476160566, v0.c0, t1.c0)) NOT BETWEEN ((((((((((((vt0.c1)AND(vt0.c1)))OR(v0.c2)))AND(vt0.c0)))AND(t1.c0)))OR(t1.c1)), ((((v0.c1)OR(t1.c1)))AND(0x1c25c0d4)), ((vt0.c0)GLOB(v0.c0)))) AND (((NOT (t1.c2)), 0Xffffffffccab8193, (t1.c2 IN (v0.c0))))) ASC  NULLS LAST, CASE ((t1.c1)LIKE(t1.c0))  WHEN ((v0.c1)=(t1.c0)) THEN CASE '0.4135398949241078'  WHEN v0.c0 THEN t1.c0 END WHEN (('1661887489') NOT BETWEEN (v0.c1) AND (t1.c1)) THEN (v0.c0 IN (vt0.c1)) END INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((v0.c1)) NOT BETWEEN (((((t1.c2, vt0.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((v0.c1, t1.c2))))) AND ((CAST(NULL AS TEXT))))) ORDER BY (((0.29809173476160566, v0.c0, t1.c0)) NOT BETWEEN ((((((((((((vt0.c1)AND(vt0.c1)))OR(v0.c2)))AND(vt0.c0)))AND(t1.c0)))OR(t1.c1)), ((((v0.c1)OR(t1.c1)))AND(472236244)), ((vt0.c0)GLOB(v0.c0)))) AND (((NOT (t1.c2)), -861175405, (t1.c2 IN (v0.c0))))) ASC  NULLS LAST, CASE ((t1.c1)LIKE(t1.c0))  WHEN ((v0.c1)==(t1.c0)) THEN CASE '0.4135398949241078'  WHEN v0.c0 THEN t1.c0 END WHEN (('1661887489') NOT BETWEEN (v0.c1) AND (t1.c1)) THEN (v0.c0 IN (vt0.c1)) END;
SELECT * FROM vt0, v0, t1 WHERE ((- (((t1.c2) IS FALSE)))) ORDER BY vt0.c0 ASC, v0.c2  NULLS FIRST;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((- (((t1.c2) IS FALSE)))) ORDER BY (((0.29809173476160566, v0.c0, t1.c0)) NOT BETWEEN ((((((((((((vt0.c1)AND(vt0.c1)))OR(v0.c2)))AND(vt0.c0)))AND(t1.c0)))OR(t1.c1)), ((((v0.c1)OR(t1.c1)))AND(0x1c25c0d4)), ((vt0.c0)GLOB(v0.c0)))) AND (((NOT (t1.c2)), 0Xffffffffccab8193, (t1.c2 IN (v0.c0))))) ASC  NULLS LAST, CASE ((t1.c1)LIKE(t1.c0))  WHEN ((v0.c1)=(t1.c0)) THEN CASE '0.4135398949241078'  WHEN v0.c0 THEN t1.c0 END WHEN (('1661887489') NOT BETWEEN (v0.c1) AND (t1.c1)) THEN (v0.c0 IN (vt0.c1)) END INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((v0.c1)) NOT BETWEEN (((((t1.c2, vt0.c0)) BETWEEN ((t1.c1, t1.c1)) AND ((v0.c1, t1.c2))))) AND ((CAST(NULL AS TEXT))))) ORDER BY (((0.29809173476160566, v0.c0, t1.c0)) NOT BETWEEN ((((((((((((vt0.c1)AND(vt0.c1)))OR(v0.c2)))AND(vt0.c0)))AND(t1.c0)))OR(t1.c1)), ((((v0.c1)OR(t1.c1)))AND(472236244)), ((vt0.c0)GLOB(v0.c0)))) AND (((NOT (t1.c2)), -861175405, (t1.c2 IN (v0.c0))))) ASC  NULLS LAST, CASE ((t1.c1)LIKE(t1.c0))  WHEN ((v0.c1)==(t1.c0)) THEN CASE '0.4135398949241078'  WHEN v0.c0 THEN t1.c0 END WHEN (('1661887489') NOT BETWEEN (v0.c1) AND (t1.c1)) THEN (v0.c0 IN (vt0.c1)) END;
SELECT MAX(t1.c1) FROM t1, v0 WHERE ((((- (t1.c2))) NOT BETWEEN (((t1.c1)<=(v0.c2))) AND (CASE x'9b'  WHEN v0.c0 THEN v0.c2 END)));
SELECT DISTINCT MAX(t1.c1) FROM t1, v0 WHERE ((((((- (t1.c2))) NOT BETWEEN (((t1.c1)<=(v0.c2))) AND (CASE x'9b'  WHEN v0.c0 THEN v0.c2 END)))AND(CASE WHEN ((t1.c0) NOT BETWEEN (t1.c2) AND (v0.c2)) THEN ((((((((v0.c0)OR(t1.c2)))AND(t1.c2)))OR(t1.c1)))OR(t1.c2)) END))) LIMIT 0 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1, v0 WHERE ((((t1.c1)) NOT BETWEEN (((+ (v0.c1)))) AND ((v0.c0)))) LIMIT 0;
SELECT ALL * FROM v0 INNER JOIN t1 ON ((((t1.c0) ISNULL))<(((((((6.85232261E8)AND(t1.c0)))OR(v0.c1)))AND(t1.c0)))) WHERE ((((CAST(t1.c2 AS BLOB), ((v0.c1)<<(v0.c1))))<>((CASE WHEN v0.c1 THEN t1.c2 WHEN v0.c1 THEN t1.c0 WHEN t1.c2 THEN v0.c2 ELSE t1.c0 END, t1.c2)))) ORDER BY ((((x'b3')!=(x'671f')))AND(t1.c1))  NULLS LAST, LIKELIHOOD(DISTINCT ((x'ca')-(v0.c0)), CASE t1.c2  WHEN t1.c2 THEN v0.c1 END) ASC  NULLS FIRST, CAST(CASE WHEN v0.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c2 WHEN v0.c2 THEN t1.c1 END AS NUMERIC) DESC  NULLS FIRST, (((CAST(v0.c1 AS BLOB), (((t1.c0, v0.c1)) NOT BETWEEN ((v0.c1, NULL)) AND ((t1.c1, v0.c1))), CAST(t1.c2 AS NUMERIC)))<>((((t1.c0) BETWEEN (v0.c2) AND (t1.c1)), (t1.c1 IN ()), ((((((((NULL)OR(t1.c2)))OR(t1.c0)))AND(v0.c1)))OR(v0.c2)))));
SELECT * FROM v0 INNER JOIN t1 ON ((((t1.c0) ISNULL))<(((((((6.85232261E8)AND(t1.c0)))OR(v0.c1)))AND(t1.c0)))) WHERE ((((((CAST(t1.c2 AS BLOB), ((v0.c1)<<(v0.c1))))<>((CASE WHEN v0.c1 THEN t1.c2 WHEN v0.c1 THEN t1.c0 WHEN t1.c2 THEN v0.c2 ELSE t1.c0 END, t1.c2))))AND(((((((((((v0.c1)OR(v0.c2)))AND(t1.c0)))AND(t1.c0)))AND(t1.c2)))AND(v0.c0)) COLLATE BINARY))) ORDER BY ((((x'b3')<>(x'671f')))AND(t1.c1))  NULLS LAST, LIKELIHOOD(DISTINCT ((x'ca')-(v0.c0)), CASE t1.c2  WHEN t1.c2 THEN v0.c1 END) ASC  NULLS FIRST, CAST(CASE WHEN v0.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c2 WHEN v0.c2 THEN t1.c1 END AS NUMERIC) DESC  NULLS FIRST, (((CAST(v0.c1 AS BLOB), (((t1.c0, v0.c1)) NOT BETWEEN ((v0.c1, NULL)) AND ((t1.c1, v0.c1))), CAST(t1.c2 AS NUMERIC)))<>((((t1.c0) BETWEEN (v0.c2) AND (t1.c1)), (t1.c1 IN ()), ((((((((NULL)OR(t1.c2)))OR(t1.c0)))AND(v0.c1)))OR(v0.c2))))) LIMIT 2;
SELECT ALL * FROM v0 INNER JOIN t1 ON ((((t1.c0) ISNULL))<(((((((6.85232261E8)AND(t1.c0)))OR(v0.c1)))AND(t1.c0)))) WHERE ((((CAST(t1.c2 AS BLOB), ((v0.c1)<<(v0.c1))))<>((CASE WHEN v0.c1 THEN t1.c2 WHEN v0.c1 THEN t1.c0 WHEN t1.c2 THEN v0.c2 ELSE t1.c0 END, t1.c2)))) ORDER BY ((((x'b3')!=(x'671f')))AND(t1.c1))  NULLS LAST, LIKELIHOOD(DISTINCT ((x'ca')-(v0.c0)), CASE t1.c2  WHEN t1.c2 THEN v0.c1 END) ASC  NULLS FIRST, CAST(CASE WHEN v0.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c2 WHEN v0.c2 THEN t1.c1 END AS NUMERIC) DESC  NULLS FIRST, (((CAST(v0.c1 AS BLOB), (((t1.c0, v0.c1)) NOT BETWEEN ((v0.c1, NULL)) AND ((t1.c1, v0.c1))), CAST(t1.c2 AS NUMERIC)))<>((((t1.c0) BETWEEN (v0.c2) AND (t1.c1)), (t1.c1 IN ()), ((((((((NULL)OR(t1.c2)))OR(t1.c0)))AND(v0.c1)))OR(v0.c2)))));
SELECT * FROM t1, v0, vt0 WHERE (((CAST(v0.c1 AS NUMERIC))&(CASE v0.c2  WHEN '808120973' THEN v0.c2 WHEN t1.c2 THEN t1.c1 WHEN v0.c0 THEN v0.c0 END))) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((((CAST(v0.c1 AS NUMERIC))&(CASE v0.c2  WHEN '808120973' THEN v0.c2 WHEN t1.c2 THEN t1.c1 WHEN v0.c0 THEN v0.c0 END)))AND(CAST(CAST(v0.c1 AS REAL) AS INTEGER)))) ORDER BY CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c1)>>(x'e9c6')) WHEN ((t1.c2)AND(t1.c1)) THEN CAST(t1.c1 AS TEXT) WHEN ((v0.c0)*(t1.c2)) THEN ((v0.c0)|(t1.c1)) ELSE TRIM(DISTINCT v0.c0, vt0.c1) END ASC, ((CAST(t1.c2 AS BLOB))||(((v0.c0)||(v0.c1))))  NULLS FIRST, LENGTH((NOT (vt0.c1))) ASC LIMIT 0X2;
SELECT * FROM t1, v0, vt0 WHERE (((CAST(v0.c1 AS NUMERIC))&(CASE v0.c2  WHEN '808120973' THEN v0.c2 WHEN t1.c2 THEN t1.c1 WHEN v0.c0 THEN v0.c0 END))) ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, v0, vt0 WHERE (((((CAST(v0.c1 AS NUMERIC))&(CASE v0.c2  WHEN '808120973' THEN v0.c2 WHEN t1.c2 THEN t1.c1 WHEN v0.c0 THEN v0.c0 END)))AND(CAST(CAST(v0.c1 AS REAL) AS INTEGER)))) ORDER BY CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c1)>>(x'e9c6')) WHEN ((t1.c2)AND(t1.c1)) THEN CAST(t1.c1 AS TEXT) WHEN ((v0.c0)*(t1.c2)) THEN ((v0.c0)|(t1.c1)) ELSE TRIM(DISTINCT v0.c0, vt0.c1) END ASC, ((CAST(t1.c2 AS BLOB))||(((v0.c0)||(v0.c1))))  NULLS FIRST, LENGTH((NOT (vt0.c1))) ASC LIMIT 0X2;
SELECT ALL MAX(v0.c0) FROM t1, vt0 LEFT OUTER JOIN v0 ON ((((((((t1.c2)/(t1.c2)))OR((t1.c1 IN (vt0.c1)))))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE t1.c0 END)))AND(TYPEOF(t1.c0))) WHERE ((vt0.c1 COLLATE RTRIM IN (LIKELIHOOD(vt0.c0, t1.c1)))) ORDER BY (((((v0.c2, t1.c0))>=(('1439138116', vt0.c0))))%(CAST(t1.c1 AS NUMERIC))) ASC;
SELECT DISTINCT MAX(v0.c0) FROM t1, vt0 LEFT OUTER JOIN v0 ON ((((((((t1.c2)/(t1.c2)))OR((t1.c1 IN (vt0.c1)))))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE t1.c0 END)))AND(TYPEOF(t1.c0))) WHERE ((vt0.c1 COLLATE RTRIM IN (LIKELIHOOD(vt0.c0, t1.c1)))) ORDER BY (((((v0.c2, t1.c0))>=(('1439138116', vt0.c0))))%(CAST(t1.c1 AS NUMERIC))) ASC LIMIT 0 INTERSECT SELECT DISTINCT MAX(v0.c0) FROM t1, vt0 LEFT OUTER JOIN v0 ON ((((((((t1.c2)/(t1.c2)))OR((t1.c1 IN (vt0.c1)))))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE t1.c0 END)))AND(TYPEOF(t1.c0))) WHERE (((NULLIF(DISTINCT v0.c0, t1.c1))/(vt0.c1))) ORDER BY (((((v0.c2, t1.c0))>=(('1439138116', vt0.c0))))%(CAST(t1.c1 AS NUMERIC))) ASC LIMIT 0;
SELECT ALL COUNT(*) FROM t1 NOT INDEXED NATURAL JOIN vt0 WHERE ((CASE vt0.c0  WHEN t1.c2 THEN t1.c1 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE vt0.c0 END IN (NULLIF(vt0.c0, t1.c1)))) ORDER BY '-928893084'  NULLS LAST, COALESCE(CASE WHEN t1.c0 THEN t1.c0 END, ((((((vt0.c1)AND(x'')))AND(vt0.c1)))OR(NULL)), ((((vt0.c0)OR(vt0.c0)))OR('203799364')), (~ (vt0.c1)), t1.c0) DESC, (((- (t1.c2))) NOT BETWEEN (t1.c2) AND (((t1.c0)|(vt0.c0))));
SELECT DISTINCT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE ((((CASE vt0.c0  WHEN t1.c2 THEN t1.c1 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE vt0.c0 END IN (NULLIF(vt0.c0, t1.c1))))AND((('OZ7' COLLATE RTRIM) NOT NULL)))) ORDER BY CASE ((t1.c1)|(vt0.c1))  WHEN t1.c1 COLLATE NOCASE THEN UNLIKELY(DISTINCT t1.c0) WHEN t1.c0 THEN ((((x'a7')AND(vt0.c1)))OR(t1.c0)) END  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c2)) COLLATE NOCASE) ORDER BY (- (CAST(t1.c0 AS TEXT))) DESC;
SELECT MAX(t1.c0) FROM t1 WHERE (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c2)) COLLATE NOCASE) ORDER BY (- (CAST(t1.c0 AS TEXT))) DESC LIMIT 0;
SELECT ALL * FROM vt0, t1 WHERE (((CAST(vt0.c1 AS BLOB)) BETWEEN (x'') AND ((t1.c2 IN ())))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (((((CAST(vt0.c1 AS BLOB)) BETWEEN (x'') AND ((t1.c2 IN ()))))AND(((CAST(vt0.c1 AS INTEGER))<(vt0.c1 COLLATE BINARY))))) ORDER BY (+ (((((0X2d3f342f)OR(t1.c2)))OR(t1.c2)))) DESC, ((((((vt0.c0)AND(t1.c1)))AND(t1.c0)))OR(CASE vt0.c0  WHEN t1.c1 THEN t1.c1 END))  NULLS FIRST, ((vt0.c0)IS(x'30' COLLATE BINARY))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((((((vt0.c1)OR(t1.c2)))AND(t1.c1))) NOT BETWEEN ('-670729825' COLLATE BINARY) AND (((vt0.c0)||(vt0.c0))))) ORDER BY (+ (((((0X2d3f342f)OR(t1.c2)))OR(t1.c2)))) DESC, ((((((vt0.c0)AND(t1.c1)))AND(t1.c0)))OR(CASE vt0.c0  WHEN t1.c1 THEN t1.c1 END))  NULLS FIRST, ((vt0.c0)IS(x'30' COLLATE BINARY))  NULLS FIRST LIMIT 0x0;
SELECT ALL * FROM vt0, t1 WHERE (((CAST(vt0.c1 AS BLOB)) BETWEEN (x'') AND ((t1.c2 IN ())))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT DISTINCT * FROM vt0, t1 WHERE (((((CAST(vt0.c1 AS BLOB)) BETWEEN (x'') AND ((t1.c2 IN ()))))AND(((CAST(vt0.c1 AS INTEGER))<(vt0.c1 COLLATE BINARY))))) ORDER BY (+ (((((0X2d3f342f)OR(t1.c2)))OR(t1.c2)))) DESC, ((((((vt0.c0)AND(t1.c1)))AND(t1.c0)))OR(CASE vt0.c0  WHEN t1.c1 THEN t1.c1 END))  NULLS FIRST, ((vt0.c0)IS(x'30' COLLATE BINARY))  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM vt0, t1 WHERE (((((((vt0.c1)OR(t1.c2)))AND(t1.c1))) NOT BETWEEN ('-670729825' COLLATE BINARY) AND (((vt0.c0)||(vt0.c0))))) ORDER BY (+ (((((0X2d3f342f)OR(t1.c2)))OR(t1.c2)))) DESC, ((((((vt0.c0)AND(t1.c1)))AND(t1.c0)))OR(CASE vt0.c0  WHEN t1.c1 THEN t1.c1 END))  NULLS FIRST, ((vt0.c0)IS(x'30' COLLATE BINARY))  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 CROSS JOIN vt0 ON (((((v0.c2) NOTNULL), (NOT (vt0.c0))))==(((((v0.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))), (~ (t1.c2))))) INNER JOIN v0 ON t1.c0 WHERE ((160011797 IN ()));
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((((v0.c2) NOTNULL), (NOT (vt0.c0))))==(((((v0.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))), (~ (t1.c2))))) INNER JOIN v0 ON t1.c0 WHERE ((160011797 IN ())) ORDER BY ((((t1.c2) NOT NULL)) NOT NULL)  NULLS FIRST LIMIT 0x3;
SELECT * FROM t1 CROSS JOIN vt0 ON (((((v0.c2) NOTNULL), (NOT (vt0.c0))))==(((((v0.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))), (~ (t1.c2))))) INNER JOIN v0 ON t1.c0 WHERE ((160011797 IN ()));
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((((v0.c2) NOTNULL), (NOT (vt0.c0))))==(((((v0.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))), (~ (t1.c2))))) INNER JOIN v0 ON t1.c0 WHERE ((160011797 IN ())) ORDER BY ((((t1.c2) NOT NULL)) NOT NULL)  NULLS FIRST LIMIT 0x3;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)LIKE(vt0.c1)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((CAST(((vt0.c1)LIKE(vt0.c1)) AS INTEGER))AND((((vt0.c1)AND(vt0.c1)) IN (((vt0.c0) NOT NULL), vt0.c1 COLLATE NOCASE))))) INTERSECT SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c1, x'2a', vt0.c0, vt0.c1))==((-1.329581092E9, vt0.c0, vt0.c1, vt0.c0))) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)LIKE(vt0.c1)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((CAST(((vt0.c1)LIKE(vt0.c1)) AS INTEGER))AND((((vt0.c1)AND(vt0.c1)) IN (((vt0.c0) NOT NULL), vt0.c1 COLLATE NOCASE))))) INTERSECT SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c1, x'2a', vt0.c0, vt0.c1))==((-1.329581092E9, vt0.c0, vt0.c1, vt0.c0))) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((NOT (t1.c0)))LIKE(((t1.c0)*(v0.c0)))) LEFT OUTER JOIN v0 ON (((v0.c1)) BETWEEN ((vt0.c1)) AND ((t1.c1))) COLLATE NOCASE COLLATE RTRIM WHERE ((((vt0.c0) NOT NULL) IN (load_extension(NULL))));
SELECT DISTINCT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((NOT (t1.c0)))LIKE(((t1.c0)*(v0.c0)))) LEFT OUTER JOIN v0 ON (((v0.c1)) BETWEEN ((vt0.c1)) AND ((t1.c1))) COLLATE NOCASE COLLATE RTRIM WHERE ((((((vt0.c0) NOT NULL) IN (load_extension(NULL))))AND(((0.5234104366310339)%(((((((vt0.c0)OR(v0.c0)))AND(vt0.c1)))OR(vt0.c0))))))) LIMIT 0X0;
SELECT ALL * FROM v0 WHERE (CAST((NOT (v0.c0)) AS INTEGER));
SELECT DISTINCT * FROM v0 WHERE (((CAST((NOT (v0.c0)) AS INTEGER))AND('_m]'))) ORDER BY IFNULL(DISTINCT ((v0.c0)OR(-1.304575661E9)), CAST(v0.c1 AS INTEGER));
SELECT ALL * FROM v0 WHERE (CAST((NOT (v0.c0)) AS INTEGER));
SELECT DISTINCT * FROM v0 WHERE (((CAST((NOT (v0.c0)) AS INTEGER))AND('_m]'))) ORDER BY IFNULL(DISTINCT ((v0.c0)OR(-1.304575661E9)), CAST(v0.c1 AS INTEGER));
SELECT * FROM v0 WHERE ((((((v0.c2)AND(v0.c2)), (NOT (0.9325221633914785)), ((v0.c1)>(v0.c1)), (((v0.c0, v0.c2, v0.c1))<((v0.c0, v0.c1, v0.c2))), v0.c1))>=(((NOT (v0.c0)), v0.c0, 1.147263217E9, (((v0.c0, v0.c2, v0.c1, v0.c1))<((v0.c1, v0.c2, v0.c0, v0.c2))), (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2)))))));
SELECT * FROM v0 WHERE ((((((((v0.c2)AND(v0.c2)), (NOT (0.9325221633914785)), ((v0.c1)>(v0.c1)), (((v0.c0, v0.c2, v0.c1))<((v0.c0, v0.c1, v0.c2))), v0.c1))>=(((NOT (v0.c0)), v0.c0, 1.147263217E9, (((v0.c0, v0.c2, v0.c1, v0.c1))<((v0.c1, v0.c2, v0.c0, v0.c2))), (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2)))))))AND(v0.c0))) ORDER BY ((((v0.c1 COLLATE BINARY)AND(((((((v0.c2)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))), (+ (NULL)) DESC  NULLS FIRST, CASE WHEN (((v0.c0, v0.c2))<((v0.c1, v0.c1))) THEN v0.c1 COLLATE NOCASE WHEN (NULL IN ()) THEN (((v0.c2)) NOT BETWEEN ((NULL)) AND ((v0.c2))) WHEN CASE v0.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END THEN ((((v0.c2)AND(v0.c2)))OR(NULL)) END LIMIT 0x1 INTERSECT SELECT ALL * FROM v0 WHERE (x'6bd08e59') ORDER BY ((((v0.c1 COLLATE BINARY)AND(((((((v0.c2)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))), (+ (NULL)) DESC  NULLS FIRST, CASE WHEN (((v0.c0, v0.c2))<((v0.c1, v0.c1))) THEN v0.c1 COLLATE NOCASE WHEN (NULL IN ()) THEN (((v0.c2)) NOT BETWEEN ((NULL)) AND ((v0.c2))) WHEN CASE v0.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END THEN ((((v0.c2)AND(v0.c2)))OR(NULL)) END LIMIT 1;
SELECT * FROM v0 WHERE ((((((v0.c2)AND(v0.c2)), (NOT (0.9325221633914785)), ((v0.c1)>(v0.c1)), (((v0.c0, v0.c2, v0.c1))<((v0.c0, v0.c1, v0.c2))), v0.c1))>=(((NOT (v0.c0)), v0.c0, 1.147263217E9, (((v0.c0, v0.c2, v0.c1, v0.c1))<((v0.c1, v0.c2, v0.c0, v0.c2))), (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2)))))));
SELECT * FROM v0 WHERE ((((((((v0.c2)AND(v0.c2)), (NOT (0.9325221633914785)), ((v0.c1)>(v0.c1)), (((v0.c0, v0.c2, v0.c1))<((v0.c0, v0.c1, v0.c2))), v0.c1))>=(((NOT (v0.c0)), v0.c0, 1.147263217E9, (((v0.c0, v0.c2, v0.c1, v0.c1))<((v0.c1, v0.c2, v0.c0, v0.c2))), (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2)))))))AND(v0.c0))) ORDER BY ((((v0.c1 COLLATE BINARY)AND(((((((v0.c2)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))), (+ (NULL)) DESC  NULLS FIRST, CASE WHEN (((v0.c0, v0.c2))<((v0.c1, v0.c1))) THEN v0.c1 COLLATE NOCASE WHEN (NULL IN ()) THEN (((v0.c2)) NOT BETWEEN ((NULL)) AND ((v0.c2))) WHEN CASE v0.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END THEN ((((v0.c2)AND(v0.c2)))OR(NULL)) END LIMIT 0x1 INTERSECT SELECT ALL * FROM v0 WHERE (x'6bd08e59') ORDER BY ((((v0.c1 COLLATE BINARY)AND(((((((v0.c2)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))), (+ (NULL)) DESC  NULLS FIRST, CASE WHEN (((v0.c0, v0.c2))<((v0.c1, v0.c1))) THEN v0.c1 COLLATE NOCASE WHEN (NULL IN ()) THEN (((v0.c2)) NOT BETWEEN ((NULL)) AND ((v0.c2))) WHEN CASE v0.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END THEN ((((v0.c2)AND(v0.c2)))OR(NULL)) END LIMIT 1;
SELECT ALL MAX(vt0.c0) FROM v0, vt0 WHERE (CAST(((((((vt0.c0)OR(v0.c1)))OR(vt0.c1)))AND(v0.c2)) AS REAL));
SELECT MAX(vt0.c0) FROM v0, vt0 WHERE (((CAST(((((((vt0.c0)OR(v0.c1)))OR(vt0.c1)))AND(v0.c2)) AS REAL))AND((~ (vt0.c0)) COLLATE NOCASE))) ORDER BY CASE WHEN (((vt0.c1)) NOT BETWEEN ((x'')) AND ((v0.c0))) THEN (v0.c1 IN ()) END DESC LIMIT 0x2;
SELECT MAX(v0.c2) FROM vt0, t1, v0 WHERE (CAST((+ (v0.c1)) AS REAL));
SELECT DISTINCT MAX(v0.c2) FROM vt0, t1, v0 WHERE (((CAST((+ (v0.c1)) AS REAL))AND(4.1028994E7 COLLATE RTRIM))) ORDER BY (((((t1.c1 IN ()))OR(((t1.c0)+(vt0.c1)))))OR((t1.c0 IN (t1.c1)))) DESC, vt0.c0 DESC;
SELECT ALL * FROM vt0 INNER JOIN t1 ON ((v0.c2)IS((((v0.c2, v0.c1))<((t1.c0, t1.c1))))) NATURAL JOIN v0 WHERE (CAST(NULL AS REAL)) ORDER BY (((((vt0.c1)OR(NULL))))=((CAST(vt0.c1 AS NUMERIC)))) ASC, (((((((t1.c2)) BETWEEN ((v0.c2)) AND ((vt0.c1))))AND(TRIM(DISTINCT vt0.c1, v0.c0))))OR((+ (t1.c1))))  NULLS LAST, CASE TRIM(DISTINCT x'', t1.c1)  WHEN (((0x7a56fc1, 0.26319397980575643, v0.c0)) BETWEEN ((t1.c0, v0.c2, v0.c1)) AND ((v0.c0, v0.c0, t1.c1))) THEN CAST(v0.c1 AS TEXT) WHEN ((v0.c1)<=(v0.c2)) THEN ((v0.c1) BETWEEN (t1.c0) AND (vt0.c0)) WHEN LOWER(v0.c2) THEN 1990795538 END DESC, (((0Xffffffff9ad7ae21, 0.7971248963455178)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, v0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON ((v0.c2)IS((((v0.c2, v0.c1))<((t1.c0, t1.c1))))) NATURAL JOIN v0 WHERE (CAST(NULL AS REAL)) ORDER BY (((((vt0.c1)OR(NULL))))=((CAST(vt0.c1 AS NUMERIC)))) ASC, (((((((t1.c2)) BETWEEN ((v0.c2)) AND ((vt0.c1))))AND(TRIM(DISTINCT vt0.c1, v0.c0))))OR((+ (t1.c1))))  NULLS LAST, CASE TRIM(DISTINCT x'', t1.c1)  WHEN (((0X7a56fc1, 0.26319397980575643, v0.c0)) BETWEEN ((t1.c0, v0.c2, v0.c1)) AND ((v0.c0, v0.c0, t1.c1))) THEN CAST(v0.c1 AS TEXT) WHEN ((v0.c1)<=(v0.c2)) THEN ((v0.c1) BETWEEN (t1.c0) AND (vt0.c0)) WHEN LOWER(v0.c2) THEN 1990795538 END DESC, (((-1697141215, 0.7971248963455178)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, v0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN t1 ON ((v0.c2)IS((((v0.c2, v0.c1))<((t1.c0, t1.c1))))) NATURAL JOIN v0 WHERE (CAST(NULL AS REAL)) ORDER BY (((((vt0.c1)OR(NULL))))=((CAST(vt0.c1 AS NUMERIC)))) ASC, (((((((t1.c2)) BETWEEN ((v0.c2)) AND ((vt0.c1))))AND(TRIM(DISTINCT vt0.c1, v0.c0))))OR((+ (t1.c1))))  NULLS LAST, CASE TRIM(DISTINCT x'', t1.c1)  WHEN (((0x7a56fc1, 0.26319397980575643, v0.c0)) BETWEEN ((t1.c0, v0.c2, v0.c1)) AND ((v0.c0, v0.c0, t1.c1))) THEN CAST(v0.c1 AS TEXT) WHEN ((v0.c1)<=(v0.c2)) THEN ((v0.c1) BETWEEN (t1.c0) AND (vt0.c0)) WHEN LOWER(v0.c2) THEN 1990795538 END DESC, (((0Xffffffff9ad7ae21, 0.7971248963455178)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, v0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON ((v0.c2)IS((((v0.c2, v0.c1))<((t1.c0, t1.c1))))) NATURAL JOIN v0 WHERE (CAST(NULL AS REAL)) ORDER BY (((((vt0.c1)OR(NULL))))=((CAST(vt0.c1 AS NUMERIC)))) ASC, (((((((t1.c2)) BETWEEN ((v0.c2)) AND ((vt0.c1))))AND(TRIM(DISTINCT vt0.c1, v0.c0))))OR((+ (t1.c1))))  NULLS LAST, CASE TRIM(DISTINCT x'', t1.c1)  WHEN (((0X7a56fc1, 0.26319397980575643, v0.c0)) BETWEEN ((t1.c0, v0.c2, v0.c1)) AND ((v0.c0, v0.c0, t1.c1))) THEN CAST(v0.c1 AS TEXT) WHEN ((v0.c1)<=(v0.c2)) THEN ((v0.c1) BETWEEN (t1.c0) AND (vt0.c0)) WHEN LOWER(v0.c2) THEN 1990795538 END DESC, (((-1697141215, 0.7971248963455178)) BETWEEN ((vt0.c0, vt0.c1)) AND ((vt0.c0, v0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT MIN(v0.c1) FROM t1, v0 WHERE ((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c2))) COLLATE BINARY);
SELECT DISTINCT MIN(v0.c1) FROM t1, v0 WHERE ((((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c2))) COLLATE BINARY)AND(((((t1.c1) ISNULL))GLOB(ABS(DISTINCT t1.c2)))))) ORDER BY (((t1.c0 IN (v0.c0)))LIKE(((t1.c1)IS NOT(v0.c2)))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM v0 WHERE (((((v0.c1)IS(v0.c1))) IS FALSE)) ORDER BY ((v0.c2 COLLATE RTRIM) NOTNULL) DESC, v0.c0 DESC;
SELECT * FROM v0 WHERE (((((v0.c1)IS(v0.c1))) IS FALSE)) ORDER BY NULL ASC, ((((v0.c1)OR((v0.c0 IN (v0.c1)))))AND(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC;
SELECT ALL * FROM v0 WHERE (((((v0.c1)IS(v0.c1))) IS FALSE)) ORDER BY ((v0.c2 COLLATE RTRIM) NOTNULL) DESC, v0.c0 DESC;
SELECT * FROM v0 WHERE (((((v0.c1)IS(v0.c1))) IS FALSE)) ORDER BY NULL ASC, ((((v0.c1)OR((v0.c0 IN (v0.c1)))))AND(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))) ASC;
SELECT ALL * FROM t1 WHERE (((((t1.c2) BETWEEN (t1.c2) AND ('337239948'))) ISNULL)) ORDER BY ((('tT')/(t1.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c2) BETWEEN (t1.c2) AND ('337239948'))) ISNULL)) ORDER BY ((('tT')/(t1.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c2) BETWEEN (t1.c2) AND ('337239948'))) ISNULL)) ORDER BY ((('tT')/(t1.c0)) IN ()) DESC  NULLS LAST;
SELECT * FROM v0 INNER JOIN t1 ON ((((((((v0.c1)OR(v0.c2)))OR(t1.c2)))OR(v0.c2))) BETWEEN (CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE 'O' END) AND ((((((('-1261758024')AND(v0.c1)))AND(v0.c0)))OR(t1.c0)))) WHERE (CASE WHEN CAST(v0.c1 AS NUMERIC) THEN NULL WHEN 1209779035 THEN CAST('664663909' AS TEXT) WHEN ((t1.c0)AND(v0.c2)) THEN ((((((t1.c0)AND(v0.c0)))AND(t1.c0)))OR(v0.c1)) WHEN (v0.c0 IN (v0.c0)) THEN ((((((v0.c0)AND(t1.c2)))OR('2138575335')))AND(t1.c2)) END);
SELECT ALL * FROM v0 INNER JOIN t1 ON ((((((((v0.c1)OR(v0.c2)))OR(t1.c2)))OR(v0.c2))) BETWEEN (CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE 'O' END) AND ((((((('-1261758024')AND(v0.c1)))AND(v0.c0)))OR(t1.c0)))) WHERE (CASE WHEN CAST(v0.c1 AS NUMERIC) THEN NULL WHEN 1209779035 THEN CAST('664663909' AS TEXT) WHEN ((t1.c0)AND(v0.c2)) THEN ((((((t1.c0)AND(v0.c0)))AND(t1.c0)))OR(v0.c1)) WHEN (v0.c0 IN (v0.c0)) THEN ((((((v0.c0)AND(t1.c2)))OR('2138575335')))AND(t1.c2)) END) LIMIT 0x0 INTERSECT SELECT * FROM v0 INNER JOIN t1 ON ((((((((v0.c1)OR(v0.c2)))OR(t1.c2)))OR(v0.c2))) BETWEEN (CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE 'O' END) AND ((((((('-1261758024')AND(v0.c1)))AND(v0.c0)))OR(t1.c0)))) WHERE ((x'f864c5' IN (NULL))) LIMIT 0x0;
SELECT * FROM v0 INNER JOIN t1 ON ((((((((v0.c1)OR(v0.c2)))OR(t1.c2)))OR(v0.c2))) BETWEEN (CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE 'O' END) AND ((((((('-1261758024')AND(v0.c1)))AND(v0.c0)))OR(t1.c0)))) WHERE (CASE WHEN CAST(v0.c1 AS NUMERIC) THEN NULL WHEN 1209779035 THEN CAST('664663909' AS TEXT) WHEN ((t1.c0)AND(v0.c2)) THEN ((((((t1.c0)AND(v0.c0)))AND(t1.c0)))OR(v0.c1)) WHEN (v0.c0 IN (v0.c0)) THEN ((((((v0.c0)AND(t1.c2)))OR('2138575335')))AND(t1.c2)) END);
SELECT ALL * FROM v0 INNER JOIN t1 ON ((((((((v0.c1)OR(v0.c2)))OR(t1.c2)))OR(v0.c2))) BETWEEN (CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE 'O' END) AND ((((((('-1261758024')AND(v0.c1)))AND(v0.c0)))OR(t1.c0)))) WHERE (CASE WHEN CAST(v0.c1 AS NUMERIC) THEN NULL WHEN 1209779035 THEN CAST('664663909' AS TEXT) WHEN ((t1.c0)AND(v0.c2)) THEN ((((((t1.c0)AND(v0.c0)))AND(t1.c0)))OR(v0.c1)) WHEN (v0.c0 IN (v0.c0)) THEN ((((((v0.c0)AND(t1.c2)))OR('2138575335')))AND(t1.c2)) END) LIMIT 0x0 INTERSECT SELECT * FROM v0 INNER JOIN t1 ON ((((((((v0.c1)OR(v0.c2)))OR(t1.c2)))OR(v0.c2))) BETWEEN (CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE 'O' END) AND ((((((('-1261758024')AND(v0.c1)))AND(v0.c0)))OR(t1.c0)))) WHERE ((x'f864c5' IN (NULL))) LIMIT 0x0;
SELECT ALL * FROM vt0, v0 NATURAL JOIN t1 WHERE ((~ ('VD7')));
SELECT DISTINCT * FROM vt0, v0 NATURAL JOIN t1 WHERE ((((~ ('VD7')))AND((- (((v0.c1)AND(6.7093693E7))))))) ORDER BY TRIM(DISTINCT (v0.c1 IN (t1.c2, t1.c1))), v0.c2  NULLS FIRST, '' DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 NATURAL JOIN t1 WHERE ((~ ('VD7')));
SELECT DISTINCT * FROM vt0, v0 NATURAL JOIN t1 WHERE ((((~ ('VD7')))AND((- (((v0.c1)AND(6.7093693E7))))))) ORDER BY TRIM(DISTINCT (v0.c1 IN (t1.c2, t1.c1))), v0.c2  NULLS FIRST, '' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((0.0699344438204551) NOTNULL)) ORDER BY 0.024288077151751852 COLLATE RTRIM ASC, CAST(((t1.c2) NOTNULL) AS REAL);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((0.0699344438204551) NOTNULL)) ORDER BY 0.024288077151751852 COLLATE RTRIM ASC, CAST(((t1.c2) NOTNULL) AS REAL) LIMIT 0x0 INTERSECT SELECT COUNT(*) FROM vt0, t1 WHERE ((((~ (vt0.c1)))>=((~ (t1.c2))))) ORDER BY 0.024288077151751852 COLLATE RTRIM ASC, CAST(((t1.c2) NOTNULL) AS REAL) LIMIT 0;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST LIMIT 0x1;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST LIMIT 0x1;
SELECT MIN(vt0.c1) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS BLOB)) ORDER BY (((vt0.c1, ((((((((vt0.c0)OR('-1578423769')))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('GﹿN4RY~7>'))))==((vt0.c0 COLLATE RTRIM, (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))), CAST(vt0.c0 AS INTEGER)))) DESC, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))|(((((vt0.c0)AND(vt0.c1)))OR('0.17366808409776624'))));
SELECT MIN(vt0.c1) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS BLOB)) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (-1898308450))))<=((((vt0.c1) ISNULL), ((vt0.c1) IS TRUE)))) ASC  NULLS FIRST LIMIT 1 INTERSECT SELECT MIN(vt0.c1) FROM vt0 WHERE (UNLIKELY(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (0xffffffff8eda1c9e))))<=((((vt0.c1) ISNULL), ((vt0.c1) IS TRUE)))) ASC  NULLS FIRST LIMIT 1;
SELECT ALL MIN(vt0.c0) FROM v0, t1, vt0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (((v0.c2, vt0.c0))<=((v0.c2, v0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT MIN(vt0.c0) FROM v0, t1, vt0 WHERE (((CAST(v0.c0 AS INTEGER) COLLATE BINARY)AND(((((('y/'))=((v0.c1))))OR(UNLIKELY(DISTINCT v0.c1)))))) ORDER BY ((((t1.c2) BETWEEN (v0.c2) AND (x'0c98'))) BETWEEN (((t1.c2)=(v0.c1))) AND (((t1.c0)LIKE(t1.c1)))), (((((v0.c0, vt0.c1, v0.c2, t1.c0))<=((t1.c2, v0.c2, '-1259334124', vt0.c1))))&(NULL)) DESC, (- (CAST(v0.c2 AS TEXT))), x'' DESC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((t1.c2 COLLATE RTRIM)) AND ((((t1.c2) NOTNULL)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((t1.c2 COLLATE RTRIM)) AND ((((t1.c2) NOTNULL))))) LIMIT 5;
SELECT * FROM vt0 CROSS JOIN v0 ON CAST(0X7c8c18c4 AS BLOB) WHERE (((v0.c0) ISNULL)) ORDER BY v0.c1 ASC, ((((v0.c1) BETWEEN (v0.c1) AND (vt0.c0)))LIKE(((v0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CAST(0X7c8c18c4 AS BLOB) WHERE (((v0.c0) ISNULL)) ORDER BY (((v0.c1 IN (vt0.c1)))-(v0.c1)), (((((v0.c0, v0.c2))<>((v0.c2, v0.c0)))) NOT BETWEEN ((+ (v0.c1))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))));
SELECT * FROM vt0 CROSS JOIN v0 ON CAST(0X7c8c18c4 AS BLOB) WHERE (((v0.c0) ISNULL)) ORDER BY v0.c1 ASC, ((((v0.c1) BETWEEN (v0.c1) AND (vt0.c0)))LIKE(((v0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CAST(0X7c8c18c4 AS BLOB) WHERE (((v0.c0) ISNULL)) ORDER BY (((v0.c1 IN (vt0.c1)))-(v0.c1)), (((((v0.c0, v0.c2))<>((v0.c2, v0.c0)))) NOT BETWEEN ((+ (v0.c1))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))));
SELECT ALL * FROM vt0, t1 WHERE ((NOT ((- (-459511557))))) ORDER BY t1.c1 ASC  NULLS LAST;
SELECT * FROM vt0, t1 WHERE ((NOT ((- (0Xffffffffe49c68fb))))) ORDER BY (- ((~ (t1.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE ((NOT ((- (-459511557))))) ORDER BY t1.c1 ASC  NULLS LAST;
SELECT * FROM vt0, t1 WHERE ((NOT ((- (0Xffffffffe49c68fb))))) ORDER BY (- ((~ (t1.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((CAST(x'' AS NUMERIC) IN (LIKELY(DISTINCT t1.c0), (t1.c1 IN (x'56'))))) ORDER BY t1.c1  NULLS FIRST, ((IFNULL(0.4799649301758798, t1.c0)) ISNULL) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((CAST(x'' AS NUMERIC) IN (LIKELY(DISTINCT t1.c0), (t1.c1 IN (x'56')))))AND(TYPEOF(t1.c2 COLLATE NOCASE)))) ORDER BY t1.c1  NULLS FIRST, ((IFNULL(0.4799649301758798, t1.c0)) ISNULL) DESC LIMIT 2;
SELECT ALL * FROM t1 WHERE ((CAST(x'' AS NUMERIC) IN (LIKELY(DISTINCT t1.c0), (t1.c1 IN (x'56'))))) ORDER BY t1.c1  NULLS FIRST, ((IFNULL(0.4799649301758798, t1.c0)) ISNULL) DESC;
SELECT DISTINCT * FROM t1 WHERE ((((CAST(x'' AS NUMERIC) IN (LIKELY(DISTINCT t1.c0), (t1.c1 IN (x'56')))))AND(TYPEOF(t1.c2 COLLATE NOCASE)))) ORDER BY t1.c1  NULLS FIRST, ((IFNULL(0.4799649301758798, t1.c0)) ISNULL) DESC LIMIT 2;
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN INSTR(v0.c2, v0.c2) ELSE ((v0.c0)+(v0.c2)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN INSTR(v0.c2, v0.c2) ELSE ((v0.c0)+(v0.c2)) END) ORDER BY ((((((((v0.c0)OR(NULL)))AND(v0.c2)))AND('0.7112285859638923')))&(((v0.c2)>(NULL)))) DESC, v0.c0 COLLATE NOCASE;
SELECT ALL MAX(v0.c1) FROM t1, v0, vt0 WHERE (CAST(vt0.c1 AS NUMERIC) COLLATE BINARY) ORDER BY UNLIKELY(CHAR(vt0.c0, v0.c0, t1.c0)) ASC  NULLS FIRST, (+ (((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT ALL MAX(v0.c1) FROM t1, v0, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC) COLLATE BINARY)AND(CASE ((t1.c1) BETWEEN ('2?') AND (v0.c2))  WHEN (~ (v0.c1)) THEN vt0.c1 WHEN ((vt0.c1) ISNULL) THEN LIKELIHOOD(v0.c1, v0.c1) ELSE CAST(v0.c1 AS INTEGER) END))) ORDER BY UNLIKELY(CHAR(vt0.c0, v0.c0, t1.c0)) ASC  NULLS FIRST, (+ (((vt0.c0) NOT NULL)))  NULLS FIRST INTERSECT SELECT MAX(v0.c1) FROM t1, v0, vt0 WHERE (x'23') ORDER BY UNLIKELY(CHAR(vt0.c0, v0.c0, t1.c0)) ASC  NULLS FIRST, (+ (((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0) BETWEEN (t1.c2) AND (t1.c0)))OR((((('1421894492')OR(t1.c0)))AND(t1.c1)))))AND(((t1.c1) ISNULL))))AND(x''))) ORDER BY (((((- (t1.c0)))OR((+ (t1.c2)))))AND(((((((((t1.c2)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(NULL))))  NULLS LAST, ((((((((((t1.c0)OR('')))OR(t1.c1)))AND(t1.c2)))AND(t1.c0)))+(JULIANDAY(t1.c2, t1.c1, t1.c2, t1.c1, t1.c1, NULL))) DESC, ((CAST(t1.c1 AS NUMERIC))==(((((t1.c0)OR(t1.c2)))AND(-1395127720))))  NULLS FIRST, (+ (t1.c2)) COLLATE RTRIM DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0) BETWEEN (t1.c2) AND (t1.c0)))OR((((('1421894492')OR(t1.c0)))AND(t1.c1)))))AND(((t1.c1) ISNULL))))AND(x'')))AND(NULL))) ORDER BY (((((- (t1.c0)))OR((+ (t1.c2)))))AND(((((((((t1.c2)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(NULL))))  NULLS LAST, ((((((((((t1.c0)OR('')))OR(t1.c1)))AND(t1.c2)))AND(t1.c0)))+(JULIANDAY(t1.c2, t1.c1, t1.c2, t1.c1, t1.c1, NULL))) DESC, ((CAST(t1.c1 AS NUMERIC))==(((((t1.c0)OR(t1.c2)))AND(-1395127720))))  NULLS FIRST, (+ (t1.c2)) COLLATE RTRIM DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c2 IN (t1.c2)))!=(UNICODE(t1.c0)))) ORDER BY (((((- (t1.c0)))OR((+ (t1.c2)))))AND(((((((((t1.c2)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(NULL))))  NULLS LAST, ((((((((((t1.c0)OR('')))OR(t1.c1)))AND(t1.c2)))AND(t1.c0)))+(JULIANDAY(t1.c2, t1.c1, t1.c2, t1.c1, t1.c1, NULL))) DESC, ((CAST(t1.c1 AS NUMERIC))=(((((t1.c0)OR(t1.c2)))AND(-1395127720))))  NULLS FIRST, (+ (t1.c2)) COLLATE RTRIM DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((((((((t1.c0) BETWEEN (t1.c2) AND (t1.c0)))OR((((('1421894492')OR(t1.c0)))AND(t1.c1)))))AND(((t1.c1) ISNULL))))AND(x''))) ORDER BY (((((- (t1.c0)))OR((+ (t1.c2)))))AND(((((((((t1.c2)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(NULL))))  NULLS LAST, ((((((((((t1.c0)OR('')))OR(t1.c1)))AND(t1.c2)))AND(t1.c0)))+(JULIANDAY(t1.c2, t1.c1, t1.c2, t1.c1, t1.c1, NULL))) DESC, ((CAST(t1.c1 AS NUMERIC))==(((((t1.c0)OR(t1.c2)))AND(-1395127720))))  NULLS FIRST, (+ (t1.c2)) COLLATE RTRIM DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0) BETWEEN (t1.c2) AND (t1.c0)))OR((((('1421894492')OR(t1.c0)))AND(t1.c1)))))AND(((t1.c1) ISNULL))))AND(x'')))AND(NULL))) ORDER BY (((((- (t1.c0)))OR((+ (t1.c2)))))AND(((((((((t1.c2)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(NULL))))  NULLS LAST, ((((((((((t1.c0)OR('')))OR(t1.c1)))AND(t1.c2)))AND(t1.c0)))+(JULIANDAY(t1.c2, t1.c1, t1.c2, t1.c1, t1.c1, NULL))) DESC, ((CAST(t1.c1 AS NUMERIC))==(((((t1.c0)OR(t1.c2)))AND(-1395127720))))  NULLS FIRST, (+ (t1.c2)) COLLATE RTRIM DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c2 IN (t1.c2)))!=(UNICODE(t1.c0)))) ORDER BY (((((- (t1.c0)))OR((+ (t1.c2)))))AND(((((((((t1.c2)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(NULL))))  NULLS LAST, ((((((((((t1.c0)OR('')))OR(t1.c1)))AND(t1.c2)))AND(t1.c0)))+(JULIANDAY(t1.c2, t1.c1, t1.c2, t1.c1, t1.c1, NULL))) DESC, ((CAST(t1.c1 AS NUMERIC))=(((((t1.c0)OR(t1.c2)))AND(-1395127720))))  NULLS FIRST, (+ (t1.c2)) COLLATE RTRIM DESC  NULLS LAST LIMIT 0X0;
SELECT ALL MIN(v0.c2) FROM v0 WHERE (((((((((((((((((v0.c2)OR(v0.c1)))AND(v0.c0)))OR(v0.c1)))OR(v0.c1)))AND(0.884789789184683)))AND(v0.c1)))OR(v0.c1)))-(((v0.c0)GLOB(v0.c0)))));
SELECT DISTINCT MIN(v0.c2) FROM v0 WHERE (((((((((((((((((v0.c2)OR(v0.c1)))AND(v0.c0)))OR(v0.c1)))OR(v0.c1)))AND(0.884789789184683)))AND(v0.c1)))OR(v0.c1)))-(((v0.c0)GLOB(v0.c0))))) ORDER BY (((((((v0.c1 IN ()))OR(((v0.c1)IS NOT(v0.c2)))))AND(((v0.c2) IS TRUE))))AND((NOT (v0.c1)))) DESC  NULLS LAST, '0.7747561948773806' LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(v0.c2) FROM v0 WHERE ((((((v0.c0) ISNULL)))!=(((x'689c' IN (v0.c1, '~', v0.c0)))))) ORDER BY (((((((v0.c1 IN ()))OR(((v0.c1)IS NOT(v0.c2)))))AND(((v0.c2) IS TRUE))))AND((NOT (v0.c1)))) DESC  NULLS LAST, '0.7747561948773806' LIMIT 0;
SELECT * FROM v0, t1, vt0 WHERE (((LOWER(t1.c0))LIKE(CASE v0.c2  WHEN t1.c0 THEN t1.c1 ELSE v0.c2 END)));
SELECT ALL * FROM v0, t1, vt0 WHERE (((LOWER(t1.c0))LIKE(CASE v0.c2  WHEN t1.c0 THEN t1.c1 ELSE v0.c2 END))) ORDER BY CASE WHEN IFNULL(vt0.c0, v0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN TRIM(DISTINCT t1.c1, t1.c0) THEN (NOT (t1.c2)) WHEN CAST(t1.c2 AS INTEGER) THEN CASE t1.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END ELSE CASE t1.c2  WHEN t1.c2 THEN vt0.c1 WHEN v0.c2 THEN v0.c0 END END ASC  NULLS LAST;
SELECT * FROM v0, t1, vt0 WHERE (((LOWER(t1.c0))LIKE(CASE v0.c2  WHEN t1.c0 THEN t1.c1 ELSE v0.c2 END)));
SELECT ALL * FROM v0, t1, vt0 WHERE (((LOWER(t1.c0))LIKE(CASE v0.c2  WHEN t1.c0 THEN t1.c1 ELSE v0.c2 END))) ORDER BY CASE WHEN IFNULL(vt0.c0, v0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN TRIM(DISTINCT t1.c1, t1.c0) THEN (NOT (t1.c2)) WHEN CAST(t1.c2 AS INTEGER) THEN CASE t1.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END ELSE CASE t1.c2  WHEN t1.c2 THEN vt0.c1 WHEN v0.c2 THEN v0.c0 END END ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, t1 WHERE ((((NOT (t1.c2))) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c1)) AND ((t1.c0)))) AND (-453193974))) ORDER BY CAST(t1.c2 AS INTEGER) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM v0, t1 WHERE ((((((NOT (t1.c2))) NOT BETWEEN ((((v0.c2)) BETWEEN ((v0.c1)) AND ((t1.c0)))) AND (-453193974)))AND((((v0.c2)LIKE(t1.c1)) IN (UNICODE(v0.c0)))))) ORDER BY CAST(t1.c2 AS INTEGER) COLLATE BINARY  NULLS LAST LIMIT 0x0 INTERSECT SELECT COUNT(*) FROM v0, t1 WHERE ((((((t1.c2 IN (v0.c2)))AND((- (t1.c2)))))OR(CASE v0.c2  WHEN v0.c1 THEN t1.c1 ELSE v0.c1 END))) ORDER BY CAST(t1.c2 AS INTEGER) COLLATE BINARY  NULLS LAST LIMIT 0X0;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (LOWER((((vt0.c0, vt0.c1))=((1985833165, vt0.c0))))) ORDER BY ((((((((x'')AND(((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))AND((- (vt0.c1)))))AND(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, (NOT ((((vt0.c1, vt0.c0, vt0.c1))<=((vt0.c0, vt0.c0, vt0.c0)))));
SELECT MIN(vt0.c1) FROM vt0 WHERE (((LOWER((((vt0.c0, vt0.c1))==((0x765d68cd, vt0.c0)))))AND(((vt0.c1) IS TRUE)))) ORDER BY x''  NULLS FIRST INTERSECT SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (vt0.c0) ORDER BY x''  NULLS FIRST;
SELECT MAX(v0.c1) FROM v0 WHERE (CASE v0.c1  WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c1)) THEN ((((((((v0.c1)AND(v0.c2)))AND(v0.c2)))AND(v0.c0)))AND(v0.c0)) END);
SELECT DISTINCT MAX(v0.c1) FROM v0 WHERE (CASE v0.c1  WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c1)) THEN ((((((((v0.c1)AND(v0.c2)))AND(v0.c2)))AND(v0.c0)))AND(v0.c0)) END);
SELECT * FROM vt0, t1 NATURAL JOIN v0 WHERE (v0.c2) ORDER BY CAST(CASE WHEN vt0.c0 THEN t1.c0 ELSE -1.287748498E9 END AS BLOB), ((((v0.c2 IN (t1.c0))))>((((v0.c0)IS NOT(t1.c2))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 NATURAL JOIN v0 WHERE (((v0.c2)AND(((((v0.c0 IN (t1.c0, v0.c1)), ((vt0.c0) IS TRUE)))<=((CASE WHEN vt0.c1 THEN t1.c1 ELSE t1.c2 END, (~ (t1.c2)))))))) ORDER BY CAST(CASE WHEN vt0.c0 THEN t1.c0 ELSE -1.287748498E9 END AS BLOB), ((((v0.c2 IN (t1.c0))))>((((v0.c0)IS NOT(t1.c2))))) DESC  NULLS FIRST INTERSECT SELECT ALL * FROM vt0, t1 NATURAL JOIN v0 WHERE (((((((((x'')AND(t1.c0)))AND(t1.c1)))OR(t1.c2)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY CAST(CASE WHEN vt0.c0 THEN t1.c0 ELSE -1.287748498E9 END AS BLOB), ((((v0.c2 IN (t1.c0))))>((((v0.c0)IS NOT(t1.c2))))) DESC  NULLS FIRST;
SELECT * FROM vt0, t1 NATURAL JOIN v0 WHERE (v0.c2) ORDER BY CAST(CASE WHEN vt0.c0 THEN t1.c0 ELSE -1.287748498E9 END AS BLOB), ((((v0.c2 IN (t1.c0))))>((((v0.c0)IS NOT(t1.c2))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 NATURAL JOIN v0 WHERE (((v0.c2)AND(((((v0.c0 IN (t1.c0, v0.c1)), ((vt0.c0) IS TRUE)))<=((CASE WHEN vt0.c1 THEN t1.c1 ELSE t1.c2 END, (~ (t1.c2)))))))) ORDER BY CAST(CASE WHEN vt0.c0 THEN t1.c0 ELSE -1.287748498E9 END AS BLOB), ((((v0.c2 IN (t1.c0))))>((((v0.c0)IS NOT(t1.c2))))) DESC  NULLS FIRST INTERSECT SELECT ALL * FROM vt0, t1 NATURAL JOIN v0 WHERE (((((((((x'')AND(t1.c0)))AND(t1.c1)))OR(t1.c2)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY CAST(CASE WHEN vt0.c0 THEN t1.c0 ELSE -1.287748498E9 END AS BLOB), ((((v0.c2 IN (t1.c0))))>((((v0.c0)IS NOT(t1.c2))))) DESC  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN v0 INNER JOIN t1 ON ((rtreenode(NULL, v0.c0))IS NOT(CASE WHEN v0.c0 THEN t1.c0 WHEN vt0.c0 THEN x'99e4' WHEN vt0.c0 THEN v0.c2 END)) WHERE (CAST((~ (t1.c0)) AS REAL));
SELECT ALL * FROM vt0 NATURAL JOIN v0 INNER JOIN t1 ON ((rtreenode(NULL, v0.c0))IS NOT(CASE WHEN v0.c0 THEN t1.c0 WHEN vt0.c0 THEN x'99e4' WHEN vt0.c0 THEN v0.c2 END)) WHERE (((CAST((~ (t1.c0)) AS REAL))AND((((v0.c2 IN (vt0.c0, t1.c2))) BETWEEN (CASE WHEN v0.c2 THEN t1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 ELSE v0.c1 END) AND (TOTAL_CHANGES()))))) ORDER BY ((v0.c1)/(((vt0.c1)<>(t1.c1)))) DESC;
SELECT * FROM vt0 NATURAL JOIN v0 INNER JOIN t1 ON ((rtreenode(NULL, v0.c0))IS NOT(CASE WHEN v0.c0 THEN t1.c0 WHEN vt0.c0 THEN x'99e4' WHEN vt0.c0 THEN v0.c2 END)) WHERE (CAST((~ (t1.c0)) AS REAL));
SELECT ALL * FROM vt0 NATURAL JOIN v0 INNER JOIN t1 ON ((rtreenode(NULL, v0.c0))IS NOT(CASE WHEN v0.c0 THEN t1.c0 WHEN vt0.c0 THEN x'99e4' WHEN vt0.c0 THEN v0.c2 END)) WHERE (((CAST((~ (t1.c0)) AS REAL))AND((((v0.c2 IN (vt0.c0, t1.c2))) BETWEEN (CASE WHEN v0.c2 THEN t1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 ELSE v0.c1 END) AND (TOTAL_CHANGES()))))) ORDER BY ((v0.c1)/(((vt0.c1)<>(t1.c1)))) DESC;
SELECT * FROM vt0 NOT INDEXED, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c2)))*((vt0.c1 IN (v0.c1))))) ORDER BY (~ (((v0.c0) IS FALSE))), (((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c2))))<=(x'6e7fb2'))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c2)))*((vt0.c1 IN (v0.c1))))) ORDER BY (((vt0.c0 IN (v0.c0)))*(((v0.c1) BETWEEN (vt0.c0) AND (v0.c0)))) ASC, vt0.c1  NULLS LAST, (- (UPPER(vt0.c1))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0, v0 WHERE (CASE (((vt0.c1, v0.c1, v0.c2)) BETWEEN ((v0.c1, v0.c0, vt0.c1)) AND ((v0.c1, v0.c0, vt0.c0)))  WHEN ((v0.c1)|(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE v0.c2 END WHEN ((v0.c1) IS TRUE) THEN 'Y' WHEN x'' THEN CASE WHEN vt0.c1 THEN v0.c1 WHEN vt0.c1 THEN v0.c1 ELSE -1094150099 END END) ORDER BY (((vt0.c0 IN (v0.c0)))*(((v0.c1) BETWEEN (vt0.c0) AND (v0.c0)))) ASC, vt0.c1  NULLS LAST, (- (UPPER(vt0.c1))) DESC  NULLS FIRST;
SELECT * FROM vt0 NOT INDEXED, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c2)))*((vt0.c1 IN (v0.c1))))) ORDER BY (~ (((v0.c0) IS FALSE))), (((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c2))))<=(x'6e7fb2'))  NULLS FIRST;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c2)))*((vt0.c1 IN (v0.c1))))) ORDER BY (((vt0.c0 IN (v0.c0)))*(((v0.c1) BETWEEN (vt0.c0) AND (v0.c0)))) ASC, vt0.c1  NULLS LAST, (- (UPPER(vt0.c1))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM vt0, v0 WHERE (CASE (((vt0.c1, v0.c1, v0.c2)) BETWEEN ((v0.c1, v0.c0, vt0.c1)) AND ((v0.c1, v0.c0, vt0.c0)))  WHEN ((v0.c1)|(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE v0.c2 END WHEN ((v0.c1) IS TRUE) THEN 'Y' WHEN x'' THEN CASE WHEN vt0.c1 THEN v0.c1 WHEN vt0.c1 THEN v0.c1 ELSE -1094150099 END END) ORDER BY (((vt0.c0 IN (v0.c0)))*(((v0.c1) BETWEEN (vt0.c0) AND (v0.c0)))) ASC, vt0.c1  NULLS LAST, (- (UPPER(vt0.c1))) DESC  NULLS FIRST;
SELECT * FROM t1, v0, vt0 WHERE (CAST((((t1.c0))>=((vt0.c0))) AS REAL));
SELECT ALL * FROM t1, v0, vt0 WHERE (((CAST((((t1.c0))>=((vt0.c0))) AS REAL))AND(((((((((((v0.c0)AND(v0.c1)))OR(v0.c1)))OR(t1.c1)))OR(v0.c0))) ISNULL))));
SELECT * FROM t1, v0, vt0 WHERE (CAST((((t1.c0))>=((vt0.c0))) AS REAL));
SELECT ALL * FROM t1, v0, vt0 WHERE (((CAST((((t1.c0))>=((vt0.c0))) AS REAL))AND(((((((((((v0.c0)AND(v0.c1)))OR(v0.c1)))OR(t1.c1)))OR(v0.c0))) ISNULL))));
SELECT ALL MAX(t1.c0) FROM v0, t1 WHERE (json((v0.c1 IN (v0.c1)))) ORDER BY t1.c1  NULLS LAST, IFNULL(DISTINCT (v0.c2 IN (v0.c0)), CAST(v0.c2 AS NUMERIC))  NULLS LAST, (((v0.c0 IN ()))||(CASE WHEN v0.c1 THEN t1.c1 END))  NULLS LAST;
SELECT MAX(t1.c0) FROM v0, t1 WHERE (json((v0.c1 IN (v0.c1)))) ORDER BY ((((v0.c2) BETWEEN (t1.c1) AND (t1.c2)))<<(((0.5623369063823449) NOT BETWEEN (v0.c1) AND (t1.c2)))), ((v0.c1) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0) IS TRUE))) DESC, t1.c0  NULLS LAST INTERSECT SELECT ALL MAX(t1.c0) FROM v0, t1 WHERE ((((t1.c0, t1.c2)) BETWEEN ((((((((((((((((((v0.c0)OR(t1.c2)))AND(v0.c0)))OR(v0.c2)))OR(v0.c2)))OR(t1.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c1)), ((t1.c2)GLOB(v0.c2)))) AND ((t1.c2, UPPER(''))))) ORDER BY ((((v0.c2) BETWEEN (t1.c1) AND (t1.c2)))<<(((0.5623369063823449) NOT BETWEEN (v0.c1) AND (t1.c2)))), ((v0.c1) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0) IS TRUE))) DESC, t1.c0  NULLS LAST;
SELECT MAX(t1.c2) FROM t1, vt0 WHERE (UNLIKELY(NULLIF(t1.c1, t1.c1)));
SELECT ALL MAX(t1.c2) FROM t1, vt0 WHERE (UNLIKELY(NULLIF(t1.c1, t1.c1))) LIMIT 1 INTERSECT SELECT ALL MAX(t1.c2) FROM t1, vt0 WHERE (((((vt0.c1) NOT BETWEEN (0.2642170579138916) AND (t1.c2))) ISNULL)) LIMIT 1;
SELECT * FROM v0, vt0 WHERE (CASE (v0.c0 IN (v0.c1))  WHEN ((0.9704729208916799) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN (+ (vt0.c1)) WHEN v0.c0 COLLATE NOCASE THEN x'306b' WHEN v0.c1 THEN ((v0.c2)OR(v0.c1)) END);
SELECT * FROM v0, vt0 WHERE (((CASE (v0.c0 IN (v0.c1))  WHEN ((0.9704729208916799) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN (+ (vt0.c1)) WHEN v0.c0 COLLATE NOCASE THEN x'306b' WHEN v0.c1 THEN ((v0.c2)OR(v0.c1)) END)AND(((CAST(v0.c1 AS NUMERIC)) IS TRUE)))) ORDER BY 0.524101612390741 ASC  NULLS LAST INTERSECT SELECT * FROM v0, vt0 WHERE (CASE ((v0.c2)LIKE(''))  WHEN (NOT (v0.c1)) THEN (v0.c0 IN (vt0.c1)) WHEN (((v0.c0, 'I'))!=((vt0.c1, v0.c2))) THEN ((v0.c1)/(vt0.c0)) END) ORDER BY 0.524101612390741 ASC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (CASE (v0.c0 IN (v0.c1))  WHEN ((0.9704729208916799) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN (+ (vt0.c1)) WHEN v0.c0 COLLATE NOCASE THEN x'306b' WHEN v0.c1 THEN ((v0.c2)OR(v0.c1)) END);
SELECT * FROM v0, vt0 WHERE (((CASE (v0.c0 IN (v0.c1))  WHEN ((0.9704729208916799) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN (+ (vt0.c1)) WHEN v0.c0 COLLATE NOCASE THEN x'306b' WHEN v0.c1 THEN ((v0.c2)OR(v0.c1)) END)AND(((CAST(v0.c1 AS NUMERIC)) IS TRUE)))) ORDER BY 0.524101612390741 ASC  NULLS LAST INTERSECT SELECT * FROM v0, vt0 WHERE (CASE ((v0.c2)LIKE(''))  WHEN (NOT (v0.c1)) THEN (v0.c0 IN (vt0.c1)) WHEN (((v0.c0, 'I'))!=((vt0.c1, v0.c2))) THEN ((v0.c1)/(vt0.c0)) END) ORDER BY 0.524101612390741 ASC  NULLS LAST;
SELECT MAX(vt0.c1) FROM vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) ORDER BY CAST(NULL AS BLOB) ASC;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((CAST(CAST(vt0.c1 AS NUMERIC) AS REAL))AND('w'))) ORDER BY (((vt0.c0, vt0.c1 COLLATE BINARY, ((vt0.c0)>(vt0.c1))))!=((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), '1147263217', (((vt0.c0))<=((vt0.c1))))))  NULLS FIRST, CASE ((vt0.c1)|(vt0.c1))  WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN ('76281558' IN ()) ELSE (~ (vt0.c0)) END DESC  NULLS FIRST, vt0.c0  NULLS FIRST INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE ((((((vt0.c1, 0.4913271449643679, vt0.c1))<((vt0.c0, 0.25349313885826363, vt0.c1))))/((vt0.c0 IN (vt0.c1))))) ORDER BY (((vt0.c0, vt0.c1 COLLATE BINARY, ((vt0.c0)>(vt0.c1))))!=((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), '1147263217', (((vt0.c0))<=((vt0.c1))))))  NULLS FIRST, CASE ((vt0.c1)|(vt0.c1))  WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN ('76281558' IN ()) ELSE (~ (vt0.c0)) END DESC  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT MAX(v0.c2) FROM v0, t1, vt0 WHERE (COALESCE(DISTINCT v0.c1, v0.c1) COLLATE BINARY);
SELECT DISTINCT MAX(v0.c2) FROM v0, t1, vt0 WHERE (((COALESCE(DISTINCT v0.c1, v0.c1) COLLATE BINARY)AND((((~ (vt0.c1))) NOTNULL)))) ORDER BY (((v0.c2, t1.c2, v0.c2)) NOT BETWEEN ((CAST(t1.c2 AS BLOB), HEX(t1.c0), ((t1.c2)IS NOT(t1.c0)))) AND ((((v0.c0)&(v0.c2)), CAST(v0.c2 AS NUMERIC), ((v0.c0) BETWEEN (0X78c3277f) AND (t1.c0))))) DESC LIMIT 0x1;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE WHEN CASE WHEN t1.c2 THEN t1.c0 END THEN CAST(t1.c2 AS REAL) WHEN (((v0.c0, t1.c1, t1.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, t1.c1, vt0.c1, t1.c2)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1))) THEN (0xfffffffff3bacbd1 IN (0.1539688987686184)) WHEN (((x'1a49', t1.c0, v0.c2, x'dfb7')) BETWEEN ((vt0.c0, vt0.c0, v0.c2, t1.c2)) AND ((t1.c0, vt0.c0, t1.c2, t1.c2))) THEN ((v0.c2) IS FALSE) ELSE CASE WHEN vt0.c1 THEN vt0.c0 WHEN t1.c2 THEN vt0.c1 END END NATURAL JOIN t1 WHERE (((t1.c0 COLLATE BINARY)GLOB((t1.c2 IN (vt0.c0, v0.c1)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE WHEN CASE WHEN t1.c2 THEN t1.c0 END THEN CAST(t1.c2 AS REAL) WHEN (((v0.c0, t1.c1, t1.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, t1.c1, vt0.c1, t1.c2)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1))) THEN (0Xfffffffff3bacbd1 IN (0.1539688987686184)) WHEN (((x'1a49', t1.c0, v0.c2, x'dfb7')) BETWEEN ((vt0.c0, vt0.c0, v0.c2, t1.c2)) AND ((t1.c0, vt0.c0, t1.c2, t1.c2))) THEN ((v0.c2) IS FALSE) ELSE CASE WHEN vt0.c1 THEN vt0.c0 WHEN t1.c2 THEN vt0.c1 END END NATURAL JOIN t1 WHERE (((t1.c0 COLLATE BINARY)GLOB((t1.c2 IN (vt0.c0, v0.c1))))) ORDER BY 0.5113646977298807 ASC  NULLS FIRST, ((NULLIF(DISTINCT NULL, v0.c0)) NOT BETWEEN ((~ (vt0.c1))) AND (((t1.c2) BETWEEN (v0.c2) AND (v0.c2)))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE WHEN CASE WHEN t1.c2 THEN t1.c0 END THEN CAST(t1.c2 AS REAL) WHEN (((v0.c0, t1.c1, t1.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, t1.c1, vt0.c1, t1.c2)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1))) THEN (0xfffffffff3bacbd1 IN (0.1539688987686184)) WHEN (((x'1a49', t1.c0, v0.c2, x'dfb7')) BETWEEN ((vt0.c0, vt0.c0, v0.c2, t1.c2)) AND ((t1.c0, vt0.c0, t1.c2, t1.c2))) THEN ((v0.c2) IS FALSE) ELSE CASE WHEN vt0.c1 THEN vt0.c0 WHEN t1.c2 THEN vt0.c1 END END NATURAL JOIN t1 WHERE (NULL) ORDER BY 0.5113646977298807 ASC  NULLS FIRST, ((NULLIF(DISTINCT NULL, v0.c0)) NOT BETWEEN ((~ (vt0.c1))) AND (((t1.c2) BETWEEN (v0.c2) AND (v0.c2)))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM v0, t1 CROSS JOIN vt0 ON CAST(NULL AS TEXT) WHERE ((((+ (vt0.c0)))!=(CASE v0.c1  WHEN t1.c1 THEN v0.c2 WHEN vt0.c1 THEN t1.c0 ELSE v0.c2 END))) ORDER BY ((((((((((((((v0.c1)OR(t1.c1)))AND(t1.c1)))AND(vt0.c0)))OR(vt0.c0)))OR('0.12660962818335064')))OR(((vt0.c0) IS FALSE))))OR(json_patch(t1.c1, v0.c1)))  NULLS LAST;
SELECT DISTINCT * FROM v0, t1 CROSS JOIN vt0 ON CAST(NULL AS TEXT) WHERE ((((((+ (vt0.c0)))>(CASE v0.c1  WHEN t1.c1 THEN v0.c2 WHEN vt0.c1 THEN t1.c0 ELSE v0.c2 END)))AND((~ (NULL))))) ORDER BY ((x'' COLLATE NOCASE)=(((v0.c2)%(vt0.c1)))) DESC INTERSECT SELECT DISTINCT * FROM v0, t1 CROSS JOIN vt0 ON CAST(NULL AS TEXT) WHERE (((((v0.c1) NOT BETWEEN (t1.c0) AND (t1.c2)))>(((t1.c0)||(''))))) ORDER BY ((x'' COLLATE NOCASE)==(((v0.c2)%(vt0.c1)))) DESC;
SELECT ALL * FROM v0, t1 CROSS JOIN vt0 ON CAST(NULL AS TEXT) WHERE ((((+ (vt0.c0)))!=(CASE v0.c1  WHEN t1.c1 THEN v0.c2 WHEN vt0.c1 THEN t1.c0 ELSE v0.c2 END))) ORDER BY ((((((((((((((v0.c1)OR(t1.c1)))AND(t1.c1)))AND(vt0.c0)))OR(vt0.c0)))OR('0.12660962818335064')))OR(((vt0.c0) IS FALSE))))OR(json_patch(t1.c1, v0.c1)))  NULLS LAST;
SELECT DISTINCT * FROM v0, t1 CROSS JOIN vt0 ON CAST(NULL AS TEXT) WHERE ((((((+ (vt0.c0)))>(CASE v0.c1  WHEN t1.c1 THEN v0.c2 WHEN vt0.c1 THEN t1.c0 ELSE v0.c2 END)))AND((~ (NULL))))) ORDER BY ((x'' COLLATE NOCASE)=(((v0.c2)%(vt0.c1)))) DESC INTERSECT SELECT DISTINCT * FROM v0, t1 CROSS JOIN vt0 ON CAST(NULL AS TEXT) WHERE (((((v0.c1) NOT BETWEEN (t1.c0) AND (t1.c2)))>(((t1.c0)||(''))))) ORDER BY ((x'' COLLATE NOCASE)==(((v0.c2)%(vt0.c1)))) DESC;
SELECT ALL MIN(v0.c0) FROM vt0 INNER JOIN t1 ON (t1.c0 IN ((((vt0.c0))>((vt0.c1))))) NATURAL JOIN v0 WHERE (((v0.c0) BETWEEN (v0.c2) AND (t1.c2)) COLLATE NOCASE) ORDER BY ((((v0.c1)%(x'cd9e'))) NOT NULL)  NULLS LAST, ((((t1.c0) IS FALSE)) BETWEEN (LIKELIHOOD(DISTINCT v0.c1, vt0.c0)) AND (v0.c2)) DESC;
SELECT DISTINCT MIN(v0.c0) FROM vt0 INNER JOIN t1 ON (t1.c0 IN ((((vt0.c0))>((vt0.c1))))) NATURAL JOIN v0 WHERE (((v0.c0) BETWEEN (v0.c2) AND (t1.c2)) COLLATE NOCASE) ORDER BY ((((v0.c1)%(x'cd9e'))) NOT NULL)  NULLS LAST, ((((t1.c0) IS FALSE)) BETWEEN (LIKELIHOOD(DISTINCT v0.c1, vt0.c0)) AND (v0.c2)) DESC LIMIT 2 INTERSECT SELECT DISTINCT MIN(v0.c0) FROM vt0 INNER JOIN t1 ON (t1.c0 IN ((((vt0.c0))>((vt0.c1))))) NATURAL JOIN v0 WHERE ((+ (t1.c0))) ORDER BY ((((v0.c1)%(x'cd9e'))) NOT NULL)  NULLS LAST, ((((t1.c0) IS FALSE)) BETWEEN (LIKELIHOOD(DISTINCT v0.c1, vt0.c0)) AND (v0.c2)) DESC LIMIT 0x2;
SELECT ALL * FROM t1, vt0, v0 WHERE (UPPER(DISTINCT v0.c0 COLLATE BINARY)) ORDER BY (v0.c0 IN ((('-779657011')*(vt0.c0)))) ASC  NULLS LAST, ((((vt0.c0)AND(v0.c0)))<(((0.40465400589246003)AND(vt0.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (UPPER(DISTINCT v0.c0 COLLATE BINARY)) ORDER BY (v0.c0 IN ((('-779657011')*(vt0.c0)))) ASC  NULLS LAST, ((((vt0.c0)AND(v0.c0)))<(((0.40465400589246003)AND(vt0.c1)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1, vt0, v0 WHERE (CASE CAST(v0.c2 AS INTEGER)  WHEN ((t1.c0) NOTNULL) THEN v0.c1 WHEN t1.c1 COLLATE NOCASE THEN (vt0.c1 IN (v0.c1)) WHEN (~ (vt0.c1)) THEN (v0.c1 IN (t1.c0, x'a7')) ELSE ((v0.c2) NOT BETWEEN (t1.c2) AND (t1.c1)) END) ORDER BY (v0.c0 IN ((('-779657011')*(vt0.c0)))) ASC  NULLS LAST, ((((vt0.c0)AND(v0.c0)))<(((0.40465400589246003)AND(vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, vt0, v0 WHERE (UPPER(DISTINCT v0.c0 COLLATE BINARY)) ORDER BY (v0.c0 IN ((('-779657011')*(vt0.c0)))) ASC  NULLS LAST, ((((vt0.c0)AND(v0.c0)))<(((0.40465400589246003)AND(vt0.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (UPPER(DISTINCT v0.c0 COLLATE BINARY)) ORDER BY (v0.c0 IN ((('-779657011')*(vt0.c0)))) ASC  NULLS LAST, ((((vt0.c0)AND(v0.c0)))<(((0.40465400589246003)AND(vt0.c1)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1, vt0, v0 WHERE (CASE CAST(v0.c2 AS INTEGER)  WHEN ((t1.c0) NOTNULL) THEN v0.c1 WHEN t1.c1 COLLATE NOCASE THEN (vt0.c1 IN (v0.c1)) WHEN (~ (vt0.c1)) THEN (v0.c1 IN (t1.c0, x'a7')) ELSE ((v0.c2) NOT BETWEEN (t1.c2) AND (t1.c1)) END) ORDER BY (v0.c0 IN ((('-779657011')*(vt0.c0)))) ASC  NULLS LAST, ((((vt0.c0)AND(v0.c0)))<(((0.40465400589246003)AND(vt0.c1)))) DESC  NULLS FIRST;
SELECT * FROM t1 LEFT OUTER JOIN v0 ON LIKELIHOOD(((('1090655501', v0.c0, t1.c2, v0.c2)) NOT BETWEEN ((-614198426, v0.c2, t1.c2, t1.c0)) AND ((t1.c2, v0.c1, t1.c2, v0.c1))), MIN(t1.c2, v0.c0)) WHERE (CASE WHEN t1.c2 COLLATE NOCASE THEN ((((((((((132882391)OR(v0.c0)))AND(v0.c1)))AND('*WEL?NM.9')))OR(t1.c1)))OR(t1.c0)) WHEN ((t1.c2)IS(t1.c1)) THEN ((v0.c2) NOT NULL) ELSE t1.c1 END) ORDER BY ((((((t1.c1)OR(v0.c0)))AND(v0.c0))) NOT BETWEEN ((v0.c1 IN ('0.14019992864274156'))) AND (((t1.c0)GLOB(v0.c0)))) ASC  NULLS FIRST, ((((v0.c0) NOT NULL)) NOT BETWEEN (UPPER(v0.c2)) AND ((+ (v0.c0)))) DESC;
SELECT * FROM t1 INNER JOIN v0 ON LIKELIHOOD(((('1090655501', v0.c0, t1.c2, v0.c2)) NOT BETWEEN ((0xffffffffdb641366, v0.c2, t1.c2, t1.c0)) AND ((t1.c2, v0.c1, t1.c2, v0.c1))), MIN(t1.c2, v0.c0)) WHERE (CASE WHEN t1.c2 COLLATE NOCASE THEN ((((((((((0x7eb9fd7)OR(v0.c0)))AND(v0.c1)))AND('*WEL?NM.9')))OR(t1.c1)))OR(t1.c0)) WHEN ((t1.c2)IS(t1.c1)) THEN ((v0.c2) NOT NULL) ELSE t1.c1 END) ORDER BY ((((((t1.c1)OR(v0.c0)))AND(v0.c0))) NOT BETWEEN ((v0.c1 IN ('0.14019992864274156'))) AND (((t1.c0)GLOB(v0.c0)))) ASC  NULLS FIRST, ((((v0.c0) NOT NULL)) NOT BETWEEN (UPPER(v0.c2)) AND ((+ (v0.c0)))) DESC LIMIT 0X1;
SELECT * FROM t1 LEFT OUTER JOIN v0 ON LIKELIHOOD(((('1090655501', v0.c0, t1.c2, v0.c2)) NOT BETWEEN ((-614198426, v0.c2, t1.c2, t1.c0)) AND ((t1.c2, v0.c1, t1.c2, v0.c1))), MIN(t1.c2, v0.c0)) WHERE (CASE WHEN t1.c2 COLLATE NOCASE THEN ((((((((((132882391)OR(v0.c0)))AND(v0.c1)))AND('*WEL?NM.9')))OR(t1.c1)))OR(t1.c0)) WHEN ((t1.c2)IS(t1.c1)) THEN ((v0.c2) NOT NULL) ELSE t1.c1 END) ORDER BY ((((((t1.c1)OR(v0.c0)))AND(v0.c0))) NOT BETWEEN ((v0.c1 IN ('0.14019992864274156'))) AND (((t1.c0)GLOB(v0.c0)))) ASC  NULLS FIRST, ((((v0.c0) NOT NULL)) NOT BETWEEN (UPPER(v0.c2)) AND ((+ (v0.c0)))) DESC;
SELECT MAX(vt0.c1) FROM vt0 WHERE (PRINTF((NOT (vt0.c1)), vt0.c0)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c1 AS TEXT), vt0.c0)) AND ((((vt0.c0)*(vt0.c0)), ((vt0.c1) IS FALSE), (((vt0.c1, vt0.c0))<((vt0.c1, vt0.c0)))))) DESC  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((PRINTF((NOT (vt0.c1)), vt0.c0))AND(((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c0 THEN 0.5778571559566508 WHEN vt0.c0 THEN 't栦\좪SZ8G' ELSE vt0.c0 END)))AND(((x'd73c') NOT NULL)))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c1 AS TEXT), vt0.c0)) AND ((((vt0.c0)*(vt0.c0)), ((vt0.c1) IS FALSE), (((vt0.c1, vt0.c0))<((vt0.c1, vt0.c0)))))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((((vt0.c0)IS(vt0.c1))) NOTNULL)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c1 AS TEXT), vt0.c0)) AND ((((vt0.c0)*(vt0.c0)), ((vt0.c1) IS FALSE), (((vt0.c1, vt0.c0))<((vt0.c1, vt0.c0)))))) DESC  NULLS FIRST;
SELECT MAX(vt0.c0) FROM vt0 WHERE ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN -2.080115895E9 THEN vt0.c1 ELSE vt0.c0 END IN (((vt0.c1) ISNULL))));
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN -2.080115895E9 THEN vt0.c1 ELSE vt0.c0 END IN (((vt0.c1) ISNULL)))) ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) IS FALSE));
SELECT DISTINCT * FROM v0, vt0 WHERE (((((vt0.c0) IS FALSE))AND((~ (((NULL) NOT BETWEEN (vt0.c0) AND (v0.c2))))))) LIMIT 0X4;
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) IS FALSE));
SELECT DISTINCT * FROM v0, vt0 WHERE (((((vt0.c0) IS FALSE))AND((~ (((NULL) NOT BETWEEN (vt0.c0) AND (v0.c2))))))) LIMIT 0X4;
SELECT * FROM vt0, v0, t1 WHERE ((((t1.c2, vt0.c0, v0.c1)) NOT BETWEEN ((((((((t1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(v0.c2)), ((v0.c1) BETWEEN (t1.c1) AND (v0.c1)), json_array_length(t1.c2))) AND (((v0.c0 IN (v0.c0)), (- (NULL)), ((t1.c1)|(t1.c2))))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((((t1.c2, vt0.c0, v0.c1)) NOT BETWEEN ((((((((t1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(v0.c2)), ((v0.c1) BETWEEN (t1.c1) AND (v0.c1)), json_array_length(t1.c2))) AND (((v0.c0 IN (v0.c0)), (- (NULL)), ((t1.c1)|(t1.c2))))))AND(LOWER(DISTINCT ((-7.94450458E8)==(t1.c2)))))) LIMIT 6;
SELECT * FROM vt0, v0, t1 WHERE ((((t1.c2, vt0.c0, v0.c1)) NOT BETWEEN ((((((((t1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(v0.c2)), ((v0.c1) BETWEEN (t1.c1) AND (v0.c1)), json_array_length(t1.c2))) AND (((v0.c0 IN (v0.c0)), (- (NULL)), ((t1.c1)|(t1.c2))))));
SELECT DISTINCT * FROM vt0, v0, t1 WHERE ((((((t1.c2, vt0.c0, v0.c1)) NOT BETWEEN ((((((((t1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(v0.c2)), ((v0.c1) BETWEEN (t1.c1) AND (v0.c1)), json_array_length(t1.c2))) AND (((v0.c0 IN (v0.c0)), (- (NULL)), ((t1.c1)|(t1.c2))))))AND(LOWER(DISTINCT ((-7.94450458E8)==(t1.c2)))))) LIMIT 6;
SELECT ALL MAX(t1.c2) FROM v0, vt0, t1 WHERE (((((t1.c2) IS FALSE)) BETWEEN (v0.c0) AND (vt0.c1)));
SELECT MAX(t1.c2) FROM v0, vt0, t1 WHERE (((((((t1.c2) IS FALSE)) BETWEEN (v0.c0) AND (vt0.c1)))AND((((((vt0.c0)OR(t1.c0))))=((v0.c2 COLLATE BINARY)))))) ORDER BY CAST(x'37' AS NUMERIC) ASC  NULLS FIRST;
SELECT MAX(v0.c2) FROM vt0, v0, t1 WHERE (x'');
SELECT DISTINCT MAX(v0.c2) FROM vt0, v0, t1 WHERE (((x'')AND(((((t1.c0)*(t1.c0)))-(((((v0.c0)OR(v0.c1)))AND(v0.c2))))))) INTERSECT SELECT DISTINCT MAX(v0.c2) FROM vt0, v0, t1 WHERE (CASE CASE WHEN x'1ee064' THEN vt0.c0 WHEN t1.c1 THEN t1.c0 ELSE v0.c2 END  WHEN CASE NULL  WHEN '' THEN v0.c0 ELSE vt0.c1 END THEN COALESCE(v0.c2, vt0.c0) WHEN v0.c0 THEN ((vt0.c1) NOT NULL) WHEN ((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))AND(vt0.c0)))OR(v0.c2)) THEN ((vt0.c0)+(v0.c2)) END);
SELECT ALL * FROM vt0, v0 CROSS JOIN t1 ON v0.c1 COLLATE NOCASE COLLATE RTRIM WHERE (((t1.c2)GLOB((((t1.c0, t1.c0))>((v0.c0, vt0.c0))))));
SELECT * FROM vt0, v0 CROSS JOIN t1 ON v0.c1 COLLATE NOCASE COLLATE RTRIM WHERE (((((t1.c2)GLOB((((t1.c0, t1.c0))>((v0.c0, vt0.c0))))))AND((((+ (vt0.c0)))+(((t1.c2)/(vt0.c1))))))) INTERSECT SELECT ALL * FROM vt0, v0 CROSS JOIN t1 ON v0.c1 COLLATE NOCASE COLLATE RTRIM WHERE (IFNULL(DISTINCT ((t1.c0) NOT BETWEEN (v0.c1) AND (t1.c1)), v0.c1 COLLATE NOCASE));
SELECT ALL * FROM vt0, v0 CROSS JOIN t1 ON v0.c1 COLLATE NOCASE COLLATE RTRIM WHERE (((t1.c2)GLOB((((t1.c0, t1.c0))>((v0.c0, vt0.c0))))));
SELECT * FROM vt0, v0 CROSS JOIN t1 ON v0.c1 COLLATE NOCASE COLLATE RTRIM WHERE (((((t1.c2)GLOB((((t1.c0, t1.c0))>((v0.c0, vt0.c0))))))AND((((+ (vt0.c0)))+(((t1.c2)/(vt0.c1))))))) INTERSECT SELECT ALL * FROM vt0, v0 CROSS JOIN t1 ON v0.c1 COLLATE NOCASE COLLATE RTRIM WHERE (IFNULL(DISTINCT ((t1.c0) NOT BETWEEN (v0.c1) AND (t1.c1)), v0.c1 COLLATE NOCASE));
SELECT COUNT(*) FROM t1, v0 WHERE ((~ (CASE WHEN t1.c2 THEN v0.c0 WHEN t1.c2 THEN v0.c1 WHEN t1.c1 THEN t1.c2 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END))) ORDER BY ((((t1.c1)*(NULL)))>>(UNLIKELY(DISTINCT t1.c1))) DESC;
SELECT DISTINCT COUNT(*) FROM t1, v0 WHERE ((((~ (CASE WHEN t1.c2 THEN v0.c0 WHEN t1.c2 THEN v0.c1 WHEN t1.c1 THEN t1.c2 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)))AND((((v0.c2 IN ())) BETWEEN (((NULL) ISNULL)) AND ((('')!=(v0.c0))))))) ORDER BY CAST((((0.6634349415837937, t1.c1, 0.020695672468906356))<((t1.c2, '-430116177', v0.c1))) AS NUMERIC)  NULLS FIRST, ((((v0.c0)|(v0.c0)))==(v0.c1)) LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM t1, v0 WHERE (((((((((((((t1.c0)OR(v0.c1)))OR(NULL)))OR(v0.c1)))OR(v0.c1)))AND(t1.c1)))LIKE(NULL))) ORDER BY CAST((((0.6634349415837937, t1.c1, 0.020695672468906356))<((t1.c2, '-430116177', v0.c1))) AS NUMERIC)  NULLS FIRST, ((((v0.c0)|(v0.c0)))==(v0.c1)) LIMIT 1;
SELECT MIN(t1.c0) FROM v0 CROSS JOIN t1 ON ((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) COLLATE BINARY CROSS JOIN vt0 ON (NOT (vt0.c1 COLLATE NOCASE)) WHERE ((((((vt0.c1)>(t1.c0)), ((((v0.c1)AND(t1.c0)))OR(vt0.c0)), CASE WHEN '115292246' THEN t1.c1 WHEN v0.c0 THEN t1.c1 WHEN 'kV' THEN 'IC⪁9y0
' END))<((((v0.c1) NOT BETWEEN (t1.c2) AND (t1.c1)), (- (t1.c1)), json_valid(t1.c0)))));
SELECT ALL MIN(t1.c0) FROM v0 CROSS JOIN t1 ON ((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) COLLATE BINARY CROSS JOIN vt0 ON (NOT (vt0.c1 COLLATE NOCASE)) WHERE ((((((vt0.c1)>(t1.c0)), ((((v0.c1)AND(t1.c0)))OR(vt0.c0)), CASE WHEN '115292246' THEN t1.c1 WHEN v0.c0 THEN t1.c1 WHEN 'kV' THEN 'IC⪁9y0
' END))<((((v0.c1) NOT BETWEEN (t1.c2) AND (t1.c1)), (- (t1.c1)), json_valid(t1.c0))))) ORDER BY CASE ((v0.c0)LIKE(vt0.c0))  WHEN t1.c1 THEN CAST(t1.c0 AS INTEGER) END ASC  NULLS LAST;
SELECT MIN(t1.c2) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2))) ISNULL)) ORDER BY ((x'a7') IS TRUE) DESC  NULLS FIRST, ((t1.c0 COLLATE BINARY) NOTNULL) ASC  NULLS LAST;
SELECT DISTINCT MIN(t1.c2) FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2))) ISNULL)) ORDER BY ((x'a7') IS TRUE) DESC  NULLS FIRST, ((t1.c0 COLLATE BINARY) NOTNULL) ASC  NULLS LAST LIMIT 0X2;
SELECT * FROM v0 INNER JOIN vt0 ON (~ ((v0.c0 IN ()))) NATURAL JOIN t1 WHERE (x'') ORDER BY IFNULL(DISTINCT CAST(t1.c0 AS TEXT), (~ (v0.c0))), CASE WHEN CASE t1.c0  WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN v0.c1 END THEN ((v0.c0)IS NOT(vt0.c0)) WHEN ((vt0.c0)>=(t1.c2)) THEN (((t1.c1, v0.c2))==((vt0.c0, vt0.c1))) WHEN (NOT (v0.c2)) THEN NULL WHEN (v0.c1 IN (vt0.c1)) THEN CASE WHEN t1.c2 THEN v0.c2 WHEN t1.c1 THEN t1.c1 WHEN v0.c0 THEN vt0.c1 ELSE '0.5035986536868896' END END DESC;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (~ ((v0.c0 IN ()))) NATURAL JOIN t1 WHERE (x'') ORDER BY (NOT (vt0.c0 COLLATE BINARY)) ASC LIMIT 1 INTERSECT SELECT * FROM v0 INNER JOIN vt0 ON (~ ((v0.c0 IN ()))) NATURAL JOIN t1 WHERE (v0.c0) ORDER BY (NOT (vt0.c0 COLLATE BINARY)) ASC LIMIT 0X1;
SELECT * FROM v0 INNER JOIN vt0 ON (~ ((v0.c0 IN ()))) NATURAL JOIN t1 WHERE (x'') ORDER BY IFNULL(DISTINCT CAST(t1.c0 AS TEXT), (~ (v0.c0))), CASE WHEN CASE t1.c0  WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN v0.c1 END THEN ((v0.c0)IS NOT(vt0.c0)) WHEN ((vt0.c0)>=(t1.c2)) THEN (((t1.c1, v0.c2))==((vt0.c0, vt0.c1))) WHEN (NOT (v0.c2)) THEN NULL WHEN (v0.c1 IN (vt0.c1)) THEN CASE WHEN t1.c2 THEN v0.c2 WHEN t1.c1 THEN t1.c1 WHEN v0.c0 THEN vt0.c1 ELSE '0.5035986536868896' END END DESC;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (~ ((v0.c0 IN ()))) NATURAL JOIN t1 WHERE (x'') ORDER BY (NOT (vt0.c0 COLLATE BINARY)) ASC LIMIT 1 INTERSECT SELECT * FROM v0 INNER JOIN vt0 ON (~ ((v0.c0 IN ()))) NATURAL JOIN t1 WHERE (v0.c0) ORDER BY (NOT (vt0.c0 COLLATE BINARY)) ASC LIMIT 0X1;
SELECT ALL MAX(vt0.c0) FROM v0, vt0, t1 WHERE (((((v0.c0)OR(vt0.c0)))OR(t1.c0)) COLLATE RTRIM) ORDER BY ((((((t1.c0)OR(t1.c0)))OR(vt0.c1)))|(CAST(vt0.c1 AS BLOB))), (((~ (-1650154887)))<=(v0.c2)) DESC  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c0) FROM v0, vt0, t1 WHERE (((((v0.c0)OR(vt0.c0)))OR(t1.c0)) COLLATE RTRIM) ORDER BY CAST(((vt0.c0)==(v0.c0)) AS REAL)  NULLS LAST, (~ (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((ABS(DISTINCT vt0.c1)) BETWEEN (((v0.c1) ISNULL)) AND ((~ (vt0.c1))))  NULLS FIRST;
SELECT MAX(v0.c2) FROM t1, v0 WHERE (CASE WHEN (NOT (v0.c0)) THEN (((v0.c1, v0.c0))<((t1.c1, v0.c0))) WHEN UNLIKELY(DISTINCT t1.c0) THEN (t1.c1 IN ()) WHEN CASE WHEN t1.c2 THEN 'NCtlq
N' WHEN v0.c1 THEN t1.c1 END THEN (t1.c2 IN (v0.c1)) ELSE ((v0.c0) BETWEEN (t1.c2) AND (v0.c0)) END);
SELECT DISTINCT MAX(v0.c2) FROM t1, v0 WHERE (CASE WHEN (NOT (v0.c0)) THEN (((v0.c1, v0.c0))<((t1.c1, v0.c0))) WHEN UNLIKELY(DISTINCT t1.c0) THEN (t1.c1 IN ()) WHEN CASE WHEN t1.c2 THEN 'NCtlq
N' WHEN v0.c1 THEN t1.c1 END THEN (t1.c2 IN (v0.c1)) ELSE ((v0.c0) BETWEEN (t1.c2) AND (v0.c0)) END);
SELECT ALL * FROM v0 NATURAL JOIN t1 WHERE (((((v0.c0)%(v0.c1))) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN t1 WHERE (((((v0.c0)%(v0.c1))) ISNULL)) ORDER BY CAST((v0.c1 IN ()) AS INTEGER)  NULLS LAST, t1.c2 ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM v0 NATURAL JOIN t1 WHERE ((((((t1.c2))<((t1.c1)))) NOTNULL)) ORDER BY CAST((v0.c1 IN ()) AS INTEGER)  NULLS LAST, t1.c2 ASC LIMIT 0;
SELECT ALL * FROM v0 NATURAL JOIN t1 WHERE (((((v0.c0)%(v0.c1))) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN t1 WHERE (((((v0.c0)%(v0.c1))) ISNULL)) ORDER BY CAST((v0.c1 IN ()) AS INTEGER)  NULLS LAST, t1.c2 ASC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM v0 NATURAL JOIN t1 WHERE ((((((t1.c2))<((t1.c1)))) NOTNULL)) ORDER BY CAST((v0.c1 IN ()) AS INTEGER)  NULLS LAST, t1.c2 ASC LIMIT 0;
SELECT MAX(vt0.c1) FROM v0 INNER JOIN vt0 ON CASE WHEN IFNULL(v0.c1, t1.c0) THEN x'' END CROSS JOIN t1 ON NULL WHERE (((((((((((((LOWER(DISTINCT t1.c2))OR(((((((v0.c2)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))))OR((((t1.c0, vt0.c1, t1.c1)) BETWEEN ((vt0.c1, vt0.c0, t1.c0)) AND ((t1.c0, 0x2f8f9432, vt0.c0))))))AND(load_extension(t1.c0, vt0.c1))))OR((((t1.c2))>((t1.c2))))))AND(((t1.c2) IS TRUE))))AND((NOT (t1.c2)))));
SELECT ALL MAX(vt0.c1) FROM v0 INNER JOIN vt0 ON CASE WHEN IFNULL(v0.c1, t1.c0) THEN x'' END CROSS JOIN t1 ON NULL WHERE (((((((((((((((LOWER(DISTINCT t1.c2))OR(((((((v0.c2)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))))OR((((t1.c0, vt0.c1, t1.c1)) BETWEEN ((vt0.c1, vt0.c0, t1.c0)) AND ((t1.c0, 0x2f8f9432, vt0.c0))))))AND(load_extension(t1.c0, vt0.c1))))OR((((t1.c2))>((t1.c2))))))AND(((t1.c2) IS TRUE))))AND((NOT (t1.c2)))))AND((CASE WHEN -883523162 THEN t1.c1 ELSE t1.c1 END IN ())))) INTERSECT SELECT MAX(vt0.c1) FROM v0 INNER JOIN vt0 ON CASE WHEN IFNULL(v0.c1, t1.c0) THEN x'' END CROSS JOIN t1 ON NULL WHERE (((('gl')) NOT BETWEEN ((((t1.c2) IS TRUE))) AND ((CAST(vt0.c0 AS TEXT)))));
SELECT * FROM v0, vt0, t1 WHERE ((+ (((v0.c1) NOT BETWEEN (t1.c2) AND (v0.c1))))) ORDER BY ((vt0.c1) NOT BETWEEN ((((t1.c0)) BETWEEN ((v0.c2)) AND ((v0.c2)))) AND (0.40296438401413837))  NULLS FIRST;
SELECT DISTINCT * FROM v0, vt0, t1 NOT INDEXED WHERE ((((+ (((v0.c1) NOT BETWEEN (t1.c2) AND (v0.c1)))))AND((+ (((vt0.c0)-(v0.c0))))))) ORDER BY ((vt0.c1) NOT BETWEEN ((((t1.c0)) BETWEEN ((v0.c2)) AND ((v0.c2)))) AND (0.40296438401413837))  NULLS FIRST LIMIT 0X0;
SELECT * FROM v0, vt0, t1 WHERE ((+ (((v0.c1) NOT BETWEEN (t1.c2) AND (v0.c1))))) ORDER BY ((vt0.c1) NOT BETWEEN ((((t1.c0)) BETWEEN ((v0.c2)) AND ((v0.c2)))) AND (0.40296438401413837))  NULLS FIRST;
SELECT DISTINCT * FROM v0, vt0, t1 NOT INDEXED WHERE ((((+ (((v0.c1) NOT BETWEEN (t1.c2) AND (v0.c1)))))AND((+ (((vt0.c0)-(v0.c0))))))) ORDER BY ((vt0.c1) NOT BETWEEN ((((t1.c0)) BETWEEN ((v0.c2)) AND ((v0.c2)))) AND (0.40296438401413837))  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1, vt0 NATURAL JOIN v0 WHERE (v0.c2 COLLATE NOCASE);
SELECT ALL * FROM t1, vt0 NATURAL JOIN v0 WHERE (((v0.c2 COLLATE NOCASE)AND('e[6箫*k'))) ORDER BY (((v0.c0)*(x'')) IN (((v0.c1)-(v0.c2)))) DESC, (+ (CAST(v0.c0 AS REAL)))  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL * FROM t1, vt0 NATURAL JOIN v0 WHERE (((((SQLITE_COMPILEOPTION_GET(v0.c2))OR(t1.c0)))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (((v0.c0)*(x'')) IN (((v0.c1)-(v0.c2)))) DESC, (+ (CAST(v0.c0 AS REAL)))  NULLS FIRST LIMIT 1;
SELECT * FROM t1, vt0 NATURAL JOIN v0 WHERE (v0.c2 COLLATE NOCASE);
SELECT ALL * FROM t1, vt0 NATURAL JOIN v0 WHERE (((v0.c2 COLLATE NOCASE)AND('e[6箫*k'))) ORDER BY (((v0.c0)*(x'')) IN (((v0.c1)-(v0.c2)))) DESC, (+ (CAST(v0.c0 AS REAL)))  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL * FROM t1, vt0 NATURAL JOIN v0 WHERE (((((SQLITE_COMPILEOPTION_GET(v0.c2))OR(t1.c0)))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (((v0.c0)*(x'')) IN (((v0.c1)-(v0.c2)))) DESC, (+ (CAST(v0.c0 AS REAL)))  NULLS FIRST LIMIT 1;
SELECT ALL MAX(vt0.c0) FROM t1, vt0, v0 WHERE (t1.c0);
SELECT DISTINCT MAX(vt0.c0) FROM t1, vt0, v0 WHERE (((t1.c0)AND(((((((v0.c0)AND(vt0.c0)))OR(t1.c1))) NOTNULL)))) ORDER BY v0.c2  NULLS FIRST, ((((v0.c0)>=(vt0.c0))) BETWEEN (((0.28207283859889454)||(0X53aab50f))) AND (CASE WHEN t1.c2 THEN v0.c2 END)) ASC  NULLS FIRST LIMIT 0X2;
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE (((((vt0.c0) ISNULL))&(CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY COALESCE('㷡0쒽eKn', t1.c0) COLLATE RTRIM;
SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE (((((((vt0.c0) ISNULL))&(CASE WHEN vt0.c1 THEN vt0.c1 END)))AND(x''))) ORDER BY t1.c0  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (t1.c2) AND (t1.c1)))LIKE((((t1.c1, t1.c0, t1.c2, vt0.c1)) BETWEEN ((t1.c2, t1.c1, x'29', t1.c0)) AND ((vt0.c0, t1.c0, t1.c0, t1.c2))))) ASC  NULLS FIRST, (('-1472402269') IS FALSE)  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE (((((CASE vt0.c1  WHEN t1.c1 THEN t1.c2 WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c0 ELSE t1.c1 END)OR(CAST(vt0.c0 AS NUMERIC))))OR(CAST(vt0.c1 AS BLOB)))) ORDER BY t1.c0  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (t1.c2) AND (t1.c1)))LIKE((((t1.c1, t1.c0, t1.c2, vt0.c1)) BETWEEN ((t1.c2, t1.c1, x'29', t1.c0)) AND ((vt0.c0, t1.c0, t1.c0, t1.c2))))) ASC  NULLS FIRST, (('-1472402269') IS FALSE)  NULLS LAST;
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE (((((vt0.c0) ISNULL))&(CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY COALESCE('㷡0쒽eKn', t1.c0) COLLATE RTRIM;
SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE (((((((vt0.c0) ISNULL))&(CASE WHEN vt0.c1 THEN vt0.c1 END)))AND(x''))) ORDER BY t1.c0  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (t1.c2) AND (t1.c1)))LIKE((((t1.c1, t1.c0, t1.c2, vt0.c1)) BETWEEN ((t1.c2, t1.c1, x'29', t1.c0)) AND ((vt0.c0, t1.c0, t1.c0, t1.c2))))) ASC  NULLS FIRST, (('-1472402269') IS FALSE)  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE (((((CASE vt0.c1  WHEN t1.c1 THEN t1.c2 WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c0 ELSE t1.c1 END)OR(CAST(vt0.c0 AS NUMERIC))))OR(CAST(vt0.c1 AS BLOB)))) ORDER BY t1.c0  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (t1.c2) AND (t1.c1)))LIKE((((t1.c1, t1.c0, t1.c2, vt0.c1)) BETWEEN ((t1.c2, t1.c1, x'29', t1.c0)) AND ((vt0.c0, t1.c0, t1.c0, t1.c2))))) ASC  NULLS FIRST, (('-1472402269') IS FALSE)  NULLS LAST;
SELECT MAX(v0.c0) FROM vt0, t1, v0 WHERE (((CASE v0.c1  WHEN v0.c1 THEN v0.c2 END) BETWEEN (((v0.c1) BETWEEN (v0.c1) AND (t1.c0))) AND (MIN(v0.c2, t1.c1, t1.c1)))) ORDER BY (v0.c1 COLLATE RTRIM IN (t1.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL MAX(v0.c0) FROM vt0, t1, v0 WHERE (((((CASE v0.c1  WHEN v0.c1 THEN v0.c2 END) BETWEEN (((v0.c1) BETWEEN (v0.c1) AND (t1.c0))) AND (MIN(v0.c2, t1.c1, t1.c1))))AND((NOT (-2011005518)) COLLATE NOCASE))) ORDER BY (v0.c1 COLLATE RTRIM IN (t1.c1 COLLATE RTRIM)) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)>(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)>(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (((CASE WHEN t1.c2 THEN v0.c0 ELSE vt0.c0 END) BETWEEN ((((v0.c2, t1.c0, t1.c1)) BETWEEN ((vt0.c0, v0.c1, vt0.c1)) AND ((vt0.c0, NULL, v0.c2)))) AND (CAST('-1229566912' AS BLOB)))) ORDER BY ((json_remove(t1.c2, v0.c1))AND(((v0.c2)<(v0.c0)))) ASC;
SELECT DISTINCT COUNT(*) FROM v0, vt0, t1 WHERE (((CASE WHEN t1.c2 THEN v0.c0 ELSE vt0.c0 END) BETWEEN ((((v0.c2, t1.c0, t1.c1)) BETWEEN ((vt0.c0, v0.c1, vt0.c1)) AND ((vt0.c0, NULL, v0.c2)))) AND (CAST('-1229566912' AS BLOB)))) ORDER BY ((json_remove(t1.c2, v0.c1))AND(((v0.c2)<(v0.c0)))) ASC;
SELECT ALL * FROM v0, t1, vt0 WHERE (((v0.c2) NOT BETWEEN (vt0.c0) AND ((vt0.c1 IN (v0.c1))))) ORDER BY CAST(((0Xffffffffadc522e9)<(v0.c0)) AS TEXT)  NULLS LAST;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((v0.c2) NOT BETWEEN (vt0.c0) AND ((vt0.c1 IN (v0.c1)))))AND((((t1.c2) IS FALSE) IN (v0.c2))))) ORDER BY CAST(((0xffffffffadc522e9)<(v0.c0)) AS TEXT)  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((CAST(vt0.c0 AS REAL))<=(CASE v0.c0  WHEN vt0.c1 THEN t1.c2 ELSE t1.c0 END))) ORDER BY CAST(((-1379589399)<(v0.c0)) AS TEXT)  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM v0, t1, vt0 WHERE (((v0.c2) NOT BETWEEN (vt0.c0) AND ((vt0.c1 IN (v0.c1))))) ORDER BY CAST(((0Xffffffffadc522e9)<(v0.c0)) AS TEXT)  NULLS LAST;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((v0.c2) NOT BETWEEN (vt0.c0) AND ((vt0.c1 IN (v0.c1)))))AND((((t1.c2) IS FALSE) IN (v0.c2))))) ORDER BY CAST(((0xffffffffadc522e9)<(v0.c0)) AS TEXT)  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((CAST(vt0.c0 AS REAL))<=(CASE v0.c0  WHEN vt0.c1 THEN t1.c2 ELSE t1.c0 END))) ORDER BY CAST(((-1379589399)<(v0.c0)) AS TEXT)  NULLS LAST LIMIT 0x1;
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c1 IN ()) COLLATE NOCASE) ORDER BY HEX(DISTINCT (- (v0.c0))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1 IN ()) COLLATE NOCASE)AND((((((((x'6c' IN (v0.c1)))AND(CAST(v0.c2 AS BLOB))))AND(((((((((((v0.c2)OR(v0.c2)))OR(v0.c0)))AND(v0.c0)))OR(v0.c2)))AND(v0.c1)))))AND((((v0.c2))=((v0.c1)))))))) ORDER BY ((((v0.c0)/(v0.c1)))*(CAST(v0.c2 AS TEXT))) DESC;
SELECT ALL MIN(t1.c0) FROM t1, vt0 WHERE ((((t1.c1)) BETWEEN (((t1.c2 IN (t1.c1, vt0.c0, vt0.c0)))) AND ((t1.c0))));
SELECT MIN(t1.c0) FROM t1, vt0 WHERE ((((((t1.c1)) BETWEEN (((t1.c2 IN (t1.c1)))) AND ((t1.c0))))AND(((CAST(x'51' AS TEXT))/(t1.c1 COLLATE RTRIM))))) ORDER BY -1.386814678E9, (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((t1.c2)+(vt0.c0)), CASE WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, CAST(t1.c1 AS BLOB))) AND ((CASE WHEN t1.c2 THEN vt0.c0 END, ((vt0.c1)<>(t1.c2)), ((NULL) BETWEEN ('') AND (t1.c2))))) ASC  NULLS LAST LIMIT 0x1 INTERSECT SELECT MIN(t1.c0) FROM t1, vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c0)) AS TEXT)) ORDER BY -1.386814678E9, (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((t1.c2)+(vt0.c0)), CASE WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, CAST(t1.c1 AS BLOB))) AND ((CASE WHEN t1.c2 THEN vt0.c0 END, ((vt0.c1)!=(t1.c2)), ((NULL) BETWEEN ('') AND (t1.c2))))) ASC  NULLS LAST LIMIT 0x1;
SELECT ALL MAX(vt0.c0) FROM vt0, t1, v0 WHERE (IFNULL(UPPER(t1.c0), CAST('469225696' AS BLOB)));
SELECT ALL MAX(vt0.c0) FROM vt0, t1, v0 WHERE (((IFNULL(UPPER(t1.c0), CAST('469225696' AS BLOB)))AND(x''))) LIMIT 0x3;
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c2, v0.c2))<=((v0.c0, v0.c2)))) BETWEEN (((v0.c2)/(v0.c1))) AND (((v0.c2) NOTNULL))) ASC  NULLS LAST, ((('128282561' IN (v0.c2, v0.c2))) BETWEEN (((v0.c1)*(v0.c1))) AND (v0.c0)) ASC;
SELECT ALL * FROM v0 WHERE (((v0.c0)AND(((ABS(v0.c1)) IS FALSE)))) ORDER BY (((((v0.c2, v0.c2))<=((v0.c0, v0.c2)))) BETWEEN (((v0.c2)/(v0.c1))) AND (((v0.c2) NOTNULL))) ASC  NULLS LAST, ((('128282561' IN (v0.c2, v0.c2))) BETWEEN (((v0.c1)*(v0.c1))) AND (v0.c0)) ASC INTERSECT SELECT * FROM v0 WHERE ((v0.c1 IN ())) ORDER BY (((((v0.c2, v0.c2))<=((v0.c0, v0.c2)))) BETWEEN (((v0.c2)/(v0.c1))) AND (((v0.c2) NOTNULL))) ASC  NULLS LAST, ((('128282561' IN (v0.c2, v0.c2))) BETWEEN (((v0.c1)*(v0.c1))) AND (v0.c0)) ASC;
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c2, v0.c2))<=((v0.c0, v0.c2)))) BETWEEN (((v0.c2)/(v0.c1))) AND (((v0.c2) NOTNULL))) ASC  NULLS LAST, ((('128282561' IN (v0.c2, v0.c2))) BETWEEN (((v0.c1)*(v0.c1))) AND (v0.c0)) ASC;
SELECT ALL * FROM v0 WHERE (((v0.c0)AND(((ABS(v0.c1)) IS FALSE)))) ORDER BY (((((v0.c2, v0.c2))<=((v0.c0, v0.c2)))) BETWEEN (((v0.c2)/(v0.c1))) AND (((v0.c2) NOTNULL))) ASC  NULLS LAST, ((('128282561' IN (v0.c2, v0.c2))) BETWEEN (((v0.c1)*(v0.c1))) AND (v0.c0)) ASC INTERSECT SELECT * FROM v0 WHERE ((v0.c1 IN ())) ORDER BY (((((v0.c2, v0.c2))<=((v0.c0, v0.c2)))) BETWEEN (((v0.c2)/(v0.c1))) AND (((v0.c2) NOTNULL))) ASC  NULLS LAST, ((('128282561' IN (v0.c2, v0.c2))) BETWEEN (((v0.c1)*(v0.c1))) AND (v0.c0)) ASC;
SELECT * FROM v0 WHERE (((SQLITE_SOURCE_ID()) NOTNULL)) ORDER BY (((((v0.c2)OR(v0.c2)))OR(v0.c2)) IN ()) ASC  NULLS FIRST, v0.c1 DESC  NULLS LAST;
SELECT DISTINCT * FROM v0 WHERE (((((SQLITE_SOURCE_ID()) NOTNULL))AND(CASE WHEN v0.c0 THEN NULL WHEN ABS(v0.c1) THEN ((v0.c1)<(v0.c2)) END))) ORDER BY (((((v0.c2)OR(v0.c2)))OR(v0.c2)) IN ()) ASC  NULLS FIRST, v0.c1 DESC  NULLS LAST LIMIT 0X2;
SELECT * FROM v0 WHERE (((SQLITE_SOURCE_ID()) NOTNULL)) ORDER BY (((((v0.c2)OR(v0.c2)))OR(v0.c2)) IN ()) ASC  NULLS FIRST, v0.c1 DESC  NULLS LAST;
SELECT ALL MAX(v0.c2) FROM v0 WHERE ((- ((((v0.c0, v0.c1))>((v0.c2, v0.c0)))))) ORDER BY LOWER(DISTINCT ((v0.c1)<(v0.c0))) ASC  NULLS LAST;
SELECT ALL MAX(v0.c2) FROM v0 WHERE ((((- ((((v0.c0, v0.c1))>((v0.c2, v0.c0))))))AND((((v0.c2, ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)), v0.c2))>((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)), ((((((v0.c0)AND(v0.c1)))OR(v0.c1)))AND(v0.c2)), ((v0.c2)!=(0.8757732934990821)))))))) ORDER BY UNLIKELY(v0.c2) COLLATE NOCASE, QUOTE(((v0.c1)/(v0.c0))) ASC  NULLS FIRST INTERSECT SELECT MAX(v0.c2) FROM v0 WHERE ((NOT (((((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(v0.c2)))OR(v0.c2))))) ORDER BY UNLIKELY(v0.c2) COLLATE NOCASE, QUOTE(((v0.c1)/(v0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT * FROM t1 WHERE (((t1.c1)AND(((((t1.c0) NOT BETWEEN (t1.c0) AND (0.9111810370679712))) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c2))) AND (((t1.c0)-(t1.c1))))))) LIMIT 0x2 INTERSECT SELECT ALL * FROM t1 WHERE (((((('P脏')) BETWEEN ((t1.c2)) AND ((NULL))))IS NOT(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT * FROM t1 WHERE (((t1.c1)AND(((((t1.c0) NOT BETWEEN (t1.c0) AND (0.9111810370679712))) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c2))) AND (((t1.c0)-(t1.c1))))))) LIMIT 0x2 INTERSECT SELECT ALL * FROM t1 WHERE (((((('P脏')) BETWEEN ((t1.c2)) AND ((NULL))))IS NOT(((t1.c1) BETWEEN (t1.c1) AND (t1.c0))))) LIMIT 0x2;
SELECT COUNT(*) FROM t1, vt0 WHERE (((UNICODE(t1.c0))||((NOT (vt0.c1)))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((UNICODE(t1.c0))||((NOT (vt0.c1))))) ORDER BY (((vt0.c1, vt0.c0)) NOT BETWEEN (((('-1970105594') BETWEEN (vt0.c1) AND (t1.c1)), t1.c0 COLLATE BINARY)) AND ((((t1.c0) NOT NULL), ((t1.c2) BETWEEN (t1.c0) AND (0Xffffffffb0c033dc))))) ASC  NULLS FIRST, NULL DESC  NULLS FIRST;
SELECT ALL MAX(t1.c2) FROM v0, t1, vt0 WHERE (x'c6') ORDER BY (((v0.c0))<=((((((vt0.c1)OR(v0.c0)))AND(t1.c0)))))  NULLS LAST, (((t1.c2, v0.c1)) BETWEEN ((((((((((vt0.c0)AND(0x491b7399)))OR(v0.c0)))AND(v0.c1)))OR(t1.c2)), ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(t1.c0)))) AND ((((t1.c2) BETWEEN (v0.c1) AND (t1.c2)), t1.c2 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT MAX(t1.c2) FROM v0, t1, vt0 WHERE (x'c6') ORDER BY (((v0.c0))<=((((((vt0.c1)OR(v0.c0)))AND(t1.c0)))))  NULLS LAST, (((t1.c2, v0.c1)) BETWEEN ((((((((((vt0.c0)AND(1226535833)))OR(v0.c0)))AND(v0.c1)))OR(t1.c2)), ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(t1.c0)))) AND ((((t1.c2) BETWEEN (v0.c1) AND (t1.c2)), t1.c2 COLLATE NOCASE))) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM v0, t1 WHERE ((((v0.c2 IN (v0.c1))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (t1.c0)));
SELECT DISTINCT * FROM v0, t1 WHERE ((((((v0.c2 IN (v0.c1))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (t1.c0)))AND(SQLITE_SOURCE_ID()))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE (((CASE WHEN t1.c1 THEN v0.c0 WHEN t1.c2 THEN v0.c2 ELSE t1.c2 END)>>(((v0.c2) BETWEEN (v0.c1) AND (NULL))))) LIMIT 1;
SELECT ALL * FROM v0, t1 WHERE ((((v0.c2 IN (v0.c1))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (t1.c0)));
SELECT DISTINCT * FROM v0, t1 WHERE ((((((v0.c2 IN (v0.c1))) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (t1.c0)))AND(SQLITE_SOURCE_ID()))) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM v0, t1 WHERE (((CASE WHEN t1.c1 THEN v0.c0 WHEN t1.c2 THEN v0.c2 ELSE t1.c2 END)>>(((v0.c2) BETWEEN (v0.c1) AND (NULL))))) LIMIT 1;
SELECT ALL * FROM vt0 INNER JOIN t1 ON (((v0.c0, t1.c1)) BETWEEN (((~ (t1.c1)), (v0.c1 IN ()))) AND ((((NULL) IS TRUE), ((t1.c2)-(t1.c1))))) INNER JOIN v0 ON x'e1bfa5' COLLATE RTRIM WHERE ((((LAST_INSERT_ROWID(), (vt0.c0 IN ())))<=((((v0.c2) NOT BETWEEN (t1.c1) AND (vt0.c1)), NULL)))) ORDER BY (((v0.c2) IS TRUE) IN ())  NULLS FIRST, x'71252a' DESC;
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON (((v0.c0, t1.c1)) BETWEEN (((~ (t1.c1)), (v0.c1 IN ()))) AND ((((NULL) IS TRUE), ((t1.c2)-(t1.c1))))) INNER JOIN v0 ON x'e1bfa5' COLLATE RTRIM WHERE ((((((LAST_INSERT_ROWID(), (vt0.c0 IN ())))<=((((v0.c2) NOT BETWEEN (t1.c1) AND (vt0.c1)), NULL))))AND(v0.c1))) ORDER BY (((v0.c2) IS TRUE) IN ())  NULLS FIRST, x'71252a' DESC LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON (((v0.c0, t1.c1)) BETWEEN (((~ (t1.c1)), (v0.c1 IN ()))) AND ((((NULL) IS TRUE), ((t1.c2)-(t1.c1))))) INNER JOIN v0 ON x'e1bfa5' COLLATE RTRIM WHERE (CAST(CASE v0.c2  WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN v0.c2 THEN vt0.c1 ELSE vt0.c0 END AS BLOB)) ORDER BY (((v0.c2) IS TRUE) IN ())  NULLS FIRST, x'71252a' DESC LIMIT 0x1;
SELECT ALL * FROM vt0 INNER JOIN t1 ON (((v0.c0, t1.c1)) BETWEEN (((~ (t1.c1)), (v0.c1 IN ()))) AND ((((NULL) IS TRUE), ((t1.c2)-(t1.c1))))) INNER JOIN v0 ON x'e1bfa5' COLLATE RTRIM WHERE ((((LAST_INSERT_ROWID(), (vt0.c0 IN ())))<=((((v0.c2) NOT BETWEEN (t1.c1) AND (vt0.c1)), NULL)))) ORDER BY (((v0.c2) IS TRUE) IN ())  NULLS FIRST, x'71252a' DESC;
SELECT ALL * FROM t1 WHERE ((((t1.c2, t1.c1, t1.c0)) NOT BETWEEN (((((t1.c2))<=((t1.c0))), (('-841927177') NOTNULL), rtreenode(x'7f56ed97', t1.c1))) AND ((((t1.c0)>=(t1.c1)), ((('977443450'))>=((t1.c0))), ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))))) ORDER BY CAST(((t1.c1)GLOB(t1.c2)) AS REAL) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c2, t1.c1, t1.c0)) NOT BETWEEN (((((t1.c2))<=((t1.c0))), (('-841927177') NOTNULL), rtreenode(x'7f56ed97', t1.c1))) AND ((((t1.c0)>=(t1.c1)), ((('977443450'))>=((t1.c0))), ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))))) ORDER BY 2.03799364E8 COLLATE BINARY ASC, (((t1.c2 IN (t1.c2))) IS TRUE) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((('頭挤', ((t1.c1) BETWEEN (t1.c0) AND (t1.c0))))<>(((+ (t1.c2)), ((t1.c1)+(t1.c1)))))) ORDER BY 2.03799364E8 COLLATE BINARY ASC, (((t1.c2 IN (t1.c2))) IS TRUE);
SELECT ALL * FROM t1 WHERE ((((t1.c2, t1.c1, t1.c0)) NOT BETWEEN (((((t1.c2))<=((t1.c0))), (('-841927177') NOTNULL), rtreenode(x'7f56ed97', t1.c1))) AND ((((t1.c0)>=(t1.c1)), ((('977443450'))>=((t1.c0))), ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))))) ORDER BY CAST(((t1.c1)GLOB(t1.c2)) AS REAL) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c2, t1.c1, t1.c0)) NOT BETWEEN (((((t1.c2))<=((t1.c0))), (('-841927177') NOTNULL), rtreenode(x'7f56ed97', t1.c1))) AND ((((t1.c0)>=(t1.c1)), ((('977443450'))>=((t1.c0))), ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c1)))))) ORDER BY 2.03799364E8 COLLATE BINARY ASC, (((t1.c2 IN (t1.c2))) IS TRUE) INTERSECT SELECT DISTINCT * FROM t1 WHERE (((('頭挤', ((t1.c1) BETWEEN (t1.c0) AND (t1.c0))))<>(((+ (t1.c2)), ((t1.c1)+(t1.c1)))))) ORDER BY 2.03799364E8 COLLATE BINARY ASC, (((t1.c2 IN (t1.c2))) IS TRUE);
SELECT MAX(v0.c1) FROM v0 WHERE (((((v0.c2)IS NOT(v0.c1))) ISNULL)) ORDER BY (~ (v0.c1)) COLLATE BINARY DESC  NULLS LAST, CASE WHEN (+ (v0.c1)) THEN (~ (v0.c1)) ELSE (((v0.c2)) BETWEEN ((NULL)) AND ((v0.c1))) END ASC  NULLS FIRST, (((v0.c1, v0.c1, v0.c0, v0.c0)) BETWEEN ((CAST(v0.c1 AS REAL), v0.c0, v0.c1 COLLATE BINARY, '-1805692362')) AND ((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN '1709102821' WHEN v0.c0 THEN v0.c1 END, rtreenode(v0.c2, v0.c2), (((v0.c2, v0.c2)) BETWEEN ((v0.c1, v0.c2)) AND (('C', v0.c1))), ((v0.c1) IS TRUE))));
SELECT MAX(v0.c1) FROM v0 WHERE (((((((v0.c2)IS NOT(v0.c1))) ISNULL))AND((((('0.056044665094190815')&(v0.c1)))>=(v0.c2 COLLATE BINARY))))) ORDER BY ((((v0.c0)>=(v0.c2)))||(0.9930580999133033)) ASC INTERSECT SELECT ALL MAX(v0.c1) FROM v0 WHERE (v0.c2 COLLATE RTRIM) ORDER BY ((((v0.c0)>=(v0.c2)))||(0.9930580999133033)) ASC;
SELECT * FROM t1 WHERE (NULL) ORDER BY ((((t1.c1 COLLATE BINARY)OR(UNLIKELY(DISTINCT t1.c1))))OR(((t1.c1)*(t1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY ((((t1.c1)IS NOT(t1.c2))) BETWEEN (CASE t1.c0  WHEN '-499593648' THEN t1.c0 WHEN t1.c0 THEN t1.c2 END) AND ((((t1.c2, t1.c0))<=((t1.c0, t1.c1))))) ASC LIMIT 0;
SELECT * FROM t1 WHERE (NULL) ORDER BY ((((t1.c1 COLLATE BINARY)OR(UNLIKELY(DISTINCT t1.c1))))OR(((t1.c1)*(t1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY ((((t1.c1)IS NOT(t1.c2))) BETWEEN (CASE t1.c0  WHEN '-499593648' THEN t1.c0 WHEN t1.c0 THEN t1.c2 END) AND ((((t1.c2, t1.c0))<=((t1.c0, t1.c1))))) ASC LIMIT 0;
SELECT * FROM t1 WHERE (((((((((((((((((CAST(t1.c1 AS INTEGER))OR(t1.c0)))AND(t1.c0 COLLATE RTRIM)))OR(CAST(t1.c2 AS BLOB))))AND((t1.c2 IN (t1.c1)))))OR((t1.c0 IN (t1.c0)))))OR((0.99538934180815 IN ()))))OR(((t1.c0) BETWEEN (t1.c0) AND ('3?')))))OR(((t1.c0)IS NOT(t1.c1)))));
SELECT * FROM t1 WHERE (((((((((((((((((((CAST(t1.c1 AS INTEGER))OR(t1.c0)))AND(t1.c0 COLLATE RTRIM)))OR(CAST(t1.c2 AS BLOB))))AND((t1.c2 IN (t1.c1)))))OR((t1.c0 IN (t1.c0)))))OR((0.99538934180815 IN ()))))OR(((t1.c0) BETWEEN (t1.c0) AND ('3?')))))OR(((t1.c0)IS NOT(t1.c1)))))AND(((((((((((t1.c2)AND(SQLITE_COMPILEOPTION_USED(t1.c0))))OR(((('-1764809039'))<=((t1.c0))))))AND(((((t1.c1)OR(t1.c2)))AND(t1.c0)))))AND((NULL IN (t1.c0)))))AND((((t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c2)))))))) ORDER BY (((t1.c1 IN (t1.c1))) NOTNULL)  NULLS FIRST, (t1.c2 IN (t1.c2)) COLLATE BINARY ASC  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (((((((((((((((((CAST(t1.c1 AS INTEGER))OR(t1.c0)))AND(t1.c0 COLLATE RTRIM)))OR(CAST(t1.c2 AS BLOB))))AND((t1.c2 IN (t1.c1)))))OR((t1.c0 IN (t1.c0)))))OR((0.99538934180815 IN ()))))OR(((t1.c0) BETWEEN (t1.c0) AND ('3?')))))OR(((t1.c0)IS NOT(t1.c1)))));
SELECT * FROM t1 WHERE (((((((((((((((((((CAST(t1.c1 AS INTEGER))OR(t1.c0)))AND(t1.c0 COLLATE RTRIM)))OR(CAST(t1.c2 AS BLOB))))AND((t1.c2 IN (t1.c1)))))OR((t1.c0 IN (t1.c0)))))OR((0.99538934180815 IN ()))))OR(((t1.c0) BETWEEN (t1.c0) AND ('3?')))))OR(((t1.c0)IS NOT(t1.c1)))))AND(((((((((((t1.c2)AND(SQLITE_COMPILEOPTION_USED(t1.c0))))OR(((('-1764809039'))<=((t1.c0))))))AND(((((t1.c1)OR(t1.c2)))AND(t1.c0)))))AND((NULL IN (t1.c0)))))AND((((t1.c1, t1.c0)) BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c2)))))))) ORDER BY (((t1.c1 IN (t1.c1))) NOTNULL)  NULLS FIRST, (t1.c2 IN (t1.c2)) COLLATE BINARY ASC  NULLS FIRST LIMIT 0;
SELECT * FROM v0 LEFT OUTER JOIN t1 ON ((CAST(-1.11518474E8 AS TEXT))/('70346026')) WHERE (v0.c2) ORDER BY (t1.c0 COLLATE NOCASE IN (x'', CASE v0.c2  WHEN t1.c0 THEN v0.c2 WHEN t1.c2 THEN t1.c1 END)), x'' ASC;
SELECT * FROM v0 INNER JOIN t1 ON ((CAST(-1.11518474E8 AS TEXT))/('70346026')) WHERE (((v0.c2)AND(CAST(((t1.c2)||(v0.c1)) AS TEXT)))) ORDER BY (json(t1.c1) IN ()), ((t1.c1) NOT NULL) COLLATE NOCASE INTERSECT SELECT * FROM v0 INNER JOIN t1 ON ((CAST(-1.11518474E8 AS TEXT))/('70346026')) WHERE (((((v0.c1) NOT NULL))IS(t1.c2))) ORDER BY (json(t1.c1) IN ()), ((t1.c1) NOT NULL) COLLATE NOCASE;
SELECT * FROM v0 LEFT OUTER JOIN t1 ON ((CAST(-1.11518474E8 AS TEXT))/('70346026')) WHERE (v0.c2) ORDER BY (t1.c0 COLLATE NOCASE IN (x'', CASE v0.c2  WHEN t1.c0 THEN v0.c2 WHEN t1.c2 THEN t1.c1 END)), x'' ASC;
SELECT * FROM v0 INNER JOIN t1 ON ((CAST(-1.11518474E8 AS TEXT))/('70346026')) WHERE (((v0.c2)AND(CAST(((t1.c2)||(v0.c1)) AS TEXT)))) ORDER BY (json(t1.c1) IN ()), ((t1.c1) NOT NULL) COLLATE NOCASE INTERSECT SELECT * FROM v0 INNER JOIN t1 ON ((CAST(-1.11518474E8 AS TEXT))/('70346026')) WHERE (((((v0.c1) NOT NULL))IS(t1.c2))) ORDER BY (json(t1.c1) IN ()), ((t1.c1) NOT NULL) COLLATE NOCASE;
SELECT ALL * FROM vt0, t1 WHERE ((('6ꄱL') ISNULL));
SELECT ALL * FROM vt0, t1 WHERE ((((('6ꄱL') ISNULL))AND(((((((t1.c1)OR(vt0.c0)))AND(vt0.c0)))>>(((t1.c1) NOT NULL)))))) LIMIT 2 INTERSECT SELECT * FROM vt0, t1 WHERE (CASE ((t1.c1)!=(t1.c0))  WHEN (t1.c2 IN ()) THEN vt0.c0 WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c1)) THEN (((t1.c2)) BETWEEN ((t1.c2)) AND ((vt0.c1))) END) LIMIT 0X2;
SELECT ALL * FROM vt0, t1 WHERE ((('6ꄱL') ISNULL));
SELECT ALL * FROM vt0, t1 WHERE ((((('6ꄱL') ISNULL))AND(((((((t1.c1)OR(vt0.c0)))AND(vt0.c0)))>>(((t1.c1) NOT NULL)))))) LIMIT 2 INTERSECT SELECT * FROM vt0, t1 WHERE (CASE ((t1.c1)!=(t1.c0))  WHEN (t1.c2 IN ()) THEN vt0.c0 WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c1)) THEN (((t1.c2)) BETWEEN ((t1.c2)) AND ((vt0.c1))) END) LIMIT 0X2;
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))>=(CASE vt0.c1  WHEN x'' THEN vt0.c1 ELSE vt0.c1 END)));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1 IN ()))>(CASE vt0.c1  WHEN x'' THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (vt0.c0 COLLATE BINARY IN (vt0.c0 COLLATE NOCASE, vt0.c1 COLLATE BINARY))  NULLS LAST, DATE(vt0.c0 COLLATE RTRIM, vt0.c1, ((vt0.c0)OR(vt0.c0)), ((vt0.c0)>>(vt0.c0))), vt0.c1 LIMIT 0X1;
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))>=(CASE vt0.c1  WHEN x'' THEN vt0.c1 ELSE vt0.c1 END)));
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1 IN ()))>(CASE vt0.c1  WHEN x'' THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (vt0.c0 COLLATE BINARY IN (vt0.c0 COLLATE NOCASE, vt0.c1 COLLATE BINARY))  NULLS LAST, DATE(vt0.c0 COLLATE RTRIM, vt0.c1, ((vt0.c0)OR(vt0.c0)), ((vt0.c0)>>(vt0.c0))), vt0.c1 LIMIT 0X1;
SELECT ALL MAX(v0.c0) FROM v0 WHERE ((((((((+ (v0.c1)))OR((v0.c1 IN (v0.c2)))))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)))))OR(NULL))) ORDER BY v0.c1  NULLS FIRST, (TOTAL_CHANGES() IN (((NULL) NOT BETWEEN (v0.c2) AND (0.923224067504672)))) ASC, CAST(x'' AS INTEGER);
SELECT MAX(v0.c0) FROM v0 WHERE ((((((((+ (v0.c1)))OR((v0.c1 IN (v0.c2)))))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)))))OR(NULL))) ORDER BY (((v0.c0, v0.c2, v0.c1)) NOT BETWEEN ((x'dbc194c8', ((v0.c2)IS(v0.c2)), CASE WHEN v0.c0 THEN 0.7797980437828718 ELSE v0.c0 END)) AND (((v0.c1 IN ()), ((((((((v0.c0)OR(v0.c1)))AND(v0.c1)))AND('UaGe')))OR(NULL)), v0.c2))), (((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)) IN ())  NULLS FIRST LIMIT 1;
SELECT * FROM vt0 WHERE (((((vt0.c1)&(vt0.c1)))LIKE((- (vt0.c0)))));
SELECT * FROM vt0 WHERE (((((((vt0.c1)&(vt0.c1)))LIKE((- (vt0.c0)))))AND(CAST(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) AS BLOB)))) ORDER BY json_array_length(((vt0.c1)OR(vt0.c0)))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) ORDER BY json_array_length(((vt0.c1)OR(vt0.c0)))  NULLS FIRST LIMIT 1;
SELECT * FROM vt0 WHERE (((((vt0.c1)&(vt0.c1)))LIKE((- (vt0.c0)))));
SELECT * FROM vt0 WHERE (((((((vt0.c1)&(vt0.c1)))LIKE((- (vt0.c0)))))AND(CAST(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) AS BLOB)))) ORDER BY json_array_length(((vt0.c1)OR(vt0.c0)))  NULLS FIRST LIMIT 0X1 INTERSECT SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) ORDER BY json_array_length(((vt0.c1)OR(vt0.c0)))  NULLS FIRST LIMIT 1;
SELECT MAX(t1.c2) FROM v0, t1, vt0 WHERE (v0.c2);
SELECT DISTINCT MAX(t1.c2) FROM v0, t1, vt0 WHERE (((v0.c2)AND(((((t1.c1) BETWEEN ('469225696') AND ('-430116177')))|(CAST(vt0.c1 AS INTEGER)))))) LIMIT 0X6;
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT DISTINCT * FROM v0 WHERE (v0.c1) LIMIT 0x0;
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT DISTINCT * FROM v0 WHERE (v0.c1) LIMIT 0x0;
SELECT COUNT(*) FROM vt0, v0, t1 WHERE (v0.c0 COLLATE BINARY);
SELECT DISTINCT COUNT(*) FROM vt0, v0, t1 WHERE (((v0.c0 COLLATE BINARY)AND(((CASE x''  WHEN vt0.c1 THEN v0.c2 ELSE '	0Q' END)&((~ (t1.c2))))))) ORDER BY UNICODE(t1.c0)  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, v0, t1 WHERE (((((x'38', t1.c1)) NOT BETWEEN ((v0.c2, vt0.c0)) AND ((v0.c1, vt0.c0))) IN (((t1.c0) NOT BETWEEN (NULL) AND (t1.c2))))) ORDER BY UNICODE(t1.c0)  NULLS LAST LIMIT 0x1;
SELECT COUNT(*) FROM vt0 WHERE (1.576123895E9) ORDER BY ((((0.2278798055687572)OR((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))))OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((1.576123895E9)AND(((((~ (vt0.c1))))<((vt0.c0)))))) ORDER BY ((((((((((((((vt0.c0) NOT NULL))AND(NULL)))OR((vt0.c1 IN (vt0.c1)))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt0.c1 AS REAL))))AND((vt0.c0 IN (x''))))  NULLS FIRST, '' INTERSECT SELECT COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY ((((((((((((((vt0.c0) NOT NULL))AND(NULL)))OR((vt0.c1 IN (vt0.c1)))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt0.c1 AS REAL))))AND((vt0.c0 IN (x''))))  NULLS FIRST, '';
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), NULL, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), ((vt0.c1)IS NOT(vt0.c1))))==((vt0.c0 COLLATE BINARY, ((x'390f7c')!=(x'7094')), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0)IS NOT(vt0.c0)))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END COLLATE BINARY COLLATE NOCASE ASC, vt0.c1 COLLATE NOCASE ASC;
SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), NULL, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), ((vt0.c1)IS NOT(vt0.c1))))=((vt0.c0 COLLATE BINARY, ((x'390f7c')<(x'7094')), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0)IS NOT(vt0.c0)))))) ORDER BY NULL ASC  NULLS FIRST, vt0.c1, ((vt0.c0 COLLATE RTRIM)>(((vt0.c0)OR(vt0.c1))))  NULLS LAST, (NOT (TYPEOF(DISTINCT vt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), NULL, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), ((vt0.c1)IS NOT(vt0.c1))))==((vt0.c0 COLLATE BINARY, ((x'390f7c')!=(x'7094')), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0)IS NOT(vt0.c0)))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END COLLATE BINARY COLLATE NOCASE ASC, vt0.c1 COLLATE NOCASE ASC;
SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), NULL, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), ((vt0.c1)IS NOT(vt0.c1))))=((vt0.c0 COLLATE BINARY, ((x'390f7c')<(x'7094')), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0)IS NOT(vt0.c0)))))) ORDER BY NULL ASC  NULLS FIRST, vt0.c1, ((vt0.c0 COLLATE RTRIM)>(((vt0.c0)OR(vt0.c1))))  NULLS LAST, (NOT (TYPEOF(DISTINCT vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (RTRIM(v0.c0) COLLATE RTRIM);
SELECT DISTINCT * FROM v0 WHERE (RTRIM(v0.c0) COLLATE RTRIM);
SELECT * FROM v0 WHERE (RTRIM(v0.c0) COLLATE RTRIM);
SELECT DISTINCT * FROM v0 WHERE (RTRIM(v0.c0) COLLATE RTRIM);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0);
SELECT DISTINCT * FROM v0, vt0 WHERE (vt0.c0) LIMIT 0x1;
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0);
SELECT DISTINCT * FROM v0, vt0 WHERE (vt0.c0) LIMIT 0x1;
SELECT MAX(t1.c2) FROM t1 WHERE (((((CASE WHEN t1.c2 THEN t1.c1 ELSE t1.c0 END)AND(t1.c0)))OR(((t1.c1) NOTNULL)))) ORDER BY ((CASE t1.c1  WHEN NULL THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c2 END)+('zFIkZ0'));
SELECT DISTINCT MAX(t1.c2) FROM t1 WHERE (((((CASE WHEN t1.c2 THEN t1.c1 ELSE t1.c0 END)AND(t1.c0)))OR(((t1.c1) NOTNULL)))) ORDER BY ((CASE t1.c1  WHEN NULL THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c2 END)+('zFIkZ0'));
SELECT * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN LTRIM(vt0.c1) WHEN (((vt0.c1, vt0.c0, vt0.c0))!=(('', vt0.c0, vt0.c0))) THEN (('F>&G햧E')|(vt0.c1)) ELSE CAST(vt0.c0 AS INTEGER) END);
SELECT * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN LTRIM(vt0.c1) WHEN (((vt0.c1, vt0.c0, vt0.c0))<>(('', vt0.c0, vt0.c0))) THEN (('F>&G햧E')|(vt0.c1)) ELSE CAST(vt0.c0 AS INTEGER) END) ORDER BY ((((0.635115355281377 IN ())))>((CAST(vt0.c0 AS INTEGER)))) DESC, CAST((vt0.c1 IN (vt0.c0, vt0.c1, vt0.c1)) AS BLOB)  NULLS LAST LIMIT 2;
SELECT * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN LTRIM(vt0.c1) WHEN (((vt0.c1, vt0.c0, vt0.c0))!=(('', vt0.c0, vt0.c0))) THEN (('F>&G햧E')|(vt0.c1)) ELSE CAST(vt0.c0 AS INTEGER) END);
SELECT * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN LTRIM(vt0.c1) WHEN (((vt0.c1, vt0.c0, vt0.c0))<>(('', vt0.c0, vt0.c0))) THEN (('F>&G햧E')|(vt0.c1)) ELSE CAST(vt0.c0 AS INTEGER) END) ORDER BY ((((0.635115355281377 IN ())))>((CAST(vt0.c0 AS INTEGER)))) DESC, CAST((vt0.c1 IN (vt0.c0, vt0.c1, vt0.c1)) AS BLOB)  NULLS LAST LIMIT 2;
SELECT * FROM v0 WHERE (((v0.c1 COLLATE NOCASE)>>((((v0.c0, v0.c0))<>((0x608f28fb, v0.c0))))));
SELECT * FROM v0 WHERE (((v0.c1 COLLATE NOCASE)>>((((v0.c0, v0.c0))<((1619994875, v0.c0))))));
SELECT * FROM v0 WHERE (((v0.c1 COLLATE NOCASE)>>((((v0.c0, v0.c0))<>((0x608f28fb, v0.c0))))));
SELECT * FROM v0 WHERE (((v0.c1 COLLATE NOCASE)>>((((v0.c0, v0.c0))<((1619994875, v0.c0))))));
SELECT ALL MAX(v0.c2) FROM t1, vt0, v0 WHERE (((((vt0.c1) NOT BETWEEN (v0.c0) AND (NULL))) NOT NULL)) ORDER BY ((v0.c1)LIKE((v0.c0 IN (t1.c2, v0.c2)))) ASC  NULLS LAST, ((((t1.c1) ISNULL))>(((v0.c2) NOT NULL))), (+ (CAST(vt0.c1 AS REAL))) ASC;
SELECT DISTINCT MAX(v0.c2) FROM t1, vt0, v0 WHERE (((((vt0.c1) NOT BETWEEN (v0.c0) AND (NULL))) NOT NULL)) ORDER BY (~ ((- ('0.9369942315316403')))) ASC  NULLS FIRST, (- (vt0.c1)) COLLATE BINARY INTERSECT SELECT DISTINCT MAX(v0.c2) FROM t1, vt0, v0 WHERE (((CASE t1.c2  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 ELSE vt0.c1 END) NOT BETWEEN (((t1.c2)*(vt0.c0))) AND ((~ (v0.c0))))) ORDER BY (~ ((- ('0.9369942315316403')))) ASC  NULLS FIRST, (- (vt0.c1)) COLLATE BINARY;
SELECT ALL * FROM v0, vt0, t1 WHERE ((((v0.c0)|(t1.c2)) IN ()));
SELECT ALL * FROM v0, vt0, t1 WHERE ((((v0.c0)|(t1.c2)) IN ())) ORDER BY CASE WHEN t1.c1 THEN -882716697 WHEN t1.c1 THEN t1.c2 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE  NULLS FIRST, (NOT ((- (vt0.c0))))  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE ((((((vt0.c0, v0.c0, v0.c0, v0.c2, t1.c1))==((t1.c2, v0.c0, t1.c1, t1.c2, vt0.c1))))>>(x''))) ORDER BY CASE WHEN t1.c1 THEN 0xffffffffcb62cfe7 WHEN t1.c1 THEN t1.c2 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE  NULLS FIRST, (NOT ((- (vt0.c0))))  NULLS LAST LIMIT 2;
SELECT ALL * FROM v0, vt0, t1 WHERE ((((v0.c0)|(t1.c2)) IN ()));
SELECT ALL * FROM v0, vt0, t1 WHERE ((((v0.c0)|(t1.c2)) IN ())) ORDER BY CASE WHEN t1.c1 THEN -882716697 WHEN t1.c1 THEN t1.c2 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE  NULLS FIRST, (NOT ((- (vt0.c0))))  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM v0, vt0, t1 WHERE ((((((vt0.c0, v0.c0, v0.c0, v0.c2, t1.c1))==((t1.c2, v0.c0, t1.c1, t1.c2, vt0.c1))))>>(x''))) ORDER BY CASE WHEN t1.c1 THEN 0xffffffffcb62cfe7 WHEN t1.c1 THEN t1.c2 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE  NULLS FIRST, (NOT ((- (vt0.c0))))  NULLS LAST LIMIT 2;
SELECT MAX(vt0.c0) FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c1, vt0.c0)) AS INTEGER)) ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER)  NULLS FIRST;
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c1, vt0.c0)) AS INTEGER)) ORDER BY vt0.c1 COLLATE BINARY  NULLS FIRST, (((vt0.c1, vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY, (vt0.c1 IN (vt0.c1)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ('9' IN ())))) LIMIT 0x2 INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (CASE WHEN ((vt0.c1)>(NULL)) THEN CAST(vt0.c1 AS REAL) END) ORDER BY vt0.c1 COLLATE BINARY  NULLS FIRST, (((vt0.c1, vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY, (vt0.c1 IN (vt0.c1)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ('9' IN ())))) LIMIT 2;
SELECT ALL * FROM t1 WHERE ('7A');
SELECT ALL * FROM t1 WHERE ((('7A')AND(((t1.c1) ISNULL) COLLATE BINARY))) ORDER BY CASE LAST_INSERT_ROWID()  WHEN ((t1.c2)>(t1.c1)) THEN CASE t1.c0  WHEN t1.c2 THEN t1.c1 ELSE NULL END ELSE HEX(t1.c0) END  NULLS FIRST, (((t1.c0)) NOT BETWEEN (((+ (t1.c2)))) AND ((((t1.c2)>=(NULL)))))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE ('7A');
SELECT ALL * FROM t1 WHERE ((('7A')AND(((t1.c1) ISNULL) COLLATE BINARY))) ORDER BY CASE LAST_INSERT_ROWID()  WHEN ((t1.c2)>(t1.c1)) THEN CASE t1.c0  WHEN t1.c2 THEN t1.c1 ELSE NULL END ELSE HEX(t1.c0) END  NULLS FIRST, (((t1.c0)) NOT BETWEEN (((+ (t1.c2)))) AND ((((t1.c2)>=(NULL)))))  NULLS FIRST LIMIT 0;
SELECT ALL MIN(v0.c2) FROM v0 WHERE ((((v0.c1)) BETWEEN ((((v0.c1)|(v0.c1)))) AND (((v0.c2 IN (NULL)))))) ORDER BY CAST(((((v0.c2)AND(v0.c0)))AND(v0.c0)) AS BLOB);
SELECT MIN(v0.c2) FROM v0 WHERE ((((v0.c1)) BETWEEN ((((v0.c1)|(v0.c1)))) AND (((v0.c2 IN (NULL)))))) ORDER BY CAST(((((v0.c2)AND(v0.c0)))AND(v0.c0)) AS BLOB);
SELECT COUNT(*) FROM vt0, v0, t1 WHERE ((((((v0.c1, t1.c2))!=((v0.c0, vt0.c1)))) NOT BETWEEN (((t1.c2) NOT NULL)) AND (x'56c835a975'))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))) ISNULL), ((((v0.c0)>=(t1.c2)))<(((t1.c2) BETWEEN (t1.c2) AND (vt0.c0)))), vt0.c1  NULLS LAST, (((t1.c1)) NOT BETWEEN ((v0.c0)) AND ((((((((((((t1.c1)OR(t1.c1)))OR(t1.c2)))OR(t1.c2)))OR(vt0.c1)))OR(v0.c0))))) DESC;
SELECT COUNT(*) FROM vt0, v0, t1 WHERE ((((((v0.c1, t1.c2))!=((v0.c0, vt0.c1)))) NOT BETWEEN (((t1.c2) NOT NULL)) AND (x'56c835a975'))) ORDER BY (((CASE vt0.c0  WHEN x'' THEN t1.c0 WHEN NULL THEN vt0.c0 END, ((v0.c2)LIKE(v0.c2)), (')!f
 ' IN (vt0.c0))))<>((((((((((((t1.c2)AND(t1.c2)))OR(v0.c2)))AND(v0.c2)))AND(x'42cb')))AND(t1.c0)), v0.c2, json_patch(v0.c1, t1.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (1.785187513E9) AND (vt0.c1))) NOTNULL)) ORDER BY (((((1610348219))==((vt0.c1))))==((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM vt0 NOT INDEXED WHERE (((((vt0.c1) NOT BETWEEN (1.785187513E9) AND (vt0.c1))) NOTNULL)) ORDER BY ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN -327924598 THEN vt0.c1 END)))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, 0.23502565840969558 LIMIT 1;
SELECT * FROM v0, t1, vt0 WHERE (((((t1.c1)>=(v0.c0)))<((((t1.c1, vt0.c0)) BETWEEN ((t1.c1, -1.520699329E9)) AND ((v0.c0, vt0.c1))))));
SELECT * FROM v0, t1, vt0 WHERE (((((t1.c1)>(v0.c0)))<((((t1.c1, vt0.c0)) BETWEEN ((t1.c1, -1.520699329E9)) AND ((v0.c0, vt0.c1))))));
SELECT * FROM v0, t1, vt0 WHERE (((((t1.c1)>=(v0.c0)))<((((t1.c1, vt0.c0)) BETWEEN ((t1.c1, -1.520699329E9)) AND ((v0.c0, vt0.c1))))));
SELECT * FROM v0, t1, vt0 WHERE (((((t1.c1)>(v0.c0)))<((((t1.c1, vt0.c0)) BETWEEN ((t1.c1, -1.520699329E9)) AND ((v0.c0, vt0.c1))))));
SELECT MAX(v0.c0) FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (0.5035986536868896) AND (v0.c2)))<=(((((((((vt0.c1)AND(v0.c2)))AND(vt0.c0)))AND(v0.c2)))OR(vt0.c1)))) WHERE (((((v0.c0)AND(((vt0.c1) BETWEEN (vt0.c0) AND (v0.c2)))))OR((0.7615782200399565 IN (v0.c2))))) ORDER BY ((v0.c1 COLLATE RTRIM) NOT BETWEEN ((((vt0.c1, vt0.c0, v0.c1, v0.c2)) NOT BETWEEN ((v0.c2, 'Uv縺q?.', NULL, vt0.c1)) AND ((vt0.c1, v0.c0, v0.c0, v0.c0)))) AND (CAST(vt0.c0 AS REAL))), LOWER(((v0.c2) BETWEEN (v0.c0) AND (v0.c1))) ASC  NULLS LAST, (+ (((vt0.c1)<(vt0.c0)))) ASC  NULLS LAST;
SELECT MAX(v0.c0) FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (0.5035986536868896) AND (v0.c2)))<=(((((((((vt0.c1)AND(v0.c2)))AND(vt0.c0)))AND(v0.c2)))OR(vt0.c1)))) WHERE (((((v0.c0)AND(((vt0.c1) BETWEEN (vt0.c0) AND (v0.c2)))))OR((0.7615782200399565 IN (v0.c2))))) ORDER BY ((v0.c0)&(CAST(vt0.c0 AS REAL)))  NULLS FIRST, ((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE LIMIT 0X0;
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE 0.6747971732642218  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c1 END)>(v0.c1))) ORDER BY (v0.c1 IN (CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE 0.6747971732642218  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c1 END)>(v0.c1))) ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) ISNULL) DESC  NULLS LAST, x'40ea' LIMIT 0;
SELECT * FROM v0, vt0 WHERE (((((((((((vt0.c1)OR(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(vt0.c0)))<=(((v0.c1) IS FALSE))));
SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((((((vt0.c1)OR(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(vt0.c0)))<=(((v0.c1) IS FALSE))))AND((CAST(v0.c2 AS REAL) IN (((v0.c0) IS TRUE)))))) ORDER BY ((((((((((TYPEOF('-1135898470'))AND((((v0.c0, vt0.c0, v0.c0))!=((vt0.c1, v0.c1, v0.c1))))))OR(v0.c1 COLLATE NOCASE)))AND(((vt0.c0)LIKE(v0.c1)))))OR((v0.c1 IN ()))))OR(CAST(vt0.c0 AS REAL)))  NULLS LAST, ((vt0.c1 IN (v0.c1, vt0.c0)) IN (json_object(-4.59511557E8, v0.c0))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, vt0 WHERE ((+ (((vt0.c1) ISNULL)))) ORDER BY ((((((((((TYPEOF('-1135898470'))AND((((v0.c0, vt0.c0, v0.c0))!=((vt0.c1, v0.c1, v0.c1))))))OR(v0.c1 COLLATE NOCASE)))AND(((vt0.c0)LIKE(v0.c1)))))OR((v0.c1 IN ()))))OR(CAST(vt0.c0 AS REAL)))  NULLS LAST, ((vt0.c1 IN (v0.c1, vt0.c0)) IN (json_object(-4.59511557E8, v0.c0))) DESC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (((((((((((vt0.c1)OR(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(vt0.c0)))<=(((v0.c1) IS FALSE))));
SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((((((vt0.c1)OR(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(vt0.c0)))<=(((v0.c1) IS FALSE))))AND((CAST(v0.c2 AS REAL) IN (((v0.c0) IS TRUE)))))) ORDER BY ((((((((((TYPEOF('-1135898470'))AND((((v0.c0, vt0.c0, v0.c0))!=((vt0.c1, v0.c1, v0.c1))))))OR(v0.c1 COLLATE NOCASE)))AND(((vt0.c0)LIKE(v0.c1)))))OR((v0.c1 IN ()))))OR(CAST(vt0.c0 AS REAL)))  NULLS LAST, ((vt0.c1 IN (v0.c1, vt0.c0)) IN (json_object(-4.59511557E8, v0.c0))) DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM v0, vt0 WHERE ((+ (((vt0.c1) ISNULL)))) ORDER BY ((((((((((TYPEOF('-1135898470'))AND((((v0.c0, vt0.c0, v0.c0))!=((vt0.c1, v0.c1, v0.c1))))))OR(v0.c1 COLLATE NOCASE)))AND(((vt0.c0)LIKE(v0.c1)))))OR((v0.c1 IN ()))))OR(CAST(vt0.c0 AS REAL)))  NULLS LAST, ((vt0.c1 IN (v0.c1, vt0.c0)) IN (json_object(-4.59511557E8, v0.c0))) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0, t1 WHERE ((('0.7971248963455178')<=(((v0.c2) NOT NULL)))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 ELSE vt0.c0 END)GLOB(((((v0.c2)AND(t1.c2)))AND(v0.c0))))  NULLS LAST;
SELECT * FROM v0, vt0, t1 WHERE ((((('0.7971248963455178')=(((v0.c2) NOT NULL))))AND(((((vt0.c0) BETWEEN (t1.c1) AND (v0.c0)))<(t1.c1))))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 ELSE vt0.c0 END)GLOB(((((v0.c2)AND(t1.c2)))AND(v0.c0))))  NULLS LAST INTERSECT SELECT * FROM v0, vt0, t1 WHERE ((+ ((t1.c1 IN ())))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 ELSE vt0.c0 END)GLOB(((((v0.c2)AND(t1.c2)))AND(v0.c0))))  NULLS LAST;
SELECT ALL * FROM v0, vt0, t1 WHERE ((('0.7971248963455178')<=(((v0.c2) NOT NULL)))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 ELSE vt0.c0 END)GLOB(((((v0.c2)AND(t1.c2)))AND(v0.c0))))  NULLS LAST;
SELECT * FROM v0, vt0, t1 WHERE ((((('0.7971248963455178')=(((v0.c2) NOT NULL))))AND(((((vt0.c0) BETWEEN (t1.c1) AND (v0.c0)))<(t1.c1))))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 ELSE vt0.c0 END)GLOB(((((v0.c2)AND(t1.c2)))AND(v0.c0))))  NULLS LAST INTERSECT SELECT * FROM v0, vt0, t1 WHERE ((+ ((t1.c1 IN ())))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 ELSE vt0.c0 END)GLOB(((((v0.c2)AND(t1.c2)))AND(v0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) IS TRUE));
SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) IS TRUE))AND(((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))))))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((((('0.5208842837866051', vt0.c1))<=((vt0.c1, vt0.c1))))OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(((vt0.c1)%(vt0.c1)))))AND(SQLITE_SOURCE_ID()))) LIMIT 3;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) IS TRUE));
SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) IS TRUE))AND(((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))))))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM vt0 WHERE (((((((((('0.5208842837866051', vt0.c1))<=((vt0.c1, vt0.c1))))OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(((vt0.c1)%(vt0.c1)))))AND(SQLITE_SOURCE_ID()))) LIMIT 3;
SELECT ALL MIN(vt0.c0) FROM vt0, t1 WHERE (((vt0.c1)GLOB(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT MIN(vt0.c0) FROM vt0, t1 WHERE (((((vt0.c1)GLOB(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((CASE vt0.c0  WHEN 0x1db93315 THEN t1.c0 WHEN t1.c1 THEN vt0.c0 ELSE t1.c0 END) NOTNULL)))) ORDER BY ((CAST(NULL AS INTEGER)) BETWEEN (t1.c0 COLLATE NOCASE) AND (ABS(vt0.c0))) ASC  NULLS LAST, ((((vt0.c0)OR(t1.c1)))AND(t1.c2)) COLLATE RTRIM DESC;
SELECT MIN(v0.c1) FROM vt0, t1, v0 WHERE (CAST(CAST(t1.c2 AS BLOB) AS BLOB));
SELECT DISTINCT MIN(v0.c1) FROM vt0, t1, v0 WHERE (CAST(CAST(t1.c2 AS BLOB) AS BLOB)) LIMIT 2;
SELECT ALL * FROM t1, vt0 WHERE (LIKELIHOOD(DISTINCT t1.c0, t1.c0) COLLATE RTRIM);
SELECT DISTINCT * FROM t1, vt0 WHERE (LIKELIHOOD(DISTINCT t1.c0, t1.c0) COLLATE RTRIM) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1, vt0 WHERE (LENGTH(((t1.c0)==(vt0.c0)))) LIMIT 0X2;
SELECT ALL * FROM t1, vt0 WHERE (LIKELIHOOD(DISTINCT t1.c0, t1.c0) COLLATE RTRIM);
SELECT * FROM t1, vt0, v0 WHERE ((+ (((v0.c2) NOTNULL))));
SELECT DISTINCT * FROM t1, vt0, v0 WHERE ((+ (((v0.c2) NOTNULL)))) ORDER BY (~ ((((t1.c2, vt0.c1)) NOT BETWEEN ((v0.c2, v0.c2)) AND ((v0.c1, v0.c2))))) DESC INTERSECT SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((184538343)*(t1.c0)))<=(t1.c1 COLLATE NOCASE))) ORDER BY (~ ((((t1.c2, vt0.c1)) NOT BETWEEN ((v0.c2, v0.c2)) AND ((v0.c1, v0.c2))))) DESC;
SELECT * FROM t1, vt0, v0 WHERE ((+ (((v0.c2) NOTNULL))));
SELECT DISTINCT * FROM t1, vt0, v0 WHERE ((+ (((v0.c2) NOTNULL)))) ORDER BY (~ ((((t1.c2, vt0.c1)) NOT BETWEEN ((v0.c2, v0.c2)) AND ((v0.c1, v0.c2))))) DESC INTERSECT SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((184538343)*(t1.c0)))<=(t1.c1 COLLATE NOCASE))) ORDER BY (~ ((((t1.c2, vt0.c1)) NOT BETWEEN ((v0.c2, v0.c2)) AND ((v0.c1, v0.c2))))) DESC;
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT * FROM vt0, v0 WHERE ((((CAST(vt0.c0 AS TEXT) IN ()))AND((((v0.c1) ISNULL) IN ())))) LIMIT 1 INTERSECT SELECT * FROM vt0, v0 WHERE (((((((((vt0.c0) BETWEEN (vt0.c1) AND (v0.c1)))OR(v0.c2 COLLATE NOCASE)))OR(((((vt0.c1)AND(vt0.c1)))AND(v0.c1)))))OR(((v0.c1)<<(v0.c0))))) LIMIT 1;
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT * FROM vt0, v0 WHERE ((((CAST(vt0.c0 AS TEXT) IN ()))AND((((v0.c1) ISNULL) IN ())))) LIMIT 1 INTERSECT SELECT * FROM vt0, v0 WHERE (((((((((vt0.c0) BETWEEN (vt0.c1) AND (v0.c1)))OR(v0.c2 COLLATE NOCASE)))OR(((((vt0.c1)AND(vt0.c1)))AND(v0.c1)))))OR(((v0.c1)<<(v0.c0))))) LIMIT 1;
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN (v0.c2)) AS BLOB)) ORDER BY CAST(((v0.c2)|(v0.c2)) AS REAL) DESC, ((((((((x'')AND(LTRIM(v0.c0))))OR(((v0.c0)>(v0.c0)))))AND(((v0.c2) IS FALSE))))OR(((v0.c1)-(v0.c0))));
SELECT DISTINCT * FROM v0 WHERE (CAST((v0.c0 IN (v0.c2)) AS BLOB)) ORDER BY CAST(((v0.c2)|(v0.c2)) AS REAL) DESC, ((((((((x'')AND(LTRIM(v0.c0))))OR(((v0.c0)>(v0.c0)))))AND(((v0.c2) IS FALSE))))OR(((v0.c1)-(v0.c0)))) INTERSECT SELECT DISTINCT * FROM v0 WHERE (CASE ((v0.c1)|(v0.c2))  WHEN ((v0.c1) IS TRUE) THEN HEX(v0.c0) ELSE ((x'') IS FALSE) END) ORDER BY CAST(((v0.c2)|(v0.c2)) AS REAL) DESC, ((((((((x'')AND(LTRIM(v0.c0))))OR(((v0.c0)>(v0.c0)))))AND(((v0.c2) IS FALSE))))OR(((v0.c1)-(v0.c0))));
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN (v0.c2)) AS BLOB)) ORDER BY CAST(((v0.c2)|(v0.c2)) AS REAL) DESC, ((((((((x'')AND(LTRIM(v0.c0))))OR(((v0.c0)>(v0.c0)))))AND(((v0.c2) IS FALSE))))OR(((v0.c1)-(v0.c0))));
SELECT DISTINCT * FROM v0 WHERE (CAST((v0.c0 IN (v0.c2)) AS BLOB)) ORDER BY CAST(((v0.c2)|(v0.c2)) AS REAL) DESC, ((((((((x'')AND(LTRIM(v0.c0))))OR(((v0.c0)>(v0.c0)))))AND(((v0.c2) IS FALSE))))OR(((v0.c1)-(v0.c0)))) INTERSECT SELECT DISTINCT * FROM v0 WHERE (CASE ((v0.c1)|(v0.c2))  WHEN ((v0.c1) IS TRUE) THEN HEX(v0.c0) ELSE ((x'') IS FALSE) END) ORDER BY CAST(((v0.c2)|(v0.c2)) AS REAL) DESC, ((((((((x'')AND(LTRIM(v0.c0))))OR(((v0.c0)>(v0.c0)))))AND(((v0.c2) IS FALSE))))OR(((v0.c1)-(v0.c0))));
SELECT * FROM vt0 WHERE (((x'bfe388') NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)|(vt0.c1))))) ORDER BY '993816123' DESC;
SELECT DISTINCT * FROM vt0 WHERE (((x'bfe388') NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)|(vt0.c1))))) ORDER BY vt0.c1 ASC  NULLS LAST LIMIT 0X1;
SELECT * FROM vt0 WHERE (((x'bfe388') NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)|(vt0.c1))))) ORDER BY '993816123' DESC;
SELECT DISTINCT * FROM vt0 WHERE (((x'bfe388') NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)|(vt0.c1))))) ORDER BY vt0.c1 ASC  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM v0 WHERE (((((v0.c1)OR(v0.c0)))>('
5,OMGgk')));
SELECT DISTINCT * FROM v0 WHERE (((((v0.c1)OR(v0.c0)))>('
5,OMGgk'))) LIMIT 1;
SELECT ALL * FROM v0 WHERE (((((v0.c1)OR(v0.c0)))>('
5,OMGgk')));
SELECT DISTINCT * FROM v0 WHERE (((((v0.c1)OR(v0.c0)))>('
5,OMGgk'))) LIMIT 1;
SELECT * FROM t1, vt0, v0 WHERE (((t1.c0) ISNULL) COLLATE NOCASE) ORDER BY UPPER(DISTINCT ((t1.c2)LIKE(t1.c2))) ASC;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((t1.c0) ISNULL) COLLATE NOCASE)AND(CAST(LIKE(vt0.c0, v0.c0) AS BLOB)))) ORDER BY UPPER(DISTINCT ((t1.c2)LIKE(t1.c2))) ASC INTERSECT SELECT DISTINCT * FROM t1, vt0, v0 WHERE (NULL) ORDER BY UPPER(DISTINCT ((t1.c2)LIKE(t1.c2))) ASC;
SELECT * FROM t1, vt0, v0 WHERE (((t1.c0) ISNULL) COLLATE NOCASE) ORDER BY UPPER(DISTINCT ((t1.c2)LIKE(t1.c2))) ASC;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((t1.c0) ISNULL) COLLATE NOCASE)AND(CAST(LIKE(vt0.c0, v0.c0) AS BLOB)))) ORDER BY UPPER(DISTINCT ((t1.c2)LIKE(t1.c2))) ASC INTERSECT SELECT DISTINCT * FROM t1, vt0, v0 WHERE (NULL) ORDER BY UPPER(DISTINCT ((t1.c2)LIKE(t1.c2))) ASC;
SELECT * FROM t1 WHERE (LIKELY(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END));
SELECT DISTINCT * FROM t1 WHERE (LIKELY(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)) ORDER BY (((LTRIM(t1.c1, t1.c1), CASE WHEN t1.c0 THEN t1.c2 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END, t1.c2, t1.c2))>((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c2)))OR(t1.c1)))AND(t1.c1)))AND(t1.c2)))OR(t1.c2)), ((t1.c1)<<(t1.c0)), ((t1.c0) BETWEEN (t1.c2) AND (t1.c1)), (t1.c0 IN ()))))  NULLS LAST, (((0.1194055082650286)||(t1.c0)) IN (MIN(t1.c0, t1.c1, t1.c0), ((t1.c1) NOTNULL)))  NULLS FIRST;
SELECT * FROM t1 WHERE (LIKELY(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END));
SELECT DISTINCT * FROM t1 WHERE (LIKELY(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)) ORDER BY (((LTRIM(t1.c1, t1.c1), CASE WHEN t1.c0 THEN t1.c2 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END, t1.c2, t1.c2))>((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c2)))OR(t1.c1)))AND(t1.c1)))AND(t1.c2)))OR(t1.c2)), ((t1.c1)<<(t1.c0)), ((t1.c0) BETWEEN (t1.c2) AND (t1.c1)), (t1.c0 IN ()))))  NULLS LAST, (((0.1194055082650286)||(t1.c0)) IN (MIN(t1.c0, t1.c1, t1.c0), ((t1.c1) NOTNULL)))  NULLS FIRST;
SELECT ALL MAX(vt0.c1) FROM vt0 CROSS JOIN v0 ON ((LOWER(DISTINCT x'88dc'))GLOB(CASE vt0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END)) WHERE (((((CAST(vt0.c1 AS BLOB))AND(('-1661419761' IN (vt0.c0, vt0.c1)))))OR(0.8505955237376541)));
SELECT MAX(vt0.c1) FROM vt0 CROSS JOIN v0 ON ((LOWER(DISTINCT x'88dc'))GLOB(CASE vt0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END)) WHERE (((((CAST(vt0.c1 AS BLOB))AND(('-1661419761' IN (vt0.c0, vt0.c1)))))OR(0.8505955237376541))) ORDER BY ((v0.c0) IS TRUE), ((v0.c0 COLLATE RTRIM) IS FALSE) INTERSECT SELECT MAX(vt0.c1) FROM vt0 CROSS JOIN v0 ON ((LOWER(DISTINCT x'88dc'))GLOB(CASE vt0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END)) WHERE (json_insert(CAST(v0.c0 AS INTEGER), 0x48c77211, ((v0.c1)*(v0.c2)), ((v0.c2)OR(vt0.c1)), ((v0.c1)&(v0.c1)), '-1135898470', ((v0.c1)IS(v0.c2)))) ORDER BY ((v0.c0) IS TRUE), ((v0.c0 COLLATE RTRIM) IS FALSE);
SELECT MAX(v0.c1) FROM t1, v0 WHERE ((((t1.c0 IN ())) BETWEEN (CAST(v0.c1 AS BLOB)) AND (CASE 'N'  WHEN t1.c1 THEN v0.c2 WHEN v0.c2 THEN t1.c0 ELSE v0.c2 END)));
SELECT DISTINCT MAX(v0.c1) FROM t1, v0 WHERE ((((t1.c0 IN ())) BETWEEN (CAST(v0.c1 AS BLOB)) AND (CASE 'N'  WHEN t1.c1 THEN v0.c2 WHEN v0.c2 THEN t1.c0 ELSE v0.c2 END))) ORDER BY ((v0.c2) IS FALSE), ((((v0.c2)<=(v0.c1))) NOT NULL) ASC  NULLS LAST LIMIT 3;
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (rtreenode(((t1.c0) ISNULL), ((v0.c1)-(v0.c2))));
SELECT COUNT(*) FROM t1, vt0, v0 WHERE (((rtreenode(((t1.c0) ISNULL), ((v0.c1)-(v0.c2))))AND((((t1.c2 IN ())) NOT BETWEEN ((vt0.c1 IN ())) AND (''))))) LIMIT 0X2 INTERSECT SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (LOWER((~ ('f<3	')))) LIMIT 0X2;
SELECT MAX(vt0.c0) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY (((vt0.c1) ISNULL) IN ()) ASC  NULLS LAST, ((((((((vt0.c1) NOT NULL))AND(((vt0.c1) ISNULL))))OR((((vt0.c0, NULL)) BETWEEN ((vt0.c0, '0.5093920250379461')) AND ((vt0.c0, vt0.c1))))))OR(vt0.c1)) ASC;
SELECT MAX(vt0.c0) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY (((vt0.c1) ISNULL) IN ()) ASC  NULLS LAST, ((((((((vt0.c1) NOT NULL))AND(((vt0.c1) ISNULL))))OR((((vt0.c0, NULL)) BETWEEN ((vt0.c0, '0.5093920250379461')) AND ((vt0.c0, vt0.c1))))))OR(vt0.c1)) ASC LIMIT 1 INTERSECT SELECT ALL MAX(vt0.c0) FROM vt0 WHERE (CAST(0.5397997827860282 AS INTEGER)) ORDER BY (((vt0.c1) ISNULL) IN ()) ASC  NULLS LAST, ((((((((vt0.c1) NOT NULL))AND(((vt0.c1) ISNULL))))OR((((vt0.c0, NULL)) BETWEEN ((vt0.c0, '0.5093920250379461')) AND ((vt0.c0, vt0.c1))))))OR(vt0.c1)) ASC LIMIT 0x1;
SELECT ALL MIN(t1.c2) FROM vt0 LEFT OUTER JOIN t1 ON CAST(((t1.c0)IS(t1.c2)) AS TEXT) WHERE (t1.c1) ORDER BY (t1.c2 COLLATE BINARY IN (((vt0.c1)>(t1.c2)), vt0.c0)) ASC  NULLS FIRST, ((load_extension(t1.c0)) IS TRUE)  NULLS LAST;
SELECT DISTINCT MIN(t1.c2) FROM vt0 LEFT OUTER JOIN t1 ON CAST(((t1.c0)IS(t1.c2)) AS TEXT) WHERE (t1.c1) ORDER BY highlight(vt0.c1 COLLATE NOCASE, (((t1.c2)) NOT BETWEEN ((x'8ff7ecbf8f')) AND ((vt0.c1))), ((vt0.c1)%(vt0.c0)), (((0.5606355930776916)) NOT BETWEEN ((306240834)) AND ((vt0.c1)))), (((vt0.c1 IN ())) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (t1.c1)) ASC INTERSECT SELECT DISTINCT MIN(t1.c2) FROM vt0 LEFT OUTER JOIN t1 ON CAST(((t1.c0)IS(t1.c2)) AS TEXT) WHERE (((((t1.c0) IS FALSE)) NOT BETWEEN ('-1072570859' COLLATE BINARY) AND (CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN vt0.c1 ELSE t1.c0 END))) ORDER BY highlight(vt0.c1 COLLATE NOCASE, (((t1.c2)) NOT BETWEEN ((x'8ff7ecbf8f')) AND ((vt0.c1))), ((vt0.c1)%(vt0.c0)), (((0.5606355930776916)) NOT BETWEEN ((306240834)) AND ((vt0.c1)))), (((vt0.c1 IN ())) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (t1.c1)) ASC;
SELECT * FROM vt0, t1 WHERE ((((((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)), (((t1.c0, t1.c2))>((t1.c0, vt0.c1)))))<((((t1.c1)<(vt0.c0)), (((t1.c2))<=((vt0.c0)))))));
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)), (((t1.c0, t1.c2))>((t1.c0, vt0.c1)))))<((((t1.c1)<(vt0.c0)), (((t1.c2))<((vt0.c0))))))) ORDER BY '1891954482' ASC;
SELECT * FROM vt0, t1 WHERE ((((((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)), (((t1.c0, t1.c2))>((t1.c0, vt0.c1)))))<((((t1.c1)<(vt0.c0)), (((t1.c2))<=((vt0.c0)))))));
SELECT DISTINCT * FROM vt0, t1 WHERE ((((((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)), (((t1.c0, t1.c2))>((t1.c0, vt0.c1)))))<((((t1.c1)<(vt0.c0)), (((t1.c2))<((vt0.c0))))))) ORDER BY '1891954482' ASC;
SELECT * FROM v0 INNER JOIN t1 ON CASE ((v0.c1)=(t1.c0))  WHEN t1.c0 THEN v0.c1 WHEN (t1.c1 IN (v0.c1)) THEN (((v0.c0))<((t1.c2))) WHEN ((((((t1.c2)AND(t1.c2)))OR(t1.c1)))OR(t1.c2)) THEN ((v0.c2)/(t1.c1)) WHEN ((t1.c2)<<(v0.c1)) THEN 0xffffffffb009e061 ELSE ((v0.c1) NOT NULL) END WHERE (((CASE WHEN t1.c2 THEN v0.c2 ELSE v0.c1 END)==(CAST(v0.c1 AS INTEGER))));
SELECT ALL * FROM v0 INNER JOIN t1 ON CASE ((v0.c1)=(t1.c0))  WHEN t1.c0 THEN v0.c1 WHEN (t1.c1 IN (v0.c1)) THEN (((v0.c0))<((t1.c2))) WHEN ((((((t1.c2)AND(t1.c2)))OR(t1.c1)))OR(t1.c2)) THEN ((v0.c2)/(t1.c1)) WHEN ((t1.c2)<<(v0.c1)) THEN 0xffffffffb009e061 ELSE ((v0.c1) NOT NULL) END WHERE (((CASE WHEN t1.c2 THEN v0.c2 ELSE v0.c1 END)=(CAST(v0.c1 AS INTEGER)))) ORDER BY ((0.5831673336655654) NOT NULL) ASC  NULLS LAST;
SELECT * FROM v0 INNER JOIN t1 ON CASE ((v0.c1)=(t1.c0))  WHEN t1.c0 THEN v0.c1 WHEN (t1.c1 IN (v0.c1)) THEN (((v0.c0))<((t1.c2))) WHEN ((((((t1.c2)AND(t1.c2)))OR(t1.c1)))OR(t1.c2)) THEN ((v0.c2)/(t1.c1)) WHEN ((t1.c2)<<(v0.c1)) THEN 0xffffffffb009e061 ELSE ((v0.c1) NOT NULL) END WHERE (((CASE WHEN t1.c2 THEN v0.c2 ELSE v0.c1 END)==(CAST(v0.c1 AS INTEGER))));
SELECT ALL * FROM v0 INNER JOIN t1 ON CASE ((v0.c1)=(t1.c0))  WHEN t1.c0 THEN v0.c1 WHEN (t1.c1 IN (v0.c1)) THEN (((v0.c0))<((t1.c2))) WHEN ((((((t1.c2)AND(t1.c2)))OR(t1.c1)))OR(t1.c2)) THEN ((v0.c2)/(t1.c1)) WHEN ((t1.c2)<<(v0.c1)) THEN 0xffffffffb009e061 ELSE ((v0.c1) NOT NULL) END WHERE (((CASE WHEN t1.c2 THEN v0.c2 ELSE v0.c1 END)=(CAST(v0.c1 AS INTEGER)))) ORDER BY ((0.5831673336655654) NOT NULL) ASC  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (LIKELY(vt0.c0) COLLATE RTRIM) ORDER BY (((- (t1.c0))) BETWEEN (((t1.c0)AND(vt0.c1))) AND (SUBSTR(t1.c2, vt0.c0)));
SELECT ALL * FROM vt0, t1 WHERE (LIKELY(vt0.c0) COLLATE RTRIM) ORDER BY (((- (t1.c0))) BETWEEN (((t1.c0)AND(vt0.c1))) AND (SUBSTR(t1.c2, vt0.c0))) LIMIT 0X1;
SELECT * FROM vt0, t1 WHERE (LIKELY(vt0.c0) COLLATE RTRIM) ORDER BY (((- (t1.c0))) BETWEEN (((t1.c0)AND(vt0.c1))) AND (SUBSTR(t1.c2, vt0.c0)));
SELECT ALL * FROM vt0, t1 WHERE (LIKELY(vt0.c0) COLLATE RTRIM) ORDER BY (((- (t1.c0))) BETWEEN (((t1.c0)AND(vt0.c1))) AND (SUBSTR(t1.c2, vt0.c0))) LIMIT 0X1;
SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR('qE+')))OR('fW
')));
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR('qE+')))OR('fW
'))) INTERSECT SELECT ALL * FROM v0 WHERE (((v0.c2 COLLATE BINARY) NOT NULL));
SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR('qE+')))OR('fW
')));
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR('qE+')))OR('fW
'))) INTERSECT SELECT ALL * FROM v0 WHERE (((v0.c2 COLLATE BINARY) NOT NULL));
SELECT MIN(v0.c0) FROM t1, v0 WHERE (((((((TYPEOF(t1.c0))AND((+ (t1.c2)))))AND(LIKELY(DISTINCT t1.c0))))AND(v0.c0))) ORDER BY ((((v0.c0)OR(t1.c2)))OR(t1.c0)) COLLATE RTRIM DESC  NULLS LAST, ((CAST(t1.c2 AS NUMERIC))<<((~ (v0.c1)))) DESC;
SELECT DISTINCT MIN(v0.c0) FROM t1, v0 WHERE (((((((((TYPEOF(t1.c0))AND((+ (t1.c2)))))AND(LIKELY(DISTINCT t1.c0))))AND(v0.c0)))AND(CAST((((v0.c1))==((v0.c1))) AS INTEGER)))) ORDER BY CAST((((t1.c0))==((t1.c1))) AS INTEGER), json_array_length((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))), NULLIF(0.7712008716272465, t1.c2)) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t1, v0 WHERE (vt0.c0);
SELECT DISTINCT * FROM vt0, t1, v0 WHERE (vt0.c0) INTERSECT SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((((t1.c1)) NOT BETWEEN ((((v0.c1) BETWEEN (v0.c0) AND (t1.c1)))) AND ((CASE v0.c0  WHEN t1.c1 THEN vt0.c0 ELSE t1.c2 END))));
SELECT ALL * FROM vt0, t1, v0 WHERE (vt0.c0);
SELECT DISTINCT * FROM vt0, t1, v0 WHERE (vt0.c0) INTERSECT SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((((t1.c1)) NOT BETWEEN ((((v0.c1) BETWEEN (v0.c0) AND (t1.c1)))) AND ((CASE v0.c0  WHEN t1.c1 THEN vt0.c0 ELSE t1.c2 END))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON (((+ (v0.c1)))>(((((((((v0.c1)AND(t1.c1)))OR(NULL)))OR(v0.c1)))OR(v0.c2)))) CROSS JOIN v0 ON CASE WHEN ((t1.c0)=(vt0.c1)) THEN ((t1.c0) BETWEEN (t1.c1) AND ('>}5q(')) WHEN CASE WHEN t1.c2 THEN v0.c1 ELSE t1.c0 END THEN v0.c0 ELSE ((t1.c1)<>('}긻%')) END WHERE ((((((t1.c2))>((v0.c0)))) NOTNULL));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON (((+ (v0.c1)))>(((((((((v0.c1)AND(t1.c1)))OR(NULL)))OR(v0.c1)))OR(v0.c2)))) CROSS JOIN v0 ON CASE WHEN ((t1.c0)==(vt0.c1)) THEN ((t1.c0) BETWEEN (t1.c1) AND ('>}5q(')) WHEN CASE WHEN t1.c2 THEN v0.c1 ELSE t1.c0 END THEN v0.c0 ELSE ((t1.c1)<>('}긻%')) END WHERE ((((((((t1.c2))>((v0.c0)))) NOTNULL))AND(((json_type(v0.c2)) ISNULL)))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c2))) BETWEEN (((((t1.c0)AND(v0.c1)))AND(vt0.c1))) AND (((v0.c1) BETWEEN (v0.c0) AND (v0.c0)))) ASC, t1.c0 ASC  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (((+ (v0.c1)))>(((((((((v0.c1)AND(t1.c1)))OR(NULL)))OR(v0.c1)))OR(v0.c2)))) CROSS JOIN v0 ON CASE WHEN ((t1.c0)==(vt0.c1)) THEN ((t1.c0) BETWEEN (t1.c1) AND ('>}5q(')) WHEN CASE WHEN t1.c2 THEN v0.c1 ELSE t1.c0 END THEN v0.c0 ELSE ((t1.c1)!=('}긻%')) END WHERE (CASE WHEN ((((t1.c2)OR(0.8231574623799756)))OR(vt0.c0)) THEN HEX(NULL) END) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c2))) BETWEEN (((((t1.c0)AND(v0.c1)))AND(vt0.c1))) AND (((v0.c1) BETWEEN (v0.c0) AND (v0.c0)))) ASC, t1.c0 ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((((v0.c2)AND(v0.c0)))OR(v0.c1)))||(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))));
SELECT * FROM v0 WHERE (((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))||(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))AND(CASE ((((((v0.c2)AND(v0.c1)))AND(v0.c2)))OR(NULL))  WHEN 0X4571b9a6 THEN ((((v0.c2)OR(v0.c2)))AND(NULL)) WHEN ((v0.c2)LIKE(v0.c1)) THEN ((((((((((v0.c2)AND(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(0X39cce63e)))OR(v0.c0)) END))) INTERSECT SELECT ALL * FROM v0 WHERE (((CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END)!=(CAST(v0.c1 AS NUMERIC))));
SELECT * FROM v0 WHERE (((((((v0.c2)AND(v0.c0)))OR(v0.c1)))||(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))));
SELECT * FROM v0 WHERE (((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))||(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))AND(CASE ((((((v0.c2)AND(v0.c1)))AND(v0.c2)))OR(NULL))  WHEN 0X4571b9a6 THEN ((((v0.c2)OR(v0.c2)))AND(NULL)) WHEN ((v0.c2)LIKE(v0.c1)) THEN ((((((((((v0.c2)AND(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(0X39cce63e)))OR(v0.c0)) END))) INTERSECT SELECT ALL * FROM v0 WHERE (((CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END)!=(CAST(v0.c1 AS NUMERIC))));
SELECT * FROM t1, vt0 WHERE ((((((t1.c2, vt0.c1, vt0.c1, t1.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c2, t1.c2)) AND ((t1.c1, vt0.c1, vt0.c0, t1.c2))))!=((((t1.c1, 9.69729598E8))>((vt0.c0, t1.c2)))))) ORDER BY CAST(((t1.c1) BETWEEN (vt0.c1) AND (t1.c0)) AS REAL) ASC;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((((t1.c2, vt0.c1, vt0.c1, t1.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c2, t1.c2)) AND ((t1.c1, vt0.c1, vt0.c0, t1.c2))))<>((((t1.c1, 9.69729598E8))>((vt0.c0, t1.c2)))))) ORDER BY (((((0.6843409447211283))==((vt0.c1)))) BETWEEN (0.23017777431310094) AND (t1.c2)) DESC  NULLS LAST, ((vt0.c1) ISNULL) COLLATE BINARY DESC LIMIT 1;
SELECT * FROM t1, vt0 WHERE ((((((t1.c2, vt0.c1, vt0.c1, t1.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c2, t1.c2)) AND ((t1.c1, vt0.c1, vt0.c0, t1.c2))))!=((((t1.c1, 9.69729598E8))>((vt0.c0, t1.c2)))))) ORDER BY CAST(((t1.c1) BETWEEN (vt0.c1) AND (t1.c0)) AS REAL) ASC;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((((t1.c2, vt0.c1, vt0.c1, t1.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c2, t1.c2)) AND ((t1.c1, vt0.c1, vt0.c0, t1.c2))))<>((((t1.c1, 9.69729598E8))>((vt0.c0, t1.c2)))))) ORDER BY (((((0.6843409447211283))==((vt0.c1)))) BETWEEN (0.23017777431310094) AND (t1.c2)) DESC  NULLS LAST, ((vt0.c1) ISNULL) COLLATE BINARY DESC LIMIT 1;
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT NULL)) ORDER BY (((('', vt0.c0, vt0.c0))<((vt0.c1, vt0.c1, vt0.c0))) IN (((((((vt0.c0)OR(vt0.c1)))AND('0.6282224466575264')))OR(vt0.c0)))) ASC, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, (- (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((0.39436489606202785, vt0.c0, -53395500)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c1, vt0.c1, '-1722971435', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))), CAST(vt0.c0 AS BLOB)))) ASC  NULLS FIRST, ((((vt0.c1))<=((vt0.c0))) IN (((vt0.c0)==(vt0.c1)), 0.33723575483314494))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) ISNULL)) NOT NULL))AND(CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN (((vt0.c1, vt0.c0))>=((vt0.c1, vt0.c0))) THEN ((vt0.c0)&(vt0.c0)) WHEN vt0.c1 THEN ((vt0.c1) IS FALSE) WHEN (+ (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE (- (vt0.c1)) END))) ORDER BY (((('', vt0.c0, vt0.c0))<((vt0.c1, vt0.c1, vt0.c0))) IN (((((((vt0.c0)OR(vt0.c1)))AND('0.6282224466575264')))OR(vt0.c0)))) ASC, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, (- (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((0.39436489606202785, vt0.c0, 0xfffffffffcd13fd4)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c1, vt0.c1, '-1722971435', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))), CAST(vt0.c0 AS BLOB)))) ASC  NULLS FIRST, ((((vt0.c1))<=((vt0.c0))) IN (((vt0.c0)==(vt0.c1)), 0.33723575483314494))  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY (((('', vt0.c0, vt0.c0))<((vt0.c1, vt0.c1, vt0.c0))) IN (((((((vt0.c0)OR(vt0.c1)))AND('0.6282224466575264')))OR(vt0.c0)))) ASC, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, (- (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((0.39436489606202785, vt0.c0, 0xfffffffffcd13fd4)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c1, vt0.c1, '-1722971435', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))), CAST(vt0.c0 AS BLOB)))) ASC  NULLS FIRST, ((((vt0.c1))<=((vt0.c0))) IN (((vt0.c0)=(vt0.c1)), 0.33723575483314494))  NULLS LAST LIMIT 0X2;
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT NULL)) ORDER BY (((('', vt0.c0, vt0.c0))<((vt0.c1, vt0.c1, vt0.c0))) IN (((((((vt0.c0)OR(vt0.c1)))AND('0.6282224466575264')))OR(vt0.c0)))) ASC, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, (- (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((0.39436489606202785, vt0.c0, -53395500)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c1, vt0.c1, '-1722971435', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))), CAST(vt0.c0 AS BLOB)))) ASC  NULLS FIRST, ((((vt0.c1))<=((vt0.c0))) IN (((vt0.c0)==(vt0.c1)), 0.33723575483314494))  NULLS LAST;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) ISNULL)) NOT NULL))AND(CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN (((vt0.c1, vt0.c0))>=((vt0.c1, vt0.c0))) THEN ((vt0.c0)&(vt0.c0)) WHEN vt0.c1 THEN ((vt0.c1) IS FALSE) WHEN (+ (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE (- (vt0.c1)) END))) ORDER BY (((('', vt0.c0, vt0.c0))<((vt0.c1, vt0.c1, vt0.c0))) IN (((((((vt0.c0)OR(vt0.c1)))AND('0.6282224466575264')))OR(vt0.c0)))) ASC, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, (- (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((0.39436489606202785, vt0.c0, 0xfffffffffcd13fd4)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c1, vt0.c1, '-1722971435', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))), CAST(vt0.c0 AS BLOB)))) ASC  NULLS FIRST, ((((vt0.c1))<=((vt0.c0))) IN (((vt0.c0)==(vt0.c1)), 0.33723575483314494))  NULLS LAST LIMIT 2 INTERSECT SELECT DISTINCT * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY (((('', vt0.c0, vt0.c0))<((vt0.c1, vt0.c1, vt0.c0))) IN (((((((vt0.c0)OR(vt0.c1)))AND('0.6282224466575264')))OR(vt0.c0)))) ASC, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, (- (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((0.39436489606202785, vt0.c0, 0xfffffffffcd13fd4)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c1, vt0.c1, '-1722971435', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1))), CAST(vt0.c0 AS BLOB)))) ASC  NULLS FIRST, ((((vt0.c1))<=((vt0.c0))) IN (((vt0.c0)=(vt0.c1)), 0.33723575483314494))  NULLS LAST LIMIT 0X2;
SELECT MAX(vt0.c1) FROM vt0 LEFT OUTER JOIN v0 ON (((~ (v0.c0)))<(x'b9e767')) WHERE (CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN ((((((((((x'')AND(vt0.c1)))AND(v0.c2)))AND(v0.c2)))AND(vt0.c1)))OR(v0.c2)) WHEN 'um
0㡖[' THEN (v0.c0 IN (vt0.c0, v0.c0)) ELSE ((((((((((0.9124586136512901)AND(vt0.c0)))AND(0.9690733348153464)))AND(v0.c2)))AND(v0.c0)))AND('뀨')) END);
SELECT DISTINCT MAX(vt0.c1) FROM vt0 NOT INDEXED LEFT OUTER JOIN v0 ON (((~ (v0.c0)))<(x'b9e767')) WHERE (CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN ((((((((((x'')AND(vt0.c1)))AND(v0.c2)))AND(v0.c2)))AND(vt0.c1)))OR(v0.c2)) WHEN 'um
0㡖[' THEN (v0.c0 IN (vt0.c0)) ELSE ((((((((((0.9124586136512901)AND(vt0.c0)))AND(0.9690733348153464)))AND(v0.c2)))AND(v0.c0)))AND('뀨')) END) INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 LEFT OUTER JOIN v0 ON (((~ (v0.c0)))<(x'b9e767')) WHERE ('-790725355');
SELECT MAX(vt0.c1) FROM v0, vt0, t1 WHERE (((((((v0.c2)OR(t1.c1)))OR(vt0.c0)))/((- (t1.c0))))) ORDER BY NULL DESC  NULLS FIRST, (NOT (CASE t1.c2  WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN v0.c2 ELSE vt0.c1 END))  NULLS LAST;
SELECT ALL MAX(vt0.c1) FROM v0, vt0, t1 WHERE (((((((((v0.c2)OR(t1.c1)))OR(vt0.c0)))/((- (t1.c0)))))AND((((CAST(v0.c1 AS REAL), t1.c1))>=(((('A') NOT NULL), ((v0.c1)/(vt0.c0)))))))) ORDER BY NULL DESC  NULLS FIRST, (NOT (CASE t1.c2  WHEN t1.c2 THEN t1.c1 WHEN t1.c0 THEN v0.c2 ELSE vt0.c1 END))  NULLS LAST LIMIT 0X0;
SELECT ALL COUNT(*) FROM v0, vt0, t1 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN 'AiU' WHEN ((t1.c1) ISNULL) THEN CHANGES() ELSE 'x]A' END);
SELECT DISTINCT COUNT(*) FROM v0, vt0, t1 WHERE (((CASE WHEN ((vt0.c0) ISNULL) THEN 'AiU' WHEN ((t1.c1) ISNULL) THEN CHANGES() ELSE 'x]A' END)AND((- (SUBSTR(t1.c0, t1.c1)))))) ORDER BY (((t1.c1) NOTNULL) IN (((t1.c1) NOTNULL))) ASC LIMIT 2 INTERSECT SELECT DISTINCT COUNT(*) FROM v0, vt0, t1 WHERE (CAST((t1.c0 IN ()) AS BLOB)) ORDER BY (((t1.c1) NOTNULL) IN (((t1.c1) NOTNULL))) ASC LIMIT 0X2;
SELECT ALL MAX(vt0.c1) FROM v0 NATURAL JOIN vt0 WHERE (CAST(((((((v0.c1)AND(vt0.c1)))OR(0.032905452496116205)))AND(v0.c0)) AS TEXT));
SELECT DISTINCT MAX(vt0.c1) FROM v0 NATURAL JOIN vt0 WHERE (CAST(((((((v0.c1)AND(vt0.c1)))OR(0.032905452496116205)))AND(v0.c0)) AS TEXT)) LIMIT 0X1;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((((t1.c0) IS FALSE)) BETWEEN (((x'ab2d17') IS FALSE)) AND (((vt0.c1)*(t1.c1)))) WHERE (((((t1.c1 IN (t1.c0)), ((vt0.c1) NOT NULL)))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (t1.c1)))))) ORDER BY ((LOWER(vt0.c0))+(((0X5dc0c345)IS(t1.c0)))) ASC  NULLS FIRST, ((((((((TRIM(vt0.c0, t1.c1))AND(CASE vt0.c0  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN 'G' THEN vt0.c0 WHEN vt0.c1 THEN t1.c1 ELSE '1744414291' END)))OR((NOT (x'')))))OR((t1.c1 IN ()))))AND(CASE WHEN t1.c1 THEN vt0.c0 WHEN x'76' THEN '1382790579' ELSE vt0.c0 END)) ASC, CAST(((((t1.c0)OR(t1.c0)))OR(-188391506)) AS INTEGER)  NULLS FIRST, CAST((NOT (t1.c1)) AS TEXT) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON ((((t1.c0) IS FALSE)) BETWEEN (((x'ab2d17') IS FALSE)) AND (((vt0.c1)*(t1.c1)))) WHERE (((((t1.c1 IN (t1.c0)), ((vt0.c1) NOT NULL)))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (t1.c1)))))) ORDER BY (((- (t1.c0))) NOT NULL) DESC  NULLS FIRST, (((((t1.c1)&(t1.c2))))<=((ABS(vt0.c0))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON ((((t1.c0) IS FALSE)) BETWEEN (((x'ab2d17') IS FALSE)) AND (((vt0.c1)*(t1.c1)))) WHERE (json_patch((+ (vt0.c0)), ((((((((((t1.c0)AND(vt0.c0)))OR(t1.c2)))OR(t1.c1)))AND(vt0.c1)))AND(vt0.c0)))) ORDER BY (((- (t1.c0))) NOT NULL) DESC  NULLS FIRST, (((((t1.c1)&(t1.c2))))<=((ABS(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((((t1.c0) IS FALSE)) BETWEEN (((x'ab2d17') IS FALSE)) AND (((vt0.c1)*(t1.c1)))) WHERE (((((t1.c1 IN (t1.c0)), ((vt0.c1) NOT NULL)))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (t1.c1)))))) ORDER BY ((LOWER(vt0.c0))+(((0X5dc0c345)IS(t1.c0)))) ASC  NULLS FIRST, ((((((((TRIM(vt0.c0, t1.c1))AND(CASE vt0.c0  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN 'G' THEN vt0.c0 WHEN vt0.c1 THEN t1.c1 ELSE '1744414291' END)))OR((NOT (x'')))))OR((t1.c1 IN ()))))AND(CASE WHEN t1.c1 THEN vt0.c0 WHEN x'76' THEN '1382790579' ELSE vt0.c0 END)) ASC, CAST(((((t1.c0)OR(t1.c0)))OR(-188391506)) AS INTEGER)  NULLS FIRST, CAST((NOT (t1.c1)) AS TEXT) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON ((((t1.c0) IS FALSE)) BETWEEN (((x'ab2d17') IS FALSE)) AND (((vt0.c1)*(t1.c1)))) WHERE (((((t1.c1 IN (t1.c0)), ((vt0.c1) NOT NULL)))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (t1.c1)))))) ORDER BY (((- (t1.c0))) NOT NULL) DESC  NULLS FIRST, (((((t1.c1)&(t1.c2))))<=((ABS(vt0.c0))))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON ((((t1.c0) IS FALSE)) BETWEEN (((x'ab2d17') IS FALSE)) AND (((vt0.c1)*(t1.c1)))) WHERE (json_patch((+ (vt0.c0)), ((((((((((t1.c0)AND(vt0.c0)))OR(t1.c2)))OR(t1.c1)))AND(vt0.c1)))AND(vt0.c0)))) ORDER BY (((- (t1.c0))) NOT NULL) DESC  NULLS FIRST, (((((t1.c1)&(t1.c2))))<=((ABS(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((-6.0290582E8)/(t1.c1))) ISNULL)) ORDER BY ((((((((t1.c0)AND(t1.c0)))AND(t1.c2)))AND(t1.c2)))>=(CAST(t1.c1 AS BLOB)))  NULLS FIRST, CAST((((t1.c0, t1.c1, t1.c1))<>((t1.c1, t1.c1, t1.c2))) AS BLOB), (NOT (COALESCE(DISTINCT t1.c0, t1.c2, t1.c2, t1.c1, t1.c1)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((-6.0290582E8)/(t1.c1))) ISNULL)) ORDER BY (((NOT (t1.c1)))*((((t1.c1, t1.c1))<>((t1.c0, t1.c2))))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c2 THEN t1.c0 WHEN t1.c2 THEN t1.c2 ELSE t1.c0 END) IS FALSE)) ORDER BY (((NOT (t1.c1)))*((((t1.c1, t1.c1))!=((t1.c0, t1.c2))))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL MAX(vt0.c1) FROM t1, v0, vt0 WHERE (CASE WHEN ((t1.c0) BETWEEN ('>Y9禤') AND (t1.c1)) THEN ((t1.c1) BETWEEN (v0.c2) AND (t1.c0)) WHEN 'Pi' COLLATE RTRIM THEN RTRIM(vt0.c1) ELSE ((((((((((0.228609219319156)OR(vt0.c1)))OR(vt0.c0)))AND(t1.c1)))AND(v0.c2)))OR(v0.c1)) END) ORDER BY CAST(json_remove(v0.c1, t1.c2, vt0.c1, 0.8812129594363284) AS BLOB) DESC  NULLS FIRST, ABS(((t1.c0) IS TRUE));
SELECT DISTINCT MAX(vt0.c1) FROM t1, v0, vt0 WHERE (((CASE WHEN ((t1.c0) BETWEEN ('>Y9禤') AND (t1.c1)) THEN ((t1.c1) BETWEEN (v0.c2) AND (t1.c0)) WHEN 'Pi' COLLATE RTRIM THEN RTRIM(vt0.c1) ELSE ((((((((((0.228609219319156)OR(vt0.c1)))OR(vt0.c0)))AND(t1.c1)))AND(v0.c2)))OR(v0.c1)) END)AND(HEX(t1.c0)))) ORDER BY ((((((((0.14269326258972936)AND(vt0.c0)))OR(t1.c1)))OR('Fg')))AND(t1.c1)) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM t1, v0, vt0 WHERE ((UNLIKELY(v0.c2) IN ())) ORDER BY ((((((((0.14269326258972936)AND(vt0.c0)))OR(t1.c1)))OR('Fg')))AND(t1.c1)) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0;
SELECT MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE 0.3518872897790185 END)) AND ((LIKELIHOOD(DISTINCT vt0.c1, vt0.c0))))) ORDER BY (~ (((vt0.c1) BETWEEN (203799364) AND (vt0.c0))))  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((NULL))) ASC;
SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE 0.3518872897790185 END)) AND ((LIKELIHOOD(DISTINCT vt0.c1, vt0.c0))))) ORDER BY (~ (((vt0.c1) BETWEEN (0Xc25bb44) AND (vt0.c0))))  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((NULL))) ASC INTERSECT SELECT DISTINCT MAX(vt0.c1) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (x'') AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE NULL END))) ORDER BY (~ (((vt0.c1) BETWEEN (0Xc25bb44) AND (vt0.c0))))  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((NULL))) ASC;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((2.09076802E8 IN ()));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((2.09076802E8 IN ())) ORDER BY x''  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((2.09076802E8 IN ()));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((2.09076802E8 IN ())) ORDER BY x''  NULLS FIRST;
SELECT MIN(t1.c2) FROM t1, vt0 WHERE ((NOT ((('>7]0JD')LIKE(1956521729)))));
SELECT MIN(t1.c2) FROM t1, vt0 WHERE ((((NOT ((('>7]0JD')LIKE(0X749e2701)))))AND(CASE WHEN CAST(t1.c2 AS INTEGER) THEN CAST(t1.c2 AS BLOB) END))) ORDER BY ((((t1.c0 IN (vt0.c0, t1.c0))))<((NULL)))  NULLS FIRST INTERSECT SELECT MIN(t1.c2) FROM t1, vt0 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (vt0.c1)))*((- (t1.c0))))) ORDER BY ((((t1.c0 IN (vt0.c0, t1.c0))))<((NULL)))  NULLS FIRST;
SELECT * FROM vt0, t1, v0 WHERE ((((CASE WHEN t1.c1 THEN v0.c0 WHEN v0.c2 THEN t1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c2 THEN v0.c1 WHEN vt0.c1 THEN t1.c2 END))<(((t1.c1 IN ()))))) ORDER BY ((((vt0.c1) NOT BETWEEN (t1.c2) AND (t1.c0))) NOT BETWEEN (TYPEOF(v0.c2)) AND ((- (vt0.c1)))) ASC;
SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((((((CASE WHEN t1.c1 THEN v0.c0 WHEN v0.c2 THEN t1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c2 THEN v0.c1 WHEN vt0.c1 THEN t1.c2 END))<(((t1.c1 IN ())))))AND(vt0.c1))) ORDER BY ((((vt0.c1) NOT BETWEEN (t1.c2) AND (t1.c0))) NOT BETWEEN (TYPEOF(v0.c2)) AND ((- (vt0.c1)))) ASC LIMIT 1;
SELECT * FROM vt0, t1, v0 WHERE ((((CASE WHEN t1.c1 THEN v0.c0 WHEN v0.c2 THEN t1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c2 THEN v0.c1 WHEN vt0.c1 THEN t1.c2 END))<(((t1.c1 IN ()))))) ORDER BY ((((vt0.c1) NOT BETWEEN (t1.c2) AND (t1.c0))) NOT BETWEEN (TYPEOF(v0.c2)) AND ((- (vt0.c1)))) ASC;
SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((((((CASE WHEN t1.c1 THEN v0.c0 WHEN v0.c2 THEN t1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c2 THEN v0.c1 WHEN vt0.c1 THEN t1.c2 END))<(((t1.c1 IN ())))))AND(vt0.c1))) ORDER BY ((((vt0.c1) NOT BETWEEN (t1.c2) AND (t1.c0))) NOT BETWEEN (TYPEOF(v0.c2)) AND ((- (vt0.c1)))) ASC LIMIT 1;
SELECT MAX(v0.c0) FROM vt0, v0 NATURAL JOIN t1 WHERE ('0.4403047577460034') ORDER BY CASE WHEN -1.520699329E9 THEN CAST(t1.c0 AS NUMERIC) WHEN ((t1.c2)OR(vt0.c1)) THEN 'a' COLLATE NOCASE ELSE (v0.c1 IN (vt0.c1)) END ASC, CASE (((v0.c0, v0.c0, v0.c2))>((t1.c1, v0.c1, x'63')))  WHEN ((t1.c2) NOTNULL) THEN CAST(v0.c1 AS BLOB) WHEN (~ (v0.c2)) THEN ((0.4005256219606308) NOT BETWEEN (v0.c0) AND (v0.c2)) WHEN ((t1.c0) BETWEEN (v0.c0) AND (t1.c1)) THEN ((t1.c0)IS(t1.c0)) END DESC;
SELECT ALL MAX(v0.c0) FROM vt0, v0 NATURAL JOIN t1 WHERE ('0.4403047577460034') ORDER BY CASE WHEN -1.520699329E9 THEN CAST(t1.c0 AS NUMERIC) WHEN ((t1.c2)OR(vt0.c1)) THEN 'a' COLLATE NOCASE ELSE (v0.c1 IN (vt0.c1)) END ASC, CASE (((v0.c0, v0.c0, v0.c2))>((t1.c1, v0.c1, x'63')))  WHEN ((t1.c2) NOTNULL) THEN CAST(v0.c1 AS BLOB) WHEN (~ (v0.c2)) THEN ((0.4005256219606308) NOT BETWEEN (v0.c0) AND (v0.c2)) WHEN ((t1.c0) BETWEEN (v0.c0) AND (t1.c1)) THEN ((t1.c0)IS(t1.c0)) END DESC LIMIT 4 INTERSECT SELECT MAX(v0.c0) FROM vt0, v0 NATURAL JOIN t1 WHERE ((((- (t1.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE WHEN -1.520699329E9 THEN CAST(t1.c0 AS NUMERIC) WHEN ((t1.c2)OR(vt0.c1)) THEN 'a' COLLATE NOCASE ELSE (v0.c1 IN (vt0.c1)) END ASC, CASE (((v0.c0, v0.c0, v0.c2))>((t1.c1, v0.c1, x'63')))  WHEN ((t1.c2) NOTNULL) THEN CAST(v0.c1 AS BLOB) WHEN (~ (v0.c2)) THEN ((0.4005256219606308) NOT BETWEEN (v0.c0) AND (v0.c2)) WHEN ((t1.c0) BETWEEN (v0.c0) AND (t1.c1)) THEN ((t1.c0)IS(t1.c0)) END DESC LIMIT 0x4;
SELECT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c1)>=(vt0.c1)) COLLATE NOCASE COLLATE NOCASE) ORDER BY 1744414291;
SELECT DISTINCT MAX(vt0.c0) FROM vt0 WHERE (((vt0.c1)>(vt0.c1)) COLLATE NOCASE COLLATE NOCASE) ORDER BY GLOB(((vt0.c0) NOT NULL), vt0.c0 COLLATE RTRIM) DESC  NULLS LAST, (((vt0.c1)) BETWEEN ((((vt0.c0) NOT NULL))) AND (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) DESC  NULLS FIRST, CAST(vt0.c1 AS INTEGER)  NULLS LAST;
SELECT * FROM v0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN v0.c1 END)/((NULL IN (v0.c1, v0.c2))))) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN CASE x''  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN 4.65785973E8 WHEN v0.c0 THEN '1226535833' WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END WHEN (~ (v0.c0)) THEN (((v0.c2, v0.c0, v0.c0)) BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((v0.c1, v0.c1, v0.c2))) ELSE (((v0.c2, v0.c2))>(('-459511557', v0.c0))) END ASC, (((v0.c0 IN ()))AND(v0.c0));
SELECT ALL * FROM v0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN v0.c1 END)/((NULL IN (v0.c1, v0.c2))))) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN CASE x''  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN 4.65785973E8 WHEN v0.c0 THEN '1226535833' WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END WHEN (~ (v0.c0)) THEN (((v0.c2, v0.c0, v0.c0)) BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((v0.c1, v0.c1, v0.c2))) ELSE (((v0.c2, v0.c2))>(('-459511557', v0.c0))) END ASC, (((v0.c0 IN ()))AND(v0.c0)) INTERSECT SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN CASE x''  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN 4.65785973E8 WHEN v0.c0 THEN '1226535833' WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END WHEN (~ (v0.c0)) THEN (((v0.c2, v0.c0, v0.c0)) BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((v0.c1, v0.c1, v0.c2))) ELSE (((v0.c2, v0.c2))>(('-459511557', v0.c0))) END ASC, (((v0.c0 IN ()))AND(v0.c0));
SELECT * FROM v0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN v0.c1 END)/((NULL IN (v0.c1, v0.c2))))) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN CASE x''  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN 4.65785973E8 WHEN v0.c0 THEN '1226535833' WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END WHEN (~ (v0.c0)) THEN (((v0.c2, v0.c0, v0.c0)) BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((v0.c1, v0.c1, v0.c2))) ELSE (((v0.c2, v0.c2))>(('-459511557', v0.c0))) END ASC, (((v0.c0 IN ()))AND(v0.c0));
SELECT ALL * FROM v0, t1, vt0 WHERE (LIKELIHOOD(DISTINCT (('-1455727587') IS FALSE), ((((t1.c1)AND(v0.c2)))OR(v0.c0))));
SELECT ALL * FROM v0, t1, vt0 WHERE (((LIKELIHOOD(DISTINCT (('-1455727587') IS FALSE), ((((t1.c1)AND(v0.c2)))OR(v0.c0))))AND(((LENGTH(t1.c0))<=(vt0.c1))))) ORDER BY 0.4009677301748732 ASC, ((((((((((((vt0.c0) NOTNULL))AND(((v0.c1) IS TRUE))))AND(NULL)))OR((~ (vt0.c1)))))AND((((NULL, t1.c2))<=((v0.c0, NULL))))))AND(((((((((v0.c2)AND(v0.c1)))OR(t1.c2)))OR(v0.c0)))AND(vt0.c1)))) ASC INTERSECT SELECT * FROM v0, t1, vt0 WHERE (((((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0)))<<(((((((((((t1.c1)OR(vt0.c1)))AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))AND(t1.c2))))) ORDER BY 0.4009677301748732 ASC, ((((((((((((vt0.c0) NOTNULL))AND(((v0.c1) IS TRUE))))AND(NULL)))OR((~ (vt0.c1)))))AND((((NULL, t1.c2))<=((v0.c0, NULL))))))AND(((((((((v0.c2)AND(v0.c1)))OR(t1.c2)))OR(v0.c0)))AND(vt0.c1)))) ASC;
SELECT ALL * FROM v0, t1, vt0 WHERE (LIKELIHOOD(DISTINCT (('-1455727587') IS FALSE), ((((t1.c1)AND(v0.c2)))OR(v0.c0))));
SELECT MAX(v0.c0) FROM v0 WHERE (((CAST(v0.c1 AS NUMERIC)) BETWEEN (((v0.c2) NOT BETWEEN (v0.c2) AND (x''))) AND (v0.c2)));
SELECT ALL MAX(v0.c0) FROM v0 WHERE (((((CAST(v0.c1 AS NUMERIC)) BETWEEN (((v0.c2) NOT BETWEEN (v0.c2) AND (x''))) AND (v0.c2)))AND(((v0.c2 IN (v0.c2)) IN ()))));
SELECT ALL MIN(t1.c2) FROM t1 WHERE (load_extension(((t1.c1)IS NOT(t1.c1)), CAST(t1.c2 AS NUMERIC))) ORDER BY CAST((((t1.c2, t1.c2)) BETWEEN ((x'5d', t1.c0)) AND ((t1.c2, NULL))) AS BLOB) ASC, (HEX(DISTINCT t1.c2) IN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c2 ELSE t1.c1 END))  NULLS FIRST;
SELECT DISTINCT MIN(t1.c2) FROM t1 WHERE (((load_extension(((t1.c1)IS NOT(t1.c1)), CAST(t1.c2 AS NUMERIC)))AND((((t1.c0) IS FALSE) IN ((- (t1.c0))))))) ORDER BY CAST((((t1.c2, t1.c2)) BETWEEN ((x'5d', t1.c0)) AND ((t1.c2, NULL))) AS BLOB) ASC, (HEX(DISTINCT t1.c2) IN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c2 ELSE t1.c1 END))  NULLS FIRST;
SELECT * FROM v0 WHERE ((- (((v0.c2) NOT NULL))));
SELECT DISTINCT * FROM v0 WHERE ((((- (((v0.c2) NOT NULL))))AND(((((DATE(v0.c0, v0.c2, v0.c1, v0.c1))OR((((v0.c0, v0.c2)) NOT BETWEEN ((v0.c2, v0.c0)) AND ((v0.c2, v0.c0))))))AND((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c2)))))))) LIMIT 0;
SELECT * FROM v0 WHERE ((- (((v0.c2) NOT NULL))));
SELECT DISTINCT * FROM v0 WHERE ((((- (((v0.c2) NOT NULL))))AND(((((DATE(v0.c0, v0.c2, v0.c1, v0.c1))OR((((v0.c0, v0.c2)) NOT BETWEEN ((v0.c2, v0.c0)) AND ((v0.c2, v0.c0))))))AND((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c2)))))))) LIMIT 0;
SELECT ALL * FROM vt0, v0, t1 WHERE (CAST(((v0.c2)*(v0.c0)) AS NUMERIC)) ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt0.c0, v0.c1, v0.c1)) BETWEEN ((((v0.c2) IS TRUE), (((t1.c2, vt0.c1)) NOT BETWEEN ((t1.c2, t1.c1)) AND ((v0.c1, v0.c2))), (t1.c2 IN ()), v0.c2 COLLATE NOCASE, CASE WHEN t1.c2 THEN 0.38230345072472716 WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN 0.820955583327208 ELSE '132882391' END, 'K')) AND ((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END, t1.c0, ((t1.c0) IS FALSE), ((v0.c1)IS NOT(vt0.c0)), (+ (vt0.c0)), ((v0.c2)AND('n5Y3'))))) DESC, '1439138116', (- (t1.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (CAST(((v0.c2)*(v0.c0)) AS NUMERIC)) ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt0.c0, v0.c1, v0.c1)) BETWEEN ((((v0.c2) IS TRUE), (((t1.c2, vt0.c1)) NOT BETWEEN ((t1.c2, t1.c1)) AND ((v0.c1, v0.c2))), (t1.c2 IN ()), v0.c2 COLLATE NOCASE, CASE WHEN t1.c2 THEN 0.38230345072472716 WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN 0.820955583327208 ELSE '132882391' END, 'K')) AND ((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END, t1.c0, ((t1.c0) IS FALSE), ((v0.c1)IS NOT(vt0.c0)), (+ (vt0.c0)), ((v0.c2)AND('n5Y3'))))) DESC, '1439138116', (- (t1.c0)) COLLATE BINARY INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE (CAST(((vt0.c1)-(vt0.c1)) AS BLOB)) ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt0.c0, v0.c1, v0.c1)) BETWEEN ((((v0.c2) IS TRUE), (((t1.c2, vt0.c1)) NOT BETWEEN ((t1.c2, t1.c1)) AND ((v0.c1, v0.c2))), (t1.c2 IN ()), v0.c2 COLLATE NOCASE, CASE WHEN t1.c2 THEN 0.38230345072472716 WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN 0.820955583327208 ELSE '132882391' END, 'K')) AND ((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END, t1.c0, ((t1.c0) IS FALSE), ((v0.c1)IS NOT(vt0.c0)), (+ (vt0.c0)), ((v0.c2)AND('n5Y3'))))) DESC, '1439138116', (- (t1.c0)) COLLATE BINARY;
SELECT ALL * FROM vt0, v0, t1 WHERE (CAST(((v0.c2)*(v0.c0)) AS NUMERIC)) ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt0.c0, v0.c1, v0.c1)) BETWEEN ((((v0.c2) IS TRUE), (((t1.c2, vt0.c1)) NOT BETWEEN ((t1.c2, t1.c1)) AND ((v0.c1, v0.c2))), (t1.c2 IN ()), v0.c2 COLLATE NOCASE, CASE WHEN t1.c2 THEN 0.38230345072472716 WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN 0.820955583327208 ELSE '132882391' END, 'K')) AND ((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END, t1.c0, ((t1.c0) IS FALSE), ((v0.c1)IS NOT(vt0.c0)), (+ (vt0.c0)), ((v0.c2)AND('n5Y3'))))) DESC, '1439138116', (- (t1.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM vt0, v0, t1 WHERE (CAST(((v0.c2)*(v0.c0)) AS NUMERIC)) ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt0.c0, v0.c1, v0.c1)) BETWEEN ((((v0.c2) IS TRUE), (((t1.c2, vt0.c1)) NOT BETWEEN ((t1.c2, t1.c1)) AND ((v0.c1, v0.c2))), (t1.c2 IN ()), v0.c2 COLLATE NOCASE, CASE WHEN t1.c2 THEN 0.38230345072472716 WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN 0.820955583327208 ELSE '132882391' END, 'K')) AND ((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END, t1.c0, ((t1.c0) IS FALSE), ((v0.c1)IS NOT(vt0.c0)), (+ (vt0.c0)), ((v0.c2)AND('n5Y3'))))) DESC, '1439138116', (- (t1.c0)) COLLATE BINARY INTERSECT SELECT DISTINCT * FROM vt0, v0, t1 WHERE (CAST(((vt0.c1)-(vt0.c1)) AS BLOB)) ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt0.c0, v0.c1, v0.c1)) BETWEEN ((((v0.c2) IS TRUE), (((t1.c2, vt0.c1)) NOT BETWEEN ((t1.c2, t1.c1)) AND ((v0.c1, v0.c2))), (t1.c2 IN ()), v0.c2 COLLATE NOCASE, CASE WHEN t1.c2 THEN 0.38230345072472716 WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN 0.820955583327208 ELSE '132882391' END, 'K')) AND ((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END, t1.c0, ((t1.c0) IS FALSE), ((v0.c1)IS NOT(vt0.c0)), (+ (vt0.c0)), ((v0.c2)AND('n5Y3'))))) DESC, '1439138116', (- (t1.c0)) COLLATE BINARY;
SELECT MAX(t1.c0) FROM vt0, t1 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN t1.c1 END))) ORDER BY (~ (vt0.c1)) COLLATE BINARY ASC, ((((t1.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND ('箁8]')))))OR((+ (vt0.c1))));
SELECT DISTINCT MAX(t1.c0) FROM vt0, t1 WHERE ((((~ (CASE vt0.c0  WHEN vt0.c0 THEN t1.c1 END)))AND(((CASE WHEN x'a8' THEN t1.c0 WHEN vt0.c0 THEN x'3f' END) ISNULL)))) ORDER BY (~ (vt0.c1)) COLLATE BINARY ASC, ((((t1.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND ('箁8]')))))OR((+ (vt0.c1)))) LIMIT 0X0 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM vt0, t1 WHERE (NULLIF(t1.c1, t1.c2) COLLATE RTRIM) ORDER BY (~ (vt0.c1)) COLLATE BINARY ASC, ((((t1.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND ('箁8]')))))OR((+ (vt0.c1)))) LIMIT 0X0;
SELECT * FROM t1, vt0 LEFT OUTER JOIN v0 ON UNLIKELY(((vt0.c0) NOT NULL)) WHERE ((((((vt0.c0) IS FALSE)))>((((vt0.c0)<(t1.c0)))))) ORDER BY (- (((((((((((v0.c2)OR(0.09262538888159577)))AND(vt0.c0)))OR(t1.c2)))OR('f\}*')))AND(t1.c2)))) ASC;
SELECT DISTINCT * FROM t1, vt0 INNER JOIN v0 ON UNLIKELY(((vt0.c0) NOT NULL)) WHERE ((((((vt0.c0) IS FALSE)))>((((vt0.c0)<(t1.c0)))))) ORDER BY (- (((((((((((v0.c2)OR(0.09262538888159577)))AND(vt0.c0)))OR(t1.c2)))OR('f\}*')))AND(t1.c2)))) ASC LIMIT 5;
SELECT * FROM t1, vt0 LEFT OUTER JOIN v0 ON UNLIKELY(((vt0.c0) NOT NULL)) WHERE ((((((vt0.c0) IS FALSE)))>((((vt0.c0)<(t1.c0)))))) ORDER BY (- (((((((((((v0.c2)OR(0.09262538888159577)))AND(vt0.c0)))OR(t1.c2)))OR('f\}*')))AND(t1.c2)))) ASC;
SELECT DISTINCT * FROM t1, vt0 INNER JOIN v0 ON UNLIKELY(((vt0.c0) NOT NULL)) WHERE ((((((vt0.c0) IS FALSE)))>((((vt0.c0)<(t1.c0)))))) ORDER BY (- (((((((((((v0.c2)OR(0.09262538888159577)))AND(vt0.c0)))OR(t1.c2)))OR('f\}*')))AND(t1.c2)))) ASC LIMIT 5;
SELECT * FROM t1 WHERE (t1.c0);
SELECT ALL * FROM t1 WHERE (((t1.c0)AND(((((t1.c0)>(t1.c0))) ISNULL)))) ORDER BY ((t1.c2 IN (t1.c0)) IN (CASE t1.c2  WHEN 0.27839127710792955 THEN t1.c1 WHEN 0.1726773678599085 THEN t1.c0 END))  NULLS LAST LIMIT 0X2 INTERSECT SELECT ALL * FROM t1 WHERE (ABS(CAST(t1.c1 AS TEXT))) ORDER BY ((t1.c2 IN (t1.c0)) IN (CASE t1.c2  WHEN 0.27839127710792955 THEN t1.c1 WHEN 0.1726773678599085 THEN t1.c0 END))  NULLS LAST LIMIT 2;
SELECT * FROM t1 WHERE (t1.c0);
SELECT ALL * FROM t1 WHERE (((t1.c0)AND(((((t1.c0)>(t1.c0))) ISNULL)))) ORDER BY ((t1.c2 IN (t1.c0)) IN (CASE t1.c2  WHEN 0.27839127710792955 THEN t1.c1 WHEN 0.1726773678599085 THEN t1.c0 END))  NULLS LAST LIMIT 0X2 INTERSECT SELECT ALL * FROM t1 WHERE (ABS(CAST(t1.c1 AS TEXT))) ORDER BY ((t1.c2 IN (t1.c0)) IN (CASE t1.c2  WHEN 0.27839127710792955 THEN t1.c1 WHEN 0.1726773678599085 THEN t1.c0 END))  NULLS LAST LIMIT 2;
SELECT MAX(v0.c1) FROM v0 WHERE ('1836074277');
SELECT DISTINCT MAX(v0.c1) FROM v0 WHERE ((('1836074277')AND((- (v0.c1))))) ORDER BY TRIM(DISTINCT ((v0.c2)|(v0.c1))) ASC  NULLS FIRST LIMIT 0X0;
SELECT MAX(vt0.c1) FROM vt0, t1, v0 WHERE (((t1.c1)<<(((-6.0290582E8) BETWEEN (vt0.c0) AND (v0.c2))))) ORDER BY CAST(CAST(t1.c2 AS BLOB) AS NUMERIC) DESC  NULLS LAST, CASE vt0.c0  WHEN t1.c1 THEN v0.c0 WHEN t1.c1 THEN v0.c0 WHEN t1.c2 THEN vt0.c1 ELSE 0.07390860906258911 END COLLATE BINARY COLLATE NOCASE;
SELECT DISTINCT MAX(vt0.c1) FROM vt0, t1, v0 WHERE (((((t1.c1)<<(((-6.0290582E8) BETWEEN (vt0.c0) AND (v0.c2)))))AND(vt0.c0))) ORDER BY CAST(CAST(t1.c2 AS BLOB) AS NUMERIC) DESC  NULLS LAST, CASE vt0.c0  WHEN t1.c1 THEN v0.c0 WHEN t1.c1 THEN v0.c0 WHEN t1.c2 THEN vt0.c1 ELSE 0.07390860906258911 END COLLATE BINARY COLLATE NOCASE LIMIT 0;
SELECT COUNT(*) FROM v0, t1, vt0 WHERE (JULIANDAY((((v0.c0)) BETWEEN ((v0.c2)) AND ((t1.c2))), CAST(v0.c2 AS TEXT), ((x'e0') NOT BETWEEN (v0.c0) AND (v0.c2)), CASE WHEN vt0.c0 THEN v0.c1 END)) ORDER BY ((((((CASE WHEN v0.c1 THEN t1.c2 WHEN vt0.c0 THEN t1.c1 WHEN v0.c1 THEN t1.c0 WHEN t1.c1 THEN vt0.c1 ELSE vt0.c1 END)OR(((((v0.c0)OR(vt0.c1)))OR(t1.c2)))))AND(CASE WHEN v0.c1 THEN v0.c0 WHEN t1.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 END)))OR((NOT (t1.c0)))) ASC, vt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, t1, vt0 WHERE (((JULIANDAY((((v0.c0)) BETWEEN ((v0.c2)) AND ((t1.c2))), CAST(v0.c2 AS TEXT), ((x'e0') NOT BETWEEN (v0.c0) AND (v0.c2)), CASE WHEN vt0.c0 THEN v0.c1 END))AND(CASE WHEN ((v0.c2)>>(v0.c2)) THEN ((vt0.c1)&(v0.c1)) WHEN vt0.c1 COLLATE NOCASE THEN ((v0.c0) NOTNULL) END))) ORDER BY ((((((CASE WHEN v0.c1 THEN t1.c2 WHEN vt0.c0 THEN t1.c1 WHEN v0.c1 THEN t1.c0 WHEN t1.c1 THEN vt0.c1 ELSE vt0.c1 END)OR(((((v0.c0)OR(vt0.c1)))OR(t1.c2)))))AND(CASE WHEN v0.c1 THEN v0.c0 WHEN t1.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 END)))OR((NOT (t1.c0)))) ASC, vt0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM v0 INNER JOIN t1 ON (('P뵐h[+T{G') NOT BETWEEN ((((x'', t1.c1)) BETWEEN ((vt0.c0, t1.c2)) AND ((t1.c1, v0.c0)))) AND (NULLIF(DISTINCT v0.c0, t1.c0))) CROSS JOIN vt0 ON ((((((v0.c1)AND(t1.c1)))AND(v0.c1))) NOTNULL) WHERE ((((v0.c0 IN (t1.c0)))+(CAST(t1.c1 AS NUMERIC)))) ORDER BY ((~ (t1.c2)) IN ()) ASC  NULLS LAST, (~ (((t1.c1) NOTNULL)))  NULLS FIRST;
SELECT DISTINCT * FROM v0 INNER JOIN t1 ON (('P뵐h[+T{G') NOT BETWEEN ((((x'', t1.c1)) BETWEEN ((vt0.c0, t1.c2)) AND ((t1.c1, v0.c0)))) AND (NULLIF(DISTINCT v0.c0, t1.c0))) CROSS JOIN vt0 ON ((((((v0.c1)AND(t1.c1)))AND(v0.c1))) NOTNULL) WHERE ((((v0.c0 IN (t1.c0)))+(CAST(t1.c1 AS NUMERIC)))) ORDER BY CASE WHEN (t1.c1 IN ()) THEN 'c(.' WHEN ((v0.c0)>=(vt0.c0)) THEN ((v0.c1) ISNULL) END  NULLS LAST, vt0.c0 DESC;
SELECT ALL * FROM v0 INNER JOIN t1 ON (('P뵐h[+T{G') NOT BETWEEN ((((x'', t1.c1)) BETWEEN ((vt0.c0, t1.c2)) AND ((t1.c1, v0.c0)))) AND (NULLIF(DISTINCT v0.c0, t1.c0))) CROSS JOIN vt0 ON ((((((v0.c1)AND(t1.c1)))AND(v0.c1))) NOTNULL) WHERE ((((v0.c0 IN (t1.c0)))+(CAST(t1.c1 AS NUMERIC)))) ORDER BY ((~ (t1.c2)) IN ()) ASC  NULLS LAST, (~ (((t1.c1) NOTNULL)))  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE (CAST((((t1.c2, t1.c2, NULL, t1.c1, t1.c1)) BETWEEN ((t1.c2, t1.c1, t1.c1, t1.c0, t1.c1)) AND ((t1.c2, 0.4135398949241078, t1.c2, t1.c1, t1.c2))) AS BLOB));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (CAST((((t1.c2, t1.c2, NULL, t1.c1, t1.c1)) BETWEEN ((t1.c2, t1.c1, t1.c1, t1.c0, t1.c1)) AND ((t1.c2, 0.4135398949241078, t1.c2, t1.c1, t1.c2))) AS BLOB)) ORDER BY ((0.989275072420923)<=(t1.c2)) COLLATE BINARY COLLATE RTRIM DESC LIMIT 0X4 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (NULL) ORDER BY ((0.989275072420923)<=(t1.c2)) COLLATE BINARY COLLATE RTRIM DESC LIMIT 0x4;
SELECT ALL * FROM t1 LEFT OUTER JOIN v0 ON MAX(v0.c1, v0.c0, vt0.c1, v0.c2, t1.c1, vt0.c1) COLLATE RTRIM INNER JOIN vt0 ON json(((t1.c1)OR(t1.c1))) WHERE (((((((t1.c2)OR(vt0.c0)))AND(NULL)))<=(CAST(v0.c2 AS NUMERIC))));
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN v0 ON MAX(v0.c1, v0.c0, vt0.c1, v0.c2, t1.c1, vt0.c1) COLLATE RTRIM INNER JOIN vt0 ON json(((t1.c1)OR(t1.c1))) WHERE (((((((t1.c2)OR(vt0.c0)))AND(NULL)))<=(CAST(v0.c2 AS NUMERIC)))) ORDER BY x'4de7' ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 LEFT OUTER JOIN v0 ON MAX(v0.c1, v0.c0, vt0.c1, v0.c2, t1.c1, vt0.c1) COLLATE RTRIM INNER JOIN vt0 ON json(((t1.c1)OR(t1.c1))) WHERE (((x'a822') NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CAST(t1.c1 AS TEXT)))) ORDER BY x'4de7' ASC LIMIT 1;
SELECT ALL * FROM t1 LEFT OUTER JOIN v0 ON MAX(v0.c1, v0.c0, vt0.c1, v0.c2, t1.c1, vt0.c1) COLLATE RTRIM INNER JOIN vt0 ON json(((t1.c1)OR(t1.c1))) WHERE (((((((t1.c2)OR(vt0.c0)))AND(NULL)))<=(CAST(v0.c2 AS NUMERIC))));
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN v0 ON MAX(v0.c1, v0.c0, vt0.c1, v0.c2, t1.c1, vt0.c1) COLLATE RTRIM INNER JOIN vt0 ON json(((t1.c1)OR(t1.c1))) WHERE (((((((t1.c2)OR(vt0.c0)))AND(NULL)))<=(CAST(v0.c2 AS NUMERIC)))) ORDER BY x'4de7' ASC LIMIT 1 INTERSECT SELECT DISTINCT * FROM t1 LEFT OUTER JOIN v0 ON MAX(v0.c1, v0.c0, vt0.c1, v0.c2, t1.c1, vt0.c1) COLLATE RTRIM INNER JOIN vt0 ON json(((t1.c1)OR(t1.c1))) WHERE (((x'a822') NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CAST(t1.c1 AS TEXT)))) ORDER BY x'4de7' ASC LIMIT 1;
SELECT ALL MAX(v0.c1) FROM v0, t1 WHERE ((NOT (CAST(t1.c0 AS NUMERIC))));
SELECT DISTINCT MAX(v0.c1) FROM v0, t1 WHERE ((((NOT (CAST(t1.c0 AS NUMERIC))))AND(t1.c2))) ORDER BY x'87' ASC  NULLS FIRST LIMIT 1;
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN v0 ON TYPEOF(DISTINCT NULLIF(vt0.c1, t1.c1)) WHERE (ROUND(NULL, ((v0.c0) ISNULL))) ORDER BY ((v0.c1 IN ()) IN (((v0.c0)%(v0.c2))))  NULLS LAST, (((1709102821)) BETWEEN ((((t1.c1)<(v0.c1)))) AND ((CASE t1.c1  WHEN t1.c1 THEN v0.c1 WHEN t1.c2 THEN t1.c2 WHEN '-1395127720' THEN t1.c1 WHEN v0.c2 THEN t1.c2 WHEN v0.c2 THEN t1.c2 END))) DESC, ((((t1.c0 COLLATE BINARY)OR(((((((t1.c2)OR(v0.c0)))AND(v0.c0)))AND(v0.c1)))))OR((v0.c1 IN ()))) DESC;
SELECT ALL * FROM t1, vt0 INNER JOIN v0 ON TYPEOF(DISTINCT NULLIF(vt0.c1, t1.c1)) WHERE (ROUND(NULL, ((v0.c0) ISNULL))) ORDER BY ((v0.c1 IN ()) IN (((v0.c0)%(v0.c2))))  NULLS LAST, (((0x65ded6e5)) BETWEEN ((((t1.c1)<(v0.c1)))) AND ((CASE t1.c1  WHEN t1.c1 THEN v0.c1 WHEN t1.c2 THEN t1.c2 WHEN '-1395127720' THEN t1.c1 WHEN v0.c2 THEN t1.c2 WHEN v0.c2 THEN t1.c2 END))) DESC, ((((t1.c0 COLLATE BINARY)OR(((((((t1.c2)OR(v0.c0)))AND(v0.c0)))AND(v0.c1)))))OR((v0.c1 IN ()))) DESC INTERSECT SELECT * FROM t1, vt0 INNER JOIN v0 ON TYPEOF(DISTINCT NULLIF(vt0.c1, t1.c1)) WHERE (((((((((v0.c0) IS TRUE))AND(x'58db')))AND(((((((((vt0.c1)OR(v0.c2)))OR(t1.c0)))AND(t1.c0)))OR(v0.c2)))))OR(v0.c0 COLLATE RTRIM))) ORDER BY ((v0.c1 IN ()) IN (((v0.c0)%(v0.c2))))  NULLS LAST, (((0X65ded6e5)) BETWEEN ((((t1.c1)<(v0.c1)))) AND ((CASE t1.c1  WHEN t1.c1 THEN v0.c1 WHEN t1.c2 THEN t1.c2 WHEN '-1395127720' THEN t1.c1 WHEN v0.c2 THEN t1.c2 WHEN v0.c2 THEN t1.c2 END))) DESC, ((((t1.c0 COLLATE BINARY)OR(((((((t1.c2)OR(v0.c0)))AND(v0.c0)))AND(v0.c1)))))OR((v0.c1 IN ()))) DESC;
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN v0 ON TYPEOF(DISTINCT NULLIF(vt0.c1, t1.c1)) WHERE (ROUND(NULL, ((v0.c0) ISNULL))) ORDER BY ((v0.c1 IN ()) IN (((v0.c0)%(v0.c2))))  NULLS LAST, (((1709102821)) BETWEEN ((((t1.c1)<(v0.c1)))) AND ((CASE t1.c1  WHEN t1.c1 THEN v0.c1 WHEN t1.c2 THEN t1.c2 WHEN '-1395127720' THEN t1.c1 WHEN v0.c2 THEN t1.c2 WHEN v0.c2 THEN t1.c2 END))) DESC, ((((t1.c0 COLLATE BINARY)OR(((((((t1.c2)OR(v0.c0)))AND(v0.c0)))AND(v0.c1)))))OR((v0.c1 IN ()))) DESC;
SELECT ALL * FROM t1, vt0 INNER JOIN v0 ON TYPEOF(DISTINCT NULLIF(vt0.c1, t1.c1)) WHERE (ROUND(NULL, ((v0.c0) ISNULL))) ORDER BY ((v0.c1 IN ()) IN (((v0.c0)%(v0.c2))))  NULLS LAST, (((0x65ded6e5)) BETWEEN ((((t1.c1)<(v0.c1)))) AND ((CASE t1.c1  WHEN t1.c1 THEN v0.c1 WHEN t1.c2 THEN t1.c2 WHEN '-1395127720' THEN t1.c1 WHEN v0.c2 THEN t1.c2 WHEN v0.c2 THEN t1.c2 END))) DESC, ((((t1.c0 COLLATE BINARY)OR(((((((t1.c2)OR(v0.c0)))AND(v0.c0)))AND(v0.c1)))))OR((v0.c1 IN ()))) DESC INTERSECT SELECT * FROM t1, vt0 INNER JOIN v0 ON TYPEOF(DISTINCT NULLIF(vt0.c1, t1.c1)) WHERE (((((((((v0.c0) IS TRUE))AND(x'58db')))AND(((((((((vt0.c1)OR(v0.c2)))OR(t1.c0)))AND(t1.c0)))OR(v0.c2)))))OR(v0.c0 COLLATE RTRIM))) ORDER BY ((v0.c1 IN ()) IN (((v0.c0)%(v0.c2))))  NULLS LAST, (((0X65ded6e5)) BETWEEN ((((t1.c1)<(v0.c1)))) AND ((CASE t1.c1  WHEN t1.c1 THEN v0.c1 WHEN t1.c2 THEN t1.c2 WHEN '-1395127720' THEN t1.c1 WHEN v0.c2 THEN t1.c2 WHEN v0.c2 THEN t1.c2 END))) DESC, ((((t1.c0 COLLATE BINARY)OR(((((((t1.c2)OR(v0.c0)))AND(v0.c0)))AND(v0.c1)))))OR((v0.c1 IN ()))) DESC;
SELECT MIN(v0.c0) FROM v0 WHERE (((((v0.c2 IN (v0.c1)), 0x690fb34a COLLATE BINARY, ((((((((((v0.c2)OR(v0.c2)))OR(NULL)))AND(v0.c0)))AND(v0.c0)))AND(v0.c1))))<((CAST(0.22154916898896226 AS TEXT), GLOB(v0.c2, v0.c2), NULL COLLATE NOCASE))));
SELECT DISTINCT MIN(v0.c0) FROM v0 WHERE (((((v0.c2 IN (v0.c1)), 1762636618 COLLATE BINARY, ((((((((((v0.c2)OR(v0.c2)))OR(NULL)))AND(v0.c0)))AND(v0.c0)))AND(v0.c1))))<((CAST(0.22154916898896226 AS TEXT), GLOB(v0.c2, v0.c2), NULL COLLATE NOCASE)))) LIMIT 0x2 INTERSECT SELECT DISTINCT MIN(v0.c0) FROM v0 WHERE (((((NOT (v0.c1))))<((v0.c0)))) LIMIT 0X2;
SELECT ALL * FROM v0, vt0, t1 WHERE (((HEX(DISTINCT t1.c2)) NOT BETWEEN (v0.c0) AND (NULLIF(v0.c2, t1.c0))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((HEX(DISTINCT t1.c2)) NOT BETWEEN (v0.c0) AND (NULLIF(v0.c2, t1.c0))))AND((CASE WHEN v0.c0 THEN t1.c0 ELSE '704325413' END IN (t1.c0 COLLATE RTRIM, CAST(v0.c2 AS BLOB)))))) ORDER BY ((((t1.c2)<(t1.c2)))>=(CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 ELSE t1.c1 END)) DESC, ((+ (t1.c2)) IN ())  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE (v0.c2 COLLATE RTRIM) ORDER BY ((((t1.c2)<(t1.c2)))>=(CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 ELSE t1.c1 END)) DESC, ((+ (t1.c2)) IN ())  NULLS FIRST LIMIT 0;
SELECT ALL * FROM v0, vt0, t1 WHERE (((HEX(DISTINCT t1.c2)) NOT BETWEEN (v0.c0) AND (NULLIF(v0.c2, t1.c0))));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((HEX(DISTINCT t1.c2)) NOT BETWEEN (v0.c0) AND (NULLIF(v0.c2, t1.c0))))AND((CASE WHEN v0.c0 THEN t1.c0 ELSE '704325413' END IN (t1.c0 COLLATE RTRIM, CAST(v0.c2 AS BLOB)))))) ORDER BY ((((t1.c2)<(t1.c2)))>=(CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 ELSE t1.c1 END)) DESC, ((+ (t1.c2)) IN ())  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM v0, vt0, t1 WHERE (v0.c2 COLLATE RTRIM) ORDER BY ((((t1.c2)<(t1.c2)))>=(CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 ELSE t1.c1 END)) DESC, ((+ (t1.c2)) IN ())  NULLS FIRST LIMIT 0;
SELECT * FROM v0, vt0 NATURAL JOIN t1 WHERE (CASE WHEN CAST(t1.c1 AS TEXT) THEN vt0.c0 WHEN ((((vt0.c1)AND(v0.c1)))AND(t1.c1)) THEN ((vt0.c1)!=(v0.c2)) END) ORDER BY 'u.pY'  NULLS LAST, (((((vt0.c0)LIKE(t1.c1)), CAST(v0.c0 AS REAL), (((vt0.c1, t1.c1))>=((v0.c0, v0.c2)))))>((CASE WHEN t1.c2 THEN t1.c2 END, t1.c1, (v0.c0 IN (v0.c2, v0.c0))))) DESC;
SELECT * FROM v0, vt0 NATURAL JOIN t1 WHERE (CASE WHEN CAST(t1.c1 AS TEXT) THEN vt0.c0 WHEN ((((vt0.c1)AND(v0.c1)))AND(t1.c1)) THEN ((vt0.c1)>(v0.c2)) END) ORDER BY CAST((((v0.c2, t1.c0, 0X3ddec49e)) NOT BETWEEN ((v0.c0, v0.c1, vt0.c1)) AND ((vt0.c0, v0.c0, v0.c2))) AS NUMERIC) ASC  NULLS LAST, ((((((((t1.c1)AND(v0.c2)))OR(vt0.c0)))OR(x'')))AND(vt0.c0)) COLLATE NOCASE  NULLS LAST, (CASE 0.18780441133825265  WHEN vt0.c1 THEN v0.c2 END IN ()) LIMIT 2;
SELECT * FROM v0, vt0 NATURAL JOIN t1 WHERE (CASE WHEN CAST(t1.c1 AS TEXT) THEN vt0.c0 WHEN ((((vt0.c1)AND(v0.c1)))AND(t1.c1)) THEN ((vt0.c1)!=(v0.c2)) END) ORDER BY 'u.pY'  NULLS LAST, (((((vt0.c0)LIKE(t1.c1)), CAST(v0.c0 AS REAL), (((vt0.c1, t1.c1))>=((v0.c0, v0.c2)))))>((CASE WHEN t1.c2 THEN t1.c2 END, t1.c1, (v0.c0 IN (v0.c2, v0.c0))))) DESC;
SELECT * FROM v0, vt0 NATURAL JOIN t1 WHERE (CASE WHEN CAST(t1.c1 AS TEXT) THEN vt0.c0 WHEN ((((vt0.c1)AND(v0.c1)))AND(t1.c1)) THEN ((vt0.c1)>(v0.c2)) END) ORDER BY CAST((((v0.c2, t1.c0, 0X3ddec49e)) NOT BETWEEN ((v0.c0, v0.c1, vt0.c1)) AND ((vt0.c0, v0.c0, v0.c2))) AS NUMERIC) ASC  NULLS LAST, ((((((((t1.c1)AND(v0.c2)))OR(vt0.c0)))OR(x'')))AND(vt0.c0)) COLLATE NOCASE  NULLS LAST, (CASE 0.18780441133825265  WHEN vt0.c1 THEN v0.c2 END IN ()) LIMIT 2;
SELECT ALL COUNT(*) FROM t1 WHERE (HEX((+ (t1.c1)))) ORDER BY CAST(t1.c1 AS TEXT) DESC  NULLS LAST, ((((((((((ABS(t1.c0))OR(t1.c2 COLLATE NOCASE)))OR(((t1.c2)IS(t1.c1)))))AND(0.08076528681574169 COLLATE BINARY)))OR(((t1.c2)>(t1.c0)))))OR(TYPEOF(DISTINCT t1.c1)))  NULLS LAST, (((t1.c0, CASE WHEN t1.c0 THEN t1.c2 WHEN 'hA	듢^#0' THEN t1.c1 WHEN t1.c1 THEN t1.c2 END, (((t1.c1))<>((t1.c1)))))==((0.5208842837866051, ((((((t1.c2)OR(t1.c2)))OR(t1.c1)))OR(t1.c2)), ((t1.c1) NOTNULL)))) ASC, ((((t1.c0 IN (t1.c1))))<((((t1.c2)|(t1.c2)))));
SELECT DISTINCT COUNT(*) FROM t1 WHERE (HEX((+ (t1.c1)))) ORDER BY CAST(t1.c1 AS TEXT) DESC  NULLS LAST, ((((((((((ABS(t1.c0))OR(t1.c2 COLLATE NOCASE)))OR(((t1.c2)IS(t1.c1)))))AND(0.08076528681574169 COLLATE BINARY)))OR(((t1.c2)>(t1.c0)))))OR(TYPEOF(DISTINCT t1.c1)))  NULLS LAST, (((t1.c0, CASE WHEN t1.c0 THEN t1.c2 WHEN 'hA	듢^#0' THEN t1.c1 WHEN t1.c1 THEN t1.c2 END, (((t1.c1))!=((t1.c1)))))==((0.5208842837866051, ((((((t1.c2)OR(t1.c2)))OR(t1.c1)))OR(t1.c2)), ((t1.c1) NOTNULL)))) ASC, ((((t1.c0 IN (t1.c1))))<((((t1.c2)|(t1.c2))))) LIMIT 0X0;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(((NULLIF(vt0.c0, ' ￿ *lo0'))AND(NULL))))) LIMIT 0X0;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(((NULLIF(vt0.c0, ' ￿ *lo0'))AND(NULL))))) LIMIT 0X0;
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))>>((vt0.c1 IN (vt0.c0)))));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))>>((vt0.c1 IN (vt0.c0))))) ORDER BY vt0.c0 LIMIT 3 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.2153194581017004 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END  WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) THEN vt0.c1 WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt0.c1 IN (vt0.c0)) END) ORDER BY vt0.c0 LIMIT 0x3;
SELECT ALL MIN(t1.c2) FROM t1 INNER JOIN v0 ON ((t1.c0)||(((t1.c0) NOT BETWEEN (t1.c2) AND (x'8bf3')))) WHERE (CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END COLLATE RTRIM) ORDER BY (((t1.c1)) NOT BETWEEN (((NOT (t1.c2)))) AND (((((((((('-1838227427')OR(v0.c0)))OR(v0.c2)))OR(t1.c2)))AND(0x605938a7)))));
SELECT ALL MIN(t1.c2) FROM t1 INNER JOIN v0 ON ((t1.c0)||(((t1.c0) NOT BETWEEN (t1.c2) AND (x'8bf3')))) WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END COLLATE RTRIM)AND(((((UNLIKELY(v0.c1))AND((((v0.c0, v0.c1)) NOT BETWEEN ((v0.c2, t1.c1)) AND ((t1.c0, v0.c2))))))OR(((v0.c2) NOT BETWEEN (t1.c2) AND (t1.c1))))))) ORDER BY 8.03306022E8 LIMIT 3;
SELECT ALL * FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c1, vt0.c0))OR(vt0.c0))) ORDER BY (((vt0.c0, vt0.c1)) BETWEEN (((vt0.c1 IN ()), (~ (vt0.c0)))) AND ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE (((((NULLIF(DISTINCT vt0.c1, vt0.c0))OR(vt0.c0)))AND((NOT (((vt0.c1)%(vt0.c0))))))) ORDER BY (((vt0.c0, vt0.c1)) BETWEEN (((vt0.c1 IN ()), (~ (vt0.c0)))) AND ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))) LIMIT 0;
SELECT ALL * FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c1, vt0.c0))OR(vt0.c0))) ORDER BY (((vt0.c0, vt0.c1)) BETWEEN (((vt0.c1 IN ()), (~ (vt0.c0)))) AND ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))));
SELECT DISTINCT * FROM vt0 WHERE (((((NULLIF(DISTINCT vt0.c1, vt0.c0))OR(vt0.c0)))AND((NOT (((vt0.c1)%(vt0.c0))))))) ORDER BY (((vt0.c0, vt0.c1)) BETWEEN (((vt0.c1 IN ()), (~ (vt0.c0)))) AND ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END, ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))) LIMIT 0;
SELECT MIN(t1.c0) FROM t1 WHERE ((~ (LIKELY(t1.c2))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((~ (LIKELY(t1.c2))))AND(JULIANDAY(CAST(t1.c0 AS TEXT), (t1.c1 IN (t1.c1)), CAST(t1.c2 AS TEXT))))) ORDER BY 0Xffffffff9e615925 ASC  NULLS FIRST, CAST(UPPER(DISTINCT t1.c1) AS BLOB);
SELECT * FROM vt0, v0 WHERE (((SQLITE_COMPILEOPTION_USED(v0.c1))>>(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY v0.c0 COLLATE BINARY, (0.4403047577460034 IN ());
SELECT DISTINCT * FROM vt0, v0 WHERE (((SQLITE_COMPILEOPTION_USED(v0.c1))>>(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY v0.c0 COLLATE BINARY, (0.4403047577460034 IN ());
SELECT * FROM vt0, v0 WHERE (((SQLITE_COMPILEOPTION_USED(v0.c1))>>(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY v0.c0 COLLATE BINARY, (0.4403047577460034 IN ());
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c2);
SELECT DISTINCT COUNT(*) FROM vt0, v0 WHERE (v0.c2) ORDER BY (((('472236244') BETWEEN (v0.c1) AND (v0.c1)))=(((v0.c0)OR(v0.c2)))) ASC INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, v0 WHERE (load_extension((vt0.c0 IN ()))) ORDER BY (((('472236244') BETWEEN (v0.c1) AND (v0.c1)))=(((v0.c0)OR(v0.c2)))) ASC;
SELECT ALL MIN(v0.c2) FROM v0, vt0 WHERE (LOWER(((v0.c2)<=(vt0.c0)))) ORDER BY CASE ((vt0.c1)*(v0.c0))  WHEN (v0.c1 IN (v0.c2)) THEN HEX(DISTINCT v0.c0) END  NULLS LAST, ((- (v0.c0)) IN (((v0.c1)-(vt0.c1)), ((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT DISTINCT MIN(v0.c2) FROM v0, vt0 WHERE (LOWER(((v0.c2)<=(vt0.c0)))) ORDER BY CASE ((vt0.c1)*(v0.c0))  WHEN (v0.c1 IN (v0.c2)) THEN HEX(DISTINCT v0.c0) END  NULLS LAST, ((- (v0.c0)) IN (((v0.c1)-(vt0.c1)), ((vt0.c0) ISNULL))) ASC  NULLS LAST INTERSECT SELECT DISTINCT MIN(v0.c2) FROM v0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (CASE NULL  WHEN vt0.c1 THEN v0.c2 END) AND ((v0.c0 IN (vt0.c0))))) ORDER BY CASE ((vt0.c1)*(v0.c0))  WHEN (v0.c1 IN (v0.c2)) THEN HEX(DISTINCT v0.c0) END  NULLS LAST, ((- (v0.c0)) IN (((v0.c1)-(vt0.c1)), ((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT ALL * FROM t1 INNER JOIN v0 ON ((- (v0.c2)) IN (((t1.c1) NOT BETWEEN (t1.c1) AND (v0.c1)))) NATURAL JOIN vt0 WHERE (((((v0.c0) IS FALSE)) NOTNULL)) ORDER BY (((v0.c1, vt0.c0, '', t1.c0)) BETWEEN (((NOT (x'fa')), ((v0.c1)<(vt0.c0)), (((t1.c0, t1.c2)) BETWEEN ((v0.c0, t1.c0)) AND ((v0.c1, t1.c1))), 0.26614730129261777)) AND ((CAST(t1.c1 AS REAL), t1.c1, ((v0.c0)>=(t1.c1)), (+ (t1.c2))))) ASC;
SELECT ALL * FROM t1 INNER JOIN v0 ON ((- (v0.c2)) IN (((t1.c1) NOT BETWEEN (t1.c1) AND (v0.c1)))) NATURAL JOIN vt0 WHERE (((((v0.c0) IS FALSE)) NOTNULL)) ORDER BY (((v0.c1, vt0.c0, '', t1.c0)) BETWEEN (((NOT (x'fa')), ((v0.c1)<(vt0.c0)), (((t1.c0, t1.c2)) BETWEEN ((v0.c0, t1.c0)) AND ((v0.c1, t1.c1))), 0.26614730129261777)) AND ((CAST(t1.c1 AS REAL), t1.c1, ((v0.c0)>=(t1.c1)), (+ (t1.c2))))) ASC LIMIT 0;
SELECT ALL * FROM t1 INNER JOIN v0 ON ((- (v0.c2)) IN (((t1.c1) NOT BETWEEN (t1.c1) AND (v0.c1)))) NATURAL JOIN vt0 WHERE (((((v0.c0) IS FALSE)) NOTNULL)) ORDER BY (((v0.c1, vt0.c0, '', t1.c0)) BETWEEN (((NOT (x'fa')), ((v0.c1)<(vt0.c0)), (((t1.c0, t1.c2)) BETWEEN ((v0.c0, t1.c0)) AND ((v0.c1, t1.c1))), 0.26614730129261777)) AND ((CAST(t1.c1 AS REAL), t1.c1, ((v0.c0)>=(t1.c1)), (+ (t1.c2))))) ASC;
SELECT ALL * FROM t1 INNER JOIN v0 ON ((- (v0.c2)) IN (((t1.c1) NOT BETWEEN (t1.c1) AND (v0.c1)))) NATURAL JOIN vt0 WHERE (((((v0.c0) IS FALSE)) NOTNULL)) ORDER BY (((v0.c1, vt0.c0, '', t1.c0)) BETWEEN (((NOT (x'fa')), ((v0.c1)<(vt0.c0)), (((t1.c0, t1.c2)) BETWEEN ((v0.c0, t1.c0)) AND ((v0.c1, t1.c1))), 0.26614730129261777)) AND ((CAST(t1.c1 AS REAL), t1.c1, ((v0.c0)>=(t1.c1)), (+ (t1.c2))))) ASC LIMIT 0;
SELECT COUNT(*) FROM v0, vt0 WHERE ((CAST(v0.c1 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((CAST(v0.c1 AS NUMERIC) IN ()))AND(NULL))) LIMIT 0 INTERSECT SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c1, v0.c1, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((v0.c2, vt0.c1, vt0.c1))) IN ())) LIMIT 0X0;
SELECT MIN(v0.c1) FROM vt0, t1, v0 WHERE ((((((('1891954482')AND(t1.c1)))OR(CAST(NULL AS NUMERIC))))OR(((v0.c0) IS TRUE))));
SELECT DISTINCT MIN(v0.c1) FROM vt0, t1, v0 WHERE ((((((('1891954482')AND(t1.c1)))OR(CAST(NULL AS NUMERIC))))OR(((v0.c0) IS TRUE)))) LIMIT 2 INTERSECT SELECT DISTINCT MIN(v0.c1) FROM vt0, t1, v0 WHERE (0.02714705330619338) LIMIT 0X2;
SELECT MIN(t1.c0) FROM t1 NATURAL JOIN vt0 WHERE ((((vt0.c1, x'a3da35', t1.c0)) BETWEEN ((((t1.c0)LIKE(vt0.c0)), t1.c1, TRIM(t1.c1))) AND ((((NULL) BETWEEN (t1.c0) AND (t1.c0)), (NOT (t1.c1)), ((t1.c0)GLOB(vt0.c0))))));
SELECT DISTINCT MIN(t1.c0) FROM t1 NATURAL JOIN vt0 WHERE ((((vt0.c1, x'a3da35', t1.c0)) BETWEEN ((((t1.c0)LIKE(vt0.c0)), t1.c1, TRIM(t1.c1))) AND ((((NULL) BETWEEN (t1.c0) AND (t1.c0)), (NOT (t1.c1)), ((t1.c0)GLOB(vt0.c0)))))) LIMIT 1;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((MIN(vt0.c0, v0.c0))OR(((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)))))OR(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END)))AND(((v0.c2)&(v0.c2)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((MIN(vt0.c0, v0.c0))OR(((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)))))OR(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END)))AND(((v0.c2)&(v0.c2))))) ORDER BY ((((vt0.c1) NOTNULL))<=(v0.c0 COLLATE BINARY)) ASC  NULLS LAST LIMIT 3;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((x'') NOTNULL) WHERE (((vt0.c1 COLLATE BINARY)/(LIKELY(v0.c2)))) ORDER BY 0X5bc0826c, (CASE WHEN vt0.c0 THEN v0.c0 END IN ()) ASC, ((((v0.c0) IS FALSE)) NOT NULL);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((x'') NOTNULL) WHERE (((((vt0.c1 COLLATE BINARY)/(LIKELY(v0.c2))))AND(CAST(((vt0.c0)IS(vt0.c1)) AS NUMERIC)))) ORDER BY '780304859' COLLATE NOCASE DESC;
SELECT ALL * FROM t1, v0 CROSS JOIN vt0 ON ((((((((t1.c1)OR(x'549b7e')))OR('0D*ỽWy')))AND(t1.c1))) IS TRUE) WHERE (TYPEOF(vt0.c1));
SELECT * FROM t1, v0 CROSS JOIN vt0 ON ((((((((t1.c1)OR(x'549b7e')))OR('0D*ỽWy')))AND(t1.c1))) IS TRUE) WHERE (((TYPEOF(vt0.c1))AND(CAST((~ (t1.c1)) AS INTEGER))));
SELECT ALL * FROM t1, v0 CROSS JOIN vt0 ON ((((((((t1.c1)OR(x'549b7e')))OR('0D*ỽWy')))AND(t1.c1))) IS TRUE) WHERE (TYPEOF(vt0.c1));
SELECT * FROM t1, v0 CROSS JOIN vt0 ON ((((((((t1.c1)OR(x'549b7e')))OR('0D*ỽWy')))AND(t1.c1))) IS TRUE) WHERE (((TYPEOF(vt0.c1))AND(CAST((~ (t1.c1)) AS INTEGER))));
SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1, vt0.c0))) COLLATE NOCASE) ORDER BY ((json_array_length(vt0.c1)) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1, vt0.c0))) COLLATE NOCASE)AND(CAST(((vt0.c1) NOT NULL) AS NUMERIC)))) ORDER BY (((~ (1.661887489E9))) IS TRUE) ASC INTERSECT SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c1))>=((vt0.c1))) THEN ((((NULL)OR(vt0.c1)))AND(vt0.c0)) WHEN (~ (vt0.c1)) THEN vt0.c1 WHEN vt0.c0 COLLATE BINARY THEN (vt0.c1 IN (vt0.c1)) WHEN vt0.c0 COLLATE RTRIM THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(vt0.c0 AS TEXT) END) ORDER BY (((~ (1.661887489E9))) IS TRUE) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1, vt0.c0))) COLLATE NOCASE) ORDER BY ((json_array_length(vt0.c1)) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1, vt0.c0))) COLLATE NOCASE)AND(CAST(((vt0.c1) NOT NULL) AS NUMERIC)))) ORDER BY (((~ (1.661887489E9))) IS TRUE) ASC INTERSECT SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c1))>=((vt0.c1))) THEN ((((NULL)OR(vt0.c1)))AND(vt0.c0)) WHEN (~ (vt0.c1)) THEN vt0.c1 WHEN vt0.c0 COLLATE BINARY THEN (vt0.c1 IN (vt0.c1)) WHEN vt0.c0 COLLATE RTRIM THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(vt0.c0 AS TEXT) END) ORDER BY (((~ (1.661887489E9))) IS TRUE) ASC;
SELECT * FROM v0, t1 WHERE (CAST(((t1.c0)<=(t1.c0)) AS TEXT)) ORDER BY (((CAST(v0.c1 AS NUMERIC)))>((((v0.c2)>=(v0.c0)))))  NULLS FIRST, t1.c1;
SELECT ALL * FROM v0, t1 WHERE (((CAST(((t1.c0)<(t1.c0)) AS TEXT))AND(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ((((v0.c2, v0.c2, t1.c0, t1.c2))<((t1.c2, v0.c2, t1.c1, t1.c0)))))))) ORDER BY ((((((((((((x'0b')AND(v0.c2)))OR(t1.c2)))AND(x'22a029a1')))AND(CASE t1.c2  WHEN v0.c1 THEN NULL ELSE v0.c0 END)))OR(LIKELIHOOD(DISTINCT '+', v0.c1))))OR(((t1.c1)<(t1.c0))))  NULLS FIRST, v0.c0 DESC  NULLS FIRST INTERSECT SELECT ALL * FROM v0, t1 WHERE (((t1.c1) NOTNULL) COLLATE BINARY) ORDER BY ((((((((((((x'0b')AND(v0.c2)))OR(t1.c2)))AND(x'22a029a1')))AND(CASE t1.c2  WHEN v0.c1 THEN NULL ELSE v0.c0 END)))OR(LIKELIHOOD(DISTINCT '+', v0.c1))))OR(((t1.c1)<(t1.c0))))  NULLS FIRST, v0.c0 DESC  NULLS FIRST;
SELECT * FROM v0, t1 WHERE (CAST(((t1.c0)<=(t1.c0)) AS TEXT)) ORDER BY (((CAST(v0.c1 AS NUMERIC)))>((((v0.c2)>=(v0.c0)))))  NULLS FIRST, t1.c1;
SELECT ALL * FROM v0, t1 WHERE (((CAST(((t1.c0)<(t1.c0)) AS TEXT))AND(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ((((v0.c2, v0.c2, t1.c0, t1.c2))<((t1.c2, v0.c2, t1.c1, t1.c0)))))))) ORDER BY ((((((((((((x'0b')AND(v0.c2)))OR(t1.c2)))AND(x'22a029a1')))AND(CASE t1.c2  WHEN v0.c1 THEN NULL ELSE v0.c0 END)))OR(LIKELIHOOD(DISTINCT '+', v0.c1))))OR(((t1.c1)<(t1.c0))))  NULLS FIRST, v0.c0 DESC  NULLS FIRST INTERSECT SELECT ALL * FROM v0, t1 WHERE (((t1.c1) NOTNULL) COLLATE BINARY) ORDER BY ((((((((((((x'0b')AND(v0.c2)))OR(t1.c2)))AND(x'22a029a1')))AND(CASE t1.c2  WHEN v0.c1 THEN NULL ELSE v0.c0 END)))OR(LIKELIHOOD(DISTINCT '+', v0.c1))))OR(((t1.c1)<(t1.c0))))  NULLS FIRST, v0.c0 DESC  NULLS FIRST;
SELECT ALL MAX(v0.c0) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (0.984446494578251) AND (CASE WHEN v0.c0 THEN v0.c2 ELSE 0.3109793254655423 END))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))/((((((('NWY嗺''qr')AND(v0.c0)))AND(v0.c1)))OR(v0.c1)))), (~ ((v0.c2 IN ())));
SELECT MAX(v0.c0) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (0.984446494578251) AND (CASE WHEN v0.c0 THEN v0.c2 ELSE 0.3109793254655423 END))) ORDER BY ((((((((v0.c1)OR(0.6831539244855179)))OR(v0.c1)))OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM ASC, ((CAST(v0.c0 AS REAL))+(CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST INTERSECT SELECT MAX(v0.c0) FROM v0 WHERE (NULL) ORDER BY ((((((((v0.c1)OR(0.6831539244855179)))OR(v0.c1)))OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM ASC, ((CAST(v0.c0 AS REAL))+(CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT ALL MIN(vt0.c1) FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((vt0.c0) IS TRUE) IN ())  NULLS LAST;
SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (((((CAST(vt0.c1 AS TEXT))==(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((((vt0.c0)GLOB(vt0.c0)), CAST(vt0.c1 AS INTEGER), ((vt0.c1)*(NULL)), vt0.c0))<=((NULL, vt0.c1 COLLATE RTRIM, vt0.c0 COLLATE NOCASE, (vt0.c0 IN (vt0.c1)))))))) ORDER BY (NOT ((NOT (vt0.c0)))), vt0.c0 ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT MIN(vt0.c1) FROM vt0 WHERE (x'eb7f') ORDER BY (NOT ((NOT (vt0.c0)))), vt0.c0 ASC  NULLS LAST LIMIT 0X0;
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((((((((vt0.c0)AND(((v0.c2)GLOB(v0.c1)))))OR(((vt0.c0) NOTNULL))))AND(GLOB(v0.c0, t1.c2))))AND(((((vt0.c1)AND(vt0.c0)))OR(t1.c0)))));
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((((((((((vt0.c0)AND(((v0.c2)GLOB(v0.c1)))))OR(((vt0.c0) NOTNULL))))AND(GLOB(v0.c0, t1.c2))))AND(((((vt0.c1)AND(vt0.c0)))OR(t1.c0)))))AND(((((((t1.c2 COLLATE BINARY)AND(x'be73' COLLATE BINARY)))OR(t1.c1)))AND((t1.c1 IN (0.9624229847790448))))))) ORDER BY CAST((((t1.c2, v0.c2))>((v0.c2, vt0.c0))) AS NUMERIC) DESC, ((((t1.c2) IS TRUE))|(((v0.c0) BETWEEN (v0.c1) AND (v0.c2)))) DESC, (((((vt0.c0, v0.c0, v0.c2, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, v0.c1, t1.c0)) AND ((t1.c0, t1.c2, 'fwC', t1.c0)))) NOT BETWEEN (CASE WHEN vt0.c0 THEN v0.c2 WHEN v0.c2 THEN t1.c2 END) AND (((vt0.c0)&(t1.c2)))) ASC LIMIT 0X3;
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((((((((vt0.c0)AND(((v0.c2)GLOB(v0.c1)))))OR(((vt0.c0) NOTNULL))))AND(GLOB(v0.c0, t1.c2))))AND(((((vt0.c1)AND(vt0.c0)))OR(t1.c0)))));
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((((((((((vt0.c0)AND(((v0.c2)GLOB(v0.c1)))))OR(((vt0.c0) NOTNULL))))AND(GLOB(v0.c0, t1.c2))))AND(((((vt0.c1)AND(vt0.c0)))OR(t1.c0)))))AND(((((((t1.c2 COLLATE BINARY)AND(x'be73' COLLATE BINARY)))OR(t1.c1)))AND((t1.c1 IN (0.9624229847790448))))))) ORDER BY CAST((((t1.c2, v0.c2))>((v0.c2, vt0.c0))) AS NUMERIC) DESC, ((((t1.c2) IS TRUE))|(((v0.c0) BETWEEN (v0.c1) AND (v0.c2)))) DESC, (((((vt0.c0, v0.c0, v0.c2, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, v0.c1, t1.c0)) AND ((t1.c0, t1.c2, 'fwC', t1.c0)))) NOT BETWEEN (CASE WHEN vt0.c0 THEN v0.c2 WHEN v0.c2 THEN t1.c2 END) AND (((vt0.c0)&(t1.c2)))) ASC LIMIT 0X3;
SELECT COUNT(*) FROM t1, v0 WHERE ((~ ((((('*oc!(!藸')AND(t1.c1)))OR(t1.c1)))));
SELECT ALL COUNT(*) FROM t1, v0 WHERE ((((~ ((((('*oc!(!藸')AND(t1.c1)))OR(t1.c1)))))AND(((((((((x'22')/(v0.c2)))AND(CASE v0.c2  WHEN t1.c0 THEN t1.c1 END)))AND(((v0.c2)IS(t1.c2)))))AND((((x'')) BETWEEN ((t1.c1)) AND ((v0.c1)))))))) ORDER BY rtreenode((((v0.c0, -390202209, t1.c0))>((t1.c2, v0.c2, v0.c0))), v0.c2 COLLATE RTRIM)  NULLS FIRST, ((((((((((t1.c1) IS FALSE))OR(v0.c1 COLLATE RTRIM)))AND(UNLIKELY(v0.c2))))OR(t1.c2 COLLATE RTRIM)))OR(CASE t1.c2  WHEN t1.c1 THEN v0.c0 WHEN t1.c0 THEN t1.c0 WHEN v0.c2 THEN t1.c0 END))  NULLS FIRST LIMIT 0 INTERSECT SELECT COUNT(*) FROM t1, v0 WHERE ((((v0.c2, v0.c1, v0.c0, v0.c0)) BETWEEN ((((t1.c1)*(v0.c0)), t1.c2, ((((((v0.c0)AND(v0.c1)))AND(t1.c1)))AND(t1.c0)), ((((((((((((v0.c1)OR(t1.c0)))OR(v0.c0)))OR(v0.c1)))AND(t1.c2)))AND(t1.c2)))AND(t1.c1)))) AND ((((t1.c0)|(-2120366443)), ((((((((((v0.c1)AND(v0.c1)))OR('|n[F')))OR(v0.c1)))OR(t1.c1)))OR(t1.c2)), ((v0.c2) NOT NULL), ((t1.c0) NOT NULL))))) ORDER BY rtreenode((((v0.c0, -390202209, t1.c0))>((t1.c2, v0.c2, v0.c0))), v0.c2 COLLATE RTRIM)  NULLS FIRST, ((((((((((t1.c1) IS FALSE))OR(v0.c1 COLLATE RTRIM)))AND(UNLIKELY(v0.c2))))OR(t1.c2 COLLATE RTRIM)))OR(CASE t1.c2  WHEN t1.c1 THEN v0.c0 WHEN t1.c0 THEN t1.c0 WHEN v0.c2 THEN t1.c0 END))  NULLS FIRST LIMIT 0;
SELECT ALL MAX(vt0.c0) FROM vt0, t1 WHERE (CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)) THEN (((t1.c0, vt0.c0)) NOT BETWEEN ((t1.c2, vt0.c1)) AND ((x'', t1.c2))) WHEN CAST(vt0.c0 AS BLOB) THEN 6.7093693E7 ELSE t1.c2 END);
SELECT DISTINCT MAX(vt0.c0) FROM vt0, t1 WHERE (((CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)) THEN (((t1.c0, vt0.c0)) NOT BETWEEN ((t1.c2, vt0.c1)) AND ((x'', t1.c2))) WHEN CAST(vt0.c0 AS BLOB) THEN 6.7093693E7 ELSE t1.c2 END)AND(((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c0 END) IS FALSE)))) ORDER BY ((t1.c2 COLLATE RTRIM) NOTNULL) INTERSECT SELECT DISTINCT MAX(vt0.c0) FROM vt0, t1 WHERE ((((vt0.c1 IN (t1.c1)))||(vt0.c1))) ORDER BY ((t1.c2 COLLATE RTRIM) NOTNULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN t1 ON '8/맶' WHERE ((TYPEOF(t1.c0) IN ((((t1.c2, v0.c0, t1.c0, t1.c1))<>((v0.c1, v0.c1, v0.c2, t1.c2))), (((t1.c0, v0.c2, t1.c1))=((v0.c1, v0.c2, t1.c0))))));
SELECT ALL * FROM v0 LEFT OUTER JOIN t1 ON '8/맶' WHERE ((((TYPEOF(t1.c0) IN ((((t1.c2, v0.c0, t1.c0, t1.c1))<>((v0.c1, v0.c1, v0.c2, t1.c2))), (((t1.c0, v0.c2, t1.c1))==((v0.c1, v0.c2, t1.c0))))))AND(((((((v0.c2)AND(v0.c2)))AND(t1.c1)))<>(t1.c1))))) ORDER BY json_extract(((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)), v0.c1 COLLATE RTRIM)  NULLS LAST, (NOT (COALESCE(v0.c1, t1.c2)))  NULLS FIRST, CAST(CASE 0.43164489535419015  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE t1.c1 END AS INTEGER)  NULLS FIRST, CASE (((v0.c0, v0.c2, t1.c0, v0.c2)) BETWEEN ((v0.c0, t1.c1, t1.c1, '5HZ(G')) AND ((t1.c1, v0.c0, v0.c1, 0xffffffff86f1ab24)))  WHEN ((t1.c0) NOT NULL) THEN ((x'29') ISNULL) WHEN (((t1.c1))>=((t1.c1))) THEN v0.c1 COLLATE NOCASE ELSE 5.101784598664505E-4 END  NULLS LAST INTERSECT SELECT * FROM v0 LEFT OUTER JOIN t1 ON '8/맶' WHERE (((('''9?pb*)E', ((t1.c2) NOTNULL), ((((((((v0.c1)AND(t1.c1)))OR(v0.c1)))AND(v0.c0)))AND(t1.c1))))<=((CASE v0.c1  WHEN t1.c1 THEN t1.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN '-1015592478' WHEN t1.c0 THEN v0.c0 WHEN t1.c1 THEN t1.c1 END, (~ (v0.c1)), CAST(v0.c2 AS INTEGER))))) ORDER BY json_extract(((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)), v0.c1 COLLATE RTRIM)  NULLS LAST, (NOT (COALESCE(v0.c1, t1.c2)))  NULLS FIRST, CAST(CASE 0.43164489535419015  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE t1.c1 END AS INTEGER)  NULLS FIRST, CASE (((v0.c0, v0.c2, t1.c0, v0.c2)) BETWEEN ((v0.c0, t1.c1, t1.c1, '5HZ(G')) AND ((t1.c1, v0.c0, v0.c1, 0xffffffff86f1ab24)))  WHEN ((t1.c0) NOT NULL) THEN ((x'29') ISNULL) WHEN (((t1.c1))>=((t1.c1))) THEN v0.c1 COLLATE NOCASE ELSE 5.101784598664505E-4 END  NULLS LAST;
SELECT ALL * FROM v0 LEFT OUTER JOIN t1 ON '8/맶' WHERE ((TYPEOF(t1.c0) IN ((((t1.c2, v0.c0, t1.c0, t1.c1))<>((v0.c1, v0.c1, v0.c2, t1.c2))), (((t1.c0, v0.c2, t1.c1))=((v0.c1, v0.c2, t1.c0))))));
SELECT ALL * FROM v0 LEFT OUTER JOIN t1 ON '8/맶' WHERE ((((TYPEOF(t1.c0) IN ((((t1.c2, v0.c0, t1.c0, t1.c1))<>((v0.c1, v0.c1, v0.c2, t1.c2))), (((t1.c0, v0.c2, t1.c1))==((v0.c1, v0.c2, t1.c0))))))AND(((((((v0.c2)AND(v0.c2)))AND(t1.c1)))<>(t1.c1))))) ORDER BY json_extract(((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)), v0.c1 COLLATE RTRIM)  NULLS LAST, (NOT (COALESCE(v0.c1, t1.c2)))  NULLS FIRST, CAST(CASE 0.43164489535419015  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE t1.c1 END AS INTEGER)  NULLS FIRST, CASE (((v0.c0, v0.c2, t1.c0, v0.c2)) BETWEEN ((v0.c0, t1.c1, t1.c1, '5HZ(G')) AND ((t1.c1, v0.c0, v0.c1, 0xffffffff86f1ab24)))  WHEN ((t1.c0) NOT NULL) THEN ((x'29') ISNULL) WHEN (((t1.c1))>=((t1.c1))) THEN v0.c1 COLLATE NOCASE ELSE 5.101784598664505E-4 END  NULLS LAST INTERSECT SELECT * FROM v0 LEFT OUTER JOIN t1 ON '8/맶' WHERE (((('''9?pb*)E', ((t1.c2) NOTNULL), ((((((((v0.c1)AND(t1.c1)))OR(v0.c1)))AND(v0.c0)))AND(t1.c1))))<=((CASE v0.c1  WHEN t1.c1 THEN t1.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN '-1015592478' WHEN t1.c0 THEN v0.c0 WHEN t1.c1 THEN t1.c1 END, (~ (v0.c1)), CAST(v0.c2 AS INTEGER))))) ORDER BY json_extract(((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c1)), v0.c1 COLLATE RTRIM)  NULLS LAST, (NOT (COALESCE(v0.c1, t1.c2)))  NULLS FIRST, CAST(CASE 0.43164489535419015  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE t1.c1 END AS INTEGER)  NULLS FIRST, CASE (((v0.c0, v0.c2, t1.c0, v0.c2)) BETWEEN ((v0.c0, t1.c1, t1.c1, '5HZ(G')) AND ((t1.c1, v0.c0, v0.c1, 0xffffffff86f1ab24)))  WHEN ((t1.c0) NOT NULL) THEN ((x'29') ISNULL) WHEN (((t1.c1))>=((t1.c1))) THEN v0.c1 COLLATE NOCASE ELSE 5.101784598664505E-4 END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOTNULL))||(NULLIF(vt0.c1, 'gvhu9o	3')))) ORDER BY (SQLITE_SOURCE_ID() IN (vt0.c0))  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOTNULL))||(NULLIF(vt0.c1, 'gvhu9o	3'))))AND((((vt0.c1 IN ()))<<(NULLIF(DISTINCT NULL, vt0.c1)))))) ORDER BY (SQLITE_SOURCE_ID() IN (vt0.c0))  NULLS LAST;
SELECT * FROM v0 WHERE ((~ (((((x'20')AND(v0.c1)))OR(v0.c0)))));
SELECT * FROM v0 WHERE ((((~ (((((x'20')AND(v0.c1)))OR(v0.c0)))))AND((((((v0.c1) BETWEEN (0X4798e9d4) AND (v0.c0)), ((v0.c2)/(v0.c1)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c1))))<((((v0.c0)*(v0.c1)), v0.c2 COLLATE BINARY, (v0.c0 IN ())))))));
SELECT * FROM v0 WHERE ((~ (((((x'20')AND(v0.c1)))OR(v0.c0)))));
SELECT * FROM v0 WHERE ((((~ (((((x'20')AND(v0.c1)))OR(v0.c0)))))AND((((((v0.c1) BETWEEN (0X4798e9d4) AND (v0.c0)), ((v0.c2)/(v0.c1)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c1))))<((((v0.c0)*(v0.c1)), v0.c2 COLLATE BINARY, (v0.c0 IN ())))))));
SELECT ALL * FROM vt0, v0 WHERE (CAST(UNLIKELY(DISTINCT v0.c1) AS NUMERIC));
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(UNLIKELY(DISTINCT v0.c1) AS NUMERIC));
SELECT ALL * FROM vt0, v0 WHERE (CAST(UNLIKELY(DISTINCT v0.c1) AS NUMERIC));
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(UNLIKELY(DISTINCT v0.c1) AS NUMERIC));
SELECT * FROM t1, vt0, v0 WHERE (((((((t1.c1)OR(t1.c2)))AND(v0.c2)))<((t1.c0 IN ())))) ORDER BY (((v0.c1, t1.c0, t1.c1)) BETWEEN ((CASE WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN t1.c2 WHEN t1.c1 THEN v0.c2 END, CAST(v0.c2 AS TEXT), ('_L' IN (t1.c1, vt0.c0)))) AND ((CAST(v0.c0 AS INTEGER), ((t1.c0) ISNULL), x'a7'))) ASC  NULLS FIRST, NULL ASC;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((((t1.c1)OR(t1.c2)))AND(v0.c2)))<((t1.c0 IN ())))) ORDER BY NULL, (vt0.c1 IN ()) ASC  NULLS FIRST;
SELECT * FROM t1, vt0, v0 WHERE (((((((t1.c1)OR(t1.c2)))AND(v0.c2)))<((t1.c0 IN ())))) ORDER BY (((v0.c1, t1.c0, t1.c1)) BETWEEN ((CASE WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN t1.c2 WHEN t1.c1 THEN v0.c2 END, CAST(v0.c2 AS TEXT), ('_L' IN (t1.c1, vt0.c0)))) AND ((CAST(v0.c0 AS INTEGER), ((t1.c0) ISNULL), x'a7'))) ASC  NULLS FIRST, NULL ASC;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((((t1.c1)OR(t1.c2)))AND(v0.c2)))<((t1.c0 IN ())))) ORDER BY NULL, (vt0.c1 IN ()) ASC  NULLS FIRST;
SELECT ALL MIN(v0.c2) FROM t1 NOT INDEXED, vt0, v0 WHERE (((((((((((((((((((t1.c2)OR(vt0.c0)))OR(t1.c2)))OR(vt0.c1 COLLATE BINARY)))AND((NOT (vt0.c1)))))OR((((t1.c0, v0.c1, t1.c2, vt0.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0, vt0.c0)) AND ((vt0.c0, t1.c0, t1.c1, v0.c0))))))AND(t1.c0)))OR(v0.c1 COLLATE BINARY)))OR(((v0.c1)LIKE(t1.c1)))))AND(((v0.c2)=(v0.c1)))));
SELECT MIN(v0.c2) FROM t1, vt0, v0 WHERE (((((((((((((((((((((t1.c2)OR(vt0.c0)))OR(t1.c2)))OR(vt0.c1 COLLATE BINARY)))AND((NOT (vt0.c1)))))OR((((t1.c0, v0.c1, t1.c2, vt0.c1)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0, vt0.c0)) AND ((vt0.c0, t1.c0, t1.c1, v0.c0))))))AND(t1.c0)))OR(v0.c1 COLLATE BINARY)))OR(((v0.c1)LIKE(t1.c1)))))AND(((v0.c2)==(v0.c1)))))AND(1487788544))) INTERSECT SELECT ALL MIN(v0.c2) FROM t1, vt0, v0 WHERE (COALESCE(DISTINCT CASE WHEN t1.c1 THEN vt0.c1 WHEN t1.c1 THEN v0.c2 ELSE t1.c0 END, t1.c1 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 CROSS JOIN v0 ON (((+ (vt0.c1)))>((((t1.c1, 0.021225709187420394))<((v0.c1, vt0.c1))))) WHERE ((+ (t1.c0 COLLATE RTRIM)));
SELECT DISTINCT COUNT(*) FROM vt0 NATURAL JOIN t1 CROSS JOIN v0 ON (((+ (vt0.c1)))>((((t1.c1, 0.021225709187420394))<((v0.c1, vt0.c1))))) WHERE ((+ (t1.c0 COLLATE RTRIM))) LIMIT 0X3;
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (v0.c2) AND (((((v0.c0)AND(v0.c0)))AND(v0.c1)))));
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (v0.c2) AND (((((v0.c0)AND(v0.c0)))AND(v0.c1)))));
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (v0.c2) AND (((((v0.c0)AND(v0.c0)))AND(v0.c1)))));
SELECT * FROM t1, v0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (v0.c2) AND (((((v0.c0)AND(v0.c0)))AND(v0.c1)))));
SELECT ALL MIN(t1.c1) FROM v0, t1 WHERE ((((v0.c0, '-275731388', t1.c0)) NOT BETWEEN ((((v0.c1) NOT BETWEEN (t1.c1) AND (v0.c2)), ((t1.c0)&(t1.c2)), ((t1.c2) IS TRUE))) AND (((((v0.c2, '0.12660962818335064'))<=((t1.c2, v0.c2))), ((v0.c1)<>(v0.c1)), ((t1.c0)<=(v0.c1)))))) ORDER BY ((((((v0.c2, t1.c1, v0.c1)) NOT BETWEEN ((t1.c2, v0.c1, x'')) AND ((v0.c0, v0.c1, t1.c0))), CAST(v0.c2 AS BLOB), ((t1.c2) BETWEEN (t1.c2) AND (v0.c1))))=((((v0.c0) BETWEEN (t1.c2) AND (t1.c0)), (NOT (v0.c2)), t1.c2 COLLATE BINARY)));
SELECT DISTINCT MIN(t1.c1) FROM v0, t1 WHERE ((((((v0.c0, '-275731388', t1.c0)) NOT BETWEEN ((((v0.c1) NOT BETWEEN (t1.c1) AND (v0.c2)), ((t1.c0)&(t1.c2)), ((t1.c2) IS TRUE))) AND (((((v0.c2, '0.12660962818335064'))<=((t1.c2, v0.c2))), ((v0.c1)<>(v0.c1)), ((t1.c0)<=(v0.c1))))))AND((NOT ('-1399201276'))))) ORDER BY (((((((((((((((t1.c2)AND(v0.c1)))AND(t1.c2)))OR(v0.c2)))AND(t1.c0)))OR(v0.c2)))OR(NULL)), ((v0.c0) NOT BETWEEN ('115292246') AND (v0.c2))))>=(((NOT (t1.c2)), CAST(v0.c1 AS INTEGER)))) DESC, ((((((((t1.c1)OR(v0.c1)))OR(v0.c0)))OR(0xffffffff96cf26b1)))||(((v0.c2)<=(v0.c0)))) DESC  NULLS LAST, (((+ (v0.c0))) BETWEEN (x'') AND ((v0.c0 IN (0.1429405077443714)))) LIMIT 0X1 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM v0, t1 WHERE ((((- (v0.c0))) ISNULL)) ORDER BY (((((((((((((((t1.c2)AND(v0.c1)))AND(t1.c2)))OR(v0.c2)))AND(t1.c0)))OR(v0.c2)))OR(NULL)), ((v0.c0) NOT BETWEEN ('115292246') AND (v0.c2))))>=(((NOT (t1.c2)), CAST(v0.c1 AS INTEGER)))) DESC, ((((((((t1.c1)OR(v0.c1)))OR(v0.c0)))OR(0Xffffffff96cf26b1)))||(((v0.c2)<=(v0.c0)))) DESC  NULLS LAST, (((+ (v0.c0))) BETWEEN (x'') AND ((v0.c0 IN (0.1429405077443714)))) LIMIT 1;
SELECT * FROM vt0 NATURAL JOIN v0 NATURAL JOIN t1 WHERE (CASE (v0.c1 IN ())  WHEN ((v0.c2) BETWEEN (vt0.c1) AND (t1.c2)) THEN (t1.c2 IN ('uD5v^87%2')) ELSE ((t1.c1) ISNULL) END);
SELECT ALL * FROM vt0 NATURAL JOIN v0 NATURAL JOIN t1 WHERE (CASE (v0.c1 IN ())  WHEN ((v0.c2) BETWEEN (vt0.c1) AND (t1.c2)) THEN (t1.c2 IN ('uD5v^87%2')) ELSE ((t1.c1) ISNULL) END) ORDER BY ((((((v0.c0)<(vt0.c0)))AND(json(v0.c0))))AND(0.4638239374258897))  NULLS LAST, CASE NULL  WHEN ((x'')AND(t1.c0)) THEN ((t1.c1)==(v0.c2)) ELSE ((vt0.c1)%(vt0.c0)) END  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN v0 NATURAL JOIN t1 WHERE (CASE (v0.c1 IN ())  WHEN ((v0.c2) BETWEEN (vt0.c1) AND (t1.c2)) THEN (t1.c2 IN ('uD5v^87%2')) ELSE ((t1.c1) ISNULL) END);
SELECT ALL * FROM vt0 NATURAL JOIN v0 NATURAL JOIN t1 WHERE (CASE (v0.c1 IN ())  WHEN ((v0.c2) BETWEEN (vt0.c1) AND (t1.c2)) THEN (t1.c2 IN ('uD5v^87%2')) ELSE ((t1.c1) ISNULL) END) ORDER BY ((((((v0.c0)<(vt0.c0)))AND(json(v0.c0))))AND(0.4638239374258897))  NULLS LAST, CASE NULL  WHEN ((x'')AND(t1.c0)) THEN ((t1.c1)==(v0.c2)) ELSE ((vt0.c1)%(vt0.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (x'bbff') ORDER BY (((+ ('0.23945185986769146'))) NOTNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((x'bbff')AND(CASE ((((((v0.c1)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN CASE v0.c2  WHEN vt0.c1 THEN x'' ELSE v0.c1 END WHEN (((vt0.c1, v0.c1, v0.c1)) BETWEEN ((v0.c0, vt0.c1, v0.c0)) AND ((v0.c2, vt0.c1, vt0.c0))) THEN CAST(v0.c0 AS NUMERIC) ELSE ((v0.c1)>>(v0.c0)) END))) ORDER BY ((((((((-1900287444)AND((~ (v0.c1)))))OR((NOT (v0.c1)))))OR(((vt0.c1) BETWEEN (v0.c2) AND (vt0.c1)))))OR(v0.c0 COLLATE NOCASE))  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (v0.c2) ORDER BY ((((((((0Xffffffff8ebbea2c)AND((~ (v0.c1)))))OR((NOT (v0.c1)))))OR(((vt0.c1) BETWEEN (v0.c2) AND (vt0.c1)))))OR(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM v0 NOT INDEXED WHERE (((((((((((v0.c0)|(v0.c0)))OR(v0.c1 COLLATE NOCASE)))OR(((((v0.c1)AND(v0.c1)))AND(v0.c0)))))AND(v0.c0)))AND(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)|(v0.c0)))OR(v0.c1 COLLATE NOCASE)))OR(((((v0.c1)AND(v0.c1)))AND(v0.c0)))))AND(v0.c0)))AND(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END))) ORDER BY ((((v0.c1) ISNULL)) IS TRUE) LIMIT 0x3 INTERSECT SELECT ALL * FROM v0 WHERE (((((((((v0.c1) NOT BETWEEN ('1226535833') AND (v0.c1)))AND(CAST(v0.c0 AS INTEGER))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c2)))))OR(v0.c0))) ORDER BY ((((v0.c1) ISNULL)) IS TRUE) LIMIT 0X3;
SELECT ALL * FROM v0 NOT INDEXED WHERE (((((((((((v0.c0)|(v0.c0)))OR(v0.c1 COLLATE NOCASE)))OR(((((v0.c1)AND(v0.c1)))AND(v0.c0)))))AND(v0.c0)))AND(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)|(v0.c0)))OR(v0.c1 COLLATE NOCASE)))OR(((((v0.c1)AND(v0.c1)))AND(v0.c0)))))AND(v0.c0)))AND(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END))) ORDER BY ((((v0.c1) ISNULL)) IS TRUE) LIMIT 0x3 INTERSECT SELECT ALL * FROM v0 WHERE (((((((((v0.c1) NOT BETWEEN ('1226535833') AND (v0.c1)))AND(CAST(v0.c0 AS INTEGER))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c2)))))OR(v0.c0))) ORDER BY ((((v0.c1) ISNULL)) IS TRUE) LIMIT 0X3;
SELECT MAX(t1.c2) FROM t1 WHERE ((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c2 ELSE t1.c1 END IN ((+ (t1.c2)), ((((((((((t1.c2)AND(t1.c2)))OR(t1.c1)))AND(t1.c1)))AND(t1.c0)))OR(t1.c1)))));
SELECT MAX(t1.c2) FROM t1 WHERE ((((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c2 ELSE t1.c1 END IN ((+ (t1.c2)))))AND(CAST(t1.c0 AS TEXT) COLLATE BINARY))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c1 ELSE t1.c1 END)IS NOT((t1.c2 IN ())))  NULLS LAST LIMIT 0;
SELECT MAX(t1.c1) FROM v0 INNER JOIN vt0 ON json_array(t1.c2, '67093693', v0.c0) COLLATE NOCASE LEFT OUTER JOIN t1 ON ((((((t1.c1)AND(((((v0.c2)OR(vt0.c0)))AND(t1.c0)))))OR(((t1.c2)>>('-1e500')))))AND(((((t1.c1)AND(v0.c1)))OR(t1.c0)))) WHERE (CASE json(v0.c1)  WHEN ((v0.c0)+(t1.c1)) THEN ((('')) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) END) ORDER BY (((((t1.c1, t1.c0))=((vt0.c0, vt0.c0))))IS(((v0.c1) NOT BETWEEN (t1.c0) AND (t1.c1))));
SELECT ALL MAX(t1.c1) FROM v0 INNER JOIN vt0 ON json_array(t1.c2, '67093693', v0.c0) COLLATE NOCASE INNER JOIN t1 ON ((((((t1.c1)AND(((((v0.c2)OR(vt0.c0)))AND(t1.c0)))))OR(((t1.c2)>>('-1e500')))))AND(((((t1.c1)AND(v0.c1)))OR(t1.c0)))) WHERE (((CASE json(v0.c1)  WHEN ((v0.c0)+(t1.c1)) THEN ((('')) NOT BETWEEN ((t1.c1)) AND ((t1.c0))) END)AND((~ (((NULL)&(vt0.c1))))))) ORDER BY (((((t1.c1, t1.c0))=((vt0.c0, vt0.c0))))IS(((v0.c1) NOT BETWEEN (t1.c0) AND (t1.c1))));
SELECT MIN(v0.c0) FROM v0, vt0 LEFT OUTER JOIN t1 ON ((((((vt0.c0)LIKE(NULL)))AND(((((vt0.c0)AND(t1.c1)))AND(t1.c2)))))OR(((v0.c1) ISNULL))) WHERE (((CAST(t1.c1 AS NUMERIC))AND((((0.9592511651575718, t1.c1, NULL, NULL))>((v0.c0, v0.c0, t1.c1, t1.c1))))));
SELECT DISTINCT MIN(v0.c0) FROM v0, vt0 NOT INDEXED INNER JOIN t1 ON ((((((vt0.c0)LIKE(NULL)))AND(((((vt0.c0)AND(t1.c1)))AND(t1.c2)))))OR(((v0.c1) ISNULL))) WHERE (((CAST(t1.c1 AS NUMERIC))AND((((0.9592511651575718, t1.c1, NULL, NULL))>((v0.c0, v0.c0, t1.c1, t1.c1)))))) ORDER BY IFNULL(v0.c2, t1.c0) COLLATE BINARY  NULLS LAST, ((((vt0.c0)GLOB(vt0.c1)))<(((t1.c0)==(v0.c0)))) ASC INTERSECT SELECT DISTINCT MIN(v0.c0) FROM v0, vt0 INNER JOIN t1 ON ((((((vt0.c0)LIKE(NULL)))AND(((((vt0.c0)AND(t1.c1)))AND(t1.c2)))))OR(((v0.c1) ISNULL))) WHERE ((COALESCE(DISTINCT v0.c0, v0.c0) IN (((v0.c1) BETWEEN (t1.c1) AND (v0.c0))))) ORDER BY IFNULL(v0.c2, t1.c0) COLLATE BINARY  NULLS LAST, ((((vt0.c0)GLOB(vt0.c1)))<(((t1.c0)=(v0.c0)))) ASC;
SELECT ALL * FROM t1, vt0 WHERE ((((((t1.c1, vt0.c1))<=((vt0.c0, t1.c2)))) NOTNULL));
SELECT * FROM t1, vt0 WHERE ((((((t1.c1, vt0.c1))<=((vt0.c0, t1.c2)))) NOTNULL));
SELECT ALL * FROM t1, vt0 WHERE ((((((t1.c1, vt0.c1))<=((vt0.c0, t1.c2)))) NOTNULL));
SELECT * FROM t1, vt0 WHERE ((((((t1.c1, vt0.c1))<=((vt0.c0, t1.c2)))) NOTNULL));
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0) NOT BETWEEN (((v0.c1)=('147691217'))) AND ((((v0.c2, v0.c2))>=((vt0.c0, vt0.c0)))))) ORDER BY (NOT (((((((vt0.c1)AND(vt0.c1)))OR(v0.c1)))OR(vt0.c1))));
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0) NOT BETWEEN (((v0.c1)=('147691217'))) AND ((((v0.c2, v0.c2))>=((vt0.c0, vt0.c0)))))) ORDER BY (((((((((vt0.c0 IN (vt0.c1, x'6d')))AND(v0.c0 COLLATE NOCASE)))AND(v0.c1)))OR(x'')))AND(((vt0.c0)<=(v0.c1))))  NULLS LAST INTERSECT SELECT ALL * FROM vt0, v0 WHERE (vt0.c0) ORDER BY (((((((((vt0.c0 IN (vt0.c1, x'6d')))AND(v0.c0 COLLATE NOCASE)))AND(v0.c1)))OR(x'')))AND(((vt0.c0)<=(v0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0) NOT BETWEEN (((v0.c1)=('147691217'))) AND ((((v0.c2, v0.c2))>=((vt0.c0, vt0.c0)))))) ORDER BY (NOT (((((((vt0.c1)AND(vt0.c1)))OR(v0.c1)))OR(vt0.c1))));
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0) NOT BETWEEN (((v0.c1)=('147691217'))) AND ((((v0.c2, v0.c2))>=((vt0.c0, vt0.c0)))))) ORDER BY (((((((((vt0.c0 IN (vt0.c1, x'6d')))AND(v0.c0 COLLATE NOCASE)))AND(v0.c1)))OR(x'')))AND(((vt0.c0)<=(v0.c1))))  NULLS LAST INTERSECT SELECT ALL * FROM vt0, v0 WHERE (vt0.c0) ORDER BY (((((((((vt0.c0 IN (vt0.c1, x'6d')))AND(v0.c0 COLLATE NOCASE)))AND(v0.c1)))OR(x'')))AND(((vt0.c0)<=(v0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (v0.c0) ORDER BY CAST(t1.c0 AS BLOB) ASC, NULL;
SELECT DISTINCT COUNT(*) FROM vt0, t1, v0 WHERE (((v0.c0)AND(((vt0.c0)IS NOT(((v0.c1)>=(v0.c0))))))) ORDER BY CAST(t1.c0 AS BLOB) ASC, NULL LIMIT 1 INTERSECT SELECT DISTINCT COUNT(*) FROM vt0, t1, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1))) NOTNULL)) ORDER BY CAST(t1.c0 AS BLOB) ASC, NULL LIMIT 0X1;
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (CAST('1178417897' AS NUMERIC));
SELECT DISTINCT COUNT(*) FROM vt0, t1, v0 WHERE (CAST('1178417897' AS NUMERIC)) LIMIT 1;
SELECT * FROM t1 WHERE (CASE ((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c2)))AND(t1.c2))  WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c1) BETWEEN (t1.c0) AND (NULL)) WHEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) THEN (((t1.c1))>=((t1.c2))) ELSE ((((t1.c1)AND(t1.c0)))OR(t1.c2)) END) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE ((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c2)))AND(t1.c2))  WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c1) BETWEEN (t1.c0) AND (NULL)) WHEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) THEN (((t1.c1))>=((t1.c2))) ELSE ((((t1.c1)AND(t1.c0)))OR(t1.c2)) END) ORDER BY (((t1.c2, t1.c1)) BETWEEN (((NOT (t1.c1)), (t1.c2 IN (x'')))) AND ((t1.c2, ((t1.c1)OR(t1.c1))))), ((((t1.c0) NOT NULL))IS(((t1.c1)<('-1341530015')))), ((((t1.c1)%(t1.c1)))%(((t1.c0) IS FALSE)))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((((t1.c1 IN ()), ((t1.c1)&('-1064978200')), (~ (t1.c1)), t1.c1 COLLATE NOCASE))<((t1.c2, json_extract(t1.c0, t1.c2, t1.c1), (NOT (t1.c1)), CASE WHEN t1.c0 THEN t1.c0 END)))) ORDER BY (((t1.c2, t1.c1)) BETWEEN (((NOT (t1.c1)), (t1.c2 IN (x'')))) AND ((t1.c2, ((t1.c1)OR(t1.c1))))), ((((t1.c0) NOT NULL))IS(((t1.c1)<('-1341530015')))), ((((t1.c1)%(t1.c1)))%(((t1.c0) IS FALSE)))  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE ((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c2)))AND(t1.c2))  WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c1) BETWEEN (t1.c0) AND (NULL)) WHEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) THEN (((t1.c1))>=((t1.c2))) ELSE ((((t1.c1)AND(t1.c0)))OR(t1.c2)) END) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE ((((((((t1.c1)OR(t1.c1)))AND(t1.c0)))AND(t1.c2)))AND(t1.c2))  WHEN CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c1) BETWEEN (t1.c0) AND (NULL)) WHEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) THEN (((t1.c1))>=((t1.c2))) ELSE ((((t1.c1)AND(t1.c0)))OR(t1.c2)) END) ORDER BY (((t1.c2, t1.c1)) BETWEEN (((NOT (t1.c1)), (t1.c2 IN (x'')))) AND ((t1.c2, ((t1.c1)OR(t1.c1))))), ((((t1.c0) NOT NULL))IS(((t1.c1)<('-1341530015')))), ((((t1.c1)%(t1.c1)))%(((t1.c0) IS FALSE)))  NULLS FIRST INTERSECT SELECT * FROM t1 WHERE (((((t1.c1 IN ()), ((t1.c1)&('-1064978200')), (~ (t1.c1)), t1.c1 COLLATE NOCASE))<((t1.c2, json_extract(t1.c0, t1.c2, t1.c1), (NOT (t1.c1)), CASE WHEN t1.c0 THEN t1.c0 END)))) ORDER BY (((t1.c2, t1.c1)) BETWEEN (((NOT (t1.c1)), (t1.c2 IN (x'')))) AND ((t1.c2, ((t1.c1)OR(t1.c1))))), ((((t1.c0) NOT NULL))IS(((t1.c1)<('-1341530015')))), ((((t1.c1)%(t1.c1)))%(((t1.c0) IS FALSE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((~ (x'e9681b')) AS TEXT)) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (6.7093693E7)))<=(((vt0.c1)+(vt0.c1)))), (('' COLLATE NOCASE) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((0.64243517443016) NOTNULL)));
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CAST((~ (x'e9681b')) AS TEXT)) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (6.7093693E7)))<=(((vt0.c1)+(vt0.c1)))), (('' COLLATE NOCASE) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((0.64243517443016) NOTNULL))) INTERSECT SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c0))))!=(vt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (6.7093693E7)))<=(((vt0.c1)+(vt0.c1)))), (('' COLLATE NOCASE) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((0.64243517443016) NOTNULL)));
SELECT * FROM t1, vt0 WHERE ((load_extension(vt0.c0) IN ((((vt0.c0, t1.c2, t1.c1))>=((t1.c0, vt0.c0, t1.c1))))));
SELECT ALL * FROM t1, vt0 WHERE ((load_extension(vt0.c0) IN ((((vt0.c0, t1.c2, t1.c1))>((t1.c0, vt0.c0, t1.c1)))))) LIMIT 1 INTERSECT SELECT * FROM t1, vt0 WHERE ('') LIMIT 1;
SELECT * FROM t1, vt0 WHERE ((load_extension(vt0.c0) IN ((((vt0.c0, t1.c2, t1.c1))>=((t1.c0, vt0.c0, t1.c1))))));
SELECT ALL * FROM t1, v0 WHERE (((((((((((((v0.c1)AND(t1.c2)))OR(t1.c2)))OR(v0.c0)))OR(v0.c0)))OR(v0.c1)))>=(((t1.c0) BETWEEN (v0.c2) AND (t1.c2))))) ORDER BY v0.c1  NULLS FIRST, ((((((t1.c2)|(v0.c1)))AND(((v0.c1) IS TRUE))))AND(CASE WHEN v0.c1 THEN 472236244 WHEN 0.835886070760131 THEN t1.c2 WHEN t1.c0 THEN ',fm' WHEN '0.10496673429038905' THEN v0.c2 END))  NULLS LAST;
SELECT ALL * FROM t1, v0 WHERE (((((((((((((((v0.c1)AND(t1.c2)))OR(t1.c2)))OR(v0.c0)))OR(v0.c0)))OR(v0.c1)))>(((t1.c0) BETWEEN (v0.c2) AND (t1.c2)))))AND(x'0486'))) ORDER BY (NOT (json_object(v0.c2, v0.c1, v0.c0, v0.c2, v0.c2))) DESC, (((NULL)>(NULL)) IN ((~ (t1.c0)))), ((((((((((((t1.c2)OR(v0.c1)))OR(t1.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c1))) BETWEEN (v0.c2 COLLATE BINARY) AND (v0.c0)) LIMIT 0x0;
SELECT ALL * FROM t1, v0 WHERE (((((((((((((v0.c1)AND(t1.c2)))OR(t1.c2)))OR(v0.c0)))OR(v0.c0)))OR(v0.c1)))>=(((t1.c0) BETWEEN (v0.c2) AND (t1.c2))))) ORDER BY v0.c1  NULLS FIRST, ((((((t1.c2)|(v0.c1)))AND(((v0.c1) IS TRUE))))AND(CASE WHEN v0.c1 THEN 472236244 WHEN 0.835886070760131 THEN t1.c2 WHEN t1.c0 THEN ',fm' WHEN '0.10496673429038905' THEN v0.c2 END))  NULLS LAST;
SELECT ALL * FROM t1, v0 WHERE (((((((((((((((v0.c1)AND(t1.c2)))OR(t1.c2)))OR(v0.c0)))OR(v0.c0)))OR(v0.c1)))>(((t1.c0) BETWEEN (v0.c2) AND (t1.c2)))))AND(x'0486'))) ORDER BY (NOT (json_object(v0.c2, v0.c1, v0.c0, v0.c2, v0.c2))) DESC, (((NULL)>(NULL)) IN ((~ (t1.c0)))), ((((((((((((t1.c2)OR(v0.c1)))OR(t1.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c1))) BETWEEN (v0.c2 COLLATE BINARY) AND (v0.c0)) LIMIT 0x0;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((- (vt0.c1))) NOTNULL) WHERE (((HEX(DISTINCT vt0.c1)) BETWEEN ((((vt0.c1, t1.c2))!=((t1.c2, t1.c1)))) AND (t1.c1))) ORDER BY CASE ((t1.c0)<>(t1.c2))  WHEN ((((((x'658705')AND(t1.c2)))OR(vt0.c1)))OR(vt0.c1)) THEN ((t1.c1)<>(vt0.c0)) WHEN ((t1.c1) NOTNULL) THEN ((t1.c2) NOTNULL) ELSE t1.c2 COLLATE NOCASE END DESC  NULLS FIRST, ((((((((((0Xffffffffed5251db)OR((t1.c2 IN ()))))OR(((vt0.c1)LIKE(t1.c2)))))OR((+ (t1.c0)))))OR((- (t1.c2)))))AND((NOT (t1.c1)))) ASC  NULLS LAST, ((LOWER(DISTINCT vt0.c0)) IS FALSE);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((- (vt0.c1))) NOTNULL) WHERE (((((HEX(DISTINCT vt0.c1)) BETWEEN ((((vt0.c1, t1.c2))<>((t1.c2, t1.c1)))) AND (t1.c1)))AND(((t1.c0) BETWEEN (((vt0.c1)||(vt0.c0))) AND (((((((((t1.c1)AND(0.8191466608053619)))AND(t1.c0)))AND(vt0.c0)))OR(t1.c2))))))) ORDER BY CASE ((t1.c0)!=(t1.c2))  WHEN ((((((x'658705')AND(t1.c2)))OR(vt0.c1)))OR(vt0.c1)) THEN ((t1.c1)!=(vt0.c0)) WHEN ((t1.c1) NOTNULL) THEN ((t1.c2) NOTNULL) ELSE t1.c2 COLLATE NOCASE END DESC  NULLS FIRST, ((((((((((0Xffffffffed5251db)OR((t1.c2 IN ()))))OR(((vt0.c1)LIKE(t1.c2)))))OR((+ (t1.c0)))))OR((- (t1.c2)))))AND((NOT (t1.c1)))) ASC  NULLS LAST, ((LOWER(DISTINCT vt0.c0)) IS FALSE) LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((- (vt0.c1))) NOTNULL) WHERE ((((((0.022624424174838786, t1.c1)) BETWEEN ((t1.c1, x'')) AND ((vt0.c1, t1.c2))))%(t1.c2))) ORDER BY CASE ((t1.c0)<>(t1.c2))  WHEN ((((((x'658705')AND(t1.c2)))OR(vt0.c1)))OR(vt0.c1)) THEN ((t1.c1)<>(vt0.c0)) WHEN ((t1.c1) NOTNULL) THEN ((t1.c2) NOTNULL) ELSE t1.c2 COLLATE NOCASE END DESC  NULLS FIRST, ((((((((((0Xffffffffed5251db)OR((t1.c2 IN ()))))OR(((vt0.c1)LIKE(t1.c2)))))OR((+ (t1.c0)))))OR((- (t1.c2)))))AND((NOT (t1.c1)))) ASC  NULLS LAST, ((LOWER(DISTINCT vt0.c0)) IS FALSE) LIMIT 0X0;
SELECT ALL MIN(vt0.c0) FROM vt0 WHERE ('''u') ORDER BY ((((vt0.c1 COLLATE NOCASE)AND((NOT (vt0.c0)))))OR(((vt0.c0)AND(vt0.c0)))) DESC;
SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE ((('''u')AND(((((vt0.c1 COLLATE BINARY)OR(CAST(vt0.c1 AS REAL))))OR((NOT (vt0.c1))))))) ORDER BY ((((vt0.c1 COLLATE NOCASE)AND((NOT (vt0.c0)))))OR(((vt0.c0)AND(vt0.c0)))) DESC LIMIT 0x2 INTERSECT SELECT DISTINCT MIN(vt0.c0) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1 COLLATE NOCASE)AND((NOT (vt0.c0)))))OR(((vt0.c0)AND(vt0.c0)))) DESC LIMIT 2;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE x''  WHEN ('' IN (v0.c2, 0.27797247289921023)) THEN CAST(vt0.c1 AS TEXT) WHEN '1354148488' THEN ((vt0.c1)IS(v0.c2)) END) ORDER BY (((- (v0.c2))) ISNULL)  NULLS FIRST, (NULL IN (vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE x''  WHEN ('' IN (v0.c2, 0.27797247289921023)) THEN CAST(vt0.c1 AS TEXT) WHEN '1354148488' THEN ((vt0.c1)IS(v0.c2)) END) ORDER BY (((- (v0.c2))) ISNULL)  NULLS FIRST, (NULL IN (vt0.c0)) COLLATE BINARY  NULLS FIRST LIMIT 0 INTERSECT SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM)/(((v0.c1) ISNULL)))) ORDER BY (((- (v0.c2))) ISNULL)  NULLS FIRST, (NULL IN (vt0.c0)) COLLATE BINARY  NULLS FIRST LIMIT 0X0;
SELECT * FROM v0 WHERE (CAST(((v0.c1)/(v0.c2)) AS TEXT));
SELECT DISTINCT * FROM v0 WHERE (CAST(((v0.c1)/(v0.c2)) AS TEXT));
SELECT * FROM v0 WHERE (CAST(((v0.c1)/(v0.c2)) AS TEXT));
SELECT DISTINCT * FROM v0 WHERE (CAST(((v0.c1)/(v0.c2)) AS TEXT));
SELECT ALL * FROM v0 INNER JOIN t1 ON '1579820152' LEFT OUTER JOIN vt0 ON CAST(v0.c2 AS TEXT) WHERE (PRINTF(((t1.c0) NOT NULL))) ORDER BY ((CASE v0.c2  WHEN v0.c2 THEN '1571425915' WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END) BETWEEN (CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c1 END) AND (CAST(t1.c2 AS REAL)))  NULLS LAST, ((((vt0.c1)OR(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT * FROM v0 INNER JOIN t1 ON '1579820152' INNER JOIN vt0 ON CAST(v0.c2 AS TEXT) WHERE (PRINTF(((t1.c0) NOT NULL))) ORDER BY ((CASE v0.c2  WHEN v0.c2 THEN '1571425915' WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END) BETWEEN (CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c1 END) AND (CAST(t1.c2 AS REAL)))  NULLS LAST, ((((vt0.c1)OR(vt0.c0))) ISNULL)  NULLS FIRST LIMIT 0;
SELECT ALL * FROM v0 INNER JOIN t1 ON '1579820152' LEFT OUTER JOIN vt0 ON CAST(v0.c2 AS TEXT) WHERE (PRINTF(((t1.c0) NOT NULL))) ORDER BY ((CASE v0.c2  WHEN v0.c2 THEN '1571425915' WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END) BETWEEN (CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c1 END) AND (CAST(t1.c2 AS REAL)))  NULLS LAST, ((((vt0.c1)OR(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT * FROM v0 INNER JOIN t1 ON '1579820152' INNER JOIN vt0 ON CAST(v0.c2 AS TEXT) WHERE (PRINTF(((t1.c0) NOT NULL))) ORDER BY ((CASE v0.c2  WHEN v0.c2 THEN '1571425915' WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END) BETWEEN (CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c1 END) AND (CAST(t1.c2 AS REAL)))  NULLS LAST, ((((vt0.c1)OR(vt0.c0))) ISNULL)  NULLS FIRST LIMIT 0;
SELECT MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c1)||(vt0.c1)) IN ('', CASE WHEN vt0.c1 THEN '' END)));
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE ((((vt0.c1)||(vt0.c1)) IN ('', CASE WHEN vt0.c1 THEN '' END))) LIMIT 0X1;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t1 INNER JOIN v0 ON (NOT (((v0.c0) BETWEEN (t1.c1) AND (t1.c2)))) WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) ORDER BY ((((CHAR(t1.c0, t1.c1, t1.c1, vt0.c1, t1.c0))OR(((v0.c1) ISNULL))))AND((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))))) ASC  NULLS FIRST, ((((((((v0.c1)AND(x'')))OR(t1.c0)))OR(t1.c1)))IS(v0.c1)), ((((v0.c0)<=('t4O_ᾆ	r')))-(v0.c2))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 INNER JOIN v0 ON (NOT (((v0.c0) BETWEEN (t1.c1) AND (t1.c2)))) WHERE (((CAST((v0.c0 IN ()) AS NUMERIC))AND(((v0.c1 COLLATE RTRIM)IS(((t1.c1)=('272990286'))))))) ORDER BY ((((CHAR(t1.c0, t1.c1, t1.c1, vt0.c1, t1.c0))OR(((v0.c1) ISNULL))))AND((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))))) ASC  NULLS FIRST, ((((((((v0.c1)AND(x'')))OR(t1.c0)))OR(t1.c1)))IS(v0.c1)), ((((v0.c0)<=('t4O_ᾆ	r')))-(v0.c2))  NULLS FIRST INTERSECT SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 INNER JOIN v0 ON (NOT (((v0.c0) BETWEEN (t1.c1) AND (t1.c2)))) WHERE (((((t1.c2 COLLATE BINARY)AND(((((((((v0.c2)OR(t1.c2)))OR(vt0.c0)))OR(v0.c1)))OR('o0')))))AND(((v0.c2) IS TRUE)))) ORDER BY ((((CHAR(t1.c0, t1.c1, t1.c1, vt0.c1, t1.c0))OR(((v0.c1) ISNULL))))AND((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))))) ASC  NULLS FIRST, ((((((((v0.c1)AND(x'')))OR(t1.c0)))OR(t1.c1)))IS(v0.c1)), ((((v0.c0)<=('t4O_ᾆ	r')))-(v0.c2))  NULLS FIRST;
SELECT * FROM v0, vt0, t1 WHERE ((((((((((((((v0.c0)) NOT BETWEEN ((x'5580')) AND ((t1.c1))))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN t1.c1 THEN t1.c0 WHEN v0.c1 THEN t1.c1 WHEN v0.c1 THEN t1.c0 ELSE t1.c1 END)))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(0.4969354833613563 AS BLOB))))OR(SQLITE_VERSION())))OR(0.92073019482953)));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((((((((((((((v0.c0)) NOT BETWEEN ((x'5580')) AND ((t1.c1))))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN t1.c1 THEN t1.c0 WHEN v0.c1 THEN t1.c1 WHEN v0.c1 THEN t1.c0 ELSE t1.c1 END)))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(0.4969354833613563 AS BLOB))))OR(SQLITE_VERSION())))OR(0.92073019482953)));
SELECT * FROM v0, vt0, t1 WHERE ((((((((((((((v0.c0)) NOT BETWEEN ((x'5580')) AND ((t1.c1))))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN t1.c1 THEN t1.c0 WHEN v0.c1 THEN t1.c1 WHEN v0.c1 THEN t1.c0 ELSE t1.c1 END)))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(0.4969354833613563 AS BLOB))))OR(SQLITE_VERSION())))OR(0.92073019482953)));
SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((((((((((((((v0.c0)) NOT BETWEEN ((x'5580')) AND ((t1.c1))))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN t1.c1 THEN t1.c0 WHEN v0.c1 THEN t1.c1 WHEN v0.c1 THEN t1.c0 ELSE t1.c1 END)))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(0.4969354833613563 AS BLOB))))OR(SQLITE_VERSION())))OR(0.92073019482953)));
SELECT ALL MAX(vt0.c0) FROM vt0, v0 CROSS JOIN t1 ON CAST((v0.c0 IN (t1.c2)) AS BLOB) WHERE (((((((((((((((((v0.c1)AND(v0.c1)))AND(t1.c1)))AND(t1.c2)))AND((vt0.c0 IN ()))))AND(((t1.c2) NOT BETWEEN (v0.c1) AND (t1.c1)))))OR(t1.c0)))OR(((v0.c0)||(t1.c2)))))AND(t1.c1)));
SELECT MAX(vt0.c0) FROM vt0, v0 CROSS JOIN t1 ON CAST((v0.c0 IN (t1.c2)) AS BLOB) WHERE (((((((((((((((((((v0.c1)AND(v0.c1)))AND(t1.c1)))AND(t1.c2)))AND((vt0.c0 IN ()))))AND(((t1.c2) NOT BETWEEN (v0.c1) AND (t1.c1)))))OR(t1.c0)))OR(((v0.c0)||(t1.c2)))))AND(t1.c1)))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((v0.c2 COLLATE NOCASE)&(((vt0.c1)<<('称?{b땜u')))) ASC  NULLS LAST LIMIT 0X0 INTERSECT SELECT MAX(vt0.c0) FROM vt0, v0 CROSS JOIN t1 ON CAST((v0.c0 IN (t1.c2)) AS BLOB) WHERE (CASE WHEN (t1.c0 IN (t1.c2)) THEN x'a13c75' ELSE t1.c0 COLLATE BINARY END) ORDER BY ((v0.c2 COLLATE NOCASE)&(((vt0.c1)<<('称?{b땜u')))) ASC  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 LEFT OUTER JOIN v0 ON (+ (t1.c2)) WHERE ((((t1.c1) BETWEEN (t1.c2) AND (t1.c1)) IN ()));
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN v0 ON (+ (t1.c2)) WHERE ((((t1.c1) BETWEEN (t1.c2) AND (t1.c1)) IN ())) LIMIT 0;
SELECT * FROM t1 LEFT OUTER JOIN v0 ON (+ (t1.c2)) WHERE ((((t1.c1) BETWEEN (t1.c2) AND (t1.c1)) IN ()));
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN v0 ON (+ (t1.c2)) WHERE ((((t1.c1) BETWEEN (t1.c2) AND (t1.c1)) IN ())) LIMIT 0;
SELECT * FROM t1, vt0, v0 WHERE (((CASE WHEN t1.c1 THEN v0.c2 WHEN NULL THEN v0.c0 END) BETWEEN ((~ (v0.c1))) AND (NULLIF(DISTINCT v0.c0, t1.c0))));
SELECT DISTINCT * FROM t1, vt0 NOT INDEXED, v0 WHERE (((CASE WHEN t1.c1 THEN v0.c2 WHEN NULL THEN v0.c0 END) BETWEEN ((~ (v0.c1))) AND (NULLIF(DISTINCT v0.c0, t1.c0)))) ORDER BY ((((t1.c1) NOT NULL))||(((v0.c2) NOT NULL)))  NULLS LAST LIMIT 0;
SELECT * FROM t1, vt0, v0 WHERE (((CASE WHEN t1.c1 THEN v0.c2 WHEN NULL THEN v0.c0 END) BETWEEN ((~ (v0.c1))) AND (NULLIF(DISTINCT v0.c0, t1.c0))));
SELECT DISTINCT * FROM t1, vt0 NOT INDEXED, v0 WHERE (((CASE WHEN t1.c1 THEN v0.c2 WHEN NULL THEN v0.c0 END) BETWEEN ((~ (v0.c1))) AND (NULLIF(DISTINCT v0.c0, t1.c0)))) ORDER BY ((((t1.c1) NOT NULL))||(((v0.c2) NOT NULL)))  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM v0, t1 WHERE (((v0.c2) BETWEEN ((((v0.c0))>=((v0.c0)))) AND (((v0.c1) BETWEEN (v0.c1) AND (t1.c2)))));
SELECT COUNT(*) FROM v0, t1 WHERE (((v0.c2) BETWEEN ((((v0.c0))>=((v0.c0)))) AND (((v0.c1) BETWEEN (v0.c1) AND (t1.c2))))) ORDER BY ((((((((((t1.c0)OR(v0.c1)))OR(0.729137757237897)))AND(v0.c1)))OR(t1.c1))) ISNULL) DESC  NULLS FIRST, (t1.c1 IN (t1.c2, t1.c2)) COLLATE BINARY COLLATE RTRIM DESC LIMIT 1 INTERSECT SELECT COUNT(*) FROM v0, t1 WHERE ((((('o')OR(v0.c2)))OR(((v0.c1)%(v0.c0))))) ORDER BY ((((((((((t1.c0)OR(v0.c1)))OR(0.729137757237897)))AND(v0.c1)))OR(t1.c1))) ISNULL) DESC  NULLS FIRST, (t1.c1 IN (t1.c2, t1.c2)) COLLATE BINARY COLLATE RTRIM DESC LIMIT 0X1;
SELECT ALL * FROM v0, t1, vt0 WHERE ((((('8')<<(v0.c1)))<((~ (t1.c0))))) ORDER BY (((v0.c2 IN (t1.c0)))-(((t1.c0)GLOB(vt0.c1)))), (((t1.c0)) NOT BETWEEN (((((vt0.c1, v0.c0))<>((t1.c2, t1.c0))))) AND ((CASE WHEN v0.c2 THEN t1.c0 WHEN vt0.c1 THEN v0.c1 ELSE v0.c2 END))) ASC;
SELECT ALL * FROM v0, t1, vt0 WHERE ((((('8')<<(v0.c1)))<((~ (t1.c0))))) ORDER BY (((v0.c2 IN (t1.c0)))-(((t1.c0)GLOB(vt0.c1)))), (((t1.c0)) NOT BETWEEN (((((vt0.c1, v0.c0))!=((t1.c2, t1.c0))))) AND ((CASE WHEN v0.c2 THEN t1.c0 WHEN vt0.c1 THEN v0.c1 ELSE v0.c2 END))) ASC;
SELECT ALL * FROM v0, t1, vt0 WHERE ((((('8')<<(v0.c1)))<((~ (t1.c0))))) ORDER BY (((v0.c2 IN (t1.c0)))-(((t1.c0)GLOB(vt0.c1)))), (((t1.c0)) NOT BETWEEN (((((vt0.c1, v0.c0))<>((t1.c2, t1.c0))))) AND ((CASE WHEN v0.c2 THEN t1.c0 WHEN vt0.c1 THEN v0.c1 ELSE v0.c2 END))) ASC;
SELECT ALL * FROM v0, t1, vt0 WHERE ((((('8')<<(v0.c1)))<((~ (t1.c0))))) ORDER BY (((v0.c2 IN (t1.c0)))-(((t1.c0)GLOB(vt0.c1)))), (((t1.c0)) NOT BETWEEN (((((vt0.c1, v0.c0))!=((t1.c2, t1.c0))))) AND ((CASE WHEN v0.c2 THEN t1.c0 WHEN vt0.c1 THEN v0.c1 ELSE v0.c2 END))) ASC;
SELECT MAX(vt0.c1) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) IS FALSE))-(((((0.5610739093479338)AND(vt0.c0)))AND(vt0.c1))))  NULLS LAST, (vt0.c1 COLLATE NOCASE IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))) ASC;
SELECT ALL MAX(vt0.c1) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) IS FALSE))-(((((0.5610739093479338)AND(vt0.c0)))AND(vt0.c1))))  NULLS LAST, (vt0.c1 COLLATE NOCASE IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))) ASC;
SELECT MIN(t1.c0) FROM t1 NATURAL JOIN vt0 WHERE (((((((((((t1.c2) ISNULL))OR((((vt0.c0))<=((t1.c2))))))OR((('f脏q1') BETWEEN (vt0.c0) AND (t1.c0)))))OR('0.5262929764240647')))AND((('7J	O') NOT BETWEEN (vt0.c1) AND (t1.c0))))) ORDER BY CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c2)) AS NUMERIC) DESC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM t1 NATURAL JOIN vt0 WHERE (((((((((((t1.c2) ISNULL))OR((((vt0.c0))<((t1.c2))))))OR((('f脏q1') BETWEEN (vt0.c0) AND (t1.c0)))))OR('0.5262929764240647')))AND((('7J	O') NOT BETWEEN (vt0.c1) AND (t1.c0))))) ORDER BY CAST(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c2)) AS NUMERIC) DESC  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1, vt0 WHERE (CAST('358575795' AS BLOB) COLLATE RTRIM);
SELECT MIN(t1.c0) FROM t1, vt0 WHERE (CAST('358575795' AS BLOB) COLLATE RTRIM) INTERSECT SELECT MIN(t1.c0) FROM t1, vt0 WHERE (0X526bb5b3);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)==(vt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)=(vt0.c1)) AS BLOB)) LIMIT 0x2 INTERSECT SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND((vt0.c1 IN ()))))AND('Gﶁ'))) LIMIT 2;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY (t1.c1 COLLATE BINARY IN (((t1.c1)*(t1.c0)), ((t1.c0) IS FALSE)));
SELECT * FROM t1 WHERE (((t1.c1)AND(((t1.c2)GLOB(((t1.c0)>=(t1.c1))))))) ORDER BY (t1.c1 COLLATE BINARY IN (((t1.c1)*(t1.c0)), ((t1.c0) IS FALSE))) LIMIT 1;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY (t1.c1 COLLATE BINARY IN (((t1.c1)*(t1.c0)), ((t1.c0) IS FALSE)));
SELECT * FROM t1 WHERE (((t1.c1)AND(((t1.c2)GLOB(((t1.c0)>=(t1.c1))))))) ORDER BY (t1.c1 COLLATE BINARY IN (((t1.c1)*(t1.c0)), ((t1.c0) IS FALSE))) LIMIT 1;
SELECT * FROM v0, t1 WHERE (((((((t1.c1)OR(t1.c2)))OR(v0.c1))) NOT BETWEEN ((t1.c1 IN ())) AND (((v0.c1)!=(t1.c2))))) ORDER BY ((((((((((v0.c0)AND(v0.c2)))OR(t1.c2)))OR(((t1.c0)LIKE(v0.c0)))))OR(UPPER(DISTINCT t1.c2))))OR(((v0.c1) BETWEEN (t1.c2) AND (v0.c0)))), CASE WHEN v0.c2 COLLATE BINARY THEN LOWER(t1.c1) WHEN CAST(v0.c2 AS BLOB) THEN CAST(t1.c0 AS TEXT) WHEN (((x'')) BETWEEN ((t1.c0)) AND ((v0.c1))) THEN (- (t1.c2)) WHEN ((t1.c1)IS(v0.c2)) THEN ((v0.c2)*(v0.c2)) ELSE v0.c0 COLLATE RTRIM END;
SELECT * FROM v0, t1 WHERE (((((((t1.c1)OR(t1.c2)))OR(v0.c1))) NOT BETWEEN ((t1.c1 IN ())) AND (((v0.c1)!=(t1.c2))))) ORDER BY (+ (t1.c0)) COLLATE RTRIM  NULLS LAST, CASE WHEN t1.c2 THEN ((t1.c2) NOT NULL) END DESC  NULLS LAST;
SELECT * FROM v0, t1 WHERE (((((((t1.c1)OR(t1.c2)))OR(v0.c1))) NOT BETWEEN ((t1.c1 IN ())) AND (((v0.c1)!=(t1.c2))))) ORDER BY ((((((((((v0.c0)AND(v0.c2)))OR(t1.c2)))OR(((t1.c0)LIKE(v0.c0)))))OR(UPPER(DISTINCT t1.c2))))OR(((v0.c1) BETWEEN (t1.c2) AND (v0.c0)))), CASE WHEN v0.c2 COLLATE BINARY THEN LOWER(t1.c1) WHEN CAST(v0.c2 AS BLOB) THEN CAST(t1.c0 AS TEXT) WHEN (((x'')) BETWEEN ((t1.c0)) AND ((v0.c1))) THEN (- (t1.c2)) WHEN ((t1.c1)IS(v0.c2)) THEN ((v0.c2)*(v0.c2)) ELSE v0.c0 COLLATE RTRIM END;
SELECT * FROM v0, t1 WHERE (((((((t1.c1)OR(t1.c2)))OR(v0.c1))) NOT BETWEEN ((t1.c1 IN ())) AND (((v0.c1)!=(t1.c2))))) ORDER BY (+ (t1.c0)) COLLATE RTRIM  NULLS LAST, CASE WHEN t1.c2 THEN ((t1.c2) NOT NULL) END DESC  NULLS LAST;
SELECT ALL MAX(v0.c1) FROM vt0, v0 WHERE (UNLIKELY(((vt0.c1)AND(vt0.c1))));
SELECT ALL MAX(v0.c1) FROM vt0, v0 WHERE (UNLIKELY(((vt0.c1)AND(vt0.c1))));
SELECT ALL MAX(v0.c2) FROM v0 WHERE ((((((((((((((((((v0.c1)OR(v0.c1)))AND(v0.c2)))OR('3IHEpQn')))AND(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(v0.c0)), ((v0.c1)AND(v0.c1)), TRIM(v0.c0)))<((v0.c0 COLLATE RTRIM, ((v0.c0)OR(v0.c1)), 0.3897711731835166 COLLATE BINARY)))) ORDER BY UPPER((((v0.c1, v0.c1)) BETWEEN ((v0.c1, v0.c0)) AND ((v0.c0, v0.c1)))) DESC  NULLS LAST;
SELECT DISTINCT MAX(v0.c2) FROM v0 WHERE ((((((((((((((((((((v0.c1)OR(v0.c1)))AND(v0.c2)))OR('3IHEpQn')))AND(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(v0.c0)), ((v0.c1)AND(v0.c1)), TRIM(v0.c0)))<((v0.c0 COLLATE RTRIM, ((v0.c0)OR(v0.c1)), 0.3897711731835166 COLLATE BINARY))))AND(((((v0.c0) BETWEEN (v0.c2) AND (v0.c1)))GLOB((((v0.c2, v0.c0)) BETWEEN ((v0.c2, v0.c0)) AND ((v0.c0, v0.c2)))))))) ORDER BY CASE CAST(v0.c0 AS INTEGER)  WHEN (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) WHEN ((v0.c1)<(v0.c0)) THEN v0.c1 COLLATE NOCASE WHEN CASE 0.10372039626744378  WHEN v0.c2 THEN v0.c1 END THEN CASE v0.c2  WHEN v0.c2 THEN '' END END ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, t1 WHERE (((CAST(t1.c1 AS NUMERIC))!=(((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0, v0, t1 WHERE (((CAST(t1.c1 AS NUMERIC))!=(((((v0.c0)OR(vt0.c0)))AND(vt0.c0))))) LIMIT 3;
SELECT ALL * FROM vt0, v0, t1 WHERE (((CAST(t1.c1 AS NUMERIC))!=(((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0, v0, t1 WHERE (((CAST(t1.c1 AS NUMERIC))!=(((((v0.c0)OR(vt0.c0)))AND(vt0.c0))))) LIMIT 3;
SELECT MIN(v0.c0) FROM v0 WHERE ((((CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END, NULL))<>((CASE WHEN v0.c2 THEN v0.c1 END, (+ (v0.c2)))))) ORDER BY (((- (v0.c0)))<>(((v0.c2) BETWEEN (v0.c1) AND (0X7fffffffffffffff)))) DESC  NULLS FIRST;
SELECT DISTINCT MIN(v0.c0) FROM v0 WHERE ((((((CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END, NULL))!=((CASE WHEN v0.c2 THEN v0.c1 END, (+ (v0.c2))))))AND((~ ((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c2)))))))) ORDER BY (((- (v0.c0)))!=(((v0.c2) BETWEEN (v0.c1) AND (0x7fffffffffffffff)))) DESC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(v0.c0) FROM v0 WHERE ((~ ((v0.c2 IN (''))))) ORDER BY (((- (v0.c0)))<>(((v0.c2) BETWEEN (v0.c1) AND (0x7fffffffffffffff)))) DESC  NULLS FIRST;
