-- Time: 2021/05/19 01:09:32
-- Database: database4
-- Database version: 3.34.0
-- seed value: 1621357771648
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 INTEGER , +c4 INT ); -- 1ms;
CREATE TABLE IF NOT EXISTS t1 (c0 INTEGER , c1 INT ); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
ANALYZE; -- 1ms;
CREATE INDEX IF NOT EXISTS i43 ON t1((((((c1)AND(c0)))AND(c0)) IN ()) COLLATE NOCASE ASC,CAST(c1 COLLATE BINARY AS TEXT) DESC); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c0) VALUES (x'', NULL, x''), (0.28814878998129434, '1291462503', 602314073), (NULL, NULL, '쑯>XX{()l'); -- 1ms;
END; -- 0ms;
REINDEX; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c4, c1) VALUES (NULL, x'6b'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  t1; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3, c0) VALUES ('*', NULL, NULL), (1.291462503E9, '0.28814878998129434', '888471274'), ('Q', '1134871663', 0.8258877813871666), ('[', '1291462503', x'af42'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA soft_heap_limit = 6812959601629105952; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR ABORT INTO t1(c0) VALUES (NULL), (0X286b810c); -- 1ms;
ANALYZE; -- 1ms;
ANALYZE main; -- 0ms;
UPDATE OR IGNORE rt0 SET c2 = NULL WHERE ((((rt0.c1) ISNULL))!=(rt0.c4 COLLATE RTRIM)); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c4, c2, c3) VALUES (0.5524257950729562, 0xffffffffc954d7b2, 0.8608118539469651, x'30'), ('1134871663', '', NULL, 0X4cfa2767), (x'b1', NULL, 2016286577, x'c2fe'); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (NULL, x''), ('1368021721', '0.8258877813871666'), (NULL, NULL); -- 1ms;
UPDATE OR IGNORE t1 SET (c1, c0, c0, c1, c1)=('', 678134028, '*', 0.28814878998129434, '1291462503'); -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES (NULL), (((((CAST('-1295626079' AS NUMERIC))OR(CAST('-0.0' AS NUMERIC))))OR(((0.08984319572992416)LIKE(1368021721))))), (x'3d'), (6.8129596016291062E18); -- 1ms;
END TRANSACTION; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 1ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 1ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
REINDEX; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
REINDEX i43; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c4, c1, c2, c3, c0) VALUES ('
v?檳VI*w', 0.05868177938681518, x'd4', 'fr', 1134871663), ('', NULL, 0x71c79a79, 0.27382307138489215, x'15'), (NULL, '-2142713901', 0.6413199427468868, NULL, '蕴眀*mn'), (NULL, NULL, x'5d', 0.5104132513913813, 0.5524257950729562), (x'', 0.5104132513913813, NULL, x'67', '6812959601629105952'), ('n', NULL, x'', 0.8608118539469651, NULL); -- 0ms;
INSERT OR FAIL INTO t1(c1) VALUES (1430619943), (0xffffffffcccc9382); -- 0ms;
REINDEX i43; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (1.134871663E9), ('2092788403'), (0.6464899237916252); -- 1ms;
PRAGMA temp.foreign_keys; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT (x'26b2b2')))); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL, 2.092788403E9), (NULL, 1147121927), ('''', NULL) ON CONFLICT(c0, c1) DO UPDATE SET c0=NULL, c1=c1 WHERE '-396580640'; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, 1531730283, '1665895396', 0.06218524392308378, x'9638'), (NULL, x'bff11b', NULL, x'', NULL), ('uvr-', '926628706', '', '6jv?^nF(', '394806515'); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('*/0QE'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA temp.integrity_check; -- 0ms;
CREATE UNIQUE INDEX i92 ON t1(((CAST(c1 AS INTEGER))>=(c0 COLLATE NOCASE)) COLLATE BINARY DESC,(~ (((0x7e2112a9) IS TRUE))) DESC); -- 0ms;
REINDEX; -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c0))) NOT BETWEEN ((((rt0.c4, '1430619943'))<>((rt0.c0, 0X669a7faa)))) AND (CAST(rt0.c2 AS BLOB)))) ORDER BY ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))!=(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)) ASC, x'b07e0e'  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4 IN (rt0.c0))) NOT BETWEEN ((((rt0.c4, '1430619943'))<>((rt0.c0, 0x669a7faa)))) AND (CAST(rt0.c2 AS BLOB))))AND(NULLIF(((((((((rt0.c4)OR(NULL)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c3)), rt0.c3 COLLATE NOCASE)))) ORDER BY ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))<>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)) ASC, x'b07e0e'  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c0))) NOT BETWEEN ((((rt0.c4, '1430619943'))<>((rt0.c0, 0X669a7faa)))) AND (CAST(rt0.c2 AS BLOB)))) ORDER BY ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))!=(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)) ASC, x'b07e0e'  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4 IN (rt0.c0))) NOT BETWEEN ((((rt0.c4, '1430619943'))<>((rt0.c0, 0x669a7faa)))) AND (CAST(rt0.c2 AS BLOB))))AND(NULLIF(((((((((rt0.c4)OR(NULL)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c3)), rt0.c3 COLLATE NOCASE)))) ORDER BY ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))<>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)) ASC, x'b07e0e'  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (((rt0.c4 COLLATE BINARY) BETWEEN (t1.c1 COLLATE BINARY) AND (t1.c0 COLLATE BINARY))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((t1.c0)<=(rt0.c1)))) AND ((((rt0.c0)>>(rt0.c2)))));
SELECT DISTINCT * FROM rt0, t1 WHERE (((((rt0.c4 COLLATE BINARY) BETWEEN (t1.c1 COLLATE BINARY) AND (t1.c0 COLLATE BINARY)))AND((((0.7331856957557691 IN (t1.c0)))AND(x'2989b3'))))) ORDER BY rt0.c1, ((rt0.c1 COLLATE BINARY) NOT NULL)  NULLS LAST, ((((((NULL, rt0.c0)) NOT BETWEEN ((rt0.c1, 0xffffffffc96fd9cc)) AND ((rt0.c1, rt0.c3))), (((((((('')AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))OR(NULL))))==((((((((rt0.c2)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c4)), (((x'', rt0.c4, t1.c1))<>((rt0.c4, t1.c0, rt0.c3))))));
SELECT * FROM rt0, t1 WHERE (((rt0.c4 COLLATE BINARY) BETWEEN (t1.c1 COLLATE BINARY) AND (t1.c0 COLLATE BINARY))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((t1.c0)<=(rt0.c1)))) AND ((((rt0.c0)>>(rt0.c2)))));
SELECT DISTINCT * FROM rt0, t1 WHERE (((((rt0.c4 COLLATE BINARY) BETWEEN (t1.c1 COLLATE BINARY) AND (t1.c0 COLLATE BINARY)))AND((((0.7331856957557691 IN (t1.c0)))AND(x'2989b3'))))) ORDER BY rt0.c1, ((rt0.c1 COLLATE BINARY) NOT NULL)  NULLS LAST, ((((((NULL, rt0.c0)) NOT BETWEEN ((rt0.c1, 0xffffffffc96fd9cc)) AND ((rt0.c1, rt0.c3))), (((((((('')AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))OR(NULL))))==((((((((rt0.c2)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c4)), (((x'', rt0.c4, t1.c1))<>((rt0.c4, t1.c0, rt0.c3))))));
SELECT COUNT(*) FROM rt0, t1 WHERE (((((((t1.c1)<(0Xffffffffd1b2ffc7)))AND(((t1.c0)>(rt0.c3)))))AND((((rt0.c1, rt0.c1, t1.c0)) BETWEEN ((t1.c0, t1.c1, rt0.c2)) AND ((rt0.c2, t1.c1, t1.c0)))))) ORDER BY CASE WHEN rt0.c3 COLLATE NOCASE THEN (+ (t1.c1)) WHEN ((rt0.c2) IS TRUE) THEN rt0.c1 ELSE rt0.c2 COLLATE NOCASE END DESC;
SELECT COUNT(*) FROM rt0, t1 WHERE (((((((t1.c1)<(-776798265)))AND(((t1.c0)>(rt0.c3)))))AND((((rt0.c1, rt0.c1, t1.c0)) BETWEEN ((t1.c0, t1.c1, rt0.c2)) AND ((rt0.c2, t1.c1, t1.c0)))))) ORDER BY (((+ (t1.c0)))&(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2)))), CAST((rt0.c0 IN (rt0.c0)) AS NUMERIC) DESC  NULLS LAST, CAST(x'' AS NUMERIC) LIMIT 0X0;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)AND(t1.c1)))AND(t1.c1)) COLLATE NOCASE);
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c1)AND(t1.c1)))AND(t1.c1)) COLLATE NOCASE) LIMIT 0;
SELECT ALL * FROM t1 INNER JOIN rt0 ON CAST(CASE rt0.c3  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END AS TEXT) WHERE (rt0.c0);
SELECT DISTINCT * FROM t1 INNER JOIN rt0 ON CAST(CASE rt0.c3  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END AS TEXT) WHERE (rt0.c0) ORDER BY ((((t1.c1)OR(0.6413199427468868))) IS FALSE), rt0.c0 LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 INNER JOIN rt0 ON CAST(CASE rt0.c3  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END AS TEXT) WHERE (x'64cb') ORDER BY ((((t1.c1)OR(0.6413199427468868))) IS FALSE), rt0.c0 LIMIT 1;
SELECT ALL * FROM t1 INNER JOIN rt0 ON CAST(CASE rt0.c3  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END AS TEXT) WHERE (rt0.c0);
SELECT DISTINCT * FROM t1 INNER JOIN rt0 ON CAST(CASE rt0.c3  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END AS TEXT) WHERE (rt0.c0) ORDER BY ((((t1.c1)OR(0.6413199427468868))) IS FALSE), rt0.c0 LIMIT 0X1 INTERSECT SELECT DISTINCT * FROM t1 INNER JOIN rt0 ON CAST(CASE rt0.c3  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END AS TEXT) WHERE (x'64cb') ORDER BY ((((t1.c1)OR(0.6413199427468868))) IS FALSE), rt0.c0 LIMIT 1;
SELECT * FROM t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c3)AND(t1.c1)) THEN ((x'de84')=(rt0.c0)) WHEN (((rt0.c1, t1.c0))<((rt0.c2, rt0.c0))) THEN (NOT (rt0.c3)) END WHERE ((((((((+ (t1.c1)))AND(rt0.c4 COLLATE NOCASE)))AND(rt0.c3 COLLATE NOCASE)))OR(0.9319836884810059))) ORDER BY (+ (CAST(t1.c1 AS BLOB)))  NULLS FIRST, (((rt0.c2 IN (t1.c0))) IS FALSE);
SELECT DISTINCT * FROM t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c3)AND(t1.c1)) THEN ((x'de84')=(rt0.c0)) WHEN (((rt0.c1, t1.c0))<((rt0.c2, rt0.c0))) THEN (NOT (rt0.c3)) END WHERE ((((((((((+ (t1.c1)))AND(rt0.c4 COLLATE NOCASE)))AND(rt0.c3 COLLATE NOCASE)))OR(0.9319836884810059)))AND(CASE CAST(rt0.c4 AS TEXT)  WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) THEN rt0.c1 WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN (- (rt0.c0)) END))) ORDER BY (+ (CAST(t1.c1 AS BLOB)))  NULLS FIRST, (((rt0.c2 IN (t1.c0))) IS FALSE);
SELECT * FROM t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c3)AND(t1.c1)) THEN ((x'de84')=(rt0.c0)) WHEN (((rt0.c1, t1.c0))<((rt0.c2, rt0.c0))) THEN (NOT (rt0.c3)) END WHERE ((((((((+ (t1.c1)))AND(rt0.c4 COLLATE NOCASE)))AND(rt0.c3 COLLATE NOCASE)))OR(0.9319836884810059))) ORDER BY (+ (CAST(t1.c1 AS BLOB)))  NULLS FIRST, (((rt0.c2 IN (t1.c0))) IS FALSE);
SELECT DISTINCT * FROM t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c3)AND(t1.c1)) THEN ((x'de84')=(rt0.c0)) WHEN (((rt0.c1, t1.c0))<((rt0.c2, rt0.c0))) THEN (NOT (rt0.c3)) END WHERE ((((((((((+ (t1.c1)))AND(rt0.c4 COLLATE NOCASE)))AND(rt0.c3 COLLATE NOCASE)))OR(0.9319836884810059)))AND(CASE CAST(rt0.c4 AS TEXT)  WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) THEN rt0.c1 WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN (- (rt0.c0)) END))) ORDER BY (+ (CAST(t1.c1 AS BLOB)))  NULLS FIRST, (((rt0.c2 IN (t1.c0))) IS FALSE);
SELECT * FROM t1 WHERE ('jK^?^诤o5￿') ORDER BY (COALESCE(DISTINCT t1.c1, t1.c0, t1.c0, t1.c1, NULL) IN ((- (t1.c1)), CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)), ((t1.c0 COLLATE BINARY) NOT BETWEEN (CAST(t1.c1 AS REAL)) AND (((t1.c0)LIKE(t1.c1))));
SELECT * FROM t1 WHERE ('jK^?^诤o5￿') ORDER BY ((t1.c1) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((t1.c1)AND(t1.c1))))  NULLS FIRST, ((t1.c1 IN (t1.c0, '')) IN ()) ASC LIMIT 0;
SELECT * FROM t1 WHERE ('jK^?^诤o5￿') ORDER BY (COALESCE(DISTINCT t1.c1, t1.c0, t1.c0, t1.c1, NULL) IN ((- (t1.c1)), CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)), ((t1.c0 COLLATE BINARY) NOT BETWEEN (CAST(t1.c1 AS REAL)) AND (((t1.c0)LIKE(t1.c1))));
SELECT * FROM t1 WHERE ('jK^?^诤o5￿') ORDER BY ((t1.c1) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((t1.c1)AND(t1.c1))))  NULLS FIRST, ((t1.c1 IN (t1.c0, '')) IN ()) ASC LIMIT 0;
SELECT * FROM t1 WHERE (json_array_length(RTRIM('926628706'))) ORDER BY ((CAST(-1923149951 AS NUMERIC)) ISNULL) DESC  NULLS LAST, (((((t1.c0)AND(t1.c0)))AND(t1.c1)) IN (CAST(t1.c0 AS TEXT), CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((json_array_length(RTRIM('926628706')))AND((((t1.c1 IN ()))/(CASE WHEN t1.c1 THEN NULL WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c0 END))))) ORDER BY ((CAST(-1923149951 AS NUMERIC)) ISNULL) DESC  NULLS LAST, (((((t1.c0)AND(t1.c0)))AND(t1.c1)) IN (CAST(t1.c0 AS TEXT), CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c1) IS FALSE)) ORDER BY ((CAST(0Xffffffff8d5f0f81 AS NUMERIC)) ISNULL) DESC  NULLS LAST, (((((t1.c0)AND(t1.c0)))AND(t1.c1)) IN (CAST(t1.c0 AS TEXT), CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST;
SELECT * FROM t1 WHERE (json_array_length(RTRIM('926628706'))) ORDER BY ((CAST(-1923149951 AS NUMERIC)) ISNULL) DESC  NULLS LAST, (((((t1.c0)AND(t1.c0)))AND(t1.c1)) IN (CAST(t1.c0 AS TEXT), CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((json_array_length(RTRIM('926628706')))AND((((t1.c1 IN ()))/(CASE WHEN t1.c1 THEN NULL WHEN t1.c1 THEN t1.c1 WHEN NULL THEN t1.c0 END))))) ORDER BY ((CAST(-1923149951 AS NUMERIC)) ISNULL) DESC  NULLS LAST, (((((t1.c0)AND(t1.c0)))AND(t1.c1)) IN (CAST(t1.c0 AS TEXT), CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((t1.c1) IS FALSE)) ORDER BY ((CAST(0Xffffffff8d5f0f81 AS NUMERIC)) ISNULL) DESC  NULLS LAST, (((((t1.c0)AND(t1.c0)))AND(t1.c1)) IN (CAST(t1.c0 AS TEXT), CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END))  NULLS FIRST;
SELECT MAX(rt0.c1) FROM t1 LEFT OUTER JOIN rt0 ON CASE CAST(t1.c1 AS BLOB)  WHEN ((0.749930867817691)<=(t1.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE 0.7978931610588135 END WHERE ((((0.012424344916378116))=((rt0.c4))) COLLATE NOCASE) ORDER BY (((t1.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ((((rt0.c2, rt0.c3))>=((rt0.c4, rt0.c2))))) DESC  NULLS LAST, HEX(((((rt0.c2)AND(t1.c1)))OR(rt0.c3)))  NULLS FIRST, TRIM(CASE WHEN rt0.c3 THEN rt0.c3 END), ((((rt0.c0) BETWEEN (t1.c1) AND (rt0.c0))) ISNULL);
SELECT MAX(rt0.c1) FROM t1 LEFT OUTER JOIN rt0 ON CASE CAST(t1.c1 AS BLOB)  WHEN ((0.749930867817691)<=(t1.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE 0.7978931610588135 END WHERE ((((((0.012424344916378116))==((rt0.c4))) COLLATE NOCASE)AND((((((rt0.c1)GLOB(rt0.c4))))<=(((0.7978931610588135 IN ()))))))) ORDER BY ((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))OR(load_extension(t1.c1, rt0.c0))), ((((((CAST(rt0.c4 AS INTEGER))AND(((t1.c0)!=(rt0.c2)))))AND(TYPEOF('-1506820501'))))OR(((rt0.c0)=(rt0.c4)))) DESC  NULLS LAST, ((rt0.c4)&((~ (rt0.c1)))) DESC LIMIT 1;
SELECT ALL MAX(rt0.c1) FROM t1, rt0 WHERE ((~ (((t1.c0)/(rt0.c1))))) ORDER BY ((((CASE WHEN rt0.c3 THEN rt0.c2 END)OR(((rt0.c0) IS TRUE))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c1) FROM t1, rt0 WHERE ((~ (((t1.c0)/(rt0.c1))))) ORDER BY CAST(((((t1.c0)OR(rt0.c2)))AND(rt0.c2)) AS TEXT)  NULLS LAST, (NOT (CASE WHEN x'' THEN rt0.c3 WHEN rt0.c3 THEN 0X7cbd6ab3 ELSE t1.c1 END)), 'R'  NULLS FIRST LIMIT 0x1 INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM t1, rt0 WHERE ((((t1.c0, rt0.c1)) BETWEEN (((+ (rt0.c4)), t1.c1)) AND ((((((t1.c1)AND(rt0.c0)))OR(t1.c0)), CAST(rt0.c2 AS REAL))))) ORDER BY CAST(((((t1.c0)OR(rt0.c2)))AND(rt0.c2)) AS TEXT)  NULLS LAST, (NOT (CASE WHEN x'' THEN rt0.c3 WHEN rt0.c3 THEN 2092788403 ELSE t1.c1 END)), 'R'  NULLS FIRST LIMIT 0X1;
SELECT MAX(rt0.c1) FROM t1, rt0 WHERE (CASE (- (rt0.c3))  WHEN ((rt0.c1)>(rt0.c1)) THEN (t1.c0 IN (rt0.c3, rt0.c1, 0.9081406117766223)) ELSE 0.5157896416377543 END) ORDER BY CAST(HEX(t1.c1) AS NUMERIC);
SELECT DISTINCT MAX(rt0.c1) FROM t1, rt0 WHERE (((CASE (- (rt0.c3))  WHEN ((rt0.c1)>(rt0.c1)) THEN (t1.c0 IN (rt0.c3, rt0.c1, 0.9081406117766223)) ELSE 0.5157896416377543 END)AND((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN (rt0.c4 COLLATE RTRIM) AND ((t1.c1 IN ())))))) ORDER BY CAST(HEX(t1.c1) AS NUMERIC) LIMIT 0x0;
SELECT COUNT(*) FROM rt0 WHERE (json_type(((rt0.c1)*(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (json_type(((rt0.c1)*(rt0.c1)))) LIMIT 0x0;
SELECT ALL MIN(t1.c0) FROM t1, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC))>(CASE WHEN t1.c0 THEN rt0.c3 ELSE rt0.c4 END))) ORDER BY ((((((rt0.c4)>=(t1.c0)))OR(rt0.c0)))AND(CASE rt0.c2  WHEN t1.c1 THEN rt0.c4 WHEN rt0.c1 THEN t1.c0 ELSE rt0.c1 END)), ((((rt0.c4) NOT NULL))&(CASE WHEN t1.c0 THEN x'' ELSE rt0.c3 END));
SELECT DISTINCT MIN(t1.c0) FROM t1, rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))>(CASE WHEN t1.c0 THEN rt0.c3 ELSE rt0.c4 END)))AND(CASE '峤'  WHEN (~ (rt0.c2)) THEN ((rt0.c0)OR(x'15240a')) WHEN 0.9251435521815331 THEN (('-917186638')|(rt0.c1)) END))) ORDER BY ((((((rt0.c4)>=(t1.c0)))OR(rt0.c0)))AND(CASE rt0.c2  WHEN t1.c1 THEN rt0.c4 WHEN rt0.c1 THEN t1.c0 ELSE rt0.c1 END)), ((((rt0.c4) NOT NULL))&(CASE WHEN t1.c0 THEN x'' ELSE rt0.c3 END)) LIMIT 2;
SELECT ALL * FROM t1, rt0 WHERE (0.41119790886244745);
SELECT DISTINCT * FROM t1, rt0 WHERE (((0.41119790886244745)AND((((- (rt0.c0))) NOT NULL)))) INTERSECT SELECT DISTINCT * FROM t1, rt0 WHERE (CASE RTRIM(t1.c1)  WHEN CAST(t1.c0 AS INTEGER) THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(t1.c0)) WHEN ((((rt0.c2)AND(t1.c1)))AND(rt0.c4)) THEN rt0.c4 COLLATE NOCASE ELSE ((rt0.c1) IS FALSE) END);
SELECT ALL * FROM t1, rt0 WHERE (0.41119790886244745);
SELECT DISTINCT * FROM t1, rt0 WHERE (((0.41119790886244745)AND((((- (rt0.c0))) NOT NULL)))) INTERSECT SELECT DISTINCT * FROM t1, rt0 WHERE (CASE RTRIM(t1.c1)  WHEN CAST(t1.c0 AS INTEGER) THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(t1.c0)) WHEN ((((rt0.c2)AND(t1.c1)))AND(rt0.c4)) THEN rt0.c4 COLLATE NOCASE ELSE ((rt0.c1) IS FALSE) END);
SELECT ALL * FROM t1, rt0 WHERE (((rt0.c1)IS NOT(IFNULL(DISTINCT rt0.c3, t1.c1)))) ORDER BY ((((rt0.c3)=(t1.c1))) NOT NULL)  NULLS FIRST, (((((((- (rt0.c1)))OR(((183377622)OR(rt0.c0)))))AND((~ (0.3488779971907122)))))AND(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST, ((CAST(t1.c0 AS INTEGER))|((t1.c1 IN (t1.c0)))) DESC  NULLS FIRST;
SELECT * FROM t1, rt0 WHERE (((((rt0.c1)IS NOT(IFNULL(DISTINCT rt0.c3, t1.c1))))AND(((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((((rt0.c2)AND(rt0.c2)))AND(t1.c0))))))) ORDER BY ((((rt0.c3)==(t1.c1))) NOT NULL)  NULLS FIRST, (((((((- (rt0.c1)))OR(((0xaee1ed6)OR(rt0.c0)))))AND((~ (0.3488779971907122)))))AND(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST, ((CAST(t1.c0 AS INTEGER))|((t1.c1 IN (t1.c0)))) DESC  NULLS FIRST LIMIT 0x2 INTERSECT SELECT * FROM t1, rt0 WHERE (((t1.c1) IS FALSE)) ORDER BY ((((rt0.c3)==(t1.c1))) NOT NULL)  NULLS FIRST, (((((((- (rt0.c1)))OR(((183377622)OR(rt0.c0)))))AND((~ (0.3488779971907122)))))AND(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST, ((CAST(t1.c0 AS INTEGER))|((t1.c1 IN (t1.c0)))) DESC  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t1, rt0 WHERE (((rt0.c1)IS NOT(IFNULL(DISTINCT rt0.c3, t1.c1)))) ORDER BY ((((rt0.c3)=(t1.c1))) NOT NULL)  NULLS FIRST, (((((((- (rt0.c1)))OR(((183377622)OR(rt0.c0)))))AND((~ (0.3488779971907122)))))AND(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST, ((CAST(t1.c0 AS INTEGER))|((t1.c1 IN (t1.c0)))) DESC  NULLS FIRST;
SELECT * FROM t1, rt0 WHERE (((((rt0.c1)IS NOT(IFNULL(DISTINCT rt0.c3, t1.c1))))AND(((((t1.c0) BETWEEN (t1.c1) AND (t1.c1))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((((rt0.c2)AND(rt0.c2)))AND(t1.c0))))))) ORDER BY ((((rt0.c3)==(t1.c1))) NOT NULL)  NULLS FIRST, (((((((- (rt0.c1)))OR(((0xaee1ed6)OR(rt0.c0)))))AND((~ (0.3488779971907122)))))AND(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST, ((CAST(t1.c0 AS INTEGER))|((t1.c1 IN (t1.c0)))) DESC  NULLS FIRST LIMIT 0x2 INTERSECT SELECT * FROM t1, rt0 WHERE (((t1.c1) IS FALSE)) ORDER BY ((((rt0.c3)==(t1.c1))) NOT NULL)  NULLS FIRST, (((((((- (rt0.c1)))OR(((183377622)OR(rt0.c0)))))AND((~ (0.3488779971907122)))))AND(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST, ((CAST(t1.c0 AS INTEGER))|((t1.c1 IN (t1.c0)))) DESC  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND ('-917186638'))) IS TRUE)) ORDER BY (((((t1.c0) IS TRUE), (t1.c1 IN (t1.c1, t1.c1)), TRIM(DISTINCT t1.c0), t1.c0, ((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))OR('jk^?^诤o5￿')))OR(t1.c1))))>=((t1.c1 COLLATE BINARY, ((t1.c1)AND(t1.c0)), CAST(t1.c1 AS TEXT), SQLITE_SOURCE_ID(), CHANGES()))) DESC  NULLS FIRST, (- (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST, ((((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(NULL)))OR(t1.c0)))OR(t1.c0)))>=((x'6fca27' IN (t1.c1)))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c0) AND ('-917186638'))) IS TRUE))AND(((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1))) NOTNULL)))) ORDER BY ((((t1.c1)AND(x'e4d5')))<<(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))))  NULLS FIRST, NULLIF(DISTINCT GLOB(t1.c1, t1.c1), (t1.c1 IN ()))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL * FROM t1 WHERE (CASE ((t1.c1) ISNULL)  WHEN t1.c1 COLLATE BINARY THEN t1.c0 COLLATE NOCASE ELSE CAST(t1.c0 AS REAL) END) ORDER BY ((((t1.c1)AND(x'e4d5')))<<(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))))  NULLS FIRST, NULLIF(DISTINCT GLOB(t1.c1, t1.c1), (t1.c1 IN ()))  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND ('-917186638'))) IS TRUE)) ORDER BY (((((t1.c0) IS TRUE), (t1.c1 IN (t1.c1, t1.c1)), TRIM(DISTINCT t1.c0), t1.c0, ((((((((t1.c0)OR(t1.c1)))AND(t1.c1)))OR('jk^?^诤o5￿')))OR(t1.c1))))>=((t1.c1 COLLATE BINARY, ((t1.c1)AND(t1.c0)), CAST(t1.c1 AS TEXT), SQLITE_SOURCE_ID(), CHANGES()))) DESC  NULLS FIRST, (- (((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS FIRST, ((((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(NULL)))OR(t1.c0)))OR(t1.c0)))>=((x'6fca27' IN (t1.c1)))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c0) AND ('-917186638'))) IS TRUE))AND(((((((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c1))) NOTNULL)))) ORDER BY ((((t1.c1)AND(x'e4d5')))<<(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))))  NULLS FIRST, NULLIF(DISTINCT GLOB(t1.c1, t1.c1), (t1.c1 IN ()))  NULLS FIRST LIMIT 0x0 INTERSECT SELECT ALL * FROM t1 WHERE (CASE ((t1.c1) ISNULL)  WHEN t1.c1 COLLATE BINARY THEN t1.c0 COLLATE NOCASE ELSE CAST(t1.c0 AS REAL) END) ORDER BY ((((t1.c1)AND(x'e4d5')))<<(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1))))  NULLS FIRST, NULLIF(DISTINCT GLOB(t1.c1, t1.c1), (t1.c1 IN ()))  NULLS FIRST LIMIT 0;
SELECT * FROM t1 CROSS JOIN rt0 ON CASE CASE WHEN rt0.c3 THEN rt0.c3 END  WHEN (NOT ('0.6413199427468868')) THEN CAST(rt0.c1 AS TEXT) WHEN LOWER(DISTINCT rt0.c0) THEN rt0.c3 WHEN (((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3))) THEN NULLIF(DISTINCT t1.c1, 0.051848516289390245) END WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (t1.c0)) IN ())) ORDER BY (((t1.c0, t1.c0)) NOT BETWEEN (((- (rt0.c4)), (- (rt0.c4)))) AND ((((t1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c1)))))  NULLS LAST, ((((((rt0.c4) NOTNULL))AND(rt0.c4)))OR(((rt0.c2)/(t1.c1))))  NULLS LAST;
SELECT DISTINCT * FROM t1 CROSS JOIN rt0 ON CASE CASE WHEN rt0.c3 THEN rt0.c3 END  WHEN (NOT ('0.6413199427468868')) THEN CAST(rt0.c1 AS TEXT) WHEN LOWER(DISTINCT rt0.c0) THEN rt0.c3 WHEN (((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3))) THEN NULLIF(DISTINCT t1.c1, 0.051848516289390245) END WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (t1.c0)) IN ())) ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN CAST(t1.c1 AS REAL) WHEN ((t1.c0)<(rt0.c1)) THEN '' ELSE t1.c0 COLLATE RTRIM END INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN rt0 ON CASE CASE WHEN rt0.c3 THEN rt0.c3 END  WHEN (NOT ('0.6413199427468868')) THEN CAST(rt0.c1 AS TEXT) WHEN LOWER(DISTINCT rt0.c0) THEN rt0.c3 WHEN (((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3))) THEN NULLIF(DISTINCT t1.c1, 0.051848516289390245) END WHERE ((NOT (((rt0.c2)+(rt0.c0))))) ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN CAST(t1.c1 AS REAL) WHEN ((t1.c0)<(rt0.c1)) THEN '' ELSE t1.c0 COLLATE RTRIM END;
SELECT * FROM t1 CROSS JOIN rt0 ON CASE CASE WHEN rt0.c3 THEN rt0.c3 END  WHEN (NOT ('0.6413199427468868')) THEN CAST(rt0.c1 AS TEXT) WHEN LOWER(DISTINCT rt0.c0) THEN rt0.c3 WHEN (((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3))) THEN NULLIF(DISTINCT t1.c1, 0.051848516289390245) END WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (t1.c0)) IN ())) ORDER BY (((t1.c0, t1.c0)) NOT BETWEEN (((- (rt0.c4)), (- (rt0.c4)))) AND ((((t1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c1)))))  NULLS LAST, ((((((rt0.c4) NOTNULL))AND(rt0.c4)))OR(((rt0.c2)/(t1.c1))))  NULLS LAST;
SELECT DISTINCT * FROM t1 CROSS JOIN rt0 ON CASE CASE WHEN rt0.c3 THEN rt0.c3 END  WHEN (NOT ('0.6413199427468868')) THEN CAST(rt0.c1 AS TEXT) WHEN LOWER(DISTINCT rt0.c0) THEN rt0.c3 WHEN (((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3))) THEN NULLIF(DISTINCT t1.c1, 0.051848516289390245) END WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (t1.c0)) IN ())) ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN CAST(t1.c1 AS REAL) WHEN ((t1.c0)<(rt0.c1)) THEN '' ELSE t1.c0 COLLATE RTRIM END INTERSECT SELECT DISTINCT * FROM t1 CROSS JOIN rt0 ON CASE CASE WHEN rt0.c3 THEN rt0.c3 END  WHEN (NOT ('0.6413199427468868')) THEN CAST(rt0.c1 AS TEXT) WHEN LOWER(DISTINCT rt0.c0) THEN rt0.c3 WHEN (((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3))) THEN NULLIF(DISTINCT t1.c1, 0.051848516289390245) END WHERE ((NOT (((rt0.c2)+(rt0.c0))))) ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN CAST(t1.c1 AS REAL) WHEN ((t1.c0)<(rt0.c1)) THEN '' ELSE t1.c0 COLLATE RTRIM END;
SELECT ALL * FROM t1, rt0 WHERE (((LTRIM(rt0.c4))LIKE(rt0.c3))) ORDER BY ((HEX(DISTINCT rt0.c2))*(CASE WHEN t1.c0 THEN rt0.c4 ELSE rt0.c4 END)) DESC;
SELECT ALL * FROM t1, rt0 WHERE (((((LTRIM(rt0.c4))LIKE(rt0.c3)))AND(((((rt0.c3)IS(rt0.c1)))IS((((t1.c0, t1.c0))==((rt0.c2, t1.c0)))))))) ORDER BY (((((((rt0.c1, rt0.c3, rt0.c0)) BETWEEN ((rt0.c1, t1.c0, x'86')) AND (('s-', '836849508', rt0.c1))))OR(json_extract(rt0.c1, rt0.c3, rt0.c0))))OR((rt0.c2 IN (rt0.c3, t1.c0)))) ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1, rt0 WHERE (((LTRIM(rt0.c4))LIKE(rt0.c3))) ORDER BY ((HEX(DISTINCT rt0.c2))*(CASE WHEN t1.c0 THEN rt0.c4 ELSE rt0.c4 END)) DESC;
SELECT ALL * FROM t1, rt0 WHERE (((((LTRIM(rt0.c4))LIKE(rt0.c3)))AND(((((rt0.c3)IS(rt0.c1)))IS((((t1.c0, t1.c0))==((rt0.c2, t1.c0)))))))) ORDER BY (((((((rt0.c1, rt0.c3, rt0.c0)) BETWEEN ((rt0.c1, t1.c0, x'86')) AND (('s-', '836849508', rt0.c1))))OR(json_extract(rt0.c1, rt0.c3, rt0.c0))))OR((rt0.c2 IN (rt0.c3, t1.c0)))) ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))) NOTNULL)) ORDER BY rt0.c3  NULLS LAST, (((0.3219915149337286, rt0.c0, (- (0.0705345773644045))))<>((CASE WHEN t1.c0 THEN NULL WHEN rt0.c1 THEN rt0.c4 WHEN t1.c0 THEN t1.c1 END, ((rt0.c1) NOTNULL), ((rt0.c3)|(t1.c1))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))) NOTNULL)) ORDER BY rt0.c3  NULLS LAST, (((0.3219915149337286, rt0.c0, (- (0.0705345773644045))))!=((CASE WHEN t1.c0 THEN NULL WHEN rt0.c1 THEN rt0.c4 WHEN t1.c0 THEN t1.c1 END, ((rt0.c1) NOTNULL), ((rt0.c3)|(t1.c1))))) DESC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))) NOTNULL)) ORDER BY rt0.c3  NULLS LAST, (((0.3219915149337286, rt0.c0, (- (0.0705345773644045))))<>((CASE WHEN t1.c0 THEN NULL WHEN rt0.c1 THEN rt0.c4 WHEN t1.c0 THEN t1.c1 END, ((rt0.c1) NOTNULL), ((rt0.c3)|(t1.c1))))) DESC  NULLS FIRST;
SELECT DISTINCT * FROM t1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))) NOTNULL)) ORDER BY rt0.c3  NULLS LAST, (((0.3219915149337286, rt0.c0, (- (0.0705345773644045))))!=((CASE WHEN t1.c0 THEN NULL WHEN rt0.c1 THEN rt0.c4 WHEN t1.c0 THEN t1.c1 END, ((rt0.c1) NOTNULL), ((rt0.c3)|(t1.c1))))) DESC  NULLS FIRST LIMIT 0X0;
SELECT MIN(t1.c0) FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))) AND (((t1.c0)-(t1.c0)))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0))) AND (((t1.c0)-(t1.c0))))) ORDER BY ((((t1.c0) IS TRUE))-((t1.c0 IN (t1.c1))))  NULLS LAST, ((CAST('*' AS NUMERIC)) IS FALSE)  NULLS FIRST, (((((t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c1))))<((((t1.c0, t1.c1))!=((t1.c1, NULL))))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (NULL) LIMIT 0X2 INTERSECT SELECT COUNT(*) FROM rt0 WHERE ((+ (((((rt0.c2)AND(rt0.c2)))OR(rt0.c1))))) LIMIT 2;
SELECT MAX(rt0.c4) FROM rt0 WHERE ((rt0.c0 IN (rt0.c2)) COLLATE RTRIM) ORDER BY CAST((- (rt0.c4)) AS INTEGER) DESC  NULLS LAST;
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE ((rt0.c0 IN (rt0.c2)) COLLATE RTRIM) ORDER BY CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC) DESC LIMIT 0x3;
SELECT MAX(rt0.c4) FROM rt0 WHERE (CASE x''  WHEN ((((((((((rt0.c1)AND(rt0.c4)))AND(NULL)))AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c4)) THEN rt0.c2 COLLATE RTRIM WHEN x'ec' THEN (NOT (rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4)) END) ORDER BY ((CAST(rt0.c0 AS BLOB))!=(((rt0.c0) ISNULL)));
SELECT ALL MAX(rt0.c4) FROM rt0 WHERE (CASE x''  WHEN ((((((((((rt0.c1)AND(rt0.c4)))AND(NULL)))AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c4)) THEN rt0.c2 COLLATE RTRIM WHEN x'ec' THEN (NOT (rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4)) END) ORDER BY ((CAST(rt0.c0 AS BLOB))!=(((rt0.c0) ISNULL))) LIMIT 1;
SELECT ALL MIN(rt0.c4) FROM rt0, t1 WHERE (1835478611) ORDER BY (((rt0.c3)+(rt0.c2)) IN ())  NULLS FIRST, (((rt0.c3)) BETWEEN ((((rt0.c2)OR(t1.c0)))) AND ((HEX(DISTINCT rt0.c4)))) ASC  NULLS FIRST;
SELECT ALL MIN(rt0.c4) FROM rt0, t1 WHERE (((1835478611)AND((((+ (t1.c1))) BETWEEN (CASE WHEN '1755648222' THEN rt0.c0 WHEN rt0.c1 THEN 0Xffffffffca54d85c END) AND (((t1.c1)OR(rt0.c3))))))) ORDER BY (((rt0.c3)+(rt0.c2)) IN ())  NULLS FIRST, (((rt0.c3)) BETWEEN ((((rt0.c2)OR(t1.c0)))) AND ((HEX(DISTINCT rt0.c4)))) ASC  NULLS FIRST INTERSECT SELECT ALL MIN(rt0.c4) FROM rt0, t1 WHERE ((((((x'', rt0.c1))<((rt0.c4, t1.c0)))) ISNULL)) ORDER BY (((rt0.c3)+(rt0.c2)) IN ())  NULLS FIRST, (((rt0.c3)) BETWEEN ((((rt0.c2)OR(t1.c0)))) AND ((HEX(DISTINCT rt0.c4)))) ASC  NULLS FIRST;
SELECT MAX(rt0.c4) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)IS((((rt0.c4, rt0.c1))>=((930187380, rt0.c0)))))) ORDER BY '-1295626079'  NULLS FIRST;
SELECT MAX(rt0.c4) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)IS((((rt0.c4, rt0.c1))>((0x37718874, rt0.c0)))))) ORDER BY ((CASE WHEN 0.6023321742302574 THEN rt0.c4 END)IS(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) INTERSECT SELECT MAX(rt0.c4) FROM rt0 WHERE (UNLIKELY(DISTINCT (rt0.c0 IN ()))) ORDER BY ((CASE WHEN 0.6023321742302574 THEN rt0.c4 END)IS(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (PRINTF(((((((rt0.c4)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)), ((((rt0.c0)OR(rt0.c1)))OR(rt0.c4)), rt0.c4 COLLATE BINARY));
SELECT COUNT(*) FROM rt0 WHERE (PRINTF(((((((rt0.c4)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)), ((((rt0.c0)OR(rt0.c1)))OR(rt0.c4)), rt0.c4 COLLATE BINARY)) INTERSECT SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOTNULL))OR(rt0.c4)));
SELECT * FROM t1, rt0 WHERE ((CASE t1.c1  WHEN '836849508' THEN t1.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END IN (CAST(rt0.c4 AS TEXT))));
SELECT DISTINCT * FROM t1, rt0 WHERE ((CASE t1.c1  WHEN '836849508' THEN t1.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END IN (CAST(rt0.c4 AS TEXT)))) INTERSECT SELECT DISTINCT * FROM t1, rt0 WHERE (0.6939449725809034);
SELECT * FROM t1, rt0 WHERE ((CASE t1.c1  WHEN '836849508' THEN t1.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END IN (CAST(rt0.c4 AS TEXT))));
SELECT DISTINCT * FROM t1, rt0 WHERE ((CASE t1.c1  WHEN '836849508' THEN t1.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END IN (CAST(rt0.c4 AS TEXT)))) INTERSECT SELECT DISTINCT * FROM t1, rt0 WHERE (0.6939449725809034);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((+ (CAST(rt0.c1 AS BLOB)))) ORDER BY ((((t1.c0) BETWEEN (rt0.c4) AND (rt0.c1)))==(rt0.c3 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0 WHERE ((((+ (CAST(rt0.c1 AS BLOB))))AND(x'22d71a'))) ORDER BY (CASE WHEN NULL THEN rt0.c2 WHEN t1.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 END IN (((x'9d') NOT BETWEEN (t1.c0) AND (t1.c0)), (((rt0.c3))!=((t1.c0))))) DESC  NULLS FIRST, TRIM(DISTINCT rt0.c3) ASC  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((~ (t1.c0)) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (0.23459177945632792))))) ORDER BY '0.5157896416377543'  NULLS LAST, (((((((((t1.c1, t1.c0))>((t1.c1, t1.c0))))OR((((t1.c1))>((t1.c1))))))AND(((((((-0.0)AND(NULL)))AND(t1.c1)))AND(t1.c0)))))AND((NOT (t1.c0)))) DESC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((~ (t1.c0)) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (0.23459177945632792))))) ORDER BY t1.c1  NULLS FIRST, ((((t1.c1)>(t1.c0))) NOT BETWEEN (t1.c1) AND ((t1.c0 IN (t1.c0)))) ASC  NULLS LAST LIMIT 0x0 INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE (((LIKE(t1.c1, t1.c0))IS((((t1.c1, t1.c1, t1.c0))>=((t1.c1, NULL, t1.c0)))))) ORDER BY t1.c1  NULLS FIRST, ((((t1.c1)>(t1.c0))) NOT BETWEEN (t1.c1) AND ((t1.c0 IN (t1.c0)))) ASC  NULLS LAST LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 END)) AND (((~ (rt0.c4))))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((rt0.c4)) BETWEEN ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 END)) AND (((~ (rt0.c4))))))AND(((CASE WHEN rt0.c2 THEN rt0.c1 END) ISNULL)))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))-((((NULL, 0X823ae82, rt0.c4)) BETWEEN ((rt0.c0, rt0.c0, x'ee89')) AND ((rt0.c2, rt0.c0, rt0.c0))))));
SELECT COUNT(*) FROM t1, rt0 WHERE (CASE WHEN ((((((rt0.c2)AND(t1.c1)))OR(rt0.c1)))OR(rt0.c0)) THEN CASE WHEN rt0.c3 THEN t1.c1 WHEN rt0.c3 THEN rt0.c2 ELSE NULL END END) ORDER BY ((((rt0.c2) NOT NULL)) IS TRUE) ASC, ((((((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (t1.c1)))))AND(x'adbd'))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1, rt0 WHERE (((CASE WHEN ((((((rt0.c2)AND(t1.c1)))OR(rt0.c1)))OR(rt0.c0)) THEN CASE WHEN rt0.c3 THEN t1.c1 WHEN rt0.c3 THEN rt0.c2 ELSE NULL END END)AND(t1.c0))) ORDER BY ((((rt0.c2) NOT NULL)) IS TRUE) ASC, ((((((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (t1.c1)))))AND(x'adbd'))  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM t1, rt0 WHERE (((CASE WHEN rt0.c4 THEN '' WHEN t1.c0 THEN rt0.c2 ELSE t1.c1 END) IS TRUE)) ORDER BY ((((rt0.c2) NOT NULL)) IS TRUE) ASC, ((((((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (t1.c1)))))AND(x'adbd'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (GLOB(rt0.c2, ((rt0.c3)-(rt0.c2))));
SELECT COUNT(*) FROM rt0, t1 WHERE (((GLOB(rt0.c2, ((rt0.c3)-(rt0.c2))))AND(((CASE t1.c1  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c2 END) NOT BETWEEN ((((rt0.c4, rt0.c1, rt0.c0, t1.c0, rt0.c0, rt0.c2, rt0.c3, NULL))<((t1.c0, rt0.c1, x'6ccb', rt0.c2, rt0.c0, rt0.c1, rt0.c3, 0X1efee0f9)))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c1))))))) INTERSECT SELECT COUNT(*) FROM rt0, t1 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN ((t1.c1) BETWEEN (t1.c0) AND (rt0.c0)) WHEN ((rt0.c0)==(rt0.c1)) THEN (((('-1846584092')AND(rt0.c1)))OR('2144449229')) ELSE ((t1.c0) NOT BETWEEN (t1.c0) AND (rt0.c4)) END);
SELECT * FROM rt0, t1 WHERE (t1.c0);
SELECT DISTINCT * FROM rt0, t1 WHERE (t1.c0) ORDER BY ((((NULL)IS(0.8707488065752494))) BETWEEN (x'150fc2') AND (((((((t1.c0)OR(rt0.c1)))OR(rt0.c0)))OR(t1.c1))))  NULLS FIRST, (~ (((t1.c1)||(rt0.c0)))) DESC, ((rt0.c4) BETWEEN (((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c1))) AND ((((rt0.c0, rt0.c4, rt0.c2, rt0.c1)) NOT BETWEEN ((1658174764, t1.c1, t1.c0, '#')) AND ((t1.c0, t1.c0, t1.c1, t1.c0))))) ASC LIMIT 0X1;
SELECT * FROM rt0, t1 WHERE (t1.c0);
SELECT DISTINCT * FROM rt0, t1 WHERE (t1.c0) ORDER BY ((((NULL)IS(0.8707488065752494))) BETWEEN (x'150fc2') AND (((((((t1.c0)OR(rt0.c1)))OR(rt0.c0)))OR(t1.c1))))  NULLS FIRST, (~ (((t1.c1)||(rt0.c0)))) DESC, ((rt0.c4) BETWEEN (((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c1))) AND ((((rt0.c0, rt0.c4, rt0.c2, rt0.c1)) NOT BETWEEN ((1658174764, t1.c1, t1.c0, '#')) AND ((t1.c0, t1.c0, t1.c1, t1.c0))))) ASC LIMIT 0X1;
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c3)<<(t1.c0))) NOT BETWEEN (((rt0.c4)|(rt0.c2))) AND (2092788403)));
SELECT DISTINCT * FROM t1, rt0 WHERE (((((((rt0.c3)<<(t1.c0))) NOT BETWEEN (((rt0.c4)|(rt0.c2))) AND (2092788403)))AND((((rt0.c1 IN ())) BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(t1.c1))) AND ((t1.c1 IN (t1.c0))))))) ORDER BY NULL DESC  NULLS LAST LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1, rt0 WHERE ((((t1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE NOCASE) ORDER BY NULL DESC  NULLS LAST LIMIT 0x3;
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c3)<<(t1.c0))) NOT BETWEEN (((rt0.c4)|(rt0.c2))) AND (2092788403)));
SELECT DISTINCT * FROM t1, rt0 WHERE (((((((rt0.c3)<<(t1.c0))) NOT BETWEEN (((rt0.c4)|(rt0.c2))) AND (2092788403)))AND((((rt0.c1 IN ())) BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(t1.c1))) AND ((t1.c1 IN (t1.c0))))))) ORDER BY NULL DESC  NULLS LAST LIMIT 0X3 INTERSECT SELECT DISTINCT * FROM t1, rt0 WHERE ((((t1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE NOCASE) ORDER BY NULL DESC  NULLS LAST LIMIT 0x3;
SELECT ALL COUNT(*) FROM rt0, t1 NOT INDEXED WHERE (json_insert(((rt0.c4) IS FALSE), ((rt0.c1) IS TRUE), ((rt0.c0) NOTNULL), ((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) ORDER BY CAST(rt0.c0 AS REAL), ((INSTR(t1.c1, rt0.c4))<<((NOT (rt0.c3)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (json_insert(((rt0.c4) IS FALSE), ((rt0.c1) IS TRUE), ((rt0.c0) NOTNULL), ((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) ORDER BY (((rt0.c0) NOT NULL) IN ())  NULLS LAST, ((((rt0.c2)AND(rt0.c4)))OR(t1.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))AND(0.27382307138489215)))OR((((t1.c1, rt0.c2))<((2.092788403E9, rt0.c0))))) ASC  NULLS LAST LIMIT 0X0;
SELECT MIN(rt0.c1) FROM t1, rt0 WHERE ((+ ((~ (rt0.c3))))) ORDER BY (((rt0.c2 IN ()))/(CAST(t1.c0 AS REAL)))  NULLS FIRST, LIKELIHOOD(DISTINCT ((rt0.c4)*(rt0.c0)), (((t1.c0, rt0.c1)) BETWEEN (('480900986', t1.c0)) AND ((t1.c1, rt0.c4)))) ASC  NULLS LAST;
SELECT DISTINCT MIN(rt0.c1) FROM t1, rt0 WHERE ((((+ ((~ (rt0.c3)))))AND(CAST(t1.c1 COLLATE NOCASE AS NUMERIC)))) ORDER BY (((rt0.c2 IN ()))/(CAST(t1.c0 AS REAL)))  NULLS FIRST, LIKELIHOOD(DISTINCT ((rt0.c4)*(rt0.c0)), (((t1.c0, rt0.c1)) BETWEEN (('480900986', t1.c0)) AND ((t1.c1, rt0.c4)))) ASC  NULLS LAST;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (((((((((((rt0.c2 COLLATE NOCASE)AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 WHEN '^\V䟗䨞H' THEN rt0.c4 END)))OR(rt0.c0 COLLATE NOCASE)))OR((0.8981258170161772 IN ()))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) ORDER BY (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT MIN(rt0.c0) FROM rt0 WHERE (((((((((((rt0.c2 COLLATE NOCASE)AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 WHEN '^\V䟗䨞H' THEN rt0.c4 END)))OR(rt0.c0 COLLATE NOCASE)))OR((0.8981258170161772 IN ()))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) ORDER BY ((((UPPER(rt0.c4))OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))))AND(json_array(rt0.c3, rt0.c1, rt0.c2))) ASC  NULLS LAST;
SELECT * FROM rt0, t1 WHERE ((NOT ((+ (rt0.c2))))) ORDER BY (- (((rt0.c3)+(rt0.c1)))), (+ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (t1.c1)))) DESC  NULLS LAST, (((+ (rt0.c3)))<=(((t1.c1)>=(rt0.c4)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT ((+ (rt0.c2))))) ORDER BY (- (((rt0.c3)+(rt0.c1)))), (+ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (t1.c1)))) DESC  NULLS LAST, (((+ (rt0.c3)))<=(((t1.c1)>=(rt0.c4)))) ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE ((json_remove(rt0.c0, rt0.c0, rt0.c3) IN (((rt0.c3)>(rt0.c4))))) ORDER BY (- (((rt0.c3)+(rt0.c1)))), (+ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (t1.c1)))) DESC  NULLS LAST, (((+ (rt0.c3)))<=(((t1.c1)>=(rt0.c4)))) ASC  NULLS FIRST LIMIT 0;
SELECT * FROM rt0, t1 WHERE ((NOT ((+ (rt0.c2))))) ORDER BY (- (((rt0.c3)+(rt0.c1)))), (+ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (t1.c1)))) DESC  NULLS LAST, (((+ (rt0.c3)))<=(((t1.c1)>=(rt0.c4)))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT ((+ (rt0.c2))))) ORDER BY (- (((rt0.c3)+(rt0.c1)))), (+ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (t1.c1)))) DESC  NULLS LAST, (((+ (rt0.c3)))<=(((t1.c1)>=(rt0.c4)))) ASC  NULLS FIRST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE ((json_remove(rt0.c0, rt0.c0, rt0.c3) IN (((rt0.c3)>(rt0.c4))))) ORDER BY (- (((rt0.c3)+(rt0.c1)))), (+ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (t1.c1)))) DESC  NULLS LAST, (((+ (rt0.c3)))<=(((t1.c1)>=(rt0.c4)))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((NULL)>(CAST(t1.c1 AS NUMERIC)))) ORDER BY (((((t1.c1)*(t1.c0)), t1.c0 COLLATE RTRIM, ((t1.c0)+(t1.c1)), t1.c0 COLLATE NOCASE))=((t1.c0, ((((t1.c1)OR(t1.c1)))OR(t1.c1)), NULL, CAST(t1.c1 AS INTEGER)))) DESC;
SELECT ALL * FROM t1 WHERE (((((NULL)>(CAST(t1.c1 AS NUMERIC))))AND(('-303263341' IN ((- (t1.c0)), t1.c0))))) ORDER BY (((((t1.c1)*(t1.c0)), t1.c0 COLLATE RTRIM, ((t1.c0)+(t1.c1)), t1.c0 COLLATE NOCASE))=((t1.c0, ((((t1.c1)OR(t1.c1)))OR(t1.c1)), NULL, CAST(t1.c1 AS INTEGER)))) DESC INTERSECT SELECT * FROM t1 WHERE ((((0xffffffff979730a1))>((((t1.c1) NOTNULL))))) ORDER BY (((((t1.c1)*(t1.c0)), t1.c0 COLLATE RTRIM, ((t1.c0)+(t1.c1)), t1.c0 COLLATE NOCASE))=((t1.c0, ((((t1.c1)OR(t1.c1)))OR(t1.c1)), NULL, CAST(t1.c1 AS INTEGER)))) DESC;
SELECT ALL * FROM t1 WHERE (((NULL)>(CAST(t1.c1 AS NUMERIC)))) ORDER BY (((((t1.c1)*(t1.c0)), t1.c0 COLLATE RTRIM, ((t1.c0)+(t1.c1)), t1.c0 COLLATE NOCASE))=((t1.c0, ((((t1.c1)OR(t1.c1)))OR(t1.c1)), NULL, CAST(t1.c1 AS INTEGER)))) DESC;
SELECT ALL * FROM t1 WHERE (((((NULL)>(CAST(t1.c1 AS NUMERIC))))AND(('-303263341' IN ((- (t1.c0)), t1.c0))))) ORDER BY (((((t1.c1)*(t1.c0)), t1.c0 COLLATE RTRIM, ((t1.c0)+(t1.c1)), t1.c0 COLLATE NOCASE))=((t1.c0, ((((t1.c1)OR(t1.c1)))OR(t1.c1)), NULL, CAST(t1.c1 AS INTEGER)))) DESC INTERSECT SELECT * FROM t1 WHERE ((((0xffffffff979730a1))>((((t1.c1) NOTNULL))))) ORDER BY (((((t1.c1)*(t1.c0)), t1.c0 COLLATE RTRIM, ((t1.c0)+(t1.c1)), t1.c0 COLLATE NOCASE))=((t1.c0, ((((t1.c1)OR(t1.c1)))OR(t1.c1)), NULL, CAST(t1.c1 AS INTEGER)))) DESC;
SELECT ALL * FROM rt0, t1 WHERE (((0.4008083035734452)<<(((t1.c0) ISNULL)))) ORDER BY CAST((+ (rt0.c4)) AS BLOB)  NULLS FIRST;
SELECT DISTINCT * FROM rt0, t1 WHERE (((((0.4008083035734452)<<(((t1.c0) ISNULL))))AND(CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 END AS BLOB)))) ORDER BY ((HEX(DISTINCT rt0.c4))>=(CAST(t1.c0 AS TEXT))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, t1 WHERE (((0.4008083035734452)<<(((t1.c0) ISNULL)))) ORDER BY CAST((+ (rt0.c4)) AS BLOB)  NULLS FIRST;
SELECT DISTINCT * FROM rt0, t1 WHERE (((((0.4008083035734452)<<(((t1.c0) ISNULL))))AND(CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 END AS BLOB)))) ORDER BY ((HEX(DISTINCT rt0.c4))>=(CAST(t1.c0 AS TEXT))) ASC  NULLS LAST;
SELECT MIN(t1.c0) FROM rt0, t1 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c4 AS TEXT)) IS TRUE), ((((rt0.c3)AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT DISTINCT MIN(t1.c0) FROM rt0, t1 WHERE (((rt0.c0)AND(CASE CAST(rt0.c3 AS NUMERIC)  WHEN CASE rt0.c1  WHEN rt0.c4 THEN '602314073' WHEN t1.c1 THEN rt0.c0 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN rt0.c1 ELSE NULL END THEN rt0.c4 WHEN (NOT (t1.c0)) THEN ((rt0.c3) BETWEEN ('Aa
') AND (rt0.c2)) END))) ORDER BY (((((t1.c0)||(rt0.c1))))!=((((rt0.c2)<=(rt0.c0))))) ASC  NULLS LAST, (((rt0.c2)) BETWEEN ((((t1.c0) BETWEEN (rt0.c3) AND (t1.c1)))) AND (((rt0.c4 IN ())))) ASC, 0.832876717444861;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) NOTNULL), ((rt0.c4) IS FALSE), (NOT (rt0.c4))))>=((((((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(x'')), CAST(rt0.c1 AS TEXT), rt0.c2))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1) NOTNULL), ((rt0.c4) IS FALSE), (NOT (rt0.c4))))>=((((((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(x'')), CAST(rt0.c1 AS TEXT), rt0.c2)))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) LIMIT 0x3;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) NOTNULL), ((rt0.c4) IS FALSE), (NOT (rt0.c4))))>=((((((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(x'')), CAST(rt0.c1 AS TEXT), rt0.c2))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1) NOTNULL), ((rt0.c4) IS FALSE), (NOT (rt0.c4))))>=((((((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND(x'')), CAST(rt0.c1 AS TEXT), rt0.c2)))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) LIMIT 0x3;
SELECT * FROM rt0, t1 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END))) ORDER BY TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (NULL)), CAST(t1.c1 AS REAL))  NULLS LAST, t1.c1 ASC;
SELECT ALL * FROM rt0, t1 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END))) ORDER BY TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (NULL)), CAST(t1.c1 AS REAL))  NULLS LAST, t1.c1 ASC INTERSECT SELECT * FROM rt0, t1 WHERE ((~ (((t1.c0)+(rt0.c4))))) ORDER BY TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (NULL)), CAST(t1.c1 AS REAL))  NULLS LAST, t1.c1 ASC;
SELECT * FROM rt0, t1 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END))) ORDER BY TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (NULL)), CAST(t1.c1 AS REAL))  NULLS LAST, t1.c1 ASC;
SELECT ALL * FROM rt0, t1 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END))) ORDER BY TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (NULL)), CAST(t1.c1 AS REAL))  NULLS LAST, t1.c1 ASC INTERSECT SELECT * FROM rt0, t1 WHERE ((~ (((t1.c0)+(rt0.c4))))) ORDER BY TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (NULL)), CAST(t1.c1 AS REAL))  NULLS LAST, t1.c1 ASC;
SELECT ALL * FROM rt0, t1 WHERE (((CAST(t1.c1 AS NUMERIC))>(CAST(rt0.c3 AS BLOB)))) ORDER BY ((((rt0.c3)>(rt0.c4)))IS NOT(((rt0.c4) NOTNULL)))  NULLS LAST, ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN '0.23459177945632792' END)+(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST, ((((t1.c0) ISNULL)) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c3) NOT BETWEEN (0.6344155072486314) AND (rt0.c4))))  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (((((CAST(t1.c1 AS NUMERIC))>(CAST(rt0.c3 AS BLOB))))AND((((rt0.c2, t1.c1, rt0.c1, rt0.c2))>=((t1.c1, rt0.c2, rt0.c3, rt0.c3))) COLLATE BINARY))) ORDER BY x'04' ASC, TRIM(DISTINCT CASE WHEN rt0.c4 THEN t1.c1 WHEN rt0.c3 THEN rt0.c2 ELSE t1.c1 END, ((t1.c0) IS FALSE)) ASC LIMIT 2 INTERSECT SELECT * FROM rt0, t1 WHERE ((((rt0.c4, t1.c0, t1.c1, t1.c0, rt0.c4, rt0.c3)) NOT BETWEEN ((highlight(rt0.c3, t1.c0, rt0.c3, rt0.c3), t1.c1, ((t1.c1) ISNULL), t1.c1, rt0.c1 COLLATE RTRIM, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))) AND ((CASE WHEN rt0.c3 THEN t1.c0 ELSE rt0.c0 END, '9', 0.3219915149337286, (- (rt0.c0)), ((rt0.c3) NOTNULL), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)))))) ORDER BY x'04' ASC, TRIM(DISTINCT CASE WHEN rt0.c4 THEN t1.c1 WHEN rt0.c3 THEN rt0.c2 ELSE t1.c1 END, ((t1.c0) IS FALSE)) ASC LIMIT 0X2;
SELECT ALL * FROM rt0, t1 WHERE (((CAST(t1.c1 AS NUMERIC))>(CAST(rt0.c3 AS BLOB)))) ORDER BY ((((rt0.c3)>(rt0.c4)))IS NOT(((rt0.c4) NOTNULL)))  NULLS LAST, ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN '0.23459177945632792' END)+(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST, ((((t1.c0) ISNULL)) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c3) NOT BETWEEN (0.6344155072486314) AND (rt0.c4))))  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (((((CAST(t1.c1 AS NUMERIC))>(CAST(rt0.c3 AS BLOB))))AND((((rt0.c2, t1.c1, rt0.c1, rt0.c2))>=((t1.c1, rt0.c2, rt0.c3, rt0.c3))) COLLATE BINARY))) ORDER BY x'04' ASC, TRIM(DISTINCT CASE WHEN rt0.c4 THEN t1.c1 WHEN rt0.c3 THEN rt0.c2 ELSE t1.c1 END, ((t1.c0) IS FALSE)) ASC LIMIT 2 INTERSECT SELECT * FROM rt0, t1 WHERE ((((rt0.c4, t1.c0, t1.c1, t1.c0, rt0.c4, rt0.c3)) NOT BETWEEN ((highlight(rt0.c3, t1.c0, rt0.c3, rt0.c3), t1.c1, ((t1.c1) ISNULL), t1.c1, rt0.c1 COLLATE RTRIM, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))) AND ((CASE WHEN rt0.c3 THEN t1.c0 ELSE rt0.c0 END, '9', 0.3219915149337286, (- (rt0.c0)), ((rt0.c3) NOTNULL), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)))))) ORDER BY x'04' ASC, TRIM(DISTINCT CASE WHEN rt0.c4 THEN t1.c1 WHEN rt0.c3 THEN rt0.c2 ELSE t1.c1 END, ((t1.c0) IS FALSE)) ASC LIMIT 0X2;
SELECT ALL MIN(t1.c0) FROM rt0 CROSS JOIN t1 ON (+ ((((rt0.c1, t1.c1)) BETWEEN ((rt0.c3, rt0.c3)) AND ((rt0.c2, rt0.c1))))) WHERE (CASE WHEN NULL THEN ((rt0.c3)GLOB(rt0.c3)) WHEN ((rt0.c0)||(rt0.c0)) THEN ((rt0.c0)&(rt0.c4)) WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c1)) WHEN ((t1.c1)<=(rt0.c2)) THEN ('y' IN ()) WHEN ((t1.c1)GLOB('480900986')) THEN CASE 0.46136744788972317  WHEN rt0.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END END) ORDER BY (~ ((- (rt0.c4)))), (((t1.c1, rt0.c3, 0.32458390210425625, rt0.c1)) BETWEEN ((rt0.c1, rt0.c1, rt0.c3, t1.c1)) AND ((t1.c0, '}即J6', t1.c0, rt0.c0))) COLLATE BINARY DESC;
SELECT ALL MIN(t1.c0) FROM rt0 CROSS JOIN t1 ON (+ ((((rt0.c1, t1.c1)) BETWEEN ((rt0.c3, rt0.c3)) AND ((rt0.c2, rt0.c1))))) WHERE (CASE WHEN NULL THEN ((rt0.c3)GLOB(rt0.c3)) WHEN ((rt0.c0)||(rt0.c0)) THEN ((rt0.c0)&(rt0.c4)) WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c1)) WHEN ((t1.c1)<(rt0.c2)) THEN ('y' IN ()) WHEN ((t1.c1)GLOB('480900986')) THEN CASE 0.46136744788972317  WHEN rt0.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END END) ORDER BY CAST(rt0.c4 AS TEXT) COLLATE BINARY ASC  NULLS FIRST, (('P') IS TRUE) ASC;
SELECT ALL * FROM t1, rt0 WHERE (UPPER(DISTINCT t1.c0));
SELECT DISTINCT * FROM t1, rt0 WHERE (UPPER(DISTINCT t1.c0));
SELECT ALL * FROM t1, rt0 WHERE (UPPER(DISTINCT t1.c0));
SELECT DISTINCT * FROM t1, rt0 WHERE (UPPER(DISTINCT t1.c0));
SELECT MIN(rt0.c1) FROM rt0 WHERE (UNLIKELY(DISTINCT ((((rt0.c0)OR(rt0.c4)))AND(rt0.c4)))) ORDER BY (rt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (((UNLIKELY(DISTINCT ((((rt0.c0)OR(rt0.c4)))AND(rt0.c4))))AND(CASE (((rt0.c3))<=((rt0.c2)))  WHEN NULL THEN rt0.c3 ELSE CAST(NULL AS BLOB) END))) ORDER BY (rt0.c0 COLLATE RTRIM IN ()) DESC INTERSECT SELECT ALL MIN(rt0.c1) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2, NULL, 'a5KML绣*')))>=((rt0.c4 IN (rt0.c4, rt0.c0))))) ORDER BY (rt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT MAX(t1.c1) FROM rt0, t1 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (NULL) AND (((t1.c0)GLOB(rt0.c2))))) ORDER BY ((((rt0.c3) BETWEEN (0.6195823402504455) AND (rt0.c0))) NOTNULL)  NULLS FIRST, ((TOTAL_CHANGES()) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c3, rt0.c1)) AND ((((rt0.c1, t1.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, 0.3654460488955963)) AND ((t1.c0, rt0.c4, t1.c1)))))  NULLS LAST;
SELECT ALL MAX(t1.c1) FROM rt0, t1 WHERE (((((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (NULL) AND (((t1.c0)GLOB(rt0.c2)))))AND(rt0.c3))) ORDER BY ((((rt0.c3) BETWEEN (0.6195823402504455) AND (rt0.c0))) NOTNULL)  NULLS FIRST, ((TOTAL_CHANGES()) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c3, rt0.c1)) AND ((((rt0.c1, t1.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, 0.3654460488955963)) AND ((t1.c0, rt0.c4, t1.c1)))))  NULLS LAST INTERSECT SELECT MAX(t1.c1) FROM rt0, t1 WHERE ((((x'a2', (- (rt0.c3)), ((((rt0.c2)OR('0.6939449725809034')))OR(rt0.c1)), t1.c1 COLLATE RTRIM))=(((((t1.c1, rt0.c0, t1.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, x'ed59')) AND ((rt0.c0, rt0.c2, rt0.c1))), t1.c0 COLLATE NOCASE, ((t1.c1) NOTNULL), rt0.c4)))) ORDER BY ((((rt0.c3) BETWEEN (0.6195823402504455) AND (rt0.c0))) NOTNULL)  NULLS FIRST, ((TOTAL_CHANGES()) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c3, rt0.c1)) AND ((((rt0.c1, t1.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, 0.3654460488955963)) AND ((t1.c0, rt0.c4, t1.c1)))))  NULLS LAST;
SELECT ALL MIN(rt0.c2) FROM rt0 CROSS JOIN t1 ON (((((((t1.c1 IN ()))OR('')))AND(((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))AND(0.2829735183396057)))AND(rt0.c0)))AND(rt0.c4)))))OR(CAST(rt0.c3 AS BLOB))) WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN 'I2' WHEN rt0.c4 THEN x'48' END) AND (((rt0.c2) ISNULL)))) ORDER BY (((((t1.c0)IS(rt0.c2))))>=(((rt0.c2 IN (rt0.c2))))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(rt0.c2) FROM rt0 CROSS JOIN t1 ON (((((((t1.c1 IN ()))OR('')))AND(((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))AND(0.2829735183396057)))AND(rt0.c0)))AND(rt0.c4)))))OR(CAST(rt0.c3 AS BLOB))) WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN 'I2' WHEN rt0.c4 THEN x'48' END) AND (((rt0.c2) ISNULL)))) ORDER BY (((((t1.c0)IS(rt0.c2))))>=(((rt0.c2 IN (rt0.c2))))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 CROSS JOIN t1 ON (((((((t1.c1 IN ()))OR('')))AND(((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))AND(0.2829735183396057)))AND(rt0.c0)))AND(rt0.c4)))))OR(CAST(rt0.c3 AS BLOB))) WHERE (((((rt0.c0) ISNULL))OR(CAST(t1.c0 AS BLOB)))) ORDER BY (((((t1.c0)IS(rt0.c2))))>=(((rt0.c2 IN (rt0.c2))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 CROSS JOIN t1 ON (t1.c1 IN (t1.c0)) COLLATE BINARY WHERE ((((('0.832876717444861') BETWEEN (t1.c0) AND (rt0.c3))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (NOT (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST, ((1.835478611E9 COLLATE RTRIM)OR((~ (x'56'))))  NULLS LAST;
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (t1.c1 IN (t1.c0)) COLLATE BINARY WHERE ((((((('0.832876717444861') BETWEEN (t1.c0) AND (rt0.c3))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((t1.c1 IN (rt0.c3)))IS(x''))))) ORDER BY (NOT (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST, ((1.835478611E9 COLLATE RTRIM)OR((~ (x'56'))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (t1.c1 IN (t1.c0)) COLLATE BINARY WHERE (UNLIKELY(DISTINCT (((rt0.c2))>((rt0.c2))))) ORDER BY (NOT (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST, ((1.835478611E9 COLLATE RTRIM)OR((~ (x'56'))))  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN t1 ON (t1.c1 IN (t1.c0)) COLLATE BINARY WHERE ((((('0.832876717444861') BETWEEN (t1.c0) AND (rt0.c3))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (NOT (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST, ((1.835478611E9 COLLATE RTRIM)OR((~ (x'56'))))  NULLS LAST;
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (t1.c1 IN (t1.c0)) COLLATE BINARY WHERE ((((((('0.832876717444861') BETWEEN (t1.c0) AND (rt0.c3))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((t1.c1 IN (rt0.c3)))IS(x''))))) ORDER BY (NOT (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST, ((1.835478611E9 COLLATE RTRIM)OR((~ (x'56'))))  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (t1.c1 IN (t1.c0)) COLLATE BINARY WHERE (UNLIKELY(DISTINCT (((rt0.c2))>((rt0.c2))))) ORDER BY (NOT (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST, ((1.835478611E9 COLLATE RTRIM)OR((~ (x'56'))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (NULL) INTERSECT SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)OR(rt0.c4)))AND(rt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE (CAST(rt0.c1 AS TEXT));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE (CAST(rt0.c1 AS TEXT)) LIMIT 0;
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE (CAST(rt0.c1 AS TEXT));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE (CAST(rt0.c1 AS TEXT)) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2)-(rt0.c4))) NOT BETWEEN ((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, 0.8258877813871666)))) AND (((rt0.c0)<=(rt0.c0)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2)-(rt0.c4))) NOT BETWEEN ((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, 0.8258877813871666)))) AND (((rt0.c0)<=(rt0.c0)))) DESC  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE ('1752223092') ORDER BY ((((rt0.c2)-(rt0.c4))) NOT BETWEEN ((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, 0.8258877813871666)))) AND (((rt0.c0)<=(rt0.c0)))) DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2)-(rt0.c4))) NOT BETWEEN ((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, 0.8258877813871666)))) AND (((rt0.c0)<=(rt0.c0)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2)-(rt0.c4))) NOT BETWEEN ((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, 0.8258877813871666)))) AND (((rt0.c0)<=(rt0.c0)))) DESC  NULLS LAST LIMIT 2 INTERSECT SELECT * FROM rt0 WHERE ('1752223092') ORDER BY ((((rt0.c2)-(rt0.c4))) NOT BETWEEN ((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, 0.8258877813871666)))) AND (((rt0.c0)<=(rt0.c0)))) DESC  NULLS LAST LIMIT 2;
SELECT ALL * FROM rt0, t1 WHERE (NULL) ORDER BY 548951436 DESC, ((rt0.c2)LIKE(rt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0, t1 WHERE (NULL) ORDER BY 'y*Z(]5n7U' ASC LIMIT 0X2;
SELECT ALL * FROM rt0, t1 WHERE (NULL) ORDER BY 548951436 DESC, ((rt0.c2)LIKE(rt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE ((~ (rt0.c3 COLLATE RTRIM))) ORDER BY CASE WHEN ((((((((t1.c1)AND(rt0.c0)))OR(rt0.c4)))AND(NULL)))OR(rt0.c3)) THEN t1.c0 END DESC;
SELECT DISTINCT * FROM rt0, t1 WHERE ((~ (rt0.c3 COLLATE RTRIM))) ORDER BY CASE WHEN ((((((((t1.c1)AND(rt0.c0)))OR(rt0.c4)))AND(NULL)))OR(rt0.c3)) THEN t1.c0 END DESC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE (((NOT (t1.c1)) IN (NULL))) ORDER BY CASE WHEN ((((((((t1.c1)AND(rt0.c0)))OR(rt0.c4)))AND(NULL)))OR(rt0.c3)) THEN t1.c0 END DESC LIMIT 0;
SELECT * FROM rt0, t1 WHERE ((~ (rt0.c3 COLLATE RTRIM))) ORDER BY CASE WHEN ((((((((t1.c1)AND(rt0.c0)))OR(rt0.c4)))AND(NULL)))OR(rt0.c3)) THEN t1.c0 END DESC;
SELECT DISTINCT * FROM rt0, t1 WHERE ((~ (rt0.c3 COLLATE RTRIM))) ORDER BY CASE WHEN ((((((((t1.c1)AND(rt0.c0)))OR(rt0.c4)))AND(NULL)))OR(rt0.c3)) THEN t1.c0 END DESC LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE (((NOT (t1.c1)) IN (NULL))) ORDER BY CASE WHEN ((((((((t1.c1)AND(rt0.c0)))OR(rt0.c4)))AND(NULL)))OR(rt0.c3)) THEN t1.c0 END DESC LIMIT 0;
SELECT ALL * FROM t1 WHERE ((((~ (t1.c1))) ISNULL));
SELECT DISTINCT * FROM t1 WHERE ((((((~ (t1.c1))) ISNULL))AND(((((((t1.c0)AND(t1.c1)))OR(t1.c1))) BETWEEN ((+ (t1.c1))) AND (((t1.c1) IS TRUE)))))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, t1.c1, 0.45307052521167346)) NOT BETWEEN ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN 0.27382307138489215 THEN t1.c1 ELSE t1.c0 END, (+ (t1.c1)), LIKELY(t1.c1))) AND ((((t1.c1)/(t1.c1)), t1.c0 COLLATE NOCASE, (((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))))) LIMIT 2;
SELECT ALL * FROM t1 WHERE ((((~ (t1.c1))) ISNULL));
SELECT DISTINCT * FROM t1 WHERE ((((((~ (t1.c1))) ISNULL))AND(((((((t1.c0)AND(t1.c1)))OR(t1.c1))) BETWEEN ((+ (t1.c1))) AND (((t1.c1) IS TRUE)))))) LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, t1.c1, 0.45307052521167346)) NOT BETWEEN ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN 0.27382307138489215 THEN t1.c1 ELSE t1.c0 END, (+ (t1.c1)), LIKELY(t1.c1))) AND ((((t1.c1)/(t1.c1)), t1.c0 COLLATE NOCASE, (((t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c1))))))) LIMIT 2;
SELECT MAX(t1.c0) FROM t1 WHERE ((((x'00' IN (2.092788403E9))) IS FALSE)) ORDER BY ((((((t1.c1)AND(t1.c1)))AND('.')))AND(((t1.c1) NOTNULL))) DESC  NULLS LAST, (('VJ')AND((t1.c1 IN ()))) DESC, t1.c0 DESC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((x'00' IN (2.092788403E9))) IS FALSE)) ORDER BY (((~ (t1.c1))) BETWEEN (((((((x'f8')AND(t1.c0)))OR(x'c2')))OR(t1.c1))) AND ((NOT (t1.c0)))) DESC  NULLS FIRST, (((t1.c1)>=(t1.c1)) IN (t1.c1))  NULLS LAST LIMIT 0;
SELECT MAX(rt0.c4) FROM rt0, t1 WHERE (((NULL)<>(NULL))) ORDER BY UPPER(t1.c0)  NULLS LAST;
SELECT ALL MAX(rt0.c4) FROM rt0, t1 WHERE (((NULL)<>(NULL))) ORDER BY UPPER(t1.c0)  NULLS LAST LIMIT 2;
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c1, t1.c0, rt0.c2))<>((rt0.c4, NULL, rt0.c0))) IN (((rt0.c2)-(NULL)), NULL)));
SELECT DISTINCT * FROM t1, rt0 WHERE (((((rt0.c1, t1.c0, rt0.c2))>((rt0.c4, NULL, rt0.c0))) IN (((rt0.c2)-(NULL)), NULL)));
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c1, t1.c0, rt0.c2))<>((rt0.c4, NULL, rt0.c0))) IN (((rt0.c2)-(NULL)), NULL)));
SELECT DISTINCT * FROM t1, rt0 WHERE (((((rt0.c1, t1.c0, rt0.c2))>((rt0.c4, NULL, rt0.c0))) IN (((rt0.c2)-(NULL)), NULL)));
SELECT ALL COUNT(*) FROM rt0, t1 NOT INDEXED WHERE ((CAST(t1.c1 AS NUMERIC) IN (CAST(rt0.c1 AS NUMERIC), ((rt0.c3) NOT BETWEEN (t1.c0) AND ('')))));
SELECT DISTINCT COUNT(*) FROM rt0, t1 WHERE ((((CAST(t1.c1 AS NUMERIC) IN (CAST(rt0.c1 AS NUMERIC), ((rt0.c3) NOT BETWEEN (t1.c0) AND ('')))))AND(((((t1.c0) NOTNULL))!=(rt0.c1)))));
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (t1.c1) ORDER BY '1404795806' COLLATE BINARY ASC, (('834317764')LIKE(((((((((rt0.c1)AND('J<8(L9')))AND(x'93')))AND(rt0.c2)))AND(0.27382307138489215))));
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (t1.c1) ORDER BY '1404795806' COLLATE BINARY ASC, (('834317764')LIKE(((((((((rt0.c1)AND('J<8(L9')))AND(x'93')))AND(rt0.c2)))AND(0.27382307138489215)))) LIMIT 0X3 INTERSECT SELECT ALL COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (((((((((((((((rt0.c0)AND(t1.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(t1.c1)))AND(rt0.c1)))AND(rt0.c2)) COLLATE NOCASE) ORDER BY '1404795806' COLLATE BINARY ASC, (('834317764')LIKE(((((((((rt0.c1)AND('J<8(L9')))AND(x'93')))AND(rt0.c2)))AND(0.27382307138489215)))) LIMIT 3;
SELECT * FROM t1, rt0 WHERE ('394806515');
SELECT DISTINCT * FROM t1, rt0 WHERE ((('394806515')AND('-307936728'))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1, rt0 NOT INDEXED WHERE (((((((t1.c1)OR(t1.c1)))AND(rt0.c1)))<<((((((('')AND(t1.c0)))AND(rt0.c1)))AND(rt0.c1))))) LIMIT 0x0;
SELECT * FROM t1, rt0 WHERE ('394806515');
SELECT DISTINCT * FROM t1, rt0 WHERE ((('394806515')AND('-307936728'))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1, rt0 NOT INDEXED WHERE (((((((t1.c1)OR(t1.c1)))AND(rt0.c1)))<<((((((('')AND(t1.c0)))AND(rt0.c1)))AND(rt0.c1))))) LIMIT 0x0;
SELECT * FROM t1 WHERE (t1.c0 COLLATE NOCASE);
SELECT DISTINCT * FROM t1 WHERE (t1.c0 COLLATE NOCASE) ORDER BY (t1.c1 IN ((((t1.c0))<((t1.c1)))))  NULLS FIRST, t1.c1, ((1.291462503E9)LIKE(-1.923149951E9)), ((NOT (t1.c0)) IN ((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1))), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((t1.c0 IN (t1.c1)) COLLATE RTRIM) ORDER BY (t1.c1 IN ((((t1.c0))<((t1.c1)))))  NULLS FIRST, t1.c1, ((1.291462503E9)LIKE(-1.923149951E9)), ((NOT (t1.c0)) IN ((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1))), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))) DESC  NULLS LAST LIMIT 0;
SELECT * FROM t1 WHERE (t1.c0 COLLATE NOCASE);
SELECT DISTINCT * FROM t1 WHERE (t1.c0 COLLATE NOCASE) ORDER BY (t1.c1 IN ((((t1.c0))<((t1.c1)))))  NULLS FIRST, t1.c1, ((1.291462503E9)LIKE(-1.923149951E9)), ((NOT (t1.c0)) IN ((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1))), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((t1.c0 IN (t1.c1)) COLLATE RTRIM) ORDER BY (t1.c1 IN ((((t1.c0))<((t1.c1)))))  NULLS FIRST, t1.c1, ((1.291462503E9)LIKE(-1.923149951E9)), ((NOT (t1.c0)) IN ((((t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c0)) AND ((t1.c0, t1.c1))), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)>>(rt0.c3)), rt0.c2, CAST(rt0.c0 AS INTEGER), NULL, (rt0.c3 IN ()), ((rt0.c4) NOT NULL), ((rt0.c4)%(rt0.c0))))>((((rt0.c4) ISNULL), ((rt0.c1) NOTNULL), ((rt0.c2) IS TRUE), (NULL IN (rt0.c0)), ((-309473613) BETWEEN (rt0.c3) AND (rt0.c0)), (~ (rt0.c3)), rt0.c0 COLLATE RTRIM))));
SELECT * FROM rt0 WHERE ((((((((rt0.c0)>>(rt0.c3)), rt0.c2, CAST(rt0.c0 AS INTEGER), NULL, (rt0.c3 IN ()), ((rt0.c4) NOT NULL), ((rt0.c4)%(rt0.c0))))>((((rt0.c4) ISNULL), ((rt0.c1) NOTNULL), ((rt0.c2) IS TRUE), (NULL IN (rt0.c0)), ((-309473613) BETWEEN (rt0.c3) AND (rt0.c0)), (~ (rt0.c3)), rt0.c0 COLLATE RTRIM))))AND(CASE WHEN (((rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c4)) AND ((rt0.c1, '9'))) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END THEN 913111213 END))) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE ((((((((((NOT (rt0.c1)))OR(rt0.c0)))AND(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 ELSE x'' END)))OR(NULL)))OR(LIKELY(DISTINCT rt0.c3)))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)>>(rt0.c3)), rt0.c2, CAST(rt0.c0 AS INTEGER), NULL, (rt0.c3 IN ()), ((rt0.c4) NOT NULL), ((rt0.c4)%(rt0.c0))))>((((rt0.c4) ISNULL), ((rt0.c1) NOTNULL), ((rt0.c2) IS TRUE), (NULL IN (rt0.c0)), ((-309473613) BETWEEN (rt0.c3) AND (rt0.c0)), (~ (rt0.c3)), rt0.c0 COLLATE RTRIM))));
SELECT * FROM rt0 WHERE ((((((((rt0.c0)>>(rt0.c3)), rt0.c2, CAST(rt0.c0 AS INTEGER), NULL, (rt0.c3 IN ()), ((rt0.c4) NOT NULL), ((rt0.c4)%(rt0.c0))))>((((rt0.c4) ISNULL), ((rt0.c1) NOTNULL), ((rt0.c2) IS TRUE), (NULL IN (rt0.c0)), ((-309473613) BETWEEN (rt0.c3) AND (rt0.c0)), (~ (rt0.c3)), rt0.c0 COLLATE RTRIM))))AND(CASE WHEN (((rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c4)) AND ((rt0.c1, '9'))) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END THEN 913111213 END))) LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE ((((((((((NOT (rt0.c1)))OR(rt0.c0)))AND(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 ELSE x'' END)))OR(NULL)))OR(LIKELY(DISTINCT rt0.c3)))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS BLOB)) NOT BETWEEN (((t1.c1) BETWEEN (t1.c0) AND ('-191892493'))) AND (((t1.c0)OR(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c1 AS BLOB)) NOT BETWEEN (((t1.c1) BETWEEN (t1.c0) AND ('-191892493'))) AND (((t1.c0)OR(t1.c1)))))AND(x''))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0 IN ())) ISNULL)) LIMIT 3;
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS BLOB)) NOT BETWEEN (((t1.c1) BETWEEN (t1.c0) AND ('-191892493'))) AND (((t1.c0)OR(t1.c1)))));
SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c1 AS BLOB)) NOT BETWEEN (((t1.c1) BETWEEN (t1.c0) AND ('-191892493'))) AND (((t1.c0)OR(t1.c1)))))AND(x''))) LIMIT 3 INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((t1.c0 IN ())) ISNULL)) LIMIT 3;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((rt0.c3 COLLATE BINARY) BETWEEN (((rt0.c0) NOT NULL)) AND ((((t1.c1, rt0.c1, rt0.c4, rt0.c3))<((rt0.c0, rt0.c4, t1.c1, rt0.c1))))));
SELECT COUNT(*) FROM t1, rt0 WHERE (((rt0.c3 COLLATE BINARY) BETWEEN (((rt0.c0) NOT NULL)) AND ((((t1.c1, rt0.c1, rt0.c4, rt0.c3))<((rt0.c0, rt0.c4, t1.c1, rt0.c1)))))) ORDER BY CAST(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))OR(t1.c0)) AS BLOB) DESC  NULLS FIRST, rt0.c2 INTERSECT SELECT COUNT(*) FROM t1, rt0 WHERE (((rt0.c4)-(rt0.c1)) COLLATE RTRIM) ORDER BY CAST(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)))OR(t1.c0)) AS BLOB) DESC  NULLS FIRST, rt0.c2;
SELECT ALL * FROM t1, rt0 WHERE (NULL) ORDER BY CASE WHEN ((t1.c0)%(rt0.c3)) THEN ((rt0.c2)>=(t1.c1)) WHEN CASE t1.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN t1.c0 WHEN rt0.c1 THEN 0x7ce8aea4 END THEN TRIM(rt0.c3, rt0.c2) WHEN ((t1.c0)&(rt0.c0)) THEN 1708274310 END ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1, rt0 WHERE (NULL) ORDER BY CASE WHEN ((t1.c0)%(rt0.c3)) THEN ((rt0.c2)>=(t1.c1)) WHEN CASE t1.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN t1.c0 WHEN rt0.c1 THEN 2095623844 END THEN TRIM(rt0.c3, rt0.c2) WHEN ((t1.c0)&(rt0.c0)) THEN 0x65d23286 END ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM t1, rt0 WHERE (NULL) ORDER BY CASE WHEN ((t1.c0)%(rt0.c3)) THEN ((rt0.c2)>=(t1.c1)) WHEN CASE t1.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN t1.c0 WHEN rt0.c1 THEN 0x7ce8aea4 END THEN TRIM(rt0.c3, rt0.c2) WHEN ((t1.c0)&(rt0.c0)) THEN 1708274310 END ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1, rt0 WHERE (NULL) ORDER BY CASE WHEN ((t1.c0)%(rt0.c3)) THEN ((rt0.c2)>=(t1.c1)) WHEN CASE t1.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN t1.c0 WHEN rt0.c1 THEN 2095623844 END THEN TRIM(rt0.c3, rt0.c2) WHEN ((t1.c0)&(rt0.c0)) THEN 0x65d23286 END ASC  NULLS FIRST LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (HEX(rt0.c3 COLLATE RTRIM)) ORDER BY CASE WHEN 194000076 THEN ((rt0.c2)<(rt0.c2)) END DESC;
SELECT DISTINCT * FROM rt0 WHERE (HEX(rt0.c3 COLLATE RTRIM)) ORDER BY CASE WHEN 0Xb9034cc THEN ((rt0.c2)<(rt0.c2)) END DESC;
SELECT ALL * FROM rt0 WHERE (HEX(rt0.c3 COLLATE RTRIM)) ORDER BY CASE WHEN 194000076 THEN ((rt0.c2)<(rt0.c2)) END DESC;
SELECT DISTINCT * FROM rt0 WHERE (HEX(rt0.c3 COLLATE RTRIM)) ORDER BY CASE WHEN 0Xb9034cc THEN ((rt0.c2)<(rt0.c2)) END DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) IS FALSE))&((+ (rt0.c1))))) ORDER BY CASE WHEN (('-396580640')AND(rt0.c2)) THEN NULL END ASC, ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3))) IS FALSE) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((rt0.c4) IS FALSE))&((+ (rt0.c1)))))AND((((rt0.c3, (('OYbﻪ') NOT BETWEEN (rt0.c4) AND (rt0.c0))))<((COALESCE(DISTINCT rt0.c1, rt0.c1, 0.29229008402691026), ((rt0.c0)OR('')))))))) ORDER BY ((((((rt0.c4 COLLATE RTRIM)OR(((rt0.c4) IS TRUE))))OR(((rt0.c4) NOTNULL))))AND(rt0.c3)) DESC  NULLS LAST LIMIT 0X1 INTERSECT SELECT * FROM rt0 WHERE ((((rt0.c2, CAST('-1923149951' AS INTEGER), ((rt0.c4)LIKE(0X64193077)), CASE WHEN rt0.c3 THEN rt0.c1 END, DATETIME(rt0.c0, rt0.c1, rt0.c0)))>(((((rt0.c2, rt0.c0))!=((rt0.c3, rt0.c1))), ((rt0.c0)%(rt0.c2)), (rt0.c3 IN (0.705173004305304, rt0.c4)), HEX(rt0.c2), ((rt0.c1) ISNULL))))) ORDER BY ((((((rt0.c4 COLLATE RTRIM)OR(((rt0.c4) IS TRUE))))OR(((rt0.c4) NOTNULL))))AND(rt0.c3)) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) IS FALSE))&((+ (rt0.c1))))) ORDER BY CASE WHEN (('-396580640')AND(rt0.c2)) THEN NULL END ASC, ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3))) IS FALSE) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((rt0.c4) IS FALSE))&((+ (rt0.c1)))))AND((((rt0.c3, (('OYbﻪ') NOT BETWEEN (rt0.c4) AND (rt0.c0))))<((COALESCE(DISTINCT rt0.c1, rt0.c1, 0.29229008402691026), ((rt0.c0)OR('')))))))) ORDER BY ((((((rt0.c4 COLLATE RTRIM)OR(((rt0.c4) IS TRUE))))OR(((rt0.c4) NOTNULL))))AND(rt0.c3)) DESC  NULLS LAST LIMIT 0X1 INTERSECT SELECT * FROM rt0 WHERE ((((rt0.c2, CAST('-1923149951' AS INTEGER), ((rt0.c4)LIKE(0X64193077)), CASE WHEN rt0.c3 THEN rt0.c1 END, DATETIME(rt0.c0, rt0.c1, rt0.c0)))>(((((rt0.c2, rt0.c0))!=((rt0.c3, rt0.c1))), ((rt0.c0)%(rt0.c2)), (rt0.c3 IN (0.705173004305304, rt0.c4)), HEX(rt0.c2), ((rt0.c1) ISNULL))))) ORDER BY ((((((rt0.c4 COLLATE RTRIM)OR(((rt0.c4) IS TRUE))))OR(((rt0.c4) NOTNULL))))AND(rt0.c3)) DESC  NULLS LAST LIMIT 1;
SELECT * FROM t1 WHERE (((((t1.c0)GLOB(t1.c0)))GLOB(CAST(t1.c1 AS NUMERIC)))) ORDER BY ((TRIM(t1.c0)) NOT BETWEEN (((((t1.c0)AND(t1.c1)))OR(t1.c0))) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)) DESC;
SELECT * FROM t1 WHERE (((((((t1.c0)GLOB(t1.c0)))GLOB(CAST(t1.c1 AS NUMERIC))))AND(((t1.c1)AND(NULL COLLATE NOCASE))))) ORDER BY ((TRIM(t1.c0)) NOT BETWEEN (((((t1.c0)AND(t1.c1)))OR(t1.c0))) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)) DESC;
SELECT * FROM t1 WHERE (((((t1.c0)GLOB(t1.c0)))GLOB(CAST(t1.c1 AS NUMERIC)))) ORDER BY ((TRIM(t1.c0)) NOT BETWEEN (((((t1.c0)AND(t1.c1)))OR(t1.c0))) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)) DESC;
SELECT * FROM t1 WHERE (((((((t1.c0)GLOB(t1.c0)))GLOB(CAST(t1.c1 AS NUMERIC))))AND(((t1.c1)AND(NULL COLLATE NOCASE))))) ORDER BY ((TRIM(t1.c0)) NOT BETWEEN (((((t1.c0)AND(t1.c1)))OR(t1.c0))) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)) DESC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (LIKELIHOOD(DISTINCT ((t1.c1)<=(t1.c0)), (t1.c1 IN (t1.c1)))) ORDER BY '1665895396'  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((LIKELIHOOD(DISTINCT ((t1.c1)==(t1.c0)), (t1.c1 IN (t1.c1))))AND((((t1.c1 COLLATE NOCASE, NULL, ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))))>=(((- (t1.c1)), ((t1.c1)|(t1.c1)), CAST(t1.c1 AS TEXT))))))) ORDER BY '1665895396'  NULLS LAST LIMIT 0x0;
SELECT MIN(rt0.c0) FROM rt0 LEFT OUTER JOIN t1 ON (((- (rt0.c4))) ISNULL) WHERE (CAST(t1.c1 AS REAL)) ORDER BY (- (rt0.c3)) COLLATE RTRIM ASC  NULLS FIRST, (CASE rt0.c2  WHEN rt0.c3 THEN t1.c1 WHEN rt0.c0 THEN t1.c1 ELSE t1.c1 END IN ());
SELECT DISTINCT MIN(rt0.c0) FROM rt0 LEFT OUTER JOIN t1 ON (((- (rt0.c4))) ISNULL) WHERE (CAST(t1.c1 AS REAL)) ORDER BY ((((t1.c1)LIKE(t1.c1))) IS TRUE)  NULLS LAST INTERSECT SELECT DISTINCT MIN(rt0.c0) FROM rt0 LEFT OUTER JOIN t1 ON (((- (rt0.c4))) ISNULL) WHERE (((((((rt0.c0) IS FALSE))AND(((rt0.c2)>(rt0.c4)))))OR(t1.c1 COLLATE BINARY))) ORDER BY ((((t1.c1)LIKE(t1.c1))) IS TRUE)  NULLS LAST;
SELECT MIN(t1.c1) FROM rt0, t1 WHERE (CAST(((rt0.c1)||(rt0.c0)) AS REAL));
SELECT ALL MIN(t1.c1) FROM rt0, t1 WHERE (CAST(((rt0.c1)||(rt0.c0)) AS REAL)) ORDER BY CASE ((rt0.c2)AND(t1.c0))  WHEN rt0.c3 THEN ((rt0.c4) ISNULL) ELSE ((rt0.c0) NOTNULL) END, (CAST(t1.c0 AS BLOB) IN ((t1.c0 IN ()))) ASC  NULLS LAST LIMIT 2 INTERSECT SELECT MIN(t1.c1) FROM rt0, t1 WHERE ((+ (CASE rt0.c1  WHEN t1.c1 THEN t1.c0 WHEN rt0.c3 THEN t1.c0 WHEN rt0.c1 THEN t1.c0 WHEN rt0.c0 THEN t1.c1 WHEN rt0.c3 THEN t1.c0 WHEN rt0.c0 THEN rt0.c3 END))) ORDER BY CASE ((rt0.c2)AND(t1.c0))  WHEN rt0.c3 THEN ((rt0.c4) ISNULL) ELSE ((rt0.c0) NOTNULL) END, (CAST(t1.c0 AS BLOB) IN ((t1.c0 IN ()))) ASC  NULLS LAST LIMIT 0x2;
SELECT ALL MAX(rt0.c2) FROM t1, rt0 WHERE ((((NOT (rt0.c2))) BETWEEN (((rt0.c4)>=(rt0.c1))) AND (rt0.c3)));
SELECT DISTINCT MAX(rt0.c2) FROM t1, rt0 WHERE ((((((NOT (rt0.c2))) BETWEEN (((rt0.c4)>=(rt0.c1))) AND (rt0.c3)))AND(HEX(DISTINCT ((((((rt0.c2)AND(rt0.c2)))OR(t1.c0)))OR(rt0.c2))))));
SELECT * FROM t1 WHERE (0.6734999434771166) ORDER BY CASE (- (t1.c1))  WHEN (NOT (t1.c0)) THEN TRIM(DISTINCT t1.c1, t1.c0) END  NULLS LAST, ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (0.6734999434771166) ORDER BY (~ (CAST(t1.c0 AS TEXT))) ASC;
SELECT * FROM t1 WHERE (0.6734999434771166) ORDER BY CASE (- (t1.c1))  WHEN (NOT (t1.c0)) THEN TRIM(DISTINCT t1.c1, t1.c0) END  NULLS LAST, ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (0.6734999434771166) ORDER BY (~ (CAST(t1.c0 AS TEXT))) ASC;
SELECT ALL MIN(rt0.c4) FROM t1, rt0 WHERE ((((rt0.c0, ((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))))>=((((rt0.c3)>(rt0.c3)), x'82f0'))));
SELECT DISTINCT MIN(rt0.c4) FROM t1, rt0 WHERE ((((((rt0.c0, ((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))))>((((rt0.c3)>(rt0.c3)), x'82f0'))))AND((((CAST(rt0.c0 AS REAL)))>=((CASE t1.c0  WHEN rt0.c0 THEN rt0.c3 END)))))) ORDER BY CAST(((((rt0.c4)OR(t1.c1)))AND(t1.c0)) AS BLOB), CASE x''  WHEN '6ￇ' THEN t1.c0 END COLLATE BINARY ASC LIMIT 0x0;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END) NOT BETWEEN (rt0.c1) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((rt0.c4)<<(rt0.c4)) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END) NOT BETWEEN (rt0.c1) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((rt0.c4)<<(rt0.c4)) COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((LTRIM(rt0.c0, rt0.c2) IN (rt0.c1 COLLATE NOCASE))) ORDER BY rt0.c4 ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((LTRIM(rt0.c0, rt0.c2) IN (rt0.c1 COLLATE NOCASE)))AND((rt0.c0 IN ())))) ORDER BY ((1895184658) IS TRUE)  NULLS FIRST, LIKELY((((rt0.c2, rt0.c0))=((rt0.c2, rt0.c4)))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((LTRIM(rt0.c0, rt0.c2) IN (rt0.c1 COLLATE NOCASE))) ORDER BY rt0.c4 ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((LTRIM(rt0.c0, rt0.c2) IN (rt0.c1 COLLATE NOCASE)))AND((rt0.c0 IN ())))) ORDER BY ((1895184658) IS TRUE)  NULLS FIRST, LIKELY((((rt0.c2, rt0.c0))=((rt0.c2, rt0.c4)))) DESC  NULLS FIRST;
SELECT * FROM t1, rt0 WHERE (((rt0.c0 IN (t1.c1)) IN (IFNULL(DISTINCT t1.c0, t1.c1), ((t1.c0)AND(t1.c1)), ((rt0.c0)%(rt0.c4))))) ORDER BY json_quote(-1939077643), ((CASE '1554320004'  WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (rt0.c2 COLLATE RTRIM)) DESC;
SELECT DISTINCT * FROM t1, rt0 WHERE (((((rt0.c0 IN (t1.c1)) IN (IFNULL(DISTINCT t1.c0, t1.c1), ((t1.c0)AND(t1.c1)), ((rt0.c0)%(rt0.c4)))))AND(rt0.c1))) ORDER BY json_quote(0xffffffff8c6c05f5), ((CASE '1554320004'  WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (rt0.c2 COLLATE RTRIM)) DESC;
SELECT * FROM t1, rt0 WHERE (((rt0.c0 IN (t1.c1)) IN (IFNULL(DISTINCT t1.c0, t1.c1), ((t1.c0)AND(t1.c1)), ((rt0.c0)%(rt0.c4))))) ORDER BY json_quote(-1939077643), ((CASE '1554320004'  WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (rt0.c2 COLLATE RTRIM)) DESC;
SELECT DISTINCT * FROM t1, rt0 WHERE (((((rt0.c0 IN (t1.c1)) IN (IFNULL(DISTINCT t1.c0, t1.c1), ((t1.c0)AND(t1.c1)), ((rt0.c0)%(rt0.c4)))))AND(rt0.c1))) ORDER BY json_quote(0xffffffff8c6c05f5), ((CASE '1554320004'  WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (rt0.c2 COLLATE RTRIM)) DESC;
SELECT MIN(t1.c0) FROM rt0, t1 WHERE (0.0705345773644045);
SELECT DISTINCT MIN(t1.c0) FROM rt0, t1 WHERE (((0.0705345773644045)AND(t1.c0))) ORDER BY (((t1.c1) IS TRUE) IN (((t1.c1)<=(NULL)))), CASE (NOT (rt0.c4))  WHEN json_array_length(rt0.c2, '588115614') THEN CAST(rt0.c1 AS NUMERIC) WHEN (~ (t1.c0)) THEN ((t1.c0) BETWEEN (rt0.c3) AND (rt0.c2)) END, CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC) DESC  NULLS LAST LIMIT 0x0;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (x'15') ORDER BY (((rt0.c2) NOT NULL) IN (((rt0.c0) NOT BETWEEN ('729134922') AND (rt0.c0)))) ASC;
SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((x'15')AND(rt0.c2))) ORDER BY (- (rt0.c3))  NULLS FIRST INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0 WHERE (((((((CASE 183377622  WHEN rt0.c1 THEN rt0.c0 END)AND(rt0.c4 COLLATE RTRIM)))OR((~ (rt0.c2)))))OR(rt0.c4 COLLATE BINARY))) ORDER BY (- (rt0.c3))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS BLOB))IS NOT(((rt0.c4)<=(rt0.c4))))) ORDER BY ((NULLIF(DISTINCT rt0.c0, rt0.c4)) NOTNULL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c4 AS BLOB))IS NOT(((rt0.c4)=(rt0.c4)))))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 END COLLATE BINARY))) ORDER BY 0.18992683268746868 COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c2)<(rt0.c0))) NOT BETWEEN (0.3347049335985032) AND ((rt0.c3 IN (rt0.c0)))) ASC LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (TYPEOF((rt0.c3 IN ()))) ORDER BY 0.18992683268746868 COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c2)<(rt0.c0))) NOT BETWEEN (0.3347049335985032) AND ((rt0.c3 IN (rt0.c0)))) ASC LIMIT 2;
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS BLOB))IS NOT(((rt0.c4)<=(rt0.c4))))) ORDER BY ((NULLIF(DISTINCT rt0.c0, rt0.c4)) NOTNULL) DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c4 AS BLOB))IS NOT(((rt0.c4)=(rt0.c4)))))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 END COLLATE BINARY))) ORDER BY 0.18992683268746868 COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c2)<(rt0.c0))) NOT BETWEEN (0.3347049335985032) AND ((rt0.c3 IN (rt0.c0)))) ASC LIMIT 0x2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (TYPEOF((rt0.c3 IN ()))) ORDER BY 0.18992683268746868 COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c2)<(rt0.c0))) NOT BETWEEN (0.3347049335985032) AND ((rt0.c3 IN (rt0.c0)))) ASC LIMIT 2;
SELECT MIN(rt0.c3) FROM t1 INNER JOIN rt0 ON (((((t1.c1))>=((rt0.c3))))|((~ (rt0.c0)))) WHERE (((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0))) BETWEEN (NULL) AND ((((t1.c0, t1.c1, rt0.c4))<=((t1.c1, rt0.c2, t1.c1)))))) ORDER BY ((rt0.c2) BETWEEN (((rt0.c2)GLOB(t1.c0))) AND (t1.c1)), ((rt0.c2 COLLATE BINARY) ISNULL) DESC  NULLS FIRST;
SELECT ALL MIN(rt0.c3) FROM t1 INNER JOIN rt0 ON (((((t1.c1))>=((rt0.c3))))|((~ (rt0.c0)))) WHERE (((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0))) BETWEEN (NULL) AND ((((t1.c0, t1.c1, rt0.c4))<=((t1.c1, rt0.c2, t1.c1)))))) ORDER BY ((((rt0.c4) NOT NULL)) BETWEEN ((((t1.c1, rt0.c2)) BETWEEN ((t1.c1, -3.07936728E8)) AND ((rt0.c2, rt0.c2)))) AND (rt0.c1 COLLATE BINARY)), '
Z' COLLATE BINARY DESC, (((rt0.c2 IN (rt0.c1))) NOT BETWEEN (((rt0.c2)AND(t1.c0))) AND (rt0.c4)) INTERSECT SELECT ALL MIN(rt0.c3) FROM t1 INNER JOIN rt0 ON (((((t1.c1))>=((rt0.c3))))|((~ (rt0.c0)))) WHERE (CAST(t1.c0 AS BLOB)) ORDER BY ((((rt0.c4) NOT NULL)) BETWEEN ((((t1.c1, rt0.c2)) BETWEEN ((t1.c1, -3.07936728E8)) AND ((rt0.c2, rt0.c2)))) AND (rt0.c1 COLLATE BINARY)), '
Z' COLLATE BINARY DESC, (((rt0.c2 IN (rt0.c1))) NOT BETWEEN (((rt0.c2)AND(t1.c0))) AND (rt0.c4));
SELECT COUNT(*) FROM rt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c2 END))<((NULL COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c2 END))<((NULL COLLATE RTRIM)))) ORDER BY ''  NULLS FIRST, CASE WHEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) THEN (rt0.c0 IN (rt0.c4, rt0.c4)) ELSE ((rt0.c4)GLOB(rt0.c4)) END INTERSECT SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, x'', rt0.c0)) BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)), json_type(rt0.c1), ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))) AND ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 END, rt0.c0, rt0.c4)))) ORDER BY ''  NULLS FIRST, CASE WHEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) THEN (rt0.c0 IN (rt0.c4, rt0.c4)) ELSE ((rt0.c4)GLOB(rt0.c4)) END;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((t1.c0) NOTNULL))IS NOT('1513981300'))) ORDER BY (0.5357209095212832 IN ()) ASC, ((t1.c0 COLLATE RTRIM)||(((t1.c1) IS TRUE)));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((((t1.c0) NOTNULL))IS NOT('1513981300')))AND(((((t1.c1)<(t1.c1))) IS FALSE)))) ORDER BY (((t1.c0)|(t1.c0)) IN ()) LIMIT 3 INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (480900986) ORDER BY (((t1.c0)|(t1.c0)) IN ()) LIMIT 3;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN (0X7fd1b2cd)))OR(((rt0.c4) NOTNULL))))OR(((rt0.c1)<(rt0.c4)))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN (2144449229)))OR(((rt0.c4) NOTNULL))))OR(((rt0.c1)<(rt0.c4))))) ORDER BY rt0.c1, rt0.c3 ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN (0X7fd1b2cd)))OR(((rt0.c4) NOTNULL))))OR(((rt0.c1)<(rt0.c4)))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN (2144449229)))OR(((rt0.c4) NOTNULL))))OR(((rt0.c1)<(rt0.c4))))) ORDER BY rt0.c1, rt0.c3 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))AND(CASE WHEN rt0.c2 THEN 0.1891353049650195 ELSE rt0.c1 END)))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN '0.41119790886244745' END)));
SELECT COUNT(*) FROM rt0 WHERE (((((((CAST(rt0.c2 AS BLOB))AND(CASE WHEN rt0.c2 THEN 0.1891353049650195 ELSE rt0.c1 END)))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN '0.41119790886244745' END)))AND(CAST(rt0.c1 AS INTEGER)))) ORDER BY CAST(0.39972474696163895 AS INTEGER);
SELECT COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY ((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)GLOB(((t1.c1) ISNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c1)AND(CASE WHEN (((t1.c1, 'C!'))>=((t1.c1, t1.c1))) THEN (+ (t1.c0)) WHEN t1.c0 COLLATE RTRIM THEN ((t1.c0) ISNULL) WHEN ((t1.c0)>(t1.c0)) THEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) WHEN CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END THEN ((t1.c0) NOT NULL) WHEN ((t1.c0)IS(t1.c1)) THEN TRIM(DISTINCT t1.c1, t1.c0) END))) ORDER BY ((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)GLOB(((t1.c1) ISNULL)))  NULLS FIRST INTERSECT SELECT COUNT(*) FROM t1 WHERE (t1.c0 COLLATE BINARY) ORDER BY ((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)GLOB(((t1.c1) ISNULL)))  NULLS FIRST;
SELECT MAX(t1.c0) FROM t1 WHERE (CAST(t1.c1 COLLATE NOCASE AS NUMERIC));
SELECT MAX(t1.c0) FROM t1 WHERE (CAST(t1.c1 COLLATE NOCASE AS NUMERIC)) ORDER BY ((t1.c0 COLLATE RTRIM) BETWEEN (CASE WHEN t1.c0 THEN t1.c1 ELSE NULL END) AND (IFNULL(DISTINCT t1.c1, t1.c1))) DESC LIMIT 0x1;
SELECT * FROM rt0, t1 WHERE (CASE ((t1.c1)-(rt0.c4))  WHEN CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN ((t1.c1)==(rt0.c1)) WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c4)OR(rt0.c3)))AND(t1.c0)) WHEN rt0.c4 THEN (~ (rt0.c4)) ELSE ('峤N3' IN (rt0.c3, rt0.c2, rt0.c0)) END) ORDER BY ((((((((((t1.c0)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE, CAST(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '-900409252' END AS TEXT);
SELECT * FROM rt0, t1 WHERE (CASE ((t1.c1)-(rt0.c4))  WHEN CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN ((t1.c1)==(rt0.c1)) WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c4)OR(rt0.c3)))AND(t1.c0)) WHEN rt0.c4 THEN (~ (rt0.c4)) ELSE ('峤N3' IN (rt0.c3, rt0.c2, rt0.c0)) END) ORDER BY ((((((((((t1.c0)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE, CAST(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '-900409252' END AS TEXT);
SELECT * FROM rt0, t1 WHERE (CASE ((t1.c1)-(rt0.c4))  WHEN CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN ((t1.c1)==(rt0.c1)) WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c4)OR(rt0.c3)))AND(t1.c0)) WHEN rt0.c4 THEN (~ (rt0.c4)) ELSE ('峤N3' IN (rt0.c3, rt0.c2, rt0.c0)) END) ORDER BY ((((((((((t1.c0)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE, CAST(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '-900409252' END AS TEXT);
SELECT * FROM rt0, t1 WHERE (CASE ((t1.c1)-(rt0.c4))  WHEN CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN ((t1.c1)==(rt0.c1)) WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c4)OR(rt0.c3)))AND(t1.c0)) WHEN rt0.c4 THEN (~ (rt0.c4)) ELSE ('峤N3' IN (rt0.c3, rt0.c2, rt0.c0)) END) ORDER BY ((((((((((t1.c0)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE, CAST(CASE WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN '-900409252' END AS TEXT);
SELECT * FROM t1 WHERE ((((0.7719508886685562))<=((t1.c0))) COLLATE BINARY);
SELECT ALL * FROM t1 WHERE ((((((0.7719508886685562))<=((t1.c0))) COLLATE BINARY)AND(CAST(((t1.c0) NOT NULL) AS NUMERIC)))) LIMIT 0x1 INTERSECT SELECT * FROM t1 WHERE ((NOT (t1.c0 COLLATE BINARY))) LIMIT 1;
SELECT * FROM t1 WHERE ((((0.7719508886685562))<=((t1.c0))) COLLATE BINARY);
SELECT ALL * FROM t1 WHERE ((((((0.7719508886685562))<=((t1.c0))) COLLATE BINARY)AND(CAST(((t1.c0) NOT NULL) AS NUMERIC)))) LIMIT 0x1 INTERSECT SELECT * FROM t1 WHERE ((NOT (t1.c0 COLLATE BINARY))) LIMIT 1;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY t1.c1 DESC, 0.8256450523226601 ASC, 0.7719508886685562 ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY t1.c1 DESC, 0.8256450523226601 ASC, 0.7719508886685562 ASC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY t1.c1 DESC, 0.8256450523226601 ASC, 0.7719508886685562 ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY t1.c1 DESC, 0.8256450523226601 ASC, 0.7719508886685562 ASC  NULLS LAST LIMIT 0X0;
SELECT MAX(rt0.c4) FROM rt0, t1 WHERE (SQLITE_COMPILEOPTION_USED(((((((rt0.c0)AND(t1.c0)))AND(rt0.c2)))AND(rt0.c2))));
SELECT DISTINCT MAX(rt0.c4) FROM rt0, t1 WHERE (((SQLITE_COMPILEOPTION_USED(((((((rt0.c0)AND(t1.c0)))AND(rt0.c2)))AND(rt0.c2))))AND(((rt0.c1 COLLATE BINARY)*(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN 1.102464983E9 WHEN t1.c0 THEN rt0.c0 END))))) ORDER BY CAST(rt0.c2 AS TEXT) DESC LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(rt0.c4) FROM rt0, t1 WHERE (rt0.c1) ORDER BY CAST(rt0.c2 AS TEXT) DESC LIMIT 0;
SELECT ALL * FROM t1, rt0 WHERE ((+ ((t1.c1 IN ())))) ORDER BY (((rt0.c4)) BETWEEN (((rt0.c1 IN (t1.c0, rt0.c4, t1.c1)))) AND (((((NULL, t1.c0, rt0.c1))>((rt0.c2, rt0.c2, t1.c1)))))) ASC, CASE WHEN (rt0.c0 IN (rt0.c4)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) ELSE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t1.c0))) END  NULLS LAST;
SELECT * FROM t1, rt0 WHERE ((((+ ((t1.c1 IN ()))))AND(((x'')AND(((t1.c1)<=(rt0.c1))))))) ORDER BY rt0.c0, ((((rt0.c4, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c0))) IN ())  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t1, rt0 WHERE ((+ ((t1.c1 IN ())))) ORDER BY (((rt0.c4)) BETWEEN (((rt0.c1 IN (t1.c0, rt0.c4, t1.c1)))) AND (((((NULL, t1.c0, rt0.c1))>((rt0.c2, rt0.c2, t1.c1)))))) ASC, CASE WHEN (rt0.c0 IN (rt0.c4)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) ELSE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t1.c0))) END  NULLS LAST;
SELECT * FROM t1, rt0 WHERE ((((+ ((t1.c1 IN ()))))AND(((x'')AND(((t1.c1)<=(rt0.c1))))))) ORDER BY rt0.c0, ((((rt0.c4, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c0))) IN ())  NULLS LAST LIMIT 0x1;
SELECT MIN(rt0.c2) FROM rt0, t1 WHERE (rt0.c4 COLLATE NOCASE) ORDER BY ((((rt0.c3)>(rt0.c3)))<((rt0.c3 IN (t1.c0)))), (((rt0.c1, rt0.c0))>((t1.c0, rt0.c0))) COLLATE RTRIM DESC  NULLS LAST, (('K_N7') NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c4)>(rt0.c4)))) ASC  NULLS FIRST;
SELECT DISTINCT MIN(rt0.c2) FROM rt0, t1 WHERE (rt0.c4 COLLATE NOCASE) ORDER BY ((((rt0.c3)>(rt0.c3)))<((rt0.c3 IN (t1.c0)))), (((rt0.c1, rt0.c0))>((t1.c0, rt0.c0))) COLLATE RTRIM DESC  NULLS LAST, (('K_N7') NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c4)>(rt0.c4)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE (t1.c1) ORDER BY CAST(LTRIM(x'4a2ddb') AS TEXT);
SELECT DISTINCT COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE (((t1.c1)AND((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((((((((rt0.c4)AND('p/*#94rCB')))OR(rt0.c3)))AND(rt0.c0)))))))) ORDER BY CAST(LTRIM(x'4a2ddb') AS TEXT);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((rt0.c3 IN (rt0.c4)))) AND ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c4))))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN (((rt0.c3 IN (rt0.c4)))) AND ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c4))))))AND((((rt0.c4 IN (rt0.c1)))*(((0.7226760922370579) ISNULL))))));
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((rt0.c3 IN (rt0.c4)))) AND ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c4))))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN (((rt0.c3 IN (rt0.c4)))) AND ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c4))))))AND((((rt0.c4 IN (rt0.c1)))*(((0.7226760922370579) ISNULL))))));
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))) THEN (+ (t1.c1)) WHEN t1.c0 COLLATE BINARY THEN -1836004098 COLLATE NOCASE WHEN NULL THEN CASE x'5f0a'  WHEN t1.c1 THEN t1.c1 END ELSE ((t1.c1)/(-1892425807)) END);
SELECT COUNT(*) FROM t1 WHERE (((CASE WHEN (((t1.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))) THEN (+ (t1.c1)) WHEN t1.c0 COLLATE BINARY THEN -1836004098 COLLATE NOCASE WHEN NULL THEN CASE x'5f0a'  WHEN t1.c1 THEN t1.c1 END ELSE ((t1.c1)/(-1892425807)) END)AND(LIKELY(TYPEOF('-116037488'))))) LIMIT 3 INTERSECT SELECT COUNT(*) FROM t1 WHERE (0xffffffffec6f0b89) LIMIT 3;
SELECT MIN(rt0.c0) FROM t1, rt0 WHERE ((json_array_length(rt0.c1) IN (0xffffffffe6deb944)));
SELECT ALL MIN(rt0.c0) FROM t1, rt0 WHERE ((json_array_length(rt0.c1) IN (-421611196))) ORDER BY CAST(CAST('^' AS BLOB) AS NUMERIC);
SELECT MIN(rt0.c4) FROM rt0 CROSS JOIN t1 ON IFNULL(((rt0.c0) NOT NULL), (((rt0.c3, t1.c0))=((t1.c0, rt0.c3)))) WHERE (CAST((((((('iG')AND(rt0.c0)))OR(rt0.c0)))OR(t1.c1)) AS INTEGER)) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN CASE WHEN rt0.c0 THEN rt0.c4 END THEN (((t1.c0, '1413030270', rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, '913111213')) AND ((rt0.c4, rt0.c1, t1.c0))) WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND ('602314073')) THEN ((rt0.c4)||(t1.c0)) WHEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END THEN ((t1.c1) NOT BETWEEN (rt0.c3) AND (x'50')) WHEN ((NULL) NOT NULL) THEN rt0.c1 COLLATE BINARY END  NULLS FIRST;
SELECT MIN(rt0.c4) FROM rt0 CROSS JOIN t1 ON IFNULL(((rt0.c0) NOT NULL), (((rt0.c3, t1.c0))=((t1.c0, rt0.c3)))) WHERE (((CAST((((((('iG')AND(rt0.c0)))OR(rt0.c0)))OR(t1.c1)) AS INTEGER))AND(CAST(((t1.c0)AND(rt0.c2)) AS TEXT)))) ORDER BY (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))OR(x'2a838c')), rt0.c3 COLLATE RTRIM, t1.c0 COLLATE NOCASE))==((((rt0.c4) NOTNULL), ((t1.c0)OR(rt0.c2)), CAST(t1.c0 AS INTEGER)))) DESC, (NOT (((NULL)&(rt0.c2)))) ASC LIMIT 1;
SELECT MAX(rt0.c3) FROM rt0, t1 WHERE (((((rt0.c0)>=(rt0.c4)))IS((((t1.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) ORDER BY CAST(CAST(rt0.c3 AS NUMERIC) AS REAL), (((rt0.c0, t1.c0)) BETWEEN ((x'', CAST(rt0.c0 AS INTEGER))) AND ((t1.c1 COLLATE NOCASE, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT DISTINCT MAX(rt0.c3) FROM rt0, t1 WHERE (((((((rt0.c0)>=(rt0.c4)))IS((((t1.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))))AND(((LAST_INSERT_ROWID())AND((t1.c1 IN ())))))) ORDER BY ((CAST(rt0.c4 AS INTEGER))IS((((t1.c1))<=((rt0.c3)))))  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM rt0, t1 WHERE (((((0.23605098069847308)<<(rt0.c3)))IS NOT(0.6195823402504455))) ORDER BY ((CAST(rt0.c4 AS INTEGER))IS((((t1.c1))<=((rt0.c3)))))  NULLS LAST LIMIT 0;
SELECT ALL MIN(rt0.c2) FROM t1, rt0 WHERE (CASE WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)) THEN CAST(t1.c1 AS REAL) WHEN 0.2745688005075675 THEN ((rt0.c0)<(']2l^)')) ELSE CAST('0.39972474696163895' AS NUMERIC) END) ORDER BY (~ (rt0.c4)) DESC, 'F}捒,A?|鎂*';
SELECT DISTINCT MIN(rt0.c2) FROM t1, rt0 WHERE (CASE WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)) THEN CAST(t1.c1 AS REAL) WHEN 0.2745688005075675 THEN ((rt0.c0)<(']2l^)')) ELSE CAST('0.39972474696163895' AS NUMERIC) END) ORDER BY (~ (rt0.c4)) DESC, 'F}捒,A?|鎂*' INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM t1, rt0 WHERE (CASE LIKELY(rt0.c4)  WHEN ((t1.c1)&(rt0.c4)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t1.c1 END WHEN ((rt0.c1) NOT NULL) THEN ((('k(빫qUz9v&', rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c4)) AND ((t1.c0, rt0.c2))) ELSE ((rt0.c3)>=(rt0.c1)) END) ORDER BY (~ (rt0.c4)) DESC, 'F}捒,A?|鎂*';
SELECT ALL * FROM t1 WHERE (COALESCE(((t1.c0) ISNULL), ((t1.c0)<(t1.c0)))) ORDER BY ((TRIM(DISTINCT t1.c0)) IS TRUE)  NULLS LAST, (((t1.c0 IN ())) ISNULL);
SELECT DISTINCT * FROM t1 WHERE (COALESCE(((t1.c0) ISNULL), ((t1.c0)<(t1.c0)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (COALESCE(((t1.c0) ISNULL), ((t1.c0)<(t1.c0)))) ORDER BY ((TRIM(DISTINCT t1.c0)) IS TRUE)  NULLS LAST, (((t1.c0 IN ())) ISNULL);
SELECT DISTINCT * FROM t1 WHERE (COALESCE(((t1.c0) ISNULL), ((t1.c0)<(t1.c0)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM rt0, t1 WHERE ((((((((rt0.c1 IN (t1.c0)))AND((('1480787630')&(t1.c1)))))AND('b')))OR(((((((rt0.c2)OR(rt0.c4)))AND(t1.c0)))OR(rt0.c2))))) ORDER BY (~ (rt0.c2)) COLLATE NOCASE, (((HEX(DISTINCT '1752223092')))<=((((rt0.c0)==(rt0.c2))))) DESC  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE ((((((((rt0.c1 IN (t1.c0)))AND((('1480787630')&(t1.c1)))))AND('b')))OR(((((((rt0.c2)OR(rt0.c4)))AND(t1.c0)))OR(rt0.c2))))) ORDER BY CASE rt0.c3 COLLATE NOCASE  WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN t1.c0 WHEN rt0.c3 THEN 0.012424344916378116 END THEN CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 WHEN 1895184658 THEN t1.c0 WHEN rt0.c3 THEN rt0.c4 END WHEN (~ (rt0.c3)) THEN ((t1.c1) IS TRUE) WHEN CASE rt0.c2  WHEN 0.2736438630309721 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END THEN ((rt0.c3)-(rt0.c4)) WHEN 0.9956432093240741 THEN CASE WHEN t1.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END WHEN CAST(NULL AS NUMERIC) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) ELSE CAST(rt0.c1 AS BLOB) END DESC;
SELECT ALL * FROM rt0, t1 WHERE ((((((((rt0.c1 IN (t1.c0)))AND((('1480787630')&(t1.c1)))))AND('b')))OR(((((((rt0.c2)OR(rt0.c4)))AND(t1.c0)))OR(rt0.c2))))) ORDER BY (~ (rt0.c2)) COLLATE NOCASE, (((HEX(DISTINCT '1752223092')))<=((((rt0.c0)==(rt0.c2))))) DESC  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE ((((((((rt0.c1 IN (t1.c0)))AND((('1480787630')&(t1.c1)))))AND('b')))OR(((((((rt0.c2)OR(rt0.c4)))AND(t1.c0)))OR(rt0.c2))))) ORDER BY CASE rt0.c3 COLLATE NOCASE  WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN t1.c0 WHEN rt0.c3 THEN 0.012424344916378116 END THEN CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 WHEN 1895184658 THEN t1.c0 WHEN rt0.c3 THEN rt0.c4 END WHEN (~ (rt0.c3)) THEN ((t1.c1) IS TRUE) WHEN CASE rt0.c2  WHEN 0.2736438630309721 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END THEN ((rt0.c3)-(rt0.c4)) WHEN 0.9956432093240741 THEN CASE WHEN t1.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END WHEN CAST(NULL AS NUMERIC) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) ELSE CAST(rt0.c1 AS BLOB) END DESC;
SELECT MIN(rt0.c1) FROM rt0 WHERE (COALESCE(SQLITE_COMPILEOPTION_GET(rt0.c4), (+ (rt0.c4)), rt0.c1 COLLATE RTRIM)) ORDER BY CASE WHEN rt0.c2 THEN rt0.c2 COLLATE RTRIM WHEN CAST('귄J+jR' AS TEXT) THEN (((rt0.c0))<>((rt0.c0))) WHEN (rt0.c0 IN (rt0.c3, rt0.c2, rt0.c3)) THEN ((rt0.c4)>>(rt0.c1)) ELSE rt0.c0 END;
SELECT DISTINCT MIN(rt0.c1) FROM rt0 NOT INDEXED WHERE (COALESCE(SQLITE_COMPILEOPTION_GET(rt0.c4), (+ (rt0.c4)), rt0.c1 COLLATE RTRIM)) ORDER BY (((rt0.c4)<(rt0.c4)) IN ()) DESC LIMIT 0X2 INTERSECT SELECT DISTINCT MIN(rt0.c1) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c3)>=(rt0.c4)))) AND ((rt0.c2)))) ORDER BY (((rt0.c4)<(rt0.c4)) IN ()) DESC LIMIT 0x2;
SELECT ALL MIN(rt0.c1) FROM t1 INNER JOIN rt0 ON (((((((('
')OR((~ ('-1')))))AND((rt0.c1 IN ()))))OR(((rt0.c1) ISNULL))))OR((rt0.c4 IN ()))) WHERE (CAST(CAST(rt0.c4 AS REAL) AS BLOB));
SELECT MIN(rt0.c1) FROM t1 INNER JOIN rt0 ON (((((((('
')OR((~ ('-1')))))AND((rt0.c1 IN ()))))OR(((rt0.c1) ISNULL))))OR((rt0.c4 IN ()))) WHERE (((CAST(CAST(rt0.c4 AS REAL) AS BLOB))AND((0xffffffff9de4801f IN (CAST(rt0.c2 AS NUMERIC), (((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((' ', rt0.c0, rt0.c2)) AND ((t1.c1, rt0.c4, rt0.c4)))))))) LIMIT 0x4;
SELECT * FROM rt0 WHERE (LAST_INSERT_ROWID());
SELECT DISTINCT * FROM rt0 WHERE (((LAST_INSERT_ROWID())AND(NULL))) ORDER BY ((((rt0.c4) IS FALSE))==(((rt0.c3) IS TRUE))) LIMIT 0;
SELECT * FROM rt0 WHERE (LAST_INSERT_ROWID());
SELECT DISTINCT * FROM rt0 WHERE (((LAST_INSERT_ROWID())AND(NULL))) ORDER BY ((((rt0.c4) IS FALSE))==(((rt0.c3) IS TRUE))) LIMIT 0;
SELECT COUNT(*) FROM rt0, t1 WHERE (((LIKELY(DISTINCT rt0.c2)) NOT NULL));
SELECT DISTINCT COUNT(*) FROM rt0, t1 WHERE (((((LIKELY(DISTINCT rt0.c2)) NOT NULL))AND((~ (CAST(rt0.c3 AS NUMERIC)))))) LIMIT 0 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0, t1 WHERE ((((NOT (rt0.c1)))||((rt0.c0 IN ())))) LIMIT 0X0;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c3) BETWEEN (-838203329) AND (rt0.c3)) THEN CAST(rt0.c2 AS TEXT) WHEN UNLIKELY(DISTINCT rt0.c3) THEN (rt0.c4 IN ('-1939077643')) END) ORDER BY LIKELIHOOD(((rt0.c2)<<(rt0.c4)), CAST(rt0.c0 AS NUMERIC)) DESC, ((rt0.c1 COLLATE BINARY) BETWEEN ((rt0.c4 IN (rt0.c2, rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c3) BETWEEN (0xffffffffce0a083f) AND (rt0.c3)) THEN CAST(rt0.c2 AS TEXT) WHEN UNLIKELY(DISTINCT rt0.c3) THEN (rt0.c4 IN ('-1939077643')) END) ORDER BY ((((((((((((0.16004310255483833) NOT NULL))AND((((('1404795806')OR(rt0.c0)))AND(rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c4 END)))AND(rt0.c4)))OR((+ (rt0.c1)))))AND(((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))), NULL  NULLS LAST;
SELECT * FROM rt0, t1 WHERE ((((((rt0.c4)AND(t1.c1)))AND(rt0.c1)) IN (((rt0.c1)LIKE(rt0.c2)))));
SELECT * FROM rt0, t1 WHERE ((((((rt0.c4)AND(t1.c1)))AND(rt0.c1)) IN (((rt0.c1)LIKE(rt0.c2))))) LIMIT 0 INTERSECT SELECT * FROM rt0, t1 WHERE (CHAR(((NULL)<>('1679372407')))) LIMIT 0X0;
SELECT * FROM rt0, t1 WHERE ((((((rt0.c4)AND(t1.c1)))AND(rt0.c1)) IN (((rt0.c1)LIKE(rt0.c2)))));
SELECT * FROM rt0, t1 WHERE ((((((rt0.c4)AND(t1.c1)))AND(rt0.c1)) IN (((rt0.c1)LIKE(rt0.c2))))) LIMIT 0 INTERSECT SELECT * FROM rt0, t1 WHERE (CHAR(((NULL)<>('1679372407')))) LIMIT 0X0;
SELECT * FROM rt0, t1 WHERE ((((+ (rt0.c0)))LIKE(((rt0.c0) IS FALSE)))) ORDER BY 0X5d36af39  NULLS LAST;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((+ (rt0.c0)))LIKE(((rt0.c0) IS FALSE)))) ORDER BY CAST(CASE rt0.c0  WHEN x'4c' THEN rt0.c2 WHEN t1.c1 THEN rt0.c4 ELSE rt0.c2 END AS TEXT) DESC  NULLS LAST, rt0.c0 ASC, ((((rt0.c0)!=(rt0.c1)))<(x'249ccf' COLLATE RTRIM))  NULLS LAST;
SELECT * FROM rt0, t1 WHERE ((((+ (rt0.c0)))LIKE(((rt0.c0) IS FALSE)))) ORDER BY 0X5d36af39  NULLS LAST;
SELECT MAX(rt0.c3) FROM rt0 WHERE ((((('0.23459177945632792')OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE COLLATE BINARY);
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE ((((((('0.23459177945632792')OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE COLLATE BINARY)AND(((CAST(rt0.c0 AS BLOB))GLOB(NULL))))) ORDER BY (NOT (rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST, ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (x'')))==(rt0.c0)), (UPPER(rt0.c3) IN (((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))))  NULLS FIRST;
SELECT * FROM t1 WHERE (NULL);
SELECT ALL * FROM t1 WHERE (NULL) LIMIT 0x1;
SELECT * FROM t1 WHERE (NULL);
SELECT ALL * FROM t1 WHERE (NULL) LIMIT 0x1;
SELECT * FROM t1 NATURAL JOIN rt0 WHERE (((((((rt0.c1) NOT NULL))AND(((rt0.c2) IS TRUE))))OR(((rt0.c2)||(rt0.c2))))) ORDER BY ((((rt0.c4)IS(rt0.c0)))||(rtreenode(t1.c0, rt0.c1))) DESC  NULLS FIRST, ((((rt0.c3)IS NOT(rt0.c4))) IS FALSE), ((((((rt0.c2)>>(rt0.c4)))OR(((rt0.c4)GLOB(rt0.c4)))))OR(((t1.c1)LIKE(rt0.c0)))) DESC;
SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE (((((((((rt0.c1) NOT NULL))AND(((rt0.c2) IS TRUE))))OR(((rt0.c2)||(rt0.c2)))))AND(('U
>C䟗a' IN ())))) ORDER BY '1665895396' INTERSECT SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE ((('') NOT BETWEEN ((t1.c1 IN (rt0.c1))) AND (((rt0.c0) IS TRUE)))) ORDER BY '1665895396';
SELECT * FROM t1 NATURAL JOIN rt0 WHERE (((((((rt0.c1) NOT NULL))AND(((rt0.c2) IS TRUE))))OR(((rt0.c2)||(rt0.c2))))) ORDER BY ((((rt0.c4)IS(rt0.c0)))||(rtreenode(t1.c0, rt0.c1))) DESC  NULLS FIRST, ((((rt0.c3)IS NOT(rt0.c4))) IS FALSE), ((((((rt0.c2)>>(rt0.c4)))OR(((rt0.c4)GLOB(rt0.c4)))))OR(((t1.c1)LIKE(rt0.c0)))) DESC;
SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE (((((((((rt0.c1) NOT NULL))AND(((rt0.c2) IS TRUE))))OR(((rt0.c2)||(rt0.c2)))))AND(('U
>C䟗a' IN ())))) ORDER BY '1665895396' INTERSECT SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE ((('') NOT BETWEEN ((t1.c1 IN (rt0.c1))) AND (((rt0.c0) IS TRUE)))) ORDER BY '1665895396';
SELECT MAX(rt0.c0) FROM rt0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)), rt0.c0, rt0.c1, CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN x'9a' THEN rt0.c1 END))==((((rt0.c3)=(rt0.c0)), LIKE(rt0.c0, rt0.c0), ((rt0.c4) NOT BETWEEN ('k_n7') AND (0.015853422435475162)), ((rt0.c2)<<(rt0.c1)))))) ORDER BY CAST((rt0.c3 IN ()) AS TEXT) ASC, ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c4)))AND((((rt0.c2, rt0.c0, rt0.c3))>=((rt0.c4, rt0.c3, rt0.c3))))) ASC  NULLS LAST;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)), rt0.c0, rt0.c1, CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN x'9a' THEN rt0.c1 END))=((((rt0.c3)=(rt0.c0)), LIKE(rt0.c0, rt0.c0), ((rt0.c4) NOT BETWEEN ('k_n7') AND (0.015853422435475162)), ((rt0.c2)<<(rt0.c1)))))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE 0.6195823402504455 END END ASC  NULLS LAST, CASE WHEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) THEN CASE WHEN '-1430331822' THEN rt0.c1 END WHEN CAST(rt0.c4 AS INTEGER) THEN x'901f' WHEN 0.8524427495363037 THEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN x'9952' END WHEN ((rt0.c4)<=(rt0.c1)) THEN CAST(rt0.c4 AS BLOB) WHEN x'51c5' THEN ((rt0.c2)|(rt0.c0)) ELSE ((rt0.c4)!=(rt0.c1)) END  NULLS LAST LIMIT 0X1;
SELECT ALL MIN(rt0.c1) FROM rt0 WHERE (json_extract(((((rt0.c0)AND(rt0.c4)))OR(rt0.c2)), ((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)), ((rt0.c1)>(rt0.c2)), CAST(rt0.c4 AS INTEGER)));
SELECT MIN(rt0.c1) FROM rt0 WHERE (json_extract(((((rt0.c0)AND(rt0.c4)))OR(rt0.c2)), ((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)), ((rt0.c1)>(rt0.c2)), CAST(rt0.c4 AS INTEGER))) ORDER BY ((((CAST(rt0.c1 AS NUMERIC))OR(CAST(NULL AS INTEGER))))AND((NOT (rt0.c2))))  NULLS LAST LIMIT 0X2 INTERSECT SELECT MIN(rt0.c1) FROM rt0 WHERE ((- (((rt0.c4)-(rt0.c2))))) ORDER BY ((((CAST(rt0.c1 AS NUMERIC))OR(CAST(NULL AS INTEGER))))AND((NOT (rt0.c2))))  NULLS LAST LIMIT 0x2;
SELECT ALL COUNT(*) FROM t1 WHERE (((((0.8743170514615749)<<(t1.c1))) ISNULL));
SELECT COUNT(*) FROM t1 WHERE (((((((0.8743170514615749)<<(t1.c1))) ISNULL))AND((((t1.c1, '].', t1.c1)) NOT BETWEEN ((((t1.c1)|(t1.c0)), CAST('s⹓>l뽌o' AS TEXT), t1.c0 COLLATE NOCASE)) AND ((t1.c1, CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, t1.c1 COLLATE RTRIM)))))) LIMIT 0X0 INTERSECT SELECT COUNT(*) FROM t1 WHERE ((('eG?WV(LY')<>((- (t1.c1))))) LIMIT 0;
SELECT * FROM rt0, t1 WHERE (CAST(rt0.c3 COLLATE NOCASE AS BLOB)) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (((((((((((((((((((rt0.c4)OR(t1.c0)))AND(183377622)))AND(t1.c1)))AND(t1.c1)))OR(NULL)))AND(rt0.c4)))OR(rt0.c3)))AND(t1.c0)))OR(rt0.c0))) AND (((((t1.c0)AND(x'')))AND(t1.c0)))), NULL ASC;
SELECT DISTINCT * FROM rt0, t1 WHERE (((CAST(rt0.c3 COLLATE NOCASE AS BLOB))AND(LIKELY(UPPER(rt0.c0))))) ORDER BY rt0.c3 ASC, ((CASE t1.c1  WHEN rt0.c1 THEN rt0.c1 ELSE t1.c1 END) IS FALSE) INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (rt0.c3) AND (rt0.c2))) ORDER BY rt0.c3 ASC, ((CASE t1.c1  WHEN rt0.c1 THEN rt0.c1 ELSE t1.c1 END) IS FALSE);
SELECT * FROM rt0, t1 WHERE (CAST(rt0.c3 COLLATE NOCASE AS BLOB)) ORDER BY ((((rt0.c2) NOTNULL)) NOT BETWEEN (((((((((((((((((((rt0.c4)OR(t1.c0)))AND(183377622)))AND(t1.c1)))AND(t1.c1)))OR(NULL)))AND(rt0.c4)))OR(rt0.c3)))AND(t1.c0)))OR(rt0.c0))) AND (((((t1.c0)AND(x'')))AND(t1.c0)))), NULL ASC;
SELECT DISTINCT * FROM rt0, t1 WHERE (((CAST(rt0.c3 COLLATE NOCASE AS BLOB))AND(LIKELY(UPPER(rt0.c0))))) ORDER BY rt0.c3 ASC, ((CASE t1.c1  WHEN rt0.c1 THEN rt0.c1 ELSE t1.c1 END) IS FALSE) INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (rt0.c3) AND (rt0.c2))) ORDER BY rt0.c3 ASC, ((CASE t1.c1  WHEN rt0.c1 THEN rt0.c1 ELSE t1.c1 END) IS FALSE);
SELECT * FROM rt0 INNER JOIN t1 ON ((t1.c1)>>(rt0.c0)) COLLATE NOCASE WHERE (-1.836004098E9) ORDER BY (((~ (rt0.c2))) ISNULL);
SELECT DISTINCT * FROM rt0 INNER JOIN t1 ON ((t1.c1)>>(rt0.c0)) COLLATE NOCASE WHERE (((-1.836004098E9)AND(((CAST(rt0.c1 AS NUMERIC)) ISNULL)))) ORDER BY (((NOT (rt0.c1)))<(rt0.c1 COLLATE BINARY)) DESC  NULLS FIRST, NULL  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 INNER JOIN t1 ON ((t1.c1)>>(rt0.c0)) COLLATE NOCASE WHERE (rt0.c0) ORDER BY (((NOT (rt0.c1)))<(rt0.c1 COLLATE BINARY)) DESC  NULLS FIRST, NULL  NULLS FIRST LIMIT 0X0;
SELECT * FROM rt0 INNER JOIN t1 ON ((t1.c1)>>(rt0.c0)) COLLATE NOCASE WHERE (-1.836004098E9) ORDER BY (((~ (rt0.c2))) ISNULL);
SELECT DISTINCT * FROM rt0 INNER JOIN t1 ON ((t1.c1)>>(rt0.c0)) COLLATE NOCASE WHERE (((-1.836004098E9)AND(((CAST(rt0.c1 AS NUMERIC)) ISNULL)))) ORDER BY (((NOT (rt0.c1)))<(rt0.c1 COLLATE BINARY)) DESC  NULLS FIRST, NULL  NULLS FIRST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 INNER JOIN t1 ON ((t1.c1)>>(rt0.c0)) COLLATE NOCASE WHERE (rt0.c0) ORDER BY (((NOT (rt0.c1)))<(rt0.c1 COLLATE BINARY)) DESC  NULLS FIRST, NULL  NULLS FIRST LIMIT 0X0;
SELECT ALL MAX(rt0.c3) FROM rt0, t1 WHERE ((((((NOT (rt0.c4)))OR((((rt0.c3, t1.c0)) NOT BETWEEN ((t1.c1, rt0.c1)) AND ((rt0.c3, rt0.c4))))))OR(((((((((-729575157)OR(NULL)))OR(t1.c0)))OR(rt0.c1)))AND(rt0.c0)))));
SELECT MAX(rt0.c3) FROM rt0, t1 WHERE ((((((NOT (rt0.c4)))OR((((rt0.c3, t1.c0)) NOT BETWEEN ((t1.c1, rt0.c1)) AND ((rt0.c3, rt0.c4))))))OR(((((((((0xffffffffd483910b)OR(NULL)))OR(t1.c0)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)  NULLS FIRST, '\m' DESC  NULLS FIRST, TRIM(DISTINCT NULL COLLATE RTRIM, CASE WHEN rt0.c4 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END) LIMIT 0x0 INTERSECT SELECT MAX(rt0.c3) FROM rt0, t1 WHERE (NULL) ORDER BY ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)  NULLS FIRST, '\m' DESC  NULLS FIRST, TRIM(DISTINCT NULL COLLATE RTRIM, CASE WHEN rt0.c4 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END) LIMIT 0X0;
SELECT MIN(t1.c0) FROM rt0, t1 WHERE (((((ROUND(rt0.c3, t1.c0))OR(((rt0.c1) IS FALSE))))OR((((rt0.c3, rt0.c3, '', t1.c0)) NOT BETWEEN ((t1.c1, rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c2, t1.c0, t1.c0, rt0.c4))))));
SELECT DISTINCT MIN(t1.c0) FROM rt0, t1 WHERE (((((((ROUND(rt0.c3, t1.c0))OR(((rt0.c1) IS FALSE))))OR((((rt0.c3, rt0.c3, '', t1.c0)) NOT BETWEEN ((t1.c1, rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c2, t1.c0, t1.c0, rt0.c4))))))AND(CAST(rt0.c1 AS TEXT) COLLATE NOCASE))) ORDER BY ((((t1.c0) IS TRUE)) NOT BETWEEN ((((t1.c0, rt0.c3)) NOT BETWEEN ((t1.c1, rt0.c3)) AND ((t1.c0, rt0.c3)))) AND (((((((t1.c0)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)))) LIMIT 0x5;
SELECT * FROM t1 WHERE (((t1.c0) BETWEEN (((t1.c1) IS TRUE)) AND ((+ (t1.c1))))) ORDER BY CAST(CAST(t1.c0 AS BLOB) AS REAL), (((t1.c0, t1.c1)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)), (((t1.c1, t1.c0, t1.c1))>((t1.c1, t1.c1, t1.c0))))) AND ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END, SQLITE_VERSION()))) DESC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (((t1.c1) IS TRUE)) AND ((+ (t1.c1)))))AND(CASE WHEN t1.c0 THEN '329591580' ELSE t1.c1 END COLLATE NOCASE))) ORDER BY ((((((((t1.c0)IS(t1.c1)))OR(((t1.c1) BETWEEN (0.11047033479223711) AND (t1.c0)))))OR((t1.c1 IN (t1.c0)))))AND(((((t1.c1)AND(t1.c1)))AND(t1.c0)))) DESC, ((COALESCE(DISTINCT t1.c0, t1.c0, t1.c0))<(((t1.c0)/(t1.c1)))) DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c0, x'9f')) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((0.8256450523226601, t1.c0, t1.c0)))) IS FALSE)) ORDER BY ((((((((t1.c0)IS(t1.c1)))OR(((t1.c1) BETWEEN (0.11047033479223711) AND (t1.c0)))))OR((t1.c1 IN (t1.c0)))))AND(((((t1.c1)AND(t1.c1)))AND(t1.c0)))) DESC, ((COALESCE(DISTINCT t1.c0, t1.c0, t1.c0))<(((t1.c0)/(t1.c1)))) DESC;
SELECT * FROM t1 WHERE (((t1.c0) BETWEEN (((t1.c1) IS TRUE)) AND ((+ (t1.c1))))) ORDER BY CAST(CAST(t1.c0 AS BLOB) AS REAL), (((t1.c0, t1.c1)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)), (((t1.c1, t1.c0, t1.c1))>((t1.c1, t1.c1, t1.c0))))) AND ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END, SQLITE_VERSION()))) DESC;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (((t1.c1) IS TRUE)) AND ((+ (t1.c1)))))AND(CASE WHEN t1.c0 THEN '329591580' ELSE t1.c1 END COLLATE NOCASE))) ORDER BY ((((((((t1.c0)IS(t1.c1)))OR(((t1.c1) BETWEEN (0.11047033479223711) AND (t1.c0)))))OR((t1.c1 IN (t1.c0)))))AND(((((t1.c1)AND(t1.c1)))AND(t1.c0)))) DESC, ((COALESCE(DISTINCT t1.c0, t1.c0, t1.c0))<(((t1.c0)/(t1.c1)))) DESC INTERSECT SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c0, x'9f')) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((0.8256450523226601, t1.c0, t1.c0)))) IS FALSE)) ORDER BY ((((((((t1.c0)IS(t1.c1)))OR(((t1.c1) BETWEEN (0.11047033479223711) AND (t1.c0)))))OR((t1.c1 IN (t1.c0)))))AND(((((t1.c1)AND(t1.c1)))AND(t1.c0)))) DESC, ((COALESCE(DISTINCT t1.c0, t1.c0, t1.c0))<(((t1.c0)/(t1.c1)))) DESC;
SELECT ALL * FROM t1 WHERE (((t1.c0)<>(t1.c1)) COLLATE NOCASE COLLATE BINARY) ORDER BY ((TRIM(DISTINCT t1.c1)) NOT BETWEEN (HEX(t1.c0)) AND (x'4c')), NULL ASC, ROUND(((t1.c1)%(t1.c1)), (~ (t1.c0)));
SELECT * FROM t1 WHERE (((((t1.c0)>(t1.c1)) COLLATE NOCASE COLLATE BINARY)AND(((NULLIF(DISTINCT t1.c1, t1.c1)) NOTNULL)))) ORDER BY ((TRIM(DISTINCT t1.c1)) NOT BETWEEN (HEX(t1.c0)) AND (x'4c')), NULL ASC, ROUND(((t1.c1)%(t1.c1)), (~ (t1.c0))) LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ((((~ (t1.c1)))/(TYPEOF(DISTINCT t1.c0)))) ORDER BY ((TRIM(DISTINCT t1.c1)) NOT BETWEEN (HEX(t1.c0)) AND (x'4c')), NULL ASC, ROUND(((t1.c1)%(t1.c1)), (~ (t1.c0))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (((t1.c0)<>(t1.c1)) COLLATE NOCASE COLLATE BINARY) ORDER BY ((TRIM(DISTINCT t1.c1)) NOT BETWEEN (HEX(t1.c0)) AND (x'4c')), NULL ASC, ROUND(((t1.c1)%(t1.c1)), (~ (t1.c0)));
SELECT * FROM t1 WHERE (((((t1.c0)>(t1.c1)) COLLATE NOCASE COLLATE BINARY)AND(((NULLIF(DISTINCT t1.c1, t1.c1)) NOTNULL)))) ORDER BY ((TRIM(DISTINCT t1.c1)) NOT BETWEEN (HEX(t1.c0)) AND (x'4c')), NULL ASC, ROUND(((t1.c1)%(t1.c1)), (~ (t1.c0))) LIMIT 0 INTERSECT SELECT ALL * FROM t1 WHERE ((((~ (t1.c1)))/(TYPEOF(DISTINCT t1.c0)))) ORDER BY ((TRIM(DISTINCT t1.c1)) NOT BETWEEN (HEX(t1.c0)) AND (x'4c')), NULL ASC, ROUND(((t1.c1)%(t1.c1)), (~ (t1.c0))) LIMIT 0;
SELECT ALL * FROM rt0, t1 WHERE (((((((rt0.c4)>=('e')))OR(CASE WHEN '|\Kxvc' THEN rt0.c2 END)))AND(((((0.025253342646652355)OR(rt0.c2)))OR(rt0.c0))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN t1.c0 WHEN t1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN '-1268134980' THEN t1.c1 END)+(((rt0.c2)AND(t1.c0)))) DESC, ((rt0.c2 IN (rt0.c4, rt0.c4)) IN (CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, CAST(t1.c0 AS REAL))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0, t1 WHERE (((((((((rt0.c4)==('e')))OR(CASE WHEN '|\Kxvc' THEN rt0.c2 END)))AND(((((0.025253342646652355)OR(rt0.c2)))OR(rt0.c0)))))AND(IFNULL(DISTINCT (((rt0.c3, t1.c0, t1.c1)) NOT BETWEEN ((rt0.c2, rt0.c4, t1.c1)) AND ((rt0.c4, rt0.c3, t1.c1))), CAST(rt0.c4 AS INTEGER))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN t1.c0 WHEN t1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN '-1268134980' THEN t1.c1 END)+(((rt0.c2)AND(t1.c0)))) DESC, ((rt0.c2 IN (rt0.c4, rt0.c4)) IN (CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, CAST(t1.c0 AS REAL))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE (((CAST(t1.c0 AS NUMERIC))!=((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4)))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN t1.c0 WHEN t1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN '-1268134980' THEN t1.c1 END)+(((rt0.c2)AND(t1.c0)))) DESC, ((rt0.c2 IN (rt0.c4, rt0.c4)) IN (CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, CAST(t1.c0 AS REAL))) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0, t1 WHERE (((((((rt0.c4)>=('e')))OR(CASE WHEN '|\Kxvc' THEN rt0.c2 END)))AND(((((0.025253342646652355)OR(rt0.c2)))OR(rt0.c0))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN t1.c0 WHEN t1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN '-1268134980' THEN t1.c1 END)+(((rt0.c2)AND(t1.c0)))) DESC, ((rt0.c2 IN (rt0.c4, rt0.c4)) IN (CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, CAST(t1.c0 AS REAL))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0, t1 WHERE (((((((((rt0.c4)==('e')))OR(CASE WHEN '|\Kxvc' THEN rt0.c2 END)))AND(((((0.025253342646652355)OR(rt0.c2)))OR(rt0.c0)))))AND(IFNULL(DISTINCT (((rt0.c3, t1.c0, t1.c1)) NOT BETWEEN ((rt0.c2, rt0.c4, t1.c1)) AND ((rt0.c4, rt0.c3, t1.c1))), CAST(rt0.c4 AS INTEGER))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN t1.c0 WHEN t1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN '-1268134980' THEN t1.c1 END)+(((rt0.c2)AND(t1.c0)))) DESC, ((rt0.c2 IN (rt0.c4, rt0.c4)) IN (CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, CAST(t1.c0 AS REAL))) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE (((CAST(t1.c0 AS NUMERIC))!=((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4)))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN t1.c0 WHEN t1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN '-1268134980' THEN t1.c1 END)+(((rt0.c2)AND(t1.c0)))) DESC, ((rt0.c2 IN (rt0.c4, rt0.c4)) IN (CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, CAST(t1.c0 AS REAL))) ASC  NULLS FIRST LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END)||((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY rt0.c4 DESC  NULLS FIRST, CAST((((NULL)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END)||((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY ((rt0.c1 IN (rt0.c1, rt0.c1, rt0.c0)) IN (rt0.c2)) DESC  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END) IS TRUE)  NULLS LAST INTERSECT SELECT COUNT(*) FROM rt0 WHERE ((((2.016286577E9) NOT BETWEEN (rt0.c2) AND (rt0.c4)) IN (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)), rt0.c0 COLLATE NOCASE))) ORDER BY ((rt0.c1 IN (rt0.c1, rt0.c1, rt0.c0)) IN (rt0.c2)) DESC  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END) IS TRUE)  NULLS LAST;
SELECT MAX(rt0.c2) FROM rt0, t1 WHERE ((rt0.c4 IN (rt0.c3)) COLLATE RTRIM COLLATE NOCASE) ORDER BY UPPER(DISTINCT (t1.c0 IN (rt0.c2))), HEX(CASE rt0.c0  WHEN t1.c0 THEN 0X489b62f1 WHEN t1.c1 THEN rt0.c1 END) DESC, (((rt0.c0, x'aa')) BETWEEN ((TRIM(DISTINCT rt0.c3, 0.7146586638129837), (((t1.c0, rt0.c0))>((rt0.c1, rt0.c3))))) AND ((((t1.c0) NOTNULL), (- (rt0.c4)))))  NULLS LAST;
SELECT ALL MAX(rt0.c2) FROM rt0, t1 WHERE ((rt0.c4 IN (rt0.c3)) COLLATE RTRIM COLLATE NOCASE) ORDER BY UPPER(DISTINCT (t1.c0 IN (rt0.c2))), HEX(CASE rt0.c0  WHEN t1.c0 THEN 0X489b62f1 WHEN t1.c1 THEN rt0.c1 END) DESC, (((rt0.c0, x'aa')) BETWEEN ((TRIM(DISTINCT rt0.c3, 0.7146586638129837), (((t1.c0, rt0.c0))>((rt0.c1, rt0.c3))))) AND ((((t1.c0) NOTNULL), (- (rt0.c4)))))  NULLS LAST INTERSECT SELECT MAX(rt0.c2) FROM rt0, t1 WHERE (0xffffffffe85ca8e0 COLLATE RTRIM) ORDER BY UPPER(DISTINCT (t1.c0 IN (rt0.c2))), HEX(CASE rt0.c0  WHEN t1.c0 THEN 0x489b62f1 WHEN t1.c1 THEN rt0.c1 END) DESC, (((rt0.c0, x'aa')) BETWEEN ((TRIM(DISTINCT rt0.c3, 0.7146586638129837), (((t1.c0, rt0.c0))>((rt0.c1, rt0.c3))))) AND ((((t1.c0) NOTNULL), (- (rt0.c4)))))  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM rt0, t1 WHERE ((((((rt0.c0, rt0.c4)) BETWEEN ((t1.c0, rt0.c1)) AND ((rt0.c2, rt0.c2)))) ISNULL)) ORDER BY CAST(((rt0.c4) ISNULL) AS NUMERIC) DESC  NULLS LAST, CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN 0.20096844561850347 WHEN '-915416628' THEN t1.c0 ELSE rt0.c4 END THEN rt0.c3 COLLATE RTRIM WHEN CASE rt0.c3  WHEN rt0.c1 THEN t1.c1 ELSE 0xffffffffee4e41cc END THEN (rt0.c2 IN (rt0.c2)) WHEN LIKE(rt0.c3, t1.c0) THEN 0.7496797445186093 ELSE ((x'f611e9') NOT BETWEEN (0.511389928780931) AND (rt0.c3)) END DESC  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM rt0, t1 WHERE ((((((((rt0.c0, rt0.c4)) BETWEEN ((t1.c0, rt0.c1)) AND ((rt0.c2, rt0.c2)))) ISNULL))AND((((t1.c1))>((((rt0.c0) ISNULL))))))) ORDER BY CAST(((rt0.c4) ISNULL) AS NUMERIC) DESC  NULLS LAST, CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN 0.20096844561850347 WHEN '-915416628' THEN t1.c0 ELSE rt0.c4 END THEN rt0.c3 COLLATE RTRIM WHEN CASE rt0.c3  WHEN rt0.c1 THEN t1.c1 ELSE -296861236 END THEN (rt0.c2 IN (rt0.c2)) WHEN LIKE(rt0.c3, t1.c0) THEN 0.7496797445186093 ELSE ((x'f611e9') NOT BETWEEN (0.511389928780931) AND (rt0.c3)) END DESC  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE (CASE WHEN ((t1.c1)<(t1.c0)) THEN CASE WHEN t1.c1 THEN NULL WHEN 0.48376870060125987 THEN x'f8' END WHEN (((t1.c1))<=((t1.c1))) THEN ((t1.c0) IS FALSE) ELSE (t1.c0 IN ()) END);
SELECT MAX(t1.c0) FROM t1 WHERE (CASE WHEN ((t1.c1)<(t1.c0)) THEN CASE WHEN t1.c1 THEN NULL WHEN 0.48376870060125987 THEN x'f8' END WHEN (((t1.c1))=((t1.c1))) THEN ((t1.c0) IS FALSE) ELSE (t1.c0 IN ()) END) ORDER BY NULL  NULLS FIRST, (706435165 IN (-903030044)) DESC  NULLS FIRST LIMIT 2;
SELECT * FROM rt0, t1 WHERE ((0.836896088261858 IN ()));
SELECT ALL * FROM rt0, t1 WHERE ((0.836896088261858 IN ())) LIMIT 0X0 INTERSECT SELECT * FROM rt0, t1 WHERE (CAST(((((((rt0.c2)AND(rt0.c2)))OR(t1.c0)))AND(rt0.c3)) AS TEXT)) LIMIT 0X0;
SELECT * FROM rt0, t1 WHERE ((0.836896088261858 IN ()));
SELECT ALL * FROM rt0, t1 WHERE ((0.836896088261858 IN ())) LIMIT 0X0 INTERSECT SELECT * FROM rt0, t1 WHERE (CAST(((((((rt0.c2)AND(rt0.c2)))OR(t1.c0)))AND(rt0.c3)) AS TEXT)) LIMIT 0X0;
SELECT MIN(rt0.c3) FROM rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN '8Q?D63' WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END AS NUMERIC)) ORDER BY (NOT (rt0.c0)) COLLATE BINARY DESC  NULLS LAST, rt0.c3 DESC  NULLS LAST, ((('1563864889', (- (rt0.c1)), rt0.c1))<((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END, CASE WHEN rt0.c1 THEN rt0.c2 WHEN ']씡-i-(摊!' THEN 0.05868177938681518 WHEN rt0.c4 THEN 0.010411502219143554 ELSE rt0.c3 END, 2024476669)));
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN '8Q?D63' WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END AS NUMERIC)) ORDER BY (NOT (rt0.c0)) COLLATE BINARY DESC  NULLS LAST, rt0.c3 DESC  NULLS LAST, ((('1563864889', (- (rt0.c1)), rt0.c1))<((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END, CASE WHEN rt0.c1 THEN rt0.c2 WHEN ']씡-i-(摊!' THEN 0.05868177938681518 WHEN rt0.c4 THEN 0.010411502219143554 ELSE rt0.c3 END, 0x78ab0ffd))) LIMIT 0x0;
SELECT MIN(rt0.c0) FROM rt0 WHERE ((((((((((- (rt0.c3)))AND(((rt0.c1)IS(-2108131111)))))OR(((rt0.c2) IS FALSE))))AND(((rt0.c1) NOT NULL))))AND((((rt0.c4, rt0.c4, rt0.c4))!=((x'', rt0.c1, rt0.c2)))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END)!=((((rt0.c4, rt0.c4, rt0.c3, rt0.c4, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, 0.2400921459292843, rt0.c4, rt0.c4, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c3))))) ASC, (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) COLLATE RTRIM ASC;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE ((((((((((((- (rt0.c3)))AND(((rt0.c1)IS(-2108131111)))))OR(((rt0.c2) IS FALSE))))AND(((rt0.c1) NOT NULL))))AND((((rt0.c4, rt0.c4, rt0.c4))<((x'', rt0.c1, rt0.c2))))))AND(rt0.c3))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END)!=((((rt0.c4, rt0.c4, rt0.c3, rt0.c4, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, 0.2400921459292843, rt0.c4, rt0.c4, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c3))))) ASC, (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) COLLATE RTRIM ASC LIMIT 0x0;
SELECT ALL * FROM t1, rt0 WHERE ('329591580' COLLATE BINARY) ORDER BY ((((0.1891353049650195)||(rt0.c0)))&(COALESCE(rt0.c4, rt0.c2)))  NULLS FIRST;
SELECT DISTINCT * FROM t1, rt0 WHERE ('329591580' COLLATE BINARY) ORDER BY CAST('' AS REAL) ASC LIMIT 0;
SELECT ALL * FROM t1, rt0 WHERE ('329591580' COLLATE BINARY) ORDER BY ((((0.1891353049650195)||(rt0.c0)))&(COALESCE(rt0.c4, rt0.c2)))  NULLS FIRST;
SELECT DISTINCT * FROM t1, rt0 WHERE ('329591580' COLLATE BINARY) ORDER BY CAST('' AS REAL) ASC LIMIT 0;
SELECT MAX(rt0.c2) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))<(((rt0.c4) IS FALSE))));
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))<(((rt0.c4) IS FALSE))))AND(INSTR(((((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)), ((rt0.c2)-(rt0.c3)))))) LIMIT 0X1;
SELECT ALL MAX(rt0.c3) FROM rt0, t1 WHERE ((((((t1.c0 IN (rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END)))OR((((rt0.c2)) NOT BETWEEN ((t1.c1)) AND ((x''))))));
SELECT DISTINCT MAX(rt0.c3) FROM rt0, t1 WHERE ((((((t1.c0 IN (rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END)))OR((((rt0.c2)) NOT BETWEEN ((t1.c1)) AND ((x''))))));
SELECT MAX(t1.c0) FROM t1 WHERE (((-1367653470) NOTNULL));
SELECT MAX(t1.c0) FROM t1 WHERE (((-1367653470) NOTNULL)) LIMIT 1;
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c2 IN (t1.c0))))>=(((NOT (rt0.c3)))))) ORDER BY ((rt0.c2 COLLATE BINARY)/(CASE rt0.c0  WHEN t1.c1 THEN t1.c1 ELSE rt0.c4 END)), CAST(((((((((t1.c0)AND(rt0.c1)))OR(t1.c1)))AND(rt0.c2)))AND(t1.c1)) AS BLOB) ASC;
SELECT ALL * FROM t1, rt0 WHERE (((((((rt0.c2 IN (t1.c0))))>=(((NOT (rt0.c3))))))AND('~-~9RU'))) ORDER BY CASE WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c4) NOTNULL) END ASC  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM t1, rt0 WHERE (CASE ((rt0.c1)>>(rt0.c1))  WHEN (+ (rt0.c2)) THEN ((rt0.c4)AND(rt0.c4)) END) ORDER BY CASE WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c4) NOTNULL) END ASC  NULLS FIRST LIMIT 0x2;
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c2 IN (t1.c0))))>=(((NOT (rt0.c3)))))) ORDER BY ((rt0.c2 COLLATE BINARY)/(CASE rt0.c0  WHEN t1.c1 THEN t1.c1 ELSE rt0.c4 END)), CAST(((((((((t1.c0)AND(rt0.c1)))OR(t1.c1)))AND(rt0.c2)))AND(t1.c1)) AS BLOB) ASC;
SELECT ALL * FROM t1, rt0 WHERE (((((((rt0.c2 IN (t1.c0))))>=(((NOT (rt0.c3))))))AND('~-~9RU'))) ORDER BY CASE WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c4) NOTNULL) END ASC  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL * FROM t1, rt0 WHERE (CASE ((rt0.c1)>>(rt0.c1))  WHEN (+ (rt0.c2)) THEN ((rt0.c4)AND(rt0.c4)) END) ORDER BY CASE WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c4) NOTNULL) END ASC  NULLS FIRST LIMIT 0x2;
SELECT * FROM rt0 WHERE (TRIM(((rt0.c0)+(rt0.c4)), rt0.c4 COLLATE RTRIM));
SELECT * FROM rt0 WHERE (TRIM(((rt0.c0)+(rt0.c4)), rt0.c4 COLLATE RTRIM)) INTERSECT SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c0) NOT BETWEEN ('52943749') AND (rt0.c4))) AND (((rt0.c2) IS FALSE))));
SELECT * FROM rt0 WHERE (TRIM(((rt0.c0)+(rt0.c4)), rt0.c4 COLLATE RTRIM));
SELECT * FROM rt0 WHERE (TRIM(((rt0.c0)+(rt0.c4)), rt0.c4 COLLATE RTRIM)) INTERSECT SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c0) NOT BETWEEN ('52943749') AND (rt0.c4))) AND (((rt0.c2) IS FALSE))));
SELECT MAX(rt0.c4) FROM rt0 WHERE (rt0.c3) ORDER BY (((rt0.c1 COLLATE NOCASE, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END, rt0.c1))<((LOWER(DISTINCT 0.9609621717750378), CAST(rt0.c1 AS NUMERIC), (((rt0.c4, rt0.c4, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c2)))))) ASC, rt0.c1 DESC  NULLS FIRST, (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((HEX(rt0.c3), rt0.c3 COLLATE BINARY, (rt0.c0 IN ()))) AND (((+ (rt0.c1)), SUBSTR(rt0.c3, rt0.c4), rt0.c0)))  NULLS LAST;
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((rt0.c3)AND(CAST(CAST(rt0.c2 AS TEXT) AS BLOB)))) ORDER BY (((rt0.c1 COLLATE NOCASE, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END, rt0.c1))<((LOWER(DISTINCT 0.9609621717750378), CAST(rt0.c1 AS NUMERIC), (((rt0.c4, rt0.c4, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c2)))))) ASC, rt0.c1 DESC  NULLS FIRST, (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((HEX(rt0.c3), rt0.c3 COLLATE BINARY, (rt0.c0 IN ()))) AND (((+ (rt0.c1)), SUBSTR(rt0.c3, rt0.c4), rt0.c0)))  NULLS LAST;
SELECT * FROM rt0, t1 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) DESC;
SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) DESC LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE (rt0.c1) ORDER BY ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) DESC LIMIT 0X3;
SELECT * FROM rt0, t1 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) DESC;
SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) DESC LIMIT 0x3 INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE (rt0.c1) ORDER BY ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) DESC LIMIT 0X3;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS NUMERIC)) ORDER BY ((CAST(t1.c0 AS REAL))LIKE((+ (t1.c1))))  NULLS LAST, (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN 0.7360820948847103 ELSE t1.c0 END, ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1))))==(((((t1.c0, 0.8631245042239211, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((t1.c1, 0Xffffffffae7b43a2, t1.c1))), LIKELIHOOD(DISTINCT t1.c1, t1.c0), ((((t1.c0)OR(t1.c0)))AND(t1.c1)))))  NULLS LAST, ((((((t1.c1 COLLATE NOCASE)OR(NULLIF(t1.c0, t1.c1))))AND(t1.c1)))OR(((t1.c0)<>(t1.c0))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS NUMERIC)) ORDER BY ((((t1.c1)=(t1.c1))) ISNULL)  NULLS LAST INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE ((~ (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c1))))) ORDER BY ((((t1.c1)=(t1.c1))) ISNULL)  NULLS LAST;
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c1))<=((rt0.c0))) IN ())) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (t1.c1)) IN ((~ (-1523527321)))) ASC;
SELECT ALL * FROM t1, rt0 WHERE (((((((rt0.c1))<=((rt0.c0))) IN ()))AND(((((((((((((rt0.c1)OR(NULL)))OR(rt0.c4)))AND(rt0.c3)))OR(NULL)))AND(rt0.c2))) IS FALSE)))) ORDER BY ((CASE WHEN rt0.c2 THEN t1.c1 END) NOT BETWEEN (NULL) AND (((rt0.c4) IS FALSE))) DESC INTERSECT SELECT ALL * FROM t1, rt0 WHERE (rt0.c0 COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c2 THEN t1.c1 END) NOT BETWEEN (NULL) AND (((rt0.c4) IS FALSE))) DESC;
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c1))<=((rt0.c0))) IN ())) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (t1.c1)) IN ((~ (-1523527321)))) ASC;
SELECT ALL * FROM t1, rt0 WHERE (((((((rt0.c1))<=((rt0.c0))) IN ()))AND(((((((((((((rt0.c1)OR(NULL)))OR(rt0.c4)))AND(rt0.c3)))OR(NULL)))AND(rt0.c2))) IS FALSE)))) ORDER BY ((CASE WHEN rt0.c2 THEN t1.c1 END) NOT BETWEEN (NULL) AND (((rt0.c4) IS FALSE))) DESC INTERSECT SELECT ALL * FROM t1, rt0 WHERE (rt0.c0 COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c2 THEN t1.c1 END) NOT BETWEEN (NULL) AND (((rt0.c4) IS FALSE))) DESC;
SELECT ALL * FROM t1, rt0 WHERE ((((t1.c1, rt0.c1, rt0.c4, t1.c1)) NOT BETWEEN ((t1.c1 COLLATE NOCASE, TRIM(x''), ((rt0.c2)AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) AND (((((rt0.c1))==((t1.c1))), t1.c0, (- (rt0.c4)), ((rt0.c4)<=(rt0.c3)))))) ORDER BY (((((((NOT (t1.c0)))AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (t1.c1)))))AND((NOT (t1.c0)))))AND(t1.c0 COLLATE BINARY)), (- (((rt0.c4) NOTNULL))) ASC, rt0.c0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((((((t1.c1, rt0.c1, rt0.c4, t1.c1)) NOT BETWEEN ((t1.c1 COLLATE NOCASE, TRIM(x''), ((rt0.c2)AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) AND (((((rt0.c1))==((t1.c1))), t1.c0, (- (rt0.c4)), ((rt0.c4)<=(rt0.c3))))))AND((((- (rt0.c1))) BETWEEN (CASE rt0.c2  WHEN t1.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 ELSE x'b0' END) AND ((NOT (rt0.c0))))))) ORDER BY (((((((NOT (t1.c0)))AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (t1.c1)))))AND((NOT (t1.c0)))))AND(t1.c0 COLLATE BINARY)), (- (((rt0.c4) NOTNULL))) ASC, rt0.c0 INTERSECT SELECT DISTINCT * FROM t1, rt0 WHERE ((- ((((t1.c0, t1.c0, rt0.c2))<=((rt0.c0, 0.9786272823933153, rt0.c2)))))) ORDER BY (((((((NOT (t1.c0)))AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (t1.c1)))))AND((NOT (t1.c0)))))AND(t1.c0 COLLATE BINARY)), (- (((rt0.c4) NOTNULL))) ASC, rt0.c0;
SELECT ALL * FROM t1, rt0 WHERE ((((t1.c1, rt0.c1, rt0.c4, t1.c1)) NOT BETWEEN ((t1.c1 COLLATE NOCASE, TRIM(x''), ((rt0.c2)AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) AND (((((rt0.c1))==((t1.c1))), t1.c0, (- (rt0.c4)), ((rt0.c4)<=(rt0.c3)))))) ORDER BY (((((((NOT (t1.c0)))AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (t1.c1)))))AND((NOT (t1.c0)))))AND(t1.c0 COLLATE BINARY)), (- (((rt0.c4) NOTNULL))) ASC, rt0.c0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((((((t1.c1, rt0.c1, rt0.c4, t1.c1)) NOT BETWEEN ((t1.c1 COLLATE NOCASE, TRIM(x''), ((rt0.c2)AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) AND (((((rt0.c1))==((t1.c1))), t1.c0, (- (rt0.c4)), ((rt0.c4)<=(rt0.c3))))))AND((((- (rt0.c1))) BETWEEN (CASE rt0.c2  WHEN t1.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 ELSE x'b0' END) AND ((NOT (rt0.c0))))))) ORDER BY (((((((NOT (t1.c0)))AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (t1.c1)))))AND((NOT (t1.c0)))))AND(t1.c0 COLLATE BINARY)), (- (((rt0.c4) NOTNULL))) ASC, rt0.c0 INTERSECT SELECT DISTINCT * FROM t1, rt0 WHERE ((- ((((t1.c0, t1.c0, rt0.c2))<=((rt0.c0, 0.9786272823933153, rt0.c2)))))) ORDER BY (((((((NOT (t1.c0)))AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (t1.c1)))))AND((NOT (t1.c0)))))AND(t1.c0 COLLATE BINARY)), (- (((rt0.c4) NOTNULL))) ASC, rt0.c0;
SELECT ALL MAX(rt0.c1) FROM rt0, t1 WHERE (((((((rt0.c1)<=(rt0.c2)))AND(((0x1da3bcee)AND(rt0.c1)))))AND(t1.c0 COLLATE BINARY))) ORDER BY CAST(((t1.c0)+(t1.c0)) AS INTEGER) ASC, CASE WHEN 0.25575416099087456 THEN ((rt0.c0)>=(rt0.c4)) WHEN rt0.c3 COLLATE RTRIM THEN ((0.5593079148814131) BETWEEN (rt0.c3) AND (rt0.c2)) END  NULLS LAST;
SELECT ALL MAX(rt0.c1) FROM rt0, t1 WHERE (((((((rt0.c1)==(rt0.c2)))AND(((0x1da3bcee)AND(rt0.c1)))))AND(t1.c0 COLLATE BINARY))) ORDER BY CAST(((t1.c0)+(t1.c0)) AS INTEGER) ASC, CASE WHEN 0.25575416099087456 THEN ((rt0.c0)>=(rt0.c4)) WHEN rt0.c3 COLLATE RTRIM THEN ((0.5593079148814131) BETWEEN (rt0.c3) AND (rt0.c2)) END  NULLS LAST LIMIT 0 INTERSECT SELECT MAX(rt0.c1) FROM rt0, t1 WHERE ((((rt0.c1 COLLATE NOCASE, ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)), CASE rt0.c3  WHEN rt0.c0 THEN t1.c1 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END))>((((t1.c1) BETWEEN (rt0.c3) AND (rt0.c2)), CAST(rt0.c2 AS BLOB), (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))))) ORDER BY CAST(((t1.c0)+(t1.c0)) AS INTEGER) ASC, CASE WHEN 0.25575416099087456 THEN ((rt0.c0)>=(rt0.c4)) WHEN rt0.c3 COLLATE RTRIM THEN ((0.5593079148814131) BETWEEN (rt0.c3) AND (rt0.c2)) END  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (LIKELIHOOD(t1.c1, NULL) COLLATE NOCASE COLLATE BINARY) ORDER BY CASE WHEN ((t1.c1)OR(t1.c1)) THEN NULL WHEN ((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(x'a49b')))OR(t1.c1)))OR(t1.c1)) THEN ((t1.c0) IS FALSE) END  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (LIKELIHOOD(t1.c1, NULL) COLLATE NOCASE COLLATE BINARY) ORDER BY CASE WHEN ((t1.c1)OR(t1.c1)) THEN NULL WHEN ((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(x'a49b')))OR(t1.c1)))OR(t1.c1)) THEN ((t1.c0) IS FALSE) END  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE WHEN ((t1.c1)OR(t1.c1)) THEN NULL WHEN ((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(x'a49b')))OR(t1.c1)))OR(t1.c1)) THEN ((t1.c0) IS FALSE) END  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (LIKELIHOOD(t1.c1, NULL) COLLATE NOCASE COLLATE BINARY) ORDER BY CASE WHEN ((t1.c1)OR(t1.c1)) THEN NULL WHEN ((((((((((t1.c0)AND(t1.c1)))AND(t1.c0)))AND(x'a49b')))OR(t1.c1)))OR(t1.c1)) THEN ((t1.c0) IS FALSE) END  NULLS FIRST;
SELECT MIN(rt0.c2) FROM t1, rt0 WHERE (((CAST(rt0.c2 AS REAL))IS(((rt0.c1) IS FALSE))));
SELECT DISTINCT MIN(rt0.c2) FROM t1, rt0 WHERE (((((CAST(rt0.c2 AS REAL))IS(((rt0.c1) IS FALSE))))AND(NULL))) ORDER BY ((((((((((((((t1.c1)AND(t1.c1)))AND(0xffffffffb2c650a1)))AND('B')))AND(rt0.c4)))OR(CAST(t1.c1 AS INTEGER))))OR(((rt0.c4) NOT NULL))))OR(LTRIM(t1.c0, rt0.c1)))  NULLS LAST, CASE DATE(rt0.c2, rt0.c4, t1.c0)  WHEN CAST(rt0.c0 AS REAL) THEN (((rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c2))) WHEN ((rt0.c4)<<(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN t1.c1 THEN NULL WHEN rt0.c3 THEN t1.c1 ELSE rt0.c1 END WHEN '640271764' THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (~ (rt0.c2)) THEN ((rt0.c1)|(t1.c1)) WHEN ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c3)>=(t1.c0)) END  NULLS LAST LIMIT 0X0;
SELECT * FROM rt0 WHERE (LIKELY(DISTINCT x'')) ORDER BY ((0.8697359221556803)<(LOWER(rt0.c2))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((LIKELY(DISTINCT x''))AND((NOT ((rt0.c3 IN (rt0.c3))))))) ORDER BY ((((((((rt0.c1) NOT NULL))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND((((x'70da35', rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c4)) AND ((rt0.c0, '1755648222'))))))OR(((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))) DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM rt0 WHERE (LIKELY(DISTINCT x'')) ORDER BY ((0.8697359221556803)<(LOWER(rt0.c2))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((LIKELY(DISTINCT x''))AND((NOT ((rt0.c3 IN (rt0.c3))))))) ORDER BY ((((((((rt0.c1) NOT NULL))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND((((x'70da35', rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c4)) AND ((rt0.c0, '1755648222'))))))OR(((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))) DESC  NULLS FIRST LIMIT 0x0;
SELECT * FROM t1 NATURAL JOIN rt0 WHERE (CAST('-668250023' AS INTEGER));
SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE (CAST('-668250023' AS INTEGER)) LIMIT 0X2 INTERSECT SELECT * FROM t1 NATURAL JOIN rt0 WHERE (CASE NULL  WHEN ((rt0.c1) IS FALSE) THEN t1.c0 END) LIMIT 2;
SELECT * FROM t1 NATURAL JOIN rt0 WHERE (CAST('-668250023' AS INTEGER));
SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE (CAST('-668250023' AS INTEGER)) LIMIT 0X2 INTERSECT SELECT * FROM t1 NATURAL JOIN rt0 WHERE (CASE NULL  WHEN ((rt0.c1) IS FALSE) THEN t1.c0 END) LIMIT 2;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) IS TRUE)))<((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c0) IS TRUE)))<((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c2))))))AND(CAST(0.02805746816460175 AS BLOB)))) LIMIT 0x0 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c1 COLLATE RTRIM)OR(((x'a06a') NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(NULL)))AND(UPPER(rt0.c1))))AND(rt0.c0))) LIMIT 0;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))>=(((rt0.c2)IS(rt0.c1))))) ORDER BY TRIM(rt0.c2, rt0.c3) COLLATE RTRIM ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))==(((rt0.c2)IS(rt0.c1)))))AND(x'83'))) ORDER BY TRIM(rt0.c2, rt0.c3) COLLATE RTRIM ASC  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c4))>((rt0.c0, rt0.c4)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND ((NOT (rt0.c0))))) ORDER BY TRIM(rt0.c2, rt0.c3) COLLATE RTRIM ASC  NULLS LAST LIMIT 1;
SELECT * FROM rt0, t1 WHERE ((0.3184564736839509 IN ())) ORDER BY (((((((t1.c1)OR(t1.c1)))AND(rt0.c4)), ((t1.c1) NOT NULL)))<=((NULL, ((t1.c0)IS NOT(rt0.c4))))) DESC, CASE WHEN HEX(0x69d73dc7) THEN 'F(?' END DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((0.3184564736839509 IN ()))AND(((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c0)%(rt0.c1)))))AND(((t1.c1) BETWEEN (rt0.c1) AND (rt0.c4))))))) ORDER BY ((json_quote(x''))IS NOT((+ (rt0.c3)))) ASC, NULL COLLATE NOCASE COLLATE BINARY  NULLS LAST LIMIT 0;
SELECT * FROM rt0, t1 WHERE ((0.3184564736839509 IN ())) ORDER BY (((((((t1.c1)OR(t1.c1)))AND(rt0.c4)), ((t1.c1) NOT NULL)))<=((NULL, ((t1.c0)IS NOT(rt0.c4))))) DESC, CASE WHEN HEX(0x69d73dc7) THEN 'F(?' END DESC  NULLS FIRST;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((0.3184564736839509 IN ()))AND(((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c0)%(rt0.c1)))))AND(((t1.c1) BETWEEN (rt0.c1) AND (rt0.c4))))))) ORDER BY ((json_quote(x''))IS NOT((+ (rt0.c3)))) ASC, NULL COLLATE NOCASE COLLATE BINARY  NULLS LAST LIMIT 0;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (CAST(((t1.c0)OR(t1.c0)) AS BLOB));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((CAST(((t1.c0)OR(t1.c0)) AS BLOB))AND(((LIKE(t1.c0, t1.c1, '*')) BETWEEN ((t1.c1 IN ())) AND (JULIANDAY(t1.c1, t1.c1, t1.c1, t1.c1, t1.c1)))))) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((t1.c1)<=(t1.c1))) BETWEEN (((((((t1.c1)AND(t1.c1)))OR(t1.c1)))OR(NULL))) AND (t1.c1)));
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (((t1.c1) NOTNULL)))) ORDER BY t1.c1 COLLATE BINARY ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((~ (((t1.c1) NOTNULL)))) ORDER BY t1.c1 COLLATE BINARY ASC;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c0)) BETWEEN ((NULL)) AND (((+ (t1.c1))))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((t1.c0)) BETWEEN ((NULL)) AND (((+ (t1.c1))))))AND(((CAST(t1.c0 AS INTEGER)) NOT BETWEEN ((t1.c1 IN (t1.c1))) AND (((t1.c0) ISNULL)))))) LIMIT 2 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((t1.c1 COLLATE BINARY)AND(((t1.c1)<(t1.c0))))) LIMIT 0X2;
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS BLOB))*(CASE WHEN rt0.c2 THEN 'y*Z(]5n7U' WHEN rt0.c2 THEN rt0.c2 END)));
SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c4 AS BLOB))*(CASE WHEN rt0.c2 THEN 'y*Z(]5n7U' WHEN rt0.c2 THEN rt0.c2 END)))AND((- (rt0.c3))))) ORDER BY ((IFNULL(DISTINCT rt0.c1, rt0.c3))*(rt0.c3 COLLATE BINARY)), (- (rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS BLOB))*(CASE WHEN rt0.c2 THEN 'y*Z(]5n7U' WHEN rt0.c2 THEN rt0.c2 END)));
SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c4 AS BLOB))*(CASE WHEN rt0.c2 THEN 'y*Z(]5n7U' WHEN rt0.c2 THEN rt0.c2 END)))AND((- (rt0.c3))))) ORDER BY ((IFNULL(DISTINCT rt0.c1, rt0.c3))*(rt0.c3 COLLATE BINARY)), (- (rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((((rt0.c3)/(rt0.c3)) IN ()));
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE ((((rt0.c3)/(rt0.c3)) IN ())) LIMIT 0 INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (((rt0.c3) IS TRUE) COLLATE RTRIM) LIMIT 0;
SELECT COUNT(*) FROM rt0, t1 WHERE (((('#N', t1.c1, t1.c0)) NOT BETWEEN ((json_type(rt0.c4), (rt0.c4 IN ()), rt0.c0)) AND ((t1.c0, ((rt0.c0) BETWEEN (rt0.c2) AND (t1.c1)), ((rt0.c4) IS TRUE)))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((('#N', t1.c1, t1.c0)) NOT BETWEEN ((json_type(rt0.c4), (rt0.c4 IN ()), rt0.c0)) AND ((t1.c0, ((rt0.c0) BETWEEN (rt0.c2) AND (t1.c1)), ((rt0.c4) IS TRUE)))))AND((((((t1.c0)|(rt0.c0)), CAST('TRUE' AS NUMERIC)))<=(((~ (rt0.c2)), ((rt0.c1)>=(rt0.c3)))))))) LIMIT 0X0 INTERSECT SELECT COUNT(*) FROM rt0, t1 WHERE ((((rt0.c0) IS FALSE) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (x'')), (NOT (rt0.c2))))) LIMIT 0;
SELECT ALL MIN(t1.c0) FROM rt0, t1 WHERE (0.3619222371602505);
SELECT DISTINCT MIN(t1.c0) FROM rt0, t1 WHERE (0.3619222371602505);
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON ((((((rt0.c4, x'')) NOT BETWEEN ((rt0.c2, rt0.c4)) AND ((rt0.c2, rt0.c0)))))<((json_insert(rt0.c3, t1.c1, NULL)))) WHERE (((t1.c1)+(((rt0.c3)IS(rt0.c4))))) ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON ((((((rt0.c4, x'')) NOT BETWEEN ((rt0.c2, rt0.c4)) AND ((rt0.c2, rt0.c0)))))<((json_insert(rt0.c3, t1.c1, NULL)))) WHERE (((((t1.c1)+(((rt0.c3)IS(rt0.c4)))))AND(rt0.c0))) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c3) COLLATE BINARY ASC, DATETIME(((((0.4125285432031469)AND(t1.c0)))AND(rt0.c2)), (- (rt0.c4)), ((t1.c0) NOT NULL))  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c0) IS FALSE) IN (LTRIM(t1.c0, t1.c0))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((((((t1.c0) IS FALSE) IN (LTRIM(t1.c0, t1.c0))))AND((((t1.c1))>=((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 WHEN x'' THEN t1.c1 WHEN t1.c0 THEN t1.c1 END)))))) ORDER BY ((LIKELIHOOD(t1.c1, t1.c1)) ISNULL) LIMIT 1 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((CAST(t1.c1 AS NUMERIC))OR(((((t1.c0)AND(t1.c1)))OR(t1.c0)))))OR(t1.c1))) ORDER BY ((LIKELIHOOD(t1.c1, t1.c1)) ISNULL) LIMIT 1;
SELECT ALL MAX(rt0.c2) FROM rt0, t1 WHERE (LOWER(((rt0.c0) BETWEEN (t1.c1) AND (rt0.c1))));
SELECT MAX(rt0.c2) FROM rt0, t1 WHERE (LOWER(((rt0.c0) BETWEEN (t1.c1) AND (rt0.c1)))) ORDER BY (NOT (rt0.c4 COLLATE NOCASE)) DESC  NULLS FIRST, ((((t1.c0)OR(rt0.c0)))GLOB(rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST, '168752479';
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))IS NOT(rt0.c2))) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)), CAST(rt0.c0 AS INTEGER)))=((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)), ((rt0.c1)*(rt0.c4)))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))IS NOT(rt0.c2))) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)), CAST(rt0.c0 AS INTEGER)))==((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)), ((rt0.c1)*(rt0.c4)))))  NULLS FIRST LIMIT 3 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)), CAST(rt0.c0 AS INTEGER)))=((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)), ((rt0.c1)*(rt0.c4)))))  NULLS FIRST LIMIT 3;
SELECT MAX(rt0.c0) FROM rt0 INNER JOIN t1 ON (((rt0.c2, NULL)) BETWEEN ((((rt0.c2)<(rt0.c3)), load_extension(rt0.c2))) AND (((((rt0.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((rt0.c1, rt0.c1))), CAST(t1.c0 AS INTEGER)))) WHERE (((STRFTIME(rt0.c4, rt0.c2, '-247367585'))|(((rt0.c0)&(rt0.c0)))));
SELECT ALL MAX(rt0.c0) FROM rt0 INNER JOIN t1 ON (((rt0.c2, NULL)) BETWEEN ((((rt0.c2)<(rt0.c3)), load_extension(rt0.c2))) AND (((((rt0.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((rt0.c1, rt0.c1))), CAST(t1.c0 AS INTEGER)))) WHERE (((((STRFTIME(rt0.c4, rt0.c2, '-247367585'))|(((rt0.c0)&(rt0.c0)))))AND(((((rt0.c1) NOT BETWEEN (t1.c0) AND (rt0.c2)))|((+ (rt0.c1)))))));
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON '*h' WHERE (((CAST(rt0.c2 AS BLOB))|(QUOTE(''))));
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON '*h' WHERE (((((CAST(rt0.c2 AS BLOB))|(QUOTE(''))))AND((~ ((((rt0.c3))<=((x'')))))))) INTERSECT SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON '*h' WHERE (((NULL) NOT BETWEEN (((t1.c0)<=(t1.c1))) AND (CASE t1.c1  WHEN t1.c1 THEN rt0.c1 ELSE rt0.c3 END)));
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON '*h' WHERE (((CAST(rt0.c2 AS BLOB))|(QUOTE(''))));
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON '*h' WHERE (((((CAST(rt0.c2 AS BLOB))|(QUOTE(''))))AND((~ ((((rt0.c3))<=((x'')))))))) INTERSECT SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON '*h' WHERE (((NULL) NOT BETWEEN (((t1.c0)<=(t1.c1))) AND (CASE t1.c1  WHEN t1.c1 THEN rt0.c1 ELSE rt0.c3 END)));
SELECT ALL COUNT(*) FROM t1 WHERE (((8.36849508E8) NOT BETWEEN ((- (t1.c0))) AND (CASE t1.c1  WHEN t1.c1 THEN '1440687541' WHEN t1.c1 THEN t1.c0 END)));
SELECT ALL COUNT(*) FROM t1 WHERE (((((8.36849508E8) NOT BETWEEN ((- (t1.c0))) AND (CASE t1.c1  WHEN t1.c1 THEN '1440687541' WHEN t1.c1 THEN t1.c0 END)))AND((('-1964619606')IS(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))))) LIMIT 1;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (CAST(rt0.c3 COLLATE RTRIM AS NUMERIC)) ORDER BY (+ (NULL COLLATE RTRIM)) ASC  NULLS FIRST, rt0.c0;
SELECT DISTINCT MIN(rt0.c3) FROM rt0 NOT INDEXED WHERE (CAST(rt0.c3 COLLATE RTRIM AS NUMERIC)) ORDER BY ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM  NULLS FIRST, (json_remove(rt0.c4, rt0.c2, rt0.c3, rt0.c3) IN (CAST(rt0.c3 AS NUMERIC), CASE rt0.c1  WHEN rt0.c3 THEN ')3빫' ELSE rt0.c3 END, ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) ASC;
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ('j~R', rt0.c0))) NOT NULL));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1 IN ('j~R', rt0.c0))) NOT NULL))AND(((ROUND('200363389', rt0.c4))<=(((rt0.c2)GLOB(rt0.c3))))))) LIMIT 1;
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ('j~R', rt0.c0))) NOT NULL));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1 IN ('j~R', rt0.c0))) NOT NULL))AND(((ROUND('200363389', rt0.c4))<=(((rt0.c2)GLOB(rt0.c3))))))) LIMIT 1;
SELECT MAX(rt0.c2) FROM rt0 WHERE (0xffffffffa25ce054);
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE (-1570971564) ORDER BY CASE WHEN ((rt0.c1)||(rt0.c2)) THEN COALESCE(rt0.c3, '1941895272') WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS BLOB) END  NULLS LAST;
SELECT * FROM rt0 WHERE (UNICODE((NOT (rt0.c4))));
SELECT ALL * FROM rt0 WHERE (((UNICODE((NOT (rt0.c4))))AND((~ (((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c2))))))) ORDER BY NULL ASC, ('' COLLATE BINARY IN (LOWER(DISTINCT rt0.c1))) LIMIT 0x2;
SELECT * FROM rt0 WHERE (UNICODE((NOT (rt0.c4))));
SELECT ALL * FROM rt0 WHERE (((UNICODE((NOT (rt0.c4))))AND((~ (((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c2))))))) ORDER BY NULL ASC, ('' COLLATE BINARY IN (LOWER(DISTINCT rt0.c1))) LIMIT 0x2;
SELECT * FROM t1 INNER JOIN rt0 ON INSTR(rt0.c2, ((rt0.c2)+(rt0.c2))) WHERE (((t1.c1) ISNULL) COLLATE BINARY);
SELECT DISTINCT * FROM t1 INNER JOIN rt0 ON INSTR(rt0.c2, ((rt0.c2)+(rt0.c2))) WHERE (((t1.c1) ISNULL) COLLATE BINARY) ORDER BY 1729964428  NULLS LAST;
SELECT * FROM t1 INNER JOIN rt0 ON INSTR(rt0.c2, ((rt0.c2)+(rt0.c2))) WHERE (((t1.c1) ISNULL) COLLATE BINARY);
SELECT DISTINCT * FROM t1 INNER JOIN rt0 ON INSTR(rt0.c2, ((rt0.c2)+(rt0.c2))) WHERE (((t1.c1) ISNULL) COLLATE BINARY) ORDER BY 1729964428  NULLS LAST;
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON CAST(((t1.c0) NOT NULL) AS BLOB) WHERE (CASE WHEN (+ (t1.c0)) THEN (- (x'48c3')) END);
SELECT DISTINCT COUNT(*) FROM t1 CROSS JOIN rt0 ON CAST(((t1.c0) NOT NULL) AS BLOB) WHERE (((CASE WHEN (+ (t1.c0)) THEN (- (x'48c3')) END)AND((((((((((rt0.c3, rt0.c1, NULL, rt0.c4))>((rt0.c1, rt0.c4, rt0.c3, 0Xffffffffd64b1e78))))OR(t1.c1 COLLATE NOCASE)))OR(rt0.c0)))AND(CASE WHEN t1.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE t1.c1 END))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)/((((rt0.c2, rt0.c1, rt0.c4))!=((rt0.c0, rt0.c1, '0.5357209095212832'))))) DESC, ((((t1.c1) NOTNULL)) NOT BETWEEN (((t1.c0)||(rt0.c1))) AND (rt0.c3 COLLATE BINARY)) DESC;
SELECT ALL MAX(t1.c1) FROM t1, rt0 WHERE (0.44322385008949594) ORDER BY (((rt0.c1, rt0.c4, 0Xfffffffff1bc6ce4)) BETWEEN ((rt0.c2, rt0.c0, rt0.c4)) AND ((rt0.c0, t1.c1, t1.c1))) COLLATE NOCASE ASC  NULLS FIRST, t1.c1 ASC;
SELECT MAX(t1.c1) FROM t1, rt0 WHERE (((0.44322385008949594)AND(load_extension(CASE WHEN t1.c1 THEN t1.c1 END, rt0.c3)))) ORDER BY (((rt0.c1, rt0.c4, -239309596)) BETWEEN ((rt0.c2, rt0.c0, rt0.c4)) AND ((rt0.c0, t1.c1, t1.c1))) COLLATE NOCASE ASC  NULLS FIRST, t1.c1 ASC LIMIT 0x1;
SELECT MIN(rt0.c4) FROM rt0, t1 WHERE ((+ (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))))) ORDER BY ((x'34') NOT NULL) COLLATE BINARY DESC, (CAST(t1.c0 AS BLOB) IN ((NOT (t1.c0)))) DESC;
SELECT DISTINCT MIN(rt0.c4) FROM rt0, t1 WHERE ((((+ (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND(rt0.c3))) ORDER BY ((t1.c1 IN ()) IN ()) INTERSECT SELECT DISTINCT MIN(rt0.c4) FROM rt0, t1 WHERE (TRIM(rt0.c1 COLLATE BINARY, CASE t1.c0  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END)) ORDER BY ((t1.c1 IN ()) IN ());
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((CAST(t1.c1 AS INTEGER))*(CASE WHEN t1.c1 THEN t1.c1 WHEN '-1295626079' THEN '-863649338' WHEN ')3빫' THEN t1.c0 ELSE t1.c0 END)));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER))*(CASE WHEN t1.c1 THEN t1.c1 WHEN '-1295626079' THEN '-863649338' WHEN ')3빫' THEN t1.c0 ELSE t1.c0 END)))AND((t1.c0 COLLATE NOCASE IN (CAST(t1.c1 AS BLOB)))))) ORDER BY (((t1.c0)GLOB(t1.c0)) IN ()), (+ (t1.c0)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c4, rt0.c2))!=((((('#m')AND(rt0.c0)))AND('-1295626079')))));
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((TRIM(DISTINCT rt0.c4, rt0.c2))<((((('#m')AND(rt0.c0)))AND('-1295626079')))))AND(CASE WHEN json_remove(rt0.c1, rt0.c0, rt0.c1) THEN ((rt0.c2)<=(rt0.c1)) WHEN (~ (rt0.c4)) THEN rt0.c3 WHEN (((rt0.c0, 0.6023321742302574, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0))) THEN (212962080 IN (rt0.c3)) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) END))) ORDER BY ((((rt0.c0) NOTNULL)) ISNULL)  NULLS FIRST LIMIT 0X7;
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c0)/(rt0.c2)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c4)/(rt0.c3)))))AND(TRIM(DISTINCT rt0.c4))))AND(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c4)<=(rt0.c0)))))AND((rt0.c1 IN (rt0.c4, rt0.c2)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((rt0.c0)/(rt0.c2)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c4)/(rt0.c3)))))AND(TRIM(DISTINCT rt0.c4))))AND(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c4)<=(rt0.c0)))))AND((rt0.c1 IN (rt0.c4)))))AND(NULL))) ORDER BY TYPEOF(DISTINCT ((rt0.c0) NOT NULL))  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c3)))IS NOT(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2))))) ORDER BY TYPEOF(DISTINCT ((rt0.c0) NOT NULL))  NULLS FIRST LIMIT 0x2;
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c0)/(rt0.c2)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c4)/(rt0.c3)))))AND(TRIM(DISTINCT rt0.c4))))AND(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c4)<=(rt0.c0)))))AND((rt0.c1 IN (rt0.c4, rt0.c2)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((rt0.c0)/(rt0.c2)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c4)/(rt0.c3)))))AND(TRIM(DISTINCT rt0.c4))))AND(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c4)<=(rt0.c0)))))AND((rt0.c1 IN (rt0.c4)))))AND(NULL))) ORDER BY TYPEOF(DISTINCT ((rt0.c0) NOT NULL))  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c3)))IS NOT(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2))))) ORDER BY TYPEOF(DISTINCT ((rt0.c0) NOT NULL))  NULLS FIRST LIMIT 0x2;
SELECT ALL MAX(rt0.c0) FROM rt0 WHERE (NULL) ORDER BY rt0.c3  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c0) FROM rt0 WHERE (((NULL)AND((((NOT (rt0.c3)))<>(((rt0.c0) BETWEEN (x'0c') AND (rt0.c2))))))) ORDER BY UPPER(DISTINCT NULL)  NULLS FIRST;
SELECT * FROM rt0 WHERE (x'51') ORDER BY (- (CHANGES())) ASC;
SELECT ALL * FROM rt0 WHERE (((x'51')AND(((0.4008083035734452) NOT NULL)))) ORDER BY (- (CHANGES())) ASC LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (NULL) ORDER BY (- (CHANGES())) ASC LIMIT 0;
SELECT * FROM rt0 WHERE (x'51') ORDER BY (- (CHANGES())) ASC;
SELECT ALL * FROM rt0 WHERE (((x'51')AND(((0.4008083035734452) NOT NULL)))) ORDER BY (- (CHANGES())) ASC LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE (NULL) ORDER BY (- (CHANGES())) ASC LIMIT 0;
SELECT ALL * FROM rt0, t1 WHERE ((CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END IN ()));
SELECT ALL * FROM rt0, t1 WHERE ((((CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END IN ()))AND((CAST(t1.c0 AS TEXT) IN ((+ (rt0.c1)), RTRIM(0X478b2ebf)))))) ORDER BY (rt0.c4 IN (((rt0.c3) NOT NULL)))  NULLS LAST INTERSECT SELECT ALL * FROM rt0, t1 WHERE ((((((t1.c0) BETWEEN (t1.c1) AND (rt0.c3)), ((rt0.c4)/(t1.c1))))>=((((rt0.c3)||(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END)))) ORDER BY (rt0.c4 IN (((rt0.c3) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM rt0, t1 WHERE ((CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END IN ()));
SELECT ALL * FROM rt0, t1 WHERE ((((CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END IN ()))AND((CAST(t1.c0 AS TEXT) IN ((+ (rt0.c1)), RTRIM(0X478b2ebf)))))) ORDER BY (rt0.c4 IN (((rt0.c3) NOT NULL)))  NULLS LAST INTERSECT SELECT ALL * FROM rt0, t1 WHERE ((((((t1.c0) BETWEEN (t1.c1) AND (rt0.c3)), ((rt0.c4)/(t1.c1))))>=((((rt0.c3)||(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END)))) ORDER BY (rt0.c4 IN (((rt0.c3) NOT NULL)))  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE (((COALESCE(t1.c1, t1.c1, t1.c1, t1.c0)) IS FALSE)) ORDER BY ((json_quote(t1.c0)) BETWEEN (((t1.c0)<>(t1.c0))) AND (NULL)), CASE WHEN ((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)) THEN ((t1.c0) ISNULL) END  NULLS LAST, x'56' DESC;
SELECT ALL MAX(t1.c0) FROM t1 WHERE (((((COALESCE(t1.c1, t1.c1, t1.c1, t1.c0)) IS FALSE))AND(((t1.c1)%(((t1.c1)LIKE(t1.c0))))))) ORDER BY ((json_quote(t1.c0)) BETWEEN (((t1.c0)!=(t1.c0))) AND (NULL)), CASE WHEN ((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)) THEN ((t1.c0) ISNULL) END  NULLS LAST, x'56' DESC LIMIT 1;
SELECT MAX(rt0.c2) FROM t1, rt0 WHERE ((((NOT (rt0.c0)))=(((((t1.c1)OR(t1.c0)))OR(rt0.c2)))));
SELECT DISTINCT MAX(rt0.c2) FROM t1, rt0 WHERE ((((((NOT (rt0.c0)))==(((((t1.c1)OR(t1.c0)))OR(rt0.c2)))))AND((((t1.c1, rt0.c1, rt0.c0, t1.c1)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 END, rt0.c3 COLLATE BINARY, ((((((rt0.c4)OR(rt0.c3)))AND(t1.c0)))OR(rt0.c0)), (((t1.c0, t1.c1))<((t1.c1, rt0.c0))))) AND ((((NULL)&(rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c4) AND (t1.c1)), (((rt0.c0, t1.c0, rt0.c1, t1.c0, rt0.c0, rt0.c4, t1.c1))<=((t1.c0, rt0.c0, rt0.c3, rt0.c4, t1.c1, rt0.c2, rt0.c0))), ((rt0.c4)!=(rt0.c1)))))))) ORDER BY (~ ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC  NULLS FIRST, (+ (rt0.c2 COLLATE BINARY)) DESC  NULLS LAST;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((((0.3488779971907122, 0.01161305878746699, rt0.c4)) BETWEEN ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)), CAST(rt0.c3 AS NUMERIC), (~ (rt0.c0)))) AND ((((rt0.c3) NOTNULL), ((rt0.c1) ISNULL), CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 END)))) ORDER BY (((((((rt0.c3)AND(rt0.c1)))AND(x'')))OR(rt0.c2)) IN ((rt0.c0 IN (rt0.c2)))) DESC, (((rt0.c2, rt0.c1)) BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c4))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT MIN(rt0.c2) FROM rt0 WHERE ((((((0.3488779971907122, 0.01161305878746699, rt0.c4)) BETWEEN ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)), CAST(rt0.c3 AS NUMERIC), (~ (rt0.c0)))) AND ((((rt0.c3) NOTNULL), ((rt0.c1) ISNULL), CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 END))))AND((((((((('
4')AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c2)))IS NOT(x'13'))))) ORDER BY (((((((rt0.c3)AND(rt0.c1)))AND(x'')))OR(rt0.c2)) IN ((rt0.c0 IN (rt0.c2)))) DESC, (((rt0.c2, rt0.c1)) BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c4))) COLLATE RTRIM ASC  NULLS FIRST LIMIT 0x1 INTERSECT SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((((rt0.c2, rt0.c4, rt0.c0)) BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c4, rt0.c3))) COLLATE RTRIM) ORDER BY (((((((rt0.c3)AND(rt0.c1)))AND(x'')))OR(rt0.c2)) IN ((rt0.c0 IN (rt0.c2)))) DESC, (((rt0.c2, rt0.c1)) BETWEEN ((rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c4))) COLLATE RTRIM ASC  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE (((((((((NULL)OR((('\8') NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((NULL) ISNULL))))OR(0X3a226208)))OR(0.7400464922542892)));
SELECT ALL * FROM t1 WHERE (((((((((((NULL)OR((('\8') NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((NULL) ISNULL))))OR(0x3a226208)))OR(0.7400464922542892)))AND(CAST(((t1.c0)GLOB(t1.c0)) AS REAL)))) ORDER BY ((((t1.c1)>=(t1.c1)))||((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((0.47050460326572263, t1.c0))))) INTERSECT SELECT * FROM t1 WHERE (((t1.c1) IS TRUE)) ORDER BY ((((t1.c1)>=(t1.c1)))||((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((0.47050460326572263, t1.c0)))));
SELECT * FROM t1 WHERE (((((((((NULL)OR((('\8') NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((NULL) ISNULL))))OR(0X3a226208)))OR(0.7400464922542892)));
SELECT ALL * FROM t1 WHERE (((((((((((NULL)OR((('\8') NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(((NULL) ISNULL))))OR(0x3a226208)))OR(0.7400464922542892)))AND(CAST(((t1.c0)GLOB(t1.c0)) AS REAL)))) ORDER BY ((((t1.c1)>=(t1.c1)))||((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((0.47050460326572263, t1.c0))))) INTERSECT SELECT * FROM t1 WHERE (((t1.c1) IS TRUE)) ORDER BY ((((t1.c1)>=(t1.c1)))||((((t1.c1, t1.c0)) BETWEEN ((t1.c1, t1.c0)) AND ((0.47050460326572263, t1.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN t1 ON (~ (((0.015853422435475162) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (CAST(rt0.c3 COLLATE BINARY AS NUMERIC)) ORDER BY t1.c0  NULLS FIRST;
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (~ (((0.015853422435475162) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (CAST(rt0.c3 COLLATE BINARY AS NUMERIC)) ORDER BY ((CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)GLOB(t1.c1)) ASC  NULLS FIRST, t1.c1 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (~ (((0.015853422435475162) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (((((rt0.c0)&(rt0.c1))) IS TRUE)) ORDER BY ((CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)GLOB(t1.c1)) ASC  NULLS FIRST, t1.c1 ASC  NULLS FIRST;
SELECT ALL * FROM rt0 CROSS JOIN t1 ON (~ (((0.015853422435475162) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (CAST(rt0.c3 COLLATE BINARY AS NUMERIC)) ORDER BY t1.c0  NULLS FIRST;
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (~ (((0.015853422435475162) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (CAST(rt0.c3 COLLATE BINARY AS NUMERIC)) ORDER BY ((CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)GLOB(t1.c1)) ASC  NULLS FIRST, t1.c1 ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (~ (((0.015853422435475162) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (((((rt0.c0)&(rt0.c1))) IS TRUE)) ORDER BY ((CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)GLOB(t1.c1)) ASC  NULLS FIRST, t1.c1 ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (json_valid(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN 5.2943749E7 ELSE t1.c1 END)) ORDER BY (NOT (t1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (json_valid(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN 5.2943749E7 ELSE t1.c1 END)) ORDER BY (NOT (t1.c0)) COLLATE NOCASE  NULLS FIRST LIMIT 0X3 INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0)) BETWEEN ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), t1.c0)))) ORDER BY (NOT (t1.c0)) COLLATE NOCASE  NULLS FIRST LIMIT 0x3;
SELECT * FROM t1 WHERE (json_valid(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN 5.2943749E7 ELSE t1.c1 END)) ORDER BY (NOT (t1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (json_valid(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN 5.2943749E7 ELSE t1.c1 END)) ORDER BY (NOT (t1.c0)) COLLATE NOCASE  NULLS FIRST LIMIT 0X3 INTERSECT SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0)) BETWEEN ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)) AND ((((t1.c0) BETWEEN (t1.c1) AND (t1.c0)), t1.c0)))) ORDER BY (NOT (t1.c0)) COLLATE NOCASE  NULLS FIRST LIMIT 0x3;
SELECT * FROM t1 INNER JOIN rt0 ON ((((NULL)=(rt0.c0)))=(((((rt0.c2)OR(t1.c1)))OR(rt0.c3)))) WHERE ((((((rt0.c3)AND(rt0.c4)))AND(x'5e')) IN (TRIM(DISTINCT rt0.c1))));
SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((NULL)=(rt0.c0)))==(((((rt0.c2)OR(t1.c1)))OR(rt0.c3)))) WHERE ((((((((rt0.c3)AND(rt0.c4)))AND(x'5e')) IN (TRIM(DISTINCT rt0.c1))))AND(load_extension(((t1.c0) NOT NULL), 0x7fd1b2cd)))) INTERSECT SELECT * FROM t1 INNER JOIN rt0 ON ((((NULL)==(rt0.c0)))=(((((rt0.c2)OR(t1.c1)))OR(rt0.c3)))) WHERE ((rt0.c4 IN (rt0.c1 COLLATE RTRIM)));
SELECT * FROM t1 INNER JOIN rt0 ON ((((NULL)=(rt0.c0)))=(((((rt0.c2)OR(t1.c1)))OR(rt0.c3)))) WHERE ((((((rt0.c3)AND(rt0.c4)))AND(x'5e')) IN (TRIM(DISTINCT rt0.c1))));
SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((NULL)=(rt0.c0)))==(((((rt0.c2)OR(t1.c1)))OR(rt0.c3)))) WHERE ((((((((rt0.c3)AND(rt0.c4)))AND(x'5e')) IN (TRIM(DISTINCT rt0.c1))))AND(load_extension(((t1.c0) NOT NULL), 0x7fd1b2cd)))) INTERSECT SELECT * FROM t1 INNER JOIN rt0 ON ((((NULL)==(rt0.c0)))=(((((rt0.c2)OR(t1.c1)))OR(rt0.c3)))) WHERE ((rt0.c4 IN (rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt0, t1 WHERE (((((((((((((t1.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)))AND(((t1.c1) ISNULL))))AND(((((rt0.c4)AND(t1.c1)))OR(t1.c1)))));
SELECT ALL * FROM rt0, t1 WHERE (((((((((((((t1.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)))AND(((t1.c1) ISNULL))))AND(((((rt0.c4)AND(t1.c1)))OR(t1.c1))))) ORDER BY ((((rt0.c1)+(t1.c0)))GLOB(rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, (((((rt0.c1)) BETWEEN ((t1.c0)) AND ((rt0.c4))))GLOB(rt0.c3)) ASC  NULLS LAST, t1.c1 INTERSECT SELECT * FROM rt0, t1 WHERE (('2016286577' IN ())) ORDER BY ((((rt0.c1)+(t1.c0)))GLOB(rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, (((((rt0.c1)) BETWEEN ((t1.c0)) AND ((rt0.c4))))GLOB(rt0.c3)) ASC  NULLS LAST, t1.c1;
SELECT ALL * FROM rt0, t1 WHERE (((((((((((((t1.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)))AND(((t1.c1) ISNULL))))AND(((((rt0.c4)AND(t1.c1)))OR(t1.c1)))));
SELECT ALL * FROM rt0, t1 WHERE (((((((((((((t1.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)))AND(((t1.c1) ISNULL))))AND(((((rt0.c4)AND(t1.c1)))OR(t1.c1))))) ORDER BY ((((rt0.c1)+(t1.c0)))GLOB(rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, (((((rt0.c1)) BETWEEN ((t1.c0)) AND ((rt0.c4))))GLOB(rt0.c3)) ASC  NULLS LAST, t1.c1 INTERSECT SELECT * FROM rt0, t1 WHERE (('2016286577' IN ())) ORDER BY ((((rt0.c1)+(t1.c0)))GLOB(rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, (((((rt0.c1)) BETWEEN ((t1.c0)) AND ((rt0.c4))))GLOB(rt0.c3)) ASC  NULLS LAST, t1.c1;
SELECT * FROM t1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND ((CAST(rt0.c0 AS NUMERIC)))));
SELECT * FROM t1, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND ((CAST(rt0.c0 AS NUMERIC)))))AND(((((rt0.c0)IS NOT(rt0.c0)))!=(((((rt0.c1)AND(0.5357209095212832)))AND(rt0.c1))))))) ORDER BY t1.c0;
SELECT * FROM t1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND ((CAST(rt0.c0 AS NUMERIC)))));
SELECT * FROM t1, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND ((CAST(rt0.c0 AS NUMERIC)))))AND(((((rt0.c0)IS NOT(rt0.c0)))!=(((((rt0.c1)AND(0.5357209095212832)))AND(rt0.c1))))))) ORDER BY t1.c0;
SELECT * FROM t1 WHERE ((((((t1.c1)AND(t1.c1)))AND(t1.c1)) IN (CASE x'31aa'  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, 0.22843655829954412)));
SELECT * FROM t1 WHERE ((((((t1.c1)AND(t1.c1)))AND(t1.c1)) IN (CASE x'31aa'  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, 0.22843655829954412)));
SELECT * FROM t1 WHERE ((((((t1.c1)AND(t1.c1)))AND(t1.c1)) IN (CASE x'31aa'  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, 0.22843655829954412)));
SELECT * FROM t1 WHERE ((((((t1.c1)AND(t1.c1)))AND(t1.c1)) IN (CASE x'31aa'  WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, 0.22843655829954412)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1) IS TRUE), (rt0.c0 IN (rt0.c3, rt0.c4))))!=((rt0.c4, ABS(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c1) IS TRUE), (rt0.c0 IN (rt0.c3, rt0.c4))))<((rt0.c4, ABS(rt0.c3)))))AND((LAST_INSERT_ROWID() IN (((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(0.2944892275122257)), json_patch(rt0.c1, rt0.c4), (((rt0.c3, rt0.c0, -2028853544)) BETWEEN (('-738026113', rt0.c2, rt0.c4)) AND ((rt0.c3, rt0.c1, rt0.c0)))))))) LIMIT 0 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3)>(rt0.c1)), rt0.c2, CAST(rt0.c2 AS NUMERIC)))=((((rt0.c0)<(rt0.c3)), (rt0.c2 IN (rt0.c4, rt0.c3, rt0.c0)), CAST(rt0.c0 AS NUMERIC))))) LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE (NULL);
SELECT COUNT(*) FROM t1 WHERE (((NULL)AND(((((t1.c0)/(t1.c0)))-(((((t1.c1)OR(t1.c0)))AND(t1.c1))))))) ORDER BY ((((t1.c1)LIKE(t1.c0))) BETWEEN ((((t1.c1, t1.c1, t1.c0))>((t1.c0, t1.c1, t1.c0)))) AND ((t1.c0 IN (t1.c0)))) ASC  NULLS LAST, ((((t1.c0) IS FALSE))IS NOT(((t1.c1)OR(x'25'))))  NULLS LAST, ((((((t1.c1)OR(t1.c0)))OR('-1443512580')))GLOB(((t1.c1)IS(t1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CAST(t1.c0 AS REAL)) ORDER BY ((((rt0.c2) BETWEEN ('') AND (rt0.c1))) NOTNULL) DESC  NULLS LAST, ((((rt0.c2)>>(0.7496797445186093))) NOT BETWEEN (((((((rt0.c0)AND(0.8828101734172602)))AND(rt0.c4)))AND(rt0.c0))) AND (((rt0.c4) ISNULL))) ASC  NULLS LAST, ((((NOT (t1.c0))))!=((LIKELIHOOD(t1.c0, rt0.c4))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(t1.c0 AS REAL)) ORDER BY ((((rt0.c2) BETWEEN ('') AND (rt0.c1))) NOTNULL) DESC  NULLS LAST, ((((rt0.c2)>>(0.7496797445186093))) NOT BETWEEN (((((((rt0.c0)AND(0.8828101734172602)))AND(rt0.c4)))AND(rt0.c0))) AND (((rt0.c4) ISNULL))) ASC  NULLS LAST, ((((NOT (t1.c0))))<>((LIKELIHOOD(t1.c0, rt0.c4))))  NULLS FIRST;
SELECT ALL MIN(t1.c0) FROM t1 WHERE (t1.c1);
SELECT ALL MIN(t1.c0) FROM t1 WHERE (((t1.c1)AND(((t1.c0) ISNULL)))) ORDER BY (NOT (CAST(t1.c1 AS INTEGER))) DESC  NULLS LAST, NULL, CAST(t1.c1 AS TEXT) DESC  NULLS FIRST;
SELECT MIN(t1.c1) FROM t1 WHERE ((((t1.c1)) BETWEEN ((CAST(t1.c0 AS REAL))) AND ((CAST(t1.c1 AS NUMERIC))))) ORDER BY CAST(((t1.c0) IS FALSE) AS TEXT) ASC, NULL DESC  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((t1.c1)) BETWEEN ((CAST(t1.c0 AS REAL))) AND ((CAST(t1.c1 AS NUMERIC))))) ORDER BY CAST(((t1.c0) IS FALSE) AS TEXT) ASC, NULL DESC  NULLS FIRST INTERSECT SELECT ALL MIN(t1.c1) FROM t1 WHERE ('ᚎ쒜') ORDER BY CAST(((t1.c0) IS FALSE) AS TEXT) ASC, NULL DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t1 WHERE (CASE ((rt0.c0)&(rt0.c2))  WHEN CAST(rt0.c1 AS REAL) THEN rt0.c4 WHEN (t1.c1 IN ()) THEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN t1.c0 ELSE t1.c1 END WHEN CASE t1.c0  WHEN t1.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE t1.c0 END THEN rt0.c2 END);
SELECT DISTINCT * FROM rt0, t1 WHERE (((CASE ((rt0.c0)&(rt0.c2))  WHEN CAST(rt0.c1 AS REAL) THEN rt0.c4 WHEN (t1.c1 IN ()) THEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN t1.c0 ELSE t1.c1 END WHEN CASE t1.c0  WHEN t1.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE t1.c0 END THEN rt0.c2 END)AND(CASE ((((((((((rt0.c3)OR(rt0.c1)))OR(t1.c1)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c2))  WHEN ((t1.c0)+(t1.c1)) THEN rt0.c0 WHEN (((t1.c0, ''))==((t1.c1, x'54160f'))) THEN CAST(rt0.c4 AS TEXT) WHEN (((t1.c1))!=((t1.c0))) THEN ((((t1.c0)AND(rt0.c4)))AND(rt0.c2)) WHEN ((rt0.c4)|(rt0.c1)) THEN rt0.c4 END)));
SELECT ALL * FROM rt0, t1 WHERE (CASE ((rt0.c0)&(rt0.c2))  WHEN CAST(rt0.c1 AS REAL) THEN rt0.c4 WHEN (t1.c1 IN ()) THEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN t1.c0 ELSE t1.c1 END WHEN CASE t1.c0  WHEN t1.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE t1.c0 END THEN rt0.c2 END);
SELECT DISTINCT * FROM rt0, t1 WHERE (((CASE ((rt0.c0)&(rt0.c2))  WHEN CAST(rt0.c1 AS REAL) THEN rt0.c4 WHEN (t1.c1 IN ()) THEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN t1.c0 ELSE t1.c1 END WHEN CASE t1.c0  WHEN t1.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE t1.c0 END THEN rt0.c2 END)AND(CASE ((((((((((rt0.c3)OR(rt0.c1)))OR(t1.c1)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c2))  WHEN ((t1.c0)+(t1.c1)) THEN rt0.c0 WHEN (((t1.c0, ''))==((t1.c1, x'54160f'))) THEN CAST(rt0.c4 AS TEXT) WHEN (((t1.c1))!=((t1.c0))) THEN ((((t1.c0)AND(rt0.c4)))AND(rt0.c2)) WHEN ((rt0.c4)|(rt0.c1)) THEN rt0.c4 END)));
SELECT COUNT(*) FROM rt0 WHERE (((((x'') NOTNULL)) BETWEEN ((- (rt0.c0))) AND ((+ (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((x'') NOTNULL)) BETWEEN ((- (rt0.c0))) AND ((+ (rt0.c2)))))AND(((((NULL)AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(CASE WHEN rt0.c3 THEN rt0.c2 END))))) ORDER BY rt0.c2 DESC INTERSECT SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(((rt0.c4) IS FALSE), rt0.c2 COLLATE NOCASE)) ORDER BY rt0.c2 DESC;
SELECT MAX(rt0.c3) FROM t1, rt0 WHERE ((((rt0.c2, rt0.c0, t1.c0)) BETWEEN (('-1332662696', NULL, (rt0.c1 IN (t1.c1)))) AND ((t1.c1, ((rt0.c4) NOT BETWEEN (t1.c0) AND (t1.c1)), CASE WHEN t1.c1 THEN rt0.c2 END)))) ORDER BY TYPEOF(DISTINCT ((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c2))) ASC  NULLS LAST, (NOT (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c3) FROM t1, rt0 WHERE ((((rt0.c2, rt0.c0, t1.c0)) BETWEEN (('-1332662696', NULL, (rt0.c1 IN (t1.c1)))) AND ((t1.c1, ((rt0.c4) NOT BETWEEN (t1.c0) AND (t1.c1)), CASE WHEN t1.c1 THEN rt0.c2 END)))) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 ELSE t1.c1 END)/(CASE WHEN t1.c0 THEN rt0.c1 END)) DESC  NULLS FIRST LIMIT 2 INTERSECT SELECT DISTINCT MAX(rt0.c3) FROM t1, rt0 WHERE ((((rt0.c2 IN (t1.c0, t1.c0))) NOTNULL)) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 ELSE t1.c1 END)/(CASE WHEN t1.c0 THEN rt0.c1 END)) DESC  NULLS FIRST LIMIT 2;
SELECT ALL MIN(rt0.c3) FROM t1, rt0 WHERE (((((((((rt0.c4 COLLATE NOCASE)AND(((rt0.c4) NOT BETWEEN (t1.c0) AND (rt0.c3)))))AND(((rt0.c2) IS FALSE))))OR(rt0.c3)))AND(rt0.c2 COLLATE RTRIM))) ORDER BY ((((t1.c0)*(rt0.c2)))||(((rt0.c3)||(rt0.c0)))) DESC  NULLS LAST, 0.5037979896461655 ASC;
SELECT ALL MIN(rt0.c3) FROM t1, rt0 WHERE (((((((((((rt0.c4 COLLATE NOCASE)AND(((rt0.c4) NOT BETWEEN (t1.c0) AND (rt0.c3)))))AND(((rt0.c2) IS FALSE))))OR(rt0.c3)))AND(rt0.c2 COLLATE RTRIM)))AND(CASE (((x''))==((rt0.c3)))  WHEN ((((((rt0.c3)AND(rt0.c0)))AND(0.22162240309833592)))OR(rt0.c0)) THEN ((((((rt0.c0)AND(t1.c0)))OR(rt0.c0)))AND(rt0.c4)) WHEN (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, rt0.c1)) AND ((rt0.c1, rt0.c0))) THEN (((rt0.c2, rt0.c2, rt0.c4, rt0.c3, rt0.c4))=((t1.c1, rt0.c2, ' ', rt0.c2, NULL))) WHEN (~ (rt0.c4)) THEN (('-1379614520')==(rt0.c2)) ELSE (((rt0.c3, rt0.c0))>=((rt0.c0, rt0.c3))) END))) ORDER BY (- (CAST(t1.c0 AS NUMERIC))) DESC, ((rt0.c1 COLLATE BINARY) BETWEEN (((t1.c1) NOT BETWEEN (t1.c0) AND (NULL))) AND (CAST(rt0.c3 AS INTEGER))) DESC LIMIT 0x3;
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE (x'44');
SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE (((x'44')AND((((rt0.c3 IN ()))>=(((rt0.c1)<(rt0.c1))))))) ORDER BY (((t1.c0) NOT NULL) IN ()) ASC  NULLS LAST, LOWER(DISTINCT t1.c0) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE (((((((t1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR(((t1.c1)<<(rt0.c3)))))OR(0.2830368068026051))) ORDER BY (((t1.c0) NOT NULL) IN ()) ASC  NULLS LAST, LOWER(DISTINCT t1.c0) LIMIT 0x1;
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE (x'44');
SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE (((x'44')AND((((rt0.c3 IN ()))>=(((rt0.c1)<(rt0.c1))))))) ORDER BY (((t1.c0) NOT NULL) IN ()) ASC  NULLS LAST, LOWER(DISTINCT t1.c0) LIMIT 1 INTERSECT SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE (((((((t1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR(((t1.c1)<<(rt0.c3)))))OR(0.2830368068026051))) ORDER BY (((t1.c0) NOT NULL) IN ()) ASC  NULLS LAST, LOWER(DISTINCT t1.c0) LIMIT 0x1;
SELECT ALL MAX(t1.c0) FROM rt0, t1 WHERE ((NOT (t1.c1)) COLLATE BINARY);
SELECT MAX(t1.c0) FROM rt0, t1 WHERE ((((NOT (t1.c1)) COLLATE BINARY)AND(((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END) NOTNULL)))) INTERSECT SELECT MAX(t1.c0) FROM rt0, t1 WHERE ((((rt0.c4)) NOT BETWEEN ((UPPER(rt0.c2))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))))));
SELECT ALL MIN(t1.c0) FROM t1, rt0 WHERE ((((t1.c1 IN (NULL))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((0x178844f3) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED(((x'51') BETWEEN (rt0.c2) AND ('1647262514')))  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1, rt0 WHERE ((((((t1.c1 IN (NULL))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((0x178844f3) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) ISNULL)))) ORDER BY SQLITE_COMPILEOPTION_USED(((x'51') BETWEEN (rt0.c2) AND ('1647262514')))  NULLS LAST;
SELECT * FROM rt0, t1 WHERE ((((rt0.c1, rt0.c3, rt0.c3, rt0.c0, t1.c1, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c4, t1.c1, rt0.c4, rt0.c2)) AND ((rt0.c1, rt0.c4, t1.c1, rt0.c3, rt0.c0, rt0.c1))) COLLATE RTRIM) ORDER BY CASE ((((t1.c0)AND(rt0.c0)))AND(t1.c0))  WHEN MIN(t1.c0, rt0.c3, rt0.c0) THEN (rt0.c2 IN ()) WHEN ((t1.c1) BETWEEN ('[]Q!I') AND (rt0.c3)) THEN CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST, ((rt0.c0) NOTNULL) COLLATE BINARY ASC;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((((rt0.c1, rt0.c3, rt0.c3, rt0.c0, t1.c1, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c4, t1.c1, rt0.c4, rt0.c2)) AND ((rt0.c1, rt0.c4, t1.c1, rt0.c3, rt0.c0, rt0.c1))) COLLATE RTRIM)AND((- (((rt0.c2) BETWEEN (rt0.c4) AND (t1.c1))))))) ORDER BY CASE ((((t1.c0)AND(rt0.c0)))AND(t1.c0))  WHEN MIN(t1.c0, rt0.c3, rt0.c0) THEN (rt0.c2 IN ()) WHEN ((t1.c1) BETWEEN ('[]Q!I') AND (rt0.c3)) THEN CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST, ((rt0.c0) NOTNULL) COLLATE BINARY ASC INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE (((rt0.c1)||(rt0.c4)) COLLATE BINARY) ORDER BY CASE ((((t1.c0)AND(rt0.c0)))AND(t1.c0))  WHEN MIN(t1.c0, rt0.c3, rt0.c0) THEN (rt0.c2 IN ()) WHEN ((t1.c1) BETWEEN ('[]Q!I') AND (rt0.c3)) THEN CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST, ((rt0.c0) NOTNULL) COLLATE BINARY ASC;
SELECT * FROM rt0, t1 WHERE ((((rt0.c1, rt0.c3, rt0.c3, rt0.c0, t1.c1, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c4, t1.c1, rt0.c4, rt0.c2)) AND ((rt0.c1, rt0.c4, t1.c1, rt0.c3, rt0.c0, rt0.c1))) COLLATE RTRIM) ORDER BY CASE ((((t1.c0)AND(rt0.c0)))AND(t1.c0))  WHEN MIN(t1.c0, rt0.c3, rt0.c0) THEN (rt0.c2 IN ()) WHEN ((t1.c1) BETWEEN ('[]Q!I') AND (rt0.c3)) THEN CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST, ((rt0.c0) NOTNULL) COLLATE BINARY ASC;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((((rt0.c1, rt0.c3, rt0.c3, rt0.c0, t1.c1, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c4, t1.c1, rt0.c4, rt0.c2)) AND ((rt0.c1, rt0.c4, t1.c1, rt0.c3, rt0.c0, rt0.c1))) COLLATE RTRIM)AND((- (((rt0.c2) BETWEEN (rt0.c4) AND (t1.c1))))))) ORDER BY CASE ((((t1.c0)AND(rt0.c0)))AND(t1.c0))  WHEN MIN(t1.c0, rt0.c3, rt0.c0) THEN (rt0.c2 IN ()) WHEN ((t1.c1) BETWEEN ('[]Q!I') AND (rt0.c3)) THEN CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST, ((rt0.c0) NOTNULL) COLLATE BINARY ASC INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE (((rt0.c1)||(rt0.c4)) COLLATE BINARY) ORDER BY CASE ((((t1.c0)AND(rt0.c0)))AND(t1.c0))  WHEN MIN(t1.c0, rt0.c3, rt0.c0) THEN (rt0.c2 IN ()) WHEN ((t1.c1) BETWEEN ('[]Q!I') AND (rt0.c3)) THEN CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST, ((rt0.c0) NOTNULL) COLLATE BINARY ASC;
SELECT MAX(t1.c1) FROM t1, rt0 WHERE ((((((((rt0.c1)AND(t1.c0)))AND(rt0.c4)))AND(rt0.c0)) IN (((rt0.c0) NOTNULL)))) ORDER BY ((-1337452361) NOT BETWEEN (CAST(rt0.c3 AS INTEGER)) AND (((((t1.c0)AND(rt0.c2)))AND(rt0.c2))))  NULLS LAST, ((((rt0.c1)OR(UPPER(rt0.c3))))OR(0.08195047683486933))  NULLS LAST;
SELECT MAX(t1.c1) FROM t1, rt0 WHERE ((((((((rt0.c1)AND(t1.c0)))AND(rt0.c4)))AND(rt0.c0)) IN (((rt0.c0) NOTNULL)))) ORDER BY ((0xffffffffb04818b7) NOT BETWEEN (CAST(rt0.c3 AS INTEGER)) AND (((((t1.c0)AND(rt0.c2)))AND(rt0.c2))))  NULLS LAST, ((((rt0.c1)OR(UPPER(rt0.c3))))OR(0.08195047683486933))  NULLS LAST;
SELECT ALL MIN(t1.c0) FROM t1, rt0 WHERE (LOWER(DISTINCT CAST(t1.c0 AS INTEGER))) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c4 WHEN t1.c0 THEN rt0.c3 ELSE t1.c1 END IN ()) DESC  NULLS FIRST, ((rt0.c0) NOTNULL)  NULLS FIRST, LIKELY(rt0.c0 COLLATE NOCASE)  NULLS LAST;
SELECT DISTINCT MIN(t1.c0) FROM t1, rt0 WHERE (((LOWER(DISTINCT CAST(t1.c0 AS INTEGER)))AND((((((((('ZD')OR(((rt0.c2)+(rt0.c0)))))OR((+ (rt0.c3)))))OR(((rt0.c4)<<(rt0.c4)))))OR(((((((((((NULL)AND('8')))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c1))))))) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c4 WHEN t1.c0 THEN rt0.c3 ELSE t1.c1 END IN ()) DESC  NULLS FIRST, ((rt0.c0) NOTNULL)  NULLS FIRST, LIKELY(rt0.c0 COLLATE NOCASE)  NULLS LAST LIMIT 1 INTERSECT SELECT DISTINCT MIN(t1.c0) FROM t1, rt0 WHERE ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c1))) COLLATE BINARY) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c4 WHEN t1.c0 THEN rt0.c3 ELSE t1.c1 END IN ()) DESC  NULLS FIRST, ((rt0.c0) NOTNULL)  NULLS FIRST, LIKELY(rt0.c0 COLLATE NOCASE)  NULLS LAST LIMIT 1;
SELECT MIN(rt0.c3) FROM rt0 WHERE (NULLIF(DISTINCT (rt0.c4 IN (rt0.c2)), ((rt0.c0) BETWEEN (NULL) AND (rt0.c2))));
SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE (NULLIF(DISTINCT (rt0.c4 IN (rt0.c2)), ((rt0.c0) BETWEEN (NULL) AND (rt0.c2)))) ORDER BY ((RTRIM('fz3'))>(((((((rt0.c4)OR(rt0.c0)))AND(rt0.c0)))OR(0.35340889462481295))))  NULLS FIRST, 1969503982 DESC INTERSECT SELECT DISTINCT MIN(rt0.c3) FROM rt0 WHERE ((((NULL, rt0.c0, rt0.c1)) BETWEEN ((MIN(rt0.c2, 0.7139002845724091, rt0.c3, rt0.c4), ((rt0.c4)<=(rt0.c1)), ((rt0.c0)|(rt0.c2)))) AND ((TRIM(rt0.c0, rt0.c2), (('⨚&蚁.x*v._') NOT BETWEEN (rt0.c4) AND (NULL)), (((rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c3)) AND ((rt0.c1, '706435165'))))))) ORDER BY ((RTRIM('fz3'))>(((((((rt0.c4)OR(rt0.c0)))AND(rt0.c0)))OR(0.35340889462481295))))  NULLS FIRST, 0x75643eee DESC;
SELECT ALL * FROM rt0 WHERE (CAST(NULLIF(rt0.c2, rt0.c0) AS TEXT));
SELECT ALL * FROM rt0 WHERE (CAST(NULLIF(rt0.c2, rt0.c0) AS TEXT)) ORDER BY UNLIKELY(rt0.c3) COLLATE NOCASE ASC, ((((((((((((rt0.c4) BETWEEN ('2052720258') AND (rt0.c3)))OR(HEX(rt0.c2))))OR(rt0.c3)))AND(((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))))OR(((rt0.c4) NOT NULL))))OR(CAST(rt0.c0 AS REAL))) DESC  NULLS LAST, ((rt0.c4)>(rt0.c4)) COLLATE NOCASE  NULLS LAST INTERSECT SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c2))))) ORDER BY UNLIKELY(rt0.c3) COLLATE NOCASE ASC, ((((((((((((rt0.c4) BETWEEN ('2052720258') AND (rt0.c3)))OR(HEX(rt0.c2))))OR(rt0.c3)))AND(((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))))OR(((rt0.c4) NOT NULL))))OR(CAST(rt0.c0 AS REAL))) DESC  NULLS LAST, ((rt0.c4)>(rt0.c4)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST(NULLIF(rt0.c2, rt0.c0) AS TEXT));
SELECT ALL * FROM rt0 WHERE (CAST(NULLIF(rt0.c2, rt0.c0) AS TEXT)) ORDER BY UNLIKELY(rt0.c3) COLLATE NOCASE ASC, ((((((((((((rt0.c4) BETWEEN ('2052720258') AND (rt0.c3)))OR(HEX(rt0.c2))))OR(rt0.c3)))AND(((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))))OR(((rt0.c4) NOT NULL))))OR(CAST(rt0.c0 AS REAL))) DESC  NULLS LAST, ((rt0.c4)>(rt0.c4)) COLLATE NOCASE  NULLS LAST INTERSECT SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c2))))) ORDER BY UNLIKELY(rt0.c3) COLLATE NOCASE ASC, ((((((((((((rt0.c4) BETWEEN ('2052720258') AND (rt0.c3)))OR(HEX(rt0.c2))))OR(rt0.c3)))AND(((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))))OR(((rt0.c4) NOT NULL))))OR(CAST(rt0.c0 AS REAL))) DESC  NULLS LAST, ((rt0.c4)>(rt0.c4)) COLLATE NOCASE  NULLS LAST;
SELECT MAX(t1.c0) FROM t1 WHERE (TYPEOF(((t1.c1) ISNULL)));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (TYPEOF(((t1.c1) ISNULL))) ORDER BY ((t1.c0 COLLATE RTRIM) IS TRUE) ASC;
SELECT MIN(rt0.c3) FROM rt0, t1 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) ORDER BY (((((rt0.c3)IS(rt0.c1))))<=((CASE t1.c1  WHEN t1.c0 THEN NULL END))) DESC;
SELECT MIN(rt0.c3) FROM rt0, t1 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) ORDER BY (((((rt0.c3)IS(rt0.c1))))<=((CASE t1.c1  WHEN t1.c0 THEN NULL END))) DESC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (((((0X42a0b071)OR((+ (rt0.c1)))))OR(((((rt0.c3)AND(rt0.c2)))AND(rt0.c4)))));
SELECT * FROM rt0 WHERE (((((0X42a0b071)OR((+ (rt0.c1)))))OR(((((rt0.c3)AND(rt0.c2)))AND(rt0.c4))))) INTERSECT SELECT ALL * FROM rt0 WHERE ((~ (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)));
SELECT ALL * FROM rt0 WHERE (((((0X42a0b071)OR((+ (rt0.c1)))))OR(((((rt0.c3)AND(rt0.c2)))AND(rt0.c4)))));
SELECT * FROM rt0 WHERE (((((0X42a0b071)OR((+ (rt0.c1)))))OR(((((rt0.c3)AND(rt0.c2)))AND(rt0.c4))))) INTERSECT SELECT ALL * FROM rt0 WHERE ((~ (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)));
SELECT ALL * FROM t1, rt0 WHERE (CAST(x'' COLLATE RTRIM AS TEXT)) ORDER BY ((rt0.c1)||(rt0.c3)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM t1, rt0 WHERE (((CAST(x'' COLLATE RTRIM AS TEXT))AND(((((rt0.c0) IS TRUE))*(((NULL) BETWEEN (rt0.c3) AND (rt0.c1))))))) ORDER BY ((rt0.c1)||(rt0.c3)) COLLATE BINARY ASC  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM t1, rt0 WHERE (IFNULL(rt0.c3, (rt0.c4 IN ()))) ORDER BY ((rt0.c1)||(rt0.c3)) COLLATE BINARY ASC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1, rt0 WHERE (CAST(x'' COLLATE RTRIM AS TEXT)) ORDER BY ((rt0.c1)||(rt0.c3)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM t1, rt0 WHERE (((CAST(x'' COLLATE RTRIM AS TEXT))AND(((((rt0.c0) IS TRUE))*(((NULL) BETWEEN (rt0.c3) AND (rt0.c1))))))) ORDER BY ((rt0.c1)||(rt0.c3)) COLLATE BINARY ASC  NULLS LAST LIMIT 1 INTERSECT SELECT * FROM t1, rt0 WHERE (IFNULL(rt0.c3, (rt0.c4 IN ()))) ORDER BY ((rt0.c1)||(rt0.c3)) COLLATE BINARY ASC  NULLS LAST LIMIT 1;
SELECT MIN(rt0.c0) FROM t1, rt0 WHERE (((CASE WHEN 0x776ebb1f THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN t1.c1 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END)==('\pq'))) ORDER BY ((UNLIKELY(DISTINCT rt0.c0))<=(''))  NULLS FIRST, (rt0.c1 IN ()) COLLATE NOCASE ASC;
SELECT MIN(rt0.c0) FROM t1, rt0 WHERE (((((CASE WHEN 2003745567 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN t1.c1 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END)=('\pq')))AND(((CAST(t1.c1 AS REAL)) ISNULL)))) ORDER BY ((UNLIKELY(DISTINCT rt0.c0))<=(''))  NULLS FIRST, (rt0.c1 IN ()) COLLATE NOCASE ASC INTERSECT SELECT ALL MIN(rt0.c0) FROM t1, rt0 WHERE (((CASE 0.1501476356198055  WHEN rt0.c3 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 END)<<(((t1.c0)&(rt0.c3))))) ORDER BY ((UNLIKELY(DISTINCT rt0.c0))<=(''))  NULLS FIRST, (rt0.c1 IN ()) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (((NULL, rt0.c1))=(('', rt0.c2))) THEN CAST(rt0.c4 AS INTEGER) WHEN rt0.c0 THEN ((rt0.c4)GLOB(0.8133716018519915)) WHEN (~ (rt0.c1)) THEN rt0.c4 WHEN 'x' THEN (((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((rt0.c4)+(rt0.c0)) END);
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CASE WHEN (((NULL, rt0.c1))=(('', rt0.c2))) THEN CAST(rt0.c4 AS INTEGER) WHEN rt0.c0 THEN ((rt0.c4)GLOB(0.8133716018519915)) WHEN (~ (rt0.c1)) THEN rt0.c4 WHEN 'x' THEN (((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((rt0.c4)+(rt0.c0)) END) ORDER BY (((((((+ (0.938242870327301)))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))))AND(rt0.c1 COLLATE NOCASE)))AND(((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c4)))) INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c3))) IS TRUE)) ORDER BY (((((((+ (0.938242870327301)))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))))AND(rt0.c1 COLLATE NOCASE)))AND(((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c4))));
SELECT MAX(rt0.c1) FROM rt0, t1 WHERE (CAST(x'55' AS TEXT));
SELECT ALL MAX(rt0.c1) FROM rt0, t1 WHERE (((CAST(x'55' AS TEXT))AND(CAST((NOT (rt0.c3)) AS INTEGER)))) LIMIT 1;
SELECT * FROM rt0, t1 WHERE (((((rt0.c4)/(rt0.c3))) BETWEEN (rt0.c0 COLLATE NOCASE) AND ('-501551417'))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) NOTNULL);
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c4)/(rt0.c3))) BETWEEN (rt0.c0 COLLATE NOCASE) AND ('-501551417'))) ORDER BY t1.c1 DESC, (NOT ((NULL IN (rt0.c4))))  NULLS FIRST LIMIT 0;
SELECT * FROM rt0, t1 WHERE (((((rt0.c4)/(rt0.c3))) BETWEEN (rt0.c0 COLLATE NOCASE) AND ('-501551417'))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) NOTNULL);
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c4)/(rt0.c3))) BETWEEN (rt0.c0 COLLATE NOCASE) AND ('-501551417'))) ORDER BY t1.c1 DESC, (NOT ((NULL IN (rt0.c4))))  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (((((t1.c1) IS TRUE))%((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c1)))))) ORDER BY CASE t1.c0  WHEN t1.c0 THEN NULL END COLLATE RTRIM ASC  NULLS LAST, (((t1.c1, x''))=((((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c1)), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) IS TRUE))%((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c1)))))) ORDER BY CASE t1.c0  WHEN t1.c0 THEN NULL END COLLATE RTRIM ASC  NULLS LAST, (((t1.c1, x''))=((((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c1)), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c1) IS TRUE))%((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c1)))))) ORDER BY CASE t1.c0  WHEN t1.c0 THEN NULL END COLLATE RTRIM ASC  NULLS LAST, (((t1.c1, x''))=((((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c1)), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))))) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) IS TRUE))%((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c1)) AND ((t1.c0, t1.c0, t1.c1)))))) ORDER BY CASE t1.c0  WHEN t1.c0 THEN NULL END COLLATE RTRIM ASC  NULLS LAST, (((t1.c1, x''))=((((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR(t1.c1)), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((+ ((NOT (rt0.c4)))));
SELECT ALL * FROM rt0 WHERE ((((+ ((NOT (rt0.c4)))))AND(((rt0.c1)|(SUBSTR(rt0.c0, rt0.c4)))))) ORDER BY CAST(json_insert(0.9242282940106304, rt0.c1, rt0.c3, rt0.c3, rt0.c0) AS BLOB), json_patch((((rt0.c1, rt0.c0, rt0.c2))==((rt0.c0, rt0.c1, rt0.c4))), rt0.c0 COLLATE RTRIM) ASC;
SELECT ALL * FROM rt0 WHERE ((+ ((NOT (rt0.c4)))));
SELECT ALL * FROM rt0 WHERE ((((+ ((NOT (rt0.c4)))))AND(((rt0.c1)|(SUBSTR(rt0.c0, rt0.c4)))))) ORDER BY CAST(json_insert(0.9242282940106304, rt0.c1, rt0.c3, rt0.c3, rt0.c0) AS BLOB), json_patch((((rt0.c1, rt0.c0, rt0.c2))==((rt0.c0, rt0.c1, rt0.c4))), rt0.c0 COLLATE RTRIM) ASC;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((((t1.c0 COLLATE RTRIM)OR(x'992c')))AND(((t1.c0) NOT NULL))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((((t1.c0 COLLATE RTRIM)OR(x'992c')))AND(((t1.c0) NOT NULL))))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND((HEX(DISTINCT t1.c1) IN ())))) INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((LIKELY(t1.c1)) ISNULL));
SELECT ALL MIN(rt0.c2) FROM rt0 CROSS JOIN t1 ON (((((('495628496')OR(NULL)))OR(t1.c0))) IS FALSE) WHERE (((((rt0.c4)IS(rt0.c1)))LIKE(SQLITE_COMPILEOPTION_USED(rt0.c0))));
SELECT MIN(rt0.c2) FROM rt0 CROSS JOIN t1 ON (((((('495628496')OR(NULL)))OR(t1.c0))) IS FALSE) WHERE (((((rt0.c4)IS(rt0.c1)))LIKE(SQLITE_COMPILEOPTION_USED(rt0.c0)))) ORDER BY ((((rt0.c3)AND(rt0.c1))) NOT BETWEEN (((((t1.c0)OR(rt0.c2)))OR(rt0.c0))) AND (NULL)) DESC  NULLS FIRST, LOWER((t1.c0 IN ())) ASC  NULLS LAST INTERSECT SELECT ALL MIN(rt0.c2) FROM rt0 CROSS JOIN t1 ON (((((('495628496')OR(NULL)))OR(t1.c0))) IS FALSE) WHERE (NULLIF(((NULL)IS(t1.c1)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN t1.c1 THEN t1.c1 ELSE rt0.c4 END)) ORDER BY ((((rt0.c3)AND(rt0.c1))) NOT BETWEEN (((((t1.c0)OR(rt0.c2)))OR(rt0.c0))) AND (NULL)) DESC  NULLS FIRST, LOWER((t1.c0 IN ())) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)<(t1.c1)))OR(0.29291222567169894)))OR(NULL)))OR(',T_ZN')));
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1)<(t1.c1)))OR(0.29291222567169894)))OR(NULL)))OR(',T_ZN'))) ORDER BY t1.c0 DESC, (((((t1.c0) NOT NULL)))<((t1.c1 COLLATE NOCASE))) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)<(t1.c1)))OR(0.29291222567169894)))OR(NULL)))OR(',T_ZN')));
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1)<(t1.c1)))OR(0.29291222567169894)))OR(NULL)))OR(',T_ZN'))) ORDER BY t1.c0 DESC, (((((t1.c0) NOT NULL)))<((t1.c1 COLLATE NOCASE))) DESC  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((((1.835478611E9, rt0.c0, 0.16004310255483833)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END, NULLIF(DISTINCT rt0.c3, rt0.c1), rt0.c1 COLLATE RTRIM)) AND ((SQLITE_COMPILEOPTION_USED(rt0.c3), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)), (NOT (x'dc')))))) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c0) IS FALSE) THEN CASE rt0.c4  WHEN rt0.c4 THEN '6812959601629105952' WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END END;
SELECT ALL * FROM rt0 WHERE ((((((1.835478611E9, rt0.c0, 0.16004310255483833)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END, NULLIF(DISTINCT rt0.c3, rt0.c1), rt0.c1 COLLATE RTRIM)) AND ((SQLITE_COMPILEOPTION_USED(rt0.c3), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)), (NOT (x'dc'))))))AND(rt0.c3))) ORDER BY ((((((UNLIKELY('0.2400921459292843'))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((+ (rt0.c3)))))OR(rt0.c0 COLLATE NOCASE)), (('1186344960')LIKE(CASE rt0.c0  WHEN rt0.c1 THEN x'c5' WHEN 0Xffffffffa4be8ce7 THEN rt0.c4 END)) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE ((((((rt0.c3) IS FALSE), ((rt0.c4)<<(rt0.c2)), ((rt0.c1)>>(rt0.c0)), (((rt0.c4))<=((rt0.c1)))))<((((rt0.c0) IS TRUE), (+ (rt0.c2)), rt0.c1, LIKELY(rt0.c2))))) ORDER BY ((((((UNLIKELY('0.2400921459292843'))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((+ (rt0.c3)))))OR(rt0.c0 COLLATE NOCASE)), (('1186344960')LIKE(CASE rt0.c0  WHEN rt0.c1 THEN x'c5' WHEN 0xffffffffa4be8ce7 THEN rt0.c4 END)) ASC  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((1.835478611E9, rt0.c0, 0.16004310255483833)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END, NULLIF(DISTINCT rt0.c3, rt0.c1), rt0.c1 COLLATE RTRIM)) AND ((SQLITE_COMPILEOPTION_USED(rt0.c3), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)), (NOT (x'dc')))))) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c0) IS FALSE) THEN CASE rt0.c4  WHEN rt0.c4 THEN '6812959601629105952' WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END END;
SELECT ALL * FROM rt0 WHERE ((((((1.835478611E9, rt0.c0, 0.16004310255483833)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END, NULLIF(DISTINCT rt0.c3, rt0.c1), rt0.c1 COLLATE RTRIM)) AND ((SQLITE_COMPILEOPTION_USED(rt0.c3), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)), (NOT (x'dc'))))))AND(rt0.c3))) ORDER BY ((((((UNLIKELY('0.2400921459292843'))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((+ (rt0.c3)))))OR(rt0.c0 COLLATE NOCASE)), (('1186344960')LIKE(CASE rt0.c0  WHEN rt0.c1 THEN x'c5' WHEN 0Xffffffffa4be8ce7 THEN rt0.c4 END)) ASC  NULLS FIRST LIMIT 0 INTERSECT SELECT ALL * FROM rt0 WHERE ((((((rt0.c3) IS FALSE), ((rt0.c4)<<(rt0.c2)), ((rt0.c1)>>(rt0.c0)), (((rt0.c4))<=((rt0.c1)))))<((((rt0.c0) IS TRUE), (+ (rt0.c2)), rt0.c1, LIKELY(rt0.c2))))) ORDER BY ((((((UNLIKELY('0.2400921459292843'))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((+ (rt0.c3)))))OR(rt0.c0 COLLATE NOCASE)), (('1186344960')LIKE(CASE rt0.c0  WHEN rt0.c1 THEN x'c5' WHEN 0xffffffffa4be8ce7 THEN rt0.c4 END)) ASC  NULLS FIRST LIMIT 0;
SELECT MAX(t1.c1) FROM t1 WHERE (((((((((t1.c0 COLLATE BINARY)AND((+ (t1.c0)))))OR(((t1.c0)<(t1.c0)))))AND(((((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))))OR(TRIM(DISTINCT t1.c1, t1.c0))));
SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (((((((((((t1.c0 COLLATE BINARY)AND((+ (t1.c0)))))OR(((t1.c0)<(t1.c0)))))AND(((((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))OR(t1.c1)))))OR(TRIM(DISTINCT t1.c1, t1.c0))))AND(((NULL)==(t1.c0 COLLATE NOCASE))))) LIMIT 1 INTERSECT SELECT DISTINCT MAX(t1.c1) FROM t1 WHERE (t1.c1) LIMIT 1;
SELECT ALL * FROM rt0, t1 WHERE ((((((rt0.c0)OR(t1.c1)), ((t1.c0)AND(rt0.c3))))<(((- (t1.c0)), (((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c4))>=((t1.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3)))))));
SELECT ALL * FROM rt0, t1 WHERE ((((((((rt0.c0)OR(t1.c1)), ((t1.c0)AND(rt0.c3))))<(((- (t1.c0)), (((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c4))>=((t1.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3)))))))AND(((LIKELY(rt0.c3))LIKE(CASE WHEN rt0.c3 THEN rt0.c4 END))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM rt0, t1 WHERE (((CAST(rt0.c4 AS NUMERIC))||(222426156))) LIMIT 0X1;
SELECT ALL * FROM rt0, t1 WHERE ((((((rt0.c0)OR(t1.c1)), ((t1.c0)AND(rt0.c3))))<(((- (t1.c0)), (((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c4))>=((t1.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3)))))));
SELECT ALL * FROM rt0, t1 WHERE ((((((((rt0.c0)OR(t1.c1)), ((t1.c0)AND(rt0.c3))))<(((- (t1.c0)), (((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c4))>=((t1.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3)))))))AND(((LIKELY(rt0.c3))LIKE(CASE WHEN rt0.c3 THEN rt0.c4 END))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM rt0, t1 WHERE (((CAST(rt0.c4 AS NUMERIC))||(222426156))) LIMIT 0X1;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c1) AND (x'01'))) NOT NULL));
SELECT * FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (x'01'))) NOT NULL))AND((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN x'' ELSE rt0.c1 END IN ())))) LIMIT 0X0 INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c4)||(rt0.c0))) NOT NULL)) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c1) AND (x'01'))) NOT NULL));
SELECT * FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (x'01'))) NOT NULL))AND((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN x'' ELSE rt0.c1 END IN ())))) LIMIT 0X0 INTERSECT SELECT * FROM rt0 WHERE (((((rt0.c4)||(rt0.c0))) NOT NULL)) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (x'');
SELECT * FROM rt0 WHERE (x'') ORDER BY rt0.c1  NULLS FIRST, ((NULL) NOTNULL) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (x'');
SELECT * FROM rt0 WHERE (x'') ORDER BY rt0.c1  NULLS FIRST, ((NULL) NOTNULL) DESC  NULLS LAST;
SELECT ALL MAX(rt0.c4) FROM t1, rt0 WHERE (CAST(rt0.c4 AS INTEGER)) ORDER BY CASE WHEN CHANGES() THEN t1.c1 WHEN ((rt0.c0) ISNULL) THEN (rt0.c4 IN (rt0.c1)) END  NULLS LAST, (((HEX(DISTINCT 0.9679096015008858), ((rt0.c3) NOTNULL)))<((IFNULL(DISTINCT rt0.c0, t1.c1), (NOT (rt0.c0)))))  NULLS FIRST;
SELECT ALL MAX(rt0.c4) FROM t1, rt0 WHERE (((CAST(rt0.c4 AS INTEGER))AND(((COALESCE(DISTINCT rt0.c2, t1.c1, rt0.c3, rt0.c2))>>(((NULL)&(t1.c1))))))) ORDER BY CASE WHEN CHANGES() THEN t1.c1 WHEN ((rt0.c0) ISNULL) THEN (rt0.c4 IN (rt0.c1)) END  NULLS LAST, (((HEX(DISTINCT 0.9679096015008858), ((rt0.c3) NOTNULL)))<((IFNULL(DISTINCT rt0.c0, t1.c1), (NOT (rt0.c0)))))  NULLS FIRST LIMIT 0 INTERSECT SELECT MAX(rt0.c4) FROM t1, rt0 WHERE (CASE CAST(rt0.c3 AS NUMERIC)  WHEN CASE rt0.c4  WHEN t1.c1 THEN rt0.c2 END THEN (NOT (t1.c0)) END) ORDER BY CASE WHEN CHANGES() THEN t1.c1 WHEN ((rt0.c0) ISNULL) THEN (rt0.c4 IN (rt0.c1)) END  NULLS LAST, (((HEX(DISTINCT 0.9679096015008858), ((rt0.c3) NOTNULL)))<((IFNULL(DISTINCT rt0.c0, t1.c1), (NOT (rt0.c0)))))  NULLS FIRST LIMIT 0X0;
SELECT ALL MIN(rt0.c1) FROM t1 LEFT OUTER JOIN rt0 ON (~ (((rt0.c0)*(NULL)))) WHERE ((- (CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END))) ORDER BY (((((rt0.c1))<=((t1.c0))))<<(0.4830504202310396)), ((((CASE rt0.c3  WHEN rt0.c1 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE 0.2318739897265033 END)AND(rt0.c3)))AND((~ (rt0.c0))))  NULLS FIRST;
SELECT MIN(rt0.c1) FROM t1 INNER JOIN rt0 ON (~ (((rt0.c0)*(NULL)))) WHERE ((- (CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END))) ORDER BY (((((rt0.c1))<=((t1.c0))))<<(0.4830504202310396)), ((((CASE rt0.c3  WHEN rt0.c1 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE 0.2318739897265033 END)AND(rt0.c3)))AND((~ (rt0.c0))))  NULLS FIRST LIMIT 2 INTERSECT SELECT ALL MIN(rt0.c1) FROM t1 INNER JOIN rt0 ON (~ (((rt0.c0)*(NULL)))) WHERE (((((rt0.c2)==(rt0.c0))) BETWEEN (rt0.c0) AND ((((rt0.c0, rt0.c1, t1.c1, rt0.c0))==((t1.c0, rt0.c3, t1.c1, NULL)))))) ORDER BY (((((rt0.c1))<=((t1.c0))))<<(0.4830504202310396)), ((((CASE rt0.c3  WHEN rt0.c1 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE 0.2318739897265033 END)AND(rt0.c3)))AND((~ (rt0.c0))))  NULLS FIRST LIMIT 2;
SELECT ALL MIN(rt0.c4) FROM rt0, t1 WHERE (CASE (('') BETWEEN ('947461078') AND (NULL))  WHEN ((rt0.c2) IS TRUE) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN t1.c1 THEN rt0.c3 WHEN t1.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END WHEN ((t1.c0)AND(rt0.c1)) THEN ((rt0.c3)&(t1.c1)) WHEN load_extension(t1.c0, rt0.c3) THEN (rt0.c0 IN ()) ELSE ((((t1.c0)OR(rt0.c0)))AND(rt0.c3)) END);
SELECT DISTINCT MIN(rt0.c4) FROM rt0, t1 WHERE (CASE (('') BETWEEN ('947461078') AND (NULL))  WHEN ((rt0.c2) IS TRUE) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN t1.c1 THEN rt0.c3 WHEN t1.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END WHEN ((t1.c0)AND(rt0.c1)) THEN ((rt0.c3)&(t1.c1)) WHEN load_extension(t1.c0, rt0.c3) THEN (rt0.c0 IN ()) ELSE ((((t1.c0)OR(rt0.c0)))AND(rt0.c3)) END) ORDER BY CAST(((((t1.c0)AND(rt0.c1)))AND(NULL)) AS REAL) ASC, CASE WHEN ((x'2c')-(t1.c0)) THEN ((rt0.c1)>(t1.c0)) WHEN (rt0.c0 IN (rt0.c2)) THEN (t1.c0 IN (rt0.c4)) ELSE (('-2142713901') BETWEEN (t1.c1) AND (rt0.c4)) END  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MIN(rt0.c4) FROM rt0, t1 WHERE ((((rt0.c2) NOT NULL) IN (((rt0.c3)OR(rt0.c2))))) ORDER BY CAST(((((t1.c0)AND(rt0.c1)))AND(NULL)) AS REAL) ASC, CASE WHEN ((x'2c')-(t1.c0)) THEN ((rt0.c1)>(t1.c0)) WHEN (rt0.c0 IN (rt0.c2)) THEN (t1.c0 IN (rt0.c4)) ELSE (('-2142713901') BETWEEN (t1.c1) AND (rt0.c4)) END  NULLS LAST LIMIT 0X0;
SELECT * FROM rt0 WHERE (((((rt0.c1 IN (rt0.c1, rt0.c1)), rt0.c1 COLLATE BINARY))=(((((rt0.c3, x'')) BETWEEN ((rt0.c2, rt0.c4)) AND ((rt0.c2, rt0.c3))), rt0.c3))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1 IN (rt0.c1, rt0.c1)), rt0.c1 COLLATE BINARY))==(((((rt0.c3, x'')) BETWEEN ((rt0.c2, rt0.c4)) AND ((rt0.c2, rt0.c3))), rt0.c3)))) LIMIT 0x0;
SELECT * FROM rt0 WHERE (((((rt0.c1 IN (rt0.c1, rt0.c1)), rt0.c1 COLLATE BINARY))=(((((rt0.c3, x'')) BETWEEN ((rt0.c2, rt0.c4)) AND ((rt0.c2, rt0.c3))), rt0.c3))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1 IN (rt0.c1, rt0.c1)), rt0.c1 COLLATE BINARY))==(((((rt0.c3, x'')) BETWEEN ((rt0.c2, rt0.c4)) AND ((rt0.c2, rt0.c3))), rt0.c3)))) LIMIT 0x0;
SELECT * FROM rt0 WHERE ((((rt0.c3)<<(rt0.c1)) IN (((rt0.c0) IS FALSE))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3)<<(rt0.c1)) IN (((rt0.c0) IS FALSE))))AND((((rt0.c4)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((rt0.c2)))))) ORDER BY CASE (((rt0.c0))!=((rt0.c0)))  WHEN ((rt0.c0)OR(rt0.c4)) THEN (- (rt0.c2)) WHEN ((NULL) ISNULL) THEN (((rt0.c1, rt0.c4, rt0.c4, '')) NOT BETWEEN ((rt0.c0, 0.2944892275122257, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c2, rt0.c2))) WHEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c4)) THEN ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)) END DESC, (((rt0.c1, rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)), (rt0.c0 IN (rt0.c4)), (~ (rt0.c2)))) AND ((CASE WHEN NULL THEN rt0.c4 END, ((rt0.c0)<(rt0.c4)), json_array_length(rt0.c0, rt0.c0), rt0.c0))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c4 THEN rt0.c1 COLLATE NOCASE WHEN rt0.c1 COLLATE RTRIM THEN ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)) WHEN (((0.3061248681984655, rt0.c0))<=((rt0.c2, rt0.c4))) THEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)) WHEN CAST(x'bd7eca' AS BLOB) THEN (((rt0.c0))<(('1835478611'))) END) ORDER BY CASE (((rt0.c0))<>((rt0.c0)))  WHEN ((rt0.c0)OR(rt0.c4)) THEN (- (rt0.c2)) WHEN ((NULL) ISNULL) THEN (((rt0.c1, rt0.c4, rt0.c4, '')) NOT BETWEEN ((rt0.c0, 0.2944892275122257, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c2, rt0.c2))) WHEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c4)) THEN ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)) END DESC, (((rt0.c1, rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)), (rt0.c0 IN (rt0.c4)), (~ (rt0.c2)))) AND ((CASE WHEN NULL THEN rt0.c4 END, ((rt0.c0)<(rt0.c4)), json_array_length(rt0.c0, rt0.c0), rt0.c0))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM rt0 WHERE ((((rt0.c3)<<(rt0.c1)) IN (((rt0.c0) IS FALSE))));
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3)<<(rt0.c1)) IN (((rt0.c0) IS FALSE))))AND((((rt0.c4)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((rt0.c2)))))) ORDER BY CASE (((rt0.c0))!=((rt0.c0)))  WHEN ((rt0.c0)OR(rt0.c4)) THEN (- (rt0.c2)) WHEN ((NULL) ISNULL) THEN (((rt0.c1, rt0.c4, rt0.c4, '')) NOT BETWEEN ((rt0.c0, 0.2944892275122257, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c2, rt0.c2))) WHEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c4)) THEN ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)) END DESC, (((rt0.c1, rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)), (rt0.c0 IN (rt0.c4)), (~ (rt0.c2)))) AND ((CASE WHEN NULL THEN rt0.c4 END, ((rt0.c0)<(rt0.c4)), json_array_length(rt0.c0, rt0.c0), rt0.c0))) DESC  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c4 THEN rt0.c1 COLLATE NOCASE WHEN rt0.c1 COLLATE RTRIM THEN ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)) WHEN (((0.3061248681984655, rt0.c0))<=((rt0.c2, rt0.c4))) THEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)) WHEN CAST(x'bd7eca' AS BLOB) THEN (((rt0.c0))<(('1835478611'))) END) ORDER BY CASE (((rt0.c0))<>((rt0.c0)))  WHEN ((rt0.c0)OR(rt0.c4)) THEN (- (rt0.c2)) WHEN ((NULL) ISNULL) THEN (((rt0.c1, rt0.c4, rt0.c4, '')) NOT BETWEEN ((rt0.c0, 0.2944892275122257, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c2, rt0.c2))) WHEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c4)) THEN ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)) END DESC, (((rt0.c1, rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)), (rt0.c0 IN (rt0.c4)), (~ (rt0.c2)))) AND ((CASE WHEN NULL THEN rt0.c4 END, ((rt0.c0)<(rt0.c4)), json_array_length(rt0.c0, rt0.c0), rt0.c0))) DESC  NULLS FIRST LIMIT 0;
SELECT * FROM t1, rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c4 WHEN t1.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN t1.c1 THEN t1.c0 END)));
SELECT DISTINCT * FROM t1, rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c4 WHEN t1.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN t1.c1 THEN t1.c0 END))) INTERSECT SELECT DISTINCT * FROM t1, rt0 WHERE (((((~ (rt0.c2)), (((rt0.c0))>=((t1.c1))), CAST(t1.c1 AS NUMERIC)))<=((UNICODE(rt0.c3), rt0.c1, (((rt0.c4, rt0.c3, rt0.c4))>=((rt0.c2, 183305715, rt0.c2)))))));
SELECT * FROM t1, rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c4 WHEN t1.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN t1.c1 THEN t1.c0 END)));
SELECT DISTINCT * FROM t1, rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c4 WHEN t1.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN t1.c1 THEN t1.c0 END))) INTERSECT SELECT DISTINCT * FROM t1, rt0 WHERE (((((~ (rt0.c2)), (((rt0.c0))>=((t1.c1))), CAST(t1.c1 AS NUMERIC)))<=((UNICODE(rt0.c3), rt0.c1, (((rt0.c4, rt0.c3, rt0.c4))>=((rt0.c2, 183305715, rt0.c2)))))));
SELECT ALL MIN(rt0.c2) FROM rt0 WHERE ((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2))))<((RTRIM(rt0.c2))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT NULL) DESC  NULLS LAST, (((rt0.c1 IN ())) IS FALSE);
SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE ((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2))))<((RTRIM(rt0.c2)))))AND(((((rt0.c4) IS TRUE)) BETWEEN (SQLITE_SOURCE_ID()) AND (((rt0.c0)<(rt0.c0))))))) ORDER BY ((((rt0.c0))>((rt0.c4))) IN ())  NULLS FIRST, (((779773002)+(rt0.c2)) IN ((- (rt0.c0)), rt0.c3 COLLATE NOCASE)) ASC  NULLS LAST, (~ (''))  NULLS LAST INTERSECT SELECT DISTINCT MIN(rt0.c2) FROM rt0 WHERE (CASE WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c1)%(rt0.c3)) WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN x'e4' ELSE rt0.c2 COLLATE RTRIM END) ORDER BY ((((rt0.c0))>((rt0.c4))) IN ())  NULLS FIRST, (((0x2e7a644a)+(rt0.c2)) IN ((- (rt0.c0)), rt0.c3 COLLATE NOCASE)) ASC  NULLS LAST, (~ (''))  NULLS LAST;
SELECT MIN(rt0.c1) FROM rt0 WHERE (rt0.c0);
SELECT MIN(rt0.c1) FROM rt0 WHERE (((rt0.c0)AND(CASE ((((((rt0.c3)OR('+|t*A')))AND(rt0.c0)))OR(rt0.c2))  WHEN CAST(rt0.c4 AS BLOB) THEN CAST(rt0.c3 AS INTEGER) WHEN (+ (rt0.c1)) THEN CAST(rt0.c4 AS INTEGER) END))) LIMIT 0x2;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c1) NOT NULL) THEN rt0.c4 WHEN (((rt0.c4, rt0.c1, rt0.c4)) BETWEEN ((rt0.c3, rt0.c4, rt0.c3)) AND ((rt0.c3, rt0.c2, rt0.c1))) THEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END ELSE rt0.c3 COLLATE BINARY END) ORDER BY -1.488104589E9 COLLATE BINARY ASC  NULLS FIRST, (((rt0.c0 IN (rt0.c2))) BETWEEN ((rt0.c2 IN ())) AND ((rt0.c4 IN ())));
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c1) NOT NULL) THEN rt0.c4 WHEN (((rt0.c4, rt0.c1, rt0.c4)) BETWEEN ((rt0.c3, rt0.c4, rt0.c3)) AND ((rt0.c3, rt0.c2, rt0.c1))) THEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END ELSE rt0.c3 COLLATE BINARY END) ORDER BY -1.488104589E9 COLLATE BINARY ASC  NULLS FIRST, (((rt0.c0 IN (rt0.c2))) BETWEEN ((rt0.c2 IN ())) AND ((rt0.c4 IN ())));
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c1) NOT NULL) THEN rt0.c4 WHEN (((rt0.c4, rt0.c1, rt0.c4)) BETWEEN ((rt0.c3, rt0.c4, rt0.c3)) AND ((rt0.c3, rt0.c2, rt0.c1))) THEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END ELSE rt0.c3 COLLATE BINARY END) ORDER BY -1.488104589E9 COLLATE BINARY ASC  NULLS FIRST, (((rt0.c0 IN (rt0.c2))) BETWEEN ((rt0.c2 IN ())) AND ((rt0.c4 IN ())));
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c1) NOT NULL) THEN rt0.c4 WHEN (((rt0.c4, rt0.c1, rt0.c4)) BETWEEN ((rt0.c3, rt0.c4, rt0.c3)) AND ((rt0.c3, rt0.c2, rt0.c1))) THEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END ELSE rt0.c3 COLLATE BINARY END) ORDER BY -1.488104589E9 COLLATE BINARY ASC  NULLS FIRST, (((rt0.c0 IN (rt0.c2))) BETWEEN ((rt0.c2 IN ())) AND ((rt0.c4 IN ())));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c3 ASC  NULLS FIRST, (((rt0.c4) NOT NULL) IN (((x'4687')+(rt0.c4)), ((rt0.c2) IS FALSE))) ASC  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c3 ASC  NULLS FIRST, (((rt0.c4) NOT NULL) IN (((x'4687')+(rt0.c4)), ((rt0.c2) IS FALSE))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((rt0.c3)-(rt0.c4)) COLLATE RTRIM) ORDER BY rt0.c3 ASC  NULLS FIRST, (((rt0.c4) NOT NULL) IN (((x'4687')+(rt0.c4)), ((rt0.c2) IS FALSE))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((((rt0.c0)%(rt0.c2)))OR(LOWER(DISTINCT rt0.c2))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (NULL)))))OR(((rt0.c3)*(rt0.c1)))));
SELECT * FROM rt0 WHERE (((((((((rt0.c0)%(rt0.c2)))OR(LOWER(DISTINCT rt0.c2))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (NULL)))))OR(((rt0.c3)*(rt0.c1))))) LIMIT 0X2;
SELECT * FROM rt0 WHERE (((((((((rt0.c0)%(rt0.c2)))OR(LOWER(DISTINCT rt0.c2))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (NULL)))))OR(((rt0.c3)*(rt0.c1)))));
SELECT * FROM rt0 WHERE (((((((((rt0.c0)%(rt0.c2)))OR(LOWER(DISTINCT rt0.c2))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (NULL)))))OR(((rt0.c3)*(rt0.c1))))) LIMIT 0X2;
SELECT * FROM t1 WHERE (((((t1.c1)<(t1.c0))) NOT BETWEEN ('~') AND ((NOT (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)<(t1.c0))) NOT BETWEEN ('~') AND ((NOT (t1.c0))))) ORDER BY (((((t1.c0, t1.c0))<=((0.8955047888006146, t1.c1)))) IS TRUE) INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE ((t1.c1) IS FALSE)  WHEN ((t1.c0)-(t1.c0)) THEN (+ (t1.c1)) WHEN CAST(t1.c1 AS TEXT) THEN LOWER(DISTINCT t1.c1) WHEN ((((((x'')OR(t1.c1)))OR(1.665895396E9)))AND(t1.c1)) THEN (t1.c1 IN ()) END) ORDER BY (((((t1.c0, t1.c0))<=((0.8955047888006146, t1.c1)))) IS TRUE);
SELECT * FROM t1 WHERE (((((t1.c1)<(t1.c0))) NOT BETWEEN ('~') AND ((NOT (t1.c0)))));
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)<(t1.c0))) NOT BETWEEN ('~') AND ((NOT (t1.c0))))) ORDER BY (((((t1.c0, t1.c0))<=((0.8955047888006146, t1.c1)))) IS TRUE) INTERSECT SELECT DISTINCT * FROM t1 WHERE (CASE ((t1.c1) IS FALSE)  WHEN ((t1.c0)-(t1.c0)) THEN (+ (t1.c1)) WHEN CAST(t1.c1 AS TEXT) THEN LOWER(DISTINCT t1.c1) WHEN ((((((x'')OR(t1.c1)))OR(1.665895396E9)))AND(t1.c1)) THEN (t1.c1 IN ()) END) ORDER BY (((((t1.c0, t1.c0))<=((0.8955047888006146, t1.c1)))) IS TRUE);
SELECT * FROM t1 WHERE (t1.c1) ORDER BY CASE WHEN (- (t1.c0)) THEN t1.c0 WHEN ((t1.c1)<<(t1.c0)) THEN TRIM(DISTINCT t1.c1) ELSE ((('', t1.c1, t1.c1))>((t1.c1, x'8453', '*/0qe'))) END  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c1)AND(CASE WHEN ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c1)) THEN ((t1.c0)<=(t1.c0)) WHEN NULL THEN t1.c1 END))) ORDER BY x'a9f7d0' ASC INTERSECT SELECT ALL * FROM t1 WHERE ('2002798060') ORDER BY x'a9f7d0' ASC;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY CASE WHEN (- (t1.c0)) THEN t1.c0 WHEN ((t1.c1)<<(t1.c0)) THEN TRIM(DISTINCT t1.c1) ELSE ((('', t1.c1, t1.c1))>((t1.c1, x'8453', '*/0qe'))) END  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c1)AND(CASE WHEN ((((((((t1.c1)AND(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c1)) THEN ((t1.c0)<=(t1.c0)) WHEN NULL THEN t1.c1 END))) ORDER BY x'a9f7d0' ASC INTERSECT SELECT ALL * FROM t1 WHERE ('2002798060') ORDER BY x'a9f7d0' ASC;
SELECT * FROM t1, rt0 WHERE ((((rt0.c1, rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c4 THEN t1.c0 WHEN x'2f' THEN t1.c1 END, CASE WHEN rt0.c1 THEN rt0.c1 WHEN x'0bcf22' THEN rt0.c2 ELSE t1.c1 END)) AND (((t1.c0 IN (t1.c0)), (((5.2943749E7)) BETWEEN ((t1.c0)) AND ((rt0.c1))))))) ORDER BY (COALESCE(DISTINCT rt0.c0, t1.c0) IN (rt0.c1 COLLATE RTRIM)), (((t1.c1)) NOT BETWEEN ((((rt0.c4) IS FALSE))) AND (((((rt0.c2, t1.c1, rt0.c0))<=((rt0.c1, rt0.c3, t1.c0)))))) DESC;
SELECT * FROM t1, rt0 WHERE ((((rt0.c1, rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c4 THEN t1.c0 WHEN x'2f' THEN t1.c1 END, CASE WHEN rt0.c1 THEN rt0.c1 WHEN x'0bcf22' THEN rt0.c2 ELSE t1.c1 END)) AND (((t1.c0 IN (t1.c0)), (((5.2943749E7)) BETWEEN ((t1.c0)) AND ((rt0.c1))))))) ORDER BY CASE WHEN ((x'69') BETWEEN (rt0.c2) AND (t1.c0)) THEN CAST(NULL AS REAL) WHEN (NOT (rt0.c2)) THEN COALESCE(DISTINCT rt0.c0, rt0.c1, t1.c1, rt0.c1) WHEN CASE rt0.c4  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c1 END THEN (~ (t1.c1)) WHEN ((rt0.c3)==(rt0.c2)) THEN (((rt0.c1, rt0.c0, t1.c1, rt0.c1))<=((rt0.c3, rt0.c1, rt0.c0, rt0.c1))) END DESC;
SELECT * FROM t1, rt0 WHERE ((((rt0.c1, rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c4 THEN t1.c0 WHEN x'2f' THEN t1.c1 END, CASE WHEN rt0.c1 THEN rt0.c1 WHEN x'0bcf22' THEN rt0.c2 ELSE t1.c1 END)) AND (((t1.c0 IN (t1.c0)), (((5.2943749E7)) BETWEEN ((t1.c0)) AND ((rt0.c1))))))) ORDER BY (COALESCE(DISTINCT rt0.c0, t1.c0) IN (rt0.c1 COLLATE RTRIM)), (((t1.c1)) NOT BETWEEN ((((rt0.c4) IS FALSE))) AND (((((rt0.c2, t1.c1, rt0.c0))<=((rt0.c1, rt0.c3, t1.c0)))))) DESC;
SELECT * FROM t1, rt0 WHERE ((((rt0.c1, rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c4 THEN t1.c0 WHEN x'2f' THEN t1.c1 END, CASE WHEN rt0.c1 THEN rt0.c1 WHEN x'0bcf22' THEN rt0.c2 ELSE t1.c1 END)) AND (((t1.c0 IN (t1.c0)), (((5.2943749E7)) BETWEEN ((t1.c0)) AND ((rt0.c1))))))) ORDER BY CASE WHEN ((x'69') BETWEEN (rt0.c2) AND (t1.c0)) THEN CAST(NULL AS REAL) WHEN (NOT (rt0.c2)) THEN COALESCE(DISTINCT rt0.c0, rt0.c1, t1.c1, rt0.c1) WHEN CASE rt0.c4  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c1 END THEN (~ (t1.c1)) WHEN ((rt0.c3)==(rt0.c2)) THEN (((rt0.c1, rt0.c0, t1.c1, rt0.c1))<=((rt0.c3, rt0.c1, rt0.c0, rt0.c1))) END DESC;
SELECT ALL * FROM t1 NOT INDEXED INNER JOIN rt0 ON CASE ((t1.c0) NOT NULL)  WHEN (+ (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN rt0.c4 COLLATE BINARY ELSE ((rt0.c1)/(rt0.c4)) END WHERE (((CASE rt0.c4  WHEN t1.c1 THEN rt0.c0 WHEN rt0.c4 THEN t1.c1 END) NOT BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)))OR(NULL)))OR(x'ee'))) AND ((~ (t1.c0))))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE COLLATE RTRIM, ((((((((t1.c1)OR(IFNULL(DISTINCT t1.c0, t1.c1))))OR((- (-1407231719)))))AND(json_array(rt0.c1, rt0.c1, rt0.c0, rt0.c0, t1.c1, rt0.c0))))AND(t1.c0 COLLATE NOCASE)) ASC;
SELECT * FROM t1 INNER JOIN rt0 ON CASE ((t1.c0) NOT NULL)  WHEN (+ (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN rt0.c4 COLLATE BINARY ELSE ((rt0.c1)/(rt0.c4)) END WHERE (((((CASE rt0.c4  WHEN t1.c1 THEN rt0.c0 WHEN rt0.c4 THEN t1.c1 END) NOT BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)))OR(NULL)))OR(x'ee'))) AND ((~ (t1.c0)))))AND(((CAST(t1.c1 AS INTEGER))<>((t1.c1 IN ())))))) ORDER BY CAST(((rt0.c3) IS FALSE) AS NUMERIC) ASC  NULLS FIRST, (rt0.c4 COLLATE NOCASE IN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC INTERSECT SELECT * FROM t1 INNER JOIN rt0 ON CASE ((t1.c0) NOT NULL)  WHEN (+ (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN rt0.c4 COLLATE BINARY ELSE ((rt0.c1)/(rt0.c4)) END WHERE (((((((((rt0.c2)>=(rt0.c4)))AND((((rt0.c1, t1.c0)) NOT BETWEEN ((rt0.c3, rt0.c2)) AND ((t1.c1, t1.c1))))))OR(0.6156027857586408)))OR(((rt0.c3)GLOB(rt0.c4))))) ORDER BY CAST(((rt0.c3) IS FALSE) AS NUMERIC) ASC  NULLS FIRST, (rt0.c4 COLLATE NOCASE IN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC;
SELECT ALL * FROM t1 NOT INDEXED INNER JOIN rt0 ON CASE ((t1.c0) NOT NULL)  WHEN (+ (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN rt0.c4 COLLATE BINARY ELSE ((rt0.c1)/(rt0.c4)) END WHERE (((CASE rt0.c4  WHEN t1.c1 THEN rt0.c0 WHEN rt0.c4 THEN t1.c1 END) NOT BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)))OR(NULL)))OR(x'ee'))) AND ((~ (t1.c0))))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE COLLATE RTRIM, ((((((((t1.c1)OR(IFNULL(DISTINCT t1.c0, t1.c1))))OR((- (-1407231719)))))AND(json_array(rt0.c1, rt0.c1, rt0.c0, rt0.c0, t1.c1, rt0.c0))))AND(t1.c0 COLLATE NOCASE)) ASC;
SELECT * FROM t1 INNER JOIN rt0 ON CASE ((t1.c0) NOT NULL)  WHEN (+ (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN rt0.c4 COLLATE BINARY ELSE ((rt0.c1)/(rt0.c4)) END WHERE (((((CASE rt0.c4  WHEN t1.c1 THEN rt0.c0 WHEN rt0.c4 THEN t1.c1 END) NOT BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)))OR(NULL)))OR(x'ee'))) AND ((~ (t1.c0)))))AND(((CAST(t1.c1 AS INTEGER))<>((t1.c1 IN ())))))) ORDER BY CAST(((rt0.c3) IS FALSE) AS NUMERIC) ASC  NULLS FIRST, (rt0.c4 COLLATE NOCASE IN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC INTERSECT SELECT * FROM t1 INNER JOIN rt0 ON CASE ((t1.c0) NOT NULL)  WHEN (+ (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN rt0.c4 COLLATE BINARY ELSE ((rt0.c1)/(rt0.c4)) END WHERE (((((((((rt0.c2)>=(rt0.c4)))AND((((rt0.c1, t1.c0)) NOT BETWEEN ((rt0.c3, rt0.c2)) AND ((t1.c1, t1.c1))))))OR(0.6156027857586408)))OR(((rt0.c3)GLOB(rt0.c4))))) ORDER BY CAST(((rt0.c3) IS FALSE) AS NUMERIC) ASC  NULLS FIRST, (rt0.c4 COLLATE NOCASE IN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)AND((t1.c1 IN (t1.c0)))))OR((t1.c0 IN (t1.c1, t1.c0)))))OR((~ (t1.c1)))))AND(0.8258877813871666)));
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1)AND((t1.c1 IN (t1.c0)))))OR((t1.c0 IN (t1.c1, t1.c0)))))OR((~ (t1.c1)))))AND(0.8258877813871666))) ORDER BY x'8217', CASE t1.c1  WHEN IFNULL(t1.c0, t1.c0) THEN ((t1.c0)|(t1.c0)) WHEN t1.c1 THEN ((t1.c1) NOT NULL) WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN LTRIM(t1.c1, 'c7L') ELSE x'e882' END LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)IS(UNICODE(t1.c1)))) ORDER BY x'8217', CASE t1.c1  WHEN IFNULL(t1.c0, t1.c0) THEN ((t1.c0)|(t1.c0)) WHEN t1.c1 THEN ((t1.c1) NOT NULL) WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN LTRIM(t1.c1, 'c7L') ELSE x'e882' END LIMIT 0x0;
SELECT ALL * FROM t1 WHERE (((((((((t1.c1)AND((t1.c1 IN (t1.c0)))))OR((t1.c0 IN (t1.c1, t1.c0)))))OR((~ (t1.c1)))))AND(0.8258877813871666)));
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1)AND((t1.c1 IN (t1.c0)))))OR((t1.c0 IN (t1.c1, t1.c0)))))OR((~ (t1.c1)))))AND(0.8258877813871666))) ORDER BY x'8217', CASE t1.c1  WHEN IFNULL(t1.c0, t1.c0) THEN ((t1.c0)|(t1.c0)) WHEN t1.c1 THEN ((t1.c1) NOT NULL) WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN LTRIM(t1.c1, 'c7L') ELSE x'e882' END LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)IS(UNICODE(t1.c1)))) ORDER BY x'8217', CASE t1.c1  WHEN IFNULL(t1.c0, t1.c0) THEN ((t1.c0)|(t1.c0)) WHEN t1.c1 THEN ((t1.c1) NOT NULL) WHEN CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END THEN LTRIM(t1.c1, 'c7L') ELSE x'e882' END LIMIT 0x0;
SELECT ALL MAX(rt0.c0) FROM t1 INNER JOIN rt0 ON ((0.7226760922370579)IS(((((t1.c1)OR(t1.c1)))OR(rt0.c4)))) WHERE (ABS(0.41119790886244745)) ORDER BY (((t1.c1 IN (rt0.c0, rt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (rt0.c3))  NULLS LAST, ((x'' IN (0.29943204777614674)) IN (((rt0.c0) NOTNULL))), ((rt0.c4)*(IFNULL(rt0.c2, t1.c0)));
SELECT ALL MAX(rt0.c0) FROM t1 INNER JOIN rt0 ON ((0.7226760922370579)IS(((((t1.c1)OR(t1.c1)))OR(rt0.c4)))) WHERE (((ABS(0.41119790886244745))AND((t1.c1 IN (rt0.c0)) COLLATE NOCASE COLLATE BINARY))) ORDER BY CASE ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c4))  WHEN ((((((rt0.c2)OR(rt0.c0)))OR(x'')))OR(NULL)) THEN (NOT (rt0.c2)) WHEN (rt0.c0 IN (t1.c0, rt0.c0)) THEN ((((rt0.c4)OR(t1.c1)))OR(rt0.c1)) WHEN rt0.c0 THEN ((rt0.c1) BETWEEN (rt0.c2) AND (t1.c0)) WHEN (0.9178881820097918 IN ()) THEN ((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(t1.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(t1.c1)))OR(t1.c0)) ELSE ((((rt0.c0)OR(t1.c0)))OR(rt0.c3)) END  NULLS FIRST, (~ (rt0.c2)) COLLATE RTRIM DESC;
SELECT MIN(t1.c1) FROM t1 WHERE ((((CAST(t1.c1 AS INTEGER)))!=((((t1.c1) NOT NULL))))) ORDER BY t1.c0 DESC, ((TRIM(DISTINCT t1.c1))%(((t1.c0) ISNULL))), IFNULL((t1.c0 IN ()), ((((((t1.c0)OR(t1.c1)))OR(t1.c1)))OR(t1.c1)))  NULLS FIRST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((((CAST(t1.c1 AS INTEGER)))<((((t1.c1) NOT NULL)))))AND(0.6116600468994048 COLLATE RTRIM))) ORDER BY (+ ((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((x''))))), ((t1.c1 COLLATE RTRIM)<<(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)) ASC, ((TYPEOF(DISTINCT t1.c1))>=(LOWER(t1.c1))) DESC LIMIT 2;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT NULL))IS((+ (t1.c1))))) ORDER BY CAST('-1720984560' AS NUMERIC)  NULLS FIRST, (((+ (t1.c1)))/(((((t1.c1)AND(t1.c1)))AND(t1.c1))))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT NULL))IS((+ (t1.c1))))) ORDER BY t1.c1 ASC  NULLS FIRST, ((0x65d23286)==(CAST(t1.c1 AS TEXT))) ASC INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((t1.c0)LIKE(x'f8')) COLLATE BINARY) ORDER BY t1.c1 ASC  NULLS FIRST, ((0x65d23286)=(CAST(t1.c1 AS TEXT))) ASC;
SELECT MIN(rt0.c0) FROM t1, rt0 WHERE (((CAST(t1.c0 AS NUMERIC)) NOT NULL)) ORDER BY ((((t1.c0) IS TRUE)) ISNULL) DESC, ((~ (t1.c1)) IN ()) ASC;
SELECT DISTINCT MIN(rt0.c0) FROM t1, rt0 WHERE (((CAST(t1.c0 AS NUMERIC)) NOT NULL)) ORDER BY ((((t1.c0) IS TRUE)) ISNULL) DESC, ((~ (t1.c1)) IN ()) ASC;
SELECT ALL * FROM t1, rt0 WHERE (((t1.c1)%(rt0.c2)) COLLATE BINARY) ORDER BY (SUBSTR(rt0.c2, t1.c1) IN ((~ (rt0.c2)), rt0.c1, (NOT (rt0.c3)))) ASC  NULLS FIRST, ((((CASE WHEN rt0.c0 THEN t1.c1 ELSE rt0.c3 END)OR(((t1.c0) NOT BETWEEN (rt0.c2) AND (x'bd1e')))))AND((NOT (rt0.c0)))) ASC;
SELECT DISTINCT * FROM t1, rt0 WHERE (((t1.c1)%(rt0.c2)) COLLATE BINARY) ORDER BY 'L', ((rt0.c3)<(CASE WHEN rt0.c4 THEN t1.c1 ELSE rt0.c3 END)) DESC, ']3ke', CAST(rt0.c1 COLLATE BINARY AS REAL) ASC LIMIT 2;
SELECT ALL * FROM t1, rt0 WHERE (((t1.c1)%(rt0.c2)) COLLATE BINARY) ORDER BY (SUBSTR(rt0.c2, t1.c1) IN ((~ (rt0.c2)), rt0.c1, (NOT (rt0.c3)))) ASC  NULLS FIRST, ((((CASE WHEN rt0.c0 THEN t1.c1 ELSE rt0.c3 END)OR(((t1.c0) NOT BETWEEN (rt0.c2) AND (x'bd1e')))))AND((NOT (rt0.c0)))) ASC;
SELECT DISTINCT * FROM t1, rt0 WHERE (((t1.c1)%(rt0.c2)) COLLATE BINARY) ORDER BY 'L', ((rt0.c3)<(CASE WHEN rt0.c4 THEN t1.c1 ELSE rt0.c3 END)) DESC, ']3ke', CAST(rt0.c1 COLLATE BINARY AS REAL) ASC LIMIT 2;
SELECT ALL * FROM t1, rt0 WHERE (((0.41304997634473195)GLOB(UPPER(DISTINCT rt0.c1)))) ORDER BY ((highlight(rt0.c0, rt0.c4, rt0.c3, rt0.c0)) NOT BETWEEN (((((t1.c1)OR(rt0.c3)))AND(rt0.c3))) AND (((((0.9984772119202191)OR(t1.c1)))AND(t1.c1))))  NULLS LAST, (NOT ((((t1.c0, rt0.c4)) BETWEEN ((rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c1)))));
SELECT * FROM t1, rt0 WHERE (((((0.41304997634473195)GLOB(UPPER(DISTINCT rt0.c1))))AND(-9.17186638E8))) ORDER BY CAST(((t1.c0)/(t1.c0)) AS TEXT), ((((((((rt0.c2)OR(0xfffffffff931d867)))AND(rt0.c0)))AND(rt0.c0)))%(((rt0.c2)==(rt0.c3)))) ASC;
SELECT ALL * FROM t1, rt0 WHERE (((0.41304997634473195)GLOB(UPPER(DISTINCT rt0.c1)))) ORDER BY ((highlight(rt0.c0, rt0.c4, rt0.c3, rt0.c0)) NOT BETWEEN (((((t1.c1)OR(rt0.c3)))AND(rt0.c3))) AND (((((0.9984772119202191)OR(t1.c1)))AND(t1.c1))))  NULLS LAST, (NOT ((((t1.c0, rt0.c4)) BETWEEN ((rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c1)))));
SELECT * FROM t1, rt0 WHERE (((((0.41304997634473195)GLOB(UPPER(DISTINCT rt0.c1))))AND(-9.17186638E8))) ORDER BY CAST(((t1.c0)/(t1.c0)) AS TEXT), ((((((((rt0.c2)OR(0xfffffffff931d867)))AND(rt0.c0)))AND(rt0.c0)))%(((rt0.c2)==(rt0.c3)))) ASC;
SELECT ALL * FROM rt0 INNER JOIN t1 ON ((((((((rt0.c1)AND(rt0.c3)))OR(NULL)))OR(rt0.c3)))OR(rt0.c4)) COLLATE BINARY WHERE (((((rt0.c4)>=(rt0.c0)))IS((NOT (rt0.c4))))) ORDER BY rt0.c0 DESC, CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, CAST(((((x'b7')OR(t1.c1)))AND(rt0.c0)) AS INTEGER);
SELECT ALL * FROM rt0 INNER JOIN t1 ON ((((((((rt0.c1)AND(rt0.c3)))OR(NULL)))OR(rt0.c3)))OR(rt0.c4)) COLLATE BINARY WHERE (((((((rt0.c4)>=(rt0.c0)))IS((NOT (rt0.c4)))))AND(((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((rt0.c1 IN ()))))OR(LIKELIHOOD(rt0.c0, NULL))))OR(((((rt0.c2)AND(NULL)))AND(rt0.c0))))))) ORDER BY rt0.c0 DESC, CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, CAST(((((x'b7')OR(t1.c1)))AND(rt0.c0)) AS INTEGER);
SELECT ALL * FROM rt0 INNER JOIN t1 ON ((((((((rt0.c1)AND(rt0.c3)))OR(NULL)))OR(rt0.c3)))OR(rt0.c4)) COLLATE BINARY WHERE (((((rt0.c4)>=(rt0.c0)))IS((NOT (rt0.c4))))) ORDER BY rt0.c0 DESC, CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, CAST(((((x'b7')OR(t1.c1)))AND(rt0.c0)) AS INTEGER);
SELECT ALL * FROM rt0 INNER JOIN t1 ON ((((((((rt0.c1)AND(rt0.c3)))OR(NULL)))OR(rt0.c3)))OR(rt0.c4)) COLLATE BINARY WHERE (((((((rt0.c4)>=(rt0.c0)))IS((NOT (rt0.c4)))))AND(((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((rt0.c1 IN ()))))OR(LIKELIHOOD(rt0.c0, NULL))))OR(((((rt0.c2)AND(NULL)))AND(rt0.c0))))))) ORDER BY rt0.c0 DESC, CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, CAST(((((x'b7')OR(t1.c1)))AND(rt0.c0)) AS INTEGER);
SELECT * FROM rt0 NATURAL JOIN t1 WHERE (json_array_length(']3ke' COLLATE NOCASE));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE (((json_array_length(']3ke' COLLATE NOCASE))AND(CAST((~ (rt0.c4)) AS REAL)))) LIMIT 0;
SELECT * FROM rt0 NATURAL JOIN t1 WHERE (json_array_length(']3ke' COLLATE NOCASE));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (DATE((((t1.c0, t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0, x'')) AND ((t1.c0, t1.c1, t1.c1, t1.c0))), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), ((x'0d')<(t1.c0))));
SELECT ALL MAX(t1.c0) FROM t1 WHERE (DATE((((t1.c0, t1.c0, t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c0, x'')) AND ((t1.c0, t1.c1, t1.c1, t1.c0))), ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)), ((x'0d')<(t1.c0)))) INTERSECT SELECT ALL MAX(t1.c0) FROM t1 WHERE ((NOT (0.19057425763899605)));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)AND(NULL)))AND(rt0.c3)))||(CAST(0xffffffff8048c7d3 AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)AND(NULL)))AND(rt0.c3)))||(CAST(-2142713901 AS TEXT))))AND(CASE WHEN ((rt0.c1) NOT NULL) THEN CASE WHEN rt0.c2 THEN rt0.c1 END WHEN (NULL IN (rt0.c2)) THEN (- (rt0.c3)) ELSE rt0.c1 END))) ORDER BY CAST(((((rt0.c2)OR(-998907443)))AND(NULL)) AS INTEGER), (rt0.c0 COLLATE BINARY IN ())  NULLS LAST, x'c818'  NULLS LAST LIMIT 0 INTERSECT SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4)AND((((NULL, rt0.c2, rt0.c3))<=((rt0.c4, rt0.c1, rt0.c4))))))AND((+ (rt0.c2))))) ORDER BY CAST(((((rt0.c2)OR(0Xffffffffc475e1cd)))AND(NULL)) AS INTEGER), (rt0.c0 COLLATE BINARY IN ())  NULLS LAST, x'c818'  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY CAST(t1.c1 AS INTEGER) COLLATE BINARY ASC, (~ (CASE t1.c0  WHEN 0.28814878998129434 THEN '1293401590' ELSE '鬚XVgb]' END)) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((('0.9319836884810059', ((t1.c0) NOT BETWEEN (0.5357209095212832) AND (t1.c1))))>(((+ (0.9402894372324503)), (0x78ab0ffd IN (t1.c0))))) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((CAST(t1.c0 AS REAL)) NOT BETWEEN (CAST(t1.c1 AS REAL)) AND (x''))) ORDER BY ((('0.9319836884810059', ((t1.c0) NOT BETWEEN (0.5357209095212832) AND (t1.c1))))>(((+ (0.9402894372324503)), (2024476669 IN (t1.c0))))) LIMIT 0;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY CAST(t1.c1 AS INTEGER) COLLATE BINARY ASC, (~ (CASE t1.c0  WHEN 0.28814878998129434 THEN '1293401590' ELSE '鬚XVgb]' END)) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((('0.9319836884810059', ((t1.c0) NOT BETWEEN (0.5357209095212832) AND (t1.c1))))>(((+ (0.9402894372324503)), (0x78ab0ffd IN (t1.c0))))) LIMIT 0 INTERSECT SELECT * FROM t1 WHERE (((CAST(t1.c0 AS REAL)) NOT BETWEEN (CAST(t1.c1 AS REAL)) AND (x''))) ORDER BY ((('0.9319836884810059', ((t1.c0) NOT BETWEEN (0.5357209095212832) AND (t1.c1))))>(((+ (0.9402894372324503)), (2024476669 IN (t1.c0))))) LIMIT 0;
SELECT MIN(rt0.c0) FROM rt0, t1 WHERE ((rt0.c1 COLLATE NOCASE IN (CAST(rt0.c1 AS REAL))));
SELECT ALL MIN(rt0.c0) FROM rt0, t1 WHERE ((rt0.c1 COLLATE NOCASE IN (CAST(rt0.c1 AS REAL)))) LIMIT 2 INTERSECT SELECT ALL MIN(rt0.c0) FROM rt0, t1 WHERE (UNLIKELY(rt0.c0)) LIMIT 2;
SELECT * FROM t1 WHERE ((((t1.c1, t1.c0, t1.c1)) BETWEEN ((((t1.c1) ISNULL), TRIM(t1.c0, t1.c1), t1.c1)) AND ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), ((x'')GLOB(t1.c0)), ((t1.c0) NOTNULL)))));
SELECT ALL * FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c1)) BETWEEN ((((t1.c1) ISNULL), TRIM(t1.c0, t1.c1), t1.c1)) AND ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), ((x'')GLOB(t1.c0)), ((t1.c0) NOTNULL)))))AND(CASE (NOT (t1.c1))  WHEN x'8e' THEN IFNULL(t1.c1, t1.c0) WHEN ((t1.c1) NOT NULL) THEN (NOT (t1.c0)) WHEN ((t1.c1) NOT NULL) THEN (t1.c0 IN (t1.c0)) END))) ORDER BY (t1.c0 IN (t1.c0, t1.c1)) COLLATE BINARY LIMIT 0x0;
SELECT * FROM t1 WHERE ((((t1.c1, t1.c0, t1.c1)) BETWEEN ((((t1.c1) ISNULL), TRIM(t1.c0, t1.c1), t1.c1)) AND ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), ((x'')GLOB(t1.c0)), ((t1.c0) NOTNULL)))));
SELECT ALL * FROM t1 WHERE ((((((t1.c1, t1.c0, t1.c1)) BETWEEN ((((t1.c1) ISNULL), TRIM(t1.c0, t1.c1), t1.c1)) AND ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), ((x'')GLOB(t1.c0)), ((t1.c0) NOTNULL)))))AND(CASE (NOT (t1.c1))  WHEN x'8e' THEN IFNULL(t1.c1, t1.c0) WHEN ((t1.c1) NOT NULL) THEN (NOT (t1.c0)) WHEN ((t1.c1) NOT NULL) THEN (t1.c0 IN (t1.c0)) END))) ORDER BY (t1.c0 IN (t1.c0, t1.c1)) COLLATE BINARY LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)-(rt0.c0))) IS FALSE)) ORDER BY CASE ((rt0.c2)<>(rt0.c2))  WHEN ((rt0.c3) NOTNULL) THEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)) END DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)-(rt0.c0))) IS FALSE)) ORDER BY CASE ((rt0.c2)!=(rt0.c2))  WHEN ((rt0.c3) NOTNULL) THEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)) END DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) IS TRUE))OR(((-3.28266871E8) NOT NULL)))) ORDER BY CASE ((rt0.c2)<>(rt0.c2))  WHEN ((rt0.c3) NOTNULL) THEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)) END DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)-(rt0.c0))) IS FALSE)) ORDER BY CASE ((rt0.c2)<>(rt0.c2))  WHEN ((rt0.c3) NOTNULL) THEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)) END DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)-(rt0.c0))) IS FALSE)) ORDER BY CASE ((rt0.c2)!=(rt0.c2))  WHEN ((rt0.c3) NOTNULL) THEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)) END DESC  NULLS LAST INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) IS TRUE))OR(((-3.28266871E8) NOT NULL)))) ORDER BY CASE ((rt0.c2)<>(rt0.c2))  WHEN ((rt0.c3) NOTNULL) THEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)) END DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c1)) NOT BETWEEN ((NULL)) AND ((x'28ed07'))) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 END, COALESCE(DISTINCT t1.c1, t1.c1, x'885f48'))));
SELECT * FROM t1 WHERE (((((t1.c1)) NOT BETWEEN ((NULL)) AND ((x'28ed07'))) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 END, COALESCE(DISTINCT t1.c1, t1.c1, x'885f48')))) ORDER BY ((((t1.c1)IS(t1.c0)))<<(((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1))))  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM t1 WHERE (((0Xffffffffbc94e0a7) ISNULL) COLLATE NOCASE) ORDER BY ((((t1.c1)IS(t1.c0)))<<(((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1))))  NULLS FIRST LIMIT 1;
SELECT * FROM t1 WHERE (((((t1.c1)) NOT BETWEEN ((NULL)) AND ((x'28ed07'))) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 END, COALESCE(DISTINCT t1.c1, t1.c1, x'885f48'))));
SELECT * FROM t1 WHERE (((((t1.c1)) NOT BETWEEN ((NULL)) AND ((x'28ed07'))) IN (CASE t1.c0  WHEN t1.c1 THEN t1.c0 END, COALESCE(DISTINCT t1.c1, t1.c1, x'885f48')))) ORDER BY ((((t1.c1)IS(t1.c0)))<<(((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1))))  NULLS FIRST LIMIT 1 INTERSECT SELECT * FROM t1 WHERE (((0Xffffffffbc94e0a7) ISNULL) COLLATE NOCASE) ORDER BY ((((t1.c1)IS(t1.c0)))<<(((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))OR(t1.c1)))AND(t1.c1))))  NULLS FIRST LIMIT 1;
SELECT * FROM rt0, t1 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN t1.c1 END) BETWEEN (MAX(rt0.c0, rt0.c1, rt0.c1, '1480787630')) AND (NULL)));
SELECT ALL * FROM rt0, t1 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN t1.c1 END) BETWEEN (MAX(rt0.c0, rt0.c1, rt0.c1, '1480787630')) AND (NULL))) ORDER BY '-525531268' ASC  NULLS FIRST, ((NULL) NOTNULL) DESC, CASE WHEN x'' THEN rt0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN t1.c1 END) BETWEEN (MAX(rt0.c0, rt0.c1, rt0.c1, '1480787630')) AND (NULL)));
SELECT ALL * FROM rt0, t1 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN t1.c1 END) BETWEEN (MAX(rt0.c0, rt0.c1, rt0.c1, '1480787630')) AND (NULL))) ORDER BY '-525531268' ASC  NULLS FIRST, ((NULL) NOTNULL) DESC, CASE WHEN x'' THEN rt0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT MAX(rt0.c0) FROM t1, rt0 WHERE ((((rt0.c4 IN ())) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (t1.c0 COLLATE BINARY)));
SELECT MAX(rt0.c0) FROM t1, rt0 WHERE ((((((rt0.c4 IN ())) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (t1.c0 COLLATE BINARY)))AND(((t1.c0)>(CAST(t1.c1 AS BLOB)))))) LIMIT 0x1 INTERSECT SELECT MAX(rt0.c0) FROM t1, rt0 WHERE ((((t1.c1)-(t1.c0)) IN ('	'))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE ((- (CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 END))) ORDER BY (((('~', rt0.c0))==((rt0.c4, rt0.c3))) IN ((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))), rt0.c2, (- (rt0.c1)), ((((((((rt0.c0)AND(rt0.c0)))AND(NULL)))AND(rt0.c2)))OR(rt0.c0)))) DESC  NULLS LAST, CAST(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END AS NUMERIC) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((- (CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 END))) ORDER BY (((('~', rt0.c0))=((rt0.c4, rt0.c3))) IN ((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))), rt0.c2, (- (rt0.c1)), ((((((((rt0.c0)AND(rt0.c0)))AND(NULL)))AND(rt0.c2)))OR(rt0.c0)))) DESC  NULLS LAST, CAST(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((- (CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 END))) ORDER BY (((('~', rt0.c0))==((rt0.c4, rt0.c3))) IN ((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))), rt0.c2, (- (rt0.c1)), ((((((((rt0.c0)AND(rt0.c0)))AND(NULL)))AND(rt0.c2)))OR(rt0.c0)))) DESC  NULLS LAST, CAST(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END AS NUMERIC) ASC  NULLS FIRST;
SELECT DISTINCT * FROM rt0 WHERE ((- (CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 END))) ORDER BY (((('~', rt0.c0))=((rt0.c4, rt0.c3))) IN ((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))), rt0.c2, (- (rt0.c1)), ((((((((rt0.c0)AND(rt0.c0)))AND(NULL)))AND(rt0.c2)))OR(rt0.c0)))) DESC  NULLS LAST, CAST(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM t1, rt0 WHERE (((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3)))%(CASE t1.c0  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c3 THEN t1.c1 WHEN rt0.c1 THEN t1.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN t1.c1 END)));
SELECT * FROM t1, rt0 WHERE (((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3)))%(CASE t1.c0  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c3 THEN t1.c1 WHEN rt0.c1 THEN t1.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN t1.c1 END))) LIMIT 1 INTERSECT SELECT ALL * FROM t1, rt0 WHERE (((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c4)) COLLATE BINARY) LIMIT 1;
SELECT * FROM t1, rt0 WHERE (((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3)))%(CASE t1.c0  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c3 THEN t1.c1 WHEN rt0.c1 THEN t1.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN t1.c1 END)));
SELECT * FROM t1, rt0 WHERE (((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3)))%(CASE t1.c0  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c3 THEN t1.c1 WHEN rt0.c1 THEN t1.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN t1.c1 END))) LIMIT 1 INTERSECT SELECT ALL * FROM t1, rt0 WHERE (((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c4)) COLLATE BINARY) LIMIT 1;
SELECT * FROM t1 WHERE (((((((((t1.c0) IS FALSE))OR(CAST(t1.c1 AS INTEGER))))OR(0x7d72614e)))OR((- (t1.c0))))) ORDER BY ((((0.7893670205167743)&(t1.c1))) NOTNULL)  NULLS FIRST, (x'35' IN ());
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0) IS FALSE))OR(CAST(t1.c1 AS INTEGER))))OR(2104648014)))OR((- (t1.c0))))) ORDER BY (((t1.c1)) BETWEEN ((((t1.c0) ISNULL))) AND ((((t1.c1)<<(t1.c1))))) ASC  NULLS FIRST, '-1083446037';
SELECT * FROM t1 WHERE (((((((((t1.c0) IS FALSE))OR(CAST(t1.c1 AS INTEGER))))OR(0x7d72614e)))OR((- (t1.c0))))) ORDER BY ((((0.7893670205167743)&(t1.c1))) NOTNULL)  NULLS FIRST, (x'35' IN ());
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'')) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'')) COLLATE RTRIM)AND(COALESCE(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 END, rt0.c2 COLLATE NOCASE)))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'')) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'')) COLLATE RTRIM)AND(COALESCE(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 END, rt0.c2 COLLATE NOCASE)))) LIMIT 1;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT ('C')))<>((- ('1475019640'))))) ORDER BY rt0.c3, (+ (CASE WHEN rt0.c1 THEN 0.44633838241517954 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN 0.47050460326572263 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END))  NULLS FIRST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((NOT ('C')))<>((- ('1475019640')))))AND((((rt0.c0)) NOT BETWEEN ((0.27037037029972644)) AND ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 END)))))) ORDER BY rt0.c3, (+ (CASE WHEN rt0.c1 THEN 0.44633838241517954 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN 0.47050460326572263 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END))  NULLS FIRST LIMIT 1;
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE WHEN rt0.c2 THEN t1.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE WHEN rt0.c2 THEN t1.c0 END COLLATE NOCASE) ORDER BY rt0.c1, ((((t1.c1))<=((rt0.c2))) IN ()) ASC INTERSECT SELECT COUNT(*) FROM rt0, t1 WHERE (NULLIF(((rt0.c0)OR(x'')), CASE WHEN rt0.c4 THEN t1.c0 END)) ORDER BY rt0.c1, ((((t1.c1))<=((rt0.c2))) IN ()) ASC;
SELECT ALL * FROM t1, rt0 WHERE ((NULL IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c1)))));
SELECT ALL * FROM t1, rt0 WHERE ((NULL IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c1))))) ORDER BY (((t1.c1) ISNULL) IN ()) ASC  NULLS LAST, ((((t1.c0)!=(x'')))+(((rt0.c4)==(t1.c1))))  NULLS LAST, ((rt0.c0 IN (rt0.c2)) IN ()) ASC  NULLS LAST LIMIT 0x0;
SELECT ALL * FROM t1, rt0 WHERE ((NULL IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c1)))));
SELECT ALL * FROM t1, rt0 WHERE ((NULL IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c1))))) ORDER BY (((t1.c1) ISNULL) IN ()) ASC  NULLS LAST, ((((t1.c0)!=(x'')))+(((rt0.c4)==(t1.c1))))  NULLS LAST, ((rt0.c0 IN (rt0.c2)) IN ()) ASC  NULLS LAST LIMIT 0x0;
SELECT COUNT(*) FROM rt0 WHERE ((((+ ('-1523425267')))|(CAST(rt0.c4 AS INTEGER)))) ORDER BY (((rt0.c3, rt0.c2)) NOT BETWEEN (((- (rt0.c2)), (rt0.c0 IN (rt0.c3, rt0.c2, rt0.c4, rt0.c3)))) AND (((rt0.c0 IN ()), ((rt0.c3) BETWEEN (rt0.c1) AND ('1679372407')))))  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((+ ('-1523425267')))|(CAST(rt0.c4 AS INTEGER)))) ORDER BY rt0.c0  NULLS LAST, ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))-((~ (rt0.c0))))  NULLS LAST LIMIT 0x1 INTERSECT SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)|(rt0.c1 COLLATE NOCASE))) ORDER BY rt0.c0  NULLS LAST, ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))-((~ (rt0.c0))))  NULLS LAST LIMIT 0x1;
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (t1.c0)))|(((rt0.c0)IS NOT(t1.c0)))));
SELECT * FROM t1, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c3) AND (t1.c0)))|(((rt0.c0)IS NOT(t1.c0)))))AND(rt0.c3))) ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN (rt0.c1 IN ()) THEN rt0.c1 ELSE ((rt0.c4) ISNULL) END  NULLS LAST INTERSECT SELECT * FROM t1, rt0 WHERE ((((rt0.c4 COLLATE BINARY))=((NULL)))) ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN (rt0.c1 IN ()) THEN rt0.c1 ELSE ((rt0.c4) ISNULL) END  NULLS LAST;
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (t1.c0)))|(((rt0.c0)IS NOT(t1.c0)))));
SELECT * FROM t1, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c3) AND (t1.c0)))|(((rt0.c0)IS NOT(t1.c0)))))AND(rt0.c3))) ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN (rt0.c1 IN ()) THEN rt0.c1 ELSE ((rt0.c4) ISNULL) END  NULLS LAST INTERSECT SELECT * FROM t1, rt0 WHERE ((((rt0.c4 COLLATE BINARY))=((NULL)))) ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN (rt0.c1 IN ()) THEN rt0.c1 ELSE ((rt0.c4) ISNULL) END  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN t1 ON ((NULL COLLATE BINARY)AND(rt0.c3 COLLATE RTRIM)) WHERE ((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON ((NULL COLLATE BINARY)AND(rt0.c3 COLLATE RTRIM)) WHERE ((((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()))AND((NOT ((640271764 IN (t1.c1, t1.c1))))))) LIMIT 0;
SELECT * FROM rt0 CROSS JOIN t1 ON ((NULL COLLATE BINARY)AND(rt0.c3 COLLATE RTRIM)) WHERE ((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON ((NULL COLLATE BINARY)AND(rt0.c3 COLLATE RTRIM)) WHERE ((((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()))AND((NOT ((640271764 IN (t1.c1, t1.c1))))))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4)||(rt0.c0))))<=((((rt0.c0) ISNULL)))));
SELECT * FROM rt0 WHERE ((((((((rt0.c4)||(rt0.c0))))=((((rt0.c0) ISNULL)))))AND(((((x'b6')IS NOT(rt0.c2)))GLOB(((((rt0.c4)OR(rt0.c0)))AND(rt0.c2))))))) ORDER BY ((COALESCE(rt0.c0, rt0.c0, rt0.c1))|(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))) ASC, ((((rt0.c4) BETWEEN (-3.07936728E8) AND (rt0.c2))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))) DESC  NULLS LAST, DATE((rt0.c2 IN (rt0.c4, rt0.c2)), (((rt0.c0))<=((x''))), ((((-2147278309)OR(rt0.c0)))OR(rt0.c2)), rt0.c3 COLLATE RTRIM) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c4)||(rt0.c0))))<=((((rt0.c0) ISNULL)))));
SELECT * FROM rt0 WHERE ((((((((rt0.c4)||(rt0.c0))))=((((rt0.c0) ISNULL)))))AND(((((x'b6')IS NOT(rt0.c2)))GLOB(((((rt0.c4)OR(rt0.c0)))AND(rt0.c2))))))) ORDER BY ((COALESCE(rt0.c0, rt0.c0, rt0.c1))|(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))) ASC, ((((rt0.c4) BETWEEN (-3.07936728E8) AND (rt0.c2))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))) DESC  NULLS LAST, DATE((rt0.c2 IN (rt0.c4, rt0.c2)), (((rt0.c0))<=((x''))), ((((-2147278309)OR(rt0.c0)))OR(rt0.c2)), rt0.c3 COLLATE RTRIM) DESC  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((+ (CASE WHEN rt0.c4 THEN rt0.c2 END))) ORDER BY (((rt0.c3 IN ())) BETWEEN (((rt0.c3)!=(x''))) AND (CAST(rt0.c1 AS NUMERIC))) DESC;
SELECT ALL * FROM rt0 WHERE ((((+ (CASE WHEN rt0.c4 THEN rt0.c2 END)))AND((rt0.c1 COLLATE BINARY IN ())))) ORDER BY (((rt0.c3 IN ())) BETWEEN (((rt0.c3)<>(x''))) AND (CAST(rt0.c1 AS NUMERIC))) DESC LIMIT 0X2;
SELECT ALL * FROM rt0 WHERE ((+ (CASE WHEN rt0.c4 THEN rt0.c2 END))) ORDER BY (((rt0.c3 IN ())) BETWEEN (((rt0.c3)!=(x''))) AND (CAST(rt0.c1 AS NUMERIC))) DESC;
SELECT ALL * FROM rt0 WHERE ((((+ (CASE WHEN rt0.c4 THEN rt0.c2 END)))AND((rt0.c1 COLLATE BINARY IN ())))) ORDER BY (((rt0.c3 IN ())) BETWEEN (((rt0.c3)<>(x''))) AND (CAST(rt0.c1 AS NUMERIC))) DESC LIMIT 0X2;
SELECT COUNT(*) FROM rt0 INNER JOIN t1 ON ((CAST(rt0.c2 AS REAL))AND(json(rt0.c2))) WHERE ((((2.016286577E9 IN (t1.c1, t1.c0)))>>((rt0.c4 IN ())))) ORDER BY ((rt0.c3)OR((+ (rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t1 ON ((CAST(rt0.c2 AS REAL))AND(json(rt0.c2))) WHERE ((((2.016286577E9 IN (t1.c1)))>>((rt0.c4 IN ())))) ORDER BY ((rt0.c3)OR((+ (rt0.c1))))  NULLS LAST LIMIT 1;
SELECT ALL * FROM rt0 INDEXED BY i92 WHERE (((HEX(DISTINCT rt0.c0)) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END) AND (((rt0.c0)==(0.28617261669248095))))) ORDER BY CAST(((rt0.c4) IS TRUE) AS BLOB)  NULLS LAST, ((((((0.6046025175657712)<=(rt0.c4)))OR(1923911847)))AND(0X7ce8aea4)) ASC, ((CASE WHEN rt0.c4 THEN 0Xffffffffb19c0318 END)*(rt0.c4 COLLATE NOCASE));
SELECT DISTINCT * FROM rt0 INDEXED BY i92 WHERE (((((HEX(DISTINCT rt0.c0)) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END) AND (((rt0.c0)==(0.28617261669248095)))))AND(rt0.c3))) ORDER BY ((rt0.c3)=(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END)) ASC  NULLS LAST, CAST((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) AS INTEGER), ((((rt0.c2)|(rt0.c3))) BETWEEN ((((rt0.c4))>=((rt0.c3)))) AND (rt0.c4 COLLATE RTRIM)) DESC;
SELECT ALL * FROM rt0 INDEXED BY i92 WHERE (((HEX(DISTINCT rt0.c0)) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END) AND (((rt0.c0)==(0.28617261669248095))))) ORDER BY CAST(((rt0.c4) IS TRUE) AS BLOB)  NULLS LAST, ((((((0.6046025175657712)<=(rt0.c4)))OR(1923911847)))AND(0X7ce8aea4)) ASC, ((CASE WHEN rt0.c4 THEN 0Xffffffffb19c0318 END)*(rt0.c4 COLLATE NOCASE));
SELECT ALL MIN(rt0.c2) FROM rt0, t1 WHERE (CASE t1.c1  WHEN ((rt0.c2)IS NOT(t1.c0)) THEN x'' WHEN rt0.c4 COLLATE RTRIM THEN (+ (t1.c0)) WHEN rt0.c1 THEN (t1.c1 IN (rt0.c3)) END) ORDER BY ((x'7bad')=((~ (rt0.c4)))), t1.c1 ASC  NULLS LAST, (((((t1.c0, rt0.c4, rt0.c2, rt0.c4, rt0.c3))<=((rt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c3))))<<(((rt0.c0)+(rt0.c2)))) DESC  NULLS LAST;
SELECT ALL MIN(rt0.c2) FROM rt0, t1 WHERE (CASE t1.c1  WHEN ((rt0.c2)IS NOT(t1.c0)) THEN x'' WHEN rt0.c4 COLLATE RTRIM THEN (+ (t1.c0)) WHEN rt0.c1 THEN (t1.c1 IN (rt0.c3)) END) ORDER BY CASE ((rt0.c2)-(t1.c0))  WHEN CASE WHEN t1.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END THEN (rt0.c4 IN ()) WHEN 'ZE?' COLLATE BINARY THEN UPPER(rt0.c4) ELSE (rt0.c4 IN (rt0.c2)) END DESC, (((rt0.c4 IN (rt0.c0, rt0.c1))) NOT BETWEEN (t1.c1 COLLATE BINARY) AND (((rt0.c0)GLOB(rt0.c4))))  NULLS FIRST, ((((((((((rt0.c0)OR(rt0.c3)))OR(((rt0.c0)GLOB(rt0.c3)))))AND(rt0.c4 COLLATE NOCASE)))OR((rt0.c2 IN (t1.c0)))))AND((((rt0.c3, 'VmNj\dA?1', rt0.c3, rt0.c2))==((t1.c1, rt0.c2, rt0.c2, rt0.c3)))))  NULLS LAST LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN 0.39568014576236143 THEN t1.c0 ELSE t1.c1 END)LIKE(((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c0))))) ORDER BY ((x'') NOTNULL) COLLATE RTRIM, t1.c1 DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN 0.39568014576236143 THEN t1.c0 ELSE t1.c1 END)LIKE(((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))))AND(((t1.c0) NOT BETWEEN (x'') AND (t1.c0)) COLLATE NOCASE))) ORDER BY ((x'') NOTNULL) COLLATE RTRIM, t1.c1 DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN 0.39568014576236143 THEN t1.c0 ELSE t1.c1 END)LIKE(((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c0))))) ORDER BY ((x'') NOTNULL) COLLATE RTRIM, t1.c1 DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c1 THEN t1.c0 WHEN 0.39568014576236143 THEN t1.c0 ELSE t1.c1 END)LIKE(((((((t1.c0)AND(t1.c1)))AND(t1.c1)))OR(t1.c0)))))AND(((t1.c0) NOT BETWEEN (x'') AND (t1.c0)) COLLATE NOCASE))) ORDER BY ((x'') NOTNULL) COLLATE RTRIM, t1.c1 DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c3)OR(rt0.c1)))OR(LIKELIHOOD(rt0.c4, rt0.c2))))OR(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END)))AND(CAST(rt0.c1 AS INTEGER))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c3)OR(rt0.c1)))OR(LIKELIHOOD(rt0.c4, rt0.c2))))OR(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END)))AND(CAST(rt0.c1 AS INTEGER)))) ORDER BY ABS(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))), ((CAST(rt0.c1 AS REAL))&(CAST(rt0.c4 AS NUMERIC)))  NULLS FIRST, ((CAST(rt0.c0 AS BLOB))<<('-6755388056587128202T2642152457731748824:-3142413458871426817:-1055566655316066434T-9023603707948388668:253:!氷')) INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))) NOT BETWEEN ((((rt0.c2, rt0.c0)) NOT BETWEEN ((NULL, rt0.c1)) AND ((rt0.c1, 0.5147797116038283)))) AND (rt0.c2))) ORDER BY ABS(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))), ((CAST(rt0.c1 AS REAL))&(CAST(rt0.c4 AS NUMERIC)))  NULLS FIRST, ((CAST(rt0.c0 AS BLOB))<<('-6755388056587128202T2642152457731748824:-3142413458871426817:-1055566655316066434T-9023603707948388668:253:!氷'));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c3)OR(rt0.c1)))OR(LIKELIHOOD(rt0.c4, rt0.c2))))OR(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END)))AND(CAST(rt0.c1 AS INTEGER))));
SELECT * FROM rt0 WHERE (((((((rt0.c1 COLLATE RTRIM)OR(((rt0.c1)/(rt0.c1)))))OR((~ (rt0.c2)))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (NULL)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1 COLLATE RTRIM)OR(((rt0.c1)/(rt0.c1)))))OR((~ (rt0.c2)))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (NULL)))))AND(((((((((((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(CAST(rt0.c4 AS NUMERIC))))OR(TYPEOF(rt0.c4))))OR(rt0.c1)))AND(((rt0.c4)>=(rt0.c2)))))OR(((rt0.c4)IS NOT(rt0.c3))))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) IS FALSE)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1) IS TRUE)))) LIMIT 0;
SELECT * FROM rt0 WHERE (((((((rt0.c1 COLLATE RTRIM)OR(((rt0.c1)/(rt0.c1)))))OR((~ (rt0.c2)))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (NULL)))));
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1 COLLATE RTRIM)OR(((rt0.c1)/(rt0.c1)))))OR((~ (rt0.c2)))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (NULL)))))AND(((((((((((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(CAST(rt0.c4 AS NUMERIC))))OR(TYPEOF(rt0.c4))))OR(rt0.c1)))AND(((rt0.c4)>=(rt0.c2)))))OR(((rt0.c4)IS NOT(rt0.c3))))))) LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) IS FALSE)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1) IS TRUE)))) LIMIT 0;
SELECT MIN(rt0.c2) FROM t1, rt0 WHERE (NULL);
SELECT ALL MIN(rt0.c2) FROM t1, rt0 WHERE (NULL) LIMIT 2;
SELECT ALL * FROM rt0 CROSS JOIN t1 ON ((CASE WHEN t1.c1 THEN rt0.c2 WHEN t1.c0 THEN '' ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN x'04' WHEN t1.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN t1.c1 END) AND (((rt0.c2)>=(rt0.c0)))) WHERE ((((rt0.c3)) NOT BETWEEN ((((t1.c1)%(rt0.c0)))) AND ((((((((((((((t1.c0)AND(rt0.c4)))AND(NULL)))OR(rt0.c0)))AND(t1.c0)))AND(t1.c1)))AND(rt0.c0))))));
SELECT ALL * FROM rt0 CROSS JOIN t1 ON ((CASE WHEN t1.c1 THEN rt0.c2 WHEN t1.c0 THEN '' ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN x'04' WHEN t1.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN t1.c1 END) AND (((rt0.c2)>=(rt0.c0)))) WHERE ((((((rt0.c3)) NOT BETWEEN ((((t1.c1)%(rt0.c0)))) AND ((((((((((((((t1.c0)AND(rt0.c4)))AND(NULL)))OR(rt0.c0)))AND(t1.c0)))AND(t1.c1)))AND(rt0.c0))))))AND(UNLIKELY((t1.c1 IN (t1.c0, rt0.c1)))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM rt0 CROSS JOIN t1 ON ((CASE WHEN t1.c1 THEN rt0.c2 WHEN t1.c0 THEN '' ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN x'04' WHEN t1.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN t1.c1 END) AND (((rt0.c2)>=(rt0.c0)))) WHERE (TOTAL_CHANGES()) LIMIT 0X1;
SELECT ALL * FROM rt0 CROSS JOIN t1 ON ((CASE WHEN t1.c1 THEN rt0.c2 WHEN t1.c0 THEN '' ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN x'04' WHEN t1.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN t1.c1 END) AND (((rt0.c2)>=(rt0.c0)))) WHERE ((((rt0.c3)) NOT BETWEEN ((((t1.c1)%(rt0.c0)))) AND ((((((((((((((t1.c0)AND(rt0.c4)))AND(NULL)))OR(rt0.c0)))AND(t1.c0)))AND(t1.c1)))AND(rt0.c0))))));
SELECT ALL * FROM rt0 CROSS JOIN t1 ON ((CASE WHEN t1.c1 THEN rt0.c2 WHEN t1.c0 THEN '' ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN x'04' WHEN t1.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN t1.c1 END) AND (((rt0.c2)>=(rt0.c0)))) WHERE ((((((rt0.c3)) NOT BETWEEN ((((t1.c1)%(rt0.c0)))) AND ((((((((((((((t1.c0)AND(rt0.c4)))AND(NULL)))OR(rt0.c0)))AND(t1.c0)))AND(t1.c1)))AND(rt0.c0))))))AND(UNLIKELY((t1.c1 IN (t1.c0, rt0.c1)))))) LIMIT 0x1 INTERSECT SELECT ALL * FROM rt0 CROSS JOIN t1 ON ((CASE WHEN t1.c1 THEN rt0.c2 WHEN t1.c0 THEN '' ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN x'04' WHEN t1.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN t1.c1 END) AND (((rt0.c2)>=(rt0.c0)))) WHERE (TOTAL_CHANGES()) LIMIT 0X1;
SELECT MIN(t1.c1) FROM t1 INDEXED BY i43, rt0 WHERE (((((rt0.c3)+(x'97'))) ISNULL)) ORDER BY DATETIME(((t1.c0)>>(x'a50a')), (((rt0.c1))>((rt0.c3))), CASE rt0.c3  WHEN t1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 ELSE 0.35349534744621103 END, LIKE(t1.c0, t1.c1))  NULLS LAST;
SELECT DISTINCT MIN(t1.c1) FROM t1 INDEXED BY i43, rt0 WHERE (((((((rt0.c3)+(x'97'))) ISNULL))AND(rt0.c3))) ORDER BY DATETIME(((t1.c0)>>(x'a50a')), (((rt0.c1))>((rt0.c3))), CASE rt0.c3  WHEN t1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 ELSE 0.35349534744621103 END, LIKE(t1.c0, t1.c1))  NULLS LAST LIMIT 0X1;
SELECT ALL MIN(rt0.c4) FROM t1, rt0 WHERE (t1.c1);
SELECT MIN(rt0.c4) FROM t1, rt0 WHERE (t1.c1) ORDER BY 0.9570656846371064, ((CASE t1.c0  WHEN rt0.c2 THEN t1.c1 WHEN rt0.c1 THEN t1.c0 END)LIKE((((rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c4)) AND ((rt0.c0, t1.c1))))) DESC;
SELECT ALL * FROM t1, rt0 WHERE ((((rt0.c4, '678134028', rt0.c4, t1.c1)) NOT BETWEEN ((UPPER(t1.c0), (((t1.c1)) NOT BETWEEN ((rt0.c4)) AND ((t1.c1))), ((((t1.c1)AND(t1.c0)))AND(0.9949671180544823)), '-829317300')) AND ((CASE WHEN 0.018391746894745098 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN NULL END, '1147121927', (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))), CASE t1.c1  WHEN t1.c1 THEN rt0.c4 WHEN t1.c1 THEN rt0.c4 WHEN NULL THEN t1.c1 END)))) ORDER BY ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY, ((CAST(rt0.c0 AS NUMERIC)) BETWEEN ((t1.c1 IN ())) AND (((rt0.c4) NOT BETWEEN ('0.41119790886244745') AND (t1.c1))))  NULLS FIRST, CAST(((((t1.c1)AND(rt0.c2)))OR(t1.c0)) AS TEXT) ASC  NULLS FIRST, 0x7e2112a9;
SELECT DISTINCT * FROM t1, rt0 WHERE ((((((rt0.c4, '678134028', rt0.c4, t1.c1)) NOT BETWEEN ((UPPER(t1.c0), (((t1.c1)) NOT BETWEEN ((rt0.c4)) AND ((t1.c1))), ((((t1.c1)AND(t1.c0)))AND(0.9949671180544823)), '-829317300')) AND ((CASE WHEN 0.018391746894745098 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN NULL END, '1147121927', (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))), CASE t1.c1  WHEN t1.c1 THEN rt0.c4 WHEN t1.c1 THEN rt0.c4 WHEN NULL THEN t1.c1 END))))AND((((((rt0.c4) IS TRUE), (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))), json_object(rt0.c1, rt0.c4)))<>((x'' COLLATE BINARY, (t1.c0 IN (rt0.c0)), (- (rt0.c2)))))))) ORDER BY ((((((((((((rt0.c4) IS TRUE))AND(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN t1.c0 END)))OR(CASE WHEN rt0.c4 THEN t1.c1 END)))AND(((('0.8828101734172602'))<((rt0.c4))))))OR(NULL)))OR((((t1.c0, rt0.c1))==((rt0.c3, rt0.c0))))), CAST((rt0.c0 IN ()) AS BLOB)  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM t1, rt0 WHERE (CASE WHEN (t1.c0 IN (rt0.c0)) THEN rt0.c1 COLLATE RTRIM WHEN ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))AND(t1.c1)))AND(0.09262476190652535)) THEN NULLIF(DISTINCT rt0.c3, NULL) END) ORDER BY ((((((((((((rt0.c4) IS TRUE))AND(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN t1.c0 END)))OR(CASE WHEN rt0.c4 THEN t1.c1 END)))AND(((('0.8828101734172602'))<((rt0.c4))))))OR(NULL)))OR((((t1.c0, rt0.c1))==((rt0.c3, rt0.c0))))), CAST((rt0.c0 IN ()) AS BLOB)  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1, rt0 WHERE ((((rt0.c4, '678134028', rt0.c4, t1.c1)) NOT BETWEEN ((UPPER(t1.c0), (((t1.c1)) NOT BETWEEN ((rt0.c4)) AND ((t1.c1))), ((((t1.c1)AND(t1.c0)))AND(0.9949671180544823)), '-829317300')) AND ((CASE WHEN 0.018391746894745098 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN NULL END, '1147121927', (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))), CASE t1.c1  WHEN t1.c1 THEN rt0.c4 WHEN t1.c1 THEN rt0.c4 WHEN NULL THEN t1.c1 END)))) ORDER BY ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY, ((CAST(rt0.c0 AS NUMERIC)) BETWEEN ((t1.c1 IN ())) AND (((rt0.c4) NOT BETWEEN ('0.41119790886244745') AND (t1.c1))))  NULLS FIRST, CAST(((((t1.c1)AND(rt0.c2)))OR(t1.c0)) AS TEXT) ASC  NULLS FIRST, 0x7e2112a9;
SELECT * FROM t1 WHERE ((((((((((t1.c0)AND(x'8519')))OR(x'')))OR(t1.c0)))AND(t1.c1)) IN (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)), (t1.c0 IN ()))));
SELECT ALL * FROM t1 WHERE ((((((((((t1.c0)AND(x'8519')))OR(x'')))OR(t1.c0)))AND(t1.c1)) IN (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)), (t1.c0 IN ())))) ORDER BY (((t1.c1))<((t1.c1))) COLLATE NOCASE  NULLS LAST LIMIT 0X1;
SELECT * FROM t1 WHERE ((((((((((t1.c0)AND(x'8519')))OR(x'')))OR(t1.c0)))AND(t1.c1)) IN (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)), (t1.c0 IN ()))));
SELECT ALL * FROM t1 WHERE ((((((((((t1.c0)AND(x'8519')))OR(x'')))OR(t1.c0)))AND(t1.c1)) IN (((((((t1.c0)AND(t1.c0)))AND(t1.c1)))OR(t1.c0)), (t1.c0 IN ())))) ORDER BY (((t1.c1))<((t1.c1))) COLLATE NOCASE  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM rt0, t1 WHERE ((((rt0.c1 IN (rt0.c0))) NOT BETWEEN (((rt0.c0)LIKE(t1.c1))) AND (CASE WHEN rt0.c3 THEN rt0.c2 END)));
SELECT DISTINCT * FROM rt0, t1 WHERE ((((((rt0.c1 IN (rt0.c0))) NOT BETWEEN (((rt0.c0)LIKE(t1.c1))) AND (CASE WHEN rt0.c3 THEN rt0.c2 END)))AND(CAST((((rt0.c4, rt0.c3, t1.c0)) BETWEEN ((rt0.c3, t1.c1, rt0.c2)) AND (('941773689', rt0.c2, rt0.c3))) AS INTEGER)))) INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE (((((((((0X42531b7f)%(rt0.c4)))AND((((t1.c0, rt0.c2, rt0.c1))>=((rt0.c0, rt0.c0, rt0.c0))))))AND(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c1)))));
SELECT ALL * FROM rt0, t1 WHERE ((((rt0.c1 IN (rt0.c0))) NOT BETWEEN (((rt0.c0)LIKE(t1.c1))) AND (CASE WHEN rt0.c3 THEN rt0.c2 END)));
SELECT DISTINCT * FROM rt0, t1 WHERE ((((((rt0.c1 IN (rt0.c0))) NOT BETWEEN (((rt0.c0)LIKE(t1.c1))) AND (CASE WHEN rt0.c3 THEN rt0.c2 END)))AND(CAST((((rt0.c4, rt0.c3, t1.c0)) BETWEEN ((rt0.c3, t1.c1, rt0.c2)) AND (('941773689', rt0.c2, rt0.c3))) AS INTEGER)))) INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE (((((((((0X42531b7f)%(rt0.c4)))AND((((t1.c0, rt0.c2, rt0.c1))>=((rt0.c0, rt0.c0, rt0.c0))))))AND(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c1)))));
SELECT COUNT(*) FROM rt0, t1 WHERE (((t1.c0) ISNULL)) ORDER BY ((0.06072699992822117 COLLATE BINARY)AND(rt0.c3)) ASC, (t1.c1 IN (rt0.c0)) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0, t1 WHERE (((((t1.c0) ISNULL))AND((((((t1.c1, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c2)) AND ((t1.c1, t1.c0))))IS(rt0.c0 COLLATE NOCASE))))) ORDER BY NULL ASC, (((rt0.c1 COLLATE NOCASE, (rt0.c2 IN ())))<((CASE WHEN rt0.c2 THEN t1.c1 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN t1.c0 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c1 THEN t1.c1 END, ((rt0.c2) BETWEEN (t1.c1) AND (rt0.c2))))) ASC  NULLS FIRST LIMIT 3 INTERSECT SELECT COUNT(*) FROM rt0, t1 WHERE (((LIKELIHOOD(DISTINCT t1.c0, rt0.c0))AND((((rt0.c3, rt0.c4, x''))<=((t1.c1, rt0.c0, t1.c1)))))) ORDER BY NULL ASC, (((rt0.c1 COLLATE NOCASE, (rt0.c2 IN ())))<((CASE WHEN rt0.c2 THEN t1.c1 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN t1.c0 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c1 THEN t1.c1 END, ((rt0.c2) BETWEEN (t1.c1) AND (rt0.c2))))) ASC  NULLS FIRST LIMIT 3;
SELECT * FROM t1 WHERE (x'd074');
SELECT DISTINCT * FROM t1 WHERE (((x'd074')AND(((((t1.c0)OR(t1.c0)))OR(t1.c1)) COLLATE BINARY)));
SELECT * FROM t1 WHERE (x'd074');
SELECT DISTINCT * FROM t1 WHERE (((x'd074')AND(((((t1.c0)OR(t1.c0)))OR(t1.c1)) COLLATE BINARY)));
SELECT MIN(rt0.c4) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END) NOT BETWEEN (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0))) AND (CAST(rt0.c0 AS BLOB)))) ORDER BY CAST(rt0.c2 AS BLOB) COLLATE RTRIM DESC  NULLS FIRST;
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END) NOT BETWEEN (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0))) AND (CAST(rt0.c0 AS BLOB)))) ORDER BY CAST(rt0.c2 AS BLOB) COLLATE RTRIM DESC  NULLS FIRST LIMIT 0X0;
SELECT * FROM t1, rt0 WHERE (((((rt0.c4)AND(CASE rt0.c4  WHEN t1.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN t1.c1 THEN rt0.c0 WHEN rt0.c4 THEN '72075094' ELSE rt0.c3 END)))AND((((rt0.c3))>=((rt0.c3)))))) ORDER BY COALESCE(DISTINCT (((t1.c1)) BETWEEN ((x'bf')) AND ((rt0.c4))), NULL, CAST(t1.c1 AS REAL), highlight(rt0.c1, t1.c0, rt0.c2, rt0.c4)) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1, rt0 WHERE (((((((rt0.c4)AND(CASE rt0.c4  WHEN t1.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN t1.c1 THEN rt0.c0 WHEN rt0.c4 THEN '72075094' ELSE rt0.c3 END)))AND((((rt0.c3))>=((rt0.c3))))))AND((0.10439206143038415 IN (rt0.c2, t1.c1)) COLLATE RTRIM))) ORDER BY ((rt0.c1) IS TRUE)  NULLS LAST, ((((~ (x'82')), '1368021721', rt0.c0, ((t1.c1)GLOB(rt0.c2))))>=((rt0.c0, ((rt0.c2)LIKE(rt0.c1)), (~ (rt0.c3)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t1.c1 THEN rt0.c0 ELSE 0x35577ee3 END))) DESC  NULLS LAST LIMIT 0X3;
SELECT * FROM t1, rt0 WHERE (((((rt0.c4)AND(CASE rt0.c4  WHEN t1.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN t1.c1 THEN rt0.c0 WHEN rt0.c4 THEN '72075094' ELSE rt0.c3 END)))AND((((rt0.c3))>=((rt0.c3)))))) ORDER BY COALESCE(DISTINCT (((t1.c1)) BETWEEN ((x'bf')) AND ((rt0.c4))), NULL, CAST(t1.c1 AS REAL), highlight(rt0.c1, t1.c0, rt0.c2, rt0.c4)) DESC  NULLS LAST;
SELECT * FROM t1 NATURAL JOIN rt0 WHERE (rt0.c2) ORDER BY (((t1.c1)) NOT BETWEEN (('588115614')) AND ((1003847261)))  NULLS LAST, ((CAST(rt0.c2 AS BLOB))IS NOT(rt0.c3 COLLATE RTRIM)) DESC;
SELECT DISTINCT * FROM t1 NATURAL JOIN rt0 WHERE (rt0.c2) ORDER BY (((t1.c1)) NOT BETWEEN (('588115614')) AND ((0x3bd57e5d)))  NULLS LAST, ((CAST(rt0.c2 AS BLOB))IS NOT(rt0.c3 COLLATE RTRIM)) DESC LIMIT 1;
SELECT * FROM t1 NATURAL JOIN rt0 WHERE (rt0.c2) ORDER BY (((t1.c1)) NOT BETWEEN (('588115614')) AND ((1003847261)))  NULLS LAST, ((CAST(rt0.c2 AS BLOB))IS NOT(rt0.c3 COLLATE RTRIM)) DESC;
SELECT DISTINCT * FROM t1 NATURAL JOIN rt0 WHERE (rt0.c2) ORDER BY (((t1.c1)) NOT BETWEEN (('588115614')) AND ((0x3bd57e5d)))  NULLS LAST, ((CAST(rt0.c2 AS BLOB))IS NOT(rt0.c3 COLLATE RTRIM)) DESC LIMIT 1;
SELECT ALL * FROM rt0 WHERE (((rt0.c3) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' END) AND (rt0.c1 COLLATE NOCASE)));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' END) AND (rt0.c1 COLLATE NOCASE)))AND(ABS(rt0.c2) COLLATE BINARY))) ORDER BY CAST(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN '0.025253342646652355' ELSE rt0.c1 END AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c3) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' END) AND (rt0.c1 COLLATE NOCASE)));
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' END) AND (rt0.c1 COLLATE NOCASE)))AND(ABS(rt0.c2) COLLATE BINARY))) ORDER BY CAST(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN '0.025253342646652355' ELSE rt0.c1 END AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL MAX(rt0.c0) FROM t1, rt0 WHERE (HEX(CAST(t1.c0 AS NUMERIC))) ORDER BY CAST(((t1.c0) IS FALSE) AS BLOB), ((((json_array_length(t1.c1))AND(NULL)))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE 0.9178574918430303 END))  NULLS LAST, ((((rt0.c2)==(rt0.c2))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))) AND (rt0.c4 COLLATE RTRIM)) ASC;
SELECT MAX(rt0.c0) FROM t1, rt0 WHERE (((HEX(CAST(t1.c0 AS NUMERIC)))AND(((((((rt0.c2 COLLATE BINARY)AND(t1.c0 COLLATE RTRIM)))AND(LIKELIHOOD(DISTINCT rt0.c3, rt0.c0))))AND(CASE rt0.c0  WHEN rt0.c2 THEN t1.c1 WHEN rt0.c4 THEN rt0.c1 END))))) ORDER BY CAST(((t1.c0) IS FALSE) AS BLOB), ((((json_array_length(t1.c1))AND(NULL)))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE 0.9178574918430303 END))  NULLS LAST, ((((rt0.c2)==(rt0.c2))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))) AND (rt0.c4 COLLATE RTRIM)) ASC LIMIT 1 INTERSECT SELECT ALL MAX(rt0.c0) FROM t1, rt0 WHERE (x'92' COLLATE NOCASE) ORDER BY CAST(((t1.c0) IS FALSE) AS BLOB), ((((json_array_length(t1.c1))AND(NULL)))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE 0.9178574918430303 END))  NULLS LAST, ((((rt0.c2)==(rt0.c2))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))) AND (rt0.c4 COLLATE RTRIM)) ASC LIMIT 1;
SELECT ALL * FROM t1, rt0 WHERE ((('{}') BETWEEN (UNICODE(rt0.c4)) AND (CASE WHEN t1.c0 THEN rt0.c4 WHEN rt0.c2 THEN NULL ELSE t1.c0 END)));
SELECT ALL * FROM t1, rt0 WHERE ((((('{}') BETWEEN (UNICODE(rt0.c4)) AND (CASE WHEN t1.c0 THEN rt0.c4 WHEN rt0.c2 THEN NULL ELSE t1.c0 END)))AND((((((((((t1.c1)AND(x'')))AND(t1.c0)))AND(rt0.c1)))AND(rt0.c1)) IN (((t1.c0)AND(t1.c1))))))) ORDER BY rt0.c0  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM t1, rt0 WHERE ((((json_insert(rt0.c3, rt0.c2, t1.c0, rt0.c2, x'4ce1')))<>(((((rt0.c0, rt0.c2, rt0.c0, rt0.c0))>=((rt0.c3, rt0.c4, t1.c1, rt0.c1))))))) ORDER BY rt0.c0  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t1, rt0 WHERE ((('{}') BETWEEN (UNICODE(rt0.c4)) AND (CASE WHEN t1.c0 THEN rt0.c4 WHEN rt0.c2 THEN NULL ELSE t1.c0 END)));
SELECT ALL * FROM t1, rt0 WHERE ((((('{}') BETWEEN (UNICODE(rt0.c4)) AND (CASE WHEN t1.c0 THEN rt0.c4 WHEN rt0.c2 THEN NULL ELSE t1.c0 END)))AND((((((((((t1.c1)AND(x'')))AND(t1.c0)))AND(rt0.c1)))AND(rt0.c1)) IN (((t1.c0)AND(t1.c1))))))) ORDER BY rt0.c0  NULLS LAST LIMIT 1 INTERSECT SELECT ALL * FROM t1, rt0 WHERE ((((json_insert(rt0.c3, rt0.c2, t1.c0, rt0.c2, x'4ce1')))<>(((((rt0.c0, rt0.c2, rt0.c0, rt0.c0))>=((rt0.c3, rt0.c4, t1.c1, rt0.c1))))))) ORDER BY rt0.c0  NULLS LAST LIMIT 0X1;
SELECT * FROM rt0, t1 WHERE (NULL) ORDER BY (+ (7.06435165E8));
SELECT ALL * FROM rt0, t1 WHERE (NULL) ORDER BY (~ (CAST(t1.c1 AS TEXT))), ((CASE 0.3414121881189387  WHEN rt0.c4 THEN t1.c1 ELSE t1.c1 END)/(((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c4)))AND(t1.c1)))OR(rt0.c4)))OR('2024476669')))OR(rt0.c3)))) ASC  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM rt0, t1 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE) ORDER BY (~ (CAST(t1.c1 AS TEXT))), ((CASE 0.3414121881189387  WHEN rt0.c4 THEN t1.c1 ELSE t1.c1 END)/(((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c4)))AND(t1.c1)))OR(rt0.c4)))OR('2024476669')))OR(rt0.c3)))) ASC  NULLS LAST LIMIT 0x2;
SELECT * FROM rt0, t1 WHERE (NULL) ORDER BY (+ (7.06435165E8));
SELECT ALL * FROM rt0, t1 WHERE (NULL) ORDER BY (~ (CAST(t1.c1 AS TEXT))), ((CASE 0.3414121881189387  WHEN rt0.c4 THEN t1.c1 ELSE t1.c1 END)/(((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c4)))AND(t1.c1)))OR(rt0.c4)))OR('2024476669')))OR(rt0.c3)))) ASC  NULLS LAST LIMIT 2 INTERSECT SELECT ALL * FROM rt0, t1 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE) ORDER BY (~ (CAST(t1.c1 AS TEXT))), ((CASE 0.3414121881189387  WHEN rt0.c4 THEN t1.c1 ELSE t1.c1 END)/(((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c4)))AND(t1.c1)))OR(rt0.c4)))OR('2024476669')))OR(rt0.c3)))) ASC  NULLS LAST LIMIT 0x2;
SELECT COUNT(*) FROM rt0 INDEXED BY i43 WHERE (((CAST(rt0.c1 AS BLOB)) NOT NULL)) ORDER BY rt0.c0, ((CAST(rt0.c3 AS BLOB)) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i43 WHERE (((((CAST(rt0.c1 AS BLOB)) NOT NULL))AND((((+ (rt0.c4)))>>((((rt0.c4, rt0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c0, rt0.c1, rt0.c1))<((rt0.c1, rt0.c3, rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c3, rt0.c3)))))))) ORDER BY rt0.c0, ((CAST(rt0.c3 AS BLOB)) NOT NULL) DESC LIMIT 0x0;
SELECT MAX(rt0.c1) FROM rt0 INDEXED BY i43 WHERE ((((rt0.c1)) BETWEEN ((UPPER(rt0.c0))) AND ((((rt0.c1) IS FALSE)))));
SELECT DISTINCT MAX(rt0.c1) FROM rt0 INDEXED BY i43 WHERE ((((rt0.c1)) BETWEEN ((UPPER(rt0.c0))) AND ((((rt0.c1) IS FALSE))))) LIMIT 1;
SELECT MAX(rt0.c4) FROM t1, rt0 WHERE (CAST(rt0.c0 AS TEXT)) ORDER BY ((rt0.c2) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN t1.c1 WHEN t1.c0 THEN '2144449229' WHEN rt0.c0 THEN rt0.c1 END) AND ((- (rt0.c0)))) ASC, ((CAST(rt0.c4 AS BLOB))>(CAST(t1.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c4) FROM t1, rt0 WHERE (((CAST(rt0.c0 AS TEXT))AND(SQLITE_VERSION()))) ORDER BY CAST((rt0.c4 IN (rt0.c4)) AS TEXT) DESC, '';
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c3)) COLLATE RTRIM) ORDER BY ((TYPEOF(rt0.c3))=(rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c3)) COLLATE RTRIM) ORDER BY ((TYPEOF(rt0.c3))=(rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c3)) COLLATE RTRIM) ORDER BY ((TYPEOF(rt0.c3))=(rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c3)) COLLATE RTRIM) ORDER BY ((TYPEOF(rt0.c3))=(rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((NOT (rt0.c3)))%(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT * FROM rt0 WHERE ((((((NOT (rt0.c3)))%(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))))AND((((- (rt0.c1)))>('.緌'))))) ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT NULL) ASC, CAST(((rt0.c2) ISNULL) AS NUMERIC)  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)))AND(((rt0.c0)>>(rt0.c1))))) ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT NULL) ASC, CAST(((rt0.c2) ISNULL) AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((NOT (rt0.c3)))%(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT * FROM rt0 WHERE ((((((NOT (rt0.c3)))%(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))))AND((((- (rt0.c1)))>('.緌'))))) ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT NULL) ASC, CAST(((rt0.c2) ISNULL) AS NUMERIC)  NULLS FIRST INTERSECT SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)))AND(((rt0.c0)>>(rt0.c1))))) ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT NULL) ASC, CAST(((rt0.c2) ISNULL) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM rt0, t1 WHERE (COALESCE(rt0.c0 COLLATE BINARY, ((rt0.c4) BETWEEN (rt0.c2) AND (0.08799569086659043)), rt0.c3)) ORDER BY CAST(CASE t1.c1  WHEN 'h' THEN rt0.c4 WHEN rt0.c3 THEN t1.c1 WHEN rt0.c2 THEN t1.c0 ELSE rt0.c0 END AS BLOB) ASC  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE (((COALESCE(rt0.c0 COLLATE BINARY, ((rt0.c4) BETWEEN (rt0.c2) AND (0.08799569086659043)), rt0.c3))AND(((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))||(t1.c1 COLLATE NOCASE))))) ORDER BY ((CAST(rt0.c3 AS NUMERIC)) NOT NULL), (((((((((((t1.c0, rt0.c2, rt0.c4))<((NULL, rt0.c1, rt0.c0))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))))OR(COALESCE(DISTINCT rt0.c4, rt0.c1, rt0.c2))))OR(((t1.c1)LIKE(t1.c1)))) DESC LIMIT 0X0;
SELECT ALL * FROM rt0, t1 WHERE (COALESCE(rt0.c0 COLLATE BINARY, ((rt0.c4) BETWEEN (rt0.c2) AND (0.08799569086659043)), rt0.c3)) ORDER BY CAST(CASE t1.c1  WHEN 'h' THEN rt0.c4 WHEN rt0.c3 THEN t1.c1 WHEN rt0.c2 THEN t1.c0 ELSE rt0.c0 END AS BLOB) ASC  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE (((COALESCE(rt0.c0 COLLATE BINARY, ((rt0.c4) BETWEEN (rt0.c2) AND (0.08799569086659043)), rt0.c3))AND(((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))||(t1.c1 COLLATE NOCASE))))) ORDER BY ((CAST(rt0.c3 AS NUMERIC)) NOT NULL), (((((((((((t1.c0, rt0.c2, rt0.c4))<((NULL, rt0.c1, rt0.c0))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))))OR(COALESCE(DISTINCT rt0.c4, rt0.c1, rt0.c2))))OR(((t1.c1)LIKE(t1.c1)))) DESC LIMIT 0X0;
SELECT * FROM rt0 WHERE (CASE ((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))  WHEN ((rt0.c4)+(rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END END) ORDER BY (((rt0.c3)AND(rt0.c4)) IN (CAST(rt0.c0 AS INTEGER), CAST(rt0.c1 AS BLOB))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))  WHEN ((rt0.c4)+(rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END END) ORDER BY (((rt0.c3)AND(rt0.c4)) IN (CAST(rt0.c0 AS INTEGER), CAST(rt0.c1 AS BLOB))) ASC;
SELECT * FROM rt0 WHERE (CASE ((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))  WHEN ((rt0.c4)+(rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END END) ORDER BY (((rt0.c3)AND(rt0.c4)) IN (CAST(rt0.c0 AS INTEGER), CAST(rt0.c1 AS BLOB))) ASC;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))  WHEN ((rt0.c4)+(rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END END) ORDER BY (((rt0.c3)AND(rt0.c4)) IN (CAST(rt0.c0 AS INTEGER), CAST(rt0.c1 AS BLOB))) ASC;
SELECT COUNT(*) FROM rt0, t1 WHERE (LTRIM(((((t1.c1)AND(rt0.c2)))AND(t1.c1)))) ORDER BY ((((rt0.c3)/('1531730283'))) NOT BETWEEN ((- (rt0.c2))) AND ((rt0.c2 IN (rt0.c3)))), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN t1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE NULL END COLLATE NOCASE DESC;
SELECT DISTINCT COUNT(*) FROM rt0, t1 WHERE (((LTRIM(((((t1.c1)AND(rt0.c2)))AND(t1.c1))))AND(CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c1))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) THEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c3)) ELSE (+ (x'd4')) END))) ORDER BY rt0.c3, TOTAL_CHANGES() ASC LIMIT 0X0;
SELECT ALL MIN(rt0.c0) FROM rt0 NATURAL JOIN t1 WHERE (0.29706474470638633) ORDER BY (- (NULL))  NULLS FIRST, rt0.c4 ASC;
SELECT DISTINCT MIN(rt0.c0) FROM rt0 NATURAL JOIN t1 WHERE (((0.29706474470638633)AND((t1.c1 COLLATE BINARY IN (rt0.c0 COLLATE BINARY, ((((((((t1.c1)OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))AND(rt0.c4))))))) ORDER BY ((((rt0.c0)AND(rt0.c1))) NOT NULL) ASC  NULLS FIRST, ('c' IN (CASE t1.c1  WHEN rt0.c0 THEN t1.c0 ELSE t1.c1 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON (((((((t1.c1)AND(t1.c0)))OR(rt0.c4))))<=((((rt0.c4)<=(rt0.c4))))) WHERE (CASE WHEN ((rt0.c3)<<(t1.c0)) THEN ((((((((((rt0.c4)OR(rt0.c4)))AND(t1.c1)))AND(rt0.c2)))OR(t1.c1)))AND(t1.c1)) END);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON (((((((t1.c1)AND(t1.c0)))OR(rt0.c4))))<=((((rt0.c4)<=(rt0.c4))))) WHERE (((CASE WHEN ((rt0.c3)<<(t1.c0)) THEN ((((((((((rt0.c4)OR(rt0.c4)))AND(t1.c1)))AND(rt0.c2)))OR(t1.c1)))AND(t1.c1)) END)AND(((((0.6413199427468868) BETWEEN (t1.c0) AND (rt0.c4))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (x'bd') AND (rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c2 ELSE t1.c0 END))))) INTERSECT SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON (((((((t1.c1)AND(t1.c0)))OR(rt0.c4))))<=((((rt0.c4)<=(rt0.c4))))) WHERE ((((+ (rt0.c3)))IS(TRIM(DISTINCT rt0.c4))));
SELECT ALL * FROM t1, rt0 WHERE ((((((((((rt0.c1, rt0.c4))>((rt0.c2, t1.c1))))AND(((rt0.c0) NOT NULL))))AND(CAST(rt0.c4 AS NUMERIC))))AND(DATETIME(rt0.c4, x'', t1.c1))));
SELECT * FROM t1, rt0 WHERE ((((((((((rt0.c1, rt0.c4))>((rt0.c2, t1.c1))))AND(((rt0.c0) NOT NULL))))AND(CAST(rt0.c4 AS NUMERIC))))AND(DATETIME(rt0.c4, x'', t1.c1)))) ORDER BY CAST(CASE rt0.c0  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END AS TEXT) ASC  NULLS FIRST, (((TYPEOF(rt0.c2), (~ (rt0.c0)), ((rt0.c0)==(rt0.c2)), ((NULL) NOT BETWEEN (rt0.c0) AND ('')), (((rt0.c2)) BETWEEN ((0.49942750944968894)) AND ((rt0.c1)))))>((((rt0.c1) NOT NULL), (~ (rt0.c1)), ((rt0.c0) IS FALSE), (rt0.c1 IN (t1.c1, rt0.c3)), rt0.c4 COLLATE RTRIM))) DESC LIMIT 0X0;
SELECT ALL * FROM t1, rt0 WHERE ((((((((((rt0.c1, rt0.c4))>((rt0.c2, t1.c1))))AND(((rt0.c0) NOT NULL))))AND(CAST(rt0.c4 AS NUMERIC))))AND(DATETIME(rt0.c4, x'', t1.c1))));
SELECT * FROM t1, rt0 WHERE ((((((((((rt0.c1, rt0.c4))>((rt0.c2, t1.c1))))AND(((rt0.c0) NOT NULL))))AND(CAST(rt0.c4 AS NUMERIC))))AND(DATETIME(rt0.c4, x'', t1.c1)))) ORDER BY CAST(CASE rt0.c0  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END AS TEXT) ASC  NULLS FIRST, (((TYPEOF(rt0.c2), (~ (rt0.c0)), ((rt0.c0)==(rt0.c2)), ((NULL) NOT BETWEEN (rt0.c0) AND ('')), (((rt0.c2)) BETWEEN ((0.49942750944968894)) AND ((rt0.c1)))))>((((rt0.c1) NOT NULL), (~ (rt0.c1)), ((rt0.c0) IS FALSE), (rt0.c1 IN (t1.c1, rt0.c3)), rt0.c4 COLLATE RTRIM))) DESC LIMIT 0X0;
SELECT MAX(rt0.c1) FROM rt0 WHERE (((0.9993278173992819) NOT BETWEEN (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c4))) AND ((NOT (rt0.c4))))) ORDER BY ((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(NULL))) NOTNULL) ASC  NULLS FIRST, rt0.c0, (((rt0.c1 IN ()))GLOB(CAST(rt0.c2 AS REAL)));
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (((0.9993278173992819) NOT BETWEEN (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c4))) AND ((NOT (rt0.c4))))) ORDER BY (~ (1415943340))  NULLS FIRST INTERSECT SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE (CAST(((0.03434502172087839)==(rt0.c2)) AS TEXT)) ORDER BY (~ (0x546594ac))  NULLS FIRST;
SELECT MIN(rt0.c1) FROM rt0 INNER JOIN t1 ON (((((t1.c1)OR(t1.c1)))OR(rt0.c2)) IN (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) WHERE ((((((((rt0.c0))<>((rt0.c1))))AND(rt0.c1 COLLATE NOCASE)))AND(TRIM(DISTINCT t1.c0))));
SELECT DISTINCT MIN(rt0.c1) FROM rt0 INNER JOIN t1 ON (((((t1.c1)OR(t1.c1)))OR(rt0.c2)) IN (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))) WHERE ((((((((((rt0.c0))<>((rt0.c1))))AND(rt0.c1 COLLATE NOCASE)))AND(TRIM(DISTINCT t1.c0))))AND((((rt0.c0)) NOT BETWEEN ((CAST(t1.c1 AS NUMERIC))) AND (((NOT (t1.c1)))))))) LIMIT 2;
SELECT ALL MAX(rt0.c2) FROM rt0 WHERE ((((((((- (rt0.c3)))OR((rt0.c4 IN (rt0.c3)))))OR(((rt0.c4)>=(rt0.c2)))))OR((((rt0.c2, rt0.c3, rt0.c4))<((rt0.c4, '', rt0.c0))))));
SELECT DISTINCT MAX(rt0.c2) FROM rt0 WHERE ((((((((- (rt0.c3)))OR((rt0.c4 IN (rt0.c3)))))OR(((rt0.c4)>(rt0.c2)))))OR((((rt0.c2, rt0.c3, rt0.c4))<((rt0.c4, '', rt0.c0))))));
SELECT MIN(rt0.c1) FROM t1 INNER JOIN rt0 ON (((('-1654461442')-(rt0.c4)))LIKE(CAST(rt0.c4 AS NUMERIC))) WHERE ((CHANGES() IN (((t1.c1)<=(rt0.c3)))));
SELECT DISTINCT MIN(rt0.c1) FROM t1 INNER JOIN rt0 ON (((('-1654461442')-(rt0.c4)))LIKE(CAST(rt0.c4 AS NUMERIC))) WHERE ((((CHANGES() IN (((t1.c1)==(rt0.c3)))))AND((((((rt0.c4, rt0.c1, rt0.c4, NULL)) NOT BETWEEN ((rt0.c3, rt0.c4, t1.c0, t1.c1)) AND ((rt0.c3, rt0.c2, rt0.c3, rt0.c2))))&(x''))))) LIMIT 1 INTERSECT SELECT DISTINCT MIN(rt0.c1) FROM t1 INNER JOIN rt0 ON (((('-1654461442')-(rt0.c4)))LIKE(CAST(rt0.c4 AS NUMERIC))) WHERE ((rt0.c3 IN (((rt0.c2) BETWEEN (t1.c1) AND (rt0.c0))))) LIMIT 1;
SELECT ALL MAX(rt0.c1) FROM rt0, t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (t1.c1)), TRIM(rt0.c3))) AND (((+ (rt0.c0)), (+ (rt0.c3)))))) ORDER BY ((CAST(rt0.c4 AS REAL))==(((x'2608') NOT BETWEEN (rt0.c2) AND (rt0.c4)))) ASC  NULLS FIRST;
SELECT DISTINCT MAX(rt0.c1) FROM rt0, t1 WHERE ((((t1.c0, t1.c1)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (t1.c1)), TRIM(rt0.c3))) AND (((+ (rt0.c0)), (+ (rt0.c3)))))) ORDER BY (((((((rt0.c0 IN (t1.c0)))AND(CASE WHEN rt0.c1 THEN t1.c1 END)))AND(CAST(t1.c1 AS NUMERIC))))AND((t1.c1 IN (rt0.c3)))) ASC, ((t1.c1)>=(t1.c0)) COLLATE NOCASE DESC  NULLS LAST LIMIT 0x3;
SELECT MIN(t1.c1) FROM t1 WHERE (((((t1.c1) IS FALSE))!=(TRIM(t1.c0)))) ORDER BY ((CAST(t1.c1 AS INTEGER)) BETWEEN ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c1)))) AND (UPPER(t1.c0))), ((((t1.c0)+(t1.c1)))AND(((t1.c1)/(t1.c0))))  NULLS FIRST;
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((((t1.c1) IS FALSE))!=(TRIM(t1.c0)))) ORDER BY ((CAST(t1.c1 AS INTEGER)) BETWEEN ((((t1.c0, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1)) AND ((t1.c1, t1.c1)))) AND (UPPER(t1.c0))), ((((t1.c0)+(t1.c1)))AND(((t1.c1)/(t1.c0))))  NULLS FIRST LIMIT 0;
SELECT * FROM rt0 WHERE ((TRIM(DISTINCT rt0.c0) IN ((((rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2)) AND ((rt0.c0, rt0.c0))))));
SELECT * FROM rt0 WHERE ((((TRIM(DISTINCT rt0.c0) IN ((((rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2)) AND ((rt0.c0, rt0.c0))))))AND((((rt0.c4)>>(rt0.c3)) IN (rt0.c3 COLLATE BINARY))))) LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE ('8[['']bGNI') LIMIT 0;
SELECT * FROM rt0 WHERE ((TRIM(DISTINCT rt0.c0) IN ((((rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2)) AND ((rt0.c0, rt0.c0))))));
SELECT * FROM rt0 WHERE ((((TRIM(DISTINCT rt0.c0) IN ((((rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2)) AND ((rt0.c0, rt0.c0))))))AND((((rt0.c4)>>(rt0.c3)) IN (rt0.c3 COLLATE BINARY))))) LIMIT 0 INTERSECT SELECT * FROM rt0 WHERE ('8[['']bGNI') LIMIT 0;
SELECT MIN(t1.c1) FROM rt0, t1 WHERE ((((((rt0.c0))<((rt0.c3))))AND((rt0.c1 IN (rt0.c4)))));
SELECT DISTINCT MIN(t1.c1) FROM rt0, t1 WHERE ((((((rt0.c0))<((rt0.c3))))AND((rt0.c1 IN (rt0.c4))))) ORDER BY (CAST(rt0.c0 AS TEXT) IN (((rt0.c1) BETWEEN (rt0.c3) AND (t1.c1))))  NULLS FIRST, ((((((rt0.c0)OR(t1.c1)))OR(rt0.c2)))<(((rt0.c2) ISNULL))), ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE DESC  NULLS FIRST INTERSECT SELECT DISTINCT MIN(t1.c1) FROM rt0, t1 WHERE (((((rt0.c2) IS TRUE)) NOT BETWEEN (load_extension(rt0.c1, rt0.c2)) AND ('-718473187' COLLATE RTRIM))) ORDER BY (CAST(rt0.c0 AS TEXT) IN (((rt0.c1) BETWEEN (rt0.c3) AND (t1.c1))))  NULLS FIRST, ((((((rt0.c0)OR(t1.c1)))OR(rt0.c2)))<(((rt0.c2) ISNULL))), ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4)+(rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4)+(rt0.c1)) AS NUMERIC)) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c0 END) IS TRUE) DESC  NULLS FIRST;
SELECT MIN(t1.c0) FROM t1 WHERE (((((((((NULL)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))-(((t1.c0) IS FALSE))));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE (((((((((NULL)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))-(((t1.c0) IS FALSE)))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) BETWEEN (((t1.c1) IS FALSE)) AND (t1.c1 COLLATE BINARY)), t1.c1;
SELECT COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE (((NULL)GLOB((('gM'')LpI') NOTNULL)))) ORDER BY (('SLV#E^<e㊆') BETWEEN ((((t1.c0))>=((rt0.c1)))) AND ((~ (rt0.c2)))) ASC  NULLS FIRST, ((CAST(rt0.c3 AS INTEGER))<>(((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c4)))) ASC, (((x'' COLLATE NOCASE))<((CAST(rt0.c2 AS NUMERIC)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE (((NULL)GLOB((('gM'')LpI') NOTNULL)))) ORDER BY (('SLV#E^<e㊆') BETWEEN ((((t1.c0))>=((rt0.c1)))) AND ((~ (rt0.c2)))) ASC  NULLS FIRST, ((CAST(rt0.c3 AS INTEGER))<>(((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c4)))) ASC, (((x'' COLLATE NOCASE))<((CAST(rt0.c2 AS NUMERIC)))) DESC  NULLS LAST;
SELECT ALL MIN(rt0.c0) FROM rt0, t1 WHERE ((((+ (rt0.c4)))<<((('-917186638')<=(t1.c1)))));
SELECT MIN(rt0.c0) FROM rt0, t1 WHERE ((((+ (rt0.c4)))<<((('-917186638')<=(t1.c1))))) ORDER BY CASE WHEN '' THEN (rt0.c0 IN (rt0.c4)) WHEN ((rt0.c4) ISNULL) THEN ((rt0.c4) NOT BETWEEN (t1.c0) AND (rt0.c2)) WHEN (((rt0.c0, t1.c1, t1.c0)) NOT BETWEEN ((rt0.c4, t1.c1, 0.836896088261858)) AND ((t1.c0, t1.c1, rt0.c4))) THEN ((rt0.c2)||(t1.c0)) ELSE t1.c0 END DESC  NULLS LAST, ((((t1.c0, t1.c0, rt0.c3)) BETWEEN (('779773002', rt0.c2, t1.c0)) AND ((t1.c0, t1.c1, 329591580))) IN ()) DESC  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL MIN(rt0.c0) FROM rt0, t1 WHERE (LENGTH((- (rt0.c4)))) ORDER BY CASE WHEN '' THEN (rt0.c0 IN (rt0.c4)) WHEN ((rt0.c4) ISNULL) THEN ((rt0.c4) NOT BETWEEN (t1.c0) AND (rt0.c2)) WHEN (((rt0.c0, t1.c1, t1.c0)) NOT BETWEEN ((rt0.c4, t1.c1, 0.836896088261858)) AND ((t1.c0, t1.c1, rt0.c4))) THEN ((rt0.c2)||(t1.c0)) ELSE t1.c0 END DESC  NULLS LAST, ((((t1.c0, t1.c0, rt0.c3)) BETWEEN (('779773002', rt0.c2, t1.c0)) AND ((t1.c0, t1.c1, 0X13a52b1c))) IN ()) DESC  NULLS LAST LIMIT 0;
SELECT ALL MIN(rt0.c1) FROM t1 INNER JOIN rt0 ON ((t1.c1) NOT BETWEEN ((+ (t1.c1))) AND (rt0.c2 COLLATE BINARY)) WHERE (IFNULL(DISTINCT rt0.c1, t1.c0) COLLATE RTRIM);
SELECT DISTINCT MIN(rt0.c1) FROM t1 INNER JOIN rt0 ON ((t1.c1) NOT BETWEEN ((+ (t1.c1))) AND (rt0.c2 COLLATE BINARY)) WHERE (IFNULL(DISTINCT rt0.c1, t1.c0) COLLATE RTRIM) ORDER BY CAST(IFNULL(rt0.c4, rt0.c0) AS TEXT)  NULLS LAST INTERSECT SELECT DISTINCT MIN(rt0.c1) FROM t1 INNER JOIN rt0 ON ((t1.c1) NOT BETWEEN ((+ (t1.c1))) AND (rt0.c2 COLLATE BINARY)) WHERE ('4菮Wl5') ORDER BY CAST(IFNULL(rt0.c4, rt0.c0) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((rt0.c1 IN (rt0.c4))))) ORDER BY (NOT ((((rt0.c4, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c3, NULL))))) DESC  NULLS LAST, ((((((((rt0.c3 COLLATE BINARY)OR((~ (rt0.c3)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))AND(CAST(rt0.c1 AS REAL))))OR(((((((NULL)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c2))))  NULLS FIRST, (NOT (((rt0.c1) ISNULL)));
SELECT COUNT(*) FROM rt0 WHERE ((((~ ((rt0.c1 IN (rt0.c4)))))AND(LIKE(((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)), (((rt0.c1, rt0.c0, rt0.c3, x'38')) BETWEEN ((rt0.c3, rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c0, rt0.c2))))))) ORDER BY rt0.c1, CASE IFNULL(DISTINCT '1721401258', rt0.c1)  WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) BETWEEN (rt0.c1) AND ('-296861236')) ELSE ((rt0.c4)LIKE(rt0.c1)) END LIMIT 1;
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c3 AS REAL), (+ (rt0.c1))));
SELECT ALL * FROM rt0 WHERE (((LIKELIHOOD(DISTINCT CAST(rt0.c3 AS REAL), (+ (rt0.c1))))AND((((rt0.c0 IN (rt0.c3)))|(((rt0.c1) IS FALSE)))))) LIMIT 1;
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c3 AS REAL), (+ (rt0.c1))));
SELECT * FROM rt0 WHERE ((- (((NULL) IS TRUE)))) ORDER BY ((((((rt0.c2 COLLATE BINARY)OR(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR((- (rt0.c1)))))AND((((rt0.c4, rt0.c4, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND ((NULL, rt0.c3, x'82'))))) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((- (((NULL) IS TRUE))))AND(CASE (NOT (rt0.c2))  WHEN CAST(rt0.c4 AS INTEGER) THEN ((rt0.c2)%(rt0.c0)) WHEN (NOT (rt0.c0)) THEN rt0.c4 END))) ORDER BY ((((((rt0.c2 COLLATE BINARY)OR(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR((- (rt0.c1)))))AND((((rt0.c4, rt0.c4, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND ((NULL, rt0.c3, x'82'))))) ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((+ (((rt0.c0) NOTNULL)))) ORDER BY ((((((rt0.c2 COLLATE BINARY)OR(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR((- (rt0.c1)))))AND((((rt0.c4, rt0.c4, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND ((NULL, rt0.c3, x'82'))))) ASC;
SELECT * FROM rt0 WHERE ((- (((NULL) IS TRUE)))) ORDER BY ((((((rt0.c2 COLLATE BINARY)OR(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR((- (rt0.c1)))))AND((((rt0.c4, rt0.c4, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND ((NULL, rt0.c3, x'82'))))) ASC;
SELECT DISTINCT * FROM rt0 WHERE ((((- (((NULL) IS TRUE))))AND(CASE (NOT (rt0.c2))  WHEN CAST(rt0.c4 AS INTEGER) THEN ((rt0.c2)%(rt0.c0)) WHEN (NOT (rt0.c0)) THEN rt0.c4 END))) ORDER BY ((((((rt0.c2 COLLATE BINARY)OR(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR((- (rt0.c1)))))AND((((rt0.c4, rt0.c4, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND ((NULL, rt0.c3, x'82'))))) ASC INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((+ (((rt0.c0) NOTNULL)))) ORDER BY ((((((rt0.c2 COLLATE BINARY)OR(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR((- (rt0.c1)))))AND((((rt0.c4, rt0.c4, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND ((NULL, rt0.c3, x'82'))))) ASC;
SELECT ALL * FROM rt0 CROSS JOIN t1 ON (((((rt0.c4, rt0.c4)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c2)))) BETWEEN (((t1.c0) NOT NULL)) AND (ABS(DISTINCT t1.c1))) WHERE (CASE WHEN '2116096681' THEN (rt0.c0 IN ()) END);
SELECT ALL * FROM rt0 CROSS JOIN t1 ON (((((rt0.c4, rt0.c4)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c2)))) BETWEEN (((t1.c0) NOT NULL)) AND (ABS(DISTINCT t1.c1))) WHERE (((CASE WHEN '2116096681' THEN (rt0.c0 IN ()) END)AND(t1.c1))) ORDER BY rt0.c4 DESC, ((rt0.c2)LIKE((~ (rt0.c0))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt0 CROSS JOIN t1 ON (((((rt0.c4, rt0.c4)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c2)))) BETWEEN (((t1.c0) NOT NULL)) AND (ABS(DISTINCT t1.c1))) WHERE (CASE WHEN '2116096681' THEN (rt0.c0 IN ()) END);
SELECT ALL * FROM rt0 CROSS JOIN t1 ON (((((rt0.c4, rt0.c4)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c2)))) BETWEEN (((t1.c0) NOT NULL)) AND (ABS(DISTINCT t1.c1))) WHERE (((CASE WHEN '2116096681' THEN (rt0.c0 IN ()) END)AND(t1.c1))) ORDER BY rt0.c4 DESC, ((rt0.c2)LIKE((~ (rt0.c0))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE (IFNULL(DISTINCT rt0.c1 COLLATE BINARY, rt0.c0)) ORDER BY (((- (t1.c1)))||(x'5d596a'));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE (IFNULL(DISTINCT rt0.c1 COLLATE BINARY, rt0.c0)) ORDER BY (((- (t1.c1)))||(x'5d596a'));
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE (IFNULL(DISTINCT rt0.c1 COLLATE BINARY, rt0.c0)) ORDER BY (((- (t1.c1)))||(x'5d596a'));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE (IFNULL(DISTINCT rt0.c1 COLLATE BINARY, rt0.c0)) ORDER BY (((- (t1.c1)))||(x'5d596a'));
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c4)))) NOT BETWEEN (((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))) AND (rt0.c1)));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c4)))) NOT BETWEEN (((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))) AND (rt0.c1)))AND((((UPPER(DISTINCT NULL), (~ (rt0.c0)), rt0.c1 COLLATE RTRIM, CASE WHEN rt0.c1 THEN rt0.c3 END))<>((rt0.c2 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c1) ISNULL), ((-806314033)IS(0xffffffffc5cbe848)))))))) INTERSECT SELECT * FROM rt0 WHERE ((- ((~ (NULL)))));
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c4)))) NOT BETWEEN (((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))) AND (rt0.c1)));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c4)))) NOT BETWEEN (((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))) AND (rt0.c1)))AND((((UPPER(DISTINCT NULL), (~ (rt0.c0)), rt0.c1 COLLATE RTRIM, CASE WHEN rt0.c1 THEN rt0.c3 END))<>((rt0.c2 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c1) ISNULL), ((-806314033)IS(0xffffffffc5cbe848)))))))) INTERSECT SELECT * FROM rt0 WHERE ((- ((~ (NULL)))));
SELECT * FROM t1, rt0 WHERE (((((t1.c0)IS NOT(rt0.c2)))%(rt0.c0)));
SELECT DISTINCT * FROM t1, rt0 WHERE (((((((t1.c0)IS NOT(rt0.c2)))%(rt0.c0)))AND(('Ss볮~' IN ())))) LIMIT 0X0;
SELECT * FROM t1, rt0 WHERE (((((t1.c0)IS NOT(rt0.c2)))%(rt0.c0)));
SELECT DISTINCT * FROM t1, rt0 WHERE (((((((t1.c0)IS NOT(rt0.c2)))%(rt0.c0)))AND(('Ss볮~' IN ())))) LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE ((('-2040744728') BETWEEN (((rt0.c2) IS FALSE)) AND (((0.44218875429179894)|(NULL)))));
SELECT * FROM rt0 WHERE ((((('-2040744728') BETWEEN (((rt0.c2) IS FALSE)) AND (((0.44218875429179894)|(NULL)))))AND(rt0.c0)));
SELECT ALL * FROM rt0 WHERE ((('-2040744728') BETWEEN (((rt0.c2) IS FALSE)) AND (((0.44218875429179894)|(NULL)))));
SELECT * FROM rt0 WHERE ((((('-2040744728') BETWEEN (((rt0.c2) IS FALSE)) AND (((0.44218875429179894)|(NULL)))))AND(rt0.c0)));
SELECT COUNT(*) FROM t1 WHERE (CAST((NOT (t1.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((NOT (t1.c1)) AS NUMERIC)) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN x'a971' THEN t1.c1 ELSE t1.c0 END)LIKE(((((t1.c1)AND(t1.c1)))AND(t1.c0))))  NULLS LAST INTERSECT SELECT COUNT(*) FROM t1 WHERE ((+ (-1982441895)) COLLATE NOCASE) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN x'a971' THEN t1.c1 ELSE t1.c0 END)LIKE(((((t1.c1)AND(t1.c1)))AND(t1.c0))))  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (DATETIME(rt0.c2, CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END, rt0.c2, t1.c0)) ORDER BY ((((((((((0.6682667108172642)OR(((rt0.c3) IS FALSE))))AND(((rt0.c0) NOT NULL))))AND(((((((rt0.c2)OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))))AND(((rt0.c1)>=(rt0.c4)))))AND(((rt0.c4)<=(0.2829735183396057)))) ASC  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE (((DATETIME(rt0.c2, CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END, rt0.c2, t1.c0))AND(((t1.c1) NOT NULL)))) ORDER BY (~ (((((rt0.c4)OR(t1.c1)))OR(rt0.c4))))  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (((rt0.c0) NOT NULL)))) ORDER BY (~ (((((rt0.c4)OR(t1.c1)))OR(rt0.c4))))  NULLS FIRST LIMIT 0X1;
SELECT * FROM rt0, t1 WHERE (DATETIME(rt0.c2, CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END, rt0.c2, t1.c0)) ORDER BY ((((((((((0.6682667108172642)OR(((rt0.c3) IS FALSE))))AND(((rt0.c0) NOT NULL))))AND(((((((rt0.c2)OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))))AND(((rt0.c1)>=(rt0.c4)))))AND(((rt0.c4)<=(0.2829735183396057)))) ASC  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE (((DATETIME(rt0.c2, CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END, rt0.c2, t1.c0))AND(((t1.c1) NOT NULL)))) ORDER BY (~ (((((rt0.c4)OR(t1.c1)))OR(rt0.c4))))  NULLS FIRST LIMIT 1 INTERSECT SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (((rt0.c0) NOT NULL)))) ORDER BY (~ (((((rt0.c4)OR(t1.c1)))OR(rt0.c4))))  NULLS FIRST LIMIT 0X1;
SELECT * FROM rt0, t1 WHERE ((((rt0.c2)) NOT BETWEEN (((+ (rt0.c0)))) AND ((((((((rt0.c0)OR(rt0.c0)))AND(t1.c0)))AND(1.218142961E9))))));
SELECT ALL * FROM rt0, t1 WHERE ((((((rt0.c2)) NOT BETWEEN (((+ (rt0.c0)))) AND ((((((((rt0.c0)OR(rt0.c0)))AND(t1.c0)))AND(1.218142961E9))))))AND(((((t1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL)))) INTERSECT SELECT ALL * FROM rt0, t1 WHERE (((('j!', ((t1.c0) IS FALSE), (((t1.c0, rt0.c3))<=((rt0.c3, rt0.c1))), ((((rt0.c4)AND(t1.c0)))OR(t1.c1)), (((t1.c0))>=((0X7fd1b2cd))), CASE t1.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END))==((load_extension(0.6195823402504455), rt0.c3 COLLATE RTRIM, 'Y ', CASE rt0.c4  WHEN rt0.c3 THEN t1.c0 WHEN rt0.c1 THEN t1.c1 END, rt0.c0, (~ (rt0.c3))))));
SELECT * FROM rt0, t1 WHERE ((((rt0.c2)) NOT BETWEEN (((+ (rt0.c0)))) AND ((((((((rt0.c0)OR(rt0.c0)))AND(t1.c0)))AND(1.218142961E9))))));
SELECT ALL * FROM rt0, t1 WHERE ((((((rt0.c2)) NOT BETWEEN (((+ (rt0.c0)))) AND ((((((((rt0.c0)OR(rt0.c0)))AND(t1.c0)))AND(1.218142961E9))))))AND(((((t1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL)))) INTERSECT SELECT ALL * FROM rt0, t1 WHERE (((('j!', ((t1.c0) IS FALSE), (((t1.c0, rt0.c3))<=((rt0.c3, rt0.c1))), ((((rt0.c4)AND(t1.c0)))OR(t1.c1)), (((t1.c0))>=((0X7fd1b2cd))), CASE t1.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END))==((load_extension(0.6195823402504455), rt0.c3 COLLATE RTRIM, 'Y ', CASE rt0.c4  WHEN rt0.c3 THEN t1.c0 WHEN rt0.c1 THEN t1.c1 END, rt0.c0, (~ (rt0.c3))))));
SELECT ALL * FROM t1, rt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c2) NOT NULL) WHEN (((t1.c0, rt0.c0))>=((rt0.c0, t1.c0))) THEN ((rt0.c1)<<(rt0.c4)) WHEN (((x'', 0.21870418365610378, rt0.c2, t1.c1)) BETWEEN ((t1.c0, rt0.c1, rt0.c4, t1.c1)) AND ((rt0.c0, rt0.c2, 'VY	5Hp|C', rt0.c0))) THEN ((t1.c1) BETWEEN (rt0.c1) AND (t1.c0)) WHEN CASE rt0.c4  WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END THEN t1.c1 WHEN ((rt0.c4) IS FALSE) THEN (((rt0.c3, 0.6767759888126577)) NOT BETWEEN ((t1.c0, rt0.c3)) AND ((rt0.c4, rt0.c4))) WHEN CASE WHEN t1.c1 THEN rt0.c3 WHEN t1.c1 THEN rt0.c4 WHEN t1.c1 THEN t1.c1 WHEN rt0.c3 THEN rt0.c0 ELSE t1.c0 END THEN t1.c1 END);
SELECT ALL * FROM t1, rt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c2) NOT NULL) WHEN (((t1.c0, rt0.c0))>((rt0.c0, t1.c0))) THEN ((rt0.c1)<<(rt0.c4)) WHEN (((x'', 0.21870418365610378, rt0.c2, t1.c1)) BETWEEN ((t1.c0, rt0.c1, rt0.c4, t1.c1)) AND ((rt0.c0, rt0.c2, 'VY	5Hp|C', rt0.c0))) THEN ((t1.c1) BETWEEN (rt0.c1) AND (t1.c0)) WHEN CASE rt0.c4  WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END THEN t1.c1 WHEN ((rt0.c4) IS FALSE) THEN (((rt0.c3, 0.6767759888126577)) NOT BETWEEN ((t1.c0, rt0.c3)) AND ((rt0.c4, rt0.c4))) WHEN CASE WHEN t1.c1 THEN rt0.c3 WHEN t1.c1 THEN rt0.c4 WHEN t1.c1 THEN t1.c1 WHEN rt0.c3 THEN rt0.c0 ELSE t1.c0 END THEN t1.c1 END) ORDER BY (((((((((rt0.c0 IN (rt0.c0)))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE t1.c1 END)))OR((- (rt0.c1)))))OR(((rt0.c4)<<(t1.c1)))))AND(((-1284995590)/(rt0.c1)))) ASC  NULLS FIRST, ((rt0.c4)||(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END)), (CASE WHEN x'' THEN 0.40871862823945226 END IN ()) LIMIT 0x0;
SELECT ALL * FROM t1, rt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c2) NOT NULL) WHEN (((t1.c0, rt0.c0))>=((rt0.c0, t1.c0))) THEN ((rt0.c1)<<(rt0.c4)) WHEN (((x'', 0.21870418365610378, rt0.c2, t1.c1)) BETWEEN ((t1.c0, rt0.c1, rt0.c4, t1.c1)) AND ((rt0.c0, rt0.c2, 'VY	5Hp|C', rt0.c0))) THEN ((t1.c1) BETWEEN (rt0.c1) AND (t1.c0)) WHEN CASE rt0.c4  WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END THEN t1.c1 WHEN ((rt0.c4) IS FALSE) THEN (((rt0.c3, 0.6767759888126577)) NOT BETWEEN ((t1.c0, rt0.c3)) AND ((rt0.c4, rt0.c4))) WHEN CASE WHEN t1.c1 THEN rt0.c3 WHEN t1.c1 THEN rt0.c4 WHEN t1.c1 THEN t1.c1 WHEN rt0.c3 THEN rt0.c0 ELSE t1.c0 END THEN t1.c1 END);
SELECT ALL * FROM t1, rt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c2) NOT NULL) WHEN (((t1.c0, rt0.c0))>((rt0.c0, t1.c0))) THEN ((rt0.c1)<<(rt0.c4)) WHEN (((x'', 0.21870418365610378, rt0.c2, t1.c1)) BETWEEN ((t1.c0, rt0.c1, rt0.c4, t1.c1)) AND ((rt0.c0, rt0.c2, 'VY	5Hp|C', rt0.c0))) THEN ((t1.c1) BETWEEN (rt0.c1) AND (t1.c0)) WHEN CASE rt0.c4  WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END THEN t1.c1 WHEN ((rt0.c4) IS FALSE) THEN (((rt0.c3, 0.6767759888126577)) NOT BETWEEN ((t1.c0, rt0.c3)) AND ((rt0.c4, rt0.c4))) WHEN CASE WHEN t1.c1 THEN rt0.c3 WHEN t1.c1 THEN rt0.c4 WHEN t1.c1 THEN t1.c1 WHEN rt0.c3 THEN rt0.c0 ELSE t1.c0 END THEN t1.c1 END) ORDER BY (((((((((rt0.c0 IN (rt0.c0)))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE t1.c1 END)))OR((- (rt0.c1)))))OR(((rt0.c4)<<(t1.c1)))))AND(((-1284995590)/(rt0.c1)))) ASC  NULLS FIRST, ((rt0.c4)||(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END)), (CASE WHEN x'' THEN 0.40871862823945226 END IN ()) LIMIT 0x0;
SELECT ALL * FROM rt0 WHERE ((((((((((((+ (rt0.c1)))AND(x'b2')))AND((('1430619943')&(rt0.c0)))))OR((((rt0.c2, rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN (('b', rt0.c0, rt0.c2, rt0.c3)) AND ((0.06522034647439712, rt0.c1, rt0.c1, rt0.c4))))))AND((((rt0.c3, rt0.c1))>=((rt0.c4, rt0.c0))))))OR(rt0.c3)));
SELECT DISTINCT * FROM rt0 WHERE ((((((((((((((+ (rt0.c1)))AND(x'b2')))AND((('1430619943')&(rt0.c0)))))OR((((rt0.c2, rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN (('b', rt0.c0, rt0.c2, rt0.c3)) AND ((0.06522034647439712, rt0.c1, rt0.c1, rt0.c4))))))AND((((rt0.c3, rt0.c1))>((rt0.c4, rt0.c0))))))OR(rt0.c3)))AND(((((rt0.c4))==((rt0.c0))) IN (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)), (rt0.c3 IN (0X518a5ad9))))))) ORDER BY ((((rt0.c3) NOT BETWEEN (x'62') AND (rt0.c0)))|(0.8828101734172602))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((((((((+ (rt0.c1)))AND(x'b2')))AND((('1430619943')&(rt0.c0)))))OR((((rt0.c2, rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN (('b', rt0.c0, rt0.c2, rt0.c3)) AND ((0.06522034647439712, rt0.c1, rt0.c1, rt0.c4))))))AND((((rt0.c3, rt0.c1))>=((rt0.c4, rt0.c0))))))OR(rt0.c3)));
SELECT DISTINCT * FROM rt0 WHERE ((((((((((((((+ (rt0.c1)))AND(x'b2')))AND((('1430619943')&(rt0.c0)))))OR((((rt0.c2, rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN (('b', rt0.c0, rt0.c2, rt0.c3)) AND ((0.06522034647439712, rt0.c1, rt0.c1, rt0.c4))))))AND((((rt0.c3, rt0.c1))>((rt0.c4, rt0.c0))))))OR(rt0.c3)))AND(((((rt0.c4))==((rt0.c0))) IN (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)), (rt0.c3 IN (0X518a5ad9))))))) ORDER BY ((((rt0.c3) NOT BETWEEN (x'62') AND (rt0.c0)))|(0.8828101734172602))  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE (((((x'cea5c6')GLOB(rt0.c4))) IS FALSE));
SELECT DISTINCT * FROM rt0, t1 WHERE (((((((x'cea5c6')GLOB(rt0.c4))) IS FALSE))AND(MAX((((t1.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c0))), CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN NULL END, json_insert(t1.c1, t1.c1, rt0.c4, t1.c1, rt0.c2), ((((t1.c0)OR(rt0.c2)))OR(rt0.c0)), ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))OR(t1.c0)))))) ORDER BY (+ ((NOT (rt0.c4))))  NULLS FIRST LIMIT 1;
SELECT * FROM rt0, t1 WHERE (((((x'cea5c6')GLOB(rt0.c4))) IS FALSE));
SELECT DISTINCT * FROM rt0, t1 WHERE (((((((x'cea5c6')GLOB(rt0.c4))) IS FALSE))AND(MAX((((t1.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c0))), CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN NULL END, json_insert(t1.c1, t1.c1, rt0.c4, t1.c1, rt0.c2), ((((t1.c0)OR(rt0.c2)))OR(rt0.c0)), ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))OR(t1.c0)))))) ORDER BY (+ ((NOT (rt0.c4))))  NULLS FIRST LIMIT 1;
SELECT ALL MIN(rt0.c1) FROM t1 INDEXED BY i43, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN 466193867 THEN rt0.c3 WHEN t1.c1 THEN rt0.c2 END) NOTNULL));
SELECT DISTINCT MIN(rt0.c1) FROM t1 INDEXED BY i43, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN 466193867 THEN rt0.c3 WHEN t1.c1 THEN rt0.c2 END) NOTNULL)) ORDER BY (((rt0.c2, ((((((t1.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c4)), CAST(rt0.c3 AS BLOB)))=((((((rt0.c1)OR('-1478349440')))OR(rt0.c3)), SQLITE_VERSION(), UNLIKELY(t1.c1))))  NULLS LAST LIMIT 0 INTERSECT SELECT DISTINCT MIN(rt0.c1) FROM t1 INDEXED BY i43, rt0 WHERE (((NULLIF(t1.c0, rt0.c3))+(((rt0.c2) NOT NULL)))) ORDER BY (((rt0.c2, ((((((t1.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c4)), CAST(rt0.c3 AS BLOB)))=((((((rt0.c1)OR('-1478349440')))OR(rt0.c3)), SQLITE_VERSION(), UNLIKELY(t1.c1))))  NULLS LAST LIMIT 0;
SELECT MIN(t1.c0) FROM t1 WHERE ((+ (t1.c1))) ORDER BY CASE WHEN t1.c1 COLLATE RTRIM THEN ((t1.c1)<(t1.c1)) WHEN ((t1.c0)<=(t1.c1)) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END WHEN LIKELIHOOD(t1.c0, t1.c0) THEN ((t1.c1) IS TRUE) WHEN (((t1.c1, t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c1, t1.c0, t1.c0, t1.c0)) AND ((NULL, t1.c0, t1.c0, t1.c1))) THEN 'X' ELSE (((t1.c1, t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, t1.c1, t1.c0))) END DESC, (((t1.c1 COLLATE NOCASE))==((((t1.c0)LIKE(t1.c1))))) DESC, (- (((t1.c0) ISNULL)));
SELECT DISTINCT MIN(t1.c0) FROM t1 WHERE ((+ (t1.c1))) ORDER BY (~ (((t1.c0)IS NOT(t1.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, rt0 WHERE (((rt0.c0 COLLATE NOCASE)IS NOT(rt0.c3 COLLATE RTRIM))) ORDER BY (- (NULLIF(rt0.c2, t1.c0)));
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)IS NOT(rt0.c3 COLLATE RTRIM)))AND(((t1.c0 COLLATE BINARY) NOT NULL)))) ORDER BY (- (NULLIF(rt0.c2, t1.c0))) INTERSECT SELECT ALL * FROM t1, rt0 WHERE (((CASE t1.c0  WHEN rt0.c0 THEN t1.c0 END) IS TRUE)) ORDER BY (- (NULLIF(rt0.c2, t1.c0)));
SELECT ALL * FROM t1, rt0 WHERE (((rt0.c0 COLLATE NOCASE)IS NOT(rt0.c3 COLLATE RTRIM))) ORDER BY (- (NULLIF(rt0.c2, t1.c0)));
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)IS NOT(rt0.c3 COLLATE RTRIM)))AND(((t1.c0 COLLATE BINARY) NOT NULL)))) ORDER BY (- (NULLIF(rt0.c2, t1.c0))) INTERSECT SELECT ALL * FROM t1, rt0 WHERE (((CASE t1.c0  WHEN rt0.c0 THEN t1.c0 END) IS TRUE)) ORDER BY (- (NULLIF(rt0.c2, t1.c0)));
SELECT ALL MAX(rt0.c0) FROM t1 NATURAL JOIN rt0 WHERE (UPPER(((t1.c1) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT DISTINCT MAX(rt0.c0) FROM t1 NATURAL JOIN rt0 WHERE (((UPPER(((t1.c1) BETWEEN (rt0.c0) AND (rt0.c2))))AND(rt0.c3))) INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM t1 NATURAL JOIN rt0 WHERE (CASE WHEN (- (rt0.c4)) THEN CASE WHEN t1.c0 THEN '''' WHEN t1.c0 THEN t1.c1 ELSE rt0.c1 END WHEN x'' THEN LIKE('-247367585', rt0.c1, '0') WHEN ((0.02805746816460175) IS FALSE) THEN (+ (rt0.c2)) ELSE rt0.c3 COLLATE RTRIM END);
SELECT ALL * FROM t1 WHERE (((((((((((t1.c1)%(t1.c1)))AND((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))))OR(t1.c1)))OR(CAST(t1.c0 AS NUMERIC))))OR(t1.c0 COLLATE BINARY))) ORDER BY (((t1.c0, t1.c0, 0.8664624996220518)) NOT BETWEEN (((((t1.c0))<=((t1.c0))), (((t1.c0, x'37edc2', t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, 7.79773002E8))), CAST(t1.c0 AS REAL))) AND (((t1.c1 IN ()), NULL, ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c1)%(t1.c1)))AND((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))))OR(t1.c1)))OR(CAST(t1.c0 AS NUMERIC))))OR(t1.c0 COLLATE BINARY)))AND(CAST(t1.c1 COLLATE RTRIM AS BLOB)))) ORDER BY (((t1.c0, t1.c0, 0.8664624996220518)) NOT BETWEEN (((((t1.c0))<=((t1.c0))), (((t1.c0, x'37edc2', t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, 7.79773002E8))), CAST(t1.c0 AS REAL))) AND (((t1.c1 IN ()), NULL, ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c1)%(t1.c1)))AND((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))))OR(t1.c1)))OR(CAST(t1.c0 AS NUMERIC))))OR(t1.c0 COLLATE BINARY))) ORDER BY (((t1.c0, t1.c0, 0.8664624996220518)) NOT BETWEEN (((((t1.c0))<=((t1.c0))), (((t1.c0, x'37edc2', t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, 7.79773002E8))), CAST(t1.c0 AS REAL))) AND (((t1.c1 IN ()), NULL, ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c1)%(t1.c1)))AND((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))))))OR(t1.c1)))OR(CAST(t1.c0 AS NUMERIC))))OR(t1.c0 COLLATE BINARY)))AND(CAST(t1.c1 COLLATE RTRIM AS BLOB)))) ORDER BY (((t1.c0, t1.c0, 0.8664624996220518)) NOT BETWEEN (((((t1.c0))<=((t1.c0))), (((t1.c0, x'37edc2', t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c0, t1.c1, 7.79773002E8))), CAST(t1.c0 AS REAL))) AND (((t1.c1 IN ()), NULL, ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))  NULLS LAST LIMIT 0;
SELECT * FROM rt0 WHERE (((rt0.c1)=(rt0.c0)) COLLATE RTRIM) ORDER BY ((rt0.c3 COLLATE RTRIM) NOT NULL);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)=(rt0.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))>=(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))) ASC LIMIT 1;
SELECT * FROM rt0 WHERE (((rt0.c1)=(rt0.c0)) COLLATE RTRIM) ORDER BY ((rt0.c3 COLLATE RTRIM) NOT NULL);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)=(rt0.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))>=(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))) ASC LIMIT 1;
SELECT * FROM rt0 WHERE (HEX(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 END)) ORDER BY (+ ((NOT (rt0.c0)))), CASE '877058290'  WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM, ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)))>>(((rt0.c1)|(rt0.c3))));
SELECT DISTINCT * FROM rt0 WHERE (HEX(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 END)) ORDER BY (+ ((NOT (rt0.c0)))), CASE '877058290'  WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM, ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)))>>(((rt0.c1)|(rt0.c3))));
SELECT * FROM rt0 WHERE (HEX(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 END)) ORDER BY (+ ((NOT (rt0.c0)))), CASE '877058290'  WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM, ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)))>>(((rt0.c1)|(rt0.c3))));
SELECT DISTINCT * FROM rt0 WHERE (HEX(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 END)) ORDER BY (+ ((NOT (rt0.c0)))), CASE '877058290'  WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM, ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)))>>(((rt0.c1)|(rt0.c3))));
SELECT * FROM t1, rt0 WHERE (rt0.c1);
SELECT ALL * FROM t1, rt0 WHERE (rt0.c1) INTERSECT SELECT ALL * FROM t1, rt0 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN t1.c1 WHEN t1.c0 THEN rt0.c3 END)));
SELECT * FROM t1, rt0 WHERE (rt0.c1);
SELECT ALL * FROM t1, rt0 WHERE (rt0.c1) INTERSECT SELECT ALL * FROM t1, rt0 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN t1.c1 WHEN t1.c0 THEN rt0.c3 END)));
SELECT COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE (((((((((CASE WHEN rt0.c2 THEN t1.c1 END)AND(rt0.c4 COLLATE BINARY)))AND((((rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, t1.c1)) AND ((rt0.c1, rt0.c4))))))OR(((rt0.c3)<>(NULL)))))OR(rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE (((((((((CASE WHEN rt0.c2 THEN t1.c1 END)AND(rt0.c4 COLLATE BINARY)))AND((((rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, t1.c1)) AND ((rt0.c1, rt0.c4))))))OR(((rt0.c3)<>(NULL)))))OR(rt0.c0))) ORDER BY t1.c1 ASC, TRIM(DISTINCT (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) ASC LIMIT 1 INTERSECT SELECT COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE (((rt0.c1)OR(((t1.c1)!=(rt0.c0))))) ORDER BY t1.c1 ASC, TRIM(DISTINCT (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) ASC LIMIT 1;
SELECT * FROM rt0, t1 WHERE (CASE WHEN ((rt0.c0)|(t1.c1)) THEN '1563864889' WHEN ((rt0.c0)-('-421611196')) THEN (NOT (rt0.c3)) END);
SELECT ALL * FROM rt0, t1 WHERE (CASE WHEN ((rt0.c0)|(t1.c1)) THEN '1563864889' WHEN ((rt0.c0)-('-421611196')) THEN (NOT (rt0.c3)) END) LIMIT 0 INTERSECT SELECT * FROM rt0, t1 WHERE ((((0.20058100072532403) NOTNULL) IN ())) LIMIT 0;
SELECT * FROM rt0, t1 WHERE (CASE WHEN ((rt0.c0)|(t1.c1)) THEN '1563864889' WHEN ((rt0.c0)-('-421611196')) THEN (NOT (rt0.c3)) END);
SELECT ALL * FROM rt0, t1 WHERE (CASE WHEN ((rt0.c0)|(t1.c1)) THEN '1563864889' WHEN ((rt0.c0)-('-421611196')) THEN (NOT (rt0.c3)) END) LIMIT 0 INTERSECT SELECT * FROM rt0, t1 WHERE ((((0.20058100072532403) NOTNULL) IN ())) LIMIT 0;
SELECT * FROM rt0, t1 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))IS NOT((rt0.c0 IN (rt0.c4)))));
SELECT DISTINCT * FROM rt0, t1 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))IS NOT((rt0.c0 IN (rt0.c4))))) ORDER BY (((- (rt0.c1))) IS FALSE), CASE ((rt0.c1) NOT NULL)  WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c1, rt0.c3)) NOT BETWEEN ((t1.c1, 'MF?ઞE왵7')) AND ((NULL, x'9b74463c'))) WHEN ((t1.c0) NOT BETWEEN (rt0.c2) AND (t1.c1)) THEN t1.c1 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c4)) END  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE ((SUBSTR(t1.c1, rt0.c0) IN (SQLITE_COMPILEOPTION_GET(t1.c1)))) ORDER BY (((- (rt0.c1))) IS FALSE), CASE ((rt0.c1) NOT NULL)  WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c1, rt0.c3)) NOT BETWEEN ((t1.c1, 'MF?ઞE왵7')) AND ((NULL, x'9b74463c'))) WHEN ((t1.c0) NOT BETWEEN (rt0.c2) AND (t1.c1)) THEN t1.c1 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c4)) END  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))IS NOT((rt0.c0 IN (rt0.c4)))));
SELECT DISTINCT * FROM rt0, t1 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))IS NOT((rt0.c0 IN (rt0.c4))))) ORDER BY (((- (rt0.c1))) IS FALSE), CASE ((rt0.c1) NOT NULL)  WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c1, rt0.c3)) NOT BETWEEN ((t1.c1, 'MF?ઞE왵7')) AND ((NULL, x'9b74463c'))) WHEN ((t1.c0) NOT BETWEEN (rt0.c2) AND (t1.c1)) THEN t1.c1 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c4)) END  NULLS FIRST INTERSECT SELECT DISTINCT * FROM rt0, t1 WHERE ((SUBSTR(t1.c1, rt0.c0) IN (SQLITE_COMPILEOPTION_GET(t1.c1)))) ORDER BY (((- (rt0.c1))) IS FALSE), CASE ((rt0.c1) NOT NULL)  WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c1, rt0.c3)) NOT BETWEEN ((t1.c1, 'MF?ઞE왵7')) AND ((NULL, x'9b74463c'))) WHEN ((t1.c0) NOT BETWEEN (rt0.c2) AND (t1.c1)) THEN t1.c1 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c4)) END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN -3.03263341E8 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END AS NUMERIC)) ORDER BY CAST((rt0.c2 IN (rt0.c1)) AS INTEGER) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN -3.03263341E8 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END AS NUMERIC))AND((- (((rt0.c0)IS(rt0.c4))))))) ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN ((((((((((((0.116696224997761)OR(NULL)))AND(x'7a')))OR(rt0.c0)))OR('9f')))AND(rt0.c1)))AND(rt0.c4)) THEN TRIM(rt0.c1) END DESC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN -3.03263341E8 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END AS NUMERIC)) ORDER BY CAST((rt0.c2 IN (rt0.c1)) AS INTEGER) ASC;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN -3.03263341E8 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END AS NUMERIC))AND((- (((rt0.c0)IS(rt0.c4))))))) ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN ((((((((((((0.116696224997761)OR(NULL)))AND(x'7a')))OR(rt0.c0)))OR('9f')))AND(rt0.c1)))AND(rt0.c4)) THEN TRIM(rt0.c1) END DESC LIMIT 0X0;
SELECT ALL MIN(rt0.c0) FROM t1, rt0 WHERE (((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)) COLLATE NOCASE);
SELECT DISTINCT MIN(rt0.c0) FROM t1, rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)) COLLATE NOCASE)AND((- (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t1.c1 END))))) ORDER BY rt0.c1 ASC  NULLS FIRST, ((((rt0.c1, rt0.c2, t1.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c2))) IN ((((t1.c1, rt0.c4, t1.c0)) BETWEEN (('''', t1.c1, rt0.c4)) AND ((rt0.c2, rt0.c0, rt0.c4))))) DESC;
SELECT COUNT(*) FROM rt0, t1 WHERE (((((rt0.c2)IS(rt0.c1))) BETWEEN (((((((rt0.c1)OR(rt0.c4)))AND(rt0.c2)))OR(t1.c1))) AND (((rt0.c1) NOT NULL)))) ORDER BY ((((t1.c0) BETWEEN (rt0.c3) AND (t1.c0)))<=(((rt0.c1) ISNULL))) ASC, CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c4 THEN t1.c1 END COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((((rt0.c2)IS(rt0.c1))) BETWEEN (((((((rt0.c1)OR(rt0.c4)))AND(rt0.c2)))OR(t1.c1))) AND (((rt0.c1) NOT NULL))))AND(((CAST(rt0.c0 AS NUMERIC))>(CAST(t1.c0 AS INTEGER)))))) ORDER BY ((((t1.c0) BETWEEN (rt0.c3) AND (t1.c0)))<=(((rt0.c1) ISNULL))) ASC, CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c4 THEN t1.c1 END COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN GLOB(rt0.c4, rt0.c3) ELSE CAST(rt0.c0 AS TEXT) END);
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN GLOB(rt0.c4, rt0.c3) ELSE CAST(rt0.c0 AS TEXT) END) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3, rt0.c1)) BETWEEN ((rt0.c0, (rt0.c2 IN ()))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END, rt0.c3)))) LIMIT 1;
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN GLOB(rt0.c4, rt0.c3) ELSE CAST(rt0.c0 AS TEXT) END);
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN GLOB(rt0.c4, rt0.c3) ELSE CAST(rt0.c0 AS TEXT) END) LIMIT 0x1 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3, rt0.c1)) BETWEEN ((rt0.c0, (rt0.c2 IN ()))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END, rt0.c3)))) LIMIT 1;
SELECT * FROM rt0, t1 WHERE (((HEX(t1.c1)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (t1.c1))) AND (CAST(t1.c0 AS BLOB)))) ORDER BY (((((- (rt0.c4)))OR((((-776798265)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))))OR(((t1.c0) IS FALSE)))  NULLS FIRST, (+ (NULL)) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0, t1 WHERE (((((HEX(t1.c1)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (t1.c1))) AND (CAST(t1.c0 AS BLOB))))AND((((t1.c1, (((rt0.c1, rt0.c0))==((rt0.c0, rt0.c2))), (((rt0.c4, t1.c0, rt0.c3, rt0.c3))>((rt0.c4, t1.c1, rt0.c2, rt0.c4)))))<=((CASE rt0.c4  WHEN t1.c1 THEN '1071159531' WHEN rt0.c3 THEN t1.c1 WHEN x'1dd5' THEN rt0.c4 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 END, 0.6568905399469699, (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))))))) ORDER BY (((((- (rt0.c4)))OR((((-776798265)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))))OR(((t1.c0) IS FALSE)))  NULLS FIRST, (+ (NULL)) ASC  NULLS LAST LIMIT 2;
SELECT * FROM rt0, t1 WHERE (((HEX(t1.c1)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (t1.c1))) AND (CAST(t1.c0 AS BLOB)))) ORDER BY (((((- (rt0.c4)))OR((((-776798265)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))))OR(((t1.c0) IS FALSE)))  NULLS FIRST, (+ (NULL)) ASC  NULLS LAST;
SELECT DISTINCT * FROM rt0, t1 WHERE (((((HEX(t1.c1)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (t1.c1))) AND (CAST(t1.c0 AS BLOB))))AND((((t1.c1, (((rt0.c1, rt0.c0))==((rt0.c0, rt0.c2))), (((rt0.c4, t1.c0, rt0.c3, rt0.c3))>((rt0.c4, t1.c1, rt0.c2, rt0.c4)))))<=((CASE rt0.c4  WHEN t1.c1 THEN '1071159531' WHEN rt0.c3 THEN t1.c1 WHEN x'1dd5' THEN rt0.c4 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 END, 0.6568905399469699, (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))))))) ORDER BY (((((- (rt0.c4)))OR((((-776798265)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))))OR(((t1.c0) IS FALSE)))  NULLS FIRST, (+ (NULL)) ASC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t1, rt0 WHERE (((IFNULL(rt0.c4, rt0.c3)) NOTNULL));
SELECT ALL * FROM t1, rt0 WHERE (((IFNULL(rt0.c4, rt0.c3)) NOTNULL)) LIMIT 2 INTERSECT SELECT ALL * FROM t1, rt0 WHERE (LIKELY(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) LIMIT 0X2;
SELECT ALL * FROM t1, rt0 WHERE (((IFNULL(rt0.c4, rt0.c3)) NOTNULL));
SELECT ALL * FROM t1, rt0 WHERE (((IFNULL(rt0.c4, rt0.c3)) NOTNULL)) LIMIT 2 INTERSECT SELECT ALL * FROM t1, rt0 WHERE (LIKELY(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) LIMIT 0X2;
SELECT COUNT(*) FROM t1 WHERE ((((x'15819d20d3') ISNULL) IN (1.291462503E9)));
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((x'15819d20d3') ISNULL) IN (1.291462503E9)))AND('2144449229' COLLATE BINARY))) INTERSECT SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((COALESCE(DISTINCT t1.c1, t1.c0, t1.c1, t1.c1))OR((+ (t1.c0)))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END)))OR(t1.c0 COLLATE RTRIM)));
SELECT * FROM rt0, t1 WHERE ((((rt0.c3, rt0.c4, rt0.c1)) NOT BETWEEN (((~ (rt0.c4)), CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END, (- (rt0.c2)))) AND ((((t1.c1)&(rt0.c2)), CAST(rt0.c1 AS TEXT), ((t1.c1) NOTNULL))))) ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ((((t1.c0, rt0.c1, t1.c1, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c0, t1.c0, rt0.c3)) AND ((rt0.c1, rt0.c4, rt0.c0, t1.c0)))))  NULLS FIRST, (((((x'f6ae')LIKE(rt0.c1)), (rt0.c4 IN (rt0.c2, rt0.c4)), rt0.c3 COLLATE BINARY))<((CAST(rt0.c1 AS NUMERIC), CAST(rt0.c1 AS BLOB), (((rt0.c4, t1.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c0))<=((t1.c0, t1.c0, rt0.c4, x'b3e9', rt0.c3, rt0.c4)))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((rt0.c3, rt0.c4, rt0.c1)) NOT BETWEEN (((~ (rt0.c4)), CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END, (- (rt0.c2)))) AND ((((t1.c1)&(rt0.c2)), CAST(rt0.c1 AS TEXT), ((t1.c1) NOTNULL))))) ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ((((t1.c0, rt0.c1, t1.c1, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c0, t1.c0, rt0.c3)) AND ((rt0.c1, rt0.c4, rt0.c0, t1.c0)))))  NULLS FIRST, (((((x'f6ae')LIKE(rt0.c1)), (rt0.c4 IN (rt0.c2, rt0.c4)), rt0.c3 COLLATE BINARY))<((CAST(rt0.c1 AS NUMERIC), CAST(rt0.c1 AS BLOB), (((rt0.c4, t1.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c0))<=((t1.c0, t1.c0, rt0.c4, x'b3e9', rt0.c3, rt0.c4)))))) DESC  NULLS LAST;
SELECT * FROM rt0, t1 WHERE ((((rt0.c3, rt0.c4, rt0.c1)) NOT BETWEEN (((~ (rt0.c4)), CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END, (- (rt0.c2)))) AND ((((t1.c1)&(rt0.c2)), CAST(rt0.c1 AS TEXT), ((t1.c1) NOTNULL))))) ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ((((t1.c0, rt0.c1, t1.c1, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c0, t1.c0, rt0.c3)) AND ((rt0.c1, rt0.c4, rt0.c0, t1.c0)))))  NULLS FIRST, (((((x'f6ae')LIKE(rt0.c1)), (rt0.c4 IN (rt0.c2, rt0.c4)), rt0.c3 COLLATE BINARY))<((CAST(rt0.c1 AS NUMERIC), CAST(rt0.c1 AS BLOB), (((rt0.c4, t1.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c0))<=((t1.c0, t1.c0, rt0.c4, x'b3e9', rt0.c3, rt0.c4)))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((rt0.c3, rt0.c4, rt0.c1)) NOT BETWEEN (((~ (rt0.c4)), CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END, (- (rt0.c2)))) AND ((((t1.c1)&(rt0.c2)), CAST(rt0.c1 AS TEXT), ((t1.c1) NOTNULL))))) ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ((((t1.c0, rt0.c1, t1.c1, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c0, t1.c0, rt0.c3)) AND ((rt0.c1, rt0.c4, rt0.c0, t1.c0)))))  NULLS FIRST, (((((x'f6ae')LIKE(rt0.c1)), (rt0.c4 IN (rt0.c2, rt0.c4)), rt0.c3 COLLATE BINARY))<((CAST(rt0.c1 AS NUMERIC), CAST(rt0.c1 AS BLOB), (((rt0.c4, t1.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c0))<=((t1.c0, t1.c0, rt0.c4, x'b3e9', rt0.c3, rt0.c4)))))) DESC  NULLS LAST;
SELECT MIN(t1.c1) FROM t1, rt0 WHERE ((((rt0.c4 IN (rt0.c2)))AND(CASE WHEN t1.c1 THEN rt0.c0 WHEN rt0.c3 THEN t1.c0 WHEN rt0.c2 THEN rt0.c3 END)));
SELECT MIN(t1.c1) FROM t1, rt0 WHERE ((((((rt0.c4 IN (rt0.c2)))AND(CASE WHEN t1.c1 THEN rt0.c0 WHEN rt0.c3 THEN t1.c0 WHEN rt0.c2 THEN rt0.c3 END)))AND((((rt0.c0)>>(t1.c1)) IN (CASE WHEN 'H''뙉 ' THEN t1.c0 ELSE t1.c0 END))))) ORDER BY ((CAST(rt0.c3 AS REAL)) BETWEEN ((+ (t1.c0))) AND (rt0.c4))  NULLS LAST, (((rt0.c1, t1.c1, t1.c1)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END, ABS(t1.c1), (t1.c0 IN (rt0.c1)))) AND ((((t1.c1)+(rt0.c1)), 0.23605098069847308, ((((0.3836839122090777)OR(rt0.c0)))OR('0.6734999434771166')))))  NULLS FIRST LIMIT 0X2 INTERSECT SELECT MIN(t1.c1) FROM t1, rt0 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS REAL)) ORDER BY ((CAST(rt0.c3 AS REAL)) BETWEEN ((+ (t1.c0))) AND (rt0.c4))  NULLS LAST, (((rt0.c1, t1.c1, t1.c1)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END, ABS(t1.c1), (t1.c0 IN (rt0.c1)))) AND ((((t1.c1)+(rt0.c1)), 0.23605098069847308, ((((0.3836839122090777)OR(rt0.c0)))OR('0.6734999434771166')))))  NULLS FIRST LIMIT 0X2;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN ()))+(NULLIF(DISTINCT rt0.c0, x'')))) ORDER BY rt0.c2  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3 IN ()))+(NULLIF(DISTINCT rt0.c0, x''))))AND((((((rt0.c1)||(rt0.c0))))<>((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))))) ORDER BY rt0.c2  NULLS LAST LIMIT 0X0 INTERSECT SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)>=((NOT (rt0.c2))))) ORDER BY rt0.c2  NULLS LAST LIMIT 0x0;
SELECT * FROM t1 WHERE (((t1.c1)&(((t1.c1) IS FALSE)))) ORDER BY ((CAST(t1.c1 AS BLOB)) ISNULL), ((((NOT (t1.c0)), ((t1.c1)OR('107287372'))))!=((((t1.c0)<<(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)));
SELECT ALL * FROM t1 WHERE (((t1.c1)&(((t1.c1) IS FALSE)))) ORDER BY ((CAST(t1.c1 AS BLOB)) ISNULL), ((((NOT (t1.c0)), ((t1.c1)OR('107287372'))))!=((((t1.c0)<<(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) LIMIT 0x0 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1)IS(t1.c0))) ISNULL)) ORDER BY ((CAST(t1.c1 AS BLOB)) ISNULL), ((((NOT (t1.c0)), ((t1.c1)OR('107287372'))))<>((((t1.c0)<<(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) LIMIT 0x0;
SELECT * FROM t1 WHERE (((t1.c1)&(((t1.c1) IS FALSE)))) ORDER BY ((CAST(t1.c1 AS BLOB)) ISNULL), ((((NOT (t1.c0)), ((t1.c1)OR('107287372'))))!=((((t1.c0)<<(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)));
SELECT ALL * FROM t1 WHERE (((t1.c1)&(((t1.c1) IS FALSE)))) ORDER BY ((CAST(t1.c1 AS BLOB)) ISNULL), ((((NOT (t1.c0)), ((t1.c1)OR('107287372'))))!=((((t1.c0)<<(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) LIMIT 0x0 INTERSECT SELECT ALL * FROM t1 WHERE (((((t1.c1)IS(t1.c0))) ISNULL)) ORDER BY ((CAST(t1.c1 AS BLOB)) ISNULL), ((((NOT (t1.c0)), ((t1.c1)OR('107287372'))))<>((((t1.c0)<<(t1.c0)), CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) LIMIT 0x0;
SELECT ALL MIN(rt0.c0) FROM t1 NATURAL JOIN rt0 WHERE (TYPEOF(((rt0.c0) BETWEEN (t1.c0) AND (rt0.c1))));
SELECT DISTINCT MIN(rt0.c0) FROM t1 NATURAL JOIN rt0 WHERE (TYPEOF(((rt0.c0) BETWEEN (t1.c0) AND (rt0.c1)))) LIMIT 0x1 INTERSECT SELECT DISTINCT MIN(rt0.c0) FROM t1 NATURAL JOIN rt0 WHERE (CAST(((((t1.c1)OR(rt0.c1)))OR(rt0.c4)) AS INTEGER)) LIMIT 0X1;
SELECT ALL MAX(rt0.c0) FROM rt0, t1 INDEXED BY i43 WHERE (t1.c1) ORDER BY (((rt0.c1)) BETWEEN ((t1.c1 COLLATE NOCASE)) AND (('3t\	/zCS')));
SELECT DISTINCT MAX(rt0.c0) FROM rt0, t1 INDEXED BY i43 WHERE (((t1.c1)AND(((UNLIKELY(DISTINCT rt0.c4)) BETWEEN ('knowKh') AND (((rt0.c1)AND('-296861236'))))))) ORDER BY CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN t1.c1 WHEN rt0.c4 THEN rt0.c4 END COLLATE BINARY, CAST(((((((((t1.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)) AS TEXT) ASC  NULLS LAST LIMIT 0x4 INTERSECT SELECT DISTINCT MAX(rt0.c0) FROM rt0, t1 INDEXED BY i43 WHERE ((((rt0.c3 IN ()))*(rt0.c1 COLLATE RTRIM))) ORDER BY CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN t1.c1 WHEN rt0.c4 THEN rt0.c4 END COLLATE BINARY, CAST(((((((((t1.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)) AS TEXT) ASC  NULLS LAST LIMIT 0X4;
SELECT ALL MIN(rt0.c0) FROM rt0, t1 WHERE (((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c4))) IS TRUE)) ORDER BY (((((t1.c1) ISNULL)))>((t1.c1)));
SELECT MIN(rt0.c0) FROM rt0, t1 WHERE (((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c4))) IS TRUE))AND((NOT (((rt0.c1)*(rt0.c1))))))) ORDER BY (((((t1.c1) ISNULL)))>((t1.c1)));
SELECT ALL * FROM rt0 WHERE (CASE LOWER(rt0.c2)  WHEN rt0.c0 COLLATE RTRIM THEN '0Qvt遳fb''' WHEN LOWER(DISTINCT rt0.c4) THEN 'bM?r' WHEN rt0.c0 COLLATE BINARY THEN ((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c0)) END);
SELECT DISTINCT * FROM rt0 WHERE (((CASE LOWER(rt0.c2)  WHEN rt0.c0 COLLATE RTRIM THEN '0Qvt遳fb''' WHEN LOWER(DISTINCT rt0.c4) THEN 'bM?r' WHEN rt0.c0 COLLATE BINARY THEN ((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c0)) END)AND((((((rt0.c4))<((rt0.c0)))) BETWEEN ((rt0.c4 IN (rt0.c3, rt0.c3))) AND ((((rt0.c4, rt0.c2, rt0.c2))<=((rt0.c1, rt0.c3, rt0.c2))))))));
SELECT ALL * FROM rt0 WHERE (CASE LOWER(rt0.c2)  WHEN rt0.c0 COLLATE RTRIM THEN '0Qvt遳fb''' WHEN LOWER(DISTINCT rt0.c4) THEN 'bM?r' WHEN rt0.c0 COLLATE BINARY THEN ((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c0)) END);
SELECT DISTINCT * FROM rt0 WHERE (((CASE LOWER(rt0.c2)  WHEN rt0.c0 COLLATE RTRIM THEN '0Qvt遳fb''' WHEN LOWER(DISTINCT rt0.c4) THEN 'bM?r' WHEN rt0.c0 COLLATE BINARY THEN ((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c0)) END)AND((((((rt0.c4))<((rt0.c0)))) BETWEEN ((rt0.c4 IN (rt0.c3, rt0.c3))) AND ((((rt0.c4, rt0.c2, rt0.c2))<=((rt0.c1, rt0.c3, rt0.c2))))))));
SELECT COUNT(*) FROM t1, rt0 WHERE (((((rt0.c4) IS FALSE)) NOTNULL)) ORDER BY ((((NULL)/(rt0.c3))) BETWEEN (0.7074492134613916) AND (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))) DESC  NULLS FIRST, ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)))OR(rt0.c0)) ASC  NULLS LAST, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c1) IS TRUE))))  NULLS LAST;
SELECT COUNT(*) FROM t1, rt0 WHERE (((((rt0.c4) IS FALSE)) NOTNULL)) ORDER BY CASE rt0.c2 COLLATE RTRIM  WHEN 'm-fz' THEN t1.c1 COLLATE NOCASE ELSE (((rt0.c2, t1.c0))<(('OV<r#', rt0.c0))) END DESC  NULLS LAST, ((((((rt0.c3)AND(rt0.c0)))OR(t1.c1))) NOTNULL), TYPEOF((((rt0.c4, rt0.c2, rt0.c0, t1.c0))>=((rt0.c2, rt0.c3, rt0.c2, t1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((~ (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((~ (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(DATE(((x'a338') NOT BETWEEN (t1.c1) AND (t1.c1)), t1.c0, CAST(t1.c0 AS REAL)))));
SELECT ALL * FROM t1 WHERE ((~ (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((~ (((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)))))AND(DATE(((x'a338') NOT BETWEEN (t1.c1) AND (t1.c1)), t1.c0, CAST(t1.c0 AS REAL)))));
SELECT MIN(rt0.c2) FROM t1, rt0 WHERE (((rt0.c2 COLLATE RTRIM)-(CASE WHEN rt0.c4 THEN rt0.c3 WHEN -361943295 THEN rt0.c2 END)));
SELECT DISTINCT MIN(rt0.c2) FROM t1, rt0 WHERE (((rt0.c2 COLLATE RTRIM)-(CASE WHEN rt0.c4 THEN rt0.c3 WHEN 0xffffffffea6d2f01 THEN rt0.c2 END))) ORDER BY (((rt0.c4 IN ()))GLOB(((t1.c1) ISNULL))) ASC LIMIT 0;
SELECT ALL MIN(t1.c0) FROM t1, rt0 WHERE (1.404795806E9 COLLATE BINARY);
SELECT DISTINCT MIN(t1.c0) FROM t1, rt0 WHERE (1.404795806E9 COLLATE BINARY) ORDER BY x'5556'  NULLS FIRST LIMIT 0X0;
SELECT * FROM rt0 WHERE (IFNULL(rt0.c4, CAST('XEd7/]gN' AS INTEGER))) ORDER BY (((CAST(rt0.c4 AS BLOB), 0.5557425346193982, (- (rt0.c4))))<=((((rt0.c0)GLOB(rt0.c3)), ((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))OR('2144449229')))AND(rt0.c2)), CAST(rt0.c1 AS INTEGER))));
SELECT * FROM rt0 WHERE (((IFNULL(rt0.c4, CAST('XEd7/]gN' AS INTEGER)))AND(NULL))) ORDER BY (((CAST(rt0.c4 AS BLOB), 0.5557425346193982, (- (rt0.c4))))<=((((rt0.c0)GLOB(rt0.c3)), ((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))OR('2144449229')))AND(rt0.c2)), CAST(rt0.c1 AS INTEGER)))) INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY (((CAST(rt0.c4 AS BLOB), 0.5557425346193982, (- (rt0.c4))))<=((((rt0.c0)GLOB(rt0.c3)), ((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))OR('2144449229')))AND(rt0.c2)), CAST(rt0.c1 AS INTEGER))));
SELECT * FROM rt0 WHERE (IFNULL(rt0.c4, CAST('XEd7/]gN' AS INTEGER))) ORDER BY (((CAST(rt0.c4 AS BLOB), 0.5557425346193982, (- (rt0.c4))))<=((((rt0.c0)GLOB(rt0.c3)), ((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))OR('2144449229')))AND(rt0.c2)), CAST(rt0.c1 AS INTEGER))));
SELECT * FROM rt0 WHERE (((IFNULL(rt0.c4, CAST('XEd7/]gN' AS INTEGER)))AND(NULL))) ORDER BY (((CAST(rt0.c4 AS BLOB), 0.5557425346193982, (- (rt0.c4))))<=((((rt0.c0)GLOB(rt0.c3)), ((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))OR('2144449229')))AND(rt0.c2)), CAST(rt0.c1 AS INTEGER)))) INTERSECT SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY (((CAST(rt0.c4 AS BLOB), 0.5557425346193982, (- (rt0.c4))))<=((((rt0.c0)GLOB(rt0.c3)), ((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))OR('2144449229')))AND(rt0.c2)), CAST(rt0.c1 AS INTEGER))));
SELECT ALL MAX(rt0.c1) FROM rt0 WHERE ((((((rt0.c4)) NOT BETWEEN (('1480787630')) AND ((rt0.c3)))) BETWEEN ((+ (rt0.c3))) AND (((((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)))OR(0.01161305878746699))))) ORDER BY ((((((((rt0.c1 COLLATE NOCASE)OR((NOT (rt0.c1)))))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c2)||(rt0.c2)))))AND(((rt0.c3) ISNULL))) ASC  NULLS FIRST;
SELECT ALL MAX(rt0.c1) FROM rt0 NOT INDEXED WHERE ((((((((rt0.c4)) NOT BETWEEN (('1480787630')) AND ((rt0.c3)))) BETWEEN ((+ (rt0.c3))) AND (((((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)))OR(0.01161305878746699)))))AND((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END IN (((rt0.c3)OR(rt0.c2)), CASE rt0.c2  WHEN NULL THEN rt0.c2 ELSE rt0.c0 END))))) ORDER BY ((rt0.c4) NOT BETWEEN (((((rt0.c3)OR(rt0.c2)))AND(rt0.c2))) AND ((+ (x'fed5')))) DESC, UPPER(DISTINCT (- (rt0.c3))) DESC  NULLS LAST INTERSECT SELECT MAX(rt0.c1) FROM rt0 WHERE (x'2cd1') ORDER BY ((rt0.c4) NOT BETWEEN (((((rt0.c3)OR(rt0.c2)))AND(rt0.c2))) AND ((+ (x'fed5')))) DESC, UPPER(DISTINCT (- (rt0.c3))) DESC  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (((rt0.c3)!=((t1.c0 IN (rt0.c1)))));
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c3)<>((t1.c0 IN (rt0.c1)))))AND(((1125713417) IS TRUE)))) ORDER BY CAST((((t1.c0, '1563864889', rt0.c3)) NOT BETWEEN ((rt0.c0, t1.c1, rt0.c3)) AND ((rt0.c2, rt0.c1, rt0.c1))) AS REAL), CASE WHEN (rt0.c4 IN ()) THEN ((rt0.c1)|(rt0.c0)) WHEN (((rt0.c3)) BETWEEN ((1.36556162E8)) AND ((rt0.c0))) THEN ((rt0.c2) ISNULL) WHEN CASE WHEN rt0.c3 THEN rt0.c3 WHEN t1.c0 THEN t1.c0 WHEN rt0.c0 THEN rt0.c4 WHEN t1.c1 THEN rt0.c4 WHEN '0.6464899237916252' THEN rt0.c2 END THEN CAST(t1.c1 AS BLOB) WHEN x'e7' THEN ((rt0.c4)||(t1.c0)) WHEN rt0.c2 COLLATE BINARY THEN rt0.c3 COLLATE RTRIM END  NULLS LAST, rt0.c1  NULLS FIRST LIMIT 0;
SELECT * FROM rt0, t1 WHERE (((rt0.c3)!=((t1.c0 IN (rt0.c1)))));
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c3)<>((t1.c0 IN (rt0.c1)))))AND(((1125713417) IS TRUE)))) ORDER BY CAST((((t1.c0, '1563864889', rt0.c3)) NOT BETWEEN ((rt0.c0, t1.c1, rt0.c3)) AND ((rt0.c2, rt0.c1, rt0.c1))) AS REAL), CASE WHEN (rt0.c4 IN ()) THEN ((rt0.c1)|(rt0.c0)) WHEN (((rt0.c3)) BETWEEN ((1.36556162E8)) AND ((rt0.c0))) THEN ((rt0.c2) ISNULL) WHEN CASE WHEN rt0.c3 THEN rt0.c3 WHEN t1.c0 THEN t1.c0 WHEN rt0.c0 THEN rt0.c4 WHEN t1.c1 THEN rt0.c4 WHEN '0.6464899237916252' THEN rt0.c2 END THEN CAST(t1.c1 AS BLOB) WHEN x'e7' THEN ((rt0.c4)||(t1.c0)) WHEN rt0.c2 COLLATE BINARY THEN rt0.c3 COLLATE RTRIM END  NULLS LAST, rt0.c1  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE (((x'' IN (NULL, rt0.c4)) IN ())) ORDER BY rtreenode(((rt0.c2)IS(rt0.c0)), ((rt0.c2)<(rt0.c1)))  NULLS FIRST, rt0.c1 COLLATE BINARY ASC;
SELECT DISTINCT * FROM rt0 WHERE (((x'' IN (NULL, rt0.c4)) IN ())) ORDER BY rtreenode(((rt0.c2)IS(rt0.c0)), ((rt0.c2)<(rt0.c1)))  NULLS FIRST, rt0.c1 COLLATE BINARY ASC LIMIT 0X3;
SELECT ALL * FROM rt0 WHERE (((x'' IN (NULL, rt0.c4)) IN ())) ORDER BY rtreenode(((rt0.c2)IS(rt0.c0)), ((rt0.c2)<(rt0.c1)))  NULLS FIRST, rt0.c1 COLLATE BINARY ASC;
SELECT DISTINCT * FROM rt0 WHERE (((x'' IN (NULL, rt0.c4)) IN ())) ORDER BY rtreenode(((rt0.c2)IS(rt0.c0)), ((rt0.c2)<(rt0.c1)))  NULLS FIRST, rt0.c1 COLLATE BINARY ASC LIMIT 0X3;
SELECT * FROM rt0, t1 WHERE (CASE ((t1.c1)%(rt0.c3))  WHEN ((rt0.c1) IS FALSE) THEN (NOT (rt0.c1)) ELSE '-1645969377' END);
SELECT * FROM rt0, t1 WHERE (((CASE ((t1.c1)%(rt0.c3))  WHEN ((rt0.c1) IS FALSE) THEN (NOT (rt0.c1)) ELSE '-1645969377' END)AND(((t1.c0) NOT BETWEEN (((x'')!=(rt0.c1))) AND ((t1.c0 IN ()))))));
SELECT * FROM rt0, t1 WHERE (CASE ((t1.c1)%(rt0.c3))  WHEN ((rt0.c1) IS FALSE) THEN (NOT (rt0.c1)) ELSE '-1645969377' END);
SELECT * FROM rt0, t1 WHERE (((CASE ((t1.c1)%(rt0.c3))  WHEN ((rt0.c1) IS FALSE) THEN (NOT (rt0.c1)) ELSE '-1645969377' END)AND(((t1.c0) NOT BETWEEN (((x'')!=(rt0.c1))) AND ((t1.c0 IN ()))))));
SELECT * FROM rt0 WHERE (((((rt0.c2) IS TRUE))OR(((0x2158b605) IS FALSE))));
SELECT * FROM rt0 WHERE (((((((rt0.c2) IS TRUE))OR(((0x2158b605) IS FALSE))))AND(LIKELIHOOD(((((rt0.c2)OR(NULL)))AND(NULL)), ((((rt0.c0)AND('W')))OR(rt0.c2)))))) LIMIT 0X0;
SELECT * FROM rt0 WHERE (((((rt0.c2) IS TRUE))OR(((0x2158b605) IS FALSE))));
SELECT * FROM rt0 WHERE (((((((rt0.c2) IS TRUE))OR(((0x2158b605) IS FALSE))))AND(LIKELIHOOD(((((rt0.c2)OR(NULL)))AND(NULL)), ((((rt0.c0)AND('W')))OR(rt0.c2)))))) LIMIT 0X0;
SELECT ALL * FROM rt0, t1 WHERE (((CAST(rt0.c0 AS INTEGER)) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (((((((((((((rt0.c0)OR(rt0.c3)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY CASE WHEN (('') NOT BETWEEN (NULL) AND (rt0.c1)) THEN (((rt0.c0))>((t1.c0))) END DESC  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (((CAST(rt0.c0 AS INTEGER)) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (((((((((((((rt0.c0)OR(rt0.c3)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY CASE WHEN (('') NOT BETWEEN (NULL) AND (rt0.c1)) THEN (((rt0.c0))>((t1.c0))) END DESC  NULLS LAST;
SELECT ALL * FROM rt0, t1 WHERE (((CAST(rt0.c0 AS INTEGER)) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (((((((((((((rt0.c0)OR(rt0.c3)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY CASE WHEN (('') NOT BETWEEN (NULL) AND (rt0.c1)) THEN (((rt0.c0))>((t1.c0))) END DESC  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (((CAST(rt0.c0 AS INTEGER)) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (((((((((((((rt0.c0)OR(rt0.c3)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY CASE WHEN (('') NOT BETWEEN (NULL) AND (rt0.c1)) THEN (((rt0.c0))>((t1.c0))) END DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (UPPER((((rt0.c3, rt0.c4))<((rt0.c2, 669988520)))));
SELECT * FROM rt0 WHERE (UPPER((((rt0.c3, rt0.c4))<((rt0.c2, 669988520)))));
SELECT * FROM rt0 WHERE (UPPER((((rt0.c3, rt0.c4))<((rt0.c2, 669988520)))));
SELECT * FROM rt0 WHERE (UPPER((((rt0.c3, rt0.c4))<((rt0.c2, 669988520)))));
SELECT ALL * FROM t1 INNER JOIN rt0 ON rt0.c0 COLLATE BINARY WHERE ('Q크z喌&圤');
SELECT DISTINCT * FROM t1 INNER JOIN rt0 ON rt0.c0 COLLATE BINARY WHERE ((('Q크z喌&圤')AND(t1.c1))) ORDER BY (((((((((~ (rt0.c3)))OR(((t1.c0) NOTNULL))))AND(UNLIKELY(DISTINCT rt0.c0))))OR((t1.c1 IN ()))))AND(((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))AND(t1.c1))));
SELECT ALL * FROM t1 INNER JOIN rt0 ON rt0.c0 COLLATE BINARY WHERE ('Q크z喌&圤');
SELECT DISTINCT * FROM t1 INNER JOIN rt0 ON rt0.c0 COLLATE BINARY WHERE ((('Q크z喌&圤')AND(t1.c1))) ORDER BY (((((((((~ (rt0.c3)))OR(((t1.c0) NOTNULL))))AND(UNLIKELY(DISTINCT rt0.c0))))OR((t1.c1 IN ()))))AND(((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))AND(t1.c1))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT))<=(CAST(rt0.c1 AS NUMERIC)))) ORDER BY CASE WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 ELSE rt0.c1 END COLLATE RTRIM ASC  NULLS LAST, ((('#Xu')IS(rt0.c0)) IN ('')) ASC, CAST(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END AS BLOB)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT))<=(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT))<=(CAST(rt0.c1 AS NUMERIC)))) ORDER BY CASE WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 ELSE rt0.c1 END COLLATE RTRIM ASC  NULLS LAST, ((('#Xu')IS(rt0.c0)) IN ('')) ASC, CAST(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END AS BLOB)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT))<=(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t1, rt0 WHERE (((CASE WHEN t1.c0 THEN rt0.c4 ELSE rt0.c1 END) ISNULL));
SELECT ALL * FROM t1, rt0 WHERE (((CASE WHEN t1.c0 THEN rt0.c4 ELSE rt0.c1 END) ISNULL));
SELECT ALL * FROM t1, rt0 WHERE (((CASE WHEN t1.c0 THEN rt0.c4 ELSE rt0.c1 END) ISNULL));
SELECT ALL * FROM t1, rt0 WHERE (((CASE WHEN t1.c0 THEN rt0.c4 ELSE rt0.c1 END) ISNULL));
SELECT ALL * FROM t1, rt0 WHERE (((((((t1.c0)AND(rt0.c1)))OR(rt0.c1)))%(t1.c1 COLLATE RTRIM))) ORDER BY ((((t1.c1) ISNULL)) NOT BETWEEN (((t1.c1) IS TRUE)) AND (((rt0.c2)IS(t1.c0))))  NULLS LAST;
SELECT ALL * FROM t1, rt0 WHERE (((((((((t1.c0)AND(rt0.c1)))OR(rt0.c1)))%(t1.c1 COLLATE RTRIM)))AND((((rt0.c2 IN ('919875686')))IS NOT((((t1.c0, rt0.c4, rt0.c2, x'7c'))!=((rt0.c1, t1.c1, rt0.c4, rt0.c4)))))))) ORDER BY CAST(((rt0.c4)>>(x'd5')) AS TEXT), ((((rt0.c3)*(rt0.c1))) ISNULL) DESC, ((((((((t1.c0)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1))) BETWEEN (((rt0.c1) IS TRUE)) AND (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 END)) DESC, (((((((((((t1.c1))==((t1.c1))))OR((rt0.c4 IN (rt0.c0)))))AND(CAST(rt0.c0 AS REAL))))AND(CAST(rt0.c1 AS REAL))))OR(((rt0.c3) NOT NULL)))  NULLS LAST LIMIT 0X1;
SELECT ALL * FROM t1, rt0 WHERE (((((((t1.c0)AND(rt0.c1)))OR(rt0.c1)))%(t1.c1 COLLATE RTRIM))) ORDER BY ((((t1.c1) ISNULL)) NOT BETWEEN (((t1.c1) IS TRUE)) AND (((rt0.c2)IS(t1.c0))))  NULLS LAST;
SELECT ALL * FROM t1, rt0 WHERE (((((((((t1.c0)AND(rt0.c1)))OR(rt0.c1)))%(t1.c1 COLLATE RTRIM)))AND((((rt0.c2 IN ('919875686')))IS NOT((((t1.c0, rt0.c4, rt0.c2, x'7c'))!=((rt0.c1, t1.c1, rt0.c4, rt0.c4)))))))) ORDER BY CAST(((rt0.c4)>>(x'd5')) AS TEXT), ((((rt0.c3)*(rt0.c1))) ISNULL) DESC, ((((((((t1.c0)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1))) BETWEEN (((rt0.c1) IS TRUE)) AND (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 END)) DESC, (((((((((((t1.c1))==((t1.c1))))OR((rt0.c4 IN (rt0.c0)))))AND(CAST(rt0.c0 AS REAL))))AND(CAST(rt0.c1 AS REAL))))OR(((rt0.c3) NOT NULL)))  NULLS LAST LIMIT 0X1;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c1) NOTNULL))OR(t1.c0)))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))) ORDER BY (- (TYPEOF(DISTINCT t1.c0))) DESC  NULLS LAST, '\Z*⬜' ASC;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((((t1.c1) NOTNULL))OR(t1.c0)))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END))) ORDER BY (((((t1.c1 IN (t1.c0)))OR(((((t1.c1)AND(t1.c1)))OR(t1.c1)))))AND(NULLIF(DISTINCT t1.c0, t1.c0))) DESC;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ('') ORDER BY ((((rt0.c1)>=(rt0.c1))) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE NULL END) AND (t1.c0));
SELECT DISTINCT COUNT(*) FROM rt0, t1 WHERE ('') ORDER BY ((((rt0.c1)>=(rt0.c1))) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE NULL END) AND (t1.c0)) LIMIT 1;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON ((((rt0.c4)!=(rt0.c3)))IS NOT((~ (rt0.c0)))) WHERE (x'48a7') ORDER BY ((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c4)) COLLATE BINARY, (((((((rt0.c3 IN (t1.c1)))AND(((rt0.c0) IS TRUE))))AND(((((((rt0.c3)OR(rt0.c3)))AND(t1.c1)))OR(rt0.c1)))))AND(((rt0.c1) NOT NULL)));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((((rt0.c4)<>(rt0.c3)))IS NOT((~ (rt0.c0)))) WHERE (((x'48a7')AND(CASE WHEN x'fa' THEN (+ ('UBMeW㝓')) WHEN ((rt0.c1) ISNULL) THEN (0.5037333027352051 IN (rt0.c1)) END))) ORDER BY ((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c4)) COLLATE BINARY, (((((((rt0.c3 IN (t1.c1)))AND(((rt0.c0) IS TRUE))))AND(((((((rt0.c3)OR(rt0.c3)))AND(t1.c1)))OR(rt0.c1)))))AND(((rt0.c1) NOT NULL))) INTERSECT SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((((rt0.c4)!=(rt0.c3)))IS NOT((~ (rt0.c0)))) WHERE ((- (UPPER(t1.c0)))) ORDER BY ((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c4)) COLLATE BINARY, (((((((rt0.c3 IN (t1.c1)))AND(((rt0.c0) IS TRUE))))AND(((((((rt0.c3)OR(rt0.c3)))AND(t1.c1)))OR(rt0.c1)))))AND(((rt0.c1) NOT NULL)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON ((((rt0.c4)!=(rt0.c3)))IS NOT((~ (rt0.c0)))) WHERE (x'48a7') ORDER BY ((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c4)) COLLATE BINARY, (((((((rt0.c3 IN (t1.c1)))AND(((rt0.c0) IS TRUE))))AND(((((((rt0.c3)OR(rt0.c3)))AND(t1.c1)))OR(rt0.c1)))))AND(((rt0.c1) NOT NULL)));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((((rt0.c4)<>(rt0.c3)))IS NOT((~ (rt0.c0)))) WHERE (((x'48a7')AND(CASE WHEN x'fa' THEN (+ ('UBMeW㝓')) WHEN ((rt0.c1) ISNULL) THEN (0.5037333027352051 IN (rt0.c1)) END))) ORDER BY ((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c4)) COLLATE BINARY, (((((((rt0.c3 IN (t1.c1)))AND(((rt0.c0) IS TRUE))))AND(((((((rt0.c3)OR(rt0.c3)))AND(t1.c1)))OR(rt0.c1)))))AND(((rt0.c1) NOT NULL))) INTERSECT SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((((rt0.c4)!=(rt0.c3)))IS NOT((~ (rt0.c0)))) WHERE ((- (UPPER(t1.c0)))) ORDER BY ((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c4)) COLLATE BINARY, (((((((rt0.c3 IN (t1.c1)))AND(((rt0.c0) IS TRUE))))AND(((((((rt0.c3)OR(rt0.c3)))AND(t1.c1)))OR(rt0.c1)))))AND(((rt0.c1) NOT NULL)));
SELECT MAX(rt0.c1) FROM rt0 WHERE ((((((+ (rt0.c2)))OR(NULL)))AND(((rt0.c0)+(rt0.c0)))));
SELECT DISTINCT MAX(rt0.c1) FROM rt0 WHERE ((((((+ (rt0.c2)))OR(NULL)))AND(((rt0.c0)+(rt0.c0)))));
SELECT MAX(rt0.c3) FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER))AND(rt0.c1)))AND(((rt0.c3)<(rt0.c1))))) ORDER BY CASE rt0.c3  WHEN rt0.c2 COLLATE NOCASE THEN ROUND(rt0.c1, rt0.c3) ELSE (rt0.c3 IN (rt0.c0)) END, '1513981300' ASC  NULLS FIRST;
SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER))AND(rt0.c1)))AND(((rt0.c3)<(rt0.c1))))) ORDER BY CASE rt0.c3  WHEN rt0.c2 COLLATE NOCASE THEN ROUND(rt0.c1, rt0.c3) ELSE (rt0.c3 IN (rt0.c0)) END, '1513981300' ASC  NULLS FIRST INTERSECT SELECT ALL MAX(rt0.c3) FROM rt0 WHERE (HEX(json_quote(rt0.c4))) ORDER BY CASE rt0.c3  WHEN rt0.c2 COLLATE NOCASE THEN ROUND(rt0.c1, rt0.c3) ELSE (rt0.c3 IN (rt0.c0)) END, '1513981300' ASC  NULLS FIRST;
SELECT ALL MAX(rt0.c1) FROM rt0, t1 WHERE (((rt0.c1)OR(t1.c0)) COLLATE RTRIM) ORDER BY (NOT (((0xffffffffe38b7c36)OR(NULL)))) DESC  NULLS LAST;
SELECT ALL MAX(rt0.c1) FROM rt0, t1 WHERE (((rt0.c1)OR(t1.c0)) COLLATE RTRIM) ORDER BY CAST(IFNULL(t1.c0, t1.c0) AS NUMERIC) ASC  NULLS LAST, '';
SELECT * FROM t1 WHERE (COALESCE((t1.c0 IN ()), CAST(t1.c0 AS INTEGER), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY (((x'', ((t1.c1)<=(t1.c0))))==((((((x'8df679d7')AND(t1.c0)))AND(t1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT ALL * FROM t1 WHERE (COALESCE((t1.c0 IN ()), CAST(t1.c0 AS INTEGER), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY (((x'', ((t1.c1)<=(t1.c0))))==((((((x'8df679d7')AND(t1.c0)))AND(t1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT * FROM t1 WHERE (COALESCE((t1.c0 IN ()), CAST(t1.c0 AS INTEGER), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY (((x'', ((t1.c1)<=(t1.c0))))==((((((x'8df679d7')AND(t1.c0)))AND(t1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT ALL * FROM t1 WHERE (COALESCE((t1.c0 IN ()), CAST(t1.c0 AS INTEGER), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY (((x'', ((t1.c1)<=(t1.c0))))==((((((x'8df679d7')AND(t1.c0)))AND(t1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT * FROM t1 WHERE (COALESCE(CASE t1.c0  WHEN t1.c1 THEN x'62' ELSE t1.c0 END, (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0))), (+ (t1.c0)), t1.c1));
SELECT DISTINCT * FROM t1 WHERE (COALESCE(CASE t1.c0  WHEN t1.c1 THEN x'62' ELSE t1.c0 END, (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0))), (+ (t1.c0)), t1.c1)) ORDER BY NULL LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY NULL LIMIT 0x0;
SELECT * FROM t1 WHERE (COALESCE(CASE t1.c0  WHEN t1.c1 THEN x'62' ELSE t1.c0 END, (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0))), (+ (t1.c0)), t1.c1));
SELECT DISTINCT * FROM t1 WHERE (COALESCE(CASE t1.c0  WHEN t1.c1 THEN x'62' ELSE t1.c0 END, (((t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0)) AND ((t1.c1, t1.c0))), (+ (t1.c0)), t1.c1)) ORDER BY NULL LIMIT 0 INTERSECT SELECT DISTINCT * FROM t1 WHERE (t1.c1) ORDER BY NULL LIMIT 0x0;
SELECT ALL MAX(rt0.c1) FROM t1, rt0 WHERE (((t1.c0 IN (rt0.c3, rt0.c4)) IN (((rt0.c1)IS(rt0.c2)))));
SELECT MAX(rt0.c1) FROM t1, rt0 WHERE (((((t1.c0 IN (rt0.c3)) IN (((rt0.c1)IS(rt0.c2)))))AND(((((((((rt0.c3)AND(t1.c0)))AND(x'')))AND(rt0.c2)))*(t1.c1 COLLATE NOCASE)))));
SELECT MIN(rt0.c4) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2))) NOTNULL)) ORDER BY CASE (((rt0.c2, rt0.c3))>((rt0.c1, rt0.c0)))  WHEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END THEN ((((rt0.c3)OR('dZ	''{Z')))AND(-2.47367585E8)) WHEN (((x'', rt0.c4, rt0.c4))<((rt0.c1, rt0.c3, rt0.c1))) THEN rt0.c3 WHEN rt0.c2 THEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)) END DESC;
SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2))) NOTNULL))AND(((((('-1171418807') BETWEEN (rt0.c4) AND (rt0.c4))))<((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))))))) ORDER BY (x'' IN (rt0.c4)) LIMIT 0X4 INTERSECT SELECT DISTINCT MIN(rt0.c4) FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((+ (0.939376013043934))) AND ((x'' IN ())))) ORDER BY (x'' IN (rt0.c4)) LIMIT 0x4;
SELECT * FROM rt0 WHERE (((IFNULL(rt0.c0, rt0.c1))OR(((rt0.c0) NOTNULL)))) ORDER BY ((CASE rt0.c4  WHEN rt0.c4 THEN '964413353' END)!=(((rt0.c1) ISNULL))) ASC, '1563864889' DESC, ((LOWER(rt0.c2))%(rt0.c2 COLLATE RTRIM));
SELECT DISTINCT * FROM rt0 WHERE (((((IFNULL(rt0.c0, rt0.c1))OR(((rt0.c0) NOTNULL))))AND((((rt0.c3 COLLATE NOCASE))=((CAST(rt0.c3 AS BLOB))))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN rt0.c1 END)<=(CAST(rt0.c3 AS REAL))) DESC, CASE ((rt0.c4)<<(''))  WHEN '-526905407' THEN CAST(rt0.c4 AS TEXT) WHEN ((((rt0.c3)AND(rt0.c4)))AND(rt0.c0)) THEN CAST('1480787630' AS TEXT) END  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0 IN ()))IS NOT(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN rt0.c1 END)<=(CAST(rt0.c3 AS REAL))) DESC, CASE ((rt0.c4)<<(''))  WHEN '-526905407' THEN CAST(rt0.c4 AS TEXT) WHEN ((((rt0.c3)AND(rt0.c4)))AND(rt0.c0)) THEN CAST('1480787630' AS TEXT) END  NULLS LAST LIMIT 0;
SELECT * FROM rt0 WHERE (((IFNULL(rt0.c0, rt0.c1))OR(((rt0.c0) NOTNULL)))) ORDER BY ((CASE rt0.c4  WHEN rt0.c4 THEN '964413353' END)!=(((rt0.c1) ISNULL))) ASC, '1563864889' DESC, ((LOWER(rt0.c2))%(rt0.c2 COLLATE RTRIM));
SELECT DISTINCT * FROM rt0 WHERE (((((IFNULL(rt0.c0, rt0.c1))OR(((rt0.c0) NOTNULL))))AND((((rt0.c3 COLLATE NOCASE))=((CAST(rt0.c3 AS BLOB))))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN rt0.c1 END)<=(CAST(rt0.c3 AS REAL))) DESC, CASE ((rt0.c4)<<(''))  WHEN '-526905407' THEN CAST(rt0.c4 AS TEXT) WHEN ((((rt0.c3)AND(rt0.c4)))AND(rt0.c0)) THEN CAST('1480787630' AS TEXT) END  NULLS LAST LIMIT 0x0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0 IN ()))IS NOT(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN rt0.c1 END)<=(CAST(rt0.c3 AS REAL))) DESC, CASE ((rt0.c4)<<(''))  WHEN '-526905407' THEN CAST(rt0.c4 AS TEXT) WHEN ((((rt0.c3)AND(rt0.c4)))AND(rt0.c0)) THEN CAST('1480787630' AS TEXT) END  NULLS LAST LIMIT 0;
SELECT ALL * FROM t1, rt0 WHERE ((((((((+ (t1.c1)))OR(((rt0.c1)AND(rt0.c4)))))OR(rt0.c3)))OR((- (rt0.c3)))));
SELECT DISTINCT * FROM t1, rt0 WHERE ((((((((+ (t1.c1)))OR(((rt0.c1)AND(rt0.c4)))))OR(rt0.c3)))OR((- (rt0.c3)))));
SELECT ALL * FROM t1, rt0 WHERE ((((((((+ (t1.c1)))OR(((rt0.c1)AND(rt0.c4)))))OR(rt0.c3)))OR((- (rt0.c3)))));
SELECT DISTINCT * FROM t1, rt0 WHERE ((((((((+ (t1.c1)))OR(((rt0.c1)AND(rt0.c4)))))OR(rt0.c3)))OR((- (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'1adf') NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'1adf') NOTNULL))AND((((rt0.c2))>((rt0.c1))) COLLATE NOCASE))) LIMIT 0 INTERSECT SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) LIMIT 0;
SELECT ALL * FROM rt0 WHERE (ABS('!?Y')) ORDER BY json_quote(((((((((rt0.c4)OR(rt0.c2)))OR(0X1f01fa7a)))OR(rt0.c3)))OR(rt0.c4))), rt0.c1 DESC;
SELECT DISTINCT * FROM rt0 WHERE (((ABS('!?Y'))AND(rt0.c1))) ORDER BY json_quote(((((((((rt0.c4)OR(rt0.c2)))OR(0x1f01fa7a)))OR(rt0.c3)))OR(rt0.c4))), rt0.c1 DESC LIMIT 0X0;
SELECT ALL * FROM rt0 WHERE (ABS('!?Y')) ORDER BY json_quote(((((((((rt0.c4)OR(rt0.c2)))OR(0X1f01fa7a)))OR(rt0.c3)))OR(rt0.c4))), rt0.c1 DESC;
SELECT DISTINCT * FROM rt0 WHERE (((ABS('!?Y'))AND(rt0.c1))) ORDER BY json_quote(((((((((rt0.c4)OR(rt0.c2)))OR(0x1f01fa7a)))OR(rt0.c3)))OR(rt0.c4))), rt0.c1 DESC LIMIT 0X0;
SELECT ALL * FROM t1 WHERE (((((CASE WHEN t1.c1 THEN t1.c1 END)AND(t1.c0 COLLATE BINARY)))AND(t1.c1)));
SELECT ALL * FROM t1 WHERE (((((((CASE WHEN t1.c1 THEN t1.c1 END)AND(t1.c0 COLLATE BINARY)))AND(t1.c1)))AND(t1.c1))) ORDER BY (((t1.c1 IN ()))=((t1.c0 IN (t1.c1)))), UPPER(0.5104132513913813);
SELECT ALL * FROM t1 WHERE (((((CASE WHEN t1.c1 THEN t1.c1 END)AND(t1.c0 COLLATE BINARY)))AND(t1.c1)));
SELECT ALL * FROM t1 WHERE (((((((CASE WHEN t1.c1 THEN t1.c1 END)AND(t1.c0 COLLATE BINARY)))AND(t1.c1)))AND(t1.c1))) ORDER BY (((t1.c1 IN ()))=((t1.c0 IN (t1.c1)))), UPPER(0.5104132513913813);
SELECT MAX(t1.c1) FROM t1 WHERE (LAST_INSERT_ROWID()) ORDER BY ((((((((((t1.c0)OR(t1.c1)))OR(0.7562059205549607)))OR(t1.c0)))OR(((t1.c1) ISNULL))))OR(CAST(t1.c0 AS REAL))) ASC  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((LAST_INSERT_ROWID())AND(LIKELIHOOD(CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END, (('') NOT NULL))))) ORDER BY ((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ())  NULLS FIRST INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (CASE RTRIM(t1.c0)  WHEN '1' THEN (t1.c0 IN (t1.c0)) ELSE ((t1.c1) ISNULL) END) ORDER BY ((((t1.c1)) BETWEEN ((t1.c0)) AND ((t1.c1))) IN ())  NULLS FIRST;
SELECT * FROM t1, rt0 WHERE ((UNLIKELY(rt0.c1) IN ())) ORDER BY (rt0.c4 IN ()) COLLATE NOCASE, t1.c1  NULLS FIRST;
SELECT * FROM t1, rt0 WHERE ((((UNLIKELY(rt0.c1) IN ()))AND(((rt0.c4)==(t1.c1)) COLLATE BINARY))) ORDER BY (rt0.c4 IN ()) COLLATE NOCASE, t1.c1  NULLS FIRST LIMIT 0;
SELECT * FROM t1, rt0 WHERE ((UNLIKELY(rt0.c1) IN ())) ORDER BY (rt0.c4 IN ()) COLLATE NOCASE, t1.c1  NULLS FIRST;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((((rt0.c3, rt0.c0, rt0.c0, rt0.c2, rt0.c1))=((rt0.c1, rt0.c4, rt0.c0, rt0.c1, rt0.c3))) IN ())) ORDER BY (((rt0.c3 IN ())) NOT NULL), (((NULL, INSTR(rt0.c2, rt0.c0), CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 END))<((((rt0.c3) ISNULL), ((rt0.c2)IS(0Xadf6d66)), ((rt0.c0)AND(rt0.c2))))) ASC;
SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (((((rt0.c3, rt0.c0, rt0.c0, rt0.c2, rt0.c1))=((rt0.c1, rt0.c4, rt0.c0, rt0.c1, rt0.c3))) IN ())) ORDER BY (((rt0.c3 IN ())) NOT NULL), (((NULL, INSTR(rt0.c2, rt0.c0), CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 END))<((((rt0.c3) ISNULL), ((rt0.c2)IS(182414694)), ((rt0.c0)AND(rt0.c2))))) ASC INTERSECT SELECT ALL MIN(rt0.c3) FROM rt0 WHERE (LIKELY(DISTINCT rt0.c2) COLLATE NOCASE) ORDER BY (((rt0.c3 IN ())) NOT NULL), (((NULL, INSTR(rt0.c2, rt0.c0), CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 END))<((((rt0.c3) ISNULL), ((rt0.c2)IS(0Xadf6d66)), ((rt0.c0)AND(rt0.c2))))) ASC;
SELECT ALL * FROM t1 WHERE (CAST((t1.c0 IN (0.6047933236253945)) AS REAL));
SELECT ALL * FROM t1 WHERE (CAST((t1.c0 IN (0.6047933236253945)) AS REAL)) LIMIT 4;
SELECT ALL * FROM t1 WHERE (CAST((t1.c0 IN (0.6047933236253945)) AS REAL));
SELECT ALL * FROM t1 WHERE (CAST((t1.c0 IN (0.6047933236253945)) AS REAL)) LIMIT 4;
SELECT COUNT(*) FROM t1, rt0 WHERE (((INSTR(rt0.c1, rt0.c3)) ISNULL));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((INSTR(rt0.c1, rt0.c3)) ISNULL)) ORDER BY (((t1.c0, t1.c1)) BETWEEN ((((rt0.c0) NOT NULL), CAST(NULL AS BLOB))) AND ((((t1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c2) IS TRUE))))  NULLS LAST, ((((t1.c0)==(rt0.c3)))AND(rt0.c2)) ASC  NULLS LAST LIMIT 2;
SELECT ALL * FROM t1 WHERE ((((((t1.c1, NULL, t1.c1, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((x'f3', t1.c0, t1.c1, -1837640704, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c0, t1.c1, t1.c1, t1.c1))))>=((t1.c1 IN (t1.c0))))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) ISNULL), (((t1.c1, t1.c0)) NOT BETWEEN ((CAST(t1.c1 AS TEXT), t1.c1)) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, ((((((t1.c1)OR(t1.c0)))AND('உ	?')))AND(t1.c1))))) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, NULL, t1.c1, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((x'f3', t1.c0, t1.c1, 0xffffffff9277d400, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c0, t1.c1, t1.c1, t1.c1))))>=((t1.c1 IN (t1.c0))))) ORDER BY CAST(t1.c1 AS REAL) COLLATE BINARY, x'' DESC, ((NULL COLLATE BINARY)||((NOT (t1.c1)))) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE ((((((t1.c1, NULL, t1.c1, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((x'f3', t1.c0, t1.c1, -1837640704, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c0, t1.c1, t1.c1, t1.c1))))>=((t1.c1 IN (t1.c0))))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) ISNULL), (((t1.c1, t1.c0)) NOT BETWEEN ((CAST(t1.c1 AS TEXT), t1.c1)) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, ((((((t1.c1)OR(t1.c0)))AND('உ	?')))AND(t1.c1))))) ASC;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1, NULL, t1.c1, t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((x'f3', t1.c0, t1.c1, 0xffffffff9277d400, t1.c0, t1.c1)) AND ((t1.c1, t1.c0, t1.c0, t1.c1, t1.c1, t1.c1))))>=((t1.c1 IN (t1.c0))))) ORDER BY CAST(t1.c1 AS REAL) COLLATE BINARY, x'' DESC, ((NULL COLLATE BINARY)||((NOT (t1.c1)))) DESC  NULLS LAST LIMIT 1;
SELECT ALL * FROM t1 WHERE (CASE ((t1.c1) IS TRUE)  WHEN ((((((t1.c1)OR(t1.c0)))AND(x'21c1')))AND(t1.c0)) THEN (~ (t1.c1)) WHEN ((t1.c0)<>(t1.c0)) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 END ELSE (t1.c1 IN (t1.c1, t1.c1)) END);
SELECT ALL * FROM t1 WHERE (CASE ((t1.c1) IS TRUE)  WHEN ((((((t1.c1)OR(t1.c0)))AND(x'21c1')))AND(t1.c0)) THEN (~ (t1.c1)) WHEN ((t1.c0)<(t1.c0)) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 END ELSE (t1.c1 IN (t1.c1, t1.c1)) END);
SELECT ALL * FROM t1 WHERE (CASE ((t1.c1) IS TRUE)  WHEN ((((((t1.c1)OR(t1.c0)))AND(x'21c1')))AND(t1.c0)) THEN (~ (t1.c1)) WHEN ((t1.c0)<>(t1.c0)) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 END ELSE (t1.c1 IN (t1.c1, t1.c1)) END);
SELECT ALL * FROM t1 WHERE (CASE ((t1.c1) IS TRUE)  WHEN ((((((t1.c1)OR(t1.c0)))AND(x'21c1')))AND(t1.c0)) THEN (~ (t1.c1)) WHEN ((t1.c0)<(t1.c0)) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c0 END ELSE (t1.c1 IN (t1.c1, t1.c1)) END);
SELECT MIN(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE RTRIM) IS FALSE));
SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE (((t1.c0 COLLATE RTRIM) IS FALSE)) ORDER BY LTRIM((~ (t1.c0)), MIN('JGW4L', t1.c0, t1.c1, t1.c1, t1.c1)) DESC LIMIT 2 INTERSECT SELECT DISTINCT MIN(t1.c1) FROM t1 WHERE ((((t1.c1 IN (t1.c0)))<<((+ (t1.c0))))) ORDER BY LTRIM((~ (t1.c0)), MIN('JGW4L', t1.c0, t1.c1, t1.c1, t1.c1)) DESC LIMIT 2;
SELECT MAX(t1.c1) FROM rt0, t1 WHERE (CASE WHEN CAST(t1.c0 AS NUMERIC) THEN (t1.c1 IN (rt0.c1, rt0.c3)) WHEN ((((((t1.c0)OR(t1.c0)))AND(0.08195047683486933)))AND(rt0.c4)) THEN CAST(NULL AS NUMERIC) END) ORDER BY NULL, (((((('<')AND(0.511389928780931)))OR(TRIM(rt0.c2, t1.c0))))AND((((rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c1, t1.c0)) AND ((t1.c0, t1.c0))))) DESC;
SELECT MAX(t1.c1) FROM rt0, t1 WHERE (((CASE WHEN CAST(t1.c0 AS NUMERIC) THEN (t1.c1 IN (rt0.c1, rt0.c3)) WHEN ((((((t1.c0)OR(t1.c0)))AND(0.08195047683486933)))AND(rt0.c4)) THEN CAST(NULL AS NUMERIC) END)AND((- (IFNULL(rt0.c3, rt0.c4)))))) ORDER BY (rt0.c2 IN ()) DESC, ((TYPEOF(DISTINCT rt0.c0)) IS FALSE) DESC, ((t1.c1)<<(CASE WHEN rt0.c1 THEN rt0.c1 END))  NULLS LAST, (NOT (((t1.c0) IS TRUE))) DESC LIMIT 1;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((((((((NOT (NULL)))OR(CAST(t1.c1 AS INTEGER))))OR(((t1.c0)|(t1.c0)))))AND((- (t1.c1)))))OR(CAST(t1.c1 AS INTEGER)))) ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)) AS BLOB) ASC  NULLS FIRST, (((t1.c1, t1.c1)) BETWEEN ((((t1.c0)LIKE(t1.c0)), CASE t1.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN -3.07936728E8 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)) AND ((CAST(t1.c1 AS NUMERIC), (- (t1.c1)))));
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE ((((((((((NOT (NULL)))OR(CAST(t1.c1 AS INTEGER))))OR(((t1.c0)|(t1.c0)))))AND((- (t1.c1)))))OR(CAST(t1.c1 AS INTEGER)))) ORDER BY (((((t1.c1)IS(t1.c0))))<=((t1.c0))) ASC, CAST(((t1.c1)>(t1.c1)) AS REAL) ASC  NULLS LAST, ((((t1.c1)IS NOT(t1.c1)))&((t1.c1 IN (t1.c0, t1.c1, t1.c1)))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (t1.c0) ORDER BY (((((t1.c1)IS(t1.c0))))<=((t1.c0))) ASC, CAST(((t1.c1)>(t1.c1)) AS REAL) ASC  NULLS LAST, ((((t1.c1)IS NOT(t1.c1)))&((t1.c1 IN (t1.c0, t1.c1, t1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON ((NULL) IS FALSE) WHERE ((((((((t1.c0)OR(rt0.c0)))AND(rt0.c2))))>=(((((x'3637'))<=((rt0.c1)))))));
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON ((NULL) IS FALSE) WHERE ((((((((((t1.c0)OR(rt0.c0)))AND(rt0.c2))))==(((((x'3637'))<=((rt0.c1)))))))AND(CAST('382557616' AS NUMERIC))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON ((NULL) IS FALSE) WHERE ((((((((t1.c0)OR(rt0.c0)))AND(rt0.c2))))>=(((((x'3637'))<=((rt0.c1)))))));
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON ((NULL) IS FALSE) WHERE ((((((((((t1.c0)OR(rt0.c0)))AND(rt0.c2))))==(((((x'3637'))<=((rt0.c1)))))))AND(CAST('382557616' AS NUMERIC))));
SELECT * FROM t1 WHERE ((NOT (t1.c0 COLLATE RTRIM)));
SELECT DISTINCT * FROM t1 WHERE ((((NOT (t1.c0 COLLATE RTRIM)))AND(((t1.c0) NOTNULL)))) ORDER BY ((((0.1891353049650195) BETWEEN (t1.c1) AND (t1.c1)))>=(((t1.c1) BETWEEN (t1.c0) AND ('-1215982477')))) ASC, ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END) ISNULL) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- ((('씡r')%(t1.c1))))) ORDER BY ((((0.1891353049650195) BETWEEN (t1.c1) AND (t1.c1)))>=(((t1.c1) BETWEEN (t1.c0) AND ('-1215982477')))) ASC, ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END) ISNULL) ASC  NULLS LAST;
SELECT * FROM t1 WHERE ((NOT (t1.c0 COLLATE RTRIM)));
SELECT DISTINCT * FROM t1 WHERE ((((NOT (t1.c0 COLLATE RTRIM)))AND(((t1.c0) NOTNULL)))) ORDER BY ((((0.1891353049650195) BETWEEN (t1.c1) AND (t1.c1)))>=(((t1.c1) BETWEEN (t1.c0) AND ('-1215982477')))) ASC, ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END) ISNULL) ASC  NULLS LAST INTERSECT SELECT DISTINCT * FROM t1 WHERE ((- ((('씡r')%(t1.c1))))) ORDER BY ((((0.1891353049650195) BETWEEN (t1.c1) AND (t1.c1)))>=(((t1.c1) BETWEEN (t1.c0) AND ('-1215982477')))) ASC, ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE t1.c1 END) ISNULL) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (CASE ((t1.c0)IS NOT(t1.c0))  WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) THEN t1.c0 WHEN ((t1.c0)<=(t1.c0)) THEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((t1.c1) IS FALSE) THEN t1.c0 COLLATE RTRIM WHEN HEX(t1.c1) THEN (t1.c1 IN ()) ELSE CAST(t1.c1 AS NUMERIC) END);
SELECT * FROM t1 WHERE (CASE ((t1.c0)IS NOT(t1.c0))  WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) THEN t1.c0 WHEN ((t1.c0)<=(t1.c0)) THEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((t1.c1) IS FALSE) THEN t1.c0 COLLATE RTRIM WHEN HEX(t1.c1) THEN (t1.c1 IN ()) ELSE CAST(t1.c1 AS NUMERIC) END) ORDER BY (1984973342 IN (NULLIF(t1.c1, t1.c1))), (((t1.c0)) NOT BETWEEN (('101124129')) AND ((((t1.c1)%(t1.c1))))) ASC  NULLS FIRST, CAST(t1.c0 AS BLOB)  NULLS FIRST LIMIT 0;
SELECT * FROM t1 WHERE (CASE ((t1.c0)IS NOT(t1.c0))  WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) THEN t1.c0 WHEN ((t1.c0)<=(t1.c0)) THEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((t1.c1) IS FALSE) THEN t1.c0 COLLATE RTRIM WHEN HEX(t1.c1) THEN (t1.c1 IN ()) ELSE CAST(t1.c1 AS NUMERIC) END);
SELECT * FROM t1 WHERE (CASE ((t1.c0)IS NOT(t1.c0))  WHEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) THEN t1.c0 WHEN ((t1.c0)<=(t1.c0)) THEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END WHEN ((t1.c1) IS FALSE) THEN t1.c0 COLLATE RTRIM WHEN HEX(t1.c1) THEN (t1.c1 IN ()) ELSE CAST(t1.c1 AS NUMERIC) END) ORDER BY (1984973342 IN (NULLIF(t1.c1, t1.c1))), (((t1.c0)) NOT BETWEEN (('101124129')) AND ((((t1.c1)%(t1.c1))))) ASC  NULLS FIRST, CAST(t1.c0 AS BLOB)  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0, t1 WHERE (CAST(SUBSTR(rt0.c4, rt0.c4) AS REAL)) ORDER BY CAST(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END AS TEXT);
SELECT DISTINCT * FROM rt0, t1 WHERE (((CAST(SUBSTR(rt0.c4, rt0.c4) AS REAL))AND(((rt0.c2) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((~ (rt0.c2))))))) ORDER BY json_array_length(((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(t1.c1)))AND(rt0.c0)), (t1.c1 IN ())) DESC  NULLS LAST, ((CAST(rt0.c4 AS NUMERIC))|((+ (x''))))  NULLS FIRST;
SELECT ALL * FROM rt0, t1 WHERE (CAST(SUBSTR(rt0.c4, rt0.c4) AS REAL)) ORDER BY CAST(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END AS TEXT);
SELECT DISTINCT * FROM rt0, t1 WHERE (((CAST(SUBSTR(rt0.c4, rt0.c4) AS REAL))AND(((rt0.c2) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((~ (rt0.c2))))))) ORDER BY json_array_length(((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(t1.c1)))AND(rt0.c0)), (t1.c1 IN ())) DESC  NULLS LAST, ((CAST(rt0.c4 AS NUMERIC))|((+ (x''))))  NULLS FIRST;
SELECT * FROM t1, rt0 WHERE (0xffffffff9d65d7ab);
SELECT ALL * FROM t1, rt0 WHERE (((0xffffffff9d65d7ab)AND(((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))+(((rt0.c0)<<(rt0.c2))))))) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c2)IS(rt0.c2))) AND (((t1.c0)=(rt0.c4)))) DESC, HEX(CAST(rt0.c3 AS TEXT)), (((rt0.c0)%(0.11397726557772359)) IN (CAST(t1.c1 AS INTEGER))) DESC LIMIT 0 INTERSECT SELECT ALL * FROM t1, rt0 WHERE (CASE WHEN 530780113 THEN ((rt0.c1) ISNULL) WHEN ((((((rt0.c4)AND('{D}')))OR(rt0.c2)))OR(t1.c1)) THEN ((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))AND(t1.c1)) ELSE (((t1.c1))>((NULL))) END) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c2)IS(rt0.c2))) AND (((t1.c0)==(rt0.c4)))) DESC, HEX(CAST(rt0.c3 AS TEXT)), (((rt0.c0)%(0.11397726557772359)) IN (CAST(t1.c1 AS INTEGER))) DESC LIMIT 0;
SELECT * FROM t1, rt0 WHERE (0xffffffff9d65d7ab);
SELECT ALL * FROM t1, rt0 WHERE (((0xffffffff9d65d7ab)AND(((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))+(((rt0.c0)<<(rt0.c2))))))) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c2)IS(rt0.c2))) AND (((t1.c0)=(rt0.c4)))) DESC, HEX(CAST(rt0.c3 AS TEXT)), (((rt0.c0)%(0.11397726557772359)) IN (CAST(t1.c1 AS INTEGER))) DESC LIMIT 0 INTERSECT SELECT ALL * FROM t1, rt0 WHERE (CASE WHEN 530780113 THEN ((rt0.c1) ISNULL) WHEN ((((((rt0.c4)AND('{D}')))OR(rt0.c2)))OR(t1.c1)) THEN ((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))AND(t1.c1)) ELSE (((t1.c1))>((NULL))) END) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c2)IS(rt0.c2))) AND (((t1.c0)==(rt0.c4)))) DESC, HEX(CAST(rt0.c3 AS TEXT)), (((rt0.c0)%(0.11397726557772359)) IN (CAST(t1.c1 AS INTEGER))) DESC LIMIT 0;
SELECT COUNT(*) FROM t1 WHERE (((((((((UPPER(t1.c1))OR(((t1.c1) IS TRUE))))OR((NOT (t1.c1)))))AND(((((t1.c0)AND(NULL)))OR(t1.c0)))))OR(((((t1.c0)OR(t1.c0)))AND(t1.c0))))) ORDER BY (((((((t1.c1 IN ()))AND(t1.c0)))OR(((t1.c1) NOT NULL))))OR((~ (t1.c0)))) DESC, ((((t1.c1)IS(t1.c0)))OR(LOWER(t1.c0))) DESC, CAST(NULL COLLATE BINARY AS TEXT) DESC;
SELECT COUNT(*) FROM t1 WHERE (((((((((UPPER(t1.c1))OR(((t1.c1) IS TRUE))))OR((NOT (t1.c1)))))AND(((((t1.c0)AND(NULL)))OR(t1.c0)))))OR(((((t1.c0)OR(t1.c0)))AND(t1.c0))))) ORDER BY (((((((t1.c1 IN ()))AND(t1.c0)))OR(((t1.c1) NOT NULL))))OR((~ (t1.c0)))) DESC, ((((t1.c1)IS(t1.c0)))OR(LOWER(t1.c0))) DESC, CAST(NULL COLLATE BINARY AS TEXT) DESC LIMIT 0x3;
SELECT * FROM t1, rt0 WHERE ((((rt0.c4) BETWEEN (rt0.c0) AND (0.2249723359072987)) IN (((((rt0.c0)OR(t1.c1)))AND(t1.c1)), CAST(t1.c1 AS BLOB))));
SELECT * FROM t1, rt0 WHERE ((((((rt0.c4) BETWEEN (rt0.c0) AND (0.2249723359072987)) IN (((((rt0.c0)OR(t1.c1)))AND(t1.c1)))))AND(((CASE t1.c1  WHEN t1.c1 THEN rt0.c3 WHEN rt0.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c3 END) NOT NULL)))) LIMIT 0X2 INTERSECT SELECT ALL * FROM t1, rt0 WHERE (CAST(rt0.c3 AS BLOB)) LIMIT 2;
SELECT * FROM t1, rt0 WHERE ((((rt0.c4) BETWEEN (rt0.c0) AND (0.2249723359072987)) IN (((((rt0.c0)OR(t1.c1)))AND(t1.c1)), CAST(t1.c1 AS BLOB))));
SELECT * FROM t1, rt0 WHERE ((((((rt0.c4) BETWEEN (rt0.c0) AND (0.2249723359072987)) IN (((((rt0.c0)OR(t1.c1)))AND(t1.c1)))))AND(((CASE t1.c1  WHEN t1.c1 THEN rt0.c3 WHEN rt0.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c3 END) NOT NULL)))) LIMIT 0X2 INTERSECT SELECT ALL * FROM t1, rt0 WHERE (CAST(rt0.c3 AS BLOB)) LIMIT 2;
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON ((((rt0.c3)IS NOT(rt0.c4))) NOT BETWEEN (((((((rt0.c1)OR(1708274310)))AND(t1.c0)))AND(rt0.c2))) AND (((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))) WHERE (CASE ((rt0.c0)*(rt0.c2))  WHEN ((rt0.c4)IS NOT(t1.c0)) THEN rt0.c4 END) ORDER BY (NOT (((t1.c1)LIKE(rt0.c1)))), (((((((rt0.c3))<=((rt0.c1))))AND(((rt0.c1)|(rt0.c1)))))OR(((t1.c0)+(rt0.c0)))) DESC;
SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((rt0.c3)IS NOT(rt0.c4))) NOT BETWEEN (((((((rt0.c1)OR(1708274310)))AND(t1.c0)))AND(rt0.c2))) AND (((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))) WHERE (((CASE ((rt0.c0)*(rt0.c2))  WHEN ((rt0.c4)IS NOT(t1.c0)) THEN rt0.c4 END)AND(CASE WHEN (((t1.c0, rt0.c4)) NOT BETWEEN ((rt0.c4, t1.c1)) AND ((rt0.c1, rt0.c1))) THEN CAST('' AS TEXT) WHEN rt0.c4 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)) THEN CAST(t1.c1 AS NUMERIC) WHEN LIKELY(rt0.c2) THEN '-77118020' ELSE (~ (rt0.c0)) END))) ORDER BY (NOT (((t1.c1)LIKE(rt0.c1)))), (((((((rt0.c3))<=((rt0.c1))))AND(((rt0.c1)|(rt0.c1)))))OR(((t1.c0)+(rt0.c0)))) DESC LIMIT 2;
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON ((((rt0.c3)IS NOT(rt0.c4))) NOT BETWEEN (((((((rt0.c1)OR(1708274310)))AND(t1.c0)))AND(rt0.c2))) AND (((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))) WHERE (CASE ((rt0.c0)*(rt0.c2))  WHEN ((rt0.c4)IS NOT(t1.c0)) THEN rt0.c4 END) ORDER BY (NOT (((t1.c1)LIKE(rt0.c1)))), (((((((rt0.c3))<=((rt0.c1))))AND(((rt0.c1)|(rt0.c1)))))OR(((t1.c0)+(rt0.c0)))) DESC;
SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((rt0.c3)IS NOT(rt0.c4))) NOT BETWEEN (((((((rt0.c1)OR(1708274310)))AND(t1.c0)))AND(rt0.c2))) AND (((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))) WHERE (((CASE ((rt0.c0)*(rt0.c2))  WHEN ((rt0.c4)IS NOT(t1.c0)) THEN rt0.c4 END)AND(CASE WHEN (((t1.c0, rt0.c4)) NOT BETWEEN ((rt0.c4, t1.c1)) AND ((rt0.c1, rt0.c1))) THEN CAST('' AS TEXT) WHEN rt0.c4 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)) THEN CAST(t1.c1 AS NUMERIC) WHEN LIKELY(rt0.c2) THEN '-77118020' ELSE (~ (rt0.c0)) END))) ORDER BY (NOT (((t1.c1)LIKE(rt0.c1)))), (((((((rt0.c3))<=((rt0.c1))))AND(((rt0.c1)|(rt0.c1)))))OR(((t1.c0)+(rt0.c0)))) DESC LIMIT 2;
SELECT MAX(t1.c0) FROM t1, rt0 WHERE (((rt0.c3) NOT NULL) COLLATE RTRIM) ORDER BY (((((rt0.c1, t1.c1, rt0.c3, 0Xffffffffa9492b1a))<=((rt0.c1, t1.c1, rt0.c2, rt0.c0))))>=(((rt0.c3) BETWEEN (0.5157896416377543) AND (rt0.c4)))) ASC, 0.2318739897265033;
SELECT ALL MAX(t1.c0) FROM t1, rt0 WHERE (((((rt0.c3) NOT NULL) COLLATE RTRIM)AND((((t1.c0) NOT BETWEEN (1895184658) AND (rt0.c2)) IN ())))) ORDER BY (((((rt0.c1, t1.c1, rt0.c3, 0Xffffffffa9492b1a))<=((rt0.c1, t1.c1, rt0.c2, rt0.c0))))>=(((rt0.c3) BETWEEN (0.5157896416377543) AND (rt0.c4)))) ASC, 0.2318739897265033 INTERSECT SELECT MAX(t1.c0) FROM t1, rt0 WHERE (((0.5092417314104782) NOT BETWEEN ((t1.c0 IN ())) AND (''))) ORDER BY (((((rt0.c1, t1.c1, rt0.c3, -1454822630))<=((rt0.c1, t1.c1, rt0.c2, rt0.c0))))>=(((rt0.c3) BETWEEN (0.5157896416377543) AND (rt0.c4)))) ASC, 0.2318739897265033;
SELECT * FROM t1 CROSS JOIN rt0 ON ((((((((((x'24')/(t1.c0)))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END)))AND(ABS(DISTINCT rt0.c0))))AND(((0xfffffffff5d1b884) IS FALSE))))OR(((((((NULL)OR(rt0.c0)))AND(t1.c0)))OR(rt0.c4)))) WHERE ('-729575157') ORDER BY ((((((((rt0.c2)-(rt0.c4)))AND(0.4040331495859746)))AND(((rt0.c0)IS(t1.c1)))))OR((- (rt0.c3))))  NULLS FIRST;
SELECT ALL * FROM t1 CROSS JOIN rt0 ON ((((((((((x'24')/(t1.c0)))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END)))AND(ABS(DISTINCT rt0.c0))))AND(((-170805116) IS FALSE))))OR(((((((NULL)OR(rt0.c0)))AND(t1.c0)))OR(rt0.c4)))) WHERE ('-729575157') ORDER BY CAST(t1.c0 AS TEXT) LIMIT 0;
SELECT * FROM t1 CROSS JOIN rt0 ON ((((((((((x'24')/(t1.c0)))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END)))AND(ABS(DISTINCT rt0.c0))))AND(((0xfffffffff5d1b884) IS FALSE))))OR(((((((NULL)OR(rt0.c0)))AND(t1.c0)))OR(rt0.c4)))) WHERE ('-729575157') ORDER BY ((((((((rt0.c2)-(rt0.c4)))AND(0.4040331495859746)))AND(((rt0.c0)IS(t1.c1)))))OR((- (rt0.c3))))  NULLS FIRST;
SELECT ALL * FROM t1 CROSS JOIN rt0 ON ((((((((((x'24')/(t1.c0)))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END)))AND(ABS(DISTINCT rt0.c0))))AND(((-170805116) IS FALSE))))OR(((((((NULL)OR(rt0.c0)))AND(t1.c0)))OR(rt0.c4)))) WHERE ('-729575157') ORDER BY CAST(t1.c0 AS TEXT) LIMIT 0;
SELECT ALL MAX(rt0.c4) FROM t1, rt0 WHERE (x'');
SELECT DISTINCT MAX(rt0.c4) FROM t1, rt0 WHERE (x'') ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN t1.c0 WHEN rt0.c1 THEN t1.c1 END) NOTNULL)  NULLS LAST, ((((((t1.c0)OR(t1.c1)))OR(rt0.c1))) NOT NULL) ASC  NULLS FIRST, ((((rt0.c1) ISNULL)) BETWEEN (NULL) AND ((~ (t1.c0)))) ASC LIMIT 0 INTERSECT SELECT DISTINCT MAX(rt0.c4) FROM t1, rt0 WHERE ((((((('1913787956')OR(rt0.c0)))AND(rt0.c0)))>>(((rt0.c0)==(x'196303'))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN t1.c0 WHEN rt0.c1 THEN t1.c1 END) NOTNULL)  NULLS LAST, ((((((t1.c0)OR(t1.c1)))OR(rt0.c1))) NOT NULL) ASC  NULLS FIRST, ((((rt0.c1) ISNULL)) BETWEEN (NULL) AND ((~ (t1.c0)))) ASC LIMIT 0x0;
SELECT MAX(t1.c0) FROM rt0, t1 WHERE (NULL);
SELECT MAX(t1.c0) FROM rt0, t1 WHERE (((NULL)AND(rt0.c2))) ORDER BY (((t1.c0 IN ())) BETWEEN (0.36844073863901927) AND (NULL COLLATE NOCASE)), ((rt0.c1)=(CAST(t1.c0 AS INTEGER))), CASE load_extension(rt0.c3, rt0.c0)  WHEN (~ (rt0.c0)) THEN (- (rt0.c2)) END ASC  NULLS LAST LIMIT 0;
SELECT * FROM t1, rt0 WHERE (PRINTF('1870053166', ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)), rt0.c2 COLLATE NOCASE)) ORDER BY UNLIKELY(LOWER(DISTINCT rt0.c4)) DESC  NULLS LAST, CAST(NULL AS NUMERIC) ASC, ((NULL)GLOB((((t1.c1, rt0.c3)) BETWEEN ((t1.c0, t1.c0)) AND ((rt0.c4, rt0.c3))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1, rt0 WHERE (((PRINTF('1870053166', ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)), rt0.c2 COLLATE NOCASE))AND(((rt0.c3 IN ()) IN (((rt0.c2) ISNULL), ROUND(rt0.c2, rt0.c1), LIKELY(DISTINCT x'2e35'), (NOT (rt0.c3))))))) ORDER BY UNLIKELY(LOWER(DISTINCT rt0.c4)) DESC  NULLS LAST, CAST(NULL AS NUMERIC) ASC, ((NULL)GLOB((((t1.c1, rt0.c3)) BETWEEN ((t1.c0, t1.c0)) AND ((rt0.c4, rt0.c3))))) DESC  NULLS LAST LIMIT 2;
SELECT * FROM t1, rt0 WHERE (PRINTF('1870053166', ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)), rt0.c2 COLLATE NOCASE)) ORDER BY UNLIKELY(LOWER(DISTINCT rt0.c4)) DESC  NULLS LAST, CAST(NULL AS NUMERIC) ASC, ((NULL)GLOB((((t1.c1, rt0.c3)) BETWEEN ((t1.c0, t1.c0)) AND ((rt0.c4, rt0.c3))))) DESC  NULLS LAST;
SELECT DISTINCT * FROM t1, rt0 WHERE (((PRINTF('1870053166', ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)), rt0.c2 COLLATE NOCASE))AND(((rt0.c3 IN ()) IN (((rt0.c2) ISNULL), ROUND(rt0.c2, rt0.c1), LIKELY(DISTINCT x'2e35'), (NOT (rt0.c3))))))) ORDER BY UNLIKELY(LOWER(DISTINCT rt0.c4)) DESC  NULLS LAST, CAST(NULL AS NUMERIC) ASC, ((NULL)GLOB((((t1.c1, rt0.c3)) BETWEEN ((t1.c0, t1.c0)) AND ((rt0.c4, rt0.c3))))) DESC  NULLS LAST LIMIT 2;
SELECT COUNT(*) FROM rt0, t1 WHERE (UPPER(DISTINCT (rt0.c1 IN (rt0.c2))));
SELECT COUNT(*) FROM rt0, t1 WHERE (((UPPER(DISTINCT (rt0.c1 IN (rt0.c2))))AND((((((rt0.c4, rt0.c0))>=((t1.c1, 'r|'))))GLOB(((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2))))))) ORDER BY x'', (((t1.c1 IN (t1.c1)))IS(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE -908364888 END)) ASC  NULLS LAST, ((TRIM(DISTINCT rt0.c1))&((((t1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4)))))  NULLS LAST;
SELECT ALL MIN(rt0.c1) FROM rt0, t1 WHERE ((((rt0.c4, rt0.c3)) BETWEEN ((json_array_length('k['), TRIM(DISTINCT rt0.c0))) AND ((rt0.c1 COLLATE RTRIM, CAST(rt0.c0 AS BLOB))))) ORDER BY ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1))) IS FALSE), ((((ABS(rt0.c4))AND('67369045')))AND(CAST(t1.c1 AS INTEGER))) DESC, ((0xffffffffcb8f9540)>=(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST;
SELECT MIN(rt0.c1) FROM rt0, t1 WHERE ((((((rt0.c4, rt0.c3)) BETWEEN ((json_array_length('k['), TRIM(DISTINCT rt0.c0))) AND ((rt0.c1 COLLATE RTRIM, CAST(rt0.c0 AS BLOB)))))AND(((((((rt0.c1 COLLATE RTRIM)AND((((t1.c0))<=((rt0.c2))))))AND((rt0.c1 IN (t1.c0, t1.c1)))))AND(((t1.c1) NOT BETWEEN (rt0.c1) AND (t1.c1))))))) ORDER BY ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1))) IS FALSE), ((((ABS(rt0.c4))AND('67369045')))AND(CAST(t1.c1 AS INTEGER))) DESC, ((-879782592)>=(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3)==(rt0.c3)), CAST(x'358d' AS NUMERIC), ((rt0.c1)<=(rt0.c4)), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END))>((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN x'3a8114bb' THEN rt0.c1 WHEN rt0.c2 THEN NULL ELSE rt0.c1 END, ((rt0.c2) NOTNULL), (x'a4eb26' IN ()))))) ORDER BY ((((((((CAST(0Xffffffff898cac18 AS BLOB))AND(((rt0.c1)<<(x'')))))AND(((rt0.c3)+(rt0.c0)))))AND(((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3)))))OR(((rt0.c2)|(rt0.c1))))  NULLS FIRST, (((((((((rt0.c4, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c4, rt0.c0)) AND ((rt0.c1, 0xffffffffca4ea410, rt0.c3))))OR(LIKELY(rt0.c1))))AND((rt0.c2 IN ()))))AND((rt0.c2 IN ())));
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c3)=(rt0.c3)), CAST(x'358d' AS NUMERIC), ((rt0.c1)<(rt0.c4)), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END))>((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN x'3a8114bb' THEN rt0.c1 WHEN rt0.c2 THEN NULL ELSE rt0.c1 END, ((rt0.c2) NOTNULL), (x'a4eb26' IN ())))))AND(''))) ORDER BY NULL  NULLS LAST, rt0.c4  NULLS FIRST LIMIT 0 INTERSECT SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)|(rt0.c4))) BETWEEN (rt0.c1) AND (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4))))) ORDER BY NULL  NULLS LAST, rt0.c4  NULLS FIRST LIMIT 0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3)==(rt0.c3)), CAST(x'358d' AS NUMERIC), ((rt0.c1)<=(rt0.c4)), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END))>((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN x'3a8114bb' THEN rt0.c1 WHEN rt0.c2 THEN NULL ELSE rt0.c1 END, ((rt0.c2) NOTNULL), (x'a4eb26' IN ()))))) ORDER BY ((((((((CAST(0Xffffffff898cac18 AS BLOB))AND(((rt0.c1)<<(x'')))))AND(((rt0.c3)+(rt0.c0)))))AND(((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3)))))OR(((rt0.c2)|(rt0.c1))))  NULLS FIRST, (((((((((rt0.c4, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c4, rt0.c0)) AND ((rt0.c1, 0xffffffffca4ea410, rt0.c3))))OR(LIKELY(rt0.c1))))AND((rt0.c2 IN ()))))AND((rt0.c2 IN ())));
SELECT MIN(rt0.c1) FROM rt0, t1 NOT INDEXED WHERE ((((((((((((rt0.c0)AND(rt0.c0)))OR(t1.c0)))AND(NULL)))OR(rt0.c4)))AND(rt0.c3)) IN (((t1.c1) BETWEEN (rt0.c1) AND (2.024476669E9))))) ORDER BY CAST(((((((((rt0.c2)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c4)) AS NUMERIC);
SELECT MIN(rt0.c1) FROM rt0, t1 WHERE ((((((((((((rt0.c0)AND(rt0.c0)))OR(t1.c0)))AND(NULL)))OR(rt0.c4)))AND(rt0.c3)) IN (((t1.c1) BETWEEN (rt0.c1) AND (2.024476669E9))))) ORDER BY ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))IS NOT((((rt0.c1, rt0.c0))>=((rt0.c2, t1.c1))))) DESC  NULLS FIRST, (((((t1.c1)%(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))<=((rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE BINARY))) DESC, (- (((rt0.c1) NOT NULL)))  NULLS FIRST INTERSECT SELECT MIN(rt0.c1) FROM rt0, t1 WHERE (UPPER(((rt0.c1) NOT BETWEEN (rt0.c4) AND (t1.c0)))) ORDER BY ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))IS NOT((((rt0.c1, rt0.c0))>=((rt0.c2, t1.c1))))) DESC  NULLS FIRST, (((((t1.c1)%(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))<=((rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE BINARY))) DESC, (- (((rt0.c1) NOT NULL)))  NULLS FIRST;
SELECT MAX(rt0.c0) FROM rt0, t1 WHERE (x'') ORDER BY ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT MAX(rt0.c0) FROM rt0, t1 WHERE (((x'')AND(((COALESCE(t1.c1, t1.c1))-(LIKELY(t1.c1)))))) ORDER BY ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY DESC  NULLS LAST LIMIT 0X1 INTERSECT SELECT MAX(rt0.c0) FROM rt0, t1 WHERE ('-1268134980') ORDER BY ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY DESC  NULLS LAST LIMIT 1;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((NOT (CASE WHEN t1.c1 THEN t1.c1 END))) ORDER BY LIKELY(((t1.c0)<<(t1.c0))), ((((t1.c1) NOTNULL)) NOT BETWEEN (CAST(t1.c0 AS REAL)) AND (((t1.c1)*(t1.c0))))  NULLS LAST;
SELECT ALL MIN(t1.c1) FROM t1 WHERE ((((NOT (CASE WHEN t1.c1 THEN t1.c1 END)))AND((((t1.c1 IN ()))LIKE(t1.c1))))) ORDER BY LIKELY(((t1.c0)<<(t1.c0))), ((((t1.c1) NOTNULL)) NOT BETWEEN (CAST(t1.c0 AS REAL)) AND (((t1.c1)*(t1.c0))))  NULLS LAST;
SELECT ALL MIN(rt0.c0) FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 ELSE -9.00409252E8 END)>=(((rt0.c1)<(rt0.c1)))));
SELECT MIN(rt0.c0) FROM rt0 WHERE (((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 ELSE -9.00409252E8 END)>=(((rt0.c1)<(rt0.c1)))))AND(UPPER(DISTINCT rt0.c4 COLLATE BINARY)))) LIMIT 0x0;
SELECT ALL MIN(rt0.c1) FROM rt0 INDEXED BY i43 WHERE (rt0.c2);
SELECT MIN(rt0.c1) FROM rt0 INDEXED BY i43 WHERE (((rt0.c2)AND(CASE WHEN ((0.33761658303424613)>>(rt0.c4)) THEN rt0.c1 COLLATE NOCASE END))) ORDER BY (NOT (rt0.c1 COLLATE NOCASE)) LIMIT 0x1;
SELECT * FROM t1 WHERE ((- (t1.c1)));
SELECT DISTINCT * FROM t1 WHERE ((- (t1.c1))) ORDER BY (((t1.c1, t1.c1)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((NULL)*(t1.c1)))) AND (((t1.c0 IN (t1.c1)), NULLIF(t1.c0, t1.c1)))) DESC, 0.030249593527314378 ASC, ((((((((((((((((t1.c0)OR(0.4171049803645084)))AND(t1.c1)))AND(t1.c0)))OR('1611323407')))AND((NOT (t1.c1)))))AND(t1.c1)))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOTNULL))&(t1.c1 COLLATE RTRIM))) ORDER BY (((t1.c1, t1.c1)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((NULL)*(t1.c1)))) AND (((t1.c0 IN (t1.c1)), NULLIF(t1.c0, t1.c1)))) DESC, 0.030249593527314378 ASC, ((((((((((((((((t1.c0)OR(0.4171049803645084)))AND(t1.c1)))AND(t1.c0)))OR('1611323407')))AND((NOT (t1.c1)))))AND(t1.c1)))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((- (t1.c1)));
SELECT DISTINCT * FROM t1 WHERE ((- (t1.c1))) ORDER BY (((t1.c1, t1.c1)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((NULL)*(t1.c1)))) AND (((t1.c0 IN (t1.c1)), NULLIF(t1.c0, t1.c1)))) DESC, 0.030249593527314378 ASC, ((((((((((((((((t1.c0)OR(0.4171049803645084)))AND(t1.c1)))AND(t1.c0)))OR('1611323407')))AND((NOT (t1.c1)))))AND(t1.c1)))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))) ASC  NULLS FIRST INTERSECT SELECT DISTINCT * FROM t1 WHERE (((((t1.c1) NOTNULL))&(t1.c1 COLLATE RTRIM))) ORDER BY (((t1.c1, t1.c1)) NOT BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (t1.c1)), ((NULL)*(t1.c1)))) AND (((t1.c0 IN (t1.c1)), NULLIF(t1.c0, t1.c1)))) DESC, 0.030249593527314378 ASC, ((((((((((((((((t1.c0)OR(0.4171049803645084)))AND(t1.c1)))AND(t1.c0)))OR('1611323407')))AND((NOT (t1.c1)))))AND(t1.c1)))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)))))OR(((((((((t1.c0)OR(t1.c1)))AND(t1.c0)))OR(t1.c1)))AND(t1.c0)))) ASC  NULLS FIRST;
SELECT ALL MAX(t1.c1) FROM t1 WHERE (((NOT (t1.c0)) IN ())) ORDER BY (((t1.c0 IN (t1.c1)))|((t1.c0 IN (x'52', t1.c1)))) DESC  NULLS LAST;
SELECT MAX(t1.c1) FROM t1 WHERE (((((NOT (t1.c0)) IN ()))AND('
.]0'))) ORDER BY (((t1.c0 IN (t1.c1)))|((t1.c0 IN (x'52', t1.c1)))) DESC  NULLS LAST LIMIT 0 INTERSECT SELECT ALL MAX(t1.c1) FROM t1 WHERE (((((t1.c1)&(t1.c1))) ISNULL)) ORDER BY (((t1.c0 IN (t1.c1)))|((t1.c0 IN (x'52', t1.c1)))) DESC  NULLS LAST LIMIT 0X0;
SELECT * FROM rt0, t1 WHERE (CASE WHEN (t1.c1 IN (t1.c0)) THEN CASE WHEN rt0.c1 THEN 2.144449229E9 END WHEN rt0.c2 THEN NULL WHEN ((t1.c0)LIKE(t1.c1)) THEN ((rt0.c1)-(rt0.c4)) ELSE (- (t1.c0)) END) ORDER BY MAX((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c4, rt0.c3)) AND ((rt0.c4, t1.c0))), ((rt0.c1)!=(rt0.c1))), (((+ (rt0.c1)))!=(((rt0.c2)<(t1.c1)))), ((rt0.c0 COLLATE RTRIM)>=(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) DESC;
SELECT DISTINCT * FROM rt0, t1 WHERE (CASE WHEN (t1.c1 IN (t1.c0)) THEN CASE WHEN rt0.c1 THEN 2.144449229E9 END WHEN rt0.c2 THEN NULL WHEN ((t1.c0)LIKE(t1.c1)) THEN ((rt0.c1)-(rt0.c4)) ELSE (- (t1.c0)) END) ORDER BY MAX((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c4, rt0.c3)) AND ((rt0.c4, t1.c0))), ((rt0.c1)!=(rt0.c1))), (((+ (rt0.c1)))<>(((rt0.c2)<(t1.c1)))), ((rt0.c0 COLLATE RTRIM)>=(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) DESC;
SELECT * FROM rt0, t1 WHERE (CASE WHEN (t1.c1 IN (t1.c0)) THEN CASE WHEN rt0.c1 THEN 2.144449229E9 END WHEN rt0.c2 THEN NULL WHEN ((t1.c0)LIKE(t1.c1)) THEN ((rt0.c1)-(rt0.c4)) ELSE (- (t1.c0)) END) ORDER BY MAX((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c4, rt0.c3)) AND ((rt0.c4, t1.c0))), ((rt0.c1)!=(rt0.c1))), (((+ (rt0.c1)))!=(((rt0.c2)<(t1.c1)))), ((rt0.c0 COLLATE RTRIM)>=(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) DESC;
SELECT DISTINCT * FROM rt0, t1 WHERE (CASE WHEN (t1.c1 IN (t1.c0)) THEN CASE WHEN rt0.c1 THEN 2.144449229E9 END WHEN rt0.c2 THEN NULL WHEN ((t1.c0)LIKE(t1.c1)) THEN ((rt0.c1)-(rt0.c4)) ELSE (- (t1.c0)) END) ORDER BY MAX((((rt0.c3, rt0.c3)) BETWEEN ((rt0.c4, rt0.c3)) AND ((rt0.c4, t1.c0))), ((rt0.c1)!=(rt0.c1))), (((+ (rt0.c1)))<>(((rt0.c2)<(t1.c1)))), ((rt0.c0 COLLATE RTRIM)>=(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) DESC;
SELECT MAX(rt0.c4) FROM rt0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c1)||(rt0.c1)) THEN (- (rt0.c4)) WHEN LOWER(rt0.c0) THEN rt0.c3 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END) ORDER BY ((211013158)LIKE(((rt0.c0) NOTNULL)));
SELECT DISTINCT MAX(rt0.c4) FROM rt0 WHERE (((CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c1)||(rt0.c1)) THEN (- (rt0.c4)) WHEN LOWER(rt0.c0) THEN rt0.c3 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END)AND(ABS(((rt0.c2)/(rt0.c4)))))) ORDER BY ((211013158)LIKE(((rt0.c0) NOTNULL))) LIMIT 0;
SELECT MIN(t1.c0) FROM t1 WHERE ((((t1.c1, t1.c0 COLLATE NOCASE))=((NULLIF(DISTINCT NULL, t1.c0), ((t1.c0)IS(t1.c0))))));
SELECT ALL MIN(t1.c0) FROM t1 WHERE ((((t1.c1, t1.c0 COLLATE NOCASE))=((NULLIF(DISTINCT NULL, t1.c0), ((t1.c0)IS(t1.c0)))))) ORDER BY (((((((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))))OR((- (t1.c0)))))OR(t1.c0 COLLATE BINARY)))AND(json_valid(t1.c0))) ASC  NULLS LAST INTERSECT SELECT ALL MIN(t1.c0) FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)OR(t1.c1)))OR(CAST(t1.c0 AS INTEGER)))) ORDER BY (((((((((t1.c1, t1.c1)) BETWEEN ((t1.c0, t1.c1)) AND ((t1.c0, t1.c0))))OR((- (t1.c0)))))OR(t1.c0 COLLATE BINARY)))AND(json_valid(t1.c0))) ASC  NULLS LAST;
SELECT ALL MAX(t1.c0) FROM t1 WHERE ((((~ ('183377622'))) NOT NULL));
SELECT MAX(t1.c0) FROM t1 WHERE ((((((~ ('183377622'))) NOT NULL))AND(((((((((t1.c0) NOTNULL))OR(((t1.c1)AND(t1.c1)))))AND(CASE t1.c1  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN -838203329 ELSE t1.c0 END)))AND(((((t1.c0)OR(t1.c0)))OR(t1.c0)))))));
